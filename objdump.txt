
vigil.exe:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000350 <.interp>:
 350:	2f                   	(bad)  
 351:	6c                   	ins    BYTE PTR es:[rdi],dx
 352:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 359:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 35e:	78 2d                	js     38d <buffer.0+0x30d>
 360:	78 38                	js     39a <buffer.0+0x31a>
 362:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 368:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 369:	2e 32 00             	cs xor al,BYTE PTR [rax]

Disassembly of section .note.gnu.property:

0000000000000370 <.note.gnu.property>:
 370:	04 00                	add    al,0x0
 372:	00 00                	add    BYTE PTR [rax],al
 374:	20 00                	and    BYTE PTR [rax],al
 376:	00 00                	add    BYTE PTR [rax],al
 378:	05 00 00 00 47       	add    eax,0x47000000
 37d:	4e 55                	rex.WRX push rbp
 37f:	00 02                	add    BYTE PTR [rdx],al
 381:	00 00                	add    BYTE PTR [rax],al
 383:	c0 04 00 00          	rol    BYTE PTR [rax+rax*1],0x0
 387:	00 03                	add    BYTE PTR [rbx],al
 389:	00 00                	add    BYTE PTR [rax],al
 38b:	00 00                	add    BYTE PTR [rax],al
 38d:	00 00                	add    BYTE PTR [rax],al
 38f:	00 02                	add    BYTE PTR [rdx],al
 391:	80 00 c0             	add    BYTE PTR [rax],0xc0
 394:	04 00                	add    al,0x0
 396:	00 00                	add    BYTE PTR [rax],al
 398:	01 00                	add    DWORD PTR [rax],eax
 39a:	00 00                	add    BYTE PTR [rax],al
 39c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

00000000000003a0 <.note.gnu.build-id>:
 3a0:	04 00                	add    al,0x0
 3a2:	00 00                	add    BYTE PTR [rax],al
 3a4:	14 00                	adc    al,0x0
 3a6:	00 00                	add    BYTE PTR [rax],al
 3a8:	03 00                	add    eax,DWORD PTR [rax]
 3aa:	00 00                	add    BYTE PTR [rax],al
 3ac:	47                   	rex.RXB
 3ad:	4e 55                	rex.WRX push rbp
 3af:	00 f3                	add    bl,dh
 3b1:	d7                   	xlat   BYTE PTR ds:[rbx]
 3b2:	c7                   	(bad)  
 3b3:	d2 7e 41             	sar    BYTE PTR [rsi+0x41],cl
 3b6:	9a                   	(bad)  
 3b7:	4c f5                	rex.WR cmc 
 3b9:	78 15                	js     3d0 <__abi_tag+0xc>
 3bb:	72 b6                	jb     373 <buffer.0+0x2f3>
 3bd:	fb                   	sti    
 3be:	38 db                	cmp    bl,bl
 3c0:	2f                   	(bad)  
 3c1:	df                   	.byte 0xdf
 3c2:	7c 6b                	jl     42f <__abi_tag+0x6b>

Disassembly of section .note.ABI-tag:

00000000000003c4 <__abi_tag>:
 3c4:	04 00                	add    al,0x0
 3c6:	00 00                	add    BYTE PTR [rax],al
 3c8:	10 00                	adc    BYTE PTR [rax],al
 3ca:	00 00                	add    BYTE PTR [rax],al
 3cc:	01 00                	add    DWORD PTR [rax],eax
 3ce:	00 00                	add    BYTE PTR [rax],al
 3d0:	47                   	rex.RXB
 3d1:	4e 55                	rex.WRX push rbp
 3d3:	00 00                	add    BYTE PTR [rax],al
 3d5:	00 00                	add    BYTE PTR [rax],al
 3d7:	00 03                	add    BYTE PTR [rbx],al
 3d9:	00 00                	add    BYTE PTR [rax],al
 3db:	00 02                	add    BYTE PTR [rdx],al
 3dd:	00 00                	add    BYTE PTR [rax],al
 3df:	00 00                	add    BYTE PTR [rax],al
 3e1:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .gnu.hash:

00000000000003e8 <.gnu.hash>:
 3e8:	03 00                	add    eax,DWORD PTR [rax]
 3ea:	00 00                	add    BYTE PTR [rax],al
 3ec:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
 3ef:	00 01                	add    BYTE PTR [rcx],al
 3f1:	00 00                	add    BYTE PTR [rax],al
 3f3:	00 06                	add    BYTE PTR [rsi],al
 3f5:	00 00                	add    BYTE PTR [rax],al
 3f7:	00 00                	add    BYTE PTR [rax],al
 3f9:	14 81                	adc    al,0x81
 3fb:	00 00                	add    BYTE PTR [rax],al
 3fd:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 400:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
 403:	00 00                	add    BYTE PTR [rax],al
 405:	00 00                	add    BYTE PTR [rax],al
 407:	00 48 00             	add    BYTE PTR [rax+0x0],cl
 40a:	00 00                	add    BYTE PTR [rax],al
 40c:	d1 65 ce             	shl    DWORD PTR [rbp-0x32],1
 40f:	6d                   	ins    DWORD PTR es:[rdi],dx
 410:	32 b3 f0 a9 b3 a2    	xor    dh,BYTE PTR [rbx-0x5d4c5610]
 416:	f7 12                	not    DWORD PTR [rdx]

Disassembly of section .dynsym:

0000000000000418 <.dynsym>:
	...
 430:	88 00                	mov    BYTE PTR [rax],al
 432:	00 00                	add    BYTE PTR [rax],al
 434:	12 00                	adc    al,BYTE PTR [rax]
	...
 446:	00 00                	add    BYTE PTR [rax],al
 448:	41 01 00             	add    DWORD PTR [r8],eax
 44b:	00 12                	add    BYTE PTR [rdx],dl
	...
 45d:	00 00                	add    BYTE PTR [rax],al
 45f:	00 8a 01 00 00 12    	add    BYTE PTR [rdx+0x12000001],cl
	...
 475:	00 00                	add    BYTE PTR [rax],al
 477:	00 dd                	add    ch,bl
 479:	01 00                	add    DWORD PTR [rax],eax
 47b:	00 12                	add    BYTE PTR [rdx],dl
	...
 48d:	00 00                	add    BYTE PTR [rax],al
 48f:	00 48 02             	add    BYTE PTR [rax+0x2],cl
 492:	00 00                	add    BYTE PTR [rax],al
 494:	12 00                	adc    al,BYTE PTR [rax]
	...
 4a6:	00 00                	add    BYTE PTR [rax],al
 4a8:	c5 01 00             	(bad)
 4ab:	00 12                	add    BYTE PTR [rdx],dl
	...
 4bd:	00 00                	add    BYTE PTR [rax],al
 4bf:	00 90 00 00 00 12    	add    BYTE PTR [rax+0x12000000],dl
	...
 4d5:	00 00                	add    BYTE PTR [rax],al
 4d7:	00 01                	add    BYTE PTR [rcx],al
 4d9:	01 00                	add    DWORD PTR [rax],eax
 4db:	00 12                	add    BYTE PTR [rdx],dl
	...
 4ed:	00 00                	add    BYTE PTR [rax],al
 4ef:	00 1d 00 00 00 20    	add    BYTE PTR [rip+0x20000000],bl        # 200004f5 <_end+0x1fec54ed>
	...
 505:	00 00                	add    BYTE PTR [rax],al
 507:	00 92 01 00 00 12    	add    BYTE PTR [rdx+0x12000001],dl
	...
 51d:	00 00                	add    BYTE PTR [rax],al
 51f:	00 42 02             	add    BYTE PTR [rdx+0x2],al
 522:	00 00                	add    BYTE PTR [rax],al
 524:	12 00                	adc    al,BYTE PTR [rax]
	...
 536:	00 00                	add    BYTE PTR [rax],al
 538:	7d 02                	jge    53c <__abi_tag+0x178>
 53a:	00 00                	add    BYTE PTR [rax],al
 53c:	12 00                	adc    al,BYTE PTR [rax]
	...
 54e:	00 00                	add    BYTE PTR [rax],al
 550:	75 02                	jne    554 <__abi_tag+0x190>
 552:	00 00                	add    BYTE PTR [rax],al
 554:	12 00                	adc    al,BYTE PTR [rax]
	...
 566:	00 00                	add    BYTE PTR [rax],al
 568:	7b 00                	jnp    56a <__abi_tag+0x1a6>
 56a:	00 00                	add    BYTE PTR [rax],al
 56c:	12 00                	adc    al,BYTE PTR [rax]
	...
 57e:	00 00                	add    BYTE PTR [rax],al
 580:	b0 01                	mov    al,0x1
 582:	00 00                	add    BYTE PTR [rax],al
 584:	12 00                	adc    al,BYTE PTR [rax]
	...
 596:	00 00                	add    BYTE PTR [rax],al
 598:	24 01                	and    al,0x1
 59a:	00 00                	add    BYTE PTR [rax],al
 59c:	12 00                	adc    al,BYTE PTR [rax]
	...
 5ae:	00 00                	add    BYTE PTR [rax],al
 5b0:	eb 01                	jmp    5b3 <__abi_tag+0x1ef>
 5b2:	00 00                	add    BYTE PTR [rax],al
 5b4:	12 00                	adc    al,BYTE PTR [rax]
	...
 5c6:	00 00                	add    BYTE PTR [rax],al
 5c8:	3a 01                	cmp    al,BYTE PTR [rcx]
 5ca:	00 00                	add    BYTE PTR [rax],al
 5cc:	12 00                	adc    al,BYTE PTR [rax]
	...
 5de:	00 00                	add    BYTE PTR [rax],al
 5e0:	aa                   	stos   BYTE PTR es:[rdi],al
 5e1:	01 00                	add    DWORD PTR [rax],eax
 5e3:	00 12                	add    BYTE PTR [rdx],dl
	...
 5f5:	00 00                	add    BYTE PTR [rax],al
 5f7:	00 51 02             	add    BYTE PTR [rcx+0x2],dl
 5fa:	00 00                	add    BYTE PTR [rax],al
 5fc:	12 00                	adc    al,BYTE PTR [rax]
	...
 60e:	00 00                	add    BYTE PTR [rax],al
 610:	50                   	push   rax
 611:	00 00                	add    BYTE PTR [rax],al
 613:	00 12                	add    BYTE PTR [rdx],dl
	...
 625:	00 00                	add    BYTE PTR [rax],al
 627:	00 93 02 00 00 12    	add    BYTE PTR [rbx+0x12000002],dl
	...
 63d:	00 00                	add    BYTE PTR [rax],al
 63f:	00 6e 00             	add    BYTE PTR [rsi+0x0],ch
 642:	00 00                	add    BYTE PTR [rax],al
 644:	12 00                	adc    al,BYTE PTR [rax]
	...
 656:	00 00                	add    BYTE PTR [rax],al
 658:	a3 00 00 00 12 00 00 	movabs ds:0x12000000,eax
 65f:	00 00 
	...
 66d:	00 00                	add    BYTE PTR [rax],al
 66f:	00 01                	add    BYTE PTR [rcx],al
 671:	00 00                	add    BYTE PTR [rax],al
 673:	00 20                	add    BYTE PTR [rax],ah
	...
 685:	00 00                	add    BYTE PTR [rax],al
 687:	00 02                	add    BYTE PTR [rdx],al
 689:	02 00                	add    al,BYTE PTR [rax]
 68b:	00 12                	add    BYTE PTR [rdx],dl
	...
 69d:	00 00                	add    BYTE PTR [rax],al
 69f:	00 56 01             	add    BYTE PTR [rsi+0x1],dl
 6a2:	00 00                	add    BYTE PTR [rax],al
 6a4:	12 00                	adc    al,BYTE PTR [rax]
	...
 6b6:	00 00                	add    BYTE PTR [rax],al
 6b8:	76 00                	jbe    6ba <__abi_tag+0x2f6>
 6ba:	00 00                	add    BYTE PTR [rax],al
 6bc:	12 00                	adc    al,BYTE PTR [rax]
	...
 6ce:	00 00                	add    BYTE PTR [rax],al
 6d0:	19 02                	sbb    DWORD PTR [rdx],eax
 6d2:	00 00                	add    BYTE PTR [rax],al
 6d4:	12 00                	adc    al,BYTE PTR [rax]
	...
 6e6:	00 00                	add    BYTE PTR [rax],al
 6e8:	2c 00                	sub    al,0x0
 6ea:	00 00                	add    BYTE PTR [rax],al
 6ec:	20 00                	and    BYTE PTR [rax],al
	...
 6fe:	00 00                	add    BYTE PTR [rax],al
 700:	59                   	pop    rcx
 701:	02 00                	add    al,BYTE PTR [rax]
 703:	00 12                	add    BYTE PTR [rdx],dl
	...
 715:	00 00                	add    BYTE PTR [rax],al
 717:	00 2f                	add    BYTE PTR [rdi],ch
 719:	02 00                	add    al,BYTE PTR [rax]
 71b:	00 12                	add    BYTE PTR [rdx],dl
	...
 72d:	00 00                	add    BYTE PTR [rax],al
 72f:	00 1e                	add    BYTE PTR [rsi],bl
 731:	01 00                	add    DWORD PTR [rax],eax
 733:	00 12                	add    BYTE PTR [rdx],dl
	...
 745:	00 00                	add    BYTE PTR [rax],al
 747:	00 18                	add    BYTE PTR [rax],bl
 749:	01 00                	add    DWORD PTR [rax],eax
 74b:	00 12                	add    BYTE PTR [rdx],dl
	...
 75d:	00 00                	add    BYTE PTR [rax],al
 75f:	00 20                	add    BYTE PTR [rax],ah
 761:	02 00                	add    al,BYTE PTR [rax]
 763:	00 12                	add    BYTE PTR [rdx],dl
	...
 775:	00 00                	add    BYTE PTR [rax],al
 777:	00 d5                	add    ch,dl
 779:	00 00                	add    BYTE PTR [rax],al
 77b:	00 12                	add    BYTE PTR [rdx],dl
	...
 78d:	00 00                	add    BYTE PTR [rax],al
 78f:	00 fb                	add    bl,bh
 791:	01 00                	add    DWORD PTR [rax],eax
 793:	00 12                	add    BYTE PTR [rdx],dl
	...
 7a5:	00 00                	add    BYTE PTR [rax],al
 7a7:	00 67 02             	add    BYTE PTR [rdi+0x2],ah
 7aa:	00 00                	add    BYTE PTR [rax],al
 7ac:	12 00                	adc    al,BYTE PTR [rax]
	...
 7be:	00 00                	add    BYTE PTR [rax],al
 7c0:	91                   	xchg   ecx,eax
 7c1:	01 00                	add    DWORD PTR [rax],eax
 7c3:	00 12                	add    BYTE PTR [rdx],dl
	...
 7d5:	00 00                	add    BYTE PTR [rax],al
 7d7:	00 d6                	add    dh,dl
 7d9:	01 00                	add    DWORD PTR [rax],eax
 7db:	00 12                	add    BYTE PTR [rdx],dl
	...
 7ed:	00 00                	add    BYTE PTR [rax],al
 7ef:	00 ae 00 00 00 12    	add    BYTE PTR [rsi+0x12000000],ch
	...
 805:	00 00                	add    BYTE PTR [rax],al
 807:	00 a5 01 00 00 12    	add    BYTE PTR [rbp+0x12000001],ah
	...
 81d:	00 00                	add    BYTE PTR [rax],al
 81f:	00 68 01             	add    BYTE PTR [rax+0x1],ch
 822:	00 00                	add    BYTE PTR [rax],al
 824:	12 00                	adc    al,BYTE PTR [rax]
	...
 836:	00 00                	add    BYTE PTR [rax],al
 838:	9e                   	sahf   
 839:	01 00                	add    DWORD PTR [rax],eax
 83b:	00 12                	add    BYTE PTR [rdx],dl
	...
 84d:	00 00                	add    BYTE PTR [rax],al
 84f:	00 29                	add    BYTE PTR [rcx],ch
 851:	01 00                	add    DWORD PTR [rax],eax
 853:	00 12                	add    BYTE PTR [rdx],dl
	...
 865:	00 00                	add    BYTE PTR [rax],al
 867:	00 e0                	add    al,ah
 869:	00 00                	add    BYTE PTR [rax],al
 86b:	00 12                	add    BYTE PTR [rdx],dl
	...
 87d:	00 00                	add    BYTE PTR [rax],al
 87f:	00 bd 00 00 00 12    	add    BYTE PTR [rbp+0x12000000],bh
	...
 895:	00 00                	add    BYTE PTR [rax],al
 897:	00 97 01 00 00 12    	add    BYTE PTR [rdi+0x12000001],dl
	...
 8ad:	00 00                	add    BYTE PTR [rax],al
 8af:	00 eb                	add    bl,ch
 8b1:	00 00                	add    BYTE PTR [rax],al
 8b3:	00 12                	add    BYTE PTR [rdx],dl
	...
 8c5:	00 00                	add    BYTE PTR [rax],al
 8c7:	00 82 02 00 00 12    	add    BYTE PTR [rdx+0x12000002],al
	...
 8dd:	00 00                	add    BYTE PTR [rax],al
 8df:	00 82 01 00 00 12    	add    BYTE PTR [rdx+0x12000001],al
	...
 8f5:	00 00                	add    BYTE PTR [rax],al
 8f7:	00 f9                	add    cl,bh
 8f9:	00 00                	add    BYTE PTR [rax],al
 8fb:	00 12                	add    BYTE PTR [rdx],dl
	...
 90d:	00 00                	add    BYTE PTR [rax],al
 90f:	00 be 01 00 00 12    	add    BYTE PTR [rsi+0x12000001],bh
	...
 925:	00 00                	add    BYTE PTR [rax],al
 927:	00 cf                	add    bh,cl
 929:	01 00                	add    DWORD PTR [rax],eax
 92b:	00 12                	add    BYTE PTR [rdx],dl
	...
 93d:	00 00                	add    BYTE PTR [rax],al
 93f:	00 cb                	add    bl,cl
 941:	00 00                	add    BYTE PTR [rax],al
 943:	00 12                	add    BYTE PTR [rdx],dl
	...
 955:	00 00                	add    BYTE PTR [rax],al
 957:	00 5f 00             	add    BYTE PTR [rdi+0x0],bl
 95a:	00 00                	add    BYTE PTR [rax],al
 95c:	12 00                	adc    al,BYTE PTR [rax]
	...
 96e:	00 00                	add    BYTE PTR [rax],al
 970:	b7 01                	mov    bh,0x1
 972:	00 00                	add    BYTE PTR [rax],al
 974:	12 00                	adc    al,BYTE PTR [rax]
	...
 986:	00 00                	add    BYTE PTR [rax],al
 988:	11 02                	adc    DWORD PTR [rdx],eax
 98a:	00 00                	add    BYTE PTR [rax],al
 98c:	12 00                	adc    al,BYTE PTR [rax]
	...
 99e:	00 00                	add    BYTE PTR [rax],al
 9a0:	4e 01 00             	rex.WRX add QWORD PTR [rax],r8
 9a3:	00 12                	add    BYTE PTR [rdx],dl
	...
 9b5:	00 00                	add    BYTE PTR [rax],al
 9b7:	00 37                	add    BYTE PTR [rdi],dh
 9b9:	02 00                	add    al,BYTE PTR [rax]
 9bb:	00 12                	add    BYTE PTR [rdx],dl
	...
 9cd:	00 00                	add    BYTE PTR [rax],al
 9cf:	00 46 00             	add    BYTE PTR [rsi+0x0],al
 9d2:	00 00                	add    BYTE PTR [rax],al
 9d4:	12 00                	adc    al,BYTE PTR [rax]
	...
 9e6:	00 00                	add    BYTE PTR [rax],al
 9e8:	3c 02                	cmp    al,0x2
 9ea:	00 00                	add    BYTE PTR [rax],al
 9ec:	12 00                	adc    al,BYTE PTR [rax]
	...
 9fe:	00 00                	add    BYTE PTR [rax],al
 a00:	60                   	(bad)  
 a01:	02 00                	add    al,BYTE PTR [rax]
 a03:	00 12                	add    BYTE PTR [rdx],dl
	...
 a15:	00 00                	add    BYTE PTR [rax],al
 a17:	00 89 01 00 00 12    	add    BYTE PTR [rcx+0x12000001],cl
	...
 a2d:	00 00                	add    BYTE PTR [rax],al
 a2f:	00 30                	add    BYTE PTR [rax],dh
 a31:	01 00                	add    DWORD PTR [rax],eax
 a33:	00 12                	add    BYTE PTR [rdx],dl
	...
 a45:	00 00                	add    BYTE PTR [rax],al
 a47:	00 26                	add    BYTE PTR [rsi],ah
 a49:	02 00                	add    al,BYTE PTR [rax]
 a4b:	00 12                	add    BYTE PTR [rdx],dl
	...
 a5d:	00 00                	add    BYTE PTR [rax],al
 a5f:	00 70 01             	add    BYTE PTR [rax+0x1],dh
 a62:	00 00                	add    BYTE PTR [rax],al
 a64:	12 00                	adc    al,BYTE PTR [rax]
	...
 a76:	00 00                	add    BYTE PTR [rax],al
 a78:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 a79:	02 00                	add    al,BYTE PTR [rax]
 a7b:	00 12                	add    BYTE PTR [rdx],dl
	...
 a8d:	00 00                	add    BYTE PTR [rax],al
 a8f:	00 96 00 00 00 12    	add    BYTE PTR [rsi+0x12000000],dl
	...
 aa5:	00 00                	add    BYTE PTR [rax],al
 aa7:	00 35 01 00 00 12    	add    BYTE PTR [rip+0x12000001],dh        # 12000aae <_end+0x11ec5aa6>
	...
 abd:	00 00                	add    BYTE PTR [rax],al
 abf:	00 09                	add    BYTE PTR [rcx],cl
 ac1:	01 00                	add    DWORD PTR [rax],eax
 ac3:	00 22                	add    BYTE PTR [rdx],ah
	...
 ad5:	00 00                	add    BYTE PTR [rax],al
 ad7:	00 f3                	add    bl,dh
 ad9:	01 00                	add    DWORD PTR [rax],eax
 adb:	00 12                	add    BYTE PTR [rdx],dl
 add:	00 10                	add    BYTE PTR [rax],dl
 adf:	00 af 91 00 00 00    	add    BYTE PTR [rdi+0x91],ch
 ae5:	00 00                	add    BYTE PTR [rax],al
 ae7:	00 3a                	add    BYTE PTR [rdx],bh
 ae9:	01 00                	add    DWORD PTR [rax],eax
 aeb:	00 00                	add    BYTE PTR [rax],al
 aed:	00 00                	add    BYTE PTR [rax],al
 aef:	00 e4                	add    ah,ah
 af1:	01 00                	add    DWORD PTR [rax],eax
 af3:	00 11                	add    BYTE PTR [rcx],dl
 af5:	00 1b                	add    BYTE PTR [rbx],bl
 af7:	00 60 10             	add    BYTE PTR [rax+0x10],ah
 afa:	01 00                	add    DWORD PTR [rax],eax
 afc:	00 00                	add    BYTE PTR [rax],al
 afe:	00 00                	add    BYTE PTR [rax],al
 b00:	08 00                	or     BYTE PTR [rax],al
 b02:	00 00                	add    BYTE PTR [rax],al
 b04:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynstr:

0000000000000b08 <.dynstr>:
 b08:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 b0b:	54                   	push   rsp
 b0c:	4d 5f                	rex.WRB pop r15
 b0e:	64 65 72 65          	fs gs jb b77 <__abi_tag+0x7b3>
 b12:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 b19:	4d 
 b1a:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 b1c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b1d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b1e:	65 54                	gs push rsp
 b20:	61                   	(bad)  
 b21:	62                   	(bad)  
 b22:	6c                   	ins    BYTE PTR es:[rdi],dx
 b23:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
 b27:	67 6d                	ins    DWORD PTR es:[edi],dx
 b29:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b2a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b2b:	5f                   	pop    rdi
 b2c:	73 74                	jae    ba2 <__abi_tag+0x7de>
 b2e:	61                   	(bad)  
 b2f:	72 74                	jb     ba5 <__abi_tag+0x7e1>
 b31:	5f                   	pop    rdi
 b32:	5f                   	pop    rdi
 b33:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 b36:	54                   	push   rsp
 b37:	4d 5f                	rex.WRB pop r15
 b39:	72 65                	jb     ba0 <__abi_tag+0x7dc>
 b3b:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 b42:	4d 
 b43:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 b45:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b46:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b47:	65 54                	gs push rsp
 b49:	61                   	(bad)  
 b4a:	62                   	(bad)  
 b4b:	6c                   	ins    BYTE PTR es:[rdi],dx
 b4c:	65 00 70 63          	add    BYTE PTR gs:[rax+0x63],dh
 b50:	61                   	(bad)  
 b51:	70 5f                	jo     bb2 <__abi_tag+0x7ee>
 b53:	6c                   	ins    BYTE PTR es:[rdi],dx
 b54:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b55:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b56:	70 00                	jo     b58 <__abi_tag+0x794>
 b58:	70 63                	jo     bbd <__abi_tag+0x7f9>
 b5a:	61                   	(bad)  
 b5b:	70 5f                	jo     bbc <__abi_tag+0x7f8>
 b5d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b5e:	70 65                	jo     bc5 <__abi_tag+0x801>
 b60:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b61:	5f                   	pop    rdi
 b62:	6c                   	ins    BYTE PTR es:[rdi],dx
 b63:	69 76 65 00 73 71 6c 	imul   esi,DWORD PTR [rsi+0x65],0x6c717300
 b6a:	69 74 65 33 5f 65 72 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x7272655f
 b71:	72 
 b72:	6d                   	ins    DWORD PTR es:[rdi],dx
 b73:	73 67                	jae    bdc <__abi_tag+0x818>
 b75:	00 73 71             	add    BYTE PTR [rbx+0x71],dh
 b78:	6c                   	ins    BYTE PTR es:[rdi],dx
 b79:	69 74 65 33 5f 66 72 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6572665f
 b80:	65 
 b81:	65 00 73 71          	add    BYTE PTR gs:[rbx+0x71],dh
 b85:	6c                   	ins    BYTE PTR es:[rdi],dx
 b86:	69 74 65 33 5f 65 78 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6578655f
 b8d:	65 
 b8e:	63 00                	movsxd eax,DWORD PTR [rax]
 b90:	73 71                	jae    c03 <__abi_tag+0x83f>
 b92:	6c                   	ins    BYTE PTR es:[rdi],dx
 b93:	69 74 65 33 5f 63 6c 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6f6c635f
 b9a:	6f 
 b9b:	73 65                	jae    c02 <__abi_tag+0x83e>
 b9d:	00 73 71             	add    BYTE PTR [rbx+0x71],dh
 ba0:	6c                   	ins    BYTE PTR es:[rdi],dx
 ba1:	69 74 65 33 5f 6f 70 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x65706f5f
 ba8:	65 
 ba9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 baa:	00 6c 75 61          	add    BYTE PTR [rbp+rsi*2+0x61],ch
 bae:	5f                   	pop    rdi
 baf:	73 65                	jae    c16 <__abi_tag+0x852>
 bb1:	74 74                	je     c27 <__abi_tag+0x863>
 bb3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bb4:	70 00                	jo     bb6 <__abi_tag+0x7f2>
 bb6:	6c                   	ins    BYTE PTR es:[rdi],dx
 bb7:	75 61                	jne    c1a <__abi_tag+0x856>
 bb9:	4c 5f                	rex.WR pop rdi
 bbb:	6c                   	ins    BYTE PTR es:[rdi],dx
 bbc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bbd:	61                   	(bad)  
 bbe:	64 66 69 6c 65 78 00 	imul   bp,WORD PTR fs:[rbp+riz*2+0x78],0x6c00
 bc5:	6c 
 bc6:	75 61                	jne    c29 <__abi_tag+0x865>
 bc8:	4c 5f                	rex.WR pop rdi
 bca:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 bcb:	65 77 73             	gs ja  c41 <__abi_tag+0x87d>
 bce:	74 61                	je     c31 <__abi_tag+0x86d>
 bd0:	74 65                	je     c37 <__abi_tag+0x873>
 bd2:	00 6c 75 61          	add    BYTE PTR [rbp+rsi*2+0x61],ch
 bd6:	5f                   	pop    rdi
 bd7:	63 6c 6f 73          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
 bdb:	65 00 6c 75 61       	add    BYTE PTR gs:[rbp+rsi*2+0x61],ch
 be0:	5f                   	pop    rdi
 be1:	70 63                	jo     c46 <__abi_tag+0x882>
 be3:	61                   	(bad)  
 be4:	6c                   	ins    BYTE PTR es:[rdi],dx
 be5:	6c                   	ins    BYTE PTR es:[rdi],dx
 be6:	6b 00 6c             	imul   eax,DWORD PTR [rax],0x6c
 be9:	75 61                	jne    c4c <__abi_tag+0x888>
 beb:	5f                   	pop    rdi
 bec:	67 65 74 74          	addr32 gs je c64 <__abi_tag+0x8a0>
 bf0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bf1:	70 00                	jo     bf3 <__abi_tag+0x82f>
 bf3:	6c                   	ins    BYTE PTR es:[rdi],dx
 bf4:	75 61                	jne    c57 <__abi_tag+0x893>
 bf6:	4c 5f                	rex.WR pop rdi
 bf8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bf9:	70 65                	jo     c60 <__abi_tag+0x89c>
 bfb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 bfc:	6c                   	ins    BYTE PTR es:[rdi],dx
 bfd:	69 62 73 00 67 65 74 	imul   esp,DWORD PTR [rdx+0x73],0x74656700
 c04:	6c                   	ins    BYTE PTR es:[rdi],dx
 c05:	69 6e 65 00 73 74 72 	imul   ebp,DWORD PTR [rsi+0x65],0x72747300
 c0c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c0d:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
 c10:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 c13:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
 c16:	5f                   	pop    rdi
 c17:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 c1d:	7a 65                	jp     c84 <__abi_tag+0x8c0>
 c1f:	00 6e 74             	add    BYTE PTR [rsi+0x74],ch
 c22:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c23:	68 6c 00 6e 74       	push   0x746e006c
 c28:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c29:	68 73 00 72 65       	push   0x65720073
 c2e:	61                   	(bad)  
 c2f:	64 00 73 74          	add    BYTE PTR fs:[rbx+0x74],dh
 c33:	72 63                	jb     c98 <__abi_tag+0x8d4>
 c35:	68 72 00 6c 6f       	push   0x6f6c0072
 c3a:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
 c3d:	74 69                	je     ca8 <__abi_tag+0x8e4>
 c3f:	6d                   	ins    DWORD PTR es:[rdi],dx
 c40:	65 00 6d 61          	add    BYTE PTR gs:[rbp+0x61],ch
 c44:	6c                   	ins    BYTE PTR es:[rdi],dx
 c45:	6c                   	ins    BYTE PTR es:[rdi],dx
 c46:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c47:	63 00                	movsxd eax,DWORD PTR [rax]
 c49:	70 74                	jo     cbf <__abi_tag+0x8fb>
 c4b:	68 72 65 61 64       	push   0x64616572
 c50:	5f                   	pop    rdi
 c51:	6a 6f                	push   0x6f
 c53:	69 6e 00 73 74 72 63 	imul   ebp,DWORD PTR [rsi+0x0],0x63727473
 c5a:	73 70                	jae    ccc <__abi_tag+0x908>
 c5c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c5d:	00 62 61             	add    BYTE PTR [rdx+0x61],ah
 c60:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
 c63:	72 61                	jb     cc6 <__abi_tag+0x902>
 c65:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
 c68:	73 79                	jae    ce3 <__abi_tag+0x91f>
 c6a:	6d                   	ins    DWORD PTR es:[rdi],dx
 c6b:	62                   	(bad)  
 c6c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c6d:	6c                   	ins    BYTE PTR es:[rdi],dx
 c6e:	73 00                	jae    c70 <__abi_tag+0x8ac>
 c70:	72 65                	jb     cd7 <__abi_tag+0x913>
 c72:	67 63 6f 6d          	movsxd ebp,DWORD PTR [edi+0x6d]
 c76:	70 00                	jo     c78 <__abi_tag+0x8b4>
 c78:	5f                   	pop    rdi
 c79:	5f                   	pop    rdi
 c7a:	6c                   	ins    BYTE PTR es:[rdi],dx
 c7b:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 c82:	72 74                	jb     cf8 <__abi_tag+0x934>
 c84:	5f                   	pop    rdi
 c85:	6d                   	ins    DWORD PTR es:[rdi],dx
 c86:	61                   	(bad)  
 c87:	69 6e 00 73 74 72 63 	imul   ebp,DWORD PTR [rsi+0x0],0x63727473
 c8e:	6d                   	ins    DWORD PTR es:[rdi],dx
 c8f:	70 00                	jo     c91 <__abi_tag+0x8cd>
 c91:	66 70 72             	data16 jo d06 <__abi_tag+0x942>
 c94:	69 6e 74 66 00 66 70 	imul   ebp,DWORD PTR [rsi+0x74],0x70660066
 c9b:	75 74                	jne    d11 <__abi_tag+0x94d>
 c9d:	73 00                	jae    c9f <__abi_tag+0x8db>
 c9f:	73 6f                	jae    d10 <__abi_tag+0x94c>
 ca1:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
 ca4:	74 00                	je     ca6 <__abi_tag+0x8e2>
 ca6:	73 69                	jae    d11 <__abi_tag+0x94d>
 ca8:	67 6e                	outs   dx,BYTE PTR ds:[esi]
 caa:	61                   	(bad)  
 cab:	6c                   	ins    BYTE PTR es:[rdi],dx
 cac:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
 caf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 cb0:	69 00 66 6f 70 65    	imul   eax,DWORD PTR [rax],0x65706f66
 cb6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 cb7:	00 67 65             	add    BYTE PTR [rdi+0x65],ah
 cba:	74 6f                	je     d2b <__abi_tag+0x967>
 cbc:	70 74                	jo     d32 <__abi_tag+0x96e>
 cbe:	00 66 63             	add    BYTE PTR [rsi+0x63],ah
 cc1:	6c                   	ins    BYTE PTR es:[rdi],dx
 cc2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 cc3:	73 65                	jae    d2a <__abi_tag+0x966>
 cc5:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 cc8:	72 63                	jb     d2d <__abi_tag+0x969>
 cca:	70 79                	jo     d45 <__abi_tag+0x981>
 ccc:	00 62 61             	add    BYTE PTR [rdx+0x61],ah
 ccf:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
 cd2:	72 61                	jb     d35 <__abi_tag+0x971>
 cd4:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
 cd7:	73 74                	jae    d4d <__abi_tag+0x989>
 cd9:	72 74                	jb     d4f <__abi_tag+0x98b>
 cdb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 cdc:	6b 00 73             	imul   eax,DWORD PTR [rax],0x73
 cdf:	74 72                	je     d53 <__abi_tag+0x98f>
 ce1:	74 6f                	je     d52 <__abi_tag+0x98e>
 ce3:	6c                   	ins    BYTE PTR es:[rdi],dx
 ce4:	00 6d 65             	add    BYTE PTR [rbp+0x65],ch
 ce7:	6d                   	ins    DWORD PTR es:[rdi],dx
 ce8:	73 65                	jae    d4f <__abi_tag+0x98b>
 cea:	74 00                	je     cec <__abi_tag+0x928>
 cec:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 ced:	70 74                	jo     d63 <__abi_tag+0x99f>
 cef:	61                   	(bad)  
 cf0:	72 67                	jb     d59 <__abi_tag+0x995>
 cf2:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 cf5:	72 6e                	jb     d65 <__abi_tag+0x9a1>
 cf7:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
 cfa:	00 69 73             	add    BYTE PTR [rcx+0x73],ch
 cfd:	64 69 67 69 74 00 73 	imul   esp,DWORD PTR fs:[rdi+0x69],0x74730074
 d04:	74 
 d05:	72 73                	jb     d7a <__abi_tag+0x9b6>
 d07:	74 72                	je     d7b <__abi_tag+0x9b7>
 d09:	00 70 74             	add    BYTE PTR [rax+0x74],dh
 d0c:	68 72 65 61 64       	push   0x64616572
 d11:	5f                   	pop    rdi
 d12:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
 d15:	61                   	(bad)  
 d16:	74 65                	je     d7d <__abi_tag+0x9b9>
 d18:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 d1b:	72 6e                	jb     d8b <__abi_tag+0x9c7>
 d1d:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
 d20:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 d23:	72 6c                	jb     d91 <__abi_tag+0x9cd>
 d25:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 d27:	00 73 6c             	add    BYTE PTR [rbx+0x6c],dh
 d2a:	65 65 70 00          	gs gs jo d2e <__abi_tag+0x96a>
 d2e:	67 65 74 64          	addr32 gs je d96 <__abi_tag+0x9d2>
 d32:	65 6c                	gs ins BYTE PTR es:[rdi],dx
 d34:	69 6d 00 73 70 72 69 	imul   ebp,DWORD PTR [rbp+0x0],0x69727073
 d3b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d3c:	74 66                	je     da4 <__abi_tag+0x9e0>
 d3e:	00 62 69             	add    BYTE PTR [rdx+0x69],ah
 d41:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d42:	64 00 68 74          	add    BYTE PTR fs:[rax+0x74],ch
 d46:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d47:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d48:	6c                   	ins    BYTE PTR es:[rdi],dx
 d49:	00 68 74             	add    BYTE PTR [rax+0x74],ch
 d4c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d4d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d4e:	73 00                	jae    d50 <__abi_tag+0x98c>
 d50:	73 6e                	jae    dc0 <__abi_tag+0x9fc>
 d52:	70 72                	jo     dc6 <__abi_tag+0xa02>
 d54:	69 6e 74 66 00 72 65 	imul   ebp,DWORD PTR [rsi+0x74],0x65720066
 d5b:	67 65 78 65          	addr32 gs js dc4 <__abi_tag+0xa00>
 d5f:	63 00                	movsxd eax,DWORD PTR [rax]
 d61:	6c                   	ins    BYTE PTR es:[rdi],dx
 d62:	69 73 74 65 6e 00 70 	imul   esi,DWORD PTR [rbx+0x74],0x70006e65
 d69:	65 72 72             	gs jb  dde <__abi_tag+0xa1a>
 d6c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d6d:	72 00                	jb     d6f <__abi_tag+0x9ab>
 d6f:	73 74                	jae    de5 <__abi_tag+0xa21>
 d71:	72 63                	jb     dd6 <__abi_tag+0xa12>
 d73:	61                   	(bad)  
 d74:	74 00                	je     d76 <__abi_tag+0x9b2>
 d76:	61                   	(bad)  
 d77:	63 63 65             	movsxd esp,DWORD PTR [rbx+0x65]
 d7a:	70 74                	jo     df0 <__abi_tag+0xa2c>
 d7c:	00 70 75             	add    BYTE PTR [rax+0x75],dh
 d7f:	74 63                	je     de4 <__abi_tag+0xa20>
 d81:	68 61 72 00 65       	push   0x65007261
 d86:	78 69                	js     df1 <__abi_tag+0xa2d>
 d88:	74 00                	je     d8a <__abi_tag+0x9c6>
 d8a:	5f                   	pop    rdi
 d8b:	5f                   	pop    rdi
 d8c:	73 74                	jae    e02 <__abi_tag+0xa3e>
 d8e:	61                   	(bad)  
 d8f:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 d92:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 d95:	5f                   	pop    rdi
 d96:	66 61                	data16 (bad) 
 d98:	69 6c 00 73 65 74 73 	imul   ebp,DWORD PTR [rax+rax*1+0x73],0x6f737465
 d9f:	6f 
 da0:	63 6b 6f             	movsxd ebp,DWORD PTR [rbx+0x6f]
 da3:	70 74                	jo     e19 <__abi_tag+0xa55>
 da5:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 da9:	70 63                	jo     e0e <__abi_tag+0xa4a>
 dab:	61                   	(bad)  
 dac:	70 2e                	jo     ddc <__abi_tag+0xa18>
 dae:	73 6f                	jae    e1f <__abi_tag+0xa5b>
 db0:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
 db3:	38 00                	cmp    BYTE PTR [rax],al
 db5:	6c                   	ins    BYTE PTR es:[rdi],dx
 db6:	69 62 73 71 6c 69 74 	imul   esp,DWORD PTR [rdx+0x73],0x74696c71
 dbd:	65 33 2e             	xor    ebp,DWORD PTR gs:[rsi]
 dc0:	73 6f                	jae    e31 <__abi_tag+0xa6d>
 dc2:	2e 30 00             	cs xor BYTE PTR [rax],al
 dc5:	6c                   	ins    BYTE PTR es:[rdi],dx
 dc6:	69 62 6c 75 61 35 2e 	imul   esp,DWORD PTR [rdx+0x6c],0x2e356175
 dcd:	33 2e                	xor    ebp,DWORD PTR [rsi]
 dcf:	73 6f                	jae    e40 <__abi_tag+0xa7c>
 dd1:	2e 30 00             	cs xor BYTE PTR [rax],al
 dd4:	6c                   	ins    BYTE PTR es:[rdi],dx
 dd5:	69 62 63 2e 73 6f 2e 	imul   esp,DWORD PTR [rdx+0x63],0x2e6f732e
 ddc:	36 00 4c 55 41       	ss add BYTE PTR [rbp+rdx*2+0x41],cl
 de1:	5f                   	pop    rdi
 de2:	35 2e 33 00 47       	xor    eax,0x4700332e
 de7:	4c                   	rex.WR
 de8:	49                   	rex.WB
 de9:	42                   	rex.X
 dea:	43 5f                	rex.XB pop r15
 dec:	32 2e                	xor    ch,BYTE PTR [rsi]
 dee:	34 00                	xor    al,0x0
 df0:	47                   	rex.RXB
 df1:	4c                   	rex.WR
 df2:	49                   	rex.WB
 df3:	42                   	rex.X
 df4:	43 5f                	rex.XB pop r15
 df6:	32 2e                	xor    ch,BYTE PTR [rsi]
 df8:	33 2e                	xor    ebp,DWORD PTR [rsi]
 dfa:	34 00                	xor    al,0x0
 dfc:	47                   	rex.RXB
 dfd:	4c                   	rex.WR
 dfe:	49                   	rex.WB
 dff:	42                   	rex.X
 e00:	43 5f                	rex.XB pop r15
 e02:	32 2e                	xor    ch,BYTE PTR [rsi]
 e04:	32 2e                	xor    ch,BYTE PTR [rsi]
 e06:	35 00 47 4c 49       	xor    eax,0x494c4700
 e0b:	42                   	rex.X
 e0c:	43 5f                	rex.XB pop r15
 e0e:	32 2e                	xor    ch,BYTE PTR [rsi]
 e10:	33 34 00             	xor    esi,DWORD PTR [rax+rax*1]

Disassembly of section .gnu.version:

0000000000000e14 <.gnu.version>:
 e14:	00 00                	add    BYTE PTR [rax],al
 e16:	00 00                	add    BYTE PTR [rax],al
 e18:	02 00                	add    al,BYTE PTR [rax]
 e1a:	03 00                	add    eax,DWORD PTR [rax]
 e1c:	03 00                	add    eax,DWORD PTR [rax]
 e1e:	03 00                	add    eax,DWORD PTR [rax]
 e20:	03 00                	add    eax,DWORD PTR [rax]
 e22:	03 00                	add    eax,DWORD PTR [rax]
 e24:	03 00                	add    eax,DWORD PTR [rax]
 e26:	00 00                	add    BYTE PTR [rax],al
 e28:	03 00                	add    eax,DWORD PTR [rax]
 e2a:	03 00                	add    eax,DWORD PTR [rax]
 e2c:	03 00                	add    eax,DWORD PTR [rax]
 e2e:	03 00                	add    eax,DWORD PTR [rax]
 e30:	00 00                	add    BYTE PTR [rax],al
 e32:	03 00                	add    eax,DWORD PTR [rax]
 e34:	03 00                	add    eax,DWORD PTR [rax]
 e36:	03 00                	add    eax,DWORD PTR [rax]
 e38:	03 00                	add    eax,DWORD PTR [rax]
 e3a:	03 00                	add    eax,DWORD PTR [rax]
 e3c:	04 00                	add    al,0x0
 e3e:	00 00                	add    BYTE PTR [rax],al
 e40:	03 00                	add    eax,DWORD PTR [rax]
 e42:	00 00                	add    BYTE PTR [rax],al
 e44:	05 00 00 00 02       	add    eax,0x2000000
 e49:	00 03                	add    BYTE PTR [rbx],al
 e4b:	00 03                	add    BYTE PTR [rbx],al
 e4d:	00 03                	add    BYTE PTR [rbx],al
 e4f:	00 00                	add    BYTE PTR [rax],al
 e51:	00 03                	add    BYTE PTR [rbx],al
 e53:	00 03                	add    BYTE PTR [rbx],al
 e55:	00 03                	add    BYTE PTR [rbx],al
 e57:	00 03                	add    BYTE PTR [rbx],al
 e59:	00 03                	add    BYTE PTR [rbx],al
 e5b:	00 05 00 03 00 03    	add    BYTE PTR [rip+0x3000300],al        # 3001161 <_end+0x2ec6159>
 e61:	00 03                	add    BYTE PTR [rbx],al
 e63:	00 03                	add    BYTE PTR [rbx],al
 e65:	00 05 00 03 00 03    	add    BYTE PTR [rip+0x3000300],al        # 300116b <_end+0x2ec6163>
 e6b:	00 03                	add    BYTE PTR [rbx],al
 e6d:	00 03                	add    BYTE PTR [rbx],al
 e6f:	00 05 00 05 00 03    	add    BYTE PTR [rip+0x3000500],al        # 3001375 <_end+0x2ec636d>
 e75:	00 05 00 06 00 03    	add    BYTE PTR [rip+0x3000600],al        # 300147b <_end+0x2ec6473>
 e7b:	00 03                	add    BYTE PTR [rbx],al
 e7d:	00 03                	add    BYTE PTR [rbx],al
 e7f:	00 03                	add    BYTE PTR [rbx],al
 e81:	00 05 00 00 00 03    	add    BYTE PTR [rip+0x3000000],al        # 3000e87 <_end+0x2ec5e7f>
 e87:	00 03                	add    BYTE PTR [rbx],al
 e89:	00 03                	add    BYTE PTR [rbx],al
 e8b:	00 03                	add    BYTE PTR [rbx],al
 e8d:	00 00                	add    BYTE PTR [rax],al
 e8f:	00 03                	add    BYTE PTR [rbx],al
 e91:	00 03                	add    BYTE PTR [rbx],al
 e93:	00 03                	add    BYTE PTR [rbx],al
 e95:	00 03                	add    BYTE PTR [rbx],al
 e97:	00 03                	add    BYTE PTR [rbx],al
 e99:	00 02                	add    BYTE PTR [rdx],al
 e9b:	00 03                	add    BYTE PTR [rbx],al
 e9d:	00 00                	add    BYTE PTR [rax],al
 e9f:	00 03                	add    BYTE PTR [rbx],al
 ea1:	00 03                	add    BYTE PTR [rbx],al
 ea3:	00 01                	add    BYTE PTR [rcx],al
 ea5:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .gnu.version_r:

0000000000000ea8 <.gnu.version_r>:
 ea8:	01 00                	add    DWORD PTR [rax],eax
 eaa:	01 00                	add    DWORD PTR [rax],eax
 eac:	bd 02 00 00 10       	mov    ebp,0x10000002
 eb1:	00 00                	add    BYTE PTR [rax],al
 eb3:	00 20                	add    BYTE PTR [rax],ah
 eb5:	00 00                	add    BYTE PTR [rax],al
 eb7:	00 43 28             	add    BYTE PTR [rbx+0x28],al
 eba:	97                   	xchg   edi,eax
 ebb:	01 00                	add    DWORD PTR [rax],eax
 ebd:	00 05 00 d6 02 00    	add    BYTE PTR [rip+0x2d600],al        # 2e4c3 <rules+0x1d1e3>
 ec3:	00 00                	add    BYTE PTR [rax],al
 ec5:	00 00                	add    BYTE PTR [rax],al
 ec7:	00 01                	add    BYTE PTR [rcx],al
 ec9:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 ecc:	cc                   	int3   
 ecd:	02 00                	add    al,BYTE PTR [rax]
 ecf:	00 10                	add    BYTE PTR [rax],dl
 ed1:	00 00                	add    BYTE PTR [rax],al
 ed3:	00 00                	add    BYTE PTR [rax],al
 ed5:	00 00                	add    BYTE PTR [rax],al
 ed7:	00 14 69             	add    BYTE PTR [rcx+rbp*2],dl
 eda:	69 0d 00 00 06 00 de 	imul   ecx,DWORD PTR [rip+0x60000],0x2de        # 60ee4 <rules+0x4fc04>
 ee1:	02 00 00 
 ee4:	10 00                	adc    BYTE PTR [rax],al
 ee6:	00 00                	add    BYTE PTR [rax],al
 ee8:	74 19                	je     f03 <__abi_tag+0xb3f>
 eea:	69 09 00 00 04 00    	imul   ecx,DWORD PTR [rcx],0x40000
 ef0:	e8 02 00 00 10       	call   10000ef7 <_end+0xfec5eef>
 ef5:	00 00                	add    BYTE PTR [rax],al
 ef7:	00 75 1a             	add    BYTE PTR [rbp+0x1a],dh
 efa:	69 09 00 00 03 00    	imul   ecx,DWORD PTR [rcx],0x30000
 f00:	f4                   	hlt    
 f01:	02 00                	add    al,BYTE PTR [rax]
 f03:	00 10                	add    BYTE PTR [rax],dl
 f05:	00 00                	add    BYTE PTR [rax],al
 f07:	00 b4 91 96 06 00 00 	add    BYTE PTR [rcx+rdx*4+0x696],dh
 f0e:	02 00                	add    al,BYTE PTR [rax]
 f10:	00 03                	add    BYTE PTR [rbx],al
 f12:	00 00                	add    BYTE PTR [rax],al
 f14:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000000f18 <.rela.dyn>:
     f18:	80 0b 01             	or     BYTE PTR [rbx],0x1
     f1b:	00 00                	add    BYTE PTR [rax],al
     f1d:	00 00                	add    BYTE PTR [rax],al
     f1f:	00 08                	add    BYTE PTR [rax],cl
     f21:	00 00                	add    BYTE PTR [rax],al
     f23:	00 00                	add    BYTE PTR [rax],al
     f25:	00 00                	add    BYTE PTR [rax],al
     f27:	00 60 29             	add    BYTE PTR [rax+0x29],ah
     f2a:	00 00                	add    BYTE PTR [rax],al
     f2c:	00 00                	add    BYTE PTR [rax],al
     f2e:	00 00                	add    BYTE PTR [rax],al
     f30:	88 0b                	mov    BYTE PTR [rbx],cl
     f32:	01 00                	add    DWORD PTR [rax],eax
     f34:	00 00                	add    BYTE PTR [rax],al
     f36:	00 00                	add    BYTE PTR [rax],al
     f38:	08 00                	or     BYTE PTR [rax],al
     f3a:	00 00                	add    BYTE PTR [rax],al
     f3c:	00 00                	add    BYTE PTR [rax],al
     f3e:	00 00                	add    BYTE PTR [rax],al
     f40:	20 29                	and    BYTE PTR [rcx],ch
     f42:	00 00                	add    BYTE PTR [rax],al
     f44:	00 00                	add    BYTE PTR [rax],al
     f46:	00 00                	add    BYTE PTR [rax],al
     f48:	08 10                	or     BYTE PTR [rax],dl
     f4a:	01 00                	add    DWORD PTR [rax],eax
     f4c:	00 00                	add    BYTE PTR [rax],al
     f4e:	00 00                	add    BYTE PTR [rax],al
     f50:	08 00                	or     BYTE PTR [rax],al
     f52:	00 00                	add    BYTE PTR [rax],al
     f54:	00 00                	add    BYTE PTR [rax],al
     f56:	00 00                	add    BYTE PTR [rax],al
     f58:	08 10                	or     BYTE PTR [rax],dl
     f5a:	01 00                	add    DWORD PTR [rax],eax
     f5c:	00 00                	add    BYTE PTR [rax],al
     f5e:	00 00                	add    BYTE PTR [rax],al
     f60:	28 10                	sub    BYTE PTR [rax],dl
     f62:	01 00                	add    DWORD PTR [rax],eax
     f64:	00 00                	add    BYTE PTR [rax],al
     f66:	00 00                	add    BYTE PTR [rax],al
     f68:	08 00                	or     BYTE PTR [rax],al
     f6a:	00 00                	add    BYTE PTR [rax],al
     f6c:	00 00                	add    BYTE PTR [rax],al
     f6e:	00 00                	add    BYTE PTR [rax],al
     f70:	04 c0                	add    al,0xc0
     f72:	00 00                	add    BYTE PTR [rax],al
     f74:	00 00                	add    BYTE PTR [rax],al
     f76:	00 00                	add    BYTE PTR [rax],al
     f78:	30 10                	xor    BYTE PTR [rax],dl
     f7a:	01 00                	add    DWORD PTR [rax],eax
     f7c:	00 00                	add    BYTE PTR [rax],al
     f7e:	00 00                	add    BYTE PTR [rax],al
     f80:	08 00                	or     BYTE PTR [rax],al
     f82:	00 00                	add    BYTE PTR [rax],al
     f84:	00 00                	add    BYTE PTR [rax],al
     f86:	00 00                	add    BYTE PTR [rax],al
     f88:	1a c0                	sbb    al,al
     f8a:	00 00                	add    BYTE PTR [rax],al
     f8c:	00 00                	add    BYTE PTR [rax],al
     f8e:	00 00                	add    BYTE PTR [rax],al
     f90:	38 10                	cmp    BYTE PTR [rax],dl
     f92:	01 00                	add    DWORD PTR [rax],eax
     f94:	00 00                	add    BYTE PTR [rax],al
     f96:	00 00                	add    BYTE PTR [rax],al
     f98:	08 00                	or     BYTE PTR [rax],al
     f9a:	00 00                	add    BYTE PTR [rax],al
     f9c:	00 00                	add    BYTE PTR [rax],al
     f9e:	00 00                	add    BYTE PTR [rax],al
     fa0:	34 c0                	xor    al,0xc0
     fa2:	00 00                	add    BYTE PTR [rax],al
     fa4:	00 00                	add    BYTE PTR [rax],al
     fa6:	00 00                	add    BYTE PTR [rax],al
     fa8:	d8 0f                	fmul   DWORD PTR [rdi]
     faa:	01 00                	add    DWORD PTR [rax],eax
     fac:	00 00                	add    BYTE PTR [rax],al
     fae:	00 00                	add    BYTE PTR [rax],al
     fb0:	06                   	(bad)  
     fb1:	00 00                	add    BYTE PTR [rax],al
     fb3:	00 09                	add    BYTE PTR [rcx],cl
	...
     fbd:	00 00                	add    BYTE PTR [rax],al
     fbf:	00 e0                	add    al,ah
     fc1:	0f 01 00             	sgdt   [rax]
     fc4:	00 00                	add    BYTE PTR [rax],al
     fc6:	00 00                	add    BYTE PTR [rax],al
     fc8:	06                   	(bad)  
     fc9:	00 00                	add    BYTE PTR [rax],al
     fcb:	00 19                	add    BYTE PTR [rcx],bl
	...
     fd5:	00 00                	add    BYTE PTR [rax],al
     fd7:	00 e8                	add    al,ch
     fd9:	0f 01 00             	sgdt   [rax]
     fdc:	00 00                	add    BYTE PTR [rax],al
     fde:	00 00                	add    BYTE PTR [rax],al
     fe0:	06                   	(bad)  
     fe1:	00 00                	add    BYTE PTR [rax],al
     fe3:	00 1e                	add    BYTE PTR [rsi],bl
	...
     fed:	00 00                	add    BYTE PTR [rax],al
     fef:	00 f0                	add    al,dh
     ff1:	0f 01 00             	sgdt   [rax]
     ff4:	00 00                	add    BYTE PTR [rax],al
     ff6:	00 00                	add    BYTE PTR [rax],al
     ff8:	06                   	(bad)  
     ff9:	00 00                	add    BYTE PTR [rax],al
     ffb:	00 47 00             	add    BYTE PTR [rdi+0x0],al
	...
    1006:	00 00                	add    BYTE PTR [rax],al
    1008:	f8                   	clc    
    1009:	0f 01 00             	sgdt   [rax]
    100c:	00 00                	add    BYTE PTR [rax],al
    100e:	00 00                	add    BYTE PTR [rax],al
    1010:	06                   	(bad)  
    1011:	00 00                	add    BYTE PTR [rax],al
    1013:	00 43 00             	add    BYTE PTR [rbx+0x0],al
	...
    101e:	00 00                	add    BYTE PTR [rax],al
    1020:	60                   	(bad)  
    1021:	10 01                	adc    BYTE PTR [rcx],al
    1023:	00 00                	add    BYTE PTR [rax],al
    1025:	00 00                	add    BYTE PTR [rax],al
    1027:	00 05 00 00 00 49    	add    BYTE PTR [rip+0x49000000],al        # 4900102d <_end+0x48ec6025>
	...

Disassembly of section .rela.plt:

0000000000001038 <.rela.plt>:
    1038:	c8 0d 01 00          	enter  0x10d,0x0
    103c:	00 00                	add    BYTE PTR [rax],al
    103e:	00 00                	add    BYTE PTR [rax],al
    1040:	07                   	(bad)  
    1041:	00 00                	add    BYTE PTR [rax],al
    1043:	00 01                	add    BYTE PTR [rcx],al
	...
    104d:	00 00                	add    BYTE PTR [rax],al
    104f:	00 d0                	add    al,dl
    1051:	0d 01 00 00 00       	or     eax,0x1
    1056:	00 00                	add    BYTE PTR [rax],al
    1058:	07                   	(bad)  
    1059:	00 00                	add    BYTE PTR [rax],al
    105b:	00 02                	add    BYTE PTR [rdx],al
	...
    1065:	00 00                	add    BYTE PTR [rax],al
    1067:	00 d8                	add    al,bl
    1069:	0d 01 00 00 00       	or     eax,0x1
    106e:	00 00                	add    BYTE PTR [rax],al
    1070:	07                   	(bad)  
    1071:	00 00                	add    BYTE PTR [rax],al
    1073:	00 03                	add    BYTE PTR [rbx],al
	...
    107d:	00 00                	add    BYTE PTR [rax],al
    107f:	00 e0                	add    al,ah
    1081:	0d 01 00 00 00       	or     eax,0x1
    1086:	00 00                	add    BYTE PTR [rax],al
    1088:	07                   	(bad)  
    1089:	00 00                	add    BYTE PTR [rax],al
    108b:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
    1096:	00 00                	add    BYTE PTR [rax],al
    1098:	e8 0d 01 00 00       	call   11aa <__abi_tag+0xde6>
    109d:	00 00                	add    BYTE PTR [rax],al
    109f:	00 07                	add    BYTE PTR [rdi],al
    10a1:	00 00                	add    BYTE PTR [rax],al
    10a3:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 10a9 <__abi_tag+0xce5>
    10a9:	00 00                	add    BYTE PTR [rax],al
    10ab:	00 00                	add    BYTE PTR [rax],al
    10ad:	00 00                	add    BYTE PTR [rax],al
    10af:	00 f0                	add    al,dh
    10b1:	0d 01 00 00 00       	or     eax,0x1
    10b6:	00 00                	add    BYTE PTR [rax],al
    10b8:	07                   	(bad)  
    10b9:	00 00                	add    BYTE PTR [rax],al
    10bb:	00 06                	add    BYTE PTR [rsi],al
	...
    10c5:	00 00                	add    BYTE PTR [rax],al
    10c7:	00 f8                	add    al,bh
    10c9:	0d 01 00 00 00       	or     eax,0x1
    10ce:	00 00                	add    BYTE PTR [rax],al
    10d0:	07                   	(bad)  
    10d1:	00 00                	add    BYTE PTR [rax],al
    10d3:	00 07                	add    BYTE PTR [rdi],al
	...
    10e1:	0e                   	(bad)  
    10e2:	01 00                	add    DWORD PTR [rax],eax
    10e4:	00 00                	add    BYTE PTR [rax],al
    10e6:	00 00                	add    BYTE PTR [rax],al
    10e8:	07                   	(bad)  
    10e9:	00 00                	add    BYTE PTR [rax],al
    10eb:	00 08                	add    BYTE PTR [rax],cl
	...
    10f5:	00 00                	add    BYTE PTR [rax],al
    10f7:	00 08                	add    BYTE PTR [rax],cl
    10f9:	0e                   	(bad)  
    10fa:	01 00                	add    DWORD PTR [rax],eax
    10fc:	00 00                	add    BYTE PTR [rax],al
    10fe:	00 00                	add    BYTE PTR [rax],al
    1100:	07                   	(bad)  
    1101:	00 00                	add    BYTE PTR [rax],al
    1103:	00 0a                	add    BYTE PTR [rdx],cl
	...
    110d:	00 00                	add    BYTE PTR [rax],al
    110f:	00 10                	add    BYTE PTR [rax],dl
    1111:	0e                   	(bad)  
    1112:	01 00                	add    DWORD PTR [rax],eax
    1114:	00 00                	add    BYTE PTR [rax],al
    1116:	00 00                	add    BYTE PTR [rax],al
    1118:	07                   	(bad)  
    1119:	00 00                	add    BYTE PTR [rax],al
    111b:	00 0b                	add    BYTE PTR [rbx],cl
	...
    1125:	00 00                	add    BYTE PTR [rax],al
    1127:	00 18                	add    BYTE PTR [rax],bl
    1129:	0e                   	(bad)  
    112a:	01 00                	add    DWORD PTR [rax],eax
    112c:	00 00                	add    BYTE PTR [rax],al
    112e:	00 00                	add    BYTE PTR [rax],al
    1130:	07                   	(bad)  
    1131:	00 00                	add    BYTE PTR [rax],al
    1133:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
	...
    113e:	00 00                	add    BYTE PTR [rax],al
    1140:	20 0e                	and    BYTE PTR [rsi],cl
    1142:	01 00                	add    DWORD PTR [rax],eax
    1144:	00 00                	add    BYTE PTR [rax],al
    1146:	00 00                	add    BYTE PTR [rax],al
    1148:	07                   	(bad)  
    1149:	00 00                	add    BYTE PTR [rax],al
    114b:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 1151 <__abi_tag+0xd8d>
    1151:	00 00                	add    BYTE PTR [rax],al
    1153:	00 00                	add    BYTE PTR [rax],al
    1155:	00 00                	add    BYTE PTR [rax],al
    1157:	00 28                	add    BYTE PTR [rax],ch
    1159:	0e                   	(bad)  
    115a:	01 00                	add    DWORD PTR [rax],eax
    115c:	00 00                	add    BYTE PTR [rax],al
    115e:	00 00                	add    BYTE PTR [rax],al
    1160:	07                   	(bad)  
    1161:	00 00                	add    BYTE PTR [rax],al
    1163:	00 0e                	add    BYTE PTR [rsi],cl
	...
    116d:	00 00                	add    BYTE PTR [rax],al
    116f:	00 30                	add    BYTE PTR [rax],dh
    1171:	0e                   	(bad)  
    1172:	01 00                	add    DWORD PTR [rax],eax
    1174:	00 00                	add    BYTE PTR [rax],al
    1176:	00 00                	add    BYTE PTR [rax],al
    1178:	07                   	(bad)  
    1179:	00 00                	add    BYTE PTR [rax],al
    117b:	00 0f                	add    BYTE PTR [rdi],cl
	...
    1185:	00 00                	add    BYTE PTR [rax],al
    1187:	00 38                	add    BYTE PTR [rax],bh
    1189:	0e                   	(bad)  
    118a:	01 00                	add    DWORD PTR [rax],eax
    118c:	00 00                	add    BYTE PTR [rax],al
    118e:	00 00                	add    BYTE PTR [rax],al
    1190:	07                   	(bad)  
    1191:	00 00                	add    BYTE PTR [rax],al
    1193:	00 10                	add    BYTE PTR [rax],dl
	...
    119d:	00 00                	add    BYTE PTR [rax],al
    119f:	00 40 0e             	add    BYTE PTR [rax+0xe],al
    11a2:	01 00                	add    DWORD PTR [rax],eax
    11a4:	00 00                	add    BYTE PTR [rax],al
    11a6:	00 00                	add    BYTE PTR [rax],al
    11a8:	07                   	(bad)  
    11a9:	00 00                	add    BYTE PTR [rax],al
    11ab:	00 11                	add    BYTE PTR [rcx],dl
	...
    11b5:	00 00                	add    BYTE PTR [rax],al
    11b7:	00 48 0e             	add    BYTE PTR [rax+0xe],cl
    11ba:	01 00                	add    DWORD PTR [rax],eax
    11bc:	00 00                	add    BYTE PTR [rax],al
    11be:	00 00                	add    BYTE PTR [rax],al
    11c0:	07                   	(bad)  
    11c1:	00 00                	add    BYTE PTR [rax],al
    11c3:	00 12                	add    BYTE PTR [rdx],dl
	...
    11cd:	00 00                	add    BYTE PTR [rax],al
    11cf:	00 50 0e             	add    BYTE PTR [rax+0xe],dl
    11d2:	01 00                	add    DWORD PTR [rax],eax
    11d4:	00 00                	add    BYTE PTR [rax],al
    11d6:	00 00                	add    BYTE PTR [rax],al
    11d8:	07                   	(bad)  
    11d9:	00 00                	add    BYTE PTR [rax],al
    11db:	00 13                	add    BYTE PTR [rbx],dl
	...
    11e5:	00 00                	add    BYTE PTR [rax],al
    11e7:	00 58 0e             	add    BYTE PTR [rax+0xe],bl
    11ea:	01 00                	add    DWORD PTR [rax],eax
    11ec:	00 00                	add    BYTE PTR [rax],al
    11ee:	00 00                	add    BYTE PTR [rax],al
    11f0:	07                   	(bad)  
    11f1:	00 00                	add    BYTE PTR [rax],al
    11f3:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
	...
    11fe:	00 00                	add    BYTE PTR [rax],al
    1200:	60                   	(bad)  
    1201:	0e                   	(bad)  
    1202:	01 00                	add    DWORD PTR [rax],eax
    1204:	00 00                	add    BYTE PTR [rax],al
    1206:	00 00                	add    BYTE PTR [rax],al
    1208:	07                   	(bad)  
    1209:	00 00                	add    BYTE PTR [rax],al
    120b:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 1211 <__abi_tag+0xe4d>
    1211:	00 00                	add    BYTE PTR [rax],al
    1213:	00 00                	add    BYTE PTR [rax],al
    1215:	00 00                	add    BYTE PTR [rax],al
    1217:	00 68 0e             	add    BYTE PTR [rax+0xe],ch
    121a:	01 00                	add    DWORD PTR [rax],eax
    121c:	00 00                	add    BYTE PTR [rax],al
    121e:	00 00                	add    BYTE PTR [rax],al
    1220:	07                   	(bad)  
    1221:	00 00                	add    BYTE PTR [rax],al
    1223:	00 16                	add    BYTE PTR [rsi],dl
	...
    122d:	00 00                	add    BYTE PTR [rax],al
    122f:	00 70 0e             	add    BYTE PTR [rax+0xe],dh
    1232:	01 00                	add    DWORD PTR [rax],eax
    1234:	00 00                	add    BYTE PTR [rax],al
    1236:	00 00                	add    BYTE PTR [rax],al
    1238:	07                   	(bad)  
    1239:	00 00                	add    BYTE PTR [rax],al
    123b:	00 17                	add    BYTE PTR [rdi],dl
	...
    1245:	00 00                	add    BYTE PTR [rax],al
    1247:	00 78 0e             	add    BYTE PTR [rax+0xe],bh
    124a:	01 00                	add    DWORD PTR [rax],eax
    124c:	00 00                	add    BYTE PTR [rax],al
    124e:	00 00                	add    BYTE PTR [rax],al
    1250:	07                   	(bad)  
    1251:	00 00                	add    BYTE PTR [rax],al
    1253:	00 18                	add    BYTE PTR [rax],bl
	...
    125d:	00 00                	add    BYTE PTR [rax],al
    125f:	00 80 0e 01 00 00    	add    BYTE PTR [rax+0x10e],al
    1265:	00 00                	add    BYTE PTR [rax],al
    1267:	00 07                	add    BYTE PTR [rdi],al
    1269:	00 00                	add    BYTE PTR [rax],al
    126b:	00 1a                	add    BYTE PTR [rdx],bl
	...
    1275:	00 00                	add    BYTE PTR [rax],al
    1277:	00 88 0e 01 00 00    	add    BYTE PTR [rax+0x10e],cl
    127d:	00 00                	add    BYTE PTR [rax],al
    127f:	00 07                	add    BYTE PTR [rdi],al
    1281:	00 00                	add    BYTE PTR [rax],al
    1283:	00 1b                	add    BYTE PTR [rbx],bl
	...
    128d:	00 00                	add    BYTE PTR [rax],al
    128f:	00 90 0e 01 00 00    	add    BYTE PTR [rax+0x10e],dl
    1295:	00 00                	add    BYTE PTR [rax],al
    1297:	00 07                	add    BYTE PTR [rdi],al
    1299:	00 00                	add    BYTE PTR [rax],al
    129b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
	...
    12a6:	00 00                	add    BYTE PTR [rax],al
    12a8:	98                   	cwde   
    12a9:	0e                   	(bad)  
    12aa:	01 00                	add    DWORD PTR [rax],eax
    12ac:	00 00                	add    BYTE PTR [rax],al
    12ae:	00 00                	add    BYTE PTR [rax],al
    12b0:	07                   	(bad)  
    12b1:	00 00                	add    BYTE PTR [rax],al
    12b3:	00 1d 00 00 00 00    	add    BYTE PTR [rip+0x0],bl        # 12b9 <__abi_tag+0xef5>
    12b9:	00 00                	add    BYTE PTR [rax],al
    12bb:	00 00                	add    BYTE PTR [rax],al
    12bd:	00 00                	add    BYTE PTR [rax],al
    12bf:	00 a0 0e 01 00 00    	add    BYTE PTR [rax+0x10e],ah
    12c5:	00 00                	add    BYTE PTR [rax],al
    12c7:	00 07                	add    BYTE PTR [rdi],al
    12c9:	00 00                	add    BYTE PTR [rax],al
    12cb:	00 1f                	add    BYTE PTR [rdi],bl
	...
    12d5:	00 00                	add    BYTE PTR [rax],al
    12d7:	00 a8 0e 01 00 00    	add    BYTE PTR [rax+0x10e],ch
    12dd:	00 00                	add    BYTE PTR [rax],al
    12df:	00 07                	add    BYTE PTR [rdi],al
    12e1:	00 00                	add    BYTE PTR [rax],al
    12e3:	00 20                	add    BYTE PTR [rax],ah
	...
    12ed:	00 00                	add    BYTE PTR [rax],al
    12ef:	00 b0 0e 01 00 00    	add    BYTE PTR [rax+0x10e],dh
    12f5:	00 00                	add    BYTE PTR [rax],al
    12f7:	00 07                	add    BYTE PTR [rdi],al
    12f9:	00 00                	add    BYTE PTR [rax],al
    12fb:	00 21                	add    BYTE PTR [rcx],ah
	...
    1305:	00 00                	add    BYTE PTR [rax],al
    1307:	00 b8 0e 01 00 00    	add    BYTE PTR [rax+0x10e],bh
    130d:	00 00                	add    BYTE PTR [rax],al
    130f:	00 07                	add    BYTE PTR [rdi],al
    1311:	00 00                	add    BYTE PTR [rax],al
    1313:	00 22                	add    BYTE PTR [rdx],ah
	...
    131d:	00 00                	add    BYTE PTR [rax],al
    131f:	00 c0                	add    al,al
    1321:	0e                   	(bad)  
    1322:	01 00                	add    DWORD PTR [rax],eax
    1324:	00 00                	add    BYTE PTR [rax],al
    1326:	00 00                	add    BYTE PTR [rax],al
    1328:	07                   	(bad)  
    1329:	00 00                	add    BYTE PTR [rax],al
    132b:	00 23                	add    BYTE PTR [rbx],ah
	...
    1335:	00 00                	add    BYTE PTR [rax],al
    1337:	00 c8                	add    al,cl
    1339:	0e                   	(bad)  
    133a:	01 00                	add    DWORD PTR [rax],eax
    133c:	00 00                	add    BYTE PTR [rax],al
    133e:	00 00                	add    BYTE PTR [rax],al
    1340:	07                   	(bad)  
    1341:	00 00                	add    BYTE PTR [rax],al
    1343:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
	...
    134e:	00 00                	add    BYTE PTR [rax],al
    1350:	d0 0e                	ror    BYTE PTR [rsi],1
    1352:	01 00                	add    DWORD PTR [rax],eax
    1354:	00 00                	add    BYTE PTR [rax],al
    1356:	00 00                	add    BYTE PTR [rax],al
    1358:	07                   	(bad)  
    1359:	00 00                	add    BYTE PTR [rax],al
    135b:	00 25 00 00 00 00    	add    BYTE PTR [rip+0x0],ah        # 1361 <__abi_tag+0xf9d>
    1361:	00 00                	add    BYTE PTR [rax],al
    1363:	00 00                	add    BYTE PTR [rax],al
    1365:	00 00                	add    BYTE PTR [rax],al
    1367:	00 d8                	add    al,bl
    1369:	0e                   	(bad)  
    136a:	01 00                	add    DWORD PTR [rax],eax
    136c:	00 00                	add    BYTE PTR [rax],al
    136e:	00 00                	add    BYTE PTR [rax],al
    1370:	07                   	(bad)  
    1371:	00 00                	add    BYTE PTR [rax],al
    1373:	00 26                	add    BYTE PTR [rsi],ah
	...
    137d:	00 00                	add    BYTE PTR [rax],al
    137f:	00 e0                	add    al,ah
    1381:	0e                   	(bad)  
    1382:	01 00                	add    DWORD PTR [rax],eax
    1384:	00 00                	add    BYTE PTR [rax],al
    1386:	00 00                	add    BYTE PTR [rax],al
    1388:	07                   	(bad)  
    1389:	00 00                	add    BYTE PTR [rax],al
    138b:	00 27                	add    BYTE PTR [rdi],ah
	...
    1395:	00 00                	add    BYTE PTR [rax],al
    1397:	00 e8                	add    al,ch
    1399:	0e                   	(bad)  
    139a:	01 00                	add    DWORD PTR [rax],eax
    139c:	00 00                	add    BYTE PTR [rax],al
    139e:	00 00                	add    BYTE PTR [rax],al
    13a0:	07                   	(bad)  
    13a1:	00 00                	add    BYTE PTR [rax],al
    13a3:	00 28                	add    BYTE PTR [rax],ch
	...
    13ad:	00 00                	add    BYTE PTR [rax],al
    13af:	00 f0                	add    al,dh
    13b1:	0e                   	(bad)  
    13b2:	01 00                	add    DWORD PTR [rax],eax
    13b4:	00 00                	add    BYTE PTR [rax],al
    13b6:	00 00                	add    BYTE PTR [rax],al
    13b8:	07                   	(bad)  
    13b9:	00 00                	add    BYTE PTR [rax],al
    13bb:	00 29                	add    BYTE PTR [rcx],ch
	...
    13c5:	00 00                	add    BYTE PTR [rax],al
    13c7:	00 f8                	add    al,bh
    13c9:	0e                   	(bad)  
    13ca:	01 00                	add    DWORD PTR [rax],eax
    13cc:	00 00                	add    BYTE PTR [rax],al
    13ce:	00 00                	add    BYTE PTR [rax],al
    13d0:	07                   	(bad)  
    13d1:	00 00                	add    BYTE PTR [rax],al
    13d3:	00 2a                	add    BYTE PTR [rdx],ch
	...
    13e1:	0f 01 00             	sgdt   [rax]
    13e4:	00 00                	add    BYTE PTR [rax],al
    13e6:	00 00                	add    BYTE PTR [rax],al
    13e8:	07                   	(bad)  
    13e9:	00 00                	add    BYTE PTR [rax],al
    13eb:	00 2b                	add    BYTE PTR [rbx],ch
	...
    13f5:	00 00                	add    BYTE PTR [rax],al
    13f7:	00 08                	add    BYTE PTR [rax],cl
    13f9:	0f 01 00             	sgdt   [rax]
    13fc:	00 00                	add    BYTE PTR [rax],al
    13fe:	00 00                	add    BYTE PTR [rax],al
    1400:	07                   	(bad)  
    1401:	00 00                	add    BYTE PTR [rax],al
    1403:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
	...
    140e:	00 00                	add    BYTE PTR [rax],al
    1410:	10 0f                	adc    BYTE PTR [rdi],cl
    1412:	01 00                	add    DWORD PTR [rax],eax
    1414:	00 00                	add    BYTE PTR [rax],al
    1416:	00 00                	add    BYTE PTR [rax],al
    1418:	07                   	(bad)  
    1419:	00 00                	add    BYTE PTR [rax],al
    141b:	00 2d 00 00 00 00    	add    BYTE PTR [rip+0x0],ch        # 1421 <__abi_tag+0x105d>
    1421:	00 00                	add    BYTE PTR [rax],al
    1423:	00 00                	add    BYTE PTR [rax],al
    1425:	00 00                	add    BYTE PTR [rax],al
    1427:	00 18                	add    BYTE PTR [rax],bl
    1429:	0f 01 00             	sgdt   [rax]
    142c:	00 00                	add    BYTE PTR [rax],al
    142e:	00 00                	add    BYTE PTR [rax],al
    1430:	07                   	(bad)  
    1431:	00 00                	add    BYTE PTR [rax],al
    1433:	00 2e                	add    BYTE PTR [rsi],ch
	...
    143d:	00 00                	add    BYTE PTR [rax],al
    143f:	00 20                	add    BYTE PTR [rax],ah
    1441:	0f 01 00             	sgdt   [rax]
    1444:	00 00                	add    BYTE PTR [rax],al
    1446:	00 00                	add    BYTE PTR [rax],al
    1448:	07                   	(bad)  
    1449:	00 00                	add    BYTE PTR [rax],al
    144b:	00 2f                	add    BYTE PTR [rdi],ch
	...
    1455:	00 00                	add    BYTE PTR [rax],al
    1457:	00 28                	add    BYTE PTR [rax],ch
    1459:	0f 01 00             	sgdt   [rax]
    145c:	00 00                	add    BYTE PTR [rax],al
    145e:	00 00                	add    BYTE PTR [rax],al
    1460:	07                   	(bad)  
    1461:	00 00                	add    BYTE PTR [rax],al
    1463:	00 30                	add    BYTE PTR [rax],dh
	...
    146d:	00 00                	add    BYTE PTR [rax],al
    146f:	00 30                	add    BYTE PTR [rax],dh
    1471:	0f 01 00             	sgdt   [rax]
    1474:	00 00                	add    BYTE PTR [rax],al
    1476:	00 00                	add    BYTE PTR [rax],al
    1478:	07                   	(bad)  
    1479:	00 00                	add    BYTE PTR [rax],al
    147b:	00 31                	add    BYTE PTR [rcx],dh
	...
    1485:	00 00                	add    BYTE PTR [rax],al
    1487:	00 38                	add    BYTE PTR [rax],bh
    1489:	0f 01 00             	sgdt   [rax]
    148c:	00 00                	add    BYTE PTR [rax],al
    148e:	00 00                	add    BYTE PTR [rax],al
    1490:	07                   	(bad)  
    1491:	00 00                	add    BYTE PTR [rax],al
    1493:	00 32                	add    BYTE PTR [rdx],dh
	...
    149d:	00 00                	add    BYTE PTR [rax],al
    149f:	00 40 0f             	add    BYTE PTR [rax+0xf],al
    14a2:	01 00                	add    DWORD PTR [rax],eax
    14a4:	00 00                	add    BYTE PTR [rax],al
    14a6:	00 00                	add    BYTE PTR [rax],al
    14a8:	07                   	(bad)  
    14a9:	00 00                	add    BYTE PTR [rax],al
    14ab:	00 33                	add    BYTE PTR [rbx],dh
	...
    14b5:	00 00                	add    BYTE PTR [rax],al
    14b7:	00 48 0f             	add    BYTE PTR [rax+0xf],cl
    14ba:	01 00                	add    DWORD PTR [rax],eax
    14bc:	00 00                	add    BYTE PTR [rax],al
    14be:	00 00                	add    BYTE PTR [rax],al
    14c0:	07                   	(bad)  
    14c1:	00 00                	add    BYTE PTR [rax],al
    14c3:	00 34 00             	add    BYTE PTR [rax+rax*1],dh
	...
    14ce:	00 00                	add    BYTE PTR [rax],al
    14d0:	50                   	push   rax
    14d1:	0f 01 00             	sgdt   [rax]
    14d4:	00 00                	add    BYTE PTR [rax],al
    14d6:	00 00                	add    BYTE PTR [rax],al
    14d8:	07                   	(bad)  
    14d9:	00 00                	add    BYTE PTR [rax],al
    14db:	00 35 00 00 00 00    	add    BYTE PTR [rip+0x0],dh        # 14e1 <__abi_tag+0x111d>
    14e1:	00 00                	add    BYTE PTR [rax],al
    14e3:	00 00                	add    BYTE PTR [rax],al
    14e5:	00 00                	add    BYTE PTR [rax],al
    14e7:	00 58 0f             	add    BYTE PTR [rax+0xf],bl
    14ea:	01 00                	add    DWORD PTR [rax],eax
    14ec:	00 00                	add    BYTE PTR [rax],al
    14ee:	00 00                	add    BYTE PTR [rax],al
    14f0:	07                   	(bad)  
    14f1:	00 00                	add    BYTE PTR [rax],al
    14f3:	00 36                	add    BYTE PTR [rsi],dh
	...
    14fd:	00 00                	add    BYTE PTR [rax],al
    14ff:	00 60 0f             	add    BYTE PTR [rax+0xf],ah
    1502:	01 00                	add    DWORD PTR [rax],eax
    1504:	00 00                	add    BYTE PTR [rax],al
    1506:	00 00                	add    BYTE PTR [rax],al
    1508:	07                   	(bad)  
    1509:	00 00                	add    BYTE PTR [rax],al
    150b:	00 37                	add    BYTE PTR [rdi],dh
	...
    1515:	00 00                	add    BYTE PTR [rax],al
    1517:	00 68 0f             	add    BYTE PTR [rax+0xf],ch
    151a:	01 00                	add    DWORD PTR [rax],eax
    151c:	00 00                	add    BYTE PTR [rax],al
    151e:	00 00                	add    BYTE PTR [rax],al
    1520:	07                   	(bad)  
    1521:	00 00                	add    BYTE PTR [rax],al
    1523:	00 38                	add    BYTE PTR [rax],bh
	...
    152d:	00 00                	add    BYTE PTR [rax],al
    152f:	00 70 0f             	add    BYTE PTR [rax+0xf],dh
    1532:	01 00                	add    DWORD PTR [rax],eax
    1534:	00 00                	add    BYTE PTR [rax],al
    1536:	00 00                	add    BYTE PTR [rax],al
    1538:	07                   	(bad)  
    1539:	00 00                	add    BYTE PTR [rax],al
    153b:	00 39                	add    BYTE PTR [rcx],bh
	...
    1545:	00 00                	add    BYTE PTR [rax],al
    1547:	00 78 0f             	add    BYTE PTR [rax+0xf],bh
    154a:	01 00                	add    DWORD PTR [rax],eax
    154c:	00 00                	add    BYTE PTR [rax],al
    154e:	00 00                	add    BYTE PTR [rax],al
    1550:	07                   	(bad)  
    1551:	00 00                	add    BYTE PTR [rax],al
    1553:	00 3a                	add    BYTE PTR [rdx],bh
	...
    155d:	00 00                	add    BYTE PTR [rax],al
    155f:	00 80 0f 01 00 00    	add    BYTE PTR [rax+0x10f],al
    1565:	00 00                	add    BYTE PTR [rax],al
    1567:	00 07                	add    BYTE PTR [rdi],al
    1569:	00 00                	add    BYTE PTR [rax],al
    156b:	00 3b                	add    BYTE PTR [rbx],bh
	...
    1575:	00 00                	add    BYTE PTR [rax],al
    1577:	00 88 0f 01 00 00    	add    BYTE PTR [rax+0x10f],cl
    157d:	00 00                	add    BYTE PTR [rax],al
    157f:	00 07                	add    BYTE PTR [rdi],al
    1581:	00 00                	add    BYTE PTR [rax],al
    1583:	00 3c 00             	add    BYTE PTR [rax+rax*1],bh
	...
    158e:	00 00                	add    BYTE PTR [rax],al
    1590:	90                   	nop
    1591:	0f 01 00             	sgdt   [rax]
    1594:	00 00                	add    BYTE PTR [rax],al
    1596:	00 00                	add    BYTE PTR [rax],al
    1598:	07                   	(bad)  
    1599:	00 00                	add    BYTE PTR [rax],al
    159b:	00 3d 00 00 00 00    	add    BYTE PTR [rip+0x0],bh        # 15a1 <__abi_tag+0x11dd>
    15a1:	00 00                	add    BYTE PTR [rax],al
    15a3:	00 00                	add    BYTE PTR [rax],al
    15a5:	00 00                	add    BYTE PTR [rax],al
    15a7:	00 98 0f 01 00 00    	add    BYTE PTR [rax+0x10f],bl
    15ad:	00 00                	add    BYTE PTR [rax],al
    15af:	00 07                	add    BYTE PTR [rdi],al
    15b1:	00 00                	add    BYTE PTR [rax],al
    15b3:	00 3e                	add    BYTE PTR [rsi],bh
	...
    15bd:	00 00                	add    BYTE PTR [rax],al
    15bf:	00 a0 0f 01 00 00    	add    BYTE PTR [rax+0x10f],ah
    15c5:	00 00                	add    BYTE PTR [rax],al
    15c7:	00 07                	add    BYTE PTR [rdi],al
    15c9:	00 00                	add    BYTE PTR [rax],al
    15cb:	00 3f                	add    BYTE PTR [rdi],bh
	...
    15d5:	00 00                	add    BYTE PTR [rax],al
    15d7:	00 a8 0f 01 00 00    	add    BYTE PTR [rax+0x10f],ch
    15dd:	00 00                	add    BYTE PTR [rax],al
    15df:	00 07                	add    BYTE PTR [rdi],al
    15e1:	00 00                	add    BYTE PTR [rax],al
    15e3:	00 40 00             	add    BYTE PTR [rax+0x0],al
	...
    15ee:	00 00                	add    BYTE PTR [rax],al
    15f0:	b0 0f                	mov    al,0xf
    15f2:	01 00                	add    DWORD PTR [rax],eax
    15f4:	00 00                	add    BYTE PTR [rax],al
    15f6:	00 00                	add    BYTE PTR [rax],al
    15f8:	07                   	(bad)  
    15f9:	00 00                	add    BYTE PTR [rax],al
    15fb:	00 41 00             	add    BYTE PTR [rcx+0x0],al
	...
    1606:	00 00                	add    BYTE PTR [rax],al
    1608:	b8 0f 01 00 00       	mov    eax,0x10f
    160d:	00 00                	add    BYTE PTR [rax],al
    160f:	00 07                	add    BYTE PTR [rdi],al
    1611:	00 00                	add    BYTE PTR [rax],al
    1613:	00 42 00             	add    BYTE PTR [rdx+0x0],al
	...
    161e:	00 00                	add    BYTE PTR [rax],al
    1620:	c0 0f 01             	ror    BYTE PTR [rdi],0x1
    1623:	00 00                	add    BYTE PTR [rax],al
    1625:	00 00                	add    BYTE PTR [rax],al
    1627:	00 07                	add    BYTE PTR [rdi],al
    1629:	00 00                	add    BYTE PTR [rax],al
    162b:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
	...
    1637:	00 c8                	add    al,cl
    1639:	0f 01 00             	sgdt   [rax]
    163c:	00 00                	add    BYTE PTR [rax],al
    163e:	00 00                	add    BYTE PTR [rax],al
    1640:	07                   	(bad)  
    1641:	00 00                	add    BYTE PTR [rax],al
    1643:	00 45 00             	add    BYTE PTR [rbp+0x0],al
	...
    164e:	00 00                	add    BYTE PTR [rax],al
    1650:	d0 0f                	ror    BYTE PTR [rdi],1
    1652:	01 00                	add    DWORD PTR [rax],eax
    1654:	00 00                	add    BYTE PTR [rax],al
    1656:	00 00                	add    BYTE PTR [rax],al
    1658:	07                   	(bad)  
    1659:	00 00                	add    BYTE PTR [rax],al
    165b:	00 46 00             	add    BYTE PTR [rsi+0x0],al
	...

Disassembly of section .init:

0000000000002000 <_init>:
    2000:	f3 0f 1e fa          	endbr64 
    2004:	48 83 ec 08          	sub    rsp,0x8
    2008:	48 8b 05 c9 ef 00 00 	mov    rax,QWORD PTR [rip+0xefc9]        # 10fd8 <__gmon_start__>
    200f:	48 85 c0             	test   rax,rax
    2012:	74 02                	je     2016 <_init+0x16>
    2014:	ff d0                	call   rax
    2016:	48 83 c4 08          	add    rsp,0x8
    201a:	c3                   	ret    

Disassembly of section .plt:

0000000000002020 <.plt>:
    2020:	ff 35 92 ed 00 00    	push   QWORD PTR [rip+0xed92]        # 10db8 <_GLOBAL_OFFSET_TABLE_+0x8>
    2026:	f2 ff 25 93 ed 00 00 	bnd jmp QWORD PTR [rip+0xed93]        # 10dc0 <_GLOBAL_OFFSET_TABLE_+0x10>
    202d:	0f 1f 00             	nop    DWORD PTR [rax]
    2030:	f3 0f 1e fa          	endbr64 
    2034:	68 00 00 00 00       	push   0x0
    2039:	f2 e9 e1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    203f:	90                   	nop
    2040:	f3 0f 1e fa          	endbr64 
    2044:	68 01 00 00 00       	push   0x1
    2049:	f2 e9 d1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    204f:	90                   	nop
    2050:	f3 0f 1e fa          	endbr64 
    2054:	68 02 00 00 00       	push   0x2
    2059:	f2 e9 c1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    205f:	90                   	nop
    2060:	f3 0f 1e fa          	endbr64 
    2064:	68 03 00 00 00       	push   0x3
    2069:	f2 e9 b1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    206f:	90                   	nop
    2070:	f3 0f 1e fa          	endbr64 
    2074:	68 04 00 00 00       	push   0x4
    2079:	f2 e9 a1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    207f:	90                   	nop
    2080:	f3 0f 1e fa          	endbr64 
    2084:	68 05 00 00 00       	push   0x5
    2089:	f2 e9 91 ff ff ff    	bnd jmp 2020 <_init+0x20>
    208f:	90                   	nop
    2090:	f3 0f 1e fa          	endbr64 
    2094:	68 06 00 00 00       	push   0x6
    2099:	f2 e9 81 ff ff ff    	bnd jmp 2020 <_init+0x20>
    209f:	90                   	nop
    20a0:	f3 0f 1e fa          	endbr64 
    20a4:	68 07 00 00 00       	push   0x7
    20a9:	f2 e9 71 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20af:	90                   	nop
    20b0:	f3 0f 1e fa          	endbr64 
    20b4:	68 08 00 00 00       	push   0x8
    20b9:	f2 e9 61 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20bf:	90                   	nop
    20c0:	f3 0f 1e fa          	endbr64 
    20c4:	68 09 00 00 00       	push   0x9
    20c9:	f2 e9 51 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20cf:	90                   	nop
    20d0:	f3 0f 1e fa          	endbr64 
    20d4:	68 0a 00 00 00       	push   0xa
    20d9:	f2 e9 41 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20df:	90                   	nop
    20e0:	f3 0f 1e fa          	endbr64 
    20e4:	68 0b 00 00 00       	push   0xb
    20e9:	f2 e9 31 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20ef:	90                   	nop
    20f0:	f3 0f 1e fa          	endbr64 
    20f4:	68 0c 00 00 00       	push   0xc
    20f9:	f2 e9 21 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20ff:	90                   	nop
    2100:	f3 0f 1e fa          	endbr64 
    2104:	68 0d 00 00 00       	push   0xd
    2109:	f2 e9 11 ff ff ff    	bnd jmp 2020 <_init+0x20>
    210f:	90                   	nop
    2110:	f3 0f 1e fa          	endbr64 
    2114:	68 0e 00 00 00       	push   0xe
    2119:	f2 e9 01 ff ff ff    	bnd jmp 2020 <_init+0x20>
    211f:	90                   	nop
    2120:	f3 0f 1e fa          	endbr64 
    2124:	68 0f 00 00 00       	push   0xf
    2129:	f2 e9 f1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    212f:	90                   	nop
    2130:	f3 0f 1e fa          	endbr64 
    2134:	68 10 00 00 00       	push   0x10
    2139:	f2 e9 e1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    213f:	90                   	nop
    2140:	f3 0f 1e fa          	endbr64 
    2144:	68 11 00 00 00       	push   0x11
    2149:	f2 e9 d1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    214f:	90                   	nop
    2150:	f3 0f 1e fa          	endbr64 
    2154:	68 12 00 00 00       	push   0x12
    2159:	f2 e9 c1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    215f:	90                   	nop
    2160:	f3 0f 1e fa          	endbr64 
    2164:	68 13 00 00 00       	push   0x13
    2169:	f2 e9 b1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    216f:	90                   	nop
    2170:	f3 0f 1e fa          	endbr64 
    2174:	68 14 00 00 00       	push   0x14
    2179:	f2 e9 a1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    217f:	90                   	nop
    2180:	f3 0f 1e fa          	endbr64 
    2184:	68 15 00 00 00       	push   0x15
    2189:	f2 e9 91 fe ff ff    	bnd jmp 2020 <_init+0x20>
    218f:	90                   	nop
    2190:	f3 0f 1e fa          	endbr64 
    2194:	68 16 00 00 00       	push   0x16
    2199:	f2 e9 81 fe ff ff    	bnd jmp 2020 <_init+0x20>
    219f:	90                   	nop
    21a0:	f3 0f 1e fa          	endbr64 
    21a4:	68 17 00 00 00       	push   0x17
    21a9:	f2 e9 71 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21af:	90                   	nop
    21b0:	f3 0f 1e fa          	endbr64 
    21b4:	68 18 00 00 00       	push   0x18
    21b9:	f2 e9 61 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21bf:	90                   	nop
    21c0:	f3 0f 1e fa          	endbr64 
    21c4:	68 19 00 00 00       	push   0x19
    21c9:	f2 e9 51 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21cf:	90                   	nop
    21d0:	f3 0f 1e fa          	endbr64 
    21d4:	68 1a 00 00 00       	push   0x1a
    21d9:	f2 e9 41 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21df:	90                   	nop
    21e0:	f3 0f 1e fa          	endbr64 
    21e4:	68 1b 00 00 00       	push   0x1b
    21e9:	f2 e9 31 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21ef:	90                   	nop
    21f0:	f3 0f 1e fa          	endbr64 
    21f4:	68 1c 00 00 00       	push   0x1c
    21f9:	f2 e9 21 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21ff:	90                   	nop
    2200:	f3 0f 1e fa          	endbr64 
    2204:	68 1d 00 00 00       	push   0x1d
    2209:	f2 e9 11 fe ff ff    	bnd jmp 2020 <_init+0x20>
    220f:	90                   	nop
    2210:	f3 0f 1e fa          	endbr64 
    2214:	68 1e 00 00 00       	push   0x1e
    2219:	f2 e9 01 fe ff ff    	bnd jmp 2020 <_init+0x20>
    221f:	90                   	nop
    2220:	f3 0f 1e fa          	endbr64 
    2224:	68 1f 00 00 00       	push   0x1f
    2229:	f2 e9 f1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    222f:	90                   	nop
    2230:	f3 0f 1e fa          	endbr64 
    2234:	68 20 00 00 00       	push   0x20
    2239:	f2 e9 e1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    223f:	90                   	nop
    2240:	f3 0f 1e fa          	endbr64 
    2244:	68 21 00 00 00       	push   0x21
    2249:	f2 e9 d1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    224f:	90                   	nop
    2250:	f3 0f 1e fa          	endbr64 
    2254:	68 22 00 00 00       	push   0x22
    2259:	f2 e9 c1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    225f:	90                   	nop
    2260:	f3 0f 1e fa          	endbr64 
    2264:	68 23 00 00 00       	push   0x23
    2269:	f2 e9 b1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    226f:	90                   	nop
    2270:	f3 0f 1e fa          	endbr64 
    2274:	68 24 00 00 00       	push   0x24
    2279:	f2 e9 a1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    227f:	90                   	nop
    2280:	f3 0f 1e fa          	endbr64 
    2284:	68 25 00 00 00       	push   0x25
    2289:	f2 e9 91 fd ff ff    	bnd jmp 2020 <_init+0x20>
    228f:	90                   	nop
    2290:	f3 0f 1e fa          	endbr64 
    2294:	68 26 00 00 00       	push   0x26
    2299:	f2 e9 81 fd ff ff    	bnd jmp 2020 <_init+0x20>
    229f:	90                   	nop
    22a0:	f3 0f 1e fa          	endbr64 
    22a4:	68 27 00 00 00       	push   0x27
    22a9:	f2 e9 71 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22af:	90                   	nop
    22b0:	f3 0f 1e fa          	endbr64 
    22b4:	68 28 00 00 00       	push   0x28
    22b9:	f2 e9 61 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22bf:	90                   	nop
    22c0:	f3 0f 1e fa          	endbr64 
    22c4:	68 29 00 00 00       	push   0x29
    22c9:	f2 e9 51 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22cf:	90                   	nop
    22d0:	f3 0f 1e fa          	endbr64 
    22d4:	68 2a 00 00 00       	push   0x2a
    22d9:	f2 e9 41 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22df:	90                   	nop
    22e0:	f3 0f 1e fa          	endbr64 
    22e4:	68 2b 00 00 00       	push   0x2b
    22e9:	f2 e9 31 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22ef:	90                   	nop
    22f0:	f3 0f 1e fa          	endbr64 
    22f4:	68 2c 00 00 00       	push   0x2c
    22f9:	f2 e9 21 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22ff:	90                   	nop
    2300:	f3 0f 1e fa          	endbr64 
    2304:	68 2d 00 00 00       	push   0x2d
    2309:	f2 e9 11 fd ff ff    	bnd jmp 2020 <_init+0x20>
    230f:	90                   	nop
    2310:	f3 0f 1e fa          	endbr64 
    2314:	68 2e 00 00 00       	push   0x2e
    2319:	f2 e9 01 fd ff ff    	bnd jmp 2020 <_init+0x20>
    231f:	90                   	nop
    2320:	f3 0f 1e fa          	endbr64 
    2324:	68 2f 00 00 00       	push   0x2f
    2329:	f2 e9 f1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    232f:	90                   	nop
    2330:	f3 0f 1e fa          	endbr64 
    2334:	68 30 00 00 00       	push   0x30
    2339:	f2 e9 e1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    233f:	90                   	nop
    2340:	f3 0f 1e fa          	endbr64 
    2344:	68 31 00 00 00       	push   0x31
    2349:	f2 e9 d1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    234f:	90                   	nop
    2350:	f3 0f 1e fa          	endbr64 
    2354:	68 32 00 00 00       	push   0x32
    2359:	f2 e9 c1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    235f:	90                   	nop
    2360:	f3 0f 1e fa          	endbr64 
    2364:	68 33 00 00 00       	push   0x33
    2369:	f2 e9 b1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    236f:	90                   	nop
    2370:	f3 0f 1e fa          	endbr64 
    2374:	68 34 00 00 00       	push   0x34
    2379:	f2 e9 a1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    237f:	90                   	nop
    2380:	f3 0f 1e fa          	endbr64 
    2384:	68 35 00 00 00       	push   0x35
    2389:	f2 e9 91 fc ff ff    	bnd jmp 2020 <_init+0x20>
    238f:	90                   	nop
    2390:	f3 0f 1e fa          	endbr64 
    2394:	68 36 00 00 00       	push   0x36
    2399:	f2 e9 81 fc ff ff    	bnd jmp 2020 <_init+0x20>
    239f:	90                   	nop
    23a0:	f3 0f 1e fa          	endbr64 
    23a4:	68 37 00 00 00       	push   0x37
    23a9:	f2 e9 71 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23af:	90                   	nop
    23b0:	f3 0f 1e fa          	endbr64 
    23b4:	68 38 00 00 00       	push   0x38
    23b9:	f2 e9 61 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23bf:	90                   	nop
    23c0:	f3 0f 1e fa          	endbr64 
    23c4:	68 39 00 00 00       	push   0x39
    23c9:	f2 e9 51 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23cf:	90                   	nop
    23d0:	f3 0f 1e fa          	endbr64 
    23d4:	68 3a 00 00 00       	push   0x3a
    23d9:	f2 e9 41 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23df:	90                   	nop
    23e0:	f3 0f 1e fa          	endbr64 
    23e4:	68 3b 00 00 00       	push   0x3b
    23e9:	f2 e9 31 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23ef:	90                   	nop
    23f0:	f3 0f 1e fa          	endbr64 
    23f4:	68 3c 00 00 00       	push   0x3c
    23f9:	f2 e9 21 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23ff:	90                   	nop
    2400:	f3 0f 1e fa          	endbr64 
    2404:	68 3d 00 00 00       	push   0x3d
    2409:	f2 e9 11 fc ff ff    	bnd jmp 2020 <_init+0x20>
    240f:	90                   	nop
    2410:	f3 0f 1e fa          	endbr64 
    2414:	68 3e 00 00 00       	push   0x3e
    2419:	f2 e9 01 fc ff ff    	bnd jmp 2020 <_init+0x20>
    241f:	90                   	nop
    2420:	f3 0f 1e fa          	endbr64 
    2424:	68 3f 00 00 00       	push   0x3f
    2429:	f2 e9 f1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    242f:	90                   	nop
    2430:	f3 0f 1e fa          	endbr64 
    2434:	68 40 00 00 00       	push   0x40
    2439:	f2 e9 e1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    243f:	90                   	nop
    2440:	f3 0f 1e fa          	endbr64 
    2444:	68 41 00 00 00       	push   0x41
    2449:	f2 e9 d1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    244f:	90                   	nop

Disassembly of section .plt.got:

0000000000002450 <__cxa_finalize@plt>:
    2450:	f3 0f 1e fa          	endbr64 
    2454:	f2 ff 25 95 eb 00 00 	bnd jmp QWORD PTR [rip+0xeb95]        # 10ff0 <__cxa_finalize@GLIBC_2.2.5>
    245b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

0000000000002460 <sqlite3_close@plt>:
    2460:	f3 0f 1e fa          	endbr64 
    2464:	f2 ff 25 5d e9 00 00 	bnd jmp QWORD PTR [rip+0xe95d]        # 10dc8 <sqlite3_close>
    246b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002470 <pthread_join@plt>:
    2470:	f3 0f 1e fa          	endbr64 
    2474:	f2 ff 25 55 e9 00 00 	bnd jmp QWORD PTR [rip+0xe955]        # 10dd0 <pthread_join@GLIBC_2.34>
    247b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002480 <printf@plt>:
    2480:	f3 0f 1e fa          	endbr64 
    2484:	f2 ff 25 4d e9 00 00 	bnd jmp QWORD PTR [rip+0xe94d]        # 10dd8 <printf@GLIBC_2.2.5>
    248b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002490 <memset@plt>:
    2490:	f3 0f 1e fa          	endbr64 
    2494:	f2 ff 25 45 e9 00 00 	bnd jmp QWORD PTR [rip+0xe945]        # 10de0 <memset@GLIBC_2.2.5>
    249b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024a0 <snprintf@plt>:
    24a0:	f3 0f 1e fa          	endbr64 
    24a4:	f2 ff 25 3d e9 00 00 	bnd jmp QWORD PTR [rip+0xe93d]        # 10de8 <snprintf@GLIBC_2.2.5>
    24ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024b0 <backtrace@plt>:
    24b0:	f3 0f 1e fa          	endbr64 
    24b4:	f2 ff 25 35 e9 00 00 	bnd jmp QWORD PTR [rip+0xe935]        # 10df0 <backtrace@GLIBC_2.2.5>
    24bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024c0 <close@plt>:
    24c0:	f3 0f 1e fa          	endbr64 
    24c4:	f2 ff 25 2d e9 00 00 	bnd jmp QWORD PTR [rip+0xe92d]        # 10df8 <close@GLIBC_2.2.5>
    24cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024d0 <strncat@plt>:
    24d0:	f3 0f 1e fa          	endbr64 
    24d4:	f2 ff 25 25 e9 00 00 	bnd jmp QWORD PTR [rip+0xe925]        # 10e00 <strncat@GLIBC_2.2.5>
    24db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024e0 <puts@plt>:
    24e0:	f3 0f 1e fa          	endbr64 
    24e4:	f2 ff 25 1d e9 00 00 	bnd jmp QWORD PTR [rip+0xe91d]        # 10e08 <puts@GLIBC_2.2.5>
    24eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024f0 <htons@plt>:
    24f0:	f3 0f 1e fa          	endbr64 
    24f4:	f2 ff 25 15 e9 00 00 	bnd jmp QWORD PTR [rip+0xe915]        # 10e10 <htons@GLIBC_2.2.5>
    24fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002500 <exit@plt>:
    2500:	f3 0f 1e fa          	endbr64 
    2504:	f2 ff 25 0d e9 00 00 	bnd jmp QWORD PTR [rip+0xe90d]        # 10e18 <exit@GLIBC_2.2.5>
    250b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002510 <putchar@plt>:
    2510:	f3 0f 1e fa          	endbr64 
    2514:	f2 ff 25 05 e9 00 00 	bnd jmp QWORD PTR [rip+0xe905]        # 10e20 <putchar@GLIBC_2.2.5>
    251b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002520 <sqlite3_exec@plt>:
    2520:	f3 0f 1e fa          	endbr64 
    2524:	f2 ff 25 fd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8fd]        # 10e28 <sqlite3_exec>
    252b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002530 <getopt@plt>:
    2530:	f3 0f 1e fa          	endbr64 
    2534:	f2 ff 25 f5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8f5]        # 10e30 <getopt@GLIBC_2.2.5>
    253b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002540 <read@plt>:
    2540:	f3 0f 1e fa          	endbr64 
    2544:	f2 ff 25 ed e8 00 00 	bnd jmp QWORD PTR [rip+0xe8ed]        # 10e38 <read@GLIBC_2.2.5>
    254b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002550 <strncmp@plt>:
    2550:	f3 0f 1e fa          	endbr64 
    2554:	f2 ff 25 e5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8e5]        # 10e40 <strncmp@GLIBC_2.2.5>
    255b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002560 <malloc@plt>:
    2560:	f3 0f 1e fa          	endbr64 
    2564:	f2 ff 25 dd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8dd]        # 10e48 <malloc@GLIBC_2.2.5>
    256b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002570 <fopen@plt>:
    2570:	f3 0f 1e fa          	endbr64 
    2574:	f2 ff 25 d5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8d5]        # 10e50 <fopen@GLIBC_2.2.5>
    257b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002580 <regexec@plt>:
    2580:	f3 0f 1e fa          	endbr64 
    2584:	f2 ff 25 cd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8cd]        # 10e58 <regexec@GLIBC_2.3.4>
    258b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002590 <pcap_open_live@plt>:
    2590:	f3 0f 1e fa          	endbr64 
    2594:	f2 ff 25 c5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8c5]        # 10e60 <pcap_open_live>
    259b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025a0 <setsockopt@plt>:
    25a0:	f3 0f 1e fa          	endbr64 
    25a4:	f2 ff 25 bd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8bd]        # 10e68 <setsockopt@GLIBC_2.2.5>
    25ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025b0 <sqlite3_free@plt>:
    25b0:	f3 0f 1e fa          	endbr64 
    25b4:	f2 ff 25 b5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8b5]        # 10e70 <sqlite3_free>
    25bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025c0 <lua_settop@plt>:
    25c0:	f3 0f 1e fa          	endbr64 
    25c4:	f2 ff 25 ad e8 00 00 	bnd jmp QWORD PTR [rip+0xe8ad]        # 10e78 <lua_settop@LUA_5.3>
    25cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025d0 <pthread_create@plt>:
    25d0:	f3 0f 1e fa          	endbr64 
    25d4:	f2 ff 25 a5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8a5]        # 10e80 <pthread_create@GLIBC_2.34>
    25db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025e0 <backtrace_symbols@plt>:
    25e0:	f3 0f 1e fa          	endbr64 
    25e4:	f2 ff 25 9d e8 00 00 	bnd jmp QWORD PTR [rip+0xe89d]        # 10e88 <backtrace_symbols@GLIBC_2.2.5>
    25eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025f0 <free@plt>:
    25f0:	f3 0f 1e fa          	endbr64 
    25f4:	f2 ff 25 95 e8 00 00 	bnd jmp QWORD PTR [rip+0xe895]        # 10e90 <free@GLIBC_2.2.5>
    25fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002600 <strlen@plt>:
    2600:	f3 0f 1e fa          	endbr64 
    2604:	f2 ff 25 8d e8 00 00 	bnd jmp QWORD PTR [rip+0xe88d]        # 10e98 <strlen@GLIBC_2.2.5>
    260b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002610 <listen@plt>:
    2610:	f3 0f 1e fa          	endbr64 
    2614:	f2 ff 25 85 e8 00 00 	bnd jmp QWORD PTR [rip+0xe885]        # 10ea0 <listen@GLIBC_2.2.5>
    261b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002620 <sprintf@plt>:
    2620:	f3 0f 1e fa          	endbr64 
    2624:	f2 ff 25 7d e8 00 00 	bnd jmp QWORD PTR [rip+0xe87d]        # 10ea8 <sprintf@GLIBC_2.2.5>
    262b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002630 <ntohs@plt>:
    2630:	f3 0f 1e fa          	endbr64 
    2634:	f2 ff 25 75 e8 00 00 	bnd jmp QWORD PTR [rip+0xe875]        # 10eb0 <ntohs@GLIBC_2.2.5>
    263b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002640 <ntohl@plt>:
    2640:	f3 0f 1e fa          	endbr64 
    2644:	f2 ff 25 6d e8 00 00 	bnd jmp QWORD PTR [rip+0xe86d]        # 10eb8 <ntohl@GLIBC_2.2.5>
    264b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002650 <sleep@plt>:
    2650:	f3 0f 1e fa          	endbr64 
    2654:	f2 ff 25 65 e8 00 00 	bnd jmp QWORD PTR [rip+0xe865]        # 10ec0 <sleep@GLIBC_2.2.5>
    265b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002660 <lua_pcallk@plt>:
    2660:	f3 0f 1e fa          	endbr64 
    2664:	f2 ff 25 5d e8 00 00 	bnd jmp QWORD PTR [rip+0xe85d]        # 10ec8 <lua_pcallk@LUA_5.3>
    266b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002670 <strstr@plt>:
    2670:	f3 0f 1e fa          	endbr64 
    2674:	f2 ff 25 55 e8 00 00 	bnd jmp QWORD PTR [rip+0xe855]        # 10ed0 <strstr@GLIBC_2.2.5>
    267b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002680 <strcat@plt>:
    2680:	f3 0f 1e fa          	endbr64 
    2684:	f2 ff 25 4d e8 00 00 	bnd jmp QWORD PTR [rip+0xe84d]        # 10ed8 <strcat@GLIBC_2.2.5>
    268b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002690 <fputs@plt>:
    2690:	f3 0f 1e fa          	endbr64 
    2694:	f2 ff 25 45 e8 00 00 	bnd jmp QWORD PTR [rip+0xe845]        # 10ee0 <fputs@GLIBC_2.2.5>
    269b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026a0 <strtol@plt>:
    26a0:	f3 0f 1e fa          	endbr64 
    26a4:	f2 ff 25 3d e8 00 00 	bnd jmp QWORD PTR [rip+0xe83d]        # 10ee8 <strtol@GLIBC_2.2.5>
    26ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026b0 <luaL_loadfilex@plt>:
    26b0:	f3 0f 1e fa          	endbr64 
    26b4:	f2 ff 25 35 e8 00 00 	bnd jmp QWORD PTR [rip+0xe835]        # 10ef0 <luaL_loadfilex@LUA_5.3>
    26bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026c0 <atoi@plt>:
    26c0:	f3 0f 1e fa          	endbr64 
    26c4:	f2 ff 25 2d e8 00 00 	bnd jmp QWORD PTR [rip+0xe82d]        # 10ef8 <atoi@GLIBC_2.2.5>
    26cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026d0 <regcomp@plt>:
    26d0:	f3 0f 1e fa          	endbr64 
    26d4:	f2 ff 25 25 e8 00 00 	bnd jmp QWORD PTR [rip+0xe825]        # 10f00 <regcomp@GLIBC_2.2.5>
    26db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026e0 <signal@plt>:
    26e0:	f3 0f 1e fa          	endbr64 
    26e4:	f2 ff 25 1d e8 00 00 	bnd jmp QWORD PTR [rip+0xe81d]        # 10f08 <signal@GLIBC_2.2.5>
    26eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026f0 <strchr@plt>:
    26f0:	f3 0f 1e fa          	endbr64 
    26f4:	f2 ff 25 15 e8 00 00 	bnd jmp QWORD PTR [rip+0xe815]        # 10f10 <strchr@GLIBC_2.2.5>
    26fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002700 <lua_gettop@plt>:
    2700:	f3 0f 1e fa          	endbr64 
    2704:	f2 ff 25 0d e8 00 00 	bnd jmp QWORD PTR [rip+0xe80d]        # 10f18 <lua_gettop@LUA_5.3>
    270b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002710 <luaL_newstate@plt>:
    2710:	f3 0f 1e fa          	endbr64 
    2714:	f2 ff 25 05 e8 00 00 	bnd jmp QWORD PTR [rip+0xe805]        # 10f20 <luaL_newstate@LUA_5.3>
    271b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002720 <socket@plt>:
    2720:	f3 0f 1e fa          	endbr64 
    2724:	f2 ff 25 fd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7fd]        # 10f28 <socket@GLIBC_2.2.5>
    272b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002730 <luaL_openlibs@plt>:
    2730:	f3 0f 1e fa          	endbr64 
    2734:	f2 ff 25 f5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7f5]        # 10f30 <luaL_openlibs@LUA_5.3>
    273b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002740 <__stack_chk_fail@plt>:
    2740:	f3 0f 1e fa          	endbr64 
    2744:	f2 ff 25 ed e7 00 00 	bnd jmp QWORD PTR [rip+0xe7ed]        # 10f38 <__stack_chk_fail@GLIBC_2.4>
    274b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002750 <strcmp@plt>:
    2750:	f3 0f 1e fa          	endbr64 
    2754:	f2 ff 25 e5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7e5]        # 10f40 <strcmp@GLIBC_2.2.5>
    275b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002760 <getline@plt>:
    2760:	f3 0f 1e fa          	endbr64 
    2764:	f2 ff 25 dd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7dd]        # 10f48 <getline@GLIBC_2.2.5>
    276b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002770 <strcpy@plt>:
    2770:	f3 0f 1e fa          	endbr64 
    2774:	f2 ff 25 d5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7d5]        # 10f50 <strcpy@GLIBC_2.2.5>
    277b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002780 <strtok@plt>:
    2780:	f3 0f 1e fa          	endbr64 
    2784:	f2 ff 25 cd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7cd]        # 10f58 <strtok@GLIBC_2.2.5>
    278b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002790 <lua_close@plt>:
    2790:	f3 0f 1e fa          	endbr64 
    2794:	f2 ff 25 c5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7c5]        # 10f60 <lua_close@LUA_5.3>
    279b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027a0 <sqlite3_errmsg@plt>:
    27a0:	f3 0f 1e fa          	endbr64 
    27a4:	f2 ff 25 bd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7bd]        # 10f68 <sqlite3_errmsg>
    27ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027b0 <fclose@plt>:
    27b0:	f3 0f 1e fa          	endbr64 
    27b4:	f2 ff 25 b5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7b5]        # 10f70 <fclose@GLIBC_2.2.5>
    27bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027c0 <strncpy@plt>:
    27c0:	f3 0f 1e fa          	endbr64 
    27c4:	f2 ff 25 ad e7 00 00 	bnd jmp QWORD PTR [rip+0xe7ad]        # 10f78 <strncpy@GLIBC_2.2.5>
    27cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027d0 <strcspn@plt>:
    27d0:	f3 0f 1e fa          	endbr64 
    27d4:	f2 ff 25 a5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7a5]        # 10f80 <strcspn@GLIBC_2.2.5>
    27db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027e0 <bind@plt>:
    27e0:	f3 0f 1e fa          	endbr64 
    27e4:	f2 ff 25 9d e7 00 00 	bnd jmp QWORD PTR [rip+0xe79d]        # 10f88 <bind@GLIBC_2.2.5>
    27eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027f0 <pcap_loop@plt>:
    27f0:	f3 0f 1e fa          	endbr64 
    27f4:	f2 ff 25 95 e7 00 00 	bnd jmp QWORD PTR [rip+0xe795]        # 10f90 <pcap_loop>
    27fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002800 <htonl@plt>:
    2800:	f3 0f 1e fa          	endbr64 
    2804:	f2 ff 25 8d e7 00 00 	bnd jmp QWORD PTR [rip+0xe78d]        # 10f98 <htonl@GLIBC_2.2.5>
    280b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002810 <perror@plt>:
    2810:	f3 0f 1e fa          	endbr64 
    2814:	f2 ff 25 85 e7 00 00 	bnd jmp QWORD PTR [rip+0xe785]        # 10fa0 <perror@GLIBC_2.2.5>
    281b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002820 <fprintf@plt>:
    2820:	f3 0f 1e fa          	endbr64 
    2824:	f2 ff 25 7d e7 00 00 	bnd jmp QWORD PTR [rip+0xe77d]        # 10fa8 <fprintf@GLIBC_2.2.5>
    282b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002830 <localtime@plt>:
    2830:	f3 0f 1e fa          	endbr64 
    2834:	f2 ff 25 75 e7 00 00 	bnd jmp QWORD PTR [rip+0xe775]        # 10fb0 <localtime@GLIBC_2.2.5>
    283b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002840 <getdelim@plt>:
    2840:	f3 0f 1e fa          	endbr64 
    2844:	f2 ff 25 6d e7 00 00 	bnd jmp QWORD PTR [rip+0xe76d]        # 10fb8 <getdelim@GLIBC_2.2.5>
    284b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002850 <accept@plt>:
    2850:	f3 0f 1e fa          	endbr64 
    2854:	f2 ff 25 65 e7 00 00 	bnd jmp QWORD PTR [rip+0xe765]        # 10fc0 <accept@GLIBC_2.2.5>
    285b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002860 <sqlite3_open@plt>:
    2860:	f3 0f 1e fa          	endbr64 
    2864:	f2 ff 25 5d e7 00 00 	bnd jmp QWORD PTR [rip+0xe75d]        # 10fc8 <sqlite3_open>
    286b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002870 <time@plt>:
    2870:	f3 0f 1e fa          	endbr64 
    2874:	f2 ff 25 55 e7 00 00 	bnd jmp QWORD PTR [rip+0xe755]        # 10fd0 <time@GLIBC_2.2.5>
    287b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000002880 <_start>:
    2880:	f3 0f 1e fa          	endbr64 
    2884:	31 ed                	xor    ebp,ebp
    2886:	49 89 d1             	mov    r9,rdx
    2889:	5e                   	pop    rsi
    288a:	48 89 e2             	mov    rdx,rsp
    288d:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    2891:	50                   	push   rax
    2892:	54                   	push   rsp
    2893:	45 31 c0             	xor    r8d,r8d
    2896:	31 c9                	xor    ecx,ecx
    2898:	48 8d 3d 8a 3f 00 00 	lea    rdi,[rip+0x3f8a]        # 6829 <main>
    289f:	ff 15 53 e7 00 00    	call   QWORD PTR [rip+0xe753]        # 10ff8 <__libc_start_main@GLIBC_2.34>
    28a5:	f4                   	hlt    
    28a6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    28ad:	00 00 00 

00000000000028b0 <deregister_tm_clones>:
    28b0:	48 8d 3d 91 e7 00 00 	lea    rdi,[rip+0xe791]        # 11048 <__TMC_END__>
    28b7:	48 8d 05 8a e7 00 00 	lea    rax,[rip+0xe78a]        # 11048 <__TMC_END__>
    28be:	48 39 f8             	cmp    rax,rdi
    28c1:	74 15                	je     28d8 <deregister_tm_clones+0x28>
    28c3:	48 8b 05 16 e7 00 00 	mov    rax,QWORD PTR [rip+0xe716]        # 10fe0 <_ITM_deregisterTMCloneTable>
    28ca:	48 85 c0             	test   rax,rax
    28cd:	74 09                	je     28d8 <deregister_tm_clones+0x28>
    28cf:	ff e0                	jmp    rax
    28d1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    28d8:	c3                   	ret    
    28d9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000028e0 <register_tm_clones>:
    28e0:	48 8d 3d 61 e7 00 00 	lea    rdi,[rip+0xe761]        # 11048 <__TMC_END__>
    28e7:	48 8d 35 5a e7 00 00 	lea    rsi,[rip+0xe75a]        # 11048 <__TMC_END__>
    28ee:	48 29 fe             	sub    rsi,rdi
    28f1:	48 89 f0             	mov    rax,rsi
    28f4:	48 c1 ee 3f          	shr    rsi,0x3f
    28f8:	48 c1 f8 03          	sar    rax,0x3
    28fc:	48 01 c6             	add    rsi,rax
    28ff:	48 d1 fe             	sar    rsi,1
    2902:	74 14                	je     2918 <register_tm_clones+0x38>
    2904:	48 8b 05 dd e6 00 00 	mov    rax,QWORD PTR [rip+0xe6dd]        # 10fe8 <_ITM_registerTMCloneTable>
    290b:	48 85 c0             	test   rax,rax
    290e:	74 08                	je     2918 <register_tm_clones+0x38>
    2910:	ff e0                	jmp    rax
    2912:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    2918:	c3                   	ret    
    2919:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002920 <__do_global_dtors_aux>:
    2920:	f3 0f 1e fa          	endbr64 
    2924:	80 3d 3d e7 00 00 00 	cmp    BYTE PTR [rip+0xe73d],0x0        # 11068 <completed.0>
    292b:	75 2b                	jne    2958 <__do_global_dtors_aux+0x38>
    292d:	55                   	push   rbp
    292e:	48 83 3d ba e6 00 00 	cmp    QWORD PTR [rip+0xe6ba],0x0        # 10ff0 <__cxa_finalize@GLIBC_2.2.5>
    2935:	00 
    2936:	48 89 e5             	mov    rbp,rsp
    2939:	74 0c                	je     2947 <__do_global_dtors_aux+0x27>
    293b:	48 8b 3d c6 e6 00 00 	mov    rdi,QWORD PTR [rip+0xe6c6]        # 11008 <__dso_handle>
    2942:	e8 09 fb ff ff       	call   2450 <__cxa_finalize@plt>
    2947:	e8 64 ff ff ff       	call   28b0 <deregister_tm_clones>
    294c:	c6 05 15 e7 00 00 01 	mov    BYTE PTR [rip+0xe715],0x1        # 11068 <completed.0>
    2953:	5d                   	pop    rbp
    2954:	c3                   	ret    
    2955:	0f 1f 00             	nop    DWORD PTR [rax]
    2958:	c3                   	ret    
    2959:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002960 <frame_dummy>:
    2960:	f3 0f 1e fa          	endbr64 
    2964:	e9 77 ff ff ff       	jmp    28e0 <register_tm_clones>

0000000000002969 <add_thread>:
    2969:	f3 0f 1e fa          	endbr64 
    296d:	55                   	push   rbp
    296e:	48 89 e5             	mov    rbp,rsp
    2971:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    2975:	8b 05 25 e9 00 00    	mov    eax,DWORD PTR [rip+0xe925]        # 112a0 <thread_count>
    297b:	8d 50 01             	lea    edx,[rax+0x1]
    297e:	89 15 1c e9 00 00    	mov    DWORD PTR [rip+0xe91c],edx        # 112a0 <thread_count>
    2984:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    2988:	48 8b 12             	mov    rdx,QWORD PTR [rdx]
    298b:	48 98                	cdqe   
    298d:	48 8d 0c c5 00 00 00 	lea    rcx,[rax*8+0x0]
    2994:	00 
    2995:	48 8d 05 04 e7 00 00 	lea    rax,[rip+0xe704]        # 110a0 <threads>
    299c:	48 89 14 01          	mov    QWORD PTR [rcx+rax*1],rdx
    29a0:	90                   	nop
    29a1:	5d                   	pop    rbp
    29a2:	c3                   	ret    

00000000000029a3 <pktmgr>:
    29a3:	f3 0f 1e fa          	endbr64 
    29a7:	55                   	push   rbp
    29a8:	48 89 e5             	mov    rbp,rsp
    29ab:	53                   	push   rbx
    29ac:	48 83 ec 38          	sub    rsp,0x38
    29b0:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    29b4:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    29b8:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    29bc:	0f b6 05 a1 75 10 00 	movzx  eax,BYTE PTR [rip+0x1075a1]        # 109f64 <packet_print>
    29c3:	84 c0                	test   al,al
    29c5:	74 0c                	je     29d3 <pktmgr+0x30>
    29c7:	48 8d 3d 82 96 00 00 	lea    rdi,[rip+0x9682]        # c050 <_IO_stdin_used+0x50>
    29ce:	e8 0d fb ff ff       	call   24e0 <puts@plt>
    29d3:	8b 05 cb e8 00 00    	mov    eax,DWORD PTR [rip+0xe8cb]        # 112a4 <total_pkt_captured>
    29d9:	83 c0 01             	add    eax,0x1
    29dc:	89 05 c2 e8 00 00    	mov    DWORD PTR [rip+0xe8c2],eax        # 112a4 <total_pkt_captured>
    29e2:	8b 05 d8 e8 00 00    	mov    eax,DWORD PTR [rip+0xe8d8]        # 112c0 <pkt_counter>
    29e8:	83 c0 01             	add    eax,0x1
    29eb:	89 05 cf e8 00 00    	mov    DWORD PTR [rip+0xe8cf],eax        # 112c0 <pkt_counter>
    29f1:	8b 15 c9 e8 00 00    	mov    edx,DWORD PTR [rip+0xe8c9]        # 112c0 <pkt_counter>
    29f7:	8b 05 63 75 10 00    	mov    eax,DWORD PTR [rip+0x107563]        # 109f60 <clean_delay_pkts>
    29fd:	39 c2                	cmp    edx,eax
    29ff:	72 0a                	jb     2a0b <pktmgr+0x68>
    2a01:	c7 05 b5 e8 00 00 00 	mov    DWORD PTR [rip+0xe8b5],0x0        # 112c0 <pkt_counter>
    2a08:	00 00 00 
    2a0b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2a0f:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    2a13:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2a17:	0f b7 40 0c          	movzx  eax,WORD PTR [rax+0xc]
    2a1b:	0f b7 c0             	movzx  eax,ax
    2a1e:	3d 86 dd 00 00       	cmp    eax,0xdd86
    2a23:	74 46                	je     2a6b <pktmgr+0xc8>
    2a25:	3d 86 dd 00 00       	cmp    eax,0xdd86
    2a2a:	7f 77                	jg     2aa3 <pktmgr+0x100>
    2a2c:	3d 80 35 00 00       	cmp    eax,0x3580
    2a31:	74 23                	je     2a56 <pktmgr+0xb3>
    2a33:	3d 80 35 00 00       	cmp    eax,0x3580
    2a38:	7f 69                	jg     2aa3 <pktmgr+0x100>
    2a3a:	3d 08 06 00 00       	cmp    eax,0x608
    2a3f:	74 15                	je     2a56 <pktmgr+0xb3>
    2a41:	3d 08 06 00 00       	cmp    eax,0x608
    2a46:	7f 5b                	jg     2aa3 <pktmgr+0x100>
    2a48:	83 f8 08             	cmp    eax,0x8
    2a4b:	74 33                	je     2a80 <pktmgr+0xdd>
    2a4d:	3d 90 00 00 00       	cmp    eax,0x90
    2a52:	74 41                	je     2a95 <pktmgr+0xf2>
    2a54:	eb 4d                	jmp    2aa3 <pktmgr+0x100>
    2a56:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2a5a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2a5e:	48 89 d6             	mov    rsi,rdx
    2a61:	48 89 c7             	mov    rdi,rax
    2a64:	e8 86 00 00 00       	call   2aef <arpdecode>
    2a69:	eb 7d                	jmp    2ae8 <pktmgr+0x145>
    2a6b:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2a6f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2a73:	48 89 d6             	mov    rsi,rdx
    2a76:	48 89 c7             	mov    rdi,rax
    2a79:	e8 0d 84 00 00       	call   ae8b <ip6decode>
    2a7e:	eb 68                	jmp    2ae8 <pktmgr+0x145>
    2a80:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2a84:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2a88:	48 89 d6             	mov    rsi,rdx
    2a8b:	48 89 c7             	mov    rdi,rax
    2a8e:	e8 56 0b 00 00       	call   35e9 <ipv4pktmgr>
    2a93:	eb 53                	jmp    2ae8 <pktmgr+0x145>
    2a95:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2a99:	48 89 c7             	mov    rdi,rax
    2a9c:	e8 42 03 00 00       	call   2de3 <loopback_ctp_decode>
    2aa1:	eb 45                	jmp    2ae8 <pktmgr+0x145>
    2aa3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2aa7:	48 89 c7             	mov    rdi,rax
    2aaa:	e8 f5 04 00 00       	call   2fa4 <uc_mac_ntoa>
    2aaf:	48 89 c3             	mov    rbx,rax
    2ab2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2ab6:	48 83 c0 06          	add    rax,0x6
    2aba:	48 89 c7             	mov    rdi,rax
    2abd:	e8 e2 04 00 00       	call   2fa4 <uc_mac_ntoa>
    2ac2:	41 b9 ff ff ff ff    	mov    r9d,0xffffffff
    2ac8:	41 b8 ff ff ff ff    	mov    r8d,0xffffffff
    2ace:	48 89 d9             	mov    rcx,rbx
    2ad1:	48 89 c2             	mov    rdx,rax
    2ad4:	48 8d 35 bd 95 00 00 	lea    rsi,[rip+0x95bd]        # c098 <_IO_stdin_used+0x98>
    2adb:	48 8d 3d e8 95 00 00 	lea    rdi,[rip+0x95e8]        # c0ca <_IO_stdin_used+0xca>
    2ae2:	e8 54 64 00 00       	call   8f3b <lfprintf>
    2ae7:	90                   	nop
    2ae8:	90                   	nop
    2ae9:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    2aed:	c9                   	leave  
    2aee:	c3                   	ret    

0000000000002aef <arpdecode>:
    2aef:	f3 0f 1e fa          	endbr64 
    2af3:	55                   	push   rbp
    2af4:	48 89 e5             	mov    rbp,rsp
    2af7:	48 81 ec 50 03 00 00 	sub    rsp,0x350
    2afe:	48 89 bd b8 fc ff ff 	mov    QWORD PTR [rbp-0x348],rdi
    2b05:	48 89 b5 b0 fc ff ff 	mov    QWORD PTR [rbp-0x350],rsi
    2b0c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2b13:	00 00 
    2b15:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2b19:	31 c0                	xor    eax,eax
    2b1b:	0f b6 05 42 74 10 00 	movzx  eax,BYTE PTR [rip+0x107442]        # 109f64 <packet_print>
    2b22:	84 c0                	test   al,al
    2b24:	74 18                	je     2b3e <arpdecode+0x4f>
    2b26:	48 8d 35 bb 95 00 00 	lea    rsi,[rip+0x95bb]        # c0e8 <_IO_stdin_used+0xe8>
    2b2d:	48 8d 3d bc 95 00 00 	lea    rdi,[rip+0x95bc]        # c0f0 <_IO_stdin_used+0xf0>
    2b34:	b8 00 00 00 00       	mov    eax,0x0
    2b39:	e8 42 f9 ff ff       	call   2480 <printf@plt>
    2b3e:	48 8b 85 b8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x348]
    2b45:	48 83 c0 0e          	add    rax,0xe
    2b49:	48 89 85 c8 fc ff ff 	mov    QWORD PTR [rbp-0x338],rax
    2b50:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2b57:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    2b5b:	0f b7 c0             	movzx  eax,ax
    2b5e:	3d 00 18 00 00       	cmp    eax,0x1800
    2b63:	74 35                	je     2b9a <arpdecode+0xab>
    2b65:	3d 00 18 00 00       	cmp    eax,0x1800
    2b6a:	0f 8f 1d 02 00 00    	jg     2d8d <arpdecode+0x29e>
    2b70:	3d 00 02 00 00       	cmp    eax,0x200
    2b75:	0f 84 eb 00 00 00    	je     2c66 <arpdecode+0x177>
    2b7b:	3d 00 02 00 00       	cmp    eax,0x200
    2b80:	0f 8f 07 02 00 00    	jg     2d8d <arpdecode+0x29e>
    2b86:	83 f8 02             	cmp    eax,0x2
    2b89:	0f 84 d7 00 00 00    	je     2c66 <arpdecode+0x177>
    2b8f:	3d 00 01 00 00       	cmp    eax,0x100
    2b94:	0f 85 f3 01 00 00    	jne    2d8d <arpdecode+0x29e>
    2b9a:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2ba1:	48 83 c0 18          	add    rax,0x18
    2ba5:	48 89 c7             	mov    rdi,rax
    2ba8:	e8 9d 04 00 00       	call   304a <u8_ipv4_ntoa>
    2bad:	48 89 c1             	mov    rcx,rax
    2bb0:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2bb4:	ba 20 00 00 00       	mov    edx,0x20
    2bb9:	48 89 ce             	mov    rsi,rcx
    2bbc:	48 89 c7             	mov    rdi,rax
    2bbf:	e8 fc fb ff ff       	call   27c0 <strncpy@plt>
    2bc4:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2bcb:	48 83 c0 0e          	add    rax,0xe
    2bcf:	48 89 c7             	mov    rdi,rax
    2bd2:	e8 73 04 00 00       	call   304a <u8_ipv4_ntoa>
    2bd7:	48 89 c1             	mov    rcx,rax
    2bda:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2bde:	ba 20 00 00 00       	mov    edx,0x20
    2be3:	48 89 ce             	mov    rsi,rcx
    2be6:	48 89 c7             	mov    rdi,rax
    2be9:	e8 d2 fb ff ff       	call   27c0 <strncpy@plt>
    2bee:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2bf2:	ba 05 00 00 00       	mov    edx,0x5
    2bf7:	48 8d 35 f5 94 00 00 	lea    rsi,[rip+0x94f5]        # c0f3 <_IO_stdin_used+0xf3>
    2bfe:	48 89 c7             	mov    rdi,rax
    2c01:	e8 4a f9 ff ff       	call   2550 <strncmp@plt>
    2c06:	85 c0                	test   eax,eax
    2c08:	75 2c                	jne    2c36 <arpdecode+0x147>
    2c0a:	0f b6 05 53 73 10 00 	movzx  eax,BYTE PTR [rip+0x107353]        # 109f64 <packet_print>
    2c11:	84 c0                	test   al,al
    2c13:	0f 84 97 01 00 00    	je     2db0 <arpdecode+0x2c1>
    2c19:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2c1d:	48 89 c6             	mov    rsi,rax
    2c20:	48 8d 3d d9 94 00 00 	lea    rdi,[rip+0x94d9]        # c100 <_IO_stdin_used+0x100>
    2c27:	b8 00 00 00 00       	mov    eax,0x0
    2c2c:	e8 4f f8 ff ff       	call   2480 <printf@plt>
    2c31:	e9 7a 01 00 00       	jmp    2db0 <arpdecode+0x2c1>
    2c36:	0f b6 05 27 73 10 00 	movzx  eax,BYTE PTR [rip+0x107327]        # 109f64 <packet_print>
    2c3d:	84 c0                	test   al,al
    2c3f:	0f 84 6b 01 00 00    	je     2db0 <arpdecode+0x2c1>
    2c45:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2c49:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2c4d:	48 89 c6             	mov    rsi,rax
    2c50:	48 8d 3d c9 94 00 00 	lea    rdi,[rip+0x94c9]        # c120 <_IO_stdin_used+0x120>
    2c57:	b8 00 00 00 00       	mov    eax,0x0
    2c5c:	e8 1f f8 ff ff       	call   2480 <printf@plt>
    2c61:	e9 4a 01 00 00       	jmp    2db0 <arpdecode+0x2c1>
    2c66:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2c6d:	48 83 c0 08          	add    rax,0x8
    2c71:	48 89 c7             	mov    rdi,rax
    2c74:	e8 7d 02 00 00       	call   2ef6 <mac_ntoa>
    2c79:	48 89 c1             	mov    rcx,rax
    2c7c:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2c80:	ba 40 00 00 00       	mov    edx,0x40
    2c85:	48 89 ce             	mov    rsi,rcx
    2c88:	48 89 c7             	mov    rdi,rax
    2c8b:	e8 30 fb ff ff       	call   27c0 <strncpy@plt>
    2c90:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2c97:	48 83 c0 0e          	add    rax,0xe
    2c9b:	48 89 c7             	mov    rdi,rax
    2c9e:	e8 a7 03 00 00       	call   304a <u8_ipv4_ntoa>
    2ca3:	48 89 c1             	mov    rcx,rax
    2ca6:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2caa:	ba 20 00 00 00       	mov    edx,0x20
    2caf:	48 89 ce             	mov    rsi,rcx
    2cb2:	48 89 c7             	mov    rdi,rax
    2cb5:	e8 06 fb ff ff       	call   27c0 <strncpy@plt>
    2cba:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2cbe:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2cc2:	48 89 d6             	mov    rsi,rdx
    2cc5:	48 89 c7             	mov    rdi,rax
    2cc8:	e8 83 4f 00 00       	call   7c50 <entry_exists>
    2ccd:	83 f8 ff             	cmp    eax,0xffffffff
    2cd0:	74 15                	je     2ce7 <arpdecode+0x1f8>
    2cd2:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2cd6:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2cda:	48 89 d6             	mov    rsi,rdx
    2cdd:	48 89 c7             	mov    rdi,rax
    2ce0:	e8 18 4e 00 00       	call   7afd <compare_entries>
    2ce5:	eb 7d                	jmp    2d64 <arpdecode+0x275>
    2ce7:	0f b6 05 33 72 10 00 	movzx  eax,BYTE PTR [rip+0x107233]        # 109f21 <use_sqlite>
    2cee:	84 c0                	test   al,al
    2cf0:	74 5f                	je     2d51 <arpdecode+0x262>
    2cf2:	c7 85 f4 fc ff ff 00 	mov    DWORD PTR [rbp-0x30c],0x0
    2cf9:	00 00 00 
    2cfc:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    2d00:	48 8d 85 d0 fc ff ff 	lea    rax,[rbp-0x330]
    2d07:	48 89 d6             	mov    rsi,rdx
    2d0a:	48 89 c7             	mov    rdi,rax
    2d0d:	e8 5e fa ff ff       	call   2770 <strcpy@plt>
    2d12:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2d16:	48 8d 95 d0 fc ff ff 	lea    rdx,[rbp-0x330]
    2d1d:	48 83 c2 10          	add    rdx,0x10
    2d21:	48 89 c6             	mov    rsi,rax
    2d24:	48 89 d7             	mov    rdi,rdx
    2d27:	e8 44 fa ff ff       	call   2770 <strcpy@plt>
    2d2c:	48 8d 95 d0 fc ff ff 	lea    rdx,[rbp-0x330]
    2d33:	48 8d 85 c0 fc ff ff 	lea    rax,[rbp-0x340]
    2d3a:	48 89 d1             	mov    rcx,rdx
    2d3d:	48 8d 15 6b 51 00 00 	lea    rdx,[rip+0x516b]        # 7eaf <update_db>
    2d44:	be 00 00 00 00       	mov    esi,0x0
    2d49:	48 89 c7             	mov    rdi,rax
    2d4c:	e8 7f f8 ff ff       	call   25d0 <pthread_create@plt>
    2d51:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2d55:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d59:	48 89 d6             	mov    rsi,rdx
    2d5c:	48 89 c7             	mov    rdi,rax
    2d5f:	e8 78 4e 00 00       	call   7bdc <add_entry>
    2d64:	0f b6 05 f9 71 10 00 	movzx  eax,BYTE PTR [rip+0x1071f9]        # 109f64 <packet_print>
    2d6b:	84 c0                	test   al,al
    2d6d:	74 44                	je     2db3 <arpdecode+0x2c4>
    2d6f:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2d73:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d77:	48 89 c6             	mov    rsi,rax
    2d7a:	48 8d 3d c7 93 00 00 	lea    rdi,[rip+0x93c7]        # c148 <_IO_stdin_used+0x148>
    2d81:	b8 00 00 00 00       	mov    eax,0x0
    2d86:	e8 f5 f6 ff ff       	call   2480 <printf@plt>
    2d8b:	eb 26                	jmp    2db3 <arpdecode+0x2c4>
    2d8d:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2d94:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    2d98:	0f b7 c0             	movzx  eax,ax
    2d9b:	89 c6                	mov    esi,eax
    2d9d:	48 8d 3d c3 93 00 00 	lea    rdi,[rip+0x93c3]        # c167 <_IO_stdin_used+0x167>
    2da4:	b8 00 00 00 00       	mov    eax,0x0
    2da9:	e8 d2 f6 ff ff       	call   2480 <printf@plt>
    2dae:	eb 04                	jmp    2db4 <arpdecode+0x2c5>
    2db0:	90                   	nop
    2db1:	eb 01                	jmp    2db4 <arpdecode+0x2c5>
    2db3:	90                   	nop
    2db4:	48 8d 35 c4 93 00 00 	lea    rsi,[rip+0x93c4]        # c17f <_IO_stdin_used+0x17f>
    2dbb:	48 8d 3d 2e 93 00 00 	lea    rdi,[rip+0x932e]        # c0f0 <_IO_stdin_used+0xf0>
    2dc2:	b8 00 00 00 00       	mov    eax,0x0
    2dc7:	e8 b4 f6 ff ff       	call   2480 <printf@plt>
    2dcc:	90                   	nop
    2dcd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2dd1:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    2dd8:	00 00 
    2dda:	74 05                	je     2de1 <arpdecode+0x2f2>
    2ddc:	e8 5f f9 ff ff       	call   2740 <__stack_chk_fail@plt>
    2de1:	c9                   	leave  
    2de2:	c3                   	ret    

0000000000002de3 <loopback_ctp_decode>:
    2de3:	f3 0f 1e fa          	endbr64 
    2de7:	55                   	push   rbp
    2de8:	48 89 e5             	mov    rbp,rsp
    2deb:	48 83 ec 60          	sub    rsp,0x60
    2def:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    2df3:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2dfa:	00 00 
    2dfc:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2e00:	31 c0                	xor    eax,eax
    2e02:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    2e06:	48 83 c0 0e          	add    rax,0xe
    2e0a:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    2e0e:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    2e12:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    2e16:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    2e1a:	48 83 c0 06          	add    rax,0x6
    2e1e:	48 89 c7             	mov    rdi,rax
    2e21:	e8 7e 01 00 00       	call   2fa4 <uc_mac_ntoa>
    2e26:	48 89 c1             	mov    rcx,rax
    2e29:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    2e2d:	ba 18 00 00 00       	mov    edx,0x18
    2e32:	48 89 ce             	mov    rsi,rcx
    2e35:	48 89 c7             	mov    rdi,rax
    2e38:	e8 83 f9 ff ff       	call   27c0 <strncpy@plt>
    2e3d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    2e41:	48 89 c7             	mov    rdi,rax
    2e44:	e8 5b 01 00 00       	call   2fa4 <uc_mac_ntoa>
    2e49:	48 89 c1             	mov    rcx,rax
    2e4c:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    2e50:	ba 18 00 00 00       	mov    edx,0x18
    2e55:	48 89 ce             	mov    rsi,rcx
    2e58:	48 89 c7             	mov    rdi,rax
    2e5b:	e8 60 f9 ff ff       	call   27c0 <strncpy@plt>
    2e60:	0f b6 05 fd 70 10 00 	movzx  eax,BYTE PTR [rip+0x1070fd]        # 109f64 <packet_print>
    2e67:	84 c0                	test   al,al
    2e69:	74 1c                	je     2e87 <loopback_ctp_decode+0xa4>
    2e6b:	48 8d 55 e0          	lea    rdx,[rbp-0x20]
    2e6f:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    2e73:	48 89 c6             	mov    rsi,rax
    2e76:	48 8d 3d 07 93 00 00 	lea    rdi,[rip+0x9307]        # c184 <_IO_stdin_used+0x184>
    2e7d:	b8 00 00 00 00       	mov    eax,0x0
    2e82:	e8 f9 f5 ff ff       	call   2480 <printf@plt>
    2e87:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    2e8b:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    2e8f:	0f b7 c0             	movzx  eax,ax
    2e92:	83 f8 01             	cmp    eax,0x1
    2e95:	75 19                	jne    2eb0 <loopback_ctp_decode+0xcd>
    2e97:	0f b6 05 c6 70 10 00 	movzx  eax,BYTE PTR [rip+0x1070c6]        # 109f64 <packet_print>
    2e9e:	84 c0                	test   al,al
    2ea0:	74 39                	je     2edb <loopback_ctp_decode+0xf8>
    2ea2:	48 8d 3d e9 92 00 00 	lea    rdi,[rip+0x92e9]        # c192 <_IO_stdin_used+0x192>
    2ea9:	e8 32 f6 ff ff       	call   24e0 <puts@plt>
    2eae:	eb 2b                	jmp    2edb <loopback_ctp_decode+0xf8>
    2eb0:	0f b6 05 ad 70 10 00 	movzx  eax,BYTE PTR [rip+0x1070ad]        # 109f64 <packet_print>
    2eb7:	84 c0                	test   al,al
    2eb9:	74 23                	je     2ede <loopback_ctp_decode+0xfb>
    2ebb:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    2ebf:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    2ec3:	0f b7 c0             	movzx  eax,ax
    2ec6:	89 c6                	mov    esi,eax
    2ec8:	48 8d 3d cb 92 00 00 	lea    rdi,[rip+0x92cb]        # c19a <_IO_stdin_used+0x19a>
    2ecf:	b8 00 00 00 00       	mov    eax,0x0
    2ed4:	e8 a7 f5 ff ff       	call   2480 <printf@plt>
    2ed9:	eb 03                	jmp    2ede <loopback_ctp_decode+0xfb>
    2edb:	90                   	nop
    2edc:	eb 01                	jmp    2edf <loopback_ctp_decode+0xfc>
    2ede:	90                   	nop
    2edf:	90                   	nop
    2ee0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2ee4:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    2eeb:	00 00 
    2eed:	74 05                	je     2ef4 <loopback_ctp_decode+0x111>
    2eef:	e8 4c f8 ff ff       	call   2740 <__stack_chk_fail@plt>
    2ef4:	c9                   	leave  
    2ef5:	c3                   	ret    

0000000000002ef6 <mac_ntoa>:
    2ef6:	f3 0f 1e fa          	endbr64 
    2efa:	55                   	push   rbp
    2efb:	48 89 e5             	mov    rbp,rsp
    2efe:	48 83 ec 20          	sub    rsp,0x20
    2f02:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    2f06:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2f0a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2f0e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f12:	48 83 c0 05          	add    rax,0x5
    2f16:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f19:	0f b6 f0             	movzx  esi,al
    2f1c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f20:	48 83 c0 04          	add    rax,0x4
    2f24:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f27:	0f b6 c8             	movzx  ecx,al
    2f2a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f2e:	48 83 c0 03          	add    rax,0x3
    2f32:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f35:	0f b6 d0             	movzx  edx,al
    2f38:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f3c:	48 83 c0 02          	add    rax,0x2
    2f40:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f43:	44 0f b6 c8          	movzx  r9d,al
    2f47:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f4b:	48 83 c0 01          	add    rax,0x1
    2f4f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f52:	44 0f b6 c0          	movzx  r8d,al
    2f56:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f5a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f5d:	0f b6 c0             	movzx  eax,al
    2f60:	64 48 8b 3c 25 00 00 	mov    rdi,QWORD PTR fs:0x0
    2f67:	00 00 
    2f69:	48 81 c7 80 fb ff ff 	add    rdi,0xfffffffffffffb80
    2f70:	48 83 ec 08          	sub    rsp,0x8
    2f74:	56                   	push   rsi
    2f75:	51                   	push   rcx
    2f76:	52                   	push   rdx
    2f77:	89 c1                	mov    ecx,eax
    2f79:	48 8d 15 38 92 00 00 	lea    rdx,[rip+0x9238]        # c1b8 <_IO_stdin_used+0x1b8>
    2f80:	be 80 00 00 00       	mov    esi,0x80
    2f85:	b8 00 00 00 00       	mov    eax,0x0
    2f8a:	e8 11 f5 ff ff       	call   24a0 <snprintf@plt>
    2f8f:	48 83 c4 20          	add    rsp,0x20
    2f93:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    2f9a:	00 00 
    2f9c:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    2fa2:	c9                   	leave  
    2fa3:	c3                   	ret    

0000000000002fa4 <uc_mac_ntoa>:
    2fa4:	f3 0f 1e fa          	endbr64 
    2fa8:	55                   	push   rbp
    2fa9:	48 89 e5             	mov    rbp,rsp
    2fac:	48 83 ec 10          	sub    rsp,0x10
    2fb0:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    2fb4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fb8:	48 83 c0 05          	add    rax,0x5
    2fbc:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fbf:	0f b6 f0             	movzx  esi,al
    2fc2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fc6:	48 83 c0 04          	add    rax,0x4
    2fca:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fcd:	0f b6 c8             	movzx  ecx,al
    2fd0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fd4:	48 83 c0 03          	add    rax,0x3
    2fd8:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fdb:	0f b6 d0             	movzx  edx,al
    2fde:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fe2:	48 83 c0 02          	add    rax,0x2
    2fe6:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fe9:	44 0f b6 c8          	movzx  r9d,al
    2fed:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2ff1:	48 83 c0 01          	add    rax,0x1
    2ff5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2ff8:	44 0f b6 c0          	movzx  r8d,al
    2ffc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3000:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3003:	0f b6 c0             	movzx  eax,al
    3006:	64 48 8b 3c 25 00 00 	mov    rdi,QWORD PTR fs:0x0
    300d:	00 00 
    300f:	48 81 c7 80 fb ff ff 	add    rdi,0xfffffffffffffb80
    3016:	48 83 ec 08          	sub    rsp,0x8
    301a:	56                   	push   rsi
    301b:	51                   	push   rcx
    301c:	52                   	push   rdx
    301d:	89 c1                	mov    ecx,eax
    301f:	48 8d 15 92 91 00 00 	lea    rdx,[rip+0x9192]        # c1b8 <_IO_stdin_used+0x1b8>
    3026:	be 80 00 00 00       	mov    esi,0x80
    302b:	b8 00 00 00 00       	mov    eax,0x0
    3030:	e8 6b f4 ff ff       	call   24a0 <snprintf@plt>
    3035:	48 83 c4 20          	add    rsp,0x20
    3039:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3040:	00 00 
    3042:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    3048:	c9                   	leave  
    3049:	c3                   	ret    

000000000000304a <u8_ipv4_ntoa>:
    304a:	f3 0f 1e fa          	endbr64 
    304e:	55                   	push   rbp
    304f:	48 89 e5             	mov    rbp,rsp
    3052:	48 83 ec 20          	sub    rsp,0x20
    3056:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    305a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    305e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3062:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3066:	48 83 c0 03          	add    rax,0x3
    306a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    306d:	0f b6 d0             	movzx  edx,al
    3070:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3074:	48 83 c0 02          	add    rax,0x2
    3078:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    307b:	44 0f b6 c0          	movzx  r8d,al
    307f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3083:	48 83 c0 01          	add    rax,0x1
    3087:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    308a:	0f b6 f0             	movzx  esi,al
    308d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3091:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3094:	0f b6 c0             	movzx  eax,al
    3097:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    309e:	00 00 
    30a0:	48 8d b9 80 fb ff ff 	lea    rdi,[rcx-0x480]
    30a7:	48 83 ec 08          	sub    rsp,0x8
    30ab:	52                   	push   rdx
    30ac:	45 89 c1             	mov    r9d,r8d
    30af:	41 89 f0             	mov    r8d,esi
    30b2:	89 c1                	mov    ecx,eax
    30b4:	48 8d 15 1b 91 00 00 	lea    rdx,[rip+0x911b]        # c1d6 <_IO_stdin_used+0x1d6>
    30bb:	be 80 00 00 00       	mov    esi,0x80
    30c0:	b8 00 00 00 00       	mov    eax,0x0
    30c5:	e8 d6 f3 ff ff       	call   24a0 <snprintf@plt>
    30ca:	48 83 c4 10          	add    rsp,0x10
    30ce:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    30d5:	00 00 
    30d7:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    30dd:	c9                   	leave  
    30de:	c3                   	ret    

00000000000030df <ipv4_ntoa>:
    30df:	f3 0f 1e fa          	endbr64 
    30e3:	55                   	push   rbp
    30e4:	48 89 e5             	mov    rbp,rsp
    30e7:	48 83 ec 20          	sub    rsp,0x20
    30eb:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    30ee:	48 8d 45 ec          	lea    rax,[rbp-0x14]
    30f2:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    30f6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    30fa:	48 83 c0 03          	add    rax,0x3
    30fe:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3101:	0f b6 d0             	movzx  edx,al
    3104:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3108:	48 83 c0 02          	add    rax,0x2
    310c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    310f:	44 0f b6 c0          	movzx  r8d,al
    3113:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3117:	48 83 c0 01          	add    rax,0x1
    311b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    311e:	0f b6 f0             	movzx  esi,al
    3121:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3125:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3128:	0f b6 c0             	movzx  eax,al
    312b:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    3132:	00 00 
    3134:	48 8d b9 80 fb ff ff 	lea    rdi,[rcx-0x480]
    313b:	48 83 ec 08          	sub    rsp,0x8
    313f:	52                   	push   rdx
    3140:	45 89 c1             	mov    r9d,r8d
    3143:	41 89 f0             	mov    r8d,esi
    3146:	89 c1                	mov    ecx,eax
    3148:	48 8d 15 87 90 00 00 	lea    rdx,[rip+0x9087]        # c1d6 <_IO_stdin_used+0x1d6>
    314f:	be 80 00 00 00       	mov    esi,0x80
    3154:	b8 00 00 00 00       	mov    eax,0x0
    3159:	e8 42 f3 ff ff       	call   24a0 <snprintf@plt>
    315e:	48 83 c4 10          	add    rsp,0x10
    3162:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3169:	00 00 
    316b:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    3171:	c9                   	leave  
    3172:	c3                   	ret    

0000000000003173 <inet6_ntoa>:
    3173:	f3 0f 1e fa          	endbr64 
    3177:	55                   	push   rbp
    3178:	48 89 e5             	mov    rbp,rsp
    317b:	41 57                	push   r15
    317d:	41 56                	push   r14
    317f:	41 55                	push   r13
    3181:	41 54                	push   r12
    3183:	53                   	push   rbx
    3184:	48 83 ec 38          	sub    rsp,0x38
    3188:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    318c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3193:	00 00 
    3195:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    3199:	31 c0                	xor    eax,eax
    319b:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    31a2:	00 00 
    31a4:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    31aa:	ba 80 00 00 00       	mov    edx,0x80
    31af:	be 00 00 00 00       	mov    esi,0x0
    31b4:	48 89 c7             	mov    rdi,rax
    31b7:	e8 d4 f2 ff ff       	call   2490 <memset@plt>
    31bc:	48 c7 45 c0 00 00 00 	mov    QWORD PTR [rbp-0x40],0x0
    31c3:	00 
    31c4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    31c8:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    31cc:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    31d0:	48 83 c0 0f          	add    rax,0xf
    31d4:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31d7:	0f b6 c8             	movzx  ecx,al
    31da:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    31de:	48 83 c0 0e          	add    rax,0xe
    31e2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31e5:	0f b6 f8             	movzx  edi,al
    31e8:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    31ec:	48 83 c0 0d          	add    rax,0xd
    31f0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31f3:	0f b6 c0             	movzx  eax,al
    31f6:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
    31f9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    31fd:	48 83 c0 0c          	add    rax,0xc
    3201:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3204:	0f b6 d8             	movzx  ebx,al
    3207:	89 5d b0             	mov    DWORD PTR [rbp-0x50],ebx
    320a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    320e:	48 83 c0 0b          	add    rax,0xb
    3212:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3215:	44 0f b6 f8          	movzx  r15d,al
    3219:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    321d:	48 83 c0 0a          	add    rax,0xa
    3221:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3224:	44 0f b6 f0          	movzx  r14d,al
    3228:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    322c:	48 83 c0 09          	add    rax,0x9
    3230:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3233:	44 0f b6 e8          	movzx  r13d,al
    3237:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    323b:	48 83 c0 08          	add    rax,0x8
    323f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3242:	44 0f b6 e0          	movzx  r12d,al
    3246:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    324a:	48 83 c0 07          	add    rax,0x7
    324e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3251:	0f b6 d8             	movzx  ebx,al
    3254:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3258:	48 83 c0 06          	add    rax,0x6
    325c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    325f:	44 0f b6 d8          	movzx  r11d,al
    3263:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3267:	48 83 c0 05          	add    rax,0x5
    326b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    326e:	44 0f b6 d0          	movzx  r10d,al
    3272:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3276:	48 83 c0 04          	add    rax,0x4
    327a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    327d:	44 0f b6 c8          	movzx  r9d,al
    3281:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3285:	48 83 c0 03          	add    rax,0x3
    3289:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    328c:	44 0f b6 c0          	movzx  r8d,al
    3290:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3294:	48 83 c0 02          	add    rax,0x2
    3298:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    329b:	0f b6 d0             	movzx  edx,al
    329e:	89 55 ac             	mov    DWORD PTR [rbp-0x54],edx
    32a1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32a5:	48 83 c0 01          	add    rax,0x1
    32a9:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32ac:	0f b6 f0             	movzx  esi,al
    32af:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32b3:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32b6:	0f b6 d0             	movzx  edx,al
    32b9:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    32c0:	00 00 
    32c2:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    32c8:	48 83 ec 08          	sub    rsp,0x8
    32cc:	51                   	push   rcx
    32cd:	57                   	push   rdi
    32ce:	8b 4d b4             	mov    ecx,DWORD PTR [rbp-0x4c]
    32d1:	51                   	push   rcx
    32d2:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
    32d5:	51                   	push   rcx
    32d6:	41 57                	push   r15
    32d8:	41 56                	push   r14
    32da:	41 55                	push   r13
    32dc:	41 54                	push   r12
    32de:	53                   	push   rbx
    32df:	41 53                	push   r11
    32e1:	41 52                	push   r10
    32e3:	41 51                	push   r9
    32e5:	41 50                	push   r8
    32e7:	44 8b 4d ac          	mov    r9d,DWORD PTR [rbp-0x54]
    32eb:	41 89 f0             	mov    r8d,esi
    32ee:	89 d1                	mov    ecx,edx
    32f0:	48 8d 15 f1 8e 00 00 	lea    rdx,[rip+0x8ef1]        # c1e8 <_IO_stdin_used+0x1e8>
    32f7:	be 80 00 00 00       	mov    esi,0x80
    32fc:	48 89 c7             	mov    rdi,rax
    32ff:	b8 00 00 00 00       	mov    eax,0x0
    3304:	e8 97 f1 ff ff       	call   24a0 <snprintf@plt>
    3309:	48 83 c4 70          	add    rsp,0x70
    330d:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3314:	00 00 
    3316:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    331c:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    3320:	64 48 2b 34 25 28 00 	sub    rsi,QWORD PTR fs:0x28
    3327:	00 00 
    3329:	74 05                	je     3330 <inet6_ntoa+0x1bd>
    332b:	e8 10 f4 ff ff       	call   2740 <__stack_chk_fail@plt>
    3330:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    3334:	5b                   	pop    rbx
    3335:	41 5c                	pop    r12
    3337:	41 5d                	pop    r13
    3339:	41 5e                	pop    r14
    333b:	41 5f                	pop    r15
    333d:	5d                   	pop    rbp
    333e:	c3                   	ret    

000000000000333f <get_formated_time>:
    333f:	f3 0f 1e fa          	endbr64 
    3343:	55                   	push   rbp
    3344:	48 89 e5             	mov    rbp,rsp
    3347:	53                   	push   rbx
    3348:	48 83 ec 58          	sub    rsp,0x58
    334c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3353:	00 00 
    3355:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    3359:	31 c0                	xor    eax,eax
    335b:	bf ff 00 00 00       	mov    edi,0xff
    3360:	e8 fb f1 ff ff       	call   2560 <malloc@plt>
    3365:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    3369:	bf 00 00 00 00       	mov    edi,0x0
    336e:	e8 fd f4 ff ff       	call   2870 <time@plt>
    3373:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    3377:	48 8d 45 a0          	lea    rax,[rbp-0x60]
    337b:	48 89 c7             	mov    rdi,rax
    337e:	e8 ad f4 ff ff       	call   2830 <localtime@plt>
    3383:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    3386:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    338a:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
    338e:	48 89 5d b8          	mov    QWORD PTR [rbp-0x48],rbx
    3392:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    3396:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    339a:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    339e:	48 89 5d c8          	mov    QWORD PTR [rbp-0x38],rbx
    33a2:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    33a6:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    33aa:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    33ae:	48 89 5d d8          	mov    QWORD PTR [rbp-0x28],rbx
    33b2:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    33b6:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    33ba:	8b 7d b0             	mov    edi,DWORD PTR [rbp-0x50]
    33bd:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
    33c0:	44 8b 4d b8          	mov    r9d,DWORD PTR [rbp-0x48]
    33c4:	44 8b 45 bc          	mov    r8d,DWORD PTR [rbp-0x44]
    33c8:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    33cb:	8d 48 01             	lea    ecx,[rax+0x1]
    33ce:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    33d1:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    33d7:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    33db:	57                   	push   rdi
    33dc:	56                   	push   rsi
    33dd:	48 8d 35 4c 8e 00 00 	lea    rsi,[rip+0x8e4c]        # c230 <_IO_stdin_used+0x230>
    33e4:	48 89 c7             	mov    rdi,rax
    33e7:	b8 00 00 00 00       	mov    eax,0x0
    33ec:	e8 2f f2 ff ff       	call   2620 <sprintf@plt>
    33f1:	48 83 c4 10          	add    rsp,0x10
    33f5:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    33f9:	48 8b 5d e8          	mov    rbx,QWORD PTR [rbp-0x18]
    33fd:	64 48 2b 1c 25 28 00 	sub    rbx,QWORD PTR fs:0x28
    3404:	00 00 
    3406:	74 05                	je     340d <get_formated_time+0xce>
    3408:	e8 33 f3 ff ff       	call   2740 <__stack_chk_fail@plt>
    340d:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    3411:	c9                   	leave  
    3412:	c3                   	ret    

0000000000003413 <cb_get_formatted_time>:
    3413:	f3 0f 1e fa          	endbr64 
    3417:	55                   	push   rbp
    3418:	48 89 e5             	mov    rbp,rsp
    341b:	53                   	push   rbx
    341c:	48 83 ec 68          	sub    rsp,0x68
    3420:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    3424:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    342b:	00 00 
    342d:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    3431:	31 c0                	xor    eax,eax
    3433:	bf 00 00 00 00       	mov    edi,0x0
    3438:	e8 33 f4 ff ff       	call   2870 <time@plt>
    343d:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    3441:	48 8d 45 a8          	lea    rax,[rbp-0x58]
    3445:	48 89 c7             	mov    rdi,rax
    3448:	e8 e3 f3 ff ff       	call   2830 <localtime@plt>
    344d:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    3450:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    3454:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
    3458:	48 89 5d b8          	mov    QWORD PTR [rbp-0x48],rbx
    345c:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    3460:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    3464:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    3468:	48 89 5d c8          	mov    QWORD PTR [rbp-0x38],rbx
    346c:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    3470:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    3474:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    3478:	48 89 5d d8          	mov    QWORD PTR [rbp-0x28],rbx
    347c:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    3480:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    3484:	8b 7d b0             	mov    edi,DWORD PTR [rbp-0x50]
    3487:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
    348a:	44 8b 4d b8          	mov    r9d,DWORD PTR [rbp-0x48]
    348e:	44 8b 45 bc          	mov    r8d,DWORD PTR [rbp-0x44]
    3492:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    3495:	8d 48 01             	lea    ecx,[rax+0x1]
    3498:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    349b:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    34a1:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    34a5:	57                   	push   rdi
    34a6:	56                   	push   rsi
    34a7:	48 8d 35 82 8d 00 00 	lea    rsi,[rip+0x8d82]        # c230 <_IO_stdin_used+0x230>
    34ae:	48 89 c7             	mov    rdi,rax
    34b1:	b8 00 00 00 00       	mov    eax,0x0
    34b6:	e8 65 f1 ff ff       	call   2620 <sprintf@plt>
    34bb:	48 83 c4 10          	add    rsp,0x10
    34bf:	90                   	nop
    34c0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    34c4:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    34cb:	00 00 
    34cd:	74 05                	je     34d4 <cb_get_formatted_time+0xc1>
    34cf:	e8 6c f2 ff ff       	call   2740 <__stack_chk_fail@plt>
    34d4:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    34d8:	c9                   	leave  
    34d9:	c3                   	ret    

00000000000034da <strloc>:
    34da:	f3 0f 1e fa          	endbr64 
    34de:	55                   	push   rbp
    34df:	48 89 e5             	mov    rbp,rsp
    34e2:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    34e6:	89 f0                	mov    eax,esi
    34e8:	88 45 e4             	mov    BYTE PTR [rbp-0x1c],al
    34eb:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    34f2:	eb 1e                	jmp    3512 <strloc+0x38>
    34f4:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    34f7:	48 63 d0             	movsxd rdx,eax
    34fa:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    34fe:	48 01 d0             	add    rax,rdx
    3501:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3504:	38 45 e4             	cmp    BYTE PTR [rbp-0x1c],al
    3507:	75 05                	jne    350e <strloc+0x34>
    3509:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    350c:	eb 1d                	jmp    352b <strloc+0x51>
    350e:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    3512:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    3515:	48 63 d0             	movsxd rdx,eax
    3518:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    351c:	48 01 d0             	add    rax,rdx
    351f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3522:	84 c0                	test   al,al
    3524:	75 ce                	jne    34f4 <strloc+0x1a>
    3526:	b8 ff ff ff ff       	mov    eax,0xffffffff
    352b:	5d                   	pop    rbp
    352c:	c3                   	ret    

000000000000352d <fail>:
    352d:	f3 0f 1e fa          	endbr64 
    3531:	55                   	push   rbp
    3532:	48 89 e5             	mov    rbp,rsp
    3535:	48 83 ec 10          	sub    rsp,0x10
    3539:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    353d:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    3541:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    3545:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3549:	48 89 c6             	mov    rsi,rax
    354c:	48 8d 3d f9 8c 00 00 	lea    rdi,[rip+0x8cf9]        # c24c <_IO_stdin_used+0x24c>
    3553:	b8 00 00 00 00       	mov    eax,0x0
    3558:	e8 23 ef ff ff       	call   2480 <printf@plt>
    355d:	90                   	nop
    355e:	c9                   	leave  
    355f:	c3                   	ret    

0000000000003560 <char_is_printable>:
    3560:	f3 0f 1e fa          	endbr64 
    3564:	55                   	push   rbp
    3565:	48 89 e5             	mov    rbp,rsp
    3568:	89 f8                	mov    eax,edi
    356a:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
    356d:	80 7d fc 1f          	cmp    BYTE PTR [rbp-0x4],0x1f
    3571:	7f 07                	jg     357a <char_is_printable+0x1a>
    3573:	b8 00 00 00 00       	mov    eax,0x0
    3578:	eb 05                	jmp    357f <char_is_printable+0x1f>
    357a:	b8 01 00 00 00       	mov    eax,0x1
    357f:	5d                   	pop    rbp
    3580:	c3                   	ret    

0000000000003581 <test_string_arr_print>:
    3581:	f3 0f 1e fa          	endbr64 
    3585:	55                   	push   rbp
    3586:	48 89 e5             	mov    rbp,rsp
    3589:	53                   	push   rbx
    358a:	48 83 ec 28          	sub    rsp,0x28
    358e:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    3592:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    3599:	eb 2c                	jmp    35c7 <test_string_arr_print+0x46>
    359b:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    359e:	48 63 d0             	movsxd rdx,eax
    35a1:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    35a5:	48 01 d0             	add    rax,rdx
    35a8:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    35ab:	0f be c0             	movsx  eax,al
    35ae:	89 c7                	mov    edi,eax
    35b0:	e8 ab ff ff ff       	call   3560 <char_is_printable>
    35b5:	83 f0 01             	xor    eax,0x1
    35b8:	84 c0                	test   al,al
    35ba:	74 07                	je     35c3 <test_string_arr_print+0x42>
    35bc:	b8 00 00 00 00       	mov    eax,0x0
    35c1:	eb 20                	jmp    35e3 <test_string_arr_print+0x62>
    35c3:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    35c7:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    35ca:	48 63 d8             	movsxd rbx,eax
    35cd:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    35d1:	48 89 c7             	mov    rdi,rax
    35d4:	e8 27 f0 ff ff       	call   2600 <strlen@plt>
    35d9:	48 39 c3             	cmp    rbx,rax
    35dc:	72 bd                	jb     359b <test_string_arr_print+0x1a>
    35de:	b8 01 00 00 00       	mov    eax,0x1
    35e3:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    35e7:	c9                   	leave  
    35e8:	c3                   	ret    

00000000000035e9 <ipv4pktmgr>:
    35e9:	f3 0f 1e fa          	endbr64 
    35ed:	55                   	push   rbp
    35ee:	48 89 e5             	mov    rbp,rsp
    35f1:	48 81 ec d0 04 00 00 	sub    rsp,0x4d0
    35f8:	48 89 bd 38 fb ff ff 	mov    QWORD PTR [rbp-0x4c8],rdi
    35ff:	48 89 b5 30 fb ff ff 	mov    QWORD PTR [rbp-0x4d0],rsi
    3606:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    360d:	00 00 
    360f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3613:	31 c0                	xor    eax,eax
    3615:	48 8b 85 38 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4c8]
    361c:	48 83 c0 0e          	add    rax,0xe
    3620:	48 89 85 58 fb ff ff 	mov    QWORD PTR [rbp-0x4a8],rax
    3627:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    362e:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    3631:	89 c7                	mov    edi,eax
    3633:	e8 08 f0 ff ff       	call   2640 <ntohl@plt>
    3638:	89 85 7c fb ff ff    	mov    DWORD PTR [rbp-0x484],eax
    363e:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    3645:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    3648:	89 c7                	mov    edi,eax
    364a:	e8 f1 ef ff ff       	call   2640 <ntohl@plt>
    364f:	89 85 78 fb ff ff    	mov    DWORD PTR [rbp-0x488],eax
    3655:	8b 95 78 fb ff ff    	mov    edx,DWORD PTR [rbp-0x488]
    365b:	8b 05 67 69 10 00    	mov    eax,DWORD PTR [rip+0x106967]        # 109fc8 <homenetmask>
    3661:	21 d0                	and    eax,edx
    3663:	89 85 4c fb ff ff    	mov    DWORD PTR [rbp-0x4b4],eax
    3669:	8b 95 7c fb ff ff    	mov    edx,DWORD PTR [rbp-0x484]
    366f:	8b 05 53 69 10 00    	mov    eax,DWORD PTR [rip+0x106953]        # 109fc8 <homenetmask>
    3675:	21 d0                	and    eax,edx
    3677:	89 85 50 fb ff ff    	mov    DWORD PTR [rbp-0x4b0],eax
    367d:	8b 05 41 69 10 00    	mov    eax,DWORD PTR [rip+0x106941]        # 109fc4 <homenet>
    3683:	39 85 4c fb ff ff    	cmp    DWORD PTR [rbp-0x4b4],eax
    3689:	75 0c                	jne    3697 <ipv4pktmgr+0xae>
    368b:	c7 85 80 fb ff ff 45 	mov    DWORD PTR [rbp-0x480],0x45
    3692:	00 00 00 
    3695:	eb 24                	jmp    36bb <ipv4pktmgr+0xd2>
    3697:	8b 05 27 69 10 00    	mov    eax,DWORD PTR [rip+0x106927]        # 109fc4 <homenet>
    369d:	39 85 50 fb ff ff    	cmp    DWORD PTR [rbp-0x4b0],eax
    36a3:	75 0c                	jne    36b1 <ipv4pktmgr+0xc8>
    36a5:	c7 85 80 fb ff ff 46 	mov    DWORD PTR [rbp-0x480],0x46
    36ac:	00 00 00 
    36af:	eb 0a                	jmp    36bb <ipv4pktmgr+0xd2>
    36b1:	c7 85 80 fb ff ff 47 	mov    DWORD PTR [rbp-0x480],0x47
    36b8:	00 00 00 
    36bb:	48 8b 85 30 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d0]
    36c2:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    36c5:	89 85 90 fb ff ff    	mov    DWORD PTR [rbp-0x470],eax
    36cb:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    36d2:	48 89 85 a8 fb ff ff 	mov    QWORD PTR [rbp-0x458],rax
    36d9:	48 8b 85 30 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d0]
    36e0:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    36e3:	48 8b 95 38 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4c8]
    36ea:	48 83 c2 0e          	add    rdx,0xe
    36ee:	0f b6 12             	movzx  edx,BYTE PTR [rdx]
    36f1:	83 e2 0f             	and    edx,0xf
    36f4:	0f b6 d2             	movzx  edx,dl
    36f7:	c1 e2 02             	shl    edx,0x2
    36fa:	29 d0                	sub    eax,edx
    36fc:	83 e8 0e             	sub    eax,0xe
    36ff:	89 85 54 fb ff ff    	mov    DWORD PTR [rbp-0x4ac],eax
    3705:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    370c:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    370f:	89 c7                	mov    edi,eax
    3711:	e8 c9 f9 ff ff       	call   30df <ipv4_ntoa>
    3716:	48 89 c1             	mov    rcx,rax
    3719:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    3720:	ba 10 00 00 00       	mov    edx,0x10
    3725:	48 89 ce             	mov    rsi,rcx
    3728:	48 89 c7             	mov    rdi,rax
    372b:	e8 90 f0 ff ff       	call   27c0 <strncpy@plt>
    3730:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    3737:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    373a:	89 c7                	mov    edi,eax
    373c:	e8 9e f9 ff ff       	call   30df <ipv4_ntoa>
    3741:	48 89 c1             	mov    rcx,rax
    3744:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    374b:	ba 10 00 00 00       	mov    edx,0x10
    3750:	48 89 ce             	mov    rsi,rcx
    3753:	48 89 c7             	mov    rdi,rax
    3756:	e8 65 f0 ff ff       	call   27c0 <strncpy@plt>
    375b:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    3762:	48 89 c7             	mov    rdi,rax
    3765:	e8 62 41 00 00       	call   78cc <init_member>
    376a:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    3771:	48 89 c7             	mov    rdi,rax
    3774:	e8 53 41 00 00       	call   78cc <init_member>
    3779:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    3780:	48 89 c7             	mov    rdi,rax
    3783:	e8 84 20 00 00       	call   580c <is_blocked_ipv4>
    3788:	84 c0                	test   al,al
    378a:	74 44                	je     37d0 <ipv4pktmgr+0x1e7>
    378c:	b8 00 00 00 00       	mov    eax,0x0
    3791:	e8 a9 fb ff ff       	call   333f <get_formated_time>
    3796:	48 89 c6             	mov    rsi,rax
    3799:	48 8d 95 e0 fb ff ff 	lea    rdx,[rbp-0x420]
    37a0:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    37a7:	48 89 d1             	mov    rcx,rdx
    37aa:	48 89 f2             	mov    rdx,rsi
    37ad:	48 8d 35 a4 8a 00 00 	lea    rsi,[rip+0x8aa4]        # c258 <_IO_stdin_used+0x258>
    37b4:	48 89 c7             	mov    rdi,rax
    37b7:	b8 00 00 00 00       	mov    eax,0x0
    37bc:	e8 5f ee ff ff       	call   2620 <sprintf@plt>
    37c1:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    37c8:	48 89 c7             	mov    rdi,rax
    37cb:	e8 dd 58 00 00       	call   90ad <saprintf>
    37d0:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    37d7:	48 89 c7             	mov    rdi,rax
    37da:	e8 2d 20 00 00       	call   580c <is_blocked_ipv4>
    37df:	84 c0                	test   al,al
    37e1:	74 44                	je     3827 <ipv4pktmgr+0x23e>
    37e3:	b8 00 00 00 00       	mov    eax,0x0
    37e8:	e8 52 fb ff ff       	call   333f <get_formated_time>
    37ed:	48 89 c6             	mov    rsi,rax
    37f0:	48 8d 95 d0 fb ff ff 	lea    rdx,[rbp-0x430]
    37f7:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    37fe:	48 89 d1             	mov    rcx,rdx
    3801:	48 89 f2             	mov    rdx,rsi
    3804:	48 8d 35 7d 8a 00 00 	lea    rsi,[rip+0x8a7d]        # c288 <_IO_stdin_used+0x288>
    380b:	48 89 c7             	mov    rdi,rax
    380e:	b8 00 00 00 00       	mov    eax,0x0
    3813:	e8 08 ee ff ff       	call   2620 <sprintf@plt>
    3818:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    381f:	48 89 c7             	mov    rdi,rax
    3822:	e8 86 58 00 00       	call   90ad <saprintf>
    3827:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    382e:	48 89 85 68 fb ff ff 	mov    QWORD PTR [rbp-0x498],rax
    3835:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    383c:	48 89 85 70 fb ff ff 	mov    QWORD PTR [rbp-0x490],rax
    3843:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    384a:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    384e:	66 83 f8 20          	cmp    ax,0x20
    3852:	74 11                	je     3865 <ipv4pktmgr+0x27c>
    3854:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    385b:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    385f:	66 3d 02 01          	cmp    ax,0x102
    3863:	75 66                	jne    38cb <ipv4pktmgr+0x2e2>
    3865:	48 8d 35 44 8a 00 00 	lea    rsi,[rip+0x8a44]        # c2b0 <_IO_stdin_used+0x2b0>
    386c:	48 8d 3d 42 8a 00 00 	lea    rdi,[rip+0x8a42]        # c2b5 <_IO_stdin_used+0x2b5>
    3873:	b8 00 00 00 00       	mov    eax,0x0
    3878:	e8 03 ec ff ff       	call   2480 <printf@plt>
    387d:	0f b6 05 e0 66 10 00 	movzx  eax,BYTE PTR [rip+0x1066e0]        # 109f64 <packet_print>
    3884:	84 c0                	test   al,al
    3886:	74 1a                	je     38a2 <ipv4pktmgr+0x2b9>
    3888:	48 8d 35 34 8a 00 00 	lea    rsi,[rip+0x8a34]        # c2c3 <_IO_stdin_used+0x2c3>
    388f:	48 8d 3d 32 8a 00 00 	lea    rdi,[rip+0x8a32]        # c2c8 <_IO_stdin_used+0x2c8>
    3896:	b8 00 00 00 00       	mov    eax,0x0
    389b:	e8 e0 eb ff ff       	call   2480 <printf@plt>
    38a0:	eb 29                	jmp    38cb <ipv4pktmgr+0x2e2>
    38a2:	48 8d 95 e0 fb ff ff 	lea    rdx,[rbp-0x420]
    38a9:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    38b0:	48 8d 0d 0c 8a 00 00 	lea    rcx,[rip+0x8a0c]        # c2c3 <_IO_stdin_used+0x2c3>
    38b7:	48 89 c6             	mov    rsi,rax
    38ba:	48 8d 3d 0a 8a 00 00 	lea    rdi,[rip+0x8a0a]        # c2cb <_IO_stdin_used+0x2cb>
    38c1:	b8 00 00 00 00       	mov    eax,0x0
    38c6:	e8 b5 eb ff ff       	call   2480 <printf@plt>
    38cb:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    38d2:	0f b6 40 09          	movzx  eax,BYTE PTR [rax+0x9]
    38d6:	0f b6 c0             	movzx  eax,al
    38d9:	83 f8 11             	cmp    eax,0x11
    38dc:	0f 84 b8 00 00 00    	je     399a <ipv4pktmgr+0x3b1>
    38e2:	83 f8 11             	cmp    eax,0x11
    38e5:	0f 8f db 00 00 00    	jg     39c6 <ipv4pktmgr+0x3dd>
    38eb:	83 f8 06             	cmp    eax,0x6
    38ee:	74 7e                	je     396e <ipv4pktmgr+0x385>
    38f0:	83 f8 06             	cmp    eax,0x6
    38f3:	0f 8f cd 00 00 00    	jg     39c6 <ipv4pktmgr+0x3dd>
    38f9:	83 f8 01             	cmp    eax,0x1
    38fc:	74 0a                	je     3908 <ipv4pktmgr+0x31f>
    38fe:	83 f8 02             	cmp    eax,0x2
    3901:	74 2d                	je     3930 <ipv4pktmgr+0x347>
    3903:	e9 be 00 00 00       	jmp    39c6 <ipv4pktmgr+0x3dd>
    3908:	c7 85 8c fb ff ff 80 	mov    DWORD PTR [rbp-0x474],0x80
    390f:	00 00 00 
    3912:	48 8d 95 60 fb ff ff 	lea    rdx,[rbp-0x4a0]
    3919:	48 8b 85 38 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4c8]
    3920:	48 89 d6             	mov    rsi,rdx
    3923:	48 89 c7             	mov    rdi,rax
    3926:	e8 40 02 00 00       	call   3b6b <ip4_icmp_decode>
    392b:	e9 c7 00 00 00       	jmp    39f7 <ipv4pktmgr+0x40e>
    3930:	c7 85 8c fb ff ff ff 	mov    DWORD PTR [rbp-0x474],0xffffffff
    3937:	ff ff ff 
    393a:	8b 05 00 d7 00 00    	mov    eax,DWORD PTR [rip+0xd700]        # 11040 <total_conversations>
    3940:	83 e8 01             	sub    eax,0x1
    3943:	89 05 f7 d6 00 00    	mov    DWORD PTR [rip+0xd6f7],eax        # 11040 <total_conversations>
    3949:	48 8b 95 70 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x490]
    3950:	48 8b 8d 68 fb ff ff 	mov    rcx,QWORD PTR [rbp-0x498]
    3957:	48 8b 85 38 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4c8]
    395e:	48 89 ce             	mov    rsi,rcx
    3961:	48 89 c7             	mov    rdi,rax
    3964:	e8 1c 14 00 00       	call   4d85 <ip4_igmp_decode>
    3969:	e9 89 00 00 00       	jmp    39f7 <ipv4pktmgr+0x40e>
    396e:	c7 85 8c fb ff ff 7e 	mov    DWORD PTR [rbp-0x474],0x7e
    3975:	00 00 00 
    3978:	48 8b 95 30 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4d0]
    397f:	48 8d 8d 60 fb ff ff 	lea    rcx,[rbp-0x4a0]
    3986:	48 8b 85 38 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4c8]
    398d:	48 89 ce             	mov    rsi,rcx
    3990:	48 89 c7             	mov    rdi,rax
    3993:	e8 17 0a 00 00       	call   43af <ip4_tcp_decode>
    3998:	eb 5d                	jmp    39f7 <ipv4pktmgr+0x40e>
    399a:	c7 85 8c fb ff ff 7f 	mov    DWORD PTR [rbp-0x474],0x7f
    39a1:	00 00 00 
    39a4:	48 8b 95 30 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4d0]
    39ab:	48 8d 8d 60 fb ff ff 	lea    rcx,[rbp-0x4a0]
    39b2:	48 8b 85 38 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4c8]
    39b9:	48 89 ce             	mov    rsi,rcx
    39bc:	48 89 c7             	mov    rdi,rax
    39bf:	e8 6c 12 00 00       	call   4c30 <ip4_udp_decode>
    39c4:	eb 31                	jmp    39f7 <ipv4pktmgr+0x40e>
    39c6:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    39cd:	0f b6 40 09          	movzx  eax,BYTE PTR [rax+0x9]
    39d1:	0f b6 c8             	movzx  ecx,al
    39d4:	48 8b 95 70 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x490]
    39db:	48 8b 85 68 fb ff ff 	mov    rax,QWORD PTR [rbp-0x498]
    39e2:	48 89 c6             	mov    rsi,rax
    39e5:	48 8d 3d ec 88 00 00 	lea    rdi,[rip+0x88ec]        # c2d8 <_IO_stdin_used+0x2d8>
    39ec:	b8 00 00 00 00       	mov    eax,0x0
    39f1:	e8 8a ea ff ff       	call   2480 <printf@plt>
    39f6:	90                   	nop
    39f7:	90                   	nop
    39f8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    39fc:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    3a03:	00 00 
    3a05:	74 05                	je     3a0c <ipv4pktmgr+0x423>
    3a07:	e8 34 ed ff ff       	call   2740 <__stack_chk_fail@plt>
    3a0c:	c9                   	leave  
    3a0d:	c3                   	ret    

0000000000003a0e <ip6_icmp_decode>:
    3a0e:	f3 0f 1e fa          	endbr64 
    3a12:	55                   	push   rbp
    3a13:	48 89 e5             	mov    rbp,rsp
    3a16:	48 83 c4 80          	add    rsp,0xffffffffffffff80
    3a1a:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    3a1e:	48 89 75 90          	mov    QWORD PTR [rbp-0x70],rsi
    3a22:	48 89 55 88          	mov    QWORD PTR [rbp-0x78],rdx
    3a26:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3a2d:	00 00 
    3a2f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3a33:	31 c0                	xor    eax,eax
    3a35:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    3a39:	48 83 c0 36          	add    rax,0x36
    3a3d:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    3a41:	0f b6 05 1c 65 10 00 	movzx  eax,BYTE PTR [rip+0x10651c]        # 109f64 <packet_print>
    3a48:	84 c0                	test   al,al
    3a4a:	0f 84 04 01 00 00    	je     3b54 <ip6_icmp_decode+0x146>
    3a50:	48 8d 35 a9 88 00 00 	lea    rsi,[rip+0x88a9]        # c300 <_IO_stdin_used+0x300>
    3a57:	48 8d 3d a8 88 00 00 	lea    rdi,[rip+0x88a8]        # c306 <_IO_stdin_used+0x306>
    3a5e:	b8 00 00 00 00       	mov    eax,0x0
    3a63:	e8 18 ea ff ff       	call   2480 <printf@plt>
    3a68:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
    3a6c:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    3a70:	48 89 c6             	mov    rsi,rax
    3a73:	48 8d 3d 8f 88 00 00 	lea    rdi,[rip+0x888f]        # c309 <_IO_stdin_used+0x309>
    3a7a:	b8 00 00 00 00       	mov    eax,0x0
    3a7f:	e8 fc e9 ff ff       	call   2480 <printf@plt>
    3a84:	48 8d 3d 8d 88 00 00 	lea    rdi,[rip+0x888d]        # c318 <_IO_stdin_used+0x318>
    3a8b:	b8 00 00 00 00       	mov    eax,0x0
    3a90:	e8 eb e9 ff ff       	call   2480 <printf@plt>
    3a95:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3a99:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3a9c:	0f b6 c0             	movzx  eax,al
    3a9f:	3d 8f 00 00 00       	cmp    eax,0x8f
    3aa4:	74 68                	je     3b0e <ip6_icmp_decode+0x100>
    3aa6:	3d 8f 00 00 00       	cmp    eax,0x8f
    3aab:	0f 8f 8b 00 00 00    	jg     3b3c <ip6_icmp_decode+0x12e>
    3ab1:	3d 87 00 00 00       	cmp    eax,0x87
    3ab6:	74 77                	je     3b2f <ip6_icmp_decode+0x121>
    3ab8:	3d 87 00 00 00       	cmp    eax,0x87
    3abd:	7f 7d                	jg     3b3c <ip6_icmp_decode+0x12e>
    3abf:	3d 82 00 00 00       	cmp    eax,0x82
    3ac4:	74 56                	je     3b1c <ip6_icmp_decode+0x10e>
    3ac6:	3d 85 00 00 00       	cmp    eax,0x85
    3acb:	75 6f                	jne    3b3c <ip6_icmp_decode+0x12e>
    3acd:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3ad1:	48 83 c0 0a          	add    rax,0xa
    3ad5:	48 89 c7             	mov    rdi,rax
    3ad8:	e8 19 f4 ff ff       	call   2ef6 <mac_ntoa>
    3add:	48 89 c1             	mov    rcx,rax
    3ae0:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    3ae4:	ba 40 00 00 00       	mov    edx,0x40
    3ae9:	48 89 ce             	mov    rsi,rcx
    3aec:	48 89 c7             	mov    rdi,rax
    3aef:	e8 cc ec ff ff       	call   27c0 <strncpy@plt>
    3af4:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    3af8:	48 89 c6             	mov    rsi,rax
    3afb:	48 8d 3d 1f 88 00 00 	lea    rdi,[rip+0x881f]        # c321 <_IO_stdin_used+0x321>
    3b02:	b8 00 00 00 00       	mov    eax,0x0
    3b07:	e8 74 e9 ff ff       	call   2480 <printf@plt>
    3b0c:	eb 2e                	jmp    3b3c <ip6_icmp_decode+0x12e>
    3b0e:	48 8d 3d 2b 88 00 00 	lea    rdi,[rip+0x882b]        # c340 <_IO_stdin_used+0x340>
    3b15:	e8 c6 e9 ff ff       	call   24e0 <puts@plt>
    3b1a:	eb 20                	jmp    3b3c <ip6_icmp_decode+0x12e>
    3b1c:	48 8d 3d 42 88 00 00 	lea    rdi,[rip+0x8842]        # c365 <_IO_stdin_used+0x365>
    3b23:	b8 00 00 00 00       	mov    eax,0x0
    3b28:	e8 53 e9 ff ff       	call   2480 <printf@plt>
    3b2d:	eb 0d                	jmp    3b3c <ip6_icmp_decode+0x12e>
    3b2f:	48 8d 3d 49 88 00 00 	lea    rdi,[rip+0x8849]        # c37f <_IO_stdin_used+0x37f>
    3b36:	e8 a5 e9 ff ff       	call   24e0 <puts@plt>
    3b3b:	90                   	nop
    3b3c:	48 8d 35 52 88 00 00 	lea    rsi,[rip+0x8852]        # c395 <_IO_stdin_used+0x395>
    3b43:	48 8d 3d bc 87 00 00 	lea    rdi,[rip+0x87bc]        # c306 <_IO_stdin_used+0x306>
    3b4a:	b8 00 00 00 00       	mov    eax,0x0
    3b4f:	e8 2c e9 ff ff       	call   2480 <printf@plt>
    3b54:	90                   	nop
    3b55:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3b59:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    3b60:	00 00 
    3b62:	74 05                	je     3b69 <ip6_icmp_decode+0x15b>
    3b64:	e8 d7 eb ff ff       	call   2740 <__stack_chk_fail@plt>
    3b69:	c9                   	leave  
    3b6a:	c3                   	ret    

0000000000003b6b <ip4_icmp_decode>:
    3b6b:	f3 0f 1e fa          	endbr64 
    3b6f:	55                   	push   rbp
    3b70:	48 89 e5             	mov    rbp,rsp
    3b73:	48 81 ec 20 01 00 00 	sub    rsp,0x120
    3b7a:	48 89 bd e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rdi
    3b81:	48 89 b5 e0 fe ff ff 	mov    QWORD PTR [rbp-0x120],rsi
    3b88:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3b8f:	00 00 
    3b91:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3b95:	31 c0                	xor    eax,eax
    3b97:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3b9e:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3ba2:	ba 5e 00 00 00       	mov    edx,0x5e
    3ba7:	be 01 00 00 00       	mov    esi,0x1
    3bac:	48 89 c7             	mov    rdi,rax
    3baf:	e8 d0 12 00 00       	call   4e84 <add_ip_addr_or_inc_counter>
    3bb4:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3bbb:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    3bbf:	ba 5e 00 00 00       	mov    edx,0x5e
    3bc4:	be 00 00 00 00       	mov    esi,0x0
    3bc9:	48 89 c7             	mov    rdi,rax
    3bcc:	e8 b3 12 00 00       	call   4e84 <add_ip_addr_or_inc_counter>
    3bd1:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3bd8:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3bdc:	48 89 85 08 ff ff ff 	mov    QWORD PTR [rbp-0xf8],rax
    3be3:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3bea:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    3bee:	48 89 85 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],rax
    3bf5:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    3bfc:	48 83 c0 22          	add    rax,0x22
    3c00:	48 89 85 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rax
    3c07:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    3c0e:	48 8d 50 22          	lea    rdx,[rax+0x22]
    3c12:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c19:	48 89 10             	mov    QWORD PTR [rax],rdx
    3c1c:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c23:	48 8b 95 18 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xe8]
    3c2a:	48 89 50 58          	mov    QWORD PTR [rax+0x58],rdx
    3c2e:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c35:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    3c38:	89 85 fc fe ff ff    	mov    DWORD PTR [rbp-0x104],eax
    3c3e:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c45:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    3c48:	8d 50 d6             	lea    edx,[rax-0x2a]
    3c4b:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c52:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    3c55:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    3c5c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3c5f:	3c 08                	cmp    al,0x8
    3c61:	0f 85 55 01 00 00    	jne    3dbc <ip4_icmp_decode+0x251>
    3c67:	8b 05 1b d4 00 00    	mov    eax,DWORD PTR [rip+0xd41b]        # 11088 <strict_nmap_host_alive_check>
    3c6d:	83 f8 01             	cmp    eax,0x1
    3c70:	0f 85 46 01 00 00    	jne    3dbc <ip4_icmp_decode+0x251>
    3c76:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c7d:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3c81:	48 89 c7             	mov    rdi,rax
    3c84:	e8 d1 3b 00 00       	call   785a <member_exists>
    3c89:	89 85 00 ff ff ff    	mov    DWORD PTR [rbp-0x100],eax
    3c8f:	83 bd 00 ff ff ff ff 	cmp    DWORD PTR [rbp-0x100],0xffffffff
    3c96:	0f 84 83 00 00 00    	je     3d1f <ip4_icmp_decode+0x1b4>
    3c9c:	8b 85 00 ff ff ff    	mov    eax,DWORD PTR [rbp-0x100]
    3ca2:	48 63 d0             	movsxd rdx,eax
    3ca5:	48 89 d0             	mov    rax,rdx
    3ca8:	48 c1 e0 02          	shl    rax,0x2
    3cac:	48 01 d0             	add    rax,rdx
    3caf:	48 c1 e0 03          	shl    rax,0x3
    3cb3:	48 01 d0             	add    rax,rdx
    3cb6:	48 c1 e0 04          	shl    rax,0x4
    3cba:	48 8d 15 5f f8 0e 00 	lea    rdx,[rip+0xef85f]        # f3520 <watchlist>
    3cc1:	48 01 d0             	add    rax,rdx
    3cc4:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
    3ccb:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3cd2:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3cd5:	85 c0                	test   eax,eax
    3cd7:	0f 85 a8 02 00 00    	jne    3f85 <ip4_icmp_decode+0x41a>
    3cdd:	bf 00 00 00 00       	mov    edi,0x0
    3ce2:	e8 89 eb ff ff       	call   2870 <time@plt>
    3ce7:	48 89 c2             	mov    rdx,rax
    3cea:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3cf1:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    3cf5:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3cfc:	c7 40 30 01 00 00 00 	mov    DWORD PTR [rax+0x30],0x1
    3d03:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d0a:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3d0d:	8d 50 01             	lea    edx,[rax+0x1]
    3d10:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d17:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    3d1a:	e9 66 02 00 00       	jmp    3f85 <ip4_icmp_decode+0x41a>
    3d1f:	8b 05 f3 d2 00 00    	mov    eax,DWORD PTR [rip+0xd2f3]        # 11018 <watchlist_num>
    3d25:	83 c0 01             	add    eax,0x1
    3d28:	89 05 ea d2 00 00    	mov    DWORD PTR [rip+0xd2ea],eax        # 11018 <watchlist_num>
    3d2e:	8b 05 e4 d2 00 00    	mov    eax,DWORD PTR [rip+0xd2e4]        # 11018 <watchlist_num>
    3d34:	48 63 d0             	movsxd rdx,eax
    3d37:	48 89 d0             	mov    rax,rdx
    3d3a:	48 c1 e0 02          	shl    rax,0x2
    3d3e:	48 01 d0             	add    rax,rdx
    3d41:	48 c1 e0 03          	shl    rax,0x3
    3d45:	48 01 d0             	add    rax,rdx
    3d48:	48 c1 e0 04          	shl    rax,0x4
    3d4c:	48 8d 15 cd f7 0e 00 	lea    rdx,[rip+0xef7cd]        # f3520 <watchlist>
    3d53:	48 01 d0             	add    rax,rdx
    3d56:	48 89 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rax
    3d5d:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3d64:	48 8d 50 08          	lea    rdx,[rax+0x8]
    3d68:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3d6f:	48 89 c6             	mov    rsi,rax
    3d72:	48 89 d7             	mov    rdi,rdx
    3d75:	e8 f6 e9 ff ff       	call   2770 <strcpy@plt>
    3d7a:	bf 00 00 00 00       	mov    edi,0x0
    3d7f:	e8 ec ea ff ff       	call   2870 <time@plt>
    3d84:	48 89 c2             	mov    rdx,rax
    3d87:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3d8e:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    3d92:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3d99:	c7 40 30 01 00 00 00 	mov    DWORD PTR [rax+0x30],0x1
    3da0:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3da7:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3daa:	8d 50 01             	lea    edx,[rax+0x1]
    3dad:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3db4:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    3db7:	e9 c9 01 00 00       	jmp    3f85 <ip4_icmp_decode+0x41a>
    3dbc:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    3dc3:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3dc6:	3c 0d                	cmp    al,0xd
    3dc8:	0f 85 ba 01 00 00    	jne    3f88 <ip4_icmp_decode+0x41d>
    3dce:	8b 05 b0 d2 00 00    	mov    eax,DWORD PTR [rip+0xd2b0]        # 11084 <strict_icmp_timestamp_req>
    3dd4:	83 f8 01             	cmp    eax,0x1
    3dd7:	74 0f                	je     3de8 <ip4_icmp_decode+0x27d>
    3dd9:	8b 05 a9 d2 00 00    	mov    eax,DWORD PTR [rip+0xd2a9]        # 11088 <strict_nmap_host_alive_check>
    3ddf:	83 f8 01             	cmp    eax,0x1
    3de2:	0f 85 a0 01 00 00    	jne    3f88 <ip4_icmp_decode+0x41d>
    3de8:	8b 05 96 d2 00 00    	mov    eax,DWORD PTR [rip+0xd296]        # 11084 <strict_icmp_timestamp_req>
    3dee:	85 c0                	test   eax,eax
    3df0:	74 22                	je     3e14 <ip4_icmp_decode+0x2a9>
    3df2:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    3df9:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3e00:	48 89 c6             	mov    rsi,rax
    3e03:	48 8d 3d 96 85 00 00 	lea    rdi,[rip+0x8596]        # c3a0 <_IO_stdin_used+0x3a0>
    3e0a:	b8 00 00 00 00       	mov    eax,0x0
    3e0f:	e8 6c e6 ff ff       	call   2480 <printf@plt>
    3e14:	8b 05 6e d2 00 00    	mov    eax,DWORD PTR [rip+0xd26e]        # 11088 <strict_nmap_host_alive_check>
    3e1a:	85 c0                	test   eax,eax
    3e1c:	0f 84 66 01 00 00    	je     3f88 <ip4_icmp_decode+0x41d>
    3e22:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3e29:	48 89 c7             	mov    rdi,rax
    3e2c:	e8 29 3a 00 00       	call   785a <member_exists>
    3e31:	89 85 04 ff ff ff    	mov    DWORD PTR [rbp-0xfc],eax
    3e37:	83 bd 04 ff ff ff ff 	cmp    DWORD PTR [rbp-0xfc],0xffffffff
    3e3e:	0f 84 44 01 00 00    	je     3f88 <ip4_icmp_decode+0x41d>
    3e44:	8b 85 04 ff ff ff    	mov    eax,DWORD PTR [rbp-0xfc]
    3e4a:	48 63 d0             	movsxd rdx,eax
    3e4d:	48 89 d0             	mov    rax,rdx
    3e50:	48 c1 e0 02          	shl    rax,0x2
    3e54:	48 01 d0             	add    rax,rdx
    3e57:	48 c1 e0 03          	shl    rax,0x3
    3e5b:	48 01 d0             	add    rax,rdx
    3e5e:	48 c1 e0 04          	shl    rax,0x4
    3e62:	48 8d 15 b7 f6 0e 00 	lea    rdx,[rip+0xef6b7]        # f3520 <watchlist>
    3e69:	48 01 d0             	add    rax,rdx
    3e6c:	48 89 85 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rax
    3e73:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3e7a:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3e7d:	83 f8 03             	cmp    eax,0x3
    3e80:	0f 85 05 01 00 00    	jne    3f8b <ip4_icmp_decode+0x420>
    3e86:	bf 00 00 00 00       	mov    edi,0x0
    3e8b:	e8 e0 e9 ff ff       	call   2870 <time@plt>
    3e90:	48 89 c2             	mov    rdx,rax
    3e93:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3e9a:	48 89 50 48          	mov    QWORD PTR [rax+0x48],rdx
    3e9e:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3ea5:	48 8b 50 48          	mov    rdx,QWORD PTR [rax+0x48]
    3ea9:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3eb0:	48 8b 48 28          	mov    rcx,QWORD PTR [rax+0x28]
    3eb4:	48 89 d0             	mov    rax,rdx
    3eb7:	48 29 c8             	sub    rax,rcx
    3eba:	48 3d e2 b4 04 00    	cmp    rax,0x4b4e2
    3ec0:	0f 87 c2 00 00 00    	ja     3f88 <ip4_icmp_decode+0x41d>
    3ec6:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    3ecd:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3ed4:	48 89 c6             	mov    rsi,rax
    3ed7:	48 8d 3d 0a 85 00 00 	lea    rdi,[rip+0x850a]        # c3e8 <_IO_stdin_used+0x3e8>
    3ede:	b8 00 00 00 00       	mov    eax,0x0
    3ee3:	e8 98 e5 ff ff       	call   2480 <printf@plt>
    3ee8:	48 8b 05 41 d1 00 00 	mov    rax,QWORD PTR [rip+0xd141]        # 11030 <def_log_file>
    3eef:	48 8d 35 5c 85 00 00 	lea    rsi,[rip+0x855c]        # c452 <_IO_stdin_used+0x452>
    3ef6:	48 89 c7             	mov    rdi,rax
    3ef9:	e8 72 e6 ff ff       	call   2570 <fopen@plt>
    3efe:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    3f05:	b8 00 00 00 00       	mov    eax,0x0
    3f0a:	e8 30 f4 ff ff       	call   333f <get_formated_time>
    3f0f:	48 89 c6             	mov    rsi,rax
    3f12:	48 8b 8d 10 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xf0]
    3f19:	48 8b 95 08 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf8]
    3f20:	48 8d 85 40 ff ff ff 	lea    rax,[rbp-0xc0]
    3f27:	49 89 f0             	mov    r8,rsi
    3f2a:	48 8d 35 27 85 00 00 	lea    rsi,[rip+0x8527]        # c458 <_IO_stdin_used+0x458>
    3f31:	48 89 c7             	mov    rdi,rax
    3f34:	b8 00 00 00 00       	mov    eax,0x0
    3f39:	e8 e2 e6 ff ff       	call   2620 <sprintf@plt>
    3f3e:	48 8b 95 38 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xc8]
    3f45:	48 8d 85 40 ff ff ff 	lea    rax,[rbp-0xc0]
    3f4c:	48 89 d6             	mov    rsi,rdx
    3f4f:	48 89 c7             	mov    rdi,rax
    3f52:	e8 39 e7 ff ff       	call   2690 <fputs@plt>
    3f57:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
    3f5e:	48 89 c7             	mov    rdi,rax
    3f61:	e8 4a e8 ff ff       	call   27b0 <fclose@plt>
    3f66:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3f6d:	48 83 c0 28          	add    rax,0x28
    3f71:	ba 28 00 00 00       	mov    edx,0x28
    3f76:	be 00 00 00 00       	mov    esi,0x0
    3f7b:	48 89 c7             	mov    rdi,rax
    3f7e:	e8 0d e5 ff ff       	call   2490 <memset@plt>
    3f83:	eb 07                	jmp    3f8c <ip4_icmp_decode+0x421>
    3f85:	90                   	nop
    3f86:	eb 04                	jmp    3f8c <ip4_icmp_decode+0x421>
    3f88:	90                   	nop
    3f89:	eb 01                	jmp    3f8c <ip4_icmp_decode+0x421>
    3f8b:	90                   	nop
    3f8c:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3f93:	c7 40 2c 80 00 00 00 	mov    DWORD PTR [rax+0x2c],0x80
    3f9a:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3fa1:	48 89 c7             	mov    rdi,rax
    3fa4:	e8 dc 23 00 00       	call   6385 <rulemgr>
    3fa9:	0f b6 05 b4 5f 10 00 	movzx  eax,BYTE PTR [rip+0x105fb4]        # 109f64 <packet_print>
    3fb0:	84 c0                	test   al,al
    3fb2:	0f 84 e0 03 00 00    	je     4398 <ip4_icmp_decode+0x82d>
    3fb8:	48 8d 35 41 83 00 00 	lea    rsi,[rip+0x8341]        # c300 <_IO_stdin_used+0x300>
    3fbf:	48 8d 3d 40 83 00 00 	lea    rdi,[rip+0x8340]        # c306 <_IO_stdin_used+0x306>
    3fc6:	b8 00 00 00 00       	mov    eax,0x0
    3fcb:	e8 b0 e4 ff ff       	call   2480 <printf@plt>
    3fd0:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    3fd7:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3fde:	48 89 c6             	mov    rsi,rax
    3fe1:	48 8d 3d e0 84 00 00 	lea    rdi,[rip+0x84e0]        # c4c8 <_IO_stdin_used+0x4c8>
    3fe8:	b8 00 00 00 00       	mov    eax,0x0
    3fed:	e8 8e e4 ff ff       	call   2480 <printf@plt>
    3ff2:	48 8d 3d de 84 00 00 	lea    rdi,[rip+0x84de]        # c4d7 <_IO_stdin_used+0x4d7>
    3ff9:	b8 00 00 00 00       	mov    eax,0x0
    3ffe:	e8 7d e4 ff ff       	call   2480 <printf@plt>
    4003:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    400a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    400d:	0f b6 c0             	movzx  eax,al
    4010:	83 f8 0e             	cmp    eax,0xe
    4013:	0f 87 46 03 00 00    	ja     435f <ip4_icmp_decode+0x7f4>
    4019:	89 c0                	mov    eax,eax
    401b:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    4022:	00 
    4023:	48 8d 05 b6 88 00 00 	lea    rax,[rip+0x88b6]        # c8e0 <_IO_stdin_used+0x8e0>
    402a:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    402d:	48 98                	cdqe   
    402f:	48 8d 15 aa 88 00 00 	lea    rdx,[rip+0x88aa]        # c8e0 <_IO_stdin_used+0x8e0>
    4036:	48 01 d0             	add    rax,rdx
    4039:	3e ff e0             	notrack jmp rax
    403c:	48 8d 3d 9b 84 00 00 	lea    rdi,[rip+0x849b]        # c4de <_IO_stdin_used+0x4de>
    4043:	e8 98 e4 ff ff       	call   24e0 <puts@plt>
    4048:	e9 33 03 00 00       	jmp    4380 <ip4_icmp_decode+0x815>
    404d:	48 8d 3d 96 84 00 00 	lea    rdi,[rip+0x8496]        # c4ea <_IO_stdin_used+0x4ea>
    4054:	b8 00 00 00 00       	mov    eax,0x0
    4059:	e8 22 e4 ff ff       	call   2480 <printf@plt>
    405e:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4065:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4069:	0f b6 c0             	movzx  eax,al
    406c:	83 f8 0f             	cmp    eax,0xf
    406f:	0f 87 1e 01 00 00    	ja     4193 <ip4_icmp_decode+0x628>
    4075:	89 c0                	mov    eax,eax
    4077:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    407e:	00 
    407f:	48 8d 05 96 88 00 00 	lea    rax,[rip+0x8896]        # c91c <_IO_stdin_used+0x91c>
    4086:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    4089:	48 98                	cdqe   
    408b:	48 8d 15 8a 88 00 00 	lea    rdx,[rip+0x888a]        # c91c <_IO_stdin_used+0x91c>
    4092:	48 01 d0             	add    rax,rdx
    4095:	3e ff e0             	notrack jmp rax
    4098:	48 8d 3d 65 84 00 00 	lea    rdi,[rip+0x8465]        # c504 <_IO_stdin_used+0x504>
    409f:	e8 3c e4 ff ff       	call   24e0 <puts@plt>
    40a4:	e9 0c 01 00 00       	jmp    41b5 <ip4_icmp_decode+0x64a>
    40a9:	48 8d 3d 6b 84 00 00 	lea    rdi,[rip+0x846b]        # c51b <_IO_stdin_used+0x51b>
    40b0:	e8 2b e4 ff ff       	call   24e0 <puts@plt>
    40b5:	e9 fb 00 00 00       	jmp    41b5 <ip4_icmp_decode+0x64a>
    40ba:	48 8d 3d 6e 84 00 00 	lea    rdi,[rip+0x846e]        # c52f <_IO_stdin_used+0x52f>
    40c1:	e8 1a e4 ff ff       	call   24e0 <puts@plt>
    40c6:	e9 ea 00 00 00       	jmp    41b5 <ip4_icmp_decode+0x64a>
    40cb:	48 8d 3d 75 84 00 00 	lea    rdi,[rip+0x8475]        # c547 <_IO_stdin_used+0x547>
    40d2:	e8 09 e4 ff ff       	call   24e0 <puts@plt>
    40d7:	e9 d9 00 00 00       	jmp    41b5 <ip4_icmp_decode+0x64a>
    40dc:	48 8d 3d 78 84 00 00 	lea    rdi,[rip+0x8478]        # c55b <_IO_stdin_used+0x55b>
    40e3:	e8 f8 e3 ff ff       	call   24e0 <puts@plt>
    40e8:	e9 c8 00 00 00       	jmp    41b5 <ip4_icmp_decode+0x64a>
    40ed:	48 8d 3d 7f 84 00 00 	lea    rdi,[rip+0x847f]        # c573 <_IO_stdin_used+0x573>
    40f4:	e8 e7 e3 ff ff       	call   24e0 <puts@plt>
    40f9:	e9 b7 00 00 00       	jmp    41b5 <ip4_icmp_decode+0x64a>
    40fe:	48 8d 3d 8b 84 00 00 	lea    rdi,[rip+0x848b]        # c590 <_IO_stdin_used+0x590>
    4105:	e8 d6 e3 ff ff       	call   24e0 <puts@plt>
    410a:	e9 a6 00 00 00       	jmp    41b5 <ip4_icmp_decode+0x64a>
    410f:	48 8d 3d a2 84 00 00 	lea    rdi,[rip+0x84a2]        # c5b8 <_IO_stdin_used+0x5b8>
    4116:	e8 c5 e3 ff ff       	call   24e0 <puts@plt>
    411b:	e9 95 00 00 00       	jmp    41b5 <ip4_icmp_decode+0x64a>
    4120:	48 8d 3d b1 84 00 00 	lea    rdi,[rip+0x84b1]        # c5d8 <_IO_stdin_used+0x5d8>
    4127:	e8 b4 e3 ff ff       	call   24e0 <puts@plt>
    412c:	e9 84 00 00 00       	jmp    41b5 <ip4_icmp_decode+0x64a>
    4131:	48 8d 3d b8 84 00 00 	lea    rdi,[rip+0x84b8]        # c5f0 <_IO_stdin_used+0x5f0>
    4138:	e8 a3 e3 ff ff       	call   24e0 <puts@plt>
    413d:	eb 76                	jmp    41b5 <ip4_icmp_decode+0x64a>
    413f:	48 8d 3d d2 84 00 00 	lea    rdi,[rip+0x84d2]        # c618 <_IO_stdin_used+0x618>
    4146:	e8 95 e3 ff ff       	call   24e0 <puts@plt>
    414b:	eb 68                	jmp    41b5 <ip4_icmp_decode+0x64a>
    414d:	48 8d 3d ec 84 00 00 	lea    rdi,[rip+0x84ec]        # c640 <_IO_stdin_used+0x640>
    4154:	e8 87 e3 ff ff       	call   24e0 <puts@plt>
    4159:	eb 5a                	jmp    41b5 <ip4_icmp_decode+0x64a>
    415b:	48 8d 3d fd 84 00 00 	lea    rdi,[rip+0x84fd]        # c65f <_IO_stdin_used+0x65f>
    4162:	e8 79 e3 ff ff       	call   24e0 <puts@plt>
    4167:	eb 4c                	jmp    41b5 <ip4_icmp_decode+0x64a>
    4169:	48 8d 3d 10 85 00 00 	lea    rdi,[rip+0x8510]        # c680 <_IO_stdin_used+0x680>
    4170:	e8 6b e3 ff ff       	call   24e0 <puts@plt>
    4175:	eb 3e                	jmp    41b5 <ip4_icmp_decode+0x64a>
    4177:	48 8d 3d 2f 85 00 00 	lea    rdi,[rip+0x852f]        # c6ad <_IO_stdin_used+0x6ad>
    417e:	e8 5d e3 ff ff       	call   24e0 <puts@plt>
    4183:	eb 30                	jmp    41b5 <ip4_icmp_decode+0x64a>
    4185:	48 8d 3d 44 85 00 00 	lea    rdi,[rip+0x8544]        # c6d0 <_IO_stdin_used+0x6d0>
    418c:	e8 4f e3 ff ff       	call   24e0 <puts@plt>
    4191:	eb 22                	jmp    41b5 <ip4_icmp_decode+0x64a>
    4193:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    419a:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    419e:	0f b6 c0             	movzx  eax,al
    41a1:	89 c6                	mov    esi,eax
    41a3:	48 8d 3d 45 85 00 00 	lea    rdi,[rip+0x8545]        # c6ef <_IO_stdin_used+0x6ef>
    41aa:	b8 00 00 00 00       	mov    eax,0x0
    41af:	e8 cc e2 ff ff       	call   2480 <printf@plt>
    41b4:	90                   	nop
    41b5:	e9 c6 01 00 00       	jmp    4380 <ip4_icmp_decode+0x815>
    41ba:	48 8d 3d 47 85 00 00 	lea    rdi,[rip+0x8547]        # c708 <_IO_stdin_used+0x708>
    41c1:	e8 1a e3 ff ff       	call   24e0 <puts@plt>
    41c6:	e9 b5 01 00 00       	jmp    4380 <ip4_icmp_decode+0x815>
    41cb:	48 8d 3d 55 85 00 00 	lea    rdi,[rip+0x8555]        # c727 <_IO_stdin_used+0x727>
    41d2:	b8 00 00 00 00       	mov    eax,0x0
    41d7:	e8 a4 e2 ff ff       	call   2480 <printf@plt>
    41dc:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    41e3:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    41e7:	0f b6 c0             	movzx  eax,al
    41ea:	83 f8 03             	cmp    eax,0x3
    41ed:	74 44                	je     4233 <ip4_icmp_decode+0x6c8>
    41ef:	83 f8 03             	cmp    eax,0x3
    41f2:	7f 4d                	jg     4241 <ip4_icmp_decode+0x6d6>
    41f4:	83 f8 02             	cmp    eax,0x2
    41f7:	74 2c                	je     4225 <ip4_icmp_decode+0x6ba>
    41f9:	83 f8 02             	cmp    eax,0x2
    41fc:	7f 43                	jg     4241 <ip4_icmp_decode+0x6d6>
    41fe:	85 c0                	test   eax,eax
    4200:	74 07                	je     4209 <ip4_icmp_decode+0x69e>
    4202:	83 f8 01             	cmp    eax,0x1
    4205:	74 10                	je     4217 <ip4_icmp_decode+0x6ac>
    4207:	eb 38                	jmp    4241 <ip4_icmp_decode+0x6d6>
    4209:	48 8d 3d 23 85 00 00 	lea    rdi,[rip+0x8523]        # c733 <_IO_stdin_used+0x733>
    4210:	e8 cb e2 ff ff       	call   24e0 <puts@plt>
    4215:	eb 4c                	jmp    4263 <ip4_icmp_decode+0x6f8>
    4217:	48 8d 3d 2d 85 00 00 	lea    rdi,[rip+0x852d]        # c74b <_IO_stdin_used+0x74b>
    421e:	e8 bd e2 ff ff       	call   24e0 <puts@plt>
    4223:	eb 3e                	jmp    4263 <ip4_icmp_decode+0x6f8>
    4225:	48 8d 3d 34 85 00 00 	lea    rdi,[rip+0x8534]        # c760 <_IO_stdin_used+0x760>
    422c:	e8 af e2 ff ff       	call   24e0 <puts@plt>
    4231:	eb 30                	jmp    4263 <ip4_icmp_decode+0x6f8>
    4233:	48 8d 3d 46 85 00 00 	lea    rdi,[rip+0x8546]        # c780 <_IO_stdin_used+0x780>
    423a:	e8 a1 e2 ff ff       	call   24e0 <puts@plt>
    423f:	eb 22                	jmp    4263 <ip4_icmp_decode+0x6f8>
    4241:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4248:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    424c:	0f b6 c0             	movzx  eax,al
    424f:	89 c6                	mov    esi,eax
    4251:	48 8d 3d 97 84 00 00 	lea    rdi,[rip+0x8497]        # c6ef <_IO_stdin_used+0x6ef>
    4258:	b8 00 00 00 00       	mov    eax,0x0
    425d:	e8 1e e2 ff ff       	call   2480 <printf@plt>
    4262:	90                   	nop
    4263:	e9 18 01 00 00       	jmp    4380 <ip4_icmp_decode+0x815>
    4268:	48 8d 3d 2e 85 00 00 	lea    rdi,[rip+0x852e]        # c79d <_IO_stdin_used+0x79d>
    426f:	e8 6c e2 ff ff       	call   24e0 <puts@plt>
    4274:	e9 07 01 00 00       	jmp    4380 <ip4_icmp_decode+0x815>
    4279:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4280:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4284:	84 c0                	test   al,al
    4286:	75 16                	jne    429e <ip4_icmp_decode+0x733>
    4288:	48 8d 3d 21 85 00 00 	lea    rdi,[rip+0x8521]        # c7b0 <_IO_stdin_used+0x7b0>
    428f:	b8 00 00 00 00       	mov    eax,0x0
    4294:	e8 e7 e1 ff ff       	call   2480 <printf@plt>
    4299:	e9 e2 00 00 00       	jmp    4380 <ip4_icmp_decode+0x815>
    429e:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    42a5:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    42a9:	0f b6 c0             	movzx  eax,al
    42ac:	89 c6                	mov    esi,eax
    42ae:	48 8d 3d 3b 85 00 00 	lea    rdi,[rip+0x853b]        # c7f0 <_IO_stdin_used+0x7f0>
    42b5:	b8 00 00 00 00       	mov    eax,0x0
    42ba:	e8 c1 e1 ff ff       	call   2480 <printf@plt>
    42bf:	e9 bc 00 00 00       	jmp    4380 <ip4_icmp_decode+0x815>
    42c4:	48 8d 3d 52 85 00 00 	lea    rdi,[rip+0x8552]        # c81d <_IO_stdin_used+0x81d>
    42cb:	e8 10 e2 ff ff       	call   24e0 <puts@plt>
    42d0:	e9 ab 00 00 00       	jmp    4380 <ip4_icmp_decode+0x815>
    42d5:	48 8d 3d 58 85 00 00 	lea    rdi,[rip+0x8558]        # c834 <_IO_stdin_used+0x834>
    42dc:	b8 00 00 00 00       	mov    eax,0x0
    42e1:	e8 9a e1 ff ff       	call   2480 <printf@plt>
    42e6:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    42ed:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    42f1:	84 c0                	test   al,al
    42f3:	75 0e                	jne    4303 <ip4_icmp_decode+0x798>
    42f5:	48 8d 3d 4f 85 00 00 	lea    rdi,[rip+0x854f]        # c84b <_IO_stdin_used+0x84b>
    42fc:	e8 df e1 ff ff       	call   24e0 <puts@plt>
    4301:	eb 7d                	jmp    4380 <ip4_icmp_decode+0x815>
    4303:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    430a:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    430e:	3c 01                	cmp    al,0x1
    4310:	75 0e                	jne    4320 <ip4_icmp_decode+0x7b5>
    4312:	48 8d 3d 4f 85 00 00 	lea    rdi,[rip+0x854f]        # c868 <_IO_stdin_used+0x868>
    4319:	e8 c2 e1 ff ff       	call   24e0 <puts@plt>
    431e:	eb 60                	jmp    4380 <ip4_icmp_decode+0x815>
    4320:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4327:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    432b:	0f b6 c0             	movzx  eax,al
    432e:	89 c6                	mov    esi,eax
    4330:	48 8d 3d 58 85 00 00 	lea    rdi,[rip+0x8558]        # c88f <_IO_stdin_used+0x88f>
    4337:	b8 00 00 00 00       	mov    eax,0x0
    433c:	e8 3f e1 ff ff       	call   2480 <printf@plt>
    4341:	eb 3d                	jmp    4380 <ip4_icmp_decode+0x815>
    4343:	48 8d 3d 5b 85 00 00 	lea    rdi,[rip+0x855b]        # c8a5 <_IO_stdin_used+0x8a5>
    434a:	e8 91 e1 ff ff       	call   24e0 <puts@plt>
    434f:	eb 2f                	jmp    4380 <ip4_icmp_decode+0x815>
    4351:	48 8d 3d 60 85 00 00 	lea    rdi,[rip+0x8560]        # c8b8 <_IO_stdin_used+0x8b8>
    4358:	e8 83 e1 ff ff       	call   24e0 <puts@plt>
    435d:	eb 21                	jmp    4380 <ip4_icmp_decode+0x815>
    435f:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4366:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4369:	0f b6 c0             	movzx  eax,al
    436c:	89 c6                	mov    esi,eax
    436e:	48 8d 3d 54 85 00 00 	lea    rdi,[rip+0x8554]        # c8c9 <_IO_stdin_used+0x8c9>
    4375:	b8 00 00 00 00       	mov    eax,0x0
    437a:	e8 01 e1 ff ff       	call   2480 <printf@plt>
    437f:	90                   	nop
    4380:	48 8d 35 0e 80 00 00 	lea    rsi,[rip+0x800e]        # c395 <_IO_stdin_used+0x395>
    4387:	48 8d 3d 78 7f 00 00 	lea    rdi,[rip+0x7f78]        # c306 <_IO_stdin_used+0x306>
    438e:	b8 00 00 00 00       	mov    eax,0x0
    4393:	e8 e8 e0 ff ff       	call   2480 <printf@plt>
    4398:	90                   	nop
    4399:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    439d:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    43a4:	00 00 
    43a6:	74 05                	je     43ad <ip4_icmp_decode+0x842>
    43a8:	e8 93 e3 ff ff       	call   2740 <__stack_chk_fail@plt>
    43ad:	c9                   	leave  
    43ae:	c3                   	ret    

00000000000043af <ip4_tcp_decode>:
    43af:	f3 0f 1e fa          	endbr64 
    43b3:	55                   	push   rbp
    43b4:	48 89 e5             	mov    rbp,rsp
    43b7:	53                   	push   rbx
    43b8:	48 81 ec 88 00 00 00 	sub    rsp,0x88
    43bf:	48 89 7d 88          	mov    QWORD PTR [rbp-0x78],rdi
    43c3:	48 89 75 80          	mov    QWORD PTR [rbp-0x80],rsi
    43c7:	48 89 95 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdx
    43ce:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    43d2:	48 83 c0 22          	add    rax,0x22
    43d6:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    43da:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    43de:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    43e2:	c0 e8 04             	shr    al,0x4
    43e5:	0f b6 c0             	movzx  eax,al
    43e8:	c1 e0 02             	shl    eax,0x2
    43eb:	48 98                	cdqe   
    43ed:	48 8d 50 22          	lea    rdx,[rax+0x22]
    43f1:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    43f5:	48 01 c2             	add    rdx,rax
    43f8:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    43fc:	48 89 10             	mov    QWORD PTR [rax],rdx
    43ff:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4403:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    4406:	89 c2                	mov    edx,eax
    4408:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    440c:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    4410:	c0 e8 04             	shr    al,0x4
    4413:	0f b6 c0             	movzx  eax,al
    4416:	c1 e0 02             	shl    eax,0x2
    4419:	89 c1                	mov    ecx,eax
    441b:	89 d0                	mov    eax,edx
    441d:	29 c8                	sub    eax,ecx
    441f:	83 e8 22             	sub    eax,0x22
    4422:	89 c2                	mov    edx,eax
    4424:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4428:	89 50 30             	mov    DWORD PTR [rax+0x30],edx
    442b:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    442f:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    4433:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    4437:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    443b:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    443f:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    4443:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4447:	ba 5c 00 00 00       	mov    edx,0x5c
    444c:	be 01 00 00 00       	mov    esi,0x1
    4451:	48 89 c7             	mov    rdi,rax
    4454:	e8 2b 0a 00 00       	call   4e84 <add_ip_addr_or_inc_counter>
    4459:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    445d:	ba 5c 00 00 00       	mov    edx,0x5c
    4462:	be 00 00 00 00       	mov    esi,0x0
    4467:	48 89 c7             	mov    rdi,rax
    446a:	e8 15 0a 00 00       	call   4e84 <add_ip_addr_or_inc_counter>
    446f:	c7 45 a4 00 00 00 00 	mov    DWORD PTR [rbp-0x5c],0x0
    4476:	c6 45 9f 00          	mov    BYTE PTR [rbp-0x61],0x0
    447a:	c6 45 a0 00          	mov    BYTE PTR [rbp-0x60],0x0
    447e:	c6 45 a1 00          	mov    BYTE PTR [rbp-0x5f],0x0
    4482:	c6 45 a2 00          	mov    BYTE PTR [rbp-0x5e],0x0
    4486:	c6 45 a3 00          	mov    BYTE PTR [rbp-0x5d],0x0
    448a:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    448e:	48 83 c0 60          	add    rax,0x60
    4492:	ba 08 00 00 00       	mov    edx,0x8
    4497:	be 00 00 00 00       	mov    esi,0x0
    449c:	48 89 c7             	mov    rdi,rax
    449f:	e8 ec df ff ff       	call   2490 <memset@plt>
    44a4:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    44a8:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    44ac:	0f b7 c0             	movzx  eax,ax
    44af:	89 c7                	mov    edi,eax
    44b1:	e8 7a e1 ff ff       	call   2630 <ntohs@plt>
    44b6:	0f b7 c0             	movzx  eax,ax
    44b9:	89 45 a8             	mov    DWORD PTR [rbp-0x58],eax
    44bc:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    44c0:	0f b7 00             	movzx  eax,WORD PTR [rax]
    44c3:	0f b7 c0             	movzx  eax,ax
    44c6:	89 c7                	mov    edi,eax
    44c8:	e8 63 e1 ff ff       	call   2630 <ntohs@plt>
    44cd:	0f b7 c0             	movzx  eax,ax
    44d0:	89 45 ac             	mov    DWORD PTR [rbp-0x54],eax
    44d3:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    44d7:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    44db:	0f b7 c0             	movzx  eax,ax
    44de:	89 c7                	mov    edi,eax
    44e0:	e8 4b e1 ff ff       	call   2630 <ntohs@plt>
    44e5:	0f b7 d0             	movzx  edx,ax
    44e8:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    44ec:	89 50 28             	mov    DWORD PTR [rax+0x28],edx
    44ef:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    44f3:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    44f6:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    44f9:	0f b6 05 64 5a 10 00 	movzx  eax,BYTE PTR [rip+0x105a64]        # 109f64 <packet_print>
    4500:	84 c0                	test   al,al
    4502:	74 4e                	je     4552 <ip4_tcp_decode+0x1a3>
    4504:	48 8d 35 55 84 00 00 	lea    rsi,[rip+0x8455]        # c960 <_IO_stdin_used+0x960>
    450b:	48 8d 3d 54 84 00 00 	lea    rdi,[rip+0x8454]        # c966 <_IO_stdin_used+0x966>
    4512:	b8 00 00 00 00       	mov    eax,0x0
    4517:	e8 64 df ff ff       	call   2480 <printf@plt>
    451c:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
    451f:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
    4523:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    4526:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    452a:	41 89 f0             	mov    r8d,esi
    452d:	48 89 c6             	mov    rsi,rax
    4530:	48 8d 3d 32 84 00 00 	lea    rdi,[rip+0x8432]        # c969 <_IO_stdin_used+0x969>
    4537:	b8 00 00 00 00       	mov    eax,0x0
    453c:	e8 3f df ff ff       	call   2480 <printf@plt>
    4541:	48 8d 3d 36 84 00 00 	lea    rdi,[rip+0x8436]        # c97e <_IO_stdin_used+0x97e>
    4548:	b8 00 00 00 00       	mov    eax,0x0
    454d:	e8 2e df ff ff       	call   2480 <printf@plt>
    4552:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4556:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    455a:	c0 e8 04             	shr    al,0x4
    455d:	83 e0 01             	and    eax,0x1
    4560:	0f b6 c0             	movzx  eax,al
    4563:	89 c7                	mov    edi,eax
    4565:	e8 c6 e0 ff ff       	call   2630 <ntohs@plt>
    456a:	66 85 c0             	test   ax,ax
    456d:	74 43                	je     45b2 <ip4_tcp_decode+0x203>
    456f:	0f b6 05 ee 59 10 00 	movzx  eax,BYTE PTR [rip+0x1059ee]        # 109f64 <packet_print>
    4576:	84 c0                	test   al,al
    4578:	74 18                	je     4592 <ip4_tcp_decode+0x1e3>
    457a:	48 8d 35 04 84 00 00 	lea    rsi,[rip+0x8404]        # c985 <_IO_stdin_used+0x985>
    4581:	48 8d 3d 03 84 00 00 	lea    rdi,[rip+0x8403]        # c98b <_IO_stdin_used+0x98b>
    4588:	b8 00 00 00 00       	mov    eax,0x0
    458d:	e8 ee de ff ff       	call   2480 <printf@plt>
    4592:	c6 45 a0 01          	mov    BYTE PTR [rbp-0x60],0x1
    4596:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    459a:	48 8d 58 60          	lea    rbx,[rax+0x60]
    459e:	48 89 df             	mov    rdi,rbx
    45a1:	e8 5a e0 ff ff       	call   2600 <strlen@plt>
    45a6:	48 01 d8             	add    rax,rbx
    45a9:	66 c7 00 41 00       	mov    WORD PTR [rax],0x41
    45ae:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    45b2:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    45b6:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    45ba:	83 e0 01             	and    eax,0x1
    45bd:	0f b6 c0             	movzx  eax,al
    45c0:	89 c7                	mov    edi,eax
    45c2:	e8 69 e0 ff ff       	call   2630 <ntohs@plt>
    45c7:	66 85 c0             	test   ax,ax
    45ca:	74 43                	je     460f <ip4_tcp_decode+0x260>
    45cc:	0f b6 05 91 59 10 00 	movzx  eax,BYTE PTR [rip+0x105991]        # 109f64 <packet_print>
    45d3:	84 c0                	test   al,al
    45d5:	74 18                	je     45ef <ip4_tcp_decode+0x240>
    45d7:	48 8d 35 b5 83 00 00 	lea    rsi,[rip+0x83b5]        # c993 <_IO_stdin_used+0x993>
    45de:	48 8d 3d b4 83 00 00 	lea    rdi,[rip+0x83b4]        # c999 <_IO_stdin_used+0x999>
    45e5:	b8 00 00 00 00       	mov    eax,0x0
    45ea:	e8 91 de ff ff       	call   2480 <printf@plt>
    45ef:	c6 45 a2 01          	mov    BYTE PTR [rbp-0x5e],0x1
    45f3:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    45f7:	48 8d 58 60          	lea    rbx,[rax+0x60]
    45fb:	48 89 df             	mov    rdi,rbx
    45fe:	e8 fd df ff ff       	call   2600 <strlen@plt>
    4603:	48 01 d8             	add    rax,rbx
    4606:	66 c7 00 46 00       	mov    WORD PTR [rax],0x46
    460b:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    460f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4613:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4617:	c0 e8 03             	shr    al,0x3
    461a:	83 e0 01             	and    eax,0x1
    461d:	0f b6 c0             	movzx  eax,al
    4620:	89 c7                	mov    edi,eax
    4622:	e8 09 e0 ff ff       	call   2630 <ntohs@plt>
    4627:	66 85 c0             	test   ax,ax
    462a:	74 43                	je     466f <ip4_tcp_decode+0x2c0>
    462c:	0f b6 05 31 59 10 00 	movzx  eax,BYTE PTR [rip+0x105931]        # 109f64 <packet_print>
    4633:	84 c0                	test   al,al
    4635:	74 18                	je     464f <ip4_tcp_decode+0x2a0>
    4637:	48 8d 35 63 83 00 00 	lea    rsi,[rip+0x8363]        # c9a1 <_IO_stdin_used+0x9a1>
    463e:	48 8d 3d 62 83 00 00 	lea    rdi,[rip+0x8362]        # c9a7 <_IO_stdin_used+0x9a7>
    4645:	b8 00 00 00 00       	mov    eax,0x0
    464a:	e8 31 de ff ff       	call   2480 <printf@plt>
    464f:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    4653:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4657:	48 8d 58 60          	lea    rbx,[rax+0x60]
    465b:	48 89 df             	mov    rdi,rbx
    465e:	e8 9d df ff ff       	call   2600 <strlen@plt>
    4663:	48 01 d8             	add    rax,rbx
    4666:	66 c7 00 50 00       	mov    WORD PTR [rax],0x50
    466b:	c6 45 a3 01          	mov    BYTE PTR [rbp-0x5d],0x1
    466f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4673:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4677:	c0 e8 02             	shr    al,0x2
    467a:	83 e0 01             	and    eax,0x1
    467d:	0f b6 c0             	movzx  eax,al
    4680:	89 c7                	mov    edi,eax
    4682:	e8 a9 df ff ff       	call   2630 <ntohs@plt>
    4687:	66 85 c0             	test   ax,ax
    468a:	74 43                	je     46cf <ip4_tcp_decode+0x320>
    468c:	0f b6 05 d1 58 10 00 	movzx  eax,BYTE PTR [rip+0x1058d1]        # 109f64 <packet_print>
    4693:	84 c0                	test   al,al
    4695:	74 18                	je     46af <ip4_tcp_decode+0x300>
    4697:	48 8d 35 11 83 00 00 	lea    rsi,[rip+0x8311]        # c9af <_IO_stdin_used+0x9af>
    469e:	48 8d 3d 10 83 00 00 	lea    rdi,[rip+0x8310]        # c9b5 <_IO_stdin_used+0x9b5>
    46a5:	b8 00 00 00 00       	mov    eax,0x0
    46aa:	e8 d1 dd ff ff       	call   2480 <printf@plt>
    46af:	c6 45 9f 01          	mov    BYTE PTR [rbp-0x61],0x1
    46b3:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    46b7:	48 8d 58 60          	lea    rbx,[rax+0x60]
    46bb:	48 89 df             	mov    rdi,rbx
    46be:	e8 3d df ff ff       	call   2600 <strlen@plt>
    46c3:	48 01 d8             	add    rax,rbx
    46c6:	66 c7 00 52 00       	mov    WORD PTR [rax],0x52
    46cb:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    46cf:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    46d3:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    46d7:	d0 e8                	shr    al,1
    46d9:	83 e0 01             	and    eax,0x1
    46dc:	0f b6 c0             	movzx  eax,al
    46df:	89 c7                	mov    edi,eax
    46e1:	e8 4a df ff ff       	call   2630 <ntohs@plt>
    46e6:	66 85 c0             	test   ax,ax
    46e9:	74 43                	je     472e <ip4_tcp_decode+0x37f>
    46eb:	0f b6 05 72 58 10 00 	movzx  eax,BYTE PTR [rip+0x105872]        # 109f64 <packet_print>
    46f2:	84 c0                	test   al,al
    46f4:	74 18                	je     470e <ip4_tcp_decode+0x35f>
    46f6:	48 8d 35 c0 82 00 00 	lea    rsi,[rip+0x82c0]        # c9bd <_IO_stdin_used+0x9bd>
    46fd:	48 8d 3d bf 82 00 00 	lea    rdi,[rip+0x82bf]        # c9c3 <_IO_stdin_used+0x9c3>
    4704:	b8 00 00 00 00       	mov    eax,0x0
    4709:	e8 72 dd ff ff       	call   2480 <printf@plt>
    470e:	c6 45 a1 01          	mov    BYTE PTR [rbp-0x5f],0x1
    4712:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4716:	48 8d 58 60          	lea    rbx,[rax+0x60]
    471a:	48 89 df             	mov    rdi,rbx
    471d:	e8 de de ff ff       	call   2600 <strlen@plt>
    4722:	48 01 d8             	add    rax,rbx
    4725:	66 c7 00 53 00       	mov    WORD PTR [rax],0x53
    472a:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    472e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4732:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4736:	c0 e8 05             	shr    al,0x5
    4739:	83 e0 01             	and    eax,0x1
    473c:	0f b6 c0             	movzx  eax,al
    473f:	89 c7                	mov    edi,eax
    4741:	e8 ea de ff ff       	call   2630 <ntohs@plt>
    4746:	66 85 c0             	test   ax,ax
    4749:	74 3f                	je     478a <ip4_tcp_decode+0x3db>
    474b:	0f b6 05 12 58 10 00 	movzx  eax,BYTE PTR [rip+0x105812]        # 109f64 <packet_print>
    4752:	84 c0                	test   al,al
    4754:	74 18                	je     476e <ip4_tcp_decode+0x3bf>
    4756:	48 8d 35 6e 82 00 00 	lea    rsi,[rip+0x826e]        # c9cb <_IO_stdin_used+0x9cb>
    475d:	48 8d 3d 6d 82 00 00 	lea    rdi,[rip+0x826d]        # c9d1 <_IO_stdin_used+0x9d1>
    4764:	b8 00 00 00 00       	mov    eax,0x0
    4769:	e8 12 dd ff ff       	call   2480 <printf@plt>
    476e:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    4772:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4776:	48 8d 58 60          	lea    rbx,[rax+0x60]
    477a:	48 89 df             	mov    rdi,rbx
    477d:	e8 7e de ff ff       	call   2600 <strlen@plt>
    4782:	48 01 d8             	add    rax,rbx
    4785:	66 c7 00 55 00       	mov    WORD PTR [rax],0x55
    478a:	0f b6 05 d3 57 10 00 	movzx  eax,BYTE PTR [rip+0x1057d3]        # 109f64 <packet_print>
    4791:	84 c0                	test   al,al
    4793:	74 3c                	je     47d1 <ip4_tcp_decode+0x422>
    4795:	48 8d 35 c4 81 00 00 	lea    rsi,[rip+0x81c4]        # c960 <_IO_stdin_used+0x960>
    479c:	48 8d 3d c3 81 00 00 	lea    rdi,[rip+0x81c3]        # c966 <_IO_stdin_used+0x966>
    47a3:	b8 00 00 00 00       	mov    eax,0x0
    47a8:	e8 d3 dc ff ff       	call   2480 <printf@plt>
    47ad:	48 8d 3d 25 82 00 00 	lea    rdi,[rip+0x8225]        # c9d9 <_IO_stdin_used+0x9d9>
    47b4:	e8 27 dd ff ff       	call   24e0 <puts@plt>
    47b9:	48 8d 35 1b 82 00 00 	lea    rsi,[rip+0x821b]        # c9db <_IO_stdin_used+0x9db>
    47c0:	48 8d 3d 9f 81 00 00 	lea    rdi,[rip+0x819f]        # c966 <_IO_stdin_used+0x966>
    47c7:	b8 00 00 00 00       	mov    eax,0x0
    47cc:	e8 af dc ff ff       	call   2480 <printf@plt>
    47d1:	83 7d a4 03          	cmp    DWORD PTR [rbp-0x5c],0x3
    47d5:	7f 06                	jg     47dd <ip4_tcp_decode+0x42e>
    47d7:	83 7d a4 00          	cmp    DWORD PTR [rbp-0x5c],0x0
    47db:	75 41                	jne    481e <ip4_tcp_decode+0x46f>
    47dd:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
    47e0:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
    47e4:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    47e7:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    47eb:	48 8d 0d e9 81 00 00 	lea    rcx,[rip+0x81e9]        # c9db <_IO_stdin_used+0x9db>
    47f2:	51                   	push   rcx
    47f3:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
    47f6:	51                   	push   rcx
    47f7:	41 89 f9             	mov    r9d,edi
    47fa:	49 89 f0             	mov    r8,rsi
    47fd:	89 d1                	mov    ecx,edx
    47ff:	48 89 c2             	mov    rdx,rax
    4802:	48 8d 35 a6 81 00 00 	lea    rsi,[rip+0x81a6]        # c9af <_IO_stdin_used+0x9af>
    4809:	48 8d 3d d0 81 00 00 	lea    rdi,[rip+0x81d0]        # c9e0 <_IO_stdin_used+0x9e0>
    4810:	b8 00 00 00 00       	mov    eax,0x0
    4815:	e8 66 dc ff ff       	call   2480 <printf@plt>
    481a:	48 83 c4 10          	add    rsp,0x10
    481e:	0f b6 05 9d 57 10 00 	movzx  eax,BYTE PTR [rip+0x10579d]        # 109fc2 <use_spi>
    4825:	84 c0                	test   al,al
    4827:	0f 84 8c 00 00 00    	je     48b9 <ip4_tcp_decode+0x50a>
    482d:	80 7d a3 00          	cmp    BYTE PTR [rbp-0x5d],0x0
    4831:	74 1a                	je     484d <ip4_tcp_decode+0x49e>
    4833:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4837:	74 14                	je     484d <ip4_tcp_decode+0x49e>
    4839:	83 7d a4 02          	cmp    DWORD PTR [rbp-0x5c],0x2
    483d:	75 0e                	jne    484d <ip4_tcp_decode+0x49e>
    483f:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4843:	48 89 c7             	mov    rdi,rax
    4846:	e8 3a 45 00 00       	call   8d85 <handle_data_pkt>
    484b:	eb 6c                	jmp    48b9 <ip4_tcp_decode+0x50a>
    484d:	80 7d a2 00          	cmp    BYTE PTR [rbp-0x5e],0x0
    4851:	74 14                	je     4867 <ip4_tcp_decode+0x4b8>
    4853:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4857:	74 0e                	je     4867 <ip4_tcp_decode+0x4b8>
    4859:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    485d:	48 89 c7             	mov    rdi,rax
    4860:	e8 13 44 00 00       	call   8c78 <polite_end>
    4865:	eb 52                	jmp    48b9 <ip4_tcp_decode+0x50a>
    4867:	80 7d a1 00          	cmp    BYTE PTR [rbp-0x5f],0x0
    486b:	74 14                	je     4881 <ip4_tcp_decode+0x4d2>
    486d:	83 7d a4 01          	cmp    DWORD PTR [rbp-0x5c],0x1
    4871:	75 0e                	jne    4881 <ip4_tcp_decode+0x4d2>
    4873:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4877:	48 89 c7             	mov    rdi,rax
    487a:	e8 71 3f 00 00       	call   87f0 <add_new_conversation>
    487f:	eb 38                	jmp    48b9 <ip4_tcp_decode+0x50a>
    4881:	80 7d a1 00          	cmp    BYTE PTR [rbp-0x5f],0x0
    4885:	74 1a                	je     48a1 <ip4_tcp_decode+0x4f2>
    4887:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    488b:	74 14                	je     48a1 <ip4_tcp_decode+0x4f2>
    488d:	83 7d a4 02          	cmp    DWORD PTR [rbp-0x5c],0x2
    4891:	75 0e                	jne    48a1 <ip4_tcp_decode+0x4f2>
    4893:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4897:	48 89 c7             	mov    rdi,rax
    489a:	e8 7b 41 00 00       	call   8a1a <spi_ud_thw>
    489f:	eb 18                	jmp    48b9 <ip4_tcp_decode+0x50a>
    48a1:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    48a5:	74 12                	je     48b9 <ip4_tcp_decode+0x50a>
    48a7:	83 7d a4 01          	cmp    DWORD PTR [rbp-0x5c],0x1
    48ab:	75 0c                	jne    48b9 <ip4_tcp_decode+0x50a>
    48ad:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    48b1:	48 89 c7             	mov    rdi,rax
    48b4:	e8 24 42 00 00       	call   8add <update_table>
    48b9:	80 7d a3 00          	cmp    BYTE PTR [rbp-0x5d],0x0
    48bd:	74 17                	je     48d6 <ip4_tcp_decode+0x527>
    48bf:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    48c3:	74 11                	je     48d6 <ip4_tcp_decode+0x527>
    48c5:	83 7d a4 02          	cmp    DWORD PTR [rbp-0x5c],0x2
    48c9:	75 0b                	jne    48d6 <ip4_tcp_decode+0x527>
    48cb:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    48cf:	c7 40 68 01 00 00 00 	mov    DWORD PTR [rax+0x68],0x1
    48d6:	80 7d 9f 00          	cmp    BYTE PTR [rbp-0x61],0x0
    48da:	0f 84 8f 01 00 00    	je     4a6f <ip4_tcp_decode+0x6c0>
    48e0:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    48e4:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    48e8:	48 89 c7             	mov    rdi,rax
    48eb:	e8 6a 2f 00 00       	call   785a <member_exists>
    48f0:	89 45 b0             	mov    DWORD PTR [rbp-0x50],eax
    48f3:	83 7d b0 ff          	cmp    DWORD PTR [rbp-0x50],0xffffffff
    48f7:	0f 84 db 00 00 00    	je     49d8 <ip4_tcp_decode+0x629>
    48fd:	8b 45 b0             	mov    eax,DWORD PTR [rbp-0x50]
    4900:	48 63 d0             	movsxd rdx,eax
    4903:	48 89 d0             	mov    rax,rdx
    4906:	48 c1 e0 02          	shl    rax,0x2
    490a:	48 01 d0             	add    rax,rdx
    490d:	48 c1 e0 03          	shl    rax,0x3
    4911:	48 01 d0             	add    rax,rdx
    4914:	48 c1 e0 04          	shl    rax,0x4
    4918:	48 8d 15 01 ec 0e 00 	lea    rdx,[rip+0xeec01]        # f3520 <watchlist>
    491f:	48 01 d0             	add    rax,rdx
    4922:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    4926:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    492a:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    492e:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    4932:	48 83 c2 08          	add    rdx,0x8
    4936:	48 89 c6             	mov    rsi,rax
    4939:	48 89 d7             	mov    rdi,rdx
    493c:	e8 2f de ff ff       	call   2770 <strcpy@plt>
    4941:	bf 00 00 00 00       	mov    edi,0x0
    4946:	e8 25 df ff ff       	call   2870 <time@plt>
    494b:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    494f:	8b 92 48 01 00 00    	mov    edx,DWORD PTR [rdx+0x148]
    4955:	8d 72 01             	lea    esi,[rdx+0x1]
    4958:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    495c:	89 b1 48 01 00 00    	mov    DWORD PTR [rcx+0x148],esi
    4962:	48 89 c1             	mov    rcx,rax
    4965:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4969:	89 d2                	mov    edx,edx
    496b:	48 83 c2 28          	add    rdx,0x28
    496f:	48 89 4c d0 10       	mov    QWORD PTR [rax+rdx*8+0x10],rcx
    4974:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4978:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    497e:	83 f8 1d             	cmp    eax,0x1d
    4981:	0f 86 e8 00 00 00    	jbe    4a6f <ip4_tcp_decode+0x6c0>
    4987:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    498b:	c7 80 48 01 00 00 1e 	mov    DWORD PTR [rax+0x148],0x1e
    4992:	00 00 00 
    4995:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4999:	48 89 c7             	mov    rdi,rax
    499c:	e8 77 2a 00 00       	call   7418 <tcp_rst_portscan_detect>
    49a1:	84 c0                	test   al,al
    49a3:	0f 84 c6 00 00 00    	je     4a6f <ip4_tcp_decode+0x6c0>
    49a9:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    49ad:	c7 80 48 01 00 00 00 	mov    DWORD PTR [rax+0x148],0x0
    49b4:	00 00 00 
    49b7:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    49bb:	48 05 50 01 00 00    	add    rax,0x150
    49c1:	ba f0 00 00 00       	mov    edx,0xf0
    49c6:	be 00 00 00 00       	mov    esi,0x0
    49cb:	48 89 c7             	mov    rdi,rax
    49ce:	e8 bd da ff ff       	call   2490 <memset@plt>
    49d3:	e9 97 00 00 00       	jmp    4a6f <ip4_tcp_decode+0x6c0>
    49d8:	8b 05 3a c6 00 00    	mov    eax,DWORD PTR [rip+0xc63a]        # 11018 <watchlist_num>
    49de:	83 c0 01             	add    eax,0x1
    49e1:	89 05 31 c6 00 00    	mov    DWORD PTR [rip+0xc631],eax        # 11018 <watchlist_num>
    49e7:	8b 05 2b c6 00 00    	mov    eax,DWORD PTR [rip+0xc62b]        # 11018 <watchlist_num>
    49ed:	48 63 d0             	movsxd rdx,eax
    49f0:	48 89 d0             	mov    rax,rdx
    49f3:	48 c1 e0 02          	shl    rax,0x2
    49f7:	48 01 d0             	add    rax,rdx
    49fa:	48 c1 e0 03          	shl    rax,0x3
    49fe:	48 01 d0             	add    rax,rdx
    4a01:	48 c1 e0 04          	shl    rax,0x4
    4a05:	48 8d 15 14 eb 0e 00 	lea    rdx,[rip+0xeeb14]        # f3520 <watchlist>
    4a0c:	48 01 d0             	add    rax,rdx
    4a0f:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    4a13:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4a17:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4a1b:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    4a1f:	48 83 c2 08          	add    rdx,0x8
    4a23:	48 89 c6             	mov    rsi,rax
    4a26:	48 89 d7             	mov    rdi,rdx
    4a29:	e8 42 dd ff ff       	call   2770 <strcpy@plt>
    4a2e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4a32:	c7 80 48 01 00 00 00 	mov    DWORD PTR [rax+0x148],0x0
    4a39:	00 00 00 
    4a3c:	bf 00 00 00 00       	mov    edi,0x0
    4a41:	e8 2a de ff ff       	call   2870 <time@plt>
    4a46:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    4a4a:	8b 92 48 01 00 00    	mov    edx,DWORD PTR [rdx+0x148]
    4a50:	8d 72 01             	lea    esi,[rdx+0x1]
    4a53:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    4a57:	89 b1 48 01 00 00    	mov    DWORD PTR [rcx+0x148],esi
    4a5d:	48 89 c1             	mov    rcx,rax
    4a60:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4a64:	89 d2                	mov    edx,edx
    4a66:	48 83 c2 28          	add    rdx,0x28
    4a6a:	48 89 4c d0 10       	mov    QWORD PTR [rax+rdx*8+0x10],rcx
    4a6f:	8b 05 13 c6 00 00    	mov    eax,DWORD PTR [rip+0xc613]        # 11088 <strict_nmap_host_alive_check>
    4a75:	83 f8 01             	cmp    eax,0x1
    4a78:	0f 85 f6 00 00 00    	jne    4b74 <ip4_tcp_decode+0x7c5>
    4a7e:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4a82:	74 0c                	je     4a90 <ip4_tcp_decode+0x6e1>
    4a84:	83 7d a8 50          	cmp    DWORD PTR [rbp-0x58],0x50
    4a88:	74 26                	je     4ab0 <ip4_tcp_decode+0x701>
    4a8a:	83 7d ac 50          	cmp    DWORD PTR [rbp-0x54],0x50
    4a8e:	74 20                	je     4ab0 <ip4_tcp_decode+0x701>
    4a90:	80 7d a1 00          	cmp    BYTE PTR [rbp-0x5f],0x0
    4a94:	0f 84 da 00 00 00    	je     4b74 <ip4_tcp_decode+0x7c5>
    4a9a:	81 7d a8 bb 01 00 00 	cmp    DWORD PTR [rbp-0x58],0x1bb
    4aa1:	74 0d                	je     4ab0 <ip4_tcp_decode+0x701>
    4aa3:	81 7d ac bb 01 00 00 	cmp    DWORD PTR [rbp-0x54],0x1bb
    4aaa:	0f 85 c4 00 00 00    	jne    4b74 <ip4_tcp_decode+0x7c5>
    4ab0:	8b 45 a8             	mov    eax,DWORD PTR [rbp-0x58]
    4ab3:	3b 45 ac             	cmp    eax,DWORD PTR [rbp-0x54]
    4ab6:	76 0a                	jbe    4ac2 <ip4_tcp_decode+0x713>
    4ab8:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4abc:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    4ac0:	eb 08                	jmp    4aca <ip4_tcp_decode+0x71b>
    4ac2:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4ac6:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    4aca:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4ace:	48 89 c7             	mov    rdi,rax
    4ad1:	e8 84 2d 00 00       	call   785a <member_exists>
    4ad6:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
    4ad9:	83 7d b4 ff          	cmp    DWORD PTR [rbp-0x4c],0xffffffff
    4add:	0f 84 91 00 00 00    	je     4b74 <ip4_tcp_decode+0x7c5>
    4ae3:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    4ae6:	48 63 d0             	movsxd rdx,eax
    4ae9:	48 89 d0             	mov    rax,rdx
    4aec:	48 c1 e0 02          	shl    rax,0x2
    4af0:	48 01 d0             	add    rax,rdx
    4af3:	48 c1 e0 03          	shl    rax,0x3
    4af7:	48 01 d0             	add    rax,rdx
    4afa:	48 c1 e0 04          	shl    rax,0x4
    4afe:	48 8d 15 1b ea 0e 00 	lea    rdx,[rip+0xeea1b]        # f3520 <watchlist>
    4b05:	48 01 d0             	add    rax,rdx
    4b08:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    4b0c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b10:	8b 40 34             	mov    eax,DWORD PTR [rax+0x34]
    4b13:	85 c0                	test   eax,eax
    4b15:	75 2a                	jne    4b41 <ip4_tcp_decode+0x792>
    4b17:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b1b:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4b1e:	83 f8 01             	cmp    eax,0x1
    4b21:	75 1e                	jne    4b41 <ip4_tcp_decode+0x792>
    4b23:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b27:	c7 40 34 01 00 00 00 	mov    DWORD PTR [rax+0x34],0x1
    4b2e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b32:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4b35:	8d 50 01             	lea    edx,[rax+0x1]
    4b38:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b3c:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    4b3f:	eb 33                	jmp    4b74 <ip4_tcp_decode+0x7c5>
    4b41:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b45:	8b 40 38             	mov    eax,DWORD PTR [rax+0x38]
    4b48:	85 c0                	test   eax,eax
    4b4a:	75 28                	jne    4b74 <ip4_tcp_decode+0x7c5>
    4b4c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b50:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4b53:	83 f8 02             	cmp    eax,0x2
    4b56:	75 1c                	jne    4b74 <ip4_tcp_decode+0x7c5>
    4b58:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b5c:	c7 40 38 01 00 00 00 	mov    DWORD PTR [rax+0x38],0x1
    4b63:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b67:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4b6a:	8d 50 01             	lea    edx,[rax+0x1]
    4b6d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b71:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    4b74:	0f b6 05 e9 53 10 00 	movzx  eax,BYTE PTR [rip+0x1053e9]        # 109f64 <packet_print>
    4b7b:	84 c0                	test   al,al
    4b7d:	74 3a                	je     4bb9 <ip4_tcp_decode+0x80a>
    4b7f:	80 7d a3 00          	cmp    BYTE PTR [rbp-0x5d],0x0
    4b83:	74 34                	je     4bb9 <ip4_tcp_decode+0x80a>
    4b85:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4b89:	74 2e                	je     4bb9 <ip4_tcp_decode+0x80a>
    4b8b:	0f b6 45 a2          	movzx  eax,BYTE PTR [rbp-0x5e]
    4b8f:	83 f0 01             	xor    eax,0x1
    4b92:	84 c0                	test   al,al
    4b94:	74 23                	je     4bb9 <ip4_tcp_decode+0x80a>
    4b96:	83 7d a8 50          	cmp    DWORD PTR [rbp-0x58],0x50
    4b9a:	74 06                	je     4ba2 <ip4_tcp_decode+0x7f3>
    4b9c:	83 7d ac 50          	cmp    DWORD PTR [rbp-0x54],0x50
    4ba0:	75 17                	jne    4bb9 <ip4_tcp_decode+0x80a>
    4ba2:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    4ba6:	48 8d 50 42          	lea    rdx,[rax+0x42]
    4baa:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4bae:	48 89 c6             	mov    rsi,rax
    4bb1:	48 89 d7             	mov    rdi,rdx
    4bb4:	e8 67 36 00 00       	call   8220 <http_disect>
    4bb9:	83 7d a8 15          	cmp    DWORD PTR [rbp-0x58],0x15
    4bbd:	74 06                	je     4bc5 <ip4_tcp_decode+0x816>
    4bbf:	83 7d ac 15          	cmp    DWORD PTR [rbp-0x54],0x15
    4bc3:	75 2d                	jne    4bf2 <ip4_tcp_decode+0x843>
    4bc5:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4bc9:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    4bcd:	c0 e8 04             	shr    al,0x4
    4bd0:	0f b6 c0             	movzx  eax,al
    4bd3:	c1 e0 02             	shl    eax,0x2
    4bd6:	48 98                	cdqe   
    4bd8:	48 8d 50 22          	lea    rdx,[rax+0x22]
    4bdc:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    4be0:	48 01 c2             	add    rdx,rax
    4be3:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4be7:	48 89 c6             	mov    rsi,rax
    4bea:	48 89 d7             	mov    rdi,rdx
    4bed:	e8 19 38 00 00       	call   840b <ftp_disect>
    4bf2:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    4bf9:	8b 50 14             	mov    edx,DWORD PTR [rax+0x14]
    4bfc:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4c00:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    4c04:	c0 e8 04             	shr    al,0x4
    4c07:	0f b6 c0             	movzx  eax,al
    4c0a:	c1 e0 02             	shl    eax,0x2
    4c0d:	89 c1                	mov    ecx,eax
    4c0f:	89 d0                	mov    eax,edx
    4c11:	29 c8                	sub    eax,ecx
    4c13:	8d 50 de             	lea    edx,[rax-0x22]
    4c16:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4c1a:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    4c1d:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4c21:	48 89 c7             	mov    rdi,rax
    4c24:	e8 5c 17 00 00       	call   6385 <rulemgr>
    4c29:	90                   	nop
    4c2a:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    4c2e:	c9                   	leave  
    4c2f:	c3                   	ret    

0000000000004c30 <ip4_udp_decode>:
    4c30:	f3 0f 1e fa          	endbr64 
    4c34:	55                   	push   rbp
    4c35:	48 89 e5             	mov    rbp,rsp
    4c38:	48 83 ec 30          	sub    rsp,0x30
    4c3c:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    4c40:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    4c44:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    4c48:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4c4c:	48 83 c0 22          	add    rax,0x22
    4c50:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4c54:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4c58:	48 8d 50 2a          	lea    rdx,[rax+0x2a]
    4c5c:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4c60:	48 89 10             	mov    QWORD PTR [rax],rdx
    4c63:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4c67:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    4c6b:	ba 5d 00 00 00       	mov    edx,0x5d
    4c70:	be 01 00 00 00       	mov    esi,0x1
    4c75:	48 89 c7             	mov    rdi,rax
    4c78:	e8 07 02 00 00       	call   4e84 <add_ip_addr_or_inc_counter>
    4c7d:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4c81:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4c85:	ba 5d 00 00 00       	mov    edx,0x5d
    4c8a:	be 00 00 00 00       	mov    esi,0x0
    4c8f:	48 89 c7             	mov    rdi,rax
    4c92:	e8 ed 01 00 00       	call   4e84 <add_ip_addr_or_inc_counter>
    4c97:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4c9b:	0f b7 00             	movzx  eax,WORD PTR [rax]
    4c9e:	0f b7 c0             	movzx  eax,ax
    4ca1:	89 c7                	mov    edi,eax
    4ca3:	e8 88 d9 ff ff       	call   2630 <ntohs@plt>
    4ca8:	0f b7 c0             	movzx  eax,ax
    4cab:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
    4cae:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4cb2:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    4cb6:	0f b7 c0             	movzx  eax,ax
    4cb9:	89 c7                	mov    edi,eax
    4cbb:	e8 70 d9 ff ff       	call   2630 <ntohs@plt>
    4cc0:	0f b7 c0             	movzx  eax,ax
    4cc3:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    4cc6:	0f b6 05 97 52 10 00 	movzx  eax,BYTE PTR [rip+0x105297]        # 109f64 <packet_print>
    4ccd:	84 c0                	test   al,al
    4ccf:	74 5d                	je     4d2e <ip4_udp_decode+0xfe>
    4cd1:	48 8d 35 48 7d 00 00 	lea    rsi,[rip+0x7d48]        # ca20 <_IO_stdin_used+0xa20>
    4cd8:	48 8d 3d 47 7d 00 00 	lea    rdi,[rip+0x7d47]        # ca26 <_IO_stdin_used+0xa26>
    4cdf:	b8 00 00 00 00       	mov    eax,0x0
    4ce4:	e8 97 d7 ff ff       	call   2480 <printf@plt>
    4ce9:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4ced:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    4cf1:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4cf5:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    4cf9:	8b 75 f4             	mov    esi,DWORD PTR [rbp-0xc]
    4cfc:	8b 55 f0             	mov    edx,DWORD PTR [rbp-0x10]
    4cff:	41 89 f0             	mov    r8d,esi
    4d02:	48 89 c6             	mov    rsi,rax
    4d05:	48 8d 3d 1d 7d 00 00 	lea    rdi,[rip+0x7d1d]        # ca29 <_IO_stdin_used+0xa29>
    4d0c:	b8 00 00 00 00       	mov    eax,0x0
    4d11:	e8 6a d7 ff ff       	call   2480 <printf@plt>
    4d16:	48 8d 35 25 7d 00 00 	lea    rsi,[rip+0x7d25]        # ca42 <_IO_stdin_used+0xa42>
    4d1d:	48 8d 3d 02 7d 00 00 	lea    rdi,[rip+0x7d02]        # ca26 <_IO_stdin_used+0xa26>
    4d24:	b8 00 00 00 00       	mov    eax,0x0
    4d29:	e8 52 d7 ff ff       	call   2480 <printf@plt>
    4d2e:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d32:	8b 55 f0             	mov    edx,DWORD PTR [rbp-0x10]
    4d35:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    4d38:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d3c:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
    4d3f:	89 50 28             	mov    DWORD PTR [rax+0x28],edx
    4d42:	83 7d f0 35          	cmp    DWORD PTR [rbp-0x10],0x35
    4d46:	74 06                	je     4d4e <ip4_udp_decode+0x11e>
    4d48:	83 7d f4 35          	cmp    DWORD PTR [rbp-0xc],0x35
    4d4c:	75 17                	jne    4d65 <ip4_udp_decode+0x135>
    4d4e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4d52:	48 8d 50 2b          	lea    rdx,[rax+0x2b]
    4d56:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d5a:	48 89 c6             	mov    rsi,rax
    4d5d:	48 89 d7             	mov    rdi,rdx
    4d60:	e8 6d 35 00 00       	call   82d2 <dns_disect>
    4d65:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4d69:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    4d6c:	8d 50 d6             	lea    edx,[rax-0x2a]
    4d6f:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d73:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    4d76:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d7a:	48 89 c7             	mov    rdi,rax
    4d7d:	e8 03 16 00 00       	call   6385 <rulemgr>
    4d82:	90                   	nop
    4d83:	c9                   	leave  
    4d84:	c3                   	ret    

0000000000004d85 <ip4_igmp_decode>:
    4d85:	f3 0f 1e fa          	endbr64 
    4d89:	55                   	push   rbp
    4d8a:	48 89 e5             	mov    rbp,rsp
    4d8d:	48 83 ec 60          	sub    rsp,0x60
    4d91:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    4d95:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
    4d99:	48 89 55 a8          	mov    QWORD PTR [rbp-0x58],rdx
    4d9d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4da4:	00 00 
    4da6:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4daa:	31 c0                	xor    eax,eax
    4dac:	0f b6 05 b1 51 10 00 	movzx  eax,BYTE PTR [rip+0x1051b1]        # 109f64 <packet_print>
    4db3:	84 c0                	test   al,al
    4db5:	0f 84 b1 00 00 00    	je     4e6c <ip4_igmp_decode+0xe7>
    4dbb:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4dbf:	48 83 c0 26          	add    rax,0x26
    4dc3:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    4dc7:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    4dcb:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    4dcf:	48 89 c6             	mov    rsi,rax
    4dd2:	48 8d 3d 6f 7c 00 00 	lea    rdi,[rip+0x7c6f]        # ca48 <_IO_stdin_used+0xa48>
    4dd9:	b8 00 00 00 00       	mov    eax,0x0
    4dde:	e8 9d d6 ff ff       	call   2480 <printf@plt>
    4de3:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4de7:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4dea:	0f b6 c0             	movzx  eax,al
    4ded:	83 f8 11             	cmp    eax,0x11
    4df0:	74 07                	je     4df9 <ip4_igmp_decode+0x74>
    4df2:	83 f8 22             	cmp    eax,0x22
    4df5:	74 10                	je     4e07 <ip4_igmp_decode+0x82>
    4df7:	eb 54                	jmp    4e4d <ip4_igmp_decode+0xc8>
    4df9:	48 8d 3d 5d 7c 00 00 	lea    rdi,[rip+0x7c5d]        # ca5d <_IO_stdin_used+0xa5d>
    4e00:	e8 db d6 ff ff       	call   24e0 <puts@plt>
    4e05:	eb 66                	jmp    4e6d <ip4_igmp_decode+0xe8>
    4e07:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4e0b:	48 83 c0 26          	add    rax,0x26
    4e0f:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    4e13:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4e17:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    4e1a:	89 c7                	mov    edi,eax
    4e1c:	e8 be e2 ff ff       	call   30df <ipv4_ntoa>
    4e21:	48 89 c2             	mov    rdx,rax
    4e24:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    4e28:	48 89 d6             	mov    rsi,rdx
    4e2b:	48 89 c7             	mov    rdi,rax
    4e2e:	e8 3d d9 ff ff       	call   2770 <strcpy@plt>
    4e33:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    4e37:	48 89 c6             	mov    rsi,rax
    4e3a:	48 8d 3d 37 7c 00 00 	lea    rdi,[rip+0x7c37]        # ca78 <_IO_stdin_used+0xa78>
    4e41:	b8 00 00 00 00       	mov    eax,0x0
    4e46:	e8 35 d6 ff ff       	call   2480 <printf@plt>
    4e4b:	eb 20                	jmp    4e6d <ip4_igmp_decode+0xe8>
    4e4d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4e51:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4e54:	0f b6 c0             	movzx  eax,al
    4e57:	89 c6                	mov    esi,eax
    4e59:	48 8d 3d 4e 7c 00 00 	lea    rdi,[rip+0x7c4e]        # caae <_IO_stdin_used+0xaae>
    4e60:	b8 00 00 00 00       	mov    eax,0x0
    4e65:	e8 16 d6 ff ff       	call   2480 <printf@plt>
    4e6a:	eb 01                	jmp    4e6d <ip4_igmp_decode+0xe8>
    4e6c:	90                   	nop
    4e6d:	90                   	nop
    4e6e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4e72:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    4e79:	00 00 
    4e7b:	74 05                	je     4e82 <ip4_igmp_decode+0xfd>
    4e7d:	e8 be d8 ff ff       	call   2740 <__stack_chk_fail@plt>
    4e82:	c9                   	leave  
    4e83:	c3                   	ret    

0000000000004e84 <add_ip_addr_or_inc_counter>:
    4e84:	f3 0f 1e fa          	endbr64 
    4e88:	55                   	push   rbp
    4e89:	48 89 e5             	mov    rbp,rsp
    4e8c:	48 83 ec 60          	sub    rsp,0x60
    4e90:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    4e94:	89 f0                	mov    eax,esi
    4e96:	89 55 a0             	mov    DWORD PTR [rbp-0x60],edx
    4e99:	88 45 a4             	mov    BYTE PTR [rbp-0x5c],al
    4e9c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4ea3:	00 00 
    4ea5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4ea9:	31 c0                	xor    eax,eax
    4eab:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4eaf:	ba 08 00 00 00       	mov    edx,0x8
    4eb4:	be 00 00 00 00       	mov    esi,0x0
    4eb9:	48 89 c7             	mov    rdi,rax
    4ebc:	e8 cf d5 ff ff       	call   2490 <memset@plt>
    4ec1:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    4ec5:	ba 1c 00 00 00       	mov    edx,0x1c
    4eca:	be 00 00 00 00       	mov    esi,0x0
    4ecf:	48 89 c7             	mov    rdi,rax
    4ed2:	e8 b9 d5 ff ff       	call   2490 <memset@plt>
    4ed7:	48 8b 4d a8          	mov    rcx,QWORD PTR [rbp-0x58]
    4edb:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4edf:	ba 18 00 00 00       	mov    edx,0x18
    4ee4:	48 89 ce             	mov    rsi,rcx
    4ee7:	48 89 c7             	mov    rdi,rax
    4eea:	e8 d1 d8 ff ff       	call   27c0 <strncpy@plt>
    4eef:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    4ef3:	ba 1c 00 00 00       	mov    edx,0x1c
    4ef8:	be 00 00 00 00       	mov    esi,0x0
    4efd:	48 89 c7             	mov    rdi,rax
    4f00:	e8 8b d5 ff ff       	call   2490 <memset@plt>
    4f05:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4f09:	48 8d 55 c0          	lea    rdx,[rbp-0x40]
    4f0d:	48 83 c2 08          	add    rdx,0x8
    4f11:	48 89 c6             	mov    rsi,rax
    4f14:	48 89 d7             	mov    rdi,rdx
    4f17:	e8 54 d8 ff ff       	call   2770 <strcpy@plt>
    4f1c:	0f b6 45 a4          	movzx  eax,BYTE PTR [rbp-0x5c]
    4f20:	88 45 c0             	mov    BYTE PTR [rbp-0x40],al
    4f23:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    4f26:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    4f29:	48 8d 55 c0          	lea    rdx,[rbp-0x40]
    4f2d:	48 8d 45 b8          	lea    rax,[rbp-0x48]
    4f31:	48 89 d1             	mov    rcx,rdx
    4f34:	48 8d 15 35 00 00 00 	lea    rdx,[rip+0x35]        # 4f70 <verify_ip_addr>
    4f3b:	be 00 00 00 00       	mov    esi,0x0
    4f40:	48 89 c7             	mov    rdi,rax
    4f43:	e8 88 d6 ff ff       	call   25d0 <pthread_create@plt>
    4f48:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4f4c:	be 00 00 00 00       	mov    esi,0x0
    4f51:	48 89 c7             	mov    rdi,rax
    4f54:	e8 17 d5 ff ff       	call   2470 <pthread_join@plt>
    4f59:	90                   	nop
    4f5a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4f5e:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    4f65:	00 00 
    4f67:	74 05                	je     4f6e <add_ip_addr_or_inc_counter+0xea>
    4f69:	e8 d2 d7 ff ff       	call   2740 <__stack_chk_fail@plt>
    4f6e:	c9                   	leave  
    4f6f:	c3                   	ret    

0000000000004f70 <verify_ip_addr>:
    4f70:	f3 0f 1e fa          	endbr64 
    4f74:	55                   	push   rbp
    4f75:	48 89 e5             	mov    rbp,rsp
    4f78:	48 83 ec 30          	sub    rsp,0x30
    4f7c:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    4f80:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4f84:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    4f88:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
    4f8f:	e9 c9 00 00 00       	jmp    505d <verify_ip_addr+0xed>
    4f94:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    4f97:	48 63 d0             	movsxd rdx,eax
    4f9a:	48 89 d0             	mov    rax,rdx
    4f9d:	48 c1 e0 02          	shl    rax,0x2
    4fa1:	48 01 d0             	add    rax,rdx
    4fa4:	48 c1 e0 03          	shl    rax,0x3
    4fa8:	48 01 d0             	add    rax,rdx
    4fab:	48 c1 e0 04          	shl    rax,0x4
    4faf:	48 8d 15 6a e5 0e 00 	lea    rdx,[rip+0xee56a]        # f3520 <watchlist>
    4fb6:	48 01 d0             	add    rax,rdx
    4fb9:	48 8d 50 08          	lea    rdx,[rax+0x8]
    4fbd:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4fc1:	48 83 c0 08          	add    rax,0x8
    4fc5:	48 89 d6             	mov    rsi,rdx
    4fc8:	48 89 c7             	mov    rdi,rax
    4fcb:	e8 80 d7 ff ff       	call   2750 <strcmp@plt>
    4fd0:	85 c0                	test   eax,eax
    4fd2:	0f 85 81 00 00 00    	jne    5059 <verify_ip_addr+0xe9>
    4fd8:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    4fdb:	48 63 d0             	movsxd rdx,eax
    4fde:	48 89 d0             	mov    rax,rdx
    4fe1:	48 c1 e0 02          	shl    rax,0x2
    4fe5:	48 01 d0             	add    rax,rdx
    4fe8:	48 c1 e0 03          	shl    rax,0x3
    4fec:	48 01 d0             	add    rax,rdx
    4fef:	48 c1 e0 04          	shl    rax,0x4
    4ff3:	48 89 c2             	mov    rdx,rax
    4ff6:	48 8d 05 7b e7 0e 00 	lea    rax,[rip+0xee77b]        # f3778 <watchlist+0x258>
    4ffd:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    5000:	8d 48 01             	lea    ecx,[rax+0x1]
    5003:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    5006:	48 63 d0             	movsxd rdx,eax
    5009:	48 89 d0             	mov    rax,rdx
    500c:	48 c1 e0 02          	shl    rax,0x2
    5010:	48 01 d0             	add    rax,rdx
    5013:	48 c1 e0 03          	shl    rax,0x3
    5017:	48 01 d0             	add    rax,rdx
    501a:	48 c1 e0 04          	shl    rax,0x4
    501e:	48 89 c2             	mov    rdx,rax
    5021:	48 8d 05 50 e7 0e 00 	lea    rax,[rip+0xee750]        # f3778 <watchlist+0x258>
    5028:	89 0c 02             	mov    DWORD PTR [rdx+rax*1],ecx
    502b:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    502e:	48 63 d0             	movsxd rdx,eax
    5031:	48 89 d0             	mov    rax,rdx
    5034:	48 c1 e0 02          	shl    rax,0x2
    5038:	48 01 d0             	add    rax,rdx
    503b:	48 c1 e0 03          	shl    rax,0x3
    503f:	48 01 d0             	add    rax,rdx
    5042:	48 c1 e0 04          	shl    rax,0x4
    5046:	48 8d 15 d3 e4 0e 00 	lea    rdx,[rip+0xee4d3]        # f3520 <watchlist>
    504d:	48 01 d0             	add    rax,rdx
    5050:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    5054:	e9 f5 00 00 00       	jmp    514e <verify_ip_addr+0x1de>
    5059:	83 45 e4 01          	add    DWORD PTR [rbp-0x1c],0x1
    505d:	8b 05 b5 bf 00 00    	mov    eax,DWORD PTR [rip+0xbfb5]        # 11018 <watchlist_num>
    5063:	39 45 e4             	cmp    DWORD PTR [rbp-0x1c],eax
    5066:	0f 8e 28 ff ff ff    	jle    4f94 <verify_ip_addr+0x24>
    506c:	bf 90 02 00 00       	mov    edi,0x290
    5071:	e8 ea d4 ff ff       	call   2560 <malloc@plt>
    5076:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    507a:	8b 05 98 bf 00 00    	mov    eax,DWORD PTR [rip+0xbf98]        # 11018 <watchlist_num>
    5080:	83 c0 01             	add    eax,0x1
    5083:	89 05 8f bf 00 00    	mov    DWORD PTR [rip+0xbf8f],eax        # 11018 <watchlist_num>
    5089:	8b 05 89 bf 00 00    	mov    eax,DWORD PTR [rip+0xbf89]        # 11018 <watchlist_num>
    508f:	48 63 d0             	movsxd rdx,eax
    5092:	48 89 d0             	mov    rax,rdx
    5095:	48 c1 e0 02          	shl    rax,0x2
    5099:	48 01 d0             	add    rax,rdx
    509c:	48 c1 e0 03          	shl    rax,0x3
    50a0:	48 01 d0             	add    rax,rdx
    50a3:	48 c1 e0 04          	shl    rax,0x4
    50a7:	48 89 c1             	mov    rcx,rax
    50aa:	48 8d 05 6f e4 0e 00 	lea    rax,[rip+0xee46f]        # f3520 <watchlist>
    50b1:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    50b5:	48 01 c8             	add    rax,rcx
    50b8:	48 89 d6             	mov    rsi,rdx
    50bb:	ba 52 00 00 00       	mov    edx,0x52
    50c0:	48 89 c7             	mov    rdi,rax
    50c3:	48 89 d1             	mov    rcx,rdx
    50c6:	f3 48 a5             	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
    50c9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    50cd:	48 83 c0 08          	add    rax,0x8
    50d1:	ba 0f 00 00 00       	mov    edx,0xf
    50d6:	be 00 00 00 00       	mov    esi,0x0
    50db:	48 89 c7             	mov    rdi,rax
    50de:	e8 ad d3 ff ff       	call   2490 <memset@plt>
    50e3:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    50e7:	48 8d 48 08          	lea    rcx,[rax+0x8]
    50eb:	8b 05 27 bf 00 00    	mov    eax,DWORD PTR [rip+0xbf27]        # 11018 <watchlist_num>
    50f1:	48 63 d0             	movsxd rdx,eax
    50f4:	48 89 d0             	mov    rax,rdx
    50f7:	48 c1 e0 02          	shl    rax,0x2
    50fb:	48 01 d0             	add    rax,rdx
    50fe:	48 c1 e0 03          	shl    rax,0x3
    5102:	48 01 d0             	add    rax,rdx
    5105:	48 c1 e0 04          	shl    rax,0x4
    5109:	48 8d 15 10 e4 0e 00 	lea    rdx,[rip+0xee410]        # f3520 <watchlist>
    5110:	48 01 d0             	add    rax,rdx
    5113:	48 83 c0 08          	add    rax,0x8
    5117:	48 89 ce             	mov    rsi,rcx
    511a:	48 89 c7             	mov    rdi,rax
    511d:	e8 4e d6 ff ff       	call   2770 <strcpy@plt>
    5122:	8b 05 f0 be 00 00    	mov    eax,DWORD PTR [rip+0xbef0]        # 11018 <watchlist_num>
    5128:	48 63 d0             	movsxd rdx,eax
    512b:	48 89 d0             	mov    rax,rdx
    512e:	48 c1 e0 02          	shl    rax,0x2
    5132:	48 01 d0             	add    rax,rdx
    5135:	48 c1 e0 03          	shl    rax,0x3
    5139:	48 01 d0             	add    rax,rdx
    513c:	48 c1 e0 04          	shl    rax,0x4
    5140:	48 8d 15 d9 e3 0e 00 	lea    rdx,[rip+0xee3d9]        # f3520 <watchlist>
    5147:	48 01 d0             	add    rax,rdx
    514a:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    514e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5152:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5155:	84 c0                	test   al,al
    5157:	74 36                	je     518f <verify_ip_addr+0x21f>
    5159:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    515d:	8b 80 80 02 00 00    	mov    eax,DWORD PTR [rax+0x280]
    5163:	8d 50 01             	lea    edx,[rax+0x1]
    5166:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    516a:	89 90 80 02 00 00    	mov    DWORD PTR [rax+0x280],edx
    5170:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5174:	8b 90 88 02 00 00    	mov    edx,DWORD PTR [rax+0x288]
    517a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    517e:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    5181:	01 c2                	add    edx,eax
    5183:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5187:	89 90 88 02 00 00    	mov    DWORD PTR [rax+0x288],edx
    518d:	eb 34                	jmp    51c3 <verify_ip_addr+0x253>
    518f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5193:	8b 80 7c 02 00 00    	mov    eax,DWORD PTR [rax+0x27c]
    5199:	8d 50 01             	lea    edx,[rax+0x1]
    519c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    51a0:	89 90 7c 02 00 00    	mov    DWORD PTR [rax+0x27c],edx
    51a6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    51aa:	8b 90 84 02 00 00    	mov    edx,DWORD PTR [rax+0x284]
    51b0:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    51b4:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    51b7:	01 c2                	add    edx,eax
    51b9:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    51bd:	89 90 84 02 00 00    	mov    DWORD PTR [rax+0x284],edx
    51c3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    51c7:	8b 90 8c 02 00 00    	mov    edx,DWORD PTR [rax+0x28c]
    51cd:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    51d1:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    51d4:	01 c2                	add    edx,eax
    51d6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    51da:	89 90 8c 02 00 00    	mov    DWORD PTR [rax+0x28c],edx
    51e0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    51e4:	8b 80 7c 02 00 00    	mov    eax,DWORD PTR [rax+0x27c]
    51ea:	8d 14 00             	lea    edx,[rax+rax*1]
    51ed:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    51f1:	89 90 58 02 00 00    	mov    DWORD PTR [rax+0x258],edx
    51f7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    51fb:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    51fe:	83 f8 5e             	cmp    eax,0x5e
    5201:	0f 84 9b 00 00 00    	je     52a2 <verify_ip_addr+0x332>
    5207:	83 f8 5e             	cmp    eax,0x5e
    520a:	0f 8f cf 00 00 00    	jg     52df <verify_ip_addr+0x36f>
    5210:	83 f8 5c             	cmp    eax,0x5c
    5213:	74 0a                	je     521f <verify_ip_addr+0x2af>
    5215:	83 f8 5d             	cmp    eax,0x5d
    5218:	74 48                	je     5262 <verify_ip_addr+0x2f2>
    521a:	e9 c0 00 00 00       	jmp    52df <verify_ip_addr+0x36f>
    521f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5223:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5226:	84 c0                	test   al,al
    5228:	74 1c                	je     5246 <verify_ip_addr+0x2d6>
    522a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    522e:	8b 80 5c 02 00 00    	mov    eax,DWORD PTR [rax+0x25c]
    5234:	8d 50 01             	lea    edx,[rax+0x1]
    5237:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    523b:	89 90 5c 02 00 00    	mov    DWORD PTR [rax+0x25c],edx
    5241:	e9 d5 00 00 00       	jmp    531b <verify_ip_addr+0x3ab>
    5246:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    524a:	8b 80 68 02 00 00    	mov    eax,DWORD PTR [rax+0x268]
    5250:	8d 50 01             	lea    edx,[rax+0x1]
    5253:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5257:	89 90 68 02 00 00    	mov    DWORD PTR [rax+0x268],edx
    525d:	e9 b9 00 00 00       	jmp    531b <verify_ip_addr+0x3ab>
    5262:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5266:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5269:	84 c0                	test   al,al
    526b:	74 1c                	je     5289 <verify_ip_addr+0x319>
    526d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5271:	8b 80 60 02 00 00    	mov    eax,DWORD PTR [rax+0x260]
    5277:	8d 50 01             	lea    edx,[rax+0x1]
    527a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    527e:	89 90 60 02 00 00    	mov    DWORD PTR [rax+0x260],edx
    5284:	e9 92 00 00 00       	jmp    531b <verify_ip_addr+0x3ab>
    5289:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    528d:	8b 80 6c 02 00 00    	mov    eax,DWORD PTR [rax+0x26c]
    5293:	8d 50 01             	lea    edx,[rax+0x1]
    5296:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    529a:	89 90 6c 02 00 00    	mov    DWORD PTR [rax+0x26c],edx
    52a0:	eb 79                	jmp    531b <verify_ip_addr+0x3ab>
    52a2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    52a6:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    52a9:	84 c0                	test   al,al
    52ab:	74 19                	je     52c6 <verify_ip_addr+0x356>
    52ad:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52b1:	8b 80 64 02 00 00    	mov    eax,DWORD PTR [rax+0x264]
    52b7:	8d 50 01             	lea    edx,[rax+0x1]
    52ba:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52be:	89 90 64 02 00 00    	mov    DWORD PTR [rax+0x264],edx
    52c4:	eb 55                	jmp    531b <verify_ip_addr+0x3ab>
    52c6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52ca:	8b 80 70 02 00 00    	mov    eax,DWORD PTR [rax+0x270]
    52d0:	8d 50 01             	lea    edx,[rax+0x1]
    52d3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52d7:	89 90 70 02 00 00    	mov    DWORD PTR [rax+0x270],edx
    52dd:	eb 3c                	jmp    531b <verify_ip_addr+0x3ab>
    52df:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    52e3:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    52e6:	84 c0                	test   al,al
    52e8:	74 19                	je     5303 <verify_ip_addr+0x393>
    52ea:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52ee:	8b 80 74 02 00 00    	mov    eax,DWORD PTR [rax+0x274]
    52f4:	8d 50 01             	lea    edx,[rax+0x1]
    52f7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52fb:	89 90 74 02 00 00    	mov    DWORD PTR [rax+0x274],edx
    5301:	eb 17                	jmp    531a <verify_ip_addr+0x3aa>
    5303:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5307:	8b 80 78 02 00 00    	mov    eax,DWORD PTR [rax+0x278]
    530d:	8d 50 01             	lea    edx,[rax+0x1]
    5310:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5314:	89 90 78 02 00 00    	mov    DWORD PTR [rax+0x278],edx
    531a:	90                   	nop
    531b:	b8 01 00 00 00       	mov    eax,0x1
    5320:	c9                   	leave  
    5321:	c3                   	ret    

0000000000005322 <ascii_hexdump>:
    5322:	f3 0f 1e fa          	endbr64 
    5326:	55                   	push   rbp
    5327:	48 89 e5             	mov    rbp,rsp
    532a:	48 83 ec 20          	sub    rsp,0x20
    532e:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    5332:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    5335:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    533c:	eb 52                	jmp    5390 <ascii_hexdump+0x6e>
    533e:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5341:	48 63 d0             	movsxd rdx,eax
    5344:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5348:	48 01 d0             	add    rax,rdx
    534b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    534e:	3c 20                	cmp    al,0x20
    5350:	76 30                	jbe    5382 <ascii_hexdump+0x60>
    5352:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5355:	48 63 d0             	movsxd rdx,eax
    5358:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    535c:	48 01 d0             	add    rax,rdx
    535f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5362:	3c 7e                	cmp    al,0x7e
    5364:	77 1c                	ja     5382 <ascii_hexdump+0x60>
    5366:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5369:	48 63 d0             	movsxd rdx,eax
    536c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5370:	48 01 d0             	add    rax,rdx
    5373:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5376:	0f b6 c0             	movzx  eax,al
    5379:	89 c7                	mov    edi,eax
    537b:	e8 90 d1 ff ff       	call   2510 <putchar@plt>
    5380:	eb 0a                	jmp    538c <ascii_hexdump+0x6a>
    5382:	bf 2e 00 00 00       	mov    edi,0x2e
    5387:	e8 84 d1 ff ff       	call   2510 <putchar@plt>
    538c:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    5390:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5393:	3b 45 e4             	cmp    eax,DWORD PTR [rbp-0x1c]
    5396:	7c a6                	jl     533e <ascii_hexdump+0x1c>
    5398:	bf 0a 00 00 00       	mov    edi,0xa
    539d:	e8 6e d1 ff ff       	call   2510 <putchar@plt>
    53a2:	90                   	nop
    53a3:	c9                   	leave  
    53a4:	c3                   	ret    

00000000000053a5 <stdout_alert>:
    53a5:	f3 0f 1e fa          	endbr64 
    53a9:	55                   	push   rbp
    53aa:	48 89 e5             	mov    rbp,rsp
    53ad:	53                   	push   rbx
    53ae:	48 81 ec c8 01 00 00 	sub    rsp,0x1c8
    53b5:	48 89 bd 48 fe ff ff 	mov    QWORD PTR [rbp-0x1b8],rdi
    53bc:	48 89 b5 40 fe ff ff 	mov    QWORD PTR [rbp-0x1c0],rsi
    53c3:	89 95 3c fe ff ff    	mov    DWORD PTR [rbp-0x1c4],edx
    53c9:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    53d0:	00 00 
    53d2:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    53d6:	31 c0                	xor    eax,eax
    53d8:	bf 00 00 00 00       	mov    edi,0x0
    53dd:	e8 8e d4 ff ff       	call   2870 <time@plt>
    53e2:	48 89 85 50 fe ff ff 	mov    QWORD PTR [rbp-0x1b0],rax
    53e9:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
    53f0:	48 89 c7             	mov    rdi,rax
    53f3:	e8 38 d4 ff ff       	call   2830 <localtime@plt>
    53f8:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    53fb:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    53ff:	48 89 8d 60 fe ff ff 	mov    QWORD PTR [rbp-0x1a0],rcx
    5406:	48 89 9d 68 fe ff ff 	mov    QWORD PTR [rbp-0x198],rbx
    540d:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    5411:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    5415:	48 89 8d 70 fe ff ff 	mov    QWORD PTR [rbp-0x190],rcx
    541c:	48 89 9d 78 fe ff ff 	mov    QWORD PTR [rbp-0x188],rbx
    5423:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    5427:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    542b:	48 89 8d 80 fe ff ff 	mov    QWORD PTR [rbp-0x180],rcx
    5432:	48 89 9d 88 fe ff ff 	mov    QWORD PTR [rbp-0x178],rbx
    5439:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    543d:	48 89 85 90 fe ff ff 	mov    QWORD PTR [rbp-0x170],rax
    5444:	8b bd 60 fe ff ff    	mov    edi,DWORD PTR [rbp-0x1a0]
    544a:	8b b5 64 fe ff ff    	mov    esi,DWORD PTR [rbp-0x19c]
    5450:	44 8b 8d 68 fe ff ff 	mov    r9d,DWORD PTR [rbp-0x198]
    5457:	44 8b 85 6c fe ff ff 	mov    r8d,DWORD PTR [rbp-0x194]
    545e:	8b 85 70 fe ff ff    	mov    eax,DWORD PTR [rbp-0x190]
    5464:	8d 48 01             	lea    ecx,[rax+0x1]
    5467:	8b 85 74 fe ff ff    	mov    eax,DWORD PTR [rbp-0x18c]
    546d:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    5473:	48 8d 85 a0 fe ff ff 	lea    rax,[rbp-0x160]
    547a:	57                   	push   rdi
    547b:	56                   	push   rsi
    547c:	48 8d 35 43 76 00 00 	lea    rsi,[rip+0x7643]        # cac6 <_IO_stdin_used+0xac6>
    5483:	48 89 c7             	mov    rdi,rax
    5486:	b8 00 00 00 00       	mov    eax,0x0
    548b:	e8 90 d1 ff ff       	call   2620 <sprintf@plt>
    5490:	48 83 c4 10          	add    rsp,0x10
    5494:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    549b:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    549e:	3d 80 00 00 00       	cmp    eax,0x80
    54a3:	75 4e                	jne    54f3 <stdout_alert+0x14e>
    54a5:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    54ac:	48 8b 78 10          	mov    rdi,QWORD PTR [rax+0x10]
    54b0:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    54b7:	48 8b 70 08          	mov    rsi,QWORD PTR [rax+0x8]
    54bb:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
    54c2:	48 8d 88 4c 01 00 00 	lea    rcx,[rax+0x14c]
    54c9:	48 8d 95 a0 fe ff ff 	lea    rdx,[rbp-0x160]
    54d0:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    54d7:	49 89 f9             	mov    r9,rdi
    54da:	49 89 f0             	mov    r8,rsi
    54dd:	48 8d 35 fe 75 00 00 	lea    rsi,[rip+0x75fe]        # cae2 <_IO_stdin_used+0xae2>
    54e4:	48 89 c7             	mov    rdi,rax
    54e7:	b8 00 00 00 00       	mov    eax,0x0
    54ec:	e8 2f d1 ff ff       	call   2620 <sprintf@plt>
    54f1:	eb 61                	jmp    5554 <stdout_alert+0x1af>
    54f3:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    54fa:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    54fd:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    5504:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    5508:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    550f:	44 8b 48 24          	mov    r9d,DWORD PTR [rax+0x24]
    5513:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    551a:	4c 8b 40 08          	mov    r8,QWORD PTR [rax+0x8]
    551e:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
    5525:	48 8d 88 4c 01 00 00 	lea    rcx,[rax+0x14c]
    552c:	48 8d 95 a0 fe ff ff 	lea    rdx,[rbp-0x160]
    5533:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    553a:	57                   	push   rdi
    553b:	56                   	push   rsi
    553c:	48 8d 35 af 75 00 00 	lea    rsi,[rip+0x75af]        # caf2 <_IO_stdin_used+0xaf2>
    5543:	48 89 c7             	mov    rdi,rax
    5546:	b8 00 00 00 00       	mov    eax,0x0
    554b:	e8 d0 d0 ff ff       	call   2620 <sprintf@plt>
    5550:	48 83 c4 10          	add    rsp,0x10
    5554:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    555b:	48 89 c6             	mov    rsi,rax
    555e:	48 8d 3d a3 75 00 00 	lea    rdi,[rip+0x75a3]        # cb08 <_IO_stdin_used+0xb08>
    5565:	b8 00 00 00 00       	mov    eax,0x0
    556a:	e8 11 cf ff ff       	call   2480 <printf@plt>
    556f:	48 8b 05 ba ba 00 00 	mov    rax,QWORD PTR [rip+0xbaba]        # 11030 <def_log_file>
    5576:	48 8d 35 8e 75 00 00 	lea    rsi,[rip+0x758e]        # cb0b <_IO_stdin_used+0xb0b>
    557d:	48 89 c7             	mov    rdi,rax
    5580:	e8 eb cf ff ff       	call   2570 <fopen@plt>
    5585:	48 89 85 58 fe ff ff 	mov    QWORD PTR [rbp-0x1a8],rax
    558c:	48 8b 95 58 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1a8]
    5593:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    559a:	48 89 d6             	mov    rsi,rdx
    559d:	48 89 c7             	mov    rdi,rax
    55a0:	e8 eb d0 ff ff       	call   2690 <fputs@plt>
    55a5:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    55ac:	48 89 c7             	mov    rdi,rax
    55af:	e8 fc d1 ff ff       	call   27b0 <fclose@plt>
    55b4:	90                   	nop
    55b5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    55b9:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    55c0:	00 00 
    55c2:	74 05                	je     55c9 <stdout_alert+0x224>
    55c4:	e8 77 d1 ff ff       	call   2740 <__stack_chk_fail@plt>
    55c9:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    55cd:	c9                   	leave  
    55ce:	c3                   	ret    

00000000000055cf <str_match_parser>:
    55cf:	f3 0f 1e fa          	endbr64 
    55d3:	55                   	push   rbp
    55d4:	48 89 e5             	mov    rbp,rsp
    55d7:	53                   	push   rbx
    55d8:	48 83 ec 48          	sub    rsp,0x48
    55dc:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    55e0:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
    55e4:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    55eb:	00 00 
    55ed:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    55f1:	31 c0                	xor    eax,eax
    55f3:	48 89 e0             	mov    rax,rsp
    55f6:	48 89 c3             	mov    rbx,rax
    55f9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    55fd:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5600:	85 c0                	test   eax,eax
    5602:	75 0a                	jne    560e <str_match_parser+0x3f>
    5604:	b8 00 00 00 00       	mov    eax,0x0
    5609:	e9 e1 01 00 00       	jmp    57ef <str_match_parser+0x220>
    560e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5612:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5615:	83 c0 01             	add    eax,0x1
    5618:	01 c0                	add    eax,eax
    561a:	48 98                	cdqe   
    561c:	48 83 e8 01          	sub    rax,0x1
    5620:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    5624:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5628:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    562b:	83 c0 01             	add    eax,0x1
    562e:	01 c0                	add    eax,eax
    5630:	48 98                	cdqe   
    5632:	49 89 c2             	mov    r10,rax
    5635:	41 bb 00 00 00 00    	mov    r11d,0x0
    563b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    563f:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5642:	83 c0 01             	add    eax,0x1
    5645:	01 c0                	add    eax,eax
    5647:	48 98                	cdqe   
    5649:	49 89 c0             	mov    r8,rax
    564c:	41 b9 00 00 00 00    	mov    r9d,0x0
    5652:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5656:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5659:	83 c0 01             	add    eax,0x1
    565c:	01 c0                	add    eax,eax
    565e:	48 98                	cdqe   
    5660:	ba 10 00 00 00       	mov    edx,0x10
    5665:	48 83 ea 01          	sub    rdx,0x1
    5669:	48 01 d0             	add    rax,rdx
    566c:	be 10 00 00 00       	mov    esi,0x10
    5671:	ba 00 00 00 00       	mov    edx,0x0
    5676:	48 f7 f6             	div    rsi
    5679:	48 6b c0 10          	imul   rax,rax,0x10
    567d:	48 89 c1             	mov    rcx,rax
    5680:	48 81 e1 00 f0 ff ff 	and    rcx,0xfffffffffffff000
    5687:	48 89 e2             	mov    rdx,rsp
    568a:	48 29 ca             	sub    rdx,rcx
    568d:	48 39 d4             	cmp    rsp,rdx
    5690:	74 12                	je     56a4 <str_match_parser+0xd5>
    5692:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    5699:	48 83 8c 24 f8 0f 00 	or     QWORD PTR [rsp+0xff8],0x0
    56a0:	00 00 
    56a2:	eb e9                	jmp    568d <str_match_parser+0xbe>
    56a4:	48 89 c2             	mov    rdx,rax
    56a7:	81 e2 ff 0f 00 00    	and    edx,0xfff
    56ad:	48 29 d4             	sub    rsp,rdx
    56b0:	48 89 c2             	mov    rdx,rax
    56b3:	81 e2 ff 0f 00 00    	and    edx,0xfff
    56b9:	48 85 d2             	test   rdx,rdx
    56bc:	74 10                	je     56ce <str_match_parser+0xff>
    56be:	25 ff 0f 00 00       	and    eax,0xfff
    56c3:	48 83 e8 08          	sub    rax,0x8
    56c7:	48 01 e0             	add    rax,rsp
    56ca:	48 83 08 00          	or     QWORD PTR [rax],0x0
    56ce:	48 89 e0             	mov    rax,rsp
    56d1:	48 83 c0 00          	add    rax,0x0
    56d5:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    56d9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    56dd:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    56e0:	83 c0 01             	add    eax,0x1
    56e3:	01 c0                	add    eax,eax
    56e5:	48 63 d0             	movsxd rdx,eax
    56e8:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    56ec:	be 00 00 00 00       	mov    esi,0x0
    56f1:	48 89 c7             	mov    rdi,rax
    56f4:	e8 97 cd ff ff       	call   2490 <memset@plt>
    56f9:	c7 45 d4 00 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x0
    5700:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5704:	8b 80 4c 03 00 00    	mov    eax,DWORD PTR [rax+0x34c]
    570a:	85 c0                	test   eax,eax
    570c:	74 5f                	je     576d <str_match_parser+0x19e>
    570e:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5712:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    5715:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
    5718:	eb 42                	jmp    575c <str_match_parser+0x18d>
    571a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    571e:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    5721:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
    5724:	48 98                	cdqe   
    5726:	48 01 d0             	add    rax,rdx
    5729:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    572c:	0f b6 d0             	movzx  edx,al
    572f:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    5732:	8d 48 01             	lea    ecx,[rax+0x1]
    5735:	89 4d d4             	mov    DWORD PTR [rbp-0x2c],ecx
    5738:	01 c0                	add    eax,eax
    573a:	48 63 c8             	movsxd rcx,eax
    573d:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    5741:	48 01 c8             	add    rax,rcx
    5744:	48 8d 35 c2 73 00 00 	lea    rsi,[rip+0x73c2]        # cb0d <_IO_stdin_used+0xb0d>
    574b:	48 89 c7             	mov    rdi,rax
    574e:	b8 00 00 00 00       	mov    eax,0x0
    5753:	e8 c8 ce ff ff       	call   2620 <sprintf@plt>
    5758:	83 45 d0 01          	add    DWORD PTR [rbp-0x30],0x1
    575c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5760:	8b 80 4c 03 00 00    	mov    eax,DWORD PTR [rax+0x34c]
    5766:	39 45 d0             	cmp    DWORD PTR [rbp-0x30],eax
    5769:	7c af                	jl     571a <str_match_parser+0x14b>
    576b:	eb 5a                	jmp    57c7 <str_match_parser+0x1f8>
    576d:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5771:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    5774:	89 45 cc             	mov    DWORD PTR [rbp-0x34],eax
    5777:	eb 42                	jmp    57bb <str_match_parser+0x1ec>
    5779:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    577d:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    5780:	8b 45 cc             	mov    eax,DWORD PTR [rbp-0x34]
    5783:	48 98                	cdqe   
    5785:	48 01 d0             	add    rax,rdx
    5788:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    578b:	0f b6 d0             	movzx  edx,al
    578e:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    5791:	8d 48 01             	lea    ecx,[rax+0x1]
    5794:	89 4d d4             	mov    DWORD PTR [rbp-0x2c],ecx
    5797:	01 c0                	add    eax,eax
    5799:	48 63 c8             	movsxd rcx,eax
    579c:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    57a0:	48 01 c8             	add    rax,rcx
    57a3:	48 8d 35 63 73 00 00 	lea    rsi,[rip+0x7363]        # cb0d <_IO_stdin_used+0xb0d>
    57aa:	48 89 c7             	mov    rdi,rax
    57ad:	b8 00 00 00 00       	mov    eax,0x0
    57b2:	e8 69 ce ff ff       	call   2620 <sprintf@plt>
    57b7:	83 45 cc 01          	add    DWORD PTR [rbp-0x34],0x1
    57bb:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    57bf:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    57c2:	39 45 cc             	cmp    DWORD PTR [rbp-0x34],eax
    57c5:	7c b2                	jl     5779 <str_match_parser+0x1aa>
    57c7:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    57cb:	48 8d 50 40          	lea    rdx,[rax+0x40]
    57cf:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    57d3:	48 89 d6             	mov    rsi,rdx
    57d6:	48 89 c7             	mov    rdi,rax
    57d9:	e8 92 ce ff ff       	call   2670 <strstr@plt>
    57de:	48 85 c0             	test   rax,rax
    57e1:	74 07                	je     57ea <str_match_parser+0x21b>
    57e3:	b8 01 00 00 00       	mov    eax,0x1
    57e8:	eb 05                	jmp    57ef <str_match_parser+0x220>
    57ea:	b8 00 00 00 00       	mov    eax,0x0
    57ef:	48 89 dc             	mov    rsp,rbx
    57f2:	48 8b 5d e8          	mov    rbx,QWORD PTR [rbp-0x18]
    57f6:	64 48 2b 1c 25 28 00 	sub    rbx,QWORD PTR fs:0x28
    57fd:	00 00 
    57ff:	74 05                	je     5806 <str_match_parser+0x237>
    5801:	e8 3a cf ff ff       	call   2740 <__stack_chk_fail@plt>
    5806:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    580a:	c9                   	leave  
    580b:	c3                   	ret    

000000000000580c <is_blocked_ipv4>:
    580c:	f3 0f 1e fa          	endbr64 
    5810:	55                   	push   rbp
    5811:	48 89 e5             	mov    rbp,rsp
    5814:	48 83 ec 20          	sub    rsp,0x20
    5818:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    581c:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    5823:	eb 3b                	jmp    5860 <is_blocked_ipv4+0x54>
    5825:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5828:	48 63 d0             	movsxd rdx,eax
    582b:	48 89 d0             	mov    rax,rdx
    582e:	48 c1 e0 03          	shl    rax,0x3
    5832:	48 01 d0             	add    rax,rdx
    5835:	48 01 c0             	add    rax,rax
    5838:	48 8d 15 a1 da 0e 00 	lea    rdx,[rip+0xedaa1]        # f32e0 <blocked_ipv4_addrs>
    583f:	48 01 c2             	add    rdx,rax
    5842:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5846:	48 89 d6             	mov    rsi,rdx
    5849:	48 89 c7             	mov    rdi,rax
    584c:	e8 ff ce ff ff       	call   2750 <strcmp@plt>
    5851:	85 c0                	test   eax,eax
    5853:	75 07                	jne    585c <is_blocked_ipv4+0x50>
    5855:	b8 01 00 00 00       	mov    eax,0x1
    585a:	eb 14                	jmp    5870 <is_blocked_ipv4+0x64>
    585c:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    5860:	8b 05 aa b7 00 00    	mov    eax,DWORD PTR [rip+0xb7aa]        # 11010 <blk_ipv4_len>
    5866:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    5869:	7e ba                	jle    5825 <is_blocked_ipv4+0x19>
    586b:	b8 00 00 00 00       	mov    eax,0x0
    5870:	c9                   	leave  
    5871:	c3                   	ret    

0000000000005872 <none>:
    5872:	f3 0f 1e fa          	endbr64 
    5876:	55                   	push   rbp
    5877:	48 89 e5             	mov    rbp,rsp
    587a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    587e:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    5882:	b8 01 00 00 00       	mov    eax,0x1
    5887:	5d                   	pop    rbp
    5888:	c3                   	ret    

0000000000005889 <pcre_match>:
    5889:	f3 0f 1e fa          	endbr64 
    588d:	55                   	push   rbp
    588e:	48 89 e5             	mov    rbp,rsp
    5891:	48 83 ec 10          	sub    rsp,0x10
    5895:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5899:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    589d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    58a1:	48 8b 00             	mov    rax,QWORD PTR [rax]
    58a4:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    58a8:	48 8d ba d0 01 00 00 	lea    rdi,[rdx+0x1d0]
    58af:	41 b8 00 00 00 00    	mov    r8d,0x0
    58b5:	b9 00 00 00 00       	mov    ecx,0x0
    58ba:	ba 00 00 00 00       	mov    edx,0x0
    58bf:	48 89 c6             	mov    rsi,rax
    58c2:	e8 b9 cc ff ff       	call   2580 <regexec@plt>
    58c7:	83 f8 01             	cmp    eax,0x1
    58ca:	75 07                	jne    58d3 <pcre_match+0x4a>
    58cc:	b8 00 00 00 00       	mov    eax,0x0
    58d1:	eb 05                	jmp    58d8 <pcre_match+0x4f>
    58d3:	b8 01 00 00 00       	mov    eax,0x1
    58d8:	c9                   	leave  
    58d9:	c3                   	ret    

00000000000058da <rule_library_parser>:
    58da:	f3 0f 1e fa          	endbr64 
    58de:	55                   	push   rbp
    58df:	48 89 e5             	mov    rbp,rsp
    58e2:	53                   	push   rbx
    58e3:	48 83 ec 48          	sub    rsp,0x48
    58e7:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    58eb:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    58f2:	00 00 
    58f4:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    58f8:	31 c0                	xor    eax,eax
    58fa:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    58fe:	48 8d 35 13 72 00 00 	lea    rsi,[rip+0x7213]        # cb18 <_IO_stdin_used+0xb18>
    5905:	48 89 c7             	mov    rdi,rax
    5908:	e8 63 cc ff ff       	call   2570 <fopen@plt>
    590d:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    5911:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    5916:	75 22                	jne    593a <rule_library_parser+0x60>
    5918:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    591c:	48 89 c6             	mov    rsi,rax
    591f:	48 8d 3d fa 71 00 00 	lea    rdi,[rip+0x71fa]        # cb20 <_IO_stdin_used+0xb20>
    5926:	b8 00 00 00 00       	mov    eax,0x0
    592b:	e8 50 cb ff ff       	call   2480 <printf@plt>
    5930:	bf 01 00 00 00       	mov    edi,0x1
    5935:	e8 c6 cb ff ff       	call   2500 <exit@plt>
    593a:	48 c7 45 c8 00 00 00 	mov    QWORD PTR [rbp-0x38],0x0
    5941:	00 
    5942:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    5949:	00 
    594a:	e9 70 05 00 00       	jmp    5ebf <rule_library_parser+0x5e5>
    594f:	48 8b 5d d0          	mov    rbx,QWORD PTR [rbp-0x30]
    5953:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5957:	48 8d 35 e8 71 00 00 	lea    rsi,[rip+0x71e8]        # cb46 <_IO_stdin_used+0xb46>
    595e:	48 89 c7             	mov    rdi,rax
    5961:	e8 6a ce ff ff       	call   27d0 <strcspn@plt>
    5966:	48 01 d8             	add    rax,rbx
    5969:	c6 00 00             	mov    BYTE PTR [rax],0x0
    596c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5970:	48 89 c7             	mov    rdi,rax
    5973:	e8 b9 05 00 00       	call   5f31 <is_comment>
    5978:	84 c0                	test   al,al
    597a:	74 05                	je     5981 <rule_library_parser+0xa7>
    597c:	e9 3e 05 00 00       	jmp    5ebf <rule_library_parser+0x5e5>
    5981:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5985:	ba 1a 00 00 00       	mov    edx,0x1a
    598a:	48 8d 35 b7 71 00 00 	lea    rsi,[rip+0x71b7]        # cb48 <_IO_stdin_used+0xb48>
    5991:	48 89 c7             	mov    rdi,rax
    5994:	e8 b7 cb ff ff       	call   2550 <strncmp@plt>
    5999:	85 c0                	test   eax,eax
    599b:	75 39                	jne    59d6 <rule_library_parser+0xfc>
    599d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    59a1:	48 83 c0 1a          	add    rax,0x1a
    59a5:	48 8d 35 b7 71 00 00 	lea    rsi,[rip+0x71b7]        # cb63 <_IO_stdin_used+0xb63>
    59ac:	48 89 c7             	mov    rdi,rax
    59af:	e8 9c cd ff ff       	call   2750 <strcmp@plt>
    59b4:	85 c0                	test   eax,eax
    59b6:	75 0f                	jne    59c7 <rule_library_parser+0xed>
    59b8:	c7 05 c2 b6 00 00 01 	mov    DWORD PTR [rip+0xb6c2],0x1        # 11084 <strict_icmp_timestamp_req>
    59bf:	00 00 00 
    59c2:	e9 e2 04 00 00       	jmp    5ea9 <rule_library_parser+0x5cf>
    59c7:	c7 05 b3 b6 00 00 00 	mov    DWORD PTR [rip+0xb6b3],0x0        # 11084 <strict_icmp_timestamp_req>
    59ce:	00 00 00 
    59d1:	e9 d3 04 00 00       	jmp    5ea9 <rule_library_parser+0x5cf>
    59d6:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    59da:	ba 1d 00 00 00       	mov    edx,0x1d
    59df:	48 8d 35 81 71 00 00 	lea    rsi,[rip+0x7181]        # cb67 <_IO_stdin_used+0xb67>
    59e6:	48 89 c7             	mov    rdi,rax
    59e9:	e8 62 cb ff ff       	call   2550 <strncmp@plt>
    59ee:	85 c0                	test   eax,eax
    59f0:	75 39                	jne    5a2b <rule_library_parser+0x151>
    59f2:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    59f6:	48 83 c0 1d          	add    rax,0x1d
    59fa:	48 8d 35 62 71 00 00 	lea    rsi,[rip+0x7162]        # cb63 <_IO_stdin_used+0xb63>
    5a01:	48 89 c7             	mov    rdi,rax
    5a04:	e8 47 cd ff ff       	call   2750 <strcmp@plt>
    5a09:	85 c0                	test   eax,eax
    5a0b:	75 0f                	jne    5a1c <rule_library_parser+0x142>
    5a0d:	c7 05 71 b6 00 00 01 	mov    DWORD PTR [rip+0xb671],0x1        # 11088 <strict_nmap_host_alive_check>
    5a14:	00 00 00 
    5a17:	e9 8d 04 00 00       	jmp    5ea9 <rule_library_parser+0x5cf>
    5a1c:	c7 05 62 b6 00 00 00 	mov    DWORD PTR [rip+0xb662],0x0        # 11088 <strict_nmap_host_alive_check>
    5a23:	00 00 00 
    5a26:	e9 7e 04 00 00       	jmp    5ea9 <rule_library_parser+0x5cf>
    5a2b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a2f:	ba 17 00 00 00       	mov    edx,0x17
    5a34:	48 8d 35 4a 71 00 00 	lea    rsi,[rip+0x714a]        # cb85 <_IO_stdin_used+0xb85>
    5a3b:	48 89 c7             	mov    rdi,rax
    5a3e:	e8 0d cb ff ff       	call   2550 <strncmp@plt>
    5a43:	85 c0                	test   eax,eax
    5a45:	75 43                	jne    5a8a <rule_library_parser+0x1b0>
    5a47:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a4b:	48 89 c7             	mov    rdi,rax
    5a4e:	e8 ad cb ff ff       	call   2600 <strlen@plt>
    5a53:	48 83 f8 17          	cmp    rax,0x17
    5a57:	77 16                	ja     5a6f <rule_library_parser+0x195>
    5a59:	48 8d 3d 3d 71 00 00 	lea    rdi,[rip+0x713d]        # cb9d <_IO_stdin_used+0xb9d>
    5a60:	e8 7b ca ff ff       	call   24e0 <puts@plt>
    5a65:	bf 01 00 00 00       	mov    edi,0x1
    5a6a:	e8 91 ca ff ff       	call   2500 <exit@plt>
    5a6f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a73:	48 83 c0 17          	add    rax,0x17
    5a77:	48 89 c7             	mov    rdi,rax
    5a7a:	e8 41 cc ff ff       	call   26c0 <atoi@plt>
    5a7f:	89 05 db 44 10 00    	mov    DWORD PTR [rip+0x1044db],eax        # 109f60 <clean_delay_pkts>
    5a85:	e9 1f 04 00 00       	jmp    5ea9 <rule_library_parser+0x5cf>
    5a8a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a8e:	ba 18 00 00 00       	mov    edx,0x18
    5a93:	48 8d 35 1d 71 00 00 	lea    rsi,[rip+0x711d]        # cbb7 <_IO_stdin_used+0xbb7>
    5a9a:	48 89 c7             	mov    rdi,rax
    5a9d:	e8 ae ca ff ff       	call   2550 <strncmp@plt>
    5aa2:	85 c0                	test   eax,eax
    5aa4:	75 46                	jne    5aec <rule_library_parser+0x212>
    5aa6:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5aaa:	48 89 c7             	mov    rdi,rax
    5aad:	e8 4e cb ff ff       	call   2600 <strlen@plt>
    5ab2:	48 83 f8 18          	cmp    rax,0x18
    5ab6:	75 16                	jne    5ace <rule_library_parser+0x1f4>
    5ab8:	48 8d 3d de 70 00 00 	lea    rdi,[rip+0x70de]        # cb9d <_IO_stdin_used+0xb9d>
    5abf:	e8 1c ca ff ff       	call   24e0 <puts@plt>
    5ac4:	bf 01 00 00 00       	mov    edi,0x1
    5ac9:	e8 32 ca ff ff       	call   2500 <exit@plt>
    5ace:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ad2:	48 83 c0 18          	add    rax,0x18
    5ad6:	48 89 c7             	mov    rdi,rax
    5ad9:	e8 e2 cb ff ff       	call   26c0 <atoi@plt>
    5ade:	48 98                	cdqe   
    5ae0:	48 89 05 d1 b7 00 00 	mov    QWORD PTR [rip+0xb7d1],rax        # 112b8 <clean_delay>
    5ae7:	e9 bd 03 00 00       	jmp    5ea9 <rule_library_parser+0x5cf>
    5aec:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5af0:	ba 0b 00 00 00       	mov    edx,0xb
    5af5:	48 8d 35 d4 70 00 00 	lea    rsi,[rip+0x70d4]        # cbd0 <_IO_stdin_used+0xbd0>
    5afc:	48 89 c7             	mov    rdi,rax
    5aff:	e8 4c ca ff ff       	call   2550 <strncmp@plt>
    5b04:	85 c0                	test   eax,eax
    5b06:	75 33                	jne    5b3b <rule_library_parser+0x261>
    5b08:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b0c:	48 83 c0 0b          	add    rax,0xb
    5b10:	48 8d 35 4c 70 00 00 	lea    rsi,[rip+0x704c]        # cb63 <_IO_stdin_used+0xb63>
    5b17:	48 89 c7             	mov    rdi,rax
    5b1a:	e8 31 cc ff ff       	call   2750 <strcmp@plt>
    5b1f:	85 c0                	test   eax,eax
    5b21:	75 0c                	jne    5b2f <rule_library_parser+0x255>
    5b23:	c6 05 f7 43 10 00 01 	mov    BYTE PTR [rip+0x1043f7],0x1        # 109f21 <use_sqlite>
    5b2a:	e9 7a 03 00 00       	jmp    5ea9 <rule_library_parser+0x5cf>
    5b2f:	c6 05 eb 43 10 00 00 	mov    BYTE PTR [rip+0x1043eb],0x0        # 109f21 <use_sqlite>
    5b36:	e9 6e 03 00 00       	jmp    5ea9 <rule_library_parser+0x5cf>
    5b3b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b3f:	ba 15 00 00 00       	mov    edx,0x15
    5b44:	48 8d 35 91 70 00 00 	lea    rsi,[rip+0x7091]        # cbdc <_IO_stdin_used+0xbdc>
    5b4b:	48 89 c7             	mov    rdi,rax
    5b4e:	e8 fd c9 ff ff       	call   2550 <strncmp@plt>
    5b53:	85 c0                	test   eax,eax
    5b55:	75 34                	jne    5b8b <rule_library_parser+0x2b1>
    5b57:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b5b:	48 83 c0 15          	add    rax,0x15
    5b5f:	48 89 c6             	mov    rsi,rax
    5b62:	48 8d 3d d7 43 10 00 	lea    rdi,[rip+0x1043d7]        # 109f40 <sqlite_db_path>
    5b69:	e8 02 cc ff ff       	call   2770 <strcpy@plt>
    5b6e:	48 8d 35 cb 43 10 00 	lea    rsi,[rip+0x1043cb]        # 109f40 <sqlite_db_path>
    5b75:	48 8d 3d 76 70 00 00 	lea    rdi,[rip+0x7076]        # cbf2 <_IO_stdin_used+0xbf2>
    5b7c:	b8 00 00 00 00       	mov    eax,0x0
    5b81:	e8 5a 29 00 00       	call   84e0 <livedebug>
    5b86:	e9 1e 03 00 00       	jmp    5ea9 <rule_library_parser+0x5cf>
    5b8b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b8f:	ba 0b 00 00 00       	mov    edx,0xb
    5b94:	48 8d 35 70 70 00 00 	lea    rsi,[rip+0x7070]        # cc0b <_IO_stdin_used+0xc0b>
    5b9b:	48 89 c7             	mov    rdi,rax
    5b9e:	e8 ad c9 ff ff       	call   2550 <strncmp@plt>
    5ba3:	85 c0                	test   eax,eax
    5ba5:	75 34                	jne    5bdb <rule_library_parser+0x301>
    5ba7:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5bab:	48 83 c0 0b          	add    rax,0xb
    5baf:	48 89 c6             	mov    rsi,rax
    5bb2:	48 8d 3d b7 43 10 00 	lea    rdi,[rip+0x1043b7]        # 109f70 <input_adapter>
    5bb9:	e8 b2 cb ff ff       	call   2770 <strcpy@plt>
    5bbe:	48 8d 35 ab 43 10 00 	lea    rsi,[rip+0x1043ab]        # 109f70 <input_adapter>
    5bc5:	48 8d 3d 4c 70 00 00 	lea    rdi,[rip+0x704c]        # cc18 <_IO_stdin_used+0xc18>
    5bcc:	b8 00 00 00 00       	mov    eax,0x0
    5bd1:	e8 0a 29 00 00       	call   84e0 <livedebug>
    5bd6:	e9 ce 02 00 00       	jmp    5ea9 <rule_library_parser+0x5cf>
    5bdb:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5bdf:	ba 0c 00 00 00       	mov    edx,0xc
    5be4:	48 8d 35 60 70 00 00 	lea    rsi,[rip+0x7060]        # cc4b <_IO_stdin_used+0xc4b>
    5beb:	48 89 c7             	mov    rdi,rax
    5bee:	e8 5d c9 ff ff       	call   2550 <strncmp@plt>
    5bf3:	85 c0                	test   eax,eax
    5bf5:	75 34                	jne    5c2b <rule_library_parser+0x351>
    5bf7:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5bfb:	48 83 c0 0c          	add    rax,0xc
    5bff:	48 89 c6             	mov    rsi,rax
    5c02:	48 8d 3d 77 43 10 00 	lea    rdi,[rip+0x104377]        # 109f80 <output_adapter>
    5c09:	e8 62 cb ff ff       	call   2770 <strcpy@plt>
    5c0e:	48 8d 35 6b 43 10 00 	lea    rsi,[rip+0x10436b]        # 109f80 <output_adapter>
    5c15:	48 8d 3d 3c 70 00 00 	lea    rdi,[rip+0x703c]        # cc58 <_IO_stdin_used+0xc58>
    5c1c:	b8 00 00 00 00       	mov    eax,0x0
    5c21:	e8 ba 28 00 00       	call   84e0 <livedebug>
    5c26:	e9 7e 02 00 00       	jmp    5ea9 <rule_library_parser+0x5cf>
    5c2b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c2f:	ba 05 00 00 00       	mov    edx,0x5
    5c34:	48 8d 35 51 70 00 00 	lea    rsi,[rip+0x7051]        # cc8c <_IO_stdin_used+0xc8c>
    5c3b:	48 89 c7             	mov    rdi,rax
    5c3e:	e8 0d c9 ff ff       	call   2550 <strncmp@plt>
    5c43:	85 c0                	test   eax,eax
    5c45:	0f 85 81 00 00 00    	jne    5ccc <rule_library_parser+0x3f2>
    5c4b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c4f:	48 83 c0 05          	add    rax,0x5
    5c53:	48 89 c6             	mov    rsi,rax
    5c56:	48 8d 3d 35 70 00 00 	lea    rdi,[rip+0x7035]        # cc92 <_IO_stdin_used+0xc92>
    5c5d:	b8 00 00 00 00       	mov    eax,0x0
    5c62:	e8 79 28 00 00       	call   84e0 <livedebug>
    5c67:	48 8d 3d 2d 70 00 00 	lea    rdi,[rip+0x702d]        # cc9b <_IO_stdin_used+0xc9b>
    5c6e:	b8 00 00 00 00       	mov    eax,0x0
    5c73:	e8 08 c8 ff ff       	call   2480 <printf@plt>
    5c78:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c7c:	48 83 c0 05          	add    rax,0x5
    5c80:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5c83:	0f b6 15 1d 70 00 00 	movzx  edx,BYTE PTR [rip+0x701d]        # cca7 <_IO_stdin_used+0xca7>
    5c8a:	0f b6 c0             	movzx  eax,al
    5c8d:	0f b6 d2             	movzx  edx,dl
    5c90:	29 d0                	sub    eax,edx
    5c92:	85 c0                	test   eax,eax
    5c94:	75 1b                	jne    5cb1 <rule_library_parser+0x3d7>
    5c96:	c7 05 84 b3 00 00 02 	mov    DWORD PTR [rip+0xb384],0x2        # 11024 <VIGIL_MODE>
    5c9d:	00 00 00 
    5ca0:	48 8d 3d 02 70 00 00 	lea    rdi,[rip+0x7002]        # cca9 <_IO_stdin_used+0xca9>
    5ca7:	e8 34 c8 ff ff       	call   24e0 <puts@plt>
    5cac:	e9 f8 01 00 00       	jmp    5ea9 <rule_library_parser+0x5cf>
    5cb1:	c7 05 69 b3 00 00 01 	mov    DWORD PTR [rip+0xb369],0x1        # 11024 <VIGIL_MODE>
    5cb8:	00 00 00 
    5cbb:	48 8d 3d fe 6f 00 00 	lea    rdi,[rip+0x6ffe]        # ccc0 <_IO_stdin_used+0xcc0>
    5cc2:	e8 19 c8 ff ff       	call   24e0 <puts@plt>
    5cc7:	e9 dd 01 00 00       	jmp    5ea9 <rule_library_parser+0x5cf>
    5ccc:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5cd0:	ba 08 00 00 00       	mov    edx,0x8
    5cd5:	48 8d 35 fb 6f 00 00 	lea    rsi,[rip+0x6ffb]        # ccd7 <_IO_stdin_used+0xcd7>
    5cdc:	48 89 c7             	mov    rdi,rax
    5cdf:	e8 6c c8 ff ff       	call   2550 <strncmp@plt>
    5ce4:	85 c0                	test   eax,eax
    5ce6:	75 34                	jne    5d1c <rule_library_parser+0x442>
    5ce8:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5cec:	48 83 c0 08          	add    rax,0x8
    5cf0:	48 89 c6             	mov    rsi,rax
    5cf3:	48 8d 3d 96 42 10 00 	lea    rdi,[rip+0x104296]        # 109f90 <local_ip>
    5cfa:	e8 71 ca ff ff       	call   2770 <strcpy@plt>
    5cff:	48 8d 35 8a 42 10 00 	lea    rsi,[rip+0x10428a]        # 109f90 <local_ip>
    5d06:	48 8d 3d d3 6f 00 00 	lea    rdi,[rip+0x6fd3]        # cce0 <_IO_stdin_used+0xce0>
    5d0d:	b8 00 00 00 00       	mov    eax,0x0
    5d12:	e8 c9 27 00 00       	call   84e0 <livedebug>
    5d17:	e9 8d 01 00 00       	jmp    5ea9 <rule_library_parser+0x5cf>
    5d1c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d20:	ba 06 00 00 00       	mov    edx,0x6
    5d25:	48 8d 35 cf 6f 00 00 	lea    rsi,[rip+0x6fcf]        # ccfb <_IO_stdin_used+0xcfb>
    5d2c:	48 89 c7             	mov    rdi,rax
    5d2f:	e8 1c c8 ff ff       	call   2550 <strncmp@plt>
    5d34:	85 c0                	test   eax,eax
    5d36:	75 1c                	jne    5d54 <rule_library_parser+0x47a>
    5d38:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d3c:	48 83 c0 06          	add    rax,0x6
    5d40:	48 89 c6             	mov    rsi,rax
    5d43:	48 8d 3d 66 42 10 00 	lea    rdi,[rip+0x104266]        # 109fb0 <def_gw>
    5d4a:	e8 21 ca ff ff       	call   2770 <strcpy@plt>
    5d4f:	e9 55 01 00 00       	jmp    5ea9 <rule_library_parser+0x5cf>
    5d54:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d58:	ba 08 00 00 00       	mov    edx,0x8
    5d5d:	48 8d 35 9e 6f 00 00 	lea    rsi,[rip+0x6f9e]        # cd02 <_IO_stdin_used+0xd02>
    5d64:	48 89 c7             	mov    rdi,rax
    5d67:	e8 e4 c7 ff ff       	call   2550 <strncmp@plt>
    5d6c:	85 c0                	test   eax,eax
    5d6e:	75 3f                	jne    5daf <rule_library_parser+0x4d5>
    5d70:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d74:	48 83 c0 08          	add    rax,0x8
    5d78:	48 8d 35 e4 6d 00 00 	lea    rsi,[rip+0x6de4]        # cb63 <_IO_stdin_used+0xb63>
    5d7f:	48 89 c7             	mov    rdi,rax
    5d82:	e8 c9 c9 ff ff       	call   2750 <strcmp@plt>
    5d87:	85 c0                	test   eax,eax
    5d89:	75 18                	jne    5da3 <rule_library_parser+0x4c9>
    5d8b:	c6 05 30 42 10 00 01 	mov    BYTE PTR [rip+0x104230],0x1        # 109fc2 <use_spi>
    5d92:	48 8d 3d 72 6f 00 00 	lea    rdi,[rip+0x6f72]        # cd0b <_IO_stdin_used+0xd0b>
    5d99:	e8 42 c7 ff ff       	call   24e0 <puts@plt>
    5d9e:	e9 06 01 00 00       	jmp    5ea9 <rule_library_parser+0x5cf>
    5da3:	c6 05 18 42 10 00 00 	mov    BYTE PTR [rip+0x104218],0x0        # 109fc2 <use_spi>
    5daa:	e9 fa 00 00 00       	jmp    5ea9 <rule_library_parser+0x5cf>
    5daf:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5db3:	ba 09 00 00 00       	mov    edx,0x9
    5db8:	48 8d 35 65 6f 00 00 	lea    rsi,[rip+0x6f65]        # cd24 <_IO_stdin_used+0xd24>
    5dbf:	48 89 c7             	mov    rdi,rax
    5dc2:	e8 89 c7 ff ff       	call   2550 <strncmp@plt>
    5dc7:	85 c0                	test   eax,eax
    5dc9:	75 27                	jne    5df2 <rule_library_parser+0x518>
    5dcb:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5dcf:	48 89 c7             	mov    rdi,rax
    5dd2:	e8 83 01 00 00       	call   5f5a <rstrip>
    5dd7:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ddb:	48 83 c0 09          	add    rax,0x9
    5ddf:	48 89 c7             	mov    rdi,rax
    5de2:	e8 65 4c 00 00       	call   aa4c <homenet_toi>
    5de7:	89 05 d7 41 10 00    	mov    DWORD PTR [rip+0x1041d7],eax        # 109fc4 <homenet>
    5ded:	e9 b7 00 00 00       	jmp    5ea9 <rule_library_parser+0x5cf>
    5df2:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5df6:	ba 0e 00 00 00       	mov    edx,0xe
    5dfb:	48 8d 35 2c 6f 00 00 	lea    rsi,[rip+0x6f2c]        # cd2e <_IO_stdin_used+0xd2e>
    5e02:	48 89 c7             	mov    rdi,rax
    5e05:	e8 46 c7 ff ff       	call   2550 <strncmp@plt>
    5e0a:	85 c0                	test   eax,eax
    5e0c:	75 24                	jne    5e32 <rule_library_parser+0x558>
    5e0e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e12:	48 89 c7             	mov    rdi,rax
    5e15:	e8 40 01 00 00       	call   5f5a <rstrip>
    5e1a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e1e:	48 83 c0 0e          	add    rax,0xe
    5e22:	48 89 c7             	mov    rdi,rax
    5e25:	e8 22 4c 00 00       	call   aa4c <homenet_toi>
    5e2a:	89 05 98 41 10 00    	mov    DWORD PTR [rip+0x104198],eax        # 109fc8 <homenetmask>
    5e30:	eb 77                	jmp    5ea9 <rule_library_parser+0x5cf>
    5e32:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e36:	ba 09 00 00 00       	mov    edx,0x9
    5e3b:	48 8d 35 fb 6e 00 00 	lea    rsi,[rip+0x6efb]        # cd3d <_IO_stdin_used+0xd3d>
    5e42:	48 89 c7             	mov    rdi,rax
    5e45:	e8 06 c7 ff ff       	call   2550 <strncmp@plt>
    5e4a:	85 c0                	test   eax,eax
    5e4c:	75 3f                	jne    5e8d <rule_library_parser+0x5b3>
    5e4e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e52:	48 89 c7             	mov    rdi,rax
    5e55:	e8 00 01 00 00       	call   5f5a <rstrip>
    5e5a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e5e:	48 83 c0 09          	add    rax,0x9
    5e62:	48 8d 35 de 6e 00 00 	lea    rsi,[rip+0x6ede]        # cd47 <_IO_stdin_used+0xd47>
    5e69:	48 89 c7             	mov    rdi,rax
    5e6c:	e8 df c8 ff ff       	call   2750 <strcmp@plt>
    5e71:	85 c0                	test   eax,eax
    5e73:	75 0c                	jne    5e81 <rule_library_parser+0x5a7>
    5e75:	c7 05 e9 40 10 00 04 	mov    DWORD PTR [rip+0x1040e9],0x4        # 109f68 <vigil_location>
    5e7c:	00 00 00 
    5e7f:	eb 28                	jmp    5ea9 <rule_library_parser+0x5cf>
    5e81:	c7 05 dd 40 10 00 03 	mov    DWORD PTR [rip+0x1040dd],0x3        # 109f68 <vigil_location>
    5e88:	00 00 00 
    5e8b:	eb 1c                	jmp    5ea9 <rule_library_parser+0x5cf>
    5e8d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e91:	48 89 c7             	mov    rdi,rax
    5e94:	e8 7e 00 00 00       	call   5f17 <is_rule>
    5e99:	84 c0                	test   al,al
    5e9b:	74 0c                	je     5ea9 <rule_library_parser+0x5cf>
    5e9d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ea1:	48 89 c7             	mov    rdi,rax
    5ea4:	e8 18 01 00 00       	call   5fc1 <rule_parser>
    5ea9:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ead:	ba 08 00 00 00       	mov    edx,0x8
    5eb2:	be 00 00 00 00       	mov    esi,0x0
    5eb7:	48 89 c7             	mov    rdi,rax
    5eba:	e8 d1 c5 ff ff       	call   2490 <memset@plt>
    5ebf:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    5ec3:	48 8d 4d c8          	lea    rcx,[rbp-0x38]
    5ec7:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    5ecb:	48 89 ce             	mov    rsi,rcx
    5ece:	48 89 c7             	mov    rdi,rax
    5ed1:	e8 8a c8 ff ff       	call   2760 <getline@plt>
    5ed6:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    5eda:	48 83 7d e0 ff       	cmp    QWORD PTR [rbp-0x20],0xffffffffffffffff
    5edf:	0f 85 6a fa ff ff    	jne    594f <rule_library_parser+0x75>
    5ee5:	8b 05 39 b1 00 00    	mov    eax,DWORD PTR [rip+0xb139]        # 11024 <VIGIL_MODE>
    5eeb:	3d ff ff 00 00       	cmp    eax,0xffff
    5ef0:	75 0a                	jne    5efc <rule_library_parser+0x622>
    5ef2:	c7 05 28 b1 00 00 01 	mov    DWORD PTR [rip+0xb128],0x1        # 11024 <VIGIL_MODE>
    5ef9:	00 00 00 
    5efc:	90                   	nop
    5efd:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5f01:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    5f08:	00 00 
    5f0a:	74 05                	je     5f11 <rule_library_parser+0x637>
    5f0c:	e8 2f c8 ff ff       	call   2740 <__stack_chk_fail@plt>
    5f11:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    5f15:	c9                   	leave  
    5f16:	c3                   	ret    

0000000000005f17 <is_rule>:
    5f17:	f3 0f 1e fa          	endbr64 
    5f1b:	55                   	push   rbp
    5f1c:	48 89 e5             	mov    rbp,rsp
    5f1f:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5f23:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5f27:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5f2a:	3c 24                	cmp    al,0x24
    5f2c:	0f 94 c0             	sete   al
    5f2f:	5d                   	pop    rbp
    5f30:	c3                   	ret    

0000000000005f31 <is_comment>:
    5f31:	f3 0f 1e fa          	endbr64 
    5f35:	55                   	push   rbp
    5f36:	48 89 e5             	mov    rbp,rsp
    5f39:	48 83 ec 10          	sub    rsp,0x10
    5f3d:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5f41:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5f45:	be 23 00 00 00       	mov    esi,0x23
    5f4a:	48 89 c7             	mov    rdi,rax
    5f4d:	e8 9e c7 ff ff       	call   26f0 <strchr@plt>
    5f52:	48 85 c0             	test   rax,rax
    5f55:	0f 95 c0             	setne  al
    5f58:	c9                   	leave  
    5f59:	c3                   	ret    

0000000000005f5a <rstrip>:
    5f5a:	f3 0f 1e fa          	endbr64 
    5f5e:	55                   	push   rbp
    5f5f:	48 89 e5             	mov    rbp,rsp
    5f62:	48 83 ec 10          	sub    rsp,0x10
    5f66:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5f6a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5f6e:	48 8d 35 d1 6b 00 00 	lea    rsi,[rip+0x6bd1]        # cb46 <_IO_stdin_used+0xb46>
    5f75:	48 89 c7             	mov    rdi,rax
    5f78:	e8 53 c8 ff ff       	call   27d0 <strcspn@plt>
    5f7d:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    5f81:	48 01 d0             	add    rax,rdx
    5f84:	c6 00 00             	mov    BYTE PTR [rax],0x0
    5f87:	90                   	nop
    5f88:	c9                   	leave  
    5f89:	c3                   	ret    

0000000000005f8a <syntax_error>:
    5f8a:	f3 0f 1e fa          	endbr64 
    5f8e:	55                   	push   rbp
    5f8f:	48 89 e5             	mov    rbp,rsp
    5f92:	48 83 ec 10          	sub    rsp,0x10
    5f96:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5f9a:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
    5f9d:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    5fa1:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    5fa4:	89 c6                	mov    esi,eax
    5fa6:	48 8d 3d a3 6d 00 00 	lea    rdi,[rip+0x6da3]        # cd50 <_IO_stdin_used+0xd50>
    5fad:	b8 00 00 00 00       	mov    eax,0x0
    5fb2:	e8 c9 c4 ff ff       	call   2480 <printf@plt>
    5fb7:	bf 01 00 00 00       	mov    edi,0x1
    5fbc:	e8 3f c5 ff ff       	call   2500 <exit@plt>

0000000000005fc1 <rule_parser>:
    5fc1:	f3 0f 1e fa          	endbr64 
    5fc5:	55                   	push   rbp
    5fc6:	48 89 e5             	mov    rbp,rsp
    5fc9:	48 83 ec 40          	sub    rsp,0x40
    5fcd:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    5fd1:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    5fd8:	00 00 
    5fda:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    5fde:	31 c0                	xor    eax,eax
    5fe0:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    5fe4:	48 83 c0 01          	add    rax,0x1
    5fe8:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    5fec:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    5ff0:	48 8d 35 21 6b 00 00 	lea    rsi,[rip+0x6b21]        # cb18 <_IO_stdin_used+0xb18>
    5ff7:	48 89 c7             	mov    rdi,rax
    5ffa:	e8 71 c5 ff ff       	call   2570 <fopen@plt>
    5fff:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    6003:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
    6008:	75 22                	jne    602c <rule_parser+0x6b>
    600a:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    600e:	48 89 c6             	mov    rsi,rax
    6011:	48 8d 3d 58 6d 00 00 	lea    rdi,[rip+0x6d58]        # cd70 <_IO_stdin_used+0xd70>
    6018:	b8 00 00 00 00       	mov    eax,0x0
    601d:	e8 5e c4 ff ff       	call   2480 <printf@plt>
    6022:	bf 01 00 00 00       	mov    edi,0x1
    6027:	e8 d4 c4 ff ff       	call   2500 <exit@plt>
    602c:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    6030:	48 89 c6             	mov    rsi,rax
    6033:	48 8d 3d 69 6d 00 00 	lea    rdi,[rip+0x6d69]        # cda3 <_IO_stdin_used+0xda3>
    603a:	b8 00 00 00 00       	mov    eax,0x0
    603f:	e8 3c c4 ff ff       	call   2480 <printf@plt>
    6044:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    604b:	00 
    604c:	48 c7 45 d8 00 00 00 	mov    QWORD PTR [rbp-0x28],0x0
    6053:	00 
    6054:	eb 54                	jmp    60aa <rule_parser+0xe9>
    6056:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    605a:	48 89 c7             	mov    rdi,rax
    605d:	e8 cf fe ff ff       	call   5f31 <is_comment>
    6062:	84 c0                	test   al,al
    6064:	74 02                	je     6068 <rule_parser+0xa7>
    6066:	eb 42                	jmp    60aa <rule_parser+0xe9>
    6068:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    606c:	48 89 c7             	mov    rdi,rax
    606f:	e8 e6 fe ff ff       	call   5f5a <rstrip>
    6074:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    6078:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    607b:	0f b6 c0             	movzx  eax,al
    607e:	f7 d8                	neg    eax
    6080:	85 c0                	test   eax,eax
    6082:	75 02                	jne    6086 <rule_parser+0xc5>
    6084:	eb 24                	jmp    60aa <rule_parser+0xe9>
    6086:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    608a:	48 8d 35 23 6d 00 00 	lea    rsi,[rip+0x6d23]        # cdb4 <_IO_stdin_used+0xdb4>
    6091:	48 89 c7             	mov    rdi,rax
    6094:	e8 d7 c5 ff ff       	call   2670 <strstr@plt>
    6099:	48 85 c0             	test   rax,rax
    609c:	74 0c                	je     60aa <rule_parser+0xe9>
    609e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    60a2:	48 89 c7             	mov    rdi,rax
    60a5:	e8 5e 35 00 00       	call   9608 <line_parser>
    60aa:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    60ae:	48 8d 4d d0          	lea    rcx,[rbp-0x30]
    60b2:	48 8d 45 d8          	lea    rax,[rbp-0x28]
    60b6:	48 89 ce             	mov    rsi,rcx
    60b9:	48 89 c7             	mov    rdi,rax
    60bc:	e8 9f c6 ff ff       	call   2760 <getline@plt>
    60c1:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    60c5:	48 83 7d f0 ff       	cmp    QWORD PTR [rbp-0x10],0xffffffffffffffff
    60ca:	75 8a                	jne    6056 <rule_parser+0x95>
    60cc:	0f b6 05 4d 3e 10 00 	movzx  eax,BYTE PTR [rip+0x103e4d]        # 109f20 <debug_mode>
    60d3:	84 c0                	test   al,al
    60d5:	74 18                	je     60ef <rule_parser+0x12e>
    60d7:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    60db:	48 89 c6             	mov    rsi,rax
    60de:	48 8d 3d d5 6c 00 00 	lea    rdi,[rip+0x6cd5]        # cdba <_IO_stdin_used+0xdba>
    60e5:	b8 00 00 00 00       	mov    eax,0x0
    60ea:	e8 91 c3 ff ff       	call   2480 <printf@plt>
    60ef:	90                   	nop
    60f0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    60f4:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    60fb:	00 00 
    60fd:	74 05                	je     6104 <rule_parser+0x143>
    60ff:	e8 3c c6 ff ff       	call   2740 <__stack_chk_fail@plt>
    6104:	c9                   	leave  
    6105:	c3                   	ret    

0000000000006106 <deny_conf_parser>:
    6106:	f3 0f 1e fa          	endbr64 
    610a:	55                   	push   rbp
    610b:	48 89 e5             	mov    rbp,rsp
    610e:	48 83 ec 50          	sub    rsp,0x50
    6112:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    6116:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    611d:	00 00 
    611f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    6123:	31 c0                	xor    eax,eax
    6125:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    6129:	48 8d 35 e8 69 00 00 	lea    rsi,[rip+0x69e8]        # cb18 <_IO_stdin_used+0xb18>
    6130:	48 89 c7             	mov    rdi,rax
    6133:	e8 38 c4 ff ff       	call   2570 <fopen@plt>
    6138:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    613c:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    6141:	75 22                	jne    6165 <deny_conf_parser+0x5f>
    6143:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    6147:	48 89 c6             	mov    rsi,rax
    614a:	48 8d 3d 7f 6c 00 00 	lea    rdi,[rip+0x6c7f]        # cdd0 <_IO_stdin_used+0xdd0>
    6151:	b8 00 00 00 00       	mov    eax,0x0
    6156:	e8 25 c3 ff ff       	call   2480 <printf@plt>
    615b:	bf 01 00 00 00       	mov    edi,0x1
    6160:	e8 9b c3 ff ff       	call   2500 <exit@plt>
    6165:	48 c7 45 c8 00 00 00 	mov    QWORD PTR [rbp-0x38],0x0
    616c:	00 
    616d:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    6174:	00 
    6175:	e9 9a 00 00 00       	jmp    6214 <deny_conf_parser+0x10e>
    617a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    617e:	48 89 c7             	mov    rdi,rax
    6181:	e8 d4 fd ff ff       	call   5f5a <rstrip>
    6186:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    618a:	48 89 c7             	mov    rdi,rax
    618d:	e8 9f fd ff ff       	call   5f31 <is_comment>
    6192:	84 c0                	test   al,al
    6194:	74 02                	je     6198 <deny_conf_parser+0x92>
    6196:	eb 7c                	jmp    6214 <deny_conf_parser+0x10e>
    6198:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    619c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    619f:	0f b6 c0             	movzx  eax,al
    61a2:	f7 d8                	neg    eax
    61a4:	85 c0                	test   eax,eax
    61a6:	75 02                	jne    61aa <deny_conf_parser+0xa4>
    61a8:	eb 6a                	jmp    6214 <deny_conf_parser+0x10e>
    61aa:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    61ae:	48 8d 35 4c 6c 00 00 	lea    rsi,[rip+0x6c4c]        # ce01 <_IO_stdin_used+0xe01>
    61b5:	48 89 c7             	mov    rdi,rax
    61b8:	e8 b3 c4 ff ff       	call   2670 <strstr@plt>
    61bd:	48 85 c0             	test   rax,rax
    61c0:	74 52                	je     6214 <deny_conf_parser+0x10e>
    61c2:	8b 05 48 ae 00 00    	mov    eax,DWORD PTR [rip+0xae48]        # 11010 <blk_ipv4_len>
    61c8:	83 c0 01             	add    eax,0x1
    61cb:	89 05 3f ae 00 00    	mov    DWORD PTR [rip+0xae3f],eax        # 11010 <blk_ipv4_len>
    61d1:	8b 05 39 ae 00 00    	mov    eax,DWORD PTR [rip+0xae39]        # 11010 <blk_ipv4_len>
    61d7:	48 63 d0             	movsxd rdx,eax
    61da:	48 89 d0             	mov    rax,rdx
    61dd:	48 c1 e0 03          	shl    rax,0x3
    61e1:	48 01 d0             	add    rax,rdx
    61e4:	48 01 c0             	add    rax,rax
    61e7:	48 8d 15 f2 d0 0e 00 	lea    rdx,[rip+0xed0f2]        # f32e0 <blocked_ipv4_addrs>
    61ee:	48 01 d0             	add    rax,rdx
    61f1:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    61f5:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    61f9:	48 83 c0 05          	add    rax,0x5
    61fd:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    6201:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6205:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    6209:	48 89 d6             	mov    rsi,rdx
    620c:	48 89 c7             	mov    rdi,rax
    620f:	e8 5c c5 ff ff       	call   2770 <strcpy@plt>
    6214:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    6218:	48 8d 4d d0          	lea    rcx,[rbp-0x30]
    621c:	48 8d 45 c8          	lea    rax,[rbp-0x38]
    6220:	48 89 ce             	mov    rsi,rcx
    6223:	48 89 c7             	mov    rdi,rax
    6226:	e8 35 c5 ff ff       	call   2760 <getline@plt>
    622b:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    622f:	48 83 7d e0 ff       	cmp    QWORD PTR [rbp-0x20],0xffffffffffffffff
    6234:	0f 85 40 ff ff ff    	jne    617a <deny_conf_parser+0x74>
    623a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    623e:	48 85 c0             	test   rax,rax
    6241:	74 0c                	je     624f <deny_conf_parser+0x149>
    6243:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6247:	48 89 c7             	mov    rdi,rax
    624a:	e8 a1 c3 ff ff       	call   25f0 <free@plt>
    624f:	90                   	nop
    6250:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6254:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    625b:	00 00 
    625d:	74 05                	je     6264 <deny_conf_parser+0x15e>
    625f:	e8 dc c4 ff ff       	call   2740 <__stack_chk_fail@plt>
    6264:	c9                   	leave  
    6265:	c3                   	ret    

0000000000006266 <host_mon_parser>:
    6266:	f3 0f 1e fa          	endbr64 
    626a:	55                   	push   rbp
    626b:	48 89 e5             	mov    rbp,rsp
    626e:	48 83 ec 10          	sub    rsp,0x10
    6272:	48 8b 05 bf ad 00 00 	mov    rax,QWORD PTR [rip+0xadbf]        # 11038 <default_host_conf>
    6279:	48 8d 35 98 68 00 00 	lea    rsi,[rip+0x6898]        # cb18 <_IO_stdin_used+0xb18>
    6280:	48 89 c7             	mov    rdi,rax
    6283:	e8 e8 c2 ff ff       	call   2570 <fopen@plt>
    6288:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    628c:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    6291:	75 25                	jne    62b8 <host_mon_parser+0x52>
    6293:	48 8b 05 9e ad 00 00 	mov    rax,QWORD PTR [rip+0xad9e]        # 11038 <default_host_conf>
    629a:	48 89 c6             	mov    rsi,rax
    629d:	48 8d 3d 62 6b 00 00 	lea    rdi,[rip+0x6b62]        # ce06 <_IO_stdin_used+0xe06>
    62a4:	b8 00 00 00 00       	mov    eax,0x0
    62a9:	e8 d2 c1 ff ff       	call   2480 <printf@plt>
    62ae:	bf 01 00 00 00       	mov    edi,0x1
    62b3:	e8 48 c2 ff ff       	call   2500 <exit@plt>
    62b8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    62bc:	48 89 c7             	mov    rdi,rax
    62bf:	e8 ec c4 ff ff       	call   27b0 <fclose@plt>
    62c4:	90                   	nop
    62c5:	c9                   	leave  
    62c6:	c3                   	ret    

00000000000062c7 <rule_app>:
    62c7:	f3 0f 1e fa          	endbr64 
    62cb:	55                   	push   rbp
    62cc:	48 89 e5             	mov    rbp,rsp
    62cf:	48 83 ec 20          	sub    rsp,0x20
    62d3:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    62d7:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    62db:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    62df:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    62e3:	48 89 d6             	mov    rsi,rdx
    62e6:	48 89 c7             	mov    rdi,rax
    62e9:	e8 e9 02 00 00       	call   65d7 <r_engine>
    62ee:	88 45 fd             	mov    BYTE PTR [rbp-0x3],al
    62f1:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    62f5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    62f9:	48 89 d6             	mov    rsi,rdx
    62fc:	48 89 c7             	mov    rdi,rax
    62ff:	e8 36 46 00 00       	call   a93a <d_engine>
    6304:	88 45 fe             	mov    BYTE PTR [rbp-0x2],al
    6307:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    630b:	48 8b 88 78 03 00 00 	mov    rcx,QWORD PTR [rax+0x378]
    6312:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6316:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    631a:	48 89 d6             	mov    rsi,rdx
    631d:	48 89 c7             	mov    rdi,rax
    6320:	ff d1                	call   rcx
    6322:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
    6325:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
    6329:	74 40                	je     636b <rule_app+0xa4>
    632b:	80 7d fd 00          	cmp    BYTE PTR [rbp-0x3],0x0
    632f:	74 3a                	je     636b <rule_app+0xa4>
    6331:	80 7d fe 00          	cmp    BYTE PTR [rbp-0x2],0x0
    6335:	74 34                	je     636b <rule_app+0xa4>
    6337:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    633b:	4c 8b 80 80 03 00 00 	mov    r8,QWORD PTR [rax+0x380]
    6342:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    6346:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    634a:	ba 00 00 00 00       	mov    edx,0x0
    634f:	48 89 ce             	mov    rsi,rcx
    6352:	48 89 c7             	mov    rdi,rax
    6355:	41 ff d0             	call   r8
    6358:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    635c:	8b 40 3c             	mov    eax,DWORD PTR [rax+0x3c]
    635f:	8d 50 01             	lea    edx,[rax+0x1]
    6362:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6366:	89 50 3c             	mov    DWORD PTR [rax+0x3c],edx
    6369:	eb 17                	jmp    6382 <rule_app+0xbb>
    636b:	8b 05 b3 ac 00 00    	mov    eax,DWORD PTR [rip+0xacb3]        # 11024 <VIGIL_MODE>
    6371:	83 f8 02             	cmp    eax,0x2
    6374:	75 0c                	jne    6382 <rule_app+0xbb>
    6376:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    637a:	48 89 c7             	mov    rdi,rax
    637d:	e8 3d 22 00 00       	call   85bf <forward_packet>
    6382:	90                   	nop
    6383:	c9                   	leave  
    6384:	c3                   	ret    

0000000000006385 <rulemgr>:
    6385:	f3 0f 1e fa          	endbr64 
    6389:	55                   	push   rbp
    638a:	48 89 e5             	mov    rbp,rsp
    638d:	48 83 ec 20          	sub    rsp,0x20
    6391:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    6395:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    639c:	e9 23 02 00 00       	jmp    65c4 <rulemgr+0x23f>
    63a1:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    63a4:	8d 50 01             	lea    edx,[rax+0x1]
    63a7:	89 55 f4             	mov    DWORD PTR [rbp-0xc],edx
    63aa:	48 98                	cdqe   
    63ac:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    63b3:	48 8d 15 26 af 00 00 	lea    rdx,[rip+0xaf26]        # 112e0 <rules>
    63ba:	48 01 d0             	add    rax,rdx
    63bd:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    63c1:	0f b6 05 04 3c 10 00 	movzx  eax,BYTE PTR [rip+0x103c04]        # 109fcc <in_test_mode>
    63c8:	84 c0                	test   al,al
    63ca:	74 30                	je     63fc <rulemgr+0x77>
    63cc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    63d0:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    63d3:	83 f8 46             	cmp    eax,0x46
    63d6:	75 0d                	jne    63e5 <rulemgr+0x60>
    63d8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    63dc:	c7 40 10 45 00 00 00 	mov    DWORD PTR [rax+0x10],0x45
    63e3:	eb 17                	jmp    63fc <rulemgr+0x77>
    63e5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    63e9:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    63ec:	83 f8 45             	cmp    eax,0x45
    63ef:	75 0b                	jne    63fc <rulemgr+0x77>
    63f1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    63f5:	c7 40 10 46 00 00 00 	mov    DWORD PTR [rax+0x10],0x46
    63fc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6400:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    6406:	83 f8 ff             	cmp    eax,0xffffffff
    6409:	74 19                	je     6424 <rulemgr+0x9f>
    640b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    640f:	8b 50 2c             	mov    edx,DWORD PTR [rax+0x2c]
    6412:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6416:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    641c:	39 c2                	cmp    edx,eax
    641e:	0f 85 a0 01 00 00    	jne    65c4 <rulemgr+0x23f>
    6424:	0f b6 05 55 ac 00 00 	movzx  eax,BYTE PTR [rip+0xac55]        # 11080 <demo_mode>
    642b:	84 c0                	test   al,al
    642d:	75 0b                	jne    643a <rulemgr+0xb5>
    642f:	8b 05 33 3b 10 00    	mov    eax,DWORD PTR [rip+0x103b33]        # 109f68 <vigil_location>
    6435:	83 f8 03             	cmp    eax,0x3
    6438:	75 6b                	jne    64a5 <rulemgr+0x120>
    643a:	8b 05 28 3b 10 00    	mov    eax,DWORD PTR [rip+0x103b28]        # 109f68 <vigil_location>
    6440:	83 f8 03             	cmp    eax,0x3
    6443:	0f 85 7b 01 00 00    	jne    65c4 <rulemgr+0x23f>
    6449:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    644d:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    6450:	83 f8 ff             	cmp    eax,0xffffffff
    6453:	74 16                	je     646b <rulemgr+0xe6>
    6455:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6459:	8b 50 0c             	mov    edx,DWORD PTR [rax+0xc]
    645c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6460:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    6463:	39 c2                	cmp    edx,eax
    6465:	0f 85 59 01 00 00    	jne    65c4 <rulemgr+0x23f>
    646b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    646f:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    6472:	83 f8 ff             	cmp    eax,0xffffffff
    6475:	74 16                	je     648d <rulemgr+0x108>
    6477:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    647b:	8b 50 08             	mov    edx,DWORD PTR [rax+0x8]
    647e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6482:	8b 40 28             	mov    eax,DWORD PTR [rax+0x28]
    6485:	39 c2                	cmp    edx,eax
    6487:	0f 85 37 01 00 00    	jne    65c4 <rulemgr+0x23f>
    648d:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6491:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6495:	48 89 d6             	mov    rsi,rdx
    6498:	48 89 c7             	mov    rdi,rax
    649b:	e8 27 fe ff ff       	call   62c7 <rule_app>
    64a0:	e9 1f 01 00 00       	jmp    65c4 <rulemgr+0x23f>
    64a5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64a9:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    64ac:	83 f8 47             	cmp    eax,0x47
    64af:	74 16                	je     64c7 <rulemgr+0x142>
    64b1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    64b5:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    64b8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64bc:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    64bf:	39 c2                	cmp    edx,eax
    64c1:	0f 85 fd 00 00 00    	jne    65c4 <rulemgr+0x23f>
    64c7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64cb:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    64d1:	3d 80 00 00 00       	cmp    eax,0x80
    64d6:	75 18                	jne    64f0 <rulemgr+0x16b>
    64d8:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    64dc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64e0:	48 89 d6             	mov    rsi,rdx
    64e3:	48 89 c7             	mov    rdi,rax
    64e6:	e8 dc fd ff ff       	call   62c7 <rule_app>
    64eb:	e9 d4 00 00 00       	jmp    65c4 <rulemgr+0x23f>
    64f0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64f4:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    64f7:	83 f8 47             	cmp    eax,0x47
    64fa:	75 79                	jne    6575 <rulemgr+0x1f0>
    64fc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6500:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    6503:	83 f8 ff             	cmp    eax,0xffffffff
    6506:	74 28                	je     6530 <rulemgr+0x1ab>
    6508:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    650c:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    650f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6513:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    6516:	39 c2                	cmp    edx,eax
    6518:	74 16                	je     6530 <rulemgr+0x1ab>
    651a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    651e:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    6521:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6525:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    6528:	39 c2                	cmp    edx,eax
    652a:	0f 85 94 00 00 00    	jne    65c4 <rulemgr+0x23f>
    6530:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6534:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    6537:	83 f8 ff             	cmp    eax,0xffffffff
    653a:	74 24                	je     6560 <rulemgr+0x1db>
    653c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6540:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    6543:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6547:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    654a:	39 c2                	cmp    edx,eax
    654c:	74 12                	je     6560 <rulemgr+0x1db>
    654e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6552:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    6555:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6559:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    655c:	39 c2                	cmp    edx,eax
    655e:	75 64                	jne    65c4 <rulemgr+0x23f>
    6560:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6564:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6568:	48 89 d6             	mov    rsi,rdx
    656b:	48 89 c7             	mov    rdi,rax
    656e:	e8 54 fd ff ff       	call   62c7 <rule_app>
    6573:	eb 4f                	jmp    65c4 <rulemgr+0x23f>
    6575:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6579:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    657c:	83 f8 ff             	cmp    eax,0xffffffff
    657f:	74 12                	je     6593 <rulemgr+0x20e>
    6581:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6585:	8b 50 0c             	mov    edx,DWORD PTR [rax+0xc]
    6588:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    658c:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    658f:	39 c2                	cmp    edx,eax
    6591:	75 31                	jne    65c4 <rulemgr+0x23f>
    6593:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6597:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    659a:	83 f8 ff             	cmp    eax,0xffffffff
    659d:	74 12                	je     65b1 <rulemgr+0x22c>
    659f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65a3:	8b 50 08             	mov    edx,DWORD PTR [rax+0x8]
    65a6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    65aa:	8b 40 28             	mov    eax,DWORD PTR [rax+0x28]
    65ad:	39 c2                	cmp    edx,eax
    65af:	75 13                	jne    65c4 <rulemgr+0x23f>
    65b1:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    65b5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65b9:	48 89 d6             	mov    rsi,rdx
    65bc:	48 89 c7             	mov    rdi,rax
    65bf:	e8 03 fd ff ff       	call   62c7 <rule_app>
    65c4:	8b 05 4a aa 00 00    	mov    eax,DWORD PTR [rip+0xaa4a]        # 11014 <num_rules>
    65ca:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    65cd:	0f 8e ce fd ff ff    	jle    63a1 <rulemgr+0x1c>
    65d3:	90                   	nop
    65d4:	90                   	nop
    65d5:	c9                   	leave  
    65d6:	c3                   	ret    

00000000000065d7 <r_engine>:
    65d7:	f3 0f 1e fa          	endbr64 
    65db:	55                   	push   rbp
    65dc:	48 89 e5             	mov    rbp,rsp
    65df:	48 83 ec 10          	sub    rsp,0x10
    65e3:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    65e7:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    65eb:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    65ef:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    65f2:	3d 80 00 00 00       	cmp    eax,0x80
    65f7:	0f 85 d9 00 00 00    	jne    66d6 <r_engine+0xff>
    65fd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6601:	0f b6 80 6f 03 00 00 	movzx  eax,BYTE PTR [rax+0x36f]
    6608:	84 c0                	test   al,al
    660a:	74 25                	je     6631 <r_engine+0x5a>
    660c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6610:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    6614:	0f b6 50 01          	movzx  edx,BYTE PTR [rax+0x1]
    6618:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    661c:	0f b6 80 73 03 00 00 	movzx  eax,BYTE PTR [rax+0x373]
    6623:	38 c2                	cmp    dl,al
    6625:	74 0a                	je     6631 <r_engine+0x5a>
    6627:	b8 00 00 00 00       	mov    eax,0x0
    662c:	e9 9c 01 00 00       	jmp    67cd <r_engine+0x1f6>
    6631:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6635:	0f b6 80 71 03 00 00 	movzx  eax,BYTE PTR [rax+0x371]
    663c:	84 c0                	test   al,al
    663e:	74 26                	je     6666 <r_engine+0x8f>
    6640:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6644:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    6648:	0f b7 50 04          	movzx  edx,WORD PTR [rax+0x4]
    664c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6650:	0f b7 80 76 03 00 00 	movzx  eax,WORD PTR [rax+0x376]
    6657:	66 39 c2             	cmp    dx,ax
    665a:	74 0a                	je     6666 <r_engine+0x8f>
    665c:	b8 00 00 00 00       	mov    eax,0x0
    6661:	e9 67 01 00 00       	jmp    67cd <r_engine+0x1f6>
    6666:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    666a:	0f b6 80 70 03 00 00 	movzx  eax,BYTE PTR [rax+0x370]
    6671:	84 c0                	test   al,al
    6673:	74 26                	je     669b <r_engine+0xc4>
    6675:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6679:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    667d:	0f b7 50 06          	movzx  edx,WORD PTR [rax+0x6]
    6681:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6685:	0f b7 80 74 03 00 00 	movzx  eax,WORD PTR [rax+0x374]
    668c:	66 39 c2             	cmp    dx,ax
    668f:	74 0a                	je     669b <r_engine+0xc4>
    6691:	b8 00 00 00 00       	mov    eax,0x0
    6696:	e9 32 01 00 00       	jmp    67cd <r_engine+0x1f6>
    669b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    669f:	0f b6 80 6e 03 00 00 	movzx  eax,BYTE PTR [rax+0x36e]
    66a6:	84 c0                	test   al,al
    66a8:	0f 84 dc 00 00 00    	je     678a <r_engine+0x1b3>
    66ae:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    66b2:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    66b6:	0f b6 10             	movzx  edx,BYTE PTR [rax]
    66b9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66bd:	0f b6 80 72 03 00 00 	movzx  eax,BYTE PTR [rax+0x372]
    66c4:	38 c2                	cmp    dl,al
    66c6:	0f 84 be 00 00 00    	je     678a <r_engine+0x1b3>
    66cc:	b8 00 00 00 00       	mov    eax,0x0
    66d1:	e9 f7 00 00 00       	jmp    67cd <r_engine+0x1f6>
    66d6:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    66da:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    66dd:	83 f8 7e             	cmp    eax,0x7e
    66e0:	0f 85 a4 00 00 00    	jne    678a <r_engine+0x1b3>
    66e6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66ea:	0f b6 80 51 03 00 00 	movzx  eax,BYTE PTR [rax+0x351]
    66f1:	84 c0                	test   al,al
    66f3:	74 2e                	je     6723 <r_engine+0x14c>
    66f5:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    66f9:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    66fd:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    6700:	89 c7                	mov    edi,eax
    6702:	e8 39 bf ff ff       	call   2640 <ntohl@plt>
    6707:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    670b:	0f b7 92 5c 03 00 00 	movzx  edx,WORD PTR [rdx+0x35c]
    6712:	0f b7 d2             	movzx  edx,dx
    6715:	39 d0                	cmp    eax,edx
    6717:	74 0a                	je     6723 <r_engine+0x14c>
    6719:	b8 00 00 00 00       	mov    eax,0x0
    671e:	e9 aa 00 00 00       	jmp    67cd <r_engine+0x1f6>
    6723:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6727:	0f b6 80 50 03 00 00 	movzx  eax,BYTE PTR [rax+0x350]
    672e:	84 c0                	test   al,al
    6730:	74 29                	je     675b <r_engine+0x184>
    6732:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6736:	48 8d 90 53 03 00 00 	lea    rdx,[rax+0x353]
    673d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6741:	48 83 c0 60          	add    rax,0x60
    6745:	48 89 d6             	mov    rsi,rdx
    6748:	48 89 c7             	mov    rdi,rax
    674b:	e8 00 c0 ff ff       	call   2750 <strcmp@plt>
    6750:	85 c0                	test   eax,eax
    6752:	74 07                	je     675b <r_engine+0x184>
    6754:	b8 00 00 00 00       	mov    eax,0x0
    6759:	eb 72                	jmp    67cd <r_engine+0x1f6>
    675b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    675f:	0f b6 80 52 03 00 00 	movzx  eax,BYTE PTR [rax+0x352]
    6766:	84 c0                	test   al,al
    6768:	74 20                	je     678a <r_engine+0x1b3>
    676a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    676e:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    6772:	8b 50 04             	mov    edx,DWORD PTR [rax+0x4]
    6775:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6779:	8b 80 60 03 00 00    	mov    eax,DWORD PTR [rax+0x360]
    677f:	39 c2                	cmp    edx,eax
    6781:	74 07                	je     678a <r_engine+0x1b3>
    6783:	b8 00 00 00 00       	mov    eax,0x0
    6788:	eb 43                	jmp    67cd <r_engine+0x1f6>
    678a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    678e:	48 8b 40 48          	mov    rax,QWORD PTR [rax+0x48]
    6792:	48 85 c0             	test   rax,rax
    6795:	74 31                	je     67c8 <r_engine+0x1f1>
    6797:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    679b:	0f b6 80 69 03 00 00 	movzx  eax,BYTE PTR [rax+0x369]
    67a2:	84 c0                	test   al,al
    67a4:	74 22                	je     67c8 <r_engine+0x1f1>
    67a6:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    67aa:	48 8b 40 48          	mov    rax,QWORD PTR [rax+0x48]
    67ae:	0f b6 50 08          	movzx  edx,BYTE PTR [rax+0x8]
    67b2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67b6:	0f b6 80 6c 03 00 00 	movzx  eax,BYTE PTR [rax+0x36c]
    67bd:	38 c2                	cmp    dl,al
    67bf:	74 07                	je     67c8 <r_engine+0x1f1>
    67c1:	b8 00 00 00 00       	mov    eax,0x0
    67c6:	eb 05                	jmp    67cd <r_engine+0x1f6>
    67c8:	b8 01 00 00 00       	mov    eax,0x1
    67cd:	c9                   	leave  
    67ce:	c3                   	ret    

00000000000067cf <test_tcp_session_status>:
    67cf:	f3 0f 1e fa          	endbr64 
    67d3:	55                   	push   rbp
    67d4:	48 89 e5             	mov    rbp,rsp
    67d7:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    67db:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    67df:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67e3:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    67e9:	83 f8 7e             	cmp    eax,0x7e
    67ec:	75 34                	jne    6822 <test_tcp_session_status+0x53>
    67ee:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    67f2:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    67f5:	83 f8 7e             	cmp    eax,0x7e
    67f8:	75 28                	jne    6822 <test_tcp_session_status+0x53>
    67fa:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67fe:	8b 80 48 03 00 00    	mov    eax,DWORD PTR [rax+0x348]
    6804:	83 f8 01             	cmp    eax,0x1
    6807:	75 12                	jne    681b <test_tcp_session_status+0x4c>
    6809:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    680d:	8b 40 68             	mov    eax,DWORD PTR [rax+0x68]
    6810:	85 c0                	test   eax,eax
    6812:	75 07                	jne    681b <test_tcp_session_status+0x4c>
    6814:	b8 00 00 00 00       	mov    eax,0x0
    6819:	eb 0c                	jmp    6827 <test_tcp_session_status+0x58>
    681b:	b8 01 00 00 00       	mov    eax,0x1
    6820:	eb 05                	jmp    6827 <test_tcp_session_status+0x58>
    6822:	b8 01 00 00 00       	mov    eax,0x1
    6827:	5d                   	pop    rbp
    6828:	c3                   	ret    

0000000000006829 <main>:
    6829:	f3 0f 1e fa          	endbr64 
    682d:	55                   	push   rbp
    682e:	48 89 e5             	mov    rbp,rsp
    6831:	48 81 ec 40 08 00 00 	sub    rsp,0x840
    6838:	89 bd cc f7 ff ff    	mov    DWORD PTR [rbp-0x834],edi
    683e:	48 89 b5 c0 f7 ff ff 	mov    QWORD PTR [rbp-0x840],rsi
    6845:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    684c:	00 00 
    684e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    6852:	31 c0                	xor    eax,eax
    6854:	b8 00 00 00 00       	mov    eax,0x0
    6859:	e8 f6 4a 00 00       	call   b354 <load_fn_mem_map>
    685e:	48 8d 35 d3 02 00 00 	lea    rsi,[rip+0x2d3]        # 6b38 <sigint_processor>
    6865:	bf 02 00 00 00       	mov    edi,0x2
    686a:	e8 71 be ff ff       	call   26e0 <signal@plt>
    686f:	48 8d 05 08 47 00 00 	lea    rax,[rip+0x4708]        # af7e <crash_handler>
    6876:	48 89 c6             	mov    rsi,rax
    6879:	bf 0b 00 00 00       	mov    edi,0xb
    687e:	e8 5d be ff ff       	call   26e0 <signal@plt>
    6883:	b8 00 00 00 00       	mov    eax,0x0
    6888:	e8 d8 08 00 00       	call   7165 <print_logo>
    688d:	b8 00 00 00 00       	mov    eax,0x0
    6892:	e8 1c 07 00 00       	call   6fb3 <print_cpu_info>
    6897:	c7 05 07 aa 00 00 01 	mov    DWORD PTR [rip+0xaa07],0x1        # 112a8 <is_running>
    689e:	00 00 00 
    68a1:	bf 00 00 00 00       	mov    edi,0x0
    68a6:	e8 c5 bf ff ff       	call   2870 <time@plt>
    68ab:	48 89 05 fe a9 00 00 	mov    QWORD PTR [rip+0xa9fe],rax        # 112b0 <last_clean_time>
    68b2:	83 bd cc f7 ff ff 01 	cmp    DWORD PTR [rbp-0x834],0x1
    68b9:	0f 85 e3 00 00 00    	jne    69a2 <main+0x179>
    68bf:	b8 00 00 00 00       	mov    eax,0x0
    68c4:	e8 c0 06 00 00       	call   6f89 <print_help_and_exit>
    68c9:	e9 d4 00 00 00       	jmp    69a2 <main+0x179>
    68ce:	8b 85 dc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x824]
    68d4:	83 e8 64             	sub    eax,0x64
    68d7:	83 f8 10             	cmp    eax,0x10
    68da:	0f 87 9e 00 00 00    	ja     697e <main+0x155>
    68e0:	89 c0                	mov    eax,eax
    68e2:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    68e9:	00 
    68ea:	48 8d 05 0b 67 00 00 	lea    rax,[rip+0x670b]        # cffc <_IO_stdin_used+0xffc>
    68f1:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    68f4:	48 98                	cdqe   
    68f6:	48 8d 15 ff 66 00 00 	lea    rdx,[rip+0x66ff]        # cffc <_IO_stdin_used+0xffc>
    68fd:	48 01 d0             	add    rax,rdx
    6900:	3e ff e0             	notrack jmp rax
    6903:	c6 05 16 36 10 00 01 	mov    BYTE PTR [rip+0x103616],0x1        # 109f20 <debug_mode>
    690a:	e9 93 00 00 00       	jmp    69a2 <main+0x179>
    690f:	b8 00 00 00 00       	mov    eax,0x0
    6914:	e8 70 06 00 00       	call   6f89 <print_help_and_exit>
    6919:	e9 84 00 00 00       	jmp    69a2 <main+0x179>
    691e:	48 8b 05 3b a7 00 00 	mov    rax,QWORD PTR [rip+0xa73b]        # 11060 <optarg@@GLIBC_2.2.5>
    6925:	48 89 85 e0 f7 ff ff 	mov    QWORD PTR [rbp-0x820],rax
    692c:	eb 74                	jmp    69a2 <main+0x179>
    692e:	c6 05 2f 36 10 00 01 	mov    BYTE PTR [rip+0x10362f],0x1        # 109f64 <packet_print>
    6935:	eb 6b                	jmp    69a2 <main+0x179>
    6937:	c6 05 27 36 10 00 01 	mov    BYTE PTR [rip+0x103627],0x1        # 109f65 <quiet_exit>
    693e:	eb 62                	jmp    69a2 <main+0x179>
    6940:	48 8d 3d d9 64 00 00 	lea    rdi,[rip+0x64d9]        # ce20 <_IO_stdin_used+0xe20>
    6947:	e8 94 bb ff ff       	call   24e0 <puts@plt>
    694c:	bf 0a 00 00 00       	mov    edi,0xa
    6951:	e8 fa bc ff ff       	call   2650 <sleep@plt>
    6956:	c6 05 23 a7 00 00 01 	mov    BYTE PTR [rip+0xa723],0x1        # 11080 <demo_mode>
    695d:	eb 43                	jmp    69a2 <main+0x179>
    695f:	48 8d 3d fa 64 00 00 	lea    rdi,[rip+0x64fa]        # ce60 <_IO_stdin_used+0xe60>
    6966:	e8 75 bb ff ff       	call   24e0 <puts@plt>
    696b:	bf 0a 00 00 00       	mov    edi,0xa
    6970:	e8 db bc ff ff       	call   2650 <sleep@plt>
    6975:	c6 05 50 36 10 00 01 	mov    BYTE PTR [rip+0x103650],0x1        # 109fcc <in_test_mode>
    697c:	eb 24                	jmp    69a2 <main+0x179>
    697e:	8b 85 dc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x824]
    6984:	89 c6                	mov    esi,eax
    6986:	48 8d 3d 07 65 00 00 	lea    rdi,[rip+0x6507]        # ce94 <_IO_stdin_used+0xe94>
    698d:	b8 00 00 00 00       	mov    eax,0x0
    6992:	e8 e9 ba ff ff       	call   2480 <printf@plt>
    6997:	b8 00 00 00 00       	mov    eax,0x0
    699c:	e8 e8 05 00 00       	call   6f89 <print_help_and_exit>
    69a1:	90                   	nop
    69a2:	48 8b 8d c0 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x840]
    69a9:	8b 85 cc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x834]
    69af:	48 8d 15 f4 64 00 00 	lea    rdx,[rip+0x64f4]        # ceaa <_IO_stdin_used+0xeaa>
    69b6:	48 89 ce             	mov    rsi,rcx
    69b9:	89 c7                	mov    edi,eax
    69bb:	e8 70 bb ff ff       	call   2530 <getopt@plt>
    69c0:	89 85 dc f7 ff ff    	mov    DWORD PTR [rbp-0x824],eax
    69c6:	83 bd dc f7 ff ff ff 	cmp    DWORD PTR [rbp-0x824],0xffffffff
    69cd:	0f 85 fb fe ff ff    	jne    68ce <main+0xa5>
    69d3:	48 8d 3d d9 64 00 00 	lea    rdi,[rip+0x64d9]        # ceb3 <_IO_stdin_used+0xeb3>
    69da:	e8 27 f7 ff ff       	call   6106 <deny_conf_parser>
    69df:	48 8d 3d e2 64 00 00 	lea    rdi,[rip+0x64e2]        # cec8 <_IO_stdin_used+0xec8>
    69e6:	e8 f5 ba ff ff       	call   24e0 <puts@plt>
    69eb:	b8 00 00 00 00       	mov    eax,0x0
    69f0:	e8 49 13 00 00       	call   7d3e <load_csv_arp_cache>
    69f5:	83 f8 ff             	cmp    eax,0xffffffff
    69f8:	74 0e                	je     6a08 <main+0x1df>
    69fa:	48 8d 3d 07 65 00 00 	lea    rdi,[rip+0x6507]        # cf08 <_IO_stdin_used+0xf08>
    6a01:	e8 da ba ff ff       	call   24e0 <puts@plt>
    6a06:	eb 0c                	jmp    6a14 <main+0x1eb>
    6a08:	48 8d 3d 19 65 00 00 	lea    rdi,[rip+0x6519]        # cf28 <_IO_stdin_used+0xf28>
    6a0f:	e8 cc ba ff ff       	call   24e0 <puts@plt>
    6a14:	48 8d 3d 3e 65 00 00 	lea    rdi,[rip+0x653e]        # cf59 <_IO_stdin_used+0xf59>
    6a1b:	e8 ba ee ff ff       	call   58da <rule_library_parser>
    6a20:	48 8d 3d 48 65 00 00 	lea    rdi,[rip+0x6548]        # cf6f <_IO_stdin_used+0xf6f>
    6a27:	e8 b4 ba ff ff       	call   24e0 <puts@plt>
    6a2c:	b8 00 00 00 00       	mov    eax,0x0
    6a31:	e8 de 3a 00 00       	call   a514 <rule_processor>
    6a36:	48 8b 85 e0 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x820]
    6a3d:	48 89 c6             	mov    rsi,rax
    6a40:	48 8d 3d 41 65 00 00 	lea    rdi,[rip+0x6541]        # cf88 <_IO_stdin_used+0xf88>
    6a47:	b8 00 00 00 00       	mov    eax,0x0
    6a4c:	e8 2f ba ff ff       	call   2480 <printf@plt>
    6a51:	48 c7 85 f0 f7 ff ff 	mov    QWORD PTR [rbp-0x810],0x0
    6a58:	00 00 00 00 
    6a5c:	48 c7 85 f8 f7 ff ff 	mov    QWORD PTR [rbp-0x808],0x0
    6a63:	00 00 00 00 
    6a67:	48 8d 95 00 f8 ff ff 	lea    rdx,[rbp-0x800]
    6a6e:	b8 00 00 00 00       	mov    eax,0x0
    6a73:	b9 fd 00 00 00       	mov    ecx,0xfd
    6a78:	48 89 d7             	mov    rdi,rdx
    6a7b:	f3 48 ab             	rep stos QWORD PTR es:[rdi],rax
    6a7e:	48 89 fa             	mov    rdx,rdi
    6a81:	89 02                	mov    DWORD PTR [rdx],eax
    6a83:	48 83 c2 04          	add    rdx,0x4
    6a87:	66 89 02             	mov    WORD PTR [rdx],ax
    6a8a:	48 83 c2 02          	add    rdx,0x2
    6a8e:	48 8d 95 f0 f7 ff ff 	lea    rdx,[rbp-0x810]
    6a95:	48 8b 85 e0 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x820]
    6a9c:	49 89 d0             	mov    r8,rdx
    6a9f:	b9 64 00 00 00       	mov    ecx,0x64
    6aa4:	ba 01 00 00 00       	mov    edx,0x1
    6aa9:	be 00 04 00 00       	mov    esi,0x400
    6aae:	48 89 c7             	mov    rdi,rax
    6ab1:	e8 da ba ff ff       	call   2590 <pcap_open_live@plt>
    6ab6:	48 89 85 e8 f7 ff ff 	mov    QWORD PTR [rbp-0x818],rax
    6abd:	48 83 bd e8 f7 ff ff 	cmp    QWORD PTR [rbp-0x818],0x0
    6ac4:	00 
    6ac5:	75 16                	jne    6add <main+0x2b4>
    6ac7:	48 8d 3d db 64 00 00 	lea    rdi,[rip+0x64db]        # cfa9 <_IO_stdin_used+0xfa9>
    6ace:	e8 3d bd ff ff       	call   2810 <perror@plt>
    6ad3:	bf 01 00 00 00       	mov    edi,0x1
    6ad8:	e8 23 ba ff ff       	call   2500 <exit@plt>
    6add:	b8 00 00 00 00       	mov    eax,0x0
    6ae2:	e8 61 42 00 00       	call   ad48 <collect_scripts>
    6ae7:	b8 00 00 00 00       	mov    eax,0x0
    6aec:	e8 8b 06 00 00       	call   717c <start_nsh_server>
    6af1:	48 8d 3d d0 64 00 00 	lea    rdi,[rip+0x64d0]        # cfc8 <_IO_stdin_used+0xfc8>
    6af8:	e8 e3 b9 ff ff       	call   24e0 <puts@plt>
    6afd:	48 8b 85 e8 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x818]
    6b04:	b9 00 00 00 00       	mov    ecx,0x0
    6b09:	48 8d 15 93 be ff ff 	lea    rdx,[rip+0xffffffffffffbe93]        # 29a3 <pktmgr>
    6b10:	be ff ff ff ff       	mov    esi,0xffffffff
    6b15:	48 89 c7             	mov    rdi,rax
    6b18:	e8 d3 bc ff ff       	call   27f0 <pcap_loop@plt>
    6b1d:	b8 00 00 00 00       	mov    eax,0x0
    6b22:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    6b26:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    6b2d:	00 00 
    6b2f:	74 05                	je     6b36 <main+0x30d>
    6b31:	e8 0a bc ff ff       	call   2740 <__stack_chk_fail@plt>
    6b36:	c9                   	leave  
    6b37:	c3                   	ret    

0000000000006b38 <sigint_processor>:
    6b38:	f3 0f 1e fa          	endbr64 
    6b3c:	55                   	push   rbp
    6b3d:	48 89 e5             	mov    rbp,rsp
    6b40:	41 54                	push   r12
    6b42:	53                   	push   rbx
    6b43:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    6b4a:	89 bd bc fe ff ff    	mov    DWORD PTR [rbp-0x144],edi
    6b50:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6b57:	00 00 
    6b59:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    6b5d:	31 c0                	xor    eax,eax
    6b5f:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    6b66:	00 00 00 
    6b69:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    6b70:	48 89 c7             	mov    rdi,rax
    6b73:	e8 9b c8 ff ff       	call   3413 <cb_get_formatted_time>
    6b78:	48 8d 95 e0 fe ff ff 	lea    rdx,[rbp-0x120]
    6b7f:	8b 85 bc fe ff ff    	mov    eax,DWORD PTR [rbp-0x144]
    6b85:	89 c6                	mov    esi,eax
    6b87:	48 8d 3d b2 64 00 00 	lea    rdi,[rip+0x64b2]        # d040 <_IO_stdin_used+0x1040>
    6b8e:	b8 00 00 00 00       	mov    eax,0x0
    6b93:	e8 e8 b8 ff ff       	call   2480 <printf@plt>
    6b98:	48 8d 3d c6 64 00 00 	lea    rdi,[rip+0x64c6]        # d065 <_IO_stdin_used+0x1065>
    6b9f:	e8 6c bc ff ff       	call   2810 <perror@plt>
    6ba4:	0f b6 05 ba 33 10 00 	movzx  eax,BYTE PTR [rip+0x1033ba]        # 109f65 <quiet_exit>
    6bab:	83 f0 01             	xor    eax,0x1
    6bae:	84 c0                	test   al,al
    6bb0:	0f 84 2e 02 00 00    	je     6de4 <sigint_processor+0x2ac>
    6bb6:	8b 05 e8 a6 00 00    	mov    eax,DWORD PTR [rip+0xa6e8]        # 112a4 <total_pkt_captured>
    6bbc:	89 c6                	mov    esi,eax
    6bbe:	48 8d 3d a1 64 00 00 	lea    rdi,[rip+0x64a1]        # d066 <_IO_stdin_used+0x1066>
    6bc5:	b8 00 00 00 00       	mov    eax,0x0
    6bca:	e8 b1 b8 ff ff       	call   2480 <printf@plt>
    6bcf:	48 8d 3d aa 64 00 00 	lea    rdi,[rip+0x64aa]        # d080 <_IO_stdin_used+0x1080>
    6bd6:	e8 05 b9 ff ff       	call   24e0 <puts@plt>
    6bdb:	c7 85 c4 fe ff ff 00 	mov    DWORD PTR [rbp-0x13c],0x0
    6be2:	00 00 00 
    6be5:	e9 e8 01 00 00       	jmp    6dd2 <sigint_processor+0x29a>
    6bea:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6bf0:	48 63 d0             	movsxd rdx,eax
    6bf3:	48 89 d0             	mov    rax,rdx
    6bf6:	48 c1 e0 02          	shl    rax,0x2
    6bfa:	48 01 d0             	add    rax,rdx
    6bfd:	48 c1 e0 03          	shl    rax,0x3
    6c01:	48 01 d0             	add    rax,rdx
    6c04:	48 c1 e0 04          	shl    rax,0x4
    6c08:	48 89 c2             	mov    rdx,rax
    6c0b:	48 8d 05 7e cb 0e 00 	lea    rax,[rip+0xecb7e]        # f3790 <watchlist+0x270>
    6c12:	44 8b 1c 02          	mov    r11d,DWORD PTR [rdx+rax*1]
    6c16:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6c1c:	48 63 d0             	movsxd rdx,eax
    6c1f:	48 89 d0             	mov    rax,rdx
    6c22:	48 c1 e0 02          	shl    rax,0x2
    6c26:	48 01 d0             	add    rax,rdx
    6c29:	48 c1 e0 03          	shl    rax,0x3
    6c2d:	48 01 d0             	add    rax,rdx
    6c30:	48 c1 e0 04          	shl    rax,0x4
    6c34:	48 89 c2             	mov    rdx,rax
    6c37:	48 8d 05 46 cb 0e 00 	lea    rax,[rip+0xecb46]        # f3784 <watchlist+0x264>
    6c3e:	44 8b 14 02          	mov    r10d,DWORD PTR [rdx+rax*1]
    6c42:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6c48:	48 63 d0             	movsxd rdx,eax
    6c4b:	48 89 d0             	mov    rax,rdx
    6c4e:	48 c1 e0 02          	shl    rax,0x2
    6c52:	48 01 d0             	add    rax,rdx
    6c55:	48 c1 e0 03          	shl    rax,0x3
    6c59:	48 01 d0             	add    rax,rdx
    6c5c:	48 c1 e0 04          	shl    rax,0x4
    6c60:	48 89 c2             	mov    rdx,rax
    6c63:	48 8d 05 22 cb 0e 00 	lea    rax,[rip+0xecb22]        # f378c <watchlist+0x26c>
    6c6a:	44 8b 0c 02          	mov    r9d,DWORD PTR [rdx+rax*1]
    6c6e:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6c74:	48 63 d0             	movsxd rdx,eax
    6c77:	48 89 d0             	mov    rax,rdx
    6c7a:	48 c1 e0 02          	shl    rax,0x2
    6c7e:	48 01 d0             	add    rax,rdx
    6c81:	48 c1 e0 03          	shl    rax,0x3
    6c85:	48 01 d0             	add    rax,rdx
    6c88:	48 c1 e0 04          	shl    rax,0x4
    6c8c:	48 89 c2             	mov    rdx,rax
    6c8f:	48 8d 05 ea ca 0e 00 	lea    rax,[rip+0xecaea]        # f3780 <watchlist+0x260>
    6c96:	44 8b 04 02          	mov    r8d,DWORD PTR [rdx+rax*1]
    6c9a:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6ca0:	48 63 d0             	movsxd rdx,eax
    6ca3:	48 89 d0             	mov    rax,rdx
    6ca6:	48 c1 e0 02          	shl    rax,0x2
    6caa:	48 01 d0             	add    rax,rdx
    6cad:	48 c1 e0 03          	shl    rax,0x3
    6cb1:	48 01 d0             	add    rax,rdx
    6cb4:	48 c1 e0 04          	shl    rax,0x4
    6cb8:	48 89 c2             	mov    rdx,rax
    6cbb:	48 8d 05 c6 ca 0e 00 	lea    rax,[rip+0xecac6]        # f3788 <watchlist+0x268>
    6cc2:	8b 3c 02             	mov    edi,DWORD PTR [rdx+rax*1]
    6cc5:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6ccb:	48 63 d0             	movsxd rdx,eax
    6cce:	48 89 d0             	mov    rax,rdx
    6cd1:	48 c1 e0 02          	shl    rax,0x2
    6cd5:	48 01 d0             	add    rax,rdx
    6cd8:	48 c1 e0 03          	shl    rax,0x3
    6cdc:	48 01 d0             	add    rax,rdx
    6cdf:	48 c1 e0 04          	shl    rax,0x4
    6ce3:	48 89 c2             	mov    rdx,rax
    6ce6:	48 8d 05 8f ca 0e 00 	lea    rax,[rip+0xeca8f]        # f377c <watchlist+0x25c>
    6ced:	44 8b 24 02          	mov    r12d,DWORD PTR [rdx+rax*1]
    6cf1:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6cf7:	48 63 d0             	movsxd rdx,eax
    6cfa:	48 89 d0             	mov    rax,rdx
    6cfd:	48 c1 e0 02          	shl    rax,0x2
    6d01:	48 01 d0             	add    rax,rdx
    6d04:	48 c1 e0 03          	shl    rax,0x3
    6d08:	48 01 d0             	add    rax,rdx
    6d0b:	48 c1 e0 04          	shl    rax,0x4
    6d0f:	48 89 c2             	mov    rdx,rax
    6d12:	48 8d 05 83 ca 0e 00 	lea    rax,[rip+0xeca83]        # f379c <watchlist+0x27c>
    6d19:	8b 1c 02             	mov    ebx,DWORD PTR [rdx+rax*1]
    6d1c:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6d22:	48 63 d0             	movsxd rdx,eax
    6d25:	48 89 d0             	mov    rax,rdx
    6d28:	48 c1 e0 02          	shl    rax,0x2
    6d2c:	48 01 d0             	add    rax,rdx
    6d2f:	48 c1 e0 03          	shl    rax,0x3
    6d33:	48 01 d0             	add    rax,rdx
    6d36:	48 c1 e0 04          	shl    rax,0x4
    6d3a:	48 89 c2             	mov    rdx,rax
    6d3d:	48 8d 05 5c ca 0e 00 	lea    rax,[rip+0xeca5c]        # f37a0 <watchlist+0x280>
    6d44:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
    6d47:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6d4d:	48 63 d0             	movsxd rdx,eax
    6d50:	48 89 d0             	mov    rax,rdx
    6d53:	48 c1 e0 02          	shl    rax,0x2
    6d57:	48 01 d0             	add    rax,rdx
    6d5a:	48 c1 e0 03          	shl    rax,0x3
    6d5e:	48 01 d0             	add    rax,rdx
    6d61:	48 c1 e0 04          	shl    rax,0x4
    6d65:	48 89 c2             	mov    rdx,rax
    6d68:	48 8d 05 09 ca 0e 00 	lea    rax,[rip+0xeca09]        # f3778 <watchlist+0x258>
    6d6f:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
    6d72:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6d78:	48 63 d0             	movsxd rdx,eax
    6d7b:	48 89 d0             	mov    rax,rdx
    6d7e:	48 c1 e0 02          	shl    rax,0x2
    6d82:	48 01 d0             	add    rax,rdx
    6d85:	48 c1 e0 03          	shl    rax,0x3
    6d89:	48 01 d0             	add    rax,rdx
    6d8c:	48 c1 e0 04          	shl    rax,0x4
    6d90:	48 8d 15 89 c7 0e 00 	lea    rdx,[rip+0xec789]        # f3520 <watchlist>
    6d97:	48 01 d0             	add    rax,rdx
    6d9a:	48 83 c0 08          	add    rax,0x8
    6d9e:	48 83 ec 08          	sub    rsp,0x8
    6da2:	41 53                	push   r11
    6da4:	41 52                	push   r10
    6da6:	41 51                	push   r9
    6da8:	41 50                	push   r8
    6daa:	57                   	push   rdi
    6dab:	45 89 e1             	mov    r9d,r12d
    6dae:	41 89 d8             	mov    r8d,ebx
    6db1:	89 f2                	mov    edx,esi
    6db3:	48 89 c6             	mov    rsi,rax
    6db6:	48 8d 3d fb 62 00 00 	lea    rdi,[rip+0x62fb]        # d0b8 <_IO_stdin_used+0x10b8>
    6dbd:	b8 00 00 00 00       	mov    eax,0x0
    6dc2:	e8 b9 b6 ff ff       	call   2480 <printf@plt>
    6dc7:	48 83 c4 30          	add    rsp,0x30
    6dcb:	83 85 c4 fe ff ff 01 	add    DWORD PTR [rbp-0x13c],0x1
    6dd2:	8b 05 40 a2 00 00    	mov    eax,DWORD PTR [rip+0xa240]        # 11018 <watchlist_num>
    6dd8:	39 85 c4 fe ff ff    	cmp    DWORD PTR [rbp-0x13c],eax
    6dde:	0f 8e 06 fe ff ff    	jle    6bea <sigint_processor+0xb2>
    6de4:	48 8d 35 6d 63 00 00 	lea    rsi,[rip+0x636d]        # d158 <_IO_stdin_used+0x1158>
    6deb:	48 8d 3d 68 63 00 00 	lea    rdi,[rip+0x6368]        # d15a <_IO_stdin_used+0x115a>
    6df2:	e8 79 b7 ff ff       	call   2570 <fopen@plt>
    6df7:	48 89 85 d8 fe ff ff 	mov    QWORD PTR [rbp-0x128],rax
    6dfe:	48 83 bd d8 fe ff ff 	cmp    QWORD PTR [rbp-0x128],0x0
    6e05:	00 
    6e06:	0f 85 99 00 00 00    	jne    6ea5 <sigint_processor+0x36d>
    6e0c:	48 8d 3d 65 63 00 00 	lea    rdi,[rip+0x6365]        # d178 <_IO_stdin_used+0x1178>
    6e13:	e8 c8 b6 ff ff       	call   24e0 <puts@plt>
    6e18:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    6e1f:	48 89 c7             	mov    rdi,rax
    6e22:	e8 89 b9 ff ff       	call   27b0 <fclose@plt>
    6e27:	c7 85 c8 fe ff ff 00 	mov    DWORD PTR [rbp-0x138],0x0
    6e2e:	00 00 00 
    6e31:	eb 5f                	jmp    6e92 <sigint_processor+0x35a>
    6e33:	8b 85 c8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x138]
    6e39:	48 63 d0             	movsxd rdx,eax
    6e3c:	48 89 d0             	mov    rax,rdx
    6e3f:	48 c1 e0 04          	shl    rax,0x4
    6e43:	48 01 d0             	add    rax,rdx
    6e46:	48 01 c0             	add    rax,rax
    6e49:	48 8d 50 10          	lea    rdx,[rax+0x10]
    6e4d:	48 8d 05 cc 0e 10 00 	lea    rax,[rip+0x100ecc]        # 107d20 <arpcache>
    6e54:	48 01 c2             	add    rdx,rax
    6e57:	8b 85 c8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x138]
    6e5d:	48 63 c8             	movsxd rcx,eax
    6e60:	48 89 c8             	mov    rax,rcx
    6e63:	48 c1 e0 04          	shl    rax,0x4
    6e67:	48 01 c8             	add    rax,rcx
    6e6a:	48 01 c0             	add    rax,rax
    6e6d:	48 8d 0d ac 0e 10 00 	lea    rcx,[rip+0x100eac]        # 107d20 <arpcache>
    6e74:	48 01 c8             	add    rax,rcx
    6e77:	48 89 c6             	mov    rsi,rax
    6e7a:	48 8d 3d 3e 63 00 00 	lea    rdi,[rip+0x633e]        # d1bf <_IO_stdin_used+0x11bf>
    6e81:	b8 00 00 00 00       	mov    eax,0x0
    6e86:	e8 f5 b5 ff ff       	call   2480 <printf@plt>
    6e8b:	83 85 c8 fe ff ff 01 	add    DWORD PTR [rbp-0x138],0x1
    6e92:	8b 05 84 a1 00 00    	mov    eax,DWORD PTR [rip+0xa184]        # 1101c <arp_entries>
    6e98:	39 85 c8 fe ff ff    	cmp    DWORD PTR [rbp-0x138],eax
    6e9e:	7e 93                	jle    6e33 <sigint_processor+0x2fb>
    6ea0:	e9 da 00 00 00       	jmp    6f7f <sigint_processor+0x447>
    6ea5:	c7 85 cc fe ff ff 00 	mov    DWORD PTR [rbp-0x134],0x0
    6eac:	00 00 00 
    6eaf:	eb 67                	jmp    6f18 <sigint_processor+0x3e0>
    6eb1:	8b 85 cc fe ff ff    	mov    eax,DWORD PTR [rbp-0x134]
    6eb7:	48 63 d0             	movsxd rdx,eax
    6eba:	48 89 d0             	mov    rax,rdx
    6ebd:	48 c1 e0 04          	shl    rax,0x4
    6ec1:	48 01 d0             	add    rax,rdx
    6ec4:	48 01 c0             	add    rax,rax
    6ec7:	48 8d 50 10          	lea    rdx,[rax+0x10]
    6ecb:	48 8d 05 4e 0e 10 00 	lea    rax,[rip+0x100e4e]        # 107d20 <arpcache>
    6ed2:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    6ed6:	8b 85 cc fe ff ff    	mov    eax,DWORD PTR [rbp-0x134]
    6edc:	48 63 d0             	movsxd rdx,eax
    6edf:	48 89 d0             	mov    rax,rdx
    6ee2:	48 c1 e0 04          	shl    rax,0x4
    6ee6:	48 01 d0             	add    rax,rdx
    6ee9:	48 01 c0             	add    rax,rax
    6eec:	48 8d 15 2d 0e 10 00 	lea    rdx,[rip+0x100e2d]        # 107d20 <arpcache>
    6ef3:	48 01 c2             	add    rdx,rax
    6ef6:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    6efd:	48 8d 35 c5 62 00 00 	lea    rsi,[rip+0x62c5]        # d1c9 <_IO_stdin_used+0x11c9>
    6f04:	48 89 c7             	mov    rdi,rax
    6f07:	b8 00 00 00 00       	mov    eax,0x0
    6f0c:	e8 0f b9 ff ff       	call   2820 <fprintf@plt>
    6f11:	83 85 cc fe ff ff 01 	add    DWORD PTR [rbp-0x134],0x1
    6f18:	8b 05 fe a0 00 00    	mov    eax,DWORD PTR [rip+0xa0fe]        # 1101c <arp_entries>
    6f1e:	39 85 cc fe ff ff    	cmp    DWORD PTR [rbp-0x134],eax
    6f24:	7e 8b                	jle    6eb1 <sigint_processor+0x379>
    6f26:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    6f2d:	48 89 c7             	mov    rdi,rax
    6f30:	e8 7b b8 ff ff       	call   27b0 <fclose@plt>
    6f35:	c7 85 d0 fe ff ff 00 	mov    DWORD PTR [rbp-0x130],0x0
    6f3c:	00 00 00 
    6f3f:	eb 2f                	jmp    6f70 <sigint_processor+0x438>
    6f41:	8b 85 d0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x130]
    6f47:	48 98                	cdqe   
    6f49:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    6f50:	00 
    6f51:	48 8d 05 48 a1 00 00 	lea    rax,[rip+0xa148]        # 110a0 <threads>
    6f58:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    6f5c:	be 00 00 00 00       	mov    esi,0x0
    6f61:	48 89 c7             	mov    rdi,rax
    6f64:	e8 07 b5 ff ff       	call   2470 <pthread_join@plt>
    6f69:	83 85 d0 fe ff ff 01 	add    DWORD PTR [rbp-0x130],0x1
    6f70:	8b 05 2a a3 00 00    	mov    eax,DWORD PTR [rip+0xa32a]        # 112a0 <thread_count>
    6f76:	39 85 d0 fe ff ff    	cmp    DWORD PTR [rbp-0x130],eax
    6f7c:	7c c3                	jl     6f41 <sigint_processor+0x409>
    6f7e:	90                   	nop
    6f7f:	bf 00 00 00 00       	mov    edi,0x0
    6f84:	e8 77 b5 ff ff       	call   2500 <exit@plt>

0000000000006f89 <print_help_and_exit>:
    6f89:	f3 0f 1e fa          	endbr64 
    6f8d:	55                   	push   rbp
    6f8e:	48 89 e5             	mov    rbp,rsp
    6f91:	48 8d 35 38 62 00 00 	lea    rsi,[rip+0x6238]        # d1d0 <_IO_stdin_used+0x11d0>
    6f98:	48 8d 3d 39 62 00 00 	lea    rdi,[rip+0x6239]        # d1d8 <_IO_stdin_used+0x11d8>
    6f9f:	b8 00 00 00 00       	mov    eax,0x0
    6fa4:	e8 d7 b4 ff ff       	call   2480 <printf@plt>
    6fa9:	bf 00 00 00 00       	mov    edi,0x0
    6fae:	e8 4d b5 ff ff       	call   2500 <exit@plt>

0000000000006fb3 <print_cpu_info>:
    6fb3:	f3 0f 1e fa          	endbr64 
    6fb7:	55                   	push   rbp
    6fb8:	48 89 e5             	mov    rbp,rsp
    6fbb:	53                   	push   rbx
    6fbc:	48 81 ec 48 02 00 00 	sub    rsp,0x248
    6fc3:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6fca:	00 00 
    6fcc:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    6fd0:	31 c0                	xor    eax,eax
    6fd2:	48 8d 35 86 62 00 00 	lea    rsi,[rip+0x6286]        # d25f <_IO_stdin_used+0x125f>
    6fd9:	48 8d 3d 82 62 00 00 	lea    rdi,[rip+0x6282]        # d262 <_IO_stdin_used+0x1262>
    6fe0:	e8 8b b5 ff ff       	call   2570 <fopen@plt>
    6fe5:	48 89 85 d8 fd ff ff 	mov    QWORD PTR [rbp-0x228],rax
    6fec:	48 c7 85 c8 fd ff ff 	mov    QWORD PTR [rbp-0x238],0x0
    6ff3:	00 00 00 00 
    6ff7:	48 c7 85 d0 fd ff ff 	mov    QWORD PTR [rbp-0x230],0x0
    6ffe:	00 00 00 00 
    7002:	c7 85 bc fd ff ff 00 	mov    DWORD PTR [rbp-0x244],0x0
    7009:	00 00 00 
    700c:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    7013:	ba 00 02 00 00       	mov    edx,0x200
    7018:	be 00 00 00 00       	mov    esi,0x0
    701d:	48 89 c7             	mov    rdi,rax
    7020:	e8 6b b4 ff ff       	call   2490 <memset@plt>
    7025:	e9 b3 00 00 00       	jmp    70dd <print_cpu_info+0x12a>
    702a:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    7031:	ba 0a 00 00 00       	mov    edx,0xa
    7036:	48 89 c6             	mov    rsi,rax
    7039:	48 8d 3d 30 62 00 00 	lea    rdi,[rip+0x6230]        # d270 <_IO_stdin_used+0x1270>
    7040:	e8 0b b5 ff ff       	call   2550 <strncmp@plt>
    7045:	85 c0                	test   eax,eax
    7047:	0f 85 90 00 00 00    	jne    70dd <print_cpu_info+0x12a>
    704d:	c7 85 c0 fd ff ff 00 	mov    DWORD PTR [rbp-0x240],0x0
    7054:	00 00 00 
    7057:	c7 85 c4 fd ff ff 00 	mov    DWORD PTR [rbp-0x23c],0x0
    705e:	00 00 00 
    7061:	eb 2e                	jmp    7091 <print_cpu_info+0xde>
    7063:	48 8b 95 c8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x238]
    706a:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    7070:	48 98                	cdqe   
    7072:	48 01 d0             	add    rax,rdx
    7075:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    7078:	3c 3a                	cmp    al,0x3a
    707a:	75 0e                	jne    708a <print_cpu_info+0xd7>
    707c:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    7082:	89 85 c0 fd ff ff    	mov    DWORD PTR [rbp-0x240],eax
    7088:	eb 24                	jmp    70ae <print_cpu_info+0xfb>
    708a:	83 85 c4 fd ff ff 01 	add    DWORD PTR [rbp-0x23c],0x1
    7091:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    7097:	48 63 d8             	movsxd rbx,eax
    709a:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    70a1:	48 89 c7             	mov    rdi,rax
    70a4:	e8 57 b5 ff ff       	call   2600 <strlen@plt>
    70a9:	48 39 c3             	cmp    rbx,rax
    70ac:	72 b5                	jb     7063 <print_cpu_info+0xb0>
    70ae:	83 85 bc fd ff ff 01 	add    DWORD PTR [rbp-0x244],0x1
    70b5:	48 8b 95 c8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x238]
    70bc:	8b 85 c0 fd ff ff    	mov    eax,DWORD PTR [rbp-0x240]
    70c2:	48 98                	cdqe   
    70c4:	48 83 c0 02          	add    rax,0x2
    70c8:	48 01 c2             	add    rdx,rax
    70cb:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    70d2:	48 89 d6             	mov    rsi,rdx
    70d5:	48 89 c7             	mov    rdi,rax
    70d8:	e8 a3 b5 ff ff       	call   2680 <strcat@plt>
    70dd:	48 8b 95 d8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x228]
    70e4:	48 8d b5 d0 fd ff ff 	lea    rsi,[rbp-0x230]
    70eb:	48 8d 85 c8 fd ff ff 	lea    rax,[rbp-0x238]
    70f2:	48 89 d1             	mov    rcx,rdx
    70f5:	ba 0a 00 00 00       	mov    edx,0xa
    70fa:	48 89 c7             	mov    rdi,rax
    70fd:	e8 3e b7 ff ff       	call   2840 <getdelim@plt>
    7102:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
    7106:	0f 85 1e ff ff ff    	jne    702a <print_cpu_info+0x77>
    710c:	48 8d 95 e0 fd ff ff 	lea    rdx,[rbp-0x220]
    7113:	8b 85 bc fd ff ff    	mov    eax,DWORD PTR [rbp-0x244]
    7119:	89 c6                	mov    esi,eax
    711b:	48 8d 3d 59 61 00 00 	lea    rdi,[rip+0x6159]        # d27b <_IO_stdin_used+0x127b>
    7122:	b8 00 00 00 00       	mov    eax,0x0
    7127:	e8 54 b3 ff ff       	call   2480 <printf@plt>
    712c:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    7133:	48 89 c7             	mov    rdi,rax
    7136:	e8 b5 b4 ff ff       	call   25f0 <free@plt>
    713b:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    7142:	48 89 c7             	mov    rdi,rax
    7145:	e8 66 b6 ff ff       	call   27b0 <fclose@plt>
    714a:	90                   	nop
    714b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    714f:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    7156:	00 00 
    7158:	74 05                	je     715f <print_cpu_info+0x1ac>
    715a:	e8 e1 b5 ff ff       	call   2740 <__stack_chk_fail@plt>
    715f:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    7163:	c9                   	leave  
    7164:	c3                   	ret    

0000000000007165 <print_logo>:
    7165:	f3 0f 1e fa          	endbr64 
    7169:	55                   	push   rbp
    716a:	48 89 e5             	mov    rbp,rsp
    716d:	48 8d 3d 1c 61 00 00 	lea    rdi,[rip+0x611c]        # d290 <_IO_stdin_used+0x1290>
    7174:	e8 67 b3 ff ff       	call   24e0 <puts@plt>
    7179:	90                   	nop
    717a:	5d                   	pop    rbp
    717b:	c3                   	ret    

000000000000717c <start_nsh_server>:
    717c:	f3 0f 1e fa          	endbr64 
    7180:	55                   	push   rbp
    7181:	48 89 e5             	mov    rbp,rsp
    7184:	48 83 ec 10          	sub    rsp,0x10
    7188:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    718f:	00 00 
    7191:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7195:	31 c0                	xor    eax,eax
    7197:	48 8d 45 f0          	lea    rax,[rbp-0x10]
    719b:	b9 00 00 00 00       	mov    ecx,0x0
    71a0:	48 8d 15 71 00 00 00 	lea    rdx,[rip+0x71]        # 7218 <actually_start_nsh_server>
    71a7:	be 00 00 00 00       	mov    esi,0x0
    71ac:	48 89 c7             	mov    rdi,rax
    71af:	e8 1c b4 ff ff       	call   25d0 <pthread_create@plt>
    71b4:	90                   	nop
    71b5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    71b9:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    71c0:	00 00 
    71c2:	74 05                	je     71c9 <start_nsh_server+0x4d>
    71c4:	e8 77 b5 ff ff       	call   2740 <__stack_chk_fail@plt>
    71c9:	c9                   	leave  
    71ca:	c3                   	ret    

00000000000071cb <rnstrip>:
    71cb:	f3 0f 1e fa          	endbr64 
    71cf:	55                   	push   rbp
    71d0:	48 89 e5             	mov    rbp,rsp
    71d3:	48 83 ec 10          	sub    rsp,0x10
    71d7:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    71db:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    71df:	48 8d 35 22 62 00 00 	lea    rsi,[rip+0x6222]        # d408 <_IO_stdin_used+0x1408>
    71e6:	48 89 c7             	mov    rdi,rax
    71e9:	e8 e2 b5 ff ff       	call   27d0 <strcspn@plt>
    71ee:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    71f2:	48 01 d0             	add    rax,rdx
    71f5:	c6 00 00             	mov    BYTE PTR [rax],0x0
    71f8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    71fc:	48 8d 35 07 62 00 00 	lea    rsi,[rip+0x6207]        # d40a <_IO_stdin_used+0x140a>
    7203:	48 89 c7             	mov    rdi,rax
    7206:	e8 c5 b5 ff ff       	call   27d0 <strcspn@plt>
    720b:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    720f:	48 01 d0             	add    rax,rdx
    7212:	c6 00 00             	mov    BYTE PTR [rax],0x0
    7215:	90                   	nop
    7216:	c9                   	leave  
    7217:	c3                   	ret    

0000000000007218 <actually_start_nsh_server>:
    7218:	f3 0f 1e fa          	endbr64 
    721c:	55                   	push   rbp
    721d:	48 89 e5             	mov    rbp,rsp
    7220:	48 83 ec 50          	sub    rsp,0x50
    7224:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    722b:	00 00 
    722d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7231:	31 c0                	xor    eax,eax
    7233:	c7 45 bc 10 00 00 00 	mov    DWORD PTR [rbp-0x44],0x10
    723a:	ba 00 00 00 00       	mov    edx,0x0
    723f:	be 01 00 00 00       	mov    esi,0x1
    7244:	bf 02 00 00 00       	mov    edi,0x2
    7249:	e8 d2 b4 ff ff       	call   2720 <socket@plt>
    724e:	89 45 c0             	mov    DWORD PTR [rbp-0x40],eax
    7251:	83 7d c0 00          	cmp    DWORD PTR [rbp-0x40],0x0
    7255:	75 16                	jne    726d <actually_start_nsh_server+0x55>
    7257:	48 8d 3d b2 61 00 00 	lea    rdi,[rip+0x61b2]        # d410 <_IO_stdin_used+0x1410>
    725e:	e8 7d b2 ff ff       	call   24e0 <puts@plt>
    7263:	bf 01 00 00 00       	mov    edi,0x1
    7268:	e8 93 b2 ff ff       	call   2500 <exit@plt>
    726d:	48 8d 55 bc          	lea    rdx,[rbp-0x44]
    7271:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    7274:	41 b8 04 00 00 00    	mov    r8d,0x4
    727a:	48 89 d1             	mov    rcx,rdx
    727d:	ba 02 00 00 00       	mov    edx,0x2
    7282:	be 01 00 00 00       	mov    esi,0x1
    7287:	89 c7                	mov    edi,eax
    7289:	e8 12 b3 ff ff       	call   25a0 <setsockopt@plt>
    728e:	85 c0                	test   eax,eax
    7290:	74 16                	je     72a8 <actually_start_nsh_server+0x90>
    7292:	48 8d 3d 9f 61 00 00 	lea    rdi,[rip+0x619f]        # d438 <_IO_stdin_used+0x1438>
    7299:	e8 42 b2 ff ff       	call   24e0 <puts@plt>
    729e:	bf 01 00 00 00       	mov    edi,0x1
    72a3:	e8 58 b2 ff ff       	call   2500 <exit@plt>
    72a8:	66 c7 45 e0 02 00    	mov    WORD PTR [rbp-0x20],0x2
    72ae:	bf 00 00 00 00       	mov    edi,0x0
    72b3:	e8 48 b5 ff ff       	call   2800 <htonl@plt>
    72b8:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
    72bb:	bf 81 02 00 00       	mov    edi,0x281
    72c0:	e8 2b b2 ff ff       	call   24f0 <htons@plt>
    72c5:	66 89 45 e2          	mov    WORD PTR [rbp-0x1e],ax
    72c9:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
    72cd:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    72d0:	ba 10 00 00 00       	mov    edx,0x10
    72d5:	48 89 ce             	mov    rsi,rcx
    72d8:	89 c7                	mov    edi,eax
    72da:	e8 01 b5 ff ff       	call   27e0 <bind@plt>
    72df:	85 c0                	test   eax,eax
    72e1:	79 16                	jns    72f9 <actually_start_nsh_server+0xe1>
    72e3:	48 8d 3d 76 61 00 00 	lea    rdi,[rip+0x6176]        # d460 <_IO_stdin_used+0x1460>
    72ea:	e8 f1 b1 ff ff       	call   24e0 <puts@plt>
    72ef:	bf 01 00 00 00       	mov    edi,0x1
    72f4:	e8 07 b2 ff ff       	call   2500 <exit@plt>
    72f9:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    72fc:	be 05 00 00 00       	mov    esi,0x5
    7301:	89 c7                	mov    edi,eax
    7303:	e8 08 b3 ff ff       	call   2610 <listen@plt>
    7308:	85 c0                	test   eax,eax
    730a:	79 16                	jns    7322 <actually_start_nsh_server+0x10a>
    730c:	48 8d 3d 85 61 00 00 	lea    rdi,[rip+0x6185]        # d498 <_IO_stdin_used+0x1498>
    7313:	e8 c8 b1 ff ff       	call   24e0 <puts@plt>
    7318:	bf 01 00 00 00       	mov    edi,0x1
    731d:	e8 de b1 ff ff       	call   2500 <exit@plt>
    7322:	48 8d 55 bc          	lea    rdx,[rbp-0x44]
    7326:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
    732a:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    732d:	48 89 ce             	mov    rsi,rcx
    7330:	89 c7                	mov    edi,eax
    7332:	e8 19 b5 ff ff       	call   2850 <accept@plt>
    7337:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    733a:	83 7d c4 00          	cmp    DWORD PTR [rbp-0x3c],0x0
    733e:	79 20                	jns    7360 <actually_start_nsh_server+0x148>
    7340:	b8 00 00 00 00       	mov    eax,0x0
    7345:	e8 f5 bf ff ff       	call   333f <get_formated_time>
    734a:	48 89 c6             	mov    rsi,rax
    734d:	48 8d 3d 74 61 00 00 	lea    rdi,[rip+0x6174]        # d4c8 <_IO_stdin_used+0x14c8>
    7354:	b8 00 00 00 00       	mov    eax,0x0
    7359:	e8 22 b1 ff ff       	call   2480 <printf@plt>
    735e:	eb c2                	jmp    7322 <actually_start_nsh_server+0x10a>
    7360:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    7363:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
    7366:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    736a:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    736e:	48 8d 55 d0          	lea    rdx,[rbp-0x30]
    7372:	48 8d 45 c8          	lea    rax,[rbp-0x38]
    7376:	48 89 d1             	mov    rcx,rdx
    7379:	48 8d 15 0f 00 00 00 	lea    rdx,[rip+0xf]        # 738f <accept_cmd>
    7380:	be 00 00 00 00       	mov    esi,0x0
    7385:	48 89 c7             	mov    rdi,rax
    7388:	e8 43 b2 ff ff       	call   25d0 <pthread_create@plt>
    738d:	eb 93                	jmp    7322 <actually_start_nsh_server+0x10a>

000000000000738f <accept_cmd>:
    738f:	f3 0f 1e fa          	endbr64 
    7393:	55                   	push   rbp
    7394:	48 89 e5             	mov    rbp,rsp
    7397:	48 83 ec 30          	sub    rsp,0x30
    739b:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    739f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    73a3:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    73a7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    73ab:	8b 00                	mov    eax,DWORD PTR [rax]
    73ad:	64 48 8b 14 25 00 00 	mov    rdx,QWORD PTR fs:0x0
    73b4:	00 00 
    73b6:	48 8d 8a 00 fc ff ff 	lea    rcx,[rdx-0x400]
    73bd:	ba 00 04 00 00       	mov    edx,0x400
    73c2:	48 89 ce             	mov    rsi,rcx
    73c5:	89 c7                	mov    edi,eax
    73c7:	e8 74 b1 ff ff       	call   2540 <read@plt>
    73cc:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
    73cf:	83 7d ec 00          	cmp    DWORD PTR [rbp-0x14],0x0
    73d3:	7e 32                	jle    7407 <accept_cmd+0x78>
    73d5:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    73dc:	00 00 
    73de:	48 05 00 fc ff ff    	add    rax,0xfffffffffffffc00
    73e4:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    73e8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    73ec:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    73ef:	0f b6 c0             	movzx  eax,al
    73f2:	89 c6                	mov    esi,eax
    73f4:	48 8d 3d ef 60 00 00 	lea    rdi,[rip+0x60ef]        # d4ea <_IO_stdin_used+0x14ea>
    73fb:	b8 00 00 00 00       	mov    eax,0x0
    7400:	e8 7b b0 ff ff       	call   2480 <printf@plt>
    7405:	eb a0                	jmp    73a7 <accept_cmd+0x18>
    7407:	90                   	nop
    7408:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    740c:	8b 00                	mov    eax,DWORD PTR [rax]
    740e:	89 c7                	mov    edi,eax
    7410:	e8 ab b0 ff ff       	call   24c0 <close@plt>
    7415:	90                   	nop
    7416:	c9                   	leave  
    7417:	c3                   	ret    

0000000000007418 <tcp_rst_portscan_detect>:
    7418:	f3 0f 1e fa          	endbr64 
    741c:	55                   	push   rbp
    741d:	48 89 e5             	mov    rbp,rsp
    7420:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    7427:	48 89 bd c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rdi
    742e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7435:	00 00 
    7437:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    743b:	31 c0                	xor    eax,eax
    743d:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    7444:	00 00 00 
    7447:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    744e:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    7454:	83 f8 1e             	cmp    eax,0x1e
    7457:	74 0a                	je     7463 <tcp_rst_portscan_detect+0x4b>
    7459:	b8 00 00 00 00       	mov    eax,0x0
    745e:	e9 8d 01 00 00       	jmp    75f0 <tcp_rst_portscan_detect+0x1d8>
    7463:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    746a:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    7470:	83 e8 01             	sub    eax,0x1
    7473:	89 85 d8 fe ff ff    	mov    DWORD PTR [rbp-0x128],eax
    7479:	eb 6c                	jmp    74e7 <tcp_rst_portscan_detect+0xcf>
    747b:	8b 85 d8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x128]
    7481:	89 85 e4 fe ff ff    	mov    DWORD PTR [rbp-0x11c],eax
    7487:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    748e:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    7494:	48 63 d2             	movsxd rdx,edx
    7497:	48 83 c2 28          	add    rdx,0x28
    749b:	48 8b 44 d0 10       	mov    rax,QWORD PTR [rax+rdx*8+0x10]
    74a0:	89 c1                	mov    ecx,eax
    74a2:	83 ad d8 fe ff ff 01 	sub    DWORD PTR [rbp-0x128],0x1
    74a9:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    74b0:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    74b6:	48 63 d2             	movsxd rdx,edx
    74b9:	48 83 c2 28          	add    rdx,0x28
    74bd:	48 8b 44 d0 10       	mov    rax,QWORD PTR [rax+rdx*8+0x10]
    74c2:	29 c1                	sub    ecx,eax
    74c4:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
    74ca:	8d 50 01             	lea    edx,[rax+0x1]
    74cd:	89 95 d4 fe ff ff    	mov    DWORD PTR [rbp-0x12c],edx
    74d3:	89 ca                	mov    edx,ecx
    74d5:	48 98                	cdqe   
    74d7:	89 94 85 f0 fe ff ff 	mov    DWORD PTR [rbp+rax*4-0x110],edx
    74de:	83 bd e4 fe ff ff 01 	cmp    DWORD PTR [rbp-0x11c],0x1
    74e5:	74 0b                	je     74f2 <tcp_rst_portscan_detect+0xda>
    74e7:	83 bd d8 fe ff ff 00 	cmp    DWORD PTR [rbp-0x128],0x0
    74ee:	75 8b                	jne    747b <tcp_rst_portscan_detect+0x63>
    74f0:	eb 01                	jmp    74f3 <tcp_rst_portscan_detect+0xdb>
    74f2:	90                   	nop
    74f3:	c7 85 dc fe ff ff 00 	mov    DWORD PTR [rbp-0x124],0x0
    74fa:	00 00 00 
    74fd:	c7 85 e0 fe ff ff 00 	mov    DWORD PTR [rbp-0x120],0x0
    7504:	00 00 00 
    7507:	eb 24                	jmp    752d <tcp_rst_portscan_detect+0x115>
    7509:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    750f:	48 98                	cdqe   
    7511:	8b 84 85 f0 fe ff ff 	mov    eax,DWORD PTR [rbp+rax*4-0x110]
    7518:	3d b3 b7 b4 00       	cmp    eax,0xb4b7b3
    751d:	7f 07                	jg     7526 <tcp_rst_portscan_detect+0x10e>
    751f:	83 85 dc fe ff ff 01 	add    DWORD PTR [rbp-0x124],0x1
    7526:	83 85 e0 fe ff ff 01 	add    DWORD PTR [rbp-0x120],0x1
    752d:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    7533:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    7539:	7c ce                	jl     7509 <tcp_rst_portscan_detect+0xf1>
    753b:	8b 85 dc fe ff ff    	mov    eax,DWORD PTR [rbp-0x124]
    7541:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    7547:	0f 85 9e 00 00 00    	jne    75eb <tcp_rst_portscan_detect+0x1d3>
    754d:	48 8b 05 dc 9a 00 00 	mov    rax,QWORD PTR [rip+0x9adc]        # 11030 <def_log_file>
    7554:	48 8d 35 9d 5f 00 00 	lea    rsi,[rip+0x5f9d]        # d4f8 <_IO_stdin_used+0x14f8>
    755b:	48 89 c7             	mov    rdi,rax
    755e:	e8 0d b0 ff ff       	call   2570 <fopen@plt>
    7563:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
    756a:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7571:	48 83 c0 08          	add    rax,0x8
    7575:	48 89 c6             	mov    rsi,rax
    7578:	48 8d 3d 81 5f 00 00 	lea    rdi,[rip+0x5f81]        # d500 <_IO_stdin_used+0x1500>
    757f:	b8 00 00 00 00       	mov    eax,0x0
    7584:	e8 f7 ae ff ff       	call   2480 <printf@plt>
    7589:	b8 00 00 00 00       	mov    eax,0x0
    758e:	e8 ac bd ff ff       	call   333f <get_formated_time>
    7593:	48 89 c1             	mov    rcx,rax
    7596:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    759d:	48 8d 50 08          	lea    rdx,[rax+0x8]
    75a1:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    75a8:	48 8d 35 81 5f 00 00 	lea    rsi,[rip+0x5f81]        # d530 <_IO_stdin_used+0x1530>
    75af:	48 89 c7             	mov    rdi,rax
    75b2:	b8 00 00 00 00       	mov    eax,0x0
    75b7:	e8 64 b0 ff ff       	call   2620 <sprintf@plt>
    75bc:	48 8b 95 e8 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x118]
    75c3:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    75ca:	48 89 d6             	mov    rsi,rdx
    75cd:	48 89 c7             	mov    rdi,rax
    75d0:	e8 bb b0 ff ff       	call   2690 <fputs@plt>
    75d5:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    75dc:	48 89 c7             	mov    rdi,rax
    75df:	e8 cc b1 ff ff       	call   27b0 <fclose@plt>
    75e4:	b8 01 00 00 00       	mov    eax,0x1
    75e9:	eb 05                	jmp    75f0 <tcp_rst_portscan_detect+0x1d8>
    75eb:	b8 00 00 00 00       	mov    eax,0x0
    75f0:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    75f4:	64 48 2b 34 25 28 00 	sub    rsi,QWORD PTR fs:0x28
    75fb:	00 00 
    75fd:	74 05                	je     7604 <tcp_rst_portscan_detect+0x1ec>
    75ff:	e8 3c b1 ff ff       	call   2740 <__stack_chk_fail@plt>
    7604:	c9                   	leave  
    7605:	c3                   	ret    

0000000000007606 <fin_rst_portscan_detect>:
    7606:	f3 0f 1e fa          	endbr64 
    760a:	55                   	push   rbp
    760b:	48 89 e5             	mov    rbp,rsp
    760e:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    7615:	48 89 bd c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rdi
    761c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7623:	00 00 
    7625:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7629:	31 c0                	xor    eax,eax
    762b:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    7632:	00 00 00 
    7635:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    763c:	8b 40 50             	mov    eax,DWORD PTR [rax+0x50]
    763f:	83 f8 1e             	cmp    eax,0x1e
    7642:	74 0a                	je     764e <fin_rst_portscan_detect+0x48>
    7644:	b8 00 00 00 00       	mov    eax,0x0
    7649:	e9 8a 01 00 00       	jmp    77d8 <fin_rst_portscan_detect+0x1d2>
    764e:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7655:	8b 40 50             	mov    eax,DWORD PTR [rax+0x50]
    7658:	83 e8 01             	sub    eax,0x1
    765b:	89 85 d8 fe ff ff    	mov    DWORD PTR [rbp-0x128],eax
    7661:	eb 6c                	jmp    76cf <fin_rst_portscan_detect+0xc9>
    7663:	8b 85 d8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x128]
    7669:	89 85 e4 fe ff ff    	mov    DWORD PTR [rbp-0x11c],eax
    766f:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7676:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    767c:	48 63 d2             	movsxd rdx,edx
    767f:	48 83 c2 0a          	add    rdx,0xa
    7683:	48 8b 44 d0 08       	mov    rax,QWORD PTR [rax+rdx*8+0x8]
    7688:	89 c1                	mov    ecx,eax
    768a:	83 ad d8 fe ff ff 01 	sub    DWORD PTR [rbp-0x128],0x1
    7691:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7698:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    769e:	48 63 d2             	movsxd rdx,edx
    76a1:	48 83 c2 0a          	add    rdx,0xa
    76a5:	48 8b 44 d0 08       	mov    rax,QWORD PTR [rax+rdx*8+0x8]
    76aa:	29 c1                	sub    ecx,eax
    76ac:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
    76b2:	8d 50 01             	lea    edx,[rax+0x1]
    76b5:	89 95 d4 fe ff ff    	mov    DWORD PTR [rbp-0x12c],edx
    76bb:	89 ca                	mov    edx,ecx
    76bd:	48 98                	cdqe   
    76bf:	89 94 85 f0 fe ff ff 	mov    DWORD PTR [rbp+rax*4-0x110],edx
    76c6:	83 bd e4 fe ff ff 01 	cmp    DWORD PTR [rbp-0x11c],0x1
    76cd:	74 0b                	je     76da <fin_rst_portscan_detect+0xd4>
    76cf:	83 bd d8 fe ff ff 00 	cmp    DWORD PTR [rbp-0x128],0x0
    76d6:	75 8b                	jne    7663 <fin_rst_portscan_detect+0x5d>
    76d8:	eb 01                	jmp    76db <fin_rst_portscan_detect+0xd5>
    76da:	90                   	nop
    76db:	c7 85 dc fe ff ff 00 	mov    DWORD PTR [rbp-0x124],0x0
    76e2:	00 00 00 
    76e5:	c7 85 e0 fe ff ff 00 	mov    DWORD PTR [rbp-0x120],0x0
    76ec:	00 00 00 
    76ef:	eb 24                	jmp    7715 <fin_rst_portscan_detect+0x10f>
    76f1:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    76f7:	48 98                	cdqe   
    76f9:	8b 84 85 f0 fe ff ff 	mov    eax,DWORD PTR [rbp+rax*4-0x110]
    7700:	3d 73 7e e2 00       	cmp    eax,0xe27e73
    7705:	7f 07                	jg     770e <fin_rst_portscan_detect+0x108>
    7707:	83 85 dc fe ff ff 01 	add    DWORD PTR [rbp-0x124],0x1
    770e:	83 85 e0 fe ff ff 01 	add    DWORD PTR [rbp-0x120],0x1
    7715:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    771b:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    7721:	7c ce                	jl     76f1 <fin_rst_portscan_detect+0xeb>
    7723:	8b 85 dc fe ff ff    	mov    eax,DWORD PTR [rbp-0x124]
    7729:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    772f:	0f 85 9e 00 00 00    	jne    77d3 <fin_rst_portscan_detect+0x1cd>
    7735:	48 8b 05 f4 98 00 00 	mov    rax,QWORD PTR [rip+0x98f4]        # 11030 <def_log_file>
    773c:	48 8d 35 b5 5d 00 00 	lea    rsi,[rip+0x5db5]        # d4f8 <_IO_stdin_used+0x14f8>
    7743:	48 89 c7             	mov    rdi,rax
    7746:	e8 25 ae ff ff       	call   2570 <fopen@plt>
    774b:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
    7752:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7759:	48 83 c0 08          	add    rax,0x8
    775d:	48 89 c6             	mov    rsi,rax
    7760:	48 8d 3d f1 5d 00 00 	lea    rdi,[rip+0x5df1]        # d558 <_IO_stdin_used+0x1558>
    7767:	b8 00 00 00 00       	mov    eax,0x0
    776c:	e8 0f ad ff ff       	call   2480 <printf@plt>
    7771:	b8 00 00 00 00       	mov    eax,0x0
    7776:	e8 c4 bb ff ff       	call   333f <get_formated_time>
    777b:	48 89 c1             	mov    rcx,rax
    777e:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7785:	48 8d 50 08          	lea    rdx,[rax+0x8]
    7789:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    7790:	48 8d 35 f1 5d 00 00 	lea    rsi,[rip+0x5df1]        # d588 <_IO_stdin_used+0x1588>
    7797:	48 89 c7             	mov    rdi,rax
    779a:	b8 00 00 00 00       	mov    eax,0x0
    779f:	e8 7c ae ff ff       	call   2620 <sprintf@plt>
    77a4:	48 8b 95 e8 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x118]
    77ab:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    77b2:	48 89 d6             	mov    rsi,rdx
    77b5:	48 89 c7             	mov    rdi,rax
    77b8:	e8 d3 ae ff ff       	call   2690 <fputs@plt>
    77bd:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    77c4:	48 89 c7             	mov    rdi,rax
    77c7:	e8 e4 af ff ff       	call   27b0 <fclose@plt>
    77cc:	b8 01 00 00 00       	mov    eax,0x1
    77d1:	eb 05                	jmp    77d8 <fin_rst_portscan_detect+0x1d2>
    77d3:	b8 00 00 00 00       	mov    eax,0x0
    77d8:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    77dc:	64 48 2b 34 25 28 00 	sub    rsi,QWORD PTR fs:0x28
    77e3:	00 00 
    77e5:	74 05                	je     77ec <fin_rst_portscan_detect+0x1e6>
    77e7:	e8 54 af ff ff       	call   2740 <__stack_chk_fail@plt>
    77ec:	c9                   	leave  
    77ed:	c3                   	ret    

00000000000077ee <member_ready_for_scan>:
    77ee:	f3 0f 1e fa          	endbr64 
    77f2:	55                   	push   rbp
    77f3:	48 89 e5             	mov    rbp,rsp
    77f6:	48 83 ec 10          	sub    rsp,0x10
    77fa:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    7801:	eb 48                	jmp    784b <member_ready_for_scan+0x5d>
    7803:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    7806:	48 63 d0             	movsxd rdx,eax
    7809:	48 89 d0             	mov    rax,rdx
    780c:	48 c1 e0 02          	shl    rax,0x2
    7810:	48 01 d0             	add    rax,rdx
    7813:	48 c1 e0 03          	shl    rax,0x3
    7817:	48 01 d0             	add    rax,rdx
    781a:	48 c1 e0 04          	shl    rax,0x4
    781e:	48 8d 15 fb bc 0e 00 	lea    rdx,[rip+0xebcfb]        # f3520 <watchlist>
    7825:	48 01 d0             	add    rax,rdx
    7828:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    782c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7830:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    7836:	83 f8 1d             	cmp    eax,0x1d
    7839:	76 0c                	jbe    7847 <member_ready_for_scan+0x59>
    783b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    783f:	48 89 c7             	mov    rdi,rax
    7842:	e8 d1 fb ff ff       	call   7418 <tcp_rst_portscan_detect>
    7847:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    784b:	8b 05 c7 97 00 00    	mov    eax,DWORD PTR [rip+0x97c7]        # 11018 <watchlist_num>
    7851:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    7854:	7e ad                	jle    7803 <member_ready_for_scan+0x15>
    7856:	90                   	nop
    7857:	90                   	nop
    7858:	c9                   	leave  
    7859:	c3                   	ret    

000000000000785a <member_exists>:
    785a:	f3 0f 1e fa          	endbr64 
    785e:	55                   	push   rbp
    785f:	48 89 e5             	mov    rbp,rsp
    7862:	48 83 ec 20          	sub    rsp,0x20
    7866:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    786a:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7871:	eb 47                	jmp    78ba <member_exists+0x60>
    7873:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7876:	8d 50 01             	lea    edx,[rax+0x1]
    7879:	89 55 fc             	mov    DWORD PTR [rbp-0x4],edx
    787c:	48 63 d0             	movsxd rdx,eax
    787f:	48 89 d0             	mov    rax,rdx
    7882:	48 c1 e0 02          	shl    rax,0x2
    7886:	48 01 d0             	add    rax,rdx
    7889:	48 c1 e0 03          	shl    rax,0x3
    788d:	48 01 d0             	add    rax,rdx
    7890:	48 c1 e0 04          	shl    rax,0x4
    7894:	48 8d 15 85 bc 0e 00 	lea    rdx,[rip+0xebc85]        # f3520 <watchlist>
    789b:	48 01 d0             	add    rax,rdx
    789e:	48 8d 50 08          	lea    rdx,[rax+0x8]
    78a2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    78a6:	48 89 c6             	mov    rsi,rax
    78a9:	48 89 d7             	mov    rdi,rdx
    78ac:	e8 9f ae ff ff       	call   2750 <strcmp@plt>
    78b1:	85 c0                	test   eax,eax
    78b3:	75 05                	jne    78ba <member_exists+0x60>
    78b5:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    78b8:	eb 10                	jmp    78ca <member_exists+0x70>
    78ba:	8b 05 58 97 00 00    	mov    eax,DWORD PTR [rip+0x9758]        # 11018 <watchlist_num>
    78c0:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    78c3:	7e ae                	jle    7873 <member_exists+0x19>
    78c5:	b8 ff ff ff ff       	mov    eax,0xffffffff
    78ca:	c9                   	leave  
    78cb:	c3                   	ret    

00000000000078cc <init_member>:
    78cc:	f3 0f 1e fa          	endbr64 
    78d0:	55                   	push   rbp
    78d1:	48 89 e5             	mov    rbp,rsp
    78d4:	48 83 ec 20          	sub    rsp,0x20
    78d8:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    78dc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    78e0:	48 89 c7             	mov    rdi,rax
    78e3:	e8 72 ff ff ff       	call   785a <member_exists>
    78e8:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    78eb:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    78ef:	74 42                	je     7933 <init_member+0x67>
    78f1:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    78f4:	48 63 d0             	movsxd rdx,eax
    78f7:	48 89 d0             	mov    rax,rdx
    78fa:	48 c1 e0 02          	shl    rax,0x2
    78fe:	48 01 d0             	add    rax,rdx
    7901:	48 c1 e0 03          	shl    rax,0x3
    7905:	48 01 d0             	add    rax,rdx
    7908:	48 c1 e0 04          	shl    rax,0x4
    790c:	48 8d 15 0d bc 0e 00 	lea    rdx,[rip+0xebc0d]        # f3520 <watchlist>
    7913:	48 01 d0             	add    rax,rdx
    7916:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    791a:	bf 00 00 00 00       	mov    edi,0x0
    791f:	e8 4c af ff ff       	call   2870 <time@plt>
    7924:	48 89 c2             	mov    rdx,rax
    7927:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    792b:	48 89 10             	mov    QWORD PTR [rax],rdx
    792e:	e9 a8 00 00 00       	jmp    79db <init_member+0x10f>
    7933:	48 8d 3d 73 5c 00 00 	lea    rdi,[rip+0x5c73]        # d5ad <_IO_stdin_used+0x15ad>
    793a:	e8 1b ff ff ff       	call   785a <member_exists>
    793f:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    7942:	83 7d f4 00          	cmp    DWORD PTR [rbp-0xc],0x0
    7946:	74 2b                	je     7973 <init_member+0xa7>
    7948:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    794b:	48 63 d0             	movsxd rdx,eax
    794e:	48 89 d0             	mov    rax,rdx
    7951:	48 c1 e0 02          	shl    rax,0x2
    7955:	48 01 d0             	add    rax,rdx
    7958:	48 c1 e0 03          	shl    rax,0x3
    795c:	48 01 d0             	add    rax,rdx
    795f:	48 c1 e0 04          	shl    rax,0x4
    7963:	48 8d 15 b6 bb 0e 00 	lea    rdx,[rip+0xebbb6]        # f3520 <watchlist>
    796a:	48 01 d0             	add    rax,rdx
    796d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7971:	eb 3b                	jmp    79ae <init_member+0xe2>
    7973:	8b 05 9f 96 00 00    	mov    eax,DWORD PTR [rip+0x969f]        # 11018 <watchlist_num>
    7979:	83 c0 01             	add    eax,0x1
    797c:	89 05 96 96 00 00    	mov    DWORD PTR [rip+0x9696],eax        # 11018 <watchlist_num>
    7982:	8b 05 90 96 00 00    	mov    eax,DWORD PTR [rip+0x9690]        # 11018 <watchlist_num>
    7988:	48 63 d0             	movsxd rdx,eax
    798b:	48 89 d0             	mov    rax,rdx
    798e:	48 c1 e0 02          	shl    rax,0x2
    7992:	48 01 d0             	add    rax,rdx
    7995:	48 c1 e0 03          	shl    rax,0x3
    7999:	48 01 d0             	add    rax,rdx
    799c:	48 c1 e0 04          	shl    rax,0x4
    79a0:	48 8d 15 79 bb 0e 00 	lea    rdx,[rip+0xebb79]        # f3520 <watchlist>
    79a7:	48 01 d0             	add    rax,rdx
    79aa:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    79ae:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    79b2:	ba 08 00 00 00       	mov    edx,0x8
    79b7:	be 00 00 00 00       	mov    esi,0x0
    79bc:	48 89 c7             	mov    rdi,rax
    79bf:	e8 cc aa ff ff       	call   2490 <memset@plt>
    79c4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    79c8:	48 8d 50 08          	lea    rdx,[rax+0x8]
    79cc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    79d0:	48 89 c6             	mov    rsi,rax
    79d3:	48 89 d7             	mov    rdi,rdx
    79d6:	e8 95 ad ff ff       	call   2770 <strcpy@plt>
    79db:	c9                   	leave  
    79dc:	c3                   	ret    

00000000000079dd <ready_for_clean>:
    79dd:	f3 0f 1e fa          	endbr64 
    79e1:	55                   	push   rbp
    79e2:	48 89 e5             	mov    rbp,rsp
    79e5:	48 83 ec 10          	sub    rsp,0x10
    79e9:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    79ed:	bf 00 00 00 00       	mov    edi,0x0
    79f2:	e8 79 ae ff ff       	call   2870 <time@plt>
    79f7:	48 89 c2             	mov    rdx,rax
    79fa:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    79fe:	48 8b 00             	mov    rax,QWORD PTR [rax]
    7a01:	48 29 c2             	sub    rdx,rax
    7a04:	48 8b 05 ad 98 00 00 	mov    rax,QWORD PTR [rip+0x98ad]        # 112b8 <clean_delay>
    7a0b:	48 39 c2             	cmp    rdx,rax
    7a0e:	72 22                	jb     7a32 <ready_for_clean+0x55>
    7a10:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7a14:	48 83 c0 08          	add    rax,0x8
    7a18:	48 8d 35 96 5b 00 00 	lea    rsi,[rip+0x5b96]        # d5b5 <_IO_stdin_used+0x15b5>
    7a1f:	48 89 c7             	mov    rdi,rax
    7a22:	e8 29 ad ff ff       	call   2750 <strcmp@plt>
    7a27:	85 c0                	test   eax,eax
    7a29:	74 07                	je     7a32 <ready_for_clean+0x55>
    7a2b:	b8 01 00 00 00       	mov    eax,0x1
    7a30:	eb 05                	jmp    7a37 <ready_for_clean+0x5a>
    7a32:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7a37:	c9                   	leave  
    7a38:	c3                   	ret    

0000000000007a39 <clean>:
    7a39:	f3 0f 1e fa          	endbr64 
    7a3d:	55                   	push   rbp
    7a3e:	48 89 e5             	mov    rbp,rsp
    7a41:	48 83 ec 10          	sub    rsp,0x10
    7a45:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7a49:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7a4d:	ba 08 00 00 00       	mov    edx,0x8
    7a52:	be 00 00 00 00       	mov    esi,0x0
    7a57:	48 89 c7             	mov    rdi,rax
    7a5a:	e8 31 aa ff ff       	call   2490 <memset@plt>
    7a5f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7a63:	48 83 c0 08          	add    rax,0x8
    7a67:	48 b9 30 2e 30 2e 30 	movabs rcx,0x312e302e302e30
    7a6e:	2e 31 00 
    7a71:	48 89 08             	mov    QWORD PTR [rax],rcx
    7a74:	90                   	nop
    7a75:	c9                   	leave  
    7a76:	c3                   	ret    

0000000000007a77 <scan_for_clean>:
    7a77:	f3 0f 1e fa          	endbr64 
    7a7b:	55                   	push   rbp
    7a7c:	48 89 e5             	mov    rbp,rsp
    7a7f:	48 83 ec 10          	sub    rsp,0x10
    7a83:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7a8a:	eb 62                	jmp    7aee <scan_for_clean+0x77>
    7a8c:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7a8f:	48 63 d0             	movsxd rdx,eax
    7a92:	48 89 d0             	mov    rax,rdx
    7a95:	48 c1 e0 02          	shl    rax,0x2
    7a99:	48 01 d0             	add    rax,rdx
    7a9c:	48 c1 e0 03          	shl    rax,0x3
    7aa0:	48 01 d0             	add    rax,rdx
    7aa3:	48 c1 e0 04          	shl    rax,0x4
    7aa7:	48 8d 15 72 ba 0e 00 	lea    rdx,[rip+0xeba72]        # f3520 <watchlist>
    7aae:	48 01 d0             	add    rax,rdx
    7ab1:	48 89 c7             	mov    rdi,rax
    7ab4:	e8 24 ff ff ff       	call   79dd <ready_for_clean>
    7ab9:	85 c0                	test   eax,eax
    7abb:	7e 2d                	jle    7aea <scan_for_clean+0x73>
    7abd:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7ac0:	48 63 d0             	movsxd rdx,eax
    7ac3:	48 89 d0             	mov    rax,rdx
    7ac6:	48 c1 e0 02          	shl    rax,0x2
    7aca:	48 01 d0             	add    rax,rdx
    7acd:	48 c1 e0 03          	shl    rax,0x3
    7ad1:	48 01 d0             	add    rax,rdx
    7ad4:	48 c1 e0 04          	shl    rax,0x4
    7ad8:	48 8d 15 41 ba 0e 00 	lea    rdx,[rip+0xeba41]        # f3520 <watchlist>
    7adf:	48 01 d0             	add    rax,rdx
    7ae2:	48 89 c7             	mov    rdi,rax
    7ae5:	e8 4f ff ff ff       	call   7a39 <clean>
    7aea:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    7aee:	8b 05 24 95 00 00    	mov    eax,DWORD PTR [rip+0x9524]        # 11018 <watchlist_num>
    7af4:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7af7:	7e 93                	jle    7a8c <scan_for_clean+0x15>
    7af9:	90                   	nop
    7afa:	90                   	nop
    7afb:	c9                   	leave  
    7afc:	c3                   	ret    

0000000000007afd <compare_entries>:
    7afd:	f3 0f 1e fa          	endbr64 
    7b01:	55                   	push   rbp
    7b02:	48 89 e5             	mov    rbp,rsp
    7b05:	48 83 ec 20          	sub    rsp,0x20
    7b09:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7b0d:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7b11:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7b18:	e9 ac 00 00 00       	jmp    7bc9 <compare_entries+0xcc>
    7b1d:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7b20:	48 63 d0             	movsxd rdx,eax
    7b23:	48 89 d0             	mov    rax,rdx
    7b26:	48 c1 e0 04          	shl    rax,0x4
    7b2a:	48 01 d0             	add    rax,rdx
    7b2d:	48 01 c0             	add    rax,rax
    7b30:	48 8d 15 e9 01 10 00 	lea    rdx,[rip+0x1001e9]        # 107d20 <arpcache>
    7b37:	48 01 c2             	add    rdx,rax
    7b3a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7b3e:	48 89 c6             	mov    rsi,rax
    7b41:	48 89 d7             	mov    rdi,rdx
    7b44:	e8 a3 01 00 00       	call   7cec <compare_ip_entry>
    7b49:	85 c0                	test   eax,eax
    7b4b:	74 78                	je     7bc5 <compare_entries+0xc8>
    7b4d:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7b50:	48 63 d0             	movsxd rdx,eax
    7b53:	48 89 d0             	mov    rax,rdx
    7b56:	48 c1 e0 04          	shl    rax,0x4
    7b5a:	48 01 d0             	add    rax,rdx
    7b5d:	48 01 c0             	add    rax,rax
    7b60:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7b64:	48 8d 05 b5 01 10 00 	lea    rax,[rip+0x1001b5]        # 107d20 <arpcache>
    7b6b:	48 01 c2             	add    rdx,rax
    7b6e:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7b72:	48 89 c6             	mov    rsi,rax
    7b75:	48 89 d7             	mov    rdi,rdx
    7b78:	e8 98 01 00 00       	call   7d15 <compare_mac_entry>
    7b7d:	85 c0                	test   eax,eax
    7b7f:	75 44                	jne    7bc5 <compare_entries+0xc8>
    7b81:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7b84:	48 63 d0             	movsxd rdx,eax
    7b87:	48 89 d0             	mov    rax,rdx
    7b8a:	48 c1 e0 04          	shl    rax,0x4
    7b8e:	48 01 d0             	add    rax,rdx
    7b91:	48 01 c0             	add    rax,rax
    7b94:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7b98:	48 8d 05 81 01 10 00 	lea    rax,[rip+0x100181]        # 107d20 <arpcache>
    7b9f:	48 8d 34 02          	lea    rsi,[rdx+rax*1]
    7ba3:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    7ba7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7bab:	48 89 d1             	mov    rcx,rdx
    7bae:	48 89 f2             	mov    rdx,rsi
    7bb1:	48 89 c6             	mov    rsi,rax
    7bb4:	48 8d 3d 05 5a 00 00 	lea    rdi,[rip+0x5a05]        # d5c0 <_IO_stdin_used+0x15c0>
    7bbb:	b8 00 00 00 00       	mov    eax,0x0
    7bc0:	e8 bb a8 ff ff       	call   2480 <printf@plt>
    7bc5:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    7bc9:	8b 05 4d 94 00 00    	mov    eax,DWORD PTR [rip+0x944d]        # 1101c <arp_entries>
    7bcf:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7bd2:	0f 8e 45 ff ff ff    	jle    7b1d <compare_entries+0x20>
    7bd8:	90                   	nop
    7bd9:	90                   	nop
    7bda:	c9                   	leave  
    7bdb:	c3                   	ret    

0000000000007bdc <add_entry>:
    7bdc:	f3 0f 1e fa          	endbr64 
    7be0:	55                   	push   rbp
    7be1:	48 89 e5             	mov    rbp,rsp
    7be4:	48 83 ec 20          	sub    rsp,0x20
    7be8:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7bec:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7bf0:	8b 05 26 94 00 00    	mov    eax,DWORD PTR [rip+0x9426]        # 1101c <arp_entries>
    7bf6:	83 c0 01             	add    eax,0x1
    7bf9:	89 05 1d 94 00 00    	mov    DWORD PTR [rip+0x941d],eax        # 1101c <arp_entries>
    7bff:	8b 05 17 94 00 00    	mov    eax,DWORD PTR [rip+0x9417]        # 1101c <arp_entries>
    7c05:	48 63 d0             	movsxd rdx,eax
    7c08:	48 89 d0             	mov    rax,rdx
    7c0b:	48 c1 e0 04          	shl    rax,0x4
    7c0f:	48 01 d0             	add    rax,rdx
    7c12:	48 01 c0             	add    rax,rax
    7c15:	48 8d 15 04 01 10 00 	lea    rdx,[rip+0x100104]        # 107d20 <arpcache>
    7c1c:	48 01 d0             	add    rax,rdx
    7c1f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7c23:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7c27:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    7c2b:	48 89 d6             	mov    rsi,rdx
    7c2e:	48 89 c7             	mov    rdi,rax
    7c31:	e8 3a ab ff ff       	call   2770 <strcpy@plt>
    7c36:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7c3a:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7c3e:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7c42:	48 89 c6             	mov    rsi,rax
    7c45:	48 89 d7             	mov    rdi,rdx
    7c48:	e8 23 ab ff ff       	call   2770 <strcpy@plt>
    7c4d:	90                   	nop
    7c4e:	c9                   	leave  
    7c4f:	c3                   	ret    

0000000000007c50 <entry_exists>:
    7c50:	f3 0f 1e fa          	endbr64 
    7c54:	55                   	push   rbp
    7c55:	48 89 e5             	mov    rbp,rsp
    7c58:	48 83 ec 20          	sub    rsp,0x20
    7c5c:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7c60:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7c64:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7c6b:	eb 6d                	jmp    7cda <entry_exists+0x8a>
    7c6d:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7c70:	48 63 d0             	movsxd rdx,eax
    7c73:	48 89 d0             	mov    rax,rdx
    7c76:	48 c1 e0 04          	shl    rax,0x4
    7c7a:	48 01 d0             	add    rax,rdx
    7c7d:	48 01 c0             	add    rax,rax
    7c80:	48 8d 15 99 00 10 00 	lea    rdx,[rip+0x100099]        # 107d20 <arpcache>
    7c87:	48 01 c2             	add    rdx,rax
    7c8a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7c8e:	48 89 c6             	mov    rsi,rax
    7c91:	48 89 d7             	mov    rdi,rdx
    7c94:	e8 53 00 00 00       	call   7cec <compare_ip_entry>
    7c99:	85 c0                	test   eax,eax
    7c9b:	75 39                	jne    7cd6 <entry_exists+0x86>
    7c9d:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7ca0:	48 63 d0             	movsxd rdx,eax
    7ca3:	48 89 d0             	mov    rax,rdx
    7ca6:	48 c1 e0 04          	shl    rax,0x4
    7caa:	48 01 d0             	add    rax,rdx
    7cad:	48 01 c0             	add    rax,rax
    7cb0:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7cb4:	48 8d 05 65 00 10 00 	lea    rax,[rip+0x100065]        # 107d20 <arpcache>
    7cbb:	48 01 c2             	add    rdx,rax
    7cbe:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7cc2:	48 89 c6             	mov    rsi,rax
    7cc5:	48 89 d7             	mov    rdi,rdx
    7cc8:	e8 48 00 00 00       	call   7d15 <compare_mac_entry>
    7ccd:	85 c0                	test   eax,eax
    7ccf:	75 05                	jne    7cd6 <entry_exists+0x86>
    7cd1:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7cd4:	eb 14                	jmp    7cea <entry_exists+0x9a>
    7cd6:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    7cda:	8b 05 3c 93 00 00    	mov    eax,DWORD PTR [rip+0x933c]        # 1101c <arp_entries>
    7ce0:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7ce3:	7e 88                	jle    7c6d <entry_exists+0x1d>
    7ce5:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7cea:	c9                   	leave  
    7ceb:	c3                   	ret    

0000000000007cec <compare_ip_entry>:
    7cec:	f3 0f 1e fa          	endbr64 
    7cf0:	55                   	push   rbp
    7cf1:	48 89 e5             	mov    rbp,rsp
    7cf4:	48 83 ec 10          	sub    rsp,0x10
    7cf8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7cfc:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7d00:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    7d04:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7d08:	48 89 d6             	mov    rsi,rdx
    7d0b:	48 89 c7             	mov    rdi,rax
    7d0e:	e8 3d aa ff ff       	call   2750 <strcmp@plt>
    7d13:	c9                   	leave  
    7d14:	c3                   	ret    

0000000000007d15 <compare_mac_entry>:
    7d15:	f3 0f 1e fa          	endbr64 
    7d19:	55                   	push   rbp
    7d1a:	48 89 e5             	mov    rbp,rsp
    7d1d:	48 83 ec 10          	sub    rsp,0x10
    7d21:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7d25:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7d29:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    7d2d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7d31:	48 89 d6             	mov    rsi,rdx
    7d34:	48 89 c7             	mov    rdi,rax
    7d37:	e8 14 aa ff ff       	call   2750 <strcmp@plt>
    7d3c:	c9                   	leave  
    7d3d:	c3                   	ret    

0000000000007d3e <load_csv_arp_cache>:
    7d3e:	f3 0f 1e fa          	endbr64 
    7d42:	55                   	push   rbp
    7d43:	48 89 e5             	mov    rbp,rsp
    7d46:	53                   	push   rbx
    7d47:	48 83 ec 68          	sub    rsp,0x68
    7d4b:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7d52:	00 00 
    7d54:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    7d58:	31 c0                	xor    eax,eax
    7d5a:	48 8d 35 95 58 00 00 	lea    rsi,[rip+0x5895]        # d5f6 <_IO_stdin_used+0x15f6>
    7d61:	48 8d 3d 90 58 00 00 	lea    rdi,[rip+0x5890]        # d5f8 <_IO_stdin_used+0x15f8>
    7d68:	e8 03 a8 ff ff       	call   2570 <fopen@plt>
    7d6d:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    7d71:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
    7d76:	75 22                	jne    7d9a <load_csv_arp_cache+0x5c>
    7d78:	48 8d 3d 99 58 00 00 	lea    rdi,[rip+0x5899]        # d618 <_IO_stdin_used+0x1618>
    7d7f:	e8 5c a7 ff ff       	call   24e0 <puts@plt>
    7d84:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    7d88:	48 89 c7             	mov    rdi,rax
    7d8b:	e8 20 aa ff ff       	call   27b0 <fclose@plt>
    7d90:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7d95:	e9 dd 00 00 00       	jmp    7e77 <load_csv_arp_cache+0x139>
    7d9a:	48 c7 45 98 00 00 00 	mov    QWORD PTR [rbp-0x68],0x0
    7da1:	00 
    7da2:	48 c7 45 a0 00 00 00 	mov    QWORD PTR [rbp-0x60],0x0
    7da9:	00 
    7daa:	eb 7c                	jmp    7e28 <load_csv_arp_cache+0xea>
    7dac:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7db0:	48 85 c0             	test   rax,rax
    7db3:	0f 84 97 00 00 00    	je     7e50 <load_csv_arp_cache+0x112>
    7db9:	48 8b 5d 98          	mov    rbx,QWORD PTR [rbp-0x68]
    7dbd:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7dc1:	48 8d 35 89 58 00 00 	lea    rsi,[rip+0x5889]        # d651 <_IO_stdin_used+0x1651>
    7dc8:	48 89 c7             	mov    rdi,rax
    7dcb:	e8 00 aa ff ff       	call   27d0 <strcspn@plt>
    7dd0:	48 01 d8             	add    rax,rbx
    7dd3:	c6 00 00             	mov    BYTE PTR [rax],0x0
    7dd6:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7dda:	48 8d 35 72 58 00 00 	lea    rsi,[rip+0x5872]        # d653 <_IO_stdin_used+0x1653>
    7de1:	48 89 c7             	mov    rdi,rax
    7de4:	e8 97 a9 ff ff       	call   2780 <strtok@plt>
    7de9:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    7ded:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    7df1:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    7df5:	48 89 d6             	mov    rsi,rdx
    7df8:	48 89 c7             	mov    rdi,rax
    7dfb:	e8 70 a9 ff ff       	call   2770 <strcpy@plt>
    7e00:	48 8d 35 4c 58 00 00 	lea    rsi,[rip+0x584c]        # d653 <_IO_stdin_used+0x1653>
    7e07:	bf 00 00 00 00       	mov    edi,0x0
    7e0c:	e8 6f a9 ff ff       	call   2780 <strtok@plt>
    7e11:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    7e15:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    7e19:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    7e1d:	48 89 d6             	mov    rsi,rdx
    7e20:	48 89 c7             	mov    rdi,rax
    7e23:	e8 48 a9 ff ff       	call   2770 <strcpy@plt>
    7e28:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    7e2c:	48 8d 4d a0          	lea    rcx,[rbp-0x60]
    7e30:	48 8d 45 98          	lea    rax,[rbp-0x68]
    7e34:	48 89 ce             	mov    rsi,rcx
    7e37:	48 89 c7             	mov    rdi,rax
    7e3a:	e8 21 a9 ff ff       	call   2760 <getline@plt>
    7e3f:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    7e43:	48 83 7d b0 ff       	cmp    QWORD PTR [rbp-0x50],0xffffffffffffffff
    7e48:	0f 85 5e ff ff ff    	jne    7dac <load_csv_arp_cache+0x6e>
    7e4e:	eb 01                	jmp    7e51 <load_csv_arp_cache+0x113>
    7e50:	90                   	nop
    7e51:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7e55:	48 85 c0             	test   rax,rax
    7e58:	74 0c                	je     7e66 <load_csv_arp_cache+0x128>
    7e5a:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7e5e:	48 89 c7             	mov    rdi,rax
    7e61:	e8 8a a7 ff ff       	call   25f0 <free@plt>
    7e66:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    7e6a:	48 89 c7             	mov    rdi,rax
    7e6d:	e8 3e a9 ff ff       	call   27b0 <fclose@plt>
    7e72:	b8 01 00 00 00       	mov    eax,0x1
    7e77:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    7e7b:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    7e82:	00 00 
    7e84:	74 05                	je     7e8b <load_csv_arp_cache+0x14d>
    7e86:	e8 b5 a8 ff ff       	call   2740 <__stack_chk_fail@plt>
    7e8b:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    7e8f:	c9                   	leave  
    7e90:	c3                   	ret    

0000000000007e91 <callback>:
    7e91:	f3 0f 1e fa          	endbr64 
    7e95:	55                   	push   rbp
    7e96:	48 89 e5             	mov    rbp,rsp
    7e99:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7e9d:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
    7ea0:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    7ea4:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    7ea8:	b8 00 00 00 00       	mov    eax,0x0
    7ead:	5d                   	pop    rbp
    7eae:	c3                   	ret    

0000000000007eaf <update_db>:
    7eaf:	f3 0f 1e fa          	endbr64 
    7eb3:	55                   	push   rbp
    7eb4:	48 89 e5             	mov    rbp,rsp
    7eb7:	48 81 ec 40 02 00 00 	sub    rsp,0x240
    7ebe:	48 89 bd c8 fd ff ff 	mov    QWORD PTR [rbp-0x238],rdi
    7ec5:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7ecc:	00 00 
    7ece:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7ed2:	31 c0                	xor    eax,eax
    7ed4:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    7edb:	48 89 85 e8 fd ff ff 	mov    QWORD PTR [rbp-0x218],rax
    7ee2:	48 8d 3d 6f 57 00 00 	lea    rdi,[rip+0x576f]        # d658 <_IO_stdin_used+0x1658>
    7ee9:	e8 f2 a5 ff ff       	call   24e0 <puts@plt>
    7eee:	48 c7 85 d8 fd ff ff 	mov    QWORD PTR [rbp-0x228],0x0
    7ef5:	00 00 00 00 
    7ef9:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    7f00:	48 89 c6             	mov    rsi,rax
    7f03:	48 8d 3d 36 20 10 00 	lea    rdi,[rip+0x102036]        # 109f40 <sqlite_db_path>
    7f0a:	e8 51 a9 ff ff       	call   2860 <sqlite3_open@plt>
    7f0f:	89 85 d4 fd ff ff    	mov    DWORD PTR [rbp-0x22c],eax
    7f15:	83 bd d4 fd ff ff 00 	cmp    DWORD PTR [rbp-0x22c],0x0
    7f1c:	74 28                	je     7f46 <update_db+0x97>
    7f1e:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    7f25:	48 89 c7             	mov    rdi,rax
    7f28:	e8 73 a8 ff ff       	call   27a0 <sqlite3_errmsg@plt>
    7f2d:	48 89 c6             	mov    rsi,rax
    7f30:	48 8d 3d 2d 57 00 00 	lea    rdi,[rip+0x572d]        # d664 <_IO_stdin_used+0x1664>
    7f37:	b8 00 00 00 00       	mov    eax,0x0
    7f3c:	e8 3f a5 ff ff       	call   2480 <printf@plt>
    7f41:	e9 a2 00 00 00       	jmp    7fe8 <update_db+0x139>
    7f46:	48 8b 85 e8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x218]
    7f4d:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    7f50:	85 c0                	test   eax,eax
    7f52:	75 2e                	jne    7f82 <update_db+0xd3>
    7f54:	48 8b 85 e8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x218]
    7f5b:	48 8d 48 10          	lea    rcx,[rax+0x10]
    7f5f:	48 8b 95 e8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x218]
    7f66:	48 8d 85 f0 fd ff ff 	lea    rax,[rbp-0x210]
    7f6d:	48 8d 35 04 57 00 00 	lea    rsi,[rip+0x5704]        # d678 <_IO_stdin_used+0x1678>
    7f74:	48 89 c7             	mov    rdi,rax
    7f77:	b8 00 00 00 00       	mov    eax,0x0
    7f7c:	e8 9f a6 ff ff       	call   2620 <sprintf@plt>
    7f81:	90                   	nop
    7f82:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    7f89:	48 8d 95 d8 fd ff ff 	lea    rdx,[rbp-0x228]
    7f90:	48 8d b5 f0 fd ff ff 	lea    rsi,[rbp-0x210]
    7f97:	49 89 d0             	mov    r8,rdx
    7f9a:	b9 00 00 00 00       	mov    ecx,0x0
    7f9f:	ba 00 00 00 00       	mov    edx,0x0
    7fa4:	48 89 c7             	mov    rdi,rax
    7fa7:	e8 74 a5 ff ff       	call   2520 <sqlite3_exec@plt>
    7fac:	89 85 d4 fd ff ff    	mov    DWORD PTR [rbp-0x22c],eax
    7fb2:	83 bd d4 fd ff ff 00 	cmp    DWORD PTR [rbp-0x22c],0x0
    7fb9:	74 2c                	je     7fe7 <update_db+0x138>
    7fbb:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    7fc2:	48 89 c6             	mov    rsi,rax
    7fc5:	48 8d 3d f1 56 00 00 	lea    rdi,[rip+0x56f1]        # d6bd <_IO_stdin_used+0x16bd>
    7fcc:	b8 00 00 00 00       	mov    eax,0x0
    7fd1:	e8 aa a4 ff ff       	call   2480 <printf@plt>
    7fd6:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    7fdd:	48 89 c7             	mov    rdi,rax
    7fe0:	e8 cb a5 ff ff       	call   25b0 <sqlite3_free@plt>
    7fe5:	eb 01                	jmp    7fe8 <update_db+0x139>
    7fe7:	90                   	nop
    7fe8:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    7fef:	48 89 c7             	mov    rdi,rax
    7ff2:	e8 69 a4 ff ff       	call   2460 <sqlite3_close@plt>
    7ff7:	b8 01 00 00 00       	mov    eax,0x1
    7ffc:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    8000:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    8007:	00 00 
    8009:	74 05                	je     8010 <update_db+0x161>
    800b:	e8 30 a7 ff ff       	call   2740 <__stack_chk_fail@plt>
    8010:	c9                   	leave  
    8011:	c3                   	ret    

0000000000008012 <update_spi_db>:
    8012:	f3 0f 1e fa          	endbr64 
    8016:	55                   	push   rbp
    8017:	48 89 e5             	mov    rbp,rsp
    801a:	41 57                	push   r15
    801c:	41 56                	push   r14
    801e:	41 55                	push   r13
    8020:	41 54                	push   r12
    8022:	53                   	push   rbx
    8023:	48 81 ec 48 04 00 00 	sub    rsp,0x448
    802a:	48 89 bd 98 fb ff ff 	mov    QWORD PTR [rbp-0x468],rdi
    8031:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8038:	00 00 
    803a:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    803e:	31 c0                	xor    eax,eax
    8040:	48 8b 85 98 fb ff ff 	mov    rax,QWORD PTR [rbp-0x468]
    8047:	48 89 85 b0 fb ff ff 	mov    QWORD PTR [rbp-0x450],rax
    804e:	48 8d 85 a0 fb ff ff 	lea    rax,[rbp-0x460]
    8055:	48 89 c6             	mov    rsi,rax
    8058:	48 8d 3d 7c 56 00 00 	lea    rdi,[rip+0x567c]        # d6db <_IO_stdin_used+0x16db>
    805f:	e8 fc a7 ff ff       	call   2860 <sqlite3_open@plt>
    8064:	85 c0                	test   eax,eax
    8066:	74 3c                	je     80a4 <update_spi_db+0x92>
    8068:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    806f:	48 89 c7             	mov    rdi,rax
    8072:	e8 29 a7 ff ff       	call   27a0 <sqlite3_errmsg@plt>
    8077:	48 89 c6             	mov    rsi,rax
    807a:	48 8d 3d 72 56 00 00 	lea    rdi,[rip+0x5672]        # d6f3 <_IO_stdin_used+0x16f3>
    8081:	b8 00 00 00 00       	mov    eax,0x0
    8086:	e8 f5 a3 ff ff       	call   2480 <printf@plt>
    808b:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    8092:	48 89 c7             	mov    rdi,rax
    8095:	e8 c6 a3 ff ff       	call   2460 <sqlite3_close@plt>
    809a:	b8 00 00 00 00       	mov    eax,0x0
    809f:	e9 59 01 00 00       	jmp    81fd <update_spi_db+0x1eb>
    80a4:	48 8d 05 5d 56 00 00 	lea    rax,[rip+0x565d]        # d708 <_IO_stdin_used+0x1708>
    80ab:	48 89 85 b8 fb ff ff 	mov    QWORD PTR [rbp-0x448],rax
    80b2:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    80b9:	8b 50 7c             	mov    edx,DWORD PTR [rax+0x7c]
    80bc:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    80c3:	44 8b 78 78          	mov    r15d,DWORD PTR [rax+0x78]
    80c7:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    80ce:	4c 8b b0 98 00 00 00 	mov    r14,QWORD PTR [rax+0x98]
    80d5:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    80dc:	4c 8b a8 90 00 00 00 	mov    r13,QWORD PTR [rax+0x90]
    80e3:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    80ea:	44 8b a0 a8 00 00 00 	mov    r12d,DWORD PTR [rax+0xa8]
    80f1:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    80f8:	8b 98 a4 00 00 00    	mov    ebx,DWORD PTR [rax+0xa4]
    80fe:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8105:	48 8b 40 70          	mov    rax,QWORD PTR [rax+0x70]
    8109:	44 8b 18             	mov    r11d,DWORD PTR [rax]
    810c:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8113:	44 8b 50 60          	mov    r10d,DWORD PTR [rax+0x60]
    8117:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    811e:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
    8122:	44 8b 08             	mov    r9d,DWORD PTR [rax]
    8125:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    812c:	44 8b 40 5c          	mov    r8d,DWORD PTR [rax+0x5c]
    8130:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8137:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    813a:	89 85 94 fb ff ff    	mov    DWORD PTR [rbp-0x46c],eax
    8140:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8147:	8b 48 54             	mov    ecx,DWORD PTR [rax+0x54]
    814a:	89 8d 90 fb ff ff    	mov    DWORD PTR [rbp-0x470],ecx
    8150:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8157:	48 8d 48 29          	lea    rcx,[rax+0x29]
    815b:	48 8b bd b0 fb ff ff 	mov    rdi,QWORD PTR [rbp-0x450]
    8162:	48 8b b5 b8 fb ff ff 	mov    rsi,QWORD PTR [rbp-0x448]
    8169:	48 8d 85 c0 fb ff ff 	lea    rax,[rbp-0x440]
    8170:	52                   	push   rdx
    8171:	41 57                	push   r15
    8173:	41 56                	push   r14
    8175:	41 55                	push   r13
    8177:	41 54                	push   r12
    8179:	53                   	push   rbx
    817a:	41 53                	push   r11
    817c:	41 52                	push   r10
    817e:	41 51                	push   r9
    8180:	41 50                	push   r8
    8182:	44 8b 8d 94 fb ff ff 	mov    r9d,DWORD PTR [rbp-0x46c]
    8189:	44 8b 85 90 fb ff ff 	mov    r8d,DWORD PTR [rbp-0x470]
    8190:	48 89 fa             	mov    rdx,rdi
    8193:	48 89 c7             	mov    rdi,rax
    8196:	b8 00 00 00 00       	mov    eax,0x0
    819b:	e8 80 a4 ff ff       	call   2620 <sprintf@plt>
    81a0:	48 83 c4 50          	add    rsp,0x50
    81a4:	48 c7 85 a8 fb ff ff 	mov    QWORD PTR [rbp-0x458],0x0
    81ab:	00 00 00 00 
    81af:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    81b6:	48 8d 95 a8 fb ff ff 	lea    rdx,[rbp-0x458]
    81bd:	48 8d b5 c0 fb ff ff 	lea    rsi,[rbp-0x440]
    81c4:	49 89 d0             	mov    r8,rdx
    81c7:	b9 00 00 00 00       	mov    ecx,0x0
    81cc:	ba 00 00 00 00       	mov    edx,0x0
    81d1:	48 89 c7             	mov    rdi,rax
    81d4:	e8 47 a3 ff ff       	call   2520 <sqlite3_exec@plt>
    81d9:	85 c0                	test   eax,eax
    81db:	74 1b                	je     81f8 <update_spi_db+0x1e6>
    81dd:	48 8b 85 a8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x458]
    81e4:	48 89 c6             	mov    rsi,rax
    81e7:	48 8d 3d 07 56 00 00 	lea    rdi,[rip+0x5607]        # d7f5 <_IO_stdin_used+0x17f5>
    81ee:	b8 00 00 00 00       	mov    eax,0x0
    81f3:	e8 88 a2 ff ff       	call   2480 <printf@plt>
    81f8:	b8 00 00 00 00       	mov    eax,0x0
    81fd:	48 8b 5d c8          	mov    rbx,QWORD PTR [rbp-0x38]
    8201:	64 48 2b 1c 25 28 00 	sub    rbx,QWORD PTR fs:0x28
    8208:	00 00 
    820a:	74 05                	je     8211 <update_spi_db+0x1ff>
    820c:	e8 2f a5 ff ff       	call   2740 <__stack_chk_fail@plt>
    8211:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    8215:	5b                   	pop    rbx
    8216:	41 5c                	pop    r12
    8218:	41 5d                	pop    r13
    821a:	41 5e                	pop    r14
    821c:	41 5f                	pop    r15
    821e:	5d                   	pop    rbp
    821f:	c3                   	ret    

0000000000008220 <http_disect>:
    8220:	f3 0f 1e fa          	endbr64 
    8224:	55                   	push   rbp
    8225:	48 89 e5             	mov    rbp,rsp
    8228:	48 81 ec 30 04 00 00 	sub    rsp,0x430
    822f:	48 89 bd d8 fb ff ff 	mov    QWORD PTR [rbp-0x428],rdi
    8236:	48 89 b5 d0 fb ff ff 	mov    QWORD PTR [rbp-0x430],rsi
    823d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8244:	00 00 
    8246:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    824a:	31 c0                	xor    eax,eax
    824c:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    8253:	be 0d 00 00 00       	mov    esi,0xd
    8258:	48 89 c7             	mov    rdi,rax
    825b:	e8 7a b2 ff ff       	call   34da <strloc>
    8260:	89 85 ec fb ff ff    	mov    DWORD PTR [rbp-0x414],eax
    8266:	48 8d 3d a6 55 00 00 	lea    rdi,[rip+0x55a6]        # d813 <_IO_stdin_used+0x1813>
    826d:	e8 6e a2 ff ff       	call   24e0 <puts@plt>
    8272:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    8279:	48 89 c7             	mov    rdi,rax
    827c:	e8 00 b3 ff ff       	call   3581 <test_string_arr_print>
    8281:	83 f0 01             	xor    eax,0x1
    8284:	84 c0                	test   al,al
    8286:	75 33                	jne    82bb <http_disect+0x9b>
    8288:	8b 85 ec fb ff ff    	mov    eax,DWORD PTR [rbp-0x414]
    828e:	48 63 d0             	movsxd rdx,eax
    8291:	48 8b 8d d8 fb ff ff 	mov    rcx,QWORD PTR [rbp-0x428]
    8298:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    829f:	48 89 ce             	mov    rsi,rcx
    82a2:	48 89 c7             	mov    rdi,rax
    82a5:	e8 16 a5 ff ff       	call   27c0 <strncpy@plt>
    82aa:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    82b1:	48 89 c7             	mov    rdi,rax
    82b4:	e8 27 a2 ff ff       	call   24e0 <puts@plt>
    82b9:	eb 01                	jmp    82bc <http_disect+0x9c>
    82bb:	90                   	nop
    82bc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    82c0:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    82c7:	00 00 
    82c9:	74 05                	je     82d0 <http_disect+0xb0>
    82cb:	e8 70 a4 ff ff       	call   2740 <__stack_chk_fail@plt>
    82d0:	c9                   	leave  
    82d1:	c3                   	ret    

00000000000082d2 <dns_disect>:
    82d2:	f3 0f 1e fa          	endbr64 
    82d6:	55                   	push   rbp
    82d7:	48 89 e5             	mov    rbp,rsp
    82da:	48 83 ec 30          	sub    rsp,0x30
    82de:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    82e2:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    82e6:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    82ea:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    82ee:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    82f2:	48 83 c0 0c          	add    rax,0xc
    82f6:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    82fa:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    82fe:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    8302:	66 85 c0             	test   ax,ax
    8305:	75 6d                	jne    8374 <dns_disect+0xa2>
    8307:	bf 00 04 00 00       	mov    edi,0x400
    830c:	e8 4f a2 ff ff       	call   2560 <malloc@plt>
    8311:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8315:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8319:	ba 08 00 00 00       	mov    edx,0x8
    831e:	be 00 00 00 00       	mov    esi,0x0
    8323:	48 89 c7             	mov    rdi,rax
    8326:	e8 65 a1 ff ff       	call   2490 <memset@plt>
    832b:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    832f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8333:	48 89 d6             	mov    rsi,rdx
    8336:	48 89 c7             	mov    rdi,rax
    8339:	e8 39 00 00 00       	call   8377 <get_dns_name>
    833e:	0f b6 05 1f 1c 10 00 	movzx  eax,BYTE PTR [rip+0x101c1f]        # 109f64 <packet_print>
    8345:	84 c0                	test   al,al
    8347:	74 18                	je     8361 <dns_disect+0x8f>
    8349:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    834d:	48 89 c6             	mov    rsi,rax
    8350:	48 8d 3d ce 54 00 00 	lea    rdi,[rip+0x54ce]        # d825 <_IO_stdin_used+0x1825>
    8357:	b8 00 00 00 00       	mov    eax,0x0
    835c:	e8 1f a1 ff ff       	call   2480 <printf@plt>
    8361:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    8366:	74 0c                	je     8374 <dns_disect+0xa2>
    8368:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    836c:	48 89 c7             	mov    rdi,rax
    836f:	e8 7c a2 ff ff       	call   25f0 <free@plt>
    8374:	90                   	nop
    8375:	c9                   	leave  
    8376:	c3                   	ret    

0000000000008377 <get_dns_name>:
    8377:	f3 0f 1e fa          	endbr64 
    837b:	55                   	push   rbp
    837c:	48 89 e5             	mov    rbp,rsp
    837f:	53                   	push   rbx
    8380:	48 83 ec 28          	sub    rsp,0x28
    8384:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    8388:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    838c:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    8393:	eb 57                	jmp    83ec <get_dns_name+0x75>
    8395:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    8398:	48 63 d0             	movsxd rdx,eax
    839b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    839f:	48 01 d0             	add    rax,rdx
    83a2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    83a5:	3c 20                	cmp    al,0x20
    83a7:	7e 24                	jle    83cd <get_dns_name+0x56>
    83a9:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    83ac:	48 63 d0             	movsxd rdx,eax
    83af:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    83b3:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    83b7:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    83bb:	ba 01 00 00 00       	mov    edx,0x1
    83c0:	48 89 ce             	mov    rsi,rcx
    83c3:	48 89 c7             	mov    rdi,rax
    83c6:	e8 05 a1 ff ff       	call   24d0 <strncat@plt>
    83cb:	eb 1b                	jmp    83e8 <get_dns_name+0x71>
    83cd:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    83d1:	48 89 c7             	mov    rdi,rax
    83d4:	e8 27 a2 ff ff       	call   2600 <strlen@plt>
    83d9:	48 89 c2             	mov    rdx,rax
    83dc:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    83e0:	48 01 d0             	add    rax,rdx
    83e3:	66 c7 00 2e 00       	mov    WORD PTR [rax],0x2e
    83e8:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    83ec:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    83ef:	48 63 d8             	movsxd rbx,eax
    83f2:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    83f6:	48 89 c7             	mov    rdi,rax
    83f9:	e8 02 a2 ff ff       	call   2600 <strlen@plt>
    83fe:	48 39 c3             	cmp    rbx,rax
    8401:	72 92                	jb     8395 <get_dns_name+0x1e>
    8403:	90                   	nop
    8404:	90                   	nop
    8405:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    8409:	c9                   	leave  
    840a:	c3                   	ret    

000000000000840b <ftp_disect>:
    840b:	f3 0f 1e fa          	endbr64 
    840f:	55                   	push   rbp
    8410:	48 89 e5             	mov    rbp,rsp
    8413:	48 83 ec 20          	sub    rsp,0x20
    8417:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    841b:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    841f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8423:	48 8d 35 06 54 00 00 	lea    rsi,[rip+0x5406]        # d830 <_IO_stdin_used+0x1830>
    842a:	48 89 c7             	mov    rdi,rax
    842d:	e8 3e a2 ff ff       	call   2670 <strstr@plt>
    8432:	48 85 c0             	test   rax,rax
    8435:	75 1c                	jne    8453 <ftp_disect+0x48>
    8437:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    843b:	48 8d 35 fe 53 00 00 	lea    rsi,[rip+0x53fe]        # d840 <_IO_stdin_used+0x1840>
    8442:	48 89 c7             	mov    rdi,rax
    8445:	e8 26 a2 ff ff       	call   2670 <strstr@plt>
    844a:	48 85 c0             	test   rax,rax
    844d:	0f 84 8a 00 00 00    	je     84dd <ftp_disect+0xd2>
    8453:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8457:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    845b:	48 89 c7             	mov    rdi,rax
    845e:	e8 f7 f3 ff ff       	call   785a <member_exists>
    8463:	48 63 d0             	movsxd rdx,eax
    8466:	48 89 d0             	mov    rax,rdx
    8469:	48 c1 e0 02          	shl    rax,0x2
    846d:	48 01 d0             	add    rax,rdx
    8470:	48 c1 e0 03          	shl    rax,0x3
    8474:	48 01 d0             	add    rax,rdx
    8477:	48 c1 e0 04          	shl    rax,0x4
    847b:	48 8d 15 9e b0 0e 00 	lea    rdx,[rip+0xeb09e]        # f3520 <watchlist>
    8482:	48 01 d0             	add    rax,rdx
    8485:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8489:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    848d:	8b 80 40 02 00 00    	mov    eax,DWORD PTR [rax+0x240]
    8493:	8d 50 01             	lea    edx,[rax+0x1]
    8496:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    849a:	89 90 40 02 00 00    	mov    DWORD PTR [rax+0x240],edx
    84a0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    84a4:	8b 80 40 02 00 00    	mov    eax,DWORD PTR [rax+0x240]
    84aa:	83 f8 04             	cmp    eax,0x4
    84ad:	7e 2e                	jle    84dd <ftp_disect+0xd2>
    84af:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    84b3:	8b 88 40 02 00 00    	mov    ecx,DWORD PTR [rax+0x240]
    84b9:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    84bd:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    84c1:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    84c5:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    84c9:	48 89 c6             	mov    rsi,rax
    84cc:	48 8d 3d 7d 53 00 00 	lea    rdi,[rip+0x537d]        # d850 <_IO_stdin_used+0x1850>
    84d3:	b8 00 00 00 00       	mov    eax,0x0
    84d8:	e8 a3 9f ff ff       	call   2480 <printf@plt>
    84dd:	90                   	nop
    84de:	c9                   	leave  
    84df:	c3                   	ret    

00000000000084e0 <livedebug>:
    84e0:	f3 0f 1e fa          	endbr64 
    84e4:	55                   	push   rbp
    84e5:	48 89 e5             	mov    rbp,rsp
    84e8:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
    84ef:	48 89 bd 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rdi
    84f6:	48 89 b5 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rsi
    84fd:	48 89 95 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdx
    8504:	48 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rcx
    850b:	4c 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r8
    8512:	4c 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r9
    8519:	84 c0                	test   al,al
    851b:	74 20                	je     853d <livedebug+0x5d>
    851d:	0f 29 45 80          	movaps XMMWORD PTR [rbp-0x80],xmm0
    8521:	0f 29 4d 90          	movaps XMMWORD PTR [rbp-0x70],xmm1
    8525:	0f 29 55 a0          	movaps XMMWORD PTR [rbp-0x60],xmm2
    8529:	0f 29 5d b0          	movaps XMMWORD PTR [rbp-0x50],xmm3
    852d:	0f 29 65 c0          	movaps XMMWORD PTR [rbp-0x40],xmm4
    8531:	0f 29 6d d0          	movaps XMMWORD PTR [rbp-0x30],xmm5
    8535:	0f 29 75 e0          	movaps XMMWORD PTR [rbp-0x20],xmm6
    8539:	0f 29 7d f0          	movaps XMMWORD PTR [rbp-0x10],xmm7
    853d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8544:	00 00 
    8546:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    854d:	31 c0                	xor    eax,eax
    854f:	0f b6 05 ca 19 10 00 	movzx  eax,BYTE PTR [rip+0x1019ca]        # 109f20 <debug_mode>
    8556:	84 c0                	test   al,al
    8558:	74 4b                	je     85a5 <livedebug+0xc5>
    855a:	c7 85 30 ff ff ff 08 	mov    DWORD PTR [rbp-0xd0],0x8
    8561:	00 00 00 
    8564:	c7 85 34 ff ff ff 30 	mov    DWORD PTR [rbp-0xcc],0x30
    856b:	00 00 00 
    856e:	48 8d 45 10          	lea    rax,[rbp+0x10]
    8572:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    8579:	48 8d 85 50 ff ff ff 	lea    rax,[rbp-0xb0]
    8580:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    8587:	48 8d 95 30 ff ff ff 	lea    rdx,[rbp-0xd0]
    858e:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    8595:	48 89 d6             	mov    rsi,rdx
    8598:	48 89 c7             	mov    rdi,rax
    859b:	b8 00 00 00 00       	mov    eax,0x0
    85a0:	e8 db 9e ff ff       	call   2480 <printf@plt>
    85a5:	90                   	nop
    85a6:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    85ad:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    85b4:	00 00 
    85b6:	74 05                	je     85bd <livedebug+0xdd>
    85b8:	e8 83 a1 ff ff       	call   2740 <__stack_chk_fail@plt>
    85bd:	c9                   	leave  
    85be:	c3                   	ret    

00000000000085bf <forward_packet>:
    85bf:	f3 0f 1e fa          	endbr64 
    85c3:	55                   	push   rbp
    85c4:	48 89 e5             	mov    rbp,rsp
    85c7:	48 83 ec 20          	sub    rsp,0x20
    85cb:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    85cf:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    85d3:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    85d7:	48 8d 35 b2 19 10 00 	lea    rsi,[rip+0x1019b2]        # 109f90 <local_ip>
    85de:	48 89 c7             	mov    rdi,rax
    85e1:	e8 6a a1 ff ff       	call   2750 <strcmp@plt>
    85e6:	85 c0                	test   eax,eax
    85e8:	74 4f                	je     8639 <forward_packet+0x7a>
    85ea:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    85ee:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    85f2:	48 8d 35 97 19 10 00 	lea    rsi,[rip+0x101997]        # 109f90 <local_ip>
    85f9:	48 89 c7             	mov    rdi,rax
    85fc:	e8 4f a1 ff ff       	call   2750 <strcmp@plt>
    8601:	85 c0                	test   eax,eax
    8603:	74 34                	je     8639 <forward_packet+0x7a>
    8605:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8609:	48 8b 00             	mov    rax,QWORD PTR [rax]
    860c:	48 8d 50 0e          	lea    rdx,[rax+0xe]
    8610:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8614:	48 89 d6             	mov    rsi,rdx
    8617:	48 89 c7             	mov    rdi,rax
    861a:	e8 51 a1 ff ff       	call   2770 <strcpy@plt>
    861f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8623:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    8626:	83 e8 0e             	sub    eax,0xe
    8629:	89 c2                	mov    edx,eax
    862b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    862f:	89 d6                	mov    esi,edx
    8631:	48 89 c7             	mov    rdi,rax
    8634:	e8 e9 cc ff ff       	call   5322 <ascii_hexdump>
    8639:	90                   	nop
    863a:	c9                   	leave  
    863b:	c3                   	ret    

000000000000863c <conversation_exists>:
    863c:	f3 0f 1e fa          	endbr64 
    8640:	55                   	push   rbp
    8641:	48 89 e5             	mov    rbp,rsp
    8644:	48 83 ec 20          	sub    rsp,0x20
    8648:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    864c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    8653:	e9 ff 00 00 00       	jmp    8757 <conversation_exists+0x11b>
    8658:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    865b:	48 98                	cdqe   
    865d:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8664:	48 8d 15 75 19 10 00 	lea    rdx,[rip+0x101975]        # 109fe0 <spi_table>
    866b:	48 01 d0             	add    rax,rdx
    866e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8672:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8676:	0f b6 80 b0 00 00 00 	movzx  eax,BYTE PTR [rax+0xb0]
    867d:	84 c0                	test   al,al
    867f:	0f 84 ce 00 00 00    	je     8753 <conversation_exists+0x117>
    8685:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8689:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    868c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8690:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    8693:	39 c2                	cmp    edx,eax
    8695:	75 58                	jne    86ef <conversation_exists+0xb3>
    8697:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    869b:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    869e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    86a2:	8b 40 54             	mov    eax,DWORD PTR [rax+0x54]
    86a5:	39 c2                	cmp    edx,eax
    86a7:	75 46                	jne    86ef <conversation_exists+0xb3>
    86a9:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    86ad:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    86b1:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    86b5:	48 89 d6             	mov    rsi,rdx
    86b8:	48 89 c7             	mov    rdi,rax
    86bb:	e8 90 a0 ff ff       	call   2750 <strcmp@plt>
    86c0:	85 c0                	test   eax,eax
    86c2:	0f 85 8a 00 00 00    	jne    8752 <conversation_exists+0x116>
    86c8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    86cc:	48 8d 50 29          	lea    rdx,[rax+0x29]
    86d0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    86d4:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    86d8:	48 89 d6             	mov    rsi,rdx
    86db:	48 89 c7             	mov    rdi,rax
    86de:	e8 6d a0 ff ff       	call   2750 <strcmp@plt>
    86e3:	85 c0                	test   eax,eax
    86e5:	75 6b                	jne    8752 <conversation_exists+0x116>
    86e7:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    86ea:	e9 81 00 00 00       	jmp    8770 <conversation_exists+0x134>
    86ef:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    86f3:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    86f6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    86fa:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    86fd:	39 c2                	cmp    edx,eax
    86ff:	75 52                	jne    8753 <conversation_exists+0x117>
    8701:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8705:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    8708:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    870c:	8b 40 54             	mov    eax,DWORD PTR [rax+0x54]
    870f:	39 c2                	cmp    edx,eax
    8711:	75 40                	jne    8753 <conversation_exists+0x117>
    8713:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8717:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    871b:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    871f:	48 89 d6             	mov    rsi,rdx
    8722:	48 89 c7             	mov    rdi,rax
    8725:	e8 26 a0 ff ff       	call   2750 <strcmp@plt>
    872a:	85 c0                	test   eax,eax
    872c:	75 25                	jne    8753 <conversation_exists+0x117>
    872e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8732:	48 8d 50 29          	lea    rdx,[rax+0x29]
    8736:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    873a:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    873e:	48 89 d6             	mov    rsi,rdx
    8741:	48 89 c7             	mov    rdi,rax
    8744:	e8 07 a0 ff ff       	call   2750 <strcmp@plt>
    8749:	85 c0                	test   eax,eax
    874b:	75 06                	jne    8753 <conversation_exists+0x117>
    874d:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8750:	eb 1e                	jmp    8770 <conversation_exists+0x134>
    8752:	90                   	nop
    8753:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    8757:	8b 05 e3 88 00 00    	mov    eax,DWORD PTR [rip+0x88e3]        # 11040 <total_conversations>
    875d:	8d 50 01             	lea    edx,[rax+0x1]
    8760:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8763:	39 c2                	cmp    edx,eax
    8765:	0f 87 ed fe ff ff    	ja     8658 <conversation_exists+0x1c>
    876b:	b8 ff ff ff ff       	mov    eax,0xffffffff
    8770:	c9                   	leave  
    8771:	c3                   	ret    

0000000000008772 <get_new_spi_location>:
    8772:	f3 0f 1e fa          	endbr64 
    8776:	55                   	push   rbp
    8777:	48 89 e5             	mov    rbp,rsp
    877a:	8b 05 c0 88 00 00    	mov    eax,DWORD PTR [rip+0x88c0]        # 11040 <total_conversations>
    8780:	83 f8 ff             	cmp    eax,0xffffffff
    8783:	75 17                	jne    879c <get_new_spi_location+0x2a>
    8785:	8b 05 b5 88 00 00    	mov    eax,DWORD PTR [rip+0x88b5]        # 11040 <total_conversations>
    878b:	83 c0 01             	add    eax,0x1
    878e:	89 05 ac 88 00 00    	mov    DWORD PTR [rip+0x88ac],eax        # 11040 <total_conversations>
    8794:	8b 05 a6 88 00 00    	mov    eax,DWORD PTR [rip+0x88a6]        # 11040 <total_conversations>
    879a:	eb 52                	jmp    87ee <get_new_spi_location+0x7c>
    879c:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    87a3:	eb 27                	jmp    87cc <get_new_spi_location+0x5a>
    87a5:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    87a8:	48 98                	cdqe   
    87aa:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    87b1:	48 8d 15 d8 18 10 00 	lea    rdx,[rip+0x1018d8]        # 10a090 <spi_table+0xb0>
    87b8:	0f b6 04 10          	movzx  eax,BYTE PTR [rax+rdx*1]
    87bc:	83 f0 01             	xor    eax,0x1
    87bf:	84 c0                	test   al,al
    87c1:	74 05                	je     87c8 <get_new_spi_location+0x56>
    87c3:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    87c6:	eb 26                	jmp    87ee <get_new_spi_location+0x7c>
    87c8:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    87cc:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
    87cf:	8b 05 6b 88 00 00    	mov    eax,DWORD PTR [rip+0x886b]        # 11040 <total_conversations>
    87d5:	39 c2                	cmp    edx,eax
    87d7:	72 cc                	jb     87a5 <get_new_spi_location+0x33>
    87d9:	8b 05 61 88 00 00    	mov    eax,DWORD PTR [rip+0x8861]        # 11040 <total_conversations>
    87df:	83 c0 01             	add    eax,0x1
    87e2:	89 05 58 88 00 00    	mov    DWORD PTR [rip+0x8858],eax        # 11040 <total_conversations>
    87e8:	8b 05 52 88 00 00    	mov    eax,DWORD PTR [rip+0x8852]        # 11040 <total_conversations>
    87ee:	5d                   	pop    rbp
    87ef:	c3                   	ret    

00000000000087f0 <add_new_conversation>:
    87f0:	f3 0f 1e fa          	endbr64 
    87f4:	55                   	push   rbp
    87f5:	48 89 e5             	mov    rbp,rsp
    87f8:	48 83 ec 20          	sub    rsp,0x20
    87fc:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8800:	0f b6 05 bb 17 10 00 	movzx  eax,BYTE PTR [rip+0x1017bb]        # 109fc2 <use_spi>
    8807:	84 c0                	test   al,al
    8809:	0f 84 08 02 00 00    	je     8a17 <add_new_conversation+0x227>
    880f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8813:	48 89 c7             	mov    rdi,rax
    8816:	e8 21 fe ff ff       	call   863c <conversation_exists>
    881b:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    881e:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    8822:	0f 84 82 00 00 00    	je     88aa <add_new_conversation+0xba>
    8828:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    882b:	48 98                	cdqe   
    882d:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8834:	48 8d 15 a5 17 10 00 	lea    rdx,[rip+0x1017a5]        # 109fe0 <spi_table>
    883b:	48 01 d0             	add    rax,rdx
    883e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8842:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8846:	8b 80 ac 00 00 00    	mov    eax,DWORD PTR [rax+0xac]
    884c:	8d 50 01             	lea    edx,[rax+0x1]
    884f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8853:	89 90 ac 00 00 00    	mov    DWORD PTR [rax+0xac],edx
    8859:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    885d:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    8860:	8d 50 01             	lea    edx,[rax+0x1]
    8863:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8867:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    886a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    886e:	8b 78 54             	mov    edi,DWORD PTR [rax+0x54]
    8871:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    8875:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8879:	8b 50 58             	mov    edx,DWORD PTR [rax+0x58]
    887c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8880:	48 8d 70 29          	lea    rsi,[rax+0x29]
    8884:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8887:	41 89 f9             	mov    r9d,edi
    888a:	49 89 c8             	mov    r8,rcx
    888d:	89 d1                	mov    ecx,edx
    888f:	48 89 f2             	mov    rdx,rsi
    8892:	89 c6                	mov    esi,eax
    8894:	48 8d 3d fd 4f 00 00 	lea    rdi,[rip+0x4ffd]        # d898 <_IO_stdin_used+0x1898>
    889b:	b8 00 00 00 00       	mov    eax,0x0
    88a0:	e8 db 9b ff ff       	call   2480 <printf@plt>
    88a5:	e9 6d 01 00 00       	jmp    8a17 <add_new_conversation+0x227>
    88aa:	b8 00 00 00 00       	mov    eax,0x0
    88af:	e8 be fe ff ff       	call   8772 <get_new_spi_location>
    88b4:	48 98                	cdqe   
    88b6:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    88bd:	48 8d 15 1c 17 10 00 	lea    rdx,[rip+0x10171c]        # 109fe0 <spi_table>
    88c4:	48 01 d0             	add    rax,rdx
    88c7:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    88cb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    88cf:	ba 08 00 00 00       	mov    edx,0x8
    88d4:	be 00 00 00 00       	mov    esi,0x0
    88d9:	48 89 c7             	mov    rdi,rax
    88dc:	e8 af 9b ff ff       	call   2490 <memset@plt>
    88e1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    88e5:	c6 80 b0 00 00 00 01 	mov    BYTE PTR [rax+0xb0],0x1
    88ec:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    88f0:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    88f4:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    88f8:	48 83 c2 29          	add    rdx,0x29
    88fc:	48 89 c6             	mov    rsi,rax
    88ff:	48 89 d7             	mov    rdi,rdx
    8902:	e8 69 9e ff ff       	call   2770 <strcpy@plt>
    8907:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    890b:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
    890f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8913:	48 89 d6             	mov    rsi,rdx
    8916:	48 89 c7             	mov    rdi,rax
    8919:	e8 52 9e ff ff       	call   2770 <strcpy@plt>
    891e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8922:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    8925:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8929:	89 50 58             	mov    DWORD PTR [rax+0x58],edx
    892c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8930:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    8933:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8937:	89 50 54             	mov    DWORD PTR [rax+0x54],edx
    893a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    893e:	c7 40 78 00 00 00 00 	mov    DWORD PTR [rax+0x78],0x0
    8945:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8949:	48 8d 50 5c          	lea    rdx,[rax+0x5c]
    894d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8951:	48 89 50 70          	mov    QWORD PTR [rax+0x70],rdx
    8955:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8959:	48 8d 50 60          	lea    rdx,[rax+0x60]
    895d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8961:	48 89 50 68          	mov    QWORD PTR [rax+0x68],rdx
    8965:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8969:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    896d:	48 89 d6             	mov    rsi,rdx
    8970:	48 89 c7             	mov    rdi,rax
    8973:	e8 73 04 00 00       	call   8deb <increment_stats>
    8978:	bf 00 00 00 00       	mov    edi,0x0
    897d:	e8 ee 9e ff ff       	call   2870 <time@plt>
    8982:	48 89 c2             	mov    rdx,rax
    8985:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8989:	48 89 90 90 00 00 00 	mov    QWORD PTR [rax+0x90],rdx
    8990:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8994:	c7 40 7c 00 00 00 00 	mov    DWORD PTR [rax+0x7c],0x0
    899b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    899f:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    89a2:	8d 50 01             	lea    edx,[rax+0x1]
    89a5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    89a9:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    89ac:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    89b0:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    89b3:	89 c2                	mov    edx,eax
    89b5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    89b9:	89 90 a4 00 00 00    	mov    DWORD PTR [rax+0xa4],edx
    89bf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    89c3:	8b 78 54             	mov    edi,DWORD PTR [rax+0x54]
    89c6:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    89ca:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    89ce:	8b 50 58             	mov    edx,DWORD PTR [rax+0x58]
    89d1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    89d5:	48 8d 70 29          	lea    rsi,[rax+0x29]
    89d9:	8b 05 61 86 00 00    	mov    eax,DWORD PTR [rip+0x8661]        # 11040 <total_conversations>
    89df:	41 89 f9             	mov    r9d,edi
    89e2:	49 89 c8             	mov    r8,rcx
    89e5:	89 d1                	mov    ecx,edx
    89e7:	48 89 f2             	mov    rdx,rsi
    89ea:	89 c6                	mov    esi,eax
    89ec:	48 8d 3d cd 4e 00 00 	lea    rdi,[rip+0x4ecd]        # d8c0 <_IO_stdin_used+0x18c0>
    89f3:	b8 00 00 00 00       	mov    eax,0x0
    89f8:	e8 83 9a ff ff       	call   2480 <printf@plt>
    89fd:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a01:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    8a04:	83 f8 7e             	cmp    eax,0x7e
    8a07:	75 0e                	jne    8a17 <add_new_conversation+0x227>
    8a09:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8a0d:	c7 80 88 00 00 00 f3 	mov    DWORD PTR [rax+0x88],0xf3
    8a14:	00 00 00 
    8a17:	90                   	nop
    8a18:	c9                   	leave  
    8a19:	c3                   	ret    

0000000000008a1a <spi_ud_thw>:
    8a1a:	f3 0f 1e fa          	endbr64 
    8a1e:	55                   	push   rbp
    8a1f:	48 89 e5             	mov    rbp,rsp
    8a22:	48 83 ec 20          	sub    rsp,0x20
    8a26:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8a2a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a2e:	48 89 c7             	mov    rdi,rax
    8a31:	e8 06 fc ff ff       	call   863c <conversation_exists>
    8a36:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    8a39:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    8a3d:	0f 84 97 00 00 00    	je     8ada <spi_ud_thw+0xc0>
    8a43:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8a46:	48 98                	cdqe   
    8a48:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8a4f:	48 8d 15 8a 15 10 00 	lea    rdx,[rip+0x10158a]        # 109fe0 <spi_table>
    8a56:	48 01 d0             	add    rax,rdx
    8a59:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8a5d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8a61:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    8a64:	8d 50 01             	lea    edx,[rax+0x1]
    8a67:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8a6b:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    8a6e:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8a72:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a76:	48 89 d6             	mov    rsi,rdx
    8a79:	48 89 c7             	mov    rdi,rax
    8a7c:	e8 6a 03 00 00       	call   8deb <increment_stats>
    8a81:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a85:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    8a88:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a8c:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    8a90:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a94:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    8a97:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a9b:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    8a9f:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8aa2:	41 89 f9             	mov    r9d,edi
    8aa5:	49 89 f0             	mov    r8,rsi
    8aa8:	89 c6                	mov    esi,eax
    8aaa:	48 8d 3d 37 4e 00 00 	lea    rdi,[rip+0x4e37]        # d8e8 <_IO_stdin_used+0x18e8>
    8ab1:	b8 00 00 00 00       	mov    eax,0x0
    8ab6:	e8 c5 99 ff ff       	call   2480 <printf@plt>
    8abb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8abf:	8b 80 88 00 00 00    	mov    eax,DWORD PTR [rax+0x88]
    8ac5:	3d f3 00 00 00       	cmp    eax,0xf3
    8aca:	75 0e                	jne    8ada <spi_ud_thw+0xc0>
    8acc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8ad0:	c7 80 88 00 00 00 f4 	mov    DWORD PTR [rax+0x88],0xf4
    8ad7:	00 00 00 
    8ada:	90                   	nop
    8adb:	c9                   	leave  
    8adc:	c3                   	ret    

0000000000008add <update_table>:
    8add:	f3 0f 1e fa          	endbr64 
    8ae1:	55                   	push   rbp
    8ae2:	48 89 e5             	mov    rbp,rsp
    8ae5:	48 83 ec 30          	sub    rsp,0x30
    8ae9:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    8aed:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8af4:	00 00 
    8af6:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8afa:	31 c0                	xor    eax,eax
    8afc:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8b00:	48 89 c7             	mov    rdi,rax
    8b03:	e8 34 fb ff ff       	call   863c <conversation_exists>
    8b08:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
    8b0b:	83 7d e4 ff          	cmp    DWORD PTR [rbp-0x1c],0xffffffff
    8b0f:	0f 84 4c 01 00 00    	je     8c61 <update_table+0x184>
    8b15:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    8b18:	48 98                	cdqe   
    8b1a:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8b21:	48 8d 15 b8 14 10 00 	lea    rdx,[rip+0x1014b8]        # 109fe0 <spi_table>
    8b28:	48 01 d0             	add    rax,rdx
    8b2b:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    8b2f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8b33:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    8b36:	8d 50 01             	lea    edx,[rax+0x1]
    8b39:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8b3d:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    8b40:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    8b44:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8b48:	48 89 d6             	mov    rsi,rdx
    8b4b:	48 89 c7             	mov    rdi,rax
    8b4e:	e8 98 02 00 00       	call   8deb <increment_stats>
    8b53:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8b57:	8b 80 88 00 00 00    	mov    eax,DWORD PTR [rax+0x88]
    8b5d:	3d f4 00 00 00       	cmp    eax,0xf4
    8b62:	75 4d                	jne    8bb1 <update_table+0xd4>
    8b64:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8b68:	c7 80 88 00 00 00 f1 	mov    DWORD PTR [rax+0x88],0xf1
    8b6f:	00 00 00 
    8b72:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8b76:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    8b79:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8b7d:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    8b81:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8b85:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    8b88:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8b8c:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    8b90:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    8b93:	41 89 f9             	mov    r9d,edi
    8b96:	49 89 f0             	mov    r8,rsi
    8b99:	89 c6                	mov    esi,eax
    8b9b:	48 8d 3d 6e 4d 00 00 	lea    rdi,[rip+0x4d6e]        # d910 <_IO_stdin_used+0x1910>
    8ba2:	b8 00 00 00 00       	mov    eax,0x0
    8ba7:	e8 d4 98 ff ff       	call   2480 <printf@plt>
    8bac:	e9 b0 00 00 00       	jmp    8c61 <update_table+0x184>
    8bb1:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8bb5:	8b 80 88 00 00 00    	mov    eax,DWORD PTR [rax+0x88]
    8bbb:	3d f6 00 00 00       	cmp    eax,0xf6
    8bc0:	0f 85 9b 00 00 00    	jne    8c61 <update_table+0x184>
    8bc6:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8bca:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    8bcd:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8bd1:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    8bd5:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8bd9:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    8bdc:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8be0:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    8be4:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    8be7:	41 89 f9             	mov    r9d,edi
    8bea:	49 89 f0             	mov    r8,rsi
    8bed:	89 c6                	mov    esi,eax
    8bef:	48 8d 3d 4a 4d 00 00 	lea    rdi,[rip+0x4d4a]        # d940 <_IO_stdin_used+0x1940>
    8bf6:	b8 00 00 00 00       	mov    eax,0x0
    8bfb:	e8 80 98 ff ff       	call   2480 <printf@plt>
    8c00:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8c04:	c7 80 88 00 00 00 fa 	mov    DWORD PTR [rax+0x88],0xfa
    8c0b:	00 00 00 
    8c0e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8c12:	c6 80 b0 00 00 00 00 	mov    BYTE PTR [rax+0xb0],0x0
    8c19:	bf 00 00 00 00       	mov    edi,0x0
    8c1e:	e8 4d 9c ff ff       	call   2870 <time@plt>
    8c23:	48 89 c2             	mov    rdx,rax
    8c26:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8c2a:	48 89 90 98 00 00 00 	mov    QWORD PTR [rax+0x98],rdx
    8c31:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    8c35:	48 8d 45 e8          	lea    rax,[rbp-0x18]
    8c39:	48 89 d1             	mov    rcx,rdx
    8c3c:	48 8d 15 cf f3 ff ff 	lea    rdx,[rip+0xfffffffffffff3cf]        # 8012 <update_spi_db>
    8c43:	be 00 00 00 00       	mov    esi,0x0
    8c48:	48 89 c7             	mov    rdi,rax
    8c4b:	e8 80 99 ff ff       	call   25d0 <pthread_create@plt>
    8c50:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8c54:	be 00 00 00 00       	mov    esi,0x0
    8c59:	48 89 c7             	mov    rdi,rax
    8c5c:	e8 0f 98 ff ff       	call   2470 <pthread_join@plt>
    8c61:	90                   	nop
    8c62:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c66:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    8c6d:	00 00 
    8c6f:	74 05                	je     8c76 <update_table+0x199>
    8c71:	e8 ca 9a ff ff       	call   2740 <__stack_chk_fail@plt>
    8c76:	c9                   	leave  
    8c77:	c3                   	ret    

0000000000008c78 <polite_end>:
    8c78:	f3 0f 1e fa          	endbr64 
    8c7c:	55                   	push   rbp
    8c7d:	48 89 e5             	mov    rbp,rsp
    8c80:	48 83 ec 20          	sub    rsp,0x20
    8c84:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8c88:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8c8c:	48 89 c7             	mov    rdi,rax
    8c8f:	e8 a8 f9 ff ff       	call   863c <conversation_exists>
    8c94:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    8c97:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    8c9b:	0f 84 e1 00 00 00    	je     8d82 <polite_end+0x10a>
    8ca1:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8ca4:	48 98                	cdqe   
    8ca6:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8cad:	48 8d 15 2c 13 10 00 	lea    rdx,[rip+0x10132c]        # 109fe0 <spi_table>
    8cb4:	48 01 d0             	add    rax,rdx
    8cb7:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8cbb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8cbf:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    8cc2:	8d 50 01             	lea    edx,[rax+0x1]
    8cc5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8cc9:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    8ccc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8cd0:	8b 80 88 00 00 00    	mov    eax,DWORD PTR [rax+0x88]
    8cd6:	3d f5 00 00 00       	cmp    eax,0xf5
    8cdb:	75 4a                	jne    8d27 <polite_end+0xaf>
    8cdd:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8ce1:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    8ce4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8ce8:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    8cec:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8cf0:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    8cf3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8cf7:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    8cfb:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8cfe:	41 89 f9             	mov    r9d,edi
    8d01:	49 89 f0             	mov    r8,rsi
    8d04:	89 c6                	mov    esi,eax
    8d06:	48 8d 3d 6b 4c 00 00 	lea    rdi,[rip+0x4c6b]        # d978 <_IO_stdin_used+0x1978>
    8d0d:	b8 00 00 00 00       	mov    eax,0x0
    8d12:	e8 69 97 ff ff       	call   2480 <printf@plt>
    8d17:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d1b:	c7 80 88 00 00 00 f6 	mov    DWORD PTR [rax+0x88],0xf6
    8d22:	00 00 00 
    8d25:	eb 48                	jmp    8d6f <polite_end+0xf7>
    8d27:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d2b:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    8d2e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d32:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    8d36:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d3a:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    8d3d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d41:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    8d45:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8d48:	41 89 f9             	mov    r9d,edi
    8d4b:	49 89 f0             	mov    r8,rsi
    8d4e:	89 c6                	mov    esi,eax
    8d50:	48 8d 3d 59 4c 00 00 	lea    rdi,[rip+0x4c59]        # d9b0 <_IO_stdin_used+0x19b0>
    8d57:	b8 00 00 00 00       	mov    eax,0x0
    8d5c:	e8 1f 97 ff ff       	call   2480 <printf@plt>
    8d61:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d65:	c7 80 88 00 00 00 f5 	mov    DWORD PTR [rax+0x88],0xf5
    8d6c:	00 00 00 
    8d6f:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8d73:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d77:	48 89 d6             	mov    rsi,rdx
    8d7a:	48 89 c7             	mov    rdi,rax
    8d7d:	e8 69 00 00 00       	call   8deb <increment_stats>
    8d82:	90                   	nop
    8d83:	c9                   	leave  
    8d84:	c3                   	ret    

0000000000008d85 <handle_data_pkt>:
    8d85:	f3 0f 1e fa          	endbr64 
    8d89:	55                   	push   rbp
    8d8a:	48 89 e5             	mov    rbp,rsp
    8d8d:	48 83 ec 20          	sub    rsp,0x20
    8d91:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8d95:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d99:	48 89 c7             	mov    rdi,rax
    8d9c:	e8 9b f8 ff ff       	call   863c <conversation_exists>
    8da1:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    8da4:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    8da8:	74 3e                	je     8de8 <handle_data_pkt+0x63>
    8daa:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8dad:	48 98                	cdqe   
    8daf:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8db6:	48 8d 15 23 12 10 00 	lea    rdx,[rip+0x101223]        # 109fe0 <spi_table>
    8dbd:	48 01 d0             	add    rax,rdx
    8dc0:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8dc4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8dc8:	8b 40 78             	mov    eax,DWORD PTR [rax+0x78]
    8dcb:	8d 50 01             	lea    edx,[rax+0x1]
    8dce:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8dd2:	89 50 78             	mov    DWORD PTR [rax+0x78],edx
    8dd5:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8dd9:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8ddd:	48 89 d6             	mov    rsi,rdx
    8de0:	48 89 c7             	mov    rdi,rax
    8de3:	e8 03 00 00 00       	call   8deb <increment_stats>
    8de8:	90                   	nop
    8de9:	c9                   	leave  
    8dea:	c3                   	ret    

0000000000008deb <increment_stats>:
    8deb:	f3 0f 1e fa          	endbr64 
    8def:	55                   	push   rbp
    8df0:	48 89 e5             	mov    rbp,rsp
    8df3:	48 83 ec 10          	sub    rsp,0x10
    8df7:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    8dfb:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    8dff:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8e03:	48 8d 50 29          	lea    rdx,[rax+0x29]
    8e07:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e0b:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8e0f:	48 89 d6             	mov    rsi,rdx
    8e12:	48 89 c7             	mov    rdi,rax
    8e15:	e8 36 99 ff ff       	call   2750 <strcmp@plt>
    8e1a:	85 c0                	test   eax,eax
    8e1c:	75 13                	jne    8e31 <increment_stats+0x46>
    8e1e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8e22:	8b 40 60             	mov    eax,DWORD PTR [rax+0x60]
    8e25:	8d 50 01             	lea    edx,[rax+0x1]
    8e28:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8e2c:	89 50 60             	mov    DWORD PTR [rax+0x60],edx
    8e2f:	eb 2c                	jmp    8e5d <increment_stats+0x72>
    8e31:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    8e35:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e39:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8e3d:	48 89 d6             	mov    rsi,rdx
    8e40:	48 89 c7             	mov    rdi,rax
    8e43:	e8 08 99 ff ff       	call   2750 <strcmp@plt>
    8e48:	85 c0                	test   eax,eax
    8e4a:	75 11                	jne    8e5d <increment_stats+0x72>
    8e4c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8e50:	8b 40 5c             	mov    eax,DWORD PTR [rax+0x5c]
    8e53:	8d 50 01             	lea    edx,[rax+0x1]
    8e56:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8e5a:	89 50 5c             	mov    DWORD PTR [rax+0x5c],edx
    8e5d:	90                   	nop
    8e5e:	c9                   	leave  
    8e5f:	c3                   	ret    

0000000000008e60 <lprintf>:
    8e60:	f3 0f 1e fa          	endbr64 
    8e64:	55                   	push   rbp
    8e65:	48 89 e5             	mov    rbp,rsp
    8e68:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
    8e6f:	48 89 bd 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rdi
    8e76:	48 89 b5 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rsi
    8e7d:	48 89 95 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdx
    8e84:	48 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rcx
    8e8b:	4c 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r8
    8e92:	4c 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r9
    8e99:	84 c0                	test   al,al
    8e9b:	74 20                	je     8ebd <lprintf+0x5d>
    8e9d:	0f 29 45 80          	movaps XMMWORD PTR [rbp-0x80],xmm0
    8ea1:	0f 29 4d 90          	movaps XMMWORD PTR [rbp-0x70],xmm1
    8ea5:	0f 29 55 a0          	movaps XMMWORD PTR [rbp-0x60],xmm2
    8ea9:	0f 29 5d b0          	movaps XMMWORD PTR [rbp-0x50],xmm3
    8ead:	0f 29 65 c0          	movaps XMMWORD PTR [rbp-0x40],xmm4
    8eb1:	0f 29 6d d0          	movaps XMMWORD PTR [rbp-0x30],xmm5
    8eb5:	0f 29 75 e0          	movaps XMMWORD PTR [rbp-0x20],xmm6
    8eb9:	0f 29 7d f0          	movaps XMMWORD PTR [rbp-0x10],xmm7
    8ebd:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8ec4:	00 00 
    8ec6:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    8ecd:	31 c0                	xor    eax,eax
    8ecf:	c7 85 30 ff ff ff 10 	mov    DWORD PTR [rbp-0xd0],0x10
    8ed6:	00 00 00 
    8ed9:	c7 85 34 ff ff ff 30 	mov    DWORD PTR [rbp-0xcc],0x30
    8ee0:	00 00 00 
    8ee3:	48 8d 45 10          	lea    rax,[rbp+0x10]
    8ee7:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    8eee:	48 8d 85 50 ff ff ff 	lea    rax,[rbp-0xb0]
    8ef5:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    8efc:	48 8d 95 30 ff ff ff 	lea    rdx,[rbp-0xd0]
    8f03:	48 8b 8d 20 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xe0]
    8f0a:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    8f11:	48 89 ce             	mov    rsi,rcx
    8f14:	48 89 c7             	mov    rdi,rax
    8f17:	b8 00 00 00 00       	mov    eax,0x0
    8f1c:	e8 ff 98 ff ff       	call   2820 <fprintf@plt>
    8f21:	90                   	nop
    8f22:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    8f29:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    8f30:	00 00 
    8f32:	74 05                	je     8f39 <lprintf+0xd9>
    8f34:	e8 07 98 ff ff       	call   2740 <__stack_chk_fail@plt>
    8f39:	c9                   	leave  
    8f3a:	c3                   	ret    

0000000000008f3b <lfprintf>:
    8f3b:	f3 0f 1e fa          	endbr64 
    8f3f:	55                   	push   rbp
    8f40:	48 89 e5             	mov    rbp,rsp
    8f43:	48 81 ec 90 08 00 00 	sub    rsp,0x890
    8f4a:	48 89 bd 98 f7 ff ff 	mov    QWORD PTR [rbp-0x868],rdi
    8f51:	48 89 b5 90 f7 ff ff 	mov    QWORD PTR [rbp-0x870],rsi
    8f58:	48 89 95 88 f7 ff ff 	mov    QWORD PTR [rbp-0x878],rdx
    8f5f:	48 89 8d 80 f7 ff ff 	mov    QWORD PTR [rbp-0x880],rcx
    8f66:	44 89 85 7c f7 ff ff 	mov    DWORD PTR [rbp-0x884],r8d
    8f6d:	44 89 8d 78 f7 ff ff 	mov    DWORD PTR [rbp-0x888],r9d
    8f74:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8f7b:	00 00 
    8f7d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8f81:	31 c0                	xor    eax,eax
    8f83:	48 8b 85 98 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x868]
    8f8a:	48 8d 35 57 4a 00 00 	lea    rsi,[rip+0x4a57]        # d9e8 <_IO_stdin_used+0x19e8>
    8f91:	48 89 c7             	mov    rdi,rax
    8f94:	e8 d7 95 ff ff       	call   2570 <fopen@plt>
    8f99:	48 89 85 a8 f7 ff ff 	mov    QWORD PTR [rbp-0x858],rax
    8fa0:	48 83 bd a8 f7 ff ff 	cmp    QWORD PTR [rbp-0x858],0x0
    8fa7:	00 
    8fa8:	75 20                	jne    8fca <lfprintf+0x8f>
    8faa:	48 8b 85 90 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x870]
    8fb1:	48 89 c6             	mov    rsi,rax
    8fb4:	48 8d 3d 35 4a 00 00 	lea    rdi,[rip+0x4a35]        # d9f0 <_IO_stdin_used+0x19f0>
    8fbb:	b8 00 00 00 00       	mov    eax,0x0
    8fc0:	e8 bb 94 ff ff       	call   2480 <printf@plt>
    8fc5:	e9 cd 00 00 00       	jmp    9097 <lfprintf+0x15c>
    8fca:	48 8d 85 b0 f7 ff ff 	lea    rax,[rbp-0x850]
    8fd1:	48 89 c7             	mov    rdi,rax
    8fd4:	e8 3a a4 ff ff       	call   3413 <cb_get_formatted_time>
    8fd9:	83 bd 7c f7 ff ff ff 	cmp    DWORD PTR [rbp-0x884],0xffffffff
    8fe0:	75 3f                	jne    9021 <lfprintf+0xe6>
    8fe2:	48 8b bd 80 f7 ff ff 	mov    rdi,QWORD PTR [rbp-0x880]
    8fe9:	48 8b b5 88 f7 ff ff 	mov    rsi,QWORD PTR [rbp-0x878]
    8ff0:	48 8b 8d 90 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x870]
    8ff7:	48 8d 95 b0 f7 ff ff 	lea    rdx,[rbp-0x850]
    8ffe:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    9005:	49 89 f9             	mov    r9,rdi
    9008:	49 89 f0             	mov    r8,rsi
    900b:	48 8d 35 0c 4a 00 00 	lea    rsi,[rip+0x4a0c]        # da1e <_IO_stdin_used+0x1a1e>
    9012:	48 89 c7             	mov    rdi,rax
    9015:	b8 00 00 00 00       	mov    eax,0x0
    901a:	e8 01 96 ff ff       	call   2620 <sprintf@plt>
    901f:	eb 4e                	jmp    906f <lfprintf+0x134>
    9021:	44 8b 85 7c f7 ff ff 	mov    r8d,DWORD PTR [rbp-0x884]
    9028:	48 8b bd 88 f7 ff ff 	mov    rdi,QWORD PTR [rbp-0x878]
    902f:	48 8b 8d 90 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x870]
    9036:	48 8d 95 b0 f7 ff ff 	lea    rdx,[rbp-0x850]
    903d:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    9044:	8b b5 78 f7 ff ff    	mov    esi,DWORD PTR [rbp-0x888]
    904a:	56                   	push   rsi
    904b:	ff b5 80 f7 ff ff    	push   QWORD PTR [rbp-0x880]
    9051:	45 89 c1             	mov    r9d,r8d
    9054:	49 89 f8             	mov    r8,rdi
    9057:	48 8d 35 d0 49 00 00 	lea    rsi,[rip+0x49d0]        # da2e <_IO_stdin_used+0x1a2e>
    905e:	48 89 c7             	mov    rdi,rax
    9061:	b8 00 00 00 00       	mov    eax,0x0
    9066:	e8 b5 95 ff ff       	call   2620 <sprintf@plt>
    906b:	48 83 c4 10          	add    rsp,0x10
    906f:	48 8b 95 a8 f7 ff ff 	mov    rdx,QWORD PTR [rbp-0x858]
    9076:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    907d:	48 89 d6             	mov    rsi,rdx
    9080:	48 89 c7             	mov    rdi,rax
    9083:	e8 08 96 ff ff       	call   2690 <fputs@plt>
    9088:	48 8b 85 a8 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x858]
    908f:	48 89 c7             	mov    rdi,rax
    9092:	e8 19 97 ff ff       	call   27b0 <fclose@plt>
    9097:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    909b:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    90a2:	00 00 
    90a4:	74 05                	je     90ab <lfprintf+0x170>
    90a6:	e8 95 96 ff ff       	call   2740 <__stack_chk_fail@plt>
    90ab:	c9                   	leave  
    90ac:	c3                   	ret    

00000000000090ad <saprintf>:
    90ad:	f3 0f 1e fa          	endbr64 
    90b1:	55                   	push   rbp
    90b2:	48 89 e5             	mov    rbp,rsp
    90b5:	48 83 ec 20          	sub    rsp,0x20
    90b9:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    90bd:	48 8b 05 6c 7f 00 00 	mov    rax,QWORD PTR [rip+0x7f6c]        # 11030 <def_log_file>
    90c4:	48 8d 35 1d 49 00 00 	lea    rsi,[rip+0x491d]        # d9e8 <_IO_stdin_used+0x19e8>
    90cb:	48 89 c7             	mov    rdi,rax
    90ce:	e8 9d 94 ff ff       	call   2570 <fopen@plt>
    90d3:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    90d7:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    90dc:	75 1a                	jne    90f8 <saprintf+0x4b>
    90de:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    90e2:	48 89 c6             	mov    rsi,rax
    90e5:	48 8d 3d 04 49 00 00 	lea    rdi,[rip+0x4904]        # d9f0 <_IO_stdin_used+0x19f0>
    90ec:	b8 00 00 00 00       	mov    eax,0x0
    90f1:	e8 8a 93 ff ff       	call   2480 <printf@plt>
    90f6:	eb 1f                	jmp    9117 <saprintf+0x6a>
    90f8:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    90fc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9100:	48 89 d6             	mov    rsi,rdx
    9103:	48 89 c7             	mov    rdi,rax
    9106:	e8 85 95 ff ff       	call   2690 <fputs@plt>
    910b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    910f:	48 89 c7             	mov    rdi,rax
    9112:	e8 99 96 ff ff       	call   27b0 <fclose@plt>
    9117:	c9                   	leave  
    9118:	c3                   	ret    

0000000000009119 <substr>:
    9119:	f3 0f 1e fa          	endbr64 
    911d:	55                   	push   rbp
    911e:	48 89 e5             	mov    rbp,rsp
    9121:	48 83 ec 20          	sub    rsp,0x20
    9125:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    9129:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    912c:	89 55 e0             	mov    DWORD PTR [rbp-0x20],edx
    912f:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
    9132:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    9135:	83 c0 02             	add    eax,0x2
    9138:	48 98                	cdqe   
    913a:	48 89 c7             	mov    rdi,rax
    913d:	e8 1e 94 ff ff       	call   2560 <malloc@plt>
    9142:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9146:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    9149:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    914c:	eb 27                	jmp    9175 <substr+0x5c>
    914e:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    9151:	48 63 d0             	movsxd rdx,eax
    9154:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9158:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    915c:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    915f:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    9162:	48 63 d0             	movsxd rdx,eax
    9165:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9169:	48 01 c2             	add    rdx,rax
    916c:	0f b6 01             	movzx  eax,BYTE PTR [rcx]
    916f:	88 02                	mov    BYTE PTR [rdx],al
    9171:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    9175:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    9178:	3b 45 e0             	cmp    eax,DWORD PTR [rbp-0x20]
    917b:	7e d1                	jle    914e <substr+0x35>
    917d:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
    9180:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    9183:	48 98                	cdqe   
    9185:	48 8d 50 01          	lea    rdx,[rax+0x1]
    9189:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    918d:	48 01 d0             	add    rax,rdx
    9190:	c6 00 00             	mov    BYTE PTR [rax],0x0
    9193:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9197:	c9                   	leave  
    9198:	c3                   	ret    

0000000000009199 <delimit>:
    9199:	f3 0f 1e fa          	endbr64 
    919d:	55                   	push   rbp
    919e:	48 89 e5             	mov    rbp,rsp
    91a1:	89 f8                	mov    eax,edi
    91a3:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
    91a6:	80 7d fc 20          	cmp    BYTE PTR [rbp-0x4],0x20
    91aa:	0f 94 c0             	sete   al
    91ad:	5d                   	pop    rbp
    91ae:	c3                   	ret    

00000000000091af <isdigit>:
    91af:	f3 0f 1e fa          	endbr64 
    91b3:	55                   	push   rbp
    91b4:	48 89 e5             	mov    rbp,rsp
    91b7:	53                   	push   rbx
    91b8:	48 83 ec 28          	sub    rsp,0x28
    91bc:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    91c0:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    91c7:	e9 f7 00 00 00       	jmp    92c3 <isdigit+0x114>
    91cc:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    91cf:	48 63 d0             	movsxd rdx,eax
    91d2:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    91d6:	48 01 d0             	add    rax,rdx
    91d9:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    91dc:	3c 30                	cmp    al,0x30
    91de:	0f 84 db 00 00 00    	je     92bf <isdigit+0x110>
    91e4:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    91e7:	48 63 d0             	movsxd rdx,eax
    91ea:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    91ee:	48 01 d0             	add    rax,rdx
    91f1:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    91f4:	3c 31                	cmp    al,0x31
    91f6:	0f 84 c3 00 00 00    	je     92bf <isdigit+0x110>
    91fc:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    91ff:	48 63 d0             	movsxd rdx,eax
    9202:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9206:	48 01 d0             	add    rax,rdx
    9209:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    920c:	3c 32                	cmp    al,0x32
    920e:	0f 84 ab 00 00 00    	je     92bf <isdigit+0x110>
    9214:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9217:	48 63 d0             	movsxd rdx,eax
    921a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    921e:	48 01 d0             	add    rax,rdx
    9221:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9224:	3c 33                	cmp    al,0x33
    9226:	0f 84 93 00 00 00    	je     92bf <isdigit+0x110>
    922c:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    922f:	48 63 d0             	movsxd rdx,eax
    9232:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9236:	48 01 d0             	add    rax,rdx
    9239:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    923c:	3c 34                	cmp    al,0x34
    923e:	74 7f                	je     92bf <isdigit+0x110>
    9240:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9243:	48 63 d0             	movsxd rdx,eax
    9246:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    924a:	48 01 d0             	add    rax,rdx
    924d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9250:	3c 34                	cmp    al,0x34
    9252:	74 6b                	je     92bf <isdigit+0x110>
    9254:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9257:	48 63 d0             	movsxd rdx,eax
    925a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    925e:	48 01 d0             	add    rax,rdx
    9261:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9264:	3c 35                	cmp    al,0x35
    9266:	74 57                	je     92bf <isdigit+0x110>
    9268:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    926b:	48 63 d0             	movsxd rdx,eax
    926e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9272:	48 01 d0             	add    rax,rdx
    9275:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9278:	3c 36                	cmp    al,0x36
    927a:	74 43                	je     92bf <isdigit+0x110>
    927c:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    927f:	48 63 d0             	movsxd rdx,eax
    9282:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9286:	48 01 d0             	add    rax,rdx
    9289:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    928c:	3c 37                	cmp    al,0x37
    928e:	74 2f                	je     92bf <isdigit+0x110>
    9290:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9293:	48 63 d0             	movsxd rdx,eax
    9296:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    929a:	48 01 d0             	add    rax,rdx
    929d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    92a0:	3c 38                	cmp    al,0x38
    92a2:	74 1b                	je     92bf <isdigit+0x110>
    92a4:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    92a7:	48 63 d0             	movsxd rdx,eax
    92aa:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    92ae:	48 01 d0             	add    rax,rdx
    92b1:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    92b4:	3c 39                	cmp    al,0x39
    92b6:	74 07                	je     92bf <isdigit+0x110>
    92b8:	b8 00 00 00 00       	mov    eax,0x0
    92bd:	eb 24                	jmp    92e3 <isdigit+0x134>
    92bf:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    92c3:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    92c6:	48 63 d8             	movsxd rbx,eax
    92c9:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    92cd:	48 89 c7             	mov    rdi,rax
    92d0:	e8 2b 93 ff ff       	call   2600 <strlen@plt>
    92d5:	48 39 c3             	cmp    rbx,rax
    92d8:	0f 82 ee fe ff ff    	jb     91cc <isdigit+0x1d>
    92de:	b8 01 00 00 00       	mov    eax,0x1
    92e3:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    92e7:	c9                   	leave  
    92e8:	c3                   	ret    

00000000000092e9 <assign_port_number>:
    92e9:	f3 0f 1e fa          	endbr64 
    92ed:	55                   	push   rbp
    92ee:	48 89 e5             	mov    rbp,rsp
    92f1:	48 83 ec 10          	sub    rsp,0x10
    92f5:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    92f9:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    92fd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9301:	48 89 c7             	mov    rdi,rax
    9304:	e8 a6 fe ff ff       	call   91af <isdigit>
    9309:	84 c0                	test   al,al
    930b:	74 18                	je     9325 <assign_port_number+0x3c>
    930d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9311:	48 89 c7             	mov    rdi,rax
    9314:	e8 a7 93 ff ff       	call   26c0 <atoi@plt>
    9319:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    931d:	89 82 44 01 00 00    	mov    DWORD PTR [rdx+0x144],eax
    9323:	eb 25                	jmp    934a <assign_port_number+0x61>
    9325:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9329:	48 8d 35 18 47 00 00 	lea    rsi,[rip+0x4718]        # da48 <_IO_stdin_used+0x1a48>
    9330:	48 89 c7             	mov    rdi,rax
    9333:	e8 18 94 ff ff       	call   2750 <strcmp@plt>
    9338:	85 c0                	test   eax,eax
    933a:	75 0e                	jne    934a <assign_port_number+0x61>
    933c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9340:	c7 80 44 01 00 00 ff 	mov    DWORD PTR [rax+0x144],0xffffffff
    9347:	ff ff ff 
    934a:	90                   	nop
    934b:	c9                   	leave  
    934c:	c3                   	ret    

000000000000934d <check_port_number>:
    934d:	f3 0f 1e fa          	endbr64 
    9351:	55                   	push   rbp
    9352:	48 89 e5             	mov    rbp,rsp
    9355:	48 83 ec 10          	sub    rsp,0x10
    9359:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    935d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9361:	48 89 c7             	mov    rdi,rax
    9364:	e8 46 fe ff ff       	call   91af <isdigit>
    9369:	84 c0                	test   al,al
    936b:	74 0e                	je     937b <check_port_number+0x2e>
    936d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9371:	48 89 c7             	mov    rdi,rax
    9374:	e8 47 93 ff ff       	call   26c0 <atoi@plt>
    9379:	eb 23                	jmp    939e <check_port_number+0x51>
    937b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    937f:	48 8d 35 c2 46 00 00 	lea    rsi,[rip+0x46c2]        # da48 <_IO_stdin_used+0x1a48>
    9386:	48 89 c7             	mov    rdi,rax
    9389:	e8 c2 93 ff ff       	call   2750 <strcmp@plt>
    938e:	85 c0                	test   eax,eax
    9390:	75 07                	jne    9399 <check_port_number+0x4c>
    9392:	b8 ff ff ff ff       	mov    eax,0xffffffff
    9397:	eb 05                	jmp    939e <check_port_number+0x51>
    9399:	b8 ff ff ff ff       	mov    eax,0xffffffff
    939e:	c9                   	leave  
    939f:	c3                   	ret    

00000000000093a0 <assign_protocol>:
    93a0:	f3 0f 1e fa          	endbr64 
    93a4:	55                   	push   rbp
    93a5:	48 89 e5             	mov    rbp,rsp
    93a8:	48 83 ec 10          	sub    rsp,0x10
    93ac:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    93b0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    93b4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    93b8:	48 8d 35 8d 46 00 00 	lea    rsi,[rip+0x468d]        # da4c <_IO_stdin_used+0x1a4c>
    93bf:	48 89 c7             	mov    rdi,rax
    93c2:	e8 89 93 ff ff       	call   2750 <strcmp@plt>
    93c7:	85 c0                	test   eax,eax
    93c9:	75 10                	jne    93db <assign_protocol+0x3b>
    93cb:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    93cf:	c7 80 40 01 00 00 ff 	mov    DWORD PTR [rax+0x140],0xffffffff
    93d6:	ff ff ff 
    93d9:	eb 73                	jmp    944e <assign_protocol+0xae>
    93db:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    93df:	48 8d 35 6a 46 00 00 	lea    rsi,[rip+0x466a]        # da50 <_IO_stdin_used+0x1a50>
    93e6:	48 89 c7             	mov    rdi,rax
    93e9:	e8 62 93 ff ff       	call   2750 <strcmp@plt>
    93ee:	85 c0                	test   eax,eax
    93f0:	75 10                	jne    9402 <assign_protocol+0x62>
    93f2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    93f6:	c7 80 40 01 00 00 80 	mov    DWORD PTR [rax+0x140],0x80
    93fd:	00 00 00 
    9400:	eb 4c                	jmp    944e <assign_protocol+0xae>
    9402:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9406:	48 8d 35 48 46 00 00 	lea    rsi,[rip+0x4648]        # da55 <_IO_stdin_used+0x1a55>
    940d:	48 89 c7             	mov    rdi,rax
    9410:	e8 3b 93 ff ff       	call   2750 <strcmp@plt>
    9415:	85 c0                	test   eax,eax
    9417:	75 10                	jne    9429 <assign_protocol+0x89>
    9419:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    941d:	c7 80 40 01 00 00 7e 	mov    DWORD PTR [rax+0x140],0x7e
    9424:	00 00 00 
    9427:	eb 25                	jmp    944e <assign_protocol+0xae>
    9429:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    942d:	48 8d 35 25 46 00 00 	lea    rsi,[rip+0x4625]        # da59 <_IO_stdin_used+0x1a59>
    9434:	48 89 c7             	mov    rdi,rax
    9437:	e8 14 93 ff ff       	call   2750 <strcmp@plt>
    943c:	85 c0                	test   eax,eax
    943e:	75 0e                	jne    944e <assign_protocol+0xae>
    9440:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9444:	c7 80 40 01 00 00 7f 	mov    DWORD PTR [rax+0x140],0x7f
    944b:	00 00 00 
    944e:	90                   	nop
    944f:	c9                   	leave  
    9450:	c3                   	ret    

0000000000009451 <get_ruletype>:
    9451:	f3 0f 1e fa          	endbr64 
    9455:	55                   	push   rbp
    9456:	48 89 e5             	mov    rbp,rsp
    9459:	48 83 ec 10          	sub    rsp,0x10
    945d:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9461:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    9465:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9469:	ba 09 00 00 00       	mov    edx,0x9
    946e:	48 8d 35 e8 45 00 00 	lea    rsi,[rip+0x45e8]        # da5d <_IO_stdin_used+0x1a5d>
    9475:	48 89 c7             	mov    rdi,rax
    9478:	e8 d3 90 ff ff       	call   2550 <strncmp@plt>
    947d:	85 c0                	test   eax,eax
    947f:	75 17                	jne    9498 <get_ruletype+0x47>
    9481:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9485:	48 8d 15 43 c1 ff ff 	lea    rdx,[rip+0xffffffffffffc143]        # 55cf <str_match_parser>
    948c:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    9493:	e9 82 00 00 00       	jmp    951a <get_ruletype+0xc9>
    9498:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    949c:	ba 04 00 00 00       	mov    edx,0x4
    94a1:	48 8d 35 bf 45 00 00 	lea    rsi,[rip+0x45bf]        # da67 <_IO_stdin_used+0x1a67>
    94a8:	48 89 c7             	mov    rdi,rax
    94ab:	e8 a0 90 ff ff       	call   2550 <strncmp@plt>
    94b0:	85 c0                	test   eax,eax
    94b2:	75 14                	jne    94c8 <get_ruletype+0x77>
    94b4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    94b8:	48 8d 15 b3 c3 ff ff 	lea    rdx,[rip+0xffffffffffffc3b3]        # 5872 <none>
    94bf:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    94c6:	eb 52                	jmp    951a <get_ruletype+0xc9>
    94c8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    94cc:	ba 04 00 00 00       	mov    edx,0x4
    94d1:	48 8d 35 94 45 00 00 	lea    rsi,[rip+0x4594]        # da6c <_IO_stdin_used+0x1a6c>
    94d8:	48 89 c7             	mov    rdi,rax
    94db:	e8 70 90 ff ff       	call   2550 <strncmp@plt>
    94e0:	85 c0                	test   eax,eax
    94e2:	75 14                	jne    94f8 <get_ruletype+0xa7>
    94e4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    94e8:	48 8d 15 9a c3 ff ff 	lea    rdx,[rip+0xffffffffffffc39a]        # 5889 <pcre_match>
    94ef:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    94f6:	eb 22                	jmp    951a <get_ruletype+0xc9>
    94f8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    94fc:	48 89 c6             	mov    rsi,rax
    94ff:	48 8d 3d 6b 45 00 00 	lea    rdi,[rip+0x456b]        # da71 <_IO_stdin_used+0x1a71>
    9506:	b8 00 00 00 00       	mov    eax,0x0
    950b:	e8 70 8f ff ff       	call   2480 <printf@plt>
    9510:	bf 01 00 00 00       	mov    edi,0x1
    9515:	e8 e6 8f ff ff       	call   2500 <exit@plt>
    951a:	c9                   	leave  
    951b:	c3                   	ret    

000000000000951c <numeric_check>:
    951c:	f3 0f 1e fa          	endbr64 
    9520:	55                   	push   rbp
    9521:	48 89 e5             	mov    rbp,rsp
    9524:	48 83 ec 30          	sub    rsp,0x30
    9528:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    952c:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    952f:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    9533:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9537:	48 89 c7             	mov    rdi,rax
    953a:	e8 70 fc ff ff       	call   91af <isdigit>
    953f:	84 c0                	test   al,al
    9541:	74 27                	je     956a <numeric_check+0x4e>
    9543:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9547:	48 89 c7             	mov    rdi,rax
    954a:	e8 71 91 ff ff       	call   26c0 <atoi@plt>
    954f:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
    9552:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    9555:	39 45 e4             	cmp    DWORD PTR [rbp-0x1c],eax
    9558:	77 10                	ja     956a <numeric_check+0x4e>
    955a:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    955d:	48 98                	cdqe   
    955f:	48 39 45 d8          	cmp    QWORD PTR [rbp-0x28],rax
    9563:	72 05                	jb     956a <numeric_check+0x4e>
    9565:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    9568:	eb 05                	jmp    956f <numeric_check+0x53>
    956a:	b8 ff ff ff ff       	mov    eax,0xffffffff
    956f:	c9                   	leave  
    9570:	c3                   	ret    

0000000000009571 <sc_strip>:
    9571:	f3 0f 1e fa          	endbr64 
    9575:	55                   	push   rbp
    9576:	48 89 e5             	mov    rbp,rsp
    9579:	48 83 ec 10          	sub    rsp,0x10
    957d:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9581:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9585:	48 8d 35 fc 44 00 00 	lea    rsi,[rip+0x44fc]        # da88 <_IO_stdin_used+0x1a88>
    958c:	48 89 c7             	mov    rdi,rax
    958f:	e8 3c 92 ff ff       	call   27d0 <strcspn@plt>
    9594:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    9598:	48 01 d0             	add    rax,rdx
    959b:	c6 00 00             	mov    BYTE PTR [rax],0x0
    959e:	90                   	nop
    959f:	c9                   	leave  
    95a0:	c3                   	ret    

00000000000095a1 <void_rule>:
    95a1:	f3 0f 1e fa          	endbr64 
    95a5:	55                   	push   rbp
    95a6:	48 89 e5             	mov    rbp,rsp
    95a9:	48 83 ec 10          	sub    rsp,0x10
    95ad:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    95b1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    95b5:	48 05 6e 03 00 00    	add    rax,0x36e
    95bb:	ba 0a 00 00 00       	mov    edx,0xa
    95c0:	be 00 00 00 00       	mov    esi,0x0
    95c5:	48 89 c7             	mov    rdi,rax
    95c8:	e8 c3 8e ff ff       	call   2490 <memset@plt>
    95cd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    95d1:	48 05 68 03 00 00    	add    rax,0x368
    95d7:	ba 06 00 00 00       	mov    edx,0x6
    95dc:	be 00 00 00 00       	mov    esi,0x0
    95e1:	48 89 c7             	mov    rdi,rax
    95e4:	e8 a7 8e ff ff       	call   2490 <memset@plt>
    95e9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    95ed:	48 05 50 03 00 00    	add    rax,0x350
    95f3:	ba 18 00 00 00       	mov    edx,0x18
    95f8:	be 00 00 00 00       	mov    esi,0x0
    95fd:	48 89 c7             	mov    rdi,rax
    9600:	e8 8b 8e ff ff       	call   2490 <memset@plt>
    9605:	90                   	nop
    9606:	c9                   	leave  
    9607:	c3                   	ret    

0000000000009608 <line_parser>:
    9608:	f3 0f 1e fa          	endbr64 
    960c:	55                   	push   rbp
    960d:	48 89 e5             	mov    rbp,rsp
    9610:	53                   	push   rbx
    9611:	48 81 ec 98 00 00 00 	sub    rsp,0x98
    9618:	48 89 bd 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rdi
    961f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9626:	00 00 
    9628:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    962c:	31 c0                	xor    eax,eax
    962e:	8b 05 e0 79 00 00    	mov    eax,DWORD PTR [rip+0x79e0]        # 11014 <num_rules>
    9634:	83 c0 01             	add    eax,0x1
    9637:	89 05 d7 79 00 00    	mov    DWORD PTR [rip+0x79d7],eax        # 11014 <num_rules>
    963d:	8b 05 d1 79 00 00    	mov    eax,DWORD PTR [rip+0x79d1]        # 11014 <num_rules>
    9643:	48 98                	cdqe   
    9645:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    964c:	48 8d 15 8d 7c 00 00 	lea    rdx,[rip+0x7c8d]        # 112e0 <rules>
    9653:	48 01 d0             	add    rax,rdx
    9656:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    965a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    965e:	ba 08 00 00 00       	mov    edx,0x8
    9663:	be 00 00 00 00       	mov    esi,0x0
    9668:	48 89 c7             	mov    rdi,rax
    966b:	e8 20 8e ff ff       	call   2490 <memset@plt>
    9670:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9674:	c7 80 44 01 00 00 ff 	mov    DWORD PTR [rax+0x144],0xffffffff
    967b:	ff ff ff 
    967e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9682:	c7 80 40 01 00 00 ff 	mov    DWORD PTR [rax+0x140],0xffffffff
    9689:	ff ff ff 
    968c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9690:	c7 40 1c ff ff ff ff 	mov    DWORD PTR [rax+0x1c],0xffffffff
    9697:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    969b:	c7 40 18 ff ff ff ff 	mov    DWORD PTR [rax+0x18],0xffffffff
    96a2:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    96a6:	c7 40 10 ff ff ff ff 	mov    DWORD PTR [rax+0x10],0xffffffff
    96ad:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    96b1:	c7 80 4c 03 00 00 00 	mov    DWORD PTR [rax+0x34c],0x0
    96b8:	00 00 00 
    96bb:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    96bf:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
    96c5:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    96c9:	c7 40 04 00 00 00 00 	mov    DWORD PTR [rax+0x4],0x0
    96d0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    96d4:	48 89 c7             	mov    rdi,rax
    96d7:	e8 c5 fe ff ff       	call   95a1 <void_rule>
    96dc:	c7 45 88 00 00 00 00 	mov    DWORD PTR [rbp-0x78],0x0
    96e3:	c6 85 7c ff ff ff 00 	mov    BYTE PTR [rbp-0x84],0x0
    96ea:	c7 45 80 00 00 00 00 	mov    DWORD PTR [rbp-0x80],0x0
    96f1:	c7 45 84 00 00 00 00 	mov    DWORD PTR [rbp-0x7c],0x0
    96f8:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    96ff:	48 89 c7             	mov    rdi,rax
    9702:	e8 f9 8e ff ff       	call   2600 <strlen@plt>
    9707:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    970a:	c6 85 7d ff ff ff 00 	mov    BYTE PTR [rbp-0x83],0x0
    9711:	c6 85 7e ff ff ff 00 	mov    BYTE PTR [rbp-0x82],0x0
    9718:	c6 85 7f ff ff ff 00 	mov    BYTE PTR [rbp-0x81],0x0
    971f:	e9 98 0d 00 00       	jmp    a4bc <line_parser+0xeb4>
    9724:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9727:	48 63 d0             	movsxd rdx,eax
    972a:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9731:	48 01 d0             	add    rax,rdx
    9734:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9737:	0f be c0             	movsx  eax,al
    973a:	89 c7                	mov    edi,eax
    973c:	e8 58 fa ff ff       	call   9199 <delimit>
    9741:	83 f0 01             	xor    eax,0x1
    9744:	84 c0                	test   al,al
    9746:	74 04                	je     974c <line_parser+0x144>
    9748:	83 45 84 01          	add    DWORD PTR [rbp-0x7c],0x1
    974c:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    974f:	48 63 d0             	movsxd rdx,eax
    9752:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9759:	48 01 d0             	add    rax,rdx
    975c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    975f:	0f be c0             	movsx  eax,al
    9762:	89 c7                	mov    edi,eax
    9764:	e8 30 fa ff ff       	call   9199 <delimit>
    9769:	84 c0                	test   al,al
    976b:	74 3f                	je     97ac <line_parser+0x1a4>
    976d:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9770:	3b 45 80             	cmp    eax,DWORD PTR [rbp-0x80]
    9773:	75 37                	jne    97ac <line_parser+0x1a4>
    9775:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9778:	48 63 d0             	movsxd rdx,eax
    977b:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9782:	48 01 d0             	add    rax,rdx
    9785:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9788:	3c 3a                	cmp    al,0x3a
    978a:	75 11                	jne    979d <line_parser+0x195>
    978c:	48 8d 3d f7 42 00 00 	lea    rdi,[rip+0x42f7]        # da8a <_IO_stdin_used+0x1a8a>
    9793:	b8 00 00 00 00       	mov    eax,0x0
    9798:	e8 e3 8c ff ff       	call   2480 <printf@plt>
    979d:	83 45 84 01          	add    DWORD PTR [rbp-0x7c],0x1
    97a1:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    97a4:	89 45 80             	mov    DWORD PTR [rbp-0x80],eax
    97a7:	e9 10 0d 00 00       	jmp    a4bc <line_parser+0xeb4>
    97ac:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    97af:	48 63 d0             	movsxd rdx,eax
    97b2:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    97b9:	48 01 d0             	add    rax,rdx
    97bc:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    97bf:	0f be c0             	movsx  eax,al
    97c2:	89 c7                	mov    edi,eax
    97c4:	e8 d0 f9 ff ff       	call   9199 <delimit>
    97c9:	84 c0                	test   al,al
    97cb:	74 08                	je     97d5 <line_parser+0x1cd>
    97cd:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
    97d0:	3b 45 84             	cmp    eax,DWORD PTR [rbp-0x7c]
    97d3:	75 18                	jne    97ed <line_parser+0x1e5>
    97d5:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    97d8:	3b 45 8c             	cmp    eax,DWORD PTR [rbp-0x74]
    97db:	0f 85 db 0c 00 00    	jne    a4bc <line_parser+0xeb4>
    97e1:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
    97e4:	3b 45 84             	cmp    eax,DWORD PTR [rbp-0x7c]
    97e7:	0f 84 cf 0c 00 00    	je     a4bc <line_parser+0xeb4>
    97ed:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    97f0:	8d 50 ff             	lea    edx,[rax-0x1]
    97f3:	8b 4d 80             	mov    ecx,DWORD PTR [rbp-0x80]
    97f6:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    97fd:	89 ce                	mov    esi,ecx
    97ff:	48 89 c7             	mov    rdi,rax
    9802:	e8 12 f9 ff ff       	call   9119 <substr>
    9807:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    980b:	0f b6 85 7c ff ff ff 	movzx  eax,BYTE PTR [rbp-0x84]
    9812:	83 f0 01             	xor    eax,0x1
    9815:	84 c0                	test   al,al
    9817:	0f 84 ea 02 00 00    	je     9b07 <line_parser+0x4ff>
    981d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9821:	48 8d 35 71 42 00 00 	lea    rsi,[rip+0x4271]        # da99 <_IO_stdin_used+0x1a99>
    9828:	48 89 c7             	mov    rdi,rax
    982b:	e8 20 8f ff ff       	call   2750 <strcmp@plt>
    9830:	85 c0                	test   eax,eax
    9832:	75 33                	jne    9867 <line_parser+0x25f>
    9834:	0f b6 85 7d ff ff ff 	movzx  eax,BYTE PTR [rbp-0x83]
    983b:	83 f0 01             	xor    eax,0x1
    983e:	84 c0                	test   al,al
    9840:	74 25                	je     9867 <line_parser+0x25f>
    9842:	0f b6 85 7e ff ff ff 	movzx  eax,BYTE PTR [rbp-0x82]
    9849:	83 f0 01             	xor    eax,0x1
    984c:	84 c0                	test   al,al
    984e:	74 17                	je     9867 <line_parser+0x25f>
    9850:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9854:	48 8d 15 4a bb ff ff 	lea    rdx,[rip+0xffffffffffffbb4a]        # 53a5 <stdout_alert>
    985b:	48 89 90 80 03 00 00 	mov    QWORD PTR [rax+0x380],rdx
    9862:	e9 31 0c 00 00       	jmp    a498 <line_parser+0xe90>
    9867:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    986b:	48 8d 35 de 41 00 00 	lea    rsi,[rip+0x41de]        # da50 <_IO_stdin_used+0x1a50>
    9872:	48 89 c7             	mov    rdi,rax
    9875:	e8 d6 8e ff ff       	call   2750 <strcmp@plt>
    987a:	85 c0                	test   eax,eax
    987c:	74 45                	je     98c3 <line_parser+0x2bb>
    987e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9882:	48 8d 35 c3 41 00 00 	lea    rsi,[rip+0x41c3]        # da4c <_IO_stdin_used+0x1a4c>
    9889:	48 89 c7             	mov    rdi,rax
    988c:	e8 bf 8e ff ff       	call   2750 <strcmp@plt>
    9891:	85 c0                	test   eax,eax
    9893:	74 2e                	je     98c3 <line_parser+0x2bb>
    9895:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9899:	48 8d 35 b5 41 00 00 	lea    rsi,[rip+0x41b5]        # da55 <_IO_stdin_used+0x1a55>
    98a0:	48 89 c7             	mov    rdi,rax
    98a3:	e8 a8 8e ff ff       	call   2750 <strcmp@plt>
    98a8:	85 c0                	test   eax,eax
    98aa:	74 17                	je     98c3 <line_parser+0x2bb>
    98ac:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    98b0:	48 8d 35 a2 41 00 00 	lea    rsi,[rip+0x41a2]        # da59 <_IO_stdin_used+0x1a59>
    98b7:	48 89 c7             	mov    rdi,rax
    98ba:	e8 91 8e ff ff       	call   2750 <strcmp@plt>
    98bf:	85 c0                	test   eax,eax
    98c1:	75 34                	jne    98f7 <line_parser+0x2ef>
    98c3:	0f b6 85 7e ff ff ff 	movzx  eax,BYTE PTR [rbp-0x82]
    98ca:	83 f0 01             	xor    eax,0x1
    98cd:	84 c0                	test   al,al
    98cf:	74 26                	je     98f7 <line_parser+0x2ef>
    98d1:	0f b6 85 7d ff ff ff 	movzx  eax,BYTE PTR [rbp-0x83]
    98d8:	83 f0 01             	xor    eax,0x1
    98db:	84 c0                	test   al,al
    98dd:	74 18                	je     98f7 <line_parser+0x2ef>
    98df:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    98e3:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    98e7:	48 89 d6             	mov    rsi,rdx
    98ea:	48 89 c7             	mov    rdi,rax
    98ed:	e8 ae fa ff ff       	call   93a0 <assign_protocol>
    98f2:	e9 a1 0b 00 00       	jmp    a498 <line_parser+0xe90>
    98f7:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    98fb:	48 89 c7             	mov    rdi,rax
    98fe:	e8 ac f8 ff ff       	call   91af <isdigit>
    9903:	84 c0                	test   al,al
    9905:	75 17                	jne    991e <line_parser+0x316>
    9907:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    990b:	48 8d 35 36 41 00 00 	lea    rsi,[rip+0x4136]        # da48 <_IO_stdin_used+0x1a48>
    9912:	48 89 c7             	mov    rdi,rax
    9915:	e8 36 8e ff ff       	call   2750 <strcmp@plt>
    991a:	85 c0                	test   eax,eax
    991c:	75 34                	jne    9952 <line_parser+0x34a>
    991e:	0f b6 85 7d ff ff ff 	movzx  eax,BYTE PTR [rbp-0x83]
    9925:	83 f0 01             	xor    eax,0x1
    9928:	84 c0                	test   al,al
    992a:	74 26                	je     9952 <line_parser+0x34a>
    992c:	0f b6 85 7e ff ff ff 	movzx  eax,BYTE PTR [rbp-0x82]
    9933:	83 f0 01             	xor    eax,0x1
    9936:	84 c0                	test   al,al
    9938:	74 18                	je     9952 <line_parser+0x34a>
    993a:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    993e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9942:	48 89 d6             	mov    rsi,rdx
    9945:	48 89 c7             	mov    rdi,rax
    9948:	e8 9c f9 ff ff       	call   92e9 <assign_port_number>
    994d:	e9 46 0b 00 00       	jmp    a498 <line_parser+0xe90>
    9952:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9956:	ba 08 00 00 00       	mov    edx,0x8
    995b:	48 8d 35 3d 41 00 00 	lea    rsi,[rip+0x413d]        # da9f <_IO_stdin_used+0x1a9f>
    9962:	48 89 c7             	mov    rdi,rax
    9965:	e8 e6 8b ff ff       	call   2550 <strncmp@plt>
    996a:	85 c0                	test   eax,eax
    996c:	75 75                	jne    99e3 <line_parser+0x3db>
    996e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9972:	48 8d 50 09          	lea    rdx,[rax+0x9]
    9976:	48 8d 45 de          	lea    rax,[rbp-0x22]
    997a:	48 89 d6             	mov    rsi,rdx
    997d:	48 89 c7             	mov    rdi,rax
    9980:	e8 eb 8d ff ff       	call   2770 <strcpy@plt>
    9985:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9989:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    998c:	85 c0                	test   eax,eax
    998e:	75 2e                	jne    99be <line_parser+0x3b6>
    9990:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9994:	8b 00                	mov    eax,DWORD PTR [rax]
    9996:	85 c0                	test   eax,eax
    9998:	75 24                	jne    99be <line_parser+0x3b6>
    999a:	8b 15 24 06 10 00    	mov    edx,DWORD PTR [rip+0x100624]        # 109fc4 <homenet>
    99a0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    99a4:	89 10                	mov    DWORD PTR [rax],edx
    99a6:	48 8d 45 de          	lea    rax,[rbp-0x22]
    99aa:	48 89 c7             	mov    rdi,rax
    99ad:	e8 9b f9 ff ff       	call   934d <check_port_number>
    99b2:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    99b6:	89 42 0c             	mov    DWORD PTR [rdx+0xc],eax
    99b9:	e9 da 0a 00 00       	jmp    a498 <line_parser+0xe90>
    99be:	8b 15 00 06 10 00    	mov    edx,DWORD PTR [rip+0x100600]        # 109fc4 <homenet>
    99c4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    99c8:	89 50 04             	mov    DWORD PTR [rax+0x4],edx
    99cb:	48 8d 45 de          	lea    rax,[rbp-0x22]
    99cf:	48 89 c7             	mov    rdi,rax
    99d2:	e8 76 f9 ff ff       	call   934d <check_port_number>
    99d7:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    99db:	89 42 08             	mov    DWORD PTR [rdx+0x8],eax
    99de:	e9 b5 0a 00 00       	jmp    a498 <line_parser+0xe90>
    99e3:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    99e7:	48 8d 35 ba 40 00 00 	lea    rsi,[rip+0x40ba]        # daa8 <_IO_stdin_used+0x1aa8>
    99ee:	48 89 c7             	mov    rdi,rax
    99f1:	e8 5a 8d ff ff       	call   2750 <strcmp@plt>
    99f6:	85 c0                	test   eax,eax
    99f8:	75 30                	jne    9a2a <line_parser+0x422>
    99fa:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    99fe:	8b 10                	mov    edx,DWORD PTR [rax]
    9a00:	8b 05 be 05 10 00    	mov    eax,DWORD PTR [rip+0x1005be]        # 109fc4 <homenet>
    9a06:	39 c2                	cmp    edx,eax
    9a08:	75 10                	jne    9a1a <line_parser+0x412>
    9a0a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9a0e:	c7 40 10 45 00 00 00 	mov    DWORD PTR [rax+0x10],0x45
    9a15:	e9 7e 0a 00 00       	jmp    a498 <line_parser+0xe90>
    9a1a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9a1e:	c7 40 10 46 00 00 00 	mov    DWORD PTR [rax+0x10],0x46
    9a25:	e9 6e 0a 00 00       	jmp    a498 <line_parser+0xe90>
    9a2a:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9a2e:	48 8d 35 76 40 00 00 	lea    rsi,[rip+0x4076]        # daab <_IO_stdin_used+0x1aab>
    9a35:	48 89 c7             	mov    rdi,rax
    9a38:	e8 13 8d ff ff       	call   2750 <strcmp@plt>
    9a3d:	85 c0                	test   eax,eax
    9a3f:	75 10                	jne    9a51 <line_parser+0x449>
    9a41:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9a45:	c7 40 10 47 00 00 00 	mov    DWORD PTR [rax+0x10],0x47
    9a4c:	e9 47 0a 00 00       	jmp    a498 <line_parser+0xe90>
    9a51:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9a55:	ba 0c 00 00 00       	mov    edx,0xc
    9a5a:	48 8d 35 4d 40 00 00 	lea    rsi,[rip+0x404d]        # daae <_IO_stdin_used+0x1aae>
    9a61:	48 89 c7             	mov    rdi,rax
    9a64:	e8 e7 8a ff ff       	call   2550 <strncmp@plt>
    9a69:	85 c0                	test   eax,eax
    9a6b:	75 7f                	jne    9aec <line_parser+0x4e4>
    9a6d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9a71:	48 8d 50 0c          	lea    rdx,[rax+0xc]
    9a75:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9a79:	48 89 d6             	mov    rsi,rdx
    9a7c:	48 89 c7             	mov    rdi,rax
    9a7f:	e8 ec 8c ff ff       	call   2770 <strcpy@plt>
    9a84:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9a88:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    9a8b:	85 c0                	test   eax,eax
    9a8d:	75 37                	jne    9ac6 <line_parser+0x4be>
    9a8f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9a93:	8b 10                	mov    edx,DWORD PTR [rax]
    9a95:	8b 05 29 05 10 00    	mov    eax,DWORD PTR [rip+0x100529]        # 109fc4 <homenet>
    9a9b:	39 c2                	cmp    edx,eax
    9a9d:	75 27                	jne    9ac6 <line_parser+0x4be>
    9a9f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9aa3:	c7 40 04 ff ff ff ff 	mov    DWORD PTR [rax+0x4],0xffffffff
    9aaa:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9aae:	48 83 c0 01          	add    rax,0x1
    9ab2:	48 89 c7             	mov    rdi,rax
    9ab5:	e8 93 f8 ff ff       	call   934d <check_port_number>
    9aba:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9abe:	89 42 08             	mov    DWORD PTR [rdx+0x8],eax
    9ac1:	e9 d2 09 00 00       	jmp    a498 <line_parser+0xe90>
    9ac6:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9aca:	c7 00 ff ff ff ff    	mov    DWORD PTR [rax],0xffffffff
    9ad0:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9ad4:	48 83 c0 01          	add    rax,0x1
    9ad8:	48 89 c7             	mov    rdi,rax
    9adb:	e8 6d f8 ff ff       	call   934d <check_port_number>
    9ae0:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9ae4:	89 42 0c             	mov    DWORD PTR [rdx+0xc],eax
    9ae7:	e9 ac 09 00 00       	jmp    a498 <line_parser+0xe90>
    9aec:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9af0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9af3:	3c 28                	cmp    al,0x28
    9af5:	0f 85 9d 09 00 00    	jne    a498 <line_parser+0xe90>
    9afb:	c6 85 7c ff ff ff 01 	mov    BYTE PTR [rbp-0x84],0x1
    9b02:	e9 b5 09 00 00       	jmp    a4bc <line_parser+0xeb4>
    9b07:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9b0b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9b0e:	3c 28                	cmp    al,0x28
    9b10:	75 0e                	jne    9b20 <line_parser+0x518>
    9b12:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9b16:	48 83 c0 01          	add    rax,0x1
    9b1a:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    9b1e:	eb 08                	jmp    9b28 <line_parser+0x520>
    9b20:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9b24:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    9b28:	80 bd 7d ff ff ff 00 	cmp    BYTE PTR [rbp-0x83],0x0
    9b2f:	0f 84 8e 00 00 00    	je     9bc3 <line_parser+0x5bb>
    9b35:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9b39:	48 89 c7             	mov    rdi,rax
    9b3c:	e8 bf 8a ff ff       	call   2600 <strlen@plt>
    9b41:	48 8d 50 ff          	lea    rdx,[rax-0x1]
    9b45:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9b49:	48 01 d0             	add    rax,rdx
    9b4c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9b4f:	3c 3b                	cmp    al,0x3b
    9b51:	75 36                	jne    9b89 <line_parser+0x581>
    9b53:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9b57:	48 89 c7             	mov    rdi,rax
    9b5a:	e8 a1 8a ff ff       	call   2600 <strlen@plt>
    9b5f:	48 8d 50 fe          	lea    rdx,[rax-0x2]
    9b63:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9b67:	48 8d 88 4c 01 00 00 	lea    rcx,[rax+0x14c]
    9b6e:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9b72:	48 89 c6             	mov    rsi,rax
    9b75:	48 89 cf             	mov    rdi,rcx
    9b78:	e8 53 89 ff ff       	call   24d0 <strncat@plt>
    9b7d:	c6 85 7d ff ff ff 00 	mov    BYTE PTR [rbp-0x83],0x0
    9b84:	e9 33 09 00 00       	jmp    a4bc <line_parser+0xeb4>
    9b89:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9b8d:	48 8d 90 4c 01 00 00 	lea    rdx,[rax+0x14c]
    9b94:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9b98:	48 89 c6             	mov    rsi,rax
    9b9b:	48 89 d7             	mov    rdi,rdx
    9b9e:	e8 dd 8a ff ff       	call   2680 <strcat@plt>
    9ba3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9ba7:	48 8d 98 4c 01 00 00 	lea    rbx,[rax+0x14c]
    9bae:	48 89 df             	mov    rdi,rbx
    9bb1:	e8 4a 8a ff ff       	call   2600 <strlen@plt>
    9bb6:	48 01 d8             	add    rax,rbx
    9bb9:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    9bbe:	e9 d5 08 00 00       	jmp    a498 <line_parser+0xe90>
    9bc3:	80 bd 7e ff ff ff 00 	cmp    BYTE PTR [rbp-0x82],0x0
    9bca:	74 7f                	je     9c4b <line_parser+0x643>
    9bcc:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9bd0:	48 8d 35 e4 3e 00 00 	lea    rsi,[rip+0x3ee4]        # dabb <_IO_stdin_used+0x1abb>
    9bd7:	48 89 c7             	mov    rdi,rax
    9bda:	e8 91 8a ff ff       	call   2670 <strstr@plt>
    9bdf:	48 85 c0             	test   rax,rax
    9be2:	74 33                	je     9c17 <line_parser+0x60f>
    9be4:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9be8:	48 89 c7             	mov    rdi,rax
    9beb:	e8 10 8a ff ff       	call   2600 <strlen@plt>
    9bf0:	48 8d 50 fd          	lea    rdx,[rax-0x3]
    9bf4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9bf8:	48 8d 48 40          	lea    rcx,[rax+0x40]
    9bfc:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9c00:	48 89 c6             	mov    rsi,rax
    9c03:	48 89 cf             	mov    rdi,rcx
    9c06:	e8 c5 88 ff ff       	call   24d0 <strncat@plt>
    9c0b:	c6 85 7e ff ff ff 00 	mov    BYTE PTR [rbp-0x82],0x0
    9c12:	e9 a5 08 00 00       	jmp    a4bc <line_parser+0xeb4>
    9c17:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9c1b:	48 8d 50 40          	lea    rdx,[rax+0x40]
    9c1f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9c23:	48 89 c6             	mov    rsi,rax
    9c26:	48 89 d7             	mov    rdi,rdx
    9c29:	e8 52 8a ff ff       	call   2680 <strcat@plt>
    9c2e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9c32:	48 8d 58 40          	lea    rbx,[rax+0x40]
    9c36:	48 89 df             	mov    rdi,rbx
    9c39:	e8 c2 89 ff ff       	call   2600 <strlen@plt>
    9c3e:	48 01 d8             	add    rax,rbx
    9c41:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    9c46:	e9 4d 08 00 00       	jmp    a498 <line_parser+0xe90>
    9c4b:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9c4f:	ba 06 00 00 00       	mov    edx,0x6
    9c54:	48 8d 35 63 3e 00 00 	lea    rsi,[rip+0x3e63]        # dabe <_IO_stdin_used+0x1abe>
    9c5b:	48 89 c7             	mov    rdi,rax
    9c5e:	e8 ed 88 ff ff       	call   2550 <strncmp@plt>
    9c63:	85 c0                	test   eax,eax
    9c65:	75 37                	jne    9c9e <line_parser+0x696>
    9c67:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9c6b:	48 89 c7             	mov    rdi,rax
    9c6e:	e8 8d 89 ff ff       	call   2600 <strlen@plt>
    9c73:	48 8d 50 f8          	lea    rdx,[rax-0x8]
    9c77:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9c7b:	48 8d 48 06          	lea    rcx,[rax+0x6]
    9c7f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9c83:	48 83 c0 20          	add    rax,0x20
    9c87:	48 89 ce             	mov    rsi,rcx
    9c8a:	48 89 c7             	mov    rdi,rax
    9c8d:	e8 2e 8b ff ff       	call   27c0 <strncpy@plt>
    9c92:	c6 85 7f ff ff ff 01 	mov    BYTE PTR [rbp-0x81],0x1
    9c99:	e9 fa 07 00 00       	jmp    a498 <line_parser+0xe90>
    9c9e:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9ca2:	ba 05 00 00 00       	mov    edx,0x5
    9ca7:	48 8d 35 17 3e 00 00 	lea    rsi,[rip+0x3e17]        # dac5 <_IO_stdin_used+0x1ac5>
    9cae:	48 89 c7             	mov    rdi,rax
    9cb1:	e8 9a 88 ff ff       	call   2550 <strncmp@plt>
    9cb6:	85 c0                	test   eax,eax
    9cb8:	75 4d                	jne    9d07 <line_parser+0x6ff>
    9cba:	c6 85 7d ff ff ff 01 	mov    BYTE PTR [rbp-0x83],0x1
    9cc1:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9cc5:	48 83 c0 05          	add    rax,0x5
    9cc9:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    9ccd:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9cd1:	48 8d 90 4c 01 00 00 	lea    rdx,[rax+0x14c]
    9cd8:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9cdc:	48 89 c6             	mov    rsi,rax
    9cdf:	48 89 d7             	mov    rdi,rdx
    9ce2:	e8 99 89 ff ff       	call   2680 <strcat@plt>
    9ce7:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9ceb:	48 8d 98 4c 01 00 00 	lea    rbx,[rax+0x14c]
    9cf2:	48 89 df             	mov    rdi,rbx
    9cf5:	e8 06 89 ff ff       	call   2600 <strlen@plt>
    9cfa:	48 01 d8             	add    rax,rbx
    9cfd:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    9d02:	e9 91 07 00 00       	jmp    a498 <line_parser+0xe90>
    9d07:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9d0b:	ba 06 00 00 00       	mov    edx,0x6
    9d10:	48 8d 35 b4 3d 00 00 	lea    rsi,[rip+0x3db4]        # dacb <_IO_stdin_used+0x1acb>
    9d17:	48 89 c7             	mov    rdi,rax
    9d1a:	e8 31 88 ff ff       	call   2550 <strncmp@plt>
    9d1f:	85 c0                	test   eax,eax
    9d21:	75 31                	jne    9d54 <line_parser+0x74c>
    9d23:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9d27:	48 89 c7             	mov    rdi,rax
    9d2a:	e8 42 f8 ff ff       	call   9571 <sc_strip>
    9d2f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9d33:	48 83 c0 06          	add    rax,0x6
    9d37:	48 89 c7             	mov    rdi,rax
    9d3a:	e8 81 89 ff ff       	call   26c0 <atoi@plt>
    9d3f:	89 45 ac             	mov    DWORD PTR [rbp-0x54],eax
    9d42:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9d46:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    9d49:	89 90 4c 03 00 00    	mov    DWORD PTR [rax+0x34c],edx
    9d4f:	e9 44 07 00 00       	jmp    a498 <line_parser+0xe90>
    9d54:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9d58:	ba 05 00 00 00       	mov    edx,0x5
    9d5d:	48 8d 35 6e 3d 00 00 	lea    rsi,[rip+0x3d6e]        # dad2 <_IO_stdin_used+0x1ad2>
    9d64:	48 89 c7             	mov    rdi,rax
    9d67:	e8 e4 87 ff ff       	call   2550 <strncmp@plt>
    9d6c:	85 c0                	test   eax,eax
    9d6e:	75 3f                	jne    9daf <line_parser+0x7a7>
    9d70:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9d74:	48 89 c7             	mov    rdi,rax
    9d77:	e8 84 88 ff ff       	call   2600 <strlen@plt>
    9d7c:	48 8d 50 fa          	lea    rdx,[rax-0x6]
    9d80:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9d84:	48 8d 48 05          	lea    rcx,[rax+0x5]
    9d88:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9d8c:	48 89 ce             	mov    rsi,rcx
    9d8f:	48 89 c7             	mov    rdi,rax
    9d92:	e8 29 8a ff ff       	call   27c0 <strncpy@plt>
    9d97:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9d9b:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9d9f:	48 89 d6             	mov    rsi,rdx
    9da2:	48 89 c7             	mov    rdi,rax
    9da5:	e8 a7 f6 ff ff       	call   9451 <get_ruletype>
    9daa:	e9 e9 06 00 00       	jmp    a498 <line_parser+0xe90>
    9daf:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9db3:	ba 08 00 00 00       	mov    edx,0x8
    9db8:	48 8d 35 19 3d 00 00 	lea    rsi,[rip+0x3d19]        # dad8 <_IO_stdin_used+0x1ad8>
    9dbf:	48 89 c7             	mov    rdi,rax
    9dc2:	e8 89 87 ff ff       	call   2550 <strncmp@plt>
    9dc7:	85 c0                	test   eax,eax
    9dc9:	0f 85 8f 00 00 00    	jne    9e5e <line_parser+0x856>
    9dcf:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9dd3:	48 83 c0 08          	add    rax,0x8
    9dd7:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    9ddb:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9ddf:	48 8d 35 d5 3c 00 00 	lea    rsi,[rip+0x3cd5]        # dabb <_IO_stdin_used+0x1abb>
    9de6:	48 89 c7             	mov    rdi,rax
    9de9:	e8 82 88 ff ff       	call   2670 <strstr@plt>
    9dee:	48 85 c0             	test   rax,rax
    9df1:	74 30                	je     9e23 <line_parser+0x81b>
    9df3:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9df7:	48 89 c7             	mov    rdi,rax
    9dfa:	e8 01 88 ff ff       	call   2600 <strlen@plt>
    9dff:	48 8d 50 f5          	lea    rdx,[rax-0xb]
    9e03:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9e07:	48 8d 48 08          	lea    rcx,[rax+0x8]
    9e0b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9e0f:	48 83 c0 40          	add    rax,0x40
    9e13:	48 89 ce             	mov    rsi,rcx
    9e16:	48 89 c7             	mov    rdi,rax
    9e19:	e8 a2 89 ff ff       	call   27c0 <strncpy@plt>
    9e1e:	e9 75 06 00 00       	jmp    a498 <line_parser+0xe90>
    9e23:	c6 85 7e ff ff ff 01 	mov    BYTE PTR [rbp-0x82],0x1
    9e2a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9e2e:	48 8d 50 40          	lea    rdx,[rax+0x40]
    9e32:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9e36:	48 89 c6             	mov    rsi,rax
    9e39:	48 89 d7             	mov    rdi,rdx
    9e3c:	e8 3f 88 ff ff       	call   2680 <strcat@plt>
    9e41:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9e45:	48 8d 58 40          	lea    rbx,[rax+0x40]
    9e49:	48 89 df             	mov    rdi,rbx
    9e4c:	e8 af 87 ff ff       	call   2600 <strlen@plt>
    9e51:	48 01 d8             	add    rax,rbx
    9e54:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    9e59:	e9 3a 06 00 00       	jmp    a498 <line_parser+0xe90>
    9e5e:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9e62:	ba 04 00 00 00       	mov    edx,0x4
    9e67:	48 8d 35 73 3c 00 00 	lea    rsi,[rip+0x3c73]        # dae1 <_IO_stdin_used+0x1ae1>
    9e6e:	48 89 c7             	mov    rdi,rax
    9e71:	e8 da 86 ff ff       	call   2550 <strncmp@plt>
    9e76:	85 c0                	test   eax,eax
    9e78:	0f 85 8e 00 00 00    	jne    9f0c <line_parser+0x904>
    9e7e:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9e82:	48 8d 35 ff 3b 00 00 	lea    rsi,[rip+0x3bff]        # da88 <_IO_stdin_used+0x1a88>
    9e89:	48 89 c7             	mov    rdi,rax
    9e8c:	e8 3f 89 ff ff       	call   27d0 <strcspn@plt>
    9e91:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
    9e95:	48 01 d0             	add    rax,rdx
    9e98:	c6 00 00             	mov    BYTE PTR [rax],0x0
    9e9b:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9e9f:	48 83 c0 04          	add    rax,0x4
    9ea3:	48 89 c7             	mov    rdi,rax
    9ea6:	e8 04 f3 ff ff       	call   91af <isdigit>
    9eab:	84 c0                	test   al,al
    9ead:	74 47                	je     9ef6 <line_parser+0x8ee>
    9eaf:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9eb3:	48 83 c0 04          	add    rax,0x4
    9eb7:	48 89 c7             	mov    rdi,rax
    9eba:	e8 01 88 ff ff       	call   26c0 <atoi@plt>
    9ebf:	89 45 a8             	mov    DWORD PTR [rbp-0x58],eax
    9ec2:	83 7d a8 00          	cmp    DWORD PTR [rbp-0x58],0x0
    9ec6:	7e 18                	jle    9ee0 <line_parser+0x8d8>
    9ec8:	83 7d a8 0a          	cmp    DWORD PTR [rbp-0x58],0xa
    9ecc:	7f 12                	jg     9ee0 <line_parser+0x8d8>
    9ece:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9ed2:	8b 55 a8             	mov    edx,DWORD PTR [rbp-0x58]
    9ed5:	89 90 48 01 00 00    	mov    DWORD PTR [rax+0x148],edx
    9edb:	e9 b8 05 00 00       	jmp    a498 <line_parser+0xe90>
    9ee0:	48 8d 3d 01 3c 00 00 	lea    rdi,[rip+0x3c01]        # dae8 <_IO_stdin_used+0x1ae8>
    9ee7:	e8 f4 85 ff ff       	call   24e0 <puts@plt>
    9eec:	bf ff ff ff ff       	mov    edi,0xffffffff
    9ef1:	e8 0a 86 ff ff       	call   2500 <exit@plt>
    9ef6:	48 8d 3d 13 3c 00 00 	lea    rdi,[rip+0x3c13]        # db10 <_IO_stdin_used+0x1b10>
    9efd:	e8 de 85 ff ff       	call   24e0 <puts@plt>
    9f02:	bf ff ff ff ff       	mov    edi,0xffffffff
    9f07:	e8 f4 85 ff ff       	call   2500 <exit@plt>
    9f0c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9f10:	ba 06 00 00 00       	mov    edx,0x6
    9f15:	48 8d 35 1c 3c 00 00 	lea    rsi,[rip+0x3c1c]        # db38 <_IO_stdin_used+0x1b38>
    9f1c:	48 89 c7             	mov    rdi,rax
    9f1f:	e8 2c 86 ff ff       	call   2550 <strncmp@plt>
    9f24:	85 c0                	test   eax,eax
    9f26:	0f 85 9b 00 00 00    	jne    9fc7 <line_parser+0x9bf>
    9f2c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9f30:	48 89 c7             	mov    rdi,rax
    9f33:	e8 39 f6 ff ff       	call   9571 <sc_strip>
    9f38:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9f3c:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    9f42:	3d 80 00 00 00       	cmp    eax,0x80
    9f47:	75 58                	jne    9fa1 <line_parser+0x999>
    9f49:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9f4d:	48 83 c0 06          	add    rax,0x6
    9f51:	ba ff 00 00 00       	mov    edx,0xff
    9f56:	be 00 00 00 00       	mov    esi,0x0
    9f5b:	48 89 c7             	mov    rdi,rax
    9f5e:	e8 b9 f5 ff ff       	call   951c <numeric_check>
    9f63:	89 45 a4             	mov    DWORD PTR [rbp-0x5c],eax
    9f66:	83 7d a4 ff          	cmp    DWORD PTR [rbp-0x5c],0xffffffff
    9f6a:	75 16                	jne    9f82 <line_parser+0x97a>
    9f6c:	48 8d 3d cc 3b 00 00 	lea    rdi,[rip+0x3bcc]        # db3f <_IO_stdin_used+0x1b3f>
    9f73:	e8 68 85 ff ff       	call   24e0 <puts@plt>
    9f78:	bf ff ff ff ff       	mov    edi,0xffffffff
    9f7d:	e8 7e 85 ff ff       	call   2500 <exit@plt>
    9f82:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
    9f85:	89 c2                	mov    edx,eax
    9f87:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9f8b:	88 90 72 03 00 00    	mov    BYTE PTR [rax+0x372],dl
    9f91:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9f95:	c6 80 6e 03 00 00 01 	mov    BYTE PTR [rax+0x36e],0x1
    9f9c:	e9 f7 04 00 00       	jmp    a498 <line_parser+0xe90>
    9fa1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9fa5:	48 83 c0 20          	add    rax,0x20
    9fa9:	48 89 c6             	mov    rsi,rax
    9fac:	48 8d 3d a5 3b 00 00 	lea    rdi,[rip+0x3ba5]        # db58 <_IO_stdin_used+0x1b58>
    9fb3:	b8 00 00 00 00       	mov    eax,0x0
    9fb8:	e8 c3 84 ff ff       	call   2480 <printf@plt>
    9fbd:	bf ff ff ff ff       	mov    edi,0xffffffff
    9fc2:	e8 39 85 ff ff       	call   2500 <exit@plt>
    9fc7:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9fcb:	ba 06 00 00 00       	mov    edx,0x6
    9fd0:	48 8d 35 b8 3b 00 00 	lea    rsi,[rip+0x3bb8]        # db8f <_IO_stdin_used+0x1b8f>
    9fd7:	48 89 c7             	mov    rdi,rax
    9fda:	e8 71 85 ff ff       	call   2550 <strncmp@plt>
    9fdf:	85 c0                	test   eax,eax
    9fe1:	0f 85 86 00 00 00    	jne    a06d <line_parser+0xa65>
    9fe7:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9feb:	48 89 c7             	mov    rdi,rax
    9fee:	e8 7e f5 ff ff       	call   9571 <sc_strip>
    9ff3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9ff7:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    9ffd:	3d 80 00 00 00       	cmp    eax,0x80
    a002:	75 58                	jne    a05c <line_parser+0xa54>
    a004:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a008:	48 83 c0 06          	add    rax,0x6
    a00c:	ba ff 00 00 00       	mov    edx,0xff
    a011:	be 00 00 00 00       	mov    esi,0x0
    a016:	48 89 c7             	mov    rdi,rax
    a019:	e8 fe f4 ff ff       	call   951c <numeric_check>
    a01e:	89 45 a0             	mov    DWORD PTR [rbp-0x60],eax
    a021:	83 7d a0 ff          	cmp    DWORD PTR [rbp-0x60],0xffffffff
    a025:	75 16                	jne    a03d <line_parser+0xa35>
    a027:	48 8d 3d 68 3b 00 00 	lea    rdi,[rip+0x3b68]        # db96 <_IO_stdin_used+0x1b96>
    a02e:	e8 ad 84 ff ff       	call   24e0 <puts@plt>
    a033:	bf ff ff ff ff       	mov    edi,0xffffffff
    a038:	e8 c3 84 ff ff       	call   2500 <exit@plt>
    a03d:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    a040:	89 c2                	mov    edx,eax
    a042:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a046:	88 90 73 03 00 00    	mov    BYTE PTR [rax+0x373],dl
    a04c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a050:	c6 80 6f 03 00 00 01 	mov    BYTE PTR [rax+0x36f],0x1
    a057:	e9 3c 04 00 00       	jmp    a498 <line_parser+0xe90>
    a05c:	48 8d 3d 4d 3b 00 00 	lea    rdi,[rip+0x3b4d]        # dbb0 <_IO_stdin_used+0x1bb0>
    a063:	e8 78 84 ff ff       	call   24e0 <puts@plt>
    a068:	e9 2b 04 00 00       	jmp    a498 <line_parser+0xe90>
    a06d:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a071:	ba 08 00 00 00       	mov    edx,0x8
    a076:	48 8d 35 65 3b 00 00 	lea    rsi,[rip+0x3b65]        # dbe2 <_IO_stdin_used+0x1be2>
    a07d:	48 89 c7             	mov    rdi,rax
    a080:	e8 cb 84 ff ff       	call   2550 <strncmp@plt>
    a085:	85 c0                	test   eax,eax
    a087:	0f 85 8c 00 00 00    	jne    a119 <line_parser+0xb11>
    a08d:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a091:	48 89 c7             	mov    rdi,rax
    a094:	e8 d8 f4 ff ff       	call   9571 <sc_strip>
    a099:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a09d:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a0a3:	3d 80 00 00 00       	cmp    eax,0x80
    a0a8:	75 59                	jne    a103 <line_parser+0xafb>
    a0aa:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a0ae:	48 83 c0 08          	add    rax,0x8
    a0b2:	ba ff ff 00 00       	mov    edx,0xffff
    a0b7:	be 00 00 00 00       	mov    esi,0x0
    a0bc:	48 89 c7             	mov    rdi,rax
    a0bf:	e8 58 f4 ff ff       	call   951c <numeric_check>
    a0c4:	89 45 9c             	mov    DWORD PTR [rbp-0x64],eax
    a0c7:	83 7d 9c ff          	cmp    DWORD PTR [rbp-0x64],0xffffffff
    a0cb:	75 16                	jne    a0e3 <line_parser+0xadb>
    a0cd:	48 8d 3d 17 3b 00 00 	lea    rdi,[rip+0x3b17]        # dbeb <_IO_stdin_used+0x1beb>
    a0d4:	e8 07 84 ff ff       	call   24e0 <puts@plt>
    a0d9:	bf ff ff ff ff       	mov    edi,0xffffffff
    a0de:	e8 1d 84 ff ff       	call   2500 <exit@plt>
    a0e3:	8b 45 9c             	mov    eax,DWORD PTR [rbp-0x64]
    a0e6:	89 c2                	mov    edx,eax
    a0e8:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a0ec:	66 89 90 76 03 00 00 	mov    WORD PTR [rax+0x376],dx
    a0f3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a0f7:	c6 80 71 03 00 00 01 	mov    BYTE PTR [rax+0x371],0x1
    a0fe:	e9 95 03 00 00       	jmp    a498 <line_parser+0xe90>
    a103:	48 8d 3d fe 3a 00 00 	lea    rdi,[rip+0x3afe]        # dc08 <_IO_stdin_used+0x1c08>
    a10a:	e8 d1 83 ff ff       	call   24e0 <puts@plt>
    a10f:	bf ff ff ff ff       	mov    edi,0xffffffff
    a114:	e8 e7 83 ff ff       	call   2500 <exit@plt>
    a119:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a11d:	ba 09 00 00 00       	mov    edx,0x9
    a122:	48 8d 35 13 3b 00 00 	lea    rsi,[rip+0x3b13]        # dc3c <_IO_stdin_used+0x1c3c>
    a129:	48 89 c7             	mov    rdi,rax
    a12c:	e8 1f 84 ff ff       	call   2550 <strncmp@plt>
    a131:	85 c0                	test   eax,eax
    a133:	75 7a                	jne    a1af <line_parser+0xba7>
    a135:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a139:	48 89 c7             	mov    rdi,rax
    a13c:	e8 30 f4 ff ff       	call   9571 <sc_strip>
    a141:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a145:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a14b:	3d 80 00 00 00       	cmp    eax,0x80
    a150:	0f 85 42 03 00 00    	jne    a498 <line_parser+0xe90>
    a156:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a15a:	48 83 c0 09          	add    rax,0x9
    a15e:	ba ff ff 00 00       	mov    edx,0xffff
    a163:	be 00 00 00 00       	mov    esi,0x0
    a168:	48 89 c7             	mov    rdi,rax
    a16b:	e8 ac f3 ff ff       	call   951c <numeric_check>
    a170:	89 45 98             	mov    DWORD PTR [rbp-0x68],eax
    a173:	83 7d 98 ff          	cmp    DWORD PTR [rbp-0x68],0xffffffff
    a177:	75 16                	jne    a18f <line_parser+0xb87>
    a179:	48 8d 3d c6 3a 00 00 	lea    rdi,[rip+0x3ac6]        # dc46 <_IO_stdin_used+0x1c46>
    a180:	e8 5b 83 ff ff       	call   24e0 <puts@plt>
    a185:	bf ff ff ff ff       	mov    edi,0xffffffff
    a18a:	e8 71 83 ff ff       	call   2500 <exit@plt>
    a18f:	8b 45 98             	mov    eax,DWORD PTR [rbp-0x68]
    a192:	89 c2                	mov    edx,eax
    a194:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a198:	66 89 90 74 03 00 00 	mov    WORD PTR [rax+0x374],dx
    a19f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a1a3:	c6 80 70 03 00 00 01 	mov    BYTE PTR [rax+0x370],0x1
    a1aa:	e9 e9 02 00 00       	jmp    a498 <line_parser+0xe90>
    a1af:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a1b3:	ba 04 00 00 00       	mov    edx,0x4
    a1b8:	48 8d 35 a3 3a 00 00 	lea    rsi,[rip+0x3aa3]        # dc62 <_IO_stdin_used+0x1c62>
    a1bf:	48 89 c7             	mov    rdi,rax
    a1c2:	e8 89 83 ff ff       	call   2550 <strncmp@plt>
    a1c7:	85 c0                	test   eax,eax
    a1c9:	75 64                	jne    a22f <line_parser+0xc27>
    a1cb:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a1cf:	48 89 c7             	mov    rdi,rax
    a1d2:	e8 9a f3 ff ff       	call   9571 <sc_strip>
    a1d7:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a1db:	48 83 c0 04          	add    rax,0x4
    a1df:	ba ff 00 00 00       	mov    edx,0xff
    a1e4:	be 00 00 00 00       	mov    esi,0x0
    a1e9:	48 89 c7             	mov    rdi,rax
    a1ec:	e8 2b f3 ff ff       	call   951c <numeric_check>
    a1f1:	89 45 94             	mov    DWORD PTR [rbp-0x6c],eax
    a1f4:	83 7d 94 ff          	cmp    DWORD PTR [rbp-0x6c],0xffffffff
    a1f8:	75 16                	jne    a210 <line_parser+0xc08>
    a1fa:	48 8d 3d 66 3a 00 00 	lea    rdi,[rip+0x3a66]        # dc67 <_IO_stdin_used+0x1c67>
    a201:	e8 da 82 ff ff       	call   24e0 <puts@plt>
    a206:	bf ff ff ff ff       	mov    edi,0xffffffff
    a20b:	e8 f0 82 ff ff       	call   2500 <exit@plt>
    a210:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    a213:	89 c2                	mov    edx,eax
    a215:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a219:	88 90 6c 03 00 00    	mov    BYTE PTR [rax+0x36c],dl
    a21f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a223:	c6 80 69 03 00 00 01 	mov    BYTE PTR [rax+0x369],0x1
    a22a:	e9 69 02 00 00       	jmp    a498 <line_parser+0xe90>
    a22f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a233:	ba 07 00 00 00       	mov    edx,0x7
    a238:	48 8d 35 3a 3a 00 00 	lea    rsi,[rip+0x3a3a]        # dc79 <_IO_stdin_used+0x1c79>
    a23f:	48 89 c7             	mov    rdi,rax
    a242:	e8 09 83 ff ff       	call   2550 <strncmp@plt>
    a247:	85 c0                	test   eax,eax
    a249:	75 6e                	jne    a2b9 <line_parser+0xcb1>
    a24b:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a24f:	48 89 c7             	mov    rdi,rax
    a252:	e8 1a f3 ff ff       	call   9571 <sc_strip>
    a257:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a25b:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a261:	83 f8 7e             	cmp    eax,0x7e
    a264:	75 3d                	jne    a2a3 <line_parser+0xc9b>
    a266:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a26a:	48 89 c7             	mov    rdi,rax
    a26d:	e8 8e 83 ff ff       	call   2600 <strlen@plt>
    a272:	48 8d 50 f8          	lea    rdx,[rax-0x8]
    a276:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a27a:	48 8d 48 07          	lea    rcx,[rax+0x7]
    a27e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a282:	48 05 53 03 00 00    	add    rax,0x353
    a288:	48 89 ce             	mov    rsi,rcx
    a28b:	48 89 c7             	mov    rdi,rax
    a28e:	e8 2d 85 ff ff       	call   27c0 <strncpy@plt>
    a293:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a297:	c6 80 50 03 00 00 01 	mov    BYTE PTR [rax+0x350],0x1
    a29e:	e9 f5 01 00 00       	jmp    a498 <line_parser+0xe90>
    a2a3:	48 8d 3d de 39 00 00 	lea    rdi,[rip+0x39de]        # dc88 <_IO_stdin_used+0x1c88>
    a2aa:	e8 31 82 ff ff       	call   24e0 <puts@plt>
    a2af:	bf ff ff ff ff       	mov    edi,0xffffffff
    a2b4:	e8 47 82 ff ff       	call   2500 <exit@plt>
    a2b9:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a2bd:	ba 04 00 00 00       	mov    edx,0x4
    a2c2:	48 8d 35 f0 39 00 00 	lea    rsi,[rip+0x39f0]        # dcb9 <_IO_stdin_used+0x1cb9>
    a2c9:	48 89 c7             	mov    rdi,rax
    a2cc:	e8 7f 82 ff ff       	call   2550 <strncmp@plt>
    a2d1:	85 c0                	test   eax,eax
    a2d3:	75 78                	jne    a34d <line_parser+0xd45>
    a2d5:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a2d9:	48 89 c7             	mov    rdi,rax
    a2dc:	e8 90 f2 ff ff       	call   9571 <sc_strip>
    a2e1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a2e5:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a2eb:	83 f8 7e             	cmp    eax,0x7e
    a2ee:	0f 85 a4 01 00 00    	jne    a498 <line_parser+0xe90>
    a2f4:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a2f8:	48 83 c0 04          	add    rax,0x4
    a2fc:	ba ff ff ff ff       	mov    edx,0xffffffff
    a301:	be 00 00 00 00       	mov    esi,0x0
    a306:	48 89 c7             	mov    rdi,rax
    a309:	e8 0e f2 ff ff       	call   951c <numeric_check>
    a30e:	89 45 90             	mov    DWORD PTR [rbp-0x70],eax
    a311:	83 7d 90 ff          	cmp    DWORD PTR [rbp-0x70],0xffffffff
    a315:	75 16                	jne    a32d <line_parser+0xd25>
    a317:	48 8d 3d a0 39 00 00 	lea    rdi,[rip+0x39a0]        # dcbe <_IO_stdin_used+0x1cbe>
    a31e:	e8 bd 81 ff ff       	call   24e0 <puts@plt>
    a323:	bf ff ff ff ff       	mov    edi,0xffffffff
    a328:	e8 d3 81 ff ff       	call   2500 <exit@plt>
    a32d:	8b 45 90             	mov    eax,DWORD PTR [rbp-0x70]
    a330:	89 c2                	mov    edx,eax
    a332:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a336:	66 89 90 5c 03 00 00 	mov    WORD PTR [rax+0x35c],dx
    a33d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a341:	c6 80 51 03 00 00 01 	mov    BYTE PTR [rax+0x351],0x1
    a348:	e9 4b 01 00 00       	jmp    a498 <line_parser+0xe90>
    a34d:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a351:	ba 06 00 00 00       	mov    edx,0x6
    a356:	48 8d 35 73 39 00 00 	lea    rsi,[rip+0x3973]        # dcd0 <_IO_stdin_used+0x1cd0>
    a35d:	48 89 c7             	mov    rdi,rax
    a360:	e8 eb 81 ff ff       	call   2550 <strncmp@plt>
    a365:	85 c0                	test   eax,eax
    a367:	75 7c                	jne    a3e5 <line_parser+0xddd>
    a369:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a36d:	48 89 c7             	mov    rdi,rax
    a370:	e8 8b 82 ff ff       	call   2600 <strlen@plt>
    a375:	48 8d 50 f7          	lea    rdx,[rax-0x9]
    a379:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a37d:	48 8d 48 06          	lea    rcx,[rax+0x6]
    a381:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a385:	48 05 10 02 00 00    	add    rax,0x210
    a38b:	48 89 ce             	mov    rsi,rcx
    a38e:	48 89 c7             	mov    rdi,rax
    a391:	e8 2a 84 ff ff       	call   27c0 <strncpy@plt>
    a396:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a39a:	48 8d 88 10 02 00 00 	lea    rcx,[rax+0x210]
    a3a1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a3a5:	48 05 d0 01 00 00    	add    rax,0x1d0
    a3ab:	ba 00 00 00 00       	mov    edx,0x0
    a3b0:	48 89 ce             	mov    rsi,rcx
    a3b3:	48 89 c7             	mov    rdi,rax
    a3b6:	e8 15 83 ff ff       	call   26d0 <regcomp@plt>
    a3bb:	85 c0                	test   eax,eax
    a3bd:	74 16                	je     a3d5 <line_parser+0xdcd>
    a3bf:	48 8d 3d 12 39 00 00 	lea    rdi,[rip+0x3912]        # dcd8 <_IO_stdin_used+0x1cd8>
    a3c6:	e8 15 81 ff ff       	call   24e0 <puts@plt>
    a3cb:	bf ff ff ff ff       	mov    edi,0xffffffff
    a3d0:	e8 2b 81 ff ff       	call   2500 <exit@plt>
    a3d5:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a3d9:	c6 80 90 02 00 00 01 	mov    BYTE PTR [rax+0x290],0x1
    a3e0:	e9 b3 00 00 00       	jmp    a498 <line_parser+0xe90>
    a3e5:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a3e9:	ba 06 00 00 00       	mov    edx,0x6
    a3ee:	48 8d 35 08 39 00 00 	lea    rsi,[rip+0x3908]        # dcfd <_IO_stdin_used+0x1cfd>
    a3f5:	48 89 c7             	mov    rdi,rax
    a3f8:	e8 53 81 ff ff       	call   2550 <strncmp@plt>
    a3fd:	85 c0                	test   eax,eax
    a3ff:	75 2a                	jne    a42b <line_parser+0xe23>
    a401:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a405:	48 89 c7             	mov    rdi,rax
    a408:	e8 64 f1 ff ff       	call   9571 <sc_strip>
    a40d:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a411:	48 8d 48 06          	lea    rcx,[rax+0x6]
    a415:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a419:	ba 01 00 00 00       	mov    edx,0x1
    a41e:	48 89 ce             	mov    rsi,rcx
    a421:	48 89 c7             	mov    rdi,rax
    a424:	e8 6c 03 00 00       	call   a795 <d_op_parser>
    a429:	eb 6d                	jmp    a498 <line_parser+0xe90>
    a42b:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a42f:	ba 07 00 00 00       	mov    edx,0x7
    a434:	48 8d 35 c9 38 00 00 	lea    rsi,[rip+0x38c9]        # dd04 <_IO_stdin_used+0x1d04>
    a43b:	48 89 c7             	mov    rdi,rax
    a43e:	e8 0d 81 ff ff       	call   2550 <strncmp@plt>
    a443:	85 c0                	test   eax,eax
    a445:	75 27                	jne    a46e <line_parser+0xe66>
    a447:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a44b:	48 89 c7             	mov    rdi,rax
    a44e:	e8 1e f1 ff ff       	call   9571 <sc_strip>
    a453:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a457:	48 83 c0 07          	add    rax,0x7
    a45b:	48 89 c7             	mov    rdi,rax
    a45e:	e8 5d 82 ff ff       	call   26c0 <atoi@plt>
    a463:	89 c2                	mov    edx,eax
    a465:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a469:	89 50 14             	mov    DWORD PTR [rax+0x14],edx
    a46c:	eb 2a                	jmp    a498 <line_parser+0xe90>
    a46e:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a472:	ba 0b 00 00 00       	mov    edx,0xb
    a477:	48 8d 35 8e 38 00 00 	lea    rsi,[rip+0x388e]        # dd0c <_IO_stdin_used+0x1d0c>
    a47e:	48 89 c7             	mov    rdi,rax
    a481:	e8 ca 80 ff ff       	call   2550 <strncmp@plt>
    a486:	85 c0                	test   eax,eax
    a488:	75 0e                	jne    a498 <line_parser+0xe90>
    a48a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a48e:	c7 80 48 03 00 00 01 	mov    DWORD PTR [rax+0x348],0x1
    a495:	00 00 00 
    a498:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    a49b:	89 45 80             	mov    DWORD PTR [rbp-0x80],eax
    a49e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a4a2:	48 89 c7             	mov    rdi,rax
    a4a5:	e8 56 81 ff ff       	call   2600 <strlen@plt>
    a4aa:	48 8d 50 ff          	lea    rdx,[rax-0x1]
    a4ae:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a4b2:	48 01 d0             	add    rax,rdx
    a4b5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    a4b8:	3c 29                	cmp    al,0x29
    a4ba:	74 3d                	je     a4f9 <line_parser+0xef1>
    a4bc:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    a4bf:	3b 45 8c             	cmp    eax,DWORD PTR [rbp-0x74]
    a4c2:	7f 0c                	jg     a4d0 <line_parser+0xec8>
    a4c4:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
    a4c7:	3b 45 84             	cmp    eax,DWORD PTR [rbp-0x7c]
    a4ca:	0f 8e 54 f2 ff ff    	jle    9724 <line_parser+0x11c>
    a4d0:	0f b6 85 7f ff ff ff 	movzx  eax,BYTE PTR [rbp-0x81]
    a4d7:	83 f0 01             	xor    eax,0x1
    a4da:	84 c0                	test   al,al
    a4dc:	74 1c                	je     a4fa <line_parser+0xef2>
    a4de:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a4e2:	48 83 c0 20          	add    rax,0x20
    a4e6:	48 bb 55 6e 74 69 74 	movabs rbx,0x64656c7469746e55
    a4ed:	6c 65 64 
    a4f0:	48 89 18             	mov    QWORD PTR [rax],rbx
    a4f3:	c6 40 08 00          	mov    BYTE PTR [rax+0x8],0x0
    a4f7:	eb 01                	jmp    a4fa <line_parser+0xef2>
    a4f9:	90                   	nop
    a4fa:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a4fe:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    a505:	00 00 
    a507:	74 05                	je     a50e <line_parser+0xf06>
    a509:	e8 32 82 ff ff       	call   2740 <__stack_chk_fail@plt>
    a50e:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    a512:	c9                   	leave  
    a513:	c3                   	ret    

000000000000a514 <rule_processor>:
    a514:	f3 0f 1e fa          	endbr64 
    a518:	55                   	push   rbp
    a519:	48 89 e5             	mov    rbp,rsp
    a51c:	48 83 ec 10          	sub    rsp,0x10
    a520:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    a527:	eb 22                	jmp    a54b <rule_processor+0x37>
    a529:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    a52c:	48 98                	cdqe   
    a52e:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    a535:	48 8d 15 a4 6d 00 00 	lea    rdx,[rip+0x6da4]        # 112e0 <rules>
    a53c:	48 01 d0             	add    rax,rdx
    a53f:	48 89 c7             	mov    rdi,rax
    a542:	e8 13 00 00 00       	call   a55a <process_rule>
    a547:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    a54b:	8b 05 c3 6a 00 00    	mov    eax,DWORD PTR [rip+0x6ac3]        # 11014 <num_rules>
    a551:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    a554:	7e d3                	jle    a529 <rule_processor+0x15>
    a556:	90                   	nop
    a557:	90                   	nop
    a558:	c9                   	leave  
    a559:	c3                   	ret    

000000000000a55a <process_rule>:
    a55a:	f3 0f 1e fa          	endbr64 
    a55e:	55                   	push   rbp
    a55f:	48 89 e5             	mov    rbp,rsp
    a562:	41 57                	push   r15
    a564:	41 56                	push   r14
    a566:	41 54                	push   r12
    a568:	53                   	push   rbx
    a569:	48 83 ec 40          	sub    rsp,0x40
    a56d:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    a571:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a578:	00 00 
    a57a:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    a57e:	31 c0                	xor    eax,eax
    a580:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a584:	0f b6 80 90 02 00 00 	movzx  eax,BYTE PTR [rax+0x290]
    a58b:	83 f0 01             	xor    eax,0x1
    a58e:	84 c0                	test   al,al
    a590:	0f 84 dd 01 00 00    	je     a773 <process_rule+0x219>
    a596:	48 89 e0             	mov    rax,rsp
    a599:	49 89 c4             	mov    r12,rax
    a59c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a5a0:	48 83 c0 40          	add    rax,0x40
    a5a4:	48 89 c7             	mov    rdi,rax
    a5a7:	e8 54 80 ff ff       	call   2600 <strlen@plt>
    a5ac:	48 83 c0 01          	add    rax,0x1
    a5b0:	48 01 c0             	add    rax,rax
    a5b3:	48 89 c2             	mov    rdx,rax
    a5b6:	48 83 ea 01          	sub    rdx,0x1
    a5ba:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    a5be:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    a5c2:	48 c7 45 a8 00 00 00 	mov    QWORD PTR [rbp-0x58],0x0
    a5c9:	00 
    a5ca:	49 89 c6             	mov    r14,rax
    a5cd:	41 bf 00 00 00 00    	mov    r15d,0x0
    a5d3:	ba 10 00 00 00       	mov    edx,0x10
    a5d8:	48 83 ea 01          	sub    rdx,0x1
    a5dc:	48 01 d0             	add    rax,rdx
    a5df:	bb 10 00 00 00       	mov    ebx,0x10
    a5e4:	ba 00 00 00 00       	mov    edx,0x0
    a5e9:	48 f7 f3             	div    rbx
    a5ec:	48 6b c0 10          	imul   rax,rax,0x10
    a5f0:	48 89 c1             	mov    rcx,rax
    a5f3:	48 81 e1 00 f0 ff ff 	and    rcx,0xfffffffffffff000
    a5fa:	48 89 e2             	mov    rdx,rsp
    a5fd:	48 29 ca             	sub    rdx,rcx
    a600:	48 39 d4             	cmp    rsp,rdx
    a603:	74 12                	je     a617 <process_rule+0xbd>
    a605:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    a60c:	48 83 8c 24 f8 0f 00 	or     QWORD PTR [rsp+0xff8],0x0
    a613:	00 00 
    a615:	eb e9                	jmp    a600 <process_rule+0xa6>
    a617:	48 89 c2             	mov    rdx,rax
    a61a:	81 e2 ff 0f 00 00    	and    edx,0xfff
    a620:	48 29 d4             	sub    rsp,rdx
    a623:	48 89 c2             	mov    rdx,rax
    a626:	81 e2 ff 0f 00 00    	and    edx,0xfff
    a62c:	48 85 d2             	test   rdx,rdx
    a62f:	74 10                	je     a641 <process_rule+0xe7>
    a631:	25 ff 0f 00 00       	and    eax,0xfff
    a636:	48 83 e8 08          	sub    rax,0x8
    a63a:	48 01 e0             	add    rax,rsp
    a63d:	48 83 08 00          	or     QWORD PTR [rax],0x0
    a641:	48 89 e0             	mov    rax,rsp
    a644:	48 83 c0 00          	add    rax,0x0
    a648:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    a64c:	c7 45 c0 00 00 00 00 	mov    DWORD PTR [rbp-0x40],0x0
    a653:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a657:	48 8d 50 40          	lea    rdx,[rax+0x40]
    a65b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a65f:	48 05 c8 02 00 00    	add    rax,0x2c8
    a665:	48 89 d6             	mov    rsi,rdx
    a668:	48 89 c7             	mov    rdi,rax
    a66b:	e8 00 81 ff ff       	call   2770 <strcpy@plt>
    a670:	c7 45 c4 00 00 00 00 	mov    DWORD PTR [rbp-0x3c],0x0
    a677:	e9 a4 00 00 00       	jmp    a720 <process_rule+0x1c6>
    a67c:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    a680:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    a683:	48 98                	cdqe   
    a685:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    a68a:	3c 7c                	cmp    al,0x7c
    a68c:	75 18                	jne    a6a6 <process_rule+0x14c>
    a68e:	83 7d c0 00          	cmp    DWORD PTR [rbp-0x40],0x0
    a692:	74 09                	je     a69d <process_rule+0x143>
    a694:	c7 45 c0 00 00 00 00 	mov    DWORD PTR [rbp-0x40],0x0
    a69b:	eb 7f                	jmp    a71c <process_rule+0x1c2>
    a69d:	c7 45 c0 01 00 00 00 	mov    DWORD PTR [rbp-0x40],0x1
    a6a4:	eb 76                	jmp    a71c <process_rule+0x1c2>
    a6a6:	83 7d c0 01          	cmp    DWORD PTR [rbp-0x40],0x1
    a6aa:	75 3a                	jne    a6e6 <process_rule+0x18c>
    a6ac:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    a6b0:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    a6b3:	48 98                	cdqe   
    a6b5:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    a6ba:	0f be c0             	movsx  eax,al
    a6bd:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
    a6c0:	48 63 d2             	movsxd rdx,edx
    a6c3:	48 8d 4a ff          	lea    rcx,[rdx-0x1]
    a6c7:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    a6cb:	48 01 d1             	add    rcx,rdx
    a6ce:	89 c2                	mov    edx,eax
    a6d0:	48 8d 35 41 36 00 00 	lea    rsi,[rip+0x3641]        # dd18 <_IO_stdin_used+0x1d18>
    a6d7:	48 89 cf             	mov    rdi,rcx
    a6da:	b8 00 00 00 00       	mov    eax,0x0
    a6df:	e8 3c 7f ff ff       	call   2620 <sprintf@plt>
    a6e4:	eb 36                	jmp    a71c <process_rule+0x1c2>
    a6e6:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    a6ea:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    a6ed:	48 98                	cdqe   
    a6ef:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    a6f4:	0f be c0             	movsx  eax,al
    a6f7:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
    a6fa:	01 d2                	add    edx,edx
    a6fc:	48 63 ca             	movsxd rcx,edx
    a6ff:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    a703:	48 01 d1             	add    rcx,rdx
    a706:	89 c2                	mov    edx,eax
    a708:	48 8d 35 0c 36 00 00 	lea    rsi,[rip+0x360c]        # dd1b <_IO_stdin_used+0x1d1b>
    a70f:	48 89 cf             	mov    rdi,rcx
    a712:	b8 00 00 00 00       	mov    eax,0x0
    a717:	e8 04 7f ff ff       	call   2620 <sprintf@plt>
    a71c:	83 45 c4 01          	add    DWORD PTR [rbp-0x3c],0x1
    a720:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    a723:	48 63 d8             	movsxd rbx,eax
    a726:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a72a:	48 83 c0 40          	add    rax,0x40
    a72e:	48 89 c7             	mov    rdi,rax
    a731:	e8 ca 7e ff ff       	call   2600 <strlen@plt>
    a736:	48 39 c3             	cmp    rbx,rax
    a739:	0f 82 3d ff ff ff    	jb     a67c <process_rule+0x122>
    a73f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a743:	48 83 c0 40          	add    rax,0x40
    a747:	ba ff 00 00 00       	mov    edx,0xff
    a74c:	be 00 00 00 00       	mov    esi,0x0
    a751:	48 89 c7             	mov    rdi,rax
    a754:	e8 37 7d ff ff       	call   2490 <memset@plt>
    a759:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a75d:	48 8d 50 40          	lea    rdx,[rax+0x40]
    a761:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    a765:	48 89 c6             	mov    rsi,rax
    a768:	48 89 d7             	mov    rdi,rdx
    a76b:	e8 00 80 ff ff       	call   2770 <strcpy@plt>
    a770:	4c 89 e4             	mov    rsp,r12
    a773:	90                   	nop
    a774:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a778:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    a77f:	00 00 
    a781:	74 05                	je     a788 <process_rule+0x22e>
    a783:	e8 b8 7f ff ff       	call   2740 <__stack_chk_fail@plt>
    a788:	48 8d 65 e0          	lea    rsp,[rbp-0x20]
    a78c:	5b                   	pop    rbx
    a78d:	41 5c                	pop    r12
    a78f:	41 5e                	pop    r14
    a791:	41 5f                	pop    r15
    a793:	5d                   	pop    rbp
    a794:	c3                   	ret    

000000000000a795 <d_op_parser>:
    a795:	f3 0f 1e fa          	endbr64 
    a799:	55                   	push   rbp
    a79a:	48 89 e5             	mov    rbp,rsp
    a79d:	48 83 ec 20          	sub    rsp,0x20
    a7a1:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    a7a5:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    a7a9:	89 55 ec             	mov    DWORD PTR [rbp-0x14],edx
    a7ac:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a7b0:	48 89 c7             	mov    rdi,rax
    a7b3:	e8 f7 e9 ff ff       	call   91af <isdigit>
    a7b8:	84 c0                	test   al,al
    a7ba:	74 23                	je     a7df <d_op_parser+0x4a>
    a7bc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a7c0:	c7 40 1c a1 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa1
    a7c7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a7cb:	48 89 c7             	mov    rdi,rax
    a7ce:	e8 ed 7e ff ff       	call   26c0 <atoi@plt>
    a7d3:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a7d7:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    a7da:	e9 59 01 00 00       	jmp    a938 <d_op_parser+0x1a3>
    a7df:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a7e3:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    a7e6:	0f b6 15 33 35 00 00 	movzx  edx,BYTE PTR [rip+0x3533]        # dd20 <_IO_stdin_used+0x1d20>
    a7ed:	0f b6 c0             	movzx  eax,al
    a7f0:	0f b6 d2             	movzx  edx,dl
    a7f3:	29 d0                	sub    eax,edx
    a7f5:	85 c0                	test   eax,eax
    a7f7:	75 27                	jne    a820 <d_op_parser+0x8b>
    a7f9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a7fd:	c7 40 1c a4 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa4
    a804:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a808:	48 83 c0 01          	add    rax,0x1
    a80c:	48 89 c7             	mov    rdi,rax
    a80f:	e8 ac 7e ff ff       	call   26c0 <atoi@plt>
    a814:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a818:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    a81b:	e9 18 01 00 00       	jmp    a938 <d_op_parser+0x1a3>
    a820:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a824:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    a827:	0f b6 15 f4 34 00 00 	movzx  edx,BYTE PTR [rip+0x34f4]        # dd22 <_IO_stdin_used+0x1d22>
    a82e:	0f b6 c0             	movzx  eax,al
    a831:	0f b6 d2             	movzx  edx,dl
    a834:	29 d0                	sub    eax,edx
    a836:	85 c0                	test   eax,eax
    a838:	75 27                	jne    a861 <d_op_parser+0xcc>
    a83a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a83e:	c7 40 1c a2 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa2
    a845:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a849:	48 83 c0 01          	add    rax,0x1
    a84d:	48 89 c7             	mov    rdi,rax
    a850:	e8 6b 7e ff ff       	call   26c0 <atoi@plt>
    a855:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a859:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    a85c:	e9 d7 00 00 00       	jmp    a938 <d_op_parser+0x1a3>
    a861:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a865:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    a868:	0f b6 15 b5 34 00 00 	movzx  edx,BYTE PTR [rip+0x34b5]        # dd24 <_IO_stdin_used+0x1d24>
    a86f:	0f b6 c0             	movzx  eax,al
    a872:	0f b6 d2             	movzx  edx,dl
    a875:	29 d0                	sub    eax,edx
    a877:	85 c0                	test   eax,eax
    a879:	75 27                	jne    a8a2 <d_op_parser+0x10d>
    a87b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a87f:	c7 40 1c a6 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa6
    a886:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a88a:	48 83 c0 01          	add    rax,0x1
    a88e:	48 89 c7             	mov    rdi,rax
    a891:	e8 2a 7e ff ff       	call   26c0 <atoi@plt>
    a896:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a89a:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    a89d:	e9 96 00 00 00       	jmp    a938 <d_op_parser+0x1a3>
    a8a2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a8a6:	ba 02 00 00 00       	mov    edx,0x2
    a8ab:	48 8d 35 74 34 00 00 	lea    rsi,[rip+0x3474]        # dd26 <_IO_stdin_used+0x1d26>
    a8b2:	48 89 c7             	mov    rdi,rax
    a8b5:	e8 96 7c ff ff       	call   2550 <strncmp@plt>
    a8ba:	85 c0                	test   eax,eax
    a8bc:	75 24                	jne    a8e2 <d_op_parser+0x14d>
    a8be:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a8c2:	c7 40 1c a3 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa3
    a8c9:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a8cd:	48 83 c0 02          	add    rax,0x2
    a8d1:	48 89 c7             	mov    rdi,rax
    a8d4:	e8 e7 7d ff ff       	call   26c0 <atoi@plt>
    a8d9:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a8dd:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    a8e0:	eb 56                	jmp    a938 <d_op_parser+0x1a3>
    a8e2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a8e6:	ba 02 00 00 00       	mov    edx,0x2
    a8eb:	48 8d 35 37 34 00 00 	lea    rsi,[rip+0x3437]        # dd29 <_IO_stdin_used+0x1d29>
    a8f2:	48 89 c7             	mov    rdi,rax
    a8f5:	e8 56 7c ff ff       	call   2550 <strncmp@plt>
    a8fa:	85 c0                	test   eax,eax
    a8fc:	75 24                	jne    a922 <d_op_parser+0x18d>
    a8fe:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a902:	c7 40 1c a5 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa5
    a909:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a90d:	48 83 c0 02          	add    rax,0x2
    a911:	48 89 c7             	mov    rdi,rax
    a914:	e8 a7 7d ff ff       	call   26c0 <atoi@plt>
    a919:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a91d:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    a920:	eb 16                	jmp    a938 <d_op_parser+0x1a3>
    a922:	48 8d 3d 03 34 00 00 	lea    rdi,[rip+0x3403]        # dd2c <_IO_stdin_used+0x1d2c>
    a929:	e8 b2 7b ff ff       	call   24e0 <puts@plt>
    a92e:	bf ff ff ff ff       	mov    edi,0xffffffff
    a933:	e8 c8 7b ff ff       	call   2500 <exit@plt>
    a938:	c9                   	leave  
    a939:	c3                   	ret    

000000000000a93a <d_engine>:
    a93a:	f3 0f 1e fa          	endbr64 
    a93e:	55                   	push   rbp
    a93f:	48 89 e5             	mov    rbp,rsp
    a942:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    a946:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    a94a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a94e:	8b 40 1c             	mov    eax,DWORD PTR [rax+0x1c]
    a951:	83 f8 ff             	cmp    eax,0xffffffff
    a954:	75 0a                	jne    a960 <d_engine+0x26>
    a956:	b8 01 00 00 00       	mov    eax,0x1
    a95b:	e9 ea 00 00 00       	jmp    aa4a <d_engine+0x110>
    a960:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a964:	8b 40 1c             	mov    eax,DWORD PTR [rax+0x1c]
    a967:	2d a1 00 00 00       	sub    eax,0xa1
    a96c:	83 f8 05             	cmp    eax,0x5
    a96f:	0f 87 d0 00 00 00    	ja     aa45 <d_engine+0x10b>
    a975:	89 c0                	mov    eax,eax
    a977:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    a97e:	00 
    a97f:	48 8d 05 be 33 00 00 	lea    rax,[rip+0x33be]        # dd44 <_IO_stdin_used+0x1d44>
    a986:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    a989:	48 98                	cdqe   
    a98b:	48 8d 15 b2 33 00 00 	lea    rdx,[rip+0x33b2]        # dd44 <_IO_stdin_used+0x1d44>
    a992:	48 01 d0             	add    rax,rdx
    a995:	3e ff e0             	notrack jmp rax
    a998:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a99c:	8b 50 18             	mov    edx,DWORD PTR [rax+0x18]
    a99f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a9a3:	8b 40 34             	mov    eax,DWORD PTR [rax+0x34]
    a9a6:	39 c2                	cmp    edx,eax
    a9a8:	0f 85 87 00 00 00    	jne    aa35 <d_engine+0xfb>
    a9ae:	b8 01 00 00 00       	mov    eax,0x1
    a9b3:	e9 92 00 00 00       	jmp    aa4a <d_engine+0x110>
    a9b8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a9bc:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    a9bf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a9c3:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    a9c6:	39 c2                	cmp    edx,eax
    a9c8:	76 6e                	jbe    aa38 <d_engine+0xfe>
    a9ca:	b8 01 00 00 00       	mov    eax,0x1
    a9cf:	eb 79                	jmp    aa4a <d_engine+0x110>
    a9d1:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a9d5:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    a9d8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a9dc:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    a9df:	39 c2                	cmp    edx,eax
    a9e1:	72 58                	jb     aa3b <d_engine+0x101>
    a9e3:	b8 01 00 00 00       	mov    eax,0x1
    a9e8:	eb 60                	jmp    aa4a <d_engine+0x110>
    a9ea:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a9ee:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    a9f1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a9f5:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    a9f8:	39 c2                	cmp    edx,eax
    a9fa:	73 42                	jae    aa3e <d_engine+0x104>
    a9fc:	b8 01 00 00 00       	mov    eax,0x1
    aa01:	eb 47                	jmp    aa4a <d_engine+0x110>
    aa03:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    aa07:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    aa0a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aa0e:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    aa11:	39 c2                	cmp    edx,eax
    aa13:	77 2c                	ja     aa41 <d_engine+0x107>
    aa15:	b8 01 00 00 00       	mov    eax,0x1
    aa1a:	eb 2e                	jmp    aa4a <d_engine+0x110>
    aa1c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    aa20:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    aa23:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aa27:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    aa2a:	39 c2                	cmp    edx,eax
    aa2c:	74 16                	je     aa44 <d_engine+0x10a>
    aa2e:	b8 01 00 00 00       	mov    eax,0x1
    aa33:	eb 15                	jmp    aa4a <d_engine+0x110>
    aa35:	90                   	nop
    aa36:	eb 0d                	jmp    aa45 <d_engine+0x10b>
    aa38:	90                   	nop
    aa39:	eb 0a                	jmp    aa45 <d_engine+0x10b>
    aa3b:	90                   	nop
    aa3c:	eb 07                	jmp    aa45 <d_engine+0x10b>
    aa3e:	90                   	nop
    aa3f:	eb 04                	jmp    aa45 <d_engine+0x10b>
    aa41:	90                   	nop
    aa42:	eb 01                	jmp    aa45 <d_engine+0x10b>
    aa44:	90                   	nop
    aa45:	b8 00 00 00 00       	mov    eax,0x0
    aa4a:	5d                   	pop    rbp
    aa4b:	c3                   	ret    

000000000000aa4c <homenet_toi>:
    aa4c:	f3 0f 1e fa          	endbr64 
    aa50:	55                   	push   rbp
    aa51:	48 89 e5             	mov    rbp,rsp
    aa54:	53                   	push   rbx
    aa55:	48 83 ec 38          	sub    rsp,0x38
    aa59:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    aa5d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    aa64:	00 00 
    aa66:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    aa6a:	31 c0                	xor    eax,eax
    aa6c:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    aa70:	48 8d 35 e5 32 00 00 	lea    rsi,[rip+0x32e5]        # dd5c <_IO_stdin_used+0x1d5c>
    aa77:	48 89 c7             	mov    rdi,rax
    aa7a:	e8 01 7d ff ff       	call   2780 <strtok@plt>
    aa7f:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    aa83:	eb 4c                	jmp    aad1 <homenet_toi+0x85>
    aa85:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    aa89:	48 89 c7             	mov    rdi,rax
    aa8c:	e8 2f 7c ff ff       	call   26c0 <atoi@plt>
    aa91:	89 c3                	mov    ebx,eax
    aa93:	48 8d 45 df          	lea    rax,[rbp-0x21]
    aa97:	48 89 c7             	mov    rdi,rax
    aa9a:	e8 61 7b ff ff       	call   2600 <strlen@plt>
    aa9f:	48 8d 55 df          	lea    rdx,[rbp-0x21]
    aaa3:	48 01 d0             	add    rax,rdx
    aaa6:	89 da                	mov    edx,ebx
    aaa8:	48 8d 35 af 32 00 00 	lea    rsi,[rip+0x32af]        # dd5e <_IO_stdin_used+0x1d5e>
    aaaf:	48 89 c7             	mov    rdi,rax
    aab2:	b8 00 00 00 00       	mov    eax,0x0
    aab7:	e8 64 7b ff ff       	call   2620 <sprintf@plt>
    aabc:	48 8d 35 99 32 00 00 	lea    rsi,[rip+0x3299]        # dd5c <_IO_stdin_used+0x1d5c>
    aac3:	bf 00 00 00 00       	mov    edi,0x0
    aac8:	e8 b3 7c ff ff       	call   2780 <strtok@plt>
    aacd:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    aad1:	48 83 7d d0 00       	cmp    QWORD PTR [rbp-0x30],0x0
    aad6:	75 ad                	jne    aa85 <homenet_toi+0x39>
    aad8:	48 8d 45 df          	lea    rax,[rbp-0x21]
    aadc:	ba 10 00 00 00       	mov    edx,0x10
    aae1:	be 00 00 00 00       	mov    esi,0x0
    aae6:	48 89 c7             	mov    rdi,rax
    aae9:	e8 b2 7b ff ff       	call   26a0 <strtol@plt>
    aaee:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    aaf2:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    aaf9:	00 00 
    aafb:	74 05                	je     ab02 <homenet_toi+0xb6>
    aafd:	e8 3e 7c ff ff       	call   2740 <__stack_chk_fail@plt>
    ab02:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    ab06:	c9                   	leave  
    ab07:	c3                   	ret    

000000000000ab08 <tcp_check_sum_passed>:
    ab08:	f3 0f 1e fa          	endbr64 
    ab0c:	55                   	push   rbp
    ab0d:	48 89 e5             	mov    rbp,rsp
    ab10:	41 54                	push   r12
    ab12:	53                   	push   rbx
    ab13:	48 83 ec 30          	sub    rsp,0x30
    ab17:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    ab1b:	48 89 75 c0          	mov    QWORD PTR [rbp-0x40],rsi
    ab1f:	bb 00 00 00 00       	mov    ebx,0x0
    ab24:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    ab28:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    ab2c:	0f b7 c0             	movzx  eax,ax
    ab2f:	89 c7                	mov    edi,eax
    ab31:	e8 fa 7a ff ff       	call   2630 <ntohs@plt>
    ab36:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    ab3a:	0f b6 12             	movzx  edx,BYTE PTR [rdx]
    ab3d:	83 e2 0f             	and    edx,0xf
    ab40:	0f b6 d2             	movzx  edx,dl
    ab43:	c1 e2 02             	shl    edx,0x2
    ab46:	29 d0                	sub    eax,edx
    ab48:	66 89 45 de          	mov    WORD PTR [rbp-0x22],ax
    ab4c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    ab50:	0f b7 40 10          	movzx  eax,WORD PTR [rax+0x10]
    ab54:	0f b7 c0             	movzx  eax,ax
    ab57:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    ab5b:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    ab5f:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    ab63:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    ab67:	66 c7 40 10 00 00    	mov    WORD PTR [rax+0x10],0x0
    ab6d:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    ab71:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    ab74:	c1 e8 10             	shr    eax,0x10
    ab77:	89 c0                	mov    eax,eax
    ab79:	0f b7 c0             	movzx  eax,ax
    ab7c:	48 01 c3             	add    rbx,rax
    ab7f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    ab83:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    ab86:	89 c0                	mov    eax,eax
    ab88:	0f b7 c0             	movzx  eax,ax
    ab8b:	48 01 c3             	add    rbx,rax
    ab8e:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    ab92:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    ab95:	c1 e8 10             	shr    eax,0x10
    ab98:	89 c0                	mov    eax,eax
    ab9a:	0f b7 c0             	movzx  eax,ax
    ab9d:	48 01 c3             	add    rbx,rax
    aba0:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    aba4:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    aba7:	89 c0                	mov    eax,eax
    aba9:	0f b7 c0             	movzx  eax,ax
    abac:	48 01 c3             	add    rbx,rax
    abaf:	bf 06 00 00 00       	mov    edi,0x6
    abb4:	e8 37 79 ff ff       	call   24f0 <htons@plt>
    abb9:	0f b7 c0             	movzx  eax,ax
    abbc:	48 01 c3             	add    rbx,rax
    abbf:	0f b7 45 de          	movzx  eax,WORD PTR [rbp-0x22]
    abc3:	89 c7                	mov    edi,eax
    abc5:	e8 26 79 ff ff       	call   24f0 <htons@plt>
    abca:	0f b7 c0             	movzx  eax,ax
    abcd:	48 01 c3             	add    rbx,rax
    abd0:	eb 1a                	jmp    abec <tcp_check_sum_passed+0xe4>
    abd2:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    abd6:	48 8d 50 14          	lea    rdx,[rax+0x14]
    abda:	48 89 55 c0          	mov    QWORD PTR [rbp-0x40],rdx
    abde:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    abe1:	0f b6 c0             	movzx  eax,al
    abe4:	48 01 c3             	add    rbx,rax
    abe7:	66 83 6d de 02       	sub    WORD PTR [rbp-0x22],0x2
    abec:	66 83 7d de 01       	cmp    WORD PTR [rbp-0x22],0x1
    abf1:	77 df                	ja     abd2 <tcp_check_sum_passed+0xca>
    abf3:	66 83 7d de 00       	cmp    WORD PTR [rbp-0x22],0x0
    abf8:	74 1d                	je     ac17 <tcp_check_sum_passed+0x10f>
    abfa:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    abfe:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    ac01:	0f b6 c0             	movzx  eax,al
    ac04:	48 01 c3             	add    rbx,rax
    ac07:	eb 0e                	jmp    ac17 <tcp_check_sum_passed+0x10f>
    ac09:	0f b7 c3             	movzx  eax,bx
    ac0c:	48 c1 eb 10          	shr    rbx,0x10
    ac10:	48 89 da             	mov    rdx,rbx
    ac13:	48 8d 1c 10          	lea    rbx,[rax+rdx*1]
    ac17:	48 89 d8             	mov    rax,rbx
    ac1a:	48 c1 e8 10          	shr    rax,0x10
    ac1e:	48 85 c0             	test   rax,rax
    ac21:	75 e6                	jne    ac09 <tcp_check_sum_passed+0x101>
    ac23:	48 f7 d3             	not    rbx
    ac26:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    ac2a:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    ac2e:	66 89 50 10          	mov    WORD PTR [rax+0x10],dx
    ac32:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    ac36:	0f b7 40 10          	movzx  eax,WORD PTR [rax+0x10]
    ac3a:	0f b7 c0             	movzx  eax,ax
    ac3d:	89 c7                	mov    edi,eax
    ac3f:	e8 ec 79 ff ff       	call   2630 <ntohs@plt>
    ac44:	44 0f b7 e0          	movzx  r12d,ax
    ac48:	89 d8                	mov    eax,ebx
    ac4a:	0f b7 c0             	movzx  eax,ax
    ac4d:	89 c7                	mov    edi,eax
    ac4f:	e8 dc 79 ff ff       	call   2630 <ntohs@plt>
    ac54:	0f b7 c0             	movzx  eax,ax
    ac57:	44 89 e2             	mov    edx,r12d
    ac5a:	89 c6                	mov    esi,eax
    ac5c:	48 8d 3d 00 31 00 00 	lea    rdi,[rip+0x3100]        # dd63 <_IO_stdin_used+0x1d63>
    ac63:	b8 00 00 00 00       	mov    eax,0x0
    ac68:	e8 13 78 ff ff       	call   2480 <printf@plt>
    ac6d:	89 d8                	mov    eax,ebx
    ac6f:	0f b7 c0             	movzx  eax,ax
    ac72:	89 c7                	mov    edi,eax
    ac74:	e8 b7 79 ff ff       	call   2630 <ntohs@plt>
    ac79:	89 c3                	mov    ebx,eax
    ac7b:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    ac7f:	0f b7 c0             	movzx  eax,ax
    ac82:	89 c7                	mov    edi,eax
    ac84:	e8 a7 79 ff ff       	call   2630 <ntohs@plt>
    ac89:	66 39 c3             	cmp    bx,ax
    ac8c:	75 07                	jne    ac95 <tcp_check_sum_passed+0x18d>
    ac8e:	b8 01 00 00 00       	mov    eax,0x1
    ac93:	eb 05                	jmp    ac9a <tcp_check_sum_passed+0x192>
    ac95:	b8 00 00 00 00       	mov    eax,0x0
    ac9a:	48 83 c4 30          	add    rsp,0x30
    ac9e:	5b                   	pop    rbx
    ac9f:	41 5c                	pop    r12
    aca1:	5d                   	pop    rbp
    aca2:	c3                   	ret    

000000000000aca3 <run_hello_script>:
    aca3:	f3 0f 1e fa          	endbr64 
    aca7:	55                   	push   rbp
    aca8:	48 89 e5             	mov    rbp,rsp
    acab:	48 83 ec 10          	sub    rsp,0x10
    acaf:	e8 5c 7a ff ff       	call   2710 <luaL_newstate@plt>
    acb4:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    acb8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    acbc:	48 89 c7             	mov    rdi,rax
    acbf:	e8 6c 7a ff ff       	call   2730 <luaL_openlibs@plt>
    acc4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    acc8:	ba 00 00 00 00       	mov    edx,0x0
    accd:	48 8d 35 a4 30 00 00 	lea    rsi,[rip+0x30a4]        # dd78 <_IO_stdin_used+0x1d78>
    acd4:	48 89 c7             	mov    rdi,rax
    acd7:	e8 d4 79 ff ff       	call   26b0 <luaL_loadfilex@plt>
    acdc:	85 c0                	test   eax,eax
    acde:	75 2b                	jne    ad0b <run_hello_script+0x68>
    ace0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ace4:	41 b9 00 00 00 00    	mov    r9d,0x0
    acea:	41 b8 00 00 00 00    	mov    r8d,0x0
    acf0:	b9 00 00 00 00       	mov    ecx,0x0
    acf5:	ba ff ff ff ff       	mov    edx,0xffffffff
    acfa:	be 00 00 00 00       	mov    esi,0x0
    acff:	48 89 c7             	mov    rdi,rax
    ad02:	e8 59 79 ff ff       	call   2660 <lua_pcallk@plt>
    ad07:	85 c0                	test   eax,eax
    ad09:	74 07                	je     ad12 <run_hello_script+0x6f>
    ad0b:	b8 01 00 00 00       	mov    eax,0x1
    ad10:	eb 05                	jmp    ad17 <run_hello_script+0x74>
    ad12:	b8 00 00 00 00       	mov    eax,0x0
    ad17:	85 c0                	test   eax,eax
    ad19:	75 1e                	jne    ad39 <run_hello_script+0x96>
    ad1b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad1f:	48 89 c7             	mov    rdi,rax
    ad22:	e8 d9 79 ff ff       	call   2700 <lua_gettop@plt>
    ad27:	f7 d0                	not    eax
    ad29:	89 c2                	mov    edx,eax
    ad2b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad2f:	89 d6                	mov    esi,edx
    ad31:	48 89 c7             	mov    rdi,rax
    ad34:	e8 87 78 ff ff       	call   25c0 <lua_settop@plt>
    ad39:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad3d:	48 89 c7             	mov    rdi,rax
    ad40:	e8 4b 7a ff ff       	call   2790 <lua_close@plt>
    ad45:	90                   	nop
    ad46:	c9                   	leave  
    ad47:	c3                   	ret    

000000000000ad48 <collect_scripts>:
    ad48:	f3 0f 1e fa          	endbr64 
    ad4c:	55                   	push   rbp
    ad4d:	48 89 e5             	mov    rbp,rsp
    ad50:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    ad57:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    ad5e:	00 00 
    ad60:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    ad64:	31 c0                	xor    eax,eax
    ad66:	48 8d 35 29 30 00 00 	lea    rsi,[rip+0x3029]        # dd96 <_IO_stdin_used+0x1d96>
    ad6d:	48 8d 3d 24 30 00 00 	lea    rdi,[rip+0x3024]        # dd98 <_IO_stdin_used+0x1d98>
    ad74:	e8 f7 77 ff ff       	call   2570 <fopen@plt>
    ad79:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
    ad7d:	48 83 7d 80 00       	cmp    QWORD PTR [rbp-0x80],0x0
    ad82:	75 16                	jne    ad9a <collect_scripts+0x52>
    ad84:	48 8d 3d 25 30 00 00 	lea    rdi,[rip+0x3025]        # ddb0 <_IO_stdin_used+0x1db0>
    ad8b:	e8 50 77 ff ff       	call   24e0 <puts@plt>
    ad90:	bf ff ff ff ff       	mov    edi,0xffffffff
    ad95:	e8 66 77 ff ff       	call   2500 <exit@plt>
    ad9a:	48 c7 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],0x0
    ada1:	00 00 00 00 
    ada5:	48 8d 45 90          	lea    rax,[rbp-0x70]
    ada9:	ba 00 00 00 00       	mov    edx,0x0
    adae:	48 8d 35 3d 30 00 00 	lea    rsi,[rip+0x303d]        # ddf2 <_IO_stdin_used+0x1df2>
    adb5:	48 89 c7             	mov    rdi,rax
    adb8:	e8 13 79 ff ff       	call   26d0 <regcomp@plt>
    adbd:	e9 86 00 00 00       	jmp    ae48 <collect_scripts+0x100>
    adc2:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    adc9:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    adcc:	3c 23                	cmp    al,0x23
    adce:	75 02                	jne    add2 <collect_scripts+0x8a>
    add0:	eb 76                	jmp    ae48 <collect_scripts+0x100>
    add2:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    add9:	ba 0e 00 00 00       	mov    edx,0xe
    adde:	48 8d 35 17 30 00 00 	lea    rsi,[rip+0x3017]        # ddfc <_IO_stdin_used+0x1dfc>
    ade5:	48 89 c7             	mov    rdi,rax
    ade8:	e8 63 77 ff ff       	call   2550 <strncmp@plt>
    aded:	85 c0                	test   eax,eax
    adef:	75 34                	jne    ae25 <collect_scripts+0xdd>
    adf1:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    adf8:	48 8d 50 0e          	lea    rdx,[rax+0xe]
    adfc:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    ae00:	48 89 d6             	mov    rsi,rdx
    ae03:	48 89 c7             	mov    rdi,rax
    ae06:	e8 65 79 ff ff       	call   2770 <strcpy@plt>
    ae0b:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    ae0f:	48 8d 35 f5 2f 00 00 	lea    rsi,[rip+0x2ff5]        # de0b <_IO_stdin_used+0x1e0b>
    ae16:	48 89 c7             	mov    rdi,rax
    ae19:	e8 b2 79 ff ff       	call   27d0 <strcspn@plt>
    ae1e:	c6 44 05 d0 00       	mov    BYTE PTR [rbp+rax*1-0x30],0x0
    ae23:	eb 23                	jmp    ae48 <collect_scripts+0x100>
    ae25:	48 8b b5 78 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x88]
    ae2c:	48 8d 45 90          	lea    rax,[rbp-0x70]
    ae30:	41 b8 00 00 00 00    	mov    r8d,0x0
    ae36:	b9 00 00 00 00       	mov    ecx,0x0
    ae3b:	ba 00 00 00 00       	mov    edx,0x0
    ae40:	48 89 c7             	mov    rdi,rax
    ae43:	e8 38 77 ff ff       	call   2580 <regexec@plt>
    ae48:	48 8b 55 80          	mov    rdx,QWORD PTR [rbp-0x80]
    ae4c:	48 8d 8d 70 ff ff ff 	lea    rcx,[rbp-0x90]
    ae53:	48 8d 85 78 ff ff ff 	lea    rax,[rbp-0x88]
    ae5a:	48 89 ce             	mov    rsi,rcx
    ae5d:	48 89 c7             	mov    rdi,rax
    ae60:	e8 fb 78 ff ff       	call   2760 <getline@plt>
    ae65:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    ae69:	48 83 7d 88 ff       	cmp    QWORD PTR [rbp-0x78],0xffffffffffffffff
    ae6e:	0f 85 4e ff ff ff    	jne    adc2 <collect_scripts+0x7a>
    ae74:	90                   	nop
    ae75:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae79:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    ae80:	00 00 
    ae82:	74 05                	je     ae89 <collect_scripts+0x141>
    ae84:	e8 b7 78 ff ff       	call   2740 <__stack_chk_fail@plt>
    ae89:	c9                   	leave  
    ae8a:	c3                   	ret    

000000000000ae8b <ip6decode>:
    ae8b:	f3 0f 1e fa          	endbr64 
    ae8f:	55                   	push   rbp
    ae90:	48 89 e5             	mov    rbp,rsp
    ae93:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    ae9a:	48 89 bd 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdi
    aea1:	48 89 b5 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rsi
    aea8:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    aeaf:	00 00 
    aeb1:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    aeb5:	31 c0                	xor    eax,eax
    aeb7:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    aebe:	48 83 c0 0e          	add    rax,0xe
    aec2:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    aec6:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    aeca:	48 83 c0 08          	add    rax,0x8
    aece:	48 89 c7             	mov    rdi,rax
    aed1:	e8 9d 82 ff ff       	call   3173 <inet6_ntoa>
    aed6:	48 89 c1             	mov    rcx,rax
    aed9:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    aedd:	ba 29 00 00 00       	mov    edx,0x29
    aee2:	48 89 ce             	mov    rsi,rcx
    aee5:	48 89 c7             	mov    rdi,rax
    aee8:	e8 d3 78 ff ff       	call   27c0 <strncpy@plt>
    aeed:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    aef1:	48 83 c0 18          	add    rax,0x18
    aef5:	48 89 c7             	mov    rdi,rax
    aef8:	e8 76 82 ff ff       	call   3173 <inet6_ntoa>
    aefd:	48 89 c1             	mov    rcx,rax
    af00:	48 8d 45 90          	lea    rax,[rbp-0x70]
    af04:	ba 29 00 00 00       	mov    edx,0x29
    af09:	48 89 ce             	mov    rsi,rcx
    af0c:	48 89 c7             	mov    rdi,rax
    af0f:	e8 ac 78 ff ff       	call   27c0 <strncpy@plt>
    af14:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    af18:	0f b6 40 06          	movzx  eax,BYTE PTR [rax+0x6]
    af1c:	0f b6 c0             	movzx  eax,al
    af1f:	85 c0                	test   eax,eax
    af21:	75 1c                	jne    af3f <ip6decode+0xb4>
    af23:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    af27:	48 8d 4d c0          	lea    rcx,[rbp-0x40]
    af2b:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    af32:	48 89 ce             	mov    rsi,rcx
    af35:	48 89 c7             	mov    rdi,rax
    af38:	e8 d1 8a ff ff       	call   3a0e <ip6_icmp_decode>
    af3d:	eb 28                	jmp    af67 <ip6decode+0xdc>
    af3f:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    af43:	0f b6 40 06          	movzx  eax,BYTE PTR [rax+0x6]
    af47:	0f b6 c8             	movzx  ecx,al
    af4a:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    af4e:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    af52:	48 89 c6             	mov    rsi,rax
    af55:	48 8d 3d b4 2e 00 00 	lea    rdi,[rip+0x2eb4]        # de10 <_IO_stdin_used+0x1e10>
    af5c:	b8 00 00 00 00       	mov    eax,0x0
    af61:	e8 1a 75 ff ff       	call   2480 <printf@plt>
    af66:	90                   	nop
    af67:	90                   	nop
    af68:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    af6c:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    af73:	00 00 
    af75:	74 05                	je     af7c <ip6decode+0xf1>
    af77:	e8 c4 77 ff ff       	call   2740 <__stack_chk_fail@plt>
    af7c:	c9                   	leave  
    af7d:	c3                   	ret    

000000000000af7e <crash_handler>:
    af7e:	f3 0f 1e fa          	endbr64 
    af82:	55                   	push   rbp
    af83:	48 89 e5             	mov    rbp,rsp
    af86:	41 54                	push   r12
    af88:	53                   	push   rbx
    af89:	48 81 ec f0 00 00 00 	sub    rsp,0xf0
    af90:	89 bd 0c ff ff ff    	mov    DWORD PTR [rbp-0xf4],edi
    af96:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    af9d:	00 00 
    af9f:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    afa3:	31 c0                	xor    eax,eax
    afa5:	48 8d 85 30 ff ff ff 	lea    rax,[rbp-0xd0]
    afac:	be 14 00 00 00       	mov    esi,0x14
    afb1:	48 89 c7             	mov    rdi,rax
    afb4:	e8 f7 74 ff ff       	call   24b0 <backtrace@plt>
    afb9:	89 85 18 ff ff ff    	mov    DWORD PTR [rbp-0xe8],eax
    afbf:	8b 95 18 ff ff ff    	mov    edx,DWORD PTR [rbp-0xe8]
    afc5:	48 8d 85 30 ff ff ff 	lea    rax,[rbp-0xd0]
    afcc:	89 d6                	mov    esi,edx
    afce:	48 89 c7             	mov    rdi,rax
    afd1:	e8 0a 76 ff ff       	call   25e0 <backtrace_symbols@plt>
    afd6:	48 89 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rax
    afdd:	b8 00 00 00 00       	mov    eax,0x0
    afe2:	e8 58 83 ff ff       	call   333f <get_formated_time>
    afe7:	48 89 c6             	mov    rsi,rax
    afea:	48 8d 3d 47 2e 00 00 	lea    rdi,[rip+0x2e47]        # de38 <_IO_stdin_used+0x1e38>
    aff1:	b8 00 00 00 00       	mov    eax,0x0
    aff6:	e8 85 74 ff ff       	call   2480 <printf@plt>
    affb:	48 8d 3d 65 2e 00 00 	lea    rdi,[rip+0x2e65]        # de67 <_IO_stdin_used+0x1e67>
    b002:	e8 d9 74 ff ff       	call   24e0 <puts@plt>
    b007:	48 83 bd 20 ff ff ff 	cmp    QWORD PTR [rbp-0xe0],0x0
    b00e:	00 
    b00f:	0f 84 56 01 00 00    	je     b16b <crash_handler+0x1ed>
    b015:	c7 85 14 ff ff ff 00 	mov    DWORD PTR [rbp-0xec],0x0
    b01c:	00 00 00 
    b01f:	e9 35 01 00 00       	jmp    b159 <crash_handler+0x1db>
    b024:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b02a:	48 98                	cdqe   
    b02c:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    b033:	00 
    b034:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b03b:	48 01 d0             	add    rax,rdx
    b03e:	48 8b 00             	mov    rax,QWORD PTR [rax]
    b041:	48 8d 35 33 2e 00 00 	lea    rsi,[rip+0x2e33]        # de7b <_IO_stdin_used+0x1e7b>
    b048:	48 89 c7             	mov    rdi,rax
    b04b:	e8 20 76 ff ff       	call   2670 <strstr@plt>
    b050:	48 85 c0             	test   rax,rax
    b053:	0f 85 f8 00 00 00    	jne    b151 <crash_handler+0x1d3>
    b059:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b05f:	48 98                	cdqe   
    b061:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    b068:	00 
    b069:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b070:	48 01 d0             	add    rax,rdx
    b073:	4c 8b 20             	mov    r12,QWORD PTR [rax]
    b076:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b07c:	48 98                	cdqe   
    b07e:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    b085:	00 
    b086:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b08d:	48 01 d0             	add    rax,rdx
    b090:	48 8b 00             	mov    rax,QWORD PTR [rax]
    b093:	be 2b 00 00 00       	mov    esi,0x2b
    b098:	48 89 c7             	mov    rdi,rax
    b09b:	e8 3a 84 ff ff       	call   34da <strloc>
    b0a0:	48 98                	cdqe   
    b0a2:	48 83 c0 01          	add    rax,0x1
    b0a6:	49 8d 14 04          	lea    rdx,[r12+rax*1]
    b0aa:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b0ae:	48 8d 35 ca 2d 00 00 	lea    rsi,[rip+0x2dca]        # de7f <_IO_stdin_used+0x1e7f>
    b0b5:	48 89 c7             	mov    rdi,rax
    b0b8:	b8 00 00 00 00       	mov    eax,0x0
    b0bd:	e8 5e 75 ff ff       	call   2620 <sprintf@plt>
    b0c2:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b0c6:	be 29 00 00 00       	mov    esi,0x29
    b0cb:	48 89 c7             	mov    rdi,rax
    b0ce:	e8 07 84 ff ff       	call   34da <strloc>
    b0d3:	48 98                	cdqe   
    b0d5:	c6 44 05 d0 00       	mov    BYTE PTR [rbp+rax*1-0x30],0x0
    b0da:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b0de:	ba 10 00 00 00       	mov    edx,0x10
    b0e3:	be 00 00 00 00       	mov    esi,0x0
    b0e8:	48 89 c7             	mov    rdi,rax
    b0eb:	e8 b0 75 ff ff       	call   26a0 <strtol@plt>
    b0f0:	89 85 1c ff ff ff    	mov    DWORD PTR [rbp-0xe4],eax
    b0f6:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [rbp-0xe4]
    b0fc:	89 c7                	mov    edi,eax
    b0fe:	e8 09 01 00 00       	call   b20c <offset_search>
    b103:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
    b10a:	83 bd 1c ff ff ff 00 	cmp    DWORD PTR [rbp-0xe4],0x0
    b111:	74 23                	je     b136 <crash_handler+0x1b8>
    b113:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    b11a:	8b 95 1c ff ff ff    	mov    edx,DWORD PTR [rbp-0xe4]
    b120:	48 89 c6             	mov    rsi,rax
    b123:	48 8d 3d 59 2d 00 00 	lea    rdi,[rip+0x2d59]        # de83 <_IO_stdin_used+0x1e83>
    b12a:	b8 00 00 00 00       	mov    eax,0x0
    b12f:	e8 4c 73 ff ff       	call   2480 <printf@plt>
    b134:	eb 1c                	jmp    b152 <crash_handler+0x1d4>
    b136:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [rbp-0xe4]
    b13c:	89 c6                	mov    esi,eax
    b13e:	48 8d 3d 5b 2d 00 00 	lea    rdi,[rip+0x2d5b]        # dea0 <_IO_stdin_used+0x1ea0>
    b145:	b8 00 00 00 00       	mov    eax,0x0
    b14a:	e8 31 73 ff ff       	call   2480 <printf@plt>
    b14f:	eb 01                	jmp    b152 <crash_handler+0x1d4>
    b151:	90                   	nop
    b152:	83 85 14 ff ff ff 01 	add    DWORD PTR [rbp-0xec],0x1
    b159:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b15f:	3b 85 18 ff ff ff    	cmp    eax,DWORD PTR [rbp-0xe8]
    b165:	0f 8c b9 fe ff ff    	jl     b024 <crash_handler+0xa6>
    b16b:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b172:	48 89 c7             	mov    rdi,rax
    b175:	e8 76 74 ff ff       	call   25f0 <free@plt>
    b17a:	48 8d 3d 49 2d 00 00 	lea    rdi,[rip+0x2d49]        # deca <_IO_stdin_used+0x1eca>
    b181:	e8 5a 73 ff ff       	call   24e0 <puts@plt>
    b186:	89 c6                	mov    esi,eax
    b188:	48 8d 3d 4a 2d 00 00 	lea    rdi,[rip+0x2d4a]        # ded9 <_IO_stdin_used+0x1ed9>
    b18f:	b8 00 00 00 00       	mov    eax,0x0
    b194:	e8 e7 72 ff ff       	call   2480 <printf@plt>
    b199:	89 d8                	mov    eax,ebx
    b19b:	89 c6                	mov    esi,eax
    b19d:	48 8d 3d 45 2d 00 00 	lea    rdi,[rip+0x2d45]        # dee9 <_IO_stdin_used+0x1ee9>
    b1a4:	b8 00 00 00 00       	mov    eax,0x0
    b1a9:	e8 d2 72 ff ff       	call   2480 <printf@plt>
    b1ae:	89 d8                	mov    eax,ebx
    b1b0:	89 c6                	mov    esi,eax
    b1b2:	48 8d 3d 40 2d 00 00 	lea    rdi,[rip+0x2d40]        # def9 <_IO_stdin_used+0x1ef9>
    b1b9:	b8 00 00 00 00       	mov    eax,0x0
    b1be:	e8 bd 72 ff ff       	call   2480 <printf@plt>
    b1c3:	89 c8                	mov    eax,ecx
    b1c5:	89 c6                	mov    esi,eax
    b1c7:	48 8d 3d 3b 2d 00 00 	lea    rdi,[rip+0x2d3b]        # df09 <_IO_stdin_used+0x1f09>
    b1ce:	b8 00 00 00 00       	mov    eax,0x0
    b1d3:	e8 a8 72 ff ff       	call   2480 <printf@plt>
    b1d8:	89 e0                	mov    eax,esp
    b1da:	89 c6                	mov    esi,eax
    b1dc:	48 8d 3d 36 2d 00 00 	lea    rdi,[rip+0x2d36]        # df19 <_IO_stdin_used+0x1f19>
    b1e3:	b8 00 00 00 00       	mov    eax,0x0
    b1e8:	e8 93 72 ff ff       	call   2480 <printf@plt>
    b1ed:	89 e8                	mov    eax,ebp
    b1ef:	89 c6                	mov    esi,eax
    b1f1:	48 8d 3d 31 2d 00 00 	lea    rdi,[rip+0x2d31]        # df29 <_IO_stdin_used+0x1f29>
    b1f8:	b8 00 00 00 00       	mov    eax,0x0
    b1fd:	e8 7e 72 ff ff       	call   2480 <printf@plt>
    b202:	bf 01 00 00 00       	mov    edi,0x1
    b207:	e8 f4 72 ff ff       	call   2500 <exit@plt>

000000000000b20c <offset_search>:
    b20c:	f3 0f 1e fa          	endbr64 
    b210:	55                   	push   rbp
    b211:	48 89 e5             	mov    rbp,rsp
    b214:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    b217:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    b21e:	eb 44                	jmp    b264 <offset_search+0x58>
    b220:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    b223:	48 63 d0             	movsxd rdx,eax
    b226:	48 89 d0             	mov    rax,rdx
    b229:	48 c1 e0 02          	shl    rax,0x2
    b22d:	48 01 d0             	add    rax,rdx
    b230:	48 c1 e0 03          	shl    rax,0x3
    b234:	48 8d 15 c5 d5 12 00 	lea    rdx,[rip+0x12d5c5]        # 138800 <fn_mem_map>
    b23b:	48 01 d0             	add    rax,rdx
    b23e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b242:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b246:	8b 40 20             	mov    eax,DWORD PTR [rax+0x20]
    b249:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    b24c:	76 12                	jbe    b260 <offset_search+0x54>
    b24e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b252:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    b255:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    b258:	73 06                	jae    b260 <offset_search+0x54>
    b25a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b25e:	eb 14                	jmp    b274 <offset_search+0x68>
    b260:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    b264:	8b 05 96 fd 12 00    	mov    eax,DWORD PTR [rip+0x12fd96]        # 13b000 <fn_num>
    b26a:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    b26d:	7c b1                	jl     b220 <offset_search+0x14>
    b26f:	b8 00 00 00 00       	mov    eax,0x0
    b274:	5d                   	pop    rbp
    b275:	c3                   	ret    

000000000000b276 <add_fn>:
    b276:	f3 0f 1e fa          	endbr64 
    b27a:	55                   	push   rbp
    b27b:	48 89 e5             	mov    rbp,rsp
    b27e:	48 83 ec 20          	sub    rsp,0x20
    b282:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    b286:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    b289:	89 55 e0             	mov    DWORD PTR [rbp-0x20],edx
    b28c:	8b 05 6e fd 12 00    	mov    eax,DWORD PTR [rip+0x12fd6e]        # 13b000 <fn_num>
    b292:	8d 50 01             	lea    edx,[rax+0x1]
    b295:	89 15 65 fd 12 00    	mov    DWORD PTR [rip+0x12fd65],edx        # 13b000 <fn_num>
    b29b:	48 63 d0             	movsxd rdx,eax
    b29e:	48 89 d0             	mov    rax,rdx
    b2a1:	48 c1 e0 02          	shl    rax,0x2
    b2a5:	48 01 d0             	add    rax,rdx
    b2a8:	48 c1 e0 03          	shl    rax,0x3
    b2ac:	48 8d 15 4d d5 12 00 	lea    rdx,[rip+0x12d54d]        # 138800 <fn_mem_map>
    b2b3:	48 01 d0             	add    rax,rdx
    b2b6:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b2ba:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b2be:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    b2c2:	48 89 d6             	mov    rsi,rdx
    b2c5:	48 89 c7             	mov    rdi,rax
    b2c8:	e8 a3 74 ff ff       	call   2770 <strcpy@plt>
    b2cd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b2d1:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    b2d4:	89 50 20             	mov    DWORD PTR [rax+0x20],edx
    b2d7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b2db:	8b 55 e0             	mov    edx,DWORD PTR [rbp-0x20]
    b2de:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    b2e1:	90                   	nop
    b2e2:	c9                   	leave  
    b2e3:	c3                   	ret    

000000000000b2e4 <print_mem_map>:
    b2e4:	f3 0f 1e fa          	endbr64 
    b2e8:	55                   	push   rbp
    b2e9:	48 89 e5             	mov    rbp,rsp
    b2ec:	48 83 ec 10          	sub    rsp,0x10
    b2f0:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    b2f7:	eb 4c                	jmp    b345 <print_mem_map+0x61>
    b2f9:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    b2fc:	48 63 d0             	movsxd rdx,eax
    b2ff:	48 89 d0             	mov    rax,rdx
    b302:	48 c1 e0 02          	shl    rax,0x2
    b306:	48 01 d0             	add    rax,rdx
    b309:	48 c1 e0 03          	shl    rax,0x3
    b30d:	48 8d 15 ec d4 12 00 	lea    rdx,[rip+0x12d4ec]        # 138800 <fn_mem_map>
    b314:	48 01 d0             	add    rax,rdx
    b317:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b31b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b31f:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    b322:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b326:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    b329:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b32d:	48 89 c6             	mov    rsi,rax
    b330:	48 8d 3d 09 2c 00 00 	lea    rdi,[rip+0x2c09]        # df40 <_IO_stdin_used+0x1f40>
    b337:	b8 00 00 00 00       	mov    eax,0x0
    b33c:	e8 3f 71 ff ff       	call   2480 <printf@plt>
    b341:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    b345:	8b 05 b5 fc 12 00    	mov    eax,DWORD PTR [rip+0x12fcb5]        # 13b000 <fn_num>
    b34b:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    b34e:	7c a9                	jl     b2f9 <print_mem_map+0x15>
    b350:	90                   	nop
    b351:	90                   	nop
    b352:	c9                   	leave  
    b353:	c3                   	ret    

000000000000b354 <load_fn_mem_map>:
    b354:	f3 0f 1e fa          	endbr64 
    b358:	55                   	push   rbp
    b359:	48 89 e5             	mov    rbp,rsp
    b35c:	53                   	push   rbx
    b35d:	48 83 ec 78          	sub    rsp,0x78
    b361:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b368:	00 00 
    b36a:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    b36e:	31 c0                	xor    eax,eax
    b370:	48 8d 35 e1 2b 00 00 	lea    rsi,[rip+0x2be1]        # df58 <_IO_stdin_used+0x1f58>
    b377:	48 8d 3d dc 2b 00 00 	lea    rdi,[rip+0x2bdc]        # df5a <_IO_stdin_used+0x1f5a>
    b37e:	e8 ed 71 ff ff       	call   2570 <fopen@plt>
    b383:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    b387:	48 83 7d b0 00       	cmp    QWORD PTR [rbp-0x50],0x0
    b38c:	75 16                	jne    b3a4 <load_fn_mem_map+0x50>
    b38e:	48 8d 3d e3 2b 00 00 	lea    rdi,[rip+0x2be3]        # df78 <_IO_stdin_used+0x1f78>
    b395:	e8 46 71 ff ff       	call   24e0 <puts@plt>
    b39a:	bf ff ff ff ff       	mov    edi,0xffffffff
    b39f:	e8 5c 71 ff ff       	call   2500 <exit@plt>
    b3a4:	48 c7 45 98 00 00 00 	mov    QWORD PTR [rbp-0x68],0x0
    b3ab:	00 
    b3ac:	48 c7 45 a0 00 00 00 	mov    QWORD PTR [rbp-0x60],0x0
    b3b3:	00 
    b3b4:	e9 db 00 00 00       	jmp    b494 <load_fn_mem_map+0x140>
    b3b9:	48 8b 5d 98          	mov    rbx,QWORD PTR [rbp-0x68]
    b3bd:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    b3c1:	48 8d 35 17 2c 00 00 	lea    rsi,[rip+0x2c17]        # dfdf <_IO_stdin_used+0x1fdf>
    b3c8:	48 89 c7             	mov    rdi,rax
    b3cb:	e8 00 74 ff ff       	call   27d0 <strcspn@plt>
    b3d0:	48 01 d8             	add    rax,rbx
    b3d3:	c6 00 00             	mov    BYTE PTR [rax],0x0
    b3d6:	c7 45 94 00 00 00 00 	mov    DWORD PTR [rbp-0x6c],0x0
    b3dd:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    b3e1:	48 8d 35 f9 2b 00 00 	lea    rsi,[rip+0x2bf9]        # dfe1 <_IO_stdin_used+0x1fe1>
    b3e8:	48 89 c7             	mov    rdi,rax
    b3eb:	e8 90 73 ff ff       	call   2780 <strtok@plt>
    b3f0:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    b3f4:	eb 7f                	jmp    b475 <load_fn_mem_map+0x121>
    b3f6:	83 7d 94 02          	cmp    DWORD PTR [rbp-0x6c],0x2
    b3fa:	74 44                	je     b440 <load_fn_mem_map+0xec>
    b3fc:	83 7d 94 02          	cmp    DWORD PTR [rbp-0x6c],0x2
    b400:	7f 59                	jg     b45b <load_fn_mem_map+0x107>
    b402:	83 7d 94 00          	cmp    DWORD PTR [rbp-0x6c],0x0
    b406:	74 08                	je     b410 <load_fn_mem_map+0xbc>
    b408:	83 7d 94 01          	cmp    DWORD PTR [rbp-0x6c],0x1
    b40c:	74 17                	je     b425 <load_fn_mem_map+0xd1>
    b40e:	eb 4b                	jmp    b45b <load_fn_mem_map+0x107>
    b410:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    b414:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b418:	48 89 d6             	mov    rsi,rdx
    b41b:	48 89 c7             	mov    rdi,rax
    b41e:	e8 4d 73 ff ff       	call   2770 <strcpy@plt>
    b423:	eb 37                	jmp    b45c <load_fn_mem_map+0x108>
    b425:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    b429:	ba 10 00 00 00       	mov    edx,0x10
    b42e:	be 00 00 00 00       	mov    esi,0x0
    b433:	48 89 c7             	mov    rdi,rax
    b436:	e8 65 72 ff ff       	call   26a0 <strtol@plt>
    b43b:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    b43e:	eb 1c                	jmp    b45c <load_fn_mem_map+0x108>
    b440:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    b444:	ba 10 00 00 00       	mov    edx,0x10
    b449:	be 00 00 00 00       	mov    esi,0x0
    b44e:	48 89 c7             	mov    rdi,rax
    b451:	e8 4a 72 ff ff       	call   26a0 <strtol@plt>
    b456:	89 45 90             	mov    DWORD PTR [rbp-0x70],eax
    b459:	eb 01                	jmp    b45c <load_fn_mem_map+0x108>
    b45b:	90                   	nop
    b45c:	48 8d 35 7e 2b 00 00 	lea    rsi,[rip+0x2b7e]        # dfe1 <_IO_stdin_used+0x1fe1>
    b463:	bf 00 00 00 00       	mov    edi,0x0
    b468:	e8 13 73 ff ff       	call   2780 <strtok@plt>
    b46d:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    b471:	83 45 94 01          	add    DWORD PTR [rbp-0x6c],0x1
    b475:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
    b47a:	0f 85 76 ff ff ff    	jne    b3f6 <load_fn_mem_map+0xa2>
    b480:	8b 55 90             	mov    edx,DWORD PTR [rbp-0x70]
    b483:	8b 4d 8c             	mov    ecx,DWORD PTR [rbp-0x74]
    b486:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b48a:	89 ce                	mov    esi,ecx
    b48c:	48 89 c7             	mov    rdi,rax
    b48f:	e8 e2 fd ff ff       	call   b276 <add_fn>
    b494:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
    b498:	48 8d 4d a0          	lea    rcx,[rbp-0x60]
    b49c:	48 8d 45 98          	lea    rax,[rbp-0x68]
    b4a0:	48 89 ce             	mov    rsi,rcx
    b4a3:	48 89 c7             	mov    rdi,rax
    b4a6:	e8 b5 72 ff ff       	call   2760 <getline@plt>
    b4ab:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    b4af:	48 83 7d b8 ff       	cmp    QWORD PTR [rbp-0x48],0xffffffffffffffff
    b4b4:	0f 85 ff fe ff ff    	jne    b3b9 <load_fn_mem_map+0x65>
    b4ba:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b4be:	48 89 c7             	mov    rdi,rax
    b4c1:	e8 ea 72 ff ff       	call   27b0 <fclose@plt>
    b4c6:	90                   	nop
    b4c7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    b4cb:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    b4d2:	00 00 
    b4d4:	74 05                	je     b4db <load_fn_mem_map+0x187>
    b4d6:	e8 65 72 ff ff       	call   2740 <__stack_chk_fail@plt>
    b4db:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    b4df:	c9                   	leave  
    b4e0:	c3                   	ret    

Disassembly of section .fini:

000000000000b4e4 <_fini>:
    b4e4:	f3 0f 1e fa          	endbr64 
    b4e8:	48 83 ec 08          	sub    rsp,0x8
    b4ec:	48 83 c4 08          	add    rsp,0x8
    b4f0:	c3                   	ret    

Disassembly of section .rodata:

000000000000c000 <_IO_stdin_used>:
    c000:	01 00                	add    DWORD PTR [rax],eax
    c002:	02 00                	add    al,BYTE PTR [rax]
    c004:	2f                   	(bad)  
    c005:	65 74 63             	gs je  c06b <_IO_stdin_used+0x6b>
    c008:	2f                   	(bad)  
    c009:	76 69                	jbe    c074 <_IO_stdin_used+0x74>
    c00b:	67 69 6c 2f 76 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x76],0x6c696769
    c012:	69 6c 
    c014:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    c018:	66 00 2f             	data16 add BYTE PTR [rdi],ch
    c01b:	76 61                	jbe    c07e <_IO_stdin_used+0x7e>
    c01d:	72 2f                	jb     c04e <_IO_stdin_used+0x4e>
    c01f:	6c                   	ins    BYTE PTR es:[rdi],dx
    c020:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c021:	67 2f                	addr32 (bad) 
    c023:	76 69                	jbe    c08e <_IO_stdin_used+0x8e>
    c025:	67 69 6c 2f 73 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x6f6c6769
    c02c:	6c 6f 
    c02e:	67 2e 6c             	cs ins BYTE PTR es:[edi],dx
    c031:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c032:	67 00 2f             	add    BYTE PTR [edi],ch
    c035:	65 74 63             	gs je  c09b <_IO_stdin_used+0x9b>
    c038:	2f                   	(bad)  
    c039:	76 69                	jbe    c0a4 <_IO_stdin_used+0xa4>
    c03b:	67 69 6c 2f 68 6f 73 	imul   ebp,DWORD PTR [edi+ebp*1+0x68],0x7374736f
    c042:	74 73 
    c044:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    c048:	66 00 00             	data16 add BYTE PTR [rax],al
    c04b:	00 00                	add    BYTE PTR [rax],al
    c04d:	00 00                	add    BYTE PTR [rax],al
    c04f:	00 1b                	add    BYTE PTR [rbx],bl
    c051:	5b                   	pop    rbx
    c052:	39 30                	cmp    DWORD PTR [rax],esi
    c054:	6d                   	ins    DWORD PTR es:[rdi],dx
    c055:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c05a:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c05f:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c064:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c069:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c06e:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c073:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c078:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c07d:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c082:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c087:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c08c:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c091:	2d 1b 5b 6d 00       	sub    eax,0x6d5b1b
    c096:	00 00                	add    BYTE PTR [rax],al
    c098:	42                   	rex.X
    c099:	41                   	rex.B
    c09a:	44 2d 54 52 41 46    	rex.R sub eax,0x46415254
    c0a0:	46                   	rex.RX
    c0a1:	49                   	rex.WB
    c0a2:	43 20 55 6e          	rex.XB and BYTE PTR [r13+0x6e],dl
    c0a6:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c0aa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c0ab:	20 45 74             	and    BYTE PTR [rbp+0x74],al
    c0ae:	68 65 72 6e 74       	push   0x746e7265
    c0b3:	20 46 72             	and    BYTE PTR [rsi+0x72],al
    c0b6:	61                   	(bad)  
    c0b7:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0b8:	65 20 50 72          	and    BYTE PTR gs:[rax+0x72],dl
    c0bc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c0bd:	74 6f                	je     c12e <_IO_stdin_used+0x12e>
    c0bf:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    c0c2:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    c0c5:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0c6:	62                   	(bad)  
    c0c7:	65 72 00             	gs jb  c0ca <_IO_stdin_used+0xca>
    c0ca:	2f                   	(bad)  
    c0cb:	76 61                	jbe    c12e <_IO_stdin_used+0x12e>
    c0cd:	72 2f                	jb     c0fe <_IO_stdin_used+0xfe>
    c0cf:	6c                   	ins    BYTE PTR es:[rdi],dx
    c0d0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c0d1:	67 2f                	addr32 (bad) 
    c0d3:	76 69                	jbe    c13e <_IO_stdin_used+0x13e>
    c0d5:	67 69 6c 2f 73 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x6f6c6769
    c0dc:	6c 6f 
    c0de:	67 2e 6c             	cs ins BYTE PTR es:[edi],dx
    c0e1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c0e2:	67 00 00             	add    BYTE PTR [eax],al
    c0e5:	00 00                	add    BYTE PTR [rax],al
    c0e7:	00 1b                	add    BYTE PTR [rbx],bl
    c0e9:	5b                   	pop    rbx
    c0ea:	33 3b                	xor    edi,DWORD PTR [rbx]
    c0ec:	33 33                	xor    esi,DWORD PTR [rbx]
    c0ee:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0ef:	00 25 73 00 30 2e    	add    BYTE PTR [rip+0x2e300073],ah        # 2e30c168 <_end+0x2e1d1160>
    c0f5:	30 2e                	xor    BYTE PTR [rsi],ch
    c0f7:	30 2e                	xor    BYTE PTR [rsi],ch
    c0f9:	30 00                	xor    BYTE PTR [rax],al
    c0fb:	00 00                	add    BYTE PTR [rax],al
    c0fd:	00 00                	add    BYTE PTR [rax],al
    c0ff:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    c102:	4f 54                	rex.WRXB push r12
    c104:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    c108:	50                   	push   rax
    c109:	3a 20                	cmp    ah,BYTE PTR [rax]
    c10b:	50                   	push   rax
    c10c:	52                   	push   rdx
    c10d:	4f                   	rex.WRXB
    c10e:	42                   	rex.X
    c10f:	45 3a 20             	cmp    r12b,BYTE PTR [r8]
    c112:	57                   	push   rdi
    c113:	68 6f 20 68 61       	push   0x6168206f
    c118:	73 20                	jae    c13a <_IO_stdin_used+0x13a>
    c11a:	25 73 3f 0a 00       	and    eax,0xa3f73
    c11f:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    c122:	4f 54                	rex.WRXB push r12
    c124:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    c128:	50                   	push   rax
    c129:	3a 20                	cmp    ah,BYTE PTR [rax]
    c12b:	57                   	push   rdi
    c12c:	68 6f 20 69 73       	push   0x7369206f
    c131:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    c134:	20 25 73 3f 20 54    	and    BYTE PTR [rip+0x54203f73],ah        # 542100ad <_end+0x540d50a5>
    c13a:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    c13c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c13d:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # cbb6 <_IO_stdin_used+0xbb6>
    c143:	00 00                	add    BYTE PTR [rax],al
    c145:	00 00                	add    BYTE PTR [rax],al
    c147:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    c14a:	4f 54                	rex.WRXB push r12
    c14c:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    c150:	50                   	push   rax
    c151:	3a 20                	cmp    ah,BYTE PTR [rax]
    c153:	52                   	push   rdx
    c154:	45 50                	rex.RB push r8
    c156:	4c 59                	rex.WR pop rcx
    c158:	3a 20                	cmp    ah,BYTE PTR [rax]
    c15a:	25 73 20 69 73       	and    eax,0x73692073
    c15f:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    c162:	20 25 73 0a 00 55    	and    BYTE PTR [rip+0x55000a73],ah        # 5500cbdb <_end+0x54ed1bd3>
    c168:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c169:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c16d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c16e:	20 41 52             	and    BYTE PTR [rcx+0x52],al
    c171:	50                   	push   rax
    c172:	20 6f 70             	and    BYTE PTR [rdi+0x70],ch
    c175:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
    c178:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    c17b:	25 64 0a 00 1b       	and    eax,0x1b000a64
    c180:	5b                   	pop    rbx
    c181:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    c184:	4c                   	rex.WR
    c185:	4f                   	rex.WRXB
    c186:	4f 50                	rex.WRXB push r8
    c188:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de201 <_end+0x3e1a31f9>
    c18e:	20 25 73 00 20 52    	and    BYTE PTR [rip+0x52200073],ah        # 5220c207 <_end+0x520d11ff>
    c194:	45 50                	rex.RB push r8
    c196:	4c 59                	rex.WR pop rcx
    c198:	20 00                	and    BYTE PTR [rax],al
    c19a:	20 55 4e             	and    BYTE PTR [rbp+0x4e],dl
    c19d:	4b                   	rex.WXB
    c19e:	4e                   	rex.WRX
    c19f:	4f 57                	rex.WRXB push r15
    c1a1:	4e 20 4c 4f 4f       	rex.WRX and BYTE PTR [rdi+r9*2+0x4f],r9b
    c1a6:	50                   	push   rax
    c1a7:	20 46 55             	and    BYTE PTR [rsi+0x55],al
    c1aa:	4e                   	rex.WRX
    c1ab:	43 54                	rex.XB push r12
    c1ad:	49                   	rex.WB
    c1ae:	4f                   	rex.WRXB
    c1af:	4e 3a 25 64 20 0a 00 	rex.WRX cmp r12b,BYTE PTR [rip+0xa2064]        # ae21a <rules+0x9cf3a>
    c1b6:	00 00                	add    BYTE PTR [rax],al
    c1b8:	25 30 32 78 3a       	and    eax,0x3a783230
    c1bd:	25 30 32 78 3a       	and    eax,0x3a783230
    c1c2:	25 30 32 78 3a       	and    eax,0x3a783230
    c1c7:	25 30 32 78 3a       	and    eax,0x3a783230
    c1cc:	25 30 32 78 3a       	and    eax,0x3a783230
    c1d1:	25 30 32 78 00       	and    eax,0x783230
    c1d6:	25 64 2e 25 64       	and    eax,0x64252e64
    c1db:	2e 25 64 2e 25 64    	cs and eax,0x64252e64
    c1e1:	00 00                	add    BYTE PTR [rax],al
    c1e3:	00 00                	add    BYTE PTR [rax],al
    c1e5:	00 00                	add    BYTE PTR [rax],al
    c1e7:	00 25 30 32 78 25    	add    BYTE PTR [rip+0x25783230],ah        # 2578f41d <_end+0x25654415>
    c1ed:	30 32                	xor    BYTE PTR [rdx],dh
    c1ef:	78 3a                	js     c22b <_IO_stdin_used+0x22b>
    c1f1:	25 30 32 78 25       	and    eax,0x25783230
    c1f6:	30 32                	xor    BYTE PTR [rdx],dh
    c1f8:	78 3a                	js     c234 <_IO_stdin_used+0x234>
    c1fa:	25 30 32 78 25       	and    eax,0x25783230
    c1ff:	30 32                	xor    BYTE PTR [rdx],dh
    c201:	78 3a                	js     c23d <_IO_stdin_used+0x23d>
    c203:	25 30 32 78 25       	and    eax,0x25783230
    c208:	30 32                	xor    BYTE PTR [rdx],dh
    c20a:	78 3a                	js     c246 <_IO_stdin_used+0x246>
    c20c:	25 30 32 78 25       	and    eax,0x25783230
    c211:	30 32                	xor    BYTE PTR [rdx],dh
    c213:	78 3a                	js     c24f <_IO_stdin_used+0x24f>
    c215:	25 30 32 78 25       	and    eax,0x25783230
    c21a:	30 32                	xor    BYTE PTR [rdx],dh
    c21c:	78 3a                	js     c258 <_IO_stdin_used+0x258>
    c21e:	25 30 32 78 25       	and    eax,0x25783230
    c223:	30 32                	xor    BYTE PTR [rdx],dh
    c225:	78 3a                	js     c261 <_IO_stdin_used+0x261>
    c227:	25 30 32 78 25       	and    eax,0x25783230
    c22c:	30 32                	xor    BYTE PTR [rdx],dh
    c22e:	78 00                	js     c230 <_IO_stdin_used+0x230>
    c230:	25 64 2d 25 30       	and    eax,0x30252d64
    c235:	32 64 2d 25          	xor    ah,BYTE PTR [rbp+rbp*1+0x25]
    c239:	30 32                	xor    BYTE PTR [rdx],dh
    c23b:	64 20 25 30 32 64 3a 	and    BYTE PTR fs:[rip+0x3a643230],ah        # 3a64f472 <_end+0x3a51446a>
    c242:	25 30 32 64 3a       	and    eax,0x3a643230
    c247:	25 30 32 64 00       	and    eax,0x643230
    c24c:	25 73 3a 20 25       	and    eax,0x25203a73
    c251:	73 0a                	jae    c25d <_IO_stdin_used+0x25d>
    c253:	00 00                	add    BYTE PTR [rax],al
    c255:	00 00                	add    BYTE PTR [rax],al
    c257:	00 25 73 20 46 6f    	add    BYTE PTR [rip+0x6f462073],ah        # 6f46e2d0 <_end+0x6f3332c8>
    c25d:	75 6e                	jne    c2cd <_IO_stdin_used+0x2cd>
    c25f:	64 20 62 6c          	and    BYTE PTR fs:[rdx+0x6c],ah
    c263:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c264:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    c267:	64 20 69 70          	and    BYTE PTR fs:[rcx+0x70],ch
    c26b:	76 34                	jbe    c2a1 <_IO_stdin_used+0x2a1>
    c26d:	20 61 64             	and    BYTE PTR [rcx+0x64],ah
    c270:	64 72 65             	fs jb  c2d8 <_IO_stdin_used+0x2d8>
    c273:	73 73                	jae    c2e8 <_IO_stdin_used+0x2e8>
    c275:	28 64 65 73          	sub    BYTE PTR [rbp+riz*2+0x73],ah
    c279:	74 29                	je     c2a4 <_IO_stdin_used+0x2a4>
    c27b:	3a 20                	cmp    ah,BYTE PTR [rax]
    c27d:	25 73 0a 00 00       	and    eax,0xa73
    c282:	00 00                	add    BYTE PTR [rax],al
    c284:	00 00                	add    BYTE PTR [rax],al
    c286:	00 00                	add    BYTE PTR [rax],al
    c288:	25 73 20 46 6f       	and    eax,0x6f462073
    c28d:	75 6e                	jne    c2fd <_IO_stdin_used+0x2fd>
    c28f:	64 20 62 6c          	and    BYTE PTR fs:[rdx+0x6c],ah
    c293:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c294:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    c297:	64 20 69 70          	and    BYTE PTR fs:[rcx+0x70],ch
    c29b:	76 34                	jbe    c2d1 <_IO_stdin_used+0x2d1>
    c29d:	20 61 64             	and    BYTE PTR [rcx+0x64],ah
    c2a0:	64 72 65             	fs jb  c308 <_IO_stdin_used+0x308>
    c2a3:	73 73                	jae    c318 <_IO_stdin_used+0x318>
    c2a5:	28 73 72             	sub    BYTE PTR [rbx+0x72],dh
    c2a8:	63 29                	movsxd ebp,DWORD PTR [rcx]
    c2aa:	3a 20                	cmp    ah,BYTE PTR [rax]
    c2ac:	25 73 0a 00 1b       	and    eax,0x1b000a73
    c2b1:	5b                   	pop    rbx
    c2b2:	34 6d                	xor    al,0x6d
    c2b4:	00 25 73 46 72 61    	add    BYTE PTR [rip+0x61724673],ah        # 6173092d <_end+0x615f5925>
    c2ba:	67 6d                	ins    DWORD PTR es:[edi],dx
    c2bc:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c2be:	74 65                	je     c325 <_IO_stdin_used+0x325>
    c2c0:	64 20 00             	and    BYTE PTR fs:[rax],al
    c2c3:	1b 5b 30             	sbb    ebx,DWORD PTR [rbx+0x30]
    c2c6:	6d                   	ins    DWORD PTR es:[rdi],dx
    c2c7:	00 25 73 00 20 25    	add    BYTE PTR [rip+0x25200073],ah        # 2520c340 <_end+0x250d1338>
    c2cd:	73 20                	jae    c2ef <_IO_stdin_used+0x2ef>
    c2cf:	2d 3e 20 25 73       	sub    eax,0x7325203e
    c2d4:	25 73 0a 00 49       	and    eax,0x49000a73
    c2d9:	50                   	push   rax
    c2da:	76 34                	jbe    c310 <_IO_stdin_used+0x310>
    c2dc:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de355 <_end+0x3e1a334d>
    c2e2:	20 25 73 20 50 72    	and    BYTE PTR [rip+0x72502073],ah        # 7250e35b <_end+0x723d3353>
    c2e8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c2e9:	74 6f                	je     c35a <_IO_stdin_used+0x35a>
    c2eb:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    c2ee:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    c2f1:	6d                   	ins    DWORD PTR es:[rdi],dx
    c2f2:	62                   	(bad)  
    c2f3:	65 72 20             	gs jb  c316 <_IO_stdin_used+0x316>
    c2f6:	3d 20 25 64 0a       	cmp    eax,0xa642520
    c2fb:	00 00                	add    BYTE PTR [rax],al
    c2fd:	00 00                	add    BYTE PTR [rax],al
    c2ff:	00 1b                	add    BYTE PTR [rbx],bl
    c301:	5b                   	pop    rbx
    c302:	33 35 6d 00 25 73    	xor    esi,DWORD PTR [rip+0x7325006d]        # 7325c375 <_end+0x7312136d>
    c308:	00 49 50             	add    BYTE PTR [rcx+0x50],cl
    c30b:	76 36                	jbe    c343 <_IO_stdin_used+0x343>
    c30d:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de386 <_end+0x3e1a337e>
    c313:	20 25 73 0a 00 09    	and    BYTE PTR [rip+0x9000a73],ah        # 900cd8c <_end+0x8ed1d84>
    c319:	49                   	rex.WB
    c31a:	43                   	rex.XB
    c31b:	4d 50                	rex.WRB push r8
    c31d:	76 36                	jbe    c355 <_IO_stdin_used+0x355>
    c31f:	20 00                	and    BYTE PTR [rax],al
    c321:	20 52 6f             	and    BYTE PTR [rdx+0x6f],dl
    c324:	75 74                	jne    c39a <_IO_stdin_used+0x39a>
    c326:	65 72 20             	gs jb  c349 <_IO_stdin_used+0x349>
    c329:	53                   	push   rbx
    c32a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c32b:	6c                   	ins    BYTE PTR es:[rdi],dx
    c32c:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    c333:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c334:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c335:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    c338:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c339:	6d                   	ins    DWORD PTR es:[rdi],dx
    c33a:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # cdb3 <_IO_stdin_used+0xdb3>
    c340:	4d 75 6c             	rex.WRB jne c3af <_IO_stdin_used+0x3af>
    c343:	74 69                	je     c3ae <_IO_stdin_used+0x3ae>
    c345:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    c348:	74 20                	je     c36a <_IO_stdin_used+0x36a>
    c34a:	4c 69 73 74 65 6e 65 	imul   r14,QWORD PTR [rbx+0x74],0x72656e65
    c351:	72 
    c352:	20 52 65             	and    BYTE PTR [rdx+0x65],dl
    c355:	70 6f                	jo     c3c6 <_IO_stdin_used+0x3c6>
    c357:	72 74                	jb     c3cd <_IO_stdin_used+0x3cd>
    c359:	20 4d 65             	and    BYTE PTR [rbp+0x65],cl
    c35c:	73 73                	jae    c3d1 <_IO_stdin_used+0x3d1>
    c35e:	61                   	(bad)  
    c35f:	67 65 20 76 32       	and    BYTE PTR gs:[esi+0x32],dh
    c364:	00 4d 75             	add    BYTE PTR [rbp+0x75],cl
    c367:	6c                   	ins    BYTE PTR es:[rdi],dx
    c368:	74 69                	je     c3d3 <_IO_stdin_used+0x3d3>
    c36a:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    c36d:	74 20                	je     c38f <_IO_stdin_used+0x38f>
    c36f:	20 4c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],cl
    c373:	74 65                	je     c3da <_IO_stdin_used+0x3da>
    c375:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c376:	65 72 20             	gs jb  c399 <_IO_stdin_used+0x399>
    c379:	51                   	push   rcx
    c37a:	75 65                	jne    c3e1 <_IO_stdin_used+0x3e1>
    c37c:	72 79                	jb     c3f7 <_IO_stdin_used+0x3f7>
    c37e:	00 4e 65             	add    BYTE PTR [rsi+0x65],cl
    c381:	69 67 68 62 6f 72 20 	imul   esp,DWORD PTR [rdi+0x68],0x20726f62
    c388:	53                   	push   rbx
    c389:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c38a:	6c                   	ins    BYTE PTR es:[rdi],dx
    c38b:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    c392:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c393:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c394:	00 1b                	add    BYTE PTR [rbx],bl
    c396:	5b                   	pop    rbx
    c397:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    c39a:	00 00                	add    BYTE PTR [rax],al
    c39c:	00 00                	add    BYTE PTR [rax],al
    c39e:	00 00                	add    BYTE PTR [rax],al
    c3a0:	54                   	push   rsp
    c3a1:	69 6d 65 20 73 74 61 	imul   ebp,DWORD PTR [rbp+0x65],0x61747320
    c3a8:	6d                   	ins    DWORD PTR es:[rdi],dx
    c3a9:	70 20                	jo     c3cb <_IO_stdin_used+0x3cb>
    c3ab:	72 65                	jb     c412 <_IO_stdin_used+0x412>
    c3ad:	71 75                	jno    c424 <_IO_stdin_used+0x424>
    c3af:	65 73 74             	gs jae c426 <_IO_stdin_used+0x426>
    c3b2:	3a 20                	cmp    ah,BYTE PTR [rax]
    c3b4:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    c3b9:	20 25 73 28 63 6f    	and    BYTE PTR [rip+0x6f632873],ah        # 6f63ec32 <_end+0x6f503c2a>
    c3bf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c3c0:	66 69 67 20 73 70    	imul   sp,WORD PTR [rdi+0x20],0x7073
    c3c6:	65 63 69 66          	movsxd ebp,DWORD PTR gs:[rcx+0x66]
    c3ca:	69 65 73 20 73 74 72 	imul   esp,DWORD PTR [rbp+0x73],0x72747320
    c3d1:	69 63 74 20 74 69 6d 	imul   esp,DWORD PTR [rbx+0x74],0x6d697420
    c3d8:	65 73 74             	gs jae c44f <_IO_stdin_used+0x44f>
    c3db:	61                   	(bad)  
    c3dc:	6d                   	ins    DWORD PTR es:[rdi],dx
    c3dd:	70 20                	jo     c3ff <_IO_stdin_used+0x3ff>
    c3df:	61                   	(bad)  
    c3e0:	6c                   	ins    BYTE PTR es:[rdi],dx
    c3e1:	65 72 74             	gs jb  c458 <_IO_stdin_used+0x458>
    c3e4:	73 29                	jae    c40f <_IO_stdin_used+0x40f>
    c3e6:	0a 00                	or     al,BYTE PTR [rax]
    c3e8:	50                   	push   rax
    c3e9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c3ea:	73 73                	jae    c45f <_IO_stdin_used+0x45f>
    c3ec:	69 62 6c 65 20 6e 6d 	imul   esp,DWORD PTR [rdx+0x6c],0x6d6e2065
    c3f3:	61                   	(bad)  
    c3f4:	70 20                	jo     c416 <_IO_stdin_used+0x416>
    c3f6:	68 6f 73 74 20       	push   0x2074736f
    c3fb:	61                   	(bad)  
    c3fc:	6c                   	ins    BYTE PTR es:[rdi],dx
    c3fd:	69 76 65 20 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x65686320
    c404:	63 6b 20             	movsxd ebp,DWORD PTR [rbx+0x20]
    c407:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    c40c:	20 25 73 3b 20 6d    	and    BYTE PTR [rip+0x6d203b73],ah        # 6d20ff85 <_end+0x6d0d4f7d>
    c412:	61                   	(bad)  
    c413:	74 63                	je     c478 <_IO_stdin_used+0x478>
    c415:	68 65 64 20 49       	push   0x49206465
    c41a:	43                   	rex.XB
    c41b:	4d 50                	rex.WRB push r8
    c41d:	20 45 63             	and    BYTE PTR [rbp+0x63],al
    c420:	68 6f 2c 20 54       	push   0x54202c6f
    c425:	43 50                	rex.XB push r8
    c427:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    c42a:	4e 2c 20             	rex.WRX sub al,0x20
    c42d:	54                   	push   rsp
    c42e:	43 50                	rex.XB push r8
    c430:	20 41 43             	and    BYTE PTR [rcx+0x43],al
    c433:	4b 2c 20             	rex.WXB sub al,0x20
    c436:	61                   	(bad)  
    c437:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c438:	64 20 49 43          	and    BYTE PTR fs:[rcx+0x43],cl
    c43c:	4d 50                	rex.WRB push r8
    c43e:	20 54 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dl
    c442:	65 73 74             	gs jae c4b9 <_IO_stdin_used+0x4b9>
    c445:	61                   	(bad)  
    c446:	6d                   	ins    DWORD PTR es:[rdi],dx
    c447:	70 20                	jo     c469 <_IO_stdin_used+0x469>
    c449:	72 65                	jb     c4b0 <_IO_stdin_used+0x4b0>
    c44b:	71 75                	jno    c4c2 <_IO_stdin_used+0x4c2>
    c44d:	65 73 74             	gs jae c4c4 <_IO_stdin_used+0x4c4>
    c450:	0a 00                	or     al,BYTE PTR [rax]
    c452:	61                   	(bad)  
    c453:	00 00                	add    BYTE PTR [rax],al
    c455:	00 00                	add    BYTE PTR [rax],al
    c457:	00 50 6f             	add    BYTE PTR [rax+0x6f],dl
    c45a:	73 73                	jae    c4cf <_IO_stdin_used+0x4cf>
    c45c:	69 62 6c 65 20 6e 6d 	imul   esp,DWORD PTR [rdx+0x6c],0x6d6e2065
    c463:	61                   	(bad)  
    c464:	70 20                	jo     c486 <_IO_stdin_used+0x486>
    c466:	68 6f 73 74 20       	push   0x2074736f
    c46b:	61                   	(bad)  
    c46c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c46d:	69 76 65 20 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x65686320
    c474:	63 6b 20             	movsxd ebp,DWORD PTR [rbx+0x20]
    c477:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    c47c:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461e4f5 <_end+0x744e34ed>
    c482:	20 25 73 3b 20 6d    	and    BYTE PTR [rip+0x6d203b73],ah        # 6d20fffb <_end+0x6d0d4ff3>
    c488:	61                   	(bad)  
    c489:	74 63                	je     c4ee <_IO_stdin_used+0x4ee>
    c48b:	68 65 64 20 49       	push   0x49206465
    c490:	43                   	rex.XB
    c491:	4d 50                	rex.WRB push r8
    c493:	20 45 63             	and    BYTE PTR [rbp+0x63],al
    c496:	68 6f 2c 20 54       	push   0x54202c6f
    c49b:	43 50                	rex.XB push r8
    c49d:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    c4a0:	4e 2c 20             	rex.WRX sub al,0x20
    c4a3:	54                   	push   rsp
    c4a4:	43 50                	rex.XB push r8
    c4a6:	20 41 43             	and    BYTE PTR [rcx+0x43],al
    c4a9:	4b 2c 20             	rex.WXB sub al,0x20
    c4ac:	61                   	(bad)  
    c4ad:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c4ae:	64 20 49 43          	and    BYTE PTR fs:[rcx+0x43],cl
    c4b2:	4d 50                	rex.WRB push r8
    c4b4:	20 54 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dl
    c4b8:	65 73 74             	gs jae c52f <_IO_stdin_used+0x52f>
    c4bb:	61                   	(bad)  
    c4bc:	6d                   	ins    DWORD PTR es:[rdi],dx
    c4bd:	70 20                	jo     c4df <_IO_stdin_used+0x4df>
    c4bf:	72 65                	jb     c526 <_IO_stdin_used+0x526>
    c4c1:	71 75                	jno    c538 <_IO_stdin_used+0x538>
    c4c3:	65 73 74             	gs jae c53a <_IO_stdin_used+0x53a>
    c4c6:	0a 00                	or     al,BYTE PTR [rax]
    c4c8:	49 50                	rex.WB push r8
    c4ca:	76 34                	jbe    c500 <_IO_stdin_used+0x500>
    c4cc:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de545 <_end+0x3e1a353d>
    c4d2:	20 25 73 0a 00 09    	and    BYTE PTR [rip+0x9000a73],ah        # 900cf4b <_end+0x8ed1f43>
    c4d8:	49                   	rex.WB
    c4d9:	43                   	rex.XB
    c4da:	4d 50                	rex.WRB push r8
    c4dc:	20 00                	and    BYTE PTR [rax],al
    c4de:	20 65 63             	and    BYTE PTR [rbp+0x63],ah
    c4e1:	68 6f 20 72 65       	push   0x6572206f
    c4e6:	70 6c                	jo     c554 <_IO_stdin_used+0x554>
    c4e8:	79 00                	jns    c4ea <_IO_stdin_used+0x4ea>
    c4ea:	20 64 65 73          	and    BYTE PTR [rbp+riz*2+0x73],ah
    c4ee:	74 69                	je     c559 <_IO_stdin_used+0x559>
    c4f0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c4f1:	61                   	(bad)  
    c4f2:	74 69                	je     c55d <_IO_stdin_used+0x55d>
    c4f4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c4f5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c4f6:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    c4f9:	72 65                	jb     c560 <_IO_stdin_used+0x560>
    c4fb:	61                   	(bad)  
    c4fc:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c4ff:	62                   	(bad)  
    c500:	6c                   	ins    BYTE PTR es:[rdi],dx
    c501:	65 28 00             	sub    BYTE PTR gs:[rax],al
    c504:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    c507:	74 77                	je     c580 <_IO_stdin_used+0x580>
    c509:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c50a:	72 6b                	jb     c577 <_IO_stdin_used+0x577>
    c50c:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c50f:	72 65                	jb     c576 <_IO_stdin_used+0x576>
    c511:	61                   	(bad)  
    c512:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c515:	62                   	(bad)  
    c516:	6c                   	ins    BYTE PTR es:[rdi],dx
    c517:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c51a:	00 20                	add    BYTE PTR [rax],ah
    c51c:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c51e:	73 74                	jae    c594 <_IO_stdin_used+0x594>
    c520:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c523:	72 65                	jb     c58a <_IO_stdin_used+0x58a>
    c525:	61                   	(bad)  
    c526:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c529:	62                   	(bad)  
    c52a:	6c                   	ins    BYTE PTR es:[rdi],dx
    c52b:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c52e:	00 20                	add    BYTE PTR [rax],ah
    c530:	50                   	push   rax
    c531:	72 6f                	jb     c5a2 <_IO_stdin_used+0x5a2>
    c533:	74 6f                	je     c5a4 <_IO_stdin_used+0x5a4>
    c535:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    c538:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c53b:	72 65                	jb     c5a2 <_IO_stdin_used+0x5a2>
    c53d:	61                   	(bad)  
    c53e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c541:	62                   	(bad)  
    c542:	6c                   	ins    BYTE PTR es:[rdi],dx
    c543:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c546:	00 20                	add    BYTE PTR [rax],ah
    c548:	50                   	push   rax
    c549:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c54a:	72 74                	jb     c5c0 <_IO_stdin_used+0x5c0>
    c54c:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c54f:	72 65                	jb     c5b6 <_IO_stdin_used+0x5b6>
    c551:	61                   	(bad)  
    c552:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c555:	62                   	(bad)  
    c556:	6c                   	ins    BYTE PTR es:[rdi],dx
    c557:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c55a:	00 20                	add    BYTE PTR [rax],ah
    c55c:	46 72 61             	rex.RX jb c5c0 <_IO_stdin_used+0x5c0>
    c55f:	67 6d                	ins    DWORD PTR es:[edi],dx
    c561:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c563:	74 61                	je     c5c6 <_IO_stdin_used+0x5c6>
    c565:	74 69                	je     c5d0 <_IO_stdin_used+0x5d0>
    c567:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c568:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c569:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    c56c:	65 64 65 64 20 29    	gs fs gs and BYTE PTR fs:[rcx],ch
    c572:	00 20                	add    BYTE PTR [rax],ah
    c574:	53                   	push   rbx
    c575:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c576:	75 72                	jne    c5ea <_IO_stdin_used+0x5ea>
    c578:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c57b:	52                   	push   rdx
    c57c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c57d:	75 74                	jne    c5f3 <_IO_stdin_used+0x5f3>
    c57f:	65 20 46 61          	and    BYTE PTR gs:[rsi+0x61],al
    c583:	69 6c 65 64 20 29 00 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x2920
    c58a:	00 
    c58b:	00 00                	add    BYTE PTR [rax],al
    c58d:	00 00                	add    BYTE PTR [rax],al
    c58f:	00 20                	add    BYTE PTR [rax],ah
    c591:	44                   	rex.R
    c592:	65 73 74             	gs jae c609 <_IO_stdin_used+0x609>
    c595:	69 6e 61 74 69 6f 6e 	imul   ebp,DWORD PTR [rsi+0x61],0x6e6f6974
    c59c:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    c59f:	74 77                	je     c618 <_IO_stdin_used+0x618>
    c5a1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5a2:	72 6b                	jb     c60f <_IO_stdin_used+0x60f>
    c5a4:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c5a7:	72 65                	jb     c60e <_IO_stdin_used+0x60e>
    c5a9:	61                   	(bad)  
    c5aa:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c5ad:	62                   	(bad)  
    c5ae:	6c                   	ins    BYTE PTR es:[rdi],dx
    c5af:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c5b2:	00 00                	add    BYTE PTR [rax],al
    c5b4:	00 00                	add    BYTE PTR [rax],al
    c5b6:	00 00                	add    BYTE PTR [rax],al
    c5b8:	20 44 65 73          	and    BYTE PTR [rbp+riz*2+0x73],al
    c5bc:	74 69                	je     c627 <_IO_stdin_used+0x627>
    c5be:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c5bf:	61                   	(bad)  
    c5c0:	74 69                	je     c62b <_IO_stdin_used+0x62b>
    c5c2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5c3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c5c4:	20 48 6f             	and    BYTE PTR [rax+0x6f],cl
    c5c7:	73 74                	jae    c63d <_IO_stdin_used+0x63d>
    c5c9:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c5cc:	72 65                	jb     c633 <_IO_stdin_used+0x633>
    c5ce:	61                   	(bad)  
    c5cf:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c5d2:	62                   	(bad)  
    c5d3:	6c                   	ins    BYTE PTR es:[rdi],dx
    c5d4:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c5d7:	00 20                	add    BYTE PTR [rax],ah
    c5d9:	53                   	push   rbx
    c5da:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5db:	75 72                	jne    c64f <_IO_stdin_used+0x64f>
    c5dd:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c5e0:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c5e2:	73 74                	jae    c658 <_IO_stdin_used+0x658>
    c5e4:	20 49 73             	and    BYTE PTR [rcx+0x73],cl
    c5e7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5e8:	6c                   	ins    BYTE PTR es:[rdi],dx
    c5e9:	61                   	(bad)  
    c5ea:	74 65                	je     c651 <_IO_stdin_used+0x651>
    c5ec:	64 20 29             	and    BYTE PTR fs:[rcx],ch
    c5ef:	00 20                	add    BYTE PTR [rax],ah
    c5f1:	4e                   	rex.WRX
    c5f2:	65 74 77             	gs je  c66c <_IO_stdin_used+0x66c>
    c5f5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5f6:	72 6b                	jb     c663 <_IO_stdin_used+0x663>
    c5f8:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    c5fb:	6d                   	ins    DWORD PTR es:[rdi],dx
    c5fc:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    c603:	74 69                	je     c66e <_IO_stdin_used+0x66e>
    c605:	76 65                	jbe    c66c <_IO_stdin_used+0x66c>
    c607:	6c                   	ins    BYTE PTR es:[rdi],dx
    c608:	79 20                	jns    c62a <_IO_stdin_used+0x62a>
    c60a:	50                   	push   rax
    c60b:	72 6f                	jb     c67c <_IO_stdin_used+0x67c>
    c60d:	68 69 62 69 74       	push   0x74696269
    c612:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    c616:	00 00                	add    BYTE PTR [rax],al
    c618:	20 48 6f             	and    BYTE PTR [rax+0x6f],cl
    c61b:	73 74                	jae    c691 <_IO_stdin_used+0x691>
    c61d:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    c620:	6d                   	ins    DWORD PTR es:[rdi],dx
    c621:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    c628:	74 69                	je     c693 <_IO_stdin_used+0x693>
    c62a:	76 65                	jbe    c691 <_IO_stdin_used+0x691>
    c62c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c62d:	79 20                	jns    c64f <_IO_stdin_used+0x64f>
    c62f:	50                   	push   rax
    c630:	72 6f                	jb     c6a1 <_IO_stdin_used+0x6a1>
    c632:	68 69 62 69 74       	push   0x74696269
    c637:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    c63b:	00 00                	add    BYTE PTR [rax],al
    c63d:	00 00                	add    BYTE PTR [rax],al
    c63f:	00 20                	add    BYTE PTR [rax],ah
    c641:	4e                   	rex.WRX
    c642:	65 74 77             	gs je  c6bc <_IO_stdin_used+0x6bc>
    c645:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c646:	72 6b                	jb     c6b3 <_IO_stdin_used+0x6b3>
    c648:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c64b:	72 65                	jb     c6b2 <_IO_stdin_used+0x6b2>
    c64d:	61                   	(bad)  
    c64e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c651:	62                   	(bad)  
    c652:	6c                   	ins    BYTE PTR es:[rdi],dx
    c653:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    c657:	72 20                	jb     c679 <_IO_stdin_used+0x679>
    c659:	54                   	push   rsp
    c65a:	4f 53                	rex.WRXB push r11
    c65c:	20 29                	and    BYTE PTR [rcx],ch
    c65e:	00 20                	add    BYTE PTR [rax],ah
    c660:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c662:	73 74                	jae    c6d8 <_IO_stdin_used+0x6d8>
    c664:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c667:	72 65                	jb     c6ce <_IO_stdin_used+0x6ce>
    c669:	61                   	(bad)  
    c66a:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c66d:	62                   	(bad)  
    c66e:	6c                   	ins    BYTE PTR es:[rdi],dx
    c66f:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    c673:	72 20                	jb     c695 <_IO_stdin_used+0x695>
    c675:	54                   	push   rsp
    c676:	4f 53                	rex.WRXB push r11
    c678:	20 29                	and    BYTE PTR [rcx],ch
    c67a:	00 00                	add    BYTE PTR [rax],al
    c67c:	00 00                	add    BYTE PTR [rax],al
    c67e:	00 00                	add    BYTE PTR [rax],al
    c680:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c683:	6d                   	ins    DWORD PTR es:[rdi],dx
    c684:	6d                   	ins    DWORD PTR es:[rdi],dx
    c685:	75 6e                	jne    c6f5 <_IO_stdin_used+0x6f5>
    c687:	69 63 61 74 69 6f 6e 	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
    c68e:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    c691:	6d                   	ins    DWORD PTR es:[rdi],dx
    c692:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    c699:	74 69                	je     c704 <_IO_stdin_used+0x704>
    c69b:	76 65                	jbe    c702 <_IO_stdin_used+0x702>
    c69d:	6c                   	ins    BYTE PTR es:[rdi],dx
    c69e:	79 20                	jns    c6c0 <_IO_stdin_used+0x6c0>
    c6a0:	50                   	push   rax
    c6a1:	72 6f                	jb     c712 <_IO_stdin_used+0x712>
    c6a3:	68 69 62 69 74       	push   0x74696269
    c6a8:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    c6ac:	00 20                	add    BYTE PTR [rax],ah
    c6ae:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c6b0:	73 74                	jae    c726 <_IO_stdin_used+0x726>
    c6b2:	20 50 72             	and    BYTE PTR [rax+0x72],dl
    c6b5:	65 63 65 64          	movsxd esp,DWORD PTR gs:[rbp+0x64]
    c6b9:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c6bb:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c6be:	56                   	push   rsi
    c6bf:	69 6f 6c 61 74 69 6f 	imul   ebp,DWORD PTR [rdi+0x6c],0x6f697461
    c6c6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c6c7:	20 29                	and    BYTE PTR [rcx],ch
    c6c9:	00 00                	add    BYTE PTR [rax],al
    c6cb:	00 00                	add    BYTE PTR [rax],al
    c6cd:	00 00                	add    BYTE PTR [rax],al
    c6cf:	00 20                	add    BYTE PTR [rax],ah
    c6d1:	50                   	push   rax
    c6d2:	72 65                	jb     c739 <_IO_stdin_used+0x739>
    c6d4:	63 65 64             	movsxd esp,DWORD PTR [rbp+0x64]
    c6d7:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c6d9:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c6dc:	43 75 74             	rex.XB jne c753 <_IO_stdin_used+0x753>
    c6df:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c6e0:	66 66 20 69 6e       	data16 data16 and BYTE PTR [rcx+0x6e],ch
    c6e5:	20 45 66             	and    BYTE PTR [rbp+0x66],al
    c6e8:	66 65 63 74 20 29    	movsxd si,DWORD PTR gs:[rax+riz*1+0x29]
    c6ee:	00 20                	add    BYTE PTR [rax],ah
    c6f0:	55                   	push   rbp
    c6f1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c6f2:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c6f6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c6f7:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c6fa:	64 65 3d 25 64 20 29 	fs gs cmp eax,0x29206425
    c701:	0a 00                	or     al,BYTE PTR [rax]
    c703:	00 00                	add    BYTE PTR [rax],al
    c705:	00 00                	add    BYTE PTR [rax],al
    c707:	00 20                	add    BYTE PTR [rax],ah
    c709:	53                   	push   rbx
    c70a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c70b:	75 72                	jne    c77f <_IO_stdin_used+0x77f>
    c70d:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c710:	51                   	push   rcx
    c711:	75 65                	jne    c778 <_IO_stdin_used+0x778>
    c713:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c714:	63 68 28             	movsxd ebp,DWORD PTR [rax+0x28]
    c717:	20 66 6c             	and    BYTE PTR [rsi+0x6c],ah
    c71a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c71b:	77 20                	ja     c73d <_IO_stdin_used+0x73d>
    c71d:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    c720:	74 72                	je     c794 <_IO_stdin_used+0x794>
    c722:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c723:	6c                   	ins    BYTE PTR es:[rdi],dx
    c724:	20 29                	and    BYTE PTR [rcx],ch
    c726:	00 20                	add    BYTE PTR [rax],ah
    c728:	52                   	push   rdx
    c729:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x28207463
    c730:	20 28 
    c732:	00 20                	add    BYTE PTR [rax],ah
    c734:	52                   	push   rdx
    c735:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c73c:	20 66 
    c73e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c73f:	72 20                	jb     c761 <_IO_stdin_used+0x761>
    c741:	4e                   	rex.WRX
    c742:	65 74 77             	gs je  c7bc <_IO_stdin_used+0x7bc>
    c745:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c746:	72 6b                	jb     c7b3 <_IO_stdin_used+0x7b3>
    c748:	20 29                	and    BYTE PTR [rcx],ch
    c74a:	00 20                	add    BYTE PTR [rax],ah
    c74c:	52                   	push   rdx
    c74d:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c754:	20 66 
    c756:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c757:	72 20                	jb     c779 <_IO_stdin_used+0x779>
    c759:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c75b:	73 74                	jae    c7d1 <_IO_stdin_used+0x7d1>
    c75d:	20 29                	and    BYTE PTR [rcx],ch
    c75f:	00 20                	add    BYTE PTR [rax],ah
    c761:	52                   	push   rdx
    c762:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c769:	20 66 
    c76b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c76c:	72 20                	jb     c78e <_IO_stdin_used+0x78e>
    c76e:	54                   	push   rsp
    c76f:	4f 53                	rex.WRXB push r11
    c771:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    c774:	64 20 4e 65          	and    BYTE PTR fs:[rsi+0x65],cl
    c778:	74 77                	je     c7f1 <_IO_stdin_used+0x7f1>
    c77a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c77b:	72 6b                	jb     c7e8 <_IO_stdin_used+0x7e8>
    c77d:	20 29                	and    BYTE PTR [rcx],ch
    c77f:	00 20                	add    BYTE PTR [rax],ah
    c781:	52                   	push   rdx
    c782:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c789:	20 66 
    c78b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c78c:	72 20                	jb     c7ae <_IO_stdin_used+0x7ae>
    c78e:	54                   	push   rsp
    c78f:	4f 53                	rex.WRXB push r11
    c791:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    c794:	64 20 48 6f          	and    BYTE PTR fs:[rax+0x6f],cl
    c798:	73 74                	jae    c80e <_IO_stdin_used+0x80e>
    c79a:	20 29                	and    BYTE PTR [rcx],ch
    c79c:	00 20                	add    BYTE PTR [rax],ah
    c79e:	65 63 68 6f          	movsxd ebp,DWORD PTR gs:[rax+0x6f]
    c7a2:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    c7a5:	71 75                	jno    c81c <_IO_stdin_used+0x81c>
    c7a7:	65 73 74             	gs jae c81e <_IO_stdin_used+0x81e>
    c7aa:	00 00                	add    BYTE PTR [rax],al
    c7ac:	00 00                	add    BYTE PTR [rax],al
    c7ae:	00 00                	add    BYTE PTR [rax],al
    c7b0:	20 4d 6f             	and    BYTE PTR [rbp+0x6f],cl
    c7b3:	62                   	(bad)  
    c7b4:	69 6c 65 20 49 50 20 	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x41205049
    c7bb:	41 
    c7bc:	64 76 65             	fs jbe c824 <_IO_stdin_used+0x824>
    c7bf:	72 74                	jb     c835 <_IO_stdin_used+0x835>
    c7c1:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    c7c8:	20 28                	and    BYTE PTR [rax],ch
    c7ca:	4e 6f                	rex.WRX outs dx,DWORD PTR ds:[rsi]
    c7cc:	72 6d                	jb     c83b <_IO_stdin_used+0x83b>
    c7ce:	61                   	(bad)  
    c7cf:	6c                   	ins    BYTE PTR es:[rdi],dx
    c7d0:	20 52 6f             	and    BYTE PTR [rdx+0x6f],dl
    c7d3:	75 74                	jne    c849 <_IO_stdin_used+0x849>
    c7d5:	65 72 20             	gs jb  c7f8 <_IO_stdin_used+0x7f8>
    c7d8:	41                   	rex.B
    c7d9:	64 76 65             	fs jbe c841 <_IO_stdin_used+0x841>
    c7dc:	72 74                	jb     c852 <_IO_stdin_used+0x852>
    c7de:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    c7e5:	20 29                	and    BYTE PTR [rcx],ch
    c7e7:	20 29                	and    BYTE PTR [rcx],ch
    c7e9:	0a 20                	or     ah,BYTE PTR [rax]
    c7eb:	00 00                	add    BYTE PTR [rax],al
    c7ed:	00 00                	add    BYTE PTR [rax],al
    c7ef:	00 20                	add    BYTE PTR [rax],ah
    c7f1:	52                   	push   rdx
    c7f2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c7f3:	75 74                	jne    c869 <_IO_stdin_used+0x869>
    c7f5:	65 72 20             	gs jb  c818 <_IO_stdin_used+0x818>
    c7f8:	41                   	rex.B
    c7f9:	64 76 65             	fs jbe c861 <_IO_stdin_used+0x861>
    c7fc:	72 74                	jb     c872 <_IO_stdin_used+0x872>
    c7fe:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    c805:	20 28                	and    BYTE PTR [rax],ch
    c807:	55                   	push   rbp
    c808:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c809:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c80d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c80e:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c811:	64 65 3a 20          	fs cmp ah,BYTE PTR gs:[rax]
    c815:	25 64 20 29 20       	and    eax,0x20292064
    c81a:	29 0a                	sub    DWORD PTR [rdx],ecx
    c81c:	00 20                	add    BYTE PTR [rax],ah
    c81e:	52                   	push   rdx
    c81f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c820:	75 74                	jne    c896 <_IO_stdin_used+0x896>
    c822:	65 72 20             	gs jb  c845 <_IO_stdin_used+0x845>
    c825:	53                   	push   rbx
    c826:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c827:	6c                   	ins    BYTE PTR es:[rdi],dx
    c828:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    c82f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c830:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c831:	20 29                	and    BYTE PTR [rcx],ch
    c833:	00 20                	add    BYTE PTR [rax],ah
    c835:	54                   	push   rsp
    c836:	69 6d 65 20 54 6f 20 	imul   ebp,DWORD PTR [rbp+0x65],0x206f5420
    c83d:	4c 69 76 65 20 65 78 	imul   r14,QWORD PTR [rsi+0x65],0x63786520
    c844:	63 
    c845:	65 65 64 65 64 00 20 	gs gs fs gs add BYTE PTR fs:[rax],ah
    c84c:	28 20                	sub    BYTE PTR [rax],ah
    c84e:	74 74                	je     c8c4 <_IO_stdin_used+0x8c4>
    c850:	6c                   	ins    BYTE PTR es:[rdi],dx
    c851:	20 65 78             	and    BYTE PTR [rbp+0x78],ah
    c854:	63 65 65             	movsxd esp,DWORD PTR [rbp+0x65]
    c857:	64 65 64 20 69 6e    	fs gs and BYTE PTR fs:[rcx+0x6e],ch
    c85d:	20 74 72 61          	and    BYTE PTR [rdx+rsi*2+0x61],dh
    c861:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c862:	73 69                	jae    c8cd <_IO_stdin_used+0x8cd>
    c864:	74 20                	je     c886 <_IO_stdin_used+0x886>
    c866:	29 00                	sub    DWORD PTR [rax],eax
    c868:	20 28                	and    BYTE PTR [rax],ch
    c86a:	20 46 72             	and    BYTE PTR [rsi+0x72],al
    c86d:	61                   	(bad)  
    c86e:	67 6d                	ins    DWORD PTR es:[edi],dx
    c870:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c872:	74 20                	je     c894 <_IO_stdin_used+0x894>
    c874:	52                   	push   rdx
    c875:	65 61                	gs (bad) 
    c877:	73 73                	jae    c8ec <_IO_stdin_used+0x8ec>
    c879:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    c87b:	62                   	(bad)  
    c87c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c87d:	79 20                	jns    c89f <_IO_stdin_used+0x89f>
    c87f:	74 69                	je     c8ea <_IO_stdin_used+0x8ea>
    c881:	6d                   	ins    DWORD PTR es:[rdi],dx
    c882:	65 20 65 78          	and    BYTE PTR gs:[rbp+0x78],ah
    c886:	63 65 65             	movsxd esp,DWORD PTR [rbp+0x65]
    c889:	64 65 64 20 29       	fs gs and BYTE PTR fs:[rcx],ch
    c88e:	00 20                	add    BYTE PTR [rax],ah
    c890:	28 20                	sub    BYTE PTR [rax],ah
    c892:	55                   	push   rbp
    c893:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c894:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c898:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c899:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c89c:	64 65 3a 20          	fs cmp ah,BYTE PTR gs:[rax]
    c8a0:	25 64 29 0a 00       	and    eax,0xa2964
    c8a5:	20 74 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dh
    c8a9:	65 73 74             	gs jae c920 <_IO_stdin_used+0x920>
    c8ac:	61                   	(bad)  
    c8ad:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8ae:	70 20                	jo     c8d0 <_IO_stdin_used+0x8d0>
    c8b0:	72 65                	jb     c917 <_IO_stdin_used+0x917>
    c8b2:	71 75                	jno    c929 <_IO_stdin_used+0x929>
    c8b4:	65 73 74             	gs jae c92b <_IO_stdin_used+0x92b>
    c8b7:	00 20                	add    BYTE PTR [rax],ah
    c8b9:	74 69                	je     c924 <_IO_stdin_used+0x924>
    c8bb:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8bc:	65 73 74             	gs jae c933 <_IO_stdin_used+0x933>
    c8bf:	61                   	(bad)  
    c8c0:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8c1:	70 20                	jo     c8e3 <_IO_stdin_used+0x8e3>
    c8c3:	72 65                	jb     c92a <_IO_stdin_used+0x92a>
    c8c5:	70 6c                	jo     c933 <_IO_stdin_used+0x933>
    c8c7:	79 00                	jns    c8c9 <_IO_stdin_used+0x8c9>
    c8c9:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    c8cc:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c8d0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c8d1:	20 69 63             	and    BYTE PTR [rcx+0x63],ch
    c8d4:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8d5:	70 20                	jo     c8f7 <_IO_stdin_used+0x8f7>
    c8d7:	74 79                	je     c952 <_IO_stdin_used+0x952>
    c8d9:	70 65                	jo     c940 <_IO_stdin_used+0x940>
    c8db:	3d 25 64 00 00       	cmp    eax,0x6425
    c8e0:	5c                   	pop    rsp
    c8e1:	77 ff                	ja     c8e2 <_IO_stdin_used+0x8e2>
    c8e3:	ff                   	(bad)  
    c8e4:	7f 7a                	jg     c960 <_IO_stdin_used+0x960>
    c8e6:	ff                   	(bad)  
    c8e7:	ff                   	(bad)  
    c8e8:	7f 7a                	jg     c964 <_IO_stdin_used+0x964>
    c8ea:	ff                   	(bad)  
    c8eb:	ff 6d 77             	jmp    FWORD PTR [rbp+0x77]
    c8ee:	ff                   	(bad)  
    c8ef:	ff                   	(bad)  
    c8f0:	da 78 ff             	fidivr DWORD PTR [rax-0x1]
    c8f3:	ff                   	(bad)  
    c8f4:	eb 78                	jmp    c96e <_IO_stdin_used+0x96e>
    c8f6:	ff                   	(bad)  
    c8f7:	ff                   	(bad)  
    c8f8:	7f 7a                	jg     c974 <_IO_stdin_used+0x974>
    c8fa:	ff                   	(bad)  
    c8fb:	ff                   	(bad)  
    c8fc:	7f 7a                	jg     c978 <_IO_stdin_used+0x978>
    c8fe:	ff                   	(bad)  
    c8ff:	ff 88 79 ff ff 99    	dec    DWORD PTR [rax-0x66000087]
    c905:	79 ff                	jns    c906 <_IO_stdin_used+0x906>
    c907:	ff e4                	jmp    rsp
    c909:	79 ff                	jns    c90a <_IO_stdin_used+0x90a>
    c90b:	ff f5                	push   rbp
    c90d:	79 ff                	jns    c90e <_IO_stdin_used+0x90e>
    c90f:	ff                   	(bad)  
    c910:	7f 7a                	jg     c98c <_IO_stdin_used+0x98c>
    c912:	ff                   	(bad)  
    c913:	ff 63 7a             	jmp    QWORD PTR [rbx+0x7a]
    c916:	ff                   	(bad)  
    c917:	ff 71 7a             	push   QWORD PTR [rcx+0x7a]
    c91a:	ff                   	(bad)  
    c91b:	ff                   	(bad)  
    c91c:	7c 77                	jl     c995 <_IO_stdin_used+0x995>
    c91e:	ff                   	(bad)  
    c91f:	ff 8d 77 ff ff 9e    	dec    DWORD PTR [rbp-0x61000089]
    c925:	77 ff                	ja     c926 <_IO_stdin_used+0x926>
    c927:	ff af 77 ff ff c0    	jmp    FWORD PTR [rdi-0x3f000089]
    c92d:	77 ff                	ja     c92e <_IO_stdin_used+0x92e>
    c92f:	ff d1                	call   rcx
    c931:	77 ff                	ja     c932 <_IO_stdin_used+0x932>
    c933:	ff e2                	jmp    rdx
    c935:	77 ff                	ja     c936 <_IO_stdin_used+0x936>
    c937:	ff f3                	push   rbx
    c939:	77 ff                	ja     c93a <_IO_stdin_used+0x93a>
    c93b:	ff 04 78             	inc    DWORD PTR [rax+rdi*2]
    c93e:	ff                   	(bad)  
    c93f:	ff 15 78 ff ff 23    	call   QWORD PTR [rip+0x23ffff78]        # 2400c8bd <_end+0x23ed18b5>
    c945:	78 ff                	js     c946 <_IO_stdin_used+0x946>
    c947:	ff 31                	push   QWORD PTR [rcx]
    c949:	78 ff                	js     c94a <_IO_stdin_used+0x94a>
    c94b:	ff                   	(bad)  
    c94c:	3f                   	(bad)  
    c94d:	78 ff                	js     c94e <_IO_stdin_used+0x94e>
    c94f:	ff 4d 78             	dec    DWORD PTR [rbp+0x78]
    c952:	ff                   	(bad)  
    c953:	ff 5b 78             	call   FWORD PTR [rbx+0x78]
    c956:	ff                   	(bad)  
    c957:	ff 69 78             	jmp    FWORD PTR [rcx+0x78]
    c95a:	ff                   	(bad)  
    c95b:	ff 00                	inc    DWORD PTR [rax]
    c95d:	00 00                	add    BYTE PTR [rax],al
    c95f:	00 1b                	add    BYTE PTR [rbx],bl
    c961:	5b                   	pop    rbx
    c962:	33 32                	xor    esi,DWORD PTR [rdx]
    c964:	6d                   	ins    DWORD PTR es:[rdi],dx
    c965:	00 25 73 00 49 50    	add    BYTE PTR [rip+0x50490073],ah        # 5049c9de <_end+0x503619d6>
    c96b:	76 34                	jbe    c9a1 <_IO_stdin_used+0x9a1>
    c96d:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642603e6 <_end+0x641253de>
    c973:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325e9b7 <_end+0x731239af>
    c979:	3a 25 64 0a 00 09    	cmp    ah,BYTE PTR [rip+0x9000a64]        # 900d3e3 <_end+0x8ed23db>
    c97f:	54                   	push   rsp
    c980:	43 50                	rex.XB push r8
    c982:	20 5b 00             	and    BYTE PTR [rbx+0x0],bl
    c985:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c988:	33 6d 00             	xor    ebp,DWORD PTR [rbp+0x0]
    c98b:	25 73 20 41 43       	and    eax,0x43412073
    c990:	4b 20 00             	rex.WXB and BYTE PTR [r8],al
    c993:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c996:	37                   	(bad)  
    c997:	6d                   	ins    DWORD PTR es:[rdi],dx
    c998:	00 25 73 20 46 49    	add    BYTE PTR [rip+0x49462073],ah        # 4946ea11 <_end+0x49333a09>
    c99e:	4e 20 00             	rex.WRX and BYTE PTR [rax],r8b
    c9a1:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9a4:	34 6d                	xor    al,0x6d
    c9a6:	00 25 73 20 50 53    	add    BYTE PTR [rip+0x53502073],ah        # 5350ea1f <_end+0x533d3a17>
    c9ac:	48 20 00             	rex.W and BYTE PTR [rax],al
    c9af:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9b2:	31 6d 00             	xor    DWORD PTR [rbp+0x0],ebp
    c9b5:	25 73 20 52 53       	and    eax,0x53522073
    c9ba:	54                   	push   rsp
    c9bb:	20 00                	and    BYTE PTR [rax],al
    c9bd:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9c0:	35 6d 00 25 73       	xor    eax,0x7325006d
    c9c5:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    c9c8:	4e 20 00             	rex.WRX and BYTE PTR [rax],r8b
    c9cb:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9ce:	36 6d                	ss ins DWORD PTR es:[rdi],dx
    c9d0:	00 25 73 20 55 52    	add    BYTE PTR [rip+0x52552073],ah        # 5255ea49 <_end+0x52423a41>
    c9d6:	47 20 00             	rex.RXB and BYTE PTR [r8],r8b
    c9d9:	5d                   	pop    rbp
    c9da:	00 1b                	add    BYTE PTR [rbx],bl
    c9dc:	5b                   	pop    rbx
    c9dd:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    c9e0:	25 73 53 75 73       	and    eax,0x73755373
    c9e5:	70 69                	jo     ca50 <_IO_stdin_used+0xa50>
    c9e7:	63 69 6f             	movsxd ebp,DWORD PTR [rcx+0x6f]
    c9ea:	75 73                	jne    ca5f <_IO_stdin_used+0xa5f>
    c9ec:	20 54 43 50          	and    BYTE PTR [rbx+rax*2+0x50],dl
    c9f0:	20 50 61             	and    BYTE PTR [rax+0x61],dl
    c9f3:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    c9f6:	74 20                	je     ca18 <_IO_stdin_used+0xa18>
    c9f8:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c9fa:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    c9fd:	74 65                	je     ca64 <_IO_stdin_used+0xa64>
    c9ff:	72 65                	jb     ca66 <_IO_stdin_used+0xa66>
    ca01:	64 3a 20             	cmp    ah,BYTE PTR fs:[rax]
    ca04:	25 73 3a 25 64       	and    eax,0x64253a73
    ca09:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325ea4d <_end+0x73123a45>
    ca0f:	3a 25 64 2c 20 25    	cmp    ah,BYTE PTR [rip+0x25202c64]        # 2520f679 <_end+0x250d4671>
    ca15:	64 20 66 6c          	and    BYTE PTR fs:[rsi+0x6c],ah
    ca19:	61                   	(bad)  
    ca1a:	67 73 25             	addr32 jae ca42 <_IO_stdin_used+0xa42>
    ca1d:	73 0a                	jae    ca29 <_IO_stdin_used+0xa29>
    ca1f:	00 1b                	add    BYTE PTR [rbx],bl
    ca21:	5b                   	pop    rbx
    ca22:	39 36                	cmp    DWORD PTR [rsi],esi
    ca24:	6d                   	ins    DWORD PTR es:[rdi],dx
    ca25:	00 25 73 00 49 50    	add    BYTE PTR [rip+0x50490073],ah        # 5049ca9e <_end+0x50361a96>
    ca2b:	76 34                	jbe    ca61 <_IO_stdin_used+0xa61>
    ca2d:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642604a6 <_end+0x6412549e>
    ca33:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325ea77 <_end+0x73123a6f>
    ca39:	3a 25 64 20 55 44    	cmp    ah,BYTE PTR [rip+0x44552064]        # 4455eaa3 <_end+0x44423a9b>
    ca3f:	50                   	push   rax
    ca40:	0a 00                	or     al,BYTE PTR [rax]
    ca42:	1b 5b 30             	sbb    ebx,DWORD PTR [rbx+0x30]
    ca45:	6d                   	ins    DWORD PTR es:[rdi],dx
    ca46:	00 00                	add    BYTE PTR [rax],al
    ca48:	49 50                	rex.WB push r8
    ca4a:	76 34                	jbe    ca80 <_IO_stdin_used+0xa80>
    ca4c:	20 49 47             	and    BYTE PTR [rcx+0x47],cl
    ca4f:	4d 50                	rex.WRB push r8
    ca51:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2deaca <_end+0x3e1a3ac2>
    ca57:	20 25 73 20 5b 00    	and    BYTE PTR [rip+0x5b2073],ah        # 5bead0 <_end+0x483ac8>
    ca5d:	20 4d 65             	and    BYTE PTR [rbp+0x65],cl
    ca60:	6d                   	ins    DWORD PTR es:[rdi],dx
    ca61:	62                   	(bad)  
    ca62:	65 72 73             	gs jb  cad8 <_IO_stdin_used+0xad8>
    ca65:	68 69 70 20 51       	push   0x51207069
    ca6a:	75 65                	jne    cad1 <_IO_stdin_used+0xad1>
    ca6c:	72 79                	jb     cae7 <_IO_stdin_used+0xae7>
    ca6e:	20 5d 00             	and    BYTE PTR [rbp+0x0],bl
    ca71:	00 00                	add    BYTE PTR [rax],al
    ca73:	00 00                	add    BYTE PTR [rax],al
    ca75:	00 00                	add    BYTE PTR [rax],al
    ca77:	00 20                	add    BYTE PTR [rax],ah
    ca79:	4d                   	rex.WRB
    ca7a:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    ca7c:	62                   	(bad)  
    ca7d:	65 72 73             	gs jb  caf3 <_IO_stdin_used+0xaf3>
    ca80:	68 69 70 20 52       	push   0x52207069
    ca85:	65 70 6f             	gs jo  caf7 <_IO_stdin_used+0xaf7>
    ca88:	72 74                	jb     cafe <_IO_stdin_used+0xafe>
    ca8a:	20 2f                	and    BYTE PTR [rdi],ch
    ca8c:	20 4a 6f             	and    BYTE PTR [rdx+0x6f],cl
    ca8f:	69 6e 20 67 72 6f 75 	imul   ebp,DWORD PTR [rsi+0x20],0x756f7267
    ca96:	70 20                	jo     cab8 <_IO_stdin_used+0xab8>
    ca98:	25 73 20 66 6f       	and    eax,0x6f662073
    ca9d:	72 20                	jb     cabf <_IO_stdin_used+0xabf>
    ca9f:	61                   	(bad)  
    caa0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    caa1:	79 20                	jns    cac3 <_IO_stdin_used+0xac3>
    caa3:	73 6f                	jae    cb14 <_IO_stdin_used+0xb14>
    caa5:	75 72                	jne    cb19 <_IO_stdin_used+0xb19>
    caa7:	63 65 73             	movsxd esp,DWORD PTR [rbp+0x73]
    caaa:	20 5d 0a             	and    BYTE PTR [rbp+0xa],bl
    caad:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    cab0:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    cab4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cab5:	20 49 47             	and    BYTE PTR [rcx+0x47],cl
    cab8:	4d 50                	rex.WRB push r8
    caba:	20 54 79 70          	and    BYTE PTR [rcx+rdi*2+0x70],dl
    cabe:	65 3d 25 64 20 5d    	gs cmp eax,0x5d206425
    cac4:	0a 00                	or     al,BYTE PTR [rax]
    cac6:	25 64 2d 25 30       	and    eax,0x30252d64
    cacb:	32 64 2d 25          	xor    ah,BYTE PTR [rbp+rbp*1+0x25]
    cacf:	30 32                	xor    BYTE PTR [rdx],dh
    cad1:	64 20 25 30 32 64 3a 	and    BYTE PTR fs:[rip+0x3a643230],ah        # 3a64fd08 <_end+0x3a514d00>
    cad8:	25 30 32 64 3a       	and    eax,0x3a643230
    cadd:	25 30 32 64 00       	and    eax,0x643230
    cae2:	25 73 20 25 73       	and    eax,0x73252073
    cae7:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2deb60 <_end+0x3e1a3b58>
    caed:	20 25 73 0a 00 25    	and    BYTE PTR [rip+0x25000a73],ah        # 2500d566 <_end+0x24ed255e>
    caf3:	73 20                	jae    cb15 <_IO_stdin_used+0xb15>
    caf5:	25 73 20 25 73       	and    eax,0x73252073
    cafa:	3a 25 64 20 2d 3e    	cmp    ah,BYTE PTR [rip+0x3e2d2064]        # 3e2deb64 <_end+0x3e1a3b5c>
    cb00:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64260579 <_end+0x64125571>
    cb06:	0a 00                	or     al,BYTE PTR [rax]
    cb08:	25 73 00 61 00       	and    eax,0x610073
    cb0d:	25 30 32 78 00       	and    eax,0x783230
    cb12:	00 00                	add    BYTE PTR [rax],al
    cb14:	00 00                	add    BYTE PTR [rax],al
    cb16:	00 00                	add    BYTE PTR [rax],al
    cb18:	72 00                	jb     cb1a <_IO_stdin_used+0xb1a>
    cb1a:	00 00                	add    BYTE PTR [rax],al
    cb1c:	00 00                	add    BYTE PTR [rax],al
    cb1e:	00 00                	add    BYTE PTR [rax],al
    cb20:	45 72 72             	rex.RB jb cb95 <_IO_stdin_used+0xb95>
    cb23:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb24:	72 20                	jb     cb46 <_IO_stdin_used+0xb46>
    cb26:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb27:	70 65                	jo     cb8e <_IO_stdin_used+0xb8e>
    cb29:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cb2a:	69 6e 67 20 63 6f 6e 	imul   ebp,DWORD PTR [rsi+0x67],0x6e6f6320
    cb31:	66 69 67 75 72 61    	imul   sp,WORD PTR [rdi+0x75],0x6172
    cb37:	74 69                	je     cba2 <_IO_stdin_used+0xba2>
    cb39:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb3a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cb3b:	20 66 69             	and    BYTE PTR [rsi+0x69],ah
    cb3e:	6c                   	ins    BYTE PTR es:[rdi],dx
    cb3f:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    cb42:	25 73 0a 00 0a       	and    eax,0xa000a73
    cb47:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    cb4a:	72 69                	jb     cbb5 <_IO_stdin_used+0xbb5>
    cb4c:	63 74 5f 69          	movsxd esi,DWORD PTR [rdi+rbx*2+0x69]
    cb50:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
    cb53:	5f                   	pop    rdi
    cb54:	74 69                	je     cbbf <_IO_stdin_used+0xbbf>
    cb56:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb57:	65 73 74             	gs jae cbce <_IO_stdin_used+0xbce>
    cb5a:	61                   	(bad)  
    cb5b:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb5c:	70 5f                	jo     cbbd <_IO_stdin_used+0xbbd>
    cb5e:	72 65                	jb     cbc5 <_IO_stdin_used+0xbc5>
    cb60:	71 3d                	jno    cb9f <_IO_stdin_used+0xb9f>
    cb62:	00 59 45             	add    BYTE PTR [rcx+0x45],bl
    cb65:	53                   	push   rbx
    cb66:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    cb69:	72 69                	jb     cbd4 <_IO_stdin_used+0xbd4>
    cb6b:	63 74 5f 6e          	movsxd esi,DWORD PTR [rdi+rbx*2+0x6e]
    cb6f:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb70:	61                   	(bad)  
    cb71:	70 5f                	jo     cbd2 <_IO_stdin_used+0xbd2>
    cb73:	68 6f 73 74 5f       	push   0x5f74736f
    cb78:	61                   	(bad)  
    cb79:	6c                   	ins    BYTE PTR es:[rdi],dx
    cb7a:	69 76 65 5f 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x6568635f
    cb81:	63 6b 3d             	movsxd ebp,DWORD PTR [rbx+0x3d]
    cb84:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
    cb87:	65 61                	gs (bad) 
    cb89:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cb8a:	5f                   	pop    rdi
    cb8b:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    cb8e:	61                   	(bad)  
    cb8f:	79 5f                	jns    cbf0 <_IO_stdin_used+0xbf0>
    cb91:	69 6e 5f 70 61 63 6b 	imul   ebp,DWORD PTR [rsi+0x5f],0x6b636170
    cb98:	65 74 73             	gs je  cc0e <_IO_stdin_used+0xc0e>
    cb9b:	3d 00 43 6c 65       	cmp    eax,0x656c4300
    cba0:	61                   	(bad)  
    cba1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cba2:	20 64 65 6c          	and    BYTE PTR [rbp+riz*2+0x6c],ah
    cba6:	61                   	(bad)  
    cba7:	79 20                	jns    cbc9 <_IO_stdin_used+0xbc9>
    cba9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbaa:	65 65 64 73 20       	gs gs fs jae cbcf <_IO_stdin_used+0xbcf>
    cbaf:	61                   	(bad)  
    cbb0:	20 76 61             	and    BYTE PTR [rsi+0x61],dh
    cbb3:	6c                   	ins    BYTE PTR es:[rdi],dx
    cbb4:	75 65                	jne    cc1b <_IO_stdin_used+0xc1b>
    cbb6:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
    cbb9:	65 61                	gs (bad) 
    cbbb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbbc:	5f                   	pop    rdi
    cbbd:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    cbc0:	61                   	(bad)  
    cbc1:	79 5f                	jns    cc22 <_IO_stdin_used+0xc22>
    cbc3:	69 6e 5f 6d 73 65 63 	imul   ebp,DWORD PTR [rsi+0x5f],0x6365736d
    cbca:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cbcb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbcc:	64 73 3d             	fs jae cc0c <_IO_stdin_used+0xc0c>
    cbcf:	00 75 73             	add    BYTE PTR [rbp+0x73],dh
    cbd2:	65 5f                	gs pop rdi
    cbd4:	73 71                	jae    cc47 <_IO_stdin_used+0xc47>
    cbd6:	6c                   	ins    BYTE PTR es:[rdi],dx
    cbd7:	69 74 65 3d 00 73 71 	imul   esi,DWORD PTR [rbp+riz*2+0x3d],0x6c717300
    cbde:	6c 
    cbdf:	69 74 65 5f 64 61 74 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x61746164
    cbe6:	61 
    cbe7:	62 61                	(bad)  
    cbe9:	73 65                	jae    cc50 <_IO_stdin_used+0xc50>
    cbeb:	5f                   	pop    rdi
    cbec:	70 61                	jo     cc4f <_IO_stdin_used+0xc4f>
    cbee:	74 68                	je     cc58 <_IO_stdin_used+0xc58>
    cbf0:	3d 00 73 71 6c       	cmp    eax,0x6c717300
    cbf5:	69 74 65 5f 64 61 74 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x61746164
    cbfc:	61 
    cbfd:	62 61                	(bad)  
    cbff:	73 65                	jae    cc66 <_IO_stdin_used+0xc66>
    cc01:	5f                   	pop    rdi
    cc02:	70 61                	jo     cc65 <_IO_stdin_used+0xc65>
    cc04:	74 68                	je     cc6e <_IO_stdin_used+0xc6e>
    cc06:	3a 20                	cmp    ah,BYTE PTR [rax]
    cc08:	25 73 00 69 6e       	and    eax,0x6e690073
    cc0d:	5f                   	pop    rdi
    cc0e:	61                   	(bad)  
    cc0f:	64 61                	fs (bad) 
    cc11:	70 74                	jo     cc87 <_IO_stdin_used+0xc87>
    cc13:	65 72 3d             	gs jb  cc53 <_IO_stdin_used+0xc53>
    cc16:	00 00                	add    BYTE PTR [rax],al
    cc18:	72 75                	jb     cc8f <_IO_stdin_used+0xc8f>
    cc1a:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc1b:	65 5f                	gs pop rdi
    cc1d:	70 61                	jo     cc80 <_IO_stdin_used+0xc80>
    cc1f:	72 73                	jb     cc94 <_IO_stdin_used+0xc94>
    cc21:	65 72 2e             	gs jb  cc52 <_IO_stdin_used+0xc52>
    cc24:	63 3a                	movsxd edi,DWORD PTR [rdx]
    cc26:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    cc29:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc2a:	65 5f                	gs pop rdi
    cc2c:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc2d:	69 62 72 61 72 79 5f 	imul   esp,DWORD PTR [rdx+0x72],0x5f797261
    cc34:	70 61                	jo     cc97 <_IO_stdin_used+0xc97>
    cc36:	72 73                	jb     ccab <_IO_stdin_used+0xcab>
    cc38:	65 72 3a             	gs jb  cc75 <_IO_stdin_used+0xc75>
    cc3b:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    cc3e:	5f                   	pop    rdi
    cc3f:	61                   	(bad)  
    cc40:	64 61                	fs (bad) 
    cc42:	70 74                	jo     ccb8 <_IO_stdin_used+0xcb8>
    cc44:	65 72 3a             	gs jb  cc81 <_IO_stdin_used+0xc81>
    cc47:	20 25 73 00 6f 75    	and    BYTE PTR [rip+0x756f0073],ah        # 756fccc0 <_end+0x755c1cb8>
    cc4d:	74 5f                	je     ccae <_IO_stdin_used+0xcae>
    cc4f:	61                   	(bad)  
    cc50:	64 61                	fs (bad) 
    cc52:	70 74                	jo     ccc8 <_IO_stdin_used+0xcc8>
    cc54:	65 72 3d             	gs jb  cc94 <_IO_stdin_used+0xc94>
    cc57:	00 72 75             	add    BYTE PTR [rdx+0x75],dh
    cc5a:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc5b:	65 5f                	gs pop rdi
    cc5d:	70 61                	jo     ccc0 <_IO_stdin_used+0xcc0>
    cc5f:	72 73                	jb     ccd4 <_IO_stdin_used+0xcd4>
    cc61:	65 72 2e             	gs jb  cc92 <_IO_stdin_used+0xc92>
    cc64:	63 3a                	movsxd edi,DWORD PTR [rdx]
    cc66:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    cc69:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc6a:	65 5f                	gs pop rdi
    cc6c:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc6d:	69 62 72 61 72 79 5f 	imul   esp,DWORD PTR [rdx+0x72],0x5f797261
    cc74:	70 61                	jo     ccd7 <_IO_stdin_used+0xcd7>
    cc76:	72 73                	jb     cceb <_IO_stdin_used+0xceb>
    cc78:	65 72 3a             	gs jb  ccb5 <_IO_stdin_used+0xcb5>
    cc7b:	20 6f 75             	and    BYTE PTR [rdi+0x75],ch
    cc7e:	74 5f                	je     ccdf <_IO_stdin_used+0xcdf>
    cc80:	61                   	(bad)  
    cc81:	64 61                	fs (bad) 
    cc83:	70 74                	jo     ccf9 <_IO_stdin_used+0xcf9>
    cc85:	65 72 3a             	gs jb  ccc2 <_IO_stdin_used+0xcc2>
    cc88:	20 25 73 00 6d 6f    	and    BYTE PTR [rip+0x6f6d0073],ah        # 6f6dcd01 <_end+0x6f5a1cf9>
    cc8e:	64 65 3d 00 6d 6f 64 	fs gs cmp eax,0x646f6d00
    cc95:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    cc98:	25 73 00 52 75       	and    eax,0x75520073
    cc9d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cc9e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cc9f:	69 6e 67 20 69 6e 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206e6920
    cca6:	00 32                	add    BYTE PTR [rdx],dh
    cca8:	00 49 50             	add    BYTE PTR [rcx+0x50],cl
    ccab:	53                   	push   rbx
    ccac:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    ccaf:	64 65 20 61 73       	fs and BYTE PTR gs:[rcx+0x73],ah
    ccb4:	20 70 65             	and    BYTE PTR [rax+0x65],dh
    ccb7:	72 20                	jb     ccd9 <_IO_stdin_used+0xcd9>
    ccb9:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    ccbc:	66 69 67 00 49 44    	imul   sp,WORD PTR [rdi+0x0],0x4449
    ccc2:	53                   	push   rbx
    ccc3:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    ccc6:	64 65 20 61 73       	fs and BYTE PTR gs:[rcx+0x73],ah
    cccb:	20 70 65             	and    BYTE PTR [rax+0x65],dh
    ccce:	72 20                	jb     ccf0 <_IO_stdin_used+0xcf0>
    ccd0:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    ccd3:	66 69 67 00 6c 6f    	imul   sp,WORD PTR [rdi+0x0],0x6f6c
    ccd9:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
    ccdc:	69 70 3d 00 6c 6f 63 	imul   esi,DWORD PTR [rax+0x3d],0x636f6c00
    cce3:	61                   	(bad)  
    cce4:	6c                   	ins    BYTE PTR es:[rdi],dx
    cce5:	5f                   	pop    rdi
    cce6:	69 70 20 61 73 20 70 	imul   esi,DWORD PTR [rax+0x20],0x70207361
    cced:	65 72 20             	gs jb  cd10 <_IO_stdin_used+0xd10>
    ccf0:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    ccf3:	66 69 67 3a 20 25    	imul   sp,WORD PTR [rdi+0x3a],0x2520
    ccf9:	73 00                	jae    ccfb <_IO_stdin_used+0xcfb>
    ccfb:	64 65 66 67 77 3d    	fs gs data16 addr32 ja cd3e <_IO_stdin_used+0xd3e>
    cd01:	00 75 73             	add    BYTE PTR [rbp+0x73],dh
    cd04:	65 5f                	gs pop rdi
    cd06:	73 70                	jae    cd78 <_IO_stdin_used+0xd78>
    cd08:	69 3d 00 56 49 47 49 	imul   edi,DWORD PTR [rip+0x47495600],0x53204c49        # 474a2312 <_end+0x4736730a>
    cd0f:	4c 20 53 
    cd12:	50                   	push   rax
    cd13:	49 20 73 65          	rex.WB and BYTE PTR [r11+0x65],sil
    cd17:	72 76                	jb     cd8f <_IO_stdin_used+0xd8f>
    cd19:	69 63 65 20 61 63 74 	imul   esp,DWORD PTR [rbx+0x65],0x74636120
    cd20:	69 76 65 00 48 4f 4d 	imul   esi,DWORD PTR [rsi+0x65],0x4d4f4800
    cd27:	45 5f                	rex.RB pop r15
    cd29:	4e                   	rex.WRX
    cd2a:	45 54                	rex.RB push r12
    cd2c:	3d 00 48 4f 4d       	cmp    eax,0x4d4f4800
    cd31:	45 5f                	rex.RB pop r15
    cd33:	4e                   	rex.WRX
    cd34:	45 54                	rex.RB push r12
    cd36:	5f                   	pop    rdi
    cd37:	4d                   	rex.WRB
    cd38:	41 53                	push   r11
    cd3a:	4b 3d 00 6c 6f 63    	rex.WXB cmp rax,0x636f6c00
    cd40:	61                   	(bad)  
    cd41:	74 69                	je     cdac <_IO_stdin_used+0xdac>
    cd43:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd44:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd45:	3d 00 65 78 74       	cmp    eax,0x74786500
    cd4a:	65 72 6e             	gs jb  cdbb <_IO_stdin_used+0xdbb>
    cd4d:	61                   	(bad)  
    cd4e:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd4f:	00 53 79             	add    BYTE PTR [rbx+0x79],dl
    cd52:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd53:	74 61                	je     cdb6 <_IO_stdin_used+0xdb6>
    cd55:	78 20                	js     cd77 <_IO_stdin_used+0xd77>
    cd57:	65 72 72             	gs jb  cdcc <_IO_stdin_used+0xdcc>
    cd5a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd5b:	72 20                	jb     cd7d <_IO_stdin_used+0xd7d>
    cd5d:	61                   	(bad)  
    cd5e:	74 20                	je     cd80 <_IO_stdin_used+0xd80>
    cd60:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd61:	69 6e 65 20 25 64 3a 	imul   ebp,DWORD PTR [rsi+0x65],0x3a642520
    cd68:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # d7e1 <_IO_stdin_used+0x17e1>
    cd6e:	00 00                	add    BYTE PTR [rax],al
    cd70:	45 72 72             	rex.RB jb cde5 <_IO_stdin_used+0xde5>
    cd73:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd74:	72 20                	jb     cd96 <_IO_stdin_used+0xd96>
    cd76:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd77:	70 65                	jo     cdde <_IO_stdin_used+0xdde>
    cd79:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd7a:	69 6e 67 20 72 75 6c 	imul   ebp,DWORD PTR [rsi+0x67],0x6c757220
    cd81:	65 20 66 69          	and    BYTE PTR gs:[rsi+0x69],ah
    cd85:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd86:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    cd89:	25 73 2e 20 52       	and    eax,0x52202e73
    cd8e:	65 66 75 73          	gs data16 jne ce05 <_IO_stdin_used+0xe05>
    cd92:	69 6e 67 20 74 6f 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
    cd99:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    cd9c:	74 69                	je     ce07 <_IO_stdin_used+0xe07>
    cd9e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd9f:	75 65                	jne    ce06 <_IO_stdin_used+0xe06>
    cda1:	0a 00                	or     al,BYTE PTR [rax]
    cda3:	50                   	push   rax
    cda4:	61                   	(bad)  
    cda5:	72 73                	jb     ce1a <_IO_stdin_used+0xe1a>
    cda7:	69 6e 67 20 66 69 6c 	imul   ebp,DWORD PTR [rsi+0x67],0x6c696620
    cdae:	65 20 25 73 0a 00 61 	and    BYTE PTR gs:[rip+0x61000a73],ah        # 6100d828 <_end+0x60ed2820>
    cdb5:	6c                   	ins    BYTE PTR es:[rdi],dx
    cdb6:	65 72 74             	gs jb  ce2d <_IO_stdin_used+0xe2d>
    cdb9:	00 46 69             	add    BYTE PTR [rsi+0x69],al
    cdbc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cdbd:	69 73 68 65 64 20 70 	imul   esi,DWORD PTR [rbx+0x68],0x70206465
    cdc4:	61                   	(bad)  
    cdc5:	72 73                	jb     ce3a <_IO_stdin_used+0xe3a>
    cdc7:	69 6e 67 20 25 73 0a 	imul   ebp,DWORD PTR [rsi+0x67],0xa732520
    cdce:	00 00                	add    BYTE PTR [rax],al
    cdd0:	45 72 72             	rex.RB jb ce45 <_IO_stdin_used+0xe45>
    cdd3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cdd4:	72 20                	jb     cdf6 <_IO_stdin_used+0xdf6>
    cdd6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cdd7:	70 65                	jo     ce3e <_IO_stdin_used+0xe3e>
    cdd9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cdda:	69 6e 67 20 25 73 20 	imul   ebp,DWORD PTR [rsi+0x67],0x20732520
    cde1:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    cde3:	72 20                	jb     ce05 <_IO_stdin_used+0xe05>
    cde5:	65 78 70             	gs js  ce58 <_IO_stdin_used+0xe58>
    cde8:	6c                   	ins    BYTE PTR es:[rdi],dx
    cde9:	2f                   	(bad)  
    cdea:	69 6d 70 6c 69 63 69 	imul   ebp,DWORD PTR [rbp+0x70],0x6963696c
    cdf1:	74 20                	je     ce13 <_IO_stdin_used+0xe13>
    cdf3:	64 65 6e             	fs outs dx,BYTE PTR gs:[rsi]
    cdf6:	79 20                	jns    ce18 <_IO_stdin_used+0xe18>
    cdf8:	70 61                	jo     ce5b <_IO_stdin_used+0xe5b>
    cdfa:	72 73                	jb     ce6f <_IO_stdin_used+0xe6f>
    cdfc:	69 6e 67 0a 00 69 70 	imul   ebp,DWORD PTR [rsi+0x67],0x7069000a
    ce03:	76 34                	jbe    ce39 <_IO_stdin_used+0xe39>
    ce05:	00 46 61             	add    BYTE PTR [rsi+0x61],al
    ce08:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    ce0f:	20 
    ce10:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ce11:	70 65                	jo     ce78 <_IO_stdin_used+0xe78>
    ce13:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ce14:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # d88d <_IO_stdin_used+0x188d>
    ce1a:	00 00                	add    BYTE PTR [rax],al
    ce1c:	00 00                	add    BYTE PTR [rax],al
    ce1e:	00 00                	add    BYTE PTR [rax],al
    ce20:	52                   	push   rdx
    ce21:	55                   	push   rbp
    ce22:	4e                   	rex.WRX
    ce23:	4e                   	rex.WRX
    ce24:	49                   	rex.WB
    ce25:	4e                   	rex.WRX
    ce26:	47 20 49 4e          	rex.RXB and BYTE PTR [r9+0x4e],r9b
    ce2a:	20 44 45 4d          	and    BYTE PTR [rbp+rax*2+0x4d],al
    ce2e:	4f                   	rex.WRXB
    ce2f:	4e 53                	rex.WRX push rbx
    ce31:	54                   	push   rsp
    ce32:	52                   	push   rdx
    ce33:	41 54                	push   r12
    ce35:	49                   	rex.WB
    ce36:	4f                   	rex.WRXB
    ce37:	4e 20 4d 4f          	rex.WRX and BYTE PTR [rbp+0x4f],r9b
    ce3b:	44                   	rex.R
    ce3c:	45                   	rex.RB
    ce3d:	2e 20 59 4f          	cs and BYTE PTR [rcx+0x4f],bl
    ce41:	55                   	push   rbp
    ce42:	20 48 41             	and    BYTE PTR [rax+0x41],cl
    ce45:	56                   	push   rsi
    ce46:	45 20 31             	and    BYTE PTR [r9],r14b
    ce49:	30 20                	xor    BYTE PTR [rax],ah
    ce4b:	53                   	push   rbx
    ce4c:	45                   	rex.RB
    ce4d:	43                   	rex.XB
    ce4e:	4f                   	rex.WRXB
    ce4f:	4e                   	rex.WRX
    ce50:	44 53                	rex.R push rbx
    ce52:	20 54 4f 20          	and    BYTE PTR [rdi+rcx*2+0x20],dl
    ce56:	41                   	rex.B
    ce57:	42                   	rex.X
    ce58:	4f 52                	rex.WRXB push r10
    ce5a:	54                   	push   rsp
    ce5b:	2e 00 00             	cs add BYTE PTR [rax],al
    ce5e:	00 00                	add    BYTE PTR [rax],al
    ce60:	52                   	push   rdx
    ce61:	55                   	push   rbp
    ce62:	4e                   	rex.WRX
    ce63:	4e                   	rex.WRX
    ce64:	49                   	rex.WB
    ce65:	4e                   	rex.WRX
    ce66:	47 20 49 4e          	rex.RXB and BYTE PTR [r9+0x4e],r9b
    ce6a:	20 54 45 53          	and    BYTE PTR [rbp+rax*2+0x53],dl
    ce6e:	54                   	push   rsp
    ce6f:	20 4d 4f             	and    BYTE PTR [rbp+0x4f],cl
    ce72:	44                   	rex.R
    ce73:	45                   	rex.RB
    ce74:	2e 20 59 4f          	cs and BYTE PTR [rcx+0x4f],bl
    ce78:	55                   	push   rbp
    ce79:	20 48 41             	and    BYTE PTR [rax+0x41],cl
    ce7c:	56                   	push   rsi
    ce7d:	45 20 31             	and    BYTE PTR [r9],r14b
    ce80:	30 20                	xor    BYTE PTR [rax],ah
    ce82:	53                   	push   rbx
    ce83:	45                   	rex.RB
    ce84:	43                   	rex.XB
    ce85:	4f                   	rex.WRXB
    ce86:	4e                   	rex.WRX
    ce87:	44 53                	rex.R push rbx
    ce89:	20 54 4f 20          	and    BYTE PTR [rdi+rcx*2+0x20],dl
    ce8d:	41                   	rex.B
    ce8e:	42                   	rex.X
    ce8f:	4f 52                	rex.WRXB push r10
    ce91:	54                   	push   rsp
    ce92:	2e 00 55 6e          	cs add BYTE PTR [rbp+0x6e],dl
    ce96:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    ce9a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ce9b:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    ce9e:	67 75 6d             	addr32 jne cf0e <_IO_stdin_used+0xf0e>
    cea1:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    cea3:	74 20                	je     cec5 <_IO_stdin_used+0xec5>
    cea5:	2d 25 63 0a 00       	sub    eax,0xa6325
    ceaa:	70 64                	jo     cf10 <_IO_stdin_used+0xf10>
    ceac:	71 68                	jno    cf16 <_IO_stdin_used+0xf16>
    ceae:	74 65                	je     cf15 <_IO_stdin_used+0xf15>
    ceb0:	69 3a 00 2f 65 74    	imul   edi,DWORD PTR [rdx],0x74652f00
    ceb6:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    ceb8:	76 69                	jbe    cf23 <_IO_stdin_used+0xf23>
    ceba:	67 69 6c 2f 64 65 6e 	imul   ebp,DWORD PTR [edi+ebp*1+0x64],0x2e796e65
    cec1:	79 2e 
    cec3:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    cec6:	66 00 46 69          	data16 add BYTE PTR [rsi+0x69],al
    ceca:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cecb:	73 69                	jae    cf36 <_IO_stdin_used+0xf36>
    cecd:	73 68                	jae    cf37 <_IO_stdin_used+0xf37>
    cecf:	65 64 20 6c 6f 61    	gs and BYTE PTR fs:[rdi+rbp*2+0x61],ch
    ced5:	64 69 6e 67 20 65 78 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x70786520
    cedc:	70 
    cedd:	6c                   	ins    BYTE PTR es:[rdi],dx
    cede:	69 63 69 74 20 64 65 	imul   esp,DWORD PTR [rbx+0x69],0x65642074
    cee5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cee6:	79 20                	jns    cf08 <_IO_stdin_used+0xf08>
    cee8:	66 69 6c 65 28 2f 65 	imul   bp,WORD PTR [rbp+riz*2+0x28],0x652f
    ceef:	74 63                	je     cf54 <_IO_stdin_used+0xf54>
    cef1:	2f                   	(bad)  
    cef2:	76 69                	jbe    cf5d <_IO_stdin_used+0xf5d>
    cef4:	67 69 6c 2f 64 65 6e 	imul   ebp,DWORD PTR [edi+ebp*1+0x64],0x2e796e65
    cefb:	79 2e 
    cefd:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    cf00:	66 29 00             	sub    WORD PTR [rax],ax
    cf03:	00 00                	add    BYTE PTR [rax],al
    cf05:	00 00                	add    BYTE PTR [rax],al
    cf07:	00 46 69             	add    BYTE PTR [rsi+0x69],al
    cf0a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cf0b:	69 73 68 65 64 20 6c 	imul   esi,DWORD PTR [rbx+0x68],0x6c206465
    cf12:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cf13:	61                   	(bad)  
    cf14:	64 69 6e 67 20 43 53 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x56534320
    cf1b:	56 
    cf1c:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    cf1f:	70 20                	jo     cf41 <_IO_stdin_used+0xf41>
    cf21:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    cf24:	68 65 00 00 46       	push   0x46000065
    cf29:	61                   	(bad)  
    cf2a:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    cf31:	20 
    cf32:	6c                   	ins    BYTE PTR es:[rdi],dx
    cf33:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cf34:	61                   	(bad)  
    cf35:	64 20 43 53          	and    BYTE PTR fs:[rbx+0x53],al
    cf39:	56                   	push   rsi
    cf3a:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    cf3d:	70 20                	jo     cf5f <_IO_stdin_used+0xf5f>
    cf3f:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    cf42:	68 65 28 6e 6f       	push   0x6f6e2865
    cf47:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cf48:	20 63 72             	and    BYTE PTR [rbx+0x72],ah
    cf4b:	69 74 69 63 61 6c 20 	imul   esi,DWORD PTR [rcx+rbp*2+0x63],0x65206c61
    cf52:	65 
    cf53:	72 72                	jb     cfc7 <_IO_stdin_used+0xfc7>
    cf55:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cf56:	72 29                	jb     cf81 <_IO_stdin_used+0xf81>
    cf58:	00 2f                	add    BYTE PTR [rdi],ch
    cf5a:	65 74 63             	gs je  cfc0 <_IO_stdin_used+0xfc0>
    cf5d:	2f                   	(bad)  
    cf5e:	76 69                	jbe    cfc9 <_IO_stdin_used+0xfc9>
    cf60:	67 69 6c 2f 76 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x76],0x6c696769
    cf67:	69 6c 
    cf69:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    cf6d:	66 00 50 61          	data16 add BYTE PTR [rax+0x61],dl
    cf71:	72 73                	jb     cfe6 <_IO_stdin_used+0xfe6>
    cf73:	65 64 20 72 75       	gs and BYTE PTR fs:[rdx+0x75],dh
    cf78:	6c                   	ins    BYTE PTR es:[rdi],dx
    cf79:	65 20 66 69          	and    BYTE PTR gs:[rsi+0x69],ah
    cf7d:	6c                   	ins    BYTE PTR es:[rdi],dx
    cf7e:	65 73 00             	gs jae cf81 <_IO_stdin_used+0xf81>
    cf81:	00 00                	add    BYTE PTR [rax],al
    cf83:	00 00                	add    BYTE PTR [rax],al
    cf85:	00 00                	add    BYTE PTR [rax],al
    cf87:	00 56 49             	add    BYTE PTR [rsi+0x49],dl
    cf8a:	47                   	rex.RXB
    cf8b:	49                   	rex.WB
    cf8c:	4c 20 6c 69 73       	rex.WR and BYTE PTR [rcx+rbp*2+0x73],r13b
    cf91:	74 65                	je     cff8 <_IO_stdin_used+0xff8>
    cf93:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cf94:	69 6e 67 20 6f 6e 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206e6f20
    cf9b:	69 6e 74 65 72 66 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61667265
    cfa2:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    cfa5:	25 73 0a 00 70       	and    eax,0x70000a73
    cfaa:	63 61 70             	movsxd esp,DWORD PTR [rcx+0x70]
    cfad:	5f                   	pop    rdi
    cfae:	6d                   	ins    DWORD PTR es:[rdi],dx
    cfaf:	67 72 20             	addr32 jb cfd2 <_IO_stdin_used+0xfd2>
    cfb2:	69 6e 20 70 63 61 70 	imul   ebp,DWORD PTR [rsi+0x20],0x70616370
    cfb9:	5f                   	pop    rdi
    cfba:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cfbb:	70 65                	jo     d022 <_IO_stdin_used+0x1022>
    cfbd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cfbe:	5f                   	pop    rdi
    cfbf:	6c                   	ins    BYTE PTR es:[rdi],dx
    cfc0:	69 76 65 00 00 00 00 	imul   esi,DWORD PTR [rsi+0x65],0x0
    cfc7:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    cfca:	65 63 72 79          	movsxd esi,DWORD PTR gs:[rdx+0x79]
    cfce:	70 74                	jo     d044 <_IO_stdin_used+0x1044>
    cfd0:	65 64 20 4e 53       	gs and BYTE PTR fs:[rsi+0x53],cl
    cfd5:	48 20 63 6f          	rex.W and BYTE PTR [rbx+0x6f],spl
    cfd9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cfda:	66 69 67 20 73 65    	imul   sp,WORD PTR [rdi+0x20],0x6573
    cfe0:	72 76                	jb     d058 <_IO_stdin_used+0x1058>
    cfe2:	65 72 20             	gs jb  d005 <_IO_stdin_used+0x1005>
    cfe5:	73 74                	jae    d05b <_IO_stdin_used+0x105b>
    cfe7:	61                   	(bad)  
    cfe8:	72 74                	jb     d05e <_IO_stdin_used+0x105e>
    cfea:	65 64 3a 20          	gs cmp ah,BYTE PTR fs:[rax]
    cfee:	31 32                	xor    DWORD PTR [rdx],esi
    cff0:	37                   	(bad)  
    cff1:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
    cff4:	30 2e                	xor    BYTE PTR [rsi],ch
    cff6:	31 3a                	xor    DWORD PTR [rdx],edi
    cff8:	36 34 31             	ss xor al,0x31
    cffb:	00 07                	add    BYTE PTR [rdi],al
    cffd:	99                   	cdq    
    cffe:	ff                   	(bad)  
    cfff:	ff 44 99 ff          	inc    DWORD PTR [rcx+rbx*4-0x1]
    d003:	ff 82 99 ff ff 82    	inc    DWORD PTR [rdx-0x7d000067]
    d009:	99                   	cdq    
    d00a:	ff                   	(bad)  
    d00b:	ff 13                	call   QWORD PTR [rbx]
    d00d:	99                   	cdq    
    d00e:	ff                   	(bad)  
    d00f:	ff 22                	jmp    QWORD PTR [rdx]
    d011:	99                   	cdq    
    d012:	ff                   	(bad)  
    d013:	ff 82 99 ff ff 82    	inc    DWORD PTR [rdx-0x7d000067]
    d019:	99                   	cdq    
    d01a:	ff                   	(bad)  
    d01b:	ff 82 99 ff ff 82    	inc    DWORD PTR [rdx-0x7d000067]
    d021:	99                   	cdq    
    d022:	ff                   	(bad)  
    d023:	ff 82 99 ff ff 82    	inc    DWORD PTR [rdx-0x7d000067]
    d029:	99                   	cdq    
    d02a:	ff                   	(bad)  
    d02b:	ff 32                	push   QWORD PTR [rdx]
    d02d:	99                   	cdq    
    d02e:	ff                   	(bad)  
    d02f:	ff                   	(bad)  
    d030:	3b 99 ff ff 82 99    	cmp    ebx,DWORD PTR [rcx-0x667d0001]
    d036:	ff                   	(bad)  
    d037:	ff 82 99 ff ff 63    	inc    DWORD PTR [rdx+0x63ffff99]
    d03d:	99                   	cdq    
    d03e:	ff                   	(bad)  
    d03f:	ff 0a                	dec    DWORD PTR [rdx]
    d041:	43 61                	rex.XB (bad) 
    d043:	75 67                	jne    d0ac <_IO_stdin_used+0x10ac>
    d045:	68 74 20 73 69       	push   0x69732074
    d04a:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    d04c:	61                   	(bad)  
    d04d:	6c                   	ins    BYTE PTR es:[rdi],dx
    d04e:	20 25 64 20 61 74    	and    BYTE PTR [rip+0x74612064],ah        # 7461f0b8 <_end+0x744e40b0>
    d054:	20 25 73 2c 20 65    	and    BYTE PTR [rip+0x65202c73],ah        # 6520fccd <_end+0x650d4cc5>
    d05a:	78 69                	js     d0c5 <_IO_stdin_used+0x10c5>
    d05c:	74 69                	je     d0c7 <_IO_stdin_used+0x10c7>
    d05e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d05f:	67 2e 2e 2e 0a 00    	cs cs cs or al,BYTE PTR [eax]
    d065:	00 54 6f 74          	add    BYTE PTR [rdi+rbp*2+0x74],dl
    d069:	61                   	(bad)  
    d06a:	6c                   	ins    BYTE PTR es:[rdi],dx
    d06b:	20 50 61             	and    BYTE PTR [rax+0x61],dl
    d06e:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d071:	74 73                	je     d0e6 <_IO_stdin_used+0x10e6>
    d073:	20 43 61             	and    BYTE PTR [rbx+0x61],al
    d076:	75 67                	jne    d0df <_IO_stdin_used+0x10df>
    d078:	68 74 3a 20 25       	push   0x25203a74
    d07d:	64 0a 00             	or     al,BYTE PTR fs:[rax]
    d080:	53                   	push   rbx
    d081:	74 61                	je     d0e4 <_IO_stdin_used+0x10e4>
    d083:	74 69                	je     d0ee <_IO_stdin_used+0x10ee>
    d085:	73 74                	jae    d0fb <_IO_stdin_used+0x10fb>
    d087:	69 63 73 0a 49 70 20 	imul   esp,DWORD PTR [rbx+0x73],0x2070490a
    d08e:	61                   	(bad)  
    d08f:	64 64 72 65          	fs fs jb d0f8 <_IO_stdin_used+0x10f8>
    d093:	73 73                	jae    d108 <_IO_stdin_used+0x1108>
    d095:	20 20                	and    BYTE PTR [rax],ah
    d097:	20 20                	and    BYTE PTR [rax],ah
    d099:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    d09b:	75 6e                	jne    d10b <_IO_stdin_used+0x110b>
    d09d:	74 0a                	je     d0a9 <_IO_stdin_used+0x10a9>
    d09f:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    d0a4:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    d0a9:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    d0ae:	2d 2d 00 00 00       	sub    eax,0x2d
    d0b3:	00 00                	add    BYTE PTR [rax],al
    d0b5:	00 00                	add    BYTE PTR [rax],al
    d0b7:	00 25 73 0a 09 09    	add    BYTE PTR [rip+0x9090a73],ah        # 909db30 <_end+0x8f62b28>
    d0bd:	74 6f                	je     d12e <_IO_stdin_used+0x112e>
    d0bf:	74 61                	je     d122 <_IO_stdin_used+0x1122>
    d0c1:	6c                   	ins    BYTE PTR es:[rdi],dx
    d0c2:	20 70 61             	and    BYTE PTR [rax+0x61],dh
    d0c5:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d0c8:	74 73                	je     d13d <_IO_stdin_used+0x113d>
    d0ca:	20 3d 20 25 64 0a    	and    BYTE PTR [rip+0xa642520],bh        # a64f5f0 <_end+0xa5145e8>
    d0d0:	09 09                	or     DWORD PTR [rcx],ecx
    d0d2:	74 6f                	je     d143 <_IO_stdin_used+0x1143>
    d0d4:	74 61                	je     d137 <_IO_stdin_used+0x1137>
    d0d6:	6c                   	ins    BYTE PTR es:[rdi],dx
    d0d7:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d0da:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d0db:	74 20                	je     d0fd <_IO_stdin_used+0x10fd>
    d0dd:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0e2:	09 09                	or     DWORD PTR [rcx],ecx
    d0e4:	74 6f                	je     d155 <_IO_stdin_used+0x1155>
    d0e6:	74 61                	je     d149 <_IO_stdin_used+0x1149>
    d0e8:	6c                   	ins    BYTE PTR es:[rdi],dx
    d0e9:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d0ec:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d0ef:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0f4:	09 09                	or     DWORD PTR [rcx],ecx
    d0f6:	54                   	push   rsp
    d0f7:	43 50                	rex.XB push r8
    d0f9:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d0fc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d0fd:	74 20                	je     d11f <_IO_stdin_used+0x111f>
    d0ff:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d104:	09 09                	or     DWORD PTR [rcx],ecx
    d106:	54                   	push   rsp
    d107:	43 50                	rex.XB push r8
    d109:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d10c:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d10f:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d114:	09 09                	or     DWORD PTR [rcx],ecx
    d116:	55                   	push   rbp
    d117:	44 50                	rex.R push rax
    d119:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d11c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d11d:	74 20                	je     d13f <_IO_stdin_used+0x113f>
    d11f:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d124:	09 09                	or     DWORD PTR [rcx],ecx
    d126:	55                   	push   rbp
    d127:	44 50                	rex.R push rax
    d129:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d12c:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d12f:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d134:	09 09                	or     DWORD PTR [rcx],ecx
    d136:	49                   	rex.WB
    d137:	43                   	rex.XB
    d138:	4d 50                	rex.WRB push r8
    d13a:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d13d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d13e:	74 20                	je     d160 <_IO_stdin_used+0x1160>
    d140:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d145:	09 09                	or     DWORD PTR [rcx],ecx
    d147:	49                   	rex.WB
    d148:	43                   	rex.XB
    d149:	4d 50                	rex.WRB push r8
    d14b:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d14e:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d151:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d156:	0a 00                	or     al,BYTE PTR [rax]
    d158:	77 00                	ja     d15a <_IO_stdin_used+0x115a>
    d15a:	2f                   	(bad)  
    d15b:	75 73                	jne    d1d0 <_IO_stdin_used+0x11d0>
    d15d:	72 2f                	jb     d18e <_IO_stdin_used+0x118e>
    d15f:	73 68                	jae    d1c9 <_IO_stdin_used+0x11c9>
    d161:	61                   	(bad)  
    d162:	72 65                	jb     d1c9 <_IO_stdin_used+0x11c9>
    d164:	2f                   	(bad)  
    d165:	76 69                	jbe    d1d0 <_IO_stdin_used+0x11d0>
    d167:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    d16e:	63 61 
    d170:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    d173:	2e 63 73 76          	cs movsxd esi,DWORD PTR [rbx+0x76]
    d177:	00 43 61             	add    BYTE PTR [rbx+0x61],al
    d17a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d17b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d17c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d17d:	74 20                	je     d19f <_IO_stdin_used+0x119f>
    d17f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d180:	70 65                	jo     d1e7 <_IO_stdin_used+0x11e7>
    d182:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d183:	20 2f                	and    BYTE PTR [rdi],ch
    d185:	75 73                	jne    d1fa <_IO_stdin_used+0x11fa>
    d187:	72 2f                	jb     d1b8 <_IO_stdin_used+0x11b8>
    d189:	73 68                	jae    d1f3 <_IO_stdin_used+0x11f3>
    d18b:	61                   	(bad)  
    d18c:	72 65                	jb     d1f3 <_IO_stdin_used+0x11f3>
    d18e:	2f                   	(bad)  
    d18f:	76 69                	jbe    d1fa <_IO_stdin_used+0x11fa>
    d191:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    d198:	63 61 
    d19a:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    d19d:	2e 63 73 76          	cs movsxd esi,DWORD PTR [rbx+0x76]
    d1a1:	3a 20                	cmp    ah,BYTE PTR [rax]
    d1a3:	70 72                	jo     d217 <_IO_stdin_used+0x1217>
    d1a5:	69 6e 74 69 6e 67 20 	imul   ebp,DWORD PTR [rsi+0x74],0x20676e69
    d1ac:	61                   	(bad)  
    d1ad:	72 70                	jb     d21f <_IO_stdin_used+0x121f>
    d1af:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    d1b2:	68 65 20 74 6f       	push   0x6f742065
    d1b7:	20 73 63             	and    BYTE PTR [rbx+0x63],dh
    d1ba:	72 65                	jb     d221 <_IO_stdin_used+0x1221>
    d1bc:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d1be:	00 25 73 20 2d 3e    	add    BYTE PTR [rip+0x3e2d2073],ah        # 3e2df237 <_end+0x3e1a422f>
    d1c4:	20 25 73 0a 00 25    	and    BYTE PTR [rip+0x25000a73],ah        # 2500dc3d <_end+0x24ed2c35>
    d1ca:	73 2c                	jae    d1f8 <_IO_stdin_used+0x11f8>
    d1cc:	25 73 0a 00 31       	and    eax,0x31000a73
    d1d1:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
    d1d4:	30 00                	xor    BYTE PTR [rax],al
    d1d6:	00 00                	add    BYTE PTR [rax],al
    d1d8:	56                   	push   rsi
    d1d9:	49                   	rex.WB
    d1da:	47                   	rex.RXB
    d1db:	49                   	rex.WB
    d1dc:	4c 20 55 54          	rex.WR and BYTE PTR [rbp+0x54],r10b
    d1e0:	4d 20 25 73 0a 09 2d 	rex.WRB and BYTE PTR [rip+0x2d090a73],r12b        # 2d09dc5a <_end+0x2cf62c52>
    d1e7:	64 3a 20             	cmp    ah,BYTE PTR fs:[rax]
    d1ea:	64 65 62             	fs gs (bad) 
    d1ed:	75 67                	jne    d256 <_IO_stdin_used+0x1256>
    d1ef:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    d1f2:	64 65 0a 09          	fs or  cl,BYTE PTR gs:[rcx]
    d1f6:	2d 68 3a 20 64       	sub    eax,0x64203a68
    d1fb:	69 73 70 6c 61 79 20 	imul   esi,DWORD PTR [rbx+0x70],0x2079616c
    d202:	74 68                	je     d26c <_IO_stdin_used+0x126c>
    d204:	69 73 20 6d 65 73 73 	imul   esi,DWORD PTR [rbx+0x20],0x7373656d
    d20b:	61                   	(bad)  
    d20c:	67 65 0a 09          	or     cl,BYTE PTR gs:[ecx]
    d210:	2d 69 20 3c 69       	sub    eax,0x693c2069
    d215:	66 61                	data16 (bad) 
    d217:	63 65 3e             	movsxd esp,DWORD PTR [rbp+0x3e]
    d21a:	3a 20                	cmp    ah,BYTE PTR [rax]
    d21c:	73 65                	jae    d283 <_IO_stdin_used+0x1283>
    d21e:	74 20                	je     d240 <_IO_stdin_used+0x1240>
    d220:	74 68                	je     d28a <_IO_stdin_used+0x128a>
    d222:	65 20 69 6e          	and    BYTE PTR gs:[rcx+0x6e],ch
    d226:	74 65                	je     d28d <_IO_stdin_used+0x128d>
    d228:	72 66                	jb     d290 <_IO_stdin_used+0x1290>
    d22a:	61                   	(bad)  
    d22b:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    d22e:	74 6f                	je     d29f <_IO_stdin_used+0x129f>
    d230:	20 6c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],ch
    d234:	74 65                	je     d29b <_IO_stdin_used+0x129b>
    d236:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d237:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    d23a:	0a 09                	or     cl,BYTE PTR [rcx]
    d23c:	2d 70 20 70 72       	sub    eax,0x72702070
    d241:	69 6e 74 20 70 61 63 	imul   ebp,DWORD PTR [rsi+0x74],0x63617020
    d248:	6b 65 74 73          	imul   esp,DWORD PTR [rbp+0x74],0x73
    d24c:	0a 09                	or     cl,BYTE PTR [rcx]
    d24e:	2d 71 20 65 78       	sub    eax,0x78652071
    d253:	69 74 20 71 75 69 65 	imul   esi,DWORD PTR [rax+riz*1+0x71],0x74656975
    d25a:	74 
    d25b:	6c                   	ins    BYTE PTR es:[rdi],dx
    d25c:	79 0a                	jns    d268 <_IO_stdin_used+0x1268>
    d25e:	00 72 62             	add    BYTE PTR [rdx+0x62],dh
    d261:	00 2f                	add    BYTE PTR [rdi],ch
    d263:	70 72                	jo     d2d7 <_IO_stdin_used+0x12d7>
    d265:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d266:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    d268:	63 70 75             	movsxd esi,DWORD PTR [rax+0x75]
    d26b:	69 6e 66 6f 00 6d 6f 	imul   ebp,DWORD PTR [rsi+0x66],0x6f6d006f
    d272:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    d275:	20 6e 61             	and    BYTE PTR [rsi+0x61],ch
    d278:	6d                   	ins    DWORD PTR es:[rdi],dx
    d279:	65 00 46 6f          	add    BYTE PTR gs:[rsi+0x6f],al
    d27d:	75 6e                	jne    d2ed <_IO_stdin_used+0x12ed>
    d27f:	64 20 25 64 20 63 70 	and    BYTE PTR fs:[rip+0x70632064],ah        # 7063f2ea <_end+0x705042e2>
    d286:	75 73                	jne    d2fb <_IO_stdin_used+0x12fb>
    d288:	3a 0a                	cmp    cl,BYTE PTR [rdx]
    d28a:	25 73 00 00 00       	and    eax,0x73
    d28f:	00 e2                	add    dl,ah
    d291:	96                   	xchg   esi,eax
    d292:	88 e2                	mov    dl,ah
    d294:	96                   	xchg   esi,eax
    d295:	88 e2                	mov    dl,ah
    d297:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d29e:	88 e2                	mov    dl,ah
    d2a0:	96                   	xchg   esi,eax
    d2a1:	88 e2                	mov    dl,ah
    d2a3:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2aa:	88 e2                	mov    dl,ah
    d2ac:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    d2b3:	96                   	xchg   esi,eax
    d2b4:	88 e2                	mov    dl,ah
    d2b6:	96                   	xchg   esi,eax
    d2b7:	88 e2                	mov    dl,ah
    d2b9:	96                   	xchg   esi,eax
    d2ba:	88 e2                	mov    dl,ah
    d2bc:	96                   	xchg   esi,eax
    d2bd:	88 e2                	mov    dl,ah
    d2bf:	96                   	xchg   esi,eax
    d2c0:	88 e2                	mov    dl,ah
    d2c2:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    d2c9:	96                   	xchg   esi,eax
    d2ca:	88 e2                	mov    dl,ah
    d2cc:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2d3:	88 0a                	mov    BYTE PTR [rdx],cl
    d2d5:	e2 96                	loop   d26d <_IO_stdin_used+0x126d>
    d2d7:	88 e2                	mov    dl,ah
    d2d9:	96                   	xchg   esi,eax
    d2da:	88 e2                	mov    dl,ah
    d2dc:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d2e3:	88 e2                	mov    dl,ah
    d2e5:	96                   	xchg   esi,eax
    d2e6:	88 e2                	mov    dl,ah
    d2e8:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2ef:	88 e2                	mov    dl,ah
    d2f1:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2f8:	88 e2                	mov    dl,ah
    d2fa:	80 81 e2 80 81 e2 80 	add    BYTE PTR [rcx-0x1d7e7f1e],0x80
    d301:	81 e2 80 81 e2 80    	and    edx,0x80e28180
    d307:	81 e2 80 81 20 e2    	and    edx,0xe2208180
    d30d:	96                   	xchg   esi,eax
    d30e:	88 e2                	mov    dl,ah
    d310:	96                   	xchg   esi,eax
    d311:	88 e2                	mov    dl,ah
    d313:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d31a:	88 0a                	mov    BYTE PTR [rdx],cl
    d31c:	e2 96                	loop   d2b4 <_IO_stdin_used+0x12b4>
    d31e:	88 e2                	mov    dl,ah
    d320:	96                   	xchg   esi,eax
    d321:	88 e2                	mov    dl,ah
    d323:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d32a:	88 e2                	mov    dl,ah
    d32c:	96                   	xchg   esi,eax
    d32d:	88 e2                	mov    dl,ah
    d32f:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d336:	88 e2                	mov    dl,ah
    d338:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d33f:	88 e2                	mov    dl,ah
    d341:	80 81 20 20 e2 96 88 	add    BYTE PTR [rcx-0x691ddfe0],0x88
    d348:	e2 96                	loop   d2e0 <_IO_stdin_used+0x12e0>
    d34a:	88 e2                	mov    dl,ah
    d34c:	96                   	xchg   esi,eax
    d34d:	88 e2                	mov    dl,ah
    d34f:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d356:	88 e2                	mov    dl,ah
    d358:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d35f:	88 0a                	mov    BYTE PTR [rdx],cl
    d361:	e2 80                	loop   d2e3 <_IO_stdin_used+0x12e3>
    d363:	81 e2 96 88 e2 96    	and    edx,0x96e28896
    d369:	88 e2                	mov    dl,ah
    d36b:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    d372:	96                   	xchg   esi,eax
    d373:	88 e2                	mov    dl,ah
    d375:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    d37c:	88 e2                	mov    dl,ah
    d37e:	96                   	xchg   esi,eax
    d37f:	88 e2                	mov    dl,ah
    d381:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d388:	88 e2                	mov    dl,ah
    d38a:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d391:	88 e2                	mov    dl,ah
    d393:	96                   	xchg   esi,eax
    d394:	88 e2                	mov    dl,ah
    d396:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d39d:	88 e2                	mov    dl,ah
    d39f:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d3a6:	88 0a                	mov    BYTE PTR [rdx],cl
    d3a8:	20 e2                	and    dl,ah
    d3aa:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d3b1:	88 e2                	mov    dl,ah
    d3b3:	96                   	xchg   esi,eax
    d3b4:	88 e2                	mov    dl,ah
    d3b6:	96                   	xchg   esi,eax
    d3b7:	88 e2                	mov    dl,ah
    d3b9:	80 81 e2 80 81 20 e2 	add    BYTE PTR [rcx+0x208180e2],0xe2
    d3c0:	96                   	xchg   esi,eax
    d3c1:	88 e2                	mov    dl,ah
    d3c3:	96                   	xchg   esi,eax
    d3c4:	88 e2                	mov    dl,ah
    d3c6:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    d3cd:	88 e2                	mov    dl,ah
    d3cf:	96                   	xchg   esi,eax
    d3d0:	88 e2                	mov    dl,ah
    d3d2:	96                   	xchg   esi,eax
    d3d3:	88 e2                	mov    dl,ah
    d3d5:	96                   	xchg   esi,eax
    d3d6:	88 e2                	mov    dl,ah
    d3d8:	96                   	xchg   esi,eax
    d3d9:	88 e2                	mov    dl,ah
    d3db:	96                   	xchg   esi,eax
    d3dc:	88 e2                	mov    dl,ah
    d3de:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    d3e5:	88 e2                	mov    dl,ah
    d3e7:	96                   	xchg   esi,eax
    d3e8:	88 e2                	mov    dl,ah
    d3ea:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d3f1:	88 e2                	mov    dl,ah
    d3f3:	96                   	xchg   esi,eax
    d3f4:	88 e2                	mov    dl,ah
    d3f6:	96                   	xchg   esi,eax
    d3f7:	88 e2                	mov    dl,ah
    d3f9:	96                   	xchg   esi,eax
    d3fa:	88 e2                	mov    dl,ah
    d3fc:	96                   	xchg   esi,eax
    d3fd:	88 e2                	mov    dl,ah
    d3ff:	96                   	xchg   esi,eax
    d400:	88 00                	mov    BYTE PTR [rax],al
    d402:	00 00                	add    BYTE PTR [rax],al
    d404:	00 00                	add    BYTE PTR [rax],al
    d406:	00 00                	add    BYTE PTR [rax],al
    d408:	0a 00                	or     al,BYTE PTR [rax]
    d40a:	0d 00 00 00 00       	or     eax,0x0
    d40f:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    d412:	68 5f 73 65 72       	push   0x7265735f
    d417:	76 65                	jbe    d47e <_IO_stdin_used+0x147e>
    d419:	72 2e                	jb     d449 <_IO_stdin_used+0x1449>
    d41b:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d41d:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    d420:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    d427:	20 
    d428:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
    d42b:	61                   	(bad)  
    d42c:	74 65                	je     d493 <_IO_stdin_used+0x1493>
    d42e:	20 73 6f             	and    BYTE PTR [rbx+0x6f],dh
    d431:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d434:	74 00                	je     d436 <_IO_stdin_used+0x1436>
    d436:	00 00                	add    BYTE PTR [rax],al
    d438:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d439:	73 68                	jae    d4a3 <_IO_stdin_used+0x14a3>
    d43b:	5f                   	pop    rdi
    d43c:	73 65                	jae    d4a3 <_IO_stdin_used+0x14a3>
    d43e:	72 76                	jb     d4b6 <_IO_stdin_used+0x14b6>
    d440:	65 72 2e             	gs jb  d471 <_IO_stdin_used+0x1471>
    d443:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d445:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    d448:	69 6c 75 72 65 20 69 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6e692065
    d44f:	6e 
    d450:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d453:	74 73                	je     d4c8 <_IO_stdin_used+0x14c8>
    d455:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d456:	63 6b 6f             	movsxd ebp,DWORD PTR [rbx+0x6f]
    d459:	70 74                	jo     d4cf <_IO_stdin_used+0x14cf>
    d45b:	00 00                	add    BYTE PTR [rax],al
    d45d:	00 00                	add    BYTE PTR [rax],al
    d45f:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    d462:	68 5f 73 65 72       	push   0x7265735f
    d467:	76 65                	jbe    d4ce <_IO_stdin_used+0x14ce>
    d469:	72 2e                	jb     d499 <_IO_stdin_used+0x1499>
    d46b:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d46d:	20 62 69             	and    BYTE PTR [rdx+0x69],ah
    d470:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d471:	64 69 6e 67 20 6f 66 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x20666f20
    d478:	20 
    d479:	73 6f                	jae    d4ea <_IO_stdin_used+0x14ea>
    d47b:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d47e:	74 20                	je     d4a0 <_IO_stdin_used+0x14a0>
    d480:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    d482:	72 20                	jb     d4a4 <_IO_stdin_used+0x14a4>
    d484:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d485:	73 68                	jae    d4ef <_IO_stdin_used+0x14ef>
    d487:	5f                   	pop    rdi
    d488:	66 64 20 66 61       	data16 and BYTE PTR fs:[rsi+0x61],ah
    d48d:	69 6c 65 64 00 00 00 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
    d494:	00 
    d495:	00 00                	add    BYTE PTR [rax],al
    d497:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    d49a:	68 5f 73 65 72       	push   0x7265735f
    d49f:	76 65                	jbe    d506 <_IO_stdin_used+0x1506>
    d4a1:	72 2e                	jb     d4d1 <_IO_stdin_used+0x14d1>
    d4a3:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d4a5:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    d4a8:	69 6c 75 72 65 20 6f 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6e6f2065
    d4af:	6e 
    d4b0:	20 6c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],ch
    d4b4:	74 65                	je     d51b <_IO_stdin_used+0x151b>
    d4b6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d4b7:	69 6e 67 20 66 6f 72 	imul   ebp,DWORD PTR [rsi+0x67],0x726f6620
    d4be:	20 6e 73             	and    BYTE PTR [rsi+0x73],ch
    d4c1:	68 5f 66 64 00       	push   0x64665f
    d4c6:	00 00                	add    BYTE PTR [rax],al
    d4c8:	46 61                	rex.RX (bad) 
    d4ca:	69 6c 75 72 65 20 74 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f742065
    d4d1:	6f 
    d4d2:	20 61 63             	and    BYTE PTR [rcx+0x63],ah
    d4d5:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    d4d8:	74 20                	je     d4fa <_IO_stdin_used+0x14fa>
    d4da:	61                   	(bad)  
    d4db:	20 63 6c             	and    BYTE PTR [rbx+0x6c],ah
    d4de:	69 65 6e 74 20 61 74 	imul   esp,DWORD PTR [rbp+0x6e],0x74612074
    d4e5:	20 25 73 0a 00 30    	and    BYTE PTR [rip+0x30000a73],ah        # 3000df5e <_end+0x2fed2f56>
    d4eb:	78 25                	js     d512 <_IO_stdin_used+0x1512>
    d4ed:	30 32                	xor    BYTE PTR [rdx],dh
    d4ef:	78 0a                	js     d4fb <_IO_stdin_used+0x14fb>
    d4f1:	00 00                	add    BYTE PTR [rax],al
    d4f3:	00 00                	add    BYTE PTR [rax],al
    d4f5:	00 00                	add    BYTE PTR [rax],al
    d4f7:	00 61 00             	add    BYTE PTR [rcx+0x0],ah
    d4fa:	00 00                	add    BYTE PTR [rax],al
    d4fc:	00 00                	add    BYTE PTR [rax],al
    d4fe:	00 00                	add    BYTE PTR [rax],al
    d500:	42 61                	rex.X (bad) 
    d502:	73 69                	jae    d56d <_IO_stdin_used+0x156d>
    d504:	63 20                	movsxd esp,DWORD PTR [rax]
    d506:	70 6f                	jo     d577 <_IO_stdin_used+0x1577>
    d508:	72 74                	jb     d57e <_IO_stdin_used+0x157e>
    d50a:	73 63                	jae    d56f <_IO_stdin_used+0x156f>
    d50c:	61                   	(bad)  
    d50d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d50e:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d512:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d517:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d51a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d51b:	6d                   	ins    DWORD PTR es:[rdi],dx
    d51c:	20 49 50             	and    BYTE PTR [rcx+0x50],cl
    d51f:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    d522:	64 72 65             	fs jb  d58a <_IO_stdin_used+0x158a>
    d525:	73 73                	jae    d59a <_IO_stdin_used+0x159a>
    d527:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # dfa0 <_IO_stdin_used+0x1fa0>
    d52d:	00 00                	add    BYTE PTR [rax],al
    d52f:	00 50 6f             	add    BYTE PTR [rax+0x6f],dl
    d532:	72 74                	jb     d5a8 <_IO_stdin_used+0x15a8>
    d534:	73 63                	jae    d599 <_IO_stdin_used+0x1599>
    d536:	61                   	(bad)  
    d537:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d538:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d53c:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d541:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d544:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d545:	6d                   	ins    DWORD PTR es:[rdi],dx
    d546:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461f5bf <_end+0x744e45b7>
    d54c:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # dfc5 <_IO_stdin_used+0x1fc5>
    d552:	00 00                	add    BYTE PTR [rax],al
    d554:	00 00                	add    BYTE PTR [rax],al
    d556:	00 00                	add    BYTE PTR [rax],al
    d558:	46                   	rex.RX
    d559:	49                   	rex.WB
    d55a:	4e 20 70 6f          	rex.WRX and BYTE PTR [rax+0x6f],r14b
    d55e:	72 74                	jb     d5d4 <_IO_stdin_used+0x15d4>
    d560:	73 63                	jae    d5c5 <_IO_stdin_used+0x15c5>
    d562:	61                   	(bad)  
    d563:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d564:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d568:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d56d:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d570:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d571:	6d                   	ins    DWORD PTR es:[rdi],dx
    d572:	20 49 50             	and    BYTE PTR [rcx+0x50],cl
    d575:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    d578:	64 72 65             	fs jb  d5e0 <_IO_stdin_used+0x15e0>
    d57b:	73 73                	jae    d5f0 <_IO_stdin_used+0x15f0>
    d57d:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # dff6 <__GNU_EH_FRAME_HDR+0x12>
    d583:	00 00                	add    BYTE PTR [rax],al
    d585:	00 00                	add    BYTE PTR [rax],al
    d587:	00 46 49             	add    BYTE PTR [rsi+0x49],al
    d58a:	4e 20 70 6f          	rex.WRX and BYTE PTR [rax+0x6f],r14b
    d58e:	72 74                	jb     d604 <_IO_stdin_used+0x1604>
    d590:	73 63                	jae    d5f5 <_IO_stdin_used+0x15f5>
    d592:	61                   	(bad)  
    d593:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d594:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d598:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d59d:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d5a0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d5a1:	6d                   	ins    DWORD PTR es:[rdi],dx
    d5a2:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461f61b <_end+0x744e4613>
    d5a8:	20 25 73 0a 00 30    	and    BYTE PTR [rip+0x30000a73],ah        # 3000e021 <_end+0x2fed3019>
    d5ae:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
    d5b1:	30 2e                	xor    BYTE PTR [rsi],ch
    d5b3:	31 00                	xor    DWORD PTR [rax],eax
    d5b5:	30 2e                	xor    BYTE PTR [rsi],ch
    d5b7:	30 2e                	xor    BYTE PTR [rsi],ch
    d5b9:	30 2e                	xor    BYTE PTR [rsi],ch
    d5bb:	31 00                	xor    DWORD PTR [rax],eax
    d5bd:	00 00                	add    BYTE PTR [rax],al
    d5bf:	00 41 72             	add    BYTE PTR [rcx+0x72],al
    d5c2:	70 20                	jo     d5e4 <_IO_stdin_used+0x15e4>
    d5c4:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d5c6:	74 72                	je     d63a <_IO_stdin_used+0x163a>
    d5c8:	79 20                	jns    d5ea <_IO_stdin_used+0x15ea>
    d5ca:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    d5cd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d5ce:	67 65 64 20 66 6f    	gs and BYTE PTR fs:[esi+0x6f],ah
    d5d4:	72 20                	jb     d5f6 <_IO_stdin_used+0x15f6>
    d5d6:	69 70 20 61 64 64 72 	imul   esi,DWORD PTR [rax+0x20],0x72646461
    d5dd:	65 73 73             	gs jae d653 <_IO_stdin_used+0x1653>
    d5e0:	20 25 73 3a 20 77    	and    BYTE PTR [rip+0x77203a73],ah        # 77211059 <_end+0x770d6051>
    d5e6:	61                   	(bad)  
    d5e7:	73 20                	jae    d609 <_IO_stdin_used+0x1609>
    d5e9:	25 73 20 69 73       	and    eax,0x73692073
    d5ee:	20 6e 6f             	and    BYTE PTR [rsi+0x6f],ch
    d5f1:	77 20                	ja     d613 <_IO_stdin_used+0x1613>
    d5f3:	25 73 00 72 00       	and    eax,0x720073
    d5f8:	2f                   	(bad)  
    d5f9:	75 73                	jne    d66e <_IO_stdin_used+0x166e>
    d5fb:	72 2f                	jb     d62c <_IO_stdin_used+0x162c>
    d5fd:	73 68                	jae    d667 <_IO_stdin_used+0x1667>
    d5ff:	61                   	(bad)  
    d600:	72 65                	jb     d667 <_IO_stdin_used+0x1667>
    d602:	2f                   	(bad)  
    d603:	76 69                	jbe    d66e <_IO_stdin_used+0x166e>
    d605:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    d60c:	63 61 
    d60e:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    d611:	2e 63 73 76          	cs movsxd esi,DWORD PTR [rbx+0x76]
    d615:	00 00                	add    BYTE PTR [rax],al
    d617:	00 43 6f             	add    BYTE PTR [rbx+0x6f],al
    d61a:	75 6c                	jne    d688 <_IO_stdin_used+0x1688>
    d61c:	64 20 6e 6f          	and    BYTE PTR fs:[rsi+0x6f],ch
    d620:	74 20                	je     d642 <_IO_stdin_used+0x1642>
    d622:	6c                   	ins    BYTE PTR es:[rdi],dx
    d623:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d624:	61                   	(bad)  
    d625:	64 20 61 72          	and    BYTE PTR fs:[rcx+0x72],ah
    d629:	70 20                	jo     d64b <_IO_stdin_used+0x164b>
    d62b:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    d62e:	68 65 20 66 72       	push   0x72662065
    d633:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d634:	6d                   	ins    DWORD PTR es:[rdi],dx
    d635:	20 64 61 74          	and    BYTE PTR [rcx+riz*2+0x74],ah
    d639:	61                   	(bad)  
    d63a:	62 61                	(bad)  
    d63c:	73 65                	jae    d6a3 <_IO_stdin_used+0x16a3>
    d63e:	2c 20                	sub    al,0x20
    d640:	66 69 6c 65 20 6e 6f 	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f6e
    d647:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d648:	65 78 69             	gs js  d6b4 <_IO_stdin_used+0x16b4>
    d64b:	73 74                	jae    d6c1 <_IO_stdin_used+0x16c1>
    d64d:	61                   	(bad)  
    d64e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d64f:	74 00                	je     d651 <_IO_stdin_used+0x1651>
    d651:	0a 00                	or     al,BYTE PTR [rax]
    d653:	2c 00                	sub    al,0x0
    d655:	00 00                	add    BYTE PTR [rax],al
    d657:	00 55 70             	add    BYTE PTR [rbp+0x70],dl
    d65a:	64 61                	fs (bad) 
    d65c:	74 69                	je     d6c7 <_IO_stdin_used+0x16c7>
    d65e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d65f:	67 20 64 62 00       	and    BYTE PTR [edx+eiz*2+0x0],ah
    d664:	53                   	push   rbx
    d665:	51                   	push   rcx
    d666:	6c                   	ins    BYTE PTR es:[rdi],dx
    d667:	69 74 65 20 65 72 72 	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x6f727265
    d66e:	6f 
    d66f:	72 3a                	jb     d6ab <_IO_stdin_used+0x16ab>
    d671:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # e0ea <__GNU_EH_FRAME_HDR+0x106>
    d677:	00 49 4e             	add    BYTE PTR [rcx+0x4e],cl
    d67a:	53                   	push   rbx
    d67b:	45 52                	rex.RB push r10
    d67d:	54                   	push   rsp
    d67e:	20 49 4e             	and    BYTE PTR [rcx+0x4e],cl
    d681:	54                   	push   rsp
    d682:	4f 20 61 72          	rex.WRXB and BYTE PTR [r9+0x72],r12b
    d686:	70 5f                	jo     d6e7 <_IO_stdin_used+0x16e7>
    d688:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    d68b:	68 65 20 28 69       	push   0x69282065
    d690:	70 5f                	jo     d6f1 <_IO_stdin_used+0x16f1>
    d692:	61                   	(bad)  
    d693:	64 64 72 65          	fs fs jb d6fc <_IO_stdin_used+0x16fc>
    d697:	73 73                	jae    d70c <_IO_stdin_used+0x170c>
    d699:	2c 20                	sub    al,0x20
    d69b:	6d                   	ins    DWORD PTR es:[rdi],dx
    d69c:	61                   	(bad)  
    d69d:	63 5f 61             	movsxd ebx,DWORD PTR [rdi+0x61]
    d6a0:	64 64 72 65          	fs fs jb d709 <_IO_stdin_used+0x1709>
    d6a4:	73 73                	jae    d719 <_IO_stdin_used+0x1719>
    d6a6:	29 20                	sub    DWORD PTR [rax],esp
    d6a8:	56                   	push   rsi
    d6a9:	41                   	rex.B
    d6aa:	4c 55                	rex.WR push rbp
    d6ac:	45 53                	rex.RB push r11
    d6ae:	20 28                	and    BYTE PTR [rax],ch
    d6b0:	22 25 73 22 2c 20    	and    ah,BYTE PTR [rip+0x202c2273]        # 202cf929 <_end+0x20194921>
    d6b6:	22 25 73 22 29 3b    	and    ah,BYTE PTR [rip+0x3b292273]        # 3b29f92f <_end+0x3b164927>
    d6bc:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    d6bf:	4c 69 74 65 20 65 6e 	imul   r14,QWORD PTR [rbp+riz*2+0x20],0x6f636e65
    d6c6:	63 6f 
    d6c8:	75 6e                	jne    d738 <_IO_stdin_used+0x1738>
    d6ca:	74 65                	je     d731 <_IO_stdin_used+0x1731>
    d6cc:	72 65                	jb     d733 <_IO_stdin_used+0x1733>
    d6ce:	64 20 65 72          	and    BYTE PTR fs:[rbp+0x72],ah
    d6d2:	72 6f                	jb     d743 <_IO_stdin_used+0x1743>
    d6d4:	72 3a                	jb     d710 <_IO_stdin_used+0x1710>
    d6d6:	20 25 73 0a 00 2f    	and    BYTE PTR [rip+0x2f000a73],ah        # 2f00e14f <_end+0x2eed3147>
    d6dc:	75 73                	jne    d751 <_IO_stdin_used+0x1751>
    d6de:	72 2f                	jb     d70f <_IO_stdin_used+0x170f>
    d6e0:	73 68                	jae    d74a <_IO_stdin_used+0x174a>
    d6e2:	61                   	(bad)  
    d6e3:	72 65                	jb     d74a <_IO_stdin_used+0x174a>
    d6e5:	2f                   	(bad)  
    d6e6:	76 69                	jbe    d751 <_IO_stdin_used+0x1751>
    d6e8:	67 69 6c 2f 73 70 69 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x642e6970
    d6ef:	2e 64 
    d6f1:	62                   	(bad)  
    d6f2:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    d6f5:	4c 69 74 65 20 65 72 	imul   r14,QWORD PTR [rbp+riz*2+0x20],0x6f727265
    d6fc:	72 6f 
    d6fe:	72 20                	jb     d720 <_IO_stdin_used+0x1720>
    d700:	25 73 0a 00 00       	and    eax,0xa73
    d705:	00 00                	add    BYTE PTR [rax],al
    d707:	00 49 4e             	add    BYTE PTR [rcx+0x4e],cl
    d70a:	53                   	push   rbx
    d70b:	45 52                	rex.RB push r10
    d70d:	54                   	push   rsp
    d70e:	20 49 4e             	and    BYTE PTR [rcx+0x4e],cl
    d711:	54                   	push   rsp
    d712:	4f 20 73 70          	rex.WRXB and BYTE PTR [r11+0x70],r14b
    d716:	69 5f 74 61 62 6c 65 	imul   ebx,DWORD PTR [rdi+0x74],0x656c6261
    d71d:	20 28                	and    BYTE PTR [rax],ch
    d71f:	73 65                	jae    d786 <_IO_stdin_used+0x1786>
    d721:	72 76                	jb     d799 <_IO_stdin_used+0x1799>
    d723:	5f                   	pop    rdi
    d724:	61                   	(bad)  
    d725:	64 64 72 2c          	fs fs jb d755 <_IO_stdin_used+0x1755>
    d729:	20 63 6c             	and    BYTE PTR [rbx+0x6c],ah
    d72c:	69 5f 61 64 64 72 2c 	imul   ebx,DWORD PTR [rdi+0x61],0x2c726464
    d733:	73 65                	jae    d79a <_IO_stdin_used+0x179a>
    d735:	72 76                	jb     d7ad <_IO_stdin_used+0x17ad>
    d737:	5f                   	pop    rdi
    d738:	70 6f                	jo     d7a9 <_IO_stdin_used+0x17a9>
    d73a:	72 74                	jb     d7b0 <_IO_stdin_used+0x17b0>
    d73c:	2c 63                	sub    al,0x63
    d73e:	6c                   	ins    BYTE PTR es:[rdi],dx
    d73f:	69 5f 70 6f 72 74 2c 	imul   ebx,DWORD PTR [rdi+0x70],0x2c74726f
    d746:	73 65                	jae    d7ad <_IO_stdin_used+0x17ad>
    d748:	72 76                	jb     d7c0 <_IO_stdin_used+0x17c0>
    d74a:	5f                   	pop    rdi
    d74b:	70 6b                	jo     d7b8 <_IO_stdin_used+0x17b8>
    d74d:	74 5f                	je     d7ae <_IO_stdin_used+0x17ae>
    d74f:	73 65                	jae    d7b6 <_IO_stdin_used+0x17b6>
    d751:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d752:	74 2c                	je     d780 <_IO_stdin_used+0x1780>
    d754:	63 6c 69 5f          	movsxd ebp,DWORD PTR [rcx+rbp*2+0x5f]
    d758:	70 6b                	jo     d7c5 <_IO_stdin_used+0x17c5>
    d75a:	74 5f                	je     d7bb <_IO_stdin_used+0x17bb>
    d75c:	73 65                	jae    d7c3 <_IO_stdin_used+0x17c3>
    d75e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d75f:	74 2c                	je     d78d <_IO_stdin_used+0x178d>
    d761:	73 65                	jae    d7c8 <_IO_stdin_used+0x17c8>
    d763:	72 76                	jb     d7db <_IO_stdin_used+0x17db>
    d765:	5f                   	pop    rdi
    d766:	70 6b                	jo     d7d3 <_IO_stdin_used+0x17d3>
    d768:	74 5f                	je     d7c9 <_IO_stdin_used+0x17c9>
    d76a:	72 65                	jb     d7d1 <_IO_stdin_used+0x17d1>
    d76c:	63 76 2c             	movsxd esi,DWORD PTR [rsi+0x2c]
    d76f:	63 6c 69 5f          	movsxd ebp,DWORD PTR [rcx+rbp*2+0x5f]
    d773:	70 6b                	jo     d7e0 <_IO_stdin_used+0x17e0>
    d775:	74 5f                	je     d7d6 <_IO_stdin_used+0x17d6>
    d777:	72 65                	jb     d7de <_IO_stdin_used+0x17de>
    d779:	63 76 2c             	movsxd esi,DWORD PTR [rsi+0x2c]
    d77c:	70 72                	jo     d7f0 <_IO_stdin_used+0x17f0>
    d77e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d77f:	74 6f                	je     d7f0 <_IO_stdin_used+0x17f0>
    d781:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    d784:	2c 61                	sub    al,0x61
    d786:	76 67                	jbe    d7ef <_IO_stdin_used+0x17ef>
    d788:	5f                   	pop    rdi
    d789:	70 70                	jo     d7fb <_IO_stdin_used+0x17fb>
    d78b:	73 2c                	jae    d7b9 <_IO_stdin_used+0x17b9>
    d78d:	73 74                	jae    d803 <_IO_stdin_used+0x1803>
    d78f:	61                   	(bad)  
    d790:	72 74                	jb     d806 <_IO_stdin_used+0x1806>
    d792:	5f                   	pop    rdi
    d793:	74 69                	je     d7fe <_IO_stdin_used+0x17fe>
    d795:	6d                   	ins    DWORD PTR es:[rdi],dx
    d796:	65 2c 65             	gs sub al,0x65
    d799:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d79a:	64 5f                	fs pop rdi
    d79c:	74 69                	je     d807 <_IO_stdin_used+0x1807>
    d79e:	6d                   	ins    DWORD PTR es:[rdi],dx
    d79f:	65 2c 64             	gs sub al,0x64
    d7a2:	61                   	(bad)  
    d7a3:	74 61                	je     d806 <_IO_stdin_used+0x1806>
    d7a5:	5f                   	pop    rdi
    d7a6:	70 6b                	jo     d813 <_IO_stdin_used+0x1813>
    d7a8:	74 73                	je     d81d <_IO_stdin_used+0x181d>
    d7aa:	2c 63                	sub    al,0x63
    d7ac:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d7ad:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d7ae:	74 72                	je     d822 <_IO_stdin_used+0x1822>
    d7b0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d7b1:	6c                   	ins    BYTE PTR es:[rdi],dx
    d7b2:	5f                   	pop    rdi
    d7b3:	70 6b                	jo     d820 <_IO_stdin_used+0x1820>
    d7b5:	74 73                	je     d82a <_IO_stdin_used+0x182a>
    d7b7:	29 20                	sub    DWORD PTR [rax],esp
    d7b9:	56                   	push   rsi
    d7ba:	41                   	rex.B
    d7bb:	4c 55                	rex.WR push rbp
    d7bd:	45 53                	rex.RB push r11
    d7bf:	20 28                	and    BYTE PTR [rax],ch
    d7c1:	22 25 73 22 2c 22    	and    ah,BYTE PTR [rip+0x222c2273]        # 222cfa3a <_end+0x22194a32>
    d7c7:	25 73 22 2c 25       	and    eax,0x252c2273
    d7cc:	6c                   	ins    BYTE PTR es:[rdi],dx
    d7cd:	64 2c 25             	fs sub al,0x25
    d7d0:	6c                   	ins    BYTE PTR es:[rdi],dx
    d7d1:	64 2c 25             	fs sub al,0x25
    d7d4:	64 2c 25             	fs sub al,0x25
    d7d7:	64 2c 25             	fs sub al,0x25
    d7da:	64 2c 25             	fs sub al,0x25
    d7dd:	64 2c 25             	fs sub al,0x25
    d7e0:	64 2c 25             	fs sub al,0x25
    d7e3:	64 2c 25             	fs sub al,0x25
    d7e6:	6c                   	ins    BYTE PTR es:[rdi],dx
    d7e7:	64 2c 25             	fs sub al,0x25
    d7ea:	6c                   	ins    BYTE PTR es:[rdi],dx
    d7eb:	64 2c 25             	fs sub al,0x25
    d7ee:	64 2c 25             	fs sub al,0x25
    d7f1:	64 29 3b             	sub    DWORD PTR fs:[rbx],edi
    d7f4:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    d7f7:	4c                   	rex.WR
    d7f8:	49 54                	rex.WB push r12
    d7fa:	45 20 45 6e          	and    BYTE PTR [r13+0x6e],r8b
    d7fe:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    d801:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d802:	74 65                	je     d869 <_IO_stdin_used+0x1869>
    d804:	72 65                	jb     d86b <_IO_stdin_used+0x186b>
    d806:	64 20 65 72          	and    BYTE PTR fs:[rbp+0x72],ah
    d80a:	72 6f                	jb     d87b <_IO_stdin_used+0x187b>
    d80c:	72 3a                	jb     d848 <_IO_stdin_used+0x1848>
    d80e:	20 25 73 0a 00 53    	and    BYTE PTR [rip+0x53000a73],ah        # 5300e287 <_end+0x52ed327f>
    d814:	74 72                	je     d888 <_IO_stdin_used+0x1888>
    d816:	6c                   	ins    BYTE PTR es:[rdi],dx
    d817:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d818:	63 20                	movsxd esp,DWORD PTR [rax]
    d81a:	73 75                	jae    d891 <_IO_stdin_used+0x1891>
    d81c:	63 63 65             	movsxd esp,DWORD PTR [rbx+0x65]
    d81f:	73 73                	jae    d894 <_IO_stdin_used+0x1894>
    d821:	66 75 6c             	data16 jne d890 <_IO_stdin_used+0x1890>
    d824:	00 51 75             	add    BYTE PTR [rcx+0x75],dl
    d827:	65 72 79             	gs jb  d8a3 <_IO_stdin_used+0x18a3>
    d82a:	3a 20                	cmp    ah,BYTE PTR [rax]
    d82c:	25 73 0a 00 4c       	and    eax,0x4c000a73
    d831:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d832:	67 69 6e 20 69 6e 63 	imul   ebp,DWORD PTR [esi+0x20],0x6f636e69
    d839:	6f 
    d83a:	72 72                	jb     d8ae <_IO_stdin_used+0x18ae>
    d83c:	65 63 74 00 6c       	movsxd esi,DWORD PTR gs:[rax+rax*1+0x6c]
    d841:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d842:	67 69 6e 20 69 6e 63 	imul   ebp,DWORD PTR [esi+0x20],0x6f636e69
    d849:	6f 
    d84a:	72 72                	jb     d8be <_IO_stdin_used+0x18be>
    d84c:	65 63 74 00 50       	movsxd esi,DWORD PTR gs:[rax+rax*1+0x50]
    d851:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d852:	73 73                	jae    d8c7 <_IO_stdin_used+0x18c7>
    d854:	69 62 6c 65 20 46 54 	imul   esp,DWORD PTR [rdx+0x6c],0x54462065
    d85b:	50                   	push   rax
    d85c:	20 62 72             	and    BYTE PTR [rdx+0x72],ah
    d85f:	75 74                	jne    d8d5 <_IO_stdin_used+0x18d5>
    d861:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    d865:	72 63                	jb     d8ca <_IO_stdin_used+0x18ca>
    d867:	65 20 61 74          	and    BYTE PTR gs:[rcx+0x74],ah
    d86b:	74 65                	je     d8d2 <_IO_stdin_used+0x18d2>
    d86d:	6d                   	ins    DWORD PTR es:[rdi],dx
    d86e:	70 74                	jo     d8e4 <_IO_stdin_used+0x18e4>
    d870:	3a 20                	cmp    ah,BYTE PTR [rax]
    d872:	25 73 28 73 75       	and    eax,0x75732873
    d877:	73 70                	jae    d8e9 <_IO_stdin_used+0x18e9>
    d879:	65 63 74 29 20       	movsxd esi,DWORD PTR gs:[rcx+rbp*1+0x20]
    d87e:	2d 3e 20 25 73       	sub    eax,0x7325203e
    d883:	2e 20 25 64 20 66 61 	cs and BYTE PTR [rip+0x61662064],ah        # 6166f8ee <_end+0x615348e6>
    d88a:	69 6c 65 64 20 6c 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x676f6c20
    d891:	67 
    d892:	69 6e 73 0a 00 00 53 	imul   ebp,DWORD PTR [rsi+0x73],0x5300000a
    d899:	50                   	push   rax
    d89a:	49 20 54 41 42       	rex.WB and BYTE PTR [r9+rax*2+0x42],dl
    d89f:	4c                   	rex.WR
    d8a0:	45 20 52 45          	and    BYTE PTR [r10+0x45],r10b
    d8a4:	54                   	push   rsp
    d8a5:	52                   	push   rdx
    d8a6:	41                   	rex.B
    d8a7:	4e 53                	rex.WRX push rbx
    d8a9:	3a 20                	cmp    ah,BYTE PTR [rax]
    d8ab:	25 64 3a 20 25       	and    eax,0x25203a64
    d8b0:	73 3a                	jae    d8ec <_IO_stdin_used+0x18ec>
    d8b2:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    d8b7:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64261330 <_end+0x64126328>
    d8bd:	0a 00                	or     al,BYTE PTR [rax]
    d8bf:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d8c2:	49 20 4e 45          	rex.WB and BYTE PTR [r14+0x45],cl
    d8c6:	57                   	push   rdi
    d8c7:	20 43 4f             	and    BYTE PTR [rbx+0x4f],al
    d8ca:	4e 56                	rex.WRX push rsi
    d8cc:	3a 20                	cmp    ah,BYTE PTR [rax]
    d8ce:	25 64 3a 20 25       	and    eax,0x25203a64
    d8d3:	73 3a                	jae    d90f <_IO_stdin_used+0x190f>
    d8d5:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    d8da:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64261353 <_end+0x6412634b>
    d8e0:	0a 00                	or     al,BYTE PTR [rax]
    d8e2:	00 00                	add    BYTE PTR [rax],al
    d8e4:	00 00                	add    BYTE PTR [rax],al
    d8e6:	00 00                	add    BYTE PTR [rax],al
    d8e8:	53                   	push   rbx
    d8e9:	50                   	push   rax
    d8ea:	49 20 54 57 48       	rex.WB and BYTE PTR [r15+rdx*2+0x48],dl
    d8ef:	20 32                	and    BYTE PTR [rdx],dh
    d8f1:	2f                   	(bad)  
    d8f2:	33 3a                	xor    edi,DWORD PTR [rdx]
    d8f4:	20 25 64 3a 20 25    	and    BYTE PTR [rip+0x25203a64],ah        # 2521135e <_end+0x250d6356>
    d8fa:	73 3a                	jae    d936 <_IO_stdin_used+0x1936>
    d8fc:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    d901:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 6426137a <_end+0x64126372>
    d907:	0a 00                	or     al,BYTE PTR [rax]
    d909:	00 00                	add    BYTE PTR [rax],al
    d90b:	00 00                	add    BYTE PTR [rax],al
    d90d:	00 00                	add    BYTE PTR [rax],al
    d90f:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d912:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d916:	54                   	push   rsp
    d917:	52                   	push   rdx
    d918:	59                   	pop    rcx
    d919:	3a 20                	cmp    ah,BYTE PTR [rax]
    d91b:	25 64 3a 20 53       	and    eax,0x53203a64
    d920:	45 53                	rex.RB push r11
    d922:	53                   	push   rbx
    d923:	49                   	rex.WB
    d924:	4f                   	rex.WRXB
    d925:	4e 20 45 53          	rex.WRX and BYTE PTR [rbp+0x53],r8b
    d929:	54                   	push   rsp
    d92a:	3a 20                	cmp    ah,BYTE PTR [rax]
    d92c:	25 73 3a 25 64       	and    eax,0x64253a73
    d931:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325f975 <_end+0x7312496d>
    d937:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e3a1 <__GNU_EH_FRAME_HDR+0x3bd>
    d93d:	00 00                	add    BYTE PTR [rax],al
    d93f:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d942:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d946:	54                   	push   rsp
    d947:	52                   	push   rdx
    d948:	59                   	pop    rcx
    d949:	3a 20                	cmp    ah,BYTE PTR [rax]
    d94b:	25 64 3a 20 50       	and    eax,0x50203a64
    d950:	4f                   	rex.WRXB
    d951:	4c                   	rex.WR
    d952:	49 54                	rex.WB push r12
    d954:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    d958:	4e 56                	rex.WRX push rsi
    d95a:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    d95d:	44 20 33             	and    BYTE PTR [rbx],r14b
    d960:	2f                   	(bad)  
    d961:	33 3a                	xor    edi,DWORD PTR [rdx]
    d963:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642613dc <_end+0x641263d4>
    d969:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325f9ad <_end+0x731249a5>
    d96f:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e3d9 <__GNU_EH_FRAME_HDR+0x3f5>
    d975:	00 00                	add    BYTE PTR [rax],al
    d977:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d97a:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d97e:	54                   	push   rsp
    d97f:	52                   	push   rdx
    d980:	59                   	pop    rcx
    d981:	3a 20                	cmp    ah,BYTE PTR [rax]
    d983:	25 64 3a 20 50       	and    eax,0x50203a64
    d988:	4f                   	rex.WRXB
    d989:	4c                   	rex.WR
    d98a:	49 54                	rex.WB push r12
    d98c:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    d990:	4e 56                	rex.WRX push rsi
    d992:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    d995:	44 20 32             	and    BYTE PTR [rdx],r14b
    d998:	2f                   	(bad)  
    d999:	33 3a                	xor    edi,DWORD PTR [rdx]
    d99b:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64261414 <_end+0x6412640c>
    d9a1:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325f9e5 <_end+0x731249dd>
    d9a7:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e411 <__GNU_EH_FRAME_HDR+0x42d>
    d9ad:	00 00                	add    BYTE PTR [rax],al
    d9af:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d9b2:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d9b6:	54                   	push   rsp
    d9b7:	52                   	push   rdx
    d9b8:	59                   	pop    rcx
    d9b9:	3a 20                	cmp    ah,BYTE PTR [rax]
    d9bb:	25 64 3a 20 50       	and    eax,0x50203a64
    d9c0:	4f                   	rex.WRXB
    d9c1:	4c                   	rex.WR
    d9c2:	49 54                	rex.WB push r12
    d9c4:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    d9c8:	4e 56                	rex.WRX push rsi
    d9ca:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    d9cd:	44 20 31             	and    BYTE PTR [rcx],r14b
    d9d0:	2f                   	(bad)  
    d9d1:	33 3a                	xor    edi,DWORD PTR [rdx]
    d9d3:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 6426144c <_end+0x64126444>
    d9d9:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fa1d <_end+0x73124a15>
    d9df:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e449 <__GNU_EH_FRAME_HDR+0x465>
    d9e5:	00 00                	add    BYTE PTR [rax],al
    d9e7:	00 61 00             	add    BYTE PTR [rcx+0x0],ah
    d9ea:	00 00                	add    BYTE PTR [rax],al
    d9ec:	00 00                	add    BYTE PTR [rax],al
    d9ee:	00 00                	add    BYTE PTR [rax],al
    d9f0:	43 52                	rex.XB push r10
    d9f2:	49 54                	rex.WB push r12
    d9f4:	49                   	rex.WB
    d9f5:	43                   	rex.XB
    d9f6:	41                   	rex.B
    d9f7:	4c 20 46 41          	rex.WR and BYTE PTR [rsi+0x41],r8b
    d9fb:	49                   	rex.WB
    d9fc:	4c                   	rex.WR
    d9fd:	45                   	rex.RB
    d9fe:	44 20 54 4f 20       	and    BYTE PTR [rdi+rcx*2+0x20],r10b
    da03:	4f 50                	rex.WRXB push r8
    da05:	45                   	rex.RB
    da06:	4e 20 46 49          	rex.WRX and BYTE PTR [rsi+0x49],r8b
    da0a:	4c                   	rex.WR
    da0b:	45 20 46 4f          	and    BYTE PTR [r14+0x4f],r8b
    da0f:	52                   	push   rdx
    da10:	20 4c 4f 47          	and    BYTE PTR [rdi+rcx*2+0x47],cl
    da14:	47                   	rex.RXB
    da15:	49                   	rex.WB
    da16:	4e                   	rex.WRX
    da17:	47 3a 20             	rex.RXB cmp r12b,BYTE PTR [r8]
    da1a:	25 73 0a 00 25       	and    eax,0x25000a73
    da1f:	73 20                	jae    da41 <_IO_stdin_used+0x1a41>
    da21:	25 73 20 25 73       	and    eax,0x73252073
    da26:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fa6a <_end+0x73124a62>
    da2c:	0a 00                	or     al,BYTE PTR [rax]
    da2e:	25 73 20 25 73       	and    eax,0x73252073
    da33:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642614ac <_end+0x641264a4>
    da39:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fa7d <_end+0x73124a75>
    da3f:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e4a9 <__GNU_EH_FRAME_HDR+0x4c5>
    da45:	00 00                	add    BYTE PTR [rax],al
    da47:	00 61 6e             	add    BYTE PTR [rcx+0x6e],ah
    da4a:	79 00                	jns    da4c <_IO_stdin_used+0x1a4c>
    da4c:	41                   	rex.B
    da4d:	4e 59                	rex.WRX pop rcx
    da4f:	00 49 43             	add    BYTE PTR [rcx+0x43],cl
    da52:	4d 50                	rex.WRB push r8
    da54:	00 54 43 50          	add    BYTE PTR [rbx+rax*2+0x50],dl
    da58:	00 55 44             	add    BYTE PTR [rbp+0x44],dl
    da5b:	50                   	push   rax
    da5c:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    da5f:	72 5f                	jb     dac0 <_IO_stdin_used+0x1ac0>
    da61:	6d                   	ins    DWORD PTR es:[rdi],dx
    da62:	61                   	(bad)  
    da63:	74 63                	je     dac8 <_IO_stdin_used+0x1ac8>
    da65:	68 00 6e 6f 6e       	push   0x6e6f6e00
    da6a:	65 00 70 63          	add    BYTE PTR gs:[rax+0x63],dh
    da6e:	72 65                	jb     dad5 <_IO_stdin_used+0x1ad5>
    da70:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    da73:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    da77:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    da78:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    da7b:	6c                   	ins    BYTE PTR es:[rdi],dx
    da7c:	65 20 74 79 70       	and    BYTE PTR gs:[rcx+rdi*2+0x70],dh
    da81:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    da84:	25 73 0a 00 3b       	and    eax,0x3b000a73
    da89:	00 46 6f             	add    BYTE PTR [rsi+0x6f],al
    da8c:	75 6e                	jne    dafc <_IO_stdin_used+0x1afc>
    da8e:	64 20 6f 70          	and    BYTE PTR fs:[rdi+0x70],ch
    da92:	65 72 61             	gs jb  daf6 <_IO_stdin_used+0x1af6>
    da95:	74 6f                	je     db06 <_IO_stdin_used+0x1b06>
    da97:	72 00                	jb     da99 <_IO_stdin_used+0x1a99>
    da99:	61                   	(bad)  
    da9a:	6c                   	ins    BYTE PTR es:[rdi],dx
    da9b:	65 72 74             	gs jb  db12 <_IO_stdin_used+0x1b12>
    da9e:	00 24 68             	add    BYTE PTR [rax+rbp*2],ah
    daa1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    daa2:	6d                   	ins    DWORD PTR es:[rdi],dx
    daa3:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    daa5:	65 74 00             	gs je  daa8 <_IO_stdin_used+0x1aa8>
    daa8:	2d 3e 00 3c 3e       	sub    eax,0x3e3c003e
    daad:	00 24 65 78 74 65 72 	add    BYTE PTR [riz*2+0x72657478],ah
    dab4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dab5:	61                   	(bad)  
    dab6:	6c                   	ins    BYTE PTR es:[rdi],dx
    dab7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dab8:	65 74 00             	gs je  dabb <_IO_stdin_used+0x1abb>
    dabb:	22 3b                	and    bh,BYTE PTR [rbx]
    dabd:	00 6e 61             	add    BYTE PTR [rsi+0x61],ch
    dac0:	6d                   	ins    DWORD PTR es:[rdi],dx
    dac1:	65 3a 22             	cmp    ah,BYTE PTR gs:[rdx]
    dac4:	00 6d 73             	add    BYTE PTR [rbp+0x73],ch
    dac7:	67 3a 22             	cmp    ah,BYTE PTR [edx]
    daca:	00 64 65 70          	add    BYTE PTR [rbp+riz*2+0x70],ah
    dace:	74 68                	je     db38 <_IO_stdin_used+0x1b38>
    dad0:	3a 00                	cmp    al,BYTE PTR [rax]
    dad2:	74 79                	je     db4d <_IO_stdin_used+0x1b4d>
    dad4:	70 65                	jo     db3b <_IO_stdin_used+0x1b3b>
    dad6:	3a 00                	cmp    al,BYTE PTR [rax]
    dad8:	74 61                	je     db3b <_IO_stdin_used+0x1b3b>
    dada:	72 67                	jb     db43 <_IO_stdin_used+0x1b43>
    dadc:	65 74 3a             	gs je  db19 <_IO_stdin_used+0x1b19>
    dadf:	22 00                	and    al,BYTE PTR [rax]
    dae1:	73 65                	jae    db48 <_IO_stdin_used+0x1b48>
    dae3:	76 3a                	jbe    db1f <_IO_stdin_used+0x1b1f>
    dae5:	00 00                	add    BYTE PTR [rax],al
    dae7:	00 52 75             	add    BYTE PTR [rdx+0x75],dl
    daea:	6c                   	ins    BYTE PTR es:[rdi],dx
    daeb:	65 20 73 65          	and    BYTE PTR gs:[rbx+0x65],dh
    daef:	76 65                	jbe    db56 <_IO_stdin_used+0x1b56>
    daf1:	72 69                	jb     db5c <_IO_stdin_used+0x1b5c>
    daf3:	74 79                	je     db6e <_IO_stdin_used+0x1b6e>
    daf5:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    daf8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    daf9:	75 6c                	jne    db67 <_IO_stdin_used+0x1b67>
    dafb:	64 20 62 65          	and    BYTE PTR fs:[rdx+0x65],ah
    daff:	20 3e                	and    BYTE PTR [rsi],bh
    db01:	20 30                	and    BYTE PTR [rax],dh
    db03:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    db06:	64 20 3c 3d 20 31 30 	and    BYTE PTR fs:[rdi*1+0x303120],bh
    db0d:	00 
    db0e:	00 00                	add    BYTE PTR [rax],al
    db10:	52                   	push   rdx
    db11:	75 6c                	jne    db7f <_IO_stdin_used+0x1b7f>
    db13:	65 20 73 65          	and    BYTE PTR gs:[rbx+0x65],dh
    db17:	76 65                	jbe    db7e <_IO_stdin_used+0x1b7e>
    db19:	72 69                	jb     db84 <_IO_stdin_used+0x1b84>
    db1b:	74 79                	je     db96 <_IO_stdin_used+0x1b96>
    db1d:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    db20:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    db21:	75 6c                	jne    db8f <_IO_stdin_used+0x1b8f>
    db23:	64 20 62 65          	and    BYTE PTR fs:[rdx+0x65],ah
    db27:	20 61 20             	and    BYTE PTR [rcx+0x20],ah
    db2a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db2b:	75 6d                	jne    db9a <_IO_stdin_used+0x1b9a>
    db2d:	65 72 69             	gs jb  db99 <_IO_stdin_used+0x1b99>
    db30:	63 20                	movsxd esp,DWORD PTR [rax]
    db32:	76 61                	jbe    db95 <_IO_stdin_used+0x1b95>
    db34:	6c                   	ins    BYTE PTR es:[rdi],dx
    db35:	75 65                	jne    db9c <_IO_stdin_used+0x1b9c>
    db37:	00 69 74             	add    BYTE PTR [rcx+0x74],ch
    db3a:	79 70                	jns    dbac <_IO_stdin_used+0x1bac>
    db3c:	65 3a 00             	cmp    al,BYTE PTR gs:[rax]
    db3f:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    db41:	76 61                	jbe    dba4 <_IO_stdin_used+0x1ba4>
    db43:	6c                   	ins    BYTE PTR es:[rdi],dx
    db44:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    db4b:	20 
    db4c:	74 79                	je     dbc7 <_IO_stdin_used+0x1bc7>
    db4e:	70 65                	jo     dbb5 <_IO_stdin_used+0x1bb5>
    db50:	20 76 61             	and    BYTE PTR [rsi+0x61],dh
    db53:	6c                   	ins    BYTE PTR es:[rdi],dx
    db54:	75 65                	jne    dbbb <_IO_stdin_used+0x1bbb>
    db56:	00 00                	add    BYTE PTR [rax],al
    db58:	25 73 3a 20 69       	and    eax,0x69203a73
    db5d:	74 79                	je     dbd8 <_IO_stdin_used+0x1bd8>
    db5f:	70 65                	jo     dbc6 <_IO_stdin_used+0x1bc6>
    db61:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    db64:	6c                   	ins    BYTE PTR es:[rdi],dx
    db65:	79 20                	jns    db87 <_IO_stdin_used+0x1b87>
    db67:	61                   	(bad)  
    db68:	70 70                	jo     dbda <_IO_stdin_used+0x1bda>
    db6a:	6c                   	ins    BYTE PTR es:[rdi],dx
    db6b:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    db72:	72 75                	jb     dbe9 <_IO_stdin_used+0x1be9>
    db74:	6c                   	ins    BYTE PTR es:[rdi],dx
    db75:	65 73 20             	gs jae db98 <_IO_stdin_used+0x1b98>
    db78:	77 69                	ja     dbe3 <_IO_stdin_used+0x1be3>
    db7a:	74 68                	je     dbe4 <_IO_stdin_used+0x1be4>
    db7c:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    db7f:	4d 50                	rex.WRB push r8
    db81:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    db84:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    db87:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    db88:	74 6f                	je     dbf9 <_IO_stdin_used+0x1bf9>
    db8a:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    db8d:	0a 00                	or     al,BYTE PTR [rax]
    db8f:	69 63 6f 64 65 3a 00 	imul   esp,DWORD PTR [rbx+0x6f],0x3a6564
    db96:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    db98:	76 61                	jbe    dbfb <_IO_stdin_used+0x1bfb>
    db9a:	6c                   	ins    BYTE PTR es:[rdi],dx
    db9b:	69 64 65 20 69 63 6d 	imul   esp,DWORD PTR [rbp+riz*2+0x20],0x706d6369
    dba2:	70 
    dba3:	20 63 6f             	and    BYTE PTR [rbx+0x6f],ah
    dba6:	64 65 20 76 61       	fs and BYTE PTR gs:[rsi+0x61],dh
    dbab:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbac:	75 65                	jne    dc13 <_IO_stdin_used+0x1c13>
    dbae:	00 00                	add    BYTE PTR [rax],al
    dbb0:	69 63 6f 64 65 20 6f 	imul   esp,DWORD PTR [rbx+0x6f],0x6f206564
    dbb7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dbb8:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbb9:	79 20                	jns    dbdb <_IO_stdin_used+0x1bdb>
    dbbb:	61                   	(bad)  
    dbbc:	70 70                	jo     dc2e <_IO_stdin_used+0x1c2e>
    dbbe:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbbf:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dbc6:	72 75                	jb     dc3d <_IO_stdin_used+0x1c3d>
    dbc8:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbc9:	65 73 20             	gs jae dbec <_IO_stdin_used+0x1bec>
    dbcc:	77 69                	ja     dc37 <_IO_stdin_used+0x1c37>
    dbce:	74 68                	je     dc38 <_IO_stdin_used+0x1c38>
    dbd0:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    dbd3:	4d 50                	rex.WRB push r8
    dbd5:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dbd8:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dbdb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dbdc:	74 6f                	je     dc4d <_IO_stdin_used+0x1c4d>
    dbde:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dbe1:	00 69 63             	add    BYTE PTR [rcx+0x63],ch
    dbe4:	6d                   	ins    DWORD PTR es:[rdi],dx
    dbe5:	70 5f                	jo     dc46 <_IO_stdin_used+0x1c46>
    dbe7:	69 64 3a 00 49 6e 76 	imul   esp,DWORD PTR [rdx+rdi*1+0x0],0x61766e49
    dbee:	61 
    dbef:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbf0:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    dbf7:	20 
    dbf8:	69 64 20 76 61 6c 75 	imul   esp,DWORD PTR [rax+riz*1+0x76],0x65756c61
    dbff:	65 
	...
    dc08:	49                   	rex.WB
    dc09:	43                   	rex.XB
    dc0a:	4d 50                	rex.WRB push r8
    dc0c:	20 49 44             	and    BYTE PTR [rcx+0x44],cl
    dc0f:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    dc12:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc13:	79 20                	jns    dc35 <_IO_stdin_used+0x1c35>
    dc15:	61                   	(bad)  
    dc16:	70 70                	jo     dc88 <_IO_stdin_used+0x1c88>
    dc18:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc19:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dc20:	72 75                	jb     dc97 <_IO_stdin_used+0x1c97>
    dc22:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc23:	65 73 20             	gs jae dc46 <_IO_stdin_used+0x1c46>
    dc26:	77 69                	ja     dc91 <_IO_stdin_used+0x1c91>
    dc28:	74 68                	je     dc92 <_IO_stdin_used+0x1c92>
    dc2a:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    dc2d:	4d 50                	rex.WRB push r8
    dc2f:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dc32:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dc35:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dc36:	74 6f                	je     dca7 <_IO_stdin_used+0x1ca7>
    dc38:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dc3b:	00 69 63             	add    BYTE PTR [rcx+0x63],ch
    dc3e:	6d                   	ins    DWORD PTR es:[rdi],dx
    dc3f:	70 5f                	jo     dca0 <_IO_stdin_used+0x1ca0>
    dc41:	73 65                	jae    dca8 <_IO_stdin_used+0x1ca8>
    dc43:	71 3a                	jno    dc7f <_IO_stdin_used+0x1c7f>
    dc45:	00 49 6e             	add    BYTE PTR [rcx+0x6e],cl
    dc48:	76 61                	jbe    dcab <_IO_stdin_used+0x1cab>
    dc4a:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc4b:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    dc52:	20 
    dc53:	73 65                	jae    dcba <_IO_stdin_used+0x1cba>
    dc55:	71 75                	jno    dccc <_IO_stdin_used+0x1ccc>
    dc57:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    dc59:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    dc5c:	76 61                	jbe    dcbf <_IO_stdin_used+0x1cbf>
    dc5e:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc5f:	75 65                	jne    dcc6 <_IO_stdin_used+0x1cc6>
    dc61:	00 74 74 6c          	add    BYTE PTR [rsp+rsi*2+0x6c],dh
    dc65:	3a 00                	cmp    al,BYTE PTR [rax]
    dc67:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    dc69:	76 61                	jbe    dccc <_IO_stdin_used+0x1ccc>
    dc6b:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc6c:	69 64 20 74 74 6c 20 	imul   esp,DWORD PTR [rax+riz*1+0x74],0x76206c74
    dc73:	76 
    dc74:	61                   	(bad)  
    dc75:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc76:	75 65                	jne    dcdd <_IO_stdin_used+0x1cdd>
    dc78:	00 66 6c             	add    BYTE PTR [rsi+0x6c],ah
    dc7b:	61                   	(bad)  
    dc7c:	67 73 3a             	addr32 jae dcb9 <_IO_stdin_used+0x1cb9>
    dc7f:	22 00                	and    al,BYTE PTR [rax]
    dc81:	00 00                	add    BYTE PTR [rax],al
    dc83:	00 00                	add    BYTE PTR [rax],al
    dc85:	00 00                	add    BYTE PTR [rax],al
    dc87:	00 66 6c             	add    BYTE PTR [rsi+0x6c],ah
    dc8a:	61                   	(bad)  
    dc8b:	67 73 20             	addr32 jae dcae <_IO_stdin_used+0x1cae>
    dc8e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dc8f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dc90:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc91:	79 20                	jns    dcb3 <_IO_stdin_used+0x1cb3>
    dc93:	61                   	(bad)  
    dc94:	70 70                	jo     dd06 <_IO_stdin_used+0x1d06>
    dc96:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc97:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dc9e:	72 75                	jb     dd15 <_IO_stdin_used+0x1d15>
    dca0:	6c                   	ins    BYTE PTR es:[rdi],dx
    dca1:	65 73 20             	gs jae dcc4 <_IO_stdin_used+0x1cc4>
    dca4:	77 69                	ja     dd0f <_IO_stdin_used+0x1d0f>
    dca6:	74 68                	je     dd10 <_IO_stdin_used+0x1d10>
    dca8:	20 74 63 70          	and    BYTE PTR [rbx+riz*2+0x70],dh
    dcac:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dcaf:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dcb2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dcb3:	74 6f                	je     dd24 <_IO_stdin_used+0x1d24>
    dcb5:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dcb8:	00 61 63             	add    BYTE PTR [rcx+0x63],ah
    dcbb:	6b 3a 00             	imul   edi,DWORD PTR [rdx],0x0
    dcbe:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    dcc0:	76 61                	jbe    dd23 <_IO_stdin_used+0x1d23>
    dcc2:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcc3:	69 64 20 61 63 6b 20 	imul   esp,DWORD PTR [rax+riz*1+0x61],0x76206b63
    dcca:	76 
    dccb:	61                   	(bad)  
    dccc:	6c                   	ins    BYTE PTR es:[rdi],dx
    dccd:	75 65                	jne    dd34 <_IO_stdin_used+0x1d34>
    dccf:	00 70 63             	add    BYTE PTR [rax+0x63],dh
    dcd2:	72 65                	jb     dd39 <_IO_stdin_used+0x1d39>
    dcd4:	3a 22                	cmp    ah,BYTE PTR [rdx]
    dcd6:	00 00                	add    BYTE PTR [rax],al
    dcd8:	46 61                	rex.RX (bad) 
    dcda:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    dce1:	20 
    dce2:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    dce5:	70 69                	jo     dd50 <_IO_stdin_used+0x1d50>
    dce7:	6c                   	ins    BYTE PTR es:[rdi],dx
    dce8:	65 20 72 65          	and    BYTE PTR gs:[rdx+0x65],dh
    dcec:	67 75 6c             	addr32 jne dd5b <_IO_stdin_used+0x1d5b>
    dcef:	61                   	(bad)  
    dcf0:	72 20                	jb     dd12 <_IO_stdin_used+0x1d12>
    dcf2:	65 78 70             	gs js  dd65 <_IO_stdin_used+0x1d65>
    dcf5:	72 65                	jb     dd5c <_IO_stdin_used+0x1d5c>
    dcf7:	73 73                	jae    dd6c <_IO_stdin_used+0x1d6c>
    dcf9:	69 6f 6e 00 64 73 69 	imul   ebp,DWORD PTR [rdi+0x6e],0x69736400
    dd00:	7a 65                	jp     dd67 <_IO_stdin_used+0x1d67>
    dd02:	3a 00                	cmp    al,BYTE PTR [rax]
    dd04:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd05:	66 66 73 65          	data16 data16 jae dd6e <_IO_stdin_used+0x1d6e>
    dd09:	74 3a                	je     dd45 <_IO_stdin_used+0x1d45>
    dd0b:	00 65 73             	add    BYTE PTR [rbp+0x73],ah
    dd0e:	74 61                	je     dd71 <_IO_stdin_used+0x1d71>
    dd10:	62                   	(bad)  
    dd11:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd12:	69 73 68 65 64 00 25 	imul   esi,DWORD PTR [rbx+0x68],0x25006465
    dd19:	63 00                	movsxd eax,DWORD PTR [rax]
    dd1b:	25 30 32 78 00       	and    eax,0x783230
    dd20:	3e 00 3c 00          	ds add BYTE PTR [rax+rax*1],bh
    dd24:	21 00                	and    DWORD PTR [rax],eax
    dd26:	3c 3d                	cmp    al,0x3d
    dd28:	00 3e                	add    BYTE PTR [rsi],bh
    dd2a:	3d 00 55 6e 73       	cmp    eax,0x736e5500
    dd2f:	75 70                	jne    dda1 <_IO_stdin_used+0x1da1>
    dd31:	70 6f                	jo     dda2 <_IO_stdin_used+0x1da2>
    dd33:	72 74                	jb     dda9 <_IO_stdin_used+0x1da9>
    dd35:	65 64 20 6f 70       	gs and BYTE PTR fs:[rdi+0x70],ch
    dd3a:	65 72 61             	gs jb  dd9e <_IO_stdin_used+0x1d9e>
    dd3d:	74 6f                	je     ddae <_IO_stdin_used+0x1dae>
    dd3f:	72 00                	jb     dd41 <_IO_stdin_used+0x1d41>
    dd41:	00 00                	add    BYTE PTR [rax],al
    dd43:	00 54 cc ff          	add    BYTE PTR [rsp+rcx*8-0x1],dl
    dd47:	ff a6 cc ff ff bf    	jmp    QWORD PTR [rsi-0x40000034]
    dd4d:	cc                   	int3   
    dd4e:	ff                   	(bad)  
    dd4f:	ff 74 cc ff          	push   QWORD PTR [rsp+rcx*8-0x1]
    dd53:	ff 8d cc ff ff d8    	dec    DWORD PTR [rbp-0x27000034]
    dd59:	cc                   	int3   
    dd5a:	ff                   	(bad)  
    dd5b:	ff 2e                	jmp    FWORD PTR [rsi]
    dd5d:	00 25 30 32 78 00    	add    BYTE PTR [rip+0x783230],ah        # 790f93 <_end+0x655f8b>
    dd63:	25 30 32 78 20       	and    eax,0x20783230
    dd68:	2d 2d 20 25 30       	sub    eax,0x3025202d
    dd6d:	32 78 0a             	xor    bh,BYTE PTR [rax+0xa]
	...
    dd78:	73 72                	jae    ddec <_IO_stdin_used+0x1dec>
    dd7a:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    dd7c:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd7d:	75 61                	jne    dde0 <_IO_stdin_used+0x1de0>
    dd7f:	2f                   	(bad)  
    dd80:	73 63                	jae    dde5 <_IO_stdin_used+0x1de5>
    dd82:	72 69                	jb     dded <_IO_stdin_used+0x1ded>
    dd84:	70 74                	jo     ddfa <_IO_stdin_used+0x1dfa>
    dd86:	73 2f                	jae    ddb7 <_IO_stdin_used+0x1db7>
    dd88:	68 65 6c 6c 6f       	push   0x6f6c6c65
    dd8d:	74 65                	je     ddf4 <_IO_stdin_used+0x1df4>
    dd8f:	73 74                	jae    de05 <_IO_stdin_used+0x1e05>
    dd91:	2e 6c                	cs ins BYTE PTR es:[rdi],dx
    dd93:	75 61                	jne    ddf6 <_IO_stdin_used+0x1df6>
    dd95:	00 72 00             	add    BYTE PTR [rdx+0x0],dh
    dd98:	2f                   	(bad)  
    dd99:	65 74 63             	gs je  ddff <_IO_stdin_used+0x1dff>
    dd9c:	2f                   	(bad)  
    dd9d:	76 69                	jbe    de08 <_IO_stdin_used+0x1e08>
    dd9f:	67 69 6c 2f 6c 73 63 	imul   ebp,DWORD PTR [edi+ebp*1+0x6c],0x69726373
    dda6:	72 69 
    dda8:	70 74                	jo     de1e <_IO_stdin_used+0x1e1e>
    ddaa:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    ddae:	66 00 46 61          	data16 add BYTE PTR [rsi+0x61],al
    ddb2:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    ddb9:	20 
    ddba:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    ddbd:	6c                   	ins    BYTE PTR es:[rdi],dx
    ddbe:	65 63 74 20 4c       	movsxd esi,DWORD PTR gs:[rax+riz*1+0x4c]
    ddc3:	75 61                	jne    de26 <_IO_stdin_used+0x1e26>
    ddc5:	20 73 63             	and    BYTE PTR [rbx+0x63],dh
    ddc8:	72 69                	jb     de33 <_IO_stdin_used+0x1e33>
    ddca:	70 74                	jo     de40 <_IO_stdin_used+0x1e40>
    ddcc:	73 3a                	jae    de08 <_IO_stdin_used+0x1e08>
    ddce:	20 2f                	and    BYTE PTR [rdi],ch
    ddd0:	65 74 63             	gs je  de36 <_IO_stdin_used+0x1e36>
    ddd3:	2f                   	(bad)  
    ddd4:	76 69                	jbe    de3f <_IO_stdin_used+0x1e3f>
    ddd6:	67 69 6c 2f 6c 73 63 	imul   ebp,DWORD PTR [edi+ebp*1+0x6c],0x69726373
    dddd:	72 69 
    dddf:	70 74                	jo     de55 <_IO_stdin_used+0x1e55>
    dde1:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    dde5:	66 20 6e 6f          	data16 and BYTE PTR [rsi+0x6f],ch
    dde9:	74 20                	je     de0b <_IO_stdin_used+0x1e0b>
    ddeb:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    dded:	75 6e                	jne    de5d <_IO_stdin_used+0x1e5d>
    ddef:	64 2e 00 2e          	fs add BYTE PTR fs:[rsi],ch
    ddf3:	2a 2e                	sub    ch,BYTE PTR [rsi]
    ddf5:	6c                   	ins    BYTE PTR es:[rdi],dx
    ddf6:	75 61                	jne    de59 <_IO_stdin_used+0x1e59>
    ddf8:	3a 2e                	cmp    ch,BYTE PTR [rsi]
    ddfa:	2a 00                	sub    al,BYTE PTR [rax]
    ddfc:	6c                   	ins    BYTE PTR es:[rdi],dx
    ddfd:	5f                   	pop    rdi
    ddfe:	73 63                	jae    de63 <_IO_stdin_used+0x1e63>
    de00:	72 69                	jb     de6b <_IO_stdin_used+0x1e6b>
    de02:	70 74                	jo     de78 <_IO_stdin_used+0x1e78>
    de04:	5f                   	pop    rdi
    de05:	72 6f                	jb     de76 <_IO_stdin_used+0x1e76>
    de07:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    de08:	74 3d                	je     de47 <_IO_stdin_used+0x1e47>
    de0a:	00 0a                	add    BYTE PTR [rdx],cl
    de0c:	00 00                	add    BYTE PTR [rax],al
    de0e:	00 00                	add    BYTE PTR [rax],al
    de10:	49 50                	rex.WB push r8
    de12:	76 36                	jbe    de4a <_IO_stdin_used+0x1e4a>
    de14:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2dfe8d <_end+0x3e1a4e85>
    de1a:	20 25 73 20 50 72    	and    BYTE PTR [rip+0x72502073],ah        # 7250fe93 <_end+0x723d4e8b>
    de20:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    de21:	74 6f                	je     de92 <_IO_stdin_used+0x1e92>
    de23:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    de26:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    de29:	6d                   	ins    DWORD PTR es:[rdi],dx
    de2a:	62                   	(bad)  
    de2b:	65 72 20             	gs jb  de4e <_IO_stdin_used+0x1e4e>
    de2e:	3d 20 25 64 0a       	cmp    eax,0xa642520
    de33:	00 00                	add    BYTE PTR [rax],al
    de35:	00 00                	add    BYTE PTR [rax],al
    de37:	00 53 65             	add    BYTE PTR [rbx+0x65],dl
    de3a:	67 6d                	ins    DWORD PTR es:[edi],dx
    de3c:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    de3e:	74 61                	je     dea1 <_IO_stdin_used+0x1ea1>
    de40:	74 69                	je     deab <_IO_stdin_used+0x1eab>
    de42:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    de43:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    de44:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    de47:	75 6c                	jne    deb5 <_IO_stdin_used+0x1eb5>
    de49:	74 20                	je     de6b <_IO_stdin_used+0x1e6b>
    de4b:	61                   	(bad)  
    de4c:	74 20                	je     de6e <_IO_stdin_used+0x1e6e>
    de4e:	25 73 3a 20 61       	and    eax,0x61203a73
    de53:	70 70                	jo     dec5 <_IO_stdin_used+0x1ec5>
    de55:	6c                   	ins    BYTE PTR es:[rdi],dx
    de56:	69 63 61 74 69 6f 6e 	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
    de5d:	20 63 72             	and    BYTE PTR [rbx+0x72],ah
    de60:	61                   	(bad)  
    de61:	73 68                	jae    decb <_IO_stdin_used+0x1ecb>
    de63:	65 64 0a 00          	gs or  al,BYTE PTR fs:[rax]
    de67:	46 75 6e             	rex.RX jne ded8 <_IO_stdin_used+0x1ed8>
    de6a:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    de6e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    de6f:	20 62 61             	and    BYTE PTR [rdx+0x61],ah
    de72:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
    de75:	72 61                	jb     ded8 <_IO_stdin_used+0x1ed8>
    de77:	63 65 3a             	movsxd esp,DWORD PTR [rbp+0x3a]
    de7a:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
    de7e:	00 25 73 0a 00 25    	add    BYTE PTR [rip+0x25000a73],ah        # 2500e8f7 <_end+0x24ed38ef>
    de84:	73 28                	jae    deae <_IO_stdin_used+0x1eae>
    de86:	2e 2f                	cs (bad) 
    de88:	76 69                	jbe    def3 <_IO_stdin_used+0x1ef3>
    de8a:	67 69 6c 2e 65 78 65 	imul   ebp,DWORD PTR [esi+ebp*1+0x65],0x2b286578
    de91:	28 2b 
    de93:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    de96:	30 32                	xor    BYTE PTR [rdx],dh
    de98:	78 29                	js     dec3 <_IO_stdin_used+0x1ec3>
    de9a:	29 0a                	sub    DWORD PTR [rdx],ecx
    de9c:	00 00                	add    BYTE PTR [rax],al
    de9e:	00 00                	add    BYTE PTR [rax],al
    dea0:	55                   	push   rbp
    dea1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dea2:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    dea6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dea7:	20 66 75             	and    BYTE PTR [rsi+0x75],ah
    deaa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    deab:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    deaf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    deb0:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    deb3:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
    deb6:	6d                   	ins    DWORD PTR es:[rdi],dx
    deb7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    deb8:	72 79                	jb     df33 <_IO_stdin_used+0x1f33>
    deba:	20 6f 66             	and    BYTE PTR [rdi+0x66],ch
    debd:	66 73 65             	data16 jae df25 <_IO_stdin_used+0x1f25>
    dec0:	74 20                	je     dee2 <_IO_stdin_used+0x1ee2>
    dec2:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    dec5:	30 32                	xor    BYTE PTR [rdx],dh
    dec7:	78 0a                	js     ded3 <_IO_stdin_used+0x1ed3>
    dec9:	00 52 65             	add    BYTE PTR [rdx+0x65],dl
    decc:	67 69 73 74 65 72 20 	imul   esi,DWORD PTR [ebx+0x74],0x44207265
    ded3:	44 
    ded4:	75 6d                	jne    df43 <_IO_stdin_used+0x1f43>
    ded6:	70 3a                	jo     df12 <_IO_stdin_used+0x1f12>
    ded8:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    dedb:	41 58                	pop    r8
    dedd:	5d                   	pop    rbp
    dede:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790f04 <_end+0x25655efc>
    dee4:	30 32                	xor    BYTE PTR [rdx],dh
    dee6:	78 0a                	js     def2 <_IO_stdin_used+0x1ef2>
    dee8:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    deeb:	42 58                	rex.X pop rax
    deed:	5d                   	pop    rbp
    deee:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790f14 <_end+0x25655f0c>
    def4:	30 32                	xor    BYTE PTR [rdx],dh
    def6:	78 0a                	js     df02 <_IO_stdin_used+0x1f02>
    def8:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    defb:	43 58                	rex.XB pop r8
    defd:	5d                   	pop    rbp
    defe:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790f24 <_end+0x25655f1c>
    df04:	30 32                	xor    BYTE PTR [rdx],dh
    df06:	78 0a                	js     df12 <_IO_stdin_used+0x1f12>
    df08:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    df0b:	44 58                	rex.R pop rax
    df0d:	5d                   	pop    rbp
    df0e:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790f34 <_end+0x25655f2c>
    df14:	30 32                	xor    BYTE PTR [rdx],dh
    df16:	78 0a                	js     df22 <_IO_stdin_used+0x1f22>
    df18:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    df1b:	53                   	push   rbx
    df1c:	50                   	push   rax
    df1d:	5d                   	pop    rbp
    df1e:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790f44 <_end+0x25655f3c>
    df24:	30 32                	xor    BYTE PTR [rdx],dh
    df26:	78 0a                	js     df32 <_IO_stdin_used+0x1f32>
    df28:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    df2b:	42 50                	rex.X push rax
    df2d:	5d                   	pop    rbp
    df2e:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790f54 <_end+0x25655f4c>
    df34:	30 32                	xor    BYTE PTR [rdx],dh
    df36:	78 0a                	js     df42 <_IO_stdin_used+0x1f42>
	...
    df40:	25 73 20 5b 73       	and    eax,0x735b2073
    df45:	74 61                	je     dfa8 <_IO_stdin_used+0x1fa8>
    df47:	72 74                	jb     dfbd <_IO_stdin_used+0x1fbd>
    df49:	20 25 64 5d 20 5b    	and    BYTE PTR [rip+0x5b205d64],ah        # 5b213cb3 <_end+0x5b0d8cab>
    df4f:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    df51:	64 20 25 64 5d 0a 00 	and    BYTE PTR fs:[rip+0xa5d64],ah        # b3cbc <rules+0xa29dc>
    df58:	72 00                	jb     df5a <_IO_stdin_used+0x1f5a>
    df5a:	2f                   	(bad)  
    df5b:	75 73                	jne    dfd0 <_IO_stdin_used+0x1fd0>
    df5d:	72 2f                	jb     df8e <_IO_stdin_used+0x1f8e>
    df5f:	73 68                	jae    dfc9 <_IO_stdin_used+0x1fc9>
    df61:	61                   	(bad)  
    df62:	72 65                	jb     dfc9 <_IO_stdin_used+0x1fc9>
    df64:	2f                   	(bad)  
    df65:	76 69                	jbe    dfd0 <_IO_stdin_used+0x1fd0>
    df67:	67 69 6c 2f 6d 65 6d 	imul   ebp,DWORD PTR [edi+ebp*1+0x6d],0x616d6d65
    df6e:	6d 61 
    df70:	70 2e                	jo     dfa0 <_IO_stdin_used+0x1fa0>
    df72:	74 78                	je     dfec <__GNU_EH_FRAME_HDR+0x8>
    df74:	74 00                	je     df76 <_IO_stdin_used+0x1f76>
    df76:	00 00                	add    BYTE PTR [rax],al
    df78:	46                   	rex.RX
    df79:	41 54                	push   r12
    df7b:	41                   	rex.B
    df7c:	4c 20 45 52          	rex.WR and BYTE PTR [rbp+0x52],r8b
    df80:	52                   	push   rdx
    df81:	4f 52                	rex.WRXB push r10
    df83:	3a 20                	cmp    ah,BYTE PTR [rax]
    df85:	6d                   	ins    DWORD PTR es:[rdi],dx
    df86:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    df88:	6d                   	ins    DWORD PTR es:[rdi],dx
    df89:	61                   	(bad)  
    df8a:	70 2e                	jo     dfba <_IO_stdin_used+0x1fba>
    df8c:	74 78                	je     e006 <__GNU_EH_FRAME_HDR+0x22>
    df8e:	74 20                	je     dfb0 <_IO_stdin_used+0x1fb0>
    df90:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df91:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    df92:	74 20                	je     dfb4 <_IO_stdin_used+0x1fb4>
    df94:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    df96:	75 6e                	jne    e006 <__GNU_EH_FRAME_HDR+0x22>
    df98:	64 2e 50             	fs cs push rax
    df9b:	6c                   	ins    BYTE PTR es:[rdi],dx
    df9c:	65 61                	gs (bad) 
    df9e:	73 65                	jae    e005 <__GNU_EH_FRAME_HDR+0x21>
    dfa0:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    dfa3:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    dfa6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dfa7:	20 67 65             	and    BYTE PTR [rdi+0x65],ah
    dfaa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dfab:	5f                   	pop    rdi
    dfac:	6d                   	ins    DWORD PTR es:[rdi],dx
    dfad:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    dfaf:	5f                   	pop    rdi
    dfb0:	6d                   	ins    DWORD PTR es:[rdi],dx
    dfb1:	61                   	(bad)  
    dfb2:	70 2e                	jo     dfe2 <_IO_stdin_used+0x1fe2>
    dfb4:	70 79                	jo     e02f <__GNU_EH_FRAME_HDR+0x4b>
    dfb6:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    dfb9:	64 20 63 6f          	and    BYTE PTR fs:[rbx+0x6f],ah
    dfbd:	70 79                	jo     e038 <__GNU_EH_FRAME_HDR+0x54>
    dfbf:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
    dfc2:	6d                   	ins    DWORD PTR es:[rdi],dx
    dfc3:	6d                   	ins    DWORD PTR es:[rdi],dx
    dfc4:	61                   	(bad)  
    dfc5:	70 2e                	jo     dff5 <__GNU_EH_FRAME_HDR+0x11>
    dfc7:	74 78                	je     e041 <__GNU_EH_FRAME_HDR+0x5d>
    dfc9:	74 20                	je     dfeb <__GNU_EH_FRAME_HDR+0x7>
    dfcb:	74 6f                	je     e03c <__GNU_EH_FRAME_HDR+0x58>
    dfcd:	20 2f                	and    BYTE PTR [rdi],ch
    dfcf:	75 73                	jne    e044 <__GNU_EH_FRAME_HDR+0x60>
    dfd1:	72 2f                	jb     e002 <__GNU_EH_FRAME_HDR+0x1e>
    dfd3:	73 68                	jae    e03d <__GNU_EH_FRAME_HDR+0x59>
    dfd5:	61                   	(bad)  
    dfd6:	72 65                	jb     e03d <__GNU_EH_FRAME_HDR+0x59>
    dfd8:	2f                   	(bad)  
    dfd9:	76 69                	jbe    e044 <__GNU_EH_FRAME_HDR+0x60>
    dfdb:	67                   	addr32
    dfdc:	69                   	.byte 0x69
    dfdd:	6c                   	ins    BYTE PTR es:[rdi],dx
    dfde:	00 0a                	add    BYTE PTR [rdx],cl
    dfe0:	00 20                	add    BYTE PTR [rax],ah
	...

Disassembly of section .eh_frame_hdr:

000000000000dfe4 <__GNU_EH_FRAME_HDR>:
    dfe4:	01 1b                	add    DWORD PTR [rbx],ebx
    dfe6:	03 3b                	add    edi,DWORD PTR [rbx]
    dfe8:	90                   	nop
    dfe9:	03 00                	add    eax,DWORD PTR [rax]
    dfeb:	00 71 00             	add    BYTE PTR [rcx+0x0],dh
    dfee:	00 00                	add    BYTE PTR [rax],al
    dff0:	3c 40                	cmp    al,0x40
    dff2:	ff                   	(bad)  
    dff3:	ff c4                	inc    esp
    dff5:	03 00                	add    eax,DWORD PTR [rax]
    dff7:	00 6c 44 ff          	add    BYTE PTR [rsp+rax*2-0x1],ch
    dffb:	ff                   	(bad)  
    dffc:	ec                   	in     al,dx
    dffd:	03 00                	add    eax,DWORD PTR [rax]
    dfff:	00 7c 44 ff          	add    BYTE PTR [rsp+rax*2-0x1],bh
    e003:	ff 04 04             	inc    DWORD PTR [rsp+rax*1]
    e006:	00 00                	add    BYTE PTR [rax],al
    e008:	9c                   	pushf  
    e009:	48 ff                	rex.W (bad) 
    e00b:	ff ac 03 00 00 85 49 	jmp    FWORD PTR [rbx+rax*1+0x49850000]
    e012:	ff                   	(bad)  
    e013:	ff 1c 04             	call   FWORD PTR [rsp+rax*1]
    e016:	00 00                	add    BYTE PTR [rax],al
    e018:	bf 49 ff ff 3c       	mov    edi,0x3cffff49
    e01d:	04 00                	add    al,0x0
    e01f:	00 0b                	add    BYTE PTR [rbx],cl
    e021:	4b ff                	rex.WXB (bad) 
    e023:	ff 64 04 00          	jmp    QWORD PTR [rsp+rax*1+0x0]
    e027:	00 ff                	add    bh,bh
    e029:	4d ff                	rex.WRB (bad) 
    e02b:	ff 84 04 00 00 12 4f 	inc    DWORD PTR [rsp+rax*1+0x4f120000]
    e032:	ff                   	(bad)  
    e033:	ff a4 04 00 00 c0 4f 	jmp    QWORD PTR [rsp+rax*1+0x4fc00000]
    e03a:	ff                   	(bad)  
    e03b:	ff c4                	inc    esp
    e03d:	04 00                	add    al,0x0
    e03f:	00 66 50             	add    BYTE PTR [rsi+0x50],ah
    e042:	ff                   	(bad)  
    e043:	ff e4                	jmp    rsp
    e045:	04 00                	add    al,0x0
    e047:	00 fb                	add    bl,bh
    e049:	50                   	push   rax
    e04a:	ff                   	(bad)  
    e04b:	ff 04 05 00 00 8f 51 	inc    DWORD PTR [rax*1+0x518f0000]
    e052:	ff                   	(bad)  
    e053:	ff 24 05 00 00 5b 53 	jmp    QWORD PTR [rax*1+0x535b0000]
    e05a:	ff                   	(bad)  
    e05b:	ff 50 05             	call   QWORD PTR [rax+0x5]
    e05e:	00 00                	add    BYTE PTR [rax],al
    e060:	2f                   	(bad)  
    e061:	54                   	push   rsp
    e062:	ff                   	(bad)  
    e063:	ff 74 05 00          	push   QWORD PTR [rbp+rax*1+0x0]
    e067:	00 f6                	add    dh,dh
    e069:	54                   	push   rsp
    e06a:	ff                   	(bad)  
    e06b:	ff 98 05 00 00 49    	call   FWORD PTR [rax+0x49000005]
    e071:	55                   	push   rbp
    e072:	ff                   	(bad)  
    e073:	ff                   	(bad)  
    e074:	b8 05 00 00 7c       	mov    eax,0x7c000005
    e079:	55                   	push   rbp
    e07a:	ff                   	(bad)  
    e07b:	ff                   	(bad)  
    e07c:	d8 05 00 00 9d 55    	fadd   DWORD PTR [rip+0x559d0000]        # 559de082 <_end+0x558a307a>
    e082:	ff                   	(bad)  
    e083:	ff                   	(bad)  
    e084:	f8                   	clc    
    e085:	05 00 00 05 56       	add    eax,0x56050000
    e08a:	ff                   	(bad)  
    e08b:	ff 1c 06             	call   FWORD PTR [rsi+rax*1]
    e08e:	00 00                	add    BYTE PTR [rax],al
    e090:	2a 5a ff             	sub    bl,BYTE PTR [rdx-0x1]
    e093:	ff                   	(bad)  
    e094:	3c 06                	cmp    al,0x6
    e096:	00 00                	add    BYTE PTR [rax],al
    e098:	87 5b ff             	xchg   DWORD PTR [rbx-0x1],ebx
    e09b:	ff 5c 06 00          	call   FWORD PTR [rsi+rax*1+0x0]
    e09f:	00 cb                	add    bl,cl
    e0a1:	63 ff                	movsxd edi,edi
    e0a3:	ff                   	(bad)  
    e0a4:	7c 06                	jl     e0ac <__GNU_EH_FRAME_HDR+0xc8>
    e0a6:	00 00                	add    BYTE PTR [rax],al
    e0a8:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    e0aa:	ff                   	(bad)  
    e0ab:	ff a4 06 00 00 a1 6d 	jmp    QWORD PTR [rsi+rax*1+0x6da10000]
    e0b2:	ff                   	(bad)  
    e0b3:	ff c4                	inc    esp
    e0b5:	06                   	(bad)  
    e0b6:	00 00                	add    BYTE PTR [rax],al
    e0b8:	a0 6e ff ff e4 06 00 	movabs al,ds:0x8c000006e4ffff6e
    e0bf:	00 8c 
    e0c1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e0c2:	ff                   	(bad)  
    e0c3:	ff 04 07             	inc    DWORD PTR [rdi+rax*1]
    e0c6:	00 00                	add    BYTE PTR [rax],al
    e0c8:	3e 73 ff             	ds jae e0ca <__GNU_EH_FRAME_HDR+0xe6>
    e0cb:	ff 24 07             	jmp    QWORD PTR [rdi+rax*1]
    e0ce:	00 00                	add    BYTE PTR [rax],al
    e0d0:	c1 73 ff ff          	shl    DWORD PTR [rbx-0x1],0xff
    e0d4:	44 07                	rex.R (bad) 
    e0d6:	00 00                	add    BYTE PTR [rax],al
    e0d8:	eb 75                	jmp    e14f <__GNU_EH_FRAME_HDR+0x16b>
    e0da:	ff                   	(bad)  
    e0db:	ff 6c 07 00          	jmp    FWORD PTR [rdi+rax*1+0x0]
    e0df:	00 28                	add    BYTE PTR [rax],ch
    e0e1:	78 ff                	js     e0e2 <__GNU_EH_FRAME_HDR+0xfe>
    e0e3:	ff 90 07 00 00 8e    	call   QWORD PTR [rax-0x71fffff9]
    e0e9:	78 ff                	js     e0ea <__GNU_EH_FRAME_HDR+0x106>
    e0eb:	ff b0 07 00 00 a5    	push   QWORD PTR [rax-0x5afffff9]
    e0f1:	78 ff                	js     e0f2 <__GNU_EH_FRAME_HDR+0x10e>
    e0f3:	ff d0                	call   rax
    e0f5:	07                   	(bad)  
    e0f6:	00 00                	add    BYTE PTR [rax],al
    e0f8:	f6 78 ff             	idiv   BYTE PTR [rax-0x1]
    e0fb:	ff f4                	push   rsp
    e0fd:	07                   	(bad)  
    e0fe:	00 00                	add    BYTE PTR [rax],al
    e100:	33 7f ff             	xor    edi,DWORD PTR [rdi-0x1]
    e103:	ff 18                	call   FWORD PTR [rax]
    e105:	08 00                	or     BYTE PTR [rax],al
    e107:	00 4d 7f             	add    BYTE PTR [rbp+0x7f],cl
    e10a:	ff                   	(bad)  
    e10b:	ff                   	(bad)  
    e10c:	38 08                	cmp    BYTE PTR [rax],cl
    e10e:	00 00                	add    BYTE PTR [rax],al
    e110:	76 7f                	jbe    e191 <__GNU_EH_FRAME_HDR+0x1ad>
    e112:	ff                   	(bad)  
    e113:	ff 58 08             	call   FWORD PTR [rax+0x8]
    e116:	00 00                	add    BYTE PTR [rax],al
    e118:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    e119:	7f ff                	jg     e11a <__GNU_EH_FRAME_HDR+0x136>
    e11b:	ff                   	(bad)  
    e11c:	78 08                	js     e126 <__GNU_EH_FRAME_HDR+0x142>
    e11e:	00 00                	add    BYTE PTR [rax],al
    e120:	dd 7f ff             	fnstsw WORD PTR [rdi-0x1]
    e123:	ff 94 08 00 00 22 81 	call   QWORD PTR [rax+rcx*1-0x7ede0000]
    e12a:	ff                   	(bad)  
    e12b:	ff b4 08 00 00 82 82 	push   QWORD PTR [rax+rcx*1-0x7d7e0000]
    e132:	ff                   	(bad)  
    e133:	ff d4                	call   rsp
    e135:	08 00                	or     BYTE PTR [rax],al
    e137:	00 e3                	add    bl,ah
    e139:	82                   	(bad)  
    e13a:	ff                   	(bad)  
    e13b:	ff f4                	push   rsp
    e13d:	08 00                	or     BYTE PTR [rax],al
    e13f:	00 a1 83 ff ff 14    	add    BYTE PTR [rcx+0x14ffff83],ah
    e145:	09 00                	or     DWORD PTR [rax],eax
    e147:	00 f3                	add    bl,dh
    e149:	85 ff                	test   edi,edi
    e14b:	ff 34 09             	push   QWORD PTR [rcx+rcx*1]
    e14e:	00 00                	add    BYTE PTR [rax],al
    e150:	eb 87                	jmp    e0d9 <__GNU_EH_FRAME_HDR+0xf5>
    e152:	ff                   	(bad)  
    e153:	ff 54 09 00          	call   QWORD PTR [rcx+rcx*1+0x0]
    e157:	00 45 88             	add    BYTE PTR [rbp-0x78],al
    e15a:	ff                   	(bad)  
    e15b:	ff 74 09 00          	push   QWORD PTR [rcx+rcx*1+0x0]
    e15f:	00 54 8b ff          	add    BYTE PTR [rbx+rcx*4-0x1],dl
    e163:	ff 94 09 00 00 a5 8f 	call   QWORD PTR [rcx+rcx*1-0x705b0000]
    e16a:	ff                   	(bad)  
    e16b:	ff b4 09 00 00 cf 8f 	push   QWORD PTR [rcx+rcx*1-0x70310000]
    e172:	ff                   	(bad)  
    e173:	ff d0                	call   rax
    e175:	09 00                	or     DWORD PTR [rax],eax
    e177:	00 81 91 ff ff f4    	add    BYTE PTR [rcx-0xb00006f],al
    e17d:	09 00                	or     DWORD PTR [rax],eax
    e17f:	00 98 91 ff ff 14    	add    BYTE PTR [rax+0x14ffff91],bl
    e185:	0a 00                	or     al,BYTE PTR [rax]
    e187:	00 e7                	add    bh,ah
    e189:	91                   	xchg   ecx,eax
    e18a:	ff                   	(bad)  
    e18b:	ff 34 0a             	push   QWORD PTR [rdx+rcx*1]
    e18e:	00 00                	add    BYTE PTR [rax],al
    e190:	34 92                	xor    al,0x92
    e192:	ff                   	(bad)  
    e193:	ff 54 0a 00          	call   QWORD PTR [rdx+rcx*1+0x0]
    e197:	00 ab 93 ff ff 70    	add    BYTE PTR [rbx+0x70ffff93],ch
    e19d:	0a 00                	or     al,BYTE PTR [rax]
    e19f:	00 34 94             	add    BYTE PTR [rsp+rdx*4],dh
    e1a2:	ff                   	(bad)  
    e1a3:	ff 94 0a 00 00 22 96 	call   QWORD PTR [rdx+rcx*1-0x69de0000]
    e1aa:	ff                   	(bad)  
    e1ab:	ff b4 0a 00 00 0a 98 	push   QWORD PTR [rdx+rcx*1-0x67f60000]
    e1b2:	ff                   	(bad)  
    e1b3:	ff d4                	call   rsp
    e1b5:	0a 00                	or     al,BYTE PTR [rax]
    e1b7:	00 76 98             	add    BYTE PTR [rsi-0x68],dh
    e1ba:	ff                   	(bad)  
    e1bb:	ff f4                	push   rsp
    e1bd:	0a 00                	or     al,BYTE PTR [rax]
    e1bf:	00 e8                	add    al,ch
    e1c1:	98                   	cwde   
    e1c2:	ff                   	(bad)  
    e1c3:	ff 14 0b             	call   QWORD PTR [rbx+rcx*1]
    e1c6:	00 00                	add    BYTE PTR [rax],al
    e1c8:	f9                   	stc    
    e1c9:	99                   	cdq    
    e1ca:	ff                   	(bad)  
    e1cb:	ff 34 0b             	push   QWORD PTR [rbx+rcx*1]
    e1ce:	00 00                	add    BYTE PTR [rax],al
    e1d0:	55                   	push   rbp
    e1d1:	9a                   	(bad)  
    e1d2:	ff                   	(bad)  
    e1d3:	ff 54 0b 00          	call   QWORD PTR [rbx+rcx*1+0x0]
    e1d7:	00 93 9a ff ff 74    	add    BYTE PTR [rbx+0x74ffff9a],dl
    e1dd:	0b 00                	or     eax,DWORD PTR [rax]
    e1df:	00 19                	add    BYTE PTR [rcx],bl
    e1e1:	9b                   	fwait
    e1e2:	ff                   	(bad)  
    e1e3:	ff 94 0b 00 00 f8 9b 	call   QWORD PTR [rbx+rcx*1-0x64080000]
    e1ea:	ff                   	(bad)  
    e1eb:	ff b4 0b 00 00 6c 9c 	push   QWORD PTR [rbx+rcx*1-0x63940000]
    e1f2:	ff                   	(bad)  
    e1f3:	ff d4                	call   rsp
    e1f5:	0b 00                	or     eax,DWORD PTR [rax]
    e1f7:	00 08                	add    BYTE PTR [rax],cl
    e1f9:	9d                   	popf   
    e1fa:	ff                   	(bad)  
    e1fb:	ff f4                	push   rsp
    e1fd:	0b 00                	or     eax,DWORD PTR [rax]
    e1ff:	00 31                	add    BYTE PTR [rcx],dh
    e201:	9d                   	popf   
    e202:	ff                   	(bad)  
    e203:	ff 14 0c             	call   QWORD PTR [rsp+rcx*1]
    e206:	00 00                	add    BYTE PTR [rax],al
    e208:	5a                   	pop    rdx
    e209:	9d                   	popf   
    e20a:	ff                   	(bad)  
    e20b:	ff 34 0c             	push   QWORD PTR [rsp+rcx*1]
    e20e:	00 00                	add    BYTE PTR [rax],al
    e210:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    e211:	9e                   	sahf   
    e212:	ff                   	(bad)  
    e213:	ff 5c 0c 00          	call   FWORD PTR [rsp+rcx*1+0x0]
    e217:	00 cb                	add    bl,cl
    e219:	9e                   	sahf   
    e21a:	ff                   	(bad)  
    e21b:	ff                   	(bad)  
    e21c:	7c 0c                	jl     e22a <__GNU_EH_FRAME_HDR+0x246>
    e21e:	00 00                	add    BYTE PTR [rax],al
    e220:	2e a0 ff ff 9c 0c 00 	cs movabs al,ds:0xa23c00000c9cffff
    e227:	00 3c a2 
    e22a:	ff                   	(bad)  
    e22b:	ff cc                	dec    esp
    e22d:	0c 00                	or     al,0x0
    e22f:	00 ee                	add    dh,ch
    e231:	a2 ff ff ec 0c 00 00 	movabs ds:0xa39300000cecffff,al
    e238:	93 a3 
    e23a:	ff                   	(bad)  
    e23b:	ff 0c 0d 00 00 27 a4 	dec    DWORD PTR [rcx*1-0x5bd90000]
    e242:	ff                   	(bad)  
    e243:	ff 34 0d 00 00 fc a4 	push   QWORD PTR [rcx*1-0x5b040000]
    e24a:	ff                   	(bad)  
    e24b:	ff 54 0d 00          	call   QWORD PTR [rbp+rcx*1+0x0]
    e24f:	00 db                	add    bl,bl
    e251:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    e252:	ff                   	(bad)  
    e253:	ff 74 0d 00          	push   QWORD PTR [rbp+rcx*1+0x0]
    e257:	00 58 a6             	add    BYTE PTR [rax-0x5a],bl
    e25a:	ff                   	(bad)  
    e25b:	ff 94 0d 00 00 8e a7 	call   QWORD PTR [rbp+rcx*1-0x58720000]
    e262:	ff                   	(bad)  
    e263:	ff b4 0d 00 00 0c a8 	push   QWORD PTR [rbp+rcx*1-0x57f40000]
    e26a:	ff                   	(bad)  
    e26b:	ff d4                	call   rsp
    e26d:	0d 00 00 36 aa       	or     eax,0xaa360000
    e272:	ff                   	(bad)  
    e273:	ff f4                	push   rsp
    e275:	0d 00 00 f9 aa       	or     eax,0xaaf90000
    e27a:	ff                   	(bad)  
    e27b:	ff 14 0e             	call   QWORD PTR [rsi+rcx*1]
    e27e:	00 00                	add    BYTE PTR [rax],al
    e280:	94                   	xchg   esp,eax
    e281:	ac                   	lods   al,BYTE PTR ds:[rsi]
    e282:	ff                   	(bad)  
    e283:	ff 34 0e             	push   QWORD PTR [rsi+rcx*1]
    e286:	00 00                	add    BYTE PTR [rax],al
    e288:	a1 ad ff ff 54 0e 00 	movabs eax,ds:0x700000e54ffffad
    e28f:	00 07 
    e291:	ae                   	scas   al,BYTE PTR es:[rdi]
    e292:	ff                   	(bad)  
    e293:	ff 74 0e 00          	push   QWORD PTR [rsi+rcx*1+0x0]
    e297:	00 7c ae ff          	add    BYTE PTR [rsi+rbp*4-0x1],bh
    e29b:	ff 94 0e 00 00 57 af 	call   QWORD PTR [rsi+rcx*1-0x50a90000]
    e2a2:	ff                   	(bad)  
    e2a3:	ff b4 0e 00 00 c9 b0 	push   QWORD PTR [rsi+rcx*1-0x4f370000]
    e2aa:	ff                   	(bad)  
    e2ab:	ff d4                	call   rsp
    e2ad:	0e                   	(bad)  
    e2ae:	00 00                	add    BYTE PTR [rax],al
    e2b0:	35 b1 ff ff f4       	xor    eax,0xf4ffffb1
    e2b5:	0e                   	(bad)  
    e2b6:	00 00                	add    BYTE PTR [rax],al
    e2b8:	b5 b1                	mov    ch,0xb1
    e2ba:	ff                   	(bad)  
    e2bb:	ff 14 0f             	call   QWORD PTR [rdi+rcx*1]
    e2be:	00 00                	add    BYTE PTR [rax],al
    e2c0:	cb                   	retf   
    e2c1:	b1 ff                	mov    cl,0xff
    e2c3:	ff 34 0f             	push   QWORD PTR [rdi+rcx*1]
    e2c6:	00 00                	add    BYTE PTR [rax],al
    e2c8:	05 b3 ff ff 58       	add    eax,0x58ffffb3
    e2cd:	0f 00 00             	sldt   WORD PTR [rax]
    e2d0:	69 b3 ff ff 78 0f 00 	imul   esi,DWORD PTR [rbx+0xf78ffff],0xb3bc0000
    e2d7:	00 bc b3 
    e2da:	ff                   	(bad)  
    e2db:	ff 98 0f 00 00 6d    	call   FWORD PTR [rax+0x6d00000f]
    e2e1:	b4 ff                	mov    ah,0xff
    e2e3:	ff                   	(bad)  
    e2e4:	b8 0f 00 00 38       	mov    eax,0x3800000f
    e2e9:	b5 ff                	mov    ch,0xff
    e2eb:	ff                   	(bad)  
    e2ec:	d8 0f                	fmul   DWORD PTR [rdi]
    e2ee:	00 00                	add    BYTE PTR [rax],al
    e2f0:	8d b5 ff ff f8 0f    	lea    esi,[rbp+0xff8ffff]
    e2f6:	00 00                	add    BYTE PTR [rax],al
    e2f8:	bd b5 ff ff 18       	mov    ebp,0x18ffffb5
    e2fd:	10 00                	adc    BYTE PTR [rax],al
    e2ff:	00 24 b6             	add    BYTE PTR [rsi+rsi*4],ah
    e302:	ff                   	(bad)  
    e303:	ff                   	(bad)  
    e304:	38 10                	cmp    BYTE PTR [rax],dl
    e306:	00 00                	add    BYTE PTR [rax],al
    e308:	30 c5                	xor    ch,al
    e30a:	ff                   	(bad)  
    e30b:	ff 5c 10 00          	call   FWORD PTR [rax+rdx*1+0x0]
    e30f:	00 76 c5             	add    BYTE PTR [rsi-0x3b],dh
    e312:	ff                   	(bad)  
    e313:	ff                   	(bad)  
    e314:	7c 10                	jl     e326 <__GNU_EH_FRAME_HDR+0x342>
    e316:	00 00                	add    BYTE PTR [rax],al
    e318:	b1 c7                	mov    cl,0xc7
    e31a:	ff                   	(bad)  
    e31b:	ff a4 10 00 00 56 c9 	jmp    QWORD PTR [rax+rdx*1-0x36aa0000]
    e322:	ff                   	(bad)  
    e323:	ff c4                	inc    esp
    e325:	10 00                	adc    BYTE PTR [rax],al
    e327:	00 68 ca             	add    BYTE PTR [rax-0x36],ch
    e32a:	ff                   	(bad)  
    e32b:	ff e4                	jmp    rsp
    e32d:	10 00                	adc    BYTE PTR [rax],al
    e32f:	00 24 cb             	add    BYTE PTR [rbx+rcx*8],ah
    e332:	ff                   	(bad)  
    e333:	ff 0c 11             	dec    DWORD PTR [rcx+rdx*1]
    e336:	00 00                	add    BYTE PTR [rax],al
    e338:	bf cc ff ff 34       	mov    edi,0x34ffffcc
    e33d:	11 00                	adc    DWORD PTR [rax],eax
    e33f:	00 64 cd ff          	add    BYTE PTR [rbp+rcx*8-0x1],ah
    e343:	ff 54 11 00          	call   QWORD PTR [rcx+rdx*1+0x0]
    e347:	00 a7 ce ff ff 74    	add    BYTE PTR [rdi+0x74ffffce],ah
    e34d:	11 00                	adc    DWORD PTR [rax],eax
    e34f:	00 9a cf ff ff 94    	add    BYTE PTR [rdx-0x6b000031],bl
    e355:	11 00                	adc    DWORD PTR [rax],eax
    e357:	00 28                	add    BYTE PTR [rax],ch
    e359:	d2 ff                	sar    bh,cl
    e35b:	ff b4 11 00 00 92 d2 	push   QWORD PTR [rcx+rdx*1-0x2d6e0000]
    e362:	ff                   	(bad)  
    e363:	ff d4                	call   rsp
    e365:	11 00                	adc    DWORD PTR [rax],eax
    e367:	00 00                	add    BYTE PTR [rax],al
    e369:	d3 ff                	sar    edi,cl
    e36b:	ff f4                	push   rsp
    e36d:	11 00                	adc    DWORD PTR [rax],eax
    e36f:	00 70 d3             	add    BYTE PTR [rax-0x2d],dh
    e372:	ff                   	(bad)  
    e373:	ff 14 12             	call   QWORD PTR [rdx+rdx*1]
	...

Disassembly of section .eh_frame:

000000000000e378 <__FRAME_END__-0xea4>:
    e378:	14 00                	adc    al,0x0
    e37a:	00 00                	add    BYTE PTR [rax],al
    e37c:	00 00                	add    BYTE PTR [rax],al
    e37e:	00 00                	add    BYTE PTR [rax],al
    e380:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    e383:	00 01                	add    BYTE PTR [rcx],al
    e385:	78 10                	js     e397 <__GNU_EH_FRAME_HDR+0x3b3>
    e387:	01 1b                	add    DWORD PTR [rbx],ebx
    e389:	0c 07                	or     al,0x7
    e38b:	08 90 01 00 00 14    	or     BYTE PTR [rax+0x14000001],dl
    e391:	00 00                	add    BYTE PTR [rax],al
    e393:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e396:	00 00                	add    BYTE PTR [rax],al
    e398:	e8 44 ff ff 26       	call   2700e2e1 <_end+0x26ed32d9>
    e39d:	00 00                	add    BYTE PTR [rax],al
    e39f:	00 00                	add    BYTE PTR [rax],al
    e3a1:	44 07                	rex.R (bad) 
    e3a3:	10 00                	adc    BYTE PTR [rax],al
    e3a5:	00 00                	add    BYTE PTR [rax],al
    e3a7:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    e3aa:	00 00                	add    BYTE PTR [rax],al
    e3ac:	34 00                	xor    al,0x0
    e3ae:	00 00                	add    BYTE PTR [rax],al
    e3b0:	70 3c                	jo     e3ee <__GNU_EH_FRAME_HDR+0x40a>
    e3b2:	ff                   	(bad)  
    e3b3:	ff 30                	push   QWORD PTR [rax]
    e3b5:	04 00                	add    al,0x0
    e3b7:	00 00                	add    BYTE PTR [rax],al
    e3b9:	0e                   	(bad)  
    e3ba:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
    e3bd:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
    e3c0:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
    e3c3:	80 00 3f             	add    BYTE PTR [rax],0x3f
    e3c6:	1a 3a                	sbb    bh,BYTE PTR [rdx]
    e3c8:	2a 33                	sub    dh,BYTE PTR [rbx]
    e3ca:	24 22                	and    al,0x22
    e3cc:	00 00                	add    BYTE PTR [rax],al
    e3ce:	00 00                	add    BYTE PTR [rax],al
    e3d0:	14 00                	adc    al,0x0
    e3d2:	00 00                	add    BYTE PTR [rax],al
    e3d4:	5c                   	pop    rsp
    e3d5:	00 00                	add    BYTE PTR [rax],al
    e3d7:	00 78 40             	add    BYTE PTR [rax+0x40],bh
    e3da:	ff                   	(bad)  
    e3db:	ff 10                	call   QWORD PTR [rax]
	...
    e3e5:	00 00                	add    BYTE PTR [rax],al
    e3e7:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    e3ea:	00 00                	add    BYTE PTR [rax],al
    e3ec:	74 00                	je     e3ee <__GNU_EH_FRAME_HDR+0x40a>
    e3ee:	00 00                	add    BYTE PTR [rax],al
    e3f0:	70 40                	jo     e432 <__GNU_EH_FRAME_HDR+0x44e>
    e3f2:	ff                   	(bad)  
    e3f3:	ff 20                	jmp    QWORD PTR [rax]
    e3f5:	04 00                	add    al,0x0
	...
    e3ff:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e402:	00 00                	add    BYTE PTR [rax],al
    e404:	8c 00                	mov    WORD PTR [rax],es
    e406:	00 00                	add    BYTE PTR [rax],al
    e408:	61                   	(bad)  
    e409:	45 ff                	rex.RB (bad) 
    e40b:	ff                   	(bad)  
    e40c:	3a 00                	cmp    al,BYTE PTR [rax]
    e40e:	00 00                	add    BYTE PTR [rax],al
    e410:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e413:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e419:	71 0c                	jno    e427 <__GNU_EH_FRAME_HDR+0x443>
    e41b:	07                   	(bad)  
    e41c:	08 00                	or     BYTE PTR [rax],al
    e41e:	00 00                	add    BYTE PTR [rax],al
    e420:	24 00                	and    al,0x0
    e422:	00 00                	add    BYTE PTR [rax],al
    e424:	ac                   	lods   al,BYTE PTR ds:[rsi]
    e425:	00 00                	add    BYTE PTR [rax],al
    e427:	00 7b 45             	add    BYTE PTR [rbx+0x45],bh
    e42a:	ff                   	(bad)  
    e42b:	ff 4c 01 00          	dec    DWORD PTR [rcx+rax*1+0x0]
    e42f:	00 00                	add    BYTE PTR [rax],al
    e431:	45 0e                	rex.RB (bad) 
    e433:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e439:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    e43d:	3e 01 0c 07          	ds add DWORD PTR [rdi+rax*1],ecx
    e441:	08 00                	or     BYTE PTR [rax],al
    e443:	00 00                	add    BYTE PTR [rax],al
    e445:	00 00                	add    BYTE PTR [rax],al
    e447:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e44a:	00 00                	add    BYTE PTR [rax],al
    e44c:	d4                   	(bad)  
    e44d:	00 00                	add    BYTE PTR [rax],al
    e44f:	00 9f 46 ff ff f4    	add    BYTE PTR [rdi-0xb0000ba],bl
    e455:	02 00                	add    al,BYTE PTR [rax]
    e457:	00 00                	add    BYTE PTR [rax],al
    e459:	45 0e                	rex.RB (bad) 
    e45b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e461:	03 eb                	add    ebp,ebx
    e463:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    e466:	08 00                	or     BYTE PTR [rax],al
    e468:	1c 00                	sbb    al,0x0
    e46a:	00 00                	add    BYTE PTR [rax],al
    e46c:	f4                   	hlt    
    e46d:	00 00                	add    BYTE PTR [rax],al
    e46f:	00 73 49             	add    BYTE PTR [rbx+0x49],dh
    e472:	ff                   	(bad)  
    e473:	ff 13                	call   QWORD PTR [rbx]
    e475:	01 00                	add    DWORD PTR [rax],eax
    e477:	00 00                	add    BYTE PTR [rax],al
    e479:	45 0e                	rex.RB (bad) 
    e47b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e481:	03 0a                	add    ecx,DWORD PTR [rdx]
    e483:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    e486:	08 00                	or     BYTE PTR [rax],al
    e488:	1c 00                	sbb    al,0x0
    e48a:	00 00                	add    BYTE PTR [rax],al
    e48c:	14 01                	adc    al,0x1
    e48e:	00 00                	add    BYTE PTR [rax],al
    e490:	66 4a ff             	data16 rex.WX (bad) 
    e493:	ff ae 00 00 00 00    	jmp    FWORD PTR [rsi+0x0]
    e499:	45 0e                	rex.RB (bad) 
    e49b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e4a1:	02 a5 0c 07 08 00    	add    ah,BYTE PTR [rbp+0x8070c]
    e4a7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e4aa:	00 00                	add    BYTE PTR [rax],al
    e4ac:	34 01                	xor    al,0x1
    e4ae:	00 00                	add    BYTE PTR [rax],al
    e4b0:	f4                   	hlt    
    e4b1:	4a ff                	rex.WX (bad) 
    e4b3:	ff a6 00 00 00 00    	jmp    QWORD PTR [rsi+0x0]
    e4b9:	45 0e                	rex.RB (bad) 
    e4bb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e4c1:	02 9d 0c 07 08 00    	add    bl,BYTE PTR [rbp+0x8070c]
    e4c7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e4ca:	00 00                	add    BYTE PTR [rax],al
    e4cc:	54                   	push   rsp
    e4cd:	01 00                	add    DWORD PTR [rax],eax
    e4cf:	00 7a 4b             	add    BYTE PTR [rdx+0x4b],bh
    e4d2:	ff                   	(bad)  
    e4d3:	ff 95 00 00 00 00    	call   QWORD PTR [rbp+0x0]
    e4d9:	45 0e                	rex.RB (bad) 
    e4db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e4e1:	02 8c 0c 07 08 00 00 	add    cl,BYTE PTR [rsp+rcx*1+0x807]
    e4e8:	1c 00                	sbb    al,0x0
    e4ea:	00 00                	add    BYTE PTR [rax],al
    e4ec:	74 01                	je     e4ef <__GNU_EH_FRAME_HDR+0x50b>
    e4ee:	00 00                	add    BYTE PTR [rax],al
    e4f0:	ef                   	out    dx,eax
    e4f1:	4b ff                	rex.WXB (bad) 
    e4f3:	ff 94 00 00 00 00 45 	call   QWORD PTR [rax+rax*1+0x45000000]
    e4fa:	0e                   	(bad)  
    e4fb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e501:	02 8b 0c 07 08 00    	add    cl,BYTE PTR [rbx+0x8070c]
    e507:	00 28                	add    BYTE PTR [rax],ch
    e509:	00 00                	add    BYTE PTR [rax],al
    e50b:	00 94 01 00 00 63 4c 	add    BYTE PTR [rcx+rax*1+0x4c630000],dl
    e512:	ff                   	(bad)  
    e513:	ff cc                	dec    esp
    e515:	01 00                	add    DWORD PTR [rax],eax
    e517:	00 00                	add    BYTE PTR [rax],al
    e519:	45 0e                	rex.RB (bad) 
    e51b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e521:	4d 8f 03             	rex.WRB pop QWORD PTR [r11]
    e524:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
    e52b:	07                   	(bad)  
    e52c:	03 b6 01 0c 07 08    	add    esi,DWORD PTR [rsi+0x8070c01]
    e532:	00 00                	add    BYTE PTR [rax],al
    e534:	20 00                	and    BYTE PTR [rax],al
    e536:	00 00                	add    BYTE PTR [rax],al
    e538:	c0 01 00             	rol    BYTE PTR [rcx],0x0
    e53b:	00 03                	add    BYTE PTR [rbx],al
    e53d:	4e ff                	rex.WRX (bad) 
    e53f:	ff d4                	call   rsp
    e541:	00 00                	add    BYTE PTR [rax],al
    e543:	00 00                	add    BYTE PTR [rax],al
    e545:	45 0e                	rex.RB (bad) 
    e547:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e54d:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    e551:	c6                   	(bad)  
    e552:	0c 07                	or     al,0x7
    e554:	08 00                	or     BYTE PTR [rax],al
    e556:	00 00                	add    BYTE PTR [rax],al
    e558:	20 00                	and    BYTE PTR [rax],al
    e55a:	00 00                	add    BYTE PTR [rax],al
    e55c:	e4 01                	in     al,0x1
    e55e:	00 00                	add    BYTE PTR [rax],al
    e560:	b3 4e                	mov    bl,0x4e
    e562:	ff                   	(bad)  
    e563:	ff c7                	inc    edi
    e565:	00 00                	add    BYTE PTR [rax],al
    e567:	00 00                	add    BYTE PTR [rax],al
    e569:	45 0e                	rex.RB (bad) 
    e56b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e571:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    e575:	b9 0c 07 08 00       	mov    ecx,0x8070c
    e57a:	00 00                	add    BYTE PTR [rax],al
    e57c:	1c 00                	sbb    al,0x0
    e57e:	00 00                	add    BYTE PTR [rax],al
    e580:	08 02                	or     BYTE PTR [rdx],al
    e582:	00 00                	add    BYTE PTR [rax],al
    e584:	56                   	push   rsi
    e585:	4f ff                	rex.WRXB (bad) 
    e587:	ff 53 00             	call   QWORD PTR [rbx+0x0]
    e58a:	00 00                	add    BYTE PTR [rax],al
    e58c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e58f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e595:	02 4a 0c             	add    cl,BYTE PTR [rdx+0xc]
    e598:	07                   	(bad)  
    e599:	08 00                	or     BYTE PTR [rax],al
    e59b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e59e:	00 00                	add    BYTE PTR [rax],al
    e5a0:	28 02                	sub    BYTE PTR [rdx],al
    e5a2:	00 00                	add    BYTE PTR [rax],al
    e5a4:	89 4f ff             	mov    DWORD PTR [rdi-0x1],ecx
    e5a7:	ff 33                	push   QWORD PTR [rbx]
    e5a9:	00 00                	add    BYTE PTR [rax],al
    e5ab:	00 00                	add    BYTE PTR [rax],al
    e5ad:	45 0e                	rex.RB (bad) 
    e5af:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e5b5:	6a 0c                	push   0xc
    e5b7:	07                   	(bad)  
    e5b8:	08 00                	or     BYTE PTR [rax],al
    e5ba:	00 00                	add    BYTE PTR [rax],al
    e5bc:	1c 00                	sbb    al,0x0
    e5be:	00 00                	add    BYTE PTR [rax],al
    e5c0:	48 02 00             	rex.W add al,BYTE PTR [rax]
    e5c3:	00 9c 4f ff ff 21 00 	add    BYTE PTR [rdi+rcx*2+0x21ffff],bl
    e5ca:	00 00                	add    BYTE PTR [rax],al
    e5cc:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e5cf:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e5d5:	58                   	pop    rax
    e5d6:	0c 07                	or     al,0x7
    e5d8:	08 00                	or     BYTE PTR [rax],al
    e5da:	00 00                	add    BYTE PTR [rax],al
    e5dc:	20 00                	and    BYTE PTR [rax],al
    e5de:	00 00                	add    BYTE PTR [rax],al
    e5e0:	68 02 00 00 9d       	push   0xffffffff9d000002
    e5e5:	4f ff                	rex.WRXB (bad) 
    e5e7:	ff 68 00             	jmp    FWORD PTR [rax+0x0]
    e5ea:	00 00                	add    BYTE PTR [rax],al
    e5ec:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e5ef:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e5f5:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    e5f9:	5a                   	pop    rdx
    e5fa:	0c 07                	or     al,0x7
    e5fc:	08 00                	or     BYTE PTR [rax],al
    e5fe:	00 00                	add    BYTE PTR [rax],al
    e600:	1c 00                	sbb    al,0x0
    e602:	00 00                	add    BYTE PTR [rax],al
    e604:	8c 02                	mov    WORD PTR [rdx],es
    e606:	00 00                	add    BYTE PTR [rax],al
    e608:	e1 4f                	loope  e659 <__GNU_EH_FRAME_HDR+0x675>
    e60a:	ff                   	(bad)  
    e60b:	ff 25 04 00 00 00    	jmp    QWORD PTR [rip+0x4]        # e615 <__GNU_EH_FRAME_HDR+0x631>
    e611:	45 0e                	rex.RB (bad) 
    e613:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e619:	03 1c 04             	add    ebx,DWORD PTR [rsp+rax*1]
    e61c:	0c 07                	or     al,0x7
    e61e:	08 00                	or     BYTE PTR [rax],al
    e620:	1c 00                	sbb    al,0x0
    e622:	00 00                	add    BYTE PTR [rax],al
    e624:	ac                   	lods   al,BYTE PTR ds:[rsi]
    e625:	02 00                	add    al,BYTE PTR [rax]
    e627:	00 e6                	add    dh,ah
    e629:	53                   	push   rbx
    e62a:	ff                   	(bad)  
    e62b:	ff 5d 01             	call   FWORD PTR [rbp+0x1]
    e62e:	00 00                	add    BYTE PTR [rax],al
    e630:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e633:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e639:	03 54 01 0c          	add    edx,DWORD PTR [rcx+rax*1+0xc]
    e63d:	07                   	(bad)  
    e63e:	08 00                	or     BYTE PTR [rax],al
    e640:	1c 00                	sbb    al,0x0
    e642:	00 00                	add    BYTE PTR [rax],al
    e644:	cc                   	int3   
    e645:	02 00                	add    al,BYTE PTR [rax]
    e647:	00 23                	add    BYTE PTR [rbx],ah
    e649:	55                   	push   rbp
    e64a:	ff                   	(bad)  
    e64b:	ff 44 08 00          	inc    DWORD PTR [rax+rcx*1+0x0]
    e64f:	00 00                	add    BYTE PTR [rax],al
    e651:	45 0e                	rex.RB (bad) 
    e653:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e659:	03 3b                	add    edi,DWORD PTR [rbx]
    e65b:	08 0c 07             	or     BYTE PTR [rdi+rax*1],cl
    e65e:	08 00                	or     BYTE PTR [rax],al
    e660:	24 00                	and    al,0x0
    e662:	00 00                	add    BYTE PTR [rax],al
    e664:	ec                   	in     al,dx
    e665:	02 00                	add    al,BYTE PTR [rax]
    e667:	00 47 5d             	add    BYTE PTR [rdi+0x5d],al
    e66a:	ff                   	(bad)  
    e66b:	ff 81 08 00 00 00    	inc    DWORD PTR [rcx+0x8]
    e671:	45 0e                	rex.RB (bad) 
    e673:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e679:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    e67d:	70 08                	jo     e687 <__GNU_EH_FRAME_HDR+0x6a3>
    e67f:	0c 07                	or     al,0x7
    e681:	08 00                	or     BYTE PTR [rax],al
    e683:	00 00                	add    BYTE PTR [rax],al
    e685:	00 00                	add    BYTE PTR [rax],al
    e687:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e68a:	00 00                	add    BYTE PTR [rax],al
    e68c:	14 03                	adc    al,0x3
    e68e:	00 00                	add    BYTE PTR [rax],al
    e690:	a0 65 ff ff 55 01 00 	movabs al,ds:0x155ffff65
    e697:	00 00 
    e699:	45 0e                	rex.RB (bad) 
    e69b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e6a1:	03 4c 01 0c          	add    ecx,DWORD PTR [rcx+rax*1+0xc]
    e6a5:	07                   	(bad)  
    e6a6:	08 00                	or     BYTE PTR [rax],al
    e6a8:	1c 00                	sbb    al,0x0
    e6aa:	00 00                	add    BYTE PTR [rax],al
    e6ac:	34 03                	xor    al,0x3
    e6ae:	00 00                	add    BYTE PTR [rax],al
    e6b0:	d5                   	(bad)  
    e6b1:	66 ff                	data16 (bad) 
    e6b3:	ff                   	(bad)  
    e6b4:	ff 00                	inc    DWORD PTR [rax]
    e6b6:	00 00                	add    BYTE PTR [rax],al
    e6b8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e6bb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e6c1:	02 f6                	add    dh,dh
    e6c3:	0c 07                	or     al,0x7
    e6c5:	08 00                	or     BYTE PTR [rax],al
    e6c7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e6ca:	00 00                	add    BYTE PTR [rax],al
    e6cc:	54                   	push   rsp
    e6cd:	03 00                	add    eax,DWORD PTR [rax]
    e6cf:	00 b4 67 ff ff ec 00 	add    BYTE PTR [rdi+riz*2+0xecffff],dh
    e6d6:	00 00                	add    BYTE PTR [rax],al
    e6d8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e6db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e6e1:	02 e3                	add    ah,bl
    e6e3:	0c 07                	or     al,0x7
    e6e5:	08 00                	or     BYTE PTR [rax],al
    e6e7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e6ea:	00 00                	add    BYTE PTR [rax],al
    e6ec:	74 03                	je     e6f1 <__GNU_EH_FRAME_HDR+0x70d>
    e6ee:	00 00                	add    BYTE PTR [rax],al
    e6f0:	80 68 ff ff          	sub    BYTE PTR [rax-0x1],0xff
    e6f4:	b2 03                	mov    dl,0x3
    e6f6:	00 00                	add    BYTE PTR [rax],al
    e6f8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e6fb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e701:	03 a9 03 0c 07 08    	add    ebp,DWORD PTR [rcx+0x8070c03]
    e707:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e70a:	00 00                	add    BYTE PTR [rax],al
    e70c:	94                   	xchg   esp,eax
    e70d:	03 00                	add    eax,DWORD PTR [rax]
    e70f:	00 12                	add    BYTE PTR [rdx],dl
    e711:	6c                   	ins    BYTE PTR es:[rdi],dx
    e712:	ff                   	(bad)  
    e713:	ff 83 00 00 00 00    	inc    DWORD PTR [rbx+0x0]
    e719:	45 0e                	rex.RB (bad) 
    e71b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e721:	02 7a 0c             	add    bh,BYTE PTR [rdx+0xc]
    e724:	07                   	(bad)  
    e725:	08 00                	or     BYTE PTR [rax],al
    e727:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    e72a:	00 00                	add    BYTE PTR [rax],al
    e72c:	b4 03                	mov    ah,0x3
    e72e:	00 00                	add    BYTE PTR [rax],al
    e730:	75 6c                	jne    e79e <__GNU_EH_FRAME_HDR+0x7ba>
    e732:	ff                   	(bad)  
    e733:	ff 2a                	jmp    FWORD PTR [rdx]
    e735:	02 00                	add    al,BYTE PTR [rax]
    e737:	00 00                	add    BYTE PTR [rax],al
    e739:	45 0e                	rex.RB (bad) 
    e73b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e741:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    e745:	19 02                	sbb    DWORD PTR [rdx],eax
    e747:	0c 07                	or     al,0x7
    e749:	08 00                	or     BYTE PTR [rax],al
    e74b:	00 00                	add    BYTE PTR [rax],al
    e74d:	00 00                	add    BYTE PTR [rax],al
    e74f:	00 20                	add    BYTE PTR [rax],ah
    e751:	00 00                	add    BYTE PTR [rax],al
    e753:	00 dc                	add    ah,bl
    e755:	03 00                	add    eax,DWORD PTR [rax]
    e757:	00 77 6e             	add    BYTE PTR [rdi+0x6e],dh
    e75a:	ff                   	(bad)  
    e75b:	ff                   	(bad)  
    e75c:	3d 02 00 00 00       	cmp    eax,0x2
    e761:	45 0e                	rex.RB (bad) 
    e763:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e769:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    e76d:	2f                   	(bad)  
    e76e:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    e771:	08 00                	or     BYTE PTR [rax],al
    e773:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e776:	00 00                	add    BYTE PTR [rax],al
    e778:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    e77b:	00 90 70 ff ff 66    	add    BYTE PTR [rax+0x66ffff70],dl
    e781:	00 00                	add    BYTE PTR [rax],al
    e783:	00 00                	add    BYTE PTR [rax],al
    e785:	45 0e                	rex.RB (bad) 
    e787:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e78d:	02 5d 0c             	add    bl,BYTE PTR [rbp+0xc]
    e790:	07                   	(bad)  
    e791:	08 00                	or     BYTE PTR [rax],al
    e793:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e796:	00 00                	add    BYTE PTR [rax],al
    e798:	20 04 00             	and    BYTE PTR [rax+rax*1],al
    e79b:	00 d6                	add    dh,dl
    e79d:	70 ff                	jo     e79e <__GNU_EH_FRAME_HDR+0x7ba>
    e79f:	ff 17                	call   QWORD PTR [rdi]
    e7a1:	00 00                	add    BYTE PTR [rax],al
    e7a3:	00 00                	add    BYTE PTR [rax],al
    e7a5:	45 0e                	rex.RB (bad) 
    e7a7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e7ad:	4e 0c 07             	rex.WRX or al,0x7
    e7b0:	08 00                	or     BYTE PTR [rax],al
    e7b2:	00 00                	add    BYTE PTR [rax],al
    e7b4:	20 00                	and    BYTE PTR [rax],al
    e7b6:	00 00                	add    BYTE PTR [rax],al
    e7b8:	40 04 00             	rex add al,0x0
    e7bb:	00 cd                	add    ch,cl
    e7bd:	70 ff                	jo     e7be <__GNU_EH_FRAME_HDR+0x7da>
    e7bf:	ff 51 00             	call   QWORD PTR [rcx+0x0]
    e7c2:	00 00                	add    BYTE PTR [rax],al
    e7c4:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e7c7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e7cd:	02 48 0c             	add    cl,BYTE PTR [rax+0xc]
    e7d0:	07                   	(bad)  
    e7d1:	08 00                	or     BYTE PTR [rax],al
    e7d3:	00 00                	add    BYTE PTR [rax],al
    e7d5:	00 00                	add    BYTE PTR [rax],al
    e7d7:	00 20                	add    BYTE PTR [rax],ah
    e7d9:	00 00                	add    BYTE PTR [rax],al
    e7db:	00 64 04 00          	add    BYTE PTR [rsp+rax*1+0x0],ah
    e7df:	00 fa                	add    dl,bh
    e7e1:	70 ff                	jo     e7e2 <__GNU_EH_FRAME_HDR+0x7fe>
    e7e3:	ff                   	(bad)  
    e7e4:	3d 06 00 00 00       	cmp    eax,0x6
    e7e9:	45 0e                	rex.RB (bad) 
    e7eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e7f1:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    e7f5:	2f                   	(bad)  
    e7f6:	06                   	(bad)  
    e7f7:	0c 07                	or     al,0x7
    e7f9:	08 00                	or     BYTE PTR [rax],al
    e7fb:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e7fe:	00 00                	add    BYTE PTR [rax],al
    e800:	88 04 00             	mov    BYTE PTR [rax+rax*1],al
    e803:	00 13                	add    BYTE PTR [rbx],dl
    e805:	77 ff                	ja     e806 <__GNU_EH_FRAME_HDR+0x822>
    e807:	ff 1a                	call   FWORD PTR [rdx]
    e809:	00 00                	add    BYTE PTR [rax],al
    e80b:	00 00                	add    BYTE PTR [rax],al
    e80d:	45 0e                	rex.RB (bad) 
    e80f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e815:	51                   	push   rcx
    e816:	0c 07                	or     al,0x7
    e818:	08 00                	or     BYTE PTR [rax],al
    e81a:	00 00                	add    BYTE PTR [rax],al
    e81c:	1c 00                	sbb    al,0x0
    e81e:	00 00                	add    BYTE PTR [rax],al
    e820:	a8 04                	test   al,0x4
    e822:	00 00                	add    BYTE PTR [rax],al
    e824:	0d 77 ff ff 29       	or     eax,0x29ffff77
    e829:	00 00                	add    BYTE PTR [rax],al
    e82b:	00 00                	add    BYTE PTR [rax],al
    e82d:	45 0e                	rex.RB (bad) 
    e82f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e835:	60                   	(bad)  
    e836:	0c 07                	or     al,0x7
    e838:	08 00                	or     BYTE PTR [rax],al
    e83a:	00 00                	add    BYTE PTR [rax],al
    e83c:	1c 00                	sbb    al,0x0
    e83e:	00 00                	add    BYTE PTR [rax],al
    e840:	c8 04 00 00          	enter  0x4,0x0
    e844:	16                   	(bad)  
    e845:	77 ff                	ja     e846 <__GNU_EH_FRAME_HDR+0x862>
    e847:	ff 30                	push   QWORD PTR [rax]
    e849:	00 00                	add    BYTE PTR [rax],al
    e84b:	00 00                	add    BYTE PTR [rax],al
    e84d:	45 0e                	rex.RB (bad) 
    e84f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e855:	67 0c 07             	addr32 or al,0x7
    e858:	08 00                	or     BYTE PTR [rax],al
    e85a:	00 00                	add    BYTE PTR [rax],al
    e85c:	18 00                	sbb    BYTE PTR [rax],al
    e85e:	00 00                	add    BYTE PTR [rax],al
    e860:	e8 04 00 00 26       	call   2600e869 <_end+0x25ed3861>
    e865:	77 ff                	ja     e866 <__GNU_EH_FRAME_HDR+0x882>
    e867:	ff 37                	push   QWORD PTR [rdi]
    e869:	00 00                	add    BYTE PTR [rax],al
    e86b:	00 00                	add    BYTE PTR [rax],al
    e86d:	45 0e                	rex.RB (bad) 
    e86f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e875:	00 00                	add    BYTE PTR [rax],al
    e877:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e87a:	00 00                	add    BYTE PTR [rax],al
    e87c:	04 05                	add    al,0x5
    e87e:	00 00                	add    BYTE PTR [rax],al
    e880:	41 77 ff             	rex.B ja e882 <__GNU_EH_FRAME_HDR+0x89e>
    e883:	ff 45 01             	inc    DWORD PTR [rbp+0x1]
    e886:	00 00                	add    BYTE PTR [rax],al
    e888:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e88b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e891:	03 3c 01             	add    edi,DWORD PTR [rcx+rax*1]
    e894:	0c 07                	or     al,0x7
    e896:	08 00                	or     BYTE PTR [rax],al
    e898:	1c 00                	sbb    al,0x0
    e89a:	00 00                	add    BYTE PTR [rax],al
    e89c:	24 05                	and    al,0x5
    e89e:	00 00                	add    BYTE PTR [rax],al
    e8a0:	66 78 ff             	data16 js e8a2 <__GNU_EH_FRAME_HDR+0x8be>
    e8a3:	ff 60 01             	jmp    QWORD PTR [rax+0x1]
    e8a6:	00 00                	add    BYTE PTR [rax],al
    e8a8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e8ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e8b1:	03 57 01             	add    edx,DWORD PTR [rdi+0x1]
    e8b4:	0c 07                	or     al,0x7
    e8b6:	08 00                	or     BYTE PTR [rax],al
    e8b8:	1c 00                	sbb    al,0x0
    e8ba:	00 00                	add    BYTE PTR [rax],al
    e8bc:	44 05 00 00 a6 79    	rex.R add eax,0x79a60000
    e8c2:	ff                   	(bad)  
    e8c3:	ff 61 00             	jmp    QWORD PTR [rcx+0x0]
    e8c6:	00 00                	add    BYTE PTR [rax],al
    e8c8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e8cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e8d1:	02 58 0c             	add    bl,BYTE PTR [rax+0xc]
    e8d4:	07                   	(bad)  
    e8d5:	08 00                	or     BYTE PTR [rax],al
    e8d7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e8da:	00 00                	add    BYTE PTR [rax],al
    e8dc:	64 05 00 00 e7 79    	fs add eax,0x79e70000
    e8e2:	ff                   	(bad)  
    e8e3:	ff                   	(bad)  
    e8e4:	be 00 00 00 00       	mov    esi,0x0
    e8e9:	45 0e                	rex.RB (bad) 
    e8eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e8f1:	02 b5 0c 07 08 00    	add    dh,BYTE PTR [rbp+0x8070c]
    e8f7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e8fa:	00 00                	add    BYTE PTR [rax],al
    e8fc:	84 05 00 00 85 7a    	test   BYTE PTR [rip+0x7a850000],al        # 7a85e902 <_end+0x7a7238fa>
    e902:	ff                   	(bad)  
    e903:	ff 52 02             	call   QWORD PTR [rdx+0x2]
    e906:	00 00                	add    BYTE PTR [rax],al
    e908:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e90b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e911:	03 49 02             	add    ecx,DWORD PTR [rcx+0x2]
    e914:	0c 07                	or     al,0x7
    e916:	08 00                	or     BYTE PTR [rax],al
    e918:	1c 00                	sbb    al,0x0
    e91a:	00 00                	add    BYTE PTR [rax],al
    e91c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    e91d:	05 00 00 b7 7c       	add    eax,0x7cb70000
    e922:	ff                   	(bad)  
    e923:	ff                   	(bad)  
    e924:	f8                   	clc    
    e925:	01 00                	add    DWORD PTR [rax],eax
    e927:	00 00                	add    BYTE PTR [rax],al
    e929:	45 0e                	rex.RB (bad) 
    e92b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e931:	03 ef                	add    ebp,edi
    e933:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    e936:	08 00                	or     BYTE PTR [rax],al
    e938:	1c 00                	sbb    al,0x0
    e93a:	00 00                	add    BYTE PTR [rax],al
    e93c:	c4                   	(bad)  
    e93d:	05 00 00 8f 7e       	add    eax,0x7e8f0000
    e942:	ff                   	(bad)  
    e943:	ff 5a 00             	call   FWORD PTR [rdx+0x0]
    e946:	00 00                	add    BYTE PTR [rax],al
    e948:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e94b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e951:	02 51 0c             	add    dl,BYTE PTR [rcx+0xc]
    e954:	07                   	(bad)  
    e955:	08 00                	or     BYTE PTR [rax],al
    e957:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e95a:	00 00                	add    BYTE PTR [rax],al
    e95c:	e4 05                	in     al,0x5
    e95e:	00 00                	add    BYTE PTR [rax],al
    e960:	c9                   	leave  
    e961:	7e ff                	jle    e962 <__GNU_EH_FRAME_HDR+0x97e>
    e963:	ff 0f                	dec    DWORD PTR [rdi]
    e965:	03 00                	add    eax,DWORD PTR [rax]
    e967:	00 00                	add    BYTE PTR [rax],al
    e969:	45 0e                	rex.RB (bad) 
    e96b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e971:	03 06                	add    eax,DWORD PTR [rsi]
    e973:	03 0c 07             	add    ecx,DWORD PTR [rdi+rax*1]
    e976:	08 00                	or     BYTE PTR [rax],al
    e978:	1c 00                	sbb    al,0x0
    e97a:	00 00                	add    BYTE PTR [rax],al
    e97c:	04 06                	add    al,0x6
    e97e:	00 00                	add    BYTE PTR [rax],al
    e980:	b8 81 ff ff 51       	mov    eax,0x51ffff81
    e985:	04 00                	add    al,0x0
    e987:	00 00                	add    BYTE PTR [rax],al
    e989:	45 0e                	rex.RB (bad) 
    e98b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e991:	4a 8c 03             	rex.WX mov WORD PTR [rbx],es
    e994:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
    e998:	18 00                	sbb    BYTE PTR [rax],al
    e99a:	00 00                	add    BYTE PTR [rax],al
    e99c:	24 06                	and    al,0x6
    e99e:	00 00                	add    BYTE PTR [rax],al
    e9a0:	e9 85 ff ff 2a       	jmp    2b00e92a <_end+0x2aed3922>
    e9a5:	00 00                	add    BYTE PTR [rax],al
    e9a7:	00 00                	add    BYTE PTR [rax],al
    e9a9:	45 0e                	rex.RB (bad) 
    e9ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e9b1:	00 00                	add    BYTE PTR [rax],al
    e9b3:	00 20                	add    BYTE PTR [rax],ah
    e9b5:	00 00                	add    BYTE PTR [rax],al
    e9b7:	00 40 06             	add    BYTE PTR [rax+0x6],al
    e9ba:	00 00                	add    BYTE PTR [rax],al
    e9bc:	f7 85 ff ff b2 01 00 	test   DWORD PTR [rbp+0x1b2ffff],0x45000000
    e9c3:	00 00 45 
    e9c6:	0e                   	(bad)  
    e9c7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e9cd:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    e9d1:	a1 01 0c 07 08 00 00 	movabs eax,ds:0x1c000008070c01
    e9d8:	1c 00 
    e9da:	00 00                	add    BYTE PTR [rax],al
    e9dc:	64 06                	fs (bad) 
    e9de:	00 00                	add    BYTE PTR [rax],al
    e9e0:	85 87 ff ff 17 00    	test   DWORD PTR [rdi+0x17ffff],eax
    e9e6:	00 00                	add    BYTE PTR [rax],al
    e9e8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e9eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e9f1:	4e 0c 07             	rex.WRX or al,0x7
    e9f4:	08 00                	or     BYTE PTR [rax],al
    e9f6:	00 00                	add    BYTE PTR [rax],al
    e9f8:	1c 00                	sbb    al,0x0
    e9fa:	00 00                	add    BYTE PTR [rax],al
    e9fc:	84 06                	test   BYTE PTR [rsi],al
    e9fe:	00 00                	add    BYTE PTR [rax],al
    ea00:	7c 87                	jl     e989 <__GNU_EH_FRAME_HDR+0x9a5>
    ea02:	ff                   	(bad)  
    ea03:	ff 4f 00             	dec    DWORD PTR [rdi+0x0]
    ea06:	00 00                	add    BYTE PTR [rax],al
    ea08:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ea0b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea11:	02 46 0c             	add    al,BYTE PTR [rsi+0xc]
    ea14:	07                   	(bad)  
    ea15:	08 00                	or     BYTE PTR [rax],al
    ea17:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ea1a:	00 00                	add    BYTE PTR [rax],al
    ea1c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    ea1d:	06                   	(bad)  
    ea1e:	00 00                	add    BYTE PTR [rax],al
    ea20:	ab                   	stos   DWORD PTR es:[rdi],eax
    ea21:	87 ff                	xchg   edi,edi
    ea23:	ff 4d 00             	dec    DWORD PTR [rbp+0x0]
    ea26:	00 00                	add    BYTE PTR [rax],al
    ea28:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ea2b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea31:	02 44 0c 07          	add    al,BYTE PTR [rsp+rcx*1+0x7]
    ea35:	08 00                	or     BYTE PTR [rax],al
    ea37:	00 18                	add    BYTE PTR [rax],bl
    ea39:	00 00                	add    BYTE PTR [rax],al
    ea3b:	00 c4                	add    ah,al
    ea3d:	06                   	(bad)  
    ea3e:	00 00                	add    BYTE PTR [rax],al
    ea40:	d8 87 ff ff 77 01    	fadd   DWORD PTR [rdi+0x177ffff]
    ea46:	00 00                	add    BYTE PTR [rax],al
    ea48:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ea4b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea51:	00 00                	add    BYTE PTR [rax],al
    ea53:	00 20                	add    BYTE PTR [rax],ah
    ea55:	00 00                	add    BYTE PTR [rax],al
    ea57:	00 e0                	add    al,ah
    ea59:	06                   	(bad)  
    ea5a:	00 00                	add    BYTE PTR [rax],al
    ea5c:	33 89 ff ff 89 00    	xor    ecx,DWORD PTR [rcx+0x89ffff]
    ea62:	00 00                	add    BYTE PTR [rax],al
    ea64:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ea67:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea6d:	02 80 0c 07 08 00    	add    al,BYTE PTR [rax+0x8070c]
    ea73:	00 00                	add    BYTE PTR [rax],al
    ea75:	00 00                	add    BYTE PTR [rax],al
    ea77:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ea7a:	00 00                	add    BYTE PTR [rax],al
    ea7c:	04 07                	add    al,0x7
    ea7e:	00 00                	add    BYTE PTR [rax],al
    ea80:	98                   	cwde   
    ea81:	89 ff                	mov    edi,edi
    ea83:	ff                   	(bad)  
    ea84:	ee                   	out    dx,al
    ea85:	01 00                	add    DWORD PTR [rax],eax
    ea87:	00 00                	add    BYTE PTR [rax],al
    ea89:	45 0e                	rex.RB (bad) 
    ea8b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea91:	03 e5                	add    esp,ebp
    ea93:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ea96:	08 00                	or     BYTE PTR [rax],al
    ea98:	1c 00                	sbb    al,0x0
    ea9a:	00 00                	add    BYTE PTR [rax],al
    ea9c:	24 07                	and    al,0x7
    ea9e:	00 00                	add    BYTE PTR [rax],al
    eaa0:	66 8b ff             	mov    di,di
    eaa3:	ff                   	(bad)  
    eaa4:	e8 01 00 00 00       	call   eaaa <__GNU_EH_FRAME_HDR+0xac6>
    eaa9:	45 0e                	rex.RB (bad) 
    eaab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eab1:	03 df                	add    ebx,edi
    eab3:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    eab6:	08 00                	or     BYTE PTR [rax],al
    eab8:	1c 00                	sbb    al,0x0
    eaba:	00 00                	add    BYTE PTR [rax],al
    eabc:	44 07                	rex.R (bad) 
    eabe:	00 00                	add    BYTE PTR [rax],al
    eac0:	2e 8d                	cs (bad) 
    eac2:	ff                   	(bad)  
    eac3:	ff 6c 00 00          	jmp    FWORD PTR [rax+rax*1+0x0]
    eac7:	00 00                	add    BYTE PTR [rax],al
    eac9:	45 0e                	rex.RB (bad) 
    eacb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ead1:	02 63 0c             	add    ah,BYTE PTR [rbx+0xc]
    ead4:	07                   	(bad)  
    ead5:	08 00                	or     BYTE PTR [rax],al
    ead7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eada:	00 00                	add    BYTE PTR [rax],al
    eadc:	64 07                	fs (bad) 
    eade:	00 00                	add    BYTE PTR [rax],al
    eae0:	7a 8d                	jp     ea6f <__GNU_EH_FRAME_HDR+0xa8b>
    eae2:	ff                   	(bad)  
    eae3:	ff 72 00             	push   QWORD PTR [rdx+0x0]
    eae6:	00 00                	add    BYTE PTR [rax],al
    eae8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eaeb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eaf1:	02 69 0c             	add    ch,BYTE PTR [rcx+0xc]
    eaf4:	07                   	(bad)  
    eaf5:	08 00                	or     BYTE PTR [rax],al
    eaf7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eafa:	00 00                	add    BYTE PTR [rax],al
    eafc:	84 07                	test   BYTE PTR [rdi],al
    eafe:	00 00                	add    BYTE PTR [rax],al
    eb00:	cc                   	int3   
    eb01:	8d                   	(bad)  
    eb02:	ff                   	(bad)  
    eb03:	ff 11                	call   QWORD PTR [rcx]
    eb05:	01 00                	add    DWORD PTR [rax],eax
    eb07:	00 00                	add    BYTE PTR [rax],al
    eb09:	45 0e                	rex.RB (bad) 
    eb0b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb11:	03 08                	add    ecx,DWORD PTR [rax]
    eb13:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    eb16:	08 00                	or     BYTE PTR [rax],al
    eb18:	1c 00                	sbb    al,0x0
    eb1a:	00 00                	add    BYTE PTR [rax],al
    eb1c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    eb1d:	07                   	(bad)  
    eb1e:	00 00                	add    BYTE PTR [rax],al
    eb20:	bd 8e ff ff 5c       	mov    ebp,0x5cffff8e
    eb25:	00 00                	add    BYTE PTR [rax],al
    eb27:	00 00                	add    BYTE PTR [rax],al
    eb29:	45 0e                	rex.RB (bad) 
    eb2b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb31:	02 53 0c             	add    dl,BYTE PTR [rbx+0xc]
    eb34:	07                   	(bad)  
    eb35:	08 00                	or     BYTE PTR [rax],al
    eb37:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eb3a:	00 00                	add    BYTE PTR [rax],al
    eb3c:	c4                   	(bad)  
    eb3d:	07                   	(bad)  
    eb3e:	00 00                	add    BYTE PTR [rax],al
    eb40:	f9                   	stc    
    eb41:	8e ff                	mov    ?,edi
    eb43:	ff                   	(bad)  
    eb44:	3e 00 00             	ds add BYTE PTR [rax],al
    eb47:	00 00                	add    BYTE PTR [rax],al
    eb49:	45 0e                	rex.RB (bad) 
    eb4b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb51:	75 0c                	jne    eb5f <__GNU_EH_FRAME_HDR+0xb7b>
    eb53:	07                   	(bad)  
    eb54:	08 00                	or     BYTE PTR [rax],al
    eb56:	00 00                	add    BYTE PTR [rax],al
    eb58:	1c 00                	sbb    al,0x0
    eb5a:	00 00                	add    BYTE PTR [rax],al
    eb5c:	e4 07                	in     al,0x7
    eb5e:	00 00                	add    BYTE PTR [rax],al
    eb60:	17                   	(bad)  
    eb61:	8f                   	(bad)  
    eb62:	ff                   	(bad)  
    eb63:	ff 86 00 00 00 00    	inc    DWORD PTR [rsi+0x0]
    eb69:	45 0e                	rex.RB (bad) 
    eb6b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb71:	02 7d 0c             	add    bh,BYTE PTR [rbp+0xc]
    eb74:	07                   	(bad)  
    eb75:	08 00                	or     BYTE PTR [rax],al
    eb77:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eb7a:	00 00                	add    BYTE PTR [rax],al
    eb7c:	04 08                	add    al,0x8
    eb7e:	00 00                	add    BYTE PTR [rax],al
    eb80:	7d 8f                	jge    eb11 <__GNU_EH_FRAME_HDR+0xb2d>
    eb82:	ff                   	(bad)  
    eb83:	ff                   	(bad)  
    eb84:	df 00                	fild   WORD PTR [rax]
    eb86:	00 00                	add    BYTE PTR [rax],al
    eb88:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eb8b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb91:	02 d6                	add    dl,dh
    eb93:	0c 07                	or     al,0x7
    eb95:	08 00                	or     BYTE PTR [rax],al
    eb97:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eb9a:	00 00                	add    BYTE PTR [rax],al
    eb9c:	24 08                	and    al,0x8
    eb9e:	00 00                	add    BYTE PTR [rax],al
    eba0:	3c 90                	cmp    al,0x90
    eba2:	ff                   	(bad)  
    eba3:	ff 74 00 00          	push   QWORD PTR [rax+rax*1+0x0]
    eba7:	00 00                	add    BYTE PTR [rax],al
    eba9:	45 0e                	rex.RB (bad) 
    ebab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ebb1:	02 6b 0c             	add    ch,BYTE PTR [rbx+0xc]
    ebb4:	07                   	(bad)  
    ebb5:	08 00                	or     BYTE PTR [rax],al
    ebb7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ebba:	00 00                	add    BYTE PTR [rax],al
    ebbc:	44 08 00             	or     BYTE PTR [rax],r8b
    ebbf:	00 90 90 ff ff 9c    	add    BYTE PTR [rax-0x63000070],dl
    ebc5:	00 00                	add    BYTE PTR [rax],al
    ebc7:	00 00                	add    BYTE PTR [rax],al
    ebc9:	45 0e                	rex.RB (bad) 
    ebcb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ebd1:	02 93 0c 07 08 00    	add    dl,BYTE PTR [rbx+0x8070c]
    ebd7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ebda:	00 00                	add    BYTE PTR [rax],al
    ebdc:	64 08 00             	or     BYTE PTR fs:[rax],al
    ebdf:	00 0c 91             	add    BYTE PTR [rcx+rdx*4],cl
    ebe2:	ff                   	(bad)  
    ebe3:	ff 29                	jmp    FWORD PTR [rcx]
    ebe5:	00 00                	add    BYTE PTR [rax],al
    ebe7:	00 00                	add    BYTE PTR [rax],al
    ebe9:	45 0e                	rex.RB (bad) 
    ebeb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ebf1:	60                   	(bad)  
    ebf2:	0c 07                	or     al,0x7
    ebf4:	08 00                	or     BYTE PTR [rax],al
    ebf6:	00 00                	add    BYTE PTR [rax],al
    ebf8:	1c 00                	sbb    al,0x0
    ebfa:	00 00                	add    BYTE PTR [rax],al
    ebfc:	84 08                	test   BYTE PTR [rax],cl
    ebfe:	00 00                	add    BYTE PTR [rax],al
    ec00:	15 91 ff ff 29       	adc    eax,0x29ffff91
    ec05:	00 00                	add    BYTE PTR [rax],al
    ec07:	00 00                	add    BYTE PTR [rax],al
    ec09:	45 0e                	rex.RB (bad) 
    ec0b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec11:	60                   	(bad)  
    ec12:	0c 07                	or     al,0x7
    ec14:	08 00                	or     BYTE PTR [rax],al
    ec16:	00 00                	add    BYTE PTR [rax],al
    ec18:	24 00                	and    al,0x0
    ec1a:	00 00                	add    BYTE PTR [rax],al
    ec1c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    ec1d:	08 00                	or     BYTE PTR [rax],al
    ec1f:	00 1e                	add    BYTE PTR [rsi],bl
    ec21:	91                   	xchg   ecx,eax
    ec22:	ff                   	(bad)  
    ec23:	ff 53 01             	call   QWORD PTR [rbx+0x1]
    ec26:	00 00                	add    BYTE PTR [rax],al
    ec28:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ec2b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec31:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    ec35:	45 01 0c 07          	add    DWORD PTR [r15+rax*1],r9d
    ec39:	08 00                	or     BYTE PTR [rax],al
    ec3b:	00 00                	add    BYTE PTR [rax],al
    ec3d:	00 00                	add    BYTE PTR [rax],al
    ec3f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ec42:	00 00                	add    BYTE PTR [rax],al
    ec44:	cc                   	int3   
    ec45:	08 00                	or     BYTE PTR [rax],al
    ec47:	00 49 92             	add    BYTE PTR [rcx-0x6e],cl
    ec4a:	ff                   	(bad)  
    ec4b:	ff 1e                	call   FWORD PTR [rsi]
    ec4d:	00 00                	add    BYTE PTR [rax],al
    ec4f:	00 00                	add    BYTE PTR [rax],al
    ec51:	45 0e                	rex.RB (bad) 
    ec53:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec59:	55                   	push   rbp
    ec5a:	0c 07                	or     al,0x7
    ec5c:	08 00                	or     BYTE PTR [rax],al
    ec5e:	00 00                	add    BYTE PTR [rax],al
    ec60:	1c 00                	sbb    al,0x0
    ec62:	00 00                	add    BYTE PTR [rax],al
    ec64:	ec                   	in     al,dx
    ec65:	08 00                	or     BYTE PTR [rax],al
    ec67:	00 47 92             	add    BYTE PTR [rdi-0x6e],al
    ec6a:	ff                   	(bad)  
    ec6b:	ff 63 01             	jmp    QWORD PTR [rbx+0x1]
    ec6e:	00 00                	add    BYTE PTR [rax],al
    ec70:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ec73:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec79:	03 5a 01             	add    ebx,DWORD PTR [rdx+0x1]
    ec7c:	0c 07                	or     al,0x7
    ec7e:	08 00                	or     BYTE PTR [rax],al
    ec80:	2c 00                	sub    al,0x0
    ec82:	00 00                	add    BYTE PTR [rax],al
    ec84:	0c 09                	or     al,0x9
    ec86:	00 00                	add    BYTE PTR [rax],al
    ec88:	8a 93 ff ff 0e 02    	mov    dl,BYTE PTR [rbx+0x20effff]
    ec8e:	00 00                	add    BYTE PTR [rax],al
    ec90:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ec93:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec99:	50                   	push   rax
    ec9a:	8f 03                	pop    QWORD PTR [rbx]
    ec9c:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
    eca3:	07                   	(bad)  
    eca4:	03 f5                	add    esi,ebp
    eca6:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    eca9:	08 00                	or     BYTE PTR [rax],al
    ecab:	00 00                	add    BYTE PTR [rax],al
    ecad:	00 00                	add    BYTE PTR [rax],al
    ecaf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ecb2:	00 00                	add    BYTE PTR [rax],al
    ecb4:	3c 09                	cmp    al,0x9
    ecb6:	00 00                	add    BYTE PTR [rax],al
    ecb8:	68 95 ff ff b2       	push   0xffffffffb2ffff95
    ecbd:	00 00                	add    BYTE PTR [rax],al
    ecbf:	00 00                	add    BYTE PTR [rax],al
    ecc1:	45 0e                	rex.RB (bad) 
    ecc3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ecc9:	02 a9 0c 07 08 00    	add    ch,BYTE PTR [rcx+0x8070c]
    eccf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ecd2:	00 00                	add    BYTE PTR [rax],al
    ecd4:	5c                   	pop    rsp
    ecd5:	09 00                	or     DWORD PTR [rax],eax
    ecd7:	00 fa                	add    dl,bh
    ecd9:	95                   	xchg   ebp,eax
    ecda:	ff                   	(bad)  
    ecdb:	ff a5 00 00 00 00    	jmp    QWORD PTR [rbp+0x0]
    ece1:	45 0e                	rex.RB (bad) 
    ece3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ece9:	02 9c 0c 07 08 00 00 	add    bl,BYTE PTR [rsp+rcx*1+0x807]
    ecf0:	24 00                	and    al,0x0
    ecf2:	00 00                	add    BYTE PTR [rax],al
    ecf4:	7c 09                	jl     ecff <__GNU_EH_FRAME_HDR+0xd1b>
    ecf6:	00 00                	add    BYTE PTR [rax],al
    ecf8:	7f 96                	jg     ec90 <__GNU_EH_FRAME_HDR+0xcac>
    ecfa:	ff                   	(bad)  
    ecfb:	ff 94 00 00 00 00 45 	call   QWORD PTR [rax+rax*1+0x45000000]
    ed02:	0e                   	(bad)  
    ed03:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed09:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    ed0d:	86 0c 07             	xchg   BYTE PTR [rdi+rax*1],cl
    ed10:	08 00                	or     BYTE PTR [rax],al
    ed12:	00 00                	add    BYTE PTR [rax],al
    ed14:	00 00                	add    BYTE PTR [rax],al
    ed16:	00 00                	add    BYTE PTR [rax],al
    ed18:	1c 00                	sbb    al,0x0
    ed1a:	00 00                	add    BYTE PTR [rax],al
    ed1c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    ed1d:	09 00                	or     DWORD PTR [rax],eax
    ed1f:	00 eb                	add    bl,ch
    ed21:	96                   	xchg   esi,eax
    ed22:	ff                   	(bad)  
    ed23:	ff d5                	call   rbp
    ed25:	00 00                	add    BYTE PTR [rax],al
    ed27:	00 00                	add    BYTE PTR [rax],al
    ed29:	45 0e                	rex.RB (bad) 
    ed2b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed31:	02 cc                	add    cl,ah
    ed33:	0c 07                	or     al,0x7
    ed35:	08 00                	or     BYTE PTR [rax],al
    ed37:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ed3a:	00 00                	add    BYTE PTR [rax],al
    ed3c:	c4                   	(bad)  
    ed3d:	09 00                	or     DWORD PTR [rax],eax
    ed3f:	00 a0 97 ff ff df    	add    BYTE PTR [rax-0x20000069],ah
    ed45:	00 00                	add    BYTE PTR [rax],al
    ed47:	00 00                	add    BYTE PTR [rax],al
    ed49:	45 0e                	rex.RB (bad) 
    ed4b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed51:	02 d6                	add    dl,dh
    ed53:	0c 07                	or     al,0x7
    ed55:	08 00                	or     BYTE PTR [rax],al
    ed57:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ed5a:	00 00                	add    BYTE PTR [rax],al
    ed5c:	e4 09                	in     al,0x9
    ed5e:	00 00                	add    BYTE PTR [rax],al
    ed60:	5f                   	pop    rdi
    ed61:	98                   	cwde   
    ed62:	ff                   	(bad)  
    ed63:	ff                   	(bad)  
    ed64:	7d 00                	jge    ed66 <__GNU_EH_FRAME_HDR+0xd82>
    ed66:	00 00                	add    BYTE PTR [rax],al
    ed68:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ed6b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed71:	02 74 0c 07          	add    dh,BYTE PTR [rsp+rcx*1+0x7]
    ed75:	08 00                	or     BYTE PTR [rax],al
    ed77:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ed7a:	00 00                	add    BYTE PTR [rax],al
    ed7c:	04 0a                	add    al,0xa
    ed7e:	00 00                	add    BYTE PTR [rax],al
    ed80:	bc 98 ff ff 36       	mov    esp,0x36ffff98
    ed85:	01 00                	add    DWORD PTR [rax],eax
    ed87:	00 00                	add    BYTE PTR [rax],al
    ed89:	45 0e                	rex.RB (bad) 
    ed8b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed91:	03 2d 01 0c 07 08    	add    ebp,DWORD PTR [rip+0x8070c01]        # 807f998 <_end+0x7f44990>
    ed97:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ed9a:	00 00                	add    BYTE PTR [rax],al
    ed9c:	24 0a                	and    al,0xa
    ed9e:	00 00                	add    BYTE PTR [rax],al
    eda0:	d2 99 ff ff 7e 00    	rcr    BYTE PTR [rcx+0x7effff],cl
    eda6:	00 00                	add    BYTE PTR [rax],al
    eda8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    edab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    edb1:	02 75 0c             	add    dh,BYTE PTR [rbp+0xc]
    edb4:	07                   	(bad)  
    edb5:	08 00                	or     BYTE PTR [rax],al
    edb7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    edba:	00 00                	add    BYTE PTR [rax],al
    edbc:	44 0a 00             	or     r8b,BYTE PTR [rax]
    edbf:	00 30                	add    BYTE PTR [rax],dh
    edc1:	9a                   	(bad)  
    edc2:	ff                   	(bad)  
    edc3:	ff 2a                	jmp    FWORD PTR [rdx]
    edc5:	02 00                	add    al,BYTE PTR [rax]
    edc7:	00 00                	add    BYTE PTR [rax],al
    edc9:	45 0e                	rex.RB (bad) 
    edcb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    edd1:	03 21                	add    esp,DWORD PTR [rcx]
    edd3:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    edd6:	08 00                	or     BYTE PTR [rax],al
    edd8:	1c 00                	sbb    al,0x0
    edda:	00 00                	add    BYTE PTR [rax],al
    eddc:	64 0a 00             	or     al,BYTE PTR fs:[rax]
    eddf:	00 3a                	add    BYTE PTR [rdx],bh
    ede1:	9c                   	pushf  
    ede2:	ff                   	(bad)  
    ede3:	ff c3                	inc    ebx
    ede5:	00 00                	add    BYTE PTR [rax],al
    ede7:	00 00                	add    BYTE PTR [rax],al
    ede9:	45 0e                	rex.RB (bad) 
    edeb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    edf1:	02 ba 0c 07 08 00    	add    bh,BYTE PTR [rdx+0x8070c]
    edf7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    edfa:	00 00                	add    BYTE PTR [rax],al
    edfc:	84 0a                	test   BYTE PTR [rdx],cl
    edfe:	00 00                	add    BYTE PTR [rax],al
    ee00:	dd 9c ff ff 9b 01 00 	fstp   QWORD PTR [rdi+rdi*8+0x19bff]
    ee07:	00 00                	add    BYTE PTR [rax],al
    ee09:	45 0e                	rex.RB (bad) 
    ee0b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee11:	03 92 01 0c 07 08    	add    edx,DWORD PTR [rdx+0x8070c01]
    ee17:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ee1a:	00 00                	add    BYTE PTR [rax],al
    ee1c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    ee1d:	0a 00                	or     al,BYTE PTR [rax]
    ee1f:	00 58 9e             	add    BYTE PTR [rax-0x62],bl
    ee22:	ff                   	(bad)  
    ee23:	ff 0d 01 00 00 00    	dec    DWORD PTR [rip+0x1]        # ee2a <__GNU_EH_FRAME_HDR+0xe46>
    ee29:	45 0e                	rex.RB (bad) 
    ee2b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee31:	03 04 01             	add    eax,DWORD PTR [rcx+rax*1]
    ee34:	0c 07                	or     al,0x7
    ee36:	08 00                	or     BYTE PTR [rax],al
    ee38:	1c 00                	sbb    al,0x0
    ee3a:	00 00                	add    BYTE PTR [rax],al
    ee3c:	c4                   	(bad)  
    ee3d:	0a 00                	or     al,BYTE PTR [rax]
    ee3f:	00 45 9f             	add    BYTE PTR [rbp-0x61],al
    ee42:	ff                   	(bad)  
    ee43:	ff 66 00             	jmp    QWORD PTR [rsi+0x0]
    ee46:	00 00                	add    BYTE PTR [rax],al
    ee48:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ee4b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee51:	02 5d 0c             	add    bl,BYTE PTR [rbp+0xc]
    ee54:	07                   	(bad)  
    ee55:	08 00                	or     BYTE PTR [rax],al
    ee57:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ee5a:	00 00                	add    BYTE PTR [rax],al
    ee5c:	e4 0a                	in     al,0xa
    ee5e:	00 00                	add    BYTE PTR [rax],al
    ee60:	8b 9f ff ff 75 00    	mov    ebx,DWORD PTR [rdi+0x75ffff]
    ee66:	00 00                	add    BYTE PTR [rax],al
    ee68:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ee6b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee71:	02 6c 0c 07          	add    ch,BYTE PTR [rsp+rcx*1+0x7]
    ee75:	08 00                	or     BYTE PTR [rax],al
    ee77:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ee7a:	00 00                	add    BYTE PTR [rax],al
    ee7c:	04 0b                	add    al,0xb
    ee7e:	00 00                	add    BYTE PTR [rax],al
    ee80:	e0 9f                	loopne ee21 <__GNU_EH_FRAME_HDR+0xe3d>
    ee82:	ff                   	(bad)  
    ee83:	ff                   	(bad)  
    ee84:	db 00                	fild   DWORD PTR [rax]
    ee86:	00 00                	add    BYTE PTR [rax],al
    ee88:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ee8b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee91:	02 d2                	add    dl,dl
    ee93:	0c 07                	or     al,0x7
    ee95:	08 00                	or     BYTE PTR [rax],al
    ee97:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ee9a:	00 00                	add    BYTE PTR [rax],al
    ee9c:	24 0b                	and    al,0xb
    ee9e:	00 00                	add    BYTE PTR [rax],al
    eea0:	9b                   	fwait
    eea1:	a0 ff ff 72 01 00 00 	movabs al,ds:0x450000000172ffff
    eea8:	00 45 
    eeaa:	0e                   	(bad)  
    eeab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eeb1:	03 69 01             	add    ebp,DWORD PTR [rcx+0x1]
    eeb4:	0c 07                	or     al,0x7
    eeb6:	08 00                	or     BYTE PTR [rax],al
    eeb8:	1c 00                	sbb    al,0x0
    eeba:	00 00                	add    BYTE PTR [rax],al
    eebc:	44 0b 00             	or     r8d,DWORD PTR [rax]
    eebf:	00 ed                	add    ch,ch
    eec1:	a1 ff ff 6c 00 00 00 	movabs eax,ds:0x45000000006cffff
    eec8:	00 45 
    eeca:	0e                   	(bad)  
    eecb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eed1:	02 63 0c             	add    ah,BYTE PTR [rbx+0xc]
    eed4:	07                   	(bad)  
    eed5:	08 00                	or     BYTE PTR [rax],al
    eed7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eeda:	00 00                	add    BYTE PTR [rax],al
    eedc:	64 0b 00             	or     eax,DWORD PTR fs:[rax]
    eedf:	00 39                	add    BYTE PTR [rcx],bh
    eee1:	a2 ff ff 80 00 00 00 	movabs ds:0x450000000080ffff,al
    eee8:	00 45 
    eeea:	0e                   	(bad)  
    eeeb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eef1:	02 77 0c             	add    dh,BYTE PTR [rdi+0xc]
    eef4:	07                   	(bad)  
    eef5:	08 00                	or     BYTE PTR [rax],al
    eef7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eefa:	00 00                	add    BYTE PTR [rax],al
    eefc:	84 0b                	test   BYTE PTR [rbx],cl
    eefe:	00 00                	add    BYTE PTR [rax],al
    ef00:	99                   	cdq    
    ef01:	a2 ff ff 16 00 00 00 	movabs ds:0x450000000016ffff,al
    ef08:	00 45 
    ef0a:	0e                   	(bad)  
    ef0b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef11:	4d 0c 07             	rex.WRB or al,0x7
    ef14:	08 00                	or     BYTE PTR [rax],al
    ef16:	00 00                	add    BYTE PTR [rax],al
    ef18:	20 00                	and    BYTE PTR [rax],al
    ef1a:	00 00                	add    BYTE PTR [rax],al
    ef1c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    ef1d:	0b 00                	or     eax,DWORD PTR [rax]
    ef1f:	00 8f a2 ff ff 3a    	add    BYTE PTR [rdi+0x3affffa2],cl
    ef25:	01 00                	add    DWORD PTR [rax],eax
    ef27:	00 00                	add    BYTE PTR [rax],al
    ef29:	45 0e                	rex.RB (bad) 
    ef2b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef31:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    ef35:	2c 01                	sub    al,0x1
    ef37:	0c 07                	or     al,0x7
    ef39:	08 00                	or     BYTE PTR [rax],al
    ef3b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef3e:	00 00                	add    BYTE PTR [rax],al
    ef40:	c8 0b 00 00          	enter  0xb,0x0
    ef44:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    ef45:	a3 ff ff 64 00 00 00 	movabs ds:0x450000000064ffff,eax
    ef4c:	00 45 
    ef4e:	0e                   	(bad)  
    ef4f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef55:	02 5b 0c             	add    bl,BYTE PTR [rbx+0xc]
    ef58:	07                   	(bad)  
    ef59:	08 00                	or     BYTE PTR [rax],al
    ef5b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef5e:	00 00                	add    BYTE PTR [rax],al
    ef60:	e8 0b 00 00 e9       	call   ffffffffe900ef70 <_end+0xffffffffe8ed3f68>
    ef65:	a3 ff ff 53 00 00 00 	movabs ds:0x450000000053ffff,eax
    ef6c:	00 45 
    ef6e:	0e                   	(bad)  
    ef6f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef75:	02 4a 0c             	add    cl,BYTE PTR [rdx+0xc]
    ef78:	07                   	(bad)  
    ef79:	08 00                	or     BYTE PTR [rax],al
    ef7b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef7e:	00 00                	add    BYTE PTR [rax],al
    ef80:	08 0c 00             	or     BYTE PTR [rax+rax*1],cl
    ef83:	00 1c a4             	add    BYTE PTR [rsp+riz*4],bl
    ef86:	ff                   	(bad)  
    ef87:	ff b1 00 00 00 00    	push   QWORD PTR [rcx+0x0]
    ef8d:	45 0e                	rex.RB (bad) 
    ef8f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef95:	02 a8 0c 07 08 00    	add    ch,BYTE PTR [rax+0x8070c]
    ef9b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef9e:	00 00                	add    BYTE PTR [rax],al
    efa0:	28 0c 00             	sub    BYTE PTR [rax+rax*1],cl
    efa3:	00 ad a4 ff ff cb    	add    BYTE PTR [rbp-0x3400005c],ch
    efa9:	00 00                	add    BYTE PTR [rax],al
    efab:	00 00                	add    BYTE PTR [rax],al
    efad:	45 0e                	rex.RB (bad) 
    efaf:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    efb5:	02 c2                	add    al,dl
    efb7:	0c 07                	or     al,0x7
    efb9:	08 00                	or     BYTE PTR [rax],al
    efbb:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    efbe:	00 00                	add    BYTE PTR [rax],al
    efc0:	48 0c 00             	rex.W or al,0x0
    efc3:	00 58 a5             	add    BYTE PTR [rax-0x5b],bl
    efc6:	ff                   	(bad)  
    efc7:	ff 55 00             	call   QWORD PTR [rbp+0x0]
    efca:	00 00                	add    BYTE PTR [rax],al
    efcc:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    efcf:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    efd5:	02 4c 0c 07          	add    cl,BYTE PTR [rsp+rcx*1+0x7]
    efd9:	08 00                	or     BYTE PTR [rax],al
    efdb:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    efde:	00 00                	add    BYTE PTR [rax],al
    efe0:	68 0c 00 00 8d       	push   0xffffffff8d00000c
    efe5:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    efe6:	ff                   	(bad)  
    efe7:	ff 30                	push   QWORD PTR [rax]
    efe9:	00 00                	add    BYTE PTR [rax],al
    efeb:	00 00                	add    BYTE PTR [rax],al
    efed:	45 0e                	rex.RB (bad) 
    efef:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eff5:	67 0c 07             	addr32 or al,0x7
    eff8:	08 00                	or     BYTE PTR [rax],al
    effa:	00 00                	add    BYTE PTR [rax],al
    effc:	1c 00                	sbb    al,0x0
    effe:	00 00                	add    BYTE PTR [rax],al
    f000:	88 0c 00             	mov    BYTE PTR [rax+rax*1],cl
    f003:	00 9d a5 ff ff 67    	add    BYTE PTR [rbp+0x67ffffa5],bl
    f009:	00 00                	add    BYTE PTR [rax],al
    f00b:	00 00                	add    BYTE PTR [rax],al
    f00d:	45 0e                	rex.RB (bad) 
    f00f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f015:	02 5e 0c             	add    bl,BYTE PTR [rsi+0xc]
    f018:	07                   	(bad)  
    f019:	08 00                	or     BYTE PTR [rax],al
    f01b:	00 20                	add    BYTE PTR [rax],ah
    f01d:	00 00                	add    BYTE PTR [rax],al
    f01f:	00 a8 0c 00 00 e4    	add    BYTE PTR [rax-0x1bfffff4],ch
    f025:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    f026:	ff                   	(bad)  
    f027:	ff 0c 0f             	dec    DWORD PTR [rdi+rcx*1]
    f02a:	00 00                	add    BYTE PTR [rax],al
    f02c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f02f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f035:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    f039:	fb                   	sti    
    f03a:	0e                   	(bad)  
    f03b:	0c 07                	or     al,0x7
    f03d:	08 00                	or     BYTE PTR [rax],al
    f03f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f042:	00 00                	add    BYTE PTR [rax],al
    f044:	cc                   	int3   
    f045:	0c 00                	or     al,0x0
    f047:	00 cc                	add    ah,cl
    f049:	b4 ff                	mov    ah,0xff
    f04b:	ff 46 00             	inc    DWORD PTR [rsi+0x0]
    f04e:	00 00                	add    BYTE PTR [rax],al
    f050:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f053:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f059:	7d 0c                	jge    f067 <__GNU_EH_FRAME_HDR+0x1083>
    f05b:	07                   	(bad)  
    f05c:	08 00                	or     BYTE PTR [rax],al
    f05e:	00 00                	add    BYTE PTR [rax],al
    f060:	24 00                	and    al,0x0
    f062:	00 00                	add    BYTE PTR [rax],al
    f064:	ec                   	in     al,dx
    f065:	0c 00                	or     al,0x0
    f067:	00 f2                	add    dl,dh
    f069:	b4 ff                	mov    ah,0xff
    f06b:	ff                   	(bad)  
    f06c:	3b 02                	cmp    eax,DWORD PTR [rdx]
    f06e:	00 00                	add    BYTE PTR [rax],al
    f070:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f073:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f079:	4b 8f 03             	rex.WXB pop QWORD PTR [r11]
    f07c:	8e 04 8c             	mov    es,WORD PTR [rsp+rcx*4]
    f07f:	05 83 06 03 27       	add    eax,0x27030683
    f084:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    f087:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
    f08a:	00 00                	add    BYTE PTR [rax],al
    f08c:	14 0d                	adc    al,0xd
    f08e:	00 00                	add    BYTE PTR [rax],al
    f090:	05 b7 ff ff a5       	add    eax,0xa5ffffb7
    f095:	01 00                	add    DWORD PTR [rax],eax
    f097:	00 00                	add    BYTE PTR [rax],al
    f099:	45 0e                	rex.RB (bad) 
    f09b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f0a1:	03 9c 01 0c 07 08 00 	add    ebx,DWORD PTR [rcx+rax*1+0x8070c]
    f0a8:	1c 00                	sbb    al,0x0
    f0aa:	00 00                	add    BYTE PTR [rax],al
    f0ac:	34 0d                	xor    al,0xd
    f0ae:	00 00                	add    BYTE PTR [rax],al
    f0b0:	8a b8 ff ff 12 01    	mov    bh,BYTE PTR [rax+0x112ffff]
    f0b6:	00 00                	add    BYTE PTR [rax],al
    f0b8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f0bb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f0c1:	03 09                	add    ecx,DWORD PTR [rcx]
    f0c3:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f0c6:	08 00                	or     BYTE PTR [rax],al
    f0c8:	24 00                	and    al,0x0
    f0ca:	00 00                	add    BYTE PTR [rax],al
    f0cc:	54                   	push   rsp
    f0cd:	0d 00 00 7c b9       	or     eax,0xb97c0000
    f0d2:	ff                   	(bad)  
    f0d3:	ff                   	(bad)  
    f0d4:	bc 00 00 00 00       	mov    esp,0x0
    f0d9:	45 0e                	rex.RB (bad) 
    f0db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f0e1:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    f0e5:	ae                   	scas   al,BYTE PTR es:[rdi]
    f0e6:	0c 07                	or     al,0x7
    f0e8:	08 00                	or     BYTE PTR [rax],al
    f0ea:	00 00                	add    BYTE PTR [rax],al
    f0ec:	00 00                	add    BYTE PTR [rax],al
    f0ee:	00 00                	add    BYTE PTR [rax],al
    f0f0:	24 00                	and    al,0x0
    f0f2:	00 00                	add    BYTE PTR [rax],al
    f0f4:	7c 0d                	jl     f103 <__GNU_EH_FRAME_HDR+0x111f>
    f0f6:	00 00                	add    BYTE PTR [rax],al
    f0f8:	10 ba ff ff 9b 01    	adc    BYTE PTR [rdx+0x19bffff],bh
    f0fe:	00 00                	add    BYTE PTR [rax],al
    f100:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f103:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f109:	47 8c 03             	rex.RXB mov WORD PTR [r11],es
    f10c:	83 04 03 8b          	add    DWORD PTR [rbx+rax*1],0xffffff8b
    f110:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f113:	08 00                	or     BYTE PTR [rax],al
    f115:	00 00                	add    BYTE PTR [rax],al
    f117:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f11a:	00 00                	add    BYTE PTR [rax],al
    f11c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    f11d:	0d 00 00 83 bb       	or     eax,0xbb830000
    f122:	ff                   	(bad)  
    f123:	ff a5 00 00 00 00    	jmp    QWORD PTR [rbp+0x0]
    f129:	45 0e                	rex.RB (bad) 
    f12b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f131:	02 9c 0c 07 08 00 00 	add    bl,BYTE PTR [rsp+rcx*1+0x807]
    f138:	1c 00                	sbb    al,0x0
    f13a:	00 00                	add    BYTE PTR [rax],al
    f13c:	c4                   	(bad)  
    f13d:	0d 00 00 08 bc       	or     eax,0xbc080000
    f142:	ff                   	(bad)  
    f143:	ff 43 01             	inc    DWORD PTR [rbx+0x1]
    f146:	00 00                	add    BYTE PTR [rax],al
    f148:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f14b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f151:	03 3a                	add    edi,DWORD PTR [rdx]
    f153:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f156:	08 00                	or     BYTE PTR [rax],al
    f158:	1c 00                	sbb    al,0x0
    f15a:	00 00                	add    BYTE PTR [rax],al
    f15c:	e4 0d                	in     al,0xd
    f15e:	00 00                	add    BYTE PTR [rax],al
    f160:	2b bd ff ff f3 00    	sub    edi,DWORD PTR [rbp+0xf3ffff]
    f166:	00 00                	add    BYTE PTR [rax],al
    f168:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f16b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f171:	02 ea                	add    ch,dl
    f173:	0c 07                	or     al,0x7
    f175:	08 00                	or     BYTE PTR [rax],al
    f177:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f17a:	00 00                	add    BYTE PTR [rax],al
    f17c:	04 0e                	add    al,0xe
    f17e:	00 00                	add    BYTE PTR [rax],al
    f180:	fe                   	(bad)  
    f181:	bd ff ff 8e 02       	mov    ebp,0x28effff
    f186:	00 00                	add    BYTE PTR [rax],al
    f188:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f18b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f191:	4a 8c 03             	rex.WX mov WORD PTR [rbx],es
    f194:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
    f198:	1c 00                	sbb    al,0x0
    f19a:	00 00                	add    BYTE PTR [rax],al
    f19c:	24 0e                	and    al,0xe
    f19e:	00 00                	add    BYTE PTR [rax],al
    f1a0:	6c                   	ins    BYTE PTR es:[rdi],dx
    f1a1:	c0 ff ff             	sar    bh,0xff
    f1a4:	6a 00                	push   0x0
    f1a6:	00 00                	add    BYTE PTR [rax],al
    f1a8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f1ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f1b1:	02 61 0c             	add    ah,BYTE PTR [rcx+0xc]
    f1b4:	07                   	(bad)  
    f1b5:	08 00                	or     BYTE PTR [rax],al
    f1b7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f1ba:	00 00                	add    BYTE PTR [rax],al
    f1bc:	44 0e                	rex.R (bad) 
    f1be:	00 00                	add    BYTE PTR [rax],al
    f1c0:	b6 c0                	mov    dh,0xc0
    f1c2:	ff                   	(bad)  
    f1c3:	ff 6e 00             	jmp    FWORD PTR [rsi+0x0]
    f1c6:	00 00                	add    BYTE PTR [rax],al
    f1c8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f1cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f1d1:	02 65 0c             	add    ah,BYTE PTR [rbp+0xc]
    f1d4:	07                   	(bad)  
    f1d5:	08 00                	or     BYTE PTR [rax],al
    f1d7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f1da:	00 00                	add    BYTE PTR [rax],al
    f1dc:	64 0e                	fs (bad) 
    f1de:	00 00                	add    BYTE PTR [rax],al
    f1e0:	04 c1                	add    al,0xc1
    f1e2:	ff                   	(bad)  
    f1e3:	ff 70 00             	push   QWORD PTR [rax+0x0]
    f1e6:	00 00                	add    BYTE PTR [rax],al
    f1e8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f1eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f1f1:	02 67 0c             	add    ah,BYTE PTR [rdi+0xc]
    f1f4:	07                   	(bad)  
    f1f5:	08 00                	or     BYTE PTR [rax],al
    f1f7:	00 20                	add    BYTE PTR [rax],ah
    f1f9:	00 00                	add    BYTE PTR [rax],al
    f1fb:	00 84 0e 00 00 54 c1 	add    BYTE PTR [rsi+rcx*1-0x3eac0000],al
    f202:	ff                   	(bad)  
    f203:	ff 8d 01 00 00 00    	dec    DWORD PTR [rbp+0x1]
    f209:	45 0e                	rex.RB (bad) 
    f20b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f211:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    f215:	7f 01                	jg     f218 <__GNU_EH_FRAME_HDR+0x1234>
    f217:	0c 07                	or     al,0x7
    f219:	08 00                	or     BYTE PTR [rax],al
	...

000000000000f21c <__FRAME_END__>:
    f21c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .tbss:

0000000000010b80 <buffer.0+0x10b00>:
	...

Disassembly of section .init_array:

0000000000010b80 <__frame_dummy_init_array_entry>:
   10b80:	60                   	(bad)  
   10b81:	29 00                	sub    DWORD PTR [rax],eax
   10b83:	00 00                	add    BYTE PTR [rax],al
   10b85:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000010b88 <__do_global_dtors_aux_fini_array_entry>:
   10b88:	20 29                	and    BYTE PTR [rcx],ch
   10b8a:	00 00                	add    BYTE PTR [rax],al
   10b8c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000010b90 <_DYNAMIC>:
   10b90:	01 00                	add    DWORD PTR [rax],eax
   10b92:	00 00                	add    BYTE PTR [rax],al
   10b94:	00 00                	add    BYTE PTR [rax],al
   10b96:	00 00                	add    BYTE PTR [rax],al
   10b98:	9e                   	sahf   
   10b99:	02 00                	add    al,BYTE PTR [rax]
   10b9b:	00 00                	add    BYTE PTR [rax],al
   10b9d:	00 00                	add    BYTE PTR [rax],al
   10b9f:	00 01                	add    BYTE PTR [rcx],al
   10ba1:	00 00                	add    BYTE PTR [rax],al
   10ba3:	00 00                	add    BYTE PTR [rax],al
   10ba5:	00 00                	add    BYTE PTR [rax],al
   10ba7:	00 ad 02 00 00 00    	add    BYTE PTR [rbp+0x2],ch
   10bad:	00 00                	add    BYTE PTR [rax],al
   10baf:	00 01                	add    BYTE PTR [rcx],al
   10bb1:	00 00                	add    BYTE PTR [rax],al
   10bb3:	00 00                	add    BYTE PTR [rax],al
   10bb5:	00 00                	add    BYTE PTR [rax],al
   10bb7:	00 bd 02 00 00 00    	add    BYTE PTR [rbp+0x2],bh
   10bbd:	00 00                	add    BYTE PTR [rax],al
   10bbf:	00 01                	add    BYTE PTR [rcx],al
   10bc1:	00 00                	add    BYTE PTR [rax],al
   10bc3:	00 00                	add    BYTE PTR [rax],al
   10bc5:	00 00                	add    BYTE PTR [rax],al
   10bc7:	00 cc                	add    ah,cl
   10bc9:	02 00                	add    al,BYTE PTR [rax]
   10bcb:	00 00                	add    BYTE PTR [rax],al
   10bcd:	00 00                	add    BYTE PTR [rax],al
   10bcf:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
   10bd2:	00 00                	add    BYTE PTR [rax],al
   10bd4:	00 00                	add    BYTE PTR [rax],al
   10bd6:	00 00                	add    BYTE PTR [rax],al
   10bd8:	00 20                	add    BYTE PTR [rax],ah
   10bda:	00 00                	add    BYTE PTR [rax],al
   10bdc:	00 00                	add    BYTE PTR [rax],al
   10bde:	00 00                	add    BYTE PTR [rax],al
   10be0:	0d 00 00 00 00       	or     eax,0x0
   10be5:	00 00                	add    BYTE PTR [rax],al
   10be7:	00 e4                	add    ah,ah
   10be9:	b4 00                	mov    ah,0x0
   10beb:	00 00                	add    BYTE PTR [rax],al
   10bed:	00 00                	add    BYTE PTR [rax],al
   10bef:	00 19                	add    BYTE PTR [rcx],bl
   10bf1:	00 00                	add    BYTE PTR [rax],al
   10bf3:	00 00                	add    BYTE PTR [rax],al
   10bf5:	00 00                	add    BYTE PTR [rax],al
   10bf7:	00 80 0b 01 00 00    	add    BYTE PTR [rax+0x10b],al
   10bfd:	00 00                	add    BYTE PTR [rax],al
   10bff:	00 1b                	add    BYTE PTR [rbx],bl
   10c01:	00 00                	add    BYTE PTR [rax],al
   10c03:	00 00                	add    BYTE PTR [rax],al
   10c05:	00 00                	add    BYTE PTR [rax],al
   10c07:	00 08                	add    BYTE PTR [rax],cl
   10c09:	00 00                	add    BYTE PTR [rax],al
   10c0b:	00 00                	add    BYTE PTR [rax],al
   10c0d:	00 00                	add    BYTE PTR [rax],al
   10c0f:	00 1a                	add    BYTE PTR [rdx],bl
   10c11:	00 00                	add    BYTE PTR [rax],al
   10c13:	00 00                	add    BYTE PTR [rax],al
   10c15:	00 00                	add    BYTE PTR [rax],al
   10c17:	00 88 0b 01 00 00    	add    BYTE PTR [rax+0x10b],cl
   10c1d:	00 00                	add    BYTE PTR [rax],al
   10c1f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   10c22:	00 00                	add    BYTE PTR [rax],al
   10c24:	00 00                	add    BYTE PTR [rax],al
   10c26:	00 00                	add    BYTE PTR [rax],al
   10c28:	08 00                	or     BYTE PTR [rax],al
   10c2a:	00 00                	add    BYTE PTR [rax],al
   10c2c:	00 00                	add    BYTE PTR [rax],al
   10c2e:	00 00                	add    BYTE PTR [rax],al
   10c30:	f5                   	cmc    
   10c31:	fe                   	(bad)  
   10c32:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10c35:	00 00                	add    BYTE PTR [rax],al
   10c37:	00 e8                	add    al,ch
   10c39:	03 00                	add    eax,DWORD PTR [rax]
   10c3b:	00 00                	add    BYTE PTR [rax],al
   10c3d:	00 00                	add    BYTE PTR [rax],al
   10c3f:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 10c45 <_DYNAMIC+0xb5>
   10c45:	00 00                	add    BYTE PTR [rax],al
   10c47:	00 08                	add    BYTE PTR [rax],cl
   10c49:	0b 00                	or     eax,DWORD PTR [rax]
   10c4b:	00 00                	add    BYTE PTR [rax],al
   10c4d:	00 00                	add    BYTE PTR [rax],al
   10c4f:	00 06                	add    BYTE PTR [rsi],al
   10c51:	00 00                	add    BYTE PTR [rax],al
   10c53:	00 00                	add    BYTE PTR [rax],al
   10c55:	00 00                	add    BYTE PTR [rax],al
   10c57:	00 18                	add    BYTE PTR [rax],bl
   10c59:	04 00                	add    al,0x0
   10c5b:	00 00                	add    BYTE PTR [rax],al
   10c5d:	00 00                	add    BYTE PTR [rax],al
   10c5f:	00 0a                	add    BYTE PTR [rdx],cl
   10c61:	00 00                	add    BYTE PTR [rax],al
   10c63:	00 00                	add    BYTE PTR [rax],al
   10c65:	00 00                	add    BYTE PTR [rax],al
   10c67:	00 0b                	add    BYTE PTR [rbx],cl
   10c69:	03 00                	add    eax,DWORD PTR [rax]
   10c6b:	00 00                	add    BYTE PTR [rax],al
   10c6d:	00 00                	add    BYTE PTR [rax],al
   10c6f:	00 0b                	add    BYTE PTR [rbx],cl
   10c71:	00 00                	add    BYTE PTR [rax],al
   10c73:	00 00                	add    BYTE PTR [rax],al
   10c75:	00 00                	add    BYTE PTR [rax],al
   10c77:	00 18                	add    BYTE PTR [rax],bl
   10c79:	00 00                	add    BYTE PTR [rax],al
   10c7b:	00 00                	add    BYTE PTR [rax],al
   10c7d:	00 00                	add    BYTE PTR [rax],al
   10c7f:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 10c85 <_DYNAMIC+0xf5>
	...
   10c8d:	00 00                	add    BYTE PTR [rax],al
   10c8f:	00 03                	add    BYTE PTR [rbx],al
   10c91:	00 00                	add    BYTE PTR [rax],al
   10c93:	00 00                	add    BYTE PTR [rax],al
   10c95:	00 00                	add    BYTE PTR [rax],al
   10c97:	00 b0 0d 01 00 00    	add    BYTE PTR [rax+0x10d],dh
   10c9d:	00 00                	add    BYTE PTR [rax],al
   10c9f:	00 02                	add    BYTE PTR [rdx],al
   10ca1:	00 00                	add    BYTE PTR [rax],al
   10ca3:	00 00                	add    BYTE PTR [rax],al
   10ca5:	00 00                	add    BYTE PTR [rax],al
   10ca7:	00 30                	add    BYTE PTR [rax],dh
   10ca9:	06                   	(bad)  
   10caa:	00 00                	add    BYTE PTR [rax],al
   10cac:	00 00                	add    BYTE PTR [rax],al
   10cae:	00 00                	add    BYTE PTR [rax],al
   10cb0:	14 00                	adc    al,0x0
   10cb2:	00 00                	add    BYTE PTR [rax],al
   10cb4:	00 00                	add    BYTE PTR [rax],al
   10cb6:	00 00                	add    BYTE PTR [rax],al
   10cb8:	07                   	(bad)  
   10cb9:	00 00                	add    BYTE PTR [rax],al
   10cbb:	00 00                	add    BYTE PTR [rax],al
   10cbd:	00 00                	add    BYTE PTR [rax],al
   10cbf:	00 17                	add    BYTE PTR [rdi],dl
   10cc1:	00 00                	add    BYTE PTR [rax],al
   10cc3:	00 00                	add    BYTE PTR [rax],al
   10cc5:	00 00                	add    BYTE PTR [rax],al
   10cc7:	00 38                	add    BYTE PTR [rax],bh
   10cc9:	10 00                	adc    BYTE PTR [rax],al
   10ccb:	00 00                	add    BYTE PTR [rax],al
   10ccd:	00 00                	add    BYTE PTR [rax],al
   10ccf:	00 07                	add    BYTE PTR [rdi],al
   10cd1:	00 00                	add    BYTE PTR [rax],al
   10cd3:	00 00                	add    BYTE PTR [rax],al
   10cd5:	00 00                	add    BYTE PTR [rax],al
   10cd7:	00 18                	add    BYTE PTR [rax],bl
   10cd9:	0f 00 00             	sldt   WORD PTR [rax]
   10cdc:	00 00                	add    BYTE PTR [rax],al
   10cde:	00 00                	add    BYTE PTR [rax],al
   10ce0:	08 00                	or     BYTE PTR [rax],al
   10ce2:	00 00                	add    BYTE PTR [rax],al
   10ce4:	00 00                	add    BYTE PTR [rax],al
   10ce6:	00 00                	add    BYTE PTR [rax],al
   10ce8:	20 01                	and    BYTE PTR [rcx],al
   10cea:	00 00                	add    BYTE PTR [rax],al
   10cec:	00 00                	add    BYTE PTR [rax],al
   10cee:	00 00                	add    BYTE PTR [rax],al
   10cf0:	09 00                	or     DWORD PTR [rax],eax
   10cf2:	00 00                	add    BYTE PTR [rax],al
   10cf4:	00 00                	add    BYTE PTR [rax],al
   10cf6:	00 00                	add    BYTE PTR [rax],al
   10cf8:	18 00                	sbb    BYTE PTR [rax],al
   10cfa:	00 00                	add    BYTE PTR [rax],al
   10cfc:	00 00                	add    BYTE PTR [rax],al
   10cfe:	00 00                	add    BYTE PTR [rax],al
   10d00:	1e                   	(bad)  
   10d01:	00 00                	add    BYTE PTR [rax],al
   10d03:	00 00                	add    BYTE PTR [rax],al
   10d05:	00 00                	add    BYTE PTR [rax],al
   10d07:	00 08                	add    BYTE PTR [rax],cl
   10d09:	00 00                	add    BYTE PTR [rax],al
   10d0b:	00 00                	add    BYTE PTR [rax],al
   10d0d:	00 00                	add    BYTE PTR [rax],al
   10d0f:	00 fb                	add    bl,bh
   10d11:	ff                   	(bad)  
   10d12:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d15:	00 00                	add    BYTE PTR [rax],al
   10d17:	00 01                	add    BYTE PTR [rcx],al
   10d19:	00 00                	add    BYTE PTR [rax],al
   10d1b:	08 00                	or     BYTE PTR [rax],al
   10d1d:	00 00                	add    BYTE PTR [rax],al
   10d1f:	00 fe                	add    dh,bh
   10d21:	ff                   	(bad)  
   10d22:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d25:	00 00                	add    BYTE PTR [rax],al
   10d27:	00 a8 0e 00 00 00    	add    BYTE PTR [rax+0xe],ch
   10d2d:	00 00                	add    BYTE PTR [rax],al
   10d2f:	00 ff                	add    bh,bh
   10d31:	ff                   	(bad)  
   10d32:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d35:	00 00                	add    BYTE PTR [rax],al
   10d37:	00 02                	add    BYTE PTR [rdx],al
   10d39:	00 00                	add    BYTE PTR [rax],al
   10d3b:	00 00                	add    BYTE PTR [rax],al
   10d3d:	00 00                	add    BYTE PTR [rax],al
   10d3f:	00 f0                	add    al,dh
   10d41:	ff                   	(bad)  
   10d42:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d45:	00 00                	add    BYTE PTR [rax],al
   10d47:	00 14 0e             	add    BYTE PTR [rsi+rcx*1],dl
   10d4a:	00 00                	add    BYTE PTR [rax],al
   10d4c:	00 00                	add    BYTE PTR [rax],al
   10d4e:	00 00                	add    BYTE PTR [rax],al
   10d50:	f9                   	stc    
   10d51:	ff                   	(bad)  
   10d52:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d55:	00 00                	add    BYTE PTR [rax],al
   10d57:	00 06                	add    BYTE PTR [rsi],al
	...

Disassembly of section .got:

0000000000010db0 <_GLOBAL_OFFSET_TABLE_>:
   10db0:	90                   	nop
   10db1:	0b 01                	or     eax,DWORD PTR [rcx]
	...
   10dc7:	00 30                	add    BYTE PTR [rax],dh
   10dc9:	20 00                	and    BYTE PTR [rax],al
   10dcb:	00 00                	add    BYTE PTR [rax],al
   10dcd:	00 00                	add    BYTE PTR [rax],al
   10dcf:	00 40 20             	add    BYTE PTR [rax+0x20],al
   10dd2:	00 00                	add    BYTE PTR [rax],al
   10dd4:	00 00                	add    BYTE PTR [rax],al
   10dd6:	00 00                	add    BYTE PTR [rax],al
   10dd8:	50                   	push   rax
   10dd9:	20 00                	and    BYTE PTR [rax],al
   10ddb:	00 00                	add    BYTE PTR [rax],al
   10ddd:	00 00                	add    BYTE PTR [rax],al
   10ddf:	00 60 20             	add    BYTE PTR [rax+0x20],ah
   10de2:	00 00                	add    BYTE PTR [rax],al
   10de4:	00 00                	add    BYTE PTR [rax],al
   10de6:	00 00                	add    BYTE PTR [rax],al
   10de8:	70 20                	jo     10e0a <_GLOBAL_OFFSET_TABLE_+0x5a>
   10dea:	00 00                	add    BYTE PTR [rax],al
   10dec:	00 00                	add    BYTE PTR [rax],al
   10dee:	00 00                	add    BYTE PTR [rax],al
   10df0:	80 20 00             	and    BYTE PTR [rax],0x0
   10df3:	00 00                	add    BYTE PTR [rax],al
   10df5:	00 00                	add    BYTE PTR [rax],al
   10df7:	00 90 20 00 00 00    	add    BYTE PTR [rax+0x20],dl
   10dfd:	00 00                	add    BYTE PTR [rax],al
   10dff:	00 a0 20 00 00 00    	add    BYTE PTR [rax+0x20],ah
   10e05:	00 00                	add    BYTE PTR [rax],al
   10e07:	00 b0 20 00 00 00    	add    BYTE PTR [rax+0x20],dh
   10e0d:	00 00                	add    BYTE PTR [rax],al
   10e0f:	00 c0                	add    al,al
   10e11:	20 00                	and    BYTE PTR [rax],al
   10e13:	00 00                	add    BYTE PTR [rax],al
   10e15:	00 00                	add    BYTE PTR [rax],al
   10e17:	00 d0                	add    al,dl
   10e19:	20 00                	and    BYTE PTR [rax],al
   10e1b:	00 00                	add    BYTE PTR [rax],al
   10e1d:	00 00                	add    BYTE PTR [rax],al
   10e1f:	00 e0                	add    al,ah
   10e21:	20 00                	and    BYTE PTR [rax],al
   10e23:	00 00                	add    BYTE PTR [rax],al
   10e25:	00 00                	add    BYTE PTR [rax],al
   10e27:	00 f0                	add    al,dh
   10e29:	20 00                	and    BYTE PTR [rax],al
   10e2b:	00 00                	add    BYTE PTR [rax],al
   10e2d:	00 00                	add    BYTE PTR [rax],al
   10e2f:	00 00                	add    BYTE PTR [rax],al
   10e31:	21 00                	and    DWORD PTR [rax],eax
   10e33:	00 00                	add    BYTE PTR [rax],al
   10e35:	00 00                	add    BYTE PTR [rax],al
   10e37:	00 10                	add    BYTE PTR [rax],dl
   10e39:	21 00                	and    DWORD PTR [rax],eax
   10e3b:	00 00                	add    BYTE PTR [rax],al
   10e3d:	00 00                	add    BYTE PTR [rax],al
   10e3f:	00 20                	add    BYTE PTR [rax],ah
   10e41:	21 00                	and    DWORD PTR [rax],eax
   10e43:	00 00                	add    BYTE PTR [rax],al
   10e45:	00 00                	add    BYTE PTR [rax],al
   10e47:	00 30                	add    BYTE PTR [rax],dh
   10e49:	21 00                	and    DWORD PTR [rax],eax
   10e4b:	00 00                	add    BYTE PTR [rax],al
   10e4d:	00 00                	add    BYTE PTR [rax],al
   10e4f:	00 40 21             	add    BYTE PTR [rax+0x21],al
   10e52:	00 00                	add    BYTE PTR [rax],al
   10e54:	00 00                	add    BYTE PTR [rax],al
   10e56:	00 00                	add    BYTE PTR [rax],al
   10e58:	50                   	push   rax
   10e59:	21 00                	and    DWORD PTR [rax],eax
   10e5b:	00 00                	add    BYTE PTR [rax],al
   10e5d:	00 00                	add    BYTE PTR [rax],al
   10e5f:	00 60 21             	add    BYTE PTR [rax+0x21],ah
   10e62:	00 00                	add    BYTE PTR [rax],al
   10e64:	00 00                	add    BYTE PTR [rax],al
   10e66:	00 00                	add    BYTE PTR [rax],al
   10e68:	70 21                	jo     10e8b <_GLOBAL_OFFSET_TABLE_+0xdb>
   10e6a:	00 00                	add    BYTE PTR [rax],al
   10e6c:	00 00                	add    BYTE PTR [rax],al
   10e6e:	00 00                	add    BYTE PTR [rax],al
   10e70:	80 21 00             	and    BYTE PTR [rcx],0x0
   10e73:	00 00                	add    BYTE PTR [rax],al
   10e75:	00 00                	add    BYTE PTR [rax],al
   10e77:	00 90 21 00 00 00    	add    BYTE PTR [rax+0x21],dl
   10e7d:	00 00                	add    BYTE PTR [rax],al
   10e7f:	00 a0 21 00 00 00    	add    BYTE PTR [rax+0x21],ah
   10e85:	00 00                	add    BYTE PTR [rax],al
   10e87:	00 b0 21 00 00 00    	add    BYTE PTR [rax+0x21],dh
   10e8d:	00 00                	add    BYTE PTR [rax],al
   10e8f:	00 c0                	add    al,al
   10e91:	21 00                	and    DWORD PTR [rax],eax
   10e93:	00 00                	add    BYTE PTR [rax],al
   10e95:	00 00                	add    BYTE PTR [rax],al
   10e97:	00 d0                	add    al,dl
   10e99:	21 00                	and    DWORD PTR [rax],eax
   10e9b:	00 00                	add    BYTE PTR [rax],al
   10e9d:	00 00                	add    BYTE PTR [rax],al
   10e9f:	00 e0                	add    al,ah
   10ea1:	21 00                	and    DWORD PTR [rax],eax
   10ea3:	00 00                	add    BYTE PTR [rax],al
   10ea5:	00 00                	add    BYTE PTR [rax],al
   10ea7:	00 f0                	add    al,dh
   10ea9:	21 00                	and    DWORD PTR [rax],eax
   10eab:	00 00                	add    BYTE PTR [rax],al
   10ead:	00 00                	add    BYTE PTR [rax],al
   10eaf:	00 00                	add    BYTE PTR [rax],al
   10eb1:	22 00                	and    al,BYTE PTR [rax]
   10eb3:	00 00                	add    BYTE PTR [rax],al
   10eb5:	00 00                	add    BYTE PTR [rax],al
   10eb7:	00 10                	add    BYTE PTR [rax],dl
   10eb9:	22 00                	and    al,BYTE PTR [rax]
   10ebb:	00 00                	add    BYTE PTR [rax],al
   10ebd:	00 00                	add    BYTE PTR [rax],al
   10ebf:	00 20                	add    BYTE PTR [rax],ah
   10ec1:	22 00                	and    al,BYTE PTR [rax]
   10ec3:	00 00                	add    BYTE PTR [rax],al
   10ec5:	00 00                	add    BYTE PTR [rax],al
   10ec7:	00 30                	add    BYTE PTR [rax],dh
   10ec9:	22 00                	and    al,BYTE PTR [rax]
   10ecb:	00 00                	add    BYTE PTR [rax],al
   10ecd:	00 00                	add    BYTE PTR [rax],al
   10ecf:	00 40 22             	add    BYTE PTR [rax+0x22],al
   10ed2:	00 00                	add    BYTE PTR [rax],al
   10ed4:	00 00                	add    BYTE PTR [rax],al
   10ed6:	00 00                	add    BYTE PTR [rax],al
   10ed8:	50                   	push   rax
   10ed9:	22 00                	and    al,BYTE PTR [rax]
   10edb:	00 00                	add    BYTE PTR [rax],al
   10edd:	00 00                	add    BYTE PTR [rax],al
   10edf:	00 60 22             	add    BYTE PTR [rax+0x22],ah
   10ee2:	00 00                	add    BYTE PTR [rax],al
   10ee4:	00 00                	add    BYTE PTR [rax],al
   10ee6:	00 00                	add    BYTE PTR [rax],al
   10ee8:	70 22                	jo     10f0c <_GLOBAL_OFFSET_TABLE_+0x15c>
   10eea:	00 00                	add    BYTE PTR [rax],al
   10eec:	00 00                	add    BYTE PTR [rax],al
   10eee:	00 00                	add    BYTE PTR [rax],al
   10ef0:	80 22 00             	and    BYTE PTR [rdx],0x0
   10ef3:	00 00                	add    BYTE PTR [rax],al
   10ef5:	00 00                	add    BYTE PTR [rax],al
   10ef7:	00 90 22 00 00 00    	add    BYTE PTR [rax+0x22],dl
   10efd:	00 00                	add    BYTE PTR [rax],al
   10eff:	00 a0 22 00 00 00    	add    BYTE PTR [rax+0x22],ah
   10f05:	00 00                	add    BYTE PTR [rax],al
   10f07:	00 b0 22 00 00 00    	add    BYTE PTR [rax+0x22],dh
   10f0d:	00 00                	add    BYTE PTR [rax],al
   10f0f:	00 c0                	add    al,al
   10f11:	22 00                	and    al,BYTE PTR [rax]
   10f13:	00 00                	add    BYTE PTR [rax],al
   10f15:	00 00                	add    BYTE PTR [rax],al
   10f17:	00 d0                	add    al,dl
   10f19:	22 00                	and    al,BYTE PTR [rax]
   10f1b:	00 00                	add    BYTE PTR [rax],al
   10f1d:	00 00                	add    BYTE PTR [rax],al
   10f1f:	00 e0                	add    al,ah
   10f21:	22 00                	and    al,BYTE PTR [rax]
   10f23:	00 00                	add    BYTE PTR [rax],al
   10f25:	00 00                	add    BYTE PTR [rax],al
   10f27:	00 f0                	add    al,dh
   10f29:	22 00                	and    al,BYTE PTR [rax]
   10f2b:	00 00                	add    BYTE PTR [rax],al
   10f2d:	00 00                	add    BYTE PTR [rax],al
   10f2f:	00 00                	add    BYTE PTR [rax],al
   10f31:	23 00                	and    eax,DWORD PTR [rax]
   10f33:	00 00                	add    BYTE PTR [rax],al
   10f35:	00 00                	add    BYTE PTR [rax],al
   10f37:	00 10                	add    BYTE PTR [rax],dl
   10f39:	23 00                	and    eax,DWORD PTR [rax]
   10f3b:	00 00                	add    BYTE PTR [rax],al
   10f3d:	00 00                	add    BYTE PTR [rax],al
   10f3f:	00 20                	add    BYTE PTR [rax],ah
   10f41:	23 00                	and    eax,DWORD PTR [rax]
   10f43:	00 00                	add    BYTE PTR [rax],al
   10f45:	00 00                	add    BYTE PTR [rax],al
   10f47:	00 30                	add    BYTE PTR [rax],dh
   10f49:	23 00                	and    eax,DWORD PTR [rax]
   10f4b:	00 00                	add    BYTE PTR [rax],al
   10f4d:	00 00                	add    BYTE PTR [rax],al
   10f4f:	00 40 23             	add    BYTE PTR [rax+0x23],al
   10f52:	00 00                	add    BYTE PTR [rax],al
   10f54:	00 00                	add    BYTE PTR [rax],al
   10f56:	00 00                	add    BYTE PTR [rax],al
   10f58:	50                   	push   rax
   10f59:	23 00                	and    eax,DWORD PTR [rax]
   10f5b:	00 00                	add    BYTE PTR [rax],al
   10f5d:	00 00                	add    BYTE PTR [rax],al
   10f5f:	00 60 23             	add    BYTE PTR [rax+0x23],ah
   10f62:	00 00                	add    BYTE PTR [rax],al
   10f64:	00 00                	add    BYTE PTR [rax],al
   10f66:	00 00                	add    BYTE PTR [rax],al
   10f68:	70 23                	jo     10f8d <_GLOBAL_OFFSET_TABLE_+0x1dd>
   10f6a:	00 00                	add    BYTE PTR [rax],al
   10f6c:	00 00                	add    BYTE PTR [rax],al
   10f6e:	00 00                	add    BYTE PTR [rax],al
   10f70:	80 23 00             	and    BYTE PTR [rbx],0x0
   10f73:	00 00                	add    BYTE PTR [rax],al
   10f75:	00 00                	add    BYTE PTR [rax],al
   10f77:	00 90 23 00 00 00    	add    BYTE PTR [rax+0x23],dl
   10f7d:	00 00                	add    BYTE PTR [rax],al
   10f7f:	00 a0 23 00 00 00    	add    BYTE PTR [rax+0x23],ah
   10f85:	00 00                	add    BYTE PTR [rax],al
   10f87:	00 b0 23 00 00 00    	add    BYTE PTR [rax+0x23],dh
   10f8d:	00 00                	add    BYTE PTR [rax],al
   10f8f:	00 c0                	add    al,al
   10f91:	23 00                	and    eax,DWORD PTR [rax]
   10f93:	00 00                	add    BYTE PTR [rax],al
   10f95:	00 00                	add    BYTE PTR [rax],al
   10f97:	00 d0                	add    al,dl
   10f99:	23 00                	and    eax,DWORD PTR [rax]
   10f9b:	00 00                	add    BYTE PTR [rax],al
   10f9d:	00 00                	add    BYTE PTR [rax],al
   10f9f:	00 e0                	add    al,ah
   10fa1:	23 00                	and    eax,DWORD PTR [rax]
   10fa3:	00 00                	add    BYTE PTR [rax],al
   10fa5:	00 00                	add    BYTE PTR [rax],al
   10fa7:	00 f0                	add    al,dh
   10fa9:	23 00                	and    eax,DWORD PTR [rax]
   10fab:	00 00                	add    BYTE PTR [rax],al
   10fad:	00 00                	add    BYTE PTR [rax],al
   10faf:	00 00                	add    BYTE PTR [rax],al
   10fb1:	24 00                	and    al,0x0
   10fb3:	00 00                	add    BYTE PTR [rax],al
   10fb5:	00 00                	add    BYTE PTR [rax],al
   10fb7:	00 10                	add    BYTE PTR [rax],dl
   10fb9:	24 00                	and    al,0x0
   10fbb:	00 00                	add    BYTE PTR [rax],al
   10fbd:	00 00                	add    BYTE PTR [rax],al
   10fbf:	00 20                	add    BYTE PTR [rax],ah
   10fc1:	24 00                	and    al,0x0
   10fc3:	00 00                	add    BYTE PTR [rax],al
   10fc5:	00 00                	add    BYTE PTR [rax],al
   10fc7:	00 30                	add    BYTE PTR [rax],dh
   10fc9:	24 00                	and    al,0x0
   10fcb:	00 00                	add    BYTE PTR [rax],al
   10fcd:	00 00                	add    BYTE PTR [rax],al
   10fcf:	00 40 24             	add    BYTE PTR [rax+0x24],al
	...

Disassembly of section .data:

0000000000011000 <__data_start>:
	...

0000000000011008 <__dso_handle>:
   11008:	08 10                	or     BYTE PTR [rax],dl
   1100a:	01 00                	add    DWORD PTR [rax],eax
   1100c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011010 <blk_ipv4_len>:
   11010:	ff                   	(bad)  
   11011:	ff                   	(bad)  
   11012:	ff                   	(bad)  
   11013:	ff                   	(bad)  

0000000000011014 <num_rules>:
   11014:	ff                   	(bad)  
   11015:	ff                   	(bad)  
   11016:	ff                   	(bad)  
   11017:	ff                   	(bad)  

0000000000011018 <watchlist_num>:
   11018:	ff                   	(bad)  
   11019:	ff                   	(bad)  
   1101a:	ff                   	(bad)  
   1101b:	ff                   	(bad)  

000000000001101c <arp_entries>:
   1101c:	ff                   	(bad)  
   1101d:	ff                   	(bad)  
   1101e:	ff                   	(bad)  
   1101f:	ff                 	dec    eax

0000000000011020 <spi_max>:
   11020:	c8 00 00 00          	enter  0x0,0x0

0000000000011024 <VIGIL_MODE>:
   11024:	ff                   	(bad)  
   11025:	ff 00                	inc    DWORD PTR [rax]
	...

0000000000011028 <default_config>:
   11028:	04 c0                	add    al,0xc0
   1102a:	00 00                	add    BYTE PTR [rax],al
   1102c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011030 <def_log_file>:
   11030:	1a c0                	sbb    al,al
   11032:	00 00                	add    BYTE PTR [rax],al
   11034:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011038 <default_host_conf>:
   11038:	34 c0                	xor    al,0xc0
   1103a:	00 00                	add    BYTE PTR [rax],al
   1103c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011040 <total_conversations>:
   11040:	ff                   	(bad)  
   11041:	ff                   	(bad)  
   11042:	ff                   	(bad)  
   11043:	ff                   	.byte 0xff

Disassembly of section .bss:

0000000000011060 <optarg@GLIBC_2.2.5>:
	...

0000000000011068 <completed.0>:
	...

0000000000011080 <demo_mode>:
   11080:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011084 <strict_icmp_timestamp_req>:
   11084:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011088 <strict_nmap_host_alive_check>:
	...

00000000000110a0 <threads>:
	...

00000000000112a0 <thread_count>:
   112a0:	00 00                	add    BYTE PTR [rax],al
	...

00000000000112a4 <total_pkt_captured>:
   112a4:	00 00                	add    BYTE PTR [rax],al
	...

00000000000112a8 <is_running>:
	...

00000000000112b0 <last_clean_time>:
	...

00000000000112b8 <clean_delay>:
	...

00000000000112c0 <pkt_counter>:
	...

00000000000112e0 <rules>:
	...

00000000000f32e0 <blocked_ipv4_addrs>:
	...

00000000000f3520 <watchlist>:
	...

0000000000107d20 <arpcache>:
	...

0000000000109f00 <ip_addr>:
	...

0000000000109f20 <debug_mode>:
	...

0000000000109f21 <use_sqlite>:
	...

0000000000109f40 <sqlite_db_path>:
	...

0000000000109f60 <clean_delay_pkts>:
  109f60:	00 00                	add    BYTE PTR [rax],al
	...

0000000000109f64 <packet_print>:
	...

0000000000109f65 <quiet_exit>:
  109f65:	00 00                	add    BYTE PTR [rax],al
	...

0000000000109f68 <vigil_location>:
	...

0000000000109f70 <input_adapter>:
	...

0000000000109f80 <output_adapter>:
	...

0000000000109f90 <local_ip>:
	...

0000000000109fb0 <def_gw>:
	...

0000000000109fc2 <use_spi>:
	...

0000000000109fc4 <homenet>:
  109fc4:	00 00                	add    BYTE PTR [rax],al
	...

0000000000109fc8 <homenetmask>:
  109fc8:	00 00                	add    BYTE PTR [rax],al
	...

0000000000109fcc <in_test_mode>:
	...

0000000000109fe0 <spi_table>:
	...

0000000000137fe0 <lua_scripts>:
	...

0000000000138800 <fn_mem_map>:
	...

000000000013b000 <fn_num>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <buffer+0x78>
   a:	74 75                	je     81 <buffer.0+0x1>
   c:	20 31                	and    BYTE PTR [rcx],dh
   e:	30 2e                	xor    BYTE PTR [rsi],ch
  10:	33 2e                	xor    ebp,DWORD PTR [rsi]
  12:	30 2d 31 75 62 75    	xor    BYTE PTR [rip+0x75627531],ch        # 75627549 <_end+0x754ec541>
  18:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  19:	74 75                	je     90 <buffer.0+0x10>
  1b:	31 29                	xor    DWORD PTR [rcx],ebp
  1d:	20 31                	and    BYTE PTR [rcx],dh
  1f:	30 2e                	xor    BYTE PTR [rsi],ch
  21:	33 2e                	xor    ebp,DWORD PTR [rsi]
  23:	30 00                	xor    BYTE PTR [rax],al
