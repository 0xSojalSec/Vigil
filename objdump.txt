
vigil.exe:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000350 <.interp>:
 350:	2f                   	(bad)  
 351:	6c                   	ins    BYTE PTR es:[rdi],dx
 352:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 359:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 35e:	78 2d                	js     38d <buffer.4704+0x30d>
 360:	78 38                	js     39a <buffer.4704+0x31a>
 362:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 368:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 369:	2e 32 00             	xor    al,BYTE PTR cs:[rax]

Disassembly of section .note.gnu.property:

0000000000000370 <.note.gnu.property>:
 370:	04 00                	add    al,0x0
 372:	00 00                	add    BYTE PTR [rax],al
 374:	10 00                	adc    BYTE PTR [rax],al
 376:	00 00                	add    BYTE PTR [rax],al
 378:	05 00 00 00 47       	add    eax,0x47000000
 37d:	4e 55                	rex.WRX push rbp
 37f:	00 02                	add    BYTE PTR [rdx],al
 381:	00 00                	add    BYTE PTR [rax],al
 383:	c0 04 00 00          	rol    BYTE PTR [rax+rax*1],0x0
 387:	00 03                	add    BYTE PTR [rbx],al
 389:	00 00                	add    BYTE PTR [rax],al
 38b:	00 00                	add    BYTE PTR [rax],al
 38d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000000390 <.note.gnu.build-id>:
 390:	04 00                	add    al,0x0
 392:	00 00                	add    BYTE PTR [rax],al
 394:	14 00                	adc    al,0x0
 396:	00 00                	add    BYTE PTR [rax],al
 398:	03 00                	add    eax,DWORD PTR [rax]
 39a:	00 00                	add    BYTE PTR [rax],al
 39c:	47                   	rex.RXB
 39d:	4e 55                	rex.WRX push rbp
 39f:	00 9f 89 cf c2 37    	add    BYTE PTR [rdi+0x37c2cf89],bl
 3a5:	de b4 96 26 0e 32 00 	fidiv  WORD PTR [rsi+rdx*4+0x320e26]
 3ac:	a0                   	.byte 0xa0
 3ad:	92                   	xchg   edx,eax
 3ae:	23 cd                	and    ecx,ebp
 3b0:	3f                   	(bad)  
 3b1:	4a                   	rex.WX
 3b2:	e8                   	.byte 0xe8
 3b3:	0c                   	.byte 0xc

Disassembly of section .note.ABI-tag:

00000000000003b4 <.note.ABI-tag>:
 3b4:	04 00                	add    al,0x0
 3b6:	00 00                	add    BYTE PTR [rax],al
 3b8:	10 00                	adc    BYTE PTR [rax],al
 3ba:	00 00                	add    BYTE PTR [rax],al
 3bc:	01 00                	add    DWORD PTR [rax],eax
 3be:	00 00                	add    BYTE PTR [rax],al
 3c0:	47                   	rex.RXB
 3c1:	4e 55                	rex.WRX push rbp
 3c3:	00 00                	add    BYTE PTR [rax],al
 3c5:	00 00                	add    BYTE PTR [rax],al
 3c7:	00 03                	add    BYTE PTR [rbx],al
 3c9:	00 00                	add    BYTE PTR [rax],al
 3cb:	00 02                	add    BYTE PTR [rdx],al
 3cd:	00 00                	add    BYTE PTR [rax],al
 3cf:	00 00                	add    BYTE PTR [rax],al
 3d1:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .gnu.hash:

00000000000003d8 <.gnu.hash>:
 3d8:	03 00                	add    eax,DWORD PTR [rax]
 3da:	00 00                	add    BYTE PTR [rax],al
 3dc:	4a 00 00             	rex.WX add BYTE PTR [rax],al
 3df:	00 01                	add    BYTE PTR [rcx],al
 3e1:	00 00                	add    BYTE PTR [rax],al
 3e3:	00 06                	add    BYTE PTR [rsi],al
 3e5:	00 00                	add    BYTE PTR [rax],al
 3e7:	00 00                	add    BYTE PTR [rax],al
 3e9:	14 81                	adc    al,0x81
 3eb:	00 00                	add    BYTE PTR [rax],al
 3ed:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 3f0:	4a 00 00             	rex.WX add BYTE PTR [rax],al
 3f3:	00 00                	add    BYTE PTR [rax],al
 3f5:	00 00                	add    BYTE PTR [rax],al
 3f7:	00 4b 00             	add    BYTE PTR [rbx+0x0],cl
 3fa:	00 00                	add    BYTE PTR [rax],al
 3fc:	d1 65 ce             	shl    DWORD PTR [rbp-0x32],1
 3ff:	6d                   	ins    DWORD PTR es:[rdi],dx
 400:	b2 a2                	mov    dl,0xa2
 402:	f7 12                	not    DWORD PTR [rdx]
 404:	33                   	.byte 0x33
 405:	b3 f0                	mov    bl,0xf0
 407:	a9                   	.byte 0xa9

Disassembly of section .dynsym:

0000000000000408 <.dynsym>:
	...
 420:	d2 00                	rol    BYTE PTR [rax],cl
 422:	00 00                	add    BYTE PTR [rax],al
 424:	12 00                	adc    al,BYTE PTR [rax]
	...
 436:	00 00                	add    BYTE PTR [rax],al
 438:	da 01                	fiadd  DWORD PTR [rcx]
 43a:	00 00                	add    BYTE PTR [rax],al
 43c:	12 00                	adc    al,BYTE PTR [rax]
	...
 44e:	00 00                	add    BYTE PTR [rax],al
 450:	97                   	xchg   edi,eax
 451:	00 00                	add    BYTE PTR [rax],al
 453:	00 12                	add    BYTE PTR [rdx],dl
	...
 465:	00 00                	add    BYTE PTR [rax],al
 467:	00 7d 02             	add    BYTE PTR [rbp+0x2],bh
 46a:	00 00                	add    BYTE PTR [rax],al
 46c:	12 00                	adc    al,BYTE PTR [rax]
	...
 47e:	00 00                	add    BYTE PTR [rax],al
 480:	c1 01 00             	rol    DWORD PTR [rcx],0x0
 483:	00 12                	add    BYTE PTR [rdx],dl
	...
 495:	00 00                	add    BYTE PTR [rax],al
 497:	00 a3 01 00 00 12    	add    BYTE PTR [rbx+0x12000001],ah
	...
 4ad:	00 00                	add    BYTE PTR [rax],al
 4af:	00 10                	add    BYTE PTR [rax],dl
 4b1:	00 00                	add    BYTE PTR [rax],al
 4b3:	00 20                	add    BYTE PTR [rax],ah
	...
 4c5:	00 00                	add    BYTE PTR [rax],al
 4c7:	00 75 01             	add    BYTE PTR [rbp+0x1],dh
 4ca:	00 00                	add    BYTE PTR [rax],al
 4cc:	12 00                	adc    al,BYTE PTR [rax]
	...
 4de:	00 00                	add    BYTE PTR [rax],al
 4e0:	0e                   	(bad)  
 4e1:	01 00                	add    DWORD PTR [rax],eax
 4e3:	00 12                	add    BYTE PTR [rdx],dl
	...
 4f5:	00 00                	add    BYTE PTR [rax],al
 4f7:	00 4b 01             	add    BYTE PTR [rbx+0x1],cl
 4fa:	00 00                	add    BYTE PTR [rax],al
 4fc:	12 00                	adc    al,BYTE PTR [rax]
	...
 50e:	00 00                	add    BYTE PTR [rax],al
 510:	2a 02                	sub    al,BYTE PTR [rdx]
 512:	00 00                	add    BYTE PTR [rax],al
 514:	12 00                	adc    al,BYTE PTR [rax]
	...
 526:	00 00                	add    BYTE PTR [rax],al
 528:	36 02 00             	add    al,BYTE PTR ss:[rax]
 52b:	00 12                	add    BYTE PTR [rdx],dl
	...
 53d:	00 00                	add    BYTE PTR [rax],al
 53f:	00 bb 02 00 00 12    	add    BYTE PTR [rbx+0x12000002],bh
	...
 555:	00 00                	add    BYTE PTR [rax],al
 557:	00 d7                	add    bh,dl
 559:	00 00                	add    BYTE PTR [rax],al
 55b:	00 12                	add    BYTE PTR [rdx],dl
	...
 56d:	00 00                	add    BYTE PTR [rax],al
 56f:	00 f2                	add    dl,dh
 571:	00 00                	add    BYTE PTR [rax],al
 573:	00 12                	add    BYTE PTR [rdx],dl
	...
 585:	00 00                	add    BYTE PTR [rax],al
 587:	00 2f                	add    BYTE PTR [rdi],ch
 589:	02 00                	add    al,BYTE PTR [rax]
 58b:	00 12                	add    BYTE PTR [rdx],dl
	...
 59d:	00 00                	add    BYTE PTR [rax],al
 59f:	00 4f 02             	add    BYTE PTR [rdi+0x2],cl
 5a2:	00 00                	add    BYTE PTR [rax],al
 5a4:	12 00                	adc    al,BYTE PTR [rax]
	...
 5b6:	00 00                	add    BYTE PTR [rax],al
 5b8:	f7 01 00 00 12 00    	test   DWORD PTR [rcx],0x120000
	...
 5ce:	00 00                	add    BYTE PTR [rax],al
 5d0:	73 02                	jae    5d4 <buffer.4704+0x554>
 5d2:	00 00                	add    BYTE PTR [rax],al
 5d4:	12 00                	adc    al,BYTE PTR [rax]
	...
 5e6:	00 00                	add    BYTE PTR [rax],al
 5e8:	c9                   	leave  
 5e9:	01 00                	add    DWORD PTR [rax],eax
 5eb:	00 12                	add    BYTE PTR [rdx],dl
	...
 5fd:	00 00                	add    BYTE PTR [rax],al
 5ff:	00 8f 01 00 00 12    	add    BYTE PTR [rdi+0x12000001],cl
	...
 615:	00 00                	add    BYTE PTR [rax],al
 617:	00 7e 00             	add    BYTE PTR [rsi+0x0],bh
 61a:	00 00                	add    BYTE PTR [rax],al
 61c:	12 00                	adc    al,BYTE PTR [rax]
	...
 62e:	00 00                	add    BYTE PTR [rax],al
 630:	87 02                	xchg   DWORD PTR [rdx],eax
 632:	00 00                	add    BYTE PTR [rax],al
 634:	12 00                	adc    al,BYTE PTR [rax]
	...
 646:	00 00                	add    BYTE PTR [rax],al
 648:	8f 02                	pop    QWORD PTR [rdx]
 64a:	00 00                	add    BYTE PTR [rax],al
 64c:	12 00                	adc    al,BYTE PTR [rax]
	...
 65e:	00 00                	add    BYTE PTR [rax],al
 660:	f2 02 00             	repnz add al,BYTE PTR [rax]
 663:	00 12                	add    BYTE PTR [rdx],dl
	...
 675:	00 00                	add    BYTE PTR [rax],al
 677:	00 29                	add    BYTE PTR [rcx],ch
 679:	02 00                	add    al,BYTE PTR [rax]
 67b:	00 12                	add    BYTE PTR [rdx],dl
	...
 68d:	00 00                	add    BYTE PTR [rax],al
 68f:	00 81 01 00 00 12    	add    BYTE PTR [rcx+0x12000001],al
	...
 6a5:	00 00                	add    BYTE PTR [rax],al
 6a7:	00 fe                	add    dh,bh
 6a9:	01 00                	add    DWORD PTR [rax],eax
 6ab:	00 12                	add    BYTE PTR [rdx],dl
	...
 6bd:	00 00                	add    BYTE PTR [rax],al
 6bf:	00 66 02             	add    BYTE PTR [rsi+0x2],ah
 6c2:	00 00                	add    BYTE PTR [rax],al
 6c4:	12 00                	adc    al,BYTE PTR [rax]
	...
 6d6:	00 00                	add    BYTE PTR [rax],al
 6d8:	ec                   	in     al,dx
 6d9:	00 00                	add    BYTE PTR [rax],al
 6db:	00 12                	add    BYTE PTR [rdx],dl
	...
 6ed:	00 00                	add    BYTE PTR [rax],al
 6ef:	00 57 02             	add    BYTE PTR [rdi+0x2],dl
 6f2:	00 00                	add    BYTE PTR [rax],al
 6f4:	12 00                	adc    al,BYTE PTR [rax]
	...
 706:	00 00                	add    BYTE PTR [rax],al
 708:	0c 02                	or     al,0x2
 70a:	00 00                	add    BYTE PTR [rax],al
 70c:	12 00                	adc    al,BYTE PTR [rax]
	...
 71e:	00 00                	add    BYTE PTR [rax],al
 720:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
 721:	00 00                	add    BYTE PTR [rax],al
 723:	00 12                	add    BYTE PTR [rdx],dl
	...
 735:	00 00                	add    BYTE PTR [rax],al
 737:	00 d4                	add    ah,dl
 739:	02 00                	add    al,BYTE PTR [rax]
 73b:	00 12                	add    BYTE PTR [rdx],dl
	...
 74d:	00 00                	add    BYTE PTR [rax],al
 74f:	00 36                	add    BYTE PTR [rsi],dh
 751:	01 00                	add    DWORD PTR [rax],eax
 753:	00 12                	add    BYTE PTR [rdx],dl
	...
 765:	00 00                	add    BYTE PTR [rax],al
 767:	00 bb 00 00 00 12    	add    BYTE PTR [rbx+0x12000000],bh
	...
 77d:	00 00                	add    BYTE PTR [rax],al
 77f:	00 cd                	add    ch,cl
 781:	02 00                	add    al,BYTE PTR [rax]
 783:	00 12                	add    BYTE PTR [rdx],dl
	...
 795:	00 00                	add    BYTE PTR [rax],al
 797:	00 ba 01 00 00 12    	add    BYTE PTR [rdx+0x12000001],bh
	...
 7ad:	00 00                	add    BYTE PTR [rax],al
 7af:	00 8e 02 00 00 12    	add    BYTE PTR [rsi+0x12000002],cl
	...
 7c5:	00 00                	add    BYTE PTR [rax],al
 7c7:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 7ca:	00 00                	add    BYTE PTR [rax],al
 7cc:	20 00                	and    BYTE PTR [rax],al
	...
 7de:	00 00                	add    BYTE PTR [rax],al
 7e0:	f0 01 00             	lock add DWORD PTR [rax],eax
 7e3:	00 12                	add    BYTE PTR [rdx],dl
	...
 7f5:	00 00                	add    BYTE PTR [rax],al
 7f7:	00 e4                	add    ah,ah
 7f9:	00 00                	add    BYTE PTR [rax],al
 7fb:	00 12                	add    BYTE PTR [rdx],dl
	...
 80d:	00 00                	add    BYTE PTR [rax],al
 80f:	00 82 02 00 00 12    	add    BYTE PTR [rdx+0x12000002],al
	...
 825:	00 00                	add    BYTE PTR [rax],al
 827:	00 87 01 00 00 12    	add    BYTE PTR [rdi+0x12000001],al
	...
 83d:	00 00                	add    BYTE PTR [rax],al
 83f:	00 28                	add    BYTE PTR [rax],ch
 841:	01 00                	add    DWORD PTR [rax],eax
 843:	00 12                	add    BYTE PTR [rdx],dl
	...
 855:	00 00                	add    BYTE PTR [rax],al
 857:	00 55 00             	add    BYTE PTR [rbp+0x0],dl
 85a:	00 00                	add    BYTE PTR [rax],al
 85c:	12 00                	adc    al,BYTE PTR [rax]
	...
 86e:	00 00                	add    BYTE PTR [rax],al
 870:	41 02 00             	add    al,BYTE PTR [r8]
 873:	00 12                	add    BYTE PTR [rdx],dl
	...
 885:	00 00                	add    BYTE PTR [rax],al
 887:	00 e2                	add    dl,ah
 889:	01 00                	add    DWORD PTR [rax],eax
 88b:	00 12                	add    BYTE PTR [rdx],dl
	...
 89d:	00 00                	add    BYTE PTR [rax],al
 89f:	00 40 01             	add    BYTE PTR [rax+0x1],al
 8a2:	00 00                	add    BYTE PTR [rax],al
 8a4:	12 00                	adc    al,BYTE PTR [rax]
	...
 8b6:	00 00                	add    BYTE PTR [rax],al
 8b8:	ab                   	stos   DWORD PTR es:[rdi],eax
 8b9:	01 00                	add    DWORD PTR [rax],eax
 8bb:	00 12                	add    BYTE PTR [rdx],dl
	...
 8cd:	00 00                	add    BYTE PTR [rax],al
 8cf:	00 ec                	add    ah,ch
 8d1:	02 00                	add    al,BYTE PTR [rax]
 8d3:	00 12                	add    BYTE PTR [rdx],dl
	...
 8e5:	00 00                	add    BYTE PTR [rax],al
 8e7:	00 19                	add    BYTE PTR [rcx],bl
 8e9:	01 00                	add    DWORD PTR [rax],eax
 8eb:	00 12                	add    BYTE PTR [rdx],dl
	...
 8fd:	00 00                	add    BYTE PTR [rax],al
 8ff:	00 14 02             	add    BYTE PTR [rdx+rax*1],dl
 902:	00 00                	add    BYTE PTR [rax],al
 904:	12 00                	adc    al,BYTE PTR [rax]
	...
 916:	00 00                	add    BYTE PTR [rax],al
 918:	9d                   	popf   
 919:	01 00                	add    DWORD PTR [rax],eax
 91b:	00 12                	add    BYTE PTR [rdx],dl
	...
 92d:	00 00                	add    BYTE PTR [rax],al
 92f:	00 b3 01 00 00 12    	add    BYTE PTR [rbx+0x12000001],dh
	...
 945:	00 00                	add    BYTE PTR [rax],al
 947:	00 e9                	add    cl,ch
 949:	01 00                	add    DWORD PTR [rax],eax
 94b:	00 12                	add    BYTE PTR [rdx],dl
	...
 95d:	00 00                	add    BYTE PTR [rax],al
 95f:	00 8a 00 00 00 12    	add    BYTE PTR [rdx+0x12000000],cl
	...
 975:	00 00                	add    BYTE PTR [rax],al
 977:	00 56 01             	add    BYTE PTR [rsi+0x1],dl
 97a:	00 00                	add    BYTE PTR [rax],al
 97c:	12 00                	adc    al,BYTE PTR [rax]
	...
 98e:	00 00                	add    BYTE PTR [rax],al
 990:	22 02                	and    al,BYTE PTR [rdx]
 992:	00 00                	add    BYTE PTR [rax],al
 994:	12 00                	adc    al,BYTE PTR [rax]
	...
 9a6:	00 00                	add    BYTE PTR [rax],al
 9a8:	83 00 00             	add    DWORD PTR [rax],0x0
 9ab:	00 12                	add    BYTE PTR [rdx],dl
	...
 9bd:	00 00                	add    BYTE PTR [rax],al
 9bf:	00 6e 02             	add    BYTE PTR [rsi+0x2],ch
 9c2:	00 00                	add    BYTE PTR [rax],al
 9c4:	12 00                	adc    al,BYTE PTR [rax]
	...
 9d6:	00 00                	add    BYTE PTR [rax],al
 9d8:	96                   	xchg   esi,eax
 9d9:	02 00                	add    al,BYTE PTR [rax]
 9db:	00 12                	add    BYTE PTR [rdx],dl
	...
 9ed:	00 00                	add    BYTE PTR [rax],al
 9ef:	00 48 02             	add    BYTE PTR [rax+0x2],cl
 9f2:	00 00                	add    BYTE PTR [rax],al
 9f4:	12 00                	adc    al,BYTE PTR [rax]
	...
 a06:	00 00                	add    BYTE PTR [rax],al
 a08:	5f                   	pop    rdi
 a09:	00 00                	add    BYTE PTR [rax],al
 a0b:	00 12                	add    BYTE PTR [rdx],dl
	...
 a1d:	00 00                	add    BYTE PTR [rax],al
 a1f:	00 ca                	add    dl,cl
 a21:	00 00                	add    BYTE PTR [rax],al
 a23:	00 12                	add    BYTE PTR [rdx],dl
	...
 a35:	00 00                	add    BYTE PTR [rax],al
 a37:	00 95 01 00 00 12    	add    BYTE PTR [rbp+0x12000001],dl
	...
 a4d:	00 00                	add    BYTE PTR [rax],al
 a4f:	00 7c 01 00          	add    BYTE PTR [rcx+rax*1+0x0],bh
 a53:	00 12                	add    BYTE PTR [rdx],dl
	...
 a65:	00 00                	add    BYTE PTR [rax],al
 a67:	00 3b                	add    BYTE PTR [rbx],bh
 a69:	00 00                	add    BYTE PTR [rax],al
 a6b:	00 20                	add    BYTE PTR [rax],ah
	...
 a7d:	00 00                	add    BYTE PTR [rax],al
 a7f:	00 e6                	add    dh,ah
 a81:	02 00                	add    al,BYTE PTR [rax]
 a83:	00 12                	add    BYTE PTR [rdx],dl
	...
 a95:	00 00                	add    BYTE PTR [rax],al
 a97:	00 9e 02 00 00 12    	add    BYTE PTR [rsi+0x12000002],bl
	...
 aad:	00 00                	add    BYTE PTR [rax],al
 aaf:	00 19                	add    BYTE PTR [rcx],bl
 ab1:	02 00                	add    al,BYTE PTR [rax]
 ab3:	00 12                	add    BYTE PTR [rdx],dl
	...
 ac5:	00 00                	add    BYTE PTR [rax],al
 ac7:	00 05 02 00 00 12    	add    BYTE PTR [rip+0x12000002],al        # 12000acf <_end+0x11ec568f>
	...
 add:	00 00                	add    BYTE PTR [rax],al
 adf:	00 6e 01             	add    BYTE PTR [rsi+0x1],ch
 ae2:	00 00                	add    BYTE PTR [rax],al
 ae4:	12 00                	adc    al,BYTE PTR [rax]
	...
 af6:	00 00                	add    BYTE PTR [rax],al
 af8:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
 af9:	02 00                	add    al,BYTE PTR [rax]
 afb:	00 22                	add    BYTE PTR [rdx],ah
	...
 b0d:	00 00                	add    BYTE PTR [rax],al
 b0f:	00 5f 02             	add    BYTE PTR [rdi+0x2],bl
 b12:	00 00                	add    BYTE PTR [rax],al
 b14:	11 00                	adc    DWORD PTR [rax],eax
 b16:	1b 00                	sbb    eax,DWORD PTR [rax]
 b18:	60                   	(bad)  
 b19:	10 01                	adc    BYTE PTR [rcx],al
 b1b:	00 00                	add    BYTE PTR [rax],al
 b1d:	00 00                	add    BYTE PTR [rax],al
 b1f:	00 08                	add    BYTE PTR [rax],cl
 b21:	00 00                	add    BYTE PTR [rax],al
 b23:	00 00                	add    BYTE PTR [rax],al
 b25:	00 00                	add    BYTE PTR [rax],al
 b27:	00 b3 02 00 00 12    	add    BYTE PTR [rbx+0x12000002],dh
 b2d:	00 10                	add    BYTE PTR [rax],dl
 b2f:	00 7c 96 00          	add    BYTE PTR [rsi+rdx*4+0x0],bh
 b33:	00 00                	add    BYTE PTR [rax],al
 b35:	00 00                	add    BYTE PTR [rax],al
 b37:	00 3b                	add    BYTE PTR [rbx],bh
 b39:	01 00                	add    DWORD PTR [rax],eax
 b3b:	00 00                	add    BYTE PTR [rax],al
 b3d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynstr:

0000000000000b40 <.dynstr>:
 b40:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 b44:	70 63                	jo     ba9 <buffer.4704+0xb29>
 b46:	61                   	(bad)  
 b47:	70 2e                	jo     b77 <buffer.4704+0xaf7>
 b49:	73 6f                	jae    bba <buffer.4704+0xb3a>
 b4b:	2e 30 2e             	xor    BYTE PTR cs:[rsi],ch
 b4e:	38 00                	cmp    BYTE PTR [rax],al
 b50:	5f                   	pop    rdi
 b51:	49 54                	rex.WB push r12
 b53:	4d 5f                	rex.WRB pop r15
 b55:	64 65 72 65          	fs gs jb bbe <buffer.4704+0xb3e>
 b59:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 b60:	4d 
 b61:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 b63:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b64:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b65:	65 54                	gs push rsp
 b67:	61                   	(bad)  
 b68:	62                   	(bad)  
 b69:	6c                   	ins    BYTE PTR es:[rdi],dx
 b6a:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
 b6e:	67 6d                	ins    DWORD PTR es:[edi],dx
 b70:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b71:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b72:	5f                   	pop    rdi
 b73:	73 74                	jae    be9 <buffer.4704+0xb69>
 b75:	61                   	(bad)  
 b76:	72 74                	jb     bec <buffer.4704+0xb6c>
 b78:	5f                   	pop    rdi
 b79:	5f                   	pop    rdi
 b7a:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 b7d:	54                   	push   rsp
 b7e:	4d 5f                	rex.WRB pop r15
 b80:	72 65                	jb     be7 <buffer.4704+0xb67>
 b82:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 b89:	4d 
 b8a:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 b8c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b8d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b8e:	65 54                	gs push rsp
 b90:	61                   	(bad)  
 b91:	62                   	(bad)  
 b92:	6c                   	ins    BYTE PTR es:[rdi],dx
 b93:	65 00 70 63          	add    BYTE PTR gs:[rax+0x63],dh
 b97:	61                   	(bad)  
 b98:	70 5f                	jo     bf9 <buffer.4704+0xb79>
 b9a:	6c                   	ins    BYTE PTR es:[rdi],dx
 b9b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b9c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b9d:	70 00                	jo     b9f <buffer.4704+0xb1f>
 b9f:	70 63                	jo     c04 <buffer.4704+0xb84>
 ba1:	61                   	(bad)  
 ba2:	70 5f                	jo     c03 <buffer.4704+0xb83>
 ba4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 ba5:	70 65                	jo     c0c <buffer.4704+0xb8c>
 ba7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 ba8:	5f                   	pop    rdi
 ba9:	6c                   	ins    BYTE PTR es:[rdi],dx
 baa:	69 76 65 00 6c 69 62 	imul   esi,DWORD PTR [rsi+0x65],0x62696c00
 bb1:	70 74                	jo     c27 <buffer.4704+0xba7>
 bb3:	68 72 65 61 64       	push   0x64616572
 bb8:	2e 73 6f             	cs jae c2a <buffer.4704+0xbaa>
 bbb:	2e 30 00             	xor    BYTE PTR cs:[rax],al
 bbe:	73 65                	jae    c25 <buffer.4704+0xba5>
 bc0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 bc1:	64 00 61 63          	add    BYTE PTR fs:[rcx+0x63],ah
 bc5:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
 bc8:	74 00                	je     bca <buffer.4704+0xb4a>
 bca:	70 74                	jo     c40 <buffer.4704+0xbc0>
 bcc:	68 72 65 61 64       	push   0x64616572
 bd1:	5f                   	pop    rdi
 bd2:	6a 6f                	push   0x6f
 bd4:	69 6e 00 70 74 68 72 	imul   ebp,DWORD PTR [rsi+0x0],0x72687470
 bdb:	65 61                	gs (bad) 
 bdd:	64 5f                	fs pop rdi
 bdf:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
 be2:	61                   	(bad)  
 be3:	74 65                	je     c4a <buffer.4704+0xbca>
 be5:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
 be8:	61                   	(bad)  
 be9:	64 00 6c 69 62       	add    BYTE PTR fs:[rcx+rbp*2+0x62],ch
 bee:	73 71                	jae    c61 <buffer.4704+0xbe1>
 bf0:	6c                   	ins    BYTE PTR es:[rdi],dx
 bf1:	69 74 65 33 2e 73 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x2e6f732e
 bf8:	2e 
 bf9:	30 00                	xor    BYTE PTR [rax],al
 bfb:	73 71                	jae    c6e <buffer.4704+0xbee>
 bfd:	6c                   	ins    BYTE PTR es:[rdi],dx
 bfe:	69 74 65 33 5f 65 72 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x7272655f
 c05:	72 
 c06:	6d                   	ins    DWORD PTR es:[rdi],dx
 c07:	73 67                	jae    c70 <buffer.4704+0xbf0>
 c09:	00 73 71             	add    BYTE PTR [rbx+0x71],dh
 c0c:	6c                   	ins    BYTE PTR es:[rdi],dx
 c0d:	69 74 65 33 5f 66 72 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6572665f
 c14:	65 
 c15:	65 00 73 71          	add    BYTE PTR gs:[rbx+0x71],dh
 c19:	6c                   	ins    BYTE PTR es:[rdi],dx
 c1a:	69 74 65 33 5f 65 78 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6578655f
 c21:	65 
 c22:	63 00                	movsxd eax,DWORD PTR [rax]
 c24:	73 71                	jae    c97 <buffer.4704+0xc17>
 c26:	6c                   	ins    BYTE PTR es:[rdi],dx
 c27:	69 74 65 33 5f 63 6c 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6f6c635f
 c2e:	6f 
 c2f:	73 65                	jae    c96 <buffer.4704+0xc16>
 c31:	00 73 71             	add    BYTE PTR [rbx+0x71],dh
 c34:	6c                   	ins    BYTE PTR es:[rdi],dx
 c35:	69 74 65 33 5f 6f 70 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x65706f5f
 c3c:	65 
 c3d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c3e:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 c42:	6c                   	ins    BYTE PTR es:[rdi],dx
 c43:	75 61                	jne    ca6 <buffer.4704+0xc26>
 c45:	35 2e 33 2e 73       	xor    eax,0x732e332e
 c4a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c4b:	2e 30 00             	xor    BYTE PTR cs:[rax],al
 c4e:	6c                   	ins    BYTE PTR es:[rdi],dx
 c4f:	75 61                	jne    cb2 <buffer.4704+0xc32>
 c51:	5f                   	pop    rdi
 c52:	73 65                	jae    cb9 <buffer.4704+0xc39>
 c54:	74 74                	je     cca <buffer.4704+0xc4a>
 c56:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c57:	70 00                	jo     c59 <buffer.4704+0xbd9>
 c59:	6c                   	ins    BYTE PTR es:[rdi],dx
 c5a:	75 61                	jne    cbd <buffer.4704+0xc3d>
 c5c:	4c 5f                	rex.WR pop rdi
 c5e:	6c                   	ins    BYTE PTR es:[rdi],dx
 c5f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c60:	61                   	(bad)  
 c61:	64 66 69 6c 65 78 00 	imul   bp,WORD PTR fs:[rbp+riz*2+0x78],0x6c00
 c68:	6c 
 c69:	75 61                	jne    ccc <buffer.4704+0xc4c>
 c6b:	4c 5f                	rex.WR pop rdi
 c6d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c6e:	65 77 73             	gs ja  ce4 <buffer.4704+0xc64>
 c71:	74 61                	je     cd4 <buffer.4704+0xc54>
 c73:	74 65                	je     cda <buffer.4704+0xc5a>
 c75:	00 6c 75 61          	add    BYTE PTR [rbp+rsi*2+0x61],ch
 c79:	5f                   	pop    rdi
 c7a:	63 6c 6f 73          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
 c7e:	65 00 6c 75 61       	add    BYTE PTR gs:[rbp+rsi*2+0x61],ch
 c83:	5f                   	pop    rdi
 c84:	70 63                	jo     ce9 <buffer.4704+0xc69>
 c86:	61                   	(bad)  
 c87:	6c                   	ins    BYTE PTR es:[rdi],dx
 c88:	6c                   	ins    BYTE PTR es:[rdi],dx
 c89:	6b 00 6c             	imul   eax,DWORD PTR [rax],0x6c
 c8c:	75 61                	jne    cef <buffer.4704+0xc6f>
 c8e:	5f                   	pop    rdi
 c8f:	67 65 74 74          	addr32 gs je d07 <buffer.4704+0xc87>
 c93:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c94:	70 00                	jo     c96 <buffer.4704+0xc16>
 c96:	6c                   	ins    BYTE PTR es:[rdi],dx
 c97:	75 61                	jne    cfa <buffer.4704+0xc7a>
 c99:	4c 5f                	rex.WR pop rdi
 c9b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c9c:	70 65                	jo     d03 <buffer.4704+0xc83>
 c9e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c9f:	6c                   	ins    BYTE PTR es:[rdi],dx
 ca0:	69 62 73 00 6c 69 62 	imul   esp,DWORD PTR [rdx+0x73],0x62696c00
 ca7:	63 2e                	movsxd ebp,DWORD PTR [rsi]
 ca9:	73 6f                	jae    d1a <buffer.4704+0xc9a>
 cab:	2e 36 00 73 6f       	cs add BYTE PTR ss:[rbx+0x6f],dh
 cb0:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
 cb3:	74 00                	je     cb5 <buffer.4704+0xc35>
 cb5:	73 74                	jae    d2b <buffer.4704+0xcab>
 cb7:	72 63                	jb     d1c <buffer.4704+0xc9c>
 cb9:	70 79                	jo     d34 <buffer.4704+0xcb4>
 cbb:	00 65 78             	add    BYTE PTR [rbp+0x78],ah
 cbe:	69 74 00 68 74 6f 6e 	imul   esi,DWORD PTR [rax+rax*1+0x68],0x6c6e6f74
 cc5:	6c 
 cc6:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
 cc9:	61                   	(bad)  
 cca:	64 64 69 72 00 68 74 	fs imul esi,DWORD PTR fs:[rdx+0x0],0x6e6f7468
 cd1:	6f 6e 
 cd3:	73 00                	jae    cd5 <buffer.4704+0xc55>
 cd5:	73 70                	jae    d47 <buffer.4704+0xcc7>
 cd7:	72 69                	jb     d42 <buffer.4704+0xcc2>
 cd9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 cda:	74 66                	je     d42 <buffer.4704+0xcc2>
 cdc:	00 66 6f             	add    BYTE PTR [rsi+0x6f],ah
 cdf:	70 65                	jo     d46 <buffer.4704+0xcc6>
 ce1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 ce2:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 ce5:	72 6e                	jb     d55 <buffer.4704+0xcd5>
 ce7:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
 cea:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
 ced:	67 65 78 65          	addr32 gs js d56 <buffer.4704+0xcd6>
 cf1:	63 00                	movsxd eax,DWORD PTR [rax]
 cf3:	70 65                	jo     d5a <buffer.4704+0xcda>
 cf5:	72 72                	jb     d69 <buffer.4704+0xce9>
 cf7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 cf8:	72 00                	jb     cfa <buffer.4704+0xc7a>
 cfa:	73 69                	jae    d65 <buffer.4704+0xce5>
 cfc:	67 6e                	outs   dx,BYTE PTR ds:[esi]
 cfe:	61                   	(bad)  
 cff:	6c                   	ins    BYTE PTR es:[rdi],dx
 d00:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 d03:	72 6e                	jb     d73 <buffer.4704+0xcf3>
 d05:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
 d08:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 d0b:	73 74                	jae    d81 <buffer.4704+0xd01>
 d0d:	61                   	(bad)  
 d0e:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 d11:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 d14:	5f                   	pop    rdi
 d15:	66 61                	data16 (bad) 
 d17:	69 6c 00 70 75 74 63 	imul   ebp,DWORD PTR [rax+rax*1+0x70],0x68637475
 d1e:	68 
 d1f:	61                   	(bad)  
 d20:	72 00                	jb     d22 <buffer.4704+0xca2>
 d22:	6c                   	ins    BYTE PTR es:[rdi],dx
 d23:	69 73 74 65 6e 00 73 	imul   esi,DWORD PTR [rbx+0x74],0x73006e65
 d2a:	74 72                	je     d9e <buffer.4704+0xd1e>
 d2c:	74 6f                	je     d9d <buffer.4704+0xd1d>
 d2e:	6b 00 73             	imul   eax,DWORD PTR [rax],0x73
 d31:	74 72                	je     da5 <buffer.4704+0xd25>
 d33:	74 6f                	je     da4 <buffer.4704+0xd24>
 d35:	6c                   	ins    BYTE PTR es:[rdi],dx
 d36:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 d39:	72 6c                	jb     da7 <buffer.4704+0xd27>
 d3b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 d3d:	00 6d 65             	add    BYTE PTR [rbp+0x65],ch
 d40:	6d                   	ins    DWORD PTR es:[rdi],dx
 d41:	73 65                	jae    da8 <buffer.4704+0xd28>
 d43:	74 00                	je     d45 <buffer.4704+0xcc5>
 d45:	73 74                	jae    dbb <buffer.4704+0xd3b>
 d47:	72 73                	jb     dbc <buffer.4704+0xd3c>
 d49:	74 72                	je     dbd <buffer.4704+0xd3d>
 d4b:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 d4e:	72 63                	jb     db3 <buffer.4704+0xd33>
 d50:	73 70                	jae    dc2 <buffer.4704+0xd42>
 d52:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d53:	00 62 69             	add    BYTE PTR [rdx+0x69],ah
 d56:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d57:	64 00 67 65          	add    BYTE PTR fs:[rdi+0x65],ah
 d5b:	74 64                	je     dc1 <buffer.4704+0xd41>
 d5d:	65 6c                	gs ins BYTE PTR es:[rdi],dx
 d5f:	69 6d 00 67 65 74 6f 	imul   ebp,DWORD PTR [rbp+0x0],0x6f746567
 d66:	70 74                	jo     ddc <buffer.4704+0xd5c>
 d68:	00 66 70             	add    BYTE PTR [rsi+0x70],ah
 d6b:	75 74                	jne    de1 <buffer.4704+0xd61>
 d6d:	73 00                	jae    d6f <buffer.4704+0xcef>
 d6f:	66 63 6c 6f 73       	movsxd bp,DWORD PTR [rdi+rbp*2+0x73]
 d74:	65 00 73 65          	add    BYTE PTR gs:[rbx+0x65],dh
 d78:	74 73                	je     ded <buffer.4704+0xd6d>
 d7a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d7b:	63 6b 6f             	movsxd ebp,DWORD PTR [rbx+0x6f]
 d7e:	70 74                	jo     df4 <buffer.4704+0xd74>
 d80:	00 6d 61             	add    BYTE PTR [rbp+0x61],ch
 d83:	6c                   	ins    BYTE PTR es:[rdi],dx
 d84:	6c                   	ins    BYTE PTR es:[rdi],dx
 d85:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d86:	63 00                	movsxd eax,DWORD PTR [rax]
 d88:	73 74                	jae    dfe <buffer.4704+0xd7e>
 d8a:	72 63                	jb     def <buffer.4704+0xd6f>
 d8c:	61                   	(bad)  
 d8d:	74 00                	je     d8f <buffer.4704+0xd0f>
 d8f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d90:	70 65                	jo     df7 <buffer.4704+0xd77>
 d92:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d93:	64 69 72 00 72 65 67 	imul   esi,DWORD PTR fs:[rdx+0x0],0x63676572
 d9a:	63 
 d9b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d9c:	6d                   	ins    DWORD PTR es:[rdi],dx
 d9d:	70 00                	jo     d9f <buffer.4704+0xd1f>
 d9f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 da0:	70 74                	jo     e16 <buffer.4704+0xd96>
 da2:	61                   	(bad)  
 da3:	72 67                	jb     e0c <buffer.4704+0xd8c>
 da5:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 da8:	72 6e                	jb     e18 <buffer.4704+0xd98>
 daa:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
 dad:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
 db0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 db1:	69 00 62 61 63 6b    	imul   eax,DWORD PTR [rax],0x6b636162
 db7:	74 72                	je     e2b <buffer.4704+0xdab>
 db9:	61                   	(bad)  
 dba:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
 dbd:	6c                   	ins    BYTE PTR es:[rdi],dx
 dbe:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 dbf:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
 dc2:	74 69                	je     e2d <buffer.4704+0xdad>
 dc4:	6d                   	ins    DWORD PTR es:[rdi],dx
 dc5:	65 00 73 74          	add    BYTE PTR gs:[rbx+0x74],dh
 dc9:	72 63                	jb     e2e <buffer.4704+0xdae>
 dcb:	68 72 00 66 70       	push   0x70660072
 dd0:	72 69                	jb     e3b <buffer.4704+0xdbb>
 dd2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 dd3:	74 66                	je     e3b <buffer.4704+0xdbb>
 dd5:	00 67 65             	add    BYTE PTR [rdi+0x65],ah
 dd8:	74 6c                	je     e46 <buffer.4704+0xdc6>
 dda:	69 6e 65 00 73 6c 65 	imul   ebp,DWORD PTR [rsi+0x65],0x656c7300
 de1:	65 70 00             	gs jo  de4 <buffer.4704+0xd64>
 de4:	5f                   	pop    rdi
 de5:	5f                   	pop    rdi
 de6:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
 de9:	5f                   	pop    rdi
 dea:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 df0:	7a 65                	jp     e57 <buffer.4704+0xdd7>
 df2:	00 69 73             	add    BYTE PTR [rcx+0x73],ch
 df5:	64 69 67 69 74 00 62 	imul   esp,DWORD PTR fs:[rdi+0x69],0x61620074
 dfc:	61 
 dfd:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
 e00:	72 61                	jb     e63 <buffer.4704+0xde3>
 e02:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
 e05:	73 79                	jae    e80 <buffer.4704+0xe00>
 e07:	6d                   	ins    DWORD PTR es:[rdi],dx
 e08:	62                   	(bad)  
 e09:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 e0a:	6c                   	ins    BYTE PTR es:[rdi],dx
 e0b:	73 00                	jae    e0d <buffer.4704+0xd8d>
 e0d:	73 74                	jae    e83 <buffer.4704+0xe03>
 e0f:	72 63                	jb     e74 <buffer.4704+0xdf4>
 e11:	6d                   	ins    DWORD PTR es:[rdi],dx
 e12:	70 00                	jo     e14 <buffer.4704+0xd94>
 e14:	5f                   	pop    rdi
 e15:	5f                   	pop    rdi
 e16:	6c                   	ins    BYTE PTR es:[rdi],dx
 e17:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 e1e:	72 74                	jb     e94 <buffer.4704+0xe14>
 e20:	5f                   	pop    rdi
 e21:	6d                   	ins    DWORD PTR es:[rdi],dx
 e22:	61                   	(bad)  
 e23:	69 6e 00 6e 74 6f 68 	imul   ebp,DWORD PTR [rsi+0x0],0x686f746e
 e2a:	6c                   	ins    BYTE PTR es:[rdi],dx
 e2b:	00 6e 74             	add    BYTE PTR [rsi+0x74],ch
 e2e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 e2f:	68 73 00 73 6e       	push   0x6e730073
 e34:	70 72                	jo     ea8 <buffer.4704+0xe28>
 e36:	69 6e 74 66 00 4c 55 	imul   ebp,DWORD PTR [rsi+0x74],0x554c0066
 e3d:	41 5f                	pop    r15
 e3f:	35 2e 33 00 47       	xor    eax,0x4700332e
 e44:	4c                   	rex.WR
 e45:	49                   	rex.WB
 e46:	42                   	rex.X
 e47:	43 5f                	rex.XB pop r15
 e49:	32 2e                	xor    ch,BYTE PTR [rsi]
 e4b:	32 2e                	xor    ch,BYTE PTR [rsi]
 e4d:	35 00 47 4c 49       	xor    eax,0x494c4700
 e52:	42                   	rex.X
 e53:	43 5f                	rex.XB pop r15
 e55:	32 2e                	xor    ch,BYTE PTR [rsi]
 e57:	33 2e                	xor    ebp,DWORD PTR [rsi]
 e59:	34 00                	xor    al,0x0
 e5b:	47                   	rex.RXB
 e5c:	4c                   	rex.WR
 e5d:	49                   	rex.WB
 e5e:	42                   	rex.X
 e5f:	43 5f                	rex.XB pop r15
 e61:	32 2e                	xor    ch,BYTE PTR [rsi]
 e63:	34 00                	xor    al,0x0

Disassembly of section .gnu.version:

0000000000000e66 <.gnu.version>:
 e66:	00 00                	add    BYTE PTR [rax],al
 e68:	02 00                	add    al,BYTE PTR [rax]
 e6a:	02 00                	add    al,BYTE PTR [rax]
 e6c:	03 00                	add    eax,DWORD PTR [rax]
 e6e:	02 00                	add    al,BYTE PTR [rax]
 e70:	02 00                	add    al,BYTE PTR [rax]
 e72:	02 00                	add    al,BYTE PTR [rax]
 e74:	00 00                	add    BYTE PTR [rax],al
 e76:	02 00                	add    al,BYTE PTR [rax]
 e78:	04 00                	add    al,0x0
 e7a:	04 00                	add    al,0x0
 e7c:	02 00                	add    al,BYTE PTR [rax]
 e7e:	02 00                	add    al,BYTE PTR [rax]
 e80:	02 00                	add    al,BYTE PTR [rax]
 e82:	00 00                	add    BYTE PTR [rax],al
 e84:	00 00                	add    BYTE PTR [rax],al
 e86:	02 00                	add    al,BYTE PTR [rax]
 e88:	02 00                	add    al,BYTE PTR [rax]
 e8a:	02 00                	add    al,BYTE PTR [rax]
 e8c:	02 00                	add    al,BYTE PTR [rax]
 e8e:	05 00 02 00 03       	add    eax,0x3000200
 e93:	00 02                	add    BYTE PTR [rdx],al
 e95:	00 02                	add    BYTE PTR [rdx],al
 e97:	00 02                	add    BYTE PTR [rdx],al
 e99:	00 02                	add    BYTE PTR [rdx],al
 e9b:	00 02                	add    BYTE PTR [rdx],al
 e9d:	00 02                	add    BYTE PTR [rdx],al
 e9f:	00 02                	add    BYTE PTR [rdx],al
 ea1:	00 03                	add    BYTE PTR [rbx],al
 ea3:	00 02                	add    BYTE PTR [rdx],al
 ea5:	00 02                	add    BYTE PTR [rdx],al
 ea7:	00 03                	add    BYTE PTR [rbx],al
 ea9:	00 02                	add    BYTE PTR [rdx],al
 eab:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 eae:	00 00                	add    BYTE PTR [rax],al
 eb0:	02 00                	add    al,BYTE PTR [rax]
 eb2:	02 00                	add    al,BYTE PTR [rax]
 eb4:	02 00                	add    al,BYTE PTR [rax]
 eb6:	00 00                	add    BYTE PTR [rax],al
 eb8:	02 00                	add    al,BYTE PTR [rax]
 eba:	00 00                	add    BYTE PTR [rax],al
 ebc:	02 00                	add    al,BYTE PTR [rax]
 ebe:	02 00                	add    al,BYTE PTR [rax]
 ec0:	04 00                	add    al,0x0
 ec2:	00 00                	add    BYTE PTR [rax],al
 ec4:	02 00                	add    al,BYTE PTR [rax]
 ec6:	02 00                	add    al,BYTE PTR [rax]
 ec8:	04 00                	add    al,0x0
 eca:	06                   	(bad)  
 ecb:	00 02                	add    BYTE PTR [rdx],al
 ecd:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 ed0:	02 00                	add    al,BYTE PTR [rax]
 ed2:	02 00                	add    al,BYTE PTR [rax]
 ed4:	02 00                	add    al,BYTE PTR [rax]
 ed6:	02 00                	add    al,BYTE PTR [rax]
 ed8:	03 00                	add    eax,DWORD PTR [rax]
 eda:	04 00                	add    al,0x0
 edc:	02 00                	add    al,BYTE PTR [rax]
 ede:	03 00                	add    eax,DWORD PTR [rax]
 ee0:	02 00                	add    al,BYTE PTR [rax]
 ee2:	02 00                	add    al,BYTE PTR [rax]
 ee4:	02 00                	add    al,BYTE PTR [rax]
 ee6:	00 00                	add    BYTE PTR [rax],al
 ee8:	00 00                	add    BYTE PTR [rax],al
 eea:	02 00                	add    al,BYTE PTR [rax]
 eec:	02 00                	add    al,BYTE PTR [rax]
 eee:	00 00                	add    BYTE PTR [rax],al
 ef0:	02 00                	add    al,BYTE PTR [rax]
 ef2:	02 00                	add    al,BYTE PTR [rax]
 ef4:	02 00                	add    al,BYTE PTR [rax]
 ef6:	02 00                	add    al,BYTE PTR [rax]
 ef8:	02 00                	add    al,BYTE PTR [rax]
 efa:	02 00                	add    al,BYTE PTR [rax]
 efc:	02 00                	add    al,BYTE PTR [rax]
 efe:	01 00                	add    DWORD PTR [rax],eax

Disassembly of section .gnu.version_r:

0000000000000f00 <.gnu.version_r>:
 f00:	01 00                	add    DWORD PTR [rax],eax
 f02:	01 00                	add    DWORD PTR [rax],eax
 f04:	ff 00                	inc    DWORD PTR [rax]
 f06:	00 00                	add    BYTE PTR [rax],al
 f08:	10 00                	adc    BYTE PTR [rax],al
 f0a:	00 00                	add    BYTE PTR [rax],al
 f0c:	20 00                	and    BYTE PTR [rax],al
 f0e:	00 00                	add    BYTE PTR [rax],al
 f10:	43 28 97 01 00 00 04 	rex.XB sub BYTE PTR [r15+0x4000001],dl
 f17:	00 fb                	add    bl,bh
 f19:	02 00                	add    al,BYTE PTR [rax]
 f1b:	00 00                	add    BYTE PTR [rax],al
 f1d:	00 00                	add    BYTE PTR [rax],al
 f1f:	00 01                	add    BYTE PTR [rcx],al
 f21:	00 01                	add    BYTE PTR [rcx],al
 f23:	00 6e 00             	add    BYTE PTR [rsi+0x0],ch
 f26:	00 00                	add    BYTE PTR [rax],al
 f28:	10 00                	adc    BYTE PTR [rax],al
 f2a:	00 00                	add    BYTE PTR [rax],al
 f2c:	20 00                	and    BYTE PTR [rax],al
 f2e:	00 00                	add    BYTE PTR [rax],al
 f30:	75 1a                	jne    f4c <buffer.4704+0xecc>
 f32:	69 09 00 00 03 00    	imul   ecx,DWORD PTR [rcx],0x30000
 f38:	03 03                	add    eax,DWORD PTR [rbx]
 f3a:	00 00                	add    BYTE PTR [rax],al
 f3c:	00 00                	add    BYTE PTR [rax],al
 f3e:	00 00                	add    BYTE PTR [rax],al
 f40:	01 00                	add    DWORD PTR [rax],eax
 f42:	03 00                	add    eax,DWORD PTR [rax]
 f44:	64 01 00             	add    DWORD PTR fs:[rax],eax
 f47:	00 10                	add    BYTE PTR [rax],dl
 f49:	00 00                	add    BYTE PTR [rax],al
 f4b:	00 00                	add    BYTE PTR [rax],al
 f4d:	00 00                	add    BYTE PTR [rax],al
 f4f:	00 74 19 69          	add    BYTE PTR [rcx+rbx*1+0x69],dh
 f53:	09 00                	or     DWORD PTR [rax],eax
 f55:	00 06                	add    BYTE PTR [rsi],al
 f57:	00 0f                	add    BYTE PTR [rdi],cl
 f59:	03 00                	add    eax,DWORD PTR [rax]
 f5b:	00 10                	add    BYTE PTR [rax],dl
 f5d:	00 00                	add    BYTE PTR [rax],al
 f5f:	00 14 69             	add    BYTE PTR [rcx+rbp*2],dl
 f62:	69 0d 00 00 05 00 1b 	imul   ecx,DWORD PTR [rip+0x50000],0x31b        # 50f6c <rules+0x3fecc>
 f69:	03 00 00 
 f6c:	10 00                	adc    BYTE PTR [rax],al
 f6e:	00 00                	add    BYTE PTR [rax],al
 f70:	75 1a                	jne    f8c <buffer.4704+0xf0c>
 f72:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
 f78:	03 03                	add    eax,DWORD PTR [rbx]
 f7a:	00 00                	add    BYTE PTR [rax],al
 f7c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000000f80 <.rela.dyn>:
     f80:	58                   	pop    rax
     f81:	0b 01                	or     eax,DWORD PTR [rcx]
     f83:	00 00                	add    BYTE PTR [rax],al
     f85:	00 00                	add    BYTE PTR [rax],al
     f87:	00 08                	add    BYTE PTR [rax],cl
     f89:	00 00                	add    BYTE PTR [rax],al
     f8b:	00 00                	add    BYTE PTR [rax],al
     f8d:	00 00                	add    BYTE PTR [rax],al
     f8f:	00 c0                	add    al,al
     f91:	29 00                	sub    DWORD PTR [rax],eax
     f93:	00 00                	add    BYTE PTR [rax],al
     f95:	00 00                	add    BYTE PTR [rax],al
     f97:	00 60 0b             	add    BYTE PTR [rax+0xb],ah
     f9a:	01 00                	add    DWORD PTR [rax],eax
     f9c:	00 00                	add    BYTE PTR [rax],al
     f9e:	00 00                	add    BYTE PTR [rax],al
     fa0:	08 00                	or     BYTE PTR [rax],al
     fa2:	00 00                	add    BYTE PTR [rax],al
     fa4:	00 00                	add    BYTE PTR [rax],al
     fa6:	00 00                	add    BYTE PTR [rax],al
     fa8:	80 29 00             	sub    BYTE PTR [rcx],0x0
     fab:	00 00                	add    BYTE PTR [rax],al
     fad:	00 00                	add    BYTE PTR [rax],al
     faf:	00 08                	add    BYTE PTR [rax],cl
     fb1:	10 01                	adc    BYTE PTR [rcx],al
     fb3:	00 00                	add    BYTE PTR [rax],al
     fb5:	00 00                	add    BYTE PTR [rax],al
     fb7:	00 08                	add    BYTE PTR [rax],cl
     fb9:	00 00                	add    BYTE PTR [rax],al
     fbb:	00 00                	add    BYTE PTR [rax],al
     fbd:	00 00                	add    BYTE PTR [rax],al
     fbf:	00 08                	add    BYTE PTR [rax],cl
     fc1:	10 01                	adc    BYTE PTR [rcx],al
     fc3:	00 00                	add    BYTE PTR [rax],al
     fc5:	00 00                	add    BYTE PTR [rax],al
     fc7:	00 28                	add    BYTE PTR [rax],ch
     fc9:	10 01                	adc    BYTE PTR [rcx],al
     fcb:	00 00                	add    BYTE PTR [rax],al
     fcd:	00 00                	add    BYTE PTR [rax],al
     fcf:	00 08                	add    BYTE PTR [rax],cl
     fd1:	00 00                	add    BYTE PTR [rax],al
     fd3:	00 00                	add    BYTE PTR [rax],al
     fd5:	00 00                	add    BYTE PTR [rax],al
     fd7:	00 04 c0             	add    BYTE PTR [rax+rax*8],al
     fda:	00 00                	add    BYTE PTR [rax],al
     fdc:	00 00                	add    BYTE PTR [rax],al
     fde:	00 00                	add    BYTE PTR [rax],al
     fe0:	30 10                	xor    BYTE PTR [rax],dl
     fe2:	01 00                	add    DWORD PTR [rax],eax
     fe4:	00 00                	add    BYTE PTR [rax],al
     fe6:	00 00                	add    BYTE PTR [rax],al
     fe8:	08 00                	or     BYTE PTR [rax],al
     fea:	00 00                	add    BYTE PTR [rax],al
     fec:	00 00                	add    BYTE PTR [rax],al
     fee:	00 00                	add    BYTE PTR [rax],al
     ff0:	1a c0                	sbb    al,al
     ff2:	00 00                	add    BYTE PTR [rax],al
     ff4:	00 00                	add    BYTE PTR [rax],al
     ff6:	00 00                	add    BYTE PTR [rax],al
     ff8:	38 10                	cmp    BYTE PTR [rax],dl
     ffa:	01 00                	add    DWORD PTR [rax],eax
     ffc:	00 00                	add    BYTE PTR [rax],al
     ffe:	00 00                	add    BYTE PTR [rax],al
    1000:	08 00                	or     BYTE PTR [rax],al
    1002:	00 00                	add    BYTE PTR [rax],al
    1004:	00 00                	add    BYTE PTR [rax],al
    1006:	00 00                	add    BYTE PTR [rax],al
    1008:	34 c0                	xor    al,0xc0
    100a:	00 00                	add    BYTE PTR [rax],al
    100c:	00 00                	add    BYTE PTR [rax],al
    100e:	00 00                	add    BYTE PTR [rax],al
    1010:	d8 0f                	fmul   DWORD PTR [rdi]
    1012:	01 00                	add    DWORD PTR [rax],eax
    1014:	00 00                	add    BYTE PTR [rax],al
    1016:	00 00                	add    BYTE PTR [rax],al
    1018:	06                   	(bad)  
    1019:	00 00                	add    BYTE PTR [rax],al
    101b:	00 07                	add    BYTE PTR [rdi],al
	...
    1025:	00 00                	add    BYTE PTR [rax],al
    1027:	00 e0                	add    al,ah
    1029:	0f 01 00             	sgdt   [rax]
    102c:	00 00                	add    BYTE PTR [rax],al
    102e:	00 00                	add    BYTE PTR [rax],al
    1030:	06                   	(bad)  
    1031:	00 00                	add    BYTE PTR [rax],al
    1033:	00 22                	add    BYTE PTR [rdx],ah
	...
    103d:	00 00                	add    BYTE PTR [rax],al
    103f:	00 e8                	add    al,ch
    1041:	0f 01 00             	sgdt   [rax]
    1044:	00 00                	add    BYTE PTR [rax],al
    1046:	00 00                	add    BYTE PTR [rax],al
    1048:	06                   	(bad)  
    1049:	00 00                	add    BYTE PTR [rax],al
    104b:	00 28                	add    BYTE PTR [rax],ch
	...
    1055:	00 00                	add    BYTE PTR [rax],al
    1057:	00 f0                	add    al,dh
    1059:	0f 01 00             	sgdt   [rax]
    105c:	00 00                	add    BYTE PTR [rax],al
    105e:	00 00                	add    BYTE PTR [rax],al
    1060:	06                   	(bad)  
    1061:	00 00                	add    BYTE PTR [rax],al
    1063:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
	...
    106f:	00 f8                	add    al,bh
    1071:	0f 01 00             	sgdt   [rax]
    1074:	00 00                	add    BYTE PTR [rax],al
    1076:	00 00                	add    BYTE PTR [rax],al
    1078:	06                   	(bad)  
    1079:	00 00                	add    BYTE PTR [rax],al
    107b:	00 4a 00             	add    BYTE PTR [rdx+0x0],cl
	...
    1086:	00 00                	add    BYTE PTR [rax],al
    1088:	60                   	(bad)  
    1089:	10 01                	adc    BYTE PTR [rcx],al
    108b:	00 00                	add    BYTE PTR [rax],al
    108d:	00 00                	add    BYTE PTR [rax],al
    108f:	00 05 00 00 00 4b    	add    BYTE PTR [rip+0x4b000000],al        # 4b001095 <_end+0x4aec5c55>
	...

Disassembly of section .rela.plt:

00000000000010a0 <.rela.plt>:
    10a0:	b0 0d                	mov    al,0xd
    10a2:	01 00                	add    DWORD PTR [rax],eax
    10a4:	00 00                	add    BYTE PTR [rax],al
    10a6:	00 00                	add    BYTE PTR [rax],al
    10a8:	07                   	(bad)  
    10a9:	00 00                	add    BYTE PTR [rax],al
    10ab:	00 01                	add    BYTE PTR [rcx],al
	...
    10b5:	00 00                	add    BYTE PTR [rax],al
    10b7:	00 b8 0d 01 00 00    	add    BYTE PTR [rax+0x10d],bh
    10bd:	00 00                	add    BYTE PTR [rax],al
    10bf:	00 07                	add    BYTE PTR [rdi],al
    10c1:	00 00                	add    BYTE PTR [rax],al
    10c3:	00 02                	add    BYTE PTR [rdx],al
	...
    10cd:	00 00                	add    BYTE PTR [rax],al
    10cf:	00 c0                	add    al,al
    10d1:	0d 01 00 00 00       	or     eax,0x1
    10d6:	00 00                	add    BYTE PTR [rax],al
    10d8:	07                   	(bad)  
    10d9:	00 00                	add    BYTE PTR [rax],al
    10db:	00 03                	add    BYTE PTR [rbx],al
	...
    10e5:	00 00                	add    BYTE PTR [rax],al
    10e7:	00 c8                	add    al,cl
    10e9:	0d 01 00 00 00       	or     eax,0x1
    10ee:	00 00                	add    BYTE PTR [rax],al
    10f0:	07                   	(bad)  
    10f1:	00 00                	add    BYTE PTR [rax],al
    10f3:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
    10fe:	00 00                	add    BYTE PTR [rax],al
    1100:	d0 0d 01 00 00 00    	ror    BYTE PTR [rip+0x1],1        # 1107 <buffer.4704+0x1087>
    1106:	00 00                	add    BYTE PTR [rax],al
    1108:	07                   	(bad)  
    1109:	00 00                	add    BYTE PTR [rax],al
    110b:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 1111 <buffer.4704+0x1091>
    1111:	00 00                	add    BYTE PTR [rax],al
    1113:	00 00                	add    BYTE PTR [rax],al
    1115:	00 00                	add    BYTE PTR [rax],al
    1117:	00 d8                	add    al,bl
    1119:	0d 01 00 00 00       	or     eax,0x1
    111e:	00 00                	add    BYTE PTR [rax],al
    1120:	07                   	(bad)  
    1121:	00 00                	add    BYTE PTR [rax],al
    1123:	00 06                	add    BYTE PTR [rsi],al
	...
    112d:	00 00                	add    BYTE PTR [rax],al
    112f:	00 e0                	add    al,ah
    1131:	0d 01 00 00 00       	or     eax,0x1
    1136:	00 00                	add    BYTE PTR [rax],al
    1138:	07                   	(bad)  
    1139:	00 00                	add    BYTE PTR [rax],al
    113b:	00 08                	add    BYTE PTR [rax],cl
	...
    1145:	00 00                	add    BYTE PTR [rax],al
    1147:	00 e8                	add    al,ch
    1149:	0d 01 00 00 00       	or     eax,0x1
    114e:	00 00                	add    BYTE PTR [rax],al
    1150:	07                   	(bad)  
    1151:	00 00                	add    BYTE PTR [rax],al
    1153:	00 09                	add    BYTE PTR [rcx],cl
	...
    115d:	00 00                	add    BYTE PTR [rax],al
    115f:	00 f0                	add    al,dh
    1161:	0d 01 00 00 00       	or     eax,0x1
    1166:	00 00                	add    BYTE PTR [rax],al
    1168:	07                   	(bad)  
    1169:	00 00                	add    BYTE PTR [rax],al
    116b:	00 0a                	add    BYTE PTR [rdx],cl
	...
    1175:	00 00                	add    BYTE PTR [rax],al
    1177:	00 f8                	add    al,bh
    1179:	0d 01 00 00 00       	or     eax,0x1
    117e:	00 00                	add    BYTE PTR [rax],al
    1180:	07                   	(bad)  
    1181:	00 00                	add    BYTE PTR [rax],al
    1183:	00 0b                	add    BYTE PTR [rbx],cl
	...
    1191:	0e                   	(bad)  
    1192:	01 00                	add    DWORD PTR [rax],eax
    1194:	00 00                	add    BYTE PTR [rax],al
    1196:	00 00                	add    BYTE PTR [rax],al
    1198:	07                   	(bad)  
    1199:	00 00                	add    BYTE PTR [rax],al
    119b:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
	...
    11a6:	00 00                	add    BYTE PTR [rax],al
    11a8:	08 0e                	or     BYTE PTR [rsi],cl
    11aa:	01 00                	add    DWORD PTR [rax],eax
    11ac:	00 00                	add    BYTE PTR [rax],al
    11ae:	00 00                	add    BYTE PTR [rax],al
    11b0:	07                   	(bad)  
    11b1:	00 00                	add    BYTE PTR [rax],al
    11b3:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 11b9 <buffer.4704+0x1139>
    11b9:	00 00                	add    BYTE PTR [rax],al
    11bb:	00 00                	add    BYTE PTR [rax],al
    11bd:	00 00                	add    BYTE PTR [rax],al
    11bf:	00 10                	add    BYTE PTR [rax],dl
    11c1:	0e                   	(bad)  
    11c2:	01 00                	add    DWORD PTR [rax],eax
    11c4:	00 00                	add    BYTE PTR [rax],al
    11c6:	00 00                	add    BYTE PTR [rax],al
    11c8:	07                   	(bad)  
    11c9:	00 00                	add    BYTE PTR [rax],al
    11cb:	00 0e                	add    BYTE PTR [rsi],cl
	...
    11d5:	00 00                	add    BYTE PTR [rax],al
    11d7:	00 18                	add    BYTE PTR [rax],bl
    11d9:	0e                   	(bad)  
    11da:	01 00                	add    DWORD PTR [rax],eax
    11dc:	00 00                	add    BYTE PTR [rax],al
    11de:	00 00                	add    BYTE PTR [rax],al
    11e0:	07                   	(bad)  
    11e1:	00 00                	add    BYTE PTR [rax],al
    11e3:	00 0f                	add    BYTE PTR [rdi],cl
	...
    11ed:	00 00                	add    BYTE PTR [rax],al
    11ef:	00 20                	add    BYTE PTR [rax],ah
    11f1:	0e                   	(bad)  
    11f2:	01 00                	add    DWORD PTR [rax],eax
    11f4:	00 00                	add    BYTE PTR [rax],al
    11f6:	00 00                	add    BYTE PTR [rax],al
    11f8:	07                   	(bad)  
    11f9:	00 00                	add    BYTE PTR [rax],al
    11fb:	00 10                	add    BYTE PTR [rax],dl
	...
    1205:	00 00                	add    BYTE PTR [rax],al
    1207:	00 28                	add    BYTE PTR [rax],ch
    1209:	0e                   	(bad)  
    120a:	01 00                	add    DWORD PTR [rax],eax
    120c:	00 00                	add    BYTE PTR [rax],al
    120e:	00 00                	add    BYTE PTR [rax],al
    1210:	07                   	(bad)  
    1211:	00 00                	add    BYTE PTR [rax],al
    1213:	00 11                	add    BYTE PTR [rcx],dl
	...
    121d:	00 00                	add    BYTE PTR [rax],al
    121f:	00 30                	add    BYTE PTR [rax],dh
    1221:	0e                   	(bad)  
    1222:	01 00                	add    DWORD PTR [rax],eax
    1224:	00 00                	add    BYTE PTR [rax],al
    1226:	00 00                	add    BYTE PTR [rax],al
    1228:	07                   	(bad)  
    1229:	00 00                	add    BYTE PTR [rax],al
    122b:	00 12                	add    BYTE PTR [rdx],dl
	...
    1235:	00 00                	add    BYTE PTR [rax],al
    1237:	00 38                	add    BYTE PTR [rax],bh
    1239:	0e                   	(bad)  
    123a:	01 00                	add    DWORD PTR [rax],eax
    123c:	00 00                	add    BYTE PTR [rax],al
    123e:	00 00                	add    BYTE PTR [rax],al
    1240:	07                   	(bad)  
    1241:	00 00                	add    BYTE PTR [rax],al
    1243:	00 13                	add    BYTE PTR [rbx],dl
	...
    124d:	00 00                	add    BYTE PTR [rax],al
    124f:	00 40 0e             	add    BYTE PTR [rax+0xe],al
    1252:	01 00                	add    DWORD PTR [rax],eax
    1254:	00 00                	add    BYTE PTR [rax],al
    1256:	00 00                	add    BYTE PTR [rax],al
    1258:	07                   	(bad)  
    1259:	00 00                	add    BYTE PTR [rax],al
    125b:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
	...
    1266:	00 00                	add    BYTE PTR [rax],al
    1268:	48 0e                	rex.W (bad) 
    126a:	01 00                	add    DWORD PTR [rax],eax
    126c:	00 00                	add    BYTE PTR [rax],al
    126e:	00 00                	add    BYTE PTR [rax],al
    1270:	07                   	(bad)  
    1271:	00 00                	add    BYTE PTR [rax],al
    1273:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 1279 <buffer.4704+0x11f9>
    1279:	00 00                	add    BYTE PTR [rax],al
    127b:	00 00                	add    BYTE PTR [rax],al
    127d:	00 00                	add    BYTE PTR [rax],al
    127f:	00 50 0e             	add    BYTE PTR [rax+0xe],dl
    1282:	01 00                	add    DWORD PTR [rax],eax
    1284:	00 00                	add    BYTE PTR [rax],al
    1286:	00 00                	add    BYTE PTR [rax],al
    1288:	07                   	(bad)  
    1289:	00 00                	add    BYTE PTR [rax],al
    128b:	00 16                	add    BYTE PTR [rsi],dl
	...
    1295:	00 00                	add    BYTE PTR [rax],al
    1297:	00 58 0e             	add    BYTE PTR [rax+0xe],bl
    129a:	01 00                	add    DWORD PTR [rax],eax
    129c:	00 00                	add    BYTE PTR [rax],al
    129e:	00 00                	add    BYTE PTR [rax],al
    12a0:	07                   	(bad)  
    12a1:	00 00                	add    BYTE PTR [rax],al
    12a3:	00 17                	add    BYTE PTR [rdi],dl
	...
    12ad:	00 00                	add    BYTE PTR [rax],al
    12af:	00 60 0e             	add    BYTE PTR [rax+0xe],ah
    12b2:	01 00                	add    DWORD PTR [rax],eax
    12b4:	00 00                	add    BYTE PTR [rax],al
    12b6:	00 00                	add    BYTE PTR [rax],al
    12b8:	07                   	(bad)  
    12b9:	00 00                	add    BYTE PTR [rax],al
    12bb:	00 18                	add    BYTE PTR [rax],bl
	...
    12c5:	00 00                	add    BYTE PTR [rax],al
    12c7:	00 68 0e             	add    BYTE PTR [rax+0xe],ch
    12ca:	01 00                	add    DWORD PTR [rax],eax
    12cc:	00 00                	add    BYTE PTR [rax],al
    12ce:	00 00                	add    BYTE PTR [rax],al
    12d0:	07                   	(bad)  
    12d1:	00 00                	add    BYTE PTR [rax],al
    12d3:	00 19                	add    BYTE PTR [rcx],bl
	...
    12dd:	00 00                	add    BYTE PTR [rax],al
    12df:	00 70 0e             	add    BYTE PTR [rax+0xe],dh
    12e2:	01 00                	add    DWORD PTR [rax],eax
    12e4:	00 00                	add    BYTE PTR [rax],al
    12e6:	00 00                	add    BYTE PTR [rax],al
    12e8:	07                   	(bad)  
    12e9:	00 00                	add    BYTE PTR [rax],al
    12eb:	00 1a                	add    BYTE PTR [rdx],bl
	...
    12f5:	00 00                	add    BYTE PTR [rax],al
    12f7:	00 78 0e             	add    BYTE PTR [rax+0xe],bh
    12fa:	01 00                	add    DWORD PTR [rax],eax
    12fc:	00 00                	add    BYTE PTR [rax],al
    12fe:	00 00                	add    BYTE PTR [rax],al
    1300:	07                   	(bad)  
    1301:	00 00                	add    BYTE PTR [rax],al
    1303:	00 1b                	add    BYTE PTR [rbx],bl
	...
    130d:	00 00                	add    BYTE PTR [rax],al
    130f:	00 80 0e 01 00 00    	add    BYTE PTR [rax+0x10e],al
    1315:	00 00                	add    BYTE PTR [rax],al
    1317:	00 07                	add    BYTE PTR [rdi],al
    1319:	00 00                	add    BYTE PTR [rax],al
    131b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
	...
    1326:	00 00                	add    BYTE PTR [rax],al
    1328:	88 0e                	mov    BYTE PTR [rsi],cl
    132a:	01 00                	add    DWORD PTR [rax],eax
    132c:	00 00                	add    BYTE PTR [rax],al
    132e:	00 00                	add    BYTE PTR [rax],al
    1330:	07                   	(bad)  
    1331:	00 00                	add    BYTE PTR [rax],al
    1333:	00 1d 00 00 00 00    	add    BYTE PTR [rip+0x0],bl        # 1339 <buffer.4704+0x12b9>
    1339:	00 00                	add    BYTE PTR [rax],al
    133b:	00 00                	add    BYTE PTR [rax],al
    133d:	00 00                	add    BYTE PTR [rax],al
    133f:	00 90 0e 01 00 00    	add    BYTE PTR [rax+0x10e],dl
    1345:	00 00                	add    BYTE PTR [rax],al
    1347:	00 07                	add    BYTE PTR [rdi],al
    1349:	00 00                	add    BYTE PTR [rax],al
    134b:	00 1e                	add    BYTE PTR [rsi],bl
	...
    1355:	00 00                	add    BYTE PTR [rax],al
    1357:	00 98 0e 01 00 00    	add    BYTE PTR [rax+0x10e],bl
    135d:	00 00                	add    BYTE PTR [rax],al
    135f:	00 07                	add    BYTE PTR [rdi],al
    1361:	00 00                	add    BYTE PTR [rax],al
    1363:	00 1f                	add    BYTE PTR [rdi],bl
	...
    136d:	00 00                	add    BYTE PTR [rax],al
    136f:	00 a0 0e 01 00 00    	add    BYTE PTR [rax+0x10e],ah
    1375:	00 00                	add    BYTE PTR [rax],al
    1377:	00 07                	add    BYTE PTR [rdi],al
    1379:	00 00                	add    BYTE PTR [rax],al
    137b:	00 20                	add    BYTE PTR [rax],ah
	...
    1385:	00 00                	add    BYTE PTR [rax],al
    1387:	00 a8 0e 01 00 00    	add    BYTE PTR [rax+0x10e],ch
    138d:	00 00                	add    BYTE PTR [rax],al
    138f:	00 07                	add    BYTE PTR [rdi],al
    1391:	00 00                	add    BYTE PTR [rax],al
    1393:	00 21                	add    BYTE PTR [rcx],ah
	...
    139d:	00 00                	add    BYTE PTR [rax],al
    139f:	00 b0 0e 01 00 00    	add    BYTE PTR [rax+0x10e],dh
    13a5:	00 00                	add    BYTE PTR [rax],al
    13a7:	00 07                	add    BYTE PTR [rdi],al
    13a9:	00 00                	add    BYTE PTR [rax],al
    13ab:	00 23                	add    BYTE PTR [rbx],ah
	...
    13b5:	00 00                	add    BYTE PTR [rax],al
    13b7:	00 b8 0e 01 00 00    	add    BYTE PTR [rax+0x10e],bh
    13bd:	00 00                	add    BYTE PTR [rax],al
    13bf:	00 07                	add    BYTE PTR [rdi],al
    13c1:	00 00                	add    BYTE PTR [rax],al
    13c3:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
	...
    13ce:	00 00                	add    BYTE PTR [rax],al
    13d0:	c0 0e 01             	ror    BYTE PTR [rsi],0x1
    13d3:	00 00                	add    BYTE PTR [rax],al
    13d5:	00 00                	add    BYTE PTR [rax],al
    13d7:	00 07                	add    BYTE PTR [rdi],al
    13d9:	00 00                	add    BYTE PTR [rax],al
    13db:	00 25 00 00 00 00    	add    BYTE PTR [rip+0x0],ah        # 13e1 <buffer.4704+0x1361>
    13e1:	00 00                	add    BYTE PTR [rax],al
    13e3:	00 00                	add    BYTE PTR [rax],al
    13e5:	00 00                	add    BYTE PTR [rax],al
    13e7:	00 c8                	add    al,cl
    13e9:	0e                   	(bad)  
    13ea:	01 00                	add    DWORD PTR [rax],eax
    13ec:	00 00                	add    BYTE PTR [rax],al
    13ee:	00 00                	add    BYTE PTR [rax],al
    13f0:	07                   	(bad)  
    13f1:	00 00                	add    BYTE PTR [rax],al
    13f3:	00 26                	add    BYTE PTR [rsi],ah
	...
    13fd:	00 00                	add    BYTE PTR [rax],al
    13ff:	00 d0                	add    al,dl
    1401:	0e                   	(bad)  
    1402:	01 00                	add    DWORD PTR [rax],eax
    1404:	00 00                	add    BYTE PTR [rax],al
    1406:	00 00                	add    BYTE PTR [rax],al
    1408:	07                   	(bad)  
    1409:	00 00                	add    BYTE PTR [rax],al
    140b:	00 27                	add    BYTE PTR [rdi],ah
	...
    1415:	00 00                	add    BYTE PTR [rax],al
    1417:	00 d8                	add    al,bl
    1419:	0e                   	(bad)  
    141a:	01 00                	add    DWORD PTR [rax],eax
    141c:	00 00                	add    BYTE PTR [rax],al
    141e:	00 00                	add    BYTE PTR [rax],al
    1420:	07                   	(bad)  
    1421:	00 00                	add    BYTE PTR [rax],al
    1423:	00 29                	add    BYTE PTR [rcx],ch
	...
    142d:	00 00                	add    BYTE PTR [rax],al
    142f:	00 e0                	add    al,ah
    1431:	0e                   	(bad)  
    1432:	01 00                	add    DWORD PTR [rax],eax
    1434:	00 00                	add    BYTE PTR [rax],al
    1436:	00 00                	add    BYTE PTR [rax],al
    1438:	07                   	(bad)  
    1439:	00 00                	add    BYTE PTR [rax],al
    143b:	00 2a                	add    BYTE PTR [rdx],ch
	...
    1445:	00 00                	add    BYTE PTR [rax],al
    1447:	00 e8                	add    al,ch
    1449:	0e                   	(bad)  
    144a:	01 00                	add    DWORD PTR [rax],eax
    144c:	00 00                	add    BYTE PTR [rax],al
    144e:	00 00                	add    BYTE PTR [rax],al
    1450:	07                   	(bad)  
    1451:	00 00                	add    BYTE PTR [rax],al
    1453:	00 2b                	add    BYTE PTR [rbx],ch
	...
    145d:	00 00                	add    BYTE PTR [rax],al
    145f:	00 f0                	add    al,dh
    1461:	0e                   	(bad)  
    1462:	01 00                	add    DWORD PTR [rax],eax
    1464:	00 00                	add    BYTE PTR [rax],al
    1466:	00 00                	add    BYTE PTR [rax],al
    1468:	07                   	(bad)  
    1469:	00 00                	add    BYTE PTR [rax],al
    146b:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
	...
    1476:	00 00                	add    BYTE PTR [rax],al
    1478:	f8                   	clc    
    1479:	0e                   	(bad)  
    147a:	01 00                	add    DWORD PTR [rax],eax
    147c:	00 00                	add    BYTE PTR [rax],al
    147e:	00 00                	add    BYTE PTR [rax],al
    1480:	07                   	(bad)  
    1481:	00 00                	add    BYTE PTR [rax],al
    1483:	00 2d 00 00 00 00    	add    BYTE PTR [rip+0x0],ch        # 1489 <buffer.4704+0x1409>
	...
    1491:	0f 01 00             	sgdt   [rax]
    1494:	00 00                	add    BYTE PTR [rax],al
    1496:	00 00                	add    BYTE PTR [rax],al
    1498:	07                   	(bad)  
    1499:	00 00                	add    BYTE PTR [rax],al
    149b:	00 2e                	add    BYTE PTR [rsi],ch
	...
    14a5:	00 00                	add    BYTE PTR [rax],al
    14a7:	00 08                	add    BYTE PTR [rax],cl
    14a9:	0f 01 00             	sgdt   [rax]
    14ac:	00 00                	add    BYTE PTR [rax],al
    14ae:	00 00                	add    BYTE PTR [rax],al
    14b0:	07                   	(bad)  
    14b1:	00 00                	add    BYTE PTR [rax],al
    14b3:	00 2f                	add    BYTE PTR [rdi],ch
	...
    14bd:	00 00                	add    BYTE PTR [rax],al
    14bf:	00 10                	add    BYTE PTR [rax],dl
    14c1:	0f 01 00             	sgdt   [rax]
    14c4:	00 00                	add    BYTE PTR [rax],al
    14c6:	00 00                	add    BYTE PTR [rax],al
    14c8:	07                   	(bad)  
    14c9:	00 00                	add    BYTE PTR [rax],al
    14cb:	00 30                	add    BYTE PTR [rax],dh
	...
    14d5:	00 00                	add    BYTE PTR [rax],al
    14d7:	00 18                	add    BYTE PTR [rax],bl
    14d9:	0f 01 00             	sgdt   [rax]
    14dc:	00 00                	add    BYTE PTR [rax],al
    14de:	00 00                	add    BYTE PTR [rax],al
    14e0:	07                   	(bad)  
    14e1:	00 00                	add    BYTE PTR [rax],al
    14e3:	00 31                	add    BYTE PTR [rcx],dh
	...
    14ed:	00 00                	add    BYTE PTR [rax],al
    14ef:	00 20                	add    BYTE PTR [rax],ah
    14f1:	0f 01 00             	sgdt   [rax]
    14f4:	00 00                	add    BYTE PTR [rax],al
    14f6:	00 00                	add    BYTE PTR [rax],al
    14f8:	07                   	(bad)  
    14f9:	00 00                	add    BYTE PTR [rax],al
    14fb:	00 32                	add    BYTE PTR [rdx],dh
	...
    1505:	00 00                	add    BYTE PTR [rax],al
    1507:	00 28                	add    BYTE PTR [rax],ch
    1509:	0f 01 00             	sgdt   [rax]
    150c:	00 00                	add    BYTE PTR [rax],al
    150e:	00 00                	add    BYTE PTR [rax],al
    1510:	07                   	(bad)  
    1511:	00 00                	add    BYTE PTR [rax],al
    1513:	00 33                	add    BYTE PTR [rbx],dh
	...
    151d:	00 00                	add    BYTE PTR [rax],al
    151f:	00 30                	add    BYTE PTR [rax],dh
    1521:	0f 01 00             	sgdt   [rax]
    1524:	00 00                	add    BYTE PTR [rax],al
    1526:	00 00                	add    BYTE PTR [rax],al
    1528:	07                   	(bad)  
    1529:	00 00                	add    BYTE PTR [rax],al
    152b:	00 34 00             	add    BYTE PTR [rax+rax*1],dh
	...
    1536:	00 00                	add    BYTE PTR [rax],al
    1538:	38 0f                	cmp    BYTE PTR [rdi],cl
    153a:	01 00                	add    DWORD PTR [rax],eax
    153c:	00 00                	add    BYTE PTR [rax],al
    153e:	00 00                	add    BYTE PTR [rax],al
    1540:	07                   	(bad)  
    1541:	00 00                	add    BYTE PTR [rax],al
    1543:	00 35 00 00 00 00    	add    BYTE PTR [rip+0x0],dh        # 1549 <buffer.4704+0x14c9>
    1549:	00 00                	add    BYTE PTR [rax],al
    154b:	00 00                	add    BYTE PTR [rax],al
    154d:	00 00                	add    BYTE PTR [rax],al
    154f:	00 40 0f             	add    BYTE PTR [rax+0xf],al
    1552:	01 00                	add    DWORD PTR [rax],eax
    1554:	00 00                	add    BYTE PTR [rax],al
    1556:	00 00                	add    BYTE PTR [rax],al
    1558:	07                   	(bad)  
    1559:	00 00                	add    BYTE PTR [rax],al
    155b:	00 36                	add    BYTE PTR [rsi],dh
	...
    1565:	00 00                	add    BYTE PTR [rax],al
    1567:	00 48 0f             	add    BYTE PTR [rax+0xf],cl
    156a:	01 00                	add    DWORD PTR [rax],eax
    156c:	00 00                	add    BYTE PTR [rax],al
    156e:	00 00                	add    BYTE PTR [rax],al
    1570:	07                   	(bad)  
    1571:	00 00                	add    BYTE PTR [rax],al
    1573:	00 37                	add    BYTE PTR [rdi],dh
	...
    157d:	00 00                	add    BYTE PTR [rax],al
    157f:	00 50 0f             	add    BYTE PTR [rax+0xf],dl
    1582:	01 00                	add    DWORD PTR [rax],eax
    1584:	00 00                	add    BYTE PTR [rax],al
    1586:	00 00                	add    BYTE PTR [rax],al
    1588:	07                   	(bad)  
    1589:	00 00                	add    BYTE PTR [rax],al
    158b:	00 38                	add    BYTE PTR [rax],bh
	...
    1595:	00 00                	add    BYTE PTR [rax],al
    1597:	00 58 0f             	add    BYTE PTR [rax+0xf],bl
    159a:	01 00                	add    DWORD PTR [rax],eax
    159c:	00 00                	add    BYTE PTR [rax],al
    159e:	00 00                	add    BYTE PTR [rax],al
    15a0:	07                   	(bad)  
    15a1:	00 00                	add    BYTE PTR [rax],al
    15a3:	00 39                	add    BYTE PTR [rcx],bh
	...
    15ad:	00 00                	add    BYTE PTR [rax],al
    15af:	00 60 0f             	add    BYTE PTR [rax+0xf],ah
    15b2:	01 00                	add    DWORD PTR [rax],eax
    15b4:	00 00                	add    BYTE PTR [rax],al
    15b6:	00 00                	add    BYTE PTR [rax],al
    15b8:	07                   	(bad)  
    15b9:	00 00                	add    BYTE PTR [rax],al
    15bb:	00 3a                	add    BYTE PTR [rdx],bh
	...
    15c5:	00 00                	add    BYTE PTR [rax],al
    15c7:	00 68 0f             	add    BYTE PTR [rax+0xf],ch
    15ca:	01 00                	add    DWORD PTR [rax],eax
    15cc:	00 00                	add    BYTE PTR [rax],al
    15ce:	00 00                	add    BYTE PTR [rax],al
    15d0:	07                   	(bad)  
    15d1:	00 00                	add    BYTE PTR [rax],al
    15d3:	00 3b                	add    BYTE PTR [rbx],bh
	...
    15dd:	00 00                	add    BYTE PTR [rax],al
    15df:	00 70 0f             	add    BYTE PTR [rax+0xf],dh
    15e2:	01 00                	add    DWORD PTR [rax],eax
    15e4:	00 00                	add    BYTE PTR [rax],al
    15e6:	00 00                	add    BYTE PTR [rax],al
    15e8:	07                   	(bad)  
    15e9:	00 00                	add    BYTE PTR [rax],al
    15eb:	00 3c 00             	add    BYTE PTR [rax+rax*1],bh
	...
    15f6:	00 00                	add    BYTE PTR [rax],al
    15f8:	78 0f                	js     1609 <buffer.4704+0x1589>
    15fa:	01 00                	add    DWORD PTR [rax],eax
    15fc:	00 00                	add    BYTE PTR [rax],al
    15fe:	00 00                	add    BYTE PTR [rax],al
    1600:	07                   	(bad)  
    1601:	00 00                	add    BYTE PTR [rax],al
    1603:	00 3d 00 00 00 00    	add    BYTE PTR [rip+0x0],bh        # 1609 <buffer.4704+0x1589>
    1609:	00 00                	add    BYTE PTR [rax],al
    160b:	00 00                	add    BYTE PTR [rax],al
    160d:	00 00                	add    BYTE PTR [rax],al
    160f:	00 80 0f 01 00 00    	add    BYTE PTR [rax+0x10f],al
    1615:	00 00                	add    BYTE PTR [rax],al
    1617:	00 07                	add    BYTE PTR [rdi],al
    1619:	00 00                	add    BYTE PTR [rax],al
    161b:	00 3e                	add    BYTE PTR [rsi],bh
	...
    1625:	00 00                	add    BYTE PTR [rax],al
    1627:	00 88 0f 01 00 00    	add    BYTE PTR [rax+0x10f],cl
    162d:	00 00                	add    BYTE PTR [rax],al
    162f:	00 07                	add    BYTE PTR [rdi],al
    1631:	00 00                	add    BYTE PTR [rax],al
    1633:	00 3f                	add    BYTE PTR [rdi],bh
	...
    163d:	00 00                	add    BYTE PTR [rax],al
    163f:	00 90 0f 01 00 00    	add    BYTE PTR [rax+0x10f],dl
    1645:	00 00                	add    BYTE PTR [rax],al
    1647:	00 07                	add    BYTE PTR [rdi],al
    1649:	00 00                	add    BYTE PTR [rax],al
    164b:	00 40 00             	add    BYTE PTR [rax+0x0],al
	...
    1656:	00 00                	add    BYTE PTR [rax],al
    1658:	98                   	cwde   
    1659:	0f 01 00             	sgdt   [rax]
    165c:	00 00                	add    BYTE PTR [rax],al
    165e:	00 00                	add    BYTE PTR [rax],al
    1660:	07                   	(bad)  
    1661:	00 00                	add    BYTE PTR [rax],al
    1663:	00 41 00             	add    BYTE PTR [rcx+0x0],al
	...
    166e:	00 00                	add    BYTE PTR [rax],al
    1670:	a0 0f 01 00 00 00 00 	movabs al,ds:0x70000000000010f
    1677:	00 07 
    1679:	00 00                	add    BYTE PTR [rax],al
    167b:	00 42 00             	add    BYTE PTR [rdx+0x0],al
	...
    1686:	00 00                	add    BYTE PTR [rax],al
    1688:	a8 0f                	test   al,0xf
    168a:	01 00                	add    DWORD PTR [rax],eax
    168c:	00 00                	add    BYTE PTR [rax],al
    168e:	00 00                	add    BYTE PTR [rax],al
    1690:	07                   	(bad)  
    1691:	00 00                	add    BYTE PTR [rax],al
    1693:	00 43 00             	add    BYTE PTR [rbx+0x0],al
	...
    169e:	00 00                	add    BYTE PTR [rax],al
    16a0:	b0 0f                	mov    al,0xf
    16a2:	01 00                	add    DWORD PTR [rax],eax
    16a4:	00 00                	add    BYTE PTR [rax],al
    16a6:	00 00                	add    BYTE PTR [rax],al
    16a8:	07                   	(bad)  
    16a9:	00 00                	add    BYTE PTR [rax],al
    16ab:	00 45 00             	add    BYTE PTR [rbp+0x0],al
	...
    16b6:	00 00                	add    BYTE PTR [rax],al
    16b8:	b8 0f 01 00 00       	mov    eax,0x10f
    16bd:	00 00                	add    BYTE PTR [rax],al
    16bf:	00 07                	add    BYTE PTR [rdi],al
    16c1:	00 00                	add    BYTE PTR [rax],al
    16c3:	00 46 00             	add    BYTE PTR [rsi+0x0],al
	...
    16ce:	00 00                	add    BYTE PTR [rax],al
    16d0:	c0 0f 01             	ror    BYTE PTR [rdi],0x1
    16d3:	00 00                	add    BYTE PTR [rax],al
    16d5:	00 00                	add    BYTE PTR [rax],al
    16d7:	00 07                	add    BYTE PTR [rdi],al
    16d9:	00 00                	add    BYTE PTR [rax],al
    16db:	00 47 00             	add    BYTE PTR [rdi+0x0],al
	...
    16e6:	00 00                	add    BYTE PTR [rax],al
    16e8:	c8 0f 01 00          	enter  0x10f,0x0
    16ec:	00 00                	add    BYTE PTR [rax],al
    16ee:	00 00                	add    BYTE PTR [rax],al
    16f0:	07                   	(bad)  
    16f1:	00 00                	add    BYTE PTR [rax],al
    16f3:	00 48 00             	add    BYTE PTR [rax+0x0],cl
	...
    16fe:	00 00                	add    BYTE PTR [rax],al
    1700:	d0 0f                	ror    BYTE PTR [rdi],1
    1702:	01 00                	add    DWORD PTR [rax],eax
    1704:	00 00                	add    BYTE PTR [rax],al
    1706:	00 00                	add    BYTE PTR [rax],al
    1708:	07                   	(bad)  
    1709:	00 00                	add    BYTE PTR [rax],al
    170b:	00 49 00             	add    BYTE PTR [rcx+0x0],cl
	...

Disassembly of section .init:

0000000000002000 <_init>:
    2000:	f3 0f 1e fa          	endbr64 
    2004:	48 83 ec 08          	sub    rsp,0x8
    2008:	48 8b 05 d9 ef 00 00 	mov    rax,QWORD PTR [rip+0xefd9]        # 10fe8 <__gmon_start__>
    200f:	48 85 c0             	test   rax,rax
    2012:	74 02                	je     2016 <_init+0x16>
    2014:	ff d0                	call   rax
    2016:	48 83 c4 08          	add    rsp,0x8
    201a:	c3                   	ret    

Disassembly of section .plt:

0000000000002020 <.plt>:
    2020:	ff 35 7a ed 00 00    	push   QWORD PTR [rip+0xed7a]        # 10da0 <_GLOBAL_OFFSET_TABLE_+0x8>
    2026:	f2 ff 25 7b ed 00 00 	bnd jmp QWORD PTR [rip+0xed7b]        # 10da8 <_GLOBAL_OFFSET_TABLE_+0x10>
    202d:	0f 1f 00             	nop    DWORD PTR [rax]
    2030:	f3 0f 1e fa          	endbr64 
    2034:	68 00 00 00 00       	push   0x0
    2039:	f2 e9 e1 ff ff ff    	bnd jmp 2020 <.plt>
    203f:	90                   	nop
    2040:	f3 0f 1e fa          	endbr64 
    2044:	68 01 00 00 00       	push   0x1
    2049:	f2 e9 d1 ff ff ff    	bnd jmp 2020 <.plt>
    204f:	90                   	nop
    2050:	f3 0f 1e fa          	endbr64 
    2054:	68 02 00 00 00       	push   0x2
    2059:	f2 e9 c1 ff ff ff    	bnd jmp 2020 <.plt>
    205f:	90                   	nop
    2060:	f3 0f 1e fa          	endbr64 
    2064:	68 03 00 00 00       	push   0x3
    2069:	f2 e9 b1 ff ff ff    	bnd jmp 2020 <.plt>
    206f:	90                   	nop
    2070:	f3 0f 1e fa          	endbr64 
    2074:	68 04 00 00 00       	push   0x4
    2079:	f2 e9 a1 ff ff ff    	bnd jmp 2020 <.plt>
    207f:	90                   	nop
    2080:	f3 0f 1e fa          	endbr64 
    2084:	68 05 00 00 00       	push   0x5
    2089:	f2 e9 91 ff ff ff    	bnd jmp 2020 <.plt>
    208f:	90                   	nop
    2090:	f3 0f 1e fa          	endbr64 
    2094:	68 06 00 00 00       	push   0x6
    2099:	f2 e9 81 ff ff ff    	bnd jmp 2020 <.plt>
    209f:	90                   	nop
    20a0:	f3 0f 1e fa          	endbr64 
    20a4:	68 07 00 00 00       	push   0x7
    20a9:	f2 e9 71 ff ff ff    	bnd jmp 2020 <.plt>
    20af:	90                   	nop
    20b0:	f3 0f 1e fa          	endbr64 
    20b4:	68 08 00 00 00       	push   0x8
    20b9:	f2 e9 61 ff ff ff    	bnd jmp 2020 <.plt>
    20bf:	90                   	nop
    20c0:	f3 0f 1e fa          	endbr64 
    20c4:	68 09 00 00 00       	push   0x9
    20c9:	f2 e9 51 ff ff ff    	bnd jmp 2020 <.plt>
    20cf:	90                   	nop
    20d0:	f3 0f 1e fa          	endbr64 
    20d4:	68 0a 00 00 00       	push   0xa
    20d9:	f2 e9 41 ff ff ff    	bnd jmp 2020 <.plt>
    20df:	90                   	nop
    20e0:	f3 0f 1e fa          	endbr64 
    20e4:	68 0b 00 00 00       	push   0xb
    20e9:	f2 e9 31 ff ff ff    	bnd jmp 2020 <.plt>
    20ef:	90                   	nop
    20f0:	f3 0f 1e fa          	endbr64 
    20f4:	68 0c 00 00 00       	push   0xc
    20f9:	f2 e9 21 ff ff ff    	bnd jmp 2020 <.plt>
    20ff:	90                   	nop
    2100:	f3 0f 1e fa          	endbr64 
    2104:	68 0d 00 00 00       	push   0xd
    2109:	f2 e9 11 ff ff ff    	bnd jmp 2020 <.plt>
    210f:	90                   	nop
    2110:	f3 0f 1e fa          	endbr64 
    2114:	68 0e 00 00 00       	push   0xe
    2119:	f2 e9 01 ff ff ff    	bnd jmp 2020 <.plt>
    211f:	90                   	nop
    2120:	f3 0f 1e fa          	endbr64 
    2124:	68 0f 00 00 00       	push   0xf
    2129:	f2 e9 f1 fe ff ff    	bnd jmp 2020 <.plt>
    212f:	90                   	nop
    2130:	f3 0f 1e fa          	endbr64 
    2134:	68 10 00 00 00       	push   0x10
    2139:	f2 e9 e1 fe ff ff    	bnd jmp 2020 <.plt>
    213f:	90                   	nop
    2140:	f3 0f 1e fa          	endbr64 
    2144:	68 11 00 00 00       	push   0x11
    2149:	f2 e9 d1 fe ff ff    	bnd jmp 2020 <.plt>
    214f:	90                   	nop
    2150:	f3 0f 1e fa          	endbr64 
    2154:	68 12 00 00 00       	push   0x12
    2159:	f2 e9 c1 fe ff ff    	bnd jmp 2020 <.plt>
    215f:	90                   	nop
    2160:	f3 0f 1e fa          	endbr64 
    2164:	68 13 00 00 00       	push   0x13
    2169:	f2 e9 b1 fe ff ff    	bnd jmp 2020 <.plt>
    216f:	90                   	nop
    2170:	f3 0f 1e fa          	endbr64 
    2174:	68 14 00 00 00       	push   0x14
    2179:	f2 e9 a1 fe ff ff    	bnd jmp 2020 <.plt>
    217f:	90                   	nop
    2180:	f3 0f 1e fa          	endbr64 
    2184:	68 15 00 00 00       	push   0x15
    2189:	f2 e9 91 fe ff ff    	bnd jmp 2020 <.plt>
    218f:	90                   	nop
    2190:	f3 0f 1e fa          	endbr64 
    2194:	68 16 00 00 00       	push   0x16
    2199:	f2 e9 81 fe ff ff    	bnd jmp 2020 <.plt>
    219f:	90                   	nop
    21a0:	f3 0f 1e fa          	endbr64 
    21a4:	68 17 00 00 00       	push   0x17
    21a9:	f2 e9 71 fe ff ff    	bnd jmp 2020 <.plt>
    21af:	90                   	nop
    21b0:	f3 0f 1e fa          	endbr64 
    21b4:	68 18 00 00 00       	push   0x18
    21b9:	f2 e9 61 fe ff ff    	bnd jmp 2020 <.plt>
    21bf:	90                   	nop
    21c0:	f3 0f 1e fa          	endbr64 
    21c4:	68 19 00 00 00       	push   0x19
    21c9:	f2 e9 51 fe ff ff    	bnd jmp 2020 <.plt>
    21cf:	90                   	nop
    21d0:	f3 0f 1e fa          	endbr64 
    21d4:	68 1a 00 00 00       	push   0x1a
    21d9:	f2 e9 41 fe ff ff    	bnd jmp 2020 <.plt>
    21df:	90                   	nop
    21e0:	f3 0f 1e fa          	endbr64 
    21e4:	68 1b 00 00 00       	push   0x1b
    21e9:	f2 e9 31 fe ff ff    	bnd jmp 2020 <.plt>
    21ef:	90                   	nop
    21f0:	f3 0f 1e fa          	endbr64 
    21f4:	68 1c 00 00 00       	push   0x1c
    21f9:	f2 e9 21 fe ff ff    	bnd jmp 2020 <.plt>
    21ff:	90                   	nop
    2200:	f3 0f 1e fa          	endbr64 
    2204:	68 1d 00 00 00       	push   0x1d
    2209:	f2 e9 11 fe ff ff    	bnd jmp 2020 <.plt>
    220f:	90                   	nop
    2210:	f3 0f 1e fa          	endbr64 
    2214:	68 1e 00 00 00       	push   0x1e
    2219:	f2 e9 01 fe ff ff    	bnd jmp 2020 <.plt>
    221f:	90                   	nop
    2220:	f3 0f 1e fa          	endbr64 
    2224:	68 1f 00 00 00       	push   0x1f
    2229:	f2 e9 f1 fd ff ff    	bnd jmp 2020 <.plt>
    222f:	90                   	nop
    2230:	f3 0f 1e fa          	endbr64 
    2234:	68 20 00 00 00       	push   0x20
    2239:	f2 e9 e1 fd ff ff    	bnd jmp 2020 <.plt>
    223f:	90                   	nop
    2240:	f3 0f 1e fa          	endbr64 
    2244:	68 21 00 00 00       	push   0x21
    2249:	f2 e9 d1 fd ff ff    	bnd jmp 2020 <.plt>
    224f:	90                   	nop
    2250:	f3 0f 1e fa          	endbr64 
    2254:	68 22 00 00 00       	push   0x22
    2259:	f2 e9 c1 fd ff ff    	bnd jmp 2020 <.plt>
    225f:	90                   	nop
    2260:	f3 0f 1e fa          	endbr64 
    2264:	68 23 00 00 00       	push   0x23
    2269:	f2 e9 b1 fd ff ff    	bnd jmp 2020 <.plt>
    226f:	90                   	nop
    2270:	f3 0f 1e fa          	endbr64 
    2274:	68 24 00 00 00       	push   0x24
    2279:	f2 e9 a1 fd ff ff    	bnd jmp 2020 <.plt>
    227f:	90                   	nop
    2280:	f3 0f 1e fa          	endbr64 
    2284:	68 25 00 00 00       	push   0x25
    2289:	f2 e9 91 fd ff ff    	bnd jmp 2020 <.plt>
    228f:	90                   	nop
    2290:	f3 0f 1e fa          	endbr64 
    2294:	68 26 00 00 00       	push   0x26
    2299:	f2 e9 81 fd ff ff    	bnd jmp 2020 <.plt>
    229f:	90                   	nop
    22a0:	f3 0f 1e fa          	endbr64 
    22a4:	68 27 00 00 00       	push   0x27
    22a9:	f2 e9 71 fd ff ff    	bnd jmp 2020 <.plt>
    22af:	90                   	nop
    22b0:	f3 0f 1e fa          	endbr64 
    22b4:	68 28 00 00 00       	push   0x28
    22b9:	f2 e9 61 fd ff ff    	bnd jmp 2020 <.plt>
    22bf:	90                   	nop
    22c0:	f3 0f 1e fa          	endbr64 
    22c4:	68 29 00 00 00       	push   0x29
    22c9:	f2 e9 51 fd ff ff    	bnd jmp 2020 <.plt>
    22cf:	90                   	nop
    22d0:	f3 0f 1e fa          	endbr64 
    22d4:	68 2a 00 00 00       	push   0x2a
    22d9:	f2 e9 41 fd ff ff    	bnd jmp 2020 <.plt>
    22df:	90                   	nop
    22e0:	f3 0f 1e fa          	endbr64 
    22e4:	68 2b 00 00 00       	push   0x2b
    22e9:	f2 e9 31 fd ff ff    	bnd jmp 2020 <.plt>
    22ef:	90                   	nop
    22f0:	f3 0f 1e fa          	endbr64 
    22f4:	68 2c 00 00 00       	push   0x2c
    22f9:	f2 e9 21 fd ff ff    	bnd jmp 2020 <.plt>
    22ff:	90                   	nop
    2300:	f3 0f 1e fa          	endbr64 
    2304:	68 2d 00 00 00       	push   0x2d
    2309:	f2 e9 11 fd ff ff    	bnd jmp 2020 <.plt>
    230f:	90                   	nop
    2310:	f3 0f 1e fa          	endbr64 
    2314:	68 2e 00 00 00       	push   0x2e
    2319:	f2 e9 01 fd ff ff    	bnd jmp 2020 <.plt>
    231f:	90                   	nop
    2320:	f3 0f 1e fa          	endbr64 
    2324:	68 2f 00 00 00       	push   0x2f
    2329:	f2 e9 f1 fc ff ff    	bnd jmp 2020 <.plt>
    232f:	90                   	nop
    2330:	f3 0f 1e fa          	endbr64 
    2334:	68 30 00 00 00       	push   0x30
    2339:	f2 e9 e1 fc ff ff    	bnd jmp 2020 <.plt>
    233f:	90                   	nop
    2340:	f3 0f 1e fa          	endbr64 
    2344:	68 31 00 00 00       	push   0x31
    2349:	f2 e9 d1 fc ff ff    	bnd jmp 2020 <.plt>
    234f:	90                   	nop
    2350:	f3 0f 1e fa          	endbr64 
    2354:	68 32 00 00 00       	push   0x32
    2359:	f2 e9 c1 fc ff ff    	bnd jmp 2020 <.plt>
    235f:	90                   	nop
    2360:	f3 0f 1e fa          	endbr64 
    2364:	68 33 00 00 00       	push   0x33
    2369:	f2 e9 b1 fc ff ff    	bnd jmp 2020 <.plt>
    236f:	90                   	nop
    2370:	f3 0f 1e fa          	endbr64 
    2374:	68 34 00 00 00       	push   0x34
    2379:	f2 e9 a1 fc ff ff    	bnd jmp 2020 <.plt>
    237f:	90                   	nop
    2380:	f3 0f 1e fa          	endbr64 
    2384:	68 35 00 00 00       	push   0x35
    2389:	f2 e9 91 fc ff ff    	bnd jmp 2020 <.plt>
    238f:	90                   	nop
    2390:	f3 0f 1e fa          	endbr64 
    2394:	68 36 00 00 00       	push   0x36
    2399:	f2 e9 81 fc ff ff    	bnd jmp 2020 <.plt>
    239f:	90                   	nop
    23a0:	f3 0f 1e fa          	endbr64 
    23a4:	68 37 00 00 00       	push   0x37
    23a9:	f2 e9 71 fc ff ff    	bnd jmp 2020 <.plt>
    23af:	90                   	nop
    23b0:	f3 0f 1e fa          	endbr64 
    23b4:	68 38 00 00 00       	push   0x38
    23b9:	f2 e9 61 fc ff ff    	bnd jmp 2020 <.plt>
    23bf:	90                   	nop
    23c0:	f3 0f 1e fa          	endbr64 
    23c4:	68 39 00 00 00       	push   0x39
    23c9:	f2 e9 51 fc ff ff    	bnd jmp 2020 <.plt>
    23cf:	90                   	nop
    23d0:	f3 0f 1e fa          	endbr64 
    23d4:	68 3a 00 00 00       	push   0x3a
    23d9:	f2 e9 41 fc ff ff    	bnd jmp 2020 <.plt>
    23df:	90                   	nop
    23e0:	f3 0f 1e fa          	endbr64 
    23e4:	68 3b 00 00 00       	push   0x3b
    23e9:	f2 e9 31 fc ff ff    	bnd jmp 2020 <.plt>
    23ef:	90                   	nop
    23f0:	f3 0f 1e fa          	endbr64 
    23f4:	68 3c 00 00 00       	push   0x3c
    23f9:	f2 e9 21 fc ff ff    	bnd jmp 2020 <.plt>
    23ff:	90                   	nop
    2400:	f3 0f 1e fa          	endbr64 
    2404:	68 3d 00 00 00       	push   0x3d
    2409:	f2 e9 11 fc ff ff    	bnd jmp 2020 <.plt>
    240f:	90                   	nop
    2410:	f3 0f 1e fa          	endbr64 
    2414:	68 3e 00 00 00       	push   0x3e
    2419:	f2 e9 01 fc ff ff    	bnd jmp 2020 <.plt>
    241f:	90                   	nop
    2420:	f3 0f 1e fa          	endbr64 
    2424:	68 3f 00 00 00       	push   0x3f
    2429:	f2 e9 f1 fb ff ff    	bnd jmp 2020 <.plt>
    242f:	90                   	nop
    2430:	f3 0f 1e fa          	endbr64 
    2434:	68 40 00 00 00       	push   0x40
    2439:	f2 e9 e1 fb ff ff    	bnd jmp 2020 <.plt>
    243f:	90                   	nop
    2440:	f3 0f 1e fa          	endbr64 
    2444:	68 41 00 00 00       	push   0x41
    2449:	f2 e9 d1 fb ff ff    	bnd jmp 2020 <.plt>
    244f:	90                   	nop
    2450:	f3 0f 1e fa          	endbr64 
    2454:	68 42 00 00 00       	push   0x42
    2459:	f2 e9 c1 fb ff ff    	bnd jmp 2020 <.plt>
    245f:	90                   	nop
    2460:	f3 0f 1e fa          	endbr64 
    2464:	68 43 00 00 00       	push   0x43
    2469:	f2 e9 b1 fb ff ff    	bnd jmp 2020 <.plt>
    246f:	90                   	nop
    2470:	f3 0f 1e fa          	endbr64 
    2474:	68 44 00 00 00       	push   0x44
    2479:	f2 e9 a1 fb ff ff    	bnd jmp 2020 <.plt>
    247f:	90                   	nop

Disassembly of section .plt.got:

0000000000002480 <__cxa_finalize@plt>:
    2480:	f3 0f 1e fa          	endbr64 
    2484:	f2 ff 25 6d eb 00 00 	bnd jmp QWORD PTR [rip+0xeb6d]        # 10ff8 <__cxa_finalize@GLIBC_2.2.5>
    248b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

0000000000002490 <free@plt>:
    2490:	f3 0f 1e fa          	endbr64 
    2494:	f2 ff 25 15 e9 00 00 	bnd jmp QWORD PTR [rip+0xe915]        # 10db0 <free@GLIBC_2.2.5>
    249b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024a0 <putchar@plt>:
    24a0:	f3 0f 1e fa          	endbr64 
    24a4:	f2 ff 25 0d e9 00 00 	bnd jmp QWORD PTR [rip+0xe90d]        # 10db8 <putchar@GLIBC_2.2.5>
    24ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024b0 <pthread_create@plt>:
    24b0:	f3 0f 1e fa          	endbr64 
    24b4:	f2 ff 25 05 e9 00 00 	bnd jmp QWORD PTR [rip+0xe905]        # 10dc0 <pthread_create@GLIBC_2.2.5>
    24bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024c0 <localtime@plt>:
    24c0:	f3 0f 1e fa          	endbr64 
    24c4:	f2 ff 25 fd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8fd]        # 10dc8 <localtime@GLIBC_2.2.5>
    24cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024d0 <strncpy@plt>:
    24d0:	f3 0f 1e fa          	endbr64 
    24d4:	f2 ff 25 f5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8f5]        # 10dd0 <strncpy@GLIBC_2.2.5>
    24db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024e0 <strncmp@plt>:
    24e0:	f3 0f 1e fa          	endbr64 
    24e4:	f2 ff 25 ed e8 00 00 	bnd jmp QWORD PTR [rip+0xe8ed]        # 10dd8 <strncmp@GLIBC_2.2.5>
    24eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024f0 <strcpy@plt>:
    24f0:	f3 0f 1e fa          	endbr64 
    24f4:	f2 ff 25 e5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8e5]        # 10de0 <strcpy@GLIBC_2.2.5>
    24fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002500 <lua_settop@plt>:
    2500:	f3 0f 1e fa          	endbr64 
    2504:	f2 ff 25 dd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8dd]        # 10de8 <lua_settop@LUA_5.3>
    250b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002510 <lua_gettop@plt>:
    2510:	f3 0f 1e fa          	endbr64 
    2514:	f2 ff 25 d5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8d5]        # 10df0 <lua_gettop@LUA_5.3>
    251b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002520 <puts@plt>:
    2520:	f3 0f 1e fa          	endbr64 
    2524:	f2 ff 25 cd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8cd]        # 10df8 <puts@GLIBC_2.2.5>
    252b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002530 <setsockopt@plt>:
    2530:	f3 0f 1e fa          	endbr64 
    2534:	f2 ff 25 c5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8c5]        # 10e00 <setsockopt@GLIBC_2.2.5>
    253b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002540 <backtrace_symbols@plt>:
    2540:	f3 0f 1e fa          	endbr64 
    2544:	f2 ff 25 bd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8bd]        # 10e08 <backtrace_symbols@GLIBC_2.2.5>
    254b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002550 <sqlite3_exec@plt>:
    2550:	f3 0f 1e fa          	endbr64 
    2554:	f2 ff 25 b5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8b5]        # 10e10 <sqlite3_exec>
    255b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002560 <sqlite3_open@plt>:
    2560:	f3 0f 1e fa          	endbr64 
    2564:	f2 ff 25 ad e8 00 00 	bnd jmp QWORD PTR [rip+0xe8ad]        # 10e18 <sqlite3_open>
    256b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002570 <fclose@plt>:
    2570:	f3 0f 1e fa          	endbr64 
    2574:	f2 ff 25 a5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8a5]        # 10e20 <fclose@GLIBC_2.2.5>
    257b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002580 <opendir@plt>:
    2580:	f3 0f 1e fa          	endbr64 
    2584:	f2 ff 25 9d e8 00 00 	bnd jmp QWORD PTR [rip+0xe89d]        # 10e28 <opendir@GLIBC_2.2.5>
    258b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002590 <strlen@plt>:
    2590:	f3 0f 1e fa          	endbr64 
    2594:	f2 ff 25 95 e8 00 00 	bnd jmp QWORD PTR [rip+0xe895]        # 10e30 <strlen@GLIBC_2.2.5>
    259b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025a0 <backtrace@plt>:
    25a0:	f3 0f 1e fa          	endbr64 
    25a4:	f2 ff 25 8d e8 00 00 	bnd jmp QWORD PTR [rip+0xe88d]        # 10e38 <backtrace@GLIBC_2.2.5>
    25ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025b0 <__stack_chk_fail@plt>:
    25b0:	f3 0f 1e fa          	endbr64 
    25b4:	f2 ff 25 85 e8 00 00 	bnd jmp QWORD PTR [rip+0xe885]        # 10e40 <__stack_chk_fail@GLIBC_2.4>
    25bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025c0 <htons@plt>:
    25c0:	f3 0f 1e fa          	endbr64 
    25c4:	f2 ff 25 7d e8 00 00 	bnd jmp QWORD PTR [rip+0xe87d]        # 10e48 <htons@GLIBC_2.2.5>
    25cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025d0 <send@plt>:
    25d0:	f3 0f 1e fa          	endbr64 
    25d4:	f2 ff 25 75 e8 00 00 	bnd jmp QWORD PTR [rip+0xe875]        # 10e50 <send@GLIBC_2.2.5>
    25db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025e0 <strchr@plt>:
    25e0:	f3 0f 1e fa          	endbr64 
    25e4:	f2 ff 25 6d e8 00 00 	bnd jmp QWORD PTR [rip+0xe86d]        # 10e58 <strchr@GLIBC_2.2.5>
    25eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025f0 <printf@plt>:
    25f0:	f3 0f 1e fa          	endbr64 
    25f4:	f2 ff 25 65 e8 00 00 	bnd jmp QWORD PTR [rip+0xe865]        # 10e60 <printf@GLIBC_2.2.5>
    25fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002600 <snprintf@plt>:
    2600:	f3 0f 1e fa          	endbr64 
    2604:	f2 ff 25 5d e8 00 00 	bnd jmp QWORD PTR [rip+0xe85d]        # 10e68 <snprintf@GLIBC_2.2.5>
    260b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002610 <fputs@plt>:
    2610:	f3 0f 1e fa          	endbr64 
    2614:	f2 ff 25 55 e8 00 00 	bnd jmp QWORD PTR [rip+0xe855]        # 10e70 <fputs@GLIBC_2.2.5>
    261b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002620 <htonl@plt>:
    2620:	f3 0f 1e fa          	endbr64 
    2624:	f2 ff 25 4d e8 00 00 	bnd jmp QWORD PTR [rip+0xe84d]        # 10e78 <htonl@GLIBC_2.2.5>
    262b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002630 <memset@plt>:
    2630:	f3 0f 1e fa          	endbr64 
    2634:	f2 ff 25 45 e8 00 00 	bnd jmp QWORD PTR [rip+0xe845]        # 10e80 <memset@GLIBC_2.2.5>
    263b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002640 <strncat@plt>:
    2640:	f3 0f 1e fa          	endbr64 
    2644:	f2 ff 25 3d e8 00 00 	bnd jmp QWORD PTR [rip+0xe83d]        # 10e88 <strncat@GLIBC_2.2.5>
    264b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002650 <close@plt>:
    2650:	f3 0f 1e fa          	endbr64 
    2654:	f2 ff 25 35 e8 00 00 	bnd jmp QWORD PTR [rip+0xe835]        # 10e90 <close@GLIBC_2.2.5>
    265b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002660 <regcomp@plt>:
    2660:	f3 0f 1e fa          	endbr64 
    2664:	f2 ff 25 2d e8 00 00 	bnd jmp QWORD PTR [rip+0xe82d]        # 10e98 <regcomp@GLIBC_2.2.5>
    266b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002670 <strcspn@plt>:
    2670:	f3 0f 1e fa          	endbr64 
    2674:	f2 ff 25 25 e8 00 00 	bnd jmp QWORD PTR [rip+0xe825]        # 10ea0 <strcspn@GLIBC_2.2.5>
    267b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002680 <read@plt>:
    2680:	f3 0f 1e fa          	endbr64 
    2684:	f2 ff 25 1d e8 00 00 	bnd jmp QWORD PTR [rip+0xe81d]        # 10ea8 <read@GLIBC_2.2.5>
    268b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002690 <lua_close@plt>:
    2690:	f3 0f 1e fa          	endbr64 
    2694:	f2 ff 25 15 e8 00 00 	bnd jmp QWORD PTR [rip+0xe815]        # 10eb0 <lua_close@LUA_5.3>
    269b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026a0 <sqlite3_errmsg@plt>:
    26a0:	f3 0f 1e fa          	endbr64 
    26a4:	f2 ff 25 0d e8 00 00 	bnd jmp QWORD PTR [rip+0xe80d]        # 10eb8 <sqlite3_errmsg>
    26ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026b0 <strcmp@plt>:
    26b0:	f3 0f 1e fa          	endbr64 
    26b4:	f2 ff 25 05 e8 00 00 	bnd jmp QWORD PTR [rip+0xe805]        # 10ec0 <strcmp@GLIBC_2.2.5>
    26bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026c0 <signal@plt>:
    26c0:	f3 0f 1e fa          	endbr64 
    26c4:	f2 ff 25 fd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7fd]        # 10ec8 <signal@GLIBC_2.2.5>
    26cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026d0 <fprintf@plt>:
    26d0:	f3 0f 1e fa          	endbr64 
    26d4:	f2 ff 25 f5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7f5]        # 10ed0 <fprintf@GLIBC_2.2.5>
    26db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026e0 <strtol@plt>:
    26e0:	f3 0f 1e fa          	endbr64 
    26e4:	f2 ff 25 ed e7 00 00 	bnd jmp QWORD PTR [rip+0xe7ed]        # 10ed8 <strtol@GLIBC_2.2.5>
    26eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026f0 <sqlite3_close@plt>:
    26f0:	f3 0f 1e fa          	endbr64 
    26f4:	f2 ff 25 e5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7e5]        # 10ee0 <sqlite3_close>
    26fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002700 <time@plt>:
    2700:	f3 0f 1e fa          	endbr64 
    2704:	f2 ff 25 dd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7dd]        # 10ee8 <time@GLIBC_2.2.5>
    270b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002710 <readdir@plt>:
    2710:	f3 0f 1e fa          	endbr64 
    2714:	f2 ff 25 d5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7d5]        # 10ef0 <readdir@GLIBC_2.2.5>
    271b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002720 <luaL_newstate@plt>:
    2720:	f3 0f 1e fa          	endbr64 
    2724:	f2 ff 25 cd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7cd]        # 10ef8 <luaL_newstate@LUA_5.3>
    272b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002730 <pcap_loop@plt>:
    2730:	f3 0f 1e fa          	endbr64 
    2734:	f2 ff 25 c5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7c5]        # 10f00 <pcap_loop>
    273b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002740 <malloc@plt>:
    2740:	f3 0f 1e fa          	endbr64 
    2744:	f2 ff 25 bd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7bd]        # 10f08 <malloc@GLIBC_2.2.5>
    274b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002750 <listen@plt>:
    2750:	f3 0f 1e fa          	endbr64 
    2754:	f2 ff 25 b5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7b5]        # 10f10 <listen@GLIBC_2.2.5>
    275b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002760 <lua_pcallk@plt>:
    2760:	f3 0f 1e fa          	endbr64 
    2764:	f2 ff 25 ad e7 00 00 	bnd jmp QWORD PTR [rip+0xe7ad]        # 10f18 <lua_pcallk@LUA_5.3>
    276b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002770 <regexec@plt>:
    2770:	f3 0f 1e fa          	endbr64 
    2774:	f2 ff 25 a5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7a5]        # 10f20 <regexec@GLIBC_2.3.4>
    277b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002780 <ntohs@plt>:
    2780:	f3 0f 1e fa          	endbr64 
    2784:	f2 ff 25 9d e7 00 00 	bnd jmp QWORD PTR [rip+0xe79d]        # 10f28 <ntohs@GLIBC_2.2.5>
    278b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002790 <luaL_loadfilex@plt>:
    2790:	f3 0f 1e fa          	endbr64 
    2794:	f2 ff 25 95 e7 00 00 	bnd jmp QWORD PTR [rip+0xe795]        # 10f30 <luaL_loadfilex@LUA_5.3>
    279b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027a0 <bind@plt>:
    27a0:	f3 0f 1e fa          	endbr64 
    27a4:	f2 ff 25 8d e7 00 00 	bnd jmp QWORD PTR [rip+0xe78d]        # 10f38 <bind@GLIBC_2.2.5>
    27ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027b0 <fopen@plt>:
    27b0:	f3 0f 1e fa          	endbr64 
    27b4:	f2 ff 25 85 e7 00 00 	bnd jmp QWORD PTR [rip+0xe785]        # 10f40 <fopen@GLIBC_2.2.5>
    27bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027c0 <perror@plt>:
    27c0:	f3 0f 1e fa          	endbr64 
    27c4:	f2 ff 25 7d e7 00 00 	bnd jmp QWORD PTR [rip+0xe77d]        # 10f48 <perror@GLIBC_2.2.5>
    27cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027d0 <strtok@plt>:
    27d0:	f3 0f 1e fa          	endbr64 
    27d4:	f2 ff 25 75 e7 00 00 	bnd jmp QWORD PTR [rip+0xe775]        # 10f50 <strtok@GLIBC_2.2.5>
    27db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027e0 <pthread_join@plt>:
    27e0:	f3 0f 1e fa          	endbr64 
    27e4:	f2 ff 25 6d e7 00 00 	bnd jmp QWORD PTR [rip+0xe76d]        # 10f58 <pthread_join@GLIBC_2.2.5>
    27eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027f0 <luaL_openlibs@plt>:
    27f0:	f3 0f 1e fa          	endbr64 
    27f4:	f2 ff 25 65 e7 00 00 	bnd jmp QWORD PTR [rip+0xe765]        # 10f60 <luaL_openlibs@LUA_5.3>
    27fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002800 <getopt@plt>:
    2800:	f3 0f 1e fa          	endbr64 
    2804:	f2 ff 25 5d e7 00 00 	bnd jmp QWORD PTR [rip+0xe75d]        # 10f68 <getopt@GLIBC_2.2.5>
    280b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002810 <accept@plt>:
    2810:	f3 0f 1e fa          	endbr64 
    2814:	f2 ff 25 55 e7 00 00 	bnd jmp QWORD PTR [rip+0xe755]        # 10f70 <accept@GLIBC_2.2.5>
    281b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002820 <atoi@plt>:
    2820:	f3 0f 1e fa          	endbr64 
    2824:	f2 ff 25 4d e7 00 00 	bnd jmp QWORD PTR [rip+0xe74d]        # 10f78 <atoi@GLIBC_2.2.5>
    282b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002830 <getline@plt>:
    2830:	f3 0f 1e fa          	endbr64 
    2834:	f2 ff 25 45 e7 00 00 	bnd jmp QWORD PTR [rip+0xe745]        # 10f80 <getline@GLIBC_2.2.5>
    283b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002840 <strcat@plt>:
    2840:	f3 0f 1e fa          	endbr64 
    2844:	f2 ff 25 3d e7 00 00 	bnd jmp QWORD PTR [rip+0xe73d]        # 10f88 <strcat@GLIBC_2.2.5>
    284b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002850 <pcap_open_live@plt>:
    2850:	f3 0f 1e fa          	endbr64 
    2854:	f2 ff 25 35 e7 00 00 	bnd jmp QWORD PTR [rip+0xe735]        # 10f90 <pcap_open_live>
    285b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002860 <sqlite3_free@plt>:
    2860:	f3 0f 1e fa          	endbr64 
    2864:	f2 ff 25 2d e7 00 00 	bnd jmp QWORD PTR [rip+0xe72d]        # 10f98 <sqlite3_free>
    286b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002870 <sprintf@plt>:
    2870:	f3 0f 1e fa          	endbr64 
    2874:	f2 ff 25 25 e7 00 00 	bnd jmp QWORD PTR [rip+0xe725]        # 10fa0 <sprintf@GLIBC_2.2.5>
    287b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002880 <exit@plt>:
    2880:	f3 0f 1e fa          	endbr64 
    2884:	f2 ff 25 1d e7 00 00 	bnd jmp QWORD PTR [rip+0xe71d]        # 10fa8 <exit@GLIBC_2.2.5>
    288b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002890 <ntohl@plt>:
    2890:	f3 0f 1e fa          	endbr64 
    2894:	f2 ff 25 15 e7 00 00 	bnd jmp QWORD PTR [rip+0xe715]        # 10fb0 <ntohl@GLIBC_2.2.5>
    289b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028a0 <sleep@plt>:
    28a0:	f3 0f 1e fa          	endbr64 
    28a4:	f2 ff 25 0d e7 00 00 	bnd jmp QWORD PTR [rip+0xe70d]        # 10fb8 <sleep@GLIBC_2.2.5>
    28ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028b0 <getdelim@plt>:
    28b0:	f3 0f 1e fa          	endbr64 
    28b4:	f2 ff 25 05 e7 00 00 	bnd jmp QWORD PTR [rip+0xe705]        # 10fc0 <getdelim@GLIBC_2.2.5>
    28bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028c0 <strstr@plt>:
    28c0:	f3 0f 1e fa          	endbr64 
    28c4:	f2 ff 25 fd e6 00 00 	bnd jmp QWORD PTR [rip+0xe6fd]        # 10fc8 <strstr@GLIBC_2.2.5>
    28cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028d0 <socket@plt>:
    28d0:	f3 0f 1e fa          	endbr64 
    28d4:	f2 ff 25 f5 e6 00 00 	bnd jmp QWORD PTR [rip+0xe6f5]        # 10fd0 <socket@GLIBC_2.2.5>
    28db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000000028e0 <_start>:
    28e0:	f3 0f 1e fa          	endbr64 
    28e4:	31 ed                	xor    ebp,ebp
    28e6:	49 89 d1             	mov    r9,rdx
    28e9:	5e                   	pop    rsi
    28ea:	48 89 e2             	mov    rdx,rsp
    28ed:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    28f1:	50                   	push   rax
    28f2:	54                   	push   rsp
    28f3:	4c 8d 05 16 94 00 00 	lea    r8,[rip+0x9416]        # bd10 <__libc_csu_fini>
    28fa:	48 8d 0d 9f 93 00 00 	lea    rcx,[rip+0x939f]        # bca0 <__libc_csu_init>
    2901:	48 8d 3d f0 40 00 00 	lea    rdi,[rip+0x40f0]        # 69f8 <main>
    2908:	ff 15 d2 e6 00 00    	call   QWORD PTR [rip+0xe6d2]        # 10fe0 <__libc_start_main@GLIBC_2.2.5>
    290e:	f4                   	hlt    
    290f:	90                   	nop

0000000000002910 <deregister_tm_clones>:
    2910:	48 8d 3d 31 e7 00 00 	lea    rdi,[rip+0xe731]        # 11048 <__TMC_END__>
    2917:	48 8d 05 2a e7 00 00 	lea    rax,[rip+0xe72a]        # 11048 <__TMC_END__>
    291e:	48 39 f8             	cmp    rax,rdi
    2921:	74 15                	je     2938 <deregister_tm_clones+0x28>
    2923:	48 8b 05 ae e6 00 00 	mov    rax,QWORD PTR [rip+0xe6ae]        # 10fd8 <_ITM_deregisterTMCloneTable>
    292a:	48 85 c0             	test   rax,rax
    292d:	74 09                	je     2938 <deregister_tm_clones+0x28>
    292f:	ff e0                	jmp    rax
    2931:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    2938:	c3                   	ret    
    2939:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002940 <register_tm_clones>:
    2940:	48 8d 3d 01 e7 00 00 	lea    rdi,[rip+0xe701]        # 11048 <__TMC_END__>
    2947:	48 8d 35 fa e6 00 00 	lea    rsi,[rip+0xe6fa]        # 11048 <__TMC_END__>
    294e:	48 29 fe             	sub    rsi,rdi
    2951:	48 89 f0             	mov    rax,rsi
    2954:	48 c1 ee 3f          	shr    rsi,0x3f
    2958:	48 c1 f8 03          	sar    rax,0x3
    295c:	48 01 c6             	add    rsi,rax
    295f:	48 d1 fe             	sar    rsi,1
    2962:	74 14                	je     2978 <register_tm_clones+0x38>
    2964:	48 8b 05 85 e6 00 00 	mov    rax,QWORD PTR [rip+0xe685]        # 10ff0 <_ITM_registerTMCloneTable>
    296b:	48 85 c0             	test   rax,rax
    296e:	74 08                	je     2978 <register_tm_clones+0x38>
    2970:	ff e0                	jmp    rax
    2972:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    2978:	c3                   	ret    
    2979:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002980 <__do_global_dtors_aux>:
    2980:	f3 0f 1e fa          	endbr64 
    2984:	80 3d dd e6 00 00 00 	cmp    BYTE PTR [rip+0xe6dd],0x0        # 11068 <completed.8061>
    298b:	75 2b                	jne    29b8 <__do_global_dtors_aux+0x38>
    298d:	55                   	push   rbp
    298e:	48 83 3d 62 e6 00 00 	cmp    QWORD PTR [rip+0xe662],0x0        # 10ff8 <__cxa_finalize@GLIBC_2.2.5>
    2995:	00 
    2996:	48 89 e5             	mov    rbp,rsp
    2999:	74 0c                	je     29a7 <__do_global_dtors_aux+0x27>
    299b:	48 8b 3d 66 e6 00 00 	mov    rdi,QWORD PTR [rip+0xe666]        # 11008 <__dso_handle>
    29a2:	e8 d9 fa ff ff       	call   2480 <__cxa_finalize@plt>
    29a7:	e8 64 ff ff ff       	call   2910 <deregister_tm_clones>
    29ac:	c6 05 b5 e6 00 00 01 	mov    BYTE PTR [rip+0xe6b5],0x1        # 11068 <completed.8061>
    29b3:	5d                   	pop    rbp
    29b4:	c3                   	ret    
    29b5:	0f 1f 00             	nop    DWORD PTR [rax]
    29b8:	c3                   	ret    
    29b9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000029c0 <frame_dummy>:
    29c0:	f3 0f 1e fa          	endbr64 
    29c4:	e9 77 ff ff ff       	jmp    2940 <register_tm_clones>

00000000000029c9 <add_thread>:
    29c9:	f3 0f 1e fa          	endbr64 
    29cd:	55                   	push   rbp
    29ce:	48 89 e5             	mov    rbp,rsp
    29d1:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    29d5:	8b 05 a5 e6 00 00    	mov    eax,DWORD PTR [rip+0xe6a5]        # 11080 <thread_count>
    29db:	8d 50 01             	lea    edx,[rax+0x1]
    29de:	89 15 9c e6 00 00    	mov    DWORD PTR [rip+0xe69c],edx        # 11080 <thread_count>
    29e4:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    29e8:	48 8b 12             	mov    rdx,QWORD PTR [rdx]
    29eb:	48 98                	cdqe   
    29ed:	48 8d 0c c5 00 00 00 	lea    rcx,[rax*8+0x0]
    29f4:	00 
    29f5:	48 8d 05 64 53 10 00 	lea    rax,[rip+0x105364]        # 107d60 <threads>
    29fc:	48 89 14 01          	mov    QWORD PTR [rcx+rax*1],rdx
    2a00:	90                   	nop
    2a01:	5d                   	pop    rbp
    2a02:	c3                   	ret    

0000000000002a03 <pktmgr>:
    2a03:	f3 0f 1e fa          	endbr64 
    2a07:	55                   	push   rbp
    2a08:	48 89 e5             	mov    rbp,rsp
    2a0b:	53                   	push   rbx
    2a0c:	48 83 ec 38          	sub    rsp,0x38
    2a10:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    2a14:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    2a18:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    2a1c:	0f b6 05 36 53 10 00 	movzx  eax,BYTE PTR [rip+0x105336]        # 107d59 <packet_print>
    2a23:	84 c0                	test   al,al
    2a25:	74 0c                	je     2a33 <pktmgr+0x30>
    2a27:	48 8d 3d 22 96 00 00 	lea    rdi,[rip+0x9622]        # c050 <_IO_stdin_used+0x50>
    2a2e:	e8 ed fa ff ff       	call   2520 <puts@plt>
    2a33:	8b 05 4b e6 00 00    	mov    eax,DWORD PTR [rip+0xe64b]        # 11084 <total_pkt_captured>
    2a39:	83 c0 01             	add    eax,0x1
    2a3c:	89 05 42 e6 00 00    	mov    DWORD PTR [rip+0xe642],eax        # 11084 <total_pkt_captured>
    2a42:	8b 05 18 55 10 00    	mov    eax,DWORD PTR [rip+0x105518]        # 107f60 <pkt_counter>
    2a48:	83 c0 01             	add    eax,0x1
    2a4b:	89 05 0f 55 10 00    	mov    DWORD PTR [rip+0x10550f],eax        # 107f60 <pkt_counter>
    2a51:	8b 15 09 55 10 00    	mov    edx,DWORD PTR [rip+0x105509]        # 107f60 <pkt_counter>
    2a57:	8b 05 43 4e 10 00    	mov    eax,DWORD PTR [rip+0x104e43]        # 1078a0 <clean_delay_pkts>
    2a5d:	39 c2                	cmp    edx,eax
    2a5f:	72 0a                	jb     2a6b <pktmgr+0x68>
    2a61:	c7 05 f5 54 10 00 00 	mov    DWORD PTR [rip+0x1054f5],0x0        # 107f60 <pkt_counter>
    2a68:	00 00 00 
    2a6b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2a6f:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    2a73:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2a77:	0f b7 40 0c          	movzx  eax,WORD PTR [rax+0xc]
    2a7b:	0f b7 c0             	movzx  eax,ax
    2a7e:	3d 86 dd 00 00       	cmp    eax,0xdd86
    2a83:	74 46                	je     2acb <pktmgr+0xc8>
    2a85:	3d 86 dd 00 00       	cmp    eax,0xdd86
    2a8a:	7f 77                	jg     2b03 <pktmgr+0x100>
    2a8c:	3d 80 35 00 00       	cmp    eax,0x3580
    2a91:	74 23                	je     2ab6 <pktmgr+0xb3>
    2a93:	3d 80 35 00 00       	cmp    eax,0x3580
    2a98:	7f 69                	jg     2b03 <pktmgr+0x100>
    2a9a:	3d 08 06 00 00       	cmp    eax,0x608
    2a9f:	74 15                	je     2ab6 <pktmgr+0xb3>
    2aa1:	3d 08 06 00 00       	cmp    eax,0x608
    2aa6:	7f 5b                	jg     2b03 <pktmgr+0x100>
    2aa8:	83 f8 08             	cmp    eax,0x8
    2aab:	74 33                	je     2ae0 <pktmgr+0xdd>
    2aad:	3d 90 00 00 00       	cmp    eax,0x90
    2ab2:	74 41                	je     2af5 <pktmgr+0xf2>
    2ab4:	eb 4d                	jmp    2b03 <pktmgr+0x100>
    2ab6:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2aba:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2abe:	48 89 d6             	mov    rsi,rdx
    2ac1:	48 89 c7             	mov    rdi,rax
    2ac4:	e8 87 00 00 00       	call   2b50 <arpdecode>
    2ac9:	eb 7d                	jmp    2b48 <pktmgr+0x145>
    2acb:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2acf:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2ad3:	48 89 d6             	mov    rsi,rdx
    2ad6:	48 89 c7             	mov    rdi,rax
    2ad9:	e8 dc 88 00 00       	call   b3ba <ip6decode>
    2ade:	eb 68                	jmp    2b48 <pktmgr+0x145>
    2ae0:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2ae4:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2ae8:	48 89 d6             	mov    rsi,rdx
    2aeb:	48 89 c7             	mov    rdi,rax
    2aee:	e8 58 0b 00 00       	call   364b <ipv4pktmgr>
    2af3:	eb 53                	jmp    2b48 <pktmgr+0x145>
    2af5:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2af9:	48 89 c7             	mov    rdi,rax
    2afc:	e8 43 03 00 00       	call   2e44 <loopback_ctp_decode>
    2b01:	eb 45                	jmp    2b48 <pktmgr+0x145>
    2b03:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2b07:	48 89 c7             	mov    rdi,rax
    2b0a:	e8 f6 04 00 00       	call   3005 <uc_mac_ntoa>
    2b0f:	48 89 c3             	mov    rbx,rax
    2b12:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2b16:	48 83 c0 06          	add    rax,0x6
    2b1a:	48 89 c7             	mov    rdi,rax
    2b1d:	e8 e3 04 00 00       	call   3005 <uc_mac_ntoa>
    2b22:	41 b9 ff ff ff ff    	mov    r9d,0xffffffff
    2b28:	41 b8 ff ff ff ff    	mov    r8d,0xffffffff
    2b2e:	48 89 d9             	mov    rcx,rbx
    2b31:	48 89 c2             	mov    rdx,rax
    2b34:	48 8d 35 5d 95 00 00 	lea    rsi,[rip+0x955d]        # c098 <_IO_stdin_used+0x98>
    2b3b:	48 8d 3d 88 95 00 00 	lea    rdi,[rip+0x9588]        # c0ca <_IO_stdin_used+0xca>
    2b42:	e8 c1 68 00 00       	call   9408 <lfprintf>
    2b47:	90                   	nop
    2b48:	90                   	nop
    2b49:	48 83 c4 38          	add    rsp,0x38
    2b4d:	5b                   	pop    rbx
    2b4e:	5d                   	pop    rbp
    2b4f:	c3                   	ret    

0000000000002b50 <arpdecode>:
    2b50:	f3 0f 1e fa          	endbr64 
    2b54:	55                   	push   rbp
    2b55:	48 89 e5             	mov    rbp,rsp
    2b58:	48 81 ec 50 03 00 00 	sub    rsp,0x350
    2b5f:	48 89 bd b8 fc ff ff 	mov    QWORD PTR [rbp-0x348],rdi
    2b66:	48 89 b5 b0 fc ff ff 	mov    QWORD PTR [rbp-0x350],rsi
    2b6d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2b74:	00 00 
    2b76:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2b7a:	31 c0                	xor    eax,eax
    2b7c:	0f b6 05 d6 51 10 00 	movzx  eax,BYTE PTR [rip+0x1051d6]        # 107d59 <packet_print>
    2b83:	84 c0                	test   al,al
    2b85:	74 18                	je     2b9f <arpdecode+0x4f>
    2b87:	48 8d 35 5a 95 00 00 	lea    rsi,[rip+0x955a]        # c0e8 <_IO_stdin_used+0xe8>
    2b8e:	48 8d 3d 5b 95 00 00 	lea    rdi,[rip+0x955b]        # c0f0 <_IO_stdin_used+0xf0>
    2b95:	b8 00 00 00 00       	mov    eax,0x0
    2b9a:	e8 51 fa ff ff       	call   25f0 <printf@plt>
    2b9f:	48 8b 85 b8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x348]
    2ba6:	48 83 c0 0e          	add    rax,0xe
    2baa:	48 89 85 c8 fc ff ff 	mov    QWORD PTR [rbp-0x338],rax
    2bb1:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2bb8:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    2bbc:	0f b7 c0             	movzx  eax,ax
    2bbf:	3d 00 18 00 00       	cmp    eax,0x1800
    2bc4:	74 35                	je     2bfb <arpdecode+0xab>
    2bc6:	3d 00 18 00 00       	cmp    eax,0x1800
    2bcb:	0f 8f 1d 02 00 00    	jg     2dee <arpdecode+0x29e>
    2bd1:	3d 00 02 00 00       	cmp    eax,0x200
    2bd6:	0f 84 eb 00 00 00    	je     2cc7 <arpdecode+0x177>
    2bdc:	3d 00 02 00 00       	cmp    eax,0x200
    2be1:	0f 8f 07 02 00 00    	jg     2dee <arpdecode+0x29e>
    2be7:	83 f8 02             	cmp    eax,0x2
    2bea:	0f 84 d7 00 00 00    	je     2cc7 <arpdecode+0x177>
    2bf0:	3d 00 01 00 00       	cmp    eax,0x100
    2bf5:	0f 85 f3 01 00 00    	jne    2dee <arpdecode+0x29e>
    2bfb:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2c02:	48 83 c0 18          	add    rax,0x18
    2c06:	48 89 c7             	mov    rdi,rax
    2c09:	e8 9d 04 00 00       	call   30ab <u8_ipv4_ntoa>
    2c0e:	48 89 c1             	mov    rcx,rax
    2c11:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2c15:	ba 20 00 00 00       	mov    edx,0x20
    2c1a:	48 89 ce             	mov    rsi,rcx
    2c1d:	48 89 c7             	mov    rdi,rax
    2c20:	e8 ab f8 ff ff       	call   24d0 <strncpy@plt>
    2c25:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2c2c:	48 83 c0 0e          	add    rax,0xe
    2c30:	48 89 c7             	mov    rdi,rax
    2c33:	e8 73 04 00 00       	call   30ab <u8_ipv4_ntoa>
    2c38:	48 89 c1             	mov    rcx,rax
    2c3b:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2c3f:	ba 20 00 00 00       	mov    edx,0x20
    2c44:	48 89 ce             	mov    rsi,rcx
    2c47:	48 89 c7             	mov    rdi,rax
    2c4a:	e8 81 f8 ff ff       	call   24d0 <strncpy@plt>
    2c4f:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2c53:	ba 05 00 00 00       	mov    edx,0x5
    2c58:	48 8d 35 94 94 00 00 	lea    rsi,[rip+0x9494]        # c0f3 <_IO_stdin_used+0xf3>
    2c5f:	48 89 c7             	mov    rdi,rax
    2c62:	e8 79 f8 ff ff       	call   24e0 <strncmp@plt>
    2c67:	85 c0                	test   eax,eax
    2c69:	75 2c                	jne    2c97 <arpdecode+0x147>
    2c6b:	0f b6 05 e7 50 10 00 	movzx  eax,BYTE PTR [rip+0x1050e7]        # 107d59 <packet_print>
    2c72:	84 c0                	test   al,al
    2c74:	0f 84 97 01 00 00    	je     2e11 <arpdecode+0x2c1>
    2c7a:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2c7e:	48 89 c6             	mov    rsi,rax
    2c81:	48 8d 3d 78 94 00 00 	lea    rdi,[rip+0x9478]        # c100 <_IO_stdin_used+0x100>
    2c88:	b8 00 00 00 00       	mov    eax,0x0
    2c8d:	e8 5e f9 ff ff       	call   25f0 <printf@plt>
    2c92:	e9 7a 01 00 00       	jmp    2e11 <arpdecode+0x2c1>
    2c97:	0f b6 05 bb 50 10 00 	movzx  eax,BYTE PTR [rip+0x1050bb]        # 107d59 <packet_print>
    2c9e:	84 c0                	test   al,al
    2ca0:	0f 84 6b 01 00 00    	je     2e11 <arpdecode+0x2c1>
    2ca6:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2caa:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2cae:	48 89 c6             	mov    rsi,rax
    2cb1:	48 8d 3d 68 94 00 00 	lea    rdi,[rip+0x9468]        # c120 <_IO_stdin_used+0x120>
    2cb8:	b8 00 00 00 00       	mov    eax,0x0
    2cbd:	e8 2e f9 ff ff       	call   25f0 <printf@plt>
    2cc2:	e9 4a 01 00 00       	jmp    2e11 <arpdecode+0x2c1>
    2cc7:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2cce:	48 83 c0 08          	add    rax,0x8
    2cd2:	48 89 c7             	mov    rdi,rax
    2cd5:	e8 7d 02 00 00       	call   2f57 <mac_ntoa>
    2cda:	48 89 c1             	mov    rcx,rax
    2cdd:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2ce1:	ba 40 00 00 00       	mov    edx,0x40
    2ce6:	48 89 ce             	mov    rsi,rcx
    2ce9:	48 89 c7             	mov    rdi,rax
    2cec:	e8 df f7 ff ff       	call   24d0 <strncpy@plt>
    2cf1:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2cf8:	48 83 c0 0e          	add    rax,0xe
    2cfc:	48 89 c7             	mov    rdi,rax
    2cff:	e8 a7 03 00 00       	call   30ab <u8_ipv4_ntoa>
    2d04:	48 89 c1             	mov    rcx,rax
    2d07:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d0b:	ba 20 00 00 00       	mov    edx,0x20
    2d10:	48 89 ce             	mov    rsi,rcx
    2d13:	48 89 c7             	mov    rdi,rax
    2d16:	e8 b5 f7 ff ff       	call   24d0 <strncpy@plt>
    2d1b:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2d1f:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d23:	48 89 d6             	mov    rsi,rdx
    2d26:	48 89 c7             	mov    rdi,rax
    2d29:	e8 04 51 00 00       	call   7e32 <entry_exists>
    2d2e:	83 f8 ff             	cmp    eax,0xffffffff
    2d31:	74 15                	je     2d48 <arpdecode+0x1f8>
    2d33:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2d37:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d3b:	48 89 d6             	mov    rsi,rdx
    2d3e:	48 89 c7             	mov    rdi,rax
    2d41:	e8 99 4f 00 00       	call   7cdf <compare_entries>
    2d46:	eb 7d                	jmp    2dc5 <arpdecode+0x275>
    2d48:	0f b6 05 f1 4f 10 00 	movzx  eax,BYTE PTR [rip+0x104ff1]        # 107d40 <use_sqlite>
    2d4f:	84 c0                	test   al,al
    2d51:	74 5f                	je     2db2 <arpdecode+0x262>
    2d53:	c7 85 f4 fc ff ff 00 	mov    DWORD PTR [rbp-0x30c],0x0
    2d5a:	00 00 00 
    2d5d:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    2d61:	48 8d 85 d0 fc ff ff 	lea    rax,[rbp-0x330]
    2d68:	48 89 d6             	mov    rsi,rdx
    2d6b:	48 89 c7             	mov    rdi,rax
    2d6e:	e8 7d f7 ff ff       	call   24f0 <strcpy@plt>
    2d73:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2d77:	48 8d 95 d0 fc ff ff 	lea    rdx,[rbp-0x330]
    2d7e:	48 83 c2 10          	add    rdx,0x10
    2d82:	48 89 c6             	mov    rsi,rax
    2d85:	48 89 d7             	mov    rdi,rdx
    2d88:	e8 63 f7 ff ff       	call   24f0 <strcpy@plt>
    2d8d:	48 8d 95 d0 fc ff ff 	lea    rdx,[rbp-0x330]
    2d94:	48 8d 85 c0 fc ff ff 	lea    rax,[rbp-0x340]
    2d9b:	48 89 d1             	mov    rcx,rdx
    2d9e:	48 8d 15 9b 55 00 00 	lea    rdx,[rip+0x559b]        # 8340 <update_db>
    2da5:	be 00 00 00 00       	mov    esi,0x0
    2daa:	48 89 c7             	mov    rdi,rax
    2dad:	e8 fe f6 ff ff       	call   24b0 <pthread_create@plt>
    2db2:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2db6:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2dba:	48 89 d6             	mov    rsi,rdx
    2dbd:	48 89 c7             	mov    rdi,rax
    2dc0:	e8 f9 4f 00 00       	call   7dbe <add_entry>
    2dc5:	0f b6 05 8d 4f 10 00 	movzx  eax,BYTE PTR [rip+0x104f8d]        # 107d59 <packet_print>
    2dcc:	84 c0                	test   al,al
    2dce:	74 44                	je     2e14 <arpdecode+0x2c4>
    2dd0:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2dd4:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2dd8:	48 89 c6             	mov    rsi,rax
    2ddb:	48 8d 3d 66 93 00 00 	lea    rdi,[rip+0x9366]        # c148 <_IO_stdin_used+0x148>
    2de2:	b8 00 00 00 00       	mov    eax,0x0
    2de7:	e8 04 f8 ff ff       	call   25f0 <printf@plt>
    2dec:	eb 26                	jmp    2e14 <arpdecode+0x2c4>
    2dee:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2df5:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    2df9:	0f b7 c0             	movzx  eax,ax
    2dfc:	89 c6                	mov    esi,eax
    2dfe:	48 8d 3d 62 93 00 00 	lea    rdi,[rip+0x9362]        # c167 <_IO_stdin_used+0x167>
    2e05:	b8 00 00 00 00       	mov    eax,0x0
    2e0a:	e8 e1 f7 ff ff       	call   25f0 <printf@plt>
    2e0f:	eb 04                	jmp    2e15 <arpdecode+0x2c5>
    2e11:	90                   	nop
    2e12:	eb 01                	jmp    2e15 <arpdecode+0x2c5>
    2e14:	90                   	nop
    2e15:	48 8d 35 63 93 00 00 	lea    rsi,[rip+0x9363]        # c17f <_IO_stdin_used+0x17f>
    2e1c:	48 8d 3d cd 92 00 00 	lea    rdi,[rip+0x92cd]        # c0f0 <_IO_stdin_used+0xf0>
    2e23:	b8 00 00 00 00       	mov    eax,0x0
    2e28:	e8 c3 f7 ff ff       	call   25f0 <printf@plt>
    2e2d:	90                   	nop
    2e2e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2e32:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    2e39:	00 00 
    2e3b:	74 05                	je     2e42 <arpdecode+0x2f2>
    2e3d:	e8 6e f7 ff ff       	call   25b0 <__stack_chk_fail@plt>
    2e42:	c9                   	leave  
    2e43:	c3                   	ret    

0000000000002e44 <loopback_ctp_decode>:
    2e44:	f3 0f 1e fa          	endbr64 
    2e48:	55                   	push   rbp
    2e49:	48 89 e5             	mov    rbp,rsp
    2e4c:	48 83 ec 60          	sub    rsp,0x60
    2e50:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    2e54:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2e5b:	00 00 
    2e5d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2e61:	31 c0                	xor    eax,eax
    2e63:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    2e67:	48 83 c0 0e          	add    rax,0xe
    2e6b:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    2e6f:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    2e73:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    2e77:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    2e7b:	48 83 c0 06          	add    rax,0x6
    2e7f:	48 89 c7             	mov    rdi,rax
    2e82:	e8 7e 01 00 00       	call   3005 <uc_mac_ntoa>
    2e87:	48 89 c1             	mov    rcx,rax
    2e8a:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    2e8e:	ba 18 00 00 00       	mov    edx,0x18
    2e93:	48 89 ce             	mov    rsi,rcx
    2e96:	48 89 c7             	mov    rdi,rax
    2e99:	e8 32 f6 ff ff       	call   24d0 <strncpy@plt>
    2e9e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    2ea2:	48 89 c7             	mov    rdi,rax
    2ea5:	e8 5b 01 00 00       	call   3005 <uc_mac_ntoa>
    2eaa:	48 89 c1             	mov    rcx,rax
    2ead:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    2eb1:	ba 18 00 00 00       	mov    edx,0x18
    2eb6:	48 89 ce             	mov    rsi,rcx
    2eb9:	48 89 c7             	mov    rdi,rax
    2ebc:	e8 0f f6 ff ff       	call   24d0 <strncpy@plt>
    2ec1:	0f b6 05 91 4e 10 00 	movzx  eax,BYTE PTR [rip+0x104e91]        # 107d59 <packet_print>
    2ec8:	84 c0                	test   al,al
    2eca:	74 1c                	je     2ee8 <loopback_ctp_decode+0xa4>
    2ecc:	48 8d 55 e0          	lea    rdx,[rbp-0x20]
    2ed0:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    2ed4:	48 89 c6             	mov    rsi,rax
    2ed7:	48 8d 3d a6 92 00 00 	lea    rdi,[rip+0x92a6]        # c184 <_IO_stdin_used+0x184>
    2ede:	b8 00 00 00 00       	mov    eax,0x0
    2ee3:	e8 08 f7 ff ff       	call   25f0 <printf@plt>
    2ee8:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    2eec:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    2ef0:	0f b7 c0             	movzx  eax,ax
    2ef3:	83 f8 01             	cmp    eax,0x1
    2ef6:	75 19                	jne    2f11 <loopback_ctp_decode+0xcd>
    2ef8:	0f b6 05 5a 4e 10 00 	movzx  eax,BYTE PTR [rip+0x104e5a]        # 107d59 <packet_print>
    2eff:	84 c0                	test   al,al
    2f01:	74 39                	je     2f3c <loopback_ctp_decode+0xf8>
    2f03:	48 8d 3d 88 92 00 00 	lea    rdi,[rip+0x9288]        # c192 <_IO_stdin_used+0x192>
    2f0a:	e8 11 f6 ff ff       	call   2520 <puts@plt>
    2f0f:	eb 2b                	jmp    2f3c <loopback_ctp_decode+0xf8>
    2f11:	0f b6 05 41 4e 10 00 	movzx  eax,BYTE PTR [rip+0x104e41]        # 107d59 <packet_print>
    2f18:	84 c0                	test   al,al
    2f1a:	74 23                	je     2f3f <loopback_ctp_decode+0xfb>
    2f1c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    2f20:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    2f24:	0f b7 c0             	movzx  eax,ax
    2f27:	89 c6                	mov    esi,eax
    2f29:	48 8d 3d 6a 92 00 00 	lea    rdi,[rip+0x926a]        # c19a <_IO_stdin_used+0x19a>
    2f30:	b8 00 00 00 00       	mov    eax,0x0
    2f35:	e8 b6 f6 ff ff       	call   25f0 <printf@plt>
    2f3a:	eb 03                	jmp    2f3f <loopback_ctp_decode+0xfb>
    2f3c:	90                   	nop
    2f3d:	eb 01                	jmp    2f40 <loopback_ctp_decode+0xfc>
    2f3f:	90                   	nop
    2f40:	90                   	nop
    2f41:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f45:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    2f4c:	00 00 
    2f4e:	74 05                	je     2f55 <loopback_ctp_decode+0x111>
    2f50:	e8 5b f6 ff ff       	call   25b0 <__stack_chk_fail@plt>
    2f55:	c9                   	leave  
    2f56:	c3                   	ret    

0000000000002f57 <mac_ntoa>:
    2f57:	f3 0f 1e fa          	endbr64 
    2f5b:	55                   	push   rbp
    2f5c:	48 89 e5             	mov    rbp,rsp
    2f5f:	48 83 ec 20          	sub    rsp,0x20
    2f63:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    2f67:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2f6b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2f6f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f73:	48 83 c0 05          	add    rax,0x5
    2f77:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f7a:	0f b6 f0             	movzx  esi,al
    2f7d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f81:	48 83 c0 04          	add    rax,0x4
    2f85:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f88:	0f b6 c8             	movzx  ecx,al
    2f8b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f8f:	48 83 c0 03          	add    rax,0x3
    2f93:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f96:	0f b6 d0             	movzx  edx,al
    2f99:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f9d:	48 83 c0 02          	add    rax,0x2
    2fa1:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fa4:	44 0f b6 c8          	movzx  r9d,al
    2fa8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fac:	48 83 c0 01          	add    rax,0x1
    2fb0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fb3:	44 0f b6 c0          	movzx  r8d,al
    2fb7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fbb:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fbe:	0f b6 c0             	movzx  eax,al
    2fc1:	64 48 8b 3c 25 00 00 	mov    rdi,QWORD PTR fs:0x0
    2fc8:	00 00 
    2fca:	48 81 c7 80 fb ff ff 	add    rdi,0xfffffffffffffb80
    2fd1:	48 83 ec 08          	sub    rsp,0x8
    2fd5:	56                   	push   rsi
    2fd6:	51                   	push   rcx
    2fd7:	52                   	push   rdx
    2fd8:	89 c1                	mov    ecx,eax
    2fda:	48 8d 15 d7 91 00 00 	lea    rdx,[rip+0x91d7]        # c1b8 <_IO_stdin_used+0x1b8>
    2fe1:	be 80 00 00 00       	mov    esi,0x80
    2fe6:	b8 00 00 00 00       	mov    eax,0x0
    2feb:	e8 10 f6 ff ff       	call   2600 <snprintf@plt>
    2ff0:	48 83 c4 20          	add    rsp,0x20
    2ff4:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    2ffb:	00 00 
    2ffd:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    3003:	c9                   	leave  
    3004:	c3                   	ret    

0000000000003005 <uc_mac_ntoa>:
    3005:	f3 0f 1e fa          	endbr64 
    3009:	55                   	push   rbp
    300a:	48 89 e5             	mov    rbp,rsp
    300d:	48 83 ec 10          	sub    rsp,0x10
    3011:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    3015:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3019:	48 83 c0 05          	add    rax,0x5
    301d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3020:	0f b6 f0             	movzx  esi,al
    3023:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3027:	48 83 c0 04          	add    rax,0x4
    302b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    302e:	0f b6 c8             	movzx  ecx,al
    3031:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3035:	48 83 c0 03          	add    rax,0x3
    3039:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    303c:	0f b6 d0             	movzx  edx,al
    303f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3043:	48 83 c0 02          	add    rax,0x2
    3047:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    304a:	44 0f b6 c8          	movzx  r9d,al
    304e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3052:	48 83 c0 01          	add    rax,0x1
    3056:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3059:	44 0f b6 c0          	movzx  r8d,al
    305d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3061:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3064:	0f b6 c0             	movzx  eax,al
    3067:	64 48 8b 3c 25 00 00 	mov    rdi,QWORD PTR fs:0x0
    306e:	00 00 
    3070:	48 81 c7 80 fb ff ff 	add    rdi,0xfffffffffffffb80
    3077:	48 83 ec 08          	sub    rsp,0x8
    307b:	56                   	push   rsi
    307c:	51                   	push   rcx
    307d:	52                   	push   rdx
    307e:	89 c1                	mov    ecx,eax
    3080:	48 8d 15 31 91 00 00 	lea    rdx,[rip+0x9131]        # c1b8 <_IO_stdin_used+0x1b8>
    3087:	be 80 00 00 00       	mov    esi,0x80
    308c:	b8 00 00 00 00       	mov    eax,0x0
    3091:	e8 6a f5 ff ff       	call   2600 <snprintf@plt>
    3096:	48 83 c4 20          	add    rsp,0x20
    309a:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    30a1:	00 00 
    30a3:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    30a9:	c9                   	leave  
    30aa:	c3                   	ret    

00000000000030ab <u8_ipv4_ntoa>:
    30ab:	f3 0f 1e fa          	endbr64 
    30af:	55                   	push   rbp
    30b0:	48 89 e5             	mov    rbp,rsp
    30b3:	48 83 ec 20          	sub    rsp,0x20
    30b7:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    30bb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    30bf:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    30c3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    30c7:	48 83 c0 03          	add    rax,0x3
    30cb:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    30ce:	0f b6 d0             	movzx  edx,al
    30d1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    30d5:	48 83 c0 02          	add    rax,0x2
    30d9:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    30dc:	44 0f b6 c0          	movzx  r8d,al
    30e0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    30e4:	48 83 c0 01          	add    rax,0x1
    30e8:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    30eb:	0f b6 f0             	movzx  esi,al
    30ee:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    30f2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    30f5:	0f b6 c0             	movzx  eax,al
    30f8:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    30ff:	00 00 
    3101:	48 8d b9 80 fb ff ff 	lea    rdi,[rcx-0x480]
    3108:	48 83 ec 08          	sub    rsp,0x8
    310c:	52                   	push   rdx
    310d:	45 89 c1             	mov    r9d,r8d
    3110:	41 89 f0             	mov    r8d,esi
    3113:	89 c1                	mov    ecx,eax
    3115:	48 8d 15 ba 90 00 00 	lea    rdx,[rip+0x90ba]        # c1d6 <_IO_stdin_used+0x1d6>
    311c:	be 80 00 00 00       	mov    esi,0x80
    3121:	b8 00 00 00 00       	mov    eax,0x0
    3126:	e8 d5 f4 ff ff       	call   2600 <snprintf@plt>
    312b:	48 83 c4 10          	add    rsp,0x10
    312f:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3136:	00 00 
    3138:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    313e:	c9                   	leave  
    313f:	c3                   	ret    

0000000000003140 <ipv4_ntoa>:
    3140:	f3 0f 1e fa          	endbr64 
    3144:	55                   	push   rbp
    3145:	48 89 e5             	mov    rbp,rsp
    3148:	48 83 ec 20          	sub    rsp,0x20
    314c:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    314f:	48 8d 45 ec          	lea    rax,[rbp-0x14]
    3153:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3157:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    315b:	48 83 c0 03          	add    rax,0x3
    315f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3162:	0f b6 d0             	movzx  edx,al
    3165:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3169:	48 83 c0 02          	add    rax,0x2
    316d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3170:	44 0f b6 c0          	movzx  r8d,al
    3174:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3178:	48 83 c0 01          	add    rax,0x1
    317c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    317f:	0f b6 f0             	movzx  esi,al
    3182:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3186:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3189:	0f b6 c0             	movzx  eax,al
    318c:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    3193:	00 00 
    3195:	48 8d b9 80 fb ff ff 	lea    rdi,[rcx-0x480]
    319c:	48 83 ec 08          	sub    rsp,0x8
    31a0:	52                   	push   rdx
    31a1:	45 89 c1             	mov    r9d,r8d
    31a4:	41 89 f0             	mov    r8d,esi
    31a7:	89 c1                	mov    ecx,eax
    31a9:	48 8d 15 26 90 00 00 	lea    rdx,[rip+0x9026]        # c1d6 <_IO_stdin_used+0x1d6>
    31b0:	be 80 00 00 00       	mov    esi,0x80
    31b5:	b8 00 00 00 00       	mov    eax,0x0
    31ba:	e8 41 f4 ff ff       	call   2600 <snprintf@plt>
    31bf:	48 83 c4 10          	add    rsp,0x10
    31c3:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    31ca:	00 00 
    31cc:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    31d2:	c9                   	leave  
    31d3:	c3                   	ret    

00000000000031d4 <inet6_ntoa>:
    31d4:	f3 0f 1e fa          	endbr64 
    31d8:	55                   	push   rbp
    31d9:	48 89 e5             	mov    rbp,rsp
    31dc:	41 57                	push   r15
    31de:	41 56                	push   r14
    31e0:	41 55                	push   r13
    31e2:	41 54                	push   r12
    31e4:	53                   	push   rbx
    31e5:	48 83 ec 38          	sub    rsp,0x38
    31e9:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    31ed:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    31f4:	00 00 
    31f6:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    31fa:	31 c0                	xor    eax,eax
    31fc:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3203:	00 00 
    3205:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    320b:	ba 80 00 00 00       	mov    edx,0x80
    3210:	be 00 00 00 00       	mov    esi,0x0
    3215:	48 89 c7             	mov    rdi,rax
    3218:	e8 13 f4 ff ff       	call   2630 <memset@plt>
    321d:	48 c7 45 c0 00 00 00 	mov    QWORD PTR [rbp-0x40],0x0
    3224:	00 
    3225:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3229:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    322d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3231:	48 83 c0 0f          	add    rax,0xf
    3235:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3238:	0f b6 c8             	movzx  ecx,al
    323b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    323f:	48 83 c0 0e          	add    rax,0xe
    3243:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3246:	0f b6 f8             	movzx  edi,al
    3249:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    324d:	48 83 c0 0d          	add    rax,0xd
    3251:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3254:	0f b6 c0             	movzx  eax,al
    3257:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
    325a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    325e:	48 83 c0 0c          	add    rax,0xc
    3262:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3265:	0f b6 d8             	movzx  ebx,al
    3268:	89 5d b0             	mov    DWORD PTR [rbp-0x50],ebx
    326b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    326f:	48 83 c0 0b          	add    rax,0xb
    3273:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3276:	44 0f b6 f8          	movzx  r15d,al
    327a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    327e:	48 83 c0 0a          	add    rax,0xa
    3282:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3285:	44 0f b6 f0          	movzx  r14d,al
    3289:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    328d:	48 83 c0 09          	add    rax,0x9
    3291:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3294:	44 0f b6 e8          	movzx  r13d,al
    3298:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    329c:	48 83 c0 08          	add    rax,0x8
    32a0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32a3:	44 0f b6 e0          	movzx  r12d,al
    32a7:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32ab:	48 83 c0 07          	add    rax,0x7
    32af:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32b2:	0f b6 d8             	movzx  ebx,al
    32b5:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32b9:	48 83 c0 06          	add    rax,0x6
    32bd:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32c0:	44 0f b6 d8          	movzx  r11d,al
    32c4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32c8:	48 83 c0 05          	add    rax,0x5
    32cc:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32cf:	44 0f b6 d0          	movzx  r10d,al
    32d3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32d7:	48 83 c0 04          	add    rax,0x4
    32db:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32de:	44 0f b6 c8          	movzx  r9d,al
    32e2:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32e6:	48 83 c0 03          	add    rax,0x3
    32ea:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32ed:	44 0f b6 c0          	movzx  r8d,al
    32f1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32f5:	48 83 c0 02          	add    rax,0x2
    32f9:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32fc:	0f b6 d0             	movzx  edx,al
    32ff:	89 55 ac             	mov    DWORD PTR [rbp-0x54],edx
    3302:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3306:	48 83 c0 01          	add    rax,0x1
    330a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    330d:	0f b6 f0             	movzx  esi,al
    3310:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3314:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3317:	0f b6 d0             	movzx  edx,al
    331a:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3321:	00 00 
    3323:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    3329:	48 83 ec 08          	sub    rsp,0x8
    332d:	51                   	push   rcx
    332e:	57                   	push   rdi
    332f:	8b 4d b4             	mov    ecx,DWORD PTR [rbp-0x4c]
    3332:	51                   	push   rcx
    3333:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
    3336:	51                   	push   rcx
    3337:	41 57                	push   r15
    3339:	41 56                	push   r14
    333b:	41 55                	push   r13
    333d:	41 54                	push   r12
    333f:	53                   	push   rbx
    3340:	41 53                	push   r11
    3342:	41 52                	push   r10
    3344:	41 51                	push   r9
    3346:	41 50                	push   r8
    3348:	44 8b 4d ac          	mov    r9d,DWORD PTR [rbp-0x54]
    334c:	41 89 f0             	mov    r8d,esi
    334f:	89 d1                	mov    ecx,edx
    3351:	48 8d 15 90 8e 00 00 	lea    rdx,[rip+0x8e90]        # c1e8 <_IO_stdin_used+0x1e8>
    3358:	be 80 00 00 00       	mov    esi,0x80
    335d:	48 89 c7             	mov    rdi,rax
    3360:	b8 00 00 00 00       	mov    eax,0x0
    3365:	e8 96 f2 ff ff       	call   2600 <snprintf@plt>
    336a:	48 83 c4 70          	add    rsp,0x70
    336e:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3375:	00 00 
    3377:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    337d:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    3381:	64 48 33 34 25 28 00 	xor    rsi,QWORD PTR fs:0x28
    3388:	00 00 
    338a:	74 05                	je     3391 <inet6_ntoa+0x1bd>
    338c:	e8 1f f2 ff ff       	call   25b0 <__stack_chk_fail@plt>
    3391:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    3395:	5b                   	pop    rbx
    3396:	41 5c                	pop    r12
    3398:	41 5d                	pop    r13
    339a:	41 5e                	pop    r14
    339c:	41 5f                	pop    r15
    339e:	5d                   	pop    rbp
    339f:	c3                   	ret    

00000000000033a0 <get_formated_time>:
    33a0:	f3 0f 1e fa          	endbr64 
    33a4:	55                   	push   rbp
    33a5:	48 89 e5             	mov    rbp,rsp
    33a8:	53                   	push   rbx
    33a9:	48 83 ec 58          	sub    rsp,0x58
    33ad:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    33b4:	00 00 
    33b6:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    33ba:	31 c0                	xor    eax,eax
    33bc:	bf ff 00 00 00       	mov    edi,0xff
    33c1:	e8 7a f3 ff ff       	call   2740 <malloc@plt>
    33c6:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    33ca:	bf 00 00 00 00       	mov    edi,0x0
    33cf:	e8 2c f3 ff ff       	call   2700 <time@plt>
    33d4:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    33d8:	48 8d 45 a0          	lea    rax,[rbp-0x60]
    33dc:	48 89 c7             	mov    rdi,rax
    33df:	e8 dc f0 ff ff       	call   24c0 <localtime@plt>
    33e4:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    33e7:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    33eb:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
    33ef:	48 89 5d b8          	mov    QWORD PTR [rbp-0x48],rbx
    33f3:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    33f7:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    33fb:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    33ff:	48 89 5d c8          	mov    QWORD PTR [rbp-0x38],rbx
    3403:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    3407:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    340b:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    340f:	48 89 5d d8          	mov    QWORD PTR [rbp-0x28],rbx
    3413:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    3417:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    341b:	8b 7d b0             	mov    edi,DWORD PTR [rbp-0x50]
    341e:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
    3421:	44 8b 4d b8          	mov    r9d,DWORD PTR [rbp-0x48]
    3425:	44 8b 45 bc          	mov    r8d,DWORD PTR [rbp-0x44]
    3429:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    342c:	8d 48 01             	lea    ecx,[rax+0x1]
    342f:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    3432:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    3438:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    343c:	57                   	push   rdi
    343d:	56                   	push   rsi
    343e:	48 8d 35 eb 8d 00 00 	lea    rsi,[rip+0x8deb]        # c230 <_IO_stdin_used+0x230>
    3445:	48 89 c7             	mov    rdi,rax
    3448:	b8 00 00 00 00       	mov    eax,0x0
    344d:	e8 1e f4 ff ff       	call   2870 <sprintf@plt>
    3452:	48 83 c4 10          	add    rsp,0x10
    3456:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    345a:	48 8b 5d e8          	mov    rbx,QWORD PTR [rbp-0x18]
    345e:	64 48 33 1c 25 28 00 	xor    rbx,QWORD PTR fs:0x28
    3465:	00 00 
    3467:	74 05                	je     346e <get_formated_time+0xce>
    3469:	e8 42 f1 ff ff       	call   25b0 <__stack_chk_fail@plt>
    346e:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    3472:	c9                   	leave  
    3473:	c3                   	ret    

0000000000003474 <cb_get_formatted_time>:
    3474:	f3 0f 1e fa          	endbr64 
    3478:	55                   	push   rbp
    3479:	48 89 e5             	mov    rbp,rsp
    347c:	53                   	push   rbx
    347d:	48 83 ec 68          	sub    rsp,0x68
    3481:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    3485:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    348c:	00 00 
    348e:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    3492:	31 c0                	xor    eax,eax
    3494:	bf 00 00 00 00       	mov    edi,0x0
    3499:	e8 62 f2 ff ff       	call   2700 <time@plt>
    349e:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    34a2:	48 8d 45 a8          	lea    rax,[rbp-0x58]
    34a6:	48 89 c7             	mov    rdi,rax
    34a9:	e8 12 f0 ff ff       	call   24c0 <localtime@plt>
    34ae:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    34b1:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    34b5:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
    34b9:	48 89 5d b8          	mov    QWORD PTR [rbp-0x48],rbx
    34bd:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    34c1:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    34c5:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    34c9:	48 89 5d c8          	mov    QWORD PTR [rbp-0x38],rbx
    34cd:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    34d1:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    34d5:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    34d9:	48 89 5d d8          	mov    QWORD PTR [rbp-0x28],rbx
    34dd:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    34e1:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    34e5:	8b 7d b0             	mov    edi,DWORD PTR [rbp-0x50]
    34e8:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
    34eb:	44 8b 4d b8          	mov    r9d,DWORD PTR [rbp-0x48]
    34ef:	44 8b 45 bc          	mov    r8d,DWORD PTR [rbp-0x44]
    34f3:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    34f6:	8d 48 01             	lea    ecx,[rax+0x1]
    34f9:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    34fc:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    3502:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    3506:	57                   	push   rdi
    3507:	56                   	push   rsi
    3508:	48 8d 35 21 8d 00 00 	lea    rsi,[rip+0x8d21]        # c230 <_IO_stdin_used+0x230>
    350f:	48 89 c7             	mov    rdi,rax
    3512:	b8 00 00 00 00       	mov    eax,0x0
    3517:	e8 54 f3 ff ff       	call   2870 <sprintf@plt>
    351c:	48 83 c4 10          	add    rsp,0x10
    3520:	90                   	nop
    3521:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    3525:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    352c:	00 00 
    352e:	74 05                	je     3535 <cb_get_formatted_time+0xc1>
    3530:	e8 7b f0 ff ff       	call   25b0 <__stack_chk_fail@plt>
    3535:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    3539:	c9                   	leave  
    353a:	c3                   	ret    

000000000000353b <strloc>:
    353b:	f3 0f 1e fa          	endbr64 
    353f:	55                   	push   rbp
    3540:	48 89 e5             	mov    rbp,rsp
    3543:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    3547:	89 f0                	mov    eax,esi
    3549:	88 45 e4             	mov    BYTE PTR [rbp-0x1c],al
    354c:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    3553:	eb 1e                	jmp    3573 <strloc+0x38>
    3555:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    3558:	48 63 d0             	movsxd rdx,eax
    355b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    355f:	48 01 d0             	add    rax,rdx
    3562:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3565:	38 45 e4             	cmp    BYTE PTR [rbp-0x1c],al
    3568:	75 05                	jne    356f <strloc+0x34>
    356a:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    356d:	eb 1d                	jmp    358c <strloc+0x51>
    356f:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    3573:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    3576:	48 63 d0             	movsxd rdx,eax
    3579:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    357d:	48 01 d0             	add    rax,rdx
    3580:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3583:	84 c0                	test   al,al
    3585:	75 ce                	jne    3555 <strloc+0x1a>
    3587:	b8 ff ff ff ff       	mov    eax,0xffffffff
    358c:	5d                   	pop    rbp
    358d:	c3                   	ret    

000000000000358e <fail>:
    358e:	f3 0f 1e fa          	endbr64 
    3592:	55                   	push   rbp
    3593:	48 89 e5             	mov    rbp,rsp
    3596:	48 83 ec 10          	sub    rsp,0x10
    359a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    359e:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    35a2:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    35a6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    35aa:	48 89 c6             	mov    rsi,rax
    35ad:	48 8d 3d 98 8c 00 00 	lea    rdi,[rip+0x8c98]        # c24c <_IO_stdin_used+0x24c>
    35b4:	b8 00 00 00 00       	mov    eax,0x0
    35b9:	e8 32 f0 ff ff       	call   25f0 <printf@plt>
    35be:	90                   	nop
    35bf:	c9                   	leave  
    35c0:	c3                   	ret    

00000000000035c1 <char_is_printable>:
    35c1:	f3 0f 1e fa          	endbr64 
    35c5:	55                   	push   rbp
    35c6:	48 89 e5             	mov    rbp,rsp
    35c9:	89 f8                	mov    eax,edi
    35cb:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
    35ce:	80 7d fc 1f          	cmp    BYTE PTR [rbp-0x4],0x1f
    35d2:	7f 07                	jg     35db <char_is_printable+0x1a>
    35d4:	b8 00 00 00 00       	mov    eax,0x0
    35d9:	eb 05                	jmp    35e0 <char_is_printable+0x1f>
    35db:	b8 01 00 00 00       	mov    eax,0x1
    35e0:	5d                   	pop    rbp
    35e1:	c3                   	ret    

00000000000035e2 <test_string_arr_print>:
    35e2:	f3 0f 1e fa          	endbr64 
    35e6:	55                   	push   rbp
    35e7:	48 89 e5             	mov    rbp,rsp
    35ea:	53                   	push   rbx
    35eb:	48 83 ec 28          	sub    rsp,0x28
    35ef:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    35f3:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    35fa:	eb 2c                	jmp    3628 <test_string_arr_print+0x46>
    35fc:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    35ff:	48 63 d0             	movsxd rdx,eax
    3602:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    3606:	48 01 d0             	add    rax,rdx
    3609:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    360c:	0f be c0             	movsx  eax,al
    360f:	89 c7                	mov    edi,eax
    3611:	e8 ab ff ff ff       	call   35c1 <char_is_printable>
    3616:	83 f0 01             	xor    eax,0x1
    3619:	84 c0                	test   al,al
    361b:	74 07                	je     3624 <test_string_arr_print+0x42>
    361d:	b8 00 00 00 00       	mov    eax,0x0
    3622:	eb 20                	jmp    3644 <test_string_arr_print+0x62>
    3624:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    3628:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    362b:	48 63 d8             	movsxd rbx,eax
    362e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    3632:	48 89 c7             	mov    rdi,rax
    3635:	e8 56 ef ff ff       	call   2590 <strlen@plt>
    363a:	48 39 c3             	cmp    rbx,rax
    363d:	72 bd                	jb     35fc <test_string_arr_print+0x1a>
    363f:	b8 01 00 00 00       	mov    eax,0x1
    3644:	48 83 c4 28          	add    rsp,0x28
    3648:	5b                   	pop    rbx
    3649:	5d                   	pop    rbp
    364a:	c3                   	ret    

000000000000364b <ipv4pktmgr>:
    364b:	f3 0f 1e fa          	endbr64 
    364f:	55                   	push   rbp
    3650:	48 89 e5             	mov    rbp,rsp
    3653:	48 81 ec e0 04 00 00 	sub    rsp,0x4e0
    365a:	48 89 bd 28 fb ff ff 	mov    QWORD PTR [rbp-0x4d8],rdi
    3661:	48 89 b5 20 fb ff ff 	mov    QWORD PTR [rbp-0x4e0],rsi
    3668:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    366f:	00 00 
    3671:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3675:	31 c0                	xor    eax,eax
    3677:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    367e:	48 83 c0 0e          	add    rax,0xe
    3682:	48 89 85 48 fb ff ff 	mov    QWORD PTR [rbp-0x4b8],rax
    3689:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    3690:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    3693:	89 c7                	mov    edi,eax
    3695:	e8 f6 f1 ff ff       	call   2890 <ntohl@plt>
    369a:	89 85 6c fb ff ff    	mov    DWORD PTR [rbp-0x494],eax
    36a0:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    36a7:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    36aa:	89 c7                	mov    edi,eax
    36ac:	e8 df f1 ff ff       	call   2890 <ntohl@plt>
    36b1:	89 85 68 fb ff ff    	mov    DWORD PTR [rbp-0x498],eax
    36b7:	8b 95 68 fb ff ff    	mov    edx,DWORD PTR [rbp-0x498]
    36bd:	8b 05 dd 6a 10 00    	mov    eax,DWORD PTR [rip+0x106add]        # 10a1a0 <homenetmask>
    36c3:	21 d0                	and    eax,edx
    36c5:	89 85 3c fb ff ff    	mov    DWORD PTR [rbp-0x4c4],eax
    36cb:	8b 95 6c fb ff ff    	mov    edx,DWORD PTR [rbp-0x494]
    36d1:	8b 05 c9 6a 10 00    	mov    eax,DWORD PTR [rip+0x106ac9]        # 10a1a0 <homenetmask>
    36d7:	21 d0                	and    eax,edx
    36d9:	89 85 40 fb ff ff    	mov    DWORD PTR [rbp-0x4c0],eax
    36df:	8b 05 1f 46 10 00    	mov    eax,DWORD PTR [rip+0x10461f]        # 107d04 <homenet>
    36e5:	39 85 3c fb ff ff    	cmp    DWORD PTR [rbp-0x4c4],eax
    36eb:	75 0c                	jne    36f9 <ipv4pktmgr+0xae>
    36ed:	c7 85 70 fb ff ff 45 	mov    DWORD PTR [rbp-0x490],0x45
    36f4:	00 00 00 
    36f7:	eb 24                	jmp    371d <ipv4pktmgr+0xd2>
    36f9:	8b 05 05 46 10 00    	mov    eax,DWORD PTR [rip+0x104605]        # 107d04 <homenet>
    36ff:	39 85 40 fb ff ff    	cmp    DWORD PTR [rbp-0x4c0],eax
    3705:	75 0c                	jne    3713 <ipv4pktmgr+0xc8>
    3707:	c7 85 70 fb ff ff 46 	mov    DWORD PTR [rbp-0x490],0x46
    370e:	00 00 00 
    3711:	eb 0a                	jmp    371d <ipv4pktmgr+0xd2>
    3713:	c7 85 70 fb ff ff 47 	mov    DWORD PTR [rbp-0x490],0x47
    371a:	00 00 00 
    371d:	48 8b 85 20 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4e0]
    3724:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    3727:	89 85 80 fb ff ff    	mov    DWORD PTR [rbp-0x480],eax
    372d:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    3734:	48 89 85 a0 fb ff ff 	mov    QWORD PTR [rbp-0x460],rax
    373b:	48 8b 85 20 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4e0]
    3742:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    3745:	48 8b 95 28 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4d8]
    374c:	48 83 c2 0e          	add    rdx,0xe
    3750:	0f b6 12             	movzx  edx,BYTE PTR [rdx]
    3753:	83 e2 0f             	and    edx,0xf
    3756:	0f b6 d2             	movzx  edx,dl
    3759:	c1 e2 02             	shl    edx,0x2
    375c:	29 d0                	sub    eax,edx
    375e:	83 e8 0e             	sub    eax,0xe
    3761:	89 85 44 fb ff ff    	mov    DWORD PTR [rbp-0x4bc],eax
    3767:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    376e:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    3771:	89 c7                	mov    edi,eax
    3773:	e8 c8 f9 ff ff       	call   3140 <ipv4_ntoa>
    3778:	48 89 c1             	mov    rcx,rax
    377b:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    3782:	ba 10 00 00 00       	mov    edx,0x10
    3787:	48 89 ce             	mov    rsi,rcx
    378a:	48 89 c7             	mov    rdi,rax
    378d:	e8 3e ed ff ff       	call   24d0 <strncpy@plt>
    3792:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    3799:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    379c:	89 c7                	mov    edi,eax
    379e:	e8 9d f9 ff ff       	call   3140 <ipv4_ntoa>
    37a3:	48 89 c1             	mov    rcx,rax
    37a6:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    37ad:	ba 10 00 00 00       	mov    edx,0x10
    37b2:	48 89 ce             	mov    rsi,rcx
    37b5:	48 89 c7             	mov    rdi,rax
    37b8:	e8 13 ed ff ff       	call   24d0 <strncpy@plt>
    37bd:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    37c4:	48 89 c7             	mov    rdi,rax
    37c7:	e8 e2 42 00 00       	call   7aae <init_member>
    37cc:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    37d3:	48 89 c7             	mov    rdi,rax
    37d6:	e8 d3 42 00 00       	call   7aae <init_member>
    37db:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    37e2:	48 89 c7             	mov    rdi,rax
    37e5:	e8 49 21 00 00       	call   5933 <is_blocked_ipv4>
    37ea:	84 c0                	test   al,al
    37ec:	74 44                	je     3832 <ipv4pktmgr+0x1e7>
    37ee:	b8 00 00 00 00       	mov    eax,0x0
    37f3:	e8 a8 fb ff ff       	call   33a0 <get_formated_time>
    37f8:	48 89 c6             	mov    rsi,rax
    37fb:	48 8d 95 e0 fb ff ff 	lea    rdx,[rbp-0x420]
    3802:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    3809:	48 89 d1             	mov    rcx,rdx
    380c:	48 89 f2             	mov    rdx,rsi
    380f:	48 8d 35 42 8a 00 00 	lea    rsi,[rip+0x8a42]        # c258 <_IO_stdin_used+0x258>
    3816:	48 89 c7             	mov    rdi,rax
    3819:	b8 00 00 00 00       	mov    eax,0x0
    381e:	e8 4d f0 ff ff       	call   2870 <sprintf@plt>
    3823:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    382a:	48 89 c7             	mov    rdi,rax
    382d:	e8 48 5d 00 00       	call   957a <saprintf>
    3832:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    3839:	48 89 c7             	mov    rdi,rax
    383c:	e8 f2 20 00 00       	call   5933 <is_blocked_ipv4>
    3841:	84 c0                	test   al,al
    3843:	74 44                	je     3889 <ipv4pktmgr+0x23e>
    3845:	b8 00 00 00 00       	mov    eax,0x0
    384a:	e8 51 fb ff ff       	call   33a0 <get_formated_time>
    384f:	48 89 c6             	mov    rsi,rax
    3852:	48 8d 95 d0 fb ff ff 	lea    rdx,[rbp-0x430]
    3859:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    3860:	48 89 d1             	mov    rcx,rdx
    3863:	48 89 f2             	mov    rdx,rsi
    3866:	48 8d 35 1b 8a 00 00 	lea    rsi,[rip+0x8a1b]        # c288 <_IO_stdin_used+0x288>
    386d:	48 89 c7             	mov    rdi,rax
    3870:	b8 00 00 00 00       	mov    eax,0x0
    3875:	e8 f6 ef ff ff       	call   2870 <sprintf@plt>
    387a:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    3881:	48 89 c7             	mov    rdi,rax
    3884:	e8 f1 5c 00 00       	call   957a <saprintf>
    3889:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    3890:	48 89 85 58 fb ff ff 	mov    QWORD PTR [rbp-0x4a8],rax
    3897:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    389e:	48 89 85 60 fb ff ff 	mov    QWORD PTR [rbp-0x4a0],rax
    38a5:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    38ac:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    38b0:	66 83 f8 20          	cmp    ax,0x20
    38b4:	74 11                	je     38c7 <ipv4pktmgr+0x27c>
    38b6:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    38bd:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    38c1:	66 3d 02 01          	cmp    ax,0x102
    38c5:	75 66                	jne    392d <ipv4pktmgr+0x2e2>
    38c7:	48 8d 35 e2 89 00 00 	lea    rsi,[rip+0x89e2]        # c2b0 <_IO_stdin_used+0x2b0>
    38ce:	48 8d 3d e0 89 00 00 	lea    rdi,[rip+0x89e0]        # c2b5 <_IO_stdin_used+0x2b5>
    38d5:	b8 00 00 00 00       	mov    eax,0x0
    38da:	e8 11 ed ff ff       	call   25f0 <printf@plt>
    38df:	0f b6 05 73 44 10 00 	movzx  eax,BYTE PTR [rip+0x104473]        # 107d59 <packet_print>
    38e6:	84 c0                	test   al,al
    38e8:	74 1a                	je     3904 <ipv4pktmgr+0x2b9>
    38ea:	48 8d 35 d2 89 00 00 	lea    rsi,[rip+0x89d2]        # c2c3 <_IO_stdin_used+0x2c3>
    38f1:	48 8d 3d d0 89 00 00 	lea    rdi,[rip+0x89d0]        # c2c8 <_IO_stdin_used+0x2c8>
    38f8:	b8 00 00 00 00       	mov    eax,0x0
    38fd:	e8 ee ec ff ff       	call   25f0 <printf@plt>
    3902:	eb 29                	jmp    392d <ipv4pktmgr+0x2e2>
    3904:	48 8d 95 e0 fb ff ff 	lea    rdx,[rbp-0x420]
    390b:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    3912:	48 8d 0d aa 89 00 00 	lea    rcx,[rip+0x89aa]        # c2c3 <_IO_stdin_used+0x2c3>
    3919:	48 89 c6             	mov    rsi,rax
    391c:	48 8d 3d a8 89 00 00 	lea    rdi,[rip+0x89a8]        # c2cb <_IO_stdin_used+0x2cb>
    3923:	b8 00 00 00 00       	mov    eax,0x0
    3928:	e8 c3 ec ff ff       	call   25f0 <printf@plt>
    392d:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    3934:	0f b6 40 09          	movzx  eax,BYTE PTR [rax+0x9]
    3938:	0f b6 c0             	movzx  eax,al
    393b:	83 f8 11             	cmp    eax,0x11
    393e:	0f 84 b8 00 00 00    	je     39fc <ipv4pktmgr+0x3b1>
    3944:	83 f8 11             	cmp    eax,0x11
    3947:	0f 8f db 00 00 00    	jg     3a28 <ipv4pktmgr+0x3dd>
    394d:	83 f8 06             	cmp    eax,0x6
    3950:	74 7e                	je     39d0 <ipv4pktmgr+0x385>
    3952:	83 f8 06             	cmp    eax,0x6
    3955:	0f 8f cd 00 00 00    	jg     3a28 <ipv4pktmgr+0x3dd>
    395b:	83 f8 01             	cmp    eax,0x1
    395e:	74 0a                	je     396a <ipv4pktmgr+0x31f>
    3960:	83 f8 02             	cmp    eax,0x2
    3963:	74 2d                	je     3992 <ipv4pktmgr+0x347>
    3965:	e9 be 00 00 00       	jmp    3a28 <ipv4pktmgr+0x3dd>
    396a:	c7 85 7c fb ff ff 80 	mov    DWORD PTR [rbp-0x484],0x80
    3971:	00 00 00 
    3974:	48 8d 95 50 fb ff ff 	lea    rdx,[rbp-0x4b0]
    397b:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    3982:	48 89 d6             	mov    rsi,rdx
    3985:	48 89 c7             	mov    rdi,rax
    3988:	e8 40 02 00 00       	call   3bcd <ip4_icmp_decode>
    398d:	e9 c7 00 00 00       	jmp    3a59 <ipv4pktmgr+0x40e>
    3992:	c7 85 7c fb ff ff ff 	mov    DWORD PTR [rbp-0x484],0xffffffff
    3999:	ff ff ff 
    399c:	8b 05 9e d6 00 00    	mov    eax,DWORD PTR [rip+0xd69e]        # 11040 <total_conversations>
    39a2:	83 e8 01             	sub    eax,0x1
    39a5:	89 05 95 d6 00 00    	mov    DWORD PTR [rip+0xd695],eax        # 11040 <total_conversations>
    39ab:	48 8b 95 60 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4a0]
    39b2:	48 8b 8d 58 fb ff ff 	mov    rcx,QWORD PTR [rbp-0x4a8]
    39b9:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    39c0:	48 89 ce             	mov    rsi,rcx
    39c3:	48 89 c7             	mov    rdi,rax
    39c6:	e8 de 14 00 00       	call   4ea9 <ip4_igmp_decode>
    39cb:	e9 89 00 00 00       	jmp    3a59 <ipv4pktmgr+0x40e>
    39d0:	c7 85 7c fb ff ff 7e 	mov    DWORD PTR [rbp-0x484],0x7e
    39d7:	00 00 00 
    39da:	48 8b 95 20 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4e0]
    39e1:	48 8d 8d 50 fb ff ff 	lea    rcx,[rbp-0x4b0]
    39e8:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    39ef:	48 89 ce             	mov    rsi,rcx
    39f2:	48 89 c7             	mov    rdi,rax
    39f5:	e8 17 0a 00 00       	call   4411 <ip4_tcp_decode>
    39fa:	eb 5d                	jmp    3a59 <ipv4pktmgr+0x40e>
    39fc:	c7 85 7c fb ff ff 7f 	mov    DWORD PTR [rbp-0x484],0x7f
    3a03:	00 00 00 
    3a06:	48 8b 95 20 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4e0]
    3a0d:	48 8d 8d 50 fb ff ff 	lea    rcx,[rbp-0x4b0]
    3a14:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    3a1b:	48 89 ce             	mov    rsi,rcx
    3a1e:	48 89 c7             	mov    rdi,rax
    3a21:	e8 2e 13 00 00       	call   4d54 <ip4_udp_decode>
    3a26:	eb 31                	jmp    3a59 <ipv4pktmgr+0x40e>
    3a28:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    3a2f:	0f b6 40 09          	movzx  eax,BYTE PTR [rax+0x9]
    3a33:	0f b6 c8             	movzx  ecx,al
    3a36:	48 8b 95 60 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4a0]
    3a3d:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    3a44:	48 89 c6             	mov    rsi,rax
    3a47:	48 8d 3d 8a 88 00 00 	lea    rdi,[rip+0x888a]        # c2d8 <_IO_stdin_used+0x2d8>
    3a4e:	b8 00 00 00 00       	mov    eax,0x0
    3a53:	e8 98 eb ff ff       	call   25f0 <printf@plt>
    3a58:	90                   	nop
    3a59:	90                   	nop
    3a5a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3a5e:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    3a65:	00 00 
    3a67:	74 05                	je     3a6e <ipv4pktmgr+0x423>
    3a69:	e8 42 eb ff ff       	call   25b0 <__stack_chk_fail@plt>
    3a6e:	c9                   	leave  
    3a6f:	c3                   	ret    

0000000000003a70 <ip6_icmp_decode>:
    3a70:	f3 0f 1e fa          	endbr64 
    3a74:	55                   	push   rbp
    3a75:	48 89 e5             	mov    rbp,rsp
    3a78:	48 83 c4 80          	add    rsp,0xffffffffffffff80
    3a7c:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    3a80:	48 89 75 90          	mov    QWORD PTR [rbp-0x70],rsi
    3a84:	48 89 55 88          	mov    QWORD PTR [rbp-0x78],rdx
    3a88:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3a8f:	00 00 
    3a91:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3a95:	31 c0                	xor    eax,eax
    3a97:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    3a9b:	48 83 c0 36          	add    rax,0x36
    3a9f:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    3aa3:	0f b6 05 af 42 10 00 	movzx  eax,BYTE PTR [rip+0x1042af]        # 107d59 <packet_print>
    3aaa:	84 c0                	test   al,al
    3aac:	0f 84 04 01 00 00    	je     3bb6 <ip6_icmp_decode+0x146>
    3ab2:	48 8d 35 47 88 00 00 	lea    rsi,[rip+0x8847]        # c300 <_IO_stdin_used+0x300>
    3ab9:	48 8d 3d 46 88 00 00 	lea    rdi,[rip+0x8846]        # c306 <_IO_stdin_used+0x306>
    3ac0:	b8 00 00 00 00       	mov    eax,0x0
    3ac5:	e8 26 eb ff ff       	call   25f0 <printf@plt>
    3aca:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
    3ace:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    3ad2:	48 89 c6             	mov    rsi,rax
    3ad5:	48 8d 3d 2d 88 00 00 	lea    rdi,[rip+0x882d]        # c309 <_IO_stdin_used+0x309>
    3adc:	b8 00 00 00 00       	mov    eax,0x0
    3ae1:	e8 0a eb ff ff       	call   25f0 <printf@plt>
    3ae6:	48 8d 3d 2b 88 00 00 	lea    rdi,[rip+0x882b]        # c318 <_IO_stdin_used+0x318>
    3aed:	b8 00 00 00 00       	mov    eax,0x0
    3af2:	e8 f9 ea ff ff       	call   25f0 <printf@plt>
    3af7:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3afb:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3afe:	0f b6 c0             	movzx  eax,al
    3b01:	3d 8f 00 00 00       	cmp    eax,0x8f
    3b06:	74 68                	je     3b70 <ip6_icmp_decode+0x100>
    3b08:	3d 8f 00 00 00       	cmp    eax,0x8f
    3b0d:	0f 8f 8b 00 00 00    	jg     3b9e <ip6_icmp_decode+0x12e>
    3b13:	3d 87 00 00 00       	cmp    eax,0x87
    3b18:	74 77                	je     3b91 <ip6_icmp_decode+0x121>
    3b1a:	3d 87 00 00 00       	cmp    eax,0x87
    3b1f:	7f 7d                	jg     3b9e <ip6_icmp_decode+0x12e>
    3b21:	3d 82 00 00 00       	cmp    eax,0x82
    3b26:	74 56                	je     3b7e <ip6_icmp_decode+0x10e>
    3b28:	3d 85 00 00 00       	cmp    eax,0x85
    3b2d:	75 6f                	jne    3b9e <ip6_icmp_decode+0x12e>
    3b2f:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3b33:	48 83 c0 0a          	add    rax,0xa
    3b37:	48 89 c7             	mov    rdi,rax
    3b3a:	e8 18 f4 ff ff       	call   2f57 <mac_ntoa>
    3b3f:	48 89 c1             	mov    rcx,rax
    3b42:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    3b46:	ba 40 00 00 00       	mov    edx,0x40
    3b4b:	48 89 ce             	mov    rsi,rcx
    3b4e:	48 89 c7             	mov    rdi,rax
    3b51:	e8 7a e9 ff ff       	call   24d0 <strncpy@plt>
    3b56:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    3b5a:	48 89 c6             	mov    rsi,rax
    3b5d:	48 8d 3d bd 87 00 00 	lea    rdi,[rip+0x87bd]        # c321 <_IO_stdin_used+0x321>
    3b64:	b8 00 00 00 00       	mov    eax,0x0
    3b69:	e8 82 ea ff ff       	call   25f0 <printf@plt>
    3b6e:	eb 2e                	jmp    3b9e <ip6_icmp_decode+0x12e>
    3b70:	48 8d 3d c9 87 00 00 	lea    rdi,[rip+0x87c9]        # c340 <_IO_stdin_used+0x340>
    3b77:	e8 a4 e9 ff ff       	call   2520 <puts@plt>
    3b7c:	eb 20                	jmp    3b9e <ip6_icmp_decode+0x12e>
    3b7e:	48 8d 3d e0 87 00 00 	lea    rdi,[rip+0x87e0]        # c365 <_IO_stdin_used+0x365>
    3b85:	b8 00 00 00 00       	mov    eax,0x0
    3b8a:	e8 61 ea ff ff       	call   25f0 <printf@plt>
    3b8f:	eb 0d                	jmp    3b9e <ip6_icmp_decode+0x12e>
    3b91:	48 8d 3d e7 87 00 00 	lea    rdi,[rip+0x87e7]        # c37f <_IO_stdin_used+0x37f>
    3b98:	e8 83 e9 ff ff       	call   2520 <puts@plt>
    3b9d:	90                   	nop
    3b9e:	48 8d 35 f0 87 00 00 	lea    rsi,[rip+0x87f0]        # c395 <_IO_stdin_used+0x395>
    3ba5:	48 8d 3d 5a 87 00 00 	lea    rdi,[rip+0x875a]        # c306 <_IO_stdin_used+0x306>
    3bac:	b8 00 00 00 00       	mov    eax,0x0
    3bb1:	e8 3a ea ff ff       	call   25f0 <printf@plt>
    3bb6:	90                   	nop
    3bb7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3bbb:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    3bc2:	00 00 
    3bc4:	74 05                	je     3bcb <ip6_icmp_decode+0x15b>
    3bc6:	e8 e5 e9 ff ff       	call   25b0 <__stack_chk_fail@plt>
    3bcb:	c9                   	leave  
    3bcc:	c3                   	ret    

0000000000003bcd <ip4_icmp_decode>:
    3bcd:	f3 0f 1e fa          	endbr64 
    3bd1:	55                   	push   rbp
    3bd2:	48 89 e5             	mov    rbp,rsp
    3bd5:	48 81 ec 20 01 00 00 	sub    rsp,0x120
    3bdc:	48 89 bd e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rdi
    3be3:	48 89 b5 e0 fe ff ff 	mov    QWORD PTR [rbp-0x120],rsi
    3bea:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3bf1:	00 00 
    3bf3:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3bf7:	31 c0                	xor    eax,eax
    3bf9:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c00:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3c04:	ba 5e 00 00 00       	mov    edx,0x5e
    3c09:	be 01 00 00 00       	mov    esi,0x1
    3c0e:	48 89 c7             	mov    rdi,rax
    3c11:	e8 92 13 00 00       	call   4fa8 <add_ip_addr_or_inc_counter>
    3c16:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c1d:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    3c21:	ba 5e 00 00 00       	mov    edx,0x5e
    3c26:	be 00 00 00 00       	mov    esi,0x0
    3c2b:	48 89 c7             	mov    rdi,rax
    3c2e:	e8 75 13 00 00       	call   4fa8 <add_ip_addr_or_inc_counter>
    3c33:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c3a:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3c3e:	48 89 85 08 ff ff ff 	mov    QWORD PTR [rbp-0xf8],rax
    3c45:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c4c:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    3c50:	48 89 85 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],rax
    3c57:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    3c5e:	48 83 c0 22          	add    rax,0x22
    3c62:	48 89 85 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rax
    3c69:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    3c70:	48 8d 50 22          	lea    rdx,[rax+0x22]
    3c74:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c7b:	48 89 10             	mov    QWORD PTR [rax],rdx
    3c7e:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c85:	48 8b 95 18 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xe8]
    3c8c:	48 89 50 60          	mov    QWORD PTR [rax+0x60],rdx
    3c90:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c97:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    3c9a:	89 85 fc fe ff ff    	mov    DWORD PTR [rbp-0x104],eax
    3ca0:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3ca7:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    3caa:	8d 50 d6             	lea    edx,[rax-0x2a]
    3cad:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3cb4:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    3cb7:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    3cbe:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3cc1:	3c 08                	cmp    al,0x8
    3cc3:	0f 85 55 01 00 00    	jne    3e1e <ip4_icmp_decode+0x251>
    3cc9:	8b 05 39 40 10 00    	mov    eax,DWORD PTR [rip+0x104039]        # 107d08 <strict_nmap_host_alive_check>
    3ccf:	83 f8 01             	cmp    eax,0x1
    3cd2:	0f 85 46 01 00 00    	jne    3e1e <ip4_icmp_decode+0x251>
    3cd8:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3cdf:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3ce3:	48 89 c7             	mov    rdi,rax
    3ce6:	e8 51 3d 00 00       	call   7a3c <member_exists>
    3ceb:	89 85 00 ff ff ff    	mov    DWORD PTR [rbp-0x100],eax
    3cf1:	83 bd 00 ff ff ff ff 	cmp    DWORD PTR [rbp-0x100],0xffffffff
    3cf8:	0f 84 83 00 00 00    	je     3d81 <ip4_icmp_decode+0x1b4>
    3cfe:	8b 85 00 ff ff ff    	mov    eax,DWORD PTR [rbp-0x100]
    3d04:	48 63 d0             	movsxd rdx,eax
    3d07:	48 89 d0             	mov    rax,rdx
    3d0a:	48 c1 e0 02          	shl    rax,0x2
    3d0e:	48 01 d0             	add    rax,rdx
    3d11:	48 c1 e0 03          	shl    rax,0x3
    3d15:	48 01 d0             	add    rax,rdx
    3d18:	48 c1 e0 04          	shl    rax,0x4
    3d1c:	48 8d 15 7d f3 0e 00 	lea    rdx,[rip+0xef37d]        # f30a0 <watchlist>
    3d23:	48 01 d0             	add    rax,rdx
    3d26:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
    3d2d:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d34:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3d37:	85 c0                	test   eax,eax
    3d39:	0f 85 a8 02 00 00    	jne    3fe7 <ip4_icmp_decode+0x41a>
    3d3f:	bf 00 00 00 00       	mov    edi,0x0
    3d44:	e8 b7 e9 ff ff       	call   2700 <time@plt>
    3d49:	48 89 c2             	mov    rdx,rax
    3d4c:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d53:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    3d57:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d5e:	c7 40 30 01 00 00 00 	mov    DWORD PTR [rax+0x30],0x1
    3d65:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d6c:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3d6f:	8d 50 01             	lea    edx,[rax+0x1]
    3d72:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d79:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    3d7c:	e9 66 02 00 00       	jmp    3fe7 <ip4_icmp_decode+0x41a>
    3d81:	8b 05 91 d2 00 00    	mov    eax,DWORD PTR [rip+0xd291]        # 11018 <watchlist_num>
    3d87:	83 c0 01             	add    eax,0x1
    3d8a:	89 05 88 d2 00 00    	mov    DWORD PTR [rip+0xd288],eax        # 11018 <watchlist_num>
    3d90:	8b 05 82 d2 00 00    	mov    eax,DWORD PTR [rip+0xd282]        # 11018 <watchlist_num>
    3d96:	48 63 d0             	movsxd rdx,eax
    3d99:	48 89 d0             	mov    rax,rdx
    3d9c:	48 c1 e0 02          	shl    rax,0x2
    3da0:	48 01 d0             	add    rax,rdx
    3da3:	48 c1 e0 03          	shl    rax,0x3
    3da7:	48 01 d0             	add    rax,rdx
    3daa:	48 c1 e0 04          	shl    rax,0x4
    3dae:	48 8d 15 eb f2 0e 00 	lea    rdx,[rip+0xef2eb]        # f30a0 <watchlist>
    3db5:	48 01 d0             	add    rax,rdx
    3db8:	48 89 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rax
    3dbf:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3dc6:	48 8d 50 08          	lea    rdx,[rax+0x8]
    3dca:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3dd1:	48 89 c6             	mov    rsi,rax
    3dd4:	48 89 d7             	mov    rdi,rdx
    3dd7:	e8 14 e7 ff ff       	call   24f0 <strcpy@plt>
    3ddc:	bf 00 00 00 00       	mov    edi,0x0
    3de1:	e8 1a e9 ff ff       	call   2700 <time@plt>
    3de6:	48 89 c2             	mov    rdx,rax
    3de9:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3df0:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    3df4:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3dfb:	c7 40 30 01 00 00 00 	mov    DWORD PTR [rax+0x30],0x1
    3e02:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3e09:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3e0c:	8d 50 01             	lea    edx,[rax+0x1]
    3e0f:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3e16:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    3e19:	e9 c9 01 00 00       	jmp    3fe7 <ip4_icmp_decode+0x41a>
    3e1e:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    3e25:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3e28:	3c 0d                	cmp    al,0xd
    3e2a:	0f 85 ba 01 00 00    	jne    3fea <ip4_icmp_decode+0x41d>
    3e30:	8b 05 8e 63 10 00    	mov    eax,DWORD PTR [rip+0x10638e]        # 10a1c4 <strict_icmp_timestamp_req>
    3e36:	83 f8 01             	cmp    eax,0x1
    3e39:	74 0f                	je     3e4a <ip4_icmp_decode+0x27d>
    3e3b:	8b 05 c7 3e 10 00    	mov    eax,DWORD PTR [rip+0x103ec7]        # 107d08 <strict_nmap_host_alive_check>
    3e41:	83 f8 01             	cmp    eax,0x1
    3e44:	0f 85 a0 01 00 00    	jne    3fea <ip4_icmp_decode+0x41d>
    3e4a:	8b 05 74 63 10 00    	mov    eax,DWORD PTR [rip+0x106374]        # 10a1c4 <strict_icmp_timestamp_req>
    3e50:	85 c0                	test   eax,eax
    3e52:	74 22                	je     3e76 <ip4_icmp_decode+0x2a9>
    3e54:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    3e5b:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3e62:	48 89 c6             	mov    rsi,rax
    3e65:	48 8d 3d 34 85 00 00 	lea    rdi,[rip+0x8534]        # c3a0 <_IO_stdin_used+0x3a0>
    3e6c:	b8 00 00 00 00       	mov    eax,0x0
    3e71:	e8 7a e7 ff ff       	call   25f0 <printf@plt>
    3e76:	8b 05 8c 3e 10 00    	mov    eax,DWORD PTR [rip+0x103e8c]        # 107d08 <strict_nmap_host_alive_check>
    3e7c:	85 c0                	test   eax,eax
    3e7e:	0f 84 66 01 00 00    	je     3fea <ip4_icmp_decode+0x41d>
    3e84:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3e8b:	48 89 c7             	mov    rdi,rax
    3e8e:	e8 a9 3b 00 00       	call   7a3c <member_exists>
    3e93:	89 85 04 ff ff ff    	mov    DWORD PTR [rbp-0xfc],eax
    3e99:	83 bd 04 ff ff ff ff 	cmp    DWORD PTR [rbp-0xfc],0xffffffff
    3ea0:	0f 84 44 01 00 00    	je     3fea <ip4_icmp_decode+0x41d>
    3ea6:	8b 85 04 ff ff ff    	mov    eax,DWORD PTR [rbp-0xfc]
    3eac:	48 63 d0             	movsxd rdx,eax
    3eaf:	48 89 d0             	mov    rax,rdx
    3eb2:	48 c1 e0 02          	shl    rax,0x2
    3eb6:	48 01 d0             	add    rax,rdx
    3eb9:	48 c1 e0 03          	shl    rax,0x3
    3ebd:	48 01 d0             	add    rax,rdx
    3ec0:	48 c1 e0 04          	shl    rax,0x4
    3ec4:	48 8d 15 d5 f1 0e 00 	lea    rdx,[rip+0xef1d5]        # f30a0 <watchlist>
    3ecb:	48 01 d0             	add    rax,rdx
    3ece:	48 89 85 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rax
    3ed5:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3edc:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3edf:	83 f8 03             	cmp    eax,0x3
    3ee2:	0f 85 05 01 00 00    	jne    3fed <ip4_icmp_decode+0x420>
    3ee8:	bf 00 00 00 00       	mov    edi,0x0
    3eed:	e8 0e e8 ff ff       	call   2700 <time@plt>
    3ef2:	48 89 c2             	mov    rdx,rax
    3ef5:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3efc:	48 89 50 48          	mov    QWORD PTR [rax+0x48],rdx
    3f00:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3f07:	48 8b 50 48          	mov    rdx,QWORD PTR [rax+0x48]
    3f0b:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3f12:	48 8b 40 28          	mov    rax,QWORD PTR [rax+0x28]
    3f16:	48 29 c2             	sub    rdx,rax
    3f19:	48 89 d0             	mov    rax,rdx
    3f1c:	48 3d e2 b4 04 00    	cmp    rax,0x4b4e2
    3f22:	0f 87 c2 00 00 00    	ja     3fea <ip4_icmp_decode+0x41d>
    3f28:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    3f2f:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3f36:	48 89 c6             	mov    rsi,rax
    3f39:	48 8d 3d a8 84 00 00 	lea    rdi,[rip+0x84a8]        # c3e8 <_IO_stdin_used+0x3e8>
    3f40:	b8 00 00 00 00       	mov    eax,0x0
    3f45:	e8 a6 e6 ff ff       	call   25f0 <printf@plt>
    3f4a:	48 8b 05 df d0 00 00 	mov    rax,QWORD PTR [rip+0xd0df]        # 11030 <def_log_file>
    3f51:	48 8d 35 fa 84 00 00 	lea    rsi,[rip+0x84fa]        # c452 <_IO_stdin_used+0x452>
    3f58:	48 89 c7             	mov    rdi,rax
    3f5b:	e8 50 e8 ff ff       	call   27b0 <fopen@plt>
    3f60:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    3f67:	b8 00 00 00 00       	mov    eax,0x0
    3f6c:	e8 2f f4 ff ff       	call   33a0 <get_formated_time>
    3f71:	48 89 c6             	mov    rsi,rax
    3f74:	48 8b 8d 10 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xf0]
    3f7b:	48 8b 95 08 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf8]
    3f82:	48 8d 85 40 ff ff ff 	lea    rax,[rbp-0xc0]
    3f89:	49 89 f0             	mov    r8,rsi
    3f8c:	48 8d 35 c5 84 00 00 	lea    rsi,[rip+0x84c5]        # c458 <_IO_stdin_used+0x458>
    3f93:	48 89 c7             	mov    rdi,rax
    3f96:	b8 00 00 00 00       	mov    eax,0x0
    3f9b:	e8 d0 e8 ff ff       	call   2870 <sprintf@plt>
    3fa0:	48 8b 95 38 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xc8]
    3fa7:	48 8d 85 40 ff ff ff 	lea    rax,[rbp-0xc0]
    3fae:	48 89 d6             	mov    rsi,rdx
    3fb1:	48 89 c7             	mov    rdi,rax
    3fb4:	e8 57 e6 ff ff       	call   2610 <fputs@plt>
    3fb9:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
    3fc0:	48 89 c7             	mov    rdi,rax
    3fc3:	e8 a8 e5 ff ff       	call   2570 <fclose@plt>
    3fc8:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3fcf:	48 83 c0 28          	add    rax,0x28
    3fd3:	ba 28 00 00 00       	mov    edx,0x28
    3fd8:	be 00 00 00 00       	mov    esi,0x0
    3fdd:	48 89 c7             	mov    rdi,rax
    3fe0:	e8 4b e6 ff ff       	call   2630 <memset@plt>
    3fe5:	eb 07                	jmp    3fee <ip4_icmp_decode+0x421>
    3fe7:	90                   	nop
    3fe8:	eb 04                	jmp    3fee <ip4_icmp_decode+0x421>
    3fea:	90                   	nop
    3feb:	eb 01                	jmp    3fee <ip4_icmp_decode+0x421>
    3fed:	90                   	nop
    3fee:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3ff5:	c7 40 2c 80 00 00 00 	mov    DWORD PTR [rax+0x2c],0x80
    3ffc:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    4003:	48 89 c7             	mov    rdi,rax
    4006:	e8 dd 24 00 00       	call   64e8 <rulemgr>
    400b:	0f b6 05 47 3d 10 00 	movzx  eax,BYTE PTR [rip+0x103d47]        # 107d59 <packet_print>
    4012:	84 c0                	test   al,al
    4014:	0f 84 e0 03 00 00    	je     43fa <ip4_icmp_decode+0x82d>
    401a:	48 8d 35 df 82 00 00 	lea    rsi,[rip+0x82df]        # c300 <_IO_stdin_used+0x300>
    4021:	48 8d 3d de 82 00 00 	lea    rdi,[rip+0x82de]        # c306 <_IO_stdin_used+0x306>
    4028:	b8 00 00 00 00       	mov    eax,0x0
    402d:	e8 be e5 ff ff       	call   25f0 <printf@plt>
    4032:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    4039:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    4040:	48 89 c6             	mov    rsi,rax
    4043:	48 8d 3d 7e 84 00 00 	lea    rdi,[rip+0x847e]        # c4c8 <_IO_stdin_used+0x4c8>
    404a:	b8 00 00 00 00       	mov    eax,0x0
    404f:	e8 9c e5 ff ff       	call   25f0 <printf@plt>
    4054:	48 8d 3d 7c 84 00 00 	lea    rdi,[rip+0x847c]        # c4d7 <_IO_stdin_used+0x4d7>
    405b:	b8 00 00 00 00       	mov    eax,0x0
    4060:	e8 8b e5 ff ff       	call   25f0 <printf@plt>
    4065:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    406c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    406f:	0f b6 c0             	movzx  eax,al
    4072:	83 f8 0e             	cmp    eax,0xe
    4075:	0f 87 46 03 00 00    	ja     43c1 <ip4_icmp_decode+0x7f4>
    407b:	89 c0                	mov    eax,eax
    407d:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    4084:	00 
    4085:	48 8d 05 54 88 00 00 	lea    rax,[rip+0x8854]        # c8e0 <_IO_stdin_used+0x8e0>
    408c:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    408f:	48 98                	cdqe   
    4091:	48 8d 15 48 88 00 00 	lea    rdx,[rip+0x8848]        # c8e0 <_IO_stdin_used+0x8e0>
    4098:	48 01 d0             	add    rax,rdx
    409b:	3e ff e0             	notrack jmp rax
    409e:	48 8d 3d 39 84 00 00 	lea    rdi,[rip+0x8439]        # c4de <_IO_stdin_used+0x4de>
    40a5:	e8 76 e4 ff ff       	call   2520 <puts@plt>
    40aa:	e9 33 03 00 00       	jmp    43e2 <ip4_icmp_decode+0x815>
    40af:	48 8d 3d 34 84 00 00 	lea    rdi,[rip+0x8434]        # c4ea <_IO_stdin_used+0x4ea>
    40b6:	b8 00 00 00 00       	mov    eax,0x0
    40bb:	e8 30 e5 ff ff       	call   25f0 <printf@plt>
    40c0:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    40c7:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    40cb:	0f b6 c0             	movzx  eax,al
    40ce:	83 f8 0f             	cmp    eax,0xf
    40d1:	0f 87 1e 01 00 00    	ja     41f5 <ip4_icmp_decode+0x628>
    40d7:	89 c0                	mov    eax,eax
    40d9:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    40e0:	00 
    40e1:	48 8d 05 34 88 00 00 	lea    rax,[rip+0x8834]        # c91c <_IO_stdin_used+0x91c>
    40e8:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    40eb:	48 98                	cdqe   
    40ed:	48 8d 15 28 88 00 00 	lea    rdx,[rip+0x8828]        # c91c <_IO_stdin_used+0x91c>
    40f4:	48 01 d0             	add    rax,rdx
    40f7:	3e ff e0             	notrack jmp rax
    40fa:	48 8d 3d 03 84 00 00 	lea    rdi,[rip+0x8403]        # c504 <_IO_stdin_used+0x504>
    4101:	e8 1a e4 ff ff       	call   2520 <puts@plt>
    4106:	e9 0c 01 00 00       	jmp    4217 <ip4_icmp_decode+0x64a>
    410b:	48 8d 3d 09 84 00 00 	lea    rdi,[rip+0x8409]        # c51b <_IO_stdin_used+0x51b>
    4112:	e8 09 e4 ff ff       	call   2520 <puts@plt>
    4117:	e9 fb 00 00 00       	jmp    4217 <ip4_icmp_decode+0x64a>
    411c:	48 8d 3d 0c 84 00 00 	lea    rdi,[rip+0x840c]        # c52f <_IO_stdin_used+0x52f>
    4123:	e8 f8 e3 ff ff       	call   2520 <puts@plt>
    4128:	e9 ea 00 00 00       	jmp    4217 <ip4_icmp_decode+0x64a>
    412d:	48 8d 3d 13 84 00 00 	lea    rdi,[rip+0x8413]        # c547 <_IO_stdin_used+0x547>
    4134:	e8 e7 e3 ff ff       	call   2520 <puts@plt>
    4139:	e9 d9 00 00 00       	jmp    4217 <ip4_icmp_decode+0x64a>
    413e:	48 8d 3d 16 84 00 00 	lea    rdi,[rip+0x8416]        # c55b <_IO_stdin_used+0x55b>
    4145:	e8 d6 e3 ff ff       	call   2520 <puts@plt>
    414a:	e9 c8 00 00 00       	jmp    4217 <ip4_icmp_decode+0x64a>
    414f:	48 8d 3d 1d 84 00 00 	lea    rdi,[rip+0x841d]        # c573 <_IO_stdin_used+0x573>
    4156:	e8 c5 e3 ff ff       	call   2520 <puts@plt>
    415b:	e9 b7 00 00 00       	jmp    4217 <ip4_icmp_decode+0x64a>
    4160:	48 8d 3d 29 84 00 00 	lea    rdi,[rip+0x8429]        # c590 <_IO_stdin_used+0x590>
    4167:	e8 b4 e3 ff ff       	call   2520 <puts@plt>
    416c:	e9 a6 00 00 00       	jmp    4217 <ip4_icmp_decode+0x64a>
    4171:	48 8d 3d 40 84 00 00 	lea    rdi,[rip+0x8440]        # c5b8 <_IO_stdin_used+0x5b8>
    4178:	e8 a3 e3 ff ff       	call   2520 <puts@plt>
    417d:	e9 95 00 00 00       	jmp    4217 <ip4_icmp_decode+0x64a>
    4182:	48 8d 3d 4f 84 00 00 	lea    rdi,[rip+0x844f]        # c5d8 <_IO_stdin_used+0x5d8>
    4189:	e8 92 e3 ff ff       	call   2520 <puts@plt>
    418e:	e9 84 00 00 00       	jmp    4217 <ip4_icmp_decode+0x64a>
    4193:	48 8d 3d 56 84 00 00 	lea    rdi,[rip+0x8456]        # c5f0 <_IO_stdin_used+0x5f0>
    419a:	e8 81 e3 ff ff       	call   2520 <puts@plt>
    419f:	eb 76                	jmp    4217 <ip4_icmp_decode+0x64a>
    41a1:	48 8d 3d 70 84 00 00 	lea    rdi,[rip+0x8470]        # c618 <_IO_stdin_used+0x618>
    41a8:	e8 73 e3 ff ff       	call   2520 <puts@plt>
    41ad:	eb 68                	jmp    4217 <ip4_icmp_decode+0x64a>
    41af:	48 8d 3d 8a 84 00 00 	lea    rdi,[rip+0x848a]        # c640 <_IO_stdin_used+0x640>
    41b6:	e8 65 e3 ff ff       	call   2520 <puts@plt>
    41bb:	eb 5a                	jmp    4217 <ip4_icmp_decode+0x64a>
    41bd:	48 8d 3d 9b 84 00 00 	lea    rdi,[rip+0x849b]        # c65f <_IO_stdin_used+0x65f>
    41c4:	e8 57 e3 ff ff       	call   2520 <puts@plt>
    41c9:	eb 4c                	jmp    4217 <ip4_icmp_decode+0x64a>
    41cb:	48 8d 3d ae 84 00 00 	lea    rdi,[rip+0x84ae]        # c680 <_IO_stdin_used+0x680>
    41d2:	e8 49 e3 ff ff       	call   2520 <puts@plt>
    41d7:	eb 3e                	jmp    4217 <ip4_icmp_decode+0x64a>
    41d9:	48 8d 3d cd 84 00 00 	lea    rdi,[rip+0x84cd]        # c6ad <_IO_stdin_used+0x6ad>
    41e0:	e8 3b e3 ff ff       	call   2520 <puts@plt>
    41e5:	eb 30                	jmp    4217 <ip4_icmp_decode+0x64a>
    41e7:	48 8d 3d e2 84 00 00 	lea    rdi,[rip+0x84e2]        # c6d0 <_IO_stdin_used+0x6d0>
    41ee:	e8 2d e3 ff ff       	call   2520 <puts@plt>
    41f3:	eb 22                	jmp    4217 <ip4_icmp_decode+0x64a>
    41f5:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    41fc:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4200:	0f b6 c0             	movzx  eax,al
    4203:	89 c6                	mov    esi,eax
    4205:	48 8d 3d e3 84 00 00 	lea    rdi,[rip+0x84e3]        # c6ef <_IO_stdin_used+0x6ef>
    420c:	b8 00 00 00 00       	mov    eax,0x0
    4211:	e8 da e3 ff ff       	call   25f0 <printf@plt>
    4216:	90                   	nop
    4217:	e9 c6 01 00 00       	jmp    43e2 <ip4_icmp_decode+0x815>
    421c:	48 8d 3d e5 84 00 00 	lea    rdi,[rip+0x84e5]        # c708 <_IO_stdin_used+0x708>
    4223:	e8 f8 e2 ff ff       	call   2520 <puts@plt>
    4228:	e9 b5 01 00 00       	jmp    43e2 <ip4_icmp_decode+0x815>
    422d:	48 8d 3d f3 84 00 00 	lea    rdi,[rip+0x84f3]        # c727 <_IO_stdin_used+0x727>
    4234:	b8 00 00 00 00       	mov    eax,0x0
    4239:	e8 b2 e3 ff ff       	call   25f0 <printf@plt>
    423e:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4245:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4249:	0f b6 c0             	movzx  eax,al
    424c:	83 f8 03             	cmp    eax,0x3
    424f:	74 44                	je     4295 <ip4_icmp_decode+0x6c8>
    4251:	83 f8 03             	cmp    eax,0x3
    4254:	7f 4d                	jg     42a3 <ip4_icmp_decode+0x6d6>
    4256:	83 f8 02             	cmp    eax,0x2
    4259:	74 2c                	je     4287 <ip4_icmp_decode+0x6ba>
    425b:	83 f8 02             	cmp    eax,0x2
    425e:	7f 43                	jg     42a3 <ip4_icmp_decode+0x6d6>
    4260:	85 c0                	test   eax,eax
    4262:	74 07                	je     426b <ip4_icmp_decode+0x69e>
    4264:	83 f8 01             	cmp    eax,0x1
    4267:	74 10                	je     4279 <ip4_icmp_decode+0x6ac>
    4269:	eb 38                	jmp    42a3 <ip4_icmp_decode+0x6d6>
    426b:	48 8d 3d c1 84 00 00 	lea    rdi,[rip+0x84c1]        # c733 <_IO_stdin_used+0x733>
    4272:	e8 a9 e2 ff ff       	call   2520 <puts@plt>
    4277:	eb 4c                	jmp    42c5 <ip4_icmp_decode+0x6f8>
    4279:	48 8d 3d cb 84 00 00 	lea    rdi,[rip+0x84cb]        # c74b <_IO_stdin_used+0x74b>
    4280:	e8 9b e2 ff ff       	call   2520 <puts@plt>
    4285:	eb 3e                	jmp    42c5 <ip4_icmp_decode+0x6f8>
    4287:	48 8d 3d d2 84 00 00 	lea    rdi,[rip+0x84d2]        # c760 <_IO_stdin_used+0x760>
    428e:	e8 8d e2 ff ff       	call   2520 <puts@plt>
    4293:	eb 30                	jmp    42c5 <ip4_icmp_decode+0x6f8>
    4295:	48 8d 3d e4 84 00 00 	lea    rdi,[rip+0x84e4]        # c780 <_IO_stdin_used+0x780>
    429c:	e8 7f e2 ff ff       	call   2520 <puts@plt>
    42a1:	eb 22                	jmp    42c5 <ip4_icmp_decode+0x6f8>
    42a3:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    42aa:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    42ae:	0f b6 c0             	movzx  eax,al
    42b1:	89 c6                	mov    esi,eax
    42b3:	48 8d 3d 35 84 00 00 	lea    rdi,[rip+0x8435]        # c6ef <_IO_stdin_used+0x6ef>
    42ba:	b8 00 00 00 00       	mov    eax,0x0
    42bf:	e8 2c e3 ff ff       	call   25f0 <printf@plt>
    42c4:	90                   	nop
    42c5:	e9 18 01 00 00       	jmp    43e2 <ip4_icmp_decode+0x815>
    42ca:	48 8d 3d cc 84 00 00 	lea    rdi,[rip+0x84cc]        # c79d <_IO_stdin_used+0x79d>
    42d1:	e8 4a e2 ff ff       	call   2520 <puts@plt>
    42d6:	e9 07 01 00 00       	jmp    43e2 <ip4_icmp_decode+0x815>
    42db:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    42e2:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    42e6:	84 c0                	test   al,al
    42e8:	75 16                	jne    4300 <ip4_icmp_decode+0x733>
    42ea:	48 8d 3d bf 84 00 00 	lea    rdi,[rip+0x84bf]        # c7b0 <_IO_stdin_used+0x7b0>
    42f1:	b8 00 00 00 00       	mov    eax,0x0
    42f6:	e8 f5 e2 ff ff       	call   25f0 <printf@plt>
    42fb:	e9 e2 00 00 00       	jmp    43e2 <ip4_icmp_decode+0x815>
    4300:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4307:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    430b:	0f b6 c0             	movzx  eax,al
    430e:	89 c6                	mov    esi,eax
    4310:	48 8d 3d d9 84 00 00 	lea    rdi,[rip+0x84d9]        # c7f0 <_IO_stdin_used+0x7f0>
    4317:	b8 00 00 00 00       	mov    eax,0x0
    431c:	e8 cf e2 ff ff       	call   25f0 <printf@plt>
    4321:	e9 bc 00 00 00       	jmp    43e2 <ip4_icmp_decode+0x815>
    4326:	48 8d 3d f0 84 00 00 	lea    rdi,[rip+0x84f0]        # c81d <_IO_stdin_used+0x81d>
    432d:	e8 ee e1 ff ff       	call   2520 <puts@plt>
    4332:	e9 ab 00 00 00       	jmp    43e2 <ip4_icmp_decode+0x815>
    4337:	48 8d 3d f6 84 00 00 	lea    rdi,[rip+0x84f6]        # c834 <_IO_stdin_used+0x834>
    433e:	b8 00 00 00 00       	mov    eax,0x0
    4343:	e8 a8 e2 ff ff       	call   25f0 <printf@plt>
    4348:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    434f:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4353:	84 c0                	test   al,al
    4355:	75 0e                	jne    4365 <ip4_icmp_decode+0x798>
    4357:	48 8d 3d ed 84 00 00 	lea    rdi,[rip+0x84ed]        # c84b <_IO_stdin_used+0x84b>
    435e:	e8 bd e1 ff ff       	call   2520 <puts@plt>
    4363:	eb 7d                	jmp    43e2 <ip4_icmp_decode+0x815>
    4365:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    436c:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4370:	3c 01                	cmp    al,0x1
    4372:	75 0e                	jne    4382 <ip4_icmp_decode+0x7b5>
    4374:	48 8d 3d ed 84 00 00 	lea    rdi,[rip+0x84ed]        # c868 <_IO_stdin_used+0x868>
    437b:	e8 a0 e1 ff ff       	call   2520 <puts@plt>
    4380:	eb 60                	jmp    43e2 <ip4_icmp_decode+0x815>
    4382:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4389:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    438d:	0f b6 c0             	movzx  eax,al
    4390:	89 c6                	mov    esi,eax
    4392:	48 8d 3d f6 84 00 00 	lea    rdi,[rip+0x84f6]        # c88f <_IO_stdin_used+0x88f>
    4399:	b8 00 00 00 00       	mov    eax,0x0
    439e:	e8 4d e2 ff ff       	call   25f0 <printf@plt>
    43a3:	eb 3d                	jmp    43e2 <ip4_icmp_decode+0x815>
    43a5:	48 8d 3d f9 84 00 00 	lea    rdi,[rip+0x84f9]        # c8a5 <_IO_stdin_used+0x8a5>
    43ac:	e8 6f e1 ff ff       	call   2520 <puts@plt>
    43b1:	eb 2f                	jmp    43e2 <ip4_icmp_decode+0x815>
    43b3:	48 8d 3d fe 84 00 00 	lea    rdi,[rip+0x84fe]        # c8b8 <_IO_stdin_used+0x8b8>
    43ba:	e8 61 e1 ff ff       	call   2520 <puts@plt>
    43bf:	eb 21                	jmp    43e2 <ip4_icmp_decode+0x815>
    43c1:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    43c8:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    43cb:	0f b6 c0             	movzx  eax,al
    43ce:	89 c6                	mov    esi,eax
    43d0:	48 8d 3d f2 84 00 00 	lea    rdi,[rip+0x84f2]        # c8c9 <_IO_stdin_used+0x8c9>
    43d7:	b8 00 00 00 00       	mov    eax,0x0
    43dc:	e8 0f e2 ff ff       	call   25f0 <printf@plt>
    43e1:	90                   	nop
    43e2:	48 8d 35 ac 7f 00 00 	lea    rsi,[rip+0x7fac]        # c395 <_IO_stdin_used+0x395>
    43e9:	48 8d 3d 16 7f 00 00 	lea    rdi,[rip+0x7f16]        # c306 <_IO_stdin_used+0x306>
    43f0:	b8 00 00 00 00       	mov    eax,0x0
    43f5:	e8 f6 e1 ff ff       	call   25f0 <printf@plt>
    43fa:	90                   	nop
    43fb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    43ff:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    4406:	00 00 
    4408:	74 05                	je     440f <ip4_icmp_decode+0x842>
    440a:	e8 a1 e1 ff ff       	call   25b0 <__stack_chk_fail@plt>
    440f:	c9                   	leave  
    4410:	c3                   	ret    

0000000000004411 <ip4_tcp_decode>:
    4411:	f3 0f 1e fa          	endbr64 
    4415:	55                   	push   rbp
    4416:	48 89 e5             	mov    rbp,rsp
    4419:	48 83 c4 80          	add    rsp,0xffffffffffffff80
    441d:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    4421:	48 89 75 90          	mov    QWORD PTR [rbp-0x70],rsi
    4425:	48 89 55 88          	mov    QWORD PTR [rbp-0x78],rdx
    4429:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    442d:	48 83 c0 22          	add    rax,0x22
    4431:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    4435:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4439:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    443d:	c0 e8 04             	shr    al,0x4
    4440:	0f b6 c0             	movzx  eax,al
    4443:	c1 e0 02             	shl    eax,0x2
    4446:	48 98                	cdqe   
    4448:	48 8d 50 22          	lea    rdx,[rax+0x22]
    444c:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    4450:	48 01 c2             	add    rdx,rax
    4453:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4457:	48 89 10             	mov    QWORD PTR [rax],rdx
    445a:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    445e:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    4461:	89 c2                	mov    edx,eax
    4463:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4467:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    446b:	c0 e8 04             	shr    al,0x4
    446e:	0f b6 c0             	movzx  eax,al
    4471:	c1 e0 02             	shl    eax,0x2
    4474:	29 c2                	sub    edx,eax
    4476:	89 d0                	mov    eax,edx
    4478:	83 e8 22             	sub    eax,0x22
    447b:	89 c2                	mov    edx,eax
    447d:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4481:	89 50 30             	mov    DWORD PTR [rax+0x30],edx
    4484:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4488:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    448c:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    4490:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4494:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4498:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    449c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    44a0:	ba 5c 00 00 00       	mov    edx,0x5c
    44a5:	be 01 00 00 00       	mov    esi,0x1
    44aa:	48 89 c7             	mov    rdi,rax
    44ad:	e8 f6 0a 00 00       	call   4fa8 <add_ip_addr_or_inc_counter>
    44b2:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    44b6:	ba 5c 00 00 00       	mov    edx,0x5c
    44bb:	be 00 00 00 00       	mov    esi,0x0
    44c0:	48 89 c7             	mov    rdi,rax
    44c3:	e8 e0 0a 00 00       	call   4fa8 <add_ip_addr_or_inc_counter>
    44c8:	c7 45 b4 00 00 00 00 	mov    DWORD PTR [rbp-0x4c],0x0
    44cf:	c6 45 af 00          	mov    BYTE PTR [rbp-0x51],0x0
    44d3:	c6 45 b0 00          	mov    BYTE PTR [rbp-0x50],0x0
    44d7:	c6 45 b1 00          	mov    BYTE PTR [rbp-0x4f],0x0
    44db:	c6 45 b2 00          	mov    BYTE PTR [rbp-0x4e],0x0
    44df:	c6 45 b3 00          	mov    BYTE PTR [rbp-0x4d],0x0
    44e3:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    44e7:	48 83 c0 68          	add    rax,0x68
    44eb:	ba 08 00 00 00       	mov    edx,0x8
    44f0:	be 00 00 00 00       	mov    esi,0x0
    44f5:	48 89 c7             	mov    rdi,rax
    44f8:	e8 33 e1 ff ff       	call   2630 <memset@plt>
    44fd:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4501:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    4505:	0f b7 c0             	movzx  eax,ax
    4508:	89 c7                	mov    edi,eax
    450a:	e8 71 e2 ff ff       	call   2780 <ntohs@plt>
    450f:	0f b7 c0             	movzx  eax,ax
    4512:	89 45 b8             	mov    DWORD PTR [rbp-0x48],eax
    4515:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4519:	0f b7 00             	movzx  eax,WORD PTR [rax]
    451c:	0f b7 c0             	movzx  eax,ax
    451f:	89 c7                	mov    edi,eax
    4521:	e8 5a e2 ff ff       	call   2780 <ntohs@plt>
    4526:	0f b7 c0             	movzx  eax,ax
    4529:	89 45 bc             	mov    DWORD PTR [rbp-0x44],eax
    452c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4530:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    4534:	0f b7 c0             	movzx  eax,ax
    4537:	89 c7                	mov    edi,eax
    4539:	e8 42 e2 ff ff       	call   2780 <ntohs@plt>
    453e:	0f b7 d0             	movzx  edx,ax
    4541:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4545:	89 50 28             	mov    DWORD PTR [rax+0x28],edx
    4548:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    454c:	8b 55 bc             	mov    edx,DWORD PTR [rbp-0x44]
    454f:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    4552:	0f b6 05 00 38 10 00 	movzx  eax,BYTE PTR [rip+0x103800]        # 107d59 <packet_print>
    4559:	84 c0                	test   al,al
    455b:	74 4e                	je     45ab <ip4_tcp_decode+0x19a>
    455d:	48 8d 35 fc 83 00 00 	lea    rsi,[rip+0x83fc]        # c960 <_IO_stdin_used+0x960>
    4564:	48 8d 3d fb 83 00 00 	lea    rdi,[rip+0x83fb]        # c966 <_IO_stdin_used+0x966>
    456b:	b8 00 00 00 00       	mov    eax,0x0
    4570:	e8 7b e0 ff ff       	call   25f0 <printf@plt>
    4575:	8b 75 b8             	mov    esi,DWORD PTR [rbp-0x48]
    4578:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    457c:	8b 55 bc             	mov    edx,DWORD PTR [rbp-0x44]
    457f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4583:	41 89 f0             	mov    r8d,esi
    4586:	48 89 c6             	mov    rsi,rax
    4589:	48 8d 3d d9 83 00 00 	lea    rdi,[rip+0x83d9]        # c969 <_IO_stdin_used+0x969>
    4590:	b8 00 00 00 00       	mov    eax,0x0
    4595:	e8 56 e0 ff ff       	call   25f0 <printf@plt>
    459a:	48 8d 3d dd 83 00 00 	lea    rdi,[rip+0x83dd]        # c97e <_IO_stdin_used+0x97e>
    45a1:	b8 00 00 00 00       	mov    eax,0x0
    45a6:	e8 45 e0 ff ff       	call   25f0 <printf@plt>
    45ab:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    45af:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    45b3:	c0 e8 04             	shr    al,0x4
    45b6:	83 e0 01             	and    eax,0x1
    45b9:	0f b6 c0             	movzx  eax,al
    45bc:	89 c7                	mov    edi,eax
    45be:	e8 bd e1 ff ff       	call   2780 <ntohs@plt>
    45c3:	66 85 c0             	test   ax,ax
    45c6:	74 5c                	je     4624 <ip4_tcp_decode+0x213>
    45c8:	0f b6 05 8a 37 10 00 	movzx  eax,BYTE PTR [rip+0x10378a]        # 107d59 <packet_print>
    45cf:	84 c0                	test   al,al
    45d1:	74 18                	je     45eb <ip4_tcp_decode+0x1da>
    45d3:	48 8d 35 ab 83 00 00 	lea    rsi,[rip+0x83ab]        # c985 <_IO_stdin_used+0x985>
    45da:	48 8d 3d aa 83 00 00 	lea    rdi,[rip+0x83aa]        # c98b <_IO_stdin_used+0x98b>
    45e1:	b8 00 00 00 00       	mov    eax,0x0
    45e6:	e8 05 e0 ff ff       	call   25f0 <printf@plt>
    45eb:	c6 45 b0 01          	mov    BYTE PTR [rbp-0x50],0x1
    45ef:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    45f3:	48 8d 50 68          	lea    rdx,[rax+0x68]
    45f7:	48 89 d0             	mov    rax,rdx
    45fa:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    4601:	48 89 c6             	mov    rsi,rax
    4604:	b8 00 00 00 00       	mov    eax,0x0
    4609:	48 89 f7             	mov    rdi,rsi
    460c:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    460e:	48 89 c8             	mov    rax,rcx
    4611:	48 f7 d0             	not    rax
    4614:	48 83 e8 01          	sub    rax,0x1
    4618:	48 01 d0             	add    rax,rdx
    461b:	66 c7 00 41 00       	mov    WORD PTR [rax],0x41
    4620:	83 45 b4 01          	add    DWORD PTR [rbp-0x4c],0x1
    4624:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4628:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    462c:	83 e0 01             	and    eax,0x1
    462f:	0f b6 c0             	movzx  eax,al
    4632:	89 c7                	mov    edi,eax
    4634:	e8 47 e1 ff ff       	call   2780 <ntohs@plt>
    4639:	66 85 c0             	test   ax,ax
    463c:	74 5c                	je     469a <ip4_tcp_decode+0x289>
    463e:	0f b6 05 14 37 10 00 	movzx  eax,BYTE PTR [rip+0x103714]        # 107d59 <packet_print>
    4645:	84 c0                	test   al,al
    4647:	74 18                	je     4661 <ip4_tcp_decode+0x250>
    4649:	48 8d 35 43 83 00 00 	lea    rsi,[rip+0x8343]        # c993 <_IO_stdin_used+0x993>
    4650:	48 8d 3d 42 83 00 00 	lea    rdi,[rip+0x8342]        # c999 <_IO_stdin_used+0x999>
    4657:	b8 00 00 00 00       	mov    eax,0x0
    465c:	e8 8f df ff ff       	call   25f0 <printf@plt>
    4661:	c6 45 b2 01          	mov    BYTE PTR [rbp-0x4e],0x1
    4665:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4669:	48 8d 50 68          	lea    rdx,[rax+0x68]
    466d:	48 89 d0             	mov    rax,rdx
    4670:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    4677:	48 89 c6             	mov    rsi,rax
    467a:	b8 00 00 00 00       	mov    eax,0x0
    467f:	48 89 f7             	mov    rdi,rsi
    4682:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    4684:	48 89 c8             	mov    rax,rcx
    4687:	48 f7 d0             	not    rax
    468a:	48 83 e8 01          	sub    rax,0x1
    468e:	48 01 d0             	add    rax,rdx
    4691:	66 c7 00 46 00       	mov    WORD PTR [rax],0x46
    4696:	83 45 b4 01          	add    DWORD PTR [rbp-0x4c],0x1
    469a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    469e:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    46a2:	c0 e8 03             	shr    al,0x3
    46a5:	83 e0 01             	and    eax,0x1
    46a8:	0f b6 c0             	movzx  eax,al
    46ab:	89 c7                	mov    edi,eax
    46ad:	e8 ce e0 ff ff       	call   2780 <ntohs@plt>
    46b2:	66 85 c0             	test   ax,ax
    46b5:	74 5c                	je     4713 <ip4_tcp_decode+0x302>
    46b7:	0f b6 05 9b 36 10 00 	movzx  eax,BYTE PTR [rip+0x10369b]        # 107d59 <packet_print>
    46be:	84 c0                	test   al,al
    46c0:	74 18                	je     46da <ip4_tcp_decode+0x2c9>
    46c2:	48 8d 35 d8 82 00 00 	lea    rsi,[rip+0x82d8]        # c9a1 <_IO_stdin_used+0x9a1>
    46c9:	48 8d 3d d7 82 00 00 	lea    rdi,[rip+0x82d7]        # c9a7 <_IO_stdin_used+0x9a7>
    46d0:	b8 00 00 00 00       	mov    eax,0x0
    46d5:	e8 16 df ff ff       	call   25f0 <printf@plt>
    46da:	83 45 b4 01          	add    DWORD PTR [rbp-0x4c],0x1
    46de:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    46e2:	48 8d 50 68          	lea    rdx,[rax+0x68]
    46e6:	48 89 d0             	mov    rax,rdx
    46e9:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    46f0:	48 89 c6             	mov    rsi,rax
    46f3:	b8 00 00 00 00       	mov    eax,0x0
    46f8:	48 89 f7             	mov    rdi,rsi
    46fb:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    46fd:	48 89 c8             	mov    rax,rcx
    4700:	48 f7 d0             	not    rax
    4703:	48 83 e8 01          	sub    rax,0x1
    4707:	48 01 d0             	add    rax,rdx
    470a:	66 c7 00 50 00       	mov    WORD PTR [rax],0x50
    470f:	c6 45 b3 01          	mov    BYTE PTR [rbp-0x4d],0x1
    4713:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4717:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    471b:	c0 e8 02             	shr    al,0x2
    471e:	83 e0 01             	and    eax,0x1
    4721:	0f b6 c0             	movzx  eax,al
    4724:	89 c7                	mov    edi,eax
    4726:	e8 55 e0 ff ff       	call   2780 <ntohs@plt>
    472b:	66 85 c0             	test   ax,ax
    472e:	74 5c                	je     478c <ip4_tcp_decode+0x37b>
    4730:	0f b6 05 22 36 10 00 	movzx  eax,BYTE PTR [rip+0x103622]        # 107d59 <packet_print>
    4737:	84 c0                	test   al,al
    4739:	74 18                	je     4753 <ip4_tcp_decode+0x342>
    473b:	48 8d 35 6d 82 00 00 	lea    rsi,[rip+0x826d]        # c9af <_IO_stdin_used+0x9af>
    4742:	48 8d 3d 6c 82 00 00 	lea    rdi,[rip+0x826c]        # c9b5 <_IO_stdin_used+0x9b5>
    4749:	b8 00 00 00 00       	mov    eax,0x0
    474e:	e8 9d de ff ff       	call   25f0 <printf@plt>
    4753:	c6 45 af 01          	mov    BYTE PTR [rbp-0x51],0x1
    4757:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    475b:	48 8d 50 68          	lea    rdx,[rax+0x68]
    475f:	48 89 d0             	mov    rax,rdx
    4762:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    4769:	48 89 c6             	mov    rsi,rax
    476c:	b8 00 00 00 00       	mov    eax,0x0
    4771:	48 89 f7             	mov    rdi,rsi
    4774:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    4776:	48 89 c8             	mov    rax,rcx
    4779:	48 f7 d0             	not    rax
    477c:	48 83 e8 01          	sub    rax,0x1
    4780:	48 01 d0             	add    rax,rdx
    4783:	66 c7 00 52 00       	mov    WORD PTR [rax],0x52
    4788:	83 45 b4 01          	add    DWORD PTR [rbp-0x4c],0x1
    478c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4790:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4794:	d0 e8                	shr    al,1
    4796:	83 e0 01             	and    eax,0x1
    4799:	0f b6 c0             	movzx  eax,al
    479c:	89 c7                	mov    edi,eax
    479e:	e8 dd df ff ff       	call   2780 <ntohs@plt>
    47a3:	66 85 c0             	test   ax,ax
    47a6:	74 5c                	je     4804 <ip4_tcp_decode+0x3f3>
    47a8:	0f b6 05 aa 35 10 00 	movzx  eax,BYTE PTR [rip+0x1035aa]        # 107d59 <packet_print>
    47af:	84 c0                	test   al,al
    47b1:	74 18                	je     47cb <ip4_tcp_decode+0x3ba>
    47b3:	48 8d 35 03 82 00 00 	lea    rsi,[rip+0x8203]        # c9bd <_IO_stdin_used+0x9bd>
    47ba:	48 8d 3d 02 82 00 00 	lea    rdi,[rip+0x8202]        # c9c3 <_IO_stdin_used+0x9c3>
    47c1:	b8 00 00 00 00       	mov    eax,0x0
    47c6:	e8 25 de ff ff       	call   25f0 <printf@plt>
    47cb:	c6 45 b1 01          	mov    BYTE PTR [rbp-0x4f],0x1
    47cf:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    47d3:	48 8d 50 68          	lea    rdx,[rax+0x68]
    47d7:	48 89 d0             	mov    rax,rdx
    47da:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    47e1:	48 89 c6             	mov    rsi,rax
    47e4:	b8 00 00 00 00       	mov    eax,0x0
    47e9:	48 89 f7             	mov    rdi,rsi
    47ec:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    47ee:	48 89 c8             	mov    rax,rcx
    47f1:	48 f7 d0             	not    rax
    47f4:	48 83 e8 01          	sub    rax,0x1
    47f8:	48 01 d0             	add    rax,rdx
    47fb:	66 c7 00 53 00       	mov    WORD PTR [rax],0x53
    4800:	83 45 b4 01          	add    DWORD PTR [rbp-0x4c],0x1
    4804:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4808:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    480c:	c0 e8 05             	shr    al,0x5
    480f:	83 e0 01             	and    eax,0x1
    4812:	0f b6 c0             	movzx  eax,al
    4815:	89 c7                	mov    edi,eax
    4817:	e8 64 df ff ff       	call   2780 <ntohs@plt>
    481c:	66 85 c0             	test   ax,ax
    481f:	74 58                	je     4879 <ip4_tcp_decode+0x468>
    4821:	0f b6 05 31 35 10 00 	movzx  eax,BYTE PTR [rip+0x103531]        # 107d59 <packet_print>
    4828:	84 c0                	test   al,al
    482a:	74 18                	je     4844 <ip4_tcp_decode+0x433>
    482c:	48 8d 35 98 81 00 00 	lea    rsi,[rip+0x8198]        # c9cb <_IO_stdin_used+0x9cb>
    4833:	48 8d 3d 97 81 00 00 	lea    rdi,[rip+0x8197]        # c9d1 <_IO_stdin_used+0x9d1>
    483a:	b8 00 00 00 00       	mov    eax,0x0
    483f:	e8 ac dd ff ff       	call   25f0 <printf@plt>
    4844:	83 45 b4 01          	add    DWORD PTR [rbp-0x4c],0x1
    4848:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    484c:	48 8d 50 68          	lea    rdx,[rax+0x68]
    4850:	48 89 d0             	mov    rax,rdx
    4853:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    485a:	48 89 c6             	mov    rsi,rax
    485d:	b8 00 00 00 00       	mov    eax,0x0
    4862:	48 89 f7             	mov    rdi,rsi
    4865:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    4867:	48 89 c8             	mov    rax,rcx
    486a:	48 f7 d0             	not    rax
    486d:	48 83 e8 01          	sub    rax,0x1
    4871:	48 01 d0             	add    rax,rdx
    4874:	66 c7 00 55 00       	mov    WORD PTR [rax],0x55
    4879:	0f b6 05 d9 34 10 00 	movzx  eax,BYTE PTR [rip+0x1034d9]        # 107d59 <packet_print>
    4880:	84 c0                	test   al,al
    4882:	74 3c                	je     48c0 <ip4_tcp_decode+0x4af>
    4884:	48 8d 35 d5 80 00 00 	lea    rsi,[rip+0x80d5]        # c960 <_IO_stdin_used+0x960>
    488b:	48 8d 3d d4 80 00 00 	lea    rdi,[rip+0x80d4]        # c966 <_IO_stdin_used+0x966>
    4892:	b8 00 00 00 00       	mov    eax,0x0
    4897:	e8 54 dd ff ff       	call   25f0 <printf@plt>
    489c:	48 8d 3d 36 81 00 00 	lea    rdi,[rip+0x8136]        # c9d9 <_IO_stdin_used+0x9d9>
    48a3:	e8 78 dc ff ff       	call   2520 <puts@plt>
    48a8:	48 8d 35 2c 81 00 00 	lea    rsi,[rip+0x812c]        # c9db <_IO_stdin_used+0x9db>
    48af:	48 8d 3d b0 80 00 00 	lea    rdi,[rip+0x80b0]        # c966 <_IO_stdin_used+0x966>
    48b6:	b8 00 00 00 00       	mov    eax,0x0
    48bb:	e8 30 dd ff ff       	call   25f0 <printf@plt>
    48c0:	83 7d b4 03          	cmp    DWORD PTR [rbp-0x4c],0x3
    48c4:	7f 06                	jg     48cc <ip4_tcp_decode+0x4bb>
    48c6:	83 7d b4 00          	cmp    DWORD PTR [rbp-0x4c],0x0
    48ca:	75 41                	jne    490d <ip4_tcp_decode+0x4fc>
    48cc:	8b 7d b8             	mov    edi,DWORD PTR [rbp-0x48]
    48cf:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
    48d3:	8b 55 bc             	mov    edx,DWORD PTR [rbp-0x44]
    48d6:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    48da:	48 8d 0d fa 80 00 00 	lea    rcx,[rip+0x80fa]        # c9db <_IO_stdin_used+0x9db>
    48e1:	51                   	push   rcx
    48e2:	8b 4d b4             	mov    ecx,DWORD PTR [rbp-0x4c]
    48e5:	51                   	push   rcx
    48e6:	41 89 f9             	mov    r9d,edi
    48e9:	49 89 f0             	mov    r8,rsi
    48ec:	89 d1                	mov    ecx,edx
    48ee:	48 89 c2             	mov    rdx,rax
    48f1:	48 8d 35 b7 80 00 00 	lea    rsi,[rip+0x80b7]        # c9af <_IO_stdin_used+0x9af>
    48f8:	48 8d 3d e1 80 00 00 	lea    rdi,[rip+0x80e1]        # c9e0 <_IO_stdin_used+0x9e0>
    48ff:	b8 00 00 00 00       	mov    eax,0x0
    4904:	e8 e7 dc ff ff       	call   25f0 <printf@plt>
    4909:	48 83 c4 10          	add    rsp,0x10
    490d:	0f b6 05 3d 34 10 00 	movzx  eax,BYTE PTR [rip+0x10343d]        # 107d51 <use_spi>
    4914:	84 c0                	test   al,al
    4916:	0f 84 8c 00 00 00    	je     49a8 <ip4_tcp_decode+0x597>
    491c:	80 7d b3 00          	cmp    BYTE PTR [rbp-0x4d],0x0
    4920:	74 1a                	je     493c <ip4_tcp_decode+0x52b>
    4922:	80 7d b0 00          	cmp    BYTE PTR [rbp-0x50],0x0
    4926:	74 14                	je     493c <ip4_tcp_decode+0x52b>
    4928:	83 7d b4 02          	cmp    DWORD PTR [rbp-0x4c],0x2
    492c:	75 0e                	jne    493c <ip4_tcp_decode+0x52b>
    492e:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4932:	48 89 c7             	mov    rdi,rax
    4935:	e8 18 49 00 00       	call   9252 <handle_data_pkt>
    493a:	eb 6c                	jmp    49a8 <ip4_tcp_decode+0x597>
    493c:	80 7d b2 00          	cmp    BYTE PTR [rbp-0x4e],0x0
    4940:	74 14                	je     4956 <ip4_tcp_decode+0x545>
    4942:	80 7d b0 00          	cmp    BYTE PTR [rbp-0x50],0x0
    4946:	74 0e                	je     4956 <ip4_tcp_decode+0x545>
    4948:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    494c:	48 89 c7             	mov    rdi,rax
    494f:	e8 eb 47 00 00       	call   913f <polite_end>
    4954:	eb 52                	jmp    49a8 <ip4_tcp_decode+0x597>
    4956:	80 7d b1 00          	cmp    BYTE PTR [rbp-0x4f],0x0
    495a:	74 14                	je     4970 <ip4_tcp_decode+0x55f>
    495c:	83 7d b4 01          	cmp    DWORD PTR [rbp-0x4c],0x1
    4960:	75 0e                	jne    4970 <ip4_tcp_decode+0x55f>
    4962:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4966:	48 89 c7             	mov    rdi,rax
    4969:	e8 2e 43 00 00       	call   8c9c <add_new_conversation>
    496e:	eb 38                	jmp    49a8 <ip4_tcp_decode+0x597>
    4970:	80 7d b1 00          	cmp    BYTE PTR [rbp-0x4f],0x0
    4974:	74 1a                	je     4990 <ip4_tcp_decode+0x57f>
    4976:	80 7d b0 00          	cmp    BYTE PTR [rbp-0x50],0x0
    497a:	74 14                	je     4990 <ip4_tcp_decode+0x57f>
    497c:	83 7d b4 02          	cmp    DWORD PTR [rbp-0x4c],0x2
    4980:	75 0e                	jne    4990 <ip4_tcp_decode+0x57f>
    4982:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4986:	48 89 c7             	mov    rdi,rax
    4989:	e8 47 45 00 00       	call   8ed5 <spi_ud_thw>
    498e:	eb 18                	jmp    49a8 <ip4_tcp_decode+0x597>
    4990:	80 7d b0 00          	cmp    BYTE PTR [rbp-0x50],0x0
    4994:	74 12                	je     49a8 <ip4_tcp_decode+0x597>
    4996:	83 7d b4 01          	cmp    DWORD PTR [rbp-0x4c],0x1
    499a:	75 0c                	jne    49a8 <ip4_tcp_decode+0x597>
    499c:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    49a0:	48 89 c7             	mov    rdi,rax
    49a3:	e8 f6 45 00 00       	call   8f9e <update_table>
    49a8:	80 7d b3 00          	cmp    BYTE PTR [rbp-0x4d],0x0
    49ac:	74 17                	je     49c5 <ip4_tcp_decode+0x5b4>
    49ae:	80 7d b0 00          	cmp    BYTE PTR [rbp-0x50],0x0
    49b2:	74 11                	je     49c5 <ip4_tcp_decode+0x5b4>
    49b4:	83 7d b4 02          	cmp    DWORD PTR [rbp-0x4c],0x2
    49b8:	75 0b                	jne    49c5 <ip4_tcp_decode+0x5b4>
    49ba:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    49be:	c7 40 70 01 00 00 00 	mov    DWORD PTR [rax+0x70],0x1
    49c5:	80 7d af 00          	cmp    BYTE PTR [rbp-0x51],0x0
    49c9:	0f 84 95 01 00 00    	je     4b64 <ip4_tcp_decode+0x753>
    49cf:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    49d3:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    49d7:	48 89 c7             	mov    rdi,rax
    49da:	e8 5d 30 00 00       	call   7a3c <member_exists>
    49df:	89 45 c0             	mov    DWORD PTR [rbp-0x40],eax
    49e2:	83 7d c0 ff          	cmp    DWORD PTR [rbp-0x40],0xffffffff
    49e6:	0f 84 de 00 00 00    	je     4aca <ip4_tcp_decode+0x6b9>
    49ec:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    49ef:	48 63 d0             	movsxd rdx,eax
    49f2:	48 89 d0             	mov    rax,rdx
    49f5:	48 c1 e0 02          	shl    rax,0x2
    49f9:	48 01 d0             	add    rax,rdx
    49fc:	48 c1 e0 03          	shl    rax,0x3
    4a00:	48 01 d0             	add    rax,rdx
    4a03:	48 c1 e0 04          	shl    rax,0x4
    4a07:	48 8d 15 92 e6 0e 00 	lea    rdx,[rip+0xee692]        # f30a0 <watchlist>
    4a0e:	48 01 d0             	add    rax,rdx
    4a11:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    4a15:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4a19:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4a1d:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    4a21:	48 83 c2 08          	add    rdx,0x8
    4a25:	48 89 c6             	mov    rsi,rax
    4a28:	48 89 d7             	mov    rdi,rdx
    4a2b:	e8 c0 da ff ff       	call   24f0 <strcpy@plt>
    4a30:	bf 00 00 00 00       	mov    edi,0x0
    4a35:	e8 c6 dc ff ff       	call   2700 <time@plt>
    4a3a:	48 89 c2             	mov    rdx,rax
    4a3d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4a41:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    4a47:	8d 70 01             	lea    esi,[rax+0x1]
    4a4a:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    4a4e:	89 b1 48 01 00 00    	mov    DWORD PTR [rcx+0x148],esi
    4a54:	48 89 d1             	mov    rcx,rdx
    4a57:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    4a5b:	89 c0                	mov    eax,eax
    4a5d:	48 83 c0 28          	add    rax,0x28
    4a61:	48 89 4c c2 10       	mov    QWORD PTR [rdx+rax*8+0x10],rcx
    4a66:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4a6a:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    4a70:	83 f8 1d             	cmp    eax,0x1d
    4a73:	0f 86 eb 00 00 00    	jbe    4b64 <ip4_tcp_decode+0x753>
    4a79:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4a7d:	c7 80 48 01 00 00 1e 	mov    DWORD PTR [rax+0x148],0x1e
    4a84:	00 00 00 
    4a87:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4a8b:	48 89 c7             	mov    rdi,rax
    4a8e:	e8 67 2b 00 00       	call   75fa <tcp_rst_portscan_detect>
    4a93:	84 c0                	test   al,al
    4a95:	0f 84 c9 00 00 00    	je     4b64 <ip4_tcp_decode+0x753>
    4a9b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4a9f:	c7 80 48 01 00 00 00 	mov    DWORD PTR [rax+0x148],0x0
    4aa6:	00 00 00 
    4aa9:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4aad:	48 05 50 01 00 00    	add    rax,0x150
    4ab3:	ba f0 00 00 00       	mov    edx,0xf0
    4ab8:	be 00 00 00 00       	mov    esi,0x0
    4abd:	48 89 c7             	mov    rdi,rax
    4ac0:	e8 6b db ff ff       	call   2630 <memset@plt>
    4ac5:	e9 9a 00 00 00       	jmp    4b64 <ip4_tcp_decode+0x753>
    4aca:	8b 05 48 c5 00 00    	mov    eax,DWORD PTR [rip+0xc548]        # 11018 <watchlist_num>
    4ad0:	83 c0 01             	add    eax,0x1
    4ad3:	89 05 3f c5 00 00    	mov    DWORD PTR [rip+0xc53f],eax        # 11018 <watchlist_num>
    4ad9:	8b 05 39 c5 00 00    	mov    eax,DWORD PTR [rip+0xc539]        # 11018 <watchlist_num>
    4adf:	48 63 d0             	movsxd rdx,eax
    4ae2:	48 89 d0             	mov    rax,rdx
    4ae5:	48 c1 e0 02          	shl    rax,0x2
    4ae9:	48 01 d0             	add    rax,rdx
    4aec:	48 c1 e0 03          	shl    rax,0x3
    4af0:	48 01 d0             	add    rax,rdx
    4af3:	48 c1 e0 04          	shl    rax,0x4
    4af7:	48 8d 15 a2 e5 0e 00 	lea    rdx,[rip+0xee5a2]        # f30a0 <watchlist>
    4afe:	48 01 d0             	add    rax,rdx
    4b01:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    4b05:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4b09:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4b0d:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    4b11:	48 83 c2 08          	add    rdx,0x8
    4b15:	48 89 c6             	mov    rsi,rax
    4b18:	48 89 d7             	mov    rdi,rdx
    4b1b:	e8 d0 d9 ff ff       	call   24f0 <strcpy@plt>
    4b20:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b24:	c7 80 48 01 00 00 00 	mov    DWORD PTR [rax+0x148],0x0
    4b2b:	00 00 00 
    4b2e:	bf 00 00 00 00       	mov    edi,0x0
    4b33:	e8 c8 db ff ff       	call   2700 <time@plt>
    4b38:	48 89 c2             	mov    rdx,rax
    4b3b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b3f:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    4b45:	8d 70 01             	lea    esi,[rax+0x1]
    4b48:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    4b4c:	89 b1 48 01 00 00    	mov    DWORD PTR [rcx+0x148],esi
    4b52:	48 89 d1             	mov    rcx,rdx
    4b55:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    4b59:	89 c0                	mov    eax,eax
    4b5b:	48 83 c0 28          	add    rax,0x28
    4b5f:	48 89 4c c2 10       	mov    QWORD PTR [rdx+rax*8+0x10],rcx
    4b64:	8b 05 9e 31 10 00    	mov    eax,DWORD PTR [rip+0x10319e]        # 107d08 <strict_nmap_host_alive_check>
    4b6a:	83 f8 01             	cmp    eax,0x1
    4b6d:	0f 85 f6 00 00 00    	jne    4c69 <ip4_tcp_decode+0x858>
    4b73:	80 7d b0 00          	cmp    BYTE PTR [rbp-0x50],0x0
    4b77:	74 0c                	je     4b85 <ip4_tcp_decode+0x774>
    4b79:	83 7d b8 50          	cmp    DWORD PTR [rbp-0x48],0x50
    4b7d:	74 26                	je     4ba5 <ip4_tcp_decode+0x794>
    4b7f:	83 7d bc 50          	cmp    DWORD PTR [rbp-0x44],0x50
    4b83:	74 20                	je     4ba5 <ip4_tcp_decode+0x794>
    4b85:	80 7d b1 00          	cmp    BYTE PTR [rbp-0x4f],0x0
    4b89:	0f 84 da 00 00 00    	je     4c69 <ip4_tcp_decode+0x858>
    4b8f:	81 7d b8 bb 01 00 00 	cmp    DWORD PTR [rbp-0x48],0x1bb
    4b96:	74 0d                	je     4ba5 <ip4_tcp_decode+0x794>
    4b98:	81 7d bc bb 01 00 00 	cmp    DWORD PTR [rbp-0x44],0x1bb
    4b9f:	0f 85 c4 00 00 00    	jne    4c69 <ip4_tcp_decode+0x858>
    4ba5:	8b 45 b8             	mov    eax,DWORD PTR [rbp-0x48]
    4ba8:	3b 45 bc             	cmp    eax,DWORD PTR [rbp-0x44]
    4bab:	76 0a                	jbe    4bb7 <ip4_tcp_decode+0x7a6>
    4bad:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4bb1:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    4bb5:	eb 08                	jmp    4bbf <ip4_tcp_decode+0x7ae>
    4bb7:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4bbb:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    4bbf:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4bc3:	48 89 c7             	mov    rdi,rax
    4bc6:	e8 71 2e 00 00       	call   7a3c <member_exists>
    4bcb:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    4bce:	83 7d c4 ff          	cmp    DWORD PTR [rbp-0x3c],0xffffffff
    4bd2:	0f 84 91 00 00 00    	je     4c69 <ip4_tcp_decode+0x858>
    4bd8:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    4bdb:	48 63 d0             	movsxd rdx,eax
    4bde:	48 89 d0             	mov    rax,rdx
    4be1:	48 c1 e0 02          	shl    rax,0x2
    4be5:	48 01 d0             	add    rax,rdx
    4be8:	48 c1 e0 03          	shl    rax,0x3
    4bec:	48 01 d0             	add    rax,rdx
    4bef:	48 c1 e0 04          	shl    rax,0x4
    4bf3:	48 8d 15 a6 e4 0e 00 	lea    rdx,[rip+0xee4a6]        # f30a0 <watchlist>
    4bfa:	48 01 d0             	add    rax,rdx
    4bfd:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4c01:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4c05:	8b 40 34             	mov    eax,DWORD PTR [rax+0x34]
    4c08:	85 c0                	test   eax,eax
    4c0a:	75 2a                	jne    4c36 <ip4_tcp_decode+0x825>
    4c0c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4c10:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4c13:	83 f8 01             	cmp    eax,0x1
    4c16:	75 1e                	jne    4c36 <ip4_tcp_decode+0x825>
    4c18:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4c1c:	c7 40 34 01 00 00 00 	mov    DWORD PTR [rax+0x34],0x1
    4c23:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4c27:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4c2a:	8d 50 01             	lea    edx,[rax+0x1]
    4c2d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4c31:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    4c34:	eb 33                	jmp    4c69 <ip4_tcp_decode+0x858>
    4c36:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4c3a:	8b 40 38             	mov    eax,DWORD PTR [rax+0x38]
    4c3d:	85 c0                	test   eax,eax
    4c3f:	75 28                	jne    4c69 <ip4_tcp_decode+0x858>
    4c41:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4c45:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4c48:	83 f8 02             	cmp    eax,0x2
    4c4b:	75 1c                	jne    4c69 <ip4_tcp_decode+0x858>
    4c4d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4c51:	c7 40 38 01 00 00 00 	mov    DWORD PTR [rax+0x38],0x1
    4c58:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4c5c:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4c5f:	8d 50 01             	lea    edx,[rax+0x1]
    4c62:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4c66:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    4c69:	0f b6 05 e9 30 10 00 	movzx  eax,BYTE PTR [rip+0x1030e9]        # 107d59 <packet_print>
    4c70:	84 c0                	test   al,al
    4c72:	74 3a                	je     4cae <ip4_tcp_decode+0x89d>
    4c74:	80 7d b3 00          	cmp    BYTE PTR [rbp-0x4d],0x0
    4c78:	74 34                	je     4cae <ip4_tcp_decode+0x89d>
    4c7a:	80 7d b0 00          	cmp    BYTE PTR [rbp-0x50],0x0
    4c7e:	74 2e                	je     4cae <ip4_tcp_decode+0x89d>
    4c80:	0f b6 45 b2          	movzx  eax,BYTE PTR [rbp-0x4e]
    4c84:	83 f0 01             	xor    eax,0x1
    4c87:	84 c0                	test   al,al
    4c89:	74 23                	je     4cae <ip4_tcp_decode+0x89d>
    4c8b:	83 7d b8 50          	cmp    DWORD PTR [rbp-0x48],0x50
    4c8f:	74 06                	je     4c97 <ip4_tcp_decode+0x886>
    4c91:	83 7d bc 50          	cmp    DWORD PTR [rbp-0x44],0x50
    4c95:	75 17                	jne    4cae <ip4_tcp_decode+0x89d>
    4c97:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    4c9b:	48 8d 50 42          	lea    rdx,[rax+0x42]
    4c9f:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4ca3:	48 89 c6             	mov    rsi,rax
    4ca6:	48 89 d7             	mov    rdi,rdx
    4ca9:	e8 06 3a 00 00       	call   86b4 <http_disect>
    4cae:	83 7d b8 15          	cmp    DWORD PTR [rbp-0x48],0x15
    4cb2:	74 06                	je     4cba <ip4_tcp_decode+0x8a9>
    4cb4:	83 7d bc 15          	cmp    DWORD PTR [rbp-0x44],0x15
    4cb8:	75 2d                	jne    4ce7 <ip4_tcp_decode+0x8d6>
    4cba:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4cbe:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    4cc2:	c0 e8 04             	shr    al,0x4
    4cc5:	0f b6 c0             	movzx  eax,al
    4cc8:	c1 e0 02             	shl    eax,0x2
    4ccb:	48 98                	cdqe   
    4ccd:	48 8d 50 22          	lea    rdx,[rax+0x22]
    4cd1:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    4cd5:	48 01 c2             	add    rdx,rax
    4cd8:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4cdc:	48 89 c6             	mov    rsi,rax
    4cdf:	48 89 d7             	mov    rdi,rdx
    4ce2:	e8 d0 3b 00 00       	call   88b7 <ftp_disect>
    4ce7:	81 7d b8 bb 01 00 00 	cmp    DWORD PTR [rbp-0x48],0x1bb
    4cee:	74 09                	je     4cf9 <ip4_tcp_decode+0x8e8>
    4cf0:	81 7d bc bb 01 00 00 	cmp    DWORD PTR [rbp-0x44],0x1bb
    4cf7:	75 26                	jne    4d1f <ip4_tcp_decode+0x90e>
    4cf9:	80 7d b3 00          	cmp    BYTE PTR [rbp-0x4d],0x0
    4cfd:	74 20                	je     4d1f <ip4_tcp_decode+0x90e>
    4cff:	80 7d b0 00          	cmp    BYTE PTR [rbp-0x50],0x0
    4d03:	74 1a                	je     4d1f <ip4_tcp_decode+0x90e>
    4d05:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4d09:	48 8b 00             	mov    rax,QWORD PTR [rax]
    4d0c:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
    4d10:	48 8b 4d 90          	mov    rcx,QWORD PTR [rbp-0x70]
    4d14:	48 89 ce             	mov    rsi,rcx
    4d17:	48 89 c7             	mov    rdi,rax
    4d1a:	e8 55 33 00 00       	call   8074 <tls_decode>
    4d1f:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    4d23:	8b 50 14             	mov    edx,DWORD PTR [rax+0x14]
    4d26:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4d2a:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    4d2e:	c0 e8 04             	shr    al,0x4
    4d31:	0f b6 c0             	movzx  eax,al
    4d34:	c1 e0 02             	shl    eax,0x2
    4d37:	29 c2                	sub    edx,eax
    4d39:	89 d0                	mov    eax,edx
    4d3b:	8d 50 de             	lea    edx,[rax-0x22]
    4d3e:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4d42:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    4d45:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4d49:	48 89 c7             	mov    rdi,rax
    4d4c:	e8 97 17 00 00       	call   64e8 <rulemgr>
    4d51:	90                   	nop
    4d52:	c9                   	leave  
    4d53:	c3                   	ret    

0000000000004d54 <ip4_udp_decode>:
    4d54:	f3 0f 1e fa          	endbr64 
    4d58:	55                   	push   rbp
    4d59:	48 89 e5             	mov    rbp,rsp
    4d5c:	48 83 ec 30          	sub    rsp,0x30
    4d60:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    4d64:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    4d68:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    4d6c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4d70:	48 83 c0 22          	add    rax,0x22
    4d74:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4d78:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4d7c:	48 8d 50 2a          	lea    rdx,[rax+0x2a]
    4d80:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d84:	48 89 10             	mov    QWORD PTR [rax],rdx
    4d87:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d8b:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    4d8f:	ba 5d 00 00 00       	mov    edx,0x5d
    4d94:	be 01 00 00 00       	mov    esi,0x1
    4d99:	48 89 c7             	mov    rdi,rax
    4d9c:	e8 07 02 00 00       	call   4fa8 <add_ip_addr_or_inc_counter>
    4da1:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4da5:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4da9:	ba 5d 00 00 00       	mov    edx,0x5d
    4dae:	be 00 00 00 00       	mov    esi,0x0
    4db3:	48 89 c7             	mov    rdi,rax
    4db6:	e8 ed 01 00 00       	call   4fa8 <add_ip_addr_or_inc_counter>
    4dbb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4dbf:	0f b7 00             	movzx  eax,WORD PTR [rax]
    4dc2:	0f b7 c0             	movzx  eax,ax
    4dc5:	89 c7                	mov    edi,eax
    4dc7:	e8 b4 d9 ff ff       	call   2780 <ntohs@plt>
    4dcc:	0f b7 c0             	movzx  eax,ax
    4dcf:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
    4dd2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4dd6:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    4dda:	0f b7 c0             	movzx  eax,ax
    4ddd:	89 c7                	mov    edi,eax
    4ddf:	e8 9c d9 ff ff       	call   2780 <ntohs@plt>
    4de4:	0f b7 c0             	movzx  eax,ax
    4de7:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    4dea:	0f b6 05 68 2f 10 00 	movzx  eax,BYTE PTR [rip+0x102f68]        # 107d59 <packet_print>
    4df1:	84 c0                	test   al,al
    4df3:	74 5d                	je     4e52 <ip4_udp_decode+0xfe>
    4df5:	48 8d 35 24 7c 00 00 	lea    rsi,[rip+0x7c24]        # ca20 <_IO_stdin_used+0xa20>
    4dfc:	48 8d 3d 23 7c 00 00 	lea    rdi,[rip+0x7c23]        # ca26 <_IO_stdin_used+0xa26>
    4e03:	b8 00 00 00 00       	mov    eax,0x0
    4e08:	e8 e3 d7 ff ff       	call   25f0 <printf@plt>
    4e0d:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e11:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    4e15:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e19:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    4e1d:	8b 75 f4             	mov    esi,DWORD PTR [rbp-0xc]
    4e20:	8b 55 f0             	mov    edx,DWORD PTR [rbp-0x10]
    4e23:	41 89 f0             	mov    r8d,esi
    4e26:	48 89 c6             	mov    rsi,rax
    4e29:	48 8d 3d f9 7b 00 00 	lea    rdi,[rip+0x7bf9]        # ca29 <_IO_stdin_used+0xa29>
    4e30:	b8 00 00 00 00       	mov    eax,0x0
    4e35:	e8 b6 d7 ff ff       	call   25f0 <printf@plt>
    4e3a:	48 8d 35 01 7c 00 00 	lea    rsi,[rip+0x7c01]        # ca42 <_IO_stdin_used+0xa42>
    4e41:	48 8d 3d de 7b 00 00 	lea    rdi,[rip+0x7bde]        # ca26 <_IO_stdin_used+0xa26>
    4e48:	b8 00 00 00 00       	mov    eax,0x0
    4e4d:	e8 9e d7 ff ff       	call   25f0 <printf@plt>
    4e52:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e56:	8b 55 f0             	mov    edx,DWORD PTR [rbp-0x10]
    4e59:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    4e5c:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e60:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
    4e63:	89 50 28             	mov    DWORD PTR [rax+0x28],edx
    4e66:	83 7d f0 35          	cmp    DWORD PTR [rbp-0x10],0x35
    4e6a:	74 06                	je     4e72 <ip4_udp_decode+0x11e>
    4e6c:	83 7d f4 35          	cmp    DWORD PTR [rbp-0xc],0x35
    4e70:	75 17                	jne    4e89 <ip4_udp_decode+0x135>
    4e72:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4e76:	48 8d 50 2b          	lea    rdx,[rax+0x2b]
    4e7a:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e7e:	48 89 c6             	mov    rsi,rax
    4e81:	48 89 d7             	mov    rdi,rdx
    4e84:	e8 dd 38 00 00       	call   8766 <dns_disect>
    4e89:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4e8d:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    4e90:	8d 50 d6             	lea    edx,[rax-0x2a]
    4e93:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e97:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    4e9a:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e9e:	48 89 c7             	mov    rdi,rax
    4ea1:	e8 42 16 00 00       	call   64e8 <rulemgr>
    4ea6:	90                   	nop
    4ea7:	c9                   	leave  
    4ea8:	c3                   	ret    

0000000000004ea9 <ip4_igmp_decode>:
    4ea9:	f3 0f 1e fa          	endbr64 
    4ead:	55                   	push   rbp
    4eae:	48 89 e5             	mov    rbp,rsp
    4eb1:	48 83 ec 60          	sub    rsp,0x60
    4eb5:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    4eb9:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
    4ebd:	48 89 55 a8          	mov    QWORD PTR [rbp-0x58],rdx
    4ec1:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4ec8:	00 00 
    4eca:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4ece:	31 c0                	xor    eax,eax
    4ed0:	0f b6 05 82 2e 10 00 	movzx  eax,BYTE PTR [rip+0x102e82]        # 107d59 <packet_print>
    4ed7:	84 c0                	test   al,al
    4ed9:	0f 84 b1 00 00 00    	je     4f90 <ip4_igmp_decode+0xe7>
    4edf:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4ee3:	48 83 c0 26          	add    rax,0x26
    4ee7:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    4eeb:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    4eef:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    4ef3:	48 89 c6             	mov    rsi,rax
    4ef6:	48 8d 3d 4b 7b 00 00 	lea    rdi,[rip+0x7b4b]        # ca48 <_IO_stdin_used+0xa48>
    4efd:	b8 00 00 00 00       	mov    eax,0x0
    4f02:	e8 e9 d6 ff ff       	call   25f0 <printf@plt>
    4f07:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4f0b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4f0e:	0f b6 c0             	movzx  eax,al
    4f11:	83 f8 11             	cmp    eax,0x11
    4f14:	74 07                	je     4f1d <ip4_igmp_decode+0x74>
    4f16:	83 f8 22             	cmp    eax,0x22
    4f19:	74 10                	je     4f2b <ip4_igmp_decode+0x82>
    4f1b:	eb 54                	jmp    4f71 <ip4_igmp_decode+0xc8>
    4f1d:	48 8d 3d 39 7b 00 00 	lea    rdi,[rip+0x7b39]        # ca5d <_IO_stdin_used+0xa5d>
    4f24:	e8 f7 d5 ff ff       	call   2520 <puts@plt>
    4f29:	eb 66                	jmp    4f91 <ip4_igmp_decode+0xe8>
    4f2b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4f2f:	48 83 c0 26          	add    rax,0x26
    4f33:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    4f37:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4f3b:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    4f3e:	89 c7                	mov    edi,eax
    4f40:	e8 fb e1 ff ff       	call   3140 <ipv4_ntoa>
    4f45:	48 89 c2             	mov    rdx,rax
    4f48:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    4f4c:	48 89 d6             	mov    rsi,rdx
    4f4f:	48 89 c7             	mov    rdi,rax
    4f52:	e8 99 d5 ff ff       	call   24f0 <strcpy@plt>
    4f57:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    4f5b:	48 89 c6             	mov    rsi,rax
    4f5e:	48 8d 3d 13 7b 00 00 	lea    rdi,[rip+0x7b13]        # ca78 <_IO_stdin_used+0xa78>
    4f65:	b8 00 00 00 00       	mov    eax,0x0
    4f6a:	e8 81 d6 ff ff       	call   25f0 <printf@plt>
    4f6f:	eb 20                	jmp    4f91 <ip4_igmp_decode+0xe8>
    4f71:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4f75:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4f78:	0f b6 c0             	movzx  eax,al
    4f7b:	89 c6                	mov    esi,eax
    4f7d:	48 8d 3d 2a 7b 00 00 	lea    rdi,[rip+0x7b2a]        # caae <_IO_stdin_used+0xaae>
    4f84:	b8 00 00 00 00       	mov    eax,0x0
    4f89:	e8 62 d6 ff ff       	call   25f0 <printf@plt>
    4f8e:	eb 01                	jmp    4f91 <ip4_igmp_decode+0xe8>
    4f90:	90                   	nop
    4f91:	90                   	nop
    4f92:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4f96:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    4f9d:	00 00 
    4f9f:	74 05                	je     4fa6 <ip4_igmp_decode+0xfd>
    4fa1:	e8 0a d6 ff ff       	call   25b0 <__stack_chk_fail@plt>
    4fa6:	c9                   	leave  
    4fa7:	c3                   	ret    

0000000000004fa8 <add_ip_addr_or_inc_counter>:
    4fa8:	f3 0f 1e fa          	endbr64 
    4fac:	55                   	push   rbp
    4fad:	48 89 e5             	mov    rbp,rsp
    4fb0:	48 83 ec 60          	sub    rsp,0x60
    4fb4:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    4fb8:	89 f0                	mov    eax,esi
    4fba:	89 55 a0             	mov    DWORD PTR [rbp-0x60],edx
    4fbd:	88 45 a4             	mov    BYTE PTR [rbp-0x5c],al
    4fc0:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4fc7:	00 00 
    4fc9:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4fcd:	31 c0                	xor    eax,eax
    4fcf:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4fd3:	ba 08 00 00 00       	mov    edx,0x8
    4fd8:	be 00 00 00 00       	mov    esi,0x0
    4fdd:	48 89 c7             	mov    rdi,rax
    4fe0:	e8 4b d6 ff ff       	call   2630 <memset@plt>
    4fe5:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    4fe9:	ba 1c 00 00 00       	mov    edx,0x1c
    4fee:	be 00 00 00 00       	mov    esi,0x0
    4ff3:	48 89 c7             	mov    rdi,rax
    4ff6:	e8 35 d6 ff ff       	call   2630 <memset@plt>
    4ffb:	48 8b 4d a8          	mov    rcx,QWORD PTR [rbp-0x58]
    4fff:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    5003:	ba 18 00 00 00       	mov    edx,0x18
    5008:	48 89 ce             	mov    rsi,rcx
    500b:	48 89 c7             	mov    rdi,rax
    500e:	e8 bd d4 ff ff       	call   24d0 <strncpy@plt>
    5013:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    5017:	ba 1c 00 00 00       	mov    edx,0x1c
    501c:	be 00 00 00 00       	mov    esi,0x0
    5021:	48 89 c7             	mov    rdi,rax
    5024:	e8 07 d6 ff ff       	call   2630 <memset@plt>
    5029:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    502d:	48 8d 55 c0          	lea    rdx,[rbp-0x40]
    5031:	48 83 c2 08          	add    rdx,0x8
    5035:	48 89 c6             	mov    rsi,rax
    5038:	48 89 d7             	mov    rdi,rdx
    503b:	e8 b0 d4 ff ff       	call   24f0 <strcpy@plt>
    5040:	0f b6 45 a4          	movzx  eax,BYTE PTR [rbp-0x5c]
    5044:	88 45 c0             	mov    BYTE PTR [rbp-0x40],al
    5047:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    504a:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    504d:	48 8d 55 c0          	lea    rdx,[rbp-0x40]
    5051:	48 8d 45 b8          	lea    rax,[rbp-0x48]
    5055:	48 89 d1             	mov    rcx,rdx
    5058:	48 8d 15 35 00 00 00 	lea    rdx,[rip+0x35]        # 5094 <verify_ip_addr>
    505f:	be 00 00 00 00       	mov    esi,0x0
    5064:	48 89 c7             	mov    rdi,rax
    5067:	e8 44 d4 ff ff       	call   24b0 <pthread_create@plt>
    506c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5070:	be 00 00 00 00       	mov    esi,0x0
    5075:	48 89 c7             	mov    rdi,rax
    5078:	e8 63 d7 ff ff       	call   27e0 <pthread_join@plt>
    507d:	90                   	nop
    507e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5082:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    5089:	00 00 
    508b:	74 05                	je     5092 <add_ip_addr_or_inc_counter+0xea>
    508d:	e8 1e d5 ff ff       	call   25b0 <__stack_chk_fail@plt>
    5092:	c9                   	leave  
    5093:	c3                   	ret    

0000000000005094 <verify_ip_addr>:
    5094:	f3 0f 1e fa          	endbr64 
    5098:	55                   	push   rbp
    5099:	48 89 e5             	mov    rbp,rsp
    509c:	48 83 ec 30          	sub    rsp,0x30
    50a0:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    50a4:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    50a8:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    50ac:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
    50b3:	e9 c9 00 00 00       	jmp    5181 <verify_ip_addr+0xed>
    50b8:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    50bb:	48 63 d0             	movsxd rdx,eax
    50be:	48 89 d0             	mov    rax,rdx
    50c1:	48 c1 e0 02          	shl    rax,0x2
    50c5:	48 01 d0             	add    rax,rdx
    50c8:	48 c1 e0 03          	shl    rax,0x3
    50cc:	48 01 d0             	add    rax,rdx
    50cf:	48 c1 e0 04          	shl    rax,0x4
    50d3:	48 8d 15 c6 df 0e 00 	lea    rdx,[rip+0xedfc6]        # f30a0 <watchlist>
    50da:	48 01 d0             	add    rax,rdx
    50dd:	48 8d 50 08          	lea    rdx,[rax+0x8]
    50e1:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    50e5:	48 83 c0 08          	add    rax,0x8
    50e9:	48 89 d6             	mov    rsi,rdx
    50ec:	48 89 c7             	mov    rdi,rax
    50ef:	e8 bc d5 ff ff       	call   26b0 <strcmp@plt>
    50f4:	85 c0                	test   eax,eax
    50f6:	0f 85 81 00 00 00    	jne    517d <verify_ip_addr+0xe9>
    50fc:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    50ff:	48 63 d0             	movsxd rdx,eax
    5102:	48 89 d0             	mov    rax,rdx
    5105:	48 c1 e0 02          	shl    rax,0x2
    5109:	48 01 d0             	add    rax,rdx
    510c:	48 c1 e0 03          	shl    rax,0x3
    5110:	48 01 d0             	add    rax,rdx
    5113:	48 c1 e0 04          	shl    rax,0x4
    5117:	48 89 c2             	mov    rdx,rax
    511a:	48 8d 05 d7 e1 0e 00 	lea    rax,[rip+0xee1d7]        # f32f8 <watchlist+0x258>
    5121:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    5124:	8d 48 01             	lea    ecx,[rax+0x1]
    5127:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    512a:	48 63 d0             	movsxd rdx,eax
    512d:	48 89 d0             	mov    rax,rdx
    5130:	48 c1 e0 02          	shl    rax,0x2
    5134:	48 01 d0             	add    rax,rdx
    5137:	48 c1 e0 03          	shl    rax,0x3
    513b:	48 01 d0             	add    rax,rdx
    513e:	48 c1 e0 04          	shl    rax,0x4
    5142:	48 89 c2             	mov    rdx,rax
    5145:	48 8d 05 ac e1 0e 00 	lea    rax,[rip+0xee1ac]        # f32f8 <watchlist+0x258>
    514c:	89 0c 02             	mov    DWORD PTR [rdx+rax*1],ecx
    514f:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    5152:	48 63 d0             	movsxd rdx,eax
    5155:	48 89 d0             	mov    rax,rdx
    5158:	48 c1 e0 02          	shl    rax,0x2
    515c:	48 01 d0             	add    rax,rdx
    515f:	48 c1 e0 03          	shl    rax,0x3
    5163:	48 01 d0             	add    rax,rdx
    5166:	48 c1 e0 04          	shl    rax,0x4
    516a:	48 8d 15 2f df 0e 00 	lea    rdx,[rip+0xedf2f]        # f30a0 <watchlist>
    5171:	48 01 d0             	add    rax,rdx
    5174:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    5178:	e9 f5 00 00 00       	jmp    5272 <verify_ip_addr+0x1de>
    517d:	83 45 e4 01          	add    DWORD PTR [rbp-0x1c],0x1
    5181:	8b 05 91 be 00 00    	mov    eax,DWORD PTR [rip+0xbe91]        # 11018 <watchlist_num>
    5187:	39 45 e4             	cmp    DWORD PTR [rbp-0x1c],eax
    518a:	0f 8e 28 ff ff ff    	jle    50b8 <verify_ip_addr+0x24>
    5190:	bf 90 02 00 00       	mov    edi,0x290
    5195:	e8 a6 d5 ff ff       	call   2740 <malloc@plt>
    519a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    519e:	8b 05 74 be 00 00    	mov    eax,DWORD PTR [rip+0xbe74]        # 11018 <watchlist_num>
    51a4:	83 c0 01             	add    eax,0x1
    51a7:	89 05 6b be 00 00    	mov    DWORD PTR [rip+0xbe6b],eax        # 11018 <watchlist_num>
    51ad:	8b 05 65 be 00 00    	mov    eax,DWORD PTR [rip+0xbe65]        # 11018 <watchlist_num>
    51b3:	48 63 d0             	movsxd rdx,eax
    51b6:	48 89 d0             	mov    rax,rdx
    51b9:	48 c1 e0 02          	shl    rax,0x2
    51bd:	48 01 d0             	add    rax,rdx
    51c0:	48 c1 e0 03          	shl    rax,0x3
    51c4:	48 01 d0             	add    rax,rdx
    51c7:	48 c1 e0 04          	shl    rax,0x4
    51cb:	48 89 c1             	mov    rcx,rax
    51ce:	48 8d 05 cb de 0e 00 	lea    rax,[rip+0xedecb]        # f30a0 <watchlist>
    51d5:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    51d9:	48 01 c8             	add    rax,rcx
    51dc:	48 89 d6             	mov    rsi,rdx
    51df:	ba 52 00 00 00       	mov    edx,0x52
    51e4:	48 89 c7             	mov    rdi,rax
    51e7:	48 89 d1             	mov    rcx,rdx
    51ea:	f3 48 a5             	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
    51ed:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    51f1:	48 83 c0 08          	add    rax,0x8
    51f5:	ba 0f 00 00 00       	mov    edx,0xf
    51fa:	be 00 00 00 00       	mov    esi,0x0
    51ff:	48 89 c7             	mov    rdi,rax
    5202:	e8 29 d4 ff ff       	call   2630 <memset@plt>
    5207:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    520b:	48 8d 48 08          	lea    rcx,[rax+0x8]
    520f:	8b 05 03 be 00 00    	mov    eax,DWORD PTR [rip+0xbe03]        # 11018 <watchlist_num>
    5215:	48 63 d0             	movsxd rdx,eax
    5218:	48 89 d0             	mov    rax,rdx
    521b:	48 c1 e0 02          	shl    rax,0x2
    521f:	48 01 d0             	add    rax,rdx
    5222:	48 c1 e0 03          	shl    rax,0x3
    5226:	48 01 d0             	add    rax,rdx
    5229:	48 c1 e0 04          	shl    rax,0x4
    522d:	48 8d 15 6c de 0e 00 	lea    rdx,[rip+0xede6c]        # f30a0 <watchlist>
    5234:	48 01 d0             	add    rax,rdx
    5237:	48 83 c0 08          	add    rax,0x8
    523b:	48 89 ce             	mov    rsi,rcx
    523e:	48 89 c7             	mov    rdi,rax
    5241:	e8 aa d2 ff ff       	call   24f0 <strcpy@plt>
    5246:	8b 05 cc bd 00 00    	mov    eax,DWORD PTR [rip+0xbdcc]        # 11018 <watchlist_num>
    524c:	48 63 d0             	movsxd rdx,eax
    524f:	48 89 d0             	mov    rax,rdx
    5252:	48 c1 e0 02          	shl    rax,0x2
    5256:	48 01 d0             	add    rax,rdx
    5259:	48 c1 e0 03          	shl    rax,0x3
    525d:	48 01 d0             	add    rax,rdx
    5260:	48 c1 e0 04          	shl    rax,0x4
    5264:	48 8d 15 35 de 0e 00 	lea    rdx,[rip+0xede35]        # f30a0 <watchlist>
    526b:	48 01 d0             	add    rax,rdx
    526e:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    5272:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5276:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5279:	84 c0                	test   al,al
    527b:	74 36                	je     52b3 <verify_ip_addr+0x21f>
    527d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5281:	8b 80 80 02 00 00    	mov    eax,DWORD PTR [rax+0x280]
    5287:	8d 50 01             	lea    edx,[rax+0x1]
    528a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    528e:	89 90 80 02 00 00    	mov    DWORD PTR [rax+0x280],edx
    5294:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5298:	8b 90 88 02 00 00    	mov    edx,DWORD PTR [rax+0x288]
    529e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    52a2:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    52a5:	01 c2                	add    edx,eax
    52a7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52ab:	89 90 88 02 00 00    	mov    DWORD PTR [rax+0x288],edx
    52b1:	eb 34                	jmp    52e7 <verify_ip_addr+0x253>
    52b3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52b7:	8b 80 7c 02 00 00    	mov    eax,DWORD PTR [rax+0x27c]
    52bd:	8d 50 01             	lea    edx,[rax+0x1]
    52c0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52c4:	89 90 7c 02 00 00    	mov    DWORD PTR [rax+0x27c],edx
    52ca:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52ce:	8b 90 84 02 00 00    	mov    edx,DWORD PTR [rax+0x284]
    52d4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    52d8:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    52db:	01 c2                	add    edx,eax
    52dd:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52e1:	89 90 84 02 00 00    	mov    DWORD PTR [rax+0x284],edx
    52e7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52eb:	8b 90 8c 02 00 00    	mov    edx,DWORD PTR [rax+0x28c]
    52f1:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    52f5:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    52f8:	01 c2                	add    edx,eax
    52fa:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52fe:	89 90 8c 02 00 00    	mov    DWORD PTR [rax+0x28c],edx
    5304:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5308:	8b 80 7c 02 00 00    	mov    eax,DWORD PTR [rax+0x27c]
    530e:	8d 14 00             	lea    edx,[rax+rax*1]
    5311:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5315:	89 90 58 02 00 00    	mov    DWORD PTR [rax+0x258],edx
    531b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    531f:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    5322:	83 f8 5e             	cmp    eax,0x5e
    5325:	0f 84 9b 00 00 00    	je     53c6 <verify_ip_addr+0x332>
    532b:	83 f8 5e             	cmp    eax,0x5e
    532e:	0f 8f cf 00 00 00    	jg     5403 <verify_ip_addr+0x36f>
    5334:	83 f8 5c             	cmp    eax,0x5c
    5337:	74 0a                	je     5343 <verify_ip_addr+0x2af>
    5339:	83 f8 5d             	cmp    eax,0x5d
    533c:	74 48                	je     5386 <verify_ip_addr+0x2f2>
    533e:	e9 c0 00 00 00       	jmp    5403 <verify_ip_addr+0x36f>
    5343:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5347:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    534a:	84 c0                	test   al,al
    534c:	74 1c                	je     536a <verify_ip_addr+0x2d6>
    534e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5352:	8b 80 5c 02 00 00    	mov    eax,DWORD PTR [rax+0x25c]
    5358:	8d 50 01             	lea    edx,[rax+0x1]
    535b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    535f:	89 90 5c 02 00 00    	mov    DWORD PTR [rax+0x25c],edx
    5365:	e9 d5 00 00 00       	jmp    543f <verify_ip_addr+0x3ab>
    536a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    536e:	8b 80 68 02 00 00    	mov    eax,DWORD PTR [rax+0x268]
    5374:	8d 50 01             	lea    edx,[rax+0x1]
    5377:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    537b:	89 90 68 02 00 00    	mov    DWORD PTR [rax+0x268],edx
    5381:	e9 b9 00 00 00       	jmp    543f <verify_ip_addr+0x3ab>
    5386:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    538a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    538d:	84 c0                	test   al,al
    538f:	74 1c                	je     53ad <verify_ip_addr+0x319>
    5391:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5395:	8b 80 60 02 00 00    	mov    eax,DWORD PTR [rax+0x260]
    539b:	8d 50 01             	lea    edx,[rax+0x1]
    539e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53a2:	89 90 60 02 00 00    	mov    DWORD PTR [rax+0x260],edx
    53a8:	e9 92 00 00 00       	jmp    543f <verify_ip_addr+0x3ab>
    53ad:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53b1:	8b 80 6c 02 00 00    	mov    eax,DWORD PTR [rax+0x26c]
    53b7:	8d 50 01             	lea    edx,[rax+0x1]
    53ba:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53be:	89 90 6c 02 00 00    	mov    DWORD PTR [rax+0x26c],edx
    53c4:	eb 79                	jmp    543f <verify_ip_addr+0x3ab>
    53c6:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    53ca:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    53cd:	84 c0                	test   al,al
    53cf:	74 19                	je     53ea <verify_ip_addr+0x356>
    53d1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53d5:	8b 80 64 02 00 00    	mov    eax,DWORD PTR [rax+0x264]
    53db:	8d 50 01             	lea    edx,[rax+0x1]
    53de:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53e2:	89 90 64 02 00 00    	mov    DWORD PTR [rax+0x264],edx
    53e8:	eb 55                	jmp    543f <verify_ip_addr+0x3ab>
    53ea:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53ee:	8b 80 70 02 00 00    	mov    eax,DWORD PTR [rax+0x270]
    53f4:	8d 50 01             	lea    edx,[rax+0x1]
    53f7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53fb:	89 90 70 02 00 00    	mov    DWORD PTR [rax+0x270],edx
    5401:	eb 3c                	jmp    543f <verify_ip_addr+0x3ab>
    5403:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5407:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    540a:	84 c0                	test   al,al
    540c:	74 19                	je     5427 <verify_ip_addr+0x393>
    540e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5412:	8b 80 74 02 00 00    	mov    eax,DWORD PTR [rax+0x274]
    5418:	8d 50 01             	lea    edx,[rax+0x1]
    541b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    541f:	89 90 74 02 00 00    	mov    DWORD PTR [rax+0x274],edx
    5425:	eb 17                	jmp    543e <verify_ip_addr+0x3aa>
    5427:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    542b:	8b 80 78 02 00 00    	mov    eax,DWORD PTR [rax+0x278]
    5431:	8d 50 01             	lea    edx,[rax+0x1]
    5434:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5438:	89 90 78 02 00 00    	mov    DWORD PTR [rax+0x278],edx
    543e:	90                   	nop
    543f:	b8 01 00 00 00       	mov    eax,0x1
    5444:	c9                   	leave  
    5445:	c3                   	ret    

0000000000005446 <ascii_hexdump>:
    5446:	f3 0f 1e fa          	endbr64 
    544a:	55                   	push   rbp
    544b:	48 89 e5             	mov    rbp,rsp
    544e:	48 83 ec 20          	sub    rsp,0x20
    5452:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    5456:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    5459:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    5460:	eb 52                	jmp    54b4 <ascii_hexdump+0x6e>
    5462:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5465:	48 63 d0             	movsxd rdx,eax
    5468:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    546c:	48 01 d0             	add    rax,rdx
    546f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5472:	3c 20                	cmp    al,0x20
    5474:	76 30                	jbe    54a6 <ascii_hexdump+0x60>
    5476:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5479:	48 63 d0             	movsxd rdx,eax
    547c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5480:	48 01 d0             	add    rax,rdx
    5483:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5486:	3c 7e                	cmp    al,0x7e
    5488:	77 1c                	ja     54a6 <ascii_hexdump+0x60>
    548a:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    548d:	48 63 d0             	movsxd rdx,eax
    5490:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5494:	48 01 d0             	add    rax,rdx
    5497:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    549a:	0f b6 c0             	movzx  eax,al
    549d:	89 c7                	mov    edi,eax
    549f:	e8 fc cf ff ff       	call   24a0 <putchar@plt>
    54a4:	eb 0a                	jmp    54b0 <ascii_hexdump+0x6a>
    54a6:	bf 2e 00 00 00       	mov    edi,0x2e
    54ab:	e8 f0 cf ff ff       	call   24a0 <putchar@plt>
    54b0:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    54b4:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    54b7:	3b 45 e4             	cmp    eax,DWORD PTR [rbp-0x1c]
    54ba:	7c a6                	jl     5462 <ascii_hexdump+0x1c>
    54bc:	bf 0a 00 00 00       	mov    edi,0xa
    54c1:	e8 da cf ff ff       	call   24a0 <putchar@plt>
    54c6:	90                   	nop
    54c7:	c9                   	leave  
    54c8:	c3                   	ret    

00000000000054c9 <stdout_alert>:
    54c9:	f3 0f 1e fa          	endbr64 
    54cd:	55                   	push   rbp
    54ce:	48 89 e5             	mov    rbp,rsp
    54d1:	53                   	push   rbx
    54d2:	48 81 ec c8 01 00 00 	sub    rsp,0x1c8
    54d9:	48 89 bd 48 fe ff ff 	mov    QWORD PTR [rbp-0x1b8],rdi
    54e0:	48 89 b5 40 fe ff ff 	mov    QWORD PTR [rbp-0x1c0],rsi
    54e7:	89 95 3c fe ff ff    	mov    DWORD PTR [rbp-0x1c4],edx
    54ed:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    54f4:	00 00 
    54f6:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    54fa:	31 c0                	xor    eax,eax
    54fc:	bf 00 00 00 00       	mov    edi,0x0
    5501:	e8 fa d1 ff ff       	call   2700 <time@plt>
    5506:	48 89 85 50 fe ff ff 	mov    QWORD PTR [rbp-0x1b0],rax
    550d:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
    5514:	48 89 c7             	mov    rdi,rax
    5517:	e8 a4 cf ff ff       	call   24c0 <localtime@plt>
    551c:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    551f:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    5523:	48 89 8d 60 fe ff ff 	mov    QWORD PTR [rbp-0x1a0],rcx
    552a:	48 89 9d 68 fe ff ff 	mov    QWORD PTR [rbp-0x198],rbx
    5531:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    5535:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    5539:	48 89 8d 70 fe ff ff 	mov    QWORD PTR [rbp-0x190],rcx
    5540:	48 89 9d 78 fe ff ff 	mov    QWORD PTR [rbp-0x188],rbx
    5547:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    554b:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    554f:	48 89 8d 80 fe ff ff 	mov    QWORD PTR [rbp-0x180],rcx
    5556:	48 89 9d 88 fe ff ff 	mov    QWORD PTR [rbp-0x178],rbx
    555d:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    5561:	48 89 85 90 fe ff ff 	mov    QWORD PTR [rbp-0x170],rax
    5568:	8b bd 60 fe ff ff    	mov    edi,DWORD PTR [rbp-0x1a0]
    556e:	8b b5 64 fe ff ff    	mov    esi,DWORD PTR [rbp-0x19c]
    5574:	44 8b 8d 68 fe ff ff 	mov    r9d,DWORD PTR [rbp-0x198]
    557b:	44 8b 85 6c fe ff ff 	mov    r8d,DWORD PTR [rbp-0x194]
    5582:	8b 85 70 fe ff ff    	mov    eax,DWORD PTR [rbp-0x190]
    5588:	8d 48 01             	lea    ecx,[rax+0x1]
    558b:	8b 85 74 fe ff ff    	mov    eax,DWORD PTR [rbp-0x18c]
    5591:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    5597:	48 8d 85 a0 fe ff ff 	lea    rax,[rbp-0x160]
    559e:	57                   	push   rdi
    559f:	56                   	push   rsi
    55a0:	48 8d 35 1f 75 00 00 	lea    rsi,[rip+0x751f]        # cac6 <_IO_stdin_used+0xac6>
    55a7:	48 89 c7             	mov    rdi,rax
    55aa:	b8 00 00 00 00       	mov    eax,0x0
    55af:	e8 bc d2 ff ff       	call   2870 <sprintf@plt>
    55b4:	48 83 c4 10          	add    rsp,0x10
    55b8:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    55bf:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    55c2:	3d 80 00 00 00       	cmp    eax,0x80
    55c7:	75 4e                	jne    5617 <stdout_alert+0x14e>
    55c9:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    55d0:	48 8b 78 10          	mov    rdi,QWORD PTR [rax+0x10]
    55d4:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    55db:	48 8b 70 08          	mov    rsi,QWORD PTR [rax+0x8]
    55df:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
    55e6:	48 8d 88 50 01 00 00 	lea    rcx,[rax+0x150]
    55ed:	48 8d 95 a0 fe ff ff 	lea    rdx,[rbp-0x160]
    55f4:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    55fb:	49 89 f9             	mov    r9,rdi
    55fe:	49 89 f0             	mov    r8,rsi
    5601:	48 8d 35 da 74 00 00 	lea    rsi,[rip+0x74da]        # cae2 <_IO_stdin_used+0xae2>
    5608:	48 89 c7             	mov    rdi,rax
    560b:	b8 00 00 00 00       	mov    eax,0x0
    5610:	e8 5b d2 ff ff       	call   2870 <sprintf@plt>
    5615:	eb 61                	jmp    5678 <stdout_alert+0x1af>
    5617:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    561e:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    5621:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    5628:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    562c:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    5633:	44 8b 48 24          	mov    r9d,DWORD PTR [rax+0x24]
    5637:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    563e:	4c 8b 40 08          	mov    r8,QWORD PTR [rax+0x8]
    5642:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
    5649:	48 8d 88 50 01 00 00 	lea    rcx,[rax+0x150]
    5650:	48 8d 95 a0 fe ff ff 	lea    rdx,[rbp-0x160]
    5657:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    565e:	57                   	push   rdi
    565f:	56                   	push   rsi
    5660:	48 8d 35 8b 74 00 00 	lea    rsi,[rip+0x748b]        # caf2 <_IO_stdin_used+0xaf2>
    5667:	48 89 c7             	mov    rdi,rax
    566a:	b8 00 00 00 00       	mov    eax,0x0
    566f:	e8 fc d1 ff ff       	call   2870 <sprintf@plt>
    5674:	48 83 c4 10          	add    rsp,0x10
    5678:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    567f:	48 89 c6             	mov    rsi,rax
    5682:	48 8d 3d 7f 74 00 00 	lea    rdi,[rip+0x747f]        # cb08 <_IO_stdin_used+0xb08>
    5689:	b8 00 00 00 00       	mov    eax,0x0
    568e:	e8 5d cf ff ff       	call   25f0 <printf@plt>
    5693:	48 8b 05 96 b9 00 00 	mov    rax,QWORD PTR [rip+0xb996]        # 11030 <def_log_file>
    569a:	48 8d 35 6a 74 00 00 	lea    rsi,[rip+0x746a]        # cb0b <_IO_stdin_used+0xb0b>
    56a1:	48 89 c7             	mov    rdi,rax
    56a4:	e8 07 d1 ff ff       	call   27b0 <fopen@plt>
    56a9:	48 89 85 58 fe ff ff 	mov    QWORD PTR [rbp-0x1a8],rax
    56b0:	48 8b 95 58 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1a8]
    56b7:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    56be:	48 89 d6             	mov    rsi,rdx
    56c1:	48 89 c7             	mov    rdi,rax
    56c4:	e8 47 cf ff ff       	call   2610 <fputs@plt>
    56c9:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    56d0:	48 89 c7             	mov    rdi,rax
    56d3:	e8 98 ce ff ff       	call   2570 <fclose@plt>
    56d8:	90                   	nop
    56d9:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    56dd:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    56e4:	00 00 
    56e6:	74 05                	je     56ed <stdout_alert+0x224>
    56e8:	e8 c3 ce ff ff       	call   25b0 <__stack_chk_fail@plt>
    56ed:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    56f1:	c9                   	leave  
    56f2:	c3                   	ret    

00000000000056f3 <str_match_parser>:
    56f3:	f3 0f 1e fa          	endbr64 
    56f7:	55                   	push   rbp
    56f8:	48 89 e5             	mov    rbp,rsp
    56fb:	53                   	push   rbx
    56fc:	48 83 ec 48          	sub    rsp,0x48
    5700:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    5704:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
    5708:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    570f:	00 00 
    5711:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    5715:	31 c0                	xor    eax,eax
    5717:	48 89 e0             	mov    rax,rsp
    571a:	48 89 c3             	mov    rbx,rax
    571d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5721:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5724:	85 c0                	test   eax,eax
    5726:	75 0a                	jne    5732 <str_match_parser+0x3f>
    5728:	b8 00 00 00 00       	mov    eax,0x0
    572d:	e9 e4 01 00 00       	jmp    5916 <str_match_parser+0x223>
    5732:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5736:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5739:	83 c0 01             	add    eax,0x1
    573c:	01 c0                	add    eax,eax
    573e:	48 98                	cdqe   
    5740:	48 83 e8 01          	sub    rax,0x1
    5744:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    5748:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    574c:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    574f:	83 c0 01             	add    eax,0x1
    5752:	01 c0                	add    eax,eax
    5754:	48 98                	cdqe   
    5756:	49 89 c2             	mov    r10,rax
    5759:	41 bb 00 00 00 00    	mov    r11d,0x0
    575f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5763:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5766:	83 c0 01             	add    eax,0x1
    5769:	01 c0                	add    eax,eax
    576b:	48 98                	cdqe   
    576d:	49 89 c0             	mov    r8,rax
    5770:	41 b9 00 00 00 00    	mov    r9d,0x0
    5776:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    577a:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    577d:	83 c0 01             	add    eax,0x1
    5780:	01 c0                	add    eax,eax
    5782:	48 98                	cdqe   
    5784:	ba 10 00 00 00       	mov    edx,0x10
    5789:	48 83 ea 01          	sub    rdx,0x1
    578d:	48 01 d0             	add    rax,rdx
    5790:	bf 10 00 00 00       	mov    edi,0x10
    5795:	ba 00 00 00 00       	mov    edx,0x0
    579a:	48 f7 f7             	div    rdi
    579d:	48 6b c0 10          	imul   rax,rax,0x10
    57a1:	48 89 c2             	mov    rdx,rax
    57a4:	48 81 e2 00 f0 ff ff 	and    rdx,0xfffffffffffff000
    57ab:	48 89 e6             	mov    rsi,rsp
    57ae:	48 29 d6             	sub    rsi,rdx
    57b1:	48 89 f2             	mov    rdx,rsi
    57b4:	48 39 d4             	cmp    rsp,rdx
    57b7:	74 12                	je     57cb <str_match_parser+0xd8>
    57b9:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    57c0:	48 83 8c 24 f8 0f 00 	or     QWORD PTR [rsp+0xff8],0x0
    57c7:	00 00 
    57c9:	eb e9                	jmp    57b4 <str_match_parser+0xc1>
    57cb:	48 89 c2             	mov    rdx,rax
    57ce:	81 e2 ff 0f 00 00    	and    edx,0xfff
    57d4:	48 29 d4             	sub    rsp,rdx
    57d7:	48 89 c2             	mov    rdx,rax
    57da:	81 e2 ff 0f 00 00    	and    edx,0xfff
    57e0:	48 85 d2             	test   rdx,rdx
    57e3:	74 10                	je     57f5 <str_match_parser+0x102>
    57e5:	25 ff 0f 00 00       	and    eax,0xfff
    57ea:	48 83 e8 08          	sub    rax,0x8
    57ee:	48 01 e0             	add    rax,rsp
    57f1:	48 83 08 00          	or     QWORD PTR [rax],0x0
    57f5:	48 89 e0             	mov    rax,rsp
    57f8:	48 83 c0 00          	add    rax,0x0
    57fc:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    5800:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5804:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5807:	83 c0 01             	add    eax,0x1
    580a:	01 c0                	add    eax,eax
    580c:	48 63 d0             	movsxd rdx,eax
    580f:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    5813:	be 00 00 00 00       	mov    esi,0x0
    5818:	48 89 c7             	mov    rdi,rax
    581b:	e8 10 ce ff ff       	call   2630 <memset@plt>
    5820:	c7 45 d4 00 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x0
    5827:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    582b:	8b 80 4c 03 00 00    	mov    eax,DWORD PTR [rax+0x34c]
    5831:	85 c0                	test   eax,eax
    5833:	74 5f                	je     5894 <str_match_parser+0x1a1>
    5835:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5839:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    583c:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
    583f:	eb 42                	jmp    5883 <str_match_parser+0x190>
    5841:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5845:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    5848:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
    584b:	48 98                	cdqe   
    584d:	48 01 d0             	add    rax,rdx
    5850:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5853:	0f b6 d0             	movzx  edx,al
    5856:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    5859:	8d 48 01             	lea    ecx,[rax+0x1]
    585c:	89 4d d4             	mov    DWORD PTR [rbp-0x2c],ecx
    585f:	01 c0                	add    eax,eax
    5861:	48 63 c8             	movsxd rcx,eax
    5864:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    5868:	48 01 c8             	add    rax,rcx
    586b:	48 8d 35 9b 72 00 00 	lea    rsi,[rip+0x729b]        # cb0d <_IO_stdin_used+0xb0d>
    5872:	48 89 c7             	mov    rdi,rax
    5875:	b8 00 00 00 00       	mov    eax,0x0
    587a:	e8 f1 cf ff ff       	call   2870 <sprintf@plt>
    587f:	83 45 d0 01          	add    DWORD PTR [rbp-0x30],0x1
    5883:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5887:	8b 80 4c 03 00 00    	mov    eax,DWORD PTR [rax+0x34c]
    588d:	39 45 d0             	cmp    DWORD PTR [rbp-0x30],eax
    5890:	7c af                	jl     5841 <str_match_parser+0x14e>
    5892:	eb 5a                	jmp    58ee <str_match_parser+0x1fb>
    5894:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5898:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    589b:	89 45 cc             	mov    DWORD PTR [rbp-0x34],eax
    589e:	eb 42                	jmp    58e2 <str_match_parser+0x1ef>
    58a0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    58a4:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    58a7:	8b 45 cc             	mov    eax,DWORD PTR [rbp-0x34]
    58aa:	48 98                	cdqe   
    58ac:	48 01 d0             	add    rax,rdx
    58af:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    58b2:	0f b6 d0             	movzx  edx,al
    58b5:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    58b8:	8d 48 01             	lea    ecx,[rax+0x1]
    58bb:	89 4d d4             	mov    DWORD PTR [rbp-0x2c],ecx
    58be:	01 c0                	add    eax,eax
    58c0:	48 63 c8             	movsxd rcx,eax
    58c3:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    58c7:	48 01 c8             	add    rax,rcx
    58ca:	48 8d 35 3c 72 00 00 	lea    rsi,[rip+0x723c]        # cb0d <_IO_stdin_used+0xb0d>
    58d1:	48 89 c7             	mov    rdi,rax
    58d4:	b8 00 00 00 00       	mov    eax,0x0
    58d9:	e8 92 cf ff ff       	call   2870 <sprintf@plt>
    58de:	83 45 cc 01          	add    DWORD PTR [rbp-0x34],0x1
    58e2:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    58e6:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    58e9:	39 45 cc             	cmp    DWORD PTR [rbp-0x34],eax
    58ec:	7c b2                	jl     58a0 <str_match_parser+0x1ad>
    58ee:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    58f2:	48 8d 50 40          	lea    rdx,[rax+0x40]
    58f6:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    58fa:	48 89 d6             	mov    rsi,rdx
    58fd:	48 89 c7             	mov    rdi,rax
    5900:	e8 bb cf ff ff       	call   28c0 <strstr@plt>
    5905:	48 85 c0             	test   rax,rax
    5908:	74 07                	je     5911 <str_match_parser+0x21e>
    590a:	b8 01 00 00 00       	mov    eax,0x1
    590f:	eb 05                	jmp    5916 <str_match_parser+0x223>
    5911:	b8 00 00 00 00       	mov    eax,0x0
    5916:	48 89 dc             	mov    rsp,rbx
    5919:	48 8b 5d e8          	mov    rbx,QWORD PTR [rbp-0x18]
    591d:	64 48 33 1c 25 28 00 	xor    rbx,QWORD PTR fs:0x28
    5924:	00 00 
    5926:	74 05                	je     592d <str_match_parser+0x23a>
    5928:	e8 83 cc ff ff       	call   25b0 <__stack_chk_fail@plt>
    592d:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    5931:	c9                   	leave  
    5932:	c3                   	ret    

0000000000005933 <is_blocked_ipv4>:
    5933:	f3 0f 1e fa          	endbr64 
    5937:	55                   	push   rbp
    5938:	48 89 e5             	mov    rbp,rsp
    593b:	48 83 ec 20          	sub    rsp,0x20
    593f:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    5943:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    594a:	eb 3b                	jmp    5987 <is_blocked_ipv4+0x54>
    594c:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    594f:	48 63 d0             	movsxd rdx,eax
    5952:	48 89 d0             	mov    rax,rdx
    5955:	48 c1 e0 03          	shl    rax,0x3
    5959:	48 01 d0             	add    rax,rdx
    595c:	48 01 c0             	add    rax,rax
    595f:	48 8d 15 7a 48 10 00 	lea    rdx,[rip+0x10487a]        # 10a1e0 <blocked_ipv4_addrs>
    5966:	48 01 c2             	add    rdx,rax
    5969:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    596d:	48 89 d6             	mov    rsi,rdx
    5970:	48 89 c7             	mov    rdi,rax
    5973:	e8 38 cd ff ff       	call   26b0 <strcmp@plt>
    5978:	85 c0                	test   eax,eax
    597a:	75 07                	jne    5983 <is_blocked_ipv4+0x50>
    597c:	b8 01 00 00 00       	mov    eax,0x1
    5981:	eb 14                	jmp    5997 <is_blocked_ipv4+0x64>
    5983:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    5987:	8b 05 83 b6 00 00    	mov    eax,DWORD PTR [rip+0xb683]        # 11010 <blk_ipv4_len>
    598d:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    5990:	7e ba                	jle    594c <is_blocked_ipv4+0x19>
    5992:	b8 00 00 00 00       	mov    eax,0x0
    5997:	c9                   	leave  
    5998:	c3                   	ret    

0000000000005999 <none>:
    5999:	f3 0f 1e fa          	endbr64 
    599d:	55                   	push   rbp
    599e:	48 89 e5             	mov    rbp,rsp
    59a1:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    59a5:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    59a9:	b8 01 00 00 00       	mov    eax,0x1
    59ae:	5d                   	pop    rbp
    59af:	c3                   	ret    

00000000000059b0 <pcre_match>:
    59b0:	f3 0f 1e fa          	endbr64 
    59b4:	55                   	push   rbp
    59b5:	48 89 e5             	mov    rbp,rsp
    59b8:	48 83 ec 10          	sub    rsp,0x10
    59bc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    59c0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    59c4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    59c8:	48 8b 00             	mov    rax,QWORD PTR [rax]
    59cb:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    59cf:	48 8d ba d0 01 00 00 	lea    rdi,[rdx+0x1d0]
    59d6:	41 b8 00 00 00 00    	mov    r8d,0x0
    59dc:	b9 00 00 00 00       	mov    ecx,0x0
    59e1:	ba 00 00 00 00       	mov    edx,0x0
    59e6:	48 89 c6             	mov    rsi,rax
    59e9:	e8 82 cd ff ff       	call   2770 <regexec@plt>
    59ee:	83 f8 01             	cmp    eax,0x1
    59f1:	75 07                	jne    59fa <pcre_match+0x4a>
    59f3:	b8 00 00 00 00       	mov    eax,0x0
    59f8:	eb 05                	jmp    59ff <pcre_match+0x4f>
    59fa:	b8 01 00 00 00       	mov    eax,0x1
    59ff:	c9                   	leave  
    5a00:	c3                   	ret    

0000000000005a01 <rule_library_parser>:
    5a01:	f3 0f 1e fa          	endbr64 
    5a05:	55                   	push   rbp
    5a06:	48 89 e5             	mov    rbp,rsp
    5a09:	53                   	push   rbx
    5a0a:	48 83 ec 48          	sub    rsp,0x48
    5a0e:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    5a12:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    5a19:	00 00 
    5a1b:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    5a1f:	31 c0                	xor    eax,eax
    5a21:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5a25:	48 8d 35 ec 70 00 00 	lea    rsi,[rip+0x70ec]        # cb18 <_IO_stdin_used+0xb18>
    5a2c:	48 89 c7             	mov    rdi,rax
    5a2f:	e8 7c cd ff ff       	call   27b0 <fopen@plt>
    5a34:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    5a38:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    5a3d:	75 22                	jne    5a61 <rule_library_parser+0x60>
    5a3f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5a43:	48 89 c6             	mov    rsi,rax
    5a46:	48 8d 3d d3 70 00 00 	lea    rdi,[rip+0x70d3]        # cb20 <_IO_stdin_used+0xb20>
    5a4d:	b8 00 00 00 00       	mov    eax,0x0
    5a52:	e8 99 cb ff ff       	call   25f0 <printf@plt>
    5a57:	bf 01 00 00 00       	mov    edi,0x1
    5a5c:	e8 1f ce ff ff       	call   2880 <exit@plt>
    5a61:	48 c7 45 c8 00 00 00 	mov    QWORD PTR [rbp-0x38],0x0
    5a68:	00 
    5a69:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    5a70:	00 
    5a71:	e9 72 05 00 00       	jmp    5fe8 <rule_library_parser+0x5e7>
    5a76:	48 8b 5d d0          	mov    rbx,QWORD PTR [rbp-0x30]
    5a7a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a7e:	48 8d 35 c1 70 00 00 	lea    rsi,[rip+0x70c1]        # cb46 <_IO_stdin_used+0xb46>
    5a85:	48 89 c7             	mov    rdi,rax
    5a88:	e8 e3 cb ff ff       	call   2670 <strcspn@plt>
    5a8d:	48 01 d8             	add    rax,rbx
    5a90:	c6 00 00             	mov    BYTE PTR [rax],0x0
    5a93:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a97:	48 89 c7             	mov    rdi,rax
    5a9a:	e8 bc 05 00 00       	call   605b <is_comment>
    5a9f:	84 c0                	test   al,al
    5aa1:	74 05                	je     5aa8 <rule_library_parser+0xa7>
    5aa3:	e9 40 05 00 00       	jmp    5fe8 <rule_library_parser+0x5e7>
    5aa8:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5aac:	ba 1a 00 00 00       	mov    edx,0x1a
    5ab1:	48 8d 35 90 70 00 00 	lea    rsi,[rip+0x7090]        # cb48 <_IO_stdin_used+0xb48>
    5ab8:	48 89 c7             	mov    rdi,rax
    5abb:	e8 20 ca ff ff       	call   24e0 <strncmp@plt>
    5ac0:	85 c0                	test   eax,eax
    5ac2:	75 39                	jne    5afd <rule_library_parser+0xfc>
    5ac4:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ac8:	48 83 c0 1a          	add    rax,0x1a
    5acc:	48 8d 35 90 70 00 00 	lea    rsi,[rip+0x7090]        # cb63 <_IO_stdin_used+0xb63>
    5ad3:	48 89 c7             	mov    rdi,rax
    5ad6:	e8 d5 cb ff ff       	call   26b0 <strcmp@plt>
    5adb:	85 c0                	test   eax,eax
    5add:	75 0f                	jne    5aee <rule_library_parser+0xed>
    5adf:	c7 05 db 46 10 00 01 	mov    DWORD PTR [rip+0x1046db],0x1        # 10a1c4 <strict_icmp_timestamp_req>
    5ae6:	00 00 00 
    5ae9:	e9 e4 04 00 00       	jmp    5fd2 <rule_library_parser+0x5d1>
    5aee:	c7 05 cc 46 10 00 00 	mov    DWORD PTR [rip+0x1046cc],0x0        # 10a1c4 <strict_icmp_timestamp_req>
    5af5:	00 00 00 
    5af8:	e9 d5 04 00 00       	jmp    5fd2 <rule_library_parser+0x5d1>
    5afd:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b01:	ba 1d 00 00 00       	mov    edx,0x1d
    5b06:	48 8d 35 5a 70 00 00 	lea    rsi,[rip+0x705a]        # cb67 <_IO_stdin_used+0xb67>
    5b0d:	48 89 c7             	mov    rdi,rax
    5b10:	e8 cb c9 ff ff       	call   24e0 <strncmp@plt>
    5b15:	85 c0                	test   eax,eax
    5b17:	75 39                	jne    5b52 <rule_library_parser+0x151>
    5b19:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b1d:	48 83 c0 1d          	add    rax,0x1d
    5b21:	48 8d 35 3b 70 00 00 	lea    rsi,[rip+0x703b]        # cb63 <_IO_stdin_used+0xb63>
    5b28:	48 89 c7             	mov    rdi,rax
    5b2b:	e8 80 cb ff ff       	call   26b0 <strcmp@plt>
    5b30:	85 c0                	test   eax,eax
    5b32:	75 0f                	jne    5b43 <rule_library_parser+0x142>
    5b34:	c7 05 ca 21 10 00 01 	mov    DWORD PTR [rip+0x1021ca],0x1        # 107d08 <strict_nmap_host_alive_check>
    5b3b:	00 00 00 
    5b3e:	e9 8f 04 00 00       	jmp    5fd2 <rule_library_parser+0x5d1>
    5b43:	c7 05 bb 21 10 00 00 	mov    DWORD PTR [rip+0x1021bb],0x0        # 107d08 <strict_nmap_host_alive_check>
    5b4a:	00 00 00 
    5b4d:	e9 80 04 00 00       	jmp    5fd2 <rule_library_parser+0x5d1>
    5b52:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b56:	ba 17 00 00 00       	mov    edx,0x17
    5b5b:	48 8d 35 23 70 00 00 	lea    rsi,[rip+0x7023]        # cb85 <_IO_stdin_used+0xb85>
    5b62:	48 89 c7             	mov    rdi,rax
    5b65:	e8 76 c9 ff ff       	call   24e0 <strncmp@plt>
    5b6a:	85 c0                	test   eax,eax
    5b6c:	75 43                	jne    5bb1 <rule_library_parser+0x1b0>
    5b6e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b72:	48 89 c7             	mov    rdi,rax
    5b75:	e8 16 ca ff ff       	call   2590 <strlen@plt>
    5b7a:	48 83 f8 17          	cmp    rax,0x17
    5b7e:	77 16                	ja     5b96 <rule_library_parser+0x195>
    5b80:	48 8d 3d 16 70 00 00 	lea    rdi,[rip+0x7016]        # cb9d <_IO_stdin_used+0xb9d>
    5b87:	e8 94 c9 ff ff       	call   2520 <puts@plt>
    5b8c:	bf 01 00 00 00       	mov    edi,0x1
    5b91:	e8 ea cc ff ff       	call   2880 <exit@plt>
    5b96:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b9a:	48 83 c0 17          	add    rax,0x17
    5b9e:	48 89 c7             	mov    rdi,rax
    5ba1:	e8 7a cc ff ff       	call   2820 <atoi@plt>
    5ba6:	89 05 f4 1c 10 00    	mov    DWORD PTR [rip+0x101cf4],eax        # 1078a0 <clean_delay_pkts>
    5bac:	e9 21 04 00 00       	jmp    5fd2 <rule_library_parser+0x5d1>
    5bb1:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5bb5:	ba 18 00 00 00       	mov    edx,0x18
    5bba:	48 8d 35 f6 6f 00 00 	lea    rsi,[rip+0x6ff6]        # cbb7 <_IO_stdin_used+0xbb7>
    5bc1:	48 89 c7             	mov    rdi,rax
    5bc4:	e8 17 c9 ff ff       	call   24e0 <strncmp@plt>
    5bc9:	85 c0                	test   eax,eax
    5bcb:	75 46                	jne    5c13 <rule_library_parser+0x212>
    5bcd:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5bd1:	48 89 c7             	mov    rdi,rax
    5bd4:	e8 b7 c9 ff ff       	call   2590 <strlen@plt>
    5bd9:	48 83 f8 18          	cmp    rax,0x18
    5bdd:	75 16                	jne    5bf5 <rule_library_parser+0x1f4>
    5bdf:	48 8d 3d b7 6f 00 00 	lea    rdi,[rip+0x6fb7]        # cb9d <_IO_stdin_used+0xb9d>
    5be6:	e8 35 c9 ff ff       	call   2520 <puts@plt>
    5beb:	bf 01 00 00 00       	mov    edi,0x1
    5bf0:	e8 8b cc ff ff       	call   2880 <exit@plt>
    5bf5:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5bf9:	48 83 c0 18          	add    rax,0x18
    5bfd:	48 89 c7             	mov    rdi,rax
    5c00:	e8 1b cc ff ff       	call   2820 <atoi@plt>
    5c05:	48 98                	cdqe   
    5c07:	48 89 05 3a 21 10 00 	mov    QWORD PTR [rip+0x10213a],rax        # 107d48 <clean_delay>
    5c0e:	e9 bf 03 00 00       	jmp    5fd2 <rule_library_parser+0x5d1>
    5c13:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c17:	ba 0b 00 00 00       	mov    edx,0xb
    5c1c:	48 8d 35 ad 6f 00 00 	lea    rsi,[rip+0x6fad]        # cbd0 <_IO_stdin_used+0xbd0>
    5c23:	48 89 c7             	mov    rdi,rax
    5c26:	e8 b5 c8 ff ff       	call   24e0 <strncmp@plt>
    5c2b:	85 c0                	test   eax,eax
    5c2d:	75 33                	jne    5c62 <rule_library_parser+0x261>
    5c2f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c33:	48 83 c0 0b          	add    rax,0xb
    5c37:	48 8d 35 25 6f 00 00 	lea    rsi,[rip+0x6f25]        # cb63 <_IO_stdin_used+0xb63>
    5c3e:	48 89 c7             	mov    rdi,rax
    5c41:	e8 6a ca ff ff       	call   26b0 <strcmp@plt>
    5c46:	85 c0                	test   eax,eax
    5c48:	75 0c                	jne    5c56 <rule_library_parser+0x255>
    5c4a:	c6 05 ef 20 10 00 01 	mov    BYTE PTR [rip+0x1020ef],0x1        # 107d40 <use_sqlite>
    5c51:	e9 7c 03 00 00       	jmp    5fd2 <rule_library_parser+0x5d1>
    5c56:	c6 05 e3 20 10 00 00 	mov    BYTE PTR [rip+0x1020e3],0x0        # 107d40 <use_sqlite>
    5c5d:	e9 70 03 00 00       	jmp    5fd2 <rule_library_parser+0x5d1>
    5c62:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c66:	ba 15 00 00 00       	mov    edx,0x15
    5c6b:	48 8d 35 6a 6f 00 00 	lea    rsi,[rip+0x6f6a]        # cbdc <_IO_stdin_used+0xbdc>
    5c72:	48 89 c7             	mov    rdi,rax
    5c75:	e8 66 c8 ff ff       	call   24e0 <strncmp@plt>
    5c7a:	85 c0                	test   eax,eax
    5c7c:	75 34                	jne    5cb2 <rule_library_parser+0x2b1>
    5c7e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c82:	48 83 c0 15          	add    rax,0x15
    5c86:	48 89 c6             	mov    rsi,rax
    5c89:	48 8d 3d 90 20 10 00 	lea    rdi,[rip+0x102090]        # 107d20 <sqlite_db_path>
    5c90:	e8 5b c8 ff ff       	call   24f0 <strcpy@plt>
    5c95:	48 8d 35 84 20 10 00 	lea    rsi,[rip+0x102084]        # 107d20 <sqlite_db_path>
    5c9c:	48 8d 3d 4f 6f 00 00 	lea    rdi,[rip+0x6f4f]        # cbf2 <_IO_stdin_used+0xbf2>
    5ca3:	b8 00 00 00 00       	mov    eax,0x0
    5ca8:	e8 df 2c 00 00       	call   898c <livedebug>
    5cad:	e9 20 03 00 00       	jmp    5fd2 <rule_library_parser+0x5d1>
    5cb2:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5cb6:	ba 0b 00 00 00       	mov    edx,0xb
    5cbb:	48 8d 35 49 6f 00 00 	lea    rsi,[rip+0x6f49]        # cc0b <_IO_stdin_used+0xc0b>
    5cc2:	48 89 c7             	mov    rdi,rax
    5cc5:	e8 16 c8 ff ff       	call   24e0 <strncmp@plt>
    5cca:	85 c0                	test   eax,eax
    5ccc:	75 34                	jne    5d02 <rule_library_parser+0x301>
    5cce:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5cd2:	48 83 c0 0b          	add    rax,0xb
    5cd6:	48 89 c6             	mov    rsi,rax
    5cd9:	48 8d 3d c8 44 10 00 	lea    rdi,[rip+0x1044c8]        # 10a1a8 <input_adapter>
    5ce0:	e8 0b c8 ff ff       	call   24f0 <strcpy@plt>
    5ce5:	48 8d 35 bc 44 10 00 	lea    rsi,[rip+0x1044bc]        # 10a1a8 <input_adapter>
    5cec:	48 8d 3d 25 6f 00 00 	lea    rdi,[rip+0x6f25]        # cc18 <_IO_stdin_used+0xc18>
    5cf3:	b8 00 00 00 00       	mov    eax,0x0
    5cf8:	e8 8f 2c 00 00       	call   898c <livedebug>
    5cfd:	e9 d0 02 00 00       	jmp    5fd2 <rule_library_parser+0x5d1>
    5d02:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d06:	ba 0c 00 00 00       	mov    edx,0xc
    5d0b:	48 8d 35 39 6f 00 00 	lea    rsi,[rip+0x6f39]        # cc4b <_IO_stdin_used+0xc4b>
    5d12:	48 89 c7             	mov    rdi,rax
    5d15:	e8 c6 c7 ff ff       	call   24e0 <strncmp@plt>
    5d1a:	85 c0                	test   eax,eax
    5d1c:	75 34                	jne    5d52 <rule_library_parser+0x351>
    5d1e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d22:	48 83 c0 0c          	add    rax,0xc
    5d26:	48 89 c6             	mov    rsi,rax
    5d29:	48 8d 3d 88 44 10 00 	lea    rdi,[rip+0x104488]        # 10a1b8 <output_adapter>
    5d30:	e8 bb c7 ff ff       	call   24f0 <strcpy@plt>
    5d35:	48 8d 35 7c 44 10 00 	lea    rsi,[rip+0x10447c]        # 10a1b8 <output_adapter>
    5d3c:	48 8d 3d 15 6f 00 00 	lea    rdi,[rip+0x6f15]        # cc58 <_IO_stdin_used+0xc58>
    5d43:	b8 00 00 00 00       	mov    eax,0x0
    5d48:	e8 3f 2c 00 00       	call   898c <livedebug>
    5d4d:	e9 80 02 00 00       	jmp    5fd2 <rule_library_parser+0x5d1>
    5d52:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d56:	ba 05 00 00 00       	mov    edx,0x5
    5d5b:	48 8d 35 2a 6f 00 00 	lea    rsi,[rip+0x6f2a]        # cc8c <_IO_stdin_used+0xc8c>
    5d62:	48 89 c7             	mov    rdi,rax
    5d65:	e8 76 c7 ff ff       	call   24e0 <strncmp@plt>
    5d6a:	85 c0                	test   eax,eax
    5d6c:	0f 85 83 00 00 00    	jne    5df5 <rule_library_parser+0x3f4>
    5d72:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d76:	48 83 c0 05          	add    rax,0x5
    5d7a:	48 89 c6             	mov    rsi,rax
    5d7d:	48 8d 3d 0e 6f 00 00 	lea    rdi,[rip+0x6f0e]        # cc92 <_IO_stdin_used+0xc92>
    5d84:	b8 00 00 00 00       	mov    eax,0x0
    5d89:	e8 fe 2b 00 00       	call   898c <livedebug>
    5d8e:	48 8d 3d 06 6f 00 00 	lea    rdi,[rip+0x6f06]        # cc9b <_IO_stdin_used+0xc9b>
    5d95:	b8 00 00 00 00       	mov    eax,0x0
    5d9a:	e8 51 c8 ff ff       	call   25f0 <printf@plt>
    5d9f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5da3:	48 83 c0 05          	add    rax,0x5
    5da7:	0f b6 10             	movzx  edx,BYTE PTR [rax]
    5daa:	0f b6 05 f6 6e 00 00 	movzx  eax,BYTE PTR [rip+0x6ef6]        # cca7 <_IO_stdin_used+0xca7>
    5db1:	0f b6 d2             	movzx  edx,dl
    5db4:	0f b6 c0             	movzx  eax,al
    5db7:	29 c2                	sub    edx,eax
    5db9:	89 d0                	mov    eax,edx
    5dbb:	85 c0                	test   eax,eax
    5dbd:	75 1b                	jne    5dda <rule_library_parser+0x3d9>
    5dbf:	c7 05 5b b2 00 00 02 	mov    DWORD PTR [rip+0xb25b],0x2        # 11024 <VIGIL_MODE>
    5dc6:	00 00 00 
    5dc9:	48 8d 3d d9 6e 00 00 	lea    rdi,[rip+0x6ed9]        # cca9 <_IO_stdin_used+0xca9>
    5dd0:	e8 4b c7 ff ff       	call   2520 <puts@plt>
    5dd5:	e9 f8 01 00 00       	jmp    5fd2 <rule_library_parser+0x5d1>
    5dda:	c7 05 40 b2 00 00 01 	mov    DWORD PTR [rip+0xb240],0x1        # 11024 <VIGIL_MODE>
    5de1:	00 00 00 
    5de4:	48 8d 3d d5 6e 00 00 	lea    rdi,[rip+0x6ed5]        # ccc0 <_IO_stdin_used+0xcc0>
    5deb:	e8 30 c7 ff ff       	call   2520 <puts@plt>
    5df0:	e9 dd 01 00 00       	jmp    5fd2 <rule_library_parser+0x5d1>
    5df5:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5df9:	ba 08 00 00 00       	mov    edx,0x8
    5dfe:	48 8d 35 d2 6e 00 00 	lea    rsi,[rip+0x6ed2]        # ccd7 <_IO_stdin_used+0xcd7>
    5e05:	48 89 c7             	mov    rdi,rax
    5e08:	e8 d3 c6 ff ff       	call   24e0 <strncmp@plt>
    5e0d:	85 c0                	test   eax,eax
    5e0f:	75 34                	jne    5e45 <rule_library_parser+0x444>
    5e11:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e15:	48 83 c0 08          	add    rax,0x8
    5e19:	48 89 c6             	mov    rsi,rax
    5e1c:	48 8d 3d cd 1e 10 00 	lea    rdi,[rip+0x101ecd]        # 107cf0 <local_ip>
    5e23:	e8 c8 c6 ff ff       	call   24f0 <strcpy@plt>
    5e28:	48 8d 35 c1 1e 10 00 	lea    rsi,[rip+0x101ec1]        # 107cf0 <local_ip>
    5e2f:	48 8d 3d aa 6e 00 00 	lea    rdi,[rip+0x6eaa]        # cce0 <_IO_stdin_used+0xce0>
    5e36:	b8 00 00 00 00       	mov    eax,0x0
    5e3b:	e8 4c 2b 00 00       	call   898c <livedebug>
    5e40:	e9 8d 01 00 00       	jmp    5fd2 <rule_library_parser+0x5d1>
    5e45:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e49:	ba 06 00 00 00       	mov    edx,0x6
    5e4e:	48 8d 35 a6 6e 00 00 	lea    rsi,[rip+0x6ea6]        # ccfb <_IO_stdin_used+0xcfb>
    5e55:	48 89 c7             	mov    rdi,rax
    5e58:	e8 83 c6 ff ff       	call   24e0 <strncmp@plt>
    5e5d:	85 c0                	test   eax,eax
    5e5f:	75 1c                	jne    5e7d <rule_library_parser+0x47c>
    5e61:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e65:	48 83 c0 06          	add    rax,0x6
    5e69:	48 89 c6             	mov    rsi,rax
    5e6c:	48 8d 3d fd 20 10 00 	lea    rdi,[rip+0x1020fd]        # 107f70 <def_gw>
    5e73:	e8 78 c6 ff ff       	call   24f0 <strcpy@plt>
    5e78:	e9 55 01 00 00       	jmp    5fd2 <rule_library_parser+0x5d1>
    5e7d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e81:	ba 08 00 00 00       	mov    edx,0x8
    5e86:	48 8d 35 75 6e 00 00 	lea    rsi,[rip+0x6e75]        # cd02 <_IO_stdin_used+0xd02>
    5e8d:	48 89 c7             	mov    rdi,rax
    5e90:	e8 4b c6 ff ff       	call   24e0 <strncmp@plt>
    5e95:	85 c0                	test   eax,eax
    5e97:	75 3f                	jne    5ed8 <rule_library_parser+0x4d7>
    5e99:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e9d:	48 83 c0 08          	add    rax,0x8
    5ea1:	48 8d 35 bb 6c 00 00 	lea    rsi,[rip+0x6cbb]        # cb63 <_IO_stdin_used+0xb63>
    5ea8:	48 89 c7             	mov    rdi,rax
    5eab:	e8 00 c8 ff ff       	call   26b0 <strcmp@plt>
    5eb0:	85 c0                	test   eax,eax
    5eb2:	75 18                	jne    5ecc <rule_library_parser+0x4cb>
    5eb4:	c6 05 96 1e 10 00 01 	mov    BYTE PTR [rip+0x101e96],0x1        # 107d51 <use_spi>
    5ebb:	48 8d 3d 49 6e 00 00 	lea    rdi,[rip+0x6e49]        # cd0b <_IO_stdin_used+0xd0b>
    5ec2:	e8 59 c6 ff ff       	call   2520 <puts@plt>
    5ec7:	e9 06 01 00 00       	jmp    5fd2 <rule_library_parser+0x5d1>
    5ecc:	c6 05 7e 1e 10 00 00 	mov    BYTE PTR [rip+0x101e7e],0x0        # 107d51 <use_spi>
    5ed3:	e9 fa 00 00 00       	jmp    5fd2 <rule_library_parser+0x5d1>
    5ed8:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5edc:	ba 09 00 00 00       	mov    edx,0x9
    5ee1:	48 8d 35 3c 6e 00 00 	lea    rsi,[rip+0x6e3c]        # cd24 <_IO_stdin_used+0xd24>
    5ee8:	48 89 c7             	mov    rdi,rax
    5eeb:	e8 f0 c5 ff ff       	call   24e0 <strncmp@plt>
    5ef0:	85 c0                	test   eax,eax
    5ef2:	75 27                	jne    5f1b <rule_library_parser+0x51a>
    5ef4:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ef8:	48 89 c7             	mov    rdi,rax
    5efb:	e8 84 01 00 00       	call   6084 <rstrip>
    5f00:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f04:	48 83 c0 09          	add    rax,0x9
    5f08:	48 89 c7             	mov    rdi,rax
    5f0b:	e8 6a 50 00 00       	call   af7a <homenet_toi>
    5f10:	89 05 ee 1d 10 00    	mov    DWORD PTR [rip+0x101dee],eax        # 107d04 <homenet>
    5f16:	e9 b7 00 00 00       	jmp    5fd2 <rule_library_parser+0x5d1>
    5f1b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f1f:	ba 0e 00 00 00       	mov    edx,0xe
    5f24:	48 8d 35 03 6e 00 00 	lea    rsi,[rip+0x6e03]        # cd2e <_IO_stdin_used+0xd2e>
    5f2b:	48 89 c7             	mov    rdi,rax
    5f2e:	e8 ad c5 ff ff       	call   24e0 <strncmp@plt>
    5f33:	85 c0                	test   eax,eax
    5f35:	75 24                	jne    5f5b <rule_library_parser+0x55a>
    5f37:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f3b:	48 89 c7             	mov    rdi,rax
    5f3e:	e8 41 01 00 00       	call   6084 <rstrip>
    5f43:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f47:	48 83 c0 0e          	add    rax,0xe
    5f4b:	48 89 c7             	mov    rdi,rax
    5f4e:	e8 27 50 00 00       	call   af7a <homenet_toi>
    5f53:	89 05 47 42 10 00    	mov    DWORD PTR [rip+0x104247],eax        # 10a1a0 <homenetmask>
    5f59:	eb 77                	jmp    5fd2 <rule_library_parser+0x5d1>
    5f5b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f5f:	ba 09 00 00 00       	mov    edx,0x9
    5f64:	48 8d 35 d2 6d 00 00 	lea    rsi,[rip+0x6dd2]        # cd3d <_IO_stdin_used+0xd3d>
    5f6b:	48 89 c7             	mov    rdi,rax
    5f6e:	e8 6d c5 ff ff       	call   24e0 <strncmp@plt>
    5f73:	85 c0                	test   eax,eax
    5f75:	75 3f                	jne    5fb6 <rule_library_parser+0x5b5>
    5f77:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f7b:	48 89 c7             	mov    rdi,rax
    5f7e:	e8 01 01 00 00       	call   6084 <rstrip>
    5f83:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f87:	48 83 c0 09          	add    rax,0x9
    5f8b:	48 8d 35 b5 6d 00 00 	lea    rsi,[rip+0x6db5]        # cd47 <_IO_stdin_used+0xd47>
    5f92:	48 89 c7             	mov    rdi,rax
    5f95:	e8 16 c7 ff ff       	call   26b0 <strcmp@plt>
    5f9a:	85 c0                	test   eax,eax
    5f9c:	75 0c                	jne    5faa <rule_library_parser+0x5a9>
    5f9e:	c7 05 38 1d 10 00 04 	mov    DWORD PTR [rip+0x101d38],0x4        # 107ce0 <vigil_location>
    5fa5:	00 00 00 
    5fa8:	eb 28                	jmp    5fd2 <rule_library_parser+0x5d1>
    5faa:	c7 05 2c 1d 10 00 03 	mov    DWORD PTR [rip+0x101d2c],0x3        # 107ce0 <vigil_location>
    5fb1:	00 00 00 
    5fb4:	eb 1c                	jmp    5fd2 <rule_library_parser+0x5d1>
    5fb6:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5fba:	48 89 c7             	mov    rdi,rax
    5fbd:	e8 7f 00 00 00       	call   6041 <is_rule>
    5fc2:	84 c0                	test   al,al
    5fc4:	74 0c                	je     5fd2 <rule_library_parser+0x5d1>
    5fc6:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5fca:	48 89 c7             	mov    rdi,rax
    5fcd:	e8 19 01 00 00       	call   60eb <rule_parser>
    5fd2:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5fd6:	ba 08 00 00 00       	mov    edx,0x8
    5fdb:	be 00 00 00 00       	mov    esi,0x0
    5fe0:	48 89 c7             	mov    rdi,rax
    5fe3:	e8 48 c6 ff ff       	call   2630 <memset@plt>
    5fe8:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    5fec:	48 8d 4d c8          	lea    rcx,[rbp-0x38]
    5ff0:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    5ff4:	48 89 ce             	mov    rsi,rcx
    5ff7:	48 89 c7             	mov    rdi,rax
    5ffa:	e8 31 c8 ff ff       	call   2830 <getline@plt>
    5fff:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    6003:	48 83 7d e0 ff       	cmp    QWORD PTR [rbp-0x20],0xffffffffffffffff
    6008:	0f 85 68 fa ff ff    	jne    5a76 <rule_library_parser+0x75>
    600e:	8b 05 10 b0 00 00    	mov    eax,DWORD PTR [rip+0xb010]        # 11024 <VIGIL_MODE>
    6014:	3d ff ff 00 00       	cmp    eax,0xffff
    6019:	75 0a                	jne    6025 <rule_library_parser+0x624>
    601b:	c7 05 ff af 00 00 01 	mov    DWORD PTR [rip+0xafff],0x1        # 11024 <VIGIL_MODE>
    6022:	00 00 00 
    6025:	90                   	nop
    6026:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    602a:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    6031:	00 00 
    6033:	74 05                	je     603a <rule_library_parser+0x639>
    6035:	e8 76 c5 ff ff       	call   25b0 <__stack_chk_fail@plt>
    603a:	48 83 c4 48          	add    rsp,0x48
    603e:	5b                   	pop    rbx
    603f:	5d                   	pop    rbp
    6040:	c3                   	ret    

0000000000006041 <is_rule>:
    6041:	f3 0f 1e fa          	endbr64 
    6045:	55                   	push   rbp
    6046:	48 89 e5             	mov    rbp,rsp
    6049:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    604d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6051:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    6054:	3c 24                	cmp    al,0x24
    6056:	0f 94 c0             	sete   al
    6059:	5d                   	pop    rbp
    605a:	c3                   	ret    

000000000000605b <is_comment>:
    605b:	f3 0f 1e fa          	endbr64 
    605f:	55                   	push   rbp
    6060:	48 89 e5             	mov    rbp,rsp
    6063:	48 83 ec 10          	sub    rsp,0x10
    6067:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    606b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    606f:	be 23 00 00 00       	mov    esi,0x23
    6074:	48 89 c7             	mov    rdi,rax
    6077:	e8 64 c5 ff ff       	call   25e0 <strchr@plt>
    607c:	48 85 c0             	test   rax,rax
    607f:	0f 95 c0             	setne  al
    6082:	c9                   	leave  
    6083:	c3                   	ret    

0000000000006084 <rstrip>:
    6084:	f3 0f 1e fa          	endbr64 
    6088:	55                   	push   rbp
    6089:	48 89 e5             	mov    rbp,rsp
    608c:	48 83 ec 10          	sub    rsp,0x10
    6090:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6094:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6098:	48 8d 35 a7 6a 00 00 	lea    rsi,[rip+0x6aa7]        # cb46 <_IO_stdin_used+0xb46>
    609f:	48 89 c7             	mov    rdi,rax
    60a2:	e8 c9 c5 ff ff       	call   2670 <strcspn@plt>
    60a7:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    60ab:	48 01 d0             	add    rax,rdx
    60ae:	c6 00 00             	mov    BYTE PTR [rax],0x0
    60b1:	90                   	nop
    60b2:	c9                   	leave  
    60b3:	c3                   	ret    

00000000000060b4 <syntax_error>:
    60b4:	f3 0f 1e fa          	endbr64 
    60b8:	55                   	push   rbp
    60b9:	48 89 e5             	mov    rbp,rsp
    60bc:	48 83 ec 10          	sub    rsp,0x10
    60c0:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    60c4:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
    60c7:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    60cb:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    60ce:	89 c6                	mov    esi,eax
    60d0:	48 8d 3d 79 6c 00 00 	lea    rdi,[rip+0x6c79]        # cd50 <_IO_stdin_used+0xd50>
    60d7:	b8 00 00 00 00       	mov    eax,0x0
    60dc:	e8 0f c5 ff ff       	call   25f0 <printf@plt>
    60e1:	bf 01 00 00 00       	mov    edi,0x1
    60e6:	e8 95 c7 ff ff       	call   2880 <exit@plt>

00000000000060eb <rule_parser>:
    60eb:	f3 0f 1e fa          	endbr64 
    60ef:	55                   	push   rbp
    60f0:	48 89 e5             	mov    rbp,rsp
    60f3:	48 83 ec 40          	sub    rsp,0x40
    60f7:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    60fb:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6102:	00 00 
    6104:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    6108:	31 c0                	xor    eax,eax
    610a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    610e:	48 83 c0 01          	add    rax,0x1
    6112:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    6116:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    611a:	48 8d 35 f7 69 00 00 	lea    rsi,[rip+0x69f7]        # cb18 <_IO_stdin_used+0xb18>
    6121:	48 89 c7             	mov    rdi,rax
    6124:	e8 87 c6 ff ff       	call   27b0 <fopen@plt>
    6129:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    612d:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
    6132:	75 22                	jne    6156 <rule_parser+0x6b>
    6134:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    6138:	48 89 c6             	mov    rsi,rax
    613b:	48 8d 3d 2e 6c 00 00 	lea    rdi,[rip+0x6c2e]        # cd70 <_IO_stdin_used+0xd70>
    6142:	b8 00 00 00 00       	mov    eax,0x0
    6147:	e8 a4 c4 ff ff       	call   25f0 <printf@plt>
    614c:	bf 01 00 00 00       	mov    edi,0x1
    6151:	e8 2a c7 ff ff       	call   2880 <exit@plt>
    6156:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    615a:	48 89 c6             	mov    rsi,rax
    615d:	48 8d 3d 3f 6c 00 00 	lea    rdi,[rip+0x6c3f]        # cda3 <_IO_stdin_used+0xda3>
    6164:	b8 00 00 00 00       	mov    eax,0x0
    6169:	e8 82 c4 ff ff       	call   25f0 <printf@plt>
    616e:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    6175:	00 
    6176:	48 c7 45 d8 00 00 00 	mov    QWORD PTR [rbp-0x28],0x0
    617d:	00 
    617e:	eb 54                	jmp    61d4 <rule_parser+0xe9>
    6180:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    6184:	48 89 c7             	mov    rdi,rax
    6187:	e8 cf fe ff ff       	call   605b <is_comment>
    618c:	84 c0                	test   al,al
    618e:	74 02                	je     6192 <rule_parser+0xa7>
    6190:	eb 42                	jmp    61d4 <rule_parser+0xe9>
    6192:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    6196:	48 89 c7             	mov    rdi,rax
    6199:	e8 e6 fe ff ff       	call   6084 <rstrip>
    619e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    61a2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    61a5:	0f b6 c0             	movzx  eax,al
    61a8:	f7 d8                	neg    eax
    61aa:	85 c0                	test   eax,eax
    61ac:	75 02                	jne    61b0 <rule_parser+0xc5>
    61ae:	eb 24                	jmp    61d4 <rule_parser+0xe9>
    61b0:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    61b4:	48 8d 35 f9 6b 00 00 	lea    rsi,[rip+0x6bf9]        # cdb4 <_IO_stdin_used+0xdb4>
    61bb:	48 89 c7             	mov    rdi,rax
    61be:	e8 fd c6 ff ff       	call   28c0 <strstr@plt>
    61c3:	48 85 c0             	test   rax,rax
    61c6:	74 0c                	je     61d4 <rule_parser+0xe9>
    61c8:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    61cc:	48 89 c7             	mov    rdi,rax
    61cf:	e8 02 39 00 00       	call   9ad6 <line_parser>
    61d4:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    61d8:	48 8d 4d d0          	lea    rcx,[rbp-0x30]
    61dc:	48 8d 45 d8          	lea    rax,[rbp-0x28]
    61e0:	48 89 ce             	mov    rsi,rcx
    61e3:	48 89 c7             	mov    rdi,rax
    61e6:	e8 45 c6 ff ff       	call   2830 <getline@plt>
    61eb:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    61ef:	48 83 7d f0 ff       	cmp    QWORD PTR [rbp-0x10],0xffffffffffffffff
    61f4:	75 8a                	jne    6180 <rule_parser+0x95>
    61f6:	0f b6 05 c5 3f 10 00 	movzx  eax,BYTE PTR [rip+0x103fc5]        # 10a1c2 <debug_mode>
    61fd:	84 c0                	test   al,al
    61ff:	74 18                	je     6219 <rule_parser+0x12e>
    6201:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    6205:	48 89 c6             	mov    rsi,rax
    6208:	48 8d 3d ab 6b 00 00 	lea    rdi,[rip+0x6bab]        # cdba <_IO_stdin_used+0xdba>
    620f:	b8 00 00 00 00       	mov    eax,0x0
    6214:	e8 d7 c3 ff ff       	call   25f0 <printf@plt>
    6219:	90                   	nop
    621a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    621e:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    6225:	00 00 
    6227:	74 05                	je     622e <rule_parser+0x143>
    6229:	e8 82 c3 ff ff       	call   25b0 <__stack_chk_fail@plt>
    622e:	c9                   	leave  
    622f:	c3                   	ret    

0000000000006230 <deny_conf_parser>:
    6230:	f3 0f 1e fa          	endbr64 
    6234:	55                   	push   rbp
    6235:	48 89 e5             	mov    rbp,rsp
    6238:	48 83 ec 50          	sub    rsp,0x50
    623c:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    6240:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6247:	00 00 
    6249:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    624d:	31 c0                	xor    eax,eax
    624f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    6253:	48 8d 35 be 68 00 00 	lea    rsi,[rip+0x68be]        # cb18 <_IO_stdin_used+0xb18>
    625a:	48 89 c7             	mov    rdi,rax
    625d:	e8 4e c5 ff ff       	call   27b0 <fopen@plt>
    6262:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    6266:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    626b:	75 22                	jne    628f <deny_conf_parser+0x5f>
    626d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    6271:	48 89 c6             	mov    rsi,rax
    6274:	48 8d 3d 55 6b 00 00 	lea    rdi,[rip+0x6b55]        # cdd0 <_IO_stdin_used+0xdd0>
    627b:	b8 00 00 00 00       	mov    eax,0x0
    6280:	e8 6b c3 ff ff       	call   25f0 <printf@plt>
    6285:	bf 01 00 00 00       	mov    edi,0x1
    628a:	e8 f1 c5 ff ff       	call   2880 <exit@plt>
    628f:	48 c7 45 c8 00 00 00 	mov    QWORD PTR [rbp-0x38],0x0
    6296:	00 
    6297:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    629e:	00 
    629f:	e9 9a 00 00 00       	jmp    633e <deny_conf_parser+0x10e>
    62a4:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    62a8:	48 89 c7             	mov    rdi,rax
    62ab:	e8 d4 fd ff ff       	call   6084 <rstrip>
    62b0:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    62b4:	48 89 c7             	mov    rdi,rax
    62b7:	e8 9f fd ff ff       	call   605b <is_comment>
    62bc:	84 c0                	test   al,al
    62be:	74 02                	je     62c2 <deny_conf_parser+0x92>
    62c0:	eb 7c                	jmp    633e <deny_conf_parser+0x10e>
    62c2:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    62c6:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    62c9:	0f b6 c0             	movzx  eax,al
    62cc:	f7 d8                	neg    eax
    62ce:	85 c0                	test   eax,eax
    62d0:	75 02                	jne    62d4 <deny_conf_parser+0xa4>
    62d2:	eb 6a                	jmp    633e <deny_conf_parser+0x10e>
    62d4:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    62d8:	48 8d 35 22 6b 00 00 	lea    rsi,[rip+0x6b22]        # ce01 <_IO_stdin_used+0xe01>
    62df:	48 89 c7             	mov    rdi,rax
    62e2:	e8 d9 c5 ff ff       	call   28c0 <strstr@plt>
    62e7:	48 85 c0             	test   rax,rax
    62ea:	74 52                	je     633e <deny_conf_parser+0x10e>
    62ec:	8b 05 1e ad 00 00    	mov    eax,DWORD PTR [rip+0xad1e]        # 11010 <blk_ipv4_len>
    62f2:	83 c0 01             	add    eax,0x1
    62f5:	89 05 15 ad 00 00    	mov    DWORD PTR [rip+0xad15],eax        # 11010 <blk_ipv4_len>
    62fb:	8b 05 0f ad 00 00    	mov    eax,DWORD PTR [rip+0xad0f]        # 11010 <blk_ipv4_len>
    6301:	48 63 d0             	movsxd rdx,eax
    6304:	48 89 d0             	mov    rax,rdx
    6307:	48 c1 e0 03          	shl    rax,0x3
    630b:	48 01 d0             	add    rax,rdx
    630e:	48 01 c0             	add    rax,rax
    6311:	48 8d 15 c8 3e 10 00 	lea    rdx,[rip+0x103ec8]        # 10a1e0 <blocked_ipv4_addrs>
    6318:	48 01 d0             	add    rax,rdx
    631b:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    631f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6323:	48 83 c0 05          	add    rax,0x5
    6327:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    632b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    632f:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    6333:	48 89 d6             	mov    rsi,rdx
    6336:	48 89 c7             	mov    rdi,rax
    6339:	e8 b2 c1 ff ff       	call   24f0 <strcpy@plt>
    633e:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    6342:	48 8d 4d d0          	lea    rcx,[rbp-0x30]
    6346:	48 8d 45 c8          	lea    rax,[rbp-0x38]
    634a:	48 89 ce             	mov    rsi,rcx
    634d:	48 89 c7             	mov    rdi,rax
    6350:	e8 db c4 ff ff       	call   2830 <getline@plt>
    6355:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    6359:	48 83 7d e0 ff       	cmp    QWORD PTR [rbp-0x20],0xffffffffffffffff
    635e:	0f 85 40 ff ff ff    	jne    62a4 <deny_conf_parser+0x74>
    6364:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6368:	48 85 c0             	test   rax,rax
    636b:	74 0c                	je     6379 <deny_conf_parser+0x149>
    636d:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6371:	48 89 c7             	mov    rdi,rax
    6374:	e8 17 c1 ff ff       	call   2490 <free@plt>
    6379:	90                   	nop
    637a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    637e:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    6385:	00 00 
    6387:	74 05                	je     638e <deny_conf_parser+0x15e>
    6389:	e8 22 c2 ff ff       	call   25b0 <__stack_chk_fail@plt>
    638e:	c9                   	leave  
    638f:	c3                   	ret    

0000000000006390 <host_mon_parser>:
    6390:	f3 0f 1e fa          	endbr64 
    6394:	55                   	push   rbp
    6395:	48 89 e5             	mov    rbp,rsp
    6398:	48 83 ec 10          	sub    rsp,0x10
    639c:	48 8b 05 95 ac 00 00 	mov    rax,QWORD PTR [rip+0xac95]        # 11038 <default_host_conf>
    63a3:	48 8d 35 6e 67 00 00 	lea    rsi,[rip+0x676e]        # cb18 <_IO_stdin_used+0xb18>
    63aa:	48 89 c7             	mov    rdi,rax
    63ad:	e8 fe c3 ff ff       	call   27b0 <fopen@plt>
    63b2:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    63b6:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    63bb:	75 25                	jne    63e2 <host_mon_parser+0x52>
    63bd:	48 8b 05 74 ac 00 00 	mov    rax,QWORD PTR [rip+0xac74]        # 11038 <default_host_conf>
    63c4:	48 89 c6             	mov    rsi,rax
    63c7:	48 8d 3d 38 6a 00 00 	lea    rdi,[rip+0x6a38]        # ce06 <_IO_stdin_used+0xe06>
    63ce:	b8 00 00 00 00       	mov    eax,0x0
    63d3:	e8 18 c2 ff ff       	call   25f0 <printf@plt>
    63d8:	bf 01 00 00 00       	mov    edi,0x1
    63dd:	e8 9e c4 ff ff       	call   2880 <exit@plt>
    63e2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    63e6:	48 89 c7             	mov    rdi,rax
    63e9:	e8 82 c1 ff ff       	call   2570 <fclose@plt>
    63ee:	90                   	nop
    63ef:	c9                   	leave  
    63f0:	c3                   	ret    

00000000000063f1 <test_encrypt>:
    63f1:	f3 0f 1e fa          	endbr64 
    63f5:	55                   	push   rbp
    63f6:	48 89 e5             	mov    rbp,rsp
    63f9:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    63fd:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    6401:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6405:	0f b6 80 48 01 00 00 	movzx  eax,BYTE PTR [rax+0x148]
    640c:	84 c0                	test   al,al
    640e:	74 13                	je     6423 <test_encrypt+0x32>
    6410:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6414:	0f b6 40 38          	movzx  eax,BYTE PTR [rax+0x38]
    6418:	84 c0                	test   al,al
    641a:	74 07                	je     6423 <test_encrypt+0x32>
    641c:	b8 00 00 00 00       	mov    eax,0x0
    6421:	eb 05                	jmp    6428 <test_encrypt+0x37>
    6423:	b8 01 00 00 00       	mov    eax,0x1
    6428:	5d                   	pop    rbp
    6429:	c3                   	ret    

000000000000642a <rule_app>:
    642a:	f3 0f 1e fa          	endbr64 
    642e:	55                   	push   rbp
    642f:	48 89 e5             	mov    rbp,rsp
    6432:	48 83 ec 20          	sub    rsp,0x20
    6436:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    643a:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    643e:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    6442:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6446:	48 89 d6             	mov    rsi,rdx
    6449:	48 89 c7             	mov    rdi,rax
    644c:	e8 55 03 00 00       	call   67a6 <r_engine>
    6451:	88 45 fd             	mov    BYTE PTR [rbp-0x3],al
    6454:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    6458:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    645c:	48 89 d6             	mov    rsi,rdx
    645f:	48 89 c7             	mov    rdi,rax
    6462:	e8 01 4a 00 00       	call   ae68 <d_engine>
    6467:	88 45 fe             	mov    BYTE PTR [rbp-0x2],al
    646a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    646e:	48 8b 88 78 03 00 00 	mov    rcx,QWORD PTR [rax+0x378]
    6475:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6479:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    647d:	48 89 d6             	mov    rsi,rdx
    6480:	48 89 c7             	mov    rdi,rax
    6483:	ff d1                	call   rcx
    6485:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
    6488:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
    648c:	74 40                	je     64ce <rule_app+0xa4>
    648e:	80 7d fd 00          	cmp    BYTE PTR [rbp-0x3],0x0
    6492:	74 3a                	je     64ce <rule_app+0xa4>
    6494:	80 7d fe 00          	cmp    BYTE PTR [rbp-0x2],0x0
    6498:	74 34                	je     64ce <rule_app+0xa4>
    649a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    649e:	4c 8b 80 80 03 00 00 	mov    r8,QWORD PTR [rax+0x380]
    64a5:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    64a9:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    64ad:	ba 00 00 00 00       	mov    edx,0x0
    64b2:	48 89 ce             	mov    rsi,rcx
    64b5:	48 89 c7             	mov    rdi,rax
    64b8:	41 ff d0             	call   r8
    64bb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    64bf:	8b 40 3c             	mov    eax,DWORD PTR [rax+0x3c]
    64c2:	8d 50 01             	lea    edx,[rax+0x1]
    64c5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    64c9:	89 50 3c             	mov    DWORD PTR [rax+0x3c],edx
    64cc:	eb 17                	jmp    64e5 <rule_app+0xbb>
    64ce:	8b 05 50 ab 00 00    	mov    eax,DWORD PTR [rip+0xab50]        # 11024 <VIGIL_MODE>
    64d4:	83 f8 02             	cmp    eax,0x2
    64d7:	75 0c                	jne    64e5 <rule_app+0xbb>
    64d9:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    64dd:	48 89 c7             	mov    rdi,rax
    64e0:	e8 86 25 00 00       	call   8a6b <forward_packet>
    64e5:	90                   	nop
    64e6:	c9                   	leave  
    64e7:	c3                   	ret    

00000000000064e8 <rulemgr>:
    64e8:	f3 0f 1e fa          	endbr64 
    64ec:	55                   	push   rbp
    64ed:	48 89 e5             	mov    rbp,rsp
    64f0:	48 83 ec 20          	sub    rsp,0x20
    64f4:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    64f8:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    64ff:	e9 8f 02 00 00       	jmp    6793 <rulemgr+0x2ab>
    6504:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    6507:	8d 50 01             	lea    edx,[rax+0x1]
    650a:	89 55 f4             	mov    DWORD PTR [rbp-0xc],edx
    650d:	48 98                	cdqe   
    650f:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    6516:	48 8d 15 83 ab 00 00 	lea    rdx,[rip+0xab83]        # 110a0 <rules>
    651d:	48 01 d0             	add    rax,rdx
    6520:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    6524:	0f b6 05 2d 18 10 00 	movzx  eax,BYTE PTR [rip+0x10182d]        # 107d58 <in_test_mode>
    652b:	84 c0                	test   al,al
    652d:	74 30                	je     655f <rulemgr+0x77>
    652f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6533:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    6536:	83 f8 46             	cmp    eax,0x46
    6539:	75 0d                	jne    6548 <rulemgr+0x60>
    653b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    653f:	c7 40 10 45 00 00 00 	mov    DWORD PTR [rax+0x10],0x45
    6546:	eb 17                	jmp    655f <rulemgr+0x77>
    6548:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    654c:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    654f:	83 f8 45             	cmp    eax,0x45
    6552:	75 0b                	jne    655f <rulemgr+0x77>
    6554:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6558:	c7 40 10 46 00 00 00 	mov    DWORD PTR [rax+0x10],0x46
    655f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6563:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    6569:	83 f8 ff             	cmp    eax,0xffffffff
    656c:	74 19                	je     6587 <rulemgr+0x9f>
    656e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6572:	8b 50 2c             	mov    edx,DWORD PTR [rax+0x2c]
    6575:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6579:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    657f:	39 c2                	cmp    edx,eax
    6581:	0f 85 0c 02 00 00    	jne    6793 <rulemgr+0x2ab>
    6587:	0f b6 05 c2 17 10 00 	movzx  eax,BYTE PTR [rip+0x1017c2]        # 107d50 <demo_mode>
    658e:	84 c0                	test   al,al
    6590:	75 0f                	jne    65a1 <rulemgr+0xb9>
    6592:	8b 05 48 17 10 00    	mov    eax,DWORD PTR [rip+0x101748]        # 107ce0 <vigil_location>
    6598:	83 f8 03             	cmp    eax,0x3
    659b:	0f 85 a1 00 00 00    	jne    6642 <rulemgr+0x15a>
    65a1:	8b 05 39 17 10 00    	mov    eax,DWORD PTR [rip+0x101739]        # 107ce0 <vigil_location>
    65a7:	83 f8 03             	cmp    eax,0x3
    65aa:	0f 85 e3 01 00 00    	jne    6793 <rulemgr+0x2ab>
    65b0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65b4:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    65b7:	83 f8 ff             	cmp    eax,0xffffffff
    65ba:	74 16                	je     65d2 <rulemgr+0xea>
    65bc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65c0:	8b 50 0c             	mov    edx,DWORD PTR [rax+0xc]
    65c3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    65c7:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    65ca:	39 c2                	cmp    edx,eax
    65cc:	0f 85 c1 01 00 00    	jne    6793 <rulemgr+0x2ab>
    65d2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65d6:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    65d9:	83 f8 ff             	cmp    eax,0xffffffff
    65dc:	74 16                	je     65f4 <rulemgr+0x10c>
    65de:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65e2:	8b 50 08             	mov    edx,DWORD PTR [rax+0x8]
    65e5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    65e9:	8b 40 28             	mov    eax,DWORD PTR [rax+0x28]
    65ec:	39 c2                	cmp    edx,eax
    65ee:	0f 85 9f 01 00 00    	jne    6793 <rulemgr+0x2ab>
    65f4:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    65f8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65fc:	48 89 d6             	mov    rsi,rdx
    65ff:	48 89 c7             	mov    rdi,rax
    6602:	e8 97 03 00 00       	call   699e <test_tcp_session_status>
    6607:	84 c0                	test   al,al
    6609:	0f 84 84 01 00 00    	je     6793 <rulemgr+0x2ab>
    660f:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6613:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6617:	48 89 d6             	mov    rsi,rdx
    661a:	48 89 c7             	mov    rdi,rax
    661d:	e8 cf fd ff ff       	call   63f1 <test_encrypt>
    6622:	84 c0                	test   al,al
    6624:	0f 84 69 01 00 00    	je     6793 <rulemgr+0x2ab>
    662a:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    662e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6632:	48 89 d6             	mov    rsi,rdx
    6635:	48 89 c7             	mov    rdi,rax
    6638:	e8 ed fd ff ff       	call   642a <rule_app>
    663d:	e9 51 01 00 00       	jmp    6793 <rulemgr+0x2ab>
    6642:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6646:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    6649:	83 f8 47             	cmp    eax,0x47
    664c:	74 16                	je     6664 <rulemgr+0x17c>
    664e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6652:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    6655:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6659:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    665c:	39 c2                	cmp    edx,eax
    665e:	0f 85 2f 01 00 00    	jne    6793 <rulemgr+0x2ab>
    6664:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6668:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    666e:	3d 80 00 00 00       	cmp    eax,0x80
    6673:	75 18                	jne    668d <rulemgr+0x1a5>
    6675:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6679:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    667d:	48 89 d6             	mov    rsi,rdx
    6680:	48 89 c7             	mov    rdi,rax
    6683:	e8 a2 fd ff ff       	call   642a <rule_app>
    6688:	e9 06 01 00 00       	jmp    6793 <rulemgr+0x2ab>
    668d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6691:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    6694:	83 f8 47             	cmp    eax,0x47
    6697:	75 7d                	jne    6716 <rulemgr+0x22e>
    6699:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    669d:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    66a0:	83 f8 ff             	cmp    eax,0xffffffff
    66a3:	74 28                	je     66cd <rulemgr+0x1e5>
    66a5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    66a9:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    66ac:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66b0:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    66b3:	39 c2                	cmp    edx,eax
    66b5:	74 16                	je     66cd <rulemgr+0x1e5>
    66b7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    66bb:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    66be:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66c2:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    66c5:	39 c2                	cmp    edx,eax
    66c7:	0f 85 c6 00 00 00    	jne    6793 <rulemgr+0x2ab>
    66cd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66d1:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    66d4:	83 f8 ff             	cmp    eax,0xffffffff
    66d7:	74 28                	je     6701 <rulemgr+0x219>
    66d9:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    66dd:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    66e0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66e4:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    66e7:	39 c2                	cmp    edx,eax
    66e9:	74 16                	je     6701 <rulemgr+0x219>
    66eb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    66ef:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    66f2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66f6:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    66f9:	39 c2                	cmp    edx,eax
    66fb:	0f 85 92 00 00 00    	jne    6793 <rulemgr+0x2ab>
    6701:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6705:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6709:	48 89 d6             	mov    rsi,rdx
    670c:	48 89 c7             	mov    rdi,rax
    670f:	e8 16 fd ff ff       	call   642a <rule_app>
    6714:	eb 7d                	jmp    6793 <rulemgr+0x2ab>
    6716:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    671a:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    671d:	83 f8 ff             	cmp    eax,0xffffffff
    6720:	74 12                	je     6734 <rulemgr+0x24c>
    6722:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6726:	8b 50 0c             	mov    edx,DWORD PTR [rax+0xc]
    6729:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    672d:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    6730:	39 c2                	cmp    edx,eax
    6732:	75 5f                	jne    6793 <rulemgr+0x2ab>
    6734:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6738:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    673b:	83 f8 ff             	cmp    eax,0xffffffff
    673e:	74 12                	je     6752 <rulemgr+0x26a>
    6740:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6744:	8b 50 08             	mov    edx,DWORD PTR [rax+0x8]
    6747:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    674b:	8b 40 28             	mov    eax,DWORD PTR [rax+0x28]
    674e:	39 c2                	cmp    edx,eax
    6750:	75 41                	jne    6793 <rulemgr+0x2ab>
    6752:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6756:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    675a:	48 89 d6             	mov    rsi,rdx
    675d:	48 89 c7             	mov    rdi,rax
    6760:	e8 39 02 00 00       	call   699e <test_tcp_session_status>
    6765:	84 c0                	test   al,al
    6767:	74 2a                	je     6793 <rulemgr+0x2ab>
    6769:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    676d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6771:	48 89 d6             	mov    rsi,rdx
    6774:	48 89 c7             	mov    rdi,rax
    6777:	e8 75 fc ff ff       	call   63f1 <test_encrypt>
    677c:	84 c0                	test   al,al
    677e:	74 13                	je     6793 <rulemgr+0x2ab>
    6780:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6784:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6788:	48 89 d6             	mov    rsi,rdx
    678b:	48 89 c7             	mov    rdi,rax
    678e:	e8 97 fc ff ff       	call   642a <rule_app>
    6793:	8b 05 7b a8 00 00    	mov    eax,DWORD PTR [rip+0xa87b]        # 11014 <num_rules>
    6799:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    679c:	0f 8e 62 fd ff ff    	jle    6504 <rulemgr+0x1c>
    67a2:	90                   	nop
    67a3:	90                   	nop
    67a4:	c9                   	leave  
    67a5:	c3                   	ret    

00000000000067a6 <r_engine>:
    67a6:	f3 0f 1e fa          	endbr64 
    67aa:	55                   	push   rbp
    67ab:	48 89 e5             	mov    rbp,rsp
    67ae:	48 83 ec 10          	sub    rsp,0x10
    67b2:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    67b6:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    67ba:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    67be:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    67c1:	3d 80 00 00 00       	cmp    eax,0x80
    67c6:	0f 85 d9 00 00 00    	jne    68a5 <r_engine+0xff>
    67cc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67d0:	0f b6 80 6f 03 00 00 	movzx  eax,BYTE PTR [rax+0x36f]
    67d7:	84 c0                	test   al,al
    67d9:	74 25                	je     6800 <r_engine+0x5a>
    67db:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    67df:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    67e3:	0f b6 50 01          	movzx  edx,BYTE PTR [rax+0x1]
    67e7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67eb:	0f b6 80 73 03 00 00 	movzx  eax,BYTE PTR [rax+0x373]
    67f2:	38 c2                	cmp    dl,al
    67f4:	74 0a                	je     6800 <r_engine+0x5a>
    67f6:	b8 00 00 00 00       	mov    eax,0x0
    67fb:	e9 9c 01 00 00       	jmp    699c <r_engine+0x1f6>
    6800:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6804:	0f b6 80 71 03 00 00 	movzx  eax,BYTE PTR [rax+0x371]
    680b:	84 c0                	test   al,al
    680d:	74 26                	je     6835 <r_engine+0x8f>
    680f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6813:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    6817:	0f b7 50 04          	movzx  edx,WORD PTR [rax+0x4]
    681b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    681f:	0f b7 80 76 03 00 00 	movzx  eax,WORD PTR [rax+0x376]
    6826:	66 39 c2             	cmp    dx,ax
    6829:	74 0a                	je     6835 <r_engine+0x8f>
    682b:	b8 00 00 00 00       	mov    eax,0x0
    6830:	e9 67 01 00 00       	jmp    699c <r_engine+0x1f6>
    6835:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6839:	0f b6 80 70 03 00 00 	movzx  eax,BYTE PTR [rax+0x370]
    6840:	84 c0                	test   al,al
    6842:	74 26                	je     686a <r_engine+0xc4>
    6844:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6848:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    684c:	0f b7 50 06          	movzx  edx,WORD PTR [rax+0x6]
    6850:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6854:	0f b7 80 74 03 00 00 	movzx  eax,WORD PTR [rax+0x374]
    685b:	66 39 c2             	cmp    dx,ax
    685e:	74 0a                	je     686a <r_engine+0xc4>
    6860:	b8 00 00 00 00       	mov    eax,0x0
    6865:	e9 32 01 00 00       	jmp    699c <r_engine+0x1f6>
    686a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    686e:	0f b6 80 6e 03 00 00 	movzx  eax,BYTE PTR [rax+0x36e]
    6875:	84 c0                	test   al,al
    6877:	0f 84 dc 00 00 00    	je     6959 <r_engine+0x1b3>
    687d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6881:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    6885:	0f b6 10             	movzx  edx,BYTE PTR [rax]
    6888:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    688c:	0f b6 80 72 03 00 00 	movzx  eax,BYTE PTR [rax+0x372]
    6893:	38 c2                	cmp    dl,al
    6895:	0f 84 be 00 00 00    	je     6959 <r_engine+0x1b3>
    689b:	b8 00 00 00 00       	mov    eax,0x0
    68a0:	e9 f7 00 00 00       	jmp    699c <r_engine+0x1f6>
    68a5:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    68a9:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    68ac:	83 f8 7e             	cmp    eax,0x7e
    68af:	0f 85 a4 00 00 00    	jne    6959 <r_engine+0x1b3>
    68b5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    68b9:	0f b6 80 51 03 00 00 	movzx  eax,BYTE PTR [rax+0x351]
    68c0:	84 c0                	test   al,al
    68c2:	74 2e                	je     68f2 <r_engine+0x14c>
    68c4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    68c8:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    68cc:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    68cf:	89 c7                	mov    edi,eax
    68d1:	e8 ba bf ff ff       	call   2890 <ntohl@plt>
    68d6:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    68da:	0f b7 92 5c 03 00 00 	movzx  edx,WORD PTR [rdx+0x35c]
    68e1:	0f b7 d2             	movzx  edx,dx
    68e4:	39 d0                	cmp    eax,edx
    68e6:	74 0a                	je     68f2 <r_engine+0x14c>
    68e8:	b8 00 00 00 00       	mov    eax,0x0
    68ed:	e9 aa 00 00 00       	jmp    699c <r_engine+0x1f6>
    68f2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    68f6:	0f b6 80 50 03 00 00 	movzx  eax,BYTE PTR [rax+0x350]
    68fd:	84 c0                	test   al,al
    68ff:	74 29                	je     692a <r_engine+0x184>
    6901:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6905:	48 8d 90 53 03 00 00 	lea    rdx,[rax+0x353]
    690c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6910:	48 83 c0 68          	add    rax,0x68
    6914:	48 89 d6             	mov    rsi,rdx
    6917:	48 89 c7             	mov    rdi,rax
    691a:	e8 91 bd ff ff       	call   26b0 <strcmp@plt>
    691f:	85 c0                	test   eax,eax
    6921:	74 07                	je     692a <r_engine+0x184>
    6923:	b8 00 00 00 00       	mov    eax,0x0
    6928:	eb 72                	jmp    699c <r_engine+0x1f6>
    692a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    692e:	0f b6 80 52 03 00 00 	movzx  eax,BYTE PTR [rax+0x352]
    6935:	84 c0                	test   al,al
    6937:	74 20                	je     6959 <r_engine+0x1b3>
    6939:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    693d:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    6941:	8b 50 04             	mov    edx,DWORD PTR [rax+0x4]
    6944:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6948:	8b 80 60 03 00 00    	mov    eax,DWORD PTR [rax+0x360]
    694e:	39 c2                	cmp    edx,eax
    6950:	74 07                	je     6959 <r_engine+0x1b3>
    6952:	b8 00 00 00 00       	mov    eax,0x0
    6957:	eb 43                	jmp    699c <r_engine+0x1f6>
    6959:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    695d:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    6961:	48 85 c0             	test   rax,rax
    6964:	74 31                	je     6997 <r_engine+0x1f1>
    6966:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    696a:	0f b6 80 69 03 00 00 	movzx  eax,BYTE PTR [rax+0x369]
    6971:	84 c0                	test   al,al
    6973:	74 22                	je     6997 <r_engine+0x1f1>
    6975:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6979:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    697d:	0f b6 50 08          	movzx  edx,BYTE PTR [rax+0x8]
    6981:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6985:	0f b6 80 6c 03 00 00 	movzx  eax,BYTE PTR [rax+0x36c]
    698c:	38 c2                	cmp    dl,al
    698e:	74 07                	je     6997 <r_engine+0x1f1>
    6990:	b8 00 00 00 00       	mov    eax,0x0
    6995:	eb 05                	jmp    699c <r_engine+0x1f6>
    6997:	b8 01 00 00 00       	mov    eax,0x1
    699c:	c9                   	leave  
    699d:	c3                   	ret    

000000000000699e <test_tcp_session_status>:
    699e:	f3 0f 1e fa          	endbr64 
    69a2:	55                   	push   rbp
    69a3:	48 89 e5             	mov    rbp,rsp
    69a6:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    69aa:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    69ae:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    69b2:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    69b8:	83 f8 7e             	cmp    eax,0x7e
    69bb:	75 34                	jne    69f1 <test_tcp_session_status+0x53>
    69bd:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    69c1:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    69c4:	83 f8 7e             	cmp    eax,0x7e
    69c7:	75 28                	jne    69f1 <test_tcp_session_status+0x53>
    69c9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    69cd:	8b 80 48 03 00 00    	mov    eax,DWORD PTR [rax+0x348]
    69d3:	83 f8 01             	cmp    eax,0x1
    69d6:	75 12                	jne    69ea <test_tcp_session_status+0x4c>
    69d8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    69dc:	8b 40 70             	mov    eax,DWORD PTR [rax+0x70]
    69df:	85 c0                	test   eax,eax
    69e1:	75 07                	jne    69ea <test_tcp_session_status+0x4c>
    69e3:	b8 00 00 00 00       	mov    eax,0x0
    69e8:	eb 0c                	jmp    69f6 <test_tcp_session_status+0x58>
    69ea:	b8 01 00 00 00       	mov    eax,0x1
    69ef:	eb 05                	jmp    69f6 <test_tcp_session_status+0x58>
    69f1:	b8 01 00 00 00       	mov    eax,0x1
    69f6:	5d                   	pop    rbp
    69f7:	c3                   	ret    

00000000000069f8 <main>:
    69f8:	f3 0f 1e fa          	endbr64 
    69fc:	55                   	push   rbp
    69fd:	48 89 e5             	mov    rbp,rsp
    6a00:	48 81 ec 40 08 00 00 	sub    rsp,0x840
    6a07:	89 bd cc f7 ff ff    	mov    DWORD PTR [rbp-0x834],edi
    6a0d:	48 89 b5 c0 f7 ff ff 	mov    QWORD PTR [rbp-0x840],rsi
    6a14:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6a1b:	00 00 
    6a1d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    6a21:	31 c0                	xor    eax,eax
    6a23:	b8 00 00 00 00       	mov    eax,0x0
    6a28:	e8 6d 4e 00 00       	call   b89a <load_fn_mem_map>
    6a2d:	48 8d 35 ca 02 00 00 	lea    rsi,[rip+0x2ca]        # 6cfe <sigint_processor>
    6a34:	bf 02 00 00 00       	mov    edi,0x2
    6a39:	e8 82 bc ff ff       	call   26c0 <signal@plt>
    6a3e:	48 8d 05 d8 4a 00 00 	lea    rax,[rip+0x4ad8]        # b51d <crash_handler>
    6a45:	48 89 c6             	mov    rsi,rax
    6a48:	bf 0b 00 00 00       	mov    edi,0xb
    6a4d:	e8 6e bc ff ff       	call   26c0 <signal@plt>
    6a52:	b8 00 00 00 00       	mov    eax,0x0
    6a57:	e8 d8 08 00 00       	call   7334 <print_logo>
    6a5c:	b8 00 00 00 00       	mov    eax,0x0
    6a61:	e8 17 07 00 00       	call   717d <print_cpu_info>
    6a66:	c7 05 e4 12 10 00 01 	mov    DWORD PTR [rip+0x1012e4],0x1        # 107d54 <is_running>
    6a6d:	00 00 00 
    6a70:	bf 00 00 00 00       	mov    edi,0x0
    6a75:	e8 86 bc ff ff       	call   2700 <time@plt>
    6a7a:	48 89 05 e7 14 10 00 	mov    QWORD PTR [rip+0x1014e7],rax        # 107f68 <last_clean_time>
    6a81:	83 bd cc f7 ff ff 01 	cmp    DWORD PTR [rbp-0x834],0x1
    6a88:	0f 85 e3 00 00 00    	jne    6b71 <main+0x179>
    6a8e:	b8 00 00 00 00       	mov    eax,0x0
    6a93:	e8 bb 06 00 00       	call   7153 <print_help_and_exit>
    6a98:	e9 d4 00 00 00       	jmp    6b71 <main+0x179>
    6a9d:	8b 85 dc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x824]
    6aa3:	83 e8 64             	sub    eax,0x64
    6aa6:	83 f8 10             	cmp    eax,0x10
    6aa9:	0f 87 9e 00 00 00    	ja     6b4d <main+0x155>
    6aaf:	89 c0                	mov    eax,eax
    6ab1:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    6ab8:	00 
    6ab9:	48 8d 05 e4 64 00 00 	lea    rax,[rip+0x64e4]        # cfa4 <_IO_stdin_used+0xfa4>
    6ac0:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    6ac3:	48 98                	cdqe   
    6ac5:	48 8d 15 d8 64 00 00 	lea    rdx,[rip+0x64d8]        # cfa4 <_IO_stdin_used+0xfa4>
    6acc:	48 01 d0             	add    rax,rdx
    6acf:	3e ff e0             	notrack jmp rax
    6ad2:	c6 05 e9 36 10 00 01 	mov    BYTE PTR [rip+0x1036e9],0x1        # 10a1c2 <debug_mode>
    6ad9:	e9 93 00 00 00       	jmp    6b71 <main+0x179>
    6ade:	b8 00 00 00 00       	mov    eax,0x0
    6ae3:	e8 6b 06 00 00       	call   7153 <print_help_and_exit>
    6ae8:	e9 84 00 00 00       	jmp    6b71 <main+0x179>
    6aed:	48 8b 05 6c a5 00 00 	mov    rax,QWORD PTR [rip+0xa56c]        # 11060 <optarg@@GLIBC_2.2.5>
    6af4:	48 89 85 e0 f7 ff ff 	mov    QWORD PTR [rbp-0x820],rax
    6afb:	eb 74                	jmp    6b71 <main+0x179>
    6afd:	c6 05 55 12 10 00 01 	mov    BYTE PTR [rip+0x101255],0x1        # 107d59 <packet_print>
    6b04:	eb 6b                	jmp    6b71 <main+0x179>
    6b06:	c6 05 97 0d 10 00 01 	mov    BYTE PTR [rip+0x100d97],0x1        # 1078a4 <quiet_exit>
    6b0d:	eb 62                	jmp    6b71 <main+0x179>
    6b0f:	48 8d 3d 0a 63 00 00 	lea    rdi,[rip+0x630a]        # ce20 <_IO_stdin_used+0xe20>
    6b16:	e8 05 ba ff ff       	call   2520 <puts@plt>
    6b1b:	bf 0a 00 00 00       	mov    edi,0xa
    6b20:	e8 7b bd ff ff       	call   28a0 <sleep@plt>
    6b25:	c6 05 24 12 10 00 01 	mov    BYTE PTR [rip+0x101224],0x1        # 107d50 <demo_mode>
    6b2c:	eb 43                	jmp    6b71 <main+0x179>
    6b2e:	48 8d 3d 2b 63 00 00 	lea    rdi,[rip+0x632b]        # ce60 <_IO_stdin_used+0xe60>
    6b35:	e8 e6 b9 ff ff       	call   2520 <puts@plt>
    6b3a:	bf 0a 00 00 00       	mov    edi,0xa
    6b3f:	e8 5c bd ff ff       	call   28a0 <sleep@plt>
    6b44:	c6 05 0d 12 10 00 01 	mov    BYTE PTR [rip+0x10120d],0x1        # 107d58 <in_test_mode>
    6b4b:	eb 24                	jmp    6b71 <main+0x179>
    6b4d:	8b 85 dc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x824]
    6b53:	89 c6                	mov    esi,eax
    6b55:	48 8d 3d 38 63 00 00 	lea    rdi,[rip+0x6338]        # ce94 <_IO_stdin_used+0xe94>
    6b5c:	b8 00 00 00 00       	mov    eax,0x0
    6b61:	e8 8a ba ff ff       	call   25f0 <printf@plt>
    6b66:	b8 00 00 00 00       	mov    eax,0x0
    6b6b:	e8 e3 05 00 00       	call   7153 <print_help_and_exit>
    6b70:	90                   	nop
    6b71:	48 8b 8d c0 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x840]
    6b78:	8b 85 cc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x834]
    6b7e:	48 8d 15 25 63 00 00 	lea    rdx,[rip+0x6325]        # ceaa <_IO_stdin_used+0xeaa>
    6b85:	48 89 ce             	mov    rsi,rcx
    6b88:	89 c7                	mov    edi,eax
    6b8a:	e8 71 bc ff ff       	call   2800 <getopt@plt>
    6b8f:	89 85 dc f7 ff ff    	mov    DWORD PTR [rbp-0x824],eax
    6b95:	83 bd dc f7 ff ff ff 	cmp    DWORD PTR [rbp-0x824],0xffffffff
    6b9c:	0f 85 fb fe ff ff    	jne    6a9d <main+0xa5>
    6ba2:	48 8d 3d 0a 63 00 00 	lea    rdi,[rip+0x630a]        # ceb3 <_IO_stdin_used+0xeb3>
    6ba9:	e8 82 f6 ff ff       	call   6230 <deny_conf_parser>
    6bae:	48 8d 3d 13 63 00 00 	lea    rdi,[rip+0x6313]        # cec8 <_IO_stdin_used+0xec8>
    6bb5:	e8 66 b9 ff ff       	call   2520 <puts@plt>
    6bba:	48 8d 3d 42 63 00 00 	lea    rdi,[rip+0x6342]        # cf03 <_IO_stdin_used+0xf03>
    6bc1:	e8 3b ee ff ff       	call   5a01 <rule_library_parser>
    6bc6:	48 8d 3d 4c 63 00 00 	lea    rdi,[rip+0x634c]        # cf19 <_IO_stdin_used+0xf19>
    6bcd:	e8 4e b9 ff ff       	call   2520 <puts@plt>
    6bd2:	b8 00 00 00 00       	mov    eax,0x0
    6bd7:	e8 5d 3e 00 00       	call   aa39 <rule_processor>
    6bdc:	48 8b 85 e0 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x820]
    6be3:	48 89 c6             	mov    rsi,rax
    6be6:	48 8d 3d 43 63 00 00 	lea    rdi,[rip+0x6343]        # cf30 <_IO_stdin_used+0xf30>
    6bed:	b8 00 00 00 00       	mov    eax,0x0
    6bf2:	e8 f9 b9 ff ff       	call   25f0 <printf@plt>
    6bf7:	48 c7 85 f0 f7 ff ff 	mov    QWORD PTR [rbp-0x810],0x0
    6bfe:	00 00 00 00 
    6c02:	48 c7 85 f8 f7 ff ff 	mov    QWORD PTR [rbp-0x808],0x0
    6c09:	00 00 00 00 
    6c0d:	48 8d 95 00 f8 ff ff 	lea    rdx,[rbp-0x800]
    6c14:	b8 00 00 00 00       	mov    eax,0x0
    6c19:	b9 fd 00 00 00       	mov    ecx,0xfd
    6c1e:	48 89 d7             	mov    rdi,rdx
    6c21:	f3 48 ab             	rep stos QWORD PTR es:[rdi],rax
    6c24:	48 89 fa             	mov    rdx,rdi
    6c27:	89 02                	mov    DWORD PTR [rdx],eax
    6c29:	48 83 c2 04          	add    rdx,0x4
    6c2d:	66 89 02             	mov    WORD PTR [rdx],ax
    6c30:	48 83 c2 02          	add    rdx,0x2
    6c34:	48 8d 95 f0 f7 ff ff 	lea    rdx,[rbp-0x810]
    6c3b:	48 8b 85 e0 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x820]
    6c42:	49 89 d0             	mov    r8,rdx
    6c45:	b9 64 00 00 00       	mov    ecx,0x64
    6c4a:	ba 01 00 00 00       	mov    edx,0x1
    6c4f:	be 00 04 00 00       	mov    esi,0x400
    6c54:	48 89 c7             	mov    rdi,rax
    6c57:	e8 f4 bb ff ff       	call   2850 <pcap_open_live@plt>
    6c5c:	48 89 85 e8 f7 ff ff 	mov    QWORD PTR [rbp-0x818],rax
    6c63:	48 83 bd e8 f7 ff ff 	cmp    QWORD PTR [rbp-0x818],0x0
    6c6a:	00 
    6c6b:	75 16                	jne    6c83 <main+0x28b>
    6c6d:	48 8d 3d dd 62 00 00 	lea    rdi,[rip+0x62dd]        # cf51 <_IO_stdin_used+0xf51>
    6c74:	e8 47 bb ff ff       	call   27c0 <perror@plt>
    6c79:	bf 01 00 00 00       	mov    edi,0x1
    6c7e:	e8 fd bb ff ff       	call   2880 <exit@plt>
    6c83:	b8 00 00 00 00       	mov    eax,0x0
    6c88:	e8 ea 45 00 00       	call   b277 <collect_scripts>
    6c8d:	b8 00 00 00 00       	mov    eax,0x0
    6c92:	e8 b4 06 00 00       	call   734b <start_nsh_server>
    6c97:	48 8d 3d d2 62 00 00 	lea    rdi,[rip+0x62d2]        # cf70 <_IO_stdin_used+0xf70>
    6c9e:	e8 7d b8 ff ff       	call   2520 <puts@plt>
    6ca3:	48 8b 85 e8 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x818]
    6caa:	b9 00 00 00 00       	mov    ecx,0x0
    6caf:	48 8d 15 4d bd ff ff 	lea    rdx,[rip+0xffffffffffffbd4d]        # 2a03 <pktmgr>
    6cb6:	be ff ff ff ff       	mov    esi,0xffffffff
    6cbb:	48 89 c7             	mov    rdi,rax
    6cbe:	e8 6d ba ff ff       	call   2730 <pcap_loop@plt>
    6cc3:	48 8b 85 e8 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x818]
    6cca:	b9 00 00 00 00       	mov    ecx,0x0
    6ccf:	48 8d 15 52 4d 00 00 	lea    rdx,[rip+0x4d52]        # ba28 <pps_monitor>
    6cd6:	be ff ff ff ff       	mov    esi,0xffffffff
    6cdb:	48 89 c7             	mov    rdi,rax
    6cde:	e8 4d ba ff ff       	call   2730 <pcap_loop@plt>
    6ce3:	b8 00 00 00 00       	mov    eax,0x0
    6ce8:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    6cec:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
    6cf3:	00 00 
    6cf5:	74 05                	je     6cfc <main+0x304>
    6cf7:	e8 b4 b8 ff ff       	call   25b0 <__stack_chk_fail@plt>
    6cfc:	c9                   	leave  
    6cfd:	c3                   	ret    

0000000000006cfe <sigint_processor>:
    6cfe:	f3 0f 1e fa          	endbr64 
    6d02:	55                   	push   rbp
    6d03:	48 89 e5             	mov    rbp,rsp
    6d06:	41 54                	push   r12
    6d08:	53                   	push   rbx
    6d09:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    6d10:	89 bd bc fe ff ff    	mov    DWORD PTR [rbp-0x144],edi
    6d16:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6d1d:	00 00 
    6d1f:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    6d23:	31 c0                	xor    eax,eax
    6d25:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    6d2c:	00 00 00 
    6d2f:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    6d36:	48 89 c7             	mov    rdi,rax
    6d39:	e8 36 c7 ff ff       	call   3474 <cb_get_formatted_time>
    6d3e:	48 8d 95 e0 fe ff ff 	lea    rdx,[rbp-0x120]
    6d45:	8b 85 bc fe ff ff    	mov    eax,DWORD PTR [rbp-0x144]
    6d4b:	89 c6                	mov    esi,eax
    6d4d:	48 8d 3d 94 62 00 00 	lea    rdi,[rip+0x6294]        # cfe8 <_IO_stdin_used+0xfe8>
    6d54:	b8 00 00 00 00       	mov    eax,0x0
    6d59:	e8 92 b8 ff ff       	call   25f0 <printf@plt>
    6d5e:	48 8d 3d a8 62 00 00 	lea    rdi,[rip+0x62a8]        # d00d <_IO_stdin_used+0x100d>
    6d65:	e8 56 ba ff ff       	call   27c0 <perror@plt>
    6d6a:	0f b6 05 33 0b 10 00 	movzx  eax,BYTE PTR [rip+0x100b33]        # 1078a4 <quiet_exit>
    6d71:	83 f0 01             	xor    eax,0x1
    6d74:	84 c0                	test   al,al
    6d76:	0f 84 2e 02 00 00    	je     6faa <sigint_processor+0x2ac>
    6d7c:	8b 05 02 a3 00 00    	mov    eax,DWORD PTR [rip+0xa302]        # 11084 <total_pkt_captured>
    6d82:	89 c6                	mov    esi,eax
    6d84:	48 8d 3d 83 62 00 00 	lea    rdi,[rip+0x6283]        # d00e <_IO_stdin_used+0x100e>
    6d8b:	b8 00 00 00 00       	mov    eax,0x0
    6d90:	e8 5b b8 ff ff       	call   25f0 <printf@plt>
    6d95:	48 8d 3d 8c 62 00 00 	lea    rdi,[rip+0x628c]        # d028 <_IO_stdin_used+0x1028>
    6d9c:	e8 7f b7 ff ff       	call   2520 <puts@plt>
    6da1:	c7 85 c4 fe ff ff 00 	mov    DWORD PTR [rbp-0x13c],0x0
    6da8:	00 00 00 
    6dab:	e9 e8 01 00 00       	jmp    6f98 <sigint_processor+0x29a>
    6db0:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6db6:	48 63 d0             	movsxd rdx,eax
    6db9:	48 89 d0             	mov    rax,rdx
    6dbc:	48 c1 e0 02          	shl    rax,0x2
    6dc0:	48 01 d0             	add    rax,rdx
    6dc3:	48 c1 e0 03          	shl    rax,0x3
    6dc7:	48 01 d0             	add    rax,rdx
    6dca:	48 c1 e0 04          	shl    rax,0x4
    6dce:	48 89 c2             	mov    rdx,rax
    6dd1:	48 8d 05 38 c5 0e 00 	lea    rax,[rip+0xec538]        # f3310 <watchlist+0x270>
    6dd8:	44 8b 1c 02          	mov    r11d,DWORD PTR [rdx+rax*1]
    6ddc:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6de2:	48 63 d0             	movsxd rdx,eax
    6de5:	48 89 d0             	mov    rax,rdx
    6de8:	48 c1 e0 02          	shl    rax,0x2
    6dec:	48 01 d0             	add    rax,rdx
    6def:	48 c1 e0 03          	shl    rax,0x3
    6df3:	48 01 d0             	add    rax,rdx
    6df6:	48 c1 e0 04          	shl    rax,0x4
    6dfa:	48 89 c2             	mov    rdx,rax
    6dfd:	48 8d 05 00 c5 0e 00 	lea    rax,[rip+0xec500]        # f3304 <watchlist+0x264>
    6e04:	44 8b 14 02          	mov    r10d,DWORD PTR [rdx+rax*1]
    6e08:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6e0e:	48 63 d0             	movsxd rdx,eax
    6e11:	48 89 d0             	mov    rax,rdx
    6e14:	48 c1 e0 02          	shl    rax,0x2
    6e18:	48 01 d0             	add    rax,rdx
    6e1b:	48 c1 e0 03          	shl    rax,0x3
    6e1f:	48 01 d0             	add    rax,rdx
    6e22:	48 c1 e0 04          	shl    rax,0x4
    6e26:	48 89 c2             	mov    rdx,rax
    6e29:	48 8d 05 dc c4 0e 00 	lea    rax,[rip+0xec4dc]        # f330c <watchlist+0x26c>
    6e30:	44 8b 0c 02          	mov    r9d,DWORD PTR [rdx+rax*1]
    6e34:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6e3a:	48 63 d0             	movsxd rdx,eax
    6e3d:	48 89 d0             	mov    rax,rdx
    6e40:	48 c1 e0 02          	shl    rax,0x2
    6e44:	48 01 d0             	add    rax,rdx
    6e47:	48 c1 e0 03          	shl    rax,0x3
    6e4b:	48 01 d0             	add    rax,rdx
    6e4e:	48 c1 e0 04          	shl    rax,0x4
    6e52:	48 89 c2             	mov    rdx,rax
    6e55:	48 8d 05 a4 c4 0e 00 	lea    rax,[rip+0xec4a4]        # f3300 <watchlist+0x260>
    6e5c:	44 8b 04 02          	mov    r8d,DWORD PTR [rdx+rax*1]
    6e60:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6e66:	48 63 d0             	movsxd rdx,eax
    6e69:	48 89 d0             	mov    rax,rdx
    6e6c:	48 c1 e0 02          	shl    rax,0x2
    6e70:	48 01 d0             	add    rax,rdx
    6e73:	48 c1 e0 03          	shl    rax,0x3
    6e77:	48 01 d0             	add    rax,rdx
    6e7a:	48 c1 e0 04          	shl    rax,0x4
    6e7e:	48 89 c2             	mov    rdx,rax
    6e81:	48 8d 05 80 c4 0e 00 	lea    rax,[rip+0xec480]        # f3308 <watchlist+0x268>
    6e88:	8b 3c 02             	mov    edi,DWORD PTR [rdx+rax*1]
    6e8b:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6e91:	48 63 d0             	movsxd rdx,eax
    6e94:	48 89 d0             	mov    rax,rdx
    6e97:	48 c1 e0 02          	shl    rax,0x2
    6e9b:	48 01 d0             	add    rax,rdx
    6e9e:	48 c1 e0 03          	shl    rax,0x3
    6ea2:	48 01 d0             	add    rax,rdx
    6ea5:	48 c1 e0 04          	shl    rax,0x4
    6ea9:	48 89 c2             	mov    rdx,rax
    6eac:	48 8d 05 49 c4 0e 00 	lea    rax,[rip+0xec449]        # f32fc <watchlist+0x25c>
    6eb3:	44 8b 24 02          	mov    r12d,DWORD PTR [rdx+rax*1]
    6eb7:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6ebd:	48 63 d0             	movsxd rdx,eax
    6ec0:	48 89 d0             	mov    rax,rdx
    6ec3:	48 c1 e0 02          	shl    rax,0x2
    6ec7:	48 01 d0             	add    rax,rdx
    6eca:	48 c1 e0 03          	shl    rax,0x3
    6ece:	48 01 d0             	add    rax,rdx
    6ed1:	48 c1 e0 04          	shl    rax,0x4
    6ed5:	48 89 c2             	mov    rdx,rax
    6ed8:	48 8d 05 3d c4 0e 00 	lea    rax,[rip+0xec43d]        # f331c <watchlist+0x27c>
    6edf:	8b 1c 02             	mov    ebx,DWORD PTR [rdx+rax*1]
    6ee2:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6ee8:	48 63 d0             	movsxd rdx,eax
    6eeb:	48 89 d0             	mov    rax,rdx
    6eee:	48 c1 e0 02          	shl    rax,0x2
    6ef2:	48 01 d0             	add    rax,rdx
    6ef5:	48 c1 e0 03          	shl    rax,0x3
    6ef9:	48 01 d0             	add    rax,rdx
    6efc:	48 c1 e0 04          	shl    rax,0x4
    6f00:	48 89 c2             	mov    rdx,rax
    6f03:	48 8d 05 16 c4 0e 00 	lea    rax,[rip+0xec416]        # f3320 <watchlist+0x280>
    6f0a:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
    6f0d:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6f13:	48 63 d0             	movsxd rdx,eax
    6f16:	48 89 d0             	mov    rax,rdx
    6f19:	48 c1 e0 02          	shl    rax,0x2
    6f1d:	48 01 d0             	add    rax,rdx
    6f20:	48 c1 e0 03          	shl    rax,0x3
    6f24:	48 01 d0             	add    rax,rdx
    6f27:	48 c1 e0 04          	shl    rax,0x4
    6f2b:	48 89 c2             	mov    rdx,rax
    6f2e:	48 8d 05 c3 c3 0e 00 	lea    rax,[rip+0xec3c3]        # f32f8 <watchlist+0x258>
    6f35:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
    6f38:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6f3e:	48 63 d0             	movsxd rdx,eax
    6f41:	48 89 d0             	mov    rax,rdx
    6f44:	48 c1 e0 02          	shl    rax,0x2
    6f48:	48 01 d0             	add    rax,rdx
    6f4b:	48 c1 e0 03          	shl    rax,0x3
    6f4f:	48 01 d0             	add    rax,rdx
    6f52:	48 c1 e0 04          	shl    rax,0x4
    6f56:	48 8d 15 43 c1 0e 00 	lea    rdx,[rip+0xec143]        # f30a0 <watchlist>
    6f5d:	48 01 d0             	add    rax,rdx
    6f60:	48 83 c0 08          	add    rax,0x8
    6f64:	48 83 ec 08          	sub    rsp,0x8
    6f68:	41 53                	push   r11
    6f6a:	41 52                	push   r10
    6f6c:	41 51                	push   r9
    6f6e:	41 50                	push   r8
    6f70:	57                   	push   rdi
    6f71:	45 89 e1             	mov    r9d,r12d
    6f74:	41 89 d8             	mov    r8d,ebx
    6f77:	89 f2                	mov    edx,esi
    6f79:	48 89 c6             	mov    rsi,rax
    6f7c:	48 8d 3d dd 60 00 00 	lea    rdi,[rip+0x60dd]        # d060 <_IO_stdin_used+0x1060>
    6f83:	b8 00 00 00 00       	mov    eax,0x0
    6f88:	e8 63 b6 ff ff       	call   25f0 <printf@plt>
    6f8d:	48 83 c4 30          	add    rsp,0x30
    6f91:	83 85 c4 fe ff ff 01 	add    DWORD PTR [rbp-0x13c],0x1
    6f98:	8b 05 7a a0 00 00    	mov    eax,DWORD PTR [rip+0xa07a]        # 11018 <watchlist_num>
    6f9e:	39 85 c4 fe ff ff    	cmp    DWORD PTR [rbp-0x13c],eax
    6fa4:	0f 8e 06 fe ff ff    	jle    6db0 <sigint_processor+0xb2>
    6faa:	48 8d 35 4f 61 00 00 	lea    rsi,[rip+0x614f]        # d100 <_IO_stdin_used+0x1100>
    6fb1:	48 8d 3d 4a 61 00 00 	lea    rdi,[rip+0x614a]        # d102 <_IO_stdin_used+0x1102>
    6fb8:	e8 f3 b7 ff ff       	call   27b0 <fopen@plt>
    6fbd:	48 89 85 d8 fe ff ff 	mov    QWORD PTR [rbp-0x128],rax
    6fc4:	48 83 bd d8 fe ff ff 	cmp    QWORD PTR [rbp-0x128],0x0
    6fcb:	00 
    6fcc:	0f 85 9d 00 00 00    	jne    706f <sigint_processor+0x371>
    6fd2:	48 8d 3d 47 61 00 00 	lea    rdi,[rip+0x6147]        # d120 <_IO_stdin_used+0x1120>
    6fd9:	e8 42 b5 ff ff       	call   2520 <puts@plt>
    6fde:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    6fe5:	48 89 c7             	mov    rdi,rax
    6fe8:	e8 83 b5 ff ff       	call   2570 <fclose@plt>
    6fed:	c7 85 c8 fe ff ff 00 	mov    DWORD PTR [rbp-0x138],0x0
    6ff4:	00 00 00 
    6ff7:	eb 63                	jmp    705c <sigint_processor+0x35e>
    6ff9:	8b 85 c8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x138]
    6fff:	48 63 d0             	movsxd rdx,eax
    7002:	48 89 d0             	mov    rax,rdx
    7005:	48 c1 e0 04          	shl    rax,0x4
    7009:	48 01 d0             	add    rax,rdx
    700c:	48 01 c0             	add    rax,rax
    700f:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7013:	48 8d 05 86 0f 10 00 	lea    rax,[rip+0x100f86]        # 107fa0 <arpcache>
    701a:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    701e:	8b 85 c8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x138]
    7024:	48 63 d0             	movsxd rdx,eax
    7027:	48 89 d0             	mov    rax,rdx
    702a:	48 c1 e0 04          	shl    rax,0x4
    702e:	48 01 d0             	add    rax,rdx
    7031:	48 01 c0             	add    rax,rax
    7034:	48 8d 15 65 0f 10 00 	lea    rdx,[rip+0x100f65]        # 107fa0 <arpcache>
    703b:	48 01 d0             	add    rax,rdx
    703e:	48 89 ca             	mov    rdx,rcx
    7041:	48 89 c6             	mov    rsi,rax
    7044:	48 8d 3d 1c 61 00 00 	lea    rdi,[rip+0x611c]        # d167 <_IO_stdin_used+0x1167>
    704b:	b8 00 00 00 00       	mov    eax,0x0
    7050:	e8 9b b5 ff ff       	call   25f0 <printf@plt>
    7055:	83 85 c8 fe ff ff 01 	add    DWORD PTR [rbp-0x138],0x1
    705c:	8b 05 ba 9f 00 00    	mov    eax,DWORD PTR [rip+0x9fba]        # 1101c <arp_entries>
    7062:	39 85 c8 fe ff ff    	cmp    DWORD PTR [rbp-0x138],eax
    7068:	7e 8f                	jle    6ff9 <sigint_processor+0x2fb>
    706a:	e9 da 00 00 00       	jmp    7149 <sigint_processor+0x44b>
    706f:	c7 85 cc fe ff ff 00 	mov    DWORD PTR [rbp-0x134],0x0
    7076:	00 00 00 
    7079:	eb 67                	jmp    70e2 <sigint_processor+0x3e4>
    707b:	8b 85 cc fe ff ff    	mov    eax,DWORD PTR [rbp-0x134]
    7081:	48 63 d0             	movsxd rdx,eax
    7084:	48 89 d0             	mov    rax,rdx
    7087:	48 c1 e0 04          	shl    rax,0x4
    708b:	48 01 d0             	add    rax,rdx
    708e:	48 01 c0             	add    rax,rax
    7091:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7095:	48 8d 05 04 0f 10 00 	lea    rax,[rip+0x100f04]        # 107fa0 <arpcache>
    709c:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    70a0:	8b 85 cc fe ff ff    	mov    eax,DWORD PTR [rbp-0x134]
    70a6:	48 63 d0             	movsxd rdx,eax
    70a9:	48 89 d0             	mov    rax,rdx
    70ac:	48 c1 e0 04          	shl    rax,0x4
    70b0:	48 01 d0             	add    rax,rdx
    70b3:	48 01 c0             	add    rax,rax
    70b6:	48 8d 15 e3 0e 10 00 	lea    rdx,[rip+0x100ee3]        # 107fa0 <arpcache>
    70bd:	48 01 c2             	add    rdx,rax
    70c0:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    70c7:	48 8d 35 a3 60 00 00 	lea    rsi,[rip+0x60a3]        # d171 <_IO_stdin_used+0x1171>
    70ce:	48 89 c7             	mov    rdi,rax
    70d1:	b8 00 00 00 00       	mov    eax,0x0
    70d6:	e8 f5 b5 ff ff       	call   26d0 <fprintf@plt>
    70db:	83 85 cc fe ff ff 01 	add    DWORD PTR [rbp-0x134],0x1
    70e2:	8b 05 34 9f 00 00    	mov    eax,DWORD PTR [rip+0x9f34]        # 1101c <arp_entries>
    70e8:	39 85 cc fe ff ff    	cmp    DWORD PTR [rbp-0x134],eax
    70ee:	7e 8b                	jle    707b <sigint_processor+0x37d>
    70f0:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    70f7:	48 89 c7             	mov    rdi,rax
    70fa:	e8 71 b4 ff ff       	call   2570 <fclose@plt>
    70ff:	c7 85 d0 fe ff ff 00 	mov    DWORD PTR [rbp-0x130],0x0
    7106:	00 00 00 
    7109:	eb 2f                	jmp    713a <sigint_processor+0x43c>
    710b:	8b 85 d0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x130]
    7111:	48 98                	cdqe   
    7113:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    711a:	00 
    711b:	48 8d 05 3e 0c 10 00 	lea    rax,[rip+0x100c3e]        # 107d60 <threads>
    7122:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    7126:	be 00 00 00 00       	mov    esi,0x0
    712b:	48 89 c7             	mov    rdi,rax
    712e:	e8 ad b6 ff ff       	call   27e0 <pthread_join@plt>
    7133:	83 85 d0 fe ff ff 01 	add    DWORD PTR [rbp-0x130],0x1
    713a:	8b 05 40 9f 00 00    	mov    eax,DWORD PTR [rip+0x9f40]        # 11080 <thread_count>
    7140:	39 85 d0 fe ff ff    	cmp    DWORD PTR [rbp-0x130],eax
    7146:	7c c3                	jl     710b <sigint_processor+0x40d>
    7148:	90                   	nop
    7149:	bf 00 00 00 00       	mov    edi,0x0
    714e:	e8 2d b7 ff ff       	call   2880 <exit@plt>

0000000000007153 <print_help_and_exit>:
    7153:	f3 0f 1e fa          	endbr64 
    7157:	55                   	push   rbp
    7158:	48 89 e5             	mov    rbp,rsp
    715b:	48 8d 35 16 60 00 00 	lea    rsi,[rip+0x6016]        # d178 <_IO_stdin_used+0x1178>
    7162:	48 8d 3d 17 60 00 00 	lea    rdi,[rip+0x6017]        # d180 <_IO_stdin_used+0x1180>
    7169:	b8 00 00 00 00       	mov    eax,0x0
    716e:	e8 7d b4 ff ff       	call   25f0 <printf@plt>
    7173:	bf 00 00 00 00       	mov    edi,0x0
    7178:	e8 03 b7 ff ff       	call   2880 <exit@plt>

000000000000717d <print_cpu_info>:
    717d:	f3 0f 1e fa          	endbr64 
    7181:	55                   	push   rbp
    7182:	48 89 e5             	mov    rbp,rsp
    7185:	53                   	push   rbx
    7186:	48 81 ec 48 02 00 00 	sub    rsp,0x248
    718d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7194:	00 00 
    7196:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    719a:	31 c0                	xor    eax,eax
    719c:	48 8d 35 64 60 00 00 	lea    rsi,[rip+0x6064]        # d207 <_IO_stdin_used+0x1207>
    71a3:	48 8d 3d 60 60 00 00 	lea    rdi,[rip+0x6060]        # d20a <_IO_stdin_used+0x120a>
    71aa:	e8 01 b6 ff ff       	call   27b0 <fopen@plt>
    71af:	48 89 85 d8 fd ff ff 	mov    QWORD PTR [rbp-0x228],rax
    71b6:	48 c7 85 c8 fd ff ff 	mov    QWORD PTR [rbp-0x238],0x0
    71bd:	00 00 00 00 
    71c1:	48 c7 85 d0 fd ff ff 	mov    QWORD PTR [rbp-0x230],0x0
    71c8:	00 00 00 00 
    71cc:	c7 85 bc fd ff ff 00 	mov    DWORD PTR [rbp-0x244],0x0
    71d3:	00 00 00 
    71d6:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    71dd:	ba 00 02 00 00       	mov    edx,0x200
    71e2:	be 00 00 00 00       	mov    esi,0x0
    71e7:	48 89 c7             	mov    rdi,rax
    71ea:	e8 41 b4 ff ff       	call   2630 <memset@plt>
    71ef:	e9 b4 00 00 00       	jmp    72a8 <print_cpu_info+0x12b>
    71f4:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    71fb:	ba 0a 00 00 00       	mov    edx,0xa
    7200:	48 89 c6             	mov    rsi,rax
    7203:	48 8d 3d 0e 60 00 00 	lea    rdi,[rip+0x600e]        # d218 <_IO_stdin_used+0x1218>
    720a:	e8 d1 b2 ff ff       	call   24e0 <strncmp@plt>
    720f:	85 c0                	test   eax,eax
    7211:	0f 85 91 00 00 00    	jne    72a8 <print_cpu_info+0x12b>
    7217:	c7 85 c0 fd ff ff 00 	mov    DWORD PTR [rbp-0x240],0x0
    721e:	00 00 00 
    7221:	c7 85 c4 fd ff ff 00 	mov    DWORD PTR [rbp-0x23c],0x0
    7228:	00 00 00 
    722b:	eb 2e                	jmp    725b <print_cpu_info+0xde>
    722d:	48 8b 95 c8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x238]
    7234:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    723a:	48 98                	cdqe   
    723c:	48 01 d0             	add    rax,rdx
    723f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    7242:	3c 3a                	cmp    al,0x3a
    7244:	75 0e                	jne    7254 <print_cpu_info+0xd7>
    7246:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    724c:	89 85 c0 fd ff ff    	mov    DWORD PTR [rbp-0x240],eax
    7252:	eb 24                	jmp    7278 <print_cpu_info+0xfb>
    7254:	83 85 c4 fd ff ff 01 	add    DWORD PTR [rbp-0x23c],0x1
    725b:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    7261:	48 63 d8             	movsxd rbx,eax
    7264:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    726b:	48 89 c7             	mov    rdi,rax
    726e:	e8 1d b3 ff ff       	call   2590 <strlen@plt>
    7273:	48 39 c3             	cmp    rbx,rax
    7276:	72 b5                	jb     722d <print_cpu_info+0xb0>
    7278:	83 85 bc fd ff ff 01 	add    DWORD PTR [rbp-0x244],0x1
    727f:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    7286:	8b 95 c0 fd ff ff    	mov    edx,DWORD PTR [rbp-0x240]
    728c:	48 63 d2             	movsxd rdx,edx
    728f:	48 83 c2 02          	add    rdx,0x2
    7293:	48 01 c2             	add    rdx,rax
    7296:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    729d:	48 89 d6             	mov    rsi,rdx
    72a0:	48 89 c7             	mov    rdi,rax
    72a3:	e8 98 b5 ff ff       	call   2840 <strcat@plt>
    72a8:	48 8b 95 d8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x228]
    72af:	48 8d b5 d0 fd ff ff 	lea    rsi,[rbp-0x230]
    72b6:	48 8d 85 c8 fd ff ff 	lea    rax,[rbp-0x238]
    72bd:	48 89 d1             	mov    rcx,rdx
    72c0:	ba 0a 00 00 00       	mov    edx,0xa
    72c5:	48 89 c7             	mov    rdi,rax
    72c8:	e8 e3 b5 ff ff       	call   28b0 <getdelim@plt>
    72cd:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
    72d1:	0f 85 1d ff ff ff    	jne    71f4 <print_cpu_info+0x77>
    72d7:	48 8d 95 e0 fd ff ff 	lea    rdx,[rbp-0x220]
    72de:	8b 85 bc fd ff ff    	mov    eax,DWORD PTR [rbp-0x244]
    72e4:	89 c6                	mov    esi,eax
    72e6:	48 8d 3d 36 5f 00 00 	lea    rdi,[rip+0x5f36]        # d223 <_IO_stdin_used+0x1223>
    72ed:	b8 00 00 00 00       	mov    eax,0x0
    72f2:	e8 f9 b2 ff ff       	call   25f0 <printf@plt>
    72f7:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    72fe:	48 89 c7             	mov    rdi,rax
    7301:	e8 8a b1 ff ff       	call   2490 <free@plt>
    7306:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    730d:	48 89 c7             	mov    rdi,rax
    7310:	e8 5b b2 ff ff       	call   2570 <fclose@plt>
    7315:	90                   	nop
    7316:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    731a:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    7321:	00 00 
    7323:	74 05                	je     732a <print_cpu_info+0x1ad>
    7325:	e8 86 b2 ff ff       	call   25b0 <__stack_chk_fail@plt>
    732a:	48 81 c4 48 02 00 00 	add    rsp,0x248
    7331:	5b                   	pop    rbx
    7332:	5d                   	pop    rbp
    7333:	c3                   	ret    

0000000000007334 <print_logo>:
    7334:	f3 0f 1e fa          	endbr64 
    7338:	55                   	push   rbp
    7339:	48 89 e5             	mov    rbp,rsp
    733c:	48 8d 3d f5 5e 00 00 	lea    rdi,[rip+0x5ef5]        # d238 <_IO_stdin_used+0x1238>
    7343:	e8 d8 b1 ff ff       	call   2520 <puts@plt>
    7348:	90                   	nop
    7349:	5d                   	pop    rbp
    734a:	c3                   	ret    

000000000000734b <start_nsh_server>:
    734b:	f3 0f 1e fa          	endbr64 
    734f:	55                   	push   rbp
    7350:	48 89 e5             	mov    rbp,rsp
    7353:	48 83 ec 10          	sub    rsp,0x10
    7357:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    735e:	00 00 
    7360:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7364:	31 c0                	xor    eax,eax
    7366:	48 8d 45 f0          	lea    rax,[rbp-0x10]
    736a:	b9 00 00 00 00       	mov    ecx,0x0
    736f:	48 8d 15 71 00 00 00 	lea    rdx,[rip+0x71]        # 73e7 <actually_start_nsh_server>
    7376:	be 00 00 00 00       	mov    esi,0x0
    737b:	48 89 c7             	mov    rdi,rax
    737e:	e8 2d b1 ff ff       	call   24b0 <pthread_create@plt>
    7383:	90                   	nop
    7384:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7388:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    738f:	00 00 
    7391:	74 05                	je     7398 <start_nsh_server+0x4d>
    7393:	e8 18 b2 ff ff       	call   25b0 <__stack_chk_fail@plt>
    7398:	c9                   	leave  
    7399:	c3                   	ret    

000000000000739a <rnstrip>:
    739a:	f3 0f 1e fa          	endbr64 
    739e:	55                   	push   rbp
    739f:	48 89 e5             	mov    rbp,rsp
    73a2:	48 83 ec 10          	sub    rsp,0x10
    73a6:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    73aa:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    73ae:	48 8d 35 fb 5f 00 00 	lea    rsi,[rip+0x5ffb]        # d3b0 <_IO_stdin_used+0x13b0>
    73b5:	48 89 c7             	mov    rdi,rax
    73b8:	e8 b3 b2 ff ff       	call   2670 <strcspn@plt>
    73bd:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    73c1:	48 01 d0             	add    rax,rdx
    73c4:	c6 00 00             	mov    BYTE PTR [rax],0x0
    73c7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    73cb:	48 8d 35 e0 5f 00 00 	lea    rsi,[rip+0x5fe0]        # d3b2 <_IO_stdin_used+0x13b2>
    73d2:	48 89 c7             	mov    rdi,rax
    73d5:	e8 96 b2 ff ff       	call   2670 <strcspn@plt>
    73da:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    73de:	48 01 d0             	add    rax,rdx
    73e1:	c6 00 00             	mov    BYTE PTR [rax],0x0
    73e4:	90                   	nop
    73e5:	c9                   	leave  
    73e6:	c3                   	ret    

00000000000073e7 <actually_start_nsh_server>:
    73e7:	f3 0f 1e fa          	endbr64 
    73eb:	55                   	push   rbp
    73ec:	48 89 e5             	mov    rbp,rsp
    73ef:	48 83 ec 50          	sub    rsp,0x50
    73f3:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    73fa:	00 00 
    73fc:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7400:	31 c0                	xor    eax,eax
    7402:	c7 45 bc 10 00 00 00 	mov    DWORD PTR [rbp-0x44],0x10
    7409:	ba 00 00 00 00       	mov    edx,0x0
    740e:	be 01 00 00 00       	mov    esi,0x1
    7413:	bf 02 00 00 00       	mov    edi,0x2
    7418:	e8 b3 b4 ff ff       	call   28d0 <socket@plt>
    741d:	89 45 c0             	mov    DWORD PTR [rbp-0x40],eax
    7420:	83 7d c0 00          	cmp    DWORD PTR [rbp-0x40],0x0
    7424:	75 16                	jne    743c <actually_start_nsh_server+0x55>
    7426:	48 8d 3d 8b 5f 00 00 	lea    rdi,[rip+0x5f8b]        # d3b8 <_IO_stdin_used+0x13b8>
    742d:	e8 ee b0 ff ff       	call   2520 <puts@plt>
    7432:	bf 01 00 00 00       	mov    edi,0x1
    7437:	e8 44 b4 ff ff       	call   2880 <exit@plt>
    743c:	48 8d 55 bc          	lea    rdx,[rbp-0x44]
    7440:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    7443:	41 b8 04 00 00 00    	mov    r8d,0x4
    7449:	48 89 d1             	mov    rcx,rdx
    744c:	ba 02 00 00 00       	mov    edx,0x2
    7451:	be 01 00 00 00       	mov    esi,0x1
    7456:	89 c7                	mov    edi,eax
    7458:	e8 d3 b0 ff ff       	call   2530 <setsockopt@plt>
    745d:	85 c0                	test   eax,eax
    745f:	74 16                	je     7477 <actually_start_nsh_server+0x90>
    7461:	48 8d 3d 78 5f 00 00 	lea    rdi,[rip+0x5f78]        # d3e0 <_IO_stdin_used+0x13e0>
    7468:	e8 b3 b0 ff ff       	call   2520 <puts@plt>
    746d:	bf 01 00 00 00       	mov    edi,0x1
    7472:	e8 09 b4 ff ff       	call   2880 <exit@plt>
    7477:	66 c7 45 e0 02 00    	mov    WORD PTR [rbp-0x20],0x2
    747d:	bf 00 00 00 00       	mov    edi,0x0
    7482:	e8 99 b1 ff ff       	call   2620 <htonl@plt>
    7487:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
    748a:	bf 81 02 00 00       	mov    edi,0x281
    748f:	e8 2c b1 ff ff       	call   25c0 <htons@plt>
    7494:	66 89 45 e2          	mov    WORD PTR [rbp-0x1e],ax
    7498:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
    749c:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    749f:	ba 10 00 00 00       	mov    edx,0x10
    74a4:	48 89 ce             	mov    rsi,rcx
    74a7:	89 c7                	mov    edi,eax
    74a9:	e8 f2 b2 ff ff       	call   27a0 <bind@plt>
    74ae:	85 c0                	test   eax,eax
    74b0:	79 16                	jns    74c8 <actually_start_nsh_server+0xe1>
    74b2:	48 8d 3d 4f 5f 00 00 	lea    rdi,[rip+0x5f4f]        # d408 <_IO_stdin_used+0x1408>
    74b9:	e8 62 b0 ff ff       	call   2520 <puts@plt>
    74be:	bf 01 00 00 00       	mov    edi,0x1
    74c3:	e8 b8 b3 ff ff       	call   2880 <exit@plt>
    74c8:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    74cb:	be 05 00 00 00       	mov    esi,0x5
    74d0:	89 c7                	mov    edi,eax
    74d2:	e8 79 b2 ff ff       	call   2750 <listen@plt>
    74d7:	85 c0                	test   eax,eax
    74d9:	79 16                	jns    74f1 <actually_start_nsh_server+0x10a>
    74db:	48 8d 3d 5e 5f 00 00 	lea    rdi,[rip+0x5f5e]        # d440 <_IO_stdin_used+0x1440>
    74e2:	e8 39 b0 ff ff       	call   2520 <puts@plt>
    74e7:	bf 01 00 00 00       	mov    edi,0x1
    74ec:	e8 8f b3 ff ff       	call   2880 <exit@plt>
    74f1:	48 8d 55 bc          	lea    rdx,[rbp-0x44]
    74f5:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
    74f9:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    74fc:	48 89 ce             	mov    rsi,rcx
    74ff:	89 c7                	mov    edi,eax
    7501:	e8 0a b3 ff ff       	call   2810 <accept@plt>
    7506:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    7509:	83 7d c4 00          	cmp    DWORD PTR [rbp-0x3c],0x0
    750d:	79 20                	jns    752f <actually_start_nsh_server+0x148>
    750f:	b8 00 00 00 00       	mov    eax,0x0
    7514:	e8 87 be ff ff       	call   33a0 <get_formated_time>
    7519:	48 89 c6             	mov    rsi,rax
    751c:	48 8d 3d 4d 5f 00 00 	lea    rdi,[rip+0x5f4d]        # d470 <_IO_stdin_used+0x1470>
    7523:	b8 00 00 00 00       	mov    eax,0x0
    7528:	e8 c3 b0 ff ff       	call   25f0 <printf@plt>
    752d:	eb c2                	jmp    74f1 <actually_start_nsh_server+0x10a>
    752f:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    7532:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
    7535:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    7539:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    753d:	48 8d 55 d0          	lea    rdx,[rbp-0x30]
    7541:	48 8d 45 c8          	lea    rax,[rbp-0x38]
    7545:	48 89 d1             	mov    rcx,rdx
    7548:	48 8d 15 0f 00 00 00 	lea    rdx,[rip+0xf]        # 755e <accept_cmd>
    754f:	be 00 00 00 00       	mov    esi,0x0
    7554:	48 89 c7             	mov    rdi,rax
    7557:	e8 54 af ff ff       	call   24b0 <pthread_create@plt>
    755c:	eb 93                	jmp    74f1 <actually_start_nsh_server+0x10a>

000000000000755e <accept_cmd>:
    755e:	f3 0f 1e fa          	endbr64 
    7562:	55                   	push   rbp
    7563:	48 89 e5             	mov    rbp,rsp
    7566:	48 83 ec 30          	sub    rsp,0x30
    756a:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    756e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    7572:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    7576:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    757a:	8b 00                	mov    eax,DWORD PTR [rax]
    757c:	64 48 8b 14 25 00 00 	mov    rdx,QWORD PTR fs:0x0
    7583:	00 00 
    7585:	48 8d 8a 00 fc ff ff 	lea    rcx,[rdx-0x400]
    758c:	ba 00 04 00 00       	mov    edx,0x400
    7591:	48 89 ce             	mov    rsi,rcx
    7594:	89 c7                	mov    edi,eax
    7596:	e8 e5 b0 ff ff       	call   2680 <read@plt>
    759b:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
    759e:	83 7d ec 00          	cmp    DWORD PTR [rbp-0x14],0x0
    75a2:	7e 45                	jle    75e9 <accept_cmd+0x8b>
    75a4:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    75ab:	00 00 
    75ad:	48 05 00 fc ff ff    	add    rax,0xfffffffffffffc00
    75b3:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    75b7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    75bb:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    75be:	0f b6 c0             	movzx  eax,al
    75c1:	89 c6                	mov    esi,eax
    75c3:	48 8d 3d c8 5e 00 00 	lea    rdi,[rip+0x5ec8]        # d492 <_IO_stdin_used+0x1492>
    75ca:	b8 00 00 00 00       	mov    eax,0x0
    75cf:	e8 1c b0 ff ff       	call   25f0 <printf@plt>
    75d4:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    75d8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    75dc:	48 89 d6             	mov    rsi,rdx
    75df:	48 89 c7             	mov    rdi,rax
    75e2:	e8 99 0c 00 00       	call   8280 <process_opcode>
    75e7:	eb 8d                	jmp    7576 <accept_cmd+0x18>
    75e9:	90                   	nop
    75ea:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    75ee:	8b 00                	mov    eax,DWORD PTR [rax]
    75f0:	89 c7                	mov    edi,eax
    75f2:	e8 59 b0 ff ff       	call   2650 <close@plt>
    75f7:	90                   	nop
    75f8:	c9                   	leave  
    75f9:	c3                   	ret    

00000000000075fa <tcp_rst_portscan_detect>:
    75fa:	f3 0f 1e fa          	endbr64 
    75fe:	55                   	push   rbp
    75ff:	48 89 e5             	mov    rbp,rsp
    7602:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    7609:	48 89 bd c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rdi
    7610:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7617:	00 00 
    7619:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    761d:	31 c0                	xor    eax,eax
    761f:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    7626:	00 00 00 
    7629:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7630:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    7636:	83 f8 1e             	cmp    eax,0x1e
    7639:	74 0a                	je     7645 <tcp_rst_portscan_detect+0x4b>
    763b:	b8 00 00 00 00       	mov    eax,0x0
    7640:	e9 8d 01 00 00       	jmp    77d2 <tcp_rst_portscan_detect+0x1d8>
    7645:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    764c:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    7652:	83 e8 01             	sub    eax,0x1
    7655:	89 85 d8 fe ff ff    	mov    DWORD PTR [rbp-0x128],eax
    765b:	eb 6c                	jmp    76c9 <tcp_rst_portscan_detect+0xcf>
    765d:	8b 85 d8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x128]
    7663:	89 85 e4 fe ff ff    	mov    DWORD PTR [rbp-0x11c],eax
    7669:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7670:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    7676:	48 63 d2             	movsxd rdx,edx
    7679:	48 83 c2 28          	add    rdx,0x28
    767d:	48 8b 44 d0 10       	mov    rax,QWORD PTR [rax+rdx*8+0x10]
    7682:	89 c1                	mov    ecx,eax
    7684:	83 ad d8 fe ff ff 01 	sub    DWORD PTR [rbp-0x128],0x1
    768b:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7692:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    7698:	48 63 d2             	movsxd rdx,edx
    769b:	48 83 c2 28          	add    rdx,0x28
    769f:	48 8b 44 d0 10       	mov    rax,QWORD PTR [rax+rdx*8+0x10]
    76a4:	29 c1                	sub    ecx,eax
    76a6:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
    76ac:	8d 50 01             	lea    edx,[rax+0x1]
    76af:	89 95 d4 fe ff ff    	mov    DWORD PTR [rbp-0x12c],edx
    76b5:	89 ca                	mov    edx,ecx
    76b7:	48 98                	cdqe   
    76b9:	89 94 85 f0 fe ff ff 	mov    DWORD PTR [rbp+rax*4-0x110],edx
    76c0:	83 bd e4 fe ff ff 01 	cmp    DWORD PTR [rbp-0x11c],0x1
    76c7:	74 0b                	je     76d4 <tcp_rst_portscan_detect+0xda>
    76c9:	83 bd d8 fe ff ff 00 	cmp    DWORD PTR [rbp-0x128],0x0
    76d0:	75 8b                	jne    765d <tcp_rst_portscan_detect+0x63>
    76d2:	eb 01                	jmp    76d5 <tcp_rst_portscan_detect+0xdb>
    76d4:	90                   	nop
    76d5:	c7 85 dc fe ff ff 00 	mov    DWORD PTR [rbp-0x124],0x0
    76dc:	00 00 00 
    76df:	c7 85 e0 fe ff ff 00 	mov    DWORD PTR [rbp-0x120],0x0
    76e6:	00 00 00 
    76e9:	eb 24                	jmp    770f <tcp_rst_portscan_detect+0x115>
    76eb:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    76f1:	48 98                	cdqe   
    76f3:	8b 84 85 f0 fe ff ff 	mov    eax,DWORD PTR [rbp+rax*4-0x110]
    76fa:	3d b3 b7 b4 00       	cmp    eax,0xb4b7b3
    76ff:	7f 07                	jg     7708 <tcp_rst_portscan_detect+0x10e>
    7701:	83 85 dc fe ff ff 01 	add    DWORD PTR [rbp-0x124],0x1
    7708:	83 85 e0 fe ff ff 01 	add    DWORD PTR [rbp-0x120],0x1
    770f:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    7715:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    771b:	7c ce                	jl     76eb <tcp_rst_portscan_detect+0xf1>
    771d:	8b 85 dc fe ff ff    	mov    eax,DWORD PTR [rbp-0x124]
    7723:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    7729:	0f 85 9e 00 00 00    	jne    77cd <tcp_rst_portscan_detect+0x1d3>
    772f:	48 8b 05 fa 98 00 00 	mov    rax,QWORD PTR [rip+0x98fa]        # 11030 <def_log_file>
    7736:	48 8d 35 63 5d 00 00 	lea    rsi,[rip+0x5d63]        # d4a0 <_IO_stdin_used+0x14a0>
    773d:	48 89 c7             	mov    rdi,rax
    7740:	e8 6b b0 ff ff       	call   27b0 <fopen@plt>
    7745:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
    774c:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7753:	48 83 c0 08          	add    rax,0x8
    7757:	48 89 c6             	mov    rsi,rax
    775a:	48 8d 3d 47 5d 00 00 	lea    rdi,[rip+0x5d47]        # d4a8 <_IO_stdin_used+0x14a8>
    7761:	b8 00 00 00 00       	mov    eax,0x0
    7766:	e8 85 ae ff ff       	call   25f0 <printf@plt>
    776b:	b8 00 00 00 00       	mov    eax,0x0
    7770:	e8 2b bc ff ff       	call   33a0 <get_formated_time>
    7775:	48 89 c1             	mov    rcx,rax
    7778:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    777f:	48 8d 50 08          	lea    rdx,[rax+0x8]
    7783:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    778a:	48 8d 35 47 5d 00 00 	lea    rsi,[rip+0x5d47]        # d4d8 <_IO_stdin_used+0x14d8>
    7791:	48 89 c7             	mov    rdi,rax
    7794:	b8 00 00 00 00       	mov    eax,0x0
    7799:	e8 d2 b0 ff ff       	call   2870 <sprintf@plt>
    779e:	48 8b 95 e8 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x118]
    77a5:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    77ac:	48 89 d6             	mov    rsi,rdx
    77af:	48 89 c7             	mov    rdi,rax
    77b2:	e8 59 ae ff ff       	call   2610 <fputs@plt>
    77b7:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    77be:	48 89 c7             	mov    rdi,rax
    77c1:	e8 aa ad ff ff       	call   2570 <fclose@plt>
    77c6:	b8 01 00 00 00       	mov    eax,0x1
    77cb:	eb 05                	jmp    77d2 <tcp_rst_portscan_detect+0x1d8>
    77cd:	b8 00 00 00 00       	mov    eax,0x0
    77d2:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    77d6:	64 48 33 34 25 28 00 	xor    rsi,QWORD PTR fs:0x28
    77dd:	00 00 
    77df:	74 05                	je     77e6 <tcp_rst_portscan_detect+0x1ec>
    77e1:	e8 ca ad ff ff       	call   25b0 <__stack_chk_fail@plt>
    77e6:	c9                   	leave  
    77e7:	c3                   	ret    

00000000000077e8 <fin_rst_portscan_detect>:
    77e8:	f3 0f 1e fa          	endbr64 
    77ec:	55                   	push   rbp
    77ed:	48 89 e5             	mov    rbp,rsp
    77f0:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    77f7:	48 89 bd c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rdi
    77fe:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7805:	00 00 
    7807:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    780b:	31 c0                	xor    eax,eax
    780d:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    7814:	00 00 00 
    7817:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    781e:	8b 40 50             	mov    eax,DWORD PTR [rax+0x50]
    7821:	83 f8 1e             	cmp    eax,0x1e
    7824:	74 0a                	je     7830 <fin_rst_portscan_detect+0x48>
    7826:	b8 00 00 00 00       	mov    eax,0x0
    782b:	e9 8a 01 00 00       	jmp    79ba <fin_rst_portscan_detect+0x1d2>
    7830:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7837:	8b 40 50             	mov    eax,DWORD PTR [rax+0x50]
    783a:	83 e8 01             	sub    eax,0x1
    783d:	89 85 d8 fe ff ff    	mov    DWORD PTR [rbp-0x128],eax
    7843:	eb 6c                	jmp    78b1 <fin_rst_portscan_detect+0xc9>
    7845:	8b 85 d8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x128]
    784b:	89 85 e4 fe ff ff    	mov    DWORD PTR [rbp-0x11c],eax
    7851:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7858:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    785e:	48 63 d2             	movsxd rdx,edx
    7861:	48 83 c2 0a          	add    rdx,0xa
    7865:	48 8b 44 d0 08       	mov    rax,QWORD PTR [rax+rdx*8+0x8]
    786a:	89 c1                	mov    ecx,eax
    786c:	83 ad d8 fe ff ff 01 	sub    DWORD PTR [rbp-0x128],0x1
    7873:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    787a:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    7880:	48 63 d2             	movsxd rdx,edx
    7883:	48 83 c2 0a          	add    rdx,0xa
    7887:	48 8b 44 d0 08       	mov    rax,QWORD PTR [rax+rdx*8+0x8]
    788c:	29 c1                	sub    ecx,eax
    788e:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
    7894:	8d 50 01             	lea    edx,[rax+0x1]
    7897:	89 95 d4 fe ff ff    	mov    DWORD PTR [rbp-0x12c],edx
    789d:	89 ca                	mov    edx,ecx
    789f:	48 98                	cdqe   
    78a1:	89 94 85 f0 fe ff ff 	mov    DWORD PTR [rbp+rax*4-0x110],edx
    78a8:	83 bd e4 fe ff ff 01 	cmp    DWORD PTR [rbp-0x11c],0x1
    78af:	74 0b                	je     78bc <fin_rst_portscan_detect+0xd4>
    78b1:	83 bd d8 fe ff ff 00 	cmp    DWORD PTR [rbp-0x128],0x0
    78b8:	75 8b                	jne    7845 <fin_rst_portscan_detect+0x5d>
    78ba:	eb 01                	jmp    78bd <fin_rst_portscan_detect+0xd5>
    78bc:	90                   	nop
    78bd:	c7 85 dc fe ff ff 00 	mov    DWORD PTR [rbp-0x124],0x0
    78c4:	00 00 00 
    78c7:	c7 85 e0 fe ff ff 00 	mov    DWORD PTR [rbp-0x120],0x0
    78ce:	00 00 00 
    78d1:	eb 24                	jmp    78f7 <fin_rst_portscan_detect+0x10f>
    78d3:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    78d9:	48 98                	cdqe   
    78db:	8b 84 85 f0 fe ff ff 	mov    eax,DWORD PTR [rbp+rax*4-0x110]
    78e2:	3d 73 7e e2 00       	cmp    eax,0xe27e73
    78e7:	7f 07                	jg     78f0 <fin_rst_portscan_detect+0x108>
    78e9:	83 85 dc fe ff ff 01 	add    DWORD PTR [rbp-0x124],0x1
    78f0:	83 85 e0 fe ff ff 01 	add    DWORD PTR [rbp-0x120],0x1
    78f7:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    78fd:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    7903:	7c ce                	jl     78d3 <fin_rst_portscan_detect+0xeb>
    7905:	8b 85 dc fe ff ff    	mov    eax,DWORD PTR [rbp-0x124]
    790b:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    7911:	0f 85 9e 00 00 00    	jne    79b5 <fin_rst_portscan_detect+0x1cd>
    7917:	48 8b 05 12 97 00 00 	mov    rax,QWORD PTR [rip+0x9712]        # 11030 <def_log_file>
    791e:	48 8d 35 7b 5b 00 00 	lea    rsi,[rip+0x5b7b]        # d4a0 <_IO_stdin_used+0x14a0>
    7925:	48 89 c7             	mov    rdi,rax
    7928:	e8 83 ae ff ff       	call   27b0 <fopen@plt>
    792d:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
    7934:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    793b:	48 83 c0 08          	add    rax,0x8
    793f:	48 89 c6             	mov    rsi,rax
    7942:	48 8d 3d b7 5b 00 00 	lea    rdi,[rip+0x5bb7]        # d500 <_IO_stdin_used+0x1500>
    7949:	b8 00 00 00 00       	mov    eax,0x0
    794e:	e8 9d ac ff ff       	call   25f0 <printf@plt>
    7953:	b8 00 00 00 00       	mov    eax,0x0
    7958:	e8 43 ba ff ff       	call   33a0 <get_formated_time>
    795d:	48 89 c1             	mov    rcx,rax
    7960:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7967:	48 8d 50 08          	lea    rdx,[rax+0x8]
    796b:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    7972:	48 8d 35 b7 5b 00 00 	lea    rsi,[rip+0x5bb7]        # d530 <_IO_stdin_used+0x1530>
    7979:	48 89 c7             	mov    rdi,rax
    797c:	b8 00 00 00 00       	mov    eax,0x0
    7981:	e8 ea ae ff ff       	call   2870 <sprintf@plt>
    7986:	48 8b 95 e8 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x118]
    798d:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    7994:	48 89 d6             	mov    rsi,rdx
    7997:	48 89 c7             	mov    rdi,rax
    799a:	e8 71 ac ff ff       	call   2610 <fputs@plt>
    799f:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    79a6:	48 89 c7             	mov    rdi,rax
    79a9:	e8 c2 ab ff ff       	call   2570 <fclose@plt>
    79ae:	b8 01 00 00 00       	mov    eax,0x1
    79b3:	eb 05                	jmp    79ba <fin_rst_portscan_detect+0x1d2>
    79b5:	b8 00 00 00 00       	mov    eax,0x0
    79ba:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    79be:	64 48 33 34 25 28 00 	xor    rsi,QWORD PTR fs:0x28
    79c5:	00 00 
    79c7:	74 05                	je     79ce <fin_rst_portscan_detect+0x1e6>
    79c9:	e8 e2 ab ff ff       	call   25b0 <__stack_chk_fail@plt>
    79ce:	c9                   	leave  
    79cf:	c3                   	ret    

00000000000079d0 <member_ready_for_scan>:
    79d0:	f3 0f 1e fa          	endbr64 
    79d4:	55                   	push   rbp
    79d5:	48 89 e5             	mov    rbp,rsp
    79d8:	48 83 ec 10          	sub    rsp,0x10
    79dc:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    79e3:	eb 48                	jmp    7a2d <member_ready_for_scan+0x5d>
    79e5:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    79e8:	48 63 d0             	movsxd rdx,eax
    79eb:	48 89 d0             	mov    rax,rdx
    79ee:	48 c1 e0 02          	shl    rax,0x2
    79f2:	48 01 d0             	add    rax,rdx
    79f5:	48 c1 e0 03          	shl    rax,0x3
    79f9:	48 01 d0             	add    rax,rdx
    79fc:	48 c1 e0 04          	shl    rax,0x4
    7a00:	48 8d 15 99 b6 0e 00 	lea    rdx,[rip+0xeb699]        # f30a0 <watchlist>
    7a07:	48 01 d0             	add    rax,rdx
    7a0a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7a0e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7a12:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    7a18:	83 f8 1d             	cmp    eax,0x1d
    7a1b:	76 0c                	jbe    7a29 <member_ready_for_scan+0x59>
    7a1d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7a21:	48 89 c7             	mov    rdi,rax
    7a24:	e8 d1 fb ff ff       	call   75fa <tcp_rst_portscan_detect>
    7a29:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    7a2d:	8b 05 e5 95 00 00    	mov    eax,DWORD PTR [rip+0x95e5]        # 11018 <watchlist_num>
    7a33:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    7a36:	7e ad                	jle    79e5 <member_ready_for_scan+0x15>
    7a38:	90                   	nop
    7a39:	90                   	nop
    7a3a:	c9                   	leave  
    7a3b:	c3                   	ret    

0000000000007a3c <member_exists>:
    7a3c:	f3 0f 1e fa          	endbr64 
    7a40:	55                   	push   rbp
    7a41:	48 89 e5             	mov    rbp,rsp
    7a44:	48 83 ec 20          	sub    rsp,0x20
    7a48:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7a4c:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7a53:	eb 47                	jmp    7a9c <member_exists+0x60>
    7a55:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7a58:	8d 50 01             	lea    edx,[rax+0x1]
    7a5b:	89 55 fc             	mov    DWORD PTR [rbp-0x4],edx
    7a5e:	48 63 d0             	movsxd rdx,eax
    7a61:	48 89 d0             	mov    rax,rdx
    7a64:	48 c1 e0 02          	shl    rax,0x2
    7a68:	48 01 d0             	add    rax,rdx
    7a6b:	48 c1 e0 03          	shl    rax,0x3
    7a6f:	48 01 d0             	add    rax,rdx
    7a72:	48 c1 e0 04          	shl    rax,0x4
    7a76:	48 8d 15 23 b6 0e 00 	lea    rdx,[rip+0xeb623]        # f30a0 <watchlist>
    7a7d:	48 01 d0             	add    rax,rdx
    7a80:	48 8d 50 08          	lea    rdx,[rax+0x8]
    7a84:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7a88:	48 89 c6             	mov    rsi,rax
    7a8b:	48 89 d7             	mov    rdi,rdx
    7a8e:	e8 1d ac ff ff       	call   26b0 <strcmp@plt>
    7a93:	85 c0                	test   eax,eax
    7a95:	75 05                	jne    7a9c <member_exists+0x60>
    7a97:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7a9a:	eb 10                	jmp    7aac <member_exists+0x70>
    7a9c:	8b 05 76 95 00 00    	mov    eax,DWORD PTR [rip+0x9576]        # 11018 <watchlist_num>
    7aa2:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7aa5:	7e ae                	jle    7a55 <member_exists+0x19>
    7aa7:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7aac:	c9                   	leave  
    7aad:	c3                   	ret    

0000000000007aae <init_member>:
    7aae:	f3 0f 1e fa          	endbr64 
    7ab2:	55                   	push   rbp
    7ab3:	48 89 e5             	mov    rbp,rsp
    7ab6:	48 83 ec 20          	sub    rsp,0x20
    7aba:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7abe:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7ac2:	48 89 c7             	mov    rdi,rax
    7ac5:	e8 72 ff ff ff       	call   7a3c <member_exists>
    7aca:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    7acd:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    7ad1:	74 42                	je     7b15 <init_member+0x67>
    7ad3:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    7ad6:	48 63 d0             	movsxd rdx,eax
    7ad9:	48 89 d0             	mov    rax,rdx
    7adc:	48 c1 e0 02          	shl    rax,0x2
    7ae0:	48 01 d0             	add    rax,rdx
    7ae3:	48 c1 e0 03          	shl    rax,0x3
    7ae7:	48 01 d0             	add    rax,rdx
    7aea:	48 c1 e0 04          	shl    rax,0x4
    7aee:	48 8d 15 ab b5 0e 00 	lea    rdx,[rip+0xeb5ab]        # f30a0 <watchlist>
    7af5:	48 01 d0             	add    rax,rdx
    7af8:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7afc:	bf 00 00 00 00       	mov    edi,0x0
    7b01:	e8 fa ab ff ff       	call   2700 <time@plt>
    7b06:	48 89 c2             	mov    rdx,rax
    7b09:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7b0d:	48 89 10             	mov    QWORD PTR [rax],rdx
    7b10:	e9 a8 00 00 00       	jmp    7bbd <init_member+0x10f>
    7b15:	48 8d 3d 39 5a 00 00 	lea    rdi,[rip+0x5a39]        # d555 <_IO_stdin_used+0x1555>
    7b1c:	e8 1b ff ff ff       	call   7a3c <member_exists>
    7b21:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    7b24:	83 7d f4 00          	cmp    DWORD PTR [rbp-0xc],0x0
    7b28:	74 2b                	je     7b55 <init_member+0xa7>
    7b2a:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    7b2d:	48 63 d0             	movsxd rdx,eax
    7b30:	48 89 d0             	mov    rax,rdx
    7b33:	48 c1 e0 02          	shl    rax,0x2
    7b37:	48 01 d0             	add    rax,rdx
    7b3a:	48 c1 e0 03          	shl    rax,0x3
    7b3e:	48 01 d0             	add    rax,rdx
    7b41:	48 c1 e0 04          	shl    rax,0x4
    7b45:	48 8d 15 54 b5 0e 00 	lea    rdx,[rip+0xeb554]        # f30a0 <watchlist>
    7b4c:	48 01 d0             	add    rax,rdx
    7b4f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7b53:	eb 3b                	jmp    7b90 <init_member+0xe2>
    7b55:	8b 05 bd 94 00 00    	mov    eax,DWORD PTR [rip+0x94bd]        # 11018 <watchlist_num>
    7b5b:	83 c0 01             	add    eax,0x1
    7b5e:	89 05 b4 94 00 00    	mov    DWORD PTR [rip+0x94b4],eax        # 11018 <watchlist_num>
    7b64:	8b 05 ae 94 00 00    	mov    eax,DWORD PTR [rip+0x94ae]        # 11018 <watchlist_num>
    7b6a:	48 63 d0             	movsxd rdx,eax
    7b6d:	48 89 d0             	mov    rax,rdx
    7b70:	48 c1 e0 02          	shl    rax,0x2
    7b74:	48 01 d0             	add    rax,rdx
    7b77:	48 c1 e0 03          	shl    rax,0x3
    7b7b:	48 01 d0             	add    rax,rdx
    7b7e:	48 c1 e0 04          	shl    rax,0x4
    7b82:	48 8d 15 17 b5 0e 00 	lea    rdx,[rip+0xeb517]        # f30a0 <watchlist>
    7b89:	48 01 d0             	add    rax,rdx
    7b8c:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7b90:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7b94:	ba 08 00 00 00       	mov    edx,0x8
    7b99:	be 00 00 00 00       	mov    esi,0x0
    7b9e:	48 89 c7             	mov    rdi,rax
    7ba1:	e8 8a aa ff ff       	call   2630 <memset@plt>
    7ba6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7baa:	48 8d 50 08          	lea    rdx,[rax+0x8]
    7bae:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7bb2:	48 89 c6             	mov    rsi,rax
    7bb5:	48 89 d7             	mov    rdi,rdx
    7bb8:	e8 33 a9 ff ff       	call   24f0 <strcpy@plt>
    7bbd:	c9                   	leave  
    7bbe:	c3                   	ret    

0000000000007bbf <ready_for_clean>:
    7bbf:	f3 0f 1e fa          	endbr64 
    7bc3:	55                   	push   rbp
    7bc4:	48 89 e5             	mov    rbp,rsp
    7bc7:	48 83 ec 10          	sub    rsp,0x10
    7bcb:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7bcf:	bf 00 00 00 00       	mov    edi,0x0
    7bd4:	e8 27 ab ff ff       	call   2700 <time@plt>
    7bd9:	48 89 c2             	mov    rdx,rax
    7bdc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7be0:	48 8b 00             	mov    rax,QWORD PTR [rax]
    7be3:	48 29 c2             	sub    rdx,rax
    7be6:	48 8b 05 5b 01 10 00 	mov    rax,QWORD PTR [rip+0x10015b]        # 107d48 <clean_delay>
    7bed:	48 39 c2             	cmp    rdx,rax
    7bf0:	72 22                	jb     7c14 <ready_for_clean+0x55>
    7bf2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7bf6:	48 83 c0 08          	add    rax,0x8
    7bfa:	48 8d 35 5c 59 00 00 	lea    rsi,[rip+0x595c]        # d55d <_IO_stdin_used+0x155d>
    7c01:	48 89 c7             	mov    rdi,rax
    7c04:	e8 a7 aa ff ff       	call   26b0 <strcmp@plt>
    7c09:	85 c0                	test   eax,eax
    7c0b:	74 07                	je     7c14 <ready_for_clean+0x55>
    7c0d:	b8 01 00 00 00       	mov    eax,0x1
    7c12:	eb 05                	jmp    7c19 <ready_for_clean+0x5a>
    7c14:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7c19:	c9                   	leave  
    7c1a:	c3                   	ret    

0000000000007c1b <clean>:
    7c1b:	f3 0f 1e fa          	endbr64 
    7c1f:	55                   	push   rbp
    7c20:	48 89 e5             	mov    rbp,rsp
    7c23:	48 83 ec 10          	sub    rsp,0x10
    7c27:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7c2b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7c2f:	ba 08 00 00 00       	mov    edx,0x8
    7c34:	be 00 00 00 00       	mov    esi,0x0
    7c39:	48 89 c7             	mov    rdi,rax
    7c3c:	e8 ef a9 ff ff       	call   2630 <memset@plt>
    7c41:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7c45:	48 83 c0 08          	add    rax,0x8
    7c49:	48 b9 30 2e 30 2e 30 	movabs rcx,0x312e302e302e30
    7c50:	2e 31 00 
    7c53:	48 89 08             	mov    QWORD PTR [rax],rcx
    7c56:	90                   	nop
    7c57:	c9                   	leave  
    7c58:	c3                   	ret    

0000000000007c59 <scan_for_clean>:
    7c59:	f3 0f 1e fa          	endbr64 
    7c5d:	55                   	push   rbp
    7c5e:	48 89 e5             	mov    rbp,rsp
    7c61:	48 83 ec 10          	sub    rsp,0x10
    7c65:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7c6c:	eb 62                	jmp    7cd0 <scan_for_clean+0x77>
    7c6e:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7c71:	48 63 d0             	movsxd rdx,eax
    7c74:	48 89 d0             	mov    rax,rdx
    7c77:	48 c1 e0 02          	shl    rax,0x2
    7c7b:	48 01 d0             	add    rax,rdx
    7c7e:	48 c1 e0 03          	shl    rax,0x3
    7c82:	48 01 d0             	add    rax,rdx
    7c85:	48 c1 e0 04          	shl    rax,0x4
    7c89:	48 8d 15 10 b4 0e 00 	lea    rdx,[rip+0xeb410]        # f30a0 <watchlist>
    7c90:	48 01 d0             	add    rax,rdx
    7c93:	48 89 c7             	mov    rdi,rax
    7c96:	e8 24 ff ff ff       	call   7bbf <ready_for_clean>
    7c9b:	85 c0                	test   eax,eax
    7c9d:	7e 2d                	jle    7ccc <scan_for_clean+0x73>
    7c9f:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7ca2:	48 63 d0             	movsxd rdx,eax
    7ca5:	48 89 d0             	mov    rax,rdx
    7ca8:	48 c1 e0 02          	shl    rax,0x2
    7cac:	48 01 d0             	add    rax,rdx
    7caf:	48 c1 e0 03          	shl    rax,0x3
    7cb3:	48 01 d0             	add    rax,rdx
    7cb6:	48 c1 e0 04          	shl    rax,0x4
    7cba:	48 8d 15 df b3 0e 00 	lea    rdx,[rip+0xeb3df]        # f30a0 <watchlist>
    7cc1:	48 01 d0             	add    rax,rdx
    7cc4:	48 89 c7             	mov    rdi,rax
    7cc7:	e8 4f ff ff ff       	call   7c1b <clean>
    7ccc:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    7cd0:	8b 05 42 93 00 00    	mov    eax,DWORD PTR [rip+0x9342]        # 11018 <watchlist_num>
    7cd6:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7cd9:	7e 93                	jle    7c6e <scan_for_clean+0x15>
    7cdb:	90                   	nop
    7cdc:	90                   	nop
    7cdd:	c9                   	leave  
    7cde:	c3                   	ret    

0000000000007cdf <compare_entries>:
    7cdf:	f3 0f 1e fa          	endbr64 
    7ce3:	55                   	push   rbp
    7ce4:	48 89 e5             	mov    rbp,rsp
    7ce7:	48 83 ec 20          	sub    rsp,0x20
    7ceb:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7cef:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7cf3:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7cfa:	e9 ac 00 00 00       	jmp    7dab <compare_entries+0xcc>
    7cff:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7d02:	48 63 d0             	movsxd rdx,eax
    7d05:	48 89 d0             	mov    rax,rdx
    7d08:	48 c1 e0 04          	shl    rax,0x4
    7d0c:	48 01 d0             	add    rax,rdx
    7d0f:	48 01 c0             	add    rax,rax
    7d12:	48 8d 15 87 02 10 00 	lea    rdx,[rip+0x100287]        # 107fa0 <arpcache>
    7d19:	48 01 c2             	add    rdx,rax
    7d1c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7d20:	48 89 c6             	mov    rsi,rax
    7d23:	48 89 d7             	mov    rdi,rdx
    7d26:	e8 a3 01 00 00       	call   7ece <compare_ip_entry>
    7d2b:	85 c0                	test   eax,eax
    7d2d:	74 78                	je     7da7 <compare_entries+0xc8>
    7d2f:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7d32:	48 63 d0             	movsxd rdx,eax
    7d35:	48 89 d0             	mov    rax,rdx
    7d38:	48 c1 e0 04          	shl    rax,0x4
    7d3c:	48 01 d0             	add    rax,rdx
    7d3f:	48 01 c0             	add    rax,rax
    7d42:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7d46:	48 8d 05 53 02 10 00 	lea    rax,[rip+0x100253]        # 107fa0 <arpcache>
    7d4d:	48 01 c2             	add    rdx,rax
    7d50:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7d54:	48 89 c6             	mov    rsi,rax
    7d57:	48 89 d7             	mov    rdi,rdx
    7d5a:	e8 98 01 00 00       	call   7ef7 <compare_mac_entry>
    7d5f:	85 c0                	test   eax,eax
    7d61:	75 44                	jne    7da7 <compare_entries+0xc8>
    7d63:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7d66:	48 63 d0             	movsxd rdx,eax
    7d69:	48 89 d0             	mov    rax,rdx
    7d6c:	48 c1 e0 04          	shl    rax,0x4
    7d70:	48 01 d0             	add    rax,rdx
    7d73:	48 01 c0             	add    rax,rax
    7d76:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7d7a:	48 8d 05 1f 02 10 00 	lea    rax,[rip+0x10021f]        # 107fa0 <arpcache>
    7d81:	48 8d 34 02          	lea    rsi,[rdx+rax*1]
    7d85:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    7d89:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7d8d:	48 89 d1             	mov    rcx,rdx
    7d90:	48 89 f2             	mov    rdx,rsi
    7d93:	48 89 c6             	mov    rsi,rax
    7d96:	48 8d 3d cb 57 00 00 	lea    rdi,[rip+0x57cb]        # d568 <_IO_stdin_used+0x1568>
    7d9d:	b8 00 00 00 00       	mov    eax,0x0
    7da2:	e8 49 a8 ff ff       	call   25f0 <printf@plt>
    7da7:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    7dab:	8b 05 6b 92 00 00    	mov    eax,DWORD PTR [rip+0x926b]        # 1101c <arp_entries>
    7db1:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7db4:	0f 8e 45 ff ff ff    	jle    7cff <compare_entries+0x20>
    7dba:	90                   	nop
    7dbb:	90                   	nop
    7dbc:	c9                   	leave  
    7dbd:	c3                   	ret    

0000000000007dbe <add_entry>:
    7dbe:	f3 0f 1e fa          	endbr64 
    7dc2:	55                   	push   rbp
    7dc3:	48 89 e5             	mov    rbp,rsp
    7dc6:	48 83 ec 20          	sub    rsp,0x20
    7dca:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7dce:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7dd2:	8b 05 44 92 00 00    	mov    eax,DWORD PTR [rip+0x9244]        # 1101c <arp_entries>
    7dd8:	83 c0 01             	add    eax,0x1
    7ddb:	89 05 3b 92 00 00    	mov    DWORD PTR [rip+0x923b],eax        # 1101c <arp_entries>
    7de1:	8b 05 35 92 00 00    	mov    eax,DWORD PTR [rip+0x9235]        # 1101c <arp_entries>
    7de7:	48 63 d0             	movsxd rdx,eax
    7dea:	48 89 d0             	mov    rax,rdx
    7ded:	48 c1 e0 04          	shl    rax,0x4
    7df1:	48 01 d0             	add    rax,rdx
    7df4:	48 01 c0             	add    rax,rax
    7df7:	48 8d 15 a2 01 10 00 	lea    rdx,[rip+0x1001a2]        # 107fa0 <arpcache>
    7dfe:	48 01 d0             	add    rax,rdx
    7e01:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7e05:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7e09:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    7e0d:	48 89 d6             	mov    rsi,rdx
    7e10:	48 89 c7             	mov    rdi,rax
    7e13:	e8 d8 a6 ff ff       	call   24f0 <strcpy@plt>
    7e18:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7e1c:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7e20:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7e24:	48 89 c6             	mov    rsi,rax
    7e27:	48 89 d7             	mov    rdi,rdx
    7e2a:	e8 c1 a6 ff ff       	call   24f0 <strcpy@plt>
    7e2f:	90                   	nop
    7e30:	c9                   	leave  
    7e31:	c3                   	ret    

0000000000007e32 <entry_exists>:
    7e32:	f3 0f 1e fa          	endbr64 
    7e36:	55                   	push   rbp
    7e37:	48 89 e5             	mov    rbp,rsp
    7e3a:	48 83 ec 20          	sub    rsp,0x20
    7e3e:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7e42:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7e46:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7e4d:	eb 6d                	jmp    7ebc <entry_exists+0x8a>
    7e4f:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7e52:	48 63 d0             	movsxd rdx,eax
    7e55:	48 89 d0             	mov    rax,rdx
    7e58:	48 c1 e0 04          	shl    rax,0x4
    7e5c:	48 01 d0             	add    rax,rdx
    7e5f:	48 01 c0             	add    rax,rax
    7e62:	48 8d 15 37 01 10 00 	lea    rdx,[rip+0x100137]        # 107fa0 <arpcache>
    7e69:	48 01 c2             	add    rdx,rax
    7e6c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7e70:	48 89 c6             	mov    rsi,rax
    7e73:	48 89 d7             	mov    rdi,rdx
    7e76:	e8 53 00 00 00       	call   7ece <compare_ip_entry>
    7e7b:	85 c0                	test   eax,eax
    7e7d:	75 39                	jne    7eb8 <entry_exists+0x86>
    7e7f:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7e82:	48 63 d0             	movsxd rdx,eax
    7e85:	48 89 d0             	mov    rax,rdx
    7e88:	48 c1 e0 04          	shl    rax,0x4
    7e8c:	48 01 d0             	add    rax,rdx
    7e8f:	48 01 c0             	add    rax,rax
    7e92:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7e96:	48 8d 05 03 01 10 00 	lea    rax,[rip+0x100103]        # 107fa0 <arpcache>
    7e9d:	48 01 c2             	add    rdx,rax
    7ea0:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7ea4:	48 89 c6             	mov    rsi,rax
    7ea7:	48 89 d7             	mov    rdi,rdx
    7eaa:	e8 48 00 00 00       	call   7ef7 <compare_mac_entry>
    7eaf:	85 c0                	test   eax,eax
    7eb1:	75 05                	jne    7eb8 <entry_exists+0x86>
    7eb3:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7eb6:	eb 14                	jmp    7ecc <entry_exists+0x9a>
    7eb8:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    7ebc:	8b 05 5a 91 00 00    	mov    eax,DWORD PTR [rip+0x915a]        # 1101c <arp_entries>
    7ec2:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7ec5:	7e 88                	jle    7e4f <entry_exists+0x1d>
    7ec7:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7ecc:	c9                   	leave  
    7ecd:	c3                   	ret    

0000000000007ece <compare_ip_entry>:
    7ece:	f3 0f 1e fa          	endbr64 
    7ed2:	55                   	push   rbp
    7ed3:	48 89 e5             	mov    rbp,rsp
    7ed6:	48 83 ec 10          	sub    rsp,0x10
    7eda:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7ede:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7ee2:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    7ee6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7eea:	48 89 d6             	mov    rsi,rdx
    7eed:	48 89 c7             	mov    rdi,rax
    7ef0:	e8 bb a7 ff ff       	call   26b0 <strcmp@plt>
    7ef5:	c9                   	leave  
    7ef6:	c3                   	ret    

0000000000007ef7 <compare_mac_entry>:
    7ef7:	f3 0f 1e fa          	endbr64 
    7efb:	55                   	push   rbp
    7efc:	48 89 e5             	mov    rbp,rsp
    7eff:	48 83 ec 10          	sub    rsp,0x10
    7f03:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7f07:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7f0b:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    7f0f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7f13:	48 89 d6             	mov    rsi,rdx
    7f16:	48 89 c7             	mov    rdi,rax
    7f19:	e8 92 a7 ff ff       	call   26b0 <strcmp@plt>
    7f1e:	c9                   	leave  
    7f1f:	c3                   	ret    

0000000000007f20 <load_csv_arp_cache>:
    7f20:	f3 0f 1e fa          	endbr64 
    7f24:	55                   	push   rbp
    7f25:	48 89 e5             	mov    rbp,rsp
    7f28:	53                   	push   rbx
    7f29:	48 83 ec 68          	sub    rsp,0x68
    7f2d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7f34:	00 00 
    7f36:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    7f3a:	31 c0                	xor    eax,eax
    7f3c:	48 8d 35 5b 56 00 00 	lea    rsi,[rip+0x565b]        # d59e <_IO_stdin_used+0x159e>
    7f43:	48 8d 3d 56 56 00 00 	lea    rdi,[rip+0x5656]        # d5a0 <_IO_stdin_used+0x15a0>
    7f4a:	e8 61 a8 ff ff       	call   27b0 <fopen@plt>
    7f4f:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    7f53:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
    7f58:	75 22                	jne    7f7c <load_csv_arp_cache+0x5c>
    7f5a:	48 8d 3d 5f 56 00 00 	lea    rdi,[rip+0x565f]        # d5c0 <_IO_stdin_used+0x15c0>
    7f61:	e8 ba a5 ff ff       	call   2520 <puts@plt>
    7f66:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    7f6a:	48 89 c7             	mov    rdi,rax
    7f6d:	e8 fe a5 ff ff       	call   2570 <fclose@plt>
    7f72:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7f77:	e9 dd 00 00 00       	jmp    8059 <load_csv_arp_cache+0x139>
    7f7c:	48 c7 45 98 00 00 00 	mov    QWORD PTR [rbp-0x68],0x0
    7f83:	00 
    7f84:	48 c7 45 a0 00 00 00 	mov    QWORD PTR [rbp-0x60],0x0
    7f8b:	00 
    7f8c:	eb 7c                	jmp    800a <load_csv_arp_cache+0xea>
    7f8e:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7f92:	48 85 c0             	test   rax,rax
    7f95:	0f 84 97 00 00 00    	je     8032 <load_csv_arp_cache+0x112>
    7f9b:	48 8b 5d 98          	mov    rbx,QWORD PTR [rbp-0x68]
    7f9f:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7fa3:	48 8d 35 4f 56 00 00 	lea    rsi,[rip+0x564f]        # d5f9 <_IO_stdin_used+0x15f9>
    7faa:	48 89 c7             	mov    rdi,rax
    7fad:	e8 be a6 ff ff       	call   2670 <strcspn@plt>
    7fb2:	48 01 d8             	add    rax,rbx
    7fb5:	c6 00 00             	mov    BYTE PTR [rax],0x0
    7fb8:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7fbc:	48 8d 35 38 56 00 00 	lea    rsi,[rip+0x5638]        # d5fb <_IO_stdin_used+0x15fb>
    7fc3:	48 89 c7             	mov    rdi,rax
    7fc6:	e8 05 a8 ff ff       	call   27d0 <strtok@plt>
    7fcb:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    7fcf:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    7fd3:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    7fd7:	48 89 d6             	mov    rsi,rdx
    7fda:	48 89 c7             	mov    rdi,rax
    7fdd:	e8 0e a5 ff ff       	call   24f0 <strcpy@plt>
    7fe2:	48 8d 35 12 56 00 00 	lea    rsi,[rip+0x5612]        # d5fb <_IO_stdin_used+0x15fb>
    7fe9:	bf 00 00 00 00       	mov    edi,0x0
    7fee:	e8 dd a7 ff ff       	call   27d0 <strtok@plt>
    7ff3:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    7ff7:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    7ffb:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    7fff:	48 89 d6             	mov    rsi,rdx
    8002:	48 89 c7             	mov    rdi,rax
    8005:	e8 e6 a4 ff ff       	call   24f0 <strcpy@plt>
    800a:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    800e:	48 8d 4d a0          	lea    rcx,[rbp-0x60]
    8012:	48 8d 45 98          	lea    rax,[rbp-0x68]
    8016:	48 89 ce             	mov    rsi,rcx
    8019:	48 89 c7             	mov    rdi,rax
    801c:	e8 0f a8 ff ff       	call   2830 <getline@plt>
    8021:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    8025:	48 83 7d b0 ff       	cmp    QWORD PTR [rbp-0x50],0xffffffffffffffff
    802a:	0f 85 5e ff ff ff    	jne    7f8e <load_csv_arp_cache+0x6e>
    8030:	eb 01                	jmp    8033 <load_csv_arp_cache+0x113>
    8032:	90                   	nop
    8033:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    8037:	48 85 c0             	test   rax,rax
    803a:	74 0c                	je     8048 <load_csv_arp_cache+0x128>
    803c:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    8040:	48 89 c7             	mov    rdi,rax
    8043:	e8 48 a4 ff ff       	call   2490 <free@plt>
    8048:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    804c:	48 89 c7             	mov    rdi,rax
    804f:	e8 1c a5 ff ff       	call   2570 <fclose@plt>
    8054:	b8 01 00 00 00       	mov    eax,0x1
    8059:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    805d:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
    8064:	00 00 
    8066:	74 05                	je     806d <load_csv_arp_cache+0x14d>
    8068:	e8 43 a5 ff ff       	call   25b0 <__stack_chk_fail@plt>
    806d:	48 83 c4 68          	add    rsp,0x68
    8071:	5b                   	pop    rbx
    8072:	5d                   	pop    rbp
    8073:	c3                   	ret    

0000000000008074 <tls_decode>:
    8074:	f3 0f 1e fa          	endbr64 
    8078:	55                   	push   rbp
    8079:	48 89 e5             	mov    rbp,rsp
    807c:	48 83 ec 30          	sub    rsp,0x30
    8080:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8084:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    8088:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    808c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8090:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8094:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8098:	0f b7 40 01          	movzx  eax,WORD PTR [rax+0x1]
    809c:	0f b7 c0             	movzx  eax,ax
    809f:	3d 03 03 00 00       	cmp    eax,0x303
    80a4:	74 6a                	je     8110 <tls_decode+0x9c>
    80a6:	3d 03 03 00 00       	cmp    eax,0x303
    80ab:	0f 8f c7 00 00 00    	jg     8178 <tls_decode+0x104>
    80b1:	3d 01 03 00 00       	cmp    eax,0x301
    80b6:	74 0c                	je     80c4 <tls_decode+0x50>
    80b8:	3d 02 03 00 00       	cmp    eax,0x302
    80bd:	74 2b                	je     80ea <tls_decode+0x76>
    80bf:	e9 b4 00 00 00       	jmp    8178 <tls_decode+0x104>
    80c4:	0f b6 05 8e fc 0f 00 	movzx  eax,BYTE PTR [rip+0xffc8e]        # 107d59 <packet_print>
    80cb:	84 c0                	test   al,al
    80cd:	74 11                	je     80e0 <tls_decode+0x6c>
    80cf:	48 8d 3d 2a 55 00 00 	lea    rdi,[rip+0x552a]        # d600 <_IO_stdin_used+0x1600>
    80d6:	b8 00 00 00 00       	mov    eax,0x0
    80db:	e8 10 a5 ff ff       	call   25f0 <printf@plt>
    80e0:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    80e4:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    80e8:	eb 4b                	jmp    8135 <tls_decode+0xc1>
    80ea:	0f b6 05 68 fc 0f 00 	movzx  eax,BYTE PTR [rip+0xffc68]        # 107d59 <packet_print>
    80f1:	84 c0                	test   al,al
    80f3:	74 11                	je     8106 <tls_decode+0x92>
    80f5:	48 8d 3d 13 55 00 00 	lea    rdi,[rip+0x5513]        # d60f <_IO_stdin_used+0x160f>
    80fc:	b8 00 00 00 00       	mov    eax,0x0
    8101:	e8 ea a4 ff ff       	call   25f0 <printf@plt>
    8106:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    810a:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    810e:	eb 25                	jmp    8135 <tls_decode+0xc1>
    8110:	0f b6 05 42 fc 0f 00 	movzx  eax,BYTE PTR [rip+0xffc42]        # 107d59 <packet_print>
    8117:	84 c0                	test   al,al
    8119:	74 11                	je     812c <tls_decode+0xb8>
    811b:	48 8d 3d fc 54 00 00 	lea    rdi,[rip+0x54fc]        # d61e <_IO_stdin_used+0x161e>
    8122:	b8 00 00 00 00       	mov    eax,0x0
    8127:	e8 c4 a4 ff ff       	call   25f0 <printf@plt>
    812c:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8130:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    8134:	90                   	nop
    8135:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8139:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    813c:	0f b6 c0             	movzx  eax,al
    813f:	83 f8 17             	cmp    eax,0x17
    8142:	74 37                	je     817b <tls_decode+0x107>
    8144:	83 f8 17             	cmp    eax,0x17
    8147:	7f 35                	jg     817e <tls_decode+0x10a>
    8149:	83 f8 16             	cmp    eax,0x16
    814c:	74 11                	je     815f <tls_decode+0xeb>
    814e:	83 f8 16             	cmp    eax,0x16
    8151:	7f 2b                	jg     817e <tls_decode+0x10a>
    8153:	83 f8 14             	cmp    eax,0x14
    8156:	74 29                	je     8181 <tls_decode+0x10d>
    8158:	83 f8 15             	cmp    eax,0x15
    815b:	74 27                	je     8184 <tls_decode+0x110>
    815d:	eb 1f                	jmp    817e <tls_decode+0x10a>
    815f:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    8163:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    8167:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    816b:	48 89 ce             	mov    rsi,rcx
    816e:	48 89 c7             	mov    rdi,rax
    8171:	e8 11 00 00 00       	call   8187 <tlshandshake>
    8176:	eb 0d                	jmp    8185 <tls_decode+0x111>
    8178:	90                   	nop
    8179:	eb 0a                	jmp    8185 <tls_decode+0x111>
    817b:	90                   	nop
    817c:	eb 07                	jmp    8185 <tls_decode+0x111>
    817e:	90                   	nop
    817f:	eb 04                	jmp    8185 <tls_decode+0x111>
    8181:	90                   	nop
    8182:	eb 01                	jmp    8185 <tls_decode+0x111>
    8184:	90                   	nop
    8185:	c9                   	leave  
    8186:	c3                   	ret    

0000000000008187 <tlshandshake>:
    8187:	f3 0f 1e fa          	endbr64 
    818b:	55                   	push   rbp
    818c:	48 89 e5             	mov    rbp,rsp
    818f:	48 83 ec 30          	sub    rsp,0x30
    8193:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8197:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    819b:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    819f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    81a3:	48 83 c0 08          	add    rax,0x8
    81a7:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    81ab:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    81af:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    81b2:	0f b6 c0             	movzx  eax,al
    81b5:	83 f8 0b             	cmp    eax,0xb
    81b8:	0f 87 bf 00 00 00    	ja     827d <tlshandshake+0xf6>
    81be:	89 c0                	mov    eax,eax
    81c0:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    81c7:	00 
    81c8:	48 8d 05 a5 54 00 00 	lea    rax,[rip+0x54a5]        # d674 <_IO_stdin_used+0x1674>
    81cf:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    81d2:	48 98                	cdqe   
    81d4:	48 8d 15 99 54 00 00 	lea    rdx,[rip+0x5499]        # d674 <_IO_stdin_used+0x1674>
    81db:	48 01 d0             	add    rax,rdx
    81de:	3e ff e0             	notrack jmp rax
    81e1:	48 8d 3d 45 54 00 00 	lea    rdi,[rip+0x5445]        # d62d <_IO_stdin_used+0x162d>
    81e8:	e8 33 a3 ff ff       	call   2520 <puts@plt>
    81ed:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    81f1:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    81f5:	e9 83 00 00 00       	jmp    827d <tlshandshake+0xf6>
    81fa:	0f b6 05 58 fb 0f 00 	movzx  eax,BYTE PTR [rip+0xffb58]        # 107d59 <packet_print>
    8201:	84 c0                	test   al,al
    8203:	74 0c                	je     8211 <tlshandshake+0x8a>
    8205:	48 8d 3d 2e 54 00 00 	lea    rdi,[rip+0x542e]        # d63a <_IO_stdin_used+0x163a>
    820c:	e8 0f a3 ff ff       	call   2520 <puts@plt>
    8211:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8215:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    8219:	eb 62                	jmp    827d <tlshandshake+0xf6>
    821b:	0f b6 05 37 fb 0f 00 	movzx  eax,BYTE PTR [rip+0xffb37]        # 107d59 <packet_print>
    8222:	84 c0                	test   al,al
    8224:	74 0c                	je     8232 <tlshandshake+0xab>
    8226:	48 8d 3d 1a 54 00 00 	lea    rdi,[rip+0x541a]        # d647 <_IO_stdin_used+0x1647>
    822d:	e8 ee a2 ff ff       	call   2520 <puts@plt>
    8232:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8236:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    823a:	eb 41                	jmp    827d <tlshandshake+0xf6>
    823c:	0f b6 05 16 fb 0f 00 	movzx  eax,BYTE PTR [rip+0xffb16]        # 107d59 <packet_print>
    8243:	84 c0                	test   al,al
    8245:	74 0c                	je     8253 <tlshandshake+0xcc>
    8247:	48 8d 3d 0c 54 00 00 	lea    rdi,[rip+0x540c]        # d65a <_IO_stdin_used+0x165a>
    824e:	e8 cd a2 ff ff       	call   2520 <puts@plt>
    8253:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8257:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    825b:	eb 20                	jmp    827d <tlshandshake+0xf6>
    825d:	0f b6 05 f5 fa 0f 00 	movzx  eax,BYTE PTR [rip+0xffaf5]        # 107d59 <packet_print>
    8264:	84 c0                	test   al,al
    8266:	74 0c                	je     8274 <tlshandshake+0xed>
    8268:	48 8d 3d f7 53 00 00 	lea    rdi,[rip+0x53f7]        # d666 <_IO_stdin_used+0x1666>
    826f:	e8 ac a2 ff ff       	call   2520 <puts@plt>
    8274:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8278:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    827c:	90                   	nop
    827d:	90                   	nop
    827e:	c9                   	leave  
    827f:	c3                   	ret    

0000000000008280 <process_opcode>:
    8280:	f3 0f 1e fa          	endbr64 
    8284:	55                   	push   rbp
    8285:	48 89 e5             	mov    rbp,rsp
    8288:	48 81 ec 30 04 00 00 	sub    rsp,0x430
    828f:	48 89 bd d8 fb ff ff 	mov    QWORD PTR [rbp-0x428],rdi
    8296:	48 89 b5 d0 fb ff ff 	mov    QWORD PTR [rbp-0x430],rsi
    829d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    82a4:	00 00 
    82a6:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    82aa:	31 c0                	xor    eax,eax
    82ac:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    82b3:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    82b6:	0f b6 c0             	movzx  eax,al
    82b9:	3d db 00 00 00       	cmp    eax,0xdb
    82be:	75 4b                	jne    830b <process_opcode+0x8b>
    82c0:	c6 85 e4 fb ff ff db 	mov    BYTE PTR [rbp-0x41c],0xdb
    82c7:	8b 85 e4 fb ff ff    	mov    eax,DWORD PTR [rbp-0x41c]
    82cd:	0f b6 c0             	movzx  eax,al
    82d0:	0d 00 00 00 01       	or     eax,0x1000000
    82d5:	89 85 e4 fb ff ff    	mov    DWORD PTR [rbp-0x41c],eax
    82db:	48 8d 85 e4 fb ff ff 	lea    rax,[rbp-0x41c]
    82e2:	48 89 85 e8 fb ff ff 	mov    QWORD PTR [rbp-0x418],rax
    82e9:	48 8b 85 d0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x430]
    82f0:	8b 00                	mov    eax,DWORD PTR [rax]
    82f2:	48 8b b5 e8 fb ff ff 	mov    rsi,QWORD PTR [rbp-0x418]
    82f9:	b9 00 00 00 00       	mov    ecx,0x0
    82fe:	ba 04 00 00 00       	mov    edx,0x4
    8303:	89 c7                	mov    edi,eax
    8305:	e8 c6 a2 ff ff       	call   25d0 <send@plt>
    830a:	90                   	nop
    830b:	90                   	nop
    830c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8310:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    8317:	00 00 
    8319:	74 05                	je     8320 <process_opcode+0xa0>
    831b:	e8 90 a2 ff ff       	call   25b0 <__stack_chk_fail@plt>
    8320:	c9                   	leave  
    8321:	c3                   	ret    

0000000000008322 <callback>:
    8322:	f3 0f 1e fa          	endbr64 
    8326:	55                   	push   rbp
    8327:	48 89 e5             	mov    rbp,rsp
    832a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    832e:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
    8331:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    8335:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    8339:	b8 00 00 00 00       	mov    eax,0x0
    833e:	5d                   	pop    rbp
    833f:	c3                   	ret    

0000000000008340 <update_db>:
    8340:	f3 0f 1e fa          	endbr64 
    8344:	55                   	push   rbp
    8345:	48 89 e5             	mov    rbp,rsp
    8348:	48 81 ec 40 02 00 00 	sub    rsp,0x240
    834f:	48 89 bd c8 fd ff ff 	mov    QWORD PTR [rbp-0x238],rdi
    8356:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    835d:	00 00 
    835f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8363:	31 c0                	xor    eax,eax
    8365:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    836c:	48 89 85 e8 fd ff ff 	mov    QWORD PTR [rbp-0x218],rax
    8373:	48 8d 3d 2e 53 00 00 	lea    rdi,[rip+0x532e]        # d6a8 <_IO_stdin_used+0x16a8>
    837a:	e8 a1 a1 ff ff       	call   2520 <puts@plt>
    837f:	48 c7 85 d8 fd ff ff 	mov    QWORD PTR [rbp-0x228],0x0
    8386:	00 00 00 00 
    838a:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    8391:	48 89 c6             	mov    rsi,rax
    8394:	48 8d 3d 85 f9 0f 00 	lea    rdi,[rip+0xff985]        # 107d20 <sqlite_db_path>
    839b:	e8 c0 a1 ff ff       	call   2560 <sqlite3_open@plt>
    83a0:	89 85 d4 fd ff ff    	mov    DWORD PTR [rbp-0x22c],eax
    83a6:	83 bd d4 fd ff ff 00 	cmp    DWORD PTR [rbp-0x22c],0x0
    83ad:	74 28                	je     83d7 <update_db+0x97>
    83af:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    83b6:	48 89 c7             	mov    rdi,rax
    83b9:	e8 e2 a2 ff ff       	call   26a0 <sqlite3_errmsg@plt>
    83be:	48 89 c6             	mov    rsi,rax
    83c1:	48 8d 3d ec 52 00 00 	lea    rdi,[rip+0x52ec]        # d6b4 <_IO_stdin_used+0x16b4>
    83c8:	b8 00 00 00 00       	mov    eax,0x0
    83cd:	e8 1e a2 ff ff       	call   25f0 <printf@plt>
    83d2:	e9 a2 00 00 00       	jmp    8479 <update_db+0x139>
    83d7:	48 8b 85 e8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x218]
    83de:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    83e1:	85 c0                	test   eax,eax
    83e3:	75 2e                	jne    8413 <update_db+0xd3>
    83e5:	48 8b 85 e8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x218]
    83ec:	48 8d 48 10          	lea    rcx,[rax+0x10]
    83f0:	48 8b 95 e8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x218]
    83f7:	48 8d 85 f0 fd ff ff 	lea    rax,[rbp-0x210]
    83fe:	48 8d 35 c3 52 00 00 	lea    rsi,[rip+0x52c3]        # d6c8 <_IO_stdin_used+0x16c8>
    8405:	48 89 c7             	mov    rdi,rax
    8408:	b8 00 00 00 00       	mov    eax,0x0
    840d:	e8 5e a4 ff ff       	call   2870 <sprintf@plt>
    8412:	90                   	nop
    8413:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    841a:	48 8d 95 d8 fd ff ff 	lea    rdx,[rbp-0x228]
    8421:	48 8d b5 f0 fd ff ff 	lea    rsi,[rbp-0x210]
    8428:	49 89 d0             	mov    r8,rdx
    842b:	b9 00 00 00 00       	mov    ecx,0x0
    8430:	ba 00 00 00 00       	mov    edx,0x0
    8435:	48 89 c7             	mov    rdi,rax
    8438:	e8 13 a1 ff ff       	call   2550 <sqlite3_exec@plt>
    843d:	89 85 d4 fd ff ff    	mov    DWORD PTR [rbp-0x22c],eax
    8443:	83 bd d4 fd ff ff 00 	cmp    DWORD PTR [rbp-0x22c],0x0
    844a:	74 2c                	je     8478 <update_db+0x138>
    844c:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    8453:	48 89 c6             	mov    rsi,rax
    8456:	48 8d 3d b0 52 00 00 	lea    rdi,[rip+0x52b0]        # d70d <_IO_stdin_used+0x170d>
    845d:	b8 00 00 00 00       	mov    eax,0x0
    8462:	e8 89 a1 ff ff       	call   25f0 <printf@plt>
    8467:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    846e:	48 89 c7             	mov    rdi,rax
    8471:	e8 ea a3 ff ff       	call   2860 <sqlite3_free@plt>
    8476:	eb 01                	jmp    8479 <update_db+0x139>
    8478:	90                   	nop
    8479:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    8480:	48 89 c7             	mov    rdi,rax
    8483:	e8 68 a2 ff ff       	call   26f0 <sqlite3_close@plt>
    8488:	b8 01 00 00 00       	mov    eax,0x1
    848d:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    8491:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
    8498:	00 00 
    849a:	74 05                	je     84a1 <update_db+0x161>
    849c:	e8 0f a1 ff ff       	call   25b0 <__stack_chk_fail@plt>
    84a1:	c9                   	leave  
    84a2:	c3                   	ret    

00000000000084a3 <update_spi_db>:
    84a3:	f3 0f 1e fa          	endbr64 
    84a7:	55                   	push   rbp
    84a8:	48 89 e5             	mov    rbp,rsp
    84ab:	41 57                	push   r15
    84ad:	41 56                	push   r14
    84af:	41 55                	push   r13
    84b1:	41 54                	push   r12
    84b3:	53                   	push   rbx
    84b4:	48 81 ec 48 04 00 00 	sub    rsp,0x448
    84bb:	48 89 bd 98 fb ff ff 	mov    QWORD PTR [rbp-0x468],rdi
    84c2:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    84c9:	00 00 
    84cb:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    84cf:	31 c0                	xor    eax,eax
    84d1:	48 8b 85 98 fb ff ff 	mov    rax,QWORD PTR [rbp-0x468]
    84d8:	48 89 85 b0 fb ff ff 	mov    QWORD PTR [rbp-0x450],rax
    84df:	48 8d 85 a0 fb ff ff 	lea    rax,[rbp-0x460]
    84e6:	48 89 c6             	mov    rsi,rax
    84e9:	48 8d 3d 3b 52 00 00 	lea    rdi,[rip+0x523b]        # d72b <_IO_stdin_used+0x172b>
    84f0:	e8 6b a0 ff ff       	call   2560 <sqlite3_open@plt>
    84f5:	85 c0                	test   eax,eax
    84f7:	74 3c                	je     8535 <update_spi_db+0x92>
    84f9:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    8500:	48 89 c7             	mov    rdi,rax
    8503:	e8 98 a1 ff ff       	call   26a0 <sqlite3_errmsg@plt>
    8508:	48 89 c6             	mov    rsi,rax
    850b:	48 8d 3d 31 52 00 00 	lea    rdi,[rip+0x5231]        # d743 <_IO_stdin_used+0x1743>
    8512:	b8 00 00 00 00       	mov    eax,0x0
    8517:	e8 d4 a0 ff ff       	call   25f0 <printf@plt>
    851c:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    8523:	48 89 c7             	mov    rdi,rax
    8526:	e8 c5 a1 ff ff       	call   26f0 <sqlite3_close@plt>
    852b:	b8 00 00 00 00       	mov    eax,0x0
    8530:	e9 5c 01 00 00       	jmp    8691 <update_spi_db+0x1ee>
    8535:	48 8d 05 1c 52 00 00 	lea    rax,[rip+0x521c]        # d758 <_IO_stdin_used+0x1758>
    853c:	48 89 85 b8 fb ff ff 	mov    QWORD PTR [rbp-0x448],rax
    8543:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    854a:	8b 90 80 00 00 00    	mov    edx,DWORD PTR [rax+0x80]
    8550:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8557:	44 8b 78 7c          	mov    r15d,DWORD PTR [rax+0x7c]
    855b:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8562:	4c 8b b0 98 00 00 00 	mov    r14,QWORD PTR [rax+0x98]
    8569:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8570:	4c 8b a8 90 00 00 00 	mov    r13,QWORD PTR [rax+0x90]
    8577:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    857e:	44 8b a0 a8 00 00 00 	mov    r12d,DWORD PTR [rax+0xa8]
    8585:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    858c:	8b 98 a4 00 00 00    	mov    ebx,DWORD PTR [rax+0xa4]
    8592:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8599:	48 8b 40 70          	mov    rax,QWORD PTR [rax+0x70]
    859d:	44 8b 18             	mov    r11d,DWORD PTR [rax]
    85a0:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    85a7:	44 8b 50 60          	mov    r10d,DWORD PTR [rax+0x60]
    85ab:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    85b2:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
    85b6:	44 8b 08             	mov    r9d,DWORD PTR [rax]
    85b9:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    85c0:	44 8b 40 5c          	mov    r8d,DWORD PTR [rax+0x5c]
    85c4:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    85cb:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    85ce:	89 85 94 fb ff ff    	mov    DWORD PTR [rbp-0x46c],eax
    85d4:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    85db:	8b 48 54             	mov    ecx,DWORD PTR [rax+0x54]
    85de:	89 8d 90 fb ff ff    	mov    DWORD PTR [rbp-0x470],ecx
    85e4:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    85eb:	48 8d 48 29          	lea    rcx,[rax+0x29]
    85ef:	48 8b bd b0 fb ff ff 	mov    rdi,QWORD PTR [rbp-0x450]
    85f6:	48 8b b5 b8 fb ff ff 	mov    rsi,QWORD PTR [rbp-0x448]
    85fd:	48 8d 85 c0 fb ff ff 	lea    rax,[rbp-0x440]
    8604:	52                   	push   rdx
    8605:	41 57                	push   r15
    8607:	41 56                	push   r14
    8609:	41 55                	push   r13
    860b:	41 54                	push   r12
    860d:	53                   	push   rbx
    860e:	41 53                	push   r11
    8610:	41 52                	push   r10
    8612:	41 51                	push   r9
    8614:	41 50                	push   r8
    8616:	44 8b 8d 94 fb ff ff 	mov    r9d,DWORD PTR [rbp-0x46c]
    861d:	44 8b 85 90 fb ff ff 	mov    r8d,DWORD PTR [rbp-0x470]
    8624:	48 89 fa             	mov    rdx,rdi
    8627:	48 89 c7             	mov    rdi,rax
    862a:	b8 00 00 00 00       	mov    eax,0x0
    862f:	e8 3c a2 ff ff       	call   2870 <sprintf@plt>
    8634:	48 83 c4 50          	add    rsp,0x50
    8638:	48 c7 85 a8 fb ff ff 	mov    QWORD PTR [rbp-0x458],0x0
    863f:	00 00 00 00 
    8643:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    864a:	48 8d 95 a8 fb ff ff 	lea    rdx,[rbp-0x458]
    8651:	48 8d b5 c0 fb ff ff 	lea    rsi,[rbp-0x440]
    8658:	49 89 d0             	mov    r8,rdx
    865b:	b9 00 00 00 00       	mov    ecx,0x0
    8660:	ba 00 00 00 00       	mov    edx,0x0
    8665:	48 89 c7             	mov    rdi,rax
    8668:	e8 e3 9e ff ff       	call   2550 <sqlite3_exec@plt>
    866d:	85 c0                	test   eax,eax
    866f:	74 1b                	je     868c <update_spi_db+0x1e9>
    8671:	48 8b 85 a8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x458]
    8678:	48 89 c6             	mov    rsi,rax
    867b:	48 8d 3d c3 51 00 00 	lea    rdi,[rip+0x51c3]        # d845 <_IO_stdin_used+0x1845>
    8682:	b8 00 00 00 00       	mov    eax,0x0
    8687:	e8 64 9f ff ff       	call   25f0 <printf@plt>
    868c:	b8 00 00 00 00       	mov    eax,0x0
    8691:	48 8b 5d c8          	mov    rbx,QWORD PTR [rbp-0x38]
    8695:	64 48 33 1c 25 28 00 	xor    rbx,QWORD PTR fs:0x28
    869c:	00 00 
    869e:	74 05                	je     86a5 <update_spi_db+0x202>
    86a0:	e8 0b 9f ff ff       	call   25b0 <__stack_chk_fail@plt>
    86a5:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    86a9:	5b                   	pop    rbx
    86aa:	41 5c                	pop    r12
    86ac:	41 5d                	pop    r13
    86ae:	41 5e                	pop    r14
    86b0:	41 5f                	pop    r15
    86b2:	5d                   	pop    rbp
    86b3:	c3                   	ret    

00000000000086b4 <http_disect>:
    86b4:	f3 0f 1e fa          	endbr64 
    86b8:	55                   	push   rbp
    86b9:	48 89 e5             	mov    rbp,rsp
    86bc:	48 81 ec 30 04 00 00 	sub    rsp,0x430
    86c3:	48 89 bd d8 fb ff ff 	mov    QWORD PTR [rbp-0x428],rdi
    86ca:	48 89 b5 d0 fb ff ff 	mov    QWORD PTR [rbp-0x430],rsi
    86d1:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    86d8:	00 00 
    86da:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    86de:	31 c0                	xor    eax,eax
    86e0:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    86e7:	be 0d 00 00 00       	mov    esi,0xd
    86ec:	48 89 c7             	mov    rdi,rax
    86ef:	e8 47 ae ff ff       	call   353b <strloc>
    86f4:	89 85 ec fb ff ff    	mov    DWORD PTR [rbp-0x414],eax
    86fa:	48 8d 3d 62 51 00 00 	lea    rdi,[rip+0x5162]        # d863 <_IO_stdin_used+0x1863>
    8701:	e8 1a 9e ff ff       	call   2520 <puts@plt>
    8706:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    870d:	48 89 c7             	mov    rdi,rax
    8710:	e8 cd ae ff ff       	call   35e2 <test_string_arr_print>
    8715:	83 f0 01             	xor    eax,0x1
    8718:	84 c0                	test   al,al
    871a:	75 33                	jne    874f <http_disect+0x9b>
    871c:	8b 85 ec fb ff ff    	mov    eax,DWORD PTR [rbp-0x414]
    8722:	48 63 d0             	movsxd rdx,eax
    8725:	48 8b 8d d8 fb ff ff 	mov    rcx,QWORD PTR [rbp-0x428]
    872c:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    8733:	48 89 ce             	mov    rsi,rcx
    8736:	48 89 c7             	mov    rdi,rax
    8739:	e8 92 9d ff ff       	call   24d0 <strncpy@plt>
    873e:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    8745:	48 89 c7             	mov    rdi,rax
    8748:	e8 d3 9d ff ff       	call   2520 <puts@plt>
    874d:	eb 01                	jmp    8750 <http_disect+0x9c>
    874f:	90                   	nop
    8750:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8754:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    875b:	00 00 
    875d:	74 05                	je     8764 <http_disect+0xb0>
    875f:	e8 4c 9e ff ff       	call   25b0 <__stack_chk_fail@plt>
    8764:	c9                   	leave  
    8765:	c3                   	ret    

0000000000008766 <dns_disect>:
    8766:	f3 0f 1e fa          	endbr64 
    876a:	55                   	push   rbp
    876b:	48 89 e5             	mov    rbp,rsp
    876e:	48 83 ec 30          	sub    rsp,0x30
    8772:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    8776:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    877a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    877e:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    8782:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8786:	48 83 c0 0c          	add    rax,0xc
    878a:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    878e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8792:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    8796:	66 85 c0             	test   ax,ax
    8799:	75 6d                	jne    8808 <dns_disect+0xa2>
    879b:	bf 00 04 00 00       	mov    edi,0x400
    87a0:	e8 9b 9f ff ff       	call   2740 <malloc@plt>
    87a5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    87a9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    87ad:	ba 08 00 00 00       	mov    edx,0x8
    87b2:	be 00 00 00 00       	mov    esi,0x0
    87b7:	48 89 c7             	mov    rdi,rax
    87ba:	e8 71 9e ff ff       	call   2630 <memset@plt>
    87bf:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    87c3:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    87c7:	48 89 d6             	mov    rsi,rdx
    87ca:	48 89 c7             	mov    rdi,rax
    87cd:	e8 39 00 00 00       	call   880b <get_dns_name>
    87d2:	0f b6 05 80 f5 0f 00 	movzx  eax,BYTE PTR [rip+0xff580]        # 107d59 <packet_print>
    87d9:	84 c0                	test   al,al
    87db:	74 18                	je     87f5 <dns_disect+0x8f>
    87dd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    87e1:	48 89 c6             	mov    rsi,rax
    87e4:	48 8d 3d 8a 50 00 00 	lea    rdi,[rip+0x508a]        # d875 <_IO_stdin_used+0x1875>
    87eb:	b8 00 00 00 00       	mov    eax,0x0
    87f0:	e8 fb 9d ff ff       	call   25f0 <printf@plt>
    87f5:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    87fa:	74 0c                	je     8808 <dns_disect+0xa2>
    87fc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8800:	48 89 c7             	mov    rdi,rax
    8803:	e8 88 9c ff ff       	call   2490 <free@plt>
    8808:	90                   	nop
    8809:	c9                   	leave  
    880a:	c3                   	ret    

000000000000880b <get_dns_name>:
    880b:	f3 0f 1e fa          	endbr64 
    880f:	55                   	push   rbp
    8810:	48 89 e5             	mov    rbp,rsp
    8813:	53                   	push   rbx
    8814:	48 83 ec 28          	sub    rsp,0x28
    8818:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    881c:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    8820:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    8827:	eb 6a                	jmp    8893 <get_dns_name+0x88>
    8829:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    882c:	48 63 d0             	movsxd rdx,eax
    882f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8833:	48 01 d0             	add    rax,rdx
    8836:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    8839:	3c 20                	cmp    al,0x20
    883b:	7e 24                	jle    8861 <get_dns_name+0x56>
    883d:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    8840:	48 63 d0             	movsxd rdx,eax
    8843:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8847:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    884b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    884f:	ba 01 00 00 00       	mov    edx,0x1
    8854:	48 89 ce             	mov    rsi,rcx
    8857:	48 89 c7             	mov    rdi,rax
    885a:	e8 e1 9d ff ff       	call   2640 <strncat@plt>
    885f:	eb 2e                	jmp    888f <get_dns_name+0x84>
    8861:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    8865:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    886c:	48 89 c2             	mov    rdx,rax
    886f:	b8 00 00 00 00       	mov    eax,0x0
    8874:	48 89 d7             	mov    rdi,rdx
    8877:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    8879:	48 89 c8             	mov    rax,rcx
    887c:	48 f7 d0             	not    rax
    887f:	48 8d 50 ff          	lea    rdx,[rax-0x1]
    8883:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    8887:	48 01 d0             	add    rax,rdx
    888a:	66 c7 00 2e 00       	mov    WORD PTR [rax],0x2e
    888f:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    8893:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    8896:	48 63 d8             	movsxd rbx,eax
    8899:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    889d:	48 89 c7             	mov    rdi,rax
    88a0:	e8 eb 9c ff ff       	call   2590 <strlen@plt>
    88a5:	48 39 c3             	cmp    rbx,rax
    88a8:	0f 82 7b ff ff ff    	jb     8829 <get_dns_name+0x1e>
    88ae:	90                   	nop
    88af:	90                   	nop
    88b0:	48 83 c4 28          	add    rsp,0x28
    88b4:	5b                   	pop    rbx
    88b5:	5d                   	pop    rbp
    88b6:	c3                   	ret    

00000000000088b7 <ftp_disect>:
    88b7:	f3 0f 1e fa          	endbr64 
    88bb:	55                   	push   rbp
    88bc:	48 89 e5             	mov    rbp,rsp
    88bf:	48 83 ec 20          	sub    rsp,0x20
    88c3:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    88c7:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    88cb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    88cf:	48 8d 35 aa 4f 00 00 	lea    rsi,[rip+0x4faa]        # d880 <_IO_stdin_used+0x1880>
    88d6:	48 89 c7             	mov    rdi,rax
    88d9:	e8 e2 9f ff ff       	call   28c0 <strstr@plt>
    88de:	48 85 c0             	test   rax,rax
    88e1:	75 1c                	jne    88ff <ftp_disect+0x48>
    88e3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    88e7:	48 8d 35 a2 4f 00 00 	lea    rsi,[rip+0x4fa2]        # d890 <_IO_stdin_used+0x1890>
    88ee:	48 89 c7             	mov    rdi,rax
    88f1:	e8 ca 9f ff ff       	call   28c0 <strstr@plt>
    88f6:	48 85 c0             	test   rax,rax
    88f9:	0f 84 8a 00 00 00    	je     8989 <ftp_disect+0xd2>
    88ff:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8903:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    8907:	48 89 c7             	mov    rdi,rax
    890a:	e8 2d f1 ff ff       	call   7a3c <member_exists>
    890f:	48 63 d0             	movsxd rdx,eax
    8912:	48 89 d0             	mov    rax,rdx
    8915:	48 c1 e0 02          	shl    rax,0x2
    8919:	48 01 d0             	add    rax,rdx
    891c:	48 c1 e0 03          	shl    rax,0x3
    8920:	48 01 d0             	add    rax,rdx
    8923:	48 c1 e0 04          	shl    rax,0x4
    8927:	48 8d 15 72 a7 0e 00 	lea    rdx,[rip+0xea772]        # f30a0 <watchlist>
    892e:	48 01 d0             	add    rax,rdx
    8931:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8935:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8939:	8b 80 40 02 00 00    	mov    eax,DWORD PTR [rax+0x240]
    893f:	8d 50 01             	lea    edx,[rax+0x1]
    8942:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8946:	89 90 40 02 00 00    	mov    DWORD PTR [rax+0x240],edx
    894c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8950:	8b 80 40 02 00 00    	mov    eax,DWORD PTR [rax+0x240]
    8956:	83 f8 04             	cmp    eax,0x4
    8959:	7e 2e                	jle    8989 <ftp_disect+0xd2>
    895b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    895f:	8b 88 40 02 00 00    	mov    ecx,DWORD PTR [rax+0x240]
    8965:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8969:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    896d:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8971:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    8975:	48 89 c6             	mov    rsi,rax
    8978:	48 8d 3d 21 4f 00 00 	lea    rdi,[rip+0x4f21]        # d8a0 <_IO_stdin_used+0x18a0>
    897f:	b8 00 00 00 00       	mov    eax,0x0
    8984:	e8 67 9c ff ff       	call   25f0 <printf@plt>
    8989:	90                   	nop
    898a:	c9                   	leave  
    898b:	c3                   	ret    

000000000000898c <livedebug>:
    898c:	f3 0f 1e fa          	endbr64 
    8990:	55                   	push   rbp
    8991:	48 89 e5             	mov    rbp,rsp
    8994:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
    899b:	48 89 bd 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rdi
    89a2:	48 89 b5 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rsi
    89a9:	48 89 95 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdx
    89b0:	48 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rcx
    89b7:	4c 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r8
    89be:	4c 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r9
    89c5:	84 c0                	test   al,al
    89c7:	74 20                	je     89e9 <livedebug+0x5d>
    89c9:	0f 29 45 80          	movaps XMMWORD PTR [rbp-0x80],xmm0
    89cd:	0f 29 4d 90          	movaps XMMWORD PTR [rbp-0x70],xmm1
    89d1:	0f 29 55 a0          	movaps XMMWORD PTR [rbp-0x60],xmm2
    89d5:	0f 29 5d b0          	movaps XMMWORD PTR [rbp-0x50],xmm3
    89d9:	0f 29 65 c0          	movaps XMMWORD PTR [rbp-0x40],xmm4
    89dd:	0f 29 6d d0          	movaps XMMWORD PTR [rbp-0x30],xmm5
    89e1:	0f 29 75 e0          	movaps XMMWORD PTR [rbp-0x20],xmm6
    89e5:	0f 29 7d f0          	movaps XMMWORD PTR [rbp-0x10],xmm7
    89e9:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    89f0:	00 00 
    89f2:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    89f9:	31 c0                	xor    eax,eax
    89fb:	0f b6 05 c0 17 10 00 	movzx  eax,BYTE PTR [rip+0x1017c0]        # 10a1c2 <debug_mode>
    8a02:	84 c0                	test   al,al
    8a04:	74 4b                	je     8a51 <livedebug+0xc5>
    8a06:	c7 85 30 ff ff ff 08 	mov    DWORD PTR [rbp-0xd0],0x8
    8a0d:	00 00 00 
    8a10:	c7 85 34 ff ff ff 30 	mov    DWORD PTR [rbp-0xcc],0x30
    8a17:	00 00 00 
    8a1a:	48 8d 45 10          	lea    rax,[rbp+0x10]
    8a1e:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    8a25:	48 8d 85 50 ff ff ff 	lea    rax,[rbp-0xb0]
    8a2c:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    8a33:	48 8d 95 30 ff ff ff 	lea    rdx,[rbp-0xd0]
    8a3a:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    8a41:	48 89 d6             	mov    rsi,rdx
    8a44:	48 89 c7             	mov    rdi,rax
    8a47:	b8 00 00 00 00       	mov    eax,0x0
    8a4c:	e8 9f 9b ff ff       	call   25f0 <printf@plt>
    8a51:	90                   	nop
    8a52:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    8a59:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    8a60:	00 00 
    8a62:	74 05                	je     8a69 <livedebug+0xdd>
    8a64:	e8 47 9b ff ff       	call   25b0 <__stack_chk_fail@plt>
    8a69:	c9                   	leave  
    8a6a:	c3                   	ret    

0000000000008a6b <forward_packet>:
    8a6b:	f3 0f 1e fa          	endbr64 
    8a6f:	55                   	push   rbp
    8a70:	48 89 e5             	mov    rbp,rsp
    8a73:	48 83 ec 20          	sub    rsp,0x20
    8a77:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8a7b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a7f:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8a83:	48 8d 35 66 f2 0f 00 	lea    rsi,[rip+0xff266]        # 107cf0 <local_ip>
    8a8a:	48 89 c7             	mov    rdi,rax
    8a8d:	e8 1e 9c ff ff       	call   26b0 <strcmp@plt>
    8a92:	85 c0                	test   eax,eax
    8a94:	74 4f                	je     8ae5 <forward_packet+0x7a>
    8a96:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a9a:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    8a9e:	48 8d 35 4b f2 0f 00 	lea    rsi,[rip+0xff24b]        # 107cf0 <local_ip>
    8aa5:	48 89 c7             	mov    rdi,rax
    8aa8:	e8 03 9c ff ff       	call   26b0 <strcmp@plt>
    8aad:	85 c0                	test   eax,eax
    8aaf:	74 34                	je     8ae5 <forward_packet+0x7a>
    8ab1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8ab5:	48 8b 00             	mov    rax,QWORD PTR [rax]
    8ab8:	48 8d 50 0e          	lea    rdx,[rax+0xe]
    8abc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8ac0:	48 89 d6             	mov    rsi,rdx
    8ac3:	48 89 c7             	mov    rdi,rax
    8ac6:	e8 25 9a ff ff       	call   24f0 <strcpy@plt>
    8acb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8acf:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    8ad2:	83 e8 0e             	sub    eax,0xe
    8ad5:	89 c2                	mov    edx,eax
    8ad7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8adb:	89 d6                	mov    esi,edx
    8add:	48 89 c7             	mov    rdi,rax
    8ae0:	e8 61 c9 ff ff       	call   5446 <ascii_hexdump>
    8ae5:	90                   	nop
    8ae6:	c9                   	leave  
    8ae7:	c3                   	ret    

0000000000008ae8 <conversation_exists>:
    8ae8:	f3 0f 1e fa          	endbr64 
    8aec:	55                   	push   rbp
    8aed:	48 89 e5             	mov    rbp,rsp
    8af0:	48 83 ec 20          	sub    rsp,0x20
    8af4:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8af8:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    8aff:	e9 ff 00 00 00       	jmp    8c03 <conversation_exists+0x11b>
    8b04:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8b07:	48 98                	cdqe   
    8b09:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8b10:	48 8d 15 09 19 10 00 	lea    rdx,[rip+0x101909]        # 10a420 <spi_table>
    8b17:	48 01 d0             	add    rax,rdx
    8b1a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8b1e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b22:	0f b6 80 b0 00 00 00 	movzx  eax,BYTE PTR [rax+0xb0]
    8b29:	84 c0                	test   al,al
    8b2b:	0f 84 ce 00 00 00    	je     8bff <conversation_exists+0x117>
    8b31:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b35:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    8b38:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b3c:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    8b3f:	39 c2                	cmp    edx,eax
    8b41:	75 58                	jne    8b9b <conversation_exists+0xb3>
    8b43:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b47:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    8b4a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b4e:	8b 40 54             	mov    eax,DWORD PTR [rax+0x54]
    8b51:	39 c2                	cmp    edx,eax
    8b53:	75 46                	jne    8b9b <conversation_exists+0xb3>
    8b55:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8b59:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b5d:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8b61:	48 89 d6             	mov    rsi,rdx
    8b64:	48 89 c7             	mov    rdi,rax
    8b67:	e8 44 9b ff ff       	call   26b0 <strcmp@plt>
    8b6c:	85 c0                	test   eax,eax
    8b6e:	0f 85 8a 00 00 00    	jne    8bfe <conversation_exists+0x116>
    8b74:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b78:	48 8d 50 29          	lea    rdx,[rax+0x29]
    8b7c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b80:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    8b84:	48 89 d6             	mov    rsi,rdx
    8b87:	48 89 c7             	mov    rdi,rax
    8b8a:	e8 21 9b ff ff       	call   26b0 <strcmp@plt>
    8b8f:	85 c0                	test   eax,eax
    8b91:	75 6b                	jne    8bfe <conversation_exists+0x116>
    8b93:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8b96:	e9 81 00 00 00       	jmp    8c1c <conversation_exists+0x134>
    8b9b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b9f:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    8ba2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8ba6:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    8ba9:	39 c2                	cmp    edx,eax
    8bab:	75 52                	jne    8bff <conversation_exists+0x117>
    8bad:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8bb1:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    8bb4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8bb8:	8b 40 54             	mov    eax,DWORD PTR [rax+0x54]
    8bbb:	39 c2                	cmp    edx,eax
    8bbd:	75 40                	jne    8bff <conversation_exists+0x117>
    8bbf:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8bc3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8bc7:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    8bcb:	48 89 d6             	mov    rsi,rdx
    8bce:	48 89 c7             	mov    rdi,rax
    8bd1:	e8 da 9a ff ff       	call   26b0 <strcmp@plt>
    8bd6:	85 c0                	test   eax,eax
    8bd8:	75 25                	jne    8bff <conversation_exists+0x117>
    8bda:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8bde:	48 8d 50 29          	lea    rdx,[rax+0x29]
    8be2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8be6:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8bea:	48 89 d6             	mov    rsi,rdx
    8bed:	48 89 c7             	mov    rdi,rax
    8bf0:	e8 bb 9a ff ff       	call   26b0 <strcmp@plt>
    8bf5:	85 c0                	test   eax,eax
    8bf7:	75 06                	jne    8bff <conversation_exists+0x117>
    8bf9:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8bfc:	eb 1e                	jmp    8c1c <conversation_exists+0x134>
    8bfe:	90                   	nop
    8bff:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    8c03:	8b 05 37 84 00 00    	mov    eax,DWORD PTR [rip+0x8437]        # 11040 <total_conversations>
    8c09:	8d 50 01             	lea    edx,[rax+0x1]
    8c0c:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8c0f:	39 c2                	cmp    edx,eax
    8c11:	0f 87 ed fe ff ff    	ja     8b04 <conversation_exists+0x1c>
    8c17:	b8 ff ff ff ff       	mov    eax,0xffffffff
    8c1c:	c9                   	leave  
    8c1d:	c3                   	ret    

0000000000008c1e <get_new_spi_location>:
    8c1e:	f3 0f 1e fa          	endbr64 
    8c22:	55                   	push   rbp
    8c23:	48 89 e5             	mov    rbp,rsp
    8c26:	8b 05 14 84 00 00    	mov    eax,DWORD PTR [rip+0x8414]        # 11040 <total_conversations>
    8c2c:	83 f8 ff             	cmp    eax,0xffffffff
    8c2f:	75 17                	jne    8c48 <get_new_spi_location+0x2a>
    8c31:	8b 05 09 84 00 00    	mov    eax,DWORD PTR [rip+0x8409]        # 11040 <total_conversations>
    8c37:	83 c0 01             	add    eax,0x1
    8c3a:	89 05 00 84 00 00    	mov    DWORD PTR [rip+0x8400],eax        # 11040 <total_conversations>
    8c40:	8b 05 fa 83 00 00    	mov    eax,DWORD PTR [rip+0x83fa]        # 11040 <total_conversations>
    8c46:	eb 52                	jmp    8c9a <get_new_spi_location+0x7c>
    8c48:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    8c4f:	eb 27                	jmp    8c78 <get_new_spi_location+0x5a>
    8c51:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    8c54:	48 98                	cdqe   
    8c56:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8c5d:	48 8d 15 6c 18 10 00 	lea    rdx,[rip+0x10186c]        # 10a4d0 <spi_table+0xb0>
    8c64:	0f b6 04 10          	movzx  eax,BYTE PTR [rax+rdx*1]
    8c68:	83 f0 01             	xor    eax,0x1
    8c6b:	84 c0                	test   al,al
    8c6d:	74 05                	je     8c74 <get_new_spi_location+0x56>
    8c6f:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    8c72:	eb 26                	jmp    8c9a <get_new_spi_location+0x7c>
    8c74:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    8c78:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
    8c7b:	8b 05 bf 83 00 00    	mov    eax,DWORD PTR [rip+0x83bf]        # 11040 <total_conversations>
    8c81:	39 c2                	cmp    edx,eax
    8c83:	72 cc                	jb     8c51 <get_new_spi_location+0x33>
    8c85:	8b 05 b5 83 00 00    	mov    eax,DWORD PTR [rip+0x83b5]        # 11040 <total_conversations>
    8c8b:	83 c0 01             	add    eax,0x1
    8c8e:	89 05 ac 83 00 00    	mov    DWORD PTR [rip+0x83ac],eax        # 11040 <total_conversations>
    8c94:	8b 05 a6 83 00 00    	mov    eax,DWORD PTR [rip+0x83a6]        # 11040 <total_conversations>
    8c9a:	5d                   	pop    rbp
    8c9b:	c3                   	ret    

0000000000008c9c <add_new_conversation>:
    8c9c:	f3 0f 1e fa          	endbr64 
    8ca0:	55                   	push   rbp
    8ca1:	48 89 e5             	mov    rbp,rsp
    8ca4:	48 83 ec 20          	sub    rsp,0x20
    8ca8:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8cac:	0f b6 05 9e f0 0f 00 	movzx  eax,BYTE PTR [rip+0xff09e]        # 107d51 <use_spi>
    8cb3:	84 c0                	test   al,al
    8cb5:	0f 84 17 02 00 00    	je     8ed2 <add_new_conversation+0x236>
    8cbb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8cbf:	48 89 c7             	mov    rdi,rax
    8cc2:	e8 21 fe ff ff       	call   8ae8 <conversation_exists>
    8cc7:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    8cca:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    8cce:	0f 84 88 00 00 00    	je     8d5c <add_new_conversation+0xc0>
    8cd4:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8cd7:	48 98                	cdqe   
    8cd9:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8ce0:	48 8d 15 39 17 10 00 	lea    rdx,[rip+0x101739]        # 10a420 <spi_table>
    8ce7:	48 01 d0             	add    rax,rdx
    8cea:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8cee:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8cf2:	8b 80 ac 00 00 00    	mov    eax,DWORD PTR [rax+0xac]
    8cf8:	8d 50 01             	lea    edx,[rax+0x1]
    8cfb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8cff:	89 90 ac 00 00 00    	mov    DWORD PTR [rax+0xac],edx
    8d05:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d09:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    8d0f:	8d 50 01             	lea    edx,[rax+0x1]
    8d12:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d16:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    8d1c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d20:	8b 78 54             	mov    edi,DWORD PTR [rax+0x54]
    8d23:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    8d27:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d2b:	8b 50 58             	mov    edx,DWORD PTR [rax+0x58]
    8d2e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d32:	48 8d 70 29          	lea    rsi,[rax+0x29]
    8d36:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8d39:	41 89 f9             	mov    r9d,edi
    8d3c:	49 89 c8             	mov    r8,rcx
    8d3f:	89 d1                	mov    ecx,edx
    8d41:	48 89 f2             	mov    rdx,rsi
    8d44:	89 c6                	mov    esi,eax
    8d46:	48 8d 3d 9b 4b 00 00 	lea    rdi,[rip+0x4b9b]        # d8e8 <_IO_stdin_used+0x18e8>
    8d4d:	b8 00 00 00 00       	mov    eax,0x0
    8d52:	e8 99 98 ff ff       	call   25f0 <printf@plt>
    8d57:	e9 76 01 00 00       	jmp    8ed2 <add_new_conversation+0x236>
    8d5c:	b8 00 00 00 00       	mov    eax,0x0
    8d61:	e8 b8 fe ff ff       	call   8c1e <get_new_spi_location>
    8d66:	48 98                	cdqe   
    8d68:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8d6f:	48 8d 15 aa 16 10 00 	lea    rdx,[rip+0x1016aa]        # 10a420 <spi_table>
    8d76:	48 01 d0             	add    rax,rdx
    8d79:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8d7d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d81:	ba 08 00 00 00       	mov    edx,0x8
    8d86:	be 00 00 00 00       	mov    esi,0x0
    8d8b:	48 89 c7             	mov    rdi,rax
    8d8e:	e8 9d 98 ff ff       	call   2630 <memset@plt>
    8d93:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d97:	c6 80 b0 00 00 00 01 	mov    BYTE PTR [rax+0xb0],0x1
    8d9e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8da2:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8da6:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8daa:	48 83 c2 29          	add    rdx,0x29
    8dae:	48 89 c6             	mov    rsi,rax
    8db1:	48 89 d7             	mov    rdi,rdx
    8db4:	e8 37 97 ff ff       	call   24f0 <strcpy@plt>
    8db9:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8dbd:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
    8dc1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8dc5:	48 89 d6             	mov    rsi,rdx
    8dc8:	48 89 c7             	mov    rdi,rax
    8dcb:	e8 20 97 ff ff       	call   24f0 <strcpy@plt>
    8dd0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8dd4:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    8dd7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8ddb:	89 50 58             	mov    DWORD PTR [rax+0x58],edx
    8dde:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8de2:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    8de5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8de9:	89 50 54             	mov    DWORD PTR [rax+0x54],edx
    8dec:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8df0:	c7 40 7c 00 00 00 00 	mov    DWORD PTR [rax+0x7c],0x0
    8df7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8dfb:	48 8d 50 5c          	lea    rdx,[rax+0x5c]
    8dff:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e03:	48 89 50 70          	mov    QWORD PTR [rax+0x70],rdx
    8e07:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e0b:	48 8d 50 60          	lea    rdx,[rax+0x60]
    8e0f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e13:	48 89 50 68          	mov    QWORD PTR [rax+0x68],rdx
    8e17:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8e1b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8e1f:	48 89 d6             	mov    rsi,rdx
    8e22:	48 89 c7             	mov    rdi,rax
    8e25:	e8 8e 04 00 00       	call   92b8 <increment_stats>
    8e2a:	bf 00 00 00 00       	mov    edi,0x0
    8e2f:	e8 cc 98 ff ff       	call   2700 <time@plt>
    8e34:	48 89 c2             	mov    rdx,rax
    8e37:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e3b:	48 89 90 90 00 00 00 	mov    QWORD PTR [rax+0x90],rdx
    8e42:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e46:	c7 80 80 00 00 00 00 	mov    DWORD PTR [rax+0x80],0x0
    8e4d:	00 00 00 
    8e50:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e54:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    8e5a:	8d 50 01             	lea    edx,[rax+0x1]
    8e5d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e61:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    8e67:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8e6b:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    8e6e:	89 c2                	mov    edx,eax
    8e70:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e74:	89 90 a4 00 00 00    	mov    DWORD PTR [rax+0xa4],edx
    8e7a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e7e:	8b 78 54             	mov    edi,DWORD PTR [rax+0x54]
    8e81:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    8e85:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e89:	8b 50 58             	mov    edx,DWORD PTR [rax+0x58]
    8e8c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e90:	48 8d 70 29          	lea    rsi,[rax+0x29]
    8e94:	8b 05 a6 81 00 00    	mov    eax,DWORD PTR [rip+0x81a6]        # 11040 <total_conversations>
    8e9a:	41 89 f9             	mov    r9d,edi
    8e9d:	49 89 c8             	mov    r8,rcx
    8ea0:	89 d1                	mov    ecx,edx
    8ea2:	48 89 f2             	mov    rdx,rsi
    8ea5:	89 c6                	mov    esi,eax
    8ea7:	48 8d 3d 62 4a 00 00 	lea    rdi,[rip+0x4a62]        # d910 <_IO_stdin_used+0x1910>
    8eae:	b8 00 00 00 00       	mov    eax,0x0
    8eb3:	e8 38 97 ff ff       	call   25f0 <printf@plt>
    8eb8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8ebc:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    8ebf:	83 f8 7e             	cmp    eax,0x7e
    8ec2:	75 0e                	jne    8ed2 <add_new_conversation+0x236>
    8ec4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8ec8:	c7 80 8c 00 00 00 f3 	mov    DWORD PTR [rax+0x8c],0xf3
    8ecf:	00 00 00 
    8ed2:	90                   	nop
    8ed3:	c9                   	leave  
    8ed4:	c3                   	ret    

0000000000008ed5 <spi_ud_thw>:
    8ed5:	f3 0f 1e fa          	endbr64 
    8ed9:	55                   	push   rbp
    8eda:	48 89 e5             	mov    rbp,rsp
    8edd:	48 83 ec 20          	sub    rsp,0x20
    8ee1:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8ee5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8ee9:	48 89 c7             	mov    rdi,rax
    8eec:	e8 f7 fb ff ff       	call   8ae8 <conversation_exists>
    8ef1:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    8ef4:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    8ef8:	0f 84 9d 00 00 00    	je     8f9b <spi_ud_thw+0xc6>
    8efe:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8f01:	48 98                	cdqe   
    8f03:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8f0a:	48 8d 15 0f 15 10 00 	lea    rdx,[rip+0x10150f]        # 10a420 <spi_table>
    8f11:	48 01 d0             	add    rax,rdx
    8f14:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8f18:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8f1c:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    8f22:	8d 50 01             	lea    edx,[rax+0x1]
    8f25:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8f29:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    8f2f:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8f33:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8f37:	48 89 d6             	mov    rsi,rdx
    8f3a:	48 89 c7             	mov    rdi,rax
    8f3d:	e8 76 03 00 00       	call   92b8 <increment_stats>
    8f42:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8f46:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    8f49:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8f4d:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    8f51:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8f55:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    8f58:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8f5c:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    8f60:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8f63:	41 89 f9             	mov    r9d,edi
    8f66:	49 89 f0             	mov    r8,rsi
    8f69:	89 c6                	mov    esi,eax
    8f6b:	48 8d 3d c6 49 00 00 	lea    rdi,[rip+0x49c6]        # d938 <_IO_stdin_used+0x1938>
    8f72:	b8 00 00 00 00       	mov    eax,0x0
    8f77:	e8 74 96 ff ff       	call   25f0 <printf@plt>
    8f7c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8f80:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
    8f86:	3d f3 00 00 00       	cmp    eax,0xf3
    8f8b:	75 0e                	jne    8f9b <spi_ud_thw+0xc6>
    8f8d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8f91:	c7 80 8c 00 00 00 f4 	mov    DWORD PTR [rax+0x8c],0xf4
    8f98:	00 00 00 
    8f9b:	90                   	nop
    8f9c:	c9                   	leave  
    8f9d:	c3                   	ret    

0000000000008f9e <update_table>:
    8f9e:	f3 0f 1e fa          	endbr64 
    8fa2:	55                   	push   rbp
    8fa3:	48 89 e5             	mov    rbp,rsp
    8fa6:	48 83 ec 30          	sub    rsp,0x30
    8faa:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    8fae:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8fb5:	00 00 
    8fb7:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8fbb:	31 c0                	xor    eax,eax
    8fbd:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8fc1:	48 89 c7             	mov    rdi,rax
    8fc4:	e8 1f fb ff ff       	call   8ae8 <conversation_exists>
    8fc9:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
    8fcc:	83 7d e4 ff          	cmp    DWORD PTR [rbp-0x1c],0xffffffff
    8fd0:	0f 84 52 01 00 00    	je     9128 <update_table+0x18a>
    8fd6:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    8fd9:	48 98                	cdqe   
    8fdb:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8fe2:	48 8d 15 37 14 10 00 	lea    rdx,[rip+0x101437]        # 10a420 <spi_table>
    8fe9:	48 01 d0             	add    rax,rdx
    8fec:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    8ff0:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8ff4:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    8ffa:	8d 50 01             	lea    edx,[rax+0x1]
    8ffd:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9001:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    9007:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    900b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    900f:	48 89 d6             	mov    rsi,rdx
    9012:	48 89 c7             	mov    rdi,rax
    9015:	e8 9e 02 00 00       	call   92b8 <increment_stats>
    901a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    901e:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
    9024:	3d f4 00 00 00       	cmp    eax,0xf4
    9029:	75 4d                	jne    9078 <update_table+0xda>
    902b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    902f:	c7 80 8c 00 00 00 f1 	mov    DWORD PTR [rax+0x8c],0xf1
    9036:	00 00 00 
    9039:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    903d:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    9040:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9044:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    9048:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    904c:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    904f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9053:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    9057:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    905a:	41 89 f9             	mov    r9d,edi
    905d:	49 89 f0             	mov    r8,rsi
    9060:	89 c6                	mov    esi,eax
    9062:	48 8d 3d f7 48 00 00 	lea    rdi,[rip+0x48f7]        # d960 <_IO_stdin_used+0x1960>
    9069:	b8 00 00 00 00       	mov    eax,0x0
    906e:	e8 7d 95 ff ff       	call   25f0 <printf@plt>
    9073:	e9 b0 00 00 00       	jmp    9128 <update_table+0x18a>
    9078:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    907c:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
    9082:	3d f6 00 00 00       	cmp    eax,0xf6
    9087:	0f 85 9b 00 00 00    	jne    9128 <update_table+0x18a>
    908d:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9091:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    9094:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9098:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    909c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    90a0:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    90a3:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    90a7:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    90ab:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    90ae:	41 89 f9             	mov    r9d,edi
    90b1:	49 89 f0             	mov    r8,rsi
    90b4:	89 c6                	mov    esi,eax
    90b6:	48 8d 3d d3 48 00 00 	lea    rdi,[rip+0x48d3]        # d990 <_IO_stdin_used+0x1990>
    90bd:	b8 00 00 00 00       	mov    eax,0x0
    90c2:	e8 29 95 ff ff       	call   25f0 <printf@plt>
    90c7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    90cb:	c7 80 8c 00 00 00 fa 	mov    DWORD PTR [rax+0x8c],0xfa
    90d2:	00 00 00 
    90d5:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    90d9:	c6 80 b0 00 00 00 00 	mov    BYTE PTR [rax+0xb0],0x0
    90e0:	bf 00 00 00 00       	mov    edi,0x0
    90e5:	e8 16 96 ff ff       	call   2700 <time@plt>
    90ea:	48 89 c2             	mov    rdx,rax
    90ed:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    90f1:	48 89 90 98 00 00 00 	mov    QWORD PTR [rax+0x98],rdx
    90f8:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    90fc:	48 8d 45 e8          	lea    rax,[rbp-0x18]
    9100:	48 89 d1             	mov    rcx,rdx
    9103:	48 8d 15 99 f3 ff ff 	lea    rdx,[rip+0xfffffffffffff399]        # 84a3 <update_spi_db>
    910a:	be 00 00 00 00       	mov    esi,0x0
    910f:	48 89 c7             	mov    rdi,rax
    9112:	e8 99 93 ff ff       	call   24b0 <pthread_create@plt>
    9117:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    911b:	be 00 00 00 00       	mov    esi,0x0
    9120:	48 89 c7             	mov    rdi,rax
    9123:	e8 b8 96 ff ff       	call   27e0 <pthread_join@plt>
    9128:	90                   	nop
    9129:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    912d:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    9134:	00 00 
    9136:	74 05                	je     913d <update_table+0x19f>
    9138:	e8 73 94 ff ff       	call   25b0 <__stack_chk_fail@plt>
    913d:	c9                   	leave  
    913e:	c3                   	ret    

000000000000913f <polite_end>:
    913f:	f3 0f 1e fa          	endbr64 
    9143:	55                   	push   rbp
    9144:	48 89 e5             	mov    rbp,rsp
    9147:	48 83 ec 20          	sub    rsp,0x20
    914b:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    914f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9153:	48 89 c7             	mov    rdi,rax
    9156:	e8 8d f9 ff ff       	call   8ae8 <conversation_exists>
    915b:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    915e:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    9162:	0f 84 e7 00 00 00    	je     924f <polite_end+0x110>
    9168:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    916b:	48 98                	cdqe   
    916d:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    9174:	48 8d 15 a5 12 10 00 	lea    rdx,[rip+0x1012a5]        # 10a420 <spi_table>
    917b:	48 01 d0             	add    rax,rdx
    917e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9182:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9186:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    918c:	8d 50 01             	lea    edx,[rax+0x1]
    918f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9193:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    9199:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    919d:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
    91a3:	3d f5 00 00 00       	cmp    eax,0xf5
    91a8:	75 4a                	jne    91f4 <polite_end+0xb5>
    91aa:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    91ae:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    91b1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    91b5:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    91b9:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    91bd:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    91c0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    91c4:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    91c8:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    91cb:	41 89 f9             	mov    r9d,edi
    91ce:	49 89 f0             	mov    r8,rsi
    91d1:	89 c6                	mov    esi,eax
    91d3:	48 8d 3d ee 47 00 00 	lea    rdi,[rip+0x47ee]        # d9c8 <_IO_stdin_used+0x19c8>
    91da:	b8 00 00 00 00       	mov    eax,0x0
    91df:	e8 0c 94 ff ff       	call   25f0 <printf@plt>
    91e4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    91e8:	c7 80 8c 00 00 00 f6 	mov    DWORD PTR [rax+0x8c],0xf6
    91ef:	00 00 00 
    91f2:	eb 48                	jmp    923c <polite_end+0xfd>
    91f4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    91f8:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    91fb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    91ff:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    9203:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9207:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    920a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    920e:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    9212:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    9215:	41 89 f9             	mov    r9d,edi
    9218:	49 89 f0             	mov    r8,rsi
    921b:	89 c6                	mov    esi,eax
    921d:	48 8d 3d dc 47 00 00 	lea    rdi,[rip+0x47dc]        # da00 <_IO_stdin_used+0x1a00>
    9224:	b8 00 00 00 00       	mov    eax,0x0
    9229:	e8 c2 93 ff ff       	call   25f0 <printf@plt>
    922e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9232:	c7 80 8c 00 00 00 f5 	mov    DWORD PTR [rax+0x8c],0xf5
    9239:	00 00 00 
    923c:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    9240:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9244:	48 89 d6             	mov    rsi,rdx
    9247:	48 89 c7             	mov    rdi,rax
    924a:	e8 69 00 00 00       	call   92b8 <increment_stats>
    924f:	90                   	nop
    9250:	c9                   	leave  
    9251:	c3                   	ret    

0000000000009252 <handle_data_pkt>:
    9252:	f3 0f 1e fa          	endbr64 
    9256:	55                   	push   rbp
    9257:	48 89 e5             	mov    rbp,rsp
    925a:	48 83 ec 20          	sub    rsp,0x20
    925e:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    9262:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9266:	48 89 c7             	mov    rdi,rax
    9269:	e8 7a f8 ff ff       	call   8ae8 <conversation_exists>
    926e:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    9271:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    9275:	74 3e                	je     92b5 <handle_data_pkt+0x63>
    9277:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    927a:	48 98                	cdqe   
    927c:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    9283:	48 8d 15 96 11 10 00 	lea    rdx,[rip+0x101196]        # 10a420 <spi_table>
    928a:	48 01 d0             	add    rax,rdx
    928d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9291:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9295:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    9298:	8d 50 01             	lea    edx,[rax+0x1]
    929b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    929f:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    92a2:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    92a6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    92aa:	48 89 d6             	mov    rsi,rdx
    92ad:	48 89 c7             	mov    rdi,rax
    92b0:	e8 03 00 00 00       	call   92b8 <increment_stats>
    92b5:	90                   	nop
    92b6:	c9                   	leave  
    92b7:	c3                   	ret    

00000000000092b8 <increment_stats>:
    92b8:	f3 0f 1e fa          	endbr64 
    92bc:	55                   	push   rbp
    92bd:	48 89 e5             	mov    rbp,rsp
    92c0:	48 83 ec 10          	sub    rsp,0x10
    92c4:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    92c8:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    92cc:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    92d0:	48 8d 50 29          	lea    rdx,[rax+0x29]
    92d4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    92d8:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    92dc:	48 89 d6             	mov    rsi,rdx
    92df:	48 89 c7             	mov    rdi,rax
    92e2:	e8 c9 93 ff ff       	call   26b0 <strcmp@plt>
    92e7:	85 c0                	test   eax,eax
    92e9:	75 13                	jne    92fe <increment_stats+0x46>
    92eb:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    92ef:	8b 40 60             	mov    eax,DWORD PTR [rax+0x60]
    92f2:	8d 50 01             	lea    edx,[rax+0x1]
    92f5:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    92f9:	89 50 60             	mov    DWORD PTR [rax+0x60],edx
    92fc:	eb 2c                	jmp    932a <increment_stats+0x72>
    92fe:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    9302:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9306:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    930a:	48 89 d6             	mov    rsi,rdx
    930d:	48 89 c7             	mov    rdi,rax
    9310:	e8 9b 93 ff ff       	call   26b0 <strcmp@plt>
    9315:	85 c0                	test   eax,eax
    9317:	75 11                	jne    932a <increment_stats+0x72>
    9319:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    931d:	8b 40 5c             	mov    eax,DWORD PTR [rax+0x5c]
    9320:	8d 50 01             	lea    edx,[rax+0x1]
    9323:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9327:	89 50 5c             	mov    DWORD PTR [rax+0x5c],edx
    932a:	90                   	nop
    932b:	c9                   	leave  
    932c:	c3                   	ret    

000000000000932d <lprintf>:
    932d:	f3 0f 1e fa          	endbr64 
    9331:	55                   	push   rbp
    9332:	48 89 e5             	mov    rbp,rsp
    9335:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
    933c:	48 89 bd 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rdi
    9343:	48 89 b5 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rsi
    934a:	48 89 95 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdx
    9351:	48 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rcx
    9358:	4c 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r8
    935f:	4c 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r9
    9366:	84 c0                	test   al,al
    9368:	74 20                	je     938a <lprintf+0x5d>
    936a:	0f 29 45 80          	movaps XMMWORD PTR [rbp-0x80],xmm0
    936e:	0f 29 4d 90          	movaps XMMWORD PTR [rbp-0x70],xmm1
    9372:	0f 29 55 a0          	movaps XMMWORD PTR [rbp-0x60],xmm2
    9376:	0f 29 5d b0          	movaps XMMWORD PTR [rbp-0x50],xmm3
    937a:	0f 29 65 c0          	movaps XMMWORD PTR [rbp-0x40],xmm4
    937e:	0f 29 6d d0          	movaps XMMWORD PTR [rbp-0x30],xmm5
    9382:	0f 29 75 e0          	movaps XMMWORD PTR [rbp-0x20],xmm6
    9386:	0f 29 7d f0          	movaps XMMWORD PTR [rbp-0x10],xmm7
    938a:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9391:	00 00 
    9393:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    939a:	31 c0                	xor    eax,eax
    939c:	c7 85 30 ff ff ff 10 	mov    DWORD PTR [rbp-0xd0],0x10
    93a3:	00 00 00 
    93a6:	c7 85 34 ff ff ff 30 	mov    DWORD PTR [rbp-0xcc],0x30
    93ad:	00 00 00 
    93b0:	48 8d 45 10          	lea    rax,[rbp+0x10]
    93b4:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    93bb:	48 8d 85 50 ff ff ff 	lea    rax,[rbp-0xb0]
    93c2:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    93c9:	48 8d 95 30 ff ff ff 	lea    rdx,[rbp-0xd0]
    93d0:	48 8b 8d 20 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xe0]
    93d7:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    93de:	48 89 ce             	mov    rsi,rcx
    93e1:	48 89 c7             	mov    rdi,rax
    93e4:	b8 00 00 00 00       	mov    eax,0x0
    93e9:	e8 e2 92 ff ff       	call   26d0 <fprintf@plt>
    93ee:	90                   	nop
    93ef:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    93f6:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    93fd:	00 00 
    93ff:	74 05                	je     9406 <lprintf+0xd9>
    9401:	e8 aa 91 ff ff       	call   25b0 <__stack_chk_fail@plt>
    9406:	c9                   	leave  
    9407:	c3                   	ret    

0000000000009408 <lfprintf>:
    9408:	f3 0f 1e fa          	endbr64 
    940c:	55                   	push   rbp
    940d:	48 89 e5             	mov    rbp,rsp
    9410:	48 81 ec 90 08 00 00 	sub    rsp,0x890
    9417:	48 89 bd 98 f7 ff ff 	mov    QWORD PTR [rbp-0x868],rdi
    941e:	48 89 b5 90 f7 ff ff 	mov    QWORD PTR [rbp-0x870],rsi
    9425:	48 89 95 88 f7 ff ff 	mov    QWORD PTR [rbp-0x878],rdx
    942c:	48 89 8d 80 f7 ff ff 	mov    QWORD PTR [rbp-0x880],rcx
    9433:	44 89 85 7c f7 ff ff 	mov    DWORD PTR [rbp-0x884],r8d
    943a:	44 89 8d 78 f7 ff ff 	mov    DWORD PTR [rbp-0x888],r9d
    9441:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9448:	00 00 
    944a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    944e:	31 c0                	xor    eax,eax
    9450:	48 8b 85 98 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x868]
    9457:	48 8d 35 da 45 00 00 	lea    rsi,[rip+0x45da]        # da38 <_IO_stdin_used+0x1a38>
    945e:	48 89 c7             	mov    rdi,rax
    9461:	e8 4a 93 ff ff       	call   27b0 <fopen@plt>
    9466:	48 89 85 a8 f7 ff ff 	mov    QWORD PTR [rbp-0x858],rax
    946d:	48 83 bd a8 f7 ff ff 	cmp    QWORD PTR [rbp-0x858],0x0
    9474:	00 
    9475:	75 20                	jne    9497 <lfprintf+0x8f>
    9477:	48 8b 85 90 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x870]
    947e:	48 89 c6             	mov    rsi,rax
    9481:	48 8d 3d b8 45 00 00 	lea    rdi,[rip+0x45b8]        # da40 <_IO_stdin_used+0x1a40>
    9488:	b8 00 00 00 00       	mov    eax,0x0
    948d:	e8 5e 91 ff ff       	call   25f0 <printf@plt>
    9492:	e9 cd 00 00 00       	jmp    9564 <lfprintf+0x15c>
    9497:	48 8d 85 b0 f7 ff ff 	lea    rax,[rbp-0x850]
    949e:	48 89 c7             	mov    rdi,rax
    94a1:	e8 ce 9f ff ff       	call   3474 <cb_get_formatted_time>
    94a6:	83 bd 7c f7 ff ff ff 	cmp    DWORD PTR [rbp-0x884],0xffffffff
    94ad:	75 3f                	jne    94ee <lfprintf+0xe6>
    94af:	48 8b bd 80 f7 ff ff 	mov    rdi,QWORD PTR [rbp-0x880]
    94b6:	48 8b b5 88 f7 ff ff 	mov    rsi,QWORD PTR [rbp-0x878]
    94bd:	48 8b 8d 90 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x870]
    94c4:	48 8d 95 b0 f7 ff ff 	lea    rdx,[rbp-0x850]
    94cb:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    94d2:	49 89 f9             	mov    r9,rdi
    94d5:	49 89 f0             	mov    r8,rsi
    94d8:	48 8d 35 8f 45 00 00 	lea    rsi,[rip+0x458f]        # da6e <_IO_stdin_used+0x1a6e>
    94df:	48 89 c7             	mov    rdi,rax
    94e2:	b8 00 00 00 00       	mov    eax,0x0
    94e7:	e8 84 93 ff ff       	call   2870 <sprintf@plt>
    94ec:	eb 4e                	jmp    953c <lfprintf+0x134>
    94ee:	44 8b 85 7c f7 ff ff 	mov    r8d,DWORD PTR [rbp-0x884]
    94f5:	48 8b bd 88 f7 ff ff 	mov    rdi,QWORD PTR [rbp-0x878]
    94fc:	48 8b 8d 90 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x870]
    9503:	48 8d 95 b0 f7 ff ff 	lea    rdx,[rbp-0x850]
    950a:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    9511:	8b b5 78 f7 ff ff    	mov    esi,DWORD PTR [rbp-0x888]
    9517:	56                   	push   rsi
    9518:	ff b5 80 f7 ff ff    	push   QWORD PTR [rbp-0x880]
    951e:	45 89 c1             	mov    r9d,r8d
    9521:	49 89 f8             	mov    r8,rdi
    9524:	48 8d 35 53 45 00 00 	lea    rsi,[rip+0x4553]        # da7e <_IO_stdin_used+0x1a7e>
    952b:	48 89 c7             	mov    rdi,rax
    952e:	b8 00 00 00 00       	mov    eax,0x0
    9533:	e8 38 93 ff ff       	call   2870 <sprintf@plt>
    9538:	48 83 c4 10          	add    rsp,0x10
    953c:	48 8b 95 a8 f7 ff ff 	mov    rdx,QWORD PTR [rbp-0x858]
    9543:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    954a:	48 89 d6             	mov    rsi,rdx
    954d:	48 89 c7             	mov    rdi,rax
    9550:	e8 bb 90 ff ff       	call   2610 <fputs@plt>
    9555:	48 8b 85 a8 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x858]
    955c:	48 89 c7             	mov    rdi,rax
    955f:	e8 0c 90 ff ff       	call   2570 <fclose@plt>
    9564:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9568:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    956f:	00 00 
    9571:	74 05                	je     9578 <lfprintf+0x170>
    9573:	e8 38 90 ff ff       	call   25b0 <__stack_chk_fail@plt>
    9578:	c9                   	leave  
    9579:	c3                   	ret    

000000000000957a <saprintf>:
    957a:	f3 0f 1e fa          	endbr64 
    957e:	55                   	push   rbp
    957f:	48 89 e5             	mov    rbp,rsp
    9582:	48 83 ec 20          	sub    rsp,0x20
    9586:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    958a:	48 8b 05 9f 7a 00 00 	mov    rax,QWORD PTR [rip+0x7a9f]        # 11030 <def_log_file>
    9591:	48 8d 35 a0 44 00 00 	lea    rsi,[rip+0x44a0]        # da38 <_IO_stdin_used+0x1a38>
    9598:	48 89 c7             	mov    rdi,rax
    959b:	e8 10 92 ff ff       	call   27b0 <fopen@plt>
    95a0:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    95a4:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    95a9:	75 1a                	jne    95c5 <saprintf+0x4b>
    95ab:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    95af:	48 89 c6             	mov    rsi,rax
    95b2:	48 8d 3d 87 44 00 00 	lea    rdi,[rip+0x4487]        # da40 <_IO_stdin_used+0x1a40>
    95b9:	b8 00 00 00 00       	mov    eax,0x0
    95be:	e8 2d 90 ff ff       	call   25f0 <printf@plt>
    95c3:	eb 1f                	jmp    95e4 <saprintf+0x6a>
    95c5:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    95c9:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    95cd:	48 89 d6             	mov    rsi,rdx
    95d0:	48 89 c7             	mov    rdi,rax
    95d3:	e8 38 90 ff ff       	call   2610 <fputs@plt>
    95d8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    95dc:	48 89 c7             	mov    rdi,rax
    95df:	e8 8c 8f ff ff       	call   2570 <fclose@plt>
    95e4:	c9                   	leave  
    95e5:	c3                   	ret    

00000000000095e6 <substr>:
    95e6:	f3 0f 1e fa          	endbr64 
    95ea:	55                   	push   rbp
    95eb:	48 89 e5             	mov    rbp,rsp
    95ee:	48 83 ec 20          	sub    rsp,0x20
    95f2:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    95f6:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    95f9:	89 55 e0             	mov    DWORD PTR [rbp-0x20],edx
    95fc:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
    95ff:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    9602:	83 c0 02             	add    eax,0x2
    9605:	48 98                	cdqe   
    9607:	48 89 c7             	mov    rdi,rax
    960a:	e8 31 91 ff ff       	call   2740 <malloc@plt>
    960f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9613:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    9616:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    9619:	eb 27                	jmp    9642 <substr+0x5c>
    961b:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    961e:	48 63 d0             	movsxd rdx,eax
    9621:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9625:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    9629:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    962c:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    962f:	48 63 d0             	movsxd rdx,eax
    9632:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9636:	48 01 c2             	add    rdx,rax
    9639:	0f b6 01             	movzx  eax,BYTE PTR [rcx]
    963c:	88 02                	mov    BYTE PTR [rdx],al
    963e:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    9642:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    9645:	3b 45 e0             	cmp    eax,DWORD PTR [rbp-0x20]
    9648:	7e d1                	jle    961b <substr+0x35>
    964a:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
    964d:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    9650:	48 98                	cdqe   
    9652:	48 8d 50 01          	lea    rdx,[rax+0x1]
    9656:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    965a:	48 01 d0             	add    rax,rdx
    965d:	c6 00 00             	mov    BYTE PTR [rax],0x0
    9660:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9664:	c9                   	leave  
    9665:	c3                   	ret    

0000000000009666 <delimit>:
    9666:	f3 0f 1e fa          	endbr64 
    966a:	55                   	push   rbp
    966b:	48 89 e5             	mov    rbp,rsp
    966e:	89 f8                	mov    eax,edi
    9670:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
    9673:	80 7d fc 20          	cmp    BYTE PTR [rbp-0x4],0x20
    9677:	0f 94 c0             	sete   al
    967a:	5d                   	pop    rbp
    967b:	c3                   	ret    

000000000000967c <isdigit>:
    967c:	f3 0f 1e fa          	endbr64 
    9680:	55                   	push   rbp
    9681:	48 89 e5             	mov    rbp,rsp
    9684:	53                   	push   rbx
    9685:	48 83 ec 28          	sub    rsp,0x28
    9689:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    968d:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    9694:	e9 f7 00 00 00       	jmp    9790 <isdigit+0x114>
    9699:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    969c:	48 63 d0             	movsxd rdx,eax
    969f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    96a3:	48 01 d0             	add    rax,rdx
    96a6:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    96a9:	3c 30                	cmp    al,0x30
    96ab:	0f 84 db 00 00 00    	je     978c <isdigit+0x110>
    96b1:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    96b4:	48 63 d0             	movsxd rdx,eax
    96b7:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    96bb:	48 01 d0             	add    rax,rdx
    96be:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    96c1:	3c 31                	cmp    al,0x31
    96c3:	0f 84 c3 00 00 00    	je     978c <isdigit+0x110>
    96c9:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    96cc:	48 63 d0             	movsxd rdx,eax
    96cf:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    96d3:	48 01 d0             	add    rax,rdx
    96d6:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    96d9:	3c 32                	cmp    al,0x32
    96db:	0f 84 ab 00 00 00    	je     978c <isdigit+0x110>
    96e1:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    96e4:	48 63 d0             	movsxd rdx,eax
    96e7:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    96eb:	48 01 d0             	add    rax,rdx
    96ee:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    96f1:	3c 33                	cmp    al,0x33
    96f3:	0f 84 93 00 00 00    	je     978c <isdigit+0x110>
    96f9:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    96fc:	48 63 d0             	movsxd rdx,eax
    96ff:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9703:	48 01 d0             	add    rax,rdx
    9706:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9709:	3c 34                	cmp    al,0x34
    970b:	74 7f                	je     978c <isdigit+0x110>
    970d:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9710:	48 63 d0             	movsxd rdx,eax
    9713:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9717:	48 01 d0             	add    rax,rdx
    971a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    971d:	3c 34                	cmp    al,0x34
    971f:	74 6b                	je     978c <isdigit+0x110>
    9721:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9724:	48 63 d0             	movsxd rdx,eax
    9727:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    972b:	48 01 d0             	add    rax,rdx
    972e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9731:	3c 35                	cmp    al,0x35
    9733:	74 57                	je     978c <isdigit+0x110>
    9735:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9738:	48 63 d0             	movsxd rdx,eax
    973b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    973f:	48 01 d0             	add    rax,rdx
    9742:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9745:	3c 36                	cmp    al,0x36
    9747:	74 43                	je     978c <isdigit+0x110>
    9749:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    974c:	48 63 d0             	movsxd rdx,eax
    974f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9753:	48 01 d0             	add    rax,rdx
    9756:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9759:	3c 37                	cmp    al,0x37
    975b:	74 2f                	je     978c <isdigit+0x110>
    975d:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9760:	48 63 d0             	movsxd rdx,eax
    9763:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9767:	48 01 d0             	add    rax,rdx
    976a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    976d:	3c 38                	cmp    al,0x38
    976f:	74 1b                	je     978c <isdigit+0x110>
    9771:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9774:	48 63 d0             	movsxd rdx,eax
    9777:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    977b:	48 01 d0             	add    rax,rdx
    977e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9781:	3c 39                	cmp    al,0x39
    9783:	74 07                	je     978c <isdigit+0x110>
    9785:	b8 00 00 00 00       	mov    eax,0x0
    978a:	eb 24                	jmp    97b0 <isdigit+0x134>
    978c:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    9790:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9793:	48 63 d8             	movsxd rbx,eax
    9796:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    979a:	48 89 c7             	mov    rdi,rax
    979d:	e8 ee 8d ff ff       	call   2590 <strlen@plt>
    97a2:	48 39 c3             	cmp    rbx,rax
    97a5:	0f 82 ee fe ff ff    	jb     9699 <isdigit+0x1d>
    97ab:	b8 01 00 00 00       	mov    eax,0x1
    97b0:	48 83 c4 28          	add    rsp,0x28
    97b4:	5b                   	pop    rbx
    97b5:	5d                   	pop    rbp
    97b6:	c3                   	ret    

00000000000097b7 <assign_port_number>:
    97b7:	f3 0f 1e fa          	endbr64 
    97bb:	55                   	push   rbp
    97bc:	48 89 e5             	mov    rbp,rsp
    97bf:	48 83 ec 10          	sub    rsp,0x10
    97c3:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    97c7:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    97cb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    97cf:	48 89 c7             	mov    rdi,rax
    97d2:	e8 a5 fe ff ff       	call   967c <isdigit>
    97d7:	84 c0                	test   al,al
    97d9:	74 18                	je     97f3 <assign_port_number+0x3c>
    97db:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    97df:	48 89 c7             	mov    rdi,rax
    97e2:	e8 39 90 ff ff       	call   2820 <atoi@plt>
    97e7:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    97eb:	89 82 44 01 00 00    	mov    DWORD PTR [rdx+0x144],eax
    97f1:	eb 25                	jmp    9818 <assign_port_number+0x61>
    97f3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    97f7:	48 8d 35 9a 42 00 00 	lea    rsi,[rip+0x429a]        # da98 <_IO_stdin_used+0x1a98>
    97fe:	48 89 c7             	mov    rdi,rax
    9801:	e8 aa 8e ff ff       	call   26b0 <strcmp@plt>
    9806:	85 c0                	test   eax,eax
    9808:	75 0e                	jne    9818 <assign_port_number+0x61>
    980a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    980e:	c7 80 44 01 00 00 ff 	mov    DWORD PTR [rax+0x144],0xffffffff
    9815:	ff ff ff 
    9818:	90                   	nop
    9819:	c9                   	leave  
    981a:	c3                   	ret    

000000000000981b <check_port_number>:
    981b:	f3 0f 1e fa          	endbr64 
    981f:	55                   	push   rbp
    9820:	48 89 e5             	mov    rbp,rsp
    9823:	48 83 ec 10          	sub    rsp,0x10
    9827:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    982b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    982f:	48 89 c7             	mov    rdi,rax
    9832:	e8 45 fe ff ff       	call   967c <isdigit>
    9837:	84 c0                	test   al,al
    9839:	74 0e                	je     9849 <check_port_number+0x2e>
    983b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    983f:	48 89 c7             	mov    rdi,rax
    9842:	e8 d9 8f ff ff       	call   2820 <atoi@plt>
    9847:	eb 23                	jmp    986c <check_port_number+0x51>
    9849:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    984d:	48 8d 35 44 42 00 00 	lea    rsi,[rip+0x4244]        # da98 <_IO_stdin_used+0x1a98>
    9854:	48 89 c7             	mov    rdi,rax
    9857:	e8 54 8e ff ff       	call   26b0 <strcmp@plt>
    985c:	85 c0                	test   eax,eax
    985e:	75 07                	jne    9867 <check_port_number+0x4c>
    9860:	b8 ff ff ff ff       	mov    eax,0xffffffff
    9865:	eb 05                	jmp    986c <check_port_number+0x51>
    9867:	b8 ff ff ff ff       	mov    eax,0xffffffff
    986c:	c9                   	leave  
    986d:	c3                   	ret    

000000000000986e <assign_protocol>:
    986e:	f3 0f 1e fa          	endbr64 
    9872:	55                   	push   rbp
    9873:	48 89 e5             	mov    rbp,rsp
    9876:	48 83 ec 10          	sub    rsp,0x10
    987a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    987e:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    9882:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9886:	48 8d 35 0f 42 00 00 	lea    rsi,[rip+0x420f]        # da9c <_IO_stdin_used+0x1a9c>
    988d:	48 89 c7             	mov    rdi,rax
    9890:	e8 1b 8e ff ff       	call   26b0 <strcmp@plt>
    9895:	85 c0                	test   eax,eax
    9897:	75 10                	jne    98a9 <assign_protocol+0x3b>
    9899:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    989d:	c7 80 40 01 00 00 ff 	mov    DWORD PTR [rax+0x140],0xffffffff
    98a4:	ff ff ff 
    98a7:	eb 73                	jmp    991c <assign_protocol+0xae>
    98a9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    98ad:	48 8d 35 ec 41 00 00 	lea    rsi,[rip+0x41ec]        # daa0 <_IO_stdin_used+0x1aa0>
    98b4:	48 89 c7             	mov    rdi,rax
    98b7:	e8 f4 8d ff ff       	call   26b0 <strcmp@plt>
    98bc:	85 c0                	test   eax,eax
    98be:	75 10                	jne    98d0 <assign_protocol+0x62>
    98c0:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    98c4:	c7 80 40 01 00 00 80 	mov    DWORD PTR [rax+0x140],0x80
    98cb:	00 00 00 
    98ce:	eb 4c                	jmp    991c <assign_protocol+0xae>
    98d0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    98d4:	48 8d 35 ca 41 00 00 	lea    rsi,[rip+0x41ca]        # daa5 <_IO_stdin_used+0x1aa5>
    98db:	48 89 c7             	mov    rdi,rax
    98de:	e8 cd 8d ff ff       	call   26b0 <strcmp@plt>
    98e3:	85 c0                	test   eax,eax
    98e5:	75 10                	jne    98f7 <assign_protocol+0x89>
    98e7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    98eb:	c7 80 40 01 00 00 7e 	mov    DWORD PTR [rax+0x140],0x7e
    98f2:	00 00 00 
    98f5:	eb 25                	jmp    991c <assign_protocol+0xae>
    98f7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    98fb:	48 8d 35 a7 41 00 00 	lea    rsi,[rip+0x41a7]        # daa9 <_IO_stdin_used+0x1aa9>
    9902:	48 89 c7             	mov    rdi,rax
    9905:	e8 a6 8d ff ff       	call   26b0 <strcmp@plt>
    990a:	85 c0                	test   eax,eax
    990c:	75 0e                	jne    991c <assign_protocol+0xae>
    990e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9912:	c7 80 40 01 00 00 7f 	mov    DWORD PTR [rax+0x140],0x7f
    9919:	00 00 00 
    991c:	90                   	nop
    991d:	c9                   	leave  
    991e:	c3                   	ret    

000000000000991f <get_ruletype>:
    991f:	f3 0f 1e fa          	endbr64 
    9923:	55                   	push   rbp
    9924:	48 89 e5             	mov    rbp,rsp
    9927:	48 83 ec 10          	sub    rsp,0x10
    992b:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    992f:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    9933:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9937:	ba 09 00 00 00       	mov    edx,0x9
    993c:	48 8d 35 6a 41 00 00 	lea    rsi,[rip+0x416a]        # daad <_IO_stdin_used+0x1aad>
    9943:	48 89 c7             	mov    rdi,rax
    9946:	e8 95 8b ff ff       	call   24e0 <strncmp@plt>
    994b:	85 c0                	test   eax,eax
    994d:	75 17                	jne    9966 <get_ruletype+0x47>
    994f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9953:	48 8d 15 99 bd ff ff 	lea    rdx,[rip+0xffffffffffffbd99]        # 56f3 <str_match_parser>
    995a:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    9961:	e9 82 00 00 00       	jmp    99e8 <get_ruletype+0xc9>
    9966:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    996a:	ba 04 00 00 00       	mov    edx,0x4
    996f:	48 8d 35 41 41 00 00 	lea    rsi,[rip+0x4141]        # dab7 <_IO_stdin_used+0x1ab7>
    9976:	48 89 c7             	mov    rdi,rax
    9979:	e8 62 8b ff ff       	call   24e0 <strncmp@plt>
    997e:	85 c0                	test   eax,eax
    9980:	75 14                	jne    9996 <get_ruletype+0x77>
    9982:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9986:	48 8d 15 0c c0 ff ff 	lea    rdx,[rip+0xffffffffffffc00c]        # 5999 <none>
    998d:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    9994:	eb 52                	jmp    99e8 <get_ruletype+0xc9>
    9996:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    999a:	ba 04 00 00 00       	mov    edx,0x4
    999f:	48 8d 35 16 41 00 00 	lea    rsi,[rip+0x4116]        # dabc <_IO_stdin_used+0x1abc>
    99a6:	48 89 c7             	mov    rdi,rax
    99a9:	e8 32 8b ff ff       	call   24e0 <strncmp@plt>
    99ae:	85 c0                	test   eax,eax
    99b0:	75 14                	jne    99c6 <get_ruletype+0xa7>
    99b2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    99b6:	48 8d 15 f3 bf ff ff 	lea    rdx,[rip+0xffffffffffffbff3]        # 59b0 <pcre_match>
    99bd:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    99c4:	eb 22                	jmp    99e8 <get_ruletype+0xc9>
    99c6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    99ca:	48 89 c6             	mov    rsi,rax
    99cd:	48 8d 3d ed 40 00 00 	lea    rdi,[rip+0x40ed]        # dac1 <_IO_stdin_used+0x1ac1>
    99d4:	b8 00 00 00 00       	mov    eax,0x0
    99d9:	e8 12 8c ff ff       	call   25f0 <printf@plt>
    99de:	bf 01 00 00 00       	mov    edi,0x1
    99e3:	e8 98 8e ff ff       	call   2880 <exit@plt>
    99e8:	c9                   	leave  
    99e9:	c3                   	ret    

00000000000099ea <numeric_check>:
    99ea:	f3 0f 1e fa          	endbr64 
    99ee:	55                   	push   rbp
    99ef:	48 89 e5             	mov    rbp,rsp
    99f2:	48 83 ec 30          	sub    rsp,0x30
    99f6:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    99fa:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    99fd:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    9a01:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9a05:	48 89 c7             	mov    rdi,rax
    9a08:	e8 6f fc ff ff       	call   967c <isdigit>
    9a0d:	84 c0                	test   al,al
    9a0f:	74 27                	je     9a38 <numeric_check+0x4e>
    9a11:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9a15:	48 89 c7             	mov    rdi,rax
    9a18:	e8 03 8e ff ff       	call   2820 <atoi@plt>
    9a1d:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
    9a20:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    9a23:	39 45 e4             	cmp    DWORD PTR [rbp-0x1c],eax
    9a26:	77 10                	ja     9a38 <numeric_check+0x4e>
    9a28:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    9a2b:	48 98                	cdqe   
    9a2d:	48 39 45 d8          	cmp    QWORD PTR [rbp-0x28],rax
    9a31:	72 05                	jb     9a38 <numeric_check+0x4e>
    9a33:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    9a36:	eb 05                	jmp    9a3d <numeric_check+0x53>
    9a38:	b8 ff ff ff ff       	mov    eax,0xffffffff
    9a3d:	c9                   	leave  
    9a3e:	c3                   	ret    

0000000000009a3f <sc_strip>:
    9a3f:	f3 0f 1e fa          	endbr64 
    9a43:	55                   	push   rbp
    9a44:	48 89 e5             	mov    rbp,rsp
    9a47:	48 83 ec 10          	sub    rsp,0x10
    9a4b:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9a4f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9a53:	48 8d 35 7e 40 00 00 	lea    rsi,[rip+0x407e]        # dad8 <_IO_stdin_used+0x1ad8>
    9a5a:	48 89 c7             	mov    rdi,rax
    9a5d:	e8 0e 8c ff ff       	call   2670 <strcspn@plt>
    9a62:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    9a66:	48 01 d0             	add    rax,rdx
    9a69:	c6 00 00             	mov    BYTE PTR [rax],0x0
    9a6c:	90                   	nop
    9a6d:	c9                   	leave  
    9a6e:	c3                   	ret    

0000000000009a6f <void_rule>:
    9a6f:	f3 0f 1e fa          	endbr64 
    9a73:	55                   	push   rbp
    9a74:	48 89 e5             	mov    rbp,rsp
    9a77:	48 83 ec 10          	sub    rsp,0x10
    9a7b:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9a7f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9a83:	48 05 6e 03 00 00    	add    rax,0x36e
    9a89:	ba 0a 00 00 00       	mov    edx,0xa
    9a8e:	be 00 00 00 00       	mov    esi,0x0
    9a93:	48 89 c7             	mov    rdi,rax
    9a96:	e8 95 8b ff ff       	call   2630 <memset@plt>
    9a9b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9a9f:	48 05 68 03 00 00    	add    rax,0x368
    9aa5:	ba 06 00 00 00       	mov    edx,0x6
    9aaa:	be 00 00 00 00       	mov    esi,0x0
    9aaf:	48 89 c7             	mov    rdi,rax
    9ab2:	e8 79 8b ff ff       	call   2630 <memset@plt>
    9ab7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9abb:	48 05 50 03 00 00    	add    rax,0x350
    9ac1:	ba 18 00 00 00       	mov    edx,0x18
    9ac6:	be 00 00 00 00       	mov    esi,0x0
    9acb:	48 89 c7             	mov    rdi,rax
    9ace:	e8 5d 8b ff ff       	call   2630 <memset@plt>
    9ad3:	90                   	nop
    9ad4:	c9                   	leave  
    9ad5:	c3                   	ret    

0000000000009ad6 <line_parser>:
    9ad6:	f3 0f 1e fa          	endbr64 
    9ada:	55                   	push   rbp
    9adb:	48 89 e5             	mov    rbp,rsp
    9ade:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    9ae5:	48 89 bd 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdi
    9aec:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9af3:	00 00 
    9af5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9af9:	31 c0                	xor    eax,eax
    9afb:	8b 05 13 75 00 00    	mov    eax,DWORD PTR [rip+0x7513]        # 11014 <num_rules>
    9b01:	83 c0 01             	add    eax,0x1
    9b04:	89 05 0a 75 00 00    	mov    DWORD PTR [rip+0x750a],eax        # 11014 <num_rules>
    9b0a:	8b 05 04 75 00 00    	mov    eax,DWORD PTR [rip+0x7504]        # 11014 <num_rules>
    9b10:	48 98                	cdqe   
    9b12:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    9b19:	48 8d 15 80 75 00 00 	lea    rdx,[rip+0x7580]        # 110a0 <rules>
    9b20:	48 01 d0             	add    rax,rdx
    9b23:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    9b27:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9b2b:	ba 08 00 00 00       	mov    edx,0x8
    9b30:	be 00 00 00 00       	mov    esi,0x0
    9b35:	48 89 c7             	mov    rdi,rax
    9b38:	e8 f3 8a ff ff       	call   2630 <memset@plt>
    9b3d:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9b41:	c7 80 44 01 00 00 ff 	mov    DWORD PTR [rax+0x144],0xffffffff
    9b48:	ff ff ff 
    9b4b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9b4f:	c7 80 40 01 00 00 ff 	mov    DWORD PTR [rax+0x140],0xffffffff
    9b56:	ff ff ff 
    9b59:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9b5d:	c7 40 1c ff ff ff ff 	mov    DWORD PTR [rax+0x1c],0xffffffff
    9b64:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9b68:	c7 40 18 ff ff ff ff 	mov    DWORD PTR [rax+0x18],0xffffffff
    9b6f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9b73:	c7 40 10 ff ff ff ff 	mov    DWORD PTR [rax+0x10],0xffffffff
    9b7a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9b7e:	c7 80 4c 03 00 00 00 	mov    DWORD PTR [rax+0x34c],0x0
    9b85:	00 00 00 
    9b88:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9b8c:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
    9b92:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9b96:	c7 40 04 00 00 00 00 	mov    DWORD PTR [rax+0x4],0x0
    9b9d:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9ba1:	48 89 c7             	mov    rdi,rax
    9ba4:	e8 c6 fe ff ff       	call   9a6f <void_rule>
    9ba9:	c7 45 98 00 00 00 00 	mov    DWORD PTR [rbp-0x68],0x0
    9bb0:	c6 45 8c 00          	mov    BYTE PTR [rbp-0x74],0x0
    9bb4:	c7 45 90 00 00 00 00 	mov    DWORD PTR [rbp-0x70],0x0
    9bbb:	c7 45 94 00 00 00 00 	mov    DWORD PTR [rbp-0x6c],0x0
    9bc2:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    9bc9:	48 89 c7             	mov    rdi,rax
    9bcc:	e8 bf 89 ff ff       	call   2590 <strlen@plt>
    9bd1:	89 45 9c             	mov    DWORD PTR [rbp-0x64],eax
    9bd4:	c6 45 8d 00          	mov    BYTE PTR [rbp-0x73],0x0
    9bd8:	c6 45 8e 00          	mov    BYTE PTR [rbp-0x72],0x0
    9bdc:	c6 45 8f 00          	mov    BYTE PTR [rbp-0x71],0x0
    9be0:	e9 03 0e 00 00       	jmp    a9e8 <line_parser+0xf12>
    9be5:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    9be8:	48 63 d0             	movsxd rdx,eax
    9beb:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    9bf2:	48 01 d0             	add    rax,rdx
    9bf5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9bf8:	0f be c0             	movsx  eax,al
    9bfb:	89 c7                	mov    edi,eax
    9bfd:	e8 64 fa ff ff       	call   9666 <delimit>
    9c02:	83 f0 01             	xor    eax,0x1
    9c05:	84 c0                	test   al,al
    9c07:	74 04                	je     9c0d <line_parser+0x137>
    9c09:	83 45 94 01          	add    DWORD PTR [rbp-0x6c],0x1
    9c0d:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    9c10:	48 63 d0             	movsxd rdx,eax
    9c13:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    9c1a:	48 01 d0             	add    rax,rdx
    9c1d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9c20:	0f be c0             	movsx  eax,al
    9c23:	89 c7                	mov    edi,eax
    9c25:	e8 3c fa ff ff       	call   9666 <delimit>
    9c2a:	84 c0                	test   al,al
    9c2c:	74 3f                	je     9c6d <line_parser+0x197>
    9c2e:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    9c31:	3b 45 90             	cmp    eax,DWORD PTR [rbp-0x70]
    9c34:	75 37                	jne    9c6d <line_parser+0x197>
    9c36:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    9c39:	48 63 d0             	movsxd rdx,eax
    9c3c:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    9c43:	48 01 d0             	add    rax,rdx
    9c46:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9c49:	3c 3a                	cmp    al,0x3a
    9c4b:	75 11                	jne    9c5e <line_parser+0x188>
    9c4d:	48 8d 3d 86 3e 00 00 	lea    rdi,[rip+0x3e86]        # dada <_IO_stdin_used+0x1ada>
    9c54:	b8 00 00 00 00       	mov    eax,0x0
    9c59:	e8 92 89 ff ff       	call   25f0 <printf@plt>
    9c5e:	83 45 94 01          	add    DWORD PTR [rbp-0x6c],0x1
    9c62:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    9c65:	89 45 90             	mov    DWORD PTR [rbp-0x70],eax
    9c68:	e9 7b 0d 00 00       	jmp    a9e8 <line_parser+0xf12>
    9c6d:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    9c70:	48 63 d0             	movsxd rdx,eax
    9c73:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    9c7a:	48 01 d0             	add    rax,rdx
    9c7d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9c80:	0f be c0             	movsx  eax,al
    9c83:	89 c7                	mov    edi,eax
    9c85:	e8 dc f9 ff ff       	call   9666 <delimit>
    9c8a:	84 c0                	test   al,al
    9c8c:	74 08                	je     9c96 <line_parser+0x1c0>
    9c8e:	8b 45 90             	mov    eax,DWORD PTR [rbp-0x70]
    9c91:	3b 45 94             	cmp    eax,DWORD PTR [rbp-0x6c]
    9c94:	75 18                	jne    9cae <line_parser+0x1d8>
    9c96:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    9c99:	3b 45 9c             	cmp    eax,DWORD PTR [rbp-0x64]
    9c9c:	0f 85 46 0d 00 00    	jne    a9e8 <line_parser+0xf12>
    9ca2:	8b 45 90             	mov    eax,DWORD PTR [rbp-0x70]
    9ca5:	3b 45 94             	cmp    eax,DWORD PTR [rbp-0x6c]
    9ca8:	0f 84 3a 0d 00 00    	je     a9e8 <line_parser+0xf12>
    9cae:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    9cb1:	8d 50 ff             	lea    edx,[rax-0x1]
    9cb4:	8b 4d 90             	mov    ecx,DWORD PTR [rbp-0x70]
    9cb7:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    9cbe:	89 ce                	mov    esi,ecx
    9cc0:	48 89 c7             	mov    rdi,rax
    9cc3:	e8 1e f9 ff ff       	call   95e6 <substr>
    9cc8:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    9ccc:	f3 0f 1e fa          	endbr64 
    9cd0:	0f b6 45 8c          	movzx  eax,BYTE PTR [rbp-0x74]
    9cd4:	83 f0 01             	xor    eax,0x1
    9cd7:	84 c0                	test   al,al
    9cd9:	0f 84 d5 02 00 00    	je     9fb4 <line_parser+0x4de>
    9cdf:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9ce3:	48 8d 35 ff 3d 00 00 	lea    rsi,[rip+0x3dff]        # dae9 <_IO_stdin_used+0x1ae9>
    9cea:	48 89 c7             	mov    rdi,rax
    9ced:	e8 be 89 ff ff       	call   26b0 <strcmp@plt>
    9cf2:	85 c0                	test   eax,eax
    9cf4:	75 2d                	jne    9d23 <line_parser+0x24d>
    9cf6:	0f b6 45 8d          	movzx  eax,BYTE PTR [rbp-0x73]
    9cfa:	83 f0 01             	xor    eax,0x1
    9cfd:	84 c0                	test   al,al
    9cff:	74 22                	je     9d23 <line_parser+0x24d>
    9d01:	0f b6 45 8e          	movzx  eax,BYTE PTR [rbp-0x72]
    9d05:	83 f0 01             	xor    eax,0x1
    9d08:	84 c0                	test   al,al
    9d0a:	74 17                	je     9d23 <line_parser+0x24d>
    9d0c:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9d10:	48 8d 15 b2 b7 ff ff 	lea    rdx,[rip+0xffffffffffffb7b2]        # 54c9 <stdout_alert>
    9d17:	48 89 90 80 03 00 00 	mov    QWORD PTR [rax+0x380],rdx
    9d1e:	e9 a1 0c 00 00       	jmp    a9c4 <line_parser+0xeee>
    9d23:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9d27:	48 8d 35 72 3d 00 00 	lea    rsi,[rip+0x3d72]        # daa0 <_IO_stdin_used+0x1aa0>
    9d2e:	48 89 c7             	mov    rdi,rax
    9d31:	e8 7a 89 ff ff       	call   26b0 <strcmp@plt>
    9d36:	85 c0                	test   eax,eax
    9d38:	74 45                	je     9d7f <line_parser+0x2a9>
    9d3a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9d3e:	48 8d 35 57 3d 00 00 	lea    rsi,[rip+0x3d57]        # da9c <_IO_stdin_used+0x1a9c>
    9d45:	48 89 c7             	mov    rdi,rax
    9d48:	e8 63 89 ff ff       	call   26b0 <strcmp@plt>
    9d4d:	85 c0                	test   eax,eax
    9d4f:	74 2e                	je     9d7f <line_parser+0x2a9>
    9d51:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9d55:	48 8d 35 49 3d 00 00 	lea    rsi,[rip+0x3d49]        # daa5 <_IO_stdin_used+0x1aa5>
    9d5c:	48 89 c7             	mov    rdi,rax
    9d5f:	e8 4c 89 ff ff       	call   26b0 <strcmp@plt>
    9d64:	85 c0                	test   eax,eax
    9d66:	74 17                	je     9d7f <line_parser+0x2a9>
    9d68:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9d6c:	48 8d 35 36 3d 00 00 	lea    rsi,[rip+0x3d36]        # daa9 <_IO_stdin_used+0x1aa9>
    9d73:	48 89 c7             	mov    rdi,rax
    9d76:	e8 35 89 ff ff       	call   26b0 <strcmp@plt>
    9d7b:	85 c0                	test   eax,eax
    9d7d:	75 2e                	jne    9dad <line_parser+0x2d7>
    9d7f:	0f b6 45 8e          	movzx  eax,BYTE PTR [rbp-0x72]
    9d83:	83 f0 01             	xor    eax,0x1
    9d86:	84 c0                	test   al,al
    9d88:	74 23                	je     9dad <line_parser+0x2d7>
    9d8a:	0f b6 45 8d          	movzx  eax,BYTE PTR [rbp-0x73]
    9d8e:	83 f0 01             	xor    eax,0x1
    9d91:	84 c0                	test   al,al
    9d93:	74 18                	je     9dad <line_parser+0x2d7>
    9d95:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    9d99:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9d9d:	48 89 d6             	mov    rsi,rdx
    9da0:	48 89 c7             	mov    rdi,rax
    9da3:	e8 c6 fa ff ff       	call   986e <assign_protocol>
    9da8:	e9 17 0c 00 00       	jmp    a9c4 <line_parser+0xeee>
    9dad:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9db1:	48 89 c7             	mov    rdi,rax
    9db4:	e8 c3 f8 ff ff       	call   967c <isdigit>
    9db9:	84 c0                	test   al,al
    9dbb:	75 17                	jne    9dd4 <line_parser+0x2fe>
    9dbd:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9dc1:	48 8d 35 d0 3c 00 00 	lea    rsi,[rip+0x3cd0]        # da98 <_IO_stdin_used+0x1a98>
    9dc8:	48 89 c7             	mov    rdi,rax
    9dcb:	e8 e0 88 ff ff       	call   26b0 <strcmp@plt>
    9dd0:	85 c0                	test   eax,eax
    9dd2:	75 2e                	jne    9e02 <line_parser+0x32c>
    9dd4:	0f b6 45 8d          	movzx  eax,BYTE PTR [rbp-0x73]
    9dd8:	83 f0 01             	xor    eax,0x1
    9ddb:	84 c0                	test   al,al
    9ddd:	74 23                	je     9e02 <line_parser+0x32c>
    9ddf:	0f b6 45 8e          	movzx  eax,BYTE PTR [rbp-0x72]
    9de3:	83 f0 01             	xor    eax,0x1
    9de6:	84 c0                	test   al,al
    9de8:	74 18                	je     9e02 <line_parser+0x32c>
    9dea:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    9dee:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9df2:	48 89 d6             	mov    rsi,rdx
    9df5:	48 89 c7             	mov    rdi,rax
    9df8:	e8 ba f9 ff ff       	call   97b7 <assign_port_number>
    9dfd:	e9 c2 0b 00 00       	jmp    a9c4 <line_parser+0xeee>
    9e02:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9e06:	ba 08 00 00 00       	mov    edx,0x8
    9e0b:	48 8d 35 dd 3c 00 00 	lea    rsi,[rip+0x3cdd]        # daef <_IO_stdin_used+0x1aef>
    9e12:	48 89 c7             	mov    rdi,rax
    9e15:	e8 c6 86 ff ff       	call   24e0 <strncmp@plt>
    9e1a:	85 c0                	test   eax,eax
    9e1c:	75 75                	jne    9e93 <line_parser+0x3bd>
    9e1e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9e22:	48 8d 50 09          	lea    rdx,[rax+0x9]
    9e26:	48 8d 45 ee          	lea    rax,[rbp-0x12]
    9e2a:	48 89 d6             	mov    rsi,rdx
    9e2d:	48 89 c7             	mov    rdi,rax
    9e30:	e8 bb 86 ff ff       	call   24f0 <strcpy@plt>
    9e35:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9e39:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    9e3c:	85 c0                	test   eax,eax
    9e3e:	75 2e                	jne    9e6e <line_parser+0x398>
    9e40:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9e44:	8b 00                	mov    eax,DWORD PTR [rax]
    9e46:	85 c0                	test   eax,eax
    9e48:	75 24                	jne    9e6e <line_parser+0x398>
    9e4a:	8b 15 b4 de 0f 00    	mov    edx,DWORD PTR [rip+0xfdeb4]        # 107d04 <homenet>
    9e50:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9e54:	89 10                	mov    DWORD PTR [rax],edx
    9e56:	48 8d 45 ee          	lea    rax,[rbp-0x12]
    9e5a:	48 89 c7             	mov    rdi,rax
    9e5d:	e8 b9 f9 ff ff       	call   981b <check_port_number>
    9e62:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    9e66:	89 42 0c             	mov    DWORD PTR [rdx+0xc],eax
    9e69:	e9 56 0b 00 00       	jmp    a9c4 <line_parser+0xeee>
    9e6e:	8b 15 90 de 0f 00    	mov    edx,DWORD PTR [rip+0xfde90]        # 107d04 <homenet>
    9e74:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9e78:	89 50 04             	mov    DWORD PTR [rax+0x4],edx
    9e7b:	48 8d 45 ee          	lea    rax,[rbp-0x12]
    9e7f:	48 89 c7             	mov    rdi,rax
    9e82:	e8 94 f9 ff ff       	call   981b <check_port_number>
    9e87:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    9e8b:	89 42 08             	mov    DWORD PTR [rdx+0x8],eax
    9e8e:	e9 31 0b 00 00       	jmp    a9c4 <line_parser+0xeee>
    9e93:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9e97:	48 8d 35 5a 3c 00 00 	lea    rsi,[rip+0x3c5a]        # daf8 <_IO_stdin_used+0x1af8>
    9e9e:	48 89 c7             	mov    rdi,rax
    9ea1:	e8 0a 88 ff ff       	call   26b0 <strcmp@plt>
    9ea6:	85 c0                	test   eax,eax
    9ea8:	75 30                	jne    9eda <line_parser+0x404>
    9eaa:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9eae:	8b 10                	mov    edx,DWORD PTR [rax]
    9eb0:	8b 05 4e de 0f 00    	mov    eax,DWORD PTR [rip+0xfde4e]        # 107d04 <homenet>
    9eb6:	39 c2                	cmp    edx,eax
    9eb8:	75 10                	jne    9eca <line_parser+0x3f4>
    9eba:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9ebe:	c7 40 10 45 00 00 00 	mov    DWORD PTR [rax+0x10],0x45
    9ec5:	e9 fa 0a 00 00       	jmp    a9c4 <line_parser+0xeee>
    9eca:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9ece:	c7 40 10 46 00 00 00 	mov    DWORD PTR [rax+0x10],0x46
    9ed5:	e9 ea 0a 00 00       	jmp    a9c4 <line_parser+0xeee>
    9eda:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9ede:	48 8d 35 16 3c 00 00 	lea    rsi,[rip+0x3c16]        # dafb <_IO_stdin_used+0x1afb>
    9ee5:	48 89 c7             	mov    rdi,rax
    9ee8:	e8 c3 87 ff ff       	call   26b0 <strcmp@plt>
    9eed:	85 c0                	test   eax,eax
    9eef:	75 10                	jne    9f01 <line_parser+0x42b>
    9ef1:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9ef5:	c7 40 10 47 00 00 00 	mov    DWORD PTR [rax+0x10],0x47
    9efc:	e9 c3 0a 00 00       	jmp    a9c4 <line_parser+0xeee>
    9f01:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9f05:	ba 0c 00 00 00       	mov    edx,0xc
    9f0a:	48 8d 35 ed 3b 00 00 	lea    rsi,[rip+0x3bed]        # dafe <_IO_stdin_used+0x1afe>
    9f11:	48 89 c7             	mov    rdi,rax
    9f14:	e8 c7 85 ff ff       	call   24e0 <strncmp@plt>
    9f19:	85 c0                	test   eax,eax
    9f1b:	75 7f                	jne    9f9c <line_parser+0x4c6>
    9f1d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9f21:	48 8d 50 0c          	lea    rdx,[rax+0xc]
    9f25:	48 8d 45 ee          	lea    rax,[rbp-0x12]
    9f29:	48 89 d6             	mov    rsi,rdx
    9f2c:	48 89 c7             	mov    rdi,rax
    9f2f:	e8 bc 85 ff ff       	call   24f0 <strcpy@plt>
    9f34:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9f38:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    9f3b:	85 c0                	test   eax,eax
    9f3d:	75 37                	jne    9f76 <line_parser+0x4a0>
    9f3f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9f43:	8b 10                	mov    edx,DWORD PTR [rax]
    9f45:	8b 05 b9 dd 0f 00    	mov    eax,DWORD PTR [rip+0xfddb9]        # 107d04 <homenet>
    9f4b:	39 c2                	cmp    edx,eax
    9f4d:	75 27                	jne    9f76 <line_parser+0x4a0>
    9f4f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9f53:	c7 40 04 ff ff ff ff 	mov    DWORD PTR [rax+0x4],0xffffffff
    9f5a:	48 8d 45 ee          	lea    rax,[rbp-0x12]
    9f5e:	48 83 c0 01          	add    rax,0x1
    9f62:	48 89 c7             	mov    rdi,rax
    9f65:	e8 b1 f8 ff ff       	call   981b <check_port_number>
    9f6a:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    9f6e:	89 42 08             	mov    DWORD PTR [rdx+0x8],eax
    9f71:	e9 4e 0a 00 00       	jmp    a9c4 <line_parser+0xeee>
    9f76:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9f7a:	c7 00 ff ff ff ff    	mov    DWORD PTR [rax],0xffffffff
    9f80:	48 8d 45 ee          	lea    rax,[rbp-0x12]
    9f84:	48 83 c0 01          	add    rax,0x1
    9f88:	48 89 c7             	mov    rdi,rax
    9f8b:	e8 8b f8 ff ff       	call   981b <check_port_number>
    9f90:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    9f94:	89 42 0c             	mov    DWORD PTR [rdx+0xc],eax
    9f97:	e9 28 0a 00 00       	jmp    a9c4 <line_parser+0xeee>
    9f9c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9fa0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9fa3:	3c 28                	cmp    al,0x28
    9fa5:	0f 85 19 0a 00 00    	jne    a9c4 <line_parser+0xeee>
    9fab:	c6 45 8c 01          	mov    BYTE PTR [rbp-0x74],0x1
    9faf:	e9 34 0a 00 00       	jmp    a9e8 <line_parser+0xf12>
    9fb4:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9fb8:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9fbb:	3c 28                	cmp    al,0x28
    9fbd:	75 0e                	jne    9fcd <line_parser+0x4f7>
    9fbf:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9fc3:	48 83 c0 01          	add    rax,0x1
    9fc7:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    9fcb:	eb 08                	jmp    9fd5 <line_parser+0x4ff>
    9fcd:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9fd1:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    9fd5:	80 7d 8d 00          	cmp    BYTE PTR [rbp-0x73],0x0
    9fd9:	0f 84 a4 00 00 00    	je     a083 <line_parser+0x5ad>
    9fdf:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9fe3:	48 89 c7             	mov    rdi,rax
    9fe6:	e8 a5 85 ff ff       	call   2590 <strlen@plt>
    9feb:	48 8d 50 ff          	lea    rdx,[rax-0x1]
    9fef:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9ff3:	48 01 d0             	add    rax,rdx
    9ff6:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9ff9:	3c 3b                	cmp    al,0x3b
    9ffb:	75 33                	jne    a030 <line_parser+0x55a>
    9ffd:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a001:	48 89 c7             	mov    rdi,rax
    a004:	e8 87 85 ff ff       	call   2590 <strlen@plt>
    a009:	48 8d 50 fe          	lea    rdx,[rax-0x2]
    a00d:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a011:	48 8d 88 50 01 00 00 	lea    rcx,[rax+0x150]
    a018:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a01c:	48 89 c6             	mov    rsi,rax
    a01f:	48 89 cf             	mov    rdi,rcx
    a022:	e8 19 86 ff ff       	call   2640 <strncat@plt>
    a027:	c6 45 8d 00          	mov    BYTE PTR [rbp-0x73],0x0
    a02b:	e9 b8 09 00 00       	jmp    a9e8 <line_parser+0xf12>
    a030:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a034:	48 8d 90 50 01 00 00 	lea    rdx,[rax+0x150]
    a03b:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a03f:	48 89 c6             	mov    rsi,rax
    a042:	48 89 d7             	mov    rdi,rdx
    a045:	e8 f6 87 ff ff       	call   2840 <strcat@plt>
    a04a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a04e:	48 8d 90 50 01 00 00 	lea    rdx,[rax+0x150]
    a055:	48 89 d0             	mov    rax,rdx
    a058:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    a05f:	48 89 c6             	mov    rsi,rax
    a062:	b8 00 00 00 00       	mov    eax,0x0
    a067:	48 89 f7             	mov    rdi,rsi
    a06a:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    a06c:	48 89 c8             	mov    rax,rcx
    a06f:	48 f7 d0             	not    rax
    a072:	48 83 e8 01          	sub    rax,0x1
    a076:	48 01 d0             	add    rax,rdx
    a079:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    a07e:	e9 41 09 00 00       	jmp    a9c4 <line_parser+0xeee>
    a083:	80 7d 8e 00          	cmp    BYTE PTR [rbp-0x72],0x0
    a087:	0f 84 95 00 00 00    	je     a122 <line_parser+0x64c>
    a08d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a091:	48 8d 35 73 3a 00 00 	lea    rsi,[rip+0x3a73]        # db0b <_IO_stdin_used+0x1b0b>
    a098:	48 89 c7             	mov    rdi,rax
    a09b:	e8 20 88 ff ff       	call   28c0 <strstr@plt>
    a0a0:	48 85 c0             	test   rax,rax
    a0a3:	74 30                	je     a0d5 <line_parser+0x5ff>
    a0a5:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a0a9:	48 89 c7             	mov    rdi,rax
    a0ac:	e8 df 84 ff ff       	call   2590 <strlen@plt>
    a0b1:	48 8d 50 fd          	lea    rdx,[rax-0x3]
    a0b5:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a0b9:	48 8d 48 40          	lea    rcx,[rax+0x40]
    a0bd:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a0c1:	48 89 c6             	mov    rsi,rax
    a0c4:	48 89 cf             	mov    rdi,rcx
    a0c7:	e8 74 85 ff ff       	call   2640 <strncat@plt>
    a0cc:	c6 45 8e 00          	mov    BYTE PTR [rbp-0x72],0x0
    a0d0:	e9 13 09 00 00       	jmp    a9e8 <line_parser+0xf12>
    a0d5:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a0d9:	48 8d 50 40          	lea    rdx,[rax+0x40]
    a0dd:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a0e1:	48 89 c6             	mov    rsi,rax
    a0e4:	48 89 d7             	mov    rdi,rdx
    a0e7:	e8 54 87 ff ff       	call   2840 <strcat@plt>
    a0ec:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a0f0:	48 8d 50 40          	lea    rdx,[rax+0x40]
    a0f4:	48 89 d0             	mov    rax,rdx
    a0f7:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    a0fe:	48 89 c6             	mov    rsi,rax
    a101:	b8 00 00 00 00       	mov    eax,0x0
    a106:	48 89 f7             	mov    rdi,rsi
    a109:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    a10b:	48 89 c8             	mov    rax,rcx
    a10e:	48 f7 d0             	not    rax
    a111:	48 83 e8 01          	sub    rax,0x1
    a115:	48 01 d0             	add    rax,rdx
    a118:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    a11d:	e9 a2 08 00 00       	jmp    a9c4 <line_parser+0xeee>
    a122:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a126:	ba 06 00 00 00       	mov    edx,0x6
    a12b:	48 8d 35 dc 39 00 00 	lea    rsi,[rip+0x39dc]        # db0e <_IO_stdin_used+0x1b0e>
    a132:	48 89 c7             	mov    rdi,rax
    a135:	e8 a6 83 ff ff       	call   24e0 <strncmp@plt>
    a13a:	85 c0                	test   eax,eax
    a13c:	75 34                	jne    a172 <line_parser+0x69c>
    a13e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a142:	48 89 c7             	mov    rdi,rax
    a145:	e8 46 84 ff ff       	call   2590 <strlen@plt>
    a14a:	48 8d 50 f8          	lea    rdx,[rax-0x8]
    a14e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a152:	48 8d 48 06          	lea    rcx,[rax+0x6]
    a156:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a15a:	48 83 c0 20          	add    rax,0x20
    a15e:	48 89 ce             	mov    rsi,rcx
    a161:	48 89 c7             	mov    rdi,rax
    a164:	e8 67 83 ff ff       	call   24d0 <strncpy@plt>
    a169:	c6 45 8f 01          	mov    BYTE PTR [rbp-0x71],0x1
    a16d:	e9 52 08 00 00       	jmp    a9c4 <line_parser+0xeee>
    a172:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a176:	ba 05 00 00 00       	mov    edx,0x5
    a17b:	48 8d 35 93 39 00 00 	lea    rsi,[rip+0x3993]        # db15 <_IO_stdin_used+0x1b15>
    a182:	48 89 c7             	mov    rdi,rax
    a185:	e8 56 83 ff ff       	call   24e0 <strncmp@plt>
    a18a:	85 c0                	test   eax,eax
    a18c:	75 63                	jne    a1f1 <line_parser+0x71b>
    a18e:	c6 45 8d 01          	mov    BYTE PTR [rbp-0x73],0x1
    a192:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a196:	48 83 c0 05          	add    rax,0x5
    a19a:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    a19e:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a1a2:	48 8d 90 50 01 00 00 	lea    rdx,[rax+0x150]
    a1a9:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    a1ad:	48 89 c6             	mov    rsi,rax
    a1b0:	48 89 d7             	mov    rdi,rdx
    a1b3:	e8 88 86 ff ff       	call   2840 <strcat@plt>
    a1b8:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a1bc:	48 8d 90 50 01 00 00 	lea    rdx,[rax+0x150]
    a1c3:	48 89 d0             	mov    rax,rdx
    a1c6:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    a1cd:	48 89 c6             	mov    rsi,rax
    a1d0:	b8 00 00 00 00       	mov    eax,0x0
    a1d5:	48 89 f7             	mov    rdi,rsi
    a1d8:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    a1da:	48 89 c8             	mov    rax,rcx
    a1dd:	48 f7 d0             	not    rax
    a1e0:	48 83 e8 01          	sub    rax,0x1
    a1e4:	48 01 d0             	add    rax,rdx
    a1e7:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    a1ec:	e9 d3 07 00 00       	jmp    a9c4 <line_parser+0xeee>
    a1f1:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a1f5:	ba 06 00 00 00       	mov    edx,0x6
    a1fa:	48 8d 35 1a 39 00 00 	lea    rsi,[rip+0x391a]        # db1b <_IO_stdin_used+0x1b1b>
    a201:	48 89 c7             	mov    rdi,rax
    a204:	e8 d7 82 ff ff       	call   24e0 <strncmp@plt>
    a209:	85 c0                	test   eax,eax
    a20b:	75 31                	jne    a23e <line_parser+0x768>
    a20d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a211:	48 89 c7             	mov    rdi,rax
    a214:	e8 26 f8 ff ff       	call   9a3f <sc_strip>
    a219:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a21d:	48 83 c0 06          	add    rax,0x6
    a221:	48 89 c7             	mov    rdi,rax
    a224:	e8 f7 85 ff ff       	call   2820 <atoi@plt>
    a229:	89 45 bc             	mov    DWORD PTR [rbp-0x44],eax
    a22c:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a230:	8b 55 bc             	mov    edx,DWORD PTR [rbp-0x44]
    a233:	89 90 4c 03 00 00    	mov    DWORD PTR [rax+0x34c],edx
    a239:	e9 86 07 00 00       	jmp    a9c4 <line_parser+0xeee>
    a23e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a242:	ba 05 00 00 00       	mov    edx,0x5
    a247:	48 8d 35 d4 38 00 00 	lea    rsi,[rip+0x38d4]        # db22 <_IO_stdin_used+0x1b22>
    a24e:	48 89 c7             	mov    rdi,rax
    a251:	e8 8a 82 ff ff       	call   24e0 <strncmp@plt>
    a256:	85 c0                	test   eax,eax
    a258:	75 3f                	jne    a299 <line_parser+0x7c3>
    a25a:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a25e:	48 89 c7             	mov    rdi,rax
    a261:	e8 2a 83 ff ff       	call   2590 <strlen@plt>
    a266:	48 8d 50 fa          	lea    rdx,[rax-0x6]
    a26a:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a26e:	48 8d 48 05          	lea    rcx,[rax+0x5]
    a272:	48 8d 45 ee          	lea    rax,[rbp-0x12]
    a276:	48 89 ce             	mov    rsi,rcx
    a279:	48 89 c7             	mov    rdi,rax
    a27c:	e8 4f 82 ff ff       	call   24d0 <strncpy@plt>
    a281:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    a285:	48 8d 45 ee          	lea    rax,[rbp-0x12]
    a289:	48 89 d6             	mov    rsi,rdx
    a28c:	48 89 c7             	mov    rdi,rax
    a28f:	e8 8b f6 ff ff       	call   991f <get_ruletype>
    a294:	e9 2b 07 00 00       	jmp    a9c4 <line_parser+0xeee>
    a299:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a29d:	ba 08 00 00 00       	mov    edx,0x8
    a2a2:	48 8d 35 7f 38 00 00 	lea    rsi,[rip+0x387f]        # db28 <_IO_stdin_used+0x1b28>
    a2a9:	48 89 c7             	mov    rdi,rax
    a2ac:	e8 2f 82 ff ff       	call   24e0 <strncmp@plt>
    a2b1:	85 c0                	test   eax,eax
    a2b3:	0f 85 a5 00 00 00    	jne    a35e <line_parser+0x888>
    a2b9:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a2bd:	48 83 c0 08          	add    rax,0x8
    a2c1:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    a2c5:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a2c9:	48 8d 35 3b 38 00 00 	lea    rsi,[rip+0x383b]        # db0b <_IO_stdin_used+0x1b0b>
    a2d0:	48 89 c7             	mov    rdi,rax
    a2d3:	e8 e8 85 ff ff       	call   28c0 <strstr@plt>
    a2d8:	48 85 c0             	test   rax,rax
    a2db:	74 30                	je     a30d <line_parser+0x837>
    a2dd:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a2e1:	48 89 c7             	mov    rdi,rax
    a2e4:	e8 a7 82 ff ff       	call   2590 <strlen@plt>
    a2e9:	48 8d 50 f5          	lea    rdx,[rax-0xb]
    a2ed:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a2f1:	48 8d 48 08          	lea    rcx,[rax+0x8]
    a2f5:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a2f9:	48 83 c0 40          	add    rax,0x40
    a2fd:	48 89 ce             	mov    rsi,rcx
    a300:	48 89 c7             	mov    rdi,rax
    a303:	e8 c8 81 ff ff       	call   24d0 <strncpy@plt>
    a308:	e9 b7 06 00 00       	jmp    a9c4 <line_parser+0xeee>
    a30d:	c6 45 8e 01          	mov    BYTE PTR [rbp-0x72],0x1
    a311:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a315:	48 8d 50 40          	lea    rdx,[rax+0x40]
    a319:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a31d:	48 89 c6             	mov    rsi,rax
    a320:	48 89 d7             	mov    rdi,rdx
    a323:	e8 18 85 ff ff       	call   2840 <strcat@plt>
    a328:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a32c:	48 8d 50 40          	lea    rdx,[rax+0x40]
    a330:	48 89 d0             	mov    rax,rdx
    a333:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    a33a:	48 89 c6             	mov    rsi,rax
    a33d:	b8 00 00 00 00       	mov    eax,0x0
    a342:	48 89 f7             	mov    rdi,rsi
    a345:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    a347:	48 89 c8             	mov    rax,rcx
    a34a:	48 f7 d0             	not    rax
    a34d:	48 83 e8 01          	sub    rax,0x1
    a351:	48 01 d0             	add    rax,rdx
    a354:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    a359:	e9 66 06 00 00       	jmp    a9c4 <line_parser+0xeee>
    a35e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a362:	ba 04 00 00 00       	mov    edx,0x4
    a367:	48 8d 35 c3 37 00 00 	lea    rsi,[rip+0x37c3]        # db31 <_IO_stdin_used+0x1b31>
    a36e:	48 89 c7             	mov    rdi,rax
    a371:	e8 6a 81 ff ff       	call   24e0 <strncmp@plt>
    a376:	85 c0                	test   eax,eax
    a378:	0f 85 8e 00 00 00    	jne    a40c <line_parser+0x936>
    a37e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a382:	48 8d 35 4f 37 00 00 	lea    rsi,[rip+0x374f]        # dad8 <_IO_stdin_used+0x1ad8>
    a389:	48 89 c7             	mov    rdi,rax
    a38c:	e8 df 82 ff ff       	call   2670 <strcspn@plt>
    a391:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
    a395:	48 01 d0             	add    rax,rdx
    a398:	c6 00 00             	mov    BYTE PTR [rax],0x0
    a39b:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a39f:	48 83 c0 04          	add    rax,0x4
    a3a3:	48 89 c7             	mov    rdi,rax
    a3a6:	e8 d1 f2 ff ff       	call   967c <isdigit>
    a3ab:	84 c0                	test   al,al
    a3ad:	74 47                	je     a3f6 <line_parser+0x920>
    a3af:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a3b3:	48 83 c0 04          	add    rax,0x4
    a3b7:	48 89 c7             	mov    rdi,rax
    a3ba:	e8 61 84 ff ff       	call   2820 <atoi@plt>
    a3bf:	89 45 b8             	mov    DWORD PTR [rbp-0x48],eax
    a3c2:	83 7d b8 00          	cmp    DWORD PTR [rbp-0x48],0x0
    a3c6:	7e 18                	jle    a3e0 <line_parser+0x90a>
    a3c8:	83 7d b8 0a          	cmp    DWORD PTR [rbp-0x48],0xa
    a3cc:	7f 12                	jg     a3e0 <line_parser+0x90a>
    a3ce:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a3d2:	8b 55 b8             	mov    edx,DWORD PTR [rbp-0x48]
    a3d5:	89 90 4c 01 00 00    	mov    DWORD PTR [rax+0x14c],edx
    a3db:	e9 e4 05 00 00       	jmp    a9c4 <line_parser+0xeee>
    a3e0:	48 8d 3d 51 37 00 00 	lea    rdi,[rip+0x3751]        # db38 <_IO_stdin_used+0x1b38>
    a3e7:	e8 34 81 ff ff       	call   2520 <puts@plt>
    a3ec:	bf ff ff ff ff       	mov    edi,0xffffffff
    a3f1:	e8 8a 84 ff ff       	call   2880 <exit@plt>
    a3f6:	48 8d 3d 63 37 00 00 	lea    rdi,[rip+0x3763]        # db60 <_IO_stdin_used+0x1b60>
    a3fd:	e8 1e 81 ff ff       	call   2520 <puts@plt>
    a402:	bf ff ff ff ff       	mov    edi,0xffffffff
    a407:	e8 74 84 ff ff       	call   2880 <exit@plt>
    a40c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a410:	ba 06 00 00 00       	mov    edx,0x6
    a415:	48 8d 35 6c 37 00 00 	lea    rsi,[rip+0x376c]        # db88 <_IO_stdin_used+0x1b88>
    a41c:	48 89 c7             	mov    rdi,rax
    a41f:	e8 bc 80 ff ff       	call   24e0 <strncmp@plt>
    a424:	85 c0                	test   eax,eax
    a426:	0f 85 9b 00 00 00    	jne    a4c7 <line_parser+0x9f1>
    a42c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a430:	48 89 c7             	mov    rdi,rax
    a433:	e8 07 f6 ff ff       	call   9a3f <sc_strip>
    a438:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a43c:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a442:	3d 80 00 00 00       	cmp    eax,0x80
    a447:	75 58                	jne    a4a1 <line_parser+0x9cb>
    a449:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a44d:	48 83 c0 06          	add    rax,0x6
    a451:	ba ff 00 00 00       	mov    edx,0xff
    a456:	be 00 00 00 00       	mov    esi,0x0
    a45b:	48 89 c7             	mov    rdi,rax
    a45e:	e8 87 f5 ff ff       	call   99ea <numeric_check>
    a463:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
    a466:	83 7d b4 ff          	cmp    DWORD PTR [rbp-0x4c],0xffffffff
    a46a:	75 16                	jne    a482 <line_parser+0x9ac>
    a46c:	48 8d 3d 1c 37 00 00 	lea    rdi,[rip+0x371c]        # db8f <_IO_stdin_used+0x1b8f>
    a473:	e8 a8 80 ff ff       	call   2520 <puts@plt>
    a478:	bf ff ff ff ff       	mov    edi,0xffffffff
    a47d:	e8 fe 83 ff ff       	call   2880 <exit@plt>
    a482:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    a485:	89 c2                	mov    edx,eax
    a487:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a48b:	88 90 72 03 00 00    	mov    BYTE PTR [rax+0x372],dl
    a491:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a495:	c6 80 6e 03 00 00 01 	mov    BYTE PTR [rax+0x36e],0x1
    a49c:	e9 23 05 00 00       	jmp    a9c4 <line_parser+0xeee>
    a4a1:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a4a5:	48 83 c0 20          	add    rax,0x20
    a4a9:	48 89 c6             	mov    rsi,rax
    a4ac:	48 8d 3d f5 36 00 00 	lea    rdi,[rip+0x36f5]        # dba8 <_IO_stdin_used+0x1ba8>
    a4b3:	b8 00 00 00 00       	mov    eax,0x0
    a4b8:	e8 33 81 ff ff       	call   25f0 <printf@plt>
    a4bd:	bf ff ff ff ff       	mov    edi,0xffffffff
    a4c2:	e8 b9 83 ff ff       	call   2880 <exit@plt>
    a4c7:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a4cb:	ba 06 00 00 00       	mov    edx,0x6
    a4d0:	48 8d 35 08 37 00 00 	lea    rsi,[rip+0x3708]        # dbdf <_IO_stdin_used+0x1bdf>
    a4d7:	48 89 c7             	mov    rdi,rax
    a4da:	e8 01 80 ff ff       	call   24e0 <strncmp@plt>
    a4df:	85 c0                	test   eax,eax
    a4e1:	0f 85 86 00 00 00    	jne    a56d <line_parser+0xa97>
    a4e7:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a4eb:	48 89 c7             	mov    rdi,rax
    a4ee:	e8 4c f5 ff ff       	call   9a3f <sc_strip>
    a4f3:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a4f7:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a4fd:	3d 80 00 00 00       	cmp    eax,0x80
    a502:	75 58                	jne    a55c <line_parser+0xa86>
    a504:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a508:	48 83 c0 06          	add    rax,0x6
    a50c:	ba ff 00 00 00       	mov    edx,0xff
    a511:	be 00 00 00 00       	mov    esi,0x0
    a516:	48 89 c7             	mov    rdi,rax
    a519:	e8 cc f4 ff ff       	call   99ea <numeric_check>
    a51e:	89 45 b0             	mov    DWORD PTR [rbp-0x50],eax
    a521:	83 7d b0 ff          	cmp    DWORD PTR [rbp-0x50],0xffffffff
    a525:	75 16                	jne    a53d <line_parser+0xa67>
    a527:	48 8d 3d b8 36 00 00 	lea    rdi,[rip+0x36b8]        # dbe6 <_IO_stdin_used+0x1be6>
    a52e:	e8 ed 7f ff ff       	call   2520 <puts@plt>
    a533:	bf ff ff ff ff       	mov    edi,0xffffffff
    a538:	e8 43 83 ff ff       	call   2880 <exit@plt>
    a53d:	8b 45 b0             	mov    eax,DWORD PTR [rbp-0x50]
    a540:	89 c2                	mov    edx,eax
    a542:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a546:	88 90 73 03 00 00    	mov    BYTE PTR [rax+0x373],dl
    a54c:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a550:	c6 80 6f 03 00 00 01 	mov    BYTE PTR [rax+0x36f],0x1
    a557:	e9 68 04 00 00       	jmp    a9c4 <line_parser+0xeee>
    a55c:	48 8d 3d 9d 36 00 00 	lea    rdi,[rip+0x369d]        # dc00 <_IO_stdin_used+0x1c00>
    a563:	e8 b8 7f ff ff       	call   2520 <puts@plt>
    a568:	e9 57 04 00 00       	jmp    a9c4 <line_parser+0xeee>
    a56d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a571:	ba 08 00 00 00       	mov    edx,0x8
    a576:	48 8d 35 b5 36 00 00 	lea    rsi,[rip+0x36b5]        # dc32 <_IO_stdin_used+0x1c32>
    a57d:	48 89 c7             	mov    rdi,rax
    a580:	e8 5b 7f ff ff       	call   24e0 <strncmp@plt>
    a585:	85 c0                	test   eax,eax
    a587:	0f 85 8c 00 00 00    	jne    a619 <line_parser+0xb43>
    a58d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a591:	48 89 c7             	mov    rdi,rax
    a594:	e8 a6 f4 ff ff       	call   9a3f <sc_strip>
    a599:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a59d:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a5a3:	3d 80 00 00 00       	cmp    eax,0x80
    a5a8:	75 59                	jne    a603 <line_parser+0xb2d>
    a5aa:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a5ae:	48 83 c0 08          	add    rax,0x8
    a5b2:	ba ff ff 00 00       	mov    edx,0xffff
    a5b7:	be 00 00 00 00       	mov    esi,0x0
    a5bc:	48 89 c7             	mov    rdi,rax
    a5bf:	e8 26 f4 ff ff       	call   99ea <numeric_check>
    a5c4:	89 45 ac             	mov    DWORD PTR [rbp-0x54],eax
    a5c7:	83 7d ac ff          	cmp    DWORD PTR [rbp-0x54],0xffffffff
    a5cb:	75 16                	jne    a5e3 <line_parser+0xb0d>
    a5cd:	48 8d 3d 67 36 00 00 	lea    rdi,[rip+0x3667]        # dc3b <_IO_stdin_used+0x1c3b>
    a5d4:	e8 47 7f ff ff       	call   2520 <puts@plt>
    a5d9:	bf ff ff ff ff       	mov    edi,0xffffffff
    a5de:	e8 9d 82 ff ff       	call   2880 <exit@plt>
    a5e3:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
    a5e6:	89 c2                	mov    edx,eax
    a5e8:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a5ec:	66 89 90 76 03 00 00 	mov    WORD PTR [rax+0x376],dx
    a5f3:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a5f7:	c6 80 71 03 00 00 01 	mov    BYTE PTR [rax+0x371],0x1
    a5fe:	e9 c1 03 00 00       	jmp    a9c4 <line_parser+0xeee>
    a603:	48 8d 3d 4e 36 00 00 	lea    rdi,[rip+0x364e]        # dc58 <_IO_stdin_used+0x1c58>
    a60a:	e8 11 7f ff ff       	call   2520 <puts@plt>
    a60f:	bf ff ff ff ff       	mov    edi,0xffffffff
    a614:	e8 67 82 ff ff       	call   2880 <exit@plt>
    a619:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a61d:	ba 09 00 00 00       	mov    edx,0x9
    a622:	48 8d 35 63 36 00 00 	lea    rsi,[rip+0x3663]        # dc8c <_IO_stdin_used+0x1c8c>
    a629:	48 89 c7             	mov    rdi,rax
    a62c:	e8 af 7e ff ff       	call   24e0 <strncmp@plt>
    a631:	85 c0                	test   eax,eax
    a633:	75 7a                	jne    a6af <line_parser+0xbd9>
    a635:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a639:	48 89 c7             	mov    rdi,rax
    a63c:	e8 fe f3 ff ff       	call   9a3f <sc_strip>
    a641:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a645:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a64b:	3d 80 00 00 00       	cmp    eax,0x80
    a650:	0f 85 6e 03 00 00    	jne    a9c4 <line_parser+0xeee>
    a656:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a65a:	48 83 c0 09          	add    rax,0x9
    a65e:	ba ff ff 00 00       	mov    edx,0xffff
    a663:	be 00 00 00 00       	mov    esi,0x0
    a668:	48 89 c7             	mov    rdi,rax
    a66b:	e8 7a f3 ff ff       	call   99ea <numeric_check>
    a670:	89 45 a8             	mov    DWORD PTR [rbp-0x58],eax
    a673:	83 7d a8 ff          	cmp    DWORD PTR [rbp-0x58],0xffffffff
    a677:	75 16                	jne    a68f <line_parser+0xbb9>
    a679:	48 8d 3d 16 36 00 00 	lea    rdi,[rip+0x3616]        # dc96 <_IO_stdin_used+0x1c96>
    a680:	e8 9b 7e ff ff       	call   2520 <puts@plt>
    a685:	bf ff ff ff ff       	mov    edi,0xffffffff
    a68a:	e8 f1 81 ff ff       	call   2880 <exit@plt>
    a68f:	8b 45 a8             	mov    eax,DWORD PTR [rbp-0x58]
    a692:	89 c2                	mov    edx,eax
    a694:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a698:	66 89 90 74 03 00 00 	mov    WORD PTR [rax+0x374],dx
    a69f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a6a3:	c6 80 70 03 00 00 01 	mov    BYTE PTR [rax+0x370],0x1
    a6aa:	e9 15 03 00 00       	jmp    a9c4 <line_parser+0xeee>
    a6af:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a6b3:	ba 04 00 00 00       	mov    edx,0x4
    a6b8:	48 8d 35 f3 35 00 00 	lea    rsi,[rip+0x35f3]        # dcb2 <_IO_stdin_used+0x1cb2>
    a6bf:	48 89 c7             	mov    rdi,rax
    a6c2:	e8 19 7e ff ff       	call   24e0 <strncmp@plt>
    a6c7:	85 c0                	test   eax,eax
    a6c9:	75 64                	jne    a72f <line_parser+0xc59>
    a6cb:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a6cf:	48 89 c7             	mov    rdi,rax
    a6d2:	e8 68 f3 ff ff       	call   9a3f <sc_strip>
    a6d7:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a6db:	48 83 c0 04          	add    rax,0x4
    a6df:	ba ff 00 00 00       	mov    edx,0xff
    a6e4:	be 00 00 00 00       	mov    esi,0x0
    a6e9:	48 89 c7             	mov    rdi,rax
    a6ec:	e8 f9 f2 ff ff       	call   99ea <numeric_check>
    a6f1:	89 45 a4             	mov    DWORD PTR [rbp-0x5c],eax
    a6f4:	83 7d a4 ff          	cmp    DWORD PTR [rbp-0x5c],0xffffffff
    a6f8:	75 16                	jne    a710 <line_parser+0xc3a>
    a6fa:	48 8d 3d b6 35 00 00 	lea    rdi,[rip+0x35b6]        # dcb7 <_IO_stdin_used+0x1cb7>
    a701:	e8 1a 7e ff ff       	call   2520 <puts@plt>
    a706:	bf ff ff ff ff       	mov    edi,0xffffffff
    a70b:	e8 70 81 ff ff       	call   2880 <exit@plt>
    a710:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
    a713:	89 c2                	mov    edx,eax
    a715:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a719:	88 90 6c 03 00 00    	mov    BYTE PTR [rax+0x36c],dl
    a71f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a723:	c6 80 69 03 00 00 01 	mov    BYTE PTR [rax+0x369],0x1
    a72a:	e9 95 02 00 00       	jmp    a9c4 <line_parser+0xeee>
    a72f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a733:	ba 07 00 00 00       	mov    edx,0x7
    a738:	48 8d 35 8a 35 00 00 	lea    rsi,[rip+0x358a]        # dcc9 <_IO_stdin_used+0x1cc9>
    a73f:	48 89 c7             	mov    rdi,rax
    a742:	e8 99 7d ff ff       	call   24e0 <strncmp@plt>
    a747:	85 c0                	test   eax,eax
    a749:	75 6e                	jne    a7b9 <line_parser+0xce3>
    a74b:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a74f:	48 89 c7             	mov    rdi,rax
    a752:	e8 e8 f2 ff ff       	call   9a3f <sc_strip>
    a757:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a75b:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a761:	83 f8 7e             	cmp    eax,0x7e
    a764:	75 3d                	jne    a7a3 <line_parser+0xccd>
    a766:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a76a:	48 89 c7             	mov    rdi,rax
    a76d:	e8 1e 7e ff ff       	call   2590 <strlen@plt>
    a772:	48 8d 50 f8          	lea    rdx,[rax-0x8]
    a776:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a77a:	48 8d 48 07          	lea    rcx,[rax+0x7]
    a77e:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a782:	48 05 53 03 00 00    	add    rax,0x353
    a788:	48 89 ce             	mov    rsi,rcx
    a78b:	48 89 c7             	mov    rdi,rax
    a78e:	e8 3d 7d ff ff       	call   24d0 <strncpy@plt>
    a793:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a797:	c6 80 50 03 00 00 01 	mov    BYTE PTR [rax+0x350],0x1
    a79e:	e9 21 02 00 00       	jmp    a9c4 <line_parser+0xeee>
    a7a3:	48 8d 3d 2e 35 00 00 	lea    rdi,[rip+0x352e]        # dcd8 <_IO_stdin_used+0x1cd8>
    a7aa:	e8 71 7d ff ff       	call   2520 <puts@plt>
    a7af:	bf ff ff ff ff       	mov    edi,0xffffffff
    a7b4:	e8 c7 80 ff ff       	call   2880 <exit@plt>
    a7b9:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a7bd:	ba 04 00 00 00       	mov    edx,0x4
    a7c2:	48 8d 35 40 35 00 00 	lea    rsi,[rip+0x3540]        # dd09 <_IO_stdin_used+0x1d09>
    a7c9:	48 89 c7             	mov    rdi,rax
    a7cc:	e8 0f 7d ff ff       	call   24e0 <strncmp@plt>
    a7d1:	85 c0                	test   eax,eax
    a7d3:	75 78                	jne    a84d <line_parser+0xd77>
    a7d5:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a7d9:	48 89 c7             	mov    rdi,rax
    a7dc:	e8 5e f2 ff ff       	call   9a3f <sc_strip>
    a7e1:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a7e5:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a7eb:	83 f8 7e             	cmp    eax,0x7e
    a7ee:	0f 85 d0 01 00 00    	jne    a9c4 <line_parser+0xeee>
    a7f4:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a7f8:	48 83 c0 04          	add    rax,0x4
    a7fc:	ba ff ff ff ff       	mov    edx,0xffffffff
    a801:	be 00 00 00 00       	mov    esi,0x0
    a806:	48 89 c7             	mov    rdi,rax
    a809:	e8 dc f1 ff ff       	call   99ea <numeric_check>
    a80e:	89 45 a0             	mov    DWORD PTR [rbp-0x60],eax
    a811:	83 7d a0 ff          	cmp    DWORD PTR [rbp-0x60],0xffffffff
    a815:	75 16                	jne    a82d <line_parser+0xd57>
    a817:	48 8d 3d f0 34 00 00 	lea    rdi,[rip+0x34f0]        # dd0e <_IO_stdin_used+0x1d0e>
    a81e:	e8 fd 7c ff ff       	call   2520 <puts@plt>
    a823:	bf ff ff ff ff       	mov    edi,0xffffffff
    a828:	e8 53 80 ff ff       	call   2880 <exit@plt>
    a82d:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    a830:	89 c2                	mov    edx,eax
    a832:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a836:	66 89 90 5c 03 00 00 	mov    WORD PTR [rax+0x35c],dx
    a83d:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a841:	c6 80 51 03 00 00 01 	mov    BYTE PTR [rax+0x351],0x1
    a848:	e9 77 01 00 00       	jmp    a9c4 <line_parser+0xeee>
    a84d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a851:	ba 06 00 00 00       	mov    edx,0x6
    a856:	48 8d 35 c3 34 00 00 	lea    rsi,[rip+0x34c3]        # dd20 <_IO_stdin_used+0x1d20>
    a85d:	48 89 c7             	mov    rdi,rax
    a860:	e8 7b 7c ff ff       	call   24e0 <strncmp@plt>
    a865:	85 c0                	test   eax,eax
    a867:	75 7c                	jne    a8e5 <line_parser+0xe0f>
    a869:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a86d:	48 89 c7             	mov    rdi,rax
    a870:	e8 1b 7d ff ff       	call   2590 <strlen@plt>
    a875:	48 8d 50 f7          	lea    rdx,[rax-0x9]
    a879:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a87d:	48 8d 48 06          	lea    rcx,[rax+0x6]
    a881:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a885:	48 05 10 02 00 00    	add    rax,0x210
    a88b:	48 89 ce             	mov    rsi,rcx
    a88e:	48 89 c7             	mov    rdi,rax
    a891:	e8 3a 7c ff ff       	call   24d0 <strncpy@plt>
    a896:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a89a:	48 8d 88 10 02 00 00 	lea    rcx,[rax+0x210]
    a8a1:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a8a5:	48 05 d0 01 00 00    	add    rax,0x1d0
    a8ab:	ba 00 00 00 00       	mov    edx,0x0
    a8b0:	48 89 ce             	mov    rsi,rcx
    a8b3:	48 89 c7             	mov    rdi,rax
    a8b6:	e8 a5 7d ff ff       	call   2660 <regcomp@plt>
    a8bb:	85 c0                	test   eax,eax
    a8bd:	74 16                	je     a8d5 <line_parser+0xdff>
    a8bf:	48 8d 3d 62 34 00 00 	lea    rdi,[rip+0x3462]        # dd28 <_IO_stdin_used+0x1d28>
    a8c6:	e8 55 7c ff ff       	call   2520 <puts@plt>
    a8cb:	bf ff ff ff ff       	mov    edi,0xffffffff
    a8d0:	e8 ab 7f ff ff       	call   2880 <exit@plt>
    a8d5:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a8d9:	c6 80 90 02 00 00 01 	mov    BYTE PTR [rax+0x290],0x1
    a8e0:	e9 df 00 00 00       	jmp    a9c4 <line_parser+0xeee>
    a8e5:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a8e9:	ba 06 00 00 00       	mov    edx,0x6
    a8ee:	48 8d 35 58 34 00 00 	lea    rsi,[rip+0x3458]        # dd4d <_IO_stdin_used+0x1d4d>
    a8f5:	48 89 c7             	mov    rdi,rax
    a8f8:	e8 e3 7b ff ff       	call   24e0 <strncmp@plt>
    a8fd:	85 c0                	test   eax,eax
    a8ff:	75 2d                	jne    a92e <line_parser+0xe58>
    a901:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a905:	48 89 c7             	mov    rdi,rax
    a908:	e8 32 f1 ff ff       	call   9a3f <sc_strip>
    a90d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a911:	48 8d 48 06          	lea    rcx,[rax+0x6]
    a915:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a919:	ba 01 00 00 00       	mov    edx,0x1
    a91e:	48 89 ce             	mov    rsi,rcx
    a921:	48 89 c7             	mov    rdi,rax
    a924:	e8 94 03 00 00       	call   acbd <d_op_parser>
    a929:	e9 96 00 00 00       	jmp    a9c4 <line_parser+0xeee>
    a92e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a932:	ba 07 00 00 00       	mov    edx,0x7
    a937:	48 8d 35 16 34 00 00 	lea    rsi,[rip+0x3416]        # dd54 <_IO_stdin_used+0x1d54>
    a93e:	48 89 c7             	mov    rdi,rax
    a941:	e8 9a 7b ff ff       	call   24e0 <strncmp@plt>
    a946:	85 c0                	test   eax,eax
    a948:	75 27                	jne    a971 <line_parser+0xe9b>
    a94a:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a94e:	48 89 c7             	mov    rdi,rax
    a951:	e8 e9 f0 ff ff       	call   9a3f <sc_strip>
    a956:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a95a:	48 83 c0 07          	add    rax,0x7
    a95e:	48 89 c7             	mov    rdi,rax
    a961:	e8 ba 7e ff ff       	call   2820 <atoi@plt>
    a966:	89 c2                	mov    edx,eax
    a968:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a96c:	89 50 14             	mov    DWORD PTR [rax+0x14],edx
    a96f:	eb 53                	jmp    a9c4 <line_parser+0xeee>
    a971:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a975:	ba 0b 00 00 00       	mov    edx,0xb
    a97a:	48 8d 35 db 33 00 00 	lea    rsi,[rip+0x33db]        # dd5c <_IO_stdin_used+0x1d5c>
    a981:	48 89 c7             	mov    rdi,rax
    a984:	e8 57 7b ff ff       	call   24e0 <strncmp@plt>
    a989:	85 c0                	test   eax,eax
    a98b:	75 10                	jne    a99d <line_parser+0xec7>
    a98d:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a991:	c7 80 48 03 00 00 01 	mov    DWORD PTR [rax+0x348],0x1
    a998:	00 00 00 
    a99b:	eb 27                	jmp    a9c4 <line_parser+0xeee>
    a99d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a9a1:	ba 09 00 00 00       	mov    edx,0x9
    a9a6:	48 8d 35 bb 33 00 00 	lea    rsi,[rip+0x33bb]        # dd68 <_IO_stdin_used+0x1d68>
    a9ad:	48 89 c7             	mov    rdi,rax
    a9b0:	e8 2b 7b ff ff       	call   24e0 <strncmp@plt>
    a9b5:	85 c0                	test   eax,eax
    a9b7:	75 0b                	jne    a9c4 <line_parser+0xeee>
    a9b9:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a9bd:	c6 80 48 01 00 00 01 	mov    BYTE PTR [rax+0x148],0x1
    a9c4:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    a9c7:	89 45 90             	mov    DWORD PTR [rbp-0x70],eax
    a9ca:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    a9ce:	48 89 c7             	mov    rdi,rax
    a9d1:	e8 ba 7b ff ff       	call   2590 <strlen@plt>
    a9d6:	48 8d 50 ff          	lea    rdx,[rax-0x1]
    a9da:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    a9de:	48 01 d0             	add    rax,rdx
    a9e1:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    a9e4:	3c 29                	cmp    al,0x29
    a9e6:	74 3a                	je     aa22 <line_parser+0xf4c>
    a9e8:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    a9eb:	3b 45 9c             	cmp    eax,DWORD PTR [rbp-0x64]
    a9ee:	7f 0c                	jg     a9fc <line_parser+0xf26>
    a9f0:	8b 45 90             	mov    eax,DWORD PTR [rbp-0x70]
    a9f3:	3b 45 94             	cmp    eax,DWORD PTR [rbp-0x6c]
    a9f6:	0f 8e e9 f1 ff ff    	jle    9be5 <line_parser+0x10f>
    a9fc:	0f b6 45 8f          	movzx  eax,BYTE PTR [rbp-0x71]
    aa00:	83 f0 01             	xor    eax,0x1
    aa03:	84 c0                	test   al,al
    aa05:	74 1c                	je     aa23 <line_parser+0xf4d>
    aa07:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    aa0b:	48 83 c0 20          	add    rax,0x20
    aa0f:	48 b9 55 6e 74 69 74 	movabs rcx,0x64656c7469746e55
    aa16:	6c 65 64 
    aa19:	48 89 08             	mov    QWORD PTR [rax],rcx
    aa1c:	c6 40 08 00          	mov    BYTE PTR [rax+0x8],0x0
    aa20:	eb 01                	jmp    aa23 <line_parser+0xf4d>
    aa22:	90                   	nop
    aa23:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aa27:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    aa2e:	00 00 
    aa30:	74 05                	je     aa37 <line_parser+0xf61>
    aa32:	e8 79 7b ff ff       	call   25b0 <__stack_chk_fail@plt>
    aa37:	c9                   	leave  
    aa38:	c3                   	ret    

000000000000aa39 <rule_processor>:
    aa39:	f3 0f 1e fa          	endbr64 
    aa3d:	55                   	push   rbp
    aa3e:	48 89 e5             	mov    rbp,rsp
    aa41:	48 83 ec 10          	sub    rsp,0x10
    aa45:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    aa4c:	eb 22                	jmp    aa70 <rule_processor+0x37>
    aa4e:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    aa51:	48 98                	cdqe   
    aa53:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    aa5a:	48 8d 15 3f 66 00 00 	lea    rdx,[rip+0x663f]        # 110a0 <rules>
    aa61:	48 01 d0             	add    rax,rdx
    aa64:	48 89 c7             	mov    rdi,rax
    aa67:	e8 13 00 00 00       	call   aa7f <process_rule>
    aa6c:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    aa70:	8b 05 9e 65 00 00    	mov    eax,DWORD PTR [rip+0x659e]        # 11014 <num_rules>
    aa76:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    aa79:	7e d3                	jle    aa4e <rule_processor+0x15>
    aa7b:	90                   	nop
    aa7c:	90                   	nop
    aa7d:	c9                   	leave  
    aa7e:	c3                   	ret    

000000000000aa7f <process_rule>:
    aa7f:	f3 0f 1e fa          	endbr64 
    aa83:	55                   	push   rbp
    aa84:	48 89 e5             	mov    rbp,rsp
    aa87:	41 57                	push   r15
    aa89:	41 56                	push   r14
    aa8b:	41 54                	push   r12
    aa8d:	53                   	push   rbx
    aa8e:	48 83 ec 40          	sub    rsp,0x40
    aa92:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    aa96:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    aa9d:	00 00 
    aa9f:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    aaa3:	31 c0                	xor    eax,eax
    aaa5:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    aaa9:	0f b6 80 90 02 00 00 	movzx  eax,BYTE PTR [rax+0x290]
    aab0:	83 f0 01             	xor    eax,0x1
    aab3:	84 c0                	test   al,al
    aab5:	0f 84 e0 01 00 00    	je     ac9b <process_rule+0x21c>
    aabb:	48 89 e0             	mov    rax,rsp
    aabe:	49 89 c4             	mov    r12,rax
    aac1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    aac5:	48 83 c0 40          	add    rax,0x40
    aac9:	48 89 c7             	mov    rdi,rax
    aacc:	e8 bf 7a ff ff       	call   2590 <strlen@plt>
    aad1:	48 83 c0 01          	add    rax,0x1
    aad5:	48 01 c0             	add    rax,rax
    aad8:	48 89 c2             	mov    rdx,rax
    aadb:	48 83 ea 01          	sub    rdx,0x1
    aadf:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    aae3:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    aae7:	48 c7 45 a8 00 00 00 	mov    QWORD PTR [rbp-0x58],0x0
    aaee:	00 
    aaef:	49 89 c6             	mov    r14,rax
    aaf2:	41 bf 00 00 00 00    	mov    r15d,0x0
    aaf8:	ba 10 00 00 00       	mov    edx,0x10
    aafd:	48 83 ea 01          	sub    rdx,0x1
    ab01:	48 01 d0             	add    rax,rdx
    ab04:	be 10 00 00 00       	mov    esi,0x10
    ab09:	ba 00 00 00 00       	mov    edx,0x0
    ab0e:	48 f7 f6             	div    rsi
    ab11:	48 6b c0 10          	imul   rax,rax,0x10
    ab15:	48 89 c2             	mov    rdx,rax
    ab18:	48 81 e2 00 f0 ff ff 	and    rdx,0xfffffffffffff000
    ab1f:	48 89 e3             	mov    rbx,rsp
    ab22:	48 29 d3             	sub    rbx,rdx
    ab25:	48 89 da             	mov    rdx,rbx
    ab28:	48 39 d4             	cmp    rsp,rdx
    ab2b:	74 12                	je     ab3f <process_rule+0xc0>
    ab2d:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    ab34:	48 83 8c 24 f8 0f 00 	or     QWORD PTR [rsp+0xff8],0x0
    ab3b:	00 00 
    ab3d:	eb e9                	jmp    ab28 <process_rule+0xa9>
    ab3f:	48 89 c2             	mov    rdx,rax
    ab42:	81 e2 ff 0f 00 00    	and    edx,0xfff
    ab48:	48 29 d4             	sub    rsp,rdx
    ab4b:	48 89 c2             	mov    rdx,rax
    ab4e:	81 e2 ff 0f 00 00    	and    edx,0xfff
    ab54:	48 85 d2             	test   rdx,rdx
    ab57:	74 10                	je     ab69 <process_rule+0xea>
    ab59:	25 ff 0f 00 00       	and    eax,0xfff
    ab5e:	48 83 e8 08          	sub    rax,0x8
    ab62:	48 01 e0             	add    rax,rsp
    ab65:	48 83 08 00          	or     QWORD PTR [rax],0x0
    ab69:	48 89 e0             	mov    rax,rsp
    ab6c:	48 83 c0 00          	add    rax,0x0
    ab70:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    ab74:	c7 45 c0 00 00 00 00 	mov    DWORD PTR [rbp-0x40],0x0
    ab7b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ab7f:	48 8d 50 40          	lea    rdx,[rax+0x40]
    ab83:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ab87:	48 05 c8 02 00 00    	add    rax,0x2c8
    ab8d:	48 89 d6             	mov    rsi,rdx
    ab90:	48 89 c7             	mov    rdi,rax
    ab93:	e8 58 79 ff ff       	call   24f0 <strcpy@plt>
    ab98:	c7 45 c4 00 00 00 00 	mov    DWORD PTR [rbp-0x3c],0x0
    ab9f:	e9 a4 00 00 00       	jmp    ac48 <process_rule+0x1c9>
    aba4:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    aba8:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    abab:	48 98                	cdqe   
    abad:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    abb2:	3c 7c                	cmp    al,0x7c
    abb4:	75 18                	jne    abce <process_rule+0x14f>
    abb6:	83 7d c0 00          	cmp    DWORD PTR [rbp-0x40],0x0
    abba:	74 09                	je     abc5 <process_rule+0x146>
    abbc:	c7 45 c0 00 00 00 00 	mov    DWORD PTR [rbp-0x40],0x0
    abc3:	eb 7f                	jmp    ac44 <process_rule+0x1c5>
    abc5:	c7 45 c0 01 00 00 00 	mov    DWORD PTR [rbp-0x40],0x1
    abcc:	eb 76                	jmp    ac44 <process_rule+0x1c5>
    abce:	83 7d c0 01          	cmp    DWORD PTR [rbp-0x40],0x1
    abd2:	75 3a                	jne    ac0e <process_rule+0x18f>
    abd4:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    abd8:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    abdb:	48 98                	cdqe   
    abdd:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    abe2:	0f be c0             	movsx  eax,al
    abe5:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
    abe8:	48 63 d2             	movsxd rdx,edx
    abeb:	48 8d 4a ff          	lea    rcx,[rdx-0x1]
    abef:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    abf3:	48 01 d1             	add    rcx,rdx
    abf6:	89 c2                	mov    edx,eax
    abf8:	48 8d 35 73 31 00 00 	lea    rsi,[rip+0x3173]        # dd72 <_IO_stdin_used+0x1d72>
    abff:	48 89 cf             	mov    rdi,rcx
    ac02:	b8 00 00 00 00       	mov    eax,0x0
    ac07:	e8 64 7c ff ff       	call   2870 <sprintf@plt>
    ac0c:	eb 36                	jmp    ac44 <process_rule+0x1c5>
    ac0e:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    ac12:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    ac15:	48 98                	cdqe   
    ac17:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    ac1c:	0f be c0             	movsx  eax,al
    ac1f:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
    ac22:	01 d2                	add    edx,edx
    ac24:	48 63 ca             	movsxd rcx,edx
    ac27:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    ac2b:	48 01 d1             	add    rcx,rdx
    ac2e:	89 c2                	mov    edx,eax
    ac30:	48 8d 35 3e 31 00 00 	lea    rsi,[rip+0x313e]        # dd75 <_IO_stdin_used+0x1d75>
    ac37:	48 89 cf             	mov    rdi,rcx
    ac3a:	b8 00 00 00 00       	mov    eax,0x0
    ac3f:	e8 2c 7c ff ff       	call   2870 <sprintf@plt>
    ac44:	83 45 c4 01          	add    DWORD PTR [rbp-0x3c],0x1
    ac48:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    ac4b:	48 63 d8             	movsxd rbx,eax
    ac4e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ac52:	48 83 c0 40          	add    rax,0x40
    ac56:	48 89 c7             	mov    rdi,rax
    ac59:	e8 32 79 ff ff       	call   2590 <strlen@plt>
    ac5e:	48 39 c3             	cmp    rbx,rax
    ac61:	0f 82 3d ff ff ff    	jb     aba4 <process_rule+0x125>
    ac67:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ac6b:	48 83 c0 40          	add    rax,0x40
    ac6f:	ba ff 00 00 00       	mov    edx,0xff
    ac74:	be 00 00 00 00       	mov    esi,0x0
    ac79:	48 89 c7             	mov    rdi,rax
    ac7c:	e8 af 79 ff ff       	call   2630 <memset@plt>
    ac81:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ac85:	48 8d 50 40          	lea    rdx,[rax+0x40]
    ac89:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    ac8d:	48 89 c6             	mov    rsi,rax
    ac90:	48 89 d7             	mov    rdi,rdx
    ac93:	e8 58 78 ff ff       	call   24f0 <strcpy@plt>
    ac98:	4c 89 e4             	mov    rsp,r12
    ac9b:	90                   	nop
    ac9c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    aca0:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    aca7:	00 00 
    aca9:	74 05                	je     acb0 <process_rule+0x231>
    acab:	e8 00 79 ff ff       	call   25b0 <__stack_chk_fail@plt>
    acb0:	48 8d 65 e0          	lea    rsp,[rbp-0x20]
    acb4:	5b                   	pop    rbx
    acb5:	41 5c                	pop    r12
    acb7:	41 5e                	pop    r14
    acb9:	41 5f                	pop    r15
    acbb:	5d                   	pop    rbp
    acbc:	c3                   	ret    

000000000000acbd <d_op_parser>:
    acbd:	f3 0f 1e fa          	endbr64 
    acc1:	55                   	push   rbp
    acc2:	48 89 e5             	mov    rbp,rsp
    acc5:	48 83 ec 20          	sub    rsp,0x20
    acc9:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    accd:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    acd1:	89 55 ec             	mov    DWORD PTR [rbp-0x14],edx
    acd4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    acd8:	48 89 c7             	mov    rdi,rax
    acdb:	e8 9c e9 ff ff       	call   967c <isdigit>
    ace0:	84 c0                	test   al,al
    ace2:	74 23                	je     ad07 <d_op_parser+0x4a>
    ace4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ace8:	c7 40 1c a1 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa1
    acef:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    acf3:	48 89 c7             	mov    rdi,rax
    acf6:	e8 25 7b ff ff       	call   2820 <atoi@plt>
    acfb:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    acff:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    ad02:	e9 5f 01 00 00       	jmp    ae66 <d_op_parser+0x1a9>
    ad07:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad0b:	0f b6 10             	movzx  edx,BYTE PTR [rax]
    ad0e:	0f b6 05 67 30 00 00 	movzx  eax,BYTE PTR [rip+0x3067]        # dd7c <_IO_stdin_used+0x1d7c>
    ad15:	0f b6 d2             	movzx  edx,dl
    ad18:	0f b6 c0             	movzx  eax,al
    ad1b:	29 c2                	sub    edx,eax
    ad1d:	89 d0                	mov    eax,edx
    ad1f:	85 c0                	test   eax,eax
    ad21:	75 27                	jne    ad4a <d_op_parser+0x8d>
    ad23:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad27:	c7 40 1c a4 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa4
    ad2e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad32:	48 83 c0 01          	add    rax,0x1
    ad36:	48 89 c7             	mov    rdi,rax
    ad39:	e8 e2 7a ff ff       	call   2820 <atoi@plt>
    ad3e:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ad42:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    ad45:	e9 1c 01 00 00       	jmp    ae66 <d_op_parser+0x1a9>
    ad4a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad4e:	0f b6 10             	movzx  edx,BYTE PTR [rax]
    ad51:	0f b6 05 26 30 00 00 	movzx  eax,BYTE PTR [rip+0x3026]        # dd7e <_IO_stdin_used+0x1d7e>
    ad58:	0f b6 d2             	movzx  edx,dl
    ad5b:	0f b6 c0             	movzx  eax,al
    ad5e:	29 c2                	sub    edx,eax
    ad60:	89 d0                	mov    eax,edx
    ad62:	85 c0                	test   eax,eax
    ad64:	75 27                	jne    ad8d <d_op_parser+0xd0>
    ad66:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad6a:	c7 40 1c a2 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa2
    ad71:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad75:	48 83 c0 01          	add    rax,0x1
    ad79:	48 89 c7             	mov    rdi,rax
    ad7c:	e8 9f 7a ff ff       	call   2820 <atoi@plt>
    ad81:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ad85:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    ad88:	e9 d9 00 00 00       	jmp    ae66 <d_op_parser+0x1a9>
    ad8d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad91:	0f b6 10             	movzx  edx,BYTE PTR [rax]
    ad94:	0f b6 05 e5 2f 00 00 	movzx  eax,BYTE PTR [rip+0x2fe5]        # dd80 <_IO_stdin_used+0x1d80>
    ad9b:	0f b6 d2             	movzx  edx,dl
    ad9e:	0f b6 c0             	movzx  eax,al
    ada1:	29 c2                	sub    edx,eax
    ada3:	89 d0                	mov    eax,edx
    ada5:	85 c0                	test   eax,eax
    ada7:	75 27                	jne    add0 <d_op_parser+0x113>
    ada9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    adad:	c7 40 1c a6 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa6
    adb4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    adb8:	48 83 c0 01          	add    rax,0x1
    adbc:	48 89 c7             	mov    rdi,rax
    adbf:	e8 5c 7a ff ff       	call   2820 <atoi@plt>
    adc4:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    adc8:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    adcb:	e9 96 00 00 00       	jmp    ae66 <d_op_parser+0x1a9>
    add0:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    add4:	ba 02 00 00 00       	mov    edx,0x2
    add9:	48 8d 35 a2 2f 00 00 	lea    rsi,[rip+0x2fa2]        # dd82 <_IO_stdin_used+0x1d82>
    ade0:	48 89 c7             	mov    rdi,rax
    ade3:	e8 f8 76 ff ff       	call   24e0 <strncmp@plt>
    ade8:	85 c0                	test   eax,eax
    adea:	75 24                	jne    ae10 <d_op_parser+0x153>
    adec:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    adf0:	c7 40 1c a3 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa3
    adf7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    adfb:	48 83 c0 02          	add    rax,0x2
    adff:	48 89 c7             	mov    rdi,rax
    ae02:	e8 19 7a ff ff       	call   2820 <atoi@plt>
    ae07:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ae0b:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    ae0e:	eb 56                	jmp    ae66 <d_op_parser+0x1a9>
    ae10:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ae14:	ba 02 00 00 00       	mov    edx,0x2
    ae19:	48 8d 35 65 2f 00 00 	lea    rsi,[rip+0x2f65]        # dd85 <_IO_stdin_used+0x1d85>
    ae20:	48 89 c7             	mov    rdi,rax
    ae23:	e8 b8 76 ff ff       	call   24e0 <strncmp@plt>
    ae28:	85 c0                	test   eax,eax
    ae2a:	75 24                	jne    ae50 <d_op_parser+0x193>
    ae2c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae30:	c7 40 1c a5 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa5
    ae37:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ae3b:	48 83 c0 02          	add    rax,0x2
    ae3f:	48 89 c7             	mov    rdi,rax
    ae42:	e8 d9 79 ff ff       	call   2820 <atoi@plt>
    ae47:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ae4b:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    ae4e:	eb 16                	jmp    ae66 <d_op_parser+0x1a9>
    ae50:	48 8d 3d 31 2f 00 00 	lea    rdi,[rip+0x2f31]        # dd88 <_IO_stdin_used+0x1d88>
    ae57:	e8 c4 76 ff ff       	call   2520 <puts@plt>
    ae5c:	bf ff ff ff ff       	mov    edi,0xffffffff
    ae61:	e8 1a 7a ff ff       	call   2880 <exit@plt>
    ae66:	c9                   	leave  
    ae67:	c3                   	ret    

000000000000ae68 <d_engine>:
    ae68:	f3 0f 1e fa          	endbr64 
    ae6c:	55                   	push   rbp
    ae6d:	48 89 e5             	mov    rbp,rsp
    ae70:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    ae74:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    ae78:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae7c:	8b 40 1c             	mov    eax,DWORD PTR [rax+0x1c]
    ae7f:	83 f8 ff             	cmp    eax,0xffffffff
    ae82:	75 0a                	jne    ae8e <d_engine+0x26>
    ae84:	b8 01 00 00 00       	mov    eax,0x1
    ae89:	e9 ea 00 00 00       	jmp    af78 <d_engine+0x110>
    ae8e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae92:	8b 40 1c             	mov    eax,DWORD PTR [rax+0x1c]
    ae95:	2d a1 00 00 00       	sub    eax,0xa1
    ae9a:	83 f8 05             	cmp    eax,0x5
    ae9d:	0f 87 d0 00 00 00    	ja     af73 <d_engine+0x10b>
    aea3:	89 c0                	mov    eax,eax
    aea5:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    aeac:	00 
    aead:	48 8d 05 ec 2e 00 00 	lea    rax,[rip+0x2eec]        # dda0 <_IO_stdin_used+0x1da0>
    aeb4:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    aeb7:	48 98                	cdqe   
    aeb9:	48 8d 15 e0 2e 00 00 	lea    rdx,[rip+0x2ee0]        # dda0 <_IO_stdin_used+0x1da0>
    aec0:	48 01 d0             	add    rax,rdx
    aec3:	3e ff e0             	notrack jmp rax
    aec6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aeca:	8b 50 18             	mov    edx,DWORD PTR [rax+0x18]
    aecd:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    aed1:	8b 40 34             	mov    eax,DWORD PTR [rax+0x34]
    aed4:	39 c2                	cmp    edx,eax
    aed6:	0f 85 87 00 00 00    	jne    af63 <d_engine+0xfb>
    aedc:	b8 01 00 00 00       	mov    eax,0x1
    aee1:	e9 92 00 00 00       	jmp    af78 <d_engine+0x110>
    aee6:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    aeea:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    aeed:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aef1:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    aef4:	39 c2                	cmp    edx,eax
    aef6:	76 6e                	jbe    af66 <d_engine+0xfe>
    aef8:	b8 01 00 00 00       	mov    eax,0x1
    aefd:	eb 79                	jmp    af78 <d_engine+0x110>
    aeff:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    af03:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    af06:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    af0a:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    af0d:	39 c2                	cmp    edx,eax
    af0f:	72 58                	jb     af69 <d_engine+0x101>
    af11:	b8 01 00 00 00       	mov    eax,0x1
    af16:	eb 60                	jmp    af78 <d_engine+0x110>
    af18:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    af1c:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    af1f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    af23:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    af26:	39 c2                	cmp    edx,eax
    af28:	73 42                	jae    af6c <d_engine+0x104>
    af2a:	b8 01 00 00 00       	mov    eax,0x1
    af2f:	eb 47                	jmp    af78 <d_engine+0x110>
    af31:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    af35:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    af38:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    af3c:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    af3f:	39 c2                	cmp    edx,eax
    af41:	77 2c                	ja     af6f <d_engine+0x107>
    af43:	b8 01 00 00 00       	mov    eax,0x1
    af48:	eb 2e                	jmp    af78 <d_engine+0x110>
    af4a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    af4e:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    af51:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    af55:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    af58:	39 c2                	cmp    edx,eax
    af5a:	74 16                	je     af72 <d_engine+0x10a>
    af5c:	b8 01 00 00 00       	mov    eax,0x1
    af61:	eb 15                	jmp    af78 <d_engine+0x110>
    af63:	90                   	nop
    af64:	eb 0d                	jmp    af73 <d_engine+0x10b>
    af66:	90                   	nop
    af67:	eb 0a                	jmp    af73 <d_engine+0x10b>
    af69:	90                   	nop
    af6a:	eb 07                	jmp    af73 <d_engine+0x10b>
    af6c:	90                   	nop
    af6d:	eb 04                	jmp    af73 <d_engine+0x10b>
    af6f:	90                   	nop
    af70:	eb 01                	jmp    af73 <d_engine+0x10b>
    af72:	90                   	nop
    af73:	b8 00 00 00 00       	mov    eax,0x0
    af78:	5d                   	pop    rbp
    af79:	c3                   	ret    

000000000000af7a <homenet_toi>:
    af7a:	f3 0f 1e fa          	endbr64 
    af7e:	55                   	push   rbp
    af7f:	48 89 e5             	mov    rbp,rsp
    af82:	53                   	push   rbx
    af83:	48 83 ec 38          	sub    rsp,0x38
    af87:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    af8b:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    af92:	00 00 
    af94:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    af98:	31 c0                	xor    eax,eax
    af9a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    af9e:	48 8d 35 13 2e 00 00 	lea    rsi,[rip+0x2e13]        # ddb8 <_IO_stdin_used+0x1db8>
    afa5:	48 89 c7             	mov    rdi,rax
    afa8:	e8 23 78 ff ff       	call   27d0 <strtok@plt>
    afad:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    afb1:	eb 4c                	jmp    afff <homenet_toi+0x85>
    afb3:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    afb7:	48 89 c7             	mov    rdi,rax
    afba:	e8 61 78 ff ff       	call   2820 <atoi@plt>
    afbf:	89 c3                	mov    ebx,eax
    afc1:	48 8d 45 df          	lea    rax,[rbp-0x21]
    afc5:	48 89 c7             	mov    rdi,rax
    afc8:	e8 c3 75 ff ff       	call   2590 <strlen@plt>
    afcd:	48 8d 55 df          	lea    rdx,[rbp-0x21]
    afd1:	48 01 d0             	add    rax,rdx
    afd4:	89 da                	mov    edx,ebx
    afd6:	48 8d 35 dd 2d 00 00 	lea    rsi,[rip+0x2ddd]        # ddba <_IO_stdin_used+0x1dba>
    afdd:	48 89 c7             	mov    rdi,rax
    afe0:	b8 00 00 00 00       	mov    eax,0x0
    afe5:	e8 86 78 ff ff       	call   2870 <sprintf@plt>
    afea:	48 8d 35 c7 2d 00 00 	lea    rsi,[rip+0x2dc7]        # ddb8 <_IO_stdin_used+0x1db8>
    aff1:	bf 00 00 00 00       	mov    edi,0x0
    aff6:	e8 d5 77 ff ff       	call   27d0 <strtok@plt>
    affb:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    afff:	48 83 7d d0 00       	cmp    QWORD PTR [rbp-0x30],0x0
    b004:	75 ad                	jne    afb3 <homenet_toi+0x39>
    b006:	48 8d 45 df          	lea    rax,[rbp-0x21]
    b00a:	ba 10 00 00 00       	mov    edx,0x10
    b00f:	be 00 00 00 00       	mov    esi,0x0
    b014:	48 89 c7             	mov    rdi,rax
    b017:	e8 c4 76 ff ff       	call   26e0 <strtol@plt>
    b01c:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    b020:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
    b027:	00 00 
    b029:	74 05                	je     b030 <homenet_toi+0xb6>
    b02b:	e8 80 75 ff ff       	call   25b0 <__stack_chk_fail@plt>
    b030:	48 83 c4 38          	add    rsp,0x38
    b034:	5b                   	pop    rbx
    b035:	5d                   	pop    rbp
    b036:	c3                   	ret    

000000000000b037 <tcp_check_sum_passed>:
    b037:	f3 0f 1e fa          	endbr64 
    b03b:	55                   	push   rbp
    b03c:	48 89 e5             	mov    rbp,rsp
    b03f:	41 54                	push   r12
    b041:	53                   	push   rbx
    b042:	48 83 ec 30          	sub    rsp,0x30
    b046:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    b04a:	48 89 75 c0          	mov    QWORD PTR [rbp-0x40],rsi
    b04e:	bb 00 00 00 00       	mov    ebx,0x0
    b053:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    b057:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    b05b:	0f b7 c0             	movzx  eax,ax
    b05e:	89 c7                	mov    edi,eax
    b060:	e8 1b 77 ff ff       	call   2780 <ntohs@plt>
    b065:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    b069:	0f b6 12             	movzx  edx,BYTE PTR [rdx]
    b06c:	83 e2 0f             	and    edx,0xf
    b06f:	0f b6 d2             	movzx  edx,dl
    b072:	c1 e2 02             	shl    edx,0x2
    b075:	29 d0                	sub    eax,edx
    b077:	66 89 45 de          	mov    WORD PTR [rbp-0x22],ax
    b07b:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b07f:	0f b7 40 10          	movzx  eax,WORD PTR [rax+0x10]
    b083:	0f b7 c0             	movzx  eax,ax
    b086:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    b08a:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b08e:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    b092:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b096:	66 c7 40 10 00 00    	mov    WORD PTR [rax+0x10],0x0
    b09c:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    b0a0:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    b0a3:	c1 e8 10             	shr    eax,0x10
    b0a6:	89 c0                	mov    eax,eax
    b0a8:	0f b7 c0             	movzx  eax,ax
    b0ab:	48 01 c3             	add    rbx,rax
    b0ae:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    b0b2:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    b0b5:	89 c0                	mov    eax,eax
    b0b7:	0f b7 c0             	movzx  eax,ax
    b0ba:	48 01 c3             	add    rbx,rax
    b0bd:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    b0c1:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    b0c4:	c1 e8 10             	shr    eax,0x10
    b0c7:	89 c0                	mov    eax,eax
    b0c9:	0f b7 c0             	movzx  eax,ax
    b0cc:	48 01 c3             	add    rbx,rax
    b0cf:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    b0d3:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    b0d6:	89 c0                	mov    eax,eax
    b0d8:	0f b7 c0             	movzx  eax,ax
    b0db:	48 01 c3             	add    rbx,rax
    b0de:	bf 06 00 00 00       	mov    edi,0x6
    b0e3:	e8 d8 74 ff ff       	call   25c0 <htons@plt>
    b0e8:	0f b7 c0             	movzx  eax,ax
    b0eb:	48 01 c3             	add    rbx,rax
    b0ee:	0f b7 45 de          	movzx  eax,WORD PTR [rbp-0x22]
    b0f2:	89 c7                	mov    edi,eax
    b0f4:	e8 c7 74 ff ff       	call   25c0 <htons@plt>
    b0f9:	0f b7 c0             	movzx  eax,ax
    b0fc:	48 01 c3             	add    rbx,rax
    b0ff:	eb 1a                	jmp    b11b <tcp_check_sum_passed+0xe4>
    b101:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b105:	48 8d 50 14          	lea    rdx,[rax+0x14]
    b109:	48 89 55 c0          	mov    QWORD PTR [rbp-0x40],rdx
    b10d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b110:	0f b6 c0             	movzx  eax,al
    b113:	48 01 c3             	add    rbx,rax
    b116:	66 83 6d de 02       	sub    WORD PTR [rbp-0x22],0x2
    b11b:	66 83 7d de 01       	cmp    WORD PTR [rbp-0x22],0x1
    b120:	77 df                	ja     b101 <tcp_check_sum_passed+0xca>
    b122:	66 83 7d de 00       	cmp    WORD PTR [rbp-0x22],0x0
    b127:	74 1d                	je     b146 <tcp_check_sum_passed+0x10f>
    b129:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b12d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b130:	0f b6 c0             	movzx  eax,al
    b133:	48 01 c3             	add    rbx,rax
    b136:	eb 0e                	jmp    b146 <tcp_check_sum_passed+0x10f>
    b138:	0f b7 c3             	movzx  eax,bx
    b13b:	48 c1 eb 10          	shr    rbx,0x10
    b13f:	48 89 da             	mov    rdx,rbx
    b142:	48 8d 1c 10          	lea    rbx,[rax+rdx*1]
    b146:	48 89 d8             	mov    rax,rbx
    b149:	48 c1 e8 10          	shr    rax,0x10
    b14d:	48 85 c0             	test   rax,rax
    b150:	75 e6                	jne    b138 <tcp_check_sum_passed+0x101>
    b152:	48 f7 d3             	not    rbx
    b155:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b159:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    b15d:	66 89 50 10          	mov    WORD PTR [rax+0x10],dx
    b161:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b165:	0f b7 40 10          	movzx  eax,WORD PTR [rax+0x10]
    b169:	0f b7 c0             	movzx  eax,ax
    b16c:	89 c7                	mov    edi,eax
    b16e:	e8 0d 76 ff ff       	call   2780 <ntohs@plt>
    b173:	44 0f b7 e0          	movzx  r12d,ax
    b177:	89 d8                	mov    eax,ebx
    b179:	0f b7 c0             	movzx  eax,ax
    b17c:	89 c7                	mov    edi,eax
    b17e:	e8 fd 75 ff ff       	call   2780 <ntohs@plt>
    b183:	0f b7 c0             	movzx  eax,ax
    b186:	44 89 e2             	mov    edx,r12d
    b189:	89 c6                	mov    esi,eax
    b18b:	48 8d 3d 2d 2c 00 00 	lea    rdi,[rip+0x2c2d]        # ddbf <_IO_stdin_used+0x1dbf>
    b192:	b8 00 00 00 00       	mov    eax,0x0
    b197:	e8 54 74 ff ff       	call   25f0 <printf@plt>
    b19c:	89 d8                	mov    eax,ebx
    b19e:	0f b7 c0             	movzx  eax,ax
    b1a1:	89 c7                	mov    edi,eax
    b1a3:	e8 d8 75 ff ff       	call   2780 <ntohs@plt>
    b1a8:	89 c3                	mov    ebx,eax
    b1aa:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    b1ae:	0f b7 c0             	movzx  eax,ax
    b1b1:	89 c7                	mov    edi,eax
    b1b3:	e8 c8 75 ff ff       	call   2780 <ntohs@plt>
    b1b8:	66 39 c3             	cmp    bx,ax
    b1bb:	75 07                	jne    b1c4 <tcp_check_sum_passed+0x18d>
    b1bd:	b8 01 00 00 00       	mov    eax,0x1
    b1c2:	eb 05                	jmp    b1c9 <tcp_check_sum_passed+0x192>
    b1c4:	b8 00 00 00 00       	mov    eax,0x0
    b1c9:	48 83 c4 30          	add    rsp,0x30
    b1cd:	5b                   	pop    rbx
    b1ce:	41 5c                	pop    r12
    b1d0:	5d                   	pop    rbp
    b1d1:	c3                   	ret    

000000000000b1d2 <run_hello_script>:
    b1d2:	f3 0f 1e fa          	endbr64 
    b1d6:	55                   	push   rbp
    b1d7:	48 89 e5             	mov    rbp,rsp
    b1da:	48 83 ec 10          	sub    rsp,0x10
    b1de:	e8 3d 75 ff ff       	call   2720 <luaL_newstate@plt>
    b1e3:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b1e7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b1eb:	48 89 c7             	mov    rdi,rax
    b1ee:	e8 fd 75 ff ff       	call   27f0 <luaL_openlibs@plt>
    b1f3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b1f7:	ba 00 00 00 00       	mov    edx,0x0
    b1fc:	48 8d 35 cd 2b 00 00 	lea    rsi,[rip+0x2bcd]        # ddd0 <_IO_stdin_used+0x1dd0>
    b203:	48 89 c7             	mov    rdi,rax
    b206:	e8 85 75 ff ff       	call   2790 <luaL_loadfilex@plt>
    b20b:	85 c0                	test   eax,eax
    b20d:	75 2b                	jne    b23a <run_hello_script+0x68>
    b20f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b213:	41 b9 00 00 00 00    	mov    r9d,0x0
    b219:	41 b8 00 00 00 00    	mov    r8d,0x0
    b21f:	b9 00 00 00 00       	mov    ecx,0x0
    b224:	ba ff ff ff ff       	mov    edx,0xffffffff
    b229:	be 00 00 00 00       	mov    esi,0x0
    b22e:	48 89 c7             	mov    rdi,rax
    b231:	e8 2a 75 ff ff       	call   2760 <lua_pcallk@plt>
    b236:	85 c0                	test   eax,eax
    b238:	74 07                	je     b241 <run_hello_script+0x6f>
    b23a:	b8 01 00 00 00       	mov    eax,0x1
    b23f:	eb 05                	jmp    b246 <run_hello_script+0x74>
    b241:	b8 00 00 00 00       	mov    eax,0x0
    b246:	85 c0                	test   eax,eax
    b248:	75 1e                	jne    b268 <run_hello_script+0x96>
    b24a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b24e:	48 89 c7             	mov    rdi,rax
    b251:	e8 ba 72 ff ff       	call   2510 <lua_gettop@plt>
    b256:	f7 d0                	not    eax
    b258:	89 c2                	mov    edx,eax
    b25a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b25e:	89 d6                	mov    esi,edx
    b260:	48 89 c7             	mov    rdi,rax
    b263:	e8 98 72 ff ff       	call   2500 <lua_settop@plt>
    b268:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b26c:	48 89 c7             	mov    rdi,rax
    b26f:	e8 1c 74 ff ff       	call   2690 <lua_close@plt>
    b274:	90                   	nop
    b275:	c9                   	leave  
    b276:	c3                   	ret    

000000000000b277 <collect_scripts>:
    b277:	f3 0f 1e fa          	endbr64 
    b27b:	55                   	push   rbp
    b27c:	48 89 e5             	mov    rbp,rsp
    b27f:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    b286:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b28d:	00 00 
    b28f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b293:	31 c0                	xor    eax,eax
    b295:	48 8d 35 52 2b 00 00 	lea    rsi,[rip+0x2b52]        # ddee <_IO_stdin_used+0x1dee>
    b29c:	48 8d 3d 4d 2b 00 00 	lea    rdi,[rip+0x2b4d]        # ddf0 <_IO_stdin_used+0x1df0>
    b2a3:	e8 08 75 ff ff       	call   27b0 <fopen@plt>
    b2a8:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
    b2ac:	48 83 7d 80 00       	cmp    QWORD PTR [rbp-0x80],0x0
    b2b1:	75 16                	jne    b2c9 <collect_scripts+0x52>
    b2b3:	48 8d 3d 4e 2b 00 00 	lea    rdi,[rip+0x2b4e]        # de08 <_IO_stdin_used+0x1e08>
    b2ba:	e8 61 72 ff ff       	call   2520 <puts@plt>
    b2bf:	bf ff ff ff ff       	mov    edi,0xffffffff
    b2c4:	e8 b7 75 ff ff       	call   2880 <exit@plt>
    b2c9:	48 c7 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],0x0
    b2d0:	00 00 00 00 
    b2d4:	48 8d 45 90          	lea    rax,[rbp-0x70]
    b2d8:	ba 00 00 00 00       	mov    edx,0x0
    b2dd:	48 8d 35 66 2b 00 00 	lea    rsi,[rip+0x2b66]        # de4a <_IO_stdin_used+0x1e4a>
    b2e4:	48 89 c7             	mov    rdi,rax
    b2e7:	e8 74 73 ff ff       	call   2660 <regcomp@plt>
    b2ec:	e9 86 00 00 00       	jmp    b377 <collect_scripts+0x100>
    b2f1:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b2f8:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b2fb:	3c 23                	cmp    al,0x23
    b2fd:	75 02                	jne    b301 <collect_scripts+0x8a>
    b2ff:	eb 76                	jmp    b377 <collect_scripts+0x100>
    b301:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b308:	ba 0e 00 00 00       	mov    edx,0xe
    b30d:	48 8d 35 40 2b 00 00 	lea    rsi,[rip+0x2b40]        # de54 <_IO_stdin_used+0x1e54>
    b314:	48 89 c7             	mov    rdi,rax
    b317:	e8 c4 71 ff ff       	call   24e0 <strncmp@plt>
    b31c:	85 c0                	test   eax,eax
    b31e:	75 34                	jne    b354 <collect_scripts+0xdd>
    b320:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b327:	48 8d 50 0e          	lea    rdx,[rax+0xe]
    b32b:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b32f:	48 89 d6             	mov    rsi,rdx
    b332:	48 89 c7             	mov    rdi,rax
    b335:	e8 b6 71 ff ff       	call   24f0 <strcpy@plt>
    b33a:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b33e:	48 8d 35 1e 2b 00 00 	lea    rsi,[rip+0x2b1e]        # de63 <_IO_stdin_used+0x1e63>
    b345:	48 89 c7             	mov    rdi,rax
    b348:	e8 23 73 ff ff       	call   2670 <strcspn@plt>
    b34d:	c6 44 05 d0 00       	mov    BYTE PTR [rbp+rax*1-0x30],0x0
    b352:	eb 23                	jmp    b377 <collect_scripts+0x100>
    b354:	48 8b b5 78 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x88]
    b35b:	48 8d 45 90          	lea    rax,[rbp-0x70]
    b35f:	41 b8 00 00 00 00    	mov    r8d,0x0
    b365:	b9 00 00 00 00       	mov    ecx,0x0
    b36a:	ba 00 00 00 00       	mov    edx,0x0
    b36f:	48 89 c7             	mov    rdi,rax
    b372:	e8 f9 73 ff ff       	call   2770 <regexec@plt>
    b377:	48 8b 55 80          	mov    rdx,QWORD PTR [rbp-0x80]
    b37b:	48 8d 8d 70 ff ff ff 	lea    rcx,[rbp-0x90]
    b382:	48 8d 85 78 ff ff ff 	lea    rax,[rbp-0x88]
    b389:	48 89 ce             	mov    rsi,rcx
    b38c:	48 89 c7             	mov    rdi,rax
    b38f:	e8 9c 74 ff ff       	call   2830 <getline@plt>
    b394:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    b398:	48 83 7d 88 ff       	cmp    QWORD PTR [rbp-0x78],0xffffffffffffffff
    b39d:	0f 85 4e ff ff ff    	jne    b2f1 <collect_scripts+0x7a>
    b3a3:	90                   	nop
    b3a4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b3a8:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    b3af:	00 00 
    b3b1:	74 05                	je     b3b8 <collect_scripts+0x141>
    b3b3:	e8 f8 71 ff ff       	call   25b0 <__stack_chk_fail@plt>
    b3b8:	c9                   	leave  
    b3b9:	c3                   	ret    

000000000000b3ba <ip6decode>:
    b3ba:	f3 0f 1e fa          	endbr64 
    b3be:	55                   	push   rbp
    b3bf:	48 89 e5             	mov    rbp,rsp
    b3c2:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    b3c9:	48 89 bd 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdi
    b3d0:	48 89 b5 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rsi
    b3d7:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b3de:	00 00 
    b3e0:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b3e4:	31 c0                	xor    eax,eax
    b3e6:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b3ed:	48 83 c0 0e          	add    rax,0xe
    b3f1:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    b3f5:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    b3f9:	48 83 c0 08          	add    rax,0x8
    b3fd:	48 89 c7             	mov    rdi,rax
    b400:	e8 cf 7d ff ff       	call   31d4 <inet6_ntoa>
    b405:	48 89 c1             	mov    rcx,rax
    b408:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b40c:	ba 29 00 00 00       	mov    edx,0x29
    b411:	48 89 ce             	mov    rsi,rcx
    b414:	48 89 c7             	mov    rdi,rax
    b417:	e8 b4 70 ff ff       	call   24d0 <strncpy@plt>
    b41c:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    b420:	48 83 c0 18          	add    rax,0x18
    b424:	48 89 c7             	mov    rdi,rax
    b427:	e8 a8 7d ff ff       	call   31d4 <inet6_ntoa>
    b42c:	48 89 c1             	mov    rcx,rax
    b42f:	48 8d 45 90          	lea    rax,[rbp-0x70]
    b433:	ba 29 00 00 00       	mov    edx,0x29
    b438:	48 89 ce             	mov    rsi,rcx
    b43b:	48 89 c7             	mov    rdi,rax
    b43e:	e8 8d 70 ff ff       	call   24d0 <strncpy@plt>
    b443:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    b447:	0f b6 40 06          	movzx  eax,BYTE PTR [rax+0x6]
    b44b:	0f b6 c0             	movzx  eax,al
    b44e:	85 c0                	test   eax,eax
    b450:	75 1c                	jne    b46e <ip6decode+0xb4>
    b452:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    b456:	48 8d 4d c0          	lea    rcx,[rbp-0x40]
    b45a:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b461:	48 89 ce             	mov    rsi,rcx
    b464:	48 89 c7             	mov    rdi,rax
    b467:	e8 04 86 ff ff       	call   3a70 <ip6_icmp_decode>
    b46c:	eb 28                	jmp    b496 <ip6decode+0xdc>
    b46e:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    b472:	0f b6 40 06          	movzx  eax,BYTE PTR [rax+0x6]
    b476:	0f b6 c8             	movzx  ecx,al
    b479:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    b47d:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b481:	48 89 c6             	mov    rsi,rax
    b484:	48 8d 3d dd 29 00 00 	lea    rdi,[rip+0x29dd]        # de68 <_IO_stdin_used+0x1e68>
    b48b:	b8 00 00 00 00       	mov    eax,0x0
    b490:	e8 5b 71 ff ff       	call   25f0 <printf@plt>
    b495:	90                   	nop
    b496:	90                   	nop
    b497:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b49b:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    b4a2:	00 00 
    b4a4:	74 05                	je     b4ab <ip6decode+0xf1>
    b4a6:	e8 05 71 ff ff       	call   25b0 <__stack_chk_fail@plt>
    b4ab:	c9                   	leave  
    b4ac:	c3                   	ret    

000000000000b4ad <print_mem_map>:
    b4ad:	f3 0f 1e fa          	endbr64 
    b4b1:	55                   	push   rbp
    b4b2:	48 89 e5             	mov    rbp,rsp
    b4b5:	48 83 ec 10          	sub    rsp,0x10
    b4b9:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    b4c0:	eb 4c                	jmp    b50e <print_mem_map+0x61>
    b4c2:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    b4c5:	48 63 d0             	movsxd rdx,eax
    b4c8:	48 89 d0             	mov    rax,rdx
    b4cb:	48 c1 e0 02          	shl    rax,0x2
    b4cf:	48 01 d0             	add    rax,rdx
    b4d2:	48 c1 e0 03          	shl    rax,0x3
    b4d6:	48 8d 15 63 d7 12 00 	lea    rdx,[rip+0x12d763]        # 138c40 <fn_mem_map>
    b4dd:	48 01 d0             	add    rax,rdx
    b4e0:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b4e4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b4e8:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    b4eb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b4ef:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    b4f2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b4f6:	48 89 c6             	mov    rsi,rax
    b4f9:	48 8d 3d 90 29 00 00 	lea    rdi,[rip+0x2990]        # de90 <_IO_stdin_used+0x1e90>
    b500:	b8 00 00 00 00       	mov    eax,0x0
    b505:	e8 e6 70 ff ff       	call   25f0 <printf@plt>
    b50a:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    b50e:	8b 05 94 c3 0f 00    	mov    eax,DWORD PTR [rip+0xfc394]        # 1078a8 <fn_num>
    b514:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    b517:	7c a9                	jl     b4c2 <print_mem_map+0x15>
    b519:	90                   	nop
    b51a:	90                   	nop
    b51b:	c9                   	leave  
    b51c:	c3                   	ret    

000000000000b51d <crash_handler>:
    b51d:	f3 0f 1e fa          	endbr64 
    b521:	55                   	push   rbp
    b522:	48 89 e5             	mov    rbp,rsp
    b525:	41 54                	push   r12
    b527:	53                   	push   rbx
    b528:	48 81 ec f0 00 00 00 	sub    rsp,0xf0
    b52f:	89 bd 0c ff ff ff    	mov    DWORD PTR [rbp-0xf4],edi
    b535:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b53c:	00 00 
    b53e:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    b542:	31 c0                	xor    eax,eax
    b544:	48 8d 85 30 ff ff ff 	lea    rax,[rbp-0xd0]
    b54b:	be 14 00 00 00       	mov    esi,0x14
    b550:	48 89 c7             	mov    rdi,rax
    b553:	e8 48 70 ff ff       	call   25a0 <backtrace@plt>
    b558:	89 85 18 ff ff ff    	mov    DWORD PTR [rbp-0xe8],eax
    b55e:	8b 95 18 ff ff ff    	mov    edx,DWORD PTR [rbp-0xe8]
    b564:	48 8d 85 30 ff ff ff 	lea    rax,[rbp-0xd0]
    b56b:	89 d6                	mov    esi,edx
    b56d:	48 89 c7             	mov    rdi,rax
    b570:	e8 cb 6f ff ff       	call   2540 <backtrace_symbols@plt>
    b575:	48 89 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rax
    b57c:	b8 00 00 00 00       	mov    eax,0x0
    b581:	e8 1a 7e ff ff       	call   33a0 <get_formated_time>
    b586:	48 89 c6             	mov    rsi,rax
    b589:	48 8d 3d 20 29 00 00 	lea    rdi,[rip+0x2920]        # deb0 <_IO_stdin_used+0x1eb0>
    b590:	b8 00 00 00 00       	mov    eax,0x0
    b595:	e8 56 70 ff ff       	call   25f0 <printf@plt>
    b59a:	48 8d 3d 3e 29 00 00 	lea    rdi,[rip+0x293e]        # dedf <_IO_stdin_used+0x1edf>
    b5a1:	e8 7a 6f ff ff       	call   2520 <puts@plt>
    b5a6:	48 83 bd 20 ff ff ff 	cmp    QWORD PTR [rbp-0xe0],0x0
    b5ad:	00 
    b5ae:	0f 84 6d 01 00 00    	je     b721 <crash_handler+0x204>
    b5b4:	c7 85 14 ff ff ff 00 	mov    DWORD PTR [rbp-0xec],0x0
    b5bb:	00 00 00 
    b5be:	e9 4c 01 00 00       	jmp    b70f <crash_handler+0x1f2>
    b5c3:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b5c9:	48 98                	cdqe   
    b5cb:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    b5d2:	00 
    b5d3:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b5da:	48 01 d0             	add    rax,rdx
    b5dd:	48 8b 00             	mov    rax,QWORD PTR [rax]
    b5e0:	48 8d 35 0c 29 00 00 	lea    rsi,[rip+0x290c]        # def3 <_IO_stdin_used+0x1ef3>
    b5e7:	48 89 c7             	mov    rdi,rax
    b5ea:	e8 d1 72 ff ff       	call   28c0 <strstr@plt>
    b5ef:	48 85 c0             	test   rax,rax
    b5f2:	0f 85 0f 01 00 00    	jne    b707 <crash_handler+0x1ea>
    b5f8:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b5fe:	48 98                	cdqe   
    b600:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    b607:	00 
    b608:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b60f:	48 01 d0             	add    rax,rdx
    b612:	4c 8b 20             	mov    r12,QWORD PTR [rax]
    b615:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b61b:	48 98                	cdqe   
    b61d:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    b624:	00 
    b625:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b62c:	48 01 d0             	add    rax,rdx
    b62f:	48 8b 00             	mov    rax,QWORD PTR [rax]
    b632:	be 2b 00 00 00       	mov    esi,0x2b
    b637:	48 89 c7             	mov    rdi,rax
    b63a:	e8 fc 7e ff ff       	call   353b <strloc>
    b63f:	48 98                	cdqe   
    b641:	48 83 c0 01          	add    rax,0x1
    b645:	49 8d 14 04          	lea    rdx,[r12+rax*1]
    b649:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b64d:	48 8d 35 a3 28 00 00 	lea    rsi,[rip+0x28a3]        # def7 <_IO_stdin_used+0x1ef7>
    b654:	48 89 c7             	mov    rdi,rax
    b657:	b8 00 00 00 00       	mov    eax,0x0
    b65c:	e8 0f 72 ff ff       	call   2870 <sprintf@plt>
    b661:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b665:	be 29 00 00 00       	mov    esi,0x29
    b66a:	48 89 c7             	mov    rdi,rax
    b66d:	e8 c9 7e ff ff       	call   353b <strloc>
    b672:	48 98                	cdqe   
    b674:	c6 44 05 d0 00       	mov    BYTE PTR [rbp+rax*1-0x30],0x0
    b679:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b67d:	ba 10 00 00 00       	mov    edx,0x10
    b682:	be 00 00 00 00       	mov    esi,0x0
    b687:	48 89 c7             	mov    rdi,rax
    b68a:	e8 51 70 ff ff       	call   26e0 <strtol@plt>
    b68f:	89 85 1c ff ff ff    	mov    DWORD PTR [rbp-0xe4],eax
    b695:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [rbp-0xe4]
    b69b:	89 c7                	mov    edi,eax
    b69d:	e8 20 01 00 00       	call   b7c2 <offset_search>
    b6a2:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
    b6a9:	83 bd 1c ff ff ff 00 	cmp    DWORD PTR [rbp-0xe4],0x0
    b6b0:	74 3a                	je     b6ec <crash_handler+0x1cf>
    b6b2:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    b6b9:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    b6bc:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    b6c3:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    b6c6:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    b6cd:	8b b5 1c ff ff ff    	mov    esi,DWORD PTR [rbp-0xe4]
    b6d3:	41 89 f0             	mov    r8d,esi
    b6d6:	48 89 c6             	mov    rsi,rax
    b6d9:	48 8d 3d 20 28 00 00 	lea    rdi,[rip+0x2820]        # df00 <_IO_stdin_used+0x1f00>
    b6e0:	b8 00 00 00 00       	mov    eax,0x0
    b6e5:	e8 06 6f ff ff       	call   25f0 <printf@plt>
    b6ea:	eb 1c                	jmp    b708 <crash_handler+0x1eb>
    b6ec:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [rbp-0xe4]
    b6f2:	89 c6                	mov    esi,eax
    b6f4:	48 8d 3d 3d 28 00 00 	lea    rdi,[rip+0x283d]        # df38 <_IO_stdin_used+0x1f38>
    b6fb:	b8 00 00 00 00       	mov    eax,0x0
    b700:	e8 eb 6e ff ff       	call   25f0 <printf@plt>
    b705:	eb 01                	jmp    b708 <crash_handler+0x1eb>
    b707:	90                   	nop
    b708:	83 85 14 ff ff ff 01 	add    DWORD PTR [rbp-0xec],0x1
    b70f:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b715:	3b 85 18 ff ff ff    	cmp    eax,DWORD PTR [rbp-0xe8]
    b71b:	0f 8c a2 fe ff ff    	jl     b5c3 <crash_handler+0xa6>
    b721:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b728:	48 89 c7             	mov    rdi,rax
    b72b:	e8 60 6d ff ff       	call   2490 <free@plt>
    b730:	48 8d 3d 2b 28 00 00 	lea    rdi,[rip+0x282b]        # df62 <_IO_stdin_used+0x1f62>
    b737:	e8 e4 6d ff ff       	call   2520 <puts@plt>
    b73c:	89 c6                	mov    esi,eax
    b73e:	48 8d 3d 2c 28 00 00 	lea    rdi,[rip+0x282c]        # df71 <_IO_stdin_used+0x1f71>
    b745:	b8 00 00 00 00       	mov    eax,0x0
    b74a:	e8 a1 6e ff ff       	call   25f0 <printf@plt>
    b74f:	89 d8                	mov    eax,ebx
    b751:	89 c6                	mov    esi,eax
    b753:	48 8d 3d 27 28 00 00 	lea    rdi,[rip+0x2827]        # df81 <_IO_stdin_used+0x1f81>
    b75a:	b8 00 00 00 00       	mov    eax,0x0
    b75f:	e8 8c 6e ff ff       	call   25f0 <printf@plt>
    b764:	89 d8                	mov    eax,ebx
    b766:	89 c6                	mov    esi,eax
    b768:	48 8d 3d 22 28 00 00 	lea    rdi,[rip+0x2822]        # df91 <_IO_stdin_used+0x1f91>
    b76f:	b8 00 00 00 00       	mov    eax,0x0
    b774:	e8 77 6e ff ff       	call   25f0 <printf@plt>
    b779:	89 c8                	mov    eax,ecx
    b77b:	89 c6                	mov    esi,eax
    b77d:	48 8d 3d 1d 28 00 00 	lea    rdi,[rip+0x281d]        # dfa1 <_IO_stdin_used+0x1fa1>
    b784:	b8 00 00 00 00       	mov    eax,0x0
    b789:	e8 62 6e ff ff       	call   25f0 <printf@plt>
    b78e:	89 e0                	mov    eax,esp
    b790:	89 c6                	mov    esi,eax
    b792:	48 8d 3d 18 28 00 00 	lea    rdi,[rip+0x2818]        # dfb1 <_IO_stdin_used+0x1fb1>
    b799:	b8 00 00 00 00       	mov    eax,0x0
    b79e:	e8 4d 6e ff ff       	call   25f0 <printf@plt>
    b7a3:	89 e8                	mov    eax,ebp
    b7a5:	89 c6                	mov    esi,eax
    b7a7:	48 8d 3d 13 28 00 00 	lea    rdi,[rip+0x2813]        # dfc1 <_IO_stdin_used+0x1fc1>
    b7ae:	b8 00 00 00 00       	mov    eax,0x0
    b7b3:	e8 38 6e ff ff       	call   25f0 <printf@plt>
    b7b8:	bf 01 00 00 00       	mov    edi,0x1
    b7bd:	e8 be 70 ff ff       	call   2880 <exit@plt>

000000000000b7c2 <offset_search>:
    b7c2:	f3 0f 1e fa          	endbr64 
    b7c6:	55                   	push   rbp
    b7c7:	48 89 e5             	mov    rbp,rsp
    b7ca:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    b7cd:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    b7d4:	eb 44                	jmp    b81a <offset_search+0x58>
    b7d6:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    b7d9:	48 63 d0             	movsxd rdx,eax
    b7dc:	48 89 d0             	mov    rax,rdx
    b7df:	48 c1 e0 02          	shl    rax,0x2
    b7e3:	48 01 d0             	add    rax,rdx
    b7e6:	48 c1 e0 03          	shl    rax,0x3
    b7ea:	48 8d 15 4f d4 12 00 	lea    rdx,[rip+0x12d44f]        # 138c40 <fn_mem_map>
    b7f1:	48 01 d0             	add    rax,rdx
    b7f4:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b7f8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b7fc:	8b 40 20             	mov    eax,DWORD PTR [rax+0x20]
    b7ff:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    b802:	76 12                	jbe    b816 <offset_search+0x54>
    b804:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b808:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    b80b:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    b80e:	73 06                	jae    b816 <offset_search+0x54>
    b810:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b814:	eb 14                	jmp    b82a <offset_search+0x68>
    b816:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    b81a:	8b 05 88 c0 0f 00    	mov    eax,DWORD PTR [rip+0xfc088]        # 1078a8 <fn_num>
    b820:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    b823:	7c b1                	jl     b7d6 <offset_search+0x14>
    b825:	b8 00 00 00 00       	mov    eax,0x0
    b82a:	5d                   	pop    rbp
    b82b:	c3                   	ret    

000000000000b82c <add_fn>:
    b82c:	f3 0f 1e fa          	endbr64 
    b830:	55                   	push   rbp
    b831:	48 89 e5             	mov    rbp,rsp
    b834:	48 83 ec 20          	sub    rsp,0x20
    b838:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    b83c:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    b83f:	89 55 e0             	mov    DWORD PTR [rbp-0x20],edx
    b842:	8b 05 60 c0 0f 00    	mov    eax,DWORD PTR [rip+0xfc060]        # 1078a8 <fn_num>
    b848:	8d 50 01             	lea    edx,[rax+0x1]
    b84b:	89 15 57 c0 0f 00    	mov    DWORD PTR [rip+0xfc057],edx        # 1078a8 <fn_num>
    b851:	48 63 d0             	movsxd rdx,eax
    b854:	48 89 d0             	mov    rax,rdx
    b857:	48 c1 e0 02          	shl    rax,0x2
    b85b:	48 01 d0             	add    rax,rdx
    b85e:	48 c1 e0 03          	shl    rax,0x3
    b862:	48 8d 15 d7 d3 12 00 	lea    rdx,[rip+0x12d3d7]        # 138c40 <fn_mem_map>
    b869:	48 01 d0             	add    rax,rdx
    b86c:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b870:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b874:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    b878:	48 89 d6             	mov    rsi,rdx
    b87b:	48 89 c7             	mov    rdi,rax
    b87e:	e8 6d 6c ff ff       	call   24f0 <strcpy@plt>
    b883:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b887:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    b88a:	89 50 20             	mov    DWORD PTR [rax+0x20],edx
    b88d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b891:	8b 55 e0             	mov    edx,DWORD PTR [rbp-0x20]
    b894:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    b897:	90                   	nop
    b898:	c9                   	leave  
    b899:	c3                   	ret    

000000000000b89a <load_fn_mem_map>:
    b89a:	f3 0f 1e fa          	endbr64 
    b89e:	55                   	push   rbp
    b89f:	48 89 e5             	mov    rbp,rsp
    b8a2:	53                   	push   rbx
    b8a3:	48 83 ec 78          	sub    rsp,0x78
    b8a7:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b8ae:	00 00 
    b8b0:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    b8b4:	31 c0                	xor    eax,eax
    b8b6:	48 8d 35 1b 27 00 00 	lea    rsi,[rip+0x271b]        # dfd8 <_IO_stdin_used+0x1fd8>
    b8bd:	48 8d 3d 16 27 00 00 	lea    rdi,[rip+0x2716]        # dfda <_IO_stdin_used+0x1fda>
    b8c4:	e8 e7 6e ff ff       	call   27b0 <fopen@plt>
    b8c9:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    b8cd:	48 83 7d b0 00       	cmp    QWORD PTR [rbp-0x50],0x0
    b8d2:	75 16                	jne    b8ea <load_fn_mem_map+0x50>
    b8d4:	48 8d 3d 1d 27 00 00 	lea    rdi,[rip+0x271d]        # dff8 <_IO_stdin_used+0x1ff8>
    b8db:	e8 40 6c ff ff       	call   2520 <puts@plt>
    b8e0:	bf ff ff ff ff       	mov    edi,0xffffffff
    b8e5:	e8 96 6f ff ff       	call   2880 <exit@plt>
    b8ea:	48 c7 45 98 00 00 00 	mov    QWORD PTR [rbp-0x68],0x0
    b8f1:	00 
    b8f2:	48 c7 45 a0 00 00 00 	mov    QWORD PTR [rbp-0x60],0x0
    b8f9:	00 
    b8fa:	e9 db 00 00 00       	jmp    b9da <load_fn_mem_map+0x140>
    b8ff:	48 8b 5d 98          	mov    rbx,QWORD PTR [rbp-0x68]
    b903:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    b907:	48 8d 35 51 27 00 00 	lea    rsi,[rip+0x2751]        # e05f <_IO_stdin_used+0x205f>
    b90e:	48 89 c7             	mov    rdi,rax
    b911:	e8 5a 6d ff ff       	call   2670 <strcspn@plt>
    b916:	48 01 d8             	add    rax,rbx
    b919:	c6 00 00             	mov    BYTE PTR [rax],0x0
    b91c:	c7 45 94 00 00 00 00 	mov    DWORD PTR [rbp-0x6c],0x0
    b923:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    b927:	48 8d 35 33 27 00 00 	lea    rsi,[rip+0x2733]        # e061 <_IO_stdin_used+0x2061>
    b92e:	48 89 c7             	mov    rdi,rax
    b931:	e8 9a 6e ff ff       	call   27d0 <strtok@plt>
    b936:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    b93a:	eb 7f                	jmp    b9bb <load_fn_mem_map+0x121>
    b93c:	83 7d 94 02          	cmp    DWORD PTR [rbp-0x6c],0x2
    b940:	74 44                	je     b986 <load_fn_mem_map+0xec>
    b942:	83 7d 94 02          	cmp    DWORD PTR [rbp-0x6c],0x2
    b946:	7f 59                	jg     b9a1 <load_fn_mem_map+0x107>
    b948:	83 7d 94 00          	cmp    DWORD PTR [rbp-0x6c],0x0
    b94c:	74 08                	je     b956 <load_fn_mem_map+0xbc>
    b94e:	83 7d 94 01          	cmp    DWORD PTR [rbp-0x6c],0x1
    b952:	74 17                	je     b96b <load_fn_mem_map+0xd1>
    b954:	eb 4b                	jmp    b9a1 <load_fn_mem_map+0x107>
    b956:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    b95a:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b95e:	48 89 d6             	mov    rsi,rdx
    b961:	48 89 c7             	mov    rdi,rax
    b964:	e8 87 6b ff ff       	call   24f0 <strcpy@plt>
    b969:	eb 37                	jmp    b9a2 <load_fn_mem_map+0x108>
    b96b:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    b96f:	ba 10 00 00 00       	mov    edx,0x10
    b974:	be 00 00 00 00       	mov    esi,0x0
    b979:	48 89 c7             	mov    rdi,rax
    b97c:	e8 5f 6d ff ff       	call   26e0 <strtol@plt>
    b981:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    b984:	eb 1c                	jmp    b9a2 <load_fn_mem_map+0x108>
    b986:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    b98a:	ba 10 00 00 00       	mov    edx,0x10
    b98f:	be 00 00 00 00       	mov    esi,0x0
    b994:	48 89 c7             	mov    rdi,rax
    b997:	e8 44 6d ff ff       	call   26e0 <strtol@plt>
    b99c:	89 45 90             	mov    DWORD PTR [rbp-0x70],eax
    b99f:	eb 01                	jmp    b9a2 <load_fn_mem_map+0x108>
    b9a1:	90                   	nop
    b9a2:	48 8d 35 b8 26 00 00 	lea    rsi,[rip+0x26b8]        # e061 <_IO_stdin_used+0x2061>
    b9a9:	bf 00 00 00 00       	mov    edi,0x0
    b9ae:	e8 1d 6e ff ff       	call   27d0 <strtok@plt>
    b9b3:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    b9b7:	83 45 94 01          	add    DWORD PTR [rbp-0x6c],0x1
    b9bb:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
    b9c0:	0f 85 76 ff ff ff    	jne    b93c <load_fn_mem_map+0xa2>
    b9c6:	8b 55 90             	mov    edx,DWORD PTR [rbp-0x70]
    b9c9:	8b 4d 8c             	mov    ecx,DWORD PTR [rbp-0x74]
    b9cc:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b9d0:	89 ce                	mov    esi,ecx
    b9d2:	48 89 c7             	mov    rdi,rax
    b9d5:	e8 52 fe ff ff       	call   b82c <add_fn>
    b9da:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
    b9de:	48 8d 4d a0          	lea    rcx,[rbp-0x60]
    b9e2:	48 8d 45 98          	lea    rax,[rbp-0x68]
    b9e6:	48 89 ce             	mov    rsi,rcx
    b9e9:	48 89 c7             	mov    rdi,rax
    b9ec:	e8 3f 6e ff ff       	call   2830 <getline@plt>
    b9f1:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    b9f5:	48 83 7d b8 ff       	cmp    QWORD PTR [rbp-0x48],0xffffffffffffffff
    b9fa:	0f 85 ff fe ff ff    	jne    b8ff <load_fn_mem_map+0x65>
    ba00:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    ba04:	48 89 c7             	mov    rdi,rax
    ba07:	e8 64 6b ff ff       	call   2570 <fclose@plt>
    ba0c:	90                   	nop
    ba0d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    ba11:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    ba18:	00 00 
    ba1a:	74 05                	je     ba21 <load_fn_mem_map+0x187>
    ba1c:	e8 8f 6b ff ff       	call   25b0 <__stack_chk_fail@plt>
    ba21:	48 83 c4 78          	add    rsp,0x78
    ba25:	5b                   	pop    rbx
    ba26:	5d                   	pop    rbp
    ba27:	c3                   	ret    

000000000000ba28 <pps_monitor>:
    ba28:	f3 0f 1e fa          	endbr64 
    ba2c:	55                   	push   rbp
    ba2d:	48 89 e5             	mov    rbp,rsp
    ba30:	48 81 ec 90 02 00 00 	sub    rsp,0x290
    ba37:	48 89 bd 88 fd ff ff 	mov    QWORD PTR [rbp-0x278],rdi
    ba3e:	48 89 b5 80 fd ff ff 	mov    QWORD PTR [rbp-0x280],rsi
    ba45:	48 89 95 78 fd ff ff 	mov    QWORD PTR [rbp-0x288],rdx
    ba4c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    ba53:	00 00 
    ba55:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    ba59:	31 c0                	xor    eax,eax
    ba5b:	bf 00 00 00 00       	mov    edi,0x0
    ba60:	e8 9b 6c ff ff       	call   2700 <time@plt>
    ba65:	48 89 c2             	mov    rdx,rax
    ba68:	8b 05 52 be 0f 00    	mov    eax,DWORD PTR [rip+0xfbe52]        # 1078c0 <arr_num.3961>
    ba6e:	8d 48 01             	lea    ecx,[rax+0x1]
    ba71:	89 0d 49 be 0f 00    	mov    DWORD PTR [rip+0xfbe49],ecx        # 1078c0 <arr_num.3961>
    ba77:	48 89 d1             	mov    rcx,rdx
    ba7a:	89 c0                	mov    eax,eax
    ba7c:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    ba83:	00 
    ba84:	48 8d 05 55 be 0f 00 	lea    rax,[rip+0xfbe55]        # 1078e0 <pkt_times.3960>
    ba8b:	48 89 0c 02          	mov    QWORD PTR [rdx+rax*1],rcx
    ba8f:	8b 05 2b be 0f 00    	mov    eax,DWORD PTR [rip+0xfbe2b]        # 1078c0 <arr_num.3961>
    ba95:	3d 80 00 00 00       	cmp    eax,0x80
    ba9a:	0f 85 db 01 00 00    	jne    bc7b <pps_monitor+0x253>
    baa0:	c7 85 98 fd ff ff 00 	mov    DWORD PTR [rbp-0x268],0x0
    baa7:	00 00 00 
    baaa:	48 8d 3d b7 25 00 00 	lea    rdi,[rip+0x25b7]        # e068 <_IO_stdin_used+0x2068>
    bab1:	e8 ca 6a ff ff       	call   2580 <opendir@plt>
    bab6:	48 89 85 a8 fd ff ff 	mov    QWORD PTR [rbp-0x258],rax
    babd:	48 83 bd a8 fd ff ff 	cmp    QWORD PTR [rbp-0x258],0x0
    bac4:	00 
    bac5:	0f 84 af 01 00 00    	je     bc7a <pps_monitor+0x252>
    bacb:	eb 07                	jmp    bad4 <pps_monitor+0xac>
    bacd:	83 85 98 fd ff ff 01 	add    DWORD PTR [rbp-0x268],0x1
    bad4:	48 8b 85 a8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x258]
    badb:	48 89 c7             	mov    rdi,rax
    bade:	e8 2d 6c ff ff       	call   2710 <readdir@plt>
    bae3:	48 89 85 b0 fd ff ff 	mov    QWORD PTR [rbp-0x250],rax
    baea:	48 83 bd b0 fd ff ff 	cmp    QWORD PTR [rbp-0x250],0x0
    baf1:	00 
    baf2:	75 d9                	jne    bacd <pps_monitor+0xa5>
    baf4:	83 ad 98 fd ff ff 02 	sub    DWORD PTR [rbp-0x268],0x2
    bafb:	8b 95 98 fd ff ff    	mov    edx,DWORD PTR [rbp-0x268]
    bb01:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    bb05:	48 8d 35 7c 25 00 00 	lea    rsi,[rip+0x257c]        # e088 <_IO_stdin_used+0x2088>
    bb0c:	48 89 c7             	mov    rdi,rax
    bb0f:	b8 00 00 00 00       	mov    eax,0x0
    bb14:	e8 57 6d ff ff       	call   2870 <sprintf@plt>
    bb19:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    bb1d:	48 8d 35 8e 25 00 00 	lea    rsi,[rip+0x258e]        # e0b2 <_IO_stdin_used+0x20b2>
    bb24:	48 89 c7             	mov    rdi,rax
    bb27:	e8 84 6c ff ff       	call   27b0 <fopen@plt>
    bb2c:	48 89 85 b8 fd ff ff 	mov    QWORD PTR [rbp-0x248],rax
    bb33:	48 83 bd b8 fd ff ff 	cmp    QWORD PTR [rbp-0x248],0x0
    bb3a:	00 
    bb3b:	75 11                	jne    bb4e <pps_monitor+0x126>
    bb3d:	48 8d 3d 70 25 00 00 	lea    rdi,[rip+0x2570]        # e0b4 <_IO_stdin_used+0x20b4>
    bb44:	e8 77 6c ff ff       	call   27c0 <perror@plt>
    bb49:	e9 2d 01 00 00       	jmp    bc7b <pps_monitor+0x253>
    bb4e:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    bb52:	48 89 c6             	mov    rsi,rax
    bb55:	48 8d 3d 6b 25 00 00 	lea    rdi,[rip+0x256b]        # e0c7 <_IO_stdin_used+0x20c7>
    bb5c:	b8 00 00 00 00       	mov    eax,0x0
    bb61:	e8 8a 6a ff ff       	call   25f0 <printf@plt>
    bb66:	c7 85 9c fd ff ff 00 	mov    DWORD PTR [rbp-0x264],0x0
    bb6d:	00 00 00 
    bb70:	8b 05 4a bd 0f 00    	mov    eax,DWORD PTR [rip+0xfbd4a]        # 1078c0 <arr_num.3961>
    bb76:	89 85 a0 fd ff ff    	mov    DWORD PTR [rbp-0x260],eax
    bb7c:	eb 68                	jmp    bbe6 <pps_monitor+0x1be>
    bb7e:	8b 85 a0 fd ff ff    	mov    eax,DWORD PTR [rbp-0x260]
    bb84:	48 98                	cdqe   
    bb86:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    bb8d:	00 
    bb8e:	48 8d 05 4b bd 0f 00 	lea    rax,[rip+0xfbd4b]        # 1078e0 <pkt_times.3960>
    bb95:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    bb99:	89 c6                	mov    esi,eax
    bb9b:	8b 85 a0 fd ff ff    	mov    eax,DWORD PTR [rbp-0x260]
    bba1:	8d 50 ff             	lea    edx,[rax-0x1]
    bba4:	89 95 a0 fd ff ff    	mov    DWORD PTR [rbp-0x260],edx
    bbaa:	48 98                	cdqe   
    bbac:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    bbb3:	00 
    bbb4:	48 8d 05 25 bd 0f 00 	lea    rax,[rip+0xfbd25]        # 1078e0 <pkt_times.3960>
    bbbb:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    bbbf:	89 c1                	mov    ecx,eax
    bbc1:	8b 85 9c fd ff ff    	mov    eax,DWORD PTR [rbp-0x264]
    bbc7:	8d 50 01             	lea    edx,[rax+0x1]
    bbca:	89 95 9c fd ff ff    	mov    DWORD PTR [rbp-0x264],edx
    bbd0:	29 ce                	sub    esi,ecx
    bbd2:	89 f2                	mov    edx,esi
    bbd4:	89 c0                	mov    eax,eax
    bbd6:	89 94 85 c0 fd ff ff 	mov    DWORD PTR [rbp+rax*4-0x240],edx
    bbdd:	83 bd a0 fd ff ff 00 	cmp    DWORD PTR [rbp-0x260],0x0
    bbe4:	74 0b                	je     bbf1 <pps_monitor+0x1c9>
    bbe6:	83 bd a0 fd ff ff 00 	cmp    DWORD PTR [rbp-0x260],0x0
    bbed:	75 8f                	jne    bb7e <pps_monitor+0x156>
    bbef:	eb 01                	jmp    bbf2 <pps_monitor+0x1ca>
    bbf1:	90                   	nop
    bbf2:	c7 85 a4 fd ff ff 00 	mov    DWORD PTR [rbp-0x25c],0x0
    bbf9:	00 00 00 
    bbfc:	eb 4c                	jmp    bc4a <pps_monitor+0x222>
    bbfe:	8b 85 a4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x25c]
    bc04:	48 98                	cdqe   
    bc06:	8b 8c 85 c0 fd ff ff 	mov    ecx,DWORD PTR [rbp+rax*4-0x240]
    bc0d:	8b 85 a4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x25c]
    bc13:	48 98                	cdqe   
    bc15:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    bc1c:	00 
    bc1d:	48 8d 05 bc bc 0f 00 	lea    rax,[rip+0xfbcbc]        # 1078e0 <pkt_times.3960>
    bc24:	48 8b 14 02          	mov    rdx,QWORD PTR [rdx+rax*1]
    bc28:	48 8b 85 b8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x248]
    bc2f:	48 8d 35 a0 24 00 00 	lea    rsi,[rip+0x24a0]        # e0d6 <_IO_stdin_used+0x20d6>
    bc36:	48 89 c7             	mov    rdi,rax
    bc39:	b8 00 00 00 00       	mov    eax,0x0
    bc3e:	e8 8d 6a ff ff       	call   26d0 <fprintf@plt>
    bc43:	83 85 a4 fd ff ff 01 	add    DWORD PTR [rbp-0x25c],0x1
    bc4a:	8b 85 a4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x25c]
    bc50:	39 85 9c fd ff ff    	cmp    DWORD PTR [rbp-0x264],eax
    bc56:	77 a6                	ja     bbfe <pps_monitor+0x1d6>
    bc58:	ba 00 04 00 00       	mov    edx,0x400
    bc5d:	be 00 00 00 00       	mov    esi,0x0
    bc62:	48 8d 3d 77 bc 0f 00 	lea    rdi,[rip+0xfbc77]        # 1078e0 <pkt_times.3960>
    bc69:	e8 c2 69 ff ff       	call   2630 <memset@plt>
    bc6e:	c7 05 48 bc 0f 00 00 	mov    DWORD PTR [rip+0xfbc48],0x0        # 1078c0 <arr_num.3961>
    bc75:	00 00 00 
    bc78:	eb 01                	jmp    bc7b <pps_monitor+0x253>
    bc7a:	90                   	nop
    bc7b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    bc7f:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    bc86:	00 00 
    bc88:	74 05                	je     bc8f <pps_monitor+0x267>
    bc8a:	e8 21 69 ff ff       	call   25b0 <__stack_chk_fail@plt>
    bc8f:	c9                   	leave  
    bc90:	c3                   	ret    
    bc91:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    bc98:	00 00 00 
    bc9b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000bca0 <__libc_csu_init>:
    bca0:	f3 0f 1e fa          	endbr64 
    bca4:	41 57                	push   r15
    bca6:	4c 8d 3d ab 4e 00 00 	lea    r15,[rip+0x4eab]        # 10b58 <__frame_dummy_init_array_entry>
    bcad:	41 56                	push   r14
    bcaf:	49 89 d6             	mov    r14,rdx
    bcb2:	41 55                	push   r13
    bcb4:	49 89 f5             	mov    r13,rsi
    bcb7:	41 54                	push   r12
    bcb9:	41 89 fc             	mov    r12d,edi
    bcbc:	55                   	push   rbp
    bcbd:	48 8d 2d 9c 4e 00 00 	lea    rbp,[rip+0x4e9c]        # 10b60 <__do_global_dtors_aux_fini_array_entry>
    bcc4:	53                   	push   rbx
    bcc5:	4c 29 fd             	sub    rbp,r15
    bcc8:	48 83 ec 08          	sub    rsp,0x8
    bccc:	e8 2f 63 ff ff       	call   2000 <_init>
    bcd1:	48 c1 fd 03          	sar    rbp,0x3
    bcd5:	74 1f                	je     bcf6 <__libc_csu_init+0x56>
    bcd7:	31 db                	xor    ebx,ebx
    bcd9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    bce0:	4c 89 f2             	mov    rdx,r14
    bce3:	4c 89 ee             	mov    rsi,r13
    bce6:	44 89 e7             	mov    edi,r12d
    bce9:	41 ff 14 df          	call   QWORD PTR [r15+rbx*8]
    bced:	48 83 c3 01          	add    rbx,0x1
    bcf1:	48 39 dd             	cmp    rbp,rbx
    bcf4:	75 ea                	jne    bce0 <__libc_csu_init+0x40>
    bcf6:	48 83 c4 08          	add    rsp,0x8
    bcfa:	5b                   	pop    rbx
    bcfb:	5d                   	pop    rbp
    bcfc:	41 5c                	pop    r12
    bcfe:	41 5d                	pop    r13
    bd00:	41 5e                	pop    r14
    bd02:	41 5f                	pop    r15
    bd04:	c3                   	ret    
    bd05:	66 66 2e 0f 1f 84 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    bd0c:	00 00 00 00 

000000000000bd10 <__libc_csu_fini>:
    bd10:	f3 0f 1e fa          	endbr64 
    bd14:	c3                   	ret    

Disassembly of section .fini:

000000000000bd18 <_fini>:
    bd18:	f3 0f 1e fa          	endbr64 
    bd1c:	48 83 ec 08          	sub    rsp,0x8
    bd20:	48 83 c4 08          	add    rsp,0x8
    bd24:	c3                   	ret    

Disassembly of section .rodata:

000000000000c000 <_IO_stdin_used>:
    c000:	01 00                	add    DWORD PTR [rax],eax
    c002:	02 00                	add    al,BYTE PTR [rax]
    c004:	2f                   	(bad)  
    c005:	65 74 63             	gs je  c06b <_IO_stdin_used+0x6b>
    c008:	2f                   	(bad)  
    c009:	76 69                	jbe    c074 <_IO_stdin_used+0x74>
    c00b:	67 69 6c 2f 76 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x76],0x6c696769
    c012:	69 6c 
    c014:	2e 63 6f 6e          	movsxd ebp,DWORD PTR cs:[rdi+0x6e]
    c018:	66 00 2f             	data16 add BYTE PTR [rdi],ch
    c01b:	76 61                	jbe    c07e <_IO_stdin_used+0x7e>
    c01d:	72 2f                	jb     c04e <_IO_stdin_used+0x4e>
    c01f:	6c                   	ins    BYTE PTR es:[rdi],dx
    c020:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c021:	67 2f                	addr32 (bad) 
    c023:	76 69                	jbe    c08e <_IO_stdin_used+0x8e>
    c025:	67 69 6c 2f 73 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x6f6c6769
    c02c:	6c 6f 
    c02e:	67 2e 6c             	cs ins BYTE PTR es:[edi],dx
    c031:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c032:	67 00 2f             	add    BYTE PTR [edi],ch
    c035:	65 74 63             	gs je  c09b <_IO_stdin_used+0x9b>
    c038:	2f                   	(bad)  
    c039:	76 69                	jbe    c0a4 <_IO_stdin_used+0xa4>
    c03b:	67 69 6c 2f 68 6f 73 	imul   ebp,DWORD PTR [edi+ebp*1+0x68],0x7374736f
    c042:	74 73 
    c044:	2e 63 6f 6e          	movsxd ebp,DWORD PTR cs:[rdi+0x6e]
    c048:	66 00 00             	data16 add BYTE PTR [rax],al
    c04b:	00 00                	add    BYTE PTR [rax],al
    c04d:	00 00                	add    BYTE PTR [rax],al
    c04f:	00 1b                	add    BYTE PTR [rbx],bl
    c051:	5b                   	pop    rbx
    c052:	39 30                	cmp    DWORD PTR [rax],esi
    c054:	6d                   	ins    DWORD PTR es:[rdi],dx
    c055:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c05a:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c05f:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c064:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c069:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c06e:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c073:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c078:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c07d:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c082:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c087:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c08c:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c091:	2d 1b 5b 6d 00       	sub    eax,0x6d5b1b
    c096:	00 00                	add    BYTE PTR [rax],al
    c098:	42                   	rex.X
    c099:	41                   	rex.B
    c09a:	44 2d 54 52 41 46    	rex.R sub eax,0x46415254
    c0a0:	46                   	rex.RX
    c0a1:	49                   	rex.WB
    c0a2:	43 20 55 6e          	rex.XB and BYTE PTR [r13+0x6e],dl
    c0a6:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c0aa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c0ab:	20 45 74             	and    BYTE PTR [rbp+0x74],al
    c0ae:	68 65 72 6e 74       	push   0x746e7265
    c0b3:	20 46 72             	and    BYTE PTR [rsi+0x72],al
    c0b6:	61                   	(bad)  
    c0b7:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0b8:	65 20 50 72          	and    BYTE PTR gs:[rax+0x72],dl
    c0bc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c0bd:	74 6f                	je     c12e <_IO_stdin_used+0x12e>
    c0bf:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    c0c2:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    c0c5:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0c6:	62                   	(bad)  
    c0c7:	65 72 00             	gs jb  c0ca <_IO_stdin_used+0xca>
    c0ca:	2f                   	(bad)  
    c0cb:	76 61                	jbe    c12e <_IO_stdin_used+0x12e>
    c0cd:	72 2f                	jb     c0fe <_IO_stdin_used+0xfe>
    c0cf:	6c                   	ins    BYTE PTR es:[rdi],dx
    c0d0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c0d1:	67 2f                	addr32 (bad) 
    c0d3:	76 69                	jbe    c13e <_IO_stdin_used+0x13e>
    c0d5:	67 69 6c 2f 73 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x6f6c6769
    c0dc:	6c 6f 
    c0de:	67 2e 6c             	cs ins BYTE PTR es:[edi],dx
    c0e1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c0e2:	67 00 00             	add    BYTE PTR [eax],al
    c0e5:	00 00                	add    BYTE PTR [rax],al
    c0e7:	00 1b                	add    BYTE PTR [rbx],bl
    c0e9:	5b                   	pop    rbx
    c0ea:	33 3b                	xor    edi,DWORD PTR [rbx]
    c0ec:	33 33                	xor    esi,DWORD PTR [rbx]
    c0ee:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0ef:	00 25 73 00 30 2e    	add    BYTE PTR [rip+0x2e300073],ah        # 2e30c168 <_end+0x2e1d0d28>
    c0f5:	30 2e                	xor    BYTE PTR [rsi],ch
    c0f7:	30 2e                	xor    BYTE PTR [rsi],ch
    c0f9:	30 00                	xor    BYTE PTR [rax],al
    c0fb:	00 00                	add    BYTE PTR [rax],al
    c0fd:	00 00                	add    BYTE PTR [rax],al
    c0ff:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    c102:	4f 54                	rex.WRXB push r12
    c104:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    c108:	50                   	push   rax
    c109:	3a 20                	cmp    ah,BYTE PTR [rax]
    c10b:	50                   	push   rax
    c10c:	52                   	push   rdx
    c10d:	4f                   	rex.WRXB
    c10e:	42                   	rex.X
    c10f:	45 3a 20             	cmp    r12b,BYTE PTR [r8]
    c112:	57                   	push   rdi
    c113:	68 6f 20 68 61       	push   0x6168206f
    c118:	73 20                	jae    c13a <_IO_stdin_used+0x13a>
    c11a:	25 73 3f 0a 00       	and    eax,0xa3f73
    c11f:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    c122:	4f 54                	rex.WRXB push r12
    c124:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    c128:	50                   	push   rax
    c129:	3a 20                	cmp    ah,BYTE PTR [rax]
    c12b:	57                   	push   rdi
    c12c:	68 6f 20 69 73       	push   0x7369206f
    c131:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    c134:	20 25 73 3f 20 54    	and    BYTE PTR [rip+0x54203f73],ah        # 542100ad <_end+0x540d4c6d>
    c13a:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    c13c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c13d:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # cbb6 <_IO_stdin_used+0xbb6>
    c143:	00 00                	add    BYTE PTR [rax],al
    c145:	00 00                	add    BYTE PTR [rax],al
    c147:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    c14a:	4f 54                	rex.WRXB push r12
    c14c:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    c150:	50                   	push   rax
    c151:	3a 20                	cmp    ah,BYTE PTR [rax]
    c153:	52                   	push   rdx
    c154:	45 50                	rex.RB push r8
    c156:	4c 59                	rex.WR pop rcx
    c158:	3a 20                	cmp    ah,BYTE PTR [rax]
    c15a:	25 73 20 69 73       	and    eax,0x73692073
    c15f:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    c162:	20 25 73 0a 00 55    	and    BYTE PTR [rip+0x55000a73],ah        # 5500cbdb <_end+0x54ed179b>
    c168:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c169:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c16d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c16e:	20 41 52             	and    BYTE PTR [rcx+0x52],al
    c171:	50                   	push   rax
    c172:	20 6f 70             	and    BYTE PTR [rdi+0x70],ch
    c175:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
    c178:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    c17b:	25 64 0a 00 1b       	and    eax,0x1b000a64
    c180:	5b                   	pop    rbx
    c181:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    c184:	4c                   	rex.WR
    c185:	4f                   	rex.WRXB
    c186:	4f 50                	rex.WRXB push r8
    c188:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de201 <_end+0x3e1a2dc1>
    c18e:	20 25 73 00 20 52    	and    BYTE PTR [rip+0x52200073],ah        # 5220c207 <_end+0x520d0dc7>
    c194:	45 50                	rex.RB push r8
    c196:	4c 59                	rex.WR pop rcx
    c198:	20 00                	and    BYTE PTR [rax],al
    c19a:	20 55 4e             	and    BYTE PTR [rbp+0x4e],dl
    c19d:	4b                   	rex.WXB
    c19e:	4e                   	rex.WRX
    c19f:	4f 57                	rex.WRXB push r15
    c1a1:	4e 20 4c 4f 4f       	rex.WRX and BYTE PTR [rdi+r9*2+0x4f],r9b
    c1a6:	50                   	push   rax
    c1a7:	20 46 55             	and    BYTE PTR [rsi+0x55],al
    c1aa:	4e                   	rex.WRX
    c1ab:	43 54                	rex.XB push r12
    c1ad:	49                   	rex.WB
    c1ae:	4f                   	rex.WRXB
    c1af:	4e 3a 25 64 20 0a 00 	rex.WRX cmp r12b,BYTE PTR [rip+0xa2064]        # ae21a <rules+0x9d17a>
    c1b6:	00 00                	add    BYTE PTR [rax],al
    c1b8:	25 30 32 78 3a       	and    eax,0x3a783230
    c1bd:	25 30 32 78 3a       	and    eax,0x3a783230
    c1c2:	25 30 32 78 3a       	and    eax,0x3a783230
    c1c7:	25 30 32 78 3a       	and    eax,0x3a783230
    c1cc:	25 30 32 78 3a       	and    eax,0x3a783230
    c1d1:	25 30 32 78 00       	and    eax,0x783230
    c1d6:	25 64 2e 25 64       	and    eax,0x64252e64
    c1db:	2e 25 64 2e 25 64    	cs and eax,0x64252e64
    c1e1:	00 00                	add    BYTE PTR [rax],al
    c1e3:	00 00                	add    BYTE PTR [rax],al
    c1e5:	00 00                	add    BYTE PTR [rax],al
    c1e7:	00 25 30 32 78 25    	add    BYTE PTR [rip+0x25783230],ah        # 2578f41d <_end+0x25653fdd>
    c1ed:	30 32                	xor    BYTE PTR [rdx],dh
    c1ef:	78 3a                	js     c22b <_IO_stdin_used+0x22b>
    c1f1:	25 30 32 78 25       	and    eax,0x25783230
    c1f6:	30 32                	xor    BYTE PTR [rdx],dh
    c1f8:	78 3a                	js     c234 <_IO_stdin_used+0x234>
    c1fa:	25 30 32 78 25       	and    eax,0x25783230
    c1ff:	30 32                	xor    BYTE PTR [rdx],dh
    c201:	78 3a                	js     c23d <_IO_stdin_used+0x23d>
    c203:	25 30 32 78 25       	and    eax,0x25783230
    c208:	30 32                	xor    BYTE PTR [rdx],dh
    c20a:	78 3a                	js     c246 <_IO_stdin_used+0x246>
    c20c:	25 30 32 78 25       	and    eax,0x25783230
    c211:	30 32                	xor    BYTE PTR [rdx],dh
    c213:	78 3a                	js     c24f <_IO_stdin_used+0x24f>
    c215:	25 30 32 78 25       	and    eax,0x25783230
    c21a:	30 32                	xor    BYTE PTR [rdx],dh
    c21c:	78 3a                	js     c258 <_IO_stdin_used+0x258>
    c21e:	25 30 32 78 25       	and    eax,0x25783230
    c223:	30 32                	xor    BYTE PTR [rdx],dh
    c225:	78 3a                	js     c261 <_IO_stdin_used+0x261>
    c227:	25 30 32 78 25       	and    eax,0x25783230
    c22c:	30 32                	xor    BYTE PTR [rdx],dh
    c22e:	78 00                	js     c230 <_IO_stdin_used+0x230>
    c230:	25 64 2d 25 30       	and    eax,0x30252d64
    c235:	32 64 2d 25          	xor    ah,BYTE PTR [rbp+rbp*1+0x25]
    c239:	30 32                	xor    BYTE PTR [rdx],dh
    c23b:	64 20 25 30 32 64 3a 	and    BYTE PTR fs:[rip+0x3a643230],ah        # 3a64f472 <_end+0x3a514032>
    c242:	25 30 32 64 3a       	and    eax,0x3a643230
    c247:	25 30 32 64 00       	and    eax,0x643230
    c24c:	25 73 3a 20 25       	and    eax,0x25203a73
    c251:	73 0a                	jae    c25d <_IO_stdin_used+0x25d>
    c253:	00 00                	add    BYTE PTR [rax],al
    c255:	00 00                	add    BYTE PTR [rax],al
    c257:	00 25 73 20 46 6f    	add    BYTE PTR [rip+0x6f462073],ah        # 6f46e2d0 <_end+0x6f332e90>
    c25d:	75 6e                	jne    c2cd <_IO_stdin_used+0x2cd>
    c25f:	64 20 62 6c          	and    BYTE PTR fs:[rdx+0x6c],ah
    c263:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c264:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    c267:	64 20 69 70          	and    BYTE PTR fs:[rcx+0x70],ch
    c26b:	76 34                	jbe    c2a1 <_IO_stdin_used+0x2a1>
    c26d:	20 61 64             	and    BYTE PTR [rcx+0x64],ah
    c270:	64 72 65             	fs jb  c2d8 <_IO_stdin_used+0x2d8>
    c273:	73 73                	jae    c2e8 <_IO_stdin_used+0x2e8>
    c275:	28 64 65 73          	sub    BYTE PTR [rbp+riz*2+0x73],ah
    c279:	74 29                	je     c2a4 <_IO_stdin_used+0x2a4>
    c27b:	3a 20                	cmp    ah,BYTE PTR [rax]
    c27d:	25 73 0a 00 00       	and    eax,0xa73
    c282:	00 00                	add    BYTE PTR [rax],al
    c284:	00 00                	add    BYTE PTR [rax],al
    c286:	00 00                	add    BYTE PTR [rax],al
    c288:	25 73 20 46 6f       	and    eax,0x6f462073
    c28d:	75 6e                	jne    c2fd <_IO_stdin_used+0x2fd>
    c28f:	64 20 62 6c          	and    BYTE PTR fs:[rdx+0x6c],ah
    c293:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c294:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    c297:	64 20 69 70          	and    BYTE PTR fs:[rcx+0x70],ch
    c29b:	76 34                	jbe    c2d1 <_IO_stdin_used+0x2d1>
    c29d:	20 61 64             	and    BYTE PTR [rcx+0x64],ah
    c2a0:	64 72 65             	fs jb  c308 <_IO_stdin_used+0x308>
    c2a3:	73 73                	jae    c318 <_IO_stdin_used+0x318>
    c2a5:	28 73 72             	sub    BYTE PTR [rbx+0x72],dh
    c2a8:	63 29                	movsxd ebp,DWORD PTR [rcx]
    c2aa:	3a 20                	cmp    ah,BYTE PTR [rax]
    c2ac:	25 73 0a 00 1b       	and    eax,0x1b000a73
    c2b1:	5b                   	pop    rbx
    c2b2:	34 6d                	xor    al,0x6d
    c2b4:	00 25 73 46 72 61    	add    BYTE PTR [rip+0x61724673],ah        # 6173092d <_end+0x615f54ed>
    c2ba:	67 6d                	ins    DWORD PTR es:[edi],dx
    c2bc:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c2be:	74 65                	je     c325 <_IO_stdin_used+0x325>
    c2c0:	64 20 00             	and    BYTE PTR fs:[rax],al
    c2c3:	1b 5b 30             	sbb    ebx,DWORD PTR [rbx+0x30]
    c2c6:	6d                   	ins    DWORD PTR es:[rdi],dx
    c2c7:	00 25 73 00 20 25    	add    BYTE PTR [rip+0x25200073],ah        # 2520c340 <_end+0x250d0f00>
    c2cd:	73 20                	jae    c2ef <_IO_stdin_used+0x2ef>
    c2cf:	2d 3e 20 25 73       	sub    eax,0x7325203e
    c2d4:	25 73 0a 00 49       	and    eax,0x49000a73
    c2d9:	50                   	push   rax
    c2da:	76 34                	jbe    c310 <_IO_stdin_used+0x310>
    c2dc:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de355 <_end+0x3e1a2f15>
    c2e2:	20 25 73 20 50 72    	and    BYTE PTR [rip+0x72502073],ah        # 7250e35b <_end+0x723d2f1b>
    c2e8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c2e9:	74 6f                	je     c35a <_IO_stdin_used+0x35a>
    c2eb:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    c2ee:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    c2f1:	6d                   	ins    DWORD PTR es:[rdi],dx
    c2f2:	62                   	(bad)  
    c2f3:	65 72 20             	gs jb  c316 <_IO_stdin_used+0x316>
    c2f6:	3d 20 25 64 0a       	cmp    eax,0xa642520
    c2fb:	00 00                	add    BYTE PTR [rax],al
    c2fd:	00 00                	add    BYTE PTR [rax],al
    c2ff:	00 1b                	add    BYTE PTR [rbx],bl
    c301:	5b                   	pop    rbx
    c302:	33 35 6d 00 25 73    	xor    esi,DWORD PTR [rip+0x7325006d]        # 7325c375 <_end+0x73120f35>
    c308:	00 49 50             	add    BYTE PTR [rcx+0x50],cl
    c30b:	76 36                	jbe    c343 <_IO_stdin_used+0x343>
    c30d:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de386 <_end+0x3e1a2f46>
    c313:	20 25 73 0a 00 09    	and    BYTE PTR [rip+0x9000a73],ah        # 900cd8c <_end+0x8ed194c>
    c319:	49                   	rex.WB
    c31a:	43                   	rex.XB
    c31b:	4d 50                	rex.WRB push r8
    c31d:	76 36                	jbe    c355 <_IO_stdin_used+0x355>
    c31f:	20 00                	and    BYTE PTR [rax],al
    c321:	20 52 6f             	and    BYTE PTR [rdx+0x6f],dl
    c324:	75 74                	jne    c39a <_IO_stdin_used+0x39a>
    c326:	65 72 20             	gs jb  c349 <_IO_stdin_used+0x349>
    c329:	53                   	push   rbx
    c32a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c32b:	6c                   	ins    BYTE PTR es:[rdi],dx
    c32c:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    c333:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c334:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c335:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    c338:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c339:	6d                   	ins    DWORD PTR es:[rdi],dx
    c33a:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # cdb3 <_IO_stdin_used+0xdb3>
    c340:	4d 75 6c             	rex.WRB jne c3af <_IO_stdin_used+0x3af>
    c343:	74 69                	je     c3ae <_IO_stdin_used+0x3ae>
    c345:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    c348:	74 20                	je     c36a <_IO_stdin_used+0x36a>
    c34a:	4c 69 73 74 65 6e 65 	imul   r14,QWORD PTR [rbx+0x74],0x72656e65
    c351:	72 
    c352:	20 52 65             	and    BYTE PTR [rdx+0x65],dl
    c355:	70 6f                	jo     c3c6 <_IO_stdin_used+0x3c6>
    c357:	72 74                	jb     c3cd <_IO_stdin_used+0x3cd>
    c359:	20 4d 65             	and    BYTE PTR [rbp+0x65],cl
    c35c:	73 73                	jae    c3d1 <_IO_stdin_used+0x3d1>
    c35e:	61                   	(bad)  
    c35f:	67 65 20 76 32       	and    BYTE PTR gs:[esi+0x32],dh
    c364:	00 4d 75             	add    BYTE PTR [rbp+0x75],cl
    c367:	6c                   	ins    BYTE PTR es:[rdi],dx
    c368:	74 69                	je     c3d3 <_IO_stdin_used+0x3d3>
    c36a:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    c36d:	74 20                	je     c38f <_IO_stdin_used+0x38f>
    c36f:	20 4c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],cl
    c373:	74 65                	je     c3da <_IO_stdin_used+0x3da>
    c375:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c376:	65 72 20             	gs jb  c399 <_IO_stdin_used+0x399>
    c379:	51                   	push   rcx
    c37a:	75 65                	jne    c3e1 <_IO_stdin_used+0x3e1>
    c37c:	72 79                	jb     c3f7 <_IO_stdin_used+0x3f7>
    c37e:	00 4e 65             	add    BYTE PTR [rsi+0x65],cl
    c381:	69 67 68 62 6f 72 20 	imul   esp,DWORD PTR [rdi+0x68],0x20726f62
    c388:	53                   	push   rbx
    c389:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c38a:	6c                   	ins    BYTE PTR es:[rdi],dx
    c38b:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    c392:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c393:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c394:	00 1b                	add    BYTE PTR [rbx],bl
    c396:	5b                   	pop    rbx
    c397:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    c39a:	00 00                	add    BYTE PTR [rax],al
    c39c:	00 00                	add    BYTE PTR [rax],al
    c39e:	00 00                	add    BYTE PTR [rax],al
    c3a0:	54                   	push   rsp
    c3a1:	69 6d 65 20 73 74 61 	imul   ebp,DWORD PTR [rbp+0x65],0x61747320
    c3a8:	6d                   	ins    DWORD PTR es:[rdi],dx
    c3a9:	70 20                	jo     c3cb <_IO_stdin_used+0x3cb>
    c3ab:	72 65                	jb     c412 <_IO_stdin_used+0x412>
    c3ad:	71 75                	jno    c424 <_IO_stdin_used+0x424>
    c3af:	65 73 74             	gs jae c426 <_IO_stdin_used+0x426>
    c3b2:	3a 20                	cmp    ah,BYTE PTR [rax]
    c3b4:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    c3b9:	20 25 73 28 63 6f    	and    BYTE PTR [rip+0x6f632873],ah        # 6f63ec32 <_end+0x6f5037f2>
    c3bf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c3c0:	66 69 67 20 73 70    	imul   sp,WORD PTR [rdi+0x20],0x7073
    c3c6:	65 63 69 66          	movsxd ebp,DWORD PTR gs:[rcx+0x66]
    c3ca:	69 65 73 20 73 74 72 	imul   esp,DWORD PTR [rbp+0x73],0x72747320
    c3d1:	69 63 74 20 74 69 6d 	imul   esp,DWORD PTR [rbx+0x74],0x6d697420
    c3d8:	65 73 74             	gs jae c44f <_IO_stdin_used+0x44f>
    c3db:	61                   	(bad)  
    c3dc:	6d                   	ins    DWORD PTR es:[rdi],dx
    c3dd:	70 20                	jo     c3ff <_IO_stdin_used+0x3ff>
    c3df:	61                   	(bad)  
    c3e0:	6c                   	ins    BYTE PTR es:[rdi],dx
    c3e1:	65 72 74             	gs jb  c458 <_IO_stdin_used+0x458>
    c3e4:	73 29                	jae    c40f <_IO_stdin_used+0x40f>
    c3e6:	0a 00                	or     al,BYTE PTR [rax]
    c3e8:	50                   	push   rax
    c3e9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c3ea:	73 73                	jae    c45f <_IO_stdin_used+0x45f>
    c3ec:	69 62 6c 65 20 6e 6d 	imul   esp,DWORD PTR [rdx+0x6c],0x6d6e2065
    c3f3:	61                   	(bad)  
    c3f4:	70 20                	jo     c416 <_IO_stdin_used+0x416>
    c3f6:	68 6f 73 74 20       	push   0x2074736f
    c3fb:	61                   	(bad)  
    c3fc:	6c                   	ins    BYTE PTR es:[rdi],dx
    c3fd:	69 76 65 20 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x65686320
    c404:	63 6b 20             	movsxd ebp,DWORD PTR [rbx+0x20]
    c407:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    c40c:	20 25 73 3b 20 6d    	and    BYTE PTR [rip+0x6d203b73],ah        # 6d20ff85 <_end+0x6d0d4b45>
    c412:	61                   	(bad)  
    c413:	74 63                	je     c478 <_IO_stdin_used+0x478>
    c415:	68 65 64 20 49       	push   0x49206465
    c41a:	43                   	rex.XB
    c41b:	4d 50                	rex.WRB push r8
    c41d:	20 45 63             	and    BYTE PTR [rbp+0x63],al
    c420:	68 6f 2c 20 54       	push   0x54202c6f
    c425:	43 50                	rex.XB push r8
    c427:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    c42a:	4e 2c 20             	rex.WRX sub al,0x20
    c42d:	54                   	push   rsp
    c42e:	43 50                	rex.XB push r8
    c430:	20 41 43             	and    BYTE PTR [rcx+0x43],al
    c433:	4b 2c 20             	rex.WXB sub al,0x20
    c436:	61                   	(bad)  
    c437:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c438:	64 20 49 43          	and    BYTE PTR fs:[rcx+0x43],cl
    c43c:	4d 50                	rex.WRB push r8
    c43e:	20 54 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dl
    c442:	65 73 74             	gs jae c4b9 <_IO_stdin_used+0x4b9>
    c445:	61                   	(bad)  
    c446:	6d                   	ins    DWORD PTR es:[rdi],dx
    c447:	70 20                	jo     c469 <_IO_stdin_used+0x469>
    c449:	72 65                	jb     c4b0 <_IO_stdin_used+0x4b0>
    c44b:	71 75                	jno    c4c2 <_IO_stdin_used+0x4c2>
    c44d:	65 73 74             	gs jae c4c4 <_IO_stdin_used+0x4c4>
    c450:	0a 00                	or     al,BYTE PTR [rax]
    c452:	61                   	(bad)  
    c453:	00 00                	add    BYTE PTR [rax],al
    c455:	00 00                	add    BYTE PTR [rax],al
    c457:	00 50 6f             	add    BYTE PTR [rax+0x6f],dl
    c45a:	73 73                	jae    c4cf <_IO_stdin_used+0x4cf>
    c45c:	69 62 6c 65 20 6e 6d 	imul   esp,DWORD PTR [rdx+0x6c],0x6d6e2065
    c463:	61                   	(bad)  
    c464:	70 20                	jo     c486 <_IO_stdin_used+0x486>
    c466:	68 6f 73 74 20       	push   0x2074736f
    c46b:	61                   	(bad)  
    c46c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c46d:	69 76 65 20 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x65686320
    c474:	63 6b 20             	movsxd ebp,DWORD PTR [rbx+0x20]
    c477:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    c47c:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461e4f5 <_end+0x744e30b5>
    c482:	20 25 73 3b 20 6d    	and    BYTE PTR [rip+0x6d203b73],ah        # 6d20fffb <_end+0x6d0d4bbb>
    c488:	61                   	(bad)  
    c489:	74 63                	je     c4ee <_IO_stdin_used+0x4ee>
    c48b:	68 65 64 20 49       	push   0x49206465
    c490:	43                   	rex.XB
    c491:	4d 50                	rex.WRB push r8
    c493:	20 45 63             	and    BYTE PTR [rbp+0x63],al
    c496:	68 6f 2c 20 54       	push   0x54202c6f
    c49b:	43 50                	rex.XB push r8
    c49d:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    c4a0:	4e 2c 20             	rex.WRX sub al,0x20
    c4a3:	54                   	push   rsp
    c4a4:	43 50                	rex.XB push r8
    c4a6:	20 41 43             	and    BYTE PTR [rcx+0x43],al
    c4a9:	4b 2c 20             	rex.WXB sub al,0x20
    c4ac:	61                   	(bad)  
    c4ad:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c4ae:	64 20 49 43          	and    BYTE PTR fs:[rcx+0x43],cl
    c4b2:	4d 50                	rex.WRB push r8
    c4b4:	20 54 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dl
    c4b8:	65 73 74             	gs jae c52f <_IO_stdin_used+0x52f>
    c4bb:	61                   	(bad)  
    c4bc:	6d                   	ins    DWORD PTR es:[rdi],dx
    c4bd:	70 20                	jo     c4df <_IO_stdin_used+0x4df>
    c4bf:	72 65                	jb     c526 <_IO_stdin_used+0x526>
    c4c1:	71 75                	jno    c538 <_IO_stdin_used+0x538>
    c4c3:	65 73 74             	gs jae c53a <_IO_stdin_used+0x53a>
    c4c6:	0a 00                	or     al,BYTE PTR [rax]
    c4c8:	49 50                	rex.WB push r8
    c4ca:	76 34                	jbe    c500 <_IO_stdin_used+0x500>
    c4cc:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de545 <_end+0x3e1a3105>
    c4d2:	20 25 73 0a 00 09    	and    BYTE PTR [rip+0x9000a73],ah        # 900cf4b <_end+0x8ed1b0b>
    c4d8:	49                   	rex.WB
    c4d9:	43                   	rex.XB
    c4da:	4d 50                	rex.WRB push r8
    c4dc:	20 00                	and    BYTE PTR [rax],al
    c4de:	20 65 63             	and    BYTE PTR [rbp+0x63],ah
    c4e1:	68 6f 20 72 65       	push   0x6572206f
    c4e6:	70 6c                	jo     c554 <_IO_stdin_used+0x554>
    c4e8:	79 00                	jns    c4ea <_IO_stdin_used+0x4ea>
    c4ea:	20 64 65 73          	and    BYTE PTR [rbp+riz*2+0x73],ah
    c4ee:	74 69                	je     c559 <_IO_stdin_used+0x559>
    c4f0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c4f1:	61                   	(bad)  
    c4f2:	74 69                	je     c55d <_IO_stdin_used+0x55d>
    c4f4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c4f5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c4f6:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    c4f9:	72 65                	jb     c560 <_IO_stdin_used+0x560>
    c4fb:	61                   	(bad)  
    c4fc:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c4ff:	62                   	(bad)  
    c500:	6c                   	ins    BYTE PTR es:[rdi],dx
    c501:	65 28 00             	sub    BYTE PTR gs:[rax],al
    c504:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    c507:	74 77                	je     c580 <_IO_stdin_used+0x580>
    c509:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c50a:	72 6b                	jb     c577 <_IO_stdin_used+0x577>
    c50c:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c50f:	72 65                	jb     c576 <_IO_stdin_used+0x576>
    c511:	61                   	(bad)  
    c512:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c515:	62                   	(bad)  
    c516:	6c                   	ins    BYTE PTR es:[rdi],dx
    c517:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c51a:	00 20                	add    BYTE PTR [rax],ah
    c51c:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c51e:	73 74                	jae    c594 <_IO_stdin_used+0x594>
    c520:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c523:	72 65                	jb     c58a <_IO_stdin_used+0x58a>
    c525:	61                   	(bad)  
    c526:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c529:	62                   	(bad)  
    c52a:	6c                   	ins    BYTE PTR es:[rdi],dx
    c52b:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c52e:	00 20                	add    BYTE PTR [rax],ah
    c530:	50                   	push   rax
    c531:	72 6f                	jb     c5a2 <_IO_stdin_used+0x5a2>
    c533:	74 6f                	je     c5a4 <_IO_stdin_used+0x5a4>
    c535:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    c538:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c53b:	72 65                	jb     c5a2 <_IO_stdin_used+0x5a2>
    c53d:	61                   	(bad)  
    c53e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c541:	62                   	(bad)  
    c542:	6c                   	ins    BYTE PTR es:[rdi],dx
    c543:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c546:	00 20                	add    BYTE PTR [rax],ah
    c548:	50                   	push   rax
    c549:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c54a:	72 74                	jb     c5c0 <_IO_stdin_used+0x5c0>
    c54c:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c54f:	72 65                	jb     c5b6 <_IO_stdin_used+0x5b6>
    c551:	61                   	(bad)  
    c552:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c555:	62                   	(bad)  
    c556:	6c                   	ins    BYTE PTR es:[rdi],dx
    c557:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c55a:	00 20                	add    BYTE PTR [rax],ah
    c55c:	46 72 61             	rex.RX jb c5c0 <_IO_stdin_used+0x5c0>
    c55f:	67 6d                	ins    DWORD PTR es:[edi],dx
    c561:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c563:	74 61                	je     c5c6 <_IO_stdin_used+0x5c6>
    c565:	74 69                	je     c5d0 <_IO_stdin_used+0x5d0>
    c567:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c568:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c569:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    c56c:	65 64 65 64 20 29    	gs fs gs and BYTE PTR fs:[rcx],ch
    c572:	00 20                	add    BYTE PTR [rax],ah
    c574:	53                   	push   rbx
    c575:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c576:	75 72                	jne    c5ea <_IO_stdin_used+0x5ea>
    c578:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c57b:	52                   	push   rdx
    c57c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c57d:	75 74                	jne    c5f3 <_IO_stdin_used+0x5f3>
    c57f:	65 20 46 61          	and    BYTE PTR gs:[rsi+0x61],al
    c583:	69 6c 65 64 20 29 00 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x2920
    c58a:	00 
    c58b:	00 00                	add    BYTE PTR [rax],al
    c58d:	00 00                	add    BYTE PTR [rax],al
    c58f:	00 20                	add    BYTE PTR [rax],ah
    c591:	44                   	rex.R
    c592:	65 73 74             	gs jae c609 <_IO_stdin_used+0x609>
    c595:	69 6e 61 74 69 6f 6e 	imul   ebp,DWORD PTR [rsi+0x61],0x6e6f6974
    c59c:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    c59f:	74 77                	je     c618 <_IO_stdin_used+0x618>
    c5a1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5a2:	72 6b                	jb     c60f <_IO_stdin_used+0x60f>
    c5a4:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c5a7:	72 65                	jb     c60e <_IO_stdin_used+0x60e>
    c5a9:	61                   	(bad)  
    c5aa:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c5ad:	62                   	(bad)  
    c5ae:	6c                   	ins    BYTE PTR es:[rdi],dx
    c5af:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c5b2:	00 00                	add    BYTE PTR [rax],al
    c5b4:	00 00                	add    BYTE PTR [rax],al
    c5b6:	00 00                	add    BYTE PTR [rax],al
    c5b8:	20 44 65 73          	and    BYTE PTR [rbp+riz*2+0x73],al
    c5bc:	74 69                	je     c627 <_IO_stdin_used+0x627>
    c5be:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c5bf:	61                   	(bad)  
    c5c0:	74 69                	je     c62b <_IO_stdin_used+0x62b>
    c5c2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5c3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c5c4:	20 48 6f             	and    BYTE PTR [rax+0x6f],cl
    c5c7:	73 74                	jae    c63d <_IO_stdin_used+0x63d>
    c5c9:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c5cc:	72 65                	jb     c633 <_IO_stdin_used+0x633>
    c5ce:	61                   	(bad)  
    c5cf:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c5d2:	62                   	(bad)  
    c5d3:	6c                   	ins    BYTE PTR es:[rdi],dx
    c5d4:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c5d7:	00 20                	add    BYTE PTR [rax],ah
    c5d9:	53                   	push   rbx
    c5da:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5db:	75 72                	jne    c64f <_IO_stdin_used+0x64f>
    c5dd:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c5e0:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c5e2:	73 74                	jae    c658 <_IO_stdin_used+0x658>
    c5e4:	20 49 73             	and    BYTE PTR [rcx+0x73],cl
    c5e7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5e8:	6c                   	ins    BYTE PTR es:[rdi],dx
    c5e9:	61                   	(bad)  
    c5ea:	74 65                	je     c651 <_IO_stdin_used+0x651>
    c5ec:	64 20 29             	and    BYTE PTR fs:[rcx],ch
    c5ef:	00 20                	add    BYTE PTR [rax],ah
    c5f1:	4e                   	rex.WRX
    c5f2:	65 74 77             	gs je  c66c <_IO_stdin_used+0x66c>
    c5f5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5f6:	72 6b                	jb     c663 <_IO_stdin_used+0x663>
    c5f8:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    c5fb:	6d                   	ins    DWORD PTR es:[rdi],dx
    c5fc:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    c603:	74 69                	je     c66e <_IO_stdin_used+0x66e>
    c605:	76 65                	jbe    c66c <_IO_stdin_used+0x66c>
    c607:	6c                   	ins    BYTE PTR es:[rdi],dx
    c608:	79 20                	jns    c62a <_IO_stdin_used+0x62a>
    c60a:	50                   	push   rax
    c60b:	72 6f                	jb     c67c <_IO_stdin_used+0x67c>
    c60d:	68 69 62 69 74       	push   0x74696269
    c612:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    c616:	00 00                	add    BYTE PTR [rax],al
    c618:	20 48 6f             	and    BYTE PTR [rax+0x6f],cl
    c61b:	73 74                	jae    c691 <_IO_stdin_used+0x691>
    c61d:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    c620:	6d                   	ins    DWORD PTR es:[rdi],dx
    c621:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    c628:	74 69                	je     c693 <_IO_stdin_used+0x693>
    c62a:	76 65                	jbe    c691 <_IO_stdin_used+0x691>
    c62c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c62d:	79 20                	jns    c64f <_IO_stdin_used+0x64f>
    c62f:	50                   	push   rax
    c630:	72 6f                	jb     c6a1 <_IO_stdin_used+0x6a1>
    c632:	68 69 62 69 74       	push   0x74696269
    c637:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    c63b:	00 00                	add    BYTE PTR [rax],al
    c63d:	00 00                	add    BYTE PTR [rax],al
    c63f:	00 20                	add    BYTE PTR [rax],ah
    c641:	4e                   	rex.WRX
    c642:	65 74 77             	gs je  c6bc <_IO_stdin_used+0x6bc>
    c645:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c646:	72 6b                	jb     c6b3 <_IO_stdin_used+0x6b3>
    c648:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c64b:	72 65                	jb     c6b2 <_IO_stdin_used+0x6b2>
    c64d:	61                   	(bad)  
    c64e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c651:	62                   	(bad)  
    c652:	6c                   	ins    BYTE PTR es:[rdi],dx
    c653:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    c657:	72 20                	jb     c679 <_IO_stdin_used+0x679>
    c659:	54                   	push   rsp
    c65a:	4f 53                	rex.WRXB push r11
    c65c:	20 29                	and    BYTE PTR [rcx],ch
    c65e:	00 20                	add    BYTE PTR [rax],ah
    c660:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c662:	73 74                	jae    c6d8 <_IO_stdin_used+0x6d8>
    c664:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c667:	72 65                	jb     c6ce <_IO_stdin_used+0x6ce>
    c669:	61                   	(bad)  
    c66a:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c66d:	62                   	(bad)  
    c66e:	6c                   	ins    BYTE PTR es:[rdi],dx
    c66f:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    c673:	72 20                	jb     c695 <_IO_stdin_used+0x695>
    c675:	54                   	push   rsp
    c676:	4f 53                	rex.WRXB push r11
    c678:	20 29                	and    BYTE PTR [rcx],ch
    c67a:	00 00                	add    BYTE PTR [rax],al
    c67c:	00 00                	add    BYTE PTR [rax],al
    c67e:	00 00                	add    BYTE PTR [rax],al
    c680:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c683:	6d                   	ins    DWORD PTR es:[rdi],dx
    c684:	6d                   	ins    DWORD PTR es:[rdi],dx
    c685:	75 6e                	jne    c6f5 <_IO_stdin_used+0x6f5>
    c687:	69 63 61 74 69 6f 6e 	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
    c68e:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    c691:	6d                   	ins    DWORD PTR es:[rdi],dx
    c692:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    c699:	74 69                	je     c704 <_IO_stdin_used+0x704>
    c69b:	76 65                	jbe    c702 <_IO_stdin_used+0x702>
    c69d:	6c                   	ins    BYTE PTR es:[rdi],dx
    c69e:	79 20                	jns    c6c0 <_IO_stdin_used+0x6c0>
    c6a0:	50                   	push   rax
    c6a1:	72 6f                	jb     c712 <_IO_stdin_used+0x712>
    c6a3:	68 69 62 69 74       	push   0x74696269
    c6a8:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    c6ac:	00 20                	add    BYTE PTR [rax],ah
    c6ae:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c6b0:	73 74                	jae    c726 <_IO_stdin_used+0x726>
    c6b2:	20 50 72             	and    BYTE PTR [rax+0x72],dl
    c6b5:	65 63 65 64          	movsxd esp,DWORD PTR gs:[rbp+0x64]
    c6b9:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c6bb:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c6be:	56                   	push   rsi
    c6bf:	69 6f 6c 61 74 69 6f 	imul   ebp,DWORD PTR [rdi+0x6c],0x6f697461
    c6c6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c6c7:	20 29                	and    BYTE PTR [rcx],ch
    c6c9:	00 00                	add    BYTE PTR [rax],al
    c6cb:	00 00                	add    BYTE PTR [rax],al
    c6cd:	00 00                	add    BYTE PTR [rax],al
    c6cf:	00 20                	add    BYTE PTR [rax],ah
    c6d1:	50                   	push   rax
    c6d2:	72 65                	jb     c739 <_IO_stdin_used+0x739>
    c6d4:	63 65 64             	movsxd esp,DWORD PTR [rbp+0x64]
    c6d7:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c6d9:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c6dc:	43 75 74             	rex.XB jne c753 <_IO_stdin_used+0x753>
    c6df:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c6e0:	66 66 20 69 6e       	data16 data16 and BYTE PTR [rcx+0x6e],ch
    c6e5:	20 45 66             	and    BYTE PTR [rbp+0x66],al
    c6e8:	66 65 63 74 20 29    	movsxd si,DWORD PTR gs:[rax+riz*1+0x29]
    c6ee:	00 20                	add    BYTE PTR [rax],ah
    c6f0:	55                   	push   rbp
    c6f1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c6f2:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c6f6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c6f7:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c6fa:	64 65 3d 25 64 20 29 	fs gs cmp eax,0x29206425
    c701:	0a 00                	or     al,BYTE PTR [rax]
    c703:	00 00                	add    BYTE PTR [rax],al
    c705:	00 00                	add    BYTE PTR [rax],al
    c707:	00 20                	add    BYTE PTR [rax],ah
    c709:	53                   	push   rbx
    c70a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c70b:	75 72                	jne    c77f <_IO_stdin_used+0x77f>
    c70d:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c710:	51                   	push   rcx
    c711:	75 65                	jne    c778 <_IO_stdin_used+0x778>
    c713:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c714:	63 68 28             	movsxd ebp,DWORD PTR [rax+0x28]
    c717:	20 66 6c             	and    BYTE PTR [rsi+0x6c],ah
    c71a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c71b:	77 20                	ja     c73d <_IO_stdin_used+0x73d>
    c71d:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    c720:	74 72                	je     c794 <_IO_stdin_used+0x794>
    c722:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c723:	6c                   	ins    BYTE PTR es:[rdi],dx
    c724:	20 29                	and    BYTE PTR [rcx],ch
    c726:	00 20                	add    BYTE PTR [rax],ah
    c728:	52                   	push   rdx
    c729:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x28207463
    c730:	20 28 
    c732:	00 20                	add    BYTE PTR [rax],ah
    c734:	52                   	push   rdx
    c735:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c73c:	20 66 
    c73e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c73f:	72 20                	jb     c761 <_IO_stdin_used+0x761>
    c741:	4e                   	rex.WRX
    c742:	65 74 77             	gs je  c7bc <_IO_stdin_used+0x7bc>
    c745:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c746:	72 6b                	jb     c7b3 <_IO_stdin_used+0x7b3>
    c748:	20 29                	and    BYTE PTR [rcx],ch
    c74a:	00 20                	add    BYTE PTR [rax],ah
    c74c:	52                   	push   rdx
    c74d:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c754:	20 66 
    c756:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c757:	72 20                	jb     c779 <_IO_stdin_used+0x779>
    c759:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c75b:	73 74                	jae    c7d1 <_IO_stdin_used+0x7d1>
    c75d:	20 29                	and    BYTE PTR [rcx],ch
    c75f:	00 20                	add    BYTE PTR [rax],ah
    c761:	52                   	push   rdx
    c762:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c769:	20 66 
    c76b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c76c:	72 20                	jb     c78e <_IO_stdin_used+0x78e>
    c76e:	54                   	push   rsp
    c76f:	4f 53                	rex.WRXB push r11
    c771:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    c774:	64 20 4e 65          	and    BYTE PTR fs:[rsi+0x65],cl
    c778:	74 77                	je     c7f1 <_IO_stdin_used+0x7f1>
    c77a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c77b:	72 6b                	jb     c7e8 <_IO_stdin_used+0x7e8>
    c77d:	20 29                	and    BYTE PTR [rcx],ch
    c77f:	00 20                	add    BYTE PTR [rax],ah
    c781:	52                   	push   rdx
    c782:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c789:	20 66 
    c78b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c78c:	72 20                	jb     c7ae <_IO_stdin_used+0x7ae>
    c78e:	54                   	push   rsp
    c78f:	4f 53                	rex.WRXB push r11
    c791:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    c794:	64 20 48 6f          	and    BYTE PTR fs:[rax+0x6f],cl
    c798:	73 74                	jae    c80e <_IO_stdin_used+0x80e>
    c79a:	20 29                	and    BYTE PTR [rcx],ch
    c79c:	00 20                	add    BYTE PTR [rax],ah
    c79e:	65 63 68 6f          	movsxd ebp,DWORD PTR gs:[rax+0x6f]
    c7a2:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    c7a5:	71 75                	jno    c81c <_IO_stdin_used+0x81c>
    c7a7:	65 73 74             	gs jae c81e <_IO_stdin_used+0x81e>
    c7aa:	00 00                	add    BYTE PTR [rax],al
    c7ac:	00 00                	add    BYTE PTR [rax],al
    c7ae:	00 00                	add    BYTE PTR [rax],al
    c7b0:	20 4d 6f             	and    BYTE PTR [rbp+0x6f],cl
    c7b3:	62                   	(bad)  
    c7b4:	69 6c 65 20 49 50 20 	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x41205049
    c7bb:	41 
    c7bc:	64 76 65             	fs jbe c824 <_IO_stdin_used+0x824>
    c7bf:	72 74                	jb     c835 <_IO_stdin_used+0x835>
    c7c1:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    c7c8:	20 28                	and    BYTE PTR [rax],ch
    c7ca:	4e 6f                	rex.WRX outs dx,DWORD PTR ds:[rsi]
    c7cc:	72 6d                	jb     c83b <_IO_stdin_used+0x83b>
    c7ce:	61                   	(bad)  
    c7cf:	6c                   	ins    BYTE PTR es:[rdi],dx
    c7d0:	20 52 6f             	and    BYTE PTR [rdx+0x6f],dl
    c7d3:	75 74                	jne    c849 <_IO_stdin_used+0x849>
    c7d5:	65 72 20             	gs jb  c7f8 <_IO_stdin_used+0x7f8>
    c7d8:	41                   	rex.B
    c7d9:	64 76 65             	fs jbe c841 <_IO_stdin_used+0x841>
    c7dc:	72 74                	jb     c852 <_IO_stdin_used+0x852>
    c7de:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    c7e5:	20 29                	and    BYTE PTR [rcx],ch
    c7e7:	20 29                	and    BYTE PTR [rcx],ch
    c7e9:	0a 20                	or     ah,BYTE PTR [rax]
    c7eb:	00 00                	add    BYTE PTR [rax],al
    c7ed:	00 00                	add    BYTE PTR [rax],al
    c7ef:	00 20                	add    BYTE PTR [rax],ah
    c7f1:	52                   	push   rdx
    c7f2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c7f3:	75 74                	jne    c869 <_IO_stdin_used+0x869>
    c7f5:	65 72 20             	gs jb  c818 <_IO_stdin_used+0x818>
    c7f8:	41                   	rex.B
    c7f9:	64 76 65             	fs jbe c861 <_IO_stdin_used+0x861>
    c7fc:	72 74                	jb     c872 <_IO_stdin_used+0x872>
    c7fe:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    c805:	20 28                	and    BYTE PTR [rax],ch
    c807:	55                   	push   rbp
    c808:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c809:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c80d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c80e:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c811:	64 65 3a 20          	fs cmp ah,BYTE PTR gs:[rax]
    c815:	25 64 20 29 20       	and    eax,0x20292064
    c81a:	29 0a                	sub    DWORD PTR [rdx],ecx
    c81c:	00 20                	add    BYTE PTR [rax],ah
    c81e:	52                   	push   rdx
    c81f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c820:	75 74                	jne    c896 <_IO_stdin_used+0x896>
    c822:	65 72 20             	gs jb  c845 <_IO_stdin_used+0x845>
    c825:	53                   	push   rbx
    c826:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c827:	6c                   	ins    BYTE PTR es:[rdi],dx
    c828:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    c82f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c830:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c831:	20 29                	and    BYTE PTR [rcx],ch
    c833:	00 20                	add    BYTE PTR [rax],ah
    c835:	54                   	push   rsp
    c836:	69 6d 65 20 54 6f 20 	imul   ebp,DWORD PTR [rbp+0x65],0x206f5420
    c83d:	4c 69 76 65 20 65 78 	imul   r14,QWORD PTR [rsi+0x65],0x63786520
    c844:	63 
    c845:	65 65 64 65 64 00 20 	gs gs fs gs add BYTE PTR fs:[rax],ah
    c84c:	28 20                	sub    BYTE PTR [rax],ah
    c84e:	74 74                	je     c8c4 <_IO_stdin_used+0x8c4>
    c850:	6c                   	ins    BYTE PTR es:[rdi],dx
    c851:	20 65 78             	and    BYTE PTR [rbp+0x78],ah
    c854:	63 65 65             	movsxd esp,DWORD PTR [rbp+0x65]
    c857:	64 65 64 20 69 6e    	fs gs and BYTE PTR fs:[rcx+0x6e],ch
    c85d:	20 74 72 61          	and    BYTE PTR [rdx+rsi*2+0x61],dh
    c861:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c862:	73 69                	jae    c8cd <_IO_stdin_used+0x8cd>
    c864:	74 20                	je     c886 <_IO_stdin_used+0x886>
    c866:	29 00                	sub    DWORD PTR [rax],eax
    c868:	20 28                	and    BYTE PTR [rax],ch
    c86a:	20 46 72             	and    BYTE PTR [rsi+0x72],al
    c86d:	61                   	(bad)  
    c86e:	67 6d                	ins    DWORD PTR es:[edi],dx
    c870:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c872:	74 20                	je     c894 <_IO_stdin_used+0x894>
    c874:	52                   	push   rdx
    c875:	65 61                	gs (bad) 
    c877:	73 73                	jae    c8ec <_IO_stdin_used+0x8ec>
    c879:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    c87b:	62                   	(bad)  
    c87c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c87d:	79 20                	jns    c89f <_IO_stdin_used+0x89f>
    c87f:	74 69                	je     c8ea <_IO_stdin_used+0x8ea>
    c881:	6d                   	ins    DWORD PTR es:[rdi],dx
    c882:	65 20 65 78          	and    BYTE PTR gs:[rbp+0x78],ah
    c886:	63 65 65             	movsxd esp,DWORD PTR [rbp+0x65]
    c889:	64 65 64 20 29       	fs gs and BYTE PTR fs:[rcx],ch
    c88e:	00 20                	add    BYTE PTR [rax],ah
    c890:	28 20                	sub    BYTE PTR [rax],ah
    c892:	55                   	push   rbp
    c893:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c894:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c898:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c899:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c89c:	64 65 3a 20          	fs cmp ah,BYTE PTR gs:[rax]
    c8a0:	25 64 29 0a 00       	and    eax,0xa2964
    c8a5:	20 74 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dh
    c8a9:	65 73 74             	gs jae c920 <_IO_stdin_used+0x920>
    c8ac:	61                   	(bad)  
    c8ad:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8ae:	70 20                	jo     c8d0 <_IO_stdin_used+0x8d0>
    c8b0:	72 65                	jb     c917 <_IO_stdin_used+0x917>
    c8b2:	71 75                	jno    c929 <_IO_stdin_used+0x929>
    c8b4:	65 73 74             	gs jae c92b <_IO_stdin_used+0x92b>
    c8b7:	00 20                	add    BYTE PTR [rax],ah
    c8b9:	74 69                	je     c924 <_IO_stdin_used+0x924>
    c8bb:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8bc:	65 73 74             	gs jae c933 <_IO_stdin_used+0x933>
    c8bf:	61                   	(bad)  
    c8c0:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8c1:	70 20                	jo     c8e3 <_IO_stdin_used+0x8e3>
    c8c3:	72 65                	jb     c92a <_IO_stdin_used+0x92a>
    c8c5:	70 6c                	jo     c933 <_IO_stdin_used+0x933>
    c8c7:	79 00                	jns    c8c9 <_IO_stdin_used+0x8c9>
    c8c9:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    c8cc:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c8d0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c8d1:	20 69 63             	and    BYTE PTR [rcx+0x63],ch
    c8d4:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8d5:	70 20                	jo     c8f7 <_IO_stdin_used+0x8f7>
    c8d7:	74 79                	je     c952 <_IO_stdin_used+0x952>
    c8d9:	70 65                	jo     c940 <_IO_stdin_used+0x940>
    c8db:	3d 25 64 00 00       	cmp    eax,0x6425
    c8e0:	be 77 ff ff e1       	mov    esi,0xe1ffff77
    c8e5:	7a ff                	jp     c8e6 <_IO_stdin_used+0x8e6>
    c8e7:	ff e1                	jmp    rcx
    c8e9:	7a ff                	jp     c8ea <_IO_stdin_used+0x8ea>
    c8eb:	ff cf                	dec    edi
    c8ed:	77 ff                	ja     c8ee <_IO_stdin_used+0x8ee>
    c8ef:	ff                   	(bad)  
    c8f0:	3c 79                	cmp    al,0x79
    c8f2:	ff                   	(bad)  
    c8f3:	ff 4d 79             	dec    DWORD PTR [rbp+0x79]
    c8f6:	ff                   	(bad)  
    c8f7:	ff e1                	jmp    rcx
    c8f9:	7a ff                	jp     c8fa <_IO_stdin_used+0x8fa>
    c8fb:	ff e1                	jmp    rcx
    c8fd:	7a ff                	jp     c8fe <_IO_stdin_used+0x8fe>
    c8ff:	ff                   	(bad)  
    c900:	ea                   	(bad)  
    c901:	79 ff                	jns    c902 <_IO_stdin_used+0x902>
    c903:	ff                   	(bad)  
    c904:	fb                   	sti    
    c905:	79 ff                	jns    c906 <_IO_stdin_used+0x906>
    c907:	ff 46 7a             	inc    DWORD PTR [rsi+0x7a]
    c90a:	ff                   	(bad)  
    c90b:	ff 57 7a             	call   QWORD PTR [rdi+0x7a]
    c90e:	ff                   	(bad)  
    c90f:	ff e1                	jmp    rcx
    c911:	7a ff                	jp     c912 <_IO_stdin_used+0x912>
    c913:	ff c5                	inc    ebp
    c915:	7a ff                	jp     c916 <_IO_stdin_used+0x916>
    c917:	ff d3                	call   rbx
    c919:	7a ff                	jp     c91a <_IO_stdin_used+0x91a>
    c91b:	ff                   	(bad)  
    c91c:	de 77 ff             	fidiv  WORD PTR [rdi-0x1]
    c91f:	ff                   	(bad)  
    c920:	ef                   	out    dx,eax
    c921:	77 ff                	ja     c922 <_IO_stdin_used+0x922>
    c923:	ff 00                	inc    DWORD PTR [rax]
    c925:	78 ff                	js     c926 <_IO_stdin_used+0x926>
    c927:	ff 11                	call   QWORD PTR [rcx]
    c929:	78 ff                	js     c92a <_IO_stdin_used+0x92a>
    c92b:	ff 22                	jmp    QWORD PTR [rdx]
    c92d:	78 ff                	js     c92e <_IO_stdin_used+0x92e>
    c92f:	ff 33                	push   QWORD PTR [rbx]
    c931:	78 ff                	js     c932 <_IO_stdin_used+0x932>
    c933:	ff 44 78 ff          	inc    DWORD PTR [rax+rdi*2-0x1]
    c937:	ff 55 78             	call   QWORD PTR [rbp+0x78]
    c93a:	ff                   	(bad)  
    c93b:	ff 66 78             	jmp    QWORD PTR [rsi+0x78]
    c93e:	ff                   	(bad)  
    c93f:	ff 77 78             	push   QWORD PTR [rdi+0x78]
    c942:	ff                   	(bad)  
    c943:	ff 85 78 ff ff 93    	inc    DWORD PTR [rbp-0x6c000088]
    c949:	78 ff                	js     c94a <_IO_stdin_used+0x94a>
    c94b:	ff a1 78 ff ff af    	jmp    QWORD PTR [rcx-0x50000088]
    c951:	78 ff                	js     c952 <_IO_stdin_used+0x952>
    c953:	ff                   	(bad)  
    c954:	bd 78 ff ff cb       	mov    ebp,0xcbffff78
    c959:	78 ff                	js     c95a <_IO_stdin_used+0x95a>
    c95b:	ff 00                	inc    DWORD PTR [rax]
    c95d:	00 00                	add    BYTE PTR [rax],al
    c95f:	00 1b                	add    BYTE PTR [rbx],bl
    c961:	5b                   	pop    rbx
    c962:	33 32                	xor    esi,DWORD PTR [rdx]
    c964:	6d                   	ins    DWORD PTR es:[rdi],dx
    c965:	00 25 73 00 49 50    	add    BYTE PTR [rip+0x50490073],ah        # 5049c9de <_end+0x5036159e>
    c96b:	76 34                	jbe    c9a1 <_IO_stdin_used+0x9a1>
    c96d:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642603e6 <_end+0x64124fa6>
    c973:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325e9b7 <_end+0x73123577>
    c979:	3a 25 64 0a 00 09    	cmp    ah,BYTE PTR [rip+0x9000a64]        # 900d3e3 <_end+0x8ed1fa3>
    c97f:	54                   	push   rsp
    c980:	43 50                	rex.XB push r8
    c982:	20 5b 00             	and    BYTE PTR [rbx+0x0],bl
    c985:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c988:	33 6d 00             	xor    ebp,DWORD PTR [rbp+0x0]
    c98b:	25 73 20 41 43       	and    eax,0x43412073
    c990:	4b 20 00             	rex.WXB and BYTE PTR [r8],al
    c993:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c996:	37                   	(bad)  
    c997:	6d                   	ins    DWORD PTR es:[rdi],dx
    c998:	00 25 73 20 46 49    	add    BYTE PTR [rip+0x49462073],ah        # 4946ea11 <_end+0x493335d1>
    c99e:	4e 20 00             	rex.WRX and BYTE PTR [rax],r8b
    c9a1:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9a4:	34 6d                	xor    al,0x6d
    c9a6:	00 25 73 20 50 53    	add    BYTE PTR [rip+0x53502073],ah        # 5350ea1f <_end+0x533d35df>
    c9ac:	48 20 00             	rex.W and BYTE PTR [rax],al
    c9af:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9b2:	31 6d 00             	xor    DWORD PTR [rbp+0x0],ebp
    c9b5:	25 73 20 52 53       	and    eax,0x53522073
    c9ba:	54                   	push   rsp
    c9bb:	20 00                	and    BYTE PTR [rax],al
    c9bd:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9c0:	35 6d 00 25 73       	xor    eax,0x7325006d
    c9c5:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    c9c8:	4e 20 00             	rex.WRX and BYTE PTR [rax],r8b
    c9cb:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9ce:	36 6d                	ss ins DWORD PTR es:[rdi],dx
    c9d0:	00 25 73 20 55 52    	add    BYTE PTR [rip+0x52552073],ah        # 5255ea49 <_end+0x52423609>
    c9d6:	47 20 00             	rex.RXB and BYTE PTR [r8],r8b
    c9d9:	5d                   	pop    rbp
    c9da:	00 1b                	add    BYTE PTR [rbx],bl
    c9dc:	5b                   	pop    rbx
    c9dd:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    c9e0:	25 73 53 75 73       	and    eax,0x73755373
    c9e5:	70 69                	jo     ca50 <_IO_stdin_used+0xa50>
    c9e7:	63 69 6f             	movsxd ebp,DWORD PTR [rcx+0x6f]
    c9ea:	75 73                	jne    ca5f <_IO_stdin_used+0xa5f>
    c9ec:	20 54 43 50          	and    BYTE PTR [rbx+rax*2+0x50],dl
    c9f0:	20 50 61             	and    BYTE PTR [rax+0x61],dl
    c9f3:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    c9f6:	74 20                	je     ca18 <_IO_stdin_used+0xa18>
    c9f8:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c9fa:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    c9fd:	74 65                	je     ca64 <_IO_stdin_used+0xa64>
    c9ff:	72 65                	jb     ca66 <_IO_stdin_used+0xa66>
    ca01:	64 3a 20             	cmp    ah,BYTE PTR fs:[rax]
    ca04:	25 73 3a 25 64       	and    eax,0x64253a73
    ca09:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325ea4d <_end+0x7312360d>
    ca0f:	3a 25 64 2c 20 25    	cmp    ah,BYTE PTR [rip+0x25202c64]        # 2520f679 <_end+0x250d4239>
    ca15:	64 20 66 6c          	and    BYTE PTR fs:[rsi+0x6c],ah
    ca19:	61                   	(bad)  
    ca1a:	67 73 25             	addr32 jae ca42 <_IO_stdin_used+0xa42>
    ca1d:	73 0a                	jae    ca29 <_IO_stdin_used+0xa29>
    ca1f:	00 1b                	add    BYTE PTR [rbx],bl
    ca21:	5b                   	pop    rbx
    ca22:	39 36                	cmp    DWORD PTR [rsi],esi
    ca24:	6d                   	ins    DWORD PTR es:[rdi],dx
    ca25:	00 25 73 00 49 50    	add    BYTE PTR [rip+0x50490073],ah        # 5049ca9e <_end+0x5036165e>
    ca2b:	76 34                	jbe    ca61 <_IO_stdin_used+0xa61>
    ca2d:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642604a6 <_end+0x64125066>
    ca33:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325ea77 <_end+0x73123637>
    ca39:	3a 25 64 20 55 44    	cmp    ah,BYTE PTR [rip+0x44552064]        # 4455eaa3 <_end+0x44423663>
    ca3f:	50                   	push   rax
    ca40:	0a 00                	or     al,BYTE PTR [rax]
    ca42:	1b 5b 30             	sbb    ebx,DWORD PTR [rbx+0x30]
    ca45:	6d                   	ins    DWORD PTR es:[rdi],dx
    ca46:	00 00                	add    BYTE PTR [rax],al
    ca48:	49 50                	rex.WB push r8
    ca4a:	76 34                	jbe    ca80 <_IO_stdin_used+0xa80>
    ca4c:	20 49 47             	and    BYTE PTR [rcx+0x47],cl
    ca4f:	4d 50                	rex.WRB push r8
    ca51:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2deaca <_end+0x3e1a368a>
    ca57:	20 25 73 20 5b 00    	and    BYTE PTR [rip+0x5b2073],ah        # 5bead0 <_end+0x483690>
    ca5d:	20 4d 65             	and    BYTE PTR [rbp+0x65],cl
    ca60:	6d                   	ins    DWORD PTR es:[rdi],dx
    ca61:	62                   	(bad)  
    ca62:	65 72 73             	gs jb  cad8 <_IO_stdin_used+0xad8>
    ca65:	68 69 70 20 51       	push   0x51207069
    ca6a:	75 65                	jne    cad1 <_IO_stdin_used+0xad1>
    ca6c:	72 79                	jb     cae7 <_IO_stdin_used+0xae7>
    ca6e:	20 5d 00             	and    BYTE PTR [rbp+0x0],bl
    ca71:	00 00                	add    BYTE PTR [rax],al
    ca73:	00 00                	add    BYTE PTR [rax],al
    ca75:	00 00                	add    BYTE PTR [rax],al
    ca77:	00 20                	add    BYTE PTR [rax],ah
    ca79:	4d                   	rex.WRB
    ca7a:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    ca7c:	62                   	(bad)  
    ca7d:	65 72 73             	gs jb  caf3 <_IO_stdin_used+0xaf3>
    ca80:	68 69 70 20 52       	push   0x52207069
    ca85:	65 70 6f             	gs jo  caf7 <_IO_stdin_used+0xaf7>
    ca88:	72 74                	jb     cafe <_IO_stdin_used+0xafe>
    ca8a:	20 2f                	and    BYTE PTR [rdi],ch
    ca8c:	20 4a 6f             	and    BYTE PTR [rdx+0x6f],cl
    ca8f:	69 6e 20 67 72 6f 75 	imul   ebp,DWORD PTR [rsi+0x20],0x756f7267
    ca96:	70 20                	jo     cab8 <_IO_stdin_used+0xab8>
    ca98:	25 73 20 66 6f       	and    eax,0x6f662073
    ca9d:	72 20                	jb     cabf <_IO_stdin_used+0xabf>
    ca9f:	61                   	(bad)  
    caa0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    caa1:	79 20                	jns    cac3 <_IO_stdin_used+0xac3>
    caa3:	73 6f                	jae    cb14 <_IO_stdin_used+0xb14>
    caa5:	75 72                	jne    cb19 <_IO_stdin_used+0xb19>
    caa7:	63 65 73             	movsxd esp,DWORD PTR [rbp+0x73]
    caaa:	20 5d 0a             	and    BYTE PTR [rbp+0xa],bl
    caad:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    cab0:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    cab4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cab5:	20 49 47             	and    BYTE PTR [rcx+0x47],cl
    cab8:	4d 50                	rex.WRB push r8
    caba:	20 54 79 70          	and    BYTE PTR [rcx+rdi*2+0x70],dl
    cabe:	65 3d 25 64 20 5d    	gs cmp eax,0x5d206425
    cac4:	0a 00                	or     al,BYTE PTR [rax]
    cac6:	25 64 2d 25 30       	and    eax,0x30252d64
    cacb:	32 64 2d 25          	xor    ah,BYTE PTR [rbp+rbp*1+0x25]
    cacf:	30 32                	xor    BYTE PTR [rdx],dh
    cad1:	64 20 25 30 32 64 3a 	and    BYTE PTR fs:[rip+0x3a643230],ah        # 3a64fd08 <_end+0x3a5148c8>
    cad8:	25 30 32 64 3a       	and    eax,0x3a643230
    cadd:	25 30 32 64 00       	and    eax,0x643230
    cae2:	25 73 20 25 73       	and    eax,0x73252073
    cae7:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2deb60 <_end+0x3e1a3720>
    caed:	20 25 73 0a 00 25    	and    BYTE PTR [rip+0x25000a73],ah        # 2500d566 <_end+0x24ed2126>
    caf3:	73 20                	jae    cb15 <_IO_stdin_used+0xb15>
    caf5:	25 73 20 25 73       	and    eax,0x73252073
    cafa:	3a 25 64 20 2d 3e    	cmp    ah,BYTE PTR [rip+0x3e2d2064]        # 3e2deb64 <_end+0x3e1a3724>
    cb00:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64260579 <_end+0x64125139>
    cb06:	0a 00                	or     al,BYTE PTR [rax]
    cb08:	25 73 00 61 00       	and    eax,0x610073
    cb0d:	25 30 32 78 00       	and    eax,0x783230
    cb12:	00 00                	add    BYTE PTR [rax],al
    cb14:	00 00                	add    BYTE PTR [rax],al
    cb16:	00 00                	add    BYTE PTR [rax],al
    cb18:	72 00                	jb     cb1a <_IO_stdin_used+0xb1a>
    cb1a:	00 00                	add    BYTE PTR [rax],al
    cb1c:	00 00                	add    BYTE PTR [rax],al
    cb1e:	00 00                	add    BYTE PTR [rax],al
    cb20:	45 72 72             	rex.RB jb cb95 <_IO_stdin_used+0xb95>
    cb23:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb24:	72 20                	jb     cb46 <_IO_stdin_used+0xb46>
    cb26:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb27:	70 65                	jo     cb8e <_IO_stdin_used+0xb8e>
    cb29:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cb2a:	69 6e 67 20 63 6f 6e 	imul   ebp,DWORD PTR [rsi+0x67],0x6e6f6320
    cb31:	66 69 67 75 72 61    	imul   sp,WORD PTR [rdi+0x75],0x6172
    cb37:	74 69                	je     cba2 <_IO_stdin_used+0xba2>
    cb39:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb3a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cb3b:	20 66 69             	and    BYTE PTR [rsi+0x69],ah
    cb3e:	6c                   	ins    BYTE PTR es:[rdi],dx
    cb3f:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    cb42:	25 73 0a 00 0a       	and    eax,0xa000a73
    cb47:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    cb4a:	72 69                	jb     cbb5 <_IO_stdin_used+0xbb5>
    cb4c:	63 74 5f 69          	movsxd esi,DWORD PTR [rdi+rbx*2+0x69]
    cb50:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
    cb53:	5f                   	pop    rdi
    cb54:	74 69                	je     cbbf <_IO_stdin_used+0xbbf>
    cb56:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb57:	65 73 74             	gs jae cbce <_IO_stdin_used+0xbce>
    cb5a:	61                   	(bad)  
    cb5b:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb5c:	70 5f                	jo     cbbd <_IO_stdin_used+0xbbd>
    cb5e:	72 65                	jb     cbc5 <_IO_stdin_used+0xbc5>
    cb60:	71 3d                	jno    cb9f <_IO_stdin_used+0xb9f>
    cb62:	00 59 45             	add    BYTE PTR [rcx+0x45],bl
    cb65:	53                   	push   rbx
    cb66:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    cb69:	72 69                	jb     cbd4 <_IO_stdin_used+0xbd4>
    cb6b:	63 74 5f 6e          	movsxd esi,DWORD PTR [rdi+rbx*2+0x6e]
    cb6f:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb70:	61                   	(bad)  
    cb71:	70 5f                	jo     cbd2 <_IO_stdin_used+0xbd2>
    cb73:	68 6f 73 74 5f       	push   0x5f74736f
    cb78:	61                   	(bad)  
    cb79:	6c                   	ins    BYTE PTR es:[rdi],dx
    cb7a:	69 76 65 5f 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x6568635f
    cb81:	63 6b 3d             	movsxd ebp,DWORD PTR [rbx+0x3d]
    cb84:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
    cb87:	65 61                	gs (bad) 
    cb89:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cb8a:	5f                   	pop    rdi
    cb8b:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    cb8e:	61                   	(bad)  
    cb8f:	79 5f                	jns    cbf0 <_IO_stdin_used+0xbf0>
    cb91:	69 6e 5f 70 61 63 6b 	imul   ebp,DWORD PTR [rsi+0x5f],0x6b636170
    cb98:	65 74 73             	gs je  cc0e <_IO_stdin_used+0xc0e>
    cb9b:	3d 00 43 6c 65       	cmp    eax,0x656c4300
    cba0:	61                   	(bad)  
    cba1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cba2:	20 64 65 6c          	and    BYTE PTR [rbp+riz*2+0x6c],ah
    cba6:	61                   	(bad)  
    cba7:	79 20                	jns    cbc9 <_IO_stdin_used+0xbc9>
    cba9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbaa:	65 65 64 73 20       	gs gs fs jae cbcf <_IO_stdin_used+0xbcf>
    cbaf:	61                   	(bad)  
    cbb0:	20 76 61             	and    BYTE PTR [rsi+0x61],dh
    cbb3:	6c                   	ins    BYTE PTR es:[rdi],dx
    cbb4:	75 65                	jne    cc1b <_IO_stdin_used+0xc1b>
    cbb6:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
    cbb9:	65 61                	gs (bad) 
    cbbb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbbc:	5f                   	pop    rdi
    cbbd:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    cbc0:	61                   	(bad)  
    cbc1:	79 5f                	jns    cc22 <_IO_stdin_used+0xc22>
    cbc3:	69 6e 5f 6d 73 65 63 	imul   ebp,DWORD PTR [rsi+0x5f],0x6365736d
    cbca:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cbcb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbcc:	64 73 3d             	fs jae cc0c <_IO_stdin_used+0xc0c>
    cbcf:	00 75 73             	add    BYTE PTR [rbp+0x73],dh
    cbd2:	65 5f                	gs pop rdi
    cbd4:	73 71                	jae    cc47 <_IO_stdin_used+0xc47>
    cbd6:	6c                   	ins    BYTE PTR es:[rdi],dx
    cbd7:	69 74 65 3d 00 73 71 	imul   esi,DWORD PTR [rbp+riz*2+0x3d],0x6c717300
    cbde:	6c 
    cbdf:	69 74 65 5f 64 61 74 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x61746164
    cbe6:	61 
    cbe7:	62 61                	(bad)  
    cbe9:	73 65                	jae    cc50 <_IO_stdin_used+0xc50>
    cbeb:	5f                   	pop    rdi
    cbec:	70 61                	jo     cc4f <_IO_stdin_used+0xc4f>
    cbee:	74 68                	je     cc58 <_IO_stdin_used+0xc58>
    cbf0:	3d 00 73 71 6c       	cmp    eax,0x6c717300
    cbf5:	69 74 65 5f 64 61 74 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x61746164
    cbfc:	61 
    cbfd:	62 61                	(bad)  
    cbff:	73 65                	jae    cc66 <_IO_stdin_used+0xc66>
    cc01:	5f                   	pop    rdi
    cc02:	70 61                	jo     cc65 <_IO_stdin_used+0xc65>
    cc04:	74 68                	je     cc6e <_IO_stdin_used+0xc6e>
    cc06:	3a 20                	cmp    ah,BYTE PTR [rax]
    cc08:	25 73 00 69 6e       	and    eax,0x6e690073
    cc0d:	5f                   	pop    rdi
    cc0e:	61                   	(bad)  
    cc0f:	64 61                	fs (bad) 
    cc11:	70 74                	jo     cc87 <_IO_stdin_used+0xc87>
    cc13:	65 72 3d             	gs jb  cc53 <_IO_stdin_used+0xc53>
    cc16:	00 00                	add    BYTE PTR [rax],al
    cc18:	72 75                	jb     cc8f <_IO_stdin_used+0xc8f>
    cc1a:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc1b:	65 5f                	gs pop rdi
    cc1d:	70 61                	jo     cc80 <_IO_stdin_used+0xc80>
    cc1f:	72 73                	jb     cc94 <_IO_stdin_used+0xc94>
    cc21:	65 72 2e             	gs jb  cc52 <_IO_stdin_used+0xc52>
    cc24:	63 3a                	movsxd edi,DWORD PTR [rdx]
    cc26:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    cc29:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc2a:	65 5f                	gs pop rdi
    cc2c:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc2d:	69 62 72 61 72 79 5f 	imul   esp,DWORD PTR [rdx+0x72],0x5f797261
    cc34:	70 61                	jo     cc97 <_IO_stdin_used+0xc97>
    cc36:	72 73                	jb     ccab <_IO_stdin_used+0xcab>
    cc38:	65 72 3a             	gs jb  cc75 <_IO_stdin_used+0xc75>
    cc3b:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    cc3e:	5f                   	pop    rdi
    cc3f:	61                   	(bad)  
    cc40:	64 61                	fs (bad) 
    cc42:	70 74                	jo     ccb8 <_IO_stdin_used+0xcb8>
    cc44:	65 72 3a             	gs jb  cc81 <_IO_stdin_used+0xc81>
    cc47:	20 25 73 00 6f 75    	and    BYTE PTR [rip+0x756f0073],ah        # 756fccc0 <_end+0x755c1880>
    cc4d:	74 5f                	je     ccae <_IO_stdin_used+0xcae>
    cc4f:	61                   	(bad)  
    cc50:	64 61                	fs (bad) 
    cc52:	70 74                	jo     ccc8 <_IO_stdin_used+0xcc8>
    cc54:	65 72 3d             	gs jb  cc94 <_IO_stdin_used+0xc94>
    cc57:	00 72 75             	add    BYTE PTR [rdx+0x75],dh
    cc5a:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc5b:	65 5f                	gs pop rdi
    cc5d:	70 61                	jo     ccc0 <_IO_stdin_used+0xcc0>
    cc5f:	72 73                	jb     ccd4 <_IO_stdin_used+0xcd4>
    cc61:	65 72 2e             	gs jb  cc92 <_IO_stdin_used+0xc92>
    cc64:	63 3a                	movsxd edi,DWORD PTR [rdx]
    cc66:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    cc69:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc6a:	65 5f                	gs pop rdi
    cc6c:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc6d:	69 62 72 61 72 79 5f 	imul   esp,DWORD PTR [rdx+0x72],0x5f797261
    cc74:	70 61                	jo     ccd7 <_IO_stdin_used+0xcd7>
    cc76:	72 73                	jb     cceb <_IO_stdin_used+0xceb>
    cc78:	65 72 3a             	gs jb  ccb5 <_IO_stdin_used+0xcb5>
    cc7b:	20 6f 75             	and    BYTE PTR [rdi+0x75],ch
    cc7e:	74 5f                	je     ccdf <_IO_stdin_used+0xcdf>
    cc80:	61                   	(bad)  
    cc81:	64 61                	fs (bad) 
    cc83:	70 74                	jo     ccf9 <_IO_stdin_used+0xcf9>
    cc85:	65 72 3a             	gs jb  ccc2 <_IO_stdin_used+0xcc2>
    cc88:	20 25 73 00 6d 6f    	and    BYTE PTR [rip+0x6f6d0073],ah        # 6f6dcd01 <_end+0x6f5a18c1>
    cc8e:	64 65 3d 00 6d 6f 64 	fs gs cmp eax,0x646f6d00
    cc95:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    cc98:	25 73 00 52 75       	and    eax,0x75520073
    cc9d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cc9e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cc9f:	69 6e 67 20 69 6e 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206e6920
    cca6:	00 32                	add    BYTE PTR [rdx],dh
    cca8:	00 49 50             	add    BYTE PTR [rcx+0x50],cl
    ccab:	53                   	push   rbx
    ccac:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    ccaf:	64 65 20 61 73       	fs and BYTE PTR gs:[rcx+0x73],ah
    ccb4:	20 70 65             	and    BYTE PTR [rax+0x65],dh
    ccb7:	72 20                	jb     ccd9 <_IO_stdin_used+0xcd9>
    ccb9:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    ccbc:	66 69 67 00 49 44    	imul   sp,WORD PTR [rdi+0x0],0x4449
    ccc2:	53                   	push   rbx
    ccc3:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    ccc6:	64 65 20 61 73       	fs and BYTE PTR gs:[rcx+0x73],ah
    cccb:	20 70 65             	and    BYTE PTR [rax+0x65],dh
    ccce:	72 20                	jb     ccf0 <_IO_stdin_used+0xcf0>
    ccd0:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    ccd3:	66 69 67 00 6c 6f    	imul   sp,WORD PTR [rdi+0x0],0x6f6c
    ccd9:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
    ccdc:	69 70 3d 00 6c 6f 63 	imul   esi,DWORD PTR [rax+0x3d],0x636f6c00
    cce3:	61                   	(bad)  
    cce4:	6c                   	ins    BYTE PTR es:[rdi],dx
    cce5:	5f                   	pop    rdi
    cce6:	69 70 20 61 73 20 70 	imul   esi,DWORD PTR [rax+0x20],0x70207361
    cced:	65 72 20             	gs jb  cd10 <_IO_stdin_used+0xd10>
    ccf0:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    ccf3:	66 69 67 3a 20 25    	imul   sp,WORD PTR [rdi+0x3a],0x2520
    ccf9:	73 00                	jae    ccfb <_IO_stdin_used+0xcfb>
    ccfb:	64 65 66 67 77 3d    	fs gs data16 addr32 ja cd3e <_IO_stdin_used+0xd3e>
    cd01:	00 75 73             	add    BYTE PTR [rbp+0x73],dh
    cd04:	65 5f                	gs pop rdi
    cd06:	73 70                	jae    cd78 <_IO_stdin_used+0xd78>
    cd08:	69 3d 00 56 49 47 49 	imul   edi,DWORD PTR [rip+0x47495600],0x53204c49        # 474a2312 <_end+0x47366ed2>
    cd0f:	4c 20 53 
    cd12:	50                   	push   rax
    cd13:	49 20 73 65          	rex.WB and BYTE PTR [r11+0x65],sil
    cd17:	72 76                	jb     cd8f <_IO_stdin_used+0xd8f>
    cd19:	69 63 65 20 61 63 74 	imul   esp,DWORD PTR [rbx+0x65],0x74636120
    cd20:	69 76 65 00 48 4f 4d 	imul   esi,DWORD PTR [rsi+0x65],0x4d4f4800
    cd27:	45 5f                	rex.RB pop r15
    cd29:	4e                   	rex.WRX
    cd2a:	45 54                	rex.RB push r12
    cd2c:	3d 00 48 4f 4d       	cmp    eax,0x4d4f4800
    cd31:	45 5f                	rex.RB pop r15
    cd33:	4e                   	rex.WRX
    cd34:	45 54                	rex.RB push r12
    cd36:	5f                   	pop    rdi
    cd37:	4d                   	rex.WRB
    cd38:	41 53                	push   r11
    cd3a:	4b 3d 00 6c 6f 63    	rex.WXB cmp rax,0x636f6c00
    cd40:	61                   	(bad)  
    cd41:	74 69                	je     cdac <_IO_stdin_used+0xdac>
    cd43:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd44:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd45:	3d 00 65 78 74       	cmp    eax,0x74786500
    cd4a:	65 72 6e             	gs jb  cdbb <_IO_stdin_used+0xdbb>
    cd4d:	61                   	(bad)  
    cd4e:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd4f:	00 53 79             	add    BYTE PTR [rbx+0x79],dl
    cd52:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd53:	74 61                	je     cdb6 <_IO_stdin_used+0xdb6>
    cd55:	78 20                	js     cd77 <_IO_stdin_used+0xd77>
    cd57:	65 72 72             	gs jb  cdcc <_IO_stdin_used+0xdcc>
    cd5a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd5b:	72 20                	jb     cd7d <_IO_stdin_used+0xd7d>
    cd5d:	61                   	(bad)  
    cd5e:	74 20                	je     cd80 <_IO_stdin_used+0xd80>
    cd60:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd61:	69 6e 65 20 25 64 3a 	imul   ebp,DWORD PTR [rsi+0x65],0x3a642520
    cd68:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # d7e1 <_IO_stdin_used+0x17e1>
    cd6e:	00 00                	add    BYTE PTR [rax],al
    cd70:	45 72 72             	rex.RB jb cde5 <_IO_stdin_used+0xde5>
    cd73:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd74:	72 20                	jb     cd96 <_IO_stdin_used+0xd96>
    cd76:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd77:	70 65                	jo     cdde <_IO_stdin_used+0xdde>
    cd79:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd7a:	69 6e 67 20 72 75 6c 	imul   ebp,DWORD PTR [rsi+0x67],0x6c757220
    cd81:	65 20 66 69          	and    BYTE PTR gs:[rsi+0x69],ah
    cd85:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd86:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    cd89:	25 73 2e 20 52       	and    eax,0x52202e73
    cd8e:	65 66 75 73          	gs data16 jne ce05 <_IO_stdin_used+0xe05>
    cd92:	69 6e 67 20 74 6f 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
    cd99:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    cd9c:	74 69                	je     ce07 <_IO_stdin_used+0xe07>
    cd9e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd9f:	75 65                	jne    ce06 <_IO_stdin_used+0xe06>
    cda1:	0a 00                	or     al,BYTE PTR [rax]
    cda3:	50                   	push   rax
    cda4:	61                   	(bad)  
    cda5:	72 73                	jb     ce1a <_IO_stdin_used+0xe1a>
    cda7:	69 6e 67 20 66 69 6c 	imul   ebp,DWORD PTR [rsi+0x67],0x6c696620
    cdae:	65 20 25 73 0a 00 61 	and    BYTE PTR gs:[rip+0x61000a73],ah        # 6100d828 <_end+0x60ed23e8>
    cdb5:	6c                   	ins    BYTE PTR es:[rdi],dx
    cdb6:	65 72 74             	gs jb  ce2d <_IO_stdin_used+0xe2d>
    cdb9:	00 46 69             	add    BYTE PTR [rsi+0x69],al
    cdbc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cdbd:	69 73 68 65 64 20 70 	imul   esi,DWORD PTR [rbx+0x68],0x70206465
    cdc4:	61                   	(bad)  
    cdc5:	72 73                	jb     ce3a <_IO_stdin_used+0xe3a>
    cdc7:	69 6e 67 20 25 73 0a 	imul   ebp,DWORD PTR [rsi+0x67],0xa732520
    cdce:	00 00                	add    BYTE PTR [rax],al
    cdd0:	45 72 72             	rex.RB jb ce45 <_IO_stdin_used+0xe45>
    cdd3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cdd4:	72 20                	jb     cdf6 <_IO_stdin_used+0xdf6>
    cdd6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cdd7:	70 65                	jo     ce3e <_IO_stdin_used+0xe3e>
    cdd9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cdda:	69 6e 67 20 25 73 20 	imul   ebp,DWORD PTR [rsi+0x67],0x20732520
    cde1:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    cde3:	72 20                	jb     ce05 <_IO_stdin_used+0xe05>
    cde5:	65 78 70             	gs js  ce58 <_IO_stdin_used+0xe58>
    cde8:	6c                   	ins    BYTE PTR es:[rdi],dx
    cde9:	2f                   	(bad)  
    cdea:	69 6d 70 6c 69 63 69 	imul   ebp,DWORD PTR [rbp+0x70],0x6963696c
    cdf1:	74 20                	je     ce13 <_IO_stdin_used+0xe13>
    cdf3:	64 65 6e             	fs outs dx,BYTE PTR gs:[rsi]
    cdf6:	79 20                	jns    ce18 <_IO_stdin_used+0xe18>
    cdf8:	70 61                	jo     ce5b <_IO_stdin_used+0xe5b>
    cdfa:	72 73                	jb     ce6f <_IO_stdin_used+0xe6f>
    cdfc:	69 6e 67 0a 00 69 70 	imul   ebp,DWORD PTR [rsi+0x67],0x7069000a
    ce03:	76 34                	jbe    ce39 <_IO_stdin_used+0xe39>
    ce05:	00 46 61             	add    BYTE PTR [rsi+0x61],al
    ce08:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    ce0f:	20 
    ce10:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ce11:	70 65                	jo     ce78 <_IO_stdin_used+0xe78>
    ce13:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ce14:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # d88d <_IO_stdin_used+0x188d>
    ce1a:	00 00                	add    BYTE PTR [rax],al
    ce1c:	00 00                	add    BYTE PTR [rax],al
    ce1e:	00 00                	add    BYTE PTR [rax],al
    ce20:	52                   	push   rdx
    ce21:	55                   	push   rbp
    ce22:	4e                   	rex.WRX
    ce23:	4e                   	rex.WRX
    ce24:	49                   	rex.WB
    ce25:	4e                   	rex.WRX
    ce26:	47 20 49 4e          	rex.RXB and BYTE PTR [r9+0x4e],r9b
    ce2a:	20 44 45 4d          	and    BYTE PTR [rbp+rax*2+0x4d],al
    ce2e:	4f                   	rex.WRXB
    ce2f:	4e 53                	rex.WRX push rbx
    ce31:	54                   	push   rsp
    ce32:	52                   	push   rdx
    ce33:	41 54                	push   r12
    ce35:	49                   	rex.WB
    ce36:	4f                   	rex.WRXB
    ce37:	4e 20 4d 4f          	rex.WRX and BYTE PTR [rbp+0x4f],r9b
    ce3b:	44                   	rex.R
    ce3c:	45                   	rex.RB
    ce3d:	2e 20 59 4f          	and    BYTE PTR cs:[rcx+0x4f],bl
    ce41:	55                   	push   rbp
    ce42:	20 48 41             	and    BYTE PTR [rax+0x41],cl
    ce45:	56                   	push   rsi
    ce46:	45 20 31             	and    BYTE PTR [r9],r14b
    ce49:	30 20                	xor    BYTE PTR [rax],ah
    ce4b:	53                   	push   rbx
    ce4c:	45                   	rex.RB
    ce4d:	43                   	rex.XB
    ce4e:	4f                   	rex.WRXB
    ce4f:	4e                   	rex.WRX
    ce50:	44 53                	rex.R push rbx
    ce52:	20 54 4f 20          	and    BYTE PTR [rdi+rcx*2+0x20],dl
    ce56:	41                   	rex.B
    ce57:	42                   	rex.X
    ce58:	4f 52                	rex.WRXB push r10
    ce5a:	54                   	push   rsp
    ce5b:	2e 00 00             	add    BYTE PTR cs:[rax],al
    ce5e:	00 00                	add    BYTE PTR [rax],al
    ce60:	52                   	push   rdx
    ce61:	55                   	push   rbp
    ce62:	4e                   	rex.WRX
    ce63:	4e                   	rex.WRX
    ce64:	49                   	rex.WB
    ce65:	4e                   	rex.WRX
    ce66:	47 20 49 4e          	rex.RXB and BYTE PTR [r9+0x4e],r9b
    ce6a:	20 54 45 53          	and    BYTE PTR [rbp+rax*2+0x53],dl
    ce6e:	54                   	push   rsp
    ce6f:	20 4d 4f             	and    BYTE PTR [rbp+0x4f],cl
    ce72:	44                   	rex.R
    ce73:	45                   	rex.RB
    ce74:	2e 20 59 4f          	and    BYTE PTR cs:[rcx+0x4f],bl
    ce78:	55                   	push   rbp
    ce79:	20 48 41             	and    BYTE PTR [rax+0x41],cl
    ce7c:	56                   	push   rsi
    ce7d:	45 20 31             	and    BYTE PTR [r9],r14b
    ce80:	30 20                	xor    BYTE PTR [rax],ah
    ce82:	53                   	push   rbx
    ce83:	45                   	rex.RB
    ce84:	43                   	rex.XB
    ce85:	4f                   	rex.WRXB
    ce86:	4e                   	rex.WRX
    ce87:	44 53                	rex.R push rbx
    ce89:	20 54 4f 20          	and    BYTE PTR [rdi+rcx*2+0x20],dl
    ce8d:	41                   	rex.B
    ce8e:	42                   	rex.X
    ce8f:	4f 52                	rex.WRXB push r10
    ce91:	54                   	push   rsp
    ce92:	2e 00 55 6e          	add    BYTE PTR cs:[rbp+0x6e],dl
    ce96:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    ce9a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ce9b:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    ce9e:	67 75 6d             	addr32 jne cf0e <_IO_stdin_used+0xf0e>
    cea1:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    cea3:	74 20                	je     cec5 <_IO_stdin_used+0xec5>
    cea5:	2d 25 63 0a 00       	sub    eax,0xa6325
    ceaa:	70 64                	jo     cf10 <_IO_stdin_used+0xf10>
    ceac:	71 68                	jno    cf16 <_IO_stdin_used+0xf16>
    ceae:	74 65                	je     cf15 <_IO_stdin_used+0xf15>
    ceb0:	69 3a 00 2f 65 74    	imul   edi,DWORD PTR [rdx],0x74652f00
    ceb6:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    ceb8:	76 69                	jbe    cf23 <_IO_stdin_used+0xf23>
    ceba:	67 69 6c 2f 64 65 6e 	imul   ebp,DWORD PTR [edi+ebp*1+0x64],0x2e796e65
    cec1:	79 2e 
    cec3:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    cec6:	66 00 46 69          	data16 add BYTE PTR [rsi+0x69],al
    ceca:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cecb:	73 69                	jae    cf36 <_IO_stdin_used+0xf36>
    cecd:	73 68                	jae    cf37 <_IO_stdin_used+0xf37>
    cecf:	65 64 20 6c 6f 61    	gs and BYTE PTR fs:[rdi+rbp*2+0x61],ch
    ced5:	64 69 6e 67 20 65 78 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x70786520
    cedc:	70 
    cedd:	6c                   	ins    BYTE PTR es:[rdi],dx
    cede:	69 63 69 74 20 64 65 	imul   esp,DWORD PTR [rbx+0x69],0x65642074
    cee5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cee6:	79 20                	jns    cf08 <_IO_stdin_used+0xf08>
    cee8:	66 69 6c 65 28 2f 65 	imul   bp,WORD PTR [rbp+riz*2+0x28],0x652f
    ceef:	74 63                	je     cf54 <_IO_stdin_used+0xf54>
    cef1:	2f                   	(bad)  
    cef2:	76 69                	jbe    cf5d <_IO_stdin_used+0xf5d>
    cef4:	67 69 6c 2f 64 65 6e 	imul   ebp,DWORD PTR [edi+ebp*1+0x64],0x2e796e65
    cefb:	79 2e 
    cefd:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    cf00:	66 29 00             	sub    WORD PTR [rax],ax
    cf03:	2f                   	(bad)  
    cf04:	65 74 63             	gs je  cf6a <_IO_stdin_used+0xf6a>
    cf07:	2f                   	(bad)  
    cf08:	76 69                	jbe    cf73 <_IO_stdin_used+0xf73>
    cf0a:	67 69 6c 2f 76 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x76],0x6c696769
    cf11:	69 6c 
    cf13:	2e 63 6f 6e          	movsxd ebp,DWORD PTR cs:[rdi+0x6e]
    cf17:	66 00 50 61          	data16 add BYTE PTR [rax+0x61],dl
    cf1b:	72 73                	jb     cf90 <_IO_stdin_used+0xf90>
    cf1d:	65 64 20 72 75       	gs and BYTE PTR fs:[rdx+0x75],dh
    cf22:	6c                   	ins    BYTE PTR es:[rdi],dx
    cf23:	65 20 66 69          	and    BYTE PTR gs:[rsi+0x69],ah
    cf27:	6c                   	ins    BYTE PTR es:[rdi],dx
    cf28:	65 73 00             	gs jae cf2b <_IO_stdin_used+0xf2b>
    cf2b:	00 00                	add    BYTE PTR [rax],al
    cf2d:	00 00                	add    BYTE PTR [rax],al
    cf2f:	00 56 49             	add    BYTE PTR [rsi+0x49],dl
    cf32:	47                   	rex.RXB
    cf33:	49                   	rex.WB
    cf34:	4c 20 6c 69 73       	rex.WR and BYTE PTR [rcx+rbp*2+0x73],r13b
    cf39:	74 65                	je     cfa0 <_IO_stdin_used+0xfa0>
    cf3b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cf3c:	69 6e 67 20 6f 6e 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206e6f20
    cf43:	69 6e 74 65 72 66 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61667265
    cf4a:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    cf4d:	25 73 0a 00 70       	and    eax,0x70000a73
    cf52:	63 61 70             	movsxd esp,DWORD PTR [rcx+0x70]
    cf55:	5f                   	pop    rdi
    cf56:	6d                   	ins    DWORD PTR es:[rdi],dx
    cf57:	67 72 20             	addr32 jb cf7a <_IO_stdin_used+0xf7a>
    cf5a:	69 6e 20 70 63 61 70 	imul   ebp,DWORD PTR [rsi+0x20],0x70616370
    cf61:	5f                   	pop    rdi
    cf62:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cf63:	70 65                	jo     cfca <_IO_stdin_used+0xfca>
    cf65:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cf66:	5f                   	pop    rdi
    cf67:	6c                   	ins    BYTE PTR es:[rdi],dx
    cf68:	69 76 65 00 00 00 00 	imul   esi,DWORD PTR [rsi+0x65],0x0
    cf6f:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    cf72:	65 63 72 79          	movsxd esi,DWORD PTR gs:[rdx+0x79]
    cf76:	70 74                	jo     cfec <_IO_stdin_used+0xfec>
    cf78:	65 64 20 4e 53       	gs and BYTE PTR fs:[rsi+0x53],cl
    cf7d:	48 20 63 6f          	rex.W and BYTE PTR [rbx+0x6f],spl
    cf81:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cf82:	66 69 67 20 73 65    	imul   sp,WORD PTR [rdi+0x20],0x6573
    cf88:	72 76                	jb     d000 <_IO_stdin_used+0x1000>
    cf8a:	65 72 20             	gs jb  cfad <_IO_stdin_used+0xfad>
    cf8d:	73 74                	jae    d003 <_IO_stdin_used+0x1003>
    cf8f:	61                   	(bad)  
    cf90:	72 74                	jb     d006 <_IO_stdin_used+0x1006>
    cf92:	65 64 3a 20          	gs cmp ah,BYTE PTR fs:[rax]
    cf96:	31 32                	xor    DWORD PTR [rdx],esi
    cf98:	37                   	(bad)  
    cf99:	2e 30 2e             	xor    BYTE PTR cs:[rsi],ch
    cf9c:	30 2e                	xor    BYTE PTR [rsi],ch
    cf9e:	31 3a                	xor    DWORD PTR [rdx],edi
    cfa0:	36 34 31             	ss xor al,0x31
    cfa3:	00 2e                	add    BYTE PTR [rsi],ch
    cfa5:	9b                   	fwait
    cfa6:	ff                   	(bad)  
    cfa7:	ff 6b 9b             	jmp    FWORD PTR [rbx-0x65]
    cfaa:	ff                   	(bad)  
    cfab:	ff a9 9b ff ff a9    	jmp    FWORD PTR [rcx-0x56000065]
    cfb1:	9b                   	fwait
    cfb2:	ff                   	(bad)  
    cfb3:	ff                   	(bad)  
    cfb4:	3a 9b ff ff 49 9b    	cmp    bl,BYTE PTR [rbx-0x64b60001]
    cfba:	ff                   	(bad)  
    cfbb:	ff a9 9b ff ff a9    	jmp    FWORD PTR [rcx-0x56000065]
    cfc1:	9b                   	fwait
    cfc2:	ff                   	(bad)  
    cfc3:	ff a9 9b ff ff a9    	jmp    FWORD PTR [rcx-0x56000065]
    cfc9:	9b                   	fwait
    cfca:	ff                   	(bad)  
    cfcb:	ff a9 9b ff ff a9    	jmp    FWORD PTR [rcx-0x56000065]
    cfd1:	9b                   	fwait
    cfd2:	ff                   	(bad)  
    cfd3:	ff 59 9b             	call   FWORD PTR [rcx-0x65]
    cfd6:	ff                   	(bad)  
    cfd7:	ff 62 9b             	jmp    QWORD PTR [rdx-0x65]
    cfda:	ff                   	(bad)  
    cfdb:	ff a9 9b ff ff a9    	jmp    FWORD PTR [rcx-0x56000065]
    cfe1:	9b                   	fwait
    cfe2:	ff                   	(bad)  
    cfe3:	ff 8a 9b ff ff 0a    	dec    DWORD PTR [rdx+0xaffff9b]
    cfe9:	43 61                	rex.XB (bad) 
    cfeb:	75 67                	jne    d054 <_IO_stdin_used+0x1054>
    cfed:	68 74 20 73 69       	push   0x69732074
    cff2:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    cff4:	61                   	(bad)  
    cff5:	6c                   	ins    BYTE PTR es:[rdi],dx
    cff6:	20 25 64 20 61 74    	and    BYTE PTR [rip+0x74612064],ah        # 7461f060 <_end+0x744e3c20>
    cffc:	20 25 73 2c 20 65    	and    BYTE PTR [rip+0x65202c73],ah        # 6520fc75 <_end+0x650d4835>
    d002:	78 69                	js     d06d <_IO_stdin_used+0x106d>
    d004:	74 69                	je     d06f <_IO_stdin_used+0x106f>
    d006:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d007:	67 2e 2e 2e 0a 00    	cs cs or al,BYTE PTR cs:[eax]
    d00d:	00 54 6f 74          	add    BYTE PTR [rdi+rbp*2+0x74],dl
    d011:	61                   	(bad)  
    d012:	6c                   	ins    BYTE PTR es:[rdi],dx
    d013:	20 50 61             	and    BYTE PTR [rax+0x61],dl
    d016:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d019:	74 73                	je     d08e <_IO_stdin_used+0x108e>
    d01b:	20 43 61             	and    BYTE PTR [rbx+0x61],al
    d01e:	75 67                	jne    d087 <_IO_stdin_used+0x1087>
    d020:	68 74 3a 20 25       	push   0x25203a74
    d025:	64 0a 00             	or     al,BYTE PTR fs:[rax]
    d028:	53                   	push   rbx
    d029:	74 61                	je     d08c <_IO_stdin_used+0x108c>
    d02b:	74 69                	je     d096 <_IO_stdin_used+0x1096>
    d02d:	73 74                	jae    d0a3 <_IO_stdin_used+0x10a3>
    d02f:	69 63 73 0a 49 70 20 	imul   esp,DWORD PTR [rbx+0x73],0x2070490a
    d036:	61                   	(bad)  
    d037:	64 64 72 65          	fs fs jb d0a0 <_IO_stdin_used+0x10a0>
    d03b:	73 73                	jae    d0b0 <_IO_stdin_used+0x10b0>
    d03d:	20 20                	and    BYTE PTR [rax],ah
    d03f:	20 20                	and    BYTE PTR [rax],ah
    d041:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    d043:	75 6e                	jne    d0b3 <_IO_stdin_used+0x10b3>
    d045:	74 0a                	je     d051 <_IO_stdin_used+0x1051>
    d047:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    d04c:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    d051:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    d056:	2d 2d 00 00 00       	sub    eax,0x2d
    d05b:	00 00                	add    BYTE PTR [rax],al
    d05d:	00 00                	add    BYTE PTR [rax],al
    d05f:	00 25 73 0a 09 09    	add    BYTE PTR [rip+0x9090a73],ah        # 909dad8 <_end+0x8f62698>
    d065:	74 6f                	je     d0d6 <_IO_stdin_used+0x10d6>
    d067:	74 61                	je     d0ca <_IO_stdin_used+0x10ca>
    d069:	6c                   	ins    BYTE PTR es:[rdi],dx
    d06a:	20 70 61             	and    BYTE PTR [rax+0x61],dh
    d06d:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d070:	74 73                	je     d0e5 <_IO_stdin_used+0x10e5>
    d072:	20 3d 20 25 64 0a    	and    BYTE PTR [rip+0xa642520],bh        # a64f598 <_end+0xa514158>
    d078:	09 09                	or     DWORD PTR [rcx],ecx
    d07a:	74 6f                	je     d0eb <_IO_stdin_used+0x10eb>
    d07c:	74 61                	je     d0df <_IO_stdin_used+0x10df>
    d07e:	6c                   	ins    BYTE PTR es:[rdi],dx
    d07f:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d082:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d083:	74 20                	je     d0a5 <_IO_stdin_used+0x10a5>
    d085:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d08a:	09 09                	or     DWORD PTR [rcx],ecx
    d08c:	74 6f                	je     d0fd <_IO_stdin_used+0x10fd>
    d08e:	74 61                	je     d0f1 <_IO_stdin_used+0x10f1>
    d090:	6c                   	ins    BYTE PTR es:[rdi],dx
    d091:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d094:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d097:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d09c:	09 09                	or     DWORD PTR [rcx],ecx
    d09e:	54                   	push   rsp
    d09f:	43 50                	rex.XB push r8
    d0a1:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d0a4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d0a5:	74 20                	je     d0c7 <_IO_stdin_used+0x10c7>
    d0a7:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0ac:	09 09                	or     DWORD PTR [rcx],ecx
    d0ae:	54                   	push   rsp
    d0af:	43 50                	rex.XB push r8
    d0b1:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d0b4:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d0b7:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0bc:	09 09                	or     DWORD PTR [rcx],ecx
    d0be:	55                   	push   rbp
    d0bf:	44 50                	rex.R push rax
    d0c1:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d0c4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d0c5:	74 20                	je     d0e7 <_IO_stdin_used+0x10e7>
    d0c7:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0cc:	09 09                	or     DWORD PTR [rcx],ecx
    d0ce:	55                   	push   rbp
    d0cf:	44 50                	rex.R push rax
    d0d1:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d0d4:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d0d7:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0dc:	09 09                	or     DWORD PTR [rcx],ecx
    d0de:	49                   	rex.WB
    d0df:	43                   	rex.XB
    d0e0:	4d 50                	rex.WRB push r8
    d0e2:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d0e5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d0e6:	74 20                	je     d108 <_IO_stdin_used+0x1108>
    d0e8:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0ed:	09 09                	or     DWORD PTR [rcx],ecx
    d0ef:	49                   	rex.WB
    d0f0:	43                   	rex.XB
    d0f1:	4d 50                	rex.WRB push r8
    d0f3:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d0f6:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d0f9:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0fe:	0a 00                	or     al,BYTE PTR [rax]
    d100:	77 00                	ja     d102 <_IO_stdin_used+0x1102>
    d102:	2f                   	(bad)  
    d103:	75 73                	jne    d178 <_IO_stdin_used+0x1178>
    d105:	72 2f                	jb     d136 <_IO_stdin_used+0x1136>
    d107:	73 68                	jae    d171 <_IO_stdin_used+0x1171>
    d109:	61                   	(bad)  
    d10a:	72 65                	jb     d171 <_IO_stdin_used+0x1171>
    d10c:	2f                   	(bad)  
    d10d:	76 69                	jbe    d178 <_IO_stdin_used+0x1178>
    d10f:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    d116:	63 61 
    d118:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    d11b:	2e 63 73 76          	movsxd esi,DWORD PTR cs:[rbx+0x76]
    d11f:	00 43 61             	add    BYTE PTR [rbx+0x61],al
    d122:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d123:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d124:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d125:	74 20                	je     d147 <_IO_stdin_used+0x1147>
    d127:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d128:	70 65                	jo     d18f <_IO_stdin_used+0x118f>
    d12a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d12b:	20 2f                	and    BYTE PTR [rdi],ch
    d12d:	75 73                	jne    d1a2 <_IO_stdin_used+0x11a2>
    d12f:	72 2f                	jb     d160 <_IO_stdin_used+0x1160>
    d131:	73 68                	jae    d19b <_IO_stdin_used+0x119b>
    d133:	61                   	(bad)  
    d134:	72 65                	jb     d19b <_IO_stdin_used+0x119b>
    d136:	2f                   	(bad)  
    d137:	76 69                	jbe    d1a2 <_IO_stdin_used+0x11a2>
    d139:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    d140:	63 61 
    d142:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    d145:	2e 63 73 76          	movsxd esi,DWORD PTR cs:[rbx+0x76]
    d149:	3a 20                	cmp    ah,BYTE PTR [rax]
    d14b:	70 72                	jo     d1bf <_IO_stdin_used+0x11bf>
    d14d:	69 6e 74 69 6e 67 20 	imul   ebp,DWORD PTR [rsi+0x74],0x20676e69
    d154:	61                   	(bad)  
    d155:	72 70                	jb     d1c7 <_IO_stdin_used+0x11c7>
    d157:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    d15a:	68 65 20 74 6f       	push   0x6f742065
    d15f:	20 73 63             	and    BYTE PTR [rbx+0x63],dh
    d162:	72 65                	jb     d1c9 <_IO_stdin_used+0x11c9>
    d164:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d166:	00 25 73 20 2d 3e    	add    BYTE PTR [rip+0x3e2d2073],ah        # 3e2df1df <_end+0x3e1a3d9f>
    d16c:	20 25 73 0a 00 25    	and    BYTE PTR [rip+0x25000a73],ah        # 2500dbe5 <_end+0x24ed27a5>
    d172:	73 2c                	jae    d1a0 <_IO_stdin_used+0x11a0>
    d174:	25 73 0a 00 31       	and    eax,0x31000a73
    d179:	2e 30 2e             	xor    BYTE PTR cs:[rsi],ch
    d17c:	30 00                	xor    BYTE PTR [rax],al
    d17e:	00 00                	add    BYTE PTR [rax],al
    d180:	56                   	push   rsi
    d181:	49                   	rex.WB
    d182:	47                   	rex.RXB
    d183:	49                   	rex.WB
    d184:	4c 20 55 54          	rex.WR and BYTE PTR [rbp+0x54],r10b
    d188:	4d 20 25 73 0a 09 2d 	rex.WRB and BYTE PTR [rip+0x2d090a73],r12b        # 2d09dc02 <_end+0x2cf627c2>
    d18f:	64 3a 20             	cmp    ah,BYTE PTR fs:[rax]
    d192:	64 65 62             	fs gs (bad) 
    d195:	75 67                	jne    d1fe <_IO_stdin_used+0x11fe>
    d197:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    d19a:	64 65 0a 09          	fs or  cl,BYTE PTR gs:[rcx]
    d19e:	2d 68 3a 20 64       	sub    eax,0x64203a68
    d1a3:	69 73 70 6c 61 79 20 	imul   esi,DWORD PTR [rbx+0x70],0x2079616c
    d1aa:	74 68                	je     d214 <_IO_stdin_used+0x1214>
    d1ac:	69 73 20 6d 65 73 73 	imul   esi,DWORD PTR [rbx+0x20],0x7373656d
    d1b3:	61                   	(bad)  
    d1b4:	67 65 0a 09          	or     cl,BYTE PTR gs:[ecx]
    d1b8:	2d 69 20 3c 69       	sub    eax,0x693c2069
    d1bd:	66 61                	data16 (bad) 
    d1bf:	63 65 3e             	movsxd esp,DWORD PTR [rbp+0x3e]
    d1c2:	3a 20                	cmp    ah,BYTE PTR [rax]
    d1c4:	73 65                	jae    d22b <_IO_stdin_used+0x122b>
    d1c6:	74 20                	je     d1e8 <_IO_stdin_used+0x11e8>
    d1c8:	74 68                	je     d232 <_IO_stdin_used+0x1232>
    d1ca:	65 20 69 6e          	and    BYTE PTR gs:[rcx+0x6e],ch
    d1ce:	74 65                	je     d235 <_IO_stdin_used+0x1235>
    d1d0:	72 66                	jb     d238 <_IO_stdin_used+0x1238>
    d1d2:	61                   	(bad)  
    d1d3:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    d1d6:	74 6f                	je     d247 <_IO_stdin_used+0x1247>
    d1d8:	20 6c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],ch
    d1dc:	74 65                	je     d243 <_IO_stdin_used+0x1243>
    d1de:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d1df:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    d1e2:	0a 09                	or     cl,BYTE PTR [rcx]
    d1e4:	2d 70 20 70 72       	sub    eax,0x72702070
    d1e9:	69 6e 74 20 70 61 63 	imul   ebp,DWORD PTR [rsi+0x74],0x63617020
    d1f0:	6b 65 74 73          	imul   esp,DWORD PTR [rbp+0x74],0x73
    d1f4:	0a 09                	or     cl,BYTE PTR [rcx]
    d1f6:	2d 71 20 65 78       	sub    eax,0x78652071
    d1fb:	69 74 20 71 75 69 65 	imul   esi,DWORD PTR [rax+riz*1+0x71],0x74656975
    d202:	74 
    d203:	6c                   	ins    BYTE PTR es:[rdi],dx
    d204:	79 0a                	jns    d210 <_IO_stdin_used+0x1210>
    d206:	00 72 62             	add    BYTE PTR [rdx+0x62],dh
    d209:	00 2f                	add    BYTE PTR [rdi],ch
    d20b:	70 72                	jo     d27f <_IO_stdin_used+0x127f>
    d20d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d20e:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    d210:	63 70 75             	movsxd esi,DWORD PTR [rax+0x75]
    d213:	69 6e 66 6f 00 6d 6f 	imul   ebp,DWORD PTR [rsi+0x66],0x6f6d006f
    d21a:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    d21d:	20 6e 61             	and    BYTE PTR [rsi+0x61],ch
    d220:	6d                   	ins    DWORD PTR es:[rdi],dx
    d221:	65 00 46 6f          	add    BYTE PTR gs:[rsi+0x6f],al
    d225:	75 6e                	jne    d295 <_IO_stdin_used+0x1295>
    d227:	64 20 25 64 20 63 70 	and    BYTE PTR fs:[rip+0x70632064],ah        # 7063f292 <_end+0x70503e52>
    d22e:	75 73                	jne    d2a3 <_IO_stdin_used+0x12a3>
    d230:	3a 0a                	cmp    cl,BYTE PTR [rdx]
    d232:	25 73 00 00 00       	and    eax,0x73
    d237:	00 e2                	add    dl,ah
    d239:	96                   	xchg   esi,eax
    d23a:	88 e2                	mov    dl,ah
    d23c:	96                   	xchg   esi,eax
    d23d:	88 e2                	mov    dl,ah
    d23f:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d246:	88 e2                	mov    dl,ah
    d248:	96                   	xchg   esi,eax
    d249:	88 e2                	mov    dl,ah
    d24b:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d252:	88 e2                	mov    dl,ah
    d254:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    d25b:	96                   	xchg   esi,eax
    d25c:	88 e2                	mov    dl,ah
    d25e:	96                   	xchg   esi,eax
    d25f:	88 e2                	mov    dl,ah
    d261:	96                   	xchg   esi,eax
    d262:	88 e2                	mov    dl,ah
    d264:	96                   	xchg   esi,eax
    d265:	88 e2                	mov    dl,ah
    d267:	96                   	xchg   esi,eax
    d268:	88 e2                	mov    dl,ah
    d26a:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    d271:	96                   	xchg   esi,eax
    d272:	88 e2                	mov    dl,ah
    d274:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d27b:	88 0a                	mov    BYTE PTR [rdx],cl
    d27d:	e2 96                	loop   d215 <_IO_stdin_used+0x1215>
    d27f:	88 e2                	mov    dl,ah
    d281:	96                   	xchg   esi,eax
    d282:	88 e2                	mov    dl,ah
    d284:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d28b:	88 e2                	mov    dl,ah
    d28d:	96                   	xchg   esi,eax
    d28e:	88 e2                	mov    dl,ah
    d290:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d297:	88 e2                	mov    dl,ah
    d299:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2a0:	88 e2                	mov    dl,ah
    d2a2:	80 81 e2 80 81 e2 80 	add    BYTE PTR [rcx-0x1d7e7f1e],0x80
    d2a9:	81 e2 80 81 e2 80    	and    edx,0x80e28180
    d2af:	81 e2 80 81 20 e2    	and    edx,0xe2208180
    d2b5:	96                   	xchg   esi,eax
    d2b6:	88 e2                	mov    dl,ah
    d2b8:	96                   	xchg   esi,eax
    d2b9:	88 e2                	mov    dl,ah
    d2bb:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2c2:	88 0a                	mov    BYTE PTR [rdx],cl
    d2c4:	e2 96                	loop   d25c <_IO_stdin_used+0x125c>
    d2c6:	88 e2                	mov    dl,ah
    d2c8:	96                   	xchg   esi,eax
    d2c9:	88 e2                	mov    dl,ah
    d2cb:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d2d2:	88 e2                	mov    dl,ah
    d2d4:	96                   	xchg   esi,eax
    d2d5:	88 e2                	mov    dl,ah
    d2d7:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2de:	88 e2                	mov    dl,ah
    d2e0:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2e7:	88 e2                	mov    dl,ah
    d2e9:	80 81 20 20 e2 96 88 	add    BYTE PTR [rcx-0x691ddfe0],0x88
    d2f0:	e2 96                	loop   d288 <_IO_stdin_used+0x1288>
    d2f2:	88 e2                	mov    dl,ah
    d2f4:	96                   	xchg   esi,eax
    d2f5:	88 e2                	mov    dl,ah
    d2f7:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2fe:	88 e2                	mov    dl,ah
    d300:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d307:	88 0a                	mov    BYTE PTR [rdx],cl
    d309:	e2 80                	loop   d28b <_IO_stdin_used+0x128b>
    d30b:	81 e2 96 88 e2 96    	and    edx,0x96e28896
    d311:	88 e2                	mov    dl,ah
    d313:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    d31a:	96                   	xchg   esi,eax
    d31b:	88 e2                	mov    dl,ah
    d31d:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    d324:	88 e2                	mov    dl,ah
    d326:	96                   	xchg   esi,eax
    d327:	88 e2                	mov    dl,ah
    d329:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d330:	88 e2                	mov    dl,ah
    d332:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d339:	88 e2                	mov    dl,ah
    d33b:	96                   	xchg   esi,eax
    d33c:	88 e2                	mov    dl,ah
    d33e:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d345:	88 e2                	mov    dl,ah
    d347:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d34e:	88 0a                	mov    BYTE PTR [rdx],cl
    d350:	20 e2                	and    dl,ah
    d352:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d359:	88 e2                	mov    dl,ah
    d35b:	96                   	xchg   esi,eax
    d35c:	88 e2                	mov    dl,ah
    d35e:	96                   	xchg   esi,eax
    d35f:	88 e2                	mov    dl,ah
    d361:	80 81 e2 80 81 20 e2 	add    BYTE PTR [rcx+0x208180e2],0xe2
    d368:	96                   	xchg   esi,eax
    d369:	88 e2                	mov    dl,ah
    d36b:	96                   	xchg   esi,eax
    d36c:	88 e2                	mov    dl,ah
    d36e:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    d375:	88 e2                	mov    dl,ah
    d377:	96                   	xchg   esi,eax
    d378:	88 e2                	mov    dl,ah
    d37a:	96                   	xchg   esi,eax
    d37b:	88 e2                	mov    dl,ah
    d37d:	96                   	xchg   esi,eax
    d37e:	88 e2                	mov    dl,ah
    d380:	96                   	xchg   esi,eax
    d381:	88 e2                	mov    dl,ah
    d383:	96                   	xchg   esi,eax
    d384:	88 e2                	mov    dl,ah
    d386:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    d38d:	88 e2                	mov    dl,ah
    d38f:	96                   	xchg   esi,eax
    d390:	88 e2                	mov    dl,ah
    d392:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d399:	88 e2                	mov    dl,ah
    d39b:	96                   	xchg   esi,eax
    d39c:	88 e2                	mov    dl,ah
    d39e:	96                   	xchg   esi,eax
    d39f:	88 e2                	mov    dl,ah
    d3a1:	96                   	xchg   esi,eax
    d3a2:	88 e2                	mov    dl,ah
    d3a4:	96                   	xchg   esi,eax
    d3a5:	88 e2                	mov    dl,ah
    d3a7:	96                   	xchg   esi,eax
    d3a8:	88 00                	mov    BYTE PTR [rax],al
    d3aa:	00 00                	add    BYTE PTR [rax],al
    d3ac:	00 00                	add    BYTE PTR [rax],al
    d3ae:	00 00                	add    BYTE PTR [rax],al
    d3b0:	0a 00                	or     al,BYTE PTR [rax]
    d3b2:	0d 00 00 00 00       	or     eax,0x0
    d3b7:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    d3ba:	68 5f 73 65 72       	push   0x7265735f
    d3bf:	76 65                	jbe    d426 <_IO_stdin_used+0x1426>
    d3c1:	72 2e                	jb     d3f1 <_IO_stdin_used+0x13f1>
    d3c3:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d3c5:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    d3c8:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    d3cf:	20 
    d3d0:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
    d3d3:	61                   	(bad)  
    d3d4:	74 65                	je     d43b <_IO_stdin_used+0x143b>
    d3d6:	20 73 6f             	and    BYTE PTR [rbx+0x6f],dh
    d3d9:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d3dc:	74 00                	je     d3de <_IO_stdin_used+0x13de>
    d3de:	00 00                	add    BYTE PTR [rax],al
    d3e0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d3e1:	73 68                	jae    d44b <_IO_stdin_used+0x144b>
    d3e3:	5f                   	pop    rdi
    d3e4:	73 65                	jae    d44b <_IO_stdin_used+0x144b>
    d3e6:	72 76                	jb     d45e <_IO_stdin_used+0x145e>
    d3e8:	65 72 2e             	gs jb  d419 <_IO_stdin_used+0x1419>
    d3eb:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d3ed:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    d3f0:	69 6c 75 72 65 20 69 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6e692065
    d3f7:	6e 
    d3f8:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d3fb:	74 73                	je     d470 <_IO_stdin_used+0x1470>
    d3fd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d3fe:	63 6b 6f             	movsxd ebp,DWORD PTR [rbx+0x6f]
    d401:	70 74                	jo     d477 <_IO_stdin_used+0x1477>
    d403:	00 00                	add    BYTE PTR [rax],al
    d405:	00 00                	add    BYTE PTR [rax],al
    d407:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    d40a:	68 5f 73 65 72       	push   0x7265735f
    d40f:	76 65                	jbe    d476 <_IO_stdin_used+0x1476>
    d411:	72 2e                	jb     d441 <_IO_stdin_used+0x1441>
    d413:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d415:	20 62 69             	and    BYTE PTR [rdx+0x69],ah
    d418:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d419:	64 69 6e 67 20 6f 66 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x20666f20
    d420:	20 
    d421:	73 6f                	jae    d492 <_IO_stdin_used+0x1492>
    d423:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d426:	74 20                	je     d448 <_IO_stdin_used+0x1448>
    d428:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    d42a:	72 20                	jb     d44c <_IO_stdin_used+0x144c>
    d42c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d42d:	73 68                	jae    d497 <_IO_stdin_used+0x1497>
    d42f:	5f                   	pop    rdi
    d430:	66 64 20 66 61       	data16 and BYTE PTR fs:[rsi+0x61],ah
    d435:	69 6c 65 64 00 00 00 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
    d43c:	00 
    d43d:	00 00                	add    BYTE PTR [rax],al
    d43f:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    d442:	68 5f 73 65 72       	push   0x7265735f
    d447:	76 65                	jbe    d4ae <_IO_stdin_used+0x14ae>
    d449:	72 2e                	jb     d479 <_IO_stdin_used+0x1479>
    d44b:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d44d:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    d450:	69 6c 75 72 65 20 6f 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6e6f2065
    d457:	6e 
    d458:	20 6c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],ch
    d45c:	74 65                	je     d4c3 <_IO_stdin_used+0x14c3>
    d45e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d45f:	69 6e 67 20 66 6f 72 	imul   ebp,DWORD PTR [rsi+0x67],0x726f6620
    d466:	20 6e 73             	and    BYTE PTR [rsi+0x73],ch
    d469:	68 5f 66 64 00       	push   0x64665f
    d46e:	00 00                	add    BYTE PTR [rax],al
    d470:	46 61                	rex.RX (bad) 
    d472:	69 6c 75 72 65 20 74 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f742065
    d479:	6f 
    d47a:	20 61 63             	and    BYTE PTR [rcx+0x63],ah
    d47d:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    d480:	74 20                	je     d4a2 <_IO_stdin_used+0x14a2>
    d482:	61                   	(bad)  
    d483:	20 63 6c             	and    BYTE PTR [rbx+0x6c],ah
    d486:	69 65 6e 74 20 61 74 	imul   esp,DWORD PTR [rbp+0x6e],0x74612074
    d48d:	20 25 73 0a 00 30    	and    BYTE PTR [rip+0x30000a73],ah        # 3000df06 <_end+0x2fed2ac6>
    d493:	78 25                	js     d4ba <_IO_stdin_used+0x14ba>
    d495:	30 32                	xor    BYTE PTR [rdx],dh
    d497:	78 0a                	js     d4a3 <_IO_stdin_used+0x14a3>
    d499:	00 00                	add    BYTE PTR [rax],al
    d49b:	00 00                	add    BYTE PTR [rax],al
    d49d:	00 00                	add    BYTE PTR [rax],al
    d49f:	00 61 00             	add    BYTE PTR [rcx+0x0],ah
    d4a2:	00 00                	add    BYTE PTR [rax],al
    d4a4:	00 00                	add    BYTE PTR [rax],al
    d4a6:	00 00                	add    BYTE PTR [rax],al
    d4a8:	42 61                	rex.X (bad) 
    d4aa:	73 69                	jae    d515 <_IO_stdin_used+0x1515>
    d4ac:	63 20                	movsxd esp,DWORD PTR [rax]
    d4ae:	70 6f                	jo     d51f <_IO_stdin_used+0x151f>
    d4b0:	72 74                	jb     d526 <_IO_stdin_used+0x1526>
    d4b2:	73 63                	jae    d517 <_IO_stdin_used+0x1517>
    d4b4:	61                   	(bad)  
    d4b5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d4b6:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d4ba:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d4bf:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d4c2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d4c3:	6d                   	ins    DWORD PTR es:[rdi],dx
    d4c4:	20 49 50             	and    BYTE PTR [rcx+0x50],cl
    d4c7:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    d4ca:	64 72 65             	fs jb  d532 <_IO_stdin_used+0x1532>
    d4cd:	73 73                	jae    d542 <_IO_stdin_used+0x1542>
    d4cf:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # df48 <_IO_stdin_used+0x1f48>
    d4d5:	00 00                	add    BYTE PTR [rax],al
    d4d7:	00 50 6f             	add    BYTE PTR [rax+0x6f],dl
    d4da:	72 74                	jb     d550 <_IO_stdin_used+0x1550>
    d4dc:	73 63                	jae    d541 <_IO_stdin_used+0x1541>
    d4de:	61                   	(bad)  
    d4df:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d4e0:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d4e4:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d4e9:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d4ec:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d4ed:	6d                   	ins    DWORD PTR es:[rdi],dx
    d4ee:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461f567 <_end+0x744e4127>
    d4f4:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # df6d <_IO_stdin_used+0x1f6d>
    d4fa:	00 00                	add    BYTE PTR [rax],al
    d4fc:	00 00                	add    BYTE PTR [rax],al
    d4fe:	00 00                	add    BYTE PTR [rax],al
    d500:	46                   	rex.RX
    d501:	49                   	rex.WB
    d502:	4e 20 70 6f          	rex.WRX and BYTE PTR [rax+0x6f],r14b
    d506:	72 74                	jb     d57c <_IO_stdin_used+0x157c>
    d508:	73 63                	jae    d56d <_IO_stdin_used+0x156d>
    d50a:	61                   	(bad)  
    d50b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d50c:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d510:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d515:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d518:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d519:	6d                   	ins    DWORD PTR es:[rdi],dx
    d51a:	20 49 50             	and    BYTE PTR [rcx+0x50],cl
    d51d:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    d520:	64 72 65             	fs jb  d588 <_IO_stdin_used+0x1588>
    d523:	73 73                	jae    d598 <_IO_stdin_used+0x1598>
    d525:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # df9e <_IO_stdin_used+0x1f9e>
    d52b:	00 00                	add    BYTE PTR [rax],al
    d52d:	00 00                	add    BYTE PTR [rax],al
    d52f:	00 46 49             	add    BYTE PTR [rsi+0x49],al
    d532:	4e 20 70 6f          	rex.WRX and BYTE PTR [rax+0x6f],r14b
    d536:	72 74                	jb     d5ac <_IO_stdin_used+0x15ac>
    d538:	73 63                	jae    d59d <_IO_stdin_used+0x159d>
    d53a:	61                   	(bad)  
    d53b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d53c:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d540:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d545:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d548:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d549:	6d                   	ins    DWORD PTR es:[rdi],dx
    d54a:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461f5c3 <_end+0x744e4183>
    d550:	20 25 73 0a 00 30    	and    BYTE PTR [rip+0x30000a73],ah        # 3000dfc9 <_end+0x2fed2b89>
    d556:	2e 30 2e             	xor    BYTE PTR cs:[rsi],ch
    d559:	30 2e                	xor    BYTE PTR [rsi],ch
    d55b:	31 00                	xor    DWORD PTR [rax],eax
    d55d:	30 2e                	xor    BYTE PTR [rsi],ch
    d55f:	30 2e                	xor    BYTE PTR [rsi],ch
    d561:	30 2e                	xor    BYTE PTR [rsi],ch
    d563:	31 00                	xor    DWORD PTR [rax],eax
    d565:	00 00                	add    BYTE PTR [rax],al
    d567:	00 41 72             	add    BYTE PTR [rcx+0x72],al
    d56a:	70 20                	jo     d58c <_IO_stdin_used+0x158c>
    d56c:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d56e:	74 72                	je     d5e2 <_IO_stdin_used+0x15e2>
    d570:	79 20                	jns    d592 <_IO_stdin_used+0x1592>
    d572:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    d575:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d576:	67 65 64 20 66 6f    	gs and BYTE PTR fs:[esi+0x6f],ah
    d57c:	72 20                	jb     d59e <_IO_stdin_used+0x159e>
    d57e:	69 70 20 61 64 64 72 	imul   esi,DWORD PTR [rax+0x20],0x72646461
    d585:	65 73 73             	gs jae d5fb <_IO_stdin_used+0x15fb>
    d588:	20 25 73 3a 20 77    	and    BYTE PTR [rip+0x77203a73],ah        # 77211001 <_end+0x770d5bc1>
    d58e:	61                   	(bad)  
    d58f:	73 20                	jae    d5b1 <_IO_stdin_used+0x15b1>
    d591:	25 73 20 69 73       	and    eax,0x73692073
    d596:	20 6e 6f             	and    BYTE PTR [rsi+0x6f],ch
    d599:	77 20                	ja     d5bb <_IO_stdin_used+0x15bb>
    d59b:	25 73 00 72 00       	and    eax,0x720073
    d5a0:	2f                   	(bad)  
    d5a1:	75 73                	jne    d616 <_IO_stdin_used+0x1616>
    d5a3:	72 2f                	jb     d5d4 <_IO_stdin_used+0x15d4>
    d5a5:	73 68                	jae    d60f <_IO_stdin_used+0x160f>
    d5a7:	61                   	(bad)  
    d5a8:	72 65                	jb     d60f <_IO_stdin_used+0x160f>
    d5aa:	2f                   	(bad)  
    d5ab:	76 69                	jbe    d616 <_IO_stdin_used+0x1616>
    d5ad:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    d5b4:	63 61 
    d5b6:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    d5b9:	2e 63 73 76          	movsxd esi,DWORD PTR cs:[rbx+0x76]
    d5bd:	00 00                	add    BYTE PTR [rax],al
    d5bf:	00 43 6f             	add    BYTE PTR [rbx+0x6f],al
    d5c2:	75 6c                	jne    d630 <_IO_stdin_used+0x1630>
    d5c4:	64 20 6e 6f          	and    BYTE PTR fs:[rsi+0x6f],ch
    d5c8:	74 20                	je     d5ea <_IO_stdin_used+0x15ea>
    d5ca:	6c                   	ins    BYTE PTR es:[rdi],dx
    d5cb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d5cc:	61                   	(bad)  
    d5cd:	64 20 61 72          	and    BYTE PTR fs:[rcx+0x72],ah
    d5d1:	70 20                	jo     d5f3 <_IO_stdin_used+0x15f3>
    d5d3:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    d5d6:	68 65 20 66 72       	push   0x72662065
    d5db:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d5dc:	6d                   	ins    DWORD PTR es:[rdi],dx
    d5dd:	20 64 61 74          	and    BYTE PTR [rcx+riz*2+0x74],ah
    d5e1:	61                   	(bad)  
    d5e2:	62 61                	(bad)  
    d5e4:	73 65                	jae    d64b <_IO_stdin_used+0x164b>
    d5e6:	2c 20                	sub    al,0x20
    d5e8:	66 69 6c 65 20 6e 6f 	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f6e
    d5ef:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d5f0:	65 78 69             	gs js  d65c <_IO_stdin_used+0x165c>
    d5f3:	73 74                	jae    d669 <_IO_stdin_used+0x1669>
    d5f5:	61                   	(bad)  
    d5f6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d5f7:	74 00                	je     d5f9 <_IO_stdin_used+0x15f9>
    d5f9:	0a 00                	or     al,BYTE PTR [rax]
    d5fb:	2c 00                	sub    al,0x0
    d5fd:	00 00                	add    BYTE PTR [rax],al
    d5ff:	00 54 4c 53          	add    BYTE PTR [rsp+rcx*2+0x53],dl
    d603:	20 31                	and    BYTE PTR [rcx],dh
    d605:	2e 30 20             	xor    BYTE PTR cs:[rax],ah
    d608:	44                   	rex.R
    d609:	41 54                	push   r12
    d60b:	41 3a 20             	cmp    spl,BYTE PTR [r8]
    d60e:	00 54 4c 53          	add    BYTE PTR [rsp+rcx*2+0x53],dl
    d612:	20 31                	and    BYTE PTR [rcx],dh
    d614:	2e 32 20             	xor    ah,BYTE PTR cs:[rax]
    d617:	44                   	rex.R
    d618:	41 54                	push   r12
    d61a:	41 3a 20             	cmp    spl,BYTE PTR [r8]
    d61d:	00 54 4c 53          	add    BYTE PTR [rsp+rcx*2+0x53],dl
    d621:	20 31                	and    BYTE PTR [rcx],dh
    d623:	2e 33 20             	xor    esp,DWORD PTR cs:[rax]
    d626:	44                   	rex.R
    d627:	41 54                	push   r12
    d629:	41 3a 20             	cmp    spl,BYTE PTR [r8]
    d62c:	00 43 6c             	add    BYTE PTR [rbx+0x6c],al
    d62f:	69 65 6e 74 20 48 65 	imul   esp,DWORD PTR [rbp+0x6e],0x65482074
    d636:	6c                   	ins    BYTE PTR es:[rdi],dx
    d637:	6c                   	ins    BYTE PTR es:[rdi],dx
    d638:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d639:	00 53 65             	add    BYTE PTR [rbx+0x65],dl
    d63c:	72 76                	jb     d6b4 <_IO_stdin_used+0x16b4>
    d63e:	65 72 20             	gs jb  d661 <_IO_stdin_used+0x1661>
    d641:	48                   	rex.W
    d642:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    d644:	6c                   	ins    BYTE PTR es:[rdi],dx
    d645:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d646:	00 4e 65             	add    BYTE PTR [rsi+0x65],cl
    d649:	77 20                	ja     d66b <_IO_stdin_used+0x166b>
    d64b:	53                   	push   rbx
    d64c:	65 73 73             	gs jae d6c2 <_IO_stdin_used+0x16c2>
    d64f:	69 6f 6e 20 54 69 63 	imul   ebp,DWORD PTR [rdi+0x6e],0x63695420
    d656:	6b 65 74 00          	imul   esp,DWORD PTR [rbp+0x74],0x0
    d65a:	43                   	rex.XB
    d65b:	65 72 74             	gs jb  d6d2 <_IO_stdin_used+0x16d2>
    d65e:	69 66 69 63 61 74 65 	imul   esp,DWORD PTR [rsi+0x69],0x65746163
    d665:	00 43 6c             	add    BYTE PTR [rbx+0x6c],al
    d668:	69 65 6e 74 20 4b 65 	imul   esp,DWORD PTR [rbp+0x6e],0x654b2074
    d66f:	78 00                	js     d671 <_IO_stdin_used+0x1671>
    d671:	00 00                	add    BYTE PTR [rax],al
    d673:	00 09                	add    BYTE PTR [rcx],cl
    d675:	ac                   	lods   al,BYTE PTR ds:[rsi]
    d676:	ff                   	(bad)  
    d677:	ff 6d ab             	jmp    FWORD PTR [rbp-0x55]
    d67a:	ff                   	(bad)  
    d67b:	ff 86 ab ff ff 09    	inc    DWORD PTR [rsi+0x9ffffab]
    d681:	ac                   	lods   al,BYTE PTR ds:[rsi]
    d682:	ff                   	(bad)  
    d683:	ff a7 ab ff ff 09    	jmp    QWORD PTR [rdi+0x9ffffab]
    d689:	ac                   	lods   al,BYTE PTR ds:[rsi]
    d68a:	ff                   	(bad)  
    d68b:	ff 09                	dec    DWORD PTR [rcx]
    d68d:	ac                   	lods   al,BYTE PTR ds:[rsi]
    d68e:	ff                   	(bad)  
    d68f:	ff 09                	dec    DWORD PTR [rcx]
    d691:	ac                   	lods   al,BYTE PTR ds:[rsi]
    d692:	ff                   	(bad)  
    d693:	ff 09                	dec    DWORD PTR [rcx]
    d695:	ac                   	lods   al,BYTE PTR ds:[rsi]
    d696:	ff                   	(bad)  
    d697:	ff 09                	dec    DWORD PTR [rcx]
    d699:	ac                   	lods   al,BYTE PTR ds:[rsi]
    d69a:	ff                   	(bad)  
    d69b:	ff                   	(bad)  
    d69c:	e9 ab ff ff c8       	jmp    ffffffffc900d64c <_end+0xffffffffc8ed220c>
    d6a1:	ab                   	stos   DWORD PTR es:[rdi],eax
    d6a2:	ff                   	(bad)  
    d6a3:	ff 00                	inc    DWORD PTR [rax]
    d6a5:	00 00                	add    BYTE PTR [rax],al
    d6a7:	00 55 70             	add    BYTE PTR [rbp+0x70],dl
    d6aa:	64 61                	fs (bad) 
    d6ac:	74 69                	je     d717 <_IO_stdin_used+0x1717>
    d6ae:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d6af:	67 20 64 62 00       	and    BYTE PTR [edx+eiz*2+0x0],ah
    d6b4:	53                   	push   rbx
    d6b5:	51                   	push   rcx
    d6b6:	6c                   	ins    BYTE PTR es:[rdi],dx
    d6b7:	69 74 65 20 65 72 72 	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x6f727265
    d6be:	6f 
    d6bf:	72 3a                	jb     d6fb <_IO_stdin_used+0x16fb>
    d6c1:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # e13a <__GNU_EH_FRAME_HDR+0x5a>
    d6c7:	00 49 4e             	add    BYTE PTR [rcx+0x4e],cl
    d6ca:	53                   	push   rbx
    d6cb:	45 52                	rex.RB push r10
    d6cd:	54                   	push   rsp
    d6ce:	20 49 4e             	and    BYTE PTR [rcx+0x4e],cl
    d6d1:	54                   	push   rsp
    d6d2:	4f 20 61 72          	rex.WRXB and BYTE PTR [r9+0x72],r12b
    d6d6:	70 5f                	jo     d737 <_IO_stdin_used+0x1737>
    d6d8:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    d6db:	68 65 20 28 69       	push   0x69282065
    d6e0:	70 5f                	jo     d741 <_IO_stdin_used+0x1741>
    d6e2:	61                   	(bad)  
    d6e3:	64 64 72 65          	fs fs jb d74c <_IO_stdin_used+0x174c>
    d6e7:	73 73                	jae    d75c <_IO_stdin_used+0x175c>
    d6e9:	2c 20                	sub    al,0x20
    d6eb:	6d                   	ins    DWORD PTR es:[rdi],dx
    d6ec:	61                   	(bad)  
    d6ed:	63 5f 61             	movsxd ebx,DWORD PTR [rdi+0x61]
    d6f0:	64 64 72 65          	fs fs jb d759 <_IO_stdin_used+0x1759>
    d6f4:	73 73                	jae    d769 <_IO_stdin_used+0x1769>
    d6f6:	29 20                	sub    DWORD PTR [rax],esp
    d6f8:	56                   	push   rsi
    d6f9:	41                   	rex.B
    d6fa:	4c 55                	rex.WR push rbp
    d6fc:	45 53                	rex.RB push r11
    d6fe:	20 28                	and    BYTE PTR [rax],ch
    d700:	22 25 73 22 2c 20    	and    ah,BYTE PTR [rip+0x202c2273]        # 202cf979 <_end+0x20194539>
    d706:	22 25 73 22 29 3b    	and    ah,BYTE PTR [rip+0x3b292273]        # 3b29f97f <_end+0x3b16453f>
    d70c:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    d70f:	4c 69 74 65 20 65 6e 	imul   r14,QWORD PTR [rbp+riz*2+0x20],0x6f636e65
    d716:	63 6f 
    d718:	75 6e                	jne    d788 <_IO_stdin_used+0x1788>
    d71a:	74 65                	je     d781 <_IO_stdin_used+0x1781>
    d71c:	72 65                	jb     d783 <_IO_stdin_used+0x1783>
    d71e:	64 20 65 72          	and    BYTE PTR fs:[rbp+0x72],ah
    d722:	72 6f                	jb     d793 <_IO_stdin_used+0x1793>
    d724:	72 3a                	jb     d760 <_IO_stdin_used+0x1760>
    d726:	20 25 73 0a 00 2f    	and    BYTE PTR [rip+0x2f000a73],ah        # 2f00e19f <_end+0x2eed2d5f>
    d72c:	75 73                	jne    d7a1 <_IO_stdin_used+0x17a1>
    d72e:	72 2f                	jb     d75f <_IO_stdin_used+0x175f>
    d730:	73 68                	jae    d79a <_IO_stdin_used+0x179a>
    d732:	61                   	(bad)  
    d733:	72 65                	jb     d79a <_IO_stdin_used+0x179a>
    d735:	2f                   	(bad)  
    d736:	76 69                	jbe    d7a1 <_IO_stdin_used+0x17a1>
    d738:	67 69 6c 2f 73 70 69 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x642e6970
    d73f:	2e 64 
    d741:	62                   	(bad)  
    d742:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    d745:	4c 69 74 65 20 65 72 	imul   r14,QWORD PTR [rbp+riz*2+0x20],0x6f727265
    d74c:	72 6f 
    d74e:	72 20                	jb     d770 <_IO_stdin_used+0x1770>
    d750:	25 73 0a 00 00       	and    eax,0xa73
    d755:	00 00                	add    BYTE PTR [rax],al
    d757:	00 49 4e             	add    BYTE PTR [rcx+0x4e],cl
    d75a:	53                   	push   rbx
    d75b:	45 52                	rex.RB push r10
    d75d:	54                   	push   rsp
    d75e:	20 49 4e             	and    BYTE PTR [rcx+0x4e],cl
    d761:	54                   	push   rsp
    d762:	4f 20 73 70          	rex.WRXB and BYTE PTR [r11+0x70],r14b
    d766:	69 5f 74 61 62 6c 65 	imul   ebx,DWORD PTR [rdi+0x74],0x656c6261
    d76d:	20 28                	and    BYTE PTR [rax],ch
    d76f:	73 65                	jae    d7d6 <_IO_stdin_used+0x17d6>
    d771:	72 76                	jb     d7e9 <_IO_stdin_used+0x17e9>
    d773:	5f                   	pop    rdi
    d774:	61                   	(bad)  
    d775:	64 64 72 2c          	fs fs jb d7a5 <_IO_stdin_used+0x17a5>
    d779:	20 63 6c             	and    BYTE PTR [rbx+0x6c],ah
    d77c:	69 5f 61 64 64 72 2c 	imul   ebx,DWORD PTR [rdi+0x61],0x2c726464
    d783:	73 65                	jae    d7ea <_IO_stdin_used+0x17ea>
    d785:	72 76                	jb     d7fd <_IO_stdin_used+0x17fd>
    d787:	5f                   	pop    rdi
    d788:	70 6f                	jo     d7f9 <_IO_stdin_used+0x17f9>
    d78a:	72 74                	jb     d800 <_IO_stdin_used+0x1800>
    d78c:	2c 63                	sub    al,0x63
    d78e:	6c                   	ins    BYTE PTR es:[rdi],dx
    d78f:	69 5f 70 6f 72 74 2c 	imul   ebx,DWORD PTR [rdi+0x70],0x2c74726f
    d796:	73 65                	jae    d7fd <_IO_stdin_used+0x17fd>
    d798:	72 76                	jb     d810 <_IO_stdin_used+0x1810>
    d79a:	5f                   	pop    rdi
    d79b:	70 6b                	jo     d808 <_IO_stdin_used+0x1808>
    d79d:	74 5f                	je     d7fe <_IO_stdin_used+0x17fe>
    d79f:	73 65                	jae    d806 <_IO_stdin_used+0x1806>
    d7a1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d7a2:	74 2c                	je     d7d0 <_IO_stdin_used+0x17d0>
    d7a4:	63 6c 69 5f          	movsxd ebp,DWORD PTR [rcx+rbp*2+0x5f]
    d7a8:	70 6b                	jo     d815 <_IO_stdin_used+0x1815>
    d7aa:	74 5f                	je     d80b <_IO_stdin_used+0x180b>
    d7ac:	73 65                	jae    d813 <_IO_stdin_used+0x1813>
    d7ae:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d7af:	74 2c                	je     d7dd <_IO_stdin_used+0x17dd>
    d7b1:	73 65                	jae    d818 <_IO_stdin_used+0x1818>
    d7b3:	72 76                	jb     d82b <_IO_stdin_used+0x182b>
    d7b5:	5f                   	pop    rdi
    d7b6:	70 6b                	jo     d823 <_IO_stdin_used+0x1823>
    d7b8:	74 5f                	je     d819 <_IO_stdin_used+0x1819>
    d7ba:	72 65                	jb     d821 <_IO_stdin_used+0x1821>
    d7bc:	63 76 2c             	movsxd esi,DWORD PTR [rsi+0x2c]
    d7bf:	63 6c 69 5f          	movsxd ebp,DWORD PTR [rcx+rbp*2+0x5f]
    d7c3:	70 6b                	jo     d830 <_IO_stdin_used+0x1830>
    d7c5:	74 5f                	je     d826 <_IO_stdin_used+0x1826>
    d7c7:	72 65                	jb     d82e <_IO_stdin_used+0x182e>
    d7c9:	63 76 2c             	movsxd esi,DWORD PTR [rsi+0x2c]
    d7cc:	70 72                	jo     d840 <_IO_stdin_used+0x1840>
    d7ce:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d7cf:	74 6f                	je     d840 <_IO_stdin_used+0x1840>
    d7d1:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    d7d4:	2c 61                	sub    al,0x61
    d7d6:	76 67                	jbe    d83f <_IO_stdin_used+0x183f>
    d7d8:	5f                   	pop    rdi
    d7d9:	70 70                	jo     d84b <_IO_stdin_used+0x184b>
    d7db:	73 2c                	jae    d809 <_IO_stdin_used+0x1809>
    d7dd:	73 74                	jae    d853 <_IO_stdin_used+0x1853>
    d7df:	61                   	(bad)  
    d7e0:	72 74                	jb     d856 <_IO_stdin_used+0x1856>
    d7e2:	5f                   	pop    rdi
    d7e3:	74 69                	je     d84e <_IO_stdin_used+0x184e>
    d7e5:	6d                   	ins    DWORD PTR es:[rdi],dx
    d7e6:	65 2c 65             	gs sub al,0x65
    d7e9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d7ea:	64 5f                	fs pop rdi
    d7ec:	74 69                	je     d857 <_IO_stdin_used+0x1857>
    d7ee:	6d                   	ins    DWORD PTR es:[rdi],dx
    d7ef:	65 2c 64             	gs sub al,0x64
    d7f2:	61                   	(bad)  
    d7f3:	74 61                	je     d856 <_IO_stdin_used+0x1856>
    d7f5:	5f                   	pop    rdi
    d7f6:	70 6b                	jo     d863 <_IO_stdin_used+0x1863>
    d7f8:	74 73                	je     d86d <_IO_stdin_used+0x186d>
    d7fa:	2c 63                	sub    al,0x63
    d7fc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d7fd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d7fe:	74 72                	je     d872 <_IO_stdin_used+0x1872>
    d800:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d801:	6c                   	ins    BYTE PTR es:[rdi],dx
    d802:	5f                   	pop    rdi
    d803:	70 6b                	jo     d870 <_IO_stdin_used+0x1870>
    d805:	74 73                	je     d87a <_IO_stdin_used+0x187a>
    d807:	29 20                	sub    DWORD PTR [rax],esp
    d809:	56                   	push   rsi
    d80a:	41                   	rex.B
    d80b:	4c 55                	rex.WR push rbp
    d80d:	45 53                	rex.RB push r11
    d80f:	20 28                	and    BYTE PTR [rax],ch
    d811:	22 25 73 22 2c 22    	and    ah,BYTE PTR [rip+0x222c2273]        # 222cfa8a <_end+0x2219464a>
    d817:	25 73 22 2c 25       	and    eax,0x252c2273
    d81c:	6c                   	ins    BYTE PTR es:[rdi],dx
    d81d:	64 2c 25             	fs sub al,0x25
    d820:	6c                   	ins    BYTE PTR es:[rdi],dx
    d821:	64 2c 25             	fs sub al,0x25
    d824:	64 2c 25             	fs sub al,0x25
    d827:	64 2c 25             	fs sub al,0x25
    d82a:	64 2c 25             	fs sub al,0x25
    d82d:	64 2c 25             	fs sub al,0x25
    d830:	64 2c 25             	fs sub al,0x25
    d833:	64 2c 25             	fs sub al,0x25
    d836:	6c                   	ins    BYTE PTR es:[rdi],dx
    d837:	64 2c 25             	fs sub al,0x25
    d83a:	6c                   	ins    BYTE PTR es:[rdi],dx
    d83b:	64 2c 25             	fs sub al,0x25
    d83e:	64 2c 25             	fs sub al,0x25
    d841:	64 29 3b             	sub    DWORD PTR fs:[rbx],edi
    d844:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    d847:	4c                   	rex.WR
    d848:	49 54                	rex.WB push r12
    d84a:	45 20 45 6e          	and    BYTE PTR [r13+0x6e],r8b
    d84e:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    d851:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d852:	74 65                	je     d8b9 <_IO_stdin_used+0x18b9>
    d854:	72 65                	jb     d8bb <_IO_stdin_used+0x18bb>
    d856:	64 20 65 72          	and    BYTE PTR fs:[rbp+0x72],ah
    d85a:	72 6f                	jb     d8cb <_IO_stdin_used+0x18cb>
    d85c:	72 3a                	jb     d898 <_IO_stdin_used+0x1898>
    d85e:	20 25 73 0a 00 53    	and    BYTE PTR [rip+0x53000a73],ah        # 5300e2d7 <_end+0x52ed2e97>
    d864:	74 72                	je     d8d8 <_IO_stdin_used+0x18d8>
    d866:	6c                   	ins    BYTE PTR es:[rdi],dx
    d867:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d868:	63 20                	movsxd esp,DWORD PTR [rax]
    d86a:	73 75                	jae    d8e1 <_IO_stdin_used+0x18e1>
    d86c:	63 63 65             	movsxd esp,DWORD PTR [rbx+0x65]
    d86f:	73 73                	jae    d8e4 <_IO_stdin_used+0x18e4>
    d871:	66 75 6c             	data16 jne d8e0 <_IO_stdin_used+0x18e0>
    d874:	00 51 75             	add    BYTE PTR [rcx+0x75],dl
    d877:	65 72 79             	gs jb  d8f3 <_IO_stdin_used+0x18f3>
    d87a:	3a 20                	cmp    ah,BYTE PTR [rax]
    d87c:	25 73 0a 00 4c       	and    eax,0x4c000a73
    d881:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d882:	67 69 6e 20 69 6e 63 	imul   ebp,DWORD PTR [esi+0x20],0x6f636e69
    d889:	6f 
    d88a:	72 72                	jb     d8fe <_IO_stdin_used+0x18fe>
    d88c:	65 63 74 00 6c       	movsxd esi,DWORD PTR gs:[rax+rax*1+0x6c]
    d891:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d892:	67 69 6e 20 69 6e 63 	imul   ebp,DWORD PTR [esi+0x20],0x6f636e69
    d899:	6f 
    d89a:	72 72                	jb     d90e <_IO_stdin_used+0x190e>
    d89c:	65 63 74 00 50       	movsxd esi,DWORD PTR gs:[rax+rax*1+0x50]
    d8a1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d8a2:	73 73                	jae    d917 <_IO_stdin_used+0x1917>
    d8a4:	69 62 6c 65 20 46 54 	imul   esp,DWORD PTR [rdx+0x6c],0x54462065
    d8ab:	50                   	push   rax
    d8ac:	20 62 72             	and    BYTE PTR [rdx+0x72],ah
    d8af:	75 74                	jne    d925 <_IO_stdin_used+0x1925>
    d8b1:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    d8b5:	72 63                	jb     d91a <_IO_stdin_used+0x191a>
    d8b7:	65 20 61 74          	and    BYTE PTR gs:[rcx+0x74],ah
    d8bb:	74 65                	je     d922 <_IO_stdin_used+0x1922>
    d8bd:	6d                   	ins    DWORD PTR es:[rdi],dx
    d8be:	70 74                	jo     d934 <_IO_stdin_used+0x1934>
    d8c0:	3a 20                	cmp    ah,BYTE PTR [rax]
    d8c2:	25 73 28 73 75       	and    eax,0x75732873
    d8c7:	73 70                	jae    d939 <_IO_stdin_used+0x1939>
    d8c9:	65 63 74 29 20       	movsxd esi,DWORD PTR gs:[rcx+rbp*1+0x20]
    d8ce:	2d 3e 20 25 73       	sub    eax,0x7325203e
    d8d3:	2e 20 25 64 20 66 61 	and    BYTE PTR cs:[rip+0x61662064],ah        # 6166f93e <_end+0x615344fe>
    d8da:	69 6c 65 64 20 6c 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x676f6c20
    d8e1:	67 
    d8e2:	69 6e 73 0a 00 00 53 	imul   ebp,DWORD PTR [rsi+0x73],0x5300000a
    d8e9:	50                   	push   rax
    d8ea:	49 20 54 41 42       	rex.WB and BYTE PTR [r9+rax*2+0x42],dl
    d8ef:	4c                   	rex.WR
    d8f0:	45 20 52 45          	and    BYTE PTR [r10+0x45],r10b
    d8f4:	54                   	push   rsp
    d8f5:	52                   	push   rdx
    d8f6:	41                   	rex.B
    d8f7:	4e 53                	rex.WRX push rbx
    d8f9:	3a 20                	cmp    ah,BYTE PTR [rax]
    d8fb:	25 64 3a 20 25       	and    eax,0x25203a64
    d900:	73 3a                	jae    d93c <_IO_stdin_used+0x193c>
    d902:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    d907:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64261380 <_end+0x64125f40>
    d90d:	0a 00                	or     al,BYTE PTR [rax]
    d90f:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d912:	49 20 4e 45          	rex.WB and BYTE PTR [r14+0x45],cl
    d916:	57                   	push   rdi
    d917:	20 43 4f             	and    BYTE PTR [rbx+0x4f],al
    d91a:	4e 56                	rex.WRX push rsi
    d91c:	3a 20                	cmp    ah,BYTE PTR [rax]
    d91e:	25 64 3a 20 25       	and    eax,0x25203a64
    d923:	73 3a                	jae    d95f <_IO_stdin_used+0x195f>
    d925:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    d92a:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642613a3 <_end+0x64125f63>
    d930:	0a 00                	or     al,BYTE PTR [rax]
    d932:	00 00                	add    BYTE PTR [rax],al
    d934:	00 00                	add    BYTE PTR [rax],al
    d936:	00 00                	add    BYTE PTR [rax],al
    d938:	53                   	push   rbx
    d939:	50                   	push   rax
    d93a:	49 20 54 57 48       	rex.WB and BYTE PTR [r15+rdx*2+0x48],dl
    d93f:	20 32                	and    BYTE PTR [rdx],dh
    d941:	2f                   	(bad)  
    d942:	33 3a                	xor    edi,DWORD PTR [rdx]
    d944:	20 25 64 3a 20 25    	and    BYTE PTR [rip+0x25203a64],ah        # 252113ae <_end+0x250d5f6e>
    d94a:	73 3a                	jae    d986 <_IO_stdin_used+0x1986>
    d94c:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    d951:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642613ca <_end+0x64125f8a>
    d957:	0a 00                	or     al,BYTE PTR [rax]
    d959:	00 00                	add    BYTE PTR [rax],al
    d95b:	00 00                	add    BYTE PTR [rax],al
    d95d:	00 00                	add    BYTE PTR [rax],al
    d95f:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d962:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d966:	54                   	push   rsp
    d967:	52                   	push   rdx
    d968:	59                   	pop    rcx
    d969:	3a 20                	cmp    ah,BYTE PTR [rax]
    d96b:	25 64 3a 20 53       	and    eax,0x53203a64
    d970:	45 53                	rex.RB push r11
    d972:	53                   	push   rbx
    d973:	49                   	rex.WB
    d974:	4f                   	rex.WRXB
    d975:	4e 20 45 53          	rex.WRX and BYTE PTR [rbp+0x53],r8b
    d979:	54                   	push   rsp
    d97a:	3a 20                	cmp    ah,BYTE PTR [rax]
    d97c:	25 73 3a 25 64       	and    eax,0x64253a73
    d981:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325f9c5 <_end+0x73124585>
    d987:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e3f1 <__GNU_EH_FRAME_HDR+0x311>
    d98d:	00 00                	add    BYTE PTR [rax],al
    d98f:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d992:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d996:	54                   	push   rsp
    d997:	52                   	push   rdx
    d998:	59                   	pop    rcx
    d999:	3a 20                	cmp    ah,BYTE PTR [rax]
    d99b:	25 64 3a 20 50       	and    eax,0x50203a64
    d9a0:	4f                   	rex.WRXB
    d9a1:	4c                   	rex.WR
    d9a2:	49 54                	rex.WB push r12
    d9a4:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    d9a8:	4e 56                	rex.WRX push rsi
    d9aa:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    d9ad:	44 20 33             	and    BYTE PTR [rbx],r14b
    d9b0:	2f                   	(bad)  
    d9b1:	33 3a                	xor    edi,DWORD PTR [rdx]
    d9b3:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 6426142c <_end+0x64125fec>
    d9b9:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325f9fd <_end+0x731245bd>
    d9bf:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e429 <__GNU_EH_FRAME_HDR+0x349>
    d9c5:	00 00                	add    BYTE PTR [rax],al
    d9c7:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d9ca:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d9ce:	54                   	push   rsp
    d9cf:	52                   	push   rdx
    d9d0:	59                   	pop    rcx
    d9d1:	3a 20                	cmp    ah,BYTE PTR [rax]
    d9d3:	25 64 3a 20 50       	and    eax,0x50203a64
    d9d8:	4f                   	rex.WRXB
    d9d9:	4c                   	rex.WR
    d9da:	49 54                	rex.WB push r12
    d9dc:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    d9e0:	4e 56                	rex.WRX push rsi
    d9e2:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    d9e5:	44 20 32             	and    BYTE PTR [rdx],r14b
    d9e8:	2f                   	(bad)  
    d9e9:	33 3a                	xor    edi,DWORD PTR [rdx]
    d9eb:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64261464 <_end+0x64126024>
    d9f1:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fa35 <_end+0x731245f5>
    d9f7:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e461 <__GNU_EH_FRAME_HDR+0x381>
    d9fd:	00 00                	add    BYTE PTR [rax],al
    d9ff:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    da02:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    da06:	54                   	push   rsp
    da07:	52                   	push   rdx
    da08:	59                   	pop    rcx
    da09:	3a 20                	cmp    ah,BYTE PTR [rax]
    da0b:	25 64 3a 20 50       	and    eax,0x50203a64
    da10:	4f                   	rex.WRXB
    da11:	4c                   	rex.WR
    da12:	49 54                	rex.WB push r12
    da14:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    da18:	4e 56                	rex.WRX push rsi
    da1a:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    da1d:	44 20 31             	and    BYTE PTR [rcx],r14b
    da20:	2f                   	(bad)  
    da21:	33 3a                	xor    edi,DWORD PTR [rdx]
    da23:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 6426149c <_end+0x6412605c>
    da29:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fa6d <_end+0x7312462d>
    da2f:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e499 <__GNU_EH_FRAME_HDR+0x3b9>
    da35:	00 00                	add    BYTE PTR [rax],al
    da37:	00 61 00             	add    BYTE PTR [rcx+0x0],ah
    da3a:	00 00                	add    BYTE PTR [rax],al
    da3c:	00 00                	add    BYTE PTR [rax],al
    da3e:	00 00                	add    BYTE PTR [rax],al
    da40:	43 52                	rex.XB push r10
    da42:	49 54                	rex.WB push r12
    da44:	49                   	rex.WB
    da45:	43                   	rex.XB
    da46:	41                   	rex.B
    da47:	4c 20 46 41          	rex.WR and BYTE PTR [rsi+0x41],r8b
    da4b:	49                   	rex.WB
    da4c:	4c                   	rex.WR
    da4d:	45                   	rex.RB
    da4e:	44 20 54 4f 20       	and    BYTE PTR [rdi+rcx*2+0x20],r10b
    da53:	4f 50                	rex.WRXB push r8
    da55:	45                   	rex.RB
    da56:	4e 20 46 49          	rex.WRX and BYTE PTR [rsi+0x49],r8b
    da5a:	4c                   	rex.WR
    da5b:	45 20 46 4f          	and    BYTE PTR [r14+0x4f],r8b
    da5f:	52                   	push   rdx
    da60:	20 4c 4f 47          	and    BYTE PTR [rdi+rcx*2+0x47],cl
    da64:	47                   	rex.RXB
    da65:	49                   	rex.WB
    da66:	4e                   	rex.WRX
    da67:	47 3a 20             	rex.RXB cmp r12b,BYTE PTR [r8]
    da6a:	25 73 0a 00 25       	and    eax,0x25000a73
    da6f:	73 20                	jae    da91 <_IO_stdin_used+0x1a91>
    da71:	25 73 20 25 73       	and    eax,0x73252073
    da76:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325faba <_end+0x7312467a>
    da7c:	0a 00                	or     al,BYTE PTR [rax]
    da7e:	25 73 20 25 73       	and    eax,0x73252073
    da83:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642614fc <_end+0x641260bc>
    da89:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325facd <_end+0x7312468d>
    da8f:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e4f9 <__GNU_EH_FRAME_HDR+0x419>
    da95:	00 00                	add    BYTE PTR [rax],al
    da97:	00 61 6e             	add    BYTE PTR [rcx+0x6e],ah
    da9a:	79 00                	jns    da9c <_IO_stdin_used+0x1a9c>
    da9c:	41                   	rex.B
    da9d:	4e 59                	rex.WRX pop rcx
    da9f:	00 49 43             	add    BYTE PTR [rcx+0x43],cl
    daa2:	4d 50                	rex.WRB push r8
    daa4:	00 54 43 50          	add    BYTE PTR [rbx+rax*2+0x50],dl
    daa8:	00 55 44             	add    BYTE PTR [rbp+0x44],dl
    daab:	50                   	push   rax
    daac:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    daaf:	72 5f                	jb     db10 <_IO_stdin_used+0x1b10>
    dab1:	6d                   	ins    DWORD PTR es:[rdi],dx
    dab2:	61                   	(bad)  
    dab3:	74 63                	je     db18 <_IO_stdin_used+0x1b18>
    dab5:	68 00 6e 6f 6e       	push   0x6e6f6e00
    daba:	65 00 70 63          	add    BYTE PTR gs:[rax+0x63],dh
    dabe:	72 65                	jb     db25 <_IO_stdin_used+0x1b25>
    dac0:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    dac3:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    dac7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dac8:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    dacb:	6c                   	ins    BYTE PTR es:[rdi],dx
    dacc:	65 20 74 79 70       	and    BYTE PTR gs:[rcx+rdi*2+0x70],dh
    dad1:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    dad4:	25 73 0a 00 3b       	and    eax,0x3b000a73
    dad9:	00 46 6f             	add    BYTE PTR [rsi+0x6f],al
    dadc:	75 6e                	jne    db4c <_IO_stdin_used+0x1b4c>
    dade:	64 20 6f 70          	and    BYTE PTR fs:[rdi+0x70],ch
    dae2:	65 72 61             	gs jb  db46 <_IO_stdin_used+0x1b46>
    dae5:	74 6f                	je     db56 <_IO_stdin_used+0x1b56>
    dae7:	72 00                	jb     dae9 <_IO_stdin_used+0x1ae9>
    dae9:	61                   	(bad)  
    daea:	6c                   	ins    BYTE PTR es:[rdi],dx
    daeb:	65 72 74             	gs jb  db62 <_IO_stdin_used+0x1b62>
    daee:	00 24 68             	add    BYTE PTR [rax+rbp*2],ah
    daf1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    daf2:	6d                   	ins    DWORD PTR es:[rdi],dx
    daf3:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    daf5:	65 74 00             	gs je  daf8 <_IO_stdin_used+0x1af8>
    daf8:	2d 3e 00 3c 3e       	sub    eax,0x3e3c003e
    dafd:	00 24 65 78 74 65 72 	add    BYTE PTR [riz*2+0x72657478],ah
    db04:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db05:	61                   	(bad)  
    db06:	6c                   	ins    BYTE PTR es:[rdi],dx
    db07:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db08:	65 74 00             	gs je  db0b <_IO_stdin_used+0x1b0b>
    db0b:	22 3b                	and    bh,BYTE PTR [rbx]
    db0d:	00 6e 61             	add    BYTE PTR [rsi+0x61],ch
    db10:	6d                   	ins    DWORD PTR es:[rdi],dx
    db11:	65 3a 22             	cmp    ah,BYTE PTR gs:[rdx]
    db14:	00 6d 73             	add    BYTE PTR [rbp+0x73],ch
    db17:	67 3a 22             	cmp    ah,BYTE PTR [edx]
    db1a:	00 64 65 70          	add    BYTE PTR [rbp+riz*2+0x70],ah
    db1e:	74 68                	je     db88 <_IO_stdin_used+0x1b88>
    db20:	3a 00                	cmp    al,BYTE PTR [rax]
    db22:	74 79                	je     db9d <_IO_stdin_used+0x1b9d>
    db24:	70 65                	jo     db8b <_IO_stdin_used+0x1b8b>
    db26:	3a 00                	cmp    al,BYTE PTR [rax]
    db28:	74 61                	je     db8b <_IO_stdin_used+0x1b8b>
    db2a:	72 67                	jb     db93 <_IO_stdin_used+0x1b93>
    db2c:	65 74 3a             	gs je  db69 <_IO_stdin_used+0x1b69>
    db2f:	22 00                	and    al,BYTE PTR [rax]
    db31:	73 65                	jae    db98 <_IO_stdin_used+0x1b98>
    db33:	76 3a                	jbe    db6f <_IO_stdin_used+0x1b6f>
    db35:	00 00                	add    BYTE PTR [rax],al
    db37:	00 52 75             	add    BYTE PTR [rdx+0x75],dl
    db3a:	6c                   	ins    BYTE PTR es:[rdi],dx
    db3b:	65 20 73 65          	and    BYTE PTR gs:[rbx+0x65],dh
    db3f:	76 65                	jbe    dba6 <_IO_stdin_used+0x1ba6>
    db41:	72 69                	jb     dbac <_IO_stdin_used+0x1bac>
    db43:	74 79                	je     dbbe <_IO_stdin_used+0x1bbe>
    db45:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    db48:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    db49:	75 6c                	jne    dbb7 <_IO_stdin_used+0x1bb7>
    db4b:	64 20 62 65          	and    BYTE PTR fs:[rdx+0x65],ah
    db4f:	20 3e                	and    BYTE PTR [rsi],bh
    db51:	20 30                	and    BYTE PTR [rax],dh
    db53:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    db56:	64 20 3c 3d 20 31 30 	and    BYTE PTR fs:[rdi*1+0x303120],bh
    db5d:	00 
    db5e:	00 00                	add    BYTE PTR [rax],al
    db60:	52                   	push   rdx
    db61:	75 6c                	jne    dbcf <_IO_stdin_used+0x1bcf>
    db63:	65 20 73 65          	and    BYTE PTR gs:[rbx+0x65],dh
    db67:	76 65                	jbe    dbce <_IO_stdin_used+0x1bce>
    db69:	72 69                	jb     dbd4 <_IO_stdin_used+0x1bd4>
    db6b:	74 79                	je     dbe6 <_IO_stdin_used+0x1be6>
    db6d:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    db70:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    db71:	75 6c                	jne    dbdf <_IO_stdin_used+0x1bdf>
    db73:	64 20 62 65          	and    BYTE PTR fs:[rdx+0x65],ah
    db77:	20 61 20             	and    BYTE PTR [rcx+0x20],ah
    db7a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db7b:	75 6d                	jne    dbea <_IO_stdin_used+0x1bea>
    db7d:	65 72 69             	gs jb  dbe9 <_IO_stdin_used+0x1be9>
    db80:	63 20                	movsxd esp,DWORD PTR [rax]
    db82:	76 61                	jbe    dbe5 <_IO_stdin_used+0x1be5>
    db84:	6c                   	ins    BYTE PTR es:[rdi],dx
    db85:	75 65                	jne    dbec <_IO_stdin_used+0x1bec>
    db87:	00 69 74             	add    BYTE PTR [rcx+0x74],ch
    db8a:	79 70                	jns    dbfc <_IO_stdin_used+0x1bfc>
    db8c:	65 3a 00             	cmp    al,BYTE PTR gs:[rax]
    db8f:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    db91:	76 61                	jbe    dbf4 <_IO_stdin_used+0x1bf4>
    db93:	6c                   	ins    BYTE PTR es:[rdi],dx
    db94:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    db9b:	20 
    db9c:	74 79                	je     dc17 <_IO_stdin_used+0x1c17>
    db9e:	70 65                	jo     dc05 <_IO_stdin_used+0x1c05>
    dba0:	20 76 61             	and    BYTE PTR [rsi+0x61],dh
    dba3:	6c                   	ins    BYTE PTR es:[rdi],dx
    dba4:	75 65                	jne    dc0b <_IO_stdin_used+0x1c0b>
    dba6:	00 00                	add    BYTE PTR [rax],al
    dba8:	25 73 3a 20 69       	and    eax,0x69203a73
    dbad:	74 79                	je     dc28 <_IO_stdin_used+0x1c28>
    dbaf:	70 65                	jo     dc16 <_IO_stdin_used+0x1c16>
    dbb1:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    dbb4:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbb5:	79 20                	jns    dbd7 <_IO_stdin_used+0x1bd7>
    dbb7:	61                   	(bad)  
    dbb8:	70 70                	jo     dc2a <_IO_stdin_used+0x1c2a>
    dbba:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbbb:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dbc2:	72 75                	jb     dc39 <_IO_stdin_used+0x1c39>
    dbc4:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbc5:	65 73 20             	gs jae dbe8 <_IO_stdin_used+0x1be8>
    dbc8:	77 69                	ja     dc33 <_IO_stdin_used+0x1c33>
    dbca:	74 68                	je     dc34 <_IO_stdin_used+0x1c34>
    dbcc:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    dbcf:	4d 50                	rex.WRB push r8
    dbd1:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dbd4:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dbd7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dbd8:	74 6f                	je     dc49 <_IO_stdin_used+0x1c49>
    dbda:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dbdd:	0a 00                	or     al,BYTE PTR [rax]
    dbdf:	69 63 6f 64 65 3a 00 	imul   esp,DWORD PTR [rbx+0x6f],0x3a6564
    dbe6:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    dbe8:	76 61                	jbe    dc4b <_IO_stdin_used+0x1c4b>
    dbea:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbeb:	69 64 65 20 69 63 6d 	imul   esp,DWORD PTR [rbp+riz*2+0x20],0x706d6369
    dbf2:	70 
    dbf3:	20 63 6f             	and    BYTE PTR [rbx+0x6f],ah
    dbf6:	64 65 20 76 61       	fs and BYTE PTR gs:[rsi+0x61],dh
    dbfb:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbfc:	75 65                	jne    dc63 <_IO_stdin_used+0x1c63>
    dbfe:	00 00                	add    BYTE PTR [rax],al
    dc00:	69 63 6f 64 65 20 6f 	imul   esp,DWORD PTR [rbx+0x6f],0x6f206564
    dc07:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dc08:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc09:	79 20                	jns    dc2b <_IO_stdin_used+0x1c2b>
    dc0b:	61                   	(bad)  
    dc0c:	70 70                	jo     dc7e <_IO_stdin_used+0x1c7e>
    dc0e:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc0f:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dc16:	72 75                	jb     dc8d <_IO_stdin_used+0x1c8d>
    dc18:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc19:	65 73 20             	gs jae dc3c <_IO_stdin_used+0x1c3c>
    dc1c:	77 69                	ja     dc87 <_IO_stdin_used+0x1c87>
    dc1e:	74 68                	je     dc88 <_IO_stdin_used+0x1c88>
    dc20:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    dc23:	4d 50                	rex.WRB push r8
    dc25:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dc28:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dc2b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dc2c:	74 6f                	je     dc9d <_IO_stdin_used+0x1c9d>
    dc2e:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dc31:	00 69 63             	add    BYTE PTR [rcx+0x63],ch
    dc34:	6d                   	ins    DWORD PTR es:[rdi],dx
    dc35:	70 5f                	jo     dc96 <_IO_stdin_used+0x1c96>
    dc37:	69 64 3a 00 49 6e 76 	imul   esp,DWORD PTR [rdx+rdi*1+0x0],0x61766e49
    dc3e:	61 
    dc3f:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc40:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    dc47:	20 
    dc48:	69 64 20 76 61 6c 75 	imul   esp,DWORD PTR [rax+riz*1+0x76],0x65756c61
    dc4f:	65 
	...
    dc58:	49                   	rex.WB
    dc59:	43                   	rex.XB
    dc5a:	4d 50                	rex.WRB push r8
    dc5c:	20 49 44             	and    BYTE PTR [rcx+0x44],cl
    dc5f:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    dc62:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc63:	79 20                	jns    dc85 <_IO_stdin_used+0x1c85>
    dc65:	61                   	(bad)  
    dc66:	70 70                	jo     dcd8 <_IO_stdin_used+0x1cd8>
    dc68:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc69:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dc70:	72 75                	jb     dce7 <_IO_stdin_used+0x1ce7>
    dc72:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc73:	65 73 20             	gs jae dc96 <_IO_stdin_used+0x1c96>
    dc76:	77 69                	ja     dce1 <_IO_stdin_used+0x1ce1>
    dc78:	74 68                	je     dce2 <_IO_stdin_used+0x1ce2>
    dc7a:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    dc7d:	4d 50                	rex.WRB push r8
    dc7f:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dc82:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dc85:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dc86:	74 6f                	je     dcf7 <_IO_stdin_used+0x1cf7>
    dc88:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dc8b:	00 69 63             	add    BYTE PTR [rcx+0x63],ch
    dc8e:	6d                   	ins    DWORD PTR es:[rdi],dx
    dc8f:	70 5f                	jo     dcf0 <_IO_stdin_used+0x1cf0>
    dc91:	73 65                	jae    dcf8 <_IO_stdin_used+0x1cf8>
    dc93:	71 3a                	jno    dccf <_IO_stdin_used+0x1ccf>
    dc95:	00 49 6e             	add    BYTE PTR [rcx+0x6e],cl
    dc98:	76 61                	jbe    dcfb <_IO_stdin_used+0x1cfb>
    dc9a:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc9b:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    dca2:	20 
    dca3:	73 65                	jae    dd0a <_IO_stdin_used+0x1d0a>
    dca5:	71 75                	jno    dd1c <_IO_stdin_used+0x1d1c>
    dca7:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    dca9:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    dcac:	76 61                	jbe    dd0f <_IO_stdin_used+0x1d0f>
    dcae:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcaf:	75 65                	jne    dd16 <_IO_stdin_used+0x1d16>
    dcb1:	00 74 74 6c          	add    BYTE PTR [rsp+rsi*2+0x6c],dh
    dcb5:	3a 00                	cmp    al,BYTE PTR [rax]
    dcb7:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    dcb9:	76 61                	jbe    dd1c <_IO_stdin_used+0x1d1c>
    dcbb:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcbc:	69 64 20 74 74 6c 20 	imul   esp,DWORD PTR [rax+riz*1+0x74],0x76206c74
    dcc3:	76 
    dcc4:	61                   	(bad)  
    dcc5:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcc6:	75 65                	jne    dd2d <_IO_stdin_used+0x1d2d>
    dcc8:	00 66 6c             	add    BYTE PTR [rsi+0x6c],ah
    dccb:	61                   	(bad)  
    dccc:	67 73 3a             	addr32 jae dd09 <_IO_stdin_used+0x1d09>
    dccf:	22 00                	and    al,BYTE PTR [rax]
    dcd1:	00 00                	add    BYTE PTR [rax],al
    dcd3:	00 00                	add    BYTE PTR [rax],al
    dcd5:	00 00                	add    BYTE PTR [rax],al
    dcd7:	00 66 6c             	add    BYTE PTR [rsi+0x6c],ah
    dcda:	61                   	(bad)  
    dcdb:	67 73 20             	addr32 jae dcfe <_IO_stdin_used+0x1cfe>
    dcde:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dcdf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dce0:	6c                   	ins    BYTE PTR es:[rdi],dx
    dce1:	79 20                	jns    dd03 <_IO_stdin_used+0x1d03>
    dce3:	61                   	(bad)  
    dce4:	70 70                	jo     dd56 <_IO_stdin_used+0x1d56>
    dce6:	6c                   	ins    BYTE PTR es:[rdi],dx
    dce7:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dcee:	72 75                	jb     dd65 <_IO_stdin_used+0x1d65>
    dcf0:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcf1:	65 73 20             	gs jae dd14 <_IO_stdin_used+0x1d14>
    dcf4:	77 69                	ja     dd5f <_IO_stdin_used+0x1d5f>
    dcf6:	74 68                	je     dd60 <_IO_stdin_used+0x1d60>
    dcf8:	20 74 63 70          	and    BYTE PTR [rbx+riz*2+0x70],dh
    dcfc:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dcff:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dd02:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd03:	74 6f                	je     dd74 <_IO_stdin_used+0x1d74>
    dd05:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dd08:	00 61 63             	add    BYTE PTR [rcx+0x63],ah
    dd0b:	6b 3a 00             	imul   edi,DWORD PTR [rdx],0x0
    dd0e:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    dd10:	76 61                	jbe    dd73 <_IO_stdin_used+0x1d73>
    dd12:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd13:	69 64 20 61 63 6b 20 	imul   esp,DWORD PTR [rax+riz*1+0x61],0x76206b63
    dd1a:	76 
    dd1b:	61                   	(bad)  
    dd1c:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd1d:	75 65                	jne    dd84 <_IO_stdin_used+0x1d84>
    dd1f:	00 70 63             	add    BYTE PTR [rax+0x63],dh
    dd22:	72 65                	jb     dd89 <_IO_stdin_used+0x1d89>
    dd24:	3a 22                	cmp    ah,BYTE PTR [rdx]
    dd26:	00 00                	add    BYTE PTR [rax],al
    dd28:	46 61                	rex.RX (bad) 
    dd2a:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    dd31:	20 
    dd32:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    dd35:	70 69                	jo     dda0 <_IO_stdin_used+0x1da0>
    dd37:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd38:	65 20 72 65          	and    BYTE PTR gs:[rdx+0x65],dh
    dd3c:	67 75 6c             	addr32 jne ddab <_IO_stdin_used+0x1dab>
    dd3f:	61                   	(bad)  
    dd40:	72 20                	jb     dd62 <_IO_stdin_used+0x1d62>
    dd42:	65 78 70             	gs js  ddb5 <_IO_stdin_used+0x1db5>
    dd45:	72 65                	jb     ddac <_IO_stdin_used+0x1dac>
    dd47:	73 73                	jae    ddbc <_IO_stdin_used+0x1dbc>
    dd49:	69 6f 6e 00 64 73 69 	imul   ebp,DWORD PTR [rdi+0x6e],0x69736400
    dd50:	7a 65                	jp     ddb7 <_IO_stdin_used+0x1db7>
    dd52:	3a 00                	cmp    al,BYTE PTR [rax]
    dd54:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd55:	66 66 73 65          	data16 data16 jae ddbe <_IO_stdin_used+0x1dbe>
    dd59:	74 3a                	je     dd95 <_IO_stdin_used+0x1d95>
    dd5b:	00 65 73             	add    BYTE PTR [rbp+0x73],ah
    dd5e:	74 61                	je     ddc1 <_IO_stdin_used+0x1dc1>
    dd60:	62                   	(bad)  
    dd61:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd62:	69 73 68 65 64 00 6e 	imul   esi,DWORD PTR [rbx+0x68],0x6e006465
    dd69:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd6a:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    dd6c:	63 72 79             	movsxd esi,DWORD PTR [rdx+0x79]
    dd6f:	70 74                	jo     dde5 <_IO_stdin_used+0x1de5>
    dd71:	00 25 63 00 25 30    	add    BYTE PTR [rip+0x30250063],ah        # 3025ddda <_end+0x3012299a>
    dd77:	32 78 00             	xor    bh,BYTE PTR [rax+0x0]
    dd7a:	00 00                	add    BYTE PTR [rax],al
    dd7c:	3e 00 3c 00          	add    BYTE PTR ds:[rax+rax*1],bh
    dd80:	21 00                	and    DWORD PTR [rax],eax
    dd82:	3c 3d                	cmp    al,0x3d
    dd84:	00 3e                	add    BYTE PTR [rsi],bh
    dd86:	3d 00 55 6e 73       	cmp    eax,0x736e5500
    dd8b:	75 70                	jne    ddfd <_IO_stdin_used+0x1dfd>
    dd8d:	70 6f                	jo     ddfe <_IO_stdin_used+0x1dfe>
    dd8f:	72 74                	jb     de05 <_IO_stdin_used+0x1e05>
    dd91:	65 64 20 6f 70       	gs and BYTE PTR fs:[rdi+0x70],ch
    dd96:	65 72 61             	gs jb  ddfa <_IO_stdin_used+0x1dfa>
    dd99:	74 6f                	je     de0a <_IO_stdin_used+0x1e0a>
    dd9b:	72 00                	jb     dd9d <_IO_stdin_used+0x1d9d>
    dd9d:	00 00                	add    BYTE PTR [rax],al
    dd9f:	00 26                	add    BYTE PTR [rsi],ah
    dda1:	d1 ff                	sar    edi,1
    dda3:	ff                   	(bad)  
    dda4:	78 d1                	js     dd77 <_IO_stdin_used+0x1d77>
    dda6:	ff                   	(bad)  
    dda7:	ff 91 d1 ff ff 46    	call   QWORD PTR [rcx+0x46ffffd1]
    ddad:	d1 ff                	sar    edi,1
    ddaf:	ff 5f d1             	call   FWORD PTR [rdi-0x2f]
    ddb2:	ff                   	(bad)  
    ddb3:	ff aa d1 ff ff 2e    	jmp    FWORD PTR [rdx+0x2effffd1]
    ddb9:	00 25 30 32 78 00    	add    BYTE PTR [rip+0x783230],ah        # 790fef <_end+0x655baf>
    ddbf:	25 30 32 78 20       	and    eax,0x20783230
    ddc4:	2d 2d 20 25 30       	sub    eax,0x3025202d
    ddc9:	32 78 0a             	xor    bh,BYTE PTR [rax+0xa]
    ddcc:	00 00                	add    BYTE PTR [rax],al
    ddce:	00 00                	add    BYTE PTR [rax],al
    ddd0:	73 72                	jae    de44 <_IO_stdin_used+0x1e44>
    ddd2:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    ddd4:	6c                   	ins    BYTE PTR es:[rdi],dx
    ddd5:	75 61                	jne    de38 <_IO_stdin_used+0x1e38>
    ddd7:	2f                   	(bad)  
    ddd8:	73 63                	jae    de3d <_IO_stdin_used+0x1e3d>
    ddda:	72 69                	jb     de45 <_IO_stdin_used+0x1e45>
    dddc:	70 74                	jo     de52 <_IO_stdin_used+0x1e52>
    ddde:	73 2f                	jae    de0f <_IO_stdin_used+0x1e0f>
    dde0:	68 65 6c 6c 6f       	push   0x6f6c6c65
    dde5:	74 65                	je     de4c <_IO_stdin_used+0x1e4c>
    dde7:	73 74                	jae    de5d <_IO_stdin_used+0x1e5d>
    dde9:	2e 6c                	cs ins BYTE PTR es:[rdi],dx
    ddeb:	75 61                	jne    de4e <_IO_stdin_used+0x1e4e>
    dded:	00 72 00             	add    BYTE PTR [rdx+0x0],dh
    ddf0:	2f                   	(bad)  
    ddf1:	65 74 63             	gs je  de57 <_IO_stdin_used+0x1e57>
    ddf4:	2f                   	(bad)  
    ddf5:	76 69                	jbe    de60 <_IO_stdin_used+0x1e60>
    ddf7:	67 69 6c 2f 6c 73 63 	imul   ebp,DWORD PTR [edi+ebp*1+0x6c],0x69726373
    ddfe:	72 69 
    de00:	70 74                	jo     de76 <_IO_stdin_used+0x1e76>
    de02:	2e 63 6f 6e          	movsxd ebp,DWORD PTR cs:[rdi+0x6e]
    de06:	66 00 46 61          	data16 add BYTE PTR [rsi+0x61],al
    de0a:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    de11:	20 
    de12:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    de15:	6c                   	ins    BYTE PTR es:[rdi],dx
    de16:	65 63 74 20 4c       	movsxd esi,DWORD PTR gs:[rax+riz*1+0x4c]
    de1b:	75 61                	jne    de7e <_IO_stdin_used+0x1e7e>
    de1d:	20 73 63             	and    BYTE PTR [rbx+0x63],dh
    de20:	72 69                	jb     de8b <_IO_stdin_used+0x1e8b>
    de22:	70 74                	jo     de98 <_IO_stdin_used+0x1e98>
    de24:	73 3a                	jae    de60 <_IO_stdin_used+0x1e60>
    de26:	20 2f                	and    BYTE PTR [rdi],ch
    de28:	65 74 63             	gs je  de8e <_IO_stdin_used+0x1e8e>
    de2b:	2f                   	(bad)  
    de2c:	76 69                	jbe    de97 <_IO_stdin_used+0x1e97>
    de2e:	67 69 6c 2f 6c 73 63 	imul   ebp,DWORD PTR [edi+ebp*1+0x6c],0x69726373
    de35:	72 69 
    de37:	70 74                	jo     dead <_IO_stdin_used+0x1ead>
    de39:	2e 63 6f 6e          	movsxd ebp,DWORD PTR cs:[rdi+0x6e]
    de3d:	66 20 6e 6f          	data16 and BYTE PTR [rsi+0x6f],ch
    de41:	74 20                	je     de63 <_IO_stdin_used+0x1e63>
    de43:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    de45:	75 6e                	jne    deb5 <_IO_stdin_used+0x1eb5>
    de47:	64 2e 00 2e          	fs add BYTE PTR cs:[rsi],ch
    de4b:	2a 2e                	sub    ch,BYTE PTR [rsi]
    de4d:	6c                   	ins    BYTE PTR es:[rdi],dx
    de4e:	75 61                	jne    deb1 <_IO_stdin_used+0x1eb1>
    de50:	3a 2e                	cmp    ch,BYTE PTR [rsi]
    de52:	2a 00                	sub    al,BYTE PTR [rax]
    de54:	6c                   	ins    BYTE PTR es:[rdi],dx
    de55:	5f                   	pop    rdi
    de56:	73 63                	jae    debb <_IO_stdin_used+0x1ebb>
    de58:	72 69                	jb     dec3 <_IO_stdin_used+0x1ec3>
    de5a:	70 74                	jo     ded0 <_IO_stdin_used+0x1ed0>
    de5c:	5f                   	pop    rdi
    de5d:	72 6f                	jb     dece <_IO_stdin_used+0x1ece>
    de5f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    de60:	74 3d                	je     de9f <_IO_stdin_used+0x1e9f>
    de62:	00 0a                	add    BYTE PTR [rdx],cl
    de64:	00 00                	add    BYTE PTR [rax],al
    de66:	00 00                	add    BYTE PTR [rax],al
    de68:	49 50                	rex.WB push r8
    de6a:	76 36                	jbe    dea2 <_IO_stdin_used+0x1ea2>
    de6c:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2dfee5 <_end+0x3e1a4aa5>
    de72:	20 25 73 20 50 72    	and    BYTE PTR [rip+0x72502073],ah        # 7250feeb <_end+0x723d4aab>
    de78:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    de79:	74 6f                	je     deea <_IO_stdin_used+0x1eea>
    de7b:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    de7e:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    de81:	6d                   	ins    DWORD PTR es:[rdi],dx
    de82:	62                   	(bad)  
    de83:	65 72 20             	gs jb  dea6 <_IO_stdin_used+0x1ea6>
    de86:	3d 20 25 64 0a       	cmp    eax,0xa642520
    de8b:	00 00                	add    BYTE PTR [rax],al
    de8d:	00 00                	add    BYTE PTR [rax],al
    de8f:	00 5b 4e             	add    BYTE PTR [rbx+0x4e],bl
    de92:	20 25 73 20 53 20    	and    BYTE PTR [rip+0x20532073],ah        # 2053ff0b <_end+0x20404acb>
    de98:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    de9b:	30 32                	xor    BYTE PTR [rdx],dh
    de9d:	78 20                	js     debf <_IO_stdin_used+0x1ebf>
    de9f:	45 20 30             	and    BYTE PTR [r8],r14b
    dea2:	78 25                	js     dec9 <_IO_stdin_used+0x1ec9>
    dea4:	30 32                	xor    BYTE PTR [rdx],dh
    dea6:	78 5d                	js     df05 <_IO_stdin_used+0x1f05>
    dea8:	0a 00                	or     al,BYTE PTR [rax]
    deaa:	00 00                	add    BYTE PTR [rax],al
    deac:	00 00                	add    BYTE PTR [rax],al
    deae:	00 00                	add    BYTE PTR [rax],al
    deb0:	53                   	push   rbx
    deb1:	65 67 6d             	gs ins DWORD PTR es:[edi],dx
    deb4:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    deb6:	74 61                	je     df19 <_IO_stdin_used+0x1f19>
    deb8:	74 69                	je     df23 <_IO_stdin_used+0x1f23>
    deba:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    debb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    debc:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    debf:	75 6c                	jne    df2d <_IO_stdin_used+0x1f2d>
    dec1:	74 20                	je     dee3 <_IO_stdin_used+0x1ee3>
    dec3:	61                   	(bad)  
    dec4:	74 20                	je     dee6 <_IO_stdin_used+0x1ee6>
    dec6:	25 73 3a 20 61       	and    eax,0x61203a73
    decb:	70 70                	jo     df3d <_IO_stdin_used+0x1f3d>
    decd:	6c                   	ins    BYTE PTR es:[rdi],dx
    dece:	69 63 61 74 69 6f 6e 	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
    ded5:	20 63 72             	and    BYTE PTR [rbx+0x72],ah
    ded8:	61                   	(bad)  
    ded9:	73 68                	jae    df43 <_IO_stdin_used+0x1f43>
    dedb:	65 64 0a 00          	gs or  al,BYTE PTR fs:[rax]
    dedf:	46 75 6e             	rex.RX jne df50 <_IO_stdin_used+0x1f50>
    dee2:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    dee6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dee7:	20 62 61             	and    BYTE PTR [rdx+0x61],ah
    deea:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
    deed:	72 61                	jb     df50 <_IO_stdin_used+0x1f50>
    deef:	63 65 3a             	movsxd esp,DWORD PTR [rbp+0x3a]
    def2:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
    def6:	00 25 73 0a 00 00    	add    BYTE PTR [rip+0xa73],ah        # e96f <__GNU_EH_FRAME_HDR+0x88f>
    defc:	00 00                	add    BYTE PTR [rax],al
    defe:	00 00                	add    BYTE PTR [rax],al
    df00:	5b                   	pop    rbx
    df01:	4e 20 25 73 20 53 20 	rex.WRX and BYTE PTR [rip+0x20532073],r12b        # 2053ff7b <_end+0x20404b3b>
    df08:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    df0b:	30 32                	xor    BYTE PTR [rdx],dh
    df0d:	78 20                	js     df2f <_IO_stdin_used+0x1f2f>
    df0f:	45 20 30             	and    BYTE PTR [r8],r14b
    df12:	78 25                	js     df39 <_IO_stdin_used+0x1f39>
    df14:	30 32                	xor    BYTE PTR [rdx],dh
    df16:	78 20                	js     df38 <_IO_stdin_used+0x1f38>
    df18:	28 2e                	sub    BYTE PTR [rsi],ch
    df1a:	2f                   	(bad)  
    df1b:	76 69                	jbe    df86 <_IO_stdin_used+0x1f86>
    df1d:	67 69 6c 2e 65 78 65 	imul   ebp,DWORD PTR [esi+ebp*1+0x65],0x2b286578
    df24:	28 2b 
    df26:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    df29:	30 32                	xor    BYTE PTR [rdx],dh
    df2b:	78 29                	js     df56 <_IO_stdin_used+0x1f56>
    df2d:	29 5d 0a             	sub    DWORD PTR [rbp+0xa],ebx
	...
    df38:	55                   	push   rbp
    df39:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df3a:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    df3e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df3f:	20 66 75             	and    BYTE PTR [rsi+0x75],ah
    df42:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df43:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    df47:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df48:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    df4b:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
    df4e:	6d                   	ins    DWORD PTR es:[rdi],dx
    df4f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    df50:	72 79                	jb     dfcb <_IO_stdin_used+0x1fcb>
    df52:	20 6f 66             	and    BYTE PTR [rdi+0x66],ch
    df55:	66 73 65             	data16 jae dfbd <_IO_stdin_used+0x1fbd>
    df58:	74 20                	je     df7a <_IO_stdin_used+0x1f7a>
    df5a:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    df5d:	30 32                	xor    BYTE PTR [rdx],dh
    df5f:	78 0a                	js     df6b <_IO_stdin_used+0x1f6b>
    df61:	00 52 65             	add    BYTE PTR [rdx+0x65],dl
    df64:	67 69 73 74 65 72 20 	imul   esi,DWORD PTR [ebx+0x74],0x44207265
    df6b:	44 
    df6c:	75 6d                	jne    dfdb <_IO_stdin_used+0x1fdb>
    df6e:	70 3a                	jo     dfaa <_IO_stdin_used+0x1faa>
    df70:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    df73:	41 58                	pop    r8
    df75:	5d                   	pop    rbp
    df76:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790f9c <_end+0x25655b5c>
    df7c:	30 32                	xor    BYTE PTR [rdx],dh
    df7e:	78 0a                	js     df8a <_IO_stdin_used+0x1f8a>
    df80:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    df83:	42 58                	rex.X pop rax
    df85:	5d                   	pop    rbp
    df86:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790fac <_end+0x25655b6c>
    df8c:	30 32                	xor    BYTE PTR [rdx],dh
    df8e:	78 0a                	js     df9a <_IO_stdin_used+0x1f9a>
    df90:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    df93:	43 58                	rex.XB pop r8
    df95:	5d                   	pop    rbp
    df96:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790fbc <_end+0x25655b7c>
    df9c:	30 32                	xor    BYTE PTR [rdx],dh
    df9e:	78 0a                	js     dfaa <_IO_stdin_used+0x1faa>
    dfa0:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    dfa3:	44 58                	rex.R pop rax
    dfa5:	5d                   	pop    rbp
    dfa6:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790fcc <_end+0x25655b8c>
    dfac:	30 32                	xor    BYTE PTR [rdx],dh
    dfae:	78 0a                	js     dfba <_IO_stdin_used+0x1fba>
    dfb0:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    dfb3:	53                   	push   rbx
    dfb4:	50                   	push   rax
    dfb5:	5d                   	pop    rbp
    dfb6:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790fdc <_end+0x25655b9c>
    dfbc:	30 32                	xor    BYTE PTR [rdx],dh
    dfbe:	78 0a                	js     dfca <_IO_stdin_used+0x1fca>
    dfc0:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    dfc3:	42 50                	rex.X push rax
    dfc5:	5d                   	pop    rbp
    dfc6:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790fec <_end+0x25655bac>
    dfcc:	30 32                	xor    BYTE PTR [rdx],dh
    dfce:	78 0a                	js     dfda <_IO_stdin_used+0x1fda>
	...
    dfd8:	72 00                	jb     dfda <_IO_stdin_used+0x1fda>
    dfda:	2f                   	(bad)  
    dfdb:	75 73                	jne    e050 <_IO_stdin_used+0x2050>
    dfdd:	72 2f                	jb     e00e <_IO_stdin_used+0x200e>
    dfdf:	73 68                	jae    e049 <_IO_stdin_used+0x2049>
    dfe1:	61                   	(bad)  
    dfe2:	72 65                	jb     e049 <_IO_stdin_used+0x2049>
    dfe4:	2f                   	(bad)  
    dfe5:	76 69                	jbe    e050 <_IO_stdin_used+0x2050>
    dfe7:	67 69 6c 2f 6d 65 6d 	imul   ebp,DWORD PTR [edi+ebp*1+0x6d],0x616d6d65
    dfee:	6d 61 
    dff0:	70 2e                	jo     e020 <_IO_stdin_used+0x2020>
    dff2:	74 78                	je     e06c <_IO_stdin_used+0x206c>
    dff4:	74 00                	je     dff6 <_IO_stdin_used+0x1ff6>
    dff6:	00 00                	add    BYTE PTR [rax],al
    dff8:	46                   	rex.RX
    dff9:	41 54                	push   r12
    dffb:	41                   	rex.B
    dffc:	4c 20 45 52          	rex.WR and BYTE PTR [rbp+0x52],r8b
    e000:	52                   	push   rdx
    e001:	4f 52                	rex.WRXB push r10
    e003:	3a 20                	cmp    ah,BYTE PTR [rax]
    e005:	6d                   	ins    DWORD PTR es:[rdi],dx
    e006:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    e008:	6d                   	ins    DWORD PTR es:[rdi],dx
    e009:	61                   	(bad)  
    e00a:	70 2e                	jo     e03a <_IO_stdin_used+0x203a>
    e00c:	74 78                	je     e086 <_IO_stdin_used+0x2086>
    e00e:	74 20                	je     e030 <_IO_stdin_used+0x2030>
    e010:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e011:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e012:	74 20                	je     e034 <_IO_stdin_used+0x2034>
    e014:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    e016:	75 6e                	jne    e086 <_IO_stdin_used+0x2086>
    e018:	64 2e 50             	fs cs push rax
    e01b:	6c                   	ins    BYTE PTR es:[rdi],dx
    e01c:	65 61                	gs (bad) 
    e01e:	73 65                	jae    e085 <_IO_stdin_used+0x2085>
    e020:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    e023:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    e026:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e027:	20 67 65             	and    BYTE PTR [rdi+0x65],ah
    e02a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e02b:	5f                   	pop    rdi
    e02c:	6d                   	ins    DWORD PTR es:[rdi],dx
    e02d:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    e02f:	5f                   	pop    rdi
    e030:	6d                   	ins    DWORD PTR es:[rdi],dx
    e031:	61                   	(bad)  
    e032:	70 2e                	jo     e062 <_IO_stdin_used+0x2062>
    e034:	70 79                	jo     e0af <_IO_stdin_used+0x20af>
    e036:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    e039:	64 20 63 6f          	and    BYTE PTR fs:[rbx+0x6f],ah
    e03d:	70 79                	jo     e0b8 <_IO_stdin_used+0x20b8>
    e03f:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
    e042:	6d                   	ins    DWORD PTR es:[rdi],dx
    e043:	6d                   	ins    DWORD PTR es:[rdi],dx
    e044:	61                   	(bad)  
    e045:	70 2e                	jo     e075 <_IO_stdin_used+0x2075>
    e047:	74 78                	je     e0c1 <_IO_stdin_used+0x20c1>
    e049:	74 20                	je     e06b <_IO_stdin_used+0x206b>
    e04b:	74 6f                	je     e0bc <_IO_stdin_used+0x20bc>
    e04d:	20 2f                	and    BYTE PTR [rdi],ch
    e04f:	75 73                	jne    e0c4 <_IO_stdin_used+0x20c4>
    e051:	72 2f                	jb     e082 <_IO_stdin_used+0x2082>
    e053:	73 68                	jae    e0bd <_IO_stdin_used+0x20bd>
    e055:	61                   	(bad)  
    e056:	72 65                	jb     e0bd <_IO_stdin_used+0x20bd>
    e058:	2f                   	(bad)  
    e059:	76 69                	jbe    e0c4 <_IO_stdin_used+0x20c4>
    e05b:	67 69 6c 00 0a 00 20 	imul   ebp,DWORD PTR [eax+eax*1+0xa],0x2000
    e062:	00 00 
    e064:	00 00                	add    BYTE PTR [rax],al
    e066:	00 00                	add    BYTE PTR [rax],al
    e068:	2f                   	(bad)  
    e069:	75 73                	jne    e0de <_IO_stdin_used+0x20de>
    e06b:	72 2f                	jb     e09c <_IO_stdin_used+0x209c>
    e06d:	73 68                	jae    e0d7 <_IO_stdin_used+0x20d7>
    e06f:	61                   	(bad)  
    e070:	72 65                	jb     e0d7 <_IO_stdin_used+0x20d7>
    e072:	2f                   	(bad)  
    e073:	76 69                	jbe    e0de <_IO_stdin_used+0x20de>
    e075:	67 69 6c 2f 73 74 61 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x73746174
    e07c:	74 73 
    e07e:	2f                   	(bad)  
    e07f:	70 70                	jo     e0f1 <__GNU_EH_FRAME_HDR+0x11>
    e081:	73 2f                	jae    e0b2 <_IO_stdin_used+0x20b2>
    e083:	00 00                	add    BYTE PTR [rax],al
    e085:	00 00                	add    BYTE PTR [rax],al
    e087:	00 2f                	add    BYTE PTR [rdi],ch
    e089:	75 73                	jne    e0fe <__GNU_EH_FRAME_HDR+0x1e>
    e08b:	72 2f                	jb     e0bc <_IO_stdin_used+0x20bc>
    e08d:	73 68                	jae    e0f7 <__GNU_EH_FRAME_HDR+0x17>
    e08f:	61                   	(bad)  
    e090:	72 65                	jb     e0f7 <__GNU_EH_FRAME_HDR+0x17>
    e092:	2f                   	(bad)  
    e093:	76 69                	jbe    e0fe <__GNU_EH_FRAME_HDR+0x1e>
    e095:	67 69 6c 2f 73 74 61 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x73746174
    e09c:	74 73 
    e09e:	2f                   	(bad)  
    e09f:	70 70                	jo     e111 <__GNU_EH_FRAME_HDR+0x31>
    e0a1:	73 2f                	jae    e0d2 <_IO_stdin_used+0x20d2>
    e0a3:	70 70                	jo     e115 <__GNU_EH_FRAME_HDR+0x35>
    e0a5:	73 2e                	jae    e0d5 <_IO_stdin_used+0x20d5>
    e0a7:	6c                   	ins    BYTE PTR es:[rdi],dx
    e0a8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e0a9:	67 2e 25 64 2e 74 78 	addr32 cs and eax,0x78742e64
    e0b0:	74 00                	je     e0b2 <_IO_stdin_used+0x20b2>
    e0b2:	61                   	(bad)  
    e0b3:	00 45 72             	add    BYTE PTR [rbp+0x72],al
    e0b6:	72 6f                	jb     e127 <__GNU_EH_FRAME_HDR+0x47>
    e0b8:	72 20                	jb     e0da <_IO_stdin_used+0x20da>
    e0ba:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e0bb:	70 65                	jo     e122 <__GNU_EH_FRAME_HDR+0x42>
    e0bd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e0be:	69 6e 67 20 66 69 6c 	imul   ebp,DWORD PTR [rsi+0x67],0x6c696620
    e0c5:	65 00 44 75 6d       	add    BYTE PTR gs:[rbp+rsi*2+0x6d],al
    e0ca:	70 69                	jo     e135 <__GNU_EH_FRAME_HDR+0x55>
    e0cc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e0cd:	67 20 74 6f 20       	and    BYTE PTR [edi+ebp*2+0x20],dh
    e0d2:	25 73 0a 00 25       	and    eax,0x25000a73
    e0d7:	6c                   	ins    BYTE PTR es:[rdi],dx
    e0d8:	75 2c                	jne    e106 <__GNU_EH_FRAME_HDR+0x26>
    e0da:	25                   	.byte 0x25
    e0db:	64                   	fs
	...

Disassembly of section .eh_frame_hdr:

000000000000e0e0 <__GNU_EH_FRAME_HDR>:
    e0e0:	01 1b                	add    DWORD PTR [rbx],ebx
    e0e2:	03 3b                	add    edi,DWORD PTR [rbx]
    e0e4:	cc                   	int3   
    e0e5:	03 00                	add    eax,DWORD PTR [rax]
    e0e7:	00 78 00             	add    BYTE PTR [rax+0x0],bh
    e0ea:	00 00                	add    BYTE PTR [rax],al
    e0ec:	40 3f                	rex (bad) 
    e0ee:	ff                   	(bad)  
    e0ef:	ff 00                	inc    DWORD PTR [rax]
    e0f1:	04 00                	add    al,0x0
    e0f3:	00 a0 43 ff ff 28    	add    BYTE PTR [rax+0x28ffff43],ah
    e0f9:	04 00                	add    al,0x0
    e0fb:	00 b0 43 ff ff 40    	add    BYTE PTR [rax+0x40ffff43],dh
    e101:	04 00                	add    al,0x0
    e103:	00 00                	add    BYTE PTR [rax],al
    e105:	48 ff                	rex.W (bad) 
    e107:	ff                   	(bad)  
    e108:	e8 03 00 00 e9       	call   ffffffffe900e110 <_end+0xffffffffe8ed2cd0>
    e10d:	48 ff                	rex.W (bad) 
    e10f:	ff 58 04             	call   FWORD PTR [rax+0x4]
    e112:	00 00                	add    BYTE PTR [rax],al
    e114:	23 49 ff             	and    ecx,DWORD PTR [rcx-0x1]
    e117:	ff                   	(bad)  
    e118:	78 04                	js     e11e <__GNU_EH_FRAME_HDR+0x3e>
    e11a:	00 00                	add    BYTE PTR [rax],al
    e11c:	70 4a                	jo     e168 <__GNU_EH_FRAME_HDR+0x88>
    e11e:	ff                   	(bad)  
    e11f:	ff a0 04 00 00 64    	jmp    QWORD PTR [rax+0x64000004]
    e125:	4d ff                	rex.WRB (bad) 
    e127:	ff c0                	inc    eax
    e129:	04 00                	add    al,0x0
    e12b:	00 77 4e             	add    BYTE PTR [rdi+0x4e],dh
    e12e:	ff                   	(bad)  
    e12f:	ff e0                	jmp    rax
    e131:	04 00                	add    al,0x0
    e133:	00 25 4f ff ff 00    	add    BYTE PTR [rip+0xffff4f],ah        # 100e088 <_end+0xed2c48>
    e139:	05 00 00 cb 4f       	add    eax,0x4fcb0000
    e13e:	ff                   	(bad)  
    e13f:	ff 20                	jmp    QWORD PTR [rax]
    e141:	05 00 00 60 50       	add    eax,0x50600000
    e146:	ff                   	(bad)  
    e147:	ff 40 05             	inc    DWORD PTR [rax+0x5]
    e14a:	00 00                	add    BYTE PTR [rax],al
    e14c:	f4                   	hlt    
    e14d:	50                   	push   rax
    e14e:	ff                   	(bad)  
    e14f:	ff 60 05             	jmp    QWORD PTR [rax+0x5]
    e152:	00 00                	add    BYTE PTR [rax],al
    e154:	c0 52 ff ff          	rcl    BYTE PTR [rdx-0x1],0xff
    e158:	8c 05 00 00 94 53    	mov    WORD PTR [rip+0x53940000],es        # 5394e15e <_end+0x53812d1e>
    e15e:	ff                   	(bad)  
    e15f:	ff b0 05 00 00 5b    	push   QWORD PTR [rax+0x5b000005]
    e165:	54                   	push   rsp
    e166:	ff                   	(bad)  
    e167:	ff d4                	call   rsp
    e169:	05 00 00 ae 54       	add    eax,0x54ae0000
    e16e:	ff                   	(bad)  
    e16f:	ff f4                	push   rsp
    e171:	05 00 00 e1 54       	add    eax,0x54e10000
    e176:	ff                   	(bad)  
    e177:	ff 14 06             	call   QWORD PTR [rsi+rax*1]
    e17a:	00 00                	add    BYTE PTR [rax],al
    e17c:	02 55 ff             	add    dl,BYTE PTR [rbp-0x1]
    e17f:	ff 34 06             	push   QWORD PTR [rsi+rax*1]
    e182:	00 00                	add    BYTE PTR [rax],al
    e184:	6b 55 ff ff          	imul   edx,DWORD PTR [rbp-0x1],0xffffffff
    e188:	58                   	pop    rax
    e189:	06                   	(bad)  
    e18a:	00 00                	add    BYTE PTR [rax],al
    e18c:	90                   	nop
    e18d:	59                   	pop    rcx
    e18e:	ff                   	(bad)  
    e18f:	ff                   	(bad)  
    e190:	78 06                	js     e198 <__GNU_EH_FRAME_HDR+0xb8>
    e192:	00 00                	add    BYTE PTR [rax],al
    e194:	ed                   	in     eax,dx
    e195:	5a                   	pop    rdx
    e196:	ff                   	(bad)  
    e197:	ff 98 06 00 00 31    	call   FWORD PTR [rax+0x31000006]
    e19d:	63 ff                	movsxd edi,edi
    e19f:	ff                   	(bad)  
    e1a0:	b8 06 00 00 74       	mov    eax,0x74000006
    e1a5:	6c                   	ins    BYTE PTR es:[rdi],dx
    e1a6:	ff                   	(bad)  
    e1a7:	ff                   	(bad)  
    e1a8:	d8 06                	fadd   DWORD PTR [rsi]
    e1aa:	00 00                	add    BYTE PTR [rax],al
    e1ac:	c9                   	leave  
    e1ad:	6d                   	ins    DWORD PTR es:[rdi],dx
    e1ae:	ff                   	(bad)  
    e1af:	ff                   	(bad)  
    e1b0:	f8                   	clc    
    e1b1:	06                   	(bad)  
    e1b2:	00 00                	add    BYTE PTR [rax],al
    e1b4:	c8 6e ff ff          	enter  0xff6e,0xff
    e1b8:	18 07                	sbb    BYTE PTR [rdi],al
    e1ba:	00 00                	add    BYTE PTR [rax],al
    e1bc:	b4 6f                	mov    ah,0x6f
    e1be:	ff                   	(bad)  
    e1bf:	ff                   	(bad)  
    e1c0:	38 07                	cmp    BYTE PTR [rdi],al
    e1c2:	00 00                	add    BYTE PTR [rax],al
    e1c4:	66 73 ff             	data16 jae e1c6 <__GNU_EH_FRAME_HDR+0xe6>
    e1c7:	ff 58 07             	call   FWORD PTR [rax+0x7]
    e1ca:	00 00                	add    BYTE PTR [rax],al
    e1cc:	e9 73 ff ff 78       	jmp    7900e144 <_end+0x78ed2d04>
    e1d1:	07                   	(bad)  
    e1d2:	00 00                	add    BYTE PTR [rax],al
    e1d4:	13 76 ff             	adc    esi,DWORD PTR [rsi-0x1]
    e1d7:	ff a0 07 00 00 53    	jmp    QWORD PTR [rax+0x53000007]
    e1dd:	78 ff                	js     e1de <__GNU_EH_FRAME_HDR+0xfe>
    e1df:	ff c4                	inc    esp
    e1e1:	07                   	(bad)  
    e1e2:	00 00                	add    BYTE PTR [rax],al
    e1e4:	b9 78 ff ff e4       	mov    ecx,0xe4ffff78
    e1e9:	07                   	(bad)  
    e1ea:	00 00                	add    BYTE PTR [rax],al
    e1ec:	d0 78 ff             	sar    BYTE PTR [rax-0x1],1
    e1ef:	ff 04 08             	inc    DWORD PTR [rax+rcx*1]
    e1f2:	00 00                	add    BYTE PTR [rax],al
    e1f4:	21 79 ff             	and    DWORD PTR [rcx-0x1],edi
    e1f7:	ff 28                	jmp    FWORD PTR [rax]
    e1f9:	08 00                	or     BYTE PTR [rax],al
    e1fb:	00 61 7f             	add    BYTE PTR [rcx+0x7f],ah
    e1fe:	ff                   	(bad)  
    e1ff:	ff 4c 08 00          	dec    DWORD PTR [rax+rcx*1+0x0]
    e203:	00 7b 7f             	add    BYTE PTR [rbx+0x7f],bh
    e206:	ff                   	(bad)  
    e207:	ff 6c 08 00          	jmp    FWORD PTR [rax+rcx*1+0x0]
    e20b:	00 a4 7f ff ff 8c 08 	add    BYTE PTR [rdi+rdi*2+0x88cffff],ah
    e212:	00 00                	add    BYTE PTR [rax],al
    e214:	d4                   	(bad)  
    e215:	7f ff                	jg     e216 <__GNU_EH_FRAME_HDR+0x136>
    e217:	ff ac 08 00 00 0b 80 	jmp    FWORD PTR [rax+rcx*1-0x7ff50000]
    e21e:	ff                   	(bad)  
    e21f:	ff c8                	dec    eax
    e221:	08 00                	or     BYTE PTR [rax],al
    e223:	00 50 81             	add    BYTE PTR [rax-0x7f],dl
    e226:	ff                   	(bad)  
    e227:	ff                   	(bad)  
    e228:	e8 08 00 00 b0       	call   ffffffffb000e235 <_end+0xffffffffafed2df5>
    e22d:	82                   	(bad)  
    e22e:	ff                   	(bad)  
    e22f:	ff 08                	dec    DWORD PTR [rax]
    e231:	09 00                	or     DWORD PTR [rax],eax
    e233:	00 11                	add    BYTE PTR [rcx],dl
    e235:	83 ff ff             	cmp    edi,0xffffffff
    e238:	28 09                	sub    BYTE PTR [rcx],cl
    e23a:	00 00                	add    BYTE PTR [rax],al
    e23c:	4a 83 ff ff          	rex.WX cmp rdi,0xffffffffffffffff
    e240:	48 09 00             	or     QWORD PTR [rax],rax
    e243:	00 08                	add    BYTE PTR [rax],cl
    e245:	84 ff                	test   bh,bh
    e247:	ff 68 09             	jmp    FWORD PTR [rax+0x9]
    e24a:	00 00                	add    BYTE PTR [rax],al
    e24c:	c6 86 ff ff 88 09 00 	mov    BYTE PTR [rsi+0x988ffff],0x0
    e253:	00 be 88 ff ff a8    	add    BYTE PTR [rsi-0x57000078],bh
    e259:	09 00                	or     DWORD PTR [rax],eax
    e25b:	00 18                	add    BYTE PTR [rax],bl
    e25d:	89 ff                	mov    edi,edi
    e25f:	ff c8                	dec    eax
    e261:	09 00                	or     DWORD PTR [rax],eax
    e263:	00 1e                	add    BYTE PTR [rsi],bl
    e265:	8c ff                	mov    edi,?
    e267:	ff                   	(bad)  
    e268:	e8 09 00 00 73       	call   7300e276 <_end+0x72ed2e36>
    e26d:	90                   	nop
    e26e:	ff                   	(bad)  
    e26f:	ff 08                	dec    DWORD PTR [rax]
    e271:	0a 00                	or     al,BYTE PTR [rax]
    e273:	00 9d 90 ff ff 24    	add    BYTE PTR [rbp+0x24ffff90],bl
    e279:	0a 00                	or     al,BYTE PTR [rax]
    e27b:	00 54 92 ff          	add    BYTE PTR [rdx+rdx*4-0x1],dl
    e27f:	ff 48 0a             	dec    DWORD PTR [rax+0xa]
    e282:	00 00                	add    BYTE PTR [rax],al
    e284:	6b 92 ff ff 68 0a 00 	imul   edx,DWORD PTR [rdx+0xa68ffff],0x0
    e28b:	00 ba 92 ff ff 88    	add    BYTE PTR [rdx-0x7700006e],bh
    e291:	0a 00                	or     al,BYTE PTR [rax]
    e293:	00 07                	add    BYTE PTR [rdi],al
    e295:	93                   	xchg   ebx,eax
    e296:	ff                   	(bad)  
    e297:	ff a8 0a 00 00 7e    	jmp    FWORD PTR [rax+0x7e00000a]
    e29d:	94                   	xchg   esp,eax
    e29e:	ff                   	(bad)  
    e29f:	ff c4                	inc    esp
    e2a1:	0a 00                	or     al,BYTE PTR [rax]
    e2a3:	00 1a                	add    BYTE PTR [rdx],bl
    e2a5:	95                   	xchg   ebp,eax
    e2a6:	ff                   	(bad)  
    e2a7:	ff                   	(bad)  
    e2a8:	e8 0a 00 00 08       	call   800e2b7 <_end+0x7ed2e77>
    e2ad:	97                   	xchg   edi,eax
    e2ae:	ff                   	(bad)  
    e2af:	ff 08                	dec    DWORD PTR [rax]
    e2b1:	0b 00                	or     eax,DWORD PTR [rax]
    e2b3:	00 f0                	add    al,dh
    e2b5:	98                   	cwde   
    e2b6:	ff                   	(bad)  
    e2b7:	ff 28                	jmp    FWORD PTR [rax]
    e2b9:	0b 00                	or     eax,DWORD PTR [rax]
    e2bb:	00 5c 99 ff          	add    BYTE PTR [rcx+rbx*4-0x1],bl
    e2bf:	ff 48 0b             	dec    DWORD PTR [rax+0xb]
    e2c2:	00 00                	add    BYTE PTR [rax],al
    e2c4:	ce                   	(bad)  
    e2c5:	99                   	cdq    
    e2c6:	ff                   	(bad)  
    e2c7:	ff 68 0b             	jmp    FWORD PTR [rax+0xb]
    e2ca:	00 00                	add    BYTE PTR [rax],al
    e2cc:	df 9a ff ff 88 0b    	fistp  WORD PTR [rdx+0xb88ffff]
    e2d2:	00 00                	add    BYTE PTR [rax],al
    e2d4:	3b 9b ff ff a8 0b    	cmp    ebx,DWORD PTR [rbx+0xba8ffff]
    e2da:	00 00                	add    BYTE PTR [rax],al
    e2dc:	79 9b                	jns    e279 <__GNU_EH_FRAME_HDR+0x199>
    e2de:	ff                   	(bad)  
    e2df:	ff c8                	dec    eax
    e2e1:	0b 00                	or     eax,DWORD PTR [rax]
    e2e3:	00 ff                	add    bh,bh
    e2e5:	9b                   	fwait
    e2e6:	ff                   	(bad)  
    e2e7:	ff                   	(bad)  
    e2e8:	e8 0b 00 00 de       	call   ffffffffde00e2f8 <_end+0xffffffffdded2eb8>
    e2ed:	9c                   	pushf  
    e2ee:	ff                   	(bad)  
    e2ef:	ff 08                	dec    DWORD PTR [rax]
    e2f1:	0c 00                	or     al,0x0
    e2f3:	00 52 9d             	add    BYTE PTR [rdx-0x63],dl
    e2f6:	ff                   	(bad)  
    e2f7:	ff 28                	jmp    FWORD PTR [rax]
    e2f9:	0c 00                	or     al,0x0
    e2fb:	00 ee                	add    dh,ch
    e2fd:	9d                   	popf   
    e2fe:	ff                   	(bad)  
    e2ff:	ff 48 0c             	dec    DWORD PTR [rax+0xc]
    e302:	00 00                	add    BYTE PTR [rax],al
    e304:	17                   	(bad)  
    e305:	9e                   	sahf   
    e306:	ff                   	(bad)  
    e307:	ff 68 0c             	jmp    FWORD PTR [rax+0xc]
    e30a:	00 00                	add    BYTE PTR [rax],al
    e30c:	40 9e                	rex sahf 
    e30e:	ff                   	(bad)  
    e30f:	ff 88 0c 00 00 94    	dec    DWORD PTR [rax-0x6bfffff4]
    e315:	9f                   	lahf   
    e316:	ff                   	(bad)  
    e317:	ff b0 0c 00 00 a7    	push   QWORD PTR [rax-0x58fffff4]
    e31d:	a0 ff ff d0 0c 00 00 	movabs al,ds:0xa1a000000cd0ffff
    e324:	a0 a1 
    e326:	ff                   	(bad)  
    e327:	ff f0                	push   rax
    e329:	0c 00                	or     al,0x0
    e32b:	00 42 a2             	add    BYTE PTR [rdx-0x5e],al
    e32e:	ff                   	(bad)  
    e32f:	ff 10                	call   QWORD PTR [rax]
    e331:	0d 00 00 60 a2       	or     eax,0xa2600000
    e336:	ff                   	(bad)  
    e337:	ff 30                	push   QWORD PTR [rax]
    e339:	0d 00 00 c3 a3       	or     eax,0xa3c30000
    e33e:	ff                   	(bad)  
    e33f:	ff 50 0d             	call   QWORD PTR [rax+0xd]
    e342:	00 00                	add    BYTE PTR [rax],al
    e344:	d4                   	(bad)  
    e345:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    e346:	ff                   	(bad)  
    e347:	ff 80 0d 00 00 86    	inc    DWORD PTR [rax-0x79fffff3]
    e34d:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    e34e:	ff                   	(bad)  
    e34f:	ff a0 0d 00 00 2b    	jmp    QWORD PTR [rax+0x2b00000d]
    e355:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    e356:	ff                   	(bad)  
    e357:	ff c0                	inc    eax
    e359:	0d 00 00 d7 a7       	or     eax,0xa7d70000
    e35e:	ff                   	(bad)  
    e35f:	ff                   	(bad)  
    e360:	e8 0d 00 00 ac       	call   ffffffffac00e372 <_end+0xffffffffabed2f32>
    e365:	a8 ff                	test   al,0xff
    e367:	ff 08                	dec    DWORD PTR [rax]
    e369:	0e                   	(bad)  
    e36a:	00 00                	add    BYTE PTR [rax],al
    e36c:	8b a9 ff ff 28 0e    	mov    ebp,DWORD PTR [rcx+0xe28ffff]
    e372:	00 00                	add    BYTE PTR [rax],al
    e374:	08 aa ff ff 48 0e    	or     BYTE PTR [rdx+0xe48ffff],ch
    e37a:	00 00                	add    BYTE PTR [rax],al
    e37c:	3e ab                	ds stos DWORD PTR es:[rdi],eax
    e37e:	ff                   	(bad)  
    e37f:	ff 68 0e             	jmp    FWORD PTR [rax+0xe]
    e382:	00 00                	add    BYTE PTR [rax],al
    e384:	bc ab ff ff 88       	mov    esp,0x88ffffab
    e389:	0e                   	(bad)  
    e38a:	00 00                	add    BYTE PTR [rax],al
    e38c:	f5                   	cmc    
    e38d:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    e38e:	ff                   	(bad)  
    e38f:	ff a8 0e 00 00 be    	jmp    FWORD PTR [rax-0x41fffff2]
    e395:	ae                   	scas   al,BYTE PTR es:[rdi]
    e396:	ff                   	(bad)  
    e397:	ff c8                	dec    eax
    e399:	0e                   	(bad)  
    e39a:	00 00                	add    BYTE PTR [rax],al
    e39c:	5f                   	pop    rdi
    e39d:	b0 ff                	mov    al,0xff
    e39f:	ff                   	(bad)  
    e3a0:	e8 0e 00 00 72       	call   7200e3b3 <_end+0x71ed2f73>
    e3a5:	b1 ff                	mov    cl,0xff
    e3a7:	ff 08                	dec    DWORD PTR [rax]
    e3a9:	0f 00 00             	sldt   WORD PTR [rax]
    e3ac:	d8 b1 ff ff 28 0f    	fdiv   DWORD PTR [rcx+0xf28ffff]
    e3b2:	00 00                	add    BYTE PTR [rax],al
    e3b4:	4d b2 ff             	rex.WRB mov r10b,0xff
    e3b7:	ff 48 0f             	dec    DWORD PTR [rax+0xf]
    e3ba:	00 00                	add    BYTE PTR [rax],al
    e3bc:	28 b3 ff ff 68 0f    	sub    BYTE PTR [rbx+0xf68ffff],dh
    e3c2:	00 00                	add    BYTE PTR [rax],al
    e3c4:	9a                   	(bad)  
    e3c5:	b4 ff                	mov    ah,0xff
    e3c7:	ff 88 0f 00 00 06    	dec    DWORD PTR [rax+0x600000f]
    e3cd:	b5 ff                	mov    ch,0xff
    e3cf:	ff a8 0f 00 00 86    	jmp    FWORD PTR [rax-0x79fffff1]
    e3d5:	b5 ff                	mov    ch,0xff
    e3d7:	ff c8                	dec    eax
    e3d9:	0f 00 00             	sldt   WORD PTR [rax]
    e3dc:	9c                   	pushf  
    e3dd:	b5 ff                	mov    ch,0xff
    e3df:	ff                   	(bad)  
    e3e0:	e8 0f 00 00 d7       	call   ffffffffd700e3f4 <_end+0xffffffffd6ed2fb4>
    e3e5:	b6 ff                	mov    dh,0xff
    e3e7:	ff 0c 10             	dec    DWORD PTR [rax+rdx*1]
    e3ea:	00 00                	add    BYTE PTR [rax],al
    e3ec:	3b b7 ff ff 2c 10    	cmp    esi,DWORD PTR [rdi+0x102cffff]
    e3f2:	00 00                	add    BYTE PTR [rax],al
    e3f4:	8e b7 ff ff 4c 10    	mov    ?,WORD PTR [rdi+0x104cffff]
    e3fa:	00 00                	add    BYTE PTR [rax],al
    e3fc:	3f                   	(bad)  
    e3fd:	b8 ff ff 6c 10       	mov    eax,0x106cffff
    e402:	00 00                	add    BYTE PTR [rax],al
    e404:	0a b9 ff ff 8c 10    	or     bh,BYTE PTR [rcx+0x108cffff]
    e40a:	00 00                	add    BYTE PTR [rax],al
    e40c:	5f                   	pop    rdi
    e40d:	b9 ff ff ac 10       	mov    ecx,0x10acffff
    e412:	00 00                	add    BYTE PTR [rax],al
    e414:	8f                   	(bad)  
    e415:	b9 ff ff cc 10       	mov    ecx,0x10ccffff
    e41a:	00 00                	add    BYTE PTR [rax],al
    e41c:	f6 b9 ff ff ec 10    	idiv   BYTE PTR [rcx+0x10ecffff]
    e422:	00 00                	add    BYTE PTR [rax],al
    e424:	59                   	pop    rcx
    e425:	c9                   	leave  
    e426:	ff                   	(bad)  
    e427:	ff 10                	call   QWORD PTR [rax]
    e429:	11 00                	adc    DWORD PTR [rax],eax
    e42b:	00 9f c9 ff ff 30    	add    BYTE PTR [rdi+0x30ffffc9],bl
    e431:	11 00                	adc    DWORD PTR [rax],eax
    e433:	00 dd                	add    ch,bl
    e435:	cb                   	retf   
    e436:	ff                   	(bad)  
    e437:	ff 58 11             	call   FWORD PTR [rax+0x11]
    e43a:	00 00                	add    BYTE PTR [rax],al
    e43c:	88 cd                	mov    ch,cl
    e43e:	ff                   	(bad)  
    e43f:	ff                   	(bad)  
    e440:	78 11                	js     e453 <__GNU_EH_FRAME_HDR+0x373>
    e442:	00 00                	add    BYTE PTR [rax],al
    e444:	9a                   	(bad)  
    e445:	ce                   	(bad)  
    e446:	ff                   	(bad)  
    e447:	ff 98 11 00 00 57    	call   FWORD PTR [rax+0x57000011]
    e44d:	cf                   	iret   
    e44e:	ff                   	(bad)  
    e44f:	ff c0                	inc    eax
    e451:	11 00                	adc    DWORD PTR [rax],eax
    e453:	00 f2                	add    dl,dh
    e455:	d0 ff                	sar    bh,1
    e457:	ff                   	(bad)  
    e458:	e8 11 00 00 97       	call   ffffffff9700e46e <_end+0xffffffff96ed302e>
    e45d:	d1 ff                	sar    edi,1
    e45f:	ff 08                	dec    DWORD PTR [rax]
    e461:	12 00                	adc    al,BYTE PTR [rax]
    e463:	00 da                	add    dl,bl
    e465:	d2 ff                	sar    bh,cl
    e467:	ff 28                	jmp    FWORD PTR [rax]
    e469:	12 00                	adc    al,BYTE PTR [rax]
    e46b:	00 cd                	add    ch,cl
    e46d:	d3 ff                	sar    edi,cl
    e46f:	ff 48 12             	dec    DWORD PTR [rax+0x12]
    e472:	00 00                	add    BYTE PTR [rax],al
    e474:	3d d4 ff ff 68       	cmp    eax,0x68ffffd4
    e479:	12 00                	adc    al,BYTE PTR [rax]
    e47b:	00 e2                	add    dl,ah
    e47d:	d6                   	(bad)  
    e47e:	ff                   	(bad)  
    e47f:	ff 88 12 00 00 4c    	dec    DWORD PTR [rax+0x4c000012]
    e485:	d7                   	xlat   BYTE PTR ds:[rbx]
    e486:	ff                   	(bad)  
    e487:	ff a8 12 00 00 ba    	jmp    FWORD PTR [rax-0x45ffffee]
    e48d:	d7                   	xlat   BYTE PTR ds:[rbx]
    e48e:	ff                   	(bad)  
    e48f:	ff c8                	dec    eax
    e491:	12 00                	adc    al,BYTE PTR [rax]
    e493:	00 48 d9             	add    BYTE PTR [rax-0x27],cl
    e496:	ff                   	(bad)  
    e497:	ff f0                	push   rax
    e499:	12 00                	adc    al,BYTE PTR [rax]
    e49b:	00 c0                	add    al,al
    e49d:	db ff                	(bad)  
    e49f:	ff 10                	call   QWORD PTR [rax]
    e4a1:	13 00                	adc    eax,DWORD PTR [rax]
    e4a3:	00 30                	add    BYTE PTR [rax],dh
    e4a5:	dc ff                	fdiv   st(7),st
    e4a7:	ff 58 13             	call   FWORD PTR [rax+0x13]
	...

Disassembly of section .eh_frame:

000000000000e4b0 <__FRAME_END__-0xf9c>:
    e4b0:	14 00                	adc    al,0x0
    e4b2:	00 00                	add    BYTE PTR [rax],al
    e4b4:	00 00                	add    BYTE PTR [rax],al
    e4b6:	00 00                	add    BYTE PTR [rax],al
    e4b8:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    e4bb:	00 01                	add    BYTE PTR [rcx],al
    e4bd:	78 10                	js     e4cf <__GNU_EH_FRAME_HDR+0x3ef>
    e4bf:	01 1b                	add    DWORD PTR [rbx],ebx
    e4c1:	0c 07                	or     al,0x7
    e4c3:	08 90 01 00 00 14    	or     BYTE PTR [rax+0x14000001],dl
    e4c9:	00 00                	add    BYTE PTR [rax],al
    e4cb:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e4ce:	00 00                	add    BYTE PTR [rax],al
    e4d0:	10 44 ff ff          	adc    BYTE PTR [rdi+rdi*8-0x1],al
    e4d4:	2f                   	(bad)  
    e4d5:	00 00                	add    BYTE PTR [rax],al
    e4d7:	00 00                	add    BYTE PTR [rax],al
    e4d9:	44 07                	rex.R (bad) 
    e4db:	10 00                	adc    BYTE PTR [rax],al
    e4dd:	00 00                	add    BYTE PTR [rax],al
    e4df:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    e4e2:	00 00                	add    BYTE PTR [rax],al
    e4e4:	34 00                	xor    al,0x0
    e4e6:	00 00                	add    BYTE PTR [rax],al
    e4e8:	38 3b                	cmp    BYTE PTR [rbx],bh
    e4ea:	ff                   	(bad)  
    e4eb:	ff 60 04             	jmp    QWORD PTR [rax+0x4]
    e4ee:	00 00                	add    BYTE PTR [rax],al
    e4f0:	00 0e                	add    BYTE PTR [rsi],cl
    e4f2:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
    e4f5:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
    e4f8:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
    e4fb:	80 00 3f             	add    BYTE PTR [rax],0x3f
    e4fe:	1a 3a                	sbb    bh,BYTE PTR [rdx]
    e500:	2a 33                	sub    dh,BYTE PTR [rbx]
    e502:	24 22                	and    al,0x22
    e504:	00 00                	add    BYTE PTR [rax],al
    e506:	00 00                	add    BYTE PTR [rax],al
    e508:	14 00                	adc    al,0x0
    e50a:	00 00                	add    BYTE PTR [rax],al
    e50c:	5c                   	pop    rsp
    e50d:	00 00                	add    BYTE PTR [rax],al
    e50f:	00 70 3f             	add    BYTE PTR [rax+0x3f],dh
    e512:	ff                   	(bad)  
    e513:	ff 10                	call   QWORD PTR [rax]
	...
    e51d:	00 00                	add    BYTE PTR [rax],al
    e51f:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    e522:	00 00                	add    BYTE PTR [rax],al
    e524:	74 00                	je     e526 <__GNU_EH_FRAME_HDR+0x446>
    e526:	00 00                	add    BYTE PTR [rax],al
    e528:	68 3f ff ff 50       	push   0x50ffff3f
    e52d:	04 00                	add    al,0x0
	...
    e537:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e53a:	00 00                	add    BYTE PTR [rax],al
    e53c:	8c 00                	mov    WORD PTR [rax],es
    e53e:	00 00                	add    BYTE PTR [rax],al
    e540:	89 44 ff ff          	mov    DWORD PTR [rdi+rdi*8-0x1],eax
    e544:	3a 00                	cmp    al,BYTE PTR [rax]
    e546:	00 00                	add    BYTE PTR [rax],al
    e548:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e54b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e551:	71 0c                	jno    e55f <__GNU_EH_FRAME_HDR+0x47f>
    e553:	07                   	(bad)  
    e554:	08 00                	or     BYTE PTR [rax],al
    e556:	00 00                	add    BYTE PTR [rax],al
    e558:	24 00                	and    al,0x0
    e55a:	00 00                	add    BYTE PTR [rax],al
    e55c:	ac                   	lods   al,BYTE PTR ds:[rsi]
    e55d:	00 00                	add    BYTE PTR [rax],al
    e55f:	00 a3 44 ff ff 4d    	add    BYTE PTR [rbx+0x4dffff44],ah
    e565:	01 00                	add    DWORD PTR [rax],eax
    e567:	00 00                	add    BYTE PTR [rax],al
    e569:	45 0e                	rex.RB (bad) 
    e56b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e571:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    e575:	3f                   	(bad)  
    e576:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    e579:	08 00                	or     BYTE PTR [rax],al
    e57b:	00 00                	add    BYTE PTR [rax],al
    e57d:	00 00                	add    BYTE PTR [rax],al
    e57f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e582:	00 00                	add    BYTE PTR [rax],al
    e584:	d4                   	(bad)  
    e585:	00 00                	add    BYTE PTR [rax],al
    e587:	00 c8                	add    al,cl
    e589:	45 ff                	rex.RB (bad) 
    e58b:	ff f4                	push   rsp
    e58d:	02 00                	add    al,BYTE PTR [rax]
    e58f:	00 00                	add    BYTE PTR [rax],al
    e591:	45 0e                	rex.RB (bad) 
    e593:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e599:	03 eb                	add    ebp,ebx
    e59b:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    e59e:	08 00                	or     BYTE PTR [rax],al
    e5a0:	1c 00                	sbb    al,0x0
    e5a2:	00 00                	add    BYTE PTR [rax],al
    e5a4:	f4                   	hlt    
    e5a5:	00 00                	add    BYTE PTR [rax],al
    e5a7:	00 9c 48 ff ff 13 01 	add    BYTE PTR [rax+rcx*2+0x113ffff],bl
    e5ae:	00 00                	add    BYTE PTR [rax],al
    e5b0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e5b3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e5b9:	03 0a                	add    ecx,DWORD PTR [rdx]
    e5bb:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    e5be:	08 00                	or     BYTE PTR [rax],al
    e5c0:	1c 00                	sbb    al,0x0
    e5c2:	00 00                	add    BYTE PTR [rax],al
    e5c4:	14 01                	adc    al,0x1
    e5c6:	00 00                	add    BYTE PTR [rax],al
    e5c8:	8f 49 ff ff          	(bad)  
    e5cc:	ae                   	scas   al,BYTE PTR es:[rdi]
    e5cd:	00 00                	add    BYTE PTR [rax],al
    e5cf:	00 00                	add    BYTE PTR [rax],al
    e5d1:	45 0e                	rex.RB (bad) 
    e5d3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e5d9:	02 a5 0c 07 08 00    	add    ah,BYTE PTR [rbp+0x8070c]
    e5df:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e5e2:	00 00                	add    BYTE PTR [rax],al
    e5e4:	34 01                	xor    al,0x1
    e5e6:	00 00                	add    BYTE PTR [rax],al
    e5e8:	1d 4a ff ff a6       	sbb    eax,0xa6ffff4a
    e5ed:	00 00                	add    BYTE PTR [rax],al
    e5ef:	00 00                	add    BYTE PTR [rax],al
    e5f1:	45 0e                	rex.RB (bad) 
    e5f3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e5f9:	02 9d 0c 07 08 00    	add    bl,BYTE PTR [rbp+0x8070c]
    e5ff:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e602:	00 00                	add    BYTE PTR [rax],al
    e604:	54                   	push   rsp
    e605:	01 00                	add    DWORD PTR [rax],eax
    e607:	00 a3 4a ff ff 95    	add    BYTE PTR [rbx-0x6a0000b6],ah
    e60d:	00 00                	add    BYTE PTR [rax],al
    e60f:	00 00                	add    BYTE PTR [rax],al
    e611:	45 0e                	rex.RB (bad) 
    e613:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e619:	02 8c 0c 07 08 00 00 	add    cl,BYTE PTR [rsp+rcx*1+0x807]
    e620:	1c 00                	sbb    al,0x0
    e622:	00 00                	add    BYTE PTR [rax],al
    e624:	74 01                	je     e627 <__GNU_EH_FRAME_HDR+0x547>
    e626:	00 00                	add    BYTE PTR [rax],al
    e628:	18 4b ff             	sbb    BYTE PTR [rbx-0x1],cl
    e62b:	ff 94 00 00 00 00 45 	call   QWORD PTR [rax+rax*1+0x45000000]
    e632:	0e                   	(bad)  
    e633:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e639:	02 8b 0c 07 08 00    	add    cl,BYTE PTR [rbx+0x8070c]
    e63f:	00 28                	add    BYTE PTR [rax],ch
    e641:	00 00                	add    BYTE PTR [rax],al
    e643:	00 94 01 00 00 8c 4b 	add    BYTE PTR [rcx+rax*1+0x4b8c0000],dl
    e64a:	ff                   	(bad)  
    e64b:	ff cc                	dec    esp
    e64d:	01 00                	add    DWORD PTR [rax],eax
    e64f:	00 00                	add    BYTE PTR [rax],al
    e651:	45 0e                	rex.RB (bad) 
    e653:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e659:	4d 8f 03             	rex.WRB pop QWORD PTR [r11]
    e65c:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
    e663:	07                   	(bad)  
    e664:	03 b6 01 0c 07 08    	add    esi,DWORD PTR [rsi+0x8070c01]
    e66a:	00 00                	add    BYTE PTR [rax],al
    e66c:	20 00                	and    BYTE PTR [rax],al
    e66e:	00 00                	add    BYTE PTR [rax],al
    e670:	c0 01 00             	rol    BYTE PTR [rcx],0x0
    e673:	00 2c 4d ff ff d4 00 	add    BYTE PTR [rcx*2+0xd4ffff],ch
    e67a:	00 00                	add    BYTE PTR [rax],al
    e67c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e67f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e685:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    e689:	c6                   	(bad)  
    e68a:	0c 07                	or     al,0x7
    e68c:	08 00                	or     BYTE PTR [rax],al
    e68e:	00 00                	add    BYTE PTR [rax],al
    e690:	20 00                	and    BYTE PTR [rax],al
    e692:	00 00                	add    BYTE PTR [rax],al
    e694:	e4 01                	in     al,0x1
    e696:	00 00                	add    BYTE PTR [rax],al
    e698:	dc 4d ff             	fmul   QWORD PTR [rbp-0x1]
    e69b:	ff c7                	inc    edi
    e69d:	00 00                	add    BYTE PTR [rax],al
    e69f:	00 00                	add    BYTE PTR [rax],al
    e6a1:	45 0e                	rex.RB (bad) 
    e6a3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e6a9:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    e6ad:	b9 0c 07 08 00       	mov    ecx,0x8070c
    e6b2:	00 00                	add    BYTE PTR [rax],al
    e6b4:	1c 00                	sbb    al,0x0
    e6b6:	00 00                	add    BYTE PTR [rax],al
    e6b8:	08 02                	or     BYTE PTR [rdx],al
    e6ba:	00 00                	add    BYTE PTR [rax],al
    e6bc:	7f 4e                	jg     e70c <__GNU_EH_FRAME_HDR+0x62c>
    e6be:	ff                   	(bad)  
    e6bf:	ff 53 00             	call   QWORD PTR [rbx+0x0]
    e6c2:	00 00                	add    BYTE PTR [rax],al
    e6c4:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e6c7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e6cd:	02 4a 0c             	add    cl,BYTE PTR [rdx+0xc]
    e6d0:	07                   	(bad)  
    e6d1:	08 00                	or     BYTE PTR [rax],al
    e6d3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e6d6:	00 00                	add    BYTE PTR [rax],al
    e6d8:	28 02                	sub    BYTE PTR [rdx],al
    e6da:	00 00                	add    BYTE PTR [rax],al
    e6dc:	b2 4e                	mov    dl,0x4e
    e6de:	ff                   	(bad)  
    e6df:	ff 33                	push   QWORD PTR [rbx]
    e6e1:	00 00                	add    BYTE PTR [rax],al
    e6e3:	00 00                	add    BYTE PTR [rax],al
    e6e5:	45 0e                	rex.RB (bad) 
    e6e7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e6ed:	6a 0c                	push   0xc
    e6ef:	07                   	(bad)  
    e6f0:	08 00                	or     BYTE PTR [rax],al
    e6f2:	00 00                	add    BYTE PTR [rax],al
    e6f4:	1c 00                	sbb    al,0x0
    e6f6:	00 00                	add    BYTE PTR [rax],al
    e6f8:	48 02 00             	rex.W add al,BYTE PTR [rax]
    e6fb:	00 c5                	add    ch,al
    e6fd:	4e ff                	rex.WRX (bad) 
    e6ff:	ff 21                	jmp    QWORD PTR [rcx]
    e701:	00 00                	add    BYTE PTR [rax],al
    e703:	00 00                	add    BYTE PTR [rax],al
    e705:	45 0e                	rex.RB (bad) 
    e707:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e70d:	58                   	pop    rax
    e70e:	0c 07                	or     al,0x7
    e710:	08 00                	or     BYTE PTR [rax],al
    e712:	00 00                	add    BYTE PTR [rax],al
    e714:	20 00                	and    BYTE PTR [rax],al
    e716:	00 00                	add    BYTE PTR [rax],al
    e718:	68 02 00 00 c6       	push   0xffffffffc6000002
    e71d:	4e ff                	rex.WRX (bad) 
    e71f:	ff 69 00             	jmp    FWORD PTR [rcx+0x0]
    e722:	00 00                	add    BYTE PTR [rax],al
    e724:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e727:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e72d:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    e731:	5b                   	pop    rbx
    e732:	0c 07                	or     al,0x7
    e734:	08 00                	or     BYTE PTR [rax],al
    e736:	00 00                	add    BYTE PTR [rax],al
    e738:	1c 00                	sbb    al,0x0
    e73a:	00 00                	add    BYTE PTR [rax],al
    e73c:	8c 02                	mov    WORD PTR [rdx],es
    e73e:	00 00                	add    BYTE PTR [rax],al
    e740:	0b 4f ff             	or     ecx,DWORD PTR [rdi-0x1]
    e743:	ff 25 04 00 00 00    	jmp    QWORD PTR [rip+0x4]        # e74d <__GNU_EH_FRAME_HDR+0x66d>
    e749:	45 0e                	rex.RB (bad) 
    e74b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e751:	03 1c 04             	add    ebx,DWORD PTR [rsp+rax*1]
    e754:	0c 07                	or     al,0x7
    e756:	08 00                	or     BYTE PTR [rax],al
    e758:	1c 00                	sbb    al,0x0
    e75a:	00 00                	add    BYTE PTR [rax],al
    e75c:	ac                   	lods   al,BYTE PTR ds:[rsi]
    e75d:	02 00                	add    al,BYTE PTR [rax]
    e75f:	00 10                	add    BYTE PTR [rax],dl
    e761:	53                   	push   rbx
    e762:	ff                   	(bad)  
    e763:	ff 5d 01             	call   FWORD PTR [rbp+0x1]
    e766:	00 00                	add    BYTE PTR [rax],al
    e768:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e76b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e771:	03 54 01 0c          	add    edx,DWORD PTR [rcx+rax*1+0xc]
    e775:	07                   	(bad)  
    e776:	08 00                	or     BYTE PTR [rax],al
    e778:	1c 00                	sbb    al,0x0
    e77a:	00 00                	add    BYTE PTR [rax],al
    e77c:	cc                   	int3   
    e77d:	02 00                	add    al,BYTE PTR [rax]
    e77f:	00 4d 54             	add    BYTE PTR [rbp+0x54],cl
    e782:	ff                   	(bad)  
    e783:	ff 44 08 00          	inc    DWORD PTR [rax+rcx*1+0x0]
    e787:	00 00                	add    BYTE PTR [rax],al
    e789:	45 0e                	rex.RB (bad) 
    e78b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e791:	03 3b                	add    edi,DWORD PTR [rbx]
    e793:	08 0c 07             	or     BYTE PTR [rdi+rax*1],cl
    e796:	08 00                	or     BYTE PTR [rax],al
    e798:	1c 00                	sbb    al,0x0
    e79a:	00 00                	add    BYTE PTR [rax],al
    e79c:	ec                   	in     al,dx
    e79d:	02 00                	add    al,BYTE PTR [rax]
    e79f:	00 71 5c             	add    BYTE PTR [rcx+0x5c],dh
    e7a2:	ff                   	(bad)  
    e7a3:	ff 43 09             	inc    DWORD PTR [rbx+0x9]
    e7a6:	00 00                	add    BYTE PTR [rax],al
    e7a8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e7ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e7b1:	03 3a                	add    edi,DWORD PTR [rdx]
    e7b3:	09 0c 07             	or     DWORD PTR [rdi+rax*1],ecx
    e7b6:	08 00                	or     BYTE PTR [rax],al
    e7b8:	1c 00                	sbb    al,0x0
    e7ba:	00 00                	add    BYTE PTR [rax],al
    e7bc:	0c 03                	or     al,0x3
    e7be:	00 00                	add    BYTE PTR [rax],al
    e7c0:	94                   	xchg   esp,eax
    e7c1:	65 ff                	gs (bad) 
    e7c3:	ff 55 01             	call   QWORD PTR [rbp+0x1]
    e7c6:	00 00                	add    BYTE PTR [rax],al
    e7c8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e7cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e7d1:	03 4c 01 0c          	add    ecx,DWORD PTR [rcx+rax*1+0xc]
    e7d5:	07                   	(bad)  
    e7d6:	08 00                	or     BYTE PTR [rax],al
    e7d8:	1c 00                	sbb    al,0x0
    e7da:	00 00                	add    BYTE PTR [rax],al
    e7dc:	2c 03                	sub    al,0x3
    e7de:	00 00                	add    BYTE PTR [rax],al
    e7e0:	c9                   	leave  
    e7e1:	66 ff                	data16 (bad) 
    e7e3:	ff                   	(bad)  
    e7e4:	ff 00                	inc    DWORD PTR [rax]
    e7e6:	00 00                	add    BYTE PTR [rax],al
    e7e8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e7eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e7f1:	02 f6                	add    dh,dh
    e7f3:	0c 07                	or     al,0x7
    e7f5:	08 00                	or     BYTE PTR [rax],al
    e7f7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e7fa:	00 00                	add    BYTE PTR [rax],al
    e7fc:	4c 03 00             	add    r8,QWORD PTR [rax]
    e7ff:	00 a8 67 ff ff ec    	add    BYTE PTR [rax-0x13000099],ch
    e805:	00 00                	add    BYTE PTR [rax],al
    e807:	00 00                	add    BYTE PTR [rax],al
    e809:	45 0e                	rex.RB (bad) 
    e80b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e811:	02 e3                	add    ah,bl
    e813:	0c 07                	or     al,0x7
    e815:	08 00                	or     BYTE PTR [rax],al
    e817:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e81a:	00 00                	add    BYTE PTR [rax],al
    e81c:	6c                   	ins    BYTE PTR es:[rdi],dx
    e81d:	03 00                	add    eax,DWORD PTR [rax]
    e81f:	00 74 68 ff          	add    BYTE PTR [rax+rbp*2-0x1],dh
    e823:	ff b2 03 00 00 00    	push   QWORD PTR [rdx+0x3]
    e829:	45 0e                	rex.RB (bad) 
    e82b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e831:	03 a9 03 0c 07 08    	add    ebp,DWORD PTR [rcx+0x8070c03]
    e837:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e83a:	00 00                	add    BYTE PTR [rax],al
    e83c:	8c 03                	mov    WORD PTR [rbx],es
    e83e:	00 00                	add    BYTE PTR [rax],al
    e840:	06                   	(bad)  
    e841:	6c                   	ins    BYTE PTR es:[rdi],dx
    e842:	ff                   	(bad)  
    e843:	ff 83 00 00 00 00    	inc    DWORD PTR [rbx+0x0]
    e849:	45 0e                	rex.RB (bad) 
    e84b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e851:	02 7a 0c             	add    bh,BYTE PTR [rdx+0xc]
    e854:	07                   	(bad)  
    e855:	08 00                	or     BYTE PTR [rax],al
    e857:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    e85a:	00 00                	add    BYTE PTR [rax],al
    e85c:	ac                   	lods   al,BYTE PTR ds:[rsi]
    e85d:	03 00                	add    eax,DWORD PTR [rax]
    e85f:	00 69 6c             	add    BYTE PTR [rcx+0x6c],ch
    e862:	ff                   	(bad)  
    e863:	ff 2a                	jmp    FWORD PTR [rdx]
    e865:	02 00                	add    al,BYTE PTR [rax]
    e867:	00 00                	add    BYTE PTR [rax],al
    e869:	45 0e                	rex.RB (bad) 
    e86b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e871:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    e875:	19 02                	sbb    DWORD PTR [rdx],eax
    e877:	0c 07                	or     al,0x7
    e879:	08 00                	or     BYTE PTR [rax],al
    e87b:	00 00                	add    BYTE PTR [rax],al
    e87d:	00 00                	add    BYTE PTR [rax],al
    e87f:	00 20                	add    BYTE PTR [rax],ah
    e881:	00 00                	add    BYTE PTR [rax],al
    e883:	00 d4                	add    ah,dl
    e885:	03 00                	add    eax,DWORD PTR [rax]
    e887:	00 6b 6e             	add    BYTE PTR [rbx+0x6e],ch
    e88a:	ff                   	(bad)  
    e88b:	ff 40 02             	inc    DWORD PTR [rax+0x2]
    e88e:	00 00                	add    BYTE PTR [rax],al
    e890:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e893:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e899:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    e89d:	32 02                	xor    al,BYTE PTR [rdx]
    e89f:	0c 07                	or     al,0x7
    e8a1:	08 00                	or     BYTE PTR [rax],al
    e8a3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e8a6:	00 00                	add    BYTE PTR [rax],al
    e8a8:	f8                   	clc    
    e8a9:	03 00                	add    eax,DWORD PTR [rax]
    e8ab:	00 87 70 ff ff 66    	add    BYTE PTR [rdi+0x66ffff70],al
    e8b1:	00 00                	add    BYTE PTR [rax],al
    e8b3:	00 00                	add    BYTE PTR [rax],al
    e8b5:	45 0e                	rex.RB (bad) 
    e8b7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e8bd:	02 5d 0c             	add    bl,BYTE PTR [rbp+0xc]
    e8c0:	07                   	(bad)  
    e8c1:	08 00                	or     BYTE PTR [rax],al
    e8c3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e8c6:	00 00                	add    BYTE PTR [rax],al
    e8c8:	18 04 00             	sbb    BYTE PTR [rax+rax*1],al
    e8cb:	00 cd                	add    ch,cl
    e8cd:	70 ff                	jo     e8ce <__GNU_EH_FRAME_HDR+0x7ee>
    e8cf:	ff 17                	call   QWORD PTR [rdi]
    e8d1:	00 00                	add    BYTE PTR [rax],al
    e8d3:	00 00                	add    BYTE PTR [rax],al
    e8d5:	45 0e                	rex.RB (bad) 
    e8d7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e8dd:	4e 0c 07             	rex.WRX or al,0x7
    e8e0:	08 00                	or     BYTE PTR [rax],al
    e8e2:	00 00                	add    BYTE PTR [rax],al
    e8e4:	20 00                	and    BYTE PTR [rax],al
    e8e6:	00 00                	add    BYTE PTR [rax],al
    e8e8:	38 04 00             	cmp    BYTE PTR [rax+rax*1],al
    e8eb:	00 c4                	add    ah,al
    e8ed:	70 ff                	jo     e8ee <__GNU_EH_FRAME_HDR+0x80e>
    e8ef:	ff 51 00             	call   QWORD PTR [rcx+0x0]
    e8f2:	00 00                	add    BYTE PTR [rax],al
    e8f4:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e8f7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e8fd:	02 48 0c             	add    cl,BYTE PTR [rax+0xc]
    e900:	07                   	(bad)  
    e901:	08 00                	or     BYTE PTR [rax],al
    e903:	00 00                	add    BYTE PTR [rax],al
    e905:	00 00                	add    BYTE PTR [rax],al
    e907:	00 20                	add    BYTE PTR [rax],ah
    e909:	00 00                	add    BYTE PTR [rax],al
    e90b:	00 5c 04 00          	add    BYTE PTR [rsp+rax*1+0x0],bl
    e90f:	00 f1                	add    cl,dh
    e911:	70 ff                	jo     e912 <__GNU_EH_FRAME_HDR+0x832>
    e913:	ff 40 06             	inc    DWORD PTR [rax+0x6]
    e916:	00 00                	add    BYTE PTR [rax],al
    e918:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e91b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e921:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    e925:	32 06                	xor    al,BYTE PTR [rsi]
    e927:	0c 07                	or     al,0x7
    e929:	08 00                	or     BYTE PTR [rax],al
    e92b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e92e:	00 00                	add    BYTE PTR [rax],al
    e930:	80 04 00 00          	add    BYTE PTR [rax+rax*1],0x0
    e934:	0d 77 ff ff 1a       	or     eax,0x1affff77
    e939:	00 00                	add    BYTE PTR [rax],al
    e93b:	00 00                	add    BYTE PTR [rax],al
    e93d:	45 0e                	rex.RB (bad) 
    e93f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e945:	51                   	push   rcx
    e946:	0c 07                	or     al,0x7
    e948:	08 00                	or     BYTE PTR [rax],al
    e94a:	00 00                	add    BYTE PTR [rax],al
    e94c:	1c 00                	sbb    al,0x0
    e94e:	00 00                	add    BYTE PTR [rax],al
    e950:	a0 04 00 00 07 77 ff 	movabs al,ds:0x29ffff7707000004
    e957:	ff 29 
    e959:	00 00                	add    BYTE PTR [rax],al
    e95b:	00 00                	add    BYTE PTR [rax],al
    e95d:	45 0e                	rex.RB (bad) 
    e95f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e965:	60                   	(bad)  
    e966:	0c 07                	or     al,0x7
    e968:	08 00                	or     BYTE PTR [rax],al
    e96a:	00 00                	add    BYTE PTR [rax],al
    e96c:	1c 00                	sbb    al,0x0
    e96e:	00 00                	add    BYTE PTR [rax],al
    e970:	c0 04 00 00          	rol    BYTE PTR [rax+rax*1],0x0
    e974:	10 77 ff             	adc    BYTE PTR [rdi-0x1],dh
    e977:	ff 30                	push   QWORD PTR [rax]
    e979:	00 00                	add    BYTE PTR [rax],al
    e97b:	00 00                	add    BYTE PTR [rax],al
    e97d:	45 0e                	rex.RB (bad) 
    e97f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e985:	67 0c 07             	addr32 or al,0x7
    e988:	08 00                	or     BYTE PTR [rax],al
    e98a:	00 00                	add    BYTE PTR [rax],al
    e98c:	18 00                	sbb    BYTE PTR [rax],al
    e98e:	00 00                	add    BYTE PTR [rax],al
    e990:	e0 04                	loopne e996 <__GNU_EH_FRAME_HDR+0x8b6>
    e992:	00 00                	add    BYTE PTR [rax],al
    e994:	20 77 ff             	and    BYTE PTR [rdi-0x1],dh
    e997:	ff 37                	push   QWORD PTR [rdi]
    e999:	00 00                	add    BYTE PTR [rax],al
    e99b:	00 00                	add    BYTE PTR [rax],al
    e99d:	45 0e                	rex.RB (bad) 
    e99f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e9a5:	00 00                	add    BYTE PTR [rax],al
    e9a7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e9aa:	00 00                	add    BYTE PTR [rax],al
    e9ac:	fc                   	cld    
    e9ad:	04 00                	add    al,0x0
    e9af:	00 3b                	add    BYTE PTR [rbx],bh
    e9b1:	77 ff                	ja     e9b2 <__GNU_EH_FRAME_HDR+0x8d2>
    e9b3:	ff 45 01             	inc    DWORD PTR [rbp+0x1]
    e9b6:	00 00                	add    BYTE PTR [rax],al
    e9b8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e9bb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e9c1:	03 3c 01             	add    edi,DWORD PTR [rcx+rax*1]
    e9c4:	0c 07                	or     al,0x7
    e9c6:	08 00                	or     BYTE PTR [rax],al
    e9c8:	1c 00                	sbb    al,0x0
    e9ca:	00 00                	add    BYTE PTR [rax],al
    e9cc:	1c 05                	sbb    al,0x5
    e9ce:	00 00                	add    BYTE PTR [rax],al
    e9d0:	60                   	(bad)  
    e9d1:	78 ff                	js     e9d2 <__GNU_EH_FRAME_HDR+0x8f2>
    e9d3:	ff 60 01             	jmp    QWORD PTR [rax+0x1]
    e9d6:	00 00                	add    BYTE PTR [rax],al
    e9d8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e9db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e9e1:	03 57 01             	add    edx,DWORD PTR [rdi+0x1]
    e9e4:	0c 07                	or     al,0x7
    e9e6:	08 00                	or     BYTE PTR [rax],al
    e9e8:	1c 00                	sbb    al,0x0
    e9ea:	00 00                	add    BYTE PTR [rax],al
    e9ec:	3c 05                	cmp    al,0x5
    e9ee:	00 00                	add    BYTE PTR [rax],al
    e9f0:	a0 79 ff ff 61 00 00 	movabs al,ds:0x61ffff79
    e9f7:	00 00 
    e9f9:	45 0e                	rex.RB (bad) 
    e9fb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea01:	02 58 0c             	add    bl,BYTE PTR [rax+0xc]
    ea04:	07                   	(bad)  
    ea05:	08 00                	or     BYTE PTR [rax],al
    ea07:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ea0a:	00 00                	add    BYTE PTR [rax],al
    ea0c:	5c                   	pop    rsp
    ea0d:	05 00 00 e1 79       	add    eax,0x79e10000
    ea12:	ff                   	(bad)  
    ea13:	ff                   	(bad)  
    ea14:	39 00                	cmp    DWORD PTR [rax],eax
    ea16:	00 00                	add    BYTE PTR [rax],al
    ea18:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ea1b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea21:	70 0c                	jo     ea2f <__GNU_EH_FRAME_HDR+0x94f>
    ea23:	07                   	(bad)  
    ea24:	08 00                	or     BYTE PTR [rax],al
    ea26:	00 00                	add    BYTE PTR [rax],al
    ea28:	1c 00                	sbb    al,0x0
    ea2a:	00 00                	add    BYTE PTR [rax],al
    ea2c:	7c 05                	jl     ea33 <__GNU_EH_FRAME_HDR+0x953>
    ea2e:	00 00                	add    BYTE PTR [rax],al
    ea30:	fa                   	cli    
    ea31:	79 ff                	jns    ea32 <__GNU_EH_FRAME_HDR+0x952>
    ea33:	ff                   	(bad)  
    ea34:	be 00 00 00 00       	mov    esi,0x0
    ea39:	45 0e                	rex.RB (bad) 
    ea3b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea41:	02 b5 0c 07 08 00    	add    dh,BYTE PTR [rbp+0x8070c]
    ea47:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ea4a:	00 00                	add    BYTE PTR [rax],al
    ea4c:	9c                   	pushf  
    ea4d:	05 00 00 98 7a       	add    eax,0x7a980000
    ea52:	ff                   	(bad)  
    ea53:	ff                   	(bad)  
    ea54:	be 02 00 00 00       	mov    esi,0x2
    ea59:	45 0e                	rex.RB (bad) 
    ea5b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea61:	03 b5 02 0c 07 08    	add    esi,DWORD PTR [rbp+0x8070c02]
    ea67:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ea6a:	00 00                	add    BYTE PTR [rax],al
    ea6c:	bc 05 00 00 36       	mov    esp,0x36000005
    ea71:	7d ff                	jge    ea72 <__GNU_EH_FRAME_HDR+0x992>
    ea73:	ff                   	(bad)  
    ea74:	f8                   	clc    
    ea75:	01 00                	add    DWORD PTR [rax],eax
    ea77:	00 00                	add    BYTE PTR [rax],al
    ea79:	45 0e                	rex.RB (bad) 
    ea7b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea81:	03 ef                	add    ebp,edi
    ea83:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ea86:	08 00                	or     BYTE PTR [rax],al
    ea88:	1c 00                	sbb    al,0x0
    ea8a:	00 00                	add    BYTE PTR [rax],al
    ea8c:	dc 05 00 00 0e 7f    	fadd   QWORD PTR [rip+0x7f0e0000]        # 7f0eea92 <_end+0x7efb3652>
    ea92:	ff                   	(bad)  
    ea93:	ff 5a 00             	call   FWORD PTR [rdx+0x0]
    ea96:	00 00                	add    BYTE PTR [rax],al
    ea98:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ea9b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eaa1:	02 51 0c             	add    dl,BYTE PTR [rcx+0xc]
    eaa4:	07                   	(bad)  
    eaa5:	08 00                	or     BYTE PTR [rax],al
    eaa7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eaaa:	00 00                	add    BYTE PTR [rax],al
    eaac:	fc                   	cld    
    eaad:	05 00 00 48 7f       	add    eax,0x7f480000
    eab2:	ff                   	(bad)  
    eab3:	ff 06                	inc    DWORD PTR [rsi]
    eab5:	03 00                	add    eax,DWORD PTR [rax]
    eab7:	00 00                	add    BYTE PTR [rax],al
    eab9:	45 0e                	rex.RB (bad) 
    eabb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eac1:	03 fd                	add    edi,ebp
    eac3:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    eac6:	08 00                	or     BYTE PTR [rax],al
    eac8:	1c 00                	sbb    al,0x0
    eaca:	00 00                	add    BYTE PTR [rax],al
    eacc:	1c 06                	sbb    al,0x6
    eace:	00 00                	add    BYTE PTR [rax],al
    ead0:	2e 82                	cs (bad) 
    ead2:	ff                   	(bad)  
    ead3:	ff 55 04             	call   QWORD PTR [rbp+0x4]
    ead6:	00 00                	add    BYTE PTR [rax],al
    ead8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eadb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eae1:	4a 8c 03             	rex.WX mov WORD PTR [rbx],es
    eae4:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
    eae8:	18 00                	sbb    BYTE PTR [rax],al
    eaea:	00 00                	add    BYTE PTR [rax],al
    eaec:	3c 06                	cmp    al,0x6
    eaee:	00 00                	add    BYTE PTR [rax],al
    eaf0:	63 86 ff ff 2a 00    	movsxd eax,DWORD PTR [rsi+0x2affff]
    eaf6:	00 00                	add    BYTE PTR [rax],al
    eaf8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eafb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb01:	00 00                	add    BYTE PTR [rax],al
    eb03:	00 20                	add    BYTE PTR [rax],ah
    eb05:	00 00                	add    BYTE PTR [rax],al
    eb07:	00 58 06             	add    BYTE PTR [rax+0x6],bl
    eb0a:	00 00                	add    BYTE PTR [rax],al
    eb0c:	71 86                	jno    ea94 <__GNU_EH_FRAME_HDR+0x9b4>
    eb0e:	ff                   	(bad)  
    eb0f:	ff b7 01 00 00 00    	push   QWORD PTR [rdi+0x1]
    eb15:	45 0e                	rex.RB (bad) 
    eb17:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb1d:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    eb21:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    eb22:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    eb25:	08 00                	or     BYTE PTR [rax],al
    eb27:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eb2a:	00 00                	add    BYTE PTR [rax],al
    eb2c:	7c 06                	jl     eb34 <__GNU_EH_FRAME_HDR+0xa54>
    eb2e:	00 00                	add    BYTE PTR [rax],al
    eb30:	04 88                	add    al,0x88
    eb32:	ff                   	(bad)  
    eb33:	ff 17                	call   QWORD PTR [rdi]
    eb35:	00 00                	add    BYTE PTR [rax],al
    eb37:	00 00                	add    BYTE PTR [rax],al
    eb39:	45 0e                	rex.RB (bad) 
    eb3b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb41:	4e 0c 07             	rex.WRX or al,0x7
    eb44:	08 00                	or     BYTE PTR [rax],al
    eb46:	00 00                	add    BYTE PTR [rax],al
    eb48:	1c 00                	sbb    al,0x0
    eb4a:	00 00                	add    BYTE PTR [rax],al
    eb4c:	9c                   	pushf  
    eb4d:	06                   	(bad)  
    eb4e:	00 00                	add    BYTE PTR [rax],al
    eb50:	fb                   	sti    
    eb51:	87 ff                	xchg   edi,edi
    eb53:	ff 4f 00             	dec    DWORD PTR [rdi+0x0]
    eb56:	00 00                	add    BYTE PTR [rax],al
    eb58:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eb5b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb61:	02 46 0c             	add    al,BYTE PTR [rsi+0xc]
    eb64:	07                   	(bad)  
    eb65:	08 00                	or     BYTE PTR [rax],al
    eb67:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eb6a:	00 00                	add    BYTE PTR [rax],al
    eb6c:	bc 06 00 00 2a       	mov    esp,0x2a000006
    eb71:	88 ff                	mov    bh,bh
    eb73:	ff 4d 00             	dec    DWORD PTR [rbp+0x0]
    eb76:	00 00                	add    BYTE PTR [rax],al
    eb78:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eb7b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb81:	02 44 0c 07          	add    al,BYTE PTR [rsp+rcx*1+0x7]
    eb85:	08 00                	or     BYTE PTR [rax],al
    eb87:	00 18                	add    BYTE PTR [rax],bl
    eb89:	00 00                	add    BYTE PTR [rax],al
    eb8b:	00 dc                	add    ah,bl
    eb8d:	06                   	(bad)  
    eb8e:	00 00                	add    BYTE PTR [rax],al
    eb90:	57                   	push   rdi
    eb91:	88 ff                	mov    bh,bh
    eb93:	ff 77 01             	push   QWORD PTR [rdi+0x1]
    eb96:	00 00                	add    BYTE PTR [rax],al
    eb98:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eb9b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eba1:	00 00                	add    BYTE PTR [rax],al
    eba3:	00 20                	add    BYTE PTR [rax],ah
    eba5:	00 00                	add    BYTE PTR [rax],al
    eba7:	00 f8                	add    al,bh
    eba9:	06                   	(bad)  
    ebaa:	00 00                	add    BYTE PTR [rax],al
    ebac:	b2 89                	mov    dl,0x89
    ebae:	ff                   	(bad)  
    ebaf:	ff 9c 00 00 00 00 45 	call   FWORD PTR [rax+rax*1+0x45000000]
    ebb6:	0e                   	(bad)  
    ebb7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ebbd:	02 93 0c 07 08 00    	add    dl,BYTE PTR [rbx+0x8070c]
    ebc3:	00 00                	add    BYTE PTR [rax],al
    ebc5:	00 00                	add    BYTE PTR [rax],al
    ebc7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ebca:	00 00                	add    BYTE PTR [rax],al
    ebcc:	1c 07                	sbb    al,0x7
    ebce:	00 00                	add    BYTE PTR [rax],al
    ebd0:	2a 8a ff ff ee 01    	sub    cl,BYTE PTR [rdx+0x1eeffff]
    ebd6:	00 00                	add    BYTE PTR [rax],al
    ebd8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ebdb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ebe1:	03 e5                	add    esp,ebp
    ebe3:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ebe6:	08 00                	or     BYTE PTR [rax],al
    ebe8:	1c 00                	sbb    al,0x0
    ebea:	00 00                	add    BYTE PTR [rax],al
    ebec:	3c 07                	cmp    al,0x7
    ebee:	00 00                	add    BYTE PTR [rax],al
    ebf0:	f8                   	clc    
    ebf1:	8b ff                	mov    edi,edi
    ebf3:	ff                   	(bad)  
    ebf4:	e8 01 00 00 00       	call   ebfa <__GNU_EH_FRAME_HDR+0xb1a>
    ebf9:	45 0e                	rex.RB (bad) 
    ebfb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec01:	03 df                	add    ebx,edi
    ec03:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ec06:	08 00                	or     BYTE PTR [rax],al
    ec08:	1c 00                	sbb    al,0x0
    ec0a:	00 00                	add    BYTE PTR [rax],al
    ec0c:	5c                   	pop    rsp
    ec0d:	07                   	(bad)  
    ec0e:	00 00                	add    BYTE PTR [rax],al
    ec10:	c0 8d ff ff 6c 00 00 	ror    BYTE PTR [rbp+0x6cffff],0x0
    ec17:	00 00                	add    BYTE PTR [rax],al
    ec19:	45 0e                	rex.RB (bad) 
    ec1b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec21:	02 63 0c             	add    ah,BYTE PTR [rbx+0xc]
    ec24:	07                   	(bad)  
    ec25:	08 00                	or     BYTE PTR [rax],al
    ec27:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ec2a:	00 00                	add    BYTE PTR [rax],al
    ec2c:	7c 07                	jl     ec35 <__GNU_EH_FRAME_HDR+0xb55>
    ec2e:	00 00                	add    BYTE PTR [rax],al
    ec30:	0c 8e                	or     al,0x8e
    ec32:	ff                   	(bad)  
    ec33:	ff 72 00             	push   QWORD PTR [rdx+0x0]
    ec36:	00 00                	add    BYTE PTR [rax],al
    ec38:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ec3b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec41:	02 69 0c             	add    ch,BYTE PTR [rcx+0xc]
    ec44:	07                   	(bad)  
    ec45:	08 00                	or     BYTE PTR [rax],al
    ec47:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ec4a:	00 00                	add    BYTE PTR [rax],al
    ec4c:	9c                   	pushf  
    ec4d:	07                   	(bad)  
    ec4e:	00 00                	add    BYTE PTR [rax],al
    ec50:	5e                   	pop    rsi
    ec51:	8e ff                	mov    ?,edi
    ec53:	ff 11                	call   QWORD PTR [rcx]
    ec55:	01 00                	add    DWORD PTR [rax],eax
    ec57:	00 00                	add    BYTE PTR [rax],al
    ec59:	45 0e                	rex.RB (bad) 
    ec5b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec61:	03 08                	add    ecx,DWORD PTR [rax]
    ec63:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ec66:	08 00                	or     BYTE PTR [rax],al
    ec68:	1c 00                	sbb    al,0x0
    ec6a:	00 00                	add    BYTE PTR [rax],al
    ec6c:	bc 07 00 00 4f       	mov    esp,0x4f000007
    ec71:	8f                   	(bad)  
    ec72:	ff                   	(bad)  
    ec73:	ff 5c 00 00          	call   FWORD PTR [rax+rax*1+0x0]
    ec77:	00 00                	add    BYTE PTR [rax],al
    ec79:	45 0e                	rex.RB (bad) 
    ec7b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec81:	02 53 0c             	add    dl,BYTE PTR [rbx+0xc]
    ec84:	07                   	(bad)  
    ec85:	08 00                	or     BYTE PTR [rax],al
    ec87:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ec8a:	00 00                	add    BYTE PTR [rax],al
    ec8c:	dc 07                	fadd   QWORD PTR [rdi]
    ec8e:	00 00                	add    BYTE PTR [rax],al
    ec90:	8b 8f ff ff 3e 00    	mov    ecx,DWORD PTR [rdi+0x3effff]
    ec96:	00 00                	add    BYTE PTR [rax],al
    ec98:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ec9b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eca1:	75 0c                	jne    ecaf <__GNU_EH_FRAME_HDR+0xbcf>
    eca3:	07                   	(bad)  
    eca4:	08 00                	or     BYTE PTR [rax],al
    eca6:	00 00                	add    BYTE PTR [rax],al
    eca8:	1c 00                	sbb    al,0x0
    ecaa:	00 00                	add    BYTE PTR [rax],al
    ecac:	fc                   	cld    
    ecad:	07                   	(bad)  
    ecae:	00 00                	add    BYTE PTR [rax],al
    ecb0:	a9 8f ff ff 86       	test   eax,0x86ffff8f
    ecb5:	00 00                	add    BYTE PTR [rax],al
    ecb7:	00 00                	add    BYTE PTR [rax],al
    ecb9:	45 0e                	rex.RB (bad) 
    ecbb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ecc1:	02 7d 0c             	add    bh,BYTE PTR [rbp+0xc]
    ecc4:	07                   	(bad)  
    ecc5:	08 00                	or     BYTE PTR [rax],al
    ecc7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ecca:	00 00                	add    BYTE PTR [rax],al
    eccc:	1c 08                	sbb    al,0x8
    ecce:	00 00                	add    BYTE PTR [rax],al
    ecd0:	0f 90 ff             	seto   bh
    ecd3:	ff                   	(bad)  
    ecd4:	df 00                	fild   WORD PTR [rax]
    ecd6:	00 00                	add    BYTE PTR [rax],al
    ecd8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ecdb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ece1:	02 d6                	add    dl,dh
    ece3:	0c 07                	or     al,0x7
    ece5:	08 00                	or     BYTE PTR [rax],al
    ece7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ecea:	00 00                	add    BYTE PTR [rax],al
    ecec:	3c 08                	cmp    al,0x8
    ecee:	00 00                	add    BYTE PTR [rax],al
    ecf0:	ce                   	(bad)  
    ecf1:	90                   	nop
    ecf2:	ff                   	(bad)  
    ecf3:	ff 74 00 00          	push   QWORD PTR [rax+rax*1+0x0]
    ecf7:	00 00                	add    BYTE PTR [rax],al
    ecf9:	45 0e                	rex.RB (bad) 
    ecfb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed01:	02 6b 0c             	add    ch,BYTE PTR [rbx+0xc]
    ed04:	07                   	(bad)  
    ed05:	08 00                	or     BYTE PTR [rax],al
    ed07:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ed0a:	00 00                	add    BYTE PTR [rax],al
    ed0c:	5c                   	pop    rsp
    ed0d:	08 00                	or     BYTE PTR [rax],al
    ed0f:	00 22                	add    BYTE PTR [rdx],ah
    ed11:	91                   	xchg   ecx,eax
    ed12:	ff                   	(bad)  
    ed13:	ff 9c 00 00 00 00 45 	call   FWORD PTR [rax+rax*1+0x45000000]
    ed1a:	0e                   	(bad)  
    ed1b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed21:	02 93 0c 07 08 00    	add    dl,BYTE PTR [rbx+0x8070c]
    ed27:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ed2a:	00 00                	add    BYTE PTR [rax],al
    ed2c:	7c 08                	jl     ed36 <__GNU_EH_FRAME_HDR+0xc56>
    ed2e:	00 00                	add    BYTE PTR [rax],al
    ed30:	9e                   	sahf   
    ed31:	91                   	xchg   ecx,eax
    ed32:	ff                   	(bad)  
    ed33:	ff 29                	jmp    FWORD PTR [rcx]
    ed35:	00 00                	add    BYTE PTR [rax],al
    ed37:	00 00                	add    BYTE PTR [rax],al
    ed39:	45 0e                	rex.RB (bad) 
    ed3b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed41:	60                   	(bad)  
    ed42:	0c 07                	or     al,0x7
    ed44:	08 00                	or     BYTE PTR [rax],al
    ed46:	00 00                	add    BYTE PTR [rax],al
    ed48:	1c 00                	sbb    al,0x0
    ed4a:	00 00                	add    BYTE PTR [rax],al
    ed4c:	9c                   	pushf  
    ed4d:	08 00                	or     BYTE PTR [rax],al
    ed4f:	00 a7 91 ff ff 29    	add    BYTE PTR [rdi+0x29ffff91],ah
    ed55:	00 00                	add    BYTE PTR [rax],al
    ed57:	00 00                	add    BYTE PTR [rax],al
    ed59:	45 0e                	rex.RB (bad) 
    ed5b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed61:	60                   	(bad)  
    ed62:	0c 07                	or     al,0x7
    ed64:	08 00                	or     BYTE PTR [rax],al
    ed66:	00 00                	add    BYTE PTR [rax],al
    ed68:	24 00                	and    al,0x0
    ed6a:	00 00                	add    BYTE PTR [rax],al
    ed6c:	bc 08 00 00 b0       	mov    esp,0xb0000008
    ed71:	91                   	xchg   ecx,eax
    ed72:	ff                   	(bad)  
    ed73:	ff 54 01 00          	call   QWORD PTR [rcx+rax*1+0x0]
    ed77:	00 00                	add    BYTE PTR [rax],al
    ed79:	45 0e                	rex.RB (bad) 
    ed7b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed81:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    ed85:	46 01 0c 07          	add    DWORD PTR [rdi+r8*1],r9d
    ed89:	08 00                	or     BYTE PTR [rax],al
    ed8b:	00 00                	add    BYTE PTR [rax],al
    ed8d:	00 00                	add    BYTE PTR [rax],al
    ed8f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ed92:	00 00                	add    BYTE PTR [rax],al
    ed94:	e4 08                	in     al,0x8
    ed96:	00 00                	add    BYTE PTR [rax],al
    ed98:	dc 92 ff ff 13 01    	fcom   QWORD PTR [rdx+0x113ffff]
    ed9e:	00 00                	add    BYTE PTR [rax],al
    eda0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eda3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eda9:	03 0a                	add    ecx,DWORD PTR [rdx]
    edab:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    edae:	08 00                	or     BYTE PTR [rax],al
    edb0:	1c 00                	sbb    al,0x0
    edb2:	00 00                	add    BYTE PTR [rax],al
    edb4:	04 09                	add    al,0x9
    edb6:	00 00                	add    BYTE PTR [rax],al
    edb8:	cf                   	iret   
    edb9:	93                   	xchg   ebx,eax
    edba:	ff                   	(bad)  
    edbb:	ff                   	(bad)  
    edbc:	f9                   	stc    
    edbd:	00 00                	add    BYTE PTR [rax],al
    edbf:	00 00                	add    BYTE PTR [rax],al
    edc1:	45 0e                	rex.RB (bad) 
    edc3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    edc9:	02 f0                	add    dh,al
    edcb:	0c 07                	or     al,0x7
    edcd:	08 00                	or     BYTE PTR [rax],al
    edcf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    edd2:	00 00                	add    BYTE PTR [rax],al
    edd4:	24 09                	and    al,0x9
    edd6:	00 00                	add    BYTE PTR [rax],al
    edd8:	a8 94                	test   al,0x94
    edda:	ff                   	(bad)  
    eddb:	ff a2 00 00 00 00    	jmp    QWORD PTR [rdx+0x0]
    ede1:	45 0e                	rex.RB (bad) 
    ede3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ede9:	02 99 0c 07 08 00    	add    bl,BYTE PTR [rcx+0x8070c]
    edef:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    edf2:	00 00                	add    BYTE PTR [rax],al
    edf4:	44 09 00             	or     DWORD PTR [rax],r8d
    edf7:	00 2a                	add    BYTE PTR [rdx],ch
    edf9:	95                   	xchg   ebp,eax
    edfa:	ff                   	(bad)  
    edfb:	ff 1e                	call   FWORD PTR [rsi]
    edfd:	00 00                	add    BYTE PTR [rax],al
    edff:	00 00                	add    BYTE PTR [rax],al
    ee01:	45 0e                	rex.RB (bad) 
    ee03:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee09:	55                   	push   rbp
    ee0a:	0c 07                	or     al,0x7
    ee0c:	08 00                	or     BYTE PTR [rax],al
    ee0e:	00 00                	add    BYTE PTR [rax],al
    ee10:	1c 00                	sbb    al,0x0
    ee12:	00 00                	add    BYTE PTR [rax],al
    ee14:	64 09 00             	or     DWORD PTR fs:[rax],eax
    ee17:	00 28                	add    BYTE PTR [rax],ch
    ee19:	95                   	xchg   ebp,eax
    ee1a:	ff                   	(bad)  
    ee1b:	ff 63 01             	jmp    QWORD PTR [rbx+0x1]
    ee1e:	00 00                	add    BYTE PTR [rax],al
    ee20:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ee23:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee29:	03 5a 01             	add    ebx,DWORD PTR [rdx+0x1]
    ee2c:	0c 07                	or     al,0x7
    ee2e:	08 00                	or     BYTE PTR [rax],al
    ee30:	2c 00                	sub    al,0x0
    ee32:	00 00                	add    BYTE PTR [rax],al
    ee34:	84 09                	test   BYTE PTR [rcx],cl
    ee36:	00 00                	add    BYTE PTR [rax],al
    ee38:	6b 96 ff ff 11 02 00 	imul   edx,DWORD PTR [rsi+0x211ffff],0x0
    ee3f:	00 00                	add    BYTE PTR [rax],al
    ee41:	45 0e                	rex.RB (bad) 
    ee43:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee49:	50                   	push   rax
    ee4a:	8f 03                	pop    QWORD PTR [rbx]
    ee4c:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
    ee53:	07                   	(bad)  
    ee54:	03 f8                	add    edi,eax
    ee56:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ee59:	08 00                	or     BYTE PTR [rax],al
    ee5b:	00 00                	add    BYTE PTR [rax],al
    ee5d:	00 00                	add    BYTE PTR [rax],al
    ee5f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ee62:	00 00                	add    BYTE PTR [rax],al
    ee64:	b4 09                	mov    ah,0x9
    ee66:	00 00                	add    BYTE PTR [rax],al
    ee68:	4c 98                	rex.WR cdqe 
    ee6a:	ff                   	(bad)  
    ee6b:	ff b2 00 00 00 00    	push   QWORD PTR [rdx+0x0]
    ee71:	45 0e                	rex.RB (bad) 
    ee73:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee79:	02 a9 0c 07 08 00    	add    ch,BYTE PTR [rcx+0x8070c]
    ee7f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ee82:	00 00                	add    BYTE PTR [rax],al
    ee84:	d4                   	(bad)  
    ee85:	09 00                	or     DWORD PTR [rax],eax
    ee87:	00 de                	add    dh,bl
    ee89:	98                   	cwde   
    ee8a:	ff                   	(bad)  
    ee8b:	ff a5 00 00 00 00    	jmp    QWORD PTR [rbp+0x0]
    ee91:	45 0e                	rex.RB (bad) 
    ee93:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee99:	02 9c 0c 07 08 00 00 	add    bl,BYTE PTR [rsp+rcx*1+0x807]
    eea0:	24 00                	and    al,0x0
    eea2:	00 00                	add    BYTE PTR [rax],al
    eea4:	f4                   	hlt    
    eea5:	09 00                	or     DWORD PTR [rax],eax
    eea7:	00 63 99             	add    BYTE PTR [rbx-0x67],ah
    eeaa:	ff                   	(bad)  
    eeab:	ff ac 00 00 00 00 45 	jmp    FWORD PTR [rax+rax*1+0x45000000]
    eeb2:	0e                   	(bad)  
    eeb3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eeb9:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    eebd:	9e                   	sahf   
    eebe:	0c 07                	or     al,0x7
    eec0:	08 00                	or     BYTE PTR [rax],al
    eec2:	00 00                	add    BYTE PTR [rax],al
    eec4:	00 00                	add    BYTE PTR [rax],al
    eec6:	00 00                	add    BYTE PTR [rax],al
    eec8:	1c 00                	sbb    al,0x0
    eeca:	00 00                	add    BYTE PTR [rax],al
    eecc:	1c 0a                	sbb    al,0xa
    eece:	00 00                	add    BYTE PTR [rax],al
    eed0:	e7 99                	out    0x99,eax
    eed2:	ff                   	(bad)  
    eed3:	ff d5                	call   rbp
    eed5:	00 00                	add    BYTE PTR [rax],al
    eed7:	00 00                	add    BYTE PTR [rax],al
    eed9:	45 0e                	rex.RB (bad) 
    eedb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eee1:	02 cc                	add    cl,ah
    eee3:	0c 07                	or     al,0x7
    eee5:	08 00                	or     BYTE PTR [rax],al
    eee7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eeea:	00 00                	add    BYTE PTR [rax],al
    eeec:	3c 0a                	cmp    al,0xa
    eeee:	00 00                	add    BYTE PTR [rax],al
    eef0:	9c                   	pushf  
    eef1:	9a                   	(bad)  
    eef2:	ff                   	(bad)  
    eef3:	ff                   	(bad)  
    eef4:	df 00                	fild   WORD PTR [rax]
    eef6:	00 00                	add    BYTE PTR [rax],al
    eef8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eefb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef01:	02 d6                	add    dl,dh
    ef03:	0c 07                	or     al,0x7
    ef05:	08 00                	or     BYTE PTR [rax],al
    ef07:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef0a:	00 00                	add    BYTE PTR [rax],al
    ef0c:	5c                   	pop    rsp
    ef0d:	0a 00                	or     al,BYTE PTR [rax]
    ef0f:	00 5b 9b             	add    BYTE PTR [rbx-0x65],bl
    ef12:	ff                   	(bad)  
    ef13:	ff                   	(bad)  
    ef14:	7d 00                	jge    ef16 <__GNU_EH_FRAME_HDR+0xe36>
    ef16:	00 00                	add    BYTE PTR [rax],al
    ef18:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ef1b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef21:	02 74 0c 07          	add    dh,BYTE PTR [rsp+rcx*1+0x7]
    ef25:	08 00                	or     BYTE PTR [rax],al
    ef27:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef2a:	00 00                	add    BYTE PTR [rax],al
    ef2c:	7c 0a                	jl     ef38 <__GNU_EH_FRAME_HDR+0xe58>
    ef2e:	00 00                	add    BYTE PTR [rax],al
    ef30:	b8 9b ff ff 36       	mov    eax,0x36ffff9b
    ef35:	01 00                	add    DWORD PTR [rax],eax
    ef37:	00 00                	add    BYTE PTR [rax],al
    ef39:	45 0e                	rex.RB (bad) 
    ef3b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef41:	03 2d 01 0c 07 08    	add    ebp,DWORD PTR [rip+0x8070c01]        # 807fb48 <_end+0x7f44708>
    ef47:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef4a:	00 00                	add    BYTE PTR [rax],al
    ef4c:	9c                   	pushf  
    ef4d:	0a 00                	or     al,BYTE PTR [rax]
    ef4f:	00 ce                	add    dh,cl
    ef51:	9c                   	pushf  
    ef52:	ff                   	(bad)  
    ef53:	ff                   	(bad)  
    ef54:	7e 00                	jle    ef56 <__GNU_EH_FRAME_HDR+0xe76>
    ef56:	00 00                	add    BYTE PTR [rax],al
    ef58:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ef5b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef61:	02 75 0c             	add    dh,BYTE PTR [rbp+0xc]
    ef64:	07                   	(bad)  
    ef65:	08 00                	or     BYTE PTR [rax],al
    ef67:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef6a:	00 00                	add    BYTE PTR [rax],al
    ef6c:	bc 0a 00 00 2c       	mov    esp,0x2c00000a
    ef71:	9d                   	popf   
    ef72:	ff                   	(bad)  
    ef73:	ff                   	(bad)  
    ef74:	39 02                	cmp    DWORD PTR [rdx],eax
    ef76:	00 00                	add    BYTE PTR [rax],al
    ef78:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ef7b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef81:	03 30                	add    esi,DWORD PTR [rax]
    ef83:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    ef86:	08 00                	or     BYTE PTR [rax],al
    ef88:	1c 00                	sbb    al,0x0
    ef8a:	00 00                	add    BYTE PTR [rax],al
    ef8c:	dc 0a                	fmul   QWORD PTR [rdx]
    ef8e:	00 00                	add    BYTE PTR [rax],al
    ef90:	45 9f                	rex.RB lahf 
    ef92:	ff                   	(bad)  
    ef93:	ff c9                	dec    ecx
    ef95:	00 00                	add    BYTE PTR [rax],al
    ef97:	00 00                	add    BYTE PTR [rax],al
    ef99:	45 0e                	rex.RB (bad) 
    ef9b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    efa1:	02 c0                	add    al,al
    efa3:	0c 07                	or     al,0x7
    efa5:	08 00                	or     BYTE PTR [rax],al
    efa7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    efaa:	00 00                	add    BYTE PTR [rax],al
    efac:	fc                   	cld    
    efad:	0a 00                	or     al,BYTE PTR [rax]
    efaf:	00 ee                	add    dh,ch
    efb1:	9f                   	lahf   
    efb2:	ff                   	(bad)  
    efb3:	ff a1 01 00 00 00    	jmp    QWORD PTR [rcx+0x1]
    efb9:	45 0e                	rex.RB (bad) 
    efbb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    efc1:	03 98 01 0c 07 08    	add    ebx,DWORD PTR [rax+0x8070c01]
    efc7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    efca:	00 00                	add    BYTE PTR [rax],al
    efcc:	1c 0b                	sbb    al,0xb
    efce:	00 00                	add    BYTE PTR [rax],al
    efd0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    efd1:	a1 ff ff 13 01 00 00 	movabs eax,ds:0x450000000113ffff
    efd8:	00 45 
    efda:	0e                   	(bad)  
    efdb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    efe1:	03 0a                	add    ecx,DWORD PTR [rdx]
    efe3:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    efe6:	08 00                	or     BYTE PTR [rax],al
    efe8:	1c 00                	sbb    al,0x0
    efea:	00 00                	add    BYTE PTR [rax],al
    efec:	3c 0b                	cmp    al,0xb
    efee:	00 00                	add    BYTE PTR [rax],al
    eff0:	62 a2 ff ff 66       	(bad)  {k7}{z}
    eff5:	00 00                	add    BYTE PTR [rax],al
    eff7:	00 00                	add    BYTE PTR [rax],al
    eff9:	45 0e                	rex.RB (bad) 
    effb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f001:	02 5d 0c             	add    bl,BYTE PTR [rbp+0xc]
    f004:	07                   	(bad)  
    f005:	08 00                	or     BYTE PTR [rax],al
    f007:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f00a:	00 00                	add    BYTE PTR [rax],al
    f00c:	5c                   	pop    rsp
    f00d:	0b 00                	or     eax,DWORD PTR [rax]
    f00f:	00 a8 a2 ff ff 75    	add    BYTE PTR [rax+0x75ffffa2],ch
    f015:	00 00                	add    BYTE PTR [rax],al
    f017:	00 00                	add    BYTE PTR [rax],al
    f019:	45 0e                	rex.RB (bad) 
    f01b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f021:	02 6c 0c 07          	add    ch,BYTE PTR [rsp+rcx*1+0x7]
    f025:	08 00                	or     BYTE PTR [rax],al
    f027:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f02a:	00 00                	add    BYTE PTR [rax],al
    f02c:	7c 0b                	jl     f039 <__GNU_EH_FRAME_HDR+0xf59>
    f02e:	00 00                	add    BYTE PTR [rax],al
    f030:	fd                   	std    
    f031:	a2 ff ff db 00 00 00 	movabs ds:0x4500000000dbffff,al
    f038:	00 45 
    f03a:	0e                   	(bad)  
    f03b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f041:	02 d2                	add    dl,dl
    f043:	0c 07                	or     al,0x7
    f045:	08 00                	or     BYTE PTR [rax],al
    f047:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f04a:	00 00                	add    BYTE PTR [rax],al
    f04c:	9c                   	pushf  
    f04d:	0b 00                	or     eax,DWORD PTR [rax]
    f04f:	00 b8 a3 ff ff 72    	add    BYTE PTR [rax+0x72ffffa3],bh
    f055:	01 00                	add    DWORD PTR [rax],eax
    f057:	00 00                	add    BYTE PTR [rax],al
    f059:	45 0e                	rex.RB (bad) 
    f05b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f061:	03 69 01             	add    ebp,DWORD PTR [rcx+0x1]
    f064:	0c 07                	or     al,0x7
    f066:	08 00                	or     BYTE PTR [rax],al
    f068:	1c 00                	sbb    al,0x0
    f06a:	00 00                	add    BYTE PTR [rax],al
    f06c:	bc 0b 00 00 0a       	mov    esp,0xa00000b
    f071:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    f072:	ff                   	(bad)  
    f073:	ff 6c 00 00          	jmp    FWORD PTR [rax+rax*1+0x0]
    f077:	00 00                	add    BYTE PTR [rax],al
    f079:	45 0e                	rex.RB (bad) 
    f07b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f081:	02 63 0c             	add    ah,BYTE PTR [rbx+0xc]
    f084:	07                   	(bad)  
    f085:	08 00                	or     BYTE PTR [rax],al
    f087:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f08a:	00 00                	add    BYTE PTR [rax],al
    f08c:	dc 0b                	fmul   QWORD PTR [rbx]
    f08e:	00 00                	add    BYTE PTR [rax],al
    f090:	56                   	push   rsi
    f091:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    f092:	ff                   	(bad)  
    f093:	ff 80 00 00 00 00    	inc    DWORD PTR [rax+0x0]
    f099:	45 0e                	rex.RB (bad) 
    f09b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f0a1:	02 77 0c             	add    dh,BYTE PTR [rdi+0xc]
    f0a4:	07                   	(bad)  
    f0a5:	08 00                	or     BYTE PTR [rax],al
    f0a7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f0aa:	00 00                	add    BYTE PTR [rax],al
    f0ac:	fc                   	cld    
    f0ad:	0b 00                	or     eax,DWORD PTR [rax]
    f0af:	00 b6 a5 ff ff 16    	add    BYTE PTR [rsi+0x16ffffa5],dh
    f0b5:	00 00                	add    BYTE PTR [rax],al
    f0b7:	00 00                	add    BYTE PTR [rax],al
    f0b9:	45 0e                	rex.RB (bad) 
    f0bb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f0c1:	4d 0c 07             	rex.WRB or al,0x7
    f0c4:	08 00                	or     BYTE PTR [rax],al
    f0c6:	00 00                	add    BYTE PTR [rax],al
    f0c8:	20 00                	and    BYTE PTR [rax],al
    f0ca:	00 00                	add    BYTE PTR [rax],al
    f0cc:	1c 0c                	sbb    al,0xc
    f0ce:	00 00                	add    BYTE PTR [rax],al
    f0d0:	ac                   	lods   al,BYTE PTR ds:[rsi]
    f0d1:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    f0d2:	ff                   	(bad)  
    f0d3:	ff                   	(bad)  
    f0d4:	3b 01                	cmp    eax,DWORD PTR [rcx]
    f0d6:	00 00                	add    BYTE PTR [rax],al
    f0d8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f0db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f0e1:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    f0e5:	2d 01 0c 07 08       	sub    eax,0x8070c01
    f0ea:	00 00                	add    BYTE PTR [rax],al
    f0ec:	1c 00                	sbb    al,0x0
    f0ee:	00 00                	add    BYTE PTR [rax],al
    f0f0:	40 0c 00             	or     al,0x0
    f0f3:	00 c3                	add    bl,al
    f0f5:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    f0f6:	ff                   	(bad)  
    f0f7:	ff 64 00 00          	jmp    QWORD PTR [rax+rax*1+0x0]
    f0fb:	00 00                	add    BYTE PTR [rax],al
    f0fd:	45 0e                	rex.RB (bad) 
    f0ff:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f105:	02 5b 0c             	add    bl,BYTE PTR [rbx+0xc]
    f108:	07                   	(bad)  
    f109:	08 00                	or     BYTE PTR [rax],al
    f10b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f10e:	00 00                	add    BYTE PTR [rax],al
    f110:	60                   	(bad)  
    f111:	0c 00                	or     al,0x0
    f113:	00 07                	add    BYTE PTR [rdi],al
    f115:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    f116:	ff                   	(bad)  
    f117:	ff 53 00             	call   QWORD PTR [rbx+0x0]
    f11a:	00 00                	add    BYTE PTR [rax],al
    f11c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f11f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f125:	02 4a 0c             	add    cl,BYTE PTR [rdx+0xc]
    f128:	07                   	(bad)  
    f129:	08 00                	or     BYTE PTR [rax],al
    f12b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f12e:	00 00                	add    BYTE PTR [rax],al
    f130:	80 0c 00 00          	or     BYTE PTR [rax+rax*1],0x0
    f134:	3a a7 ff ff b1 00    	cmp    ah,BYTE PTR [rdi+0xb1ffff]
    f13a:	00 00                	add    BYTE PTR [rax],al
    f13c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f13f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f145:	02 a8 0c 07 08 00    	add    ch,BYTE PTR [rax+0x8070c]
    f14b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f14e:	00 00                	add    BYTE PTR [rax],al
    f150:	a0 0c 00 00 cb a7 ff 	movabs al,ds:0xcbffffa7cb00000c
    f157:	ff cb 
    f159:	00 00                	add    BYTE PTR [rax],al
    f15b:	00 00                	add    BYTE PTR [rax],al
    f15d:	45 0e                	rex.RB (bad) 
    f15f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f165:	02 c2                	add    al,dl
    f167:	0c 07                	or     al,0x7
    f169:	08 00                	or     BYTE PTR [rax],al
    f16b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f16e:	00 00                	add    BYTE PTR [rax],al
    f170:	c0 0c 00 00          	ror    BYTE PTR [rax+rax*1],0x0
    f174:	76 a8                	jbe    f11e <__GNU_EH_FRAME_HDR+0x103e>
    f176:	ff                   	(bad)  
    f177:	ff 55 00             	call   QWORD PTR [rbp+0x0]
    f17a:	00 00                	add    BYTE PTR [rax],al
    f17c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f17f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f185:	02 4c 0c 07          	add    cl,BYTE PTR [rsp+rcx*1+0x7]
    f189:	08 00                	or     BYTE PTR [rax],al
    f18b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f18e:	00 00                	add    BYTE PTR [rax],al
    f190:	e0 0c                	loopne f19e <__GNU_EH_FRAME_HDR+0x10be>
    f192:	00 00                	add    BYTE PTR [rax],al
    f194:	ab                   	stos   DWORD PTR es:[rdi],eax
    f195:	a8 ff                	test   al,0xff
    f197:	ff 30                	push   QWORD PTR [rax]
    f199:	00 00                	add    BYTE PTR [rax],al
    f19b:	00 00                	add    BYTE PTR [rax],al
    f19d:	45 0e                	rex.RB (bad) 
    f19f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f1a5:	67 0c 07             	addr32 or al,0x7
    f1a8:	08 00                	or     BYTE PTR [rax],al
    f1aa:	00 00                	add    BYTE PTR [rax],al
    f1ac:	1c 00                	sbb    al,0x0
    f1ae:	00 00                	add    BYTE PTR [rax],al
    f1b0:	00 0d 00 00 bb a8    	add    BYTE PTR [rip+0xffffffffa8bb0000],cl        # ffffffffa8bbf1b6 <_end+0xffffffffa8a83d76>
    f1b6:	ff                   	(bad)  
    f1b7:	ff 67 00             	jmp    QWORD PTR [rdi+0x0]
    f1ba:	00 00                	add    BYTE PTR [rax],al
    f1bc:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f1bf:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f1c5:	02 5e 0c             	add    bl,BYTE PTR [rsi+0xc]
    f1c8:	07                   	(bad)  
    f1c9:	08 00                	or     BYTE PTR [rax],al
    f1cb:	00 20                	add    BYTE PTR [rax],ah
    f1cd:	00 00                	add    BYTE PTR [rax],al
    f1cf:	00 20                	add    BYTE PTR [rax],ah
    f1d1:	0d 00 00 02 a9       	or     eax,0xa9020000
    f1d6:	ff                   	(bad)  
    f1d7:	ff 63 0f             	jmp    QWORD PTR [rbx+0xf]
    f1da:	00 00                	add    BYTE PTR [rax],al
    f1dc:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f1df:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f1e5:	03 5a 0f             	add    ebx,DWORD PTR [rdx+0xf]
    f1e8:	0c 07                	or     al,0x7
    f1ea:	08 00                	or     BYTE PTR [rax],al
    f1ec:	00 00                	add    BYTE PTR [rax],al
    f1ee:	00 00                	add    BYTE PTR [rax],al
    f1f0:	1c 00                	sbb    al,0x0
    f1f2:	00 00                	add    BYTE PTR [rax],al
    f1f4:	44 0d 00 00 41 b8    	rex.R or eax,0xb8410000
    f1fa:	ff                   	(bad)  
    f1fb:	ff 46 00             	inc    DWORD PTR [rsi+0x0]
    f1fe:	00 00                	add    BYTE PTR [rax],al
    f200:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f203:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f209:	7d 0c                	jge    f217 <__GNU_EH_FRAME_HDR+0x1137>
    f20b:	07                   	(bad)  
    f20c:	08 00                	or     BYTE PTR [rax],al
    f20e:	00 00                	add    BYTE PTR [rax],al
    f210:	24 00                	and    al,0x0
    f212:	00 00                	add    BYTE PTR [rax],al
    f214:	64 0d 00 00 67 b8    	fs or  eax,0xb8670000
    f21a:	ff                   	(bad)  
    f21b:	ff                   	(bad)  
    f21c:	3e 02 00             	add    al,BYTE PTR ds:[rax]
    f21f:	00 00                	add    BYTE PTR [rax],al
    f221:	45 0e                	rex.RB (bad) 
    f223:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f229:	4b 8f 03             	rex.WXB pop QWORD PTR [r11]
    f22c:	8e 04 8c             	mov    es,WORD PTR [rsp+rcx*4]
    f22f:	05 83 06 03 2a       	add    eax,0x2a030683
    f234:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    f237:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
    f23a:	00 00                	add    BYTE PTR [rax],al
    f23c:	8c 0d 00 00 7d ba    	mov    WORD PTR [rip+0xffffffffba7d0000],cs        # ffffffffba7df242 <_end+0xffffffffba6a3e02>
    f242:	ff                   	(bad)  
    f243:	ff ab 01 00 00 00    	jmp    FWORD PTR [rbx+0x1]
    f249:	45 0e                	rex.RB (bad) 
    f24b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f251:	03 a2 01 0c 07 08    	add    esp,DWORD PTR [rdx+0x8070c01]
    f257:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f25a:	00 00                	add    BYTE PTR [rax],al
    f25c:	ac                   	lods   al,BYTE PTR ds:[rsi]
    f25d:	0d 00 00 08 bc       	or     eax,0xbc080000
    f262:	ff                   	(bad)  
    f263:	ff 12                	call   QWORD PTR [rdx]
    f265:	01 00                	add    DWORD PTR [rax],eax
    f267:	00 00                	add    BYTE PTR [rax],al
    f269:	45 0e                	rex.RB (bad) 
    f26b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f271:	03 09                	add    ecx,DWORD PTR [rcx]
    f273:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f276:	08 00                	or     BYTE PTR [rax],al
    f278:	24 00                	and    al,0x0
    f27a:	00 00                	add    BYTE PTR [rax],al
    f27c:	cc                   	int3   
    f27d:	0d 00 00 fa bc       	or     eax,0xbcfa0000
    f282:	ff                   	(bad)  
    f283:	ff                   	(bad)  
    f284:	bd 00 00 00 00       	mov    ebp,0x0
    f289:	45 0e                	rex.RB (bad) 
    f28b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f291:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    f295:	af                   	scas   eax,DWORD PTR es:[rdi]
    f296:	0c 07                	or     al,0x7
    f298:	08 00                	or     BYTE PTR [rax],al
    f29a:	00 00                	add    BYTE PTR [rax],al
    f29c:	00 00                	add    BYTE PTR [rax],al
    f29e:	00 00                	add    BYTE PTR [rax],al
    f2a0:	24 00                	and    al,0x0
    f2a2:	00 00                	add    BYTE PTR [rax],al
    f2a4:	f4                   	hlt    
    f2a5:	0d 00 00 8f bd       	or     eax,0xbd8f0000
    f2aa:	ff                   	(bad)  
    f2ab:	ff 9b 01 00 00 00    	call   FWORD PTR [rbx+0x1]
    f2b1:	45 0e                	rex.RB (bad) 
    f2b3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f2b9:	47 8c 03             	rex.RXB mov WORD PTR [r11],es
    f2bc:	83 04 03 8b          	add    DWORD PTR [rbx+rax*1],0xffffff8b
    f2c0:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f2c3:	08 00                	or     BYTE PTR [rax],al
    f2c5:	00 00                	add    BYTE PTR [rax],al
    f2c7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f2ca:	00 00                	add    BYTE PTR [rax],al
    f2cc:	1c 0e                	sbb    al,0xe
    f2ce:	00 00                	add    BYTE PTR [rax],al
    f2d0:	02 bf ff ff a5 00    	add    bh,BYTE PTR [rdi+0xa5ffff]
    f2d6:	00 00                	add    BYTE PTR [rax],al
    f2d8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f2db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f2e1:	02 9c 0c 07 08 00 00 	add    bl,BYTE PTR [rsp+rcx*1+0x807]
    f2e8:	1c 00                	sbb    al,0x0
    f2ea:	00 00                	add    BYTE PTR [rax],al
    f2ec:	3c 0e                	cmp    al,0xe
    f2ee:	00 00                	add    BYTE PTR [rax],al
    f2f0:	87 bf ff ff 43 01    	xchg   DWORD PTR [rdi+0x143ffff],edi
    f2f6:	00 00                	add    BYTE PTR [rax],al
    f2f8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f2fb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f301:	03 3a                	add    edi,DWORD PTR [rdx]
    f303:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f306:	08 00                	or     BYTE PTR [rax],al
    f308:	1c 00                	sbb    al,0x0
    f30a:	00 00                	add    BYTE PTR [rax],al
    f30c:	5c                   	pop    rsp
    f30d:	0e                   	(bad)  
    f30e:	00 00                	add    BYTE PTR [rax],al
    f310:	aa                   	stos   BYTE PTR es:[rdi],al
    f311:	c0 ff ff             	sar    bh,0xff
    f314:	f3 00 00             	repz add BYTE PTR [rax],al
    f317:	00 00                	add    BYTE PTR [rax],al
    f319:	45 0e                	rex.RB (bad) 
    f31b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f321:	02 ea                	add    ch,dl
    f323:	0c 07                	or     al,0x7
    f325:	08 00                	or     BYTE PTR [rax],al
    f327:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f32a:	00 00                	add    BYTE PTR [rax],al
    f32c:	7c 0e                	jl     f33c <__GNU_EH_FRAME_HDR+0x125c>
    f32e:	00 00                	add    BYTE PTR [rax],al
    f330:	7d c1                	jge    f2f3 <__GNU_EH_FRAME_HDR+0x1213>
    f332:	ff                   	(bad)  
    f333:	ff 70 00             	push   QWORD PTR [rax+0x0]
    f336:	00 00                	add    BYTE PTR [rax],al
    f338:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f33b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f341:	02 67 0c             	add    ah,BYTE PTR [rdi+0xc]
    f344:	07                   	(bad)  
    f345:	08 00                	or     BYTE PTR [rax],al
    f347:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f34a:	00 00                	add    BYTE PTR [rax],al
    f34c:	9c                   	pushf  
    f34d:	0e                   	(bad)  
    f34e:	00 00                	add    BYTE PTR [rax],al
    f350:	cd c1                	int    0xc1
    f352:	ff                   	(bad)  
    f353:	ff a5 02 00 00 00    	jmp    QWORD PTR [rbp+0x2]
    f359:	45 0e                	rex.RB (bad) 
    f35b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f361:	4a 8c 03             	rex.WX mov WORD PTR [rbx],es
    f364:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
    f368:	1c 00                	sbb    al,0x0
    f36a:	00 00                	add    BYTE PTR [rax],al
    f36c:	bc 0e 00 00 52       	mov    esp,0x5200000e
    f371:	c4                   	(bad)  
    f372:	ff                   	(bad)  
    f373:	ff 6a 00             	jmp    FWORD PTR [rdx+0x0]
    f376:	00 00                	add    BYTE PTR [rax],al
    f378:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f37b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f381:	02 61 0c             	add    ah,BYTE PTR [rcx+0xc]
    f384:	07                   	(bad)  
    f385:	08 00                	or     BYTE PTR [rax],al
    f387:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f38a:	00 00                	add    BYTE PTR [rax],al
    f38c:	dc 0e                	fmul   QWORD PTR [rsi]
    f38e:	00 00                	add    BYTE PTR [rax],al
    f390:	9c                   	pushf  
    f391:	c4                   	(bad)  
    f392:	ff                   	(bad)  
    f393:	ff 6e 00             	jmp    FWORD PTR [rsi+0x0]
    f396:	00 00                	add    BYTE PTR [rax],al
    f398:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f39b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f3a1:	02 65 0c             	add    ah,BYTE PTR [rbp+0xc]
    f3a4:	07                   	(bad)  
    f3a5:	08 00                	or     BYTE PTR [rax],al
    f3a7:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    f3aa:	00 00                	add    BYTE PTR [rax],al
    f3ac:	fc                   	cld    
    f3ad:	0e                   	(bad)  
    f3ae:	00 00                	add    BYTE PTR [rax],al
    f3b0:	ea                   	(bad)  
    f3b1:	c4                   	(bad)  
    f3b2:	ff                   	(bad)  
    f3b3:	ff 8e 01 00 00 00    	dec    DWORD PTR [rsi+0x1]
    f3b9:	45 0e                	rex.RB (bad) 
    f3bb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f3c1:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    f3c5:	80 01 0c             	add    BYTE PTR [rcx],0xc
    f3c8:	07                   	(bad)  
    f3c9:	08 00                	or     BYTE PTR [rax],al
    f3cb:	00 00                	add    BYTE PTR [rax],al
    f3cd:	00 00                	add    BYTE PTR [rax],al
    f3cf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f3d2:	00 00                	add    BYTE PTR [rax],al
    f3d4:	24 0f                	and    al,0xf
    f3d6:	00 00                	add    BYTE PTR [rax],al
    f3d8:	50                   	push   rax
    f3d9:	c6                   	(bad)  
    f3da:	ff                   	(bad)  
    f3db:	ff 69 02             	jmp    FWORD PTR [rcx+0x2]
    f3de:	00 00                	add    BYTE PTR [rax],al
    f3e0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f3e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f3e9:	03 60 02             	add    esp,DWORD PTR [rax+0x2]
    f3ec:	0c 07                	or     al,0x7
    f3ee:	08 00                	or     BYTE PTR [rax],al
    f3f0:	44 00 00             	add    BYTE PTR [rax],r8b
    f3f3:	00 44 0f 00          	add    BYTE PTR [rdi+rcx*1+0x0],al
    f3f7:	00 a8 c8 ff ff 65    	add    BYTE PTR [rax+0x65ffffc8],ch
    f3fd:	00 00                	add    BYTE PTR [rax],al
    f3ff:	00 00                	add    BYTE PTR [rax],al
    f401:	46 0e                	rex.RX (bad) 
    f403:	10 8f 02 49 0e 18    	adc    BYTE PTR [rdi+0x180e4902],cl
    f409:	8e 03                	mov    es,WORD PTR [rbx]
    f40b:	45 0e                	rex.RB (bad) 
    f40d:	20 8d 04 45 0e 28    	and    BYTE PTR [rbp+0x280e4504],cl
    f413:	8c 05 44 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e44],es        # ffffffff8631025d <_end+0xffffffff861d4e1d>
    f419:	06                   	(bad)  
    f41a:	48 0e                	rex.W (bad) 
    f41c:	38 83 07 47 0e 40    	cmp    BYTE PTR [rbx+0x400e4707],al
    f422:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    f423:	0e                   	(bad)  
    f424:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
    f427:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
    f42a:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
    f42d:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
    f430:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    f433:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    f436:	08 00                	or     BYTE PTR [rax],al
    f438:	10 00                	adc    BYTE PTR [rax],al
    f43a:	00 00                	add    BYTE PTR [rax],al
    f43c:	8c 0f                	mov    WORD PTR [rdi],cs
    f43e:	00 00                	add    BYTE PTR [rax],al
    f440:	d0 c8                	ror    al,1
    f442:	ff                   	(bad)  
    f443:	ff 05 00 00 00 00    	inc    DWORD PTR [rip+0x0]        # f449 <__GNU_EH_FRAME_HDR+0x1369>
    f449:	00 00                	add    BYTE PTR [rax],al
	...

000000000000f44c <__FRAME_END__>:
    f44c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .tbss:

0000000000010b58 <buffer.4704+0x10ad8>:
	...

Disassembly of section .init_array:

0000000000010b58 <__frame_dummy_init_array_entry>:
   10b58:	c0 29 00             	shr    BYTE PTR [rcx],0x0
   10b5b:	00 00                	add    BYTE PTR [rax],al
   10b5d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000010b60 <__do_global_dtors_aux_fini_array_entry>:
   10b60:	80 29 00             	sub    BYTE PTR [rcx],0x0
   10b63:	00 00                	add    BYTE PTR [rax],al
   10b65:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000010b68 <_DYNAMIC>:
   10b68:	01 00                	add    DWORD PTR [rax],eax
   10b6a:	00 00                	add    BYTE PTR [rax],al
   10b6c:	00 00                	add    BYTE PTR [rax],al
   10b6e:	00 00                	add    BYTE PTR [rax],al
   10b70:	01 00                	add    DWORD PTR [rax],eax
   10b72:	00 00                	add    BYTE PTR [rax],al
   10b74:	00 00                	add    BYTE PTR [rax],al
   10b76:	00 00                	add    BYTE PTR [rax],al
   10b78:	01 00                	add    DWORD PTR [rax],eax
   10b7a:	00 00                	add    BYTE PTR [rax],al
   10b7c:	00 00                	add    BYTE PTR [rax],al
   10b7e:	00 00                	add    BYTE PTR [rax],al
   10b80:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   10b81:	00 00                	add    BYTE PTR [rax],al
   10b83:	00 00                	add    BYTE PTR [rax],al
   10b85:	00 00                	add    BYTE PTR [rax],al
   10b87:	00 01                	add    BYTE PTR [rcx],al
   10b89:	00 00                	add    BYTE PTR [rax],al
   10b8b:	00 00                	add    BYTE PTR [rax],al
   10b8d:	00 00                	add    BYTE PTR [rax],al
   10b8f:	00 ab 00 00 00 00    	add    BYTE PTR [rbx+0x0],ch
   10b95:	00 00                	add    BYTE PTR [rax],al
   10b97:	00 01                	add    BYTE PTR [rcx],al
   10b99:	00 00                	add    BYTE PTR [rax],al
   10b9b:	00 00                	add    BYTE PTR [rax],al
   10b9d:	00 00                	add    BYTE PTR [rax],al
   10b9f:	00 ff                	add    bh,bh
   10ba1:	00 00                	add    BYTE PTR [rax],al
   10ba3:	00 00                	add    BYTE PTR [rax],al
   10ba5:	00 00                	add    BYTE PTR [rax],al
   10ba7:	00 01                	add    BYTE PTR [rcx],al
   10ba9:	00 00                	add    BYTE PTR [rax],al
   10bab:	00 00                	add    BYTE PTR [rax],al
   10bad:	00 00                	add    BYTE PTR [rax],al
   10baf:	00 64 01 00          	add    BYTE PTR [rcx+rax*1+0x0],ah
   10bb3:	00 00                	add    BYTE PTR [rax],al
   10bb5:	00 00                	add    BYTE PTR [rax],al
   10bb7:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
   10bba:	00 00                	add    BYTE PTR [rax],al
   10bbc:	00 00                	add    BYTE PTR [rax],al
   10bbe:	00 00                	add    BYTE PTR [rax],al
   10bc0:	00 20                	add    BYTE PTR [rax],ah
   10bc2:	00 00                	add    BYTE PTR [rax],al
   10bc4:	00 00                	add    BYTE PTR [rax],al
   10bc6:	00 00                	add    BYTE PTR [rax],al
   10bc8:	0d 00 00 00 00       	or     eax,0x0
   10bcd:	00 00                	add    BYTE PTR [rax],al
   10bcf:	00 18                	add    BYTE PTR [rax],bl
   10bd1:	bd 00 00 00 00       	mov    ebp,0x0
   10bd6:	00 00                	add    BYTE PTR [rax],al
   10bd8:	19 00                	sbb    DWORD PTR [rax],eax
   10bda:	00 00                	add    BYTE PTR [rax],al
   10bdc:	00 00                	add    BYTE PTR [rax],al
   10bde:	00 00                	add    BYTE PTR [rax],al
   10be0:	58                   	pop    rax
   10be1:	0b 01                	or     eax,DWORD PTR [rcx]
   10be3:	00 00                	add    BYTE PTR [rax],al
   10be5:	00 00                	add    BYTE PTR [rax],al
   10be7:	00 1b                	add    BYTE PTR [rbx],bl
   10be9:	00 00                	add    BYTE PTR [rax],al
   10beb:	00 00                	add    BYTE PTR [rax],al
   10bed:	00 00                	add    BYTE PTR [rax],al
   10bef:	00 08                	add    BYTE PTR [rax],cl
   10bf1:	00 00                	add    BYTE PTR [rax],al
   10bf3:	00 00                	add    BYTE PTR [rax],al
   10bf5:	00 00                	add    BYTE PTR [rax],al
   10bf7:	00 1a                	add    BYTE PTR [rdx],bl
   10bf9:	00 00                	add    BYTE PTR [rax],al
   10bfb:	00 00                	add    BYTE PTR [rax],al
   10bfd:	00 00                	add    BYTE PTR [rax],al
   10bff:	00 60 0b             	add    BYTE PTR [rax+0xb],ah
   10c02:	01 00                	add    DWORD PTR [rax],eax
   10c04:	00 00                	add    BYTE PTR [rax],al
   10c06:	00 00                	add    BYTE PTR [rax],al
   10c08:	1c 00                	sbb    al,0x0
   10c0a:	00 00                	add    BYTE PTR [rax],al
   10c0c:	00 00                	add    BYTE PTR [rax],al
   10c0e:	00 00                	add    BYTE PTR [rax],al
   10c10:	08 00                	or     BYTE PTR [rax],al
   10c12:	00 00                	add    BYTE PTR [rax],al
   10c14:	00 00                	add    BYTE PTR [rax],al
   10c16:	00 00                	add    BYTE PTR [rax],al
   10c18:	f5                   	cmc    
   10c19:	fe                   	(bad)  
   10c1a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10c1d:	00 00                	add    BYTE PTR [rax],al
   10c1f:	00 d8                	add    al,bl
   10c21:	03 00                	add    eax,DWORD PTR [rax]
   10c23:	00 00                	add    BYTE PTR [rax],al
   10c25:	00 00                	add    BYTE PTR [rax],al
   10c27:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 10c2d <_DYNAMIC+0xc5>
   10c2d:	00 00                	add    BYTE PTR [rax],al
   10c2f:	00 40 0b             	add    BYTE PTR [rax+0xb],al
   10c32:	00 00                	add    BYTE PTR [rax],al
   10c34:	00 00                	add    BYTE PTR [rax],al
   10c36:	00 00                	add    BYTE PTR [rax],al
   10c38:	06                   	(bad)  
   10c39:	00 00                	add    BYTE PTR [rax],al
   10c3b:	00 00                	add    BYTE PTR [rax],al
   10c3d:	00 00                	add    BYTE PTR [rax],al
   10c3f:	00 08                	add    BYTE PTR [rax],cl
   10c41:	04 00                	add    al,0x0
   10c43:	00 00                	add    BYTE PTR [rax],al
   10c45:	00 00                	add    BYTE PTR [rax],al
   10c47:	00 0a                	add    BYTE PTR [rdx],cl
   10c49:	00 00                	add    BYTE PTR [rax],al
   10c4b:	00 00                	add    BYTE PTR [rax],al
   10c4d:	00 00                	add    BYTE PTR [rax],al
   10c4f:	00 25 03 00 00 00    	add    BYTE PTR [rip+0x3],ah        # 10c58 <_DYNAMIC+0xf0>
   10c55:	00 00                	add    BYTE PTR [rax],al
   10c57:	00 0b                	add    BYTE PTR [rbx],cl
   10c59:	00 00                	add    BYTE PTR [rax],al
   10c5b:	00 00                	add    BYTE PTR [rax],al
   10c5d:	00 00                	add    BYTE PTR [rax],al
   10c5f:	00 18                	add    BYTE PTR [rax],bl
   10c61:	00 00                	add    BYTE PTR [rax],al
   10c63:	00 00                	add    BYTE PTR [rax],al
   10c65:	00 00                	add    BYTE PTR [rax],al
   10c67:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 10c6d <_DYNAMIC+0x105>
	...
   10c75:	00 00                	add    BYTE PTR [rax],al
   10c77:	00 03                	add    BYTE PTR [rbx],al
   10c79:	00 00                	add    BYTE PTR [rax],al
   10c7b:	00 00                	add    BYTE PTR [rax],al
   10c7d:	00 00                	add    BYTE PTR [rax],al
   10c7f:	00 98 0d 01 00 00    	add    BYTE PTR [rax+0x10d],bl
   10c85:	00 00                	add    BYTE PTR [rax],al
   10c87:	00 02                	add    BYTE PTR [rdx],al
   10c89:	00 00                	add    BYTE PTR [rax],al
   10c8b:	00 00                	add    BYTE PTR [rax],al
   10c8d:	00 00                	add    BYTE PTR [rax],al
   10c8f:	00 78 06             	add    BYTE PTR [rax+0x6],bh
   10c92:	00 00                	add    BYTE PTR [rax],al
   10c94:	00 00                	add    BYTE PTR [rax],al
   10c96:	00 00                	add    BYTE PTR [rax],al
   10c98:	14 00                	adc    al,0x0
   10c9a:	00 00                	add    BYTE PTR [rax],al
   10c9c:	00 00                	add    BYTE PTR [rax],al
   10c9e:	00 00                	add    BYTE PTR [rax],al
   10ca0:	07                   	(bad)  
   10ca1:	00 00                	add    BYTE PTR [rax],al
   10ca3:	00 00                	add    BYTE PTR [rax],al
   10ca5:	00 00                	add    BYTE PTR [rax],al
   10ca7:	00 17                	add    BYTE PTR [rdi],dl
   10ca9:	00 00                	add    BYTE PTR [rax],al
   10cab:	00 00                	add    BYTE PTR [rax],al
   10cad:	00 00                	add    BYTE PTR [rax],al
   10caf:	00 a0 10 00 00 00    	add    BYTE PTR [rax+0x10],ah
   10cb5:	00 00                	add    BYTE PTR [rax],al
   10cb7:	00 07                	add    BYTE PTR [rdi],al
   10cb9:	00 00                	add    BYTE PTR [rax],al
   10cbb:	00 00                	add    BYTE PTR [rax],al
   10cbd:	00 00                	add    BYTE PTR [rax],al
   10cbf:	00 80 0f 00 00 00    	add    BYTE PTR [rax+0xf],al
   10cc5:	00 00                	add    BYTE PTR [rax],al
   10cc7:	00 08                	add    BYTE PTR [rax],cl
   10cc9:	00 00                	add    BYTE PTR [rax],al
   10ccb:	00 00                	add    BYTE PTR [rax],al
   10ccd:	00 00                	add    BYTE PTR [rax],al
   10ccf:	00 20                	add    BYTE PTR [rax],ah
   10cd1:	01 00                	add    DWORD PTR [rax],eax
   10cd3:	00 00                	add    BYTE PTR [rax],al
   10cd5:	00 00                	add    BYTE PTR [rax],al
   10cd7:	00 09                	add    BYTE PTR [rcx],cl
   10cd9:	00 00                	add    BYTE PTR [rax],al
   10cdb:	00 00                	add    BYTE PTR [rax],al
   10cdd:	00 00                	add    BYTE PTR [rax],al
   10cdf:	00 18                	add    BYTE PTR [rax],bl
   10ce1:	00 00                	add    BYTE PTR [rax],al
   10ce3:	00 00                	add    BYTE PTR [rax],al
   10ce5:	00 00                	add    BYTE PTR [rax],al
   10ce7:	00 1e                	add    BYTE PTR [rsi],bl
   10ce9:	00 00                	add    BYTE PTR [rax],al
   10ceb:	00 00                	add    BYTE PTR [rax],al
   10ced:	00 00                	add    BYTE PTR [rax],al
   10cef:	00 08                	add    BYTE PTR [rax],cl
   10cf1:	00 00                	add    BYTE PTR [rax],al
   10cf3:	00 00                	add    BYTE PTR [rax],al
   10cf5:	00 00                	add    BYTE PTR [rax],al
   10cf7:	00 fb                	add    bl,bh
   10cf9:	ff                   	(bad)  
   10cfa:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10cfd:	00 00                	add    BYTE PTR [rax],al
   10cff:	00 01                	add    BYTE PTR [rcx],al
   10d01:	00 00                	add    BYTE PTR [rax],al
   10d03:	08 00                	or     BYTE PTR [rax],al
   10d05:	00 00                	add    BYTE PTR [rax],al
   10d07:	00 fe                	add    dh,bh
   10d09:	ff                   	(bad)  
   10d0a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d0d:	00 00                	add    BYTE PTR [rax],al
   10d0f:	00 00                	add    BYTE PTR [rax],al
   10d11:	0f 00 00             	sldt   WORD PTR [rax]
   10d14:	00 00                	add    BYTE PTR [rax],al
   10d16:	00 00                	add    BYTE PTR [rax],al
   10d18:	ff                   	(bad)  
   10d19:	ff                   	(bad)  
   10d1a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d1d:	00 00                	add    BYTE PTR [rax],al
   10d1f:	00 03                	add    BYTE PTR [rbx],al
   10d21:	00 00                	add    BYTE PTR [rax],al
   10d23:	00 00                	add    BYTE PTR [rax],al
   10d25:	00 00                	add    BYTE PTR [rax],al
   10d27:	00 f0                	add    al,dh
   10d29:	ff                   	(bad)  
   10d2a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d2d:	00 00                	add    BYTE PTR [rax],al
   10d2f:	00 66 0e             	add    BYTE PTR [rsi+0xe],ah
   10d32:	00 00                	add    BYTE PTR [rax],al
   10d34:	00 00                	add    BYTE PTR [rax],al
   10d36:	00 00                	add    BYTE PTR [rax],al
   10d38:	f9                   	stc    
   10d39:	ff                   	(bad)  
   10d3a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d3d:	00 00                	add    BYTE PTR [rax],al
   10d3f:	00 06                	add    BYTE PTR [rsi],al
	...

Disassembly of section .got:

0000000000010d98 <_GLOBAL_OFFSET_TABLE_>:
   10d98:	68 0b 01 00 00       	push   0x10b
	...
   10dad:	00 00                	add    BYTE PTR [rax],al
   10daf:	00 30                	add    BYTE PTR [rax],dh
   10db1:	20 00                	and    BYTE PTR [rax],al
   10db3:	00 00                	add    BYTE PTR [rax],al
   10db5:	00 00                	add    BYTE PTR [rax],al
   10db7:	00 40 20             	add    BYTE PTR [rax+0x20],al
   10dba:	00 00                	add    BYTE PTR [rax],al
   10dbc:	00 00                	add    BYTE PTR [rax],al
   10dbe:	00 00                	add    BYTE PTR [rax],al
   10dc0:	50                   	push   rax
   10dc1:	20 00                	and    BYTE PTR [rax],al
   10dc3:	00 00                	add    BYTE PTR [rax],al
   10dc5:	00 00                	add    BYTE PTR [rax],al
   10dc7:	00 60 20             	add    BYTE PTR [rax+0x20],ah
   10dca:	00 00                	add    BYTE PTR [rax],al
   10dcc:	00 00                	add    BYTE PTR [rax],al
   10dce:	00 00                	add    BYTE PTR [rax],al
   10dd0:	70 20                	jo     10df2 <_GLOBAL_OFFSET_TABLE_+0x5a>
   10dd2:	00 00                	add    BYTE PTR [rax],al
   10dd4:	00 00                	add    BYTE PTR [rax],al
   10dd6:	00 00                	add    BYTE PTR [rax],al
   10dd8:	80 20 00             	and    BYTE PTR [rax],0x0
   10ddb:	00 00                	add    BYTE PTR [rax],al
   10ddd:	00 00                	add    BYTE PTR [rax],al
   10ddf:	00 90 20 00 00 00    	add    BYTE PTR [rax+0x20],dl
   10de5:	00 00                	add    BYTE PTR [rax],al
   10de7:	00 a0 20 00 00 00    	add    BYTE PTR [rax+0x20],ah
   10ded:	00 00                	add    BYTE PTR [rax],al
   10def:	00 b0 20 00 00 00    	add    BYTE PTR [rax+0x20],dh
   10df5:	00 00                	add    BYTE PTR [rax],al
   10df7:	00 c0                	add    al,al
   10df9:	20 00                	and    BYTE PTR [rax],al
   10dfb:	00 00                	add    BYTE PTR [rax],al
   10dfd:	00 00                	add    BYTE PTR [rax],al
   10dff:	00 d0                	add    al,dl
   10e01:	20 00                	and    BYTE PTR [rax],al
   10e03:	00 00                	add    BYTE PTR [rax],al
   10e05:	00 00                	add    BYTE PTR [rax],al
   10e07:	00 e0                	add    al,ah
   10e09:	20 00                	and    BYTE PTR [rax],al
   10e0b:	00 00                	add    BYTE PTR [rax],al
   10e0d:	00 00                	add    BYTE PTR [rax],al
   10e0f:	00 f0                	add    al,dh
   10e11:	20 00                	and    BYTE PTR [rax],al
   10e13:	00 00                	add    BYTE PTR [rax],al
   10e15:	00 00                	add    BYTE PTR [rax],al
   10e17:	00 00                	add    BYTE PTR [rax],al
   10e19:	21 00                	and    DWORD PTR [rax],eax
   10e1b:	00 00                	add    BYTE PTR [rax],al
   10e1d:	00 00                	add    BYTE PTR [rax],al
   10e1f:	00 10                	add    BYTE PTR [rax],dl
   10e21:	21 00                	and    DWORD PTR [rax],eax
   10e23:	00 00                	add    BYTE PTR [rax],al
   10e25:	00 00                	add    BYTE PTR [rax],al
   10e27:	00 20                	add    BYTE PTR [rax],ah
   10e29:	21 00                	and    DWORD PTR [rax],eax
   10e2b:	00 00                	add    BYTE PTR [rax],al
   10e2d:	00 00                	add    BYTE PTR [rax],al
   10e2f:	00 30                	add    BYTE PTR [rax],dh
   10e31:	21 00                	and    DWORD PTR [rax],eax
   10e33:	00 00                	add    BYTE PTR [rax],al
   10e35:	00 00                	add    BYTE PTR [rax],al
   10e37:	00 40 21             	add    BYTE PTR [rax+0x21],al
   10e3a:	00 00                	add    BYTE PTR [rax],al
   10e3c:	00 00                	add    BYTE PTR [rax],al
   10e3e:	00 00                	add    BYTE PTR [rax],al
   10e40:	50                   	push   rax
   10e41:	21 00                	and    DWORD PTR [rax],eax
   10e43:	00 00                	add    BYTE PTR [rax],al
   10e45:	00 00                	add    BYTE PTR [rax],al
   10e47:	00 60 21             	add    BYTE PTR [rax+0x21],ah
   10e4a:	00 00                	add    BYTE PTR [rax],al
   10e4c:	00 00                	add    BYTE PTR [rax],al
   10e4e:	00 00                	add    BYTE PTR [rax],al
   10e50:	70 21                	jo     10e73 <_GLOBAL_OFFSET_TABLE_+0xdb>
   10e52:	00 00                	add    BYTE PTR [rax],al
   10e54:	00 00                	add    BYTE PTR [rax],al
   10e56:	00 00                	add    BYTE PTR [rax],al
   10e58:	80 21 00             	and    BYTE PTR [rcx],0x0
   10e5b:	00 00                	add    BYTE PTR [rax],al
   10e5d:	00 00                	add    BYTE PTR [rax],al
   10e5f:	00 90 21 00 00 00    	add    BYTE PTR [rax+0x21],dl
   10e65:	00 00                	add    BYTE PTR [rax],al
   10e67:	00 a0 21 00 00 00    	add    BYTE PTR [rax+0x21],ah
   10e6d:	00 00                	add    BYTE PTR [rax],al
   10e6f:	00 b0 21 00 00 00    	add    BYTE PTR [rax+0x21],dh
   10e75:	00 00                	add    BYTE PTR [rax],al
   10e77:	00 c0                	add    al,al
   10e79:	21 00                	and    DWORD PTR [rax],eax
   10e7b:	00 00                	add    BYTE PTR [rax],al
   10e7d:	00 00                	add    BYTE PTR [rax],al
   10e7f:	00 d0                	add    al,dl
   10e81:	21 00                	and    DWORD PTR [rax],eax
   10e83:	00 00                	add    BYTE PTR [rax],al
   10e85:	00 00                	add    BYTE PTR [rax],al
   10e87:	00 e0                	add    al,ah
   10e89:	21 00                	and    DWORD PTR [rax],eax
   10e8b:	00 00                	add    BYTE PTR [rax],al
   10e8d:	00 00                	add    BYTE PTR [rax],al
   10e8f:	00 f0                	add    al,dh
   10e91:	21 00                	and    DWORD PTR [rax],eax
   10e93:	00 00                	add    BYTE PTR [rax],al
   10e95:	00 00                	add    BYTE PTR [rax],al
   10e97:	00 00                	add    BYTE PTR [rax],al
   10e99:	22 00                	and    al,BYTE PTR [rax]
   10e9b:	00 00                	add    BYTE PTR [rax],al
   10e9d:	00 00                	add    BYTE PTR [rax],al
   10e9f:	00 10                	add    BYTE PTR [rax],dl
   10ea1:	22 00                	and    al,BYTE PTR [rax]
   10ea3:	00 00                	add    BYTE PTR [rax],al
   10ea5:	00 00                	add    BYTE PTR [rax],al
   10ea7:	00 20                	add    BYTE PTR [rax],ah
   10ea9:	22 00                	and    al,BYTE PTR [rax]
   10eab:	00 00                	add    BYTE PTR [rax],al
   10ead:	00 00                	add    BYTE PTR [rax],al
   10eaf:	00 30                	add    BYTE PTR [rax],dh
   10eb1:	22 00                	and    al,BYTE PTR [rax]
   10eb3:	00 00                	add    BYTE PTR [rax],al
   10eb5:	00 00                	add    BYTE PTR [rax],al
   10eb7:	00 40 22             	add    BYTE PTR [rax+0x22],al
   10eba:	00 00                	add    BYTE PTR [rax],al
   10ebc:	00 00                	add    BYTE PTR [rax],al
   10ebe:	00 00                	add    BYTE PTR [rax],al
   10ec0:	50                   	push   rax
   10ec1:	22 00                	and    al,BYTE PTR [rax]
   10ec3:	00 00                	add    BYTE PTR [rax],al
   10ec5:	00 00                	add    BYTE PTR [rax],al
   10ec7:	00 60 22             	add    BYTE PTR [rax+0x22],ah
   10eca:	00 00                	add    BYTE PTR [rax],al
   10ecc:	00 00                	add    BYTE PTR [rax],al
   10ece:	00 00                	add    BYTE PTR [rax],al
   10ed0:	70 22                	jo     10ef4 <_GLOBAL_OFFSET_TABLE_+0x15c>
   10ed2:	00 00                	add    BYTE PTR [rax],al
   10ed4:	00 00                	add    BYTE PTR [rax],al
   10ed6:	00 00                	add    BYTE PTR [rax],al
   10ed8:	80 22 00             	and    BYTE PTR [rdx],0x0
   10edb:	00 00                	add    BYTE PTR [rax],al
   10edd:	00 00                	add    BYTE PTR [rax],al
   10edf:	00 90 22 00 00 00    	add    BYTE PTR [rax+0x22],dl
   10ee5:	00 00                	add    BYTE PTR [rax],al
   10ee7:	00 a0 22 00 00 00    	add    BYTE PTR [rax+0x22],ah
   10eed:	00 00                	add    BYTE PTR [rax],al
   10eef:	00 b0 22 00 00 00    	add    BYTE PTR [rax+0x22],dh
   10ef5:	00 00                	add    BYTE PTR [rax],al
   10ef7:	00 c0                	add    al,al
   10ef9:	22 00                	and    al,BYTE PTR [rax]
   10efb:	00 00                	add    BYTE PTR [rax],al
   10efd:	00 00                	add    BYTE PTR [rax],al
   10eff:	00 d0                	add    al,dl
   10f01:	22 00                	and    al,BYTE PTR [rax]
   10f03:	00 00                	add    BYTE PTR [rax],al
   10f05:	00 00                	add    BYTE PTR [rax],al
   10f07:	00 e0                	add    al,ah
   10f09:	22 00                	and    al,BYTE PTR [rax]
   10f0b:	00 00                	add    BYTE PTR [rax],al
   10f0d:	00 00                	add    BYTE PTR [rax],al
   10f0f:	00 f0                	add    al,dh
   10f11:	22 00                	and    al,BYTE PTR [rax]
   10f13:	00 00                	add    BYTE PTR [rax],al
   10f15:	00 00                	add    BYTE PTR [rax],al
   10f17:	00 00                	add    BYTE PTR [rax],al
   10f19:	23 00                	and    eax,DWORD PTR [rax]
   10f1b:	00 00                	add    BYTE PTR [rax],al
   10f1d:	00 00                	add    BYTE PTR [rax],al
   10f1f:	00 10                	add    BYTE PTR [rax],dl
   10f21:	23 00                	and    eax,DWORD PTR [rax]
   10f23:	00 00                	add    BYTE PTR [rax],al
   10f25:	00 00                	add    BYTE PTR [rax],al
   10f27:	00 20                	add    BYTE PTR [rax],ah
   10f29:	23 00                	and    eax,DWORD PTR [rax]
   10f2b:	00 00                	add    BYTE PTR [rax],al
   10f2d:	00 00                	add    BYTE PTR [rax],al
   10f2f:	00 30                	add    BYTE PTR [rax],dh
   10f31:	23 00                	and    eax,DWORD PTR [rax]
   10f33:	00 00                	add    BYTE PTR [rax],al
   10f35:	00 00                	add    BYTE PTR [rax],al
   10f37:	00 40 23             	add    BYTE PTR [rax+0x23],al
   10f3a:	00 00                	add    BYTE PTR [rax],al
   10f3c:	00 00                	add    BYTE PTR [rax],al
   10f3e:	00 00                	add    BYTE PTR [rax],al
   10f40:	50                   	push   rax
   10f41:	23 00                	and    eax,DWORD PTR [rax]
   10f43:	00 00                	add    BYTE PTR [rax],al
   10f45:	00 00                	add    BYTE PTR [rax],al
   10f47:	00 60 23             	add    BYTE PTR [rax+0x23],ah
   10f4a:	00 00                	add    BYTE PTR [rax],al
   10f4c:	00 00                	add    BYTE PTR [rax],al
   10f4e:	00 00                	add    BYTE PTR [rax],al
   10f50:	70 23                	jo     10f75 <_GLOBAL_OFFSET_TABLE_+0x1dd>
   10f52:	00 00                	add    BYTE PTR [rax],al
   10f54:	00 00                	add    BYTE PTR [rax],al
   10f56:	00 00                	add    BYTE PTR [rax],al
   10f58:	80 23 00             	and    BYTE PTR [rbx],0x0
   10f5b:	00 00                	add    BYTE PTR [rax],al
   10f5d:	00 00                	add    BYTE PTR [rax],al
   10f5f:	00 90 23 00 00 00    	add    BYTE PTR [rax+0x23],dl
   10f65:	00 00                	add    BYTE PTR [rax],al
   10f67:	00 a0 23 00 00 00    	add    BYTE PTR [rax+0x23],ah
   10f6d:	00 00                	add    BYTE PTR [rax],al
   10f6f:	00 b0 23 00 00 00    	add    BYTE PTR [rax+0x23],dh
   10f75:	00 00                	add    BYTE PTR [rax],al
   10f77:	00 c0                	add    al,al
   10f79:	23 00                	and    eax,DWORD PTR [rax]
   10f7b:	00 00                	add    BYTE PTR [rax],al
   10f7d:	00 00                	add    BYTE PTR [rax],al
   10f7f:	00 d0                	add    al,dl
   10f81:	23 00                	and    eax,DWORD PTR [rax]
   10f83:	00 00                	add    BYTE PTR [rax],al
   10f85:	00 00                	add    BYTE PTR [rax],al
   10f87:	00 e0                	add    al,ah
   10f89:	23 00                	and    eax,DWORD PTR [rax]
   10f8b:	00 00                	add    BYTE PTR [rax],al
   10f8d:	00 00                	add    BYTE PTR [rax],al
   10f8f:	00 f0                	add    al,dh
   10f91:	23 00                	and    eax,DWORD PTR [rax]
   10f93:	00 00                	add    BYTE PTR [rax],al
   10f95:	00 00                	add    BYTE PTR [rax],al
   10f97:	00 00                	add    BYTE PTR [rax],al
   10f99:	24 00                	and    al,0x0
   10f9b:	00 00                	add    BYTE PTR [rax],al
   10f9d:	00 00                	add    BYTE PTR [rax],al
   10f9f:	00 10                	add    BYTE PTR [rax],dl
   10fa1:	24 00                	and    al,0x0
   10fa3:	00 00                	add    BYTE PTR [rax],al
   10fa5:	00 00                	add    BYTE PTR [rax],al
   10fa7:	00 20                	add    BYTE PTR [rax],ah
   10fa9:	24 00                	and    al,0x0
   10fab:	00 00                	add    BYTE PTR [rax],al
   10fad:	00 00                	add    BYTE PTR [rax],al
   10faf:	00 30                	add    BYTE PTR [rax],dh
   10fb1:	24 00                	and    al,0x0
   10fb3:	00 00                	add    BYTE PTR [rax],al
   10fb5:	00 00                	add    BYTE PTR [rax],al
   10fb7:	00 40 24             	add    BYTE PTR [rax+0x24],al
   10fba:	00 00                	add    BYTE PTR [rax],al
   10fbc:	00 00                	add    BYTE PTR [rax],al
   10fbe:	00 00                	add    BYTE PTR [rax],al
   10fc0:	50                   	push   rax
   10fc1:	24 00                	and    al,0x0
   10fc3:	00 00                	add    BYTE PTR [rax],al
   10fc5:	00 00                	add    BYTE PTR [rax],al
   10fc7:	00 60 24             	add    BYTE PTR [rax+0x24],ah
   10fca:	00 00                	add    BYTE PTR [rax],al
   10fcc:	00 00                	add    BYTE PTR [rax],al
   10fce:	00 00                	add    BYTE PTR [rax],al
   10fd0:	70 24                	jo     10ff6 <_GLOBAL_OFFSET_TABLE_+0x25e>
	...

Disassembly of section .data:

0000000000011000 <__data_start>:
	...

0000000000011008 <__dso_handle>:
   11008:	08 10                	or     BYTE PTR [rax],dl
   1100a:	01 00                	add    DWORD PTR [rax],eax
   1100c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011010 <blk_ipv4_len>:
   11010:	ff                   	(bad)  
   11011:	ff                   	(bad)  
   11012:	ff                   	(bad)  
   11013:	ff                   	(bad)  

0000000000011014 <num_rules>:
   11014:	ff                   	(bad)  
   11015:	ff                   	(bad)  
   11016:	ff                   	(bad)  
   11017:	ff                   	(bad)  

0000000000011018 <watchlist_num>:
   11018:	ff                   	(bad)  
   11019:	ff                   	(bad)  
   1101a:	ff                   	(bad)  
   1101b:	ff                   	(bad)  

000000000001101c <arp_entries>:
   1101c:	ff                   	(bad)  
   1101d:	ff                   	(bad)  
   1101e:	ff                   	(bad)  
   1101f:	ff                 	dec    eax

0000000000011020 <spi_max>:
   11020:	c8 00 00 00          	enter  0x0,0x0

0000000000011024 <VIGIL_MODE>:
   11024:	ff                   	(bad)  
   11025:	ff 00                	inc    DWORD PTR [rax]
	...

0000000000011028 <default_config>:
   11028:	04 c0                	add    al,0xc0
   1102a:	00 00                	add    BYTE PTR [rax],al
   1102c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011030 <def_log_file>:
   11030:	1a c0                	sbb    al,al
   11032:	00 00                	add    BYTE PTR [rax],al
   11034:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011038 <default_host_conf>:
   11038:	34 c0                	xor    al,0xc0
   1103a:	00 00                	add    BYTE PTR [rax],al
   1103c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011040 <total_conversations>:
   11040:	ff                   	(bad)  
   11041:	ff                   	(bad)  
   11042:	ff                   	(bad)  
   11043:	ff                   	.byte 0xff

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <buffer+0x78>
   a:	74 75                	je     81 <buffer.4704+0x1>
   c:	20 39                	and    BYTE PTR [rcx],bh
   e:	2e 34 2e             	cs xor al,0x2e
  11:	30 2d 31 75 62 75    	xor    BYTE PTR [rip+0x75627531],ch        # 75627548 <_end+0x754ec108>
  17:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  18:	74 75                	je     8f <buffer.4704+0xf>
  1a:	31 7e 32             	xor    DWORD PTR [rsi+0x32],edi
  1d:	30 2e                	xor    BYTE PTR [rsi],ch
  1f:	30 34 29             	xor    BYTE PTR [rcx+rbp*1],dh
  22:	20 39                	and    BYTE PTR [rcx],bh
  24:	2e 34 2e             	cs xor al,0x2e
  27:	30 00                	xor    BYTE PTR [rax],al
