
vigil.exe:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000350 <.interp>:
 350:	2f                   	(bad)  
 351:	6c                   	ins    BYTE PTR es:[rdi],dx
 352:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 359:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 35e:	78 2d                	js     38d <buffer.0+0x30d>
 360:	78 38                	js     39a <buffer.0+0x31a>
 362:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 368:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 369:	2e 32 00             	cs xor al,BYTE PTR [rax]

Disassembly of section .note.gnu.property:

0000000000000370 <.note.gnu.property>:
 370:	04 00                	add    al,0x0
 372:	00 00                	add    BYTE PTR [rax],al
 374:	20 00                	and    BYTE PTR [rax],al
 376:	00 00                	add    BYTE PTR [rax],al
 378:	05 00 00 00 47       	add    eax,0x47000000
 37d:	4e 55                	rex.WRX push rbp
 37f:	00 02                	add    BYTE PTR [rdx],al
 381:	00 00                	add    BYTE PTR [rax],al
 383:	c0 04 00 00          	rol    BYTE PTR [rax+rax*1],0x0
 387:	00 03                	add    BYTE PTR [rbx],al
 389:	00 00                	add    BYTE PTR [rax],al
 38b:	00 00                	add    BYTE PTR [rax],al
 38d:	00 00                	add    BYTE PTR [rax],al
 38f:	00 02                	add    BYTE PTR [rdx],al
 391:	80 00 c0             	add    BYTE PTR [rax],0xc0
 394:	04 00                	add    al,0x0
 396:	00 00                	add    BYTE PTR [rax],al
 398:	01 00                	add    DWORD PTR [rax],eax
 39a:	00 00                	add    BYTE PTR [rax],al
 39c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

00000000000003a0 <.note.gnu.build-id>:
 3a0:	04 00                	add    al,0x0
 3a2:	00 00                	add    BYTE PTR [rax],al
 3a4:	14 00                	adc    al,0x0
 3a6:	00 00                	add    BYTE PTR [rax],al
 3a8:	03 00                	add    eax,DWORD PTR [rax]
 3aa:	00 00                	add    BYTE PTR [rax],al
 3ac:	47                   	rex.RXB
 3ad:	4e 55                	rex.WRX push rbp
 3af:	00 e1                	add    cl,ah
 3b1:	1b c1                	sbb    eax,ecx
 3b3:	15 78 67 91 17       	adc    eax,0x17916778
 3b8:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
 3b9:	ec                   	in     al,dx
 3ba:	ff                   	(bad)  
 3bb:	7c 0c                	jl     3c9 <__abi_tag+0x5>
 3bd:	c3                   	ret    
 3be:	cc                   	int3   
 3bf:	46 54                	rex.RX push rsp
 3c1:	55                   	push   rbp
 3c2:	63                   	.byte 0x63
 3c3:	81                   	.byte 0x81

Disassembly of section .note.ABI-tag:

00000000000003c4 <__abi_tag>:
 3c4:	04 00                	add    al,0x0
 3c6:	00 00                	add    BYTE PTR [rax],al
 3c8:	10 00                	adc    BYTE PTR [rax],al
 3ca:	00 00                	add    BYTE PTR [rax],al
 3cc:	01 00                	add    DWORD PTR [rax],eax
 3ce:	00 00                	add    BYTE PTR [rax],al
 3d0:	47                   	rex.RXB
 3d1:	4e 55                	rex.WRX push rbp
 3d3:	00 00                	add    BYTE PTR [rax],al
 3d5:	00 00                	add    BYTE PTR [rax],al
 3d7:	00 03                	add    BYTE PTR [rbx],al
 3d9:	00 00                	add    BYTE PTR [rax],al
 3db:	00 02                	add    BYTE PTR [rdx],al
 3dd:	00 00                	add    BYTE PTR [rax],al
 3df:	00 00                	add    BYTE PTR [rax],al
 3e1:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .gnu.hash:

00000000000003e8 <.gnu.hash>:
 3e8:	03 00                	add    eax,DWORD PTR [rax]
 3ea:	00 00                	add    BYTE PTR [rax],al
 3ec:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
 3ef:	00 01                	add    BYTE PTR [rcx],al
 3f1:	00 00                	add    BYTE PTR [rax],al
 3f3:	00 06                	add    BYTE PTR [rsi],al
 3f5:	00 00                	add    BYTE PTR [rax],al
 3f7:	00 00                	add    BYTE PTR [rax],al
 3f9:	14 81                	adc    al,0x81
 3fb:	00 00                	add    BYTE PTR [rax],al
 3fd:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 400:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
 403:	00 00                	add    BYTE PTR [rax],al
 405:	00 00                	add    BYTE PTR [rax],al
 407:	00 48 00             	add    BYTE PTR [rax+0x0],cl
 40a:	00 00                	add    BYTE PTR [rax],al
 40c:	d1 65 ce             	shl    DWORD PTR [rbp-0x32],1
 40f:	6d                   	ins    DWORD PTR es:[rdi],dx
 410:	32 b3 f0 a9 b3 a2    	xor    dh,BYTE PTR [rbx-0x5d4c5610]
 416:	f7 12                	not    DWORD PTR [rdx]

Disassembly of section .dynsym:

0000000000000418 <.dynsym>:
	...
 430:	88 00                	mov    BYTE PTR [rax],al
 432:	00 00                	add    BYTE PTR [rax],al
 434:	12 00                	adc    al,BYTE PTR [rax]
	...
 446:	00 00                	add    BYTE PTR [rax],al
 448:	41 01 00             	add    DWORD PTR [r8],eax
 44b:	00 12                	add    BYTE PTR [rdx],dl
	...
 45d:	00 00                	add    BYTE PTR [rax],al
 45f:	00 8a 01 00 00 12    	add    BYTE PTR [rdx+0x12000001],cl
	...
 475:	00 00                	add    BYTE PTR [rax],al
 477:	00 dd                	add    ch,bl
 479:	01 00                	add    DWORD PTR [rax],eax
 47b:	00 12                	add    BYTE PTR [rdx],dl
	...
 48d:	00 00                	add    BYTE PTR [rax],al
 48f:	00 48 02             	add    BYTE PTR [rax+0x2],cl
 492:	00 00                	add    BYTE PTR [rax],al
 494:	12 00                	adc    al,BYTE PTR [rax]
	...
 4a6:	00 00                	add    BYTE PTR [rax],al
 4a8:	c5 01 00             	(bad)
 4ab:	00 12                	add    BYTE PTR [rdx],dl
	...
 4bd:	00 00                	add    BYTE PTR [rax],al
 4bf:	00 90 00 00 00 12    	add    BYTE PTR [rax+0x12000000],dl
	...
 4d5:	00 00                	add    BYTE PTR [rax],al
 4d7:	00 01                	add    BYTE PTR [rcx],al
 4d9:	01 00                	add    DWORD PTR [rax],eax
 4db:	00 12                	add    BYTE PTR [rdx],dl
	...
 4ed:	00 00                	add    BYTE PTR [rax],al
 4ef:	00 1d 00 00 00 20    	add    BYTE PTR [rip+0x20000000],bl        # 200004f5 <_end+0x1fec54ed>
	...
 505:	00 00                	add    BYTE PTR [rax],al
 507:	00 92 01 00 00 12    	add    BYTE PTR [rdx+0x12000001],dl
	...
 51d:	00 00                	add    BYTE PTR [rax],al
 51f:	00 42 02             	add    BYTE PTR [rdx+0x2],al
 522:	00 00                	add    BYTE PTR [rax],al
 524:	12 00                	adc    al,BYTE PTR [rax]
	...
 536:	00 00                	add    BYTE PTR [rax],al
 538:	7d 02                	jge    53c <__abi_tag+0x178>
 53a:	00 00                	add    BYTE PTR [rax],al
 53c:	12 00                	adc    al,BYTE PTR [rax]
	...
 54e:	00 00                	add    BYTE PTR [rax],al
 550:	75 02                	jne    554 <__abi_tag+0x190>
 552:	00 00                	add    BYTE PTR [rax],al
 554:	12 00                	adc    al,BYTE PTR [rax]
	...
 566:	00 00                	add    BYTE PTR [rax],al
 568:	7b 00                	jnp    56a <__abi_tag+0x1a6>
 56a:	00 00                	add    BYTE PTR [rax],al
 56c:	12 00                	adc    al,BYTE PTR [rax]
	...
 57e:	00 00                	add    BYTE PTR [rax],al
 580:	b0 01                	mov    al,0x1
 582:	00 00                	add    BYTE PTR [rax],al
 584:	12 00                	adc    al,BYTE PTR [rax]
	...
 596:	00 00                	add    BYTE PTR [rax],al
 598:	24 01                	and    al,0x1
 59a:	00 00                	add    BYTE PTR [rax],al
 59c:	12 00                	adc    al,BYTE PTR [rax]
	...
 5ae:	00 00                	add    BYTE PTR [rax],al
 5b0:	eb 01                	jmp    5b3 <__abi_tag+0x1ef>
 5b2:	00 00                	add    BYTE PTR [rax],al
 5b4:	12 00                	adc    al,BYTE PTR [rax]
	...
 5c6:	00 00                	add    BYTE PTR [rax],al
 5c8:	3a 01                	cmp    al,BYTE PTR [rcx]
 5ca:	00 00                	add    BYTE PTR [rax],al
 5cc:	12 00                	adc    al,BYTE PTR [rax]
	...
 5de:	00 00                	add    BYTE PTR [rax],al
 5e0:	aa                   	stos   BYTE PTR es:[rdi],al
 5e1:	01 00                	add    DWORD PTR [rax],eax
 5e3:	00 12                	add    BYTE PTR [rdx],dl
	...
 5f5:	00 00                	add    BYTE PTR [rax],al
 5f7:	00 51 02             	add    BYTE PTR [rcx+0x2],dl
 5fa:	00 00                	add    BYTE PTR [rax],al
 5fc:	12 00                	adc    al,BYTE PTR [rax]
	...
 60e:	00 00                	add    BYTE PTR [rax],al
 610:	50                   	push   rax
 611:	00 00                	add    BYTE PTR [rax],al
 613:	00 12                	add    BYTE PTR [rdx],dl
	...
 625:	00 00                	add    BYTE PTR [rax],al
 627:	00 93 02 00 00 12    	add    BYTE PTR [rbx+0x12000002],dl
	...
 63d:	00 00                	add    BYTE PTR [rax],al
 63f:	00 6e 00             	add    BYTE PTR [rsi+0x0],ch
 642:	00 00                	add    BYTE PTR [rax],al
 644:	12 00                	adc    al,BYTE PTR [rax]
	...
 656:	00 00                	add    BYTE PTR [rax],al
 658:	a3 00 00 00 12 00 00 	movabs ds:0x12000000,eax
 65f:	00 00 
	...
 66d:	00 00                	add    BYTE PTR [rax],al
 66f:	00 01                	add    BYTE PTR [rcx],al
 671:	00 00                	add    BYTE PTR [rax],al
 673:	00 20                	add    BYTE PTR [rax],ah
	...
 685:	00 00                	add    BYTE PTR [rax],al
 687:	00 02                	add    BYTE PTR [rdx],al
 689:	02 00                	add    al,BYTE PTR [rax]
 68b:	00 12                	add    BYTE PTR [rdx],dl
	...
 69d:	00 00                	add    BYTE PTR [rax],al
 69f:	00 56 01             	add    BYTE PTR [rsi+0x1],dl
 6a2:	00 00                	add    BYTE PTR [rax],al
 6a4:	12 00                	adc    al,BYTE PTR [rax]
	...
 6b6:	00 00                	add    BYTE PTR [rax],al
 6b8:	76 00                	jbe    6ba <__abi_tag+0x2f6>
 6ba:	00 00                	add    BYTE PTR [rax],al
 6bc:	12 00                	adc    al,BYTE PTR [rax]
	...
 6ce:	00 00                	add    BYTE PTR [rax],al
 6d0:	19 02                	sbb    DWORD PTR [rdx],eax
 6d2:	00 00                	add    BYTE PTR [rax],al
 6d4:	12 00                	adc    al,BYTE PTR [rax]
	...
 6e6:	00 00                	add    BYTE PTR [rax],al
 6e8:	2c 00                	sub    al,0x0
 6ea:	00 00                	add    BYTE PTR [rax],al
 6ec:	20 00                	and    BYTE PTR [rax],al
	...
 6fe:	00 00                	add    BYTE PTR [rax],al
 700:	59                   	pop    rcx
 701:	02 00                	add    al,BYTE PTR [rax]
 703:	00 12                	add    BYTE PTR [rdx],dl
	...
 715:	00 00                	add    BYTE PTR [rax],al
 717:	00 2f                	add    BYTE PTR [rdi],ch
 719:	02 00                	add    al,BYTE PTR [rax]
 71b:	00 12                	add    BYTE PTR [rdx],dl
	...
 72d:	00 00                	add    BYTE PTR [rax],al
 72f:	00 1e                	add    BYTE PTR [rsi],bl
 731:	01 00                	add    DWORD PTR [rax],eax
 733:	00 12                	add    BYTE PTR [rdx],dl
	...
 745:	00 00                	add    BYTE PTR [rax],al
 747:	00 18                	add    BYTE PTR [rax],bl
 749:	01 00                	add    DWORD PTR [rax],eax
 74b:	00 12                	add    BYTE PTR [rdx],dl
	...
 75d:	00 00                	add    BYTE PTR [rax],al
 75f:	00 20                	add    BYTE PTR [rax],ah
 761:	02 00                	add    al,BYTE PTR [rax]
 763:	00 12                	add    BYTE PTR [rdx],dl
	...
 775:	00 00                	add    BYTE PTR [rax],al
 777:	00 d5                	add    ch,dl
 779:	00 00                	add    BYTE PTR [rax],al
 77b:	00 12                	add    BYTE PTR [rdx],dl
	...
 78d:	00 00                	add    BYTE PTR [rax],al
 78f:	00 fb                	add    bl,bh
 791:	01 00                	add    DWORD PTR [rax],eax
 793:	00 12                	add    BYTE PTR [rdx],dl
	...
 7a5:	00 00                	add    BYTE PTR [rax],al
 7a7:	00 67 02             	add    BYTE PTR [rdi+0x2],ah
 7aa:	00 00                	add    BYTE PTR [rax],al
 7ac:	12 00                	adc    al,BYTE PTR [rax]
	...
 7be:	00 00                	add    BYTE PTR [rax],al
 7c0:	91                   	xchg   ecx,eax
 7c1:	01 00                	add    DWORD PTR [rax],eax
 7c3:	00 12                	add    BYTE PTR [rdx],dl
	...
 7d5:	00 00                	add    BYTE PTR [rax],al
 7d7:	00 d6                	add    dh,dl
 7d9:	01 00                	add    DWORD PTR [rax],eax
 7db:	00 12                	add    BYTE PTR [rdx],dl
	...
 7ed:	00 00                	add    BYTE PTR [rax],al
 7ef:	00 ae 00 00 00 12    	add    BYTE PTR [rsi+0x12000000],ch
	...
 805:	00 00                	add    BYTE PTR [rax],al
 807:	00 a5 01 00 00 12    	add    BYTE PTR [rbp+0x12000001],ah
	...
 81d:	00 00                	add    BYTE PTR [rax],al
 81f:	00 68 01             	add    BYTE PTR [rax+0x1],ch
 822:	00 00                	add    BYTE PTR [rax],al
 824:	12 00                	adc    al,BYTE PTR [rax]
	...
 836:	00 00                	add    BYTE PTR [rax],al
 838:	9e                   	sahf   
 839:	01 00                	add    DWORD PTR [rax],eax
 83b:	00 12                	add    BYTE PTR [rdx],dl
	...
 84d:	00 00                	add    BYTE PTR [rax],al
 84f:	00 29                	add    BYTE PTR [rcx],ch
 851:	01 00                	add    DWORD PTR [rax],eax
 853:	00 12                	add    BYTE PTR [rdx],dl
	...
 865:	00 00                	add    BYTE PTR [rax],al
 867:	00 e0                	add    al,ah
 869:	00 00                	add    BYTE PTR [rax],al
 86b:	00 12                	add    BYTE PTR [rdx],dl
	...
 87d:	00 00                	add    BYTE PTR [rax],al
 87f:	00 bd 00 00 00 12    	add    BYTE PTR [rbp+0x12000000],bh
	...
 895:	00 00                	add    BYTE PTR [rax],al
 897:	00 97 01 00 00 12    	add    BYTE PTR [rdi+0x12000001],dl
	...
 8ad:	00 00                	add    BYTE PTR [rax],al
 8af:	00 eb                	add    bl,ch
 8b1:	00 00                	add    BYTE PTR [rax],al
 8b3:	00 12                	add    BYTE PTR [rdx],dl
	...
 8c5:	00 00                	add    BYTE PTR [rax],al
 8c7:	00 82 02 00 00 12    	add    BYTE PTR [rdx+0x12000002],al
	...
 8dd:	00 00                	add    BYTE PTR [rax],al
 8df:	00 82 01 00 00 12    	add    BYTE PTR [rdx+0x12000001],al
	...
 8f5:	00 00                	add    BYTE PTR [rax],al
 8f7:	00 f9                	add    cl,bh
 8f9:	00 00                	add    BYTE PTR [rax],al
 8fb:	00 12                	add    BYTE PTR [rdx],dl
	...
 90d:	00 00                	add    BYTE PTR [rax],al
 90f:	00 be 01 00 00 12    	add    BYTE PTR [rsi+0x12000001],bh
	...
 925:	00 00                	add    BYTE PTR [rax],al
 927:	00 cf                	add    bh,cl
 929:	01 00                	add    DWORD PTR [rax],eax
 92b:	00 12                	add    BYTE PTR [rdx],dl
	...
 93d:	00 00                	add    BYTE PTR [rax],al
 93f:	00 cb                	add    bl,cl
 941:	00 00                	add    BYTE PTR [rax],al
 943:	00 12                	add    BYTE PTR [rdx],dl
	...
 955:	00 00                	add    BYTE PTR [rax],al
 957:	00 5f 00             	add    BYTE PTR [rdi+0x0],bl
 95a:	00 00                	add    BYTE PTR [rax],al
 95c:	12 00                	adc    al,BYTE PTR [rax]
	...
 96e:	00 00                	add    BYTE PTR [rax],al
 970:	b7 01                	mov    bh,0x1
 972:	00 00                	add    BYTE PTR [rax],al
 974:	12 00                	adc    al,BYTE PTR [rax]
	...
 986:	00 00                	add    BYTE PTR [rax],al
 988:	11 02                	adc    DWORD PTR [rdx],eax
 98a:	00 00                	add    BYTE PTR [rax],al
 98c:	12 00                	adc    al,BYTE PTR [rax]
	...
 99e:	00 00                	add    BYTE PTR [rax],al
 9a0:	4e 01 00             	rex.WRX add QWORD PTR [rax],r8
 9a3:	00 12                	add    BYTE PTR [rdx],dl
	...
 9b5:	00 00                	add    BYTE PTR [rax],al
 9b7:	00 37                	add    BYTE PTR [rdi],dh
 9b9:	02 00                	add    al,BYTE PTR [rax]
 9bb:	00 12                	add    BYTE PTR [rdx],dl
	...
 9cd:	00 00                	add    BYTE PTR [rax],al
 9cf:	00 46 00             	add    BYTE PTR [rsi+0x0],al
 9d2:	00 00                	add    BYTE PTR [rax],al
 9d4:	12 00                	adc    al,BYTE PTR [rax]
	...
 9e6:	00 00                	add    BYTE PTR [rax],al
 9e8:	3c 02                	cmp    al,0x2
 9ea:	00 00                	add    BYTE PTR [rax],al
 9ec:	12 00                	adc    al,BYTE PTR [rax]
	...
 9fe:	00 00                	add    BYTE PTR [rax],al
 a00:	60                   	(bad)  
 a01:	02 00                	add    al,BYTE PTR [rax]
 a03:	00 12                	add    BYTE PTR [rdx],dl
	...
 a15:	00 00                	add    BYTE PTR [rax],al
 a17:	00 89 01 00 00 12    	add    BYTE PTR [rcx+0x12000001],cl
	...
 a2d:	00 00                	add    BYTE PTR [rax],al
 a2f:	00 30                	add    BYTE PTR [rax],dh
 a31:	01 00                	add    DWORD PTR [rax],eax
 a33:	00 12                	add    BYTE PTR [rdx],dl
	...
 a45:	00 00                	add    BYTE PTR [rax],al
 a47:	00 26                	add    BYTE PTR [rsi],ah
 a49:	02 00                	add    al,BYTE PTR [rax]
 a4b:	00 12                	add    BYTE PTR [rdx],dl
	...
 a5d:	00 00                	add    BYTE PTR [rax],al
 a5f:	00 70 01             	add    BYTE PTR [rax+0x1],dh
 a62:	00 00                	add    BYTE PTR [rax],al
 a64:	12 00                	adc    al,BYTE PTR [rax]
	...
 a76:	00 00                	add    BYTE PTR [rax],al
 a78:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 a79:	02 00                	add    al,BYTE PTR [rax]
 a7b:	00 12                	add    BYTE PTR [rdx],dl
	...
 a8d:	00 00                	add    BYTE PTR [rax],al
 a8f:	00 96 00 00 00 12    	add    BYTE PTR [rsi+0x12000000],dl
	...
 aa5:	00 00                	add    BYTE PTR [rax],al
 aa7:	00 35 01 00 00 12    	add    BYTE PTR [rip+0x12000001],dh        # 12000aae <_end+0x11ec5aa6>
	...
 abd:	00 00                	add    BYTE PTR [rax],al
 abf:	00 09                	add    BYTE PTR [rcx],cl
 ac1:	01 00                	add    DWORD PTR [rax],eax
 ac3:	00 22                	add    BYTE PTR [rdx],ah
	...
 ad5:	00 00                	add    BYTE PTR [rax],al
 ad7:	00 f3                	add    bl,dh
 ad9:	01 00                	add    DWORD PTR [rax],eax
 adb:	00 12                	add    BYTE PTR [rdx],dl
 add:	00 10                	add    BYTE PTR [rax],dl
 adf:	00 c1                	add    cl,al
 ae1:	91                   	xchg   ecx,eax
 ae2:	00 00                	add    BYTE PTR [rax],al
 ae4:	00 00                	add    BYTE PTR [rax],al
 ae6:	00 00                	add    BYTE PTR [rax],al
 ae8:	3a 01                	cmp    al,BYTE PTR [rcx]
 aea:	00 00                	add    BYTE PTR [rax],al
 aec:	00 00                	add    BYTE PTR [rax],al
 aee:	00 00                	add    BYTE PTR [rax],al
 af0:	e4 01                	in     al,0x1
 af2:	00 00                	add    BYTE PTR [rax],al
 af4:	11 00                	adc    DWORD PTR [rax],eax
 af6:	1b 00                	sbb    eax,DWORD PTR [rax]
 af8:	60                   	(bad)  
 af9:	10 01                	adc    BYTE PTR [rcx],al
 afb:	00 00                	add    BYTE PTR [rax],al
 afd:	00 00                	add    BYTE PTR [rax],al
 aff:	00 08                	add    BYTE PTR [rax],cl
 b01:	00 00                	add    BYTE PTR [rax],al
 b03:	00 00                	add    BYTE PTR [rax],al
 b05:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynstr:

0000000000000b08 <.dynstr>:
 b08:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 b0b:	54                   	push   rsp
 b0c:	4d 5f                	rex.WRB pop r15
 b0e:	64 65 72 65          	fs gs jb b77 <__abi_tag+0x7b3>
 b12:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 b19:	4d 
 b1a:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 b1c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b1d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b1e:	65 54                	gs push rsp
 b20:	61                   	(bad)  
 b21:	62                   	(bad)  
 b22:	6c                   	ins    BYTE PTR es:[rdi],dx
 b23:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
 b27:	67 6d                	ins    DWORD PTR es:[edi],dx
 b29:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b2a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b2b:	5f                   	pop    rdi
 b2c:	73 74                	jae    ba2 <__abi_tag+0x7de>
 b2e:	61                   	(bad)  
 b2f:	72 74                	jb     ba5 <__abi_tag+0x7e1>
 b31:	5f                   	pop    rdi
 b32:	5f                   	pop    rdi
 b33:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 b36:	54                   	push   rsp
 b37:	4d 5f                	rex.WRB pop r15
 b39:	72 65                	jb     ba0 <__abi_tag+0x7dc>
 b3b:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 b42:	4d 
 b43:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 b45:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b46:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b47:	65 54                	gs push rsp
 b49:	61                   	(bad)  
 b4a:	62                   	(bad)  
 b4b:	6c                   	ins    BYTE PTR es:[rdi],dx
 b4c:	65 00 70 63          	add    BYTE PTR gs:[rax+0x63],dh
 b50:	61                   	(bad)  
 b51:	70 5f                	jo     bb2 <__abi_tag+0x7ee>
 b53:	6c                   	ins    BYTE PTR es:[rdi],dx
 b54:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b55:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b56:	70 00                	jo     b58 <__abi_tag+0x794>
 b58:	70 63                	jo     bbd <__abi_tag+0x7f9>
 b5a:	61                   	(bad)  
 b5b:	70 5f                	jo     bbc <__abi_tag+0x7f8>
 b5d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b5e:	70 65                	jo     bc5 <__abi_tag+0x801>
 b60:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b61:	5f                   	pop    rdi
 b62:	6c                   	ins    BYTE PTR es:[rdi],dx
 b63:	69 76 65 00 73 71 6c 	imul   esi,DWORD PTR [rsi+0x65],0x6c717300
 b6a:	69 74 65 33 5f 65 72 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x7272655f
 b71:	72 
 b72:	6d                   	ins    DWORD PTR es:[rdi],dx
 b73:	73 67                	jae    bdc <__abi_tag+0x818>
 b75:	00 73 71             	add    BYTE PTR [rbx+0x71],dh
 b78:	6c                   	ins    BYTE PTR es:[rdi],dx
 b79:	69 74 65 33 5f 66 72 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6572665f
 b80:	65 
 b81:	65 00 73 71          	add    BYTE PTR gs:[rbx+0x71],dh
 b85:	6c                   	ins    BYTE PTR es:[rdi],dx
 b86:	69 74 65 33 5f 65 78 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6578655f
 b8d:	65 
 b8e:	63 00                	movsxd eax,DWORD PTR [rax]
 b90:	73 71                	jae    c03 <__abi_tag+0x83f>
 b92:	6c                   	ins    BYTE PTR es:[rdi],dx
 b93:	69 74 65 33 5f 63 6c 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6f6c635f
 b9a:	6f 
 b9b:	73 65                	jae    c02 <__abi_tag+0x83e>
 b9d:	00 73 71             	add    BYTE PTR [rbx+0x71],dh
 ba0:	6c                   	ins    BYTE PTR es:[rdi],dx
 ba1:	69 74 65 33 5f 6f 70 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x65706f5f
 ba8:	65 
 ba9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 baa:	00 6c 75 61          	add    BYTE PTR [rbp+rsi*2+0x61],ch
 bae:	5f                   	pop    rdi
 baf:	73 65                	jae    c16 <__abi_tag+0x852>
 bb1:	74 74                	je     c27 <__abi_tag+0x863>
 bb3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bb4:	70 00                	jo     bb6 <__abi_tag+0x7f2>
 bb6:	6c                   	ins    BYTE PTR es:[rdi],dx
 bb7:	75 61                	jne    c1a <__abi_tag+0x856>
 bb9:	4c 5f                	rex.WR pop rdi
 bbb:	6c                   	ins    BYTE PTR es:[rdi],dx
 bbc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bbd:	61                   	(bad)  
 bbe:	64 66 69 6c 65 78 00 	imul   bp,WORD PTR fs:[rbp+riz*2+0x78],0x6c00
 bc5:	6c 
 bc6:	75 61                	jne    c29 <__abi_tag+0x865>
 bc8:	4c 5f                	rex.WR pop rdi
 bca:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 bcb:	65 77 73             	gs ja  c41 <__abi_tag+0x87d>
 bce:	74 61                	je     c31 <__abi_tag+0x86d>
 bd0:	74 65                	je     c37 <__abi_tag+0x873>
 bd2:	00 6c 75 61          	add    BYTE PTR [rbp+rsi*2+0x61],ch
 bd6:	5f                   	pop    rdi
 bd7:	63 6c 6f 73          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
 bdb:	65 00 6c 75 61       	add    BYTE PTR gs:[rbp+rsi*2+0x61],ch
 be0:	5f                   	pop    rdi
 be1:	70 63                	jo     c46 <__abi_tag+0x882>
 be3:	61                   	(bad)  
 be4:	6c                   	ins    BYTE PTR es:[rdi],dx
 be5:	6c                   	ins    BYTE PTR es:[rdi],dx
 be6:	6b 00 6c             	imul   eax,DWORD PTR [rax],0x6c
 be9:	75 61                	jne    c4c <__abi_tag+0x888>
 beb:	5f                   	pop    rdi
 bec:	67 65 74 74          	addr32 gs je c64 <__abi_tag+0x8a0>
 bf0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bf1:	70 00                	jo     bf3 <__abi_tag+0x82f>
 bf3:	6c                   	ins    BYTE PTR es:[rdi],dx
 bf4:	75 61                	jne    c57 <__abi_tag+0x893>
 bf6:	4c 5f                	rex.WR pop rdi
 bf8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bf9:	70 65                	jo     c60 <__abi_tag+0x89c>
 bfb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 bfc:	6c                   	ins    BYTE PTR es:[rdi],dx
 bfd:	69 62 73 00 67 65 74 	imul   esp,DWORD PTR [rdx+0x73],0x74656700
 c04:	6c                   	ins    BYTE PTR es:[rdi],dx
 c05:	69 6e 65 00 73 74 72 	imul   ebp,DWORD PTR [rsi+0x65],0x72747300
 c0c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c0d:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
 c10:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 c13:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
 c16:	5f                   	pop    rdi
 c17:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 c1d:	7a 65                	jp     c84 <__abi_tag+0x8c0>
 c1f:	00 6e 74             	add    BYTE PTR [rsi+0x74],ch
 c22:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c23:	68 6c 00 6e 74       	push   0x746e006c
 c28:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c29:	68 73 00 72 65       	push   0x65720073
 c2e:	61                   	(bad)  
 c2f:	64 00 73 74          	add    BYTE PTR fs:[rbx+0x74],dh
 c33:	72 63                	jb     c98 <__abi_tag+0x8d4>
 c35:	68 72 00 6c 6f       	push   0x6f6c0072
 c3a:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
 c3d:	74 69                	je     ca8 <__abi_tag+0x8e4>
 c3f:	6d                   	ins    DWORD PTR es:[rdi],dx
 c40:	65 00 6d 61          	add    BYTE PTR gs:[rbp+0x61],ch
 c44:	6c                   	ins    BYTE PTR es:[rdi],dx
 c45:	6c                   	ins    BYTE PTR es:[rdi],dx
 c46:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c47:	63 00                	movsxd eax,DWORD PTR [rax]
 c49:	70 74                	jo     cbf <__abi_tag+0x8fb>
 c4b:	68 72 65 61 64       	push   0x64616572
 c50:	5f                   	pop    rdi
 c51:	6a 6f                	push   0x6f
 c53:	69 6e 00 73 74 72 63 	imul   ebp,DWORD PTR [rsi+0x0],0x63727473
 c5a:	73 70                	jae    ccc <__abi_tag+0x908>
 c5c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c5d:	00 62 61             	add    BYTE PTR [rdx+0x61],ah
 c60:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
 c63:	72 61                	jb     cc6 <__abi_tag+0x902>
 c65:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
 c68:	73 79                	jae    ce3 <__abi_tag+0x91f>
 c6a:	6d                   	ins    DWORD PTR es:[rdi],dx
 c6b:	62                   	(bad)  
 c6c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c6d:	6c                   	ins    BYTE PTR es:[rdi],dx
 c6e:	73 00                	jae    c70 <__abi_tag+0x8ac>
 c70:	72 65                	jb     cd7 <__abi_tag+0x913>
 c72:	67 63 6f 6d          	movsxd ebp,DWORD PTR [edi+0x6d]
 c76:	70 00                	jo     c78 <__abi_tag+0x8b4>
 c78:	5f                   	pop    rdi
 c79:	5f                   	pop    rdi
 c7a:	6c                   	ins    BYTE PTR es:[rdi],dx
 c7b:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 c82:	72 74                	jb     cf8 <__abi_tag+0x934>
 c84:	5f                   	pop    rdi
 c85:	6d                   	ins    DWORD PTR es:[rdi],dx
 c86:	61                   	(bad)  
 c87:	69 6e 00 73 74 72 63 	imul   ebp,DWORD PTR [rsi+0x0],0x63727473
 c8e:	6d                   	ins    DWORD PTR es:[rdi],dx
 c8f:	70 00                	jo     c91 <__abi_tag+0x8cd>
 c91:	66 70 72             	data16 jo d06 <__abi_tag+0x942>
 c94:	69 6e 74 66 00 66 70 	imul   ebp,DWORD PTR [rsi+0x74],0x70660066
 c9b:	75 74                	jne    d11 <__abi_tag+0x94d>
 c9d:	73 00                	jae    c9f <__abi_tag+0x8db>
 c9f:	73 6f                	jae    d10 <__abi_tag+0x94c>
 ca1:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
 ca4:	74 00                	je     ca6 <__abi_tag+0x8e2>
 ca6:	73 69                	jae    d11 <__abi_tag+0x94d>
 ca8:	67 6e                	outs   dx,BYTE PTR ds:[esi]
 caa:	61                   	(bad)  
 cab:	6c                   	ins    BYTE PTR es:[rdi],dx
 cac:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
 caf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 cb0:	69 00 66 6f 70 65    	imul   eax,DWORD PTR [rax],0x65706f66
 cb6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 cb7:	00 67 65             	add    BYTE PTR [rdi+0x65],ah
 cba:	74 6f                	je     d2b <__abi_tag+0x967>
 cbc:	70 74                	jo     d32 <__abi_tag+0x96e>
 cbe:	00 66 63             	add    BYTE PTR [rsi+0x63],ah
 cc1:	6c                   	ins    BYTE PTR es:[rdi],dx
 cc2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 cc3:	73 65                	jae    d2a <__abi_tag+0x966>
 cc5:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 cc8:	72 63                	jb     d2d <__abi_tag+0x969>
 cca:	70 79                	jo     d45 <__abi_tag+0x981>
 ccc:	00 62 61             	add    BYTE PTR [rdx+0x61],ah
 ccf:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
 cd2:	72 61                	jb     d35 <__abi_tag+0x971>
 cd4:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
 cd7:	73 74                	jae    d4d <__abi_tag+0x989>
 cd9:	72 74                	jb     d4f <__abi_tag+0x98b>
 cdb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 cdc:	6b 00 73             	imul   eax,DWORD PTR [rax],0x73
 cdf:	74 72                	je     d53 <__abi_tag+0x98f>
 ce1:	74 6f                	je     d52 <__abi_tag+0x98e>
 ce3:	6c                   	ins    BYTE PTR es:[rdi],dx
 ce4:	00 6d 65             	add    BYTE PTR [rbp+0x65],ch
 ce7:	6d                   	ins    DWORD PTR es:[rdi],dx
 ce8:	73 65                	jae    d4f <__abi_tag+0x98b>
 cea:	74 00                	je     cec <__abi_tag+0x928>
 cec:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 ced:	70 74                	jo     d63 <__abi_tag+0x99f>
 cef:	61                   	(bad)  
 cf0:	72 67                	jb     d59 <__abi_tag+0x995>
 cf2:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 cf5:	72 6e                	jb     d65 <__abi_tag+0x9a1>
 cf7:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
 cfa:	00 69 73             	add    BYTE PTR [rcx+0x73],ch
 cfd:	64 69 67 69 74 00 73 	imul   esp,DWORD PTR fs:[rdi+0x69],0x74730074
 d04:	74 
 d05:	72 73                	jb     d7a <__abi_tag+0x9b6>
 d07:	74 72                	je     d7b <__abi_tag+0x9b7>
 d09:	00 70 74             	add    BYTE PTR [rax+0x74],dh
 d0c:	68 72 65 61 64       	push   0x64616572
 d11:	5f                   	pop    rdi
 d12:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
 d15:	61                   	(bad)  
 d16:	74 65                	je     d7d <__abi_tag+0x9b9>
 d18:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 d1b:	72 6e                	jb     d8b <__abi_tag+0x9c7>
 d1d:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
 d20:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 d23:	72 6c                	jb     d91 <__abi_tag+0x9cd>
 d25:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 d27:	00 73 6c             	add    BYTE PTR [rbx+0x6c],dh
 d2a:	65 65 70 00          	gs gs jo d2e <__abi_tag+0x96a>
 d2e:	67 65 74 64          	addr32 gs je d96 <__abi_tag+0x9d2>
 d32:	65 6c                	gs ins BYTE PTR es:[rdi],dx
 d34:	69 6d 00 73 70 72 69 	imul   ebp,DWORD PTR [rbp+0x0],0x69727073
 d3b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d3c:	74 66                	je     da4 <__abi_tag+0x9e0>
 d3e:	00 62 69             	add    BYTE PTR [rdx+0x69],ah
 d41:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d42:	64 00 68 74          	add    BYTE PTR fs:[rax+0x74],ch
 d46:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d47:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d48:	6c                   	ins    BYTE PTR es:[rdi],dx
 d49:	00 68 74             	add    BYTE PTR [rax+0x74],ch
 d4c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d4d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d4e:	73 00                	jae    d50 <__abi_tag+0x98c>
 d50:	73 6e                	jae    dc0 <__abi_tag+0x9fc>
 d52:	70 72                	jo     dc6 <__abi_tag+0xa02>
 d54:	69 6e 74 66 00 72 65 	imul   ebp,DWORD PTR [rsi+0x74],0x65720066
 d5b:	67 65 78 65          	addr32 gs js dc4 <__abi_tag+0xa00>
 d5f:	63 00                	movsxd eax,DWORD PTR [rax]
 d61:	6c                   	ins    BYTE PTR es:[rdi],dx
 d62:	69 73 74 65 6e 00 70 	imul   esi,DWORD PTR [rbx+0x74],0x70006e65
 d69:	65 72 72             	gs jb  dde <__abi_tag+0xa1a>
 d6c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d6d:	72 00                	jb     d6f <__abi_tag+0x9ab>
 d6f:	73 74                	jae    de5 <__abi_tag+0xa21>
 d71:	72 63                	jb     dd6 <__abi_tag+0xa12>
 d73:	61                   	(bad)  
 d74:	74 00                	je     d76 <__abi_tag+0x9b2>
 d76:	61                   	(bad)  
 d77:	63 63 65             	movsxd esp,DWORD PTR [rbx+0x65]
 d7a:	70 74                	jo     df0 <__abi_tag+0xa2c>
 d7c:	00 70 75             	add    BYTE PTR [rax+0x75],dh
 d7f:	74 63                	je     de4 <__abi_tag+0xa20>
 d81:	68 61 72 00 65       	push   0x65007261
 d86:	78 69                	js     df1 <__abi_tag+0xa2d>
 d88:	74 00                	je     d8a <__abi_tag+0x9c6>
 d8a:	5f                   	pop    rdi
 d8b:	5f                   	pop    rdi
 d8c:	73 74                	jae    e02 <__abi_tag+0xa3e>
 d8e:	61                   	(bad)  
 d8f:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 d92:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 d95:	5f                   	pop    rdi
 d96:	66 61                	data16 (bad) 
 d98:	69 6c 00 73 65 74 73 	imul   ebp,DWORD PTR [rax+rax*1+0x73],0x6f737465
 d9f:	6f 
 da0:	63 6b 6f             	movsxd ebp,DWORD PTR [rbx+0x6f]
 da3:	70 74                	jo     e19 <__abi_tag+0xa55>
 da5:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 da9:	70 63                	jo     e0e <__abi_tag+0xa4a>
 dab:	61                   	(bad)  
 dac:	70 2e                	jo     ddc <__abi_tag+0xa18>
 dae:	73 6f                	jae    e1f <__abi_tag+0xa5b>
 db0:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
 db3:	38 00                	cmp    BYTE PTR [rax],al
 db5:	6c                   	ins    BYTE PTR es:[rdi],dx
 db6:	69 62 73 71 6c 69 74 	imul   esp,DWORD PTR [rdx+0x73],0x74696c71
 dbd:	65 33 2e             	xor    ebp,DWORD PTR gs:[rsi]
 dc0:	73 6f                	jae    e31 <__abi_tag+0xa6d>
 dc2:	2e 30 00             	cs xor BYTE PTR [rax],al
 dc5:	6c                   	ins    BYTE PTR es:[rdi],dx
 dc6:	69 62 6c 75 61 35 2e 	imul   esp,DWORD PTR [rdx+0x6c],0x2e356175
 dcd:	33 2e                	xor    ebp,DWORD PTR [rsi]
 dcf:	73 6f                	jae    e40 <__abi_tag+0xa7c>
 dd1:	2e 30 00             	cs xor BYTE PTR [rax],al
 dd4:	6c                   	ins    BYTE PTR es:[rdi],dx
 dd5:	69 62 63 2e 73 6f 2e 	imul   esp,DWORD PTR [rdx+0x63],0x2e6f732e
 ddc:	36 00 4c 55 41       	ss add BYTE PTR [rbp+rdx*2+0x41],cl
 de1:	5f                   	pop    rdi
 de2:	35 2e 33 00 47       	xor    eax,0x4700332e
 de7:	4c                   	rex.WR
 de8:	49                   	rex.WB
 de9:	42                   	rex.X
 dea:	43 5f                	rex.XB pop r15
 dec:	32 2e                	xor    ch,BYTE PTR [rsi]
 dee:	34 00                	xor    al,0x0
 df0:	47                   	rex.RXB
 df1:	4c                   	rex.WR
 df2:	49                   	rex.WB
 df3:	42                   	rex.X
 df4:	43 5f                	rex.XB pop r15
 df6:	32 2e                	xor    ch,BYTE PTR [rsi]
 df8:	33 2e                	xor    ebp,DWORD PTR [rsi]
 dfa:	34 00                	xor    al,0x0
 dfc:	47                   	rex.RXB
 dfd:	4c                   	rex.WR
 dfe:	49                   	rex.WB
 dff:	42                   	rex.X
 e00:	43 5f                	rex.XB pop r15
 e02:	32 2e                	xor    ch,BYTE PTR [rsi]
 e04:	32 2e                	xor    ch,BYTE PTR [rsi]
 e06:	35 00 47 4c 49       	xor    eax,0x494c4700
 e0b:	42                   	rex.X
 e0c:	43 5f                	rex.XB pop r15
 e0e:	32 2e                	xor    ch,BYTE PTR [rsi]
 e10:	33 34 00             	xor    esi,DWORD PTR [rax+rax*1]

Disassembly of section .gnu.version:

0000000000000e14 <.gnu.version>:
 e14:	00 00                	add    BYTE PTR [rax],al
 e16:	00 00                	add    BYTE PTR [rax],al
 e18:	02 00                	add    al,BYTE PTR [rax]
 e1a:	03 00                	add    eax,DWORD PTR [rax]
 e1c:	03 00                	add    eax,DWORD PTR [rax]
 e1e:	03 00                	add    eax,DWORD PTR [rax]
 e20:	03 00                	add    eax,DWORD PTR [rax]
 e22:	03 00                	add    eax,DWORD PTR [rax]
 e24:	03 00                	add    eax,DWORD PTR [rax]
 e26:	00 00                	add    BYTE PTR [rax],al
 e28:	03 00                	add    eax,DWORD PTR [rax]
 e2a:	03 00                	add    eax,DWORD PTR [rax]
 e2c:	03 00                	add    eax,DWORD PTR [rax]
 e2e:	03 00                	add    eax,DWORD PTR [rax]
 e30:	00 00                	add    BYTE PTR [rax],al
 e32:	03 00                	add    eax,DWORD PTR [rax]
 e34:	03 00                	add    eax,DWORD PTR [rax]
 e36:	03 00                	add    eax,DWORD PTR [rax]
 e38:	03 00                	add    eax,DWORD PTR [rax]
 e3a:	03 00                	add    eax,DWORD PTR [rax]
 e3c:	04 00                	add    al,0x0
 e3e:	00 00                	add    BYTE PTR [rax],al
 e40:	03 00                	add    eax,DWORD PTR [rax]
 e42:	00 00                	add    BYTE PTR [rax],al
 e44:	05 00 00 00 02       	add    eax,0x2000000
 e49:	00 03                	add    BYTE PTR [rbx],al
 e4b:	00 03                	add    BYTE PTR [rbx],al
 e4d:	00 03                	add    BYTE PTR [rbx],al
 e4f:	00 00                	add    BYTE PTR [rax],al
 e51:	00 03                	add    BYTE PTR [rbx],al
 e53:	00 03                	add    BYTE PTR [rbx],al
 e55:	00 03                	add    BYTE PTR [rbx],al
 e57:	00 03                	add    BYTE PTR [rbx],al
 e59:	00 03                	add    BYTE PTR [rbx],al
 e5b:	00 05 00 03 00 03    	add    BYTE PTR [rip+0x3000300],al        # 3001161 <_end+0x2ec6159>
 e61:	00 03                	add    BYTE PTR [rbx],al
 e63:	00 03                	add    BYTE PTR [rbx],al
 e65:	00 05 00 03 00 03    	add    BYTE PTR [rip+0x3000300],al        # 300116b <_end+0x2ec6163>
 e6b:	00 03                	add    BYTE PTR [rbx],al
 e6d:	00 03                	add    BYTE PTR [rbx],al
 e6f:	00 05 00 05 00 03    	add    BYTE PTR [rip+0x3000500],al        # 3001375 <_end+0x2ec636d>
 e75:	00 05 00 06 00 03    	add    BYTE PTR [rip+0x3000600],al        # 300147b <_end+0x2ec6473>
 e7b:	00 03                	add    BYTE PTR [rbx],al
 e7d:	00 03                	add    BYTE PTR [rbx],al
 e7f:	00 03                	add    BYTE PTR [rbx],al
 e81:	00 05 00 00 00 03    	add    BYTE PTR [rip+0x3000000],al        # 3000e87 <_end+0x2ec5e7f>
 e87:	00 03                	add    BYTE PTR [rbx],al
 e89:	00 03                	add    BYTE PTR [rbx],al
 e8b:	00 03                	add    BYTE PTR [rbx],al
 e8d:	00 00                	add    BYTE PTR [rax],al
 e8f:	00 03                	add    BYTE PTR [rbx],al
 e91:	00 03                	add    BYTE PTR [rbx],al
 e93:	00 03                	add    BYTE PTR [rbx],al
 e95:	00 03                	add    BYTE PTR [rbx],al
 e97:	00 03                	add    BYTE PTR [rbx],al
 e99:	00 02                	add    BYTE PTR [rdx],al
 e9b:	00 03                	add    BYTE PTR [rbx],al
 e9d:	00 00                	add    BYTE PTR [rax],al
 e9f:	00 03                	add    BYTE PTR [rbx],al
 ea1:	00 03                	add    BYTE PTR [rbx],al
 ea3:	00 01                	add    BYTE PTR [rcx],al
 ea5:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .gnu.version_r:

0000000000000ea8 <.gnu.version_r>:
 ea8:	01 00                	add    DWORD PTR [rax],eax
 eaa:	01 00                	add    DWORD PTR [rax],eax
 eac:	bd 02 00 00 10       	mov    ebp,0x10000002
 eb1:	00 00                	add    BYTE PTR [rax],al
 eb3:	00 20                	add    BYTE PTR [rax],ah
 eb5:	00 00                	add    BYTE PTR [rax],al
 eb7:	00 43 28             	add    BYTE PTR [rbx+0x28],al
 eba:	97                   	xchg   edi,eax
 ebb:	01 00                	add    DWORD PTR [rax],eax
 ebd:	00 05 00 d6 02 00    	add    BYTE PTR [rip+0x2d600],al        # 2e4c3 <rules+0x1d1e3>
 ec3:	00 00                	add    BYTE PTR [rax],al
 ec5:	00 00                	add    BYTE PTR [rax],al
 ec7:	00 01                	add    BYTE PTR [rcx],al
 ec9:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 ecc:	cc                   	int3   
 ecd:	02 00                	add    al,BYTE PTR [rax]
 ecf:	00 10                	add    BYTE PTR [rax],dl
 ed1:	00 00                	add    BYTE PTR [rax],al
 ed3:	00 00                	add    BYTE PTR [rax],al
 ed5:	00 00                	add    BYTE PTR [rax],al
 ed7:	00 14 69             	add    BYTE PTR [rcx+rbp*2],dl
 eda:	69 0d 00 00 06 00 de 	imul   ecx,DWORD PTR [rip+0x60000],0x2de        # 60ee4 <rules+0x4fc04>
 ee1:	02 00 00 
 ee4:	10 00                	adc    BYTE PTR [rax],al
 ee6:	00 00                	add    BYTE PTR [rax],al
 ee8:	74 19                	je     f03 <__abi_tag+0xb3f>
 eea:	69 09 00 00 04 00    	imul   ecx,DWORD PTR [rcx],0x40000
 ef0:	e8 02 00 00 10       	call   10000ef7 <_end+0xfec5eef>
 ef5:	00 00                	add    BYTE PTR [rax],al
 ef7:	00 75 1a             	add    BYTE PTR [rbp+0x1a],dh
 efa:	69 09 00 00 03 00    	imul   ecx,DWORD PTR [rcx],0x30000
 f00:	f4                   	hlt    
 f01:	02 00                	add    al,BYTE PTR [rax]
 f03:	00 10                	add    BYTE PTR [rax],dl
 f05:	00 00                	add    BYTE PTR [rax],al
 f07:	00 b4 91 96 06 00 00 	add    BYTE PTR [rcx+rdx*4+0x696],dh
 f0e:	02 00                	add    al,BYTE PTR [rax]
 f10:	00 03                	add    BYTE PTR [rbx],al
 f12:	00 00                	add    BYTE PTR [rax],al
 f14:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000000f18 <.rela.dyn>:
     f18:	80 0b 01             	or     BYTE PTR [rbx],0x1
     f1b:	00 00                	add    BYTE PTR [rax],al
     f1d:	00 00                	add    BYTE PTR [rax],al
     f1f:	00 08                	add    BYTE PTR [rax],cl
     f21:	00 00                	add    BYTE PTR [rax],al
     f23:	00 00                	add    BYTE PTR [rax],al
     f25:	00 00                	add    BYTE PTR [rax],al
     f27:	00 60 29             	add    BYTE PTR [rax+0x29],ah
     f2a:	00 00                	add    BYTE PTR [rax],al
     f2c:	00 00                	add    BYTE PTR [rax],al
     f2e:	00 00                	add    BYTE PTR [rax],al
     f30:	88 0b                	mov    BYTE PTR [rbx],cl
     f32:	01 00                	add    DWORD PTR [rax],eax
     f34:	00 00                	add    BYTE PTR [rax],al
     f36:	00 00                	add    BYTE PTR [rax],al
     f38:	08 00                	or     BYTE PTR [rax],al
     f3a:	00 00                	add    BYTE PTR [rax],al
     f3c:	00 00                	add    BYTE PTR [rax],al
     f3e:	00 00                	add    BYTE PTR [rax],al
     f40:	20 29                	and    BYTE PTR [rcx],ch
     f42:	00 00                	add    BYTE PTR [rax],al
     f44:	00 00                	add    BYTE PTR [rax],al
     f46:	00 00                	add    BYTE PTR [rax],al
     f48:	08 10                	or     BYTE PTR [rax],dl
     f4a:	01 00                	add    DWORD PTR [rax],eax
     f4c:	00 00                	add    BYTE PTR [rax],al
     f4e:	00 00                	add    BYTE PTR [rax],al
     f50:	08 00                	or     BYTE PTR [rax],al
     f52:	00 00                	add    BYTE PTR [rax],al
     f54:	00 00                	add    BYTE PTR [rax],al
     f56:	00 00                	add    BYTE PTR [rax],al
     f58:	08 10                	or     BYTE PTR [rax],dl
     f5a:	01 00                	add    DWORD PTR [rax],eax
     f5c:	00 00                	add    BYTE PTR [rax],al
     f5e:	00 00                	add    BYTE PTR [rax],al
     f60:	28 10                	sub    BYTE PTR [rax],dl
     f62:	01 00                	add    DWORD PTR [rax],eax
     f64:	00 00                	add    BYTE PTR [rax],al
     f66:	00 00                	add    BYTE PTR [rax],al
     f68:	08 00                	or     BYTE PTR [rax],al
     f6a:	00 00                	add    BYTE PTR [rax],al
     f6c:	00 00                	add    BYTE PTR [rax],al
     f6e:	00 00                	add    BYTE PTR [rax],al
     f70:	04 c0                	add    al,0xc0
     f72:	00 00                	add    BYTE PTR [rax],al
     f74:	00 00                	add    BYTE PTR [rax],al
     f76:	00 00                	add    BYTE PTR [rax],al
     f78:	30 10                	xor    BYTE PTR [rax],dl
     f7a:	01 00                	add    DWORD PTR [rax],eax
     f7c:	00 00                	add    BYTE PTR [rax],al
     f7e:	00 00                	add    BYTE PTR [rax],al
     f80:	08 00                	or     BYTE PTR [rax],al
     f82:	00 00                	add    BYTE PTR [rax],al
     f84:	00 00                	add    BYTE PTR [rax],al
     f86:	00 00                	add    BYTE PTR [rax],al
     f88:	1a c0                	sbb    al,al
     f8a:	00 00                	add    BYTE PTR [rax],al
     f8c:	00 00                	add    BYTE PTR [rax],al
     f8e:	00 00                	add    BYTE PTR [rax],al
     f90:	38 10                	cmp    BYTE PTR [rax],dl
     f92:	01 00                	add    DWORD PTR [rax],eax
     f94:	00 00                	add    BYTE PTR [rax],al
     f96:	00 00                	add    BYTE PTR [rax],al
     f98:	08 00                	or     BYTE PTR [rax],al
     f9a:	00 00                	add    BYTE PTR [rax],al
     f9c:	00 00                	add    BYTE PTR [rax],al
     f9e:	00 00                	add    BYTE PTR [rax],al
     fa0:	34 c0                	xor    al,0xc0
     fa2:	00 00                	add    BYTE PTR [rax],al
     fa4:	00 00                	add    BYTE PTR [rax],al
     fa6:	00 00                	add    BYTE PTR [rax],al
     fa8:	d8 0f                	fmul   DWORD PTR [rdi]
     faa:	01 00                	add    DWORD PTR [rax],eax
     fac:	00 00                	add    BYTE PTR [rax],al
     fae:	00 00                	add    BYTE PTR [rax],al
     fb0:	06                   	(bad)  
     fb1:	00 00                	add    BYTE PTR [rax],al
     fb3:	00 09                	add    BYTE PTR [rcx],cl
	...
     fbd:	00 00                	add    BYTE PTR [rax],al
     fbf:	00 e0                	add    al,ah
     fc1:	0f 01 00             	sgdt   [rax]
     fc4:	00 00                	add    BYTE PTR [rax],al
     fc6:	00 00                	add    BYTE PTR [rax],al
     fc8:	06                   	(bad)  
     fc9:	00 00                	add    BYTE PTR [rax],al
     fcb:	00 19                	add    BYTE PTR [rcx],bl
	...
     fd5:	00 00                	add    BYTE PTR [rax],al
     fd7:	00 e8                	add    al,ch
     fd9:	0f 01 00             	sgdt   [rax]
     fdc:	00 00                	add    BYTE PTR [rax],al
     fde:	00 00                	add    BYTE PTR [rax],al
     fe0:	06                   	(bad)  
     fe1:	00 00                	add    BYTE PTR [rax],al
     fe3:	00 1e                	add    BYTE PTR [rsi],bl
	...
     fed:	00 00                	add    BYTE PTR [rax],al
     fef:	00 f0                	add    al,dh
     ff1:	0f 01 00             	sgdt   [rax]
     ff4:	00 00                	add    BYTE PTR [rax],al
     ff6:	00 00                	add    BYTE PTR [rax],al
     ff8:	06                   	(bad)  
     ff9:	00 00                	add    BYTE PTR [rax],al
     ffb:	00 47 00             	add    BYTE PTR [rdi+0x0],al
	...
    1006:	00 00                	add    BYTE PTR [rax],al
    1008:	f8                   	clc    
    1009:	0f 01 00             	sgdt   [rax]
    100c:	00 00                	add    BYTE PTR [rax],al
    100e:	00 00                	add    BYTE PTR [rax],al
    1010:	06                   	(bad)  
    1011:	00 00                	add    BYTE PTR [rax],al
    1013:	00 43 00             	add    BYTE PTR [rbx+0x0],al
	...
    101e:	00 00                	add    BYTE PTR [rax],al
    1020:	60                   	(bad)  
    1021:	10 01                	adc    BYTE PTR [rcx],al
    1023:	00 00                	add    BYTE PTR [rax],al
    1025:	00 00                	add    BYTE PTR [rax],al
    1027:	00 05 00 00 00 49    	add    BYTE PTR [rip+0x49000000],al        # 4900102d <_end+0x48ec6025>
	...

Disassembly of section .rela.plt:

0000000000001038 <.rela.plt>:
    1038:	c8 0d 01 00          	enter  0x10d,0x0
    103c:	00 00                	add    BYTE PTR [rax],al
    103e:	00 00                	add    BYTE PTR [rax],al
    1040:	07                   	(bad)  
    1041:	00 00                	add    BYTE PTR [rax],al
    1043:	00 01                	add    BYTE PTR [rcx],al
	...
    104d:	00 00                	add    BYTE PTR [rax],al
    104f:	00 d0                	add    al,dl
    1051:	0d 01 00 00 00       	or     eax,0x1
    1056:	00 00                	add    BYTE PTR [rax],al
    1058:	07                   	(bad)  
    1059:	00 00                	add    BYTE PTR [rax],al
    105b:	00 02                	add    BYTE PTR [rdx],al
	...
    1065:	00 00                	add    BYTE PTR [rax],al
    1067:	00 d8                	add    al,bl
    1069:	0d 01 00 00 00       	or     eax,0x1
    106e:	00 00                	add    BYTE PTR [rax],al
    1070:	07                   	(bad)  
    1071:	00 00                	add    BYTE PTR [rax],al
    1073:	00 03                	add    BYTE PTR [rbx],al
	...
    107d:	00 00                	add    BYTE PTR [rax],al
    107f:	00 e0                	add    al,ah
    1081:	0d 01 00 00 00       	or     eax,0x1
    1086:	00 00                	add    BYTE PTR [rax],al
    1088:	07                   	(bad)  
    1089:	00 00                	add    BYTE PTR [rax],al
    108b:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
    1096:	00 00                	add    BYTE PTR [rax],al
    1098:	e8 0d 01 00 00       	call   11aa <__abi_tag+0xde6>
    109d:	00 00                	add    BYTE PTR [rax],al
    109f:	00 07                	add    BYTE PTR [rdi],al
    10a1:	00 00                	add    BYTE PTR [rax],al
    10a3:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 10a9 <__abi_tag+0xce5>
    10a9:	00 00                	add    BYTE PTR [rax],al
    10ab:	00 00                	add    BYTE PTR [rax],al
    10ad:	00 00                	add    BYTE PTR [rax],al
    10af:	00 f0                	add    al,dh
    10b1:	0d 01 00 00 00       	or     eax,0x1
    10b6:	00 00                	add    BYTE PTR [rax],al
    10b8:	07                   	(bad)  
    10b9:	00 00                	add    BYTE PTR [rax],al
    10bb:	00 06                	add    BYTE PTR [rsi],al
	...
    10c5:	00 00                	add    BYTE PTR [rax],al
    10c7:	00 f8                	add    al,bh
    10c9:	0d 01 00 00 00       	or     eax,0x1
    10ce:	00 00                	add    BYTE PTR [rax],al
    10d0:	07                   	(bad)  
    10d1:	00 00                	add    BYTE PTR [rax],al
    10d3:	00 07                	add    BYTE PTR [rdi],al
	...
    10e1:	0e                   	(bad)  
    10e2:	01 00                	add    DWORD PTR [rax],eax
    10e4:	00 00                	add    BYTE PTR [rax],al
    10e6:	00 00                	add    BYTE PTR [rax],al
    10e8:	07                   	(bad)  
    10e9:	00 00                	add    BYTE PTR [rax],al
    10eb:	00 08                	add    BYTE PTR [rax],cl
	...
    10f5:	00 00                	add    BYTE PTR [rax],al
    10f7:	00 08                	add    BYTE PTR [rax],cl
    10f9:	0e                   	(bad)  
    10fa:	01 00                	add    DWORD PTR [rax],eax
    10fc:	00 00                	add    BYTE PTR [rax],al
    10fe:	00 00                	add    BYTE PTR [rax],al
    1100:	07                   	(bad)  
    1101:	00 00                	add    BYTE PTR [rax],al
    1103:	00 0a                	add    BYTE PTR [rdx],cl
	...
    110d:	00 00                	add    BYTE PTR [rax],al
    110f:	00 10                	add    BYTE PTR [rax],dl
    1111:	0e                   	(bad)  
    1112:	01 00                	add    DWORD PTR [rax],eax
    1114:	00 00                	add    BYTE PTR [rax],al
    1116:	00 00                	add    BYTE PTR [rax],al
    1118:	07                   	(bad)  
    1119:	00 00                	add    BYTE PTR [rax],al
    111b:	00 0b                	add    BYTE PTR [rbx],cl
	...
    1125:	00 00                	add    BYTE PTR [rax],al
    1127:	00 18                	add    BYTE PTR [rax],bl
    1129:	0e                   	(bad)  
    112a:	01 00                	add    DWORD PTR [rax],eax
    112c:	00 00                	add    BYTE PTR [rax],al
    112e:	00 00                	add    BYTE PTR [rax],al
    1130:	07                   	(bad)  
    1131:	00 00                	add    BYTE PTR [rax],al
    1133:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
	...
    113e:	00 00                	add    BYTE PTR [rax],al
    1140:	20 0e                	and    BYTE PTR [rsi],cl
    1142:	01 00                	add    DWORD PTR [rax],eax
    1144:	00 00                	add    BYTE PTR [rax],al
    1146:	00 00                	add    BYTE PTR [rax],al
    1148:	07                   	(bad)  
    1149:	00 00                	add    BYTE PTR [rax],al
    114b:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 1151 <__abi_tag+0xd8d>
    1151:	00 00                	add    BYTE PTR [rax],al
    1153:	00 00                	add    BYTE PTR [rax],al
    1155:	00 00                	add    BYTE PTR [rax],al
    1157:	00 28                	add    BYTE PTR [rax],ch
    1159:	0e                   	(bad)  
    115a:	01 00                	add    DWORD PTR [rax],eax
    115c:	00 00                	add    BYTE PTR [rax],al
    115e:	00 00                	add    BYTE PTR [rax],al
    1160:	07                   	(bad)  
    1161:	00 00                	add    BYTE PTR [rax],al
    1163:	00 0e                	add    BYTE PTR [rsi],cl
	...
    116d:	00 00                	add    BYTE PTR [rax],al
    116f:	00 30                	add    BYTE PTR [rax],dh
    1171:	0e                   	(bad)  
    1172:	01 00                	add    DWORD PTR [rax],eax
    1174:	00 00                	add    BYTE PTR [rax],al
    1176:	00 00                	add    BYTE PTR [rax],al
    1178:	07                   	(bad)  
    1179:	00 00                	add    BYTE PTR [rax],al
    117b:	00 0f                	add    BYTE PTR [rdi],cl
	...
    1185:	00 00                	add    BYTE PTR [rax],al
    1187:	00 38                	add    BYTE PTR [rax],bh
    1189:	0e                   	(bad)  
    118a:	01 00                	add    DWORD PTR [rax],eax
    118c:	00 00                	add    BYTE PTR [rax],al
    118e:	00 00                	add    BYTE PTR [rax],al
    1190:	07                   	(bad)  
    1191:	00 00                	add    BYTE PTR [rax],al
    1193:	00 10                	add    BYTE PTR [rax],dl
	...
    119d:	00 00                	add    BYTE PTR [rax],al
    119f:	00 40 0e             	add    BYTE PTR [rax+0xe],al
    11a2:	01 00                	add    DWORD PTR [rax],eax
    11a4:	00 00                	add    BYTE PTR [rax],al
    11a6:	00 00                	add    BYTE PTR [rax],al
    11a8:	07                   	(bad)  
    11a9:	00 00                	add    BYTE PTR [rax],al
    11ab:	00 11                	add    BYTE PTR [rcx],dl
	...
    11b5:	00 00                	add    BYTE PTR [rax],al
    11b7:	00 48 0e             	add    BYTE PTR [rax+0xe],cl
    11ba:	01 00                	add    DWORD PTR [rax],eax
    11bc:	00 00                	add    BYTE PTR [rax],al
    11be:	00 00                	add    BYTE PTR [rax],al
    11c0:	07                   	(bad)  
    11c1:	00 00                	add    BYTE PTR [rax],al
    11c3:	00 12                	add    BYTE PTR [rdx],dl
	...
    11cd:	00 00                	add    BYTE PTR [rax],al
    11cf:	00 50 0e             	add    BYTE PTR [rax+0xe],dl
    11d2:	01 00                	add    DWORD PTR [rax],eax
    11d4:	00 00                	add    BYTE PTR [rax],al
    11d6:	00 00                	add    BYTE PTR [rax],al
    11d8:	07                   	(bad)  
    11d9:	00 00                	add    BYTE PTR [rax],al
    11db:	00 13                	add    BYTE PTR [rbx],dl
	...
    11e5:	00 00                	add    BYTE PTR [rax],al
    11e7:	00 58 0e             	add    BYTE PTR [rax+0xe],bl
    11ea:	01 00                	add    DWORD PTR [rax],eax
    11ec:	00 00                	add    BYTE PTR [rax],al
    11ee:	00 00                	add    BYTE PTR [rax],al
    11f0:	07                   	(bad)  
    11f1:	00 00                	add    BYTE PTR [rax],al
    11f3:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
	...
    11fe:	00 00                	add    BYTE PTR [rax],al
    1200:	60                   	(bad)  
    1201:	0e                   	(bad)  
    1202:	01 00                	add    DWORD PTR [rax],eax
    1204:	00 00                	add    BYTE PTR [rax],al
    1206:	00 00                	add    BYTE PTR [rax],al
    1208:	07                   	(bad)  
    1209:	00 00                	add    BYTE PTR [rax],al
    120b:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 1211 <__abi_tag+0xe4d>
    1211:	00 00                	add    BYTE PTR [rax],al
    1213:	00 00                	add    BYTE PTR [rax],al
    1215:	00 00                	add    BYTE PTR [rax],al
    1217:	00 68 0e             	add    BYTE PTR [rax+0xe],ch
    121a:	01 00                	add    DWORD PTR [rax],eax
    121c:	00 00                	add    BYTE PTR [rax],al
    121e:	00 00                	add    BYTE PTR [rax],al
    1220:	07                   	(bad)  
    1221:	00 00                	add    BYTE PTR [rax],al
    1223:	00 16                	add    BYTE PTR [rsi],dl
	...
    122d:	00 00                	add    BYTE PTR [rax],al
    122f:	00 70 0e             	add    BYTE PTR [rax+0xe],dh
    1232:	01 00                	add    DWORD PTR [rax],eax
    1234:	00 00                	add    BYTE PTR [rax],al
    1236:	00 00                	add    BYTE PTR [rax],al
    1238:	07                   	(bad)  
    1239:	00 00                	add    BYTE PTR [rax],al
    123b:	00 17                	add    BYTE PTR [rdi],dl
	...
    1245:	00 00                	add    BYTE PTR [rax],al
    1247:	00 78 0e             	add    BYTE PTR [rax+0xe],bh
    124a:	01 00                	add    DWORD PTR [rax],eax
    124c:	00 00                	add    BYTE PTR [rax],al
    124e:	00 00                	add    BYTE PTR [rax],al
    1250:	07                   	(bad)  
    1251:	00 00                	add    BYTE PTR [rax],al
    1253:	00 18                	add    BYTE PTR [rax],bl
	...
    125d:	00 00                	add    BYTE PTR [rax],al
    125f:	00 80 0e 01 00 00    	add    BYTE PTR [rax+0x10e],al
    1265:	00 00                	add    BYTE PTR [rax],al
    1267:	00 07                	add    BYTE PTR [rdi],al
    1269:	00 00                	add    BYTE PTR [rax],al
    126b:	00 1a                	add    BYTE PTR [rdx],bl
	...
    1275:	00 00                	add    BYTE PTR [rax],al
    1277:	00 88 0e 01 00 00    	add    BYTE PTR [rax+0x10e],cl
    127d:	00 00                	add    BYTE PTR [rax],al
    127f:	00 07                	add    BYTE PTR [rdi],al
    1281:	00 00                	add    BYTE PTR [rax],al
    1283:	00 1b                	add    BYTE PTR [rbx],bl
	...
    128d:	00 00                	add    BYTE PTR [rax],al
    128f:	00 90 0e 01 00 00    	add    BYTE PTR [rax+0x10e],dl
    1295:	00 00                	add    BYTE PTR [rax],al
    1297:	00 07                	add    BYTE PTR [rdi],al
    1299:	00 00                	add    BYTE PTR [rax],al
    129b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
	...
    12a6:	00 00                	add    BYTE PTR [rax],al
    12a8:	98                   	cwde   
    12a9:	0e                   	(bad)  
    12aa:	01 00                	add    DWORD PTR [rax],eax
    12ac:	00 00                	add    BYTE PTR [rax],al
    12ae:	00 00                	add    BYTE PTR [rax],al
    12b0:	07                   	(bad)  
    12b1:	00 00                	add    BYTE PTR [rax],al
    12b3:	00 1d 00 00 00 00    	add    BYTE PTR [rip+0x0],bl        # 12b9 <__abi_tag+0xef5>
    12b9:	00 00                	add    BYTE PTR [rax],al
    12bb:	00 00                	add    BYTE PTR [rax],al
    12bd:	00 00                	add    BYTE PTR [rax],al
    12bf:	00 a0 0e 01 00 00    	add    BYTE PTR [rax+0x10e],ah
    12c5:	00 00                	add    BYTE PTR [rax],al
    12c7:	00 07                	add    BYTE PTR [rdi],al
    12c9:	00 00                	add    BYTE PTR [rax],al
    12cb:	00 1f                	add    BYTE PTR [rdi],bl
	...
    12d5:	00 00                	add    BYTE PTR [rax],al
    12d7:	00 a8 0e 01 00 00    	add    BYTE PTR [rax+0x10e],ch
    12dd:	00 00                	add    BYTE PTR [rax],al
    12df:	00 07                	add    BYTE PTR [rdi],al
    12e1:	00 00                	add    BYTE PTR [rax],al
    12e3:	00 20                	add    BYTE PTR [rax],ah
	...
    12ed:	00 00                	add    BYTE PTR [rax],al
    12ef:	00 b0 0e 01 00 00    	add    BYTE PTR [rax+0x10e],dh
    12f5:	00 00                	add    BYTE PTR [rax],al
    12f7:	00 07                	add    BYTE PTR [rdi],al
    12f9:	00 00                	add    BYTE PTR [rax],al
    12fb:	00 21                	add    BYTE PTR [rcx],ah
	...
    1305:	00 00                	add    BYTE PTR [rax],al
    1307:	00 b8 0e 01 00 00    	add    BYTE PTR [rax+0x10e],bh
    130d:	00 00                	add    BYTE PTR [rax],al
    130f:	00 07                	add    BYTE PTR [rdi],al
    1311:	00 00                	add    BYTE PTR [rax],al
    1313:	00 22                	add    BYTE PTR [rdx],ah
	...
    131d:	00 00                	add    BYTE PTR [rax],al
    131f:	00 c0                	add    al,al
    1321:	0e                   	(bad)  
    1322:	01 00                	add    DWORD PTR [rax],eax
    1324:	00 00                	add    BYTE PTR [rax],al
    1326:	00 00                	add    BYTE PTR [rax],al
    1328:	07                   	(bad)  
    1329:	00 00                	add    BYTE PTR [rax],al
    132b:	00 23                	add    BYTE PTR [rbx],ah
	...
    1335:	00 00                	add    BYTE PTR [rax],al
    1337:	00 c8                	add    al,cl
    1339:	0e                   	(bad)  
    133a:	01 00                	add    DWORD PTR [rax],eax
    133c:	00 00                	add    BYTE PTR [rax],al
    133e:	00 00                	add    BYTE PTR [rax],al
    1340:	07                   	(bad)  
    1341:	00 00                	add    BYTE PTR [rax],al
    1343:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
	...
    134e:	00 00                	add    BYTE PTR [rax],al
    1350:	d0 0e                	ror    BYTE PTR [rsi],1
    1352:	01 00                	add    DWORD PTR [rax],eax
    1354:	00 00                	add    BYTE PTR [rax],al
    1356:	00 00                	add    BYTE PTR [rax],al
    1358:	07                   	(bad)  
    1359:	00 00                	add    BYTE PTR [rax],al
    135b:	00 25 00 00 00 00    	add    BYTE PTR [rip+0x0],ah        # 1361 <__abi_tag+0xf9d>
    1361:	00 00                	add    BYTE PTR [rax],al
    1363:	00 00                	add    BYTE PTR [rax],al
    1365:	00 00                	add    BYTE PTR [rax],al
    1367:	00 d8                	add    al,bl
    1369:	0e                   	(bad)  
    136a:	01 00                	add    DWORD PTR [rax],eax
    136c:	00 00                	add    BYTE PTR [rax],al
    136e:	00 00                	add    BYTE PTR [rax],al
    1370:	07                   	(bad)  
    1371:	00 00                	add    BYTE PTR [rax],al
    1373:	00 26                	add    BYTE PTR [rsi],ah
	...
    137d:	00 00                	add    BYTE PTR [rax],al
    137f:	00 e0                	add    al,ah
    1381:	0e                   	(bad)  
    1382:	01 00                	add    DWORD PTR [rax],eax
    1384:	00 00                	add    BYTE PTR [rax],al
    1386:	00 00                	add    BYTE PTR [rax],al
    1388:	07                   	(bad)  
    1389:	00 00                	add    BYTE PTR [rax],al
    138b:	00 27                	add    BYTE PTR [rdi],ah
	...
    1395:	00 00                	add    BYTE PTR [rax],al
    1397:	00 e8                	add    al,ch
    1399:	0e                   	(bad)  
    139a:	01 00                	add    DWORD PTR [rax],eax
    139c:	00 00                	add    BYTE PTR [rax],al
    139e:	00 00                	add    BYTE PTR [rax],al
    13a0:	07                   	(bad)  
    13a1:	00 00                	add    BYTE PTR [rax],al
    13a3:	00 28                	add    BYTE PTR [rax],ch
	...
    13ad:	00 00                	add    BYTE PTR [rax],al
    13af:	00 f0                	add    al,dh
    13b1:	0e                   	(bad)  
    13b2:	01 00                	add    DWORD PTR [rax],eax
    13b4:	00 00                	add    BYTE PTR [rax],al
    13b6:	00 00                	add    BYTE PTR [rax],al
    13b8:	07                   	(bad)  
    13b9:	00 00                	add    BYTE PTR [rax],al
    13bb:	00 29                	add    BYTE PTR [rcx],ch
	...
    13c5:	00 00                	add    BYTE PTR [rax],al
    13c7:	00 f8                	add    al,bh
    13c9:	0e                   	(bad)  
    13ca:	01 00                	add    DWORD PTR [rax],eax
    13cc:	00 00                	add    BYTE PTR [rax],al
    13ce:	00 00                	add    BYTE PTR [rax],al
    13d0:	07                   	(bad)  
    13d1:	00 00                	add    BYTE PTR [rax],al
    13d3:	00 2a                	add    BYTE PTR [rdx],ch
	...
    13e1:	0f 01 00             	sgdt   [rax]
    13e4:	00 00                	add    BYTE PTR [rax],al
    13e6:	00 00                	add    BYTE PTR [rax],al
    13e8:	07                   	(bad)  
    13e9:	00 00                	add    BYTE PTR [rax],al
    13eb:	00 2b                	add    BYTE PTR [rbx],ch
	...
    13f5:	00 00                	add    BYTE PTR [rax],al
    13f7:	00 08                	add    BYTE PTR [rax],cl
    13f9:	0f 01 00             	sgdt   [rax]
    13fc:	00 00                	add    BYTE PTR [rax],al
    13fe:	00 00                	add    BYTE PTR [rax],al
    1400:	07                   	(bad)  
    1401:	00 00                	add    BYTE PTR [rax],al
    1403:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
	...
    140e:	00 00                	add    BYTE PTR [rax],al
    1410:	10 0f                	adc    BYTE PTR [rdi],cl
    1412:	01 00                	add    DWORD PTR [rax],eax
    1414:	00 00                	add    BYTE PTR [rax],al
    1416:	00 00                	add    BYTE PTR [rax],al
    1418:	07                   	(bad)  
    1419:	00 00                	add    BYTE PTR [rax],al
    141b:	00 2d 00 00 00 00    	add    BYTE PTR [rip+0x0],ch        # 1421 <__abi_tag+0x105d>
    1421:	00 00                	add    BYTE PTR [rax],al
    1423:	00 00                	add    BYTE PTR [rax],al
    1425:	00 00                	add    BYTE PTR [rax],al
    1427:	00 18                	add    BYTE PTR [rax],bl
    1429:	0f 01 00             	sgdt   [rax]
    142c:	00 00                	add    BYTE PTR [rax],al
    142e:	00 00                	add    BYTE PTR [rax],al
    1430:	07                   	(bad)  
    1431:	00 00                	add    BYTE PTR [rax],al
    1433:	00 2e                	add    BYTE PTR [rsi],ch
	...
    143d:	00 00                	add    BYTE PTR [rax],al
    143f:	00 20                	add    BYTE PTR [rax],ah
    1441:	0f 01 00             	sgdt   [rax]
    1444:	00 00                	add    BYTE PTR [rax],al
    1446:	00 00                	add    BYTE PTR [rax],al
    1448:	07                   	(bad)  
    1449:	00 00                	add    BYTE PTR [rax],al
    144b:	00 2f                	add    BYTE PTR [rdi],ch
	...
    1455:	00 00                	add    BYTE PTR [rax],al
    1457:	00 28                	add    BYTE PTR [rax],ch
    1459:	0f 01 00             	sgdt   [rax]
    145c:	00 00                	add    BYTE PTR [rax],al
    145e:	00 00                	add    BYTE PTR [rax],al
    1460:	07                   	(bad)  
    1461:	00 00                	add    BYTE PTR [rax],al
    1463:	00 30                	add    BYTE PTR [rax],dh
	...
    146d:	00 00                	add    BYTE PTR [rax],al
    146f:	00 30                	add    BYTE PTR [rax],dh
    1471:	0f 01 00             	sgdt   [rax]
    1474:	00 00                	add    BYTE PTR [rax],al
    1476:	00 00                	add    BYTE PTR [rax],al
    1478:	07                   	(bad)  
    1479:	00 00                	add    BYTE PTR [rax],al
    147b:	00 31                	add    BYTE PTR [rcx],dh
	...
    1485:	00 00                	add    BYTE PTR [rax],al
    1487:	00 38                	add    BYTE PTR [rax],bh
    1489:	0f 01 00             	sgdt   [rax]
    148c:	00 00                	add    BYTE PTR [rax],al
    148e:	00 00                	add    BYTE PTR [rax],al
    1490:	07                   	(bad)  
    1491:	00 00                	add    BYTE PTR [rax],al
    1493:	00 32                	add    BYTE PTR [rdx],dh
	...
    149d:	00 00                	add    BYTE PTR [rax],al
    149f:	00 40 0f             	add    BYTE PTR [rax+0xf],al
    14a2:	01 00                	add    DWORD PTR [rax],eax
    14a4:	00 00                	add    BYTE PTR [rax],al
    14a6:	00 00                	add    BYTE PTR [rax],al
    14a8:	07                   	(bad)  
    14a9:	00 00                	add    BYTE PTR [rax],al
    14ab:	00 33                	add    BYTE PTR [rbx],dh
	...
    14b5:	00 00                	add    BYTE PTR [rax],al
    14b7:	00 48 0f             	add    BYTE PTR [rax+0xf],cl
    14ba:	01 00                	add    DWORD PTR [rax],eax
    14bc:	00 00                	add    BYTE PTR [rax],al
    14be:	00 00                	add    BYTE PTR [rax],al
    14c0:	07                   	(bad)  
    14c1:	00 00                	add    BYTE PTR [rax],al
    14c3:	00 34 00             	add    BYTE PTR [rax+rax*1],dh
	...
    14ce:	00 00                	add    BYTE PTR [rax],al
    14d0:	50                   	push   rax
    14d1:	0f 01 00             	sgdt   [rax]
    14d4:	00 00                	add    BYTE PTR [rax],al
    14d6:	00 00                	add    BYTE PTR [rax],al
    14d8:	07                   	(bad)  
    14d9:	00 00                	add    BYTE PTR [rax],al
    14db:	00 35 00 00 00 00    	add    BYTE PTR [rip+0x0],dh        # 14e1 <__abi_tag+0x111d>
    14e1:	00 00                	add    BYTE PTR [rax],al
    14e3:	00 00                	add    BYTE PTR [rax],al
    14e5:	00 00                	add    BYTE PTR [rax],al
    14e7:	00 58 0f             	add    BYTE PTR [rax+0xf],bl
    14ea:	01 00                	add    DWORD PTR [rax],eax
    14ec:	00 00                	add    BYTE PTR [rax],al
    14ee:	00 00                	add    BYTE PTR [rax],al
    14f0:	07                   	(bad)  
    14f1:	00 00                	add    BYTE PTR [rax],al
    14f3:	00 36                	add    BYTE PTR [rsi],dh
	...
    14fd:	00 00                	add    BYTE PTR [rax],al
    14ff:	00 60 0f             	add    BYTE PTR [rax+0xf],ah
    1502:	01 00                	add    DWORD PTR [rax],eax
    1504:	00 00                	add    BYTE PTR [rax],al
    1506:	00 00                	add    BYTE PTR [rax],al
    1508:	07                   	(bad)  
    1509:	00 00                	add    BYTE PTR [rax],al
    150b:	00 37                	add    BYTE PTR [rdi],dh
	...
    1515:	00 00                	add    BYTE PTR [rax],al
    1517:	00 68 0f             	add    BYTE PTR [rax+0xf],ch
    151a:	01 00                	add    DWORD PTR [rax],eax
    151c:	00 00                	add    BYTE PTR [rax],al
    151e:	00 00                	add    BYTE PTR [rax],al
    1520:	07                   	(bad)  
    1521:	00 00                	add    BYTE PTR [rax],al
    1523:	00 38                	add    BYTE PTR [rax],bh
	...
    152d:	00 00                	add    BYTE PTR [rax],al
    152f:	00 70 0f             	add    BYTE PTR [rax+0xf],dh
    1532:	01 00                	add    DWORD PTR [rax],eax
    1534:	00 00                	add    BYTE PTR [rax],al
    1536:	00 00                	add    BYTE PTR [rax],al
    1538:	07                   	(bad)  
    1539:	00 00                	add    BYTE PTR [rax],al
    153b:	00 39                	add    BYTE PTR [rcx],bh
	...
    1545:	00 00                	add    BYTE PTR [rax],al
    1547:	00 78 0f             	add    BYTE PTR [rax+0xf],bh
    154a:	01 00                	add    DWORD PTR [rax],eax
    154c:	00 00                	add    BYTE PTR [rax],al
    154e:	00 00                	add    BYTE PTR [rax],al
    1550:	07                   	(bad)  
    1551:	00 00                	add    BYTE PTR [rax],al
    1553:	00 3a                	add    BYTE PTR [rdx],bh
	...
    155d:	00 00                	add    BYTE PTR [rax],al
    155f:	00 80 0f 01 00 00    	add    BYTE PTR [rax+0x10f],al
    1565:	00 00                	add    BYTE PTR [rax],al
    1567:	00 07                	add    BYTE PTR [rdi],al
    1569:	00 00                	add    BYTE PTR [rax],al
    156b:	00 3b                	add    BYTE PTR [rbx],bh
	...
    1575:	00 00                	add    BYTE PTR [rax],al
    1577:	00 88 0f 01 00 00    	add    BYTE PTR [rax+0x10f],cl
    157d:	00 00                	add    BYTE PTR [rax],al
    157f:	00 07                	add    BYTE PTR [rdi],al
    1581:	00 00                	add    BYTE PTR [rax],al
    1583:	00 3c 00             	add    BYTE PTR [rax+rax*1],bh
	...
    158e:	00 00                	add    BYTE PTR [rax],al
    1590:	90                   	nop
    1591:	0f 01 00             	sgdt   [rax]
    1594:	00 00                	add    BYTE PTR [rax],al
    1596:	00 00                	add    BYTE PTR [rax],al
    1598:	07                   	(bad)  
    1599:	00 00                	add    BYTE PTR [rax],al
    159b:	00 3d 00 00 00 00    	add    BYTE PTR [rip+0x0],bh        # 15a1 <__abi_tag+0x11dd>
    15a1:	00 00                	add    BYTE PTR [rax],al
    15a3:	00 00                	add    BYTE PTR [rax],al
    15a5:	00 00                	add    BYTE PTR [rax],al
    15a7:	00 98 0f 01 00 00    	add    BYTE PTR [rax+0x10f],bl
    15ad:	00 00                	add    BYTE PTR [rax],al
    15af:	00 07                	add    BYTE PTR [rdi],al
    15b1:	00 00                	add    BYTE PTR [rax],al
    15b3:	00 3e                	add    BYTE PTR [rsi],bh
	...
    15bd:	00 00                	add    BYTE PTR [rax],al
    15bf:	00 a0 0f 01 00 00    	add    BYTE PTR [rax+0x10f],ah
    15c5:	00 00                	add    BYTE PTR [rax],al
    15c7:	00 07                	add    BYTE PTR [rdi],al
    15c9:	00 00                	add    BYTE PTR [rax],al
    15cb:	00 3f                	add    BYTE PTR [rdi],bh
	...
    15d5:	00 00                	add    BYTE PTR [rax],al
    15d7:	00 a8 0f 01 00 00    	add    BYTE PTR [rax+0x10f],ch
    15dd:	00 00                	add    BYTE PTR [rax],al
    15df:	00 07                	add    BYTE PTR [rdi],al
    15e1:	00 00                	add    BYTE PTR [rax],al
    15e3:	00 40 00             	add    BYTE PTR [rax+0x0],al
	...
    15ee:	00 00                	add    BYTE PTR [rax],al
    15f0:	b0 0f                	mov    al,0xf
    15f2:	01 00                	add    DWORD PTR [rax],eax
    15f4:	00 00                	add    BYTE PTR [rax],al
    15f6:	00 00                	add    BYTE PTR [rax],al
    15f8:	07                   	(bad)  
    15f9:	00 00                	add    BYTE PTR [rax],al
    15fb:	00 41 00             	add    BYTE PTR [rcx+0x0],al
	...
    1606:	00 00                	add    BYTE PTR [rax],al
    1608:	b8 0f 01 00 00       	mov    eax,0x10f
    160d:	00 00                	add    BYTE PTR [rax],al
    160f:	00 07                	add    BYTE PTR [rdi],al
    1611:	00 00                	add    BYTE PTR [rax],al
    1613:	00 42 00             	add    BYTE PTR [rdx+0x0],al
	...
    161e:	00 00                	add    BYTE PTR [rax],al
    1620:	c0 0f 01             	ror    BYTE PTR [rdi],0x1
    1623:	00 00                	add    BYTE PTR [rax],al
    1625:	00 00                	add    BYTE PTR [rax],al
    1627:	00 07                	add    BYTE PTR [rdi],al
    1629:	00 00                	add    BYTE PTR [rax],al
    162b:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
	...
    1637:	00 c8                	add    al,cl
    1639:	0f 01 00             	sgdt   [rax]
    163c:	00 00                	add    BYTE PTR [rax],al
    163e:	00 00                	add    BYTE PTR [rax],al
    1640:	07                   	(bad)  
    1641:	00 00                	add    BYTE PTR [rax],al
    1643:	00 45 00             	add    BYTE PTR [rbp+0x0],al
	...
    164e:	00 00                	add    BYTE PTR [rax],al
    1650:	d0 0f                	ror    BYTE PTR [rdi],1
    1652:	01 00                	add    DWORD PTR [rax],eax
    1654:	00 00                	add    BYTE PTR [rax],al
    1656:	00 00                	add    BYTE PTR [rax],al
    1658:	07                   	(bad)  
    1659:	00 00                	add    BYTE PTR [rax],al
    165b:	00 46 00             	add    BYTE PTR [rsi+0x0],al
	...

Disassembly of section .init:

0000000000002000 <_init>:
    2000:	f3 0f 1e fa          	endbr64 
    2004:	48 83 ec 08          	sub    rsp,0x8
    2008:	48 8b 05 c9 ef 00 00 	mov    rax,QWORD PTR [rip+0xefc9]        # 10fd8 <__gmon_start__>
    200f:	48 85 c0             	test   rax,rax
    2012:	74 02                	je     2016 <_init+0x16>
    2014:	ff d0                	call   rax
    2016:	48 83 c4 08          	add    rsp,0x8
    201a:	c3                   	ret    

Disassembly of section .plt:

0000000000002020 <.plt>:
    2020:	ff 35 92 ed 00 00    	push   QWORD PTR [rip+0xed92]        # 10db8 <_GLOBAL_OFFSET_TABLE_+0x8>
    2026:	f2 ff 25 93 ed 00 00 	bnd jmp QWORD PTR [rip+0xed93]        # 10dc0 <_GLOBAL_OFFSET_TABLE_+0x10>
    202d:	0f 1f 00             	nop    DWORD PTR [rax]
    2030:	f3 0f 1e fa          	endbr64 
    2034:	68 00 00 00 00       	push   0x0
    2039:	f2 e9 e1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    203f:	90                   	nop
    2040:	f3 0f 1e fa          	endbr64 
    2044:	68 01 00 00 00       	push   0x1
    2049:	f2 e9 d1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    204f:	90                   	nop
    2050:	f3 0f 1e fa          	endbr64 
    2054:	68 02 00 00 00       	push   0x2
    2059:	f2 e9 c1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    205f:	90                   	nop
    2060:	f3 0f 1e fa          	endbr64 
    2064:	68 03 00 00 00       	push   0x3
    2069:	f2 e9 b1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    206f:	90                   	nop
    2070:	f3 0f 1e fa          	endbr64 
    2074:	68 04 00 00 00       	push   0x4
    2079:	f2 e9 a1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    207f:	90                   	nop
    2080:	f3 0f 1e fa          	endbr64 
    2084:	68 05 00 00 00       	push   0x5
    2089:	f2 e9 91 ff ff ff    	bnd jmp 2020 <_init+0x20>
    208f:	90                   	nop
    2090:	f3 0f 1e fa          	endbr64 
    2094:	68 06 00 00 00       	push   0x6
    2099:	f2 e9 81 ff ff ff    	bnd jmp 2020 <_init+0x20>
    209f:	90                   	nop
    20a0:	f3 0f 1e fa          	endbr64 
    20a4:	68 07 00 00 00       	push   0x7
    20a9:	f2 e9 71 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20af:	90                   	nop
    20b0:	f3 0f 1e fa          	endbr64 
    20b4:	68 08 00 00 00       	push   0x8
    20b9:	f2 e9 61 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20bf:	90                   	nop
    20c0:	f3 0f 1e fa          	endbr64 
    20c4:	68 09 00 00 00       	push   0x9
    20c9:	f2 e9 51 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20cf:	90                   	nop
    20d0:	f3 0f 1e fa          	endbr64 
    20d4:	68 0a 00 00 00       	push   0xa
    20d9:	f2 e9 41 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20df:	90                   	nop
    20e0:	f3 0f 1e fa          	endbr64 
    20e4:	68 0b 00 00 00       	push   0xb
    20e9:	f2 e9 31 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20ef:	90                   	nop
    20f0:	f3 0f 1e fa          	endbr64 
    20f4:	68 0c 00 00 00       	push   0xc
    20f9:	f2 e9 21 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20ff:	90                   	nop
    2100:	f3 0f 1e fa          	endbr64 
    2104:	68 0d 00 00 00       	push   0xd
    2109:	f2 e9 11 ff ff ff    	bnd jmp 2020 <_init+0x20>
    210f:	90                   	nop
    2110:	f3 0f 1e fa          	endbr64 
    2114:	68 0e 00 00 00       	push   0xe
    2119:	f2 e9 01 ff ff ff    	bnd jmp 2020 <_init+0x20>
    211f:	90                   	nop
    2120:	f3 0f 1e fa          	endbr64 
    2124:	68 0f 00 00 00       	push   0xf
    2129:	f2 e9 f1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    212f:	90                   	nop
    2130:	f3 0f 1e fa          	endbr64 
    2134:	68 10 00 00 00       	push   0x10
    2139:	f2 e9 e1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    213f:	90                   	nop
    2140:	f3 0f 1e fa          	endbr64 
    2144:	68 11 00 00 00       	push   0x11
    2149:	f2 e9 d1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    214f:	90                   	nop
    2150:	f3 0f 1e fa          	endbr64 
    2154:	68 12 00 00 00       	push   0x12
    2159:	f2 e9 c1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    215f:	90                   	nop
    2160:	f3 0f 1e fa          	endbr64 
    2164:	68 13 00 00 00       	push   0x13
    2169:	f2 e9 b1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    216f:	90                   	nop
    2170:	f3 0f 1e fa          	endbr64 
    2174:	68 14 00 00 00       	push   0x14
    2179:	f2 e9 a1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    217f:	90                   	nop
    2180:	f3 0f 1e fa          	endbr64 
    2184:	68 15 00 00 00       	push   0x15
    2189:	f2 e9 91 fe ff ff    	bnd jmp 2020 <_init+0x20>
    218f:	90                   	nop
    2190:	f3 0f 1e fa          	endbr64 
    2194:	68 16 00 00 00       	push   0x16
    2199:	f2 e9 81 fe ff ff    	bnd jmp 2020 <_init+0x20>
    219f:	90                   	nop
    21a0:	f3 0f 1e fa          	endbr64 
    21a4:	68 17 00 00 00       	push   0x17
    21a9:	f2 e9 71 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21af:	90                   	nop
    21b0:	f3 0f 1e fa          	endbr64 
    21b4:	68 18 00 00 00       	push   0x18
    21b9:	f2 e9 61 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21bf:	90                   	nop
    21c0:	f3 0f 1e fa          	endbr64 
    21c4:	68 19 00 00 00       	push   0x19
    21c9:	f2 e9 51 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21cf:	90                   	nop
    21d0:	f3 0f 1e fa          	endbr64 
    21d4:	68 1a 00 00 00       	push   0x1a
    21d9:	f2 e9 41 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21df:	90                   	nop
    21e0:	f3 0f 1e fa          	endbr64 
    21e4:	68 1b 00 00 00       	push   0x1b
    21e9:	f2 e9 31 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21ef:	90                   	nop
    21f0:	f3 0f 1e fa          	endbr64 
    21f4:	68 1c 00 00 00       	push   0x1c
    21f9:	f2 e9 21 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21ff:	90                   	nop
    2200:	f3 0f 1e fa          	endbr64 
    2204:	68 1d 00 00 00       	push   0x1d
    2209:	f2 e9 11 fe ff ff    	bnd jmp 2020 <_init+0x20>
    220f:	90                   	nop
    2210:	f3 0f 1e fa          	endbr64 
    2214:	68 1e 00 00 00       	push   0x1e
    2219:	f2 e9 01 fe ff ff    	bnd jmp 2020 <_init+0x20>
    221f:	90                   	nop
    2220:	f3 0f 1e fa          	endbr64 
    2224:	68 1f 00 00 00       	push   0x1f
    2229:	f2 e9 f1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    222f:	90                   	nop
    2230:	f3 0f 1e fa          	endbr64 
    2234:	68 20 00 00 00       	push   0x20
    2239:	f2 e9 e1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    223f:	90                   	nop
    2240:	f3 0f 1e fa          	endbr64 
    2244:	68 21 00 00 00       	push   0x21
    2249:	f2 e9 d1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    224f:	90                   	nop
    2250:	f3 0f 1e fa          	endbr64 
    2254:	68 22 00 00 00       	push   0x22
    2259:	f2 e9 c1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    225f:	90                   	nop
    2260:	f3 0f 1e fa          	endbr64 
    2264:	68 23 00 00 00       	push   0x23
    2269:	f2 e9 b1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    226f:	90                   	nop
    2270:	f3 0f 1e fa          	endbr64 
    2274:	68 24 00 00 00       	push   0x24
    2279:	f2 e9 a1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    227f:	90                   	nop
    2280:	f3 0f 1e fa          	endbr64 
    2284:	68 25 00 00 00       	push   0x25
    2289:	f2 e9 91 fd ff ff    	bnd jmp 2020 <_init+0x20>
    228f:	90                   	nop
    2290:	f3 0f 1e fa          	endbr64 
    2294:	68 26 00 00 00       	push   0x26
    2299:	f2 e9 81 fd ff ff    	bnd jmp 2020 <_init+0x20>
    229f:	90                   	nop
    22a0:	f3 0f 1e fa          	endbr64 
    22a4:	68 27 00 00 00       	push   0x27
    22a9:	f2 e9 71 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22af:	90                   	nop
    22b0:	f3 0f 1e fa          	endbr64 
    22b4:	68 28 00 00 00       	push   0x28
    22b9:	f2 e9 61 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22bf:	90                   	nop
    22c0:	f3 0f 1e fa          	endbr64 
    22c4:	68 29 00 00 00       	push   0x29
    22c9:	f2 e9 51 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22cf:	90                   	nop
    22d0:	f3 0f 1e fa          	endbr64 
    22d4:	68 2a 00 00 00       	push   0x2a
    22d9:	f2 e9 41 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22df:	90                   	nop
    22e0:	f3 0f 1e fa          	endbr64 
    22e4:	68 2b 00 00 00       	push   0x2b
    22e9:	f2 e9 31 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22ef:	90                   	nop
    22f0:	f3 0f 1e fa          	endbr64 
    22f4:	68 2c 00 00 00       	push   0x2c
    22f9:	f2 e9 21 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22ff:	90                   	nop
    2300:	f3 0f 1e fa          	endbr64 
    2304:	68 2d 00 00 00       	push   0x2d
    2309:	f2 e9 11 fd ff ff    	bnd jmp 2020 <_init+0x20>
    230f:	90                   	nop
    2310:	f3 0f 1e fa          	endbr64 
    2314:	68 2e 00 00 00       	push   0x2e
    2319:	f2 e9 01 fd ff ff    	bnd jmp 2020 <_init+0x20>
    231f:	90                   	nop
    2320:	f3 0f 1e fa          	endbr64 
    2324:	68 2f 00 00 00       	push   0x2f
    2329:	f2 e9 f1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    232f:	90                   	nop
    2330:	f3 0f 1e fa          	endbr64 
    2334:	68 30 00 00 00       	push   0x30
    2339:	f2 e9 e1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    233f:	90                   	nop
    2340:	f3 0f 1e fa          	endbr64 
    2344:	68 31 00 00 00       	push   0x31
    2349:	f2 e9 d1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    234f:	90                   	nop
    2350:	f3 0f 1e fa          	endbr64 
    2354:	68 32 00 00 00       	push   0x32
    2359:	f2 e9 c1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    235f:	90                   	nop
    2360:	f3 0f 1e fa          	endbr64 
    2364:	68 33 00 00 00       	push   0x33
    2369:	f2 e9 b1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    236f:	90                   	nop
    2370:	f3 0f 1e fa          	endbr64 
    2374:	68 34 00 00 00       	push   0x34
    2379:	f2 e9 a1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    237f:	90                   	nop
    2380:	f3 0f 1e fa          	endbr64 
    2384:	68 35 00 00 00       	push   0x35
    2389:	f2 e9 91 fc ff ff    	bnd jmp 2020 <_init+0x20>
    238f:	90                   	nop
    2390:	f3 0f 1e fa          	endbr64 
    2394:	68 36 00 00 00       	push   0x36
    2399:	f2 e9 81 fc ff ff    	bnd jmp 2020 <_init+0x20>
    239f:	90                   	nop
    23a0:	f3 0f 1e fa          	endbr64 
    23a4:	68 37 00 00 00       	push   0x37
    23a9:	f2 e9 71 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23af:	90                   	nop
    23b0:	f3 0f 1e fa          	endbr64 
    23b4:	68 38 00 00 00       	push   0x38
    23b9:	f2 e9 61 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23bf:	90                   	nop
    23c0:	f3 0f 1e fa          	endbr64 
    23c4:	68 39 00 00 00       	push   0x39
    23c9:	f2 e9 51 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23cf:	90                   	nop
    23d0:	f3 0f 1e fa          	endbr64 
    23d4:	68 3a 00 00 00       	push   0x3a
    23d9:	f2 e9 41 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23df:	90                   	nop
    23e0:	f3 0f 1e fa          	endbr64 
    23e4:	68 3b 00 00 00       	push   0x3b
    23e9:	f2 e9 31 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23ef:	90                   	nop
    23f0:	f3 0f 1e fa          	endbr64 
    23f4:	68 3c 00 00 00       	push   0x3c
    23f9:	f2 e9 21 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23ff:	90                   	nop
    2400:	f3 0f 1e fa          	endbr64 
    2404:	68 3d 00 00 00       	push   0x3d
    2409:	f2 e9 11 fc ff ff    	bnd jmp 2020 <_init+0x20>
    240f:	90                   	nop
    2410:	f3 0f 1e fa          	endbr64 
    2414:	68 3e 00 00 00       	push   0x3e
    2419:	f2 e9 01 fc ff ff    	bnd jmp 2020 <_init+0x20>
    241f:	90                   	nop
    2420:	f3 0f 1e fa          	endbr64 
    2424:	68 3f 00 00 00       	push   0x3f
    2429:	f2 e9 f1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    242f:	90                   	nop
    2430:	f3 0f 1e fa          	endbr64 
    2434:	68 40 00 00 00       	push   0x40
    2439:	f2 e9 e1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    243f:	90                   	nop
    2440:	f3 0f 1e fa          	endbr64 
    2444:	68 41 00 00 00       	push   0x41
    2449:	f2 e9 d1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    244f:	90                   	nop

Disassembly of section .plt.got:

0000000000002450 <__cxa_finalize@plt>:
    2450:	f3 0f 1e fa          	endbr64 
    2454:	f2 ff 25 95 eb 00 00 	bnd jmp QWORD PTR [rip+0xeb95]        # 10ff0 <__cxa_finalize@GLIBC_2.2.5>
    245b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

0000000000002460 <sqlite3_close@plt>:
    2460:	f3 0f 1e fa          	endbr64 
    2464:	f2 ff 25 5d e9 00 00 	bnd jmp QWORD PTR [rip+0xe95d]        # 10dc8 <sqlite3_close>
    246b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002470 <pthread_join@plt>:
    2470:	f3 0f 1e fa          	endbr64 
    2474:	f2 ff 25 55 e9 00 00 	bnd jmp QWORD PTR [rip+0xe955]        # 10dd0 <pthread_join@GLIBC_2.34>
    247b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002480 <printf@plt>:
    2480:	f3 0f 1e fa          	endbr64 
    2484:	f2 ff 25 4d e9 00 00 	bnd jmp QWORD PTR [rip+0xe94d]        # 10dd8 <printf@GLIBC_2.2.5>
    248b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002490 <memset@plt>:
    2490:	f3 0f 1e fa          	endbr64 
    2494:	f2 ff 25 45 e9 00 00 	bnd jmp QWORD PTR [rip+0xe945]        # 10de0 <memset@GLIBC_2.2.5>
    249b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024a0 <snprintf@plt>:
    24a0:	f3 0f 1e fa          	endbr64 
    24a4:	f2 ff 25 3d e9 00 00 	bnd jmp QWORD PTR [rip+0xe93d]        # 10de8 <snprintf@GLIBC_2.2.5>
    24ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024b0 <backtrace@plt>:
    24b0:	f3 0f 1e fa          	endbr64 
    24b4:	f2 ff 25 35 e9 00 00 	bnd jmp QWORD PTR [rip+0xe935]        # 10df0 <backtrace@GLIBC_2.2.5>
    24bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024c0 <close@plt>:
    24c0:	f3 0f 1e fa          	endbr64 
    24c4:	f2 ff 25 2d e9 00 00 	bnd jmp QWORD PTR [rip+0xe92d]        # 10df8 <close@GLIBC_2.2.5>
    24cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024d0 <strncat@plt>:
    24d0:	f3 0f 1e fa          	endbr64 
    24d4:	f2 ff 25 25 e9 00 00 	bnd jmp QWORD PTR [rip+0xe925]        # 10e00 <strncat@GLIBC_2.2.5>
    24db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024e0 <puts@plt>:
    24e0:	f3 0f 1e fa          	endbr64 
    24e4:	f2 ff 25 1d e9 00 00 	bnd jmp QWORD PTR [rip+0xe91d]        # 10e08 <puts@GLIBC_2.2.5>
    24eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024f0 <htons@plt>:
    24f0:	f3 0f 1e fa          	endbr64 
    24f4:	f2 ff 25 15 e9 00 00 	bnd jmp QWORD PTR [rip+0xe915]        # 10e10 <htons@GLIBC_2.2.5>
    24fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002500 <exit@plt>:
    2500:	f3 0f 1e fa          	endbr64 
    2504:	f2 ff 25 0d e9 00 00 	bnd jmp QWORD PTR [rip+0xe90d]        # 10e18 <exit@GLIBC_2.2.5>
    250b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002510 <putchar@plt>:
    2510:	f3 0f 1e fa          	endbr64 
    2514:	f2 ff 25 05 e9 00 00 	bnd jmp QWORD PTR [rip+0xe905]        # 10e20 <putchar@GLIBC_2.2.5>
    251b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002520 <sqlite3_exec@plt>:
    2520:	f3 0f 1e fa          	endbr64 
    2524:	f2 ff 25 fd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8fd]        # 10e28 <sqlite3_exec>
    252b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002530 <getopt@plt>:
    2530:	f3 0f 1e fa          	endbr64 
    2534:	f2 ff 25 f5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8f5]        # 10e30 <getopt@GLIBC_2.2.5>
    253b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002540 <read@plt>:
    2540:	f3 0f 1e fa          	endbr64 
    2544:	f2 ff 25 ed e8 00 00 	bnd jmp QWORD PTR [rip+0xe8ed]        # 10e38 <read@GLIBC_2.2.5>
    254b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002550 <strncmp@plt>:
    2550:	f3 0f 1e fa          	endbr64 
    2554:	f2 ff 25 e5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8e5]        # 10e40 <strncmp@GLIBC_2.2.5>
    255b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002560 <malloc@plt>:
    2560:	f3 0f 1e fa          	endbr64 
    2564:	f2 ff 25 dd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8dd]        # 10e48 <malloc@GLIBC_2.2.5>
    256b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002570 <fopen@plt>:
    2570:	f3 0f 1e fa          	endbr64 
    2574:	f2 ff 25 d5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8d5]        # 10e50 <fopen@GLIBC_2.2.5>
    257b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002580 <regexec@plt>:
    2580:	f3 0f 1e fa          	endbr64 
    2584:	f2 ff 25 cd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8cd]        # 10e58 <regexec@GLIBC_2.3.4>
    258b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002590 <pcap_open_live@plt>:
    2590:	f3 0f 1e fa          	endbr64 
    2594:	f2 ff 25 c5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8c5]        # 10e60 <pcap_open_live>
    259b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025a0 <setsockopt@plt>:
    25a0:	f3 0f 1e fa          	endbr64 
    25a4:	f2 ff 25 bd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8bd]        # 10e68 <setsockopt@GLIBC_2.2.5>
    25ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025b0 <sqlite3_free@plt>:
    25b0:	f3 0f 1e fa          	endbr64 
    25b4:	f2 ff 25 b5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8b5]        # 10e70 <sqlite3_free>
    25bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025c0 <lua_settop@plt>:
    25c0:	f3 0f 1e fa          	endbr64 
    25c4:	f2 ff 25 ad e8 00 00 	bnd jmp QWORD PTR [rip+0xe8ad]        # 10e78 <lua_settop@LUA_5.3>
    25cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025d0 <pthread_create@plt>:
    25d0:	f3 0f 1e fa          	endbr64 
    25d4:	f2 ff 25 a5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8a5]        # 10e80 <pthread_create@GLIBC_2.34>
    25db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025e0 <backtrace_symbols@plt>:
    25e0:	f3 0f 1e fa          	endbr64 
    25e4:	f2 ff 25 9d e8 00 00 	bnd jmp QWORD PTR [rip+0xe89d]        # 10e88 <backtrace_symbols@GLIBC_2.2.5>
    25eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025f0 <free@plt>:
    25f0:	f3 0f 1e fa          	endbr64 
    25f4:	f2 ff 25 95 e8 00 00 	bnd jmp QWORD PTR [rip+0xe895]        # 10e90 <free@GLIBC_2.2.5>
    25fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002600 <strlen@plt>:
    2600:	f3 0f 1e fa          	endbr64 
    2604:	f2 ff 25 8d e8 00 00 	bnd jmp QWORD PTR [rip+0xe88d]        # 10e98 <strlen@GLIBC_2.2.5>
    260b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002610 <listen@plt>:
    2610:	f3 0f 1e fa          	endbr64 
    2614:	f2 ff 25 85 e8 00 00 	bnd jmp QWORD PTR [rip+0xe885]        # 10ea0 <listen@GLIBC_2.2.5>
    261b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002620 <sprintf@plt>:
    2620:	f3 0f 1e fa          	endbr64 
    2624:	f2 ff 25 7d e8 00 00 	bnd jmp QWORD PTR [rip+0xe87d]        # 10ea8 <sprintf@GLIBC_2.2.5>
    262b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002630 <ntohs@plt>:
    2630:	f3 0f 1e fa          	endbr64 
    2634:	f2 ff 25 75 e8 00 00 	bnd jmp QWORD PTR [rip+0xe875]        # 10eb0 <ntohs@GLIBC_2.2.5>
    263b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002640 <ntohl@plt>:
    2640:	f3 0f 1e fa          	endbr64 
    2644:	f2 ff 25 6d e8 00 00 	bnd jmp QWORD PTR [rip+0xe86d]        # 10eb8 <ntohl@GLIBC_2.2.5>
    264b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002650 <sleep@plt>:
    2650:	f3 0f 1e fa          	endbr64 
    2654:	f2 ff 25 65 e8 00 00 	bnd jmp QWORD PTR [rip+0xe865]        # 10ec0 <sleep@GLIBC_2.2.5>
    265b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002660 <lua_pcallk@plt>:
    2660:	f3 0f 1e fa          	endbr64 
    2664:	f2 ff 25 5d e8 00 00 	bnd jmp QWORD PTR [rip+0xe85d]        # 10ec8 <lua_pcallk@LUA_5.3>
    266b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002670 <strstr@plt>:
    2670:	f3 0f 1e fa          	endbr64 
    2674:	f2 ff 25 55 e8 00 00 	bnd jmp QWORD PTR [rip+0xe855]        # 10ed0 <strstr@GLIBC_2.2.5>
    267b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002680 <strcat@plt>:
    2680:	f3 0f 1e fa          	endbr64 
    2684:	f2 ff 25 4d e8 00 00 	bnd jmp QWORD PTR [rip+0xe84d]        # 10ed8 <strcat@GLIBC_2.2.5>
    268b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002690 <fputs@plt>:
    2690:	f3 0f 1e fa          	endbr64 
    2694:	f2 ff 25 45 e8 00 00 	bnd jmp QWORD PTR [rip+0xe845]        # 10ee0 <fputs@GLIBC_2.2.5>
    269b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026a0 <strtol@plt>:
    26a0:	f3 0f 1e fa          	endbr64 
    26a4:	f2 ff 25 3d e8 00 00 	bnd jmp QWORD PTR [rip+0xe83d]        # 10ee8 <strtol@GLIBC_2.2.5>
    26ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026b0 <luaL_loadfilex@plt>:
    26b0:	f3 0f 1e fa          	endbr64 
    26b4:	f2 ff 25 35 e8 00 00 	bnd jmp QWORD PTR [rip+0xe835]        # 10ef0 <luaL_loadfilex@LUA_5.3>
    26bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026c0 <atoi@plt>:
    26c0:	f3 0f 1e fa          	endbr64 
    26c4:	f2 ff 25 2d e8 00 00 	bnd jmp QWORD PTR [rip+0xe82d]        # 10ef8 <atoi@GLIBC_2.2.5>
    26cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026d0 <regcomp@plt>:
    26d0:	f3 0f 1e fa          	endbr64 
    26d4:	f2 ff 25 25 e8 00 00 	bnd jmp QWORD PTR [rip+0xe825]        # 10f00 <regcomp@GLIBC_2.2.5>
    26db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026e0 <signal@plt>:
    26e0:	f3 0f 1e fa          	endbr64 
    26e4:	f2 ff 25 1d e8 00 00 	bnd jmp QWORD PTR [rip+0xe81d]        # 10f08 <signal@GLIBC_2.2.5>
    26eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026f0 <strchr@plt>:
    26f0:	f3 0f 1e fa          	endbr64 
    26f4:	f2 ff 25 15 e8 00 00 	bnd jmp QWORD PTR [rip+0xe815]        # 10f10 <strchr@GLIBC_2.2.5>
    26fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002700 <lua_gettop@plt>:
    2700:	f3 0f 1e fa          	endbr64 
    2704:	f2 ff 25 0d e8 00 00 	bnd jmp QWORD PTR [rip+0xe80d]        # 10f18 <lua_gettop@LUA_5.3>
    270b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002710 <luaL_newstate@plt>:
    2710:	f3 0f 1e fa          	endbr64 
    2714:	f2 ff 25 05 e8 00 00 	bnd jmp QWORD PTR [rip+0xe805]        # 10f20 <luaL_newstate@LUA_5.3>
    271b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002720 <socket@plt>:
    2720:	f3 0f 1e fa          	endbr64 
    2724:	f2 ff 25 fd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7fd]        # 10f28 <socket@GLIBC_2.2.5>
    272b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002730 <luaL_openlibs@plt>:
    2730:	f3 0f 1e fa          	endbr64 
    2734:	f2 ff 25 f5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7f5]        # 10f30 <luaL_openlibs@LUA_5.3>
    273b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002740 <__stack_chk_fail@plt>:
    2740:	f3 0f 1e fa          	endbr64 
    2744:	f2 ff 25 ed e7 00 00 	bnd jmp QWORD PTR [rip+0xe7ed]        # 10f38 <__stack_chk_fail@GLIBC_2.4>
    274b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002750 <strcmp@plt>:
    2750:	f3 0f 1e fa          	endbr64 
    2754:	f2 ff 25 e5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7e5]        # 10f40 <strcmp@GLIBC_2.2.5>
    275b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002760 <getline@plt>:
    2760:	f3 0f 1e fa          	endbr64 
    2764:	f2 ff 25 dd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7dd]        # 10f48 <getline@GLIBC_2.2.5>
    276b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002770 <strcpy@plt>:
    2770:	f3 0f 1e fa          	endbr64 
    2774:	f2 ff 25 d5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7d5]        # 10f50 <strcpy@GLIBC_2.2.5>
    277b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002780 <strtok@plt>:
    2780:	f3 0f 1e fa          	endbr64 
    2784:	f2 ff 25 cd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7cd]        # 10f58 <strtok@GLIBC_2.2.5>
    278b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002790 <lua_close@plt>:
    2790:	f3 0f 1e fa          	endbr64 
    2794:	f2 ff 25 c5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7c5]        # 10f60 <lua_close@LUA_5.3>
    279b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027a0 <sqlite3_errmsg@plt>:
    27a0:	f3 0f 1e fa          	endbr64 
    27a4:	f2 ff 25 bd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7bd]        # 10f68 <sqlite3_errmsg>
    27ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027b0 <fclose@plt>:
    27b0:	f3 0f 1e fa          	endbr64 
    27b4:	f2 ff 25 b5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7b5]        # 10f70 <fclose@GLIBC_2.2.5>
    27bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027c0 <strncpy@plt>:
    27c0:	f3 0f 1e fa          	endbr64 
    27c4:	f2 ff 25 ad e7 00 00 	bnd jmp QWORD PTR [rip+0xe7ad]        # 10f78 <strncpy@GLIBC_2.2.5>
    27cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027d0 <strcspn@plt>:
    27d0:	f3 0f 1e fa          	endbr64 
    27d4:	f2 ff 25 a5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7a5]        # 10f80 <strcspn@GLIBC_2.2.5>
    27db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027e0 <bind@plt>:
    27e0:	f3 0f 1e fa          	endbr64 
    27e4:	f2 ff 25 9d e7 00 00 	bnd jmp QWORD PTR [rip+0xe79d]        # 10f88 <bind@GLIBC_2.2.5>
    27eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027f0 <pcap_loop@plt>:
    27f0:	f3 0f 1e fa          	endbr64 
    27f4:	f2 ff 25 95 e7 00 00 	bnd jmp QWORD PTR [rip+0xe795]        # 10f90 <pcap_loop>
    27fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002800 <htonl@plt>:
    2800:	f3 0f 1e fa          	endbr64 
    2804:	f2 ff 25 8d e7 00 00 	bnd jmp QWORD PTR [rip+0xe78d]        # 10f98 <htonl@GLIBC_2.2.5>
    280b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002810 <perror@plt>:
    2810:	f3 0f 1e fa          	endbr64 
    2814:	f2 ff 25 85 e7 00 00 	bnd jmp QWORD PTR [rip+0xe785]        # 10fa0 <perror@GLIBC_2.2.5>
    281b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002820 <fprintf@plt>:
    2820:	f3 0f 1e fa          	endbr64 
    2824:	f2 ff 25 7d e7 00 00 	bnd jmp QWORD PTR [rip+0xe77d]        # 10fa8 <fprintf@GLIBC_2.2.5>
    282b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002830 <localtime@plt>:
    2830:	f3 0f 1e fa          	endbr64 
    2834:	f2 ff 25 75 e7 00 00 	bnd jmp QWORD PTR [rip+0xe775]        # 10fb0 <localtime@GLIBC_2.2.5>
    283b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002840 <getdelim@plt>:
    2840:	f3 0f 1e fa          	endbr64 
    2844:	f2 ff 25 6d e7 00 00 	bnd jmp QWORD PTR [rip+0xe76d]        # 10fb8 <getdelim@GLIBC_2.2.5>
    284b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002850 <accept@plt>:
    2850:	f3 0f 1e fa          	endbr64 
    2854:	f2 ff 25 65 e7 00 00 	bnd jmp QWORD PTR [rip+0xe765]        # 10fc0 <accept@GLIBC_2.2.5>
    285b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002860 <sqlite3_open@plt>:
    2860:	f3 0f 1e fa          	endbr64 
    2864:	f2 ff 25 5d e7 00 00 	bnd jmp QWORD PTR [rip+0xe75d]        # 10fc8 <sqlite3_open>
    286b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002870 <time@plt>:
    2870:	f3 0f 1e fa          	endbr64 
    2874:	f2 ff 25 55 e7 00 00 	bnd jmp QWORD PTR [rip+0xe755]        # 10fd0 <time@GLIBC_2.2.5>
    287b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000002880 <_start>:
    2880:	f3 0f 1e fa          	endbr64 
    2884:	31 ed                	xor    ebp,ebp
    2886:	49 89 d1             	mov    r9,rdx
    2889:	5e                   	pop    rsi
    288a:	48 89 e2             	mov    rdx,rsp
    288d:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    2891:	50                   	push   rax
    2892:	54                   	push   rsp
    2893:	45 31 c0             	xor    r8d,r8d
    2896:	31 c9                	xor    ecx,ecx
    2898:	48 8d 3d 9c 3f 00 00 	lea    rdi,[rip+0x3f9c]        # 683b <main>
    289f:	ff 15 53 e7 00 00    	call   QWORD PTR [rip+0xe753]        # 10ff8 <__libc_start_main@GLIBC_2.34>
    28a5:	f4                   	hlt    
    28a6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    28ad:	00 00 00 

00000000000028b0 <deregister_tm_clones>:
    28b0:	48 8d 3d 91 e7 00 00 	lea    rdi,[rip+0xe791]        # 11048 <__TMC_END__>
    28b7:	48 8d 05 8a e7 00 00 	lea    rax,[rip+0xe78a]        # 11048 <__TMC_END__>
    28be:	48 39 f8             	cmp    rax,rdi
    28c1:	74 15                	je     28d8 <deregister_tm_clones+0x28>
    28c3:	48 8b 05 16 e7 00 00 	mov    rax,QWORD PTR [rip+0xe716]        # 10fe0 <_ITM_deregisterTMCloneTable>
    28ca:	48 85 c0             	test   rax,rax
    28cd:	74 09                	je     28d8 <deregister_tm_clones+0x28>
    28cf:	ff e0                	jmp    rax
    28d1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    28d8:	c3                   	ret    
    28d9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000028e0 <register_tm_clones>:
    28e0:	48 8d 3d 61 e7 00 00 	lea    rdi,[rip+0xe761]        # 11048 <__TMC_END__>
    28e7:	48 8d 35 5a e7 00 00 	lea    rsi,[rip+0xe75a]        # 11048 <__TMC_END__>
    28ee:	48 29 fe             	sub    rsi,rdi
    28f1:	48 89 f0             	mov    rax,rsi
    28f4:	48 c1 ee 3f          	shr    rsi,0x3f
    28f8:	48 c1 f8 03          	sar    rax,0x3
    28fc:	48 01 c6             	add    rsi,rax
    28ff:	48 d1 fe             	sar    rsi,1
    2902:	74 14                	je     2918 <register_tm_clones+0x38>
    2904:	48 8b 05 dd e6 00 00 	mov    rax,QWORD PTR [rip+0xe6dd]        # 10fe8 <_ITM_registerTMCloneTable>
    290b:	48 85 c0             	test   rax,rax
    290e:	74 08                	je     2918 <register_tm_clones+0x38>
    2910:	ff e0                	jmp    rax
    2912:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    2918:	c3                   	ret    
    2919:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002920 <__do_global_dtors_aux>:
    2920:	f3 0f 1e fa          	endbr64 
    2924:	80 3d 3d e7 00 00 00 	cmp    BYTE PTR [rip+0xe73d],0x0        # 11068 <completed.0>
    292b:	75 2b                	jne    2958 <__do_global_dtors_aux+0x38>
    292d:	55                   	push   rbp
    292e:	48 83 3d ba e6 00 00 	cmp    QWORD PTR [rip+0xe6ba],0x0        # 10ff0 <__cxa_finalize@GLIBC_2.2.5>
    2935:	00 
    2936:	48 89 e5             	mov    rbp,rsp
    2939:	74 0c                	je     2947 <__do_global_dtors_aux+0x27>
    293b:	48 8b 3d c6 e6 00 00 	mov    rdi,QWORD PTR [rip+0xe6c6]        # 11008 <__dso_handle>
    2942:	e8 09 fb ff ff       	call   2450 <__cxa_finalize@plt>
    2947:	e8 64 ff ff ff       	call   28b0 <deregister_tm_clones>
    294c:	c6 05 15 e7 00 00 01 	mov    BYTE PTR [rip+0xe715],0x1        # 11068 <completed.0>
    2953:	5d                   	pop    rbp
    2954:	c3                   	ret    
    2955:	0f 1f 00             	nop    DWORD PTR [rax]
    2958:	c3                   	ret    
    2959:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002960 <frame_dummy>:
    2960:	f3 0f 1e fa          	endbr64 
    2964:	e9 77 ff ff ff       	jmp    28e0 <register_tm_clones>

0000000000002969 <add_thread>:
    2969:	f3 0f 1e fa          	endbr64 
    296d:	55                   	push   rbp
    296e:	48 89 e5             	mov    rbp,rsp
    2971:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    2975:	8b 05 25 e9 00 00    	mov    eax,DWORD PTR [rip+0xe925]        # 112a0 <thread_count>
    297b:	8d 50 01             	lea    edx,[rax+0x1]
    297e:	89 15 1c e9 00 00    	mov    DWORD PTR [rip+0xe91c],edx        # 112a0 <thread_count>
    2984:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    2988:	48 8b 12             	mov    rdx,QWORD PTR [rdx]
    298b:	48 98                	cdqe   
    298d:	48 8d 0c c5 00 00 00 	lea    rcx,[rax*8+0x0]
    2994:	00 
    2995:	48 8d 05 04 e7 00 00 	lea    rax,[rip+0xe704]        # 110a0 <threads>
    299c:	48 89 14 01          	mov    QWORD PTR [rcx+rax*1],rdx
    29a0:	90                   	nop
    29a1:	5d                   	pop    rbp
    29a2:	c3                   	ret    

00000000000029a3 <pktmgr>:
    29a3:	f3 0f 1e fa          	endbr64 
    29a7:	55                   	push   rbp
    29a8:	48 89 e5             	mov    rbp,rsp
    29ab:	53                   	push   rbx
    29ac:	48 83 ec 38          	sub    rsp,0x38
    29b0:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    29b4:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    29b8:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    29bc:	0f b6 05 a1 75 10 00 	movzx  eax,BYTE PTR [rip+0x1075a1]        # 109f64 <packet_print>
    29c3:	84 c0                	test   al,al
    29c5:	74 0c                	je     29d3 <pktmgr+0x30>
    29c7:	48 8d 3d 82 96 00 00 	lea    rdi,[rip+0x9682]        # c050 <_IO_stdin_used+0x50>
    29ce:	e8 0d fb ff ff       	call   24e0 <puts@plt>
    29d3:	8b 05 cb e8 00 00    	mov    eax,DWORD PTR [rip+0xe8cb]        # 112a4 <total_pkt_captured>
    29d9:	83 c0 01             	add    eax,0x1
    29dc:	89 05 c2 e8 00 00    	mov    DWORD PTR [rip+0xe8c2],eax        # 112a4 <total_pkt_captured>
    29e2:	8b 05 d8 e8 00 00    	mov    eax,DWORD PTR [rip+0xe8d8]        # 112c0 <pkt_counter>
    29e8:	83 c0 01             	add    eax,0x1
    29eb:	89 05 cf e8 00 00    	mov    DWORD PTR [rip+0xe8cf],eax        # 112c0 <pkt_counter>
    29f1:	8b 15 c9 e8 00 00    	mov    edx,DWORD PTR [rip+0xe8c9]        # 112c0 <pkt_counter>
    29f7:	8b 05 63 75 10 00    	mov    eax,DWORD PTR [rip+0x107563]        # 109f60 <clean_delay_pkts>
    29fd:	39 c2                	cmp    edx,eax
    29ff:	72 0a                	jb     2a0b <pktmgr+0x68>
    2a01:	c7 05 b5 e8 00 00 00 	mov    DWORD PTR [rip+0xe8b5],0x0        # 112c0 <pkt_counter>
    2a08:	00 00 00 
    2a0b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2a0f:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    2a13:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2a17:	0f b7 40 0c          	movzx  eax,WORD PTR [rax+0xc]
    2a1b:	0f b7 c0             	movzx  eax,ax
    2a1e:	3d 86 dd 00 00       	cmp    eax,0xdd86
    2a23:	74 46                	je     2a6b <pktmgr+0xc8>
    2a25:	3d 86 dd 00 00       	cmp    eax,0xdd86
    2a2a:	7f 77                	jg     2aa3 <pktmgr+0x100>
    2a2c:	3d 80 35 00 00       	cmp    eax,0x3580
    2a31:	74 23                	je     2a56 <pktmgr+0xb3>
    2a33:	3d 80 35 00 00       	cmp    eax,0x3580
    2a38:	7f 69                	jg     2aa3 <pktmgr+0x100>
    2a3a:	3d 08 06 00 00       	cmp    eax,0x608
    2a3f:	74 15                	je     2a56 <pktmgr+0xb3>
    2a41:	3d 08 06 00 00       	cmp    eax,0x608
    2a46:	7f 5b                	jg     2aa3 <pktmgr+0x100>
    2a48:	83 f8 08             	cmp    eax,0x8
    2a4b:	74 33                	je     2a80 <pktmgr+0xdd>
    2a4d:	3d 90 00 00 00       	cmp    eax,0x90
    2a52:	74 41                	je     2a95 <pktmgr+0xf2>
    2a54:	eb 4d                	jmp    2aa3 <pktmgr+0x100>
    2a56:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2a5a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2a5e:	48 89 d6             	mov    rsi,rdx
    2a61:	48 89 c7             	mov    rdi,rax
    2a64:	e8 86 00 00 00       	call   2aef <arpdecode>
    2a69:	eb 7d                	jmp    2ae8 <pktmgr+0x145>
    2a6b:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2a6f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2a73:	48 89 d6             	mov    rsi,rdx
    2a76:	48 89 c7             	mov    rdi,rax
    2a79:	e8 1f 84 00 00       	call   ae9d <ip6decode>
    2a7e:	eb 68                	jmp    2ae8 <pktmgr+0x145>
    2a80:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2a84:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2a88:	48 89 d6             	mov    rsi,rdx
    2a8b:	48 89 c7             	mov    rdi,rax
    2a8e:	e8 56 0b 00 00       	call   35e9 <ipv4pktmgr>
    2a93:	eb 53                	jmp    2ae8 <pktmgr+0x145>
    2a95:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2a99:	48 89 c7             	mov    rdi,rax
    2a9c:	e8 42 03 00 00       	call   2de3 <loopback_ctp_decode>
    2aa1:	eb 45                	jmp    2ae8 <pktmgr+0x145>
    2aa3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2aa7:	48 89 c7             	mov    rdi,rax
    2aaa:	e8 f5 04 00 00       	call   2fa4 <uc_mac_ntoa>
    2aaf:	48 89 c3             	mov    rbx,rax
    2ab2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2ab6:	48 83 c0 06          	add    rax,0x6
    2aba:	48 89 c7             	mov    rdi,rax
    2abd:	e8 e2 04 00 00       	call   2fa4 <uc_mac_ntoa>
    2ac2:	41 b9 ff ff ff ff    	mov    r9d,0xffffffff
    2ac8:	41 b8 ff ff ff ff    	mov    r8d,0xffffffff
    2ace:	48 89 d9             	mov    rcx,rbx
    2ad1:	48 89 c2             	mov    rdx,rax
    2ad4:	48 8d 35 bd 95 00 00 	lea    rsi,[rip+0x95bd]        # c098 <_IO_stdin_used+0x98>
    2adb:	48 8d 3d e8 95 00 00 	lea    rdi,[rip+0x95e8]        # c0ca <_IO_stdin_used+0xca>
    2ae2:	e8 66 64 00 00       	call   8f4d <lfprintf>
    2ae7:	90                   	nop
    2ae8:	90                   	nop
    2ae9:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    2aed:	c9                   	leave  
    2aee:	c3                   	ret    

0000000000002aef <arpdecode>:
    2aef:	f3 0f 1e fa          	endbr64 
    2af3:	55                   	push   rbp
    2af4:	48 89 e5             	mov    rbp,rsp
    2af7:	48 81 ec 50 03 00 00 	sub    rsp,0x350
    2afe:	48 89 bd b8 fc ff ff 	mov    QWORD PTR [rbp-0x348],rdi
    2b05:	48 89 b5 b0 fc ff ff 	mov    QWORD PTR [rbp-0x350],rsi
    2b0c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2b13:	00 00 
    2b15:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2b19:	31 c0                	xor    eax,eax
    2b1b:	0f b6 05 42 74 10 00 	movzx  eax,BYTE PTR [rip+0x107442]        # 109f64 <packet_print>
    2b22:	84 c0                	test   al,al
    2b24:	74 18                	je     2b3e <arpdecode+0x4f>
    2b26:	48 8d 35 bb 95 00 00 	lea    rsi,[rip+0x95bb]        # c0e8 <_IO_stdin_used+0xe8>
    2b2d:	48 8d 3d bc 95 00 00 	lea    rdi,[rip+0x95bc]        # c0f0 <_IO_stdin_used+0xf0>
    2b34:	b8 00 00 00 00       	mov    eax,0x0
    2b39:	e8 42 f9 ff ff       	call   2480 <printf@plt>
    2b3e:	48 8b 85 b8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x348]
    2b45:	48 83 c0 0e          	add    rax,0xe
    2b49:	48 89 85 c8 fc ff ff 	mov    QWORD PTR [rbp-0x338],rax
    2b50:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2b57:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    2b5b:	0f b7 c0             	movzx  eax,ax
    2b5e:	3d 00 18 00 00       	cmp    eax,0x1800
    2b63:	74 35                	je     2b9a <arpdecode+0xab>
    2b65:	3d 00 18 00 00       	cmp    eax,0x1800
    2b6a:	0f 8f 1d 02 00 00    	jg     2d8d <arpdecode+0x29e>
    2b70:	3d 00 02 00 00       	cmp    eax,0x200
    2b75:	0f 84 eb 00 00 00    	je     2c66 <arpdecode+0x177>
    2b7b:	3d 00 02 00 00       	cmp    eax,0x200
    2b80:	0f 8f 07 02 00 00    	jg     2d8d <arpdecode+0x29e>
    2b86:	83 f8 02             	cmp    eax,0x2
    2b89:	0f 84 d7 00 00 00    	je     2c66 <arpdecode+0x177>
    2b8f:	3d 00 01 00 00       	cmp    eax,0x100
    2b94:	0f 85 f3 01 00 00    	jne    2d8d <arpdecode+0x29e>
    2b9a:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2ba1:	48 83 c0 18          	add    rax,0x18
    2ba5:	48 89 c7             	mov    rdi,rax
    2ba8:	e8 9d 04 00 00       	call   304a <u8_ipv4_ntoa>
    2bad:	48 89 c1             	mov    rcx,rax
    2bb0:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2bb4:	ba 20 00 00 00       	mov    edx,0x20
    2bb9:	48 89 ce             	mov    rsi,rcx
    2bbc:	48 89 c7             	mov    rdi,rax
    2bbf:	e8 fc fb ff ff       	call   27c0 <strncpy@plt>
    2bc4:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2bcb:	48 83 c0 0e          	add    rax,0xe
    2bcf:	48 89 c7             	mov    rdi,rax
    2bd2:	e8 73 04 00 00       	call   304a <u8_ipv4_ntoa>
    2bd7:	48 89 c1             	mov    rcx,rax
    2bda:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2bde:	ba 20 00 00 00       	mov    edx,0x20
    2be3:	48 89 ce             	mov    rsi,rcx
    2be6:	48 89 c7             	mov    rdi,rax
    2be9:	e8 d2 fb ff ff       	call   27c0 <strncpy@plt>
    2bee:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2bf2:	ba 05 00 00 00       	mov    edx,0x5
    2bf7:	48 8d 35 f5 94 00 00 	lea    rsi,[rip+0x94f5]        # c0f3 <_IO_stdin_used+0xf3>
    2bfe:	48 89 c7             	mov    rdi,rax
    2c01:	e8 4a f9 ff ff       	call   2550 <strncmp@plt>
    2c06:	85 c0                	test   eax,eax
    2c08:	75 2c                	jne    2c36 <arpdecode+0x147>
    2c0a:	0f b6 05 53 73 10 00 	movzx  eax,BYTE PTR [rip+0x107353]        # 109f64 <packet_print>
    2c11:	84 c0                	test   al,al
    2c13:	0f 84 97 01 00 00    	je     2db0 <arpdecode+0x2c1>
    2c19:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2c1d:	48 89 c6             	mov    rsi,rax
    2c20:	48 8d 3d d9 94 00 00 	lea    rdi,[rip+0x94d9]        # c100 <_IO_stdin_used+0x100>
    2c27:	b8 00 00 00 00       	mov    eax,0x0
    2c2c:	e8 4f f8 ff ff       	call   2480 <printf@plt>
    2c31:	e9 7a 01 00 00       	jmp    2db0 <arpdecode+0x2c1>
    2c36:	0f b6 05 27 73 10 00 	movzx  eax,BYTE PTR [rip+0x107327]        # 109f64 <packet_print>
    2c3d:	84 c0                	test   al,al
    2c3f:	0f 84 6b 01 00 00    	je     2db0 <arpdecode+0x2c1>
    2c45:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2c49:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2c4d:	48 89 c6             	mov    rsi,rax
    2c50:	48 8d 3d c9 94 00 00 	lea    rdi,[rip+0x94c9]        # c120 <_IO_stdin_used+0x120>
    2c57:	b8 00 00 00 00       	mov    eax,0x0
    2c5c:	e8 1f f8 ff ff       	call   2480 <printf@plt>
    2c61:	e9 4a 01 00 00       	jmp    2db0 <arpdecode+0x2c1>
    2c66:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2c6d:	48 83 c0 08          	add    rax,0x8
    2c71:	48 89 c7             	mov    rdi,rax
    2c74:	e8 7d 02 00 00       	call   2ef6 <mac_ntoa>
    2c79:	48 89 c1             	mov    rcx,rax
    2c7c:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2c80:	ba 40 00 00 00       	mov    edx,0x40
    2c85:	48 89 ce             	mov    rsi,rcx
    2c88:	48 89 c7             	mov    rdi,rax
    2c8b:	e8 30 fb ff ff       	call   27c0 <strncpy@plt>
    2c90:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2c97:	48 83 c0 0e          	add    rax,0xe
    2c9b:	48 89 c7             	mov    rdi,rax
    2c9e:	e8 a7 03 00 00       	call   304a <u8_ipv4_ntoa>
    2ca3:	48 89 c1             	mov    rcx,rax
    2ca6:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2caa:	ba 20 00 00 00       	mov    edx,0x20
    2caf:	48 89 ce             	mov    rsi,rcx
    2cb2:	48 89 c7             	mov    rdi,rax
    2cb5:	e8 06 fb ff ff       	call   27c0 <strncpy@plt>
    2cba:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2cbe:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2cc2:	48 89 d6             	mov    rsi,rdx
    2cc5:	48 89 c7             	mov    rdi,rax
    2cc8:	e8 95 4f 00 00       	call   7c62 <entry_exists>
    2ccd:	83 f8 ff             	cmp    eax,0xffffffff
    2cd0:	74 15                	je     2ce7 <arpdecode+0x1f8>
    2cd2:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2cd6:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2cda:	48 89 d6             	mov    rsi,rdx
    2cdd:	48 89 c7             	mov    rdi,rax
    2ce0:	e8 2a 4e 00 00       	call   7b0f <compare_entries>
    2ce5:	eb 7d                	jmp    2d64 <arpdecode+0x275>
    2ce7:	0f b6 05 33 72 10 00 	movzx  eax,BYTE PTR [rip+0x107233]        # 109f21 <use_sqlite>
    2cee:	84 c0                	test   al,al
    2cf0:	74 5f                	je     2d51 <arpdecode+0x262>
    2cf2:	c7 85 f4 fc ff ff 00 	mov    DWORD PTR [rbp-0x30c],0x0
    2cf9:	00 00 00 
    2cfc:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    2d00:	48 8d 85 d0 fc ff ff 	lea    rax,[rbp-0x330]
    2d07:	48 89 d6             	mov    rsi,rdx
    2d0a:	48 89 c7             	mov    rdi,rax
    2d0d:	e8 5e fa ff ff       	call   2770 <strcpy@plt>
    2d12:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2d16:	48 8d 95 d0 fc ff ff 	lea    rdx,[rbp-0x330]
    2d1d:	48 83 c2 10          	add    rdx,0x10
    2d21:	48 89 c6             	mov    rsi,rax
    2d24:	48 89 d7             	mov    rdi,rdx
    2d27:	e8 44 fa ff ff       	call   2770 <strcpy@plt>
    2d2c:	48 8d 95 d0 fc ff ff 	lea    rdx,[rbp-0x330]
    2d33:	48 8d 85 c0 fc ff ff 	lea    rax,[rbp-0x340]
    2d3a:	48 89 d1             	mov    rcx,rdx
    2d3d:	48 8d 15 7d 51 00 00 	lea    rdx,[rip+0x517d]        # 7ec1 <update_db>
    2d44:	be 00 00 00 00       	mov    esi,0x0
    2d49:	48 89 c7             	mov    rdi,rax
    2d4c:	e8 7f f8 ff ff       	call   25d0 <pthread_create@plt>
    2d51:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2d55:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d59:	48 89 d6             	mov    rsi,rdx
    2d5c:	48 89 c7             	mov    rdi,rax
    2d5f:	e8 8a 4e 00 00       	call   7bee <add_entry>
    2d64:	0f b6 05 f9 71 10 00 	movzx  eax,BYTE PTR [rip+0x1071f9]        # 109f64 <packet_print>
    2d6b:	84 c0                	test   al,al
    2d6d:	74 44                	je     2db3 <arpdecode+0x2c4>
    2d6f:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2d73:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d77:	48 89 c6             	mov    rsi,rax
    2d7a:	48 8d 3d c7 93 00 00 	lea    rdi,[rip+0x93c7]        # c148 <_IO_stdin_used+0x148>
    2d81:	b8 00 00 00 00       	mov    eax,0x0
    2d86:	e8 f5 f6 ff ff       	call   2480 <printf@plt>
    2d8b:	eb 26                	jmp    2db3 <arpdecode+0x2c4>
    2d8d:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2d94:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    2d98:	0f b7 c0             	movzx  eax,ax
    2d9b:	89 c6                	mov    esi,eax
    2d9d:	48 8d 3d c3 93 00 00 	lea    rdi,[rip+0x93c3]        # c167 <_IO_stdin_used+0x167>
    2da4:	b8 00 00 00 00       	mov    eax,0x0
    2da9:	e8 d2 f6 ff ff       	call   2480 <printf@plt>
    2dae:	eb 04                	jmp    2db4 <arpdecode+0x2c5>
    2db0:	90                   	nop
    2db1:	eb 01                	jmp    2db4 <arpdecode+0x2c5>
    2db3:	90                   	nop
    2db4:	48 8d 35 c4 93 00 00 	lea    rsi,[rip+0x93c4]        # c17f <_IO_stdin_used+0x17f>
    2dbb:	48 8d 3d 2e 93 00 00 	lea    rdi,[rip+0x932e]        # c0f0 <_IO_stdin_used+0xf0>
    2dc2:	b8 00 00 00 00       	mov    eax,0x0
    2dc7:	e8 b4 f6 ff ff       	call   2480 <printf@plt>
    2dcc:	90                   	nop
    2dcd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2dd1:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    2dd8:	00 00 
    2dda:	74 05                	je     2de1 <arpdecode+0x2f2>
    2ddc:	e8 5f f9 ff ff       	call   2740 <__stack_chk_fail@plt>
    2de1:	c9                   	leave  
    2de2:	c3                   	ret    

0000000000002de3 <loopback_ctp_decode>:
    2de3:	f3 0f 1e fa          	endbr64 
    2de7:	55                   	push   rbp
    2de8:	48 89 e5             	mov    rbp,rsp
    2deb:	48 83 ec 60          	sub    rsp,0x60
    2def:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    2df3:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2dfa:	00 00 
    2dfc:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2e00:	31 c0                	xor    eax,eax
    2e02:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    2e06:	48 83 c0 0e          	add    rax,0xe
    2e0a:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    2e0e:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    2e12:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    2e16:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    2e1a:	48 83 c0 06          	add    rax,0x6
    2e1e:	48 89 c7             	mov    rdi,rax
    2e21:	e8 7e 01 00 00       	call   2fa4 <uc_mac_ntoa>
    2e26:	48 89 c1             	mov    rcx,rax
    2e29:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    2e2d:	ba 18 00 00 00       	mov    edx,0x18
    2e32:	48 89 ce             	mov    rsi,rcx
    2e35:	48 89 c7             	mov    rdi,rax
    2e38:	e8 83 f9 ff ff       	call   27c0 <strncpy@plt>
    2e3d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    2e41:	48 89 c7             	mov    rdi,rax
    2e44:	e8 5b 01 00 00       	call   2fa4 <uc_mac_ntoa>
    2e49:	48 89 c1             	mov    rcx,rax
    2e4c:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    2e50:	ba 18 00 00 00       	mov    edx,0x18
    2e55:	48 89 ce             	mov    rsi,rcx
    2e58:	48 89 c7             	mov    rdi,rax
    2e5b:	e8 60 f9 ff ff       	call   27c0 <strncpy@plt>
    2e60:	0f b6 05 fd 70 10 00 	movzx  eax,BYTE PTR [rip+0x1070fd]        # 109f64 <packet_print>
    2e67:	84 c0                	test   al,al
    2e69:	74 1c                	je     2e87 <loopback_ctp_decode+0xa4>
    2e6b:	48 8d 55 e0          	lea    rdx,[rbp-0x20]
    2e6f:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    2e73:	48 89 c6             	mov    rsi,rax
    2e76:	48 8d 3d 07 93 00 00 	lea    rdi,[rip+0x9307]        # c184 <_IO_stdin_used+0x184>
    2e7d:	b8 00 00 00 00       	mov    eax,0x0
    2e82:	e8 f9 f5 ff ff       	call   2480 <printf@plt>
    2e87:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    2e8b:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    2e8f:	0f b7 c0             	movzx  eax,ax
    2e92:	83 f8 01             	cmp    eax,0x1
    2e95:	75 19                	jne    2eb0 <loopback_ctp_decode+0xcd>
    2e97:	0f b6 05 c6 70 10 00 	movzx  eax,BYTE PTR [rip+0x1070c6]        # 109f64 <packet_print>
    2e9e:	84 c0                	test   al,al
    2ea0:	74 39                	je     2edb <loopback_ctp_decode+0xf8>
    2ea2:	48 8d 3d e9 92 00 00 	lea    rdi,[rip+0x92e9]        # c192 <_IO_stdin_used+0x192>
    2ea9:	e8 32 f6 ff ff       	call   24e0 <puts@plt>
    2eae:	eb 2b                	jmp    2edb <loopback_ctp_decode+0xf8>
    2eb0:	0f b6 05 ad 70 10 00 	movzx  eax,BYTE PTR [rip+0x1070ad]        # 109f64 <packet_print>
    2eb7:	84 c0                	test   al,al
    2eb9:	74 23                	je     2ede <loopback_ctp_decode+0xfb>
    2ebb:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    2ebf:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    2ec3:	0f b7 c0             	movzx  eax,ax
    2ec6:	89 c6                	mov    esi,eax
    2ec8:	48 8d 3d cb 92 00 00 	lea    rdi,[rip+0x92cb]        # c19a <_IO_stdin_used+0x19a>
    2ecf:	b8 00 00 00 00       	mov    eax,0x0
    2ed4:	e8 a7 f5 ff ff       	call   2480 <printf@plt>
    2ed9:	eb 03                	jmp    2ede <loopback_ctp_decode+0xfb>
    2edb:	90                   	nop
    2edc:	eb 01                	jmp    2edf <loopback_ctp_decode+0xfc>
    2ede:	90                   	nop
    2edf:	90                   	nop
    2ee0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2ee4:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    2eeb:	00 00 
    2eed:	74 05                	je     2ef4 <loopback_ctp_decode+0x111>
    2eef:	e8 4c f8 ff ff       	call   2740 <__stack_chk_fail@plt>
    2ef4:	c9                   	leave  
    2ef5:	c3                   	ret    

0000000000002ef6 <mac_ntoa>:
    2ef6:	f3 0f 1e fa          	endbr64 
    2efa:	55                   	push   rbp
    2efb:	48 89 e5             	mov    rbp,rsp
    2efe:	48 83 ec 20          	sub    rsp,0x20
    2f02:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    2f06:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2f0a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2f0e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f12:	48 83 c0 05          	add    rax,0x5
    2f16:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f19:	0f b6 f0             	movzx  esi,al
    2f1c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f20:	48 83 c0 04          	add    rax,0x4
    2f24:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f27:	0f b6 c8             	movzx  ecx,al
    2f2a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f2e:	48 83 c0 03          	add    rax,0x3
    2f32:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f35:	0f b6 d0             	movzx  edx,al
    2f38:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f3c:	48 83 c0 02          	add    rax,0x2
    2f40:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f43:	44 0f b6 c8          	movzx  r9d,al
    2f47:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f4b:	48 83 c0 01          	add    rax,0x1
    2f4f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f52:	44 0f b6 c0          	movzx  r8d,al
    2f56:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f5a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f5d:	0f b6 c0             	movzx  eax,al
    2f60:	64 48 8b 3c 25 00 00 	mov    rdi,QWORD PTR fs:0x0
    2f67:	00 00 
    2f69:	48 81 c7 80 fb ff ff 	add    rdi,0xfffffffffffffb80
    2f70:	48 83 ec 08          	sub    rsp,0x8
    2f74:	56                   	push   rsi
    2f75:	51                   	push   rcx
    2f76:	52                   	push   rdx
    2f77:	89 c1                	mov    ecx,eax
    2f79:	48 8d 15 38 92 00 00 	lea    rdx,[rip+0x9238]        # c1b8 <_IO_stdin_used+0x1b8>
    2f80:	be 80 00 00 00       	mov    esi,0x80
    2f85:	b8 00 00 00 00       	mov    eax,0x0
    2f8a:	e8 11 f5 ff ff       	call   24a0 <snprintf@plt>
    2f8f:	48 83 c4 20          	add    rsp,0x20
    2f93:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    2f9a:	00 00 
    2f9c:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    2fa2:	c9                   	leave  
    2fa3:	c3                   	ret    

0000000000002fa4 <uc_mac_ntoa>:
    2fa4:	f3 0f 1e fa          	endbr64 
    2fa8:	55                   	push   rbp
    2fa9:	48 89 e5             	mov    rbp,rsp
    2fac:	48 83 ec 10          	sub    rsp,0x10
    2fb0:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    2fb4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fb8:	48 83 c0 05          	add    rax,0x5
    2fbc:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fbf:	0f b6 f0             	movzx  esi,al
    2fc2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fc6:	48 83 c0 04          	add    rax,0x4
    2fca:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fcd:	0f b6 c8             	movzx  ecx,al
    2fd0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fd4:	48 83 c0 03          	add    rax,0x3
    2fd8:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fdb:	0f b6 d0             	movzx  edx,al
    2fde:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fe2:	48 83 c0 02          	add    rax,0x2
    2fe6:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fe9:	44 0f b6 c8          	movzx  r9d,al
    2fed:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2ff1:	48 83 c0 01          	add    rax,0x1
    2ff5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2ff8:	44 0f b6 c0          	movzx  r8d,al
    2ffc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3000:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3003:	0f b6 c0             	movzx  eax,al
    3006:	64 48 8b 3c 25 00 00 	mov    rdi,QWORD PTR fs:0x0
    300d:	00 00 
    300f:	48 81 c7 80 fb ff ff 	add    rdi,0xfffffffffffffb80
    3016:	48 83 ec 08          	sub    rsp,0x8
    301a:	56                   	push   rsi
    301b:	51                   	push   rcx
    301c:	52                   	push   rdx
    301d:	89 c1                	mov    ecx,eax
    301f:	48 8d 15 92 91 00 00 	lea    rdx,[rip+0x9192]        # c1b8 <_IO_stdin_used+0x1b8>
    3026:	be 80 00 00 00       	mov    esi,0x80
    302b:	b8 00 00 00 00       	mov    eax,0x0
    3030:	e8 6b f4 ff ff       	call   24a0 <snprintf@plt>
    3035:	48 83 c4 20          	add    rsp,0x20
    3039:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3040:	00 00 
    3042:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    3048:	c9                   	leave  
    3049:	c3                   	ret    

000000000000304a <u8_ipv4_ntoa>:
    304a:	f3 0f 1e fa          	endbr64 
    304e:	55                   	push   rbp
    304f:	48 89 e5             	mov    rbp,rsp
    3052:	48 83 ec 20          	sub    rsp,0x20
    3056:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    305a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    305e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3062:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3066:	48 83 c0 03          	add    rax,0x3
    306a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    306d:	0f b6 d0             	movzx  edx,al
    3070:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3074:	48 83 c0 02          	add    rax,0x2
    3078:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    307b:	44 0f b6 c0          	movzx  r8d,al
    307f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3083:	48 83 c0 01          	add    rax,0x1
    3087:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    308a:	0f b6 f0             	movzx  esi,al
    308d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3091:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3094:	0f b6 c0             	movzx  eax,al
    3097:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    309e:	00 00 
    30a0:	48 8d b9 80 fb ff ff 	lea    rdi,[rcx-0x480]
    30a7:	48 83 ec 08          	sub    rsp,0x8
    30ab:	52                   	push   rdx
    30ac:	45 89 c1             	mov    r9d,r8d
    30af:	41 89 f0             	mov    r8d,esi
    30b2:	89 c1                	mov    ecx,eax
    30b4:	48 8d 15 1b 91 00 00 	lea    rdx,[rip+0x911b]        # c1d6 <_IO_stdin_used+0x1d6>
    30bb:	be 80 00 00 00       	mov    esi,0x80
    30c0:	b8 00 00 00 00       	mov    eax,0x0
    30c5:	e8 d6 f3 ff ff       	call   24a0 <snprintf@plt>
    30ca:	48 83 c4 10          	add    rsp,0x10
    30ce:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    30d5:	00 00 
    30d7:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    30dd:	c9                   	leave  
    30de:	c3                   	ret    

00000000000030df <ipv4_ntoa>:
    30df:	f3 0f 1e fa          	endbr64 
    30e3:	55                   	push   rbp
    30e4:	48 89 e5             	mov    rbp,rsp
    30e7:	48 83 ec 20          	sub    rsp,0x20
    30eb:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    30ee:	48 8d 45 ec          	lea    rax,[rbp-0x14]
    30f2:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    30f6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    30fa:	48 83 c0 03          	add    rax,0x3
    30fe:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3101:	0f b6 d0             	movzx  edx,al
    3104:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3108:	48 83 c0 02          	add    rax,0x2
    310c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    310f:	44 0f b6 c0          	movzx  r8d,al
    3113:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3117:	48 83 c0 01          	add    rax,0x1
    311b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    311e:	0f b6 f0             	movzx  esi,al
    3121:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3125:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3128:	0f b6 c0             	movzx  eax,al
    312b:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    3132:	00 00 
    3134:	48 8d b9 80 fb ff ff 	lea    rdi,[rcx-0x480]
    313b:	48 83 ec 08          	sub    rsp,0x8
    313f:	52                   	push   rdx
    3140:	45 89 c1             	mov    r9d,r8d
    3143:	41 89 f0             	mov    r8d,esi
    3146:	89 c1                	mov    ecx,eax
    3148:	48 8d 15 87 90 00 00 	lea    rdx,[rip+0x9087]        # c1d6 <_IO_stdin_used+0x1d6>
    314f:	be 80 00 00 00       	mov    esi,0x80
    3154:	b8 00 00 00 00       	mov    eax,0x0
    3159:	e8 42 f3 ff ff       	call   24a0 <snprintf@plt>
    315e:	48 83 c4 10          	add    rsp,0x10
    3162:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3169:	00 00 
    316b:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    3171:	c9                   	leave  
    3172:	c3                   	ret    

0000000000003173 <inet6_ntoa>:
    3173:	f3 0f 1e fa          	endbr64 
    3177:	55                   	push   rbp
    3178:	48 89 e5             	mov    rbp,rsp
    317b:	41 57                	push   r15
    317d:	41 56                	push   r14
    317f:	41 55                	push   r13
    3181:	41 54                	push   r12
    3183:	53                   	push   rbx
    3184:	48 83 ec 38          	sub    rsp,0x38
    3188:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    318c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3193:	00 00 
    3195:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    3199:	31 c0                	xor    eax,eax
    319b:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    31a2:	00 00 
    31a4:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    31aa:	ba 80 00 00 00       	mov    edx,0x80
    31af:	be 00 00 00 00       	mov    esi,0x0
    31b4:	48 89 c7             	mov    rdi,rax
    31b7:	e8 d4 f2 ff ff       	call   2490 <memset@plt>
    31bc:	48 c7 45 c0 00 00 00 	mov    QWORD PTR [rbp-0x40],0x0
    31c3:	00 
    31c4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    31c8:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    31cc:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    31d0:	48 83 c0 0f          	add    rax,0xf
    31d4:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31d7:	0f b6 c8             	movzx  ecx,al
    31da:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    31de:	48 83 c0 0e          	add    rax,0xe
    31e2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31e5:	0f b6 f8             	movzx  edi,al
    31e8:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    31ec:	48 83 c0 0d          	add    rax,0xd
    31f0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31f3:	0f b6 c0             	movzx  eax,al
    31f6:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
    31f9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    31fd:	48 83 c0 0c          	add    rax,0xc
    3201:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3204:	0f b6 d8             	movzx  ebx,al
    3207:	89 5d b0             	mov    DWORD PTR [rbp-0x50],ebx
    320a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    320e:	48 83 c0 0b          	add    rax,0xb
    3212:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3215:	44 0f b6 f8          	movzx  r15d,al
    3219:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    321d:	48 83 c0 0a          	add    rax,0xa
    3221:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3224:	44 0f b6 f0          	movzx  r14d,al
    3228:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    322c:	48 83 c0 09          	add    rax,0x9
    3230:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3233:	44 0f b6 e8          	movzx  r13d,al
    3237:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    323b:	48 83 c0 08          	add    rax,0x8
    323f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3242:	44 0f b6 e0          	movzx  r12d,al
    3246:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    324a:	48 83 c0 07          	add    rax,0x7
    324e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3251:	0f b6 d8             	movzx  ebx,al
    3254:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3258:	48 83 c0 06          	add    rax,0x6
    325c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    325f:	44 0f b6 d8          	movzx  r11d,al
    3263:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3267:	48 83 c0 05          	add    rax,0x5
    326b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    326e:	44 0f b6 d0          	movzx  r10d,al
    3272:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3276:	48 83 c0 04          	add    rax,0x4
    327a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    327d:	44 0f b6 c8          	movzx  r9d,al
    3281:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3285:	48 83 c0 03          	add    rax,0x3
    3289:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    328c:	44 0f b6 c0          	movzx  r8d,al
    3290:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3294:	48 83 c0 02          	add    rax,0x2
    3298:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    329b:	0f b6 d0             	movzx  edx,al
    329e:	89 55 ac             	mov    DWORD PTR [rbp-0x54],edx
    32a1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32a5:	48 83 c0 01          	add    rax,0x1
    32a9:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32ac:	0f b6 f0             	movzx  esi,al
    32af:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32b3:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32b6:	0f b6 d0             	movzx  edx,al
    32b9:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    32c0:	00 00 
    32c2:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    32c8:	48 83 ec 08          	sub    rsp,0x8
    32cc:	51                   	push   rcx
    32cd:	57                   	push   rdi
    32ce:	8b 4d b4             	mov    ecx,DWORD PTR [rbp-0x4c]
    32d1:	51                   	push   rcx
    32d2:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
    32d5:	51                   	push   rcx
    32d6:	41 57                	push   r15
    32d8:	41 56                	push   r14
    32da:	41 55                	push   r13
    32dc:	41 54                	push   r12
    32de:	53                   	push   rbx
    32df:	41 53                	push   r11
    32e1:	41 52                	push   r10
    32e3:	41 51                	push   r9
    32e5:	41 50                	push   r8
    32e7:	44 8b 4d ac          	mov    r9d,DWORD PTR [rbp-0x54]
    32eb:	41 89 f0             	mov    r8d,esi
    32ee:	89 d1                	mov    ecx,edx
    32f0:	48 8d 15 f1 8e 00 00 	lea    rdx,[rip+0x8ef1]        # c1e8 <_IO_stdin_used+0x1e8>
    32f7:	be 80 00 00 00       	mov    esi,0x80
    32fc:	48 89 c7             	mov    rdi,rax
    32ff:	b8 00 00 00 00       	mov    eax,0x0
    3304:	e8 97 f1 ff ff       	call   24a0 <snprintf@plt>
    3309:	48 83 c4 70          	add    rsp,0x70
    330d:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3314:	00 00 
    3316:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    331c:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    3320:	64 48 2b 34 25 28 00 	sub    rsi,QWORD PTR fs:0x28
    3327:	00 00 
    3329:	74 05                	je     3330 <inet6_ntoa+0x1bd>
    332b:	e8 10 f4 ff ff       	call   2740 <__stack_chk_fail@plt>
    3330:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    3334:	5b                   	pop    rbx
    3335:	41 5c                	pop    r12
    3337:	41 5d                	pop    r13
    3339:	41 5e                	pop    r14
    333b:	41 5f                	pop    r15
    333d:	5d                   	pop    rbp
    333e:	c3                   	ret    

000000000000333f <get_formated_time>:
    333f:	f3 0f 1e fa          	endbr64 
    3343:	55                   	push   rbp
    3344:	48 89 e5             	mov    rbp,rsp
    3347:	53                   	push   rbx
    3348:	48 83 ec 58          	sub    rsp,0x58
    334c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3353:	00 00 
    3355:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    3359:	31 c0                	xor    eax,eax
    335b:	bf ff 00 00 00       	mov    edi,0xff
    3360:	e8 fb f1 ff ff       	call   2560 <malloc@plt>
    3365:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    3369:	bf 00 00 00 00       	mov    edi,0x0
    336e:	e8 fd f4 ff ff       	call   2870 <time@plt>
    3373:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    3377:	48 8d 45 a0          	lea    rax,[rbp-0x60]
    337b:	48 89 c7             	mov    rdi,rax
    337e:	e8 ad f4 ff ff       	call   2830 <localtime@plt>
    3383:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    3386:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    338a:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
    338e:	48 89 5d b8          	mov    QWORD PTR [rbp-0x48],rbx
    3392:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    3396:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    339a:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    339e:	48 89 5d c8          	mov    QWORD PTR [rbp-0x38],rbx
    33a2:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    33a6:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    33aa:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    33ae:	48 89 5d d8          	mov    QWORD PTR [rbp-0x28],rbx
    33b2:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    33b6:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    33ba:	8b 7d b0             	mov    edi,DWORD PTR [rbp-0x50]
    33bd:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
    33c0:	44 8b 4d b8          	mov    r9d,DWORD PTR [rbp-0x48]
    33c4:	44 8b 45 bc          	mov    r8d,DWORD PTR [rbp-0x44]
    33c8:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    33cb:	8d 48 01             	lea    ecx,[rax+0x1]
    33ce:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    33d1:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    33d7:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    33db:	57                   	push   rdi
    33dc:	56                   	push   rsi
    33dd:	48 8d 35 4c 8e 00 00 	lea    rsi,[rip+0x8e4c]        # c230 <_IO_stdin_used+0x230>
    33e4:	48 89 c7             	mov    rdi,rax
    33e7:	b8 00 00 00 00       	mov    eax,0x0
    33ec:	e8 2f f2 ff ff       	call   2620 <sprintf@plt>
    33f1:	48 83 c4 10          	add    rsp,0x10
    33f5:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    33f9:	48 8b 5d e8          	mov    rbx,QWORD PTR [rbp-0x18]
    33fd:	64 48 2b 1c 25 28 00 	sub    rbx,QWORD PTR fs:0x28
    3404:	00 00 
    3406:	74 05                	je     340d <get_formated_time+0xce>
    3408:	e8 33 f3 ff ff       	call   2740 <__stack_chk_fail@plt>
    340d:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    3411:	c9                   	leave  
    3412:	c3                   	ret    

0000000000003413 <cb_get_formatted_time>:
    3413:	f3 0f 1e fa          	endbr64 
    3417:	55                   	push   rbp
    3418:	48 89 e5             	mov    rbp,rsp
    341b:	53                   	push   rbx
    341c:	48 83 ec 68          	sub    rsp,0x68
    3420:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    3424:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    342b:	00 00 
    342d:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    3431:	31 c0                	xor    eax,eax
    3433:	bf 00 00 00 00       	mov    edi,0x0
    3438:	e8 33 f4 ff ff       	call   2870 <time@plt>
    343d:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    3441:	48 8d 45 a8          	lea    rax,[rbp-0x58]
    3445:	48 89 c7             	mov    rdi,rax
    3448:	e8 e3 f3 ff ff       	call   2830 <localtime@plt>
    344d:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    3450:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    3454:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
    3458:	48 89 5d b8          	mov    QWORD PTR [rbp-0x48],rbx
    345c:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    3460:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    3464:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    3468:	48 89 5d c8          	mov    QWORD PTR [rbp-0x38],rbx
    346c:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    3470:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    3474:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    3478:	48 89 5d d8          	mov    QWORD PTR [rbp-0x28],rbx
    347c:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    3480:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    3484:	8b 7d b0             	mov    edi,DWORD PTR [rbp-0x50]
    3487:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
    348a:	44 8b 4d b8          	mov    r9d,DWORD PTR [rbp-0x48]
    348e:	44 8b 45 bc          	mov    r8d,DWORD PTR [rbp-0x44]
    3492:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    3495:	8d 48 01             	lea    ecx,[rax+0x1]
    3498:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    349b:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    34a1:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    34a5:	57                   	push   rdi
    34a6:	56                   	push   rsi
    34a7:	48 8d 35 82 8d 00 00 	lea    rsi,[rip+0x8d82]        # c230 <_IO_stdin_used+0x230>
    34ae:	48 89 c7             	mov    rdi,rax
    34b1:	b8 00 00 00 00       	mov    eax,0x0
    34b6:	e8 65 f1 ff ff       	call   2620 <sprintf@plt>
    34bb:	48 83 c4 10          	add    rsp,0x10
    34bf:	90                   	nop
    34c0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    34c4:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    34cb:	00 00 
    34cd:	74 05                	je     34d4 <cb_get_formatted_time+0xc1>
    34cf:	e8 6c f2 ff ff       	call   2740 <__stack_chk_fail@plt>
    34d4:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    34d8:	c9                   	leave  
    34d9:	c3                   	ret    

00000000000034da <strloc>:
    34da:	f3 0f 1e fa          	endbr64 
    34de:	55                   	push   rbp
    34df:	48 89 e5             	mov    rbp,rsp
    34e2:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    34e6:	89 f0                	mov    eax,esi
    34e8:	88 45 e4             	mov    BYTE PTR [rbp-0x1c],al
    34eb:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    34f2:	eb 1e                	jmp    3512 <strloc+0x38>
    34f4:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    34f7:	48 63 d0             	movsxd rdx,eax
    34fa:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    34fe:	48 01 d0             	add    rax,rdx
    3501:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3504:	38 45 e4             	cmp    BYTE PTR [rbp-0x1c],al
    3507:	75 05                	jne    350e <strloc+0x34>
    3509:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    350c:	eb 1d                	jmp    352b <strloc+0x51>
    350e:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    3512:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    3515:	48 63 d0             	movsxd rdx,eax
    3518:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    351c:	48 01 d0             	add    rax,rdx
    351f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3522:	84 c0                	test   al,al
    3524:	75 ce                	jne    34f4 <strloc+0x1a>
    3526:	b8 ff ff ff ff       	mov    eax,0xffffffff
    352b:	5d                   	pop    rbp
    352c:	c3                   	ret    

000000000000352d <fail>:
    352d:	f3 0f 1e fa          	endbr64 
    3531:	55                   	push   rbp
    3532:	48 89 e5             	mov    rbp,rsp
    3535:	48 83 ec 10          	sub    rsp,0x10
    3539:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    353d:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    3541:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    3545:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3549:	48 89 c6             	mov    rsi,rax
    354c:	48 8d 3d f9 8c 00 00 	lea    rdi,[rip+0x8cf9]        # c24c <_IO_stdin_used+0x24c>
    3553:	b8 00 00 00 00       	mov    eax,0x0
    3558:	e8 23 ef ff ff       	call   2480 <printf@plt>
    355d:	90                   	nop
    355e:	c9                   	leave  
    355f:	c3                   	ret    

0000000000003560 <char_is_printable>:
    3560:	f3 0f 1e fa          	endbr64 
    3564:	55                   	push   rbp
    3565:	48 89 e5             	mov    rbp,rsp
    3568:	89 f8                	mov    eax,edi
    356a:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
    356d:	80 7d fc 1f          	cmp    BYTE PTR [rbp-0x4],0x1f
    3571:	7f 07                	jg     357a <char_is_printable+0x1a>
    3573:	b8 00 00 00 00       	mov    eax,0x0
    3578:	eb 05                	jmp    357f <char_is_printable+0x1f>
    357a:	b8 01 00 00 00       	mov    eax,0x1
    357f:	5d                   	pop    rbp
    3580:	c3                   	ret    

0000000000003581 <test_string_arr_print>:
    3581:	f3 0f 1e fa          	endbr64 
    3585:	55                   	push   rbp
    3586:	48 89 e5             	mov    rbp,rsp
    3589:	53                   	push   rbx
    358a:	48 83 ec 28          	sub    rsp,0x28
    358e:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    3592:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    3599:	eb 2c                	jmp    35c7 <test_string_arr_print+0x46>
    359b:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    359e:	48 63 d0             	movsxd rdx,eax
    35a1:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    35a5:	48 01 d0             	add    rax,rdx
    35a8:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    35ab:	0f be c0             	movsx  eax,al
    35ae:	89 c7                	mov    edi,eax
    35b0:	e8 ab ff ff ff       	call   3560 <char_is_printable>
    35b5:	83 f0 01             	xor    eax,0x1
    35b8:	84 c0                	test   al,al
    35ba:	74 07                	je     35c3 <test_string_arr_print+0x42>
    35bc:	b8 00 00 00 00       	mov    eax,0x0
    35c1:	eb 20                	jmp    35e3 <test_string_arr_print+0x62>
    35c3:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    35c7:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    35ca:	48 63 d8             	movsxd rbx,eax
    35cd:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    35d1:	48 89 c7             	mov    rdi,rax
    35d4:	e8 27 f0 ff ff       	call   2600 <strlen@plt>
    35d9:	48 39 c3             	cmp    rbx,rax
    35dc:	72 bd                	jb     359b <test_string_arr_print+0x1a>
    35de:	b8 01 00 00 00       	mov    eax,0x1
    35e3:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    35e7:	c9                   	leave  
    35e8:	c3                   	ret    

00000000000035e9 <ipv4pktmgr>:
    35e9:	f3 0f 1e fa          	endbr64 
    35ed:	55                   	push   rbp
    35ee:	48 89 e5             	mov    rbp,rsp
    35f1:	48 81 ec d0 04 00 00 	sub    rsp,0x4d0
    35f8:	48 89 bd 38 fb ff ff 	mov    QWORD PTR [rbp-0x4c8],rdi
    35ff:	48 89 b5 30 fb ff ff 	mov    QWORD PTR [rbp-0x4d0],rsi
    3606:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    360d:	00 00 
    360f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3613:	31 c0                	xor    eax,eax
    3615:	48 8b 85 38 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4c8]
    361c:	48 83 c0 0e          	add    rax,0xe
    3620:	48 89 85 58 fb ff ff 	mov    QWORD PTR [rbp-0x4a8],rax
    3627:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    362e:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    3631:	89 c7                	mov    edi,eax
    3633:	e8 08 f0 ff ff       	call   2640 <ntohl@plt>
    3638:	89 85 7c fb ff ff    	mov    DWORD PTR [rbp-0x484],eax
    363e:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    3645:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    3648:	89 c7                	mov    edi,eax
    364a:	e8 f1 ef ff ff       	call   2640 <ntohl@plt>
    364f:	89 85 78 fb ff ff    	mov    DWORD PTR [rbp-0x488],eax
    3655:	8b 95 78 fb ff ff    	mov    edx,DWORD PTR [rbp-0x488]
    365b:	8b 05 67 69 10 00    	mov    eax,DWORD PTR [rip+0x106967]        # 109fc8 <homenetmask>
    3661:	21 d0                	and    eax,edx
    3663:	89 85 4c fb ff ff    	mov    DWORD PTR [rbp-0x4b4],eax
    3669:	8b 95 7c fb ff ff    	mov    edx,DWORD PTR [rbp-0x484]
    366f:	8b 05 53 69 10 00    	mov    eax,DWORD PTR [rip+0x106953]        # 109fc8 <homenetmask>
    3675:	21 d0                	and    eax,edx
    3677:	89 85 50 fb ff ff    	mov    DWORD PTR [rbp-0x4b0],eax
    367d:	8b 05 41 69 10 00    	mov    eax,DWORD PTR [rip+0x106941]        # 109fc4 <homenet>
    3683:	39 85 4c fb ff ff    	cmp    DWORD PTR [rbp-0x4b4],eax
    3689:	75 0c                	jne    3697 <ipv4pktmgr+0xae>
    368b:	c7 85 80 fb ff ff 45 	mov    DWORD PTR [rbp-0x480],0x45
    3692:	00 00 00 
    3695:	eb 24                	jmp    36bb <ipv4pktmgr+0xd2>
    3697:	8b 05 27 69 10 00    	mov    eax,DWORD PTR [rip+0x106927]        # 109fc4 <homenet>
    369d:	39 85 50 fb ff ff    	cmp    DWORD PTR [rbp-0x4b0],eax
    36a3:	75 0c                	jne    36b1 <ipv4pktmgr+0xc8>
    36a5:	c7 85 80 fb ff ff 46 	mov    DWORD PTR [rbp-0x480],0x46
    36ac:	00 00 00 
    36af:	eb 0a                	jmp    36bb <ipv4pktmgr+0xd2>
    36b1:	c7 85 80 fb ff ff 47 	mov    DWORD PTR [rbp-0x480],0x47
    36b8:	00 00 00 
    36bb:	48 8b 85 30 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d0]
    36c2:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    36c5:	89 85 90 fb ff ff    	mov    DWORD PTR [rbp-0x470],eax
    36cb:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    36d2:	48 89 85 a8 fb ff ff 	mov    QWORD PTR [rbp-0x458],rax
    36d9:	48 8b 85 30 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d0]
    36e0:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    36e3:	48 8b 95 38 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4c8]
    36ea:	48 83 c2 0e          	add    rdx,0xe
    36ee:	0f b6 12             	movzx  edx,BYTE PTR [rdx]
    36f1:	83 e2 0f             	and    edx,0xf
    36f4:	0f b6 d2             	movzx  edx,dl
    36f7:	c1 e2 02             	shl    edx,0x2
    36fa:	29 d0                	sub    eax,edx
    36fc:	83 e8 0e             	sub    eax,0xe
    36ff:	89 85 54 fb ff ff    	mov    DWORD PTR [rbp-0x4ac],eax
    3705:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    370c:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    370f:	89 c7                	mov    edi,eax
    3711:	e8 c9 f9 ff ff       	call   30df <ipv4_ntoa>
    3716:	48 89 c1             	mov    rcx,rax
    3719:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    3720:	ba 10 00 00 00       	mov    edx,0x10
    3725:	48 89 ce             	mov    rsi,rcx
    3728:	48 89 c7             	mov    rdi,rax
    372b:	e8 90 f0 ff ff       	call   27c0 <strncpy@plt>
    3730:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    3737:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    373a:	89 c7                	mov    edi,eax
    373c:	e8 9e f9 ff ff       	call   30df <ipv4_ntoa>
    3741:	48 89 c1             	mov    rcx,rax
    3744:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    374b:	ba 10 00 00 00       	mov    edx,0x10
    3750:	48 89 ce             	mov    rsi,rcx
    3753:	48 89 c7             	mov    rdi,rax
    3756:	e8 65 f0 ff ff       	call   27c0 <strncpy@plt>
    375b:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    3762:	48 89 c7             	mov    rdi,rax
    3765:	e8 74 41 00 00       	call   78de <init_member>
    376a:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    3771:	48 89 c7             	mov    rdi,rax
    3774:	e8 65 41 00 00       	call   78de <init_member>
    3779:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    3780:	48 89 c7             	mov    rdi,rax
    3783:	e8 96 20 00 00       	call   581e <is_blocked_ipv4>
    3788:	84 c0                	test   al,al
    378a:	74 44                	je     37d0 <ipv4pktmgr+0x1e7>
    378c:	b8 00 00 00 00       	mov    eax,0x0
    3791:	e8 a9 fb ff ff       	call   333f <get_formated_time>
    3796:	48 89 c6             	mov    rsi,rax
    3799:	48 8d 95 e0 fb ff ff 	lea    rdx,[rbp-0x420]
    37a0:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    37a7:	48 89 d1             	mov    rcx,rdx
    37aa:	48 89 f2             	mov    rdx,rsi
    37ad:	48 8d 35 a4 8a 00 00 	lea    rsi,[rip+0x8aa4]        # c258 <_IO_stdin_used+0x258>
    37b4:	48 89 c7             	mov    rdi,rax
    37b7:	b8 00 00 00 00       	mov    eax,0x0
    37bc:	e8 5f ee ff ff       	call   2620 <sprintf@plt>
    37c1:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    37c8:	48 89 c7             	mov    rdi,rax
    37cb:	e8 ef 58 00 00       	call   90bf <saprintf>
    37d0:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    37d7:	48 89 c7             	mov    rdi,rax
    37da:	e8 3f 20 00 00       	call   581e <is_blocked_ipv4>
    37df:	84 c0                	test   al,al
    37e1:	74 44                	je     3827 <ipv4pktmgr+0x23e>
    37e3:	b8 00 00 00 00       	mov    eax,0x0
    37e8:	e8 52 fb ff ff       	call   333f <get_formated_time>
    37ed:	48 89 c6             	mov    rsi,rax
    37f0:	48 8d 95 d0 fb ff ff 	lea    rdx,[rbp-0x430]
    37f7:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    37fe:	48 89 d1             	mov    rcx,rdx
    3801:	48 89 f2             	mov    rdx,rsi
    3804:	48 8d 35 7d 8a 00 00 	lea    rsi,[rip+0x8a7d]        # c288 <_IO_stdin_used+0x288>
    380b:	48 89 c7             	mov    rdi,rax
    380e:	b8 00 00 00 00       	mov    eax,0x0
    3813:	e8 08 ee ff ff       	call   2620 <sprintf@plt>
    3818:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    381f:	48 89 c7             	mov    rdi,rax
    3822:	e8 98 58 00 00       	call   90bf <saprintf>
    3827:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    382e:	48 89 85 68 fb ff ff 	mov    QWORD PTR [rbp-0x498],rax
    3835:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    383c:	48 89 85 70 fb ff ff 	mov    QWORD PTR [rbp-0x490],rax
    3843:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    384a:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    384e:	66 83 f8 20          	cmp    ax,0x20
    3852:	74 11                	je     3865 <ipv4pktmgr+0x27c>
    3854:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    385b:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    385f:	66 3d 02 01          	cmp    ax,0x102
    3863:	75 66                	jne    38cb <ipv4pktmgr+0x2e2>
    3865:	48 8d 35 44 8a 00 00 	lea    rsi,[rip+0x8a44]        # c2b0 <_IO_stdin_used+0x2b0>
    386c:	48 8d 3d 42 8a 00 00 	lea    rdi,[rip+0x8a42]        # c2b5 <_IO_stdin_used+0x2b5>
    3873:	b8 00 00 00 00       	mov    eax,0x0
    3878:	e8 03 ec ff ff       	call   2480 <printf@plt>
    387d:	0f b6 05 e0 66 10 00 	movzx  eax,BYTE PTR [rip+0x1066e0]        # 109f64 <packet_print>
    3884:	84 c0                	test   al,al
    3886:	74 1a                	je     38a2 <ipv4pktmgr+0x2b9>
    3888:	48 8d 35 34 8a 00 00 	lea    rsi,[rip+0x8a34]        # c2c3 <_IO_stdin_used+0x2c3>
    388f:	48 8d 3d 32 8a 00 00 	lea    rdi,[rip+0x8a32]        # c2c8 <_IO_stdin_used+0x2c8>
    3896:	b8 00 00 00 00       	mov    eax,0x0
    389b:	e8 e0 eb ff ff       	call   2480 <printf@plt>
    38a0:	eb 29                	jmp    38cb <ipv4pktmgr+0x2e2>
    38a2:	48 8d 95 e0 fb ff ff 	lea    rdx,[rbp-0x420]
    38a9:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    38b0:	48 8d 0d 0c 8a 00 00 	lea    rcx,[rip+0x8a0c]        # c2c3 <_IO_stdin_used+0x2c3>
    38b7:	48 89 c6             	mov    rsi,rax
    38ba:	48 8d 3d 0a 8a 00 00 	lea    rdi,[rip+0x8a0a]        # c2cb <_IO_stdin_used+0x2cb>
    38c1:	b8 00 00 00 00       	mov    eax,0x0
    38c6:	e8 b5 eb ff ff       	call   2480 <printf@plt>
    38cb:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    38d2:	0f b6 40 09          	movzx  eax,BYTE PTR [rax+0x9]
    38d6:	0f b6 c0             	movzx  eax,al
    38d9:	83 f8 11             	cmp    eax,0x11
    38dc:	0f 84 b8 00 00 00    	je     399a <ipv4pktmgr+0x3b1>
    38e2:	83 f8 11             	cmp    eax,0x11
    38e5:	0f 8f db 00 00 00    	jg     39c6 <ipv4pktmgr+0x3dd>
    38eb:	83 f8 06             	cmp    eax,0x6
    38ee:	74 7e                	je     396e <ipv4pktmgr+0x385>
    38f0:	83 f8 06             	cmp    eax,0x6
    38f3:	0f 8f cd 00 00 00    	jg     39c6 <ipv4pktmgr+0x3dd>
    38f9:	83 f8 01             	cmp    eax,0x1
    38fc:	74 0a                	je     3908 <ipv4pktmgr+0x31f>
    38fe:	83 f8 02             	cmp    eax,0x2
    3901:	74 2d                	je     3930 <ipv4pktmgr+0x347>
    3903:	e9 be 00 00 00       	jmp    39c6 <ipv4pktmgr+0x3dd>
    3908:	c7 85 8c fb ff ff 80 	mov    DWORD PTR [rbp-0x474],0x80
    390f:	00 00 00 
    3912:	48 8d 95 60 fb ff ff 	lea    rdx,[rbp-0x4a0]
    3919:	48 8b 85 38 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4c8]
    3920:	48 89 d6             	mov    rsi,rdx
    3923:	48 89 c7             	mov    rdi,rax
    3926:	e8 40 02 00 00       	call   3b6b <ip4_icmp_decode>
    392b:	e9 c7 00 00 00       	jmp    39f7 <ipv4pktmgr+0x40e>
    3930:	c7 85 8c fb ff ff ff 	mov    DWORD PTR [rbp-0x474],0xffffffff
    3937:	ff ff ff 
    393a:	8b 05 00 d7 00 00    	mov    eax,DWORD PTR [rip+0xd700]        # 11040 <total_conversations>
    3940:	83 e8 01             	sub    eax,0x1
    3943:	89 05 f7 d6 00 00    	mov    DWORD PTR [rip+0xd6f7],eax        # 11040 <total_conversations>
    3949:	48 8b 95 70 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x490]
    3950:	48 8b 8d 68 fb ff ff 	mov    rcx,QWORD PTR [rbp-0x498]
    3957:	48 8b 85 38 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4c8]
    395e:	48 89 ce             	mov    rsi,rcx
    3961:	48 89 c7             	mov    rdi,rax
    3964:	e8 2e 14 00 00       	call   4d97 <ip4_igmp_decode>
    3969:	e9 89 00 00 00       	jmp    39f7 <ipv4pktmgr+0x40e>
    396e:	c7 85 8c fb ff ff 7e 	mov    DWORD PTR [rbp-0x474],0x7e
    3975:	00 00 00 
    3978:	48 8b 95 30 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4d0]
    397f:	48 8d 8d 60 fb ff ff 	lea    rcx,[rbp-0x4a0]
    3986:	48 8b 85 38 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4c8]
    398d:	48 89 ce             	mov    rsi,rcx
    3990:	48 89 c7             	mov    rdi,rax
    3993:	e8 17 0a 00 00       	call   43af <ip4_tcp_decode>
    3998:	eb 5d                	jmp    39f7 <ipv4pktmgr+0x40e>
    399a:	c7 85 8c fb ff ff 7f 	mov    DWORD PTR [rbp-0x474],0x7f
    39a1:	00 00 00 
    39a4:	48 8b 95 30 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4d0]
    39ab:	48 8d 8d 60 fb ff ff 	lea    rcx,[rbp-0x4a0]
    39b2:	48 8b 85 38 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4c8]
    39b9:	48 89 ce             	mov    rsi,rcx
    39bc:	48 89 c7             	mov    rdi,rax
    39bf:	e8 7e 12 00 00       	call   4c42 <ip4_udp_decode>
    39c4:	eb 31                	jmp    39f7 <ipv4pktmgr+0x40e>
    39c6:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    39cd:	0f b6 40 09          	movzx  eax,BYTE PTR [rax+0x9]
    39d1:	0f b6 c8             	movzx  ecx,al
    39d4:	48 8b 95 70 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x490]
    39db:	48 8b 85 68 fb ff ff 	mov    rax,QWORD PTR [rbp-0x498]
    39e2:	48 89 c6             	mov    rsi,rax
    39e5:	48 8d 3d ec 88 00 00 	lea    rdi,[rip+0x88ec]        # c2d8 <_IO_stdin_used+0x2d8>
    39ec:	b8 00 00 00 00       	mov    eax,0x0
    39f1:	e8 8a ea ff ff       	call   2480 <printf@plt>
    39f6:	90                   	nop
    39f7:	90                   	nop
    39f8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    39fc:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    3a03:	00 00 
    3a05:	74 05                	je     3a0c <ipv4pktmgr+0x423>
    3a07:	e8 34 ed ff ff       	call   2740 <__stack_chk_fail@plt>
    3a0c:	c9                   	leave  
    3a0d:	c3                   	ret    

0000000000003a0e <ip6_icmp_decode>:
    3a0e:	f3 0f 1e fa          	endbr64 
    3a12:	55                   	push   rbp
    3a13:	48 89 e5             	mov    rbp,rsp
    3a16:	48 83 c4 80          	add    rsp,0xffffffffffffff80
    3a1a:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    3a1e:	48 89 75 90          	mov    QWORD PTR [rbp-0x70],rsi
    3a22:	48 89 55 88          	mov    QWORD PTR [rbp-0x78],rdx
    3a26:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3a2d:	00 00 
    3a2f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3a33:	31 c0                	xor    eax,eax
    3a35:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    3a39:	48 83 c0 36          	add    rax,0x36
    3a3d:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    3a41:	0f b6 05 1c 65 10 00 	movzx  eax,BYTE PTR [rip+0x10651c]        # 109f64 <packet_print>
    3a48:	84 c0                	test   al,al
    3a4a:	0f 84 04 01 00 00    	je     3b54 <ip6_icmp_decode+0x146>
    3a50:	48 8d 35 a9 88 00 00 	lea    rsi,[rip+0x88a9]        # c300 <_IO_stdin_used+0x300>
    3a57:	48 8d 3d a8 88 00 00 	lea    rdi,[rip+0x88a8]        # c306 <_IO_stdin_used+0x306>
    3a5e:	b8 00 00 00 00       	mov    eax,0x0
    3a63:	e8 18 ea ff ff       	call   2480 <printf@plt>
    3a68:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
    3a6c:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    3a70:	48 89 c6             	mov    rsi,rax
    3a73:	48 8d 3d 8f 88 00 00 	lea    rdi,[rip+0x888f]        # c309 <_IO_stdin_used+0x309>
    3a7a:	b8 00 00 00 00       	mov    eax,0x0
    3a7f:	e8 fc e9 ff ff       	call   2480 <printf@plt>
    3a84:	48 8d 3d 8d 88 00 00 	lea    rdi,[rip+0x888d]        # c318 <_IO_stdin_used+0x318>
    3a8b:	b8 00 00 00 00       	mov    eax,0x0
    3a90:	e8 eb e9 ff ff       	call   2480 <printf@plt>
    3a95:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3a99:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3a9c:	0f b6 c0             	movzx  eax,al
    3a9f:	3d 8f 00 00 00       	cmp    eax,0x8f
    3aa4:	74 68                	je     3b0e <ip6_icmp_decode+0x100>
    3aa6:	3d 8f 00 00 00       	cmp    eax,0x8f
    3aab:	0f 8f 8b 00 00 00    	jg     3b3c <ip6_icmp_decode+0x12e>
    3ab1:	3d 87 00 00 00       	cmp    eax,0x87
    3ab6:	74 77                	je     3b2f <ip6_icmp_decode+0x121>
    3ab8:	3d 87 00 00 00       	cmp    eax,0x87
    3abd:	7f 7d                	jg     3b3c <ip6_icmp_decode+0x12e>
    3abf:	3d 82 00 00 00       	cmp    eax,0x82
    3ac4:	74 56                	je     3b1c <ip6_icmp_decode+0x10e>
    3ac6:	3d 85 00 00 00       	cmp    eax,0x85
    3acb:	75 6f                	jne    3b3c <ip6_icmp_decode+0x12e>
    3acd:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3ad1:	48 83 c0 0a          	add    rax,0xa
    3ad5:	48 89 c7             	mov    rdi,rax
    3ad8:	e8 19 f4 ff ff       	call   2ef6 <mac_ntoa>
    3add:	48 89 c1             	mov    rcx,rax
    3ae0:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    3ae4:	ba 40 00 00 00       	mov    edx,0x40
    3ae9:	48 89 ce             	mov    rsi,rcx
    3aec:	48 89 c7             	mov    rdi,rax
    3aef:	e8 cc ec ff ff       	call   27c0 <strncpy@plt>
    3af4:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    3af8:	48 89 c6             	mov    rsi,rax
    3afb:	48 8d 3d 1f 88 00 00 	lea    rdi,[rip+0x881f]        # c321 <_IO_stdin_used+0x321>
    3b02:	b8 00 00 00 00       	mov    eax,0x0
    3b07:	e8 74 e9 ff ff       	call   2480 <printf@plt>
    3b0c:	eb 2e                	jmp    3b3c <ip6_icmp_decode+0x12e>
    3b0e:	48 8d 3d 2b 88 00 00 	lea    rdi,[rip+0x882b]        # c340 <_IO_stdin_used+0x340>
    3b15:	e8 c6 e9 ff ff       	call   24e0 <puts@plt>
    3b1a:	eb 20                	jmp    3b3c <ip6_icmp_decode+0x12e>
    3b1c:	48 8d 3d 42 88 00 00 	lea    rdi,[rip+0x8842]        # c365 <_IO_stdin_used+0x365>
    3b23:	b8 00 00 00 00       	mov    eax,0x0
    3b28:	e8 53 e9 ff ff       	call   2480 <printf@plt>
    3b2d:	eb 0d                	jmp    3b3c <ip6_icmp_decode+0x12e>
    3b2f:	48 8d 3d 49 88 00 00 	lea    rdi,[rip+0x8849]        # c37f <_IO_stdin_used+0x37f>
    3b36:	e8 a5 e9 ff ff       	call   24e0 <puts@plt>
    3b3b:	90                   	nop
    3b3c:	48 8d 35 52 88 00 00 	lea    rsi,[rip+0x8852]        # c395 <_IO_stdin_used+0x395>
    3b43:	48 8d 3d bc 87 00 00 	lea    rdi,[rip+0x87bc]        # c306 <_IO_stdin_used+0x306>
    3b4a:	b8 00 00 00 00       	mov    eax,0x0
    3b4f:	e8 2c e9 ff ff       	call   2480 <printf@plt>
    3b54:	90                   	nop
    3b55:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3b59:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    3b60:	00 00 
    3b62:	74 05                	je     3b69 <ip6_icmp_decode+0x15b>
    3b64:	e8 d7 eb ff ff       	call   2740 <__stack_chk_fail@plt>
    3b69:	c9                   	leave  
    3b6a:	c3                   	ret    

0000000000003b6b <ip4_icmp_decode>:
    3b6b:	f3 0f 1e fa          	endbr64 
    3b6f:	55                   	push   rbp
    3b70:	48 89 e5             	mov    rbp,rsp
    3b73:	48 81 ec 20 01 00 00 	sub    rsp,0x120
    3b7a:	48 89 bd e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rdi
    3b81:	48 89 b5 e0 fe ff ff 	mov    QWORD PTR [rbp-0x120],rsi
    3b88:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3b8f:	00 00 
    3b91:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3b95:	31 c0                	xor    eax,eax
    3b97:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3b9e:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3ba2:	ba 5e 00 00 00       	mov    edx,0x5e
    3ba7:	be 01 00 00 00       	mov    esi,0x1
    3bac:	48 89 c7             	mov    rdi,rax
    3baf:	e8 e2 12 00 00       	call   4e96 <add_ip_addr_or_inc_counter>
    3bb4:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3bbb:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    3bbf:	ba 5e 00 00 00       	mov    edx,0x5e
    3bc4:	be 00 00 00 00       	mov    esi,0x0
    3bc9:	48 89 c7             	mov    rdi,rax
    3bcc:	e8 c5 12 00 00       	call   4e96 <add_ip_addr_or_inc_counter>
    3bd1:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3bd8:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3bdc:	48 89 85 08 ff ff ff 	mov    QWORD PTR [rbp-0xf8],rax
    3be3:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3bea:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    3bee:	48 89 85 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],rax
    3bf5:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    3bfc:	48 83 c0 22          	add    rax,0x22
    3c00:	48 89 85 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rax
    3c07:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    3c0e:	48 8d 50 22          	lea    rdx,[rax+0x22]
    3c12:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c19:	48 89 10             	mov    QWORD PTR [rax],rdx
    3c1c:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c23:	48 8b 95 18 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xe8]
    3c2a:	48 89 50 58          	mov    QWORD PTR [rax+0x58],rdx
    3c2e:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c35:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    3c38:	89 85 fc fe ff ff    	mov    DWORD PTR [rbp-0x104],eax
    3c3e:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c45:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    3c48:	8d 50 d6             	lea    edx,[rax-0x2a]
    3c4b:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c52:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    3c55:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    3c5c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3c5f:	3c 08                	cmp    al,0x8
    3c61:	0f 85 55 01 00 00    	jne    3dbc <ip4_icmp_decode+0x251>
    3c67:	8b 05 1b d4 00 00    	mov    eax,DWORD PTR [rip+0xd41b]        # 11088 <strict_nmap_host_alive_check>
    3c6d:	83 f8 01             	cmp    eax,0x1
    3c70:	0f 85 46 01 00 00    	jne    3dbc <ip4_icmp_decode+0x251>
    3c76:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c7d:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3c81:	48 89 c7             	mov    rdi,rax
    3c84:	e8 e3 3b 00 00       	call   786c <member_exists>
    3c89:	89 85 00 ff ff ff    	mov    DWORD PTR [rbp-0x100],eax
    3c8f:	83 bd 00 ff ff ff ff 	cmp    DWORD PTR [rbp-0x100],0xffffffff
    3c96:	0f 84 83 00 00 00    	je     3d1f <ip4_icmp_decode+0x1b4>
    3c9c:	8b 85 00 ff ff ff    	mov    eax,DWORD PTR [rbp-0x100]
    3ca2:	48 63 d0             	movsxd rdx,eax
    3ca5:	48 89 d0             	mov    rax,rdx
    3ca8:	48 c1 e0 02          	shl    rax,0x2
    3cac:	48 01 d0             	add    rax,rdx
    3caf:	48 c1 e0 03          	shl    rax,0x3
    3cb3:	48 01 d0             	add    rax,rdx
    3cb6:	48 c1 e0 04          	shl    rax,0x4
    3cba:	48 8d 15 5f f8 0e 00 	lea    rdx,[rip+0xef85f]        # f3520 <watchlist>
    3cc1:	48 01 d0             	add    rax,rdx
    3cc4:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
    3ccb:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3cd2:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3cd5:	85 c0                	test   eax,eax
    3cd7:	0f 85 a8 02 00 00    	jne    3f85 <ip4_icmp_decode+0x41a>
    3cdd:	bf 00 00 00 00       	mov    edi,0x0
    3ce2:	e8 89 eb ff ff       	call   2870 <time@plt>
    3ce7:	48 89 c2             	mov    rdx,rax
    3cea:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3cf1:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    3cf5:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3cfc:	c7 40 30 01 00 00 00 	mov    DWORD PTR [rax+0x30],0x1
    3d03:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d0a:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3d0d:	8d 50 01             	lea    edx,[rax+0x1]
    3d10:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d17:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    3d1a:	e9 66 02 00 00       	jmp    3f85 <ip4_icmp_decode+0x41a>
    3d1f:	8b 05 f3 d2 00 00    	mov    eax,DWORD PTR [rip+0xd2f3]        # 11018 <watchlist_num>
    3d25:	83 c0 01             	add    eax,0x1
    3d28:	89 05 ea d2 00 00    	mov    DWORD PTR [rip+0xd2ea],eax        # 11018 <watchlist_num>
    3d2e:	8b 05 e4 d2 00 00    	mov    eax,DWORD PTR [rip+0xd2e4]        # 11018 <watchlist_num>
    3d34:	48 63 d0             	movsxd rdx,eax
    3d37:	48 89 d0             	mov    rax,rdx
    3d3a:	48 c1 e0 02          	shl    rax,0x2
    3d3e:	48 01 d0             	add    rax,rdx
    3d41:	48 c1 e0 03          	shl    rax,0x3
    3d45:	48 01 d0             	add    rax,rdx
    3d48:	48 c1 e0 04          	shl    rax,0x4
    3d4c:	48 8d 15 cd f7 0e 00 	lea    rdx,[rip+0xef7cd]        # f3520 <watchlist>
    3d53:	48 01 d0             	add    rax,rdx
    3d56:	48 89 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rax
    3d5d:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3d64:	48 8d 50 08          	lea    rdx,[rax+0x8]
    3d68:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3d6f:	48 89 c6             	mov    rsi,rax
    3d72:	48 89 d7             	mov    rdi,rdx
    3d75:	e8 f6 e9 ff ff       	call   2770 <strcpy@plt>
    3d7a:	bf 00 00 00 00       	mov    edi,0x0
    3d7f:	e8 ec ea ff ff       	call   2870 <time@plt>
    3d84:	48 89 c2             	mov    rdx,rax
    3d87:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3d8e:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    3d92:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3d99:	c7 40 30 01 00 00 00 	mov    DWORD PTR [rax+0x30],0x1
    3da0:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3da7:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3daa:	8d 50 01             	lea    edx,[rax+0x1]
    3dad:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3db4:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    3db7:	e9 c9 01 00 00       	jmp    3f85 <ip4_icmp_decode+0x41a>
    3dbc:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    3dc3:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3dc6:	3c 0d                	cmp    al,0xd
    3dc8:	0f 85 ba 01 00 00    	jne    3f88 <ip4_icmp_decode+0x41d>
    3dce:	8b 05 b0 d2 00 00    	mov    eax,DWORD PTR [rip+0xd2b0]        # 11084 <strict_icmp_timestamp_req>
    3dd4:	83 f8 01             	cmp    eax,0x1
    3dd7:	74 0f                	je     3de8 <ip4_icmp_decode+0x27d>
    3dd9:	8b 05 a9 d2 00 00    	mov    eax,DWORD PTR [rip+0xd2a9]        # 11088 <strict_nmap_host_alive_check>
    3ddf:	83 f8 01             	cmp    eax,0x1
    3de2:	0f 85 a0 01 00 00    	jne    3f88 <ip4_icmp_decode+0x41d>
    3de8:	8b 05 96 d2 00 00    	mov    eax,DWORD PTR [rip+0xd296]        # 11084 <strict_icmp_timestamp_req>
    3dee:	85 c0                	test   eax,eax
    3df0:	74 22                	je     3e14 <ip4_icmp_decode+0x2a9>
    3df2:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    3df9:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3e00:	48 89 c6             	mov    rsi,rax
    3e03:	48 8d 3d 96 85 00 00 	lea    rdi,[rip+0x8596]        # c3a0 <_IO_stdin_used+0x3a0>
    3e0a:	b8 00 00 00 00       	mov    eax,0x0
    3e0f:	e8 6c e6 ff ff       	call   2480 <printf@plt>
    3e14:	8b 05 6e d2 00 00    	mov    eax,DWORD PTR [rip+0xd26e]        # 11088 <strict_nmap_host_alive_check>
    3e1a:	85 c0                	test   eax,eax
    3e1c:	0f 84 66 01 00 00    	je     3f88 <ip4_icmp_decode+0x41d>
    3e22:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3e29:	48 89 c7             	mov    rdi,rax
    3e2c:	e8 3b 3a 00 00       	call   786c <member_exists>
    3e31:	89 85 04 ff ff ff    	mov    DWORD PTR [rbp-0xfc],eax
    3e37:	83 bd 04 ff ff ff ff 	cmp    DWORD PTR [rbp-0xfc],0xffffffff
    3e3e:	0f 84 44 01 00 00    	je     3f88 <ip4_icmp_decode+0x41d>
    3e44:	8b 85 04 ff ff ff    	mov    eax,DWORD PTR [rbp-0xfc]
    3e4a:	48 63 d0             	movsxd rdx,eax
    3e4d:	48 89 d0             	mov    rax,rdx
    3e50:	48 c1 e0 02          	shl    rax,0x2
    3e54:	48 01 d0             	add    rax,rdx
    3e57:	48 c1 e0 03          	shl    rax,0x3
    3e5b:	48 01 d0             	add    rax,rdx
    3e5e:	48 c1 e0 04          	shl    rax,0x4
    3e62:	48 8d 15 b7 f6 0e 00 	lea    rdx,[rip+0xef6b7]        # f3520 <watchlist>
    3e69:	48 01 d0             	add    rax,rdx
    3e6c:	48 89 85 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rax
    3e73:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3e7a:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3e7d:	83 f8 03             	cmp    eax,0x3
    3e80:	0f 85 05 01 00 00    	jne    3f8b <ip4_icmp_decode+0x420>
    3e86:	bf 00 00 00 00       	mov    edi,0x0
    3e8b:	e8 e0 e9 ff ff       	call   2870 <time@plt>
    3e90:	48 89 c2             	mov    rdx,rax
    3e93:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3e9a:	48 89 50 48          	mov    QWORD PTR [rax+0x48],rdx
    3e9e:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3ea5:	48 8b 50 48          	mov    rdx,QWORD PTR [rax+0x48]
    3ea9:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3eb0:	48 8b 48 28          	mov    rcx,QWORD PTR [rax+0x28]
    3eb4:	48 89 d0             	mov    rax,rdx
    3eb7:	48 29 c8             	sub    rax,rcx
    3eba:	48 3d e2 b4 04 00    	cmp    rax,0x4b4e2
    3ec0:	0f 87 c2 00 00 00    	ja     3f88 <ip4_icmp_decode+0x41d>
    3ec6:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    3ecd:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3ed4:	48 89 c6             	mov    rsi,rax
    3ed7:	48 8d 3d 0a 85 00 00 	lea    rdi,[rip+0x850a]        # c3e8 <_IO_stdin_used+0x3e8>
    3ede:	b8 00 00 00 00       	mov    eax,0x0
    3ee3:	e8 98 e5 ff ff       	call   2480 <printf@plt>
    3ee8:	48 8b 05 41 d1 00 00 	mov    rax,QWORD PTR [rip+0xd141]        # 11030 <def_log_file>
    3eef:	48 8d 35 5c 85 00 00 	lea    rsi,[rip+0x855c]        # c452 <_IO_stdin_used+0x452>
    3ef6:	48 89 c7             	mov    rdi,rax
    3ef9:	e8 72 e6 ff ff       	call   2570 <fopen@plt>
    3efe:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    3f05:	b8 00 00 00 00       	mov    eax,0x0
    3f0a:	e8 30 f4 ff ff       	call   333f <get_formated_time>
    3f0f:	48 89 c6             	mov    rsi,rax
    3f12:	48 8b 8d 10 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xf0]
    3f19:	48 8b 95 08 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf8]
    3f20:	48 8d 85 40 ff ff ff 	lea    rax,[rbp-0xc0]
    3f27:	49 89 f0             	mov    r8,rsi
    3f2a:	48 8d 35 27 85 00 00 	lea    rsi,[rip+0x8527]        # c458 <_IO_stdin_used+0x458>
    3f31:	48 89 c7             	mov    rdi,rax
    3f34:	b8 00 00 00 00       	mov    eax,0x0
    3f39:	e8 e2 e6 ff ff       	call   2620 <sprintf@plt>
    3f3e:	48 8b 95 38 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xc8]
    3f45:	48 8d 85 40 ff ff ff 	lea    rax,[rbp-0xc0]
    3f4c:	48 89 d6             	mov    rsi,rdx
    3f4f:	48 89 c7             	mov    rdi,rax
    3f52:	e8 39 e7 ff ff       	call   2690 <fputs@plt>
    3f57:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
    3f5e:	48 89 c7             	mov    rdi,rax
    3f61:	e8 4a e8 ff ff       	call   27b0 <fclose@plt>
    3f66:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3f6d:	48 83 c0 28          	add    rax,0x28
    3f71:	ba 28 00 00 00       	mov    edx,0x28
    3f76:	be 00 00 00 00       	mov    esi,0x0
    3f7b:	48 89 c7             	mov    rdi,rax
    3f7e:	e8 0d e5 ff ff       	call   2490 <memset@plt>
    3f83:	eb 07                	jmp    3f8c <ip4_icmp_decode+0x421>
    3f85:	90                   	nop
    3f86:	eb 04                	jmp    3f8c <ip4_icmp_decode+0x421>
    3f88:	90                   	nop
    3f89:	eb 01                	jmp    3f8c <ip4_icmp_decode+0x421>
    3f8b:	90                   	nop
    3f8c:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3f93:	c7 40 2c 80 00 00 00 	mov    DWORD PTR [rax+0x2c],0x80
    3f9a:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3fa1:	48 89 c7             	mov    rdi,rax
    3fa4:	e8 ee 23 00 00       	call   6397 <rulemgr>
    3fa9:	0f b6 05 b4 5f 10 00 	movzx  eax,BYTE PTR [rip+0x105fb4]        # 109f64 <packet_print>
    3fb0:	84 c0                	test   al,al
    3fb2:	0f 84 e0 03 00 00    	je     4398 <ip4_icmp_decode+0x82d>
    3fb8:	48 8d 35 41 83 00 00 	lea    rsi,[rip+0x8341]        # c300 <_IO_stdin_used+0x300>
    3fbf:	48 8d 3d 40 83 00 00 	lea    rdi,[rip+0x8340]        # c306 <_IO_stdin_used+0x306>
    3fc6:	b8 00 00 00 00       	mov    eax,0x0
    3fcb:	e8 b0 e4 ff ff       	call   2480 <printf@plt>
    3fd0:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    3fd7:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3fde:	48 89 c6             	mov    rsi,rax
    3fe1:	48 8d 3d e0 84 00 00 	lea    rdi,[rip+0x84e0]        # c4c8 <_IO_stdin_used+0x4c8>
    3fe8:	b8 00 00 00 00       	mov    eax,0x0
    3fed:	e8 8e e4 ff ff       	call   2480 <printf@plt>
    3ff2:	48 8d 3d de 84 00 00 	lea    rdi,[rip+0x84de]        # c4d7 <_IO_stdin_used+0x4d7>
    3ff9:	b8 00 00 00 00       	mov    eax,0x0
    3ffe:	e8 7d e4 ff ff       	call   2480 <printf@plt>
    4003:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    400a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    400d:	0f b6 c0             	movzx  eax,al
    4010:	83 f8 0e             	cmp    eax,0xe
    4013:	0f 87 46 03 00 00    	ja     435f <ip4_icmp_decode+0x7f4>
    4019:	89 c0                	mov    eax,eax
    401b:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    4022:	00 
    4023:	48 8d 05 b6 88 00 00 	lea    rax,[rip+0x88b6]        # c8e0 <_IO_stdin_used+0x8e0>
    402a:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    402d:	48 98                	cdqe   
    402f:	48 8d 15 aa 88 00 00 	lea    rdx,[rip+0x88aa]        # c8e0 <_IO_stdin_used+0x8e0>
    4036:	48 01 d0             	add    rax,rdx
    4039:	3e ff e0             	notrack jmp rax
    403c:	48 8d 3d 9b 84 00 00 	lea    rdi,[rip+0x849b]        # c4de <_IO_stdin_used+0x4de>
    4043:	e8 98 e4 ff ff       	call   24e0 <puts@plt>
    4048:	e9 33 03 00 00       	jmp    4380 <ip4_icmp_decode+0x815>
    404d:	48 8d 3d 96 84 00 00 	lea    rdi,[rip+0x8496]        # c4ea <_IO_stdin_used+0x4ea>
    4054:	b8 00 00 00 00       	mov    eax,0x0
    4059:	e8 22 e4 ff ff       	call   2480 <printf@plt>
    405e:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4065:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4069:	0f b6 c0             	movzx  eax,al
    406c:	83 f8 0f             	cmp    eax,0xf
    406f:	0f 87 1e 01 00 00    	ja     4193 <ip4_icmp_decode+0x628>
    4075:	89 c0                	mov    eax,eax
    4077:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    407e:	00 
    407f:	48 8d 05 96 88 00 00 	lea    rax,[rip+0x8896]        # c91c <_IO_stdin_used+0x91c>
    4086:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    4089:	48 98                	cdqe   
    408b:	48 8d 15 8a 88 00 00 	lea    rdx,[rip+0x888a]        # c91c <_IO_stdin_used+0x91c>
    4092:	48 01 d0             	add    rax,rdx
    4095:	3e ff e0             	notrack jmp rax
    4098:	48 8d 3d 65 84 00 00 	lea    rdi,[rip+0x8465]        # c504 <_IO_stdin_used+0x504>
    409f:	e8 3c e4 ff ff       	call   24e0 <puts@plt>
    40a4:	e9 0c 01 00 00       	jmp    41b5 <ip4_icmp_decode+0x64a>
    40a9:	48 8d 3d 6b 84 00 00 	lea    rdi,[rip+0x846b]        # c51b <_IO_stdin_used+0x51b>
    40b0:	e8 2b e4 ff ff       	call   24e0 <puts@plt>
    40b5:	e9 fb 00 00 00       	jmp    41b5 <ip4_icmp_decode+0x64a>
    40ba:	48 8d 3d 6e 84 00 00 	lea    rdi,[rip+0x846e]        # c52f <_IO_stdin_used+0x52f>
    40c1:	e8 1a e4 ff ff       	call   24e0 <puts@plt>
    40c6:	e9 ea 00 00 00       	jmp    41b5 <ip4_icmp_decode+0x64a>
    40cb:	48 8d 3d 75 84 00 00 	lea    rdi,[rip+0x8475]        # c547 <_IO_stdin_used+0x547>
    40d2:	e8 09 e4 ff ff       	call   24e0 <puts@plt>
    40d7:	e9 d9 00 00 00       	jmp    41b5 <ip4_icmp_decode+0x64a>
    40dc:	48 8d 3d 78 84 00 00 	lea    rdi,[rip+0x8478]        # c55b <_IO_stdin_used+0x55b>
    40e3:	e8 f8 e3 ff ff       	call   24e0 <puts@plt>
    40e8:	e9 c8 00 00 00       	jmp    41b5 <ip4_icmp_decode+0x64a>
    40ed:	48 8d 3d 7f 84 00 00 	lea    rdi,[rip+0x847f]        # c573 <_IO_stdin_used+0x573>
    40f4:	e8 e7 e3 ff ff       	call   24e0 <puts@plt>
    40f9:	e9 b7 00 00 00       	jmp    41b5 <ip4_icmp_decode+0x64a>
    40fe:	48 8d 3d 8b 84 00 00 	lea    rdi,[rip+0x848b]        # c590 <_IO_stdin_used+0x590>
    4105:	e8 d6 e3 ff ff       	call   24e0 <puts@plt>
    410a:	e9 a6 00 00 00       	jmp    41b5 <ip4_icmp_decode+0x64a>
    410f:	48 8d 3d a2 84 00 00 	lea    rdi,[rip+0x84a2]        # c5b8 <_IO_stdin_used+0x5b8>
    4116:	e8 c5 e3 ff ff       	call   24e0 <puts@plt>
    411b:	e9 95 00 00 00       	jmp    41b5 <ip4_icmp_decode+0x64a>
    4120:	48 8d 3d b1 84 00 00 	lea    rdi,[rip+0x84b1]        # c5d8 <_IO_stdin_used+0x5d8>
    4127:	e8 b4 e3 ff ff       	call   24e0 <puts@plt>
    412c:	e9 84 00 00 00       	jmp    41b5 <ip4_icmp_decode+0x64a>
    4131:	48 8d 3d b8 84 00 00 	lea    rdi,[rip+0x84b8]        # c5f0 <_IO_stdin_used+0x5f0>
    4138:	e8 a3 e3 ff ff       	call   24e0 <puts@plt>
    413d:	eb 76                	jmp    41b5 <ip4_icmp_decode+0x64a>
    413f:	48 8d 3d d2 84 00 00 	lea    rdi,[rip+0x84d2]        # c618 <_IO_stdin_used+0x618>
    4146:	e8 95 e3 ff ff       	call   24e0 <puts@plt>
    414b:	eb 68                	jmp    41b5 <ip4_icmp_decode+0x64a>
    414d:	48 8d 3d ec 84 00 00 	lea    rdi,[rip+0x84ec]        # c640 <_IO_stdin_used+0x640>
    4154:	e8 87 e3 ff ff       	call   24e0 <puts@plt>
    4159:	eb 5a                	jmp    41b5 <ip4_icmp_decode+0x64a>
    415b:	48 8d 3d fd 84 00 00 	lea    rdi,[rip+0x84fd]        # c65f <_IO_stdin_used+0x65f>
    4162:	e8 79 e3 ff ff       	call   24e0 <puts@plt>
    4167:	eb 4c                	jmp    41b5 <ip4_icmp_decode+0x64a>
    4169:	48 8d 3d 10 85 00 00 	lea    rdi,[rip+0x8510]        # c680 <_IO_stdin_used+0x680>
    4170:	e8 6b e3 ff ff       	call   24e0 <puts@plt>
    4175:	eb 3e                	jmp    41b5 <ip4_icmp_decode+0x64a>
    4177:	48 8d 3d 2f 85 00 00 	lea    rdi,[rip+0x852f]        # c6ad <_IO_stdin_used+0x6ad>
    417e:	e8 5d e3 ff ff       	call   24e0 <puts@plt>
    4183:	eb 30                	jmp    41b5 <ip4_icmp_decode+0x64a>
    4185:	48 8d 3d 44 85 00 00 	lea    rdi,[rip+0x8544]        # c6d0 <_IO_stdin_used+0x6d0>
    418c:	e8 4f e3 ff ff       	call   24e0 <puts@plt>
    4191:	eb 22                	jmp    41b5 <ip4_icmp_decode+0x64a>
    4193:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    419a:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    419e:	0f b6 c0             	movzx  eax,al
    41a1:	89 c6                	mov    esi,eax
    41a3:	48 8d 3d 45 85 00 00 	lea    rdi,[rip+0x8545]        # c6ef <_IO_stdin_used+0x6ef>
    41aa:	b8 00 00 00 00       	mov    eax,0x0
    41af:	e8 cc e2 ff ff       	call   2480 <printf@plt>
    41b4:	90                   	nop
    41b5:	e9 c6 01 00 00       	jmp    4380 <ip4_icmp_decode+0x815>
    41ba:	48 8d 3d 47 85 00 00 	lea    rdi,[rip+0x8547]        # c708 <_IO_stdin_used+0x708>
    41c1:	e8 1a e3 ff ff       	call   24e0 <puts@plt>
    41c6:	e9 b5 01 00 00       	jmp    4380 <ip4_icmp_decode+0x815>
    41cb:	48 8d 3d 55 85 00 00 	lea    rdi,[rip+0x8555]        # c727 <_IO_stdin_used+0x727>
    41d2:	b8 00 00 00 00       	mov    eax,0x0
    41d7:	e8 a4 e2 ff ff       	call   2480 <printf@plt>
    41dc:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    41e3:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    41e7:	0f b6 c0             	movzx  eax,al
    41ea:	83 f8 03             	cmp    eax,0x3
    41ed:	74 44                	je     4233 <ip4_icmp_decode+0x6c8>
    41ef:	83 f8 03             	cmp    eax,0x3
    41f2:	7f 4d                	jg     4241 <ip4_icmp_decode+0x6d6>
    41f4:	83 f8 02             	cmp    eax,0x2
    41f7:	74 2c                	je     4225 <ip4_icmp_decode+0x6ba>
    41f9:	83 f8 02             	cmp    eax,0x2
    41fc:	7f 43                	jg     4241 <ip4_icmp_decode+0x6d6>
    41fe:	85 c0                	test   eax,eax
    4200:	74 07                	je     4209 <ip4_icmp_decode+0x69e>
    4202:	83 f8 01             	cmp    eax,0x1
    4205:	74 10                	je     4217 <ip4_icmp_decode+0x6ac>
    4207:	eb 38                	jmp    4241 <ip4_icmp_decode+0x6d6>
    4209:	48 8d 3d 23 85 00 00 	lea    rdi,[rip+0x8523]        # c733 <_IO_stdin_used+0x733>
    4210:	e8 cb e2 ff ff       	call   24e0 <puts@plt>
    4215:	eb 4c                	jmp    4263 <ip4_icmp_decode+0x6f8>
    4217:	48 8d 3d 2d 85 00 00 	lea    rdi,[rip+0x852d]        # c74b <_IO_stdin_used+0x74b>
    421e:	e8 bd e2 ff ff       	call   24e0 <puts@plt>
    4223:	eb 3e                	jmp    4263 <ip4_icmp_decode+0x6f8>
    4225:	48 8d 3d 34 85 00 00 	lea    rdi,[rip+0x8534]        # c760 <_IO_stdin_used+0x760>
    422c:	e8 af e2 ff ff       	call   24e0 <puts@plt>
    4231:	eb 30                	jmp    4263 <ip4_icmp_decode+0x6f8>
    4233:	48 8d 3d 46 85 00 00 	lea    rdi,[rip+0x8546]        # c780 <_IO_stdin_used+0x780>
    423a:	e8 a1 e2 ff ff       	call   24e0 <puts@plt>
    423f:	eb 22                	jmp    4263 <ip4_icmp_decode+0x6f8>
    4241:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4248:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    424c:	0f b6 c0             	movzx  eax,al
    424f:	89 c6                	mov    esi,eax
    4251:	48 8d 3d 97 84 00 00 	lea    rdi,[rip+0x8497]        # c6ef <_IO_stdin_used+0x6ef>
    4258:	b8 00 00 00 00       	mov    eax,0x0
    425d:	e8 1e e2 ff ff       	call   2480 <printf@plt>
    4262:	90                   	nop
    4263:	e9 18 01 00 00       	jmp    4380 <ip4_icmp_decode+0x815>
    4268:	48 8d 3d 2e 85 00 00 	lea    rdi,[rip+0x852e]        # c79d <_IO_stdin_used+0x79d>
    426f:	e8 6c e2 ff ff       	call   24e0 <puts@plt>
    4274:	e9 07 01 00 00       	jmp    4380 <ip4_icmp_decode+0x815>
    4279:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4280:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4284:	84 c0                	test   al,al
    4286:	75 16                	jne    429e <ip4_icmp_decode+0x733>
    4288:	48 8d 3d 21 85 00 00 	lea    rdi,[rip+0x8521]        # c7b0 <_IO_stdin_used+0x7b0>
    428f:	b8 00 00 00 00       	mov    eax,0x0
    4294:	e8 e7 e1 ff ff       	call   2480 <printf@plt>
    4299:	e9 e2 00 00 00       	jmp    4380 <ip4_icmp_decode+0x815>
    429e:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    42a5:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    42a9:	0f b6 c0             	movzx  eax,al
    42ac:	89 c6                	mov    esi,eax
    42ae:	48 8d 3d 3b 85 00 00 	lea    rdi,[rip+0x853b]        # c7f0 <_IO_stdin_used+0x7f0>
    42b5:	b8 00 00 00 00       	mov    eax,0x0
    42ba:	e8 c1 e1 ff ff       	call   2480 <printf@plt>
    42bf:	e9 bc 00 00 00       	jmp    4380 <ip4_icmp_decode+0x815>
    42c4:	48 8d 3d 52 85 00 00 	lea    rdi,[rip+0x8552]        # c81d <_IO_stdin_used+0x81d>
    42cb:	e8 10 e2 ff ff       	call   24e0 <puts@plt>
    42d0:	e9 ab 00 00 00       	jmp    4380 <ip4_icmp_decode+0x815>
    42d5:	48 8d 3d 58 85 00 00 	lea    rdi,[rip+0x8558]        # c834 <_IO_stdin_used+0x834>
    42dc:	b8 00 00 00 00       	mov    eax,0x0
    42e1:	e8 9a e1 ff ff       	call   2480 <printf@plt>
    42e6:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    42ed:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    42f1:	84 c0                	test   al,al
    42f3:	75 0e                	jne    4303 <ip4_icmp_decode+0x798>
    42f5:	48 8d 3d 4f 85 00 00 	lea    rdi,[rip+0x854f]        # c84b <_IO_stdin_used+0x84b>
    42fc:	e8 df e1 ff ff       	call   24e0 <puts@plt>
    4301:	eb 7d                	jmp    4380 <ip4_icmp_decode+0x815>
    4303:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    430a:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    430e:	3c 01                	cmp    al,0x1
    4310:	75 0e                	jne    4320 <ip4_icmp_decode+0x7b5>
    4312:	48 8d 3d 4f 85 00 00 	lea    rdi,[rip+0x854f]        # c868 <_IO_stdin_used+0x868>
    4319:	e8 c2 e1 ff ff       	call   24e0 <puts@plt>
    431e:	eb 60                	jmp    4380 <ip4_icmp_decode+0x815>
    4320:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4327:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    432b:	0f b6 c0             	movzx  eax,al
    432e:	89 c6                	mov    esi,eax
    4330:	48 8d 3d 58 85 00 00 	lea    rdi,[rip+0x8558]        # c88f <_IO_stdin_used+0x88f>
    4337:	b8 00 00 00 00       	mov    eax,0x0
    433c:	e8 3f e1 ff ff       	call   2480 <printf@plt>
    4341:	eb 3d                	jmp    4380 <ip4_icmp_decode+0x815>
    4343:	48 8d 3d 5b 85 00 00 	lea    rdi,[rip+0x855b]        # c8a5 <_IO_stdin_used+0x8a5>
    434a:	e8 91 e1 ff ff       	call   24e0 <puts@plt>
    434f:	eb 2f                	jmp    4380 <ip4_icmp_decode+0x815>
    4351:	48 8d 3d 60 85 00 00 	lea    rdi,[rip+0x8560]        # c8b8 <_IO_stdin_used+0x8b8>
    4358:	e8 83 e1 ff ff       	call   24e0 <puts@plt>
    435d:	eb 21                	jmp    4380 <ip4_icmp_decode+0x815>
    435f:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4366:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4369:	0f b6 c0             	movzx  eax,al
    436c:	89 c6                	mov    esi,eax
    436e:	48 8d 3d 54 85 00 00 	lea    rdi,[rip+0x8554]        # c8c9 <_IO_stdin_used+0x8c9>
    4375:	b8 00 00 00 00       	mov    eax,0x0
    437a:	e8 01 e1 ff ff       	call   2480 <printf@plt>
    437f:	90                   	nop
    4380:	48 8d 35 0e 80 00 00 	lea    rsi,[rip+0x800e]        # c395 <_IO_stdin_used+0x395>
    4387:	48 8d 3d 78 7f 00 00 	lea    rdi,[rip+0x7f78]        # c306 <_IO_stdin_used+0x306>
    438e:	b8 00 00 00 00       	mov    eax,0x0
    4393:	e8 e8 e0 ff ff       	call   2480 <printf@plt>
    4398:	90                   	nop
    4399:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    439d:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    43a4:	00 00 
    43a6:	74 05                	je     43ad <ip4_icmp_decode+0x842>
    43a8:	e8 93 e3 ff ff       	call   2740 <__stack_chk_fail@plt>
    43ad:	c9                   	leave  
    43ae:	c3                   	ret    

00000000000043af <ip4_tcp_decode>:
    43af:	f3 0f 1e fa          	endbr64 
    43b3:	55                   	push   rbp
    43b4:	48 89 e5             	mov    rbp,rsp
    43b7:	53                   	push   rbx
    43b8:	48 81 ec 88 00 00 00 	sub    rsp,0x88
    43bf:	48 89 7d 88          	mov    QWORD PTR [rbp-0x78],rdi
    43c3:	48 89 75 80          	mov    QWORD PTR [rbp-0x80],rsi
    43c7:	48 89 95 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdx
    43ce:	48 c7 45 b8 00 00 00 	mov    QWORD PTR [rbp-0x48],0x0
    43d5:	00 
    43d6:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    43da:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
    43e0:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    43e4:	48 83 c0 22          	add    rax,0x22
    43e8:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    43ec:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    43f0:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    43f4:	c0 e8 04             	shr    al,0x4
    43f7:	0f b6 c0             	movzx  eax,al
    43fa:	c1 e0 02             	shl    eax,0x2
    43fd:	48 98                	cdqe   
    43ff:	48 8d 50 22          	lea    rdx,[rax+0x22]
    4403:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    4407:	48 01 c2             	add    rdx,rax
    440a:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    440e:	48 89 10             	mov    QWORD PTR [rax],rdx
    4411:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4415:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    4418:	89 c2                	mov    edx,eax
    441a:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    441e:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    4422:	c0 e8 04             	shr    al,0x4
    4425:	0f b6 c0             	movzx  eax,al
    4428:	c1 e0 02             	shl    eax,0x2
    442b:	89 c1                	mov    ecx,eax
    442d:	89 d0                	mov    eax,edx
    442f:	29 c8                	sub    eax,ecx
    4431:	83 e8 22             	sub    eax,0x22
    4434:	89 c2                	mov    edx,eax
    4436:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    443a:	89 50 30             	mov    DWORD PTR [rax+0x30],edx
    443d:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4441:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    4445:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    4449:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    444d:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4451:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    4455:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4459:	ba 5c 00 00 00       	mov    edx,0x5c
    445e:	be 01 00 00 00       	mov    esi,0x1
    4463:	48 89 c7             	mov    rdi,rax
    4466:	e8 2b 0a 00 00       	call   4e96 <add_ip_addr_or_inc_counter>
    446b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    446f:	ba 5c 00 00 00       	mov    edx,0x5c
    4474:	be 00 00 00 00       	mov    esi,0x0
    4479:	48 89 c7             	mov    rdi,rax
    447c:	e8 15 0a 00 00       	call   4e96 <add_ip_addr_or_inc_counter>
    4481:	c7 45 9c 00 00 00 00 	mov    DWORD PTR [rbp-0x64],0x0
    4488:	c6 45 97 00          	mov    BYTE PTR [rbp-0x69],0x0
    448c:	c6 45 98 00          	mov    BYTE PTR [rbp-0x68],0x0
    4490:	c6 45 99 00          	mov    BYTE PTR [rbp-0x67],0x0
    4494:	c6 45 9a 00          	mov    BYTE PTR [rbp-0x66],0x0
    4498:	c6 45 9b 00          	mov    BYTE PTR [rbp-0x65],0x0
    449c:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    44a0:	48 83 c0 60          	add    rax,0x60
    44a4:	ba 08 00 00 00       	mov    edx,0x8
    44a9:	be 00 00 00 00       	mov    esi,0x0
    44ae:	48 89 c7             	mov    rdi,rax
    44b1:	e8 da df ff ff       	call   2490 <memset@plt>
    44b6:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    44ba:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    44be:	0f b7 c0             	movzx  eax,ax
    44c1:	89 c7                	mov    edi,eax
    44c3:	e8 68 e1 ff ff       	call   2630 <ntohs@plt>
    44c8:	0f b7 c0             	movzx  eax,ax
    44cb:	89 45 a0             	mov    DWORD PTR [rbp-0x60],eax
    44ce:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    44d2:	0f b7 00             	movzx  eax,WORD PTR [rax]
    44d5:	0f b7 c0             	movzx  eax,ax
    44d8:	89 c7                	mov    edi,eax
    44da:	e8 51 e1 ff ff       	call   2630 <ntohs@plt>
    44df:	0f b7 c0             	movzx  eax,ax
    44e2:	89 45 a4             	mov    DWORD PTR [rbp-0x5c],eax
    44e5:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    44e9:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    44ed:	0f b7 c0             	movzx  eax,ax
    44f0:	89 c7                	mov    edi,eax
    44f2:	e8 39 e1 ff ff       	call   2630 <ntohs@plt>
    44f7:	0f b7 d0             	movzx  edx,ax
    44fa:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    44fe:	89 50 28             	mov    DWORD PTR [rax+0x28],edx
    4501:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4505:	8b 55 a4             	mov    edx,DWORD PTR [rbp-0x5c]
    4508:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    450b:	0f b6 05 52 5a 10 00 	movzx  eax,BYTE PTR [rip+0x105a52]        # 109f64 <packet_print>
    4512:	84 c0                	test   al,al
    4514:	74 4e                	je     4564 <ip4_tcp_decode+0x1b5>
    4516:	48 8d 35 43 84 00 00 	lea    rsi,[rip+0x8443]        # c960 <_IO_stdin_used+0x960>
    451d:	48 8d 3d 42 84 00 00 	lea    rdi,[rip+0x8442]        # c966 <_IO_stdin_used+0x966>
    4524:	b8 00 00 00 00       	mov    eax,0x0
    4529:	e8 52 df ff ff       	call   2480 <printf@plt>
    452e:	8b 75 a0             	mov    esi,DWORD PTR [rbp-0x60]
    4531:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
    4535:	8b 55 a4             	mov    edx,DWORD PTR [rbp-0x5c]
    4538:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    453c:	41 89 f0             	mov    r8d,esi
    453f:	48 89 c6             	mov    rsi,rax
    4542:	48 8d 3d 20 84 00 00 	lea    rdi,[rip+0x8420]        # c969 <_IO_stdin_used+0x969>
    4549:	b8 00 00 00 00       	mov    eax,0x0
    454e:	e8 2d df ff ff       	call   2480 <printf@plt>
    4553:	48 8d 3d 24 84 00 00 	lea    rdi,[rip+0x8424]        # c97e <_IO_stdin_used+0x97e>
    455a:	b8 00 00 00 00       	mov    eax,0x0
    455f:	e8 1c df ff ff       	call   2480 <printf@plt>
    4564:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4568:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    456c:	c0 e8 04             	shr    al,0x4
    456f:	83 e0 01             	and    eax,0x1
    4572:	0f b6 c0             	movzx  eax,al
    4575:	89 c7                	mov    edi,eax
    4577:	e8 b4 e0 ff ff       	call   2630 <ntohs@plt>
    457c:	66 85 c0             	test   ax,ax
    457f:	74 43                	je     45c4 <ip4_tcp_decode+0x215>
    4581:	0f b6 05 dc 59 10 00 	movzx  eax,BYTE PTR [rip+0x1059dc]        # 109f64 <packet_print>
    4588:	84 c0                	test   al,al
    458a:	74 18                	je     45a4 <ip4_tcp_decode+0x1f5>
    458c:	48 8d 35 f2 83 00 00 	lea    rsi,[rip+0x83f2]        # c985 <_IO_stdin_used+0x985>
    4593:	48 8d 3d f1 83 00 00 	lea    rdi,[rip+0x83f1]        # c98b <_IO_stdin_used+0x98b>
    459a:	b8 00 00 00 00       	mov    eax,0x0
    459f:	e8 dc de ff ff       	call   2480 <printf@plt>
    45a4:	c6 45 98 01          	mov    BYTE PTR [rbp-0x68],0x1
    45a8:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    45ac:	48 8d 58 60          	lea    rbx,[rax+0x60]
    45b0:	48 89 df             	mov    rdi,rbx
    45b3:	e8 48 e0 ff ff       	call   2600 <strlen@plt>
    45b8:	48 01 d8             	add    rax,rbx
    45bb:	66 c7 00 41 00       	mov    WORD PTR [rax],0x41
    45c0:	83 45 9c 01          	add    DWORD PTR [rbp-0x64],0x1
    45c4:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    45c8:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    45cc:	83 e0 01             	and    eax,0x1
    45cf:	0f b6 c0             	movzx  eax,al
    45d2:	89 c7                	mov    edi,eax
    45d4:	e8 57 e0 ff ff       	call   2630 <ntohs@plt>
    45d9:	66 85 c0             	test   ax,ax
    45dc:	74 43                	je     4621 <ip4_tcp_decode+0x272>
    45de:	0f b6 05 7f 59 10 00 	movzx  eax,BYTE PTR [rip+0x10597f]        # 109f64 <packet_print>
    45e5:	84 c0                	test   al,al
    45e7:	74 18                	je     4601 <ip4_tcp_decode+0x252>
    45e9:	48 8d 35 a3 83 00 00 	lea    rsi,[rip+0x83a3]        # c993 <_IO_stdin_used+0x993>
    45f0:	48 8d 3d a2 83 00 00 	lea    rdi,[rip+0x83a2]        # c999 <_IO_stdin_used+0x999>
    45f7:	b8 00 00 00 00       	mov    eax,0x0
    45fc:	e8 7f de ff ff       	call   2480 <printf@plt>
    4601:	c6 45 9a 01          	mov    BYTE PTR [rbp-0x66],0x1
    4605:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4609:	48 8d 58 60          	lea    rbx,[rax+0x60]
    460d:	48 89 df             	mov    rdi,rbx
    4610:	e8 eb df ff ff       	call   2600 <strlen@plt>
    4615:	48 01 d8             	add    rax,rbx
    4618:	66 c7 00 46 00       	mov    WORD PTR [rax],0x46
    461d:	83 45 9c 01          	add    DWORD PTR [rbp-0x64],0x1
    4621:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4625:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4629:	c0 e8 03             	shr    al,0x3
    462c:	83 e0 01             	and    eax,0x1
    462f:	0f b6 c0             	movzx  eax,al
    4632:	89 c7                	mov    edi,eax
    4634:	e8 f7 df ff ff       	call   2630 <ntohs@plt>
    4639:	66 85 c0             	test   ax,ax
    463c:	74 43                	je     4681 <ip4_tcp_decode+0x2d2>
    463e:	0f b6 05 1f 59 10 00 	movzx  eax,BYTE PTR [rip+0x10591f]        # 109f64 <packet_print>
    4645:	84 c0                	test   al,al
    4647:	74 18                	je     4661 <ip4_tcp_decode+0x2b2>
    4649:	48 8d 35 51 83 00 00 	lea    rsi,[rip+0x8351]        # c9a1 <_IO_stdin_used+0x9a1>
    4650:	48 8d 3d 50 83 00 00 	lea    rdi,[rip+0x8350]        # c9a7 <_IO_stdin_used+0x9a7>
    4657:	b8 00 00 00 00       	mov    eax,0x0
    465c:	e8 1f de ff ff       	call   2480 <printf@plt>
    4661:	83 45 9c 01          	add    DWORD PTR [rbp-0x64],0x1
    4665:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4669:	48 8d 58 60          	lea    rbx,[rax+0x60]
    466d:	48 89 df             	mov    rdi,rbx
    4670:	e8 8b df ff ff       	call   2600 <strlen@plt>
    4675:	48 01 d8             	add    rax,rbx
    4678:	66 c7 00 50 00       	mov    WORD PTR [rax],0x50
    467d:	c6 45 9b 01          	mov    BYTE PTR [rbp-0x65],0x1
    4681:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4685:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4689:	c0 e8 02             	shr    al,0x2
    468c:	83 e0 01             	and    eax,0x1
    468f:	0f b6 c0             	movzx  eax,al
    4692:	89 c7                	mov    edi,eax
    4694:	e8 97 df ff ff       	call   2630 <ntohs@plt>
    4699:	66 85 c0             	test   ax,ax
    469c:	74 43                	je     46e1 <ip4_tcp_decode+0x332>
    469e:	0f b6 05 bf 58 10 00 	movzx  eax,BYTE PTR [rip+0x1058bf]        # 109f64 <packet_print>
    46a5:	84 c0                	test   al,al
    46a7:	74 18                	je     46c1 <ip4_tcp_decode+0x312>
    46a9:	48 8d 35 ff 82 00 00 	lea    rsi,[rip+0x82ff]        # c9af <_IO_stdin_used+0x9af>
    46b0:	48 8d 3d fe 82 00 00 	lea    rdi,[rip+0x82fe]        # c9b5 <_IO_stdin_used+0x9b5>
    46b7:	b8 00 00 00 00       	mov    eax,0x0
    46bc:	e8 bf dd ff ff       	call   2480 <printf@plt>
    46c1:	c6 45 97 01          	mov    BYTE PTR [rbp-0x69],0x1
    46c5:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    46c9:	48 8d 58 60          	lea    rbx,[rax+0x60]
    46cd:	48 89 df             	mov    rdi,rbx
    46d0:	e8 2b df ff ff       	call   2600 <strlen@plt>
    46d5:	48 01 d8             	add    rax,rbx
    46d8:	66 c7 00 52 00       	mov    WORD PTR [rax],0x52
    46dd:	83 45 9c 01          	add    DWORD PTR [rbp-0x64],0x1
    46e1:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    46e5:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    46e9:	d0 e8                	shr    al,1
    46eb:	83 e0 01             	and    eax,0x1
    46ee:	0f b6 c0             	movzx  eax,al
    46f1:	89 c7                	mov    edi,eax
    46f3:	e8 38 df ff ff       	call   2630 <ntohs@plt>
    46f8:	66 85 c0             	test   ax,ax
    46fb:	74 43                	je     4740 <ip4_tcp_decode+0x391>
    46fd:	0f b6 05 60 58 10 00 	movzx  eax,BYTE PTR [rip+0x105860]        # 109f64 <packet_print>
    4704:	84 c0                	test   al,al
    4706:	74 18                	je     4720 <ip4_tcp_decode+0x371>
    4708:	48 8d 35 ae 82 00 00 	lea    rsi,[rip+0x82ae]        # c9bd <_IO_stdin_used+0x9bd>
    470f:	48 8d 3d ad 82 00 00 	lea    rdi,[rip+0x82ad]        # c9c3 <_IO_stdin_used+0x9c3>
    4716:	b8 00 00 00 00       	mov    eax,0x0
    471b:	e8 60 dd ff ff       	call   2480 <printf@plt>
    4720:	c6 45 99 01          	mov    BYTE PTR [rbp-0x67],0x1
    4724:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4728:	48 8d 58 60          	lea    rbx,[rax+0x60]
    472c:	48 89 df             	mov    rdi,rbx
    472f:	e8 cc de ff ff       	call   2600 <strlen@plt>
    4734:	48 01 d8             	add    rax,rbx
    4737:	66 c7 00 53 00       	mov    WORD PTR [rax],0x53
    473c:	83 45 9c 01          	add    DWORD PTR [rbp-0x64],0x1
    4740:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4744:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4748:	c0 e8 05             	shr    al,0x5
    474b:	83 e0 01             	and    eax,0x1
    474e:	0f b6 c0             	movzx  eax,al
    4751:	89 c7                	mov    edi,eax
    4753:	e8 d8 de ff ff       	call   2630 <ntohs@plt>
    4758:	66 85 c0             	test   ax,ax
    475b:	74 3f                	je     479c <ip4_tcp_decode+0x3ed>
    475d:	0f b6 05 00 58 10 00 	movzx  eax,BYTE PTR [rip+0x105800]        # 109f64 <packet_print>
    4764:	84 c0                	test   al,al
    4766:	74 18                	je     4780 <ip4_tcp_decode+0x3d1>
    4768:	48 8d 35 5c 82 00 00 	lea    rsi,[rip+0x825c]        # c9cb <_IO_stdin_used+0x9cb>
    476f:	48 8d 3d 5b 82 00 00 	lea    rdi,[rip+0x825b]        # c9d1 <_IO_stdin_used+0x9d1>
    4776:	b8 00 00 00 00       	mov    eax,0x0
    477b:	e8 00 dd ff ff       	call   2480 <printf@plt>
    4780:	83 45 9c 01          	add    DWORD PTR [rbp-0x64],0x1
    4784:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4788:	48 8d 58 60          	lea    rbx,[rax+0x60]
    478c:	48 89 df             	mov    rdi,rbx
    478f:	e8 6c de ff ff       	call   2600 <strlen@plt>
    4794:	48 01 d8             	add    rax,rbx
    4797:	66 c7 00 55 00       	mov    WORD PTR [rax],0x55
    479c:	0f b6 05 c1 57 10 00 	movzx  eax,BYTE PTR [rip+0x1057c1]        # 109f64 <packet_print>
    47a3:	84 c0                	test   al,al
    47a5:	74 3c                	je     47e3 <ip4_tcp_decode+0x434>
    47a7:	48 8d 35 b2 81 00 00 	lea    rsi,[rip+0x81b2]        # c960 <_IO_stdin_used+0x960>
    47ae:	48 8d 3d b1 81 00 00 	lea    rdi,[rip+0x81b1]        # c966 <_IO_stdin_used+0x966>
    47b5:	b8 00 00 00 00       	mov    eax,0x0
    47ba:	e8 c1 dc ff ff       	call   2480 <printf@plt>
    47bf:	48 8d 3d 13 82 00 00 	lea    rdi,[rip+0x8213]        # c9d9 <_IO_stdin_used+0x9d9>
    47c6:	e8 15 dd ff ff       	call   24e0 <puts@plt>
    47cb:	48 8d 35 09 82 00 00 	lea    rsi,[rip+0x8209]        # c9db <_IO_stdin_used+0x9db>
    47d2:	48 8d 3d 8d 81 00 00 	lea    rdi,[rip+0x818d]        # c966 <_IO_stdin_used+0x966>
    47d9:	b8 00 00 00 00       	mov    eax,0x0
    47de:	e8 9d dc ff ff       	call   2480 <printf@plt>
    47e3:	83 7d 9c 03          	cmp    DWORD PTR [rbp-0x64],0x3
    47e7:	7f 06                	jg     47ef <ip4_tcp_decode+0x440>
    47e9:	83 7d 9c 00          	cmp    DWORD PTR [rbp-0x64],0x0
    47ed:	75 41                	jne    4830 <ip4_tcp_decode+0x481>
    47ef:	8b 7d a0             	mov    edi,DWORD PTR [rbp-0x60]
    47f2:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
    47f6:	8b 55 a4             	mov    edx,DWORD PTR [rbp-0x5c]
    47f9:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    47fd:	48 8d 0d d7 81 00 00 	lea    rcx,[rip+0x81d7]        # c9db <_IO_stdin_used+0x9db>
    4804:	51                   	push   rcx
    4805:	8b 4d 9c             	mov    ecx,DWORD PTR [rbp-0x64]
    4808:	51                   	push   rcx
    4809:	41 89 f9             	mov    r9d,edi
    480c:	49 89 f0             	mov    r8,rsi
    480f:	89 d1                	mov    ecx,edx
    4811:	48 89 c2             	mov    rdx,rax
    4814:	48 8d 35 94 81 00 00 	lea    rsi,[rip+0x8194]        # c9af <_IO_stdin_used+0x9af>
    481b:	48 8d 3d be 81 00 00 	lea    rdi,[rip+0x81be]        # c9e0 <_IO_stdin_used+0x9e0>
    4822:	b8 00 00 00 00       	mov    eax,0x0
    4827:	e8 54 dc ff ff       	call   2480 <printf@plt>
    482c:	48 83 c4 10          	add    rsp,0x10
    4830:	0f b6 05 8b 57 10 00 	movzx  eax,BYTE PTR [rip+0x10578b]        # 109fc2 <use_spi>
    4837:	84 c0                	test   al,al
    4839:	0f 84 8c 00 00 00    	je     48cb <ip4_tcp_decode+0x51c>
    483f:	80 7d 9b 00          	cmp    BYTE PTR [rbp-0x65],0x0
    4843:	74 1a                	je     485f <ip4_tcp_decode+0x4b0>
    4845:	80 7d 98 00          	cmp    BYTE PTR [rbp-0x68],0x0
    4849:	74 14                	je     485f <ip4_tcp_decode+0x4b0>
    484b:	83 7d 9c 02          	cmp    DWORD PTR [rbp-0x64],0x2
    484f:	75 0e                	jne    485f <ip4_tcp_decode+0x4b0>
    4851:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4855:	48 89 c7             	mov    rdi,rax
    4858:	e8 3a 45 00 00       	call   8d97 <handle_data_pkt>
    485d:	eb 6c                	jmp    48cb <ip4_tcp_decode+0x51c>
    485f:	80 7d 9a 00          	cmp    BYTE PTR [rbp-0x66],0x0
    4863:	74 14                	je     4879 <ip4_tcp_decode+0x4ca>
    4865:	80 7d 98 00          	cmp    BYTE PTR [rbp-0x68],0x0
    4869:	74 0e                	je     4879 <ip4_tcp_decode+0x4ca>
    486b:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    486f:	48 89 c7             	mov    rdi,rax
    4872:	e8 13 44 00 00       	call   8c8a <polite_end>
    4877:	eb 52                	jmp    48cb <ip4_tcp_decode+0x51c>
    4879:	80 7d 99 00          	cmp    BYTE PTR [rbp-0x67],0x0
    487d:	74 14                	je     4893 <ip4_tcp_decode+0x4e4>
    487f:	83 7d 9c 01          	cmp    DWORD PTR [rbp-0x64],0x1
    4883:	75 0e                	jne    4893 <ip4_tcp_decode+0x4e4>
    4885:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4889:	48 89 c7             	mov    rdi,rax
    488c:	e8 71 3f 00 00       	call   8802 <add_new_conversation>
    4891:	eb 38                	jmp    48cb <ip4_tcp_decode+0x51c>
    4893:	80 7d 99 00          	cmp    BYTE PTR [rbp-0x67],0x0
    4897:	74 1a                	je     48b3 <ip4_tcp_decode+0x504>
    4899:	80 7d 98 00          	cmp    BYTE PTR [rbp-0x68],0x0
    489d:	74 14                	je     48b3 <ip4_tcp_decode+0x504>
    489f:	83 7d 9c 02          	cmp    DWORD PTR [rbp-0x64],0x2
    48a3:	75 0e                	jne    48b3 <ip4_tcp_decode+0x504>
    48a5:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    48a9:	48 89 c7             	mov    rdi,rax
    48ac:	e8 7b 41 00 00       	call   8a2c <spi_ud_thw>
    48b1:	eb 18                	jmp    48cb <ip4_tcp_decode+0x51c>
    48b3:	80 7d 98 00          	cmp    BYTE PTR [rbp-0x68],0x0
    48b7:	74 12                	je     48cb <ip4_tcp_decode+0x51c>
    48b9:	83 7d 9c 01          	cmp    DWORD PTR [rbp-0x64],0x1
    48bd:	75 0c                	jne    48cb <ip4_tcp_decode+0x51c>
    48bf:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    48c3:	48 89 c7             	mov    rdi,rax
    48c6:	e8 24 42 00 00       	call   8aef <update_table>
    48cb:	80 7d 9b 00          	cmp    BYTE PTR [rbp-0x65],0x0
    48cf:	74 17                	je     48e8 <ip4_tcp_decode+0x539>
    48d1:	80 7d 98 00          	cmp    BYTE PTR [rbp-0x68],0x0
    48d5:	74 11                	je     48e8 <ip4_tcp_decode+0x539>
    48d7:	83 7d 9c 02          	cmp    DWORD PTR [rbp-0x64],0x2
    48db:	75 0b                	jne    48e8 <ip4_tcp_decode+0x539>
    48dd:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    48e1:	c7 40 68 01 00 00 00 	mov    DWORD PTR [rax+0x68],0x1
    48e8:	80 7d 97 00          	cmp    BYTE PTR [rbp-0x69],0x0
    48ec:	0f 84 8f 01 00 00    	je     4a81 <ip4_tcp_decode+0x6d2>
    48f2:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    48f6:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    48fa:	48 89 c7             	mov    rdi,rax
    48fd:	e8 6a 2f 00 00       	call   786c <member_exists>
    4902:	89 45 a8             	mov    DWORD PTR [rbp-0x58],eax
    4905:	83 7d a8 ff          	cmp    DWORD PTR [rbp-0x58],0xffffffff
    4909:	0f 84 db 00 00 00    	je     49ea <ip4_tcp_decode+0x63b>
    490f:	8b 45 a8             	mov    eax,DWORD PTR [rbp-0x58]
    4912:	48 63 d0             	movsxd rdx,eax
    4915:	48 89 d0             	mov    rax,rdx
    4918:	48 c1 e0 02          	shl    rax,0x2
    491c:	48 01 d0             	add    rax,rdx
    491f:	48 c1 e0 03          	shl    rax,0x3
    4923:	48 01 d0             	add    rax,rdx
    4926:	48 c1 e0 04          	shl    rax,0x4
    492a:	48 8d 15 ef eb 0e 00 	lea    rdx,[rip+0xeebef]        # f3520 <watchlist>
    4931:	48 01 d0             	add    rax,rdx
    4934:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    4938:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    493c:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4940:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    4944:	48 83 c2 08          	add    rdx,0x8
    4948:	48 89 c6             	mov    rsi,rax
    494b:	48 89 d7             	mov    rdi,rdx
    494e:	e8 1d de ff ff       	call   2770 <strcpy@plt>
    4953:	bf 00 00 00 00       	mov    edi,0x0
    4958:	e8 13 df ff ff       	call   2870 <time@plt>
    495d:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    4961:	8b 92 48 01 00 00    	mov    edx,DWORD PTR [rdx+0x148]
    4967:	8d 72 01             	lea    esi,[rdx+0x1]
    496a:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    496e:	89 b1 48 01 00 00    	mov    DWORD PTR [rcx+0x148],esi
    4974:	48 89 c1             	mov    rcx,rax
    4977:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    497b:	89 d2                	mov    edx,edx
    497d:	48 83 c2 28          	add    rdx,0x28
    4981:	48 89 4c d0 10       	mov    QWORD PTR [rax+rdx*8+0x10],rcx
    4986:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    498a:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    4990:	83 f8 1d             	cmp    eax,0x1d
    4993:	0f 86 e8 00 00 00    	jbe    4a81 <ip4_tcp_decode+0x6d2>
    4999:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    499d:	c7 80 48 01 00 00 1e 	mov    DWORD PTR [rax+0x148],0x1e
    49a4:	00 00 00 
    49a7:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    49ab:	48 89 c7             	mov    rdi,rax
    49ae:	e8 77 2a 00 00       	call   742a <tcp_rst_portscan_detect>
    49b3:	84 c0                	test   al,al
    49b5:	0f 84 c6 00 00 00    	je     4a81 <ip4_tcp_decode+0x6d2>
    49bb:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    49bf:	c7 80 48 01 00 00 00 	mov    DWORD PTR [rax+0x148],0x0
    49c6:	00 00 00 
    49c9:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    49cd:	48 05 50 01 00 00    	add    rax,0x150
    49d3:	ba f0 00 00 00       	mov    edx,0xf0
    49d8:	be 00 00 00 00       	mov    esi,0x0
    49dd:	48 89 c7             	mov    rdi,rax
    49e0:	e8 ab da ff ff       	call   2490 <memset@plt>
    49e5:	e9 97 00 00 00       	jmp    4a81 <ip4_tcp_decode+0x6d2>
    49ea:	8b 05 28 c6 00 00    	mov    eax,DWORD PTR [rip+0xc628]        # 11018 <watchlist_num>
    49f0:	83 c0 01             	add    eax,0x1
    49f3:	89 05 1f c6 00 00    	mov    DWORD PTR [rip+0xc61f],eax        # 11018 <watchlist_num>
    49f9:	8b 05 19 c6 00 00    	mov    eax,DWORD PTR [rip+0xc619]        # 11018 <watchlist_num>
    49ff:	48 63 d0             	movsxd rdx,eax
    4a02:	48 89 d0             	mov    rax,rdx
    4a05:	48 c1 e0 02          	shl    rax,0x2
    4a09:	48 01 d0             	add    rax,rdx
    4a0c:	48 c1 e0 03          	shl    rax,0x3
    4a10:	48 01 d0             	add    rax,rdx
    4a13:	48 c1 e0 04          	shl    rax,0x4
    4a17:	48 8d 15 02 eb 0e 00 	lea    rdx,[rip+0xeeb02]        # f3520 <watchlist>
    4a1e:	48 01 d0             	add    rax,rdx
    4a21:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    4a25:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4a29:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4a2d:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    4a31:	48 83 c2 08          	add    rdx,0x8
    4a35:	48 89 c6             	mov    rsi,rax
    4a38:	48 89 d7             	mov    rdi,rdx
    4a3b:	e8 30 dd ff ff       	call   2770 <strcpy@plt>
    4a40:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4a44:	c7 80 48 01 00 00 00 	mov    DWORD PTR [rax+0x148],0x0
    4a4b:	00 00 00 
    4a4e:	bf 00 00 00 00       	mov    edi,0x0
    4a53:	e8 18 de ff ff       	call   2870 <time@plt>
    4a58:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    4a5c:	8b 92 48 01 00 00    	mov    edx,DWORD PTR [rdx+0x148]
    4a62:	8d 72 01             	lea    esi,[rdx+0x1]
    4a65:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    4a69:	89 b1 48 01 00 00    	mov    DWORD PTR [rcx+0x148],esi
    4a6f:	48 89 c1             	mov    rcx,rax
    4a72:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4a76:	89 d2                	mov    edx,edx
    4a78:	48 83 c2 28          	add    rdx,0x28
    4a7c:	48 89 4c d0 10       	mov    QWORD PTR [rax+rdx*8+0x10],rcx
    4a81:	8b 05 01 c6 00 00    	mov    eax,DWORD PTR [rip+0xc601]        # 11088 <strict_nmap_host_alive_check>
    4a87:	83 f8 01             	cmp    eax,0x1
    4a8a:	0f 85 f6 00 00 00    	jne    4b86 <ip4_tcp_decode+0x7d7>
    4a90:	80 7d 98 00          	cmp    BYTE PTR [rbp-0x68],0x0
    4a94:	74 0c                	je     4aa2 <ip4_tcp_decode+0x6f3>
    4a96:	83 7d a0 50          	cmp    DWORD PTR [rbp-0x60],0x50
    4a9a:	74 26                	je     4ac2 <ip4_tcp_decode+0x713>
    4a9c:	83 7d a4 50          	cmp    DWORD PTR [rbp-0x5c],0x50
    4aa0:	74 20                	je     4ac2 <ip4_tcp_decode+0x713>
    4aa2:	80 7d 99 00          	cmp    BYTE PTR [rbp-0x67],0x0
    4aa6:	0f 84 da 00 00 00    	je     4b86 <ip4_tcp_decode+0x7d7>
    4aac:	81 7d a0 bb 01 00 00 	cmp    DWORD PTR [rbp-0x60],0x1bb
    4ab3:	74 0d                	je     4ac2 <ip4_tcp_decode+0x713>
    4ab5:	81 7d a4 bb 01 00 00 	cmp    DWORD PTR [rbp-0x5c],0x1bb
    4abc:	0f 85 c4 00 00 00    	jne    4b86 <ip4_tcp_decode+0x7d7>
    4ac2:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    4ac5:	3b 45 a4             	cmp    eax,DWORD PTR [rbp-0x5c]
    4ac8:	76 0a                	jbe    4ad4 <ip4_tcp_decode+0x725>
    4aca:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4ace:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    4ad2:	eb 08                	jmp    4adc <ip4_tcp_decode+0x72d>
    4ad4:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4ad8:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    4adc:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    4ae0:	48 89 c7             	mov    rdi,rax
    4ae3:	e8 84 2d 00 00       	call   786c <member_exists>
    4ae8:	89 45 ac             	mov    DWORD PTR [rbp-0x54],eax
    4aeb:	83 7d ac ff          	cmp    DWORD PTR [rbp-0x54],0xffffffff
    4aef:	0f 84 91 00 00 00    	je     4b86 <ip4_tcp_decode+0x7d7>
    4af5:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
    4af8:	48 63 d0             	movsxd rdx,eax
    4afb:	48 89 d0             	mov    rax,rdx
    4afe:	48 c1 e0 02          	shl    rax,0x2
    4b02:	48 01 d0             	add    rax,rdx
    4b05:	48 c1 e0 03          	shl    rax,0x3
    4b09:	48 01 d0             	add    rax,rdx
    4b0c:	48 c1 e0 04          	shl    rax,0x4
    4b10:	48 8d 15 09 ea 0e 00 	lea    rdx,[rip+0xeea09]        # f3520 <watchlist>
    4b17:	48 01 d0             	add    rax,rdx
    4b1a:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    4b1e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b22:	8b 40 34             	mov    eax,DWORD PTR [rax+0x34]
    4b25:	85 c0                	test   eax,eax
    4b27:	75 2a                	jne    4b53 <ip4_tcp_decode+0x7a4>
    4b29:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b2d:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4b30:	83 f8 01             	cmp    eax,0x1
    4b33:	75 1e                	jne    4b53 <ip4_tcp_decode+0x7a4>
    4b35:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b39:	c7 40 34 01 00 00 00 	mov    DWORD PTR [rax+0x34],0x1
    4b40:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b44:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4b47:	8d 50 01             	lea    edx,[rax+0x1]
    4b4a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b4e:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    4b51:	eb 33                	jmp    4b86 <ip4_tcp_decode+0x7d7>
    4b53:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b57:	8b 40 38             	mov    eax,DWORD PTR [rax+0x38]
    4b5a:	85 c0                	test   eax,eax
    4b5c:	75 28                	jne    4b86 <ip4_tcp_decode+0x7d7>
    4b5e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b62:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4b65:	83 f8 02             	cmp    eax,0x2
    4b68:	75 1c                	jne    4b86 <ip4_tcp_decode+0x7d7>
    4b6a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b6e:	c7 40 38 01 00 00 00 	mov    DWORD PTR [rax+0x38],0x1
    4b75:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b79:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4b7c:	8d 50 01             	lea    edx,[rax+0x1]
    4b7f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b83:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    4b86:	0f b6 05 d7 53 10 00 	movzx  eax,BYTE PTR [rip+0x1053d7]        # 109f64 <packet_print>
    4b8d:	84 c0                	test   al,al
    4b8f:	74 3a                	je     4bcb <ip4_tcp_decode+0x81c>
    4b91:	80 7d 9b 00          	cmp    BYTE PTR [rbp-0x65],0x0
    4b95:	74 34                	je     4bcb <ip4_tcp_decode+0x81c>
    4b97:	80 7d 98 00          	cmp    BYTE PTR [rbp-0x68],0x0
    4b9b:	74 2e                	je     4bcb <ip4_tcp_decode+0x81c>
    4b9d:	0f b6 45 9a          	movzx  eax,BYTE PTR [rbp-0x66]
    4ba1:	83 f0 01             	xor    eax,0x1
    4ba4:	84 c0                	test   al,al
    4ba6:	74 23                	je     4bcb <ip4_tcp_decode+0x81c>
    4ba8:	83 7d a0 50          	cmp    DWORD PTR [rbp-0x60],0x50
    4bac:	74 06                	je     4bb4 <ip4_tcp_decode+0x805>
    4bae:	83 7d a4 50          	cmp    DWORD PTR [rbp-0x5c],0x50
    4bb2:	75 17                	jne    4bcb <ip4_tcp_decode+0x81c>
    4bb4:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    4bb8:	48 8d 50 42          	lea    rdx,[rax+0x42]
    4bbc:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4bc0:	48 89 c6             	mov    rsi,rax
    4bc3:	48 89 d7             	mov    rdi,rdx
    4bc6:	e8 67 36 00 00       	call   8232 <http_disect>
    4bcb:	83 7d a0 15          	cmp    DWORD PTR [rbp-0x60],0x15
    4bcf:	74 06                	je     4bd7 <ip4_tcp_decode+0x828>
    4bd1:	83 7d a4 15          	cmp    DWORD PTR [rbp-0x5c],0x15
    4bd5:	75 2d                	jne    4c04 <ip4_tcp_decode+0x855>
    4bd7:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4bdb:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    4bdf:	c0 e8 04             	shr    al,0x4
    4be2:	0f b6 c0             	movzx  eax,al
    4be5:	c1 e0 02             	shl    eax,0x2
    4be8:	48 98                	cdqe   
    4bea:	48 8d 50 22          	lea    rdx,[rax+0x22]
    4bee:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    4bf2:	48 01 c2             	add    rdx,rax
    4bf5:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4bf9:	48 89 c6             	mov    rsi,rax
    4bfc:	48 89 d7             	mov    rdi,rdx
    4bff:	e8 19 38 00 00       	call   841d <ftp_disect>
    4c04:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    4c0b:	8b 50 14             	mov    edx,DWORD PTR [rax+0x14]
    4c0e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4c12:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    4c16:	c0 e8 04             	shr    al,0x4
    4c19:	0f b6 c0             	movzx  eax,al
    4c1c:	c1 e0 02             	shl    eax,0x2
    4c1f:	89 c1                	mov    ecx,eax
    4c21:	89 d0                	mov    eax,edx
    4c23:	29 c8                	sub    eax,ecx
    4c25:	8d 50 de             	lea    edx,[rax-0x22]
    4c28:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4c2c:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    4c2f:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4c33:	48 89 c7             	mov    rdi,rax
    4c36:	e8 5c 17 00 00       	call   6397 <rulemgr>
    4c3b:	90                   	nop
    4c3c:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    4c40:	c9                   	leave  
    4c41:	c3                   	ret    

0000000000004c42 <ip4_udp_decode>:
    4c42:	f3 0f 1e fa          	endbr64 
    4c46:	55                   	push   rbp
    4c47:	48 89 e5             	mov    rbp,rsp
    4c4a:	48 83 ec 30          	sub    rsp,0x30
    4c4e:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    4c52:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    4c56:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    4c5a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4c5e:	48 83 c0 22          	add    rax,0x22
    4c62:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4c66:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4c6a:	48 8d 50 2a          	lea    rdx,[rax+0x2a]
    4c6e:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4c72:	48 89 10             	mov    QWORD PTR [rax],rdx
    4c75:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4c79:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    4c7d:	ba 5d 00 00 00       	mov    edx,0x5d
    4c82:	be 01 00 00 00       	mov    esi,0x1
    4c87:	48 89 c7             	mov    rdi,rax
    4c8a:	e8 07 02 00 00       	call   4e96 <add_ip_addr_or_inc_counter>
    4c8f:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4c93:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4c97:	ba 5d 00 00 00       	mov    edx,0x5d
    4c9c:	be 00 00 00 00       	mov    esi,0x0
    4ca1:	48 89 c7             	mov    rdi,rax
    4ca4:	e8 ed 01 00 00       	call   4e96 <add_ip_addr_or_inc_counter>
    4ca9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4cad:	0f b7 00             	movzx  eax,WORD PTR [rax]
    4cb0:	0f b7 c0             	movzx  eax,ax
    4cb3:	89 c7                	mov    edi,eax
    4cb5:	e8 76 d9 ff ff       	call   2630 <ntohs@plt>
    4cba:	0f b7 c0             	movzx  eax,ax
    4cbd:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
    4cc0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4cc4:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    4cc8:	0f b7 c0             	movzx  eax,ax
    4ccb:	89 c7                	mov    edi,eax
    4ccd:	e8 5e d9 ff ff       	call   2630 <ntohs@plt>
    4cd2:	0f b7 c0             	movzx  eax,ax
    4cd5:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    4cd8:	0f b6 05 85 52 10 00 	movzx  eax,BYTE PTR [rip+0x105285]        # 109f64 <packet_print>
    4cdf:	84 c0                	test   al,al
    4ce1:	74 5d                	je     4d40 <ip4_udp_decode+0xfe>
    4ce3:	48 8d 35 36 7d 00 00 	lea    rsi,[rip+0x7d36]        # ca20 <_IO_stdin_used+0xa20>
    4cea:	48 8d 3d 35 7d 00 00 	lea    rdi,[rip+0x7d35]        # ca26 <_IO_stdin_used+0xa26>
    4cf1:	b8 00 00 00 00       	mov    eax,0x0
    4cf6:	e8 85 d7 ff ff       	call   2480 <printf@plt>
    4cfb:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4cff:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    4d03:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d07:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    4d0b:	8b 75 f4             	mov    esi,DWORD PTR [rbp-0xc]
    4d0e:	8b 55 f0             	mov    edx,DWORD PTR [rbp-0x10]
    4d11:	41 89 f0             	mov    r8d,esi
    4d14:	48 89 c6             	mov    rsi,rax
    4d17:	48 8d 3d 0b 7d 00 00 	lea    rdi,[rip+0x7d0b]        # ca29 <_IO_stdin_used+0xa29>
    4d1e:	b8 00 00 00 00       	mov    eax,0x0
    4d23:	e8 58 d7 ff ff       	call   2480 <printf@plt>
    4d28:	48 8d 35 13 7d 00 00 	lea    rsi,[rip+0x7d13]        # ca42 <_IO_stdin_used+0xa42>
    4d2f:	48 8d 3d f0 7c 00 00 	lea    rdi,[rip+0x7cf0]        # ca26 <_IO_stdin_used+0xa26>
    4d36:	b8 00 00 00 00       	mov    eax,0x0
    4d3b:	e8 40 d7 ff ff       	call   2480 <printf@plt>
    4d40:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d44:	8b 55 f0             	mov    edx,DWORD PTR [rbp-0x10]
    4d47:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    4d4a:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d4e:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
    4d51:	89 50 28             	mov    DWORD PTR [rax+0x28],edx
    4d54:	83 7d f0 35          	cmp    DWORD PTR [rbp-0x10],0x35
    4d58:	74 06                	je     4d60 <ip4_udp_decode+0x11e>
    4d5a:	83 7d f4 35          	cmp    DWORD PTR [rbp-0xc],0x35
    4d5e:	75 17                	jne    4d77 <ip4_udp_decode+0x135>
    4d60:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4d64:	48 8d 50 2b          	lea    rdx,[rax+0x2b]
    4d68:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d6c:	48 89 c6             	mov    rsi,rax
    4d6f:	48 89 d7             	mov    rdi,rdx
    4d72:	e8 6d 35 00 00       	call   82e4 <dns_disect>
    4d77:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4d7b:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    4d7e:	8d 50 d6             	lea    edx,[rax-0x2a]
    4d81:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d85:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    4d88:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d8c:	48 89 c7             	mov    rdi,rax
    4d8f:	e8 03 16 00 00       	call   6397 <rulemgr>
    4d94:	90                   	nop
    4d95:	c9                   	leave  
    4d96:	c3                   	ret    

0000000000004d97 <ip4_igmp_decode>:
    4d97:	f3 0f 1e fa          	endbr64 
    4d9b:	55                   	push   rbp
    4d9c:	48 89 e5             	mov    rbp,rsp
    4d9f:	48 83 ec 60          	sub    rsp,0x60
    4da3:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    4da7:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
    4dab:	48 89 55 a8          	mov    QWORD PTR [rbp-0x58],rdx
    4daf:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4db6:	00 00 
    4db8:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4dbc:	31 c0                	xor    eax,eax
    4dbe:	0f b6 05 9f 51 10 00 	movzx  eax,BYTE PTR [rip+0x10519f]        # 109f64 <packet_print>
    4dc5:	84 c0                	test   al,al
    4dc7:	0f 84 b1 00 00 00    	je     4e7e <ip4_igmp_decode+0xe7>
    4dcd:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4dd1:	48 83 c0 26          	add    rax,0x26
    4dd5:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    4dd9:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    4ddd:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    4de1:	48 89 c6             	mov    rsi,rax
    4de4:	48 8d 3d 5d 7c 00 00 	lea    rdi,[rip+0x7c5d]        # ca48 <_IO_stdin_used+0xa48>
    4deb:	b8 00 00 00 00       	mov    eax,0x0
    4df0:	e8 8b d6 ff ff       	call   2480 <printf@plt>
    4df5:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4df9:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4dfc:	0f b6 c0             	movzx  eax,al
    4dff:	83 f8 11             	cmp    eax,0x11
    4e02:	74 07                	je     4e0b <ip4_igmp_decode+0x74>
    4e04:	83 f8 22             	cmp    eax,0x22
    4e07:	74 10                	je     4e19 <ip4_igmp_decode+0x82>
    4e09:	eb 54                	jmp    4e5f <ip4_igmp_decode+0xc8>
    4e0b:	48 8d 3d 4b 7c 00 00 	lea    rdi,[rip+0x7c4b]        # ca5d <_IO_stdin_used+0xa5d>
    4e12:	e8 c9 d6 ff ff       	call   24e0 <puts@plt>
    4e17:	eb 66                	jmp    4e7f <ip4_igmp_decode+0xe8>
    4e19:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4e1d:	48 83 c0 26          	add    rax,0x26
    4e21:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    4e25:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4e29:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    4e2c:	89 c7                	mov    edi,eax
    4e2e:	e8 ac e2 ff ff       	call   30df <ipv4_ntoa>
    4e33:	48 89 c2             	mov    rdx,rax
    4e36:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    4e3a:	48 89 d6             	mov    rsi,rdx
    4e3d:	48 89 c7             	mov    rdi,rax
    4e40:	e8 2b d9 ff ff       	call   2770 <strcpy@plt>
    4e45:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    4e49:	48 89 c6             	mov    rsi,rax
    4e4c:	48 8d 3d 25 7c 00 00 	lea    rdi,[rip+0x7c25]        # ca78 <_IO_stdin_used+0xa78>
    4e53:	b8 00 00 00 00       	mov    eax,0x0
    4e58:	e8 23 d6 ff ff       	call   2480 <printf@plt>
    4e5d:	eb 20                	jmp    4e7f <ip4_igmp_decode+0xe8>
    4e5f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4e63:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4e66:	0f b6 c0             	movzx  eax,al
    4e69:	89 c6                	mov    esi,eax
    4e6b:	48 8d 3d 3c 7c 00 00 	lea    rdi,[rip+0x7c3c]        # caae <_IO_stdin_used+0xaae>
    4e72:	b8 00 00 00 00       	mov    eax,0x0
    4e77:	e8 04 d6 ff ff       	call   2480 <printf@plt>
    4e7c:	eb 01                	jmp    4e7f <ip4_igmp_decode+0xe8>
    4e7e:	90                   	nop
    4e7f:	90                   	nop
    4e80:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4e84:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    4e8b:	00 00 
    4e8d:	74 05                	je     4e94 <ip4_igmp_decode+0xfd>
    4e8f:	e8 ac d8 ff ff       	call   2740 <__stack_chk_fail@plt>
    4e94:	c9                   	leave  
    4e95:	c3                   	ret    

0000000000004e96 <add_ip_addr_or_inc_counter>:
    4e96:	f3 0f 1e fa          	endbr64 
    4e9a:	55                   	push   rbp
    4e9b:	48 89 e5             	mov    rbp,rsp
    4e9e:	48 83 ec 60          	sub    rsp,0x60
    4ea2:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    4ea6:	89 f0                	mov    eax,esi
    4ea8:	89 55 a0             	mov    DWORD PTR [rbp-0x60],edx
    4eab:	88 45 a4             	mov    BYTE PTR [rbp-0x5c],al
    4eae:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4eb5:	00 00 
    4eb7:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4ebb:	31 c0                	xor    eax,eax
    4ebd:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4ec1:	ba 08 00 00 00       	mov    edx,0x8
    4ec6:	be 00 00 00 00       	mov    esi,0x0
    4ecb:	48 89 c7             	mov    rdi,rax
    4ece:	e8 bd d5 ff ff       	call   2490 <memset@plt>
    4ed3:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    4ed7:	ba 1c 00 00 00       	mov    edx,0x1c
    4edc:	be 00 00 00 00       	mov    esi,0x0
    4ee1:	48 89 c7             	mov    rdi,rax
    4ee4:	e8 a7 d5 ff ff       	call   2490 <memset@plt>
    4ee9:	48 8b 4d a8          	mov    rcx,QWORD PTR [rbp-0x58]
    4eed:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4ef1:	ba 18 00 00 00       	mov    edx,0x18
    4ef6:	48 89 ce             	mov    rsi,rcx
    4ef9:	48 89 c7             	mov    rdi,rax
    4efc:	e8 bf d8 ff ff       	call   27c0 <strncpy@plt>
    4f01:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    4f05:	ba 1c 00 00 00       	mov    edx,0x1c
    4f0a:	be 00 00 00 00       	mov    esi,0x0
    4f0f:	48 89 c7             	mov    rdi,rax
    4f12:	e8 79 d5 ff ff       	call   2490 <memset@plt>
    4f17:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4f1b:	48 8d 55 c0          	lea    rdx,[rbp-0x40]
    4f1f:	48 83 c2 08          	add    rdx,0x8
    4f23:	48 89 c6             	mov    rsi,rax
    4f26:	48 89 d7             	mov    rdi,rdx
    4f29:	e8 42 d8 ff ff       	call   2770 <strcpy@plt>
    4f2e:	0f b6 45 a4          	movzx  eax,BYTE PTR [rbp-0x5c]
    4f32:	88 45 c0             	mov    BYTE PTR [rbp-0x40],al
    4f35:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    4f38:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    4f3b:	48 8d 55 c0          	lea    rdx,[rbp-0x40]
    4f3f:	48 8d 45 b8          	lea    rax,[rbp-0x48]
    4f43:	48 89 d1             	mov    rcx,rdx
    4f46:	48 8d 15 35 00 00 00 	lea    rdx,[rip+0x35]        # 4f82 <verify_ip_addr>
    4f4d:	be 00 00 00 00       	mov    esi,0x0
    4f52:	48 89 c7             	mov    rdi,rax
    4f55:	e8 76 d6 ff ff       	call   25d0 <pthread_create@plt>
    4f5a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4f5e:	be 00 00 00 00       	mov    esi,0x0
    4f63:	48 89 c7             	mov    rdi,rax
    4f66:	e8 05 d5 ff ff       	call   2470 <pthread_join@plt>
    4f6b:	90                   	nop
    4f6c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4f70:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    4f77:	00 00 
    4f79:	74 05                	je     4f80 <add_ip_addr_or_inc_counter+0xea>
    4f7b:	e8 c0 d7 ff ff       	call   2740 <__stack_chk_fail@plt>
    4f80:	c9                   	leave  
    4f81:	c3                   	ret    

0000000000004f82 <verify_ip_addr>:
    4f82:	f3 0f 1e fa          	endbr64 
    4f86:	55                   	push   rbp
    4f87:	48 89 e5             	mov    rbp,rsp
    4f8a:	48 83 ec 30          	sub    rsp,0x30
    4f8e:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    4f92:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4f96:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    4f9a:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
    4fa1:	e9 c9 00 00 00       	jmp    506f <verify_ip_addr+0xed>
    4fa6:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    4fa9:	48 63 d0             	movsxd rdx,eax
    4fac:	48 89 d0             	mov    rax,rdx
    4faf:	48 c1 e0 02          	shl    rax,0x2
    4fb3:	48 01 d0             	add    rax,rdx
    4fb6:	48 c1 e0 03          	shl    rax,0x3
    4fba:	48 01 d0             	add    rax,rdx
    4fbd:	48 c1 e0 04          	shl    rax,0x4
    4fc1:	48 8d 15 58 e5 0e 00 	lea    rdx,[rip+0xee558]        # f3520 <watchlist>
    4fc8:	48 01 d0             	add    rax,rdx
    4fcb:	48 8d 50 08          	lea    rdx,[rax+0x8]
    4fcf:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4fd3:	48 83 c0 08          	add    rax,0x8
    4fd7:	48 89 d6             	mov    rsi,rdx
    4fda:	48 89 c7             	mov    rdi,rax
    4fdd:	e8 6e d7 ff ff       	call   2750 <strcmp@plt>
    4fe2:	85 c0                	test   eax,eax
    4fe4:	0f 85 81 00 00 00    	jne    506b <verify_ip_addr+0xe9>
    4fea:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    4fed:	48 63 d0             	movsxd rdx,eax
    4ff0:	48 89 d0             	mov    rax,rdx
    4ff3:	48 c1 e0 02          	shl    rax,0x2
    4ff7:	48 01 d0             	add    rax,rdx
    4ffa:	48 c1 e0 03          	shl    rax,0x3
    4ffe:	48 01 d0             	add    rax,rdx
    5001:	48 c1 e0 04          	shl    rax,0x4
    5005:	48 89 c2             	mov    rdx,rax
    5008:	48 8d 05 69 e7 0e 00 	lea    rax,[rip+0xee769]        # f3778 <watchlist+0x258>
    500f:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    5012:	8d 48 01             	lea    ecx,[rax+0x1]
    5015:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    5018:	48 63 d0             	movsxd rdx,eax
    501b:	48 89 d0             	mov    rax,rdx
    501e:	48 c1 e0 02          	shl    rax,0x2
    5022:	48 01 d0             	add    rax,rdx
    5025:	48 c1 e0 03          	shl    rax,0x3
    5029:	48 01 d0             	add    rax,rdx
    502c:	48 c1 e0 04          	shl    rax,0x4
    5030:	48 89 c2             	mov    rdx,rax
    5033:	48 8d 05 3e e7 0e 00 	lea    rax,[rip+0xee73e]        # f3778 <watchlist+0x258>
    503a:	89 0c 02             	mov    DWORD PTR [rdx+rax*1],ecx
    503d:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    5040:	48 63 d0             	movsxd rdx,eax
    5043:	48 89 d0             	mov    rax,rdx
    5046:	48 c1 e0 02          	shl    rax,0x2
    504a:	48 01 d0             	add    rax,rdx
    504d:	48 c1 e0 03          	shl    rax,0x3
    5051:	48 01 d0             	add    rax,rdx
    5054:	48 c1 e0 04          	shl    rax,0x4
    5058:	48 8d 15 c1 e4 0e 00 	lea    rdx,[rip+0xee4c1]        # f3520 <watchlist>
    505f:	48 01 d0             	add    rax,rdx
    5062:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    5066:	e9 f5 00 00 00       	jmp    5160 <verify_ip_addr+0x1de>
    506b:	83 45 e4 01          	add    DWORD PTR [rbp-0x1c],0x1
    506f:	8b 05 a3 bf 00 00    	mov    eax,DWORD PTR [rip+0xbfa3]        # 11018 <watchlist_num>
    5075:	39 45 e4             	cmp    DWORD PTR [rbp-0x1c],eax
    5078:	0f 8e 28 ff ff ff    	jle    4fa6 <verify_ip_addr+0x24>
    507e:	bf 90 02 00 00       	mov    edi,0x290
    5083:	e8 d8 d4 ff ff       	call   2560 <malloc@plt>
    5088:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    508c:	8b 05 86 bf 00 00    	mov    eax,DWORD PTR [rip+0xbf86]        # 11018 <watchlist_num>
    5092:	83 c0 01             	add    eax,0x1
    5095:	89 05 7d bf 00 00    	mov    DWORD PTR [rip+0xbf7d],eax        # 11018 <watchlist_num>
    509b:	8b 05 77 bf 00 00    	mov    eax,DWORD PTR [rip+0xbf77]        # 11018 <watchlist_num>
    50a1:	48 63 d0             	movsxd rdx,eax
    50a4:	48 89 d0             	mov    rax,rdx
    50a7:	48 c1 e0 02          	shl    rax,0x2
    50ab:	48 01 d0             	add    rax,rdx
    50ae:	48 c1 e0 03          	shl    rax,0x3
    50b2:	48 01 d0             	add    rax,rdx
    50b5:	48 c1 e0 04          	shl    rax,0x4
    50b9:	48 89 c1             	mov    rcx,rax
    50bc:	48 8d 05 5d e4 0e 00 	lea    rax,[rip+0xee45d]        # f3520 <watchlist>
    50c3:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    50c7:	48 01 c8             	add    rax,rcx
    50ca:	48 89 d6             	mov    rsi,rdx
    50cd:	ba 52 00 00 00       	mov    edx,0x52
    50d2:	48 89 c7             	mov    rdi,rax
    50d5:	48 89 d1             	mov    rcx,rdx
    50d8:	f3 48 a5             	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
    50db:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    50df:	48 83 c0 08          	add    rax,0x8
    50e3:	ba 0f 00 00 00       	mov    edx,0xf
    50e8:	be 00 00 00 00       	mov    esi,0x0
    50ed:	48 89 c7             	mov    rdi,rax
    50f0:	e8 9b d3 ff ff       	call   2490 <memset@plt>
    50f5:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    50f9:	48 8d 48 08          	lea    rcx,[rax+0x8]
    50fd:	8b 05 15 bf 00 00    	mov    eax,DWORD PTR [rip+0xbf15]        # 11018 <watchlist_num>
    5103:	48 63 d0             	movsxd rdx,eax
    5106:	48 89 d0             	mov    rax,rdx
    5109:	48 c1 e0 02          	shl    rax,0x2
    510d:	48 01 d0             	add    rax,rdx
    5110:	48 c1 e0 03          	shl    rax,0x3
    5114:	48 01 d0             	add    rax,rdx
    5117:	48 c1 e0 04          	shl    rax,0x4
    511b:	48 8d 15 fe e3 0e 00 	lea    rdx,[rip+0xee3fe]        # f3520 <watchlist>
    5122:	48 01 d0             	add    rax,rdx
    5125:	48 83 c0 08          	add    rax,0x8
    5129:	48 89 ce             	mov    rsi,rcx
    512c:	48 89 c7             	mov    rdi,rax
    512f:	e8 3c d6 ff ff       	call   2770 <strcpy@plt>
    5134:	8b 05 de be 00 00    	mov    eax,DWORD PTR [rip+0xbede]        # 11018 <watchlist_num>
    513a:	48 63 d0             	movsxd rdx,eax
    513d:	48 89 d0             	mov    rax,rdx
    5140:	48 c1 e0 02          	shl    rax,0x2
    5144:	48 01 d0             	add    rax,rdx
    5147:	48 c1 e0 03          	shl    rax,0x3
    514b:	48 01 d0             	add    rax,rdx
    514e:	48 c1 e0 04          	shl    rax,0x4
    5152:	48 8d 15 c7 e3 0e 00 	lea    rdx,[rip+0xee3c7]        # f3520 <watchlist>
    5159:	48 01 d0             	add    rax,rdx
    515c:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    5160:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5164:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5167:	84 c0                	test   al,al
    5169:	74 36                	je     51a1 <verify_ip_addr+0x21f>
    516b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    516f:	8b 80 80 02 00 00    	mov    eax,DWORD PTR [rax+0x280]
    5175:	8d 50 01             	lea    edx,[rax+0x1]
    5178:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    517c:	89 90 80 02 00 00    	mov    DWORD PTR [rax+0x280],edx
    5182:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5186:	8b 90 88 02 00 00    	mov    edx,DWORD PTR [rax+0x288]
    518c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5190:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    5193:	01 c2                	add    edx,eax
    5195:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5199:	89 90 88 02 00 00    	mov    DWORD PTR [rax+0x288],edx
    519f:	eb 34                	jmp    51d5 <verify_ip_addr+0x253>
    51a1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    51a5:	8b 80 7c 02 00 00    	mov    eax,DWORD PTR [rax+0x27c]
    51ab:	8d 50 01             	lea    edx,[rax+0x1]
    51ae:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    51b2:	89 90 7c 02 00 00    	mov    DWORD PTR [rax+0x27c],edx
    51b8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    51bc:	8b 90 84 02 00 00    	mov    edx,DWORD PTR [rax+0x284]
    51c2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    51c6:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    51c9:	01 c2                	add    edx,eax
    51cb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    51cf:	89 90 84 02 00 00    	mov    DWORD PTR [rax+0x284],edx
    51d5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    51d9:	8b 90 8c 02 00 00    	mov    edx,DWORD PTR [rax+0x28c]
    51df:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    51e3:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    51e6:	01 c2                	add    edx,eax
    51e8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    51ec:	89 90 8c 02 00 00    	mov    DWORD PTR [rax+0x28c],edx
    51f2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    51f6:	8b 80 7c 02 00 00    	mov    eax,DWORD PTR [rax+0x27c]
    51fc:	8d 14 00             	lea    edx,[rax+rax*1]
    51ff:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5203:	89 90 58 02 00 00    	mov    DWORD PTR [rax+0x258],edx
    5209:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    520d:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    5210:	83 f8 5e             	cmp    eax,0x5e
    5213:	0f 84 9b 00 00 00    	je     52b4 <verify_ip_addr+0x332>
    5219:	83 f8 5e             	cmp    eax,0x5e
    521c:	0f 8f cf 00 00 00    	jg     52f1 <verify_ip_addr+0x36f>
    5222:	83 f8 5c             	cmp    eax,0x5c
    5225:	74 0a                	je     5231 <verify_ip_addr+0x2af>
    5227:	83 f8 5d             	cmp    eax,0x5d
    522a:	74 48                	je     5274 <verify_ip_addr+0x2f2>
    522c:	e9 c0 00 00 00       	jmp    52f1 <verify_ip_addr+0x36f>
    5231:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5235:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5238:	84 c0                	test   al,al
    523a:	74 1c                	je     5258 <verify_ip_addr+0x2d6>
    523c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5240:	8b 80 5c 02 00 00    	mov    eax,DWORD PTR [rax+0x25c]
    5246:	8d 50 01             	lea    edx,[rax+0x1]
    5249:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    524d:	89 90 5c 02 00 00    	mov    DWORD PTR [rax+0x25c],edx
    5253:	e9 d5 00 00 00       	jmp    532d <verify_ip_addr+0x3ab>
    5258:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    525c:	8b 80 68 02 00 00    	mov    eax,DWORD PTR [rax+0x268]
    5262:	8d 50 01             	lea    edx,[rax+0x1]
    5265:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5269:	89 90 68 02 00 00    	mov    DWORD PTR [rax+0x268],edx
    526f:	e9 b9 00 00 00       	jmp    532d <verify_ip_addr+0x3ab>
    5274:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5278:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    527b:	84 c0                	test   al,al
    527d:	74 1c                	je     529b <verify_ip_addr+0x319>
    527f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5283:	8b 80 60 02 00 00    	mov    eax,DWORD PTR [rax+0x260]
    5289:	8d 50 01             	lea    edx,[rax+0x1]
    528c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5290:	89 90 60 02 00 00    	mov    DWORD PTR [rax+0x260],edx
    5296:	e9 92 00 00 00       	jmp    532d <verify_ip_addr+0x3ab>
    529b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    529f:	8b 80 6c 02 00 00    	mov    eax,DWORD PTR [rax+0x26c]
    52a5:	8d 50 01             	lea    edx,[rax+0x1]
    52a8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52ac:	89 90 6c 02 00 00    	mov    DWORD PTR [rax+0x26c],edx
    52b2:	eb 79                	jmp    532d <verify_ip_addr+0x3ab>
    52b4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    52b8:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    52bb:	84 c0                	test   al,al
    52bd:	74 19                	je     52d8 <verify_ip_addr+0x356>
    52bf:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52c3:	8b 80 64 02 00 00    	mov    eax,DWORD PTR [rax+0x264]
    52c9:	8d 50 01             	lea    edx,[rax+0x1]
    52cc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52d0:	89 90 64 02 00 00    	mov    DWORD PTR [rax+0x264],edx
    52d6:	eb 55                	jmp    532d <verify_ip_addr+0x3ab>
    52d8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52dc:	8b 80 70 02 00 00    	mov    eax,DWORD PTR [rax+0x270]
    52e2:	8d 50 01             	lea    edx,[rax+0x1]
    52e5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52e9:	89 90 70 02 00 00    	mov    DWORD PTR [rax+0x270],edx
    52ef:	eb 3c                	jmp    532d <verify_ip_addr+0x3ab>
    52f1:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    52f5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    52f8:	84 c0                	test   al,al
    52fa:	74 19                	je     5315 <verify_ip_addr+0x393>
    52fc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5300:	8b 80 74 02 00 00    	mov    eax,DWORD PTR [rax+0x274]
    5306:	8d 50 01             	lea    edx,[rax+0x1]
    5309:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    530d:	89 90 74 02 00 00    	mov    DWORD PTR [rax+0x274],edx
    5313:	eb 17                	jmp    532c <verify_ip_addr+0x3aa>
    5315:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5319:	8b 80 78 02 00 00    	mov    eax,DWORD PTR [rax+0x278]
    531f:	8d 50 01             	lea    edx,[rax+0x1]
    5322:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5326:	89 90 78 02 00 00    	mov    DWORD PTR [rax+0x278],edx
    532c:	90                   	nop
    532d:	b8 01 00 00 00       	mov    eax,0x1
    5332:	c9                   	leave  
    5333:	c3                   	ret    

0000000000005334 <ascii_hexdump>:
    5334:	f3 0f 1e fa          	endbr64 
    5338:	55                   	push   rbp
    5339:	48 89 e5             	mov    rbp,rsp
    533c:	48 83 ec 20          	sub    rsp,0x20
    5340:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    5344:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    5347:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    534e:	eb 52                	jmp    53a2 <ascii_hexdump+0x6e>
    5350:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5353:	48 63 d0             	movsxd rdx,eax
    5356:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    535a:	48 01 d0             	add    rax,rdx
    535d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5360:	3c 20                	cmp    al,0x20
    5362:	76 30                	jbe    5394 <ascii_hexdump+0x60>
    5364:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5367:	48 63 d0             	movsxd rdx,eax
    536a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    536e:	48 01 d0             	add    rax,rdx
    5371:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5374:	3c 7e                	cmp    al,0x7e
    5376:	77 1c                	ja     5394 <ascii_hexdump+0x60>
    5378:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    537b:	48 63 d0             	movsxd rdx,eax
    537e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5382:	48 01 d0             	add    rax,rdx
    5385:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5388:	0f b6 c0             	movzx  eax,al
    538b:	89 c7                	mov    edi,eax
    538d:	e8 7e d1 ff ff       	call   2510 <putchar@plt>
    5392:	eb 0a                	jmp    539e <ascii_hexdump+0x6a>
    5394:	bf 2e 00 00 00       	mov    edi,0x2e
    5399:	e8 72 d1 ff ff       	call   2510 <putchar@plt>
    539e:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    53a2:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    53a5:	3b 45 e4             	cmp    eax,DWORD PTR [rbp-0x1c]
    53a8:	7c a6                	jl     5350 <ascii_hexdump+0x1c>
    53aa:	bf 0a 00 00 00       	mov    edi,0xa
    53af:	e8 5c d1 ff ff       	call   2510 <putchar@plt>
    53b4:	90                   	nop
    53b5:	c9                   	leave  
    53b6:	c3                   	ret    

00000000000053b7 <stdout_alert>:
    53b7:	f3 0f 1e fa          	endbr64 
    53bb:	55                   	push   rbp
    53bc:	48 89 e5             	mov    rbp,rsp
    53bf:	53                   	push   rbx
    53c0:	48 81 ec c8 01 00 00 	sub    rsp,0x1c8
    53c7:	48 89 bd 48 fe ff ff 	mov    QWORD PTR [rbp-0x1b8],rdi
    53ce:	48 89 b5 40 fe ff ff 	mov    QWORD PTR [rbp-0x1c0],rsi
    53d5:	89 95 3c fe ff ff    	mov    DWORD PTR [rbp-0x1c4],edx
    53db:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    53e2:	00 00 
    53e4:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    53e8:	31 c0                	xor    eax,eax
    53ea:	bf 00 00 00 00       	mov    edi,0x0
    53ef:	e8 7c d4 ff ff       	call   2870 <time@plt>
    53f4:	48 89 85 50 fe ff ff 	mov    QWORD PTR [rbp-0x1b0],rax
    53fb:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
    5402:	48 89 c7             	mov    rdi,rax
    5405:	e8 26 d4 ff ff       	call   2830 <localtime@plt>
    540a:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    540d:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    5411:	48 89 8d 60 fe ff ff 	mov    QWORD PTR [rbp-0x1a0],rcx
    5418:	48 89 9d 68 fe ff ff 	mov    QWORD PTR [rbp-0x198],rbx
    541f:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    5423:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    5427:	48 89 8d 70 fe ff ff 	mov    QWORD PTR [rbp-0x190],rcx
    542e:	48 89 9d 78 fe ff ff 	mov    QWORD PTR [rbp-0x188],rbx
    5435:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    5439:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    543d:	48 89 8d 80 fe ff ff 	mov    QWORD PTR [rbp-0x180],rcx
    5444:	48 89 9d 88 fe ff ff 	mov    QWORD PTR [rbp-0x178],rbx
    544b:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    544f:	48 89 85 90 fe ff ff 	mov    QWORD PTR [rbp-0x170],rax
    5456:	8b bd 60 fe ff ff    	mov    edi,DWORD PTR [rbp-0x1a0]
    545c:	8b b5 64 fe ff ff    	mov    esi,DWORD PTR [rbp-0x19c]
    5462:	44 8b 8d 68 fe ff ff 	mov    r9d,DWORD PTR [rbp-0x198]
    5469:	44 8b 85 6c fe ff ff 	mov    r8d,DWORD PTR [rbp-0x194]
    5470:	8b 85 70 fe ff ff    	mov    eax,DWORD PTR [rbp-0x190]
    5476:	8d 48 01             	lea    ecx,[rax+0x1]
    5479:	8b 85 74 fe ff ff    	mov    eax,DWORD PTR [rbp-0x18c]
    547f:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    5485:	48 8d 85 a0 fe ff ff 	lea    rax,[rbp-0x160]
    548c:	57                   	push   rdi
    548d:	56                   	push   rsi
    548e:	48 8d 35 31 76 00 00 	lea    rsi,[rip+0x7631]        # cac6 <_IO_stdin_used+0xac6>
    5495:	48 89 c7             	mov    rdi,rax
    5498:	b8 00 00 00 00       	mov    eax,0x0
    549d:	e8 7e d1 ff ff       	call   2620 <sprintf@plt>
    54a2:	48 83 c4 10          	add    rsp,0x10
    54a6:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    54ad:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    54b0:	3d 80 00 00 00       	cmp    eax,0x80
    54b5:	75 4e                	jne    5505 <stdout_alert+0x14e>
    54b7:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    54be:	48 8b 78 10          	mov    rdi,QWORD PTR [rax+0x10]
    54c2:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    54c9:	48 8b 70 08          	mov    rsi,QWORD PTR [rax+0x8]
    54cd:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
    54d4:	48 8d 88 4c 01 00 00 	lea    rcx,[rax+0x14c]
    54db:	48 8d 95 a0 fe ff ff 	lea    rdx,[rbp-0x160]
    54e2:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    54e9:	49 89 f9             	mov    r9,rdi
    54ec:	49 89 f0             	mov    r8,rsi
    54ef:	48 8d 35 ec 75 00 00 	lea    rsi,[rip+0x75ec]        # cae2 <_IO_stdin_used+0xae2>
    54f6:	48 89 c7             	mov    rdi,rax
    54f9:	b8 00 00 00 00       	mov    eax,0x0
    54fe:	e8 1d d1 ff ff       	call   2620 <sprintf@plt>
    5503:	eb 61                	jmp    5566 <stdout_alert+0x1af>
    5505:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    550c:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    550f:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    5516:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    551a:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    5521:	44 8b 48 24          	mov    r9d,DWORD PTR [rax+0x24]
    5525:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    552c:	4c 8b 40 08          	mov    r8,QWORD PTR [rax+0x8]
    5530:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
    5537:	48 8d 88 4c 01 00 00 	lea    rcx,[rax+0x14c]
    553e:	48 8d 95 a0 fe ff ff 	lea    rdx,[rbp-0x160]
    5545:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    554c:	57                   	push   rdi
    554d:	56                   	push   rsi
    554e:	48 8d 35 9d 75 00 00 	lea    rsi,[rip+0x759d]        # caf2 <_IO_stdin_used+0xaf2>
    5555:	48 89 c7             	mov    rdi,rax
    5558:	b8 00 00 00 00       	mov    eax,0x0
    555d:	e8 be d0 ff ff       	call   2620 <sprintf@plt>
    5562:	48 83 c4 10          	add    rsp,0x10
    5566:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    556d:	48 89 c6             	mov    rsi,rax
    5570:	48 8d 3d 91 75 00 00 	lea    rdi,[rip+0x7591]        # cb08 <_IO_stdin_used+0xb08>
    5577:	b8 00 00 00 00       	mov    eax,0x0
    557c:	e8 ff ce ff ff       	call   2480 <printf@plt>
    5581:	48 8b 05 a8 ba 00 00 	mov    rax,QWORD PTR [rip+0xbaa8]        # 11030 <def_log_file>
    5588:	48 8d 35 7c 75 00 00 	lea    rsi,[rip+0x757c]        # cb0b <_IO_stdin_used+0xb0b>
    558f:	48 89 c7             	mov    rdi,rax
    5592:	e8 d9 cf ff ff       	call   2570 <fopen@plt>
    5597:	48 89 85 58 fe ff ff 	mov    QWORD PTR [rbp-0x1a8],rax
    559e:	48 8b 95 58 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1a8]
    55a5:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    55ac:	48 89 d6             	mov    rsi,rdx
    55af:	48 89 c7             	mov    rdi,rax
    55b2:	e8 d9 d0 ff ff       	call   2690 <fputs@plt>
    55b7:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    55be:	48 89 c7             	mov    rdi,rax
    55c1:	e8 ea d1 ff ff       	call   27b0 <fclose@plt>
    55c6:	90                   	nop
    55c7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    55cb:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    55d2:	00 00 
    55d4:	74 05                	je     55db <stdout_alert+0x224>
    55d6:	e8 65 d1 ff ff       	call   2740 <__stack_chk_fail@plt>
    55db:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    55df:	c9                   	leave  
    55e0:	c3                   	ret    

00000000000055e1 <str_match_parser>:
    55e1:	f3 0f 1e fa          	endbr64 
    55e5:	55                   	push   rbp
    55e6:	48 89 e5             	mov    rbp,rsp
    55e9:	53                   	push   rbx
    55ea:	48 83 ec 48          	sub    rsp,0x48
    55ee:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    55f2:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
    55f6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    55fd:	00 00 
    55ff:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    5603:	31 c0                	xor    eax,eax
    5605:	48 89 e0             	mov    rax,rsp
    5608:	48 89 c3             	mov    rbx,rax
    560b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    560f:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5612:	85 c0                	test   eax,eax
    5614:	75 0a                	jne    5620 <str_match_parser+0x3f>
    5616:	b8 00 00 00 00       	mov    eax,0x0
    561b:	e9 e1 01 00 00       	jmp    5801 <str_match_parser+0x220>
    5620:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5624:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5627:	83 c0 01             	add    eax,0x1
    562a:	01 c0                	add    eax,eax
    562c:	48 98                	cdqe   
    562e:	48 83 e8 01          	sub    rax,0x1
    5632:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    5636:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    563a:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    563d:	83 c0 01             	add    eax,0x1
    5640:	01 c0                	add    eax,eax
    5642:	48 98                	cdqe   
    5644:	49 89 c2             	mov    r10,rax
    5647:	41 bb 00 00 00 00    	mov    r11d,0x0
    564d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5651:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5654:	83 c0 01             	add    eax,0x1
    5657:	01 c0                	add    eax,eax
    5659:	48 98                	cdqe   
    565b:	49 89 c0             	mov    r8,rax
    565e:	41 b9 00 00 00 00    	mov    r9d,0x0
    5664:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5668:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    566b:	83 c0 01             	add    eax,0x1
    566e:	01 c0                	add    eax,eax
    5670:	48 98                	cdqe   
    5672:	ba 10 00 00 00       	mov    edx,0x10
    5677:	48 83 ea 01          	sub    rdx,0x1
    567b:	48 01 d0             	add    rax,rdx
    567e:	be 10 00 00 00       	mov    esi,0x10
    5683:	ba 00 00 00 00       	mov    edx,0x0
    5688:	48 f7 f6             	div    rsi
    568b:	48 6b c0 10          	imul   rax,rax,0x10
    568f:	48 89 c1             	mov    rcx,rax
    5692:	48 81 e1 00 f0 ff ff 	and    rcx,0xfffffffffffff000
    5699:	48 89 e2             	mov    rdx,rsp
    569c:	48 29 ca             	sub    rdx,rcx
    569f:	48 39 d4             	cmp    rsp,rdx
    56a2:	74 12                	je     56b6 <str_match_parser+0xd5>
    56a4:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    56ab:	48 83 8c 24 f8 0f 00 	or     QWORD PTR [rsp+0xff8],0x0
    56b2:	00 00 
    56b4:	eb e9                	jmp    569f <str_match_parser+0xbe>
    56b6:	48 89 c2             	mov    rdx,rax
    56b9:	81 e2 ff 0f 00 00    	and    edx,0xfff
    56bf:	48 29 d4             	sub    rsp,rdx
    56c2:	48 89 c2             	mov    rdx,rax
    56c5:	81 e2 ff 0f 00 00    	and    edx,0xfff
    56cb:	48 85 d2             	test   rdx,rdx
    56ce:	74 10                	je     56e0 <str_match_parser+0xff>
    56d0:	25 ff 0f 00 00       	and    eax,0xfff
    56d5:	48 83 e8 08          	sub    rax,0x8
    56d9:	48 01 e0             	add    rax,rsp
    56dc:	48 83 08 00          	or     QWORD PTR [rax],0x0
    56e0:	48 89 e0             	mov    rax,rsp
    56e3:	48 83 c0 00          	add    rax,0x0
    56e7:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    56eb:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    56ef:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    56f2:	83 c0 01             	add    eax,0x1
    56f5:	01 c0                	add    eax,eax
    56f7:	48 63 d0             	movsxd rdx,eax
    56fa:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    56fe:	be 00 00 00 00       	mov    esi,0x0
    5703:	48 89 c7             	mov    rdi,rax
    5706:	e8 85 cd ff ff       	call   2490 <memset@plt>
    570b:	c7 45 d4 00 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x0
    5712:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5716:	8b 80 4c 03 00 00    	mov    eax,DWORD PTR [rax+0x34c]
    571c:	85 c0                	test   eax,eax
    571e:	74 5f                	je     577f <str_match_parser+0x19e>
    5720:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5724:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    5727:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
    572a:	eb 42                	jmp    576e <str_match_parser+0x18d>
    572c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5730:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    5733:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
    5736:	48 98                	cdqe   
    5738:	48 01 d0             	add    rax,rdx
    573b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    573e:	0f b6 d0             	movzx  edx,al
    5741:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    5744:	8d 48 01             	lea    ecx,[rax+0x1]
    5747:	89 4d d4             	mov    DWORD PTR [rbp-0x2c],ecx
    574a:	01 c0                	add    eax,eax
    574c:	48 63 c8             	movsxd rcx,eax
    574f:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    5753:	48 01 c8             	add    rax,rcx
    5756:	48 8d 35 b0 73 00 00 	lea    rsi,[rip+0x73b0]        # cb0d <_IO_stdin_used+0xb0d>
    575d:	48 89 c7             	mov    rdi,rax
    5760:	b8 00 00 00 00       	mov    eax,0x0
    5765:	e8 b6 ce ff ff       	call   2620 <sprintf@plt>
    576a:	83 45 d0 01          	add    DWORD PTR [rbp-0x30],0x1
    576e:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5772:	8b 80 4c 03 00 00    	mov    eax,DWORD PTR [rax+0x34c]
    5778:	39 45 d0             	cmp    DWORD PTR [rbp-0x30],eax
    577b:	7c af                	jl     572c <str_match_parser+0x14b>
    577d:	eb 5a                	jmp    57d9 <str_match_parser+0x1f8>
    577f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5783:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    5786:	89 45 cc             	mov    DWORD PTR [rbp-0x34],eax
    5789:	eb 42                	jmp    57cd <str_match_parser+0x1ec>
    578b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    578f:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    5792:	8b 45 cc             	mov    eax,DWORD PTR [rbp-0x34]
    5795:	48 98                	cdqe   
    5797:	48 01 d0             	add    rax,rdx
    579a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    579d:	0f b6 d0             	movzx  edx,al
    57a0:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    57a3:	8d 48 01             	lea    ecx,[rax+0x1]
    57a6:	89 4d d4             	mov    DWORD PTR [rbp-0x2c],ecx
    57a9:	01 c0                	add    eax,eax
    57ab:	48 63 c8             	movsxd rcx,eax
    57ae:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    57b2:	48 01 c8             	add    rax,rcx
    57b5:	48 8d 35 51 73 00 00 	lea    rsi,[rip+0x7351]        # cb0d <_IO_stdin_used+0xb0d>
    57bc:	48 89 c7             	mov    rdi,rax
    57bf:	b8 00 00 00 00       	mov    eax,0x0
    57c4:	e8 57 ce ff ff       	call   2620 <sprintf@plt>
    57c9:	83 45 cc 01          	add    DWORD PTR [rbp-0x34],0x1
    57cd:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    57d1:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    57d4:	39 45 cc             	cmp    DWORD PTR [rbp-0x34],eax
    57d7:	7c b2                	jl     578b <str_match_parser+0x1aa>
    57d9:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    57dd:	48 8d 50 40          	lea    rdx,[rax+0x40]
    57e1:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    57e5:	48 89 d6             	mov    rsi,rdx
    57e8:	48 89 c7             	mov    rdi,rax
    57eb:	e8 80 ce ff ff       	call   2670 <strstr@plt>
    57f0:	48 85 c0             	test   rax,rax
    57f3:	74 07                	je     57fc <str_match_parser+0x21b>
    57f5:	b8 01 00 00 00       	mov    eax,0x1
    57fa:	eb 05                	jmp    5801 <str_match_parser+0x220>
    57fc:	b8 00 00 00 00       	mov    eax,0x0
    5801:	48 89 dc             	mov    rsp,rbx
    5804:	48 8b 5d e8          	mov    rbx,QWORD PTR [rbp-0x18]
    5808:	64 48 2b 1c 25 28 00 	sub    rbx,QWORD PTR fs:0x28
    580f:	00 00 
    5811:	74 05                	je     5818 <str_match_parser+0x237>
    5813:	e8 28 cf ff ff       	call   2740 <__stack_chk_fail@plt>
    5818:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    581c:	c9                   	leave  
    581d:	c3                   	ret    

000000000000581e <is_blocked_ipv4>:
    581e:	f3 0f 1e fa          	endbr64 
    5822:	55                   	push   rbp
    5823:	48 89 e5             	mov    rbp,rsp
    5826:	48 83 ec 20          	sub    rsp,0x20
    582a:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    582e:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    5835:	eb 3b                	jmp    5872 <is_blocked_ipv4+0x54>
    5837:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    583a:	48 63 d0             	movsxd rdx,eax
    583d:	48 89 d0             	mov    rax,rdx
    5840:	48 c1 e0 03          	shl    rax,0x3
    5844:	48 01 d0             	add    rax,rdx
    5847:	48 01 c0             	add    rax,rax
    584a:	48 8d 15 8f da 0e 00 	lea    rdx,[rip+0xeda8f]        # f32e0 <blocked_ipv4_addrs>
    5851:	48 01 c2             	add    rdx,rax
    5854:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5858:	48 89 d6             	mov    rsi,rdx
    585b:	48 89 c7             	mov    rdi,rax
    585e:	e8 ed ce ff ff       	call   2750 <strcmp@plt>
    5863:	85 c0                	test   eax,eax
    5865:	75 07                	jne    586e <is_blocked_ipv4+0x50>
    5867:	b8 01 00 00 00       	mov    eax,0x1
    586c:	eb 14                	jmp    5882 <is_blocked_ipv4+0x64>
    586e:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    5872:	8b 05 98 b7 00 00    	mov    eax,DWORD PTR [rip+0xb798]        # 11010 <blk_ipv4_len>
    5878:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    587b:	7e ba                	jle    5837 <is_blocked_ipv4+0x19>
    587d:	b8 00 00 00 00       	mov    eax,0x0
    5882:	c9                   	leave  
    5883:	c3                   	ret    

0000000000005884 <none>:
    5884:	f3 0f 1e fa          	endbr64 
    5888:	55                   	push   rbp
    5889:	48 89 e5             	mov    rbp,rsp
    588c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5890:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    5894:	b8 01 00 00 00       	mov    eax,0x1
    5899:	5d                   	pop    rbp
    589a:	c3                   	ret    

000000000000589b <pcre_match>:
    589b:	f3 0f 1e fa          	endbr64 
    589f:	55                   	push   rbp
    58a0:	48 89 e5             	mov    rbp,rsp
    58a3:	48 83 ec 10          	sub    rsp,0x10
    58a7:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    58ab:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    58af:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    58b3:	48 8b 00             	mov    rax,QWORD PTR [rax]
    58b6:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    58ba:	48 8d ba d0 01 00 00 	lea    rdi,[rdx+0x1d0]
    58c1:	41 b8 00 00 00 00    	mov    r8d,0x0
    58c7:	b9 00 00 00 00       	mov    ecx,0x0
    58cc:	ba 00 00 00 00       	mov    edx,0x0
    58d1:	48 89 c6             	mov    rsi,rax
    58d4:	e8 a7 cc ff ff       	call   2580 <regexec@plt>
    58d9:	83 f8 01             	cmp    eax,0x1
    58dc:	75 07                	jne    58e5 <pcre_match+0x4a>
    58de:	b8 00 00 00 00       	mov    eax,0x0
    58e3:	eb 05                	jmp    58ea <pcre_match+0x4f>
    58e5:	b8 01 00 00 00       	mov    eax,0x1
    58ea:	c9                   	leave  
    58eb:	c3                   	ret    

00000000000058ec <rule_library_parser>:
    58ec:	f3 0f 1e fa          	endbr64 
    58f0:	55                   	push   rbp
    58f1:	48 89 e5             	mov    rbp,rsp
    58f4:	53                   	push   rbx
    58f5:	48 83 ec 48          	sub    rsp,0x48
    58f9:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    58fd:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    5904:	00 00 
    5906:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    590a:	31 c0                	xor    eax,eax
    590c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5910:	48 8d 35 01 72 00 00 	lea    rsi,[rip+0x7201]        # cb18 <_IO_stdin_used+0xb18>
    5917:	48 89 c7             	mov    rdi,rax
    591a:	e8 51 cc ff ff       	call   2570 <fopen@plt>
    591f:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    5923:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    5928:	75 22                	jne    594c <rule_library_parser+0x60>
    592a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    592e:	48 89 c6             	mov    rsi,rax
    5931:	48 8d 3d e8 71 00 00 	lea    rdi,[rip+0x71e8]        # cb20 <_IO_stdin_used+0xb20>
    5938:	b8 00 00 00 00       	mov    eax,0x0
    593d:	e8 3e cb ff ff       	call   2480 <printf@plt>
    5942:	bf 01 00 00 00       	mov    edi,0x1
    5947:	e8 b4 cb ff ff       	call   2500 <exit@plt>
    594c:	48 c7 45 c8 00 00 00 	mov    QWORD PTR [rbp-0x38],0x0
    5953:	00 
    5954:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    595b:	00 
    595c:	e9 70 05 00 00       	jmp    5ed1 <rule_library_parser+0x5e5>
    5961:	48 8b 5d d0          	mov    rbx,QWORD PTR [rbp-0x30]
    5965:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5969:	48 8d 35 d6 71 00 00 	lea    rsi,[rip+0x71d6]        # cb46 <_IO_stdin_used+0xb46>
    5970:	48 89 c7             	mov    rdi,rax
    5973:	e8 58 ce ff ff       	call   27d0 <strcspn@plt>
    5978:	48 01 d8             	add    rax,rbx
    597b:	c6 00 00             	mov    BYTE PTR [rax],0x0
    597e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5982:	48 89 c7             	mov    rdi,rax
    5985:	e8 b9 05 00 00       	call   5f43 <is_comment>
    598a:	84 c0                	test   al,al
    598c:	74 05                	je     5993 <rule_library_parser+0xa7>
    598e:	e9 3e 05 00 00       	jmp    5ed1 <rule_library_parser+0x5e5>
    5993:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5997:	ba 1a 00 00 00       	mov    edx,0x1a
    599c:	48 8d 35 a5 71 00 00 	lea    rsi,[rip+0x71a5]        # cb48 <_IO_stdin_used+0xb48>
    59a3:	48 89 c7             	mov    rdi,rax
    59a6:	e8 a5 cb ff ff       	call   2550 <strncmp@plt>
    59ab:	85 c0                	test   eax,eax
    59ad:	75 39                	jne    59e8 <rule_library_parser+0xfc>
    59af:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    59b3:	48 83 c0 1a          	add    rax,0x1a
    59b7:	48 8d 35 a5 71 00 00 	lea    rsi,[rip+0x71a5]        # cb63 <_IO_stdin_used+0xb63>
    59be:	48 89 c7             	mov    rdi,rax
    59c1:	e8 8a cd ff ff       	call   2750 <strcmp@plt>
    59c6:	85 c0                	test   eax,eax
    59c8:	75 0f                	jne    59d9 <rule_library_parser+0xed>
    59ca:	c7 05 b0 b6 00 00 01 	mov    DWORD PTR [rip+0xb6b0],0x1        # 11084 <strict_icmp_timestamp_req>
    59d1:	00 00 00 
    59d4:	e9 e2 04 00 00       	jmp    5ebb <rule_library_parser+0x5cf>
    59d9:	c7 05 a1 b6 00 00 00 	mov    DWORD PTR [rip+0xb6a1],0x0        # 11084 <strict_icmp_timestamp_req>
    59e0:	00 00 00 
    59e3:	e9 d3 04 00 00       	jmp    5ebb <rule_library_parser+0x5cf>
    59e8:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    59ec:	ba 1d 00 00 00       	mov    edx,0x1d
    59f1:	48 8d 35 6f 71 00 00 	lea    rsi,[rip+0x716f]        # cb67 <_IO_stdin_used+0xb67>
    59f8:	48 89 c7             	mov    rdi,rax
    59fb:	e8 50 cb ff ff       	call   2550 <strncmp@plt>
    5a00:	85 c0                	test   eax,eax
    5a02:	75 39                	jne    5a3d <rule_library_parser+0x151>
    5a04:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a08:	48 83 c0 1d          	add    rax,0x1d
    5a0c:	48 8d 35 50 71 00 00 	lea    rsi,[rip+0x7150]        # cb63 <_IO_stdin_used+0xb63>
    5a13:	48 89 c7             	mov    rdi,rax
    5a16:	e8 35 cd ff ff       	call   2750 <strcmp@plt>
    5a1b:	85 c0                	test   eax,eax
    5a1d:	75 0f                	jne    5a2e <rule_library_parser+0x142>
    5a1f:	c7 05 5f b6 00 00 01 	mov    DWORD PTR [rip+0xb65f],0x1        # 11088 <strict_nmap_host_alive_check>
    5a26:	00 00 00 
    5a29:	e9 8d 04 00 00       	jmp    5ebb <rule_library_parser+0x5cf>
    5a2e:	c7 05 50 b6 00 00 00 	mov    DWORD PTR [rip+0xb650],0x0        # 11088 <strict_nmap_host_alive_check>
    5a35:	00 00 00 
    5a38:	e9 7e 04 00 00       	jmp    5ebb <rule_library_parser+0x5cf>
    5a3d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a41:	ba 17 00 00 00       	mov    edx,0x17
    5a46:	48 8d 35 38 71 00 00 	lea    rsi,[rip+0x7138]        # cb85 <_IO_stdin_used+0xb85>
    5a4d:	48 89 c7             	mov    rdi,rax
    5a50:	e8 fb ca ff ff       	call   2550 <strncmp@plt>
    5a55:	85 c0                	test   eax,eax
    5a57:	75 43                	jne    5a9c <rule_library_parser+0x1b0>
    5a59:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a5d:	48 89 c7             	mov    rdi,rax
    5a60:	e8 9b cb ff ff       	call   2600 <strlen@plt>
    5a65:	48 83 f8 17          	cmp    rax,0x17
    5a69:	77 16                	ja     5a81 <rule_library_parser+0x195>
    5a6b:	48 8d 3d 2b 71 00 00 	lea    rdi,[rip+0x712b]        # cb9d <_IO_stdin_used+0xb9d>
    5a72:	e8 69 ca ff ff       	call   24e0 <puts@plt>
    5a77:	bf 01 00 00 00       	mov    edi,0x1
    5a7c:	e8 7f ca ff ff       	call   2500 <exit@plt>
    5a81:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a85:	48 83 c0 17          	add    rax,0x17
    5a89:	48 89 c7             	mov    rdi,rax
    5a8c:	e8 2f cc ff ff       	call   26c0 <atoi@plt>
    5a91:	89 05 c9 44 10 00    	mov    DWORD PTR [rip+0x1044c9],eax        # 109f60 <clean_delay_pkts>
    5a97:	e9 1f 04 00 00       	jmp    5ebb <rule_library_parser+0x5cf>
    5a9c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5aa0:	ba 18 00 00 00       	mov    edx,0x18
    5aa5:	48 8d 35 0b 71 00 00 	lea    rsi,[rip+0x710b]        # cbb7 <_IO_stdin_used+0xbb7>
    5aac:	48 89 c7             	mov    rdi,rax
    5aaf:	e8 9c ca ff ff       	call   2550 <strncmp@plt>
    5ab4:	85 c0                	test   eax,eax
    5ab6:	75 46                	jne    5afe <rule_library_parser+0x212>
    5ab8:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5abc:	48 89 c7             	mov    rdi,rax
    5abf:	e8 3c cb ff ff       	call   2600 <strlen@plt>
    5ac4:	48 83 f8 18          	cmp    rax,0x18
    5ac8:	75 16                	jne    5ae0 <rule_library_parser+0x1f4>
    5aca:	48 8d 3d cc 70 00 00 	lea    rdi,[rip+0x70cc]        # cb9d <_IO_stdin_used+0xb9d>
    5ad1:	e8 0a ca ff ff       	call   24e0 <puts@plt>
    5ad6:	bf 01 00 00 00       	mov    edi,0x1
    5adb:	e8 20 ca ff ff       	call   2500 <exit@plt>
    5ae0:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ae4:	48 83 c0 18          	add    rax,0x18
    5ae8:	48 89 c7             	mov    rdi,rax
    5aeb:	e8 d0 cb ff ff       	call   26c0 <atoi@plt>
    5af0:	48 98                	cdqe   
    5af2:	48 89 05 bf b7 00 00 	mov    QWORD PTR [rip+0xb7bf],rax        # 112b8 <clean_delay>
    5af9:	e9 bd 03 00 00       	jmp    5ebb <rule_library_parser+0x5cf>
    5afe:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b02:	ba 0b 00 00 00       	mov    edx,0xb
    5b07:	48 8d 35 c2 70 00 00 	lea    rsi,[rip+0x70c2]        # cbd0 <_IO_stdin_used+0xbd0>
    5b0e:	48 89 c7             	mov    rdi,rax
    5b11:	e8 3a ca ff ff       	call   2550 <strncmp@plt>
    5b16:	85 c0                	test   eax,eax
    5b18:	75 33                	jne    5b4d <rule_library_parser+0x261>
    5b1a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b1e:	48 83 c0 0b          	add    rax,0xb
    5b22:	48 8d 35 3a 70 00 00 	lea    rsi,[rip+0x703a]        # cb63 <_IO_stdin_used+0xb63>
    5b29:	48 89 c7             	mov    rdi,rax
    5b2c:	e8 1f cc ff ff       	call   2750 <strcmp@plt>
    5b31:	85 c0                	test   eax,eax
    5b33:	75 0c                	jne    5b41 <rule_library_parser+0x255>
    5b35:	c6 05 e5 43 10 00 01 	mov    BYTE PTR [rip+0x1043e5],0x1        # 109f21 <use_sqlite>
    5b3c:	e9 7a 03 00 00       	jmp    5ebb <rule_library_parser+0x5cf>
    5b41:	c6 05 d9 43 10 00 00 	mov    BYTE PTR [rip+0x1043d9],0x0        # 109f21 <use_sqlite>
    5b48:	e9 6e 03 00 00       	jmp    5ebb <rule_library_parser+0x5cf>
    5b4d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b51:	ba 15 00 00 00       	mov    edx,0x15
    5b56:	48 8d 35 7f 70 00 00 	lea    rsi,[rip+0x707f]        # cbdc <_IO_stdin_used+0xbdc>
    5b5d:	48 89 c7             	mov    rdi,rax
    5b60:	e8 eb c9 ff ff       	call   2550 <strncmp@plt>
    5b65:	85 c0                	test   eax,eax
    5b67:	75 34                	jne    5b9d <rule_library_parser+0x2b1>
    5b69:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b6d:	48 83 c0 15          	add    rax,0x15
    5b71:	48 89 c6             	mov    rsi,rax
    5b74:	48 8d 3d c5 43 10 00 	lea    rdi,[rip+0x1043c5]        # 109f40 <sqlite_db_path>
    5b7b:	e8 f0 cb ff ff       	call   2770 <strcpy@plt>
    5b80:	48 8d 35 b9 43 10 00 	lea    rsi,[rip+0x1043b9]        # 109f40 <sqlite_db_path>
    5b87:	48 8d 3d 64 70 00 00 	lea    rdi,[rip+0x7064]        # cbf2 <_IO_stdin_used+0xbf2>
    5b8e:	b8 00 00 00 00       	mov    eax,0x0
    5b93:	e8 5a 29 00 00       	call   84f2 <livedebug>
    5b98:	e9 1e 03 00 00       	jmp    5ebb <rule_library_parser+0x5cf>
    5b9d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ba1:	ba 0b 00 00 00       	mov    edx,0xb
    5ba6:	48 8d 35 5e 70 00 00 	lea    rsi,[rip+0x705e]        # cc0b <_IO_stdin_used+0xc0b>
    5bad:	48 89 c7             	mov    rdi,rax
    5bb0:	e8 9b c9 ff ff       	call   2550 <strncmp@plt>
    5bb5:	85 c0                	test   eax,eax
    5bb7:	75 34                	jne    5bed <rule_library_parser+0x301>
    5bb9:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5bbd:	48 83 c0 0b          	add    rax,0xb
    5bc1:	48 89 c6             	mov    rsi,rax
    5bc4:	48 8d 3d a5 43 10 00 	lea    rdi,[rip+0x1043a5]        # 109f70 <input_adapter>
    5bcb:	e8 a0 cb ff ff       	call   2770 <strcpy@plt>
    5bd0:	48 8d 35 99 43 10 00 	lea    rsi,[rip+0x104399]        # 109f70 <input_adapter>
    5bd7:	48 8d 3d 3a 70 00 00 	lea    rdi,[rip+0x703a]        # cc18 <_IO_stdin_used+0xc18>
    5bde:	b8 00 00 00 00       	mov    eax,0x0
    5be3:	e8 0a 29 00 00       	call   84f2 <livedebug>
    5be8:	e9 ce 02 00 00       	jmp    5ebb <rule_library_parser+0x5cf>
    5bed:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5bf1:	ba 0c 00 00 00       	mov    edx,0xc
    5bf6:	48 8d 35 4e 70 00 00 	lea    rsi,[rip+0x704e]        # cc4b <_IO_stdin_used+0xc4b>
    5bfd:	48 89 c7             	mov    rdi,rax
    5c00:	e8 4b c9 ff ff       	call   2550 <strncmp@plt>
    5c05:	85 c0                	test   eax,eax
    5c07:	75 34                	jne    5c3d <rule_library_parser+0x351>
    5c09:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c0d:	48 83 c0 0c          	add    rax,0xc
    5c11:	48 89 c6             	mov    rsi,rax
    5c14:	48 8d 3d 65 43 10 00 	lea    rdi,[rip+0x104365]        # 109f80 <output_adapter>
    5c1b:	e8 50 cb ff ff       	call   2770 <strcpy@plt>
    5c20:	48 8d 35 59 43 10 00 	lea    rsi,[rip+0x104359]        # 109f80 <output_adapter>
    5c27:	48 8d 3d 2a 70 00 00 	lea    rdi,[rip+0x702a]        # cc58 <_IO_stdin_used+0xc58>
    5c2e:	b8 00 00 00 00       	mov    eax,0x0
    5c33:	e8 ba 28 00 00       	call   84f2 <livedebug>
    5c38:	e9 7e 02 00 00       	jmp    5ebb <rule_library_parser+0x5cf>
    5c3d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c41:	ba 05 00 00 00       	mov    edx,0x5
    5c46:	48 8d 35 3f 70 00 00 	lea    rsi,[rip+0x703f]        # cc8c <_IO_stdin_used+0xc8c>
    5c4d:	48 89 c7             	mov    rdi,rax
    5c50:	e8 fb c8 ff ff       	call   2550 <strncmp@plt>
    5c55:	85 c0                	test   eax,eax
    5c57:	0f 85 81 00 00 00    	jne    5cde <rule_library_parser+0x3f2>
    5c5d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c61:	48 83 c0 05          	add    rax,0x5
    5c65:	48 89 c6             	mov    rsi,rax
    5c68:	48 8d 3d 23 70 00 00 	lea    rdi,[rip+0x7023]        # cc92 <_IO_stdin_used+0xc92>
    5c6f:	b8 00 00 00 00       	mov    eax,0x0
    5c74:	e8 79 28 00 00       	call   84f2 <livedebug>
    5c79:	48 8d 3d 1b 70 00 00 	lea    rdi,[rip+0x701b]        # cc9b <_IO_stdin_used+0xc9b>
    5c80:	b8 00 00 00 00       	mov    eax,0x0
    5c85:	e8 f6 c7 ff ff       	call   2480 <printf@plt>
    5c8a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c8e:	48 83 c0 05          	add    rax,0x5
    5c92:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5c95:	0f b6 15 0b 70 00 00 	movzx  edx,BYTE PTR [rip+0x700b]        # cca7 <_IO_stdin_used+0xca7>
    5c9c:	0f b6 c0             	movzx  eax,al
    5c9f:	0f b6 d2             	movzx  edx,dl
    5ca2:	29 d0                	sub    eax,edx
    5ca4:	85 c0                	test   eax,eax
    5ca6:	75 1b                	jne    5cc3 <rule_library_parser+0x3d7>
    5ca8:	c7 05 72 b3 00 00 02 	mov    DWORD PTR [rip+0xb372],0x2        # 11024 <VIGIL_MODE>
    5caf:	00 00 00 
    5cb2:	48 8d 3d f0 6f 00 00 	lea    rdi,[rip+0x6ff0]        # cca9 <_IO_stdin_used+0xca9>
    5cb9:	e8 22 c8 ff ff       	call   24e0 <puts@plt>
    5cbe:	e9 f8 01 00 00       	jmp    5ebb <rule_library_parser+0x5cf>
    5cc3:	c7 05 57 b3 00 00 01 	mov    DWORD PTR [rip+0xb357],0x1        # 11024 <VIGIL_MODE>
    5cca:	00 00 00 
    5ccd:	48 8d 3d ec 6f 00 00 	lea    rdi,[rip+0x6fec]        # ccc0 <_IO_stdin_used+0xcc0>
    5cd4:	e8 07 c8 ff ff       	call   24e0 <puts@plt>
    5cd9:	e9 dd 01 00 00       	jmp    5ebb <rule_library_parser+0x5cf>
    5cde:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ce2:	ba 08 00 00 00       	mov    edx,0x8
    5ce7:	48 8d 35 e9 6f 00 00 	lea    rsi,[rip+0x6fe9]        # ccd7 <_IO_stdin_used+0xcd7>
    5cee:	48 89 c7             	mov    rdi,rax
    5cf1:	e8 5a c8 ff ff       	call   2550 <strncmp@plt>
    5cf6:	85 c0                	test   eax,eax
    5cf8:	75 34                	jne    5d2e <rule_library_parser+0x442>
    5cfa:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5cfe:	48 83 c0 08          	add    rax,0x8
    5d02:	48 89 c6             	mov    rsi,rax
    5d05:	48 8d 3d 84 42 10 00 	lea    rdi,[rip+0x104284]        # 109f90 <local_ip>
    5d0c:	e8 5f ca ff ff       	call   2770 <strcpy@plt>
    5d11:	48 8d 35 78 42 10 00 	lea    rsi,[rip+0x104278]        # 109f90 <local_ip>
    5d18:	48 8d 3d c1 6f 00 00 	lea    rdi,[rip+0x6fc1]        # cce0 <_IO_stdin_used+0xce0>
    5d1f:	b8 00 00 00 00       	mov    eax,0x0
    5d24:	e8 c9 27 00 00       	call   84f2 <livedebug>
    5d29:	e9 8d 01 00 00       	jmp    5ebb <rule_library_parser+0x5cf>
    5d2e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d32:	ba 06 00 00 00       	mov    edx,0x6
    5d37:	48 8d 35 bd 6f 00 00 	lea    rsi,[rip+0x6fbd]        # ccfb <_IO_stdin_used+0xcfb>
    5d3e:	48 89 c7             	mov    rdi,rax
    5d41:	e8 0a c8 ff ff       	call   2550 <strncmp@plt>
    5d46:	85 c0                	test   eax,eax
    5d48:	75 1c                	jne    5d66 <rule_library_parser+0x47a>
    5d4a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d4e:	48 83 c0 06          	add    rax,0x6
    5d52:	48 89 c6             	mov    rsi,rax
    5d55:	48 8d 3d 54 42 10 00 	lea    rdi,[rip+0x104254]        # 109fb0 <def_gw>
    5d5c:	e8 0f ca ff ff       	call   2770 <strcpy@plt>
    5d61:	e9 55 01 00 00       	jmp    5ebb <rule_library_parser+0x5cf>
    5d66:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d6a:	ba 08 00 00 00       	mov    edx,0x8
    5d6f:	48 8d 35 8c 6f 00 00 	lea    rsi,[rip+0x6f8c]        # cd02 <_IO_stdin_used+0xd02>
    5d76:	48 89 c7             	mov    rdi,rax
    5d79:	e8 d2 c7 ff ff       	call   2550 <strncmp@plt>
    5d7e:	85 c0                	test   eax,eax
    5d80:	75 3f                	jne    5dc1 <rule_library_parser+0x4d5>
    5d82:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d86:	48 83 c0 08          	add    rax,0x8
    5d8a:	48 8d 35 d2 6d 00 00 	lea    rsi,[rip+0x6dd2]        # cb63 <_IO_stdin_used+0xb63>
    5d91:	48 89 c7             	mov    rdi,rax
    5d94:	e8 b7 c9 ff ff       	call   2750 <strcmp@plt>
    5d99:	85 c0                	test   eax,eax
    5d9b:	75 18                	jne    5db5 <rule_library_parser+0x4c9>
    5d9d:	c6 05 1e 42 10 00 01 	mov    BYTE PTR [rip+0x10421e],0x1        # 109fc2 <use_spi>
    5da4:	48 8d 3d 60 6f 00 00 	lea    rdi,[rip+0x6f60]        # cd0b <_IO_stdin_used+0xd0b>
    5dab:	e8 30 c7 ff ff       	call   24e0 <puts@plt>
    5db0:	e9 06 01 00 00       	jmp    5ebb <rule_library_parser+0x5cf>
    5db5:	c6 05 06 42 10 00 00 	mov    BYTE PTR [rip+0x104206],0x0        # 109fc2 <use_spi>
    5dbc:	e9 fa 00 00 00       	jmp    5ebb <rule_library_parser+0x5cf>
    5dc1:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5dc5:	ba 09 00 00 00       	mov    edx,0x9
    5dca:	48 8d 35 53 6f 00 00 	lea    rsi,[rip+0x6f53]        # cd24 <_IO_stdin_used+0xd24>
    5dd1:	48 89 c7             	mov    rdi,rax
    5dd4:	e8 77 c7 ff ff       	call   2550 <strncmp@plt>
    5dd9:	85 c0                	test   eax,eax
    5ddb:	75 27                	jne    5e04 <rule_library_parser+0x518>
    5ddd:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5de1:	48 89 c7             	mov    rdi,rax
    5de4:	e8 83 01 00 00       	call   5f6c <rstrip>
    5de9:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ded:	48 83 c0 09          	add    rax,0x9
    5df1:	48 89 c7             	mov    rdi,rax
    5df4:	e8 65 4c 00 00       	call   aa5e <homenet_toi>
    5df9:	89 05 c5 41 10 00    	mov    DWORD PTR [rip+0x1041c5],eax        # 109fc4 <homenet>
    5dff:	e9 b7 00 00 00       	jmp    5ebb <rule_library_parser+0x5cf>
    5e04:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e08:	ba 0e 00 00 00       	mov    edx,0xe
    5e0d:	48 8d 35 1a 6f 00 00 	lea    rsi,[rip+0x6f1a]        # cd2e <_IO_stdin_used+0xd2e>
    5e14:	48 89 c7             	mov    rdi,rax
    5e17:	e8 34 c7 ff ff       	call   2550 <strncmp@plt>
    5e1c:	85 c0                	test   eax,eax
    5e1e:	75 24                	jne    5e44 <rule_library_parser+0x558>
    5e20:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e24:	48 89 c7             	mov    rdi,rax
    5e27:	e8 40 01 00 00       	call   5f6c <rstrip>
    5e2c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e30:	48 83 c0 0e          	add    rax,0xe
    5e34:	48 89 c7             	mov    rdi,rax
    5e37:	e8 22 4c 00 00       	call   aa5e <homenet_toi>
    5e3c:	89 05 86 41 10 00    	mov    DWORD PTR [rip+0x104186],eax        # 109fc8 <homenetmask>
    5e42:	eb 77                	jmp    5ebb <rule_library_parser+0x5cf>
    5e44:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e48:	ba 09 00 00 00       	mov    edx,0x9
    5e4d:	48 8d 35 e9 6e 00 00 	lea    rsi,[rip+0x6ee9]        # cd3d <_IO_stdin_used+0xd3d>
    5e54:	48 89 c7             	mov    rdi,rax
    5e57:	e8 f4 c6 ff ff       	call   2550 <strncmp@plt>
    5e5c:	85 c0                	test   eax,eax
    5e5e:	75 3f                	jne    5e9f <rule_library_parser+0x5b3>
    5e60:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e64:	48 89 c7             	mov    rdi,rax
    5e67:	e8 00 01 00 00       	call   5f6c <rstrip>
    5e6c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e70:	48 83 c0 09          	add    rax,0x9
    5e74:	48 8d 35 cc 6e 00 00 	lea    rsi,[rip+0x6ecc]        # cd47 <_IO_stdin_used+0xd47>
    5e7b:	48 89 c7             	mov    rdi,rax
    5e7e:	e8 cd c8 ff ff       	call   2750 <strcmp@plt>
    5e83:	85 c0                	test   eax,eax
    5e85:	75 0c                	jne    5e93 <rule_library_parser+0x5a7>
    5e87:	c7 05 d7 40 10 00 04 	mov    DWORD PTR [rip+0x1040d7],0x4        # 109f68 <vigil_location>
    5e8e:	00 00 00 
    5e91:	eb 28                	jmp    5ebb <rule_library_parser+0x5cf>
    5e93:	c7 05 cb 40 10 00 03 	mov    DWORD PTR [rip+0x1040cb],0x3        # 109f68 <vigil_location>
    5e9a:	00 00 00 
    5e9d:	eb 1c                	jmp    5ebb <rule_library_parser+0x5cf>
    5e9f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ea3:	48 89 c7             	mov    rdi,rax
    5ea6:	e8 7e 00 00 00       	call   5f29 <is_rule>
    5eab:	84 c0                	test   al,al
    5ead:	74 0c                	je     5ebb <rule_library_parser+0x5cf>
    5eaf:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5eb3:	48 89 c7             	mov    rdi,rax
    5eb6:	e8 18 01 00 00       	call   5fd3 <rule_parser>
    5ebb:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ebf:	ba 08 00 00 00       	mov    edx,0x8
    5ec4:	be 00 00 00 00       	mov    esi,0x0
    5ec9:	48 89 c7             	mov    rdi,rax
    5ecc:	e8 bf c5 ff ff       	call   2490 <memset@plt>
    5ed1:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    5ed5:	48 8d 4d c8          	lea    rcx,[rbp-0x38]
    5ed9:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    5edd:	48 89 ce             	mov    rsi,rcx
    5ee0:	48 89 c7             	mov    rdi,rax
    5ee3:	e8 78 c8 ff ff       	call   2760 <getline@plt>
    5ee8:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    5eec:	48 83 7d e0 ff       	cmp    QWORD PTR [rbp-0x20],0xffffffffffffffff
    5ef1:	0f 85 6a fa ff ff    	jne    5961 <rule_library_parser+0x75>
    5ef7:	8b 05 27 b1 00 00    	mov    eax,DWORD PTR [rip+0xb127]        # 11024 <VIGIL_MODE>
    5efd:	3d ff ff 00 00       	cmp    eax,0xffff
    5f02:	75 0a                	jne    5f0e <rule_library_parser+0x622>
    5f04:	c7 05 16 b1 00 00 01 	mov    DWORD PTR [rip+0xb116],0x1        # 11024 <VIGIL_MODE>
    5f0b:	00 00 00 
    5f0e:	90                   	nop
    5f0f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5f13:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    5f1a:	00 00 
    5f1c:	74 05                	je     5f23 <rule_library_parser+0x637>
    5f1e:	e8 1d c8 ff ff       	call   2740 <__stack_chk_fail@plt>
    5f23:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    5f27:	c9                   	leave  
    5f28:	c3                   	ret    

0000000000005f29 <is_rule>:
    5f29:	f3 0f 1e fa          	endbr64 
    5f2d:	55                   	push   rbp
    5f2e:	48 89 e5             	mov    rbp,rsp
    5f31:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5f35:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5f39:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5f3c:	3c 24                	cmp    al,0x24
    5f3e:	0f 94 c0             	sete   al
    5f41:	5d                   	pop    rbp
    5f42:	c3                   	ret    

0000000000005f43 <is_comment>:
    5f43:	f3 0f 1e fa          	endbr64 
    5f47:	55                   	push   rbp
    5f48:	48 89 e5             	mov    rbp,rsp
    5f4b:	48 83 ec 10          	sub    rsp,0x10
    5f4f:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5f53:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5f57:	be 23 00 00 00       	mov    esi,0x23
    5f5c:	48 89 c7             	mov    rdi,rax
    5f5f:	e8 8c c7 ff ff       	call   26f0 <strchr@plt>
    5f64:	48 85 c0             	test   rax,rax
    5f67:	0f 95 c0             	setne  al
    5f6a:	c9                   	leave  
    5f6b:	c3                   	ret    

0000000000005f6c <rstrip>:
    5f6c:	f3 0f 1e fa          	endbr64 
    5f70:	55                   	push   rbp
    5f71:	48 89 e5             	mov    rbp,rsp
    5f74:	48 83 ec 10          	sub    rsp,0x10
    5f78:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5f7c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5f80:	48 8d 35 bf 6b 00 00 	lea    rsi,[rip+0x6bbf]        # cb46 <_IO_stdin_used+0xb46>
    5f87:	48 89 c7             	mov    rdi,rax
    5f8a:	e8 41 c8 ff ff       	call   27d0 <strcspn@plt>
    5f8f:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    5f93:	48 01 d0             	add    rax,rdx
    5f96:	c6 00 00             	mov    BYTE PTR [rax],0x0
    5f99:	90                   	nop
    5f9a:	c9                   	leave  
    5f9b:	c3                   	ret    

0000000000005f9c <syntax_error>:
    5f9c:	f3 0f 1e fa          	endbr64 
    5fa0:	55                   	push   rbp
    5fa1:	48 89 e5             	mov    rbp,rsp
    5fa4:	48 83 ec 10          	sub    rsp,0x10
    5fa8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5fac:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
    5faf:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    5fb3:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    5fb6:	89 c6                	mov    esi,eax
    5fb8:	48 8d 3d 91 6d 00 00 	lea    rdi,[rip+0x6d91]        # cd50 <_IO_stdin_used+0xd50>
    5fbf:	b8 00 00 00 00       	mov    eax,0x0
    5fc4:	e8 b7 c4 ff ff       	call   2480 <printf@plt>
    5fc9:	bf 01 00 00 00       	mov    edi,0x1
    5fce:	e8 2d c5 ff ff       	call   2500 <exit@plt>

0000000000005fd3 <rule_parser>:
    5fd3:	f3 0f 1e fa          	endbr64 
    5fd7:	55                   	push   rbp
    5fd8:	48 89 e5             	mov    rbp,rsp
    5fdb:	48 83 ec 40          	sub    rsp,0x40
    5fdf:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    5fe3:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    5fea:	00 00 
    5fec:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    5ff0:	31 c0                	xor    eax,eax
    5ff2:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    5ff6:	48 83 c0 01          	add    rax,0x1
    5ffa:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    5ffe:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    6002:	48 8d 35 0f 6b 00 00 	lea    rsi,[rip+0x6b0f]        # cb18 <_IO_stdin_used+0xb18>
    6009:	48 89 c7             	mov    rdi,rax
    600c:	e8 5f c5 ff ff       	call   2570 <fopen@plt>
    6011:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    6015:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
    601a:	75 22                	jne    603e <rule_parser+0x6b>
    601c:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    6020:	48 89 c6             	mov    rsi,rax
    6023:	48 8d 3d 46 6d 00 00 	lea    rdi,[rip+0x6d46]        # cd70 <_IO_stdin_used+0xd70>
    602a:	b8 00 00 00 00       	mov    eax,0x0
    602f:	e8 4c c4 ff ff       	call   2480 <printf@plt>
    6034:	bf 01 00 00 00       	mov    edi,0x1
    6039:	e8 c2 c4 ff ff       	call   2500 <exit@plt>
    603e:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    6042:	48 89 c6             	mov    rsi,rax
    6045:	48 8d 3d 57 6d 00 00 	lea    rdi,[rip+0x6d57]        # cda3 <_IO_stdin_used+0xda3>
    604c:	b8 00 00 00 00       	mov    eax,0x0
    6051:	e8 2a c4 ff ff       	call   2480 <printf@plt>
    6056:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    605d:	00 
    605e:	48 c7 45 d8 00 00 00 	mov    QWORD PTR [rbp-0x28],0x0
    6065:	00 
    6066:	eb 54                	jmp    60bc <rule_parser+0xe9>
    6068:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    606c:	48 89 c7             	mov    rdi,rax
    606f:	e8 cf fe ff ff       	call   5f43 <is_comment>
    6074:	84 c0                	test   al,al
    6076:	74 02                	je     607a <rule_parser+0xa7>
    6078:	eb 42                	jmp    60bc <rule_parser+0xe9>
    607a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    607e:	48 89 c7             	mov    rdi,rax
    6081:	e8 e6 fe ff ff       	call   5f6c <rstrip>
    6086:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    608a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    608d:	0f b6 c0             	movzx  eax,al
    6090:	f7 d8                	neg    eax
    6092:	85 c0                	test   eax,eax
    6094:	75 02                	jne    6098 <rule_parser+0xc5>
    6096:	eb 24                	jmp    60bc <rule_parser+0xe9>
    6098:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    609c:	48 8d 35 11 6d 00 00 	lea    rsi,[rip+0x6d11]        # cdb4 <_IO_stdin_used+0xdb4>
    60a3:	48 89 c7             	mov    rdi,rax
    60a6:	e8 c5 c5 ff ff       	call   2670 <strstr@plt>
    60ab:	48 85 c0             	test   rax,rax
    60ae:	74 0c                	je     60bc <rule_parser+0xe9>
    60b0:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    60b4:	48 89 c7             	mov    rdi,rax
    60b7:	e8 5e 35 00 00       	call   961a <line_parser>
    60bc:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    60c0:	48 8d 4d d0          	lea    rcx,[rbp-0x30]
    60c4:	48 8d 45 d8          	lea    rax,[rbp-0x28]
    60c8:	48 89 ce             	mov    rsi,rcx
    60cb:	48 89 c7             	mov    rdi,rax
    60ce:	e8 8d c6 ff ff       	call   2760 <getline@plt>
    60d3:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    60d7:	48 83 7d f0 ff       	cmp    QWORD PTR [rbp-0x10],0xffffffffffffffff
    60dc:	75 8a                	jne    6068 <rule_parser+0x95>
    60de:	0f b6 05 3b 3e 10 00 	movzx  eax,BYTE PTR [rip+0x103e3b]        # 109f20 <debug_mode>
    60e5:	84 c0                	test   al,al
    60e7:	74 18                	je     6101 <rule_parser+0x12e>
    60e9:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    60ed:	48 89 c6             	mov    rsi,rax
    60f0:	48 8d 3d c3 6c 00 00 	lea    rdi,[rip+0x6cc3]        # cdba <_IO_stdin_used+0xdba>
    60f7:	b8 00 00 00 00       	mov    eax,0x0
    60fc:	e8 7f c3 ff ff       	call   2480 <printf@plt>
    6101:	90                   	nop
    6102:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6106:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    610d:	00 00 
    610f:	74 05                	je     6116 <rule_parser+0x143>
    6111:	e8 2a c6 ff ff       	call   2740 <__stack_chk_fail@plt>
    6116:	c9                   	leave  
    6117:	c3                   	ret    

0000000000006118 <deny_conf_parser>:
    6118:	f3 0f 1e fa          	endbr64 
    611c:	55                   	push   rbp
    611d:	48 89 e5             	mov    rbp,rsp
    6120:	48 83 ec 50          	sub    rsp,0x50
    6124:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    6128:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    612f:	00 00 
    6131:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    6135:	31 c0                	xor    eax,eax
    6137:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    613b:	48 8d 35 d6 69 00 00 	lea    rsi,[rip+0x69d6]        # cb18 <_IO_stdin_used+0xb18>
    6142:	48 89 c7             	mov    rdi,rax
    6145:	e8 26 c4 ff ff       	call   2570 <fopen@plt>
    614a:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    614e:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    6153:	75 22                	jne    6177 <deny_conf_parser+0x5f>
    6155:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    6159:	48 89 c6             	mov    rsi,rax
    615c:	48 8d 3d 6d 6c 00 00 	lea    rdi,[rip+0x6c6d]        # cdd0 <_IO_stdin_used+0xdd0>
    6163:	b8 00 00 00 00       	mov    eax,0x0
    6168:	e8 13 c3 ff ff       	call   2480 <printf@plt>
    616d:	bf 01 00 00 00       	mov    edi,0x1
    6172:	e8 89 c3 ff ff       	call   2500 <exit@plt>
    6177:	48 c7 45 c8 00 00 00 	mov    QWORD PTR [rbp-0x38],0x0
    617e:	00 
    617f:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    6186:	00 
    6187:	e9 9a 00 00 00       	jmp    6226 <deny_conf_parser+0x10e>
    618c:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6190:	48 89 c7             	mov    rdi,rax
    6193:	e8 d4 fd ff ff       	call   5f6c <rstrip>
    6198:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    619c:	48 89 c7             	mov    rdi,rax
    619f:	e8 9f fd ff ff       	call   5f43 <is_comment>
    61a4:	84 c0                	test   al,al
    61a6:	74 02                	je     61aa <deny_conf_parser+0x92>
    61a8:	eb 7c                	jmp    6226 <deny_conf_parser+0x10e>
    61aa:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    61ae:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    61b1:	0f b6 c0             	movzx  eax,al
    61b4:	f7 d8                	neg    eax
    61b6:	85 c0                	test   eax,eax
    61b8:	75 02                	jne    61bc <deny_conf_parser+0xa4>
    61ba:	eb 6a                	jmp    6226 <deny_conf_parser+0x10e>
    61bc:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    61c0:	48 8d 35 3a 6c 00 00 	lea    rsi,[rip+0x6c3a]        # ce01 <_IO_stdin_used+0xe01>
    61c7:	48 89 c7             	mov    rdi,rax
    61ca:	e8 a1 c4 ff ff       	call   2670 <strstr@plt>
    61cf:	48 85 c0             	test   rax,rax
    61d2:	74 52                	je     6226 <deny_conf_parser+0x10e>
    61d4:	8b 05 36 ae 00 00    	mov    eax,DWORD PTR [rip+0xae36]        # 11010 <blk_ipv4_len>
    61da:	83 c0 01             	add    eax,0x1
    61dd:	89 05 2d ae 00 00    	mov    DWORD PTR [rip+0xae2d],eax        # 11010 <blk_ipv4_len>
    61e3:	8b 05 27 ae 00 00    	mov    eax,DWORD PTR [rip+0xae27]        # 11010 <blk_ipv4_len>
    61e9:	48 63 d0             	movsxd rdx,eax
    61ec:	48 89 d0             	mov    rax,rdx
    61ef:	48 c1 e0 03          	shl    rax,0x3
    61f3:	48 01 d0             	add    rax,rdx
    61f6:	48 01 c0             	add    rax,rax
    61f9:	48 8d 15 e0 d0 0e 00 	lea    rdx,[rip+0xed0e0]        # f32e0 <blocked_ipv4_addrs>
    6200:	48 01 d0             	add    rax,rdx
    6203:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    6207:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    620b:	48 83 c0 05          	add    rax,0x5
    620f:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    6213:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6217:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    621b:	48 89 d6             	mov    rsi,rdx
    621e:	48 89 c7             	mov    rdi,rax
    6221:	e8 4a c5 ff ff       	call   2770 <strcpy@plt>
    6226:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    622a:	48 8d 4d d0          	lea    rcx,[rbp-0x30]
    622e:	48 8d 45 c8          	lea    rax,[rbp-0x38]
    6232:	48 89 ce             	mov    rsi,rcx
    6235:	48 89 c7             	mov    rdi,rax
    6238:	e8 23 c5 ff ff       	call   2760 <getline@plt>
    623d:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    6241:	48 83 7d e0 ff       	cmp    QWORD PTR [rbp-0x20],0xffffffffffffffff
    6246:	0f 85 40 ff ff ff    	jne    618c <deny_conf_parser+0x74>
    624c:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6250:	48 85 c0             	test   rax,rax
    6253:	74 0c                	je     6261 <deny_conf_parser+0x149>
    6255:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6259:	48 89 c7             	mov    rdi,rax
    625c:	e8 8f c3 ff ff       	call   25f0 <free@plt>
    6261:	90                   	nop
    6262:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6266:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    626d:	00 00 
    626f:	74 05                	je     6276 <deny_conf_parser+0x15e>
    6271:	e8 ca c4 ff ff       	call   2740 <__stack_chk_fail@plt>
    6276:	c9                   	leave  
    6277:	c3                   	ret    

0000000000006278 <host_mon_parser>:
    6278:	f3 0f 1e fa          	endbr64 
    627c:	55                   	push   rbp
    627d:	48 89 e5             	mov    rbp,rsp
    6280:	48 83 ec 10          	sub    rsp,0x10
    6284:	48 8b 05 ad ad 00 00 	mov    rax,QWORD PTR [rip+0xadad]        # 11038 <default_host_conf>
    628b:	48 8d 35 86 68 00 00 	lea    rsi,[rip+0x6886]        # cb18 <_IO_stdin_used+0xb18>
    6292:	48 89 c7             	mov    rdi,rax
    6295:	e8 d6 c2 ff ff       	call   2570 <fopen@plt>
    629a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    629e:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    62a3:	75 25                	jne    62ca <host_mon_parser+0x52>
    62a5:	48 8b 05 8c ad 00 00 	mov    rax,QWORD PTR [rip+0xad8c]        # 11038 <default_host_conf>
    62ac:	48 89 c6             	mov    rsi,rax
    62af:	48 8d 3d 50 6b 00 00 	lea    rdi,[rip+0x6b50]        # ce06 <_IO_stdin_used+0xe06>
    62b6:	b8 00 00 00 00       	mov    eax,0x0
    62bb:	e8 c0 c1 ff ff       	call   2480 <printf@plt>
    62c0:	bf 01 00 00 00       	mov    edi,0x1
    62c5:	e8 36 c2 ff ff       	call   2500 <exit@plt>
    62ca:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    62ce:	48 89 c7             	mov    rdi,rax
    62d1:	e8 da c4 ff ff       	call   27b0 <fclose@plt>
    62d6:	90                   	nop
    62d7:	c9                   	leave  
    62d8:	c3                   	ret    

00000000000062d9 <rule_app>:
    62d9:	f3 0f 1e fa          	endbr64 
    62dd:	55                   	push   rbp
    62de:	48 89 e5             	mov    rbp,rsp
    62e1:	48 83 ec 20          	sub    rsp,0x20
    62e5:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    62e9:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    62ed:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    62f1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    62f5:	48 89 d6             	mov    rsi,rdx
    62f8:	48 89 c7             	mov    rdi,rax
    62fb:	e8 e9 02 00 00       	call   65e9 <r_engine>
    6300:	88 45 fd             	mov    BYTE PTR [rbp-0x3],al
    6303:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    6307:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    630b:	48 89 d6             	mov    rsi,rdx
    630e:	48 89 c7             	mov    rdi,rax
    6311:	e8 36 46 00 00       	call   a94c <d_engine>
    6316:	88 45 fe             	mov    BYTE PTR [rbp-0x2],al
    6319:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    631d:	48 8b 88 78 03 00 00 	mov    rcx,QWORD PTR [rax+0x378]
    6324:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6328:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    632c:	48 89 d6             	mov    rsi,rdx
    632f:	48 89 c7             	mov    rdi,rax
    6332:	ff d1                	call   rcx
    6334:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
    6337:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
    633b:	74 40                	je     637d <rule_app+0xa4>
    633d:	80 7d fd 00          	cmp    BYTE PTR [rbp-0x3],0x0
    6341:	74 3a                	je     637d <rule_app+0xa4>
    6343:	80 7d fe 00          	cmp    BYTE PTR [rbp-0x2],0x0
    6347:	74 34                	je     637d <rule_app+0xa4>
    6349:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    634d:	4c 8b 80 80 03 00 00 	mov    r8,QWORD PTR [rax+0x380]
    6354:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    6358:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    635c:	ba 00 00 00 00       	mov    edx,0x0
    6361:	48 89 ce             	mov    rsi,rcx
    6364:	48 89 c7             	mov    rdi,rax
    6367:	41 ff d0             	call   r8
    636a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    636e:	8b 40 3c             	mov    eax,DWORD PTR [rax+0x3c]
    6371:	8d 50 01             	lea    edx,[rax+0x1]
    6374:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6378:	89 50 3c             	mov    DWORD PTR [rax+0x3c],edx
    637b:	eb 17                	jmp    6394 <rule_app+0xbb>
    637d:	8b 05 a1 ac 00 00    	mov    eax,DWORD PTR [rip+0xaca1]        # 11024 <VIGIL_MODE>
    6383:	83 f8 02             	cmp    eax,0x2
    6386:	75 0c                	jne    6394 <rule_app+0xbb>
    6388:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    638c:	48 89 c7             	mov    rdi,rax
    638f:	e8 3d 22 00 00       	call   85d1 <forward_packet>
    6394:	90                   	nop
    6395:	c9                   	leave  
    6396:	c3                   	ret    

0000000000006397 <rulemgr>:
    6397:	f3 0f 1e fa          	endbr64 
    639b:	55                   	push   rbp
    639c:	48 89 e5             	mov    rbp,rsp
    639f:	48 83 ec 20          	sub    rsp,0x20
    63a3:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    63a7:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    63ae:	e9 23 02 00 00       	jmp    65d6 <rulemgr+0x23f>
    63b3:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    63b6:	8d 50 01             	lea    edx,[rax+0x1]
    63b9:	89 55 f4             	mov    DWORD PTR [rbp-0xc],edx
    63bc:	48 98                	cdqe   
    63be:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    63c5:	48 8d 15 14 af 00 00 	lea    rdx,[rip+0xaf14]        # 112e0 <rules>
    63cc:	48 01 d0             	add    rax,rdx
    63cf:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    63d3:	0f b6 05 f2 3b 10 00 	movzx  eax,BYTE PTR [rip+0x103bf2]        # 109fcc <in_test_mode>
    63da:	84 c0                	test   al,al
    63dc:	74 30                	je     640e <rulemgr+0x77>
    63de:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    63e2:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    63e5:	83 f8 46             	cmp    eax,0x46
    63e8:	75 0d                	jne    63f7 <rulemgr+0x60>
    63ea:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    63ee:	c7 40 10 45 00 00 00 	mov    DWORD PTR [rax+0x10],0x45
    63f5:	eb 17                	jmp    640e <rulemgr+0x77>
    63f7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    63fb:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    63fe:	83 f8 45             	cmp    eax,0x45
    6401:	75 0b                	jne    640e <rulemgr+0x77>
    6403:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6407:	c7 40 10 46 00 00 00 	mov    DWORD PTR [rax+0x10],0x46
    640e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6412:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    6418:	83 f8 ff             	cmp    eax,0xffffffff
    641b:	74 19                	je     6436 <rulemgr+0x9f>
    641d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6421:	8b 50 2c             	mov    edx,DWORD PTR [rax+0x2c]
    6424:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6428:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    642e:	39 c2                	cmp    edx,eax
    6430:	0f 85 a0 01 00 00    	jne    65d6 <rulemgr+0x23f>
    6436:	0f b6 05 43 ac 00 00 	movzx  eax,BYTE PTR [rip+0xac43]        # 11080 <demo_mode>
    643d:	84 c0                	test   al,al
    643f:	75 0b                	jne    644c <rulemgr+0xb5>
    6441:	8b 05 21 3b 10 00    	mov    eax,DWORD PTR [rip+0x103b21]        # 109f68 <vigil_location>
    6447:	83 f8 03             	cmp    eax,0x3
    644a:	75 6b                	jne    64b7 <rulemgr+0x120>
    644c:	8b 05 16 3b 10 00    	mov    eax,DWORD PTR [rip+0x103b16]        # 109f68 <vigil_location>
    6452:	83 f8 03             	cmp    eax,0x3
    6455:	0f 85 7b 01 00 00    	jne    65d6 <rulemgr+0x23f>
    645b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    645f:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    6462:	83 f8 ff             	cmp    eax,0xffffffff
    6465:	74 16                	je     647d <rulemgr+0xe6>
    6467:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    646b:	8b 50 0c             	mov    edx,DWORD PTR [rax+0xc]
    646e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6472:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    6475:	39 c2                	cmp    edx,eax
    6477:	0f 85 59 01 00 00    	jne    65d6 <rulemgr+0x23f>
    647d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6481:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    6484:	83 f8 ff             	cmp    eax,0xffffffff
    6487:	74 16                	je     649f <rulemgr+0x108>
    6489:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    648d:	8b 50 08             	mov    edx,DWORD PTR [rax+0x8]
    6490:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6494:	8b 40 28             	mov    eax,DWORD PTR [rax+0x28]
    6497:	39 c2                	cmp    edx,eax
    6499:	0f 85 37 01 00 00    	jne    65d6 <rulemgr+0x23f>
    649f:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    64a3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64a7:	48 89 d6             	mov    rsi,rdx
    64aa:	48 89 c7             	mov    rdi,rax
    64ad:	e8 27 fe ff ff       	call   62d9 <rule_app>
    64b2:	e9 1f 01 00 00       	jmp    65d6 <rulemgr+0x23f>
    64b7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64bb:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    64be:	83 f8 47             	cmp    eax,0x47
    64c1:	74 16                	je     64d9 <rulemgr+0x142>
    64c3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    64c7:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    64ca:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64ce:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    64d1:	39 c2                	cmp    edx,eax
    64d3:	0f 85 fd 00 00 00    	jne    65d6 <rulemgr+0x23f>
    64d9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64dd:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    64e3:	3d 80 00 00 00       	cmp    eax,0x80
    64e8:	75 18                	jne    6502 <rulemgr+0x16b>
    64ea:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    64ee:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64f2:	48 89 d6             	mov    rsi,rdx
    64f5:	48 89 c7             	mov    rdi,rax
    64f8:	e8 dc fd ff ff       	call   62d9 <rule_app>
    64fd:	e9 d4 00 00 00       	jmp    65d6 <rulemgr+0x23f>
    6502:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6506:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    6509:	83 f8 47             	cmp    eax,0x47
    650c:	75 79                	jne    6587 <rulemgr+0x1f0>
    650e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6512:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    6515:	83 f8 ff             	cmp    eax,0xffffffff
    6518:	74 28                	je     6542 <rulemgr+0x1ab>
    651a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    651e:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    6521:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6525:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    6528:	39 c2                	cmp    edx,eax
    652a:	74 16                	je     6542 <rulemgr+0x1ab>
    652c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6530:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    6533:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6537:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    653a:	39 c2                	cmp    edx,eax
    653c:	0f 85 94 00 00 00    	jne    65d6 <rulemgr+0x23f>
    6542:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6546:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    6549:	83 f8 ff             	cmp    eax,0xffffffff
    654c:	74 24                	je     6572 <rulemgr+0x1db>
    654e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6552:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    6555:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6559:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    655c:	39 c2                	cmp    edx,eax
    655e:	74 12                	je     6572 <rulemgr+0x1db>
    6560:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6564:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    6567:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    656b:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    656e:	39 c2                	cmp    edx,eax
    6570:	75 64                	jne    65d6 <rulemgr+0x23f>
    6572:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6576:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    657a:	48 89 d6             	mov    rsi,rdx
    657d:	48 89 c7             	mov    rdi,rax
    6580:	e8 54 fd ff ff       	call   62d9 <rule_app>
    6585:	eb 4f                	jmp    65d6 <rulemgr+0x23f>
    6587:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    658b:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    658e:	83 f8 ff             	cmp    eax,0xffffffff
    6591:	74 12                	je     65a5 <rulemgr+0x20e>
    6593:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6597:	8b 50 0c             	mov    edx,DWORD PTR [rax+0xc]
    659a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    659e:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    65a1:	39 c2                	cmp    edx,eax
    65a3:	75 31                	jne    65d6 <rulemgr+0x23f>
    65a5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65a9:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    65ac:	83 f8 ff             	cmp    eax,0xffffffff
    65af:	74 12                	je     65c3 <rulemgr+0x22c>
    65b1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65b5:	8b 50 08             	mov    edx,DWORD PTR [rax+0x8]
    65b8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    65bc:	8b 40 28             	mov    eax,DWORD PTR [rax+0x28]
    65bf:	39 c2                	cmp    edx,eax
    65c1:	75 13                	jne    65d6 <rulemgr+0x23f>
    65c3:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    65c7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65cb:	48 89 d6             	mov    rsi,rdx
    65ce:	48 89 c7             	mov    rdi,rax
    65d1:	e8 03 fd ff ff       	call   62d9 <rule_app>
    65d6:	8b 05 38 aa 00 00    	mov    eax,DWORD PTR [rip+0xaa38]        # 11014 <num_rules>
    65dc:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    65df:	0f 8e ce fd ff ff    	jle    63b3 <rulemgr+0x1c>
    65e5:	90                   	nop
    65e6:	90                   	nop
    65e7:	c9                   	leave  
    65e8:	c3                   	ret    

00000000000065e9 <r_engine>:
    65e9:	f3 0f 1e fa          	endbr64 
    65ed:	55                   	push   rbp
    65ee:	48 89 e5             	mov    rbp,rsp
    65f1:	48 83 ec 10          	sub    rsp,0x10
    65f5:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    65f9:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    65fd:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6601:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    6604:	3d 80 00 00 00       	cmp    eax,0x80
    6609:	0f 85 d9 00 00 00    	jne    66e8 <r_engine+0xff>
    660f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6613:	0f b6 80 6f 03 00 00 	movzx  eax,BYTE PTR [rax+0x36f]
    661a:	84 c0                	test   al,al
    661c:	74 25                	je     6643 <r_engine+0x5a>
    661e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6622:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    6626:	0f b6 50 01          	movzx  edx,BYTE PTR [rax+0x1]
    662a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    662e:	0f b6 80 73 03 00 00 	movzx  eax,BYTE PTR [rax+0x373]
    6635:	38 c2                	cmp    dl,al
    6637:	74 0a                	je     6643 <r_engine+0x5a>
    6639:	b8 00 00 00 00       	mov    eax,0x0
    663e:	e9 9c 01 00 00       	jmp    67df <r_engine+0x1f6>
    6643:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6647:	0f b6 80 71 03 00 00 	movzx  eax,BYTE PTR [rax+0x371]
    664e:	84 c0                	test   al,al
    6650:	74 26                	je     6678 <r_engine+0x8f>
    6652:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6656:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    665a:	0f b7 50 04          	movzx  edx,WORD PTR [rax+0x4]
    665e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6662:	0f b7 80 76 03 00 00 	movzx  eax,WORD PTR [rax+0x376]
    6669:	66 39 c2             	cmp    dx,ax
    666c:	74 0a                	je     6678 <r_engine+0x8f>
    666e:	b8 00 00 00 00       	mov    eax,0x0
    6673:	e9 67 01 00 00       	jmp    67df <r_engine+0x1f6>
    6678:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    667c:	0f b6 80 70 03 00 00 	movzx  eax,BYTE PTR [rax+0x370]
    6683:	84 c0                	test   al,al
    6685:	74 26                	je     66ad <r_engine+0xc4>
    6687:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    668b:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    668f:	0f b7 50 06          	movzx  edx,WORD PTR [rax+0x6]
    6693:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6697:	0f b7 80 74 03 00 00 	movzx  eax,WORD PTR [rax+0x374]
    669e:	66 39 c2             	cmp    dx,ax
    66a1:	74 0a                	je     66ad <r_engine+0xc4>
    66a3:	b8 00 00 00 00       	mov    eax,0x0
    66a8:	e9 32 01 00 00       	jmp    67df <r_engine+0x1f6>
    66ad:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66b1:	0f b6 80 6e 03 00 00 	movzx  eax,BYTE PTR [rax+0x36e]
    66b8:	84 c0                	test   al,al
    66ba:	0f 84 dc 00 00 00    	je     679c <r_engine+0x1b3>
    66c0:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    66c4:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    66c8:	0f b6 10             	movzx  edx,BYTE PTR [rax]
    66cb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66cf:	0f b6 80 72 03 00 00 	movzx  eax,BYTE PTR [rax+0x372]
    66d6:	38 c2                	cmp    dl,al
    66d8:	0f 84 be 00 00 00    	je     679c <r_engine+0x1b3>
    66de:	b8 00 00 00 00       	mov    eax,0x0
    66e3:	e9 f7 00 00 00       	jmp    67df <r_engine+0x1f6>
    66e8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    66ec:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    66ef:	83 f8 7e             	cmp    eax,0x7e
    66f2:	0f 85 a4 00 00 00    	jne    679c <r_engine+0x1b3>
    66f8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66fc:	0f b6 80 51 03 00 00 	movzx  eax,BYTE PTR [rax+0x351]
    6703:	84 c0                	test   al,al
    6705:	74 2e                	je     6735 <r_engine+0x14c>
    6707:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    670b:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    670f:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    6712:	89 c7                	mov    edi,eax
    6714:	e8 27 bf ff ff       	call   2640 <ntohl@plt>
    6719:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    671d:	0f b7 92 5c 03 00 00 	movzx  edx,WORD PTR [rdx+0x35c]
    6724:	0f b7 d2             	movzx  edx,dx
    6727:	39 d0                	cmp    eax,edx
    6729:	74 0a                	je     6735 <r_engine+0x14c>
    672b:	b8 00 00 00 00       	mov    eax,0x0
    6730:	e9 aa 00 00 00       	jmp    67df <r_engine+0x1f6>
    6735:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6739:	0f b6 80 50 03 00 00 	movzx  eax,BYTE PTR [rax+0x350]
    6740:	84 c0                	test   al,al
    6742:	74 29                	je     676d <r_engine+0x184>
    6744:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6748:	48 8d 90 53 03 00 00 	lea    rdx,[rax+0x353]
    674f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6753:	48 83 c0 60          	add    rax,0x60
    6757:	48 89 d6             	mov    rsi,rdx
    675a:	48 89 c7             	mov    rdi,rax
    675d:	e8 ee bf ff ff       	call   2750 <strcmp@plt>
    6762:	85 c0                	test   eax,eax
    6764:	74 07                	je     676d <r_engine+0x184>
    6766:	b8 00 00 00 00       	mov    eax,0x0
    676b:	eb 72                	jmp    67df <r_engine+0x1f6>
    676d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6771:	0f b6 80 52 03 00 00 	movzx  eax,BYTE PTR [rax+0x352]
    6778:	84 c0                	test   al,al
    677a:	74 20                	je     679c <r_engine+0x1b3>
    677c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6780:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    6784:	8b 50 04             	mov    edx,DWORD PTR [rax+0x4]
    6787:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    678b:	8b 80 60 03 00 00    	mov    eax,DWORD PTR [rax+0x360]
    6791:	39 c2                	cmp    edx,eax
    6793:	74 07                	je     679c <r_engine+0x1b3>
    6795:	b8 00 00 00 00       	mov    eax,0x0
    679a:	eb 43                	jmp    67df <r_engine+0x1f6>
    679c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    67a0:	48 8b 40 48          	mov    rax,QWORD PTR [rax+0x48]
    67a4:	48 85 c0             	test   rax,rax
    67a7:	74 31                	je     67da <r_engine+0x1f1>
    67a9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67ad:	0f b6 80 69 03 00 00 	movzx  eax,BYTE PTR [rax+0x369]
    67b4:	84 c0                	test   al,al
    67b6:	74 22                	je     67da <r_engine+0x1f1>
    67b8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    67bc:	48 8b 40 48          	mov    rax,QWORD PTR [rax+0x48]
    67c0:	0f b6 50 08          	movzx  edx,BYTE PTR [rax+0x8]
    67c4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67c8:	0f b6 80 6c 03 00 00 	movzx  eax,BYTE PTR [rax+0x36c]
    67cf:	38 c2                	cmp    dl,al
    67d1:	74 07                	je     67da <r_engine+0x1f1>
    67d3:	b8 00 00 00 00       	mov    eax,0x0
    67d8:	eb 05                	jmp    67df <r_engine+0x1f6>
    67da:	b8 01 00 00 00       	mov    eax,0x1
    67df:	c9                   	leave  
    67e0:	c3                   	ret    

00000000000067e1 <test_tcp_session_status>:
    67e1:	f3 0f 1e fa          	endbr64 
    67e5:	55                   	push   rbp
    67e6:	48 89 e5             	mov    rbp,rsp
    67e9:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    67ed:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    67f1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67f5:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    67fb:	83 f8 7e             	cmp    eax,0x7e
    67fe:	75 34                	jne    6834 <test_tcp_session_status+0x53>
    6800:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6804:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    6807:	83 f8 7e             	cmp    eax,0x7e
    680a:	75 28                	jne    6834 <test_tcp_session_status+0x53>
    680c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6810:	8b 80 48 03 00 00    	mov    eax,DWORD PTR [rax+0x348]
    6816:	83 f8 01             	cmp    eax,0x1
    6819:	75 12                	jne    682d <test_tcp_session_status+0x4c>
    681b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    681f:	8b 40 68             	mov    eax,DWORD PTR [rax+0x68]
    6822:	85 c0                	test   eax,eax
    6824:	75 07                	jne    682d <test_tcp_session_status+0x4c>
    6826:	b8 00 00 00 00       	mov    eax,0x0
    682b:	eb 0c                	jmp    6839 <test_tcp_session_status+0x58>
    682d:	b8 01 00 00 00       	mov    eax,0x1
    6832:	eb 05                	jmp    6839 <test_tcp_session_status+0x58>
    6834:	b8 01 00 00 00       	mov    eax,0x1
    6839:	5d                   	pop    rbp
    683a:	c3                   	ret    

000000000000683b <main>:
    683b:	f3 0f 1e fa          	endbr64 
    683f:	55                   	push   rbp
    6840:	48 89 e5             	mov    rbp,rsp
    6843:	48 81 ec 40 08 00 00 	sub    rsp,0x840
    684a:	89 bd cc f7 ff ff    	mov    DWORD PTR [rbp-0x834],edi
    6850:	48 89 b5 c0 f7 ff ff 	mov    QWORD PTR [rbp-0x840],rsi
    6857:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    685e:	00 00 
    6860:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    6864:	31 c0                	xor    eax,eax
    6866:	b8 00 00 00 00       	mov    eax,0x0
    686b:	e8 0d 4b 00 00       	call   b37d <load_fn_mem_map>
    6870:	48 8d 35 d3 02 00 00 	lea    rsi,[rip+0x2d3]        # 6b4a <sigint_processor>
    6877:	bf 02 00 00 00       	mov    edi,0x2
    687c:	e8 5f be ff ff       	call   26e0 <signal@plt>
    6881:	48 8d 05 78 47 00 00 	lea    rax,[rip+0x4778]        # b000 <crash_handler>
    6888:	48 89 c6             	mov    rsi,rax
    688b:	bf 0b 00 00 00       	mov    edi,0xb
    6890:	e8 4b be ff ff       	call   26e0 <signal@plt>
    6895:	b8 00 00 00 00       	mov    eax,0x0
    689a:	e8 d8 08 00 00       	call   7177 <print_logo>
    689f:	b8 00 00 00 00       	mov    eax,0x0
    68a4:	e8 1c 07 00 00       	call   6fc5 <print_cpu_info>
    68a9:	c7 05 f5 a9 00 00 01 	mov    DWORD PTR [rip+0xa9f5],0x1        # 112a8 <is_running>
    68b0:	00 00 00 
    68b3:	bf 00 00 00 00       	mov    edi,0x0
    68b8:	e8 b3 bf ff ff       	call   2870 <time@plt>
    68bd:	48 89 05 ec a9 00 00 	mov    QWORD PTR [rip+0xa9ec],rax        # 112b0 <last_clean_time>
    68c4:	83 bd cc f7 ff ff 01 	cmp    DWORD PTR [rbp-0x834],0x1
    68cb:	0f 85 e3 00 00 00    	jne    69b4 <main+0x179>
    68d1:	b8 00 00 00 00       	mov    eax,0x0
    68d6:	e8 c0 06 00 00       	call   6f9b <print_help_and_exit>
    68db:	e9 d4 00 00 00       	jmp    69b4 <main+0x179>
    68e0:	8b 85 dc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x824]
    68e6:	83 e8 64             	sub    eax,0x64
    68e9:	83 f8 10             	cmp    eax,0x10
    68ec:	0f 87 9e 00 00 00    	ja     6990 <main+0x155>
    68f2:	89 c0                	mov    eax,eax
    68f4:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    68fb:	00 
    68fc:	48 8d 05 f9 66 00 00 	lea    rax,[rip+0x66f9]        # cffc <_IO_stdin_used+0xffc>
    6903:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    6906:	48 98                	cdqe   
    6908:	48 8d 15 ed 66 00 00 	lea    rdx,[rip+0x66ed]        # cffc <_IO_stdin_used+0xffc>
    690f:	48 01 d0             	add    rax,rdx
    6912:	3e ff e0             	notrack jmp rax
    6915:	c6 05 04 36 10 00 01 	mov    BYTE PTR [rip+0x103604],0x1        # 109f20 <debug_mode>
    691c:	e9 93 00 00 00       	jmp    69b4 <main+0x179>
    6921:	b8 00 00 00 00       	mov    eax,0x0
    6926:	e8 70 06 00 00       	call   6f9b <print_help_and_exit>
    692b:	e9 84 00 00 00       	jmp    69b4 <main+0x179>
    6930:	48 8b 05 29 a7 00 00 	mov    rax,QWORD PTR [rip+0xa729]        # 11060 <optarg@@GLIBC_2.2.5>
    6937:	48 89 85 e0 f7 ff ff 	mov    QWORD PTR [rbp-0x820],rax
    693e:	eb 74                	jmp    69b4 <main+0x179>
    6940:	c6 05 1d 36 10 00 01 	mov    BYTE PTR [rip+0x10361d],0x1        # 109f64 <packet_print>
    6947:	eb 6b                	jmp    69b4 <main+0x179>
    6949:	c6 05 15 36 10 00 01 	mov    BYTE PTR [rip+0x103615],0x1        # 109f65 <quiet_exit>
    6950:	eb 62                	jmp    69b4 <main+0x179>
    6952:	48 8d 3d c7 64 00 00 	lea    rdi,[rip+0x64c7]        # ce20 <_IO_stdin_used+0xe20>
    6959:	e8 82 bb ff ff       	call   24e0 <puts@plt>
    695e:	bf 0a 00 00 00       	mov    edi,0xa
    6963:	e8 e8 bc ff ff       	call   2650 <sleep@plt>
    6968:	c6 05 11 a7 00 00 01 	mov    BYTE PTR [rip+0xa711],0x1        # 11080 <demo_mode>
    696f:	eb 43                	jmp    69b4 <main+0x179>
    6971:	48 8d 3d e8 64 00 00 	lea    rdi,[rip+0x64e8]        # ce60 <_IO_stdin_used+0xe60>
    6978:	e8 63 bb ff ff       	call   24e0 <puts@plt>
    697d:	bf 0a 00 00 00       	mov    edi,0xa
    6982:	e8 c9 bc ff ff       	call   2650 <sleep@plt>
    6987:	c6 05 3e 36 10 00 01 	mov    BYTE PTR [rip+0x10363e],0x1        # 109fcc <in_test_mode>
    698e:	eb 24                	jmp    69b4 <main+0x179>
    6990:	8b 85 dc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x824]
    6996:	89 c6                	mov    esi,eax
    6998:	48 8d 3d f5 64 00 00 	lea    rdi,[rip+0x64f5]        # ce94 <_IO_stdin_used+0xe94>
    699f:	b8 00 00 00 00       	mov    eax,0x0
    69a4:	e8 d7 ba ff ff       	call   2480 <printf@plt>
    69a9:	b8 00 00 00 00       	mov    eax,0x0
    69ae:	e8 e8 05 00 00       	call   6f9b <print_help_and_exit>
    69b3:	90                   	nop
    69b4:	48 8b 8d c0 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x840]
    69bb:	8b 85 cc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x834]
    69c1:	48 8d 15 e2 64 00 00 	lea    rdx,[rip+0x64e2]        # ceaa <_IO_stdin_used+0xeaa>
    69c8:	48 89 ce             	mov    rsi,rcx
    69cb:	89 c7                	mov    edi,eax
    69cd:	e8 5e bb ff ff       	call   2530 <getopt@plt>
    69d2:	89 85 dc f7 ff ff    	mov    DWORD PTR [rbp-0x824],eax
    69d8:	83 bd dc f7 ff ff ff 	cmp    DWORD PTR [rbp-0x824],0xffffffff
    69df:	0f 85 fb fe ff ff    	jne    68e0 <main+0xa5>
    69e5:	48 8d 3d c7 64 00 00 	lea    rdi,[rip+0x64c7]        # ceb3 <_IO_stdin_used+0xeb3>
    69ec:	e8 27 f7 ff ff       	call   6118 <deny_conf_parser>
    69f1:	48 8d 3d d0 64 00 00 	lea    rdi,[rip+0x64d0]        # cec8 <_IO_stdin_used+0xec8>
    69f8:	e8 e3 ba ff ff       	call   24e0 <puts@plt>
    69fd:	b8 00 00 00 00       	mov    eax,0x0
    6a02:	e8 49 13 00 00       	call   7d50 <load_csv_arp_cache>
    6a07:	83 f8 ff             	cmp    eax,0xffffffff
    6a0a:	74 0e                	je     6a1a <main+0x1df>
    6a0c:	48 8d 3d f5 64 00 00 	lea    rdi,[rip+0x64f5]        # cf08 <_IO_stdin_used+0xf08>
    6a13:	e8 c8 ba ff ff       	call   24e0 <puts@plt>
    6a18:	eb 0c                	jmp    6a26 <main+0x1eb>
    6a1a:	48 8d 3d 07 65 00 00 	lea    rdi,[rip+0x6507]        # cf28 <_IO_stdin_used+0xf28>
    6a21:	e8 ba ba ff ff       	call   24e0 <puts@plt>
    6a26:	48 8d 3d 2c 65 00 00 	lea    rdi,[rip+0x652c]        # cf59 <_IO_stdin_used+0xf59>
    6a2d:	e8 ba ee ff ff       	call   58ec <rule_library_parser>
    6a32:	48 8d 3d 36 65 00 00 	lea    rdi,[rip+0x6536]        # cf6f <_IO_stdin_used+0xf6f>
    6a39:	e8 a2 ba ff ff       	call   24e0 <puts@plt>
    6a3e:	b8 00 00 00 00       	mov    eax,0x0
    6a43:	e8 de 3a 00 00       	call   a526 <rule_processor>
    6a48:	48 8b 85 e0 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x820]
    6a4f:	48 89 c6             	mov    rsi,rax
    6a52:	48 8d 3d 2f 65 00 00 	lea    rdi,[rip+0x652f]        # cf88 <_IO_stdin_used+0xf88>
    6a59:	b8 00 00 00 00       	mov    eax,0x0
    6a5e:	e8 1d ba ff ff       	call   2480 <printf@plt>
    6a63:	48 c7 85 f0 f7 ff ff 	mov    QWORD PTR [rbp-0x810],0x0
    6a6a:	00 00 00 00 
    6a6e:	48 c7 85 f8 f7 ff ff 	mov    QWORD PTR [rbp-0x808],0x0
    6a75:	00 00 00 00 
    6a79:	48 8d 95 00 f8 ff ff 	lea    rdx,[rbp-0x800]
    6a80:	b8 00 00 00 00       	mov    eax,0x0
    6a85:	b9 fd 00 00 00       	mov    ecx,0xfd
    6a8a:	48 89 d7             	mov    rdi,rdx
    6a8d:	f3 48 ab             	rep stos QWORD PTR es:[rdi],rax
    6a90:	48 89 fa             	mov    rdx,rdi
    6a93:	89 02                	mov    DWORD PTR [rdx],eax
    6a95:	48 83 c2 04          	add    rdx,0x4
    6a99:	66 89 02             	mov    WORD PTR [rdx],ax
    6a9c:	48 83 c2 02          	add    rdx,0x2
    6aa0:	48 8d 95 f0 f7 ff ff 	lea    rdx,[rbp-0x810]
    6aa7:	48 8b 85 e0 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x820]
    6aae:	49 89 d0             	mov    r8,rdx
    6ab1:	b9 64 00 00 00       	mov    ecx,0x64
    6ab6:	ba 01 00 00 00       	mov    edx,0x1
    6abb:	be 00 04 00 00       	mov    esi,0x400
    6ac0:	48 89 c7             	mov    rdi,rax
    6ac3:	e8 c8 ba ff ff       	call   2590 <pcap_open_live@plt>
    6ac8:	48 89 85 e8 f7 ff ff 	mov    QWORD PTR [rbp-0x818],rax
    6acf:	48 83 bd e8 f7 ff ff 	cmp    QWORD PTR [rbp-0x818],0x0
    6ad6:	00 
    6ad7:	75 16                	jne    6aef <main+0x2b4>
    6ad9:	48 8d 3d c9 64 00 00 	lea    rdi,[rip+0x64c9]        # cfa9 <_IO_stdin_used+0xfa9>
    6ae0:	e8 2b bd ff ff       	call   2810 <perror@plt>
    6ae5:	bf 01 00 00 00       	mov    edi,0x1
    6aea:	e8 11 ba ff ff       	call   2500 <exit@plt>
    6aef:	b8 00 00 00 00       	mov    eax,0x0
    6af4:	e8 61 42 00 00       	call   ad5a <collect_scripts>
    6af9:	b8 00 00 00 00       	mov    eax,0x0
    6afe:	e8 8b 06 00 00       	call   718e <start_nsh_server>
    6b03:	48 8d 3d be 64 00 00 	lea    rdi,[rip+0x64be]        # cfc8 <_IO_stdin_used+0xfc8>
    6b0a:	e8 d1 b9 ff ff       	call   24e0 <puts@plt>
    6b0f:	48 8b 85 e8 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x818]
    6b16:	b9 00 00 00 00       	mov    ecx,0x0
    6b1b:	48 8d 15 81 be ff ff 	lea    rdx,[rip+0xffffffffffffbe81]        # 29a3 <pktmgr>
    6b22:	be ff ff ff ff       	mov    esi,0xffffffff
    6b27:	48 89 c7             	mov    rdi,rax
    6b2a:	e8 c1 bc ff ff       	call   27f0 <pcap_loop@plt>
    6b2f:	b8 00 00 00 00       	mov    eax,0x0
    6b34:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    6b38:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    6b3f:	00 00 
    6b41:	74 05                	je     6b48 <main+0x30d>
    6b43:	e8 f8 bb ff ff       	call   2740 <__stack_chk_fail@plt>
    6b48:	c9                   	leave  
    6b49:	c3                   	ret    

0000000000006b4a <sigint_processor>:
    6b4a:	f3 0f 1e fa          	endbr64 
    6b4e:	55                   	push   rbp
    6b4f:	48 89 e5             	mov    rbp,rsp
    6b52:	41 54                	push   r12
    6b54:	53                   	push   rbx
    6b55:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    6b5c:	89 bd bc fe ff ff    	mov    DWORD PTR [rbp-0x144],edi
    6b62:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6b69:	00 00 
    6b6b:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    6b6f:	31 c0                	xor    eax,eax
    6b71:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    6b78:	00 00 00 
    6b7b:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    6b82:	48 89 c7             	mov    rdi,rax
    6b85:	e8 89 c8 ff ff       	call   3413 <cb_get_formatted_time>
    6b8a:	48 8d 95 e0 fe ff ff 	lea    rdx,[rbp-0x120]
    6b91:	8b 85 bc fe ff ff    	mov    eax,DWORD PTR [rbp-0x144]
    6b97:	89 c6                	mov    esi,eax
    6b99:	48 8d 3d a0 64 00 00 	lea    rdi,[rip+0x64a0]        # d040 <_IO_stdin_used+0x1040>
    6ba0:	b8 00 00 00 00       	mov    eax,0x0
    6ba5:	e8 d6 b8 ff ff       	call   2480 <printf@plt>
    6baa:	48 8d 3d b4 64 00 00 	lea    rdi,[rip+0x64b4]        # d065 <_IO_stdin_used+0x1065>
    6bb1:	e8 5a bc ff ff       	call   2810 <perror@plt>
    6bb6:	0f b6 05 a8 33 10 00 	movzx  eax,BYTE PTR [rip+0x1033a8]        # 109f65 <quiet_exit>
    6bbd:	83 f0 01             	xor    eax,0x1
    6bc0:	84 c0                	test   al,al
    6bc2:	0f 84 2e 02 00 00    	je     6df6 <sigint_processor+0x2ac>
    6bc8:	8b 05 d6 a6 00 00    	mov    eax,DWORD PTR [rip+0xa6d6]        # 112a4 <total_pkt_captured>
    6bce:	89 c6                	mov    esi,eax
    6bd0:	48 8d 3d 8f 64 00 00 	lea    rdi,[rip+0x648f]        # d066 <_IO_stdin_used+0x1066>
    6bd7:	b8 00 00 00 00       	mov    eax,0x0
    6bdc:	e8 9f b8 ff ff       	call   2480 <printf@plt>
    6be1:	48 8d 3d 98 64 00 00 	lea    rdi,[rip+0x6498]        # d080 <_IO_stdin_used+0x1080>
    6be8:	e8 f3 b8 ff ff       	call   24e0 <puts@plt>
    6bed:	c7 85 c4 fe ff ff 00 	mov    DWORD PTR [rbp-0x13c],0x0
    6bf4:	00 00 00 
    6bf7:	e9 e8 01 00 00       	jmp    6de4 <sigint_processor+0x29a>
    6bfc:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6c02:	48 63 d0             	movsxd rdx,eax
    6c05:	48 89 d0             	mov    rax,rdx
    6c08:	48 c1 e0 02          	shl    rax,0x2
    6c0c:	48 01 d0             	add    rax,rdx
    6c0f:	48 c1 e0 03          	shl    rax,0x3
    6c13:	48 01 d0             	add    rax,rdx
    6c16:	48 c1 e0 04          	shl    rax,0x4
    6c1a:	48 89 c2             	mov    rdx,rax
    6c1d:	48 8d 05 6c cb 0e 00 	lea    rax,[rip+0xecb6c]        # f3790 <watchlist+0x270>
    6c24:	44 8b 1c 02          	mov    r11d,DWORD PTR [rdx+rax*1]
    6c28:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6c2e:	48 63 d0             	movsxd rdx,eax
    6c31:	48 89 d0             	mov    rax,rdx
    6c34:	48 c1 e0 02          	shl    rax,0x2
    6c38:	48 01 d0             	add    rax,rdx
    6c3b:	48 c1 e0 03          	shl    rax,0x3
    6c3f:	48 01 d0             	add    rax,rdx
    6c42:	48 c1 e0 04          	shl    rax,0x4
    6c46:	48 89 c2             	mov    rdx,rax
    6c49:	48 8d 05 34 cb 0e 00 	lea    rax,[rip+0xecb34]        # f3784 <watchlist+0x264>
    6c50:	44 8b 14 02          	mov    r10d,DWORD PTR [rdx+rax*1]
    6c54:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6c5a:	48 63 d0             	movsxd rdx,eax
    6c5d:	48 89 d0             	mov    rax,rdx
    6c60:	48 c1 e0 02          	shl    rax,0x2
    6c64:	48 01 d0             	add    rax,rdx
    6c67:	48 c1 e0 03          	shl    rax,0x3
    6c6b:	48 01 d0             	add    rax,rdx
    6c6e:	48 c1 e0 04          	shl    rax,0x4
    6c72:	48 89 c2             	mov    rdx,rax
    6c75:	48 8d 05 10 cb 0e 00 	lea    rax,[rip+0xecb10]        # f378c <watchlist+0x26c>
    6c7c:	44 8b 0c 02          	mov    r9d,DWORD PTR [rdx+rax*1]
    6c80:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6c86:	48 63 d0             	movsxd rdx,eax
    6c89:	48 89 d0             	mov    rax,rdx
    6c8c:	48 c1 e0 02          	shl    rax,0x2
    6c90:	48 01 d0             	add    rax,rdx
    6c93:	48 c1 e0 03          	shl    rax,0x3
    6c97:	48 01 d0             	add    rax,rdx
    6c9a:	48 c1 e0 04          	shl    rax,0x4
    6c9e:	48 89 c2             	mov    rdx,rax
    6ca1:	48 8d 05 d8 ca 0e 00 	lea    rax,[rip+0xecad8]        # f3780 <watchlist+0x260>
    6ca8:	44 8b 04 02          	mov    r8d,DWORD PTR [rdx+rax*1]
    6cac:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6cb2:	48 63 d0             	movsxd rdx,eax
    6cb5:	48 89 d0             	mov    rax,rdx
    6cb8:	48 c1 e0 02          	shl    rax,0x2
    6cbc:	48 01 d0             	add    rax,rdx
    6cbf:	48 c1 e0 03          	shl    rax,0x3
    6cc3:	48 01 d0             	add    rax,rdx
    6cc6:	48 c1 e0 04          	shl    rax,0x4
    6cca:	48 89 c2             	mov    rdx,rax
    6ccd:	48 8d 05 b4 ca 0e 00 	lea    rax,[rip+0xecab4]        # f3788 <watchlist+0x268>
    6cd4:	8b 3c 02             	mov    edi,DWORD PTR [rdx+rax*1]
    6cd7:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6cdd:	48 63 d0             	movsxd rdx,eax
    6ce0:	48 89 d0             	mov    rax,rdx
    6ce3:	48 c1 e0 02          	shl    rax,0x2
    6ce7:	48 01 d0             	add    rax,rdx
    6cea:	48 c1 e0 03          	shl    rax,0x3
    6cee:	48 01 d0             	add    rax,rdx
    6cf1:	48 c1 e0 04          	shl    rax,0x4
    6cf5:	48 89 c2             	mov    rdx,rax
    6cf8:	48 8d 05 7d ca 0e 00 	lea    rax,[rip+0xeca7d]        # f377c <watchlist+0x25c>
    6cff:	44 8b 24 02          	mov    r12d,DWORD PTR [rdx+rax*1]
    6d03:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6d09:	48 63 d0             	movsxd rdx,eax
    6d0c:	48 89 d0             	mov    rax,rdx
    6d0f:	48 c1 e0 02          	shl    rax,0x2
    6d13:	48 01 d0             	add    rax,rdx
    6d16:	48 c1 e0 03          	shl    rax,0x3
    6d1a:	48 01 d0             	add    rax,rdx
    6d1d:	48 c1 e0 04          	shl    rax,0x4
    6d21:	48 89 c2             	mov    rdx,rax
    6d24:	48 8d 05 71 ca 0e 00 	lea    rax,[rip+0xeca71]        # f379c <watchlist+0x27c>
    6d2b:	8b 1c 02             	mov    ebx,DWORD PTR [rdx+rax*1]
    6d2e:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6d34:	48 63 d0             	movsxd rdx,eax
    6d37:	48 89 d0             	mov    rax,rdx
    6d3a:	48 c1 e0 02          	shl    rax,0x2
    6d3e:	48 01 d0             	add    rax,rdx
    6d41:	48 c1 e0 03          	shl    rax,0x3
    6d45:	48 01 d0             	add    rax,rdx
    6d48:	48 c1 e0 04          	shl    rax,0x4
    6d4c:	48 89 c2             	mov    rdx,rax
    6d4f:	48 8d 05 4a ca 0e 00 	lea    rax,[rip+0xeca4a]        # f37a0 <watchlist+0x280>
    6d56:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
    6d59:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6d5f:	48 63 d0             	movsxd rdx,eax
    6d62:	48 89 d0             	mov    rax,rdx
    6d65:	48 c1 e0 02          	shl    rax,0x2
    6d69:	48 01 d0             	add    rax,rdx
    6d6c:	48 c1 e0 03          	shl    rax,0x3
    6d70:	48 01 d0             	add    rax,rdx
    6d73:	48 c1 e0 04          	shl    rax,0x4
    6d77:	48 89 c2             	mov    rdx,rax
    6d7a:	48 8d 05 f7 c9 0e 00 	lea    rax,[rip+0xec9f7]        # f3778 <watchlist+0x258>
    6d81:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
    6d84:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6d8a:	48 63 d0             	movsxd rdx,eax
    6d8d:	48 89 d0             	mov    rax,rdx
    6d90:	48 c1 e0 02          	shl    rax,0x2
    6d94:	48 01 d0             	add    rax,rdx
    6d97:	48 c1 e0 03          	shl    rax,0x3
    6d9b:	48 01 d0             	add    rax,rdx
    6d9e:	48 c1 e0 04          	shl    rax,0x4
    6da2:	48 8d 15 77 c7 0e 00 	lea    rdx,[rip+0xec777]        # f3520 <watchlist>
    6da9:	48 01 d0             	add    rax,rdx
    6dac:	48 83 c0 08          	add    rax,0x8
    6db0:	48 83 ec 08          	sub    rsp,0x8
    6db4:	41 53                	push   r11
    6db6:	41 52                	push   r10
    6db8:	41 51                	push   r9
    6dba:	41 50                	push   r8
    6dbc:	57                   	push   rdi
    6dbd:	45 89 e1             	mov    r9d,r12d
    6dc0:	41 89 d8             	mov    r8d,ebx
    6dc3:	89 f2                	mov    edx,esi
    6dc5:	48 89 c6             	mov    rsi,rax
    6dc8:	48 8d 3d e9 62 00 00 	lea    rdi,[rip+0x62e9]        # d0b8 <_IO_stdin_used+0x10b8>
    6dcf:	b8 00 00 00 00       	mov    eax,0x0
    6dd4:	e8 a7 b6 ff ff       	call   2480 <printf@plt>
    6dd9:	48 83 c4 30          	add    rsp,0x30
    6ddd:	83 85 c4 fe ff ff 01 	add    DWORD PTR [rbp-0x13c],0x1
    6de4:	8b 05 2e a2 00 00    	mov    eax,DWORD PTR [rip+0xa22e]        # 11018 <watchlist_num>
    6dea:	39 85 c4 fe ff ff    	cmp    DWORD PTR [rbp-0x13c],eax
    6df0:	0f 8e 06 fe ff ff    	jle    6bfc <sigint_processor+0xb2>
    6df6:	48 8d 35 5b 63 00 00 	lea    rsi,[rip+0x635b]        # d158 <_IO_stdin_used+0x1158>
    6dfd:	48 8d 3d 56 63 00 00 	lea    rdi,[rip+0x6356]        # d15a <_IO_stdin_used+0x115a>
    6e04:	e8 67 b7 ff ff       	call   2570 <fopen@plt>
    6e09:	48 89 85 d8 fe ff ff 	mov    QWORD PTR [rbp-0x128],rax
    6e10:	48 83 bd d8 fe ff ff 	cmp    QWORD PTR [rbp-0x128],0x0
    6e17:	00 
    6e18:	0f 85 99 00 00 00    	jne    6eb7 <sigint_processor+0x36d>
    6e1e:	48 8d 3d 53 63 00 00 	lea    rdi,[rip+0x6353]        # d178 <_IO_stdin_used+0x1178>
    6e25:	e8 b6 b6 ff ff       	call   24e0 <puts@plt>
    6e2a:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    6e31:	48 89 c7             	mov    rdi,rax
    6e34:	e8 77 b9 ff ff       	call   27b0 <fclose@plt>
    6e39:	c7 85 c8 fe ff ff 00 	mov    DWORD PTR [rbp-0x138],0x0
    6e40:	00 00 00 
    6e43:	eb 5f                	jmp    6ea4 <sigint_processor+0x35a>
    6e45:	8b 85 c8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x138]
    6e4b:	48 63 d0             	movsxd rdx,eax
    6e4e:	48 89 d0             	mov    rax,rdx
    6e51:	48 c1 e0 04          	shl    rax,0x4
    6e55:	48 01 d0             	add    rax,rdx
    6e58:	48 01 c0             	add    rax,rax
    6e5b:	48 8d 50 10          	lea    rdx,[rax+0x10]
    6e5f:	48 8d 05 ba 0e 10 00 	lea    rax,[rip+0x100eba]        # 107d20 <arpcache>
    6e66:	48 01 c2             	add    rdx,rax
    6e69:	8b 85 c8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x138]
    6e6f:	48 63 c8             	movsxd rcx,eax
    6e72:	48 89 c8             	mov    rax,rcx
    6e75:	48 c1 e0 04          	shl    rax,0x4
    6e79:	48 01 c8             	add    rax,rcx
    6e7c:	48 01 c0             	add    rax,rax
    6e7f:	48 8d 0d 9a 0e 10 00 	lea    rcx,[rip+0x100e9a]        # 107d20 <arpcache>
    6e86:	48 01 c8             	add    rax,rcx
    6e89:	48 89 c6             	mov    rsi,rax
    6e8c:	48 8d 3d 2c 63 00 00 	lea    rdi,[rip+0x632c]        # d1bf <_IO_stdin_used+0x11bf>
    6e93:	b8 00 00 00 00       	mov    eax,0x0
    6e98:	e8 e3 b5 ff ff       	call   2480 <printf@plt>
    6e9d:	83 85 c8 fe ff ff 01 	add    DWORD PTR [rbp-0x138],0x1
    6ea4:	8b 05 72 a1 00 00    	mov    eax,DWORD PTR [rip+0xa172]        # 1101c <arp_entries>
    6eaa:	39 85 c8 fe ff ff    	cmp    DWORD PTR [rbp-0x138],eax
    6eb0:	7e 93                	jle    6e45 <sigint_processor+0x2fb>
    6eb2:	e9 da 00 00 00       	jmp    6f91 <sigint_processor+0x447>
    6eb7:	c7 85 cc fe ff ff 00 	mov    DWORD PTR [rbp-0x134],0x0
    6ebe:	00 00 00 
    6ec1:	eb 67                	jmp    6f2a <sigint_processor+0x3e0>
    6ec3:	8b 85 cc fe ff ff    	mov    eax,DWORD PTR [rbp-0x134]
    6ec9:	48 63 d0             	movsxd rdx,eax
    6ecc:	48 89 d0             	mov    rax,rdx
    6ecf:	48 c1 e0 04          	shl    rax,0x4
    6ed3:	48 01 d0             	add    rax,rdx
    6ed6:	48 01 c0             	add    rax,rax
    6ed9:	48 8d 50 10          	lea    rdx,[rax+0x10]
    6edd:	48 8d 05 3c 0e 10 00 	lea    rax,[rip+0x100e3c]        # 107d20 <arpcache>
    6ee4:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    6ee8:	8b 85 cc fe ff ff    	mov    eax,DWORD PTR [rbp-0x134]
    6eee:	48 63 d0             	movsxd rdx,eax
    6ef1:	48 89 d0             	mov    rax,rdx
    6ef4:	48 c1 e0 04          	shl    rax,0x4
    6ef8:	48 01 d0             	add    rax,rdx
    6efb:	48 01 c0             	add    rax,rax
    6efe:	48 8d 15 1b 0e 10 00 	lea    rdx,[rip+0x100e1b]        # 107d20 <arpcache>
    6f05:	48 01 c2             	add    rdx,rax
    6f08:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    6f0f:	48 8d 35 b3 62 00 00 	lea    rsi,[rip+0x62b3]        # d1c9 <_IO_stdin_used+0x11c9>
    6f16:	48 89 c7             	mov    rdi,rax
    6f19:	b8 00 00 00 00       	mov    eax,0x0
    6f1e:	e8 fd b8 ff ff       	call   2820 <fprintf@plt>
    6f23:	83 85 cc fe ff ff 01 	add    DWORD PTR [rbp-0x134],0x1
    6f2a:	8b 05 ec a0 00 00    	mov    eax,DWORD PTR [rip+0xa0ec]        # 1101c <arp_entries>
    6f30:	39 85 cc fe ff ff    	cmp    DWORD PTR [rbp-0x134],eax
    6f36:	7e 8b                	jle    6ec3 <sigint_processor+0x379>
    6f38:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    6f3f:	48 89 c7             	mov    rdi,rax
    6f42:	e8 69 b8 ff ff       	call   27b0 <fclose@plt>
    6f47:	c7 85 d0 fe ff ff 00 	mov    DWORD PTR [rbp-0x130],0x0
    6f4e:	00 00 00 
    6f51:	eb 2f                	jmp    6f82 <sigint_processor+0x438>
    6f53:	8b 85 d0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x130]
    6f59:	48 98                	cdqe   
    6f5b:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    6f62:	00 
    6f63:	48 8d 05 36 a1 00 00 	lea    rax,[rip+0xa136]        # 110a0 <threads>
    6f6a:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    6f6e:	be 00 00 00 00       	mov    esi,0x0
    6f73:	48 89 c7             	mov    rdi,rax
    6f76:	e8 f5 b4 ff ff       	call   2470 <pthread_join@plt>
    6f7b:	83 85 d0 fe ff ff 01 	add    DWORD PTR [rbp-0x130],0x1
    6f82:	8b 05 18 a3 00 00    	mov    eax,DWORD PTR [rip+0xa318]        # 112a0 <thread_count>
    6f88:	39 85 d0 fe ff ff    	cmp    DWORD PTR [rbp-0x130],eax
    6f8e:	7c c3                	jl     6f53 <sigint_processor+0x409>
    6f90:	90                   	nop
    6f91:	bf 00 00 00 00       	mov    edi,0x0
    6f96:	e8 65 b5 ff ff       	call   2500 <exit@plt>

0000000000006f9b <print_help_and_exit>:
    6f9b:	f3 0f 1e fa          	endbr64 
    6f9f:	55                   	push   rbp
    6fa0:	48 89 e5             	mov    rbp,rsp
    6fa3:	48 8d 35 26 62 00 00 	lea    rsi,[rip+0x6226]        # d1d0 <_IO_stdin_used+0x11d0>
    6faa:	48 8d 3d 27 62 00 00 	lea    rdi,[rip+0x6227]        # d1d8 <_IO_stdin_used+0x11d8>
    6fb1:	b8 00 00 00 00       	mov    eax,0x0
    6fb6:	e8 c5 b4 ff ff       	call   2480 <printf@plt>
    6fbb:	bf 00 00 00 00       	mov    edi,0x0
    6fc0:	e8 3b b5 ff ff       	call   2500 <exit@plt>

0000000000006fc5 <print_cpu_info>:
    6fc5:	f3 0f 1e fa          	endbr64 
    6fc9:	55                   	push   rbp
    6fca:	48 89 e5             	mov    rbp,rsp
    6fcd:	53                   	push   rbx
    6fce:	48 81 ec 48 02 00 00 	sub    rsp,0x248
    6fd5:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6fdc:	00 00 
    6fde:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    6fe2:	31 c0                	xor    eax,eax
    6fe4:	48 8d 35 74 62 00 00 	lea    rsi,[rip+0x6274]        # d25f <_IO_stdin_used+0x125f>
    6feb:	48 8d 3d 70 62 00 00 	lea    rdi,[rip+0x6270]        # d262 <_IO_stdin_used+0x1262>
    6ff2:	e8 79 b5 ff ff       	call   2570 <fopen@plt>
    6ff7:	48 89 85 d8 fd ff ff 	mov    QWORD PTR [rbp-0x228],rax
    6ffe:	48 c7 85 c8 fd ff ff 	mov    QWORD PTR [rbp-0x238],0x0
    7005:	00 00 00 00 
    7009:	48 c7 85 d0 fd ff ff 	mov    QWORD PTR [rbp-0x230],0x0
    7010:	00 00 00 00 
    7014:	c7 85 bc fd ff ff 00 	mov    DWORD PTR [rbp-0x244],0x0
    701b:	00 00 00 
    701e:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    7025:	ba 00 02 00 00       	mov    edx,0x200
    702a:	be 00 00 00 00       	mov    esi,0x0
    702f:	48 89 c7             	mov    rdi,rax
    7032:	e8 59 b4 ff ff       	call   2490 <memset@plt>
    7037:	e9 b3 00 00 00       	jmp    70ef <print_cpu_info+0x12a>
    703c:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    7043:	ba 0a 00 00 00       	mov    edx,0xa
    7048:	48 89 c6             	mov    rsi,rax
    704b:	48 8d 3d 1e 62 00 00 	lea    rdi,[rip+0x621e]        # d270 <_IO_stdin_used+0x1270>
    7052:	e8 f9 b4 ff ff       	call   2550 <strncmp@plt>
    7057:	85 c0                	test   eax,eax
    7059:	0f 85 90 00 00 00    	jne    70ef <print_cpu_info+0x12a>
    705f:	c7 85 c0 fd ff ff 00 	mov    DWORD PTR [rbp-0x240],0x0
    7066:	00 00 00 
    7069:	c7 85 c4 fd ff ff 00 	mov    DWORD PTR [rbp-0x23c],0x0
    7070:	00 00 00 
    7073:	eb 2e                	jmp    70a3 <print_cpu_info+0xde>
    7075:	48 8b 95 c8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x238]
    707c:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    7082:	48 98                	cdqe   
    7084:	48 01 d0             	add    rax,rdx
    7087:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    708a:	3c 3a                	cmp    al,0x3a
    708c:	75 0e                	jne    709c <print_cpu_info+0xd7>
    708e:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    7094:	89 85 c0 fd ff ff    	mov    DWORD PTR [rbp-0x240],eax
    709a:	eb 24                	jmp    70c0 <print_cpu_info+0xfb>
    709c:	83 85 c4 fd ff ff 01 	add    DWORD PTR [rbp-0x23c],0x1
    70a3:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    70a9:	48 63 d8             	movsxd rbx,eax
    70ac:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    70b3:	48 89 c7             	mov    rdi,rax
    70b6:	e8 45 b5 ff ff       	call   2600 <strlen@plt>
    70bb:	48 39 c3             	cmp    rbx,rax
    70be:	72 b5                	jb     7075 <print_cpu_info+0xb0>
    70c0:	83 85 bc fd ff ff 01 	add    DWORD PTR [rbp-0x244],0x1
    70c7:	48 8b 95 c8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x238]
    70ce:	8b 85 c0 fd ff ff    	mov    eax,DWORD PTR [rbp-0x240]
    70d4:	48 98                	cdqe   
    70d6:	48 83 c0 02          	add    rax,0x2
    70da:	48 01 c2             	add    rdx,rax
    70dd:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    70e4:	48 89 d6             	mov    rsi,rdx
    70e7:	48 89 c7             	mov    rdi,rax
    70ea:	e8 91 b5 ff ff       	call   2680 <strcat@plt>
    70ef:	48 8b 95 d8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x228]
    70f6:	48 8d b5 d0 fd ff ff 	lea    rsi,[rbp-0x230]
    70fd:	48 8d 85 c8 fd ff ff 	lea    rax,[rbp-0x238]
    7104:	48 89 d1             	mov    rcx,rdx
    7107:	ba 0a 00 00 00       	mov    edx,0xa
    710c:	48 89 c7             	mov    rdi,rax
    710f:	e8 2c b7 ff ff       	call   2840 <getdelim@plt>
    7114:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
    7118:	0f 85 1e ff ff ff    	jne    703c <print_cpu_info+0x77>
    711e:	48 8d 95 e0 fd ff ff 	lea    rdx,[rbp-0x220]
    7125:	8b 85 bc fd ff ff    	mov    eax,DWORD PTR [rbp-0x244]
    712b:	89 c6                	mov    esi,eax
    712d:	48 8d 3d 47 61 00 00 	lea    rdi,[rip+0x6147]        # d27b <_IO_stdin_used+0x127b>
    7134:	b8 00 00 00 00       	mov    eax,0x0
    7139:	e8 42 b3 ff ff       	call   2480 <printf@plt>
    713e:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    7145:	48 89 c7             	mov    rdi,rax
    7148:	e8 a3 b4 ff ff       	call   25f0 <free@plt>
    714d:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    7154:	48 89 c7             	mov    rdi,rax
    7157:	e8 54 b6 ff ff       	call   27b0 <fclose@plt>
    715c:	90                   	nop
    715d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7161:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    7168:	00 00 
    716a:	74 05                	je     7171 <print_cpu_info+0x1ac>
    716c:	e8 cf b5 ff ff       	call   2740 <__stack_chk_fail@plt>
    7171:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    7175:	c9                   	leave  
    7176:	c3                   	ret    

0000000000007177 <print_logo>:
    7177:	f3 0f 1e fa          	endbr64 
    717b:	55                   	push   rbp
    717c:	48 89 e5             	mov    rbp,rsp
    717f:	48 8d 3d 0a 61 00 00 	lea    rdi,[rip+0x610a]        # d290 <_IO_stdin_used+0x1290>
    7186:	e8 55 b3 ff ff       	call   24e0 <puts@plt>
    718b:	90                   	nop
    718c:	5d                   	pop    rbp
    718d:	c3                   	ret    

000000000000718e <start_nsh_server>:
    718e:	f3 0f 1e fa          	endbr64 
    7192:	55                   	push   rbp
    7193:	48 89 e5             	mov    rbp,rsp
    7196:	48 83 ec 10          	sub    rsp,0x10
    719a:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    71a1:	00 00 
    71a3:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    71a7:	31 c0                	xor    eax,eax
    71a9:	48 8d 45 f0          	lea    rax,[rbp-0x10]
    71ad:	b9 00 00 00 00       	mov    ecx,0x0
    71b2:	48 8d 15 71 00 00 00 	lea    rdx,[rip+0x71]        # 722a <actually_start_nsh_server>
    71b9:	be 00 00 00 00       	mov    esi,0x0
    71be:	48 89 c7             	mov    rdi,rax
    71c1:	e8 0a b4 ff ff       	call   25d0 <pthread_create@plt>
    71c6:	90                   	nop
    71c7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    71cb:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    71d2:	00 00 
    71d4:	74 05                	je     71db <start_nsh_server+0x4d>
    71d6:	e8 65 b5 ff ff       	call   2740 <__stack_chk_fail@plt>
    71db:	c9                   	leave  
    71dc:	c3                   	ret    

00000000000071dd <rnstrip>:
    71dd:	f3 0f 1e fa          	endbr64 
    71e1:	55                   	push   rbp
    71e2:	48 89 e5             	mov    rbp,rsp
    71e5:	48 83 ec 10          	sub    rsp,0x10
    71e9:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    71ed:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    71f1:	48 8d 35 10 62 00 00 	lea    rsi,[rip+0x6210]        # d408 <_IO_stdin_used+0x1408>
    71f8:	48 89 c7             	mov    rdi,rax
    71fb:	e8 d0 b5 ff ff       	call   27d0 <strcspn@plt>
    7200:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    7204:	48 01 d0             	add    rax,rdx
    7207:	c6 00 00             	mov    BYTE PTR [rax],0x0
    720a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    720e:	48 8d 35 f5 61 00 00 	lea    rsi,[rip+0x61f5]        # d40a <_IO_stdin_used+0x140a>
    7215:	48 89 c7             	mov    rdi,rax
    7218:	e8 b3 b5 ff ff       	call   27d0 <strcspn@plt>
    721d:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    7221:	48 01 d0             	add    rax,rdx
    7224:	c6 00 00             	mov    BYTE PTR [rax],0x0
    7227:	90                   	nop
    7228:	c9                   	leave  
    7229:	c3                   	ret    

000000000000722a <actually_start_nsh_server>:
    722a:	f3 0f 1e fa          	endbr64 
    722e:	55                   	push   rbp
    722f:	48 89 e5             	mov    rbp,rsp
    7232:	48 83 ec 50          	sub    rsp,0x50
    7236:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    723d:	00 00 
    723f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7243:	31 c0                	xor    eax,eax
    7245:	c7 45 bc 10 00 00 00 	mov    DWORD PTR [rbp-0x44],0x10
    724c:	ba 00 00 00 00       	mov    edx,0x0
    7251:	be 01 00 00 00       	mov    esi,0x1
    7256:	bf 02 00 00 00       	mov    edi,0x2
    725b:	e8 c0 b4 ff ff       	call   2720 <socket@plt>
    7260:	89 45 c0             	mov    DWORD PTR [rbp-0x40],eax
    7263:	83 7d c0 00          	cmp    DWORD PTR [rbp-0x40],0x0
    7267:	75 16                	jne    727f <actually_start_nsh_server+0x55>
    7269:	48 8d 3d a0 61 00 00 	lea    rdi,[rip+0x61a0]        # d410 <_IO_stdin_used+0x1410>
    7270:	e8 6b b2 ff ff       	call   24e0 <puts@plt>
    7275:	bf 01 00 00 00       	mov    edi,0x1
    727a:	e8 81 b2 ff ff       	call   2500 <exit@plt>
    727f:	48 8d 55 bc          	lea    rdx,[rbp-0x44]
    7283:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    7286:	41 b8 04 00 00 00    	mov    r8d,0x4
    728c:	48 89 d1             	mov    rcx,rdx
    728f:	ba 02 00 00 00       	mov    edx,0x2
    7294:	be 01 00 00 00       	mov    esi,0x1
    7299:	89 c7                	mov    edi,eax
    729b:	e8 00 b3 ff ff       	call   25a0 <setsockopt@plt>
    72a0:	85 c0                	test   eax,eax
    72a2:	74 16                	je     72ba <actually_start_nsh_server+0x90>
    72a4:	48 8d 3d 8d 61 00 00 	lea    rdi,[rip+0x618d]        # d438 <_IO_stdin_used+0x1438>
    72ab:	e8 30 b2 ff ff       	call   24e0 <puts@plt>
    72b0:	bf 01 00 00 00       	mov    edi,0x1
    72b5:	e8 46 b2 ff ff       	call   2500 <exit@plt>
    72ba:	66 c7 45 e0 02 00    	mov    WORD PTR [rbp-0x20],0x2
    72c0:	bf 00 00 00 00       	mov    edi,0x0
    72c5:	e8 36 b5 ff ff       	call   2800 <htonl@plt>
    72ca:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
    72cd:	bf 81 02 00 00       	mov    edi,0x281
    72d2:	e8 19 b2 ff ff       	call   24f0 <htons@plt>
    72d7:	66 89 45 e2          	mov    WORD PTR [rbp-0x1e],ax
    72db:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
    72df:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    72e2:	ba 10 00 00 00       	mov    edx,0x10
    72e7:	48 89 ce             	mov    rsi,rcx
    72ea:	89 c7                	mov    edi,eax
    72ec:	e8 ef b4 ff ff       	call   27e0 <bind@plt>
    72f1:	85 c0                	test   eax,eax
    72f3:	79 16                	jns    730b <actually_start_nsh_server+0xe1>
    72f5:	48 8d 3d 64 61 00 00 	lea    rdi,[rip+0x6164]        # d460 <_IO_stdin_used+0x1460>
    72fc:	e8 df b1 ff ff       	call   24e0 <puts@plt>
    7301:	bf 01 00 00 00       	mov    edi,0x1
    7306:	e8 f5 b1 ff ff       	call   2500 <exit@plt>
    730b:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    730e:	be 05 00 00 00       	mov    esi,0x5
    7313:	89 c7                	mov    edi,eax
    7315:	e8 f6 b2 ff ff       	call   2610 <listen@plt>
    731a:	85 c0                	test   eax,eax
    731c:	79 16                	jns    7334 <actually_start_nsh_server+0x10a>
    731e:	48 8d 3d 73 61 00 00 	lea    rdi,[rip+0x6173]        # d498 <_IO_stdin_used+0x1498>
    7325:	e8 b6 b1 ff ff       	call   24e0 <puts@plt>
    732a:	bf 01 00 00 00       	mov    edi,0x1
    732f:	e8 cc b1 ff ff       	call   2500 <exit@plt>
    7334:	48 8d 55 bc          	lea    rdx,[rbp-0x44]
    7338:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
    733c:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    733f:	48 89 ce             	mov    rsi,rcx
    7342:	89 c7                	mov    edi,eax
    7344:	e8 07 b5 ff ff       	call   2850 <accept@plt>
    7349:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    734c:	83 7d c4 00          	cmp    DWORD PTR [rbp-0x3c],0x0
    7350:	79 20                	jns    7372 <actually_start_nsh_server+0x148>
    7352:	b8 00 00 00 00       	mov    eax,0x0
    7357:	e8 e3 bf ff ff       	call   333f <get_formated_time>
    735c:	48 89 c6             	mov    rsi,rax
    735f:	48 8d 3d 62 61 00 00 	lea    rdi,[rip+0x6162]        # d4c8 <_IO_stdin_used+0x14c8>
    7366:	b8 00 00 00 00       	mov    eax,0x0
    736b:	e8 10 b1 ff ff       	call   2480 <printf@plt>
    7370:	eb c2                	jmp    7334 <actually_start_nsh_server+0x10a>
    7372:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    7375:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
    7378:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    737c:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    7380:	48 8d 55 d0          	lea    rdx,[rbp-0x30]
    7384:	48 8d 45 c8          	lea    rax,[rbp-0x38]
    7388:	48 89 d1             	mov    rcx,rdx
    738b:	48 8d 15 0f 00 00 00 	lea    rdx,[rip+0xf]        # 73a1 <accept_cmd>
    7392:	be 00 00 00 00       	mov    esi,0x0
    7397:	48 89 c7             	mov    rdi,rax
    739a:	e8 31 b2 ff ff       	call   25d0 <pthread_create@plt>
    739f:	eb 93                	jmp    7334 <actually_start_nsh_server+0x10a>

00000000000073a1 <accept_cmd>:
    73a1:	f3 0f 1e fa          	endbr64 
    73a5:	55                   	push   rbp
    73a6:	48 89 e5             	mov    rbp,rsp
    73a9:	48 83 ec 30          	sub    rsp,0x30
    73ad:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    73b1:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    73b5:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    73b9:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    73bd:	8b 00                	mov    eax,DWORD PTR [rax]
    73bf:	64 48 8b 14 25 00 00 	mov    rdx,QWORD PTR fs:0x0
    73c6:	00 00 
    73c8:	48 8d 8a 00 fc ff ff 	lea    rcx,[rdx-0x400]
    73cf:	ba 00 04 00 00       	mov    edx,0x400
    73d4:	48 89 ce             	mov    rsi,rcx
    73d7:	89 c7                	mov    edi,eax
    73d9:	e8 62 b1 ff ff       	call   2540 <read@plt>
    73de:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
    73e1:	83 7d ec 00          	cmp    DWORD PTR [rbp-0x14],0x0
    73e5:	7e 32                	jle    7419 <accept_cmd+0x78>
    73e7:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    73ee:	00 00 
    73f0:	48 05 00 fc ff ff    	add    rax,0xfffffffffffffc00
    73f6:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    73fa:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    73fe:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    7401:	0f b6 c0             	movzx  eax,al
    7404:	89 c6                	mov    esi,eax
    7406:	48 8d 3d dd 60 00 00 	lea    rdi,[rip+0x60dd]        # d4ea <_IO_stdin_used+0x14ea>
    740d:	b8 00 00 00 00       	mov    eax,0x0
    7412:	e8 69 b0 ff ff       	call   2480 <printf@plt>
    7417:	eb a0                	jmp    73b9 <accept_cmd+0x18>
    7419:	90                   	nop
    741a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    741e:	8b 00                	mov    eax,DWORD PTR [rax]
    7420:	89 c7                	mov    edi,eax
    7422:	e8 99 b0 ff ff       	call   24c0 <close@plt>
    7427:	90                   	nop
    7428:	c9                   	leave  
    7429:	c3                   	ret    

000000000000742a <tcp_rst_portscan_detect>:
    742a:	f3 0f 1e fa          	endbr64 
    742e:	55                   	push   rbp
    742f:	48 89 e5             	mov    rbp,rsp
    7432:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    7439:	48 89 bd c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rdi
    7440:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7447:	00 00 
    7449:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    744d:	31 c0                	xor    eax,eax
    744f:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    7456:	00 00 00 
    7459:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7460:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    7466:	83 f8 1e             	cmp    eax,0x1e
    7469:	74 0a                	je     7475 <tcp_rst_portscan_detect+0x4b>
    746b:	b8 00 00 00 00       	mov    eax,0x0
    7470:	e9 8d 01 00 00       	jmp    7602 <tcp_rst_portscan_detect+0x1d8>
    7475:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    747c:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    7482:	83 e8 01             	sub    eax,0x1
    7485:	89 85 d8 fe ff ff    	mov    DWORD PTR [rbp-0x128],eax
    748b:	eb 6c                	jmp    74f9 <tcp_rst_portscan_detect+0xcf>
    748d:	8b 85 d8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x128]
    7493:	89 85 e4 fe ff ff    	mov    DWORD PTR [rbp-0x11c],eax
    7499:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    74a0:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    74a6:	48 63 d2             	movsxd rdx,edx
    74a9:	48 83 c2 28          	add    rdx,0x28
    74ad:	48 8b 44 d0 10       	mov    rax,QWORD PTR [rax+rdx*8+0x10]
    74b2:	89 c1                	mov    ecx,eax
    74b4:	83 ad d8 fe ff ff 01 	sub    DWORD PTR [rbp-0x128],0x1
    74bb:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    74c2:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    74c8:	48 63 d2             	movsxd rdx,edx
    74cb:	48 83 c2 28          	add    rdx,0x28
    74cf:	48 8b 44 d0 10       	mov    rax,QWORD PTR [rax+rdx*8+0x10]
    74d4:	29 c1                	sub    ecx,eax
    74d6:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
    74dc:	8d 50 01             	lea    edx,[rax+0x1]
    74df:	89 95 d4 fe ff ff    	mov    DWORD PTR [rbp-0x12c],edx
    74e5:	89 ca                	mov    edx,ecx
    74e7:	48 98                	cdqe   
    74e9:	89 94 85 f0 fe ff ff 	mov    DWORD PTR [rbp+rax*4-0x110],edx
    74f0:	83 bd e4 fe ff ff 01 	cmp    DWORD PTR [rbp-0x11c],0x1
    74f7:	74 0b                	je     7504 <tcp_rst_portscan_detect+0xda>
    74f9:	83 bd d8 fe ff ff 00 	cmp    DWORD PTR [rbp-0x128],0x0
    7500:	75 8b                	jne    748d <tcp_rst_portscan_detect+0x63>
    7502:	eb 01                	jmp    7505 <tcp_rst_portscan_detect+0xdb>
    7504:	90                   	nop
    7505:	c7 85 dc fe ff ff 00 	mov    DWORD PTR [rbp-0x124],0x0
    750c:	00 00 00 
    750f:	c7 85 e0 fe ff ff 00 	mov    DWORD PTR [rbp-0x120],0x0
    7516:	00 00 00 
    7519:	eb 24                	jmp    753f <tcp_rst_portscan_detect+0x115>
    751b:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    7521:	48 98                	cdqe   
    7523:	8b 84 85 f0 fe ff ff 	mov    eax,DWORD PTR [rbp+rax*4-0x110]
    752a:	3d b3 b7 b4 00       	cmp    eax,0xb4b7b3
    752f:	7f 07                	jg     7538 <tcp_rst_portscan_detect+0x10e>
    7531:	83 85 dc fe ff ff 01 	add    DWORD PTR [rbp-0x124],0x1
    7538:	83 85 e0 fe ff ff 01 	add    DWORD PTR [rbp-0x120],0x1
    753f:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    7545:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    754b:	7c ce                	jl     751b <tcp_rst_portscan_detect+0xf1>
    754d:	8b 85 dc fe ff ff    	mov    eax,DWORD PTR [rbp-0x124]
    7553:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    7559:	0f 85 9e 00 00 00    	jne    75fd <tcp_rst_portscan_detect+0x1d3>
    755f:	48 8b 05 ca 9a 00 00 	mov    rax,QWORD PTR [rip+0x9aca]        # 11030 <def_log_file>
    7566:	48 8d 35 8b 5f 00 00 	lea    rsi,[rip+0x5f8b]        # d4f8 <_IO_stdin_used+0x14f8>
    756d:	48 89 c7             	mov    rdi,rax
    7570:	e8 fb af ff ff       	call   2570 <fopen@plt>
    7575:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
    757c:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7583:	48 83 c0 08          	add    rax,0x8
    7587:	48 89 c6             	mov    rsi,rax
    758a:	48 8d 3d 6f 5f 00 00 	lea    rdi,[rip+0x5f6f]        # d500 <_IO_stdin_used+0x1500>
    7591:	b8 00 00 00 00       	mov    eax,0x0
    7596:	e8 e5 ae ff ff       	call   2480 <printf@plt>
    759b:	b8 00 00 00 00       	mov    eax,0x0
    75a0:	e8 9a bd ff ff       	call   333f <get_formated_time>
    75a5:	48 89 c1             	mov    rcx,rax
    75a8:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    75af:	48 8d 50 08          	lea    rdx,[rax+0x8]
    75b3:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    75ba:	48 8d 35 6f 5f 00 00 	lea    rsi,[rip+0x5f6f]        # d530 <_IO_stdin_used+0x1530>
    75c1:	48 89 c7             	mov    rdi,rax
    75c4:	b8 00 00 00 00       	mov    eax,0x0
    75c9:	e8 52 b0 ff ff       	call   2620 <sprintf@plt>
    75ce:	48 8b 95 e8 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x118]
    75d5:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    75dc:	48 89 d6             	mov    rsi,rdx
    75df:	48 89 c7             	mov    rdi,rax
    75e2:	e8 a9 b0 ff ff       	call   2690 <fputs@plt>
    75e7:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    75ee:	48 89 c7             	mov    rdi,rax
    75f1:	e8 ba b1 ff ff       	call   27b0 <fclose@plt>
    75f6:	b8 01 00 00 00       	mov    eax,0x1
    75fb:	eb 05                	jmp    7602 <tcp_rst_portscan_detect+0x1d8>
    75fd:	b8 00 00 00 00       	mov    eax,0x0
    7602:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    7606:	64 48 2b 34 25 28 00 	sub    rsi,QWORD PTR fs:0x28
    760d:	00 00 
    760f:	74 05                	je     7616 <tcp_rst_portscan_detect+0x1ec>
    7611:	e8 2a b1 ff ff       	call   2740 <__stack_chk_fail@plt>
    7616:	c9                   	leave  
    7617:	c3                   	ret    

0000000000007618 <fin_rst_portscan_detect>:
    7618:	f3 0f 1e fa          	endbr64 
    761c:	55                   	push   rbp
    761d:	48 89 e5             	mov    rbp,rsp
    7620:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    7627:	48 89 bd c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rdi
    762e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7635:	00 00 
    7637:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    763b:	31 c0                	xor    eax,eax
    763d:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    7644:	00 00 00 
    7647:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    764e:	8b 40 50             	mov    eax,DWORD PTR [rax+0x50]
    7651:	83 f8 1e             	cmp    eax,0x1e
    7654:	74 0a                	je     7660 <fin_rst_portscan_detect+0x48>
    7656:	b8 00 00 00 00       	mov    eax,0x0
    765b:	e9 8a 01 00 00       	jmp    77ea <fin_rst_portscan_detect+0x1d2>
    7660:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7667:	8b 40 50             	mov    eax,DWORD PTR [rax+0x50]
    766a:	83 e8 01             	sub    eax,0x1
    766d:	89 85 d8 fe ff ff    	mov    DWORD PTR [rbp-0x128],eax
    7673:	eb 6c                	jmp    76e1 <fin_rst_portscan_detect+0xc9>
    7675:	8b 85 d8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x128]
    767b:	89 85 e4 fe ff ff    	mov    DWORD PTR [rbp-0x11c],eax
    7681:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7688:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    768e:	48 63 d2             	movsxd rdx,edx
    7691:	48 83 c2 0a          	add    rdx,0xa
    7695:	48 8b 44 d0 08       	mov    rax,QWORD PTR [rax+rdx*8+0x8]
    769a:	89 c1                	mov    ecx,eax
    769c:	83 ad d8 fe ff ff 01 	sub    DWORD PTR [rbp-0x128],0x1
    76a3:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    76aa:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    76b0:	48 63 d2             	movsxd rdx,edx
    76b3:	48 83 c2 0a          	add    rdx,0xa
    76b7:	48 8b 44 d0 08       	mov    rax,QWORD PTR [rax+rdx*8+0x8]
    76bc:	29 c1                	sub    ecx,eax
    76be:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
    76c4:	8d 50 01             	lea    edx,[rax+0x1]
    76c7:	89 95 d4 fe ff ff    	mov    DWORD PTR [rbp-0x12c],edx
    76cd:	89 ca                	mov    edx,ecx
    76cf:	48 98                	cdqe   
    76d1:	89 94 85 f0 fe ff ff 	mov    DWORD PTR [rbp+rax*4-0x110],edx
    76d8:	83 bd e4 fe ff ff 01 	cmp    DWORD PTR [rbp-0x11c],0x1
    76df:	74 0b                	je     76ec <fin_rst_portscan_detect+0xd4>
    76e1:	83 bd d8 fe ff ff 00 	cmp    DWORD PTR [rbp-0x128],0x0
    76e8:	75 8b                	jne    7675 <fin_rst_portscan_detect+0x5d>
    76ea:	eb 01                	jmp    76ed <fin_rst_portscan_detect+0xd5>
    76ec:	90                   	nop
    76ed:	c7 85 dc fe ff ff 00 	mov    DWORD PTR [rbp-0x124],0x0
    76f4:	00 00 00 
    76f7:	c7 85 e0 fe ff ff 00 	mov    DWORD PTR [rbp-0x120],0x0
    76fe:	00 00 00 
    7701:	eb 24                	jmp    7727 <fin_rst_portscan_detect+0x10f>
    7703:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    7709:	48 98                	cdqe   
    770b:	8b 84 85 f0 fe ff ff 	mov    eax,DWORD PTR [rbp+rax*4-0x110]
    7712:	3d 73 7e e2 00       	cmp    eax,0xe27e73
    7717:	7f 07                	jg     7720 <fin_rst_portscan_detect+0x108>
    7719:	83 85 dc fe ff ff 01 	add    DWORD PTR [rbp-0x124],0x1
    7720:	83 85 e0 fe ff ff 01 	add    DWORD PTR [rbp-0x120],0x1
    7727:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    772d:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    7733:	7c ce                	jl     7703 <fin_rst_portscan_detect+0xeb>
    7735:	8b 85 dc fe ff ff    	mov    eax,DWORD PTR [rbp-0x124]
    773b:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    7741:	0f 85 9e 00 00 00    	jne    77e5 <fin_rst_portscan_detect+0x1cd>
    7747:	48 8b 05 e2 98 00 00 	mov    rax,QWORD PTR [rip+0x98e2]        # 11030 <def_log_file>
    774e:	48 8d 35 a3 5d 00 00 	lea    rsi,[rip+0x5da3]        # d4f8 <_IO_stdin_used+0x14f8>
    7755:	48 89 c7             	mov    rdi,rax
    7758:	e8 13 ae ff ff       	call   2570 <fopen@plt>
    775d:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
    7764:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    776b:	48 83 c0 08          	add    rax,0x8
    776f:	48 89 c6             	mov    rsi,rax
    7772:	48 8d 3d df 5d 00 00 	lea    rdi,[rip+0x5ddf]        # d558 <_IO_stdin_used+0x1558>
    7779:	b8 00 00 00 00       	mov    eax,0x0
    777e:	e8 fd ac ff ff       	call   2480 <printf@plt>
    7783:	b8 00 00 00 00       	mov    eax,0x0
    7788:	e8 b2 bb ff ff       	call   333f <get_formated_time>
    778d:	48 89 c1             	mov    rcx,rax
    7790:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7797:	48 8d 50 08          	lea    rdx,[rax+0x8]
    779b:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    77a2:	48 8d 35 df 5d 00 00 	lea    rsi,[rip+0x5ddf]        # d588 <_IO_stdin_used+0x1588>
    77a9:	48 89 c7             	mov    rdi,rax
    77ac:	b8 00 00 00 00       	mov    eax,0x0
    77b1:	e8 6a ae ff ff       	call   2620 <sprintf@plt>
    77b6:	48 8b 95 e8 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x118]
    77bd:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    77c4:	48 89 d6             	mov    rsi,rdx
    77c7:	48 89 c7             	mov    rdi,rax
    77ca:	e8 c1 ae ff ff       	call   2690 <fputs@plt>
    77cf:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    77d6:	48 89 c7             	mov    rdi,rax
    77d9:	e8 d2 af ff ff       	call   27b0 <fclose@plt>
    77de:	b8 01 00 00 00       	mov    eax,0x1
    77e3:	eb 05                	jmp    77ea <fin_rst_portscan_detect+0x1d2>
    77e5:	b8 00 00 00 00       	mov    eax,0x0
    77ea:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    77ee:	64 48 2b 34 25 28 00 	sub    rsi,QWORD PTR fs:0x28
    77f5:	00 00 
    77f7:	74 05                	je     77fe <fin_rst_portscan_detect+0x1e6>
    77f9:	e8 42 af ff ff       	call   2740 <__stack_chk_fail@plt>
    77fe:	c9                   	leave  
    77ff:	c3                   	ret    

0000000000007800 <member_ready_for_scan>:
    7800:	f3 0f 1e fa          	endbr64 
    7804:	55                   	push   rbp
    7805:	48 89 e5             	mov    rbp,rsp
    7808:	48 83 ec 10          	sub    rsp,0x10
    780c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    7813:	eb 48                	jmp    785d <member_ready_for_scan+0x5d>
    7815:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    7818:	48 63 d0             	movsxd rdx,eax
    781b:	48 89 d0             	mov    rax,rdx
    781e:	48 c1 e0 02          	shl    rax,0x2
    7822:	48 01 d0             	add    rax,rdx
    7825:	48 c1 e0 03          	shl    rax,0x3
    7829:	48 01 d0             	add    rax,rdx
    782c:	48 c1 e0 04          	shl    rax,0x4
    7830:	48 8d 15 e9 bc 0e 00 	lea    rdx,[rip+0xebce9]        # f3520 <watchlist>
    7837:	48 01 d0             	add    rax,rdx
    783a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    783e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7842:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    7848:	83 f8 1d             	cmp    eax,0x1d
    784b:	76 0c                	jbe    7859 <member_ready_for_scan+0x59>
    784d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7851:	48 89 c7             	mov    rdi,rax
    7854:	e8 d1 fb ff ff       	call   742a <tcp_rst_portscan_detect>
    7859:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    785d:	8b 05 b5 97 00 00    	mov    eax,DWORD PTR [rip+0x97b5]        # 11018 <watchlist_num>
    7863:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    7866:	7e ad                	jle    7815 <member_ready_for_scan+0x15>
    7868:	90                   	nop
    7869:	90                   	nop
    786a:	c9                   	leave  
    786b:	c3                   	ret    

000000000000786c <member_exists>:
    786c:	f3 0f 1e fa          	endbr64 
    7870:	55                   	push   rbp
    7871:	48 89 e5             	mov    rbp,rsp
    7874:	48 83 ec 20          	sub    rsp,0x20
    7878:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    787c:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7883:	eb 47                	jmp    78cc <member_exists+0x60>
    7885:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7888:	8d 50 01             	lea    edx,[rax+0x1]
    788b:	89 55 fc             	mov    DWORD PTR [rbp-0x4],edx
    788e:	48 63 d0             	movsxd rdx,eax
    7891:	48 89 d0             	mov    rax,rdx
    7894:	48 c1 e0 02          	shl    rax,0x2
    7898:	48 01 d0             	add    rax,rdx
    789b:	48 c1 e0 03          	shl    rax,0x3
    789f:	48 01 d0             	add    rax,rdx
    78a2:	48 c1 e0 04          	shl    rax,0x4
    78a6:	48 8d 15 73 bc 0e 00 	lea    rdx,[rip+0xebc73]        # f3520 <watchlist>
    78ad:	48 01 d0             	add    rax,rdx
    78b0:	48 8d 50 08          	lea    rdx,[rax+0x8]
    78b4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    78b8:	48 89 c6             	mov    rsi,rax
    78bb:	48 89 d7             	mov    rdi,rdx
    78be:	e8 8d ae ff ff       	call   2750 <strcmp@plt>
    78c3:	85 c0                	test   eax,eax
    78c5:	75 05                	jne    78cc <member_exists+0x60>
    78c7:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    78ca:	eb 10                	jmp    78dc <member_exists+0x70>
    78cc:	8b 05 46 97 00 00    	mov    eax,DWORD PTR [rip+0x9746]        # 11018 <watchlist_num>
    78d2:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    78d5:	7e ae                	jle    7885 <member_exists+0x19>
    78d7:	b8 ff ff ff ff       	mov    eax,0xffffffff
    78dc:	c9                   	leave  
    78dd:	c3                   	ret    

00000000000078de <init_member>:
    78de:	f3 0f 1e fa          	endbr64 
    78e2:	55                   	push   rbp
    78e3:	48 89 e5             	mov    rbp,rsp
    78e6:	48 83 ec 20          	sub    rsp,0x20
    78ea:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    78ee:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    78f2:	48 89 c7             	mov    rdi,rax
    78f5:	e8 72 ff ff ff       	call   786c <member_exists>
    78fa:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    78fd:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    7901:	74 42                	je     7945 <init_member+0x67>
    7903:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    7906:	48 63 d0             	movsxd rdx,eax
    7909:	48 89 d0             	mov    rax,rdx
    790c:	48 c1 e0 02          	shl    rax,0x2
    7910:	48 01 d0             	add    rax,rdx
    7913:	48 c1 e0 03          	shl    rax,0x3
    7917:	48 01 d0             	add    rax,rdx
    791a:	48 c1 e0 04          	shl    rax,0x4
    791e:	48 8d 15 fb bb 0e 00 	lea    rdx,[rip+0xebbfb]        # f3520 <watchlist>
    7925:	48 01 d0             	add    rax,rdx
    7928:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    792c:	bf 00 00 00 00       	mov    edi,0x0
    7931:	e8 3a af ff ff       	call   2870 <time@plt>
    7936:	48 89 c2             	mov    rdx,rax
    7939:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    793d:	48 89 10             	mov    QWORD PTR [rax],rdx
    7940:	e9 a8 00 00 00       	jmp    79ed <init_member+0x10f>
    7945:	48 8d 3d 61 5c 00 00 	lea    rdi,[rip+0x5c61]        # d5ad <_IO_stdin_used+0x15ad>
    794c:	e8 1b ff ff ff       	call   786c <member_exists>
    7951:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    7954:	83 7d f4 00          	cmp    DWORD PTR [rbp-0xc],0x0
    7958:	74 2b                	je     7985 <init_member+0xa7>
    795a:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    795d:	48 63 d0             	movsxd rdx,eax
    7960:	48 89 d0             	mov    rax,rdx
    7963:	48 c1 e0 02          	shl    rax,0x2
    7967:	48 01 d0             	add    rax,rdx
    796a:	48 c1 e0 03          	shl    rax,0x3
    796e:	48 01 d0             	add    rax,rdx
    7971:	48 c1 e0 04          	shl    rax,0x4
    7975:	48 8d 15 a4 bb 0e 00 	lea    rdx,[rip+0xebba4]        # f3520 <watchlist>
    797c:	48 01 d0             	add    rax,rdx
    797f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7983:	eb 3b                	jmp    79c0 <init_member+0xe2>
    7985:	8b 05 8d 96 00 00    	mov    eax,DWORD PTR [rip+0x968d]        # 11018 <watchlist_num>
    798b:	83 c0 01             	add    eax,0x1
    798e:	89 05 84 96 00 00    	mov    DWORD PTR [rip+0x9684],eax        # 11018 <watchlist_num>
    7994:	8b 05 7e 96 00 00    	mov    eax,DWORD PTR [rip+0x967e]        # 11018 <watchlist_num>
    799a:	48 63 d0             	movsxd rdx,eax
    799d:	48 89 d0             	mov    rax,rdx
    79a0:	48 c1 e0 02          	shl    rax,0x2
    79a4:	48 01 d0             	add    rax,rdx
    79a7:	48 c1 e0 03          	shl    rax,0x3
    79ab:	48 01 d0             	add    rax,rdx
    79ae:	48 c1 e0 04          	shl    rax,0x4
    79b2:	48 8d 15 67 bb 0e 00 	lea    rdx,[rip+0xebb67]        # f3520 <watchlist>
    79b9:	48 01 d0             	add    rax,rdx
    79bc:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    79c0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    79c4:	ba 08 00 00 00       	mov    edx,0x8
    79c9:	be 00 00 00 00       	mov    esi,0x0
    79ce:	48 89 c7             	mov    rdi,rax
    79d1:	e8 ba aa ff ff       	call   2490 <memset@plt>
    79d6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    79da:	48 8d 50 08          	lea    rdx,[rax+0x8]
    79de:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    79e2:	48 89 c6             	mov    rsi,rax
    79e5:	48 89 d7             	mov    rdi,rdx
    79e8:	e8 83 ad ff ff       	call   2770 <strcpy@plt>
    79ed:	c9                   	leave  
    79ee:	c3                   	ret    

00000000000079ef <ready_for_clean>:
    79ef:	f3 0f 1e fa          	endbr64 
    79f3:	55                   	push   rbp
    79f4:	48 89 e5             	mov    rbp,rsp
    79f7:	48 83 ec 10          	sub    rsp,0x10
    79fb:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    79ff:	bf 00 00 00 00       	mov    edi,0x0
    7a04:	e8 67 ae ff ff       	call   2870 <time@plt>
    7a09:	48 89 c2             	mov    rdx,rax
    7a0c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7a10:	48 8b 00             	mov    rax,QWORD PTR [rax]
    7a13:	48 29 c2             	sub    rdx,rax
    7a16:	48 8b 05 9b 98 00 00 	mov    rax,QWORD PTR [rip+0x989b]        # 112b8 <clean_delay>
    7a1d:	48 39 c2             	cmp    rdx,rax
    7a20:	72 22                	jb     7a44 <ready_for_clean+0x55>
    7a22:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7a26:	48 83 c0 08          	add    rax,0x8
    7a2a:	48 8d 35 84 5b 00 00 	lea    rsi,[rip+0x5b84]        # d5b5 <_IO_stdin_used+0x15b5>
    7a31:	48 89 c7             	mov    rdi,rax
    7a34:	e8 17 ad ff ff       	call   2750 <strcmp@plt>
    7a39:	85 c0                	test   eax,eax
    7a3b:	74 07                	je     7a44 <ready_for_clean+0x55>
    7a3d:	b8 01 00 00 00       	mov    eax,0x1
    7a42:	eb 05                	jmp    7a49 <ready_for_clean+0x5a>
    7a44:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7a49:	c9                   	leave  
    7a4a:	c3                   	ret    

0000000000007a4b <clean>:
    7a4b:	f3 0f 1e fa          	endbr64 
    7a4f:	55                   	push   rbp
    7a50:	48 89 e5             	mov    rbp,rsp
    7a53:	48 83 ec 10          	sub    rsp,0x10
    7a57:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7a5b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7a5f:	ba 08 00 00 00       	mov    edx,0x8
    7a64:	be 00 00 00 00       	mov    esi,0x0
    7a69:	48 89 c7             	mov    rdi,rax
    7a6c:	e8 1f aa ff ff       	call   2490 <memset@plt>
    7a71:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7a75:	48 83 c0 08          	add    rax,0x8
    7a79:	48 b9 30 2e 30 2e 30 	movabs rcx,0x312e302e302e30
    7a80:	2e 31 00 
    7a83:	48 89 08             	mov    QWORD PTR [rax],rcx
    7a86:	90                   	nop
    7a87:	c9                   	leave  
    7a88:	c3                   	ret    

0000000000007a89 <scan_for_clean>:
    7a89:	f3 0f 1e fa          	endbr64 
    7a8d:	55                   	push   rbp
    7a8e:	48 89 e5             	mov    rbp,rsp
    7a91:	48 83 ec 10          	sub    rsp,0x10
    7a95:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7a9c:	eb 62                	jmp    7b00 <scan_for_clean+0x77>
    7a9e:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7aa1:	48 63 d0             	movsxd rdx,eax
    7aa4:	48 89 d0             	mov    rax,rdx
    7aa7:	48 c1 e0 02          	shl    rax,0x2
    7aab:	48 01 d0             	add    rax,rdx
    7aae:	48 c1 e0 03          	shl    rax,0x3
    7ab2:	48 01 d0             	add    rax,rdx
    7ab5:	48 c1 e0 04          	shl    rax,0x4
    7ab9:	48 8d 15 60 ba 0e 00 	lea    rdx,[rip+0xeba60]        # f3520 <watchlist>
    7ac0:	48 01 d0             	add    rax,rdx
    7ac3:	48 89 c7             	mov    rdi,rax
    7ac6:	e8 24 ff ff ff       	call   79ef <ready_for_clean>
    7acb:	85 c0                	test   eax,eax
    7acd:	7e 2d                	jle    7afc <scan_for_clean+0x73>
    7acf:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7ad2:	48 63 d0             	movsxd rdx,eax
    7ad5:	48 89 d0             	mov    rax,rdx
    7ad8:	48 c1 e0 02          	shl    rax,0x2
    7adc:	48 01 d0             	add    rax,rdx
    7adf:	48 c1 e0 03          	shl    rax,0x3
    7ae3:	48 01 d0             	add    rax,rdx
    7ae6:	48 c1 e0 04          	shl    rax,0x4
    7aea:	48 8d 15 2f ba 0e 00 	lea    rdx,[rip+0xeba2f]        # f3520 <watchlist>
    7af1:	48 01 d0             	add    rax,rdx
    7af4:	48 89 c7             	mov    rdi,rax
    7af7:	e8 4f ff ff ff       	call   7a4b <clean>
    7afc:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    7b00:	8b 05 12 95 00 00    	mov    eax,DWORD PTR [rip+0x9512]        # 11018 <watchlist_num>
    7b06:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7b09:	7e 93                	jle    7a9e <scan_for_clean+0x15>
    7b0b:	90                   	nop
    7b0c:	90                   	nop
    7b0d:	c9                   	leave  
    7b0e:	c3                   	ret    

0000000000007b0f <compare_entries>:
    7b0f:	f3 0f 1e fa          	endbr64 
    7b13:	55                   	push   rbp
    7b14:	48 89 e5             	mov    rbp,rsp
    7b17:	48 83 ec 20          	sub    rsp,0x20
    7b1b:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7b1f:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7b23:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7b2a:	e9 ac 00 00 00       	jmp    7bdb <compare_entries+0xcc>
    7b2f:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7b32:	48 63 d0             	movsxd rdx,eax
    7b35:	48 89 d0             	mov    rax,rdx
    7b38:	48 c1 e0 04          	shl    rax,0x4
    7b3c:	48 01 d0             	add    rax,rdx
    7b3f:	48 01 c0             	add    rax,rax
    7b42:	48 8d 15 d7 01 10 00 	lea    rdx,[rip+0x1001d7]        # 107d20 <arpcache>
    7b49:	48 01 c2             	add    rdx,rax
    7b4c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7b50:	48 89 c6             	mov    rsi,rax
    7b53:	48 89 d7             	mov    rdi,rdx
    7b56:	e8 a3 01 00 00       	call   7cfe <compare_ip_entry>
    7b5b:	85 c0                	test   eax,eax
    7b5d:	74 78                	je     7bd7 <compare_entries+0xc8>
    7b5f:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7b62:	48 63 d0             	movsxd rdx,eax
    7b65:	48 89 d0             	mov    rax,rdx
    7b68:	48 c1 e0 04          	shl    rax,0x4
    7b6c:	48 01 d0             	add    rax,rdx
    7b6f:	48 01 c0             	add    rax,rax
    7b72:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7b76:	48 8d 05 a3 01 10 00 	lea    rax,[rip+0x1001a3]        # 107d20 <arpcache>
    7b7d:	48 01 c2             	add    rdx,rax
    7b80:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7b84:	48 89 c6             	mov    rsi,rax
    7b87:	48 89 d7             	mov    rdi,rdx
    7b8a:	e8 98 01 00 00       	call   7d27 <compare_mac_entry>
    7b8f:	85 c0                	test   eax,eax
    7b91:	75 44                	jne    7bd7 <compare_entries+0xc8>
    7b93:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7b96:	48 63 d0             	movsxd rdx,eax
    7b99:	48 89 d0             	mov    rax,rdx
    7b9c:	48 c1 e0 04          	shl    rax,0x4
    7ba0:	48 01 d0             	add    rax,rdx
    7ba3:	48 01 c0             	add    rax,rax
    7ba6:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7baa:	48 8d 05 6f 01 10 00 	lea    rax,[rip+0x10016f]        # 107d20 <arpcache>
    7bb1:	48 8d 34 02          	lea    rsi,[rdx+rax*1]
    7bb5:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    7bb9:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7bbd:	48 89 d1             	mov    rcx,rdx
    7bc0:	48 89 f2             	mov    rdx,rsi
    7bc3:	48 89 c6             	mov    rsi,rax
    7bc6:	48 8d 3d f3 59 00 00 	lea    rdi,[rip+0x59f3]        # d5c0 <_IO_stdin_used+0x15c0>
    7bcd:	b8 00 00 00 00       	mov    eax,0x0
    7bd2:	e8 a9 a8 ff ff       	call   2480 <printf@plt>
    7bd7:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    7bdb:	8b 05 3b 94 00 00    	mov    eax,DWORD PTR [rip+0x943b]        # 1101c <arp_entries>
    7be1:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7be4:	0f 8e 45 ff ff ff    	jle    7b2f <compare_entries+0x20>
    7bea:	90                   	nop
    7beb:	90                   	nop
    7bec:	c9                   	leave  
    7bed:	c3                   	ret    

0000000000007bee <add_entry>:
    7bee:	f3 0f 1e fa          	endbr64 
    7bf2:	55                   	push   rbp
    7bf3:	48 89 e5             	mov    rbp,rsp
    7bf6:	48 83 ec 20          	sub    rsp,0x20
    7bfa:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7bfe:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7c02:	8b 05 14 94 00 00    	mov    eax,DWORD PTR [rip+0x9414]        # 1101c <arp_entries>
    7c08:	83 c0 01             	add    eax,0x1
    7c0b:	89 05 0b 94 00 00    	mov    DWORD PTR [rip+0x940b],eax        # 1101c <arp_entries>
    7c11:	8b 05 05 94 00 00    	mov    eax,DWORD PTR [rip+0x9405]        # 1101c <arp_entries>
    7c17:	48 63 d0             	movsxd rdx,eax
    7c1a:	48 89 d0             	mov    rax,rdx
    7c1d:	48 c1 e0 04          	shl    rax,0x4
    7c21:	48 01 d0             	add    rax,rdx
    7c24:	48 01 c0             	add    rax,rax
    7c27:	48 8d 15 f2 00 10 00 	lea    rdx,[rip+0x1000f2]        # 107d20 <arpcache>
    7c2e:	48 01 d0             	add    rax,rdx
    7c31:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7c35:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7c39:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    7c3d:	48 89 d6             	mov    rsi,rdx
    7c40:	48 89 c7             	mov    rdi,rax
    7c43:	e8 28 ab ff ff       	call   2770 <strcpy@plt>
    7c48:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7c4c:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7c50:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7c54:	48 89 c6             	mov    rsi,rax
    7c57:	48 89 d7             	mov    rdi,rdx
    7c5a:	e8 11 ab ff ff       	call   2770 <strcpy@plt>
    7c5f:	90                   	nop
    7c60:	c9                   	leave  
    7c61:	c3                   	ret    

0000000000007c62 <entry_exists>:
    7c62:	f3 0f 1e fa          	endbr64 
    7c66:	55                   	push   rbp
    7c67:	48 89 e5             	mov    rbp,rsp
    7c6a:	48 83 ec 20          	sub    rsp,0x20
    7c6e:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7c72:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7c76:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7c7d:	eb 6d                	jmp    7cec <entry_exists+0x8a>
    7c7f:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7c82:	48 63 d0             	movsxd rdx,eax
    7c85:	48 89 d0             	mov    rax,rdx
    7c88:	48 c1 e0 04          	shl    rax,0x4
    7c8c:	48 01 d0             	add    rax,rdx
    7c8f:	48 01 c0             	add    rax,rax
    7c92:	48 8d 15 87 00 10 00 	lea    rdx,[rip+0x100087]        # 107d20 <arpcache>
    7c99:	48 01 c2             	add    rdx,rax
    7c9c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7ca0:	48 89 c6             	mov    rsi,rax
    7ca3:	48 89 d7             	mov    rdi,rdx
    7ca6:	e8 53 00 00 00       	call   7cfe <compare_ip_entry>
    7cab:	85 c0                	test   eax,eax
    7cad:	75 39                	jne    7ce8 <entry_exists+0x86>
    7caf:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7cb2:	48 63 d0             	movsxd rdx,eax
    7cb5:	48 89 d0             	mov    rax,rdx
    7cb8:	48 c1 e0 04          	shl    rax,0x4
    7cbc:	48 01 d0             	add    rax,rdx
    7cbf:	48 01 c0             	add    rax,rax
    7cc2:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7cc6:	48 8d 05 53 00 10 00 	lea    rax,[rip+0x100053]        # 107d20 <arpcache>
    7ccd:	48 01 c2             	add    rdx,rax
    7cd0:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7cd4:	48 89 c6             	mov    rsi,rax
    7cd7:	48 89 d7             	mov    rdi,rdx
    7cda:	e8 48 00 00 00       	call   7d27 <compare_mac_entry>
    7cdf:	85 c0                	test   eax,eax
    7ce1:	75 05                	jne    7ce8 <entry_exists+0x86>
    7ce3:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7ce6:	eb 14                	jmp    7cfc <entry_exists+0x9a>
    7ce8:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    7cec:	8b 05 2a 93 00 00    	mov    eax,DWORD PTR [rip+0x932a]        # 1101c <arp_entries>
    7cf2:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7cf5:	7e 88                	jle    7c7f <entry_exists+0x1d>
    7cf7:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7cfc:	c9                   	leave  
    7cfd:	c3                   	ret    

0000000000007cfe <compare_ip_entry>:
    7cfe:	f3 0f 1e fa          	endbr64 
    7d02:	55                   	push   rbp
    7d03:	48 89 e5             	mov    rbp,rsp
    7d06:	48 83 ec 10          	sub    rsp,0x10
    7d0a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7d0e:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7d12:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    7d16:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7d1a:	48 89 d6             	mov    rsi,rdx
    7d1d:	48 89 c7             	mov    rdi,rax
    7d20:	e8 2b aa ff ff       	call   2750 <strcmp@plt>
    7d25:	c9                   	leave  
    7d26:	c3                   	ret    

0000000000007d27 <compare_mac_entry>:
    7d27:	f3 0f 1e fa          	endbr64 
    7d2b:	55                   	push   rbp
    7d2c:	48 89 e5             	mov    rbp,rsp
    7d2f:	48 83 ec 10          	sub    rsp,0x10
    7d33:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7d37:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7d3b:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    7d3f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7d43:	48 89 d6             	mov    rsi,rdx
    7d46:	48 89 c7             	mov    rdi,rax
    7d49:	e8 02 aa ff ff       	call   2750 <strcmp@plt>
    7d4e:	c9                   	leave  
    7d4f:	c3                   	ret    

0000000000007d50 <load_csv_arp_cache>:
    7d50:	f3 0f 1e fa          	endbr64 
    7d54:	55                   	push   rbp
    7d55:	48 89 e5             	mov    rbp,rsp
    7d58:	53                   	push   rbx
    7d59:	48 83 ec 68          	sub    rsp,0x68
    7d5d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7d64:	00 00 
    7d66:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    7d6a:	31 c0                	xor    eax,eax
    7d6c:	48 8d 35 83 58 00 00 	lea    rsi,[rip+0x5883]        # d5f6 <_IO_stdin_used+0x15f6>
    7d73:	48 8d 3d 7e 58 00 00 	lea    rdi,[rip+0x587e]        # d5f8 <_IO_stdin_used+0x15f8>
    7d7a:	e8 f1 a7 ff ff       	call   2570 <fopen@plt>
    7d7f:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    7d83:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
    7d88:	75 22                	jne    7dac <load_csv_arp_cache+0x5c>
    7d8a:	48 8d 3d 87 58 00 00 	lea    rdi,[rip+0x5887]        # d618 <_IO_stdin_used+0x1618>
    7d91:	e8 4a a7 ff ff       	call   24e0 <puts@plt>
    7d96:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    7d9a:	48 89 c7             	mov    rdi,rax
    7d9d:	e8 0e aa ff ff       	call   27b0 <fclose@plt>
    7da2:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7da7:	e9 dd 00 00 00       	jmp    7e89 <load_csv_arp_cache+0x139>
    7dac:	48 c7 45 98 00 00 00 	mov    QWORD PTR [rbp-0x68],0x0
    7db3:	00 
    7db4:	48 c7 45 a0 00 00 00 	mov    QWORD PTR [rbp-0x60],0x0
    7dbb:	00 
    7dbc:	eb 7c                	jmp    7e3a <load_csv_arp_cache+0xea>
    7dbe:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7dc2:	48 85 c0             	test   rax,rax
    7dc5:	0f 84 97 00 00 00    	je     7e62 <load_csv_arp_cache+0x112>
    7dcb:	48 8b 5d 98          	mov    rbx,QWORD PTR [rbp-0x68]
    7dcf:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7dd3:	48 8d 35 77 58 00 00 	lea    rsi,[rip+0x5877]        # d651 <_IO_stdin_used+0x1651>
    7dda:	48 89 c7             	mov    rdi,rax
    7ddd:	e8 ee a9 ff ff       	call   27d0 <strcspn@plt>
    7de2:	48 01 d8             	add    rax,rbx
    7de5:	c6 00 00             	mov    BYTE PTR [rax],0x0
    7de8:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7dec:	48 8d 35 60 58 00 00 	lea    rsi,[rip+0x5860]        # d653 <_IO_stdin_used+0x1653>
    7df3:	48 89 c7             	mov    rdi,rax
    7df6:	e8 85 a9 ff ff       	call   2780 <strtok@plt>
    7dfb:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    7dff:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    7e03:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    7e07:	48 89 d6             	mov    rsi,rdx
    7e0a:	48 89 c7             	mov    rdi,rax
    7e0d:	e8 5e a9 ff ff       	call   2770 <strcpy@plt>
    7e12:	48 8d 35 3a 58 00 00 	lea    rsi,[rip+0x583a]        # d653 <_IO_stdin_used+0x1653>
    7e19:	bf 00 00 00 00       	mov    edi,0x0
    7e1e:	e8 5d a9 ff ff       	call   2780 <strtok@plt>
    7e23:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    7e27:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    7e2b:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    7e2f:	48 89 d6             	mov    rsi,rdx
    7e32:	48 89 c7             	mov    rdi,rax
    7e35:	e8 36 a9 ff ff       	call   2770 <strcpy@plt>
    7e3a:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    7e3e:	48 8d 4d a0          	lea    rcx,[rbp-0x60]
    7e42:	48 8d 45 98          	lea    rax,[rbp-0x68]
    7e46:	48 89 ce             	mov    rsi,rcx
    7e49:	48 89 c7             	mov    rdi,rax
    7e4c:	e8 0f a9 ff ff       	call   2760 <getline@plt>
    7e51:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    7e55:	48 83 7d b0 ff       	cmp    QWORD PTR [rbp-0x50],0xffffffffffffffff
    7e5a:	0f 85 5e ff ff ff    	jne    7dbe <load_csv_arp_cache+0x6e>
    7e60:	eb 01                	jmp    7e63 <load_csv_arp_cache+0x113>
    7e62:	90                   	nop
    7e63:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7e67:	48 85 c0             	test   rax,rax
    7e6a:	74 0c                	je     7e78 <load_csv_arp_cache+0x128>
    7e6c:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7e70:	48 89 c7             	mov    rdi,rax
    7e73:	e8 78 a7 ff ff       	call   25f0 <free@plt>
    7e78:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    7e7c:	48 89 c7             	mov    rdi,rax
    7e7f:	e8 2c a9 ff ff       	call   27b0 <fclose@plt>
    7e84:	b8 01 00 00 00       	mov    eax,0x1
    7e89:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    7e8d:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    7e94:	00 00 
    7e96:	74 05                	je     7e9d <load_csv_arp_cache+0x14d>
    7e98:	e8 a3 a8 ff ff       	call   2740 <__stack_chk_fail@plt>
    7e9d:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    7ea1:	c9                   	leave  
    7ea2:	c3                   	ret    

0000000000007ea3 <callback>:
    7ea3:	f3 0f 1e fa          	endbr64 
    7ea7:	55                   	push   rbp
    7ea8:	48 89 e5             	mov    rbp,rsp
    7eab:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7eaf:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
    7eb2:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    7eb6:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    7eba:	b8 00 00 00 00       	mov    eax,0x0
    7ebf:	5d                   	pop    rbp
    7ec0:	c3                   	ret    

0000000000007ec1 <update_db>:
    7ec1:	f3 0f 1e fa          	endbr64 
    7ec5:	55                   	push   rbp
    7ec6:	48 89 e5             	mov    rbp,rsp
    7ec9:	48 81 ec 40 02 00 00 	sub    rsp,0x240
    7ed0:	48 89 bd c8 fd ff ff 	mov    QWORD PTR [rbp-0x238],rdi
    7ed7:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7ede:	00 00 
    7ee0:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7ee4:	31 c0                	xor    eax,eax
    7ee6:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    7eed:	48 89 85 e8 fd ff ff 	mov    QWORD PTR [rbp-0x218],rax
    7ef4:	48 8d 3d 5d 57 00 00 	lea    rdi,[rip+0x575d]        # d658 <_IO_stdin_used+0x1658>
    7efb:	e8 e0 a5 ff ff       	call   24e0 <puts@plt>
    7f00:	48 c7 85 d8 fd ff ff 	mov    QWORD PTR [rbp-0x228],0x0
    7f07:	00 00 00 00 
    7f0b:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    7f12:	48 89 c6             	mov    rsi,rax
    7f15:	48 8d 3d 24 20 10 00 	lea    rdi,[rip+0x102024]        # 109f40 <sqlite_db_path>
    7f1c:	e8 3f a9 ff ff       	call   2860 <sqlite3_open@plt>
    7f21:	89 85 d4 fd ff ff    	mov    DWORD PTR [rbp-0x22c],eax
    7f27:	83 bd d4 fd ff ff 00 	cmp    DWORD PTR [rbp-0x22c],0x0
    7f2e:	74 28                	je     7f58 <update_db+0x97>
    7f30:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    7f37:	48 89 c7             	mov    rdi,rax
    7f3a:	e8 61 a8 ff ff       	call   27a0 <sqlite3_errmsg@plt>
    7f3f:	48 89 c6             	mov    rsi,rax
    7f42:	48 8d 3d 1b 57 00 00 	lea    rdi,[rip+0x571b]        # d664 <_IO_stdin_used+0x1664>
    7f49:	b8 00 00 00 00       	mov    eax,0x0
    7f4e:	e8 2d a5 ff ff       	call   2480 <printf@plt>
    7f53:	e9 a2 00 00 00       	jmp    7ffa <update_db+0x139>
    7f58:	48 8b 85 e8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x218]
    7f5f:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    7f62:	85 c0                	test   eax,eax
    7f64:	75 2e                	jne    7f94 <update_db+0xd3>
    7f66:	48 8b 85 e8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x218]
    7f6d:	48 8d 48 10          	lea    rcx,[rax+0x10]
    7f71:	48 8b 95 e8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x218]
    7f78:	48 8d 85 f0 fd ff ff 	lea    rax,[rbp-0x210]
    7f7f:	48 8d 35 f2 56 00 00 	lea    rsi,[rip+0x56f2]        # d678 <_IO_stdin_used+0x1678>
    7f86:	48 89 c7             	mov    rdi,rax
    7f89:	b8 00 00 00 00       	mov    eax,0x0
    7f8e:	e8 8d a6 ff ff       	call   2620 <sprintf@plt>
    7f93:	90                   	nop
    7f94:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    7f9b:	48 8d 95 d8 fd ff ff 	lea    rdx,[rbp-0x228]
    7fa2:	48 8d b5 f0 fd ff ff 	lea    rsi,[rbp-0x210]
    7fa9:	49 89 d0             	mov    r8,rdx
    7fac:	b9 00 00 00 00       	mov    ecx,0x0
    7fb1:	ba 00 00 00 00       	mov    edx,0x0
    7fb6:	48 89 c7             	mov    rdi,rax
    7fb9:	e8 62 a5 ff ff       	call   2520 <sqlite3_exec@plt>
    7fbe:	89 85 d4 fd ff ff    	mov    DWORD PTR [rbp-0x22c],eax
    7fc4:	83 bd d4 fd ff ff 00 	cmp    DWORD PTR [rbp-0x22c],0x0
    7fcb:	74 2c                	je     7ff9 <update_db+0x138>
    7fcd:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    7fd4:	48 89 c6             	mov    rsi,rax
    7fd7:	48 8d 3d df 56 00 00 	lea    rdi,[rip+0x56df]        # d6bd <_IO_stdin_used+0x16bd>
    7fde:	b8 00 00 00 00       	mov    eax,0x0
    7fe3:	e8 98 a4 ff ff       	call   2480 <printf@plt>
    7fe8:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    7fef:	48 89 c7             	mov    rdi,rax
    7ff2:	e8 b9 a5 ff ff       	call   25b0 <sqlite3_free@plt>
    7ff7:	eb 01                	jmp    7ffa <update_db+0x139>
    7ff9:	90                   	nop
    7ffa:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    8001:	48 89 c7             	mov    rdi,rax
    8004:	e8 57 a4 ff ff       	call   2460 <sqlite3_close@plt>
    8009:	b8 01 00 00 00       	mov    eax,0x1
    800e:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    8012:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    8019:	00 00 
    801b:	74 05                	je     8022 <update_db+0x161>
    801d:	e8 1e a7 ff ff       	call   2740 <__stack_chk_fail@plt>
    8022:	c9                   	leave  
    8023:	c3                   	ret    

0000000000008024 <update_spi_db>:
    8024:	f3 0f 1e fa          	endbr64 
    8028:	55                   	push   rbp
    8029:	48 89 e5             	mov    rbp,rsp
    802c:	41 57                	push   r15
    802e:	41 56                	push   r14
    8030:	41 55                	push   r13
    8032:	41 54                	push   r12
    8034:	53                   	push   rbx
    8035:	48 81 ec 48 04 00 00 	sub    rsp,0x448
    803c:	48 89 bd 98 fb ff ff 	mov    QWORD PTR [rbp-0x468],rdi
    8043:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    804a:	00 00 
    804c:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    8050:	31 c0                	xor    eax,eax
    8052:	48 8b 85 98 fb ff ff 	mov    rax,QWORD PTR [rbp-0x468]
    8059:	48 89 85 b0 fb ff ff 	mov    QWORD PTR [rbp-0x450],rax
    8060:	48 8d 85 a0 fb ff ff 	lea    rax,[rbp-0x460]
    8067:	48 89 c6             	mov    rsi,rax
    806a:	48 8d 3d 6a 56 00 00 	lea    rdi,[rip+0x566a]        # d6db <_IO_stdin_used+0x16db>
    8071:	e8 ea a7 ff ff       	call   2860 <sqlite3_open@plt>
    8076:	85 c0                	test   eax,eax
    8078:	74 3c                	je     80b6 <update_spi_db+0x92>
    807a:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    8081:	48 89 c7             	mov    rdi,rax
    8084:	e8 17 a7 ff ff       	call   27a0 <sqlite3_errmsg@plt>
    8089:	48 89 c6             	mov    rsi,rax
    808c:	48 8d 3d 60 56 00 00 	lea    rdi,[rip+0x5660]        # d6f3 <_IO_stdin_used+0x16f3>
    8093:	b8 00 00 00 00       	mov    eax,0x0
    8098:	e8 e3 a3 ff ff       	call   2480 <printf@plt>
    809d:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    80a4:	48 89 c7             	mov    rdi,rax
    80a7:	e8 b4 a3 ff ff       	call   2460 <sqlite3_close@plt>
    80ac:	b8 00 00 00 00       	mov    eax,0x0
    80b1:	e9 59 01 00 00       	jmp    820f <update_spi_db+0x1eb>
    80b6:	48 8d 05 4b 56 00 00 	lea    rax,[rip+0x564b]        # d708 <_IO_stdin_used+0x1708>
    80bd:	48 89 85 b8 fb ff ff 	mov    QWORD PTR [rbp-0x448],rax
    80c4:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    80cb:	8b 50 7c             	mov    edx,DWORD PTR [rax+0x7c]
    80ce:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    80d5:	44 8b 78 78          	mov    r15d,DWORD PTR [rax+0x78]
    80d9:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    80e0:	4c 8b b0 98 00 00 00 	mov    r14,QWORD PTR [rax+0x98]
    80e7:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    80ee:	4c 8b a8 90 00 00 00 	mov    r13,QWORD PTR [rax+0x90]
    80f5:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    80fc:	44 8b a0 a8 00 00 00 	mov    r12d,DWORD PTR [rax+0xa8]
    8103:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    810a:	8b 98 a4 00 00 00    	mov    ebx,DWORD PTR [rax+0xa4]
    8110:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8117:	48 8b 40 70          	mov    rax,QWORD PTR [rax+0x70]
    811b:	44 8b 18             	mov    r11d,DWORD PTR [rax]
    811e:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8125:	44 8b 50 60          	mov    r10d,DWORD PTR [rax+0x60]
    8129:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8130:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
    8134:	44 8b 08             	mov    r9d,DWORD PTR [rax]
    8137:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    813e:	44 8b 40 5c          	mov    r8d,DWORD PTR [rax+0x5c]
    8142:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8149:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    814c:	89 85 94 fb ff ff    	mov    DWORD PTR [rbp-0x46c],eax
    8152:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8159:	8b 48 54             	mov    ecx,DWORD PTR [rax+0x54]
    815c:	89 8d 90 fb ff ff    	mov    DWORD PTR [rbp-0x470],ecx
    8162:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8169:	48 8d 48 29          	lea    rcx,[rax+0x29]
    816d:	48 8b bd b0 fb ff ff 	mov    rdi,QWORD PTR [rbp-0x450]
    8174:	48 8b b5 b8 fb ff ff 	mov    rsi,QWORD PTR [rbp-0x448]
    817b:	48 8d 85 c0 fb ff ff 	lea    rax,[rbp-0x440]
    8182:	52                   	push   rdx
    8183:	41 57                	push   r15
    8185:	41 56                	push   r14
    8187:	41 55                	push   r13
    8189:	41 54                	push   r12
    818b:	53                   	push   rbx
    818c:	41 53                	push   r11
    818e:	41 52                	push   r10
    8190:	41 51                	push   r9
    8192:	41 50                	push   r8
    8194:	44 8b 8d 94 fb ff ff 	mov    r9d,DWORD PTR [rbp-0x46c]
    819b:	44 8b 85 90 fb ff ff 	mov    r8d,DWORD PTR [rbp-0x470]
    81a2:	48 89 fa             	mov    rdx,rdi
    81a5:	48 89 c7             	mov    rdi,rax
    81a8:	b8 00 00 00 00       	mov    eax,0x0
    81ad:	e8 6e a4 ff ff       	call   2620 <sprintf@plt>
    81b2:	48 83 c4 50          	add    rsp,0x50
    81b6:	48 c7 85 a8 fb ff ff 	mov    QWORD PTR [rbp-0x458],0x0
    81bd:	00 00 00 00 
    81c1:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    81c8:	48 8d 95 a8 fb ff ff 	lea    rdx,[rbp-0x458]
    81cf:	48 8d b5 c0 fb ff ff 	lea    rsi,[rbp-0x440]
    81d6:	49 89 d0             	mov    r8,rdx
    81d9:	b9 00 00 00 00       	mov    ecx,0x0
    81de:	ba 00 00 00 00       	mov    edx,0x0
    81e3:	48 89 c7             	mov    rdi,rax
    81e6:	e8 35 a3 ff ff       	call   2520 <sqlite3_exec@plt>
    81eb:	85 c0                	test   eax,eax
    81ed:	74 1b                	je     820a <update_spi_db+0x1e6>
    81ef:	48 8b 85 a8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x458]
    81f6:	48 89 c6             	mov    rsi,rax
    81f9:	48 8d 3d f5 55 00 00 	lea    rdi,[rip+0x55f5]        # d7f5 <_IO_stdin_used+0x17f5>
    8200:	b8 00 00 00 00       	mov    eax,0x0
    8205:	e8 76 a2 ff ff       	call   2480 <printf@plt>
    820a:	b8 00 00 00 00       	mov    eax,0x0
    820f:	48 8b 5d c8          	mov    rbx,QWORD PTR [rbp-0x38]
    8213:	64 48 2b 1c 25 28 00 	sub    rbx,QWORD PTR fs:0x28
    821a:	00 00 
    821c:	74 05                	je     8223 <update_spi_db+0x1ff>
    821e:	e8 1d a5 ff ff       	call   2740 <__stack_chk_fail@plt>
    8223:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    8227:	5b                   	pop    rbx
    8228:	41 5c                	pop    r12
    822a:	41 5d                	pop    r13
    822c:	41 5e                	pop    r14
    822e:	41 5f                	pop    r15
    8230:	5d                   	pop    rbp
    8231:	c3                   	ret    

0000000000008232 <http_disect>:
    8232:	f3 0f 1e fa          	endbr64 
    8236:	55                   	push   rbp
    8237:	48 89 e5             	mov    rbp,rsp
    823a:	48 81 ec 30 04 00 00 	sub    rsp,0x430
    8241:	48 89 bd d8 fb ff ff 	mov    QWORD PTR [rbp-0x428],rdi
    8248:	48 89 b5 d0 fb ff ff 	mov    QWORD PTR [rbp-0x430],rsi
    824f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8256:	00 00 
    8258:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    825c:	31 c0                	xor    eax,eax
    825e:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    8265:	be 0d 00 00 00       	mov    esi,0xd
    826a:	48 89 c7             	mov    rdi,rax
    826d:	e8 68 b2 ff ff       	call   34da <strloc>
    8272:	89 85 ec fb ff ff    	mov    DWORD PTR [rbp-0x414],eax
    8278:	48 8d 3d 94 55 00 00 	lea    rdi,[rip+0x5594]        # d813 <_IO_stdin_used+0x1813>
    827f:	e8 5c a2 ff ff       	call   24e0 <puts@plt>
    8284:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    828b:	48 89 c7             	mov    rdi,rax
    828e:	e8 ee b2 ff ff       	call   3581 <test_string_arr_print>
    8293:	83 f0 01             	xor    eax,0x1
    8296:	84 c0                	test   al,al
    8298:	75 33                	jne    82cd <http_disect+0x9b>
    829a:	8b 85 ec fb ff ff    	mov    eax,DWORD PTR [rbp-0x414]
    82a0:	48 63 d0             	movsxd rdx,eax
    82a3:	48 8b 8d d8 fb ff ff 	mov    rcx,QWORD PTR [rbp-0x428]
    82aa:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    82b1:	48 89 ce             	mov    rsi,rcx
    82b4:	48 89 c7             	mov    rdi,rax
    82b7:	e8 04 a5 ff ff       	call   27c0 <strncpy@plt>
    82bc:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    82c3:	48 89 c7             	mov    rdi,rax
    82c6:	e8 15 a2 ff ff       	call   24e0 <puts@plt>
    82cb:	eb 01                	jmp    82ce <http_disect+0x9c>
    82cd:	90                   	nop
    82ce:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    82d2:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    82d9:	00 00 
    82db:	74 05                	je     82e2 <http_disect+0xb0>
    82dd:	e8 5e a4 ff ff       	call   2740 <__stack_chk_fail@plt>
    82e2:	c9                   	leave  
    82e3:	c3                   	ret    

00000000000082e4 <dns_disect>:
    82e4:	f3 0f 1e fa          	endbr64 
    82e8:	55                   	push   rbp
    82e9:	48 89 e5             	mov    rbp,rsp
    82ec:	48 83 ec 30          	sub    rsp,0x30
    82f0:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    82f4:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    82f8:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    82fc:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    8300:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8304:	48 83 c0 0c          	add    rax,0xc
    8308:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    830c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8310:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    8314:	66 85 c0             	test   ax,ax
    8317:	75 6d                	jne    8386 <dns_disect+0xa2>
    8319:	bf 00 04 00 00       	mov    edi,0x400
    831e:	e8 3d a2 ff ff       	call   2560 <malloc@plt>
    8323:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8327:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    832b:	ba 08 00 00 00       	mov    edx,0x8
    8330:	be 00 00 00 00       	mov    esi,0x0
    8335:	48 89 c7             	mov    rdi,rax
    8338:	e8 53 a1 ff ff       	call   2490 <memset@plt>
    833d:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8341:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8345:	48 89 d6             	mov    rsi,rdx
    8348:	48 89 c7             	mov    rdi,rax
    834b:	e8 39 00 00 00       	call   8389 <get_dns_name>
    8350:	0f b6 05 0d 1c 10 00 	movzx  eax,BYTE PTR [rip+0x101c0d]        # 109f64 <packet_print>
    8357:	84 c0                	test   al,al
    8359:	74 18                	je     8373 <dns_disect+0x8f>
    835b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    835f:	48 89 c6             	mov    rsi,rax
    8362:	48 8d 3d bc 54 00 00 	lea    rdi,[rip+0x54bc]        # d825 <_IO_stdin_used+0x1825>
    8369:	b8 00 00 00 00       	mov    eax,0x0
    836e:	e8 0d a1 ff ff       	call   2480 <printf@plt>
    8373:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    8378:	74 0c                	je     8386 <dns_disect+0xa2>
    837a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    837e:	48 89 c7             	mov    rdi,rax
    8381:	e8 6a a2 ff ff       	call   25f0 <free@plt>
    8386:	90                   	nop
    8387:	c9                   	leave  
    8388:	c3                   	ret    

0000000000008389 <get_dns_name>:
    8389:	f3 0f 1e fa          	endbr64 
    838d:	55                   	push   rbp
    838e:	48 89 e5             	mov    rbp,rsp
    8391:	53                   	push   rbx
    8392:	48 83 ec 28          	sub    rsp,0x28
    8396:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    839a:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    839e:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    83a5:	eb 57                	jmp    83fe <get_dns_name+0x75>
    83a7:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    83aa:	48 63 d0             	movsxd rdx,eax
    83ad:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    83b1:	48 01 d0             	add    rax,rdx
    83b4:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    83b7:	3c 20                	cmp    al,0x20
    83b9:	7e 24                	jle    83df <get_dns_name+0x56>
    83bb:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    83be:	48 63 d0             	movsxd rdx,eax
    83c1:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    83c5:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    83c9:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    83cd:	ba 01 00 00 00       	mov    edx,0x1
    83d2:	48 89 ce             	mov    rsi,rcx
    83d5:	48 89 c7             	mov    rdi,rax
    83d8:	e8 f3 a0 ff ff       	call   24d0 <strncat@plt>
    83dd:	eb 1b                	jmp    83fa <get_dns_name+0x71>
    83df:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    83e3:	48 89 c7             	mov    rdi,rax
    83e6:	e8 15 a2 ff ff       	call   2600 <strlen@plt>
    83eb:	48 89 c2             	mov    rdx,rax
    83ee:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    83f2:	48 01 d0             	add    rax,rdx
    83f5:	66 c7 00 2e 00       	mov    WORD PTR [rax],0x2e
    83fa:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    83fe:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    8401:	48 63 d8             	movsxd rbx,eax
    8404:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8408:	48 89 c7             	mov    rdi,rax
    840b:	e8 f0 a1 ff ff       	call   2600 <strlen@plt>
    8410:	48 39 c3             	cmp    rbx,rax
    8413:	72 92                	jb     83a7 <get_dns_name+0x1e>
    8415:	90                   	nop
    8416:	90                   	nop
    8417:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    841b:	c9                   	leave  
    841c:	c3                   	ret    

000000000000841d <ftp_disect>:
    841d:	f3 0f 1e fa          	endbr64 
    8421:	55                   	push   rbp
    8422:	48 89 e5             	mov    rbp,rsp
    8425:	48 83 ec 20          	sub    rsp,0x20
    8429:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    842d:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    8431:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8435:	48 8d 35 f4 53 00 00 	lea    rsi,[rip+0x53f4]        # d830 <_IO_stdin_used+0x1830>
    843c:	48 89 c7             	mov    rdi,rax
    843f:	e8 2c a2 ff ff       	call   2670 <strstr@plt>
    8444:	48 85 c0             	test   rax,rax
    8447:	75 1c                	jne    8465 <ftp_disect+0x48>
    8449:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    844d:	48 8d 35 ec 53 00 00 	lea    rsi,[rip+0x53ec]        # d840 <_IO_stdin_used+0x1840>
    8454:	48 89 c7             	mov    rdi,rax
    8457:	e8 14 a2 ff ff       	call   2670 <strstr@plt>
    845c:	48 85 c0             	test   rax,rax
    845f:	0f 84 8a 00 00 00    	je     84ef <ftp_disect+0xd2>
    8465:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8469:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    846d:	48 89 c7             	mov    rdi,rax
    8470:	e8 f7 f3 ff ff       	call   786c <member_exists>
    8475:	48 63 d0             	movsxd rdx,eax
    8478:	48 89 d0             	mov    rax,rdx
    847b:	48 c1 e0 02          	shl    rax,0x2
    847f:	48 01 d0             	add    rax,rdx
    8482:	48 c1 e0 03          	shl    rax,0x3
    8486:	48 01 d0             	add    rax,rdx
    8489:	48 c1 e0 04          	shl    rax,0x4
    848d:	48 8d 15 8c b0 0e 00 	lea    rdx,[rip+0xeb08c]        # f3520 <watchlist>
    8494:	48 01 d0             	add    rax,rdx
    8497:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    849b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    849f:	8b 80 40 02 00 00    	mov    eax,DWORD PTR [rax+0x240]
    84a5:	8d 50 01             	lea    edx,[rax+0x1]
    84a8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    84ac:	89 90 40 02 00 00    	mov    DWORD PTR [rax+0x240],edx
    84b2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    84b6:	8b 80 40 02 00 00    	mov    eax,DWORD PTR [rax+0x240]
    84bc:	83 f8 04             	cmp    eax,0x4
    84bf:	7e 2e                	jle    84ef <ftp_disect+0xd2>
    84c1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    84c5:	8b 88 40 02 00 00    	mov    ecx,DWORD PTR [rax+0x240]
    84cb:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    84cf:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    84d3:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    84d7:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    84db:	48 89 c6             	mov    rsi,rax
    84de:	48 8d 3d 6b 53 00 00 	lea    rdi,[rip+0x536b]        # d850 <_IO_stdin_used+0x1850>
    84e5:	b8 00 00 00 00       	mov    eax,0x0
    84ea:	e8 91 9f ff ff       	call   2480 <printf@plt>
    84ef:	90                   	nop
    84f0:	c9                   	leave  
    84f1:	c3                   	ret    

00000000000084f2 <livedebug>:
    84f2:	f3 0f 1e fa          	endbr64 
    84f6:	55                   	push   rbp
    84f7:	48 89 e5             	mov    rbp,rsp
    84fa:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
    8501:	48 89 bd 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rdi
    8508:	48 89 b5 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rsi
    850f:	48 89 95 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdx
    8516:	48 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rcx
    851d:	4c 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r8
    8524:	4c 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r9
    852b:	84 c0                	test   al,al
    852d:	74 20                	je     854f <livedebug+0x5d>
    852f:	0f 29 45 80          	movaps XMMWORD PTR [rbp-0x80],xmm0
    8533:	0f 29 4d 90          	movaps XMMWORD PTR [rbp-0x70],xmm1
    8537:	0f 29 55 a0          	movaps XMMWORD PTR [rbp-0x60],xmm2
    853b:	0f 29 5d b0          	movaps XMMWORD PTR [rbp-0x50],xmm3
    853f:	0f 29 65 c0          	movaps XMMWORD PTR [rbp-0x40],xmm4
    8543:	0f 29 6d d0          	movaps XMMWORD PTR [rbp-0x30],xmm5
    8547:	0f 29 75 e0          	movaps XMMWORD PTR [rbp-0x20],xmm6
    854b:	0f 29 7d f0          	movaps XMMWORD PTR [rbp-0x10],xmm7
    854f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8556:	00 00 
    8558:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    855f:	31 c0                	xor    eax,eax
    8561:	0f b6 05 b8 19 10 00 	movzx  eax,BYTE PTR [rip+0x1019b8]        # 109f20 <debug_mode>
    8568:	84 c0                	test   al,al
    856a:	74 4b                	je     85b7 <livedebug+0xc5>
    856c:	c7 85 30 ff ff ff 08 	mov    DWORD PTR [rbp-0xd0],0x8
    8573:	00 00 00 
    8576:	c7 85 34 ff ff ff 30 	mov    DWORD PTR [rbp-0xcc],0x30
    857d:	00 00 00 
    8580:	48 8d 45 10          	lea    rax,[rbp+0x10]
    8584:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    858b:	48 8d 85 50 ff ff ff 	lea    rax,[rbp-0xb0]
    8592:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    8599:	48 8d 95 30 ff ff ff 	lea    rdx,[rbp-0xd0]
    85a0:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    85a7:	48 89 d6             	mov    rsi,rdx
    85aa:	48 89 c7             	mov    rdi,rax
    85ad:	b8 00 00 00 00       	mov    eax,0x0
    85b2:	e8 c9 9e ff ff       	call   2480 <printf@plt>
    85b7:	90                   	nop
    85b8:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    85bf:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    85c6:	00 00 
    85c8:	74 05                	je     85cf <livedebug+0xdd>
    85ca:	e8 71 a1 ff ff       	call   2740 <__stack_chk_fail@plt>
    85cf:	c9                   	leave  
    85d0:	c3                   	ret    

00000000000085d1 <forward_packet>:
    85d1:	f3 0f 1e fa          	endbr64 
    85d5:	55                   	push   rbp
    85d6:	48 89 e5             	mov    rbp,rsp
    85d9:	48 83 ec 20          	sub    rsp,0x20
    85dd:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    85e1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    85e5:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    85e9:	48 8d 35 a0 19 10 00 	lea    rsi,[rip+0x1019a0]        # 109f90 <local_ip>
    85f0:	48 89 c7             	mov    rdi,rax
    85f3:	e8 58 a1 ff ff       	call   2750 <strcmp@plt>
    85f8:	85 c0                	test   eax,eax
    85fa:	74 4f                	je     864b <forward_packet+0x7a>
    85fc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8600:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    8604:	48 8d 35 85 19 10 00 	lea    rsi,[rip+0x101985]        # 109f90 <local_ip>
    860b:	48 89 c7             	mov    rdi,rax
    860e:	e8 3d a1 ff ff       	call   2750 <strcmp@plt>
    8613:	85 c0                	test   eax,eax
    8615:	74 34                	je     864b <forward_packet+0x7a>
    8617:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    861b:	48 8b 00             	mov    rax,QWORD PTR [rax]
    861e:	48 8d 50 0e          	lea    rdx,[rax+0xe]
    8622:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8626:	48 89 d6             	mov    rsi,rdx
    8629:	48 89 c7             	mov    rdi,rax
    862c:	e8 3f a1 ff ff       	call   2770 <strcpy@plt>
    8631:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8635:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    8638:	83 e8 0e             	sub    eax,0xe
    863b:	89 c2                	mov    edx,eax
    863d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8641:	89 d6                	mov    esi,edx
    8643:	48 89 c7             	mov    rdi,rax
    8646:	e8 e9 cc ff ff       	call   5334 <ascii_hexdump>
    864b:	90                   	nop
    864c:	c9                   	leave  
    864d:	c3                   	ret    

000000000000864e <conversation_exists>:
    864e:	f3 0f 1e fa          	endbr64 
    8652:	55                   	push   rbp
    8653:	48 89 e5             	mov    rbp,rsp
    8656:	48 83 ec 20          	sub    rsp,0x20
    865a:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    865e:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    8665:	e9 ff 00 00 00       	jmp    8769 <conversation_exists+0x11b>
    866a:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    866d:	48 98                	cdqe   
    866f:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8676:	48 8d 15 63 19 10 00 	lea    rdx,[rip+0x101963]        # 109fe0 <spi_table>
    867d:	48 01 d0             	add    rax,rdx
    8680:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8684:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8688:	0f b6 80 b0 00 00 00 	movzx  eax,BYTE PTR [rax+0xb0]
    868f:	84 c0                	test   al,al
    8691:	0f 84 ce 00 00 00    	je     8765 <conversation_exists+0x117>
    8697:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    869b:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    869e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    86a2:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    86a5:	39 c2                	cmp    edx,eax
    86a7:	75 58                	jne    8701 <conversation_exists+0xb3>
    86a9:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    86ad:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    86b0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    86b4:	8b 40 54             	mov    eax,DWORD PTR [rax+0x54]
    86b7:	39 c2                	cmp    edx,eax
    86b9:	75 46                	jne    8701 <conversation_exists+0xb3>
    86bb:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    86bf:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    86c3:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    86c7:	48 89 d6             	mov    rsi,rdx
    86ca:	48 89 c7             	mov    rdi,rax
    86cd:	e8 7e a0 ff ff       	call   2750 <strcmp@plt>
    86d2:	85 c0                	test   eax,eax
    86d4:	0f 85 8a 00 00 00    	jne    8764 <conversation_exists+0x116>
    86da:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    86de:	48 8d 50 29          	lea    rdx,[rax+0x29]
    86e2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    86e6:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    86ea:	48 89 d6             	mov    rsi,rdx
    86ed:	48 89 c7             	mov    rdi,rax
    86f0:	e8 5b a0 ff ff       	call   2750 <strcmp@plt>
    86f5:	85 c0                	test   eax,eax
    86f7:	75 6b                	jne    8764 <conversation_exists+0x116>
    86f9:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    86fc:	e9 81 00 00 00       	jmp    8782 <conversation_exists+0x134>
    8701:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8705:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    8708:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    870c:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    870f:	39 c2                	cmp    edx,eax
    8711:	75 52                	jne    8765 <conversation_exists+0x117>
    8713:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8717:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    871a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    871e:	8b 40 54             	mov    eax,DWORD PTR [rax+0x54]
    8721:	39 c2                	cmp    edx,eax
    8723:	75 40                	jne    8765 <conversation_exists+0x117>
    8725:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8729:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    872d:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    8731:	48 89 d6             	mov    rsi,rdx
    8734:	48 89 c7             	mov    rdi,rax
    8737:	e8 14 a0 ff ff       	call   2750 <strcmp@plt>
    873c:	85 c0                	test   eax,eax
    873e:	75 25                	jne    8765 <conversation_exists+0x117>
    8740:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8744:	48 8d 50 29          	lea    rdx,[rax+0x29]
    8748:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    874c:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8750:	48 89 d6             	mov    rsi,rdx
    8753:	48 89 c7             	mov    rdi,rax
    8756:	e8 f5 9f ff ff       	call   2750 <strcmp@plt>
    875b:	85 c0                	test   eax,eax
    875d:	75 06                	jne    8765 <conversation_exists+0x117>
    875f:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8762:	eb 1e                	jmp    8782 <conversation_exists+0x134>
    8764:	90                   	nop
    8765:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    8769:	8b 05 d1 88 00 00    	mov    eax,DWORD PTR [rip+0x88d1]        # 11040 <total_conversations>
    876f:	8d 50 01             	lea    edx,[rax+0x1]
    8772:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8775:	39 c2                	cmp    edx,eax
    8777:	0f 87 ed fe ff ff    	ja     866a <conversation_exists+0x1c>
    877d:	b8 ff ff ff ff       	mov    eax,0xffffffff
    8782:	c9                   	leave  
    8783:	c3                   	ret    

0000000000008784 <get_new_spi_location>:
    8784:	f3 0f 1e fa          	endbr64 
    8788:	55                   	push   rbp
    8789:	48 89 e5             	mov    rbp,rsp
    878c:	8b 05 ae 88 00 00    	mov    eax,DWORD PTR [rip+0x88ae]        # 11040 <total_conversations>
    8792:	83 f8 ff             	cmp    eax,0xffffffff
    8795:	75 17                	jne    87ae <get_new_spi_location+0x2a>
    8797:	8b 05 a3 88 00 00    	mov    eax,DWORD PTR [rip+0x88a3]        # 11040 <total_conversations>
    879d:	83 c0 01             	add    eax,0x1
    87a0:	89 05 9a 88 00 00    	mov    DWORD PTR [rip+0x889a],eax        # 11040 <total_conversations>
    87a6:	8b 05 94 88 00 00    	mov    eax,DWORD PTR [rip+0x8894]        # 11040 <total_conversations>
    87ac:	eb 52                	jmp    8800 <get_new_spi_location+0x7c>
    87ae:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    87b5:	eb 27                	jmp    87de <get_new_spi_location+0x5a>
    87b7:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    87ba:	48 98                	cdqe   
    87bc:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    87c3:	48 8d 15 c6 18 10 00 	lea    rdx,[rip+0x1018c6]        # 10a090 <spi_table+0xb0>
    87ca:	0f b6 04 10          	movzx  eax,BYTE PTR [rax+rdx*1]
    87ce:	83 f0 01             	xor    eax,0x1
    87d1:	84 c0                	test   al,al
    87d3:	74 05                	je     87da <get_new_spi_location+0x56>
    87d5:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    87d8:	eb 26                	jmp    8800 <get_new_spi_location+0x7c>
    87da:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    87de:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
    87e1:	8b 05 59 88 00 00    	mov    eax,DWORD PTR [rip+0x8859]        # 11040 <total_conversations>
    87e7:	39 c2                	cmp    edx,eax
    87e9:	72 cc                	jb     87b7 <get_new_spi_location+0x33>
    87eb:	8b 05 4f 88 00 00    	mov    eax,DWORD PTR [rip+0x884f]        # 11040 <total_conversations>
    87f1:	83 c0 01             	add    eax,0x1
    87f4:	89 05 46 88 00 00    	mov    DWORD PTR [rip+0x8846],eax        # 11040 <total_conversations>
    87fa:	8b 05 40 88 00 00    	mov    eax,DWORD PTR [rip+0x8840]        # 11040 <total_conversations>
    8800:	5d                   	pop    rbp
    8801:	c3                   	ret    

0000000000008802 <add_new_conversation>:
    8802:	f3 0f 1e fa          	endbr64 
    8806:	55                   	push   rbp
    8807:	48 89 e5             	mov    rbp,rsp
    880a:	48 83 ec 20          	sub    rsp,0x20
    880e:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8812:	0f b6 05 a9 17 10 00 	movzx  eax,BYTE PTR [rip+0x1017a9]        # 109fc2 <use_spi>
    8819:	84 c0                	test   al,al
    881b:	0f 84 08 02 00 00    	je     8a29 <add_new_conversation+0x227>
    8821:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8825:	48 89 c7             	mov    rdi,rax
    8828:	e8 21 fe ff ff       	call   864e <conversation_exists>
    882d:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    8830:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    8834:	0f 84 82 00 00 00    	je     88bc <add_new_conversation+0xba>
    883a:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    883d:	48 98                	cdqe   
    883f:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8846:	48 8d 15 93 17 10 00 	lea    rdx,[rip+0x101793]        # 109fe0 <spi_table>
    884d:	48 01 d0             	add    rax,rdx
    8850:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8854:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8858:	8b 80 ac 00 00 00    	mov    eax,DWORD PTR [rax+0xac]
    885e:	8d 50 01             	lea    edx,[rax+0x1]
    8861:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8865:	89 90 ac 00 00 00    	mov    DWORD PTR [rax+0xac],edx
    886b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    886f:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    8872:	8d 50 01             	lea    edx,[rax+0x1]
    8875:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8879:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    887c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8880:	8b 78 54             	mov    edi,DWORD PTR [rax+0x54]
    8883:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    8887:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    888b:	8b 50 58             	mov    edx,DWORD PTR [rax+0x58]
    888e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8892:	48 8d 70 29          	lea    rsi,[rax+0x29]
    8896:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8899:	41 89 f9             	mov    r9d,edi
    889c:	49 89 c8             	mov    r8,rcx
    889f:	89 d1                	mov    ecx,edx
    88a1:	48 89 f2             	mov    rdx,rsi
    88a4:	89 c6                	mov    esi,eax
    88a6:	48 8d 3d eb 4f 00 00 	lea    rdi,[rip+0x4feb]        # d898 <_IO_stdin_used+0x1898>
    88ad:	b8 00 00 00 00       	mov    eax,0x0
    88b2:	e8 c9 9b ff ff       	call   2480 <printf@plt>
    88b7:	e9 6d 01 00 00       	jmp    8a29 <add_new_conversation+0x227>
    88bc:	b8 00 00 00 00       	mov    eax,0x0
    88c1:	e8 be fe ff ff       	call   8784 <get_new_spi_location>
    88c6:	48 98                	cdqe   
    88c8:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    88cf:	48 8d 15 0a 17 10 00 	lea    rdx,[rip+0x10170a]        # 109fe0 <spi_table>
    88d6:	48 01 d0             	add    rax,rdx
    88d9:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    88dd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    88e1:	ba 08 00 00 00       	mov    edx,0x8
    88e6:	be 00 00 00 00       	mov    esi,0x0
    88eb:	48 89 c7             	mov    rdi,rax
    88ee:	e8 9d 9b ff ff       	call   2490 <memset@plt>
    88f3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    88f7:	c6 80 b0 00 00 00 01 	mov    BYTE PTR [rax+0xb0],0x1
    88fe:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8902:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8906:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    890a:	48 83 c2 29          	add    rdx,0x29
    890e:	48 89 c6             	mov    rsi,rax
    8911:	48 89 d7             	mov    rdi,rdx
    8914:	e8 57 9e ff ff       	call   2770 <strcpy@plt>
    8919:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    891d:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
    8921:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8925:	48 89 d6             	mov    rsi,rdx
    8928:	48 89 c7             	mov    rdi,rax
    892b:	e8 40 9e ff ff       	call   2770 <strcpy@plt>
    8930:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8934:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    8937:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    893b:	89 50 58             	mov    DWORD PTR [rax+0x58],edx
    893e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8942:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    8945:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8949:	89 50 54             	mov    DWORD PTR [rax+0x54],edx
    894c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8950:	c7 40 78 00 00 00 00 	mov    DWORD PTR [rax+0x78],0x0
    8957:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    895b:	48 8d 50 5c          	lea    rdx,[rax+0x5c]
    895f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8963:	48 89 50 70          	mov    QWORD PTR [rax+0x70],rdx
    8967:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    896b:	48 8d 50 60          	lea    rdx,[rax+0x60]
    896f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8973:	48 89 50 68          	mov    QWORD PTR [rax+0x68],rdx
    8977:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    897b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    897f:	48 89 d6             	mov    rsi,rdx
    8982:	48 89 c7             	mov    rdi,rax
    8985:	e8 73 04 00 00       	call   8dfd <increment_stats>
    898a:	bf 00 00 00 00       	mov    edi,0x0
    898f:	e8 dc 9e ff ff       	call   2870 <time@plt>
    8994:	48 89 c2             	mov    rdx,rax
    8997:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    899b:	48 89 90 90 00 00 00 	mov    QWORD PTR [rax+0x90],rdx
    89a2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    89a6:	c7 40 7c 00 00 00 00 	mov    DWORD PTR [rax+0x7c],0x0
    89ad:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    89b1:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    89b4:	8d 50 01             	lea    edx,[rax+0x1]
    89b7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    89bb:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    89be:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    89c2:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    89c5:	89 c2                	mov    edx,eax
    89c7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    89cb:	89 90 a4 00 00 00    	mov    DWORD PTR [rax+0xa4],edx
    89d1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    89d5:	8b 78 54             	mov    edi,DWORD PTR [rax+0x54]
    89d8:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    89dc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    89e0:	8b 50 58             	mov    edx,DWORD PTR [rax+0x58]
    89e3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    89e7:	48 8d 70 29          	lea    rsi,[rax+0x29]
    89eb:	8b 05 4f 86 00 00    	mov    eax,DWORD PTR [rip+0x864f]        # 11040 <total_conversations>
    89f1:	41 89 f9             	mov    r9d,edi
    89f4:	49 89 c8             	mov    r8,rcx
    89f7:	89 d1                	mov    ecx,edx
    89f9:	48 89 f2             	mov    rdx,rsi
    89fc:	89 c6                	mov    esi,eax
    89fe:	48 8d 3d bb 4e 00 00 	lea    rdi,[rip+0x4ebb]        # d8c0 <_IO_stdin_used+0x18c0>
    8a05:	b8 00 00 00 00       	mov    eax,0x0
    8a0a:	e8 71 9a ff ff       	call   2480 <printf@plt>
    8a0f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a13:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    8a16:	83 f8 7e             	cmp    eax,0x7e
    8a19:	75 0e                	jne    8a29 <add_new_conversation+0x227>
    8a1b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8a1f:	c7 80 88 00 00 00 f3 	mov    DWORD PTR [rax+0x88],0xf3
    8a26:	00 00 00 
    8a29:	90                   	nop
    8a2a:	c9                   	leave  
    8a2b:	c3                   	ret    

0000000000008a2c <spi_ud_thw>:
    8a2c:	f3 0f 1e fa          	endbr64 
    8a30:	55                   	push   rbp
    8a31:	48 89 e5             	mov    rbp,rsp
    8a34:	48 83 ec 20          	sub    rsp,0x20
    8a38:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8a3c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a40:	48 89 c7             	mov    rdi,rax
    8a43:	e8 06 fc ff ff       	call   864e <conversation_exists>
    8a48:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    8a4b:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    8a4f:	0f 84 97 00 00 00    	je     8aec <spi_ud_thw+0xc0>
    8a55:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8a58:	48 98                	cdqe   
    8a5a:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8a61:	48 8d 15 78 15 10 00 	lea    rdx,[rip+0x101578]        # 109fe0 <spi_table>
    8a68:	48 01 d0             	add    rax,rdx
    8a6b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8a6f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8a73:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    8a76:	8d 50 01             	lea    edx,[rax+0x1]
    8a79:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8a7d:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    8a80:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8a84:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a88:	48 89 d6             	mov    rsi,rdx
    8a8b:	48 89 c7             	mov    rdi,rax
    8a8e:	e8 6a 03 00 00       	call   8dfd <increment_stats>
    8a93:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a97:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    8a9a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a9e:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    8aa2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8aa6:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    8aa9:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8aad:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    8ab1:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8ab4:	41 89 f9             	mov    r9d,edi
    8ab7:	49 89 f0             	mov    r8,rsi
    8aba:	89 c6                	mov    esi,eax
    8abc:	48 8d 3d 25 4e 00 00 	lea    rdi,[rip+0x4e25]        # d8e8 <_IO_stdin_used+0x18e8>
    8ac3:	b8 00 00 00 00       	mov    eax,0x0
    8ac8:	e8 b3 99 ff ff       	call   2480 <printf@plt>
    8acd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8ad1:	8b 80 88 00 00 00    	mov    eax,DWORD PTR [rax+0x88]
    8ad7:	3d f3 00 00 00       	cmp    eax,0xf3
    8adc:	75 0e                	jne    8aec <spi_ud_thw+0xc0>
    8ade:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8ae2:	c7 80 88 00 00 00 f4 	mov    DWORD PTR [rax+0x88],0xf4
    8ae9:	00 00 00 
    8aec:	90                   	nop
    8aed:	c9                   	leave  
    8aee:	c3                   	ret    

0000000000008aef <update_table>:
    8aef:	f3 0f 1e fa          	endbr64 
    8af3:	55                   	push   rbp
    8af4:	48 89 e5             	mov    rbp,rsp
    8af7:	48 83 ec 30          	sub    rsp,0x30
    8afb:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    8aff:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8b06:	00 00 
    8b08:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8b0c:	31 c0                	xor    eax,eax
    8b0e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8b12:	48 89 c7             	mov    rdi,rax
    8b15:	e8 34 fb ff ff       	call   864e <conversation_exists>
    8b1a:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
    8b1d:	83 7d e4 ff          	cmp    DWORD PTR [rbp-0x1c],0xffffffff
    8b21:	0f 84 4c 01 00 00    	je     8c73 <update_table+0x184>
    8b27:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    8b2a:	48 98                	cdqe   
    8b2c:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8b33:	48 8d 15 a6 14 10 00 	lea    rdx,[rip+0x1014a6]        # 109fe0 <spi_table>
    8b3a:	48 01 d0             	add    rax,rdx
    8b3d:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    8b41:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8b45:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    8b48:	8d 50 01             	lea    edx,[rax+0x1]
    8b4b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8b4f:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    8b52:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    8b56:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8b5a:	48 89 d6             	mov    rsi,rdx
    8b5d:	48 89 c7             	mov    rdi,rax
    8b60:	e8 98 02 00 00       	call   8dfd <increment_stats>
    8b65:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8b69:	8b 80 88 00 00 00    	mov    eax,DWORD PTR [rax+0x88]
    8b6f:	3d f4 00 00 00       	cmp    eax,0xf4
    8b74:	75 4d                	jne    8bc3 <update_table+0xd4>
    8b76:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8b7a:	c7 80 88 00 00 00 f1 	mov    DWORD PTR [rax+0x88],0xf1
    8b81:	00 00 00 
    8b84:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8b88:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    8b8b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8b8f:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    8b93:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8b97:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    8b9a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8b9e:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    8ba2:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    8ba5:	41 89 f9             	mov    r9d,edi
    8ba8:	49 89 f0             	mov    r8,rsi
    8bab:	89 c6                	mov    esi,eax
    8bad:	48 8d 3d 5c 4d 00 00 	lea    rdi,[rip+0x4d5c]        # d910 <_IO_stdin_used+0x1910>
    8bb4:	b8 00 00 00 00       	mov    eax,0x0
    8bb9:	e8 c2 98 ff ff       	call   2480 <printf@plt>
    8bbe:	e9 b0 00 00 00       	jmp    8c73 <update_table+0x184>
    8bc3:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8bc7:	8b 80 88 00 00 00    	mov    eax,DWORD PTR [rax+0x88]
    8bcd:	3d f6 00 00 00       	cmp    eax,0xf6
    8bd2:	0f 85 9b 00 00 00    	jne    8c73 <update_table+0x184>
    8bd8:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8bdc:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    8bdf:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8be3:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    8be7:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8beb:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    8bee:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8bf2:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    8bf6:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    8bf9:	41 89 f9             	mov    r9d,edi
    8bfc:	49 89 f0             	mov    r8,rsi
    8bff:	89 c6                	mov    esi,eax
    8c01:	48 8d 3d 38 4d 00 00 	lea    rdi,[rip+0x4d38]        # d940 <_IO_stdin_used+0x1940>
    8c08:	b8 00 00 00 00       	mov    eax,0x0
    8c0d:	e8 6e 98 ff ff       	call   2480 <printf@plt>
    8c12:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8c16:	c7 80 88 00 00 00 fa 	mov    DWORD PTR [rax+0x88],0xfa
    8c1d:	00 00 00 
    8c20:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8c24:	c6 80 b0 00 00 00 00 	mov    BYTE PTR [rax+0xb0],0x0
    8c2b:	bf 00 00 00 00       	mov    edi,0x0
    8c30:	e8 3b 9c ff ff       	call   2870 <time@plt>
    8c35:	48 89 c2             	mov    rdx,rax
    8c38:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8c3c:	48 89 90 98 00 00 00 	mov    QWORD PTR [rax+0x98],rdx
    8c43:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    8c47:	48 8d 45 e8          	lea    rax,[rbp-0x18]
    8c4b:	48 89 d1             	mov    rcx,rdx
    8c4e:	48 8d 15 cf f3 ff ff 	lea    rdx,[rip+0xfffffffffffff3cf]        # 8024 <update_spi_db>
    8c55:	be 00 00 00 00       	mov    esi,0x0
    8c5a:	48 89 c7             	mov    rdi,rax
    8c5d:	e8 6e 99 ff ff       	call   25d0 <pthread_create@plt>
    8c62:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8c66:	be 00 00 00 00       	mov    esi,0x0
    8c6b:	48 89 c7             	mov    rdi,rax
    8c6e:	e8 fd 97 ff ff       	call   2470 <pthread_join@plt>
    8c73:	90                   	nop
    8c74:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c78:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    8c7f:	00 00 
    8c81:	74 05                	je     8c88 <update_table+0x199>
    8c83:	e8 b8 9a ff ff       	call   2740 <__stack_chk_fail@plt>
    8c88:	c9                   	leave  
    8c89:	c3                   	ret    

0000000000008c8a <polite_end>:
    8c8a:	f3 0f 1e fa          	endbr64 
    8c8e:	55                   	push   rbp
    8c8f:	48 89 e5             	mov    rbp,rsp
    8c92:	48 83 ec 20          	sub    rsp,0x20
    8c96:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8c9a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8c9e:	48 89 c7             	mov    rdi,rax
    8ca1:	e8 a8 f9 ff ff       	call   864e <conversation_exists>
    8ca6:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    8ca9:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    8cad:	0f 84 e1 00 00 00    	je     8d94 <polite_end+0x10a>
    8cb3:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8cb6:	48 98                	cdqe   
    8cb8:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8cbf:	48 8d 15 1a 13 10 00 	lea    rdx,[rip+0x10131a]        # 109fe0 <spi_table>
    8cc6:	48 01 d0             	add    rax,rdx
    8cc9:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8ccd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8cd1:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    8cd4:	8d 50 01             	lea    edx,[rax+0x1]
    8cd7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8cdb:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    8cde:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8ce2:	8b 80 88 00 00 00    	mov    eax,DWORD PTR [rax+0x88]
    8ce8:	3d f5 00 00 00       	cmp    eax,0xf5
    8ced:	75 4a                	jne    8d39 <polite_end+0xaf>
    8cef:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8cf3:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    8cf6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8cfa:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    8cfe:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d02:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    8d05:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d09:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    8d0d:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8d10:	41 89 f9             	mov    r9d,edi
    8d13:	49 89 f0             	mov    r8,rsi
    8d16:	89 c6                	mov    esi,eax
    8d18:	48 8d 3d 59 4c 00 00 	lea    rdi,[rip+0x4c59]        # d978 <_IO_stdin_used+0x1978>
    8d1f:	b8 00 00 00 00       	mov    eax,0x0
    8d24:	e8 57 97 ff ff       	call   2480 <printf@plt>
    8d29:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d2d:	c7 80 88 00 00 00 f6 	mov    DWORD PTR [rax+0x88],0xf6
    8d34:	00 00 00 
    8d37:	eb 48                	jmp    8d81 <polite_end+0xf7>
    8d39:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d3d:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    8d40:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d44:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    8d48:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d4c:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    8d4f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d53:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    8d57:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8d5a:	41 89 f9             	mov    r9d,edi
    8d5d:	49 89 f0             	mov    r8,rsi
    8d60:	89 c6                	mov    esi,eax
    8d62:	48 8d 3d 47 4c 00 00 	lea    rdi,[rip+0x4c47]        # d9b0 <_IO_stdin_used+0x19b0>
    8d69:	b8 00 00 00 00       	mov    eax,0x0
    8d6e:	e8 0d 97 ff ff       	call   2480 <printf@plt>
    8d73:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d77:	c7 80 88 00 00 00 f5 	mov    DWORD PTR [rax+0x88],0xf5
    8d7e:	00 00 00 
    8d81:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8d85:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d89:	48 89 d6             	mov    rsi,rdx
    8d8c:	48 89 c7             	mov    rdi,rax
    8d8f:	e8 69 00 00 00       	call   8dfd <increment_stats>
    8d94:	90                   	nop
    8d95:	c9                   	leave  
    8d96:	c3                   	ret    

0000000000008d97 <handle_data_pkt>:
    8d97:	f3 0f 1e fa          	endbr64 
    8d9b:	55                   	push   rbp
    8d9c:	48 89 e5             	mov    rbp,rsp
    8d9f:	48 83 ec 20          	sub    rsp,0x20
    8da3:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8da7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8dab:	48 89 c7             	mov    rdi,rax
    8dae:	e8 9b f8 ff ff       	call   864e <conversation_exists>
    8db3:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    8db6:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    8dba:	74 3e                	je     8dfa <handle_data_pkt+0x63>
    8dbc:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8dbf:	48 98                	cdqe   
    8dc1:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8dc8:	48 8d 15 11 12 10 00 	lea    rdx,[rip+0x101211]        # 109fe0 <spi_table>
    8dcf:	48 01 d0             	add    rax,rdx
    8dd2:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8dd6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8dda:	8b 40 78             	mov    eax,DWORD PTR [rax+0x78]
    8ddd:	8d 50 01             	lea    edx,[rax+0x1]
    8de0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8de4:	89 50 78             	mov    DWORD PTR [rax+0x78],edx
    8de7:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8deb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8def:	48 89 d6             	mov    rsi,rdx
    8df2:	48 89 c7             	mov    rdi,rax
    8df5:	e8 03 00 00 00       	call   8dfd <increment_stats>
    8dfa:	90                   	nop
    8dfb:	c9                   	leave  
    8dfc:	c3                   	ret    

0000000000008dfd <increment_stats>:
    8dfd:	f3 0f 1e fa          	endbr64 
    8e01:	55                   	push   rbp
    8e02:	48 89 e5             	mov    rbp,rsp
    8e05:	48 83 ec 10          	sub    rsp,0x10
    8e09:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    8e0d:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    8e11:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8e15:	48 8d 50 29          	lea    rdx,[rax+0x29]
    8e19:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e1d:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8e21:	48 89 d6             	mov    rsi,rdx
    8e24:	48 89 c7             	mov    rdi,rax
    8e27:	e8 24 99 ff ff       	call   2750 <strcmp@plt>
    8e2c:	85 c0                	test   eax,eax
    8e2e:	75 13                	jne    8e43 <increment_stats+0x46>
    8e30:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8e34:	8b 40 60             	mov    eax,DWORD PTR [rax+0x60]
    8e37:	8d 50 01             	lea    edx,[rax+0x1]
    8e3a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8e3e:	89 50 60             	mov    DWORD PTR [rax+0x60],edx
    8e41:	eb 2c                	jmp    8e6f <increment_stats+0x72>
    8e43:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    8e47:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e4b:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8e4f:	48 89 d6             	mov    rsi,rdx
    8e52:	48 89 c7             	mov    rdi,rax
    8e55:	e8 f6 98 ff ff       	call   2750 <strcmp@plt>
    8e5a:	85 c0                	test   eax,eax
    8e5c:	75 11                	jne    8e6f <increment_stats+0x72>
    8e5e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8e62:	8b 40 5c             	mov    eax,DWORD PTR [rax+0x5c]
    8e65:	8d 50 01             	lea    edx,[rax+0x1]
    8e68:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8e6c:	89 50 5c             	mov    DWORD PTR [rax+0x5c],edx
    8e6f:	90                   	nop
    8e70:	c9                   	leave  
    8e71:	c3                   	ret    

0000000000008e72 <lprintf>:
    8e72:	f3 0f 1e fa          	endbr64 
    8e76:	55                   	push   rbp
    8e77:	48 89 e5             	mov    rbp,rsp
    8e7a:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
    8e81:	48 89 bd 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rdi
    8e88:	48 89 b5 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rsi
    8e8f:	48 89 95 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdx
    8e96:	48 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rcx
    8e9d:	4c 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r8
    8ea4:	4c 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r9
    8eab:	84 c0                	test   al,al
    8ead:	74 20                	je     8ecf <lprintf+0x5d>
    8eaf:	0f 29 45 80          	movaps XMMWORD PTR [rbp-0x80],xmm0
    8eb3:	0f 29 4d 90          	movaps XMMWORD PTR [rbp-0x70],xmm1
    8eb7:	0f 29 55 a0          	movaps XMMWORD PTR [rbp-0x60],xmm2
    8ebb:	0f 29 5d b0          	movaps XMMWORD PTR [rbp-0x50],xmm3
    8ebf:	0f 29 65 c0          	movaps XMMWORD PTR [rbp-0x40],xmm4
    8ec3:	0f 29 6d d0          	movaps XMMWORD PTR [rbp-0x30],xmm5
    8ec7:	0f 29 75 e0          	movaps XMMWORD PTR [rbp-0x20],xmm6
    8ecb:	0f 29 7d f0          	movaps XMMWORD PTR [rbp-0x10],xmm7
    8ecf:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8ed6:	00 00 
    8ed8:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    8edf:	31 c0                	xor    eax,eax
    8ee1:	c7 85 30 ff ff ff 10 	mov    DWORD PTR [rbp-0xd0],0x10
    8ee8:	00 00 00 
    8eeb:	c7 85 34 ff ff ff 30 	mov    DWORD PTR [rbp-0xcc],0x30
    8ef2:	00 00 00 
    8ef5:	48 8d 45 10          	lea    rax,[rbp+0x10]
    8ef9:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    8f00:	48 8d 85 50 ff ff ff 	lea    rax,[rbp-0xb0]
    8f07:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    8f0e:	48 8d 95 30 ff ff ff 	lea    rdx,[rbp-0xd0]
    8f15:	48 8b 8d 20 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xe0]
    8f1c:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    8f23:	48 89 ce             	mov    rsi,rcx
    8f26:	48 89 c7             	mov    rdi,rax
    8f29:	b8 00 00 00 00       	mov    eax,0x0
    8f2e:	e8 ed 98 ff ff       	call   2820 <fprintf@plt>
    8f33:	90                   	nop
    8f34:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    8f3b:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    8f42:	00 00 
    8f44:	74 05                	je     8f4b <lprintf+0xd9>
    8f46:	e8 f5 97 ff ff       	call   2740 <__stack_chk_fail@plt>
    8f4b:	c9                   	leave  
    8f4c:	c3                   	ret    

0000000000008f4d <lfprintf>:
    8f4d:	f3 0f 1e fa          	endbr64 
    8f51:	55                   	push   rbp
    8f52:	48 89 e5             	mov    rbp,rsp
    8f55:	48 81 ec 90 08 00 00 	sub    rsp,0x890
    8f5c:	48 89 bd 98 f7 ff ff 	mov    QWORD PTR [rbp-0x868],rdi
    8f63:	48 89 b5 90 f7 ff ff 	mov    QWORD PTR [rbp-0x870],rsi
    8f6a:	48 89 95 88 f7 ff ff 	mov    QWORD PTR [rbp-0x878],rdx
    8f71:	48 89 8d 80 f7 ff ff 	mov    QWORD PTR [rbp-0x880],rcx
    8f78:	44 89 85 7c f7 ff ff 	mov    DWORD PTR [rbp-0x884],r8d
    8f7f:	44 89 8d 78 f7 ff ff 	mov    DWORD PTR [rbp-0x888],r9d
    8f86:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8f8d:	00 00 
    8f8f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8f93:	31 c0                	xor    eax,eax
    8f95:	48 8b 85 98 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x868]
    8f9c:	48 8d 35 45 4a 00 00 	lea    rsi,[rip+0x4a45]        # d9e8 <_IO_stdin_used+0x19e8>
    8fa3:	48 89 c7             	mov    rdi,rax
    8fa6:	e8 c5 95 ff ff       	call   2570 <fopen@plt>
    8fab:	48 89 85 a8 f7 ff ff 	mov    QWORD PTR [rbp-0x858],rax
    8fb2:	48 83 bd a8 f7 ff ff 	cmp    QWORD PTR [rbp-0x858],0x0
    8fb9:	00 
    8fba:	75 20                	jne    8fdc <lfprintf+0x8f>
    8fbc:	48 8b 85 90 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x870]
    8fc3:	48 89 c6             	mov    rsi,rax
    8fc6:	48 8d 3d 23 4a 00 00 	lea    rdi,[rip+0x4a23]        # d9f0 <_IO_stdin_used+0x19f0>
    8fcd:	b8 00 00 00 00       	mov    eax,0x0
    8fd2:	e8 a9 94 ff ff       	call   2480 <printf@plt>
    8fd7:	e9 cd 00 00 00       	jmp    90a9 <lfprintf+0x15c>
    8fdc:	48 8d 85 b0 f7 ff ff 	lea    rax,[rbp-0x850]
    8fe3:	48 89 c7             	mov    rdi,rax
    8fe6:	e8 28 a4 ff ff       	call   3413 <cb_get_formatted_time>
    8feb:	83 bd 7c f7 ff ff ff 	cmp    DWORD PTR [rbp-0x884],0xffffffff
    8ff2:	75 3f                	jne    9033 <lfprintf+0xe6>
    8ff4:	48 8b bd 80 f7 ff ff 	mov    rdi,QWORD PTR [rbp-0x880]
    8ffb:	48 8b b5 88 f7 ff ff 	mov    rsi,QWORD PTR [rbp-0x878]
    9002:	48 8b 8d 90 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x870]
    9009:	48 8d 95 b0 f7 ff ff 	lea    rdx,[rbp-0x850]
    9010:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    9017:	49 89 f9             	mov    r9,rdi
    901a:	49 89 f0             	mov    r8,rsi
    901d:	48 8d 35 fa 49 00 00 	lea    rsi,[rip+0x49fa]        # da1e <_IO_stdin_used+0x1a1e>
    9024:	48 89 c7             	mov    rdi,rax
    9027:	b8 00 00 00 00       	mov    eax,0x0
    902c:	e8 ef 95 ff ff       	call   2620 <sprintf@plt>
    9031:	eb 4e                	jmp    9081 <lfprintf+0x134>
    9033:	44 8b 85 7c f7 ff ff 	mov    r8d,DWORD PTR [rbp-0x884]
    903a:	48 8b bd 88 f7 ff ff 	mov    rdi,QWORD PTR [rbp-0x878]
    9041:	48 8b 8d 90 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x870]
    9048:	48 8d 95 b0 f7 ff ff 	lea    rdx,[rbp-0x850]
    904f:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    9056:	8b b5 78 f7 ff ff    	mov    esi,DWORD PTR [rbp-0x888]
    905c:	56                   	push   rsi
    905d:	ff b5 80 f7 ff ff    	push   QWORD PTR [rbp-0x880]
    9063:	45 89 c1             	mov    r9d,r8d
    9066:	49 89 f8             	mov    r8,rdi
    9069:	48 8d 35 be 49 00 00 	lea    rsi,[rip+0x49be]        # da2e <_IO_stdin_used+0x1a2e>
    9070:	48 89 c7             	mov    rdi,rax
    9073:	b8 00 00 00 00       	mov    eax,0x0
    9078:	e8 a3 95 ff ff       	call   2620 <sprintf@plt>
    907d:	48 83 c4 10          	add    rsp,0x10
    9081:	48 8b 95 a8 f7 ff ff 	mov    rdx,QWORD PTR [rbp-0x858]
    9088:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    908f:	48 89 d6             	mov    rsi,rdx
    9092:	48 89 c7             	mov    rdi,rax
    9095:	e8 f6 95 ff ff       	call   2690 <fputs@plt>
    909a:	48 8b 85 a8 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x858]
    90a1:	48 89 c7             	mov    rdi,rax
    90a4:	e8 07 97 ff ff       	call   27b0 <fclose@plt>
    90a9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    90ad:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    90b4:	00 00 
    90b6:	74 05                	je     90bd <lfprintf+0x170>
    90b8:	e8 83 96 ff ff       	call   2740 <__stack_chk_fail@plt>
    90bd:	c9                   	leave  
    90be:	c3                   	ret    

00000000000090bf <saprintf>:
    90bf:	f3 0f 1e fa          	endbr64 
    90c3:	55                   	push   rbp
    90c4:	48 89 e5             	mov    rbp,rsp
    90c7:	48 83 ec 20          	sub    rsp,0x20
    90cb:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    90cf:	48 8b 05 5a 7f 00 00 	mov    rax,QWORD PTR [rip+0x7f5a]        # 11030 <def_log_file>
    90d6:	48 8d 35 0b 49 00 00 	lea    rsi,[rip+0x490b]        # d9e8 <_IO_stdin_used+0x19e8>
    90dd:	48 89 c7             	mov    rdi,rax
    90e0:	e8 8b 94 ff ff       	call   2570 <fopen@plt>
    90e5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    90e9:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    90ee:	75 1a                	jne    910a <saprintf+0x4b>
    90f0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    90f4:	48 89 c6             	mov    rsi,rax
    90f7:	48 8d 3d f2 48 00 00 	lea    rdi,[rip+0x48f2]        # d9f0 <_IO_stdin_used+0x19f0>
    90fe:	b8 00 00 00 00       	mov    eax,0x0
    9103:	e8 78 93 ff ff       	call   2480 <printf@plt>
    9108:	eb 1f                	jmp    9129 <saprintf+0x6a>
    910a:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    910e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9112:	48 89 d6             	mov    rsi,rdx
    9115:	48 89 c7             	mov    rdi,rax
    9118:	e8 73 95 ff ff       	call   2690 <fputs@plt>
    911d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9121:	48 89 c7             	mov    rdi,rax
    9124:	e8 87 96 ff ff       	call   27b0 <fclose@plt>
    9129:	c9                   	leave  
    912a:	c3                   	ret    

000000000000912b <substr>:
    912b:	f3 0f 1e fa          	endbr64 
    912f:	55                   	push   rbp
    9130:	48 89 e5             	mov    rbp,rsp
    9133:	48 83 ec 20          	sub    rsp,0x20
    9137:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    913b:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    913e:	89 55 e0             	mov    DWORD PTR [rbp-0x20],edx
    9141:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
    9144:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    9147:	83 c0 02             	add    eax,0x2
    914a:	48 98                	cdqe   
    914c:	48 89 c7             	mov    rdi,rax
    914f:	e8 0c 94 ff ff       	call   2560 <malloc@plt>
    9154:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9158:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    915b:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    915e:	eb 27                	jmp    9187 <substr+0x5c>
    9160:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    9163:	48 63 d0             	movsxd rdx,eax
    9166:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    916a:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    916e:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    9171:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    9174:	48 63 d0             	movsxd rdx,eax
    9177:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    917b:	48 01 c2             	add    rdx,rax
    917e:	0f b6 01             	movzx  eax,BYTE PTR [rcx]
    9181:	88 02                	mov    BYTE PTR [rdx],al
    9183:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    9187:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    918a:	3b 45 e0             	cmp    eax,DWORD PTR [rbp-0x20]
    918d:	7e d1                	jle    9160 <substr+0x35>
    918f:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
    9192:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    9195:	48 98                	cdqe   
    9197:	48 8d 50 01          	lea    rdx,[rax+0x1]
    919b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    919f:	48 01 d0             	add    rax,rdx
    91a2:	c6 00 00             	mov    BYTE PTR [rax],0x0
    91a5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    91a9:	c9                   	leave  
    91aa:	c3                   	ret    

00000000000091ab <delimit>:
    91ab:	f3 0f 1e fa          	endbr64 
    91af:	55                   	push   rbp
    91b0:	48 89 e5             	mov    rbp,rsp
    91b3:	89 f8                	mov    eax,edi
    91b5:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
    91b8:	80 7d fc 20          	cmp    BYTE PTR [rbp-0x4],0x20
    91bc:	0f 94 c0             	sete   al
    91bf:	5d                   	pop    rbp
    91c0:	c3                   	ret    

00000000000091c1 <isdigit>:
    91c1:	f3 0f 1e fa          	endbr64 
    91c5:	55                   	push   rbp
    91c6:	48 89 e5             	mov    rbp,rsp
    91c9:	53                   	push   rbx
    91ca:	48 83 ec 28          	sub    rsp,0x28
    91ce:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    91d2:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    91d9:	e9 f7 00 00 00       	jmp    92d5 <isdigit+0x114>
    91de:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    91e1:	48 63 d0             	movsxd rdx,eax
    91e4:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    91e8:	48 01 d0             	add    rax,rdx
    91eb:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    91ee:	3c 30                	cmp    al,0x30
    91f0:	0f 84 db 00 00 00    	je     92d1 <isdigit+0x110>
    91f6:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    91f9:	48 63 d0             	movsxd rdx,eax
    91fc:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9200:	48 01 d0             	add    rax,rdx
    9203:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9206:	3c 31                	cmp    al,0x31
    9208:	0f 84 c3 00 00 00    	je     92d1 <isdigit+0x110>
    920e:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9211:	48 63 d0             	movsxd rdx,eax
    9214:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9218:	48 01 d0             	add    rax,rdx
    921b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    921e:	3c 32                	cmp    al,0x32
    9220:	0f 84 ab 00 00 00    	je     92d1 <isdigit+0x110>
    9226:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9229:	48 63 d0             	movsxd rdx,eax
    922c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9230:	48 01 d0             	add    rax,rdx
    9233:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9236:	3c 33                	cmp    al,0x33
    9238:	0f 84 93 00 00 00    	je     92d1 <isdigit+0x110>
    923e:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9241:	48 63 d0             	movsxd rdx,eax
    9244:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9248:	48 01 d0             	add    rax,rdx
    924b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    924e:	3c 34                	cmp    al,0x34
    9250:	74 7f                	je     92d1 <isdigit+0x110>
    9252:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9255:	48 63 d0             	movsxd rdx,eax
    9258:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    925c:	48 01 d0             	add    rax,rdx
    925f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9262:	3c 34                	cmp    al,0x34
    9264:	74 6b                	je     92d1 <isdigit+0x110>
    9266:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9269:	48 63 d0             	movsxd rdx,eax
    926c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9270:	48 01 d0             	add    rax,rdx
    9273:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9276:	3c 35                	cmp    al,0x35
    9278:	74 57                	je     92d1 <isdigit+0x110>
    927a:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    927d:	48 63 d0             	movsxd rdx,eax
    9280:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9284:	48 01 d0             	add    rax,rdx
    9287:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    928a:	3c 36                	cmp    al,0x36
    928c:	74 43                	je     92d1 <isdigit+0x110>
    928e:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9291:	48 63 d0             	movsxd rdx,eax
    9294:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9298:	48 01 d0             	add    rax,rdx
    929b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    929e:	3c 37                	cmp    al,0x37
    92a0:	74 2f                	je     92d1 <isdigit+0x110>
    92a2:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    92a5:	48 63 d0             	movsxd rdx,eax
    92a8:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    92ac:	48 01 d0             	add    rax,rdx
    92af:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    92b2:	3c 38                	cmp    al,0x38
    92b4:	74 1b                	je     92d1 <isdigit+0x110>
    92b6:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    92b9:	48 63 d0             	movsxd rdx,eax
    92bc:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    92c0:	48 01 d0             	add    rax,rdx
    92c3:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    92c6:	3c 39                	cmp    al,0x39
    92c8:	74 07                	je     92d1 <isdigit+0x110>
    92ca:	b8 00 00 00 00       	mov    eax,0x0
    92cf:	eb 24                	jmp    92f5 <isdigit+0x134>
    92d1:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    92d5:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    92d8:	48 63 d8             	movsxd rbx,eax
    92db:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    92df:	48 89 c7             	mov    rdi,rax
    92e2:	e8 19 93 ff ff       	call   2600 <strlen@plt>
    92e7:	48 39 c3             	cmp    rbx,rax
    92ea:	0f 82 ee fe ff ff    	jb     91de <isdigit+0x1d>
    92f0:	b8 01 00 00 00       	mov    eax,0x1
    92f5:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    92f9:	c9                   	leave  
    92fa:	c3                   	ret    

00000000000092fb <assign_port_number>:
    92fb:	f3 0f 1e fa          	endbr64 
    92ff:	55                   	push   rbp
    9300:	48 89 e5             	mov    rbp,rsp
    9303:	48 83 ec 10          	sub    rsp,0x10
    9307:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    930b:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    930f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9313:	48 89 c7             	mov    rdi,rax
    9316:	e8 a6 fe ff ff       	call   91c1 <isdigit>
    931b:	84 c0                	test   al,al
    931d:	74 18                	je     9337 <assign_port_number+0x3c>
    931f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9323:	48 89 c7             	mov    rdi,rax
    9326:	e8 95 93 ff ff       	call   26c0 <atoi@plt>
    932b:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    932f:	89 82 44 01 00 00    	mov    DWORD PTR [rdx+0x144],eax
    9335:	eb 25                	jmp    935c <assign_port_number+0x61>
    9337:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    933b:	48 8d 35 06 47 00 00 	lea    rsi,[rip+0x4706]        # da48 <_IO_stdin_used+0x1a48>
    9342:	48 89 c7             	mov    rdi,rax
    9345:	e8 06 94 ff ff       	call   2750 <strcmp@plt>
    934a:	85 c0                	test   eax,eax
    934c:	75 0e                	jne    935c <assign_port_number+0x61>
    934e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9352:	c7 80 44 01 00 00 ff 	mov    DWORD PTR [rax+0x144],0xffffffff
    9359:	ff ff ff 
    935c:	90                   	nop
    935d:	c9                   	leave  
    935e:	c3                   	ret    

000000000000935f <check_port_number>:
    935f:	f3 0f 1e fa          	endbr64 
    9363:	55                   	push   rbp
    9364:	48 89 e5             	mov    rbp,rsp
    9367:	48 83 ec 10          	sub    rsp,0x10
    936b:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    936f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9373:	48 89 c7             	mov    rdi,rax
    9376:	e8 46 fe ff ff       	call   91c1 <isdigit>
    937b:	84 c0                	test   al,al
    937d:	74 0e                	je     938d <check_port_number+0x2e>
    937f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9383:	48 89 c7             	mov    rdi,rax
    9386:	e8 35 93 ff ff       	call   26c0 <atoi@plt>
    938b:	eb 23                	jmp    93b0 <check_port_number+0x51>
    938d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9391:	48 8d 35 b0 46 00 00 	lea    rsi,[rip+0x46b0]        # da48 <_IO_stdin_used+0x1a48>
    9398:	48 89 c7             	mov    rdi,rax
    939b:	e8 b0 93 ff ff       	call   2750 <strcmp@plt>
    93a0:	85 c0                	test   eax,eax
    93a2:	75 07                	jne    93ab <check_port_number+0x4c>
    93a4:	b8 ff ff ff ff       	mov    eax,0xffffffff
    93a9:	eb 05                	jmp    93b0 <check_port_number+0x51>
    93ab:	b8 ff ff ff ff       	mov    eax,0xffffffff
    93b0:	c9                   	leave  
    93b1:	c3                   	ret    

00000000000093b2 <assign_protocol>:
    93b2:	f3 0f 1e fa          	endbr64 
    93b6:	55                   	push   rbp
    93b7:	48 89 e5             	mov    rbp,rsp
    93ba:	48 83 ec 10          	sub    rsp,0x10
    93be:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    93c2:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    93c6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    93ca:	48 8d 35 7b 46 00 00 	lea    rsi,[rip+0x467b]        # da4c <_IO_stdin_used+0x1a4c>
    93d1:	48 89 c7             	mov    rdi,rax
    93d4:	e8 77 93 ff ff       	call   2750 <strcmp@plt>
    93d9:	85 c0                	test   eax,eax
    93db:	75 10                	jne    93ed <assign_protocol+0x3b>
    93dd:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    93e1:	c7 80 40 01 00 00 ff 	mov    DWORD PTR [rax+0x140],0xffffffff
    93e8:	ff ff ff 
    93eb:	eb 73                	jmp    9460 <assign_protocol+0xae>
    93ed:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    93f1:	48 8d 35 58 46 00 00 	lea    rsi,[rip+0x4658]        # da50 <_IO_stdin_used+0x1a50>
    93f8:	48 89 c7             	mov    rdi,rax
    93fb:	e8 50 93 ff ff       	call   2750 <strcmp@plt>
    9400:	85 c0                	test   eax,eax
    9402:	75 10                	jne    9414 <assign_protocol+0x62>
    9404:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9408:	c7 80 40 01 00 00 80 	mov    DWORD PTR [rax+0x140],0x80
    940f:	00 00 00 
    9412:	eb 4c                	jmp    9460 <assign_protocol+0xae>
    9414:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9418:	48 8d 35 36 46 00 00 	lea    rsi,[rip+0x4636]        # da55 <_IO_stdin_used+0x1a55>
    941f:	48 89 c7             	mov    rdi,rax
    9422:	e8 29 93 ff ff       	call   2750 <strcmp@plt>
    9427:	85 c0                	test   eax,eax
    9429:	75 10                	jne    943b <assign_protocol+0x89>
    942b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    942f:	c7 80 40 01 00 00 7e 	mov    DWORD PTR [rax+0x140],0x7e
    9436:	00 00 00 
    9439:	eb 25                	jmp    9460 <assign_protocol+0xae>
    943b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    943f:	48 8d 35 13 46 00 00 	lea    rsi,[rip+0x4613]        # da59 <_IO_stdin_used+0x1a59>
    9446:	48 89 c7             	mov    rdi,rax
    9449:	e8 02 93 ff ff       	call   2750 <strcmp@plt>
    944e:	85 c0                	test   eax,eax
    9450:	75 0e                	jne    9460 <assign_protocol+0xae>
    9452:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9456:	c7 80 40 01 00 00 7f 	mov    DWORD PTR [rax+0x140],0x7f
    945d:	00 00 00 
    9460:	90                   	nop
    9461:	c9                   	leave  
    9462:	c3                   	ret    

0000000000009463 <get_ruletype>:
    9463:	f3 0f 1e fa          	endbr64 
    9467:	55                   	push   rbp
    9468:	48 89 e5             	mov    rbp,rsp
    946b:	48 83 ec 10          	sub    rsp,0x10
    946f:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9473:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    9477:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    947b:	ba 09 00 00 00       	mov    edx,0x9
    9480:	48 8d 35 d6 45 00 00 	lea    rsi,[rip+0x45d6]        # da5d <_IO_stdin_used+0x1a5d>
    9487:	48 89 c7             	mov    rdi,rax
    948a:	e8 c1 90 ff ff       	call   2550 <strncmp@plt>
    948f:	85 c0                	test   eax,eax
    9491:	75 17                	jne    94aa <get_ruletype+0x47>
    9493:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9497:	48 8d 15 43 c1 ff ff 	lea    rdx,[rip+0xffffffffffffc143]        # 55e1 <str_match_parser>
    949e:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    94a5:	e9 82 00 00 00       	jmp    952c <get_ruletype+0xc9>
    94aa:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    94ae:	ba 04 00 00 00       	mov    edx,0x4
    94b3:	48 8d 35 ad 45 00 00 	lea    rsi,[rip+0x45ad]        # da67 <_IO_stdin_used+0x1a67>
    94ba:	48 89 c7             	mov    rdi,rax
    94bd:	e8 8e 90 ff ff       	call   2550 <strncmp@plt>
    94c2:	85 c0                	test   eax,eax
    94c4:	75 14                	jne    94da <get_ruletype+0x77>
    94c6:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    94ca:	48 8d 15 b3 c3 ff ff 	lea    rdx,[rip+0xffffffffffffc3b3]        # 5884 <none>
    94d1:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    94d8:	eb 52                	jmp    952c <get_ruletype+0xc9>
    94da:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    94de:	ba 04 00 00 00       	mov    edx,0x4
    94e3:	48 8d 35 82 45 00 00 	lea    rsi,[rip+0x4582]        # da6c <_IO_stdin_used+0x1a6c>
    94ea:	48 89 c7             	mov    rdi,rax
    94ed:	e8 5e 90 ff ff       	call   2550 <strncmp@plt>
    94f2:	85 c0                	test   eax,eax
    94f4:	75 14                	jne    950a <get_ruletype+0xa7>
    94f6:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    94fa:	48 8d 15 9a c3 ff ff 	lea    rdx,[rip+0xffffffffffffc39a]        # 589b <pcre_match>
    9501:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    9508:	eb 22                	jmp    952c <get_ruletype+0xc9>
    950a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    950e:	48 89 c6             	mov    rsi,rax
    9511:	48 8d 3d 59 45 00 00 	lea    rdi,[rip+0x4559]        # da71 <_IO_stdin_used+0x1a71>
    9518:	b8 00 00 00 00       	mov    eax,0x0
    951d:	e8 5e 8f ff ff       	call   2480 <printf@plt>
    9522:	bf 01 00 00 00       	mov    edi,0x1
    9527:	e8 d4 8f ff ff       	call   2500 <exit@plt>
    952c:	c9                   	leave  
    952d:	c3                   	ret    

000000000000952e <numeric_check>:
    952e:	f3 0f 1e fa          	endbr64 
    9532:	55                   	push   rbp
    9533:	48 89 e5             	mov    rbp,rsp
    9536:	48 83 ec 30          	sub    rsp,0x30
    953a:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    953e:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    9541:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    9545:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9549:	48 89 c7             	mov    rdi,rax
    954c:	e8 70 fc ff ff       	call   91c1 <isdigit>
    9551:	84 c0                	test   al,al
    9553:	74 27                	je     957c <numeric_check+0x4e>
    9555:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9559:	48 89 c7             	mov    rdi,rax
    955c:	e8 5f 91 ff ff       	call   26c0 <atoi@plt>
    9561:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
    9564:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    9567:	39 45 e4             	cmp    DWORD PTR [rbp-0x1c],eax
    956a:	77 10                	ja     957c <numeric_check+0x4e>
    956c:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    956f:	48 98                	cdqe   
    9571:	48 39 45 d8          	cmp    QWORD PTR [rbp-0x28],rax
    9575:	72 05                	jb     957c <numeric_check+0x4e>
    9577:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    957a:	eb 05                	jmp    9581 <numeric_check+0x53>
    957c:	b8 ff ff ff ff       	mov    eax,0xffffffff
    9581:	c9                   	leave  
    9582:	c3                   	ret    

0000000000009583 <sc_strip>:
    9583:	f3 0f 1e fa          	endbr64 
    9587:	55                   	push   rbp
    9588:	48 89 e5             	mov    rbp,rsp
    958b:	48 83 ec 10          	sub    rsp,0x10
    958f:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9593:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9597:	48 8d 35 ea 44 00 00 	lea    rsi,[rip+0x44ea]        # da88 <_IO_stdin_used+0x1a88>
    959e:	48 89 c7             	mov    rdi,rax
    95a1:	e8 2a 92 ff ff       	call   27d0 <strcspn@plt>
    95a6:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    95aa:	48 01 d0             	add    rax,rdx
    95ad:	c6 00 00             	mov    BYTE PTR [rax],0x0
    95b0:	90                   	nop
    95b1:	c9                   	leave  
    95b2:	c3                   	ret    

00000000000095b3 <void_rule>:
    95b3:	f3 0f 1e fa          	endbr64 
    95b7:	55                   	push   rbp
    95b8:	48 89 e5             	mov    rbp,rsp
    95bb:	48 83 ec 10          	sub    rsp,0x10
    95bf:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    95c3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    95c7:	48 05 6e 03 00 00    	add    rax,0x36e
    95cd:	ba 0a 00 00 00       	mov    edx,0xa
    95d2:	be 00 00 00 00       	mov    esi,0x0
    95d7:	48 89 c7             	mov    rdi,rax
    95da:	e8 b1 8e ff ff       	call   2490 <memset@plt>
    95df:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    95e3:	48 05 68 03 00 00    	add    rax,0x368
    95e9:	ba 06 00 00 00       	mov    edx,0x6
    95ee:	be 00 00 00 00       	mov    esi,0x0
    95f3:	48 89 c7             	mov    rdi,rax
    95f6:	e8 95 8e ff ff       	call   2490 <memset@plt>
    95fb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    95ff:	48 05 50 03 00 00    	add    rax,0x350
    9605:	ba 18 00 00 00       	mov    edx,0x18
    960a:	be 00 00 00 00       	mov    esi,0x0
    960f:	48 89 c7             	mov    rdi,rax
    9612:	e8 79 8e ff ff       	call   2490 <memset@plt>
    9617:	90                   	nop
    9618:	c9                   	leave  
    9619:	c3                   	ret    

000000000000961a <line_parser>:
    961a:	f3 0f 1e fa          	endbr64 
    961e:	55                   	push   rbp
    961f:	48 89 e5             	mov    rbp,rsp
    9622:	53                   	push   rbx
    9623:	48 81 ec 98 00 00 00 	sub    rsp,0x98
    962a:	48 89 bd 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rdi
    9631:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9638:	00 00 
    963a:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    963e:	31 c0                	xor    eax,eax
    9640:	8b 05 ce 79 00 00    	mov    eax,DWORD PTR [rip+0x79ce]        # 11014 <num_rules>
    9646:	83 c0 01             	add    eax,0x1
    9649:	89 05 c5 79 00 00    	mov    DWORD PTR [rip+0x79c5],eax        # 11014 <num_rules>
    964f:	8b 05 bf 79 00 00    	mov    eax,DWORD PTR [rip+0x79bf]        # 11014 <num_rules>
    9655:	48 98                	cdqe   
    9657:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    965e:	48 8d 15 7b 7c 00 00 	lea    rdx,[rip+0x7c7b]        # 112e0 <rules>
    9665:	48 01 d0             	add    rax,rdx
    9668:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    966c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9670:	ba 08 00 00 00       	mov    edx,0x8
    9675:	be 00 00 00 00       	mov    esi,0x0
    967a:	48 89 c7             	mov    rdi,rax
    967d:	e8 0e 8e ff ff       	call   2490 <memset@plt>
    9682:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9686:	c7 80 44 01 00 00 ff 	mov    DWORD PTR [rax+0x144],0xffffffff
    968d:	ff ff ff 
    9690:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9694:	c7 80 40 01 00 00 ff 	mov    DWORD PTR [rax+0x140],0xffffffff
    969b:	ff ff ff 
    969e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    96a2:	c7 40 1c ff ff ff ff 	mov    DWORD PTR [rax+0x1c],0xffffffff
    96a9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    96ad:	c7 40 18 ff ff ff ff 	mov    DWORD PTR [rax+0x18],0xffffffff
    96b4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    96b8:	c7 40 10 ff ff ff ff 	mov    DWORD PTR [rax+0x10],0xffffffff
    96bf:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    96c3:	c7 80 4c 03 00 00 00 	mov    DWORD PTR [rax+0x34c],0x0
    96ca:	00 00 00 
    96cd:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    96d1:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
    96d7:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    96db:	c7 40 04 00 00 00 00 	mov    DWORD PTR [rax+0x4],0x0
    96e2:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    96e6:	48 89 c7             	mov    rdi,rax
    96e9:	e8 c5 fe ff ff       	call   95b3 <void_rule>
    96ee:	c7 45 88 00 00 00 00 	mov    DWORD PTR [rbp-0x78],0x0
    96f5:	c6 85 7c ff ff ff 00 	mov    BYTE PTR [rbp-0x84],0x0
    96fc:	c7 45 80 00 00 00 00 	mov    DWORD PTR [rbp-0x80],0x0
    9703:	c7 45 84 00 00 00 00 	mov    DWORD PTR [rbp-0x7c],0x0
    970a:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9711:	48 89 c7             	mov    rdi,rax
    9714:	e8 e7 8e ff ff       	call   2600 <strlen@plt>
    9719:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    971c:	c6 85 7d ff ff ff 00 	mov    BYTE PTR [rbp-0x83],0x0
    9723:	c6 85 7e ff ff ff 00 	mov    BYTE PTR [rbp-0x82],0x0
    972a:	c6 85 7f ff ff ff 00 	mov    BYTE PTR [rbp-0x81],0x0
    9731:	e9 98 0d 00 00       	jmp    a4ce <line_parser+0xeb4>
    9736:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9739:	48 63 d0             	movsxd rdx,eax
    973c:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9743:	48 01 d0             	add    rax,rdx
    9746:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9749:	0f be c0             	movsx  eax,al
    974c:	89 c7                	mov    edi,eax
    974e:	e8 58 fa ff ff       	call   91ab <delimit>
    9753:	83 f0 01             	xor    eax,0x1
    9756:	84 c0                	test   al,al
    9758:	74 04                	je     975e <line_parser+0x144>
    975a:	83 45 84 01          	add    DWORD PTR [rbp-0x7c],0x1
    975e:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9761:	48 63 d0             	movsxd rdx,eax
    9764:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    976b:	48 01 d0             	add    rax,rdx
    976e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9771:	0f be c0             	movsx  eax,al
    9774:	89 c7                	mov    edi,eax
    9776:	e8 30 fa ff ff       	call   91ab <delimit>
    977b:	84 c0                	test   al,al
    977d:	74 3f                	je     97be <line_parser+0x1a4>
    977f:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9782:	3b 45 80             	cmp    eax,DWORD PTR [rbp-0x80]
    9785:	75 37                	jne    97be <line_parser+0x1a4>
    9787:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    978a:	48 63 d0             	movsxd rdx,eax
    978d:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9794:	48 01 d0             	add    rax,rdx
    9797:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    979a:	3c 3a                	cmp    al,0x3a
    979c:	75 11                	jne    97af <line_parser+0x195>
    979e:	48 8d 3d e5 42 00 00 	lea    rdi,[rip+0x42e5]        # da8a <_IO_stdin_used+0x1a8a>
    97a5:	b8 00 00 00 00       	mov    eax,0x0
    97aa:	e8 d1 8c ff ff       	call   2480 <printf@plt>
    97af:	83 45 84 01          	add    DWORD PTR [rbp-0x7c],0x1
    97b3:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    97b6:	89 45 80             	mov    DWORD PTR [rbp-0x80],eax
    97b9:	e9 10 0d 00 00       	jmp    a4ce <line_parser+0xeb4>
    97be:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    97c1:	48 63 d0             	movsxd rdx,eax
    97c4:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    97cb:	48 01 d0             	add    rax,rdx
    97ce:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    97d1:	0f be c0             	movsx  eax,al
    97d4:	89 c7                	mov    edi,eax
    97d6:	e8 d0 f9 ff ff       	call   91ab <delimit>
    97db:	84 c0                	test   al,al
    97dd:	74 08                	je     97e7 <line_parser+0x1cd>
    97df:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
    97e2:	3b 45 84             	cmp    eax,DWORD PTR [rbp-0x7c]
    97e5:	75 18                	jne    97ff <line_parser+0x1e5>
    97e7:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    97ea:	3b 45 8c             	cmp    eax,DWORD PTR [rbp-0x74]
    97ed:	0f 85 db 0c 00 00    	jne    a4ce <line_parser+0xeb4>
    97f3:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
    97f6:	3b 45 84             	cmp    eax,DWORD PTR [rbp-0x7c]
    97f9:	0f 84 cf 0c 00 00    	je     a4ce <line_parser+0xeb4>
    97ff:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9802:	8d 50 ff             	lea    edx,[rax-0x1]
    9805:	8b 4d 80             	mov    ecx,DWORD PTR [rbp-0x80]
    9808:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    980f:	89 ce                	mov    esi,ecx
    9811:	48 89 c7             	mov    rdi,rax
    9814:	e8 12 f9 ff ff       	call   912b <substr>
    9819:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    981d:	0f b6 85 7c ff ff ff 	movzx  eax,BYTE PTR [rbp-0x84]
    9824:	83 f0 01             	xor    eax,0x1
    9827:	84 c0                	test   al,al
    9829:	0f 84 ea 02 00 00    	je     9b19 <line_parser+0x4ff>
    982f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9833:	48 8d 35 5f 42 00 00 	lea    rsi,[rip+0x425f]        # da99 <_IO_stdin_used+0x1a99>
    983a:	48 89 c7             	mov    rdi,rax
    983d:	e8 0e 8f ff ff       	call   2750 <strcmp@plt>
    9842:	85 c0                	test   eax,eax
    9844:	75 33                	jne    9879 <line_parser+0x25f>
    9846:	0f b6 85 7d ff ff ff 	movzx  eax,BYTE PTR [rbp-0x83]
    984d:	83 f0 01             	xor    eax,0x1
    9850:	84 c0                	test   al,al
    9852:	74 25                	je     9879 <line_parser+0x25f>
    9854:	0f b6 85 7e ff ff ff 	movzx  eax,BYTE PTR [rbp-0x82]
    985b:	83 f0 01             	xor    eax,0x1
    985e:	84 c0                	test   al,al
    9860:	74 17                	je     9879 <line_parser+0x25f>
    9862:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9866:	48 8d 15 4a bb ff ff 	lea    rdx,[rip+0xffffffffffffbb4a]        # 53b7 <stdout_alert>
    986d:	48 89 90 80 03 00 00 	mov    QWORD PTR [rax+0x380],rdx
    9874:	e9 31 0c 00 00       	jmp    a4aa <line_parser+0xe90>
    9879:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    987d:	48 8d 35 cc 41 00 00 	lea    rsi,[rip+0x41cc]        # da50 <_IO_stdin_used+0x1a50>
    9884:	48 89 c7             	mov    rdi,rax
    9887:	e8 c4 8e ff ff       	call   2750 <strcmp@plt>
    988c:	85 c0                	test   eax,eax
    988e:	74 45                	je     98d5 <line_parser+0x2bb>
    9890:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9894:	48 8d 35 b1 41 00 00 	lea    rsi,[rip+0x41b1]        # da4c <_IO_stdin_used+0x1a4c>
    989b:	48 89 c7             	mov    rdi,rax
    989e:	e8 ad 8e ff ff       	call   2750 <strcmp@plt>
    98a3:	85 c0                	test   eax,eax
    98a5:	74 2e                	je     98d5 <line_parser+0x2bb>
    98a7:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    98ab:	48 8d 35 a3 41 00 00 	lea    rsi,[rip+0x41a3]        # da55 <_IO_stdin_used+0x1a55>
    98b2:	48 89 c7             	mov    rdi,rax
    98b5:	e8 96 8e ff ff       	call   2750 <strcmp@plt>
    98ba:	85 c0                	test   eax,eax
    98bc:	74 17                	je     98d5 <line_parser+0x2bb>
    98be:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    98c2:	48 8d 35 90 41 00 00 	lea    rsi,[rip+0x4190]        # da59 <_IO_stdin_used+0x1a59>
    98c9:	48 89 c7             	mov    rdi,rax
    98cc:	e8 7f 8e ff ff       	call   2750 <strcmp@plt>
    98d1:	85 c0                	test   eax,eax
    98d3:	75 34                	jne    9909 <line_parser+0x2ef>
    98d5:	0f b6 85 7e ff ff ff 	movzx  eax,BYTE PTR [rbp-0x82]
    98dc:	83 f0 01             	xor    eax,0x1
    98df:	84 c0                	test   al,al
    98e1:	74 26                	je     9909 <line_parser+0x2ef>
    98e3:	0f b6 85 7d ff ff ff 	movzx  eax,BYTE PTR [rbp-0x83]
    98ea:	83 f0 01             	xor    eax,0x1
    98ed:	84 c0                	test   al,al
    98ef:	74 18                	je     9909 <line_parser+0x2ef>
    98f1:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    98f5:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    98f9:	48 89 d6             	mov    rsi,rdx
    98fc:	48 89 c7             	mov    rdi,rax
    98ff:	e8 ae fa ff ff       	call   93b2 <assign_protocol>
    9904:	e9 a1 0b 00 00       	jmp    a4aa <line_parser+0xe90>
    9909:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    990d:	48 89 c7             	mov    rdi,rax
    9910:	e8 ac f8 ff ff       	call   91c1 <isdigit>
    9915:	84 c0                	test   al,al
    9917:	75 17                	jne    9930 <line_parser+0x316>
    9919:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    991d:	48 8d 35 24 41 00 00 	lea    rsi,[rip+0x4124]        # da48 <_IO_stdin_used+0x1a48>
    9924:	48 89 c7             	mov    rdi,rax
    9927:	e8 24 8e ff ff       	call   2750 <strcmp@plt>
    992c:	85 c0                	test   eax,eax
    992e:	75 34                	jne    9964 <line_parser+0x34a>
    9930:	0f b6 85 7d ff ff ff 	movzx  eax,BYTE PTR [rbp-0x83]
    9937:	83 f0 01             	xor    eax,0x1
    993a:	84 c0                	test   al,al
    993c:	74 26                	je     9964 <line_parser+0x34a>
    993e:	0f b6 85 7e ff ff ff 	movzx  eax,BYTE PTR [rbp-0x82]
    9945:	83 f0 01             	xor    eax,0x1
    9948:	84 c0                	test   al,al
    994a:	74 18                	je     9964 <line_parser+0x34a>
    994c:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9950:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9954:	48 89 d6             	mov    rsi,rdx
    9957:	48 89 c7             	mov    rdi,rax
    995a:	e8 9c f9 ff ff       	call   92fb <assign_port_number>
    995f:	e9 46 0b 00 00       	jmp    a4aa <line_parser+0xe90>
    9964:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9968:	ba 08 00 00 00       	mov    edx,0x8
    996d:	48 8d 35 2b 41 00 00 	lea    rsi,[rip+0x412b]        # da9f <_IO_stdin_used+0x1a9f>
    9974:	48 89 c7             	mov    rdi,rax
    9977:	e8 d4 8b ff ff       	call   2550 <strncmp@plt>
    997c:	85 c0                	test   eax,eax
    997e:	75 75                	jne    99f5 <line_parser+0x3db>
    9980:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9984:	48 8d 50 09          	lea    rdx,[rax+0x9]
    9988:	48 8d 45 de          	lea    rax,[rbp-0x22]
    998c:	48 89 d6             	mov    rsi,rdx
    998f:	48 89 c7             	mov    rdi,rax
    9992:	e8 d9 8d ff ff       	call   2770 <strcpy@plt>
    9997:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    999b:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    999e:	85 c0                	test   eax,eax
    99a0:	75 2e                	jne    99d0 <line_parser+0x3b6>
    99a2:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    99a6:	8b 00                	mov    eax,DWORD PTR [rax]
    99a8:	85 c0                	test   eax,eax
    99aa:	75 24                	jne    99d0 <line_parser+0x3b6>
    99ac:	8b 15 12 06 10 00    	mov    edx,DWORD PTR [rip+0x100612]        # 109fc4 <homenet>
    99b2:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    99b6:	89 10                	mov    DWORD PTR [rax],edx
    99b8:	48 8d 45 de          	lea    rax,[rbp-0x22]
    99bc:	48 89 c7             	mov    rdi,rax
    99bf:	e8 9b f9 ff ff       	call   935f <check_port_number>
    99c4:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    99c8:	89 42 0c             	mov    DWORD PTR [rdx+0xc],eax
    99cb:	e9 da 0a 00 00       	jmp    a4aa <line_parser+0xe90>
    99d0:	8b 15 ee 05 10 00    	mov    edx,DWORD PTR [rip+0x1005ee]        # 109fc4 <homenet>
    99d6:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    99da:	89 50 04             	mov    DWORD PTR [rax+0x4],edx
    99dd:	48 8d 45 de          	lea    rax,[rbp-0x22]
    99e1:	48 89 c7             	mov    rdi,rax
    99e4:	e8 76 f9 ff ff       	call   935f <check_port_number>
    99e9:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    99ed:	89 42 08             	mov    DWORD PTR [rdx+0x8],eax
    99f0:	e9 b5 0a 00 00       	jmp    a4aa <line_parser+0xe90>
    99f5:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    99f9:	48 8d 35 a8 40 00 00 	lea    rsi,[rip+0x40a8]        # daa8 <_IO_stdin_used+0x1aa8>
    9a00:	48 89 c7             	mov    rdi,rax
    9a03:	e8 48 8d ff ff       	call   2750 <strcmp@plt>
    9a08:	85 c0                	test   eax,eax
    9a0a:	75 30                	jne    9a3c <line_parser+0x422>
    9a0c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9a10:	8b 10                	mov    edx,DWORD PTR [rax]
    9a12:	8b 05 ac 05 10 00    	mov    eax,DWORD PTR [rip+0x1005ac]        # 109fc4 <homenet>
    9a18:	39 c2                	cmp    edx,eax
    9a1a:	75 10                	jne    9a2c <line_parser+0x412>
    9a1c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9a20:	c7 40 10 45 00 00 00 	mov    DWORD PTR [rax+0x10],0x45
    9a27:	e9 7e 0a 00 00       	jmp    a4aa <line_parser+0xe90>
    9a2c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9a30:	c7 40 10 46 00 00 00 	mov    DWORD PTR [rax+0x10],0x46
    9a37:	e9 6e 0a 00 00       	jmp    a4aa <line_parser+0xe90>
    9a3c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9a40:	48 8d 35 64 40 00 00 	lea    rsi,[rip+0x4064]        # daab <_IO_stdin_used+0x1aab>
    9a47:	48 89 c7             	mov    rdi,rax
    9a4a:	e8 01 8d ff ff       	call   2750 <strcmp@plt>
    9a4f:	85 c0                	test   eax,eax
    9a51:	75 10                	jne    9a63 <line_parser+0x449>
    9a53:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9a57:	c7 40 10 47 00 00 00 	mov    DWORD PTR [rax+0x10],0x47
    9a5e:	e9 47 0a 00 00       	jmp    a4aa <line_parser+0xe90>
    9a63:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9a67:	ba 0c 00 00 00       	mov    edx,0xc
    9a6c:	48 8d 35 3b 40 00 00 	lea    rsi,[rip+0x403b]        # daae <_IO_stdin_used+0x1aae>
    9a73:	48 89 c7             	mov    rdi,rax
    9a76:	e8 d5 8a ff ff       	call   2550 <strncmp@plt>
    9a7b:	85 c0                	test   eax,eax
    9a7d:	75 7f                	jne    9afe <line_parser+0x4e4>
    9a7f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9a83:	48 8d 50 0c          	lea    rdx,[rax+0xc]
    9a87:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9a8b:	48 89 d6             	mov    rsi,rdx
    9a8e:	48 89 c7             	mov    rdi,rax
    9a91:	e8 da 8c ff ff       	call   2770 <strcpy@plt>
    9a96:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9a9a:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    9a9d:	85 c0                	test   eax,eax
    9a9f:	75 37                	jne    9ad8 <line_parser+0x4be>
    9aa1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9aa5:	8b 10                	mov    edx,DWORD PTR [rax]
    9aa7:	8b 05 17 05 10 00    	mov    eax,DWORD PTR [rip+0x100517]        # 109fc4 <homenet>
    9aad:	39 c2                	cmp    edx,eax
    9aaf:	75 27                	jne    9ad8 <line_parser+0x4be>
    9ab1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9ab5:	c7 40 04 ff ff ff ff 	mov    DWORD PTR [rax+0x4],0xffffffff
    9abc:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9ac0:	48 83 c0 01          	add    rax,0x1
    9ac4:	48 89 c7             	mov    rdi,rax
    9ac7:	e8 93 f8 ff ff       	call   935f <check_port_number>
    9acc:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9ad0:	89 42 08             	mov    DWORD PTR [rdx+0x8],eax
    9ad3:	e9 d2 09 00 00       	jmp    a4aa <line_parser+0xe90>
    9ad8:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9adc:	c7 00 ff ff ff ff    	mov    DWORD PTR [rax],0xffffffff
    9ae2:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9ae6:	48 83 c0 01          	add    rax,0x1
    9aea:	48 89 c7             	mov    rdi,rax
    9aed:	e8 6d f8 ff ff       	call   935f <check_port_number>
    9af2:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9af6:	89 42 0c             	mov    DWORD PTR [rdx+0xc],eax
    9af9:	e9 ac 09 00 00       	jmp    a4aa <line_parser+0xe90>
    9afe:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9b02:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9b05:	3c 28                	cmp    al,0x28
    9b07:	0f 85 9d 09 00 00    	jne    a4aa <line_parser+0xe90>
    9b0d:	c6 85 7c ff ff ff 01 	mov    BYTE PTR [rbp-0x84],0x1
    9b14:	e9 b5 09 00 00       	jmp    a4ce <line_parser+0xeb4>
    9b19:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9b1d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9b20:	3c 28                	cmp    al,0x28
    9b22:	75 0e                	jne    9b32 <line_parser+0x518>
    9b24:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9b28:	48 83 c0 01          	add    rax,0x1
    9b2c:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    9b30:	eb 08                	jmp    9b3a <line_parser+0x520>
    9b32:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9b36:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    9b3a:	80 bd 7d ff ff ff 00 	cmp    BYTE PTR [rbp-0x83],0x0
    9b41:	0f 84 8e 00 00 00    	je     9bd5 <line_parser+0x5bb>
    9b47:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9b4b:	48 89 c7             	mov    rdi,rax
    9b4e:	e8 ad 8a ff ff       	call   2600 <strlen@plt>
    9b53:	48 8d 50 ff          	lea    rdx,[rax-0x1]
    9b57:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9b5b:	48 01 d0             	add    rax,rdx
    9b5e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9b61:	3c 3b                	cmp    al,0x3b
    9b63:	75 36                	jne    9b9b <line_parser+0x581>
    9b65:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9b69:	48 89 c7             	mov    rdi,rax
    9b6c:	e8 8f 8a ff ff       	call   2600 <strlen@plt>
    9b71:	48 8d 50 fe          	lea    rdx,[rax-0x2]
    9b75:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9b79:	48 8d 88 4c 01 00 00 	lea    rcx,[rax+0x14c]
    9b80:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9b84:	48 89 c6             	mov    rsi,rax
    9b87:	48 89 cf             	mov    rdi,rcx
    9b8a:	e8 41 89 ff ff       	call   24d0 <strncat@plt>
    9b8f:	c6 85 7d ff ff ff 00 	mov    BYTE PTR [rbp-0x83],0x0
    9b96:	e9 33 09 00 00       	jmp    a4ce <line_parser+0xeb4>
    9b9b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9b9f:	48 8d 90 4c 01 00 00 	lea    rdx,[rax+0x14c]
    9ba6:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9baa:	48 89 c6             	mov    rsi,rax
    9bad:	48 89 d7             	mov    rdi,rdx
    9bb0:	e8 cb 8a ff ff       	call   2680 <strcat@plt>
    9bb5:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9bb9:	48 8d 98 4c 01 00 00 	lea    rbx,[rax+0x14c]
    9bc0:	48 89 df             	mov    rdi,rbx
    9bc3:	e8 38 8a ff ff       	call   2600 <strlen@plt>
    9bc8:	48 01 d8             	add    rax,rbx
    9bcb:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    9bd0:	e9 d5 08 00 00       	jmp    a4aa <line_parser+0xe90>
    9bd5:	80 bd 7e ff ff ff 00 	cmp    BYTE PTR [rbp-0x82],0x0
    9bdc:	74 7f                	je     9c5d <line_parser+0x643>
    9bde:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9be2:	48 8d 35 d2 3e 00 00 	lea    rsi,[rip+0x3ed2]        # dabb <_IO_stdin_used+0x1abb>
    9be9:	48 89 c7             	mov    rdi,rax
    9bec:	e8 7f 8a ff ff       	call   2670 <strstr@plt>
    9bf1:	48 85 c0             	test   rax,rax
    9bf4:	74 33                	je     9c29 <line_parser+0x60f>
    9bf6:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9bfa:	48 89 c7             	mov    rdi,rax
    9bfd:	e8 fe 89 ff ff       	call   2600 <strlen@plt>
    9c02:	48 8d 50 fd          	lea    rdx,[rax-0x3]
    9c06:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9c0a:	48 8d 48 40          	lea    rcx,[rax+0x40]
    9c0e:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9c12:	48 89 c6             	mov    rsi,rax
    9c15:	48 89 cf             	mov    rdi,rcx
    9c18:	e8 b3 88 ff ff       	call   24d0 <strncat@plt>
    9c1d:	c6 85 7e ff ff ff 00 	mov    BYTE PTR [rbp-0x82],0x0
    9c24:	e9 a5 08 00 00       	jmp    a4ce <line_parser+0xeb4>
    9c29:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9c2d:	48 8d 50 40          	lea    rdx,[rax+0x40]
    9c31:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9c35:	48 89 c6             	mov    rsi,rax
    9c38:	48 89 d7             	mov    rdi,rdx
    9c3b:	e8 40 8a ff ff       	call   2680 <strcat@plt>
    9c40:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9c44:	48 8d 58 40          	lea    rbx,[rax+0x40]
    9c48:	48 89 df             	mov    rdi,rbx
    9c4b:	e8 b0 89 ff ff       	call   2600 <strlen@plt>
    9c50:	48 01 d8             	add    rax,rbx
    9c53:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    9c58:	e9 4d 08 00 00       	jmp    a4aa <line_parser+0xe90>
    9c5d:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9c61:	ba 06 00 00 00       	mov    edx,0x6
    9c66:	48 8d 35 51 3e 00 00 	lea    rsi,[rip+0x3e51]        # dabe <_IO_stdin_used+0x1abe>
    9c6d:	48 89 c7             	mov    rdi,rax
    9c70:	e8 db 88 ff ff       	call   2550 <strncmp@plt>
    9c75:	85 c0                	test   eax,eax
    9c77:	75 37                	jne    9cb0 <line_parser+0x696>
    9c79:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9c7d:	48 89 c7             	mov    rdi,rax
    9c80:	e8 7b 89 ff ff       	call   2600 <strlen@plt>
    9c85:	48 8d 50 f8          	lea    rdx,[rax-0x8]
    9c89:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9c8d:	48 8d 48 06          	lea    rcx,[rax+0x6]
    9c91:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9c95:	48 83 c0 20          	add    rax,0x20
    9c99:	48 89 ce             	mov    rsi,rcx
    9c9c:	48 89 c7             	mov    rdi,rax
    9c9f:	e8 1c 8b ff ff       	call   27c0 <strncpy@plt>
    9ca4:	c6 85 7f ff ff ff 01 	mov    BYTE PTR [rbp-0x81],0x1
    9cab:	e9 fa 07 00 00       	jmp    a4aa <line_parser+0xe90>
    9cb0:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9cb4:	ba 05 00 00 00       	mov    edx,0x5
    9cb9:	48 8d 35 05 3e 00 00 	lea    rsi,[rip+0x3e05]        # dac5 <_IO_stdin_used+0x1ac5>
    9cc0:	48 89 c7             	mov    rdi,rax
    9cc3:	e8 88 88 ff ff       	call   2550 <strncmp@plt>
    9cc8:	85 c0                	test   eax,eax
    9cca:	75 4d                	jne    9d19 <line_parser+0x6ff>
    9ccc:	c6 85 7d ff ff ff 01 	mov    BYTE PTR [rbp-0x83],0x1
    9cd3:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9cd7:	48 83 c0 05          	add    rax,0x5
    9cdb:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    9cdf:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9ce3:	48 8d 90 4c 01 00 00 	lea    rdx,[rax+0x14c]
    9cea:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9cee:	48 89 c6             	mov    rsi,rax
    9cf1:	48 89 d7             	mov    rdi,rdx
    9cf4:	e8 87 89 ff ff       	call   2680 <strcat@plt>
    9cf9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9cfd:	48 8d 98 4c 01 00 00 	lea    rbx,[rax+0x14c]
    9d04:	48 89 df             	mov    rdi,rbx
    9d07:	e8 f4 88 ff ff       	call   2600 <strlen@plt>
    9d0c:	48 01 d8             	add    rax,rbx
    9d0f:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    9d14:	e9 91 07 00 00       	jmp    a4aa <line_parser+0xe90>
    9d19:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9d1d:	ba 06 00 00 00       	mov    edx,0x6
    9d22:	48 8d 35 a2 3d 00 00 	lea    rsi,[rip+0x3da2]        # dacb <_IO_stdin_used+0x1acb>
    9d29:	48 89 c7             	mov    rdi,rax
    9d2c:	e8 1f 88 ff ff       	call   2550 <strncmp@plt>
    9d31:	85 c0                	test   eax,eax
    9d33:	75 31                	jne    9d66 <line_parser+0x74c>
    9d35:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9d39:	48 89 c7             	mov    rdi,rax
    9d3c:	e8 42 f8 ff ff       	call   9583 <sc_strip>
    9d41:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9d45:	48 83 c0 06          	add    rax,0x6
    9d49:	48 89 c7             	mov    rdi,rax
    9d4c:	e8 6f 89 ff ff       	call   26c0 <atoi@plt>
    9d51:	89 45 ac             	mov    DWORD PTR [rbp-0x54],eax
    9d54:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9d58:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    9d5b:	89 90 4c 03 00 00    	mov    DWORD PTR [rax+0x34c],edx
    9d61:	e9 44 07 00 00       	jmp    a4aa <line_parser+0xe90>
    9d66:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9d6a:	ba 05 00 00 00       	mov    edx,0x5
    9d6f:	48 8d 35 5c 3d 00 00 	lea    rsi,[rip+0x3d5c]        # dad2 <_IO_stdin_used+0x1ad2>
    9d76:	48 89 c7             	mov    rdi,rax
    9d79:	e8 d2 87 ff ff       	call   2550 <strncmp@plt>
    9d7e:	85 c0                	test   eax,eax
    9d80:	75 3f                	jne    9dc1 <line_parser+0x7a7>
    9d82:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9d86:	48 89 c7             	mov    rdi,rax
    9d89:	e8 72 88 ff ff       	call   2600 <strlen@plt>
    9d8e:	48 8d 50 fa          	lea    rdx,[rax-0x6]
    9d92:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9d96:	48 8d 48 05          	lea    rcx,[rax+0x5]
    9d9a:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9d9e:	48 89 ce             	mov    rsi,rcx
    9da1:	48 89 c7             	mov    rdi,rax
    9da4:	e8 17 8a ff ff       	call   27c0 <strncpy@plt>
    9da9:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9dad:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9db1:	48 89 d6             	mov    rsi,rdx
    9db4:	48 89 c7             	mov    rdi,rax
    9db7:	e8 a7 f6 ff ff       	call   9463 <get_ruletype>
    9dbc:	e9 e9 06 00 00       	jmp    a4aa <line_parser+0xe90>
    9dc1:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9dc5:	ba 08 00 00 00       	mov    edx,0x8
    9dca:	48 8d 35 07 3d 00 00 	lea    rsi,[rip+0x3d07]        # dad8 <_IO_stdin_used+0x1ad8>
    9dd1:	48 89 c7             	mov    rdi,rax
    9dd4:	e8 77 87 ff ff       	call   2550 <strncmp@plt>
    9dd9:	85 c0                	test   eax,eax
    9ddb:	0f 85 8f 00 00 00    	jne    9e70 <line_parser+0x856>
    9de1:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9de5:	48 83 c0 08          	add    rax,0x8
    9de9:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    9ded:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9df1:	48 8d 35 c3 3c 00 00 	lea    rsi,[rip+0x3cc3]        # dabb <_IO_stdin_used+0x1abb>
    9df8:	48 89 c7             	mov    rdi,rax
    9dfb:	e8 70 88 ff ff       	call   2670 <strstr@plt>
    9e00:	48 85 c0             	test   rax,rax
    9e03:	74 30                	je     9e35 <line_parser+0x81b>
    9e05:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9e09:	48 89 c7             	mov    rdi,rax
    9e0c:	e8 ef 87 ff ff       	call   2600 <strlen@plt>
    9e11:	48 8d 50 f5          	lea    rdx,[rax-0xb]
    9e15:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9e19:	48 8d 48 08          	lea    rcx,[rax+0x8]
    9e1d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9e21:	48 83 c0 40          	add    rax,0x40
    9e25:	48 89 ce             	mov    rsi,rcx
    9e28:	48 89 c7             	mov    rdi,rax
    9e2b:	e8 90 89 ff ff       	call   27c0 <strncpy@plt>
    9e30:	e9 75 06 00 00       	jmp    a4aa <line_parser+0xe90>
    9e35:	c6 85 7e ff ff ff 01 	mov    BYTE PTR [rbp-0x82],0x1
    9e3c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9e40:	48 8d 50 40          	lea    rdx,[rax+0x40]
    9e44:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9e48:	48 89 c6             	mov    rsi,rax
    9e4b:	48 89 d7             	mov    rdi,rdx
    9e4e:	e8 2d 88 ff ff       	call   2680 <strcat@plt>
    9e53:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9e57:	48 8d 58 40          	lea    rbx,[rax+0x40]
    9e5b:	48 89 df             	mov    rdi,rbx
    9e5e:	e8 9d 87 ff ff       	call   2600 <strlen@plt>
    9e63:	48 01 d8             	add    rax,rbx
    9e66:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    9e6b:	e9 3a 06 00 00       	jmp    a4aa <line_parser+0xe90>
    9e70:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9e74:	ba 04 00 00 00       	mov    edx,0x4
    9e79:	48 8d 35 61 3c 00 00 	lea    rsi,[rip+0x3c61]        # dae1 <_IO_stdin_used+0x1ae1>
    9e80:	48 89 c7             	mov    rdi,rax
    9e83:	e8 c8 86 ff ff       	call   2550 <strncmp@plt>
    9e88:	85 c0                	test   eax,eax
    9e8a:	0f 85 8e 00 00 00    	jne    9f1e <line_parser+0x904>
    9e90:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9e94:	48 8d 35 ed 3b 00 00 	lea    rsi,[rip+0x3bed]        # da88 <_IO_stdin_used+0x1a88>
    9e9b:	48 89 c7             	mov    rdi,rax
    9e9e:	e8 2d 89 ff ff       	call   27d0 <strcspn@plt>
    9ea3:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
    9ea7:	48 01 d0             	add    rax,rdx
    9eaa:	c6 00 00             	mov    BYTE PTR [rax],0x0
    9ead:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9eb1:	48 83 c0 04          	add    rax,0x4
    9eb5:	48 89 c7             	mov    rdi,rax
    9eb8:	e8 04 f3 ff ff       	call   91c1 <isdigit>
    9ebd:	84 c0                	test   al,al
    9ebf:	74 47                	je     9f08 <line_parser+0x8ee>
    9ec1:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9ec5:	48 83 c0 04          	add    rax,0x4
    9ec9:	48 89 c7             	mov    rdi,rax
    9ecc:	e8 ef 87 ff ff       	call   26c0 <atoi@plt>
    9ed1:	89 45 a8             	mov    DWORD PTR [rbp-0x58],eax
    9ed4:	83 7d a8 00          	cmp    DWORD PTR [rbp-0x58],0x0
    9ed8:	7e 18                	jle    9ef2 <line_parser+0x8d8>
    9eda:	83 7d a8 0a          	cmp    DWORD PTR [rbp-0x58],0xa
    9ede:	7f 12                	jg     9ef2 <line_parser+0x8d8>
    9ee0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9ee4:	8b 55 a8             	mov    edx,DWORD PTR [rbp-0x58]
    9ee7:	89 90 48 01 00 00    	mov    DWORD PTR [rax+0x148],edx
    9eed:	e9 b8 05 00 00       	jmp    a4aa <line_parser+0xe90>
    9ef2:	48 8d 3d ef 3b 00 00 	lea    rdi,[rip+0x3bef]        # dae8 <_IO_stdin_used+0x1ae8>
    9ef9:	e8 e2 85 ff ff       	call   24e0 <puts@plt>
    9efe:	bf ff ff ff ff       	mov    edi,0xffffffff
    9f03:	e8 f8 85 ff ff       	call   2500 <exit@plt>
    9f08:	48 8d 3d 01 3c 00 00 	lea    rdi,[rip+0x3c01]        # db10 <_IO_stdin_used+0x1b10>
    9f0f:	e8 cc 85 ff ff       	call   24e0 <puts@plt>
    9f14:	bf ff ff ff ff       	mov    edi,0xffffffff
    9f19:	e8 e2 85 ff ff       	call   2500 <exit@plt>
    9f1e:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9f22:	ba 06 00 00 00       	mov    edx,0x6
    9f27:	48 8d 35 0a 3c 00 00 	lea    rsi,[rip+0x3c0a]        # db38 <_IO_stdin_used+0x1b38>
    9f2e:	48 89 c7             	mov    rdi,rax
    9f31:	e8 1a 86 ff ff       	call   2550 <strncmp@plt>
    9f36:	85 c0                	test   eax,eax
    9f38:	0f 85 9b 00 00 00    	jne    9fd9 <line_parser+0x9bf>
    9f3e:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9f42:	48 89 c7             	mov    rdi,rax
    9f45:	e8 39 f6 ff ff       	call   9583 <sc_strip>
    9f4a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9f4e:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    9f54:	3d 80 00 00 00       	cmp    eax,0x80
    9f59:	75 58                	jne    9fb3 <line_parser+0x999>
    9f5b:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9f5f:	48 83 c0 06          	add    rax,0x6
    9f63:	ba ff 00 00 00       	mov    edx,0xff
    9f68:	be 00 00 00 00       	mov    esi,0x0
    9f6d:	48 89 c7             	mov    rdi,rax
    9f70:	e8 b9 f5 ff ff       	call   952e <numeric_check>
    9f75:	89 45 a4             	mov    DWORD PTR [rbp-0x5c],eax
    9f78:	83 7d a4 ff          	cmp    DWORD PTR [rbp-0x5c],0xffffffff
    9f7c:	75 16                	jne    9f94 <line_parser+0x97a>
    9f7e:	48 8d 3d ba 3b 00 00 	lea    rdi,[rip+0x3bba]        # db3f <_IO_stdin_used+0x1b3f>
    9f85:	e8 56 85 ff ff       	call   24e0 <puts@plt>
    9f8a:	bf ff ff ff ff       	mov    edi,0xffffffff
    9f8f:	e8 6c 85 ff ff       	call   2500 <exit@plt>
    9f94:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
    9f97:	89 c2                	mov    edx,eax
    9f99:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9f9d:	88 90 72 03 00 00    	mov    BYTE PTR [rax+0x372],dl
    9fa3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9fa7:	c6 80 6e 03 00 00 01 	mov    BYTE PTR [rax+0x36e],0x1
    9fae:	e9 f7 04 00 00       	jmp    a4aa <line_parser+0xe90>
    9fb3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9fb7:	48 83 c0 20          	add    rax,0x20
    9fbb:	48 89 c6             	mov    rsi,rax
    9fbe:	48 8d 3d 93 3b 00 00 	lea    rdi,[rip+0x3b93]        # db58 <_IO_stdin_used+0x1b58>
    9fc5:	b8 00 00 00 00       	mov    eax,0x0
    9fca:	e8 b1 84 ff ff       	call   2480 <printf@plt>
    9fcf:	bf ff ff ff ff       	mov    edi,0xffffffff
    9fd4:	e8 27 85 ff ff       	call   2500 <exit@plt>
    9fd9:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9fdd:	ba 06 00 00 00       	mov    edx,0x6
    9fe2:	48 8d 35 a6 3b 00 00 	lea    rsi,[rip+0x3ba6]        # db8f <_IO_stdin_used+0x1b8f>
    9fe9:	48 89 c7             	mov    rdi,rax
    9fec:	e8 5f 85 ff ff       	call   2550 <strncmp@plt>
    9ff1:	85 c0                	test   eax,eax
    9ff3:	0f 85 86 00 00 00    	jne    a07f <line_parser+0xa65>
    9ff9:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9ffd:	48 89 c7             	mov    rdi,rax
    a000:	e8 7e f5 ff ff       	call   9583 <sc_strip>
    a005:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a009:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a00f:	3d 80 00 00 00       	cmp    eax,0x80
    a014:	75 58                	jne    a06e <line_parser+0xa54>
    a016:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a01a:	48 83 c0 06          	add    rax,0x6
    a01e:	ba ff 00 00 00       	mov    edx,0xff
    a023:	be 00 00 00 00       	mov    esi,0x0
    a028:	48 89 c7             	mov    rdi,rax
    a02b:	e8 fe f4 ff ff       	call   952e <numeric_check>
    a030:	89 45 a0             	mov    DWORD PTR [rbp-0x60],eax
    a033:	83 7d a0 ff          	cmp    DWORD PTR [rbp-0x60],0xffffffff
    a037:	75 16                	jne    a04f <line_parser+0xa35>
    a039:	48 8d 3d 56 3b 00 00 	lea    rdi,[rip+0x3b56]        # db96 <_IO_stdin_used+0x1b96>
    a040:	e8 9b 84 ff ff       	call   24e0 <puts@plt>
    a045:	bf ff ff ff ff       	mov    edi,0xffffffff
    a04a:	e8 b1 84 ff ff       	call   2500 <exit@plt>
    a04f:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    a052:	89 c2                	mov    edx,eax
    a054:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a058:	88 90 73 03 00 00    	mov    BYTE PTR [rax+0x373],dl
    a05e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a062:	c6 80 6f 03 00 00 01 	mov    BYTE PTR [rax+0x36f],0x1
    a069:	e9 3c 04 00 00       	jmp    a4aa <line_parser+0xe90>
    a06e:	48 8d 3d 3b 3b 00 00 	lea    rdi,[rip+0x3b3b]        # dbb0 <_IO_stdin_used+0x1bb0>
    a075:	e8 66 84 ff ff       	call   24e0 <puts@plt>
    a07a:	e9 2b 04 00 00       	jmp    a4aa <line_parser+0xe90>
    a07f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a083:	ba 08 00 00 00       	mov    edx,0x8
    a088:	48 8d 35 53 3b 00 00 	lea    rsi,[rip+0x3b53]        # dbe2 <_IO_stdin_used+0x1be2>
    a08f:	48 89 c7             	mov    rdi,rax
    a092:	e8 b9 84 ff ff       	call   2550 <strncmp@plt>
    a097:	85 c0                	test   eax,eax
    a099:	0f 85 8c 00 00 00    	jne    a12b <line_parser+0xb11>
    a09f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a0a3:	48 89 c7             	mov    rdi,rax
    a0a6:	e8 d8 f4 ff ff       	call   9583 <sc_strip>
    a0ab:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a0af:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a0b5:	3d 80 00 00 00       	cmp    eax,0x80
    a0ba:	75 59                	jne    a115 <line_parser+0xafb>
    a0bc:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a0c0:	48 83 c0 08          	add    rax,0x8
    a0c4:	ba ff ff 00 00       	mov    edx,0xffff
    a0c9:	be 00 00 00 00       	mov    esi,0x0
    a0ce:	48 89 c7             	mov    rdi,rax
    a0d1:	e8 58 f4 ff ff       	call   952e <numeric_check>
    a0d6:	89 45 9c             	mov    DWORD PTR [rbp-0x64],eax
    a0d9:	83 7d 9c ff          	cmp    DWORD PTR [rbp-0x64],0xffffffff
    a0dd:	75 16                	jne    a0f5 <line_parser+0xadb>
    a0df:	48 8d 3d 05 3b 00 00 	lea    rdi,[rip+0x3b05]        # dbeb <_IO_stdin_used+0x1beb>
    a0e6:	e8 f5 83 ff ff       	call   24e0 <puts@plt>
    a0eb:	bf ff ff ff ff       	mov    edi,0xffffffff
    a0f0:	e8 0b 84 ff ff       	call   2500 <exit@plt>
    a0f5:	8b 45 9c             	mov    eax,DWORD PTR [rbp-0x64]
    a0f8:	89 c2                	mov    edx,eax
    a0fa:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a0fe:	66 89 90 76 03 00 00 	mov    WORD PTR [rax+0x376],dx
    a105:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a109:	c6 80 71 03 00 00 01 	mov    BYTE PTR [rax+0x371],0x1
    a110:	e9 95 03 00 00       	jmp    a4aa <line_parser+0xe90>
    a115:	48 8d 3d ec 3a 00 00 	lea    rdi,[rip+0x3aec]        # dc08 <_IO_stdin_used+0x1c08>
    a11c:	e8 bf 83 ff ff       	call   24e0 <puts@plt>
    a121:	bf ff ff ff ff       	mov    edi,0xffffffff
    a126:	e8 d5 83 ff ff       	call   2500 <exit@plt>
    a12b:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a12f:	ba 09 00 00 00       	mov    edx,0x9
    a134:	48 8d 35 01 3b 00 00 	lea    rsi,[rip+0x3b01]        # dc3c <_IO_stdin_used+0x1c3c>
    a13b:	48 89 c7             	mov    rdi,rax
    a13e:	e8 0d 84 ff ff       	call   2550 <strncmp@plt>
    a143:	85 c0                	test   eax,eax
    a145:	75 7a                	jne    a1c1 <line_parser+0xba7>
    a147:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a14b:	48 89 c7             	mov    rdi,rax
    a14e:	e8 30 f4 ff ff       	call   9583 <sc_strip>
    a153:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a157:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a15d:	3d 80 00 00 00       	cmp    eax,0x80
    a162:	0f 85 42 03 00 00    	jne    a4aa <line_parser+0xe90>
    a168:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a16c:	48 83 c0 09          	add    rax,0x9
    a170:	ba ff ff 00 00       	mov    edx,0xffff
    a175:	be 00 00 00 00       	mov    esi,0x0
    a17a:	48 89 c7             	mov    rdi,rax
    a17d:	e8 ac f3 ff ff       	call   952e <numeric_check>
    a182:	89 45 98             	mov    DWORD PTR [rbp-0x68],eax
    a185:	83 7d 98 ff          	cmp    DWORD PTR [rbp-0x68],0xffffffff
    a189:	75 16                	jne    a1a1 <line_parser+0xb87>
    a18b:	48 8d 3d b4 3a 00 00 	lea    rdi,[rip+0x3ab4]        # dc46 <_IO_stdin_used+0x1c46>
    a192:	e8 49 83 ff ff       	call   24e0 <puts@plt>
    a197:	bf ff ff ff ff       	mov    edi,0xffffffff
    a19c:	e8 5f 83 ff ff       	call   2500 <exit@plt>
    a1a1:	8b 45 98             	mov    eax,DWORD PTR [rbp-0x68]
    a1a4:	89 c2                	mov    edx,eax
    a1a6:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a1aa:	66 89 90 74 03 00 00 	mov    WORD PTR [rax+0x374],dx
    a1b1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a1b5:	c6 80 70 03 00 00 01 	mov    BYTE PTR [rax+0x370],0x1
    a1bc:	e9 e9 02 00 00       	jmp    a4aa <line_parser+0xe90>
    a1c1:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a1c5:	ba 04 00 00 00       	mov    edx,0x4
    a1ca:	48 8d 35 91 3a 00 00 	lea    rsi,[rip+0x3a91]        # dc62 <_IO_stdin_used+0x1c62>
    a1d1:	48 89 c7             	mov    rdi,rax
    a1d4:	e8 77 83 ff ff       	call   2550 <strncmp@plt>
    a1d9:	85 c0                	test   eax,eax
    a1db:	75 64                	jne    a241 <line_parser+0xc27>
    a1dd:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a1e1:	48 89 c7             	mov    rdi,rax
    a1e4:	e8 9a f3 ff ff       	call   9583 <sc_strip>
    a1e9:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a1ed:	48 83 c0 04          	add    rax,0x4
    a1f1:	ba ff 00 00 00       	mov    edx,0xff
    a1f6:	be 00 00 00 00       	mov    esi,0x0
    a1fb:	48 89 c7             	mov    rdi,rax
    a1fe:	e8 2b f3 ff ff       	call   952e <numeric_check>
    a203:	89 45 94             	mov    DWORD PTR [rbp-0x6c],eax
    a206:	83 7d 94 ff          	cmp    DWORD PTR [rbp-0x6c],0xffffffff
    a20a:	75 16                	jne    a222 <line_parser+0xc08>
    a20c:	48 8d 3d 54 3a 00 00 	lea    rdi,[rip+0x3a54]        # dc67 <_IO_stdin_used+0x1c67>
    a213:	e8 c8 82 ff ff       	call   24e0 <puts@plt>
    a218:	bf ff ff ff ff       	mov    edi,0xffffffff
    a21d:	e8 de 82 ff ff       	call   2500 <exit@plt>
    a222:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    a225:	89 c2                	mov    edx,eax
    a227:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a22b:	88 90 6c 03 00 00    	mov    BYTE PTR [rax+0x36c],dl
    a231:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a235:	c6 80 69 03 00 00 01 	mov    BYTE PTR [rax+0x369],0x1
    a23c:	e9 69 02 00 00       	jmp    a4aa <line_parser+0xe90>
    a241:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a245:	ba 07 00 00 00       	mov    edx,0x7
    a24a:	48 8d 35 28 3a 00 00 	lea    rsi,[rip+0x3a28]        # dc79 <_IO_stdin_used+0x1c79>
    a251:	48 89 c7             	mov    rdi,rax
    a254:	e8 f7 82 ff ff       	call   2550 <strncmp@plt>
    a259:	85 c0                	test   eax,eax
    a25b:	75 6e                	jne    a2cb <line_parser+0xcb1>
    a25d:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a261:	48 89 c7             	mov    rdi,rax
    a264:	e8 1a f3 ff ff       	call   9583 <sc_strip>
    a269:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a26d:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a273:	83 f8 7e             	cmp    eax,0x7e
    a276:	75 3d                	jne    a2b5 <line_parser+0xc9b>
    a278:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a27c:	48 89 c7             	mov    rdi,rax
    a27f:	e8 7c 83 ff ff       	call   2600 <strlen@plt>
    a284:	48 8d 50 f8          	lea    rdx,[rax-0x8]
    a288:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a28c:	48 8d 48 07          	lea    rcx,[rax+0x7]
    a290:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a294:	48 05 53 03 00 00    	add    rax,0x353
    a29a:	48 89 ce             	mov    rsi,rcx
    a29d:	48 89 c7             	mov    rdi,rax
    a2a0:	e8 1b 85 ff ff       	call   27c0 <strncpy@plt>
    a2a5:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a2a9:	c6 80 50 03 00 00 01 	mov    BYTE PTR [rax+0x350],0x1
    a2b0:	e9 f5 01 00 00       	jmp    a4aa <line_parser+0xe90>
    a2b5:	48 8d 3d cc 39 00 00 	lea    rdi,[rip+0x39cc]        # dc88 <_IO_stdin_used+0x1c88>
    a2bc:	e8 1f 82 ff ff       	call   24e0 <puts@plt>
    a2c1:	bf ff ff ff ff       	mov    edi,0xffffffff
    a2c6:	e8 35 82 ff ff       	call   2500 <exit@plt>
    a2cb:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a2cf:	ba 04 00 00 00       	mov    edx,0x4
    a2d4:	48 8d 35 de 39 00 00 	lea    rsi,[rip+0x39de]        # dcb9 <_IO_stdin_used+0x1cb9>
    a2db:	48 89 c7             	mov    rdi,rax
    a2de:	e8 6d 82 ff ff       	call   2550 <strncmp@plt>
    a2e3:	85 c0                	test   eax,eax
    a2e5:	75 78                	jne    a35f <line_parser+0xd45>
    a2e7:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a2eb:	48 89 c7             	mov    rdi,rax
    a2ee:	e8 90 f2 ff ff       	call   9583 <sc_strip>
    a2f3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a2f7:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a2fd:	83 f8 7e             	cmp    eax,0x7e
    a300:	0f 85 a4 01 00 00    	jne    a4aa <line_parser+0xe90>
    a306:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a30a:	48 83 c0 04          	add    rax,0x4
    a30e:	ba ff ff ff ff       	mov    edx,0xffffffff
    a313:	be 00 00 00 00       	mov    esi,0x0
    a318:	48 89 c7             	mov    rdi,rax
    a31b:	e8 0e f2 ff ff       	call   952e <numeric_check>
    a320:	89 45 90             	mov    DWORD PTR [rbp-0x70],eax
    a323:	83 7d 90 ff          	cmp    DWORD PTR [rbp-0x70],0xffffffff
    a327:	75 16                	jne    a33f <line_parser+0xd25>
    a329:	48 8d 3d 8e 39 00 00 	lea    rdi,[rip+0x398e]        # dcbe <_IO_stdin_used+0x1cbe>
    a330:	e8 ab 81 ff ff       	call   24e0 <puts@plt>
    a335:	bf ff ff ff ff       	mov    edi,0xffffffff
    a33a:	e8 c1 81 ff ff       	call   2500 <exit@plt>
    a33f:	8b 45 90             	mov    eax,DWORD PTR [rbp-0x70]
    a342:	89 c2                	mov    edx,eax
    a344:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a348:	66 89 90 5c 03 00 00 	mov    WORD PTR [rax+0x35c],dx
    a34f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a353:	c6 80 51 03 00 00 01 	mov    BYTE PTR [rax+0x351],0x1
    a35a:	e9 4b 01 00 00       	jmp    a4aa <line_parser+0xe90>
    a35f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a363:	ba 06 00 00 00       	mov    edx,0x6
    a368:	48 8d 35 61 39 00 00 	lea    rsi,[rip+0x3961]        # dcd0 <_IO_stdin_used+0x1cd0>
    a36f:	48 89 c7             	mov    rdi,rax
    a372:	e8 d9 81 ff ff       	call   2550 <strncmp@plt>
    a377:	85 c0                	test   eax,eax
    a379:	75 7c                	jne    a3f7 <line_parser+0xddd>
    a37b:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a37f:	48 89 c7             	mov    rdi,rax
    a382:	e8 79 82 ff ff       	call   2600 <strlen@plt>
    a387:	48 8d 50 f7          	lea    rdx,[rax-0x9]
    a38b:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a38f:	48 8d 48 06          	lea    rcx,[rax+0x6]
    a393:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a397:	48 05 10 02 00 00    	add    rax,0x210
    a39d:	48 89 ce             	mov    rsi,rcx
    a3a0:	48 89 c7             	mov    rdi,rax
    a3a3:	e8 18 84 ff ff       	call   27c0 <strncpy@plt>
    a3a8:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a3ac:	48 8d 88 10 02 00 00 	lea    rcx,[rax+0x210]
    a3b3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a3b7:	48 05 d0 01 00 00    	add    rax,0x1d0
    a3bd:	ba 00 00 00 00       	mov    edx,0x0
    a3c2:	48 89 ce             	mov    rsi,rcx
    a3c5:	48 89 c7             	mov    rdi,rax
    a3c8:	e8 03 83 ff ff       	call   26d0 <regcomp@plt>
    a3cd:	85 c0                	test   eax,eax
    a3cf:	74 16                	je     a3e7 <line_parser+0xdcd>
    a3d1:	48 8d 3d 00 39 00 00 	lea    rdi,[rip+0x3900]        # dcd8 <_IO_stdin_used+0x1cd8>
    a3d8:	e8 03 81 ff ff       	call   24e0 <puts@plt>
    a3dd:	bf ff ff ff ff       	mov    edi,0xffffffff
    a3e2:	e8 19 81 ff ff       	call   2500 <exit@plt>
    a3e7:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a3eb:	c6 80 90 02 00 00 01 	mov    BYTE PTR [rax+0x290],0x1
    a3f2:	e9 b3 00 00 00       	jmp    a4aa <line_parser+0xe90>
    a3f7:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a3fb:	ba 06 00 00 00       	mov    edx,0x6
    a400:	48 8d 35 f6 38 00 00 	lea    rsi,[rip+0x38f6]        # dcfd <_IO_stdin_used+0x1cfd>
    a407:	48 89 c7             	mov    rdi,rax
    a40a:	e8 41 81 ff ff       	call   2550 <strncmp@plt>
    a40f:	85 c0                	test   eax,eax
    a411:	75 2a                	jne    a43d <line_parser+0xe23>
    a413:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a417:	48 89 c7             	mov    rdi,rax
    a41a:	e8 64 f1 ff ff       	call   9583 <sc_strip>
    a41f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a423:	48 8d 48 06          	lea    rcx,[rax+0x6]
    a427:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a42b:	ba 01 00 00 00       	mov    edx,0x1
    a430:	48 89 ce             	mov    rsi,rcx
    a433:	48 89 c7             	mov    rdi,rax
    a436:	e8 6c 03 00 00       	call   a7a7 <d_op_parser>
    a43b:	eb 6d                	jmp    a4aa <line_parser+0xe90>
    a43d:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a441:	ba 07 00 00 00       	mov    edx,0x7
    a446:	48 8d 35 b7 38 00 00 	lea    rsi,[rip+0x38b7]        # dd04 <_IO_stdin_used+0x1d04>
    a44d:	48 89 c7             	mov    rdi,rax
    a450:	e8 fb 80 ff ff       	call   2550 <strncmp@plt>
    a455:	85 c0                	test   eax,eax
    a457:	75 27                	jne    a480 <line_parser+0xe66>
    a459:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a45d:	48 89 c7             	mov    rdi,rax
    a460:	e8 1e f1 ff ff       	call   9583 <sc_strip>
    a465:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a469:	48 83 c0 07          	add    rax,0x7
    a46d:	48 89 c7             	mov    rdi,rax
    a470:	e8 4b 82 ff ff       	call   26c0 <atoi@plt>
    a475:	89 c2                	mov    edx,eax
    a477:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a47b:	89 50 14             	mov    DWORD PTR [rax+0x14],edx
    a47e:	eb 2a                	jmp    a4aa <line_parser+0xe90>
    a480:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a484:	ba 0b 00 00 00       	mov    edx,0xb
    a489:	48 8d 35 7c 38 00 00 	lea    rsi,[rip+0x387c]        # dd0c <_IO_stdin_used+0x1d0c>
    a490:	48 89 c7             	mov    rdi,rax
    a493:	e8 b8 80 ff ff       	call   2550 <strncmp@plt>
    a498:	85 c0                	test   eax,eax
    a49a:	75 0e                	jne    a4aa <line_parser+0xe90>
    a49c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a4a0:	c7 80 48 03 00 00 01 	mov    DWORD PTR [rax+0x348],0x1
    a4a7:	00 00 00 
    a4aa:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    a4ad:	89 45 80             	mov    DWORD PTR [rbp-0x80],eax
    a4b0:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a4b4:	48 89 c7             	mov    rdi,rax
    a4b7:	e8 44 81 ff ff       	call   2600 <strlen@plt>
    a4bc:	48 8d 50 ff          	lea    rdx,[rax-0x1]
    a4c0:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a4c4:	48 01 d0             	add    rax,rdx
    a4c7:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    a4ca:	3c 29                	cmp    al,0x29
    a4cc:	74 3d                	je     a50b <line_parser+0xef1>
    a4ce:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    a4d1:	3b 45 8c             	cmp    eax,DWORD PTR [rbp-0x74]
    a4d4:	7f 0c                	jg     a4e2 <line_parser+0xec8>
    a4d6:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
    a4d9:	3b 45 84             	cmp    eax,DWORD PTR [rbp-0x7c]
    a4dc:	0f 8e 54 f2 ff ff    	jle    9736 <line_parser+0x11c>
    a4e2:	0f b6 85 7f ff ff ff 	movzx  eax,BYTE PTR [rbp-0x81]
    a4e9:	83 f0 01             	xor    eax,0x1
    a4ec:	84 c0                	test   al,al
    a4ee:	74 1c                	je     a50c <line_parser+0xef2>
    a4f0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a4f4:	48 83 c0 20          	add    rax,0x20
    a4f8:	48 bb 55 6e 74 69 74 	movabs rbx,0x64656c7469746e55
    a4ff:	6c 65 64 
    a502:	48 89 18             	mov    QWORD PTR [rax],rbx
    a505:	c6 40 08 00          	mov    BYTE PTR [rax+0x8],0x0
    a509:	eb 01                	jmp    a50c <line_parser+0xef2>
    a50b:	90                   	nop
    a50c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a510:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    a517:	00 00 
    a519:	74 05                	je     a520 <line_parser+0xf06>
    a51b:	e8 20 82 ff ff       	call   2740 <__stack_chk_fail@plt>
    a520:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    a524:	c9                   	leave  
    a525:	c3                   	ret    

000000000000a526 <rule_processor>:
    a526:	f3 0f 1e fa          	endbr64 
    a52a:	55                   	push   rbp
    a52b:	48 89 e5             	mov    rbp,rsp
    a52e:	48 83 ec 10          	sub    rsp,0x10
    a532:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    a539:	eb 22                	jmp    a55d <rule_processor+0x37>
    a53b:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    a53e:	48 98                	cdqe   
    a540:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    a547:	48 8d 15 92 6d 00 00 	lea    rdx,[rip+0x6d92]        # 112e0 <rules>
    a54e:	48 01 d0             	add    rax,rdx
    a551:	48 89 c7             	mov    rdi,rax
    a554:	e8 13 00 00 00       	call   a56c <process_rule>
    a559:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    a55d:	8b 05 b1 6a 00 00    	mov    eax,DWORD PTR [rip+0x6ab1]        # 11014 <num_rules>
    a563:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    a566:	7e d3                	jle    a53b <rule_processor+0x15>
    a568:	90                   	nop
    a569:	90                   	nop
    a56a:	c9                   	leave  
    a56b:	c3                   	ret    

000000000000a56c <process_rule>:
    a56c:	f3 0f 1e fa          	endbr64 
    a570:	55                   	push   rbp
    a571:	48 89 e5             	mov    rbp,rsp
    a574:	41 57                	push   r15
    a576:	41 56                	push   r14
    a578:	41 54                	push   r12
    a57a:	53                   	push   rbx
    a57b:	48 83 ec 40          	sub    rsp,0x40
    a57f:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    a583:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a58a:	00 00 
    a58c:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    a590:	31 c0                	xor    eax,eax
    a592:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a596:	0f b6 80 90 02 00 00 	movzx  eax,BYTE PTR [rax+0x290]
    a59d:	83 f0 01             	xor    eax,0x1
    a5a0:	84 c0                	test   al,al
    a5a2:	0f 84 dd 01 00 00    	je     a785 <process_rule+0x219>
    a5a8:	48 89 e0             	mov    rax,rsp
    a5ab:	49 89 c4             	mov    r12,rax
    a5ae:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a5b2:	48 83 c0 40          	add    rax,0x40
    a5b6:	48 89 c7             	mov    rdi,rax
    a5b9:	e8 42 80 ff ff       	call   2600 <strlen@plt>
    a5be:	48 83 c0 01          	add    rax,0x1
    a5c2:	48 01 c0             	add    rax,rax
    a5c5:	48 89 c2             	mov    rdx,rax
    a5c8:	48 83 ea 01          	sub    rdx,0x1
    a5cc:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    a5d0:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    a5d4:	48 c7 45 a8 00 00 00 	mov    QWORD PTR [rbp-0x58],0x0
    a5db:	00 
    a5dc:	49 89 c6             	mov    r14,rax
    a5df:	41 bf 00 00 00 00    	mov    r15d,0x0
    a5e5:	ba 10 00 00 00       	mov    edx,0x10
    a5ea:	48 83 ea 01          	sub    rdx,0x1
    a5ee:	48 01 d0             	add    rax,rdx
    a5f1:	bb 10 00 00 00       	mov    ebx,0x10
    a5f6:	ba 00 00 00 00       	mov    edx,0x0
    a5fb:	48 f7 f3             	div    rbx
    a5fe:	48 6b c0 10          	imul   rax,rax,0x10
    a602:	48 89 c1             	mov    rcx,rax
    a605:	48 81 e1 00 f0 ff ff 	and    rcx,0xfffffffffffff000
    a60c:	48 89 e2             	mov    rdx,rsp
    a60f:	48 29 ca             	sub    rdx,rcx
    a612:	48 39 d4             	cmp    rsp,rdx
    a615:	74 12                	je     a629 <process_rule+0xbd>
    a617:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    a61e:	48 83 8c 24 f8 0f 00 	or     QWORD PTR [rsp+0xff8],0x0
    a625:	00 00 
    a627:	eb e9                	jmp    a612 <process_rule+0xa6>
    a629:	48 89 c2             	mov    rdx,rax
    a62c:	81 e2 ff 0f 00 00    	and    edx,0xfff
    a632:	48 29 d4             	sub    rsp,rdx
    a635:	48 89 c2             	mov    rdx,rax
    a638:	81 e2 ff 0f 00 00    	and    edx,0xfff
    a63e:	48 85 d2             	test   rdx,rdx
    a641:	74 10                	je     a653 <process_rule+0xe7>
    a643:	25 ff 0f 00 00       	and    eax,0xfff
    a648:	48 83 e8 08          	sub    rax,0x8
    a64c:	48 01 e0             	add    rax,rsp
    a64f:	48 83 08 00          	or     QWORD PTR [rax],0x0
    a653:	48 89 e0             	mov    rax,rsp
    a656:	48 83 c0 00          	add    rax,0x0
    a65a:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    a65e:	c7 45 c0 00 00 00 00 	mov    DWORD PTR [rbp-0x40],0x0
    a665:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a669:	48 8d 50 40          	lea    rdx,[rax+0x40]
    a66d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a671:	48 05 c8 02 00 00    	add    rax,0x2c8
    a677:	48 89 d6             	mov    rsi,rdx
    a67a:	48 89 c7             	mov    rdi,rax
    a67d:	e8 ee 80 ff ff       	call   2770 <strcpy@plt>
    a682:	c7 45 c4 00 00 00 00 	mov    DWORD PTR [rbp-0x3c],0x0
    a689:	e9 a4 00 00 00       	jmp    a732 <process_rule+0x1c6>
    a68e:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    a692:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    a695:	48 98                	cdqe   
    a697:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    a69c:	3c 7c                	cmp    al,0x7c
    a69e:	75 18                	jne    a6b8 <process_rule+0x14c>
    a6a0:	83 7d c0 00          	cmp    DWORD PTR [rbp-0x40],0x0
    a6a4:	74 09                	je     a6af <process_rule+0x143>
    a6a6:	c7 45 c0 00 00 00 00 	mov    DWORD PTR [rbp-0x40],0x0
    a6ad:	eb 7f                	jmp    a72e <process_rule+0x1c2>
    a6af:	c7 45 c0 01 00 00 00 	mov    DWORD PTR [rbp-0x40],0x1
    a6b6:	eb 76                	jmp    a72e <process_rule+0x1c2>
    a6b8:	83 7d c0 01          	cmp    DWORD PTR [rbp-0x40],0x1
    a6bc:	75 3a                	jne    a6f8 <process_rule+0x18c>
    a6be:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    a6c2:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    a6c5:	48 98                	cdqe   
    a6c7:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    a6cc:	0f be c0             	movsx  eax,al
    a6cf:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
    a6d2:	48 63 d2             	movsxd rdx,edx
    a6d5:	48 8d 4a ff          	lea    rcx,[rdx-0x1]
    a6d9:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    a6dd:	48 01 d1             	add    rcx,rdx
    a6e0:	89 c2                	mov    edx,eax
    a6e2:	48 8d 35 2f 36 00 00 	lea    rsi,[rip+0x362f]        # dd18 <_IO_stdin_used+0x1d18>
    a6e9:	48 89 cf             	mov    rdi,rcx
    a6ec:	b8 00 00 00 00       	mov    eax,0x0
    a6f1:	e8 2a 7f ff ff       	call   2620 <sprintf@plt>
    a6f6:	eb 36                	jmp    a72e <process_rule+0x1c2>
    a6f8:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    a6fc:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    a6ff:	48 98                	cdqe   
    a701:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    a706:	0f be c0             	movsx  eax,al
    a709:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
    a70c:	01 d2                	add    edx,edx
    a70e:	48 63 ca             	movsxd rcx,edx
    a711:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    a715:	48 01 d1             	add    rcx,rdx
    a718:	89 c2                	mov    edx,eax
    a71a:	48 8d 35 fa 35 00 00 	lea    rsi,[rip+0x35fa]        # dd1b <_IO_stdin_used+0x1d1b>
    a721:	48 89 cf             	mov    rdi,rcx
    a724:	b8 00 00 00 00       	mov    eax,0x0
    a729:	e8 f2 7e ff ff       	call   2620 <sprintf@plt>
    a72e:	83 45 c4 01          	add    DWORD PTR [rbp-0x3c],0x1
    a732:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    a735:	48 63 d8             	movsxd rbx,eax
    a738:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a73c:	48 83 c0 40          	add    rax,0x40
    a740:	48 89 c7             	mov    rdi,rax
    a743:	e8 b8 7e ff ff       	call   2600 <strlen@plt>
    a748:	48 39 c3             	cmp    rbx,rax
    a74b:	0f 82 3d ff ff ff    	jb     a68e <process_rule+0x122>
    a751:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a755:	48 83 c0 40          	add    rax,0x40
    a759:	ba ff 00 00 00       	mov    edx,0xff
    a75e:	be 00 00 00 00       	mov    esi,0x0
    a763:	48 89 c7             	mov    rdi,rax
    a766:	e8 25 7d ff ff       	call   2490 <memset@plt>
    a76b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a76f:	48 8d 50 40          	lea    rdx,[rax+0x40]
    a773:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    a777:	48 89 c6             	mov    rsi,rax
    a77a:	48 89 d7             	mov    rdi,rdx
    a77d:	e8 ee 7f ff ff       	call   2770 <strcpy@plt>
    a782:	4c 89 e4             	mov    rsp,r12
    a785:	90                   	nop
    a786:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a78a:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    a791:	00 00 
    a793:	74 05                	je     a79a <process_rule+0x22e>
    a795:	e8 a6 7f ff ff       	call   2740 <__stack_chk_fail@plt>
    a79a:	48 8d 65 e0          	lea    rsp,[rbp-0x20]
    a79e:	5b                   	pop    rbx
    a79f:	41 5c                	pop    r12
    a7a1:	41 5e                	pop    r14
    a7a3:	41 5f                	pop    r15
    a7a5:	5d                   	pop    rbp
    a7a6:	c3                   	ret    

000000000000a7a7 <d_op_parser>:
    a7a7:	f3 0f 1e fa          	endbr64 
    a7ab:	55                   	push   rbp
    a7ac:	48 89 e5             	mov    rbp,rsp
    a7af:	48 83 ec 20          	sub    rsp,0x20
    a7b3:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    a7b7:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    a7bb:	89 55 ec             	mov    DWORD PTR [rbp-0x14],edx
    a7be:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a7c2:	48 89 c7             	mov    rdi,rax
    a7c5:	e8 f7 e9 ff ff       	call   91c1 <isdigit>
    a7ca:	84 c0                	test   al,al
    a7cc:	74 23                	je     a7f1 <d_op_parser+0x4a>
    a7ce:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a7d2:	c7 40 1c a1 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa1
    a7d9:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a7dd:	48 89 c7             	mov    rdi,rax
    a7e0:	e8 db 7e ff ff       	call   26c0 <atoi@plt>
    a7e5:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a7e9:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    a7ec:	e9 59 01 00 00       	jmp    a94a <d_op_parser+0x1a3>
    a7f1:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a7f5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    a7f8:	0f b6 15 21 35 00 00 	movzx  edx,BYTE PTR [rip+0x3521]        # dd20 <_IO_stdin_used+0x1d20>
    a7ff:	0f b6 c0             	movzx  eax,al
    a802:	0f b6 d2             	movzx  edx,dl
    a805:	29 d0                	sub    eax,edx
    a807:	85 c0                	test   eax,eax
    a809:	75 27                	jne    a832 <d_op_parser+0x8b>
    a80b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a80f:	c7 40 1c a4 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa4
    a816:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a81a:	48 83 c0 01          	add    rax,0x1
    a81e:	48 89 c7             	mov    rdi,rax
    a821:	e8 9a 7e ff ff       	call   26c0 <atoi@plt>
    a826:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a82a:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    a82d:	e9 18 01 00 00       	jmp    a94a <d_op_parser+0x1a3>
    a832:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a836:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    a839:	0f b6 15 e2 34 00 00 	movzx  edx,BYTE PTR [rip+0x34e2]        # dd22 <_IO_stdin_used+0x1d22>
    a840:	0f b6 c0             	movzx  eax,al
    a843:	0f b6 d2             	movzx  edx,dl
    a846:	29 d0                	sub    eax,edx
    a848:	85 c0                	test   eax,eax
    a84a:	75 27                	jne    a873 <d_op_parser+0xcc>
    a84c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a850:	c7 40 1c a2 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa2
    a857:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a85b:	48 83 c0 01          	add    rax,0x1
    a85f:	48 89 c7             	mov    rdi,rax
    a862:	e8 59 7e ff ff       	call   26c0 <atoi@plt>
    a867:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a86b:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    a86e:	e9 d7 00 00 00       	jmp    a94a <d_op_parser+0x1a3>
    a873:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a877:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    a87a:	0f b6 15 a3 34 00 00 	movzx  edx,BYTE PTR [rip+0x34a3]        # dd24 <_IO_stdin_used+0x1d24>
    a881:	0f b6 c0             	movzx  eax,al
    a884:	0f b6 d2             	movzx  edx,dl
    a887:	29 d0                	sub    eax,edx
    a889:	85 c0                	test   eax,eax
    a88b:	75 27                	jne    a8b4 <d_op_parser+0x10d>
    a88d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a891:	c7 40 1c a6 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa6
    a898:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a89c:	48 83 c0 01          	add    rax,0x1
    a8a0:	48 89 c7             	mov    rdi,rax
    a8a3:	e8 18 7e ff ff       	call   26c0 <atoi@plt>
    a8a8:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a8ac:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    a8af:	e9 96 00 00 00       	jmp    a94a <d_op_parser+0x1a3>
    a8b4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a8b8:	ba 02 00 00 00       	mov    edx,0x2
    a8bd:	48 8d 35 62 34 00 00 	lea    rsi,[rip+0x3462]        # dd26 <_IO_stdin_used+0x1d26>
    a8c4:	48 89 c7             	mov    rdi,rax
    a8c7:	e8 84 7c ff ff       	call   2550 <strncmp@plt>
    a8cc:	85 c0                	test   eax,eax
    a8ce:	75 24                	jne    a8f4 <d_op_parser+0x14d>
    a8d0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a8d4:	c7 40 1c a3 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa3
    a8db:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a8df:	48 83 c0 02          	add    rax,0x2
    a8e3:	48 89 c7             	mov    rdi,rax
    a8e6:	e8 d5 7d ff ff       	call   26c0 <atoi@plt>
    a8eb:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a8ef:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    a8f2:	eb 56                	jmp    a94a <d_op_parser+0x1a3>
    a8f4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a8f8:	ba 02 00 00 00       	mov    edx,0x2
    a8fd:	48 8d 35 25 34 00 00 	lea    rsi,[rip+0x3425]        # dd29 <_IO_stdin_used+0x1d29>
    a904:	48 89 c7             	mov    rdi,rax
    a907:	e8 44 7c ff ff       	call   2550 <strncmp@plt>
    a90c:	85 c0                	test   eax,eax
    a90e:	75 24                	jne    a934 <d_op_parser+0x18d>
    a910:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a914:	c7 40 1c a5 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa5
    a91b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a91f:	48 83 c0 02          	add    rax,0x2
    a923:	48 89 c7             	mov    rdi,rax
    a926:	e8 95 7d ff ff       	call   26c0 <atoi@plt>
    a92b:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a92f:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    a932:	eb 16                	jmp    a94a <d_op_parser+0x1a3>
    a934:	48 8d 3d f1 33 00 00 	lea    rdi,[rip+0x33f1]        # dd2c <_IO_stdin_used+0x1d2c>
    a93b:	e8 a0 7b ff ff       	call   24e0 <puts@plt>
    a940:	bf ff ff ff ff       	mov    edi,0xffffffff
    a945:	e8 b6 7b ff ff       	call   2500 <exit@plt>
    a94a:	c9                   	leave  
    a94b:	c3                   	ret    

000000000000a94c <d_engine>:
    a94c:	f3 0f 1e fa          	endbr64 
    a950:	55                   	push   rbp
    a951:	48 89 e5             	mov    rbp,rsp
    a954:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    a958:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    a95c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a960:	8b 40 1c             	mov    eax,DWORD PTR [rax+0x1c]
    a963:	83 f8 ff             	cmp    eax,0xffffffff
    a966:	75 0a                	jne    a972 <d_engine+0x26>
    a968:	b8 01 00 00 00       	mov    eax,0x1
    a96d:	e9 ea 00 00 00       	jmp    aa5c <d_engine+0x110>
    a972:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a976:	8b 40 1c             	mov    eax,DWORD PTR [rax+0x1c]
    a979:	2d a1 00 00 00       	sub    eax,0xa1
    a97e:	83 f8 05             	cmp    eax,0x5
    a981:	0f 87 d0 00 00 00    	ja     aa57 <d_engine+0x10b>
    a987:	89 c0                	mov    eax,eax
    a989:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    a990:	00 
    a991:	48 8d 05 ac 33 00 00 	lea    rax,[rip+0x33ac]        # dd44 <_IO_stdin_used+0x1d44>
    a998:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    a99b:	48 98                	cdqe   
    a99d:	48 8d 15 a0 33 00 00 	lea    rdx,[rip+0x33a0]        # dd44 <_IO_stdin_used+0x1d44>
    a9a4:	48 01 d0             	add    rax,rdx
    a9a7:	3e ff e0             	notrack jmp rax
    a9aa:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a9ae:	8b 50 18             	mov    edx,DWORD PTR [rax+0x18]
    a9b1:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a9b5:	8b 40 34             	mov    eax,DWORD PTR [rax+0x34]
    a9b8:	39 c2                	cmp    edx,eax
    a9ba:	0f 85 87 00 00 00    	jne    aa47 <d_engine+0xfb>
    a9c0:	b8 01 00 00 00       	mov    eax,0x1
    a9c5:	e9 92 00 00 00       	jmp    aa5c <d_engine+0x110>
    a9ca:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a9ce:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    a9d1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a9d5:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    a9d8:	39 c2                	cmp    edx,eax
    a9da:	76 6e                	jbe    aa4a <d_engine+0xfe>
    a9dc:	b8 01 00 00 00       	mov    eax,0x1
    a9e1:	eb 79                	jmp    aa5c <d_engine+0x110>
    a9e3:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a9e7:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    a9ea:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a9ee:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    a9f1:	39 c2                	cmp    edx,eax
    a9f3:	72 58                	jb     aa4d <d_engine+0x101>
    a9f5:	b8 01 00 00 00       	mov    eax,0x1
    a9fa:	eb 60                	jmp    aa5c <d_engine+0x110>
    a9fc:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    aa00:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    aa03:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aa07:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    aa0a:	39 c2                	cmp    edx,eax
    aa0c:	73 42                	jae    aa50 <d_engine+0x104>
    aa0e:	b8 01 00 00 00       	mov    eax,0x1
    aa13:	eb 47                	jmp    aa5c <d_engine+0x110>
    aa15:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    aa19:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    aa1c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aa20:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    aa23:	39 c2                	cmp    edx,eax
    aa25:	77 2c                	ja     aa53 <d_engine+0x107>
    aa27:	b8 01 00 00 00       	mov    eax,0x1
    aa2c:	eb 2e                	jmp    aa5c <d_engine+0x110>
    aa2e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    aa32:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    aa35:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aa39:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    aa3c:	39 c2                	cmp    edx,eax
    aa3e:	74 16                	je     aa56 <d_engine+0x10a>
    aa40:	b8 01 00 00 00       	mov    eax,0x1
    aa45:	eb 15                	jmp    aa5c <d_engine+0x110>
    aa47:	90                   	nop
    aa48:	eb 0d                	jmp    aa57 <d_engine+0x10b>
    aa4a:	90                   	nop
    aa4b:	eb 0a                	jmp    aa57 <d_engine+0x10b>
    aa4d:	90                   	nop
    aa4e:	eb 07                	jmp    aa57 <d_engine+0x10b>
    aa50:	90                   	nop
    aa51:	eb 04                	jmp    aa57 <d_engine+0x10b>
    aa53:	90                   	nop
    aa54:	eb 01                	jmp    aa57 <d_engine+0x10b>
    aa56:	90                   	nop
    aa57:	b8 00 00 00 00       	mov    eax,0x0
    aa5c:	5d                   	pop    rbp
    aa5d:	c3                   	ret    

000000000000aa5e <homenet_toi>:
    aa5e:	f3 0f 1e fa          	endbr64 
    aa62:	55                   	push   rbp
    aa63:	48 89 e5             	mov    rbp,rsp
    aa66:	53                   	push   rbx
    aa67:	48 83 ec 38          	sub    rsp,0x38
    aa6b:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    aa6f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    aa76:	00 00 
    aa78:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    aa7c:	31 c0                	xor    eax,eax
    aa7e:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    aa82:	48 8d 35 d3 32 00 00 	lea    rsi,[rip+0x32d3]        # dd5c <_IO_stdin_used+0x1d5c>
    aa89:	48 89 c7             	mov    rdi,rax
    aa8c:	e8 ef 7c ff ff       	call   2780 <strtok@plt>
    aa91:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    aa95:	eb 4c                	jmp    aae3 <homenet_toi+0x85>
    aa97:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    aa9b:	48 89 c7             	mov    rdi,rax
    aa9e:	e8 1d 7c ff ff       	call   26c0 <atoi@plt>
    aaa3:	89 c3                	mov    ebx,eax
    aaa5:	48 8d 45 df          	lea    rax,[rbp-0x21]
    aaa9:	48 89 c7             	mov    rdi,rax
    aaac:	e8 4f 7b ff ff       	call   2600 <strlen@plt>
    aab1:	48 8d 55 df          	lea    rdx,[rbp-0x21]
    aab5:	48 01 d0             	add    rax,rdx
    aab8:	89 da                	mov    edx,ebx
    aaba:	48 8d 35 9d 32 00 00 	lea    rsi,[rip+0x329d]        # dd5e <_IO_stdin_used+0x1d5e>
    aac1:	48 89 c7             	mov    rdi,rax
    aac4:	b8 00 00 00 00       	mov    eax,0x0
    aac9:	e8 52 7b ff ff       	call   2620 <sprintf@plt>
    aace:	48 8d 35 87 32 00 00 	lea    rsi,[rip+0x3287]        # dd5c <_IO_stdin_used+0x1d5c>
    aad5:	bf 00 00 00 00       	mov    edi,0x0
    aada:	e8 a1 7c ff ff       	call   2780 <strtok@plt>
    aadf:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    aae3:	48 83 7d d0 00       	cmp    QWORD PTR [rbp-0x30],0x0
    aae8:	75 ad                	jne    aa97 <homenet_toi+0x39>
    aaea:	48 8d 45 df          	lea    rax,[rbp-0x21]
    aaee:	ba 10 00 00 00       	mov    edx,0x10
    aaf3:	be 00 00 00 00       	mov    esi,0x0
    aaf8:	48 89 c7             	mov    rdi,rax
    aafb:	e8 a0 7b ff ff       	call   26a0 <strtol@plt>
    ab00:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    ab04:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    ab0b:	00 00 
    ab0d:	74 05                	je     ab14 <homenet_toi+0xb6>
    ab0f:	e8 2c 7c ff ff       	call   2740 <__stack_chk_fail@plt>
    ab14:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    ab18:	c9                   	leave  
    ab19:	c3                   	ret    

000000000000ab1a <tcp_check_sum_passed>:
    ab1a:	f3 0f 1e fa          	endbr64 
    ab1e:	55                   	push   rbp
    ab1f:	48 89 e5             	mov    rbp,rsp
    ab22:	41 54                	push   r12
    ab24:	53                   	push   rbx
    ab25:	48 83 ec 30          	sub    rsp,0x30
    ab29:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    ab2d:	48 89 75 c0          	mov    QWORD PTR [rbp-0x40],rsi
    ab31:	bb 00 00 00 00       	mov    ebx,0x0
    ab36:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    ab3a:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    ab3e:	0f b7 c0             	movzx  eax,ax
    ab41:	89 c7                	mov    edi,eax
    ab43:	e8 e8 7a ff ff       	call   2630 <ntohs@plt>
    ab48:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    ab4c:	0f b6 12             	movzx  edx,BYTE PTR [rdx]
    ab4f:	83 e2 0f             	and    edx,0xf
    ab52:	0f b6 d2             	movzx  edx,dl
    ab55:	c1 e2 02             	shl    edx,0x2
    ab58:	29 d0                	sub    eax,edx
    ab5a:	66 89 45 de          	mov    WORD PTR [rbp-0x22],ax
    ab5e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    ab62:	0f b7 40 10          	movzx  eax,WORD PTR [rax+0x10]
    ab66:	0f b7 c0             	movzx  eax,ax
    ab69:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    ab6d:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    ab71:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    ab75:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    ab79:	66 c7 40 10 00 00    	mov    WORD PTR [rax+0x10],0x0
    ab7f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    ab83:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    ab86:	c1 e8 10             	shr    eax,0x10
    ab89:	89 c0                	mov    eax,eax
    ab8b:	0f b7 c0             	movzx  eax,ax
    ab8e:	48 01 c3             	add    rbx,rax
    ab91:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    ab95:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    ab98:	89 c0                	mov    eax,eax
    ab9a:	0f b7 c0             	movzx  eax,ax
    ab9d:	48 01 c3             	add    rbx,rax
    aba0:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    aba4:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    aba7:	c1 e8 10             	shr    eax,0x10
    abaa:	89 c0                	mov    eax,eax
    abac:	0f b7 c0             	movzx  eax,ax
    abaf:	48 01 c3             	add    rbx,rax
    abb2:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    abb6:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    abb9:	89 c0                	mov    eax,eax
    abbb:	0f b7 c0             	movzx  eax,ax
    abbe:	48 01 c3             	add    rbx,rax
    abc1:	bf 06 00 00 00       	mov    edi,0x6
    abc6:	e8 25 79 ff ff       	call   24f0 <htons@plt>
    abcb:	0f b7 c0             	movzx  eax,ax
    abce:	48 01 c3             	add    rbx,rax
    abd1:	0f b7 45 de          	movzx  eax,WORD PTR [rbp-0x22]
    abd5:	89 c7                	mov    edi,eax
    abd7:	e8 14 79 ff ff       	call   24f0 <htons@plt>
    abdc:	0f b7 c0             	movzx  eax,ax
    abdf:	48 01 c3             	add    rbx,rax
    abe2:	eb 1a                	jmp    abfe <tcp_check_sum_passed+0xe4>
    abe4:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    abe8:	48 8d 50 14          	lea    rdx,[rax+0x14]
    abec:	48 89 55 c0          	mov    QWORD PTR [rbp-0x40],rdx
    abf0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    abf3:	0f b6 c0             	movzx  eax,al
    abf6:	48 01 c3             	add    rbx,rax
    abf9:	66 83 6d de 02       	sub    WORD PTR [rbp-0x22],0x2
    abfe:	66 83 7d de 01       	cmp    WORD PTR [rbp-0x22],0x1
    ac03:	77 df                	ja     abe4 <tcp_check_sum_passed+0xca>
    ac05:	66 83 7d de 00       	cmp    WORD PTR [rbp-0x22],0x0
    ac0a:	74 1d                	je     ac29 <tcp_check_sum_passed+0x10f>
    ac0c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    ac10:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    ac13:	0f b6 c0             	movzx  eax,al
    ac16:	48 01 c3             	add    rbx,rax
    ac19:	eb 0e                	jmp    ac29 <tcp_check_sum_passed+0x10f>
    ac1b:	0f b7 c3             	movzx  eax,bx
    ac1e:	48 c1 eb 10          	shr    rbx,0x10
    ac22:	48 89 da             	mov    rdx,rbx
    ac25:	48 8d 1c 10          	lea    rbx,[rax+rdx*1]
    ac29:	48 89 d8             	mov    rax,rbx
    ac2c:	48 c1 e8 10          	shr    rax,0x10
    ac30:	48 85 c0             	test   rax,rax
    ac33:	75 e6                	jne    ac1b <tcp_check_sum_passed+0x101>
    ac35:	48 f7 d3             	not    rbx
    ac38:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    ac3c:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    ac40:	66 89 50 10          	mov    WORD PTR [rax+0x10],dx
    ac44:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    ac48:	0f b7 40 10          	movzx  eax,WORD PTR [rax+0x10]
    ac4c:	0f b7 c0             	movzx  eax,ax
    ac4f:	89 c7                	mov    edi,eax
    ac51:	e8 da 79 ff ff       	call   2630 <ntohs@plt>
    ac56:	44 0f b7 e0          	movzx  r12d,ax
    ac5a:	89 d8                	mov    eax,ebx
    ac5c:	0f b7 c0             	movzx  eax,ax
    ac5f:	89 c7                	mov    edi,eax
    ac61:	e8 ca 79 ff ff       	call   2630 <ntohs@plt>
    ac66:	0f b7 c0             	movzx  eax,ax
    ac69:	44 89 e2             	mov    edx,r12d
    ac6c:	89 c6                	mov    esi,eax
    ac6e:	48 8d 3d ee 30 00 00 	lea    rdi,[rip+0x30ee]        # dd63 <_IO_stdin_used+0x1d63>
    ac75:	b8 00 00 00 00       	mov    eax,0x0
    ac7a:	e8 01 78 ff ff       	call   2480 <printf@plt>
    ac7f:	89 d8                	mov    eax,ebx
    ac81:	0f b7 c0             	movzx  eax,ax
    ac84:	89 c7                	mov    edi,eax
    ac86:	e8 a5 79 ff ff       	call   2630 <ntohs@plt>
    ac8b:	89 c3                	mov    ebx,eax
    ac8d:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    ac91:	0f b7 c0             	movzx  eax,ax
    ac94:	89 c7                	mov    edi,eax
    ac96:	e8 95 79 ff ff       	call   2630 <ntohs@plt>
    ac9b:	66 39 c3             	cmp    bx,ax
    ac9e:	75 07                	jne    aca7 <tcp_check_sum_passed+0x18d>
    aca0:	b8 01 00 00 00       	mov    eax,0x1
    aca5:	eb 05                	jmp    acac <tcp_check_sum_passed+0x192>
    aca7:	b8 00 00 00 00       	mov    eax,0x0
    acac:	48 83 c4 30          	add    rsp,0x30
    acb0:	5b                   	pop    rbx
    acb1:	41 5c                	pop    r12
    acb3:	5d                   	pop    rbp
    acb4:	c3                   	ret    

000000000000acb5 <run_hello_script>:
    acb5:	f3 0f 1e fa          	endbr64 
    acb9:	55                   	push   rbp
    acba:	48 89 e5             	mov    rbp,rsp
    acbd:	48 83 ec 10          	sub    rsp,0x10
    acc1:	e8 4a 7a ff ff       	call   2710 <luaL_newstate@plt>
    acc6:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    acca:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    acce:	48 89 c7             	mov    rdi,rax
    acd1:	e8 5a 7a ff ff       	call   2730 <luaL_openlibs@plt>
    acd6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    acda:	ba 00 00 00 00       	mov    edx,0x0
    acdf:	48 8d 35 92 30 00 00 	lea    rsi,[rip+0x3092]        # dd78 <_IO_stdin_used+0x1d78>
    ace6:	48 89 c7             	mov    rdi,rax
    ace9:	e8 c2 79 ff ff       	call   26b0 <luaL_loadfilex@plt>
    acee:	85 c0                	test   eax,eax
    acf0:	75 2b                	jne    ad1d <run_hello_script+0x68>
    acf2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    acf6:	41 b9 00 00 00 00    	mov    r9d,0x0
    acfc:	41 b8 00 00 00 00    	mov    r8d,0x0
    ad02:	b9 00 00 00 00       	mov    ecx,0x0
    ad07:	ba ff ff ff ff       	mov    edx,0xffffffff
    ad0c:	be 00 00 00 00       	mov    esi,0x0
    ad11:	48 89 c7             	mov    rdi,rax
    ad14:	e8 47 79 ff ff       	call   2660 <lua_pcallk@plt>
    ad19:	85 c0                	test   eax,eax
    ad1b:	74 07                	je     ad24 <run_hello_script+0x6f>
    ad1d:	b8 01 00 00 00       	mov    eax,0x1
    ad22:	eb 05                	jmp    ad29 <run_hello_script+0x74>
    ad24:	b8 00 00 00 00       	mov    eax,0x0
    ad29:	85 c0                	test   eax,eax
    ad2b:	75 1e                	jne    ad4b <run_hello_script+0x96>
    ad2d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad31:	48 89 c7             	mov    rdi,rax
    ad34:	e8 c7 79 ff ff       	call   2700 <lua_gettop@plt>
    ad39:	f7 d0                	not    eax
    ad3b:	89 c2                	mov    edx,eax
    ad3d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad41:	89 d6                	mov    esi,edx
    ad43:	48 89 c7             	mov    rdi,rax
    ad46:	e8 75 78 ff ff       	call   25c0 <lua_settop@plt>
    ad4b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad4f:	48 89 c7             	mov    rdi,rax
    ad52:	e8 39 7a ff ff       	call   2790 <lua_close@plt>
    ad57:	90                   	nop
    ad58:	c9                   	leave  
    ad59:	c3                   	ret    

000000000000ad5a <collect_scripts>:
    ad5a:	f3 0f 1e fa          	endbr64 
    ad5e:	55                   	push   rbp
    ad5f:	48 89 e5             	mov    rbp,rsp
    ad62:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    ad69:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    ad70:	00 00 
    ad72:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    ad76:	31 c0                	xor    eax,eax
    ad78:	48 8d 35 17 30 00 00 	lea    rsi,[rip+0x3017]        # dd96 <_IO_stdin_used+0x1d96>
    ad7f:	48 8d 3d 12 30 00 00 	lea    rdi,[rip+0x3012]        # dd98 <_IO_stdin_used+0x1d98>
    ad86:	e8 e5 77 ff ff       	call   2570 <fopen@plt>
    ad8b:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
    ad8f:	48 83 7d 80 00       	cmp    QWORD PTR [rbp-0x80],0x0
    ad94:	75 16                	jne    adac <collect_scripts+0x52>
    ad96:	48 8d 3d 13 30 00 00 	lea    rdi,[rip+0x3013]        # ddb0 <_IO_stdin_used+0x1db0>
    ad9d:	e8 3e 77 ff ff       	call   24e0 <puts@plt>
    ada2:	bf ff ff ff ff       	mov    edi,0xffffffff
    ada7:	e8 54 77 ff ff       	call   2500 <exit@plt>
    adac:	48 c7 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],0x0
    adb3:	00 00 00 00 
    adb7:	48 8d 45 90          	lea    rax,[rbp-0x70]
    adbb:	ba 00 00 00 00       	mov    edx,0x0
    adc0:	48 8d 35 2b 30 00 00 	lea    rsi,[rip+0x302b]        # ddf2 <_IO_stdin_used+0x1df2>
    adc7:	48 89 c7             	mov    rdi,rax
    adca:	e8 01 79 ff ff       	call   26d0 <regcomp@plt>
    adcf:	e9 86 00 00 00       	jmp    ae5a <collect_scripts+0x100>
    add4:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    addb:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    adde:	3c 23                	cmp    al,0x23
    ade0:	75 02                	jne    ade4 <collect_scripts+0x8a>
    ade2:	eb 76                	jmp    ae5a <collect_scripts+0x100>
    ade4:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    adeb:	ba 0e 00 00 00       	mov    edx,0xe
    adf0:	48 8d 35 05 30 00 00 	lea    rsi,[rip+0x3005]        # ddfc <_IO_stdin_used+0x1dfc>
    adf7:	48 89 c7             	mov    rdi,rax
    adfa:	e8 51 77 ff ff       	call   2550 <strncmp@plt>
    adff:	85 c0                	test   eax,eax
    ae01:	75 34                	jne    ae37 <collect_scripts+0xdd>
    ae03:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    ae0a:	48 8d 50 0e          	lea    rdx,[rax+0xe]
    ae0e:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    ae12:	48 89 d6             	mov    rsi,rdx
    ae15:	48 89 c7             	mov    rdi,rax
    ae18:	e8 53 79 ff ff       	call   2770 <strcpy@plt>
    ae1d:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    ae21:	48 8d 35 e3 2f 00 00 	lea    rsi,[rip+0x2fe3]        # de0b <_IO_stdin_used+0x1e0b>
    ae28:	48 89 c7             	mov    rdi,rax
    ae2b:	e8 a0 79 ff ff       	call   27d0 <strcspn@plt>
    ae30:	c6 44 05 d0 00       	mov    BYTE PTR [rbp+rax*1-0x30],0x0
    ae35:	eb 23                	jmp    ae5a <collect_scripts+0x100>
    ae37:	48 8b b5 78 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x88]
    ae3e:	48 8d 45 90          	lea    rax,[rbp-0x70]
    ae42:	41 b8 00 00 00 00    	mov    r8d,0x0
    ae48:	b9 00 00 00 00       	mov    ecx,0x0
    ae4d:	ba 00 00 00 00       	mov    edx,0x0
    ae52:	48 89 c7             	mov    rdi,rax
    ae55:	e8 26 77 ff ff       	call   2580 <regexec@plt>
    ae5a:	48 8b 55 80          	mov    rdx,QWORD PTR [rbp-0x80]
    ae5e:	48 8d 8d 70 ff ff ff 	lea    rcx,[rbp-0x90]
    ae65:	48 8d 85 78 ff ff ff 	lea    rax,[rbp-0x88]
    ae6c:	48 89 ce             	mov    rsi,rcx
    ae6f:	48 89 c7             	mov    rdi,rax
    ae72:	e8 e9 78 ff ff       	call   2760 <getline@plt>
    ae77:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    ae7b:	48 83 7d 88 ff       	cmp    QWORD PTR [rbp-0x78],0xffffffffffffffff
    ae80:	0f 85 4e ff ff ff    	jne    add4 <collect_scripts+0x7a>
    ae86:	90                   	nop
    ae87:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae8b:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    ae92:	00 00 
    ae94:	74 05                	je     ae9b <collect_scripts+0x141>
    ae96:	e8 a5 78 ff ff       	call   2740 <__stack_chk_fail@plt>
    ae9b:	c9                   	leave  
    ae9c:	c3                   	ret    

000000000000ae9d <ip6decode>:
    ae9d:	f3 0f 1e fa          	endbr64 
    aea1:	55                   	push   rbp
    aea2:	48 89 e5             	mov    rbp,rsp
    aea5:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    aeac:	48 89 bd 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdi
    aeb3:	48 89 b5 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rsi
    aeba:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    aec1:	00 00 
    aec3:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    aec7:	31 c0                	xor    eax,eax
    aec9:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    aed0:	48 83 c0 0e          	add    rax,0xe
    aed4:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    aed8:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    aedc:	48 83 c0 08          	add    rax,0x8
    aee0:	48 89 c7             	mov    rdi,rax
    aee3:	e8 8b 82 ff ff       	call   3173 <inet6_ntoa>
    aee8:	48 89 c1             	mov    rcx,rax
    aeeb:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    aeef:	ba 29 00 00 00       	mov    edx,0x29
    aef4:	48 89 ce             	mov    rsi,rcx
    aef7:	48 89 c7             	mov    rdi,rax
    aefa:	e8 c1 78 ff ff       	call   27c0 <strncpy@plt>
    aeff:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    af03:	48 83 c0 18          	add    rax,0x18
    af07:	48 89 c7             	mov    rdi,rax
    af0a:	e8 64 82 ff ff       	call   3173 <inet6_ntoa>
    af0f:	48 89 c1             	mov    rcx,rax
    af12:	48 8d 45 90          	lea    rax,[rbp-0x70]
    af16:	ba 29 00 00 00       	mov    edx,0x29
    af1b:	48 89 ce             	mov    rsi,rcx
    af1e:	48 89 c7             	mov    rdi,rax
    af21:	e8 9a 78 ff ff       	call   27c0 <strncpy@plt>
    af26:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    af2a:	0f b6 40 06          	movzx  eax,BYTE PTR [rax+0x6]
    af2e:	0f b6 c0             	movzx  eax,al
    af31:	85 c0                	test   eax,eax
    af33:	75 1c                	jne    af51 <ip6decode+0xb4>
    af35:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    af39:	48 8d 4d c0          	lea    rcx,[rbp-0x40]
    af3d:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    af44:	48 89 ce             	mov    rsi,rcx
    af47:	48 89 c7             	mov    rdi,rax
    af4a:	e8 bf 8a ff ff       	call   3a0e <ip6_icmp_decode>
    af4f:	eb 28                	jmp    af79 <ip6decode+0xdc>
    af51:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    af55:	0f b6 40 06          	movzx  eax,BYTE PTR [rax+0x6]
    af59:	0f b6 c8             	movzx  ecx,al
    af5c:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    af60:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    af64:	48 89 c6             	mov    rsi,rax
    af67:	48 8d 3d a2 2e 00 00 	lea    rdi,[rip+0x2ea2]        # de10 <_IO_stdin_used+0x1e10>
    af6e:	b8 00 00 00 00       	mov    eax,0x0
    af73:	e8 08 75 ff ff       	call   2480 <printf@plt>
    af78:	90                   	nop
    af79:	90                   	nop
    af7a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    af7e:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    af85:	00 00 
    af87:	74 05                	je     af8e <ip6decode+0xf1>
    af89:	e8 b2 77 ff ff       	call   2740 <__stack_chk_fail@plt>
    af8e:	c9                   	leave  
    af8f:	c3                   	ret    

000000000000af90 <print_mem_map>:
    af90:	f3 0f 1e fa          	endbr64 
    af94:	55                   	push   rbp
    af95:	48 89 e5             	mov    rbp,rsp
    af98:	48 83 ec 10          	sub    rsp,0x10
    af9c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    afa3:	eb 4c                	jmp    aff1 <print_mem_map+0x61>
    afa5:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    afa8:	48 63 d0             	movsxd rdx,eax
    afab:	48 89 d0             	mov    rax,rdx
    afae:	48 c1 e0 02          	shl    rax,0x2
    afb2:	48 01 d0             	add    rax,rdx
    afb5:	48 c1 e0 03          	shl    rax,0x3
    afb9:	48 8d 15 40 d8 12 00 	lea    rdx,[rip+0x12d840]        # 138800 <fn_mem_map>
    afc0:	48 01 d0             	add    rax,rdx
    afc3:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    afc7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    afcb:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    afce:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    afd2:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    afd5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    afd9:	48 89 c6             	mov    rsi,rax
    afdc:	48 8d 3d 55 2e 00 00 	lea    rdi,[rip+0x2e55]        # de38 <_IO_stdin_used+0x1e38>
    afe3:	b8 00 00 00 00       	mov    eax,0x0
    afe8:	e8 93 74 ff ff       	call   2480 <printf@plt>
    afed:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    aff1:	8b 05 09 00 13 00    	mov    eax,DWORD PTR [rip+0x130009]        # 13b000 <fn_num>
    aff7:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    affa:	7c a9                	jl     afa5 <print_mem_map+0x15>
    affc:	90                   	nop
    affd:	90                   	nop
    affe:	c9                   	leave  
    afff:	c3                   	ret    

000000000000b000 <crash_handler>:
    b000:	f3 0f 1e fa          	endbr64 
    b004:	55                   	push   rbp
    b005:	48 89 e5             	mov    rbp,rsp
    b008:	41 54                	push   r12
    b00a:	53                   	push   rbx
    b00b:	48 81 ec f0 00 00 00 	sub    rsp,0xf0
    b012:	89 bd 0c ff ff ff    	mov    DWORD PTR [rbp-0xf4],edi
    b018:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b01f:	00 00 
    b021:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    b025:	31 c0                	xor    eax,eax
    b027:	48 8d 85 30 ff ff ff 	lea    rax,[rbp-0xd0]
    b02e:	be 14 00 00 00       	mov    esi,0x14
    b033:	48 89 c7             	mov    rdi,rax
    b036:	e8 75 74 ff ff       	call   24b0 <backtrace@plt>
    b03b:	89 85 18 ff ff ff    	mov    DWORD PTR [rbp-0xe8],eax
    b041:	8b 95 18 ff ff ff    	mov    edx,DWORD PTR [rbp-0xe8]
    b047:	48 8d 85 30 ff ff ff 	lea    rax,[rbp-0xd0]
    b04e:	89 d6                	mov    esi,edx
    b050:	48 89 c7             	mov    rdi,rax
    b053:	e8 88 75 ff ff       	call   25e0 <backtrace_symbols@plt>
    b058:	48 89 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rax
    b05f:	b8 00 00 00 00       	mov    eax,0x0
    b064:	e8 d6 82 ff ff       	call   333f <get_formated_time>
    b069:	48 89 c6             	mov    rsi,rax
    b06c:	48 8d 3d e5 2d 00 00 	lea    rdi,[rip+0x2de5]        # de58 <_IO_stdin_used+0x1e58>
    b073:	b8 00 00 00 00       	mov    eax,0x0
    b078:	e8 03 74 ff ff       	call   2480 <printf@plt>
    b07d:	48 8d 3d 03 2e 00 00 	lea    rdi,[rip+0x2e03]        # de87 <_IO_stdin_used+0x1e87>
    b084:	e8 57 74 ff ff       	call   24e0 <puts@plt>
    b089:	48 83 bd 20 ff ff ff 	cmp    QWORD PTR [rbp-0xe0],0x0
    b090:	00 
    b091:	0f 84 6d 01 00 00    	je     b204 <crash_handler+0x204>
    b097:	c7 85 14 ff ff ff 00 	mov    DWORD PTR [rbp-0xec],0x0
    b09e:	00 00 00 
    b0a1:	e9 4c 01 00 00       	jmp    b1f2 <crash_handler+0x1f2>
    b0a6:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b0ac:	48 98                	cdqe   
    b0ae:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    b0b5:	00 
    b0b6:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b0bd:	48 01 d0             	add    rax,rdx
    b0c0:	48 8b 00             	mov    rax,QWORD PTR [rax]
    b0c3:	48 8d 35 d1 2d 00 00 	lea    rsi,[rip+0x2dd1]        # de9b <_IO_stdin_used+0x1e9b>
    b0ca:	48 89 c7             	mov    rdi,rax
    b0cd:	e8 9e 75 ff ff       	call   2670 <strstr@plt>
    b0d2:	48 85 c0             	test   rax,rax
    b0d5:	0f 85 0f 01 00 00    	jne    b1ea <crash_handler+0x1ea>
    b0db:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b0e1:	48 98                	cdqe   
    b0e3:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    b0ea:	00 
    b0eb:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b0f2:	48 01 d0             	add    rax,rdx
    b0f5:	4c 8b 20             	mov    r12,QWORD PTR [rax]
    b0f8:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b0fe:	48 98                	cdqe   
    b100:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    b107:	00 
    b108:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b10f:	48 01 d0             	add    rax,rdx
    b112:	48 8b 00             	mov    rax,QWORD PTR [rax]
    b115:	be 2b 00 00 00       	mov    esi,0x2b
    b11a:	48 89 c7             	mov    rdi,rax
    b11d:	e8 b8 83 ff ff       	call   34da <strloc>
    b122:	48 98                	cdqe   
    b124:	48 83 c0 01          	add    rax,0x1
    b128:	49 8d 14 04          	lea    rdx,[r12+rax*1]
    b12c:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b130:	48 8d 35 68 2d 00 00 	lea    rsi,[rip+0x2d68]        # de9f <_IO_stdin_used+0x1e9f>
    b137:	48 89 c7             	mov    rdi,rax
    b13a:	b8 00 00 00 00       	mov    eax,0x0
    b13f:	e8 dc 74 ff ff       	call   2620 <sprintf@plt>
    b144:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b148:	be 29 00 00 00       	mov    esi,0x29
    b14d:	48 89 c7             	mov    rdi,rax
    b150:	e8 85 83 ff ff       	call   34da <strloc>
    b155:	48 98                	cdqe   
    b157:	c6 44 05 d0 00       	mov    BYTE PTR [rbp+rax*1-0x30],0x0
    b15c:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b160:	ba 10 00 00 00       	mov    edx,0x10
    b165:	be 00 00 00 00       	mov    esi,0x0
    b16a:	48 89 c7             	mov    rdi,rax
    b16d:	e8 2e 75 ff ff       	call   26a0 <strtol@plt>
    b172:	89 85 1c ff ff ff    	mov    DWORD PTR [rbp-0xe4],eax
    b178:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [rbp-0xe4]
    b17e:	89 c7                	mov    edi,eax
    b180:	e8 20 01 00 00       	call   b2a5 <offset_search>
    b185:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
    b18c:	83 bd 1c ff ff ff 00 	cmp    DWORD PTR [rbp-0xe4],0x0
    b193:	74 3a                	je     b1cf <crash_handler+0x1cf>
    b195:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    b19c:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    b19f:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    b1a6:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    b1a9:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    b1b0:	8b b5 1c ff ff ff    	mov    esi,DWORD PTR [rbp-0xe4]
    b1b6:	41 89 f0             	mov    r8d,esi
    b1b9:	48 89 c6             	mov    rsi,rax
    b1bc:	48 8d 3d e5 2c 00 00 	lea    rdi,[rip+0x2ce5]        # dea8 <_IO_stdin_used+0x1ea8>
    b1c3:	b8 00 00 00 00       	mov    eax,0x0
    b1c8:	e8 b3 72 ff ff       	call   2480 <printf@plt>
    b1cd:	eb 1c                	jmp    b1eb <crash_handler+0x1eb>
    b1cf:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [rbp-0xe4]
    b1d5:	89 c6                	mov    esi,eax
    b1d7:	48 8d 3d 02 2d 00 00 	lea    rdi,[rip+0x2d02]        # dee0 <_IO_stdin_used+0x1ee0>
    b1de:	b8 00 00 00 00       	mov    eax,0x0
    b1e3:	e8 98 72 ff ff       	call   2480 <printf@plt>
    b1e8:	eb 01                	jmp    b1eb <crash_handler+0x1eb>
    b1ea:	90                   	nop
    b1eb:	83 85 14 ff ff ff 01 	add    DWORD PTR [rbp-0xec],0x1
    b1f2:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b1f8:	3b 85 18 ff ff ff    	cmp    eax,DWORD PTR [rbp-0xe8]
    b1fe:	0f 8c a2 fe ff ff    	jl     b0a6 <crash_handler+0xa6>
    b204:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b20b:	48 89 c7             	mov    rdi,rax
    b20e:	e8 dd 73 ff ff       	call   25f0 <free@plt>
    b213:	48 8d 3d f0 2c 00 00 	lea    rdi,[rip+0x2cf0]        # df0a <_IO_stdin_used+0x1f0a>
    b21a:	e8 c1 72 ff ff       	call   24e0 <puts@plt>
    b21f:	89 c6                	mov    esi,eax
    b221:	48 8d 3d f1 2c 00 00 	lea    rdi,[rip+0x2cf1]        # df19 <_IO_stdin_used+0x1f19>
    b228:	b8 00 00 00 00       	mov    eax,0x0
    b22d:	e8 4e 72 ff ff       	call   2480 <printf@plt>
    b232:	89 d8                	mov    eax,ebx
    b234:	89 c6                	mov    esi,eax
    b236:	48 8d 3d ec 2c 00 00 	lea    rdi,[rip+0x2cec]        # df29 <_IO_stdin_used+0x1f29>
    b23d:	b8 00 00 00 00       	mov    eax,0x0
    b242:	e8 39 72 ff ff       	call   2480 <printf@plt>
    b247:	89 d8                	mov    eax,ebx
    b249:	89 c6                	mov    esi,eax
    b24b:	48 8d 3d e7 2c 00 00 	lea    rdi,[rip+0x2ce7]        # df39 <_IO_stdin_used+0x1f39>
    b252:	b8 00 00 00 00       	mov    eax,0x0
    b257:	e8 24 72 ff ff       	call   2480 <printf@plt>
    b25c:	89 c8                	mov    eax,ecx
    b25e:	89 c6                	mov    esi,eax
    b260:	48 8d 3d e2 2c 00 00 	lea    rdi,[rip+0x2ce2]        # df49 <_IO_stdin_used+0x1f49>
    b267:	b8 00 00 00 00       	mov    eax,0x0
    b26c:	e8 0f 72 ff ff       	call   2480 <printf@plt>
    b271:	89 e0                	mov    eax,esp
    b273:	89 c6                	mov    esi,eax
    b275:	48 8d 3d dd 2c 00 00 	lea    rdi,[rip+0x2cdd]        # df59 <_IO_stdin_used+0x1f59>
    b27c:	b8 00 00 00 00       	mov    eax,0x0
    b281:	e8 fa 71 ff ff       	call   2480 <printf@plt>
    b286:	89 e8                	mov    eax,ebp
    b288:	89 c6                	mov    esi,eax
    b28a:	48 8d 3d d8 2c 00 00 	lea    rdi,[rip+0x2cd8]        # df69 <_IO_stdin_used+0x1f69>
    b291:	b8 00 00 00 00       	mov    eax,0x0
    b296:	e8 e5 71 ff ff       	call   2480 <printf@plt>
    b29b:	bf 01 00 00 00       	mov    edi,0x1
    b2a0:	e8 5b 72 ff ff       	call   2500 <exit@plt>

000000000000b2a5 <offset_search>:
    b2a5:	f3 0f 1e fa          	endbr64 
    b2a9:	55                   	push   rbp
    b2aa:	48 89 e5             	mov    rbp,rsp
    b2ad:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    b2b0:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    b2b7:	eb 44                	jmp    b2fd <offset_search+0x58>
    b2b9:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    b2bc:	48 63 d0             	movsxd rdx,eax
    b2bf:	48 89 d0             	mov    rax,rdx
    b2c2:	48 c1 e0 02          	shl    rax,0x2
    b2c6:	48 01 d0             	add    rax,rdx
    b2c9:	48 c1 e0 03          	shl    rax,0x3
    b2cd:	48 8d 15 2c d5 12 00 	lea    rdx,[rip+0x12d52c]        # 138800 <fn_mem_map>
    b2d4:	48 01 d0             	add    rax,rdx
    b2d7:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b2db:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b2df:	8b 40 20             	mov    eax,DWORD PTR [rax+0x20]
    b2e2:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    b2e5:	76 12                	jbe    b2f9 <offset_search+0x54>
    b2e7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b2eb:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    b2ee:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    b2f1:	73 06                	jae    b2f9 <offset_search+0x54>
    b2f3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b2f7:	eb 14                	jmp    b30d <offset_search+0x68>
    b2f9:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    b2fd:	8b 05 fd fc 12 00    	mov    eax,DWORD PTR [rip+0x12fcfd]        # 13b000 <fn_num>
    b303:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    b306:	7c b1                	jl     b2b9 <offset_search+0x14>
    b308:	b8 00 00 00 00       	mov    eax,0x0
    b30d:	5d                   	pop    rbp
    b30e:	c3                   	ret    

000000000000b30f <add_fn>:
    b30f:	f3 0f 1e fa          	endbr64 
    b313:	55                   	push   rbp
    b314:	48 89 e5             	mov    rbp,rsp
    b317:	48 83 ec 20          	sub    rsp,0x20
    b31b:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    b31f:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    b322:	89 55 e0             	mov    DWORD PTR [rbp-0x20],edx
    b325:	8b 05 d5 fc 12 00    	mov    eax,DWORD PTR [rip+0x12fcd5]        # 13b000 <fn_num>
    b32b:	8d 50 01             	lea    edx,[rax+0x1]
    b32e:	89 15 cc fc 12 00    	mov    DWORD PTR [rip+0x12fccc],edx        # 13b000 <fn_num>
    b334:	48 63 d0             	movsxd rdx,eax
    b337:	48 89 d0             	mov    rax,rdx
    b33a:	48 c1 e0 02          	shl    rax,0x2
    b33e:	48 01 d0             	add    rax,rdx
    b341:	48 c1 e0 03          	shl    rax,0x3
    b345:	48 8d 15 b4 d4 12 00 	lea    rdx,[rip+0x12d4b4]        # 138800 <fn_mem_map>
    b34c:	48 01 d0             	add    rax,rdx
    b34f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b353:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b357:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    b35b:	48 89 d6             	mov    rsi,rdx
    b35e:	48 89 c7             	mov    rdi,rax
    b361:	e8 0a 74 ff ff       	call   2770 <strcpy@plt>
    b366:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b36a:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    b36d:	89 50 20             	mov    DWORD PTR [rax+0x20],edx
    b370:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b374:	8b 55 e0             	mov    edx,DWORD PTR [rbp-0x20]
    b377:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    b37a:	90                   	nop
    b37b:	c9                   	leave  
    b37c:	c3                   	ret    

000000000000b37d <load_fn_mem_map>:
    b37d:	f3 0f 1e fa          	endbr64 
    b381:	55                   	push   rbp
    b382:	48 89 e5             	mov    rbp,rsp
    b385:	53                   	push   rbx
    b386:	48 83 ec 78          	sub    rsp,0x78
    b38a:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b391:	00 00 
    b393:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    b397:	31 c0                	xor    eax,eax
    b399:	48 8d 35 e0 2b 00 00 	lea    rsi,[rip+0x2be0]        # df80 <_IO_stdin_used+0x1f80>
    b3a0:	48 8d 3d db 2b 00 00 	lea    rdi,[rip+0x2bdb]        # df82 <_IO_stdin_used+0x1f82>
    b3a7:	e8 c4 71 ff ff       	call   2570 <fopen@plt>
    b3ac:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    b3b0:	48 83 7d b0 00       	cmp    QWORD PTR [rbp-0x50],0x0
    b3b5:	75 16                	jne    b3cd <load_fn_mem_map+0x50>
    b3b7:	48 8d 3d e2 2b 00 00 	lea    rdi,[rip+0x2be2]        # dfa0 <_IO_stdin_used+0x1fa0>
    b3be:	e8 1d 71 ff ff       	call   24e0 <puts@plt>
    b3c3:	bf ff ff ff ff       	mov    edi,0xffffffff
    b3c8:	e8 33 71 ff ff       	call   2500 <exit@plt>
    b3cd:	48 c7 45 98 00 00 00 	mov    QWORD PTR [rbp-0x68],0x0
    b3d4:	00 
    b3d5:	48 c7 45 a0 00 00 00 	mov    QWORD PTR [rbp-0x60],0x0
    b3dc:	00 
    b3dd:	e9 db 00 00 00       	jmp    b4bd <load_fn_mem_map+0x140>
    b3e2:	48 8b 5d 98          	mov    rbx,QWORD PTR [rbp-0x68]
    b3e6:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    b3ea:	48 8d 35 16 2c 00 00 	lea    rsi,[rip+0x2c16]        # e007 <_IO_stdin_used+0x2007>
    b3f1:	48 89 c7             	mov    rdi,rax
    b3f4:	e8 d7 73 ff ff       	call   27d0 <strcspn@plt>
    b3f9:	48 01 d8             	add    rax,rbx
    b3fc:	c6 00 00             	mov    BYTE PTR [rax],0x0
    b3ff:	c7 45 94 00 00 00 00 	mov    DWORD PTR [rbp-0x6c],0x0
    b406:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    b40a:	48 8d 35 f8 2b 00 00 	lea    rsi,[rip+0x2bf8]        # e009 <_IO_stdin_used+0x2009>
    b411:	48 89 c7             	mov    rdi,rax
    b414:	e8 67 73 ff ff       	call   2780 <strtok@plt>
    b419:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    b41d:	eb 7f                	jmp    b49e <load_fn_mem_map+0x121>
    b41f:	83 7d 94 02          	cmp    DWORD PTR [rbp-0x6c],0x2
    b423:	74 44                	je     b469 <load_fn_mem_map+0xec>
    b425:	83 7d 94 02          	cmp    DWORD PTR [rbp-0x6c],0x2
    b429:	7f 59                	jg     b484 <load_fn_mem_map+0x107>
    b42b:	83 7d 94 00          	cmp    DWORD PTR [rbp-0x6c],0x0
    b42f:	74 08                	je     b439 <load_fn_mem_map+0xbc>
    b431:	83 7d 94 01          	cmp    DWORD PTR [rbp-0x6c],0x1
    b435:	74 17                	je     b44e <load_fn_mem_map+0xd1>
    b437:	eb 4b                	jmp    b484 <load_fn_mem_map+0x107>
    b439:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    b43d:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b441:	48 89 d6             	mov    rsi,rdx
    b444:	48 89 c7             	mov    rdi,rax
    b447:	e8 24 73 ff ff       	call   2770 <strcpy@plt>
    b44c:	eb 37                	jmp    b485 <load_fn_mem_map+0x108>
    b44e:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    b452:	ba 10 00 00 00       	mov    edx,0x10
    b457:	be 00 00 00 00       	mov    esi,0x0
    b45c:	48 89 c7             	mov    rdi,rax
    b45f:	e8 3c 72 ff ff       	call   26a0 <strtol@plt>
    b464:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    b467:	eb 1c                	jmp    b485 <load_fn_mem_map+0x108>
    b469:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    b46d:	ba 10 00 00 00       	mov    edx,0x10
    b472:	be 00 00 00 00       	mov    esi,0x0
    b477:	48 89 c7             	mov    rdi,rax
    b47a:	e8 21 72 ff ff       	call   26a0 <strtol@plt>
    b47f:	89 45 90             	mov    DWORD PTR [rbp-0x70],eax
    b482:	eb 01                	jmp    b485 <load_fn_mem_map+0x108>
    b484:	90                   	nop
    b485:	48 8d 35 7d 2b 00 00 	lea    rsi,[rip+0x2b7d]        # e009 <_IO_stdin_used+0x2009>
    b48c:	bf 00 00 00 00       	mov    edi,0x0
    b491:	e8 ea 72 ff ff       	call   2780 <strtok@plt>
    b496:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    b49a:	83 45 94 01          	add    DWORD PTR [rbp-0x6c],0x1
    b49e:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
    b4a3:	0f 85 76 ff ff ff    	jne    b41f <load_fn_mem_map+0xa2>
    b4a9:	8b 55 90             	mov    edx,DWORD PTR [rbp-0x70]
    b4ac:	8b 4d 8c             	mov    ecx,DWORD PTR [rbp-0x74]
    b4af:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b4b3:	89 ce                	mov    esi,ecx
    b4b5:	48 89 c7             	mov    rdi,rax
    b4b8:	e8 52 fe ff ff       	call   b30f <add_fn>
    b4bd:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
    b4c1:	48 8d 4d a0          	lea    rcx,[rbp-0x60]
    b4c5:	48 8d 45 98          	lea    rax,[rbp-0x68]
    b4c9:	48 89 ce             	mov    rsi,rcx
    b4cc:	48 89 c7             	mov    rdi,rax
    b4cf:	e8 8c 72 ff ff       	call   2760 <getline@plt>
    b4d4:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    b4d8:	48 83 7d b8 ff       	cmp    QWORD PTR [rbp-0x48],0xffffffffffffffff
    b4dd:	0f 85 ff fe ff ff    	jne    b3e2 <load_fn_mem_map+0x65>
    b4e3:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b4e7:	48 89 c7             	mov    rdi,rax
    b4ea:	e8 c1 72 ff ff       	call   27b0 <fclose@plt>
    b4ef:	90                   	nop
    b4f0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    b4f4:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    b4fb:	00 00 
    b4fd:	74 05                	je     b504 <load_fn_mem_map+0x187>
    b4ff:	e8 3c 72 ff ff       	call   2740 <__stack_chk_fail@plt>
    b504:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    b508:	c9                   	leave  
    b509:	c3                   	ret    

Disassembly of section .fini:

000000000000b50c <_fini>:
    b50c:	f3 0f 1e fa          	endbr64 
    b510:	48 83 ec 08          	sub    rsp,0x8
    b514:	48 83 c4 08          	add    rsp,0x8
    b518:	c3                   	ret    

Disassembly of section .rodata:

000000000000c000 <_IO_stdin_used>:
    c000:	01 00                	add    DWORD PTR [rax],eax
    c002:	02 00                	add    al,BYTE PTR [rax]
    c004:	2f                   	(bad)  
    c005:	65 74 63             	gs je  c06b <_IO_stdin_used+0x6b>
    c008:	2f                   	(bad)  
    c009:	76 69                	jbe    c074 <_IO_stdin_used+0x74>
    c00b:	67 69 6c 2f 76 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x76],0x6c696769
    c012:	69 6c 
    c014:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    c018:	66 00 2f             	data16 add BYTE PTR [rdi],ch
    c01b:	76 61                	jbe    c07e <_IO_stdin_used+0x7e>
    c01d:	72 2f                	jb     c04e <_IO_stdin_used+0x4e>
    c01f:	6c                   	ins    BYTE PTR es:[rdi],dx
    c020:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c021:	67 2f                	addr32 (bad) 
    c023:	76 69                	jbe    c08e <_IO_stdin_used+0x8e>
    c025:	67 69 6c 2f 73 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x6f6c6769
    c02c:	6c 6f 
    c02e:	67 2e 6c             	cs ins BYTE PTR es:[edi],dx
    c031:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c032:	67 00 2f             	add    BYTE PTR [edi],ch
    c035:	65 74 63             	gs je  c09b <_IO_stdin_used+0x9b>
    c038:	2f                   	(bad)  
    c039:	76 69                	jbe    c0a4 <_IO_stdin_used+0xa4>
    c03b:	67 69 6c 2f 68 6f 73 	imul   ebp,DWORD PTR [edi+ebp*1+0x68],0x7374736f
    c042:	74 73 
    c044:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    c048:	66 00 00             	data16 add BYTE PTR [rax],al
    c04b:	00 00                	add    BYTE PTR [rax],al
    c04d:	00 00                	add    BYTE PTR [rax],al
    c04f:	00 1b                	add    BYTE PTR [rbx],bl
    c051:	5b                   	pop    rbx
    c052:	39 30                	cmp    DWORD PTR [rax],esi
    c054:	6d                   	ins    DWORD PTR es:[rdi],dx
    c055:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c05a:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c05f:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c064:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c069:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c06e:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c073:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c078:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c07d:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c082:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c087:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c08c:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c091:	2d 1b 5b 6d 00       	sub    eax,0x6d5b1b
    c096:	00 00                	add    BYTE PTR [rax],al
    c098:	42                   	rex.X
    c099:	41                   	rex.B
    c09a:	44 2d 54 52 41 46    	rex.R sub eax,0x46415254
    c0a0:	46                   	rex.RX
    c0a1:	49                   	rex.WB
    c0a2:	43 20 55 6e          	rex.XB and BYTE PTR [r13+0x6e],dl
    c0a6:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c0aa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c0ab:	20 45 74             	and    BYTE PTR [rbp+0x74],al
    c0ae:	68 65 72 6e 74       	push   0x746e7265
    c0b3:	20 46 72             	and    BYTE PTR [rsi+0x72],al
    c0b6:	61                   	(bad)  
    c0b7:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0b8:	65 20 50 72          	and    BYTE PTR gs:[rax+0x72],dl
    c0bc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c0bd:	74 6f                	je     c12e <_IO_stdin_used+0x12e>
    c0bf:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    c0c2:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    c0c5:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0c6:	62                   	(bad)  
    c0c7:	65 72 00             	gs jb  c0ca <_IO_stdin_used+0xca>
    c0ca:	2f                   	(bad)  
    c0cb:	76 61                	jbe    c12e <_IO_stdin_used+0x12e>
    c0cd:	72 2f                	jb     c0fe <_IO_stdin_used+0xfe>
    c0cf:	6c                   	ins    BYTE PTR es:[rdi],dx
    c0d0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c0d1:	67 2f                	addr32 (bad) 
    c0d3:	76 69                	jbe    c13e <_IO_stdin_used+0x13e>
    c0d5:	67 69 6c 2f 73 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x6f6c6769
    c0dc:	6c 6f 
    c0de:	67 2e 6c             	cs ins BYTE PTR es:[edi],dx
    c0e1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c0e2:	67 00 00             	add    BYTE PTR [eax],al
    c0e5:	00 00                	add    BYTE PTR [rax],al
    c0e7:	00 1b                	add    BYTE PTR [rbx],bl
    c0e9:	5b                   	pop    rbx
    c0ea:	33 3b                	xor    edi,DWORD PTR [rbx]
    c0ec:	33 33                	xor    esi,DWORD PTR [rbx]
    c0ee:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0ef:	00 25 73 00 30 2e    	add    BYTE PTR [rip+0x2e300073],ah        # 2e30c168 <_end+0x2e1d1160>
    c0f5:	30 2e                	xor    BYTE PTR [rsi],ch
    c0f7:	30 2e                	xor    BYTE PTR [rsi],ch
    c0f9:	30 00                	xor    BYTE PTR [rax],al
    c0fb:	00 00                	add    BYTE PTR [rax],al
    c0fd:	00 00                	add    BYTE PTR [rax],al
    c0ff:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    c102:	4f 54                	rex.WRXB push r12
    c104:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    c108:	50                   	push   rax
    c109:	3a 20                	cmp    ah,BYTE PTR [rax]
    c10b:	50                   	push   rax
    c10c:	52                   	push   rdx
    c10d:	4f                   	rex.WRXB
    c10e:	42                   	rex.X
    c10f:	45 3a 20             	cmp    r12b,BYTE PTR [r8]
    c112:	57                   	push   rdi
    c113:	68 6f 20 68 61       	push   0x6168206f
    c118:	73 20                	jae    c13a <_IO_stdin_used+0x13a>
    c11a:	25 73 3f 0a 00       	and    eax,0xa3f73
    c11f:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    c122:	4f 54                	rex.WRXB push r12
    c124:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    c128:	50                   	push   rax
    c129:	3a 20                	cmp    ah,BYTE PTR [rax]
    c12b:	57                   	push   rdi
    c12c:	68 6f 20 69 73       	push   0x7369206f
    c131:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    c134:	20 25 73 3f 20 54    	and    BYTE PTR [rip+0x54203f73],ah        # 542100ad <_end+0x540d50a5>
    c13a:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    c13c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c13d:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # cbb6 <_IO_stdin_used+0xbb6>
    c143:	00 00                	add    BYTE PTR [rax],al
    c145:	00 00                	add    BYTE PTR [rax],al
    c147:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    c14a:	4f 54                	rex.WRXB push r12
    c14c:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    c150:	50                   	push   rax
    c151:	3a 20                	cmp    ah,BYTE PTR [rax]
    c153:	52                   	push   rdx
    c154:	45 50                	rex.RB push r8
    c156:	4c 59                	rex.WR pop rcx
    c158:	3a 20                	cmp    ah,BYTE PTR [rax]
    c15a:	25 73 20 69 73       	and    eax,0x73692073
    c15f:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    c162:	20 25 73 0a 00 55    	and    BYTE PTR [rip+0x55000a73],ah        # 5500cbdb <_end+0x54ed1bd3>
    c168:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c169:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c16d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c16e:	20 41 52             	and    BYTE PTR [rcx+0x52],al
    c171:	50                   	push   rax
    c172:	20 6f 70             	and    BYTE PTR [rdi+0x70],ch
    c175:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
    c178:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    c17b:	25 64 0a 00 1b       	and    eax,0x1b000a64
    c180:	5b                   	pop    rbx
    c181:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    c184:	4c                   	rex.WR
    c185:	4f                   	rex.WRXB
    c186:	4f 50                	rex.WRXB push r8
    c188:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de201 <_end+0x3e1a31f9>
    c18e:	20 25 73 00 20 52    	and    BYTE PTR [rip+0x52200073],ah        # 5220c207 <_end+0x520d11ff>
    c194:	45 50                	rex.RB push r8
    c196:	4c 59                	rex.WR pop rcx
    c198:	20 00                	and    BYTE PTR [rax],al
    c19a:	20 55 4e             	and    BYTE PTR [rbp+0x4e],dl
    c19d:	4b                   	rex.WXB
    c19e:	4e                   	rex.WRX
    c19f:	4f 57                	rex.WRXB push r15
    c1a1:	4e 20 4c 4f 4f       	rex.WRX and BYTE PTR [rdi+r9*2+0x4f],r9b
    c1a6:	50                   	push   rax
    c1a7:	20 46 55             	and    BYTE PTR [rsi+0x55],al
    c1aa:	4e                   	rex.WRX
    c1ab:	43 54                	rex.XB push r12
    c1ad:	49                   	rex.WB
    c1ae:	4f                   	rex.WRXB
    c1af:	4e 3a 25 64 20 0a 00 	rex.WRX cmp r12b,BYTE PTR [rip+0xa2064]        # ae21a <rules+0x9cf3a>
    c1b6:	00 00                	add    BYTE PTR [rax],al
    c1b8:	25 30 32 78 3a       	and    eax,0x3a783230
    c1bd:	25 30 32 78 3a       	and    eax,0x3a783230
    c1c2:	25 30 32 78 3a       	and    eax,0x3a783230
    c1c7:	25 30 32 78 3a       	and    eax,0x3a783230
    c1cc:	25 30 32 78 3a       	and    eax,0x3a783230
    c1d1:	25 30 32 78 00       	and    eax,0x783230
    c1d6:	25 64 2e 25 64       	and    eax,0x64252e64
    c1db:	2e 25 64 2e 25 64    	cs and eax,0x64252e64
    c1e1:	00 00                	add    BYTE PTR [rax],al
    c1e3:	00 00                	add    BYTE PTR [rax],al
    c1e5:	00 00                	add    BYTE PTR [rax],al
    c1e7:	00 25 30 32 78 25    	add    BYTE PTR [rip+0x25783230],ah        # 2578f41d <_end+0x25654415>
    c1ed:	30 32                	xor    BYTE PTR [rdx],dh
    c1ef:	78 3a                	js     c22b <_IO_stdin_used+0x22b>
    c1f1:	25 30 32 78 25       	and    eax,0x25783230
    c1f6:	30 32                	xor    BYTE PTR [rdx],dh
    c1f8:	78 3a                	js     c234 <_IO_stdin_used+0x234>
    c1fa:	25 30 32 78 25       	and    eax,0x25783230
    c1ff:	30 32                	xor    BYTE PTR [rdx],dh
    c201:	78 3a                	js     c23d <_IO_stdin_used+0x23d>
    c203:	25 30 32 78 25       	and    eax,0x25783230
    c208:	30 32                	xor    BYTE PTR [rdx],dh
    c20a:	78 3a                	js     c246 <_IO_stdin_used+0x246>
    c20c:	25 30 32 78 25       	and    eax,0x25783230
    c211:	30 32                	xor    BYTE PTR [rdx],dh
    c213:	78 3a                	js     c24f <_IO_stdin_used+0x24f>
    c215:	25 30 32 78 25       	and    eax,0x25783230
    c21a:	30 32                	xor    BYTE PTR [rdx],dh
    c21c:	78 3a                	js     c258 <_IO_stdin_used+0x258>
    c21e:	25 30 32 78 25       	and    eax,0x25783230
    c223:	30 32                	xor    BYTE PTR [rdx],dh
    c225:	78 3a                	js     c261 <_IO_stdin_used+0x261>
    c227:	25 30 32 78 25       	and    eax,0x25783230
    c22c:	30 32                	xor    BYTE PTR [rdx],dh
    c22e:	78 00                	js     c230 <_IO_stdin_used+0x230>
    c230:	25 64 2d 25 30       	and    eax,0x30252d64
    c235:	32 64 2d 25          	xor    ah,BYTE PTR [rbp+rbp*1+0x25]
    c239:	30 32                	xor    BYTE PTR [rdx],dh
    c23b:	64 20 25 30 32 64 3a 	and    BYTE PTR fs:[rip+0x3a643230],ah        # 3a64f472 <_end+0x3a51446a>
    c242:	25 30 32 64 3a       	and    eax,0x3a643230
    c247:	25 30 32 64 00       	and    eax,0x643230
    c24c:	25 73 3a 20 25       	and    eax,0x25203a73
    c251:	73 0a                	jae    c25d <_IO_stdin_used+0x25d>
    c253:	00 00                	add    BYTE PTR [rax],al
    c255:	00 00                	add    BYTE PTR [rax],al
    c257:	00 25 73 20 46 6f    	add    BYTE PTR [rip+0x6f462073],ah        # 6f46e2d0 <_end+0x6f3332c8>
    c25d:	75 6e                	jne    c2cd <_IO_stdin_used+0x2cd>
    c25f:	64 20 62 6c          	and    BYTE PTR fs:[rdx+0x6c],ah
    c263:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c264:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    c267:	64 20 69 70          	and    BYTE PTR fs:[rcx+0x70],ch
    c26b:	76 34                	jbe    c2a1 <_IO_stdin_used+0x2a1>
    c26d:	20 61 64             	and    BYTE PTR [rcx+0x64],ah
    c270:	64 72 65             	fs jb  c2d8 <_IO_stdin_used+0x2d8>
    c273:	73 73                	jae    c2e8 <_IO_stdin_used+0x2e8>
    c275:	28 64 65 73          	sub    BYTE PTR [rbp+riz*2+0x73],ah
    c279:	74 29                	je     c2a4 <_IO_stdin_used+0x2a4>
    c27b:	3a 20                	cmp    ah,BYTE PTR [rax]
    c27d:	25 73 0a 00 00       	and    eax,0xa73
    c282:	00 00                	add    BYTE PTR [rax],al
    c284:	00 00                	add    BYTE PTR [rax],al
    c286:	00 00                	add    BYTE PTR [rax],al
    c288:	25 73 20 46 6f       	and    eax,0x6f462073
    c28d:	75 6e                	jne    c2fd <_IO_stdin_used+0x2fd>
    c28f:	64 20 62 6c          	and    BYTE PTR fs:[rdx+0x6c],ah
    c293:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c294:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    c297:	64 20 69 70          	and    BYTE PTR fs:[rcx+0x70],ch
    c29b:	76 34                	jbe    c2d1 <_IO_stdin_used+0x2d1>
    c29d:	20 61 64             	and    BYTE PTR [rcx+0x64],ah
    c2a0:	64 72 65             	fs jb  c308 <_IO_stdin_used+0x308>
    c2a3:	73 73                	jae    c318 <_IO_stdin_used+0x318>
    c2a5:	28 73 72             	sub    BYTE PTR [rbx+0x72],dh
    c2a8:	63 29                	movsxd ebp,DWORD PTR [rcx]
    c2aa:	3a 20                	cmp    ah,BYTE PTR [rax]
    c2ac:	25 73 0a 00 1b       	and    eax,0x1b000a73
    c2b1:	5b                   	pop    rbx
    c2b2:	34 6d                	xor    al,0x6d
    c2b4:	00 25 73 46 72 61    	add    BYTE PTR [rip+0x61724673],ah        # 6173092d <_end+0x615f5925>
    c2ba:	67 6d                	ins    DWORD PTR es:[edi],dx
    c2bc:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c2be:	74 65                	je     c325 <_IO_stdin_used+0x325>
    c2c0:	64 20 00             	and    BYTE PTR fs:[rax],al
    c2c3:	1b 5b 30             	sbb    ebx,DWORD PTR [rbx+0x30]
    c2c6:	6d                   	ins    DWORD PTR es:[rdi],dx
    c2c7:	00 25 73 00 20 25    	add    BYTE PTR [rip+0x25200073],ah        # 2520c340 <_end+0x250d1338>
    c2cd:	73 20                	jae    c2ef <_IO_stdin_used+0x2ef>
    c2cf:	2d 3e 20 25 73       	sub    eax,0x7325203e
    c2d4:	25 73 0a 00 49       	and    eax,0x49000a73
    c2d9:	50                   	push   rax
    c2da:	76 34                	jbe    c310 <_IO_stdin_used+0x310>
    c2dc:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de355 <_end+0x3e1a334d>
    c2e2:	20 25 73 20 50 72    	and    BYTE PTR [rip+0x72502073],ah        # 7250e35b <_end+0x723d3353>
    c2e8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c2e9:	74 6f                	je     c35a <_IO_stdin_used+0x35a>
    c2eb:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    c2ee:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    c2f1:	6d                   	ins    DWORD PTR es:[rdi],dx
    c2f2:	62                   	(bad)  
    c2f3:	65 72 20             	gs jb  c316 <_IO_stdin_used+0x316>
    c2f6:	3d 20 25 64 0a       	cmp    eax,0xa642520
    c2fb:	00 00                	add    BYTE PTR [rax],al
    c2fd:	00 00                	add    BYTE PTR [rax],al
    c2ff:	00 1b                	add    BYTE PTR [rbx],bl
    c301:	5b                   	pop    rbx
    c302:	33 35 6d 00 25 73    	xor    esi,DWORD PTR [rip+0x7325006d]        # 7325c375 <_end+0x7312136d>
    c308:	00 49 50             	add    BYTE PTR [rcx+0x50],cl
    c30b:	76 36                	jbe    c343 <_IO_stdin_used+0x343>
    c30d:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de386 <_end+0x3e1a337e>
    c313:	20 25 73 0a 00 09    	and    BYTE PTR [rip+0x9000a73],ah        # 900cd8c <_end+0x8ed1d84>
    c319:	49                   	rex.WB
    c31a:	43                   	rex.XB
    c31b:	4d 50                	rex.WRB push r8
    c31d:	76 36                	jbe    c355 <_IO_stdin_used+0x355>
    c31f:	20 00                	and    BYTE PTR [rax],al
    c321:	20 52 6f             	and    BYTE PTR [rdx+0x6f],dl
    c324:	75 74                	jne    c39a <_IO_stdin_used+0x39a>
    c326:	65 72 20             	gs jb  c349 <_IO_stdin_used+0x349>
    c329:	53                   	push   rbx
    c32a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c32b:	6c                   	ins    BYTE PTR es:[rdi],dx
    c32c:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    c333:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c334:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c335:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    c338:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c339:	6d                   	ins    DWORD PTR es:[rdi],dx
    c33a:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # cdb3 <_IO_stdin_used+0xdb3>
    c340:	4d 75 6c             	rex.WRB jne c3af <_IO_stdin_used+0x3af>
    c343:	74 69                	je     c3ae <_IO_stdin_used+0x3ae>
    c345:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    c348:	74 20                	je     c36a <_IO_stdin_used+0x36a>
    c34a:	4c 69 73 74 65 6e 65 	imul   r14,QWORD PTR [rbx+0x74],0x72656e65
    c351:	72 
    c352:	20 52 65             	and    BYTE PTR [rdx+0x65],dl
    c355:	70 6f                	jo     c3c6 <_IO_stdin_used+0x3c6>
    c357:	72 74                	jb     c3cd <_IO_stdin_used+0x3cd>
    c359:	20 4d 65             	and    BYTE PTR [rbp+0x65],cl
    c35c:	73 73                	jae    c3d1 <_IO_stdin_used+0x3d1>
    c35e:	61                   	(bad)  
    c35f:	67 65 20 76 32       	and    BYTE PTR gs:[esi+0x32],dh
    c364:	00 4d 75             	add    BYTE PTR [rbp+0x75],cl
    c367:	6c                   	ins    BYTE PTR es:[rdi],dx
    c368:	74 69                	je     c3d3 <_IO_stdin_used+0x3d3>
    c36a:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    c36d:	74 20                	je     c38f <_IO_stdin_used+0x38f>
    c36f:	20 4c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],cl
    c373:	74 65                	je     c3da <_IO_stdin_used+0x3da>
    c375:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c376:	65 72 20             	gs jb  c399 <_IO_stdin_used+0x399>
    c379:	51                   	push   rcx
    c37a:	75 65                	jne    c3e1 <_IO_stdin_used+0x3e1>
    c37c:	72 79                	jb     c3f7 <_IO_stdin_used+0x3f7>
    c37e:	00 4e 65             	add    BYTE PTR [rsi+0x65],cl
    c381:	69 67 68 62 6f 72 20 	imul   esp,DWORD PTR [rdi+0x68],0x20726f62
    c388:	53                   	push   rbx
    c389:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c38a:	6c                   	ins    BYTE PTR es:[rdi],dx
    c38b:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    c392:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c393:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c394:	00 1b                	add    BYTE PTR [rbx],bl
    c396:	5b                   	pop    rbx
    c397:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    c39a:	00 00                	add    BYTE PTR [rax],al
    c39c:	00 00                	add    BYTE PTR [rax],al
    c39e:	00 00                	add    BYTE PTR [rax],al
    c3a0:	54                   	push   rsp
    c3a1:	69 6d 65 20 73 74 61 	imul   ebp,DWORD PTR [rbp+0x65],0x61747320
    c3a8:	6d                   	ins    DWORD PTR es:[rdi],dx
    c3a9:	70 20                	jo     c3cb <_IO_stdin_used+0x3cb>
    c3ab:	72 65                	jb     c412 <_IO_stdin_used+0x412>
    c3ad:	71 75                	jno    c424 <_IO_stdin_used+0x424>
    c3af:	65 73 74             	gs jae c426 <_IO_stdin_used+0x426>
    c3b2:	3a 20                	cmp    ah,BYTE PTR [rax]
    c3b4:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    c3b9:	20 25 73 28 63 6f    	and    BYTE PTR [rip+0x6f632873],ah        # 6f63ec32 <_end+0x6f503c2a>
    c3bf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c3c0:	66 69 67 20 73 70    	imul   sp,WORD PTR [rdi+0x20],0x7073
    c3c6:	65 63 69 66          	movsxd ebp,DWORD PTR gs:[rcx+0x66]
    c3ca:	69 65 73 20 73 74 72 	imul   esp,DWORD PTR [rbp+0x73],0x72747320
    c3d1:	69 63 74 20 74 69 6d 	imul   esp,DWORD PTR [rbx+0x74],0x6d697420
    c3d8:	65 73 74             	gs jae c44f <_IO_stdin_used+0x44f>
    c3db:	61                   	(bad)  
    c3dc:	6d                   	ins    DWORD PTR es:[rdi],dx
    c3dd:	70 20                	jo     c3ff <_IO_stdin_used+0x3ff>
    c3df:	61                   	(bad)  
    c3e0:	6c                   	ins    BYTE PTR es:[rdi],dx
    c3e1:	65 72 74             	gs jb  c458 <_IO_stdin_used+0x458>
    c3e4:	73 29                	jae    c40f <_IO_stdin_used+0x40f>
    c3e6:	0a 00                	or     al,BYTE PTR [rax]
    c3e8:	50                   	push   rax
    c3e9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c3ea:	73 73                	jae    c45f <_IO_stdin_used+0x45f>
    c3ec:	69 62 6c 65 20 6e 6d 	imul   esp,DWORD PTR [rdx+0x6c],0x6d6e2065
    c3f3:	61                   	(bad)  
    c3f4:	70 20                	jo     c416 <_IO_stdin_used+0x416>
    c3f6:	68 6f 73 74 20       	push   0x2074736f
    c3fb:	61                   	(bad)  
    c3fc:	6c                   	ins    BYTE PTR es:[rdi],dx
    c3fd:	69 76 65 20 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x65686320
    c404:	63 6b 20             	movsxd ebp,DWORD PTR [rbx+0x20]
    c407:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    c40c:	20 25 73 3b 20 6d    	and    BYTE PTR [rip+0x6d203b73],ah        # 6d20ff85 <_end+0x6d0d4f7d>
    c412:	61                   	(bad)  
    c413:	74 63                	je     c478 <_IO_stdin_used+0x478>
    c415:	68 65 64 20 49       	push   0x49206465
    c41a:	43                   	rex.XB
    c41b:	4d 50                	rex.WRB push r8
    c41d:	20 45 63             	and    BYTE PTR [rbp+0x63],al
    c420:	68 6f 2c 20 54       	push   0x54202c6f
    c425:	43 50                	rex.XB push r8
    c427:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    c42a:	4e 2c 20             	rex.WRX sub al,0x20
    c42d:	54                   	push   rsp
    c42e:	43 50                	rex.XB push r8
    c430:	20 41 43             	and    BYTE PTR [rcx+0x43],al
    c433:	4b 2c 20             	rex.WXB sub al,0x20
    c436:	61                   	(bad)  
    c437:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c438:	64 20 49 43          	and    BYTE PTR fs:[rcx+0x43],cl
    c43c:	4d 50                	rex.WRB push r8
    c43e:	20 54 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dl
    c442:	65 73 74             	gs jae c4b9 <_IO_stdin_used+0x4b9>
    c445:	61                   	(bad)  
    c446:	6d                   	ins    DWORD PTR es:[rdi],dx
    c447:	70 20                	jo     c469 <_IO_stdin_used+0x469>
    c449:	72 65                	jb     c4b0 <_IO_stdin_used+0x4b0>
    c44b:	71 75                	jno    c4c2 <_IO_stdin_used+0x4c2>
    c44d:	65 73 74             	gs jae c4c4 <_IO_stdin_used+0x4c4>
    c450:	0a 00                	or     al,BYTE PTR [rax]
    c452:	61                   	(bad)  
    c453:	00 00                	add    BYTE PTR [rax],al
    c455:	00 00                	add    BYTE PTR [rax],al
    c457:	00 50 6f             	add    BYTE PTR [rax+0x6f],dl
    c45a:	73 73                	jae    c4cf <_IO_stdin_used+0x4cf>
    c45c:	69 62 6c 65 20 6e 6d 	imul   esp,DWORD PTR [rdx+0x6c],0x6d6e2065
    c463:	61                   	(bad)  
    c464:	70 20                	jo     c486 <_IO_stdin_used+0x486>
    c466:	68 6f 73 74 20       	push   0x2074736f
    c46b:	61                   	(bad)  
    c46c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c46d:	69 76 65 20 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x65686320
    c474:	63 6b 20             	movsxd ebp,DWORD PTR [rbx+0x20]
    c477:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    c47c:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461e4f5 <_end+0x744e34ed>
    c482:	20 25 73 3b 20 6d    	and    BYTE PTR [rip+0x6d203b73],ah        # 6d20fffb <_end+0x6d0d4ff3>
    c488:	61                   	(bad)  
    c489:	74 63                	je     c4ee <_IO_stdin_used+0x4ee>
    c48b:	68 65 64 20 49       	push   0x49206465
    c490:	43                   	rex.XB
    c491:	4d 50                	rex.WRB push r8
    c493:	20 45 63             	and    BYTE PTR [rbp+0x63],al
    c496:	68 6f 2c 20 54       	push   0x54202c6f
    c49b:	43 50                	rex.XB push r8
    c49d:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    c4a0:	4e 2c 20             	rex.WRX sub al,0x20
    c4a3:	54                   	push   rsp
    c4a4:	43 50                	rex.XB push r8
    c4a6:	20 41 43             	and    BYTE PTR [rcx+0x43],al
    c4a9:	4b 2c 20             	rex.WXB sub al,0x20
    c4ac:	61                   	(bad)  
    c4ad:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c4ae:	64 20 49 43          	and    BYTE PTR fs:[rcx+0x43],cl
    c4b2:	4d 50                	rex.WRB push r8
    c4b4:	20 54 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dl
    c4b8:	65 73 74             	gs jae c52f <_IO_stdin_used+0x52f>
    c4bb:	61                   	(bad)  
    c4bc:	6d                   	ins    DWORD PTR es:[rdi],dx
    c4bd:	70 20                	jo     c4df <_IO_stdin_used+0x4df>
    c4bf:	72 65                	jb     c526 <_IO_stdin_used+0x526>
    c4c1:	71 75                	jno    c538 <_IO_stdin_used+0x538>
    c4c3:	65 73 74             	gs jae c53a <_IO_stdin_used+0x53a>
    c4c6:	0a 00                	or     al,BYTE PTR [rax]
    c4c8:	49 50                	rex.WB push r8
    c4ca:	76 34                	jbe    c500 <_IO_stdin_used+0x500>
    c4cc:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de545 <_end+0x3e1a353d>
    c4d2:	20 25 73 0a 00 09    	and    BYTE PTR [rip+0x9000a73],ah        # 900cf4b <_end+0x8ed1f43>
    c4d8:	49                   	rex.WB
    c4d9:	43                   	rex.XB
    c4da:	4d 50                	rex.WRB push r8
    c4dc:	20 00                	and    BYTE PTR [rax],al
    c4de:	20 65 63             	and    BYTE PTR [rbp+0x63],ah
    c4e1:	68 6f 20 72 65       	push   0x6572206f
    c4e6:	70 6c                	jo     c554 <_IO_stdin_used+0x554>
    c4e8:	79 00                	jns    c4ea <_IO_stdin_used+0x4ea>
    c4ea:	20 64 65 73          	and    BYTE PTR [rbp+riz*2+0x73],ah
    c4ee:	74 69                	je     c559 <_IO_stdin_used+0x559>
    c4f0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c4f1:	61                   	(bad)  
    c4f2:	74 69                	je     c55d <_IO_stdin_used+0x55d>
    c4f4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c4f5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c4f6:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    c4f9:	72 65                	jb     c560 <_IO_stdin_used+0x560>
    c4fb:	61                   	(bad)  
    c4fc:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c4ff:	62                   	(bad)  
    c500:	6c                   	ins    BYTE PTR es:[rdi],dx
    c501:	65 28 00             	sub    BYTE PTR gs:[rax],al
    c504:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    c507:	74 77                	je     c580 <_IO_stdin_used+0x580>
    c509:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c50a:	72 6b                	jb     c577 <_IO_stdin_used+0x577>
    c50c:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c50f:	72 65                	jb     c576 <_IO_stdin_used+0x576>
    c511:	61                   	(bad)  
    c512:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c515:	62                   	(bad)  
    c516:	6c                   	ins    BYTE PTR es:[rdi],dx
    c517:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c51a:	00 20                	add    BYTE PTR [rax],ah
    c51c:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c51e:	73 74                	jae    c594 <_IO_stdin_used+0x594>
    c520:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c523:	72 65                	jb     c58a <_IO_stdin_used+0x58a>
    c525:	61                   	(bad)  
    c526:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c529:	62                   	(bad)  
    c52a:	6c                   	ins    BYTE PTR es:[rdi],dx
    c52b:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c52e:	00 20                	add    BYTE PTR [rax],ah
    c530:	50                   	push   rax
    c531:	72 6f                	jb     c5a2 <_IO_stdin_used+0x5a2>
    c533:	74 6f                	je     c5a4 <_IO_stdin_used+0x5a4>
    c535:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    c538:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c53b:	72 65                	jb     c5a2 <_IO_stdin_used+0x5a2>
    c53d:	61                   	(bad)  
    c53e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c541:	62                   	(bad)  
    c542:	6c                   	ins    BYTE PTR es:[rdi],dx
    c543:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c546:	00 20                	add    BYTE PTR [rax],ah
    c548:	50                   	push   rax
    c549:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c54a:	72 74                	jb     c5c0 <_IO_stdin_used+0x5c0>
    c54c:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c54f:	72 65                	jb     c5b6 <_IO_stdin_used+0x5b6>
    c551:	61                   	(bad)  
    c552:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c555:	62                   	(bad)  
    c556:	6c                   	ins    BYTE PTR es:[rdi],dx
    c557:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c55a:	00 20                	add    BYTE PTR [rax],ah
    c55c:	46 72 61             	rex.RX jb c5c0 <_IO_stdin_used+0x5c0>
    c55f:	67 6d                	ins    DWORD PTR es:[edi],dx
    c561:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c563:	74 61                	je     c5c6 <_IO_stdin_used+0x5c6>
    c565:	74 69                	je     c5d0 <_IO_stdin_used+0x5d0>
    c567:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c568:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c569:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    c56c:	65 64 65 64 20 29    	gs fs gs and BYTE PTR fs:[rcx],ch
    c572:	00 20                	add    BYTE PTR [rax],ah
    c574:	53                   	push   rbx
    c575:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c576:	75 72                	jne    c5ea <_IO_stdin_used+0x5ea>
    c578:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c57b:	52                   	push   rdx
    c57c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c57d:	75 74                	jne    c5f3 <_IO_stdin_used+0x5f3>
    c57f:	65 20 46 61          	and    BYTE PTR gs:[rsi+0x61],al
    c583:	69 6c 65 64 20 29 00 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x2920
    c58a:	00 
    c58b:	00 00                	add    BYTE PTR [rax],al
    c58d:	00 00                	add    BYTE PTR [rax],al
    c58f:	00 20                	add    BYTE PTR [rax],ah
    c591:	44                   	rex.R
    c592:	65 73 74             	gs jae c609 <_IO_stdin_used+0x609>
    c595:	69 6e 61 74 69 6f 6e 	imul   ebp,DWORD PTR [rsi+0x61],0x6e6f6974
    c59c:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    c59f:	74 77                	je     c618 <_IO_stdin_used+0x618>
    c5a1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5a2:	72 6b                	jb     c60f <_IO_stdin_used+0x60f>
    c5a4:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c5a7:	72 65                	jb     c60e <_IO_stdin_used+0x60e>
    c5a9:	61                   	(bad)  
    c5aa:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c5ad:	62                   	(bad)  
    c5ae:	6c                   	ins    BYTE PTR es:[rdi],dx
    c5af:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c5b2:	00 00                	add    BYTE PTR [rax],al
    c5b4:	00 00                	add    BYTE PTR [rax],al
    c5b6:	00 00                	add    BYTE PTR [rax],al
    c5b8:	20 44 65 73          	and    BYTE PTR [rbp+riz*2+0x73],al
    c5bc:	74 69                	je     c627 <_IO_stdin_used+0x627>
    c5be:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c5bf:	61                   	(bad)  
    c5c0:	74 69                	je     c62b <_IO_stdin_used+0x62b>
    c5c2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5c3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c5c4:	20 48 6f             	and    BYTE PTR [rax+0x6f],cl
    c5c7:	73 74                	jae    c63d <_IO_stdin_used+0x63d>
    c5c9:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c5cc:	72 65                	jb     c633 <_IO_stdin_used+0x633>
    c5ce:	61                   	(bad)  
    c5cf:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c5d2:	62                   	(bad)  
    c5d3:	6c                   	ins    BYTE PTR es:[rdi],dx
    c5d4:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c5d7:	00 20                	add    BYTE PTR [rax],ah
    c5d9:	53                   	push   rbx
    c5da:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5db:	75 72                	jne    c64f <_IO_stdin_used+0x64f>
    c5dd:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c5e0:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c5e2:	73 74                	jae    c658 <_IO_stdin_used+0x658>
    c5e4:	20 49 73             	and    BYTE PTR [rcx+0x73],cl
    c5e7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5e8:	6c                   	ins    BYTE PTR es:[rdi],dx
    c5e9:	61                   	(bad)  
    c5ea:	74 65                	je     c651 <_IO_stdin_used+0x651>
    c5ec:	64 20 29             	and    BYTE PTR fs:[rcx],ch
    c5ef:	00 20                	add    BYTE PTR [rax],ah
    c5f1:	4e                   	rex.WRX
    c5f2:	65 74 77             	gs je  c66c <_IO_stdin_used+0x66c>
    c5f5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5f6:	72 6b                	jb     c663 <_IO_stdin_used+0x663>
    c5f8:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    c5fb:	6d                   	ins    DWORD PTR es:[rdi],dx
    c5fc:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    c603:	74 69                	je     c66e <_IO_stdin_used+0x66e>
    c605:	76 65                	jbe    c66c <_IO_stdin_used+0x66c>
    c607:	6c                   	ins    BYTE PTR es:[rdi],dx
    c608:	79 20                	jns    c62a <_IO_stdin_used+0x62a>
    c60a:	50                   	push   rax
    c60b:	72 6f                	jb     c67c <_IO_stdin_used+0x67c>
    c60d:	68 69 62 69 74       	push   0x74696269
    c612:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    c616:	00 00                	add    BYTE PTR [rax],al
    c618:	20 48 6f             	and    BYTE PTR [rax+0x6f],cl
    c61b:	73 74                	jae    c691 <_IO_stdin_used+0x691>
    c61d:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    c620:	6d                   	ins    DWORD PTR es:[rdi],dx
    c621:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    c628:	74 69                	je     c693 <_IO_stdin_used+0x693>
    c62a:	76 65                	jbe    c691 <_IO_stdin_used+0x691>
    c62c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c62d:	79 20                	jns    c64f <_IO_stdin_used+0x64f>
    c62f:	50                   	push   rax
    c630:	72 6f                	jb     c6a1 <_IO_stdin_used+0x6a1>
    c632:	68 69 62 69 74       	push   0x74696269
    c637:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    c63b:	00 00                	add    BYTE PTR [rax],al
    c63d:	00 00                	add    BYTE PTR [rax],al
    c63f:	00 20                	add    BYTE PTR [rax],ah
    c641:	4e                   	rex.WRX
    c642:	65 74 77             	gs je  c6bc <_IO_stdin_used+0x6bc>
    c645:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c646:	72 6b                	jb     c6b3 <_IO_stdin_used+0x6b3>
    c648:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c64b:	72 65                	jb     c6b2 <_IO_stdin_used+0x6b2>
    c64d:	61                   	(bad)  
    c64e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c651:	62                   	(bad)  
    c652:	6c                   	ins    BYTE PTR es:[rdi],dx
    c653:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    c657:	72 20                	jb     c679 <_IO_stdin_used+0x679>
    c659:	54                   	push   rsp
    c65a:	4f 53                	rex.WRXB push r11
    c65c:	20 29                	and    BYTE PTR [rcx],ch
    c65e:	00 20                	add    BYTE PTR [rax],ah
    c660:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c662:	73 74                	jae    c6d8 <_IO_stdin_used+0x6d8>
    c664:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c667:	72 65                	jb     c6ce <_IO_stdin_used+0x6ce>
    c669:	61                   	(bad)  
    c66a:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c66d:	62                   	(bad)  
    c66e:	6c                   	ins    BYTE PTR es:[rdi],dx
    c66f:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    c673:	72 20                	jb     c695 <_IO_stdin_used+0x695>
    c675:	54                   	push   rsp
    c676:	4f 53                	rex.WRXB push r11
    c678:	20 29                	and    BYTE PTR [rcx],ch
    c67a:	00 00                	add    BYTE PTR [rax],al
    c67c:	00 00                	add    BYTE PTR [rax],al
    c67e:	00 00                	add    BYTE PTR [rax],al
    c680:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c683:	6d                   	ins    DWORD PTR es:[rdi],dx
    c684:	6d                   	ins    DWORD PTR es:[rdi],dx
    c685:	75 6e                	jne    c6f5 <_IO_stdin_used+0x6f5>
    c687:	69 63 61 74 69 6f 6e 	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
    c68e:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    c691:	6d                   	ins    DWORD PTR es:[rdi],dx
    c692:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    c699:	74 69                	je     c704 <_IO_stdin_used+0x704>
    c69b:	76 65                	jbe    c702 <_IO_stdin_used+0x702>
    c69d:	6c                   	ins    BYTE PTR es:[rdi],dx
    c69e:	79 20                	jns    c6c0 <_IO_stdin_used+0x6c0>
    c6a0:	50                   	push   rax
    c6a1:	72 6f                	jb     c712 <_IO_stdin_used+0x712>
    c6a3:	68 69 62 69 74       	push   0x74696269
    c6a8:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    c6ac:	00 20                	add    BYTE PTR [rax],ah
    c6ae:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c6b0:	73 74                	jae    c726 <_IO_stdin_used+0x726>
    c6b2:	20 50 72             	and    BYTE PTR [rax+0x72],dl
    c6b5:	65 63 65 64          	movsxd esp,DWORD PTR gs:[rbp+0x64]
    c6b9:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c6bb:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c6be:	56                   	push   rsi
    c6bf:	69 6f 6c 61 74 69 6f 	imul   ebp,DWORD PTR [rdi+0x6c],0x6f697461
    c6c6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c6c7:	20 29                	and    BYTE PTR [rcx],ch
    c6c9:	00 00                	add    BYTE PTR [rax],al
    c6cb:	00 00                	add    BYTE PTR [rax],al
    c6cd:	00 00                	add    BYTE PTR [rax],al
    c6cf:	00 20                	add    BYTE PTR [rax],ah
    c6d1:	50                   	push   rax
    c6d2:	72 65                	jb     c739 <_IO_stdin_used+0x739>
    c6d4:	63 65 64             	movsxd esp,DWORD PTR [rbp+0x64]
    c6d7:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c6d9:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c6dc:	43 75 74             	rex.XB jne c753 <_IO_stdin_used+0x753>
    c6df:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c6e0:	66 66 20 69 6e       	data16 data16 and BYTE PTR [rcx+0x6e],ch
    c6e5:	20 45 66             	and    BYTE PTR [rbp+0x66],al
    c6e8:	66 65 63 74 20 29    	movsxd si,DWORD PTR gs:[rax+riz*1+0x29]
    c6ee:	00 20                	add    BYTE PTR [rax],ah
    c6f0:	55                   	push   rbp
    c6f1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c6f2:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c6f6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c6f7:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c6fa:	64 65 3d 25 64 20 29 	fs gs cmp eax,0x29206425
    c701:	0a 00                	or     al,BYTE PTR [rax]
    c703:	00 00                	add    BYTE PTR [rax],al
    c705:	00 00                	add    BYTE PTR [rax],al
    c707:	00 20                	add    BYTE PTR [rax],ah
    c709:	53                   	push   rbx
    c70a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c70b:	75 72                	jne    c77f <_IO_stdin_used+0x77f>
    c70d:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c710:	51                   	push   rcx
    c711:	75 65                	jne    c778 <_IO_stdin_used+0x778>
    c713:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c714:	63 68 28             	movsxd ebp,DWORD PTR [rax+0x28]
    c717:	20 66 6c             	and    BYTE PTR [rsi+0x6c],ah
    c71a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c71b:	77 20                	ja     c73d <_IO_stdin_used+0x73d>
    c71d:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    c720:	74 72                	je     c794 <_IO_stdin_used+0x794>
    c722:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c723:	6c                   	ins    BYTE PTR es:[rdi],dx
    c724:	20 29                	and    BYTE PTR [rcx],ch
    c726:	00 20                	add    BYTE PTR [rax],ah
    c728:	52                   	push   rdx
    c729:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x28207463
    c730:	20 28 
    c732:	00 20                	add    BYTE PTR [rax],ah
    c734:	52                   	push   rdx
    c735:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c73c:	20 66 
    c73e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c73f:	72 20                	jb     c761 <_IO_stdin_used+0x761>
    c741:	4e                   	rex.WRX
    c742:	65 74 77             	gs je  c7bc <_IO_stdin_used+0x7bc>
    c745:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c746:	72 6b                	jb     c7b3 <_IO_stdin_used+0x7b3>
    c748:	20 29                	and    BYTE PTR [rcx],ch
    c74a:	00 20                	add    BYTE PTR [rax],ah
    c74c:	52                   	push   rdx
    c74d:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c754:	20 66 
    c756:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c757:	72 20                	jb     c779 <_IO_stdin_used+0x779>
    c759:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c75b:	73 74                	jae    c7d1 <_IO_stdin_used+0x7d1>
    c75d:	20 29                	and    BYTE PTR [rcx],ch
    c75f:	00 20                	add    BYTE PTR [rax],ah
    c761:	52                   	push   rdx
    c762:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c769:	20 66 
    c76b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c76c:	72 20                	jb     c78e <_IO_stdin_used+0x78e>
    c76e:	54                   	push   rsp
    c76f:	4f 53                	rex.WRXB push r11
    c771:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    c774:	64 20 4e 65          	and    BYTE PTR fs:[rsi+0x65],cl
    c778:	74 77                	je     c7f1 <_IO_stdin_used+0x7f1>
    c77a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c77b:	72 6b                	jb     c7e8 <_IO_stdin_used+0x7e8>
    c77d:	20 29                	and    BYTE PTR [rcx],ch
    c77f:	00 20                	add    BYTE PTR [rax],ah
    c781:	52                   	push   rdx
    c782:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c789:	20 66 
    c78b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c78c:	72 20                	jb     c7ae <_IO_stdin_used+0x7ae>
    c78e:	54                   	push   rsp
    c78f:	4f 53                	rex.WRXB push r11
    c791:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    c794:	64 20 48 6f          	and    BYTE PTR fs:[rax+0x6f],cl
    c798:	73 74                	jae    c80e <_IO_stdin_used+0x80e>
    c79a:	20 29                	and    BYTE PTR [rcx],ch
    c79c:	00 20                	add    BYTE PTR [rax],ah
    c79e:	65 63 68 6f          	movsxd ebp,DWORD PTR gs:[rax+0x6f]
    c7a2:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    c7a5:	71 75                	jno    c81c <_IO_stdin_used+0x81c>
    c7a7:	65 73 74             	gs jae c81e <_IO_stdin_used+0x81e>
    c7aa:	00 00                	add    BYTE PTR [rax],al
    c7ac:	00 00                	add    BYTE PTR [rax],al
    c7ae:	00 00                	add    BYTE PTR [rax],al
    c7b0:	20 4d 6f             	and    BYTE PTR [rbp+0x6f],cl
    c7b3:	62                   	(bad)  
    c7b4:	69 6c 65 20 49 50 20 	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x41205049
    c7bb:	41 
    c7bc:	64 76 65             	fs jbe c824 <_IO_stdin_used+0x824>
    c7bf:	72 74                	jb     c835 <_IO_stdin_used+0x835>
    c7c1:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    c7c8:	20 28                	and    BYTE PTR [rax],ch
    c7ca:	4e 6f                	rex.WRX outs dx,DWORD PTR ds:[rsi]
    c7cc:	72 6d                	jb     c83b <_IO_stdin_used+0x83b>
    c7ce:	61                   	(bad)  
    c7cf:	6c                   	ins    BYTE PTR es:[rdi],dx
    c7d0:	20 52 6f             	and    BYTE PTR [rdx+0x6f],dl
    c7d3:	75 74                	jne    c849 <_IO_stdin_used+0x849>
    c7d5:	65 72 20             	gs jb  c7f8 <_IO_stdin_used+0x7f8>
    c7d8:	41                   	rex.B
    c7d9:	64 76 65             	fs jbe c841 <_IO_stdin_used+0x841>
    c7dc:	72 74                	jb     c852 <_IO_stdin_used+0x852>
    c7de:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    c7e5:	20 29                	and    BYTE PTR [rcx],ch
    c7e7:	20 29                	and    BYTE PTR [rcx],ch
    c7e9:	0a 20                	or     ah,BYTE PTR [rax]
    c7eb:	00 00                	add    BYTE PTR [rax],al
    c7ed:	00 00                	add    BYTE PTR [rax],al
    c7ef:	00 20                	add    BYTE PTR [rax],ah
    c7f1:	52                   	push   rdx
    c7f2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c7f3:	75 74                	jne    c869 <_IO_stdin_used+0x869>
    c7f5:	65 72 20             	gs jb  c818 <_IO_stdin_used+0x818>
    c7f8:	41                   	rex.B
    c7f9:	64 76 65             	fs jbe c861 <_IO_stdin_used+0x861>
    c7fc:	72 74                	jb     c872 <_IO_stdin_used+0x872>
    c7fe:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    c805:	20 28                	and    BYTE PTR [rax],ch
    c807:	55                   	push   rbp
    c808:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c809:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c80d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c80e:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c811:	64 65 3a 20          	fs cmp ah,BYTE PTR gs:[rax]
    c815:	25 64 20 29 20       	and    eax,0x20292064
    c81a:	29 0a                	sub    DWORD PTR [rdx],ecx
    c81c:	00 20                	add    BYTE PTR [rax],ah
    c81e:	52                   	push   rdx
    c81f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c820:	75 74                	jne    c896 <_IO_stdin_used+0x896>
    c822:	65 72 20             	gs jb  c845 <_IO_stdin_used+0x845>
    c825:	53                   	push   rbx
    c826:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c827:	6c                   	ins    BYTE PTR es:[rdi],dx
    c828:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    c82f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c830:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c831:	20 29                	and    BYTE PTR [rcx],ch
    c833:	00 20                	add    BYTE PTR [rax],ah
    c835:	54                   	push   rsp
    c836:	69 6d 65 20 54 6f 20 	imul   ebp,DWORD PTR [rbp+0x65],0x206f5420
    c83d:	4c 69 76 65 20 65 78 	imul   r14,QWORD PTR [rsi+0x65],0x63786520
    c844:	63 
    c845:	65 65 64 65 64 00 20 	gs gs fs gs add BYTE PTR fs:[rax],ah
    c84c:	28 20                	sub    BYTE PTR [rax],ah
    c84e:	74 74                	je     c8c4 <_IO_stdin_used+0x8c4>
    c850:	6c                   	ins    BYTE PTR es:[rdi],dx
    c851:	20 65 78             	and    BYTE PTR [rbp+0x78],ah
    c854:	63 65 65             	movsxd esp,DWORD PTR [rbp+0x65]
    c857:	64 65 64 20 69 6e    	fs gs and BYTE PTR fs:[rcx+0x6e],ch
    c85d:	20 74 72 61          	and    BYTE PTR [rdx+rsi*2+0x61],dh
    c861:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c862:	73 69                	jae    c8cd <_IO_stdin_used+0x8cd>
    c864:	74 20                	je     c886 <_IO_stdin_used+0x886>
    c866:	29 00                	sub    DWORD PTR [rax],eax
    c868:	20 28                	and    BYTE PTR [rax],ch
    c86a:	20 46 72             	and    BYTE PTR [rsi+0x72],al
    c86d:	61                   	(bad)  
    c86e:	67 6d                	ins    DWORD PTR es:[edi],dx
    c870:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c872:	74 20                	je     c894 <_IO_stdin_used+0x894>
    c874:	52                   	push   rdx
    c875:	65 61                	gs (bad) 
    c877:	73 73                	jae    c8ec <_IO_stdin_used+0x8ec>
    c879:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    c87b:	62                   	(bad)  
    c87c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c87d:	79 20                	jns    c89f <_IO_stdin_used+0x89f>
    c87f:	74 69                	je     c8ea <_IO_stdin_used+0x8ea>
    c881:	6d                   	ins    DWORD PTR es:[rdi],dx
    c882:	65 20 65 78          	and    BYTE PTR gs:[rbp+0x78],ah
    c886:	63 65 65             	movsxd esp,DWORD PTR [rbp+0x65]
    c889:	64 65 64 20 29       	fs gs and BYTE PTR fs:[rcx],ch
    c88e:	00 20                	add    BYTE PTR [rax],ah
    c890:	28 20                	sub    BYTE PTR [rax],ah
    c892:	55                   	push   rbp
    c893:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c894:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c898:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c899:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c89c:	64 65 3a 20          	fs cmp ah,BYTE PTR gs:[rax]
    c8a0:	25 64 29 0a 00       	and    eax,0xa2964
    c8a5:	20 74 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dh
    c8a9:	65 73 74             	gs jae c920 <_IO_stdin_used+0x920>
    c8ac:	61                   	(bad)  
    c8ad:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8ae:	70 20                	jo     c8d0 <_IO_stdin_used+0x8d0>
    c8b0:	72 65                	jb     c917 <_IO_stdin_used+0x917>
    c8b2:	71 75                	jno    c929 <_IO_stdin_used+0x929>
    c8b4:	65 73 74             	gs jae c92b <_IO_stdin_used+0x92b>
    c8b7:	00 20                	add    BYTE PTR [rax],ah
    c8b9:	74 69                	je     c924 <_IO_stdin_used+0x924>
    c8bb:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8bc:	65 73 74             	gs jae c933 <_IO_stdin_used+0x933>
    c8bf:	61                   	(bad)  
    c8c0:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8c1:	70 20                	jo     c8e3 <_IO_stdin_used+0x8e3>
    c8c3:	72 65                	jb     c92a <_IO_stdin_used+0x92a>
    c8c5:	70 6c                	jo     c933 <_IO_stdin_used+0x933>
    c8c7:	79 00                	jns    c8c9 <_IO_stdin_used+0x8c9>
    c8c9:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    c8cc:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c8d0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c8d1:	20 69 63             	and    BYTE PTR [rcx+0x63],ch
    c8d4:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8d5:	70 20                	jo     c8f7 <_IO_stdin_used+0x8f7>
    c8d7:	74 79                	je     c952 <_IO_stdin_used+0x952>
    c8d9:	70 65                	jo     c940 <_IO_stdin_used+0x940>
    c8db:	3d 25 64 00 00       	cmp    eax,0x6425
    c8e0:	5c                   	pop    rsp
    c8e1:	77 ff                	ja     c8e2 <_IO_stdin_used+0x8e2>
    c8e3:	ff                   	(bad)  
    c8e4:	7f 7a                	jg     c960 <_IO_stdin_used+0x960>
    c8e6:	ff                   	(bad)  
    c8e7:	ff                   	(bad)  
    c8e8:	7f 7a                	jg     c964 <_IO_stdin_used+0x964>
    c8ea:	ff                   	(bad)  
    c8eb:	ff 6d 77             	jmp    FWORD PTR [rbp+0x77]
    c8ee:	ff                   	(bad)  
    c8ef:	ff                   	(bad)  
    c8f0:	da 78 ff             	fidivr DWORD PTR [rax-0x1]
    c8f3:	ff                   	(bad)  
    c8f4:	eb 78                	jmp    c96e <_IO_stdin_used+0x96e>
    c8f6:	ff                   	(bad)  
    c8f7:	ff                   	(bad)  
    c8f8:	7f 7a                	jg     c974 <_IO_stdin_used+0x974>
    c8fa:	ff                   	(bad)  
    c8fb:	ff                   	(bad)  
    c8fc:	7f 7a                	jg     c978 <_IO_stdin_used+0x978>
    c8fe:	ff                   	(bad)  
    c8ff:	ff 88 79 ff ff 99    	dec    DWORD PTR [rax-0x66000087]
    c905:	79 ff                	jns    c906 <_IO_stdin_used+0x906>
    c907:	ff e4                	jmp    rsp
    c909:	79 ff                	jns    c90a <_IO_stdin_used+0x90a>
    c90b:	ff f5                	push   rbp
    c90d:	79 ff                	jns    c90e <_IO_stdin_used+0x90e>
    c90f:	ff                   	(bad)  
    c910:	7f 7a                	jg     c98c <_IO_stdin_used+0x98c>
    c912:	ff                   	(bad)  
    c913:	ff 63 7a             	jmp    QWORD PTR [rbx+0x7a]
    c916:	ff                   	(bad)  
    c917:	ff 71 7a             	push   QWORD PTR [rcx+0x7a]
    c91a:	ff                   	(bad)  
    c91b:	ff                   	(bad)  
    c91c:	7c 77                	jl     c995 <_IO_stdin_used+0x995>
    c91e:	ff                   	(bad)  
    c91f:	ff 8d 77 ff ff 9e    	dec    DWORD PTR [rbp-0x61000089]
    c925:	77 ff                	ja     c926 <_IO_stdin_used+0x926>
    c927:	ff af 77 ff ff c0    	jmp    FWORD PTR [rdi-0x3f000089]
    c92d:	77 ff                	ja     c92e <_IO_stdin_used+0x92e>
    c92f:	ff d1                	call   rcx
    c931:	77 ff                	ja     c932 <_IO_stdin_used+0x932>
    c933:	ff e2                	jmp    rdx
    c935:	77 ff                	ja     c936 <_IO_stdin_used+0x936>
    c937:	ff f3                	push   rbx
    c939:	77 ff                	ja     c93a <_IO_stdin_used+0x93a>
    c93b:	ff 04 78             	inc    DWORD PTR [rax+rdi*2]
    c93e:	ff                   	(bad)  
    c93f:	ff 15 78 ff ff 23    	call   QWORD PTR [rip+0x23ffff78]        # 2400c8bd <_end+0x23ed18b5>
    c945:	78 ff                	js     c946 <_IO_stdin_used+0x946>
    c947:	ff 31                	push   QWORD PTR [rcx]
    c949:	78 ff                	js     c94a <_IO_stdin_used+0x94a>
    c94b:	ff                   	(bad)  
    c94c:	3f                   	(bad)  
    c94d:	78 ff                	js     c94e <_IO_stdin_used+0x94e>
    c94f:	ff 4d 78             	dec    DWORD PTR [rbp+0x78]
    c952:	ff                   	(bad)  
    c953:	ff 5b 78             	call   FWORD PTR [rbx+0x78]
    c956:	ff                   	(bad)  
    c957:	ff 69 78             	jmp    FWORD PTR [rcx+0x78]
    c95a:	ff                   	(bad)  
    c95b:	ff 00                	inc    DWORD PTR [rax]
    c95d:	00 00                	add    BYTE PTR [rax],al
    c95f:	00 1b                	add    BYTE PTR [rbx],bl
    c961:	5b                   	pop    rbx
    c962:	33 32                	xor    esi,DWORD PTR [rdx]
    c964:	6d                   	ins    DWORD PTR es:[rdi],dx
    c965:	00 25 73 00 49 50    	add    BYTE PTR [rip+0x50490073],ah        # 5049c9de <_end+0x503619d6>
    c96b:	76 34                	jbe    c9a1 <_IO_stdin_used+0x9a1>
    c96d:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642603e6 <_end+0x641253de>
    c973:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325e9b7 <_end+0x731239af>
    c979:	3a 25 64 0a 00 09    	cmp    ah,BYTE PTR [rip+0x9000a64]        # 900d3e3 <_end+0x8ed23db>
    c97f:	54                   	push   rsp
    c980:	43 50                	rex.XB push r8
    c982:	20 5b 00             	and    BYTE PTR [rbx+0x0],bl
    c985:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c988:	33 6d 00             	xor    ebp,DWORD PTR [rbp+0x0]
    c98b:	25 73 20 41 43       	and    eax,0x43412073
    c990:	4b 20 00             	rex.WXB and BYTE PTR [r8],al
    c993:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c996:	37                   	(bad)  
    c997:	6d                   	ins    DWORD PTR es:[rdi],dx
    c998:	00 25 73 20 46 49    	add    BYTE PTR [rip+0x49462073],ah        # 4946ea11 <_end+0x49333a09>
    c99e:	4e 20 00             	rex.WRX and BYTE PTR [rax],r8b
    c9a1:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9a4:	34 6d                	xor    al,0x6d
    c9a6:	00 25 73 20 50 53    	add    BYTE PTR [rip+0x53502073],ah        # 5350ea1f <_end+0x533d3a17>
    c9ac:	48 20 00             	rex.W and BYTE PTR [rax],al
    c9af:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9b2:	31 6d 00             	xor    DWORD PTR [rbp+0x0],ebp
    c9b5:	25 73 20 52 53       	and    eax,0x53522073
    c9ba:	54                   	push   rsp
    c9bb:	20 00                	and    BYTE PTR [rax],al
    c9bd:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9c0:	35 6d 00 25 73       	xor    eax,0x7325006d
    c9c5:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    c9c8:	4e 20 00             	rex.WRX and BYTE PTR [rax],r8b
    c9cb:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9ce:	36 6d                	ss ins DWORD PTR es:[rdi],dx
    c9d0:	00 25 73 20 55 52    	add    BYTE PTR [rip+0x52552073],ah        # 5255ea49 <_end+0x52423a41>
    c9d6:	47 20 00             	rex.RXB and BYTE PTR [r8],r8b
    c9d9:	5d                   	pop    rbp
    c9da:	00 1b                	add    BYTE PTR [rbx],bl
    c9dc:	5b                   	pop    rbx
    c9dd:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    c9e0:	25 73 53 75 73       	and    eax,0x73755373
    c9e5:	70 69                	jo     ca50 <_IO_stdin_used+0xa50>
    c9e7:	63 69 6f             	movsxd ebp,DWORD PTR [rcx+0x6f]
    c9ea:	75 73                	jne    ca5f <_IO_stdin_used+0xa5f>
    c9ec:	20 54 43 50          	and    BYTE PTR [rbx+rax*2+0x50],dl
    c9f0:	20 50 61             	and    BYTE PTR [rax+0x61],dl
    c9f3:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    c9f6:	74 20                	je     ca18 <_IO_stdin_used+0xa18>
    c9f8:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c9fa:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    c9fd:	74 65                	je     ca64 <_IO_stdin_used+0xa64>
    c9ff:	72 65                	jb     ca66 <_IO_stdin_used+0xa66>
    ca01:	64 3a 20             	cmp    ah,BYTE PTR fs:[rax]
    ca04:	25 73 3a 25 64       	and    eax,0x64253a73
    ca09:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325ea4d <_end+0x73123a45>
    ca0f:	3a 25 64 2c 20 25    	cmp    ah,BYTE PTR [rip+0x25202c64]        # 2520f679 <_end+0x250d4671>
    ca15:	64 20 66 6c          	and    BYTE PTR fs:[rsi+0x6c],ah
    ca19:	61                   	(bad)  
    ca1a:	67 73 25             	addr32 jae ca42 <_IO_stdin_used+0xa42>
    ca1d:	73 0a                	jae    ca29 <_IO_stdin_used+0xa29>
    ca1f:	00 1b                	add    BYTE PTR [rbx],bl
    ca21:	5b                   	pop    rbx
    ca22:	39 36                	cmp    DWORD PTR [rsi],esi
    ca24:	6d                   	ins    DWORD PTR es:[rdi],dx
    ca25:	00 25 73 00 49 50    	add    BYTE PTR [rip+0x50490073],ah        # 5049ca9e <_end+0x50361a96>
    ca2b:	76 34                	jbe    ca61 <_IO_stdin_used+0xa61>
    ca2d:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642604a6 <_end+0x6412549e>
    ca33:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325ea77 <_end+0x73123a6f>
    ca39:	3a 25 64 20 55 44    	cmp    ah,BYTE PTR [rip+0x44552064]        # 4455eaa3 <_end+0x44423a9b>
    ca3f:	50                   	push   rax
    ca40:	0a 00                	or     al,BYTE PTR [rax]
    ca42:	1b 5b 30             	sbb    ebx,DWORD PTR [rbx+0x30]
    ca45:	6d                   	ins    DWORD PTR es:[rdi],dx
    ca46:	00 00                	add    BYTE PTR [rax],al
    ca48:	49 50                	rex.WB push r8
    ca4a:	76 34                	jbe    ca80 <_IO_stdin_used+0xa80>
    ca4c:	20 49 47             	and    BYTE PTR [rcx+0x47],cl
    ca4f:	4d 50                	rex.WRB push r8
    ca51:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2deaca <_end+0x3e1a3ac2>
    ca57:	20 25 73 20 5b 00    	and    BYTE PTR [rip+0x5b2073],ah        # 5bead0 <_end+0x483ac8>
    ca5d:	20 4d 65             	and    BYTE PTR [rbp+0x65],cl
    ca60:	6d                   	ins    DWORD PTR es:[rdi],dx
    ca61:	62                   	(bad)  
    ca62:	65 72 73             	gs jb  cad8 <_IO_stdin_used+0xad8>
    ca65:	68 69 70 20 51       	push   0x51207069
    ca6a:	75 65                	jne    cad1 <_IO_stdin_used+0xad1>
    ca6c:	72 79                	jb     cae7 <_IO_stdin_used+0xae7>
    ca6e:	20 5d 00             	and    BYTE PTR [rbp+0x0],bl
    ca71:	00 00                	add    BYTE PTR [rax],al
    ca73:	00 00                	add    BYTE PTR [rax],al
    ca75:	00 00                	add    BYTE PTR [rax],al
    ca77:	00 20                	add    BYTE PTR [rax],ah
    ca79:	4d                   	rex.WRB
    ca7a:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    ca7c:	62                   	(bad)  
    ca7d:	65 72 73             	gs jb  caf3 <_IO_stdin_used+0xaf3>
    ca80:	68 69 70 20 52       	push   0x52207069
    ca85:	65 70 6f             	gs jo  caf7 <_IO_stdin_used+0xaf7>
    ca88:	72 74                	jb     cafe <_IO_stdin_used+0xafe>
    ca8a:	20 2f                	and    BYTE PTR [rdi],ch
    ca8c:	20 4a 6f             	and    BYTE PTR [rdx+0x6f],cl
    ca8f:	69 6e 20 67 72 6f 75 	imul   ebp,DWORD PTR [rsi+0x20],0x756f7267
    ca96:	70 20                	jo     cab8 <_IO_stdin_used+0xab8>
    ca98:	25 73 20 66 6f       	and    eax,0x6f662073
    ca9d:	72 20                	jb     cabf <_IO_stdin_used+0xabf>
    ca9f:	61                   	(bad)  
    caa0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    caa1:	79 20                	jns    cac3 <_IO_stdin_used+0xac3>
    caa3:	73 6f                	jae    cb14 <_IO_stdin_used+0xb14>
    caa5:	75 72                	jne    cb19 <_IO_stdin_used+0xb19>
    caa7:	63 65 73             	movsxd esp,DWORD PTR [rbp+0x73]
    caaa:	20 5d 0a             	and    BYTE PTR [rbp+0xa],bl
    caad:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    cab0:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    cab4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cab5:	20 49 47             	and    BYTE PTR [rcx+0x47],cl
    cab8:	4d 50                	rex.WRB push r8
    caba:	20 54 79 70          	and    BYTE PTR [rcx+rdi*2+0x70],dl
    cabe:	65 3d 25 64 20 5d    	gs cmp eax,0x5d206425
    cac4:	0a 00                	or     al,BYTE PTR [rax]
    cac6:	25 64 2d 25 30       	and    eax,0x30252d64
    cacb:	32 64 2d 25          	xor    ah,BYTE PTR [rbp+rbp*1+0x25]
    cacf:	30 32                	xor    BYTE PTR [rdx],dh
    cad1:	64 20 25 30 32 64 3a 	and    BYTE PTR fs:[rip+0x3a643230],ah        # 3a64fd08 <_end+0x3a514d00>
    cad8:	25 30 32 64 3a       	and    eax,0x3a643230
    cadd:	25 30 32 64 00       	and    eax,0x643230
    cae2:	25 73 20 25 73       	and    eax,0x73252073
    cae7:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2deb60 <_end+0x3e1a3b58>
    caed:	20 25 73 0a 00 25    	and    BYTE PTR [rip+0x25000a73],ah        # 2500d566 <_end+0x24ed255e>
    caf3:	73 20                	jae    cb15 <_IO_stdin_used+0xb15>
    caf5:	25 73 20 25 73       	and    eax,0x73252073
    cafa:	3a 25 64 20 2d 3e    	cmp    ah,BYTE PTR [rip+0x3e2d2064]        # 3e2deb64 <_end+0x3e1a3b5c>
    cb00:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64260579 <_end+0x64125571>
    cb06:	0a 00                	or     al,BYTE PTR [rax]
    cb08:	25 73 00 61 00       	and    eax,0x610073
    cb0d:	25 30 32 78 00       	and    eax,0x783230
    cb12:	00 00                	add    BYTE PTR [rax],al
    cb14:	00 00                	add    BYTE PTR [rax],al
    cb16:	00 00                	add    BYTE PTR [rax],al
    cb18:	72 00                	jb     cb1a <_IO_stdin_used+0xb1a>
    cb1a:	00 00                	add    BYTE PTR [rax],al
    cb1c:	00 00                	add    BYTE PTR [rax],al
    cb1e:	00 00                	add    BYTE PTR [rax],al
    cb20:	45 72 72             	rex.RB jb cb95 <_IO_stdin_used+0xb95>
    cb23:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb24:	72 20                	jb     cb46 <_IO_stdin_used+0xb46>
    cb26:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb27:	70 65                	jo     cb8e <_IO_stdin_used+0xb8e>
    cb29:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cb2a:	69 6e 67 20 63 6f 6e 	imul   ebp,DWORD PTR [rsi+0x67],0x6e6f6320
    cb31:	66 69 67 75 72 61    	imul   sp,WORD PTR [rdi+0x75],0x6172
    cb37:	74 69                	je     cba2 <_IO_stdin_used+0xba2>
    cb39:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb3a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cb3b:	20 66 69             	and    BYTE PTR [rsi+0x69],ah
    cb3e:	6c                   	ins    BYTE PTR es:[rdi],dx
    cb3f:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    cb42:	25 73 0a 00 0a       	and    eax,0xa000a73
    cb47:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    cb4a:	72 69                	jb     cbb5 <_IO_stdin_used+0xbb5>
    cb4c:	63 74 5f 69          	movsxd esi,DWORD PTR [rdi+rbx*2+0x69]
    cb50:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
    cb53:	5f                   	pop    rdi
    cb54:	74 69                	je     cbbf <_IO_stdin_used+0xbbf>
    cb56:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb57:	65 73 74             	gs jae cbce <_IO_stdin_used+0xbce>
    cb5a:	61                   	(bad)  
    cb5b:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb5c:	70 5f                	jo     cbbd <_IO_stdin_used+0xbbd>
    cb5e:	72 65                	jb     cbc5 <_IO_stdin_used+0xbc5>
    cb60:	71 3d                	jno    cb9f <_IO_stdin_used+0xb9f>
    cb62:	00 59 45             	add    BYTE PTR [rcx+0x45],bl
    cb65:	53                   	push   rbx
    cb66:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    cb69:	72 69                	jb     cbd4 <_IO_stdin_used+0xbd4>
    cb6b:	63 74 5f 6e          	movsxd esi,DWORD PTR [rdi+rbx*2+0x6e]
    cb6f:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb70:	61                   	(bad)  
    cb71:	70 5f                	jo     cbd2 <_IO_stdin_used+0xbd2>
    cb73:	68 6f 73 74 5f       	push   0x5f74736f
    cb78:	61                   	(bad)  
    cb79:	6c                   	ins    BYTE PTR es:[rdi],dx
    cb7a:	69 76 65 5f 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x6568635f
    cb81:	63 6b 3d             	movsxd ebp,DWORD PTR [rbx+0x3d]
    cb84:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
    cb87:	65 61                	gs (bad) 
    cb89:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cb8a:	5f                   	pop    rdi
    cb8b:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    cb8e:	61                   	(bad)  
    cb8f:	79 5f                	jns    cbf0 <_IO_stdin_used+0xbf0>
    cb91:	69 6e 5f 70 61 63 6b 	imul   ebp,DWORD PTR [rsi+0x5f],0x6b636170
    cb98:	65 74 73             	gs je  cc0e <_IO_stdin_used+0xc0e>
    cb9b:	3d 00 43 6c 65       	cmp    eax,0x656c4300
    cba0:	61                   	(bad)  
    cba1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cba2:	20 64 65 6c          	and    BYTE PTR [rbp+riz*2+0x6c],ah
    cba6:	61                   	(bad)  
    cba7:	79 20                	jns    cbc9 <_IO_stdin_used+0xbc9>
    cba9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbaa:	65 65 64 73 20       	gs gs fs jae cbcf <_IO_stdin_used+0xbcf>
    cbaf:	61                   	(bad)  
    cbb0:	20 76 61             	and    BYTE PTR [rsi+0x61],dh
    cbb3:	6c                   	ins    BYTE PTR es:[rdi],dx
    cbb4:	75 65                	jne    cc1b <_IO_stdin_used+0xc1b>
    cbb6:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
    cbb9:	65 61                	gs (bad) 
    cbbb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbbc:	5f                   	pop    rdi
    cbbd:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    cbc0:	61                   	(bad)  
    cbc1:	79 5f                	jns    cc22 <_IO_stdin_used+0xc22>
    cbc3:	69 6e 5f 6d 73 65 63 	imul   ebp,DWORD PTR [rsi+0x5f],0x6365736d
    cbca:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cbcb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbcc:	64 73 3d             	fs jae cc0c <_IO_stdin_used+0xc0c>
    cbcf:	00 75 73             	add    BYTE PTR [rbp+0x73],dh
    cbd2:	65 5f                	gs pop rdi
    cbd4:	73 71                	jae    cc47 <_IO_stdin_used+0xc47>
    cbd6:	6c                   	ins    BYTE PTR es:[rdi],dx
    cbd7:	69 74 65 3d 00 73 71 	imul   esi,DWORD PTR [rbp+riz*2+0x3d],0x6c717300
    cbde:	6c 
    cbdf:	69 74 65 5f 64 61 74 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x61746164
    cbe6:	61 
    cbe7:	62 61                	(bad)  
    cbe9:	73 65                	jae    cc50 <_IO_stdin_used+0xc50>
    cbeb:	5f                   	pop    rdi
    cbec:	70 61                	jo     cc4f <_IO_stdin_used+0xc4f>
    cbee:	74 68                	je     cc58 <_IO_stdin_used+0xc58>
    cbf0:	3d 00 73 71 6c       	cmp    eax,0x6c717300
    cbf5:	69 74 65 5f 64 61 74 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x61746164
    cbfc:	61 
    cbfd:	62 61                	(bad)  
    cbff:	73 65                	jae    cc66 <_IO_stdin_used+0xc66>
    cc01:	5f                   	pop    rdi
    cc02:	70 61                	jo     cc65 <_IO_stdin_used+0xc65>
    cc04:	74 68                	je     cc6e <_IO_stdin_used+0xc6e>
    cc06:	3a 20                	cmp    ah,BYTE PTR [rax]
    cc08:	25 73 00 69 6e       	and    eax,0x6e690073
    cc0d:	5f                   	pop    rdi
    cc0e:	61                   	(bad)  
    cc0f:	64 61                	fs (bad) 
    cc11:	70 74                	jo     cc87 <_IO_stdin_used+0xc87>
    cc13:	65 72 3d             	gs jb  cc53 <_IO_stdin_used+0xc53>
    cc16:	00 00                	add    BYTE PTR [rax],al
    cc18:	72 75                	jb     cc8f <_IO_stdin_used+0xc8f>
    cc1a:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc1b:	65 5f                	gs pop rdi
    cc1d:	70 61                	jo     cc80 <_IO_stdin_used+0xc80>
    cc1f:	72 73                	jb     cc94 <_IO_stdin_used+0xc94>
    cc21:	65 72 2e             	gs jb  cc52 <_IO_stdin_used+0xc52>
    cc24:	63 3a                	movsxd edi,DWORD PTR [rdx]
    cc26:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    cc29:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc2a:	65 5f                	gs pop rdi
    cc2c:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc2d:	69 62 72 61 72 79 5f 	imul   esp,DWORD PTR [rdx+0x72],0x5f797261
    cc34:	70 61                	jo     cc97 <_IO_stdin_used+0xc97>
    cc36:	72 73                	jb     ccab <_IO_stdin_used+0xcab>
    cc38:	65 72 3a             	gs jb  cc75 <_IO_stdin_used+0xc75>
    cc3b:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    cc3e:	5f                   	pop    rdi
    cc3f:	61                   	(bad)  
    cc40:	64 61                	fs (bad) 
    cc42:	70 74                	jo     ccb8 <_IO_stdin_used+0xcb8>
    cc44:	65 72 3a             	gs jb  cc81 <_IO_stdin_used+0xc81>
    cc47:	20 25 73 00 6f 75    	and    BYTE PTR [rip+0x756f0073],ah        # 756fccc0 <_end+0x755c1cb8>
    cc4d:	74 5f                	je     ccae <_IO_stdin_used+0xcae>
    cc4f:	61                   	(bad)  
    cc50:	64 61                	fs (bad) 
    cc52:	70 74                	jo     ccc8 <_IO_stdin_used+0xcc8>
    cc54:	65 72 3d             	gs jb  cc94 <_IO_stdin_used+0xc94>
    cc57:	00 72 75             	add    BYTE PTR [rdx+0x75],dh
    cc5a:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc5b:	65 5f                	gs pop rdi
    cc5d:	70 61                	jo     ccc0 <_IO_stdin_used+0xcc0>
    cc5f:	72 73                	jb     ccd4 <_IO_stdin_used+0xcd4>
    cc61:	65 72 2e             	gs jb  cc92 <_IO_stdin_used+0xc92>
    cc64:	63 3a                	movsxd edi,DWORD PTR [rdx]
    cc66:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    cc69:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc6a:	65 5f                	gs pop rdi
    cc6c:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc6d:	69 62 72 61 72 79 5f 	imul   esp,DWORD PTR [rdx+0x72],0x5f797261
    cc74:	70 61                	jo     ccd7 <_IO_stdin_used+0xcd7>
    cc76:	72 73                	jb     cceb <_IO_stdin_used+0xceb>
    cc78:	65 72 3a             	gs jb  ccb5 <_IO_stdin_used+0xcb5>
    cc7b:	20 6f 75             	and    BYTE PTR [rdi+0x75],ch
    cc7e:	74 5f                	je     ccdf <_IO_stdin_used+0xcdf>
    cc80:	61                   	(bad)  
    cc81:	64 61                	fs (bad) 
    cc83:	70 74                	jo     ccf9 <_IO_stdin_used+0xcf9>
    cc85:	65 72 3a             	gs jb  ccc2 <_IO_stdin_used+0xcc2>
    cc88:	20 25 73 00 6d 6f    	and    BYTE PTR [rip+0x6f6d0073],ah        # 6f6dcd01 <_end+0x6f5a1cf9>
    cc8e:	64 65 3d 00 6d 6f 64 	fs gs cmp eax,0x646f6d00
    cc95:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    cc98:	25 73 00 52 75       	and    eax,0x75520073
    cc9d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cc9e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cc9f:	69 6e 67 20 69 6e 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206e6920
    cca6:	00 32                	add    BYTE PTR [rdx],dh
    cca8:	00 49 50             	add    BYTE PTR [rcx+0x50],cl
    ccab:	53                   	push   rbx
    ccac:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    ccaf:	64 65 20 61 73       	fs and BYTE PTR gs:[rcx+0x73],ah
    ccb4:	20 70 65             	and    BYTE PTR [rax+0x65],dh
    ccb7:	72 20                	jb     ccd9 <_IO_stdin_used+0xcd9>
    ccb9:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    ccbc:	66 69 67 00 49 44    	imul   sp,WORD PTR [rdi+0x0],0x4449
    ccc2:	53                   	push   rbx
    ccc3:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    ccc6:	64 65 20 61 73       	fs and BYTE PTR gs:[rcx+0x73],ah
    cccb:	20 70 65             	and    BYTE PTR [rax+0x65],dh
    ccce:	72 20                	jb     ccf0 <_IO_stdin_used+0xcf0>
    ccd0:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    ccd3:	66 69 67 00 6c 6f    	imul   sp,WORD PTR [rdi+0x0],0x6f6c
    ccd9:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
    ccdc:	69 70 3d 00 6c 6f 63 	imul   esi,DWORD PTR [rax+0x3d],0x636f6c00
    cce3:	61                   	(bad)  
    cce4:	6c                   	ins    BYTE PTR es:[rdi],dx
    cce5:	5f                   	pop    rdi
    cce6:	69 70 20 61 73 20 70 	imul   esi,DWORD PTR [rax+0x20],0x70207361
    cced:	65 72 20             	gs jb  cd10 <_IO_stdin_used+0xd10>
    ccf0:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    ccf3:	66 69 67 3a 20 25    	imul   sp,WORD PTR [rdi+0x3a],0x2520
    ccf9:	73 00                	jae    ccfb <_IO_stdin_used+0xcfb>
    ccfb:	64 65 66 67 77 3d    	fs gs data16 addr32 ja cd3e <_IO_stdin_used+0xd3e>
    cd01:	00 75 73             	add    BYTE PTR [rbp+0x73],dh
    cd04:	65 5f                	gs pop rdi
    cd06:	73 70                	jae    cd78 <_IO_stdin_used+0xd78>
    cd08:	69 3d 00 56 49 47 49 	imul   edi,DWORD PTR [rip+0x47495600],0x53204c49        # 474a2312 <_end+0x4736730a>
    cd0f:	4c 20 53 
    cd12:	50                   	push   rax
    cd13:	49 20 73 65          	rex.WB and BYTE PTR [r11+0x65],sil
    cd17:	72 76                	jb     cd8f <_IO_stdin_used+0xd8f>
    cd19:	69 63 65 20 61 63 74 	imul   esp,DWORD PTR [rbx+0x65],0x74636120
    cd20:	69 76 65 00 48 4f 4d 	imul   esi,DWORD PTR [rsi+0x65],0x4d4f4800
    cd27:	45 5f                	rex.RB pop r15
    cd29:	4e                   	rex.WRX
    cd2a:	45 54                	rex.RB push r12
    cd2c:	3d 00 48 4f 4d       	cmp    eax,0x4d4f4800
    cd31:	45 5f                	rex.RB pop r15
    cd33:	4e                   	rex.WRX
    cd34:	45 54                	rex.RB push r12
    cd36:	5f                   	pop    rdi
    cd37:	4d                   	rex.WRB
    cd38:	41 53                	push   r11
    cd3a:	4b 3d 00 6c 6f 63    	rex.WXB cmp rax,0x636f6c00
    cd40:	61                   	(bad)  
    cd41:	74 69                	je     cdac <_IO_stdin_used+0xdac>
    cd43:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd44:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd45:	3d 00 65 78 74       	cmp    eax,0x74786500
    cd4a:	65 72 6e             	gs jb  cdbb <_IO_stdin_used+0xdbb>
    cd4d:	61                   	(bad)  
    cd4e:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd4f:	00 53 79             	add    BYTE PTR [rbx+0x79],dl
    cd52:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd53:	74 61                	je     cdb6 <_IO_stdin_used+0xdb6>
    cd55:	78 20                	js     cd77 <_IO_stdin_used+0xd77>
    cd57:	65 72 72             	gs jb  cdcc <_IO_stdin_used+0xdcc>
    cd5a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd5b:	72 20                	jb     cd7d <_IO_stdin_used+0xd7d>
    cd5d:	61                   	(bad)  
    cd5e:	74 20                	je     cd80 <_IO_stdin_used+0xd80>
    cd60:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd61:	69 6e 65 20 25 64 3a 	imul   ebp,DWORD PTR [rsi+0x65],0x3a642520
    cd68:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # d7e1 <_IO_stdin_used+0x17e1>
    cd6e:	00 00                	add    BYTE PTR [rax],al
    cd70:	45 72 72             	rex.RB jb cde5 <_IO_stdin_used+0xde5>
    cd73:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd74:	72 20                	jb     cd96 <_IO_stdin_used+0xd96>
    cd76:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd77:	70 65                	jo     cdde <_IO_stdin_used+0xdde>
    cd79:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd7a:	69 6e 67 20 72 75 6c 	imul   ebp,DWORD PTR [rsi+0x67],0x6c757220
    cd81:	65 20 66 69          	and    BYTE PTR gs:[rsi+0x69],ah
    cd85:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd86:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    cd89:	25 73 2e 20 52       	and    eax,0x52202e73
    cd8e:	65 66 75 73          	gs data16 jne ce05 <_IO_stdin_used+0xe05>
    cd92:	69 6e 67 20 74 6f 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
    cd99:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    cd9c:	74 69                	je     ce07 <_IO_stdin_used+0xe07>
    cd9e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd9f:	75 65                	jne    ce06 <_IO_stdin_used+0xe06>
    cda1:	0a 00                	or     al,BYTE PTR [rax]
    cda3:	50                   	push   rax
    cda4:	61                   	(bad)  
    cda5:	72 73                	jb     ce1a <_IO_stdin_used+0xe1a>
    cda7:	69 6e 67 20 66 69 6c 	imul   ebp,DWORD PTR [rsi+0x67],0x6c696620
    cdae:	65 20 25 73 0a 00 61 	and    BYTE PTR gs:[rip+0x61000a73],ah        # 6100d828 <_end+0x60ed2820>
    cdb5:	6c                   	ins    BYTE PTR es:[rdi],dx
    cdb6:	65 72 74             	gs jb  ce2d <_IO_stdin_used+0xe2d>
    cdb9:	00 46 69             	add    BYTE PTR [rsi+0x69],al
    cdbc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cdbd:	69 73 68 65 64 20 70 	imul   esi,DWORD PTR [rbx+0x68],0x70206465
    cdc4:	61                   	(bad)  
    cdc5:	72 73                	jb     ce3a <_IO_stdin_used+0xe3a>
    cdc7:	69 6e 67 20 25 73 0a 	imul   ebp,DWORD PTR [rsi+0x67],0xa732520
    cdce:	00 00                	add    BYTE PTR [rax],al
    cdd0:	45 72 72             	rex.RB jb ce45 <_IO_stdin_used+0xe45>
    cdd3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cdd4:	72 20                	jb     cdf6 <_IO_stdin_used+0xdf6>
    cdd6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cdd7:	70 65                	jo     ce3e <_IO_stdin_used+0xe3e>
    cdd9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cdda:	69 6e 67 20 25 73 20 	imul   ebp,DWORD PTR [rsi+0x67],0x20732520
    cde1:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    cde3:	72 20                	jb     ce05 <_IO_stdin_used+0xe05>
    cde5:	65 78 70             	gs js  ce58 <_IO_stdin_used+0xe58>
    cde8:	6c                   	ins    BYTE PTR es:[rdi],dx
    cde9:	2f                   	(bad)  
    cdea:	69 6d 70 6c 69 63 69 	imul   ebp,DWORD PTR [rbp+0x70],0x6963696c
    cdf1:	74 20                	je     ce13 <_IO_stdin_used+0xe13>
    cdf3:	64 65 6e             	fs outs dx,BYTE PTR gs:[rsi]
    cdf6:	79 20                	jns    ce18 <_IO_stdin_used+0xe18>
    cdf8:	70 61                	jo     ce5b <_IO_stdin_used+0xe5b>
    cdfa:	72 73                	jb     ce6f <_IO_stdin_used+0xe6f>
    cdfc:	69 6e 67 0a 00 69 70 	imul   ebp,DWORD PTR [rsi+0x67],0x7069000a
    ce03:	76 34                	jbe    ce39 <_IO_stdin_used+0xe39>
    ce05:	00 46 61             	add    BYTE PTR [rsi+0x61],al
    ce08:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    ce0f:	20 
    ce10:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ce11:	70 65                	jo     ce78 <_IO_stdin_used+0xe78>
    ce13:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ce14:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # d88d <_IO_stdin_used+0x188d>
    ce1a:	00 00                	add    BYTE PTR [rax],al
    ce1c:	00 00                	add    BYTE PTR [rax],al
    ce1e:	00 00                	add    BYTE PTR [rax],al
    ce20:	52                   	push   rdx
    ce21:	55                   	push   rbp
    ce22:	4e                   	rex.WRX
    ce23:	4e                   	rex.WRX
    ce24:	49                   	rex.WB
    ce25:	4e                   	rex.WRX
    ce26:	47 20 49 4e          	rex.RXB and BYTE PTR [r9+0x4e],r9b
    ce2a:	20 44 45 4d          	and    BYTE PTR [rbp+rax*2+0x4d],al
    ce2e:	4f                   	rex.WRXB
    ce2f:	4e 53                	rex.WRX push rbx
    ce31:	54                   	push   rsp
    ce32:	52                   	push   rdx
    ce33:	41 54                	push   r12
    ce35:	49                   	rex.WB
    ce36:	4f                   	rex.WRXB
    ce37:	4e 20 4d 4f          	rex.WRX and BYTE PTR [rbp+0x4f],r9b
    ce3b:	44                   	rex.R
    ce3c:	45                   	rex.RB
    ce3d:	2e 20 59 4f          	cs and BYTE PTR [rcx+0x4f],bl
    ce41:	55                   	push   rbp
    ce42:	20 48 41             	and    BYTE PTR [rax+0x41],cl
    ce45:	56                   	push   rsi
    ce46:	45 20 31             	and    BYTE PTR [r9],r14b
    ce49:	30 20                	xor    BYTE PTR [rax],ah
    ce4b:	53                   	push   rbx
    ce4c:	45                   	rex.RB
    ce4d:	43                   	rex.XB
    ce4e:	4f                   	rex.WRXB
    ce4f:	4e                   	rex.WRX
    ce50:	44 53                	rex.R push rbx
    ce52:	20 54 4f 20          	and    BYTE PTR [rdi+rcx*2+0x20],dl
    ce56:	41                   	rex.B
    ce57:	42                   	rex.X
    ce58:	4f 52                	rex.WRXB push r10
    ce5a:	54                   	push   rsp
    ce5b:	2e 00 00             	cs add BYTE PTR [rax],al
    ce5e:	00 00                	add    BYTE PTR [rax],al
    ce60:	52                   	push   rdx
    ce61:	55                   	push   rbp
    ce62:	4e                   	rex.WRX
    ce63:	4e                   	rex.WRX
    ce64:	49                   	rex.WB
    ce65:	4e                   	rex.WRX
    ce66:	47 20 49 4e          	rex.RXB and BYTE PTR [r9+0x4e],r9b
    ce6a:	20 54 45 53          	and    BYTE PTR [rbp+rax*2+0x53],dl
    ce6e:	54                   	push   rsp
    ce6f:	20 4d 4f             	and    BYTE PTR [rbp+0x4f],cl
    ce72:	44                   	rex.R
    ce73:	45                   	rex.RB
    ce74:	2e 20 59 4f          	cs and BYTE PTR [rcx+0x4f],bl
    ce78:	55                   	push   rbp
    ce79:	20 48 41             	and    BYTE PTR [rax+0x41],cl
    ce7c:	56                   	push   rsi
    ce7d:	45 20 31             	and    BYTE PTR [r9],r14b
    ce80:	30 20                	xor    BYTE PTR [rax],ah
    ce82:	53                   	push   rbx
    ce83:	45                   	rex.RB
    ce84:	43                   	rex.XB
    ce85:	4f                   	rex.WRXB
    ce86:	4e                   	rex.WRX
    ce87:	44 53                	rex.R push rbx
    ce89:	20 54 4f 20          	and    BYTE PTR [rdi+rcx*2+0x20],dl
    ce8d:	41                   	rex.B
    ce8e:	42                   	rex.X
    ce8f:	4f 52                	rex.WRXB push r10
    ce91:	54                   	push   rsp
    ce92:	2e 00 55 6e          	cs add BYTE PTR [rbp+0x6e],dl
    ce96:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    ce9a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ce9b:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    ce9e:	67 75 6d             	addr32 jne cf0e <_IO_stdin_used+0xf0e>
    cea1:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    cea3:	74 20                	je     cec5 <_IO_stdin_used+0xec5>
    cea5:	2d 25 63 0a 00       	sub    eax,0xa6325
    ceaa:	70 64                	jo     cf10 <_IO_stdin_used+0xf10>
    ceac:	71 68                	jno    cf16 <_IO_stdin_used+0xf16>
    ceae:	74 65                	je     cf15 <_IO_stdin_used+0xf15>
    ceb0:	69 3a 00 2f 65 74    	imul   edi,DWORD PTR [rdx],0x74652f00
    ceb6:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    ceb8:	76 69                	jbe    cf23 <_IO_stdin_used+0xf23>
    ceba:	67 69 6c 2f 64 65 6e 	imul   ebp,DWORD PTR [edi+ebp*1+0x64],0x2e796e65
    cec1:	79 2e 
    cec3:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    cec6:	66 00 46 69          	data16 add BYTE PTR [rsi+0x69],al
    ceca:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cecb:	73 69                	jae    cf36 <_IO_stdin_used+0xf36>
    cecd:	73 68                	jae    cf37 <_IO_stdin_used+0xf37>
    cecf:	65 64 20 6c 6f 61    	gs and BYTE PTR fs:[rdi+rbp*2+0x61],ch
    ced5:	64 69 6e 67 20 65 78 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x70786520
    cedc:	70 
    cedd:	6c                   	ins    BYTE PTR es:[rdi],dx
    cede:	69 63 69 74 20 64 65 	imul   esp,DWORD PTR [rbx+0x69],0x65642074
    cee5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cee6:	79 20                	jns    cf08 <_IO_stdin_used+0xf08>
    cee8:	66 69 6c 65 28 2f 65 	imul   bp,WORD PTR [rbp+riz*2+0x28],0x652f
    ceef:	74 63                	je     cf54 <_IO_stdin_used+0xf54>
    cef1:	2f                   	(bad)  
    cef2:	76 69                	jbe    cf5d <_IO_stdin_used+0xf5d>
    cef4:	67 69 6c 2f 64 65 6e 	imul   ebp,DWORD PTR [edi+ebp*1+0x64],0x2e796e65
    cefb:	79 2e 
    cefd:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    cf00:	66 29 00             	sub    WORD PTR [rax],ax
    cf03:	00 00                	add    BYTE PTR [rax],al
    cf05:	00 00                	add    BYTE PTR [rax],al
    cf07:	00 46 69             	add    BYTE PTR [rsi+0x69],al
    cf0a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cf0b:	69 73 68 65 64 20 6c 	imul   esi,DWORD PTR [rbx+0x68],0x6c206465
    cf12:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cf13:	61                   	(bad)  
    cf14:	64 69 6e 67 20 43 53 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x56534320
    cf1b:	56 
    cf1c:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    cf1f:	70 20                	jo     cf41 <_IO_stdin_used+0xf41>
    cf21:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    cf24:	68 65 00 00 46       	push   0x46000065
    cf29:	61                   	(bad)  
    cf2a:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    cf31:	20 
    cf32:	6c                   	ins    BYTE PTR es:[rdi],dx
    cf33:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cf34:	61                   	(bad)  
    cf35:	64 20 43 53          	and    BYTE PTR fs:[rbx+0x53],al
    cf39:	56                   	push   rsi
    cf3a:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    cf3d:	70 20                	jo     cf5f <_IO_stdin_used+0xf5f>
    cf3f:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    cf42:	68 65 28 6e 6f       	push   0x6f6e2865
    cf47:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cf48:	20 63 72             	and    BYTE PTR [rbx+0x72],ah
    cf4b:	69 74 69 63 61 6c 20 	imul   esi,DWORD PTR [rcx+rbp*2+0x63],0x65206c61
    cf52:	65 
    cf53:	72 72                	jb     cfc7 <_IO_stdin_used+0xfc7>
    cf55:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cf56:	72 29                	jb     cf81 <_IO_stdin_used+0xf81>
    cf58:	00 2f                	add    BYTE PTR [rdi],ch
    cf5a:	65 74 63             	gs je  cfc0 <_IO_stdin_used+0xfc0>
    cf5d:	2f                   	(bad)  
    cf5e:	76 69                	jbe    cfc9 <_IO_stdin_used+0xfc9>
    cf60:	67 69 6c 2f 76 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x76],0x6c696769
    cf67:	69 6c 
    cf69:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    cf6d:	66 00 50 61          	data16 add BYTE PTR [rax+0x61],dl
    cf71:	72 73                	jb     cfe6 <_IO_stdin_used+0xfe6>
    cf73:	65 64 20 72 75       	gs and BYTE PTR fs:[rdx+0x75],dh
    cf78:	6c                   	ins    BYTE PTR es:[rdi],dx
    cf79:	65 20 66 69          	and    BYTE PTR gs:[rsi+0x69],ah
    cf7d:	6c                   	ins    BYTE PTR es:[rdi],dx
    cf7e:	65 73 00             	gs jae cf81 <_IO_stdin_used+0xf81>
    cf81:	00 00                	add    BYTE PTR [rax],al
    cf83:	00 00                	add    BYTE PTR [rax],al
    cf85:	00 00                	add    BYTE PTR [rax],al
    cf87:	00 56 49             	add    BYTE PTR [rsi+0x49],dl
    cf8a:	47                   	rex.RXB
    cf8b:	49                   	rex.WB
    cf8c:	4c 20 6c 69 73       	rex.WR and BYTE PTR [rcx+rbp*2+0x73],r13b
    cf91:	74 65                	je     cff8 <_IO_stdin_used+0xff8>
    cf93:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cf94:	69 6e 67 20 6f 6e 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206e6f20
    cf9b:	69 6e 74 65 72 66 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61667265
    cfa2:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    cfa5:	25 73 0a 00 70       	and    eax,0x70000a73
    cfaa:	63 61 70             	movsxd esp,DWORD PTR [rcx+0x70]
    cfad:	5f                   	pop    rdi
    cfae:	6d                   	ins    DWORD PTR es:[rdi],dx
    cfaf:	67 72 20             	addr32 jb cfd2 <_IO_stdin_used+0xfd2>
    cfb2:	69 6e 20 70 63 61 70 	imul   ebp,DWORD PTR [rsi+0x20],0x70616370
    cfb9:	5f                   	pop    rdi
    cfba:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cfbb:	70 65                	jo     d022 <_IO_stdin_used+0x1022>
    cfbd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cfbe:	5f                   	pop    rdi
    cfbf:	6c                   	ins    BYTE PTR es:[rdi],dx
    cfc0:	69 76 65 00 00 00 00 	imul   esi,DWORD PTR [rsi+0x65],0x0
    cfc7:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    cfca:	65 63 72 79          	movsxd esi,DWORD PTR gs:[rdx+0x79]
    cfce:	70 74                	jo     d044 <_IO_stdin_used+0x1044>
    cfd0:	65 64 20 4e 53       	gs and BYTE PTR fs:[rsi+0x53],cl
    cfd5:	48 20 63 6f          	rex.W and BYTE PTR [rbx+0x6f],spl
    cfd9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cfda:	66 69 67 20 73 65    	imul   sp,WORD PTR [rdi+0x20],0x6573
    cfe0:	72 76                	jb     d058 <_IO_stdin_used+0x1058>
    cfe2:	65 72 20             	gs jb  d005 <_IO_stdin_used+0x1005>
    cfe5:	73 74                	jae    d05b <_IO_stdin_used+0x105b>
    cfe7:	61                   	(bad)  
    cfe8:	72 74                	jb     d05e <_IO_stdin_used+0x105e>
    cfea:	65 64 3a 20          	gs cmp ah,BYTE PTR fs:[rax]
    cfee:	31 32                	xor    DWORD PTR [rdx],esi
    cff0:	37                   	(bad)  
    cff1:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
    cff4:	30 2e                	xor    BYTE PTR [rsi],ch
    cff6:	31 3a                	xor    DWORD PTR [rdx],edi
    cff8:	36 34 31             	ss xor al,0x31
    cffb:	00 19                	add    BYTE PTR [rcx],bl
    cffd:	99                   	cdq    
    cffe:	ff                   	(bad)  
    cfff:	ff 56 99             	call   QWORD PTR [rsi-0x67]
    d002:	ff                   	(bad)  
    d003:	ff 94 99 ff ff 94 99 	call   QWORD PTR [rcx+rbx*4-0x666b0001]
    d00a:	ff                   	(bad)  
    d00b:	ff 25 99 ff ff 34    	jmp    QWORD PTR [rip+0x34ffff99]        # 3500cfaa <_end+0x34ed1fa2>
    d011:	99                   	cdq    
    d012:	ff                   	(bad)  
    d013:	ff 94 99 ff ff 94 99 	call   QWORD PTR [rcx+rbx*4-0x666b0001]
    d01a:	ff                   	(bad)  
    d01b:	ff 94 99 ff ff 94 99 	call   QWORD PTR [rcx+rbx*4-0x666b0001]
    d022:	ff                   	(bad)  
    d023:	ff 94 99 ff ff 94 99 	call   QWORD PTR [rcx+rbx*4-0x666b0001]
    d02a:	ff                   	(bad)  
    d02b:	ff 44 99 ff          	inc    DWORD PTR [rcx+rbx*4-0x1]
    d02f:	ff 4d 99             	dec    DWORD PTR [rbp-0x67]
    d032:	ff                   	(bad)  
    d033:	ff 94 99 ff ff 94 99 	call   QWORD PTR [rcx+rbx*4-0x666b0001]
    d03a:	ff                   	(bad)  
    d03b:	ff 75 99             	push   QWORD PTR [rbp-0x67]
    d03e:	ff                   	(bad)  
    d03f:	ff 0a                	dec    DWORD PTR [rdx]
    d041:	43 61                	rex.XB (bad) 
    d043:	75 67                	jne    d0ac <_IO_stdin_used+0x10ac>
    d045:	68 74 20 73 69       	push   0x69732074
    d04a:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    d04c:	61                   	(bad)  
    d04d:	6c                   	ins    BYTE PTR es:[rdi],dx
    d04e:	20 25 64 20 61 74    	and    BYTE PTR [rip+0x74612064],ah        # 7461f0b8 <_end+0x744e40b0>
    d054:	20 25 73 2c 20 65    	and    BYTE PTR [rip+0x65202c73],ah        # 6520fccd <_end+0x650d4cc5>
    d05a:	78 69                	js     d0c5 <_IO_stdin_used+0x10c5>
    d05c:	74 69                	je     d0c7 <_IO_stdin_used+0x10c7>
    d05e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d05f:	67 2e 2e 2e 0a 00    	cs cs cs or al,BYTE PTR [eax]
    d065:	00 54 6f 74          	add    BYTE PTR [rdi+rbp*2+0x74],dl
    d069:	61                   	(bad)  
    d06a:	6c                   	ins    BYTE PTR es:[rdi],dx
    d06b:	20 50 61             	and    BYTE PTR [rax+0x61],dl
    d06e:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d071:	74 73                	je     d0e6 <_IO_stdin_used+0x10e6>
    d073:	20 43 61             	and    BYTE PTR [rbx+0x61],al
    d076:	75 67                	jne    d0df <_IO_stdin_used+0x10df>
    d078:	68 74 3a 20 25       	push   0x25203a74
    d07d:	64 0a 00             	or     al,BYTE PTR fs:[rax]
    d080:	53                   	push   rbx
    d081:	74 61                	je     d0e4 <_IO_stdin_used+0x10e4>
    d083:	74 69                	je     d0ee <_IO_stdin_used+0x10ee>
    d085:	73 74                	jae    d0fb <_IO_stdin_used+0x10fb>
    d087:	69 63 73 0a 49 70 20 	imul   esp,DWORD PTR [rbx+0x73],0x2070490a
    d08e:	61                   	(bad)  
    d08f:	64 64 72 65          	fs fs jb d0f8 <_IO_stdin_used+0x10f8>
    d093:	73 73                	jae    d108 <_IO_stdin_used+0x1108>
    d095:	20 20                	and    BYTE PTR [rax],ah
    d097:	20 20                	and    BYTE PTR [rax],ah
    d099:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    d09b:	75 6e                	jne    d10b <_IO_stdin_used+0x110b>
    d09d:	74 0a                	je     d0a9 <_IO_stdin_used+0x10a9>
    d09f:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    d0a4:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    d0a9:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    d0ae:	2d 2d 00 00 00       	sub    eax,0x2d
    d0b3:	00 00                	add    BYTE PTR [rax],al
    d0b5:	00 00                	add    BYTE PTR [rax],al
    d0b7:	00 25 73 0a 09 09    	add    BYTE PTR [rip+0x9090a73],ah        # 909db30 <_end+0x8f62b28>
    d0bd:	74 6f                	je     d12e <_IO_stdin_used+0x112e>
    d0bf:	74 61                	je     d122 <_IO_stdin_used+0x1122>
    d0c1:	6c                   	ins    BYTE PTR es:[rdi],dx
    d0c2:	20 70 61             	and    BYTE PTR [rax+0x61],dh
    d0c5:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d0c8:	74 73                	je     d13d <_IO_stdin_used+0x113d>
    d0ca:	20 3d 20 25 64 0a    	and    BYTE PTR [rip+0xa642520],bh        # a64f5f0 <_end+0xa5145e8>
    d0d0:	09 09                	or     DWORD PTR [rcx],ecx
    d0d2:	74 6f                	je     d143 <_IO_stdin_used+0x1143>
    d0d4:	74 61                	je     d137 <_IO_stdin_used+0x1137>
    d0d6:	6c                   	ins    BYTE PTR es:[rdi],dx
    d0d7:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d0da:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d0db:	74 20                	je     d0fd <_IO_stdin_used+0x10fd>
    d0dd:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0e2:	09 09                	or     DWORD PTR [rcx],ecx
    d0e4:	74 6f                	je     d155 <_IO_stdin_used+0x1155>
    d0e6:	74 61                	je     d149 <_IO_stdin_used+0x1149>
    d0e8:	6c                   	ins    BYTE PTR es:[rdi],dx
    d0e9:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d0ec:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d0ef:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0f4:	09 09                	or     DWORD PTR [rcx],ecx
    d0f6:	54                   	push   rsp
    d0f7:	43 50                	rex.XB push r8
    d0f9:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d0fc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d0fd:	74 20                	je     d11f <_IO_stdin_used+0x111f>
    d0ff:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d104:	09 09                	or     DWORD PTR [rcx],ecx
    d106:	54                   	push   rsp
    d107:	43 50                	rex.XB push r8
    d109:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d10c:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d10f:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d114:	09 09                	or     DWORD PTR [rcx],ecx
    d116:	55                   	push   rbp
    d117:	44 50                	rex.R push rax
    d119:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d11c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d11d:	74 20                	je     d13f <_IO_stdin_used+0x113f>
    d11f:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d124:	09 09                	or     DWORD PTR [rcx],ecx
    d126:	55                   	push   rbp
    d127:	44 50                	rex.R push rax
    d129:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d12c:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d12f:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d134:	09 09                	or     DWORD PTR [rcx],ecx
    d136:	49                   	rex.WB
    d137:	43                   	rex.XB
    d138:	4d 50                	rex.WRB push r8
    d13a:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d13d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d13e:	74 20                	je     d160 <_IO_stdin_used+0x1160>
    d140:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d145:	09 09                	or     DWORD PTR [rcx],ecx
    d147:	49                   	rex.WB
    d148:	43                   	rex.XB
    d149:	4d 50                	rex.WRB push r8
    d14b:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d14e:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d151:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d156:	0a 00                	or     al,BYTE PTR [rax]
    d158:	77 00                	ja     d15a <_IO_stdin_used+0x115a>
    d15a:	2f                   	(bad)  
    d15b:	75 73                	jne    d1d0 <_IO_stdin_used+0x11d0>
    d15d:	72 2f                	jb     d18e <_IO_stdin_used+0x118e>
    d15f:	73 68                	jae    d1c9 <_IO_stdin_used+0x11c9>
    d161:	61                   	(bad)  
    d162:	72 65                	jb     d1c9 <_IO_stdin_used+0x11c9>
    d164:	2f                   	(bad)  
    d165:	76 69                	jbe    d1d0 <_IO_stdin_used+0x11d0>
    d167:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    d16e:	63 61 
    d170:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    d173:	2e 63 73 76          	cs movsxd esi,DWORD PTR [rbx+0x76]
    d177:	00 43 61             	add    BYTE PTR [rbx+0x61],al
    d17a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d17b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d17c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d17d:	74 20                	je     d19f <_IO_stdin_used+0x119f>
    d17f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d180:	70 65                	jo     d1e7 <_IO_stdin_used+0x11e7>
    d182:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d183:	20 2f                	and    BYTE PTR [rdi],ch
    d185:	75 73                	jne    d1fa <_IO_stdin_used+0x11fa>
    d187:	72 2f                	jb     d1b8 <_IO_stdin_used+0x11b8>
    d189:	73 68                	jae    d1f3 <_IO_stdin_used+0x11f3>
    d18b:	61                   	(bad)  
    d18c:	72 65                	jb     d1f3 <_IO_stdin_used+0x11f3>
    d18e:	2f                   	(bad)  
    d18f:	76 69                	jbe    d1fa <_IO_stdin_used+0x11fa>
    d191:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    d198:	63 61 
    d19a:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    d19d:	2e 63 73 76          	cs movsxd esi,DWORD PTR [rbx+0x76]
    d1a1:	3a 20                	cmp    ah,BYTE PTR [rax]
    d1a3:	70 72                	jo     d217 <_IO_stdin_used+0x1217>
    d1a5:	69 6e 74 69 6e 67 20 	imul   ebp,DWORD PTR [rsi+0x74],0x20676e69
    d1ac:	61                   	(bad)  
    d1ad:	72 70                	jb     d21f <_IO_stdin_used+0x121f>
    d1af:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    d1b2:	68 65 20 74 6f       	push   0x6f742065
    d1b7:	20 73 63             	and    BYTE PTR [rbx+0x63],dh
    d1ba:	72 65                	jb     d221 <_IO_stdin_used+0x1221>
    d1bc:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d1be:	00 25 73 20 2d 3e    	add    BYTE PTR [rip+0x3e2d2073],ah        # 3e2df237 <_end+0x3e1a422f>
    d1c4:	20 25 73 0a 00 25    	and    BYTE PTR [rip+0x25000a73],ah        # 2500dc3d <_end+0x24ed2c35>
    d1ca:	73 2c                	jae    d1f8 <_IO_stdin_used+0x11f8>
    d1cc:	25 73 0a 00 31       	and    eax,0x31000a73
    d1d1:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
    d1d4:	30 00                	xor    BYTE PTR [rax],al
    d1d6:	00 00                	add    BYTE PTR [rax],al
    d1d8:	56                   	push   rsi
    d1d9:	49                   	rex.WB
    d1da:	47                   	rex.RXB
    d1db:	49                   	rex.WB
    d1dc:	4c 20 55 54          	rex.WR and BYTE PTR [rbp+0x54],r10b
    d1e0:	4d 20 25 73 0a 09 2d 	rex.WRB and BYTE PTR [rip+0x2d090a73],r12b        # 2d09dc5a <_end+0x2cf62c52>
    d1e7:	64 3a 20             	cmp    ah,BYTE PTR fs:[rax]
    d1ea:	64 65 62             	fs gs (bad) 
    d1ed:	75 67                	jne    d256 <_IO_stdin_used+0x1256>
    d1ef:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    d1f2:	64 65 0a 09          	fs or  cl,BYTE PTR gs:[rcx]
    d1f6:	2d 68 3a 20 64       	sub    eax,0x64203a68
    d1fb:	69 73 70 6c 61 79 20 	imul   esi,DWORD PTR [rbx+0x70],0x2079616c
    d202:	74 68                	je     d26c <_IO_stdin_used+0x126c>
    d204:	69 73 20 6d 65 73 73 	imul   esi,DWORD PTR [rbx+0x20],0x7373656d
    d20b:	61                   	(bad)  
    d20c:	67 65 0a 09          	or     cl,BYTE PTR gs:[ecx]
    d210:	2d 69 20 3c 69       	sub    eax,0x693c2069
    d215:	66 61                	data16 (bad) 
    d217:	63 65 3e             	movsxd esp,DWORD PTR [rbp+0x3e]
    d21a:	3a 20                	cmp    ah,BYTE PTR [rax]
    d21c:	73 65                	jae    d283 <_IO_stdin_used+0x1283>
    d21e:	74 20                	je     d240 <_IO_stdin_used+0x1240>
    d220:	74 68                	je     d28a <_IO_stdin_used+0x128a>
    d222:	65 20 69 6e          	and    BYTE PTR gs:[rcx+0x6e],ch
    d226:	74 65                	je     d28d <_IO_stdin_used+0x128d>
    d228:	72 66                	jb     d290 <_IO_stdin_used+0x1290>
    d22a:	61                   	(bad)  
    d22b:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    d22e:	74 6f                	je     d29f <_IO_stdin_used+0x129f>
    d230:	20 6c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],ch
    d234:	74 65                	je     d29b <_IO_stdin_used+0x129b>
    d236:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d237:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    d23a:	0a 09                	or     cl,BYTE PTR [rcx]
    d23c:	2d 70 20 70 72       	sub    eax,0x72702070
    d241:	69 6e 74 20 70 61 63 	imul   ebp,DWORD PTR [rsi+0x74],0x63617020
    d248:	6b 65 74 73          	imul   esp,DWORD PTR [rbp+0x74],0x73
    d24c:	0a 09                	or     cl,BYTE PTR [rcx]
    d24e:	2d 71 20 65 78       	sub    eax,0x78652071
    d253:	69 74 20 71 75 69 65 	imul   esi,DWORD PTR [rax+riz*1+0x71],0x74656975
    d25a:	74 
    d25b:	6c                   	ins    BYTE PTR es:[rdi],dx
    d25c:	79 0a                	jns    d268 <_IO_stdin_used+0x1268>
    d25e:	00 72 62             	add    BYTE PTR [rdx+0x62],dh
    d261:	00 2f                	add    BYTE PTR [rdi],ch
    d263:	70 72                	jo     d2d7 <_IO_stdin_used+0x12d7>
    d265:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d266:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    d268:	63 70 75             	movsxd esi,DWORD PTR [rax+0x75]
    d26b:	69 6e 66 6f 00 6d 6f 	imul   ebp,DWORD PTR [rsi+0x66],0x6f6d006f
    d272:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    d275:	20 6e 61             	and    BYTE PTR [rsi+0x61],ch
    d278:	6d                   	ins    DWORD PTR es:[rdi],dx
    d279:	65 00 46 6f          	add    BYTE PTR gs:[rsi+0x6f],al
    d27d:	75 6e                	jne    d2ed <_IO_stdin_used+0x12ed>
    d27f:	64 20 25 64 20 63 70 	and    BYTE PTR fs:[rip+0x70632064],ah        # 7063f2ea <_end+0x705042e2>
    d286:	75 73                	jne    d2fb <_IO_stdin_used+0x12fb>
    d288:	3a 0a                	cmp    cl,BYTE PTR [rdx]
    d28a:	25 73 00 00 00       	and    eax,0x73
    d28f:	00 e2                	add    dl,ah
    d291:	96                   	xchg   esi,eax
    d292:	88 e2                	mov    dl,ah
    d294:	96                   	xchg   esi,eax
    d295:	88 e2                	mov    dl,ah
    d297:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d29e:	88 e2                	mov    dl,ah
    d2a0:	96                   	xchg   esi,eax
    d2a1:	88 e2                	mov    dl,ah
    d2a3:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2aa:	88 e2                	mov    dl,ah
    d2ac:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    d2b3:	96                   	xchg   esi,eax
    d2b4:	88 e2                	mov    dl,ah
    d2b6:	96                   	xchg   esi,eax
    d2b7:	88 e2                	mov    dl,ah
    d2b9:	96                   	xchg   esi,eax
    d2ba:	88 e2                	mov    dl,ah
    d2bc:	96                   	xchg   esi,eax
    d2bd:	88 e2                	mov    dl,ah
    d2bf:	96                   	xchg   esi,eax
    d2c0:	88 e2                	mov    dl,ah
    d2c2:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    d2c9:	96                   	xchg   esi,eax
    d2ca:	88 e2                	mov    dl,ah
    d2cc:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2d3:	88 0a                	mov    BYTE PTR [rdx],cl
    d2d5:	e2 96                	loop   d26d <_IO_stdin_used+0x126d>
    d2d7:	88 e2                	mov    dl,ah
    d2d9:	96                   	xchg   esi,eax
    d2da:	88 e2                	mov    dl,ah
    d2dc:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d2e3:	88 e2                	mov    dl,ah
    d2e5:	96                   	xchg   esi,eax
    d2e6:	88 e2                	mov    dl,ah
    d2e8:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2ef:	88 e2                	mov    dl,ah
    d2f1:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2f8:	88 e2                	mov    dl,ah
    d2fa:	80 81 e2 80 81 e2 80 	add    BYTE PTR [rcx-0x1d7e7f1e],0x80
    d301:	81 e2 80 81 e2 80    	and    edx,0x80e28180
    d307:	81 e2 80 81 20 e2    	and    edx,0xe2208180
    d30d:	96                   	xchg   esi,eax
    d30e:	88 e2                	mov    dl,ah
    d310:	96                   	xchg   esi,eax
    d311:	88 e2                	mov    dl,ah
    d313:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d31a:	88 0a                	mov    BYTE PTR [rdx],cl
    d31c:	e2 96                	loop   d2b4 <_IO_stdin_used+0x12b4>
    d31e:	88 e2                	mov    dl,ah
    d320:	96                   	xchg   esi,eax
    d321:	88 e2                	mov    dl,ah
    d323:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d32a:	88 e2                	mov    dl,ah
    d32c:	96                   	xchg   esi,eax
    d32d:	88 e2                	mov    dl,ah
    d32f:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d336:	88 e2                	mov    dl,ah
    d338:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d33f:	88 e2                	mov    dl,ah
    d341:	80 81 20 20 e2 96 88 	add    BYTE PTR [rcx-0x691ddfe0],0x88
    d348:	e2 96                	loop   d2e0 <_IO_stdin_used+0x12e0>
    d34a:	88 e2                	mov    dl,ah
    d34c:	96                   	xchg   esi,eax
    d34d:	88 e2                	mov    dl,ah
    d34f:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d356:	88 e2                	mov    dl,ah
    d358:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d35f:	88 0a                	mov    BYTE PTR [rdx],cl
    d361:	e2 80                	loop   d2e3 <_IO_stdin_used+0x12e3>
    d363:	81 e2 96 88 e2 96    	and    edx,0x96e28896
    d369:	88 e2                	mov    dl,ah
    d36b:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    d372:	96                   	xchg   esi,eax
    d373:	88 e2                	mov    dl,ah
    d375:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    d37c:	88 e2                	mov    dl,ah
    d37e:	96                   	xchg   esi,eax
    d37f:	88 e2                	mov    dl,ah
    d381:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d388:	88 e2                	mov    dl,ah
    d38a:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d391:	88 e2                	mov    dl,ah
    d393:	96                   	xchg   esi,eax
    d394:	88 e2                	mov    dl,ah
    d396:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d39d:	88 e2                	mov    dl,ah
    d39f:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d3a6:	88 0a                	mov    BYTE PTR [rdx],cl
    d3a8:	20 e2                	and    dl,ah
    d3aa:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d3b1:	88 e2                	mov    dl,ah
    d3b3:	96                   	xchg   esi,eax
    d3b4:	88 e2                	mov    dl,ah
    d3b6:	96                   	xchg   esi,eax
    d3b7:	88 e2                	mov    dl,ah
    d3b9:	80 81 e2 80 81 20 e2 	add    BYTE PTR [rcx+0x208180e2],0xe2
    d3c0:	96                   	xchg   esi,eax
    d3c1:	88 e2                	mov    dl,ah
    d3c3:	96                   	xchg   esi,eax
    d3c4:	88 e2                	mov    dl,ah
    d3c6:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    d3cd:	88 e2                	mov    dl,ah
    d3cf:	96                   	xchg   esi,eax
    d3d0:	88 e2                	mov    dl,ah
    d3d2:	96                   	xchg   esi,eax
    d3d3:	88 e2                	mov    dl,ah
    d3d5:	96                   	xchg   esi,eax
    d3d6:	88 e2                	mov    dl,ah
    d3d8:	96                   	xchg   esi,eax
    d3d9:	88 e2                	mov    dl,ah
    d3db:	96                   	xchg   esi,eax
    d3dc:	88 e2                	mov    dl,ah
    d3de:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    d3e5:	88 e2                	mov    dl,ah
    d3e7:	96                   	xchg   esi,eax
    d3e8:	88 e2                	mov    dl,ah
    d3ea:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d3f1:	88 e2                	mov    dl,ah
    d3f3:	96                   	xchg   esi,eax
    d3f4:	88 e2                	mov    dl,ah
    d3f6:	96                   	xchg   esi,eax
    d3f7:	88 e2                	mov    dl,ah
    d3f9:	96                   	xchg   esi,eax
    d3fa:	88 e2                	mov    dl,ah
    d3fc:	96                   	xchg   esi,eax
    d3fd:	88 e2                	mov    dl,ah
    d3ff:	96                   	xchg   esi,eax
    d400:	88 00                	mov    BYTE PTR [rax],al
    d402:	00 00                	add    BYTE PTR [rax],al
    d404:	00 00                	add    BYTE PTR [rax],al
    d406:	00 00                	add    BYTE PTR [rax],al
    d408:	0a 00                	or     al,BYTE PTR [rax]
    d40a:	0d 00 00 00 00       	or     eax,0x0
    d40f:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    d412:	68 5f 73 65 72       	push   0x7265735f
    d417:	76 65                	jbe    d47e <_IO_stdin_used+0x147e>
    d419:	72 2e                	jb     d449 <_IO_stdin_used+0x1449>
    d41b:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d41d:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    d420:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    d427:	20 
    d428:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
    d42b:	61                   	(bad)  
    d42c:	74 65                	je     d493 <_IO_stdin_used+0x1493>
    d42e:	20 73 6f             	and    BYTE PTR [rbx+0x6f],dh
    d431:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d434:	74 00                	je     d436 <_IO_stdin_used+0x1436>
    d436:	00 00                	add    BYTE PTR [rax],al
    d438:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d439:	73 68                	jae    d4a3 <_IO_stdin_used+0x14a3>
    d43b:	5f                   	pop    rdi
    d43c:	73 65                	jae    d4a3 <_IO_stdin_used+0x14a3>
    d43e:	72 76                	jb     d4b6 <_IO_stdin_used+0x14b6>
    d440:	65 72 2e             	gs jb  d471 <_IO_stdin_used+0x1471>
    d443:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d445:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    d448:	69 6c 75 72 65 20 69 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6e692065
    d44f:	6e 
    d450:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d453:	74 73                	je     d4c8 <_IO_stdin_used+0x14c8>
    d455:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d456:	63 6b 6f             	movsxd ebp,DWORD PTR [rbx+0x6f]
    d459:	70 74                	jo     d4cf <_IO_stdin_used+0x14cf>
    d45b:	00 00                	add    BYTE PTR [rax],al
    d45d:	00 00                	add    BYTE PTR [rax],al
    d45f:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    d462:	68 5f 73 65 72       	push   0x7265735f
    d467:	76 65                	jbe    d4ce <_IO_stdin_used+0x14ce>
    d469:	72 2e                	jb     d499 <_IO_stdin_used+0x1499>
    d46b:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d46d:	20 62 69             	and    BYTE PTR [rdx+0x69],ah
    d470:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d471:	64 69 6e 67 20 6f 66 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x20666f20
    d478:	20 
    d479:	73 6f                	jae    d4ea <_IO_stdin_used+0x14ea>
    d47b:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d47e:	74 20                	je     d4a0 <_IO_stdin_used+0x14a0>
    d480:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    d482:	72 20                	jb     d4a4 <_IO_stdin_used+0x14a4>
    d484:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d485:	73 68                	jae    d4ef <_IO_stdin_used+0x14ef>
    d487:	5f                   	pop    rdi
    d488:	66 64 20 66 61       	data16 and BYTE PTR fs:[rsi+0x61],ah
    d48d:	69 6c 65 64 00 00 00 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
    d494:	00 
    d495:	00 00                	add    BYTE PTR [rax],al
    d497:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    d49a:	68 5f 73 65 72       	push   0x7265735f
    d49f:	76 65                	jbe    d506 <_IO_stdin_used+0x1506>
    d4a1:	72 2e                	jb     d4d1 <_IO_stdin_used+0x14d1>
    d4a3:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d4a5:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    d4a8:	69 6c 75 72 65 20 6f 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6e6f2065
    d4af:	6e 
    d4b0:	20 6c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],ch
    d4b4:	74 65                	je     d51b <_IO_stdin_used+0x151b>
    d4b6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d4b7:	69 6e 67 20 66 6f 72 	imul   ebp,DWORD PTR [rsi+0x67],0x726f6620
    d4be:	20 6e 73             	and    BYTE PTR [rsi+0x73],ch
    d4c1:	68 5f 66 64 00       	push   0x64665f
    d4c6:	00 00                	add    BYTE PTR [rax],al
    d4c8:	46 61                	rex.RX (bad) 
    d4ca:	69 6c 75 72 65 20 74 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f742065
    d4d1:	6f 
    d4d2:	20 61 63             	and    BYTE PTR [rcx+0x63],ah
    d4d5:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    d4d8:	74 20                	je     d4fa <_IO_stdin_used+0x14fa>
    d4da:	61                   	(bad)  
    d4db:	20 63 6c             	and    BYTE PTR [rbx+0x6c],ah
    d4de:	69 65 6e 74 20 61 74 	imul   esp,DWORD PTR [rbp+0x6e],0x74612074
    d4e5:	20 25 73 0a 00 30    	and    BYTE PTR [rip+0x30000a73],ah        # 3000df5e <_end+0x2fed2f56>
    d4eb:	78 25                	js     d512 <_IO_stdin_used+0x1512>
    d4ed:	30 32                	xor    BYTE PTR [rdx],dh
    d4ef:	78 0a                	js     d4fb <_IO_stdin_used+0x14fb>
    d4f1:	00 00                	add    BYTE PTR [rax],al
    d4f3:	00 00                	add    BYTE PTR [rax],al
    d4f5:	00 00                	add    BYTE PTR [rax],al
    d4f7:	00 61 00             	add    BYTE PTR [rcx+0x0],ah
    d4fa:	00 00                	add    BYTE PTR [rax],al
    d4fc:	00 00                	add    BYTE PTR [rax],al
    d4fe:	00 00                	add    BYTE PTR [rax],al
    d500:	42 61                	rex.X (bad) 
    d502:	73 69                	jae    d56d <_IO_stdin_used+0x156d>
    d504:	63 20                	movsxd esp,DWORD PTR [rax]
    d506:	70 6f                	jo     d577 <_IO_stdin_used+0x1577>
    d508:	72 74                	jb     d57e <_IO_stdin_used+0x157e>
    d50a:	73 63                	jae    d56f <_IO_stdin_used+0x156f>
    d50c:	61                   	(bad)  
    d50d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d50e:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d512:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d517:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d51a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d51b:	6d                   	ins    DWORD PTR es:[rdi],dx
    d51c:	20 49 50             	and    BYTE PTR [rcx+0x50],cl
    d51f:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    d522:	64 72 65             	fs jb  d58a <_IO_stdin_used+0x158a>
    d525:	73 73                	jae    d59a <_IO_stdin_used+0x159a>
    d527:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # dfa0 <_IO_stdin_used+0x1fa0>
    d52d:	00 00                	add    BYTE PTR [rax],al
    d52f:	00 50 6f             	add    BYTE PTR [rax+0x6f],dl
    d532:	72 74                	jb     d5a8 <_IO_stdin_used+0x15a8>
    d534:	73 63                	jae    d599 <_IO_stdin_used+0x1599>
    d536:	61                   	(bad)  
    d537:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d538:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d53c:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d541:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d544:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d545:	6d                   	ins    DWORD PTR es:[rdi],dx
    d546:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461f5bf <_end+0x744e45b7>
    d54c:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # dfc5 <_IO_stdin_used+0x1fc5>
    d552:	00 00                	add    BYTE PTR [rax],al
    d554:	00 00                	add    BYTE PTR [rax],al
    d556:	00 00                	add    BYTE PTR [rax],al
    d558:	46                   	rex.RX
    d559:	49                   	rex.WB
    d55a:	4e 20 70 6f          	rex.WRX and BYTE PTR [rax+0x6f],r14b
    d55e:	72 74                	jb     d5d4 <_IO_stdin_used+0x15d4>
    d560:	73 63                	jae    d5c5 <_IO_stdin_used+0x15c5>
    d562:	61                   	(bad)  
    d563:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d564:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d568:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d56d:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d570:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d571:	6d                   	ins    DWORD PTR es:[rdi],dx
    d572:	20 49 50             	and    BYTE PTR [rcx+0x50],cl
    d575:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    d578:	64 72 65             	fs jb  d5e0 <_IO_stdin_used+0x15e0>
    d57b:	73 73                	jae    d5f0 <_IO_stdin_used+0x15f0>
    d57d:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # dff6 <_IO_stdin_used+0x1ff6>
    d583:	00 00                	add    BYTE PTR [rax],al
    d585:	00 00                	add    BYTE PTR [rax],al
    d587:	00 46 49             	add    BYTE PTR [rsi+0x49],al
    d58a:	4e 20 70 6f          	rex.WRX and BYTE PTR [rax+0x6f],r14b
    d58e:	72 74                	jb     d604 <_IO_stdin_used+0x1604>
    d590:	73 63                	jae    d5f5 <_IO_stdin_used+0x15f5>
    d592:	61                   	(bad)  
    d593:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d594:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d598:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d59d:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d5a0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d5a1:	6d                   	ins    DWORD PTR es:[rdi],dx
    d5a2:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461f61b <_end+0x744e4613>
    d5a8:	20 25 73 0a 00 30    	and    BYTE PTR [rip+0x30000a73],ah        # 3000e021 <_end+0x2fed3019>
    d5ae:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
    d5b1:	30 2e                	xor    BYTE PTR [rsi],ch
    d5b3:	31 00                	xor    DWORD PTR [rax],eax
    d5b5:	30 2e                	xor    BYTE PTR [rsi],ch
    d5b7:	30 2e                	xor    BYTE PTR [rsi],ch
    d5b9:	30 2e                	xor    BYTE PTR [rsi],ch
    d5bb:	31 00                	xor    DWORD PTR [rax],eax
    d5bd:	00 00                	add    BYTE PTR [rax],al
    d5bf:	00 41 72             	add    BYTE PTR [rcx+0x72],al
    d5c2:	70 20                	jo     d5e4 <_IO_stdin_used+0x15e4>
    d5c4:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d5c6:	74 72                	je     d63a <_IO_stdin_used+0x163a>
    d5c8:	79 20                	jns    d5ea <_IO_stdin_used+0x15ea>
    d5ca:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    d5cd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d5ce:	67 65 64 20 66 6f    	gs and BYTE PTR fs:[esi+0x6f],ah
    d5d4:	72 20                	jb     d5f6 <_IO_stdin_used+0x15f6>
    d5d6:	69 70 20 61 64 64 72 	imul   esi,DWORD PTR [rax+0x20],0x72646461
    d5dd:	65 73 73             	gs jae d653 <_IO_stdin_used+0x1653>
    d5e0:	20 25 73 3a 20 77    	and    BYTE PTR [rip+0x77203a73],ah        # 77211059 <_end+0x770d6051>
    d5e6:	61                   	(bad)  
    d5e7:	73 20                	jae    d609 <_IO_stdin_used+0x1609>
    d5e9:	25 73 20 69 73       	and    eax,0x73692073
    d5ee:	20 6e 6f             	and    BYTE PTR [rsi+0x6f],ch
    d5f1:	77 20                	ja     d613 <_IO_stdin_used+0x1613>
    d5f3:	25 73 00 72 00       	and    eax,0x720073
    d5f8:	2f                   	(bad)  
    d5f9:	75 73                	jne    d66e <_IO_stdin_used+0x166e>
    d5fb:	72 2f                	jb     d62c <_IO_stdin_used+0x162c>
    d5fd:	73 68                	jae    d667 <_IO_stdin_used+0x1667>
    d5ff:	61                   	(bad)  
    d600:	72 65                	jb     d667 <_IO_stdin_used+0x1667>
    d602:	2f                   	(bad)  
    d603:	76 69                	jbe    d66e <_IO_stdin_used+0x166e>
    d605:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    d60c:	63 61 
    d60e:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    d611:	2e 63 73 76          	cs movsxd esi,DWORD PTR [rbx+0x76]
    d615:	00 00                	add    BYTE PTR [rax],al
    d617:	00 43 6f             	add    BYTE PTR [rbx+0x6f],al
    d61a:	75 6c                	jne    d688 <_IO_stdin_used+0x1688>
    d61c:	64 20 6e 6f          	and    BYTE PTR fs:[rsi+0x6f],ch
    d620:	74 20                	je     d642 <_IO_stdin_used+0x1642>
    d622:	6c                   	ins    BYTE PTR es:[rdi],dx
    d623:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d624:	61                   	(bad)  
    d625:	64 20 61 72          	and    BYTE PTR fs:[rcx+0x72],ah
    d629:	70 20                	jo     d64b <_IO_stdin_used+0x164b>
    d62b:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    d62e:	68 65 20 66 72       	push   0x72662065
    d633:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d634:	6d                   	ins    DWORD PTR es:[rdi],dx
    d635:	20 64 61 74          	and    BYTE PTR [rcx+riz*2+0x74],ah
    d639:	61                   	(bad)  
    d63a:	62 61                	(bad)  
    d63c:	73 65                	jae    d6a3 <_IO_stdin_used+0x16a3>
    d63e:	2c 20                	sub    al,0x20
    d640:	66 69 6c 65 20 6e 6f 	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f6e
    d647:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d648:	65 78 69             	gs js  d6b4 <_IO_stdin_used+0x16b4>
    d64b:	73 74                	jae    d6c1 <_IO_stdin_used+0x16c1>
    d64d:	61                   	(bad)  
    d64e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d64f:	74 00                	je     d651 <_IO_stdin_used+0x1651>
    d651:	0a 00                	or     al,BYTE PTR [rax]
    d653:	2c 00                	sub    al,0x0
    d655:	00 00                	add    BYTE PTR [rax],al
    d657:	00 55 70             	add    BYTE PTR [rbp+0x70],dl
    d65a:	64 61                	fs (bad) 
    d65c:	74 69                	je     d6c7 <_IO_stdin_used+0x16c7>
    d65e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d65f:	67 20 64 62 00       	and    BYTE PTR [edx+eiz*2+0x0],ah
    d664:	53                   	push   rbx
    d665:	51                   	push   rcx
    d666:	6c                   	ins    BYTE PTR es:[rdi],dx
    d667:	69 74 65 20 65 72 72 	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x6f727265
    d66e:	6f 
    d66f:	72 3a                	jb     d6ab <_IO_stdin_used+0x16ab>
    d671:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # e0ea <__GNU_EH_FRAME_HDR+0xde>
    d677:	00 49 4e             	add    BYTE PTR [rcx+0x4e],cl
    d67a:	53                   	push   rbx
    d67b:	45 52                	rex.RB push r10
    d67d:	54                   	push   rsp
    d67e:	20 49 4e             	and    BYTE PTR [rcx+0x4e],cl
    d681:	54                   	push   rsp
    d682:	4f 20 61 72          	rex.WRXB and BYTE PTR [r9+0x72],r12b
    d686:	70 5f                	jo     d6e7 <_IO_stdin_used+0x16e7>
    d688:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    d68b:	68 65 20 28 69       	push   0x69282065
    d690:	70 5f                	jo     d6f1 <_IO_stdin_used+0x16f1>
    d692:	61                   	(bad)  
    d693:	64 64 72 65          	fs fs jb d6fc <_IO_stdin_used+0x16fc>
    d697:	73 73                	jae    d70c <_IO_stdin_used+0x170c>
    d699:	2c 20                	sub    al,0x20
    d69b:	6d                   	ins    DWORD PTR es:[rdi],dx
    d69c:	61                   	(bad)  
    d69d:	63 5f 61             	movsxd ebx,DWORD PTR [rdi+0x61]
    d6a0:	64 64 72 65          	fs fs jb d709 <_IO_stdin_used+0x1709>
    d6a4:	73 73                	jae    d719 <_IO_stdin_used+0x1719>
    d6a6:	29 20                	sub    DWORD PTR [rax],esp
    d6a8:	56                   	push   rsi
    d6a9:	41                   	rex.B
    d6aa:	4c 55                	rex.WR push rbp
    d6ac:	45 53                	rex.RB push r11
    d6ae:	20 28                	and    BYTE PTR [rax],ch
    d6b0:	22 25 73 22 2c 20    	and    ah,BYTE PTR [rip+0x202c2273]        # 202cf929 <_end+0x20194921>
    d6b6:	22 25 73 22 29 3b    	and    ah,BYTE PTR [rip+0x3b292273]        # 3b29f92f <_end+0x3b164927>
    d6bc:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    d6bf:	4c 69 74 65 20 65 6e 	imul   r14,QWORD PTR [rbp+riz*2+0x20],0x6f636e65
    d6c6:	63 6f 
    d6c8:	75 6e                	jne    d738 <_IO_stdin_used+0x1738>
    d6ca:	74 65                	je     d731 <_IO_stdin_used+0x1731>
    d6cc:	72 65                	jb     d733 <_IO_stdin_used+0x1733>
    d6ce:	64 20 65 72          	and    BYTE PTR fs:[rbp+0x72],ah
    d6d2:	72 6f                	jb     d743 <_IO_stdin_used+0x1743>
    d6d4:	72 3a                	jb     d710 <_IO_stdin_used+0x1710>
    d6d6:	20 25 73 0a 00 2f    	and    BYTE PTR [rip+0x2f000a73],ah        # 2f00e14f <_end+0x2eed3147>
    d6dc:	75 73                	jne    d751 <_IO_stdin_used+0x1751>
    d6de:	72 2f                	jb     d70f <_IO_stdin_used+0x170f>
    d6e0:	73 68                	jae    d74a <_IO_stdin_used+0x174a>
    d6e2:	61                   	(bad)  
    d6e3:	72 65                	jb     d74a <_IO_stdin_used+0x174a>
    d6e5:	2f                   	(bad)  
    d6e6:	76 69                	jbe    d751 <_IO_stdin_used+0x1751>
    d6e8:	67 69 6c 2f 73 70 69 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x642e6970
    d6ef:	2e 64 
    d6f1:	62                   	(bad)  
    d6f2:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    d6f5:	4c 69 74 65 20 65 72 	imul   r14,QWORD PTR [rbp+riz*2+0x20],0x6f727265
    d6fc:	72 6f 
    d6fe:	72 20                	jb     d720 <_IO_stdin_used+0x1720>
    d700:	25 73 0a 00 00       	and    eax,0xa73
    d705:	00 00                	add    BYTE PTR [rax],al
    d707:	00 49 4e             	add    BYTE PTR [rcx+0x4e],cl
    d70a:	53                   	push   rbx
    d70b:	45 52                	rex.RB push r10
    d70d:	54                   	push   rsp
    d70e:	20 49 4e             	and    BYTE PTR [rcx+0x4e],cl
    d711:	54                   	push   rsp
    d712:	4f 20 73 70          	rex.WRXB and BYTE PTR [r11+0x70],r14b
    d716:	69 5f 74 61 62 6c 65 	imul   ebx,DWORD PTR [rdi+0x74],0x656c6261
    d71d:	20 28                	and    BYTE PTR [rax],ch
    d71f:	73 65                	jae    d786 <_IO_stdin_used+0x1786>
    d721:	72 76                	jb     d799 <_IO_stdin_used+0x1799>
    d723:	5f                   	pop    rdi
    d724:	61                   	(bad)  
    d725:	64 64 72 2c          	fs fs jb d755 <_IO_stdin_used+0x1755>
    d729:	20 63 6c             	and    BYTE PTR [rbx+0x6c],ah
    d72c:	69 5f 61 64 64 72 2c 	imul   ebx,DWORD PTR [rdi+0x61],0x2c726464
    d733:	73 65                	jae    d79a <_IO_stdin_used+0x179a>
    d735:	72 76                	jb     d7ad <_IO_stdin_used+0x17ad>
    d737:	5f                   	pop    rdi
    d738:	70 6f                	jo     d7a9 <_IO_stdin_used+0x17a9>
    d73a:	72 74                	jb     d7b0 <_IO_stdin_used+0x17b0>
    d73c:	2c 63                	sub    al,0x63
    d73e:	6c                   	ins    BYTE PTR es:[rdi],dx
    d73f:	69 5f 70 6f 72 74 2c 	imul   ebx,DWORD PTR [rdi+0x70],0x2c74726f
    d746:	73 65                	jae    d7ad <_IO_stdin_used+0x17ad>
    d748:	72 76                	jb     d7c0 <_IO_stdin_used+0x17c0>
    d74a:	5f                   	pop    rdi
    d74b:	70 6b                	jo     d7b8 <_IO_stdin_used+0x17b8>
    d74d:	74 5f                	je     d7ae <_IO_stdin_used+0x17ae>
    d74f:	73 65                	jae    d7b6 <_IO_stdin_used+0x17b6>
    d751:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d752:	74 2c                	je     d780 <_IO_stdin_used+0x1780>
    d754:	63 6c 69 5f          	movsxd ebp,DWORD PTR [rcx+rbp*2+0x5f]
    d758:	70 6b                	jo     d7c5 <_IO_stdin_used+0x17c5>
    d75a:	74 5f                	je     d7bb <_IO_stdin_used+0x17bb>
    d75c:	73 65                	jae    d7c3 <_IO_stdin_used+0x17c3>
    d75e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d75f:	74 2c                	je     d78d <_IO_stdin_used+0x178d>
    d761:	73 65                	jae    d7c8 <_IO_stdin_used+0x17c8>
    d763:	72 76                	jb     d7db <_IO_stdin_used+0x17db>
    d765:	5f                   	pop    rdi
    d766:	70 6b                	jo     d7d3 <_IO_stdin_used+0x17d3>
    d768:	74 5f                	je     d7c9 <_IO_stdin_used+0x17c9>
    d76a:	72 65                	jb     d7d1 <_IO_stdin_used+0x17d1>
    d76c:	63 76 2c             	movsxd esi,DWORD PTR [rsi+0x2c]
    d76f:	63 6c 69 5f          	movsxd ebp,DWORD PTR [rcx+rbp*2+0x5f]
    d773:	70 6b                	jo     d7e0 <_IO_stdin_used+0x17e0>
    d775:	74 5f                	je     d7d6 <_IO_stdin_used+0x17d6>
    d777:	72 65                	jb     d7de <_IO_stdin_used+0x17de>
    d779:	63 76 2c             	movsxd esi,DWORD PTR [rsi+0x2c]
    d77c:	70 72                	jo     d7f0 <_IO_stdin_used+0x17f0>
    d77e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d77f:	74 6f                	je     d7f0 <_IO_stdin_used+0x17f0>
    d781:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    d784:	2c 61                	sub    al,0x61
    d786:	76 67                	jbe    d7ef <_IO_stdin_used+0x17ef>
    d788:	5f                   	pop    rdi
    d789:	70 70                	jo     d7fb <_IO_stdin_used+0x17fb>
    d78b:	73 2c                	jae    d7b9 <_IO_stdin_used+0x17b9>
    d78d:	73 74                	jae    d803 <_IO_stdin_used+0x1803>
    d78f:	61                   	(bad)  
    d790:	72 74                	jb     d806 <_IO_stdin_used+0x1806>
    d792:	5f                   	pop    rdi
    d793:	74 69                	je     d7fe <_IO_stdin_used+0x17fe>
    d795:	6d                   	ins    DWORD PTR es:[rdi],dx
    d796:	65 2c 65             	gs sub al,0x65
    d799:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d79a:	64 5f                	fs pop rdi
    d79c:	74 69                	je     d807 <_IO_stdin_used+0x1807>
    d79e:	6d                   	ins    DWORD PTR es:[rdi],dx
    d79f:	65 2c 64             	gs sub al,0x64
    d7a2:	61                   	(bad)  
    d7a3:	74 61                	je     d806 <_IO_stdin_used+0x1806>
    d7a5:	5f                   	pop    rdi
    d7a6:	70 6b                	jo     d813 <_IO_stdin_used+0x1813>
    d7a8:	74 73                	je     d81d <_IO_stdin_used+0x181d>
    d7aa:	2c 63                	sub    al,0x63
    d7ac:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d7ad:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d7ae:	74 72                	je     d822 <_IO_stdin_used+0x1822>
    d7b0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d7b1:	6c                   	ins    BYTE PTR es:[rdi],dx
    d7b2:	5f                   	pop    rdi
    d7b3:	70 6b                	jo     d820 <_IO_stdin_used+0x1820>
    d7b5:	74 73                	je     d82a <_IO_stdin_used+0x182a>
    d7b7:	29 20                	sub    DWORD PTR [rax],esp
    d7b9:	56                   	push   rsi
    d7ba:	41                   	rex.B
    d7bb:	4c 55                	rex.WR push rbp
    d7bd:	45 53                	rex.RB push r11
    d7bf:	20 28                	and    BYTE PTR [rax],ch
    d7c1:	22 25 73 22 2c 22    	and    ah,BYTE PTR [rip+0x222c2273]        # 222cfa3a <_end+0x22194a32>
    d7c7:	25 73 22 2c 25       	and    eax,0x252c2273
    d7cc:	6c                   	ins    BYTE PTR es:[rdi],dx
    d7cd:	64 2c 25             	fs sub al,0x25
    d7d0:	6c                   	ins    BYTE PTR es:[rdi],dx
    d7d1:	64 2c 25             	fs sub al,0x25
    d7d4:	64 2c 25             	fs sub al,0x25
    d7d7:	64 2c 25             	fs sub al,0x25
    d7da:	64 2c 25             	fs sub al,0x25
    d7dd:	64 2c 25             	fs sub al,0x25
    d7e0:	64 2c 25             	fs sub al,0x25
    d7e3:	64 2c 25             	fs sub al,0x25
    d7e6:	6c                   	ins    BYTE PTR es:[rdi],dx
    d7e7:	64 2c 25             	fs sub al,0x25
    d7ea:	6c                   	ins    BYTE PTR es:[rdi],dx
    d7eb:	64 2c 25             	fs sub al,0x25
    d7ee:	64 2c 25             	fs sub al,0x25
    d7f1:	64 29 3b             	sub    DWORD PTR fs:[rbx],edi
    d7f4:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    d7f7:	4c                   	rex.WR
    d7f8:	49 54                	rex.WB push r12
    d7fa:	45 20 45 6e          	and    BYTE PTR [r13+0x6e],r8b
    d7fe:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    d801:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d802:	74 65                	je     d869 <_IO_stdin_used+0x1869>
    d804:	72 65                	jb     d86b <_IO_stdin_used+0x186b>
    d806:	64 20 65 72          	and    BYTE PTR fs:[rbp+0x72],ah
    d80a:	72 6f                	jb     d87b <_IO_stdin_used+0x187b>
    d80c:	72 3a                	jb     d848 <_IO_stdin_used+0x1848>
    d80e:	20 25 73 0a 00 53    	and    BYTE PTR [rip+0x53000a73],ah        # 5300e287 <_end+0x52ed327f>
    d814:	74 72                	je     d888 <_IO_stdin_used+0x1888>
    d816:	6c                   	ins    BYTE PTR es:[rdi],dx
    d817:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d818:	63 20                	movsxd esp,DWORD PTR [rax]
    d81a:	73 75                	jae    d891 <_IO_stdin_used+0x1891>
    d81c:	63 63 65             	movsxd esp,DWORD PTR [rbx+0x65]
    d81f:	73 73                	jae    d894 <_IO_stdin_used+0x1894>
    d821:	66 75 6c             	data16 jne d890 <_IO_stdin_used+0x1890>
    d824:	00 51 75             	add    BYTE PTR [rcx+0x75],dl
    d827:	65 72 79             	gs jb  d8a3 <_IO_stdin_used+0x18a3>
    d82a:	3a 20                	cmp    ah,BYTE PTR [rax]
    d82c:	25 73 0a 00 4c       	and    eax,0x4c000a73
    d831:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d832:	67 69 6e 20 69 6e 63 	imul   ebp,DWORD PTR [esi+0x20],0x6f636e69
    d839:	6f 
    d83a:	72 72                	jb     d8ae <_IO_stdin_used+0x18ae>
    d83c:	65 63 74 00 6c       	movsxd esi,DWORD PTR gs:[rax+rax*1+0x6c]
    d841:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d842:	67 69 6e 20 69 6e 63 	imul   ebp,DWORD PTR [esi+0x20],0x6f636e69
    d849:	6f 
    d84a:	72 72                	jb     d8be <_IO_stdin_used+0x18be>
    d84c:	65 63 74 00 50       	movsxd esi,DWORD PTR gs:[rax+rax*1+0x50]
    d851:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d852:	73 73                	jae    d8c7 <_IO_stdin_used+0x18c7>
    d854:	69 62 6c 65 20 46 54 	imul   esp,DWORD PTR [rdx+0x6c],0x54462065
    d85b:	50                   	push   rax
    d85c:	20 62 72             	and    BYTE PTR [rdx+0x72],ah
    d85f:	75 74                	jne    d8d5 <_IO_stdin_used+0x18d5>
    d861:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    d865:	72 63                	jb     d8ca <_IO_stdin_used+0x18ca>
    d867:	65 20 61 74          	and    BYTE PTR gs:[rcx+0x74],ah
    d86b:	74 65                	je     d8d2 <_IO_stdin_used+0x18d2>
    d86d:	6d                   	ins    DWORD PTR es:[rdi],dx
    d86e:	70 74                	jo     d8e4 <_IO_stdin_used+0x18e4>
    d870:	3a 20                	cmp    ah,BYTE PTR [rax]
    d872:	25 73 28 73 75       	and    eax,0x75732873
    d877:	73 70                	jae    d8e9 <_IO_stdin_used+0x18e9>
    d879:	65 63 74 29 20       	movsxd esi,DWORD PTR gs:[rcx+rbp*1+0x20]
    d87e:	2d 3e 20 25 73       	sub    eax,0x7325203e
    d883:	2e 20 25 64 20 66 61 	cs and BYTE PTR [rip+0x61662064],ah        # 6166f8ee <_end+0x615348e6>
    d88a:	69 6c 65 64 20 6c 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x676f6c20
    d891:	67 
    d892:	69 6e 73 0a 00 00 53 	imul   ebp,DWORD PTR [rsi+0x73],0x5300000a
    d899:	50                   	push   rax
    d89a:	49 20 54 41 42       	rex.WB and BYTE PTR [r9+rax*2+0x42],dl
    d89f:	4c                   	rex.WR
    d8a0:	45 20 52 45          	and    BYTE PTR [r10+0x45],r10b
    d8a4:	54                   	push   rsp
    d8a5:	52                   	push   rdx
    d8a6:	41                   	rex.B
    d8a7:	4e 53                	rex.WRX push rbx
    d8a9:	3a 20                	cmp    ah,BYTE PTR [rax]
    d8ab:	25 64 3a 20 25       	and    eax,0x25203a64
    d8b0:	73 3a                	jae    d8ec <_IO_stdin_used+0x18ec>
    d8b2:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    d8b7:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64261330 <_end+0x64126328>
    d8bd:	0a 00                	or     al,BYTE PTR [rax]
    d8bf:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d8c2:	49 20 4e 45          	rex.WB and BYTE PTR [r14+0x45],cl
    d8c6:	57                   	push   rdi
    d8c7:	20 43 4f             	and    BYTE PTR [rbx+0x4f],al
    d8ca:	4e 56                	rex.WRX push rsi
    d8cc:	3a 20                	cmp    ah,BYTE PTR [rax]
    d8ce:	25 64 3a 20 25       	and    eax,0x25203a64
    d8d3:	73 3a                	jae    d90f <_IO_stdin_used+0x190f>
    d8d5:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    d8da:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64261353 <_end+0x6412634b>
    d8e0:	0a 00                	or     al,BYTE PTR [rax]
    d8e2:	00 00                	add    BYTE PTR [rax],al
    d8e4:	00 00                	add    BYTE PTR [rax],al
    d8e6:	00 00                	add    BYTE PTR [rax],al
    d8e8:	53                   	push   rbx
    d8e9:	50                   	push   rax
    d8ea:	49 20 54 57 48       	rex.WB and BYTE PTR [r15+rdx*2+0x48],dl
    d8ef:	20 32                	and    BYTE PTR [rdx],dh
    d8f1:	2f                   	(bad)  
    d8f2:	33 3a                	xor    edi,DWORD PTR [rdx]
    d8f4:	20 25 64 3a 20 25    	and    BYTE PTR [rip+0x25203a64],ah        # 2521135e <_end+0x250d6356>
    d8fa:	73 3a                	jae    d936 <_IO_stdin_used+0x1936>
    d8fc:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    d901:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 6426137a <_end+0x64126372>
    d907:	0a 00                	or     al,BYTE PTR [rax]
    d909:	00 00                	add    BYTE PTR [rax],al
    d90b:	00 00                	add    BYTE PTR [rax],al
    d90d:	00 00                	add    BYTE PTR [rax],al
    d90f:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d912:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d916:	54                   	push   rsp
    d917:	52                   	push   rdx
    d918:	59                   	pop    rcx
    d919:	3a 20                	cmp    ah,BYTE PTR [rax]
    d91b:	25 64 3a 20 53       	and    eax,0x53203a64
    d920:	45 53                	rex.RB push r11
    d922:	53                   	push   rbx
    d923:	49                   	rex.WB
    d924:	4f                   	rex.WRXB
    d925:	4e 20 45 53          	rex.WRX and BYTE PTR [rbp+0x53],r8b
    d929:	54                   	push   rsp
    d92a:	3a 20                	cmp    ah,BYTE PTR [rax]
    d92c:	25 73 3a 25 64       	and    eax,0x64253a73
    d931:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325f975 <_end+0x7312496d>
    d937:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e3a1 <__GNU_EH_FRAME_HDR+0x395>
    d93d:	00 00                	add    BYTE PTR [rax],al
    d93f:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d942:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d946:	54                   	push   rsp
    d947:	52                   	push   rdx
    d948:	59                   	pop    rcx
    d949:	3a 20                	cmp    ah,BYTE PTR [rax]
    d94b:	25 64 3a 20 50       	and    eax,0x50203a64
    d950:	4f                   	rex.WRXB
    d951:	4c                   	rex.WR
    d952:	49 54                	rex.WB push r12
    d954:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    d958:	4e 56                	rex.WRX push rsi
    d95a:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    d95d:	44 20 33             	and    BYTE PTR [rbx],r14b
    d960:	2f                   	(bad)  
    d961:	33 3a                	xor    edi,DWORD PTR [rdx]
    d963:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642613dc <_end+0x641263d4>
    d969:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325f9ad <_end+0x731249a5>
    d96f:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e3d9 <__GNU_EH_FRAME_HDR+0x3cd>
    d975:	00 00                	add    BYTE PTR [rax],al
    d977:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d97a:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d97e:	54                   	push   rsp
    d97f:	52                   	push   rdx
    d980:	59                   	pop    rcx
    d981:	3a 20                	cmp    ah,BYTE PTR [rax]
    d983:	25 64 3a 20 50       	and    eax,0x50203a64
    d988:	4f                   	rex.WRXB
    d989:	4c                   	rex.WR
    d98a:	49 54                	rex.WB push r12
    d98c:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    d990:	4e 56                	rex.WRX push rsi
    d992:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    d995:	44 20 32             	and    BYTE PTR [rdx],r14b
    d998:	2f                   	(bad)  
    d999:	33 3a                	xor    edi,DWORD PTR [rdx]
    d99b:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64261414 <_end+0x6412640c>
    d9a1:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325f9e5 <_end+0x731249dd>
    d9a7:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e411 <__GNU_EH_FRAME_HDR+0x405>
    d9ad:	00 00                	add    BYTE PTR [rax],al
    d9af:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d9b2:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d9b6:	54                   	push   rsp
    d9b7:	52                   	push   rdx
    d9b8:	59                   	pop    rcx
    d9b9:	3a 20                	cmp    ah,BYTE PTR [rax]
    d9bb:	25 64 3a 20 50       	and    eax,0x50203a64
    d9c0:	4f                   	rex.WRXB
    d9c1:	4c                   	rex.WR
    d9c2:	49 54                	rex.WB push r12
    d9c4:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    d9c8:	4e 56                	rex.WRX push rsi
    d9ca:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    d9cd:	44 20 31             	and    BYTE PTR [rcx],r14b
    d9d0:	2f                   	(bad)  
    d9d1:	33 3a                	xor    edi,DWORD PTR [rdx]
    d9d3:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 6426144c <_end+0x64126444>
    d9d9:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fa1d <_end+0x73124a15>
    d9df:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e449 <__GNU_EH_FRAME_HDR+0x43d>
    d9e5:	00 00                	add    BYTE PTR [rax],al
    d9e7:	00 61 00             	add    BYTE PTR [rcx+0x0],ah
    d9ea:	00 00                	add    BYTE PTR [rax],al
    d9ec:	00 00                	add    BYTE PTR [rax],al
    d9ee:	00 00                	add    BYTE PTR [rax],al
    d9f0:	43 52                	rex.XB push r10
    d9f2:	49 54                	rex.WB push r12
    d9f4:	49                   	rex.WB
    d9f5:	43                   	rex.XB
    d9f6:	41                   	rex.B
    d9f7:	4c 20 46 41          	rex.WR and BYTE PTR [rsi+0x41],r8b
    d9fb:	49                   	rex.WB
    d9fc:	4c                   	rex.WR
    d9fd:	45                   	rex.RB
    d9fe:	44 20 54 4f 20       	and    BYTE PTR [rdi+rcx*2+0x20],r10b
    da03:	4f 50                	rex.WRXB push r8
    da05:	45                   	rex.RB
    da06:	4e 20 46 49          	rex.WRX and BYTE PTR [rsi+0x49],r8b
    da0a:	4c                   	rex.WR
    da0b:	45 20 46 4f          	and    BYTE PTR [r14+0x4f],r8b
    da0f:	52                   	push   rdx
    da10:	20 4c 4f 47          	and    BYTE PTR [rdi+rcx*2+0x47],cl
    da14:	47                   	rex.RXB
    da15:	49                   	rex.WB
    da16:	4e                   	rex.WRX
    da17:	47 3a 20             	rex.RXB cmp r12b,BYTE PTR [r8]
    da1a:	25 73 0a 00 25       	and    eax,0x25000a73
    da1f:	73 20                	jae    da41 <_IO_stdin_used+0x1a41>
    da21:	25 73 20 25 73       	and    eax,0x73252073
    da26:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fa6a <_end+0x73124a62>
    da2c:	0a 00                	or     al,BYTE PTR [rax]
    da2e:	25 73 20 25 73       	and    eax,0x73252073
    da33:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642614ac <_end+0x641264a4>
    da39:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fa7d <_end+0x73124a75>
    da3f:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e4a9 <__GNU_EH_FRAME_HDR+0x49d>
    da45:	00 00                	add    BYTE PTR [rax],al
    da47:	00 61 6e             	add    BYTE PTR [rcx+0x6e],ah
    da4a:	79 00                	jns    da4c <_IO_stdin_used+0x1a4c>
    da4c:	41                   	rex.B
    da4d:	4e 59                	rex.WRX pop rcx
    da4f:	00 49 43             	add    BYTE PTR [rcx+0x43],cl
    da52:	4d 50                	rex.WRB push r8
    da54:	00 54 43 50          	add    BYTE PTR [rbx+rax*2+0x50],dl
    da58:	00 55 44             	add    BYTE PTR [rbp+0x44],dl
    da5b:	50                   	push   rax
    da5c:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    da5f:	72 5f                	jb     dac0 <_IO_stdin_used+0x1ac0>
    da61:	6d                   	ins    DWORD PTR es:[rdi],dx
    da62:	61                   	(bad)  
    da63:	74 63                	je     dac8 <_IO_stdin_used+0x1ac8>
    da65:	68 00 6e 6f 6e       	push   0x6e6f6e00
    da6a:	65 00 70 63          	add    BYTE PTR gs:[rax+0x63],dh
    da6e:	72 65                	jb     dad5 <_IO_stdin_used+0x1ad5>
    da70:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    da73:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    da77:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    da78:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    da7b:	6c                   	ins    BYTE PTR es:[rdi],dx
    da7c:	65 20 74 79 70       	and    BYTE PTR gs:[rcx+rdi*2+0x70],dh
    da81:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    da84:	25 73 0a 00 3b       	and    eax,0x3b000a73
    da89:	00 46 6f             	add    BYTE PTR [rsi+0x6f],al
    da8c:	75 6e                	jne    dafc <_IO_stdin_used+0x1afc>
    da8e:	64 20 6f 70          	and    BYTE PTR fs:[rdi+0x70],ch
    da92:	65 72 61             	gs jb  daf6 <_IO_stdin_used+0x1af6>
    da95:	74 6f                	je     db06 <_IO_stdin_used+0x1b06>
    da97:	72 00                	jb     da99 <_IO_stdin_used+0x1a99>
    da99:	61                   	(bad)  
    da9a:	6c                   	ins    BYTE PTR es:[rdi],dx
    da9b:	65 72 74             	gs jb  db12 <_IO_stdin_used+0x1b12>
    da9e:	00 24 68             	add    BYTE PTR [rax+rbp*2],ah
    daa1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    daa2:	6d                   	ins    DWORD PTR es:[rdi],dx
    daa3:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    daa5:	65 74 00             	gs je  daa8 <_IO_stdin_used+0x1aa8>
    daa8:	2d 3e 00 3c 3e       	sub    eax,0x3e3c003e
    daad:	00 24 65 78 74 65 72 	add    BYTE PTR [riz*2+0x72657478],ah
    dab4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dab5:	61                   	(bad)  
    dab6:	6c                   	ins    BYTE PTR es:[rdi],dx
    dab7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dab8:	65 74 00             	gs je  dabb <_IO_stdin_used+0x1abb>
    dabb:	22 3b                	and    bh,BYTE PTR [rbx]
    dabd:	00 6e 61             	add    BYTE PTR [rsi+0x61],ch
    dac0:	6d                   	ins    DWORD PTR es:[rdi],dx
    dac1:	65 3a 22             	cmp    ah,BYTE PTR gs:[rdx]
    dac4:	00 6d 73             	add    BYTE PTR [rbp+0x73],ch
    dac7:	67 3a 22             	cmp    ah,BYTE PTR [edx]
    daca:	00 64 65 70          	add    BYTE PTR [rbp+riz*2+0x70],ah
    dace:	74 68                	je     db38 <_IO_stdin_used+0x1b38>
    dad0:	3a 00                	cmp    al,BYTE PTR [rax]
    dad2:	74 79                	je     db4d <_IO_stdin_used+0x1b4d>
    dad4:	70 65                	jo     db3b <_IO_stdin_used+0x1b3b>
    dad6:	3a 00                	cmp    al,BYTE PTR [rax]
    dad8:	74 61                	je     db3b <_IO_stdin_used+0x1b3b>
    dada:	72 67                	jb     db43 <_IO_stdin_used+0x1b43>
    dadc:	65 74 3a             	gs je  db19 <_IO_stdin_used+0x1b19>
    dadf:	22 00                	and    al,BYTE PTR [rax]
    dae1:	73 65                	jae    db48 <_IO_stdin_used+0x1b48>
    dae3:	76 3a                	jbe    db1f <_IO_stdin_used+0x1b1f>
    dae5:	00 00                	add    BYTE PTR [rax],al
    dae7:	00 52 75             	add    BYTE PTR [rdx+0x75],dl
    daea:	6c                   	ins    BYTE PTR es:[rdi],dx
    daeb:	65 20 73 65          	and    BYTE PTR gs:[rbx+0x65],dh
    daef:	76 65                	jbe    db56 <_IO_stdin_used+0x1b56>
    daf1:	72 69                	jb     db5c <_IO_stdin_used+0x1b5c>
    daf3:	74 79                	je     db6e <_IO_stdin_used+0x1b6e>
    daf5:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    daf8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    daf9:	75 6c                	jne    db67 <_IO_stdin_used+0x1b67>
    dafb:	64 20 62 65          	and    BYTE PTR fs:[rdx+0x65],ah
    daff:	20 3e                	and    BYTE PTR [rsi],bh
    db01:	20 30                	and    BYTE PTR [rax],dh
    db03:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    db06:	64 20 3c 3d 20 31 30 	and    BYTE PTR fs:[rdi*1+0x303120],bh
    db0d:	00 
    db0e:	00 00                	add    BYTE PTR [rax],al
    db10:	52                   	push   rdx
    db11:	75 6c                	jne    db7f <_IO_stdin_used+0x1b7f>
    db13:	65 20 73 65          	and    BYTE PTR gs:[rbx+0x65],dh
    db17:	76 65                	jbe    db7e <_IO_stdin_used+0x1b7e>
    db19:	72 69                	jb     db84 <_IO_stdin_used+0x1b84>
    db1b:	74 79                	je     db96 <_IO_stdin_used+0x1b96>
    db1d:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    db20:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    db21:	75 6c                	jne    db8f <_IO_stdin_used+0x1b8f>
    db23:	64 20 62 65          	and    BYTE PTR fs:[rdx+0x65],ah
    db27:	20 61 20             	and    BYTE PTR [rcx+0x20],ah
    db2a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db2b:	75 6d                	jne    db9a <_IO_stdin_used+0x1b9a>
    db2d:	65 72 69             	gs jb  db99 <_IO_stdin_used+0x1b99>
    db30:	63 20                	movsxd esp,DWORD PTR [rax]
    db32:	76 61                	jbe    db95 <_IO_stdin_used+0x1b95>
    db34:	6c                   	ins    BYTE PTR es:[rdi],dx
    db35:	75 65                	jne    db9c <_IO_stdin_used+0x1b9c>
    db37:	00 69 74             	add    BYTE PTR [rcx+0x74],ch
    db3a:	79 70                	jns    dbac <_IO_stdin_used+0x1bac>
    db3c:	65 3a 00             	cmp    al,BYTE PTR gs:[rax]
    db3f:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    db41:	76 61                	jbe    dba4 <_IO_stdin_used+0x1ba4>
    db43:	6c                   	ins    BYTE PTR es:[rdi],dx
    db44:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    db4b:	20 
    db4c:	74 79                	je     dbc7 <_IO_stdin_used+0x1bc7>
    db4e:	70 65                	jo     dbb5 <_IO_stdin_used+0x1bb5>
    db50:	20 76 61             	and    BYTE PTR [rsi+0x61],dh
    db53:	6c                   	ins    BYTE PTR es:[rdi],dx
    db54:	75 65                	jne    dbbb <_IO_stdin_used+0x1bbb>
    db56:	00 00                	add    BYTE PTR [rax],al
    db58:	25 73 3a 20 69       	and    eax,0x69203a73
    db5d:	74 79                	je     dbd8 <_IO_stdin_used+0x1bd8>
    db5f:	70 65                	jo     dbc6 <_IO_stdin_used+0x1bc6>
    db61:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    db64:	6c                   	ins    BYTE PTR es:[rdi],dx
    db65:	79 20                	jns    db87 <_IO_stdin_used+0x1b87>
    db67:	61                   	(bad)  
    db68:	70 70                	jo     dbda <_IO_stdin_used+0x1bda>
    db6a:	6c                   	ins    BYTE PTR es:[rdi],dx
    db6b:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    db72:	72 75                	jb     dbe9 <_IO_stdin_used+0x1be9>
    db74:	6c                   	ins    BYTE PTR es:[rdi],dx
    db75:	65 73 20             	gs jae db98 <_IO_stdin_used+0x1b98>
    db78:	77 69                	ja     dbe3 <_IO_stdin_used+0x1be3>
    db7a:	74 68                	je     dbe4 <_IO_stdin_used+0x1be4>
    db7c:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    db7f:	4d 50                	rex.WRB push r8
    db81:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    db84:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    db87:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    db88:	74 6f                	je     dbf9 <_IO_stdin_used+0x1bf9>
    db8a:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    db8d:	0a 00                	or     al,BYTE PTR [rax]
    db8f:	69 63 6f 64 65 3a 00 	imul   esp,DWORD PTR [rbx+0x6f],0x3a6564
    db96:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    db98:	76 61                	jbe    dbfb <_IO_stdin_used+0x1bfb>
    db9a:	6c                   	ins    BYTE PTR es:[rdi],dx
    db9b:	69 64 65 20 69 63 6d 	imul   esp,DWORD PTR [rbp+riz*2+0x20],0x706d6369
    dba2:	70 
    dba3:	20 63 6f             	and    BYTE PTR [rbx+0x6f],ah
    dba6:	64 65 20 76 61       	fs and BYTE PTR gs:[rsi+0x61],dh
    dbab:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbac:	75 65                	jne    dc13 <_IO_stdin_used+0x1c13>
    dbae:	00 00                	add    BYTE PTR [rax],al
    dbb0:	69 63 6f 64 65 20 6f 	imul   esp,DWORD PTR [rbx+0x6f],0x6f206564
    dbb7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dbb8:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbb9:	79 20                	jns    dbdb <_IO_stdin_used+0x1bdb>
    dbbb:	61                   	(bad)  
    dbbc:	70 70                	jo     dc2e <_IO_stdin_used+0x1c2e>
    dbbe:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbbf:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dbc6:	72 75                	jb     dc3d <_IO_stdin_used+0x1c3d>
    dbc8:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbc9:	65 73 20             	gs jae dbec <_IO_stdin_used+0x1bec>
    dbcc:	77 69                	ja     dc37 <_IO_stdin_used+0x1c37>
    dbce:	74 68                	je     dc38 <_IO_stdin_used+0x1c38>
    dbd0:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    dbd3:	4d 50                	rex.WRB push r8
    dbd5:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dbd8:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dbdb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dbdc:	74 6f                	je     dc4d <_IO_stdin_used+0x1c4d>
    dbde:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dbe1:	00 69 63             	add    BYTE PTR [rcx+0x63],ch
    dbe4:	6d                   	ins    DWORD PTR es:[rdi],dx
    dbe5:	70 5f                	jo     dc46 <_IO_stdin_used+0x1c46>
    dbe7:	69 64 3a 00 49 6e 76 	imul   esp,DWORD PTR [rdx+rdi*1+0x0],0x61766e49
    dbee:	61 
    dbef:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbf0:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    dbf7:	20 
    dbf8:	69 64 20 76 61 6c 75 	imul   esp,DWORD PTR [rax+riz*1+0x76],0x65756c61
    dbff:	65 
	...
    dc08:	49                   	rex.WB
    dc09:	43                   	rex.XB
    dc0a:	4d 50                	rex.WRB push r8
    dc0c:	20 49 44             	and    BYTE PTR [rcx+0x44],cl
    dc0f:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    dc12:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc13:	79 20                	jns    dc35 <_IO_stdin_used+0x1c35>
    dc15:	61                   	(bad)  
    dc16:	70 70                	jo     dc88 <_IO_stdin_used+0x1c88>
    dc18:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc19:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dc20:	72 75                	jb     dc97 <_IO_stdin_used+0x1c97>
    dc22:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc23:	65 73 20             	gs jae dc46 <_IO_stdin_used+0x1c46>
    dc26:	77 69                	ja     dc91 <_IO_stdin_used+0x1c91>
    dc28:	74 68                	je     dc92 <_IO_stdin_used+0x1c92>
    dc2a:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    dc2d:	4d 50                	rex.WRB push r8
    dc2f:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dc32:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dc35:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dc36:	74 6f                	je     dca7 <_IO_stdin_used+0x1ca7>
    dc38:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dc3b:	00 69 63             	add    BYTE PTR [rcx+0x63],ch
    dc3e:	6d                   	ins    DWORD PTR es:[rdi],dx
    dc3f:	70 5f                	jo     dca0 <_IO_stdin_used+0x1ca0>
    dc41:	73 65                	jae    dca8 <_IO_stdin_used+0x1ca8>
    dc43:	71 3a                	jno    dc7f <_IO_stdin_used+0x1c7f>
    dc45:	00 49 6e             	add    BYTE PTR [rcx+0x6e],cl
    dc48:	76 61                	jbe    dcab <_IO_stdin_used+0x1cab>
    dc4a:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc4b:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    dc52:	20 
    dc53:	73 65                	jae    dcba <_IO_stdin_used+0x1cba>
    dc55:	71 75                	jno    dccc <_IO_stdin_used+0x1ccc>
    dc57:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    dc59:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    dc5c:	76 61                	jbe    dcbf <_IO_stdin_used+0x1cbf>
    dc5e:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc5f:	75 65                	jne    dcc6 <_IO_stdin_used+0x1cc6>
    dc61:	00 74 74 6c          	add    BYTE PTR [rsp+rsi*2+0x6c],dh
    dc65:	3a 00                	cmp    al,BYTE PTR [rax]
    dc67:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    dc69:	76 61                	jbe    dccc <_IO_stdin_used+0x1ccc>
    dc6b:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc6c:	69 64 20 74 74 6c 20 	imul   esp,DWORD PTR [rax+riz*1+0x74],0x76206c74
    dc73:	76 
    dc74:	61                   	(bad)  
    dc75:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc76:	75 65                	jne    dcdd <_IO_stdin_used+0x1cdd>
    dc78:	00 66 6c             	add    BYTE PTR [rsi+0x6c],ah
    dc7b:	61                   	(bad)  
    dc7c:	67 73 3a             	addr32 jae dcb9 <_IO_stdin_used+0x1cb9>
    dc7f:	22 00                	and    al,BYTE PTR [rax]
    dc81:	00 00                	add    BYTE PTR [rax],al
    dc83:	00 00                	add    BYTE PTR [rax],al
    dc85:	00 00                	add    BYTE PTR [rax],al
    dc87:	00 66 6c             	add    BYTE PTR [rsi+0x6c],ah
    dc8a:	61                   	(bad)  
    dc8b:	67 73 20             	addr32 jae dcae <_IO_stdin_used+0x1cae>
    dc8e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dc8f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dc90:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc91:	79 20                	jns    dcb3 <_IO_stdin_used+0x1cb3>
    dc93:	61                   	(bad)  
    dc94:	70 70                	jo     dd06 <_IO_stdin_used+0x1d06>
    dc96:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc97:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dc9e:	72 75                	jb     dd15 <_IO_stdin_used+0x1d15>
    dca0:	6c                   	ins    BYTE PTR es:[rdi],dx
    dca1:	65 73 20             	gs jae dcc4 <_IO_stdin_used+0x1cc4>
    dca4:	77 69                	ja     dd0f <_IO_stdin_used+0x1d0f>
    dca6:	74 68                	je     dd10 <_IO_stdin_used+0x1d10>
    dca8:	20 74 63 70          	and    BYTE PTR [rbx+riz*2+0x70],dh
    dcac:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dcaf:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dcb2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dcb3:	74 6f                	je     dd24 <_IO_stdin_used+0x1d24>
    dcb5:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dcb8:	00 61 63             	add    BYTE PTR [rcx+0x63],ah
    dcbb:	6b 3a 00             	imul   edi,DWORD PTR [rdx],0x0
    dcbe:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    dcc0:	76 61                	jbe    dd23 <_IO_stdin_used+0x1d23>
    dcc2:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcc3:	69 64 20 61 63 6b 20 	imul   esp,DWORD PTR [rax+riz*1+0x61],0x76206b63
    dcca:	76 
    dccb:	61                   	(bad)  
    dccc:	6c                   	ins    BYTE PTR es:[rdi],dx
    dccd:	75 65                	jne    dd34 <_IO_stdin_used+0x1d34>
    dccf:	00 70 63             	add    BYTE PTR [rax+0x63],dh
    dcd2:	72 65                	jb     dd39 <_IO_stdin_used+0x1d39>
    dcd4:	3a 22                	cmp    ah,BYTE PTR [rdx]
    dcd6:	00 00                	add    BYTE PTR [rax],al
    dcd8:	46 61                	rex.RX (bad) 
    dcda:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    dce1:	20 
    dce2:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    dce5:	70 69                	jo     dd50 <_IO_stdin_used+0x1d50>
    dce7:	6c                   	ins    BYTE PTR es:[rdi],dx
    dce8:	65 20 72 65          	and    BYTE PTR gs:[rdx+0x65],dh
    dcec:	67 75 6c             	addr32 jne dd5b <_IO_stdin_used+0x1d5b>
    dcef:	61                   	(bad)  
    dcf0:	72 20                	jb     dd12 <_IO_stdin_used+0x1d12>
    dcf2:	65 78 70             	gs js  dd65 <_IO_stdin_used+0x1d65>
    dcf5:	72 65                	jb     dd5c <_IO_stdin_used+0x1d5c>
    dcf7:	73 73                	jae    dd6c <_IO_stdin_used+0x1d6c>
    dcf9:	69 6f 6e 00 64 73 69 	imul   ebp,DWORD PTR [rdi+0x6e],0x69736400
    dd00:	7a 65                	jp     dd67 <_IO_stdin_used+0x1d67>
    dd02:	3a 00                	cmp    al,BYTE PTR [rax]
    dd04:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd05:	66 66 73 65          	data16 data16 jae dd6e <_IO_stdin_used+0x1d6e>
    dd09:	74 3a                	je     dd45 <_IO_stdin_used+0x1d45>
    dd0b:	00 65 73             	add    BYTE PTR [rbp+0x73],ah
    dd0e:	74 61                	je     dd71 <_IO_stdin_used+0x1d71>
    dd10:	62                   	(bad)  
    dd11:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd12:	69 73 68 65 64 00 25 	imul   esi,DWORD PTR [rbx+0x68],0x25006465
    dd19:	63 00                	movsxd eax,DWORD PTR [rax]
    dd1b:	25 30 32 78 00       	and    eax,0x783230
    dd20:	3e 00 3c 00          	ds add BYTE PTR [rax+rax*1],bh
    dd24:	21 00                	and    DWORD PTR [rax],eax
    dd26:	3c 3d                	cmp    al,0x3d
    dd28:	00 3e                	add    BYTE PTR [rsi],bh
    dd2a:	3d 00 55 6e 73       	cmp    eax,0x736e5500
    dd2f:	75 70                	jne    dda1 <_IO_stdin_used+0x1da1>
    dd31:	70 6f                	jo     dda2 <_IO_stdin_used+0x1da2>
    dd33:	72 74                	jb     dda9 <_IO_stdin_used+0x1da9>
    dd35:	65 64 20 6f 70       	gs and BYTE PTR fs:[rdi+0x70],ch
    dd3a:	65 72 61             	gs jb  dd9e <_IO_stdin_used+0x1d9e>
    dd3d:	74 6f                	je     ddae <_IO_stdin_used+0x1dae>
    dd3f:	72 00                	jb     dd41 <_IO_stdin_used+0x1d41>
    dd41:	00 00                	add    BYTE PTR [rax],al
    dd43:	00 66 cc             	add    BYTE PTR [rsi-0x34],ah
    dd46:	ff                   	(bad)  
    dd47:	ff                   	(bad)  
    dd48:	b8 cc ff ff d1       	mov    eax,0xd1ffffcc
    dd4d:	cc                   	int3   
    dd4e:	ff                   	(bad)  
    dd4f:	ff 86 cc ff ff 9f    	inc    DWORD PTR [rsi-0x60000034]
    dd55:	cc                   	int3   
    dd56:	ff                   	(bad)  
    dd57:	ff                   	(bad)  
    dd58:	ea                   	(bad)  
    dd59:	cc                   	int3   
    dd5a:	ff                   	(bad)  
    dd5b:	ff 2e                	jmp    FWORD PTR [rsi]
    dd5d:	00 25 30 32 78 00    	add    BYTE PTR [rip+0x783230],ah        # 790f93 <_end+0x655f8b>
    dd63:	25 30 32 78 20       	and    eax,0x20783230
    dd68:	2d 2d 20 25 30       	sub    eax,0x3025202d
    dd6d:	32 78 0a             	xor    bh,BYTE PTR [rax+0xa]
	...
    dd78:	73 72                	jae    ddec <_IO_stdin_used+0x1dec>
    dd7a:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    dd7c:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd7d:	75 61                	jne    dde0 <_IO_stdin_used+0x1de0>
    dd7f:	2f                   	(bad)  
    dd80:	73 63                	jae    dde5 <_IO_stdin_used+0x1de5>
    dd82:	72 69                	jb     dded <_IO_stdin_used+0x1ded>
    dd84:	70 74                	jo     ddfa <_IO_stdin_used+0x1dfa>
    dd86:	73 2f                	jae    ddb7 <_IO_stdin_used+0x1db7>
    dd88:	68 65 6c 6c 6f       	push   0x6f6c6c65
    dd8d:	74 65                	je     ddf4 <_IO_stdin_used+0x1df4>
    dd8f:	73 74                	jae    de05 <_IO_stdin_used+0x1e05>
    dd91:	2e 6c                	cs ins BYTE PTR es:[rdi],dx
    dd93:	75 61                	jne    ddf6 <_IO_stdin_used+0x1df6>
    dd95:	00 72 00             	add    BYTE PTR [rdx+0x0],dh
    dd98:	2f                   	(bad)  
    dd99:	65 74 63             	gs je  ddff <_IO_stdin_used+0x1dff>
    dd9c:	2f                   	(bad)  
    dd9d:	76 69                	jbe    de08 <_IO_stdin_used+0x1e08>
    dd9f:	67 69 6c 2f 6c 73 63 	imul   ebp,DWORD PTR [edi+ebp*1+0x6c],0x69726373
    dda6:	72 69 
    dda8:	70 74                	jo     de1e <_IO_stdin_used+0x1e1e>
    ddaa:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    ddae:	66 00 46 61          	data16 add BYTE PTR [rsi+0x61],al
    ddb2:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    ddb9:	20 
    ddba:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    ddbd:	6c                   	ins    BYTE PTR es:[rdi],dx
    ddbe:	65 63 74 20 4c       	movsxd esi,DWORD PTR gs:[rax+riz*1+0x4c]
    ddc3:	75 61                	jne    de26 <_IO_stdin_used+0x1e26>
    ddc5:	20 73 63             	and    BYTE PTR [rbx+0x63],dh
    ddc8:	72 69                	jb     de33 <_IO_stdin_used+0x1e33>
    ddca:	70 74                	jo     de40 <_IO_stdin_used+0x1e40>
    ddcc:	73 3a                	jae    de08 <_IO_stdin_used+0x1e08>
    ddce:	20 2f                	and    BYTE PTR [rdi],ch
    ddd0:	65 74 63             	gs je  de36 <_IO_stdin_used+0x1e36>
    ddd3:	2f                   	(bad)  
    ddd4:	76 69                	jbe    de3f <_IO_stdin_used+0x1e3f>
    ddd6:	67 69 6c 2f 6c 73 63 	imul   ebp,DWORD PTR [edi+ebp*1+0x6c],0x69726373
    dddd:	72 69 
    dddf:	70 74                	jo     de55 <_IO_stdin_used+0x1e55>
    dde1:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    dde5:	66 20 6e 6f          	data16 and BYTE PTR [rsi+0x6f],ch
    dde9:	74 20                	je     de0b <_IO_stdin_used+0x1e0b>
    ddeb:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    dded:	75 6e                	jne    de5d <_IO_stdin_used+0x1e5d>
    ddef:	64 2e 00 2e          	fs add BYTE PTR fs:[rsi],ch
    ddf3:	2a 2e                	sub    ch,BYTE PTR [rsi]
    ddf5:	6c                   	ins    BYTE PTR es:[rdi],dx
    ddf6:	75 61                	jne    de59 <_IO_stdin_used+0x1e59>
    ddf8:	3a 2e                	cmp    ch,BYTE PTR [rsi]
    ddfa:	2a 00                	sub    al,BYTE PTR [rax]
    ddfc:	6c                   	ins    BYTE PTR es:[rdi],dx
    ddfd:	5f                   	pop    rdi
    ddfe:	73 63                	jae    de63 <_IO_stdin_used+0x1e63>
    de00:	72 69                	jb     de6b <_IO_stdin_used+0x1e6b>
    de02:	70 74                	jo     de78 <_IO_stdin_used+0x1e78>
    de04:	5f                   	pop    rdi
    de05:	72 6f                	jb     de76 <_IO_stdin_used+0x1e76>
    de07:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    de08:	74 3d                	je     de47 <_IO_stdin_used+0x1e47>
    de0a:	00 0a                	add    BYTE PTR [rdx],cl
    de0c:	00 00                	add    BYTE PTR [rax],al
    de0e:	00 00                	add    BYTE PTR [rax],al
    de10:	49 50                	rex.WB push r8
    de12:	76 36                	jbe    de4a <_IO_stdin_used+0x1e4a>
    de14:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2dfe8d <_end+0x3e1a4e85>
    de1a:	20 25 73 20 50 72    	and    BYTE PTR [rip+0x72502073],ah        # 7250fe93 <_end+0x723d4e8b>
    de20:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    de21:	74 6f                	je     de92 <_IO_stdin_used+0x1e92>
    de23:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    de26:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    de29:	6d                   	ins    DWORD PTR es:[rdi],dx
    de2a:	62                   	(bad)  
    de2b:	65 72 20             	gs jb  de4e <_IO_stdin_used+0x1e4e>
    de2e:	3d 20 25 64 0a       	cmp    eax,0xa642520
    de33:	00 00                	add    BYTE PTR [rax],al
    de35:	00 00                	add    BYTE PTR [rax],al
    de37:	00 5b 4e             	add    BYTE PTR [rbx+0x4e],bl
    de3a:	20 25 73 20 53 20    	and    BYTE PTR [rip+0x20532073],ah        # 2053feb3 <_end+0x20404eab>
    de40:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    de43:	30 32                	xor    BYTE PTR [rdx],dh
    de45:	78 20                	js     de67 <_IO_stdin_used+0x1e67>
    de47:	45 20 30             	and    BYTE PTR [r8],r14b
    de4a:	78 25                	js     de71 <_IO_stdin_used+0x1e71>
    de4c:	30 32                	xor    BYTE PTR [rdx],dh
    de4e:	78 5d                	js     dead <_IO_stdin_used+0x1ead>
    de50:	0a 00                	or     al,BYTE PTR [rax]
    de52:	00 00                	add    BYTE PTR [rax],al
    de54:	00 00                	add    BYTE PTR [rax],al
    de56:	00 00                	add    BYTE PTR [rax],al
    de58:	53                   	push   rbx
    de59:	65 67 6d             	gs ins DWORD PTR es:[edi],dx
    de5c:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    de5e:	74 61                	je     dec1 <_IO_stdin_used+0x1ec1>
    de60:	74 69                	je     decb <_IO_stdin_used+0x1ecb>
    de62:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    de63:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    de64:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    de67:	75 6c                	jne    ded5 <_IO_stdin_used+0x1ed5>
    de69:	74 20                	je     de8b <_IO_stdin_used+0x1e8b>
    de6b:	61                   	(bad)  
    de6c:	74 20                	je     de8e <_IO_stdin_used+0x1e8e>
    de6e:	25 73 3a 20 61       	and    eax,0x61203a73
    de73:	70 70                	jo     dee5 <_IO_stdin_used+0x1ee5>
    de75:	6c                   	ins    BYTE PTR es:[rdi],dx
    de76:	69 63 61 74 69 6f 6e 	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
    de7d:	20 63 72             	and    BYTE PTR [rbx+0x72],ah
    de80:	61                   	(bad)  
    de81:	73 68                	jae    deeb <_IO_stdin_used+0x1eeb>
    de83:	65 64 0a 00          	gs or  al,BYTE PTR fs:[rax]
    de87:	46 75 6e             	rex.RX jne def8 <_IO_stdin_used+0x1ef8>
    de8a:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    de8e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    de8f:	20 62 61             	and    BYTE PTR [rdx+0x61],ah
    de92:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
    de95:	72 61                	jb     def8 <_IO_stdin_used+0x1ef8>
    de97:	63 65 3a             	movsxd esp,DWORD PTR [rbp+0x3a]
    de9a:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
    de9e:	00 25 73 0a 00 00    	add    BYTE PTR [rip+0xa73],ah        # e917 <__GNU_EH_FRAME_HDR+0x90b>
    dea4:	00 00                	add    BYTE PTR [rax],al
    dea6:	00 00                	add    BYTE PTR [rax],al
    dea8:	5b                   	pop    rbx
    dea9:	4e 20 25 73 20 53 20 	rex.WRX and BYTE PTR [rip+0x20532073],r12b        # 2053ff23 <_end+0x20404f1b>
    deb0:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    deb3:	30 32                	xor    BYTE PTR [rdx],dh
    deb5:	78 20                	js     ded7 <_IO_stdin_used+0x1ed7>
    deb7:	45 20 30             	and    BYTE PTR [r8],r14b
    deba:	78 25                	js     dee1 <_IO_stdin_used+0x1ee1>
    debc:	30 32                	xor    BYTE PTR [rdx],dh
    debe:	78 20                	js     dee0 <_IO_stdin_used+0x1ee0>
    dec0:	28 2e                	sub    BYTE PTR [rsi],ch
    dec2:	2f                   	(bad)  
    dec3:	76 69                	jbe    df2e <_IO_stdin_used+0x1f2e>
    dec5:	67 69 6c 2e 65 78 65 	imul   ebp,DWORD PTR [esi+ebp*1+0x65],0x2b286578
    decc:	28 2b 
    dece:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    ded1:	30 32                	xor    BYTE PTR [rdx],dh
    ded3:	78 29                	js     defe <_IO_stdin_used+0x1efe>
    ded5:	29 5d 0a             	sub    DWORD PTR [rbp+0xa],ebx
	...
    dee0:	55                   	push   rbp
    dee1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dee2:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    dee6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dee7:	20 66 75             	and    BYTE PTR [rsi+0x75],ah
    deea:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    deeb:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    deef:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    def0:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    def3:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
    def6:	6d                   	ins    DWORD PTR es:[rdi],dx
    def7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    def8:	72 79                	jb     df73 <_IO_stdin_used+0x1f73>
    defa:	20 6f 66             	and    BYTE PTR [rdi+0x66],ch
    defd:	66 73 65             	data16 jae df65 <_IO_stdin_used+0x1f65>
    df00:	74 20                	je     df22 <_IO_stdin_used+0x1f22>
    df02:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    df05:	30 32                	xor    BYTE PTR [rdx],dh
    df07:	78 0a                	js     df13 <_IO_stdin_used+0x1f13>
    df09:	00 52 65             	add    BYTE PTR [rdx+0x65],dl
    df0c:	67 69 73 74 65 72 20 	imul   esi,DWORD PTR [ebx+0x74],0x44207265
    df13:	44 
    df14:	75 6d                	jne    df83 <_IO_stdin_used+0x1f83>
    df16:	70 3a                	jo     df52 <_IO_stdin_used+0x1f52>
    df18:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    df1b:	41 58                	pop    r8
    df1d:	5d                   	pop    rbp
    df1e:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790f44 <_end+0x25655f3c>
    df24:	30 32                	xor    BYTE PTR [rdx],dh
    df26:	78 0a                	js     df32 <_IO_stdin_used+0x1f32>
    df28:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    df2b:	42 58                	rex.X pop rax
    df2d:	5d                   	pop    rbp
    df2e:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790f54 <_end+0x25655f4c>
    df34:	30 32                	xor    BYTE PTR [rdx],dh
    df36:	78 0a                	js     df42 <_IO_stdin_used+0x1f42>
    df38:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    df3b:	43 58                	rex.XB pop r8
    df3d:	5d                   	pop    rbp
    df3e:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790f64 <_end+0x25655f5c>
    df44:	30 32                	xor    BYTE PTR [rdx],dh
    df46:	78 0a                	js     df52 <_IO_stdin_used+0x1f52>
    df48:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    df4b:	44 58                	rex.R pop rax
    df4d:	5d                   	pop    rbp
    df4e:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790f74 <_end+0x25655f6c>
    df54:	30 32                	xor    BYTE PTR [rdx],dh
    df56:	78 0a                	js     df62 <_IO_stdin_used+0x1f62>
    df58:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    df5b:	53                   	push   rbx
    df5c:	50                   	push   rax
    df5d:	5d                   	pop    rbp
    df5e:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790f84 <_end+0x25655f7c>
    df64:	30 32                	xor    BYTE PTR [rdx],dh
    df66:	78 0a                	js     df72 <_IO_stdin_used+0x1f72>
    df68:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    df6b:	42 50                	rex.X push rax
    df6d:	5d                   	pop    rbp
    df6e:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790f94 <_end+0x25655f8c>
    df74:	30 32                	xor    BYTE PTR [rdx],dh
    df76:	78 0a                	js     df82 <_IO_stdin_used+0x1f82>
	...
    df80:	72 00                	jb     df82 <_IO_stdin_used+0x1f82>
    df82:	2f                   	(bad)  
    df83:	75 73                	jne    dff8 <_IO_stdin_used+0x1ff8>
    df85:	72 2f                	jb     dfb6 <_IO_stdin_used+0x1fb6>
    df87:	73 68                	jae    dff1 <_IO_stdin_used+0x1ff1>
    df89:	61                   	(bad)  
    df8a:	72 65                	jb     dff1 <_IO_stdin_used+0x1ff1>
    df8c:	2f                   	(bad)  
    df8d:	76 69                	jbe    dff8 <_IO_stdin_used+0x1ff8>
    df8f:	67 69 6c 2f 6d 65 6d 	imul   ebp,DWORD PTR [edi+ebp*1+0x6d],0x616d6d65
    df96:	6d 61 
    df98:	70 2e                	jo     dfc8 <_IO_stdin_used+0x1fc8>
    df9a:	74 78                	je     e014 <__GNU_EH_FRAME_HDR+0x8>
    df9c:	74 00                	je     df9e <_IO_stdin_used+0x1f9e>
    df9e:	00 00                	add    BYTE PTR [rax],al
    dfa0:	46                   	rex.RX
    dfa1:	41 54                	push   r12
    dfa3:	41                   	rex.B
    dfa4:	4c 20 45 52          	rex.WR and BYTE PTR [rbp+0x52],r8b
    dfa8:	52                   	push   rdx
    dfa9:	4f 52                	rex.WRXB push r10
    dfab:	3a 20                	cmp    ah,BYTE PTR [rax]
    dfad:	6d                   	ins    DWORD PTR es:[rdi],dx
    dfae:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    dfb0:	6d                   	ins    DWORD PTR es:[rdi],dx
    dfb1:	61                   	(bad)  
    dfb2:	70 2e                	jo     dfe2 <_IO_stdin_used+0x1fe2>
    dfb4:	74 78                	je     e02e <__GNU_EH_FRAME_HDR+0x22>
    dfb6:	74 20                	je     dfd8 <_IO_stdin_used+0x1fd8>
    dfb8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dfb9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dfba:	74 20                	je     dfdc <_IO_stdin_used+0x1fdc>
    dfbc:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    dfbe:	75 6e                	jne    e02e <__GNU_EH_FRAME_HDR+0x22>
    dfc0:	64 2e 50             	fs cs push rax
    dfc3:	6c                   	ins    BYTE PTR es:[rdi],dx
    dfc4:	65 61                	gs (bad) 
    dfc6:	73 65                	jae    e02d <__GNU_EH_FRAME_HDR+0x21>
    dfc8:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    dfcb:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    dfce:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dfcf:	20 67 65             	and    BYTE PTR [rdi+0x65],ah
    dfd2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dfd3:	5f                   	pop    rdi
    dfd4:	6d                   	ins    DWORD PTR es:[rdi],dx
    dfd5:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    dfd7:	5f                   	pop    rdi
    dfd8:	6d                   	ins    DWORD PTR es:[rdi],dx
    dfd9:	61                   	(bad)  
    dfda:	70 2e                	jo     e00a <_IO_stdin_used+0x200a>
    dfdc:	70 79                	jo     e057 <__GNU_EH_FRAME_HDR+0x4b>
    dfde:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    dfe1:	64 20 63 6f          	and    BYTE PTR fs:[rbx+0x6f],ah
    dfe5:	70 79                	jo     e060 <__GNU_EH_FRAME_HDR+0x54>
    dfe7:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
    dfea:	6d                   	ins    DWORD PTR es:[rdi],dx
    dfeb:	6d                   	ins    DWORD PTR es:[rdi],dx
    dfec:	61                   	(bad)  
    dfed:	70 2e                	jo     e01d <__GNU_EH_FRAME_HDR+0x11>
    dfef:	74 78                	je     e069 <__GNU_EH_FRAME_HDR+0x5d>
    dff1:	74 20                	je     e013 <__GNU_EH_FRAME_HDR+0x7>
    dff3:	74 6f                	je     e064 <__GNU_EH_FRAME_HDR+0x58>
    dff5:	20 2f                	and    BYTE PTR [rdi],ch
    dff7:	75 73                	jne    e06c <__GNU_EH_FRAME_HDR+0x60>
    dff9:	72 2f                	jb     e02a <__GNU_EH_FRAME_HDR+0x1e>
    dffb:	73 68                	jae    e065 <__GNU_EH_FRAME_HDR+0x59>
    dffd:	61                   	(bad)  
    dffe:	72 65                	jb     e065 <__GNU_EH_FRAME_HDR+0x59>
    e000:	2f                   	(bad)  
    e001:	76 69                	jbe    e06c <__GNU_EH_FRAME_HDR+0x60>
    e003:	67                   	addr32
    e004:	69                   	.byte 0x69
    e005:	6c                   	ins    BYTE PTR es:[rdi],dx
    e006:	00 0a                	add    BYTE PTR [rdx],cl
    e008:	00 20                	add    BYTE PTR [rax],ah
	...

Disassembly of section .eh_frame_hdr:

000000000000e00c <__GNU_EH_FRAME_HDR>:
    e00c:	01 1b                	add    DWORD PTR [rbx],ebx
    e00e:	03 3b                	add    edi,DWORD PTR [rbx]
    e010:	90                   	nop
    e011:	03 00                	add    eax,DWORD PTR [rax]
    e013:	00 71 00             	add    BYTE PTR [rcx+0x0],dh
    e016:	00 00                	add    BYTE PTR [rax],al
    e018:	14 40                	adc    al,0x40
    e01a:	ff                   	(bad)  
    e01b:	ff c4                	inc    esp
    e01d:	03 00                	add    eax,DWORD PTR [rax]
    e01f:	00 44 44 ff          	add    BYTE PTR [rsp+rax*2-0x1],al
    e023:	ff                   	(bad)  
    e024:	ec                   	in     al,dx
    e025:	03 00                	add    eax,DWORD PTR [rax]
    e027:	00 54 44 ff          	add    BYTE PTR [rsp+rax*2-0x1],dl
    e02b:	ff 04 04             	inc    DWORD PTR [rsp+rax*1]
    e02e:	00 00                	add    BYTE PTR [rax],al
    e030:	74 48                	je     e07a <__GNU_EH_FRAME_HDR+0x6e>
    e032:	ff                   	(bad)  
    e033:	ff ac 03 00 00 5d 49 	jmp    FWORD PTR [rbx+rax*1+0x495d0000]
    e03a:	ff                   	(bad)  
    e03b:	ff 1c 04             	call   FWORD PTR [rsp+rax*1]
    e03e:	00 00                	add    BYTE PTR [rax],al
    e040:	97                   	xchg   edi,eax
    e041:	49 ff                	rex.WB (bad) 
    e043:	ff                   	(bad)  
    e044:	3c 04                	cmp    al,0x4
    e046:	00 00                	add    BYTE PTR [rax],al
    e048:	e3 4a                	jrcxz  e094 <__GNU_EH_FRAME_HDR+0x88>
    e04a:	ff                   	(bad)  
    e04b:	ff 64 04 00          	jmp    QWORD PTR [rsp+rax*1+0x0]
    e04f:	00 d7                	add    bh,dl
    e051:	4d ff                	rex.WRB (bad) 
    e053:	ff 84 04 00 00 ea 4e 	inc    DWORD PTR [rsp+rax*1+0x4eea0000]
    e05a:	ff                   	(bad)  
    e05b:	ff a4 04 00 00 98 4f 	jmp    QWORD PTR [rsp+rax*1+0x4f980000]
    e062:	ff                   	(bad)  
    e063:	ff c4                	inc    esp
    e065:	04 00                	add    al,0x0
    e067:	00 3e                	add    BYTE PTR [rsi],bh
    e069:	50                   	push   rax
    e06a:	ff                   	(bad)  
    e06b:	ff e4                	jmp    rsp
    e06d:	04 00                	add    al,0x0
    e06f:	00 d3                	add    bl,dl
    e071:	50                   	push   rax
    e072:	ff                   	(bad)  
    e073:	ff 04 05 00 00 67 51 	inc    DWORD PTR [rax*1+0x51670000]
    e07a:	ff                   	(bad)  
    e07b:	ff 24 05 00 00 33 53 	jmp    QWORD PTR [rax*1+0x53330000]
    e082:	ff                   	(bad)  
    e083:	ff 50 05             	call   QWORD PTR [rax+0x5]
    e086:	00 00                	add    BYTE PTR [rax],al
    e088:	07                   	(bad)  
    e089:	54                   	push   rsp
    e08a:	ff                   	(bad)  
    e08b:	ff 74 05 00          	push   QWORD PTR [rbp+rax*1+0x0]
    e08f:	00 ce                	add    dh,cl
    e091:	54                   	push   rsp
    e092:	ff                   	(bad)  
    e093:	ff 98 05 00 00 21    	call   FWORD PTR [rax+0x21000005]
    e099:	55                   	push   rbp
    e09a:	ff                   	(bad)  
    e09b:	ff                   	(bad)  
    e09c:	b8 05 00 00 54       	mov    eax,0x54000005
    e0a1:	55                   	push   rbp
    e0a2:	ff                   	(bad)  
    e0a3:	ff                   	(bad)  
    e0a4:	d8 05 00 00 75 55    	fadd   DWORD PTR [rip+0x55750000]        # 5575e0aa <_end+0x556230a2>
    e0aa:	ff                   	(bad)  
    e0ab:	ff                   	(bad)  
    e0ac:	f8                   	clc    
    e0ad:	05 00 00 dd 55       	add    eax,0x55dd0000
    e0b2:	ff                   	(bad)  
    e0b3:	ff 1c 06             	call   FWORD PTR [rsi+rax*1]
    e0b6:	00 00                	add    BYTE PTR [rax],al
    e0b8:	02 5a ff             	add    bl,BYTE PTR [rdx-0x1]
    e0bb:	ff                   	(bad)  
    e0bc:	3c 06                	cmp    al,0x6
    e0be:	00 00                	add    BYTE PTR [rax],al
    e0c0:	5f                   	pop    rdi
    e0c1:	5b                   	pop    rbx
    e0c2:	ff                   	(bad)  
    e0c3:	ff 5c 06 00          	call   FWORD PTR [rsi+rax*1+0x0]
    e0c7:	00 a3 63 ff ff 7c    	add    BYTE PTR [rbx+0x7cffff63],ah
    e0cd:	06                   	(bad)  
    e0ce:	00 00                	add    BYTE PTR [rax],al
    e0d0:	36 6c                	ss ins BYTE PTR es:[rdi],dx
    e0d2:	ff                   	(bad)  
    e0d3:	ff a4 06 00 00 8b 6d 	jmp    QWORD PTR [rsi+rax*1+0x6d8b0000]
    e0da:	ff                   	(bad)  
    e0db:	ff c4                	inc    esp
    e0dd:	06                   	(bad)  
    e0de:	00 00                	add    BYTE PTR [rax],al
    e0e0:	8a 6e ff             	mov    ch,BYTE PTR [rsi-0x1]
    e0e3:	ff e4                	jmp    rsp
    e0e5:	06                   	(bad)  
    e0e6:	00 00                	add    BYTE PTR [rax],al
    e0e8:	76 6f                	jbe    e159 <__GNU_EH_FRAME_HDR+0x14d>
    e0ea:	ff                   	(bad)  
    e0eb:	ff 04 07             	inc    DWORD PTR [rdi+rax*1]
    e0ee:	00 00                	add    BYTE PTR [rax],al
    e0f0:	28 73 ff             	sub    BYTE PTR [rbx-0x1],dh
    e0f3:	ff 24 07             	jmp    QWORD PTR [rdi+rax*1]
    e0f6:	00 00                	add    BYTE PTR [rax],al
    e0f8:	ab                   	stos   DWORD PTR es:[rdi],eax
    e0f9:	73 ff                	jae    e0fa <__GNU_EH_FRAME_HDR+0xee>
    e0fb:	ff 44 07 00          	inc    DWORD PTR [rdi+rax*1+0x0]
    e0ff:	00 d5                	add    ch,dl
    e101:	75 ff                	jne    e102 <__GNU_EH_FRAME_HDR+0xf6>
    e103:	ff 6c 07 00          	jmp    FWORD PTR [rdi+rax*1+0x0]
    e107:	00 12                	add    BYTE PTR [rdx],dl
    e109:	78 ff                	js     e10a <__GNU_EH_FRAME_HDR+0xfe>
    e10b:	ff 90 07 00 00 78    	call   QWORD PTR [rax+0x78000007]
    e111:	78 ff                	js     e112 <__GNU_EH_FRAME_HDR+0x106>
    e113:	ff b0 07 00 00 8f    	push   QWORD PTR [rax-0x70fffff9]
    e119:	78 ff                	js     e11a <__GNU_EH_FRAME_HDR+0x10e>
    e11b:	ff d0                	call   rax
    e11d:	07                   	(bad)  
    e11e:	00 00                	add    BYTE PTR [rax],al
    e120:	e0 78                	loopne e19a <__GNU_EH_FRAME_HDR+0x18e>
    e122:	ff                   	(bad)  
    e123:	ff f4                	push   rsp
    e125:	07                   	(bad)  
    e126:	00 00                	add    BYTE PTR [rax],al
    e128:	1d 7f ff ff 18       	sbb    eax,0x18ffff7f
    e12d:	08 00                	or     BYTE PTR [rax],al
    e12f:	00 37                	add    BYTE PTR [rdi],dh
    e131:	7f ff                	jg     e132 <__GNU_EH_FRAME_HDR+0x126>
    e133:	ff                   	(bad)  
    e134:	38 08                	cmp    BYTE PTR [rax],cl
    e136:	00 00                	add    BYTE PTR [rax],al
    e138:	60                   	(bad)  
    e139:	7f ff                	jg     e13a <__GNU_EH_FRAME_HDR+0x12e>
    e13b:	ff 58 08             	call   FWORD PTR [rax+0x8]
    e13e:	00 00                	add    BYTE PTR [rax],al
    e140:	90                   	nop
    e141:	7f ff                	jg     e142 <__GNU_EH_FRAME_HDR+0x136>
    e143:	ff                   	(bad)  
    e144:	78 08                	js     e14e <__GNU_EH_FRAME_HDR+0x142>
    e146:	00 00                	add    BYTE PTR [rax],al
    e148:	c7                   	(bad)  
    e149:	7f ff                	jg     e14a <__GNU_EH_FRAME_HDR+0x13e>
    e14b:	ff 94 08 00 00 0c 81 	call   QWORD PTR [rax+rcx*1-0x7ef40000]
    e152:	ff                   	(bad)  
    e153:	ff b4 08 00 00 6c 82 	push   QWORD PTR [rax+rcx*1-0x7d940000]
    e15a:	ff                   	(bad)  
    e15b:	ff d4                	call   rsp
    e15d:	08 00                	or     BYTE PTR [rax],al
    e15f:	00 cd                	add    ch,cl
    e161:	82                   	(bad)  
    e162:	ff                   	(bad)  
    e163:	ff f4                	push   rsp
    e165:	08 00                	or     BYTE PTR [rax],al
    e167:	00 8b 83 ff ff 14    	add    BYTE PTR [rbx+0x14ffff83],cl
    e16d:	09 00                	or     DWORD PTR [rax],eax
    e16f:	00 dd                	add    ch,bl
    e171:	85 ff                	test   edi,edi
    e173:	ff 34 09             	push   QWORD PTR [rcx+rcx*1]
    e176:	00 00                	add    BYTE PTR [rax],al
    e178:	d5                   	(bad)  
    e179:	87 ff                	xchg   edi,edi
    e17b:	ff 54 09 00          	call   QWORD PTR [rcx+rcx*1+0x0]
    e17f:	00 2f                	add    BYTE PTR [rdi],ch
    e181:	88 ff                	mov    bh,bh
    e183:	ff 74 09 00          	push   QWORD PTR [rcx+rcx*1+0x0]
    e187:	00 3e                	add    BYTE PTR [rsi],bh
    e189:	8b ff                	mov    edi,edi
    e18b:	ff 94 09 00 00 8f 8f 	call   QWORD PTR [rcx+rcx*1-0x70710000]
    e192:	ff                   	(bad)  
    e193:	ff b4 09 00 00 b9 8f 	push   QWORD PTR [rcx+rcx*1-0x70470000]
    e19a:	ff                   	(bad)  
    e19b:	ff d0                	call   rax
    e19d:	09 00                	or     DWORD PTR [rax],eax
    e19f:	00 6b 91             	add    BYTE PTR [rbx-0x6f],ch
    e1a2:	ff                   	(bad)  
    e1a3:	ff f4                	push   rsp
    e1a5:	09 00                	or     DWORD PTR [rax],eax
    e1a7:	00 82 91 ff ff 14    	add    BYTE PTR [rdx+0x14ffff91],al
    e1ad:	0a 00                	or     al,BYTE PTR [rax]
    e1af:	00 d1                	add    cl,dl
    e1b1:	91                   	xchg   ecx,eax
    e1b2:	ff                   	(bad)  
    e1b3:	ff 34 0a             	push   QWORD PTR [rdx+rcx*1]
    e1b6:	00 00                	add    BYTE PTR [rax],al
    e1b8:	1e                   	(bad)  
    e1b9:	92                   	xchg   edx,eax
    e1ba:	ff                   	(bad)  
    e1bb:	ff 54 0a 00          	call   QWORD PTR [rdx+rcx*1+0x0]
    e1bf:	00 95 93 ff ff 70    	add    BYTE PTR [rbp+0x70ffff93],dl
    e1c5:	0a 00                	or     al,BYTE PTR [rax]
    e1c7:	00 1e                	add    BYTE PTR [rsi],bl
    e1c9:	94                   	xchg   esp,eax
    e1ca:	ff                   	(bad)  
    e1cb:	ff 94 0a 00 00 0c 96 	call   QWORD PTR [rdx+rcx*1-0x69f40000]
    e1d2:	ff                   	(bad)  
    e1d3:	ff b4 0a 00 00 f4 97 	push   QWORD PTR [rdx+rcx*1-0x680c0000]
    e1da:	ff                   	(bad)  
    e1db:	ff d4                	call   rsp
    e1dd:	0a 00                	or     al,BYTE PTR [rax]
    e1df:	00 60 98             	add    BYTE PTR [rax-0x68],ah
    e1e2:	ff                   	(bad)  
    e1e3:	ff f4                	push   rsp
    e1e5:	0a 00                	or     al,BYTE PTR [rax]
    e1e7:	00 d2                	add    dl,dl
    e1e9:	98                   	cwde   
    e1ea:	ff                   	(bad)  
    e1eb:	ff 14 0b             	call   QWORD PTR [rbx+rcx*1]
    e1ee:	00 00                	add    BYTE PTR [rax],al
    e1f0:	e3 99                	jrcxz  e18b <__GNU_EH_FRAME_HDR+0x17f>
    e1f2:	ff                   	(bad)  
    e1f3:	ff 34 0b             	push   QWORD PTR [rbx+rcx*1]
    e1f6:	00 00                	add    BYTE PTR [rax],al
    e1f8:	3f                   	(bad)  
    e1f9:	9a                   	(bad)  
    e1fa:	ff                   	(bad)  
    e1fb:	ff 54 0b 00          	call   QWORD PTR [rbx+rcx*1+0x0]
    e1ff:	00 7d 9a             	add    BYTE PTR [rbp-0x66],bh
    e202:	ff                   	(bad)  
    e203:	ff 74 0b 00          	push   QWORD PTR [rbx+rcx*1+0x0]
    e207:	00 03                	add    BYTE PTR [rbx],al
    e209:	9b                   	fwait
    e20a:	ff                   	(bad)  
    e20b:	ff 94 0b 00 00 e2 9b 	call   QWORD PTR [rbx+rcx*1-0x641e0000]
    e212:	ff                   	(bad)  
    e213:	ff b4 0b 00 00 56 9c 	push   QWORD PTR [rbx+rcx*1-0x63aa0000]
    e21a:	ff                   	(bad)  
    e21b:	ff d4                	call   rsp
    e21d:	0b 00                	or     eax,DWORD PTR [rax]
    e21f:	00 f2                	add    dl,dh
    e221:	9c                   	pushf  
    e222:	ff                   	(bad)  
    e223:	ff f4                	push   rsp
    e225:	0b 00                	or     eax,DWORD PTR [rax]
    e227:	00 1b                	add    BYTE PTR [rbx],bl
    e229:	9d                   	popf   
    e22a:	ff                   	(bad)  
    e22b:	ff 14 0c             	call   QWORD PTR [rsp+rcx*1]
    e22e:	00 00                	add    BYTE PTR [rax],al
    e230:	44 9d                	rex.R popf 
    e232:	ff                   	(bad)  
    e233:	ff 34 0c             	push   QWORD PTR [rsp+rcx*1]
    e236:	00 00                	add    BYTE PTR [rax],al
    e238:	97                   	xchg   edi,eax
    e239:	9e                   	sahf   
    e23a:	ff                   	(bad)  
    e23b:	ff 5c 0c 00          	call   FWORD PTR [rsp+rcx*1+0x0]
    e23f:	00 b5 9e ff ff 7c    	add    BYTE PTR [rbp+0x7cffff9e],dh
    e245:	0c 00                	or     al,0x0
    e247:	00 18                	add    BYTE PTR [rax],bl
    e249:	a0 ff ff 9c 0c 00 00 	movabs al,ds:0xa22600000c9cffff
    e250:	26 a2 
    e252:	ff                   	(bad)  
    e253:	ff cc                	dec    esp
    e255:	0c 00                	or     al,0x0
    e257:	00 d8                	add    al,bl
    e259:	a2 ff ff ec 0c 00 00 	movabs ds:0xa37d00000cecffff,al
    e260:	7d a3 
    e262:	ff                   	(bad)  
    e263:	ff 0c 0d 00 00 11 a4 	dec    DWORD PTR [rcx*1-0x5bef0000]
    e26a:	ff                   	(bad)  
    e26b:	ff 34 0d 00 00 e6 a4 	push   QWORD PTR [rcx*1-0x5b1a0000]
    e272:	ff                   	(bad)  
    e273:	ff 54 0d 00          	call   QWORD PTR [rbp+rcx*1+0x0]
    e277:	00 c5                	add    ch,al
    e279:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    e27a:	ff                   	(bad)  
    e27b:	ff 74 0d 00          	push   QWORD PTR [rbp+rcx*1+0x0]
    e27f:	00 42 a6             	add    BYTE PTR [rdx-0x5a],al
    e282:	ff                   	(bad)  
    e283:	ff 94 0d 00 00 78 a7 	call   QWORD PTR [rbp+rcx*1-0x58880000]
    e28a:	ff                   	(bad)  
    e28b:	ff b4 0d 00 00 f6 a7 	push   QWORD PTR [rbp+rcx*1-0x580a0000]
    e292:	ff                   	(bad)  
    e293:	ff d4                	call   rsp
    e295:	0d 00 00 20 aa       	or     eax,0xaa200000
    e29a:	ff                   	(bad)  
    e29b:	ff f4                	push   rsp
    e29d:	0d 00 00 e3 aa       	or     eax,0xaae30000
    e2a2:	ff                   	(bad)  
    e2a3:	ff 14 0e             	call   QWORD PTR [rsi+rcx*1]
    e2a6:	00 00                	add    BYTE PTR [rax],al
    e2a8:	7e ac                	jle    e256 <__GNU_EH_FRAME_HDR+0x24a>
    e2aa:	ff                   	(bad)  
    e2ab:	ff 34 0e             	push   QWORD PTR [rsi+rcx*1]
    e2ae:	00 00                	add    BYTE PTR [rax],al
    e2b0:	8b ad ff ff 54 0e    	mov    ebp,DWORD PTR [rbp+0xe54ffff]
    e2b6:	00 00                	add    BYTE PTR [rax],al
    e2b8:	f1                   	icebp  
    e2b9:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    e2ba:	ff                   	(bad)  
    e2bb:	ff 74 0e 00          	push   QWORD PTR [rsi+rcx*1+0x0]
    e2bf:	00 66 ae             	add    BYTE PTR [rsi-0x52],ah
    e2c2:	ff                   	(bad)  
    e2c3:	ff 94 0e 00 00 41 af 	call   QWORD PTR [rsi+rcx*1-0x50bf0000]
    e2ca:	ff                   	(bad)  
    e2cb:	ff b4 0e 00 00 b3 b0 	push   QWORD PTR [rsi+rcx*1-0x4f4d0000]
    e2d2:	ff                   	(bad)  
    e2d3:	ff d4                	call   rsp
    e2d5:	0e                   	(bad)  
    e2d6:	00 00                	add    BYTE PTR [rax],al
    e2d8:	1f                   	(bad)  
    e2d9:	b1 ff                	mov    cl,0xff
    e2db:	ff f4                	push   rsp
    e2dd:	0e                   	(bad)  
    e2de:	00 00                	add    BYTE PTR [rax],al
    e2e0:	9f                   	lahf   
    e2e1:	b1 ff                	mov    cl,0xff
    e2e3:	ff 14 0f             	call   QWORD PTR [rdi+rcx*1]
    e2e6:	00 00                	add    BYTE PTR [rax],al
    e2e8:	b5 b1                	mov    ch,0xb1
    e2ea:	ff                   	(bad)  
    e2eb:	ff 34 0f             	push   QWORD PTR [rdi+rcx*1]
    e2ee:	00 00                	add    BYTE PTR [rax],al
    e2f0:	ef                   	out    dx,eax
    e2f1:	b2 ff                	mov    dl,0xff
    e2f3:	ff 58 0f             	call   FWORD PTR [rax+0xf]
    e2f6:	00 00                	add    BYTE PTR [rax],al
    e2f8:	53                   	push   rbx
    e2f9:	b3 ff                	mov    bl,0xff
    e2fb:	ff                   	(bad)  
    e2fc:	78 0f                	js     e30d <__GNU_EH_FRAME_HDR+0x301>
    e2fe:	00 00                	add    BYTE PTR [rax],al
    e300:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    e301:	b3 ff                	mov    bl,0xff
    e303:	ff 98 0f 00 00 57    	call   FWORD PTR [rax+0x5700000f]
    e309:	b4 ff                	mov    ah,0xff
    e30b:	ff                   	(bad)  
    e30c:	b8 0f 00 00 22       	mov    eax,0x2200000f
    e311:	b5 ff                	mov    ch,0xff
    e313:	ff                   	(bad)  
    e314:	d8 0f                	fmul   DWORD PTR [rdi]
    e316:	00 00                	add    BYTE PTR [rax],al
    e318:	77 b5                	ja     e2cf <__GNU_EH_FRAME_HDR+0x2c3>
    e31a:	ff                   	(bad)  
    e31b:	ff                   	(bad)  
    e31c:	f8                   	clc    
    e31d:	0f 00 00             	sldt   WORD PTR [rax]
    e320:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    e321:	b5 ff                	mov    ch,0xff
    e323:	ff 18                	call   FWORD PTR [rax]
    e325:	10 00                	adc    BYTE PTR [rax],al
    e327:	00 0e                	add    BYTE PTR [rsi],cl
    e329:	b6 ff                	mov    dh,0xff
    e32b:	ff                   	(bad)  
    e32c:	38 10                	cmp    BYTE PTR [rax],dl
    e32e:	00 00                	add    BYTE PTR [rax],al
    e330:	1a c5                	sbb    al,ch
    e332:	ff                   	(bad)  
    e333:	ff 5c 10 00          	call   FWORD PTR [rax+rdx*1+0x0]
    e337:	00 60 c5             	add    BYTE PTR [rax-0x3b],ah
    e33a:	ff                   	(bad)  
    e33b:	ff                   	(bad)  
    e33c:	7c 10                	jl     e34e <__GNU_EH_FRAME_HDR+0x342>
    e33e:	00 00                	add    BYTE PTR [rax],al
    e340:	9b                   	fwait
    e341:	c7                   	(bad)  
    e342:	ff                   	(bad)  
    e343:	ff a4 10 00 00 40 c9 	jmp    QWORD PTR [rax+rdx*1-0x36c00000]
    e34a:	ff                   	(bad)  
    e34b:	ff c4                	inc    esp
    e34d:	10 00                	adc    BYTE PTR [rax],al
    e34f:	00 52 ca             	add    BYTE PTR [rdx-0x36],dl
    e352:	ff                   	(bad)  
    e353:	ff e4                	jmp    rsp
    e355:	10 00                	adc    BYTE PTR [rax],al
    e357:	00 0e                	add    BYTE PTR [rsi],cl
    e359:	cb                   	retf   
    e35a:	ff                   	(bad)  
    e35b:	ff 0c 11             	dec    DWORD PTR [rcx+rdx*1]
    e35e:	00 00                	add    BYTE PTR [rax],al
    e360:	a9 cc ff ff 34       	test   eax,0x34ffffcc
    e365:	11 00                	adc    DWORD PTR [rax],eax
    e367:	00 4e cd             	add    BYTE PTR [rsi-0x33],cl
    e36a:	ff                   	(bad)  
    e36b:	ff 54 11 00          	call   QWORD PTR [rcx+rdx*1+0x0]
    e36f:	00 91 ce ff ff 74    	add    BYTE PTR [rcx+0x74ffffce],dl
    e375:	11 00                	adc    DWORD PTR [rax],eax
    e377:	00 84 cf ff ff 94 11 	add    BYTE PTR [rdi+rcx*8+0x1194ffff],al
    e37e:	00 00                	add    BYTE PTR [rax],al
    e380:	f4                   	hlt    
    e381:	cf                   	iret   
    e382:	ff                   	(bad)  
    e383:	ff b4 11 00 00 99 d2 	push   QWORD PTR [rcx+rdx*1-0x2d670000]
    e38a:	ff                   	(bad)  
    e38b:	ff d4                	call   rsp
    e38d:	11 00                	adc    DWORD PTR [rax],eax
    e38f:	00 03                	add    BYTE PTR [rbx],al
    e391:	d3 ff                	sar    edi,cl
    e393:	ff f4                	push   rsp
    e395:	11 00                	adc    DWORD PTR [rax],eax
    e397:	00 71 d3             	add    BYTE PTR [rcx-0x2d],dh
    e39a:	ff                   	(bad)  
    e39b:	ff 14 12             	call   QWORD PTR [rdx+rdx*1]
	...

Disassembly of section .eh_frame:

000000000000e3a0 <__FRAME_END__-0xea4>:
    e3a0:	14 00                	adc    al,0x0
    e3a2:	00 00                	add    BYTE PTR [rax],al
    e3a4:	00 00                	add    BYTE PTR [rax],al
    e3a6:	00 00                	add    BYTE PTR [rax],al
    e3a8:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    e3ab:	00 01                	add    BYTE PTR [rcx],al
    e3ad:	78 10                	js     e3bf <__GNU_EH_FRAME_HDR+0x3b3>
    e3af:	01 1b                	add    DWORD PTR [rbx],ebx
    e3b1:	0c 07                	or     al,0x7
    e3b3:	08 90 01 00 00 14    	or     BYTE PTR [rax+0x14000001],dl
    e3b9:	00 00                	add    BYTE PTR [rax],al
    e3bb:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e3be:	00 00                	add    BYTE PTR [rax],al
    e3c0:	c0 44 ff ff 26       	rol    BYTE PTR [rdi+rdi*8-0x1],0x26
    e3c5:	00 00                	add    BYTE PTR [rax],al
    e3c7:	00 00                	add    BYTE PTR [rax],al
    e3c9:	44 07                	rex.R (bad) 
    e3cb:	10 00                	adc    BYTE PTR [rax],al
    e3cd:	00 00                	add    BYTE PTR [rax],al
    e3cf:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    e3d2:	00 00                	add    BYTE PTR [rax],al
    e3d4:	34 00                	xor    al,0x0
    e3d6:	00 00                	add    BYTE PTR [rax],al
    e3d8:	48 3c ff             	rex.W cmp al,0xff
    e3db:	ff 30                	push   QWORD PTR [rax]
    e3dd:	04 00                	add    al,0x0
    e3df:	00 00                	add    BYTE PTR [rax],al
    e3e1:	0e                   	(bad)  
    e3e2:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
    e3e5:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
    e3e8:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
    e3eb:	80 00 3f             	add    BYTE PTR [rax],0x3f
    e3ee:	1a 3a                	sbb    bh,BYTE PTR [rdx]
    e3f0:	2a 33                	sub    dh,BYTE PTR [rbx]
    e3f2:	24 22                	and    al,0x22
    e3f4:	00 00                	add    BYTE PTR [rax],al
    e3f6:	00 00                	add    BYTE PTR [rax],al
    e3f8:	14 00                	adc    al,0x0
    e3fa:	00 00                	add    BYTE PTR [rax],al
    e3fc:	5c                   	pop    rsp
    e3fd:	00 00                	add    BYTE PTR [rax],al
    e3ff:	00 50 40             	add    BYTE PTR [rax+0x40],dl
    e402:	ff                   	(bad)  
    e403:	ff 10                	call   QWORD PTR [rax]
	...
    e40d:	00 00                	add    BYTE PTR [rax],al
    e40f:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    e412:	00 00                	add    BYTE PTR [rax],al
    e414:	74 00                	je     e416 <__GNU_EH_FRAME_HDR+0x40a>
    e416:	00 00                	add    BYTE PTR [rax],al
    e418:	48                   	rex.W
    e419:	40 ff                	rex (bad) 
    e41b:	ff 20                	jmp    QWORD PTR [rax]
    e41d:	04 00                	add    al,0x0
	...
    e427:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e42a:	00 00                	add    BYTE PTR [rax],al
    e42c:	8c 00                	mov    WORD PTR [rax],es
    e42e:	00 00                	add    BYTE PTR [rax],al
    e430:	39 45 ff             	cmp    DWORD PTR [rbp-0x1],eax
    e433:	ff                   	(bad)  
    e434:	3a 00                	cmp    al,BYTE PTR [rax]
    e436:	00 00                	add    BYTE PTR [rax],al
    e438:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e43b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e441:	71 0c                	jno    e44f <__GNU_EH_FRAME_HDR+0x443>
    e443:	07                   	(bad)  
    e444:	08 00                	or     BYTE PTR [rax],al
    e446:	00 00                	add    BYTE PTR [rax],al
    e448:	24 00                	and    al,0x0
    e44a:	00 00                	add    BYTE PTR [rax],al
    e44c:	ac                   	lods   al,BYTE PTR ds:[rsi]
    e44d:	00 00                	add    BYTE PTR [rax],al
    e44f:	00 53 45             	add    BYTE PTR [rbx+0x45],dl
    e452:	ff                   	(bad)  
    e453:	ff 4c 01 00          	dec    DWORD PTR [rcx+rax*1+0x0]
    e457:	00 00                	add    BYTE PTR [rax],al
    e459:	45 0e                	rex.RB (bad) 
    e45b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e461:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    e465:	3e 01 0c 07          	ds add DWORD PTR [rdi+rax*1],ecx
    e469:	08 00                	or     BYTE PTR [rax],al
    e46b:	00 00                	add    BYTE PTR [rax],al
    e46d:	00 00                	add    BYTE PTR [rax],al
    e46f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e472:	00 00                	add    BYTE PTR [rax],al
    e474:	d4                   	(bad)  
    e475:	00 00                	add    BYTE PTR [rax],al
    e477:	00 77 46             	add    BYTE PTR [rdi+0x46],dh
    e47a:	ff                   	(bad)  
    e47b:	ff f4                	push   rsp
    e47d:	02 00                	add    al,BYTE PTR [rax]
    e47f:	00 00                	add    BYTE PTR [rax],al
    e481:	45 0e                	rex.RB (bad) 
    e483:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e489:	03 eb                	add    ebp,ebx
    e48b:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    e48e:	08 00                	or     BYTE PTR [rax],al
    e490:	1c 00                	sbb    al,0x0
    e492:	00 00                	add    BYTE PTR [rax],al
    e494:	f4                   	hlt    
    e495:	00 00                	add    BYTE PTR [rax],al
    e497:	00 4b 49             	add    BYTE PTR [rbx+0x49],cl
    e49a:	ff                   	(bad)  
    e49b:	ff 13                	call   QWORD PTR [rbx]
    e49d:	01 00                	add    DWORD PTR [rax],eax
    e49f:	00 00                	add    BYTE PTR [rax],al
    e4a1:	45 0e                	rex.RB (bad) 
    e4a3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e4a9:	03 0a                	add    ecx,DWORD PTR [rdx]
    e4ab:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    e4ae:	08 00                	or     BYTE PTR [rax],al
    e4b0:	1c 00                	sbb    al,0x0
    e4b2:	00 00                	add    BYTE PTR [rax],al
    e4b4:	14 01                	adc    al,0x1
    e4b6:	00 00                	add    BYTE PTR [rax],al
    e4b8:	3e 4a ff             	ds rex.WX (bad) 
    e4bb:	ff ae 00 00 00 00    	jmp    FWORD PTR [rsi+0x0]
    e4c1:	45 0e                	rex.RB (bad) 
    e4c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e4c9:	02 a5 0c 07 08 00    	add    ah,BYTE PTR [rbp+0x8070c]
    e4cf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e4d2:	00 00                	add    BYTE PTR [rax],al
    e4d4:	34 01                	xor    al,0x1
    e4d6:	00 00                	add    BYTE PTR [rax],al
    e4d8:	cc                   	int3   
    e4d9:	4a ff                	rex.WX (bad) 
    e4db:	ff a6 00 00 00 00    	jmp    QWORD PTR [rsi+0x0]
    e4e1:	45 0e                	rex.RB (bad) 
    e4e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e4e9:	02 9d 0c 07 08 00    	add    bl,BYTE PTR [rbp+0x8070c]
    e4ef:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e4f2:	00 00                	add    BYTE PTR [rax],al
    e4f4:	54                   	push   rsp
    e4f5:	01 00                	add    DWORD PTR [rax],eax
    e4f7:	00 52 4b             	add    BYTE PTR [rdx+0x4b],dl
    e4fa:	ff                   	(bad)  
    e4fb:	ff 95 00 00 00 00    	call   QWORD PTR [rbp+0x0]
    e501:	45 0e                	rex.RB (bad) 
    e503:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e509:	02 8c 0c 07 08 00 00 	add    cl,BYTE PTR [rsp+rcx*1+0x807]
    e510:	1c 00                	sbb    al,0x0
    e512:	00 00                	add    BYTE PTR [rax],al
    e514:	74 01                	je     e517 <__GNU_EH_FRAME_HDR+0x50b>
    e516:	00 00                	add    BYTE PTR [rax],al
    e518:	c7                   	(bad)  
    e519:	4b ff                	rex.WXB (bad) 
    e51b:	ff 94 00 00 00 00 45 	call   QWORD PTR [rax+rax*1+0x45000000]
    e522:	0e                   	(bad)  
    e523:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e529:	02 8b 0c 07 08 00    	add    cl,BYTE PTR [rbx+0x8070c]
    e52f:	00 28                	add    BYTE PTR [rax],ch
    e531:	00 00                	add    BYTE PTR [rax],al
    e533:	00 94 01 00 00 3b 4c 	add    BYTE PTR [rcx+rax*1+0x4c3b0000],dl
    e53a:	ff                   	(bad)  
    e53b:	ff cc                	dec    esp
    e53d:	01 00                	add    DWORD PTR [rax],eax
    e53f:	00 00                	add    BYTE PTR [rax],al
    e541:	45 0e                	rex.RB (bad) 
    e543:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e549:	4d 8f 03             	rex.WRB pop QWORD PTR [r11]
    e54c:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
    e553:	07                   	(bad)  
    e554:	03 b6 01 0c 07 08    	add    esi,DWORD PTR [rsi+0x8070c01]
    e55a:	00 00                	add    BYTE PTR [rax],al
    e55c:	20 00                	and    BYTE PTR [rax],al
    e55e:	00 00                	add    BYTE PTR [rax],al
    e560:	c0 01 00             	rol    BYTE PTR [rcx],0x0
    e563:	00 db                	add    bl,bl
    e565:	4d ff                	rex.WRB (bad) 
    e567:	ff d4                	call   rsp
    e569:	00 00                	add    BYTE PTR [rax],al
    e56b:	00 00                	add    BYTE PTR [rax],al
    e56d:	45 0e                	rex.RB (bad) 
    e56f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e575:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    e579:	c6                   	(bad)  
    e57a:	0c 07                	or     al,0x7
    e57c:	08 00                	or     BYTE PTR [rax],al
    e57e:	00 00                	add    BYTE PTR [rax],al
    e580:	20 00                	and    BYTE PTR [rax],al
    e582:	00 00                	add    BYTE PTR [rax],al
    e584:	e4 01                	in     al,0x1
    e586:	00 00                	add    BYTE PTR [rax],al
    e588:	8b 4e ff             	mov    ecx,DWORD PTR [rsi-0x1]
    e58b:	ff c7                	inc    edi
    e58d:	00 00                	add    BYTE PTR [rax],al
    e58f:	00 00                	add    BYTE PTR [rax],al
    e591:	45 0e                	rex.RB (bad) 
    e593:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e599:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    e59d:	b9 0c 07 08 00       	mov    ecx,0x8070c
    e5a2:	00 00                	add    BYTE PTR [rax],al
    e5a4:	1c 00                	sbb    al,0x0
    e5a6:	00 00                	add    BYTE PTR [rax],al
    e5a8:	08 02                	or     BYTE PTR [rdx],al
    e5aa:	00 00                	add    BYTE PTR [rax],al
    e5ac:	2e 4f ff             	cs rex.WRXB (bad) 
    e5af:	ff 53 00             	call   QWORD PTR [rbx+0x0]
    e5b2:	00 00                	add    BYTE PTR [rax],al
    e5b4:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e5b7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e5bd:	02 4a 0c             	add    cl,BYTE PTR [rdx+0xc]
    e5c0:	07                   	(bad)  
    e5c1:	08 00                	or     BYTE PTR [rax],al
    e5c3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e5c6:	00 00                	add    BYTE PTR [rax],al
    e5c8:	28 02                	sub    BYTE PTR [rdx],al
    e5ca:	00 00                	add    BYTE PTR [rax],al
    e5cc:	61                   	(bad)  
    e5cd:	4f ff                	rex.WRXB (bad) 
    e5cf:	ff 33                	push   QWORD PTR [rbx]
    e5d1:	00 00                	add    BYTE PTR [rax],al
    e5d3:	00 00                	add    BYTE PTR [rax],al
    e5d5:	45 0e                	rex.RB (bad) 
    e5d7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e5dd:	6a 0c                	push   0xc
    e5df:	07                   	(bad)  
    e5e0:	08 00                	or     BYTE PTR [rax],al
    e5e2:	00 00                	add    BYTE PTR [rax],al
    e5e4:	1c 00                	sbb    al,0x0
    e5e6:	00 00                	add    BYTE PTR [rax],al
    e5e8:	48 02 00             	rex.W add al,BYTE PTR [rax]
    e5eb:	00 74 4f ff          	add    BYTE PTR [rdi+rcx*2-0x1],dh
    e5ef:	ff 21                	jmp    QWORD PTR [rcx]
    e5f1:	00 00                	add    BYTE PTR [rax],al
    e5f3:	00 00                	add    BYTE PTR [rax],al
    e5f5:	45 0e                	rex.RB (bad) 
    e5f7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e5fd:	58                   	pop    rax
    e5fe:	0c 07                	or     al,0x7
    e600:	08 00                	or     BYTE PTR [rax],al
    e602:	00 00                	add    BYTE PTR [rax],al
    e604:	20 00                	and    BYTE PTR [rax],al
    e606:	00 00                	add    BYTE PTR [rax],al
    e608:	68 02 00 00 75       	push   0x75000002
    e60d:	4f ff                	rex.WRXB (bad) 
    e60f:	ff 68 00             	jmp    FWORD PTR [rax+0x0]
    e612:	00 00                	add    BYTE PTR [rax],al
    e614:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e617:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e61d:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    e621:	5a                   	pop    rdx
    e622:	0c 07                	or     al,0x7
    e624:	08 00                	or     BYTE PTR [rax],al
    e626:	00 00                	add    BYTE PTR [rax],al
    e628:	1c 00                	sbb    al,0x0
    e62a:	00 00                	add    BYTE PTR [rax],al
    e62c:	8c 02                	mov    WORD PTR [rdx],es
    e62e:	00 00                	add    BYTE PTR [rax],al
    e630:	b9 4f ff ff 25       	mov    ecx,0x25ffff4f
    e635:	04 00                	add    al,0x0
    e637:	00 00                	add    BYTE PTR [rax],al
    e639:	45 0e                	rex.RB (bad) 
    e63b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e641:	03 1c 04             	add    ebx,DWORD PTR [rsp+rax*1]
    e644:	0c 07                	or     al,0x7
    e646:	08 00                	or     BYTE PTR [rax],al
    e648:	1c 00                	sbb    al,0x0
    e64a:	00 00                	add    BYTE PTR [rax],al
    e64c:	ac                   	lods   al,BYTE PTR ds:[rsi]
    e64d:	02 00                	add    al,BYTE PTR [rax]
    e64f:	00 be 53 ff ff 5d    	add    BYTE PTR [rsi+0x5dffff53],bh
    e655:	01 00                	add    DWORD PTR [rax],eax
    e657:	00 00                	add    BYTE PTR [rax],al
    e659:	45 0e                	rex.RB (bad) 
    e65b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e661:	03 54 01 0c          	add    edx,DWORD PTR [rcx+rax*1+0xc]
    e665:	07                   	(bad)  
    e666:	08 00                	or     BYTE PTR [rax],al
    e668:	1c 00                	sbb    al,0x0
    e66a:	00 00                	add    BYTE PTR [rax],al
    e66c:	cc                   	int3   
    e66d:	02 00                	add    al,BYTE PTR [rax]
    e66f:	00 fb                	add    bl,bh
    e671:	54                   	push   rsp
    e672:	ff                   	(bad)  
    e673:	ff 44 08 00          	inc    DWORD PTR [rax+rcx*1+0x0]
    e677:	00 00                	add    BYTE PTR [rax],al
    e679:	45 0e                	rex.RB (bad) 
    e67b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e681:	03 3b                	add    edi,DWORD PTR [rbx]
    e683:	08 0c 07             	or     BYTE PTR [rdi+rax*1],cl
    e686:	08 00                	or     BYTE PTR [rax],al
    e688:	24 00                	and    al,0x0
    e68a:	00 00                	add    BYTE PTR [rax],al
    e68c:	ec                   	in     al,dx
    e68d:	02 00                	add    al,BYTE PTR [rax]
    e68f:	00 1f                	add    BYTE PTR [rdi],bl
    e691:	5d                   	pop    rbp
    e692:	ff                   	(bad)  
    e693:	ff 93 08 00 00 00    	call   QWORD PTR [rbx+0x8]
    e699:	45 0e                	rex.RB (bad) 
    e69b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e6a1:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    e6a5:	82                   	(bad)  
    e6a6:	08 0c 07             	or     BYTE PTR [rdi+rax*1],cl
    e6a9:	08 00                	or     BYTE PTR [rax],al
    e6ab:	00 00                	add    BYTE PTR [rax],al
    e6ad:	00 00                	add    BYTE PTR [rax],al
    e6af:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e6b2:	00 00                	add    BYTE PTR [rax],al
    e6b4:	14 03                	adc    al,0x3
    e6b6:	00 00                	add    BYTE PTR [rax],al
    e6b8:	8a 65 ff             	mov    ah,BYTE PTR [rbp-0x1]
    e6bb:	ff 55 01             	call   QWORD PTR [rbp+0x1]
    e6be:	00 00                	add    BYTE PTR [rax],al
    e6c0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e6c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e6c9:	03 4c 01 0c          	add    ecx,DWORD PTR [rcx+rax*1+0xc]
    e6cd:	07                   	(bad)  
    e6ce:	08 00                	or     BYTE PTR [rax],al
    e6d0:	1c 00                	sbb    al,0x0
    e6d2:	00 00                	add    BYTE PTR [rax],al
    e6d4:	34 03                	xor    al,0x3
    e6d6:	00 00                	add    BYTE PTR [rax],al
    e6d8:	bf 66 ff ff ff       	mov    edi,0xffffff66
    e6dd:	00 00                	add    BYTE PTR [rax],al
    e6df:	00 00                	add    BYTE PTR [rax],al
    e6e1:	45 0e                	rex.RB (bad) 
    e6e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e6e9:	02 f6                	add    dh,dh
    e6eb:	0c 07                	or     al,0x7
    e6ed:	08 00                	or     BYTE PTR [rax],al
    e6ef:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e6f2:	00 00                	add    BYTE PTR [rax],al
    e6f4:	54                   	push   rsp
    e6f5:	03 00                	add    eax,DWORD PTR [rax]
    e6f7:	00 9e 67 ff ff ec    	add    BYTE PTR [rsi-0x13000099],bl
    e6fd:	00 00                	add    BYTE PTR [rax],al
    e6ff:	00 00                	add    BYTE PTR [rax],al
    e701:	45 0e                	rex.RB (bad) 
    e703:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e709:	02 e3                	add    ah,bl
    e70b:	0c 07                	or     al,0x7
    e70d:	08 00                	or     BYTE PTR [rax],al
    e70f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e712:	00 00                	add    BYTE PTR [rax],al
    e714:	74 03                	je     e719 <__GNU_EH_FRAME_HDR+0x70d>
    e716:	00 00                	add    BYTE PTR [rax],al
    e718:	6a 68                	push   0x68
    e71a:	ff                   	(bad)  
    e71b:	ff b2 03 00 00 00    	push   QWORD PTR [rdx+0x3]
    e721:	45 0e                	rex.RB (bad) 
    e723:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e729:	03 a9 03 0c 07 08    	add    ebp,DWORD PTR [rcx+0x8070c03]
    e72f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e732:	00 00                	add    BYTE PTR [rax],al
    e734:	94                   	xchg   esp,eax
    e735:	03 00                	add    eax,DWORD PTR [rax]
    e737:	00 fc                	add    ah,bh
    e739:	6b ff ff             	imul   edi,edi,0xffffffff
    e73c:	83 00 00             	add    DWORD PTR [rax],0x0
    e73f:	00 00                	add    BYTE PTR [rax],al
    e741:	45 0e                	rex.RB (bad) 
    e743:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e749:	02 7a 0c             	add    bh,BYTE PTR [rdx+0xc]
    e74c:	07                   	(bad)  
    e74d:	08 00                	or     BYTE PTR [rax],al
    e74f:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    e752:	00 00                	add    BYTE PTR [rax],al
    e754:	b4 03                	mov    ah,0x3
    e756:	00 00                	add    BYTE PTR [rax],al
    e758:	5f                   	pop    rdi
    e759:	6c                   	ins    BYTE PTR es:[rdi],dx
    e75a:	ff                   	(bad)  
    e75b:	ff 2a                	jmp    FWORD PTR [rdx]
    e75d:	02 00                	add    al,BYTE PTR [rax]
    e75f:	00 00                	add    BYTE PTR [rax],al
    e761:	45 0e                	rex.RB (bad) 
    e763:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e769:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    e76d:	19 02                	sbb    DWORD PTR [rdx],eax
    e76f:	0c 07                	or     al,0x7
    e771:	08 00                	or     BYTE PTR [rax],al
    e773:	00 00                	add    BYTE PTR [rax],al
    e775:	00 00                	add    BYTE PTR [rax],al
    e777:	00 20                	add    BYTE PTR [rax],ah
    e779:	00 00                	add    BYTE PTR [rax],al
    e77b:	00 dc                	add    ah,bl
    e77d:	03 00                	add    eax,DWORD PTR [rax]
    e77f:	00 61 6e             	add    BYTE PTR [rcx+0x6e],ah
    e782:	ff                   	(bad)  
    e783:	ff                   	(bad)  
    e784:	3d 02 00 00 00       	cmp    eax,0x2
    e789:	45 0e                	rex.RB (bad) 
    e78b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e791:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    e795:	2f                   	(bad)  
    e796:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    e799:	08 00                	or     BYTE PTR [rax],al
    e79b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e79e:	00 00                	add    BYTE PTR [rax],al
    e7a0:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    e7a3:	00 7a 70             	add    BYTE PTR [rdx+0x70],bh
    e7a6:	ff                   	(bad)  
    e7a7:	ff 66 00             	jmp    QWORD PTR [rsi+0x0]
    e7aa:	00 00                	add    BYTE PTR [rax],al
    e7ac:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e7af:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e7b5:	02 5d 0c             	add    bl,BYTE PTR [rbp+0xc]
    e7b8:	07                   	(bad)  
    e7b9:	08 00                	or     BYTE PTR [rax],al
    e7bb:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e7be:	00 00                	add    BYTE PTR [rax],al
    e7c0:	20 04 00             	and    BYTE PTR [rax+rax*1],al
    e7c3:	00 c0                	add    al,al
    e7c5:	70 ff                	jo     e7c6 <__GNU_EH_FRAME_HDR+0x7ba>
    e7c7:	ff 17                	call   QWORD PTR [rdi]
    e7c9:	00 00                	add    BYTE PTR [rax],al
    e7cb:	00 00                	add    BYTE PTR [rax],al
    e7cd:	45 0e                	rex.RB (bad) 
    e7cf:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e7d5:	4e 0c 07             	rex.WRX or al,0x7
    e7d8:	08 00                	or     BYTE PTR [rax],al
    e7da:	00 00                	add    BYTE PTR [rax],al
    e7dc:	20 00                	and    BYTE PTR [rax],al
    e7de:	00 00                	add    BYTE PTR [rax],al
    e7e0:	40 04 00             	rex add al,0x0
    e7e3:	00 b7 70 ff ff 51    	add    BYTE PTR [rdi+0x51ffff70],dh
    e7e9:	00 00                	add    BYTE PTR [rax],al
    e7eb:	00 00                	add    BYTE PTR [rax],al
    e7ed:	45 0e                	rex.RB (bad) 
    e7ef:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e7f5:	02 48 0c             	add    cl,BYTE PTR [rax+0xc]
    e7f8:	07                   	(bad)  
    e7f9:	08 00                	or     BYTE PTR [rax],al
    e7fb:	00 00                	add    BYTE PTR [rax],al
    e7fd:	00 00                	add    BYTE PTR [rax],al
    e7ff:	00 20                	add    BYTE PTR [rax],ah
    e801:	00 00                	add    BYTE PTR [rax],al
    e803:	00 64 04 00          	add    BYTE PTR [rsp+rax*1+0x0],ah
    e807:	00 e4                	add    ah,ah
    e809:	70 ff                	jo     e80a <__GNU_EH_FRAME_HDR+0x7fe>
    e80b:	ff                   	(bad)  
    e80c:	3d 06 00 00 00       	cmp    eax,0x6
    e811:	45 0e                	rex.RB (bad) 
    e813:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e819:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    e81d:	2f                   	(bad)  
    e81e:	06                   	(bad)  
    e81f:	0c 07                	or     al,0x7
    e821:	08 00                	or     BYTE PTR [rax],al
    e823:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e826:	00 00                	add    BYTE PTR [rax],al
    e828:	88 04 00             	mov    BYTE PTR [rax+rax*1],al
    e82b:	00 fd                	add    ch,bh
    e82d:	76 ff                	jbe    e82e <__GNU_EH_FRAME_HDR+0x822>
    e82f:	ff 1a                	call   FWORD PTR [rdx]
    e831:	00 00                	add    BYTE PTR [rax],al
    e833:	00 00                	add    BYTE PTR [rax],al
    e835:	45 0e                	rex.RB (bad) 
    e837:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e83d:	51                   	push   rcx
    e83e:	0c 07                	or     al,0x7
    e840:	08 00                	or     BYTE PTR [rax],al
    e842:	00 00                	add    BYTE PTR [rax],al
    e844:	1c 00                	sbb    al,0x0
    e846:	00 00                	add    BYTE PTR [rax],al
    e848:	a8 04                	test   al,0x4
    e84a:	00 00                	add    BYTE PTR [rax],al
    e84c:	f7 76 ff             	div    DWORD PTR [rsi-0x1]
    e84f:	ff 29                	jmp    FWORD PTR [rcx]
    e851:	00 00                	add    BYTE PTR [rax],al
    e853:	00 00                	add    BYTE PTR [rax],al
    e855:	45 0e                	rex.RB (bad) 
    e857:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e85d:	60                   	(bad)  
    e85e:	0c 07                	or     al,0x7
    e860:	08 00                	or     BYTE PTR [rax],al
    e862:	00 00                	add    BYTE PTR [rax],al
    e864:	1c 00                	sbb    al,0x0
    e866:	00 00                	add    BYTE PTR [rax],al
    e868:	c8 04 00 00          	enter  0x4,0x0
    e86c:	00 77 ff             	add    BYTE PTR [rdi-0x1],dh
    e86f:	ff 30                	push   QWORD PTR [rax]
    e871:	00 00                	add    BYTE PTR [rax],al
    e873:	00 00                	add    BYTE PTR [rax],al
    e875:	45 0e                	rex.RB (bad) 
    e877:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e87d:	67 0c 07             	addr32 or al,0x7
    e880:	08 00                	or     BYTE PTR [rax],al
    e882:	00 00                	add    BYTE PTR [rax],al
    e884:	18 00                	sbb    BYTE PTR [rax],al
    e886:	00 00                	add    BYTE PTR [rax],al
    e888:	e8 04 00 00 10       	call   1000e891 <_end+0xfed3889>
    e88d:	77 ff                	ja     e88e <__GNU_EH_FRAME_HDR+0x882>
    e88f:	ff 37                	push   QWORD PTR [rdi]
    e891:	00 00                	add    BYTE PTR [rax],al
    e893:	00 00                	add    BYTE PTR [rax],al
    e895:	45 0e                	rex.RB (bad) 
    e897:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e89d:	00 00                	add    BYTE PTR [rax],al
    e89f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e8a2:	00 00                	add    BYTE PTR [rax],al
    e8a4:	04 05                	add    al,0x5
    e8a6:	00 00                	add    BYTE PTR [rax],al
    e8a8:	2b 77 ff             	sub    esi,DWORD PTR [rdi-0x1]
    e8ab:	ff 45 01             	inc    DWORD PTR [rbp+0x1]
    e8ae:	00 00                	add    BYTE PTR [rax],al
    e8b0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e8b3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e8b9:	03 3c 01             	add    edi,DWORD PTR [rcx+rax*1]
    e8bc:	0c 07                	or     al,0x7
    e8be:	08 00                	or     BYTE PTR [rax],al
    e8c0:	1c 00                	sbb    al,0x0
    e8c2:	00 00                	add    BYTE PTR [rax],al
    e8c4:	24 05                	and    al,0x5
    e8c6:	00 00                	add    BYTE PTR [rax],al
    e8c8:	50                   	push   rax
    e8c9:	78 ff                	js     e8ca <__GNU_EH_FRAME_HDR+0x8be>
    e8cb:	ff 60 01             	jmp    QWORD PTR [rax+0x1]
    e8ce:	00 00                	add    BYTE PTR [rax],al
    e8d0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e8d3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e8d9:	03 57 01             	add    edx,DWORD PTR [rdi+0x1]
    e8dc:	0c 07                	or     al,0x7
    e8de:	08 00                	or     BYTE PTR [rax],al
    e8e0:	1c 00                	sbb    al,0x0
    e8e2:	00 00                	add    BYTE PTR [rax],al
    e8e4:	44 05 00 00 90 79    	rex.R add eax,0x79900000
    e8ea:	ff                   	(bad)  
    e8eb:	ff 61 00             	jmp    QWORD PTR [rcx+0x0]
    e8ee:	00 00                	add    BYTE PTR [rax],al
    e8f0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e8f3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e8f9:	02 58 0c             	add    bl,BYTE PTR [rax+0xc]
    e8fc:	07                   	(bad)  
    e8fd:	08 00                	or     BYTE PTR [rax],al
    e8ff:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e902:	00 00                	add    BYTE PTR [rax],al
    e904:	64 05 00 00 d1 79    	fs add eax,0x79d10000
    e90a:	ff                   	(bad)  
    e90b:	ff                   	(bad)  
    e90c:	be 00 00 00 00       	mov    esi,0x0
    e911:	45 0e                	rex.RB (bad) 
    e913:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e919:	02 b5 0c 07 08 00    	add    dh,BYTE PTR [rbp+0x8070c]
    e91f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e922:	00 00                	add    BYTE PTR [rax],al
    e924:	84 05 00 00 6f 7a    	test   BYTE PTR [rip+0x7a6f0000],al        # 7a6fe92a <_end+0x7a5c3922>
    e92a:	ff                   	(bad)  
    e92b:	ff 52 02             	call   QWORD PTR [rdx+0x2]
    e92e:	00 00                	add    BYTE PTR [rax],al
    e930:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e933:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e939:	03 49 02             	add    ecx,DWORD PTR [rcx+0x2]
    e93c:	0c 07                	or     al,0x7
    e93e:	08 00                	or     BYTE PTR [rax],al
    e940:	1c 00                	sbb    al,0x0
    e942:	00 00                	add    BYTE PTR [rax],al
    e944:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    e945:	05 00 00 a1 7c       	add    eax,0x7ca10000
    e94a:	ff                   	(bad)  
    e94b:	ff                   	(bad)  
    e94c:	f8                   	clc    
    e94d:	01 00                	add    DWORD PTR [rax],eax
    e94f:	00 00                	add    BYTE PTR [rax],al
    e951:	45 0e                	rex.RB (bad) 
    e953:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e959:	03 ef                	add    ebp,edi
    e95b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    e95e:	08 00                	or     BYTE PTR [rax],al
    e960:	1c 00                	sbb    al,0x0
    e962:	00 00                	add    BYTE PTR [rax],al
    e964:	c4                   	(bad)  
    e965:	05 00 00 79 7e       	add    eax,0x7e790000
    e96a:	ff                   	(bad)  
    e96b:	ff 5a 00             	call   FWORD PTR [rdx+0x0]
    e96e:	00 00                	add    BYTE PTR [rax],al
    e970:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e973:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e979:	02 51 0c             	add    dl,BYTE PTR [rcx+0xc]
    e97c:	07                   	(bad)  
    e97d:	08 00                	or     BYTE PTR [rax],al
    e97f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e982:	00 00                	add    BYTE PTR [rax],al
    e984:	e4 05                	in     al,0x5
    e986:	00 00                	add    BYTE PTR [rax],al
    e988:	b3 7e                	mov    bl,0x7e
    e98a:	ff                   	(bad)  
    e98b:	ff 0f                	dec    DWORD PTR [rdi]
    e98d:	03 00                	add    eax,DWORD PTR [rax]
    e98f:	00 00                	add    BYTE PTR [rax],al
    e991:	45 0e                	rex.RB (bad) 
    e993:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e999:	03 06                	add    eax,DWORD PTR [rsi]
    e99b:	03 0c 07             	add    ecx,DWORD PTR [rdi+rax*1]
    e99e:	08 00                	or     BYTE PTR [rax],al
    e9a0:	1c 00                	sbb    al,0x0
    e9a2:	00 00                	add    BYTE PTR [rax],al
    e9a4:	04 06                	add    al,0x6
    e9a6:	00 00                	add    BYTE PTR [rax],al
    e9a8:	a2 81 ff ff 51 04 00 	movabs ds:0x451ffff81,al
    e9af:	00 00 
    e9b1:	45 0e                	rex.RB (bad) 
    e9b3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e9b9:	4a 8c 03             	rex.WX mov WORD PTR [rbx],es
    e9bc:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
    e9c0:	18 00                	sbb    BYTE PTR [rax],al
    e9c2:	00 00                	add    BYTE PTR [rax],al
    e9c4:	24 06                	and    al,0x6
    e9c6:	00 00                	add    BYTE PTR [rax],al
    e9c8:	d3 85 ff ff 2a 00    	rol    DWORD PTR [rbp+0x2affff],cl
    e9ce:	00 00                	add    BYTE PTR [rax],al
    e9d0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e9d3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e9d9:	00 00                	add    BYTE PTR [rax],al
    e9db:	00 20                	add    BYTE PTR [rax],ah
    e9dd:	00 00                	add    BYTE PTR [rax],al
    e9df:	00 40 06             	add    BYTE PTR [rax+0x6],al
    e9e2:	00 00                	add    BYTE PTR [rax],al
    e9e4:	e1 85                	loope  e96b <__GNU_EH_FRAME_HDR+0x95f>
    e9e6:	ff                   	(bad)  
    e9e7:	ff b2 01 00 00 00    	push   QWORD PTR [rdx+0x1]
    e9ed:	45 0e                	rex.RB (bad) 
    e9ef:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e9f5:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    e9f9:	a1 01 0c 07 08 00 00 	movabs eax,ds:0x1c000008070c01
    ea00:	1c 00 
    ea02:	00 00                	add    BYTE PTR [rax],al
    ea04:	64 06                	fs (bad) 
    ea06:	00 00                	add    BYTE PTR [rax],al
    ea08:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ea09:	87 ff                	xchg   edi,edi
    ea0b:	ff 17                	call   QWORD PTR [rdi]
    ea0d:	00 00                	add    BYTE PTR [rax],al
    ea0f:	00 00                	add    BYTE PTR [rax],al
    ea11:	45 0e                	rex.RB (bad) 
    ea13:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea19:	4e 0c 07             	rex.WRX or al,0x7
    ea1c:	08 00                	or     BYTE PTR [rax],al
    ea1e:	00 00                	add    BYTE PTR [rax],al
    ea20:	1c 00                	sbb    al,0x0
    ea22:	00 00                	add    BYTE PTR [rax],al
    ea24:	84 06                	test   BYTE PTR [rsi],al
    ea26:	00 00                	add    BYTE PTR [rax],al
    ea28:	66 87 ff             	xchg   di,di
    ea2b:	ff 4f 00             	dec    DWORD PTR [rdi+0x0]
    ea2e:	00 00                	add    BYTE PTR [rax],al
    ea30:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ea33:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea39:	02 46 0c             	add    al,BYTE PTR [rsi+0xc]
    ea3c:	07                   	(bad)  
    ea3d:	08 00                	or     BYTE PTR [rax],al
    ea3f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ea42:	00 00                	add    BYTE PTR [rax],al
    ea44:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    ea45:	06                   	(bad)  
    ea46:	00 00                	add    BYTE PTR [rax],al
    ea48:	95                   	xchg   ebp,eax
    ea49:	87 ff                	xchg   edi,edi
    ea4b:	ff 4d 00             	dec    DWORD PTR [rbp+0x0]
    ea4e:	00 00                	add    BYTE PTR [rax],al
    ea50:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ea53:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea59:	02 44 0c 07          	add    al,BYTE PTR [rsp+rcx*1+0x7]
    ea5d:	08 00                	or     BYTE PTR [rax],al
    ea5f:	00 18                	add    BYTE PTR [rax],bl
    ea61:	00 00                	add    BYTE PTR [rax],al
    ea63:	00 c4                	add    ah,al
    ea65:	06                   	(bad)  
    ea66:	00 00                	add    BYTE PTR [rax],al
    ea68:	c2 87 ff             	ret    0xff87
    ea6b:	ff 77 01             	push   QWORD PTR [rdi+0x1]
    ea6e:	00 00                	add    BYTE PTR [rax],al
    ea70:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ea73:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea79:	00 00                	add    BYTE PTR [rax],al
    ea7b:	00 20                	add    BYTE PTR [rax],ah
    ea7d:	00 00                	add    BYTE PTR [rax],al
    ea7f:	00 e0                	add    al,ah
    ea81:	06                   	(bad)  
    ea82:	00 00                	add    BYTE PTR [rax],al
    ea84:	1d 89 ff ff 89       	sbb    eax,0x89ffff89
    ea89:	00 00                	add    BYTE PTR [rax],al
    ea8b:	00 00                	add    BYTE PTR [rax],al
    ea8d:	45 0e                	rex.RB (bad) 
    ea8f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea95:	02 80 0c 07 08 00    	add    al,BYTE PTR [rax+0x8070c]
    ea9b:	00 00                	add    BYTE PTR [rax],al
    ea9d:	00 00                	add    BYTE PTR [rax],al
    ea9f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eaa2:	00 00                	add    BYTE PTR [rax],al
    eaa4:	04 07                	add    al,0x7
    eaa6:	00 00                	add    BYTE PTR [rax],al
    eaa8:	82                   	(bad)  
    eaa9:	89 ff                	mov    edi,edi
    eaab:	ff                   	(bad)  
    eaac:	ee                   	out    dx,al
    eaad:	01 00                	add    DWORD PTR [rax],eax
    eaaf:	00 00                	add    BYTE PTR [rax],al
    eab1:	45 0e                	rex.RB (bad) 
    eab3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eab9:	03 e5                	add    esp,ebp
    eabb:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    eabe:	08 00                	or     BYTE PTR [rax],al
    eac0:	1c 00                	sbb    al,0x0
    eac2:	00 00                	add    BYTE PTR [rax],al
    eac4:	24 07                	and    al,0x7
    eac6:	00 00                	add    BYTE PTR [rax],al
    eac8:	50                   	push   rax
    eac9:	8b ff                	mov    edi,edi
    eacb:	ff                   	(bad)  
    eacc:	e8 01 00 00 00       	call   ead2 <__GNU_EH_FRAME_HDR+0xac6>
    ead1:	45 0e                	rex.RB (bad) 
    ead3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ead9:	03 df                	add    ebx,edi
    eadb:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    eade:	08 00                	or     BYTE PTR [rax],al
    eae0:	1c 00                	sbb    al,0x0
    eae2:	00 00                	add    BYTE PTR [rax],al
    eae4:	44 07                	rex.R (bad) 
    eae6:	00 00                	add    BYTE PTR [rax],al
    eae8:	18 8d ff ff 6c 00    	sbb    BYTE PTR [rbp+0x6cffff],cl
    eaee:	00 00                	add    BYTE PTR [rax],al
    eaf0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eaf3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eaf9:	02 63 0c             	add    ah,BYTE PTR [rbx+0xc]
    eafc:	07                   	(bad)  
    eafd:	08 00                	or     BYTE PTR [rax],al
    eaff:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eb02:	00 00                	add    BYTE PTR [rax],al
    eb04:	64 07                	fs (bad) 
    eb06:	00 00                	add    BYTE PTR [rax],al
    eb08:	64 8d                	fs (bad) 
    eb0a:	ff                   	(bad)  
    eb0b:	ff 72 00             	push   QWORD PTR [rdx+0x0]
    eb0e:	00 00                	add    BYTE PTR [rax],al
    eb10:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eb13:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb19:	02 69 0c             	add    ch,BYTE PTR [rcx+0xc]
    eb1c:	07                   	(bad)  
    eb1d:	08 00                	or     BYTE PTR [rax],al
    eb1f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eb22:	00 00                	add    BYTE PTR [rax],al
    eb24:	84 07                	test   BYTE PTR [rdi],al
    eb26:	00 00                	add    BYTE PTR [rax],al
    eb28:	b6 8d                	mov    dh,0x8d
    eb2a:	ff                   	(bad)  
    eb2b:	ff 11                	call   QWORD PTR [rcx]
    eb2d:	01 00                	add    DWORD PTR [rax],eax
    eb2f:	00 00                	add    BYTE PTR [rax],al
    eb31:	45 0e                	rex.RB (bad) 
    eb33:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb39:	03 08                	add    ecx,DWORD PTR [rax]
    eb3b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    eb3e:	08 00                	or     BYTE PTR [rax],al
    eb40:	1c 00                	sbb    al,0x0
    eb42:	00 00                	add    BYTE PTR [rax],al
    eb44:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    eb45:	07                   	(bad)  
    eb46:	00 00                	add    BYTE PTR [rax],al
    eb48:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    eb49:	8e ff                	mov    ?,edi
    eb4b:	ff 5c 00 00          	call   FWORD PTR [rax+rax*1+0x0]
    eb4f:	00 00                	add    BYTE PTR [rax],al
    eb51:	45 0e                	rex.RB (bad) 
    eb53:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb59:	02 53 0c             	add    dl,BYTE PTR [rbx+0xc]
    eb5c:	07                   	(bad)  
    eb5d:	08 00                	or     BYTE PTR [rax],al
    eb5f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eb62:	00 00                	add    BYTE PTR [rax],al
    eb64:	c4                   	(bad)  
    eb65:	07                   	(bad)  
    eb66:	00 00                	add    BYTE PTR [rax],al
    eb68:	e3 8e                	jrcxz  eaf8 <__GNU_EH_FRAME_HDR+0xaec>
    eb6a:	ff                   	(bad)  
    eb6b:	ff                   	(bad)  
    eb6c:	3e 00 00             	ds add BYTE PTR [rax],al
    eb6f:	00 00                	add    BYTE PTR [rax],al
    eb71:	45 0e                	rex.RB (bad) 
    eb73:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb79:	75 0c                	jne    eb87 <__GNU_EH_FRAME_HDR+0xb7b>
    eb7b:	07                   	(bad)  
    eb7c:	08 00                	or     BYTE PTR [rax],al
    eb7e:	00 00                	add    BYTE PTR [rax],al
    eb80:	1c 00                	sbb    al,0x0
    eb82:	00 00                	add    BYTE PTR [rax],al
    eb84:	e4 07                	in     al,0x7
    eb86:	00 00                	add    BYTE PTR [rax],al
    eb88:	01 8f ff ff 86 00    	add    DWORD PTR [rdi+0x86ffff],ecx
    eb8e:	00 00                	add    BYTE PTR [rax],al
    eb90:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eb93:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb99:	02 7d 0c             	add    bh,BYTE PTR [rbp+0xc]
    eb9c:	07                   	(bad)  
    eb9d:	08 00                	or     BYTE PTR [rax],al
    eb9f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eba2:	00 00                	add    BYTE PTR [rax],al
    eba4:	04 08                	add    al,0x8
    eba6:	00 00                	add    BYTE PTR [rax],al
    eba8:	67 8f                	addr32 (bad) 
    ebaa:	ff                   	(bad)  
    ebab:	ff                   	(bad)  
    ebac:	df 00                	fild   WORD PTR [rax]
    ebae:	00 00                	add    BYTE PTR [rax],al
    ebb0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ebb3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ebb9:	02 d6                	add    dl,dh
    ebbb:	0c 07                	or     al,0x7
    ebbd:	08 00                	or     BYTE PTR [rax],al
    ebbf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ebc2:	00 00                	add    BYTE PTR [rax],al
    ebc4:	24 08                	and    al,0x8
    ebc6:	00 00                	add    BYTE PTR [rax],al
    ebc8:	26 90                	es nop
    ebca:	ff                   	(bad)  
    ebcb:	ff 74 00 00          	push   QWORD PTR [rax+rax*1+0x0]
    ebcf:	00 00                	add    BYTE PTR [rax],al
    ebd1:	45 0e                	rex.RB (bad) 
    ebd3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ebd9:	02 6b 0c             	add    ch,BYTE PTR [rbx+0xc]
    ebdc:	07                   	(bad)  
    ebdd:	08 00                	or     BYTE PTR [rax],al
    ebdf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ebe2:	00 00                	add    BYTE PTR [rax],al
    ebe4:	44 08 00             	or     BYTE PTR [rax],r8b
    ebe7:	00 7a 90             	add    BYTE PTR [rdx-0x70],bh
    ebea:	ff                   	(bad)  
    ebeb:	ff 9c 00 00 00 00 45 	call   FWORD PTR [rax+rax*1+0x45000000]
    ebf2:	0e                   	(bad)  
    ebf3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ebf9:	02 93 0c 07 08 00    	add    dl,BYTE PTR [rbx+0x8070c]
    ebff:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ec02:	00 00                	add    BYTE PTR [rax],al
    ec04:	64 08 00             	or     BYTE PTR fs:[rax],al
    ec07:	00 f6                	add    dh,dh
    ec09:	90                   	nop
    ec0a:	ff                   	(bad)  
    ec0b:	ff 29                	jmp    FWORD PTR [rcx]
    ec0d:	00 00                	add    BYTE PTR [rax],al
    ec0f:	00 00                	add    BYTE PTR [rax],al
    ec11:	45 0e                	rex.RB (bad) 
    ec13:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec19:	60                   	(bad)  
    ec1a:	0c 07                	or     al,0x7
    ec1c:	08 00                	or     BYTE PTR [rax],al
    ec1e:	00 00                	add    BYTE PTR [rax],al
    ec20:	1c 00                	sbb    al,0x0
    ec22:	00 00                	add    BYTE PTR [rax],al
    ec24:	84 08                	test   BYTE PTR [rax],cl
    ec26:	00 00                	add    BYTE PTR [rax],al
    ec28:	ff 90 ff ff 29 00    	call   QWORD PTR [rax+0x29ffff]
    ec2e:	00 00                	add    BYTE PTR [rax],al
    ec30:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ec33:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec39:	60                   	(bad)  
    ec3a:	0c 07                	or     al,0x7
    ec3c:	08 00                	or     BYTE PTR [rax],al
    ec3e:	00 00                	add    BYTE PTR [rax],al
    ec40:	24 00                	and    al,0x0
    ec42:	00 00                	add    BYTE PTR [rax],al
    ec44:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    ec45:	08 00                	or     BYTE PTR [rax],al
    ec47:	00 08                	add    BYTE PTR [rax],cl
    ec49:	91                   	xchg   ecx,eax
    ec4a:	ff                   	(bad)  
    ec4b:	ff 53 01             	call   QWORD PTR [rbx+0x1]
    ec4e:	00 00                	add    BYTE PTR [rax],al
    ec50:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ec53:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec59:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    ec5d:	45 01 0c 07          	add    DWORD PTR [r15+rax*1],r9d
    ec61:	08 00                	or     BYTE PTR [rax],al
    ec63:	00 00                	add    BYTE PTR [rax],al
    ec65:	00 00                	add    BYTE PTR [rax],al
    ec67:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ec6a:	00 00                	add    BYTE PTR [rax],al
    ec6c:	cc                   	int3   
    ec6d:	08 00                	or     BYTE PTR [rax],al
    ec6f:	00 33                	add    BYTE PTR [rbx],dh
    ec71:	92                   	xchg   edx,eax
    ec72:	ff                   	(bad)  
    ec73:	ff 1e                	call   FWORD PTR [rsi]
    ec75:	00 00                	add    BYTE PTR [rax],al
    ec77:	00 00                	add    BYTE PTR [rax],al
    ec79:	45 0e                	rex.RB (bad) 
    ec7b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec81:	55                   	push   rbp
    ec82:	0c 07                	or     al,0x7
    ec84:	08 00                	or     BYTE PTR [rax],al
    ec86:	00 00                	add    BYTE PTR [rax],al
    ec88:	1c 00                	sbb    al,0x0
    ec8a:	00 00                	add    BYTE PTR [rax],al
    ec8c:	ec                   	in     al,dx
    ec8d:	08 00                	or     BYTE PTR [rax],al
    ec8f:	00 31                	add    BYTE PTR [rcx],dh
    ec91:	92                   	xchg   edx,eax
    ec92:	ff                   	(bad)  
    ec93:	ff 63 01             	jmp    QWORD PTR [rbx+0x1]
    ec96:	00 00                	add    BYTE PTR [rax],al
    ec98:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ec9b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eca1:	03 5a 01             	add    ebx,DWORD PTR [rdx+0x1]
    eca4:	0c 07                	or     al,0x7
    eca6:	08 00                	or     BYTE PTR [rax],al
    eca8:	2c 00                	sub    al,0x0
    ecaa:	00 00                	add    BYTE PTR [rax],al
    ecac:	0c 09                	or     al,0x9
    ecae:	00 00                	add    BYTE PTR [rax],al
    ecb0:	74 93                	je     ec45 <__GNU_EH_FRAME_HDR+0xc39>
    ecb2:	ff                   	(bad)  
    ecb3:	ff 0e                	dec    DWORD PTR [rsi]
    ecb5:	02 00                	add    al,BYTE PTR [rax]
    ecb7:	00 00                	add    BYTE PTR [rax],al
    ecb9:	45 0e                	rex.RB (bad) 
    ecbb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ecc1:	50                   	push   rax
    ecc2:	8f 03                	pop    QWORD PTR [rbx]
    ecc4:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
    eccb:	07                   	(bad)  
    eccc:	03 f5                	add    esi,ebp
    ecce:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ecd1:	08 00                	or     BYTE PTR [rax],al
    ecd3:	00 00                	add    BYTE PTR [rax],al
    ecd5:	00 00                	add    BYTE PTR [rax],al
    ecd7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ecda:	00 00                	add    BYTE PTR [rax],al
    ecdc:	3c 09                	cmp    al,0x9
    ecde:	00 00                	add    BYTE PTR [rax],al
    ece0:	52                   	push   rdx
    ece1:	95                   	xchg   ebp,eax
    ece2:	ff                   	(bad)  
    ece3:	ff b2 00 00 00 00    	push   QWORD PTR [rdx+0x0]
    ece9:	45 0e                	rex.RB (bad) 
    eceb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ecf1:	02 a9 0c 07 08 00    	add    ch,BYTE PTR [rcx+0x8070c]
    ecf7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ecfa:	00 00                	add    BYTE PTR [rax],al
    ecfc:	5c                   	pop    rsp
    ecfd:	09 00                	or     DWORD PTR [rax],eax
    ecff:	00 e4                	add    ah,ah
    ed01:	95                   	xchg   ebp,eax
    ed02:	ff                   	(bad)  
    ed03:	ff a5 00 00 00 00    	jmp    QWORD PTR [rbp+0x0]
    ed09:	45 0e                	rex.RB (bad) 
    ed0b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed11:	02 9c 0c 07 08 00 00 	add    bl,BYTE PTR [rsp+rcx*1+0x807]
    ed18:	24 00                	and    al,0x0
    ed1a:	00 00                	add    BYTE PTR [rax],al
    ed1c:	7c 09                	jl     ed27 <__GNU_EH_FRAME_HDR+0xd1b>
    ed1e:	00 00                	add    BYTE PTR [rax],al
    ed20:	69 96 ff ff 94 00 00 	imul   edx,DWORD PTR [rsi+0x94ffff],0x45000000
    ed27:	00 00 45 
    ed2a:	0e                   	(bad)  
    ed2b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed31:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    ed35:	86 0c 07             	xchg   BYTE PTR [rdi+rax*1],cl
    ed38:	08 00                	or     BYTE PTR [rax],al
    ed3a:	00 00                	add    BYTE PTR [rax],al
    ed3c:	00 00                	add    BYTE PTR [rax],al
    ed3e:	00 00                	add    BYTE PTR [rax],al
    ed40:	1c 00                	sbb    al,0x0
    ed42:	00 00                	add    BYTE PTR [rax],al
    ed44:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    ed45:	09 00                	or     DWORD PTR [rax],eax
    ed47:	00 d5                	add    ch,dl
    ed49:	96                   	xchg   esi,eax
    ed4a:	ff                   	(bad)  
    ed4b:	ff d5                	call   rbp
    ed4d:	00 00                	add    BYTE PTR [rax],al
    ed4f:	00 00                	add    BYTE PTR [rax],al
    ed51:	45 0e                	rex.RB (bad) 
    ed53:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed59:	02 cc                	add    cl,ah
    ed5b:	0c 07                	or     al,0x7
    ed5d:	08 00                	or     BYTE PTR [rax],al
    ed5f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ed62:	00 00                	add    BYTE PTR [rax],al
    ed64:	c4                   	(bad)  
    ed65:	09 00                	or     DWORD PTR [rax],eax
    ed67:	00 8a 97 ff ff df    	add    BYTE PTR [rdx-0x20000069],cl
    ed6d:	00 00                	add    BYTE PTR [rax],al
    ed6f:	00 00                	add    BYTE PTR [rax],al
    ed71:	45 0e                	rex.RB (bad) 
    ed73:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed79:	02 d6                	add    dl,dh
    ed7b:	0c 07                	or     al,0x7
    ed7d:	08 00                	or     BYTE PTR [rax],al
    ed7f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ed82:	00 00                	add    BYTE PTR [rax],al
    ed84:	e4 09                	in     al,0x9
    ed86:	00 00                	add    BYTE PTR [rax],al
    ed88:	49 98                	rex.WB cdqe 
    ed8a:	ff                   	(bad)  
    ed8b:	ff                   	(bad)  
    ed8c:	7d 00                	jge    ed8e <__GNU_EH_FRAME_HDR+0xd82>
    ed8e:	00 00                	add    BYTE PTR [rax],al
    ed90:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ed93:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed99:	02 74 0c 07          	add    dh,BYTE PTR [rsp+rcx*1+0x7]
    ed9d:	08 00                	or     BYTE PTR [rax],al
    ed9f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eda2:	00 00                	add    BYTE PTR [rax],al
    eda4:	04 0a                	add    al,0xa
    eda6:	00 00                	add    BYTE PTR [rax],al
    eda8:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    eda9:	98                   	cwde   
    edaa:	ff                   	(bad)  
    edab:	ff 36                	push   QWORD PTR [rsi]
    edad:	01 00                	add    DWORD PTR [rax],eax
    edaf:	00 00                	add    BYTE PTR [rax],al
    edb1:	45 0e                	rex.RB (bad) 
    edb3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    edb9:	03 2d 01 0c 07 08    	add    ebp,DWORD PTR [rip+0x8070c01]        # 807f9c0 <_end+0x7f449b8>
    edbf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    edc2:	00 00                	add    BYTE PTR [rax],al
    edc4:	24 0a                	and    al,0xa
    edc6:	00 00                	add    BYTE PTR [rax],al
    edc8:	bc 99 ff ff 7e       	mov    esp,0x7effff99
    edcd:	00 00                	add    BYTE PTR [rax],al
    edcf:	00 00                	add    BYTE PTR [rax],al
    edd1:	45 0e                	rex.RB (bad) 
    edd3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    edd9:	02 75 0c             	add    dh,BYTE PTR [rbp+0xc]
    eddc:	07                   	(bad)  
    eddd:	08 00                	or     BYTE PTR [rax],al
    eddf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ede2:	00 00                	add    BYTE PTR [rax],al
    ede4:	44 0a 00             	or     r8b,BYTE PTR [rax]
    ede7:	00 1a                	add    BYTE PTR [rdx],bl
    ede9:	9a                   	(bad)  
    edea:	ff                   	(bad)  
    edeb:	ff 2a                	jmp    FWORD PTR [rdx]
    eded:	02 00                	add    al,BYTE PTR [rax]
    edef:	00 00                	add    BYTE PTR [rax],al
    edf1:	45 0e                	rex.RB (bad) 
    edf3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    edf9:	03 21                	add    esp,DWORD PTR [rcx]
    edfb:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    edfe:	08 00                	or     BYTE PTR [rax],al
    ee00:	1c 00                	sbb    al,0x0
    ee02:	00 00                	add    BYTE PTR [rax],al
    ee04:	64 0a 00             	or     al,BYTE PTR fs:[rax]
    ee07:	00 24 9c             	add    BYTE PTR [rsp+rbx*4],ah
    ee0a:	ff                   	(bad)  
    ee0b:	ff c3                	inc    ebx
    ee0d:	00 00                	add    BYTE PTR [rax],al
    ee0f:	00 00                	add    BYTE PTR [rax],al
    ee11:	45 0e                	rex.RB (bad) 
    ee13:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee19:	02 ba 0c 07 08 00    	add    bh,BYTE PTR [rdx+0x8070c]
    ee1f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ee22:	00 00                	add    BYTE PTR [rax],al
    ee24:	84 0a                	test   BYTE PTR [rdx],cl
    ee26:	00 00                	add    BYTE PTR [rax],al
    ee28:	c7                   	(bad)  
    ee29:	9c                   	pushf  
    ee2a:	ff                   	(bad)  
    ee2b:	ff 9b 01 00 00 00    	call   FWORD PTR [rbx+0x1]
    ee31:	45 0e                	rex.RB (bad) 
    ee33:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee39:	03 92 01 0c 07 08    	add    edx,DWORD PTR [rdx+0x8070c01]
    ee3f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ee42:	00 00                	add    BYTE PTR [rax],al
    ee44:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    ee45:	0a 00                	or     al,BYTE PTR [rax]
    ee47:	00 42 9e             	add    BYTE PTR [rdx-0x62],al
    ee4a:	ff                   	(bad)  
    ee4b:	ff 0d 01 00 00 00    	dec    DWORD PTR [rip+0x1]        # ee52 <__GNU_EH_FRAME_HDR+0xe46>
    ee51:	45 0e                	rex.RB (bad) 
    ee53:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee59:	03 04 01             	add    eax,DWORD PTR [rcx+rax*1]
    ee5c:	0c 07                	or     al,0x7
    ee5e:	08 00                	or     BYTE PTR [rax],al
    ee60:	1c 00                	sbb    al,0x0
    ee62:	00 00                	add    BYTE PTR [rax],al
    ee64:	c4                   	(bad)  
    ee65:	0a 00                	or     al,BYTE PTR [rax]
    ee67:	00 2f                	add    BYTE PTR [rdi],ch
    ee69:	9f                   	lahf   
    ee6a:	ff                   	(bad)  
    ee6b:	ff 66 00             	jmp    QWORD PTR [rsi+0x0]
    ee6e:	00 00                	add    BYTE PTR [rax],al
    ee70:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ee73:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee79:	02 5d 0c             	add    bl,BYTE PTR [rbp+0xc]
    ee7c:	07                   	(bad)  
    ee7d:	08 00                	or     BYTE PTR [rax],al
    ee7f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ee82:	00 00                	add    BYTE PTR [rax],al
    ee84:	e4 0a                	in     al,0xa
    ee86:	00 00                	add    BYTE PTR [rax],al
    ee88:	75 9f                	jne    ee29 <__GNU_EH_FRAME_HDR+0xe1d>
    ee8a:	ff                   	(bad)  
    ee8b:	ff 75 00             	push   QWORD PTR [rbp+0x0]
    ee8e:	00 00                	add    BYTE PTR [rax],al
    ee90:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ee93:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee99:	02 6c 0c 07          	add    ch,BYTE PTR [rsp+rcx*1+0x7]
    ee9d:	08 00                	or     BYTE PTR [rax],al
    ee9f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eea2:	00 00                	add    BYTE PTR [rax],al
    eea4:	04 0b                	add    al,0xb
    eea6:	00 00                	add    BYTE PTR [rax],al
    eea8:	ca 9f ff             	retf   0xff9f
    eeab:	ff                   	(bad)  
    eeac:	db 00                	fild   DWORD PTR [rax]
    eeae:	00 00                	add    BYTE PTR [rax],al
    eeb0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eeb3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eeb9:	02 d2                	add    dl,dl
    eebb:	0c 07                	or     al,0x7
    eebd:	08 00                	or     BYTE PTR [rax],al
    eebf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eec2:	00 00                	add    BYTE PTR [rax],al
    eec4:	24 0b                	and    al,0xb
    eec6:	00 00                	add    BYTE PTR [rax],al
    eec8:	85 a0 ff ff 72 01    	test   DWORD PTR [rax+0x172ffff],esp
    eece:	00 00                	add    BYTE PTR [rax],al
    eed0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eed3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eed9:	03 69 01             	add    ebp,DWORD PTR [rcx+0x1]
    eedc:	0c 07                	or     al,0x7
    eede:	08 00                	or     BYTE PTR [rax],al
    eee0:	1c 00                	sbb    al,0x0
    eee2:	00 00                	add    BYTE PTR [rax],al
    eee4:	44 0b 00             	or     r8d,DWORD PTR [rax]
    eee7:	00 d7                	add    bh,dl
    eee9:	a1 ff ff 6c 00 00 00 	movabs eax,ds:0x45000000006cffff
    eef0:	00 45 
    eef2:	0e                   	(bad)  
    eef3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eef9:	02 63 0c             	add    ah,BYTE PTR [rbx+0xc]
    eefc:	07                   	(bad)  
    eefd:	08 00                	or     BYTE PTR [rax],al
    eeff:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef02:	00 00                	add    BYTE PTR [rax],al
    ef04:	64 0b 00             	or     eax,DWORD PTR fs:[rax]
    ef07:	00 23                	add    BYTE PTR [rbx],ah
    ef09:	a2 ff ff 80 00 00 00 	movabs ds:0x450000000080ffff,al
    ef10:	00 45 
    ef12:	0e                   	(bad)  
    ef13:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef19:	02 77 0c             	add    dh,BYTE PTR [rdi+0xc]
    ef1c:	07                   	(bad)  
    ef1d:	08 00                	or     BYTE PTR [rax],al
    ef1f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef22:	00 00                	add    BYTE PTR [rax],al
    ef24:	84 0b                	test   BYTE PTR [rbx],cl
    ef26:	00 00                	add    BYTE PTR [rax],al
    ef28:	83 a2 ff ff 16 00 00 	and    DWORD PTR [rdx+0x16ffff],0x0
    ef2f:	00 00                	add    BYTE PTR [rax],al
    ef31:	45 0e                	rex.RB (bad) 
    ef33:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef39:	4d 0c 07             	rex.WRB or al,0x7
    ef3c:	08 00                	or     BYTE PTR [rax],al
    ef3e:	00 00                	add    BYTE PTR [rax],al
    ef40:	20 00                	and    BYTE PTR [rax],al
    ef42:	00 00                	add    BYTE PTR [rax],al
    ef44:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    ef45:	0b 00                	or     eax,DWORD PTR [rax]
    ef47:	00 79 a2             	add    BYTE PTR [rcx-0x5e],bh
    ef4a:	ff                   	(bad)  
    ef4b:	ff                   	(bad)  
    ef4c:	3a 01                	cmp    al,BYTE PTR [rcx]
    ef4e:	00 00                	add    BYTE PTR [rax],al
    ef50:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ef53:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef59:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    ef5d:	2c 01                	sub    al,0x1
    ef5f:	0c 07                	or     al,0x7
    ef61:	08 00                	or     BYTE PTR [rax],al
    ef63:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef66:	00 00                	add    BYTE PTR [rax],al
    ef68:	c8 0b 00 00          	enter  0xb,0x0
    ef6c:	8f                   	(bad)  
    ef6d:	a3 ff ff 64 00 00 00 	movabs ds:0x450000000064ffff,eax
    ef74:	00 45 
    ef76:	0e                   	(bad)  
    ef77:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef7d:	02 5b 0c             	add    bl,BYTE PTR [rbx+0xc]
    ef80:	07                   	(bad)  
    ef81:	08 00                	or     BYTE PTR [rax],al
    ef83:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef86:	00 00                	add    BYTE PTR [rax],al
    ef88:	e8 0b 00 00 d3       	call   ffffffffd300ef98 <_end+0xffffffffd2ed3f90>
    ef8d:	a3 ff ff 53 00 00 00 	movabs ds:0x450000000053ffff,eax
    ef94:	00 45 
    ef96:	0e                   	(bad)  
    ef97:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef9d:	02 4a 0c             	add    cl,BYTE PTR [rdx+0xc]
    efa0:	07                   	(bad)  
    efa1:	08 00                	or     BYTE PTR [rax],al
    efa3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    efa6:	00 00                	add    BYTE PTR [rax],al
    efa8:	08 0c 00             	or     BYTE PTR [rax+rax*1],cl
    efab:	00 06                	add    BYTE PTR [rsi],al
    efad:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    efae:	ff                   	(bad)  
    efaf:	ff b1 00 00 00 00    	push   QWORD PTR [rcx+0x0]
    efb5:	45 0e                	rex.RB (bad) 
    efb7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    efbd:	02 a8 0c 07 08 00    	add    ch,BYTE PTR [rax+0x8070c]
    efc3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    efc6:	00 00                	add    BYTE PTR [rax],al
    efc8:	28 0c 00             	sub    BYTE PTR [rax+rax*1],cl
    efcb:	00 97 a4 ff ff cb    	add    BYTE PTR [rdi-0x3400005c],dl
    efd1:	00 00                	add    BYTE PTR [rax],al
    efd3:	00 00                	add    BYTE PTR [rax],al
    efd5:	45 0e                	rex.RB (bad) 
    efd7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    efdd:	02 c2                	add    al,dl
    efdf:	0c 07                	or     al,0x7
    efe1:	08 00                	or     BYTE PTR [rax],al
    efe3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    efe6:	00 00                	add    BYTE PTR [rax],al
    efe8:	48 0c 00             	rex.W or al,0x0
    efeb:	00 42 a5             	add    BYTE PTR [rdx-0x5b],al
    efee:	ff                   	(bad)  
    efef:	ff 55 00             	call   QWORD PTR [rbp+0x0]
    eff2:	00 00                	add    BYTE PTR [rax],al
    eff4:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eff7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    effd:	02 4c 0c 07          	add    cl,BYTE PTR [rsp+rcx*1+0x7]
    f001:	08 00                	or     BYTE PTR [rax],al
    f003:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f006:	00 00                	add    BYTE PTR [rax],al
    f008:	68 0c 00 00 77       	push   0x7700000c
    f00d:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    f00e:	ff                   	(bad)  
    f00f:	ff 30                	push   QWORD PTR [rax]
    f011:	00 00                	add    BYTE PTR [rax],al
    f013:	00 00                	add    BYTE PTR [rax],al
    f015:	45 0e                	rex.RB (bad) 
    f017:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f01d:	67 0c 07             	addr32 or al,0x7
    f020:	08 00                	or     BYTE PTR [rax],al
    f022:	00 00                	add    BYTE PTR [rax],al
    f024:	1c 00                	sbb    al,0x0
    f026:	00 00                	add    BYTE PTR [rax],al
    f028:	88 0c 00             	mov    BYTE PTR [rax+rax*1],cl
    f02b:	00 87 a5 ff ff 67    	add    BYTE PTR [rdi+0x67ffffa5],al
    f031:	00 00                	add    BYTE PTR [rax],al
    f033:	00 00                	add    BYTE PTR [rax],al
    f035:	45 0e                	rex.RB (bad) 
    f037:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f03d:	02 5e 0c             	add    bl,BYTE PTR [rsi+0xc]
    f040:	07                   	(bad)  
    f041:	08 00                	or     BYTE PTR [rax],al
    f043:	00 20                	add    BYTE PTR [rax],ah
    f045:	00 00                	add    BYTE PTR [rax],al
    f047:	00 a8 0c 00 00 ce    	add    BYTE PTR [rax-0x31fffff4],ch
    f04d:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    f04e:	ff                   	(bad)  
    f04f:	ff 0c 0f             	dec    DWORD PTR [rdi+rcx*1]
    f052:	00 00                	add    BYTE PTR [rax],al
    f054:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f057:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f05d:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    f061:	fb                   	sti    
    f062:	0e                   	(bad)  
    f063:	0c 07                	or     al,0x7
    f065:	08 00                	or     BYTE PTR [rax],al
    f067:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f06a:	00 00                	add    BYTE PTR [rax],al
    f06c:	cc                   	int3   
    f06d:	0c 00                	or     al,0x0
    f06f:	00 b6 b4 ff ff 46    	add    BYTE PTR [rsi+0x46ffffb4],dh
    f075:	00 00                	add    BYTE PTR [rax],al
    f077:	00 00                	add    BYTE PTR [rax],al
    f079:	45 0e                	rex.RB (bad) 
    f07b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f081:	7d 0c                	jge    f08f <__GNU_EH_FRAME_HDR+0x1083>
    f083:	07                   	(bad)  
    f084:	08 00                	or     BYTE PTR [rax],al
    f086:	00 00                	add    BYTE PTR [rax],al
    f088:	24 00                	and    al,0x0
    f08a:	00 00                	add    BYTE PTR [rax],al
    f08c:	ec                   	in     al,dx
    f08d:	0c 00                	or     al,0x0
    f08f:	00 dc                	add    ah,bl
    f091:	b4 ff                	mov    ah,0xff
    f093:	ff                   	(bad)  
    f094:	3b 02                	cmp    eax,DWORD PTR [rdx]
    f096:	00 00                	add    BYTE PTR [rax],al
    f098:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f09b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f0a1:	4b 8f 03             	rex.WXB pop QWORD PTR [r11]
    f0a4:	8e 04 8c             	mov    es,WORD PTR [rsp+rcx*4]
    f0a7:	05 83 06 03 27       	add    eax,0x27030683
    f0ac:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    f0af:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
    f0b2:	00 00                	add    BYTE PTR [rax],al
    f0b4:	14 0d                	adc    al,0xd
    f0b6:	00 00                	add    BYTE PTR [rax],al
    f0b8:	ef                   	out    dx,eax
    f0b9:	b6 ff                	mov    dh,0xff
    f0bb:	ff a5 01 00 00 00    	jmp    QWORD PTR [rbp+0x1]
    f0c1:	45 0e                	rex.RB (bad) 
    f0c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f0c9:	03 9c 01 0c 07 08 00 	add    ebx,DWORD PTR [rcx+rax*1+0x8070c]
    f0d0:	1c 00                	sbb    al,0x0
    f0d2:	00 00                	add    BYTE PTR [rax],al
    f0d4:	34 0d                	xor    al,0xd
    f0d6:	00 00                	add    BYTE PTR [rax],al
    f0d8:	74 b8                	je     f092 <__GNU_EH_FRAME_HDR+0x1086>
    f0da:	ff                   	(bad)  
    f0db:	ff 12                	call   QWORD PTR [rdx]
    f0dd:	01 00                	add    DWORD PTR [rax],eax
    f0df:	00 00                	add    BYTE PTR [rax],al
    f0e1:	45 0e                	rex.RB (bad) 
    f0e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f0e9:	03 09                	add    ecx,DWORD PTR [rcx]
    f0eb:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f0ee:	08 00                	or     BYTE PTR [rax],al
    f0f0:	24 00                	and    al,0x0
    f0f2:	00 00                	add    BYTE PTR [rax],al
    f0f4:	54                   	push   rsp
    f0f5:	0d 00 00 66 b9       	or     eax,0xb9660000
    f0fa:	ff                   	(bad)  
    f0fb:	ff                   	(bad)  
    f0fc:	bc 00 00 00 00       	mov    esp,0x0
    f101:	45 0e                	rex.RB (bad) 
    f103:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f109:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    f10d:	ae                   	scas   al,BYTE PTR es:[rdi]
    f10e:	0c 07                	or     al,0x7
    f110:	08 00                	or     BYTE PTR [rax],al
    f112:	00 00                	add    BYTE PTR [rax],al
    f114:	00 00                	add    BYTE PTR [rax],al
    f116:	00 00                	add    BYTE PTR [rax],al
    f118:	24 00                	and    al,0x0
    f11a:	00 00                	add    BYTE PTR [rax],al
    f11c:	7c 0d                	jl     f12b <__GNU_EH_FRAME_HDR+0x111f>
    f11e:	00 00                	add    BYTE PTR [rax],al
    f120:	fa                   	cli    
    f121:	b9 ff ff 9b 01       	mov    ecx,0x19bffff
    f126:	00 00                	add    BYTE PTR [rax],al
    f128:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f12b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f131:	47 8c 03             	rex.RXB mov WORD PTR [r11],es
    f134:	83 04 03 8b          	add    DWORD PTR [rbx+rax*1],0xffffff8b
    f138:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f13b:	08 00                	or     BYTE PTR [rax],al
    f13d:	00 00                	add    BYTE PTR [rax],al
    f13f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f142:	00 00                	add    BYTE PTR [rax],al
    f144:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    f145:	0d 00 00 6d bb       	or     eax,0xbb6d0000
    f14a:	ff                   	(bad)  
    f14b:	ff a5 00 00 00 00    	jmp    QWORD PTR [rbp+0x0]
    f151:	45 0e                	rex.RB (bad) 
    f153:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f159:	02 9c 0c 07 08 00 00 	add    bl,BYTE PTR [rsp+rcx*1+0x807]
    f160:	1c 00                	sbb    al,0x0
    f162:	00 00                	add    BYTE PTR [rax],al
    f164:	c4                   	(bad)  
    f165:	0d 00 00 f2 bb       	or     eax,0xbbf20000
    f16a:	ff                   	(bad)  
    f16b:	ff 43 01             	inc    DWORD PTR [rbx+0x1]
    f16e:	00 00                	add    BYTE PTR [rax],al
    f170:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f173:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f179:	03 3a                	add    edi,DWORD PTR [rdx]
    f17b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f17e:	08 00                	or     BYTE PTR [rax],al
    f180:	1c 00                	sbb    al,0x0
    f182:	00 00                	add    BYTE PTR [rax],al
    f184:	e4 0d                	in     al,0xd
    f186:	00 00                	add    BYTE PTR [rax],al
    f188:	15 bd ff ff f3       	adc    eax,0xf3ffffbd
    f18d:	00 00                	add    BYTE PTR [rax],al
    f18f:	00 00                	add    BYTE PTR [rax],al
    f191:	45 0e                	rex.RB (bad) 
    f193:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f199:	02 ea                	add    ch,dl
    f19b:	0c 07                	or     al,0x7
    f19d:	08 00                	or     BYTE PTR [rax],al
    f19f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f1a2:	00 00                	add    BYTE PTR [rax],al
    f1a4:	04 0e                	add    al,0xe
    f1a6:	00 00                	add    BYTE PTR [rax],al
    f1a8:	e8 bd ff ff 70       	call   7100f16a <_end+0x70ed4162>
    f1ad:	00 00                	add    BYTE PTR [rax],al
    f1af:	00 00                	add    BYTE PTR [rax],al
    f1b1:	45 0e                	rex.RB (bad) 
    f1b3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f1b9:	02 67 0c             	add    ah,BYTE PTR [rdi+0xc]
    f1bc:	07                   	(bad)  
    f1bd:	08 00                	or     BYTE PTR [rax],al
    f1bf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f1c2:	00 00                	add    BYTE PTR [rax],al
    f1c4:	24 0e                	and    al,0xe
    f1c6:	00 00                	add    BYTE PTR [rax],al
    f1c8:	38 be ff ff a5 02    	cmp    BYTE PTR [rsi+0x2a5ffff],bh
    f1ce:	00 00                	add    BYTE PTR [rax],al
    f1d0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f1d3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f1d9:	4a 8c 03             	rex.WX mov WORD PTR [rbx],es
    f1dc:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
    f1e0:	1c 00                	sbb    al,0x0
    f1e2:	00 00                	add    BYTE PTR [rax],al
    f1e4:	44 0e                	rex.R (bad) 
    f1e6:	00 00                	add    BYTE PTR [rax],al
    f1e8:	bd c0 ff ff 6a       	mov    ebp,0x6affffc0
    f1ed:	00 00                	add    BYTE PTR [rax],al
    f1ef:	00 00                	add    BYTE PTR [rax],al
    f1f1:	45 0e                	rex.RB (bad) 
    f1f3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f1f9:	02 61 0c             	add    ah,BYTE PTR [rcx+0xc]
    f1fc:	07                   	(bad)  
    f1fd:	08 00                	or     BYTE PTR [rax],al
    f1ff:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f202:	00 00                	add    BYTE PTR [rax],al
    f204:	64 0e                	fs (bad) 
    f206:	00 00                	add    BYTE PTR [rax],al
    f208:	07                   	(bad)  
    f209:	c1 ff ff             	sar    edi,0xff
    f20c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    f20d:	00 00                	add    BYTE PTR [rax],al
    f20f:	00 00                	add    BYTE PTR [rax],al
    f211:	45 0e                	rex.RB (bad) 
    f213:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f219:	02 65 0c             	add    ah,BYTE PTR [rbp+0xc]
    f21c:	07                   	(bad)  
    f21d:	08 00                	or     BYTE PTR [rax],al
    f21f:	00 20                	add    BYTE PTR [rax],ah
    f221:	00 00                	add    BYTE PTR [rax],al
    f223:	00 84 0e 00 00 55 c1 	add    BYTE PTR [rsi+rcx*1-0x3eab0000],al
    f22a:	ff                   	(bad)  
    f22b:	ff 8d 01 00 00 00    	dec    DWORD PTR [rbp+0x1]
    f231:	45 0e                	rex.RB (bad) 
    f233:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f239:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    f23d:	7f 01                	jg     f240 <__GNU_EH_FRAME_HDR+0x1234>
    f23f:	0c 07                	or     al,0x7
    f241:	08 00                	or     BYTE PTR [rax],al
	...

000000000000f244 <__FRAME_END__>:
    f244:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .tbss:

0000000000010b80 <buffer.0+0x10b00>:
	...

Disassembly of section .init_array:

0000000000010b80 <__frame_dummy_init_array_entry>:
   10b80:	60                   	(bad)  
   10b81:	29 00                	sub    DWORD PTR [rax],eax
   10b83:	00 00                	add    BYTE PTR [rax],al
   10b85:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000010b88 <__do_global_dtors_aux_fini_array_entry>:
   10b88:	20 29                	and    BYTE PTR [rcx],ch
   10b8a:	00 00                	add    BYTE PTR [rax],al
   10b8c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000010b90 <_DYNAMIC>:
   10b90:	01 00                	add    DWORD PTR [rax],eax
   10b92:	00 00                	add    BYTE PTR [rax],al
   10b94:	00 00                	add    BYTE PTR [rax],al
   10b96:	00 00                	add    BYTE PTR [rax],al
   10b98:	9e                   	sahf   
   10b99:	02 00                	add    al,BYTE PTR [rax]
   10b9b:	00 00                	add    BYTE PTR [rax],al
   10b9d:	00 00                	add    BYTE PTR [rax],al
   10b9f:	00 01                	add    BYTE PTR [rcx],al
   10ba1:	00 00                	add    BYTE PTR [rax],al
   10ba3:	00 00                	add    BYTE PTR [rax],al
   10ba5:	00 00                	add    BYTE PTR [rax],al
   10ba7:	00 ad 02 00 00 00    	add    BYTE PTR [rbp+0x2],ch
   10bad:	00 00                	add    BYTE PTR [rax],al
   10baf:	00 01                	add    BYTE PTR [rcx],al
   10bb1:	00 00                	add    BYTE PTR [rax],al
   10bb3:	00 00                	add    BYTE PTR [rax],al
   10bb5:	00 00                	add    BYTE PTR [rax],al
   10bb7:	00 bd 02 00 00 00    	add    BYTE PTR [rbp+0x2],bh
   10bbd:	00 00                	add    BYTE PTR [rax],al
   10bbf:	00 01                	add    BYTE PTR [rcx],al
   10bc1:	00 00                	add    BYTE PTR [rax],al
   10bc3:	00 00                	add    BYTE PTR [rax],al
   10bc5:	00 00                	add    BYTE PTR [rax],al
   10bc7:	00 cc                	add    ah,cl
   10bc9:	02 00                	add    al,BYTE PTR [rax]
   10bcb:	00 00                	add    BYTE PTR [rax],al
   10bcd:	00 00                	add    BYTE PTR [rax],al
   10bcf:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
   10bd2:	00 00                	add    BYTE PTR [rax],al
   10bd4:	00 00                	add    BYTE PTR [rax],al
   10bd6:	00 00                	add    BYTE PTR [rax],al
   10bd8:	00 20                	add    BYTE PTR [rax],ah
   10bda:	00 00                	add    BYTE PTR [rax],al
   10bdc:	00 00                	add    BYTE PTR [rax],al
   10bde:	00 00                	add    BYTE PTR [rax],al
   10be0:	0d 00 00 00 00       	or     eax,0x0
   10be5:	00 00                	add    BYTE PTR [rax],al
   10be7:	00 0c b5 00 00 00 00 	add    BYTE PTR [rsi*4+0x0],cl
   10bee:	00 00                	add    BYTE PTR [rax],al
   10bf0:	19 00                	sbb    DWORD PTR [rax],eax
   10bf2:	00 00                	add    BYTE PTR [rax],al
   10bf4:	00 00                	add    BYTE PTR [rax],al
   10bf6:	00 00                	add    BYTE PTR [rax],al
   10bf8:	80 0b 01             	or     BYTE PTR [rbx],0x1
   10bfb:	00 00                	add    BYTE PTR [rax],al
   10bfd:	00 00                	add    BYTE PTR [rax],al
   10bff:	00 1b                	add    BYTE PTR [rbx],bl
   10c01:	00 00                	add    BYTE PTR [rax],al
   10c03:	00 00                	add    BYTE PTR [rax],al
   10c05:	00 00                	add    BYTE PTR [rax],al
   10c07:	00 08                	add    BYTE PTR [rax],cl
   10c09:	00 00                	add    BYTE PTR [rax],al
   10c0b:	00 00                	add    BYTE PTR [rax],al
   10c0d:	00 00                	add    BYTE PTR [rax],al
   10c0f:	00 1a                	add    BYTE PTR [rdx],bl
   10c11:	00 00                	add    BYTE PTR [rax],al
   10c13:	00 00                	add    BYTE PTR [rax],al
   10c15:	00 00                	add    BYTE PTR [rax],al
   10c17:	00 88 0b 01 00 00    	add    BYTE PTR [rax+0x10b],cl
   10c1d:	00 00                	add    BYTE PTR [rax],al
   10c1f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   10c22:	00 00                	add    BYTE PTR [rax],al
   10c24:	00 00                	add    BYTE PTR [rax],al
   10c26:	00 00                	add    BYTE PTR [rax],al
   10c28:	08 00                	or     BYTE PTR [rax],al
   10c2a:	00 00                	add    BYTE PTR [rax],al
   10c2c:	00 00                	add    BYTE PTR [rax],al
   10c2e:	00 00                	add    BYTE PTR [rax],al
   10c30:	f5                   	cmc    
   10c31:	fe                   	(bad)  
   10c32:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10c35:	00 00                	add    BYTE PTR [rax],al
   10c37:	00 e8                	add    al,ch
   10c39:	03 00                	add    eax,DWORD PTR [rax]
   10c3b:	00 00                	add    BYTE PTR [rax],al
   10c3d:	00 00                	add    BYTE PTR [rax],al
   10c3f:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 10c45 <_DYNAMIC+0xb5>
   10c45:	00 00                	add    BYTE PTR [rax],al
   10c47:	00 08                	add    BYTE PTR [rax],cl
   10c49:	0b 00                	or     eax,DWORD PTR [rax]
   10c4b:	00 00                	add    BYTE PTR [rax],al
   10c4d:	00 00                	add    BYTE PTR [rax],al
   10c4f:	00 06                	add    BYTE PTR [rsi],al
   10c51:	00 00                	add    BYTE PTR [rax],al
   10c53:	00 00                	add    BYTE PTR [rax],al
   10c55:	00 00                	add    BYTE PTR [rax],al
   10c57:	00 18                	add    BYTE PTR [rax],bl
   10c59:	04 00                	add    al,0x0
   10c5b:	00 00                	add    BYTE PTR [rax],al
   10c5d:	00 00                	add    BYTE PTR [rax],al
   10c5f:	00 0a                	add    BYTE PTR [rdx],cl
   10c61:	00 00                	add    BYTE PTR [rax],al
   10c63:	00 00                	add    BYTE PTR [rax],al
   10c65:	00 00                	add    BYTE PTR [rax],al
   10c67:	00 0b                	add    BYTE PTR [rbx],cl
   10c69:	03 00                	add    eax,DWORD PTR [rax]
   10c6b:	00 00                	add    BYTE PTR [rax],al
   10c6d:	00 00                	add    BYTE PTR [rax],al
   10c6f:	00 0b                	add    BYTE PTR [rbx],cl
   10c71:	00 00                	add    BYTE PTR [rax],al
   10c73:	00 00                	add    BYTE PTR [rax],al
   10c75:	00 00                	add    BYTE PTR [rax],al
   10c77:	00 18                	add    BYTE PTR [rax],bl
   10c79:	00 00                	add    BYTE PTR [rax],al
   10c7b:	00 00                	add    BYTE PTR [rax],al
   10c7d:	00 00                	add    BYTE PTR [rax],al
   10c7f:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 10c85 <_DYNAMIC+0xf5>
	...
   10c8d:	00 00                	add    BYTE PTR [rax],al
   10c8f:	00 03                	add    BYTE PTR [rbx],al
   10c91:	00 00                	add    BYTE PTR [rax],al
   10c93:	00 00                	add    BYTE PTR [rax],al
   10c95:	00 00                	add    BYTE PTR [rax],al
   10c97:	00 b0 0d 01 00 00    	add    BYTE PTR [rax+0x10d],dh
   10c9d:	00 00                	add    BYTE PTR [rax],al
   10c9f:	00 02                	add    BYTE PTR [rdx],al
   10ca1:	00 00                	add    BYTE PTR [rax],al
   10ca3:	00 00                	add    BYTE PTR [rax],al
   10ca5:	00 00                	add    BYTE PTR [rax],al
   10ca7:	00 30                	add    BYTE PTR [rax],dh
   10ca9:	06                   	(bad)  
   10caa:	00 00                	add    BYTE PTR [rax],al
   10cac:	00 00                	add    BYTE PTR [rax],al
   10cae:	00 00                	add    BYTE PTR [rax],al
   10cb0:	14 00                	adc    al,0x0
   10cb2:	00 00                	add    BYTE PTR [rax],al
   10cb4:	00 00                	add    BYTE PTR [rax],al
   10cb6:	00 00                	add    BYTE PTR [rax],al
   10cb8:	07                   	(bad)  
   10cb9:	00 00                	add    BYTE PTR [rax],al
   10cbb:	00 00                	add    BYTE PTR [rax],al
   10cbd:	00 00                	add    BYTE PTR [rax],al
   10cbf:	00 17                	add    BYTE PTR [rdi],dl
   10cc1:	00 00                	add    BYTE PTR [rax],al
   10cc3:	00 00                	add    BYTE PTR [rax],al
   10cc5:	00 00                	add    BYTE PTR [rax],al
   10cc7:	00 38                	add    BYTE PTR [rax],bh
   10cc9:	10 00                	adc    BYTE PTR [rax],al
   10ccb:	00 00                	add    BYTE PTR [rax],al
   10ccd:	00 00                	add    BYTE PTR [rax],al
   10ccf:	00 07                	add    BYTE PTR [rdi],al
   10cd1:	00 00                	add    BYTE PTR [rax],al
   10cd3:	00 00                	add    BYTE PTR [rax],al
   10cd5:	00 00                	add    BYTE PTR [rax],al
   10cd7:	00 18                	add    BYTE PTR [rax],bl
   10cd9:	0f 00 00             	sldt   WORD PTR [rax]
   10cdc:	00 00                	add    BYTE PTR [rax],al
   10cde:	00 00                	add    BYTE PTR [rax],al
   10ce0:	08 00                	or     BYTE PTR [rax],al
   10ce2:	00 00                	add    BYTE PTR [rax],al
   10ce4:	00 00                	add    BYTE PTR [rax],al
   10ce6:	00 00                	add    BYTE PTR [rax],al
   10ce8:	20 01                	and    BYTE PTR [rcx],al
   10cea:	00 00                	add    BYTE PTR [rax],al
   10cec:	00 00                	add    BYTE PTR [rax],al
   10cee:	00 00                	add    BYTE PTR [rax],al
   10cf0:	09 00                	or     DWORD PTR [rax],eax
   10cf2:	00 00                	add    BYTE PTR [rax],al
   10cf4:	00 00                	add    BYTE PTR [rax],al
   10cf6:	00 00                	add    BYTE PTR [rax],al
   10cf8:	18 00                	sbb    BYTE PTR [rax],al
   10cfa:	00 00                	add    BYTE PTR [rax],al
   10cfc:	00 00                	add    BYTE PTR [rax],al
   10cfe:	00 00                	add    BYTE PTR [rax],al
   10d00:	1e                   	(bad)  
   10d01:	00 00                	add    BYTE PTR [rax],al
   10d03:	00 00                	add    BYTE PTR [rax],al
   10d05:	00 00                	add    BYTE PTR [rax],al
   10d07:	00 08                	add    BYTE PTR [rax],cl
   10d09:	00 00                	add    BYTE PTR [rax],al
   10d0b:	00 00                	add    BYTE PTR [rax],al
   10d0d:	00 00                	add    BYTE PTR [rax],al
   10d0f:	00 fb                	add    bl,bh
   10d11:	ff                   	(bad)  
   10d12:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d15:	00 00                	add    BYTE PTR [rax],al
   10d17:	00 01                	add    BYTE PTR [rcx],al
   10d19:	00 00                	add    BYTE PTR [rax],al
   10d1b:	08 00                	or     BYTE PTR [rax],al
   10d1d:	00 00                	add    BYTE PTR [rax],al
   10d1f:	00 fe                	add    dh,bh
   10d21:	ff                   	(bad)  
   10d22:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d25:	00 00                	add    BYTE PTR [rax],al
   10d27:	00 a8 0e 00 00 00    	add    BYTE PTR [rax+0xe],ch
   10d2d:	00 00                	add    BYTE PTR [rax],al
   10d2f:	00 ff                	add    bh,bh
   10d31:	ff                   	(bad)  
   10d32:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d35:	00 00                	add    BYTE PTR [rax],al
   10d37:	00 02                	add    BYTE PTR [rdx],al
   10d39:	00 00                	add    BYTE PTR [rax],al
   10d3b:	00 00                	add    BYTE PTR [rax],al
   10d3d:	00 00                	add    BYTE PTR [rax],al
   10d3f:	00 f0                	add    al,dh
   10d41:	ff                   	(bad)  
   10d42:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d45:	00 00                	add    BYTE PTR [rax],al
   10d47:	00 14 0e             	add    BYTE PTR [rsi+rcx*1],dl
   10d4a:	00 00                	add    BYTE PTR [rax],al
   10d4c:	00 00                	add    BYTE PTR [rax],al
   10d4e:	00 00                	add    BYTE PTR [rax],al
   10d50:	f9                   	stc    
   10d51:	ff                   	(bad)  
   10d52:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d55:	00 00                	add    BYTE PTR [rax],al
   10d57:	00 06                	add    BYTE PTR [rsi],al
	...

Disassembly of section .got:

0000000000010db0 <_GLOBAL_OFFSET_TABLE_>:
   10db0:	90                   	nop
   10db1:	0b 01                	or     eax,DWORD PTR [rcx]
	...
   10dc7:	00 30                	add    BYTE PTR [rax],dh
   10dc9:	20 00                	and    BYTE PTR [rax],al
   10dcb:	00 00                	add    BYTE PTR [rax],al
   10dcd:	00 00                	add    BYTE PTR [rax],al
   10dcf:	00 40 20             	add    BYTE PTR [rax+0x20],al
   10dd2:	00 00                	add    BYTE PTR [rax],al
   10dd4:	00 00                	add    BYTE PTR [rax],al
   10dd6:	00 00                	add    BYTE PTR [rax],al
   10dd8:	50                   	push   rax
   10dd9:	20 00                	and    BYTE PTR [rax],al
   10ddb:	00 00                	add    BYTE PTR [rax],al
   10ddd:	00 00                	add    BYTE PTR [rax],al
   10ddf:	00 60 20             	add    BYTE PTR [rax+0x20],ah
   10de2:	00 00                	add    BYTE PTR [rax],al
   10de4:	00 00                	add    BYTE PTR [rax],al
   10de6:	00 00                	add    BYTE PTR [rax],al
   10de8:	70 20                	jo     10e0a <_GLOBAL_OFFSET_TABLE_+0x5a>
   10dea:	00 00                	add    BYTE PTR [rax],al
   10dec:	00 00                	add    BYTE PTR [rax],al
   10dee:	00 00                	add    BYTE PTR [rax],al
   10df0:	80 20 00             	and    BYTE PTR [rax],0x0
   10df3:	00 00                	add    BYTE PTR [rax],al
   10df5:	00 00                	add    BYTE PTR [rax],al
   10df7:	00 90 20 00 00 00    	add    BYTE PTR [rax+0x20],dl
   10dfd:	00 00                	add    BYTE PTR [rax],al
   10dff:	00 a0 20 00 00 00    	add    BYTE PTR [rax+0x20],ah
   10e05:	00 00                	add    BYTE PTR [rax],al
   10e07:	00 b0 20 00 00 00    	add    BYTE PTR [rax+0x20],dh
   10e0d:	00 00                	add    BYTE PTR [rax],al
   10e0f:	00 c0                	add    al,al
   10e11:	20 00                	and    BYTE PTR [rax],al
   10e13:	00 00                	add    BYTE PTR [rax],al
   10e15:	00 00                	add    BYTE PTR [rax],al
   10e17:	00 d0                	add    al,dl
   10e19:	20 00                	and    BYTE PTR [rax],al
   10e1b:	00 00                	add    BYTE PTR [rax],al
   10e1d:	00 00                	add    BYTE PTR [rax],al
   10e1f:	00 e0                	add    al,ah
   10e21:	20 00                	and    BYTE PTR [rax],al
   10e23:	00 00                	add    BYTE PTR [rax],al
   10e25:	00 00                	add    BYTE PTR [rax],al
   10e27:	00 f0                	add    al,dh
   10e29:	20 00                	and    BYTE PTR [rax],al
   10e2b:	00 00                	add    BYTE PTR [rax],al
   10e2d:	00 00                	add    BYTE PTR [rax],al
   10e2f:	00 00                	add    BYTE PTR [rax],al
   10e31:	21 00                	and    DWORD PTR [rax],eax
   10e33:	00 00                	add    BYTE PTR [rax],al
   10e35:	00 00                	add    BYTE PTR [rax],al
   10e37:	00 10                	add    BYTE PTR [rax],dl
   10e39:	21 00                	and    DWORD PTR [rax],eax
   10e3b:	00 00                	add    BYTE PTR [rax],al
   10e3d:	00 00                	add    BYTE PTR [rax],al
   10e3f:	00 20                	add    BYTE PTR [rax],ah
   10e41:	21 00                	and    DWORD PTR [rax],eax
   10e43:	00 00                	add    BYTE PTR [rax],al
   10e45:	00 00                	add    BYTE PTR [rax],al
   10e47:	00 30                	add    BYTE PTR [rax],dh
   10e49:	21 00                	and    DWORD PTR [rax],eax
   10e4b:	00 00                	add    BYTE PTR [rax],al
   10e4d:	00 00                	add    BYTE PTR [rax],al
   10e4f:	00 40 21             	add    BYTE PTR [rax+0x21],al
   10e52:	00 00                	add    BYTE PTR [rax],al
   10e54:	00 00                	add    BYTE PTR [rax],al
   10e56:	00 00                	add    BYTE PTR [rax],al
   10e58:	50                   	push   rax
   10e59:	21 00                	and    DWORD PTR [rax],eax
   10e5b:	00 00                	add    BYTE PTR [rax],al
   10e5d:	00 00                	add    BYTE PTR [rax],al
   10e5f:	00 60 21             	add    BYTE PTR [rax+0x21],ah
   10e62:	00 00                	add    BYTE PTR [rax],al
   10e64:	00 00                	add    BYTE PTR [rax],al
   10e66:	00 00                	add    BYTE PTR [rax],al
   10e68:	70 21                	jo     10e8b <_GLOBAL_OFFSET_TABLE_+0xdb>
   10e6a:	00 00                	add    BYTE PTR [rax],al
   10e6c:	00 00                	add    BYTE PTR [rax],al
   10e6e:	00 00                	add    BYTE PTR [rax],al
   10e70:	80 21 00             	and    BYTE PTR [rcx],0x0
   10e73:	00 00                	add    BYTE PTR [rax],al
   10e75:	00 00                	add    BYTE PTR [rax],al
   10e77:	00 90 21 00 00 00    	add    BYTE PTR [rax+0x21],dl
   10e7d:	00 00                	add    BYTE PTR [rax],al
   10e7f:	00 a0 21 00 00 00    	add    BYTE PTR [rax+0x21],ah
   10e85:	00 00                	add    BYTE PTR [rax],al
   10e87:	00 b0 21 00 00 00    	add    BYTE PTR [rax+0x21],dh
   10e8d:	00 00                	add    BYTE PTR [rax],al
   10e8f:	00 c0                	add    al,al
   10e91:	21 00                	and    DWORD PTR [rax],eax
   10e93:	00 00                	add    BYTE PTR [rax],al
   10e95:	00 00                	add    BYTE PTR [rax],al
   10e97:	00 d0                	add    al,dl
   10e99:	21 00                	and    DWORD PTR [rax],eax
   10e9b:	00 00                	add    BYTE PTR [rax],al
   10e9d:	00 00                	add    BYTE PTR [rax],al
   10e9f:	00 e0                	add    al,ah
   10ea1:	21 00                	and    DWORD PTR [rax],eax
   10ea3:	00 00                	add    BYTE PTR [rax],al
   10ea5:	00 00                	add    BYTE PTR [rax],al
   10ea7:	00 f0                	add    al,dh
   10ea9:	21 00                	and    DWORD PTR [rax],eax
   10eab:	00 00                	add    BYTE PTR [rax],al
   10ead:	00 00                	add    BYTE PTR [rax],al
   10eaf:	00 00                	add    BYTE PTR [rax],al
   10eb1:	22 00                	and    al,BYTE PTR [rax]
   10eb3:	00 00                	add    BYTE PTR [rax],al
   10eb5:	00 00                	add    BYTE PTR [rax],al
   10eb7:	00 10                	add    BYTE PTR [rax],dl
   10eb9:	22 00                	and    al,BYTE PTR [rax]
   10ebb:	00 00                	add    BYTE PTR [rax],al
   10ebd:	00 00                	add    BYTE PTR [rax],al
   10ebf:	00 20                	add    BYTE PTR [rax],ah
   10ec1:	22 00                	and    al,BYTE PTR [rax]
   10ec3:	00 00                	add    BYTE PTR [rax],al
   10ec5:	00 00                	add    BYTE PTR [rax],al
   10ec7:	00 30                	add    BYTE PTR [rax],dh
   10ec9:	22 00                	and    al,BYTE PTR [rax]
   10ecb:	00 00                	add    BYTE PTR [rax],al
   10ecd:	00 00                	add    BYTE PTR [rax],al
   10ecf:	00 40 22             	add    BYTE PTR [rax+0x22],al
   10ed2:	00 00                	add    BYTE PTR [rax],al
   10ed4:	00 00                	add    BYTE PTR [rax],al
   10ed6:	00 00                	add    BYTE PTR [rax],al
   10ed8:	50                   	push   rax
   10ed9:	22 00                	and    al,BYTE PTR [rax]
   10edb:	00 00                	add    BYTE PTR [rax],al
   10edd:	00 00                	add    BYTE PTR [rax],al
   10edf:	00 60 22             	add    BYTE PTR [rax+0x22],ah
   10ee2:	00 00                	add    BYTE PTR [rax],al
   10ee4:	00 00                	add    BYTE PTR [rax],al
   10ee6:	00 00                	add    BYTE PTR [rax],al
   10ee8:	70 22                	jo     10f0c <_GLOBAL_OFFSET_TABLE_+0x15c>
   10eea:	00 00                	add    BYTE PTR [rax],al
   10eec:	00 00                	add    BYTE PTR [rax],al
   10eee:	00 00                	add    BYTE PTR [rax],al
   10ef0:	80 22 00             	and    BYTE PTR [rdx],0x0
   10ef3:	00 00                	add    BYTE PTR [rax],al
   10ef5:	00 00                	add    BYTE PTR [rax],al
   10ef7:	00 90 22 00 00 00    	add    BYTE PTR [rax+0x22],dl
   10efd:	00 00                	add    BYTE PTR [rax],al
   10eff:	00 a0 22 00 00 00    	add    BYTE PTR [rax+0x22],ah
   10f05:	00 00                	add    BYTE PTR [rax],al
   10f07:	00 b0 22 00 00 00    	add    BYTE PTR [rax+0x22],dh
   10f0d:	00 00                	add    BYTE PTR [rax],al
   10f0f:	00 c0                	add    al,al
   10f11:	22 00                	and    al,BYTE PTR [rax]
   10f13:	00 00                	add    BYTE PTR [rax],al
   10f15:	00 00                	add    BYTE PTR [rax],al
   10f17:	00 d0                	add    al,dl
   10f19:	22 00                	and    al,BYTE PTR [rax]
   10f1b:	00 00                	add    BYTE PTR [rax],al
   10f1d:	00 00                	add    BYTE PTR [rax],al
   10f1f:	00 e0                	add    al,ah
   10f21:	22 00                	and    al,BYTE PTR [rax]
   10f23:	00 00                	add    BYTE PTR [rax],al
   10f25:	00 00                	add    BYTE PTR [rax],al
   10f27:	00 f0                	add    al,dh
   10f29:	22 00                	and    al,BYTE PTR [rax]
   10f2b:	00 00                	add    BYTE PTR [rax],al
   10f2d:	00 00                	add    BYTE PTR [rax],al
   10f2f:	00 00                	add    BYTE PTR [rax],al
   10f31:	23 00                	and    eax,DWORD PTR [rax]
   10f33:	00 00                	add    BYTE PTR [rax],al
   10f35:	00 00                	add    BYTE PTR [rax],al
   10f37:	00 10                	add    BYTE PTR [rax],dl
   10f39:	23 00                	and    eax,DWORD PTR [rax]
   10f3b:	00 00                	add    BYTE PTR [rax],al
   10f3d:	00 00                	add    BYTE PTR [rax],al
   10f3f:	00 20                	add    BYTE PTR [rax],ah
   10f41:	23 00                	and    eax,DWORD PTR [rax]
   10f43:	00 00                	add    BYTE PTR [rax],al
   10f45:	00 00                	add    BYTE PTR [rax],al
   10f47:	00 30                	add    BYTE PTR [rax],dh
   10f49:	23 00                	and    eax,DWORD PTR [rax]
   10f4b:	00 00                	add    BYTE PTR [rax],al
   10f4d:	00 00                	add    BYTE PTR [rax],al
   10f4f:	00 40 23             	add    BYTE PTR [rax+0x23],al
   10f52:	00 00                	add    BYTE PTR [rax],al
   10f54:	00 00                	add    BYTE PTR [rax],al
   10f56:	00 00                	add    BYTE PTR [rax],al
   10f58:	50                   	push   rax
   10f59:	23 00                	and    eax,DWORD PTR [rax]
   10f5b:	00 00                	add    BYTE PTR [rax],al
   10f5d:	00 00                	add    BYTE PTR [rax],al
   10f5f:	00 60 23             	add    BYTE PTR [rax+0x23],ah
   10f62:	00 00                	add    BYTE PTR [rax],al
   10f64:	00 00                	add    BYTE PTR [rax],al
   10f66:	00 00                	add    BYTE PTR [rax],al
   10f68:	70 23                	jo     10f8d <_GLOBAL_OFFSET_TABLE_+0x1dd>
   10f6a:	00 00                	add    BYTE PTR [rax],al
   10f6c:	00 00                	add    BYTE PTR [rax],al
   10f6e:	00 00                	add    BYTE PTR [rax],al
   10f70:	80 23 00             	and    BYTE PTR [rbx],0x0
   10f73:	00 00                	add    BYTE PTR [rax],al
   10f75:	00 00                	add    BYTE PTR [rax],al
   10f77:	00 90 23 00 00 00    	add    BYTE PTR [rax+0x23],dl
   10f7d:	00 00                	add    BYTE PTR [rax],al
   10f7f:	00 a0 23 00 00 00    	add    BYTE PTR [rax+0x23],ah
   10f85:	00 00                	add    BYTE PTR [rax],al
   10f87:	00 b0 23 00 00 00    	add    BYTE PTR [rax+0x23],dh
   10f8d:	00 00                	add    BYTE PTR [rax],al
   10f8f:	00 c0                	add    al,al
   10f91:	23 00                	and    eax,DWORD PTR [rax]
   10f93:	00 00                	add    BYTE PTR [rax],al
   10f95:	00 00                	add    BYTE PTR [rax],al
   10f97:	00 d0                	add    al,dl
   10f99:	23 00                	and    eax,DWORD PTR [rax]
   10f9b:	00 00                	add    BYTE PTR [rax],al
   10f9d:	00 00                	add    BYTE PTR [rax],al
   10f9f:	00 e0                	add    al,ah
   10fa1:	23 00                	and    eax,DWORD PTR [rax]
   10fa3:	00 00                	add    BYTE PTR [rax],al
   10fa5:	00 00                	add    BYTE PTR [rax],al
   10fa7:	00 f0                	add    al,dh
   10fa9:	23 00                	and    eax,DWORD PTR [rax]
   10fab:	00 00                	add    BYTE PTR [rax],al
   10fad:	00 00                	add    BYTE PTR [rax],al
   10faf:	00 00                	add    BYTE PTR [rax],al
   10fb1:	24 00                	and    al,0x0
   10fb3:	00 00                	add    BYTE PTR [rax],al
   10fb5:	00 00                	add    BYTE PTR [rax],al
   10fb7:	00 10                	add    BYTE PTR [rax],dl
   10fb9:	24 00                	and    al,0x0
   10fbb:	00 00                	add    BYTE PTR [rax],al
   10fbd:	00 00                	add    BYTE PTR [rax],al
   10fbf:	00 20                	add    BYTE PTR [rax],ah
   10fc1:	24 00                	and    al,0x0
   10fc3:	00 00                	add    BYTE PTR [rax],al
   10fc5:	00 00                	add    BYTE PTR [rax],al
   10fc7:	00 30                	add    BYTE PTR [rax],dh
   10fc9:	24 00                	and    al,0x0
   10fcb:	00 00                	add    BYTE PTR [rax],al
   10fcd:	00 00                	add    BYTE PTR [rax],al
   10fcf:	00 40 24             	add    BYTE PTR [rax+0x24],al
	...

Disassembly of section .data:

0000000000011000 <__data_start>:
	...

0000000000011008 <__dso_handle>:
   11008:	08 10                	or     BYTE PTR [rax],dl
   1100a:	01 00                	add    DWORD PTR [rax],eax
   1100c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011010 <blk_ipv4_len>:
   11010:	ff                   	(bad)  
   11011:	ff                   	(bad)  
   11012:	ff                   	(bad)  
   11013:	ff                   	(bad)  

0000000000011014 <num_rules>:
   11014:	ff                   	(bad)  
   11015:	ff                   	(bad)  
   11016:	ff                   	(bad)  
   11017:	ff                   	(bad)  

0000000000011018 <watchlist_num>:
   11018:	ff                   	(bad)  
   11019:	ff                   	(bad)  
   1101a:	ff                   	(bad)  
   1101b:	ff                   	(bad)  

000000000001101c <arp_entries>:
   1101c:	ff                   	(bad)  
   1101d:	ff                   	(bad)  
   1101e:	ff                   	(bad)  
   1101f:	ff                 	dec    eax

0000000000011020 <spi_max>:
   11020:	c8 00 00 00          	enter  0x0,0x0

0000000000011024 <VIGIL_MODE>:
   11024:	ff                   	(bad)  
   11025:	ff 00                	inc    DWORD PTR [rax]
	...

0000000000011028 <default_config>:
   11028:	04 c0                	add    al,0xc0
   1102a:	00 00                	add    BYTE PTR [rax],al
   1102c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011030 <def_log_file>:
   11030:	1a c0                	sbb    al,al
   11032:	00 00                	add    BYTE PTR [rax],al
   11034:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011038 <default_host_conf>:
   11038:	34 c0                	xor    al,0xc0
   1103a:	00 00                	add    BYTE PTR [rax],al
   1103c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011040 <total_conversations>:
   11040:	ff                   	(bad)  
   11041:	ff                   	(bad)  
   11042:	ff                   	(bad)  
   11043:	ff                   	.byte 0xff

Disassembly of section .bss:

0000000000011060 <optarg@GLIBC_2.2.5>:
	...

0000000000011068 <completed.0>:
	...

0000000000011080 <demo_mode>:
   11080:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011084 <strict_icmp_timestamp_req>:
   11084:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011088 <strict_nmap_host_alive_check>:
	...

00000000000110a0 <threads>:
	...

00000000000112a0 <thread_count>:
   112a0:	00 00                	add    BYTE PTR [rax],al
	...

00000000000112a4 <total_pkt_captured>:
   112a4:	00 00                	add    BYTE PTR [rax],al
	...

00000000000112a8 <is_running>:
	...

00000000000112b0 <last_clean_time>:
	...

00000000000112b8 <clean_delay>:
	...

00000000000112c0 <pkt_counter>:
	...

00000000000112e0 <rules>:
	...

00000000000f32e0 <blocked_ipv4_addrs>:
	...

00000000000f3520 <watchlist>:
	...

0000000000107d20 <arpcache>:
	...

0000000000109f00 <ip_addr>:
	...

0000000000109f20 <debug_mode>:
	...

0000000000109f21 <use_sqlite>:
	...

0000000000109f40 <sqlite_db_path>:
	...

0000000000109f60 <clean_delay_pkts>:
  109f60:	00 00                	add    BYTE PTR [rax],al
	...

0000000000109f64 <packet_print>:
	...

0000000000109f65 <quiet_exit>:
  109f65:	00 00                	add    BYTE PTR [rax],al
	...

0000000000109f68 <vigil_location>:
	...

0000000000109f70 <input_adapter>:
	...

0000000000109f80 <output_adapter>:
	...

0000000000109f90 <local_ip>:
	...

0000000000109fb0 <def_gw>:
	...

0000000000109fc2 <use_spi>:
	...

0000000000109fc4 <homenet>:
  109fc4:	00 00                	add    BYTE PTR [rax],al
	...

0000000000109fc8 <homenetmask>:
  109fc8:	00 00                	add    BYTE PTR [rax],al
	...

0000000000109fcc <in_test_mode>:
	...

0000000000109fe0 <spi_table>:
	...

0000000000137fe0 <lua_scripts>:
	...

0000000000138800 <fn_mem_map>:
	...

000000000013b000 <fn_num>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <buffer+0x78>
   a:	74 75                	je     81 <buffer.0+0x1>
   c:	20 31                	and    BYTE PTR [rcx],dh
   e:	30 2e                	xor    BYTE PTR [rsi],ch
  10:	33 2e                	xor    ebp,DWORD PTR [rsi]
  12:	30 2d 31 75 62 75    	xor    BYTE PTR [rip+0x75627531],ch        # 75627549 <_end+0x754ec541>
  18:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  19:	74 75                	je     90 <buffer.0+0x10>
  1b:	31 29                	xor    DWORD PTR [rcx],ebp
  1d:	20 31                	and    BYTE PTR [rcx],dh
  1f:	30 2e                	xor    BYTE PTR [rsi],ch
  21:	33 2e                	xor    ebp,DWORD PTR [rsi]
  23:	30 00                	xor    BYTE PTR [rax],al
