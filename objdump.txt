
vigil.exe:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000350 <.interp>:
 350:	2f                   	(bad)  
 351:	6c                   	ins    BYTE PTR es:[rdi],dx
 352:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 359:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 35e:	78 2d                	js     38d <buffer.0+0x30d>
 360:	78 38                	js     39a <buffer.0+0x31a>
 362:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 368:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 369:	2e 32 00             	cs xor al,BYTE PTR [rax]

Disassembly of section .note.gnu.property:

0000000000000370 <.note.gnu.property>:
 370:	04 00                	add    al,0x0
 372:	00 00                	add    BYTE PTR [rax],al
 374:	20 00                	and    BYTE PTR [rax],al
 376:	00 00                	add    BYTE PTR [rax],al
 378:	05 00 00 00 47       	add    eax,0x47000000
 37d:	4e 55                	rex.WRX push rbp
 37f:	00 02                	add    BYTE PTR [rdx],al
 381:	00 00                	add    BYTE PTR [rax],al
 383:	c0 04 00 00          	rol    BYTE PTR [rax+rax*1],0x0
 387:	00 03                	add    BYTE PTR [rbx],al
 389:	00 00                	add    BYTE PTR [rax],al
 38b:	00 00                	add    BYTE PTR [rax],al
 38d:	00 00                	add    BYTE PTR [rax],al
 38f:	00 02                	add    BYTE PTR [rdx],al
 391:	80 00 c0             	add    BYTE PTR [rax],0xc0
 394:	04 00                	add    al,0x0
 396:	00 00                	add    BYTE PTR [rax],al
 398:	01 00                	add    DWORD PTR [rax],eax
 39a:	00 00                	add    BYTE PTR [rax],al
 39c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

00000000000003a0 <.note.gnu.build-id>:
 3a0:	04 00                	add    al,0x0
 3a2:	00 00                	add    BYTE PTR [rax],al
 3a4:	14 00                	adc    al,0x0
 3a6:	00 00                	add    BYTE PTR [rax],al
 3a8:	03 00                	add    eax,DWORD PTR [rax]
 3aa:	00 00                	add    BYTE PTR [rax],al
 3ac:	47                   	rex.RXB
 3ad:	4e 55                	rex.WRX push rbp
 3af:	00 87 14 e9 70 2f    	add    BYTE PTR [rdi+0x2f70e914],al
 3b5:	e6 b3                	out    0xb3,al
 3b7:	ac                   	lods   al,BYTE PTR ds:[rsi]
 3b8:	94                   	xchg   esp,eax
 3b9:	91                   	xchg   ecx,eax
 3ba:	84 8d 44 31 aa f3    	test   BYTE PTR [rbp-0xc55cebc],cl
 3c0:	b1 cb                	mov    cl,0xcb
 3c2:	38 f1                	cmp    cl,dh

Disassembly of section .note.ABI-tag:

00000000000003c4 <__abi_tag>:
 3c4:	04 00                	add    al,0x0
 3c6:	00 00                	add    BYTE PTR [rax],al
 3c8:	10 00                	adc    BYTE PTR [rax],al
 3ca:	00 00                	add    BYTE PTR [rax],al
 3cc:	01 00                	add    DWORD PTR [rax],eax
 3ce:	00 00                	add    BYTE PTR [rax],al
 3d0:	47                   	rex.RXB
 3d1:	4e 55                	rex.WRX push rbp
 3d3:	00 00                	add    BYTE PTR [rax],al
 3d5:	00 00                	add    BYTE PTR [rax],al
 3d7:	00 03                	add    BYTE PTR [rbx],al
 3d9:	00 00                	add    BYTE PTR [rax],al
 3db:	00 02                	add    BYTE PTR [rdx],al
 3dd:	00 00                	add    BYTE PTR [rax],al
 3df:	00 00                	add    BYTE PTR [rax],al
 3e1:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .gnu.hash:

00000000000003e8 <.gnu.hash>:
 3e8:	03 00                	add    eax,DWORD PTR [rax]
 3ea:	00 00                	add    BYTE PTR [rax],al
 3ec:	4c 00 00             	rex.WR add BYTE PTR [rax],r8b
 3ef:	00 01                	add    BYTE PTR [rcx],al
 3f1:	00 00                	add    BYTE PTR [rax],al
 3f3:	00 06                	add    BYTE PTR [rsi],al
 3f5:	00 00                	add    BYTE PTR [rax],al
 3f7:	00 00                	add    BYTE PTR [rax],al
 3f9:	14 81                	adc    al,0x81
 3fb:	00 00                	add    BYTE PTR [rax],al
 3fd:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 400:	4c 00 00             	rex.WR add BYTE PTR [rax],r8b
 403:	00 00                	add    BYTE PTR [rax],al
 405:	00 00                	add    BYTE PTR [rax],al
 407:	00 4d 00             	add    BYTE PTR [rbp+0x0],cl
 40a:	00 00                	add    BYTE PTR [rax],al
 40c:	d1 65 ce             	shl    DWORD PTR [rbp-0x32],1
 40f:	6d                   	ins    DWORD PTR es:[rdi],dx
 410:	32 b3 f0 a9 b3 a2    	xor    dh,BYTE PTR [rbx-0x5d4c5610]
 416:	f7 12                	not    DWORD PTR [rdx]

Disassembly of section .dynsym:

0000000000000418 <.dynsym>:
	...
 430:	88 00                	mov    BYTE PTR [rax],al
 432:	00 00                	add    BYTE PTR [rax],al
 434:	12 00                	adc    al,BYTE PTR [rax]
	...
 446:	00 00                	add    BYTE PTR [rax],al
 448:	47 01 00             	rex.RXB add DWORD PTR [r8],r8d
 44b:	00 12                	add    BYTE PTR [rdx],dl
	...
 45d:	00 00                	add    BYTE PTR [rax],al
 45f:	00 90 01 00 00 12    	add    BYTE PTR [rax+0x12000001],dl
	...
 475:	00 00                	add    BYTE PTR [rax],al
 477:	00 e3                	add    bl,ah
 479:	01 00                	add    DWORD PTR [rax],eax
 47b:	00 12                	add    BYTE PTR [rdx],dl
	...
 48d:	00 00                	add    BYTE PTR [rax],al
 48f:	00 5c 02 00          	add    BYTE PTR [rdx+rax*1+0x0],bl
 493:	00 12                	add    BYTE PTR [rdx],dl
	...
 4a5:	00 00                	add    BYTE PTR [rax],al
 4a7:	00 cb                	add    bl,cl
 4a9:	01 00                	add    DWORD PTR [rax],eax
 4ab:	00 12                	add    BYTE PTR [rdx],dl
	...
 4bd:	00 00                	add    BYTE PTR [rax],al
 4bf:	00 90 00 00 00 12    	add    BYTE PTR [rax+0x12000000],dl
	...
 4d5:	00 00                	add    BYTE PTR [rax],al
 4d7:	00 07                	add    BYTE PTR [rdi],al
 4d9:	01 00                	add    DWORD PTR [rax],eax
 4db:	00 12                	add    BYTE PTR [rdx],dl
	...
 4ed:	00 00                	add    BYTE PTR [rax],al
 4ef:	00 1d 00 00 00 20    	add    BYTE PTR [rip+0x20000000],bl        # 200004f5 <_end+0x1fec34b5>
	...
 505:	00 00                	add    BYTE PTR [rax],al
 507:	00 98 01 00 00 12    	add    BYTE PTR [rax+0x12000001],bl
	...
 51d:	00 00                	add    BYTE PTR [rax],al
 51f:	00 56 02             	add    BYTE PTR [rsi+0x2],dl
 522:	00 00                	add    BYTE PTR [rax],al
 524:	12 00                	adc    al,BYTE PTR [rax]
	...
 536:	00 00                	add    BYTE PTR [rax],al
 538:	99                   	cdq    
 539:	02 00                	add    al,BYTE PTR [rax]
 53b:	00 12                	add    BYTE PTR [rdx],dl
	...
 54d:	00 00                	add    BYTE PTR [rax],al
 54f:	00 91 02 00 00 12    	add    BYTE PTR [rcx+0x12000002],dl
	...
 565:	00 00                	add    BYTE PTR [rax],al
 567:	00 7b 00             	add    BYTE PTR [rbx+0x0],bh
 56a:	00 00                	add    BYTE PTR [rax],al
 56c:	12 00                	adc    al,BYTE PTR [rax]
	...
 57e:	00 00                	add    BYTE PTR [rax],al
 580:	b6 01                	mov    dh,0x1
 582:	00 00                	add    BYTE PTR [rax],al
 584:	12 00                	adc    al,BYTE PTR [rax]
	...
 596:	00 00                	add    BYTE PTR [rax],al
 598:	2a 01                	sub    al,BYTE PTR [rcx]
 59a:	00 00                	add    BYTE PTR [rax],al
 59c:	12 00                	adc    al,BYTE PTR [rax]
	...
 5ae:	00 00                	add    BYTE PTR [rax],al
 5b0:	f1                   	icebp  
 5b1:	01 00                	add    DWORD PTR [rax],eax
 5b3:	00 12                	add    BYTE PTR [rdx],dl
	...
 5c5:	00 00                	add    BYTE PTR [rax],al
 5c7:	00 40 01             	add    BYTE PTR [rax+0x1],al
 5ca:	00 00                	add    BYTE PTR [rax],al
 5cc:	12 00                	adc    al,BYTE PTR [rax]
	...
 5de:	00 00                	add    BYTE PTR [rax],al
 5e0:	b0 01                	mov    al,0x1
 5e2:	00 00                	add    BYTE PTR [rax],al
 5e4:	12 00                	adc    al,BYTE PTR [rax]
	...
 5f6:	00 00                	add    BYTE PTR [rax],al
 5f8:	65 02 00             	add    al,BYTE PTR gs:[rax]
 5fb:	00 12                	add    BYTE PTR [rdx],dl
	...
 60d:	00 00                	add    BYTE PTR [rax],al
 60f:	00 50 00             	add    BYTE PTR [rax+0x0],dl
 612:	00 00                	add    BYTE PTR [rax],al
 614:	12 00                	adc    al,BYTE PTR [rax]
	...
 626:	00 00                	add    BYTE PTR [rax],al
 628:	b7 02                	mov    bh,0x2
 62a:	00 00                	add    BYTE PTR [rax],al
 62c:	12 00                	adc    al,BYTE PTR [rax]
	...
 63e:	00 00                	add    BYTE PTR [rax],al
 640:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 641:	00 00                	add    BYTE PTR [rax],al
 643:	00 12                	add    BYTE PTR [rdx],dl
	...
 655:	00 00                	add    BYTE PTR [rax],al
 657:	00 a3 00 00 00 12    	add    BYTE PTR [rbx+0x12000000],ah
	...
 66d:	00 00                	add    BYTE PTR [rax],al
 66f:	00 01                	add    BYTE PTR [rcx],al
 671:	00 00                	add    BYTE PTR [rax],al
 673:	00 20                	add    BYTE PTR [rax],ah
	...
 685:	00 00                	add    BYTE PTR [rax],al
 687:	00 11                	add    BYTE PTR [rcx],dl
 689:	02 00                	add    al,BYTE PTR [rax]
 68b:	00 12                	add    BYTE PTR [rdx],dl
	...
 69d:	00 00                	add    BYTE PTR [rax],al
 69f:	00 5c 01 00          	add    BYTE PTR [rcx+rax*1+0x0],bl
 6a3:	00 12                	add    BYTE PTR [rdx],dl
	...
 6b5:	00 00                	add    BYTE PTR [rax],al
 6b7:	00 76 00             	add    BYTE PTR [rsi+0x0],dh
 6ba:	00 00                	add    BYTE PTR [rax],al
 6bc:	12 00                	adc    al,BYTE PTR [rax]
	...
 6ce:	00 00                	add    BYTE PTR [rax],al
 6d0:	28 02                	sub    BYTE PTR [rdx],al
 6d2:	00 00                	add    BYTE PTR [rax],al
 6d4:	12 00                	adc    al,BYTE PTR [rax]
	...
 6e6:	00 00                	add    BYTE PTR [rax],al
 6e8:	2c 00                	sub    al,0x0
 6ea:	00 00                	add    BYTE PTR [rax],al
 6ec:	20 00                	and    BYTE PTR [rax],al
	...
 6fe:	00 00                	add    BYTE PTR [rax],al
 700:	74 02                	je     704 <__abi_tag+0x340>
 702:	00 00                	add    BYTE PTR [rax],al
 704:	12 00                	adc    al,BYTE PTR [rax]
	...
 716:	00 00                	add    BYTE PTR [rax],al
 718:	6d                   	ins    DWORD PTR es:[rdi],dx
 719:	02 00                	add    al,BYTE PTR [rax]
 71b:	00 12                	add    BYTE PTR [rdx],dl
	...
 72d:	00 00                	add    BYTE PTR [rax],al
 72f:	00 9e 02 00 00 12    	add    BYTE PTR [rsi+0x12000002],bl
	...
 745:	00 00                	add    BYTE PTR [rax],al
 747:	00 43 02             	add    BYTE PTR [rbx+0x2],al
 74a:	00 00                	add    BYTE PTR [rax],al
 74c:	12 00                	adc    al,BYTE PTR [rax]
	...
 75e:	00 00                	add    BYTE PTR [rax],al
 760:	24 01                	and    al,0x1
 762:	00 00                	add    BYTE PTR [rax],al
 764:	12 00                	adc    al,BYTE PTR [rax]
	...
 776:	00 00                	add    BYTE PTR [rax],al
 778:	01 01                	add    DWORD PTR [rcx],eax
 77a:	00 00                	add    BYTE PTR [rax],al
 77c:	12 00                	adc    al,BYTE PTR [rax]
	...
 78e:	00 00                	add    BYTE PTR [rax],al
 790:	1e                   	(bad)  
 791:	01 00                	add    DWORD PTR [rax],eax
 793:	00 12                	add    BYTE PTR [rdx],dl
	...
 7a5:	00 00                	add    BYTE PTR [rax],al
 7a7:	00 2f                	add    BYTE PTR [rdi],ch
 7a9:	02 00                	add    al,BYTE PTR [rax]
 7ab:	00 12                	add    BYTE PTR [rdx],dl
	...
 7bd:	00 00                	add    BYTE PTR [rax],al
 7bf:	00 d5                	add    ch,dl
 7c1:	00 00                	add    BYTE PTR [rax],al
 7c3:	00 12                	add    BYTE PTR [rdx],dl
	...
 7d5:	00 00                	add    BYTE PTR [rax],al
 7d7:	00 0a                	add    BYTE PTR [rdx],cl
 7d9:	02 00                	add    al,BYTE PTR [rax]
 7db:	00 12                	add    BYTE PTR [rdx],dl
	...
 7ed:	00 00                	add    BYTE PTR [rax],al
 7ef:	00 83 02 00 00 12    	add    BYTE PTR [rbx+0x12000002],al
	...
 805:	00 00                	add    BYTE PTR [rax],al
 807:	00 97 01 00 00 12    	add    BYTE PTR [rdi+0x12000001],dl
	...
 81d:	00 00                	add    BYTE PTR [rax],al
 81f:	00 dc                	add    ah,bl
 821:	01 00                	add    DWORD PTR [rax],eax
 823:	00 12                	add    BYTE PTR [rdx],dl
	...
 835:	00 00                	add    BYTE PTR [rax],al
 837:	00 ae 00 00 00 12    	add    BYTE PTR [rsi+0x12000000],ch
	...
 84d:	00 00                	add    BYTE PTR [rax],al
 84f:	00 ab 01 00 00 12    	add    BYTE PTR [rbx+0x12000001],ch
	...
 865:	00 00                	add    BYTE PTR [rax],al
 867:	00 6e 01             	add    BYTE PTR [rsi+0x1],ch
 86a:	00 00                	add    BYTE PTR [rax],al
 86c:	12 00                	adc    al,BYTE PTR [rax]
	...
 87e:	00 00                	add    BYTE PTR [rax],al
 880:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
 881:	01 00                	add    DWORD PTR [rax],eax
 883:	00 12                	add    BYTE PTR [rdx],dl
	...
 895:	00 00                	add    BYTE PTR [rax],al
 897:	00 2f                	add    BYTE PTR [rdi],ch
 899:	01 00                	add    DWORD PTR [rax],eax
 89b:	00 12                	add    BYTE PTR [rdx],dl
	...
 8ad:	00 00                	add    BYTE PTR [rax],al
 8af:	00 e0                	add    al,ah
 8b1:	00 00                	add    BYTE PTR [rax],al
 8b3:	00 12                	add    BYTE PTR [rdx],dl
	...
 8c5:	00 00                	add    BYTE PTR [rax],al
 8c7:	00 bd 00 00 00 12    	add    BYTE PTR [rbp+0x12000000],bh
	...
 8dd:	00 00                	add    BYTE PTR [rax],al
 8df:	00 9d 01 00 00 12    	add    BYTE PTR [rbp+0x12000001],bl
	...
 8f5:	00 00                	add    BYTE PTR [rax],al
 8f7:	00 eb                	add    bl,ch
 8f9:	00 00                	add    BYTE PTR [rax],al
 8fb:	00 12                	add    BYTE PTR [rdx],dl
	...
 90d:	00 00                	add    BYTE PTR [rax],al
 90f:	00 a6 02 00 00 12    	add    BYTE PTR [rsi+0x12000002],ah
	...
 925:	00 00                	add    BYTE PTR [rax],al
 927:	00 88 01 00 00 12    	add    BYTE PTR [rax+0x12000001],cl
	...
 93d:	00 00                	add    BYTE PTR [rax],al
 93f:	00 3e                	add    BYTE PTR [rsi],bh
 941:	02 00                	add    al,BYTE PTR [rax]
 943:	00 12                	add    BYTE PTR [rdx],dl
	...
 955:	00 00                	add    BYTE PTR [rax],al
 957:	00 f9                	add    cl,bh
 959:	00 00                	add    BYTE PTR [rax],al
 95b:	00 12                	add    BYTE PTR [rdx],dl
	...
 96d:	00 00                	add    BYTE PTR [rax],al
 96f:	00 c4                	add    ah,al
 971:	01 00                	add    DWORD PTR [rax],eax
 973:	00 12                	add    BYTE PTR [rdx],dl
	...
 985:	00 00                	add    BYTE PTR [rax],al
 987:	00 d5                	add    ch,dl
 989:	01 00                	add    DWORD PTR [rax],eax
 98b:	00 12                	add    BYTE PTR [rdx],dl
	...
 99d:	00 00                	add    BYTE PTR [rax],al
 99f:	00 cb                	add    bl,cl
 9a1:	00 00                	add    BYTE PTR [rax],al
 9a3:	00 12                	add    BYTE PTR [rdx],dl
	...
 9b5:	00 00                	add    BYTE PTR [rax],al
 9b7:	00 5f 00             	add    BYTE PTR [rdi+0x0],bl
 9ba:	00 00                	add    BYTE PTR [rax],al
 9bc:	12 00                	adc    al,BYTE PTR [rax]
	...
 9ce:	00 00                	add    BYTE PTR [rax],al
 9d0:	bd 01 00 00 12       	mov    ebp,0x12000001
	...
 9e5:	00 00                	add    BYTE PTR [rax],al
 9e7:	00 20                	add    BYTE PTR [rax],ah
 9e9:	02 00                	add    al,BYTE PTR [rax]
 9eb:	00 12                	add    BYTE PTR [rdx],dl
	...
 9fd:	00 00                	add    BYTE PTR [rax],al
 9ff:	00 f9                	add    cl,bh
 a01:	01 00                	add    DWORD PTR [rax],eax
 a03:	00 12                	add    BYTE PTR [rdx],dl
	...
 a15:	00 00                	add    BYTE PTR [rax],al
 a17:	00 54 01 00          	add    BYTE PTR [rcx+rax*1+0x0],dl
 a1b:	00 12                	add    BYTE PTR [rdx],dl
	...
 a2d:	00 00                	add    BYTE PTR [rax],al
 a2f:	00 4b 02             	add    BYTE PTR [rbx+0x2],cl
 a32:	00 00                	add    BYTE PTR [rax],al
 a34:	12 00                	adc    al,BYTE PTR [rax]
	...
 a46:	00 00                	add    BYTE PTR [rax],al
 a48:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
 a4b:	00 12                	add    BYTE PTR [rdx],dl
	...
 a5d:	00 00                	add    BYTE PTR [rax],al
 a5f:	00 50 02             	add    BYTE PTR [rax+0x2],dl
 a62:	00 00                	add    BYTE PTR [rax],al
 a64:	12 00                	adc    al,BYTE PTR [rax]
	...
 a76:	00 00                	add    BYTE PTR [rax],al
 a78:	7c 02                	jl     a7c <__abi_tag+0x6b8>
 a7a:	00 00                	add    BYTE PTR [rax],al
 a7c:	12 00                	adc    al,BYTE PTR [rax]
	...
 a8e:	00 00                	add    BYTE PTR [rax],al
 a90:	8f 01                	pop    QWORD PTR [rcx]
 a92:	00 00                	add    BYTE PTR [rax],al
 a94:	12 00                	adc    al,BYTE PTR [rax]
	...
 aa6:	00 00                	add    BYTE PTR [rax],al
 aa8:	36 01 00             	ss add DWORD PTR [rax],eax
 aab:	00 12                	add    BYTE PTR [rdx],dl
	...
 abd:	00 00                	add    BYTE PTR [rax],al
 abf:	00 35 02 00 00 12    	add    BYTE PTR [rip+0x12000002],dh        # 12000ac7 <_end+0x11ec3a87>
	...
 ad5:	00 00                	add    BYTE PTR [rax],al
 ad7:	00 76 01             	add    BYTE PTR [rsi+0x1],dh
 ada:	00 00                	add    BYTE PTR [rax],al
 adc:	12 00                	adc    al,BYTE PTR [rax]
	...
 aee:	00 00                	add    BYTE PTR [rax],al
 af0:	8a 02                	mov    al,BYTE PTR [rdx]
 af2:	00 00                	add    BYTE PTR [rax],al
 af4:	12 00                	adc    al,BYTE PTR [rax]
	...
 b06:	00 00                	add    BYTE PTR [rax],al
 b08:	96                   	xchg   esi,eax
 b09:	00 00                	add    BYTE PTR [rax],al
 b0b:	00 12                	add    BYTE PTR [rdx],dl
	...
 b1d:	00 00                	add    BYTE PTR [rax],al
 b1f:	00 3b                	add    BYTE PTR [rbx],bh
 b21:	01 00                	add    DWORD PTR [rax],eax
 b23:	00 12                	add    BYTE PTR [rdx],dl
	...
 b35:	00 00                	add    BYTE PTR [rax],al
 b37:	00 0f                	add    BYTE PTR [rdi],cl
 b39:	01 00                	add    DWORD PTR [rax],eax
 b3b:	00 22                	add    BYTE PTR [rdx],ah
	...
 b4d:	00 00                	add    BYTE PTR [rax],al
 b4f:	00 02                	add    BYTE PTR [rdx],al
 b51:	02 00                	add    al,BYTE PTR [rax]
 b53:	00 12                	add    BYTE PTR [rdx],dl
 b55:	00 10                	add    BYTE PTR [rax],dl
 b57:	00 ff                	add    bh,bh
 b59:	95                   	xchg   ebp,eax
 b5a:	00 00                	add    BYTE PTR [rax],al
 b5c:	00 00                	add    BYTE PTR [rax],al
 b5e:	00 00                	add    BYTE PTR [rax],al
 b60:	3a 01                	cmp    al,BYTE PTR [rcx]
 b62:	00 00                	add    BYTE PTR [rax],al
 b64:	00 00                	add    BYTE PTR [rax],al
 b66:	00 00                	add    BYTE PTR [rax],al
 b68:	ea                   	(bad)  
 b69:	01 00                	add    DWORD PTR [rax],eax
 b6b:	00 11                	add    BYTE PTR [rcx],dl
 b6d:	00 1b                	add    BYTE PTR [rbx],bl
 b6f:	00 60 10             	add    BYTE PTR [rax+0x10],ah
 b72:	01 00                	add    DWORD PTR [rax],eax
 b74:	00 00                	add    BYTE PTR [rax],al
 b76:	00 00                	add    BYTE PTR [rax],al
 b78:	08 00                	or     BYTE PTR [rax],al
 b7a:	00 00                	add    BYTE PTR [rax],al
 b7c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynstr:

0000000000000b80 <.dynstr>:
 b80:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 b83:	54                   	push   rsp
 b84:	4d 5f                	rex.WRB pop r15
 b86:	64 65 72 65          	fs gs jb bef <__abi_tag+0x82b>
 b8a:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 b91:	4d 
 b92:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 b94:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b95:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b96:	65 54                	gs push rsp
 b98:	61                   	(bad)  
 b99:	62                   	(bad)  
 b9a:	6c                   	ins    BYTE PTR es:[rdi],dx
 b9b:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
 b9f:	67 6d                	ins    DWORD PTR es:[edi],dx
 ba1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 ba2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 ba3:	5f                   	pop    rdi
 ba4:	73 74                	jae    c1a <__abi_tag+0x856>
 ba6:	61                   	(bad)  
 ba7:	72 74                	jb     c1d <__abi_tag+0x859>
 ba9:	5f                   	pop    rdi
 baa:	5f                   	pop    rdi
 bab:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 bae:	54                   	push   rsp
 baf:	4d 5f                	rex.WRB pop r15
 bb1:	72 65                	jb     c18 <__abi_tag+0x854>
 bb3:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 bba:	4d 
 bbb:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 bbd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bbe:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 bbf:	65 54                	gs push rsp
 bc1:	61                   	(bad)  
 bc2:	62                   	(bad)  
 bc3:	6c                   	ins    BYTE PTR es:[rdi],dx
 bc4:	65 00 70 63          	add    BYTE PTR gs:[rax+0x63],dh
 bc8:	61                   	(bad)  
 bc9:	70 5f                	jo     c2a <__abi_tag+0x866>
 bcb:	6c                   	ins    BYTE PTR es:[rdi],dx
 bcc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bcd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bce:	70 00                	jo     bd0 <__abi_tag+0x80c>
 bd0:	70 63                	jo     c35 <__abi_tag+0x871>
 bd2:	61                   	(bad)  
 bd3:	70 5f                	jo     c34 <__abi_tag+0x870>
 bd5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bd6:	70 65                	jo     c3d <__abi_tag+0x879>
 bd8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 bd9:	5f                   	pop    rdi
 bda:	6c                   	ins    BYTE PTR es:[rdi],dx
 bdb:	69 76 65 00 73 71 6c 	imul   esi,DWORD PTR [rsi+0x65],0x6c717300
 be2:	69 74 65 33 5f 65 72 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x7272655f
 be9:	72 
 bea:	6d                   	ins    DWORD PTR es:[rdi],dx
 beb:	73 67                	jae    c54 <__abi_tag+0x890>
 bed:	00 73 71             	add    BYTE PTR [rbx+0x71],dh
 bf0:	6c                   	ins    BYTE PTR es:[rdi],dx
 bf1:	69 74 65 33 5f 66 72 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6572665f
 bf8:	65 
 bf9:	65 00 73 71          	add    BYTE PTR gs:[rbx+0x71],dh
 bfd:	6c                   	ins    BYTE PTR es:[rdi],dx
 bfe:	69 74 65 33 5f 65 78 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6578655f
 c05:	65 
 c06:	63 00                	movsxd eax,DWORD PTR [rax]
 c08:	73 71                	jae    c7b <__abi_tag+0x8b7>
 c0a:	6c                   	ins    BYTE PTR es:[rdi],dx
 c0b:	69 74 65 33 5f 63 6c 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6f6c635f
 c12:	6f 
 c13:	73 65                	jae    c7a <__abi_tag+0x8b6>
 c15:	00 73 71             	add    BYTE PTR [rbx+0x71],dh
 c18:	6c                   	ins    BYTE PTR es:[rdi],dx
 c19:	69 74 65 33 5f 6f 70 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x65706f5f
 c20:	65 
 c21:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c22:	00 6c 75 61          	add    BYTE PTR [rbp+rsi*2+0x61],ch
 c26:	5f                   	pop    rdi
 c27:	73 65                	jae    c8e <__abi_tag+0x8ca>
 c29:	74 74                	je     c9f <__abi_tag+0x8db>
 c2b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c2c:	70 00                	jo     c2e <__abi_tag+0x86a>
 c2e:	6c                   	ins    BYTE PTR es:[rdi],dx
 c2f:	75 61                	jne    c92 <__abi_tag+0x8ce>
 c31:	4c 5f                	rex.WR pop rdi
 c33:	6c                   	ins    BYTE PTR es:[rdi],dx
 c34:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c35:	61                   	(bad)  
 c36:	64 66 69 6c 65 78 00 	imul   bp,WORD PTR fs:[rbp+riz*2+0x78],0x6c00
 c3d:	6c 
 c3e:	75 61                	jne    ca1 <__abi_tag+0x8dd>
 c40:	4c 5f                	rex.WR pop rdi
 c42:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c43:	65 77 73             	gs ja  cb9 <__abi_tag+0x8f5>
 c46:	74 61                	je     ca9 <__abi_tag+0x8e5>
 c48:	74 65                	je     caf <__abi_tag+0x8eb>
 c4a:	00 6c 75 61          	add    BYTE PTR [rbp+rsi*2+0x61],ch
 c4e:	5f                   	pop    rdi
 c4f:	63 6c 6f 73          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
 c53:	65 00 6c 75 61       	add    BYTE PTR gs:[rbp+rsi*2+0x61],ch
 c58:	5f                   	pop    rdi
 c59:	70 63                	jo     cbe <__abi_tag+0x8fa>
 c5b:	61                   	(bad)  
 c5c:	6c                   	ins    BYTE PTR es:[rdi],dx
 c5d:	6c                   	ins    BYTE PTR es:[rdi],dx
 c5e:	6b 00 6c             	imul   eax,DWORD PTR [rax],0x6c
 c61:	75 61                	jne    cc4 <__abi_tag+0x900>
 c63:	5f                   	pop    rdi
 c64:	67 65 74 74          	addr32 gs je cdc <__abi_tag+0x918>
 c68:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c69:	70 00                	jo     c6b <__abi_tag+0x8a7>
 c6b:	6c                   	ins    BYTE PTR es:[rdi],dx
 c6c:	75 61                	jne    ccf <__abi_tag+0x90b>
 c6e:	4c 5f                	rex.WR pop rdi
 c70:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c71:	70 65                	jo     cd8 <__abi_tag+0x914>
 c73:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c74:	6c                   	ins    BYTE PTR es:[rdi],dx
 c75:	69 62 73 00 67 65 74 	imul   esp,DWORD PTR [rdx+0x73],0x74656700
 c7c:	6c                   	ins    BYTE PTR es:[rdi],dx
 c7d:	69 6e 65 00 66 67 65 	imul   ebp,DWORD PTR [rsi+0x65],0x65676600
 c84:	74 63                	je     ce9 <__abi_tag+0x925>
 c86:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 c89:	72 6e                	jb     cf9 <__abi_tag+0x935>
 c8b:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
 c8e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 c91:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
 c94:	5f                   	pop    rdi
 c95:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 c9b:	7a 65                	jp     d02 <__abi_tag+0x93e>
 c9d:	00 6e 74             	add    BYTE PTR [rsi+0x74],ch
 ca0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 ca1:	68 6c 00 6e 74       	push   0x746e006c
 ca6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 ca7:	68 73 00 72 65       	push   0x65720073
 cac:	61                   	(bad)  
 cad:	64 00 73 74          	add    BYTE PTR fs:[rbx+0x74],dh
 cb1:	72 63                	jb     d16 <__abi_tag+0x952>
 cb3:	68 72 00 6c 6f       	push   0x6f6c0072
 cb8:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
 cbb:	74 69                	je     d26 <__abi_tag+0x962>
 cbd:	6d                   	ins    DWORD PTR es:[rdi],dx
 cbe:	65 00 6d 61          	add    BYTE PTR gs:[rbp+0x61],ch
 cc2:	6c                   	ins    BYTE PTR es:[rdi],dx
 cc3:	6c                   	ins    BYTE PTR es:[rdi],dx
 cc4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 cc5:	63 00                	movsxd eax,DWORD PTR [rax]
 cc7:	70 74                	jo     d3d <__abi_tag+0x979>
 cc9:	68 72 65 61 64       	push   0x64616572
 cce:	5f                   	pop    rdi
 ccf:	6a 6f                	push   0x6f
 cd1:	69 6e 00 73 74 72 63 	imul   ebp,DWORD PTR [rsi+0x0],0x63727473
 cd8:	73 70                	jae    d4a <__abi_tag+0x986>
 cda:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 cdb:	00 62 61             	add    BYTE PTR [rdx+0x61],ah
 cde:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
 ce1:	72 61                	jb     d44 <__abi_tag+0x980>
 ce3:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
 ce6:	73 79                	jae    d61 <__abi_tag+0x99d>
 ce8:	6d                   	ins    DWORD PTR es:[rdi],dx
 ce9:	62                   	(bad)  
 cea:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 ceb:	6c                   	ins    BYTE PTR es:[rdi],dx
 cec:	73 00                	jae    cee <__abi_tag+0x92a>
 cee:	72 65                	jb     d55 <__abi_tag+0x991>
 cf0:	67 63 6f 6d          	movsxd ebp,DWORD PTR [edi+0x6d]
 cf4:	70 00                	jo     cf6 <__abi_tag+0x932>
 cf6:	5f                   	pop    rdi
 cf7:	5f                   	pop    rdi
 cf8:	6c                   	ins    BYTE PTR es:[rdi],dx
 cf9:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 d00:	72 74                	jb     d76 <__abi_tag+0x9b2>
 d02:	5f                   	pop    rdi
 d03:	6d                   	ins    DWORD PTR es:[rdi],dx
 d04:	61                   	(bad)  
 d05:	69 6e 00 73 74 72 63 	imul   ebp,DWORD PTR [rsi+0x0],0x63727473
 d0c:	6d                   	ins    DWORD PTR es:[rdi],dx
 d0d:	70 00                	jo     d0f <__abi_tag+0x94b>
 d0f:	66 70 72             	data16 jo d84 <__abi_tag+0x9c0>
 d12:	69 6e 74 66 00 66 70 	imul   ebp,DWORD PTR [rsi+0x74],0x70660066
 d19:	75 74                	jne    d8f <__abi_tag+0x9cb>
 d1b:	73 00                	jae    d1d <__abi_tag+0x959>
 d1d:	73 6f                	jae    d8e <__abi_tag+0x9ca>
 d1f:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
 d22:	74 00                	je     d24 <__abi_tag+0x960>
 d24:	73 69                	jae    d8f <__abi_tag+0x9cb>
 d26:	67 6e                	outs   dx,BYTE PTR ds:[esi]
 d28:	61                   	(bad)  
 d29:	6c                   	ins    BYTE PTR es:[rdi],dx
 d2a:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
 d2d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d2e:	69 00 66 6f 70 65    	imul   eax,DWORD PTR [rax],0x65706f66
 d34:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d35:	00 67 65             	add    BYTE PTR [rdi+0x65],ah
 d38:	74 6f                	je     da9 <__abi_tag+0x9e5>
 d3a:	70 74                	jo     db0 <__abi_tag+0x9ec>
 d3c:	00 66 63             	add    BYTE PTR [rsi+0x63],ah
 d3f:	6c                   	ins    BYTE PTR es:[rdi],dx
 d40:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d41:	73 65                	jae    da8 <__abi_tag+0x9e4>
 d43:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 d46:	72 63                	jb     dab <__abi_tag+0x9e7>
 d48:	70 79                	jo     dc3 <__abi_tag+0x9ff>
 d4a:	00 62 61             	add    BYTE PTR [rdx+0x61],ah
 d4d:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
 d50:	72 61                	jb     db3 <__abi_tag+0x9ef>
 d52:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
 d55:	73 74                	jae    dcb <__abi_tag+0xa07>
 d57:	72 74                	jb     dcd <__abi_tag+0xa09>
 d59:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d5a:	6b 00 73             	imul   eax,DWORD PTR [rax],0x73
 d5d:	74 72                	je     dd1 <__abi_tag+0xa0d>
 d5f:	74 6f                	je     dd0 <__abi_tag+0xa0c>
 d61:	6c                   	ins    BYTE PTR es:[rdi],dx
 d62:	00 6d 65             	add    BYTE PTR [rbp+0x65],ch
 d65:	6d                   	ins    DWORD PTR es:[rdi],dx
 d66:	73 65                	jae    dcd <__abi_tag+0xa09>
 d68:	74 00                	je     d6a <__abi_tag+0x9a6>
 d6a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d6b:	70 74                	jo     de1 <__abi_tag+0xa1d>
 d6d:	61                   	(bad)  
 d6e:	72 67                	jb     dd7 <__abi_tag+0xa13>
 d70:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 d73:	72 6e                	jb     de3 <__abi_tag+0xa1f>
 d75:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
 d78:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
 d7b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d7c:	73 65                	jae    de3 <__abi_tag+0xa1f>
 d7e:	64 69 72 00 69 73 64 	imul   esi,DWORD PTR fs:[rdx+0x0],0x69647369
 d85:	69 
 d86:	67 69 74 00 73 74 72 	imul   esi,DWORD PTR [eax+eax*1+0x73],0x74737274
 d8d:	73 74 
 d8f:	72 00                	jb     d91 <__abi_tag+0x9cd>
 d91:	70 74                	jo     e07 <__abi_tag+0xa43>
 d93:	68 72 65 61 64       	push   0x64616572
 d98:	5f                   	pop    rdi
 d99:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
 d9c:	61                   	(bad)  
 d9d:	74 65                	je     e04 <__abi_tag+0xa40>
 d9f:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 da2:	72 6e                	jb     e12 <__abi_tag+0xa4e>
 da4:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
 da7:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 daa:	72 6c                	jb     e18 <__abi_tag+0xa54>
 dac:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 dae:	00 73 6c             	add    BYTE PTR [rbx+0x6c],dh
 db1:	65 65 70 00          	gs gs jo db5 <__abi_tag+0x9f1>
 db5:	67 65 74 64          	addr32 gs je e1d <__abi_tag+0xa59>
 db9:	65 6c                	gs ins BYTE PTR es:[rdi],dx
 dbb:	69 6d 00 73 65 6e 64 	imul   ebp,DWORD PTR [rbp+0x0],0x646e6573
 dc2:	00 73 70             	add    BYTE PTR [rbx+0x70],dh
 dc5:	72 69                	jb     e30 <__abi_tag+0xa6c>
 dc7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 dc8:	74 66                	je     e30 <__abi_tag+0xa6c>
 dca:	00 62 69             	add    BYTE PTR [rdx+0x69],ah
 dcd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 dce:	64 00 68 74          	add    BYTE PTR fs:[rax+0x74],ch
 dd2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 dd3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 dd4:	6c                   	ins    BYTE PTR es:[rdi],dx
 dd5:	00 68 74             	add    BYTE PTR [rax+0x74],ch
 dd8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 dd9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 dda:	73 00                	jae    ddc <__abi_tag+0xa18>
 ddc:	73 6e                	jae    e4c <__abi_tag+0xa88>
 dde:	70 72                	jo     e52 <__abi_tag+0xa8e>
 de0:	69 6e 74 66 00 72 65 	imul   ebp,DWORD PTR [rsi+0x74],0x65720066
 de7:	67 65 78 65          	addr32 gs js e50 <__abi_tag+0xa8c>
 deb:	63 00                	movsxd eax,DWORD PTR [rax]
 ded:	6c                   	ins    BYTE PTR es:[rdi],dx
 dee:	69 73 74 65 6e 00 6f 	imul   esi,DWORD PTR [rbx+0x74],0x6f006e65
 df5:	70 65                	jo     e5c <__abi_tag+0xa98>
 df7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 df8:	64 69 72 00 70 65 72 	imul   esi,DWORD PTR fs:[rdx+0x0],0x72726570
 dff:	72 
 e00:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 e01:	72 00                	jb     e03 <__abi_tag+0xa3f>
 e03:	73 74                	jae    e79 <__abi_tag+0xab5>
 e05:	72 63                	jb     e6a <__abi_tag+0xaa6>
 e07:	61                   	(bad)  
 e08:	74 00                	je     e0a <__abi_tag+0xa46>
 e0a:	61                   	(bad)  
 e0b:	63 63 65             	movsxd esp,DWORD PTR [rbx+0x65]
 e0e:	70 74                	jo     e84 <__abi_tag+0xac0>
 e10:	00 70 75             	add    BYTE PTR [rax+0x75],dh
 e13:	74 63                	je     e78 <__abi_tag+0xab4>
 e15:	68 61 72 00 65       	push   0x65007261
 e1a:	78 69                	js     e85 <__abi_tag+0xac1>
 e1c:	74 00                	je     e1e <__abi_tag+0xa5a>
 e1e:	72 65                	jb     e85 <__abi_tag+0xac1>
 e20:	61                   	(bad)  
 e21:	64 64 69 72 00 5f 5f 	fs imul esi,DWORD PTR fs:[rdx+0x0],0x74735f5f
 e28:	73 74 
 e2a:	61                   	(bad)  
 e2b:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 e2e:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 e31:	5f                   	pop    rdi
 e32:	66 61                	data16 (bad) 
 e34:	69 6c 00 73 65 74 73 	imul   ebp,DWORD PTR [rax+rax*1+0x73],0x6f737465
 e3b:	6f 
 e3c:	63 6b 6f             	movsxd ebp,DWORD PTR [rbx+0x6f]
 e3f:	70 74                	jo     eb5 <__abi_tag+0xaf1>
 e41:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 e45:	70 63                	jo     eaa <__abi_tag+0xae6>
 e47:	61                   	(bad)  
 e48:	70 2e                	jo     e78 <__abi_tag+0xab4>
 e4a:	73 6f                	jae    ebb <__abi_tag+0xaf7>
 e4c:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
 e4f:	38 00                	cmp    BYTE PTR [rax],al
 e51:	6c                   	ins    BYTE PTR es:[rdi],dx
 e52:	69 62 73 71 6c 69 74 	imul   esp,DWORD PTR [rdx+0x73],0x74696c71
 e59:	65 33 2e             	xor    ebp,DWORD PTR gs:[rsi]
 e5c:	73 6f                	jae    ecd <__abi_tag+0xb09>
 e5e:	2e 30 00             	cs xor BYTE PTR [rax],al
 e61:	6c                   	ins    BYTE PTR es:[rdi],dx
 e62:	69 62 6c 75 61 35 2e 	imul   esp,DWORD PTR [rdx+0x6c],0x2e356175
 e69:	33 2e                	xor    ebp,DWORD PTR [rsi]
 e6b:	73 6f                	jae    edc <__abi_tag+0xb18>
 e6d:	2e 30 00             	cs xor BYTE PTR [rax],al
 e70:	6c                   	ins    BYTE PTR es:[rdi],dx
 e71:	69 62 63 2e 73 6f 2e 	imul   esp,DWORD PTR [rdx+0x63],0x2e6f732e
 e78:	36 00 4c 55 41       	ss add BYTE PTR [rbp+rdx*2+0x41],cl
 e7d:	5f                   	pop    rdi
 e7e:	35 2e 33 00 47       	xor    eax,0x4700332e
 e83:	4c                   	rex.WR
 e84:	49                   	rex.WB
 e85:	42                   	rex.X
 e86:	43 5f                	rex.XB pop r15
 e88:	32 2e                	xor    ch,BYTE PTR [rsi]
 e8a:	34 00                	xor    al,0x0
 e8c:	47                   	rex.RXB
 e8d:	4c                   	rex.WR
 e8e:	49                   	rex.WB
 e8f:	42                   	rex.X
 e90:	43 5f                	rex.XB pop r15
 e92:	32 2e                	xor    ch,BYTE PTR [rsi]
 e94:	33 2e                	xor    ebp,DWORD PTR [rsi]
 e96:	34 00                	xor    al,0x0
 e98:	47                   	rex.RXB
 e99:	4c                   	rex.WR
 e9a:	49                   	rex.WB
 e9b:	42                   	rex.X
 e9c:	43 5f                	rex.XB pop r15
 e9e:	32 2e                	xor    ch,BYTE PTR [rsi]
 ea0:	32 2e                	xor    ch,BYTE PTR [rsi]
 ea2:	35 00 47 4c 49       	xor    eax,0x494c4700
 ea7:	42                   	rex.X
 ea8:	43 5f                	rex.XB pop r15
 eaa:	32 2e                	xor    ch,BYTE PTR [rsi]
 eac:	33 34 00             	xor    esi,DWORD PTR [rax+rax*1]

Disassembly of section .gnu.version:

0000000000000eb0 <.gnu.version>:
 eb0:	00 00                	add    BYTE PTR [rax],al
 eb2:	00 00                	add    BYTE PTR [rax],al
 eb4:	02 00                	add    al,BYTE PTR [rax]
 eb6:	03 00                	add    eax,DWORD PTR [rax]
 eb8:	03 00                	add    eax,DWORD PTR [rax]
 eba:	03 00                	add    eax,DWORD PTR [rax]
 ebc:	03 00                	add    eax,DWORD PTR [rax]
 ebe:	03 00                	add    eax,DWORD PTR [rax]
 ec0:	03 00                	add    eax,DWORD PTR [rax]
 ec2:	00 00                	add    BYTE PTR [rax],al
 ec4:	03 00                	add    eax,DWORD PTR [rax]
 ec6:	03 00                	add    eax,DWORD PTR [rax]
 ec8:	03 00                	add    eax,DWORD PTR [rax]
 eca:	03 00                	add    eax,DWORD PTR [rax]
 ecc:	00 00                	add    BYTE PTR [rax],al
 ece:	03 00                	add    eax,DWORD PTR [rax]
 ed0:	03 00                	add    eax,DWORD PTR [rax]
 ed2:	03 00                	add    eax,DWORD PTR [rax]
 ed4:	03 00                	add    eax,DWORD PTR [rax]
 ed6:	03 00                	add    eax,DWORD PTR [rax]
 ed8:	04 00                	add    al,0x0
 eda:	00 00                	add    BYTE PTR [rax],al
 edc:	03 00                	add    eax,DWORD PTR [rax]
 ede:	00 00                	add    BYTE PTR [rax],al
 ee0:	05 00 00 00 02       	add    eax,0x2000000
 ee5:	00 03                	add    BYTE PTR [rbx],al
 ee7:	00 03                	add    BYTE PTR [rbx],al
 ee9:	00 03                	add    BYTE PTR [rbx],al
 eeb:	00 00                	add    BYTE PTR [rax],al
 eed:	00 03                	add    BYTE PTR [rbx],al
 eef:	00 03                	add    BYTE PTR [rbx],al
 ef1:	00 03                	add    BYTE PTR [rbx],al
 ef3:	00 03                	add    BYTE PTR [rbx],al
 ef5:	00 03                	add    BYTE PTR [rbx],al
 ef7:	00 03                	add    BYTE PTR [rbx],al
 ef9:	00 03                	add    BYTE PTR [rbx],al
 efb:	00 03                	add    BYTE PTR [rbx],al
 efd:	00 05 00 03 00 03    	add    BYTE PTR [rip+0x3000300],al        # 3001203 <_end+0x2ec41c3>
 f03:	00 03                	add    BYTE PTR [rbx],al
 f05:	00 03                	add    BYTE PTR [rbx],al
 f07:	00 05 00 03 00 03    	add    BYTE PTR [rip+0x3000300],al        # 300120d <_end+0x2ec41cd>
 f0d:	00 03                	add    BYTE PTR [rbx],al
 f0f:	00 03                	add    BYTE PTR [rbx],al
 f11:	00 05 00 05 00 03    	add    BYTE PTR [rip+0x3000500],al        # 3001417 <_end+0x2ec43d7>
 f17:	00 05 00 06 00 03    	add    BYTE PTR [rip+0x3000600],al        # 300151d <_end+0x2ec44dd>
 f1d:	00 03                	add    BYTE PTR [rbx],al
 f1f:	00 03                	add    BYTE PTR [rbx],al
 f21:	00 03                	add    BYTE PTR [rbx],al
 f23:	00 03                	add    BYTE PTR [rbx],al
 f25:	00 05 00 00 00 03    	add    BYTE PTR [rip+0x3000000],al        # 3000f2b <_end+0x2ec3eeb>
 f2b:	00 03                	add    BYTE PTR [rbx],al
 f2d:	00 03                	add    BYTE PTR [rbx],al
 f2f:	00 03                	add    BYTE PTR [rbx],al
 f31:	00 03                	add    BYTE PTR [rbx],al
 f33:	00 00                	add    BYTE PTR [rax],al
 f35:	00 03                	add    BYTE PTR [rbx],al
 f37:	00 03                	add    BYTE PTR [rbx],al
 f39:	00 03                	add    BYTE PTR [rbx],al
 f3b:	00 03                	add    BYTE PTR [rbx],al
 f3d:	00 03                	add    BYTE PTR [rbx],al
 f3f:	00 02                	add    BYTE PTR [rdx],al
 f41:	00 03                	add    BYTE PTR [rbx],al
 f43:	00 00                	add    BYTE PTR [rax],al
 f45:	00 03                	add    BYTE PTR [rbx],al
 f47:	00 03                	add    BYTE PTR [rbx],al
 f49:	00 01                	add    BYTE PTR [rcx],al
 f4b:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .gnu.version_r:

0000000000000f50 <.gnu.version_r>:
 f50:	01 00                	add    DWORD PTR [rax],eax
 f52:	01 00                	add    DWORD PTR [rax],eax
 f54:	e1 02                	loope  f58 <__abi_tag+0xb94>
 f56:	00 00                	add    BYTE PTR [rax],al
 f58:	10 00                	adc    BYTE PTR [rax],al
 f5a:	00 00                	add    BYTE PTR [rax],al
 f5c:	20 00                	and    BYTE PTR [rax],al
 f5e:	00 00                	add    BYTE PTR [rax],al
 f60:	43 28 97 01 00 00 05 	rex.XB sub BYTE PTR [r15+0x5000001],dl
 f67:	00 fa                	add    dl,bh
 f69:	02 00                	add    al,BYTE PTR [rax]
 f6b:	00 00                	add    BYTE PTR [rax],al
 f6d:	00 00                	add    BYTE PTR [rax],al
 f6f:	00 01                	add    BYTE PTR [rcx],al
 f71:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 f74:	f0 02 00             	lock add al,BYTE PTR [rax]
 f77:	00 10                	add    BYTE PTR [rax],dl
 f79:	00 00                	add    BYTE PTR [rax],al
 f7b:	00 00                	add    BYTE PTR [rax],al
 f7d:	00 00                	add    BYTE PTR [rax],al
 f7f:	00 14 69             	add    BYTE PTR [rcx+rbp*2],dl
 f82:	69 0d 00 00 06 00 02 	imul   ecx,DWORD PTR [rip+0x60000],0x302        # 60f8c <rules+0x4fcac>
 f89:	03 00 00 
 f8c:	10 00                	adc    BYTE PTR [rax],al
 f8e:	00 00                	add    BYTE PTR [rax],al
 f90:	74 19                	je     fab <__abi_tag+0xbe7>
 f92:	69 09 00 00 04 00    	imul   ecx,DWORD PTR [rcx],0x40000
 f98:	0c 03                	or     al,0x3
 f9a:	00 00                	add    BYTE PTR [rax],al
 f9c:	10 00                	adc    BYTE PTR [rax],al
 f9e:	00 00                	add    BYTE PTR [rax],al
 fa0:	75 1a                	jne    fbc <__abi_tag+0xbf8>
 fa2:	69 09 00 00 03 00    	imul   ecx,DWORD PTR [rcx],0x30000
 fa8:	18 03                	sbb    BYTE PTR [rbx],al
 faa:	00 00                	add    BYTE PTR [rax],al
 fac:	10 00                	adc    BYTE PTR [rax],al
 fae:	00 00                	add    BYTE PTR [rax],al
 fb0:	b4 91                	mov    ah,0x91
 fb2:	96                   	xchg   esi,eax
 fb3:	06                   	(bad)  
 fb4:	00 00                	add    BYTE PTR [rax],al
 fb6:	02 00                	add    al,BYTE PTR [rax]
 fb8:	24 03                	and    al,0x3
 fba:	00 00                	add    BYTE PTR [rax],al
 fbc:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000000fc0 <.rela.dyn>:
     fc0:	58                   	pop    rax
     fc1:	0b 01                	or     eax,DWORD PTR [rcx]
     fc3:	00 00                	add    BYTE PTR [rax],al
     fc5:	00 00                	add    BYTE PTR [rax],al
     fc7:	00 08                	add    BYTE PTR [rax],cl
	...
     fd1:	2a 00                	sub    al,BYTE PTR [rax]
     fd3:	00 00                	add    BYTE PTR [rax],al
     fd5:	00 00                	add    BYTE PTR [rax],al
     fd7:	00 60 0b             	add    BYTE PTR [rax+0xb],ah
     fda:	01 00                	add    DWORD PTR [rax],eax
     fdc:	00 00                	add    BYTE PTR [rax],al
     fde:	00 00                	add    BYTE PTR [rax],al
     fe0:	08 00                	or     BYTE PTR [rax],al
     fe2:	00 00                	add    BYTE PTR [rax],al
     fe4:	00 00                	add    BYTE PTR [rax],al
     fe6:	00 00                	add    BYTE PTR [rax],al
     fe8:	c0 29 00             	shr    BYTE PTR [rcx],0x0
     feb:	00 00                	add    BYTE PTR [rax],al
     fed:	00 00                	add    BYTE PTR [rax],al
     fef:	00 08                	add    BYTE PTR [rax],cl
     ff1:	10 01                	adc    BYTE PTR [rcx],al
     ff3:	00 00                	add    BYTE PTR [rax],al
     ff5:	00 00                	add    BYTE PTR [rax],al
     ff7:	00 08                	add    BYTE PTR [rax],cl
     ff9:	00 00                	add    BYTE PTR [rax],al
     ffb:	00 00                	add    BYTE PTR [rax],al
     ffd:	00 00                	add    BYTE PTR [rax],al
     fff:	00 08                	add    BYTE PTR [rax],cl
    1001:	10 01                	adc    BYTE PTR [rcx],al
    1003:	00 00                	add    BYTE PTR [rax],al
    1005:	00 00                	add    BYTE PTR [rax],al
    1007:	00 28                	add    BYTE PTR [rax],ch
    1009:	10 01                	adc    BYTE PTR [rcx],al
    100b:	00 00                	add    BYTE PTR [rax],al
    100d:	00 00                	add    BYTE PTR [rax],al
    100f:	00 08                	add    BYTE PTR [rax],cl
    1011:	00 00                	add    BYTE PTR [rax],al
    1013:	00 00                	add    BYTE PTR [rax],al
    1015:	00 00                	add    BYTE PTR [rax],al
    1017:	00 04 c0             	add    BYTE PTR [rax+rax*8],al
    101a:	00 00                	add    BYTE PTR [rax],al
    101c:	00 00                	add    BYTE PTR [rax],al
    101e:	00 00                	add    BYTE PTR [rax],al
    1020:	30 10                	xor    BYTE PTR [rax],dl
    1022:	01 00                	add    DWORD PTR [rax],eax
    1024:	00 00                	add    BYTE PTR [rax],al
    1026:	00 00                	add    BYTE PTR [rax],al
    1028:	08 00                	or     BYTE PTR [rax],al
    102a:	00 00                	add    BYTE PTR [rax],al
    102c:	00 00                	add    BYTE PTR [rax],al
    102e:	00 00                	add    BYTE PTR [rax],al
    1030:	1a c0                	sbb    al,al
    1032:	00 00                	add    BYTE PTR [rax],al
    1034:	00 00                	add    BYTE PTR [rax],al
    1036:	00 00                	add    BYTE PTR [rax],al
    1038:	38 10                	cmp    BYTE PTR [rax],dl
    103a:	01 00                	add    DWORD PTR [rax],eax
    103c:	00 00                	add    BYTE PTR [rax],al
    103e:	00 00                	add    BYTE PTR [rax],al
    1040:	08 00                	or     BYTE PTR [rax],al
    1042:	00 00                	add    BYTE PTR [rax],al
    1044:	00 00                	add    BYTE PTR [rax],al
    1046:	00 00                	add    BYTE PTR [rax],al
    1048:	34 c0                	xor    al,0xc0
    104a:	00 00                	add    BYTE PTR [rax],al
    104c:	00 00                	add    BYTE PTR [rax],al
    104e:	00 00                	add    BYTE PTR [rax],al
    1050:	d8 0f                	fmul   DWORD PTR [rdi]
    1052:	01 00                	add    DWORD PTR [rax],eax
    1054:	00 00                	add    BYTE PTR [rax],al
    1056:	00 00                	add    BYTE PTR [rax],al
    1058:	06                   	(bad)  
    1059:	00 00                	add    BYTE PTR [rax],al
    105b:	00 09                	add    BYTE PTR [rcx],cl
	...
    1065:	00 00                	add    BYTE PTR [rax],al
    1067:	00 e0                	add    al,ah
    1069:	0f 01 00             	sgdt   [rax]
    106c:	00 00                	add    BYTE PTR [rax],al
    106e:	00 00                	add    BYTE PTR [rax],al
    1070:	06                   	(bad)  
    1071:	00 00                	add    BYTE PTR [rax],al
    1073:	00 19                	add    BYTE PTR [rcx],bl
	...
    107d:	00 00                	add    BYTE PTR [rax],al
    107f:	00 e8                	add    al,ch
    1081:	0f 01 00             	sgdt   [rax]
    1084:	00 00                	add    BYTE PTR [rax],al
    1086:	00 00                	add    BYTE PTR [rax],al
    1088:	06                   	(bad)  
    1089:	00 00                	add    BYTE PTR [rax],al
    108b:	00 1e                	add    BYTE PTR [rsi],bl
	...
    1095:	00 00                	add    BYTE PTR [rax],al
    1097:	00 f0                	add    al,dh
    1099:	0f 01 00             	sgdt   [rax]
    109c:	00 00                	add    BYTE PTR [rax],al
    109e:	00 00                	add    BYTE PTR [rax],al
    10a0:	06                   	(bad)  
    10a1:	00 00                	add    BYTE PTR [rax],al
    10a3:	00 4c 00 00          	add    BYTE PTR [rax+rax*1+0x0],cl
	...
    10af:	00 f8                	add    al,bh
    10b1:	0f 01 00             	sgdt   [rax]
    10b4:	00 00                	add    BYTE PTR [rax],al
    10b6:	00 00                	add    BYTE PTR [rax],al
    10b8:	06                   	(bad)  
    10b9:	00 00                	add    BYTE PTR [rax],al
    10bb:	00 48 00             	add    BYTE PTR [rax+0x0],cl
	...
    10c6:	00 00                	add    BYTE PTR [rax],al
    10c8:	60                   	(bad)  
    10c9:	10 01                	adc    BYTE PTR [rcx],al
    10cb:	00 00                	add    BYTE PTR [rax],al
    10cd:	00 00                	add    BYTE PTR [rax],al
    10cf:	00 05 00 00 00 4e    	add    BYTE PTR [rip+0x4e000000],al        # 4e0010d5 <_end+0x4dec4095>
	...

Disassembly of section .rela.plt:

00000000000010e0 <.rela.plt>:
    10e0:	a0 0d 01 00 00 00 00 	movabs al,ds:0x70000000000010d
    10e7:	00 07 
    10e9:	00 00                	add    BYTE PTR [rax],al
    10eb:	00 01                	add    BYTE PTR [rcx],al
	...
    10f5:	00 00                	add    BYTE PTR [rax],al
    10f7:	00 a8 0d 01 00 00    	add    BYTE PTR [rax+0x10d],ch
    10fd:	00 00                	add    BYTE PTR [rax],al
    10ff:	00 07                	add    BYTE PTR [rdi],al
    1101:	00 00                	add    BYTE PTR [rax],al
    1103:	00 02                	add    BYTE PTR [rdx],al
	...
    110d:	00 00                	add    BYTE PTR [rax],al
    110f:	00 b0 0d 01 00 00    	add    BYTE PTR [rax+0x10d],dh
    1115:	00 00                	add    BYTE PTR [rax],al
    1117:	00 07                	add    BYTE PTR [rdi],al
    1119:	00 00                	add    BYTE PTR [rax],al
    111b:	00 03                	add    BYTE PTR [rbx],al
	...
    1125:	00 00                	add    BYTE PTR [rax],al
    1127:	00 b8 0d 01 00 00    	add    BYTE PTR [rax+0x10d],bh
    112d:	00 00                	add    BYTE PTR [rax],al
    112f:	00 07                	add    BYTE PTR [rdi],al
    1131:	00 00                	add    BYTE PTR [rax],al
    1133:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
    113e:	00 00                	add    BYTE PTR [rax],al
    1140:	c0 0d 01 00 00 00 00 	ror    BYTE PTR [rip+0x1],0x0        # 1148 <__abi_tag+0xd84>
    1147:	00 07                	add    BYTE PTR [rdi],al
    1149:	00 00                	add    BYTE PTR [rax],al
    114b:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 1151 <__abi_tag+0xd8d>
    1151:	00 00                	add    BYTE PTR [rax],al
    1153:	00 00                	add    BYTE PTR [rax],al
    1155:	00 00                	add    BYTE PTR [rax],al
    1157:	00 c8                	add    al,cl
    1159:	0d 01 00 00 00       	or     eax,0x1
    115e:	00 00                	add    BYTE PTR [rax],al
    1160:	07                   	(bad)  
    1161:	00 00                	add    BYTE PTR [rax],al
    1163:	00 06                	add    BYTE PTR [rsi],al
	...
    116d:	00 00                	add    BYTE PTR [rax],al
    116f:	00 d0                	add    al,dl
    1171:	0d 01 00 00 00       	or     eax,0x1
    1176:	00 00                	add    BYTE PTR [rax],al
    1178:	07                   	(bad)  
    1179:	00 00                	add    BYTE PTR [rax],al
    117b:	00 07                	add    BYTE PTR [rdi],al
	...
    1185:	00 00                	add    BYTE PTR [rax],al
    1187:	00 d8                	add    al,bl
    1189:	0d 01 00 00 00       	or     eax,0x1
    118e:	00 00                	add    BYTE PTR [rax],al
    1190:	07                   	(bad)  
    1191:	00 00                	add    BYTE PTR [rax],al
    1193:	00 08                	add    BYTE PTR [rax],cl
	...
    119d:	00 00                	add    BYTE PTR [rax],al
    119f:	00 e0                	add    al,ah
    11a1:	0d 01 00 00 00       	or     eax,0x1
    11a6:	00 00                	add    BYTE PTR [rax],al
    11a8:	07                   	(bad)  
    11a9:	00 00                	add    BYTE PTR [rax],al
    11ab:	00 0a                	add    BYTE PTR [rdx],cl
	...
    11b5:	00 00                	add    BYTE PTR [rax],al
    11b7:	00 e8                	add    al,ch
    11b9:	0d 01 00 00 00       	or     eax,0x1
    11be:	00 00                	add    BYTE PTR [rax],al
    11c0:	07                   	(bad)  
    11c1:	00 00                	add    BYTE PTR [rax],al
    11c3:	00 0b                	add    BYTE PTR [rbx],cl
	...
    11cd:	00 00                	add    BYTE PTR [rax],al
    11cf:	00 f0                	add    al,dh
    11d1:	0d 01 00 00 00       	or     eax,0x1
    11d6:	00 00                	add    BYTE PTR [rax],al
    11d8:	07                   	(bad)  
    11d9:	00 00                	add    BYTE PTR [rax],al
    11db:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
	...
    11e6:	00 00                	add    BYTE PTR [rax],al
    11e8:	f8                   	clc    
    11e9:	0d 01 00 00 00       	or     eax,0x1
    11ee:	00 00                	add    BYTE PTR [rax],al
    11f0:	07                   	(bad)  
    11f1:	00 00                	add    BYTE PTR [rax],al
    11f3:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 11f9 <__abi_tag+0xe35>
	...
    1201:	0e                   	(bad)  
    1202:	01 00                	add    DWORD PTR [rax],eax
    1204:	00 00                	add    BYTE PTR [rax],al
    1206:	00 00                	add    BYTE PTR [rax],al
    1208:	07                   	(bad)  
    1209:	00 00                	add    BYTE PTR [rax],al
    120b:	00 0e                	add    BYTE PTR [rsi],cl
	...
    1215:	00 00                	add    BYTE PTR [rax],al
    1217:	00 08                	add    BYTE PTR [rax],cl
    1219:	0e                   	(bad)  
    121a:	01 00                	add    DWORD PTR [rax],eax
    121c:	00 00                	add    BYTE PTR [rax],al
    121e:	00 00                	add    BYTE PTR [rax],al
    1220:	07                   	(bad)  
    1221:	00 00                	add    BYTE PTR [rax],al
    1223:	00 0f                	add    BYTE PTR [rdi],cl
	...
    122d:	00 00                	add    BYTE PTR [rax],al
    122f:	00 10                	add    BYTE PTR [rax],dl
    1231:	0e                   	(bad)  
    1232:	01 00                	add    DWORD PTR [rax],eax
    1234:	00 00                	add    BYTE PTR [rax],al
    1236:	00 00                	add    BYTE PTR [rax],al
    1238:	07                   	(bad)  
    1239:	00 00                	add    BYTE PTR [rax],al
    123b:	00 10                	add    BYTE PTR [rax],dl
	...
    1245:	00 00                	add    BYTE PTR [rax],al
    1247:	00 18                	add    BYTE PTR [rax],bl
    1249:	0e                   	(bad)  
    124a:	01 00                	add    DWORD PTR [rax],eax
    124c:	00 00                	add    BYTE PTR [rax],al
    124e:	00 00                	add    BYTE PTR [rax],al
    1250:	07                   	(bad)  
    1251:	00 00                	add    BYTE PTR [rax],al
    1253:	00 11                	add    BYTE PTR [rcx],dl
	...
    125d:	00 00                	add    BYTE PTR [rax],al
    125f:	00 20                	add    BYTE PTR [rax],ah
    1261:	0e                   	(bad)  
    1262:	01 00                	add    DWORD PTR [rax],eax
    1264:	00 00                	add    BYTE PTR [rax],al
    1266:	00 00                	add    BYTE PTR [rax],al
    1268:	07                   	(bad)  
    1269:	00 00                	add    BYTE PTR [rax],al
    126b:	00 12                	add    BYTE PTR [rdx],dl
	...
    1275:	00 00                	add    BYTE PTR [rax],al
    1277:	00 28                	add    BYTE PTR [rax],ch
    1279:	0e                   	(bad)  
    127a:	01 00                	add    DWORD PTR [rax],eax
    127c:	00 00                	add    BYTE PTR [rax],al
    127e:	00 00                	add    BYTE PTR [rax],al
    1280:	07                   	(bad)  
    1281:	00 00                	add    BYTE PTR [rax],al
    1283:	00 13                	add    BYTE PTR [rbx],dl
	...
    128d:	00 00                	add    BYTE PTR [rax],al
    128f:	00 30                	add    BYTE PTR [rax],dh
    1291:	0e                   	(bad)  
    1292:	01 00                	add    DWORD PTR [rax],eax
    1294:	00 00                	add    BYTE PTR [rax],al
    1296:	00 00                	add    BYTE PTR [rax],al
    1298:	07                   	(bad)  
    1299:	00 00                	add    BYTE PTR [rax],al
    129b:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
	...
    12a6:	00 00                	add    BYTE PTR [rax],al
    12a8:	38 0e                	cmp    BYTE PTR [rsi],cl
    12aa:	01 00                	add    DWORD PTR [rax],eax
    12ac:	00 00                	add    BYTE PTR [rax],al
    12ae:	00 00                	add    BYTE PTR [rax],al
    12b0:	07                   	(bad)  
    12b1:	00 00                	add    BYTE PTR [rax],al
    12b3:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 12b9 <__abi_tag+0xef5>
    12b9:	00 00                	add    BYTE PTR [rax],al
    12bb:	00 00                	add    BYTE PTR [rax],al
    12bd:	00 00                	add    BYTE PTR [rax],al
    12bf:	00 40 0e             	add    BYTE PTR [rax+0xe],al
    12c2:	01 00                	add    DWORD PTR [rax],eax
    12c4:	00 00                	add    BYTE PTR [rax],al
    12c6:	00 00                	add    BYTE PTR [rax],al
    12c8:	07                   	(bad)  
    12c9:	00 00                	add    BYTE PTR [rax],al
    12cb:	00 16                	add    BYTE PTR [rsi],dl
	...
    12d5:	00 00                	add    BYTE PTR [rax],al
    12d7:	00 48 0e             	add    BYTE PTR [rax+0xe],cl
    12da:	01 00                	add    DWORD PTR [rax],eax
    12dc:	00 00                	add    BYTE PTR [rax],al
    12de:	00 00                	add    BYTE PTR [rax],al
    12e0:	07                   	(bad)  
    12e1:	00 00                	add    BYTE PTR [rax],al
    12e3:	00 17                	add    BYTE PTR [rdi],dl
	...
    12ed:	00 00                	add    BYTE PTR [rax],al
    12ef:	00 50 0e             	add    BYTE PTR [rax+0xe],dl
    12f2:	01 00                	add    DWORD PTR [rax],eax
    12f4:	00 00                	add    BYTE PTR [rax],al
    12f6:	00 00                	add    BYTE PTR [rax],al
    12f8:	07                   	(bad)  
    12f9:	00 00                	add    BYTE PTR [rax],al
    12fb:	00 18                	add    BYTE PTR [rax],bl
	...
    1305:	00 00                	add    BYTE PTR [rax],al
    1307:	00 58 0e             	add    BYTE PTR [rax+0xe],bl
    130a:	01 00                	add    DWORD PTR [rax],eax
    130c:	00 00                	add    BYTE PTR [rax],al
    130e:	00 00                	add    BYTE PTR [rax],al
    1310:	07                   	(bad)  
    1311:	00 00                	add    BYTE PTR [rax],al
    1313:	00 1a                	add    BYTE PTR [rdx],bl
	...
    131d:	00 00                	add    BYTE PTR [rax],al
    131f:	00 60 0e             	add    BYTE PTR [rax+0xe],ah
    1322:	01 00                	add    DWORD PTR [rax],eax
    1324:	00 00                	add    BYTE PTR [rax],al
    1326:	00 00                	add    BYTE PTR [rax],al
    1328:	07                   	(bad)  
    1329:	00 00                	add    BYTE PTR [rax],al
    132b:	00 1b                	add    BYTE PTR [rbx],bl
	...
    1335:	00 00                	add    BYTE PTR [rax],al
    1337:	00 68 0e             	add    BYTE PTR [rax+0xe],ch
    133a:	01 00                	add    DWORD PTR [rax],eax
    133c:	00 00                	add    BYTE PTR [rax],al
    133e:	00 00                	add    BYTE PTR [rax],al
    1340:	07                   	(bad)  
    1341:	00 00                	add    BYTE PTR [rax],al
    1343:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
	...
    134e:	00 00                	add    BYTE PTR [rax],al
    1350:	70 0e                	jo     1360 <__abi_tag+0xf9c>
    1352:	01 00                	add    DWORD PTR [rax],eax
    1354:	00 00                	add    BYTE PTR [rax],al
    1356:	00 00                	add    BYTE PTR [rax],al
    1358:	07                   	(bad)  
    1359:	00 00                	add    BYTE PTR [rax],al
    135b:	00 1d 00 00 00 00    	add    BYTE PTR [rip+0x0],bl        # 1361 <__abi_tag+0xf9d>
    1361:	00 00                	add    BYTE PTR [rax],al
    1363:	00 00                	add    BYTE PTR [rax],al
    1365:	00 00                	add    BYTE PTR [rax],al
    1367:	00 78 0e             	add    BYTE PTR [rax+0xe],bh
    136a:	01 00                	add    DWORD PTR [rax],eax
    136c:	00 00                	add    BYTE PTR [rax],al
    136e:	00 00                	add    BYTE PTR [rax],al
    1370:	07                   	(bad)  
    1371:	00 00                	add    BYTE PTR [rax],al
    1373:	00 1f                	add    BYTE PTR [rdi],bl
	...
    137d:	00 00                	add    BYTE PTR [rax],al
    137f:	00 80 0e 01 00 00    	add    BYTE PTR [rax+0x10e],al
    1385:	00 00                	add    BYTE PTR [rax],al
    1387:	00 07                	add    BYTE PTR [rdi],al
    1389:	00 00                	add    BYTE PTR [rax],al
    138b:	00 20                	add    BYTE PTR [rax],ah
	...
    1395:	00 00                	add    BYTE PTR [rax],al
    1397:	00 88 0e 01 00 00    	add    BYTE PTR [rax+0x10e],cl
    139d:	00 00                	add    BYTE PTR [rax],al
    139f:	00 07                	add    BYTE PTR [rdi],al
    13a1:	00 00                	add    BYTE PTR [rax],al
    13a3:	00 21                	add    BYTE PTR [rcx],ah
	...
    13ad:	00 00                	add    BYTE PTR [rax],al
    13af:	00 90 0e 01 00 00    	add    BYTE PTR [rax+0x10e],dl
    13b5:	00 00                	add    BYTE PTR [rax],al
    13b7:	00 07                	add    BYTE PTR [rdi],al
    13b9:	00 00                	add    BYTE PTR [rax],al
    13bb:	00 22                	add    BYTE PTR [rdx],ah
	...
    13c5:	00 00                	add    BYTE PTR [rax],al
    13c7:	00 98 0e 01 00 00    	add    BYTE PTR [rax+0x10e],bl
    13cd:	00 00                	add    BYTE PTR [rax],al
    13cf:	00 07                	add    BYTE PTR [rdi],al
    13d1:	00 00                	add    BYTE PTR [rax],al
    13d3:	00 23                	add    BYTE PTR [rbx],ah
	...
    13dd:	00 00                	add    BYTE PTR [rax],al
    13df:	00 a0 0e 01 00 00    	add    BYTE PTR [rax+0x10e],ah
    13e5:	00 00                	add    BYTE PTR [rax],al
    13e7:	00 07                	add    BYTE PTR [rdi],al
    13e9:	00 00                	add    BYTE PTR [rax],al
    13eb:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
	...
    13f6:	00 00                	add    BYTE PTR [rax],al
    13f8:	a8 0e                	test   al,0xe
    13fa:	01 00                	add    DWORD PTR [rax],eax
    13fc:	00 00                	add    BYTE PTR [rax],al
    13fe:	00 00                	add    BYTE PTR [rax],al
    1400:	07                   	(bad)  
    1401:	00 00                	add    BYTE PTR [rax],al
    1403:	00 25 00 00 00 00    	add    BYTE PTR [rip+0x0],ah        # 1409 <__abi_tag+0x1045>
    1409:	00 00                	add    BYTE PTR [rax],al
    140b:	00 00                	add    BYTE PTR [rax],al
    140d:	00 00                	add    BYTE PTR [rax],al
    140f:	00 b0 0e 01 00 00    	add    BYTE PTR [rax+0x10e],dh
    1415:	00 00                	add    BYTE PTR [rax],al
    1417:	00 07                	add    BYTE PTR [rdi],al
    1419:	00 00                	add    BYTE PTR [rax],al
    141b:	00 26                	add    BYTE PTR [rsi],ah
	...
    1425:	00 00                	add    BYTE PTR [rax],al
    1427:	00 b8 0e 01 00 00    	add    BYTE PTR [rax+0x10e],bh
    142d:	00 00                	add    BYTE PTR [rax],al
    142f:	00 07                	add    BYTE PTR [rdi],al
    1431:	00 00                	add    BYTE PTR [rax],al
    1433:	00 27                	add    BYTE PTR [rdi],ah
	...
    143d:	00 00                	add    BYTE PTR [rax],al
    143f:	00 c0                	add    al,al
    1441:	0e                   	(bad)  
    1442:	01 00                	add    DWORD PTR [rax],eax
    1444:	00 00                	add    BYTE PTR [rax],al
    1446:	00 00                	add    BYTE PTR [rax],al
    1448:	07                   	(bad)  
    1449:	00 00                	add    BYTE PTR [rax],al
    144b:	00 28                	add    BYTE PTR [rax],ch
	...
    1455:	00 00                	add    BYTE PTR [rax],al
    1457:	00 c8                	add    al,cl
    1459:	0e                   	(bad)  
    145a:	01 00                	add    DWORD PTR [rax],eax
    145c:	00 00                	add    BYTE PTR [rax],al
    145e:	00 00                	add    BYTE PTR [rax],al
    1460:	07                   	(bad)  
    1461:	00 00                	add    BYTE PTR [rax],al
    1463:	00 29                	add    BYTE PTR [rcx],ch
	...
    146d:	00 00                	add    BYTE PTR [rax],al
    146f:	00 d0                	add    al,dl
    1471:	0e                   	(bad)  
    1472:	01 00                	add    DWORD PTR [rax],eax
    1474:	00 00                	add    BYTE PTR [rax],al
    1476:	00 00                	add    BYTE PTR [rax],al
    1478:	07                   	(bad)  
    1479:	00 00                	add    BYTE PTR [rax],al
    147b:	00 2a                	add    BYTE PTR [rdx],ch
	...
    1485:	00 00                	add    BYTE PTR [rax],al
    1487:	00 d8                	add    al,bl
    1489:	0e                   	(bad)  
    148a:	01 00                	add    DWORD PTR [rax],eax
    148c:	00 00                	add    BYTE PTR [rax],al
    148e:	00 00                	add    BYTE PTR [rax],al
    1490:	07                   	(bad)  
    1491:	00 00                	add    BYTE PTR [rax],al
    1493:	00 2b                	add    BYTE PTR [rbx],ch
	...
    149d:	00 00                	add    BYTE PTR [rax],al
    149f:	00 e0                	add    al,ah
    14a1:	0e                   	(bad)  
    14a2:	01 00                	add    DWORD PTR [rax],eax
    14a4:	00 00                	add    BYTE PTR [rax],al
    14a6:	00 00                	add    BYTE PTR [rax],al
    14a8:	07                   	(bad)  
    14a9:	00 00                	add    BYTE PTR [rax],al
    14ab:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
	...
    14b6:	00 00                	add    BYTE PTR [rax],al
    14b8:	e8 0e 01 00 00       	call   15cb <__abi_tag+0x1207>
    14bd:	00 00                	add    BYTE PTR [rax],al
    14bf:	00 07                	add    BYTE PTR [rdi],al
    14c1:	00 00                	add    BYTE PTR [rax],al
    14c3:	00 2d 00 00 00 00    	add    BYTE PTR [rip+0x0],ch        # 14c9 <__abi_tag+0x1105>
    14c9:	00 00                	add    BYTE PTR [rax],al
    14cb:	00 00                	add    BYTE PTR [rax],al
    14cd:	00 00                	add    BYTE PTR [rax],al
    14cf:	00 f0                	add    al,dh
    14d1:	0e                   	(bad)  
    14d2:	01 00                	add    DWORD PTR [rax],eax
    14d4:	00 00                	add    BYTE PTR [rax],al
    14d6:	00 00                	add    BYTE PTR [rax],al
    14d8:	07                   	(bad)  
    14d9:	00 00                	add    BYTE PTR [rax],al
    14db:	00 2e                	add    BYTE PTR [rsi],ch
	...
    14e5:	00 00                	add    BYTE PTR [rax],al
    14e7:	00 f8                	add    al,bh
    14e9:	0e                   	(bad)  
    14ea:	01 00                	add    DWORD PTR [rax],eax
    14ec:	00 00                	add    BYTE PTR [rax],al
    14ee:	00 00                	add    BYTE PTR [rax],al
    14f0:	07                   	(bad)  
    14f1:	00 00                	add    BYTE PTR [rax],al
    14f3:	00 2f                	add    BYTE PTR [rdi],ch
	...
    1501:	0f 01 00             	sgdt   [rax]
    1504:	00 00                	add    BYTE PTR [rax],al
    1506:	00 00                	add    BYTE PTR [rax],al
    1508:	07                   	(bad)  
    1509:	00 00                	add    BYTE PTR [rax],al
    150b:	00 30                	add    BYTE PTR [rax],dh
	...
    1515:	00 00                	add    BYTE PTR [rax],al
    1517:	00 08                	add    BYTE PTR [rax],cl
    1519:	0f 01 00             	sgdt   [rax]
    151c:	00 00                	add    BYTE PTR [rax],al
    151e:	00 00                	add    BYTE PTR [rax],al
    1520:	07                   	(bad)  
    1521:	00 00                	add    BYTE PTR [rax],al
    1523:	00 31                	add    BYTE PTR [rcx],dh
	...
    152d:	00 00                	add    BYTE PTR [rax],al
    152f:	00 10                	add    BYTE PTR [rax],dl
    1531:	0f 01 00             	sgdt   [rax]
    1534:	00 00                	add    BYTE PTR [rax],al
    1536:	00 00                	add    BYTE PTR [rax],al
    1538:	07                   	(bad)  
    1539:	00 00                	add    BYTE PTR [rax],al
    153b:	00 32                	add    BYTE PTR [rdx],dh
	...
    1545:	00 00                	add    BYTE PTR [rax],al
    1547:	00 18                	add    BYTE PTR [rax],bl
    1549:	0f 01 00             	sgdt   [rax]
    154c:	00 00                	add    BYTE PTR [rax],al
    154e:	00 00                	add    BYTE PTR [rax],al
    1550:	07                   	(bad)  
    1551:	00 00                	add    BYTE PTR [rax],al
    1553:	00 33                	add    BYTE PTR [rbx],dh
	...
    155d:	00 00                	add    BYTE PTR [rax],al
    155f:	00 20                	add    BYTE PTR [rax],ah
    1561:	0f 01 00             	sgdt   [rax]
    1564:	00 00                	add    BYTE PTR [rax],al
    1566:	00 00                	add    BYTE PTR [rax],al
    1568:	07                   	(bad)  
    1569:	00 00                	add    BYTE PTR [rax],al
    156b:	00 34 00             	add    BYTE PTR [rax+rax*1],dh
	...
    1576:	00 00                	add    BYTE PTR [rax],al
    1578:	28 0f                	sub    BYTE PTR [rdi],cl
    157a:	01 00                	add    DWORD PTR [rax],eax
    157c:	00 00                	add    BYTE PTR [rax],al
    157e:	00 00                	add    BYTE PTR [rax],al
    1580:	07                   	(bad)  
    1581:	00 00                	add    BYTE PTR [rax],al
    1583:	00 35 00 00 00 00    	add    BYTE PTR [rip+0x0],dh        # 1589 <__abi_tag+0x11c5>
    1589:	00 00                	add    BYTE PTR [rax],al
    158b:	00 00                	add    BYTE PTR [rax],al
    158d:	00 00                	add    BYTE PTR [rax],al
    158f:	00 30                	add    BYTE PTR [rax],dh
    1591:	0f 01 00             	sgdt   [rax]
    1594:	00 00                	add    BYTE PTR [rax],al
    1596:	00 00                	add    BYTE PTR [rax],al
    1598:	07                   	(bad)  
    1599:	00 00                	add    BYTE PTR [rax],al
    159b:	00 36                	add    BYTE PTR [rsi],dh
	...
    15a5:	00 00                	add    BYTE PTR [rax],al
    15a7:	00 38                	add    BYTE PTR [rax],bh
    15a9:	0f 01 00             	sgdt   [rax]
    15ac:	00 00                	add    BYTE PTR [rax],al
    15ae:	00 00                	add    BYTE PTR [rax],al
    15b0:	07                   	(bad)  
    15b1:	00 00                	add    BYTE PTR [rax],al
    15b3:	00 37                	add    BYTE PTR [rdi],dh
	...
    15bd:	00 00                	add    BYTE PTR [rax],al
    15bf:	00 40 0f             	add    BYTE PTR [rax+0xf],al
    15c2:	01 00                	add    DWORD PTR [rax],eax
    15c4:	00 00                	add    BYTE PTR [rax],al
    15c6:	00 00                	add    BYTE PTR [rax],al
    15c8:	07                   	(bad)  
    15c9:	00 00                	add    BYTE PTR [rax],al
    15cb:	00 38                	add    BYTE PTR [rax],bh
	...
    15d5:	00 00                	add    BYTE PTR [rax],al
    15d7:	00 48 0f             	add    BYTE PTR [rax+0xf],cl
    15da:	01 00                	add    DWORD PTR [rax],eax
    15dc:	00 00                	add    BYTE PTR [rax],al
    15de:	00 00                	add    BYTE PTR [rax],al
    15e0:	07                   	(bad)  
    15e1:	00 00                	add    BYTE PTR [rax],al
    15e3:	00 39                	add    BYTE PTR [rcx],bh
	...
    15ed:	00 00                	add    BYTE PTR [rax],al
    15ef:	00 50 0f             	add    BYTE PTR [rax+0xf],dl
    15f2:	01 00                	add    DWORD PTR [rax],eax
    15f4:	00 00                	add    BYTE PTR [rax],al
    15f6:	00 00                	add    BYTE PTR [rax],al
    15f8:	07                   	(bad)  
    15f9:	00 00                	add    BYTE PTR [rax],al
    15fb:	00 3a                	add    BYTE PTR [rdx],bh
	...
    1605:	00 00                	add    BYTE PTR [rax],al
    1607:	00 58 0f             	add    BYTE PTR [rax+0xf],bl
    160a:	01 00                	add    DWORD PTR [rax],eax
    160c:	00 00                	add    BYTE PTR [rax],al
    160e:	00 00                	add    BYTE PTR [rax],al
    1610:	07                   	(bad)  
    1611:	00 00                	add    BYTE PTR [rax],al
    1613:	00 3b                	add    BYTE PTR [rbx],bh
	...
    161d:	00 00                	add    BYTE PTR [rax],al
    161f:	00 60 0f             	add    BYTE PTR [rax+0xf],ah
    1622:	01 00                	add    DWORD PTR [rax],eax
    1624:	00 00                	add    BYTE PTR [rax],al
    1626:	00 00                	add    BYTE PTR [rax],al
    1628:	07                   	(bad)  
    1629:	00 00                	add    BYTE PTR [rax],al
    162b:	00 3c 00             	add    BYTE PTR [rax+rax*1],bh
	...
    1636:	00 00                	add    BYTE PTR [rax],al
    1638:	68 0f 01 00 00       	push   0x10f
    163d:	00 00                	add    BYTE PTR [rax],al
    163f:	00 07                	add    BYTE PTR [rdi],al
    1641:	00 00                	add    BYTE PTR [rax],al
    1643:	00 3d 00 00 00 00    	add    BYTE PTR [rip+0x0],bh        # 1649 <__abi_tag+0x1285>
    1649:	00 00                	add    BYTE PTR [rax],al
    164b:	00 00                	add    BYTE PTR [rax],al
    164d:	00 00                	add    BYTE PTR [rax],al
    164f:	00 70 0f             	add    BYTE PTR [rax+0xf],dh
    1652:	01 00                	add    DWORD PTR [rax],eax
    1654:	00 00                	add    BYTE PTR [rax],al
    1656:	00 00                	add    BYTE PTR [rax],al
    1658:	07                   	(bad)  
    1659:	00 00                	add    BYTE PTR [rax],al
    165b:	00 3e                	add    BYTE PTR [rsi],bh
	...
    1665:	00 00                	add    BYTE PTR [rax],al
    1667:	00 78 0f             	add    BYTE PTR [rax+0xf],bh
    166a:	01 00                	add    DWORD PTR [rax],eax
    166c:	00 00                	add    BYTE PTR [rax],al
    166e:	00 00                	add    BYTE PTR [rax],al
    1670:	07                   	(bad)  
    1671:	00 00                	add    BYTE PTR [rax],al
    1673:	00 3f                	add    BYTE PTR [rdi],bh
	...
    167d:	00 00                	add    BYTE PTR [rax],al
    167f:	00 80 0f 01 00 00    	add    BYTE PTR [rax+0x10f],al
    1685:	00 00                	add    BYTE PTR [rax],al
    1687:	00 07                	add    BYTE PTR [rdi],al
    1689:	00 00                	add    BYTE PTR [rax],al
    168b:	00 40 00             	add    BYTE PTR [rax+0x0],al
	...
    1696:	00 00                	add    BYTE PTR [rax],al
    1698:	88 0f                	mov    BYTE PTR [rdi],cl
    169a:	01 00                	add    DWORD PTR [rax],eax
    169c:	00 00                	add    BYTE PTR [rax],al
    169e:	00 00                	add    BYTE PTR [rax],al
    16a0:	07                   	(bad)  
    16a1:	00 00                	add    BYTE PTR [rax],al
    16a3:	00 41 00             	add    BYTE PTR [rcx+0x0],al
	...
    16ae:	00 00                	add    BYTE PTR [rax],al
    16b0:	90                   	nop
    16b1:	0f 01 00             	sgdt   [rax]
    16b4:	00 00                	add    BYTE PTR [rax],al
    16b6:	00 00                	add    BYTE PTR [rax],al
    16b8:	07                   	(bad)  
    16b9:	00 00                	add    BYTE PTR [rax],al
    16bb:	00 42 00             	add    BYTE PTR [rdx+0x0],al
	...
    16c6:	00 00                	add    BYTE PTR [rax],al
    16c8:	98                   	cwde   
    16c9:	0f 01 00             	sgdt   [rax]
    16cc:	00 00                	add    BYTE PTR [rax],al
    16ce:	00 00                	add    BYTE PTR [rax],al
    16d0:	07                   	(bad)  
    16d1:	00 00                	add    BYTE PTR [rax],al
    16d3:	00 43 00             	add    BYTE PTR [rbx+0x0],al
	...
    16de:	00 00                	add    BYTE PTR [rax],al
    16e0:	a0 0f 01 00 00 00 00 	movabs al,ds:0x70000000000010f
    16e7:	00 07 
    16e9:	00 00                	add    BYTE PTR [rax],al
    16eb:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
	...
    16f7:	00 a8 0f 01 00 00    	add    BYTE PTR [rax+0x10f],ch
    16fd:	00 00                	add    BYTE PTR [rax],al
    16ff:	00 07                	add    BYTE PTR [rdi],al
    1701:	00 00                	add    BYTE PTR [rax],al
    1703:	00 45 00             	add    BYTE PTR [rbp+0x0],al
	...
    170e:	00 00                	add    BYTE PTR [rax],al
    1710:	b0 0f                	mov    al,0xf
    1712:	01 00                	add    DWORD PTR [rax],eax
    1714:	00 00                	add    BYTE PTR [rax],al
    1716:	00 00                	add    BYTE PTR [rax],al
    1718:	07                   	(bad)  
    1719:	00 00                	add    BYTE PTR [rax],al
    171b:	00 46 00             	add    BYTE PTR [rsi+0x0],al
	...
    1726:	00 00                	add    BYTE PTR [rax],al
    1728:	b8 0f 01 00 00       	mov    eax,0x10f
    172d:	00 00                	add    BYTE PTR [rax],al
    172f:	00 07                	add    BYTE PTR [rdi],al
    1731:	00 00                	add    BYTE PTR [rax],al
    1733:	00 47 00             	add    BYTE PTR [rdi+0x0],al
	...
    173e:	00 00                	add    BYTE PTR [rax],al
    1740:	c0 0f 01             	ror    BYTE PTR [rdi],0x1
    1743:	00 00                	add    BYTE PTR [rax],al
    1745:	00 00                	add    BYTE PTR [rax],al
    1747:	00 07                	add    BYTE PTR [rdi],al
    1749:	00 00                	add    BYTE PTR [rax],al
    174b:	00 49 00             	add    BYTE PTR [rcx+0x0],cl
	...
    1756:	00 00                	add    BYTE PTR [rax],al
    1758:	c8 0f 01 00          	enter  0x10f,0x0
    175c:	00 00                	add    BYTE PTR [rax],al
    175e:	00 00                	add    BYTE PTR [rax],al
    1760:	07                   	(bad)  
    1761:	00 00                	add    BYTE PTR [rax],al
    1763:	00 4a 00             	add    BYTE PTR [rdx+0x0],cl
	...
    176e:	00 00                	add    BYTE PTR [rax],al
    1770:	d0 0f                	ror    BYTE PTR [rdi],1
    1772:	01 00                	add    DWORD PTR [rax],eax
    1774:	00 00                	add    BYTE PTR [rax],al
    1776:	00 00                	add    BYTE PTR [rax],al
    1778:	07                   	(bad)  
    1779:	00 00                	add    BYTE PTR [rax],al
    177b:	00 4b 00             	add    BYTE PTR [rbx+0x0],cl
	...

Disassembly of section .init:

0000000000002000 <_init>:
    2000:	f3 0f 1e fa          	endbr64 
    2004:	48 83 ec 08          	sub    rsp,0x8
    2008:	48 8b 05 c9 ef 00 00 	mov    rax,QWORD PTR [rip+0xefc9]        # 10fd8 <__gmon_start__>
    200f:	48 85 c0             	test   rax,rax
    2012:	74 02                	je     2016 <_init+0x16>
    2014:	ff d0                	call   rax
    2016:	48 83 c4 08          	add    rsp,0x8
    201a:	c3                   	ret    

Disassembly of section .plt:

0000000000002020 <.plt>:
    2020:	ff 35 6a ed 00 00    	push   QWORD PTR [rip+0xed6a]        # 10d90 <_GLOBAL_OFFSET_TABLE_+0x8>
    2026:	f2 ff 25 6b ed 00 00 	bnd jmp QWORD PTR [rip+0xed6b]        # 10d98 <_GLOBAL_OFFSET_TABLE_+0x10>
    202d:	0f 1f 00             	nop    DWORD PTR [rax]
    2030:	f3 0f 1e fa          	endbr64 
    2034:	68 00 00 00 00       	push   0x0
    2039:	f2 e9 e1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    203f:	90                   	nop
    2040:	f3 0f 1e fa          	endbr64 
    2044:	68 01 00 00 00       	push   0x1
    2049:	f2 e9 d1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    204f:	90                   	nop
    2050:	f3 0f 1e fa          	endbr64 
    2054:	68 02 00 00 00       	push   0x2
    2059:	f2 e9 c1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    205f:	90                   	nop
    2060:	f3 0f 1e fa          	endbr64 
    2064:	68 03 00 00 00       	push   0x3
    2069:	f2 e9 b1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    206f:	90                   	nop
    2070:	f3 0f 1e fa          	endbr64 
    2074:	68 04 00 00 00       	push   0x4
    2079:	f2 e9 a1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    207f:	90                   	nop
    2080:	f3 0f 1e fa          	endbr64 
    2084:	68 05 00 00 00       	push   0x5
    2089:	f2 e9 91 ff ff ff    	bnd jmp 2020 <_init+0x20>
    208f:	90                   	nop
    2090:	f3 0f 1e fa          	endbr64 
    2094:	68 06 00 00 00       	push   0x6
    2099:	f2 e9 81 ff ff ff    	bnd jmp 2020 <_init+0x20>
    209f:	90                   	nop
    20a0:	f3 0f 1e fa          	endbr64 
    20a4:	68 07 00 00 00       	push   0x7
    20a9:	f2 e9 71 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20af:	90                   	nop
    20b0:	f3 0f 1e fa          	endbr64 
    20b4:	68 08 00 00 00       	push   0x8
    20b9:	f2 e9 61 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20bf:	90                   	nop
    20c0:	f3 0f 1e fa          	endbr64 
    20c4:	68 09 00 00 00       	push   0x9
    20c9:	f2 e9 51 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20cf:	90                   	nop
    20d0:	f3 0f 1e fa          	endbr64 
    20d4:	68 0a 00 00 00       	push   0xa
    20d9:	f2 e9 41 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20df:	90                   	nop
    20e0:	f3 0f 1e fa          	endbr64 
    20e4:	68 0b 00 00 00       	push   0xb
    20e9:	f2 e9 31 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20ef:	90                   	nop
    20f0:	f3 0f 1e fa          	endbr64 
    20f4:	68 0c 00 00 00       	push   0xc
    20f9:	f2 e9 21 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20ff:	90                   	nop
    2100:	f3 0f 1e fa          	endbr64 
    2104:	68 0d 00 00 00       	push   0xd
    2109:	f2 e9 11 ff ff ff    	bnd jmp 2020 <_init+0x20>
    210f:	90                   	nop
    2110:	f3 0f 1e fa          	endbr64 
    2114:	68 0e 00 00 00       	push   0xe
    2119:	f2 e9 01 ff ff ff    	bnd jmp 2020 <_init+0x20>
    211f:	90                   	nop
    2120:	f3 0f 1e fa          	endbr64 
    2124:	68 0f 00 00 00       	push   0xf
    2129:	f2 e9 f1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    212f:	90                   	nop
    2130:	f3 0f 1e fa          	endbr64 
    2134:	68 10 00 00 00       	push   0x10
    2139:	f2 e9 e1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    213f:	90                   	nop
    2140:	f3 0f 1e fa          	endbr64 
    2144:	68 11 00 00 00       	push   0x11
    2149:	f2 e9 d1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    214f:	90                   	nop
    2150:	f3 0f 1e fa          	endbr64 
    2154:	68 12 00 00 00       	push   0x12
    2159:	f2 e9 c1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    215f:	90                   	nop
    2160:	f3 0f 1e fa          	endbr64 
    2164:	68 13 00 00 00       	push   0x13
    2169:	f2 e9 b1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    216f:	90                   	nop
    2170:	f3 0f 1e fa          	endbr64 
    2174:	68 14 00 00 00       	push   0x14
    2179:	f2 e9 a1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    217f:	90                   	nop
    2180:	f3 0f 1e fa          	endbr64 
    2184:	68 15 00 00 00       	push   0x15
    2189:	f2 e9 91 fe ff ff    	bnd jmp 2020 <_init+0x20>
    218f:	90                   	nop
    2190:	f3 0f 1e fa          	endbr64 
    2194:	68 16 00 00 00       	push   0x16
    2199:	f2 e9 81 fe ff ff    	bnd jmp 2020 <_init+0x20>
    219f:	90                   	nop
    21a0:	f3 0f 1e fa          	endbr64 
    21a4:	68 17 00 00 00       	push   0x17
    21a9:	f2 e9 71 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21af:	90                   	nop
    21b0:	f3 0f 1e fa          	endbr64 
    21b4:	68 18 00 00 00       	push   0x18
    21b9:	f2 e9 61 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21bf:	90                   	nop
    21c0:	f3 0f 1e fa          	endbr64 
    21c4:	68 19 00 00 00       	push   0x19
    21c9:	f2 e9 51 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21cf:	90                   	nop
    21d0:	f3 0f 1e fa          	endbr64 
    21d4:	68 1a 00 00 00       	push   0x1a
    21d9:	f2 e9 41 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21df:	90                   	nop
    21e0:	f3 0f 1e fa          	endbr64 
    21e4:	68 1b 00 00 00       	push   0x1b
    21e9:	f2 e9 31 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21ef:	90                   	nop
    21f0:	f3 0f 1e fa          	endbr64 
    21f4:	68 1c 00 00 00       	push   0x1c
    21f9:	f2 e9 21 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21ff:	90                   	nop
    2200:	f3 0f 1e fa          	endbr64 
    2204:	68 1d 00 00 00       	push   0x1d
    2209:	f2 e9 11 fe ff ff    	bnd jmp 2020 <_init+0x20>
    220f:	90                   	nop
    2210:	f3 0f 1e fa          	endbr64 
    2214:	68 1e 00 00 00       	push   0x1e
    2219:	f2 e9 01 fe ff ff    	bnd jmp 2020 <_init+0x20>
    221f:	90                   	nop
    2220:	f3 0f 1e fa          	endbr64 
    2224:	68 1f 00 00 00       	push   0x1f
    2229:	f2 e9 f1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    222f:	90                   	nop
    2230:	f3 0f 1e fa          	endbr64 
    2234:	68 20 00 00 00       	push   0x20
    2239:	f2 e9 e1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    223f:	90                   	nop
    2240:	f3 0f 1e fa          	endbr64 
    2244:	68 21 00 00 00       	push   0x21
    2249:	f2 e9 d1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    224f:	90                   	nop
    2250:	f3 0f 1e fa          	endbr64 
    2254:	68 22 00 00 00       	push   0x22
    2259:	f2 e9 c1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    225f:	90                   	nop
    2260:	f3 0f 1e fa          	endbr64 
    2264:	68 23 00 00 00       	push   0x23
    2269:	f2 e9 b1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    226f:	90                   	nop
    2270:	f3 0f 1e fa          	endbr64 
    2274:	68 24 00 00 00       	push   0x24
    2279:	f2 e9 a1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    227f:	90                   	nop
    2280:	f3 0f 1e fa          	endbr64 
    2284:	68 25 00 00 00       	push   0x25
    2289:	f2 e9 91 fd ff ff    	bnd jmp 2020 <_init+0x20>
    228f:	90                   	nop
    2290:	f3 0f 1e fa          	endbr64 
    2294:	68 26 00 00 00       	push   0x26
    2299:	f2 e9 81 fd ff ff    	bnd jmp 2020 <_init+0x20>
    229f:	90                   	nop
    22a0:	f3 0f 1e fa          	endbr64 
    22a4:	68 27 00 00 00       	push   0x27
    22a9:	f2 e9 71 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22af:	90                   	nop
    22b0:	f3 0f 1e fa          	endbr64 
    22b4:	68 28 00 00 00       	push   0x28
    22b9:	f2 e9 61 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22bf:	90                   	nop
    22c0:	f3 0f 1e fa          	endbr64 
    22c4:	68 29 00 00 00       	push   0x29
    22c9:	f2 e9 51 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22cf:	90                   	nop
    22d0:	f3 0f 1e fa          	endbr64 
    22d4:	68 2a 00 00 00       	push   0x2a
    22d9:	f2 e9 41 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22df:	90                   	nop
    22e0:	f3 0f 1e fa          	endbr64 
    22e4:	68 2b 00 00 00       	push   0x2b
    22e9:	f2 e9 31 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22ef:	90                   	nop
    22f0:	f3 0f 1e fa          	endbr64 
    22f4:	68 2c 00 00 00       	push   0x2c
    22f9:	f2 e9 21 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22ff:	90                   	nop
    2300:	f3 0f 1e fa          	endbr64 
    2304:	68 2d 00 00 00       	push   0x2d
    2309:	f2 e9 11 fd ff ff    	bnd jmp 2020 <_init+0x20>
    230f:	90                   	nop
    2310:	f3 0f 1e fa          	endbr64 
    2314:	68 2e 00 00 00       	push   0x2e
    2319:	f2 e9 01 fd ff ff    	bnd jmp 2020 <_init+0x20>
    231f:	90                   	nop
    2320:	f3 0f 1e fa          	endbr64 
    2324:	68 2f 00 00 00       	push   0x2f
    2329:	f2 e9 f1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    232f:	90                   	nop
    2330:	f3 0f 1e fa          	endbr64 
    2334:	68 30 00 00 00       	push   0x30
    2339:	f2 e9 e1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    233f:	90                   	nop
    2340:	f3 0f 1e fa          	endbr64 
    2344:	68 31 00 00 00       	push   0x31
    2349:	f2 e9 d1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    234f:	90                   	nop
    2350:	f3 0f 1e fa          	endbr64 
    2354:	68 32 00 00 00       	push   0x32
    2359:	f2 e9 c1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    235f:	90                   	nop
    2360:	f3 0f 1e fa          	endbr64 
    2364:	68 33 00 00 00       	push   0x33
    2369:	f2 e9 b1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    236f:	90                   	nop
    2370:	f3 0f 1e fa          	endbr64 
    2374:	68 34 00 00 00       	push   0x34
    2379:	f2 e9 a1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    237f:	90                   	nop
    2380:	f3 0f 1e fa          	endbr64 
    2384:	68 35 00 00 00       	push   0x35
    2389:	f2 e9 91 fc ff ff    	bnd jmp 2020 <_init+0x20>
    238f:	90                   	nop
    2390:	f3 0f 1e fa          	endbr64 
    2394:	68 36 00 00 00       	push   0x36
    2399:	f2 e9 81 fc ff ff    	bnd jmp 2020 <_init+0x20>
    239f:	90                   	nop
    23a0:	f3 0f 1e fa          	endbr64 
    23a4:	68 37 00 00 00       	push   0x37
    23a9:	f2 e9 71 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23af:	90                   	nop
    23b0:	f3 0f 1e fa          	endbr64 
    23b4:	68 38 00 00 00       	push   0x38
    23b9:	f2 e9 61 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23bf:	90                   	nop
    23c0:	f3 0f 1e fa          	endbr64 
    23c4:	68 39 00 00 00       	push   0x39
    23c9:	f2 e9 51 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23cf:	90                   	nop
    23d0:	f3 0f 1e fa          	endbr64 
    23d4:	68 3a 00 00 00       	push   0x3a
    23d9:	f2 e9 41 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23df:	90                   	nop
    23e0:	f3 0f 1e fa          	endbr64 
    23e4:	68 3b 00 00 00       	push   0x3b
    23e9:	f2 e9 31 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23ef:	90                   	nop
    23f0:	f3 0f 1e fa          	endbr64 
    23f4:	68 3c 00 00 00       	push   0x3c
    23f9:	f2 e9 21 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23ff:	90                   	nop
    2400:	f3 0f 1e fa          	endbr64 
    2404:	68 3d 00 00 00       	push   0x3d
    2409:	f2 e9 11 fc ff ff    	bnd jmp 2020 <_init+0x20>
    240f:	90                   	nop
    2410:	f3 0f 1e fa          	endbr64 
    2414:	68 3e 00 00 00       	push   0x3e
    2419:	f2 e9 01 fc ff ff    	bnd jmp 2020 <_init+0x20>
    241f:	90                   	nop
    2420:	f3 0f 1e fa          	endbr64 
    2424:	68 3f 00 00 00       	push   0x3f
    2429:	f2 e9 f1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    242f:	90                   	nop
    2430:	f3 0f 1e fa          	endbr64 
    2434:	68 40 00 00 00       	push   0x40
    2439:	f2 e9 e1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    243f:	90                   	nop
    2440:	f3 0f 1e fa          	endbr64 
    2444:	68 41 00 00 00       	push   0x41
    2449:	f2 e9 d1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    244f:	90                   	nop
    2450:	f3 0f 1e fa          	endbr64 
    2454:	68 42 00 00 00       	push   0x42
    2459:	f2 e9 c1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    245f:	90                   	nop
    2460:	f3 0f 1e fa          	endbr64 
    2464:	68 43 00 00 00       	push   0x43
    2469:	f2 e9 b1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    246f:	90                   	nop
    2470:	f3 0f 1e fa          	endbr64 
    2474:	68 44 00 00 00       	push   0x44
    2479:	f2 e9 a1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    247f:	90                   	nop
    2480:	f3 0f 1e fa          	endbr64 
    2484:	68 45 00 00 00       	push   0x45
    2489:	f2 e9 91 fb ff ff    	bnd jmp 2020 <_init+0x20>
    248f:	90                   	nop
    2490:	f3 0f 1e fa          	endbr64 
    2494:	68 46 00 00 00       	push   0x46
    2499:	f2 e9 81 fb ff ff    	bnd jmp 2020 <_init+0x20>
    249f:	90                   	nop

Disassembly of section .plt.got:

00000000000024a0 <__cxa_finalize@plt>:
    24a0:	f3 0f 1e fa          	endbr64 
    24a4:	f2 ff 25 45 eb 00 00 	bnd jmp QWORD PTR [rip+0xeb45]        # 10ff0 <__cxa_finalize@GLIBC_2.2.5>
    24ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

00000000000024b0 <sqlite3_close@plt>:
    24b0:	f3 0f 1e fa          	endbr64 
    24b4:	f2 ff 25 e5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8e5]        # 10da0 <sqlite3_close>
    24bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024c0 <pthread_join@plt>:
    24c0:	f3 0f 1e fa          	endbr64 
    24c4:	f2 ff 25 dd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8dd]        # 10da8 <pthread_join@GLIBC_2.34>
    24cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024d0 <printf@plt>:
    24d0:	f3 0f 1e fa          	endbr64 
    24d4:	f2 ff 25 d5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8d5]        # 10db0 <printf@GLIBC_2.2.5>
    24db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024e0 <memset@plt>:
    24e0:	f3 0f 1e fa          	endbr64 
    24e4:	f2 ff 25 cd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8cd]        # 10db8 <memset@GLIBC_2.2.5>
    24eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024f0 <snprintf@plt>:
    24f0:	f3 0f 1e fa          	endbr64 
    24f4:	f2 ff 25 c5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8c5]        # 10dc0 <snprintf@GLIBC_2.2.5>
    24fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002500 <backtrace@plt>:
    2500:	f3 0f 1e fa          	endbr64 
    2504:	f2 ff 25 bd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8bd]        # 10dc8 <backtrace@GLIBC_2.2.5>
    250b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002510 <close@plt>:
    2510:	f3 0f 1e fa          	endbr64 
    2514:	f2 ff 25 b5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8b5]        # 10dd0 <close@GLIBC_2.2.5>
    251b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002520 <strncat@plt>:
    2520:	f3 0f 1e fa          	endbr64 
    2524:	f2 ff 25 ad e8 00 00 	bnd jmp QWORD PTR [rip+0xe8ad]        # 10dd8 <strncat@GLIBC_2.2.5>
    252b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002530 <puts@plt>:
    2530:	f3 0f 1e fa          	endbr64 
    2534:	f2 ff 25 a5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8a5]        # 10de0 <puts@GLIBC_2.2.5>
    253b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002540 <htons@plt>:
    2540:	f3 0f 1e fa          	endbr64 
    2544:	f2 ff 25 9d e8 00 00 	bnd jmp QWORD PTR [rip+0xe89d]        # 10de8 <htons@GLIBC_2.2.5>
    254b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002550 <exit@plt>:
    2550:	f3 0f 1e fa          	endbr64 
    2554:	f2 ff 25 95 e8 00 00 	bnd jmp QWORD PTR [rip+0xe895]        # 10df0 <exit@GLIBC_2.2.5>
    255b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002560 <putchar@plt>:
    2560:	f3 0f 1e fa          	endbr64 
    2564:	f2 ff 25 8d e8 00 00 	bnd jmp QWORD PTR [rip+0xe88d]        # 10df8 <putchar@GLIBC_2.2.5>
    256b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002570 <sqlite3_exec@plt>:
    2570:	f3 0f 1e fa          	endbr64 
    2574:	f2 ff 25 85 e8 00 00 	bnd jmp QWORD PTR [rip+0xe885]        # 10e00 <sqlite3_exec>
    257b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002580 <getopt@plt>:
    2580:	f3 0f 1e fa          	endbr64 
    2584:	f2 ff 25 7d e8 00 00 	bnd jmp QWORD PTR [rip+0xe87d]        # 10e08 <getopt@GLIBC_2.2.5>
    258b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002590 <read@plt>:
    2590:	f3 0f 1e fa          	endbr64 
    2594:	f2 ff 25 75 e8 00 00 	bnd jmp QWORD PTR [rip+0xe875]        # 10e10 <read@GLIBC_2.2.5>
    259b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025a0 <strncmp@plt>:
    25a0:	f3 0f 1e fa          	endbr64 
    25a4:	f2 ff 25 6d e8 00 00 	bnd jmp QWORD PTR [rip+0xe86d]        # 10e18 <strncmp@GLIBC_2.2.5>
    25ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025b0 <malloc@plt>:
    25b0:	f3 0f 1e fa          	endbr64 
    25b4:	f2 ff 25 65 e8 00 00 	bnd jmp QWORD PTR [rip+0xe865]        # 10e20 <malloc@GLIBC_2.2.5>
    25bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025c0 <fopen@plt>:
    25c0:	f3 0f 1e fa          	endbr64 
    25c4:	f2 ff 25 5d e8 00 00 	bnd jmp QWORD PTR [rip+0xe85d]        # 10e28 <fopen@GLIBC_2.2.5>
    25cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025d0 <regexec@plt>:
    25d0:	f3 0f 1e fa          	endbr64 
    25d4:	f2 ff 25 55 e8 00 00 	bnd jmp QWORD PTR [rip+0xe855]        # 10e30 <regexec@GLIBC_2.3.4>
    25db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025e0 <pcap_open_live@plt>:
    25e0:	f3 0f 1e fa          	endbr64 
    25e4:	f2 ff 25 4d e8 00 00 	bnd jmp QWORD PTR [rip+0xe84d]        # 10e38 <pcap_open_live>
    25eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025f0 <setsockopt@plt>:
    25f0:	f3 0f 1e fa          	endbr64 
    25f4:	f2 ff 25 45 e8 00 00 	bnd jmp QWORD PTR [rip+0xe845]        # 10e40 <setsockopt@GLIBC_2.2.5>
    25fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002600 <sqlite3_free@plt>:
    2600:	f3 0f 1e fa          	endbr64 
    2604:	f2 ff 25 3d e8 00 00 	bnd jmp QWORD PTR [rip+0xe83d]        # 10e48 <sqlite3_free>
    260b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002610 <lua_settop@plt>:
    2610:	f3 0f 1e fa          	endbr64 
    2614:	f2 ff 25 35 e8 00 00 	bnd jmp QWORD PTR [rip+0xe835]        # 10e50 <lua_settop@LUA_5.3>
    261b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002620 <pthread_create@plt>:
    2620:	f3 0f 1e fa          	endbr64 
    2624:	f2 ff 25 2d e8 00 00 	bnd jmp QWORD PTR [rip+0xe82d]        # 10e58 <pthread_create@GLIBC_2.34>
    262b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002630 <backtrace_symbols@plt>:
    2630:	f3 0f 1e fa          	endbr64 
    2634:	f2 ff 25 25 e8 00 00 	bnd jmp QWORD PTR [rip+0xe825]        # 10e60 <backtrace_symbols@GLIBC_2.2.5>
    263b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002640 <free@plt>:
    2640:	f3 0f 1e fa          	endbr64 
    2644:	f2 ff 25 1d e8 00 00 	bnd jmp QWORD PTR [rip+0xe81d]        # 10e68 <free@GLIBC_2.2.5>
    264b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002650 <strlen@plt>:
    2650:	f3 0f 1e fa          	endbr64 
    2654:	f2 ff 25 15 e8 00 00 	bnd jmp QWORD PTR [rip+0xe815]        # 10e70 <strlen@GLIBC_2.2.5>
    265b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002660 <opendir@plt>:
    2660:	f3 0f 1e fa          	endbr64 
    2664:	f2 ff 25 0d e8 00 00 	bnd jmp QWORD PTR [rip+0xe80d]        # 10e78 <opendir@GLIBC_2.2.5>
    266b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002670 <listen@plt>:
    2670:	f3 0f 1e fa          	endbr64 
    2674:	f2 ff 25 05 e8 00 00 	bnd jmp QWORD PTR [rip+0xe805]        # 10e80 <listen@GLIBC_2.2.5>
    267b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002680 <readdir@plt>:
    2680:	f3 0f 1e fa          	endbr64 
    2684:	f2 ff 25 fd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7fd]        # 10e88 <readdir@GLIBC_2.2.5>
    268b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002690 <sprintf@plt>:
    2690:	f3 0f 1e fa          	endbr64 
    2694:	f2 ff 25 f5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7f5]        # 10e90 <sprintf@GLIBC_2.2.5>
    269b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026a0 <ntohs@plt>:
    26a0:	f3 0f 1e fa          	endbr64 
    26a4:	f2 ff 25 ed e7 00 00 	bnd jmp QWORD PTR [rip+0xe7ed]        # 10e98 <ntohs@GLIBC_2.2.5>
    26ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026b0 <fgetc@plt>:
    26b0:	f3 0f 1e fa          	endbr64 
    26b4:	f2 ff 25 e5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7e5]        # 10ea0 <fgetc@GLIBC_2.2.5>
    26bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026c0 <ntohl@plt>:
    26c0:	f3 0f 1e fa          	endbr64 
    26c4:	f2 ff 25 dd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7dd]        # 10ea8 <ntohl@GLIBC_2.2.5>
    26cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026d0 <sleep@plt>:
    26d0:	f3 0f 1e fa          	endbr64 
    26d4:	f2 ff 25 d5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7d5]        # 10eb0 <sleep@GLIBC_2.2.5>
    26db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026e0 <lua_pcallk@plt>:
    26e0:	f3 0f 1e fa          	endbr64 
    26e4:	f2 ff 25 cd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7cd]        # 10eb8 <lua_pcallk@LUA_5.3>
    26eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026f0 <strstr@plt>:
    26f0:	f3 0f 1e fa          	endbr64 
    26f4:	f2 ff 25 c5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7c5]        # 10ec0 <strstr@GLIBC_2.2.5>
    26fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002700 <strcat@plt>:
    2700:	f3 0f 1e fa          	endbr64 
    2704:	f2 ff 25 bd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7bd]        # 10ec8 <strcat@GLIBC_2.2.5>
    270b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002710 <fputs@plt>:
    2710:	f3 0f 1e fa          	endbr64 
    2714:	f2 ff 25 b5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7b5]        # 10ed0 <fputs@GLIBC_2.2.5>
    271b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002720 <strtol@plt>:
    2720:	f3 0f 1e fa          	endbr64 
    2724:	f2 ff 25 ad e7 00 00 	bnd jmp QWORD PTR [rip+0xe7ad]        # 10ed8 <strtol@GLIBC_2.2.5>
    272b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002730 <luaL_loadfilex@plt>:
    2730:	f3 0f 1e fa          	endbr64 
    2734:	f2 ff 25 a5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7a5]        # 10ee0 <luaL_loadfilex@LUA_5.3>
    273b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002740 <atoi@plt>:
    2740:	f3 0f 1e fa          	endbr64 
    2744:	f2 ff 25 9d e7 00 00 	bnd jmp QWORD PTR [rip+0xe79d]        # 10ee8 <atoi@GLIBC_2.2.5>
    274b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002750 <regcomp@plt>:
    2750:	f3 0f 1e fa          	endbr64 
    2754:	f2 ff 25 95 e7 00 00 	bnd jmp QWORD PTR [rip+0xe795]        # 10ef0 <regcomp@GLIBC_2.2.5>
    275b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002760 <signal@plt>:
    2760:	f3 0f 1e fa          	endbr64 
    2764:	f2 ff 25 8d e7 00 00 	bnd jmp QWORD PTR [rip+0xe78d]        # 10ef8 <signal@GLIBC_2.2.5>
    276b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002770 <strchr@plt>:
    2770:	f3 0f 1e fa          	endbr64 
    2774:	f2 ff 25 85 e7 00 00 	bnd jmp QWORD PTR [rip+0xe785]        # 10f00 <strchr@GLIBC_2.2.5>
    277b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002780 <lua_gettop@plt>:
    2780:	f3 0f 1e fa          	endbr64 
    2784:	f2 ff 25 7d e7 00 00 	bnd jmp QWORD PTR [rip+0xe77d]        # 10f08 <lua_gettop@LUA_5.3>
    278b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002790 <luaL_newstate@plt>:
    2790:	f3 0f 1e fa          	endbr64 
    2794:	f2 ff 25 75 e7 00 00 	bnd jmp QWORD PTR [rip+0xe775]        # 10f10 <luaL_newstate@LUA_5.3>
    279b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027a0 <socket@plt>:
    27a0:	f3 0f 1e fa          	endbr64 
    27a4:	f2 ff 25 6d e7 00 00 	bnd jmp QWORD PTR [rip+0xe76d]        # 10f18 <socket@GLIBC_2.2.5>
    27ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027b0 <luaL_openlibs@plt>:
    27b0:	f3 0f 1e fa          	endbr64 
    27b4:	f2 ff 25 65 e7 00 00 	bnd jmp QWORD PTR [rip+0xe765]        # 10f20 <luaL_openlibs@LUA_5.3>
    27bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027c0 <__stack_chk_fail@plt>:
    27c0:	f3 0f 1e fa          	endbr64 
    27c4:	f2 ff 25 5d e7 00 00 	bnd jmp QWORD PTR [rip+0xe75d]        # 10f28 <__stack_chk_fail@GLIBC_2.4>
    27cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027d0 <strcmp@plt>:
    27d0:	f3 0f 1e fa          	endbr64 
    27d4:	f2 ff 25 55 e7 00 00 	bnd jmp QWORD PTR [rip+0xe755]        # 10f30 <strcmp@GLIBC_2.2.5>
    27db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027e0 <send@plt>:
    27e0:	f3 0f 1e fa          	endbr64 
    27e4:	f2 ff 25 4d e7 00 00 	bnd jmp QWORD PTR [rip+0xe74d]        # 10f38 <send@GLIBC_2.2.5>
    27eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027f0 <getline@plt>:
    27f0:	f3 0f 1e fa          	endbr64 
    27f4:	f2 ff 25 45 e7 00 00 	bnd jmp QWORD PTR [rip+0xe745]        # 10f40 <getline@GLIBC_2.2.5>
    27fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002800 <strcpy@plt>:
    2800:	f3 0f 1e fa          	endbr64 
    2804:	f2 ff 25 3d e7 00 00 	bnd jmp QWORD PTR [rip+0xe73d]        # 10f48 <strcpy@GLIBC_2.2.5>
    280b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002810 <strtok@plt>:
    2810:	f3 0f 1e fa          	endbr64 
    2814:	f2 ff 25 35 e7 00 00 	bnd jmp QWORD PTR [rip+0xe735]        # 10f50 <strtok@GLIBC_2.2.5>
    281b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002820 <lua_close@plt>:
    2820:	f3 0f 1e fa          	endbr64 
    2824:	f2 ff 25 2d e7 00 00 	bnd jmp QWORD PTR [rip+0xe72d]        # 10f58 <lua_close@LUA_5.3>
    282b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002830 <sqlite3_errmsg@plt>:
    2830:	f3 0f 1e fa          	endbr64 
    2834:	f2 ff 25 25 e7 00 00 	bnd jmp QWORD PTR [rip+0xe725]        # 10f60 <sqlite3_errmsg>
    283b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002840 <fclose@plt>:
    2840:	f3 0f 1e fa          	endbr64 
    2844:	f2 ff 25 1d e7 00 00 	bnd jmp QWORD PTR [rip+0xe71d]        # 10f68 <fclose@GLIBC_2.2.5>
    284b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002850 <strncpy@plt>:
    2850:	f3 0f 1e fa          	endbr64 
    2854:	f2 ff 25 15 e7 00 00 	bnd jmp QWORD PTR [rip+0xe715]        # 10f70 <strncpy@GLIBC_2.2.5>
    285b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002860 <closedir@plt>:
    2860:	f3 0f 1e fa          	endbr64 
    2864:	f2 ff 25 0d e7 00 00 	bnd jmp QWORD PTR [rip+0xe70d]        # 10f78 <closedir@GLIBC_2.2.5>
    286b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002870 <strcspn@plt>:
    2870:	f3 0f 1e fa          	endbr64 
    2874:	f2 ff 25 05 e7 00 00 	bnd jmp QWORD PTR [rip+0xe705]        # 10f80 <strcspn@GLIBC_2.2.5>
    287b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002880 <bind@plt>:
    2880:	f3 0f 1e fa          	endbr64 
    2884:	f2 ff 25 fd e6 00 00 	bnd jmp QWORD PTR [rip+0xe6fd]        # 10f88 <bind@GLIBC_2.2.5>
    288b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002890 <pcap_loop@plt>:
    2890:	f3 0f 1e fa          	endbr64 
    2894:	f2 ff 25 f5 e6 00 00 	bnd jmp QWORD PTR [rip+0xe6f5]        # 10f90 <pcap_loop>
    289b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028a0 <htonl@plt>:
    28a0:	f3 0f 1e fa          	endbr64 
    28a4:	f2 ff 25 ed e6 00 00 	bnd jmp QWORD PTR [rip+0xe6ed]        # 10f98 <htonl@GLIBC_2.2.5>
    28ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028b0 <perror@plt>:
    28b0:	f3 0f 1e fa          	endbr64 
    28b4:	f2 ff 25 e5 e6 00 00 	bnd jmp QWORD PTR [rip+0xe6e5]        # 10fa0 <perror@GLIBC_2.2.5>
    28bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028c0 <fprintf@plt>:
    28c0:	f3 0f 1e fa          	endbr64 
    28c4:	f2 ff 25 dd e6 00 00 	bnd jmp QWORD PTR [rip+0xe6dd]        # 10fa8 <fprintf@GLIBC_2.2.5>
    28cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028d0 <localtime@plt>:
    28d0:	f3 0f 1e fa          	endbr64 
    28d4:	f2 ff 25 d5 e6 00 00 	bnd jmp QWORD PTR [rip+0xe6d5]        # 10fb0 <localtime@GLIBC_2.2.5>
    28db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028e0 <getdelim@plt>:
    28e0:	f3 0f 1e fa          	endbr64 
    28e4:	f2 ff 25 cd e6 00 00 	bnd jmp QWORD PTR [rip+0xe6cd]        # 10fb8 <getdelim@GLIBC_2.2.5>
    28eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028f0 <accept@plt>:
    28f0:	f3 0f 1e fa          	endbr64 
    28f4:	f2 ff 25 c5 e6 00 00 	bnd jmp QWORD PTR [rip+0xe6c5]        # 10fc0 <accept@GLIBC_2.2.5>
    28fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002900 <sqlite3_open@plt>:
    2900:	f3 0f 1e fa          	endbr64 
    2904:	f2 ff 25 bd e6 00 00 	bnd jmp QWORD PTR [rip+0xe6bd]        # 10fc8 <sqlite3_open>
    290b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002910 <time@plt>:
    2910:	f3 0f 1e fa          	endbr64 
    2914:	f2 ff 25 b5 e6 00 00 	bnd jmp QWORD PTR [rip+0xe6b5]        # 10fd0 <time@GLIBC_2.2.5>
    291b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000002920 <_start>:
    2920:	f3 0f 1e fa          	endbr64 
    2924:	31 ed                	xor    ebp,ebp
    2926:	49 89 d1             	mov    r9,rdx
    2929:	5e                   	pop    rsi
    292a:	48 89 e2             	mov    rdx,rsp
    292d:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    2931:	50                   	push   rax
    2932:	54                   	push   rsp
    2933:	45 31 c0             	xor    r8d,r8d
    2936:	31 c9                	xor    ecx,ecx
    2938:	48 8d 3d 74 40 00 00 	lea    rdi,[rip+0x4074]        # 69b3 <main>
    293f:	ff 15 b3 e6 00 00    	call   QWORD PTR [rip+0xe6b3]        # 10ff8 <__libc_start_main@GLIBC_2.34>
    2945:	f4                   	hlt    
    2946:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    294d:	00 00 00 

0000000000002950 <deregister_tm_clones>:
    2950:	48 8d 3d f1 e6 00 00 	lea    rdi,[rip+0xe6f1]        # 11048 <__TMC_END__>
    2957:	48 8d 05 ea e6 00 00 	lea    rax,[rip+0xe6ea]        # 11048 <__TMC_END__>
    295e:	48 39 f8             	cmp    rax,rdi
    2961:	74 15                	je     2978 <deregister_tm_clones+0x28>
    2963:	48 8b 05 76 e6 00 00 	mov    rax,QWORD PTR [rip+0xe676]        # 10fe0 <_ITM_deregisterTMCloneTable>
    296a:	48 85 c0             	test   rax,rax
    296d:	74 09                	je     2978 <deregister_tm_clones+0x28>
    296f:	ff e0                	jmp    rax
    2971:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    2978:	c3                   	ret    
    2979:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002980 <register_tm_clones>:
    2980:	48 8d 3d c1 e6 00 00 	lea    rdi,[rip+0xe6c1]        # 11048 <__TMC_END__>
    2987:	48 8d 35 ba e6 00 00 	lea    rsi,[rip+0xe6ba]        # 11048 <__TMC_END__>
    298e:	48 29 fe             	sub    rsi,rdi
    2991:	48 89 f0             	mov    rax,rsi
    2994:	48 c1 ee 3f          	shr    rsi,0x3f
    2998:	48 c1 f8 03          	sar    rax,0x3
    299c:	48 01 c6             	add    rsi,rax
    299f:	48 d1 fe             	sar    rsi,1
    29a2:	74 14                	je     29b8 <register_tm_clones+0x38>
    29a4:	48 8b 05 3d e6 00 00 	mov    rax,QWORD PTR [rip+0xe63d]        # 10fe8 <_ITM_registerTMCloneTable>
    29ab:	48 85 c0             	test   rax,rax
    29ae:	74 08                	je     29b8 <register_tm_clones+0x38>
    29b0:	ff e0                	jmp    rax
    29b2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    29b8:	c3                   	ret    
    29b9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000029c0 <__do_global_dtors_aux>:
    29c0:	f3 0f 1e fa          	endbr64 
    29c4:	80 3d 9d e6 00 00 00 	cmp    BYTE PTR [rip+0xe69d],0x0        # 11068 <completed.0>
    29cb:	75 2b                	jne    29f8 <__do_global_dtors_aux+0x38>
    29cd:	55                   	push   rbp
    29ce:	48 83 3d 1a e6 00 00 	cmp    QWORD PTR [rip+0xe61a],0x0        # 10ff0 <__cxa_finalize@GLIBC_2.2.5>
    29d5:	00 
    29d6:	48 89 e5             	mov    rbp,rsp
    29d9:	74 0c                	je     29e7 <__do_global_dtors_aux+0x27>
    29db:	48 8b 3d 26 e6 00 00 	mov    rdi,QWORD PTR [rip+0xe626]        # 11008 <__dso_handle>
    29e2:	e8 b9 fa ff ff       	call   24a0 <__cxa_finalize@plt>
    29e7:	e8 64 ff ff ff       	call   2950 <deregister_tm_clones>
    29ec:	c6 05 75 e6 00 00 01 	mov    BYTE PTR [rip+0xe675],0x1        # 11068 <completed.0>
    29f3:	5d                   	pop    rbp
    29f4:	c3                   	ret    
    29f5:	0f 1f 00             	nop    DWORD PTR [rax]
    29f8:	c3                   	ret    
    29f9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002a00 <frame_dummy>:
    2a00:	f3 0f 1e fa          	endbr64 
    2a04:	e9 77 ff ff ff       	jmp    2980 <register_tm_clones>

0000000000002a09 <add_thread>:
    2a09:	f3 0f 1e fa          	endbr64 
    2a0d:	55                   	push   rbp
    2a0e:	48 89 e5             	mov    rbp,rsp
    2a11:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    2a15:	8b 05 85 e8 00 00    	mov    eax,DWORD PTR [rip+0xe885]        # 112a0 <thread_count>
    2a1b:	8d 50 01             	lea    edx,[rax+0x1]
    2a1e:	89 15 7c e8 00 00    	mov    DWORD PTR [rip+0xe87c],edx        # 112a0 <thread_count>
    2a24:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    2a28:	48 8b 12             	mov    rdx,QWORD PTR [rdx]
    2a2b:	48 98                	cdqe   
    2a2d:	48 8d 0c c5 00 00 00 	lea    rcx,[rax*8+0x0]
    2a34:	00 
    2a35:	48 8d 05 64 e6 00 00 	lea    rax,[rip+0xe664]        # 110a0 <threads>
    2a3c:	48 89 14 01          	mov    QWORD PTR [rcx+rax*1],rdx
    2a40:	90                   	nop
    2a41:	5d                   	pop    rbp
    2a42:	c3                   	ret    

0000000000002a43 <pktmgr>:
    2a43:	f3 0f 1e fa          	endbr64 
    2a47:	55                   	push   rbp
    2a48:	48 89 e5             	mov    rbp,rsp
    2a4b:	53                   	push   rbx
    2a4c:	48 83 ec 38          	sub    rsp,0x38
    2a50:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    2a54:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    2a58:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    2a5c:	b8 00 00 00 00       	mov    eax,0x0
    2a61:	e8 0e 8f 00 00       	call   b974 <pps_monitor>
    2a66:	0f b6 05 f7 74 10 00 	movzx  eax,BYTE PTR [rip+0x1074f7]        # 109f64 <packet_print>
    2a6d:	84 c0                	test   al,al
    2a6f:	74 0c                	je     2a7d <pktmgr+0x3a>
    2a71:	48 8d 3d d8 95 00 00 	lea    rdi,[rip+0x95d8]        # c050 <_IO_stdin_used+0x50>
    2a78:	e8 b3 fa ff ff       	call   2530 <puts@plt>
    2a7d:	8b 05 21 e8 00 00    	mov    eax,DWORD PTR [rip+0xe821]        # 112a4 <total_pkt_captured>
    2a83:	83 c0 01             	add    eax,0x1
    2a86:	89 05 18 e8 00 00    	mov    DWORD PTR [rip+0xe818],eax        # 112a4 <total_pkt_captured>
    2a8c:	8b 05 2e e8 00 00    	mov    eax,DWORD PTR [rip+0xe82e]        # 112c0 <pkt_counter>
    2a92:	83 c0 01             	add    eax,0x1
    2a95:	89 05 25 e8 00 00    	mov    DWORD PTR [rip+0xe825],eax        # 112c0 <pkt_counter>
    2a9b:	8b 15 1f e8 00 00    	mov    edx,DWORD PTR [rip+0xe81f]        # 112c0 <pkt_counter>
    2aa1:	8b 05 b9 74 10 00    	mov    eax,DWORD PTR [rip+0x1074b9]        # 109f60 <clean_delay_pkts>
    2aa7:	39 c2                	cmp    edx,eax
    2aa9:	72 0a                	jb     2ab5 <pktmgr+0x72>
    2aab:	c7 05 0b e8 00 00 00 	mov    DWORD PTR [rip+0xe80b],0x0        # 112c0 <pkt_counter>
    2ab2:	00 00 00 
    2ab5:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2ab9:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    2abd:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2ac1:	0f b7 40 0c          	movzx  eax,WORD PTR [rax+0xc]
    2ac5:	0f b7 c0             	movzx  eax,ax
    2ac8:	3d 86 dd 00 00       	cmp    eax,0xdd86
    2acd:	74 46                	je     2b15 <pktmgr+0xd2>
    2acf:	3d 86 dd 00 00       	cmp    eax,0xdd86
    2ad4:	7f 77                	jg     2b4d <pktmgr+0x10a>
    2ad6:	3d 80 35 00 00       	cmp    eax,0x3580
    2adb:	74 23                	je     2b00 <pktmgr+0xbd>
    2add:	3d 80 35 00 00       	cmp    eax,0x3580
    2ae2:	7f 69                	jg     2b4d <pktmgr+0x10a>
    2ae4:	3d 08 06 00 00       	cmp    eax,0x608
    2ae9:	74 15                	je     2b00 <pktmgr+0xbd>
    2aeb:	3d 08 06 00 00       	cmp    eax,0x608
    2af0:	7f 5b                	jg     2b4d <pktmgr+0x10a>
    2af2:	83 f8 08             	cmp    eax,0x8
    2af5:	74 33                	je     2b2a <pktmgr+0xe7>
    2af7:	3d 90 00 00 00       	cmp    eax,0x90
    2afc:	74 41                	je     2b3f <pktmgr+0xfc>
    2afe:	eb 4d                	jmp    2b4d <pktmgr+0x10a>
    2b00:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2b04:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2b08:	48 89 d6             	mov    rsi,rdx
    2b0b:	48 89 c7             	mov    rdi,rax
    2b0e:	e8 86 00 00 00       	call   2b99 <arpdecode>
    2b13:	eb 7d                	jmp    2b92 <pktmgr+0x14f>
    2b15:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2b19:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2b1d:	48 89 d6             	mov    rsi,rdx
    2b20:	48 89 c7             	mov    rdi,rax
    2b23:	e8 df 87 00 00       	call   b307 <ip6decode>
    2b28:	eb 68                	jmp    2b92 <pktmgr+0x14f>
    2b2a:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2b2e:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2b32:	48 89 d6             	mov    rsi,rdx
    2b35:	48 89 c7             	mov    rdi,rax
    2b38:	e8 56 0b 00 00       	call   3693 <ipv4pktmgr>
    2b3d:	eb 53                	jmp    2b92 <pktmgr+0x14f>
    2b3f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2b43:	48 89 c7             	mov    rdi,rax
    2b46:	e8 42 03 00 00       	call   2e8d <loopback_ctp_decode>
    2b4b:	eb 45                	jmp    2b92 <pktmgr+0x14f>
    2b4d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2b51:	48 89 c7             	mov    rdi,rax
    2b54:	e8 f5 04 00 00       	call   304e <uc_mac_ntoa>
    2b59:	48 89 c3             	mov    rbx,rax
    2b5c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2b60:	48 83 c0 06          	add    rax,0x6
    2b64:	48 89 c7             	mov    rdi,rax
    2b67:	e8 e2 04 00 00       	call   304e <uc_mac_ntoa>
    2b6c:	41 b9 ff ff ff ff    	mov    r9d,0xffffffff
    2b72:	41 b8 ff ff ff ff    	mov    r8d,0xffffffff
    2b78:	48 89 d9             	mov    rcx,rbx
    2b7b:	48 89 c2             	mov    rdx,rax
    2b7e:	48 8d 35 13 95 00 00 	lea    rsi,[rip+0x9513]        # c098 <_IO_stdin_used+0x98>
    2b85:	48 8d 3d 3e 95 00 00 	lea    rdi,[rip+0x953e]        # c0ca <_IO_stdin_used+0xca>
    2b8c:	e8 fa 67 00 00       	call   938b <lfprintf>
    2b91:	90                   	nop
    2b92:	90                   	nop
    2b93:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    2b97:	c9                   	leave  
    2b98:	c3                   	ret    

0000000000002b99 <arpdecode>:
    2b99:	f3 0f 1e fa          	endbr64 
    2b9d:	55                   	push   rbp
    2b9e:	48 89 e5             	mov    rbp,rsp
    2ba1:	48 81 ec 50 03 00 00 	sub    rsp,0x350
    2ba8:	48 89 bd b8 fc ff ff 	mov    QWORD PTR [rbp-0x348],rdi
    2baf:	48 89 b5 b0 fc ff ff 	mov    QWORD PTR [rbp-0x350],rsi
    2bb6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2bbd:	00 00 
    2bbf:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2bc3:	31 c0                	xor    eax,eax
    2bc5:	0f b6 05 98 73 10 00 	movzx  eax,BYTE PTR [rip+0x107398]        # 109f64 <packet_print>
    2bcc:	84 c0                	test   al,al
    2bce:	74 18                	je     2be8 <arpdecode+0x4f>
    2bd0:	48 8d 35 11 95 00 00 	lea    rsi,[rip+0x9511]        # c0e8 <_IO_stdin_used+0xe8>
    2bd7:	48 8d 3d 12 95 00 00 	lea    rdi,[rip+0x9512]        # c0f0 <_IO_stdin_used+0xf0>
    2bde:	b8 00 00 00 00       	mov    eax,0x0
    2be3:	e8 e8 f8 ff ff       	call   24d0 <printf@plt>
    2be8:	48 8b 85 b8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x348]
    2bef:	48 83 c0 0e          	add    rax,0xe
    2bf3:	48 89 85 c8 fc ff ff 	mov    QWORD PTR [rbp-0x338],rax
    2bfa:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2c01:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    2c05:	0f b7 c0             	movzx  eax,ax
    2c08:	3d 00 18 00 00       	cmp    eax,0x1800
    2c0d:	74 35                	je     2c44 <arpdecode+0xab>
    2c0f:	3d 00 18 00 00       	cmp    eax,0x1800
    2c14:	0f 8f 1d 02 00 00    	jg     2e37 <arpdecode+0x29e>
    2c1a:	3d 00 02 00 00       	cmp    eax,0x200
    2c1f:	0f 84 eb 00 00 00    	je     2d10 <arpdecode+0x177>
    2c25:	3d 00 02 00 00       	cmp    eax,0x200
    2c2a:	0f 8f 07 02 00 00    	jg     2e37 <arpdecode+0x29e>
    2c30:	83 f8 02             	cmp    eax,0x2
    2c33:	0f 84 d7 00 00 00    	je     2d10 <arpdecode+0x177>
    2c39:	3d 00 01 00 00       	cmp    eax,0x100
    2c3e:	0f 85 f3 01 00 00    	jne    2e37 <arpdecode+0x29e>
    2c44:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2c4b:	48 83 c0 18          	add    rax,0x18
    2c4f:	48 89 c7             	mov    rdi,rax
    2c52:	e8 9d 04 00 00       	call   30f4 <u8_ipv4_ntoa>
    2c57:	48 89 c1             	mov    rcx,rax
    2c5a:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2c5e:	ba 20 00 00 00       	mov    edx,0x20
    2c63:	48 89 ce             	mov    rsi,rcx
    2c66:	48 89 c7             	mov    rdi,rax
    2c69:	e8 e2 fb ff ff       	call   2850 <strncpy@plt>
    2c6e:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2c75:	48 83 c0 0e          	add    rax,0xe
    2c79:	48 89 c7             	mov    rdi,rax
    2c7c:	e8 73 04 00 00       	call   30f4 <u8_ipv4_ntoa>
    2c81:	48 89 c1             	mov    rcx,rax
    2c84:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2c88:	ba 20 00 00 00       	mov    edx,0x20
    2c8d:	48 89 ce             	mov    rsi,rcx
    2c90:	48 89 c7             	mov    rdi,rax
    2c93:	e8 b8 fb ff ff       	call   2850 <strncpy@plt>
    2c98:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2c9c:	ba 05 00 00 00       	mov    edx,0x5
    2ca1:	48 8d 35 4b 94 00 00 	lea    rsi,[rip+0x944b]        # c0f3 <_IO_stdin_used+0xf3>
    2ca8:	48 89 c7             	mov    rdi,rax
    2cab:	e8 f0 f8 ff ff       	call   25a0 <strncmp@plt>
    2cb0:	85 c0                	test   eax,eax
    2cb2:	75 2c                	jne    2ce0 <arpdecode+0x147>
    2cb4:	0f b6 05 a9 72 10 00 	movzx  eax,BYTE PTR [rip+0x1072a9]        # 109f64 <packet_print>
    2cbb:	84 c0                	test   al,al
    2cbd:	0f 84 97 01 00 00    	je     2e5a <arpdecode+0x2c1>
    2cc3:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2cc7:	48 89 c6             	mov    rsi,rax
    2cca:	48 8d 3d 2f 94 00 00 	lea    rdi,[rip+0x942f]        # c100 <_IO_stdin_used+0x100>
    2cd1:	b8 00 00 00 00       	mov    eax,0x0
    2cd6:	e8 f5 f7 ff ff       	call   24d0 <printf@plt>
    2cdb:	e9 7a 01 00 00       	jmp    2e5a <arpdecode+0x2c1>
    2ce0:	0f b6 05 7d 72 10 00 	movzx  eax,BYTE PTR [rip+0x10727d]        # 109f64 <packet_print>
    2ce7:	84 c0                	test   al,al
    2ce9:	0f 84 6b 01 00 00    	je     2e5a <arpdecode+0x2c1>
    2cef:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2cf3:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2cf7:	48 89 c6             	mov    rsi,rax
    2cfa:	48 8d 3d 1f 94 00 00 	lea    rdi,[rip+0x941f]        # c120 <_IO_stdin_used+0x120>
    2d01:	b8 00 00 00 00       	mov    eax,0x0
    2d06:	e8 c5 f7 ff ff       	call   24d0 <printf@plt>
    2d0b:	e9 4a 01 00 00       	jmp    2e5a <arpdecode+0x2c1>
    2d10:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2d17:	48 83 c0 08          	add    rax,0x8
    2d1b:	48 89 c7             	mov    rdi,rax
    2d1e:	e8 7d 02 00 00       	call   2fa0 <mac_ntoa>
    2d23:	48 89 c1             	mov    rcx,rax
    2d26:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2d2a:	ba 40 00 00 00       	mov    edx,0x40
    2d2f:	48 89 ce             	mov    rsi,rcx
    2d32:	48 89 c7             	mov    rdi,rax
    2d35:	e8 16 fb ff ff       	call   2850 <strncpy@plt>
    2d3a:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2d41:	48 83 c0 0e          	add    rax,0xe
    2d45:	48 89 c7             	mov    rdi,rax
    2d48:	e8 a7 03 00 00       	call   30f4 <u8_ipv4_ntoa>
    2d4d:	48 89 c1             	mov    rcx,rax
    2d50:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d54:	ba 20 00 00 00       	mov    edx,0x20
    2d59:	48 89 ce             	mov    rsi,rcx
    2d5c:	48 89 c7             	mov    rdi,rax
    2d5f:	e8 ec fa ff ff       	call   2850 <strncpy@plt>
    2d64:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2d68:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d6c:	48 89 d6             	mov    rsi,rdx
    2d6f:	48 89 c7             	mov    rdi,rax
    2d72:	e8 57 50 00 00       	call   7dce <entry_exists>
    2d77:	83 f8 ff             	cmp    eax,0xffffffff
    2d7a:	74 15                	je     2d91 <arpdecode+0x1f8>
    2d7c:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2d80:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d84:	48 89 d6             	mov    rsi,rdx
    2d87:	48 89 c7             	mov    rdi,rax
    2d8a:	e8 ec 4e 00 00       	call   7c7b <compare_entries>
    2d8f:	eb 7d                	jmp    2e0e <arpdecode+0x275>
    2d91:	0f b6 05 89 71 10 00 	movzx  eax,BYTE PTR [rip+0x107189]        # 109f21 <use_sqlite>
    2d98:	84 c0                	test   al,al
    2d9a:	74 5f                	je     2dfb <arpdecode+0x262>
    2d9c:	c7 85 f4 fc ff ff 00 	mov    DWORD PTR [rbp-0x30c],0x0
    2da3:	00 00 00 
    2da6:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    2daa:	48 8d 85 d0 fc ff ff 	lea    rax,[rbp-0x330]
    2db1:	48 89 d6             	mov    rsi,rdx
    2db4:	48 89 c7             	mov    rdi,rax
    2db7:	e8 44 fa ff ff       	call   2800 <strcpy@plt>
    2dbc:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2dc0:	48 8d 95 d0 fc ff ff 	lea    rdx,[rbp-0x330]
    2dc7:	48 83 c2 10          	add    rdx,0x10
    2dcb:	48 89 c6             	mov    rsi,rax
    2dce:	48 89 d7             	mov    rdi,rdx
    2dd1:	e8 2a fa ff ff       	call   2800 <strcpy@plt>
    2dd6:	48 8d 95 d0 fc ff ff 	lea    rdx,[rbp-0x330]
    2ddd:	48 8d 85 c0 fc ff ff 	lea    rax,[rbp-0x340]
    2de4:	48 89 d1             	mov    rcx,rdx
    2de7:	48 8d 15 ed 54 00 00 	lea    rdx,[rip+0x54ed]        # 82db <update_db>
    2dee:	be 00 00 00 00       	mov    esi,0x0
    2df3:	48 89 c7             	mov    rdi,rax
    2df6:	e8 25 f8 ff ff       	call   2620 <pthread_create@plt>
    2dfb:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2dff:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2e03:	48 89 d6             	mov    rsi,rdx
    2e06:	48 89 c7             	mov    rdi,rax
    2e09:	e8 4c 4f 00 00       	call   7d5a <add_entry>
    2e0e:	0f b6 05 4f 71 10 00 	movzx  eax,BYTE PTR [rip+0x10714f]        # 109f64 <packet_print>
    2e15:	84 c0                	test   al,al
    2e17:	74 44                	je     2e5d <arpdecode+0x2c4>
    2e19:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2e1d:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2e21:	48 89 c6             	mov    rsi,rax
    2e24:	48 8d 3d 1d 93 00 00 	lea    rdi,[rip+0x931d]        # c148 <_IO_stdin_used+0x148>
    2e2b:	b8 00 00 00 00       	mov    eax,0x0
    2e30:	e8 9b f6 ff ff       	call   24d0 <printf@plt>
    2e35:	eb 26                	jmp    2e5d <arpdecode+0x2c4>
    2e37:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2e3e:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    2e42:	0f b7 c0             	movzx  eax,ax
    2e45:	89 c6                	mov    esi,eax
    2e47:	48 8d 3d 19 93 00 00 	lea    rdi,[rip+0x9319]        # c167 <_IO_stdin_used+0x167>
    2e4e:	b8 00 00 00 00       	mov    eax,0x0
    2e53:	e8 78 f6 ff ff       	call   24d0 <printf@plt>
    2e58:	eb 04                	jmp    2e5e <arpdecode+0x2c5>
    2e5a:	90                   	nop
    2e5b:	eb 01                	jmp    2e5e <arpdecode+0x2c5>
    2e5d:	90                   	nop
    2e5e:	48 8d 35 1a 93 00 00 	lea    rsi,[rip+0x931a]        # c17f <_IO_stdin_used+0x17f>
    2e65:	48 8d 3d 84 92 00 00 	lea    rdi,[rip+0x9284]        # c0f0 <_IO_stdin_used+0xf0>
    2e6c:	b8 00 00 00 00       	mov    eax,0x0
    2e71:	e8 5a f6 ff ff       	call   24d0 <printf@plt>
    2e76:	90                   	nop
    2e77:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2e7b:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    2e82:	00 00 
    2e84:	74 05                	je     2e8b <arpdecode+0x2f2>
    2e86:	e8 35 f9 ff ff       	call   27c0 <__stack_chk_fail@plt>
    2e8b:	c9                   	leave  
    2e8c:	c3                   	ret    

0000000000002e8d <loopback_ctp_decode>:
    2e8d:	f3 0f 1e fa          	endbr64 
    2e91:	55                   	push   rbp
    2e92:	48 89 e5             	mov    rbp,rsp
    2e95:	48 83 ec 60          	sub    rsp,0x60
    2e99:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    2e9d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2ea4:	00 00 
    2ea6:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2eaa:	31 c0                	xor    eax,eax
    2eac:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    2eb0:	48 83 c0 0e          	add    rax,0xe
    2eb4:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    2eb8:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    2ebc:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    2ec0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    2ec4:	48 83 c0 06          	add    rax,0x6
    2ec8:	48 89 c7             	mov    rdi,rax
    2ecb:	e8 7e 01 00 00       	call   304e <uc_mac_ntoa>
    2ed0:	48 89 c1             	mov    rcx,rax
    2ed3:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    2ed7:	ba 18 00 00 00       	mov    edx,0x18
    2edc:	48 89 ce             	mov    rsi,rcx
    2edf:	48 89 c7             	mov    rdi,rax
    2ee2:	e8 69 f9 ff ff       	call   2850 <strncpy@plt>
    2ee7:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    2eeb:	48 89 c7             	mov    rdi,rax
    2eee:	e8 5b 01 00 00       	call   304e <uc_mac_ntoa>
    2ef3:	48 89 c1             	mov    rcx,rax
    2ef6:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    2efa:	ba 18 00 00 00       	mov    edx,0x18
    2eff:	48 89 ce             	mov    rsi,rcx
    2f02:	48 89 c7             	mov    rdi,rax
    2f05:	e8 46 f9 ff ff       	call   2850 <strncpy@plt>
    2f0a:	0f b6 05 53 70 10 00 	movzx  eax,BYTE PTR [rip+0x107053]        # 109f64 <packet_print>
    2f11:	84 c0                	test   al,al
    2f13:	74 1c                	je     2f31 <loopback_ctp_decode+0xa4>
    2f15:	48 8d 55 e0          	lea    rdx,[rbp-0x20]
    2f19:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    2f1d:	48 89 c6             	mov    rsi,rax
    2f20:	48 8d 3d 5d 92 00 00 	lea    rdi,[rip+0x925d]        # c184 <_IO_stdin_used+0x184>
    2f27:	b8 00 00 00 00       	mov    eax,0x0
    2f2c:	e8 9f f5 ff ff       	call   24d0 <printf@plt>
    2f31:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    2f35:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    2f39:	0f b7 c0             	movzx  eax,ax
    2f3c:	83 f8 01             	cmp    eax,0x1
    2f3f:	75 19                	jne    2f5a <loopback_ctp_decode+0xcd>
    2f41:	0f b6 05 1c 70 10 00 	movzx  eax,BYTE PTR [rip+0x10701c]        # 109f64 <packet_print>
    2f48:	84 c0                	test   al,al
    2f4a:	74 39                	je     2f85 <loopback_ctp_decode+0xf8>
    2f4c:	48 8d 3d 3f 92 00 00 	lea    rdi,[rip+0x923f]        # c192 <_IO_stdin_used+0x192>
    2f53:	e8 d8 f5 ff ff       	call   2530 <puts@plt>
    2f58:	eb 2b                	jmp    2f85 <loopback_ctp_decode+0xf8>
    2f5a:	0f b6 05 03 70 10 00 	movzx  eax,BYTE PTR [rip+0x107003]        # 109f64 <packet_print>
    2f61:	84 c0                	test   al,al
    2f63:	74 23                	je     2f88 <loopback_ctp_decode+0xfb>
    2f65:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    2f69:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    2f6d:	0f b7 c0             	movzx  eax,ax
    2f70:	89 c6                	mov    esi,eax
    2f72:	48 8d 3d 21 92 00 00 	lea    rdi,[rip+0x9221]        # c19a <_IO_stdin_used+0x19a>
    2f79:	b8 00 00 00 00       	mov    eax,0x0
    2f7e:	e8 4d f5 ff ff       	call   24d0 <printf@plt>
    2f83:	eb 03                	jmp    2f88 <loopback_ctp_decode+0xfb>
    2f85:	90                   	nop
    2f86:	eb 01                	jmp    2f89 <loopback_ctp_decode+0xfc>
    2f88:	90                   	nop
    2f89:	90                   	nop
    2f8a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f8e:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    2f95:	00 00 
    2f97:	74 05                	je     2f9e <loopback_ctp_decode+0x111>
    2f99:	e8 22 f8 ff ff       	call   27c0 <__stack_chk_fail@plt>
    2f9e:	c9                   	leave  
    2f9f:	c3                   	ret    

0000000000002fa0 <mac_ntoa>:
    2fa0:	f3 0f 1e fa          	endbr64 
    2fa4:	55                   	push   rbp
    2fa5:	48 89 e5             	mov    rbp,rsp
    2fa8:	48 83 ec 20          	sub    rsp,0x20
    2fac:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    2fb0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2fb4:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2fb8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fbc:	48 83 c0 05          	add    rax,0x5
    2fc0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fc3:	0f b6 f0             	movzx  esi,al
    2fc6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fca:	48 83 c0 04          	add    rax,0x4
    2fce:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fd1:	0f b6 c8             	movzx  ecx,al
    2fd4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fd8:	48 83 c0 03          	add    rax,0x3
    2fdc:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fdf:	0f b6 d0             	movzx  edx,al
    2fe2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fe6:	48 83 c0 02          	add    rax,0x2
    2fea:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fed:	44 0f b6 c8          	movzx  r9d,al
    2ff1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2ff5:	48 83 c0 01          	add    rax,0x1
    2ff9:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2ffc:	44 0f b6 c0          	movzx  r8d,al
    3000:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3004:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3007:	0f b6 c0             	movzx  eax,al
    300a:	64 48 8b 3c 25 00 00 	mov    rdi,QWORD PTR fs:0x0
    3011:	00 00 
    3013:	48 81 c7 80 fb ff ff 	add    rdi,0xfffffffffffffb80
    301a:	48 83 ec 08          	sub    rsp,0x8
    301e:	56                   	push   rsi
    301f:	51                   	push   rcx
    3020:	52                   	push   rdx
    3021:	89 c1                	mov    ecx,eax
    3023:	48 8d 15 8e 91 00 00 	lea    rdx,[rip+0x918e]        # c1b8 <_IO_stdin_used+0x1b8>
    302a:	be 80 00 00 00       	mov    esi,0x80
    302f:	b8 00 00 00 00       	mov    eax,0x0
    3034:	e8 b7 f4 ff ff       	call   24f0 <snprintf@plt>
    3039:	48 83 c4 20          	add    rsp,0x20
    303d:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3044:	00 00 
    3046:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    304c:	c9                   	leave  
    304d:	c3                   	ret    

000000000000304e <uc_mac_ntoa>:
    304e:	f3 0f 1e fa          	endbr64 
    3052:	55                   	push   rbp
    3053:	48 89 e5             	mov    rbp,rsp
    3056:	48 83 ec 10          	sub    rsp,0x10
    305a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    305e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3062:	48 83 c0 05          	add    rax,0x5
    3066:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3069:	0f b6 f0             	movzx  esi,al
    306c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3070:	48 83 c0 04          	add    rax,0x4
    3074:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3077:	0f b6 c8             	movzx  ecx,al
    307a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    307e:	48 83 c0 03          	add    rax,0x3
    3082:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3085:	0f b6 d0             	movzx  edx,al
    3088:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    308c:	48 83 c0 02          	add    rax,0x2
    3090:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3093:	44 0f b6 c8          	movzx  r9d,al
    3097:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    309b:	48 83 c0 01          	add    rax,0x1
    309f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    30a2:	44 0f b6 c0          	movzx  r8d,al
    30a6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    30aa:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    30ad:	0f b6 c0             	movzx  eax,al
    30b0:	64 48 8b 3c 25 00 00 	mov    rdi,QWORD PTR fs:0x0
    30b7:	00 00 
    30b9:	48 81 c7 80 fb ff ff 	add    rdi,0xfffffffffffffb80
    30c0:	48 83 ec 08          	sub    rsp,0x8
    30c4:	56                   	push   rsi
    30c5:	51                   	push   rcx
    30c6:	52                   	push   rdx
    30c7:	89 c1                	mov    ecx,eax
    30c9:	48 8d 15 e8 90 00 00 	lea    rdx,[rip+0x90e8]        # c1b8 <_IO_stdin_used+0x1b8>
    30d0:	be 80 00 00 00       	mov    esi,0x80
    30d5:	b8 00 00 00 00       	mov    eax,0x0
    30da:	e8 11 f4 ff ff       	call   24f0 <snprintf@plt>
    30df:	48 83 c4 20          	add    rsp,0x20
    30e3:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    30ea:	00 00 
    30ec:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    30f2:	c9                   	leave  
    30f3:	c3                   	ret    

00000000000030f4 <u8_ipv4_ntoa>:
    30f4:	f3 0f 1e fa          	endbr64 
    30f8:	55                   	push   rbp
    30f9:	48 89 e5             	mov    rbp,rsp
    30fc:	48 83 ec 20          	sub    rsp,0x20
    3100:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    3104:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    3108:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    310c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3110:	48 83 c0 03          	add    rax,0x3
    3114:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3117:	0f b6 d0             	movzx  edx,al
    311a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    311e:	48 83 c0 02          	add    rax,0x2
    3122:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3125:	44 0f b6 c0          	movzx  r8d,al
    3129:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    312d:	48 83 c0 01          	add    rax,0x1
    3131:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3134:	0f b6 f0             	movzx  esi,al
    3137:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    313b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    313e:	0f b6 c0             	movzx  eax,al
    3141:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    3148:	00 00 
    314a:	48 8d b9 80 fb ff ff 	lea    rdi,[rcx-0x480]
    3151:	48 83 ec 08          	sub    rsp,0x8
    3155:	52                   	push   rdx
    3156:	45 89 c1             	mov    r9d,r8d
    3159:	41 89 f0             	mov    r8d,esi
    315c:	89 c1                	mov    ecx,eax
    315e:	48 8d 15 71 90 00 00 	lea    rdx,[rip+0x9071]        # c1d6 <_IO_stdin_used+0x1d6>
    3165:	be 80 00 00 00       	mov    esi,0x80
    316a:	b8 00 00 00 00       	mov    eax,0x0
    316f:	e8 7c f3 ff ff       	call   24f0 <snprintf@plt>
    3174:	48 83 c4 10          	add    rsp,0x10
    3178:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    317f:	00 00 
    3181:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    3187:	c9                   	leave  
    3188:	c3                   	ret    

0000000000003189 <ipv4_ntoa>:
    3189:	f3 0f 1e fa          	endbr64 
    318d:	55                   	push   rbp
    318e:	48 89 e5             	mov    rbp,rsp
    3191:	48 83 ec 20          	sub    rsp,0x20
    3195:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    3198:	48 8d 45 ec          	lea    rax,[rbp-0x14]
    319c:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    31a0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    31a4:	48 83 c0 03          	add    rax,0x3
    31a8:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31ab:	0f b6 d0             	movzx  edx,al
    31ae:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    31b2:	48 83 c0 02          	add    rax,0x2
    31b6:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31b9:	44 0f b6 c0          	movzx  r8d,al
    31bd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    31c1:	48 83 c0 01          	add    rax,0x1
    31c5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31c8:	0f b6 f0             	movzx  esi,al
    31cb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    31cf:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31d2:	0f b6 c0             	movzx  eax,al
    31d5:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    31dc:	00 00 
    31de:	48 8d b9 80 fb ff ff 	lea    rdi,[rcx-0x480]
    31e5:	48 83 ec 08          	sub    rsp,0x8
    31e9:	52                   	push   rdx
    31ea:	45 89 c1             	mov    r9d,r8d
    31ed:	41 89 f0             	mov    r8d,esi
    31f0:	89 c1                	mov    ecx,eax
    31f2:	48 8d 15 dd 8f 00 00 	lea    rdx,[rip+0x8fdd]        # c1d6 <_IO_stdin_used+0x1d6>
    31f9:	be 80 00 00 00       	mov    esi,0x80
    31fe:	b8 00 00 00 00       	mov    eax,0x0
    3203:	e8 e8 f2 ff ff       	call   24f0 <snprintf@plt>
    3208:	48 83 c4 10          	add    rsp,0x10
    320c:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3213:	00 00 
    3215:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    321b:	c9                   	leave  
    321c:	c3                   	ret    

000000000000321d <inet6_ntoa>:
    321d:	f3 0f 1e fa          	endbr64 
    3221:	55                   	push   rbp
    3222:	48 89 e5             	mov    rbp,rsp
    3225:	41 57                	push   r15
    3227:	41 56                	push   r14
    3229:	41 55                	push   r13
    322b:	41 54                	push   r12
    322d:	53                   	push   rbx
    322e:	48 83 ec 38          	sub    rsp,0x38
    3232:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    3236:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    323d:	00 00 
    323f:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    3243:	31 c0                	xor    eax,eax
    3245:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    324c:	00 00 
    324e:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    3254:	ba 80 00 00 00       	mov    edx,0x80
    3259:	be 00 00 00 00       	mov    esi,0x0
    325e:	48 89 c7             	mov    rdi,rax
    3261:	e8 7a f2 ff ff       	call   24e0 <memset@plt>
    3266:	48 c7 45 c0 00 00 00 	mov    QWORD PTR [rbp-0x40],0x0
    326d:	00 
    326e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3272:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    3276:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    327a:	48 83 c0 0f          	add    rax,0xf
    327e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3281:	0f b6 c8             	movzx  ecx,al
    3284:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3288:	48 83 c0 0e          	add    rax,0xe
    328c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    328f:	0f b6 f8             	movzx  edi,al
    3292:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3296:	48 83 c0 0d          	add    rax,0xd
    329a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    329d:	0f b6 c0             	movzx  eax,al
    32a0:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
    32a3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32a7:	48 83 c0 0c          	add    rax,0xc
    32ab:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32ae:	0f b6 d8             	movzx  ebx,al
    32b1:	89 5d b0             	mov    DWORD PTR [rbp-0x50],ebx
    32b4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32b8:	48 83 c0 0b          	add    rax,0xb
    32bc:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32bf:	44 0f b6 f8          	movzx  r15d,al
    32c3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32c7:	48 83 c0 0a          	add    rax,0xa
    32cb:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32ce:	44 0f b6 f0          	movzx  r14d,al
    32d2:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32d6:	48 83 c0 09          	add    rax,0x9
    32da:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32dd:	44 0f b6 e8          	movzx  r13d,al
    32e1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32e5:	48 83 c0 08          	add    rax,0x8
    32e9:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32ec:	44 0f b6 e0          	movzx  r12d,al
    32f0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32f4:	48 83 c0 07          	add    rax,0x7
    32f8:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32fb:	0f b6 d8             	movzx  ebx,al
    32fe:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3302:	48 83 c0 06          	add    rax,0x6
    3306:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3309:	44 0f b6 d8          	movzx  r11d,al
    330d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3311:	48 83 c0 05          	add    rax,0x5
    3315:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3318:	44 0f b6 d0          	movzx  r10d,al
    331c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3320:	48 83 c0 04          	add    rax,0x4
    3324:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3327:	44 0f b6 c8          	movzx  r9d,al
    332b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    332f:	48 83 c0 03          	add    rax,0x3
    3333:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3336:	44 0f b6 c0          	movzx  r8d,al
    333a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    333e:	48 83 c0 02          	add    rax,0x2
    3342:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3345:	0f b6 d0             	movzx  edx,al
    3348:	89 55 ac             	mov    DWORD PTR [rbp-0x54],edx
    334b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    334f:	48 83 c0 01          	add    rax,0x1
    3353:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3356:	0f b6 f0             	movzx  esi,al
    3359:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    335d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3360:	0f b6 d0             	movzx  edx,al
    3363:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    336a:	00 00 
    336c:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    3372:	48 83 ec 08          	sub    rsp,0x8
    3376:	51                   	push   rcx
    3377:	57                   	push   rdi
    3378:	8b 4d b4             	mov    ecx,DWORD PTR [rbp-0x4c]
    337b:	51                   	push   rcx
    337c:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
    337f:	51                   	push   rcx
    3380:	41 57                	push   r15
    3382:	41 56                	push   r14
    3384:	41 55                	push   r13
    3386:	41 54                	push   r12
    3388:	53                   	push   rbx
    3389:	41 53                	push   r11
    338b:	41 52                	push   r10
    338d:	41 51                	push   r9
    338f:	41 50                	push   r8
    3391:	44 8b 4d ac          	mov    r9d,DWORD PTR [rbp-0x54]
    3395:	41 89 f0             	mov    r8d,esi
    3398:	89 d1                	mov    ecx,edx
    339a:	48 8d 15 47 8e 00 00 	lea    rdx,[rip+0x8e47]        # c1e8 <_IO_stdin_used+0x1e8>
    33a1:	be 80 00 00 00       	mov    esi,0x80
    33a6:	48 89 c7             	mov    rdi,rax
    33a9:	b8 00 00 00 00       	mov    eax,0x0
    33ae:	e8 3d f1 ff ff       	call   24f0 <snprintf@plt>
    33b3:	48 83 c4 70          	add    rsp,0x70
    33b7:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    33be:	00 00 
    33c0:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    33c6:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    33ca:	64 48 2b 34 25 28 00 	sub    rsi,QWORD PTR fs:0x28
    33d1:	00 00 
    33d3:	74 05                	je     33da <inet6_ntoa+0x1bd>
    33d5:	e8 e6 f3 ff ff       	call   27c0 <__stack_chk_fail@plt>
    33da:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    33de:	5b                   	pop    rbx
    33df:	41 5c                	pop    r12
    33e1:	41 5d                	pop    r13
    33e3:	41 5e                	pop    r14
    33e5:	41 5f                	pop    r15
    33e7:	5d                   	pop    rbp
    33e8:	c3                   	ret    

00000000000033e9 <get_formated_time>:
    33e9:	f3 0f 1e fa          	endbr64 
    33ed:	55                   	push   rbp
    33ee:	48 89 e5             	mov    rbp,rsp
    33f1:	53                   	push   rbx
    33f2:	48 83 ec 58          	sub    rsp,0x58
    33f6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    33fd:	00 00 
    33ff:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    3403:	31 c0                	xor    eax,eax
    3405:	bf ff 00 00 00       	mov    edi,0xff
    340a:	e8 a1 f1 ff ff       	call   25b0 <malloc@plt>
    340f:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    3413:	bf 00 00 00 00       	mov    edi,0x0
    3418:	e8 f3 f4 ff ff       	call   2910 <time@plt>
    341d:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    3421:	48 8d 45 a0          	lea    rax,[rbp-0x60]
    3425:	48 89 c7             	mov    rdi,rax
    3428:	e8 a3 f4 ff ff       	call   28d0 <localtime@plt>
    342d:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    3430:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    3434:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
    3438:	48 89 5d b8          	mov    QWORD PTR [rbp-0x48],rbx
    343c:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    3440:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    3444:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    3448:	48 89 5d c8          	mov    QWORD PTR [rbp-0x38],rbx
    344c:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    3450:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    3454:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    3458:	48 89 5d d8          	mov    QWORD PTR [rbp-0x28],rbx
    345c:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    3460:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    3464:	8b 7d b0             	mov    edi,DWORD PTR [rbp-0x50]
    3467:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
    346a:	44 8b 4d b8          	mov    r9d,DWORD PTR [rbp-0x48]
    346e:	44 8b 45 bc          	mov    r8d,DWORD PTR [rbp-0x44]
    3472:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    3475:	8d 48 01             	lea    ecx,[rax+0x1]
    3478:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    347b:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    3481:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3485:	57                   	push   rdi
    3486:	56                   	push   rsi
    3487:	48 8d 35 a2 8d 00 00 	lea    rsi,[rip+0x8da2]        # c230 <_IO_stdin_used+0x230>
    348e:	48 89 c7             	mov    rdi,rax
    3491:	b8 00 00 00 00       	mov    eax,0x0
    3496:	e8 f5 f1 ff ff       	call   2690 <sprintf@plt>
    349b:	48 83 c4 10          	add    rsp,0x10
    349f:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    34a3:	48 8b 5d e8          	mov    rbx,QWORD PTR [rbp-0x18]
    34a7:	64 48 2b 1c 25 28 00 	sub    rbx,QWORD PTR fs:0x28
    34ae:	00 00 
    34b0:	74 05                	je     34b7 <get_formated_time+0xce>
    34b2:	e8 09 f3 ff ff       	call   27c0 <__stack_chk_fail@plt>
    34b7:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    34bb:	c9                   	leave  
    34bc:	c3                   	ret    

00000000000034bd <cb_get_formatted_time>:
    34bd:	f3 0f 1e fa          	endbr64 
    34c1:	55                   	push   rbp
    34c2:	48 89 e5             	mov    rbp,rsp
    34c5:	53                   	push   rbx
    34c6:	48 83 ec 68          	sub    rsp,0x68
    34ca:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    34ce:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    34d5:	00 00 
    34d7:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    34db:	31 c0                	xor    eax,eax
    34dd:	bf 00 00 00 00       	mov    edi,0x0
    34e2:	e8 29 f4 ff ff       	call   2910 <time@plt>
    34e7:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    34eb:	48 8d 45 a8          	lea    rax,[rbp-0x58]
    34ef:	48 89 c7             	mov    rdi,rax
    34f2:	e8 d9 f3 ff ff       	call   28d0 <localtime@plt>
    34f7:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    34fa:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    34fe:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
    3502:	48 89 5d b8          	mov    QWORD PTR [rbp-0x48],rbx
    3506:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    350a:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    350e:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    3512:	48 89 5d c8          	mov    QWORD PTR [rbp-0x38],rbx
    3516:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    351a:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    351e:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    3522:	48 89 5d d8          	mov    QWORD PTR [rbp-0x28],rbx
    3526:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    352a:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    352e:	8b 7d b0             	mov    edi,DWORD PTR [rbp-0x50]
    3531:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
    3534:	44 8b 4d b8          	mov    r9d,DWORD PTR [rbp-0x48]
    3538:	44 8b 45 bc          	mov    r8d,DWORD PTR [rbp-0x44]
    353c:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    353f:	8d 48 01             	lea    ecx,[rax+0x1]
    3542:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    3545:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    354b:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    354f:	57                   	push   rdi
    3550:	56                   	push   rsi
    3551:	48 8d 35 d8 8c 00 00 	lea    rsi,[rip+0x8cd8]        # c230 <_IO_stdin_used+0x230>
    3558:	48 89 c7             	mov    rdi,rax
    355b:	b8 00 00 00 00       	mov    eax,0x0
    3560:	e8 2b f1 ff ff       	call   2690 <sprintf@plt>
    3565:	48 83 c4 10          	add    rsp,0x10
    3569:	90                   	nop
    356a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    356e:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    3575:	00 00 
    3577:	74 05                	je     357e <cb_get_formatted_time+0xc1>
    3579:	e8 42 f2 ff ff       	call   27c0 <__stack_chk_fail@plt>
    357e:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    3582:	c9                   	leave  
    3583:	c3                   	ret    

0000000000003584 <strloc>:
    3584:	f3 0f 1e fa          	endbr64 
    3588:	55                   	push   rbp
    3589:	48 89 e5             	mov    rbp,rsp
    358c:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    3590:	89 f0                	mov    eax,esi
    3592:	88 45 e4             	mov    BYTE PTR [rbp-0x1c],al
    3595:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    359c:	eb 1e                	jmp    35bc <strloc+0x38>
    359e:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    35a1:	48 63 d0             	movsxd rdx,eax
    35a4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    35a8:	48 01 d0             	add    rax,rdx
    35ab:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    35ae:	38 45 e4             	cmp    BYTE PTR [rbp-0x1c],al
    35b1:	75 05                	jne    35b8 <strloc+0x34>
    35b3:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    35b6:	eb 1d                	jmp    35d5 <strloc+0x51>
    35b8:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    35bc:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    35bf:	48 63 d0             	movsxd rdx,eax
    35c2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    35c6:	48 01 d0             	add    rax,rdx
    35c9:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    35cc:	84 c0                	test   al,al
    35ce:	75 ce                	jne    359e <strloc+0x1a>
    35d0:	b8 ff ff ff ff       	mov    eax,0xffffffff
    35d5:	5d                   	pop    rbp
    35d6:	c3                   	ret    

00000000000035d7 <fail>:
    35d7:	f3 0f 1e fa          	endbr64 
    35db:	55                   	push   rbp
    35dc:	48 89 e5             	mov    rbp,rsp
    35df:	48 83 ec 10          	sub    rsp,0x10
    35e3:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    35e7:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    35eb:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    35ef:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    35f3:	48 89 c6             	mov    rsi,rax
    35f6:	48 8d 3d 4f 8c 00 00 	lea    rdi,[rip+0x8c4f]        # c24c <_IO_stdin_used+0x24c>
    35fd:	b8 00 00 00 00       	mov    eax,0x0
    3602:	e8 c9 ee ff ff       	call   24d0 <printf@plt>
    3607:	90                   	nop
    3608:	c9                   	leave  
    3609:	c3                   	ret    

000000000000360a <char_is_printable>:
    360a:	f3 0f 1e fa          	endbr64 
    360e:	55                   	push   rbp
    360f:	48 89 e5             	mov    rbp,rsp
    3612:	89 f8                	mov    eax,edi
    3614:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
    3617:	80 7d fc 1f          	cmp    BYTE PTR [rbp-0x4],0x1f
    361b:	7f 07                	jg     3624 <char_is_printable+0x1a>
    361d:	b8 00 00 00 00       	mov    eax,0x0
    3622:	eb 05                	jmp    3629 <char_is_printable+0x1f>
    3624:	b8 01 00 00 00       	mov    eax,0x1
    3629:	5d                   	pop    rbp
    362a:	c3                   	ret    

000000000000362b <test_string_arr_print>:
    362b:	f3 0f 1e fa          	endbr64 
    362f:	55                   	push   rbp
    3630:	48 89 e5             	mov    rbp,rsp
    3633:	53                   	push   rbx
    3634:	48 83 ec 28          	sub    rsp,0x28
    3638:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    363c:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    3643:	eb 2c                	jmp    3671 <test_string_arr_print+0x46>
    3645:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    3648:	48 63 d0             	movsxd rdx,eax
    364b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    364f:	48 01 d0             	add    rax,rdx
    3652:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3655:	0f be c0             	movsx  eax,al
    3658:	89 c7                	mov    edi,eax
    365a:	e8 ab ff ff ff       	call   360a <char_is_printable>
    365f:	83 f0 01             	xor    eax,0x1
    3662:	84 c0                	test   al,al
    3664:	74 07                	je     366d <test_string_arr_print+0x42>
    3666:	b8 00 00 00 00       	mov    eax,0x0
    366b:	eb 20                	jmp    368d <test_string_arr_print+0x62>
    366d:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    3671:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    3674:	48 63 d8             	movsxd rbx,eax
    3677:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    367b:	48 89 c7             	mov    rdi,rax
    367e:	e8 cd ef ff ff       	call   2650 <strlen@plt>
    3683:	48 39 c3             	cmp    rbx,rax
    3686:	72 bd                	jb     3645 <test_string_arr_print+0x1a>
    3688:	b8 01 00 00 00       	mov    eax,0x1
    368d:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    3691:	c9                   	leave  
    3692:	c3                   	ret    

0000000000003693 <ipv4pktmgr>:
    3693:	f3 0f 1e fa          	endbr64 
    3697:	55                   	push   rbp
    3698:	48 89 e5             	mov    rbp,rsp
    369b:	48 81 ec e0 04 00 00 	sub    rsp,0x4e0
    36a2:	48 89 bd 28 fb ff ff 	mov    QWORD PTR [rbp-0x4d8],rdi
    36a9:	48 89 b5 20 fb ff ff 	mov    QWORD PTR [rbp-0x4e0],rsi
    36b0:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    36b7:	00 00 
    36b9:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    36bd:	31 c0                	xor    eax,eax
    36bf:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    36c6:	48 83 c0 0e          	add    rax,0xe
    36ca:	48 89 85 48 fb ff ff 	mov    QWORD PTR [rbp-0x4b8],rax
    36d1:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    36d8:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    36db:	89 c7                	mov    edi,eax
    36dd:	e8 de ef ff ff       	call   26c0 <ntohl@plt>
    36e2:	89 85 6c fb ff ff    	mov    DWORD PTR [rbp-0x494],eax
    36e8:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    36ef:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    36f2:	89 c7                	mov    edi,eax
    36f4:	e8 c7 ef ff ff       	call   26c0 <ntohl@plt>
    36f9:	89 85 68 fb ff ff    	mov    DWORD PTR [rbp-0x498],eax
    36ff:	8b 95 68 fb ff ff    	mov    edx,DWORD PTR [rbp-0x498]
    3705:	8b 05 bd 68 10 00    	mov    eax,DWORD PTR [rip+0x1068bd]        # 109fc8 <homenetmask>
    370b:	21 d0                	and    eax,edx
    370d:	89 85 3c fb ff ff    	mov    DWORD PTR [rbp-0x4c4],eax
    3713:	8b 95 6c fb ff ff    	mov    edx,DWORD PTR [rbp-0x494]
    3719:	8b 05 a9 68 10 00    	mov    eax,DWORD PTR [rip+0x1068a9]        # 109fc8 <homenetmask>
    371f:	21 d0                	and    eax,edx
    3721:	89 85 40 fb ff ff    	mov    DWORD PTR [rbp-0x4c0],eax
    3727:	8b 05 97 68 10 00    	mov    eax,DWORD PTR [rip+0x106897]        # 109fc4 <homenet>
    372d:	39 85 3c fb ff ff    	cmp    DWORD PTR [rbp-0x4c4],eax
    3733:	75 0c                	jne    3741 <ipv4pktmgr+0xae>
    3735:	c7 85 70 fb ff ff 45 	mov    DWORD PTR [rbp-0x490],0x45
    373c:	00 00 00 
    373f:	eb 24                	jmp    3765 <ipv4pktmgr+0xd2>
    3741:	8b 05 7d 68 10 00    	mov    eax,DWORD PTR [rip+0x10687d]        # 109fc4 <homenet>
    3747:	39 85 40 fb ff ff    	cmp    DWORD PTR [rbp-0x4c0],eax
    374d:	75 0c                	jne    375b <ipv4pktmgr+0xc8>
    374f:	c7 85 70 fb ff ff 46 	mov    DWORD PTR [rbp-0x490],0x46
    3756:	00 00 00 
    3759:	eb 0a                	jmp    3765 <ipv4pktmgr+0xd2>
    375b:	c7 85 70 fb ff ff 47 	mov    DWORD PTR [rbp-0x490],0x47
    3762:	00 00 00 
    3765:	48 8b 85 20 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4e0]
    376c:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    376f:	89 85 80 fb ff ff    	mov    DWORD PTR [rbp-0x480],eax
    3775:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    377c:	48 89 85 a0 fb ff ff 	mov    QWORD PTR [rbp-0x460],rax
    3783:	48 8b 85 20 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4e0]
    378a:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    378d:	48 8b 95 28 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4d8]
    3794:	48 83 c2 0e          	add    rdx,0xe
    3798:	0f b6 12             	movzx  edx,BYTE PTR [rdx]
    379b:	83 e2 0f             	and    edx,0xf
    379e:	0f b6 d2             	movzx  edx,dl
    37a1:	c1 e2 02             	shl    edx,0x2
    37a4:	29 d0                	sub    eax,edx
    37a6:	83 e8 0e             	sub    eax,0xe
    37a9:	89 85 44 fb ff ff    	mov    DWORD PTR [rbp-0x4bc],eax
    37af:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    37b6:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    37b9:	89 c7                	mov    edi,eax
    37bb:	e8 c9 f9 ff ff       	call   3189 <ipv4_ntoa>
    37c0:	48 89 c1             	mov    rcx,rax
    37c3:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    37ca:	ba 10 00 00 00       	mov    edx,0x10
    37cf:	48 89 ce             	mov    rsi,rcx
    37d2:	48 89 c7             	mov    rdi,rax
    37d5:	e8 76 f0 ff ff       	call   2850 <strncpy@plt>
    37da:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    37e1:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    37e4:	89 c7                	mov    edi,eax
    37e6:	e8 9e f9 ff ff       	call   3189 <ipv4_ntoa>
    37eb:	48 89 c1             	mov    rcx,rax
    37ee:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    37f5:	ba 10 00 00 00       	mov    edx,0x10
    37fa:	48 89 ce             	mov    rsi,rcx
    37fd:	48 89 c7             	mov    rdi,rax
    3800:	e8 4b f0 ff ff       	call   2850 <strncpy@plt>
    3805:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    380c:	48 89 c7             	mov    rdi,rax
    380f:	e8 36 42 00 00       	call   7a4a <init_member>
    3814:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    381b:	48 89 c7             	mov    rdi,rax
    381e:	e8 27 42 00 00       	call   7a4a <init_member>
    3823:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    382a:	48 89 c7             	mov    rdi,rax
    382d:	e8 bf 20 00 00       	call   58f1 <is_blocked_ipv4>
    3832:	84 c0                	test   al,al
    3834:	74 44                	je     387a <ipv4pktmgr+0x1e7>
    3836:	b8 00 00 00 00       	mov    eax,0x0
    383b:	e8 a9 fb ff ff       	call   33e9 <get_formated_time>
    3840:	48 89 c6             	mov    rsi,rax
    3843:	48 8d 95 e0 fb ff ff 	lea    rdx,[rbp-0x420]
    384a:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    3851:	48 89 d1             	mov    rcx,rdx
    3854:	48 89 f2             	mov    rdx,rsi
    3857:	48 8d 35 fa 89 00 00 	lea    rsi,[rip+0x89fa]        # c258 <_IO_stdin_used+0x258>
    385e:	48 89 c7             	mov    rdi,rax
    3861:	b8 00 00 00 00       	mov    eax,0x0
    3866:	e8 25 ee ff ff       	call   2690 <sprintf@plt>
    386b:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    3872:	48 89 c7             	mov    rdi,rax
    3875:	e8 83 5c 00 00       	call   94fd <saprintf>
    387a:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    3881:	48 89 c7             	mov    rdi,rax
    3884:	e8 68 20 00 00       	call   58f1 <is_blocked_ipv4>
    3889:	84 c0                	test   al,al
    388b:	74 44                	je     38d1 <ipv4pktmgr+0x23e>
    388d:	b8 00 00 00 00       	mov    eax,0x0
    3892:	e8 52 fb ff ff       	call   33e9 <get_formated_time>
    3897:	48 89 c6             	mov    rsi,rax
    389a:	48 8d 95 d0 fb ff ff 	lea    rdx,[rbp-0x430]
    38a1:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    38a8:	48 89 d1             	mov    rcx,rdx
    38ab:	48 89 f2             	mov    rdx,rsi
    38ae:	48 8d 35 d3 89 00 00 	lea    rsi,[rip+0x89d3]        # c288 <_IO_stdin_used+0x288>
    38b5:	48 89 c7             	mov    rdi,rax
    38b8:	b8 00 00 00 00       	mov    eax,0x0
    38bd:	e8 ce ed ff ff       	call   2690 <sprintf@plt>
    38c2:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    38c9:	48 89 c7             	mov    rdi,rax
    38cc:	e8 2c 5c 00 00       	call   94fd <saprintf>
    38d1:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    38d8:	48 89 85 58 fb ff ff 	mov    QWORD PTR [rbp-0x4a8],rax
    38df:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    38e6:	48 89 85 60 fb ff ff 	mov    QWORD PTR [rbp-0x4a0],rax
    38ed:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    38f4:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    38f8:	66 83 f8 20          	cmp    ax,0x20
    38fc:	74 11                	je     390f <ipv4pktmgr+0x27c>
    38fe:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    3905:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    3909:	66 3d 02 01          	cmp    ax,0x102
    390d:	75 66                	jne    3975 <ipv4pktmgr+0x2e2>
    390f:	48 8d 35 9a 89 00 00 	lea    rsi,[rip+0x899a]        # c2b0 <_IO_stdin_used+0x2b0>
    3916:	48 8d 3d 98 89 00 00 	lea    rdi,[rip+0x8998]        # c2b5 <_IO_stdin_used+0x2b5>
    391d:	b8 00 00 00 00       	mov    eax,0x0
    3922:	e8 a9 eb ff ff       	call   24d0 <printf@plt>
    3927:	0f b6 05 36 66 10 00 	movzx  eax,BYTE PTR [rip+0x106636]        # 109f64 <packet_print>
    392e:	84 c0                	test   al,al
    3930:	74 1a                	je     394c <ipv4pktmgr+0x2b9>
    3932:	48 8d 35 8a 89 00 00 	lea    rsi,[rip+0x898a]        # c2c3 <_IO_stdin_used+0x2c3>
    3939:	48 8d 3d 88 89 00 00 	lea    rdi,[rip+0x8988]        # c2c8 <_IO_stdin_used+0x2c8>
    3940:	b8 00 00 00 00       	mov    eax,0x0
    3945:	e8 86 eb ff ff       	call   24d0 <printf@plt>
    394a:	eb 29                	jmp    3975 <ipv4pktmgr+0x2e2>
    394c:	48 8d 95 e0 fb ff ff 	lea    rdx,[rbp-0x420]
    3953:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    395a:	48 8d 0d 62 89 00 00 	lea    rcx,[rip+0x8962]        # c2c3 <_IO_stdin_used+0x2c3>
    3961:	48 89 c6             	mov    rsi,rax
    3964:	48 8d 3d 60 89 00 00 	lea    rdi,[rip+0x8960]        # c2cb <_IO_stdin_used+0x2cb>
    396b:	b8 00 00 00 00       	mov    eax,0x0
    3970:	e8 5b eb ff ff       	call   24d0 <printf@plt>
    3975:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    397c:	0f b6 40 09          	movzx  eax,BYTE PTR [rax+0x9]
    3980:	0f b6 c0             	movzx  eax,al
    3983:	83 f8 11             	cmp    eax,0x11
    3986:	0f 84 b8 00 00 00    	je     3a44 <ipv4pktmgr+0x3b1>
    398c:	83 f8 11             	cmp    eax,0x11
    398f:	0f 8f db 00 00 00    	jg     3a70 <ipv4pktmgr+0x3dd>
    3995:	83 f8 06             	cmp    eax,0x6
    3998:	74 7e                	je     3a18 <ipv4pktmgr+0x385>
    399a:	83 f8 06             	cmp    eax,0x6
    399d:	0f 8f cd 00 00 00    	jg     3a70 <ipv4pktmgr+0x3dd>
    39a3:	83 f8 01             	cmp    eax,0x1
    39a6:	74 0a                	je     39b2 <ipv4pktmgr+0x31f>
    39a8:	83 f8 02             	cmp    eax,0x2
    39ab:	74 2d                	je     39da <ipv4pktmgr+0x347>
    39ad:	e9 be 00 00 00       	jmp    3a70 <ipv4pktmgr+0x3dd>
    39b2:	c7 85 7c fb ff ff 80 	mov    DWORD PTR [rbp-0x484],0x80
    39b9:	00 00 00 
    39bc:	48 8d 95 50 fb ff ff 	lea    rdx,[rbp-0x4b0]
    39c3:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    39ca:	48 89 d6             	mov    rsi,rdx
    39cd:	48 89 c7             	mov    rdi,rax
    39d0:	e8 40 02 00 00       	call   3c15 <ip4_icmp_decode>
    39d5:	e9 c7 00 00 00       	jmp    3aa1 <ipv4pktmgr+0x40e>
    39da:	c7 85 7c fb ff ff ff 	mov    DWORD PTR [rbp-0x484],0xffffffff
    39e1:	ff ff ff 
    39e4:	8b 05 56 d6 00 00    	mov    eax,DWORD PTR [rip+0xd656]        # 11040 <total_conversations>
    39ea:	83 e8 01             	sub    eax,0x1
    39ed:	89 05 4d d6 00 00    	mov    DWORD PTR [rip+0xd64d],eax        # 11040 <total_conversations>
    39f3:	48 8b 95 60 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4a0]
    39fa:	48 8b 8d 58 fb ff ff 	mov    rcx,QWORD PTR [rbp-0x4a8]
    3a01:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    3a08:	48 89 ce             	mov    rsi,rcx
    3a0b:	48 89 c7             	mov    rdi,rax
    3a0e:	e8 57 14 00 00       	call   4e6a <ip4_igmp_decode>
    3a13:	e9 89 00 00 00       	jmp    3aa1 <ipv4pktmgr+0x40e>
    3a18:	c7 85 7c fb ff ff 7e 	mov    DWORD PTR [rbp-0x484],0x7e
    3a1f:	00 00 00 
    3a22:	48 8b 95 20 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4e0]
    3a29:	48 8d 8d 50 fb ff ff 	lea    rcx,[rbp-0x4b0]
    3a30:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    3a37:	48 89 ce             	mov    rsi,rcx
    3a3a:	48 89 c7             	mov    rdi,rax
    3a3d:	e8 17 0a 00 00       	call   4459 <ip4_tcp_decode>
    3a42:	eb 5d                	jmp    3aa1 <ipv4pktmgr+0x40e>
    3a44:	c7 85 7c fb ff ff 7f 	mov    DWORD PTR [rbp-0x484],0x7f
    3a4b:	00 00 00 
    3a4e:	48 8b 95 20 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4e0]
    3a55:	48 8d 8d 50 fb ff ff 	lea    rcx,[rbp-0x4b0]
    3a5c:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    3a63:	48 89 ce             	mov    rsi,rcx
    3a66:	48 89 c7             	mov    rdi,rax
    3a69:	e8 a7 12 00 00       	call   4d15 <ip4_udp_decode>
    3a6e:	eb 31                	jmp    3aa1 <ipv4pktmgr+0x40e>
    3a70:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    3a77:	0f b6 40 09          	movzx  eax,BYTE PTR [rax+0x9]
    3a7b:	0f b6 c8             	movzx  ecx,al
    3a7e:	48 8b 95 60 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4a0]
    3a85:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    3a8c:	48 89 c6             	mov    rsi,rax
    3a8f:	48 8d 3d 42 88 00 00 	lea    rdi,[rip+0x8842]        # c2d8 <_IO_stdin_used+0x2d8>
    3a96:	b8 00 00 00 00       	mov    eax,0x0
    3a9b:	e8 30 ea ff ff       	call   24d0 <printf@plt>
    3aa0:	90                   	nop
    3aa1:	90                   	nop
    3aa2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3aa6:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    3aad:	00 00 
    3aaf:	74 05                	je     3ab6 <ipv4pktmgr+0x423>
    3ab1:	e8 0a ed ff ff       	call   27c0 <__stack_chk_fail@plt>
    3ab6:	c9                   	leave  
    3ab7:	c3                   	ret    

0000000000003ab8 <ip6_icmp_decode>:
    3ab8:	f3 0f 1e fa          	endbr64 
    3abc:	55                   	push   rbp
    3abd:	48 89 e5             	mov    rbp,rsp
    3ac0:	48 83 c4 80          	add    rsp,0xffffffffffffff80
    3ac4:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    3ac8:	48 89 75 90          	mov    QWORD PTR [rbp-0x70],rsi
    3acc:	48 89 55 88          	mov    QWORD PTR [rbp-0x78],rdx
    3ad0:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3ad7:	00 00 
    3ad9:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3add:	31 c0                	xor    eax,eax
    3adf:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    3ae3:	48 83 c0 36          	add    rax,0x36
    3ae7:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    3aeb:	0f b6 05 72 64 10 00 	movzx  eax,BYTE PTR [rip+0x106472]        # 109f64 <packet_print>
    3af2:	84 c0                	test   al,al
    3af4:	0f 84 04 01 00 00    	je     3bfe <ip6_icmp_decode+0x146>
    3afa:	48 8d 35 ff 87 00 00 	lea    rsi,[rip+0x87ff]        # c300 <_IO_stdin_used+0x300>
    3b01:	48 8d 3d fe 87 00 00 	lea    rdi,[rip+0x87fe]        # c306 <_IO_stdin_used+0x306>
    3b08:	b8 00 00 00 00       	mov    eax,0x0
    3b0d:	e8 be e9 ff ff       	call   24d0 <printf@plt>
    3b12:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
    3b16:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    3b1a:	48 89 c6             	mov    rsi,rax
    3b1d:	48 8d 3d e5 87 00 00 	lea    rdi,[rip+0x87e5]        # c309 <_IO_stdin_used+0x309>
    3b24:	b8 00 00 00 00       	mov    eax,0x0
    3b29:	e8 a2 e9 ff ff       	call   24d0 <printf@plt>
    3b2e:	48 8d 3d e3 87 00 00 	lea    rdi,[rip+0x87e3]        # c318 <_IO_stdin_used+0x318>
    3b35:	b8 00 00 00 00       	mov    eax,0x0
    3b3a:	e8 91 e9 ff ff       	call   24d0 <printf@plt>
    3b3f:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3b43:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3b46:	0f b6 c0             	movzx  eax,al
    3b49:	3d 8f 00 00 00       	cmp    eax,0x8f
    3b4e:	74 68                	je     3bb8 <ip6_icmp_decode+0x100>
    3b50:	3d 8f 00 00 00       	cmp    eax,0x8f
    3b55:	0f 8f 8b 00 00 00    	jg     3be6 <ip6_icmp_decode+0x12e>
    3b5b:	3d 87 00 00 00       	cmp    eax,0x87
    3b60:	74 77                	je     3bd9 <ip6_icmp_decode+0x121>
    3b62:	3d 87 00 00 00       	cmp    eax,0x87
    3b67:	7f 7d                	jg     3be6 <ip6_icmp_decode+0x12e>
    3b69:	3d 82 00 00 00       	cmp    eax,0x82
    3b6e:	74 56                	je     3bc6 <ip6_icmp_decode+0x10e>
    3b70:	3d 85 00 00 00       	cmp    eax,0x85
    3b75:	75 6f                	jne    3be6 <ip6_icmp_decode+0x12e>
    3b77:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3b7b:	48 83 c0 0a          	add    rax,0xa
    3b7f:	48 89 c7             	mov    rdi,rax
    3b82:	e8 19 f4 ff ff       	call   2fa0 <mac_ntoa>
    3b87:	48 89 c1             	mov    rcx,rax
    3b8a:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    3b8e:	ba 40 00 00 00       	mov    edx,0x40
    3b93:	48 89 ce             	mov    rsi,rcx
    3b96:	48 89 c7             	mov    rdi,rax
    3b99:	e8 b2 ec ff ff       	call   2850 <strncpy@plt>
    3b9e:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    3ba2:	48 89 c6             	mov    rsi,rax
    3ba5:	48 8d 3d 75 87 00 00 	lea    rdi,[rip+0x8775]        # c321 <_IO_stdin_used+0x321>
    3bac:	b8 00 00 00 00       	mov    eax,0x0
    3bb1:	e8 1a e9 ff ff       	call   24d0 <printf@plt>
    3bb6:	eb 2e                	jmp    3be6 <ip6_icmp_decode+0x12e>
    3bb8:	48 8d 3d 81 87 00 00 	lea    rdi,[rip+0x8781]        # c340 <_IO_stdin_used+0x340>
    3bbf:	e8 6c e9 ff ff       	call   2530 <puts@plt>
    3bc4:	eb 20                	jmp    3be6 <ip6_icmp_decode+0x12e>
    3bc6:	48 8d 3d 98 87 00 00 	lea    rdi,[rip+0x8798]        # c365 <_IO_stdin_used+0x365>
    3bcd:	b8 00 00 00 00       	mov    eax,0x0
    3bd2:	e8 f9 e8 ff ff       	call   24d0 <printf@plt>
    3bd7:	eb 0d                	jmp    3be6 <ip6_icmp_decode+0x12e>
    3bd9:	48 8d 3d 9f 87 00 00 	lea    rdi,[rip+0x879f]        # c37f <_IO_stdin_used+0x37f>
    3be0:	e8 4b e9 ff ff       	call   2530 <puts@plt>
    3be5:	90                   	nop
    3be6:	48 8d 35 a8 87 00 00 	lea    rsi,[rip+0x87a8]        # c395 <_IO_stdin_used+0x395>
    3bed:	48 8d 3d 12 87 00 00 	lea    rdi,[rip+0x8712]        # c306 <_IO_stdin_used+0x306>
    3bf4:	b8 00 00 00 00       	mov    eax,0x0
    3bf9:	e8 d2 e8 ff ff       	call   24d0 <printf@plt>
    3bfe:	90                   	nop
    3bff:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3c03:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    3c0a:	00 00 
    3c0c:	74 05                	je     3c13 <ip6_icmp_decode+0x15b>
    3c0e:	e8 ad eb ff ff       	call   27c0 <__stack_chk_fail@plt>
    3c13:	c9                   	leave  
    3c14:	c3                   	ret    

0000000000003c15 <ip4_icmp_decode>:
    3c15:	f3 0f 1e fa          	endbr64 
    3c19:	55                   	push   rbp
    3c1a:	48 89 e5             	mov    rbp,rsp
    3c1d:	48 81 ec 20 01 00 00 	sub    rsp,0x120
    3c24:	48 89 bd e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rdi
    3c2b:	48 89 b5 e0 fe ff ff 	mov    QWORD PTR [rbp-0x120],rsi
    3c32:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3c39:	00 00 
    3c3b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3c3f:	31 c0                	xor    eax,eax
    3c41:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c48:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3c4c:	ba 5e 00 00 00       	mov    edx,0x5e
    3c51:	be 01 00 00 00       	mov    esi,0x1
    3c56:	48 89 c7             	mov    rdi,rax
    3c59:	e8 0b 13 00 00       	call   4f69 <add_ip_addr_or_inc_counter>
    3c5e:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c65:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    3c69:	ba 5e 00 00 00       	mov    edx,0x5e
    3c6e:	be 00 00 00 00       	mov    esi,0x0
    3c73:	48 89 c7             	mov    rdi,rax
    3c76:	e8 ee 12 00 00       	call   4f69 <add_ip_addr_or_inc_counter>
    3c7b:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c82:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3c86:	48 89 85 08 ff ff ff 	mov    QWORD PTR [rbp-0xf8],rax
    3c8d:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c94:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    3c98:	48 89 85 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],rax
    3c9f:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    3ca6:	48 83 c0 22          	add    rax,0x22
    3caa:	48 89 85 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rax
    3cb1:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    3cb8:	48 8d 50 22          	lea    rdx,[rax+0x22]
    3cbc:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3cc3:	48 89 10             	mov    QWORD PTR [rax],rdx
    3cc6:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3ccd:	48 8b 95 18 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xe8]
    3cd4:	48 89 50 60          	mov    QWORD PTR [rax+0x60],rdx
    3cd8:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3cdf:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    3ce2:	89 85 fc fe ff ff    	mov    DWORD PTR [rbp-0x104],eax
    3ce8:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3cef:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    3cf2:	8d 50 d6             	lea    edx,[rax-0x2a]
    3cf5:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3cfc:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    3cff:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    3d06:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3d09:	3c 08                	cmp    al,0x8
    3d0b:	0f 85 55 01 00 00    	jne    3e66 <ip4_icmp_decode+0x251>
    3d11:	8b 05 71 d3 00 00    	mov    eax,DWORD PTR [rip+0xd371]        # 11088 <strict_nmap_host_alive_check>
    3d17:	83 f8 01             	cmp    eax,0x1
    3d1a:	0f 85 46 01 00 00    	jne    3e66 <ip4_icmp_decode+0x251>
    3d20:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3d27:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3d2b:	48 89 c7             	mov    rdi,rax
    3d2e:	e8 a5 3c 00 00       	call   79d8 <member_exists>
    3d33:	89 85 00 ff ff ff    	mov    DWORD PTR [rbp-0x100],eax
    3d39:	83 bd 00 ff ff ff ff 	cmp    DWORD PTR [rbp-0x100],0xffffffff
    3d40:	0f 84 83 00 00 00    	je     3dc9 <ip4_icmp_decode+0x1b4>
    3d46:	8b 85 00 ff ff ff    	mov    eax,DWORD PTR [rbp-0x100]
    3d4c:	48 63 d0             	movsxd rdx,eax
    3d4f:	48 89 d0             	mov    rax,rdx
    3d52:	48 c1 e0 02          	shl    rax,0x2
    3d56:	48 01 d0             	add    rax,rdx
    3d59:	48 c1 e0 03          	shl    rax,0x3
    3d5d:	48 01 d0             	add    rax,rdx
    3d60:	48 c1 e0 04          	shl    rax,0x4
    3d64:	48 8d 15 b5 f7 0e 00 	lea    rdx,[rip+0xef7b5]        # f3520 <watchlist>
    3d6b:	48 01 d0             	add    rax,rdx
    3d6e:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
    3d75:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d7c:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3d7f:	85 c0                	test   eax,eax
    3d81:	0f 85 a8 02 00 00    	jne    402f <ip4_icmp_decode+0x41a>
    3d87:	bf 00 00 00 00       	mov    edi,0x0
    3d8c:	e8 7f eb ff ff       	call   2910 <time@plt>
    3d91:	48 89 c2             	mov    rdx,rax
    3d94:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d9b:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    3d9f:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3da6:	c7 40 30 01 00 00 00 	mov    DWORD PTR [rax+0x30],0x1
    3dad:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3db4:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3db7:	8d 50 01             	lea    edx,[rax+0x1]
    3dba:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3dc1:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    3dc4:	e9 66 02 00 00       	jmp    402f <ip4_icmp_decode+0x41a>
    3dc9:	8b 05 49 d2 00 00    	mov    eax,DWORD PTR [rip+0xd249]        # 11018 <watchlist_num>
    3dcf:	83 c0 01             	add    eax,0x1
    3dd2:	89 05 40 d2 00 00    	mov    DWORD PTR [rip+0xd240],eax        # 11018 <watchlist_num>
    3dd8:	8b 05 3a d2 00 00    	mov    eax,DWORD PTR [rip+0xd23a]        # 11018 <watchlist_num>
    3dde:	48 63 d0             	movsxd rdx,eax
    3de1:	48 89 d0             	mov    rax,rdx
    3de4:	48 c1 e0 02          	shl    rax,0x2
    3de8:	48 01 d0             	add    rax,rdx
    3deb:	48 c1 e0 03          	shl    rax,0x3
    3def:	48 01 d0             	add    rax,rdx
    3df2:	48 c1 e0 04          	shl    rax,0x4
    3df6:	48 8d 15 23 f7 0e 00 	lea    rdx,[rip+0xef723]        # f3520 <watchlist>
    3dfd:	48 01 d0             	add    rax,rdx
    3e00:	48 89 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rax
    3e07:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3e0e:	48 8d 50 08          	lea    rdx,[rax+0x8]
    3e12:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3e19:	48 89 c6             	mov    rsi,rax
    3e1c:	48 89 d7             	mov    rdi,rdx
    3e1f:	e8 dc e9 ff ff       	call   2800 <strcpy@plt>
    3e24:	bf 00 00 00 00       	mov    edi,0x0
    3e29:	e8 e2 ea ff ff       	call   2910 <time@plt>
    3e2e:	48 89 c2             	mov    rdx,rax
    3e31:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3e38:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    3e3c:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3e43:	c7 40 30 01 00 00 00 	mov    DWORD PTR [rax+0x30],0x1
    3e4a:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3e51:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3e54:	8d 50 01             	lea    edx,[rax+0x1]
    3e57:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3e5e:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    3e61:	e9 c9 01 00 00       	jmp    402f <ip4_icmp_decode+0x41a>
    3e66:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    3e6d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3e70:	3c 0d                	cmp    al,0xd
    3e72:	0f 85 ba 01 00 00    	jne    4032 <ip4_icmp_decode+0x41d>
    3e78:	8b 05 06 d2 00 00    	mov    eax,DWORD PTR [rip+0xd206]        # 11084 <strict_icmp_timestamp_req>
    3e7e:	83 f8 01             	cmp    eax,0x1
    3e81:	74 0f                	je     3e92 <ip4_icmp_decode+0x27d>
    3e83:	8b 05 ff d1 00 00    	mov    eax,DWORD PTR [rip+0xd1ff]        # 11088 <strict_nmap_host_alive_check>
    3e89:	83 f8 01             	cmp    eax,0x1
    3e8c:	0f 85 a0 01 00 00    	jne    4032 <ip4_icmp_decode+0x41d>
    3e92:	8b 05 ec d1 00 00    	mov    eax,DWORD PTR [rip+0xd1ec]        # 11084 <strict_icmp_timestamp_req>
    3e98:	85 c0                	test   eax,eax
    3e9a:	74 22                	je     3ebe <ip4_icmp_decode+0x2a9>
    3e9c:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    3ea3:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3eaa:	48 89 c6             	mov    rsi,rax
    3ead:	48 8d 3d ec 84 00 00 	lea    rdi,[rip+0x84ec]        # c3a0 <_IO_stdin_used+0x3a0>
    3eb4:	b8 00 00 00 00       	mov    eax,0x0
    3eb9:	e8 12 e6 ff ff       	call   24d0 <printf@plt>
    3ebe:	8b 05 c4 d1 00 00    	mov    eax,DWORD PTR [rip+0xd1c4]        # 11088 <strict_nmap_host_alive_check>
    3ec4:	85 c0                	test   eax,eax
    3ec6:	0f 84 66 01 00 00    	je     4032 <ip4_icmp_decode+0x41d>
    3ecc:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3ed3:	48 89 c7             	mov    rdi,rax
    3ed6:	e8 fd 3a 00 00       	call   79d8 <member_exists>
    3edb:	89 85 04 ff ff ff    	mov    DWORD PTR [rbp-0xfc],eax
    3ee1:	83 bd 04 ff ff ff ff 	cmp    DWORD PTR [rbp-0xfc],0xffffffff
    3ee8:	0f 84 44 01 00 00    	je     4032 <ip4_icmp_decode+0x41d>
    3eee:	8b 85 04 ff ff ff    	mov    eax,DWORD PTR [rbp-0xfc]
    3ef4:	48 63 d0             	movsxd rdx,eax
    3ef7:	48 89 d0             	mov    rax,rdx
    3efa:	48 c1 e0 02          	shl    rax,0x2
    3efe:	48 01 d0             	add    rax,rdx
    3f01:	48 c1 e0 03          	shl    rax,0x3
    3f05:	48 01 d0             	add    rax,rdx
    3f08:	48 c1 e0 04          	shl    rax,0x4
    3f0c:	48 8d 15 0d f6 0e 00 	lea    rdx,[rip+0xef60d]        # f3520 <watchlist>
    3f13:	48 01 d0             	add    rax,rdx
    3f16:	48 89 85 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rax
    3f1d:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3f24:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3f27:	83 f8 03             	cmp    eax,0x3
    3f2a:	0f 85 05 01 00 00    	jne    4035 <ip4_icmp_decode+0x420>
    3f30:	bf 00 00 00 00       	mov    edi,0x0
    3f35:	e8 d6 e9 ff ff       	call   2910 <time@plt>
    3f3a:	48 89 c2             	mov    rdx,rax
    3f3d:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3f44:	48 89 50 48          	mov    QWORD PTR [rax+0x48],rdx
    3f48:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3f4f:	48 8b 50 48          	mov    rdx,QWORD PTR [rax+0x48]
    3f53:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3f5a:	48 8b 48 28          	mov    rcx,QWORD PTR [rax+0x28]
    3f5e:	48 89 d0             	mov    rax,rdx
    3f61:	48 29 c8             	sub    rax,rcx
    3f64:	48 3d e2 b4 04 00    	cmp    rax,0x4b4e2
    3f6a:	0f 87 c2 00 00 00    	ja     4032 <ip4_icmp_decode+0x41d>
    3f70:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    3f77:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3f7e:	48 89 c6             	mov    rsi,rax
    3f81:	48 8d 3d 60 84 00 00 	lea    rdi,[rip+0x8460]        # c3e8 <_IO_stdin_used+0x3e8>
    3f88:	b8 00 00 00 00       	mov    eax,0x0
    3f8d:	e8 3e e5 ff ff       	call   24d0 <printf@plt>
    3f92:	48 8b 05 97 d0 00 00 	mov    rax,QWORD PTR [rip+0xd097]        # 11030 <def_log_file>
    3f99:	48 8d 35 b2 84 00 00 	lea    rsi,[rip+0x84b2]        # c452 <_IO_stdin_used+0x452>
    3fa0:	48 89 c7             	mov    rdi,rax
    3fa3:	e8 18 e6 ff ff       	call   25c0 <fopen@plt>
    3fa8:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    3faf:	b8 00 00 00 00       	mov    eax,0x0
    3fb4:	e8 30 f4 ff ff       	call   33e9 <get_formated_time>
    3fb9:	48 89 c6             	mov    rsi,rax
    3fbc:	48 8b 8d 10 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xf0]
    3fc3:	48 8b 95 08 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf8]
    3fca:	48 8d 85 40 ff ff ff 	lea    rax,[rbp-0xc0]
    3fd1:	49 89 f0             	mov    r8,rsi
    3fd4:	48 8d 35 7d 84 00 00 	lea    rsi,[rip+0x847d]        # c458 <_IO_stdin_used+0x458>
    3fdb:	48 89 c7             	mov    rdi,rax
    3fde:	b8 00 00 00 00       	mov    eax,0x0
    3fe3:	e8 a8 e6 ff ff       	call   2690 <sprintf@plt>
    3fe8:	48 8b 95 38 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xc8]
    3fef:	48 8d 85 40 ff ff ff 	lea    rax,[rbp-0xc0]
    3ff6:	48 89 d6             	mov    rsi,rdx
    3ff9:	48 89 c7             	mov    rdi,rax
    3ffc:	e8 0f e7 ff ff       	call   2710 <fputs@plt>
    4001:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
    4008:	48 89 c7             	mov    rdi,rax
    400b:	e8 30 e8 ff ff       	call   2840 <fclose@plt>
    4010:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    4017:	48 83 c0 28          	add    rax,0x28
    401b:	ba 28 00 00 00       	mov    edx,0x28
    4020:	be 00 00 00 00       	mov    esi,0x0
    4025:	48 89 c7             	mov    rdi,rax
    4028:	e8 b3 e4 ff ff       	call   24e0 <memset@plt>
    402d:	eb 07                	jmp    4036 <ip4_icmp_decode+0x421>
    402f:	90                   	nop
    4030:	eb 04                	jmp    4036 <ip4_icmp_decode+0x421>
    4032:	90                   	nop
    4033:	eb 01                	jmp    4036 <ip4_icmp_decode+0x421>
    4035:	90                   	nop
    4036:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    403d:	c7 40 2c 80 00 00 00 	mov    DWORD PTR [rax+0x2c],0x80
    4044:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    404b:	48 89 c7             	mov    rdi,rax
    404e:	e8 50 24 00 00       	call   64a3 <rulemgr>
    4053:	0f b6 05 0a 5f 10 00 	movzx  eax,BYTE PTR [rip+0x105f0a]        # 109f64 <packet_print>
    405a:	84 c0                	test   al,al
    405c:	0f 84 e0 03 00 00    	je     4442 <ip4_icmp_decode+0x82d>
    4062:	48 8d 35 97 82 00 00 	lea    rsi,[rip+0x8297]        # c300 <_IO_stdin_used+0x300>
    4069:	48 8d 3d 96 82 00 00 	lea    rdi,[rip+0x8296]        # c306 <_IO_stdin_used+0x306>
    4070:	b8 00 00 00 00       	mov    eax,0x0
    4075:	e8 56 e4 ff ff       	call   24d0 <printf@plt>
    407a:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    4081:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    4088:	48 89 c6             	mov    rsi,rax
    408b:	48 8d 3d 36 84 00 00 	lea    rdi,[rip+0x8436]        # c4c8 <_IO_stdin_used+0x4c8>
    4092:	b8 00 00 00 00       	mov    eax,0x0
    4097:	e8 34 e4 ff ff       	call   24d0 <printf@plt>
    409c:	48 8d 3d 34 84 00 00 	lea    rdi,[rip+0x8434]        # c4d7 <_IO_stdin_used+0x4d7>
    40a3:	b8 00 00 00 00       	mov    eax,0x0
    40a8:	e8 23 e4 ff ff       	call   24d0 <printf@plt>
    40ad:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    40b4:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    40b7:	0f b6 c0             	movzx  eax,al
    40ba:	83 f8 0e             	cmp    eax,0xe
    40bd:	0f 87 46 03 00 00    	ja     4409 <ip4_icmp_decode+0x7f4>
    40c3:	89 c0                	mov    eax,eax
    40c5:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    40cc:	00 
    40cd:	48 8d 05 0c 88 00 00 	lea    rax,[rip+0x880c]        # c8e0 <_IO_stdin_used+0x8e0>
    40d4:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    40d7:	48 98                	cdqe   
    40d9:	48 8d 15 00 88 00 00 	lea    rdx,[rip+0x8800]        # c8e0 <_IO_stdin_used+0x8e0>
    40e0:	48 01 d0             	add    rax,rdx
    40e3:	3e ff e0             	notrack jmp rax
    40e6:	48 8d 3d f1 83 00 00 	lea    rdi,[rip+0x83f1]        # c4de <_IO_stdin_used+0x4de>
    40ed:	e8 3e e4 ff ff       	call   2530 <puts@plt>
    40f2:	e9 33 03 00 00       	jmp    442a <ip4_icmp_decode+0x815>
    40f7:	48 8d 3d ec 83 00 00 	lea    rdi,[rip+0x83ec]        # c4ea <_IO_stdin_used+0x4ea>
    40fe:	b8 00 00 00 00       	mov    eax,0x0
    4103:	e8 c8 e3 ff ff       	call   24d0 <printf@plt>
    4108:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    410f:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4113:	0f b6 c0             	movzx  eax,al
    4116:	83 f8 0f             	cmp    eax,0xf
    4119:	0f 87 1e 01 00 00    	ja     423d <ip4_icmp_decode+0x628>
    411f:	89 c0                	mov    eax,eax
    4121:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    4128:	00 
    4129:	48 8d 05 ec 87 00 00 	lea    rax,[rip+0x87ec]        # c91c <_IO_stdin_used+0x91c>
    4130:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    4133:	48 98                	cdqe   
    4135:	48 8d 15 e0 87 00 00 	lea    rdx,[rip+0x87e0]        # c91c <_IO_stdin_used+0x91c>
    413c:	48 01 d0             	add    rax,rdx
    413f:	3e ff e0             	notrack jmp rax
    4142:	48 8d 3d bb 83 00 00 	lea    rdi,[rip+0x83bb]        # c504 <_IO_stdin_used+0x504>
    4149:	e8 e2 e3 ff ff       	call   2530 <puts@plt>
    414e:	e9 0c 01 00 00       	jmp    425f <ip4_icmp_decode+0x64a>
    4153:	48 8d 3d c1 83 00 00 	lea    rdi,[rip+0x83c1]        # c51b <_IO_stdin_used+0x51b>
    415a:	e8 d1 e3 ff ff       	call   2530 <puts@plt>
    415f:	e9 fb 00 00 00       	jmp    425f <ip4_icmp_decode+0x64a>
    4164:	48 8d 3d c4 83 00 00 	lea    rdi,[rip+0x83c4]        # c52f <_IO_stdin_used+0x52f>
    416b:	e8 c0 e3 ff ff       	call   2530 <puts@plt>
    4170:	e9 ea 00 00 00       	jmp    425f <ip4_icmp_decode+0x64a>
    4175:	48 8d 3d cb 83 00 00 	lea    rdi,[rip+0x83cb]        # c547 <_IO_stdin_used+0x547>
    417c:	e8 af e3 ff ff       	call   2530 <puts@plt>
    4181:	e9 d9 00 00 00       	jmp    425f <ip4_icmp_decode+0x64a>
    4186:	48 8d 3d ce 83 00 00 	lea    rdi,[rip+0x83ce]        # c55b <_IO_stdin_used+0x55b>
    418d:	e8 9e e3 ff ff       	call   2530 <puts@plt>
    4192:	e9 c8 00 00 00       	jmp    425f <ip4_icmp_decode+0x64a>
    4197:	48 8d 3d d5 83 00 00 	lea    rdi,[rip+0x83d5]        # c573 <_IO_stdin_used+0x573>
    419e:	e8 8d e3 ff ff       	call   2530 <puts@plt>
    41a3:	e9 b7 00 00 00       	jmp    425f <ip4_icmp_decode+0x64a>
    41a8:	48 8d 3d e1 83 00 00 	lea    rdi,[rip+0x83e1]        # c590 <_IO_stdin_used+0x590>
    41af:	e8 7c e3 ff ff       	call   2530 <puts@plt>
    41b4:	e9 a6 00 00 00       	jmp    425f <ip4_icmp_decode+0x64a>
    41b9:	48 8d 3d f8 83 00 00 	lea    rdi,[rip+0x83f8]        # c5b8 <_IO_stdin_used+0x5b8>
    41c0:	e8 6b e3 ff ff       	call   2530 <puts@plt>
    41c5:	e9 95 00 00 00       	jmp    425f <ip4_icmp_decode+0x64a>
    41ca:	48 8d 3d 07 84 00 00 	lea    rdi,[rip+0x8407]        # c5d8 <_IO_stdin_used+0x5d8>
    41d1:	e8 5a e3 ff ff       	call   2530 <puts@plt>
    41d6:	e9 84 00 00 00       	jmp    425f <ip4_icmp_decode+0x64a>
    41db:	48 8d 3d 0e 84 00 00 	lea    rdi,[rip+0x840e]        # c5f0 <_IO_stdin_used+0x5f0>
    41e2:	e8 49 e3 ff ff       	call   2530 <puts@plt>
    41e7:	eb 76                	jmp    425f <ip4_icmp_decode+0x64a>
    41e9:	48 8d 3d 28 84 00 00 	lea    rdi,[rip+0x8428]        # c618 <_IO_stdin_used+0x618>
    41f0:	e8 3b e3 ff ff       	call   2530 <puts@plt>
    41f5:	eb 68                	jmp    425f <ip4_icmp_decode+0x64a>
    41f7:	48 8d 3d 42 84 00 00 	lea    rdi,[rip+0x8442]        # c640 <_IO_stdin_used+0x640>
    41fe:	e8 2d e3 ff ff       	call   2530 <puts@plt>
    4203:	eb 5a                	jmp    425f <ip4_icmp_decode+0x64a>
    4205:	48 8d 3d 53 84 00 00 	lea    rdi,[rip+0x8453]        # c65f <_IO_stdin_used+0x65f>
    420c:	e8 1f e3 ff ff       	call   2530 <puts@plt>
    4211:	eb 4c                	jmp    425f <ip4_icmp_decode+0x64a>
    4213:	48 8d 3d 66 84 00 00 	lea    rdi,[rip+0x8466]        # c680 <_IO_stdin_used+0x680>
    421a:	e8 11 e3 ff ff       	call   2530 <puts@plt>
    421f:	eb 3e                	jmp    425f <ip4_icmp_decode+0x64a>
    4221:	48 8d 3d 85 84 00 00 	lea    rdi,[rip+0x8485]        # c6ad <_IO_stdin_used+0x6ad>
    4228:	e8 03 e3 ff ff       	call   2530 <puts@plt>
    422d:	eb 30                	jmp    425f <ip4_icmp_decode+0x64a>
    422f:	48 8d 3d 9a 84 00 00 	lea    rdi,[rip+0x849a]        # c6d0 <_IO_stdin_used+0x6d0>
    4236:	e8 f5 e2 ff ff       	call   2530 <puts@plt>
    423b:	eb 22                	jmp    425f <ip4_icmp_decode+0x64a>
    423d:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4244:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4248:	0f b6 c0             	movzx  eax,al
    424b:	89 c6                	mov    esi,eax
    424d:	48 8d 3d 9b 84 00 00 	lea    rdi,[rip+0x849b]        # c6ef <_IO_stdin_used+0x6ef>
    4254:	b8 00 00 00 00       	mov    eax,0x0
    4259:	e8 72 e2 ff ff       	call   24d0 <printf@plt>
    425e:	90                   	nop
    425f:	e9 c6 01 00 00       	jmp    442a <ip4_icmp_decode+0x815>
    4264:	48 8d 3d 9d 84 00 00 	lea    rdi,[rip+0x849d]        # c708 <_IO_stdin_used+0x708>
    426b:	e8 c0 e2 ff ff       	call   2530 <puts@plt>
    4270:	e9 b5 01 00 00       	jmp    442a <ip4_icmp_decode+0x815>
    4275:	48 8d 3d ab 84 00 00 	lea    rdi,[rip+0x84ab]        # c727 <_IO_stdin_used+0x727>
    427c:	b8 00 00 00 00       	mov    eax,0x0
    4281:	e8 4a e2 ff ff       	call   24d0 <printf@plt>
    4286:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    428d:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4291:	0f b6 c0             	movzx  eax,al
    4294:	83 f8 03             	cmp    eax,0x3
    4297:	74 44                	je     42dd <ip4_icmp_decode+0x6c8>
    4299:	83 f8 03             	cmp    eax,0x3
    429c:	7f 4d                	jg     42eb <ip4_icmp_decode+0x6d6>
    429e:	83 f8 02             	cmp    eax,0x2
    42a1:	74 2c                	je     42cf <ip4_icmp_decode+0x6ba>
    42a3:	83 f8 02             	cmp    eax,0x2
    42a6:	7f 43                	jg     42eb <ip4_icmp_decode+0x6d6>
    42a8:	85 c0                	test   eax,eax
    42aa:	74 07                	je     42b3 <ip4_icmp_decode+0x69e>
    42ac:	83 f8 01             	cmp    eax,0x1
    42af:	74 10                	je     42c1 <ip4_icmp_decode+0x6ac>
    42b1:	eb 38                	jmp    42eb <ip4_icmp_decode+0x6d6>
    42b3:	48 8d 3d 79 84 00 00 	lea    rdi,[rip+0x8479]        # c733 <_IO_stdin_used+0x733>
    42ba:	e8 71 e2 ff ff       	call   2530 <puts@plt>
    42bf:	eb 4c                	jmp    430d <ip4_icmp_decode+0x6f8>
    42c1:	48 8d 3d 83 84 00 00 	lea    rdi,[rip+0x8483]        # c74b <_IO_stdin_used+0x74b>
    42c8:	e8 63 e2 ff ff       	call   2530 <puts@plt>
    42cd:	eb 3e                	jmp    430d <ip4_icmp_decode+0x6f8>
    42cf:	48 8d 3d 8a 84 00 00 	lea    rdi,[rip+0x848a]        # c760 <_IO_stdin_used+0x760>
    42d6:	e8 55 e2 ff ff       	call   2530 <puts@plt>
    42db:	eb 30                	jmp    430d <ip4_icmp_decode+0x6f8>
    42dd:	48 8d 3d 9c 84 00 00 	lea    rdi,[rip+0x849c]        # c780 <_IO_stdin_used+0x780>
    42e4:	e8 47 e2 ff ff       	call   2530 <puts@plt>
    42e9:	eb 22                	jmp    430d <ip4_icmp_decode+0x6f8>
    42eb:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    42f2:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    42f6:	0f b6 c0             	movzx  eax,al
    42f9:	89 c6                	mov    esi,eax
    42fb:	48 8d 3d ed 83 00 00 	lea    rdi,[rip+0x83ed]        # c6ef <_IO_stdin_used+0x6ef>
    4302:	b8 00 00 00 00       	mov    eax,0x0
    4307:	e8 c4 e1 ff ff       	call   24d0 <printf@plt>
    430c:	90                   	nop
    430d:	e9 18 01 00 00       	jmp    442a <ip4_icmp_decode+0x815>
    4312:	48 8d 3d 84 84 00 00 	lea    rdi,[rip+0x8484]        # c79d <_IO_stdin_used+0x79d>
    4319:	e8 12 e2 ff ff       	call   2530 <puts@plt>
    431e:	e9 07 01 00 00       	jmp    442a <ip4_icmp_decode+0x815>
    4323:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    432a:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    432e:	84 c0                	test   al,al
    4330:	75 16                	jne    4348 <ip4_icmp_decode+0x733>
    4332:	48 8d 3d 77 84 00 00 	lea    rdi,[rip+0x8477]        # c7b0 <_IO_stdin_used+0x7b0>
    4339:	b8 00 00 00 00       	mov    eax,0x0
    433e:	e8 8d e1 ff ff       	call   24d0 <printf@plt>
    4343:	e9 e2 00 00 00       	jmp    442a <ip4_icmp_decode+0x815>
    4348:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    434f:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4353:	0f b6 c0             	movzx  eax,al
    4356:	89 c6                	mov    esi,eax
    4358:	48 8d 3d 91 84 00 00 	lea    rdi,[rip+0x8491]        # c7f0 <_IO_stdin_used+0x7f0>
    435f:	b8 00 00 00 00       	mov    eax,0x0
    4364:	e8 67 e1 ff ff       	call   24d0 <printf@plt>
    4369:	e9 bc 00 00 00       	jmp    442a <ip4_icmp_decode+0x815>
    436e:	48 8d 3d a8 84 00 00 	lea    rdi,[rip+0x84a8]        # c81d <_IO_stdin_used+0x81d>
    4375:	e8 b6 e1 ff ff       	call   2530 <puts@plt>
    437a:	e9 ab 00 00 00       	jmp    442a <ip4_icmp_decode+0x815>
    437f:	48 8d 3d ae 84 00 00 	lea    rdi,[rip+0x84ae]        # c834 <_IO_stdin_used+0x834>
    4386:	b8 00 00 00 00       	mov    eax,0x0
    438b:	e8 40 e1 ff ff       	call   24d0 <printf@plt>
    4390:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4397:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    439b:	84 c0                	test   al,al
    439d:	75 0e                	jne    43ad <ip4_icmp_decode+0x798>
    439f:	48 8d 3d a5 84 00 00 	lea    rdi,[rip+0x84a5]        # c84b <_IO_stdin_used+0x84b>
    43a6:	e8 85 e1 ff ff       	call   2530 <puts@plt>
    43ab:	eb 7d                	jmp    442a <ip4_icmp_decode+0x815>
    43ad:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    43b4:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    43b8:	3c 01                	cmp    al,0x1
    43ba:	75 0e                	jne    43ca <ip4_icmp_decode+0x7b5>
    43bc:	48 8d 3d a5 84 00 00 	lea    rdi,[rip+0x84a5]        # c868 <_IO_stdin_used+0x868>
    43c3:	e8 68 e1 ff ff       	call   2530 <puts@plt>
    43c8:	eb 60                	jmp    442a <ip4_icmp_decode+0x815>
    43ca:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    43d1:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    43d5:	0f b6 c0             	movzx  eax,al
    43d8:	89 c6                	mov    esi,eax
    43da:	48 8d 3d ae 84 00 00 	lea    rdi,[rip+0x84ae]        # c88f <_IO_stdin_used+0x88f>
    43e1:	b8 00 00 00 00       	mov    eax,0x0
    43e6:	e8 e5 e0 ff ff       	call   24d0 <printf@plt>
    43eb:	eb 3d                	jmp    442a <ip4_icmp_decode+0x815>
    43ed:	48 8d 3d b1 84 00 00 	lea    rdi,[rip+0x84b1]        # c8a5 <_IO_stdin_used+0x8a5>
    43f4:	e8 37 e1 ff ff       	call   2530 <puts@plt>
    43f9:	eb 2f                	jmp    442a <ip4_icmp_decode+0x815>
    43fb:	48 8d 3d b6 84 00 00 	lea    rdi,[rip+0x84b6]        # c8b8 <_IO_stdin_used+0x8b8>
    4402:	e8 29 e1 ff ff       	call   2530 <puts@plt>
    4407:	eb 21                	jmp    442a <ip4_icmp_decode+0x815>
    4409:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4410:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4413:	0f b6 c0             	movzx  eax,al
    4416:	89 c6                	mov    esi,eax
    4418:	48 8d 3d aa 84 00 00 	lea    rdi,[rip+0x84aa]        # c8c9 <_IO_stdin_used+0x8c9>
    441f:	b8 00 00 00 00       	mov    eax,0x0
    4424:	e8 a7 e0 ff ff       	call   24d0 <printf@plt>
    4429:	90                   	nop
    442a:	48 8d 35 64 7f 00 00 	lea    rsi,[rip+0x7f64]        # c395 <_IO_stdin_used+0x395>
    4431:	48 8d 3d ce 7e 00 00 	lea    rdi,[rip+0x7ece]        # c306 <_IO_stdin_used+0x306>
    4438:	b8 00 00 00 00       	mov    eax,0x0
    443d:	e8 8e e0 ff ff       	call   24d0 <printf@plt>
    4442:	90                   	nop
    4443:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4447:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    444e:	00 00 
    4450:	74 05                	je     4457 <ip4_icmp_decode+0x842>
    4452:	e8 69 e3 ff ff       	call   27c0 <__stack_chk_fail@plt>
    4457:	c9                   	leave  
    4458:	c3                   	ret    

0000000000004459 <ip4_tcp_decode>:
    4459:	f3 0f 1e fa          	endbr64 
    445d:	55                   	push   rbp
    445e:	48 89 e5             	mov    rbp,rsp
    4461:	53                   	push   rbx
    4462:	48 81 ec 88 00 00 00 	sub    rsp,0x88
    4469:	48 89 7d 88          	mov    QWORD PTR [rbp-0x78],rdi
    446d:	48 89 75 80          	mov    QWORD PTR [rbp-0x80],rsi
    4471:	48 89 95 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdx
    4478:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    447c:	48 83 c0 22          	add    rax,0x22
    4480:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    4484:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4488:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    448c:	c0 e8 04             	shr    al,0x4
    448f:	0f b6 c0             	movzx  eax,al
    4492:	c1 e0 02             	shl    eax,0x2
    4495:	48 98                	cdqe   
    4497:	48 8d 50 22          	lea    rdx,[rax+0x22]
    449b:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    449f:	48 01 c2             	add    rdx,rax
    44a2:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    44a6:	48 89 10             	mov    QWORD PTR [rax],rdx
    44a9:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    44ad:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    44b0:	89 c2                	mov    edx,eax
    44b2:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    44b6:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    44ba:	c0 e8 04             	shr    al,0x4
    44bd:	0f b6 c0             	movzx  eax,al
    44c0:	c1 e0 02             	shl    eax,0x2
    44c3:	89 c1                	mov    ecx,eax
    44c5:	89 d0                	mov    eax,edx
    44c7:	29 c8                	sub    eax,ecx
    44c9:	83 e8 22             	sub    eax,0x22
    44cc:	89 c2                	mov    edx,eax
    44ce:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    44d2:	89 50 30             	mov    DWORD PTR [rax+0x30],edx
    44d5:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    44d9:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    44dd:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    44e1:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    44e5:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    44e9:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    44ed:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    44f1:	ba 5c 00 00 00       	mov    edx,0x5c
    44f6:	be 01 00 00 00       	mov    esi,0x1
    44fb:	48 89 c7             	mov    rdi,rax
    44fe:	e8 66 0a 00 00       	call   4f69 <add_ip_addr_or_inc_counter>
    4503:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4507:	ba 5c 00 00 00       	mov    edx,0x5c
    450c:	be 00 00 00 00       	mov    esi,0x0
    4511:	48 89 c7             	mov    rdi,rax
    4514:	e8 50 0a 00 00       	call   4f69 <add_ip_addr_or_inc_counter>
    4519:	c7 45 a4 00 00 00 00 	mov    DWORD PTR [rbp-0x5c],0x0
    4520:	c6 45 9f 00          	mov    BYTE PTR [rbp-0x61],0x0
    4524:	c6 45 a0 00          	mov    BYTE PTR [rbp-0x60],0x0
    4528:	c6 45 a1 00          	mov    BYTE PTR [rbp-0x5f],0x0
    452c:	c6 45 a2 00          	mov    BYTE PTR [rbp-0x5e],0x0
    4530:	c6 45 a3 00          	mov    BYTE PTR [rbp-0x5d],0x0
    4534:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4538:	48 83 c0 68          	add    rax,0x68
    453c:	ba 08 00 00 00       	mov    edx,0x8
    4541:	be 00 00 00 00       	mov    esi,0x0
    4546:	48 89 c7             	mov    rdi,rax
    4549:	e8 92 df ff ff       	call   24e0 <memset@plt>
    454e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4552:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    4556:	0f b7 c0             	movzx  eax,ax
    4559:	89 c7                	mov    edi,eax
    455b:	e8 40 e1 ff ff       	call   26a0 <ntohs@plt>
    4560:	0f b7 c0             	movzx  eax,ax
    4563:	89 45 a8             	mov    DWORD PTR [rbp-0x58],eax
    4566:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    456a:	0f b7 00             	movzx  eax,WORD PTR [rax]
    456d:	0f b7 c0             	movzx  eax,ax
    4570:	89 c7                	mov    edi,eax
    4572:	e8 29 e1 ff ff       	call   26a0 <ntohs@plt>
    4577:	0f b7 c0             	movzx  eax,ax
    457a:	89 45 ac             	mov    DWORD PTR [rbp-0x54],eax
    457d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4581:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    4585:	0f b7 c0             	movzx  eax,ax
    4588:	89 c7                	mov    edi,eax
    458a:	e8 11 e1 ff ff       	call   26a0 <ntohs@plt>
    458f:	0f b7 d0             	movzx  edx,ax
    4592:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4596:	89 50 28             	mov    DWORD PTR [rax+0x28],edx
    4599:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    459d:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    45a0:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    45a3:	0f b6 05 ba 59 10 00 	movzx  eax,BYTE PTR [rip+0x1059ba]        # 109f64 <packet_print>
    45aa:	84 c0                	test   al,al
    45ac:	74 4e                	je     45fc <ip4_tcp_decode+0x1a3>
    45ae:	48 8d 35 ab 83 00 00 	lea    rsi,[rip+0x83ab]        # c960 <_IO_stdin_used+0x960>
    45b5:	48 8d 3d aa 83 00 00 	lea    rdi,[rip+0x83aa]        # c966 <_IO_stdin_used+0x966>
    45bc:	b8 00 00 00 00       	mov    eax,0x0
    45c1:	e8 0a df ff ff       	call   24d0 <printf@plt>
    45c6:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
    45c9:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
    45cd:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    45d0:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    45d4:	41 89 f0             	mov    r8d,esi
    45d7:	48 89 c6             	mov    rsi,rax
    45da:	48 8d 3d 88 83 00 00 	lea    rdi,[rip+0x8388]        # c969 <_IO_stdin_used+0x969>
    45e1:	b8 00 00 00 00       	mov    eax,0x0
    45e6:	e8 e5 de ff ff       	call   24d0 <printf@plt>
    45eb:	48 8d 3d 8c 83 00 00 	lea    rdi,[rip+0x838c]        # c97e <_IO_stdin_used+0x97e>
    45f2:	b8 00 00 00 00       	mov    eax,0x0
    45f7:	e8 d4 de ff ff       	call   24d0 <printf@plt>
    45fc:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4600:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4604:	c0 e8 04             	shr    al,0x4
    4607:	83 e0 01             	and    eax,0x1
    460a:	0f b6 c0             	movzx  eax,al
    460d:	89 c7                	mov    edi,eax
    460f:	e8 8c e0 ff ff       	call   26a0 <ntohs@plt>
    4614:	66 85 c0             	test   ax,ax
    4617:	74 43                	je     465c <ip4_tcp_decode+0x203>
    4619:	0f b6 05 44 59 10 00 	movzx  eax,BYTE PTR [rip+0x105944]        # 109f64 <packet_print>
    4620:	84 c0                	test   al,al
    4622:	74 18                	je     463c <ip4_tcp_decode+0x1e3>
    4624:	48 8d 35 5a 83 00 00 	lea    rsi,[rip+0x835a]        # c985 <_IO_stdin_used+0x985>
    462b:	48 8d 3d 59 83 00 00 	lea    rdi,[rip+0x8359]        # c98b <_IO_stdin_used+0x98b>
    4632:	b8 00 00 00 00       	mov    eax,0x0
    4637:	e8 94 de ff ff       	call   24d0 <printf@plt>
    463c:	c6 45 a0 01          	mov    BYTE PTR [rbp-0x60],0x1
    4640:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4644:	48 8d 58 68          	lea    rbx,[rax+0x68]
    4648:	48 89 df             	mov    rdi,rbx
    464b:	e8 00 e0 ff ff       	call   2650 <strlen@plt>
    4650:	48 01 d8             	add    rax,rbx
    4653:	66 c7 00 41 00       	mov    WORD PTR [rax],0x41
    4658:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    465c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4660:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4664:	83 e0 01             	and    eax,0x1
    4667:	0f b6 c0             	movzx  eax,al
    466a:	89 c7                	mov    edi,eax
    466c:	e8 2f e0 ff ff       	call   26a0 <ntohs@plt>
    4671:	66 85 c0             	test   ax,ax
    4674:	74 43                	je     46b9 <ip4_tcp_decode+0x260>
    4676:	0f b6 05 e7 58 10 00 	movzx  eax,BYTE PTR [rip+0x1058e7]        # 109f64 <packet_print>
    467d:	84 c0                	test   al,al
    467f:	74 18                	je     4699 <ip4_tcp_decode+0x240>
    4681:	48 8d 35 0b 83 00 00 	lea    rsi,[rip+0x830b]        # c993 <_IO_stdin_used+0x993>
    4688:	48 8d 3d 0a 83 00 00 	lea    rdi,[rip+0x830a]        # c999 <_IO_stdin_used+0x999>
    468f:	b8 00 00 00 00       	mov    eax,0x0
    4694:	e8 37 de ff ff       	call   24d0 <printf@plt>
    4699:	c6 45 a2 01          	mov    BYTE PTR [rbp-0x5e],0x1
    469d:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    46a1:	48 8d 58 68          	lea    rbx,[rax+0x68]
    46a5:	48 89 df             	mov    rdi,rbx
    46a8:	e8 a3 df ff ff       	call   2650 <strlen@plt>
    46ad:	48 01 d8             	add    rax,rbx
    46b0:	66 c7 00 46 00       	mov    WORD PTR [rax],0x46
    46b5:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    46b9:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    46bd:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    46c1:	c0 e8 03             	shr    al,0x3
    46c4:	83 e0 01             	and    eax,0x1
    46c7:	0f b6 c0             	movzx  eax,al
    46ca:	89 c7                	mov    edi,eax
    46cc:	e8 cf df ff ff       	call   26a0 <ntohs@plt>
    46d1:	66 85 c0             	test   ax,ax
    46d4:	74 43                	je     4719 <ip4_tcp_decode+0x2c0>
    46d6:	0f b6 05 87 58 10 00 	movzx  eax,BYTE PTR [rip+0x105887]        # 109f64 <packet_print>
    46dd:	84 c0                	test   al,al
    46df:	74 18                	je     46f9 <ip4_tcp_decode+0x2a0>
    46e1:	48 8d 35 b9 82 00 00 	lea    rsi,[rip+0x82b9]        # c9a1 <_IO_stdin_used+0x9a1>
    46e8:	48 8d 3d b8 82 00 00 	lea    rdi,[rip+0x82b8]        # c9a7 <_IO_stdin_used+0x9a7>
    46ef:	b8 00 00 00 00       	mov    eax,0x0
    46f4:	e8 d7 dd ff ff       	call   24d0 <printf@plt>
    46f9:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    46fd:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4701:	48 8d 58 68          	lea    rbx,[rax+0x68]
    4705:	48 89 df             	mov    rdi,rbx
    4708:	e8 43 df ff ff       	call   2650 <strlen@plt>
    470d:	48 01 d8             	add    rax,rbx
    4710:	66 c7 00 50 00       	mov    WORD PTR [rax],0x50
    4715:	c6 45 a3 01          	mov    BYTE PTR [rbp-0x5d],0x1
    4719:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    471d:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4721:	c0 e8 02             	shr    al,0x2
    4724:	83 e0 01             	and    eax,0x1
    4727:	0f b6 c0             	movzx  eax,al
    472a:	89 c7                	mov    edi,eax
    472c:	e8 6f df ff ff       	call   26a0 <ntohs@plt>
    4731:	66 85 c0             	test   ax,ax
    4734:	74 43                	je     4779 <ip4_tcp_decode+0x320>
    4736:	0f b6 05 27 58 10 00 	movzx  eax,BYTE PTR [rip+0x105827]        # 109f64 <packet_print>
    473d:	84 c0                	test   al,al
    473f:	74 18                	je     4759 <ip4_tcp_decode+0x300>
    4741:	48 8d 35 67 82 00 00 	lea    rsi,[rip+0x8267]        # c9af <_IO_stdin_used+0x9af>
    4748:	48 8d 3d 66 82 00 00 	lea    rdi,[rip+0x8266]        # c9b5 <_IO_stdin_used+0x9b5>
    474f:	b8 00 00 00 00       	mov    eax,0x0
    4754:	e8 77 dd ff ff       	call   24d0 <printf@plt>
    4759:	c6 45 9f 01          	mov    BYTE PTR [rbp-0x61],0x1
    475d:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4761:	48 8d 58 68          	lea    rbx,[rax+0x68]
    4765:	48 89 df             	mov    rdi,rbx
    4768:	e8 e3 de ff ff       	call   2650 <strlen@plt>
    476d:	48 01 d8             	add    rax,rbx
    4770:	66 c7 00 52 00       	mov    WORD PTR [rax],0x52
    4775:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    4779:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    477d:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4781:	d0 e8                	shr    al,1
    4783:	83 e0 01             	and    eax,0x1
    4786:	0f b6 c0             	movzx  eax,al
    4789:	89 c7                	mov    edi,eax
    478b:	e8 10 df ff ff       	call   26a0 <ntohs@plt>
    4790:	66 85 c0             	test   ax,ax
    4793:	74 43                	je     47d8 <ip4_tcp_decode+0x37f>
    4795:	0f b6 05 c8 57 10 00 	movzx  eax,BYTE PTR [rip+0x1057c8]        # 109f64 <packet_print>
    479c:	84 c0                	test   al,al
    479e:	74 18                	je     47b8 <ip4_tcp_decode+0x35f>
    47a0:	48 8d 35 16 82 00 00 	lea    rsi,[rip+0x8216]        # c9bd <_IO_stdin_used+0x9bd>
    47a7:	48 8d 3d 15 82 00 00 	lea    rdi,[rip+0x8215]        # c9c3 <_IO_stdin_used+0x9c3>
    47ae:	b8 00 00 00 00       	mov    eax,0x0
    47b3:	e8 18 dd ff ff       	call   24d0 <printf@plt>
    47b8:	c6 45 a1 01          	mov    BYTE PTR [rbp-0x5f],0x1
    47bc:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    47c0:	48 8d 58 68          	lea    rbx,[rax+0x68]
    47c4:	48 89 df             	mov    rdi,rbx
    47c7:	e8 84 de ff ff       	call   2650 <strlen@plt>
    47cc:	48 01 d8             	add    rax,rbx
    47cf:	66 c7 00 53 00       	mov    WORD PTR [rax],0x53
    47d4:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    47d8:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    47dc:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    47e0:	c0 e8 05             	shr    al,0x5
    47e3:	83 e0 01             	and    eax,0x1
    47e6:	0f b6 c0             	movzx  eax,al
    47e9:	89 c7                	mov    edi,eax
    47eb:	e8 b0 de ff ff       	call   26a0 <ntohs@plt>
    47f0:	66 85 c0             	test   ax,ax
    47f3:	74 3f                	je     4834 <ip4_tcp_decode+0x3db>
    47f5:	0f b6 05 68 57 10 00 	movzx  eax,BYTE PTR [rip+0x105768]        # 109f64 <packet_print>
    47fc:	84 c0                	test   al,al
    47fe:	74 18                	je     4818 <ip4_tcp_decode+0x3bf>
    4800:	48 8d 35 c4 81 00 00 	lea    rsi,[rip+0x81c4]        # c9cb <_IO_stdin_used+0x9cb>
    4807:	48 8d 3d c3 81 00 00 	lea    rdi,[rip+0x81c3]        # c9d1 <_IO_stdin_used+0x9d1>
    480e:	b8 00 00 00 00       	mov    eax,0x0
    4813:	e8 b8 dc ff ff       	call   24d0 <printf@plt>
    4818:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    481c:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4820:	48 8d 58 68          	lea    rbx,[rax+0x68]
    4824:	48 89 df             	mov    rdi,rbx
    4827:	e8 24 de ff ff       	call   2650 <strlen@plt>
    482c:	48 01 d8             	add    rax,rbx
    482f:	66 c7 00 55 00       	mov    WORD PTR [rax],0x55
    4834:	0f b6 05 29 57 10 00 	movzx  eax,BYTE PTR [rip+0x105729]        # 109f64 <packet_print>
    483b:	84 c0                	test   al,al
    483d:	74 3c                	je     487b <ip4_tcp_decode+0x422>
    483f:	48 8d 35 1a 81 00 00 	lea    rsi,[rip+0x811a]        # c960 <_IO_stdin_used+0x960>
    4846:	48 8d 3d 19 81 00 00 	lea    rdi,[rip+0x8119]        # c966 <_IO_stdin_used+0x966>
    484d:	b8 00 00 00 00       	mov    eax,0x0
    4852:	e8 79 dc ff ff       	call   24d0 <printf@plt>
    4857:	48 8d 3d 7b 81 00 00 	lea    rdi,[rip+0x817b]        # c9d9 <_IO_stdin_used+0x9d9>
    485e:	e8 cd dc ff ff       	call   2530 <puts@plt>
    4863:	48 8d 35 71 81 00 00 	lea    rsi,[rip+0x8171]        # c9db <_IO_stdin_used+0x9db>
    486a:	48 8d 3d f5 80 00 00 	lea    rdi,[rip+0x80f5]        # c966 <_IO_stdin_used+0x966>
    4871:	b8 00 00 00 00       	mov    eax,0x0
    4876:	e8 55 dc ff ff       	call   24d0 <printf@plt>
    487b:	83 7d a4 03          	cmp    DWORD PTR [rbp-0x5c],0x3
    487f:	7f 06                	jg     4887 <ip4_tcp_decode+0x42e>
    4881:	83 7d a4 00          	cmp    DWORD PTR [rbp-0x5c],0x0
    4885:	75 41                	jne    48c8 <ip4_tcp_decode+0x46f>
    4887:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
    488a:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
    488e:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    4891:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4895:	48 8d 0d 3f 81 00 00 	lea    rcx,[rip+0x813f]        # c9db <_IO_stdin_used+0x9db>
    489c:	51                   	push   rcx
    489d:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
    48a0:	51                   	push   rcx
    48a1:	41 89 f9             	mov    r9d,edi
    48a4:	49 89 f0             	mov    r8,rsi
    48a7:	89 d1                	mov    ecx,edx
    48a9:	48 89 c2             	mov    rdx,rax
    48ac:	48 8d 35 fc 80 00 00 	lea    rsi,[rip+0x80fc]        # c9af <_IO_stdin_used+0x9af>
    48b3:	48 8d 3d 26 81 00 00 	lea    rdi,[rip+0x8126]        # c9e0 <_IO_stdin_used+0x9e0>
    48ba:	b8 00 00 00 00       	mov    eax,0x0
    48bf:	e8 0c dc ff ff       	call   24d0 <printf@plt>
    48c4:	48 83 c4 10          	add    rsp,0x10
    48c8:	0f b6 05 f3 56 10 00 	movzx  eax,BYTE PTR [rip+0x1056f3]        # 109fc2 <use_spi>
    48cf:	84 c0                	test   al,al
    48d1:	0f 84 8c 00 00 00    	je     4963 <ip4_tcp_decode+0x50a>
    48d7:	80 7d a3 00          	cmp    BYTE PTR [rbp-0x5d],0x0
    48db:	74 1a                	je     48f7 <ip4_tcp_decode+0x49e>
    48dd:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    48e1:	74 14                	je     48f7 <ip4_tcp_decode+0x49e>
    48e3:	83 7d a4 02          	cmp    DWORD PTR [rbp-0x5c],0x2
    48e7:	75 0e                	jne    48f7 <ip4_tcp_decode+0x49e>
    48e9:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    48ed:	48 89 c7             	mov    rdi,rax
    48f0:	e8 e0 48 00 00       	call   91d5 <handle_data_pkt>
    48f5:	eb 6c                	jmp    4963 <ip4_tcp_decode+0x50a>
    48f7:	80 7d a2 00          	cmp    BYTE PTR [rbp-0x5e],0x0
    48fb:	74 14                	je     4911 <ip4_tcp_decode+0x4b8>
    48fd:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4901:	74 0e                	je     4911 <ip4_tcp_decode+0x4b8>
    4903:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4907:	48 89 c7             	mov    rdi,rax
    490a:	e8 b3 47 00 00       	call   90c2 <polite_end>
    490f:	eb 52                	jmp    4963 <ip4_tcp_decode+0x50a>
    4911:	80 7d a1 00          	cmp    BYTE PTR [rbp-0x5f],0x0
    4915:	74 14                	je     492b <ip4_tcp_decode+0x4d2>
    4917:	83 7d a4 01          	cmp    DWORD PTR [rbp-0x5c],0x1
    491b:	75 0e                	jne    492b <ip4_tcp_decode+0x4d2>
    491d:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4921:	48 89 c7             	mov    rdi,rax
    4924:	e8 f6 42 00 00       	call   8c1f <add_new_conversation>
    4929:	eb 38                	jmp    4963 <ip4_tcp_decode+0x50a>
    492b:	80 7d a1 00          	cmp    BYTE PTR [rbp-0x5f],0x0
    492f:	74 1a                	je     494b <ip4_tcp_decode+0x4f2>
    4931:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4935:	74 14                	je     494b <ip4_tcp_decode+0x4f2>
    4937:	83 7d a4 02          	cmp    DWORD PTR [rbp-0x5c],0x2
    493b:	75 0e                	jne    494b <ip4_tcp_decode+0x4f2>
    493d:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4941:	48 89 c7             	mov    rdi,rax
    4944:	e8 0f 45 00 00       	call   8e58 <spi_ud_thw>
    4949:	eb 18                	jmp    4963 <ip4_tcp_decode+0x50a>
    494b:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    494f:	74 12                	je     4963 <ip4_tcp_decode+0x50a>
    4951:	83 7d a4 01          	cmp    DWORD PTR [rbp-0x5c],0x1
    4955:	75 0c                	jne    4963 <ip4_tcp_decode+0x50a>
    4957:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    495b:	48 89 c7             	mov    rdi,rax
    495e:	e8 be 45 00 00       	call   8f21 <update_table>
    4963:	80 7d a3 00          	cmp    BYTE PTR [rbp-0x5d],0x0
    4967:	74 17                	je     4980 <ip4_tcp_decode+0x527>
    4969:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    496d:	74 11                	je     4980 <ip4_tcp_decode+0x527>
    496f:	83 7d a4 02          	cmp    DWORD PTR [rbp-0x5c],0x2
    4973:	75 0b                	jne    4980 <ip4_tcp_decode+0x527>
    4975:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4979:	c7 40 70 01 00 00 00 	mov    DWORD PTR [rax+0x70],0x1
    4980:	80 7d 9f 00          	cmp    BYTE PTR [rbp-0x61],0x0
    4984:	0f 84 8f 01 00 00    	je     4b19 <ip4_tcp_decode+0x6c0>
    498a:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    498e:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4992:	48 89 c7             	mov    rdi,rax
    4995:	e8 3e 30 00 00       	call   79d8 <member_exists>
    499a:	89 45 b0             	mov    DWORD PTR [rbp-0x50],eax
    499d:	83 7d b0 ff          	cmp    DWORD PTR [rbp-0x50],0xffffffff
    49a1:	0f 84 db 00 00 00    	je     4a82 <ip4_tcp_decode+0x629>
    49a7:	8b 45 b0             	mov    eax,DWORD PTR [rbp-0x50]
    49aa:	48 63 d0             	movsxd rdx,eax
    49ad:	48 89 d0             	mov    rax,rdx
    49b0:	48 c1 e0 02          	shl    rax,0x2
    49b4:	48 01 d0             	add    rax,rdx
    49b7:	48 c1 e0 03          	shl    rax,0x3
    49bb:	48 01 d0             	add    rax,rdx
    49be:	48 c1 e0 04          	shl    rax,0x4
    49c2:	48 8d 15 57 eb 0e 00 	lea    rdx,[rip+0xeeb57]        # f3520 <watchlist>
    49c9:	48 01 d0             	add    rax,rdx
    49cc:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    49d0:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    49d4:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    49d8:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    49dc:	48 83 c2 08          	add    rdx,0x8
    49e0:	48 89 c6             	mov    rsi,rax
    49e3:	48 89 d7             	mov    rdi,rdx
    49e6:	e8 15 de ff ff       	call   2800 <strcpy@plt>
    49eb:	bf 00 00 00 00       	mov    edi,0x0
    49f0:	e8 1b df ff ff       	call   2910 <time@plt>
    49f5:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    49f9:	8b 92 48 01 00 00    	mov    edx,DWORD PTR [rdx+0x148]
    49ff:	8d 72 01             	lea    esi,[rdx+0x1]
    4a02:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    4a06:	89 b1 48 01 00 00    	mov    DWORD PTR [rcx+0x148],esi
    4a0c:	48 89 c1             	mov    rcx,rax
    4a0f:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4a13:	89 d2                	mov    edx,edx
    4a15:	48 83 c2 28          	add    rdx,0x28
    4a19:	48 89 4c d0 10       	mov    QWORD PTR [rax+rdx*8+0x10],rcx
    4a1e:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4a22:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    4a28:	83 f8 1d             	cmp    eax,0x1d
    4a2b:	0f 86 e8 00 00 00    	jbe    4b19 <ip4_tcp_decode+0x6c0>
    4a31:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4a35:	c7 80 48 01 00 00 1e 	mov    DWORD PTR [rax+0x148],0x1e
    4a3c:	00 00 00 
    4a3f:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4a43:	48 89 c7             	mov    rdi,rax
    4a46:	e8 4b 2b 00 00       	call   7596 <tcp_rst_portscan_detect>
    4a4b:	84 c0                	test   al,al
    4a4d:	0f 84 c6 00 00 00    	je     4b19 <ip4_tcp_decode+0x6c0>
    4a53:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4a57:	c7 80 48 01 00 00 00 	mov    DWORD PTR [rax+0x148],0x0
    4a5e:	00 00 00 
    4a61:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4a65:	48 05 50 01 00 00    	add    rax,0x150
    4a6b:	ba f0 00 00 00       	mov    edx,0xf0
    4a70:	be 00 00 00 00       	mov    esi,0x0
    4a75:	48 89 c7             	mov    rdi,rax
    4a78:	e8 63 da ff ff       	call   24e0 <memset@plt>
    4a7d:	e9 97 00 00 00       	jmp    4b19 <ip4_tcp_decode+0x6c0>
    4a82:	8b 05 90 c5 00 00    	mov    eax,DWORD PTR [rip+0xc590]        # 11018 <watchlist_num>
    4a88:	83 c0 01             	add    eax,0x1
    4a8b:	89 05 87 c5 00 00    	mov    DWORD PTR [rip+0xc587],eax        # 11018 <watchlist_num>
    4a91:	8b 05 81 c5 00 00    	mov    eax,DWORD PTR [rip+0xc581]        # 11018 <watchlist_num>
    4a97:	48 63 d0             	movsxd rdx,eax
    4a9a:	48 89 d0             	mov    rax,rdx
    4a9d:	48 c1 e0 02          	shl    rax,0x2
    4aa1:	48 01 d0             	add    rax,rdx
    4aa4:	48 c1 e0 03          	shl    rax,0x3
    4aa8:	48 01 d0             	add    rax,rdx
    4aab:	48 c1 e0 04          	shl    rax,0x4
    4aaf:	48 8d 15 6a ea 0e 00 	lea    rdx,[rip+0xeea6a]        # f3520 <watchlist>
    4ab6:	48 01 d0             	add    rax,rdx
    4ab9:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    4abd:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4ac1:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4ac5:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    4ac9:	48 83 c2 08          	add    rdx,0x8
    4acd:	48 89 c6             	mov    rsi,rax
    4ad0:	48 89 d7             	mov    rdi,rdx
    4ad3:	e8 28 dd ff ff       	call   2800 <strcpy@plt>
    4ad8:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4adc:	c7 80 48 01 00 00 00 	mov    DWORD PTR [rax+0x148],0x0
    4ae3:	00 00 00 
    4ae6:	bf 00 00 00 00       	mov    edi,0x0
    4aeb:	e8 20 de ff ff       	call   2910 <time@plt>
    4af0:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    4af4:	8b 92 48 01 00 00    	mov    edx,DWORD PTR [rdx+0x148]
    4afa:	8d 72 01             	lea    esi,[rdx+0x1]
    4afd:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    4b01:	89 b1 48 01 00 00    	mov    DWORD PTR [rcx+0x148],esi
    4b07:	48 89 c1             	mov    rcx,rax
    4b0a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4b0e:	89 d2                	mov    edx,edx
    4b10:	48 83 c2 28          	add    rdx,0x28
    4b14:	48 89 4c d0 10       	mov    QWORD PTR [rax+rdx*8+0x10],rcx
    4b19:	8b 05 69 c5 00 00    	mov    eax,DWORD PTR [rip+0xc569]        # 11088 <strict_nmap_host_alive_check>
    4b1f:	83 f8 01             	cmp    eax,0x1
    4b22:	0f 85 f6 00 00 00    	jne    4c1e <ip4_tcp_decode+0x7c5>
    4b28:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4b2c:	74 0c                	je     4b3a <ip4_tcp_decode+0x6e1>
    4b2e:	83 7d a8 50          	cmp    DWORD PTR [rbp-0x58],0x50
    4b32:	74 26                	je     4b5a <ip4_tcp_decode+0x701>
    4b34:	83 7d ac 50          	cmp    DWORD PTR [rbp-0x54],0x50
    4b38:	74 20                	je     4b5a <ip4_tcp_decode+0x701>
    4b3a:	80 7d a1 00          	cmp    BYTE PTR [rbp-0x5f],0x0
    4b3e:	0f 84 da 00 00 00    	je     4c1e <ip4_tcp_decode+0x7c5>
    4b44:	81 7d a8 bb 01 00 00 	cmp    DWORD PTR [rbp-0x58],0x1bb
    4b4b:	74 0d                	je     4b5a <ip4_tcp_decode+0x701>
    4b4d:	81 7d ac bb 01 00 00 	cmp    DWORD PTR [rbp-0x54],0x1bb
    4b54:	0f 85 c4 00 00 00    	jne    4c1e <ip4_tcp_decode+0x7c5>
    4b5a:	8b 45 a8             	mov    eax,DWORD PTR [rbp-0x58]
    4b5d:	3b 45 ac             	cmp    eax,DWORD PTR [rbp-0x54]
    4b60:	76 0a                	jbe    4b6c <ip4_tcp_decode+0x713>
    4b62:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4b66:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    4b6a:	eb 08                	jmp    4b74 <ip4_tcp_decode+0x71b>
    4b6c:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4b70:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    4b74:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4b78:	48 89 c7             	mov    rdi,rax
    4b7b:	e8 58 2e 00 00       	call   79d8 <member_exists>
    4b80:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
    4b83:	83 7d b4 ff          	cmp    DWORD PTR [rbp-0x4c],0xffffffff
    4b87:	0f 84 91 00 00 00    	je     4c1e <ip4_tcp_decode+0x7c5>
    4b8d:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    4b90:	48 63 d0             	movsxd rdx,eax
    4b93:	48 89 d0             	mov    rax,rdx
    4b96:	48 c1 e0 02          	shl    rax,0x2
    4b9a:	48 01 d0             	add    rax,rdx
    4b9d:	48 c1 e0 03          	shl    rax,0x3
    4ba1:	48 01 d0             	add    rax,rdx
    4ba4:	48 c1 e0 04          	shl    rax,0x4
    4ba8:	48 8d 15 71 e9 0e 00 	lea    rdx,[rip+0xee971]        # f3520 <watchlist>
    4baf:	48 01 d0             	add    rax,rdx
    4bb2:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    4bb6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4bba:	8b 40 34             	mov    eax,DWORD PTR [rax+0x34]
    4bbd:	85 c0                	test   eax,eax
    4bbf:	75 2a                	jne    4beb <ip4_tcp_decode+0x792>
    4bc1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4bc5:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4bc8:	83 f8 01             	cmp    eax,0x1
    4bcb:	75 1e                	jne    4beb <ip4_tcp_decode+0x792>
    4bcd:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4bd1:	c7 40 34 01 00 00 00 	mov    DWORD PTR [rax+0x34],0x1
    4bd8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4bdc:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4bdf:	8d 50 01             	lea    edx,[rax+0x1]
    4be2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4be6:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    4be9:	eb 33                	jmp    4c1e <ip4_tcp_decode+0x7c5>
    4beb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4bef:	8b 40 38             	mov    eax,DWORD PTR [rax+0x38]
    4bf2:	85 c0                	test   eax,eax
    4bf4:	75 28                	jne    4c1e <ip4_tcp_decode+0x7c5>
    4bf6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4bfa:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4bfd:	83 f8 02             	cmp    eax,0x2
    4c00:	75 1c                	jne    4c1e <ip4_tcp_decode+0x7c5>
    4c02:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4c06:	c7 40 38 01 00 00 00 	mov    DWORD PTR [rax+0x38],0x1
    4c0d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4c11:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4c14:	8d 50 01             	lea    edx,[rax+0x1]
    4c17:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4c1b:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    4c1e:	0f b6 05 3f 53 10 00 	movzx  eax,BYTE PTR [rip+0x10533f]        # 109f64 <packet_print>
    4c25:	84 c0                	test   al,al
    4c27:	74 3a                	je     4c63 <ip4_tcp_decode+0x80a>
    4c29:	80 7d a3 00          	cmp    BYTE PTR [rbp-0x5d],0x0
    4c2d:	74 34                	je     4c63 <ip4_tcp_decode+0x80a>
    4c2f:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4c33:	74 2e                	je     4c63 <ip4_tcp_decode+0x80a>
    4c35:	0f b6 45 a2          	movzx  eax,BYTE PTR [rbp-0x5e]
    4c39:	83 f0 01             	xor    eax,0x1
    4c3c:	84 c0                	test   al,al
    4c3e:	74 23                	je     4c63 <ip4_tcp_decode+0x80a>
    4c40:	83 7d a8 50          	cmp    DWORD PTR [rbp-0x58],0x50
    4c44:	74 06                	je     4c4c <ip4_tcp_decode+0x7f3>
    4c46:	83 7d ac 50          	cmp    DWORD PTR [rbp-0x54],0x50
    4c4a:	75 17                	jne    4c63 <ip4_tcp_decode+0x80a>
    4c4c:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    4c50:	48 8d 50 42          	lea    rdx,[rax+0x42]
    4c54:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4c58:	48 89 c6             	mov    rsi,rax
    4c5b:	48 89 d7             	mov    rdi,rdx
    4c5e:	e8 ec 39 00 00       	call   864f <http_disect>
    4c63:	83 7d a8 15          	cmp    DWORD PTR [rbp-0x58],0x15
    4c67:	74 06                	je     4c6f <ip4_tcp_decode+0x816>
    4c69:	83 7d ac 15          	cmp    DWORD PTR [rbp-0x54],0x15
    4c6d:	75 2d                	jne    4c9c <ip4_tcp_decode+0x843>
    4c6f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4c73:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    4c77:	c0 e8 04             	shr    al,0x4
    4c7a:	0f b6 c0             	movzx  eax,al
    4c7d:	c1 e0 02             	shl    eax,0x2
    4c80:	48 98                	cdqe   
    4c82:	48 8d 50 22          	lea    rdx,[rax+0x22]
    4c86:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    4c8a:	48 01 c2             	add    rdx,rax
    4c8d:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4c91:	48 89 c6             	mov    rsi,rax
    4c94:	48 89 d7             	mov    rdi,rdx
    4c97:	e8 9e 3b 00 00       	call   883a <ftp_disect>
    4c9c:	81 7d a8 bb 01 00 00 	cmp    DWORD PTR [rbp-0x58],0x1bb
    4ca3:	74 09                	je     4cae <ip4_tcp_decode+0x855>
    4ca5:	81 7d ac bb 01 00 00 	cmp    DWORD PTR [rbp-0x54],0x1bb
    4cac:	75 29                	jne    4cd7 <ip4_tcp_decode+0x87e>
    4cae:	80 7d a3 00          	cmp    BYTE PTR [rbp-0x5d],0x0
    4cb2:	74 23                	je     4cd7 <ip4_tcp_decode+0x87e>
    4cb4:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4cb8:	74 1d                	je     4cd7 <ip4_tcp_decode+0x87e>
    4cba:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4cbe:	48 8b 00             	mov    rax,QWORD PTR [rax]
    4cc1:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
    4cc8:	48 8b 4d 80          	mov    rcx,QWORD PTR [rbp-0x80]
    4ccc:	48 89 ce             	mov    rsi,rcx
    4ccf:	48 89 c7             	mov    rdi,rax
    4cd2:	e8 38 33 00 00       	call   800f <tls_decode>
    4cd7:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    4cde:	8b 50 14             	mov    edx,DWORD PTR [rax+0x14]
    4ce1:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4ce5:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    4ce9:	c0 e8 04             	shr    al,0x4
    4cec:	0f b6 c0             	movzx  eax,al
    4cef:	c1 e0 02             	shl    eax,0x2
    4cf2:	89 c1                	mov    ecx,eax
    4cf4:	89 d0                	mov    eax,edx
    4cf6:	29 c8                	sub    eax,ecx
    4cf8:	8d 50 de             	lea    edx,[rax-0x22]
    4cfb:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4cff:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    4d02:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4d06:	48 89 c7             	mov    rdi,rax
    4d09:	e8 95 17 00 00       	call   64a3 <rulemgr>
    4d0e:	90                   	nop
    4d0f:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    4d13:	c9                   	leave  
    4d14:	c3                   	ret    

0000000000004d15 <ip4_udp_decode>:
    4d15:	f3 0f 1e fa          	endbr64 
    4d19:	55                   	push   rbp
    4d1a:	48 89 e5             	mov    rbp,rsp
    4d1d:	48 83 ec 30          	sub    rsp,0x30
    4d21:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    4d25:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    4d29:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    4d2d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4d31:	48 83 c0 22          	add    rax,0x22
    4d35:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4d39:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4d3d:	48 8d 50 2a          	lea    rdx,[rax+0x2a]
    4d41:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d45:	48 89 10             	mov    QWORD PTR [rax],rdx
    4d48:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d4c:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    4d50:	ba 5d 00 00 00       	mov    edx,0x5d
    4d55:	be 01 00 00 00       	mov    esi,0x1
    4d5a:	48 89 c7             	mov    rdi,rax
    4d5d:	e8 07 02 00 00       	call   4f69 <add_ip_addr_or_inc_counter>
    4d62:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d66:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4d6a:	ba 5d 00 00 00       	mov    edx,0x5d
    4d6f:	be 00 00 00 00       	mov    esi,0x0
    4d74:	48 89 c7             	mov    rdi,rax
    4d77:	e8 ed 01 00 00       	call   4f69 <add_ip_addr_or_inc_counter>
    4d7c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4d80:	0f b7 00             	movzx  eax,WORD PTR [rax]
    4d83:	0f b7 c0             	movzx  eax,ax
    4d86:	89 c7                	mov    edi,eax
    4d88:	e8 13 d9 ff ff       	call   26a0 <ntohs@plt>
    4d8d:	0f b7 c0             	movzx  eax,ax
    4d90:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
    4d93:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4d97:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    4d9b:	0f b7 c0             	movzx  eax,ax
    4d9e:	89 c7                	mov    edi,eax
    4da0:	e8 fb d8 ff ff       	call   26a0 <ntohs@plt>
    4da5:	0f b7 c0             	movzx  eax,ax
    4da8:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    4dab:	0f b6 05 b2 51 10 00 	movzx  eax,BYTE PTR [rip+0x1051b2]        # 109f64 <packet_print>
    4db2:	84 c0                	test   al,al
    4db4:	74 5d                	je     4e13 <ip4_udp_decode+0xfe>
    4db6:	48 8d 35 63 7c 00 00 	lea    rsi,[rip+0x7c63]        # ca20 <_IO_stdin_used+0xa20>
    4dbd:	48 8d 3d 62 7c 00 00 	lea    rdi,[rip+0x7c62]        # ca26 <_IO_stdin_used+0xa26>
    4dc4:	b8 00 00 00 00       	mov    eax,0x0
    4dc9:	e8 02 d7 ff ff       	call   24d0 <printf@plt>
    4dce:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4dd2:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    4dd6:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4dda:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    4dde:	8b 75 f4             	mov    esi,DWORD PTR [rbp-0xc]
    4de1:	8b 55 f0             	mov    edx,DWORD PTR [rbp-0x10]
    4de4:	41 89 f0             	mov    r8d,esi
    4de7:	48 89 c6             	mov    rsi,rax
    4dea:	48 8d 3d 38 7c 00 00 	lea    rdi,[rip+0x7c38]        # ca29 <_IO_stdin_used+0xa29>
    4df1:	b8 00 00 00 00       	mov    eax,0x0
    4df6:	e8 d5 d6 ff ff       	call   24d0 <printf@plt>
    4dfb:	48 8d 35 40 7c 00 00 	lea    rsi,[rip+0x7c40]        # ca42 <_IO_stdin_used+0xa42>
    4e02:	48 8d 3d 1d 7c 00 00 	lea    rdi,[rip+0x7c1d]        # ca26 <_IO_stdin_used+0xa26>
    4e09:	b8 00 00 00 00       	mov    eax,0x0
    4e0e:	e8 bd d6 ff ff       	call   24d0 <printf@plt>
    4e13:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e17:	8b 55 f0             	mov    edx,DWORD PTR [rbp-0x10]
    4e1a:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    4e1d:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e21:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
    4e24:	89 50 28             	mov    DWORD PTR [rax+0x28],edx
    4e27:	83 7d f0 35          	cmp    DWORD PTR [rbp-0x10],0x35
    4e2b:	74 06                	je     4e33 <ip4_udp_decode+0x11e>
    4e2d:	83 7d f4 35          	cmp    DWORD PTR [rbp-0xc],0x35
    4e31:	75 17                	jne    4e4a <ip4_udp_decode+0x135>
    4e33:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4e37:	48 8d 50 2b          	lea    rdx,[rax+0x2b]
    4e3b:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e3f:	48 89 c6             	mov    rsi,rax
    4e42:	48 89 d7             	mov    rdi,rdx
    4e45:	e8 b7 38 00 00       	call   8701 <dns_disect>
    4e4a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4e4e:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    4e51:	8d 50 d6             	lea    edx,[rax-0x2a]
    4e54:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e58:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    4e5b:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e5f:	48 89 c7             	mov    rdi,rax
    4e62:	e8 3c 16 00 00       	call   64a3 <rulemgr>
    4e67:	90                   	nop
    4e68:	c9                   	leave  
    4e69:	c3                   	ret    

0000000000004e6a <ip4_igmp_decode>:
    4e6a:	f3 0f 1e fa          	endbr64 
    4e6e:	55                   	push   rbp
    4e6f:	48 89 e5             	mov    rbp,rsp
    4e72:	48 83 ec 60          	sub    rsp,0x60
    4e76:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    4e7a:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
    4e7e:	48 89 55 a8          	mov    QWORD PTR [rbp-0x58],rdx
    4e82:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4e89:	00 00 
    4e8b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4e8f:	31 c0                	xor    eax,eax
    4e91:	0f b6 05 cc 50 10 00 	movzx  eax,BYTE PTR [rip+0x1050cc]        # 109f64 <packet_print>
    4e98:	84 c0                	test   al,al
    4e9a:	0f 84 b1 00 00 00    	je     4f51 <ip4_igmp_decode+0xe7>
    4ea0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4ea4:	48 83 c0 26          	add    rax,0x26
    4ea8:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    4eac:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    4eb0:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    4eb4:	48 89 c6             	mov    rsi,rax
    4eb7:	48 8d 3d 8a 7b 00 00 	lea    rdi,[rip+0x7b8a]        # ca48 <_IO_stdin_used+0xa48>
    4ebe:	b8 00 00 00 00       	mov    eax,0x0
    4ec3:	e8 08 d6 ff ff       	call   24d0 <printf@plt>
    4ec8:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4ecc:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4ecf:	0f b6 c0             	movzx  eax,al
    4ed2:	83 f8 11             	cmp    eax,0x11
    4ed5:	74 07                	je     4ede <ip4_igmp_decode+0x74>
    4ed7:	83 f8 22             	cmp    eax,0x22
    4eda:	74 10                	je     4eec <ip4_igmp_decode+0x82>
    4edc:	eb 54                	jmp    4f32 <ip4_igmp_decode+0xc8>
    4ede:	48 8d 3d 78 7b 00 00 	lea    rdi,[rip+0x7b78]        # ca5d <_IO_stdin_used+0xa5d>
    4ee5:	e8 46 d6 ff ff       	call   2530 <puts@plt>
    4eea:	eb 66                	jmp    4f52 <ip4_igmp_decode+0xe8>
    4eec:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4ef0:	48 83 c0 26          	add    rax,0x26
    4ef4:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    4ef8:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4efc:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    4eff:	89 c7                	mov    edi,eax
    4f01:	e8 83 e2 ff ff       	call   3189 <ipv4_ntoa>
    4f06:	48 89 c2             	mov    rdx,rax
    4f09:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    4f0d:	48 89 d6             	mov    rsi,rdx
    4f10:	48 89 c7             	mov    rdi,rax
    4f13:	e8 e8 d8 ff ff       	call   2800 <strcpy@plt>
    4f18:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    4f1c:	48 89 c6             	mov    rsi,rax
    4f1f:	48 8d 3d 52 7b 00 00 	lea    rdi,[rip+0x7b52]        # ca78 <_IO_stdin_used+0xa78>
    4f26:	b8 00 00 00 00       	mov    eax,0x0
    4f2b:	e8 a0 d5 ff ff       	call   24d0 <printf@plt>
    4f30:	eb 20                	jmp    4f52 <ip4_igmp_decode+0xe8>
    4f32:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4f36:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4f39:	0f b6 c0             	movzx  eax,al
    4f3c:	89 c6                	mov    esi,eax
    4f3e:	48 8d 3d 69 7b 00 00 	lea    rdi,[rip+0x7b69]        # caae <_IO_stdin_used+0xaae>
    4f45:	b8 00 00 00 00       	mov    eax,0x0
    4f4a:	e8 81 d5 ff ff       	call   24d0 <printf@plt>
    4f4f:	eb 01                	jmp    4f52 <ip4_igmp_decode+0xe8>
    4f51:	90                   	nop
    4f52:	90                   	nop
    4f53:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4f57:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    4f5e:	00 00 
    4f60:	74 05                	je     4f67 <ip4_igmp_decode+0xfd>
    4f62:	e8 59 d8 ff ff       	call   27c0 <__stack_chk_fail@plt>
    4f67:	c9                   	leave  
    4f68:	c3                   	ret    

0000000000004f69 <add_ip_addr_or_inc_counter>:
    4f69:	f3 0f 1e fa          	endbr64 
    4f6d:	55                   	push   rbp
    4f6e:	48 89 e5             	mov    rbp,rsp
    4f71:	48 83 ec 60          	sub    rsp,0x60
    4f75:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    4f79:	89 f0                	mov    eax,esi
    4f7b:	89 55 a0             	mov    DWORD PTR [rbp-0x60],edx
    4f7e:	88 45 a4             	mov    BYTE PTR [rbp-0x5c],al
    4f81:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4f88:	00 00 
    4f8a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4f8e:	31 c0                	xor    eax,eax
    4f90:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4f94:	ba 08 00 00 00       	mov    edx,0x8
    4f99:	be 00 00 00 00       	mov    esi,0x0
    4f9e:	48 89 c7             	mov    rdi,rax
    4fa1:	e8 3a d5 ff ff       	call   24e0 <memset@plt>
    4fa6:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    4faa:	ba 1c 00 00 00       	mov    edx,0x1c
    4faf:	be 00 00 00 00       	mov    esi,0x0
    4fb4:	48 89 c7             	mov    rdi,rax
    4fb7:	e8 24 d5 ff ff       	call   24e0 <memset@plt>
    4fbc:	48 8b 4d a8          	mov    rcx,QWORD PTR [rbp-0x58]
    4fc0:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4fc4:	ba 18 00 00 00       	mov    edx,0x18
    4fc9:	48 89 ce             	mov    rsi,rcx
    4fcc:	48 89 c7             	mov    rdi,rax
    4fcf:	e8 7c d8 ff ff       	call   2850 <strncpy@plt>
    4fd4:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    4fd8:	ba 1c 00 00 00       	mov    edx,0x1c
    4fdd:	be 00 00 00 00       	mov    esi,0x0
    4fe2:	48 89 c7             	mov    rdi,rax
    4fe5:	e8 f6 d4 ff ff       	call   24e0 <memset@plt>
    4fea:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4fee:	48 8d 55 c0          	lea    rdx,[rbp-0x40]
    4ff2:	48 83 c2 08          	add    rdx,0x8
    4ff6:	48 89 c6             	mov    rsi,rax
    4ff9:	48 89 d7             	mov    rdi,rdx
    4ffc:	e8 ff d7 ff ff       	call   2800 <strcpy@plt>
    5001:	0f b6 45 a4          	movzx  eax,BYTE PTR [rbp-0x5c]
    5005:	88 45 c0             	mov    BYTE PTR [rbp-0x40],al
    5008:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    500b:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    500e:	48 8d 55 c0          	lea    rdx,[rbp-0x40]
    5012:	48 8d 45 b8          	lea    rax,[rbp-0x48]
    5016:	48 89 d1             	mov    rcx,rdx
    5019:	48 8d 15 35 00 00 00 	lea    rdx,[rip+0x35]        # 5055 <verify_ip_addr>
    5020:	be 00 00 00 00       	mov    esi,0x0
    5025:	48 89 c7             	mov    rdi,rax
    5028:	e8 f3 d5 ff ff       	call   2620 <pthread_create@plt>
    502d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5031:	be 00 00 00 00       	mov    esi,0x0
    5036:	48 89 c7             	mov    rdi,rax
    5039:	e8 82 d4 ff ff       	call   24c0 <pthread_join@plt>
    503e:	90                   	nop
    503f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5043:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    504a:	00 00 
    504c:	74 05                	je     5053 <add_ip_addr_or_inc_counter+0xea>
    504e:	e8 6d d7 ff ff       	call   27c0 <__stack_chk_fail@plt>
    5053:	c9                   	leave  
    5054:	c3                   	ret    

0000000000005055 <verify_ip_addr>:
    5055:	f3 0f 1e fa          	endbr64 
    5059:	55                   	push   rbp
    505a:	48 89 e5             	mov    rbp,rsp
    505d:	48 83 ec 30          	sub    rsp,0x30
    5061:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    5065:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    5069:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    506d:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
    5074:	e9 c9 00 00 00       	jmp    5142 <verify_ip_addr+0xed>
    5079:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    507c:	48 63 d0             	movsxd rdx,eax
    507f:	48 89 d0             	mov    rax,rdx
    5082:	48 c1 e0 02          	shl    rax,0x2
    5086:	48 01 d0             	add    rax,rdx
    5089:	48 c1 e0 03          	shl    rax,0x3
    508d:	48 01 d0             	add    rax,rdx
    5090:	48 c1 e0 04          	shl    rax,0x4
    5094:	48 8d 15 85 e4 0e 00 	lea    rdx,[rip+0xee485]        # f3520 <watchlist>
    509b:	48 01 d0             	add    rax,rdx
    509e:	48 8d 50 08          	lea    rdx,[rax+0x8]
    50a2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    50a6:	48 83 c0 08          	add    rax,0x8
    50aa:	48 89 d6             	mov    rsi,rdx
    50ad:	48 89 c7             	mov    rdi,rax
    50b0:	e8 1b d7 ff ff       	call   27d0 <strcmp@plt>
    50b5:	85 c0                	test   eax,eax
    50b7:	0f 85 81 00 00 00    	jne    513e <verify_ip_addr+0xe9>
    50bd:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    50c0:	48 63 d0             	movsxd rdx,eax
    50c3:	48 89 d0             	mov    rax,rdx
    50c6:	48 c1 e0 02          	shl    rax,0x2
    50ca:	48 01 d0             	add    rax,rdx
    50cd:	48 c1 e0 03          	shl    rax,0x3
    50d1:	48 01 d0             	add    rax,rdx
    50d4:	48 c1 e0 04          	shl    rax,0x4
    50d8:	48 89 c2             	mov    rdx,rax
    50db:	48 8d 05 96 e6 0e 00 	lea    rax,[rip+0xee696]        # f3778 <watchlist+0x258>
    50e2:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    50e5:	8d 48 01             	lea    ecx,[rax+0x1]
    50e8:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    50eb:	48 63 d0             	movsxd rdx,eax
    50ee:	48 89 d0             	mov    rax,rdx
    50f1:	48 c1 e0 02          	shl    rax,0x2
    50f5:	48 01 d0             	add    rax,rdx
    50f8:	48 c1 e0 03          	shl    rax,0x3
    50fc:	48 01 d0             	add    rax,rdx
    50ff:	48 c1 e0 04          	shl    rax,0x4
    5103:	48 89 c2             	mov    rdx,rax
    5106:	48 8d 05 6b e6 0e 00 	lea    rax,[rip+0xee66b]        # f3778 <watchlist+0x258>
    510d:	89 0c 02             	mov    DWORD PTR [rdx+rax*1],ecx
    5110:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    5113:	48 63 d0             	movsxd rdx,eax
    5116:	48 89 d0             	mov    rax,rdx
    5119:	48 c1 e0 02          	shl    rax,0x2
    511d:	48 01 d0             	add    rax,rdx
    5120:	48 c1 e0 03          	shl    rax,0x3
    5124:	48 01 d0             	add    rax,rdx
    5127:	48 c1 e0 04          	shl    rax,0x4
    512b:	48 8d 15 ee e3 0e 00 	lea    rdx,[rip+0xee3ee]        # f3520 <watchlist>
    5132:	48 01 d0             	add    rax,rdx
    5135:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    5139:	e9 f5 00 00 00       	jmp    5233 <verify_ip_addr+0x1de>
    513e:	83 45 e4 01          	add    DWORD PTR [rbp-0x1c],0x1
    5142:	8b 05 d0 be 00 00    	mov    eax,DWORD PTR [rip+0xbed0]        # 11018 <watchlist_num>
    5148:	39 45 e4             	cmp    DWORD PTR [rbp-0x1c],eax
    514b:	0f 8e 28 ff ff ff    	jle    5079 <verify_ip_addr+0x24>
    5151:	bf 90 02 00 00       	mov    edi,0x290
    5156:	e8 55 d4 ff ff       	call   25b0 <malloc@plt>
    515b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    515f:	8b 05 b3 be 00 00    	mov    eax,DWORD PTR [rip+0xbeb3]        # 11018 <watchlist_num>
    5165:	83 c0 01             	add    eax,0x1
    5168:	89 05 aa be 00 00    	mov    DWORD PTR [rip+0xbeaa],eax        # 11018 <watchlist_num>
    516e:	8b 05 a4 be 00 00    	mov    eax,DWORD PTR [rip+0xbea4]        # 11018 <watchlist_num>
    5174:	48 63 d0             	movsxd rdx,eax
    5177:	48 89 d0             	mov    rax,rdx
    517a:	48 c1 e0 02          	shl    rax,0x2
    517e:	48 01 d0             	add    rax,rdx
    5181:	48 c1 e0 03          	shl    rax,0x3
    5185:	48 01 d0             	add    rax,rdx
    5188:	48 c1 e0 04          	shl    rax,0x4
    518c:	48 89 c1             	mov    rcx,rax
    518f:	48 8d 05 8a e3 0e 00 	lea    rax,[rip+0xee38a]        # f3520 <watchlist>
    5196:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    519a:	48 01 c8             	add    rax,rcx
    519d:	48 89 d6             	mov    rsi,rdx
    51a0:	ba 52 00 00 00       	mov    edx,0x52
    51a5:	48 89 c7             	mov    rdi,rax
    51a8:	48 89 d1             	mov    rcx,rdx
    51ab:	f3 48 a5             	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
    51ae:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    51b2:	48 83 c0 08          	add    rax,0x8
    51b6:	ba 0f 00 00 00       	mov    edx,0xf
    51bb:	be 00 00 00 00       	mov    esi,0x0
    51c0:	48 89 c7             	mov    rdi,rax
    51c3:	e8 18 d3 ff ff       	call   24e0 <memset@plt>
    51c8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    51cc:	48 8d 48 08          	lea    rcx,[rax+0x8]
    51d0:	8b 05 42 be 00 00    	mov    eax,DWORD PTR [rip+0xbe42]        # 11018 <watchlist_num>
    51d6:	48 63 d0             	movsxd rdx,eax
    51d9:	48 89 d0             	mov    rax,rdx
    51dc:	48 c1 e0 02          	shl    rax,0x2
    51e0:	48 01 d0             	add    rax,rdx
    51e3:	48 c1 e0 03          	shl    rax,0x3
    51e7:	48 01 d0             	add    rax,rdx
    51ea:	48 c1 e0 04          	shl    rax,0x4
    51ee:	48 8d 15 2b e3 0e 00 	lea    rdx,[rip+0xee32b]        # f3520 <watchlist>
    51f5:	48 01 d0             	add    rax,rdx
    51f8:	48 83 c0 08          	add    rax,0x8
    51fc:	48 89 ce             	mov    rsi,rcx
    51ff:	48 89 c7             	mov    rdi,rax
    5202:	e8 f9 d5 ff ff       	call   2800 <strcpy@plt>
    5207:	8b 05 0b be 00 00    	mov    eax,DWORD PTR [rip+0xbe0b]        # 11018 <watchlist_num>
    520d:	48 63 d0             	movsxd rdx,eax
    5210:	48 89 d0             	mov    rax,rdx
    5213:	48 c1 e0 02          	shl    rax,0x2
    5217:	48 01 d0             	add    rax,rdx
    521a:	48 c1 e0 03          	shl    rax,0x3
    521e:	48 01 d0             	add    rax,rdx
    5221:	48 c1 e0 04          	shl    rax,0x4
    5225:	48 8d 15 f4 e2 0e 00 	lea    rdx,[rip+0xee2f4]        # f3520 <watchlist>
    522c:	48 01 d0             	add    rax,rdx
    522f:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    5233:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5237:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    523a:	84 c0                	test   al,al
    523c:	74 36                	je     5274 <verify_ip_addr+0x21f>
    523e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5242:	8b 80 80 02 00 00    	mov    eax,DWORD PTR [rax+0x280]
    5248:	8d 50 01             	lea    edx,[rax+0x1]
    524b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    524f:	89 90 80 02 00 00    	mov    DWORD PTR [rax+0x280],edx
    5255:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5259:	8b 90 88 02 00 00    	mov    edx,DWORD PTR [rax+0x288]
    525f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5263:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    5266:	01 c2                	add    edx,eax
    5268:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    526c:	89 90 88 02 00 00    	mov    DWORD PTR [rax+0x288],edx
    5272:	eb 34                	jmp    52a8 <verify_ip_addr+0x253>
    5274:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5278:	8b 80 7c 02 00 00    	mov    eax,DWORD PTR [rax+0x27c]
    527e:	8d 50 01             	lea    edx,[rax+0x1]
    5281:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5285:	89 90 7c 02 00 00    	mov    DWORD PTR [rax+0x27c],edx
    528b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    528f:	8b 90 84 02 00 00    	mov    edx,DWORD PTR [rax+0x284]
    5295:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5299:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    529c:	01 c2                	add    edx,eax
    529e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52a2:	89 90 84 02 00 00    	mov    DWORD PTR [rax+0x284],edx
    52a8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52ac:	8b 90 8c 02 00 00    	mov    edx,DWORD PTR [rax+0x28c]
    52b2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    52b6:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    52b9:	01 c2                	add    edx,eax
    52bb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52bf:	89 90 8c 02 00 00    	mov    DWORD PTR [rax+0x28c],edx
    52c5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52c9:	8b 80 7c 02 00 00    	mov    eax,DWORD PTR [rax+0x27c]
    52cf:	8d 14 00             	lea    edx,[rax+rax*1]
    52d2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52d6:	89 90 58 02 00 00    	mov    DWORD PTR [rax+0x258],edx
    52dc:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    52e0:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    52e3:	83 f8 5e             	cmp    eax,0x5e
    52e6:	0f 84 9b 00 00 00    	je     5387 <verify_ip_addr+0x332>
    52ec:	83 f8 5e             	cmp    eax,0x5e
    52ef:	0f 8f cf 00 00 00    	jg     53c4 <verify_ip_addr+0x36f>
    52f5:	83 f8 5c             	cmp    eax,0x5c
    52f8:	74 0a                	je     5304 <verify_ip_addr+0x2af>
    52fa:	83 f8 5d             	cmp    eax,0x5d
    52fd:	74 48                	je     5347 <verify_ip_addr+0x2f2>
    52ff:	e9 c0 00 00 00       	jmp    53c4 <verify_ip_addr+0x36f>
    5304:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5308:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    530b:	84 c0                	test   al,al
    530d:	74 1c                	je     532b <verify_ip_addr+0x2d6>
    530f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5313:	8b 80 5c 02 00 00    	mov    eax,DWORD PTR [rax+0x25c]
    5319:	8d 50 01             	lea    edx,[rax+0x1]
    531c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5320:	89 90 5c 02 00 00    	mov    DWORD PTR [rax+0x25c],edx
    5326:	e9 d5 00 00 00       	jmp    5400 <verify_ip_addr+0x3ab>
    532b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    532f:	8b 80 68 02 00 00    	mov    eax,DWORD PTR [rax+0x268]
    5335:	8d 50 01             	lea    edx,[rax+0x1]
    5338:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    533c:	89 90 68 02 00 00    	mov    DWORD PTR [rax+0x268],edx
    5342:	e9 b9 00 00 00       	jmp    5400 <verify_ip_addr+0x3ab>
    5347:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    534b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    534e:	84 c0                	test   al,al
    5350:	74 1c                	je     536e <verify_ip_addr+0x319>
    5352:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5356:	8b 80 60 02 00 00    	mov    eax,DWORD PTR [rax+0x260]
    535c:	8d 50 01             	lea    edx,[rax+0x1]
    535f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5363:	89 90 60 02 00 00    	mov    DWORD PTR [rax+0x260],edx
    5369:	e9 92 00 00 00       	jmp    5400 <verify_ip_addr+0x3ab>
    536e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5372:	8b 80 6c 02 00 00    	mov    eax,DWORD PTR [rax+0x26c]
    5378:	8d 50 01             	lea    edx,[rax+0x1]
    537b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    537f:	89 90 6c 02 00 00    	mov    DWORD PTR [rax+0x26c],edx
    5385:	eb 79                	jmp    5400 <verify_ip_addr+0x3ab>
    5387:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    538b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    538e:	84 c0                	test   al,al
    5390:	74 19                	je     53ab <verify_ip_addr+0x356>
    5392:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5396:	8b 80 64 02 00 00    	mov    eax,DWORD PTR [rax+0x264]
    539c:	8d 50 01             	lea    edx,[rax+0x1]
    539f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53a3:	89 90 64 02 00 00    	mov    DWORD PTR [rax+0x264],edx
    53a9:	eb 55                	jmp    5400 <verify_ip_addr+0x3ab>
    53ab:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53af:	8b 80 70 02 00 00    	mov    eax,DWORD PTR [rax+0x270]
    53b5:	8d 50 01             	lea    edx,[rax+0x1]
    53b8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53bc:	89 90 70 02 00 00    	mov    DWORD PTR [rax+0x270],edx
    53c2:	eb 3c                	jmp    5400 <verify_ip_addr+0x3ab>
    53c4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    53c8:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    53cb:	84 c0                	test   al,al
    53cd:	74 19                	je     53e8 <verify_ip_addr+0x393>
    53cf:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53d3:	8b 80 74 02 00 00    	mov    eax,DWORD PTR [rax+0x274]
    53d9:	8d 50 01             	lea    edx,[rax+0x1]
    53dc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53e0:	89 90 74 02 00 00    	mov    DWORD PTR [rax+0x274],edx
    53e6:	eb 17                	jmp    53ff <verify_ip_addr+0x3aa>
    53e8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53ec:	8b 80 78 02 00 00    	mov    eax,DWORD PTR [rax+0x278]
    53f2:	8d 50 01             	lea    edx,[rax+0x1]
    53f5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53f9:	89 90 78 02 00 00    	mov    DWORD PTR [rax+0x278],edx
    53ff:	90                   	nop
    5400:	b8 01 00 00 00       	mov    eax,0x1
    5405:	c9                   	leave  
    5406:	c3                   	ret    

0000000000005407 <ascii_hexdump>:
    5407:	f3 0f 1e fa          	endbr64 
    540b:	55                   	push   rbp
    540c:	48 89 e5             	mov    rbp,rsp
    540f:	48 83 ec 20          	sub    rsp,0x20
    5413:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    5417:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    541a:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    5421:	eb 52                	jmp    5475 <ascii_hexdump+0x6e>
    5423:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5426:	48 63 d0             	movsxd rdx,eax
    5429:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    542d:	48 01 d0             	add    rax,rdx
    5430:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5433:	3c 20                	cmp    al,0x20
    5435:	76 30                	jbe    5467 <ascii_hexdump+0x60>
    5437:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    543a:	48 63 d0             	movsxd rdx,eax
    543d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5441:	48 01 d0             	add    rax,rdx
    5444:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5447:	3c 7e                	cmp    al,0x7e
    5449:	77 1c                	ja     5467 <ascii_hexdump+0x60>
    544b:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    544e:	48 63 d0             	movsxd rdx,eax
    5451:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5455:	48 01 d0             	add    rax,rdx
    5458:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    545b:	0f b6 c0             	movzx  eax,al
    545e:	89 c7                	mov    edi,eax
    5460:	e8 fb d0 ff ff       	call   2560 <putchar@plt>
    5465:	eb 0a                	jmp    5471 <ascii_hexdump+0x6a>
    5467:	bf 2e 00 00 00       	mov    edi,0x2e
    546c:	e8 ef d0 ff ff       	call   2560 <putchar@plt>
    5471:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    5475:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5478:	3b 45 e4             	cmp    eax,DWORD PTR [rbp-0x1c]
    547b:	7c a6                	jl     5423 <ascii_hexdump+0x1c>
    547d:	bf 0a 00 00 00       	mov    edi,0xa
    5482:	e8 d9 d0 ff ff       	call   2560 <putchar@plt>
    5487:	90                   	nop
    5488:	c9                   	leave  
    5489:	c3                   	ret    

000000000000548a <stdout_alert>:
    548a:	f3 0f 1e fa          	endbr64 
    548e:	55                   	push   rbp
    548f:	48 89 e5             	mov    rbp,rsp
    5492:	53                   	push   rbx
    5493:	48 81 ec c8 01 00 00 	sub    rsp,0x1c8
    549a:	48 89 bd 48 fe ff ff 	mov    QWORD PTR [rbp-0x1b8],rdi
    54a1:	48 89 b5 40 fe ff ff 	mov    QWORD PTR [rbp-0x1c0],rsi
    54a8:	89 95 3c fe ff ff    	mov    DWORD PTR [rbp-0x1c4],edx
    54ae:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    54b5:	00 00 
    54b7:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    54bb:	31 c0                	xor    eax,eax
    54bd:	bf 00 00 00 00       	mov    edi,0x0
    54c2:	e8 49 d4 ff ff       	call   2910 <time@plt>
    54c7:	48 89 85 50 fe ff ff 	mov    QWORD PTR [rbp-0x1b0],rax
    54ce:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
    54d5:	48 89 c7             	mov    rdi,rax
    54d8:	e8 f3 d3 ff ff       	call   28d0 <localtime@plt>
    54dd:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    54e0:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    54e4:	48 89 8d 60 fe ff ff 	mov    QWORD PTR [rbp-0x1a0],rcx
    54eb:	48 89 9d 68 fe ff ff 	mov    QWORD PTR [rbp-0x198],rbx
    54f2:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    54f6:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    54fa:	48 89 8d 70 fe ff ff 	mov    QWORD PTR [rbp-0x190],rcx
    5501:	48 89 9d 78 fe ff ff 	mov    QWORD PTR [rbp-0x188],rbx
    5508:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    550c:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    5510:	48 89 8d 80 fe ff ff 	mov    QWORD PTR [rbp-0x180],rcx
    5517:	48 89 9d 88 fe ff ff 	mov    QWORD PTR [rbp-0x178],rbx
    551e:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    5522:	48 89 85 90 fe ff ff 	mov    QWORD PTR [rbp-0x170],rax
    5529:	8b bd 60 fe ff ff    	mov    edi,DWORD PTR [rbp-0x1a0]
    552f:	8b b5 64 fe ff ff    	mov    esi,DWORD PTR [rbp-0x19c]
    5535:	44 8b 8d 68 fe ff ff 	mov    r9d,DWORD PTR [rbp-0x198]
    553c:	44 8b 85 6c fe ff ff 	mov    r8d,DWORD PTR [rbp-0x194]
    5543:	8b 85 70 fe ff ff    	mov    eax,DWORD PTR [rbp-0x190]
    5549:	8d 48 01             	lea    ecx,[rax+0x1]
    554c:	8b 85 74 fe ff ff    	mov    eax,DWORD PTR [rbp-0x18c]
    5552:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    5558:	48 8d 85 a0 fe ff ff 	lea    rax,[rbp-0x160]
    555f:	57                   	push   rdi
    5560:	56                   	push   rsi
    5561:	48 8d 35 5e 75 00 00 	lea    rsi,[rip+0x755e]        # cac6 <_IO_stdin_used+0xac6>
    5568:	48 89 c7             	mov    rdi,rax
    556b:	b8 00 00 00 00       	mov    eax,0x0
    5570:	e8 1b d1 ff ff       	call   2690 <sprintf@plt>
    5575:	48 83 c4 10          	add    rsp,0x10
    5579:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    5580:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    5583:	3d 80 00 00 00       	cmp    eax,0x80
    5588:	75 4e                	jne    55d8 <stdout_alert+0x14e>
    558a:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    5591:	48 8b 78 10          	mov    rdi,QWORD PTR [rax+0x10]
    5595:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    559c:	48 8b 70 08          	mov    rsi,QWORD PTR [rax+0x8]
    55a0:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
    55a7:	48 8d 88 50 01 00 00 	lea    rcx,[rax+0x150]
    55ae:	48 8d 95 a0 fe ff ff 	lea    rdx,[rbp-0x160]
    55b5:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    55bc:	49 89 f9             	mov    r9,rdi
    55bf:	49 89 f0             	mov    r8,rsi
    55c2:	48 8d 35 19 75 00 00 	lea    rsi,[rip+0x7519]        # cae2 <_IO_stdin_used+0xae2>
    55c9:	48 89 c7             	mov    rdi,rax
    55cc:	b8 00 00 00 00       	mov    eax,0x0
    55d1:	e8 ba d0 ff ff       	call   2690 <sprintf@plt>
    55d6:	eb 61                	jmp    5639 <stdout_alert+0x1af>
    55d8:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    55df:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    55e2:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    55e9:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    55ed:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    55f4:	44 8b 48 24          	mov    r9d,DWORD PTR [rax+0x24]
    55f8:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    55ff:	4c 8b 40 08          	mov    r8,QWORD PTR [rax+0x8]
    5603:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
    560a:	48 8d 88 50 01 00 00 	lea    rcx,[rax+0x150]
    5611:	48 8d 95 a0 fe ff ff 	lea    rdx,[rbp-0x160]
    5618:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    561f:	57                   	push   rdi
    5620:	56                   	push   rsi
    5621:	48 8d 35 ca 74 00 00 	lea    rsi,[rip+0x74ca]        # caf2 <_IO_stdin_used+0xaf2>
    5628:	48 89 c7             	mov    rdi,rax
    562b:	b8 00 00 00 00       	mov    eax,0x0
    5630:	e8 5b d0 ff ff       	call   2690 <sprintf@plt>
    5635:	48 83 c4 10          	add    rsp,0x10
    5639:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    5640:	48 89 c6             	mov    rsi,rax
    5643:	48 8d 3d be 74 00 00 	lea    rdi,[rip+0x74be]        # cb08 <_IO_stdin_used+0xb08>
    564a:	b8 00 00 00 00       	mov    eax,0x0
    564f:	e8 7c ce ff ff       	call   24d0 <printf@plt>
    5654:	48 8b 05 d5 b9 00 00 	mov    rax,QWORD PTR [rip+0xb9d5]        # 11030 <def_log_file>
    565b:	48 8d 35 a9 74 00 00 	lea    rsi,[rip+0x74a9]        # cb0b <_IO_stdin_used+0xb0b>
    5662:	48 89 c7             	mov    rdi,rax
    5665:	e8 56 cf ff ff       	call   25c0 <fopen@plt>
    566a:	48 89 85 58 fe ff ff 	mov    QWORD PTR [rbp-0x1a8],rax
    5671:	48 8b 95 58 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1a8]
    5678:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    567f:	48 89 d6             	mov    rsi,rdx
    5682:	48 89 c7             	mov    rdi,rax
    5685:	e8 86 d0 ff ff       	call   2710 <fputs@plt>
    568a:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    5691:	48 89 c7             	mov    rdi,rax
    5694:	e8 a7 d1 ff ff       	call   2840 <fclose@plt>
    5699:	90                   	nop
    569a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    569e:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    56a5:	00 00 
    56a7:	74 05                	je     56ae <stdout_alert+0x224>
    56a9:	e8 12 d1 ff ff       	call   27c0 <__stack_chk_fail@plt>
    56ae:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    56b2:	c9                   	leave  
    56b3:	c3                   	ret    

00000000000056b4 <str_match_parser>:
    56b4:	f3 0f 1e fa          	endbr64 
    56b8:	55                   	push   rbp
    56b9:	48 89 e5             	mov    rbp,rsp
    56bc:	53                   	push   rbx
    56bd:	48 83 ec 48          	sub    rsp,0x48
    56c1:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    56c5:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
    56c9:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    56d0:	00 00 
    56d2:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    56d6:	31 c0                	xor    eax,eax
    56d8:	48 89 e0             	mov    rax,rsp
    56db:	48 89 c3             	mov    rbx,rax
    56de:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    56e2:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    56e5:	85 c0                	test   eax,eax
    56e7:	75 0a                	jne    56f3 <str_match_parser+0x3f>
    56e9:	b8 00 00 00 00       	mov    eax,0x0
    56ee:	e9 e1 01 00 00       	jmp    58d4 <str_match_parser+0x220>
    56f3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    56f7:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    56fa:	83 c0 01             	add    eax,0x1
    56fd:	01 c0                	add    eax,eax
    56ff:	48 98                	cdqe   
    5701:	48 83 e8 01          	sub    rax,0x1
    5705:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    5709:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    570d:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5710:	83 c0 01             	add    eax,0x1
    5713:	01 c0                	add    eax,eax
    5715:	48 98                	cdqe   
    5717:	49 89 c2             	mov    r10,rax
    571a:	41 bb 00 00 00 00    	mov    r11d,0x0
    5720:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5724:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5727:	83 c0 01             	add    eax,0x1
    572a:	01 c0                	add    eax,eax
    572c:	48 98                	cdqe   
    572e:	49 89 c0             	mov    r8,rax
    5731:	41 b9 00 00 00 00    	mov    r9d,0x0
    5737:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    573b:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    573e:	83 c0 01             	add    eax,0x1
    5741:	01 c0                	add    eax,eax
    5743:	48 98                	cdqe   
    5745:	ba 10 00 00 00       	mov    edx,0x10
    574a:	48 83 ea 01          	sub    rdx,0x1
    574e:	48 01 d0             	add    rax,rdx
    5751:	be 10 00 00 00       	mov    esi,0x10
    5756:	ba 00 00 00 00       	mov    edx,0x0
    575b:	48 f7 f6             	div    rsi
    575e:	48 6b c0 10          	imul   rax,rax,0x10
    5762:	48 89 c1             	mov    rcx,rax
    5765:	48 81 e1 00 f0 ff ff 	and    rcx,0xfffffffffffff000
    576c:	48 89 e2             	mov    rdx,rsp
    576f:	48 29 ca             	sub    rdx,rcx
    5772:	48 39 d4             	cmp    rsp,rdx
    5775:	74 12                	je     5789 <str_match_parser+0xd5>
    5777:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    577e:	48 83 8c 24 f8 0f 00 	or     QWORD PTR [rsp+0xff8],0x0
    5785:	00 00 
    5787:	eb e9                	jmp    5772 <str_match_parser+0xbe>
    5789:	48 89 c2             	mov    rdx,rax
    578c:	81 e2 ff 0f 00 00    	and    edx,0xfff
    5792:	48 29 d4             	sub    rsp,rdx
    5795:	48 89 c2             	mov    rdx,rax
    5798:	81 e2 ff 0f 00 00    	and    edx,0xfff
    579e:	48 85 d2             	test   rdx,rdx
    57a1:	74 10                	je     57b3 <str_match_parser+0xff>
    57a3:	25 ff 0f 00 00       	and    eax,0xfff
    57a8:	48 83 e8 08          	sub    rax,0x8
    57ac:	48 01 e0             	add    rax,rsp
    57af:	48 83 08 00          	or     QWORD PTR [rax],0x0
    57b3:	48 89 e0             	mov    rax,rsp
    57b6:	48 83 c0 00          	add    rax,0x0
    57ba:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    57be:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    57c2:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    57c5:	83 c0 01             	add    eax,0x1
    57c8:	01 c0                	add    eax,eax
    57ca:	48 63 d0             	movsxd rdx,eax
    57cd:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    57d1:	be 00 00 00 00       	mov    esi,0x0
    57d6:	48 89 c7             	mov    rdi,rax
    57d9:	e8 02 cd ff ff       	call   24e0 <memset@plt>
    57de:	c7 45 d4 00 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x0
    57e5:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    57e9:	8b 80 4c 03 00 00    	mov    eax,DWORD PTR [rax+0x34c]
    57ef:	85 c0                	test   eax,eax
    57f1:	74 5f                	je     5852 <str_match_parser+0x19e>
    57f3:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    57f7:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    57fa:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
    57fd:	eb 42                	jmp    5841 <str_match_parser+0x18d>
    57ff:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5803:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    5806:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
    5809:	48 98                	cdqe   
    580b:	48 01 d0             	add    rax,rdx
    580e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5811:	0f b6 d0             	movzx  edx,al
    5814:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    5817:	8d 48 01             	lea    ecx,[rax+0x1]
    581a:	89 4d d4             	mov    DWORD PTR [rbp-0x2c],ecx
    581d:	01 c0                	add    eax,eax
    581f:	48 63 c8             	movsxd rcx,eax
    5822:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    5826:	48 01 c8             	add    rax,rcx
    5829:	48 8d 35 dd 72 00 00 	lea    rsi,[rip+0x72dd]        # cb0d <_IO_stdin_used+0xb0d>
    5830:	48 89 c7             	mov    rdi,rax
    5833:	b8 00 00 00 00       	mov    eax,0x0
    5838:	e8 53 ce ff ff       	call   2690 <sprintf@plt>
    583d:	83 45 d0 01          	add    DWORD PTR [rbp-0x30],0x1
    5841:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5845:	8b 80 4c 03 00 00    	mov    eax,DWORD PTR [rax+0x34c]
    584b:	39 45 d0             	cmp    DWORD PTR [rbp-0x30],eax
    584e:	7c af                	jl     57ff <str_match_parser+0x14b>
    5850:	eb 5a                	jmp    58ac <str_match_parser+0x1f8>
    5852:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5856:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    5859:	89 45 cc             	mov    DWORD PTR [rbp-0x34],eax
    585c:	eb 42                	jmp    58a0 <str_match_parser+0x1ec>
    585e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5862:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    5865:	8b 45 cc             	mov    eax,DWORD PTR [rbp-0x34]
    5868:	48 98                	cdqe   
    586a:	48 01 d0             	add    rax,rdx
    586d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5870:	0f b6 d0             	movzx  edx,al
    5873:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    5876:	8d 48 01             	lea    ecx,[rax+0x1]
    5879:	89 4d d4             	mov    DWORD PTR [rbp-0x2c],ecx
    587c:	01 c0                	add    eax,eax
    587e:	48 63 c8             	movsxd rcx,eax
    5881:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    5885:	48 01 c8             	add    rax,rcx
    5888:	48 8d 35 7e 72 00 00 	lea    rsi,[rip+0x727e]        # cb0d <_IO_stdin_used+0xb0d>
    588f:	48 89 c7             	mov    rdi,rax
    5892:	b8 00 00 00 00       	mov    eax,0x0
    5897:	e8 f4 cd ff ff       	call   2690 <sprintf@plt>
    589c:	83 45 cc 01          	add    DWORD PTR [rbp-0x34],0x1
    58a0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    58a4:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    58a7:	39 45 cc             	cmp    DWORD PTR [rbp-0x34],eax
    58aa:	7c b2                	jl     585e <str_match_parser+0x1aa>
    58ac:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    58b0:	48 8d 50 40          	lea    rdx,[rax+0x40]
    58b4:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    58b8:	48 89 d6             	mov    rsi,rdx
    58bb:	48 89 c7             	mov    rdi,rax
    58be:	e8 2d ce ff ff       	call   26f0 <strstr@plt>
    58c3:	48 85 c0             	test   rax,rax
    58c6:	74 07                	je     58cf <str_match_parser+0x21b>
    58c8:	b8 01 00 00 00       	mov    eax,0x1
    58cd:	eb 05                	jmp    58d4 <str_match_parser+0x220>
    58cf:	b8 00 00 00 00       	mov    eax,0x0
    58d4:	48 89 dc             	mov    rsp,rbx
    58d7:	48 8b 5d e8          	mov    rbx,QWORD PTR [rbp-0x18]
    58db:	64 48 2b 1c 25 28 00 	sub    rbx,QWORD PTR fs:0x28
    58e2:	00 00 
    58e4:	74 05                	je     58eb <str_match_parser+0x237>
    58e6:	e8 d5 ce ff ff       	call   27c0 <__stack_chk_fail@plt>
    58eb:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    58ef:	c9                   	leave  
    58f0:	c3                   	ret    

00000000000058f1 <is_blocked_ipv4>:
    58f1:	f3 0f 1e fa          	endbr64 
    58f5:	55                   	push   rbp
    58f6:	48 89 e5             	mov    rbp,rsp
    58f9:	48 83 ec 20          	sub    rsp,0x20
    58fd:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    5901:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    5908:	eb 3b                	jmp    5945 <is_blocked_ipv4+0x54>
    590a:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    590d:	48 63 d0             	movsxd rdx,eax
    5910:	48 89 d0             	mov    rax,rdx
    5913:	48 c1 e0 03          	shl    rax,0x3
    5917:	48 01 d0             	add    rax,rdx
    591a:	48 01 c0             	add    rax,rax
    591d:	48 8d 15 bc d9 0e 00 	lea    rdx,[rip+0xed9bc]        # f32e0 <blocked_ipv4_addrs>
    5924:	48 01 c2             	add    rdx,rax
    5927:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    592b:	48 89 d6             	mov    rsi,rdx
    592e:	48 89 c7             	mov    rdi,rax
    5931:	e8 9a ce ff ff       	call   27d0 <strcmp@plt>
    5936:	85 c0                	test   eax,eax
    5938:	75 07                	jne    5941 <is_blocked_ipv4+0x50>
    593a:	b8 01 00 00 00       	mov    eax,0x1
    593f:	eb 14                	jmp    5955 <is_blocked_ipv4+0x64>
    5941:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    5945:	8b 05 c5 b6 00 00    	mov    eax,DWORD PTR [rip+0xb6c5]        # 11010 <blk_ipv4_len>
    594b:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    594e:	7e ba                	jle    590a <is_blocked_ipv4+0x19>
    5950:	b8 00 00 00 00       	mov    eax,0x0
    5955:	c9                   	leave  
    5956:	c3                   	ret    

0000000000005957 <none>:
    5957:	f3 0f 1e fa          	endbr64 
    595b:	55                   	push   rbp
    595c:	48 89 e5             	mov    rbp,rsp
    595f:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5963:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    5967:	b8 01 00 00 00       	mov    eax,0x1
    596c:	5d                   	pop    rbp
    596d:	c3                   	ret    

000000000000596e <pcre_match>:
    596e:	f3 0f 1e fa          	endbr64 
    5972:	55                   	push   rbp
    5973:	48 89 e5             	mov    rbp,rsp
    5976:	48 83 ec 10          	sub    rsp,0x10
    597a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    597e:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    5982:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5986:	48 8b 00             	mov    rax,QWORD PTR [rax]
    5989:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    598d:	48 8d ba d0 01 00 00 	lea    rdi,[rdx+0x1d0]
    5994:	41 b8 00 00 00 00    	mov    r8d,0x0
    599a:	b9 00 00 00 00       	mov    ecx,0x0
    599f:	ba 00 00 00 00       	mov    edx,0x0
    59a4:	48 89 c6             	mov    rsi,rax
    59a7:	e8 24 cc ff ff       	call   25d0 <regexec@plt>
    59ac:	83 f8 01             	cmp    eax,0x1
    59af:	75 07                	jne    59b8 <pcre_match+0x4a>
    59b1:	b8 00 00 00 00       	mov    eax,0x0
    59b6:	eb 05                	jmp    59bd <pcre_match+0x4f>
    59b8:	b8 01 00 00 00       	mov    eax,0x1
    59bd:	c9                   	leave  
    59be:	c3                   	ret    

00000000000059bf <rule_library_parser>:
    59bf:	f3 0f 1e fa          	endbr64 
    59c3:	55                   	push   rbp
    59c4:	48 89 e5             	mov    rbp,rsp
    59c7:	53                   	push   rbx
    59c8:	48 83 ec 48          	sub    rsp,0x48
    59cc:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    59d0:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    59d7:	00 00 
    59d9:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    59dd:	31 c0                	xor    eax,eax
    59df:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    59e3:	48 8d 35 2e 71 00 00 	lea    rsi,[rip+0x712e]        # cb18 <_IO_stdin_used+0xb18>
    59ea:	48 89 c7             	mov    rdi,rax
    59ed:	e8 ce cb ff ff       	call   25c0 <fopen@plt>
    59f2:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    59f6:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    59fb:	75 22                	jne    5a1f <rule_library_parser+0x60>
    59fd:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5a01:	48 89 c6             	mov    rsi,rax
    5a04:	48 8d 3d 15 71 00 00 	lea    rdi,[rip+0x7115]        # cb20 <_IO_stdin_used+0xb20>
    5a0b:	b8 00 00 00 00       	mov    eax,0x0
    5a10:	e8 bb ca ff ff       	call   24d0 <printf@plt>
    5a15:	bf 01 00 00 00       	mov    edi,0x1
    5a1a:	e8 31 cb ff ff       	call   2550 <exit@plt>
    5a1f:	48 c7 45 c8 00 00 00 	mov    QWORD PTR [rbp-0x38],0x0
    5a26:	00 
    5a27:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    5a2e:	00 
    5a2f:	e9 70 05 00 00       	jmp    5fa4 <rule_library_parser+0x5e5>
    5a34:	48 8b 5d d0          	mov    rbx,QWORD PTR [rbp-0x30]
    5a38:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a3c:	48 8d 35 03 71 00 00 	lea    rsi,[rip+0x7103]        # cb46 <_IO_stdin_used+0xb46>
    5a43:	48 89 c7             	mov    rdi,rax
    5a46:	e8 25 ce ff ff       	call   2870 <strcspn@plt>
    5a4b:	48 01 d8             	add    rax,rbx
    5a4e:	c6 00 00             	mov    BYTE PTR [rax],0x0
    5a51:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a55:	48 89 c7             	mov    rdi,rax
    5a58:	e8 b9 05 00 00       	call   6016 <is_comment>
    5a5d:	84 c0                	test   al,al
    5a5f:	74 05                	je     5a66 <rule_library_parser+0xa7>
    5a61:	e9 3e 05 00 00       	jmp    5fa4 <rule_library_parser+0x5e5>
    5a66:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a6a:	ba 1a 00 00 00       	mov    edx,0x1a
    5a6f:	48 8d 35 d2 70 00 00 	lea    rsi,[rip+0x70d2]        # cb48 <_IO_stdin_used+0xb48>
    5a76:	48 89 c7             	mov    rdi,rax
    5a79:	e8 22 cb ff ff       	call   25a0 <strncmp@plt>
    5a7e:	85 c0                	test   eax,eax
    5a80:	75 39                	jne    5abb <rule_library_parser+0xfc>
    5a82:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a86:	48 83 c0 1a          	add    rax,0x1a
    5a8a:	48 8d 35 d2 70 00 00 	lea    rsi,[rip+0x70d2]        # cb63 <_IO_stdin_used+0xb63>
    5a91:	48 89 c7             	mov    rdi,rax
    5a94:	e8 37 cd ff ff       	call   27d0 <strcmp@plt>
    5a99:	85 c0                	test   eax,eax
    5a9b:	75 0f                	jne    5aac <rule_library_parser+0xed>
    5a9d:	c7 05 dd b5 00 00 01 	mov    DWORD PTR [rip+0xb5dd],0x1        # 11084 <strict_icmp_timestamp_req>
    5aa4:	00 00 00 
    5aa7:	e9 e2 04 00 00       	jmp    5f8e <rule_library_parser+0x5cf>
    5aac:	c7 05 ce b5 00 00 00 	mov    DWORD PTR [rip+0xb5ce],0x0        # 11084 <strict_icmp_timestamp_req>
    5ab3:	00 00 00 
    5ab6:	e9 d3 04 00 00       	jmp    5f8e <rule_library_parser+0x5cf>
    5abb:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5abf:	ba 1d 00 00 00       	mov    edx,0x1d
    5ac4:	48 8d 35 9c 70 00 00 	lea    rsi,[rip+0x709c]        # cb67 <_IO_stdin_used+0xb67>
    5acb:	48 89 c7             	mov    rdi,rax
    5ace:	e8 cd ca ff ff       	call   25a0 <strncmp@plt>
    5ad3:	85 c0                	test   eax,eax
    5ad5:	75 39                	jne    5b10 <rule_library_parser+0x151>
    5ad7:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5adb:	48 83 c0 1d          	add    rax,0x1d
    5adf:	48 8d 35 7d 70 00 00 	lea    rsi,[rip+0x707d]        # cb63 <_IO_stdin_used+0xb63>
    5ae6:	48 89 c7             	mov    rdi,rax
    5ae9:	e8 e2 cc ff ff       	call   27d0 <strcmp@plt>
    5aee:	85 c0                	test   eax,eax
    5af0:	75 0f                	jne    5b01 <rule_library_parser+0x142>
    5af2:	c7 05 8c b5 00 00 01 	mov    DWORD PTR [rip+0xb58c],0x1        # 11088 <strict_nmap_host_alive_check>
    5af9:	00 00 00 
    5afc:	e9 8d 04 00 00       	jmp    5f8e <rule_library_parser+0x5cf>
    5b01:	c7 05 7d b5 00 00 00 	mov    DWORD PTR [rip+0xb57d],0x0        # 11088 <strict_nmap_host_alive_check>
    5b08:	00 00 00 
    5b0b:	e9 7e 04 00 00       	jmp    5f8e <rule_library_parser+0x5cf>
    5b10:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b14:	ba 17 00 00 00       	mov    edx,0x17
    5b19:	48 8d 35 65 70 00 00 	lea    rsi,[rip+0x7065]        # cb85 <_IO_stdin_used+0xb85>
    5b20:	48 89 c7             	mov    rdi,rax
    5b23:	e8 78 ca ff ff       	call   25a0 <strncmp@plt>
    5b28:	85 c0                	test   eax,eax
    5b2a:	75 43                	jne    5b6f <rule_library_parser+0x1b0>
    5b2c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b30:	48 89 c7             	mov    rdi,rax
    5b33:	e8 18 cb ff ff       	call   2650 <strlen@plt>
    5b38:	48 83 f8 17          	cmp    rax,0x17
    5b3c:	77 16                	ja     5b54 <rule_library_parser+0x195>
    5b3e:	48 8d 3d 58 70 00 00 	lea    rdi,[rip+0x7058]        # cb9d <_IO_stdin_used+0xb9d>
    5b45:	e8 e6 c9 ff ff       	call   2530 <puts@plt>
    5b4a:	bf 01 00 00 00       	mov    edi,0x1
    5b4f:	e8 fc c9 ff ff       	call   2550 <exit@plt>
    5b54:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b58:	48 83 c0 17          	add    rax,0x17
    5b5c:	48 89 c7             	mov    rdi,rax
    5b5f:	e8 dc cb ff ff       	call   2740 <atoi@plt>
    5b64:	89 05 f6 43 10 00    	mov    DWORD PTR [rip+0x1043f6],eax        # 109f60 <clean_delay_pkts>
    5b6a:	e9 1f 04 00 00       	jmp    5f8e <rule_library_parser+0x5cf>
    5b6f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b73:	ba 18 00 00 00       	mov    edx,0x18
    5b78:	48 8d 35 38 70 00 00 	lea    rsi,[rip+0x7038]        # cbb7 <_IO_stdin_used+0xbb7>
    5b7f:	48 89 c7             	mov    rdi,rax
    5b82:	e8 19 ca ff ff       	call   25a0 <strncmp@plt>
    5b87:	85 c0                	test   eax,eax
    5b89:	75 46                	jne    5bd1 <rule_library_parser+0x212>
    5b8b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b8f:	48 89 c7             	mov    rdi,rax
    5b92:	e8 b9 ca ff ff       	call   2650 <strlen@plt>
    5b97:	48 83 f8 18          	cmp    rax,0x18
    5b9b:	75 16                	jne    5bb3 <rule_library_parser+0x1f4>
    5b9d:	48 8d 3d f9 6f 00 00 	lea    rdi,[rip+0x6ff9]        # cb9d <_IO_stdin_used+0xb9d>
    5ba4:	e8 87 c9 ff ff       	call   2530 <puts@plt>
    5ba9:	bf 01 00 00 00       	mov    edi,0x1
    5bae:	e8 9d c9 ff ff       	call   2550 <exit@plt>
    5bb3:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5bb7:	48 83 c0 18          	add    rax,0x18
    5bbb:	48 89 c7             	mov    rdi,rax
    5bbe:	e8 7d cb ff ff       	call   2740 <atoi@plt>
    5bc3:	48 98                	cdqe   
    5bc5:	48 89 05 ec b6 00 00 	mov    QWORD PTR [rip+0xb6ec],rax        # 112b8 <clean_delay>
    5bcc:	e9 bd 03 00 00       	jmp    5f8e <rule_library_parser+0x5cf>
    5bd1:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5bd5:	ba 0b 00 00 00       	mov    edx,0xb
    5bda:	48 8d 35 ef 6f 00 00 	lea    rsi,[rip+0x6fef]        # cbd0 <_IO_stdin_used+0xbd0>
    5be1:	48 89 c7             	mov    rdi,rax
    5be4:	e8 b7 c9 ff ff       	call   25a0 <strncmp@plt>
    5be9:	85 c0                	test   eax,eax
    5beb:	75 33                	jne    5c20 <rule_library_parser+0x261>
    5bed:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5bf1:	48 83 c0 0b          	add    rax,0xb
    5bf5:	48 8d 35 67 6f 00 00 	lea    rsi,[rip+0x6f67]        # cb63 <_IO_stdin_used+0xb63>
    5bfc:	48 89 c7             	mov    rdi,rax
    5bff:	e8 cc cb ff ff       	call   27d0 <strcmp@plt>
    5c04:	85 c0                	test   eax,eax
    5c06:	75 0c                	jne    5c14 <rule_library_parser+0x255>
    5c08:	c6 05 12 43 10 00 01 	mov    BYTE PTR [rip+0x104312],0x1        # 109f21 <use_sqlite>
    5c0f:	e9 7a 03 00 00       	jmp    5f8e <rule_library_parser+0x5cf>
    5c14:	c6 05 06 43 10 00 00 	mov    BYTE PTR [rip+0x104306],0x0        # 109f21 <use_sqlite>
    5c1b:	e9 6e 03 00 00       	jmp    5f8e <rule_library_parser+0x5cf>
    5c20:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c24:	ba 15 00 00 00       	mov    edx,0x15
    5c29:	48 8d 35 ac 6f 00 00 	lea    rsi,[rip+0x6fac]        # cbdc <_IO_stdin_used+0xbdc>
    5c30:	48 89 c7             	mov    rdi,rax
    5c33:	e8 68 c9 ff ff       	call   25a0 <strncmp@plt>
    5c38:	85 c0                	test   eax,eax
    5c3a:	75 34                	jne    5c70 <rule_library_parser+0x2b1>
    5c3c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c40:	48 83 c0 15          	add    rax,0x15
    5c44:	48 89 c6             	mov    rsi,rax
    5c47:	48 8d 3d f2 42 10 00 	lea    rdi,[rip+0x1042f2]        # 109f40 <sqlite_db_path>
    5c4e:	e8 ad cb ff ff       	call   2800 <strcpy@plt>
    5c53:	48 8d 35 e6 42 10 00 	lea    rsi,[rip+0x1042e6]        # 109f40 <sqlite_db_path>
    5c5a:	48 8d 3d 91 6f 00 00 	lea    rdi,[rip+0x6f91]        # cbf2 <_IO_stdin_used+0xbf2>
    5c61:	b8 00 00 00 00       	mov    eax,0x0
    5c66:	e8 a4 2c 00 00       	call   890f <livedebug>
    5c6b:	e9 1e 03 00 00       	jmp    5f8e <rule_library_parser+0x5cf>
    5c70:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c74:	ba 0b 00 00 00       	mov    edx,0xb
    5c79:	48 8d 35 8b 6f 00 00 	lea    rsi,[rip+0x6f8b]        # cc0b <_IO_stdin_used+0xc0b>
    5c80:	48 89 c7             	mov    rdi,rax
    5c83:	e8 18 c9 ff ff       	call   25a0 <strncmp@plt>
    5c88:	85 c0                	test   eax,eax
    5c8a:	75 34                	jne    5cc0 <rule_library_parser+0x301>
    5c8c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c90:	48 83 c0 0b          	add    rax,0xb
    5c94:	48 89 c6             	mov    rsi,rax
    5c97:	48 8d 3d d2 42 10 00 	lea    rdi,[rip+0x1042d2]        # 109f70 <input_adapter>
    5c9e:	e8 5d cb ff ff       	call   2800 <strcpy@plt>
    5ca3:	48 8d 35 c6 42 10 00 	lea    rsi,[rip+0x1042c6]        # 109f70 <input_adapter>
    5caa:	48 8d 3d 67 6f 00 00 	lea    rdi,[rip+0x6f67]        # cc18 <_IO_stdin_used+0xc18>
    5cb1:	b8 00 00 00 00       	mov    eax,0x0
    5cb6:	e8 54 2c 00 00       	call   890f <livedebug>
    5cbb:	e9 ce 02 00 00       	jmp    5f8e <rule_library_parser+0x5cf>
    5cc0:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5cc4:	ba 0c 00 00 00       	mov    edx,0xc
    5cc9:	48 8d 35 7b 6f 00 00 	lea    rsi,[rip+0x6f7b]        # cc4b <_IO_stdin_used+0xc4b>
    5cd0:	48 89 c7             	mov    rdi,rax
    5cd3:	e8 c8 c8 ff ff       	call   25a0 <strncmp@plt>
    5cd8:	85 c0                	test   eax,eax
    5cda:	75 34                	jne    5d10 <rule_library_parser+0x351>
    5cdc:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ce0:	48 83 c0 0c          	add    rax,0xc
    5ce4:	48 89 c6             	mov    rsi,rax
    5ce7:	48 8d 3d 92 42 10 00 	lea    rdi,[rip+0x104292]        # 109f80 <output_adapter>
    5cee:	e8 0d cb ff ff       	call   2800 <strcpy@plt>
    5cf3:	48 8d 35 86 42 10 00 	lea    rsi,[rip+0x104286]        # 109f80 <output_adapter>
    5cfa:	48 8d 3d 57 6f 00 00 	lea    rdi,[rip+0x6f57]        # cc58 <_IO_stdin_used+0xc58>
    5d01:	b8 00 00 00 00       	mov    eax,0x0
    5d06:	e8 04 2c 00 00       	call   890f <livedebug>
    5d0b:	e9 7e 02 00 00       	jmp    5f8e <rule_library_parser+0x5cf>
    5d10:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d14:	ba 05 00 00 00       	mov    edx,0x5
    5d19:	48 8d 35 6c 6f 00 00 	lea    rsi,[rip+0x6f6c]        # cc8c <_IO_stdin_used+0xc8c>
    5d20:	48 89 c7             	mov    rdi,rax
    5d23:	e8 78 c8 ff ff       	call   25a0 <strncmp@plt>
    5d28:	85 c0                	test   eax,eax
    5d2a:	0f 85 81 00 00 00    	jne    5db1 <rule_library_parser+0x3f2>
    5d30:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d34:	48 83 c0 05          	add    rax,0x5
    5d38:	48 89 c6             	mov    rsi,rax
    5d3b:	48 8d 3d 50 6f 00 00 	lea    rdi,[rip+0x6f50]        # cc92 <_IO_stdin_used+0xc92>
    5d42:	b8 00 00 00 00       	mov    eax,0x0
    5d47:	e8 c3 2b 00 00       	call   890f <livedebug>
    5d4c:	48 8d 3d 48 6f 00 00 	lea    rdi,[rip+0x6f48]        # cc9b <_IO_stdin_used+0xc9b>
    5d53:	b8 00 00 00 00       	mov    eax,0x0
    5d58:	e8 73 c7 ff ff       	call   24d0 <printf@plt>
    5d5d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d61:	48 83 c0 05          	add    rax,0x5
    5d65:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5d68:	0f b6 15 38 6f 00 00 	movzx  edx,BYTE PTR [rip+0x6f38]        # cca7 <_IO_stdin_used+0xca7>
    5d6f:	0f b6 c0             	movzx  eax,al
    5d72:	0f b6 d2             	movzx  edx,dl
    5d75:	29 d0                	sub    eax,edx
    5d77:	85 c0                	test   eax,eax
    5d79:	75 1b                	jne    5d96 <rule_library_parser+0x3d7>
    5d7b:	c7 05 9f b2 00 00 02 	mov    DWORD PTR [rip+0xb29f],0x2        # 11024 <VIGIL_MODE>
    5d82:	00 00 00 
    5d85:	48 8d 3d 1d 6f 00 00 	lea    rdi,[rip+0x6f1d]        # cca9 <_IO_stdin_used+0xca9>
    5d8c:	e8 9f c7 ff ff       	call   2530 <puts@plt>
    5d91:	e9 f8 01 00 00       	jmp    5f8e <rule_library_parser+0x5cf>
    5d96:	c7 05 84 b2 00 00 01 	mov    DWORD PTR [rip+0xb284],0x1        # 11024 <VIGIL_MODE>
    5d9d:	00 00 00 
    5da0:	48 8d 3d 19 6f 00 00 	lea    rdi,[rip+0x6f19]        # ccc0 <_IO_stdin_used+0xcc0>
    5da7:	e8 84 c7 ff ff       	call   2530 <puts@plt>
    5dac:	e9 dd 01 00 00       	jmp    5f8e <rule_library_parser+0x5cf>
    5db1:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5db5:	ba 08 00 00 00       	mov    edx,0x8
    5dba:	48 8d 35 16 6f 00 00 	lea    rsi,[rip+0x6f16]        # ccd7 <_IO_stdin_used+0xcd7>
    5dc1:	48 89 c7             	mov    rdi,rax
    5dc4:	e8 d7 c7 ff ff       	call   25a0 <strncmp@plt>
    5dc9:	85 c0                	test   eax,eax
    5dcb:	75 34                	jne    5e01 <rule_library_parser+0x442>
    5dcd:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5dd1:	48 83 c0 08          	add    rax,0x8
    5dd5:	48 89 c6             	mov    rsi,rax
    5dd8:	48 8d 3d b1 41 10 00 	lea    rdi,[rip+0x1041b1]        # 109f90 <local_ip>
    5ddf:	e8 1c ca ff ff       	call   2800 <strcpy@plt>
    5de4:	48 8d 35 a5 41 10 00 	lea    rsi,[rip+0x1041a5]        # 109f90 <local_ip>
    5deb:	48 8d 3d ee 6e 00 00 	lea    rdi,[rip+0x6eee]        # cce0 <_IO_stdin_used+0xce0>
    5df2:	b8 00 00 00 00       	mov    eax,0x0
    5df7:	e8 13 2b 00 00       	call   890f <livedebug>
    5dfc:	e9 8d 01 00 00       	jmp    5f8e <rule_library_parser+0x5cf>
    5e01:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e05:	ba 06 00 00 00       	mov    edx,0x6
    5e0a:	48 8d 35 ea 6e 00 00 	lea    rsi,[rip+0x6eea]        # ccfb <_IO_stdin_used+0xcfb>
    5e11:	48 89 c7             	mov    rdi,rax
    5e14:	e8 87 c7 ff ff       	call   25a0 <strncmp@plt>
    5e19:	85 c0                	test   eax,eax
    5e1b:	75 1c                	jne    5e39 <rule_library_parser+0x47a>
    5e1d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e21:	48 83 c0 06          	add    rax,0x6
    5e25:	48 89 c6             	mov    rsi,rax
    5e28:	48 8d 3d 81 41 10 00 	lea    rdi,[rip+0x104181]        # 109fb0 <def_gw>
    5e2f:	e8 cc c9 ff ff       	call   2800 <strcpy@plt>
    5e34:	e9 55 01 00 00       	jmp    5f8e <rule_library_parser+0x5cf>
    5e39:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e3d:	ba 08 00 00 00       	mov    edx,0x8
    5e42:	48 8d 35 b9 6e 00 00 	lea    rsi,[rip+0x6eb9]        # cd02 <_IO_stdin_used+0xd02>
    5e49:	48 89 c7             	mov    rdi,rax
    5e4c:	e8 4f c7 ff ff       	call   25a0 <strncmp@plt>
    5e51:	85 c0                	test   eax,eax
    5e53:	75 3f                	jne    5e94 <rule_library_parser+0x4d5>
    5e55:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e59:	48 83 c0 08          	add    rax,0x8
    5e5d:	48 8d 35 ff 6c 00 00 	lea    rsi,[rip+0x6cff]        # cb63 <_IO_stdin_used+0xb63>
    5e64:	48 89 c7             	mov    rdi,rax
    5e67:	e8 64 c9 ff ff       	call   27d0 <strcmp@plt>
    5e6c:	85 c0                	test   eax,eax
    5e6e:	75 18                	jne    5e88 <rule_library_parser+0x4c9>
    5e70:	c6 05 4b 41 10 00 01 	mov    BYTE PTR [rip+0x10414b],0x1        # 109fc2 <use_spi>
    5e77:	48 8d 3d 8d 6e 00 00 	lea    rdi,[rip+0x6e8d]        # cd0b <_IO_stdin_used+0xd0b>
    5e7e:	e8 ad c6 ff ff       	call   2530 <puts@plt>
    5e83:	e9 06 01 00 00       	jmp    5f8e <rule_library_parser+0x5cf>
    5e88:	c6 05 33 41 10 00 00 	mov    BYTE PTR [rip+0x104133],0x0        # 109fc2 <use_spi>
    5e8f:	e9 fa 00 00 00       	jmp    5f8e <rule_library_parser+0x5cf>
    5e94:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e98:	ba 09 00 00 00       	mov    edx,0x9
    5e9d:	48 8d 35 80 6e 00 00 	lea    rsi,[rip+0x6e80]        # cd24 <_IO_stdin_used+0xd24>
    5ea4:	48 89 c7             	mov    rdi,rax
    5ea7:	e8 f4 c6 ff ff       	call   25a0 <strncmp@plt>
    5eac:	85 c0                	test   eax,eax
    5eae:	75 27                	jne    5ed7 <rule_library_parser+0x518>
    5eb0:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5eb4:	48 89 c7             	mov    rdi,rax
    5eb7:	e8 83 01 00 00       	call   603f <rstrip>
    5ebc:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ec0:	48 83 c0 09          	add    rax,0x9
    5ec4:	48 89 c7             	mov    rdi,rax
    5ec7:	e8 fc 4f 00 00       	call   aec8 <homenet_toi>
    5ecc:	89 05 f2 40 10 00    	mov    DWORD PTR [rip+0x1040f2],eax        # 109fc4 <homenet>
    5ed2:	e9 b7 00 00 00       	jmp    5f8e <rule_library_parser+0x5cf>
    5ed7:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5edb:	ba 0e 00 00 00       	mov    edx,0xe
    5ee0:	48 8d 35 47 6e 00 00 	lea    rsi,[rip+0x6e47]        # cd2e <_IO_stdin_used+0xd2e>
    5ee7:	48 89 c7             	mov    rdi,rax
    5eea:	e8 b1 c6 ff ff       	call   25a0 <strncmp@plt>
    5eef:	85 c0                	test   eax,eax
    5ef1:	75 24                	jne    5f17 <rule_library_parser+0x558>
    5ef3:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ef7:	48 89 c7             	mov    rdi,rax
    5efa:	e8 40 01 00 00       	call   603f <rstrip>
    5eff:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f03:	48 83 c0 0e          	add    rax,0xe
    5f07:	48 89 c7             	mov    rdi,rax
    5f0a:	e8 b9 4f 00 00       	call   aec8 <homenet_toi>
    5f0f:	89 05 b3 40 10 00    	mov    DWORD PTR [rip+0x1040b3],eax        # 109fc8 <homenetmask>
    5f15:	eb 77                	jmp    5f8e <rule_library_parser+0x5cf>
    5f17:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f1b:	ba 09 00 00 00       	mov    edx,0x9
    5f20:	48 8d 35 16 6e 00 00 	lea    rsi,[rip+0x6e16]        # cd3d <_IO_stdin_used+0xd3d>
    5f27:	48 89 c7             	mov    rdi,rax
    5f2a:	e8 71 c6 ff ff       	call   25a0 <strncmp@plt>
    5f2f:	85 c0                	test   eax,eax
    5f31:	75 3f                	jne    5f72 <rule_library_parser+0x5b3>
    5f33:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f37:	48 89 c7             	mov    rdi,rax
    5f3a:	e8 00 01 00 00       	call   603f <rstrip>
    5f3f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f43:	48 83 c0 09          	add    rax,0x9
    5f47:	48 8d 35 f9 6d 00 00 	lea    rsi,[rip+0x6df9]        # cd47 <_IO_stdin_used+0xd47>
    5f4e:	48 89 c7             	mov    rdi,rax
    5f51:	e8 7a c8 ff ff       	call   27d0 <strcmp@plt>
    5f56:	85 c0                	test   eax,eax
    5f58:	75 0c                	jne    5f66 <rule_library_parser+0x5a7>
    5f5a:	c7 05 04 40 10 00 04 	mov    DWORD PTR [rip+0x104004],0x4        # 109f68 <vigil_location>
    5f61:	00 00 00 
    5f64:	eb 28                	jmp    5f8e <rule_library_parser+0x5cf>
    5f66:	c7 05 f8 3f 10 00 03 	mov    DWORD PTR [rip+0x103ff8],0x3        # 109f68 <vigil_location>
    5f6d:	00 00 00 
    5f70:	eb 1c                	jmp    5f8e <rule_library_parser+0x5cf>
    5f72:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f76:	48 89 c7             	mov    rdi,rax
    5f79:	e8 7e 00 00 00       	call   5ffc <is_rule>
    5f7e:	84 c0                	test   al,al
    5f80:	74 0c                	je     5f8e <rule_library_parser+0x5cf>
    5f82:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f86:	48 89 c7             	mov    rdi,rax
    5f89:	e8 18 01 00 00       	call   60a6 <rule_parser>
    5f8e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f92:	ba 08 00 00 00       	mov    edx,0x8
    5f97:	be 00 00 00 00       	mov    esi,0x0
    5f9c:	48 89 c7             	mov    rdi,rax
    5f9f:	e8 3c c5 ff ff       	call   24e0 <memset@plt>
    5fa4:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    5fa8:	48 8d 4d c8          	lea    rcx,[rbp-0x38]
    5fac:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    5fb0:	48 89 ce             	mov    rsi,rcx
    5fb3:	48 89 c7             	mov    rdi,rax
    5fb6:	e8 35 c8 ff ff       	call   27f0 <getline@plt>
    5fbb:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    5fbf:	48 83 7d e0 ff       	cmp    QWORD PTR [rbp-0x20],0xffffffffffffffff
    5fc4:	0f 85 6a fa ff ff    	jne    5a34 <rule_library_parser+0x75>
    5fca:	8b 05 54 b0 00 00    	mov    eax,DWORD PTR [rip+0xb054]        # 11024 <VIGIL_MODE>
    5fd0:	3d ff ff 00 00       	cmp    eax,0xffff
    5fd5:	75 0a                	jne    5fe1 <rule_library_parser+0x622>
    5fd7:	c7 05 43 b0 00 00 01 	mov    DWORD PTR [rip+0xb043],0x1        # 11024 <VIGIL_MODE>
    5fde:	00 00 00 
    5fe1:	90                   	nop
    5fe2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5fe6:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    5fed:	00 00 
    5fef:	74 05                	je     5ff6 <rule_library_parser+0x637>
    5ff1:	e8 ca c7 ff ff       	call   27c0 <__stack_chk_fail@plt>
    5ff6:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    5ffa:	c9                   	leave  
    5ffb:	c3                   	ret    

0000000000005ffc <is_rule>:
    5ffc:	f3 0f 1e fa          	endbr64 
    6000:	55                   	push   rbp
    6001:	48 89 e5             	mov    rbp,rsp
    6004:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6008:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    600c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    600f:	3c 24                	cmp    al,0x24
    6011:	0f 94 c0             	sete   al
    6014:	5d                   	pop    rbp
    6015:	c3                   	ret    

0000000000006016 <is_comment>:
    6016:	f3 0f 1e fa          	endbr64 
    601a:	55                   	push   rbp
    601b:	48 89 e5             	mov    rbp,rsp
    601e:	48 83 ec 10          	sub    rsp,0x10
    6022:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6026:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    602a:	be 23 00 00 00       	mov    esi,0x23
    602f:	48 89 c7             	mov    rdi,rax
    6032:	e8 39 c7 ff ff       	call   2770 <strchr@plt>
    6037:	48 85 c0             	test   rax,rax
    603a:	0f 95 c0             	setne  al
    603d:	c9                   	leave  
    603e:	c3                   	ret    

000000000000603f <rstrip>:
    603f:	f3 0f 1e fa          	endbr64 
    6043:	55                   	push   rbp
    6044:	48 89 e5             	mov    rbp,rsp
    6047:	48 83 ec 10          	sub    rsp,0x10
    604b:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    604f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6053:	48 8d 35 ec 6a 00 00 	lea    rsi,[rip+0x6aec]        # cb46 <_IO_stdin_used+0xb46>
    605a:	48 89 c7             	mov    rdi,rax
    605d:	e8 0e c8 ff ff       	call   2870 <strcspn@plt>
    6062:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    6066:	48 01 d0             	add    rax,rdx
    6069:	c6 00 00             	mov    BYTE PTR [rax],0x0
    606c:	90                   	nop
    606d:	c9                   	leave  
    606e:	c3                   	ret    

000000000000606f <syntax_error>:
    606f:	f3 0f 1e fa          	endbr64 
    6073:	55                   	push   rbp
    6074:	48 89 e5             	mov    rbp,rsp
    6077:	48 83 ec 10          	sub    rsp,0x10
    607b:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    607f:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
    6082:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    6086:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    6089:	89 c6                	mov    esi,eax
    608b:	48 8d 3d be 6c 00 00 	lea    rdi,[rip+0x6cbe]        # cd50 <_IO_stdin_used+0xd50>
    6092:	b8 00 00 00 00       	mov    eax,0x0
    6097:	e8 34 c4 ff ff       	call   24d0 <printf@plt>
    609c:	bf 01 00 00 00       	mov    edi,0x1
    60a1:	e8 aa c4 ff ff       	call   2550 <exit@plt>

00000000000060a6 <rule_parser>:
    60a6:	f3 0f 1e fa          	endbr64 
    60aa:	55                   	push   rbp
    60ab:	48 89 e5             	mov    rbp,rsp
    60ae:	48 83 ec 40          	sub    rsp,0x40
    60b2:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    60b6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    60bd:	00 00 
    60bf:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    60c3:	31 c0                	xor    eax,eax
    60c5:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    60c9:	48 83 c0 01          	add    rax,0x1
    60cd:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    60d1:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    60d5:	48 8d 35 3c 6a 00 00 	lea    rsi,[rip+0x6a3c]        # cb18 <_IO_stdin_used+0xb18>
    60dc:	48 89 c7             	mov    rdi,rax
    60df:	e8 dc c4 ff ff       	call   25c0 <fopen@plt>
    60e4:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    60e8:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
    60ed:	75 22                	jne    6111 <rule_parser+0x6b>
    60ef:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    60f3:	48 89 c6             	mov    rsi,rax
    60f6:	48 8d 3d 73 6c 00 00 	lea    rdi,[rip+0x6c73]        # cd70 <_IO_stdin_used+0xd70>
    60fd:	b8 00 00 00 00       	mov    eax,0x0
    6102:	e8 c9 c3 ff ff       	call   24d0 <printf@plt>
    6107:	bf 01 00 00 00       	mov    edi,0x1
    610c:	e8 3f c4 ff ff       	call   2550 <exit@plt>
    6111:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    6115:	48 89 c6             	mov    rsi,rax
    6118:	48 8d 3d 84 6c 00 00 	lea    rdi,[rip+0x6c84]        # cda3 <_IO_stdin_used+0xda3>
    611f:	b8 00 00 00 00       	mov    eax,0x0
    6124:	e8 a7 c3 ff ff       	call   24d0 <printf@plt>
    6129:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    6130:	00 
    6131:	48 c7 45 d8 00 00 00 	mov    QWORD PTR [rbp-0x28],0x0
    6138:	00 
    6139:	eb 54                	jmp    618f <rule_parser+0xe9>
    613b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    613f:	48 89 c7             	mov    rdi,rax
    6142:	e8 cf fe ff ff       	call   6016 <is_comment>
    6147:	84 c0                	test   al,al
    6149:	74 02                	je     614d <rule_parser+0xa7>
    614b:	eb 42                	jmp    618f <rule_parser+0xe9>
    614d:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    6151:	48 89 c7             	mov    rdi,rax
    6154:	e8 e6 fe ff ff       	call   603f <rstrip>
    6159:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    615d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    6160:	0f b6 c0             	movzx  eax,al
    6163:	f7 d8                	neg    eax
    6165:	85 c0                	test   eax,eax
    6167:	75 02                	jne    616b <rule_parser+0xc5>
    6169:	eb 24                	jmp    618f <rule_parser+0xe9>
    616b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    616f:	48 8d 35 3e 6c 00 00 	lea    rsi,[rip+0x6c3e]        # cdb4 <_IO_stdin_used+0xdb4>
    6176:	48 89 c7             	mov    rdi,rax
    6179:	e8 72 c5 ff ff       	call   26f0 <strstr@plt>
    617e:	48 85 c0             	test   rax,rax
    6181:	74 0c                	je     618f <rule_parser+0xe9>
    6183:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    6187:	48 89 c7             	mov    rdi,rax
    618a:	e8 c9 38 00 00       	call   9a58 <line_parser>
    618f:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6193:	48 8d 4d d0          	lea    rcx,[rbp-0x30]
    6197:	48 8d 45 d8          	lea    rax,[rbp-0x28]
    619b:	48 89 ce             	mov    rsi,rcx
    619e:	48 89 c7             	mov    rdi,rax
    61a1:	e8 4a c6 ff ff       	call   27f0 <getline@plt>
    61a6:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    61aa:	48 83 7d f0 ff       	cmp    QWORD PTR [rbp-0x10],0xffffffffffffffff
    61af:	75 8a                	jne    613b <rule_parser+0x95>
    61b1:	0f b6 05 68 3d 10 00 	movzx  eax,BYTE PTR [rip+0x103d68]        # 109f20 <debug_mode>
    61b8:	84 c0                	test   al,al
    61ba:	74 18                	je     61d4 <rule_parser+0x12e>
    61bc:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    61c0:	48 89 c6             	mov    rsi,rax
    61c3:	48 8d 3d f0 6b 00 00 	lea    rdi,[rip+0x6bf0]        # cdba <_IO_stdin_used+0xdba>
    61ca:	b8 00 00 00 00       	mov    eax,0x0
    61cf:	e8 fc c2 ff ff       	call   24d0 <printf@plt>
    61d4:	90                   	nop
    61d5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    61d9:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    61e0:	00 00 
    61e2:	74 05                	je     61e9 <rule_parser+0x143>
    61e4:	e8 d7 c5 ff ff       	call   27c0 <__stack_chk_fail@plt>
    61e9:	c9                   	leave  
    61ea:	c3                   	ret    

00000000000061eb <deny_conf_parser>:
    61eb:	f3 0f 1e fa          	endbr64 
    61ef:	55                   	push   rbp
    61f0:	48 89 e5             	mov    rbp,rsp
    61f3:	48 83 ec 50          	sub    rsp,0x50
    61f7:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    61fb:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6202:	00 00 
    6204:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    6208:	31 c0                	xor    eax,eax
    620a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    620e:	48 8d 35 03 69 00 00 	lea    rsi,[rip+0x6903]        # cb18 <_IO_stdin_used+0xb18>
    6215:	48 89 c7             	mov    rdi,rax
    6218:	e8 a3 c3 ff ff       	call   25c0 <fopen@plt>
    621d:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    6221:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    6226:	75 22                	jne    624a <deny_conf_parser+0x5f>
    6228:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    622c:	48 89 c6             	mov    rsi,rax
    622f:	48 8d 3d 9a 6b 00 00 	lea    rdi,[rip+0x6b9a]        # cdd0 <_IO_stdin_used+0xdd0>
    6236:	b8 00 00 00 00       	mov    eax,0x0
    623b:	e8 90 c2 ff ff       	call   24d0 <printf@plt>
    6240:	bf 01 00 00 00       	mov    edi,0x1
    6245:	e8 06 c3 ff ff       	call   2550 <exit@plt>
    624a:	48 c7 45 c8 00 00 00 	mov    QWORD PTR [rbp-0x38],0x0
    6251:	00 
    6252:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    6259:	00 
    625a:	e9 9a 00 00 00       	jmp    62f9 <deny_conf_parser+0x10e>
    625f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6263:	48 89 c7             	mov    rdi,rax
    6266:	e8 d4 fd ff ff       	call   603f <rstrip>
    626b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    626f:	48 89 c7             	mov    rdi,rax
    6272:	e8 9f fd ff ff       	call   6016 <is_comment>
    6277:	84 c0                	test   al,al
    6279:	74 02                	je     627d <deny_conf_parser+0x92>
    627b:	eb 7c                	jmp    62f9 <deny_conf_parser+0x10e>
    627d:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6281:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    6284:	0f b6 c0             	movzx  eax,al
    6287:	f7 d8                	neg    eax
    6289:	85 c0                	test   eax,eax
    628b:	75 02                	jne    628f <deny_conf_parser+0xa4>
    628d:	eb 6a                	jmp    62f9 <deny_conf_parser+0x10e>
    628f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6293:	48 8d 35 67 6b 00 00 	lea    rsi,[rip+0x6b67]        # ce01 <_IO_stdin_used+0xe01>
    629a:	48 89 c7             	mov    rdi,rax
    629d:	e8 4e c4 ff ff       	call   26f0 <strstr@plt>
    62a2:	48 85 c0             	test   rax,rax
    62a5:	74 52                	je     62f9 <deny_conf_parser+0x10e>
    62a7:	8b 05 63 ad 00 00    	mov    eax,DWORD PTR [rip+0xad63]        # 11010 <blk_ipv4_len>
    62ad:	83 c0 01             	add    eax,0x1
    62b0:	89 05 5a ad 00 00    	mov    DWORD PTR [rip+0xad5a],eax        # 11010 <blk_ipv4_len>
    62b6:	8b 05 54 ad 00 00    	mov    eax,DWORD PTR [rip+0xad54]        # 11010 <blk_ipv4_len>
    62bc:	48 63 d0             	movsxd rdx,eax
    62bf:	48 89 d0             	mov    rax,rdx
    62c2:	48 c1 e0 03          	shl    rax,0x3
    62c6:	48 01 d0             	add    rax,rdx
    62c9:	48 01 c0             	add    rax,rax
    62cc:	48 8d 15 0d d0 0e 00 	lea    rdx,[rip+0xed00d]        # f32e0 <blocked_ipv4_addrs>
    62d3:	48 01 d0             	add    rax,rdx
    62d6:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    62da:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    62de:	48 83 c0 05          	add    rax,0x5
    62e2:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    62e6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    62ea:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    62ee:	48 89 d6             	mov    rsi,rdx
    62f1:	48 89 c7             	mov    rdi,rax
    62f4:	e8 07 c5 ff ff       	call   2800 <strcpy@plt>
    62f9:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    62fd:	48 8d 4d d0          	lea    rcx,[rbp-0x30]
    6301:	48 8d 45 c8          	lea    rax,[rbp-0x38]
    6305:	48 89 ce             	mov    rsi,rcx
    6308:	48 89 c7             	mov    rdi,rax
    630b:	e8 e0 c4 ff ff       	call   27f0 <getline@plt>
    6310:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    6314:	48 83 7d e0 ff       	cmp    QWORD PTR [rbp-0x20],0xffffffffffffffff
    6319:	0f 85 40 ff ff ff    	jne    625f <deny_conf_parser+0x74>
    631f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6323:	48 85 c0             	test   rax,rax
    6326:	74 0c                	je     6334 <deny_conf_parser+0x149>
    6328:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    632c:	48 89 c7             	mov    rdi,rax
    632f:	e8 0c c3 ff ff       	call   2640 <free@plt>
    6334:	90                   	nop
    6335:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6339:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    6340:	00 00 
    6342:	74 05                	je     6349 <deny_conf_parser+0x15e>
    6344:	e8 77 c4 ff ff       	call   27c0 <__stack_chk_fail@plt>
    6349:	c9                   	leave  
    634a:	c3                   	ret    

000000000000634b <host_mon_parser>:
    634b:	f3 0f 1e fa          	endbr64 
    634f:	55                   	push   rbp
    6350:	48 89 e5             	mov    rbp,rsp
    6353:	48 83 ec 10          	sub    rsp,0x10
    6357:	48 8b 05 da ac 00 00 	mov    rax,QWORD PTR [rip+0xacda]        # 11038 <default_host_conf>
    635e:	48 8d 35 b3 67 00 00 	lea    rsi,[rip+0x67b3]        # cb18 <_IO_stdin_used+0xb18>
    6365:	48 89 c7             	mov    rdi,rax
    6368:	e8 53 c2 ff ff       	call   25c0 <fopen@plt>
    636d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    6371:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    6376:	75 25                	jne    639d <host_mon_parser+0x52>
    6378:	48 8b 05 b9 ac 00 00 	mov    rax,QWORD PTR [rip+0xacb9]        # 11038 <default_host_conf>
    637f:	48 89 c6             	mov    rsi,rax
    6382:	48 8d 3d 7d 6a 00 00 	lea    rdi,[rip+0x6a7d]        # ce06 <_IO_stdin_used+0xe06>
    6389:	b8 00 00 00 00       	mov    eax,0x0
    638e:	e8 3d c1 ff ff       	call   24d0 <printf@plt>
    6393:	bf 01 00 00 00       	mov    edi,0x1
    6398:	e8 b3 c1 ff ff       	call   2550 <exit@plt>
    639d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    63a1:	48 89 c7             	mov    rdi,rax
    63a4:	e8 97 c4 ff ff       	call   2840 <fclose@plt>
    63a9:	90                   	nop
    63aa:	c9                   	leave  
    63ab:	c3                   	ret    

00000000000063ac <test_encrypt>:
    63ac:	f3 0f 1e fa          	endbr64 
    63b0:	55                   	push   rbp
    63b1:	48 89 e5             	mov    rbp,rsp
    63b4:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    63b8:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    63bc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    63c0:	0f b6 80 48 01 00 00 	movzx  eax,BYTE PTR [rax+0x148]
    63c7:	84 c0                	test   al,al
    63c9:	74 13                	je     63de <test_encrypt+0x32>
    63cb:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    63cf:	0f b6 40 38          	movzx  eax,BYTE PTR [rax+0x38]
    63d3:	84 c0                	test   al,al
    63d5:	74 07                	je     63de <test_encrypt+0x32>
    63d7:	b8 00 00 00 00       	mov    eax,0x0
    63dc:	eb 05                	jmp    63e3 <test_encrypt+0x37>
    63de:	b8 01 00 00 00       	mov    eax,0x1
    63e3:	5d                   	pop    rbp
    63e4:	c3                   	ret    

00000000000063e5 <rule_app>:
    63e5:	f3 0f 1e fa          	endbr64 
    63e9:	55                   	push   rbp
    63ea:	48 89 e5             	mov    rbp,rsp
    63ed:	48 83 ec 20          	sub    rsp,0x20
    63f1:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    63f5:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    63f9:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    63fd:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6401:	48 89 d6             	mov    rsi,rdx
    6404:	48 89 c7             	mov    rdi,rax
    6407:	e8 55 03 00 00       	call   6761 <r_engine>
    640c:	88 45 fd             	mov    BYTE PTR [rbp-0x3],al
    640f:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    6413:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6417:	48 89 d6             	mov    rsi,rdx
    641a:	48 89 c7             	mov    rdi,rax
    641d:	e8 94 49 00 00       	call   adb6 <d_engine>
    6422:	88 45 fe             	mov    BYTE PTR [rbp-0x2],al
    6425:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6429:	48 8b 88 78 03 00 00 	mov    rcx,QWORD PTR [rax+0x378]
    6430:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6434:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    6438:	48 89 d6             	mov    rsi,rdx
    643b:	48 89 c7             	mov    rdi,rax
    643e:	ff d1                	call   rcx
    6440:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
    6443:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
    6447:	74 40                	je     6489 <rule_app+0xa4>
    6449:	80 7d fd 00          	cmp    BYTE PTR [rbp-0x3],0x0
    644d:	74 3a                	je     6489 <rule_app+0xa4>
    644f:	80 7d fe 00          	cmp    BYTE PTR [rbp-0x2],0x0
    6453:	74 34                	je     6489 <rule_app+0xa4>
    6455:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6459:	4c 8b 80 80 03 00 00 	mov    r8,QWORD PTR [rax+0x380]
    6460:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    6464:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    6468:	ba 00 00 00 00       	mov    edx,0x0
    646d:	48 89 ce             	mov    rsi,rcx
    6470:	48 89 c7             	mov    rdi,rax
    6473:	41 ff d0             	call   r8
    6476:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    647a:	8b 40 3c             	mov    eax,DWORD PTR [rax+0x3c]
    647d:	8d 50 01             	lea    edx,[rax+0x1]
    6480:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6484:	89 50 3c             	mov    DWORD PTR [rax+0x3c],edx
    6487:	eb 17                	jmp    64a0 <rule_app+0xbb>
    6489:	8b 05 95 ab 00 00    	mov    eax,DWORD PTR [rip+0xab95]        # 11024 <VIGIL_MODE>
    648f:	83 f8 02             	cmp    eax,0x2
    6492:	75 0c                	jne    64a0 <rule_app+0xbb>
    6494:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    6498:	48 89 c7             	mov    rdi,rax
    649b:	e8 4e 25 00 00       	call   89ee <forward_packet>
    64a0:	90                   	nop
    64a1:	c9                   	leave  
    64a2:	c3                   	ret    

00000000000064a3 <rulemgr>:
    64a3:	f3 0f 1e fa          	endbr64 
    64a7:	55                   	push   rbp
    64a8:	48 89 e5             	mov    rbp,rsp
    64ab:	48 83 ec 20          	sub    rsp,0x20
    64af:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    64b3:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    64ba:	e9 8f 02 00 00       	jmp    674e <rulemgr+0x2ab>
    64bf:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    64c2:	8d 50 01             	lea    edx,[rax+0x1]
    64c5:	89 55 f4             	mov    DWORD PTR [rbp-0xc],edx
    64c8:	48 98                	cdqe   
    64ca:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    64d1:	48 8d 15 08 ae 00 00 	lea    rdx,[rip+0xae08]        # 112e0 <rules>
    64d8:	48 01 d0             	add    rax,rdx
    64db:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    64df:	0f b6 05 e6 3a 10 00 	movzx  eax,BYTE PTR [rip+0x103ae6]        # 109fcc <in_test_mode>
    64e6:	84 c0                	test   al,al
    64e8:	74 30                	je     651a <rulemgr+0x77>
    64ea:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64ee:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    64f1:	83 f8 46             	cmp    eax,0x46
    64f4:	75 0d                	jne    6503 <rulemgr+0x60>
    64f6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64fa:	c7 40 10 45 00 00 00 	mov    DWORD PTR [rax+0x10],0x45
    6501:	eb 17                	jmp    651a <rulemgr+0x77>
    6503:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6507:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    650a:	83 f8 45             	cmp    eax,0x45
    650d:	75 0b                	jne    651a <rulemgr+0x77>
    650f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6513:	c7 40 10 46 00 00 00 	mov    DWORD PTR [rax+0x10],0x46
    651a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    651e:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    6524:	83 f8 ff             	cmp    eax,0xffffffff
    6527:	74 19                	je     6542 <rulemgr+0x9f>
    6529:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    652d:	8b 50 2c             	mov    edx,DWORD PTR [rax+0x2c]
    6530:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6534:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    653a:	39 c2                	cmp    edx,eax
    653c:	0f 85 0c 02 00 00    	jne    674e <rulemgr+0x2ab>
    6542:	0f b6 05 37 ab 00 00 	movzx  eax,BYTE PTR [rip+0xab37]        # 11080 <demo_mode>
    6549:	84 c0                	test   al,al
    654b:	75 0f                	jne    655c <rulemgr+0xb9>
    654d:	8b 05 15 3a 10 00    	mov    eax,DWORD PTR [rip+0x103a15]        # 109f68 <vigil_location>
    6553:	83 f8 03             	cmp    eax,0x3
    6556:	0f 85 a1 00 00 00    	jne    65fd <rulemgr+0x15a>
    655c:	8b 05 06 3a 10 00    	mov    eax,DWORD PTR [rip+0x103a06]        # 109f68 <vigil_location>
    6562:	83 f8 03             	cmp    eax,0x3
    6565:	0f 85 e3 01 00 00    	jne    674e <rulemgr+0x2ab>
    656b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    656f:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    6572:	83 f8 ff             	cmp    eax,0xffffffff
    6575:	74 16                	je     658d <rulemgr+0xea>
    6577:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    657b:	8b 50 0c             	mov    edx,DWORD PTR [rax+0xc]
    657e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6582:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    6585:	39 c2                	cmp    edx,eax
    6587:	0f 85 c1 01 00 00    	jne    674e <rulemgr+0x2ab>
    658d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6591:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    6594:	83 f8 ff             	cmp    eax,0xffffffff
    6597:	74 16                	je     65af <rulemgr+0x10c>
    6599:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    659d:	8b 50 08             	mov    edx,DWORD PTR [rax+0x8]
    65a0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    65a4:	8b 40 28             	mov    eax,DWORD PTR [rax+0x28]
    65a7:	39 c2                	cmp    edx,eax
    65a9:	0f 85 9f 01 00 00    	jne    674e <rulemgr+0x2ab>
    65af:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    65b3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65b7:	48 89 d6             	mov    rsi,rdx
    65ba:	48 89 c7             	mov    rdi,rax
    65bd:	e8 97 03 00 00       	call   6959 <test_tcp_session_status>
    65c2:	84 c0                	test   al,al
    65c4:	0f 84 84 01 00 00    	je     674e <rulemgr+0x2ab>
    65ca:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    65ce:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65d2:	48 89 d6             	mov    rsi,rdx
    65d5:	48 89 c7             	mov    rdi,rax
    65d8:	e8 cf fd ff ff       	call   63ac <test_encrypt>
    65dd:	84 c0                	test   al,al
    65df:	0f 84 69 01 00 00    	je     674e <rulemgr+0x2ab>
    65e5:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    65e9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65ed:	48 89 d6             	mov    rsi,rdx
    65f0:	48 89 c7             	mov    rdi,rax
    65f3:	e8 ed fd ff ff       	call   63e5 <rule_app>
    65f8:	e9 51 01 00 00       	jmp    674e <rulemgr+0x2ab>
    65fd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6601:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    6604:	83 f8 47             	cmp    eax,0x47
    6607:	74 16                	je     661f <rulemgr+0x17c>
    6609:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    660d:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    6610:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6614:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    6617:	39 c2                	cmp    edx,eax
    6619:	0f 85 2f 01 00 00    	jne    674e <rulemgr+0x2ab>
    661f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6623:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    6629:	3d 80 00 00 00       	cmp    eax,0x80
    662e:	75 18                	jne    6648 <rulemgr+0x1a5>
    6630:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6634:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6638:	48 89 d6             	mov    rsi,rdx
    663b:	48 89 c7             	mov    rdi,rax
    663e:	e8 a2 fd ff ff       	call   63e5 <rule_app>
    6643:	e9 06 01 00 00       	jmp    674e <rulemgr+0x2ab>
    6648:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    664c:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    664f:	83 f8 47             	cmp    eax,0x47
    6652:	75 7d                	jne    66d1 <rulemgr+0x22e>
    6654:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6658:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    665b:	83 f8 ff             	cmp    eax,0xffffffff
    665e:	74 28                	je     6688 <rulemgr+0x1e5>
    6660:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6664:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    6667:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    666b:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    666e:	39 c2                	cmp    edx,eax
    6670:	74 16                	je     6688 <rulemgr+0x1e5>
    6672:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6676:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    6679:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    667d:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    6680:	39 c2                	cmp    edx,eax
    6682:	0f 85 c6 00 00 00    	jne    674e <rulemgr+0x2ab>
    6688:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    668c:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    668f:	83 f8 ff             	cmp    eax,0xffffffff
    6692:	74 28                	je     66bc <rulemgr+0x219>
    6694:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6698:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    669b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    669f:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    66a2:	39 c2                	cmp    edx,eax
    66a4:	74 16                	je     66bc <rulemgr+0x219>
    66a6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    66aa:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    66ad:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66b1:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    66b4:	39 c2                	cmp    edx,eax
    66b6:	0f 85 92 00 00 00    	jne    674e <rulemgr+0x2ab>
    66bc:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    66c0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66c4:	48 89 d6             	mov    rsi,rdx
    66c7:	48 89 c7             	mov    rdi,rax
    66ca:	e8 16 fd ff ff       	call   63e5 <rule_app>
    66cf:	eb 7d                	jmp    674e <rulemgr+0x2ab>
    66d1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66d5:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    66d8:	83 f8 ff             	cmp    eax,0xffffffff
    66db:	74 12                	je     66ef <rulemgr+0x24c>
    66dd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66e1:	8b 50 0c             	mov    edx,DWORD PTR [rax+0xc]
    66e4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    66e8:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    66eb:	39 c2                	cmp    edx,eax
    66ed:	75 5f                	jne    674e <rulemgr+0x2ab>
    66ef:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66f3:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    66f6:	83 f8 ff             	cmp    eax,0xffffffff
    66f9:	74 12                	je     670d <rulemgr+0x26a>
    66fb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66ff:	8b 50 08             	mov    edx,DWORD PTR [rax+0x8]
    6702:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6706:	8b 40 28             	mov    eax,DWORD PTR [rax+0x28]
    6709:	39 c2                	cmp    edx,eax
    670b:	75 41                	jne    674e <rulemgr+0x2ab>
    670d:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6711:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6715:	48 89 d6             	mov    rsi,rdx
    6718:	48 89 c7             	mov    rdi,rax
    671b:	e8 39 02 00 00       	call   6959 <test_tcp_session_status>
    6720:	84 c0                	test   al,al
    6722:	74 2a                	je     674e <rulemgr+0x2ab>
    6724:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6728:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    672c:	48 89 d6             	mov    rsi,rdx
    672f:	48 89 c7             	mov    rdi,rax
    6732:	e8 75 fc ff ff       	call   63ac <test_encrypt>
    6737:	84 c0                	test   al,al
    6739:	74 13                	je     674e <rulemgr+0x2ab>
    673b:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    673f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6743:	48 89 d6             	mov    rsi,rdx
    6746:	48 89 c7             	mov    rdi,rax
    6749:	e8 97 fc ff ff       	call   63e5 <rule_app>
    674e:	8b 05 c0 a8 00 00    	mov    eax,DWORD PTR [rip+0xa8c0]        # 11014 <num_rules>
    6754:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    6757:	0f 8e 62 fd ff ff    	jle    64bf <rulemgr+0x1c>
    675d:	90                   	nop
    675e:	90                   	nop
    675f:	c9                   	leave  
    6760:	c3                   	ret    

0000000000006761 <r_engine>:
    6761:	f3 0f 1e fa          	endbr64 
    6765:	55                   	push   rbp
    6766:	48 89 e5             	mov    rbp,rsp
    6769:	48 83 ec 10          	sub    rsp,0x10
    676d:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6771:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    6775:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6779:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    677c:	3d 80 00 00 00       	cmp    eax,0x80
    6781:	0f 85 d9 00 00 00    	jne    6860 <r_engine+0xff>
    6787:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    678b:	0f b6 80 6f 03 00 00 	movzx  eax,BYTE PTR [rax+0x36f]
    6792:	84 c0                	test   al,al
    6794:	74 25                	je     67bb <r_engine+0x5a>
    6796:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    679a:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    679e:	0f b6 50 01          	movzx  edx,BYTE PTR [rax+0x1]
    67a2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67a6:	0f b6 80 73 03 00 00 	movzx  eax,BYTE PTR [rax+0x373]
    67ad:	38 c2                	cmp    dl,al
    67af:	74 0a                	je     67bb <r_engine+0x5a>
    67b1:	b8 00 00 00 00       	mov    eax,0x0
    67b6:	e9 9c 01 00 00       	jmp    6957 <r_engine+0x1f6>
    67bb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67bf:	0f b6 80 71 03 00 00 	movzx  eax,BYTE PTR [rax+0x371]
    67c6:	84 c0                	test   al,al
    67c8:	74 26                	je     67f0 <r_engine+0x8f>
    67ca:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    67ce:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    67d2:	0f b7 50 04          	movzx  edx,WORD PTR [rax+0x4]
    67d6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67da:	0f b7 80 76 03 00 00 	movzx  eax,WORD PTR [rax+0x376]
    67e1:	66 39 c2             	cmp    dx,ax
    67e4:	74 0a                	je     67f0 <r_engine+0x8f>
    67e6:	b8 00 00 00 00       	mov    eax,0x0
    67eb:	e9 67 01 00 00       	jmp    6957 <r_engine+0x1f6>
    67f0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67f4:	0f b6 80 70 03 00 00 	movzx  eax,BYTE PTR [rax+0x370]
    67fb:	84 c0                	test   al,al
    67fd:	74 26                	je     6825 <r_engine+0xc4>
    67ff:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6803:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    6807:	0f b7 50 06          	movzx  edx,WORD PTR [rax+0x6]
    680b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    680f:	0f b7 80 74 03 00 00 	movzx  eax,WORD PTR [rax+0x374]
    6816:	66 39 c2             	cmp    dx,ax
    6819:	74 0a                	je     6825 <r_engine+0xc4>
    681b:	b8 00 00 00 00       	mov    eax,0x0
    6820:	e9 32 01 00 00       	jmp    6957 <r_engine+0x1f6>
    6825:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6829:	0f b6 80 6e 03 00 00 	movzx  eax,BYTE PTR [rax+0x36e]
    6830:	84 c0                	test   al,al
    6832:	0f 84 dc 00 00 00    	je     6914 <r_engine+0x1b3>
    6838:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    683c:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    6840:	0f b6 10             	movzx  edx,BYTE PTR [rax]
    6843:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6847:	0f b6 80 72 03 00 00 	movzx  eax,BYTE PTR [rax+0x372]
    684e:	38 c2                	cmp    dl,al
    6850:	0f 84 be 00 00 00    	je     6914 <r_engine+0x1b3>
    6856:	b8 00 00 00 00       	mov    eax,0x0
    685b:	e9 f7 00 00 00       	jmp    6957 <r_engine+0x1f6>
    6860:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6864:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    6867:	83 f8 7e             	cmp    eax,0x7e
    686a:	0f 85 a4 00 00 00    	jne    6914 <r_engine+0x1b3>
    6870:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6874:	0f b6 80 51 03 00 00 	movzx  eax,BYTE PTR [rax+0x351]
    687b:	84 c0                	test   al,al
    687d:	74 2e                	je     68ad <r_engine+0x14c>
    687f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6883:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    6887:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    688a:	89 c7                	mov    edi,eax
    688c:	e8 2f be ff ff       	call   26c0 <ntohl@plt>
    6891:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    6895:	0f b7 92 5c 03 00 00 	movzx  edx,WORD PTR [rdx+0x35c]
    689c:	0f b7 d2             	movzx  edx,dx
    689f:	39 d0                	cmp    eax,edx
    68a1:	74 0a                	je     68ad <r_engine+0x14c>
    68a3:	b8 00 00 00 00       	mov    eax,0x0
    68a8:	e9 aa 00 00 00       	jmp    6957 <r_engine+0x1f6>
    68ad:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    68b1:	0f b6 80 50 03 00 00 	movzx  eax,BYTE PTR [rax+0x350]
    68b8:	84 c0                	test   al,al
    68ba:	74 29                	je     68e5 <r_engine+0x184>
    68bc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    68c0:	48 8d 90 53 03 00 00 	lea    rdx,[rax+0x353]
    68c7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    68cb:	48 83 c0 68          	add    rax,0x68
    68cf:	48 89 d6             	mov    rsi,rdx
    68d2:	48 89 c7             	mov    rdi,rax
    68d5:	e8 f6 be ff ff       	call   27d0 <strcmp@plt>
    68da:	85 c0                	test   eax,eax
    68dc:	74 07                	je     68e5 <r_engine+0x184>
    68de:	b8 00 00 00 00       	mov    eax,0x0
    68e3:	eb 72                	jmp    6957 <r_engine+0x1f6>
    68e5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    68e9:	0f b6 80 52 03 00 00 	movzx  eax,BYTE PTR [rax+0x352]
    68f0:	84 c0                	test   al,al
    68f2:	74 20                	je     6914 <r_engine+0x1b3>
    68f4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    68f8:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    68fc:	8b 50 04             	mov    edx,DWORD PTR [rax+0x4]
    68ff:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6903:	8b 80 60 03 00 00    	mov    eax,DWORD PTR [rax+0x360]
    6909:	39 c2                	cmp    edx,eax
    690b:	74 07                	je     6914 <r_engine+0x1b3>
    690d:	b8 00 00 00 00       	mov    eax,0x0
    6912:	eb 43                	jmp    6957 <r_engine+0x1f6>
    6914:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6918:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    691c:	48 85 c0             	test   rax,rax
    691f:	74 31                	je     6952 <r_engine+0x1f1>
    6921:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6925:	0f b6 80 69 03 00 00 	movzx  eax,BYTE PTR [rax+0x369]
    692c:	84 c0                	test   al,al
    692e:	74 22                	je     6952 <r_engine+0x1f1>
    6930:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6934:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    6938:	0f b6 50 08          	movzx  edx,BYTE PTR [rax+0x8]
    693c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6940:	0f b6 80 6c 03 00 00 	movzx  eax,BYTE PTR [rax+0x36c]
    6947:	38 c2                	cmp    dl,al
    6949:	74 07                	je     6952 <r_engine+0x1f1>
    694b:	b8 00 00 00 00       	mov    eax,0x0
    6950:	eb 05                	jmp    6957 <r_engine+0x1f6>
    6952:	b8 01 00 00 00       	mov    eax,0x1
    6957:	c9                   	leave  
    6958:	c3                   	ret    

0000000000006959 <test_tcp_session_status>:
    6959:	f3 0f 1e fa          	endbr64 
    695d:	55                   	push   rbp
    695e:	48 89 e5             	mov    rbp,rsp
    6961:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6965:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    6969:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    696d:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    6973:	83 f8 7e             	cmp    eax,0x7e
    6976:	75 34                	jne    69ac <test_tcp_session_status+0x53>
    6978:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    697c:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    697f:	83 f8 7e             	cmp    eax,0x7e
    6982:	75 28                	jne    69ac <test_tcp_session_status+0x53>
    6984:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6988:	8b 80 48 03 00 00    	mov    eax,DWORD PTR [rax+0x348]
    698e:	83 f8 01             	cmp    eax,0x1
    6991:	75 12                	jne    69a5 <test_tcp_session_status+0x4c>
    6993:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6997:	8b 40 70             	mov    eax,DWORD PTR [rax+0x70]
    699a:	85 c0                	test   eax,eax
    699c:	75 07                	jne    69a5 <test_tcp_session_status+0x4c>
    699e:	b8 00 00 00 00       	mov    eax,0x0
    69a3:	eb 0c                	jmp    69b1 <test_tcp_session_status+0x58>
    69a5:	b8 01 00 00 00       	mov    eax,0x1
    69aa:	eb 05                	jmp    69b1 <test_tcp_session_status+0x58>
    69ac:	b8 01 00 00 00       	mov    eax,0x1
    69b1:	5d                   	pop    rbp
    69b2:	c3                   	ret    

00000000000069b3 <main>:
    69b3:	f3 0f 1e fa          	endbr64 
    69b7:	55                   	push   rbp
    69b8:	48 89 e5             	mov    rbp,rsp
    69bb:	48 81 ec 40 08 00 00 	sub    rsp,0x840
    69c2:	89 bd cc f7 ff ff    	mov    DWORD PTR [rbp-0x834],edi
    69c8:	48 89 b5 c0 f7 ff ff 	mov    QWORD PTR [rbp-0x840],rsi
    69cf:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    69d6:	00 00 
    69d8:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    69dc:	31 c0                	xor    eax,eax
    69de:	b8 00 00 00 00       	mov    eax,0x0
    69e3:	e8 ff 4d 00 00       	call   b7e7 <load_fn_mem_map>
    69e8:	48 8d 35 b4 02 00 00 	lea    rsi,[rip+0x2b4]        # 6ca3 <sigint_processor>
    69ef:	bf 02 00 00 00       	mov    edi,0x2
    69f4:	e8 67 bd ff ff       	call   2760 <signal@plt>
    69f9:	48 8d 05 6a 4a 00 00 	lea    rax,[rip+0x4a6a]        # b46a <crash_handler>
    6a00:	48 89 c6             	mov    rsi,rax
    6a03:	bf 0b 00 00 00       	mov    edi,0xb
    6a08:	e8 53 bd ff ff       	call   2760 <signal@plt>
    6a0d:	b8 00 00 00 00       	mov    eax,0x0
    6a12:	e8 b9 08 00 00       	call   72d0 <print_logo>
    6a17:	b8 00 00 00 00       	mov    eax,0x0
    6a1c:	e8 fd 06 00 00       	call   711e <print_cpu_info>
    6a21:	c7 05 7d a8 00 00 01 	mov    DWORD PTR [rip+0xa87d],0x1        # 112a8 <is_running>
    6a28:	00 00 00 
    6a2b:	b8 00 00 00 00       	mov    eax,0x0
    6a30:	e8 3f 4f 00 00       	call   b974 <pps_monitor>
    6a35:	bf 00 00 00 00       	mov    edi,0x0
    6a3a:	e8 d1 be ff ff       	call   2910 <time@plt>
    6a3f:	48 89 05 6a a8 00 00 	mov    QWORD PTR [rip+0xa86a],rax        # 112b0 <last_clean_time>
    6a46:	83 bd cc f7 ff ff 01 	cmp    DWORD PTR [rbp-0x834],0x1
    6a4d:	0f 85 e3 00 00 00    	jne    6b36 <main+0x183>
    6a53:	b8 00 00 00 00       	mov    eax,0x0
    6a58:	e8 97 06 00 00       	call   70f4 <print_help_and_exit>
    6a5d:	e9 d4 00 00 00       	jmp    6b36 <main+0x183>
    6a62:	8b 85 dc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x824]
    6a68:	83 e8 64             	sub    eax,0x64
    6a6b:	83 f8 10             	cmp    eax,0x10
    6a6e:	0f 87 9e 00 00 00    	ja     6b12 <main+0x15f>
    6a74:	89 c0                	mov    eax,eax
    6a76:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    6a7d:	00 
    6a7e:	48 8d 05 1f 65 00 00 	lea    rax,[rip+0x651f]        # cfa4 <_IO_stdin_used+0xfa4>
    6a85:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    6a88:	48 98                	cdqe   
    6a8a:	48 8d 15 13 65 00 00 	lea    rdx,[rip+0x6513]        # cfa4 <_IO_stdin_used+0xfa4>
    6a91:	48 01 d0             	add    rax,rdx
    6a94:	3e ff e0             	notrack jmp rax
    6a97:	c6 05 82 34 10 00 01 	mov    BYTE PTR [rip+0x103482],0x1        # 109f20 <debug_mode>
    6a9e:	e9 93 00 00 00       	jmp    6b36 <main+0x183>
    6aa3:	b8 00 00 00 00       	mov    eax,0x0
    6aa8:	e8 47 06 00 00       	call   70f4 <print_help_and_exit>
    6aad:	e9 84 00 00 00       	jmp    6b36 <main+0x183>
    6ab2:	48 8b 05 a7 a5 00 00 	mov    rax,QWORD PTR [rip+0xa5a7]        # 11060 <optarg@@GLIBC_2.2.5>
    6ab9:	48 89 85 e0 f7 ff ff 	mov    QWORD PTR [rbp-0x820],rax
    6ac0:	eb 74                	jmp    6b36 <main+0x183>
    6ac2:	c6 05 9b 34 10 00 01 	mov    BYTE PTR [rip+0x10349b],0x1        # 109f64 <packet_print>
    6ac9:	eb 6b                	jmp    6b36 <main+0x183>
    6acb:	c6 05 93 34 10 00 01 	mov    BYTE PTR [rip+0x103493],0x1        # 109f65 <quiet_exit>
    6ad2:	eb 62                	jmp    6b36 <main+0x183>
    6ad4:	48 8d 3d 45 63 00 00 	lea    rdi,[rip+0x6345]        # ce20 <_IO_stdin_used+0xe20>
    6adb:	e8 50 ba ff ff       	call   2530 <puts@plt>
    6ae0:	bf 0a 00 00 00       	mov    edi,0xa
    6ae5:	e8 e6 bb ff ff       	call   26d0 <sleep@plt>
    6aea:	c6 05 8f a5 00 00 01 	mov    BYTE PTR [rip+0xa58f],0x1        # 11080 <demo_mode>
    6af1:	eb 43                	jmp    6b36 <main+0x183>
    6af3:	48 8d 3d 66 63 00 00 	lea    rdi,[rip+0x6366]        # ce60 <_IO_stdin_used+0xe60>
    6afa:	e8 31 ba ff ff       	call   2530 <puts@plt>
    6aff:	bf 0a 00 00 00       	mov    edi,0xa
    6b04:	e8 c7 bb ff ff       	call   26d0 <sleep@plt>
    6b09:	c6 05 bc 34 10 00 01 	mov    BYTE PTR [rip+0x1034bc],0x1        # 109fcc <in_test_mode>
    6b10:	eb 24                	jmp    6b36 <main+0x183>
    6b12:	8b 85 dc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x824]
    6b18:	89 c6                	mov    esi,eax
    6b1a:	48 8d 3d 73 63 00 00 	lea    rdi,[rip+0x6373]        # ce94 <_IO_stdin_used+0xe94>
    6b21:	b8 00 00 00 00       	mov    eax,0x0
    6b26:	e8 a5 b9 ff ff       	call   24d0 <printf@plt>
    6b2b:	b8 00 00 00 00       	mov    eax,0x0
    6b30:	e8 bf 05 00 00       	call   70f4 <print_help_and_exit>
    6b35:	90                   	nop
    6b36:	48 8b 8d c0 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x840]
    6b3d:	8b 85 cc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x834]
    6b43:	48 8d 15 60 63 00 00 	lea    rdx,[rip+0x6360]        # ceaa <_IO_stdin_used+0xeaa>
    6b4a:	48 89 ce             	mov    rsi,rcx
    6b4d:	89 c7                	mov    edi,eax
    6b4f:	e8 2c ba ff ff       	call   2580 <getopt@plt>
    6b54:	89 85 dc f7 ff ff    	mov    DWORD PTR [rbp-0x824],eax
    6b5a:	83 bd dc f7 ff ff ff 	cmp    DWORD PTR [rbp-0x824],0xffffffff
    6b61:	0f 85 fb fe ff ff    	jne    6a62 <main+0xaf>
    6b67:	48 8d 3d 45 63 00 00 	lea    rdi,[rip+0x6345]        # ceb3 <_IO_stdin_used+0xeb3>
    6b6e:	e8 78 f6 ff ff       	call   61eb <deny_conf_parser>
    6b73:	48 8d 3d 4e 63 00 00 	lea    rdi,[rip+0x634e]        # cec8 <_IO_stdin_used+0xec8>
    6b7a:	e8 b1 b9 ff ff       	call   2530 <puts@plt>
    6b7f:	48 8d 3d 7d 63 00 00 	lea    rdi,[rip+0x637d]        # cf03 <_IO_stdin_used+0xf03>
    6b86:	e8 34 ee ff ff       	call   59bf <rule_library_parser>
    6b8b:	48 8d 3d 87 63 00 00 	lea    rdi,[rip+0x6387]        # cf19 <_IO_stdin_used+0xf19>
    6b92:	e8 99 b9 ff ff       	call   2530 <puts@plt>
    6b97:	b8 00 00 00 00       	mov    eax,0x0
    6b9c:	e8 ef 3d 00 00       	call   a990 <rule_processor>
    6ba1:	48 8b 85 e0 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x820]
    6ba8:	48 89 c6             	mov    rsi,rax
    6bab:	48 8d 3d 7e 63 00 00 	lea    rdi,[rip+0x637e]        # cf30 <_IO_stdin_used+0xf30>
    6bb2:	b8 00 00 00 00       	mov    eax,0x0
    6bb7:	e8 14 b9 ff ff       	call   24d0 <printf@plt>
    6bbc:	48 c7 85 f0 f7 ff ff 	mov    QWORD PTR [rbp-0x810],0x0
    6bc3:	00 00 00 00 
    6bc7:	48 c7 85 f8 f7 ff ff 	mov    QWORD PTR [rbp-0x808],0x0
    6bce:	00 00 00 00 
    6bd2:	48 8d 95 00 f8 ff ff 	lea    rdx,[rbp-0x800]
    6bd9:	b8 00 00 00 00       	mov    eax,0x0
    6bde:	b9 fd 00 00 00       	mov    ecx,0xfd
    6be3:	48 89 d7             	mov    rdi,rdx
    6be6:	f3 48 ab             	rep stos QWORD PTR es:[rdi],rax
    6be9:	48 89 fa             	mov    rdx,rdi
    6bec:	89 02                	mov    DWORD PTR [rdx],eax
    6bee:	48 83 c2 04          	add    rdx,0x4
    6bf2:	66 89 02             	mov    WORD PTR [rdx],ax
    6bf5:	48 83 c2 02          	add    rdx,0x2
    6bf9:	48 8d 95 f0 f7 ff ff 	lea    rdx,[rbp-0x810]
    6c00:	48 8b 85 e0 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x820]
    6c07:	49 89 d0             	mov    r8,rdx
    6c0a:	b9 64 00 00 00       	mov    ecx,0x64
    6c0f:	ba 01 00 00 00       	mov    edx,0x1
    6c14:	be 00 04 00 00       	mov    esi,0x400
    6c19:	48 89 c7             	mov    rdi,rax
    6c1c:	e8 bf b9 ff ff       	call   25e0 <pcap_open_live@plt>
    6c21:	48 89 85 e8 f7 ff ff 	mov    QWORD PTR [rbp-0x818],rax
    6c28:	48 83 bd e8 f7 ff ff 	cmp    QWORD PTR [rbp-0x818],0x0
    6c2f:	00 
    6c30:	75 16                	jne    6c48 <main+0x295>
    6c32:	48 8d 3d 18 63 00 00 	lea    rdi,[rip+0x6318]        # cf51 <_IO_stdin_used+0xf51>
    6c39:	e8 72 bc ff ff       	call   28b0 <perror@plt>
    6c3e:	bf 01 00 00 00       	mov    edi,0x1
    6c43:	e8 08 b9 ff ff       	call   2550 <exit@plt>
    6c48:	b8 00 00 00 00       	mov    eax,0x0
    6c4d:	e8 72 45 00 00       	call   b1c4 <collect_scripts>
    6c52:	b8 00 00 00 00       	mov    eax,0x0
    6c57:	e8 8b 06 00 00       	call   72e7 <start_nsh_server>
    6c5c:	48 8d 3d 0d 63 00 00 	lea    rdi,[rip+0x630d]        # cf70 <_IO_stdin_used+0xf70>
    6c63:	e8 c8 b8 ff ff       	call   2530 <puts@plt>
    6c68:	48 8b 85 e8 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x818]
    6c6f:	b9 00 00 00 00       	mov    ecx,0x0
    6c74:	48 8d 15 c8 bd ff ff 	lea    rdx,[rip+0xffffffffffffbdc8]        # 2a43 <pktmgr>
    6c7b:	be ff ff ff ff       	mov    esi,0xffffffff
    6c80:	48 89 c7             	mov    rdi,rax
    6c83:	e8 08 bc ff ff       	call   2890 <pcap_loop@plt>
    6c88:	b8 00 00 00 00       	mov    eax,0x0
    6c8d:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    6c91:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    6c98:	00 00 
    6c9a:	74 05                	je     6ca1 <main+0x2ee>
    6c9c:	e8 1f bb ff ff       	call   27c0 <__stack_chk_fail@plt>
    6ca1:	c9                   	leave  
    6ca2:	c3                   	ret    

0000000000006ca3 <sigint_processor>:
    6ca3:	f3 0f 1e fa          	endbr64 
    6ca7:	55                   	push   rbp
    6ca8:	48 89 e5             	mov    rbp,rsp
    6cab:	41 54                	push   r12
    6cad:	53                   	push   rbx
    6cae:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    6cb5:	89 bd bc fe ff ff    	mov    DWORD PTR [rbp-0x144],edi
    6cbb:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6cc2:	00 00 
    6cc4:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    6cc8:	31 c0                	xor    eax,eax
    6cca:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    6cd1:	00 00 00 
    6cd4:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    6cdb:	48 89 c7             	mov    rdi,rax
    6cde:	e8 da c7 ff ff       	call   34bd <cb_get_formatted_time>
    6ce3:	48 8d 95 e0 fe ff ff 	lea    rdx,[rbp-0x120]
    6cea:	8b 85 bc fe ff ff    	mov    eax,DWORD PTR [rbp-0x144]
    6cf0:	89 c6                	mov    esi,eax
    6cf2:	48 8d 3d ef 62 00 00 	lea    rdi,[rip+0x62ef]        # cfe8 <_IO_stdin_used+0xfe8>
    6cf9:	b8 00 00 00 00       	mov    eax,0x0
    6cfe:	e8 cd b7 ff ff       	call   24d0 <printf@plt>
    6d03:	48 8d 3d 03 63 00 00 	lea    rdi,[rip+0x6303]        # d00d <_IO_stdin_used+0x100d>
    6d0a:	e8 a1 bb ff ff       	call   28b0 <perror@plt>
    6d0f:	0f b6 05 4f 32 10 00 	movzx  eax,BYTE PTR [rip+0x10324f]        # 109f65 <quiet_exit>
    6d16:	83 f0 01             	xor    eax,0x1
    6d19:	84 c0                	test   al,al
    6d1b:	0f 84 2e 02 00 00    	je     6f4f <sigint_processor+0x2ac>
    6d21:	8b 05 7d a5 00 00    	mov    eax,DWORD PTR [rip+0xa57d]        # 112a4 <total_pkt_captured>
    6d27:	89 c6                	mov    esi,eax
    6d29:	48 8d 3d de 62 00 00 	lea    rdi,[rip+0x62de]        # d00e <_IO_stdin_used+0x100e>
    6d30:	b8 00 00 00 00       	mov    eax,0x0
    6d35:	e8 96 b7 ff ff       	call   24d0 <printf@plt>
    6d3a:	48 8d 3d e7 62 00 00 	lea    rdi,[rip+0x62e7]        # d028 <_IO_stdin_used+0x1028>
    6d41:	e8 ea b7 ff ff       	call   2530 <puts@plt>
    6d46:	c7 85 c4 fe ff ff 00 	mov    DWORD PTR [rbp-0x13c],0x0
    6d4d:	00 00 00 
    6d50:	e9 e8 01 00 00       	jmp    6f3d <sigint_processor+0x29a>
    6d55:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6d5b:	48 63 d0             	movsxd rdx,eax
    6d5e:	48 89 d0             	mov    rax,rdx
    6d61:	48 c1 e0 02          	shl    rax,0x2
    6d65:	48 01 d0             	add    rax,rdx
    6d68:	48 c1 e0 03          	shl    rax,0x3
    6d6c:	48 01 d0             	add    rax,rdx
    6d6f:	48 c1 e0 04          	shl    rax,0x4
    6d73:	48 89 c2             	mov    rdx,rax
    6d76:	48 8d 05 13 ca 0e 00 	lea    rax,[rip+0xeca13]        # f3790 <watchlist+0x270>
    6d7d:	44 8b 1c 02          	mov    r11d,DWORD PTR [rdx+rax*1]
    6d81:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6d87:	48 63 d0             	movsxd rdx,eax
    6d8a:	48 89 d0             	mov    rax,rdx
    6d8d:	48 c1 e0 02          	shl    rax,0x2
    6d91:	48 01 d0             	add    rax,rdx
    6d94:	48 c1 e0 03          	shl    rax,0x3
    6d98:	48 01 d0             	add    rax,rdx
    6d9b:	48 c1 e0 04          	shl    rax,0x4
    6d9f:	48 89 c2             	mov    rdx,rax
    6da2:	48 8d 05 db c9 0e 00 	lea    rax,[rip+0xec9db]        # f3784 <watchlist+0x264>
    6da9:	44 8b 14 02          	mov    r10d,DWORD PTR [rdx+rax*1]
    6dad:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6db3:	48 63 d0             	movsxd rdx,eax
    6db6:	48 89 d0             	mov    rax,rdx
    6db9:	48 c1 e0 02          	shl    rax,0x2
    6dbd:	48 01 d0             	add    rax,rdx
    6dc0:	48 c1 e0 03          	shl    rax,0x3
    6dc4:	48 01 d0             	add    rax,rdx
    6dc7:	48 c1 e0 04          	shl    rax,0x4
    6dcb:	48 89 c2             	mov    rdx,rax
    6dce:	48 8d 05 b7 c9 0e 00 	lea    rax,[rip+0xec9b7]        # f378c <watchlist+0x26c>
    6dd5:	44 8b 0c 02          	mov    r9d,DWORD PTR [rdx+rax*1]
    6dd9:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6ddf:	48 63 d0             	movsxd rdx,eax
    6de2:	48 89 d0             	mov    rax,rdx
    6de5:	48 c1 e0 02          	shl    rax,0x2
    6de9:	48 01 d0             	add    rax,rdx
    6dec:	48 c1 e0 03          	shl    rax,0x3
    6df0:	48 01 d0             	add    rax,rdx
    6df3:	48 c1 e0 04          	shl    rax,0x4
    6df7:	48 89 c2             	mov    rdx,rax
    6dfa:	48 8d 05 7f c9 0e 00 	lea    rax,[rip+0xec97f]        # f3780 <watchlist+0x260>
    6e01:	44 8b 04 02          	mov    r8d,DWORD PTR [rdx+rax*1]
    6e05:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6e0b:	48 63 d0             	movsxd rdx,eax
    6e0e:	48 89 d0             	mov    rax,rdx
    6e11:	48 c1 e0 02          	shl    rax,0x2
    6e15:	48 01 d0             	add    rax,rdx
    6e18:	48 c1 e0 03          	shl    rax,0x3
    6e1c:	48 01 d0             	add    rax,rdx
    6e1f:	48 c1 e0 04          	shl    rax,0x4
    6e23:	48 89 c2             	mov    rdx,rax
    6e26:	48 8d 05 5b c9 0e 00 	lea    rax,[rip+0xec95b]        # f3788 <watchlist+0x268>
    6e2d:	8b 3c 02             	mov    edi,DWORD PTR [rdx+rax*1]
    6e30:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6e36:	48 63 d0             	movsxd rdx,eax
    6e39:	48 89 d0             	mov    rax,rdx
    6e3c:	48 c1 e0 02          	shl    rax,0x2
    6e40:	48 01 d0             	add    rax,rdx
    6e43:	48 c1 e0 03          	shl    rax,0x3
    6e47:	48 01 d0             	add    rax,rdx
    6e4a:	48 c1 e0 04          	shl    rax,0x4
    6e4e:	48 89 c2             	mov    rdx,rax
    6e51:	48 8d 05 24 c9 0e 00 	lea    rax,[rip+0xec924]        # f377c <watchlist+0x25c>
    6e58:	44 8b 24 02          	mov    r12d,DWORD PTR [rdx+rax*1]
    6e5c:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6e62:	48 63 d0             	movsxd rdx,eax
    6e65:	48 89 d0             	mov    rax,rdx
    6e68:	48 c1 e0 02          	shl    rax,0x2
    6e6c:	48 01 d0             	add    rax,rdx
    6e6f:	48 c1 e0 03          	shl    rax,0x3
    6e73:	48 01 d0             	add    rax,rdx
    6e76:	48 c1 e0 04          	shl    rax,0x4
    6e7a:	48 89 c2             	mov    rdx,rax
    6e7d:	48 8d 05 18 c9 0e 00 	lea    rax,[rip+0xec918]        # f379c <watchlist+0x27c>
    6e84:	8b 1c 02             	mov    ebx,DWORD PTR [rdx+rax*1]
    6e87:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6e8d:	48 63 d0             	movsxd rdx,eax
    6e90:	48 89 d0             	mov    rax,rdx
    6e93:	48 c1 e0 02          	shl    rax,0x2
    6e97:	48 01 d0             	add    rax,rdx
    6e9a:	48 c1 e0 03          	shl    rax,0x3
    6e9e:	48 01 d0             	add    rax,rdx
    6ea1:	48 c1 e0 04          	shl    rax,0x4
    6ea5:	48 89 c2             	mov    rdx,rax
    6ea8:	48 8d 05 f1 c8 0e 00 	lea    rax,[rip+0xec8f1]        # f37a0 <watchlist+0x280>
    6eaf:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
    6eb2:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6eb8:	48 63 d0             	movsxd rdx,eax
    6ebb:	48 89 d0             	mov    rax,rdx
    6ebe:	48 c1 e0 02          	shl    rax,0x2
    6ec2:	48 01 d0             	add    rax,rdx
    6ec5:	48 c1 e0 03          	shl    rax,0x3
    6ec9:	48 01 d0             	add    rax,rdx
    6ecc:	48 c1 e0 04          	shl    rax,0x4
    6ed0:	48 89 c2             	mov    rdx,rax
    6ed3:	48 8d 05 9e c8 0e 00 	lea    rax,[rip+0xec89e]        # f3778 <watchlist+0x258>
    6eda:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
    6edd:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6ee3:	48 63 d0             	movsxd rdx,eax
    6ee6:	48 89 d0             	mov    rax,rdx
    6ee9:	48 c1 e0 02          	shl    rax,0x2
    6eed:	48 01 d0             	add    rax,rdx
    6ef0:	48 c1 e0 03          	shl    rax,0x3
    6ef4:	48 01 d0             	add    rax,rdx
    6ef7:	48 c1 e0 04          	shl    rax,0x4
    6efb:	48 8d 15 1e c6 0e 00 	lea    rdx,[rip+0xec61e]        # f3520 <watchlist>
    6f02:	48 01 d0             	add    rax,rdx
    6f05:	48 83 c0 08          	add    rax,0x8
    6f09:	48 83 ec 08          	sub    rsp,0x8
    6f0d:	41 53                	push   r11
    6f0f:	41 52                	push   r10
    6f11:	41 51                	push   r9
    6f13:	41 50                	push   r8
    6f15:	57                   	push   rdi
    6f16:	45 89 e1             	mov    r9d,r12d
    6f19:	41 89 d8             	mov    r8d,ebx
    6f1c:	89 f2                	mov    edx,esi
    6f1e:	48 89 c6             	mov    rsi,rax
    6f21:	48 8d 3d 38 61 00 00 	lea    rdi,[rip+0x6138]        # d060 <_IO_stdin_used+0x1060>
    6f28:	b8 00 00 00 00       	mov    eax,0x0
    6f2d:	e8 9e b5 ff ff       	call   24d0 <printf@plt>
    6f32:	48 83 c4 30          	add    rsp,0x30
    6f36:	83 85 c4 fe ff ff 01 	add    DWORD PTR [rbp-0x13c],0x1
    6f3d:	8b 05 d5 a0 00 00    	mov    eax,DWORD PTR [rip+0xa0d5]        # 11018 <watchlist_num>
    6f43:	39 85 c4 fe ff ff    	cmp    DWORD PTR [rbp-0x13c],eax
    6f49:	0f 8e 06 fe ff ff    	jle    6d55 <sigint_processor+0xb2>
    6f4f:	48 8d 35 aa 61 00 00 	lea    rsi,[rip+0x61aa]        # d100 <_IO_stdin_used+0x1100>
    6f56:	48 8d 3d a5 61 00 00 	lea    rdi,[rip+0x61a5]        # d102 <_IO_stdin_used+0x1102>
    6f5d:	e8 5e b6 ff ff       	call   25c0 <fopen@plt>
    6f62:	48 89 85 d8 fe ff ff 	mov    QWORD PTR [rbp-0x128],rax
    6f69:	48 83 bd d8 fe ff ff 	cmp    QWORD PTR [rbp-0x128],0x0
    6f70:	00 
    6f71:	0f 85 99 00 00 00    	jne    7010 <sigint_processor+0x36d>
    6f77:	48 8d 3d a2 61 00 00 	lea    rdi,[rip+0x61a2]        # d120 <_IO_stdin_used+0x1120>
    6f7e:	e8 ad b5 ff ff       	call   2530 <puts@plt>
    6f83:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    6f8a:	48 89 c7             	mov    rdi,rax
    6f8d:	e8 ae b8 ff ff       	call   2840 <fclose@plt>
    6f92:	c7 85 c8 fe ff ff 00 	mov    DWORD PTR [rbp-0x138],0x0
    6f99:	00 00 00 
    6f9c:	eb 5f                	jmp    6ffd <sigint_processor+0x35a>
    6f9e:	8b 85 c8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x138]
    6fa4:	48 63 d0             	movsxd rdx,eax
    6fa7:	48 89 d0             	mov    rax,rdx
    6faa:	48 c1 e0 04          	shl    rax,0x4
    6fae:	48 01 d0             	add    rax,rdx
    6fb1:	48 01 c0             	add    rax,rax
    6fb4:	48 8d 50 10          	lea    rdx,[rax+0x10]
    6fb8:	48 8d 05 61 0d 10 00 	lea    rax,[rip+0x100d61]        # 107d20 <arpcache>
    6fbf:	48 01 c2             	add    rdx,rax
    6fc2:	8b 85 c8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x138]
    6fc8:	48 63 c8             	movsxd rcx,eax
    6fcb:	48 89 c8             	mov    rax,rcx
    6fce:	48 c1 e0 04          	shl    rax,0x4
    6fd2:	48 01 c8             	add    rax,rcx
    6fd5:	48 01 c0             	add    rax,rax
    6fd8:	48 8d 0d 41 0d 10 00 	lea    rcx,[rip+0x100d41]        # 107d20 <arpcache>
    6fdf:	48 01 c8             	add    rax,rcx
    6fe2:	48 89 c6             	mov    rsi,rax
    6fe5:	48 8d 3d 7b 61 00 00 	lea    rdi,[rip+0x617b]        # d167 <_IO_stdin_used+0x1167>
    6fec:	b8 00 00 00 00       	mov    eax,0x0
    6ff1:	e8 da b4 ff ff       	call   24d0 <printf@plt>
    6ff6:	83 85 c8 fe ff ff 01 	add    DWORD PTR [rbp-0x138],0x1
    6ffd:	8b 05 19 a0 00 00    	mov    eax,DWORD PTR [rip+0xa019]        # 1101c <arp_entries>
    7003:	39 85 c8 fe ff ff    	cmp    DWORD PTR [rbp-0x138],eax
    7009:	7e 93                	jle    6f9e <sigint_processor+0x2fb>
    700b:	e9 da 00 00 00       	jmp    70ea <sigint_processor+0x447>
    7010:	c7 85 cc fe ff ff 00 	mov    DWORD PTR [rbp-0x134],0x0
    7017:	00 00 00 
    701a:	eb 67                	jmp    7083 <sigint_processor+0x3e0>
    701c:	8b 85 cc fe ff ff    	mov    eax,DWORD PTR [rbp-0x134]
    7022:	48 63 d0             	movsxd rdx,eax
    7025:	48 89 d0             	mov    rax,rdx
    7028:	48 c1 e0 04          	shl    rax,0x4
    702c:	48 01 d0             	add    rax,rdx
    702f:	48 01 c0             	add    rax,rax
    7032:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7036:	48 8d 05 e3 0c 10 00 	lea    rax,[rip+0x100ce3]        # 107d20 <arpcache>
    703d:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    7041:	8b 85 cc fe ff ff    	mov    eax,DWORD PTR [rbp-0x134]
    7047:	48 63 d0             	movsxd rdx,eax
    704a:	48 89 d0             	mov    rax,rdx
    704d:	48 c1 e0 04          	shl    rax,0x4
    7051:	48 01 d0             	add    rax,rdx
    7054:	48 01 c0             	add    rax,rax
    7057:	48 8d 15 c2 0c 10 00 	lea    rdx,[rip+0x100cc2]        # 107d20 <arpcache>
    705e:	48 01 c2             	add    rdx,rax
    7061:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    7068:	48 8d 35 02 61 00 00 	lea    rsi,[rip+0x6102]        # d171 <_IO_stdin_used+0x1171>
    706f:	48 89 c7             	mov    rdi,rax
    7072:	b8 00 00 00 00       	mov    eax,0x0
    7077:	e8 44 b8 ff ff       	call   28c0 <fprintf@plt>
    707c:	83 85 cc fe ff ff 01 	add    DWORD PTR [rbp-0x134],0x1
    7083:	8b 05 93 9f 00 00    	mov    eax,DWORD PTR [rip+0x9f93]        # 1101c <arp_entries>
    7089:	39 85 cc fe ff ff    	cmp    DWORD PTR [rbp-0x134],eax
    708f:	7e 8b                	jle    701c <sigint_processor+0x379>
    7091:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    7098:	48 89 c7             	mov    rdi,rax
    709b:	e8 a0 b7 ff ff       	call   2840 <fclose@plt>
    70a0:	c7 85 d0 fe ff ff 00 	mov    DWORD PTR [rbp-0x130],0x0
    70a7:	00 00 00 
    70aa:	eb 2f                	jmp    70db <sigint_processor+0x438>
    70ac:	8b 85 d0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x130]
    70b2:	48 98                	cdqe   
    70b4:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    70bb:	00 
    70bc:	48 8d 05 dd 9f 00 00 	lea    rax,[rip+0x9fdd]        # 110a0 <threads>
    70c3:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    70c7:	be 00 00 00 00       	mov    esi,0x0
    70cc:	48 89 c7             	mov    rdi,rax
    70cf:	e8 ec b3 ff ff       	call   24c0 <pthread_join@plt>
    70d4:	83 85 d0 fe ff ff 01 	add    DWORD PTR [rbp-0x130],0x1
    70db:	8b 05 bf a1 00 00    	mov    eax,DWORD PTR [rip+0xa1bf]        # 112a0 <thread_count>
    70e1:	39 85 d0 fe ff ff    	cmp    DWORD PTR [rbp-0x130],eax
    70e7:	7c c3                	jl     70ac <sigint_processor+0x409>
    70e9:	90                   	nop
    70ea:	bf 00 00 00 00       	mov    edi,0x0
    70ef:	e8 5c b4 ff ff       	call   2550 <exit@plt>

00000000000070f4 <print_help_and_exit>:
    70f4:	f3 0f 1e fa          	endbr64 
    70f8:	55                   	push   rbp
    70f9:	48 89 e5             	mov    rbp,rsp
    70fc:	48 8d 35 75 60 00 00 	lea    rsi,[rip+0x6075]        # d178 <_IO_stdin_used+0x1178>
    7103:	48 8d 3d 76 60 00 00 	lea    rdi,[rip+0x6076]        # d180 <_IO_stdin_used+0x1180>
    710a:	b8 00 00 00 00       	mov    eax,0x0
    710f:	e8 bc b3 ff ff       	call   24d0 <printf@plt>
    7114:	bf 00 00 00 00       	mov    edi,0x0
    7119:	e8 32 b4 ff ff       	call   2550 <exit@plt>

000000000000711e <print_cpu_info>:
    711e:	f3 0f 1e fa          	endbr64 
    7122:	55                   	push   rbp
    7123:	48 89 e5             	mov    rbp,rsp
    7126:	53                   	push   rbx
    7127:	48 81 ec 48 02 00 00 	sub    rsp,0x248
    712e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7135:	00 00 
    7137:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    713b:	31 c0                	xor    eax,eax
    713d:	48 8d 35 c3 60 00 00 	lea    rsi,[rip+0x60c3]        # d207 <_IO_stdin_used+0x1207>
    7144:	48 8d 3d bf 60 00 00 	lea    rdi,[rip+0x60bf]        # d20a <_IO_stdin_used+0x120a>
    714b:	e8 70 b4 ff ff       	call   25c0 <fopen@plt>
    7150:	48 89 85 d8 fd ff ff 	mov    QWORD PTR [rbp-0x228],rax
    7157:	48 c7 85 c8 fd ff ff 	mov    QWORD PTR [rbp-0x238],0x0
    715e:	00 00 00 00 
    7162:	48 c7 85 d0 fd ff ff 	mov    QWORD PTR [rbp-0x230],0x0
    7169:	00 00 00 00 
    716d:	c7 85 bc fd ff ff 00 	mov    DWORD PTR [rbp-0x244],0x0
    7174:	00 00 00 
    7177:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    717e:	ba 00 02 00 00       	mov    edx,0x200
    7183:	be 00 00 00 00       	mov    esi,0x0
    7188:	48 89 c7             	mov    rdi,rax
    718b:	e8 50 b3 ff ff       	call   24e0 <memset@plt>
    7190:	e9 b3 00 00 00       	jmp    7248 <print_cpu_info+0x12a>
    7195:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    719c:	ba 0a 00 00 00       	mov    edx,0xa
    71a1:	48 89 c6             	mov    rsi,rax
    71a4:	48 8d 3d 6d 60 00 00 	lea    rdi,[rip+0x606d]        # d218 <_IO_stdin_used+0x1218>
    71ab:	e8 f0 b3 ff ff       	call   25a0 <strncmp@plt>
    71b0:	85 c0                	test   eax,eax
    71b2:	0f 85 90 00 00 00    	jne    7248 <print_cpu_info+0x12a>
    71b8:	c7 85 c0 fd ff ff 00 	mov    DWORD PTR [rbp-0x240],0x0
    71bf:	00 00 00 
    71c2:	c7 85 c4 fd ff ff 00 	mov    DWORD PTR [rbp-0x23c],0x0
    71c9:	00 00 00 
    71cc:	eb 2e                	jmp    71fc <print_cpu_info+0xde>
    71ce:	48 8b 95 c8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x238]
    71d5:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    71db:	48 98                	cdqe   
    71dd:	48 01 d0             	add    rax,rdx
    71e0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    71e3:	3c 3a                	cmp    al,0x3a
    71e5:	75 0e                	jne    71f5 <print_cpu_info+0xd7>
    71e7:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    71ed:	89 85 c0 fd ff ff    	mov    DWORD PTR [rbp-0x240],eax
    71f3:	eb 24                	jmp    7219 <print_cpu_info+0xfb>
    71f5:	83 85 c4 fd ff ff 01 	add    DWORD PTR [rbp-0x23c],0x1
    71fc:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    7202:	48 63 d8             	movsxd rbx,eax
    7205:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    720c:	48 89 c7             	mov    rdi,rax
    720f:	e8 3c b4 ff ff       	call   2650 <strlen@plt>
    7214:	48 39 c3             	cmp    rbx,rax
    7217:	72 b5                	jb     71ce <print_cpu_info+0xb0>
    7219:	83 85 bc fd ff ff 01 	add    DWORD PTR [rbp-0x244],0x1
    7220:	48 8b 95 c8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x238]
    7227:	8b 85 c0 fd ff ff    	mov    eax,DWORD PTR [rbp-0x240]
    722d:	48 98                	cdqe   
    722f:	48 83 c0 02          	add    rax,0x2
    7233:	48 01 c2             	add    rdx,rax
    7236:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    723d:	48 89 d6             	mov    rsi,rdx
    7240:	48 89 c7             	mov    rdi,rax
    7243:	e8 b8 b4 ff ff       	call   2700 <strcat@plt>
    7248:	48 8b 95 d8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x228]
    724f:	48 8d b5 d0 fd ff ff 	lea    rsi,[rbp-0x230]
    7256:	48 8d 85 c8 fd ff ff 	lea    rax,[rbp-0x238]
    725d:	48 89 d1             	mov    rcx,rdx
    7260:	ba 0a 00 00 00       	mov    edx,0xa
    7265:	48 89 c7             	mov    rdi,rax
    7268:	e8 73 b6 ff ff       	call   28e0 <getdelim@plt>
    726d:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
    7271:	0f 85 1e ff ff ff    	jne    7195 <print_cpu_info+0x77>
    7277:	48 8d 95 e0 fd ff ff 	lea    rdx,[rbp-0x220]
    727e:	8b 85 bc fd ff ff    	mov    eax,DWORD PTR [rbp-0x244]
    7284:	89 c6                	mov    esi,eax
    7286:	48 8d 3d 96 5f 00 00 	lea    rdi,[rip+0x5f96]        # d223 <_IO_stdin_used+0x1223>
    728d:	b8 00 00 00 00       	mov    eax,0x0
    7292:	e8 39 b2 ff ff       	call   24d0 <printf@plt>
    7297:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    729e:	48 89 c7             	mov    rdi,rax
    72a1:	e8 9a b3 ff ff       	call   2640 <free@plt>
    72a6:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    72ad:	48 89 c7             	mov    rdi,rax
    72b0:	e8 8b b5 ff ff       	call   2840 <fclose@plt>
    72b5:	90                   	nop
    72b6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    72ba:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    72c1:	00 00 
    72c3:	74 05                	je     72ca <print_cpu_info+0x1ac>
    72c5:	e8 f6 b4 ff ff       	call   27c0 <__stack_chk_fail@plt>
    72ca:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    72ce:	c9                   	leave  
    72cf:	c3                   	ret    

00000000000072d0 <print_logo>:
    72d0:	f3 0f 1e fa          	endbr64 
    72d4:	55                   	push   rbp
    72d5:	48 89 e5             	mov    rbp,rsp
    72d8:	48 8d 3d 59 5f 00 00 	lea    rdi,[rip+0x5f59]        # d238 <_IO_stdin_used+0x1238>
    72df:	e8 4c b2 ff ff       	call   2530 <puts@plt>
    72e4:	90                   	nop
    72e5:	5d                   	pop    rbp
    72e6:	c3                   	ret    

00000000000072e7 <start_nsh_server>:
    72e7:	f3 0f 1e fa          	endbr64 
    72eb:	55                   	push   rbp
    72ec:	48 89 e5             	mov    rbp,rsp
    72ef:	48 83 ec 10          	sub    rsp,0x10
    72f3:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    72fa:	00 00 
    72fc:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7300:	31 c0                	xor    eax,eax
    7302:	48 8d 45 f0          	lea    rax,[rbp-0x10]
    7306:	b9 00 00 00 00       	mov    ecx,0x0
    730b:	48 8d 15 71 00 00 00 	lea    rdx,[rip+0x71]        # 7383 <actually_start_nsh_server>
    7312:	be 00 00 00 00       	mov    esi,0x0
    7317:	48 89 c7             	mov    rdi,rax
    731a:	e8 01 b3 ff ff       	call   2620 <pthread_create@plt>
    731f:	90                   	nop
    7320:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7324:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    732b:	00 00 
    732d:	74 05                	je     7334 <start_nsh_server+0x4d>
    732f:	e8 8c b4 ff ff       	call   27c0 <__stack_chk_fail@plt>
    7334:	c9                   	leave  
    7335:	c3                   	ret    

0000000000007336 <rnstrip>:
    7336:	f3 0f 1e fa          	endbr64 
    733a:	55                   	push   rbp
    733b:	48 89 e5             	mov    rbp,rsp
    733e:	48 83 ec 10          	sub    rsp,0x10
    7342:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7346:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    734a:	48 8d 35 5f 60 00 00 	lea    rsi,[rip+0x605f]        # d3b0 <_IO_stdin_used+0x13b0>
    7351:	48 89 c7             	mov    rdi,rax
    7354:	e8 17 b5 ff ff       	call   2870 <strcspn@plt>
    7359:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    735d:	48 01 d0             	add    rax,rdx
    7360:	c6 00 00             	mov    BYTE PTR [rax],0x0
    7363:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7367:	48 8d 35 44 60 00 00 	lea    rsi,[rip+0x6044]        # d3b2 <_IO_stdin_used+0x13b2>
    736e:	48 89 c7             	mov    rdi,rax
    7371:	e8 fa b4 ff ff       	call   2870 <strcspn@plt>
    7376:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    737a:	48 01 d0             	add    rax,rdx
    737d:	c6 00 00             	mov    BYTE PTR [rax],0x0
    7380:	90                   	nop
    7381:	c9                   	leave  
    7382:	c3                   	ret    

0000000000007383 <actually_start_nsh_server>:
    7383:	f3 0f 1e fa          	endbr64 
    7387:	55                   	push   rbp
    7388:	48 89 e5             	mov    rbp,rsp
    738b:	48 83 ec 50          	sub    rsp,0x50
    738f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7396:	00 00 
    7398:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    739c:	31 c0                	xor    eax,eax
    739e:	c7 45 bc 10 00 00 00 	mov    DWORD PTR [rbp-0x44],0x10
    73a5:	ba 00 00 00 00       	mov    edx,0x0
    73aa:	be 01 00 00 00       	mov    esi,0x1
    73af:	bf 02 00 00 00       	mov    edi,0x2
    73b4:	e8 e7 b3 ff ff       	call   27a0 <socket@plt>
    73b9:	89 45 c0             	mov    DWORD PTR [rbp-0x40],eax
    73bc:	83 7d c0 00          	cmp    DWORD PTR [rbp-0x40],0x0
    73c0:	75 16                	jne    73d8 <actually_start_nsh_server+0x55>
    73c2:	48 8d 3d ef 5f 00 00 	lea    rdi,[rip+0x5fef]        # d3b8 <_IO_stdin_used+0x13b8>
    73c9:	e8 62 b1 ff ff       	call   2530 <puts@plt>
    73ce:	bf 01 00 00 00       	mov    edi,0x1
    73d3:	e8 78 b1 ff ff       	call   2550 <exit@plt>
    73d8:	48 8d 55 bc          	lea    rdx,[rbp-0x44]
    73dc:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    73df:	41 b8 04 00 00 00    	mov    r8d,0x4
    73e5:	48 89 d1             	mov    rcx,rdx
    73e8:	ba 02 00 00 00       	mov    edx,0x2
    73ed:	be 01 00 00 00       	mov    esi,0x1
    73f2:	89 c7                	mov    edi,eax
    73f4:	e8 f7 b1 ff ff       	call   25f0 <setsockopt@plt>
    73f9:	85 c0                	test   eax,eax
    73fb:	74 16                	je     7413 <actually_start_nsh_server+0x90>
    73fd:	48 8d 3d dc 5f 00 00 	lea    rdi,[rip+0x5fdc]        # d3e0 <_IO_stdin_used+0x13e0>
    7404:	e8 27 b1 ff ff       	call   2530 <puts@plt>
    7409:	bf 01 00 00 00       	mov    edi,0x1
    740e:	e8 3d b1 ff ff       	call   2550 <exit@plt>
    7413:	66 c7 45 e0 02 00    	mov    WORD PTR [rbp-0x20],0x2
    7419:	bf 00 00 00 00       	mov    edi,0x0
    741e:	e8 7d b4 ff ff       	call   28a0 <htonl@plt>
    7423:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
    7426:	bf 81 02 00 00       	mov    edi,0x281
    742b:	e8 10 b1 ff ff       	call   2540 <htons@plt>
    7430:	66 89 45 e2          	mov    WORD PTR [rbp-0x1e],ax
    7434:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
    7438:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    743b:	ba 10 00 00 00       	mov    edx,0x10
    7440:	48 89 ce             	mov    rsi,rcx
    7443:	89 c7                	mov    edi,eax
    7445:	e8 36 b4 ff ff       	call   2880 <bind@plt>
    744a:	85 c0                	test   eax,eax
    744c:	79 16                	jns    7464 <actually_start_nsh_server+0xe1>
    744e:	48 8d 3d b3 5f 00 00 	lea    rdi,[rip+0x5fb3]        # d408 <_IO_stdin_used+0x1408>
    7455:	e8 d6 b0 ff ff       	call   2530 <puts@plt>
    745a:	bf 01 00 00 00       	mov    edi,0x1
    745f:	e8 ec b0 ff ff       	call   2550 <exit@plt>
    7464:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    7467:	be 05 00 00 00       	mov    esi,0x5
    746c:	89 c7                	mov    edi,eax
    746e:	e8 fd b1 ff ff       	call   2670 <listen@plt>
    7473:	85 c0                	test   eax,eax
    7475:	79 16                	jns    748d <actually_start_nsh_server+0x10a>
    7477:	48 8d 3d c2 5f 00 00 	lea    rdi,[rip+0x5fc2]        # d440 <_IO_stdin_used+0x1440>
    747e:	e8 ad b0 ff ff       	call   2530 <puts@plt>
    7483:	bf 01 00 00 00       	mov    edi,0x1
    7488:	e8 c3 b0 ff ff       	call   2550 <exit@plt>
    748d:	48 8d 55 bc          	lea    rdx,[rbp-0x44]
    7491:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
    7495:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    7498:	48 89 ce             	mov    rsi,rcx
    749b:	89 c7                	mov    edi,eax
    749d:	e8 4e b4 ff ff       	call   28f0 <accept@plt>
    74a2:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    74a5:	83 7d c4 00          	cmp    DWORD PTR [rbp-0x3c],0x0
    74a9:	79 20                	jns    74cb <actually_start_nsh_server+0x148>
    74ab:	b8 00 00 00 00       	mov    eax,0x0
    74b0:	e8 34 bf ff ff       	call   33e9 <get_formated_time>
    74b5:	48 89 c6             	mov    rsi,rax
    74b8:	48 8d 3d b1 5f 00 00 	lea    rdi,[rip+0x5fb1]        # d470 <_IO_stdin_used+0x1470>
    74bf:	b8 00 00 00 00       	mov    eax,0x0
    74c4:	e8 07 b0 ff ff       	call   24d0 <printf@plt>
    74c9:	eb c2                	jmp    748d <actually_start_nsh_server+0x10a>
    74cb:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    74ce:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
    74d1:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    74d5:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    74d9:	48 8d 55 d0          	lea    rdx,[rbp-0x30]
    74dd:	48 8d 45 c8          	lea    rax,[rbp-0x38]
    74e1:	48 89 d1             	mov    rcx,rdx
    74e4:	48 8d 15 0f 00 00 00 	lea    rdx,[rip+0xf]        # 74fa <accept_cmd>
    74eb:	be 00 00 00 00       	mov    esi,0x0
    74f0:	48 89 c7             	mov    rdi,rax
    74f3:	e8 28 b1 ff ff       	call   2620 <pthread_create@plt>
    74f8:	eb 93                	jmp    748d <actually_start_nsh_server+0x10a>

00000000000074fa <accept_cmd>:
    74fa:	f3 0f 1e fa          	endbr64 
    74fe:	55                   	push   rbp
    74ff:	48 89 e5             	mov    rbp,rsp
    7502:	48 83 ec 30          	sub    rsp,0x30
    7506:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    750a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    750e:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    7512:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    7516:	8b 00                	mov    eax,DWORD PTR [rax]
    7518:	64 48 8b 14 25 00 00 	mov    rdx,QWORD PTR fs:0x0
    751f:	00 00 
    7521:	48 8d 8a 00 fc ff ff 	lea    rcx,[rdx-0x400]
    7528:	ba 00 04 00 00       	mov    edx,0x400
    752d:	48 89 ce             	mov    rsi,rcx
    7530:	89 c7                	mov    edi,eax
    7532:	e8 59 b0 ff ff       	call   2590 <read@plt>
    7537:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
    753a:	83 7d ec 00          	cmp    DWORD PTR [rbp-0x14],0x0
    753e:	7e 45                	jle    7585 <accept_cmd+0x8b>
    7540:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    7547:	00 00 
    7549:	48 05 00 fc ff ff    	add    rax,0xfffffffffffffc00
    754f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7553:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7557:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    755a:	0f b6 c0             	movzx  eax,al
    755d:	89 c6                	mov    esi,eax
    755f:	48 8d 3d 2c 5f 00 00 	lea    rdi,[rip+0x5f2c]        # d492 <_IO_stdin_used+0x1492>
    7566:	b8 00 00 00 00       	mov    eax,0x0
    756b:	e8 60 af ff ff       	call   24d0 <printf@plt>
    7570:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    7574:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7578:	48 89 d6             	mov    rsi,rdx
    757b:	48 89 c7             	mov    rdi,rax
    757e:	e8 98 0c 00 00       	call   821b <process_opcode>
    7583:	eb 8d                	jmp    7512 <accept_cmd+0x18>
    7585:	90                   	nop
    7586:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    758a:	8b 00                	mov    eax,DWORD PTR [rax]
    758c:	89 c7                	mov    edi,eax
    758e:	e8 7d af ff ff       	call   2510 <close@plt>
    7593:	90                   	nop
    7594:	c9                   	leave  
    7595:	c3                   	ret    

0000000000007596 <tcp_rst_portscan_detect>:
    7596:	f3 0f 1e fa          	endbr64 
    759a:	55                   	push   rbp
    759b:	48 89 e5             	mov    rbp,rsp
    759e:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    75a5:	48 89 bd c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rdi
    75ac:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    75b3:	00 00 
    75b5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    75b9:	31 c0                	xor    eax,eax
    75bb:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    75c2:	00 00 00 
    75c5:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    75cc:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    75d2:	83 f8 1e             	cmp    eax,0x1e
    75d5:	74 0a                	je     75e1 <tcp_rst_portscan_detect+0x4b>
    75d7:	b8 00 00 00 00       	mov    eax,0x0
    75dc:	e9 8d 01 00 00       	jmp    776e <tcp_rst_portscan_detect+0x1d8>
    75e1:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    75e8:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    75ee:	83 e8 01             	sub    eax,0x1
    75f1:	89 85 d8 fe ff ff    	mov    DWORD PTR [rbp-0x128],eax
    75f7:	eb 6c                	jmp    7665 <tcp_rst_portscan_detect+0xcf>
    75f9:	8b 85 d8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x128]
    75ff:	89 85 e4 fe ff ff    	mov    DWORD PTR [rbp-0x11c],eax
    7605:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    760c:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    7612:	48 63 d2             	movsxd rdx,edx
    7615:	48 83 c2 28          	add    rdx,0x28
    7619:	48 8b 44 d0 10       	mov    rax,QWORD PTR [rax+rdx*8+0x10]
    761e:	89 c1                	mov    ecx,eax
    7620:	83 ad d8 fe ff ff 01 	sub    DWORD PTR [rbp-0x128],0x1
    7627:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    762e:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    7634:	48 63 d2             	movsxd rdx,edx
    7637:	48 83 c2 28          	add    rdx,0x28
    763b:	48 8b 44 d0 10       	mov    rax,QWORD PTR [rax+rdx*8+0x10]
    7640:	29 c1                	sub    ecx,eax
    7642:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
    7648:	8d 50 01             	lea    edx,[rax+0x1]
    764b:	89 95 d4 fe ff ff    	mov    DWORD PTR [rbp-0x12c],edx
    7651:	89 ca                	mov    edx,ecx
    7653:	48 98                	cdqe   
    7655:	89 94 85 f0 fe ff ff 	mov    DWORD PTR [rbp+rax*4-0x110],edx
    765c:	83 bd e4 fe ff ff 01 	cmp    DWORD PTR [rbp-0x11c],0x1
    7663:	74 0b                	je     7670 <tcp_rst_portscan_detect+0xda>
    7665:	83 bd d8 fe ff ff 00 	cmp    DWORD PTR [rbp-0x128],0x0
    766c:	75 8b                	jne    75f9 <tcp_rst_portscan_detect+0x63>
    766e:	eb 01                	jmp    7671 <tcp_rst_portscan_detect+0xdb>
    7670:	90                   	nop
    7671:	c7 85 dc fe ff ff 00 	mov    DWORD PTR [rbp-0x124],0x0
    7678:	00 00 00 
    767b:	c7 85 e0 fe ff ff 00 	mov    DWORD PTR [rbp-0x120],0x0
    7682:	00 00 00 
    7685:	eb 24                	jmp    76ab <tcp_rst_portscan_detect+0x115>
    7687:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    768d:	48 98                	cdqe   
    768f:	8b 84 85 f0 fe ff ff 	mov    eax,DWORD PTR [rbp+rax*4-0x110]
    7696:	3d b3 b7 b4 00       	cmp    eax,0xb4b7b3
    769b:	7f 07                	jg     76a4 <tcp_rst_portscan_detect+0x10e>
    769d:	83 85 dc fe ff ff 01 	add    DWORD PTR [rbp-0x124],0x1
    76a4:	83 85 e0 fe ff ff 01 	add    DWORD PTR [rbp-0x120],0x1
    76ab:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    76b1:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    76b7:	7c ce                	jl     7687 <tcp_rst_portscan_detect+0xf1>
    76b9:	8b 85 dc fe ff ff    	mov    eax,DWORD PTR [rbp-0x124]
    76bf:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    76c5:	0f 85 9e 00 00 00    	jne    7769 <tcp_rst_portscan_detect+0x1d3>
    76cb:	48 8b 05 5e 99 00 00 	mov    rax,QWORD PTR [rip+0x995e]        # 11030 <def_log_file>
    76d2:	48 8d 35 c7 5d 00 00 	lea    rsi,[rip+0x5dc7]        # d4a0 <_IO_stdin_used+0x14a0>
    76d9:	48 89 c7             	mov    rdi,rax
    76dc:	e8 df ae ff ff       	call   25c0 <fopen@plt>
    76e1:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
    76e8:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    76ef:	48 83 c0 08          	add    rax,0x8
    76f3:	48 89 c6             	mov    rsi,rax
    76f6:	48 8d 3d ab 5d 00 00 	lea    rdi,[rip+0x5dab]        # d4a8 <_IO_stdin_used+0x14a8>
    76fd:	b8 00 00 00 00       	mov    eax,0x0
    7702:	e8 c9 ad ff ff       	call   24d0 <printf@plt>
    7707:	b8 00 00 00 00       	mov    eax,0x0
    770c:	e8 d8 bc ff ff       	call   33e9 <get_formated_time>
    7711:	48 89 c1             	mov    rcx,rax
    7714:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    771b:	48 8d 50 08          	lea    rdx,[rax+0x8]
    771f:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    7726:	48 8d 35 ab 5d 00 00 	lea    rsi,[rip+0x5dab]        # d4d8 <_IO_stdin_used+0x14d8>
    772d:	48 89 c7             	mov    rdi,rax
    7730:	b8 00 00 00 00       	mov    eax,0x0
    7735:	e8 56 af ff ff       	call   2690 <sprintf@plt>
    773a:	48 8b 95 e8 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x118]
    7741:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    7748:	48 89 d6             	mov    rsi,rdx
    774b:	48 89 c7             	mov    rdi,rax
    774e:	e8 bd af ff ff       	call   2710 <fputs@plt>
    7753:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    775a:	48 89 c7             	mov    rdi,rax
    775d:	e8 de b0 ff ff       	call   2840 <fclose@plt>
    7762:	b8 01 00 00 00       	mov    eax,0x1
    7767:	eb 05                	jmp    776e <tcp_rst_portscan_detect+0x1d8>
    7769:	b8 00 00 00 00       	mov    eax,0x0
    776e:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    7772:	64 48 2b 34 25 28 00 	sub    rsi,QWORD PTR fs:0x28
    7779:	00 00 
    777b:	74 05                	je     7782 <tcp_rst_portscan_detect+0x1ec>
    777d:	e8 3e b0 ff ff       	call   27c0 <__stack_chk_fail@plt>
    7782:	c9                   	leave  
    7783:	c3                   	ret    

0000000000007784 <fin_rst_portscan_detect>:
    7784:	f3 0f 1e fa          	endbr64 
    7788:	55                   	push   rbp
    7789:	48 89 e5             	mov    rbp,rsp
    778c:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    7793:	48 89 bd c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rdi
    779a:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    77a1:	00 00 
    77a3:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    77a7:	31 c0                	xor    eax,eax
    77a9:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    77b0:	00 00 00 
    77b3:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    77ba:	8b 40 50             	mov    eax,DWORD PTR [rax+0x50]
    77bd:	83 f8 1e             	cmp    eax,0x1e
    77c0:	74 0a                	je     77cc <fin_rst_portscan_detect+0x48>
    77c2:	b8 00 00 00 00       	mov    eax,0x0
    77c7:	e9 8a 01 00 00       	jmp    7956 <fin_rst_portscan_detect+0x1d2>
    77cc:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    77d3:	8b 40 50             	mov    eax,DWORD PTR [rax+0x50]
    77d6:	83 e8 01             	sub    eax,0x1
    77d9:	89 85 d8 fe ff ff    	mov    DWORD PTR [rbp-0x128],eax
    77df:	eb 6c                	jmp    784d <fin_rst_portscan_detect+0xc9>
    77e1:	8b 85 d8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x128]
    77e7:	89 85 e4 fe ff ff    	mov    DWORD PTR [rbp-0x11c],eax
    77ed:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    77f4:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    77fa:	48 63 d2             	movsxd rdx,edx
    77fd:	48 83 c2 0a          	add    rdx,0xa
    7801:	48 8b 44 d0 08       	mov    rax,QWORD PTR [rax+rdx*8+0x8]
    7806:	89 c1                	mov    ecx,eax
    7808:	83 ad d8 fe ff ff 01 	sub    DWORD PTR [rbp-0x128],0x1
    780f:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7816:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    781c:	48 63 d2             	movsxd rdx,edx
    781f:	48 83 c2 0a          	add    rdx,0xa
    7823:	48 8b 44 d0 08       	mov    rax,QWORD PTR [rax+rdx*8+0x8]
    7828:	29 c1                	sub    ecx,eax
    782a:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
    7830:	8d 50 01             	lea    edx,[rax+0x1]
    7833:	89 95 d4 fe ff ff    	mov    DWORD PTR [rbp-0x12c],edx
    7839:	89 ca                	mov    edx,ecx
    783b:	48 98                	cdqe   
    783d:	89 94 85 f0 fe ff ff 	mov    DWORD PTR [rbp+rax*4-0x110],edx
    7844:	83 bd e4 fe ff ff 01 	cmp    DWORD PTR [rbp-0x11c],0x1
    784b:	74 0b                	je     7858 <fin_rst_portscan_detect+0xd4>
    784d:	83 bd d8 fe ff ff 00 	cmp    DWORD PTR [rbp-0x128],0x0
    7854:	75 8b                	jne    77e1 <fin_rst_portscan_detect+0x5d>
    7856:	eb 01                	jmp    7859 <fin_rst_portscan_detect+0xd5>
    7858:	90                   	nop
    7859:	c7 85 dc fe ff ff 00 	mov    DWORD PTR [rbp-0x124],0x0
    7860:	00 00 00 
    7863:	c7 85 e0 fe ff ff 00 	mov    DWORD PTR [rbp-0x120],0x0
    786a:	00 00 00 
    786d:	eb 24                	jmp    7893 <fin_rst_portscan_detect+0x10f>
    786f:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    7875:	48 98                	cdqe   
    7877:	8b 84 85 f0 fe ff ff 	mov    eax,DWORD PTR [rbp+rax*4-0x110]
    787e:	3d 73 7e e2 00       	cmp    eax,0xe27e73
    7883:	7f 07                	jg     788c <fin_rst_portscan_detect+0x108>
    7885:	83 85 dc fe ff ff 01 	add    DWORD PTR [rbp-0x124],0x1
    788c:	83 85 e0 fe ff ff 01 	add    DWORD PTR [rbp-0x120],0x1
    7893:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    7899:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    789f:	7c ce                	jl     786f <fin_rst_portscan_detect+0xeb>
    78a1:	8b 85 dc fe ff ff    	mov    eax,DWORD PTR [rbp-0x124]
    78a7:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    78ad:	0f 85 9e 00 00 00    	jne    7951 <fin_rst_portscan_detect+0x1cd>
    78b3:	48 8b 05 76 97 00 00 	mov    rax,QWORD PTR [rip+0x9776]        # 11030 <def_log_file>
    78ba:	48 8d 35 df 5b 00 00 	lea    rsi,[rip+0x5bdf]        # d4a0 <_IO_stdin_used+0x14a0>
    78c1:	48 89 c7             	mov    rdi,rax
    78c4:	e8 f7 ac ff ff       	call   25c0 <fopen@plt>
    78c9:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
    78d0:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    78d7:	48 83 c0 08          	add    rax,0x8
    78db:	48 89 c6             	mov    rsi,rax
    78de:	48 8d 3d 1b 5c 00 00 	lea    rdi,[rip+0x5c1b]        # d500 <_IO_stdin_used+0x1500>
    78e5:	b8 00 00 00 00       	mov    eax,0x0
    78ea:	e8 e1 ab ff ff       	call   24d0 <printf@plt>
    78ef:	b8 00 00 00 00       	mov    eax,0x0
    78f4:	e8 f0 ba ff ff       	call   33e9 <get_formated_time>
    78f9:	48 89 c1             	mov    rcx,rax
    78fc:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7903:	48 8d 50 08          	lea    rdx,[rax+0x8]
    7907:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    790e:	48 8d 35 1b 5c 00 00 	lea    rsi,[rip+0x5c1b]        # d530 <_IO_stdin_used+0x1530>
    7915:	48 89 c7             	mov    rdi,rax
    7918:	b8 00 00 00 00       	mov    eax,0x0
    791d:	e8 6e ad ff ff       	call   2690 <sprintf@plt>
    7922:	48 8b 95 e8 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x118]
    7929:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    7930:	48 89 d6             	mov    rsi,rdx
    7933:	48 89 c7             	mov    rdi,rax
    7936:	e8 d5 ad ff ff       	call   2710 <fputs@plt>
    793b:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    7942:	48 89 c7             	mov    rdi,rax
    7945:	e8 f6 ae ff ff       	call   2840 <fclose@plt>
    794a:	b8 01 00 00 00       	mov    eax,0x1
    794f:	eb 05                	jmp    7956 <fin_rst_portscan_detect+0x1d2>
    7951:	b8 00 00 00 00       	mov    eax,0x0
    7956:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    795a:	64 48 2b 34 25 28 00 	sub    rsi,QWORD PTR fs:0x28
    7961:	00 00 
    7963:	74 05                	je     796a <fin_rst_portscan_detect+0x1e6>
    7965:	e8 56 ae ff ff       	call   27c0 <__stack_chk_fail@plt>
    796a:	c9                   	leave  
    796b:	c3                   	ret    

000000000000796c <member_ready_for_scan>:
    796c:	f3 0f 1e fa          	endbr64 
    7970:	55                   	push   rbp
    7971:	48 89 e5             	mov    rbp,rsp
    7974:	48 83 ec 10          	sub    rsp,0x10
    7978:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    797f:	eb 48                	jmp    79c9 <member_ready_for_scan+0x5d>
    7981:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    7984:	48 63 d0             	movsxd rdx,eax
    7987:	48 89 d0             	mov    rax,rdx
    798a:	48 c1 e0 02          	shl    rax,0x2
    798e:	48 01 d0             	add    rax,rdx
    7991:	48 c1 e0 03          	shl    rax,0x3
    7995:	48 01 d0             	add    rax,rdx
    7998:	48 c1 e0 04          	shl    rax,0x4
    799c:	48 8d 15 7d bb 0e 00 	lea    rdx,[rip+0xebb7d]        # f3520 <watchlist>
    79a3:	48 01 d0             	add    rax,rdx
    79a6:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    79aa:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    79ae:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    79b4:	83 f8 1d             	cmp    eax,0x1d
    79b7:	76 0c                	jbe    79c5 <member_ready_for_scan+0x59>
    79b9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    79bd:	48 89 c7             	mov    rdi,rax
    79c0:	e8 d1 fb ff ff       	call   7596 <tcp_rst_portscan_detect>
    79c5:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    79c9:	8b 05 49 96 00 00    	mov    eax,DWORD PTR [rip+0x9649]        # 11018 <watchlist_num>
    79cf:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    79d2:	7e ad                	jle    7981 <member_ready_for_scan+0x15>
    79d4:	90                   	nop
    79d5:	90                   	nop
    79d6:	c9                   	leave  
    79d7:	c3                   	ret    

00000000000079d8 <member_exists>:
    79d8:	f3 0f 1e fa          	endbr64 
    79dc:	55                   	push   rbp
    79dd:	48 89 e5             	mov    rbp,rsp
    79e0:	48 83 ec 20          	sub    rsp,0x20
    79e4:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    79e8:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    79ef:	eb 47                	jmp    7a38 <member_exists+0x60>
    79f1:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    79f4:	8d 50 01             	lea    edx,[rax+0x1]
    79f7:	89 55 fc             	mov    DWORD PTR [rbp-0x4],edx
    79fa:	48 63 d0             	movsxd rdx,eax
    79fd:	48 89 d0             	mov    rax,rdx
    7a00:	48 c1 e0 02          	shl    rax,0x2
    7a04:	48 01 d0             	add    rax,rdx
    7a07:	48 c1 e0 03          	shl    rax,0x3
    7a0b:	48 01 d0             	add    rax,rdx
    7a0e:	48 c1 e0 04          	shl    rax,0x4
    7a12:	48 8d 15 07 bb 0e 00 	lea    rdx,[rip+0xebb07]        # f3520 <watchlist>
    7a19:	48 01 d0             	add    rax,rdx
    7a1c:	48 8d 50 08          	lea    rdx,[rax+0x8]
    7a20:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7a24:	48 89 c6             	mov    rsi,rax
    7a27:	48 89 d7             	mov    rdi,rdx
    7a2a:	e8 a1 ad ff ff       	call   27d0 <strcmp@plt>
    7a2f:	85 c0                	test   eax,eax
    7a31:	75 05                	jne    7a38 <member_exists+0x60>
    7a33:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7a36:	eb 10                	jmp    7a48 <member_exists+0x70>
    7a38:	8b 05 da 95 00 00    	mov    eax,DWORD PTR [rip+0x95da]        # 11018 <watchlist_num>
    7a3e:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7a41:	7e ae                	jle    79f1 <member_exists+0x19>
    7a43:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7a48:	c9                   	leave  
    7a49:	c3                   	ret    

0000000000007a4a <init_member>:
    7a4a:	f3 0f 1e fa          	endbr64 
    7a4e:	55                   	push   rbp
    7a4f:	48 89 e5             	mov    rbp,rsp
    7a52:	48 83 ec 20          	sub    rsp,0x20
    7a56:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7a5a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7a5e:	48 89 c7             	mov    rdi,rax
    7a61:	e8 72 ff ff ff       	call   79d8 <member_exists>
    7a66:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    7a69:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    7a6d:	74 42                	je     7ab1 <init_member+0x67>
    7a6f:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    7a72:	48 63 d0             	movsxd rdx,eax
    7a75:	48 89 d0             	mov    rax,rdx
    7a78:	48 c1 e0 02          	shl    rax,0x2
    7a7c:	48 01 d0             	add    rax,rdx
    7a7f:	48 c1 e0 03          	shl    rax,0x3
    7a83:	48 01 d0             	add    rax,rdx
    7a86:	48 c1 e0 04          	shl    rax,0x4
    7a8a:	48 8d 15 8f ba 0e 00 	lea    rdx,[rip+0xeba8f]        # f3520 <watchlist>
    7a91:	48 01 d0             	add    rax,rdx
    7a94:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7a98:	bf 00 00 00 00       	mov    edi,0x0
    7a9d:	e8 6e ae ff ff       	call   2910 <time@plt>
    7aa2:	48 89 c2             	mov    rdx,rax
    7aa5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7aa9:	48 89 10             	mov    QWORD PTR [rax],rdx
    7aac:	e9 a8 00 00 00       	jmp    7b59 <init_member+0x10f>
    7ab1:	48 8d 3d 9d 5a 00 00 	lea    rdi,[rip+0x5a9d]        # d555 <_IO_stdin_used+0x1555>
    7ab8:	e8 1b ff ff ff       	call   79d8 <member_exists>
    7abd:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    7ac0:	83 7d f4 00          	cmp    DWORD PTR [rbp-0xc],0x0
    7ac4:	74 2b                	je     7af1 <init_member+0xa7>
    7ac6:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    7ac9:	48 63 d0             	movsxd rdx,eax
    7acc:	48 89 d0             	mov    rax,rdx
    7acf:	48 c1 e0 02          	shl    rax,0x2
    7ad3:	48 01 d0             	add    rax,rdx
    7ad6:	48 c1 e0 03          	shl    rax,0x3
    7ada:	48 01 d0             	add    rax,rdx
    7add:	48 c1 e0 04          	shl    rax,0x4
    7ae1:	48 8d 15 38 ba 0e 00 	lea    rdx,[rip+0xeba38]        # f3520 <watchlist>
    7ae8:	48 01 d0             	add    rax,rdx
    7aeb:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7aef:	eb 3b                	jmp    7b2c <init_member+0xe2>
    7af1:	8b 05 21 95 00 00    	mov    eax,DWORD PTR [rip+0x9521]        # 11018 <watchlist_num>
    7af7:	83 c0 01             	add    eax,0x1
    7afa:	89 05 18 95 00 00    	mov    DWORD PTR [rip+0x9518],eax        # 11018 <watchlist_num>
    7b00:	8b 05 12 95 00 00    	mov    eax,DWORD PTR [rip+0x9512]        # 11018 <watchlist_num>
    7b06:	48 63 d0             	movsxd rdx,eax
    7b09:	48 89 d0             	mov    rax,rdx
    7b0c:	48 c1 e0 02          	shl    rax,0x2
    7b10:	48 01 d0             	add    rax,rdx
    7b13:	48 c1 e0 03          	shl    rax,0x3
    7b17:	48 01 d0             	add    rax,rdx
    7b1a:	48 c1 e0 04          	shl    rax,0x4
    7b1e:	48 8d 15 fb b9 0e 00 	lea    rdx,[rip+0xeb9fb]        # f3520 <watchlist>
    7b25:	48 01 d0             	add    rax,rdx
    7b28:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7b2c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7b30:	ba 08 00 00 00       	mov    edx,0x8
    7b35:	be 00 00 00 00       	mov    esi,0x0
    7b3a:	48 89 c7             	mov    rdi,rax
    7b3d:	e8 9e a9 ff ff       	call   24e0 <memset@plt>
    7b42:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7b46:	48 8d 50 08          	lea    rdx,[rax+0x8]
    7b4a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7b4e:	48 89 c6             	mov    rsi,rax
    7b51:	48 89 d7             	mov    rdi,rdx
    7b54:	e8 a7 ac ff ff       	call   2800 <strcpy@plt>
    7b59:	c9                   	leave  
    7b5a:	c3                   	ret    

0000000000007b5b <ready_for_clean>:
    7b5b:	f3 0f 1e fa          	endbr64 
    7b5f:	55                   	push   rbp
    7b60:	48 89 e5             	mov    rbp,rsp
    7b63:	48 83 ec 10          	sub    rsp,0x10
    7b67:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7b6b:	bf 00 00 00 00       	mov    edi,0x0
    7b70:	e8 9b ad ff ff       	call   2910 <time@plt>
    7b75:	48 89 c2             	mov    rdx,rax
    7b78:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7b7c:	48 8b 00             	mov    rax,QWORD PTR [rax]
    7b7f:	48 29 c2             	sub    rdx,rax
    7b82:	48 8b 05 2f 97 00 00 	mov    rax,QWORD PTR [rip+0x972f]        # 112b8 <clean_delay>
    7b89:	48 39 c2             	cmp    rdx,rax
    7b8c:	72 22                	jb     7bb0 <ready_for_clean+0x55>
    7b8e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7b92:	48 83 c0 08          	add    rax,0x8
    7b96:	48 8d 35 c0 59 00 00 	lea    rsi,[rip+0x59c0]        # d55d <_IO_stdin_used+0x155d>
    7b9d:	48 89 c7             	mov    rdi,rax
    7ba0:	e8 2b ac ff ff       	call   27d0 <strcmp@plt>
    7ba5:	85 c0                	test   eax,eax
    7ba7:	74 07                	je     7bb0 <ready_for_clean+0x55>
    7ba9:	b8 01 00 00 00       	mov    eax,0x1
    7bae:	eb 05                	jmp    7bb5 <ready_for_clean+0x5a>
    7bb0:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7bb5:	c9                   	leave  
    7bb6:	c3                   	ret    

0000000000007bb7 <clean>:
    7bb7:	f3 0f 1e fa          	endbr64 
    7bbb:	55                   	push   rbp
    7bbc:	48 89 e5             	mov    rbp,rsp
    7bbf:	48 83 ec 10          	sub    rsp,0x10
    7bc3:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7bc7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7bcb:	ba 08 00 00 00       	mov    edx,0x8
    7bd0:	be 00 00 00 00       	mov    esi,0x0
    7bd5:	48 89 c7             	mov    rdi,rax
    7bd8:	e8 03 a9 ff ff       	call   24e0 <memset@plt>
    7bdd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7be1:	48 83 c0 08          	add    rax,0x8
    7be5:	48 b9 30 2e 30 2e 30 	movabs rcx,0x312e302e302e30
    7bec:	2e 31 00 
    7bef:	48 89 08             	mov    QWORD PTR [rax],rcx
    7bf2:	90                   	nop
    7bf3:	c9                   	leave  
    7bf4:	c3                   	ret    

0000000000007bf5 <scan_for_clean>:
    7bf5:	f3 0f 1e fa          	endbr64 
    7bf9:	55                   	push   rbp
    7bfa:	48 89 e5             	mov    rbp,rsp
    7bfd:	48 83 ec 10          	sub    rsp,0x10
    7c01:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7c08:	eb 62                	jmp    7c6c <scan_for_clean+0x77>
    7c0a:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7c0d:	48 63 d0             	movsxd rdx,eax
    7c10:	48 89 d0             	mov    rax,rdx
    7c13:	48 c1 e0 02          	shl    rax,0x2
    7c17:	48 01 d0             	add    rax,rdx
    7c1a:	48 c1 e0 03          	shl    rax,0x3
    7c1e:	48 01 d0             	add    rax,rdx
    7c21:	48 c1 e0 04          	shl    rax,0x4
    7c25:	48 8d 15 f4 b8 0e 00 	lea    rdx,[rip+0xeb8f4]        # f3520 <watchlist>
    7c2c:	48 01 d0             	add    rax,rdx
    7c2f:	48 89 c7             	mov    rdi,rax
    7c32:	e8 24 ff ff ff       	call   7b5b <ready_for_clean>
    7c37:	85 c0                	test   eax,eax
    7c39:	7e 2d                	jle    7c68 <scan_for_clean+0x73>
    7c3b:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7c3e:	48 63 d0             	movsxd rdx,eax
    7c41:	48 89 d0             	mov    rax,rdx
    7c44:	48 c1 e0 02          	shl    rax,0x2
    7c48:	48 01 d0             	add    rax,rdx
    7c4b:	48 c1 e0 03          	shl    rax,0x3
    7c4f:	48 01 d0             	add    rax,rdx
    7c52:	48 c1 e0 04          	shl    rax,0x4
    7c56:	48 8d 15 c3 b8 0e 00 	lea    rdx,[rip+0xeb8c3]        # f3520 <watchlist>
    7c5d:	48 01 d0             	add    rax,rdx
    7c60:	48 89 c7             	mov    rdi,rax
    7c63:	e8 4f ff ff ff       	call   7bb7 <clean>
    7c68:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    7c6c:	8b 05 a6 93 00 00    	mov    eax,DWORD PTR [rip+0x93a6]        # 11018 <watchlist_num>
    7c72:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7c75:	7e 93                	jle    7c0a <scan_for_clean+0x15>
    7c77:	90                   	nop
    7c78:	90                   	nop
    7c79:	c9                   	leave  
    7c7a:	c3                   	ret    

0000000000007c7b <compare_entries>:
    7c7b:	f3 0f 1e fa          	endbr64 
    7c7f:	55                   	push   rbp
    7c80:	48 89 e5             	mov    rbp,rsp
    7c83:	48 83 ec 20          	sub    rsp,0x20
    7c87:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7c8b:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7c8f:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7c96:	e9 ac 00 00 00       	jmp    7d47 <compare_entries+0xcc>
    7c9b:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7c9e:	48 63 d0             	movsxd rdx,eax
    7ca1:	48 89 d0             	mov    rax,rdx
    7ca4:	48 c1 e0 04          	shl    rax,0x4
    7ca8:	48 01 d0             	add    rax,rdx
    7cab:	48 01 c0             	add    rax,rax
    7cae:	48 8d 15 6b 00 10 00 	lea    rdx,[rip+0x10006b]        # 107d20 <arpcache>
    7cb5:	48 01 c2             	add    rdx,rax
    7cb8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7cbc:	48 89 c6             	mov    rsi,rax
    7cbf:	48 89 d7             	mov    rdi,rdx
    7cc2:	e8 a3 01 00 00       	call   7e6a <compare_ip_entry>
    7cc7:	85 c0                	test   eax,eax
    7cc9:	74 78                	je     7d43 <compare_entries+0xc8>
    7ccb:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7cce:	48 63 d0             	movsxd rdx,eax
    7cd1:	48 89 d0             	mov    rax,rdx
    7cd4:	48 c1 e0 04          	shl    rax,0x4
    7cd8:	48 01 d0             	add    rax,rdx
    7cdb:	48 01 c0             	add    rax,rax
    7cde:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7ce2:	48 8d 05 37 00 10 00 	lea    rax,[rip+0x100037]        # 107d20 <arpcache>
    7ce9:	48 01 c2             	add    rdx,rax
    7cec:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7cf0:	48 89 c6             	mov    rsi,rax
    7cf3:	48 89 d7             	mov    rdi,rdx
    7cf6:	e8 98 01 00 00       	call   7e93 <compare_mac_entry>
    7cfb:	85 c0                	test   eax,eax
    7cfd:	75 44                	jne    7d43 <compare_entries+0xc8>
    7cff:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7d02:	48 63 d0             	movsxd rdx,eax
    7d05:	48 89 d0             	mov    rax,rdx
    7d08:	48 c1 e0 04          	shl    rax,0x4
    7d0c:	48 01 d0             	add    rax,rdx
    7d0f:	48 01 c0             	add    rax,rax
    7d12:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7d16:	48 8d 05 03 00 10 00 	lea    rax,[rip+0x100003]        # 107d20 <arpcache>
    7d1d:	48 8d 34 02          	lea    rsi,[rdx+rax*1]
    7d21:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    7d25:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7d29:	48 89 d1             	mov    rcx,rdx
    7d2c:	48 89 f2             	mov    rdx,rsi
    7d2f:	48 89 c6             	mov    rsi,rax
    7d32:	48 8d 3d 2f 58 00 00 	lea    rdi,[rip+0x582f]        # d568 <_IO_stdin_used+0x1568>
    7d39:	b8 00 00 00 00       	mov    eax,0x0
    7d3e:	e8 8d a7 ff ff       	call   24d0 <printf@plt>
    7d43:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    7d47:	8b 05 cf 92 00 00    	mov    eax,DWORD PTR [rip+0x92cf]        # 1101c <arp_entries>
    7d4d:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7d50:	0f 8e 45 ff ff ff    	jle    7c9b <compare_entries+0x20>
    7d56:	90                   	nop
    7d57:	90                   	nop
    7d58:	c9                   	leave  
    7d59:	c3                   	ret    

0000000000007d5a <add_entry>:
    7d5a:	f3 0f 1e fa          	endbr64 
    7d5e:	55                   	push   rbp
    7d5f:	48 89 e5             	mov    rbp,rsp
    7d62:	48 83 ec 20          	sub    rsp,0x20
    7d66:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7d6a:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7d6e:	8b 05 a8 92 00 00    	mov    eax,DWORD PTR [rip+0x92a8]        # 1101c <arp_entries>
    7d74:	83 c0 01             	add    eax,0x1
    7d77:	89 05 9f 92 00 00    	mov    DWORD PTR [rip+0x929f],eax        # 1101c <arp_entries>
    7d7d:	8b 05 99 92 00 00    	mov    eax,DWORD PTR [rip+0x9299]        # 1101c <arp_entries>
    7d83:	48 63 d0             	movsxd rdx,eax
    7d86:	48 89 d0             	mov    rax,rdx
    7d89:	48 c1 e0 04          	shl    rax,0x4
    7d8d:	48 01 d0             	add    rax,rdx
    7d90:	48 01 c0             	add    rax,rax
    7d93:	48 8d 15 86 ff 0f 00 	lea    rdx,[rip+0xfff86]        # 107d20 <arpcache>
    7d9a:	48 01 d0             	add    rax,rdx
    7d9d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7da1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7da5:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    7da9:	48 89 d6             	mov    rsi,rdx
    7dac:	48 89 c7             	mov    rdi,rax
    7daf:	e8 4c aa ff ff       	call   2800 <strcpy@plt>
    7db4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7db8:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7dbc:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7dc0:	48 89 c6             	mov    rsi,rax
    7dc3:	48 89 d7             	mov    rdi,rdx
    7dc6:	e8 35 aa ff ff       	call   2800 <strcpy@plt>
    7dcb:	90                   	nop
    7dcc:	c9                   	leave  
    7dcd:	c3                   	ret    

0000000000007dce <entry_exists>:
    7dce:	f3 0f 1e fa          	endbr64 
    7dd2:	55                   	push   rbp
    7dd3:	48 89 e5             	mov    rbp,rsp
    7dd6:	48 83 ec 20          	sub    rsp,0x20
    7dda:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7dde:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7de2:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7de9:	eb 6d                	jmp    7e58 <entry_exists+0x8a>
    7deb:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7dee:	48 63 d0             	movsxd rdx,eax
    7df1:	48 89 d0             	mov    rax,rdx
    7df4:	48 c1 e0 04          	shl    rax,0x4
    7df8:	48 01 d0             	add    rax,rdx
    7dfb:	48 01 c0             	add    rax,rax
    7dfe:	48 8d 15 1b ff 0f 00 	lea    rdx,[rip+0xfff1b]        # 107d20 <arpcache>
    7e05:	48 01 c2             	add    rdx,rax
    7e08:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7e0c:	48 89 c6             	mov    rsi,rax
    7e0f:	48 89 d7             	mov    rdi,rdx
    7e12:	e8 53 00 00 00       	call   7e6a <compare_ip_entry>
    7e17:	85 c0                	test   eax,eax
    7e19:	75 39                	jne    7e54 <entry_exists+0x86>
    7e1b:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7e1e:	48 63 d0             	movsxd rdx,eax
    7e21:	48 89 d0             	mov    rax,rdx
    7e24:	48 c1 e0 04          	shl    rax,0x4
    7e28:	48 01 d0             	add    rax,rdx
    7e2b:	48 01 c0             	add    rax,rax
    7e2e:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7e32:	48 8d 05 e7 fe 0f 00 	lea    rax,[rip+0xffee7]        # 107d20 <arpcache>
    7e39:	48 01 c2             	add    rdx,rax
    7e3c:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7e40:	48 89 c6             	mov    rsi,rax
    7e43:	48 89 d7             	mov    rdi,rdx
    7e46:	e8 48 00 00 00       	call   7e93 <compare_mac_entry>
    7e4b:	85 c0                	test   eax,eax
    7e4d:	75 05                	jne    7e54 <entry_exists+0x86>
    7e4f:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7e52:	eb 14                	jmp    7e68 <entry_exists+0x9a>
    7e54:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    7e58:	8b 05 be 91 00 00    	mov    eax,DWORD PTR [rip+0x91be]        # 1101c <arp_entries>
    7e5e:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7e61:	7e 88                	jle    7deb <entry_exists+0x1d>
    7e63:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7e68:	c9                   	leave  
    7e69:	c3                   	ret    

0000000000007e6a <compare_ip_entry>:
    7e6a:	f3 0f 1e fa          	endbr64 
    7e6e:	55                   	push   rbp
    7e6f:	48 89 e5             	mov    rbp,rsp
    7e72:	48 83 ec 10          	sub    rsp,0x10
    7e76:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7e7a:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7e7e:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    7e82:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7e86:	48 89 d6             	mov    rsi,rdx
    7e89:	48 89 c7             	mov    rdi,rax
    7e8c:	e8 3f a9 ff ff       	call   27d0 <strcmp@plt>
    7e91:	c9                   	leave  
    7e92:	c3                   	ret    

0000000000007e93 <compare_mac_entry>:
    7e93:	f3 0f 1e fa          	endbr64 
    7e97:	55                   	push   rbp
    7e98:	48 89 e5             	mov    rbp,rsp
    7e9b:	48 83 ec 10          	sub    rsp,0x10
    7e9f:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7ea3:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7ea7:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    7eab:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7eaf:	48 89 d6             	mov    rsi,rdx
    7eb2:	48 89 c7             	mov    rdi,rax
    7eb5:	e8 16 a9 ff ff       	call   27d0 <strcmp@plt>
    7eba:	c9                   	leave  
    7ebb:	c3                   	ret    

0000000000007ebc <load_csv_arp_cache>:
    7ebc:	f3 0f 1e fa          	endbr64 
    7ec0:	55                   	push   rbp
    7ec1:	48 89 e5             	mov    rbp,rsp
    7ec4:	53                   	push   rbx
    7ec5:	48 83 ec 68          	sub    rsp,0x68
    7ec9:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7ed0:	00 00 
    7ed2:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    7ed6:	31 c0                	xor    eax,eax
    7ed8:	48 8d 35 bf 56 00 00 	lea    rsi,[rip+0x56bf]        # d59e <_IO_stdin_used+0x159e>
    7edf:	48 8d 3d ba 56 00 00 	lea    rdi,[rip+0x56ba]        # d5a0 <_IO_stdin_used+0x15a0>
    7ee6:	e8 d5 a6 ff ff       	call   25c0 <fopen@plt>
    7eeb:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    7eef:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
    7ef4:	75 22                	jne    7f18 <load_csv_arp_cache+0x5c>
    7ef6:	48 8d 3d c3 56 00 00 	lea    rdi,[rip+0x56c3]        # d5c0 <_IO_stdin_used+0x15c0>
    7efd:	e8 2e a6 ff ff       	call   2530 <puts@plt>
    7f02:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    7f06:	48 89 c7             	mov    rdi,rax
    7f09:	e8 32 a9 ff ff       	call   2840 <fclose@plt>
    7f0e:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7f13:	e9 dd 00 00 00       	jmp    7ff5 <load_csv_arp_cache+0x139>
    7f18:	48 c7 45 98 00 00 00 	mov    QWORD PTR [rbp-0x68],0x0
    7f1f:	00 
    7f20:	48 c7 45 a0 00 00 00 	mov    QWORD PTR [rbp-0x60],0x0
    7f27:	00 
    7f28:	eb 7c                	jmp    7fa6 <load_csv_arp_cache+0xea>
    7f2a:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7f2e:	48 85 c0             	test   rax,rax
    7f31:	0f 84 97 00 00 00    	je     7fce <load_csv_arp_cache+0x112>
    7f37:	48 8b 5d 98          	mov    rbx,QWORD PTR [rbp-0x68]
    7f3b:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7f3f:	48 8d 35 b3 56 00 00 	lea    rsi,[rip+0x56b3]        # d5f9 <_IO_stdin_used+0x15f9>
    7f46:	48 89 c7             	mov    rdi,rax
    7f49:	e8 22 a9 ff ff       	call   2870 <strcspn@plt>
    7f4e:	48 01 d8             	add    rax,rbx
    7f51:	c6 00 00             	mov    BYTE PTR [rax],0x0
    7f54:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7f58:	48 8d 35 9c 56 00 00 	lea    rsi,[rip+0x569c]        # d5fb <_IO_stdin_used+0x15fb>
    7f5f:	48 89 c7             	mov    rdi,rax
    7f62:	e8 a9 a8 ff ff       	call   2810 <strtok@plt>
    7f67:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    7f6b:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    7f6f:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    7f73:	48 89 d6             	mov    rsi,rdx
    7f76:	48 89 c7             	mov    rdi,rax
    7f79:	e8 82 a8 ff ff       	call   2800 <strcpy@plt>
    7f7e:	48 8d 35 76 56 00 00 	lea    rsi,[rip+0x5676]        # d5fb <_IO_stdin_used+0x15fb>
    7f85:	bf 00 00 00 00       	mov    edi,0x0
    7f8a:	e8 81 a8 ff ff       	call   2810 <strtok@plt>
    7f8f:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    7f93:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    7f97:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    7f9b:	48 89 d6             	mov    rsi,rdx
    7f9e:	48 89 c7             	mov    rdi,rax
    7fa1:	e8 5a a8 ff ff       	call   2800 <strcpy@plt>
    7fa6:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    7faa:	48 8d 4d a0          	lea    rcx,[rbp-0x60]
    7fae:	48 8d 45 98          	lea    rax,[rbp-0x68]
    7fb2:	48 89 ce             	mov    rsi,rcx
    7fb5:	48 89 c7             	mov    rdi,rax
    7fb8:	e8 33 a8 ff ff       	call   27f0 <getline@plt>
    7fbd:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    7fc1:	48 83 7d b0 ff       	cmp    QWORD PTR [rbp-0x50],0xffffffffffffffff
    7fc6:	0f 85 5e ff ff ff    	jne    7f2a <load_csv_arp_cache+0x6e>
    7fcc:	eb 01                	jmp    7fcf <load_csv_arp_cache+0x113>
    7fce:	90                   	nop
    7fcf:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7fd3:	48 85 c0             	test   rax,rax
    7fd6:	74 0c                	je     7fe4 <load_csv_arp_cache+0x128>
    7fd8:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7fdc:	48 89 c7             	mov    rdi,rax
    7fdf:	e8 5c a6 ff ff       	call   2640 <free@plt>
    7fe4:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    7fe8:	48 89 c7             	mov    rdi,rax
    7feb:	e8 50 a8 ff ff       	call   2840 <fclose@plt>
    7ff0:	b8 01 00 00 00       	mov    eax,0x1
    7ff5:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    7ff9:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    8000:	00 00 
    8002:	74 05                	je     8009 <load_csv_arp_cache+0x14d>
    8004:	e8 b7 a7 ff ff       	call   27c0 <__stack_chk_fail@plt>
    8009:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    800d:	c9                   	leave  
    800e:	c3                   	ret    

000000000000800f <tls_decode>:
    800f:	f3 0f 1e fa          	endbr64 
    8013:	55                   	push   rbp
    8014:	48 89 e5             	mov    rbp,rsp
    8017:	48 83 ec 30          	sub    rsp,0x30
    801b:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    801f:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    8023:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    8027:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    802b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    802f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8033:	0f b7 40 01          	movzx  eax,WORD PTR [rax+0x1]
    8037:	0f b7 c0             	movzx  eax,ax
    803a:	3d 03 03 00 00       	cmp    eax,0x303
    803f:	74 6a                	je     80ab <tls_decode+0x9c>
    8041:	3d 03 03 00 00       	cmp    eax,0x303
    8046:	0f 8f c7 00 00 00    	jg     8113 <tls_decode+0x104>
    804c:	3d 01 03 00 00       	cmp    eax,0x301
    8051:	74 0c                	je     805f <tls_decode+0x50>
    8053:	3d 02 03 00 00       	cmp    eax,0x302
    8058:	74 2b                	je     8085 <tls_decode+0x76>
    805a:	e9 b4 00 00 00       	jmp    8113 <tls_decode+0x104>
    805f:	0f b6 05 fe 1e 10 00 	movzx  eax,BYTE PTR [rip+0x101efe]        # 109f64 <packet_print>
    8066:	84 c0                	test   al,al
    8068:	74 11                	je     807b <tls_decode+0x6c>
    806a:	48 8d 3d 8f 55 00 00 	lea    rdi,[rip+0x558f]        # d600 <_IO_stdin_used+0x1600>
    8071:	b8 00 00 00 00       	mov    eax,0x0
    8076:	e8 55 a4 ff ff       	call   24d0 <printf@plt>
    807b:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    807f:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    8083:	eb 4b                	jmp    80d0 <tls_decode+0xc1>
    8085:	0f b6 05 d8 1e 10 00 	movzx  eax,BYTE PTR [rip+0x101ed8]        # 109f64 <packet_print>
    808c:	84 c0                	test   al,al
    808e:	74 11                	je     80a1 <tls_decode+0x92>
    8090:	48 8d 3d 78 55 00 00 	lea    rdi,[rip+0x5578]        # d60f <_IO_stdin_used+0x160f>
    8097:	b8 00 00 00 00       	mov    eax,0x0
    809c:	e8 2f a4 ff ff       	call   24d0 <printf@plt>
    80a1:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    80a5:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    80a9:	eb 25                	jmp    80d0 <tls_decode+0xc1>
    80ab:	0f b6 05 b2 1e 10 00 	movzx  eax,BYTE PTR [rip+0x101eb2]        # 109f64 <packet_print>
    80b2:	84 c0                	test   al,al
    80b4:	74 11                	je     80c7 <tls_decode+0xb8>
    80b6:	48 8d 3d 61 55 00 00 	lea    rdi,[rip+0x5561]        # d61e <_IO_stdin_used+0x161e>
    80bd:	b8 00 00 00 00       	mov    eax,0x0
    80c2:	e8 09 a4 ff ff       	call   24d0 <printf@plt>
    80c7:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    80cb:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    80cf:	90                   	nop
    80d0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    80d4:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    80d7:	0f b6 c0             	movzx  eax,al
    80da:	83 f8 17             	cmp    eax,0x17
    80dd:	74 37                	je     8116 <tls_decode+0x107>
    80df:	83 f8 17             	cmp    eax,0x17
    80e2:	7f 35                	jg     8119 <tls_decode+0x10a>
    80e4:	83 f8 16             	cmp    eax,0x16
    80e7:	74 11                	je     80fa <tls_decode+0xeb>
    80e9:	83 f8 16             	cmp    eax,0x16
    80ec:	7f 2b                	jg     8119 <tls_decode+0x10a>
    80ee:	83 f8 14             	cmp    eax,0x14
    80f1:	74 29                	je     811c <tls_decode+0x10d>
    80f3:	83 f8 15             	cmp    eax,0x15
    80f6:	74 27                	je     811f <tls_decode+0x110>
    80f8:	eb 1f                	jmp    8119 <tls_decode+0x10a>
    80fa:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    80fe:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    8102:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8106:	48 89 ce             	mov    rsi,rcx
    8109:	48 89 c7             	mov    rdi,rax
    810c:	e8 11 00 00 00       	call   8122 <tlshandshake>
    8111:	eb 0d                	jmp    8120 <tls_decode+0x111>
    8113:	90                   	nop
    8114:	eb 0a                	jmp    8120 <tls_decode+0x111>
    8116:	90                   	nop
    8117:	eb 07                	jmp    8120 <tls_decode+0x111>
    8119:	90                   	nop
    811a:	eb 04                	jmp    8120 <tls_decode+0x111>
    811c:	90                   	nop
    811d:	eb 01                	jmp    8120 <tls_decode+0x111>
    811f:	90                   	nop
    8120:	c9                   	leave  
    8121:	c3                   	ret    

0000000000008122 <tlshandshake>:
    8122:	f3 0f 1e fa          	endbr64 
    8126:	55                   	push   rbp
    8127:	48 89 e5             	mov    rbp,rsp
    812a:	48 83 ec 30          	sub    rsp,0x30
    812e:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8132:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    8136:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    813a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    813e:	48 83 c0 08          	add    rax,0x8
    8142:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8146:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    814a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    814d:	0f b6 c0             	movzx  eax,al
    8150:	83 f8 0b             	cmp    eax,0xb
    8153:	0f 87 bf 00 00 00    	ja     8218 <tlshandshake+0xf6>
    8159:	89 c0                	mov    eax,eax
    815b:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    8162:	00 
    8163:	48 8d 05 0a 55 00 00 	lea    rax,[rip+0x550a]        # d674 <_IO_stdin_used+0x1674>
    816a:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    816d:	48 98                	cdqe   
    816f:	48 8d 15 fe 54 00 00 	lea    rdx,[rip+0x54fe]        # d674 <_IO_stdin_used+0x1674>
    8176:	48 01 d0             	add    rax,rdx
    8179:	3e ff e0             	notrack jmp rax
    817c:	48 8d 3d aa 54 00 00 	lea    rdi,[rip+0x54aa]        # d62d <_IO_stdin_used+0x162d>
    8183:	e8 a8 a3 ff ff       	call   2530 <puts@plt>
    8188:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    818c:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    8190:	e9 83 00 00 00       	jmp    8218 <tlshandshake+0xf6>
    8195:	0f b6 05 c8 1d 10 00 	movzx  eax,BYTE PTR [rip+0x101dc8]        # 109f64 <packet_print>
    819c:	84 c0                	test   al,al
    819e:	74 0c                	je     81ac <tlshandshake+0x8a>
    81a0:	48 8d 3d 93 54 00 00 	lea    rdi,[rip+0x5493]        # d63a <_IO_stdin_used+0x163a>
    81a7:	e8 84 a3 ff ff       	call   2530 <puts@plt>
    81ac:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    81b0:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    81b4:	eb 62                	jmp    8218 <tlshandshake+0xf6>
    81b6:	0f b6 05 a7 1d 10 00 	movzx  eax,BYTE PTR [rip+0x101da7]        # 109f64 <packet_print>
    81bd:	84 c0                	test   al,al
    81bf:	74 0c                	je     81cd <tlshandshake+0xab>
    81c1:	48 8d 3d 7f 54 00 00 	lea    rdi,[rip+0x547f]        # d647 <_IO_stdin_used+0x1647>
    81c8:	e8 63 a3 ff ff       	call   2530 <puts@plt>
    81cd:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    81d1:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    81d5:	eb 41                	jmp    8218 <tlshandshake+0xf6>
    81d7:	0f b6 05 86 1d 10 00 	movzx  eax,BYTE PTR [rip+0x101d86]        # 109f64 <packet_print>
    81de:	84 c0                	test   al,al
    81e0:	74 0c                	je     81ee <tlshandshake+0xcc>
    81e2:	48 8d 3d 71 54 00 00 	lea    rdi,[rip+0x5471]        # d65a <_IO_stdin_used+0x165a>
    81e9:	e8 42 a3 ff ff       	call   2530 <puts@plt>
    81ee:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    81f2:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    81f6:	eb 20                	jmp    8218 <tlshandshake+0xf6>
    81f8:	0f b6 05 65 1d 10 00 	movzx  eax,BYTE PTR [rip+0x101d65]        # 109f64 <packet_print>
    81ff:	84 c0                	test   al,al
    8201:	74 0c                	je     820f <tlshandshake+0xed>
    8203:	48 8d 3d 5c 54 00 00 	lea    rdi,[rip+0x545c]        # d666 <_IO_stdin_used+0x1666>
    820a:	e8 21 a3 ff ff       	call   2530 <puts@plt>
    820f:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8213:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    8217:	90                   	nop
    8218:	90                   	nop
    8219:	c9                   	leave  
    821a:	c3                   	ret    

000000000000821b <process_opcode>:
    821b:	f3 0f 1e fa          	endbr64 
    821f:	55                   	push   rbp
    8220:	48 89 e5             	mov    rbp,rsp
    8223:	48 81 ec 30 04 00 00 	sub    rsp,0x430
    822a:	48 89 bd d8 fb ff ff 	mov    QWORD PTR [rbp-0x428],rdi
    8231:	48 89 b5 d0 fb ff ff 	mov    QWORD PTR [rbp-0x430],rsi
    8238:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    823f:	00 00 
    8241:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8245:	31 c0                	xor    eax,eax
    8247:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    824e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    8251:	0f b6 c0             	movzx  eax,al
    8254:	3d db 00 00 00       	cmp    eax,0xdb
    8259:	75 4b                	jne    82a6 <process_opcode+0x8b>
    825b:	c6 85 e4 fb ff ff db 	mov    BYTE PTR [rbp-0x41c],0xdb
    8262:	8b 85 e4 fb ff ff    	mov    eax,DWORD PTR [rbp-0x41c]
    8268:	0f b6 c0             	movzx  eax,al
    826b:	0d 00 00 00 01       	or     eax,0x1000000
    8270:	89 85 e4 fb ff ff    	mov    DWORD PTR [rbp-0x41c],eax
    8276:	48 8d 85 e4 fb ff ff 	lea    rax,[rbp-0x41c]
    827d:	48 89 85 e8 fb ff ff 	mov    QWORD PTR [rbp-0x418],rax
    8284:	48 8b 85 d0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x430]
    828b:	8b 00                	mov    eax,DWORD PTR [rax]
    828d:	48 8b b5 e8 fb ff ff 	mov    rsi,QWORD PTR [rbp-0x418]
    8294:	b9 00 00 00 00       	mov    ecx,0x0
    8299:	ba 04 00 00 00       	mov    edx,0x4
    829e:	89 c7                	mov    edi,eax
    82a0:	e8 3b a5 ff ff       	call   27e0 <send@plt>
    82a5:	90                   	nop
    82a6:	90                   	nop
    82a7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    82ab:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    82b2:	00 00 
    82b4:	74 05                	je     82bb <process_opcode+0xa0>
    82b6:	e8 05 a5 ff ff       	call   27c0 <__stack_chk_fail@plt>
    82bb:	c9                   	leave  
    82bc:	c3                   	ret    

00000000000082bd <callback>:
    82bd:	f3 0f 1e fa          	endbr64 
    82c1:	55                   	push   rbp
    82c2:	48 89 e5             	mov    rbp,rsp
    82c5:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    82c9:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
    82cc:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    82d0:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    82d4:	b8 00 00 00 00       	mov    eax,0x0
    82d9:	5d                   	pop    rbp
    82da:	c3                   	ret    

00000000000082db <update_db>:
    82db:	f3 0f 1e fa          	endbr64 
    82df:	55                   	push   rbp
    82e0:	48 89 e5             	mov    rbp,rsp
    82e3:	48 81 ec 40 02 00 00 	sub    rsp,0x240
    82ea:	48 89 bd c8 fd ff ff 	mov    QWORD PTR [rbp-0x238],rdi
    82f1:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    82f8:	00 00 
    82fa:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    82fe:	31 c0                	xor    eax,eax
    8300:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    8307:	48 89 85 e8 fd ff ff 	mov    QWORD PTR [rbp-0x218],rax
    830e:	48 8d 3d 93 53 00 00 	lea    rdi,[rip+0x5393]        # d6a8 <_IO_stdin_used+0x16a8>
    8315:	e8 16 a2 ff ff       	call   2530 <puts@plt>
    831a:	48 c7 85 d8 fd ff ff 	mov    QWORD PTR [rbp-0x228],0x0
    8321:	00 00 00 00 
    8325:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    832c:	48 89 c6             	mov    rsi,rax
    832f:	48 8d 3d 0a 1c 10 00 	lea    rdi,[rip+0x101c0a]        # 109f40 <sqlite_db_path>
    8336:	e8 c5 a5 ff ff       	call   2900 <sqlite3_open@plt>
    833b:	89 85 d4 fd ff ff    	mov    DWORD PTR [rbp-0x22c],eax
    8341:	83 bd d4 fd ff ff 00 	cmp    DWORD PTR [rbp-0x22c],0x0
    8348:	74 28                	je     8372 <update_db+0x97>
    834a:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    8351:	48 89 c7             	mov    rdi,rax
    8354:	e8 d7 a4 ff ff       	call   2830 <sqlite3_errmsg@plt>
    8359:	48 89 c6             	mov    rsi,rax
    835c:	48 8d 3d 51 53 00 00 	lea    rdi,[rip+0x5351]        # d6b4 <_IO_stdin_used+0x16b4>
    8363:	b8 00 00 00 00       	mov    eax,0x0
    8368:	e8 63 a1 ff ff       	call   24d0 <printf@plt>
    836d:	e9 a2 00 00 00       	jmp    8414 <update_db+0x139>
    8372:	48 8b 85 e8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x218]
    8379:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    837c:	85 c0                	test   eax,eax
    837e:	75 2e                	jne    83ae <update_db+0xd3>
    8380:	48 8b 85 e8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x218]
    8387:	48 8d 48 10          	lea    rcx,[rax+0x10]
    838b:	48 8b 95 e8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x218]
    8392:	48 8d 85 f0 fd ff ff 	lea    rax,[rbp-0x210]
    8399:	48 8d 35 28 53 00 00 	lea    rsi,[rip+0x5328]        # d6c8 <_IO_stdin_used+0x16c8>
    83a0:	48 89 c7             	mov    rdi,rax
    83a3:	b8 00 00 00 00       	mov    eax,0x0
    83a8:	e8 e3 a2 ff ff       	call   2690 <sprintf@plt>
    83ad:	90                   	nop
    83ae:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    83b5:	48 8d 95 d8 fd ff ff 	lea    rdx,[rbp-0x228]
    83bc:	48 8d b5 f0 fd ff ff 	lea    rsi,[rbp-0x210]
    83c3:	49 89 d0             	mov    r8,rdx
    83c6:	b9 00 00 00 00       	mov    ecx,0x0
    83cb:	ba 00 00 00 00       	mov    edx,0x0
    83d0:	48 89 c7             	mov    rdi,rax
    83d3:	e8 98 a1 ff ff       	call   2570 <sqlite3_exec@plt>
    83d8:	89 85 d4 fd ff ff    	mov    DWORD PTR [rbp-0x22c],eax
    83de:	83 bd d4 fd ff ff 00 	cmp    DWORD PTR [rbp-0x22c],0x0
    83e5:	74 2c                	je     8413 <update_db+0x138>
    83e7:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    83ee:	48 89 c6             	mov    rsi,rax
    83f1:	48 8d 3d 15 53 00 00 	lea    rdi,[rip+0x5315]        # d70d <_IO_stdin_used+0x170d>
    83f8:	b8 00 00 00 00       	mov    eax,0x0
    83fd:	e8 ce a0 ff ff       	call   24d0 <printf@plt>
    8402:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    8409:	48 89 c7             	mov    rdi,rax
    840c:	e8 ef a1 ff ff       	call   2600 <sqlite3_free@plt>
    8411:	eb 01                	jmp    8414 <update_db+0x139>
    8413:	90                   	nop
    8414:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    841b:	48 89 c7             	mov    rdi,rax
    841e:	e8 8d a0 ff ff       	call   24b0 <sqlite3_close@plt>
    8423:	b8 01 00 00 00       	mov    eax,0x1
    8428:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    842c:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    8433:	00 00 
    8435:	74 05                	je     843c <update_db+0x161>
    8437:	e8 84 a3 ff ff       	call   27c0 <__stack_chk_fail@plt>
    843c:	c9                   	leave  
    843d:	c3                   	ret    

000000000000843e <update_spi_db>:
    843e:	f3 0f 1e fa          	endbr64 
    8442:	55                   	push   rbp
    8443:	48 89 e5             	mov    rbp,rsp
    8446:	41 57                	push   r15
    8448:	41 56                	push   r14
    844a:	41 55                	push   r13
    844c:	41 54                	push   r12
    844e:	53                   	push   rbx
    844f:	48 81 ec 48 04 00 00 	sub    rsp,0x448
    8456:	48 89 bd 98 fb ff ff 	mov    QWORD PTR [rbp-0x468],rdi
    845d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8464:	00 00 
    8466:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    846a:	31 c0                	xor    eax,eax
    846c:	48 8b 85 98 fb ff ff 	mov    rax,QWORD PTR [rbp-0x468]
    8473:	48 89 85 b0 fb ff ff 	mov    QWORD PTR [rbp-0x450],rax
    847a:	48 8d 85 a0 fb ff ff 	lea    rax,[rbp-0x460]
    8481:	48 89 c6             	mov    rsi,rax
    8484:	48 8d 3d a0 52 00 00 	lea    rdi,[rip+0x52a0]        # d72b <_IO_stdin_used+0x172b>
    848b:	e8 70 a4 ff ff       	call   2900 <sqlite3_open@plt>
    8490:	85 c0                	test   eax,eax
    8492:	74 3c                	je     84d0 <update_spi_db+0x92>
    8494:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    849b:	48 89 c7             	mov    rdi,rax
    849e:	e8 8d a3 ff ff       	call   2830 <sqlite3_errmsg@plt>
    84a3:	48 89 c6             	mov    rsi,rax
    84a6:	48 8d 3d 96 52 00 00 	lea    rdi,[rip+0x5296]        # d743 <_IO_stdin_used+0x1743>
    84ad:	b8 00 00 00 00       	mov    eax,0x0
    84b2:	e8 19 a0 ff ff       	call   24d0 <printf@plt>
    84b7:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    84be:	48 89 c7             	mov    rdi,rax
    84c1:	e8 ea 9f ff ff       	call   24b0 <sqlite3_close@plt>
    84c6:	b8 00 00 00 00       	mov    eax,0x0
    84cb:	e9 5c 01 00 00       	jmp    862c <update_spi_db+0x1ee>
    84d0:	48 8d 05 81 52 00 00 	lea    rax,[rip+0x5281]        # d758 <_IO_stdin_used+0x1758>
    84d7:	48 89 85 b8 fb ff ff 	mov    QWORD PTR [rbp-0x448],rax
    84de:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    84e5:	8b 90 80 00 00 00    	mov    edx,DWORD PTR [rax+0x80]
    84eb:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    84f2:	44 8b 78 7c          	mov    r15d,DWORD PTR [rax+0x7c]
    84f6:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    84fd:	4c 8b b0 98 00 00 00 	mov    r14,QWORD PTR [rax+0x98]
    8504:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    850b:	4c 8b a8 90 00 00 00 	mov    r13,QWORD PTR [rax+0x90]
    8512:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8519:	44 8b a0 a8 00 00 00 	mov    r12d,DWORD PTR [rax+0xa8]
    8520:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8527:	8b 98 a4 00 00 00    	mov    ebx,DWORD PTR [rax+0xa4]
    852d:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8534:	48 8b 40 70          	mov    rax,QWORD PTR [rax+0x70]
    8538:	44 8b 18             	mov    r11d,DWORD PTR [rax]
    853b:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8542:	44 8b 50 60          	mov    r10d,DWORD PTR [rax+0x60]
    8546:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    854d:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
    8551:	44 8b 08             	mov    r9d,DWORD PTR [rax]
    8554:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    855b:	44 8b 40 5c          	mov    r8d,DWORD PTR [rax+0x5c]
    855f:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8566:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    8569:	89 85 94 fb ff ff    	mov    DWORD PTR [rbp-0x46c],eax
    856f:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8576:	8b 48 54             	mov    ecx,DWORD PTR [rax+0x54]
    8579:	89 8d 90 fb ff ff    	mov    DWORD PTR [rbp-0x470],ecx
    857f:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8586:	48 8d 48 29          	lea    rcx,[rax+0x29]
    858a:	48 8b bd b0 fb ff ff 	mov    rdi,QWORD PTR [rbp-0x450]
    8591:	48 8b b5 b8 fb ff ff 	mov    rsi,QWORD PTR [rbp-0x448]
    8598:	48 8d 85 c0 fb ff ff 	lea    rax,[rbp-0x440]
    859f:	52                   	push   rdx
    85a0:	41 57                	push   r15
    85a2:	41 56                	push   r14
    85a4:	41 55                	push   r13
    85a6:	41 54                	push   r12
    85a8:	53                   	push   rbx
    85a9:	41 53                	push   r11
    85ab:	41 52                	push   r10
    85ad:	41 51                	push   r9
    85af:	41 50                	push   r8
    85b1:	44 8b 8d 94 fb ff ff 	mov    r9d,DWORD PTR [rbp-0x46c]
    85b8:	44 8b 85 90 fb ff ff 	mov    r8d,DWORD PTR [rbp-0x470]
    85bf:	48 89 fa             	mov    rdx,rdi
    85c2:	48 89 c7             	mov    rdi,rax
    85c5:	b8 00 00 00 00       	mov    eax,0x0
    85ca:	e8 c1 a0 ff ff       	call   2690 <sprintf@plt>
    85cf:	48 83 c4 50          	add    rsp,0x50
    85d3:	48 c7 85 a8 fb ff ff 	mov    QWORD PTR [rbp-0x458],0x0
    85da:	00 00 00 00 
    85de:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    85e5:	48 8d 95 a8 fb ff ff 	lea    rdx,[rbp-0x458]
    85ec:	48 8d b5 c0 fb ff ff 	lea    rsi,[rbp-0x440]
    85f3:	49 89 d0             	mov    r8,rdx
    85f6:	b9 00 00 00 00       	mov    ecx,0x0
    85fb:	ba 00 00 00 00       	mov    edx,0x0
    8600:	48 89 c7             	mov    rdi,rax
    8603:	e8 68 9f ff ff       	call   2570 <sqlite3_exec@plt>
    8608:	85 c0                	test   eax,eax
    860a:	74 1b                	je     8627 <update_spi_db+0x1e9>
    860c:	48 8b 85 a8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x458]
    8613:	48 89 c6             	mov    rsi,rax
    8616:	48 8d 3d 28 52 00 00 	lea    rdi,[rip+0x5228]        # d845 <_IO_stdin_used+0x1845>
    861d:	b8 00 00 00 00       	mov    eax,0x0
    8622:	e8 a9 9e ff ff       	call   24d0 <printf@plt>
    8627:	b8 00 00 00 00       	mov    eax,0x0
    862c:	48 8b 5d c8          	mov    rbx,QWORD PTR [rbp-0x38]
    8630:	64 48 2b 1c 25 28 00 	sub    rbx,QWORD PTR fs:0x28
    8637:	00 00 
    8639:	74 05                	je     8640 <update_spi_db+0x202>
    863b:	e8 80 a1 ff ff       	call   27c0 <__stack_chk_fail@plt>
    8640:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    8644:	5b                   	pop    rbx
    8645:	41 5c                	pop    r12
    8647:	41 5d                	pop    r13
    8649:	41 5e                	pop    r14
    864b:	41 5f                	pop    r15
    864d:	5d                   	pop    rbp
    864e:	c3                   	ret    

000000000000864f <http_disect>:
    864f:	f3 0f 1e fa          	endbr64 
    8653:	55                   	push   rbp
    8654:	48 89 e5             	mov    rbp,rsp
    8657:	48 81 ec 30 04 00 00 	sub    rsp,0x430
    865e:	48 89 bd d8 fb ff ff 	mov    QWORD PTR [rbp-0x428],rdi
    8665:	48 89 b5 d0 fb ff ff 	mov    QWORD PTR [rbp-0x430],rsi
    866c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8673:	00 00 
    8675:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8679:	31 c0                	xor    eax,eax
    867b:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    8682:	be 0d 00 00 00       	mov    esi,0xd
    8687:	48 89 c7             	mov    rdi,rax
    868a:	e8 f5 ae ff ff       	call   3584 <strloc>
    868f:	89 85 ec fb ff ff    	mov    DWORD PTR [rbp-0x414],eax
    8695:	48 8d 3d c7 51 00 00 	lea    rdi,[rip+0x51c7]        # d863 <_IO_stdin_used+0x1863>
    869c:	e8 8f 9e ff ff       	call   2530 <puts@plt>
    86a1:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    86a8:	48 89 c7             	mov    rdi,rax
    86ab:	e8 7b af ff ff       	call   362b <test_string_arr_print>
    86b0:	83 f0 01             	xor    eax,0x1
    86b3:	84 c0                	test   al,al
    86b5:	75 33                	jne    86ea <http_disect+0x9b>
    86b7:	8b 85 ec fb ff ff    	mov    eax,DWORD PTR [rbp-0x414]
    86bd:	48 63 d0             	movsxd rdx,eax
    86c0:	48 8b 8d d8 fb ff ff 	mov    rcx,QWORD PTR [rbp-0x428]
    86c7:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    86ce:	48 89 ce             	mov    rsi,rcx
    86d1:	48 89 c7             	mov    rdi,rax
    86d4:	e8 77 a1 ff ff       	call   2850 <strncpy@plt>
    86d9:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    86e0:	48 89 c7             	mov    rdi,rax
    86e3:	e8 48 9e ff ff       	call   2530 <puts@plt>
    86e8:	eb 01                	jmp    86eb <http_disect+0x9c>
    86ea:	90                   	nop
    86eb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    86ef:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    86f6:	00 00 
    86f8:	74 05                	je     86ff <http_disect+0xb0>
    86fa:	e8 c1 a0 ff ff       	call   27c0 <__stack_chk_fail@plt>
    86ff:	c9                   	leave  
    8700:	c3                   	ret    

0000000000008701 <dns_disect>:
    8701:	f3 0f 1e fa          	endbr64 
    8705:	55                   	push   rbp
    8706:	48 89 e5             	mov    rbp,rsp
    8709:	48 83 ec 30          	sub    rsp,0x30
    870d:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    8711:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    8715:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8719:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    871d:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8721:	48 83 c0 0c          	add    rax,0xc
    8725:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    8729:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    872d:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    8731:	66 85 c0             	test   ax,ax
    8734:	75 6d                	jne    87a3 <dns_disect+0xa2>
    8736:	bf 00 04 00 00       	mov    edi,0x400
    873b:	e8 70 9e ff ff       	call   25b0 <malloc@plt>
    8740:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8744:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8748:	ba 08 00 00 00       	mov    edx,0x8
    874d:	be 00 00 00 00       	mov    esi,0x0
    8752:	48 89 c7             	mov    rdi,rax
    8755:	e8 86 9d ff ff       	call   24e0 <memset@plt>
    875a:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    875e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8762:	48 89 d6             	mov    rsi,rdx
    8765:	48 89 c7             	mov    rdi,rax
    8768:	e8 39 00 00 00       	call   87a6 <get_dns_name>
    876d:	0f b6 05 f0 17 10 00 	movzx  eax,BYTE PTR [rip+0x1017f0]        # 109f64 <packet_print>
    8774:	84 c0                	test   al,al
    8776:	74 18                	je     8790 <dns_disect+0x8f>
    8778:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    877c:	48 89 c6             	mov    rsi,rax
    877f:	48 8d 3d ef 50 00 00 	lea    rdi,[rip+0x50ef]        # d875 <_IO_stdin_used+0x1875>
    8786:	b8 00 00 00 00       	mov    eax,0x0
    878b:	e8 40 9d ff ff       	call   24d0 <printf@plt>
    8790:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    8795:	74 0c                	je     87a3 <dns_disect+0xa2>
    8797:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    879b:	48 89 c7             	mov    rdi,rax
    879e:	e8 9d 9e ff ff       	call   2640 <free@plt>
    87a3:	90                   	nop
    87a4:	c9                   	leave  
    87a5:	c3                   	ret    

00000000000087a6 <get_dns_name>:
    87a6:	f3 0f 1e fa          	endbr64 
    87aa:	55                   	push   rbp
    87ab:	48 89 e5             	mov    rbp,rsp
    87ae:	53                   	push   rbx
    87af:	48 83 ec 28          	sub    rsp,0x28
    87b3:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    87b7:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    87bb:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    87c2:	eb 57                	jmp    881b <get_dns_name+0x75>
    87c4:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    87c7:	48 63 d0             	movsxd rdx,eax
    87ca:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    87ce:	48 01 d0             	add    rax,rdx
    87d1:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    87d4:	3c 20                	cmp    al,0x20
    87d6:	7e 24                	jle    87fc <get_dns_name+0x56>
    87d8:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    87db:	48 63 d0             	movsxd rdx,eax
    87de:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    87e2:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    87e6:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    87ea:	ba 01 00 00 00       	mov    edx,0x1
    87ef:	48 89 ce             	mov    rsi,rcx
    87f2:	48 89 c7             	mov    rdi,rax
    87f5:	e8 26 9d ff ff       	call   2520 <strncat@plt>
    87fa:	eb 1b                	jmp    8817 <get_dns_name+0x71>
    87fc:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    8800:	48 89 c7             	mov    rdi,rax
    8803:	e8 48 9e ff ff       	call   2650 <strlen@plt>
    8808:	48 89 c2             	mov    rdx,rax
    880b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    880f:	48 01 d0             	add    rax,rdx
    8812:	66 c7 00 2e 00       	mov    WORD PTR [rax],0x2e
    8817:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    881b:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    881e:	48 63 d8             	movsxd rbx,eax
    8821:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8825:	48 89 c7             	mov    rdi,rax
    8828:	e8 23 9e ff ff       	call   2650 <strlen@plt>
    882d:	48 39 c3             	cmp    rbx,rax
    8830:	72 92                	jb     87c4 <get_dns_name+0x1e>
    8832:	90                   	nop
    8833:	90                   	nop
    8834:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    8838:	c9                   	leave  
    8839:	c3                   	ret    

000000000000883a <ftp_disect>:
    883a:	f3 0f 1e fa          	endbr64 
    883e:	55                   	push   rbp
    883f:	48 89 e5             	mov    rbp,rsp
    8842:	48 83 ec 20          	sub    rsp,0x20
    8846:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    884a:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    884e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8852:	48 8d 35 27 50 00 00 	lea    rsi,[rip+0x5027]        # d880 <_IO_stdin_used+0x1880>
    8859:	48 89 c7             	mov    rdi,rax
    885c:	e8 8f 9e ff ff       	call   26f0 <strstr@plt>
    8861:	48 85 c0             	test   rax,rax
    8864:	75 1c                	jne    8882 <ftp_disect+0x48>
    8866:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    886a:	48 8d 35 1f 50 00 00 	lea    rsi,[rip+0x501f]        # d890 <_IO_stdin_used+0x1890>
    8871:	48 89 c7             	mov    rdi,rax
    8874:	e8 77 9e ff ff       	call   26f0 <strstr@plt>
    8879:	48 85 c0             	test   rax,rax
    887c:	0f 84 8a 00 00 00    	je     890c <ftp_disect+0xd2>
    8882:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8886:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    888a:	48 89 c7             	mov    rdi,rax
    888d:	e8 46 f1 ff ff       	call   79d8 <member_exists>
    8892:	48 63 d0             	movsxd rdx,eax
    8895:	48 89 d0             	mov    rax,rdx
    8898:	48 c1 e0 02          	shl    rax,0x2
    889c:	48 01 d0             	add    rax,rdx
    889f:	48 c1 e0 03          	shl    rax,0x3
    88a3:	48 01 d0             	add    rax,rdx
    88a6:	48 c1 e0 04          	shl    rax,0x4
    88aa:	48 8d 15 6f ac 0e 00 	lea    rdx,[rip+0xeac6f]        # f3520 <watchlist>
    88b1:	48 01 d0             	add    rax,rdx
    88b4:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    88b8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    88bc:	8b 80 40 02 00 00    	mov    eax,DWORD PTR [rax+0x240]
    88c2:	8d 50 01             	lea    edx,[rax+0x1]
    88c5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    88c9:	89 90 40 02 00 00    	mov    DWORD PTR [rax+0x240],edx
    88cf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    88d3:	8b 80 40 02 00 00    	mov    eax,DWORD PTR [rax+0x240]
    88d9:	83 f8 04             	cmp    eax,0x4
    88dc:	7e 2e                	jle    890c <ftp_disect+0xd2>
    88de:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    88e2:	8b 88 40 02 00 00    	mov    ecx,DWORD PTR [rax+0x240]
    88e8:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    88ec:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    88f0:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    88f4:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    88f8:	48 89 c6             	mov    rsi,rax
    88fb:	48 8d 3d 9e 4f 00 00 	lea    rdi,[rip+0x4f9e]        # d8a0 <_IO_stdin_used+0x18a0>
    8902:	b8 00 00 00 00       	mov    eax,0x0
    8907:	e8 c4 9b ff ff       	call   24d0 <printf@plt>
    890c:	90                   	nop
    890d:	c9                   	leave  
    890e:	c3                   	ret    

000000000000890f <livedebug>:
    890f:	f3 0f 1e fa          	endbr64 
    8913:	55                   	push   rbp
    8914:	48 89 e5             	mov    rbp,rsp
    8917:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
    891e:	48 89 bd 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rdi
    8925:	48 89 b5 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rsi
    892c:	48 89 95 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdx
    8933:	48 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rcx
    893a:	4c 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r8
    8941:	4c 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r9
    8948:	84 c0                	test   al,al
    894a:	74 20                	je     896c <livedebug+0x5d>
    894c:	0f 29 45 80          	movaps XMMWORD PTR [rbp-0x80],xmm0
    8950:	0f 29 4d 90          	movaps XMMWORD PTR [rbp-0x70],xmm1
    8954:	0f 29 55 a0          	movaps XMMWORD PTR [rbp-0x60],xmm2
    8958:	0f 29 5d b0          	movaps XMMWORD PTR [rbp-0x50],xmm3
    895c:	0f 29 65 c0          	movaps XMMWORD PTR [rbp-0x40],xmm4
    8960:	0f 29 6d d0          	movaps XMMWORD PTR [rbp-0x30],xmm5
    8964:	0f 29 75 e0          	movaps XMMWORD PTR [rbp-0x20],xmm6
    8968:	0f 29 7d f0          	movaps XMMWORD PTR [rbp-0x10],xmm7
    896c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8973:	00 00 
    8975:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    897c:	31 c0                	xor    eax,eax
    897e:	0f b6 05 9b 15 10 00 	movzx  eax,BYTE PTR [rip+0x10159b]        # 109f20 <debug_mode>
    8985:	84 c0                	test   al,al
    8987:	74 4b                	je     89d4 <livedebug+0xc5>
    8989:	c7 85 30 ff ff ff 08 	mov    DWORD PTR [rbp-0xd0],0x8
    8990:	00 00 00 
    8993:	c7 85 34 ff ff ff 30 	mov    DWORD PTR [rbp-0xcc],0x30
    899a:	00 00 00 
    899d:	48 8d 45 10          	lea    rax,[rbp+0x10]
    89a1:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    89a8:	48 8d 85 50 ff ff ff 	lea    rax,[rbp-0xb0]
    89af:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    89b6:	48 8d 95 30 ff ff ff 	lea    rdx,[rbp-0xd0]
    89bd:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    89c4:	48 89 d6             	mov    rsi,rdx
    89c7:	48 89 c7             	mov    rdi,rax
    89ca:	b8 00 00 00 00       	mov    eax,0x0
    89cf:	e8 fc 9a ff ff       	call   24d0 <printf@plt>
    89d4:	90                   	nop
    89d5:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    89dc:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    89e3:	00 00 
    89e5:	74 05                	je     89ec <livedebug+0xdd>
    89e7:	e8 d4 9d ff ff       	call   27c0 <__stack_chk_fail@plt>
    89ec:	c9                   	leave  
    89ed:	c3                   	ret    

00000000000089ee <forward_packet>:
    89ee:	f3 0f 1e fa          	endbr64 
    89f2:	55                   	push   rbp
    89f3:	48 89 e5             	mov    rbp,rsp
    89f6:	48 83 ec 20          	sub    rsp,0x20
    89fa:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    89fe:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a02:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8a06:	48 8d 35 83 15 10 00 	lea    rsi,[rip+0x101583]        # 109f90 <local_ip>
    8a0d:	48 89 c7             	mov    rdi,rax
    8a10:	e8 bb 9d ff ff       	call   27d0 <strcmp@plt>
    8a15:	85 c0                	test   eax,eax
    8a17:	74 4f                	je     8a68 <forward_packet+0x7a>
    8a19:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a1d:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    8a21:	48 8d 35 68 15 10 00 	lea    rsi,[rip+0x101568]        # 109f90 <local_ip>
    8a28:	48 89 c7             	mov    rdi,rax
    8a2b:	e8 a0 9d ff ff       	call   27d0 <strcmp@plt>
    8a30:	85 c0                	test   eax,eax
    8a32:	74 34                	je     8a68 <forward_packet+0x7a>
    8a34:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a38:	48 8b 00             	mov    rax,QWORD PTR [rax]
    8a3b:	48 8d 50 0e          	lea    rdx,[rax+0xe]
    8a3f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8a43:	48 89 d6             	mov    rsi,rdx
    8a46:	48 89 c7             	mov    rdi,rax
    8a49:	e8 b2 9d ff ff       	call   2800 <strcpy@plt>
    8a4e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a52:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    8a55:	83 e8 0e             	sub    eax,0xe
    8a58:	89 c2                	mov    edx,eax
    8a5a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8a5e:	89 d6                	mov    esi,edx
    8a60:	48 89 c7             	mov    rdi,rax
    8a63:	e8 9f c9 ff ff       	call   5407 <ascii_hexdump>
    8a68:	90                   	nop
    8a69:	c9                   	leave  
    8a6a:	c3                   	ret    

0000000000008a6b <conversation_exists>:
    8a6b:	f3 0f 1e fa          	endbr64 
    8a6f:	55                   	push   rbp
    8a70:	48 89 e5             	mov    rbp,rsp
    8a73:	48 83 ec 20          	sub    rsp,0x20
    8a77:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8a7b:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    8a82:	e9 ff 00 00 00       	jmp    8b86 <conversation_exists+0x11b>
    8a87:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8a8a:	48 98                	cdqe   
    8a8c:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8a93:	48 8d 15 46 15 10 00 	lea    rdx,[rip+0x101546]        # 109fe0 <spi_table>
    8a9a:	48 01 d0             	add    rax,rdx
    8a9d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8aa1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8aa5:	0f b6 80 b0 00 00 00 	movzx  eax,BYTE PTR [rax+0xb0]
    8aac:	84 c0                	test   al,al
    8aae:	0f 84 ce 00 00 00    	je     8b82 <conversation_exists+0x117>
    8ab4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8ab8:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    8abb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8abf:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    8ac2:	39 c2                	cmp    edx,eax
    8ac4:	75 58                	jne    8b1e <conversation_exists+0xb3>
    8ac6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8aca:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    8acd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8ad1:	8b 40 54             	mov    eax,DWORD PTR [rax+0x54]
    8ad4:	39 c2                	cmp    edx,eax
    8ad6:	75 46                	jne    8b1e <conversation_exists+0xb3>
    8ad8:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8adc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8ae0:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8ae4:	48 89 d6             	mov    rsi,rdx
    8ae7:	48 89 c7             	mov    rdi,rax
    8aea:	e8 e1 9c ff ff       	call   27d0 <strcmp@plt>
    8aef:	85 c0                	test   eax,eax
    8af1:	0f 85 8a 00 00 00    	jne    8b81 <conversation_exists+0x116>
    8af7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8afb:	48 8d 50 29          	lea    rdx,[rax+0x29]
    8aff:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b03:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    8b07:	48 89 d6             	mov    rsi,rdx
    8b0a:	48 89 c7             	mov    rdi,rax
    8b0d:	e8 be 9c ff ff       	call   27d0 <strcmp@plt>
    8b12:	85 c0                	test   eax,eax
    8b14:	75 6b                	jne    8b81 <conversation_exists+0x116>
    8b16:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8b19:	e9 81 00 00 00       	jmp    8b9f <conversation_exists+0x134>
    8b1e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b22:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    8b25:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b29:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    8b2c:	39 c2                	cmp    edx,eax
    8b2e:	75 52                	jne    8b82 <conversation_exists+0x117>
    8b30:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b34:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    8b37:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b3b:	8b 40 54             	mov    eax,DWORD PTR [rax+0x54]
    8b3e:	39 c2                	cmp    edx,eax
    8b40:	75 40                	jne    8b82 <conversation_exists+0x117>
    8b42:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8b46:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b4a:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    8b4e:	48 89 d6             	mov    rsi,rdx
    8b51:	48 89 c7             	mov    rdi,rax
    8b54:	e8 77 9c ff ff       	call   27d0 <strcmp@plt>
    8b59:	85 c0                	test   eax,eax
    8b5b:	75 25                	jne    8b82 <conversation_exists+0x117>
    8b5d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b61:	48 8d 50 29          	lea    rdx,[rax+0x29]
    8b65:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b69:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8b6d:	48 89 d6             	mov    rsi,rdx
    8b70:	48 89 c7             	mov    rdi,rax
    8b73:	e8 58 9c ff ff       	call   27d0 <strcmp@plt>
    8b78:	85 c0                	test   eax,eax
    8b7a:	75 06                	jne    8b82 <conversation_exists+0x117>
    8b7c:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8b7f:	eb 1e                	jmp    8b9f <conversation_exists+0x134>
    8b81:	90                   	nop
    8b82:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    8b86:	8b 05 b4 84 00 00    	mov    eax,DWORD PTR [rip+0x84b4]        # 11040 <total_conversations>
    8b8c:	8d 50 01             	lea    edx,[rax+0x1]
    8b8f:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8b92:	39 c2                	cmp    edx,eax
    8b94:	0f 87 ed fe ff ff    	ja     8a87 <conversation_exists+0x1c>
    8b9a:	b8 ff ff ff ff       	mov    eax,0xffffffff
    8b9f:	c9                   	leave  
    8ba0:	c3                   	ret    

0000000000008ba1 <get_new_spi_location>:
    8ba1:	f3 0f 1e fa          	endbr64 
    8ba5:	55                   	push   rbp
    8ba6:	48 89 e5             	mov    rbp,rsp
    8ba9:	8b 05 91 84 00 00    	mov    eax,DWORD PTR [rip+0x8491]        # 11040 <total_conversations>
    8baf:	83 f8 ff             	cmp    eax,0xffffffff
    8bb2:	75 17                	jne    8bcb <get_new_spi_location+0x2a>
    8bb4:	8b 05 86 84 00 00    	mov    eax,DWORD PTR [rip+0x8486]        # 11040 <total_conversations>
    8bba:	83 c0 01             	add    eax,0x1
    8bbd:	89 05 7d 84 00 00    	mov    DWORD PTR [rip+0x847d],eax        # 11040 <total_conversations>
    8bc3:	8b 05 77 84 00 00    	mov    eax,DWORD PTR [rip+0x8477]        # 11040 <total_conversations>
    8bc9:	eb 52                	jmp    8c1d <get_new_spi_location+0x7c>
    8bcb:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    8bd2:	eb 27                	jmp    8bfb <get_new_spi_location+0x5a>
    8bd4:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    8bd7:	48 98                	cdqe   
    8bd9:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8be0:	48 8d 15 a9 14 10 00 	lea    rdx,[rip+0x1014a9]        # 10a090 <spi_table+0xb0>
    8be7:	0f b6 04 10          	movzx  eax,BYTE PTR [rax+rdx*1]
    8beb:	83 f0 01             	xor    eax,0x1
    8bee:	84 c0                	test   al,al
    8bf0:	74 05                	je     8bf7 <get_new_spi_location+0x56>
    8bf2:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    8bf5:	eb 26                	jmp    8c1d <get_new_spi_location+0x7c>
    8bf7:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    8bfb:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
    8bfe:	8b 05 3c 84 00 00    	mov    eax,DWORD PTR [rip+0x843c]        # 11040 <total_conversations>
    8c04:	39 c2                	cmp    edx,eax
    8c06:	72 cc                	jb     8bd4 <get_new_spi_location+0x33>
    8c08:	8b 05 32 84 00 00    	mov    eax,DWORD PTR [rip+0x8432]        # 11040 <total_conversations>
    8c0e:	83 c0 01             	add    eax,0x1
    8c11:	89 05 29 84 00 00    	mov    DWORD PTR [rip+0x8429],eax        # 11040 <total_conversations>
    8c17:	8b 05 23 84 00 00    	mov    eax,DWORD PTR [rip+0x8423]        # 11040 <total_conversations>
    8c1d:	5d                   	pop    rbp
    8c1e:	c3                   	ret    

0000000000008c1f <add_new_conversation>:
    8c1f:	f3 0f 1e fa          	endbr64 
    8c23:	55                   	push   rbp
    8c24:	48 89 e5             	mov    rbp,rsp
    8c27:	48 83 ec 20          	sub    rsp,0x20
    8c2b:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8c2f:	0f b6 05 8c 13 10 00 	movzx  eax,BYTE PTR [rip+0x10138c]        # 109fc2 <use_spi>
    8c36:	84 c0                	test   al,al
    8c38:	0f 84 17 02 00 00    	je     8e55 <add_new_conversation+0x236>
    8c3e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8c42:	48 89 c7             	mov    rdi,rax
    8c45:	e8 21 fe ff ff       	call   8a6b <conversation_exists>
    8c4a:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    8c4d:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    8c51:	0f 84 88 00 00 00    	je     8cdf <add_new_conversation+0xc0>
    8c57:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8c5a:	48 98                	cdqe   
    8c5c:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8c63:	48 8d 15 76 13 10 00 	lea    rdx,[rip+0x101376]        # 109fe0 <spi_table>
    8c6a:	48 01 d0             	add    rax,rdx
    8c6d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8c71:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c75:	8b 80 ac 00 00 00    	mov    eax,DWORD PTR [rax+0xac]
    8c7b:	8d 50 01             	lea    edx,[rax+0x1]
    8c7e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c82:	89 90 ac 00 00 00    	mov    DWORD PTR [rax+0xac],edx
    8c88:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c8c:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    8c92:	8d 50 01             	lea    edx,[rax+0x1]
    8c95:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c99:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    8c9f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8ca3:	8b 78 54             	mov    edi,DWORD PTR [rax+0x54]
    8ca6:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    8caa:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8cae:	8b 50 58             	mov    edx,DWORD PTR [rax+0x58]
    8cb1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8cb5:	48 8d 70 29          	lea    rsi,[rax+0x29]
    8cb9:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8cbc:	41 89 f9             	mov    r9d,edi
    8cbf:	49 89 c8             	mov    r8,rcx
    8cc2:	89 d1                	mov    ecx,edx
    8cc4:	48 89 f2             	mov    rdx,rsi
    8cc7:	89 c6                	mov    esi,eax
    8cc9:	48 8d 3d 18 4c 00 00 	lea    rdi,[rip+0x4c18]        # d8e8 <_IO_stdin_used+0x18e8>
    8cd0:	b8 00 00 00 00       	mov    eax,0x0
    8cd5:	e8 f6 97 ff ff       	call   24d0 <printf@plt>
    8cda:	e9 76 01 00 00       	jmp    8e55 <add_new_conversation+0x236>
    8cdf:	b8 00 00 00 00       	mov    eax,0x0
    8ce4:	e8 b8 fe ff ff       	call   8ba1 <get_new_spi_location>
    8ce9:	48 98                	cdqe   
    8ceb:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8cf2:	48 8d 15 e7 12 10 00 	lea    rdx,[rip+0x1012e7]        # 109fe0 <spi_table>
    8cf9:	48 01 d0             	add    rax,rdx
    8cfc:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8d00:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d04:	ba 08 00 00 00       	mov    edx,0x8
    8d09:	be 00 00 00 00       	mov    esi,0x0
    8d0e:	48 89 c7             	mov    rdi,rax
    8d11:	e8 ca 97 ff ff       	call   24e0 <memset@plt>
    8d16:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d1a:	c6 80 b0 00 00 00 01 	mov    BYTE PTR [rax+0xb0],0x1
    8d21:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d25:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8d29:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8d2d:	48 83 c2 29          	add    rdx,0x29
    8d31:	48 89 c6             	mov    rsi,rax
    8d34:	48 89 d7             	mov    rdi,rdx
    8d37:	e8 c4 9a ff ff       	call   2800 <strcpy@plt>
    8d3c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d40:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
    8d44:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d48:	48 89 d6             	mov    rsi,rdx
    8d4b:	48 89 c7             	mov    rdi,rax
    8d4e:	e8 ad 9a ff ff       	call   2800 <strcpy@plt>
    8d53:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d57:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    8d5a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d5e:	89 50 58             	mov    DWORD PTR [rax+0x58],edx
    8d61:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d65:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    8d68:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d6c:	89 50 54             	mov    DWORD PTR [rax+0x54],edx
    8d6f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d73:	c7 40 7c 00 00 00 00 	mov    DWORD PTR [rax+0x7c],0x0
    8d7a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d7e:	48 8d 50 5c          	lea    rdx,[rax+0x5c]
    8d82:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d86:	48 89 50 70          	mov    QWORD PTR [rax+0x70],rdx
    8d8a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d8e:	48 8d 50 60          	lea    rdx,[rax+0x60]
    8d92:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d96:	48 89 50 68          	mov    QWORD PTR [rax+0x68],rdx
    8d9a:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8d9e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8da2:	48 89 d6             	mov    rsi,rdx
    8da5:	48 89 c7             	mov    rdi,rax
    8da8:	e8 8e 04 00 00       	call   923b <increment_stats>
    8dad:	bf 00 00 00 00       	mov    edi,0x0
    8db2:	e8 59 9b ff ff       	call   2910 <time@plt>
    8db7:	48 89 c2             	mov    rdx,rax
    8dba:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8dbe:	48 89 90 90 00 00 00 	mov    QWORD PTR [rax+0x90],rdx
    8dc5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8dc9:	c7 80 80 00 00 00 00 	mov    DWORD PTR [rax+0x80],0x0
    8dd0:	00 00 00 
    8dd3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8dd7:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    8ddd:	8d 50 01             	lea    edx,[rax+0x1]
    8de0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8de4:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    8dea:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8dee:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    8df1:	89 c2                	mov    edx,eax
    8df3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8df7:	89 90 a4 00 00 00    	mov    DWORD PTR [rax+0xa4],edx
    8dfd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e01:	8b 78 54             	mov    edi,DWORD PTR [rax+0x54]
    8e04:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    8e08:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e0c:	8b 50 58             	mov    edx,DWORD PTR [rax+0x58]
    8e0f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e13:	48 8d 70 29          	lea    rsi,[rax+0x29]
    8e17:	8b 05 23 82 00 00    	mov    eax,DWORD PTR [rip+0x8223]        # 11040 <total_conversations>
    8e1d:	41 89 f9             	mov    r9d,edi
    8e20:	49 89 c8             	mov    r8,rcx
    8e23:	89 d1                	mov    ecx,edx
    8e25:	48 89 f2             	mov    rdx,rsi
    8e28:	89 c6                	mov    esi,eax
    8e2a:	48 8d 3d df 4a 00 00 	lea    rdi,[rip+0x4adf]        # d910 <_IO_stdin_used+0x1910>
    8e31:	b8 00 00 00 00       	mov    eax,0x0
    8e36:	e8 95 96 ff ff       	call   24d0 <printf@plt>
    8e3b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8e3f:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    8e42:	83 f8 7e             	cmp    eax,0x7e
    8e45:	75 0e                	jne    8e55 <add_new_conversation+0x236>
    8e47:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e4b:	c7 80 8c 00 00 00 f3 	mov    DWORD PTR [rax+0x8c],0xf3
    8e52:	00 00 00 
    8e55:	90                   	nop
    8e56:	c9                   	leave  
    8e57:	c3                   	ret    

0000000000008e58 <spi_ud_thw>:
    8e58:	f3 0f 1e fa          	endbr64 
    8e5c:	55                   	push   rbp
    8e5d:	48 89 e5             	mov    rbp,rsp
    8e60:	48 83 ec 20          	sub    rsp,0x20
    8e64:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8e68:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8e6c:	48 89 c7             	mov    rdi,rax
    8e6f:	e8 f7 fb ff ff       	call   8a6b <conversation_exists>
    8e74:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    8e77:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    8e7b:	0f 84 9d 00 00 00    	je     8f1e <spi_ud_thw+0xc6>
    8e81:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8e84:	48 98                	cdqe   
    8e86:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8e8d:	48 8d 15 4c 11 10 00 	lea    rdx,[rip+0x10114c]        # 109fe0 <spi_table>
    8e94:	48 01 d0             	add    rax,rdx
    8e97:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8e9b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e9f:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    8ea5:	8d 50 01             	lea    edx,[rax+0x1]
    8ea8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8eac:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    8eb2:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8eb6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8eba:	48 89 d6             	mov    rsi,rdx
    8ebd:	48 89 c7             	mov    rdi,rax
    8ec0:	e8 76 03 00 00       	call   923b <increment_stats>
    8ec5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8ec9:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    8ecc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8ed0:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    8ed4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8ed8:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    8edb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8edf:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    8ee3:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8ee6:	41 89 f9             	mov    r9d,edi
    8ee9:	49 89 f0             	mov    r8,rsi
    8eec:	89 c6                	mov    esi,eax
    8eee:	48 8d 3d 43 4a 00 00 	lea    rdi,[rip+0x4a43]        # d938 <_IO_stdin_used+0x1938>
    8ef5:	b8 00 00 00 00       	mov    eax,0x0
    8efa:	e8 d1 95 ff ff       	call   24d0 <printf@plt>
    8eff:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8f03:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
    8f09:	3d f3 00 00 00       	cmp    eax,0xf3
    8f0e:	75 0e                	jne    8f1e <spi_ud_thw+0xc6>
    8f10:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8f14:	c7 80 8c 00 00 00 f4 	mov    DWORD PTR [rax+0x8c],0xf4
    8f1b:	00 00 00 
    8f1e:	90                   	nop
    8f1f:	c9                   	leave  
    8f20:	c3                   	ret    

0000000000008f21 <update_table>:
    8f21:	f3 0f 1e fa          	endbr64 
    8f25:	55                   	push   rbp
    8f26:	48 89 e5             	mov    rbp,rsp
    8f29:	48 83 ec 30          	sub    rsp,0x30
    8f2d:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    8f31:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8f38:	00 00 
    8f3a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8f3e:	31 c0                	xor    eax,eax
    8f40:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8f44:	48 89 c7             	mov    rdi,rax
    8f47:	e8 1f fb ff ff       	call   8a6b <conversation_exists>
    8f4c:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
    8f4f:	83 7d e4 ff          	cmp    DWORD PTR [rbp-0x1c],0xffffffff
    8f53:	0f 84 52 01 00 00    	je     90ab <update_table+0x18a>
    8f59:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    8f5c:	48 98                	cdqe   
    8f5e:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8f65:	48 8d 15 74 10 10 00 	lea    rdx,[rip+0x101074]        # 109fe0 <spi_table>
    8f6c:	48 01 d0             	add    rax,rdx
    8f6f:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    8f73:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8f77:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    8f7d:	8d 50 01             	lea    edx,[rax+0x1]
    8f80:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8f84:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    8f8a:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    8f8e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8f92:	48 89 d6             	mov    rsi,rdx
    8f95:	48 89 c7             	mov    rdi,rax
    8f98:	e8 9e 02 00 00       	call   923b <increment_stats>
    8f9d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8fa1:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
    8fa7:	3d f4 00 00 00       	cmp    eax,0xf4
    8fac:	75 4d                	jne    8ffb <update_table+0xda>
    8fae:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8fb2:	c7 80 8c 00 00 00 f1 	mov    DWORD PTR [rax+0x8c],0xf1
    8fb9:	00 00 00 
    8fbc:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8fc0:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    8fc3:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8fc7:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    8fcb:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8fcf:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    8fd2:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8fd6:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    8fda:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    8fdd:	41 89 f9             	mov    r9d,edi
    8fe0:	49 89 f0             	mov    r8,rsi
    8fe3:	89 c6                	mov    esi,eax
    8fe5:	48 8d 3d 74 49 00 00 	lea    rdi,[rip+0x4974]        # d960 <_IO_stdin_used+0x1960>
    8fec:	b8 00 00 00 00       	mov    eax,0x0
    8ff1:	e8 da 94 ff ff       	call   24d0 <printf@plt>
    8ff6:	e9 b0 00 00 00       	jmp    90ab <update_table+0x18a>
    8ffb:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8fff:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
    9005:	3d f6 00 00 00       	cmp    eax,0xf6
    900a:	0f 85 9b 00 00 00    	jne    90ab <update_table+0x18a>
    9010:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9014:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    9017:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    901b:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    901f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9023:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    9026:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    902a:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    902e:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    9031:	41 89 f9             	mov    r9d,edi
    9034:	49 89 f0             	mov    r8,rsi
    9037:	89 c6                	mov    esi,eax
    9039:	48 8d 3d 50 49 00 00 	lea    rdi,[rip+0x4950]        # d990 <_IO_stdin_used+0x1990>
    9040:	b8 00 00 00 00       	mov    eax,0x0
    9045:	e8 86 94 ff ff       	call   24d0 <printf@plt>
    904a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    904e:	c7 80 8c 00 00 00 fa 	mov    DWORD PTR [rax+0x8c],0xfa
    9055:	00 00 00 
    9058:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    905c:	c6 80 b0 00 00 00 00 	mov    BYTE PTR [rax+0xb0],0x0
    9063:	bf 00 00 00 00       	mov    edi,0x0
    9068:	e8 a3 98 ff ff       	call   2910 <time@plt>
    906d:	48 89 c2             	mov    rdx,rax
    9070:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9074:	48 89 90 98 00 00 00 	mov    QWORD PTR [rax+0x98],rdx
    907b:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    907f:	48 8d 45 e8          	lea    rax,[rbp-0x18]
    9083:	48 89 d1             	mov    rcx,rdx
    9086:	48 8d 15 b1 f3 ff ff 	lea    rdx,[rip+0xfffffffffffff3b1]        # 843e <update_spi_db>
    908d:	be 00 00 00 00       	mov    esi,0x0
    9092:	48 89 c7             	mov    rdi,rax
    9095:	e8 86 95 ff ff       	call   2620 <pthread_create@plt>
    909a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    909e:	be 00 00 00 00       	mov    esi,0x0
    90a3:	48 89 c7             	mov    rdi,rax
    90a6:	e8 15 94 ff ff       	call   24c0 <pthread_join@plt>
    90ab:	90                   	nop
    90ac:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    90b0:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    90b7:	00 00 
    90b9:	74 05                	je     90c0 <update_table+0x19f>
    90bb:	e8 00 97 ff ff       	call   27c0 <__stack_chk_fail@plt>
    90c0:	c9                   	leave  
    90c1:	c3                   	ret    

00000000000090c2 <polite_end>:
    90c2:	f3 0f 1e fa          	endbr64 
    90c6:	55                   	push   rbp
    90c7:	48 89 e5             	mov    rbp,rsp
    90ca:	48 83 ec 20          	sub    rsp,0x20
    90ce:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    90d2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    90d6:	48 89 c7             	mov    rdi,rax
    90d9:	e8 8d f9 ff ff       	call   8a6b <conversation_exists>
    90de:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    90e1:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    90e5:	0f 84 e7 00 00 00    	je     91d2 <polite_end+0x110>
    90eb:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    90ee:	48 98                	cdqe   
    90f0:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    90f7:	48 8d 15 e2 0e 10 00 	lea    rdx,[rip+0x100ee2]        # 109fe0 <spi_table>
    90fe:	48 01 d0             	add    rax,rdx
    9101:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9105:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9109:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    910f:	8d 50 01             	lea    edx,[rax+0x1]
    9112:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9116:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    911c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9120:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
    9126:	3d f5 00 00 00       	cmp    eax,0xf5
    912b:	75 4a                	jne    9177 <polite_end+0xb5>
    912d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9131:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    9134:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9138:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    913c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9140:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    9143:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9147:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    914b:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    914e:	41 89 f9             	mov    r9d,edi
    9151:	49 89 f0             	mov    r8,rsi
    9154:	89 c6                	mov    esi,eax
    9156:	48 8d 3d 6b 48 00 00 	lea    rdi,[rip+0x486b]        # d9c8 <_IO_stdin_used+0x19c8>
    915d:	b8 00 00 00 00       	mov    eax,0x0
    9162:	e8 69 93 ff ff       	call   24d0 <printf@plt>
    9167:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    916b:	c7 80 8c 00 00 00 f6 	mov    DWORD PTR [rax+0x8c],0xf6
    9172:	00 00 00 
    9175:	eb 48                	jmp    91bf <polite_end+0xfd>
    9177:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    917b:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    917e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9182:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    9186:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    918a:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    918d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9191:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    9195:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    9198:	41 89 f9             	mov    r9d,edi
    919b:	49 89 f0             	mov    r8,rsi
    919e:	89 c6                	mov    esi,eax
    91a0:	48 8d 3d 59 48 00 00 	lea    rdi,[rip+0x4859]        # da00 <_IO_stdin_used+0x1a00>
    91a7:	b8 00 00 00 00       	mov    eax,0x0
    91ac:	e8 1f 93 ff ff       	call   24d0 <printf@plt>
    91b1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    91b5:	c7 80 8c 00 00 00 f5 	mov    DWORD PTR [rax+0x8c],0xf5
    91bc:	00 00 00 
    91bf:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    91c3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    91c7:	48 89 d6             	mov    rsi,rdx
    91ca:	48 89 c7             	mov    rdi,rax
    91cd:	e8 69 00 00 00       	call   923b <increment_stats>
    91d2:	90                   	nop
    91d3:	c9                   	leave  
    91d4:	c3                   	ret    

00000000000091d5 <handle_data_pkt>:
    91d5:	f3 0f 1e fa          	endbr64 
    91d9:	55                   	push   rbp
    91da:	48 89 e5             	mov    rbp,rsp
    91dd:	48 83 ec 20          	sub    rsp,0x20
    91e1:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    91e5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    91e9:	48 89 c7             	mov    rdi,rax
    91ec:	e8 7a f8 ff ff       	call   8a6b <conversation_exists>
    91f1:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    91f4:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    91f8:	74 3e                	je     9238 <handle_data_pkt+0x63>
    91fa:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    91fd:	48 98                	cdqe   
    91ff:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    9206:	48 8d 15 d3 0d 10 00 	lea    rdx,[rip+0x100dd3]        # 109fe0 <spi_table>
    920d:	48 01 d0             	add    rax,rdx
    9210:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9214:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9218:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    921b:	8d 50 01             	lea    edx,[rax+0x1]
    921e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9222:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    9225:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    9229:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    922d:	48 89 d6             	mov    rsi,rdx
    9230:	48 89 c7             	mov    rdi,rax
    9233:	e8 03 00 00 00       	call   923b <increment_stats>
    9238:	90                   	nop
    9239:	c9                   	leave  
    923a:	c3                   	ret    

000000000000923b <increment_stats>:
    923b:	f3 0f 1e fa          	endbr64 
    923f:	55                   	push   rbp
    9240:	48 89 e5             	mov    rbp,rsp
    9243:	48 83 ec 10          	sub    rsp,0x10
    9247:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    924b:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    924f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9253:	48 8d 50 29          	lea    rdx,[rax+0x29]
    9257:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    925b:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    925f:	48 89 d6             	mov    rsi,rdx
    9262:	48 89 c7             	mov    rdi,rax
    9265:	e8 66 95 ff ff       	call   27d0 <strcmp@plt>
    926a:	85 c0                	test   eax,eax
    926c:	75 13                	jne    9281 <increment_stats+0x46>
    926e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9272:	8b 40 60             	mov    eax,DWORD PTR [rax+0x60]
    9275:	8d 50 01             	lea    edx,[rax+0x1]
    9278:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    927c:	89 50 60             	mov    DWORD PTR [rax+0x60],edx
    927f:	eb 2c                	jmp    92ad <increment_stats+0x72>
    9281:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    9285:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9289:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    928d:	48 89 d6             	mov    rsi,rdx
    9290:	48 89 c7             	mov    rdi,rax
    9293:	e8 38 95 ff ff       	call   27d0 <strcmp@plt>
    9298:	85 c0                	test   eax,eax
    929a:	75 11                	jne    92ad <increment_stats+0x72>
    929c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    92a0:	8b 40 5c             	mov    eax,DWORD PTR [rax+0x5c]
    92a3:	8d 50 01             	lea    edx,[rax+0x1]
    92a6:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    92aa:	89 50 5c             	mov    DWORD PTR [rax+0x5c],edx
    92ad:	90                   	nop
    92ae:	c9                   	leave  
    92af:	c3                   	ret    

00000000000092b0 <lprintf>:
    92b0:	f3 0f 1e fa          	endbr64 
    92b4:	55                   	push   rbp
    92b5:	48 89 e5             	mov    rbp,rsp
    92b8:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
    92bf:	48 89 bd 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rdi
    92c6:	48 89 b5 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rsi
    92cd:	48 89 95 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdx
    92d4:	48 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rcx
    92db:	4c 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r8
    92e2:	4c 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r9
    92e9:	84 c0                	test   al,al
    92eb:	74 20                	je     930d <lprintf+0x5d>
    92ed:	0f 29 45 80          	movaps XMMWORD PTR [rbp-0x80],xmm0
    92f1:	0f 29 4d 90          	movaps XMMWORD PTR [rbp-0x70],xmm1
    92f5:	0f 29 55 a0          	movaps XMMWORD PTR [rbp-0x60],xmm2
    92f9:	0f 29 5d b0          	movaps XMMWORD PTR [rbp-0x50],xmm3
    92fd:	0f 29 65 c0          	movaps XMMWORD PTR [rbp-0x40],xmm4
    9301:	0f 29 6d d0          	movaps XMMWORD PTR [rbp-0x30],xmm5
    9305:	0f 29 75 e0          	movaps XMMWORD PTR [rbp-0x20],xmm6
    9309:	0f 29 7d f0          	movaps XMMWORD PTR [rbp-0x10],xmm7
    930d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9314:	00 00 
    9316:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    931d:	31 c0                	xor    eax,eax
    931f:	c7 85 30 ff ff ff 10 	mov    DWORD PTR [rbp-0xd0],0x10
    9326:	00 00 00 
    9329:	c7 85 34 ff ff ff 30 	mov    DWORD PTR [rbp-0xcc],0x30
    9330:	00 00 00 
    9333:	48 8d 45 10          	lea    rax,[rbp+0x10]
    9337:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    933e:	48 8d 85 50 ff ff ff 	lea    rax,[rbp-0xb0]
    9345:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    934c:	48 8d 95 30 ff ff ff 	lea    rdx,[rbp-0xd0]
    9353:	48 8b 8d 20 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xe0]
    935a:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    9361:	48 89 ce             	mov    rsi,rcx
    9364:	48 89 c7             	mov    rdi,rax
    9367:	b8 00 00 00 00       	mov    eax,0x0
    936c:	e8 4f 95 ff ff       	call   28c0 <fprintf@plt>
    9371:	90                   	nop
    9372:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    9379:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    9380:	00 00 
    9382:	74 05                	je     9389 <lprintf+0xd9>
    9384:	e8 37 94 ff ff       	call   27c0 <__stack_chk_fail@plt>
    9389:	c9                   	leave  
    938a:	c3                   	ret    

000000000000938b <lfprintf>:
    938b:	f3 0f 1e fa          	endbr64 
    938f:	55                   	push   rbp
    9390:	48 89 e5             	mov    rbp,rsp
    9393:	48 81 ec 90 08 00 00 	sub    rsp,0x890
    939a:	48 89 bd 98 f7 ff ff 	mov    QWORD PTR [rbp-0x868],rdi
    93a1:	48 89 b5 90 f7 ff ff 	mov    QWORD PTR [rbp-0x870],rsi
    93a8:	48 89 95 88 f7 ff ff 	mov    QWORD PTR [rbp-0x878],rdx
    93af:	48 89 8d 80 f7 ff ff 	mov    QWORD PTR [rbp-0x880],rcx
    93b6:	44 89 85 7c f7 ff ff 	mov    DWORD PTR [rbp-0x884],r8d
    93bd:	44 89 8d 78 f7 ff ff 	mov    DWORD PTR [rbp-0x888],r9d
    93c4:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    93cb:	00 00 
    93cd:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    93d1:	31 c0                	xor    eax,eax
    93d3:	48 8b 85 98 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x868]
    93da:	48 8d 35 57 46 00 00 	lea    rsi,[rip+0x4657]        # da38 <_IO_stdin_used+0x1a38>
    93e1:	48 89 c7             	mov    rdi,rax
    93e4:	e8 d7 91 ff ff       	call   25c0 <fopen@plt>
    93e9:	48 89 85 a8 f7 ff ff 	mov    QWORD PTR [rbp-0x858],rax
    93f0:	48 83 bd a8 f7 ff ff 	cmp    QWORD PTR [rbp-0x858],0x0
    93f7:	00 
    93f8:	75 20                	jne    941a <lfprintf+0x8f>
    93fa:	48 8b 85 90 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x870]
    9401:	48 89 c6             	mov    rsi,rax
    9404:	48 8d 3d 35 46 00 00 	lea    rdi,[rip+0x4635]        # da40 <_IO_stdin_used+0x1a40>
    940b:	b8 00 00 00 00       	mov    eax,0x0
    9410:	e8 bb 90 ff ff       	call   24d0 <printf@plt>
    9415:	e9 cd 00 00 00       	jmp    94e7 <lfprintf+0x15c>
    941a:	48 8d 85 b0 f7 ff ff 	lea    rax,[rbp-0x850]
    9421:	48 89 c7             	mov    rdi,rax
    9424:	e8 94 a0 ff ff       	call   34bd <cb_get_formatted_time>
    9429:	83 bd 7c f7 ff ff ff 	cmp    DWORD PTR [rbp-0x884],0xffffffff
    9430:	75 3f                	jne    9471 <lfprintf+0xe6>
    9432:	48 8b bd 80 f7 ff ff 	mov    rdi,QWORD PTR [rbp-0x880]
    9439:	48 8b b5 88 f7 ff ff 	mov    rsi,QWORD PTR [rbp-0x878]
    9440:	48 8b 8d 90 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x870]
    9447:	48 8d 95 b0 f7 ff ff 	lea    rdx,[rbp-0x850]
    944e:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    9455:	49 89 f9             	mov    r9,rdi
    9458:	49 89 f0             	mov    r8,rsi
    945b:	48 8d 35 0c 46 00 00 	lea    rsi,[rip+0x460c]        # da6e <_IO_stdin_used+0x1a6e>
    9462:	48 89 c7             	mov    rdi,rax
    9465:	b8 00 00 00 00       	mov    eax,0x0
    946a:	e8 21 92 ff ff       	call   2690 <sprintf@plt>
    946f:	eb 4e                	jmp    94bf <lfprintf+0x134>
    9471:	44 8b 85 7c f7 ff ff 	mov    r8d,DWORD PTR [rbp-0x884]
    9478:	48 8b bd 88 f7 ff ff 	mov    rdi,QWORD PTR [rbp-0x878]
    947f:	48 8b 8d 90 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x870]
    9486:	48 8d 95 b0 f7 ff ff 	lea    rdx,[rbp-0x850]
    948d:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    9494:	8b b5 78 f7 ff ff    	mov    esi,DWORD PTR [rbp-0x888]
    949a:	56                   	push   rsi
    949b:	ff b5 80 f7 ff ff    	push   QWORD PTR [rbp-0x880]
    94a1:	45 89 c1             	mov    r9d,r8d
    94a4:	49 89 f8             	mov    r8,rdi
    94a7:	48 8d 35 d0 45 00 00 	lea    rsi,[rip+0x45d0]        # da7e <_IO_stdin_used+0x1a7e>
    94ae:	48 89 c7             	mov    rdi,rax
    94b1:	b8 00 00 00 00       	mov    eax,0x0
    94b6:	e8 d5 91 ff ff       	call   2690 <sprintf@plt>
    94bb:	48 83 c4 10          	add    rsp,0x10
    94bf:	48 8b 95 a8 f7 ff ff 	mov    rdx,QWORD PTR [rbp-0x858]
    94c6:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    94cd:	48 89 d6             	mov    rsi,rdx
    94d0:	48 89 c7             	mov    rdi,rax
    94d3:	e8 38 92 ff ff       	call   2710 <fputs@plt>
    94d8:	48 8b 85 a8 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x858]
    94df:	48 89 c7             	mov    rdi,rax
    94e2:	e8 59 93 ff ff       	call   2840 <fclose@plt>
    94e7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    94eb:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    94f2:	00 00 
    94f4:	74 05                	je     94fb <lfprintf+0x170>
    94f6:	e8 c5 92 ff ff       	call   27c0 <__stack_chk_fail@plt>
    94fb:	c9                   	leave  
    94fc:	c3                   	ret    

00000000000094fd <saprintf>:
    94fd:	f3 0f 1e fa          	endbr64 
    9501:	55                   	push   rbp
    9502:	48 89 e5             	mov    rbp,rsp
    9505:	48 83 ec 20          	sub    rsp,0x20
    9509:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    950d:	48 8b 05 1c 7b 00 00 	mov    rax,QWORD PTR [rip+0x7b1c]        # 11030 <def_log_file>
    9514:	48 8d 35 1d 45 00 00 	lea    rsi,[rip+0x451d]        # da38 <_IO_stdin_used+0x1a38>
    951b:	48 89 c7             	mov    rdi,rax
    951e:	e8 9d 90 ff ff       	call   25c0 <fopen@plt>
    9523:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9527:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    952c:	75 1a                	jne    9548 <saprintf+0x4b>
    952e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9532:	48 89 c6             	mov    rsi,rax
    9535:	48 8d 3d 04 45 00 00 	lea    rdi,[rip+0x4504]        # da40 <_IO_stdin_used+0x1a40>
    953c:	b8 00 00 00 00       	mov    eax,0x0
    9541:	e8 8a 8f ff ff       	call   24d0 <printf@plt>
    9546:	eb 1f                	jmp    9567 <saprintf+0x6a>
    9548:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    954c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9550:	48 89 d6             	mov    rsi,rdx
    9553:	48 89 c7             	mov    rdi,rax
    9556:	e8 b5 91 ff ff       	call   2710 <fputs@plt>
    955b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    955f:	48 89 c7             	mov    rdi,rax
    9562:	e8 d9 92 ff ff       	call   2840 <fclose@plt>
    9567:	c9                   	leave  
    9568:	c3                   	ret    

0000000000009569 <substr>:
    9569:	f3 0f 1e fa          	endbr64 
    956d:	55                   	push   rbp
    956e:	48 89 e5             	mov    rbp,rsp
    9571:	48 83 ec 20          	sub    rsp,0x20
    9575:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    9579:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    957c:	89 55 e0             	mov    DWORD PTR [rbp-0x20],edx
    957f:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
    9582:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    9585:	83 c0 02             	add    eax,0x2
    9588:	48 98                	cdqe   
    958a:	48 89 c7             	mov    rdi,rax
    958d:	e8 1e 90 ff ff       	call   25b0 <malloc@plt>
    9592:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9596:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    9599:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    959c:	eb 27                	jmp    95c5 <substr+0x5c>
    959e:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    95a1:	48 63 d0             	movsxd rdx,eax
    95a4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    95a8:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    95ac:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    95af:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    95b2:	48 63 d0             	movsxd rdx,eax
    95b5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    95b9:	48 01 c2             	add    rdx,rax
    95bc:	0f b6 01             	movzx  eax,BYTE PTR [rcx]
    95bf:	88 02                	mov    BYTE PTR [rdx],al
    95c1:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    95c5:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    95c8:	3b 45 e0             	cmp    eax,DWORD PTR [rbp-0x20]
    95cb:	7e d1                	jle    959e <substr+0x35>
    95cd:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
    95d0:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    95d3:	48 98                	cdqe   
    95d5:	48 8d 50 01          	lea    rdx,[rax+0x1]
    95d9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    95dd:	48 01 d0             	add    rax,rdx
    95e0:	c6 00 00             	mov    BYTE PTR [rax],0x0
    95e3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    95e7:	c9                   	leave  
    95e8:	c3                   	ret    

00000000000095e9 <delimit>:
    95e9:	f3 0f 1e fa          	endbr64 
    95ed:	55                   	push   rbp
    95ee:	48 89 e5             	mov    rbp,rsp
    95f1:	89 f8                	mov    eax,edi
    95f3:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
    95f6:	80 7d fc 20          	cmp    BYTE PTR [rbp-0x4],0x20
    95fa:	0f 94 c0             	sete   al
    95fd:	5d                   	pop    rbp
    95fe:	c3                   	ret    

00000000000095ff <isdigit>:
    95ff:	f3 0f 1e fa          	endbr64 
    9603:	55                   	push   rbp
    9604:	48 89 e5             	mov    rbp,rsp
    9607:	53                   	push   rbx
    9608:	48 83 ec 28          	sub    rsp,0x28
    960c:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    9610:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    9617:	e9 f7 00 00 00       	jmp    9713 <isdigit+0x114>
    961c:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    961f:	48 63 d0             	movsxd rdx,eax
    9622:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9626:	48 01 d0             	add    rax,rdx
    9629:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    962c:	3c 30                	cmp    al,0x30
    962e:	0f 84 db 00 00 00    	je     970f <isdigit+0x110>
    9634:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9637:	48 63 d0             	movsxd rdx,eax
    963a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    963e:	48 01 d0             	add    rax,rdx
    9641:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9644:	3c 31                	cmp    al,0x31
    9646:	0f 84 c3 00 00 00    	je     970f <isdigit+0x110>
    964c:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    964f:	48 63 d0             	movsxd rdx,eax
    9652:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9656:	48 01 d0             	add    rax,rdx
    9659:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    965c:	3c 32                	cmp    al,0x32
    965e:	0f 84 ab 00 00 00    	je     970f <isdigit+0x110>
    9664:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9667:	48 63 d0             	movsxd rdx,eax
    966a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    966e:	48 01 d0             	add    rax,rdx
    9671:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9674:	3c 33                	cmp    al,0x33
    9676:	0f 84 93 00 00 00    	je     970f <isdigit+0x110>
    967c:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    967f:	48 63 d0             	movsxd rdx,eax
    9682:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9686:	48 01 d0             	add    rax,rdx
    9689:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    968c:	3c 34                	cmp    al,0x34
    968e:	74 7f                	je     970f <isdigit+0x110>
    9690:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9693:	48 63 d0             	movsxd rdx,eax
    9696:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    969a:	48 01 d0             	add    rax,rdx
    969d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    96a0:	3c 34                	cmp    al,0x34
    96a2:	74 6b                	je     970f <isdigit+0x110>
    96a4:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    96a7:	48 63 d0             	movsxd rdx,eax
    96aa:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    96ae:	48 01 d0             	add    rax,rdx
    96b1:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    96b4:	3c 35                	cmp    al,0x35
    96b6:	74 57                	je     970f <isdigit+0x110>
    96b8:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    96bb:	48 63 d0             	movsxd rdx,eax
    96be:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    96c2:	48 01 d0             	add    rax,rdx
    96c5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    96c8:	3c 36                	cmp    al,0x36
    96ca:	74 43                	je     970f <isdigit+0x110>
    96cc:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    96cf:	48 63 d0             	movsxd rdx,eax
    96d2:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    96d6:	48 01 d0             	add    rax,rdx
    96d9:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    96dc:	3c 37                	cmp    al,0x37
    96de:	74 2f                	je     970f <isdigit+0x110>
    96e0:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    96e3:	48 63 d0             	movsxd rdx,eax
    96e6:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    96ea:	48 01 d0             	add    rax,rdx
    96ed:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    96f0:	3c 38                	cmp    al,0x38
    96f2:	74 1b                	je     970f <isdigit+0x110>
    96f4:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    96f7:	48 63 d0             	movsxd rdx,eax
    96fa:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    96fe:	48 01 d0             	add    rax,rdx
    9701:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9704:	3c 39                	cmp    al,0x39
    9706:	74 07                	je     970f <isdigit+0x110>
    9708:	b8 00 00 00 00       	mov    eax,0x0
    970d:	eb 24                	jmp    9733 <isdigit+0x134>
    970f:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    9713:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9716:	48 63 d8             	movsxd rbx,eax
    9719:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    971d:	48 89 c7             	mov    rdi,rax
    9720:	e8 2b 8f ff ff       	call   2650 <strlen@plt>
    9725:	48 39 c3             	cmp    rbx,rax
    9728:	0f 82 ee fe ff ff    	jb     961c <isdigit+0x1d>
    972e:	b8 01 00 00 00       	mov    eax,0x1
    9733:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    9737:	c9                   	leave  
    9738:	c3                   	ret    

0000000000009739 <assign_port_number>:
    9739:	f3 0f 1e fa          	endbr64 
    973d:	55                   	push   rbp
    973e:	48 89 e5             	mov    rbp,rsp
    9741:	48 83 ec 10          	sub    rsp,0x10
    9745:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9749:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    974d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9751:	48 89 c7             	mov    rdi,rax
    9754:	e8 a6 fe ff ff       	call   95ff <isdigit>
    9759:	84 c0                	test   al,al
    975b:	74 18                	je     9775 <assign_port_number+0x3c>
    975d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9761:	48 89 c7             	mov    rdi,rax
    9764:	e8 d7 8f ff ff       	call   2740 <atoi@plt>
    9769:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    976d:	89 82 44 01 00 00    	mov    DWORD PTR [rdx+0x144],eax
    9773:	eb 25                	jmp    979a <assign_port_number+0x61>
    9775:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9779:	48 8d 35 18 43 00 00 	lea    rsi,[rip+0x4318]        # da98 <_IO_stdin_used+0x1a98>
    9780:	48 89 c7             	mov    rdi,rax
    9783:	e8 48 90 ff ff       	call   27d0 <strcmp@plt>
    9788:	85 c0                	test   eax,eax
    978a:	75 0e                	jne    979a <assign_port_number+0x61>
    978c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9790:	c7 80 44 01 00 00 ff 	mov    DWORD PTR [rax+0x144],0xffffffff
    9797:	ff ff ff 
    979a:	90                   	nop
    979b:	c9                   	leave  
    979c:	c3                   	ret    

000000000000979d <check_port_number>:
    979d:	f3 0f 1e fa          	endbr64 
    97a1:	55                   	push   rbp
    97a2:	48 89 e5             	mov    rbp,rsp
    97a5:	48 83 ec 10          	sub    rsp,0x10
    97a9:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    97ad:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    97b1:	48 89 c7             	mov    rdi,rax
    97b4:	e8 46 fe ff ff       	call   95ff <isdigit>
    97b9:	84 c0                	test   al,al
    97bb:	74 0e                	je     97cb <check_port_number+0x2e>
    97bd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    97c1:	48 89 c7             	mov    rdi,rax
    97c4:	e8 77 8f ff ff       	call   2740 <atoi@plt>
    97c9:	eb 23                	jmp    97ee <check_port_number+0x51>
    97cb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    97cf:	48 8d 35 c2 42 00 00 	lea    rsi,[rip+0x42c2]        # da98 <_IO_stdin_used+0x1a98>
    97d6:	48 89 c7             	mov    rdi,rax
    97d9:	e8 f2 8f ff ff       	call   27d0 <strcmp@plt>
    97de:	85 c0                	test   eax,eax
    97e0:	75 07                	jne    97e9 <check_port_number+0x4c>
    97e2:	b8 ff ff ff ff       	mov    eax,0xffffffff
    97e7:	eb 05                	jmp    97ee <check_port_number+0x51>
    97e9:	b8 ff ff ff ff       	mov    eax,0xffffffff
    97ee:	c9                   	leave  
    97ef:	c3                   	ret    

00000000000097f0 <assign_protocol>:
    97f0:	f3 0f 1e fa          	endbr64 
    97f4:	55                   	push   rbp
    97f5:	48 89 e5             	mov    rbp,rsp
    97f8:	48 83 ec 10          	sub    rsp,0x10
    97fc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9800:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    9804:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9808:	48 8d 35 8d 42 00 00 	lea    rsi,[rip+0x428d]        # da9c <_IO_stdin_used+0x1a9c>
    980f:	48 89 c7             	mov    rdi,rax
    9812:	e8 b9 8f ff ff       	call   27d0 <strcmp@plt>
    9817:	85 c0                	test   eax,eax
    9819:	75 10                	jne    982b <assign_protocol+0x3b>
    981b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    981f:	c7 80 40 01 00 00 ff 	mov    DWORD PTR [rax+0x140],0xffffffff
    9826:	ff ff ff 
    9829:	eb 73                	jmp    989e <assign_protocol+0xae>
    982b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    982f:	48 8d 35 6a 42 00 00 	lea    rsi,[rip+0x426a]        # daa0 <_IO_stdin_used+0x1aa0>
    9836:	48 89 c7             	mov    rdi,rax
    9839:	e8 92 8f ff ff       	call   27d0 <strcmp@plt>
    983e:	85 c0                	test   eax,eax
    9840:	75 10                	jne    9852 <assign_protocol+0x62>
    9842:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9846:	c7 80 40 01 00 00 80 	mov    DWORD PTR [rax+0x140],0x80
    984d:	00 00 00 
    9850:	eb 4c                	jmp    989e <assign_protocol+0xae>
    9852:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9856:	48 8d 35 48 42 00 00 	lea    rsi,[rip+0x4248]        # daa5 <_IO_stdin_used+0x1aa5>
    985d:	48 89 c7             	mov    rdi,rax
    9860:	e8 6b 8f ff ff       	call   27d0 <strcmp@plt>
    9865:	85 c0                	test   eax,eax
    9867:	75 10                	jne    9879 <assign_protocol+0x89>
    9869:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    986d:	c7 80 40 01 00 00 7e 	mov    DWORD PTR [rax+0x140],0x7e
    9874:	00 00 00 
    9877:	eb 25                	jmp    989e <assign_protocol+0xae>
    9879:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    987d:	48 8d 35 25 42 00 00 	lea    rsi,[rip+0x4225]        # daa9 <_IO_stdin_used+0x1aa9>
    9884:	48 89 c7             	mov    rdi,rax
    9887:	e8 44 8f ff ff       	call   27d0 <strcmp@plt>
    988c:	85 c0                	test   eax,eax
    988e:	75 0e                	jne    989e <assign_protocol+0xae>
    9890:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9894:	c7 80 40 01 00 00 7f 	mov    DWORD PTR [rax+0x140],0x7f
    989b:	00 00 00 
    989e:	90                   	nop
    989f:	c9                   	leave  
    98a0:	c3                   	ret    

00000000000098a1 <get_ruletype>:
    98a1:	f3 0f 1e fa          	endbr64 
    98a5:	55                   	push   rbp
    98a6:	48 89 e5             	mov    rbp,rsp
    98a9:	48 83 ec 10          	sub    rsp,0x10
    98ad:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    98b1:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    98b5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    98b9:	ba 09 00 00 00       	mov    edx,0x9
    98be:	48 8d 35 e8 41 00 00 	lea    rsi,[rip+0x41e8]        # daad <_IO_stdin_used+0x1aad>
    98c5:	48 89 c7             	mov    rdi,rax
    98c8:	e8 d3 8c ff ff       	call   25a0 <strncmp@plt>
    98cd:	85 c0                	test   eax,eax
    98cf:	75 17                	jne    98e8 <get_ruletype+0x47>
    98d1:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    98d5:	48 8d 15 d8 bd ff ff 	lea    rdx,[rip+0xffffffffffffbdd8]        # 56b4 <str_match_parser>
    98dc:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    98e3:	e9 82 00 00 00       	jmp    996a <get_ruletype+0xc9>
    98e8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    98ec:	ba 04 00 00 00       	mov    edx,0x4
    98f1:	48 8d 35 bf 41 00 00 	lea    rsi,[rip+0x41bf]        # dab7 <_IO_stdin_used+0x1ab7>
    98f8:	48 89 c7             	mov    rdi,rax
    98fb:	e8 a0 8c ff ff       	call   25a0 <strncmp@plt>
    9900:	85 c0                	test   eax,eax
    9902:	75 14                	jne    9918 <get_ruletype+0x77>
    9904:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9908:	48 8d 15 48 c0 ff ff 	lea    rdx,[rip+0xffffffffffffc048]        # 5957 <none>
    990f:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    9916:	eb 52                	jmp    996a <get_ruletype+0xc9>
    9918:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    991c:	ba 04 00 00 00       	mov    edx,0x4
    9921:	48 8d 35 94 41 00 00 	lea    rsi,[rip+0x4194]        # dabc <_IO_stdin_used+0x1abc>
    9928:	48 89 c7             	mov    rdi,rax
    992b:	e8 70 8c ff ff       	call   25a0 <strncmp@plt>
    9930:	85 c0                	test   eax,eax
    9932:	75 14                	jne    9948 <get_ruletype+0xa7>
    9934:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9938:	48 8d 15 2f c0 ff ff 	lea    rdx,[rip+0xffffffffffffc02f]        # 596e <pcre_match>
    993f:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    9946:	eb 22                	jmp    996a <get_ruletype+0xc9>
    9948:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    994c:	48 89 c6             	mov    rsi,rax
    994f:	48 8d 3d 6b 41 00 00 	lea    rdi,[rip+0x416b]        # dac1 <_IO_stdin_used+0x1ac1>
    9956:	b8 00 00 00 00       	mov    eax,0x0
    995b:	e8 70 8b ff ff       	call   24d0 <printf@plt>
    9960:	bf 01 00 00 00       	mov    edi,0x1
    9965:	e8 e6 8b ff ff       	call   2550 <exit@plt>
    996a:	c9                   	leave  
    996b:	c3                   	ret    

000000000000996c <numeric_check>:
    996c:	f3 0f 1e fa          	endbr64 
    9970:	55                   	push   rbp
    9971:	48 89 e5             	mov    rbp,rsp
    9974:	48 83 ec 30          	sub    rsp,0x30
    9978:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    997c:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    997f:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    9983:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9987:	48 89 c7             	mov    rdi,rax
    998a:	e8 70 fc ff ff       	call   95ff <isdigit>
    998f:	84 c0                	test   al,al
    9991:	74 27                	je     99ba <numeric_check+0x4e>
    9993:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9997:	48 89 c7             	mov    rdi,rax
    999a:	e8 a1 8d ff ff       	call   2740 <atoi@plt>
    999f:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
    99a2:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    99a5:	39 45 e4             	cmp    DWORD PTR [rbp-0x1c],eax
    99a8:	77 10                	ja     99ba <numeric_check+0x4e>
    99aa:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    99ad:	48 98                	cdqe   
    99af:	48 39 45 d8          	cmp    QWORD PTR [rbp-0x28],rax
    99b3:	72 05                	jb     99ba <numeric_check+0x4e>
    99b5:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    99b8:	eb 05                	jmp    99bf <numeric_check+0x53>
    99ba:	b8 ff ff ff ff       	mov    eax,0xffffffff
    99bf:	c9                   	leave  
    99c0:	c3                   	ret    

00000000000099c1 <sc_strip>:
    99c1:	f3 0f 1e fa          	endbr64 
    99c5:	55                   	push   rbp
    99c6:	48 89 e5             	mov    rbp,rsp
    99c9:	48 83 ec 10          	sub    rsp,0x10
    99cd:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    99d1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    99d5:	48 8d 35 fc 40 00 00 	lea    rsi,[rip+0x40fc]        # dad8 <_IO_stdin_used+0x1ad8>
    99dc:	48 89 c7             	mov    rdi,rax
    99df:	e8 8c 8e ff ff       	call   2870 <strcspn@plt>
    99e4:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    99e8:	48 01 d0             	add    rax,rdx
    99eb:	c6 00 00             	mov    BYTE PTR [rax],0x0
    99ee:	90                   	nop
    99ef:	c9                   	leave  
    99f0:	c3                   	ret    

00000000000099f1 <void_rule>:
    99f1:	f3 0f 1e fa          	endbr64 
    99f5:	55                   	push   rbp
    99f6:	48 89 e5             	mov    rbp,rsp
    99f9:	48 83 ec 10          	sub    rsp,0x10
    99fd:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9a01:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9a05:	48 05 6e 03 00 00    	add    rax,0x36e
    9a0b:	ba 0a 00 00 00       	mov    edx,0xa
    9a10:	be 00 00 00 00       	mov    esi,0x0
    9a15:	48 89 c7             	mov    rdi,rax
    9a18:	e8 c3 8a ff ff       	call   24e0 <memset@plt>
    9a1d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9a21:	48 05 68 03 00 00    	add    rax,0x368
    9a27:	ba 06 00 00 00       	mov    edx,0x6
    9a2c:	be 00 00 00 00       	mov    esi,0x0
    9a31:	48 89 c7             	mov    rdi,rax
    9a34:	e8 a7 8a ff ff       	call   24e0 <memset@plt>
    9a39:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9a3d:	48 05 50 03 00 00    	add    rax,0x350
    9a43:	ba 18 00 00 00       	mov    edx,0x18
    9a48:	be 00 00 00 00       	mov    esi,0x0
    9a4d:	48 89 c7             	mov    rdi,rax
    9a50:	e8 8b 8a ff ff       	call   24e0 <memset@plt>
    9a55:	90                   	nop
    9a56:	c9                   	leave  
    9a57:	c3                   	ret    

0000000000009a58 <line_parser>:
    9a58:	f3 0f 1e fa          	endbr64 
    9a5c:	55                   	push   rbp
    9a5d:	48 89 e5             	mov    rbp,rsp
    9a60:	53                   	push   rbx
    9a61:	48 81 ec 98 00 00 00 	sub    rsp,0x98
    9a68:	48 89 bd 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rdi
    9a6f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9a76:	00 00 
    9a78:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    9a7c:	31 c0                	xor    eax,eax
    9a7e:	8b 05 90 75 00 00    	mov    eax,DWORD PTR [rip+0x7590]        # 11014 <num_rules>
    9a84:	83 c0 01             	add    eax,0x1
    9a87:	89 05 87 75 00 00    	mov    DWORD PTR [rip+0x7587],eax        # 11014 <num_rules>
    9a8d:	8b 05 81 75 00 00    	mov    eax,DWORD PTR [rip+0x7581]        # 11014 <num_rules>
    9a93:	48 98                	cdqe   
    9a95:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    9a9c:	48 8d 15 3d 78 00 00 	lea    rdx,[rip+0x783d]        # 112e0 <rules>
    9aa3:	48 01 d0             	add    rax,rdx
    9aa6:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    9aaa:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9aae:	ba 08 00 00 00       	mov    edx,0x8
    9ab3:	be 00 00 00 00       	mov    esi,0x0
    9ab8:	48 89 c7             	mov    rdi,rax
    9abb:	e8 20 8a ff ff       	call   24e0 <memset@plt>
    9ac0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9ac4:	c7 80 44 01 00 00 ff 	mov    DWORD PTR [rax+0x144],0xffffffff
    9acb:	ff ff ff 
    9ace:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9ad2:	c7 80 40 01 00 00 ff 	mov    DWORD PTR [rax+0x140],0xffffffff
    9ad9:	ff ff ff 
    9adc:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9ae0:	c7 40 1c ff ff ff ff 	mov    DWORD PTR [rax+0x1c],0xffffffff
    9ae7:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9aeb:	c7 40 18 ff ff ff ff 	mov    DWORD PTR [rax+0x18],0xffffffff
    9af2:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9af6:	c7 40 10 ff ff ff ff 	mov    DWORD PTR [rax+0x10],0xffffffff
    9afd:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9b01:	c7 80 4c 03 00 00 00 	mov    DWORD PTR [rax+0x34c],0x0
    9b08:	00 00 00 
    9b0b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9b0f:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
    9b15:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9b19:	c7 40 04 00 00 00 00 	mov    DWORD PTR [rax+0x4],0x0
    9b20:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9b24:	48 89 c7             	mov    rdi,rax
    9b27:	e8 c5 fe ff ff       	call   99f1 <void_rule>
    9b2c:	c7 45 88 00 00 00 00 	mov    DWORD PTR [rbp-0x78],0x0
    9b33:	c6 85 7c ff ff ff 00 	mov    BYTE PTR [rbp-0x84],0x0
    9b3a:	c7 45 80 00 00 00 00 	mov    DWORD PTR [rbp-0x80],0x0
    9b41:	c7 45 84 00 00 00 00 	mov    DWORD PTR [rbp-0x7c],0x0
    9b48:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9b4f:	48 89 c7             	mov    rdi,rax
    9b52:	e8 f9 8a ff ff       	call   2650 <strlen@plt>
    9b57:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    9b5a:	c6 85 7d ff ff ff 00 	mov    BYTE PTR [rbp-0x83],0x0
    9b61:	c6 85 7e ff ff ff 00 	mov    BYTE PTR [rbp-0x82],0x0
    9b68:	c6 85 7f ff ff ff 00 	mov    BYTE PTR [rbp-0x81],0x0
    9b6f:	e9 c4 0d 00 00       	jmp    a938 <line_parser+0xee0>
    9b74:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9b77:	48 63 d0             	movsxd rdx,eax
    9b7a:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9b81:	48 01 d0             	add    rax,rdx
    9b84:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9b87:	0f be c0             	movsx  eax,al
    9b8a:	89 c7                	mov    edi,eax
    9b8c:	e8 58 fa ff ff       	call   95e9 <delimit>
    9b91:	83 f0 01             	xor    eax,0x1
    9b94:	84 c0                	test   al,al
    9b96:	74 04                	je     9b9c <line_parser+0x144>
    9b98:	83 45 84 01          	add    DWORD PTR [rbp-0x7c],0x1
    9b9c:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9b9f:	48 63 d0             	movsxd rdx,eax
    9ba2:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9ba9:	48 01 d0             	add    rax,rdx
    9bac:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9baf:	0f be c0             	movsx  eax,al
    9bb2:	89 c7                	mov    edi,eax
    9bb4:	e8 30 fa ff ff       	call   95e9 <delimit>
    9bb9:	84 c0                	test   al,al
    9bbb:	74 3f                	je     9bfc <line_parser+0x1a4>
    9bbd:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9bc0:	3b 45 80             	cmp    eax,DWORD PTR [rbp-0x80]
    9bc3:	75 37                	jne    9bfc <line_parser+0x1a4>
    9bc5:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9bc8:	48 63 d0             	movsxd rdx,eax
    9bcb:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9bd2:	48 01 d0             	add    rax,rdx
    9bd5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9bd8:	3c 3a                	cmp    al,0x3a
    9bda:	75 11                	jne    9bed <line_parser+0x195>
    9bdc:	48 8d 3d f7 3e 00 00 	lea    rdi,[rip+0x3ef7]        # dada <_IO_stdin_used+0x1ada>
    9be3:	b8 00 00 00 00       	mov    eax,0x0
    9be8:	e8 e3 88 ff ff       	call   24d0 <printf@plt>
    9bed:	83 45 84 01          	add    DWORD PTR [rbp-0x7c],0x1
    9bf1:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9bf4:	89 45 80             	mov    DWORD PTR [rbp-0x80],eax
    9bf7:	e9 3c 0d 00 00       	jmp    a938 <line_parser+0xee0>
    9bfc:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9bff:	48 63 d0             	movsxd rdx,eax
    9c02:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9c09:	48 01 d0             	add    rax,rdx
    9c0c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9c0f:	0f be c0             	movsx  eax,al
    9c12:	89 c7                	mov    edi,eax
    9c14:	e8 d0 f9 ff ff       	call   95e9 <delimit>
    9c19:	84 c0                	test   al,al
    9c1b:	74 08                	je     9c25 <line_parser+0x1cd>
    9c1d:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
    9c20:	3b 45 84             	cmp    eax,DWORD PTR [rbp-0x7c]
    9c23:	75 18                	jne    9c3d <line_parser+0x1e5>
    9c25:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9c28:	3b 45 8c             	cmp    eax,DWORD PTR [rbp-0x74]
    9c2b:	0f 85 07 0d 00 00    	jne    a938 <line_parser+0xee0>
    9c31:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
    9c34:	3b 45 84             	cmp    eax,DWORD PTR [rbp-0x7c]
    9c37:	0f 84 fb 0c 00 00    	je     a938 <line_parser+0xee0>
    9c3d:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9c40:	8d 50 ff             	lea    edx,[rax-0x1]
    9c43:	8b 4d 80             	mov    ecx,DWORD PTR [rbp-0x80]
    9c46:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9c4d:	89 ce                	mov    esi,ecx
    9c4f:	48 89 c7             	mov    rdi,rax
    9c52:	e8 12 f9 ff ff       	call   9569 <substr>
    9c57:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    9c5b:	0f b6 85 7c ff ff ff 	movzx  eax,BYTE PTR [rbp-0x84]
    9c62:	83 f0 01             	xor    eax,0x1
    9c65:	84 c0                	test   al,al
    9c67:	0f 84 ea 02 00 00    	je     9f57 <line_parser+0x4ff>
    9c6d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9c71:	48 8d 35 71 3e 00 00 	lea    rsi,[rip+0x3e71]        # dae9 <_IO_stdin_used+0x1ae9>
    9c78:	48 89 c7             	mov    rdi,rax
    9c7b:	e8 50 8b ff ff       	call   27d0 <strcmp@plt>
    9c80:	85 c0                	test   eax,eax
    9c82:	75 33                	jne    9cb7 <line_parser+0x25f>
    9c84:	0f b6 85 7d ff ff ff 	movzx  eax,BYTE PTR [rbp-0x83]
    9c8b:	83 f0 01             	xor    eax,0x1
    9c8e:	84 c0                	test   al,al
    9c90:	74 25                	je     9cb7 <line_parser+0x25f>
    9c92:	0f b6 85 7e ff ff ff 	movzx  eax,BYTE PTR [rbp-0x82]
    9c99:	83 f0 01             	xor    eax,0x1
    9c9c:	84 c0                	test   al,al
    9c9e:	74 17                	je     9cb7 <line_parser+0x25f>
    9ca0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9ca4:	48 8d 15 df b7 ff ff 	lea    rdx,[rip+0xffffffffffffb7df]        # 548a <stdout_alert>
    9cab:	48 89 90 80 03 00 00 	mov    QWORD PTR [rax+0x380],rdx
    9cb2:	e9 5d 0c 00 00       	jmp    a914 <line_parser+0xebc>
    9cb7:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9cbb:	48 8d 35 de 3d 00 00 	lea    rsi,[rip+0x3dde]        # daa0 <_IO_stdin_used+0x1aa0>
    9cc2:	48 89 c7             	mov    rdi,rax
    9cc5:	e8 06 8b ff ff       	call   27d0 <strcmp@plt>
    9cca:	85 c0                	test   eax,eax
    9ccc:	74 45                	je     9d13 <line_parser+0x2bb>
    9cce:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9cd2:	48 8d 35 c3 3d 00 00 	lea    rsi,[rip+0x3dc3]        # da9c <_IO_stdin_used+0x1a9c>
    9cd9:	48 89 c7             	mov    rdi,rax
    9cdc:	e8 ef 8a ff ff       	call   27d0 <strcmp@plt>
    9ce1:	85 c0                	test   eax,eax
    9ce3:	74 2e                	je     9d13 <line_parser+0x2bb>
    9ce5:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9ce9:	48 8d 35 b5 3d 00 00 	lea    rsi,[rip+0x3db5]        # daa5 <_IO_stdin_used+0x1aa5>
    9cf0:	48 89 c7             	mov    rdi,rax
    9cf3:	e8 d8 8a ff ff       	call   27d0 <strcmp@plt>
    9cf8:	85 c0                	test   eax,eax
    9cfa:	74 17                	je     9d13 <line_parser+0x2bb>
    9cfc:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9d00:	48 8d 35 a2 3d 00 00 	lea    rsi,[rip+0x3da2]        # daa9 <_IO_stdin_used+0x1aa9>
    9d07:	48 89 c7             	mov    rdi,rax
    9d0a:	e8 c1 8a ff ff       	call   27d0 <strcmp@plt>
    9d0f:	85 c0                	test   eax,eax
    9d11:	75 34                	jne    9d47 <line_parser+0x2ef>
    9d13:	0f b6 85 7e ff ff ff 	movzx  eax,BYTE PTR [rbp-0x82]
    9d1a:	83 f0 01             	xor    eax,0x1
    9d1d:	84 c0                	test   al,al
    9d1f:	74 26                	je     9d47 <line_parser+0x2ef>
    9d21:	0f b6 85 7d ff ff ff 	movzx  eax,BYTE PTR [rbp-0x83]
    9d28:	83 f0 01             	xor    eax,0x1
    9d2b:	84 c0                	test   al,al
    9d2d:	74 18                	je     9d47 <line_parser+0x2ef>
    9d2f:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9d33:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9d37:	48 89 d6             	mov    rsi,rdx
    9d3a:	48 89 c7             	mov    rdi,rax
    9d3d:	e8 ae fa ff ff       	call   97f0 <assign_protocol>
    9d42:	e9 cd 0b 00 00       	jmp    a914 <line_parser+0xebc>
    9d47:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9d4b:	48 89 c7             	mov    rdi,rax
    9d4e:	e8 ac f8 ff ff       	call   95ff <isdigit>
    9d53:	84 c0                	test   al,al
    9d55:	75 17                	jne    9d6e <line_parser+0x316>
    9d57:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9d5b:	48 8d 35 36 3d 00 00 	lea    rsi,[rip+0x3d36]        # da98 <_IO_stdin_used+0x1a98>
    9d62:	48 89 c7             	mov    rdi,rax
    9d65:	e8 66 8a ff ff       	call   27d0 <strcmp@plt>
    9d6a:	85 c0                	test   eax,eax
    9d6c:	75 34                	jne    9da2 <line_parser+0x34a>
    9d6e:	0f b6 85 7d ff ff ff 	movzx  eax,BYTE PTR [rbp-0x83]
    9d75:	83 f0 01             	xor    eax,0x1
    9d78:	84 c0                	test   al,al
    9d7a:	74 26                	je     9da2 <line_parser+0x34a>
    9d7c:	0f b6 85 7e ff ff ff 	movzx  eax,BYTE PTR [rbp-0x82]
    9d83:	83 f0 01             	xor    eax,0x1
    9d86:	84 c0                	test   al,al
    9d88:	74 18                	je     9da2 <line_parser+0x34a>
    9d8a:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9d8e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9d92:	48 89 d6             	mov    rsi,rdx
    9d95:	48 89 c7             	mov    rdi,rax
    9d98:	e8 9c f9 ff ff       	call   9739 <assign_port_number>
    9d9d:	e9 72 0b 00 00       	jmp    a914 <line_parser+0xebc>
    9da2:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9da6:	ba 08 00 00 00       	mov    edx,0x8
    9dab:	48 8d 35 3d 3d 00 00 	lea    rsi,[rip+0x3d3d]        # daef <_IO_stdin_used+0x1aef>
    9db2:	48 89 c7             	mov    rdi,rax
    9db5:	e8 e6 87 ff ff       	call   25a0 <strncmp@plt>
    9dba:	85 c0                	test   eax,eax
    9dbc:	75 75                	jne    9e33 <line_parser+0x3db>
    9dbe:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9dc2:	48 8d 50 09          	lea    rdx,[rax+0x9]
    9dc6:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9dca:	48 89 d6             	mov    rsi,rdx
    9dcd:	48 89 c7             	mov    rdi,rax
    9dd0:	e8 2b 8a ff ff       	call   2800 <strcpy@plt>
    9dd5:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9dd9:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    9ddc:	85 c0                	test   eax,eax
    9dde:	75 2e                	jne    9e0e <line_parser+0x3b6>
    9de0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9de4:	8b 00                	mov    eax,DWORD PTR [rax]
    9de6:	85 c0                	test   eax,eax
    9de8:	75 24                	jne    9e0e <line_parser+0x3b6>
    9dea:	8b 15 d4 01 10 00    	mov    edx,DWORD PTR [rip+0x1001d4]        # 109fc4 <homenet>
    9df0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9df4:	89 10                	mov    DWORD PTR [rax],edx
    9df6:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9dfa:	48 89 c7             	mov    rdi,rax
    9dfd:	e8 9b f9 ff ff       	call   979d <check_port_number>
    9e02:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9e06:	89 42 0c             	mov    DWORD PTR [rdx+0xc],eax
    9e09:	e9 06 0b 00 00       	jmp    a914 <line_parser+0xebc>
    9e0e:	8b 15 b0 01 10 00    	mov    edx,DWORD PTR [rip+0x1001b0]        # 109fc4 <homenet>
    9e14:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9e18:	89 50 04             	mov    DWORD PTR [rax+0x4],edx
    9e1b:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9e1f:	48 89 c7             	mov    rdi,rax
    9e22:	e8 76 f9 ff ff       	call   979d <check_port_number>
    9e27:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9e2b:	89 42 08             	mov    DWORD PTR [rdx+0x8],eax
    9e2e:	e9 e1 0a 00 00       	jmp    a914 <line_parser+0xebc>
    9e33:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9e37:	48 8d 35 ba 3c 00 00 	lea    rsi,[rip+0x3cba]        # daf8 <_IO_stdin_used+0x1af8>
    9e3e:	48 89 c7             	mov    rdi,rax
    9e41:	e8 8a 89 ff ff       	call   27d0 <strcmp@plt>
    9e46:	85 c0                	test   eax,eax
    9e48:	75 30                	jne    9e7a <line_parser+0x422>
    9e4a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9e4e:	8b 10                	mov    edx,DWORD PTR [rax]
    9e50:	8b 05 6e 01 10 00    	mov    eax,DWORD PTR [rip+0x10016e]        # 109fc4 <homenet>
    9e56:	39 c2                	cmp    edx,eax
    9e58:	75 10                	jne    9e6a <line_parser+0x412>
    9e5a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9e5e:	c7 40 10 45 00 00 00 	mov    DWORD PTR [rax+0x10],0x45
    9e65:	e9 aa 0a 00 00       	jmp    a914 <line_parser+0xebc>
    9e6a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9e6e:	c7 40 10 46 00 00 00 	mov    DWORD PTR [rax+0x10],0x46
    9e75:	e9 9a 0a 00 00       	jmp    a914 <line_parser+0xebc>
    9e7a:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9e7e:	48 8d 35 76 3c 00 00 	lea    rsi,[rip+0x3c76]        # dafb <_IO_stdin_used+0x1afb>
    9e85:	48 89 c7             	mov    rdi,rax
    9e88:	e8 43 89 ff ff       	call   27d0 <strcmp@plt>
    9e8d:	85 c0                	test   eax,eax
    9e8f:	75 10                	jne    9ea1 <line_parser+0x449>
    9e91:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9e95:	c7 40 10 47 00 00 00 	mov    DWORD PTR [rax+0x10],0x47
    9e9c:	e9 73 0a 00 00       	jmp    a914 <line_parser+0xebc>
    9ea1:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9ea5:	ba 0c 00 00 00       	mov    edx,0xc
    9eaa:	48 8d 35 4d 3c 00 00 	lea    rsi,[rip+0x3c4d]        # dafe <_IO_stdin_used+0x1afe>
    9eb1:	48 89 c7             	mov    rdi,rax
    9eb4:	e8 e7 86 ff ff       	call   25a0 <strncmp@plt>
    9eb9:	85 c0                	test   eax,eax
    9ebb:	75 7f                	jne    9f3c <line_parser+0x4e4>
    9ebd:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9ec1:	48 8d 50 0c          	lea    rdx,[rax+0xc]
    9ec5:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9ec9:	48 89 d6             	mov    rsi,rdx
    9ecc:	48 89 c7             	mov    rdi,rax
    9ecf:	e8 2c 89 ff ff       	call   2800 <strcpy@plt>
    9ed4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9ed8:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    9edb:	85 c0                	test   eax,eax
    9edd:	75 37                	jne    9f16 <line_parser+0x4be>
    9edf:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9ee3:	8b 10                	mov    edx,DWORD PTR [rax]
    9ee5:	8b 05 d9 00 10 00    	mov    eax,DWORD PTR [rip+0x1000d9]        # 109fc4 <homenet>
    9eeb:	39 c2                	cmp    edx,eax
    9eed:	75 27                	jne    9f16 <line_parser+0x4be>
    9eef:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9ef3:	c7 40 04 ff ff ff ff 	mov    DWORD PTR [rax+0x4],0xffffffff
    9efa:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9efe:	48 83 c0 01          	add    rax,0x1
    9f02:	48 89 c7             	mov    rdi,rax
    9f05:	e8 93 f8 ff ff       	call   979d <check_port_number>
    9f0a:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9f0e:	89 42 08             	mov    DWORD PTR [rdx+0x8],eax
    9f11:	e9 fe 09 00 00       	jmp    a914 <line_parser+0xebc>
    9f16:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9f1a:	c7 00 ff ff ff ff    	mov    DWORD PTR [rax],0xffffffff
    9f20:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9f24:	48 83 c0 01          	add    rax,0x1
    9f28:	48 89 c7             	mov    rdi,rax
    9f2b:	e8 6d f8 ff ff       	call   979d <check_port_number>
    9f30:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9f34:	89 42 0c             	mov    DWORD PTR [rdx+0xc],eax
    9f37:	e9 d8 09 00 00       	jmp    a914 <line_parser+0xebc>
    9f3c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9f40:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9f43:	3c 28                	cmp    al,0x28
    9f45:	0f 85 c9 09 00 00    	jne    a914 <line_parser+0xebc>
    9f4b:	c6 85 7c ff ff ff 01 	mov    BYTE PTR [rbp-0x84],0x1
    9f52:	e9 e1 09 00 00       	jmp    a938 <line_parser+0xee0>
    9f57:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9f5b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9f5e:	3c 28                	cmp    al,0x28
    9f60:	75 0e                	jne    9f70 <line_parser+0x518>
    9f62:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9f66:	48 83 c0 01          	add    rax,0x1
    9f6a:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    9f6e:	eb 08                	jmp    9f78 <line_parser+0x520>
    9f70:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9f74:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    9f78:	80 bd 7d ff ff ff 00 	cmp    BYTE PTR [rbp-0x83],0x0
    9f7f:	0f 84 8e 00 00 00    	je     a013 <line_parser+0x5bb>
    9f85:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9f89:	48 89 c7             	mov    rdi,rax
    9f8c:	e8 bf 86 ff ff       	call   2650 <strlen@plt>
    9f91:	48 8d 50 ff          	lea    rdx,[rax-0x1]
    9f95:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9f99:	48 01 d0             	add    rax,rdx
    9f9c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9f9f:	3c 3b                	cmp    al,0x3b
    9fa1:	75 36                	jne    9fd9 <line_parser+0x581>
    9fa3:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9fa7:	48 89 c7             	mov    rdi,rax
    9faa:	e8 a1 86 ff ff       	call   2650 <strlen@plt>
    9faf:	48 8d 50 fe          	lea    rdx,[rax-0x2]
    9fb3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9fb7:	48 8d 88 50 01 00 00 	lea    rcx,[rax+0x150]
    9fbe:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9fc2:	48 89 c6             	mov    rsi,rax
    9fc5:	48 89 cf             	mov    rdi,rcx
    9fc8:	e8 53 85 ff ff       	call   2520 <strncat@plt>
    9fcd:	c6 85 7d ff ff ff 00 	mov    BYTE PTR [rbp-0x83],0x0
    9fd4:	e9 5f 09 00 00       	jmp    a938 <line_parser+0xee0>
    9fd9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9fdd:	48 8d 90 50 01 00 00 	lea    rdx,[rax+0x150]
    9fe4:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9fe8:	48 89 c6             	mov    rsi,rax
    9feb:	48 89 d7             	mov    rdi,rdx
    9fee:	e8 0d 87 ff ff       	call   2700 <strcat@plt>
    9ff3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9ff7:	48 8d 98 50 01 00 00 	lea    rbx,[rax+0x150]
    9ffe:	48 89 df             	mov    rdi,rbx
    a001:	e8 4a 86 ff ff       	call   2650 <strlen@plt>
    a006:	48 01 d8             	add    rax,rbx
    a009:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    a00e:	e9 01 09 00 00       	jmp    a914 <line_parser+0xebc>
    a013:	80 bd 7e ff ff ff 00 	cmp    BYTE PTR [rbp-0x82],0x0
    a01a:	74 7f                	je     a09b <line_parser+0x643>
    a01c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a020:	48 8d 35 e4 3a 00 00 	lea    rsi,[rip+0x3ae4]        # db0b <_IO_stdin_used+0x1b0b>
    a027:	48 89 c7             	mov    rdi,rax
    a02a:	e8 c1 86 ff ff       	call   26f0 <strstr@plt>
    a02f:	48 85 c0             	test   rax,rax
    a032:	74 33                	je     a067 <line_parser+0x60f>
    a034:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a038:	48 89 c7             	mov    rdi,rax
    a03b:	e8 10 86 ff ff       	call   2650 <strlen@plt>
    a040:	48 8d 50 fd          	lea    rdx,[rax-0x3]
    a044:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a048:	48 8d 48 40          	lea    rcx,[rax+0x40]
    a04c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a050:	48 89 c6             	mov    rsi,rax
    a053:	48 89 cf             	mov    rdi,rcx
    a056:	e8 c5 84 ff ff       	call   2520 <strncat@plt>
    a05b:	c6 85 7e ff ff ff 00 	mov    BYTE PTR [rbp-0x82],0x0
    a062:	e9 d1 08 00 00       	jmp    a938 <line_parser+0xee0>
    a067:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a06b:	48 8d 50 40          	lea    rdx,[rax+0x40]
    a06f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a073:	48 89 c6             	mov    rsi,rax
    a076:	48 89 d7             	mov    rdi,rdx
    a079:	e8 82 86 ff ff       	call   2700 <strcat@plt>
    a07e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a082:	48 8d 58 40          	lea    rbx,[rax+0x40]
    a086:	48 89 df             	mov    rdi,rbx
    a089:	e8 c2 85 ff ff       	call   2650 <strlen@plt>
    a08e:	48 01 d8             	add    rax,rbx
    a091:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    a096:	e9 79 08 00 00       	jmp    a914 <line_parser+0xebc>
    a09b:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a09f:	ba 06 00 00 00       	mov    edx,0x6
    a0a4:	48 8d 35 63 3a 00 00 	lea    rsi,[rip+0x3a63]        # db0e <_IO_stdin_used+0x1b0e>
    a0ab:	48 89 c7             	mov    rdi,rax
    a0ae:	e8 ed 84 ff ff       	call   25a0 <strncmp@plt>
    a0b3:	85 c0                	test   eax,eax
    a0b5:	75 37                	jne    a0ee <line_parser+0x696>
    a0b7:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a0bb:	48 89 c7             	mov    rdi,rax
    a0be:	e8 8d 85 ff ff       	call   2650 <strlen@plt>
    a0c3:	48 8d 50 f8          	lea    rdx,[rax-0x8]
    a0c7:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a0cb:	48 8d 48 06          	lea    rcx,[rax+0x6]
    a0cf:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a0d3:	48 83 c0 20          	add    rax,0x20
    a0d7:	48 89 ce             	mov    rsi,rcx
    a0da:	48 89 c7             	mov    rdi,rax
    a0dd:	e8 6e 87 ff ff       	call   2850 <strncpy@plt>
    a0e2:	c6 85 7f ff ff ff 01 	mov    BYTE PTR [rbp-0x81],0x1
    a0e9:	e9 26 08 00 00       	jmp    a914 <line_parser+0xebc>
    a0ee:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a0f2:	ba 05 00 00 00       	mov    edx,0x5
    a0f7:	48 8d 35 17 3a 00 00 	lea    rsi,[rip+0x3a17]        # db15 <_IO_stdin_used+0x1b15>
    a0fe:	48 89 c7             	mov    rdi,rax
    a101:	e8 9a 84 ff ff       	call   25a0 <strncmp@plt>
    a106:	85 c0                	test   eax,eax
    a108:	75 4d                	jne    a157 <line_parser+0x6ff>
    a10a:	c6 85 7d ff ff ff 01 	mov    BYTE PTR [rbp-0x83],0x1
    a111:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a115:	48 83 c0 05          	add    rax,0x5
    a119:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    a11d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a121:	48 8d 90 50 01 00 00 	lea    rdx,[rax+0x150]
    a128:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    a12c:	48 89 c6             	mov    rsi,rax
    a12f:	48 89 d7             	mov    rdi,rdx
    a132:	e8 c9 85 ff ff       	call   2700 <strcat@plt>
    a137:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a13b:	48 8d 98 50 01 00 00 	lea    rbx,[rax+0x150]
    a142:	48 89 df             	mov    rdi,rbx
    a145:	e8 06 85 ff ff       	call   2650 <strlen@plt>
    a14a:	48 01 d8             	add    rax,rbx
    a14d:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    a152:	e9 bd 07 00 00       	jmp    a914 <line_parser+0xebc>
    a157:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a15b:	ba 06 00 00 00       	mov    edx,0x6
    a160:	48 8d 35 b4 39 00 00 	lea    rsi,[rip+0x39b4]        # db1b <_IO_stdin_used+0x1b1b>
    a167:	48 89 c7             	mov    rdi,rax
    a16a:	e8 31 84 ff ff       	call   25a0 <strncmp@plt>
    a16f:	85 c0                	test   eax,eax
    a171:	75 31                	jne    a1a4 <line_parser+0x74c>
    a173:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a177:	48 89 c7             	mov    rdi,rax
    a17a:	e8 42 f8 ff ff       	call   99c1 <sc_strip>
    a17f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a183:	48 83 c0 06          	add    rax,0x6
    a187:	48 89 c7             	mov    rdi,rax
    a18a:	e8 b1 85 ff ff       	call   2740 <atoi@plt>
    a18f:	89 45 ac             	mov    DWORD PTR [rbp-0x54],eax
    a192:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a196:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    a199:	89 90 4c 03 00 00    	mov    DWORD PTR [rax+0x34c],edx
    a19f:	e9 70 07 00 00       	jmp    a914 <line_parser+0xebc>
    a1a4:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a1a8:	ba 05 00 00 00       	mov    edx,0x5
    a1ad:	48 8d 35 6e 39 00 00 	lea    rsi,[rip+0x396e]        # db22 <_IO_stdin_used+0x1b22>
    a1b4:	48 89 c7             	mov    rdi,rax
    a1b7:	e8 e4 83 ff ff       	call   25a0 <strncmp@plt>
    a1bc:	85 c0                	test   eax,eax
    a1be:	75 3f                	jne    a1ff <line_parser+0x7a7>
    a1c0:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a1c4:	48 89 c7             	mov    rdi,rax
    a1c7:	e8 84 84 ff ff       	call   2650 <strlen@plt>
    a1cc:	48 8d 50 fa          	lea    rdx,[rax-0x6]
    a1d0:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a1d4:	48 8d 48 05          	lea    rcx,[rax+0x5]
    a1d8:	48 8d 45 de          	lea    rax,[rbp-0x22]
    a1dc:	48 89 ce             	mov    rsi,rcx
    a1df:	48 89 c7             	mov    rdi,rax
    a1e2:	e8 69 86 ff ff       	call   2850 <strncpy@plt>
    a1e7:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    a1eb:	48 8d 45 de          	lea    rax,[rbp-0x22]
    a1ef:	48 89 d6             	mov    rsi,rdx
    a1f2:	48 89 c7             	mov    rdi,rax
    a1f5:	e8 a7 f6 ff ff       	call   98a1 <get_ruletype>
    a1fa:	e9 15 07 00 00       	jmp    a914 <line_parser+0xebc>
    a1ff:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a203:	ba 08 00 00 00       	mov    edx,0x8
    a208:	48 8d 35 19 39 00 00 	lea    rsi,[rip+0x3919]        # db28 <_IO_stdin_used+0x1b28>
    a20f:	48 89 c7             	mov    rdi,rax
    a212:	e8 89 83 ff ff       	call   25a0 <strncmp@plt>
    a217:	85 c0                	test   eax,eax
    a219:	0f 85 8f 00 00 00    	jne    a2ae <line_parser+0x856>
    a21f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a223:	48 83 c0 08          	add    rax,0x8
    a227:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    a22b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a22f:	48 8d 35 d5 38 00 00 	lea    rsi,[rip+0x38d5]        # db0b <_IO_stdin_used+0x1b0b>
    a236:	48 89 c7             	mov    rdi,rax
    a239:	e8 b2 84 ff ff       	call   26f0 <strstr@plt>
    a23e:	48 85 c0             	test   rax,rax
    a241:	74 30                	je     a273 <line_parser+0x81b>
    a243:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a247:	48 89 c7             	mov    rdi,rax
    a24a:	e8 01 84 ff ff       	call   2650 <strlen@plt>
    a24f:	48 8d 50 f5          	lea    rdx,[rax-0xb]
    a253:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a257:	48 8d 48 08          	lea    rcx,[rax+0x8]
    a25b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a25f:	48 83 c0 40          	add    rax,0x40
    a263:	48 89 ce             	mov    rsi,rcx
    a266:	48 89 c7             	mov    rdi,rax
    a269:	e8 e2 85 ff ff       	call   2850 <strncpy@plt>
    a26e:	e9 a1 06 00 00       	jmp    a914 <line_parser+0xebc>
    a273:	c6 85 7e ff ff ff 01 	mov    BYTE PTR [rbp-0x82],0x1
    a27a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a27e:	48 8d 50 40          	lea    rdx,[rax+0x40]
    a282:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a286:	48 89 c6             	mov    rsi,rax
    a289:	48 89 d7             	mov    rdi,rdx
    a28c:	e8 6f 84 ff ff       	call   2700 <strcat@plt>
    a291:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a295:	48 8d 58 40          	lea    rbx,[rax+0x40]
    a299:	48 89 df             	mov    rdi,rbx
    a29c:	e8 af 83 ff ff       	call   2650 <strlen@plt>
    a2a1:	48 01 d8             	add    rax,rbx
    a2a4:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    a2a9:	e9 66 06 00 00       	jmp    a914 <line_parser+0xebc>
    a2ae:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a2b2:	ba 04 00 00 00       	mov    edx,0x4
    a2b7:	48 8d 35 73 38 00 00 	lea    rsi,[rip+0x3873]        # db31 <_IO_stdin_used+0x1b31>
    a2be:	48 89 c7             	mov    rdi,rax
    a2c1:	e8 da 82 ff ff       	call   25a0 <strncmp@plt>
    a2c6:	85 c0                	test   eax,eax
    a2c8:	0f 85 8e 00 00 00    	jne    a35c <line_parser+0x904>
    a2ce:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a2d2:	48 8d 35 ff 37 00 00 	lea    rsi,[rip+0x37ff]        # dad8 <_IO_stdin_used+0x1ad8>
    a2d9:	48 89 c7             	mov    rdi,rax
    a2dc:	e8 8f 85 ff ff       	call   2870 <strcspn@plt>
    a2e1:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
    a2e5:	48 01 d0             	add    rax,rdx
    a2e8:	c6 00 00             	mov    BYTE PTR [rax],0x0
    a2eb:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a2ef:	48 83 c0 04          	add    rax,0x4
    a2f3:	48 89 c7             	mov    rdi,rax
    a2f6:	e8 04 f3 ff ff       	call   95ff <isdigit>
    a2fb:	84 c0                	test   al,al
    a2fd:	74 47                	je     a346 <line_parser+0x8ee>
    a2ff:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a303:	48 83 c0 04          	add    rax,0x4
    a307:	48 89 c7             	mov    rdi,rax
    a30a:	e8 31 84 ff ff       	call   2740 <atoi@plt>
    a30f:	89 45 a8             	mov    DWORD PTR [rbp-0x58],eax
    a312:	83 7d a8 00          	cmp    DWORD PTR [rbp-0x58],0x0
    a316:	7e 18                	jle    a330 <line_parser+0x8d8>
    a318:	83 7d a8 0a          	cmp    DWORD PTR [rbp-0x58],0xa
    a31c:	7f 12                	jg     a330 <line_parser+0x8d8>
    a31e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a322:	8b 55 a8             	mov    edx,DWORD PTR [rbp-0x58]
    a325:	89 90 4c 01 00 00    	mov    DWORD PTR [rax+0x14c],edx
    a32b:	e9 e4 05 00 00       	jmp    a914 <line_parser+0xebc>
    a330:	48 8d 3d 01 38 00 00 	lea    rdi,[rip+0x3801]        # db38 <_IO_stdin_used+0x1b38>
    a337:	e8 f4 81 ff ff       	call   2530 <puts@plt>
    a33c:	bf ff ff ff ff       	mov    edi,0xffffffff
    a341:	e8 0a 82 ff ff       	call   2550 <exit@plt>
    a346:	48 8d 3d 13 38 00 00 	lea    rdi,[rip+0x3813]        # db60 <_IO_stdin_used+0x1b60>
    a34d:	e8 de 81 ff ff       	call   2530 <puts@plt>
    a352:	bf ff ff ff ff       	mov    edi,0xffffffff
    a357:	e8 f4 81 ff ff       	call   2550 <exit@plt>
    a35c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a360:	ba 06 00 00 00       	mov    edx,0x6
    a365:	48 8d 35 1c 38 00 00 	lea    rsi,[rip+0x381c]        # db88 <_IO_stdin_used+0x1b88>
    a36c:	48 89 c7             	mov    rdi,rax
    a36f:	e8 2c 82 ff ff       	call   25a0 <strncmp@plt>
    a374:	85 c0                	test   eax,eax
    a376:	0f 85 9b 00 00 00    	jne    a417 <line_parser+0x9bf>
    a37c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a380:	48 89 c7             	mov    rdi,rax
    a383:	e8 39 f6 ff ff       	call   99c1 <sc_strip>
    a388:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a38c:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a392:	3d 80 00 00 00       	cmp    eax,0x80
    a397:	75 58                	jne    a3f1 <line_parser+0x999>
    a399:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a39d:	48 83 c0 06          	add    rax,0x6
    a3a1:	ba ff 00 00 00       	mov    edx,0xff
    a3a6:	be 00 00 00 00       	mov    esi,0x0
    a3ab:	48 89 c7             	mov    rdi,rax
    a3ae:	e8 b9 f5 ff ff       	call   996c <numeric_check>
    a3b3:	89 45 a4             	mov    DWORD PTR [rbp-0x5c],eax
    a3b6:	83 7d a4 ff          	cmp    DWORD PTR [rbp-0x5c],0xffffffff
    a3ba:	75 16                	jne    a3d2 <line_parser+0x97a>
    a3bc:	48 8d 3d cc 37 00 00 	lea    rdi,[rip+0x37cc]        # db8f <_IO_stdin_used+0x1b8f>
    a3c3:	e8 68 81 ff ff       	call   2530 <puts@plt>
    a3c8:	bf ff ff ff ff       	mov    edi,0xffffffff
    a3cd:	e8 7e 81 ff ff       	call   2550 <exit@plt>
    a3d2:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
    a3d5:	89 c2                	mov    edx,eax
    a3d7:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a3db:	88 90 72 03 00 00    	mov    BYTE PTR [rax+0x372],dl
    a3e1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a3e5:	c6 80 6e 03 00 00 01 	mov    BYTE PTR [rax+0x36e],0x1
    a3ec:	e9 23 05 00 00       	jmp    a914 <line_parser+0xebc>
    a3f1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a3f5:	48 83 c0 20          	add    rax,0x20
    a3f9:	48 89 c6             	mov    rsi,rax
    a3fc:	48 8d 3d a5 37 00 00 	lea    rdi,[rip+0x37a5]        # dba8 <_IO_stdin_used+0x1ba8>
    a403:	b8 00 00 00 00       	mov    eax,0x0
    a408:	e8 c3 80 ff ff       	call   24d0 <printf@plt>
    a40d:	bf ff ff ff ff       	mov    edi,0xffffffff
    a412:	e8 39 81 ff ff       	call   2550 <exit@plt>
    a417:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a41b:	ba 06 00 00 00       	mov    edx,0x6
    a420:	48 8d 35 b8 37 00 00 	lea    rsi,[rip+0x37b8]        # dbdf <_IO_stdin_used+0x1bdf>
    a427:	48 89 c7             	mov    rdi,rax
    a42a:	e8 71 81 ff ff       	call   25a0 <strncmp@plt>
    a42f:	85 c0                	test   eax,eax
    a431:	0f 85 86 00 00 00    	jne    a4bd <line_parser+0xa65>
    a437:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a43b:	48 89 c7             	mov    rdi,rax
    a43e:	e8 7e f5 ff ff       	call   99c1 <sc_strip>
    a443:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a447:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a44d:	3d 80 00 00 00       	cmp    eax,0x80
    a452:	75 58                	jne    a4ac <line_parser+0xa54>
    a454:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a458:	48 83 c0 06          	add    rax,0x6
    a45c:	ba ff 00 00 00       	mov    edx,0xff
    a461:	be 00 00 00 00       	mov    esi,0x0
    a466:	48 89 c7             	mov    rdi,rax
    a469:	e8 fe f4 ff ff       	call   996c <numeric_check>
    a46e:	89 45 a0             	mov    DWORD PTR [rbp-0x60],eax
    a471:	83 7d a0 ff          	cmp    DWORD PTR [rbp-0x60],0xffffffff
    a475:	75 16                	jne    a48d <line_parser+0xa35>
    a477:	48 8d 3d 68 37 00 00 	lea    rdi,[rip+0x3768]        # dbe6 <_IO_stdin_used+0x1be6>
    a47e:	e8 ad 80 ff ff       	call   2530 <puts@plt>
    a483:	bf ff ff ff ff       	mov    edi,0xffffffff
    a488:	e8 c3 80 ff ff       	call   2550 <exit@plt>
    a48d:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    a490:	89 c2                	mov    edx,eax
    a492:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a496:	88 90 73 03 00 00    	mov    BYTE PTR [rax+0x373],dl
    a49c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a4a0:	c6 80 6f 03 00 00 01 	mov    BYTE PTR [rax+0x36f],0x1
    a4a7:	e9 68 04 00 00       	jmp    a914 <line_parser+0xebc>
    a4ac:	48 8d 3d 4d 37 00 00 	lea    rdi,[rip+0x374d]        # dc00 <_IO_stdin_used+0x1c00>
    a4b3:	e8 78 80 ff ff       	call   2530 <puts@plt>
    a4b8:	e9 57 04 00 00       	jmp    a914 <line_parser+0xebc>
    a4bd:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a4c1:	ba 08 00 00 00       	mov    edx,0x8
    a4c6:	48 8d 35 65 37 00 00 	lea    rsi,[rip+0x3765]        # dc32 <_IO_stdin_used+0x1c32>
    a4cd:	48 89 c7             	mov    rdi,rax
    a4d0:	e8 cb 80 ff ff       	call   25a0 <strncmp@plt>
    a4d5:	85 c0                	test   eax,eax
    a4d7:	0f 85 8c 00 00 00    	jne    a569 <line_parser+0xb11>
    a4dd:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a4e1:	48 89 c7             	mov    rdi,rax
    a4e4:	e8 d8 f4 ff ff       	call   99c1 <sc_strip>
    a4e9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a4ed:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a4f3:	3d 80 00 00 00       	cmp    eax,0x80
    a4f8:	75 59                	jne    a553 <line_parser+0xafb>
    a4fa:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a4fe:	48 83 c0 08          	add    rax,0x8
    a502:	ba ff ff 00 00       	mov    edx,0xffff
    a507:	be 00 00 00 00       	mov    esi,0x0
    a50c:	48 89 c7             	mov    rdi,rax
    a50f:	e8 58 f4 ff ff       	call   996c <numeric_check>
    a514:	89 45 9c             	mov    DWORD PTR [rbp-0x64],eax
    a517:	83 7d 9c ff          	cmp    DWORD PTR [rbp-0x64],0xffffffff
    a51b:	75 16                	jne    a533 <line_parser+0xadb>
    a51d:	48 8d 3d 17 37 00 00 	lea    rdi,[rip+0x3717]        # dc3b <_IO_stdin_used+0x1c3b>
    a524:	e8 07 80 ff ff       	call   2530 <puts@plt>
    a529:	bf ff ff ff ff       	mov    edi,0xffffffff
    a52e:	e8 1d 80 ff ff       	call   2550 <exit@plt>
    a533:	8b 45 9c             	mov    eax,DWORD PTR [rbp-0x64]
    a536:	89 c2                	mov    edx,eax
    a538:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a53c:	66 89 90 76 03 00 00 	mov    WORD PTR [rax+0x376],dx
    a543:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a547:	c6 80 71 03 00 00 01 	mov    BYTE PTR [rax+0x371],0x1
    a54e:	e9 c1 03 00 00       	jmp    a914 <line_parser+0xebc>
    a553:	48 8d 3d fe 36 00 00 	lea    rdi,[rip+0x36fe]        # dc58 <_IO_stdin_used+0x1c58>
    a55a:	e8 d1 7f ff ff       	call   2530 <puts@plt>
    a55f:	bf ff ff ff ff       	mov    edi,0xffffffff
    a564:	e8 e7 7f ff ff       	call   2550 <exit@plt>
    a569:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a56d:	ba 09 00 00 00       	mov    edx,0x9
    a572:	48 8d 35 13 37 00 00 	lea    rsi,[rip+0x3713]        # dc8c <_IO_stdin_used+0x1c8c>
    a579:	48 89 c7             	mov    rdi,rax
    a57c:	e8 1f 80 ff ff       	call   25a0 <strncmp@plt>
    a581:	85 c0                	test   eax,eax
    a583:	75 7a                	jne    a5ff <line_parser+0xba7>
    a585:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a589:	48 89 c7             	mov    rdi,rax
    a58c:	e8 30 f4 ff ff       	call   99c1 <sc_strip>
    a591:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a595:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a59b:	3d 80 00 00 00       	cmp    eax,0x80
    a5a0:	0f 85 6e 03 00 00    	jne    a914 <line_parser+0xebc>
    a5a6:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a5aa:	48 83 c0 09          	add    rax,0x9
    a5ae:	ba ff ff 00 00       	mov    edx,0xffff
    a5b3:	be 00 00 00 00       	mov    esi,0x0
    a5b8:	48 89 c7             	mov    rdi,rax
    a5bb:	e8 ac f3 ff ff       	call   996c <numeric_check>
    a5c0:	89 45 98             	mov    DWORD PTR [rbp-0x68],eax
    a5c3:	83 7d 98 ff          	cmp    DWORD PTR [rbp-0x68],0xffffffff
    a5c7:	75 16                	jne    a5df <line_parser+0xb87>
    a5c9:	48 8d 3d c6 36 00 00 	lea    rdi,[rip+0x36c6]        # dc96 <_IO_stdin_used+0x1c96>
    a5d0:	e8 5b 7f ff ff       	call   2530 <puts@plt>
    a5d5:	bf ff ff ff ff       	mov    edi,0xffffffff
    a5da:	e8 71 7f ff ff       	call   2550 <exit@plt>
    a5df:	8b 45 98             	mov    eax,DWORD PTR [rbp-0x68]
    a5e2:	89 c2                	mov    edx,eax
    a5e4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a5e8:	66 89 90 74 03 00 00 	mov    WORD PTR [rax+0x374],dx
    a5ef:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a5f3:	c6 80 70 03 00 00 01 	mov    BYTE PTR [rax+0x370],0x1
    a5fa:	e9 15 03 00 00       	jmp    a914 <line_parser+0xebc>
    a5ff:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a603:	ba 04 00 00 00       	mov    edx,0x4
    a608:	48 8d 35 a3 36 00 00 	lea    rsi,[rip+0x36a3]        # dcb2 <_IO_stdin_used+0x1cb2>
    a60f:	48 89 c7             	mov    rdi,rax
    a612:	e8 89 7f ff ff       	call   25a0 <strncmp@plt>
    a617:	85 c0                	test   eax,eax
    a619:	75 64                	jne    a67f <line_parser+0xc27>
    a61b:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a61f:	48 89 c7             	mov    rdi,rax
    a622:	e8 9a f3 ff ff       	call   99c1 <sc_strip>
    a627:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a62b:	48 83 c0 04          	add    rax,0x4
    a62f:	ba ff 00 00 00       	mov    edx,0xff
    a634:	be 00 00 00 00       	mov    esi,0x0
    a639:	48 89 c7             	mov    rdi,rax
    a63c:	e8 2b f3 ff ff       	call   996c <numeric_check>
    a641:	89 45 94             	mov    DWORD PTR [rbp-0x6c],eax
    a644:	83 7d 94 ff          	cmp    DWORD PTR [rbp-0x6c],0xffffffff
    a648:	75 16                	jne    a660 <line_parser+0xc08>
    a64a:	48 8d 3d 66 36 00 00 	lea    rdi,[rip+0x3666]        # dcb7 <_IO_stdin_used+0x1cb7>
    a651:	e8 da 7e ff ff       	call   2530 <puts@plt>
    a656:	bf ff ff ff ff       	mov    edi,0xffffffff
    a65b:	e8 f0 7e ff ff       	call   2550 <exit@plt>
    a660:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    a663:	89 c2                	mov    edx,eax
    a665:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a669:	88 90 6c 03 00 00    	mov    BYTE PTR [rax+0x36c],dl
    a66f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a673:	c6 80 69 03 00 00 01 	mov    BYTE PTR [rax+0x369],0x1
    a67a:	e9 95 02 00 00       	jmp    a914 <line_parser+0xebc>
    a67f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a683:	ba 07 00 00 00       	mov    edx,0x7
    a688:	48 8d 35 3a 36 00 00 	lea    rsi,[rip+0x363a]        # dcc9 <_IO_stdin_used+0x1cc9>
    a68f:	48 89 c7             	mov    rdi,rax
    a692:	e8 09 7f ff ff       	call   25a0 <strncmp@plt>
    a697:	85 c0                	test   eax,eax
    a699:	75 6e                	jne    a709 <line_parser+0xcb1>
    a69b:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a69f:	48 89 c7             	mov    rdi,rax
    a6a2:	e8 1a f3 ff ff       	call   99c1 <sc_strip>
    a6a7:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a6ab:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a6b1:	83 f8 7e             	cmp    eax,0x7e
    a6b4:	75 3d                	jne    a6f3 <line_parser+0xc9b>
    a6b6:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a6ba:	48 89 c7             	mov    rdi,rax
    a6bd:	e8 8e 7f ff ff       	call   2650 <strlen@plt>
    a6c2:	48 8d 50 f8          	lea    rdx,[rax-0x8]
    a6c6:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a6ca:	48 8d 48 07          	lea    rcx,[rax+0x7]
    a6ce:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a6d2:	48 05 53 03 00 00    	add    rax,0x353
    a6d8:	48 89 ce             	mov    rsi,rcx
    a6db:	48 89 c7             	mov    rdi,rax
    a6de:	e8 6d 81 ff ff       	call   2850 <strncpy@plt>
    a6e3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a6e7:	c6 80 50 03 00 00 01 	mov    BYTE PTR [rax+0x350],0x1
    a6ee:	e9 21 02 00 00       	jmp    a914 <line_parser+0xebc>
    a6f3:	48 8d 3d de 35 00 00 	lea    rdi,[rip+0x35de]        # dcd8 <_IO_stdin_used+0x1cd8>
    a6fa:	e8 31 7e ff ff       	call   2530 <puts@plt>
    a6ff:	bf ff ff ff ff       	mov    edi,0xffffffff
    a704:	e8 47 7e ff ff       	call   2550 <exit@plt>
    a709:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a70d:	ba 04 00 00 00       	mov    edx,0x4
    a712:	48 8d 35 f0 35 00 00 	lea    rsi,[rip+0x35f0]        # dd09 <_IO_stdin_used+0x1d09>
    a719:	48 89 c7             	mov    rdi,rax
    a71c:	e8 7f 7e ff ff       	call   25a0 <strncmp@plt>
    a721:	85 c0                	test   eax,eax
    a723:	75 78                	jne    a79d <line_parser+0xd45>
    a725:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a729:	48 89 c7             	mov    rdi,rax
    a72c:	e8 90 f2 ff ff       	call   99c1 <sc_strip>
    a731:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a735:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a73b:	83 f8 7e             	cmp    eax,0x7e
    a73e:	0f 85 d0 01 00 00    	jne    a914 <line_parser+0xebc>
    a744:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a748:	48 83 c0 04          	add    rax,0x4
    a74c:	ba ff ff ff ff       	mov    edx,0xffffffff
    a751:	be 00 00 00 00       	mov    esi,0x0
    a756:	48 89 c7             	mov    rdi,rax
    a759:	e8 0e f2 ff ff       	call   996c <numeric_check>
    a75e:	89 45 90             	mov    DWORD PTR [rbp-0x70],eax
    a761:	83 7d 90 ff          	cmp    DWORD PTR [rbp-0x70],0xffffffff
    a765:	75 16                	jne    a77d <line_parser+0xd25>
    a767:	48 8d 3d a0 35 00 00 	lea    rdi,[rip+0x35a0]        # dd0e <_IO_stdin_used+0x1d0e>
    a76e:	e8 bd 7d ff ff       	call   2530 <puts@plt>
    a773:	bf ff ff ff ff       	mov    edi,0xffffffff
    a778:	e8 d3 7d ff ff       	call   2550 <exit@plt>
    a77d:	8b 45 90             	mov    eax,DWORD PTR [rbp-0x70]
    a780:	89 c2                	mov    edx,eax
    a782:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a786:	66 89 90 5c 03 00 00 	mov    WORD PTR [rax+0x35c],dx
    a78d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a791:	c6 80 51 03 00 00 01 	mov    BYTE PTR [rax+0x351],0x1
    a798:	e9 77 01 00 00       	jmp    a914 <line_parser+0xebc>
    a79d:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a7a1:	ba 06 00 00 00       	mov    edx,0x6
    a7a6:	48 8d 35 73 35 00 00 	lea    rsi,[rip+0x3573]        # dd20 <_IO_stdin_used+0x1d20>
    a7ad:	48 89 c7             	mov    rdi,rax
    a7b0:	e8 eb 7d ff ff       	call   25a0 <strncmp@plt>
    a7b5:	85 c0                	test   eax,eax
    a7b7:	75 7c                	jne    a835 <line_parser+0xddd>
    a7b9:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a7bd:	48 89 c7             	mov    rdi,rax
    a7c0:	e8 8b 7e ff ff       	call   2650 <strlen@plt>
    a7c5:	48 8d 50 f7          	lea    rdx,[rax-0x9]
    a7c9:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a7cd:	48 8d 48 06          	lea    rcx,[rax+0x6]
    a7d1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a7d5:	48 05 10 02 00 00    	add    rax,0x210
    a7db:	48 89 ce             	mov    rsi,rcx
    a7de:	48 89 c7             	mov    rdi,rax
    a7e1:	e8 6a 80 ff ff       	call   2850 <strncpy@plt>
    a7e6:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a7ea:	48 8d 88 10 02 00 00 	lea    rcx,[rax+0x210]
    a7f1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a7f5:	48 05 d0 01 00 00    	add    rax,0x1d0
    a7fb:	ba 00 00 00 00       	mov    edx,0x0
    a800:	48 89 ce             	mov    rsi,rcx
    a803:	48 89 c7             	mov    rdi,rax
    a806:	e8 45 7f ff ff       	call   2750 <regcomp@plt>
    a80b:	85 c0                	test   eax,eax
    a80d:	74 16                	je     a825 <line_parser+0xdcd>
    a80f:	48 8d 3d 12 35 00 00 	lea    rdi,[rip+0x3512]        # dd28 <_IO_stdin_used+0x1d28>
    a816:	e8 15 7d ff ff       	call   2530 <puts@plt>
    a81b:	bf ff ff ff ff       	mov    edi,0xffffffff
    a820:	e8 2b 7d ff ff       	call   2550 <exit@plt>
    a825:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a829:	c6 80 90 02 00 00 01 	mov    BYTE PTR [rax+0x290],0x1
    a830:	e9 df 00 00 00       	jmp    a914 <line_parser+0xebc>
    a835:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a839:	ba 06 00 00 00       	mov    edx,0x6
    a83e:	48 8d 35 08 35 00 00 	lea    rsi,[rip+0x3508]        # dd4d <_IO_stdin_used+0x1d4d>
    a845:	48 89 c7             	mov    rdi,rax
    a848:	e8 53 7d ff ff       	call   25a0 <strncmp@plt>
    a84d:	85 c0                	test   eax,eax
    a84f:	75 2d                	jne    a87e <line_parser+0xe26>
    a851:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a855:	48 89 c7             	mov    rdi,rax
    a858:	e8 64 f1 ff ff       	call   99c1 <sc_strip>
    a85d:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a861:	48 8d 48 06          	lea    rcx,[rax+0x6]
    a865:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a869:	ba 01 00 00 00       	mov    edx,0x1
    a86e:	48 89 ce             	mov    rsi,rcx
    a871:	48 89 c7             	mov    rdi,rax
    a874:	e8 98 03 00 00       	call   ac11 <d_op_parser>
    a879:	e9 96 00 00 00       	jmp    a914 <line_parser+0xebc>
    a87e:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a882:	ba 07 00 00 00       	mov    edx,0x7
    a887:	48 8d 35 c6 34 00 00 	lea    rsi,[rip+0x34c6]        # dd54 <_IO_stdin_used+0x1d54>
    a88e:	48 89 c7             	mov    rdi,rax
    a891:	e8 0a 7d ff ff       	call   25a0 <strncmp@plt>
    a896:	85 c0                	test   eax,eax
    a898:	75 27                	jne    a8c1 <line_parser+0xe69>
    a89a:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a89e:	48 89 c7             	mov    rdi,rax
    a8a1:	e8 1b f1 ff ff       	call   99c1 <sc_strip>
    a8a6:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a8aa:	48 83 c0 07          	add    rax,0x7
    a8ae:	48 89 c7             	mov    rdi,rax
    a8b1:	e8 8a 7e ff ff       	call   2740 <atoi@plt>
    a8b6:	89 c2                	mov    edx,eax
    a8b8:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a8bc:	89 50 14             	mov    DWORD PTR [rax+0x14],edx
    a8bf:	eb 53                	jmp    a914 <line_parser+0xebc>
    a8c1:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a8c5:	ba 0b 00 00 00       	mov    edx,0xb
    a8ca:	48 8d 35 8b 34 00 00 	lea    rsi,[rip+0x348b]        # dd5c <_IO_stdin_used+0x1d5c>
    a8d1:	48 89 c7             	mov    rdi,rax
    a8d4:	e8 c7 7c ff ff       	call   25a0 <strncmp@plt>
    a8d9:	85 c0                	test   eax,eax
    a8db:	75 10                	jne    a8ed <line_parser+0xe95>
    a8dd:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a8e1:	c7 80 48 03 00 00 01 	mov    DWORD PTR [rax+0x348],0x1
    a8e8:	00 00 00 
    a8eb:	eb 27                	jmp    a914 <line_parser+0xebc>
    a8ed:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a8f1:	ba 09 00 00 00       	mov    edx,0x9
    a8f6:	48 8d 35 6b 34 00 00 	lea    rsi,[rip+0x346b]        # dd68 <_IO_stdin_used+0x1d68>
    a8fd:	48 89 c7             	mov    rdi,rax
    a900:	e8 9b 7c ff ff       	call   25a0 <strncmp@plt>
    a905:	85 c0                	test   eax,eax
    a907:	75 0b                	jne    a914 <line_parser+0xebc>
    a909:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a90d:	c6 80 48 01 00 00 01 	mov    BYTE PTR [rax+0x148],0x1
    a914:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    a917:	89 45 80             	mov    DWORD PTR [rbp-0x80],eax
    a91a:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a91e:	48 89 c7             	mov    rdi,rax
    a921:	e8 2a 7d ff ff       	call   2650 <strlen@plt>
    a926:	48 8d 50 ff          	lea    rdx,[rax-0x1]
    a92a:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a92e:	48 01 d0             	add    rax,rdx
    a931:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    a934:	3c 29                	cmp    al,0x29
    a936:	74 3d                	je     a975 <line_parser+0xf1d>
    a938:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    a93b:	3b 45 8c             	cmp    eax,DWORD PTR [rbp-0x74]
    a93e:	7f 0c                	jg     a94c <line_parser+0xef4>
    a940:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
    a943:	3b 45 84             	cmp    eax,DWORD PTR [rbp-0x7c]
    a946:	0f 8e 28 f2 ff ff    	jle    9b74 <line_parser+0x11c>
    a94c:	0f b6 85 7f ff ff ff 	movzx  eax,BYTE PTR [rbp-0x81]
    a953:	83 f0 01             	xor    eax,0x1
    a956:	84 c0                	test   al,al
    a958:	74 1c                	je     a976 <line_parser+0xf1e>
    a95a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a95e:	48 83 c0 20          	add    rax,0x20
    a962:	48 bb 55 6e 74 69 74 	movabs rbx,0x64656c7469746e55
    a969:	6c 65 64 
    a96c:	48 89 18             	mov    QWORD PTR [rax],rbx
    a96f:	c6 40 08 00          	mov    BYTE PTR [rax+0x8],0x0
    a973:	eb 01                	jmp    a976 <line_parser+0xf1e>
    a975:	90                   	nop
    a976:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a97a:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    a981:	00 00 
    a983:	74 05                	je     a98a <line_parser+0xf32>
    a985:	e8 36 7e ff ff       	call   27c0 <__stack_chk_fail@plt>
    a98a:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    a98e:	c9                   	leave  
    a98f:	c3                   	ret    

000000000000a990 <rule_processor>:
    a990:	f3 0f 1e fa          	endbr64 
    a994:	55                   	push   rbp
    a995:	48 89 e5             	mov    rbp,rsp
    a998:	48 83 ec 10          	sub    rsp,0x10
    a99c:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    a9a3:	eb 22                	jmp    a9c7 <rule_processor+0x37>
    a9a5:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    a9a8:	48 98                	cdqe   
    a9aa:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    a9b1:	48 8d 15 28 69 00 00 	lea    rdx,[rip+0x6928]        # 112e0 <rules>
    a9b8:	48 01 d0             	add    rax,rdx
    a9bb:	48 89 c7             	mov    rdi,rax
    a9be:	e8 13 00 00 00       	call   a9d6 <process_rule>
    a9c3:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    a9c7:	8b 05 47 66 00 00    	mov    eax,DWORD PTR [rip+0x6647]        # 11014 <num_rules>
    a9cd:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    a9d0:	7e d3                	jle    a9a5 <rule_processor+0x15>
    a9d2:	90                   	nop
    a9d3:	90                   	nop
    a9d4:	c9                   	leave  
    a9d5:	c3                   	ret    

000000000000a9d6 <process_rule>:
    a9d6:	f3 0f 1e fa          	endbr64 
    a9da:	55                   	push   rbp
    a9db:	48 89 e5             	mov    rbp,rsp
    a9de:	41 57                	push   r15
    a9e0:	41 56                	push   r14
    a9e2:	41 54                	push   r12
    a9e4:	53                   	push   rbx
    a9e5:	48 83 ec 40          	sub    rsp,0x40
    a9e9:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    a9ed:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a9f4:	00 00 
    a9f6:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    a9fa:	31 c0                	xor    eax,eax
    a9fc:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    aa00:	0f b6 80 90 02 00 00 	movzx  eax,BYTE PTR [rax+0x290]
    aa07:	83 f0 01             	xor    eax,0x1
    aa0a:	84 c0                	test   al,al
    aa0c:	0f 84 dd 01 00 00    	je     abef <process_rule+0x219>
    aa12:	48 89 e0             	mov    rax,rsp
    aa15:	49 89 c4             	mov    r12,rax
    aa18:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    aa1c:	48 83 c0 40          	add    rax,0x40
    aa20:	48 89 c7             	mov    rdi,rax
    aa23:	e8 28 7c ff ff       	call   2650 <strlen@plt>
    aa28:	48 83 c0 01          	add    rax,0x1
    aa2c:	48 01 c0             	add    rax,rax
    aa2f:	48 89 c2             	mov    rdx,rax
    aa32:	48 83 ea 01          	sub    rdx,0x1
    aa36:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    aa3a:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    aa3e:	48 c7 45 a8 00 00 00 	mov    QWORD PTR [rbp-0x58],0x0
    aa45:	00 
    aa46:	49 89 c6             	mov    r14,rax
    aa49:	41 bf 00 00 00 00    	mov    r15d,0x0
    aa4f:	ba 10 00 00 00       	mov    edx,0x10
    aa54:	48 83 ea 01          	sub    rdx,0x1
    aa58:	48 01 d0             	add    rax,rdx
    aa5b:	bb 10 00 00 00       	mov    ebx,0x10
    aa60:	ba 00 00 00 00       	mov    edx,0x0
    aa65:	48 f7 f3             	div    rbx
    aa68:	48 6b c0 10          	imul   rax,rax,0x10
    aa6c:	48 89 c1             	mov    rcx,rax
    aa6f:	48 81 e1 00 f0 ff ff 	and    rcx,0xfffffffffffff000
    aa76:	48 89 e2             	mov    rdx,rsp
    aa79:	48 29 ca             	sub    rdx,rcx
    aa7c:	48 39 d4             	cmp    rsp,rdx
    aa7f:	74 12                	je     aa93 <process_rule+0xbd>
    aa81:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    aa88:	48 83 8c 24 f8 0f 00 	or     QWORD PTR [rsp+0xff8],0x0
    aa8f:	00 00 
    aa91:	eb e9                	jmp    aa7c <process_rule+0xa6>
    aa93:	48 89 c2             	mov    rdx,rax
    aa96:	81 e2 ff 0f 00 00    	and    edx,0xfff
    aa9c:	48 29 d4             	sub    rsp,rdx
    aa9f:	48 89 c2             	mov    rdx,rax
    aaa2:	81 e2 ff 0f 00 00    	and    edx,0xfff
    aaa8:	48 85 d2             	test   rdx,rdx
    aaab:	74 10                	je     aabd <process_rule+0xe7>
    aaad:	25 ff 0f 00 00       	and    eax,0xfff
    aab2:	48 83 e8 08          	sub    rax,0x8
    aab6:	48 01 e0             	add    rax,rsp
    aab9:	48 83 08 00          	or     QWORD PTR [rax],0x0
    aabd:	48 89 e0             	mov    rax,rsp
    aac0:	48 83 c0 00          	add    rax,0x0
    aac4:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    aac8:	c7 45 c0 00 00 00 00 	mov    DWORD PTR [rbp-0x40],0x0
    aacf:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    aad3:	48 8d 50 40          	lea    rdx,[rax+0x40]
    aad7:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    aadb:	48 05 c8 02 00 00    	add    rax,0x2c8
    aae1:	48 89 d6             	mov    rsi,rdx
    aae4:	48 89 c7             	mov    rdi,rax
    aae7:	e8 14 7d ff ff       	call   2800 <strcpy@plt>
    aaec:	c7 45 c4 00 00 00 00 	mov    DWORD PTR [rbp-0x3c],0x0
    aaf3:	e9 a4 00 00 00       	jmp    ab9c <process_rule+0x1c6>
    aaf8:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    aafc:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    aaff:	48 98                	cdqe   
    ab01:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    ab06:	3c 7c                	cmp    al,0x7c
    ab08:	75 18                	jne    ab22 <process_rule+0x14c>
    ab0a:	83 7d c0 00          	cmp    DWORD PTR [rbp-0x40],0x0
    ab0e:	74 09                	je     ab19 <process_rule+0x143>
    ab10:	c7 45 c0 00 00 00 00 	mov    DWORD PTR [rbp-0x40],0x0
    ab17:	eb 7f                	jmp    ab98 <process_rule+0x1c2>
    ab19:	c7 45 c0 01 00 00 00 	mov    DWORD PTR [rbp-0x40],0x1
    ab20:	eb 76                	jmp    ab98 <process_rule+0x1c2>
    ab22:	83 7d c0 01          	cmp    DWORD PTR [rbp-0x40],0x1
    ab26:	75 3a                	jne    ab62 <process_rule+0x18c>
    ab28:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    ab2c:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    ab2f:	48 98                	cdqe   
    ab31:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    ab36:	0f be c0             	movsx  eax,al
    ab39:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
    ab3c:	48 63 d2             	movsxd rdx,edx
    ab3f:	48 8d 4a ff          	lea    rcx,[rdx-0x1]
    ab43:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    ab47:	48 01 d1             	add    rcx,rdx
    ab4a:	89 c2                	mov    edx,eax
    ab4c:	48 8d 35 1f 32 00 00 	lea    rsi,[rip+0x321f]        # dd72 <_IO_stdin_used+0x1d72>
    ab53:	48 89 cf             	mov    rdi,rcx
    ab56:	b8 00 00 00 00       	mov    eax,0x0
    ab5b:	e8 30 7b ff ff       	call   2690 <sprintf@plt>
    ab60:	eb 36                	jmp    ab98 <process_rule+0x1c2>
    ab62:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    ab66:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    ab69:	48 98                	cdqe   
    ab6b:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    ab70:	0f be c0             	movsx  eax,al
    ab73:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
    ab76:	01 d2                	add    edx,edx
    ab78:	48 63 ca             	movsxd rcx,edx
    ab7b:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    ab7f:	48 01 d1             	add    rcx,rdx
    ab82:	89 c2                	mov    edx,eax
    ab84:	48 8d 35 ea 31 00 00 	lea    rsi,[rip+0x31ea]        # dd75 <_IO_stdin_used+0x1d75>
    ab8b:	48 89 cf             	mov    rdi,rcx
    ab8e:	b8 00 00 00 00       	mov    eax,0x0
    ab93:	e8 f8 7a ff ff       	call   2690 <sprintf@plt>
    ab98:	83 45 c4 01          	add    DWORD PTR [rbp-0x3c],0x1
    ab9c:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    ab9f:	48 63 d8             	movsxd rbx,eax
    aba2:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    aba6:	48 83 c0 40          	add    rax,0x40
    abaa:	48 89 c7             	mov    rdi,rax
    abad:	e8 9e 7a ff ff       	call   2650 <strlen@plt>
    abb2:	48 39 c3             	cmp    rbx,rax
    abb5:	0f 82 3d ff ff ff    	jb     aaf8 <process_rule+0x122>
    abbb:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    abbf:	48 83 c0 40          	add    rax,0x40
    abc3:	ba ff 00 00 00       	mov    edx,0xff
    abc8:	be 00 00 00 00       	mov    esi,0x0
    abcd:	48 89 c7             	mov    rdi,rax
    abd0:	e8 0b 79 ff ff       	call   24e0 <memset@plt>
    abd5:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    abd9:	48 8d 50 40          	lea    rdx,[rax+0x40]
    abdd:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    abe1:	48 89 c6             	mov    rsi,rax
    abe4:	48 89 d7             	mov    rdi,rdx
    abe7:	e8 14 7c ff ff       	call   2800 <strcpy@plt>
    abec:	4c 89 e4             	mov    rsp,r12
    abef:	90                   	nop
    abf0:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    abf4:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    abfb:	00 00 
    abfd:	74 05                	je     ac04 <process_rule+0x22e>
    abff:	e8 bc 7b ff ff       	call   27c0 <__stack_chk_fail@plt>
    ac04:	48 8d 65 e0          	lea    rsp,[rbp-0x20]
    ac08:	5b                   	pop    rbx
    ac09:	41 5c                	pop    r12
    ac0b:	41 5e                	pop    r14
    ac0d:	41 5f                	pop    r15
    ac0f:	5d                   	pop    rbp
    ac10:	c3                   	ret    

000000000000ac11 <d_op_parser>:
    ac11:	f3 0f 1e fa          	endbr64 
    ac15:	55                   	push   rbp
    ac16:	48 89 e5             	mov    rbp,rsp
    ac19:	48 83 ec 20          	sub    rsp,0x20
    ac1d:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    ac21:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    ac25:	89 55 ec             	mov    DWORD PTR [rbp-0x14],edx
    ac28:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ac2c:	48 89 c7             	mov    rdi,rax
    ac2f:	e8 cb e9 ff ff       	call   95ff <isdigit>
    ac34:	84 c0                	test   al,al
    ac36:	74 23                	je     ac5b <d_op_parser+0x4a>
    ac38:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ac3c:	c7 40 1c a1 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa1
    ac43:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ac47:	48 89 c7             	mov    rdi,rax
    ac4a:	e8 f1 7a ff ff       	call   2740 <atoi@plt>
    ac4f:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ac53:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    ac56:	e9 59 01 00 00       	jmp    adb4 <d_op_parser+0x1a3>
    ac5b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ac5f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    ac62:	0f b6 15 13 31 00 00 	movzx  edx,BYTE PTR [rip+0x3113]        # dd7c <_IO_stdin_used+0x1d7c>
    ac69:	0f b6 c0             	movzx  eax,al
    ac6c:	0f b6 d2             	movzx  edx,dl
    ac6f:	29 d0                	sub    eax,edx
    ac71:	85 c0                	test   eax,eax
    ac73:	75 27                	jne    ac9c <d_op_parser+0x8b>
    ac75:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ac79:	c7 40 1c a4 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa4
    ac80:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ac84:	48 83 c0 01          	add    rax,0x1
    ac88:	48 89 c7             	mov    rdi,rax
    ac8b:	e8 b0 7a ff ff       	call   2740 <atoi@plt>
    ac90:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ac94:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    ac97:	e9 18 01 00 00       	jmp    adb4 <d_op_parser+0x1a3>
    ac9c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    aca0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    aca3:	0f b6 15 d4 30 00 00 	movzx  edx,BYTE PTR [rip+0x30d4]        # dd7e <_IO_stdin_used+0x1d7e>
    acaa:	0f b6 c0             	movzx  eax,al
    acad:	0f b6 d2             	movzx  edx,dl
    acb0:	29 d0                	sub    eax,edx
    acb2:	85 c0                	test   eax,eax
    acb4:	75 27                	jne    acdd <d_op_parser+0xcc>
    acb6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    acba:	c7 40 1c a2 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa2
    acc1:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    acc5:	48 83 c0 01          	add    rax,0x1
    acc9:	48 89 c7             	mov    rdi,rax
    accc:	e8 6f 7a ff ff       	call   2740 <atoi@plt>
    acd1:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    acd5:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    acd8:	e9 d7 00 00 00       	jmp    adb4 <d_op_parser+0x1a3>
    acdd:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ace1:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    ace4:	0f b6 15 95 30 00 00 	movzx  edx,BYTE PTR [rip+0x3095]        # dd80 <_IO_stdin_used+0x1d80>
    aceb:	0f b6 c0             	movzx  eax,al
    acee:	0f b6 d2             	movzx  edx,dl
    acf1:	29 d0                	sub    eax,edx
    acf3:	85 c0                	test   eax,eax
    acf5:	75 27                	jne    ad1e <d_op_parser+0x10d>
    acf7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    acfb:	c7 40 1c a6 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa6
    ad02:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad06:	48 83 c0 01          	add    rax,0x1
    ad0a:	48 89 c7             	mov    rdi,rax
    ad0d:	e8 2e 7a ff ff       	call   2740 <atoi@plt>
    ad12:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ad16:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    ad19:	e9 96 00 00 00       	jmp    adb4 <d_op_parser+0x1a3>
    ad1e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad22:	ba 02 00 00 00       	mov    edx,0x2
    ad27:	48 8d 35 54 30 00 00 	lea    rsi,[rip+0x3054]        # dd82 <_IO_stdin_used+0x1d82>
    ad2e:	48 89 c7             	mov    rdi,rax
    ad31:	e8 6a 78 ff ff       	call   25a0 <strncmp@plt>
    ad36:	85 c0                	test   eax,eax
    ad38:	75 24                	jne    ad5e <d_op_parser+0x14d>
    ad3a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad3e:	c7 40 1c a3 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa3
    ad45:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad49:	48 83 c0 02          	add    rax,0x2
    ad4d:	48 89 c7             	mov    rdi,rax
    ad50:	e8 eb 79 ff ff       	call   2740 <atoi@plt>
    ad55:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ad59:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    ad5c:	eb 56                	jmp    adb4 <d_op_parser+0x1a3>
    ad5e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad62:	ba 02 00 00 00       	mov    edx,0x2
    ad67:	48 8d 35 17 30 00 00 	lea    rsi,[rip+0x3017]        # dd85 <_IO_stdin_used+0x1d85>
    ad6e:	48 89 c7             	mov    rdi,rax
    ad71:	e8 2a 78 ff ff       	call   25a0 <strncmp@plt>
    ad76:	85 c0                	test   eax,eax
    ad78:	75 24                	jne    ad9e <d_op_parser+0x18d>
    ad7a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad7e:	c7 40 1c a5 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa5
    ad85:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad89:	48 83 c0 02          	add    rax,0x2
    ad8d:	48 89 c7             	mov    rdi,rax
    ad90:	e8 ab 79 ff ff       	call   2740 <atoi@plt>
    ad95:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ad99:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    ad9c:	eb 16                	jmp    adb4 <d_op_parser+0x1a3>
    ad9e:	48 8d 3d e3 2f 00 00 	lea    rdi,[rip+0x2fe3]        # dd88 <_IO_stdin_used+0x1d88>
    ada5:	e8 86 77 ff ff       	call   2530 <puts@plt>
    adaa:	bf ff ff ff ff       	mov    edi,0xffffffff
    adaf:	e8 9c 77 ff ff       	call   2550 <exit@plt>
    adb4:	c9                   	leave  
    adb5:	c3                   	ret    

000000000000adb6 <d_engine>:
    adb6:	f3 0f 1e fa          	endbr64 
    adba:	55                   	push   rbp
    adbb:	48 89 e5             	mov    rbp,rsp
    adbe:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    adc2:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    adc6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    adca:	8b 40 1c             	mov    eax,DWORD PTR [rax+0x1c]
    adcd:	83 f8 ff             	cmp    eax,0xffffffff
    add0:	75 0a                	jne    addc <d_engine+0x26>
    add2:	b8 01 00 00 00       	mov    eax,0x1
    add7:	e9 ea 00 00 00       	jmp    aec6 <d_engine+0x110>
    addc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ade0:	8b 40 1c             	mov    eax,DWORD PTR [rax+0x1c]
    ade3:	2d a1 00 00 00       	sub    eax,0xa1
    ade8:	83 f8 05             	cmp    eax,0x5
    adeb:	0f 87 d0 00 00 00    	ja     aec1 <d_engine+0x10b>
    adf1:	89 c0                	mov    eax,eax
    adf3:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    adfa:	00 
    adfb:	48 8d 05 9e 2f 00 00 	lea    rax,[rip+0x2f9e]        # dda0 <_IO_stdin_used+0x1da0>
    ae02:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    ae05:	48 98                	cdqe   
    ae07:	48 8d 15 92 2f 00 00 	lea    rdx,[rip+0x2f92]        # dda0 <_IO_stdin_used+0x1da0>
    ae0e:	48 01 d0             	add    rax,rdx
    ae11:	3e ff e0             	notrack jmp rax
    ae14:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae18:	8b 50 18             	mov    edx,DWORD PTR [rax+0x18]
    ae1b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ae1f:	8b 40 34             	mov    eax,DWORD PTR [rax+0x34]
    ae22:	39 c2                	cmp    edx,eax
    ae24:	0f 85 87 00 00 00    	jne    aeb1 <d_engine+0xfb>
    ae2a:	b8 01 00 00 00       	mov    eax,0x1
    ae2f:	e9 92 00 00 00       	jmp    aec6 <d_engine+0x110>
    ae34:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ae38:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    ae3b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae3f:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    ae42:	39 c2                	cmp    edx,eax
    ae44:	76 6e                	jbe    aeb4 <d_engine+0xfe>
    ae46:	b8 01 00 00 00       	mov    eax,0x1
    ae4b:	eb 79                	jmp    aec6 <d_engine+0x110>
    ae4d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ae51:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    ae54:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae58:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    ae5b:	39 c2                	cmp    edx,eax
    ae5d:	72 58                	jb     aeb7 <d_engine+0x101>
    ae5f:	b8 01 00 00 00       	mov    eax,0x1
    ae64:	eb 60                	jmp    aec6 <d_engine+0x110>
    ae66:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ae6a:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    ae6d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae71:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    ae74:	39 c2                	cmp    edx,eax
    ae76:	73 42                	jae    aeba <d_engine+0x104>
    ae78:	b8 01 00 00 00       	mov    eax,0x1
    ae7d:	eb 47                	jmp    aec6 <d_engine+0x110>
    ae7f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ae83:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    ae86:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae8a:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    ae8d:	39 c2                	cmp    edx,eax
    ae8f:	77 2c                	ja     aebd <d_engine+0x107>
    ae91:	b8 01 00 00 00       	mov    eax,0x1
    ae96:	eb 2e                	jmp    aec6 <d_engine+0x110>
    ae98:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ae9c:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    ae9f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aea3:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    aea6:	39 c2                	cmp    edx,eax
    aea8:	74 16                	je     aec0 <d_engine+0x10a>
    aeaa:	b8 01 00 00 00       	mov    eax,0x1
    aeaf:	eb 15                	jmp    aec6 <d_engine+0x110>
    aeb1:	90                   	nop
    aeb2:	eb 0d                	jmp    aec1 <d_engine+0x10b>
    aeb4:	90                   	nop
    aeb5:	eb 0a                	jmp    aec1 <d_engine+0x10b>
    aeb7:	90                   	nop
    aeb8:	eb 07                	jmp    aec1 <d_engine+0x10b>
    aeba:	90                   	nop
    aebb:	eb 04                	jmp    aec1 <d_engine+0x10b>
    aebd:	90                   	nop
    aebe:	eb 01                	jmp    aec1 <d_engine+0x10b>
    aec0:	90                   	nop
    aec1:	b8 00 00 00 00       	mov    eax,0x0
    aec6:	5d                   	pop    rbp
    aec7:	c3                   	ret    

000000000000aec8 <homenet_toi>:
    aec8:	f3 0f 1e fa          	endbr64 
    aecc:	55                   	push   rbp
    aecd:	48 89 e5             	mov    rbp,rsp
    aed0:	53                   	push   rbx
    aed1:	48 83 ec 38          	sub    rsp,0x38
    aed5:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    aed9:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    aee0:	00 00 
    aee2:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    aee6:	31 c0                	xor    eax,eax
    aee8:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    aeec:	48 8d 35 c5 2e 00 00 	lea    rsi,[rip+0x2ec5]        # ddb8 <_IO_stdin_used+0x1db8>
    aef3:	48 89 c7             	mov    rdi,rax
    aef6:	e8 15 79 ff ff       	call   2810 <strtok@plt>
    aefb:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    aeff:	eb 4c                	jmp    af4d <homenet_toi+0x85>
    af01:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    af05:	48 89 c7             	mov    rdi,rax
    af08:	e8 33 78 ff ff       	call   2740 <atoi@plt>
    af0d:	89 c3                	mov    ebx,eax
    af0f:	48 8d 45 df          	lea    rax,[rbp-0x21]
    af13:	48 89 c7             	mov    rdi,rax
    af16:	e8 35 77 ff ff       	call   2650 <strlen@plt>
    af1b:	48 8d 55 df          	lea    rdx,[rbp-0x21]
    af1f:	48 01 d0             	add    rax,rdx
    af22:	89 da                	mov    edx,ebx
    af24:	48 8d 35 8f 2e 00 00 	lea    rsi,[rip+0x2e8f]        # ddba <_IO_stdin_used+0x1dba>
    af2b:	48 89 c7             	mov    rdi,rax
    af2e:	b8 00 00 00 00       	mov    eax,0x0
    af33:	e8 58 77 ff ff       	call   2690 <sprintf@plt>
    af38:	48 8d 35 79 2e 00 00 	lea    rsi,[rip+0x2e79]        # ddb8 <_IO_stdin_used+0x1db8>
    af3f:	bf 00 00 00 00       	mov    edi,0x0
    af44:	e8 c7 78 ff ff       	call   2810 <strtok@plt>
    af49:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    af4d:	48 83 7d d0 00       	cmp    QWORD PTR [rbp-0x30],0x0
    af52:	75 ad                	jne    af01 <homenet_toi+0x39>
    af54:	48 8d 45 df          	lea    rax,[rbp-0x21]
    af58:	ba 10 00 00 00       	mov    edx,0x10
    af5d:	be 00 00 00 00       	mov    esi,0x0
    af62:	48 89 c7             	mov    rdi,rax
    af65:	e8 b6 77 ff ff       	call   2720 <strtol@plt>
    af6a:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    af6e:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    af75:	00 00 
    af77:	74 05                	je     af7e <homenet_toi+0xb6>
    af79:	e8 42 78 ff ff       	call   27c0 <__stack_chk_fail@plt>
    af7e:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    af82:	c9                   	leave  
    af83:	c3                   	ret    

000000000000af84 <tcp_check_sum_passed>:
    af84:	f3 0f 1e fa          	endbr64 
    af88:	55                   	push   rbp
    af89:	48 89 e5             	mov    rbp,rsp
    af8c:	41 54                	push   r12
    af8e:	53                   	push   rbx
    af8f:	48 83 ec 30          	sub    rsp,0x30
    af93:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    af97:	48 89 75 c0          	mov    QWORD PTR [rbp-0x40],rsi
    af9b:	bb 00 00 00 00       	mov    ebx,0x0
    afa0:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    afa4:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    afa8:	0f b7 c0             	movzx  eax,ax
    afab:	89 c7                	mov    edi,eax
    afad:	e8 ee 76 ff ff       	call   26a0 <ntohs@plt>
    afb2:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    afb6:	0f b6 12             	movzx  edx,BYTE PTR [rdx]
    afb9:	83 e2 0f             	and    edx,0xf
    afbc:	0f b6 d2             	movzx  edx,dl
    afbf:	c1 e2 02             	shl    edx,0x2
    afc2:	29 d0                	sub    eax,edx
    afc4:	66 89 45 de          	mov    WORD PTR [rbp-0x22],ax
    afc8:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    afcc:	0f b7 40 10          	movzx  eax,WORD PTR [rax+0x10]
    afd0:	0f b7 c0             	movzx  eax,ax
    afd3:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    afd7:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    afdb:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    afdf:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    afe3:	66 c7 40 10 00 00    	mov    WORD PTR [rax+0x10],0x0
    afe9:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    afed:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    aff0:	c1 e8 10             	shr    eax,0x10
    aff3:	89 c0                	mov    eax,eax
    aff5:	0f b7 c0             	movzx  eax,ax
    aff8:	48 01 c3             	add    rbx,rax
    affb:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    afff:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    b002:	89 c0                	mov    eax,eax
    b004:	0f b7 c0             	movzx  eax,ax
    b007:	48 01 c3             	add    rbx,rax
    b00a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    b00e:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    b011:	c1 e8 10             	shr    eax,0x10
    b014:	89 c0                	mov    eax,eax
    b016:	0f b7 c0             	movzx  eax,ax
    b019:	48 01 c3             	add    rbx,rax
    b01c:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    b020:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    b023:	89 c0                	mov    eax,eax
    b025:	0f b7 c0             	movzx  eax,ax
    b028:	48 01 c3             	add    rbx,rax
    b02b:	bf 06 00 00 00       	mov    edi,0x6
    b030:	e8 0b 75 ff ff       	call   2540 <htons@plt>
    b035:	0f b7 c0             	movzx  eax,ax
    b038:	48 01 c3             	add    rbx,rax
    b03b:	0f b7 45 de          	movzx  eax,WORD PTR [rbp-0x22]
    b03f:	89 c7                	mov    edi,eax
    b041:	e8 fa 74 ff ff       	call   2540 <htons@plt>
    b046:	0f b7 c0             	movzx  eax,ax
    b049:	48 01 c3             	add    rbx,rax
    b04c:	eb 1a                	jmp    b068 <tcp_check_sum_passed+0xe4>
    b04e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b052:	48 8d 50 14          	lea    rdx,[rax+0x14]
    b056:	48 89 55 c0          	mov    QWORD PTR [rbp-0x40],rdx
    b05a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b05d:	0f b6 c0             	movzx  eax,al
    b060:	48 01 c3             	add    rbx,rax
    b063:	66 83 6d de 02       	sub    WORD PTR [rbp-0x22],0x2
    b068:	66 83 7d de 01       	cmp    WORD PTR [rbp-0x22],0x1
    b06d:	77 df                	ja     b04e <tcp_check_sum_passed+0xca>
    b06f:	66 83 7d de 00       	cmp    WORD PTR [rbp-0x22],0x0
    b074:	74 1d                	je     b093 <tcp_check_sum_passed+0x10f>
    b076:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b07a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b07d:	0f b6 c0             	movzx  eax,al
    b080:	48 01 c3             	add    rbx,rax
    b083:	eb 0e                	jmp    b093 <tcp_check_sum_passed+0x10f>
    b085:	0f b7 c3             	movzx  eax,bx
    b088:	48 c1 eb 10          	shr    rbx,0x10
    b08c:	48 89 da             	mov    rdx,rbx
    b08f:	48 8d 1c 10          	lea    rbx,[rax+rdx*1]
    b093:	48 89 d8             	mov    rax,rbx
    b096:	48 c1 e8 10          	shr    rax,0x10
    b09a:	48 85 c0             	test   rax,rax
    b09d:	75 e6                	jne    b085 <tcp_check_sum_passed+0x101>
    b09f:	48 f7 d3             	not    rbx
    b0a2:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b0a6:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    b0aa:	66 89 50 10          	mov    WORD PTR [rax+0x10],dx
    b0ae:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b0b2:	0f b7 40 10          	movzx  eax,WORD PTR [rax+0x10]
    b0b6:	0f b7 c0             	movzx  eax,ax
    b0b9:	89 c7                	mov    edi,eax
    b0bb:	e8 e0 75 ff ff       	call   26a0 <ntohs@plt>
    b0c0:	44 0f b7 e0          	movzx  r12d,ax
    b0c4:	89 d8                	mov    eax,ebx
    b0c6:	0f b7 c0             	movzx  eax,ax
    b0c9:	89 c7                	mov    edi,eax
    b0cb:	e8 d0 75 ff ff       	call   26a0 <ntohs@plt>
    b0d0:	0f b7 c0             	movzx  eax,ax
    b0d3:	44 89 e2             	mov    edx,r12d
    b0d6:	89 c6                	mov    esi,eax
    b0d8:	48 8d 3d e0 2c 00 00 	lea    rdi,[rip+0x2ce0]        # ddbf <_IO_stdin_used+0x1dbf>
    b0df:	b8 00 00 00 00       	mov    eax,0x0
    b0e4:	e8 e7 73 ff ff       	call   24d0 <printf@plt>
    b0e9:	89 d8                	mov    eax,ebx
    b0eb:	0f b7 c0             	movzx  eax,ax
    b0ee:	89 c7                	mov    edi,eax
    b0f0:	e8 ab 75 ff ff       	call   26a0 <ntohs@plt>
    b0f5:	89 c3                	mov    ebx,eax
    b0f7:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    b0fb:	0f b7 c0             	movzx  eax,ax
    b0fe:	89 c7                	mov    edi,eax
    b100:	e8 9b 75 ff ff       	call   26a0 <ntohs@plt>
    b105:	66 39 c3             	cmp    bx,ax
    b108:	75 07                	jne    b111 <tcp_check_sum_passed+0x18d>
    b10a:	b8 01 00 00 00       	mov    eax,0x1
    b10f:	eb 05                	jmp    b116 <tcp_check_sum_passed+0x192>
    b111:	b8 00 00 00 00       	mov    eax,0x0
    b116:	48 83 c4 30          	add    rsp,0x30
    b11a:	5b                   	pop    rbx
    b11b:	41 5c                	pop    r12
    b11d:	5d                   	pop    rbp
    b11e:	c3                   	ret    

000000000000b11f <run_hello_script>:
    b11f:	f3 0f 1e fa          	endbr64 
    b123:	55                   	push   rbp
    b124:	48 89 e5             	mov    rbp,rsp
    b127:	48 83 ec 10          	sub    rsp,0x10
    b12b:	e8 60 76 ff ff       	call   2790 <luaL_newstate@plt>
    b130:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b134:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b138:	48 89 c7             	mov    rdi,rax
    b13b:	e8 70 76 ff ff       	call   27b0 <luaL_openlibs@plt>
    b140:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b144:	ba 00 00 00 00       	mov    edx,0x0
    b149:	48 8d 35 80 2c 00 00 	lea    rsi,[rip+0x2c80]        # ddd0 <_IO_stdin_used+0x1dd0>
    b150:	48 89 c7             	mov    rdi,rax
    b153:	e8 d8 75 ff ff       	call   2730 <luaL_loadfilex@plt>
    b158:	85 c0                	test   eax,eax
    b15a:	75 2b                	jne    b187 <run_hello_script+0x68>
    b15c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b160:	41 b9 00 00 00 00    	mov    r9d,0x0
    b166:	41 b8 00 00 00 00    	mov    r8d,0x0
    b16c:	b9 00 00 00 00       	mov    ecx,0x0
    b171:	ba ff ff ff ff       	mov    edx,0xffffffff
    b176:	be 00 00 00 00       	mov    esi,0x0
    b17b:	48 89 c7             	mov    rdi,rax
    b17e:	e8 5d 75 ff ff       	call   26e0 <lua_pcallk@plt>
    b183:	85 c0                	test   eax,eax
    b185:	74 07                	je     b18e <run_hello_script+0x6f>
    b187:	b8 01 00 00 00       	mov    eax,0x1
    b18c:	eb 05                	jmp    b193 <run_hello_script+0x74>
    b18e:	b8 00 00 00 00       	mov    eax,0x0
    b193:	85 c0                	test   eax,eax
    b195:	75 1e                	jne    b1b5 <run_hello_script+0x96>
    b197:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b19b:	48 89 c7             	mov    rdi,rax
    b19e:	e8 dd 75 ff ff       	call   2780 <lua_gettop@plt>
    b1a3:	f7 d0                	not    eax
    b1a5:	89 c2                	mov    edx,eax
    b1a7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b1ab:	89 d6                	mov    esi,edx
    b1ad:	48 89 c7             	mov    rdi,rax
    b1b0:	e8 5b 74 ff ff       	call   2610 <lua_settop@plt>
    b1b5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b1b9:	48 89 c7             	mov    rdi,rax
    b1bc:	e8 5f 76 ff ff       	call   2820 <lua_close@plt>
    b1c1:	90                   	nop
    b1c2:	c9                   	leave  
    b1c3:	c3                   	ret    

000000000000b1c4 <collect_scripts>:
    b1c4:	f3 0f 1e fa          	endbr64 
    b1c8:	55                   	push   rbp
    b1c9:	48 89 e5             	mov    rbp,rsp
    b1cc:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    b1d3:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b1da:	00 00 
    b1dc:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b1e0:	31 c0                	xor    eax,eax
    b1e2:	48 8d 35 05 2c 00 00 	lea    rsi,[rip+0x2c05]        # ddee <_IO_stdin_used+0x1dee>
    b1e9:	48 8d 3d 00 2c 00 00 	lea    rdi,[rip+0x2c00]        # ddf0 <_IO_stdin_used+0x1df0>
    b1f0:	e8 cb 73 ff ff       	call   25c0 <fopen@plt>
    b1f5:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
    b1f9:	48 83 7d 80 00       	cmp    QWORD PTR [rbp-0x80],0x0
    b1fe:	75 16                	jne    b216 <collect_scripts+0x52>
    b200:	48 8d 3d 01 2c 00 00 	lea    rdi,[rip+0x2c01]        # de08 <_IO_stdin_used+0x1e08>
    b207:	e8 24 73 ff ff       	call   2530 <puts@plt>
    b20c:	bf ff ff ff ff       	mov    edi,0xffffffff
    b211:	e8 3a 73 ff ff       	call   2550 <exit@plt>
    b216:	48 c7 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],0x0
    b21d:	00 00 00 00 
    b221:	48 8d 45 90          	lea    rax,[rbp-0x70]
    b225:	ba 00 00 00 00       	mov    edx,0x0
    b22a:	48 8d 35 19 2c 00 00 	lea    rsi,[rip+0x2c19]        # de4a <_IO_stdin_used+0x1e4a>
    b231:	48 89 c7             	mov    rdi,rax
    b234:	e8 17 75 ff ff       	call   2750 <regcomp@plt>
    b239:	e9 86 00 00 00       	jmp    b2c4 <collect_scripts+0x100>
    b23e:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b245:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b248:	3c 23                	cmp    al,0x23
    b24a:	75 02                	jne    b24e <collect_scripts+0x8a>
    b24c:	eb 76                	jmp    b2c4 <collect_scripts+0x100>
    b24e:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b255:	ba 0e 00 00 00       	mov    edx,0xe
    b25a:	48 8d 35 f3 2b 00 00 	lea    rsi,[rip+0x2bf3]        # de54 <_IO_stdin_used+0x1e54>
    b261:	48 89 c7             	mov    rdi,rax
    b264:	e8 37 73 ff ff       	call   25a0 <strncmp@plt>
    b269:	85 c0                	test   eax,eax
    b26b:	75 34                	jne    b2a1 <collect_scripts+0xdd>
    b26d:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b274:	48 8d 50 0e          	lea    rdx,[rax+0xe]
    b278:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b27c:	48 89 d6             	mov    rsi,rdx
    b27f:	48 89 c7             	mov    rdi,rax
    b282:	e8 79 75 ff ff       	call   2800 <strcpy@plt>
    b287:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b28b:	48 8d 35 d1 2b 00 00 	lea    rsi,[rip+0x2bd1]        # de63 <_IO_stdin_used+0x1e63>
    b292:	48 89 c7             	mov    rdi,rax
    b295:	e8 d6 75 ff ff       	call   2870 <strcspn@plt>
    b29a:	c6 44 05 d0 00       	mov    BYTE PTR [rbp+rax*1-0x30],0x0
    b29f:	eb 23                	jmp    b2c4 <collect_scripts+0x100>
    b2a1:	48 8b b5 78 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x88]
    b2a8:	48 8d 45 90          	lea    rax,[rbp-0x70]
    b2ac:	41 b8 00 00 00 00    	mov    r8d,0x0
    b2b2:	b9 00 00 00 00       	mov    ecx,0x0
    b2b7:	ba 00 00 00 00       	mov    edx,0x0
    b2bc:	48 89 c7             	mov    rdi,rax
    b2bf:	e8 0c 73 ff ff       	call   25d0 <regexec@plt>
    b2c4:	48 8b 55 80          	mov    rdx,QWORD PTR [rbp-0x80]
    b2c8:	48 8d 8d 70 ff ff ff 	lea    rcx,[rbp-0x90]
    b2cf:	48 8d 85 78 ff ff ff 	lea    rax,[rbp-0x88]
    b2d6:	48 89 ce             	mov    rsi,rcx
    b2d9:	48 89 c7             	mov    rdi,rax
    b2dc:	e8 0f 75 ff ff       	call   27f0 <getline@plt>
    b2e1:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    b2e5:	48 83 7d 88 ff       	cmp    QWORD PTR [rbp-0x78],0xffffffffffffffff
    b2ea:	0f 85 4e ff ff ff    	jne    b23e <collect_scripts+0x7a>
    b2f0:	90                   	nop
    b2f1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b2f5:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    b2fc:	00 00 
    b2fe:	74 05                	je     b305 <collect_scripts+0x141>
    b300:	e8 bb 74 ff ff       	call   27c0 <__stack_chk_fail@plt>
    b305:	c9                   	leave  
    b306:	c3                   	ret    

000000000000b307 <ip6decode>:
    b307:	f3 0f 1e fa          	endbr64 
    b30b:	55                   	push   rbp
    b30c:	48 89 e5             	mov    rbp,rsp
    b30f:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    b316:	48 89 bd 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdi
    b31d:	48 89 b5 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rsi
    b324:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b32b:	00 00 
    b32d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b331:	31 c0                	xor    eax,eax
    b333:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b33a:	48 83 c0 0e          	add    rax,0xe
    b33e:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    b342:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    b346:	48 83 c0 08          	add    rax,0x8
    b34a:	48 89 c7             	mov    rdi,rax
    b34d:	e8 cb 7e ff ff       	call   321d <inet6_ntoa>
    b352:	48 89 c1             	mov    rcx,rax
    b355:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b359:	ba 29 00 00 00       	mov    edx,0x29
    b35e:	48 89 ce             	mov    rsi,rcx
    b361:	48 89 c7             	mov    rdi,rax
    b364:	e8 e7 74 ff ff       	call   2850 <strncpy@plt>
    b369:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    b36d:	48 83 c0 18          	add    rax,0x18
    b371:	48 89 c7             	mov    rdi,rax
    b374:	e8 a4 7e ff ff       	call   321d <inet6_ntoa>
    b379:	48 89 c1             	mov    rcx,rax
    b37c:	48 8d 45 90          	lea    rax,[rbp-0x70]
    b380:	ba 29 00 00 00       	mov    edx,0x29
    b385:	48 89 ce             	mov    rsi,rcx
    b388:	48 89 c7             	mov    rdi,rax
    b38b:	e8 c0 74 ff ff       	call   2850 <strncpy@plt>
    b390:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    b394:	0f b6 40 06          	movzx  eax,BYTE PTR [rax+0x6]
    b398:	0f b6 c0             	movzx  eax,al
    b39b:	85 c0                	test   eax,eax
    b39d:	75 1c                	jne    b3bb <ip6decode+0xb4>
    b39f:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    b3a3:	48 8d 4d c0          	lea    rcx,[rbp-0x40]
    b3a7:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b3ae:	48 89 ce             	mov    rsi,rcx
    b3b1:	48 89 c7             	mov    rdi,rax
    b3b4:	e8 ff 86 ff ff       	call   3ab8 <ip6_icmp_decode>
    b3b9:	eb 28                	jmp    b3e3 <ip6decode+0xdc>
    b3bb:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    b3bf:	0f b6 40 06          	movzx  eax,BYTE PTR [rax+0x6]
    b3c3:	0f b6 c8             	movzx  ecx,al
    b3c6:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    b3ca:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b3ce:	48 89 c6             	mov    rsi,rax
    b3d1:	48 8d 3d 90 2a 00 00 	lea    rdi,[rip+0x2a90]        # de68 <_IO_stdin_used+0x1e68>
    b3d8:	b8 00 00 00 00       	mov    eax,0x0
    b3dd:	e8 ee 70 ff ff       	call   24d0 <printf@plt>
    b3e2:	90                   	nop
    b3e3:	90                   	nop
    b3e4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b3e8:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    b3ef:	00 00 
    b3f1:	74 05                	je     b3f8 <ip6decode+0xf1>
    b3f3:	e8 c8 73 ff ff       	call   27c0 <__stack_chk_fail@plt>
    b3f8:	c9                   	leave  
    b3f9:	c3                   	ret    

000000000000b3fa <print_mem_map>:
    b3fa:	f3 0f 1e fa          	endbr64 
    b3fe:	55                   	push   rbp
    b3ff:	48 89 e5             	mov    rbp,rsp
    b402:	48 83 ec 10          	sub    rsp,0x10
    b406:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    b40d:	eb 4c                	jmp    b45b <print_mem_map+0x61>
    b40f:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    b412:	48 63 d0             	movsxd rdx,eax
    b415:	48 89 d0             	mov    rax,rdx
    b418:	48 c1 e0 02          	shl    rax,0x2
    b41c:	48 01 d0             	add    rax,rdx
    b41f:	48 c1 e0 03          	shl    rax,0x3
    b423:	48 8d 15 d6 d3 12 00 	lea    rdx,[rip+0x12d3d6]        # 138800 <fn_mem_map>
    b42a:	48 01 d0             	add    rax,rdx
    b42d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b431:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b435:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    b438:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b43c:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    b43f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b443:	48 89 c6             	mov    rsi,rax
    b446:	48 8d 3d 43 2a 00 00 	lea    rdi,[rip+0x2a43]        # de90 <_IO_stdin_used+0x1e90>
    b44d:	b8 00 00 00 00       	mov    eax,0x0
    b452:	e8 79 70 ff ff       	call   24d0 <printf@plt>
    b457:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    b45b:	8b 05 9f fb 12 00    	mov    eax,DWORD PTR [rip+0x12fb9f]        # 13b000 <fn_num>
    b461:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    b464:	7c a9                	jl     b40f <print_mem_map+0x15>
    b466:	90                   	nop
    b467:	90                   	nop
    b468:	c9                   	leave  
    b469:	c3                   	ret    

000000000000b46a <crash_handler>:
    b46a:	f3 0f 1e fa          	endbr64 
    b46e:	55                   	push   rbp
    b46f:	48 89 e5             	mov    rbp,rsp
    b472:	41 54                	push   r12
    b474:	53                   	push   rbx
    b475:	48 81 ec f0 00 00 00 	sub    rsp,0xf0
    b47c:	89 bd 0c ff ff ff    	mov    DWORD PTR [rbp-0xf4],edi
    b482:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b489:	00 00 
    b48b:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    b48f:	31 c0                	xor    eax,eax
    b491:	48 8d 85 30 ff ff ff 	lea    rax,[rbp-0xd0]
    b498:	be 14 00 00 00       	mov    esi,0x14
    b49d:	48 89 c7             	mov    rdi,rax
    b4a0:	e8 5b 70 ff ff       	call   2500 <backtrace@plt>
    b4a5:	89 85 18 ff ff ff    	mov    DWORD PTR [rbp-0xe8],eax
    b4ab:	8b 95 18 ff ff ff    	mov    edx,DWORD PTR [rbp-0xe8]
    b4b1:	48 8d 85 30 ff ff ff 	lea    rax,[rbp-0xd0]
    b4b8:	89 d6                	mov    esi,edx
    b4ba:	48 89 c7             	mov    rdi,rax
    b4bd:	e8 6e 71 ff ff       	call   2630 <backtrace_symbols@plt>
    b4c2:	48 89 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rax
    b4c9:	b8 00 00 00 00       	mov    eax,0x0
    b4ce:	e8 16 7f ff ff       	call   33e9 <get_formated_time>
    b4d3:	48 89 c6             	mov    rsi,rax
    b4d6:	48 8d 3d d3 29 00 00 	lea    rdi,[rip+0x29d3]        # deb0 <_IO_stdin_used+0x1eb0>
    b4dd:	b8 00 00 00 00       	mov    eax,0x0
    b4e2:	e8 e9 6f ff ff       	call   24d0 <printf@plt>
    b4e7:	48 8d 3d f1 29 00 00 	lea    rdi,[rip+0x29f1]        # dedf <_IO_stdin_used+0x1edf>
    b4ee:	e8 3d 70 ff ff       	call   2530 <puts@plt>
    b4f3:	48 83 bd 20 ff ff ff 	cmp    QWORD PTR [rbp-0xe0],0x0
    b4fa:	00 
    b4fb:	0f 84 6d 01 00 00    	je     b66e <crash_handler+0x204>
    b501:	c7 85 14 ff ff ff 00 	mov    DWORD PTR [rbp-0xec],0x0
    b508:	00 00 00 
    b50b:	e9 4c 01 00 00       	jmp    b65c <crash_handler+0x1f2>
    b510:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b516:	48 98                	cdqe   
    b518:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    b51f:	00 
    b520:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b527:	48 01 d0             	add    rax,rdx
    b52a:	48 8b 00             	mov    rax,QWORD PTR [rax]
    b52d:	48 8d 35 bf 29 00 00 	lea    rsi,[rip+0x29bf]        # def3 <_IO_stdin_used+0x1ef3>
    b534:	48 89 c7             	mov    rdi,rax
    b537:	e8 b4 71 ff ff       	call   26f0 <strstr@plt>
    b53c:	48 85 c0             	test   rax,rax
    b53f:	0f 85 0f 01 00 00    	jne    b654 <crash_handler+0x1ea>
    b545:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b54b:	48 98                	cdqe   
    b54d:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    b554:	00 
    b555:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b55c:	48 01 d0             	add    rax,rdx
    b55f:	4c 8b 20             	mov    r12,QWORD PTR [rax]
    b562:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b568:	48 98                	cdqe   
    b56a:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    b571:	00 
    b572:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b579:	48 01 d0             	add    rax,rdx
    b57c:	48 8b 00             	mov    rax,QWORD PTR [rax]
    b57f:	be 2b 00 00 00       	mov    esi,0x2b
    b584:	48 89 c7             	mov    rdi,rax
    b587:	e8 f8 7f ff ff       	call   3584 <strloc>
    b58c:	48 98                	cdqe   
    b58e:	48 83 c0 01          	add    rax,0x1
    b592:	49 8d 14 04          	lea    rdx,[r12+rax*1]
    b596:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b59a:	48 8d 35 56 29 00 00 	lea    rsi,[rip+0x2956]        # def7 <_IO_stdin_used+0x1ef7>
    b5a1:	48 89 c7             	mov    rdi,rax
    b5a4:	b8 00 00 00 00       	mov    eax,0x0
    b5a9:	e8 e2 70 ff ff       	call   2690 <sprintf@plt>
    b5ae:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b5b2:	be 29 00 00 00       	mov    esi,0x29
    b5b7:	48 89 c7             	mov    rdi,rax
    b5ba:	e8 c5 7f ff ff       	call   3584 <strloc>
    b5bf:	48 98                	cdqe   
    b5c1:	c6 44 05 d0 00       	mov    BYTE PTR [rbp+rax*1-0x30],0x0
    b5c6:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b5ca:	ba 10 00 00 00       	mov    edx,0x10
    b5cf:	be 00 00 00 00       	mov    esi,0x0
    b5d4:	48 89 c7             	mov    rdi,rax
    b5d7:	e8 44 71 ff ff       	call   2720 <strtol@plt>
    b5dc:	89 85 1c ff ff ff    	mov    DWORD PTR [rbp-0xe4],eax
    b5e2:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [rbp-0xe4]
    b5e8:	89 c7                	mov    edi,eax
    b5ea:	e8 20 01 00 00       	call   b70f <offset_search>
    b5ef:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
    b5f6:	83 bd 1c ff ff ff 00 	cmp    DWORD PTR [rbp-0xe4],0x0
    b5fd:	74 3a                	je     b639 <crash_handler+0x1cf>
    b5ff:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    b606:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    b609:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    b610:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    b613:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    b61a:	8b b5 1c ff ff ff    	mov    esi,DWORD PTR [rbp-0xe4]
    b620:	41 89 f0             	mov    r8d,esi
    b623:	48 89 c6             	mov    rsi,rax
    b626:	48 8d 3d d3 28 00 00 	lea    rdi,[rip+0x28d3]        # df00 <_IO_stdin_used+0x1f00>
    b62d:	b8 00 00 00 00       	mov    eax,0x0
    b632:	e8 99 6e ff ff       	call   24d0 <printf@plt>
    b637:	eb 1c                	jmp    b655 <crash_handler+0x1eb>
    b639:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [rbp-0xe4]
    b63f:	89 c6                	mov    esi,eax
    b641:	48 8d 3d f0 28 00 00 	lea    rdi,[rip+0x28f0]        # df38 <_IO_stdin_used+0x1f38>
    b648:	b8 00 00 00 00       	mov    eax,0x0
    b64d:	e8 7e 6e ff ff       	call   24d0 <printf@plt>
    b652:	eb 01                	jmp    b655 <crash_handler+0x1eb>
    b654:	90                   	nop
    b655:	83 85 14 ff ff ff 01 	add    DWORD PTR [rbp-0xec],0x1
    b65c:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b662:	3b 85 18 ff ff ff    	cmp    eax,DWORD PTR [rbp-0xe8]
    b668:	0f 8c a2 fe ff ff    	jl     b510 <crash_handler+0xa6>
    b66e:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b675:	48 89 c7             	mov    rdi,rax
    b678:	e8 c3 6f ff ff       	call   2640 <free@plt>
    b67d:	48 8d 3d de 28 00 00 	lea    rdi,[rip+0x28de]        # df62 <_IO_stdin_used+0x1f62>
    b684:	e8 a7 6e ff ff       	call   2530 <puts@plt>
    b689:	89 c6                	mov    esi,eax
    b68b:	48 8d 3d df 28 00 00 	lea    rdi,[rip+0x28df]        # df71 <_IO_stdin_used+0x1f71>
    b692:	b8 00 00 00 00       	mov    eax,0x0
    b697:	e8 34 6e ff ff       	call   24d0 <printf@plt>
    b69c:	89 d8                	mov    eax,ebx
    b69e:	89 c6                	mov    esi,eax
    b6a0:	48 8d 3d da 28 00 00 	lea    rdi,[rip+0x28da]        # df81 <_IO_stdin_used+0x1f81>
    b6a7:	b8 00 00 00 00       	mov    eax,0x0
    b6ac:	e8 1f 6e ff ff       	call   24d0 <printf@plt>
    b6b1:	89 d8                	mov    eax,ebx
    b6b3:	89 c6                	mov    esi,eax
    b6b5:	48 8d 3d d5 28 00 00 	lea    rdi,[rip+0x28d5]        # df91 <_IO_stdin_used+0x1f91>
    b6bc:	b8 00 00 00 00       	mov    eax,0x0
    b6c1:	e8 0a 6e ff ff       	call   24d0 <printf@plt>
    b6c6:	89 c8                	mov    eax,ecx
    b6c8:	89 c6                	mov    esi,eax
    b6ca:	48 8d 3d d0 28 00 00 	lea    rdi,[rip+0x28d0]        # dfa1 <_IO_stdin_used+0x1fa1>
    b6d1:	b8 00 00 00 00       	mov    eax,0x0
    b6d6:	e8 f5 6d ff ff       	call   24d0 <printf@plt>
    b6db:	89 e0                	mov    eax,esp
    b6dd:	89 c6                	mov    esi,eax
    b6df:	48 8d 3d cb 28 00 00 	lea    rdi,[rip+0x28cb]        # dfb1 <_IO_stdin_used+0x1fb1>
    b6e6:	b8 00 00 00 00       	mov    eax,0x0
    b6eb:	e8 e0 6d ff ff       	call   24d0 <printf@plt>
    b6f0:	89 e8                	mov    eax,ebp
    b6f2:	89 c6                	mov    esi,eax
    b6f4:	48 8d 3d c6 28 00 00 	lea    rdi,[rip+0x28c6]        # dfc1 <_IO_stdin_used+0x1fc1>
    b6fb:	b8 00 00 00 00       	mov    eax,0x0
    b700:	e8 cb 6d ff ff       	call   24d0 <printf@plt>
    b705:	bf 01 00 00 00       	mov    edi,0x1
    b70a:	e8 41 6e ff ff       	call   2550 <exit@plt>

000000000000b70f <offset_search>:
    b70f:	f3 0f 1e fa          	endbr64 
    b713:	55                   	push   rbp
    b714:	48 89 e5             	mov    rbp,rsp
    b717:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    b71a:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    b721:	eb 44                	jmp    b767 <offset_search+0x58>
    b723:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    b726:	48 63 d0             	movsxd rdx,eax
    b729:	48 89 d0             	mov    rax,rdx
    b72c:	48 c1 e0 02          	shl    rax,0x2
    b730:	48 01 d0             	add    rax,rdx
    b733:	48 c1 e0 03          	shl    rax,0x3
    b737:	48 8d 15 c2 d0 12 00 	lea    rdx,[rip+0x12d0c2]        # 138800 <fn_mem_map>
    b73e:	48 01 d0             	add    rax,rdx
    b741:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b745:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b749:	8b 40 20             	mov    eax,DWORD PTR [rax+0x20]
    b74c:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    b74f:	76 12                	jbe    b763 <offset_search+0x54>
    b751:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b755:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    b758:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    b75b:	73 06                	jae    b763 <offset_search+0x54>
    b75d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b761:	eb 14                	jmp    b777 <offset_search+0x68>
    b763:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    b767:	8b 05 93 f8 12 00    	mov    eax,DWORD PTR [rip+0x12f893]        # 13b000 <fn_num>
    b76d:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    b770:	7c b1                	jl     b723 <offset_search+0x14>
    b772:	b8 00 00 00 00       	mov    eax,0x0
    b777:	5d                   	pop    rbp
    b778:	c3                   	ret    

000000000000b779 <add_fn>:
    b779:	f3 0f 1e fa          	endbr64 
    b77d:	55                   	push   rbp
    b77e:	48 89 e5             	mov    rbp,rsp
    b781:	48 83 ec 20          	sub    rsp,0x20
    b785:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    b789:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    b78c:	89 55 e0             	mov    DWORD PTR [rbp-0x20],edx
    b78f:	8b 05 6b f8 12 00    	mov    eax,DWORD PTR [rip+0x12f86b]        # 13b000 <fn_num>
    b795:	8d 50 01             	lea    edx,[rax+0x1]
    b798:	89 15 62 f8 12 00    	mov    DWORD PTR [rip+0x12f862],edx        # 13b000 <fn_num>
    b79e:	48 63 d0             	movsxd rdx,eax
    b7a1:	48 89 d0             	mov    rax,rdx
    b7a4:	48 c1 e0 02          	shl    rax,0x2
    b7a8:	48 01 d0             	add    rax,rdx
    b7ab:	48 c1 e0 03          	shl    rax,0x3
    b7af:	48 8d 15 4a d0 12 00 	lea    rdx,[rip+0x12d04a]        # 138800 <fn_mem_map>
    b7b6:	48 01 d0             	add    rax,rdx
    b7b9:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b7bd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b7c1:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    b7c5:	48 89 d6             	mov    rsi,rdx
    b7c8:	48 89 c7             	mov    rdi,rax
    b7cb:	e8 30 70 ff ff       	call   2800 <strcpy@plt>
    b7d0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b7d4:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    b7d7:	89 50 20             	mov    DWORD PTR [rax+0x20],edx
    b7da:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b7de:	8b 55 e0             	mov    edx,DWORD PTR [rbp-0x20]
    b7e1:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    b7e4:	90                   	nop
    b7e5:	c9                   	leave  
    b7e6:	c3                   	ret    

000000000000b7e7 <load_fn_mem_map>:
    b7e7:	f3 0f 1e fa          	endbr64 
    b7eb:	55                   	push   rbp
    b7ec:	48 89 e5             	mov    rbp,rsp
    b7ef:	53                   	push   rbx
    b7f0:	48 83 ec 78          	sub    rsp,0x78
    b7f4:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b7fb:	00 00 
    b7fd:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    b801:	31 c0                	xor    eax,eax
    b803:	48 8d 35 ce 27 00 00 	lea    rsi,[rip+0x27ce]        # dfd8 <_IO_stdin_used+0x1fd8>
    b80a:	48 8d 3d c9 27 00 00 	lea    rdi,[rip+0x27c9]        # dfda <_IO_stdin_used+0x1fda>
    b811:	e8 aa 6d ff ff       	call   25c0 <fopen@plt>
    b816:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    b81a:	48 83 7d b0 00       	cmp    QWORD PTR [rbp-0x50],0x0
    b81f:	75 16                	jne    b837 <load_fn_mem_map+0x50>
    b821:	48 8d 3d d0 27 00 00 	lea    rdi,[rip+0x27d0]        # dff8 <_IO_stdin_used+0x1ff8>
    b828:	e8 03 6d ff ff       	call   2530 <puts@plt>
    b82d:	bf ff ff ff ff       	mov    edi,0xffffffff
    b832:	e8 19 6d ff ff       	call   2550 <exit@plt>
    b837:	48 c7 45 98 00 00 00 	mov    QWORD PTR [rbp-0x68],0x0
    b83e:	00 
    b83f:	48 c7 45 a0 00 00 00 	mov    QWORD PTR [rbp-0x60],0x0
    b846:	00 
    b847:	e9 db 00 00 00       	jmp    b927 <load_fn_mem_map+0x140>
    b84c:	48 8b 5d 98          	mov    rbx,QWORD PTR [rbp-0x68]
    b850:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    b854:	48 8d 35 04 28 00 00 	lea    rsi,[rip+0x2804]        # e05f <_IO_stdin_used+0x205f>
    b85b:	48 89 c7             	mov    rdi,rax
    b85e:	e8 0d 70 ff ff       	call   2870 <strcspn@plt>
    b863:	48 01 d8             	add    rax,rbx
    b866:	c6 00 00             	mov    BYTE PTR [rax],0x0
    b869:	c7 45 94 00 00 00 00 	mov    DWORD PTR [rbp-0x6c],0x0
    b870:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    b874:	48 8d 35 e6 27 00 00 	lea    rsi,[rip+0x27e6]        # e061 <_IO_stdin_used+0x2061>
    b87b:	48 89 c7             	mov    rdi,rax
    b87e:	e8 8d 6f ff ff       	call   2810 <strtok@plt>
    b883:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    b887:	eb 7f                	jmp    b908 <load_fn_mem_map+0x121>
    b889:	83 7d 94 02          	cmp    DWORD PTR [rbp-0x6c],0x2
    b88d:	74 44                	je     b8d3 <load_fn_mem_map+0xec>
    b88f:	83 7d 94 02          	cmp    DWORD PTR [rbp-0x6c],0x2
    b893:	7f 59                	jg     b8ee <load_fn_mem_map+0x107>
    b895:	83 7d 94 00          	cmp    DWORD PTR [rbp-0x6c],0x0
    b899:	74 08                	je     b8a3 <load_fn_mem_map+0xbc>
    b89b:	83 7d 94 01          	cmp    DWORD PTR [rbp-0x6c],0x1
    b89f:	74 17                	je     b8b8 <load_fn_mem_map+0xd1>
    b8a1:	eb 4b                	jmp    b8ee <load_fn_mem_map+0x107>
    b8a3:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    b8a7:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b8ab:	48 89 d6             	mov    rsi,rdx
    b8ae:	48 89 c7             	mov    rdi,rax
    b8b1:	e8 4a 6f ff ff       	call   2800 <strcpy@plt>
    b8b6:	eb 37                	jmp    b8ef <load_fn_mem_map+0x108>
    b8b8:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    b8bc:	ba 10 00 00 00       	mov    edx,0x10
    b8c1:	be 00 00 00 00       	mov    esi,0x0
    b8c6:	48 89 c7             	mov    rdi,rax
    b8c9:	e8 52 6e ff ff       	call   2720 <strtol@plt>
    b8ce:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    b8d1:	eb 1c                	jmp    b8ef <load_fn_mem_map+0x108>
    b8d3:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    b8d7:	ba 10 00 00 00       	mov    edx,0x10
    b8dc:	be 00 00 00 00       	mov    esi,0x0
    b8e1:	48 89 c7             	mov    rdi,rax
    b8e4:	e8 37 6e ff ff       	call   2720 <strtol@plt>
    b8e9:	89 45 90             	mov    DWORD PTR [rbp-0x70],eax
    b8ec:	eb 01                	jmp    b8ef <load_fn_mem_map+0x108>
    b8ee:	90                   	nop
    b8ef:	48 8d 35 6b 27 00 00 	lea    rsi,[rip+0x276b]        # e061 <_IO_stdin_used+0x2061>
    b8f6:	bf 00 00 00 00       	mov    edi,0x0
    b8fb:	e8 10 6f ff ff       	call   2810 <strtok@plt>
    b900:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    b904:	83 45 94 01          	add    DWORD PTR [rbp-0x6c],0x1
    b908:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
    b90d:	0f 85 76 ff ff ff    	jne    b889 <load_fn_mem_map+0xa2>
    b913:	8b 55 90             	mov    edx,DWORD PTR [rbp-0x70]
    b916:	8b 4d 8c             	mov    ecx,DWORD PTR [rbp-0x74]
    b919:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b91d:	89 ce                	mov    esi,ecx
    b91f:	48 89 c7             	mov    rdi,rax
    b922:	e8 52 fe ff ff       	call   b779 <add_fn>
    b927:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
    b92b:	48 8d 4d a0          	lea    rcx,[rbp-0x60]
    b92f:	48 8d 45 98          	lea    rax,[rbp-0x68]
    b933:	48 89 ce             	mov    rsi,rcx
    b936:	48 89 c7             	mov    rdi,rax
    b939:	e8 b2 6e ff ff       	call   27f0 <getline@plt>
    b93e:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    b942:	48 83 7d b8 ff       	cmp    QWORD PTR [rbp-0x48],0xffffffffffffffff
    b947:	0f 85 ff fe ff ff    	jne    b84c <load_fn_mem_map+0x65>
    b94d:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b951:	48 89 c7             	mov    rdi,rax
    b954:	e8 e7 6e ff ff       	call   2840 <fclose@plt>
    b959:	90                   	nop
    b95a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    b95e:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    b965:	00 00 
    b967:	74 05                	je     b96e <load_fn_mem_map+0x187>
    b969:	e8 52 6e ff ff       	call   27c0 <__stack_chk_fail@plt>
    b96e:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    b972:	c9                   	leave  
    b973:	c3                   	ret    

000000000000b974 <pps_monitor>:
    b974:	f3 0f 1e fa          	endbr64 
    b978:	55                   	push   rbp
    b979:	48 89 e5             	mov    rbp,rsp
    b97c:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    b983:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b98a:	00 00 
    b98c:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b990:	31 c0                	xor    eax,eax
    b992:	8b 05 88 f6 12 00    	mov    eax,DWORD PTR [rip+0x12f688]        # 13b020 <current_log_num.3>
    b998:	85 c0                	test   eax,eax
    b99a:	0f 85 bd 00 00 00    	jne    ba5d <pps_monitor+0xe9>
    b9a0:	c7 05 7a f6 12 00 00 	mov    DWORD PTR [rip+0x12f67a],0x0        # 13b024 <lines_written.2>
    b9a7:	00 00 00 
    b9aa:	48 8d 3d b7 26 00 00 	lea    rdi,[rip+0x26b7]        # e068 <_IO_stdin_used+0x2068>
    b9b1:	e8 7a 6b ff ff       	call   2530 <puts@plt>
    b9b6:	48 8d 3d ce 26 00 00 	lea    rdi,[rip+0x26ce]        # e08b <_IO_stdin_used+0x208b>
    b9bd:	e8 9e 6c ff ff       	call   2660 <opendir@plt>
    b9c2:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    b9c6:	48 83 7d a0 00       	cmp    QWORD PTR [rbp-0x60],0x0
    b9cb:	75 27                	jne    b9f4 <pps_monitor+0x80>
    b9cd:	48 8d 3d d3 26 00 00 	lea    rdi,[rip+0x26d3]        # e0a7 <_IO_stdin_used+0x20a7>
    b9d4:	e8 d7 6e ff ff       	call   28b0 <perror@plt>
    b9d9:	c7 05 3d f6 12 00 00 	mov    DWORD PTR [rip+0x12f63d],0x0        # 13b020 <current_log_num.3>
    b9e0:	00 00 00 
    b9e3:	eb 35                	jmp    ba1a <pps_monitor+0xa6>
    b9e5:	8b 05 35 f6 12 00    	mov    eax,DWORD PTR [rip+0x12f635]        # 13b020 <current_log_num.3>
    b9eb:	83 c0 01             	add    eax,0x1
    b9ee:	89 05 2c f6 12 00    	mov    DWORD PTR [rip+0x12f62c],eax        # 13b020 <current_log_num.3>
    b9f4:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
    b9f8:	48 89 c7             	mov    rdi,rax
    b9fb:	e8 80 6c ff ff       	call   2680 <readdir@plt>
    ba00:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    ba04:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
    ba09:	75 da                	jne    b9e5 <pps_monitor+0x71>
    ba0b:	8b 05 0f f6 12 00    	mov    eax,DWORD PTR [rip+0x12f60f]        # 13b020 <current_log_num.3>
    ba11:	83 e8 02             	sub    eax,0x2
    ba14:	89 05 06 f6 12 00    	mov    DWORD PTR [rip+0x12f606],eax        # 13b020 <current_log_num.3>
    ba1a:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
    ba1e:	48 89 c7             	mov    rdi,rax
    ba21:	e8 3a 6e ff ff       	call   2860 <closedir@plt>
    ba26:	8b 05 f4 f5 12 00    	mov    eax,DWORD PTR [rip+0x12f5f4]        # 13b020 <current_log_num.3>
    ba2c:	89 c6                	mov    esi,eax
    ba2e:	48 8d 3d 79 26 00 00 	lea    rdi,[rip+0x2679]        # e0ae <_IO_stdin_used+0x20ae>
    ba35:	b8 00 00 00 00       	mov    eax,0x0
    ba3a:	e8 91 6a ff ff       	call   24d0 <printf@plt>
    ba3f:	8b 05 db f5 12 00    	mov    eax,DWORD PTR [rip+0x12f5db]        # 13b020 <current_log_num.3>
    ba45:	83 c0 01             	add    eax,0x1
    ba48:	89 05 d2 f5 12 00    	mov    DWORD PTR [rip+0x12f5d2],eax        # 13b020 <current_log_num.3>
    ba4e:	c7 05 d0 f5 12 00 00 	mov    DWORD PTR [rip+0x12f5d0],0x0        # 13b028 <arr_num.1>
    ba55:	00 00 00 
    ba58:	e9 e8 02 00 00       	jmp    bd45 <pps_monitor+0x3d1>
    ba5d:	bf 00 00 00 00       	mov    edi,0x0
    ba62:	e8 a9 6e ff ff       	call   2910 <time@plt>
    ba67:	48 89 c2             	mov    rdx,rax
    ba6a:	8b 05 b8 f5 12 00    	mov    eax,DWORD PTR [rip+0x12f5b8]        # 13b028 <arr_num.1>
    ba70:	8d 48 01             	lea    ecx,[rax+0x1]
    ba73:	89 0d af f5 12 00    	mov    DWORD PTR [rip+0x12f5af],ecx        # 13b028 <arr_num.1>
    ba79:	48 89 d1             	mov    rcx,rdx
    ba7c:	89 c0                	mov    eax,eax
    ba7e:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    ba85:	00 
    ba86:	48 8d 05 b3 f5 12 00 	lea    rax,[rip+0x12f5b3]        # 13b040 <pkt_times.0>
    ba8d:	48 89 0c 02          	mov    QWORD PTR [rdx+rax*1],rcx
    ba91:	8b 05 91 f5 12 00    	mov    eax,DWORD PTR [rip+0x12f591]        # 13b028 <arr_num.1>
    ba97:	3d 00 04 00 00       	cmp    eax,0x400
    ba9c:	0f 85 a3 02 00 00    	jne    bd45 <pps_monitor+0x3d1>
    baa2:	8b 05 7c f5 12 00    	mov    eax,DWORD PTR [rip+0x12f57c]        # 13b024 <lines_written.2>
    baa8:	3d ff 03 00 00       	cmp    eax,0x3ff
    baad:	7e 46                	jle    baf5 <pps_monitor+0x181>
    baaf:	8b 05 6b f5 12 00    	mov    eax,DWORD PTR [rip+0x12f56b]        # 13b020 <current_log_num.3>
    bab5:	83 c0 01             	add    eax,0x1
    bab8:	89 05 62 f5 12 00    	mov    DWORD PTR [rip+0x12f562],eax        # 13b020 <current_log_num.3>
    babe:	8b 15 5c f5 12 00    	mov    edx,DWORD PTR [rip+0x12f55c]        # 13b020 <current_log_num.3>
    bac4:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    bac8:	48 8d 35 f9 25 00 00 	lea    rsi,[rip+0x25f9]        # e0c8 <_IO_stdin_used+0x20c8>
    bacf:	48 89 c7             	mov    rdi,rax
    bad2:	b8 00 00 00 00       	mov    eax,0x0
    bad7:	e8 b4 6b ff ff       	call   2690 <sprintf@plt>
    badc:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    bae0:	48 8d 35 0b 26 00 00 	lea    rsi,[rip+0x260b]        # e0f2 <_IO_stdin_used+0x20f2>
    bae7:	48 89 c7             	mov    rdi,rax
    baea:	e8 d1 6a ff ff       	call   25c0 <fopen@plt>
    baef:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
    baf3:	eb 35                	jmp    bb2a <pps_monitor+0x1b6>
    baf5:	8b 15 25 f5 12 00    	mov    edx,DWORD PTR [rip+0x12f525]        # 13b020 <current_log_num.3>
    bafb:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    baff:	48 8d 35 c2 25 00 00 	lea    rsi,[rip+0x25c2]        # e0c8 <_IO_stdin_used+0x20c8>
    bb06:	48 89 c7             	mov    rdi,rax
    bb09:	b8 00 00 00 00       	mov    eax,0x0
    bb0e:	e8 7d 6b ff ff       	call   2690 <sprintf@plt>
    bb13:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    bb17:	48 8d 35 d6 25 00 00 	lea    rsi,[rip+0x25d6]        # e0f4 <_IO_stdin_used+0x20f4>
    bb1e:	48 89 c7             	mov    rdi,rax
    bb21:	e8 9a 6a ff ff       	call   25c0 <fopen@plt>
    bb26:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
    bb2a:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    bb2e:	48 89 c6             	mov    rsi,rax
    bb31:	48 8d 3d be 25 00 00 	lea    rdi,[rip+0x25be]        # e0f6 <_IO_stdin_used+0x20f6>
    bb38:	b8 00 00 00 00       	mov    eax,0x0
    bb3d:	e8 8e 69 ff ff       	call   24d0 <printf@plt>
    bb42:	bf 00 04 00 00       	mov    edi,0x400
    bb47:	e8 64 6a ff ff       	call   25b0 <malloc@plt>
    bb4c:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
    bb50:	bf 00 02 00 00       	mov    edi,0x200
    bb55:	e8 56 6a ff ff       	call   25b0 <malloc@plt>
    bb5a:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
    bb5e:	c7 85 74 ff ff ff ff 	mov    DWORD PTR [rbp-0x8c],0xffffffff
    bb65:	ff ff ff 
    bb68:	48 c7 45 88 00 00 00 	mov    QWORD PTR [rbp-0x78],0x0
    bb6f:	00 
    bb70:	c7 85 78 ff ff ff 00 	mov    DWORD PTR [rbp-0x88],0x0
    bb77:	00 00 00 
    bb7a:	e9 ca 00 00 00       	jmp    bc49 <pps_monitor+0x2d5>
    bb7f:	8b 85 78 ff ff ff    	mov    eax,DWORD PTR [rbp-0x88]
    bb85:	48 98                	cdqe   
    bb87:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    bb8e:	00 
    bb8f:	48 8d 05 aa f4 12 00 	lea    rax,[rip+0x12f4aa]        # 13b040 <pkt_times.0>
    bb96:	48 8b 14 02          	mov    rdx,QWORD PTR [rdx+rax*1]
    bb9a:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    bb9e:	48 39 c2             	cmp    rdx,rax
    bba1:	75 20                	jne    bbc3 <pps_monitor+0x24f>
    bba3:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    bba9:	48 98                	cdqe   
    bbab:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    bbb2:	00 
    bbb3:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    bbb7:	48 01 d0             	add    rax,rdx
    bbba:	8b 10                	mov    edx,DWORD PTR [rax]
    bbbc:	83 c2 01             	add    edx,0x1
    bbbf:	89 10                	mov    DWORD PTR [rax],edx
    bbc1:	eb 7f                	jmp    bc42 <pps_monitor+0x2ce>
    bbc3:	8b 85 78 ff ff ff    	mov    eax,DWORD PTR [rbp-0x88]
    bbc9:	48 98                	cdqe   
    bbcb:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    bbd2:	00 
    bbd3:	48 8d 05 66 f4 12 00 	lea    rax,[rip+0x12f466]        # 13b040 <pkt_times.0>
    bbda:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    bbde:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    bbe2:	83 85 74 ff ff ff 01 	add    DWORD PTR [rbp-0x8c],0x1
    bbe9:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    bbef:	48 98                	cdqe   
    bbf1:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    bbf8:	00 
    bbf9:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    bbfd:	48 01 c2             	add    rdx,rax
    bc00:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    bc04:	48 89 02             	mov    QWORD PTR [rdx],rax
    bc07:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    bc0d:	48 98                	cdqe   
    bc0f:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    bc16:	00 
    bc17:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    bc1b:	48 01 d0             	add    rax,rdx
    bc1e:	c7 00 01 00 00 00    	mov    DWORD PTR [rax],0x1
    bc24:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    bc2a:	48 98                	cdqe   
    bc2c:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    bc33:	00 
    bc34:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    bc38:	48 01 d0             	add    rax,rdx
    bc3b:	8b 10                	mov    edx,DWORD PTR [rax]
    bc3d:	83 c2 01             	add    edx,0x1
    bc40:	89 10                	mov    DWORD PTR [rax],edx
    bc42:	83 85 78 ff ff ff 01 	add    DWORD PTR [rbp-0x88],0x1
    bc49:	81 bd 78 ff ff ff ff 	cmp    DWORD PTR [rbp-0x88],0x3ff
    bc50:	03 00 00 
    bc53:	0f 8e 26 ff ff ff    	jle    bb7f <pps_monitor+0x20b>
    bc59:	c7 85 7c ff ff ff 00 	mov    DWORD PTR [rbp-0x84],0x0
    bc60:	00 00 00 
    bc63:	eb 52                	jmp    bcb7 <pps_monitor+0x343>
    bc65:	8b 85 7c ff ff ff    	mov    eax,DWORD PTR [rbp-0x84]
    bc6b:	48 98                	cdqe   
    bc6d:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    bc74:	00 
    bc75:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    bc79:	48 01 d0             	add    rax,rdx
    bc7c:	8b 08                	mov    ecx,DWORD PTR [rax]
    bc7e:	8b 85 7c ff ff ff    	mov    eax,DWORD PTR [rbp-0x84]
    bc84:	48 98                	cdqe   
    bc86:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    bc8d:	00 
    bc8e:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    bc92:	48 01 d0             	add    rax,rdx
    bc95:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    bc98:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    bc9c:	48 8d 35 62 24 00 00 	lea    rsi,[rip+0x2462]        # e105 <_IO_stdin_used+0x2105>
    bca3:	48 89 c7             	mov    rdi,rax
    bca6:	b8 00 00 00 00       	mov    eax,0x0
    bcab:	e8 10 6c ff ff       	call   28c0 <fprintf@plt>
    bcb0:	83 85 7c ff ff ff 01 	add    DWORD PTR [rbp-0x84],0x1
    bcb7:	8b 85 7c ff ff ff    	mov    eax,DWORD PTR [rbp-0x84]
    bcbd:	3b 85 74 ff ff ff    	cmp    eax,DWORD PTR [rbp-0x8c]
    bcc3:	7c a0                	jl     bc65 <pps_monitor+0x2f1>
    bcc5:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    bcc9:	48 89 c7             	mov    rdi,rax
    bccc:	e8 6f 69 ff ff       	call   2640 <free@plt>
    bcd1:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    bcd5:	48 89 c7             	mov    rdi,rax
    bcd8:	e8 63 69 ff ff       	call   2640 <free@plt>
    bcdd:	ba 00 20 00 00       	mov    edx,0x2000
    bce2:	be 00 00 00 00       	mov    esi,0x0
    bce7:	48 8d 3d 52 f3 12 00 	lea    rdi,[rip+0x12f352]        # 13b040 <pkt_times.0>
    bcee:	e8 ed 67 ff ff       	call   24e0 <memset@plt>
    bcf3:	8b 05 2b f3 12 00    	mov    eax,DWORD PTR [rip+0x12f32b]        # 13b024 <lines_written.2>
    bcf9:	3d ff 03 00 00       	cmp    eax,0x3ff
    bcfe:	7e 1b                	jle    bd1b <pps_monitor+0x3a7>
    bd00:	c7 05 1a f3 12 00 00 	mov    DWORD PTR [rip+0x12f31a],0x0        # 13b024 <lines_written.2>
    bd07:	00 00 00 
    bd0a:	8b 05 10 f3 12 00    	mov    eax,DWORD PTR [rip+0x12f310]        # 13b020 <current_log_num.3>
    bd10:	83 c0 01             	add    eax,0x1
    bd13:	89 05 07 f3 12 00    	mov    DWORD PTR [rip+0x12f307],eax        # 13b020 <current_log_num.3>
    bd19:	eb 14                	jmp    bd2f <pps_monitor+0x3bb>
    bd1b:	8b 15 03 f3 12 00    	mov    edx,DWORD PTR [rip+0x12f303]        # 13b024 <lines_written.2>
    bd21:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    bd27:	01 d0                	add    eax,edx
    bd29:	89 05 f5 f2 12 00    	mov    DWORD PTR [rip+0x12f2f5],eax        # 13b024 <lines_written.2>
    bd2f:	c7 05 ef f2 12 00 00 	mov    DWORD PTR [rip+0x12f2ef],0x0        # 13b028 <arr_num.1>
    bd36:	00 00 00 
    bd39:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    bd3d:	48 89 c7             	mov    rdi,rax
    bd40:	e8 fb 6a ff ff       	call   2840 <fclose@plt>
    bd45:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    bd49:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    bd50:	00 00 
    bd52:	74 05                	je     bd59 <pps_monitor+0x3e5>
    bd54:	e8 67 6a ff ff       	call   27c0 <__stack_chk_fail@plt>
    bd59:	c9                   	leave  
    bd5a:	c3                   	ret    

000000000000bd5b <get_line_num>:
    bd5b:	f3 0f 1e fa          	endbr64 
    bd5f:	55                   	push   rbp
    bd60:	48 89 e5             	mov    rbp,rsp
    bd63:	48 83 ec 20          	sub    rsp,0x20
    bd67:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    bd6b:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    bd72:	eb 0a                	jmp    bd7e <get_line_num+0x23>
    bd74:	80 7d fb 0a          	cmp    BYTE PTR [rbp-0x5],0xa
    bd78:	75 04                	jne    bd7e <get_line_num+0x23>
    bd7a:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    bd7e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    bd82:	48 89 c7             	mov    rdi,rax
    bd85:	e8 26 69 ff ff       	call   26b0 <fgetc@plt>
    bd8a:	88 45 fb             	mov    BYTE PTR [rbp-0x5],al
    bd8d:	80 7d fb ff          	cmp    BYTE PTR [rbp-0x5],0xff
    bd91:	75 e1                	jne    bd74 <get_line_num+0x19>
    bd93:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    bd96:	c9                   	leave  
    bd97:	c3                   	ret    

Disassembly of section .fini:

000000000000bd98 <_fini>:
    bd98:	f3 0f 1e fa          	endbr64 
    bd9c:	48 83 ec 08          	sub    rsp,0x8
    bda0:	48 83 c4 08          	add    rsp,0x8
    bda4:	c3                   	ret    

Disassembly of section .rodata:

000000000000c000 <_IO_stdin_used>:
    c000:	01 00                	add    DWORD PTR [rax],eax
    c002:	02 00                	add    al,BYTE PTR [rax]
    c004:	2f                   	(bad)  
    c005:	65 74 63             	gs je  c06b <_IO_stdin_used+0x6b>
    c008:	2f                   	(bad)  
    c009:	76 69                	jbe    c074 <_IO_stdin_used+0x74>
    c00b:	67 69 6c 2f 76 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x76],0x6c696769
    c012:	69 6c 
    c014:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    c018:	66 00 2f             	data16 add BYTE PTR [rdi],ch
    c01b:	76 61                	jbe    c07e <_IO_stdin_used+0x7e>
    c01d:	72 2f                	jb     c04e <_IO_stdin_used+0x4e>
    c01f:	6c                   	ins    BYTE PTR es:[rdi],dx
    c020:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c021:	67 2f                	addr32 (bad) 
    c023:	76 69                	jbe    c08e <_IO_stdin_used+0x8e>
    c025:	67 69 6c 2f 73 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x6f6c6769
    c02c:	6c 6f 
    c02e:	67 2e 6c             	cs ins BYTE PTR es:[edi],dx
    c031:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c032:	67 00 2f             	add    BYTE PTR [edi],ch
    c035:	65 74 63             	gs je  c09b <_IO_stdin_used+0x9b>
    c038:	2f                   	(bad)  
    c039:	76 69                	jbe    c0a4 <_IO_stdin_used+0xa4>
    c03b:	67 69 6c 2f 68 6f 73 	imul   ebp,DWORD PTR [edi+ebp*1+0x68],0x7374736f
    c042:	74 73 
    c044:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    c048:	66 00 00             	data16 add BYTE PTR [rax],al
    c04b:	00 00                	add    BYTE PTR [rax],al
    c04d:	00 00                	add    BYTE PTR [rax],al
    c04f:	00 1b                	add    BYTE PTR [rbx],bl
    c051:	5b                   	pop    rbx
    c052:	39 30                	cmp    DWORD PTR [rax],esi
    c054:	6d                   	ins    DWORD PTR es:[rdi],dx
    c055:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c05a:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c05f:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c064:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c069:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c06e:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c073:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c078:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c07d:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c082:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c087:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c08c:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c091:	2d 1b 5b 6d 00       	sub    eax,0x6d5b1b
    c096:	00 00                	add    BYTE PTR [rax],al
    c098:	42                   	rex.X
    c099:	41                   	rex.B
    c09a:	44 2d 54 52 41 46    	rex.R sub eax,0x46415254
    c0a0:	46                   	rex.RX
    c0a1:	49                   	rex.WB
    c0a2:	43 20 55 6e          	rex.XB and BYTE PTR [r13+0x6e],dl
    c0a6:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c0aa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c0ab:	20 45 74             	and    BYTE PTR [rbp+0x74],al
    c0ae:	68 65 72 6e 74       	push   0x746e7265
    c0b3:	20 46 72             	and    BYTE PTR [rsi+0x72],al
    c0b6:	61                   	(bad)  
    c0b7:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0b8:	65 20 50 72          	and    BYTE PTR gs:[rax+0x72],dl
    c0bc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c0bd:	74 6f                	je     c12e <_IO_stdin_used+0x12e>
    c0bf:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    c0c2:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    c0c5:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0c6:	62                   	(bad)  
    c0c7:	65 72 00             	gs jb  c0ca <_IO_stdin_used+0xca>
    c0ca:	2f                   	(bad)  
    c0cb:	76 61                	jbe    c12e <_IO_stdin_used+0x12e>
    c0cd:	72 2f                	jb     c0fe <_IO_stdin_used+0xfe>
    c0cf:	6c                   	ins    BYTE PTR es:[rdi],dx
    c0d0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c0d1:	67 2f                	addr32 (bad) 
    c0d3:	76 69                	jbe    c13e <_IO_stdin_used+0x13e>
    c0d5:	67 69 6c 2f 73 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x6f6c6769
    c0dc:	6c 6f 
    c0de:	67 2e 6c             	cs ins BYTE PTR es:[edi],dx
    c0e1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c0e2:	67 00 00             	add    BYTE PTR [eax],al
    c0e5:	00 00                	add    BYTE PTR [rax],al
    c0e7:	00 1b                	add    BYTE PTR [rbx],bl
    c0e9:	5b                   	pop    rbx
    c0ea:	33 3b                	xor    edi,DWORD PTR [rbx]
    c0ec:	33 33                	xor    esi,DWORD PTR [rbx]
    c0ee:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0ef:	00 25 73 00 30 2e    	add    BYTE PTR [rip+0x2e300073],ah        # 2e30c168 <_end+0x2e1cf128>
    c0f5:	30 2e                	xor    BYTE PTR [rsi],ch
    c0f7:	30 2e                	xor    BYTE PTR [rsi],ch
    c0f9:	30 00                	xor    BYTE PTR [rax],al
    c0fb:	00 00                	add    BYTE PTR [rax],al
    c0fd:	00 00                	add    BYTE PTR [rax],al
    c0ff:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    c102:	4f 54                	rex.WRXB push r12
    c104:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    c108:	50                   	push   rax
    c109:	3a 20                	cmp    ah,BYTE PTR [rax]
    c10b:	50                   	push   rax
    c10c:	52                   	push   rdx
    c10d:	4f                   	rex.WRXB
    c10e:	42                   	rex.X
    c10f:	45 3a 20             	cmp    r12b,BYTE PTR [r8]
    c112:	57                   	push   rdi
    c113:	68 6f 20 68 61       	push   0x6168206f
    c118:	73 20                	jae    c13a <_IO_stdin_used+0x13a>
    c11a:	25 73 3f 0a 00       	and    eax,0xa3f73
    c11f:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    c122:	4f 54                	rex.WRXB push r12
    c124:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    c128:	50                   	push   rax
    c129:	3a 20                	cmp    ah,BYTE PTR [rax]
    c12b:	57                   	push   rdi
    c12c:	68 6f 20 69 73       	push   0x7369206f
    c131:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    c134:	20 25 73 3f 20 54    	and    BYTE PTR [rip+0x54203f73],ah        # 542100ad <_end+0x540d306d>
    c13a:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    c13c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c13d:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # cbb6 <_IO_stdin_used+0xbb6>
    c143:	00 00                	add    BYTE PTR [rax],al
    c145:	00 00                	add    BYTE PTR [rax],al
    c147:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    c14a:	4f 54                	rex.WRXB push r12
    c14c:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    c150:	50                   	push   rax
    c151:	3a 20                	cmp    ah,BYTE PTR [rax]
    c153:	52                   	push   rdx
    c154:	45 50                	rex.RB push r8
    c156:	4c 59                	rex.WR pop rcx
    c158:	3a 20                	cmp    ah,BYTE PTR [rax]
    c15a:	25 73 20 69 73       	and    eax,0x73692073
    c15f:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    c162:	20 25 73 0a 00 55    	and    BYTE PTR [rip+0x55000a73],ah        # 5500cbdb <_end+0x54ecfb9b>
    c168:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c169:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c16d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c16e:	20 41 52             	and    BYTE PTR [rcx+0x52],al
    c171:	50                   	push   rax
    c172:	20 6f 70             	and    BYTE PTR [rdi+0x70],ch
    c175:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
    c178:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    c17b:	25 64 0a 00 1b       	and    eax,0x1b000a64
    c180:	5b                   	pop    rbx
    c181:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    c184:	4c                   	rex.WR
    c185:	4f                   	rex.WRXB
    c186:	4f 50                	rex.WRXB push r8
    c188:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de201 <_end+0x3e1a11c1>
    c18e:	20 25 73 00 20 52    	and    BYTE PTR [rip+0x52200073],ah        # 5220c207 <_end+0x520cf1c7>
    c194:	45 50                	rex.RB push r8
    c196:	4c 59                	rex.WR pop rcx
    c198:	20 00                	and    BYTE PTR [rax],al
    c19a:	20 55 4e             	and    BYTE PTR [rbp+0x4e],dl
    c19d:	4b                   	rex.WXB
    c19e:	4e                   	rex.WRX
    c19f:	4f 57                	rex.WRXB push r15
    c1a1:	4e 20 4c 4f 4f       	rex.WRX and BYTE PTR [rdi+r9*2+0x4f],r9b
    c1a6:	50                   	push   rax
    c1a7:	20 46 55             	and    BYTE PTR [rsi+0x55],al
    c1aa:	4e                   	rex.WRX
    c1ab:	43 54                	rex.XB push r12
    c1ad:	49                   	rex.WB
    c1ae:	4f                   	rex.WRXB
    c1af:	4e 3a 25 64 20 0a 00 	rex.WRX cmp r12b,BYTE PTR [rip+0xa2064]        # ae21a <rules+0x9cf3a>
    c1b6:	00 00                	add    BYTE PTR [rax],al
    c1b8:	25 30 32 78 3a       	and    eax,0x3a783230
    c1bd:	25 30 32 78 3a       	and    eax,0x3a783230
    c1c2:	25 30 32 78 3a       	and    eax,0x3a783230
    c1c7:	25 30 32 78 3a       	and    eax,0x3a783230
    c1cc:	25 30 32 78 3a       	and    eax,0x3a783230
    c1d1:	25 30 32 78 00       	and    eax,0x783230
    c1d6:	25 64 2e 25 64       	and    eax,0x64252e64
    c1db:	2e 25 64 2e 25 64    	cs and eax,0x64252e64
    c1e1:	00 00                	add    BYTE PTR [rax],al
    c1e3:	00 00                	add    BYTE PTR [rax],al
    c1e5:	00 00                	add    BYTE PTR [rax],al
    c1e7:	00 25 30 32 78 25    	add    BYTE PTR [rip+0x25783230],ah        # 2578f41d <_end+0x256523dd>
    c1ed:	30 32                	xor    BYTE PTR [rdx],dh
    c1ef:	78 3a                	js     c22b <_IO_stdin_used+0x22b>
    c1f1:	25 30 32 78 25       	and    eax,0x25783230
    c1f6:	30 32                	xor    BYTE PTR [rdx],dh
    c1f8:	78 3a                	js     c234 <_IO_stdin_used+0x234>
    c1fa:	25 30 32 78 25       	and    eax,0x25783230
    c1ff:	30 32                	xor    BYTE PTR [rdx],dh
    c201:	78 3a                	js     c23d <_IO_stdin_used+0x23d>
    c203:	25 30 32 78 25       	and    eax,0x25783230
    c208:	30 32                	xor    BYTE PTR [rdx],dh
    c20a:	78 3a                	js     c246 <_IO_stdin_used+0x246>
    c20c:	25 30 32 78 25       	and    eax,0x25783230
    c211:	30 32                	xor    BYTE PTR [rdx],dh
    c213:	78 3a                	js     c24f <_IO_stdin_used+0x24f>
    c215:	25 30 32 78 25       	and    eax,0x25783230
    c21a:	30 32                	xor    BYTE PTR [rdx],dh
    c21c:	78 3a                	js     c258 <_IO_stdin_used+0x258>
    c21e:	25 30 32 78 25       	and    eax,0x25783230
    c223:	30 32                	xor    BYTE PTR [rdx],dh
    c225:	78 3a                	js     c261 <_IO_stdin_used+0x261>
    c227:	25 30 32 78 25       	and    eax,0x25783230
    c22c:	30 32                	xor    BYTE PTR [rdx],dh
    c22e:	78 00                	js     c230 <_IO_stdin_used+0x230>
    c230:	25 64 2d 25 30       	and    eax,0x30252d64
    c235:	32 64 2d 25          	xor    ah,BYTE PTR [rbp+rbp*1+0x25]
    c239:	30 32                	xor    BYTE PTR [rdx],dh
    c23b:	64 20 25 30 32 64 3a 	and    BYTE PTR fs:[rip+0x3a643230],ah        # 3a64f472 <_end+0x3a512432>
    c242:	25 30 32 64 3a       	and    eax,0x3a643230
    c247:	25 30 32 64 00       	and    eax,0x643230
    c24c:	25 73 3a 20 25       	and    eax,0x25203a73
    c251:	73 0a                	jae    c25d <_IO_stdin_used+0x25d>
    c253:	00 00                	add    BYTE PTR [rax],al
    c255:	00 00                	add    BYTE PTR [rax],al
    c257:	00 25 73 20 46 6f    	add    BYTE PTR [rip+0x6f462073],ah        # 6f46e2d0 <_end+0x6f331290>
    c25d:	75 6e                	jne    c2cd <_IO_stdin_used+0x2cd>
    c25f:	64 20 62 6c          	and    BYTE PTR fs:[rdx+0x6c],ah
    c263:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c264:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    c267:	64 20 69 70          	and    BYTE PTR fs:[rcx+0x70],ch
    c26b:	76 34                	jbe    c2a1 <_IO_stdin_used+0x2a1>
    c26d:	20 61 64             	and    BYTE PTR [rcx+0x64],ah
    c270:	64 72 65             	fs jb  c2d8 <_IO_stdin_used+0x2d8>
    c273:	73 73                	jae    c2e8 <_IO_stdin_used+0x2e8>
    c275:	28 64 65 73          	sub    BYTE PTR [rbp+riz*2+0x73],ah
    c279:	74 29                	je     c2a4 <_IO_stdin_used+0x2a4>
    c27b:	3a 20                	cmp    ah,BYTE PTR [rax]
    c27d:	25 73 0a 00 00       	and    eax,0xa73
    c282:	00 00                	add    BYTE PTR [rax],al
    c284:	00 00                	add    BYTE PTR [rax],al
    c286:	00 00                	add    BYTE PTR [rax],al
    c288:	25 73 20 46 6f       	and    eax,0x6f462073
    c28d:	75 6e                	jne    c2fd <_IO_stdin_used+0x2fd>
    c28f:	64 20 62 6c          	and    BYTE PTR fs:[rdx+0x6c],ah
    c293:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c294:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    c297:	64 20 69 70          	and    BYTE PTR fs:[rcx+0x70],ch
    c29b:	76 34                	jbe    c2d1 <_IO_stdin_used+0x2d1>
    c29d:	20 61 64             	and    BYTE PTR [rcx+0x64],ah
    c2a0:	64 72 65             	fs jb  c308 <_IO_stdin_used+0x308>
    c2a3:	73 73                	jae    c318 <_IO_stdin_used+0x318>
    c2a5:	28 73 72             	sub    BYTE PTR [rbx+0x72],dh
    c2a8:	63 29                	movsxd ebp,DWORD PTR [rcx]
    c2aa:	3a 20                	cmp    ah,BYTE PTR [rax]
    c2ac:	25 73 0a 00 1b       	and    eax,0x1b000a73
    c2b1:	5b                   	pop    rbx
    c2b2:	34 6d                	xor    al,0x6d
    c2b4:	00 25 73 46 72 61    	add    BYTE PTR [rip+0x61724673],ah        # 6173092d <_end+0x615f38ed>
    c2ba:	67 6d                	ins    DWORD PTR es:[edi],dx
    c2bc:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c2be:	74 65                	je     c325 <_IO_stdin_used+0x325>
    c2c0:	64 20 00             	and    BYTE PTR fs:[rax],al
    c2c3:	1b 5b 30             	sbb    ebx,DWORD PTR [rbx+0x30]
    c2c6:	6d                   	ins    DWORD PTR es:[rdi],dx
    c2c7:	00 25 73 00 20 25    	add    BYTE PTR [rip+0x25200073],ah        # 2520c340 <_end+0x250cf300>
    c2cd:	73 20                	jae    c2ef <_IO_stdin_used+0x2ef>
    c2cf:	2d 3e 20 25 73       	sub    eax,0x7325203e
    c2d4:	25 73 0a 00 49       	and    eax,0x49000a73
    c2d9:	50                   	push   rax
    c2da:	76 34                	jbe    c310 <_IO_stdin_used+0x310>
    c2dc:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de355 <_end+0x3e1a1315>
    c2e2:	20 25 73 20 50 72    	and    BYTE PTR [rip+0x72502073],ah        # 7250e35b <_end+0x723d131b>
    c2e8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c2e9:	74 6f                	je     c35a <_IO_stdin_used+0x35a>
    c2eb:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    c2ee:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    c2f1:	6d                   	ins    DWORD PTR es:[rdi],dx
    c2f2:	62                   	(bad)  
    c2f3:	65 72 20             	gs jb  c316 <_IO_stdin_used+0x316>
    c2f6:	3d 20 25 64 0a       	cmp    eax,0xa642520
    c2fb:	00 00                	add    BYTE PTR [rax],al
    c2fd:	00 00                	add    BYTE PTR [rax],al
    c2ff:	00 1b                	add    BYTE PTR [rbx],bl
    c301:	5b                   	pop    rbx
    c302:	33 35 6d 00 25 73    	xor    esi,DWORD PTR [rip+0x7325006d]        # 7325c375 <_end+0x7311f335>
    c308:	00 49 50             	add    BYTE PTR [rcx+0x50],cl
    c30b:	76 36                	jbe    c343 <_IO_stdin_used+0x343>
    c30d:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de386 <_end+0x3e1a1346>
    c313:	20 25 73 0a 00 09    	and    BYTE PTR [rip+0x9000a73],ah        # 900cd8c <_end+0x8ecfd4c>
    c319:	49                   	rex.WB
    c31a:	43                   	rex.XB
    c31b:	4d 50                	rex.WRB push r8
    c31d:	76 36                	jbe    c355 <_IO_stdin_used+0x355>
    c31f:	20 00                	and    BYTE PTR [rax],al
    c321:	20 52 6f             	and    BYTE PTR [rdx+0x6f],dl
    c324:	75 74                	jne    c39a <_IO_stdin_used+0x39a>
    c326:	65 72 20             	gs jb  c349 <_IO_stdin_used+0x349>
    c329:	53                   	push   rbx
    c32a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c32b:	6c                   	ins    BYTE PTR es:[rdi],dx
    c32c:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    c333:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c334:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c335:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    c338:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c339:	6d                   	ins    DWORD PTR es:[rdi],dx
    c33a:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # cdb3 <_IO_stdin_used+0xdb3>
    c340:	4d 75 6c             	rex.WRB jne c3af <_IO_stdin_used+0x3af>
    c343:	74 69                	je     c3ae <_IO_stdin_used+0x3ae>
    c345:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    c348:	74 20                	je     c36a <_IO_stdin_used+0x36a>
    c34a:	4c 69 73 74 65 6e 65 	imul   r14,QWORD PTR [rbx+0x74],0x72656e65
    c351:	72 
    c352:	20 52 65             	and    BYTE PTR [rdx+0x65],dl
    c355:	70 6f                	jo     c3c6 <_IO_stdin_used+0x3c6>
    c357:	72 74                	jb     c3cd <_IO_stdin_used+0x3cd>
    c359:	20 4d 65             	and    BYTE PTR [rbp+0x65],cl
    c35c:	73 73                	jae    c3d1 <_IO_stdin_used+0x3d1>
    c35e:	61                   	(bad)  
    c35f:	67 65 20 76 32       	and    BYTE PTR gs:[esi+0x32],dh
    c364:	00 4d 75             	add    BYTE PTR [rbp+0x75],cl
    c367:	6c                   	ins    BYTE PTR es:[rdi],dx
    c368:	74 69                	je     c3d3 <_IO_stdin_used+0x3d3>
    c36a:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    c36d:	74 20                	je     c38f <_IO_stdin_used+0x38f>
    c36f:	20 4c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],cl
    c373:	74 65                	je     c3da <_IO_stdin_used+0x3da>
    c375:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c376:	65 72 20             	gs jb  c399 <_IO_stdin_used+0x399>
    c379:	51                   	push   rcx
    c37a:	75 65                	jne    c3e1 <_IO_stdin_used+0x3e1>
    c37c:	72 79                	jb     c3f7 <_IO_stdin_used+0x3f7>
    c37e:	00 4e 65             	add    BYTE PTR [rsi+0x65],cl
    c381:	69 67 68 62 6f 72 20 	imul   esp,DWORD PTR [rdi+0x68],0x20726f62
    c388:	53                   	push   rbx
    c389:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c38a:	6c                   	ins    BYTE PTR es:[rdi],dx
    c38b:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    c392:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c393:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c394:	00 1b                	add    BYTE PTR [rbx],bl
    c396:	5b                   	pop    rbx
    c397:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    c39a:	00 00                	add    BYTE PTR [rax],al
    c39c:	00 00                	add    BYTE PTR [rax],al
    c39e:	00 00                	add    BYTE PTR [rax],al
    c3a0:	54                   	push   rsp
    c3a1:	69 6d 65 20 73 74 61 	imul   ebp,DWORD PTR [rbp+0x65],0x61747320
    c3a8:	6d                   	ins    DWORD PTR es:[rdi],dx
    c3a9:	70 20                	jo     c3cb <_IO_stdin_used+0x3cb>
    c3ab:	72 65                	jb     c412 <_IO_stdin_used+0x412>
    c3ad:	71 75                	jno    c424 <_IO_stdin_used+0x424>
    c3af:	65 73 74             	gs jae c426 <_IO_stdin_used+0x426>
    c3b2:	3a 20                	cmp    ah,BYTE PTR [rax]
    c3b4:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    c3b9:	20 25 73 28 63 6f    	and    BYTE PTR [rip+0x6f632873],ah        # 6f63ec32 <_end+0x6f501bf2>
    c3bf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c3c0:	66 69 67 20 73 70    	imul   sp,WORD PTR [rdi+0x20],0x7073
    c3c6:	65 63 69 66          	movsxd ebp,DWORD PTR gs:[rcx+0x66]
    c3ca:	69 65 73 20 73 74 72 	imul   esp,DWORD PTR [rbp+0x73],0x72747320
    c3d1:	69 63 74 20 74 69 6d 	imul   esp,DWORD PTR [rbx+0x74],0x6d697420
    c3d8:	65 73 74             	gs jae c44f <_IO_stdin_used+0x44f>
    c3db:	61                   	(bad)  
    c3dc:	6d                   	ins    DWORD PTR es:[rdi],dx
    c3dd:	70 20                	jo     c3ff <_IO_stdin_used+0x3ff>
    c3df:	61                   	(bad)  
    c3e0:	6c                   	ins    BYTE PTR es:[rdi],dx
    c3e1:	65 72 74             	gs jb  c458 <_IO_stdin_used+0x458>
    c3e4:	73 29                	jae    c40f <_IO_stdin_used+0x40f>
    c3e6:	0a 00                	or     al,BYTE PTR [rax]
    c3e8:	50                   	push   rax
    c3e9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c3ea:	73 73                	jae    c45f <_IO_stdin_used+0x45f>
    c3ec:	69 62 6c 65 20 6e 6d 	imul   esp,DWORD PTR [rdx+0x6c],0x6d6e2065
    c3f3:	61                   	(bad)  
    c3f4:	70 20                	jo     c416 <_IO_stdin_used+0x416>
    c3f6:	68 6f 73 74 20       	push   0x2074736f
    c3fb:	61                   	(bad)  
    c3fc:	6c                   	ins    BYTE PTR es:[rdi],dx
    c3fd:	69 76 65 20 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x65686320
    c404:	63 6b 20             	movsxd ebp,DWORD PTR [rbx+0x20]
    c407:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    c40c:	20 25 73 3b 20 6d    	and    BYTE PTR [rip+0x6d203b73],ah        # 6d20ff85 <_end+0x6d0d2f45>
    c412:	61                   	(bad)  
    c413:	74 63                	je     c478 <_IO_stdin_used+0x478>
    c415:	68 65 64 20 49       	push   0x49206465
    c41a:	43                   	rex.XB
    c41b:	4d 50                	rex.WRB push r8
    c41d:	20 45 63             	and    BYTE PTR [rbp+0x63],al
    c420:	68 6f 2c 20 54       	push   0x54202c6f
    c425:	43 50                	rex.XB push r8
    c427:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    c42a:	4e 2c 20             	rex.WRX sub al,0x20
    c42d:	54                   	push   rsp
    c42e:	43 50                	rex.XB push r8
    c430:	20 41 43             	and    BYTE PTR [rcx+0x43],al
    c433:	4b 2c 20             	rex.WXB sub al,0x20
    c436:	61                   	(bad)  
    c437:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c438:	64 20 49 43          	and    BYTE PTR fs:[rcx+0x43],cl
    c43c:	4d 50                	rex.WRB push r8
    c43e:	20 54 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dl
    c442:	65 73 74             	gs jae c4b9 <_IO_stdin_used+0x4b9>
    c445:	61                   	(bad)  
    c446:	6d                   	ins    DWORD PTR es:[rdi],dx
    c447:	70 20                	jo     c469 <_IO_stdin_used+0x469>
    c449:	72 65                	jb     c4b0 <_IO_stdin_used+0x4b0>
    c44b:	71 75                	jno    c4c2 <_IO_stdin_used+0x4c2>
    c44d:	65 73 74             	gs jae c4c4 <_IO_stdin_used+0x4c4>
    c450:	0a 00                	or     al,BYTE PTR [rax]
    c452:	61                   	(bad)  
    c453:	00 00                	add    BYTE PTR [rax],al
    c455:	00 00                	add    BYTE PTR [rax],al
    c457:	00 50 6f             	add    BYTE PTR [rax+0x6f],dl
    c45a:	73 73                	jae    c4cf <_IO_stdin_used+0x4cf>
    c45c:	69 62 6c 65 20 6e 6d 	imul   esp,DWORD PTR [rdx+0x6c],0x6d6e2065
    c463:	61                   	(bad)  
    c464:	70 20                	jo     c486 <_IO_stdin_used+0x486>
    c466:	68 6f 73 74 20       	push   0x2074736f
    c46b:	61                   	(bad)  
    c46c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c46d:	69 76 65 20 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x65686320
    c474:	63 6b 20             	movsxd ebp,DWORD PTR [rbx+0x20]
    c477:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    c47c:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461e4f5 <_end+0x744e14b5>
    c482:	20 25 73 3b 20 6d    	and    BYTE PTR [rip+0x6d203b73],ah        # 6d20fffb <_end+0x6d0d2fbb>
    c488:	61                   	(bad)  
    c489:	74 63                	je     c4ee <_IO_stdin_used+0x4ee>
    c48b:	68 65 64 20 49       	push   0x49206465
    c490:	43                   	rex.XB
    c491:	4d 50                	rex.WRB push r8
    c493:	20 45 63             	and    BYTE PTR [rbp+0x63],al
    c496:	68 6f 2c 20 54       	push   0x54202c6f
    c49b:	43 50                	rex.XB push r8
    c49d:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    c4a0:	4e 2c 20             	rex.WRX sub al,0x20
    c4a3:	54                   	push   rsp
    c4a4:	43 50                	rex.XB push r8
    c4a6:	20 41 43             	and    BYTE PTR [rcx+0x43],al
    c4a9:	4b 2c 20             	rex.WXB sub al,0x20
    c4ac:	61                   	(bad)  
    c4ad:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c4ae:	64 20 49 43          	and    BYTE PTR fs:[rcx+0x43],cl
    c4b2:	4d 50                	rex.WRB push r8
    c4b4:	20 54 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dl
    c4b8:	65 73 74             	gs jae c52f <_IO_stdin_used+0x52f>
    c4bb:	61                   	(bad)  
    c4bc:	6d                   	ins    DWORD PTR es:[rdi],dx
    c4bd:	70 20                	jo     c4df <_IO_stdin_used+0x4df>
    c4bf:	72 65                	jb     c526 <_IO_stdin_used+0x526>
    c4c1:	71 75                	jno    c538 <_IO_stdin_used+0x538>
    c4c3:	65 73 74             	gs jae c53a <_IO_stdin_used+0x53a>
    c4c6:	0a 00                	or     al,BYTE PTR [rax]
    c4c8:	49 50                	rex.WB push r8
    c4ca:	76 34                	jbe    c500 <_IO_stdin_used+0x500>
    c4cc:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de545 <_end+0x3e1a1505>
    c4d2:	20 25 73 0a 00 09    	and    BYTE PTR [rip+0x9000a73],ah        # 900cf4b <_end+0x8ecff0b>
    c4d8:	49                   	rex.WB
    c4d9:	43                   	rex.XB
    c4da:	4d 50                	rex.WRB push r8
    c4dc:	20 00                	and    BYTE PTR [rax],al
    c4de:	20 65 63             	and    BYTE PTR [rbp+0x63],ah
    c4e1:	68 6f 20 72 65       	push   0x6572206f
    c4e6:	70 6c                	jo     c554 <_IO_stdin_used+0x554>
    c4e8:	79 00                	jns    c4ea <_IO_stdin_used+0x4ea>
    c4ea:	20 64 65 73          	and    BYTE PTR [rbp+riz*2+0x73],ah
    c4ee:	74 69                	je     c559 <_IO_stdin_used+0x559>
    c4f0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c4f1:	61                   	(bad)  
    c4f2:	74 69                	je     c55d <_IO_stdin_used+0x55d>
    c4f4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c4f5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c4f6:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    c4f9:	72 65                	jb     c560 <_IO_stdin_used+0x560>
    c4fb:	61                   	(bad)  
    c4fc:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c4ff:	62                   	(bad)  
    c500:	6c                   	ins    BYTE PTR es:[rdi],dx
    c501:	65 28 00             	sub    BYTE PTR gs:[rax],al
    c504:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    c507:	74 77                	je     c580 <_IO_stdin_used+0x580>
    c509:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c50a:	72 6b                	jb     c577 <_IO_stdin_used+0x577>
    c50c:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c50f:	72 65                	jb     c576 <_IO_stdin_used+0x576>
    c511:	61                   	(bad)  
    c512:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c515:	62                   	(bad)  
    c516:	6c                   	ins    BYTE PTR es:[rdi],dx
    c517:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c51a:	00 20                	add    BYTE PTR [rax],ah
    c51c:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c51e:	73 74                	jae    c594 <_IO_stdin_used+0x594>
    c520:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c523:	72 65                	jb     c58a <_IO_stdin_used+0x58a>
    c525:	61                   	(bad)  
    c526:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c529:	62                   	(bad)  
    c52a:	6c                   	ins    BYTE PTR es:[rdi],dx
    c52b:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c52e:	00 20                	add    BYTE PTR [rax],ah
    c530:	50                   	push   rax
    c531:	72 6f                	jb     c5a2 <_IO_stdin_used+0x5a2>
    c533:	74 6f                	je     c5a4 <_IO_stdin_used+0x5a4>
    c535:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    c538:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c53b:	72 65                	jb     c5a2 <_IO_stdin_used+0x5a2>
    c53d:	61                   	(bad)  
    c53e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c541:	62                   	(bad)  
    c542:	6c                   	ins    BYTE PTR es:[rdi],dx
    c543:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c546:	00 20                	add    BYTE PTR [rax],ah
    c548:	50                   	push   rax
    c549:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c54a:	72 74                	jb     c5c0 <_IO_stdin_used+0x5c0>
    c54c:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c54f:	72 65                	jb     c5b6 <_IO_stdin_used+0x5b6>
    c551:	61                   	(bad)  
    c552:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c555:	62                   	(bad)  
    c556:	6c                   	ins    BYTE PTR es:[rdi],dx
    c557:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c55a:	00 20                	add    BYTE PTR [rax],ah
    c55c:	46 72 61             	rex.RX jb c5c0 <_IO_stdin_used+0x5c0>
    c55f:	67 6d                	ins    DWORD PTR es:[edi],dx
    c561:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c563:	74 61                	je     c5c6 <_IO_stdin_used+0x5c6>
    c565:	74 69                	je     c5d0 <_IO_stdin_used+0x5d0>
    c567:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c568:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c569:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    c56c:	65 64 65 64 20 29    	gs fs gs and BYTE PTR fs:[rcx],ch
    c572:	00 20                	add    BYTE PTR [rax],ah
    c574:	53                   	push   rbx
    c575:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c576:	75 72                	jne    c5ea <_IO_stdin_used+0x5ea>
    c578:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c57b:	52                   	push   rdx
    c57c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c57d:	75 74                	jne    c5f3 <_IO_stdin_used+0x5f3>
    c57f:	65 20 46 61          	and    BYTE PTR gs:[rsi+0x61],al
    c583:	69 6c 65 64 20 29 00 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x2920
    c58a:	00 
    c58b:	00 00                	add    BYTE PTR [rax],al
    c58d:	00 00                	add    BYTE PTR [rax],al
    c58f:	00 20                	add    BYTE PTR [rax],ah
    c591:	44                   	rex.R
    c592:	65 73 74             	gs jae c609 <_IO_stdin_used+0x609>
    c595:	69 6e 61 74 69 6f 6e 	imul   ebp,DWORD PTR [rsi+0x61],0x6e6f6974
    c59c:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    c59f:	74 77                	je     c618 <_IO_stdin_used+0x618>
    c5a1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5a2:	72 6b                	jb     c60f <_IO_stdin_used+0x60f>
    c5a4:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c5a7:	72 65                	jb     c60e <_IO_stdin_used+0x60e>
    c5a9:	61                   	(bad)  
    c5aa:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c5ad:	62                   	(bad)  
    c5ae:	6c                   	ins    BYTE PTR es:[rdi],dx
    c5af:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c5b2:	00 00                	add    BYTE PTR [rax],al
    c5b4:	00 00                	add    BYTE PTR [rax],al
    c5b6:	00 00                	add    BYTE PTR [rax],al
    c5b8:	20 44 65 73          	and    BYTE PTR [rbp+riz*2+0x73],al
    c5bc:	74 69                	je     c627 <_IO_stdin_used+0x627>
    c5be:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c5bf:	61                   	(bad)  
    c5c0:	74 69                	je     c62b <_IO_stdin_used+0x62b>
    c5c2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5c3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c5c4:	20 48 6f             	and    BYTE PTR [rax+0x6f],cl
    c5c7:	73 74                	jae    c63d <_IO_stdin_used+0x63d>
    c5c9:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c5cc:	72 65                	jb     c633 <_IO_stdin_used+0x633>
    c5ce:	61                   	(bad)  
    c5cf:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c5d2:	62                   	(bad)  
    c5d3:	6c                   	ins    BYTE PTR es:[rdi],dx
    c5d4:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c5d7:	00 20                	add    BYTE PTR [rax],ah
    c5d9:	53                   	push   rbx
    c5da:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5db:	75 72                	jne    c64f <_IO_stdin_used+0x64f>
    c5dd:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c5e0:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c5e2:	73 74                	jae    c658 <_IO_stdin_used+0x658>
    c5e4:	20 49 73             	and    BYTE PTR [rcx+0x73],cl
    c5e7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5e8:	6c                   	ins    BYTE PTR es:[rdi],dx
    c5e9:	61                   	(bad)  
    c5ea:	74 65                	je     c651 <_IO_stdin_used+0x651>
    c5ec:	64 20 29             	and    BYTE PTR fs:[rcx],ch
    c5ef:	00 20                	add    BYTE PTR [rax],ah
    c5f1:	4e                   	rex.WRX
    c5f2:	65 74 77             	gs je  c66c <_IO_stdin_used+0x66c>
    c5f5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5f6:	72 6b                	jb     c663 <_IO_stdin_used+0x663>
    c5f8:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    c5fb:	6d                   	ins    DWORD PTR es:[rdi],dx
    c5fc:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    c603:	74 69                	je     c66e <_IO_stdin_used+0x66e>
    c605:	76 65                	jbe    c66c <_IO_stdin_used+0x66c>
    c607:	6c                   	ins    BYTE PTR es:[rdi],dx
    c608:	79 20                	jns    c62a <_IO_stdin_used+0x62a>
    c60a:	50                   	push   rax
    c60b:	72 6f                	jb     c67c <_IO_stdin_used+0x67c>
    c60d:	68 69 62 69 74       	push   0x74696269
    c612:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    c616:	00 00                	add    BYTE PTR [rax],al
    c618:	20 48 6f             	and    BYTE PTR [rax+0x6f],cl
    c61b:	73 74                	jae    c691 <_IO_stdin_used+0x691>
    c61d:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    c620:	6d                   	ins    DWORD PTR es:[rdi],dx
    c621:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    c628:	74 69                	je     c693 <_IO_stdin_used+0x693>
    c62a:	76 65                	jbe    c691 <_IO_stdin_used+0x691>
    c62c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c62d:	79 20                	jns    c64f <_IO_stdin_used+0x64f>
    c62f:	50                   	push   rax
    c630:	72 6f                	jb     c6a1 <_IO_stdin_used+0x6a1>
    c632:	68 69 62 69 74       	push   0x74696269
    c637:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    c63b:	00 00                	add    BYTE PTR [rax],al
    c63d:	00 00                	add    BYTE PTR [rax],al
    c63f:	00 20                	add    BYTE PTR [rax],ah
    c641:	4e                   	rex.WRX
    c642:	65 74 77             	gs je  c6bc <_IO_stdin_used+0x6bc>
    c645:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c646:	72 6b                	jb     c6b3 <_IO_stdin_used+0x6b3>
    c648:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c64b:	72 65                	jb     c6b2 <_IO_stdin_used+0x6b2>
    c64d:	61                   	(bad)  
    c64e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c651:	62                   	(bad)  
    c652:	6c                   	ins    BYTE PTR es:[rdi],dx
    c653:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    c657:	72 20                	jb     c679 <_IO_stdin_used+0x679>
    c659:	54                   	push   rsp
    c65a:	4f 53                	rex.WRXB push r11
    c65c:	20 29                	and    BYTE PTR [rcx],ch
    c65e:	00 20                	add    BYTE PTR [rax],ah
    c660:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c662:	73 74                	jae    c6d8 <_IO_stdin_used+0x6d8>
    c664:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c667:	72 65                	jb     c6ce <_IO_stdin_used+0x6ce>
    c669:	61                   	(bad)  
    c66a:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c66d:	62                   	(bad)  
    c66e:	6c                   	ins    BYTE PTR es:[rdi],dx
    c66f:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    c673:	72 20                	jb     c695 <_IO_stdin_used+0x695>
    c675:	54                   	push   rsp
    c676:	4f 53                	rex.WRXB push r11
    c678:	20 29                	and    BYTE PTR [rcx],ch
    c67a:	00 00                	add    BYTE PTR [rax],al
    c67c:	00 00                	add    BYTE PTR [rax],al
    c67e:	00 00                	add    BYTE PTR [rax],al
    c680:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c683:	6d                   	ins    DWORD PTR es:[rdi],dx
    c684:	6d                   	ins    DWORD PTR es:[rdi],dx
    c685:	75 6e                	jne    c6f5 <_IO_stdin_used+0x6f5>
    c687:	69 63 61 74 69 6f 6e 	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
    c68e:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    c691:	6d                   	ins    DWORD PTR es:[rdi],dx
    c692:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    c699:	74 69                	je     c704 <_IO_stdin_used+0x704>
    c69b:	76 65                	jbe    c702 <_IO_stdin_used+0x702>
    c69d:	6c                   	ins    BYTE PTR es:[rdi],dx
    c69e:	79 20                	jns    c6c0 <_IO_stdin_used+0x6c0>
    c6a0:	50                   	push   rax
    c6a1:	72 6f                	jb     c712 <_IO_stdin_used+0x712>
    c6a3:	68 69 62 69 74       	push   0x74696269
    c6a8:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    c6ac:	00 20                	add    BYTE PTR [rax],ah
    c6ae:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c6b0:	73 74                	jae    c726 <_IO_stdin_used+0x726>
    c6b2:	20 50 72             	and    BYTE PTR [rax+0x72],dl
    c6b5:	65 63 65 64          	movsxd esp,DWORD PTR gs:[rbp+0x64]
    c6b9:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c6bb:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c6be:	56                   	push   rsi
    c6bf:	69 6f 6c 61 74 69 6f 	imul   ebp,DWORD PTR [rdi+0x6c],0x6f697461
    c6c6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c6c7:	20 29                	and    BYTE PTR [rcx],ch
    c6c9:	00 00                	add    BYTE PTR [rax],al
    c6cb:	00 00                	add    BYTE PTR [rax],al
    c6cd:	00 00                	add    BYTE PTR [rax],al
    c6cf:	00 20                	add    BYTE PTR [rax],ah
    c6d1:	50                   	push   rax
    c6d2:	72 65                	jb     c739 <_IO_stdin_used+0x739>
    c6d4:	63 65 64             	movsxd esp,DWORD PTR [rbp+0x64]
    c6d7:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c6d9:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c6dc:	43 75 74             	rex.XB jne c753 <_IO_stdin_used+0x753>
    c6df:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c6e0:	66 66 20 69 6e       	data16 data16 and BYTE PTR [rcx+0x6e],ch
    c6e5:	20 45 66             	and    BYTE PTR [rbp+0x66],al
    c6e8:	66 65 63 74 20 29    	movsxd si,DWORD PTR gs:[rax+riz*1+0x29]
    c6ee:	00 20                	add    BYTE PTR [rax],ah
    c6f0:	55                   	push   rbp
    c6f1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c6f2:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c6f6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c6f7:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c6fa:	64 65 3d 25 64 20 29 	fs gs cmp eax,0x29206425
    c701:	0a 00                	or     al,BYTE PTR [rax]
    c703:	00 00                	add    BYTE PTR [rax],al
    c705:	00 00                	add    BYTE PTR [rax],al
    c707:	00 20                	add    BYTE PTR [rax],ah
    c709:	53                   	push   rbx
    c70a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c70b:	75 72                	jne    c77f <_IO_stdin_used+0x77f>
    c70d:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c710:	51                   	push   rcx
    c711:	75 65                	jne    c778 <_IO_stdin_used+0x778>
    c713:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c714:	63 68 28             	movsxd ebp,DWORD PTR [rax+0x28]
    c717:	20 66 6c             	and    BYTE PTR [rsi+0x6c],ah
    c71a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c71b:	77 20                	ja     c73d <_IO_stdin_used+0x73d>
    c71d:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    c720:	74 72                	je     c794 <_IO_stdin_used+0x794>
    c722:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c723:	6c                   	ins    BYTE PTR es:[rdi],dx
    c724:	20 29                	and    BYTE PTR [rcx],ch
    c726:	00 20                	add    BYTE PTR [rax],ah
    c728:	52                   	push   rdx
    c729:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x28207463
    c730:	20 28 
    c732:	00 20                	add    BYTE PTR [rax],ah
    c734:	52                   	push   rdx
    c735:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c73c:	20 66 
    c73e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c73f:	72 20                	jb     c761 <_IO_stdin_used+0x761>
    c741:	4e                   	rex.WRX
    c742:	65 74 77             	gs je  c7bc <_IO_stdin_used+0x7bc>
    c745:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c746:	72 6b                	jb     c7b3 <_IO_stdin_used+0x7b3>
    c748:	20 29                	and    BYTE PTR [rcx],ch
    c74a:	00 20                	add    BYTE PTR [rax],ah
    c74c:	52                   	push   rdx
    c74d:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c754:	20 66 
    c756:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c757:	72 20                	jb     c779 <_IO_stdin_used+0x779>
    c759:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c75b:	73 74                	jae    c7d1 <_IO_stdin_used+0x7d1>
    c75d:	20 29                	and    BYTE PTR [rcx],ch
    c75f:	00 20                	add    BYTE PTR [rax],ah
    c761:	52                   	push   rdx
    c762:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c769:	20 66 
    c76b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c76c:	72 20                	jb     c78e <_IO_stdin_used+0x78e>
    c76e:	54                   	push   rsp
    c76f:	4f 53                	rex.WRXB push r11
    c771:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    c774:	64 20 4e 65          	and    BYTE PTR fs:[rsi+0x65],cl
    c778:	74 77                	je     c7f1 <_IO_stdin_used+0x7f1>
    c77a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c77b:	72 6b                	jb     c7e8 <_IO_stdin_used+0x7e8>
    c77d:	20 29                	and    BYTE PTR [rcx],ch
    c77f:	00 20                	add    BYTE PTR [rax],ah
    c781:	52                   	push   rdx
    c782:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c789:	20 66 
    c78b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c78c:	72 20                	jb     c7ae <_IO_stdin_used+0x7ae>
    c78e:	54                   	push   rsp
    c78f:	4f 53                	rex.WRXB push r11
    c791:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    c794:	64 20 48 6f          	and    BYTE PTR fs:[rax+0x6f],cl
    c798:	73 74                	jae    c80e <_IO_stdin_used+0x80e>
    c79a:	20 29                	and    BYTE PTR [rcx],ch
    c79c:	00 20                	add    BYTE PTR [rax],ah
    c79e:	65 63 68 6f          	movsxd ebp,DWORD PTR gs:[rax+0x6f]
    c7a2:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    c7a5:	71 75                	jno    c81c <_IO_stdin_used+0x81c>
    c7a7:	65 73 74             	gs jae c81e <_IO_stdin_used+0x81e>
    c7aa:	00 00                	add    BYTE PTR [rax],al
    c7ac:	00 00                	add    BYTE PTR [rax],al
    c7ae:	00 00                	add    BYTE PTR [rax],al
    c7b0:	20 4d 6f             	and    BYTE PTR [rbp+0x6f],cl
    c7b3:	62                   	(bad)  
    c7b4:	69 6c 65 20 49 50 20 	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x41205049
    c7bb:	41 
    c7bc:	64 76 65             	fs jbe c824 <_IO_stdin_used+0x824>
    c7bf:	72 74                	jb     c835 <_IO_stdin_used+0x835>
    c7c1:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    c7c8:	20 28                	and    BYTE PTR [rax],ch
    c7ca:	4e 6f                	rex.WRX outs dx,DWORD PTR ds:[rsi]
    c7cc:	72 6d                	jb     c83b <_IO_stdin_used+0x83b>
    c7ce:	61                   	(bad)  
    c7cf:	6c                   	ins    BYTE PTR es:[rdi],dx
    c7d0:	20 52 6f             	and    BYTE PTR [rdx+0x6f],dl
    c7d3:	75 74                	jne    c849 <_IO_stdin_used+0x849>
    c7d5:	65 72 20             	gs jb  c7f8 <_IO_stdin_used+0x7f8>
    c7d8:	41                   	rex.B
    c7d9:	64 76 65             	fs jbe c841 <_IO_stdin_used+0x841>
    c7dc:	72 74                	jb     c852 <_IO_stdin_used+0x852>
    c7de:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    c7e5:	20 29                	and    BYTE PTR [rcx],ch
    c7e7:	20 29                	and    BYTE PTR [rcx],ch
    c7e9:	0a 20                	or     ah,BYTE PTR [rax]
    c7eb:	00 00                	add    BYTE PTR [rax],al
    c7ed:	00 00                	add    BYTE PTR [rax],al
    c7ef:	00 20                	add    BYTE PTR [rax],ah
    c7f1:	52                   	push   rdx
    c7f2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c7f3:	75 74                	jne    c869 <_IO_stdin_used+0x869>
    c7f5:	65 72 20             	gs jb  c818 <_IO_stdin_used+0x818>
    c7f8:	41                   	rex.B
    c7f9:	64 76 65             	fs jbe c861 <_IO_stdin_used+0x861>
    c7fc:	72 74                	jb     c872 <_IO_stdin_used+0x872>
    c7fe:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    c805:	20 28                	and    BYTE PTR [rax],ch
    c807:	55                   	push   rbp
    c808:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c809:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c80d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c80e:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c811:	64 65 3a 20          	fs cmp ah,BYTE PTR gs:[rax]
    c815:	25 64 20 29 20       	and    eax,0x20292064
    c81a:	29 0a                	sub    DWORD PTR [rdx],ecx
    c81c:	00 20                	add    BYTE PTR [rax],ah
    c81e:	52                   	push   rdx
    c81f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c820:	75 74                	jne    c896 <_IO_stdin_used+0x896>
    c822:	65 72 20             	gs jb  c845 <_IO_stdin_used+0x845>
    c825:	53                   	push   rbx
    c826:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c827:	6c                   	ins    BYTE PTR es:[rdi],dx
    c828:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    c82f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c830:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c831:	20 29                	and    BYTE PTR [rcx],ch
    c833:	00 20                	add    BYTE PTR [rax],ah
    c835:	54                   	push   rsp
    c836:	69 6d 65 20 54 6f 20 	imul   ebp,DWORD PTR [rbp+0x65],0x206f5420
    c83d:	4c 69 76 65 20 65 78 	imul   r14,QWORD PTR [rsi+0x65],0x63786520
    c844:	63 
    c845:	65 65 64 65 64 00 20 	gs gs fs gs add BYTE PTR fs:[rax],ah
    c84c:	28 20                	sub    BYTE PTR [rax],ah
    c84e:	74 74                	je     c8c4 <_IO_stdin_used+0x8c4>
    c850:	6c                   	ins    BYTE PTR es:[rdi],dx
    c851:	20 65 78             	and    BYTE PTR [rbp+0x78],ah
    c854:	63 65 65             	movsxd esp,DWORD PTR [rbp+0x65]
    c857:	64 65 64 20 69 6e    	fs gs and BYTE PTR fs:[rcx+0x6e],ch
    c85d:	20 74 72 61          	and    BYTE PTR [rdx+rsi*2+0x61],dh
    c861:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c862:	73 69                	jae    c8cd <_IO_stdin_used+0x8cd>
    c864:	74 20                	je     c886 <_IO_stdin_used+0x886>
    c866:	29 00                	sub    DWORD PTR [rax],eax
    c868:	20 28                	and    BYTE PTR [rax],ch
    c86a:	20 46 72             	and    BYTE PTR [rsi+0x72],al
    c86d:	61                   	(bad)  
    c86e:	67 6d                	ins    DWORD PTR es:[edi],dx
    c870:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c872:	74 20                	je     c894 <_IO_stdin_used+0x894>
    c874:	52                   	push   rdx
    c875:	65 61                	gs (bad) 
    c877:	73 73                	jae    c8ec <_IO_stdin_used+0x8ec>
    c879:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    c87b:	62                   	(bad)  
    c87c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c87d:	79 20                	jns    c89f <_IO_stdin_used+0x89f>
    c87f:	74 69                	je     c8ea <_IO_stdin_used+0x8ea>
    c881:	6d                   	ins    DWORD PTR es:[rdi],dx
    c882:	65 20 65 78          	and    BYTE PTR gs:[rbp+0x78],ah
    c886:	63 65 65             	movsxd esp,DWORD PTR [rbp+0x65]
    c889:	64 65 64 20 29       	fs gs and BYTE PTR fs:[rcx],ch
    c88e:	00 20                	add    BYTE PTR [rax],ah
    c890:	28 20                	sub    BYTE PTR [rax],ah
    c892:	55                   	push   rbp
    c893:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c894:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c898:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c899:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c89c:	64 65 3a 20          	fs cmp ah,BYTE PTR gs:[rax]
    c8a0:	25 64 29 0a 00       	and    eax,0xa2964
    c8a5:	20 74 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dh
    c8a9:	65 73 74             	gs jae c920 <_IO_stdin_used+0x920>
    c8ac:	61                   	(bad)  
    c8ad:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8ae:	70 20                	jo     c8d0 <_IO_stdin_used+0x8d0>
    c8b0:	72 65                	jb     c917 <_IO_stdin_used+0x917>
    c8b2:	71 75                	jno    c929 <_IO_stdin_used+0x929>
    c8b4:	65 73 74             	gs jae c92b <_IO_stdin_used+0x92b>
    c8b7:	00 20                	add    BYTE PTR [rax],ah
    c8b9:	74 69                	je     c924 <_IO_stdin_used+0x924>
    c8bb:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8bc:	65 73 74             	gs jae c933 <_IO_stdin_used+0x933>
    c8bf:	61                   	(bad)  
    c8c0:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8c1:	70 20                	jo     c8e3 <_IO_stdin_used+0x8e3>
    c8c3:	72 65                	jb     c92a <_IO_stdin_used+0x92a>
    c8c5:	70 6c                	jo     c933 <_IO_stdin_used+0x933>
    c8c7:	79 00                	jns    c8c9 <_IO_stdin_used+0x8c9>
    c8c9:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    c8cc:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c8d0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c8d1:	20 69 63             	and    BYTE PTR [rcx+0x63],ch
    c8d4:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8d5:	70 20                	jo     c8f7 <_IO_stdin_used+0x8f7>
    c8d7:	74 79                	je     c952 <_IO_stdin_used+0x952>
    c8d9:	70 65                	jo     c940 <_IO_stdin_used+0x940>
    c8db:	3d 25 64 00 00       	cmp    eax,0x6425
    c8e0:	06                   	(bad)  
    c8e1:	78 ff                	js     c8e2 <_IO_stdin_used+0x8e2>
    c8e3:	ff 29                	jmp    FWORD PTR [rcx]
    c8e5:	7b ff                	jnp    c8e6 <_IO_stdin_used+0x8e6>
    c8e7:	ff 29                	jmp    FWORD PTR [rcx]
    c8e9:	7b ff                	jnp    c8ea <_IO_stdin_used+0x8ea>
    c8eb:	ff 17                	call   QWORD PTR [rdi]
    c8ed:	78 ff                	js     c8ee <_IO_stdin_used+0x8ee>
    c8ef:	ff 84 79 ff ff 95 79 	inc    DWORD PTR [rcx+rdi*2+0x7995ffff]
    c8f6:	ff                   	(bad)  
    c8f7:	ff 29                	jmp    FWORD PTR [rcx]
    c8f9:	7b ff                	jnp    c8fa <_IO_stdin_used+0x8fa>
    c8fb:	ff 29                	jmp    FWORD PTR [rcx]
    c8fd:	7b ff                	jnp    c8fe <_IO_stdin_used+0x8fe>
    c8ff:	ff 32                	push   QWORD PTR [rdx]
    c901:	7a ff                	jp     c902 <_IO_stdin_used+0x902>
    c903:	ff 43 7a             	inc    DWORD PTR [rbx+0x7a]
    c906:	ff                   	(bad)  
    c907:	ff 8e 7a ff ff 9f    	dec    DWORD PTR [rsi-0x60000086]
    c90d:	7a ff                	jp     c90e <_IO_stdin_used+0x90e>
    c90f:	ff 29                	jmp    FWORD PTR [rcx]
    c911:	7b ff                	jnp    c912 <_IO_stdin_used+0x912>
    c913:	ff 0d 7b ff ff 1b    	dec    DWORD PTR [rip+0x1bffff7b]        # 1c00c894 <_end+0x1becf854>
    c919:	7b ff                	jnp    c91a <_IO_stdin_used+0x91a>
    c91b:	ff 26                	jmp    QWORD PTR [rsi]
    c91d:	78 ff                	js     c91e <_IO_stdin_used+0x91e>
    c91f:	ff 37                	push   QWORD PTR [rdi]
    c921:	78 ff                	js     c922 <_IO_stdin_used+0x922>
    c923:	ff 48 78             	dec    DWORD PTR [rax+0x78]
    c926:	ff                   	(bad)  
    c927:	ff 59 78             	call   FWORD PTR [rcx+0x78]
    c92a:	ff                   	(bad)  
    c92b:	ff 6a 78             	jmp    FWORD PTR [rdx+0x78]
    c92e:	ff                   	(bad)  
    c92f:	ff                   	(bad)  
    c930:	7b 78                	jnp    c9aa <_IO_stdin_used+0x9aa>
    c932:	ff                   	(bad)  
    c933:	ff 8c 78 ff ff 9d 78 	dec    DWORD PTR [rax+rdi*2+0x789dffff]
    c93a:	ff                   	(bad)  
    c93b:	ff ae 78 ff ff bf    	jmp    FWORD PTR [rsi-0x40000088]
    c941:	78 ff                	js     c942 <_IO_stdin_used+0x942>
    c943:	ff cd                	dec    ebp
    c945:	78 ff                	js     c946 <_IO_stdin_used+0x946>
    c947:	ff                   	(bad)  
    c948:	db 78 ff             	fstp   TBYTE PTR [rax-0x1]
    c94b:	ff                   	(bad)  
    c94c:	e9 78 ff ff f7       	jmp    fffffffff800c8c9 <_end+0xfffffffff7ecf889>
    c951:	78 ff                	js     c952 <_IO_stdin_used+0x952>
    c953:	ff 05 79 ff ff 13    	inc    DWORD PTR [rip+0x13ffff79]        # 1400c8d2 <_end+0x13ecf892>
    c959:	79 ff                	jns    c95a <_IO_stdin_used+0x95a>
    c95b:	ff 00                	inc    DWORD PTR [rax]
    c95d:	00 00                	add    BYTE PTR [rax],al
    c95f:	00 1b                	add    BYTE PTR [rbx],bl
    c961:	5b                   	pop    rbx
    c962:	33 32                	xor    esi,DWORD PTR [rdx]
    c964:	6d                   	ins    DWORD PTR es:[rdi],dx
    c965:	00 25 73 00 49 50    	add    BYTE PTR [rip+0x50490073],ah        # 5049c9de <_end+0x5035f99e>
    c96b:	76 34                	jbe    c9a1 <_IO_stdin_used+0x9a1>
    c96d:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642603e6 <_end+0x641233a6>
    c973:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325e9b7 <_end+0x73121977>
    c979:	3a 25 64 0a 00 09    	cmp    ah,BYTE PTR [rip+0x9000a64]        # 900d3e3 <_end+0x8ed03a3>
    c97f:	54                   	push   rsp
    c980:	43 50                	rex.XB push r8
    c982:	20 5b 00             	and    BYTE PTR [rbx+0x0],bl
    c985:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c988:	33 6d 00             	xor    ebp,DWORD PTR [rbp+0x0]
    c98b:	25 73 20 41 43       	and    eax,0x43412073
    c990:	4b 20 00             	rex.WXB and BYTE PTR [r8],al
    c993:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c996:	37                   	(bad)  
    c997:	6d                   	ins    DWORD PTR es:[rdi],dx
    c998:	00 25 73 20 46 49    	add    BYTE PTR [rip+0x49462073],ah        # 4946ea11 <_end+0x493319d1>
    c99e:	4e 20 00             	rex.WRX and BYTE PTR [rax],r8b
    c9a1:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9a4:	34 6d                	xor    al,0x6d
    c9a6:	00 25 73 20 50 53    	add    BYTE PTR [rip+0x53502073],ah        # 5350ea1f <_end+0x533d19df>
    c9ac:	48 20 00             	rex.W and BYTE PTR [rax],al
    c9af:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9b2:	31 6d 00             	xor    DWORD PTR [rbp+0x0],ebp
    c9b5:	25 73 20 52 53       	and    eax,0x53522073
    c9ba:	54                   	push   rsp
    c9bb:	20 00                	and    BYTE PTR [rax],al
    c9bd:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9c0:	35 6d 00 25 73       	xor    eax,0x7325006d
    c9c5:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    c9c8:	4e 20 00             	rex.WRX and BYTE PTR [rax],r8b
    c9cb:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9ce:	36 6d                	ss ins DWORD PTR es:[rdi],dx
    c9d0:	00 25 73 20 55 52    	add    BYTE PTR [rip+0x52552073],ah        # 5255ea49 <_end+0x52421a09>
    c9d6:	47 20 00             	rex.RXB and BYTE PTR [r8],r8b
    c9d9:	5d                   	pop    rbp
    c9da:	00 1b                	add    BYTE PTR [rbx],bl
    c9dc:	5b                   	pop    rbx
    c9dd:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    c9e0:	25 73 53 75 73       	and    eax,0x73755373
    c9e5:	70 69                	jo     ca50 <_IO_stdin_used+0xa50>
    c9e7:	63 69 6f             	movsxd ebp,DWORD PTR [rcx+0x6f]
    c9ea:	75 73                	jne    ca5f <_IO_stdin_used+0xa5f>
    c9ec:	20 54 43 50          	and    BYTE PTR [rbx+rax*2+0x50],dl
    c9f0:	20 50 61             	and    BYTE PTR [rax+0x61],dl
    c9f3:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    c9f6:	74 20                	je     ca18 <_IO_stdin_used+0xa18>
    c9f8:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c9fa:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    c9fd:	74 65                	je     ca64 <_IO_stdin_used+0xa64>
    c9ff:	72 65                	jb     ca66 <_IO_stdin_used+0xa66>
    ca01:	64 3a 20             	cmp    ah,BYTE PTR fs:[rax]
    ca04:	25 73 3a 25 64       	and    eax,0x64253a73
    ca09:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325ea4d <_end+0x73121a0d>
    ca0f:	3a 25 64 2c 20 25    	cmp    ah,BYTE PTR [rip+0x25202c64]        # 2520f679 <_end+0x250d2639>
    ca15:	64 20 66 6c          	and    BYTE PTR fs:[rsi+0x6c],ah
    ca19:	61                   	(bad)  
    ca1a:	67 73 25             	addr32 jae ca42 <_IO_stdin_used+0xa42>
    ca1d:	73 0a                	jae    ca29 <_IO_stdin_used+0xa29>
    ca1f:	00 1b                	add    BYTE PTR [rbx],bl
    ca21:	5b                   	pop    rbx
    ca22:	39 36                	cmp    DWORD PTR [rsi],esi
    ca24:	6d                   	ins    DWORD PTR es:[rdi],dx
    ca25:	00 25 73 00 49 50    	add    BYTE PTR [rip+0x50490073],ah        # 5049ca9e <_end+0x5035fa5e>
    ca2b:	76 34                	jbe    ca61 <_IO_stdin_used+0xa61>
    ca2d:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642604a6 <_end+0x64123466>
    ca33:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325ea77 <_end+0x73121a37>
    ca39:	3a 25 64 20 55 44    	cmp    ah,BYTE PTR [rip+0x44552064]        # 4455eaa3 <_end+0x44421a63>
    ca3f:	50                   	push   rax
    ca40:	0a 00                	or     al,BYTE PTR [rax]
    ca42:	1b 5b 30             	sbb    ebx,DWORD PTR [rbx+0x30]
    ca45:	6d                   	ins    DWORD PTR es:[rdi],dx
    ca46:	00 00                	add    BYTE PTR [rax],al
    ca48:	49 50                	rex.WB push r8
    ca4a:	76 34                	jbe    ca80 <_IO_stdin_used+0xa80>
    ca4c:	20 49 47             	and    BYTE PTR [rcx+0x47],cl
    ca4f:	4d 50                	rex.WRB push r8
    ca51:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2deaca <_end+0x3e1a1a8a>
    ca57:	20 25 73 20 5b 00    	and    BYTE PTR [rip+0x5b2073],ah        # 5bead0 <_end+0x481a90>
    ca5d:	20 4d 65             	and    BYTE PTR [rbp+0x65],cl
    ca60:	6d                   	ins    DWORD PTR es:[rdi],dx
    ca61:	62                   	(bad)  
    ca62:	65 72 73             	gs jb  cad8 <_IO_stdin_used+0xad8>
    ca65:	68 69 70 20 51       	push   0x51207069
    ca6a:	75 65                	jne    cad1 <_IO_stdin_used+0xad1>
    ca6c:	72 79                	jb     cae7 <_IO_stdin_used+0xae7>
    ca6e:	20 5d 00             	and    BYTE PTR [rbp+0x0],bl
    ca71:	00 00                	add    BYTE PTR [rax],al
    ca73:	00 00                	add    BYTE PTR [rax],al
    ca75:	00 00                	add    BYTE PTR [rax],al
    ca77:	00 20                	add    BYTE PTR [rax],ah
    ca79:	4d                   	rex.WRB
    ca7a:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    ca7c:	62                   	(bad)  
    ca7d:	65 72 73             	gs jb  caf3 <_IO_stdin_used+0xaf3>
    ca80:	68 69 70 20 52       	push   0x52207069
    ca85:	65 70 6f             	gs jo  caf7 <_IO_stdin_used+0xaf7>
    ca88:	72 74                	jb     cafe <_IO_stdin_used+0xafe>
    ca8a:	20 2f                	and    BYTE PTR [rdi],ch
    ca8c:	20 4a 6f             	and    BYTE PTR [rdx+0x6f],cl
    ca8f:	69 6e 20 67 72 6f 75 	imul   ebp,DWORD PTR [rsi+0x20],0x756f7267
    ca96:	70 20                	jo     cab8 <_IO_stdin_used+0xab8>
    ca98:	25 73 20 66 6f       	and    eax,0x6f662073
    ca9d:	72 20                	jb     cabf <_IO_stdin_used+0xabf>
    ca9f:	61                   	(bad)  
    caa0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    caa1:	79 20                	jns    cac3 <_IO_stdin_used+0xac3>
    caa3:	73 6f                	jae    cb14 <_IO_stdin_used+0xb14>
    caa5:	75 72                	jne    cb19 <_IO_stdin_used+0xb19>
    caa7:	63 65 73             	movsxd esp,DWORD PTR [rbp+0x73]
    caaa:	20 5d 0a             	and    BYTE PTR [rbp+0xa],bl
    caad:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    cab0:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    cab4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cab5:	20 49 47             	and    BYTE PTR [rcx+0x47],cl
    cab8:	4d 50                	rex.WRB push r8
    caba:	20 54 79 70          	and    BYTE PTR [rcx+rdi*2+0x70],dl
    cabe:	65 3d 25 64 20 5d    	gs cmp eax,0x5d206425
    cac4:	0a 00                	or     al,BYTE PTR [rax]
    cac6:	25 64 2d 25 30       	and    eax,0x30252d64
    cacb:	32 64 2d 25          	xor    ah,BYTE PTR [rbp+rbp*1+0x25]
    cacf:	30 32                	xor    BYTE PTR [rdx],dh
    cad1:	64 20 25 30 32 64 3a 	and    BYTE PTR fs:[rip+0x3a643230],ah        # 3a64fd08 <_end+0x3a512cc8>
    cad8:	25 30 32 64 3a       	and    eax,0x3a643230
    cadd:	25 30 32 64 00       	and    eax,0x643230
    cae2:	25 73 20 25 73       	and    eax,0x73252073
    cae7:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2deb60 <_end+0x3e1a1b20>
    caed:	20 25 73 0a 00 25    	and    BYTE PTR [rip+0x25000a73],ah        # 2500d566 <_end+0x24ed0526>
    caf3:	73 20                	jae    cb15 <_IO_stdin_used+0xb15>
    caf5:	25 73 20 25 73       	and    eax,0x73252073
    cafa:	3a 25 64 20 2d 3e    	cmp    ah,BYTE PTR [rip+0x3e2d2064]        # 3e2deb64 <_end+0x3e1a1b24>
    cb00:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64260579 <_end+0x64123539>
    cb06:	0a 00                	or     al,BYTE PTR [rax]
    cb08:	25 73 00 61 00       	and    eax,0x610073
    cb0d:	25 30 32 78 00       	and    eax,0x783230
    cb12:	00 00                	add    BYTE PTR [rax],al
    cb14:	00 00                	add    BYTE PTR [rax],al
    cb16:	00 00                	add    BYTE PTR [rax],al
    cb18:	72 00                	jb     cb1a <_IO_stdin_used+0xb1a>
    cb1a:	00 00                	add    BYTE PTR [rax],al
    cb1c:	00 00                	add    BYTE PTR [rax],al
    cb1e:	00 00                	add    BYTE PTR [rax],al
    cb20:	45 72 72             	rex.RB jb cb95 <_IO_stdin_used+0xb95>
    cb23:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb24:	72 20                	jb     cb46 <_IO_stdin_used+0xb46>
    cb26:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb27:	70 65                	jo     cb8e <_IO_stdin_used+0xb8e>
    cb29:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cb2a:	69 6e 67 20 63 6f 6e 	imul   ebp,DWORD PTR [rsi+0x67],0x6e6f6320
    cb31:	66 69 67 75 72 61    	imul   sp,WORD PTR [rdi+0x75],0x6172
    cb37:	74 69                	je     cba2 <_IO_stdin_used+0xba2>
    cb39:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb3a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cb3b:	20 66 69             	and    BYTE PTR [rsi+0x69],ah
    cb3e:	6c                   	ins    BYTE PTR es:[rdi],dx
    cb3f:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    cb42:	25 73 0a 00 0a       	and    eax,0xa000a73
    cb47:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    cb4a:	72 69                	jb     cbb5 <_IO_stdin_used+0xbb5>
    cb4c:	63 74 5f 69          	movsxd esi,DWORD PTR [rdi+rbx*2+0x69]
    cb50:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
    cb53:	5f                   	pop    rdi
    cb54:	74 69                	je     cbbf <_IO_stdin_used+0xbbf>
    cb56:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb57:	65 73 74             	gs jae cbce <_IO_stdin_used+0xbce>
    cb5a:	61                   	(bad)  
    cb5b:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb5c:	70 5f                	jo     cbbd <_IO_stdin_used+0xbbd>
    cb5e:	72 65                	jb     cbc5 <_IO_stdin_used+0xbc5>
    cb60:	71 3d                	jno    cb9f <_IO_stdin_used+0xb9f>
    cb62:	00 59 45             	add    BYTE PTR [rcx+0x45],bl
    cb65:	53                   	push   rbx
    cb66:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    cb69:	72 69                	jb     cbd4 <_IO_stdin_used+0xbd4>
    cb6b:	63 74 5f 6e          	movsxd esi,DWORD PTR [rdi+rbx*2+0x6e]
    cb6f:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb70:	61                   	(bad)  
    cb71:	70 5f                	jo     cbd2 <_IO_stdin_used+0xbd2>
    cb73:	68 6f 73 74 5f       	push   0x5f74736f
    cb78:	61                   	(bad)  
    cb79:	6c                   	ins    BYTE PTR es:[rdi],dx
    cb7a:	69 76 65 5f 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x6568635f
    cb81:	63 6b 3d             	movsxd ebp,DWORD PTR [rbx+0x3d]
    cb84:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
    cb87:	65 61                	gs (bad) 
    cb89:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cb8a:	5f                   	pop    rdi
    cb8b:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    cb8e:	61                   	(bad)  
    cb8f:	79 5f                	jns    cbf0 <_IO_stdin_used+0xbf0>
    cb91:	69 6e 5f 70 61 63 6b 	imul   ebp,DWORD PTR [rsi+0x5f],0x6b636170
    cb98:	65 74 73             	gs je  cc0e <_IO_stdin_used+0xc0e>
    cb9b:	3d 00 43 6c 65       	cmp    eax,0x656c4300
    cba0:	61                   	(bad)  
    cba1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cba2:	20 64 65 6c          	and    BYTE PTR [rbp+riz*2+0x6c],ah
    cba6:	61                   	(bad)  
    cba7:	79 20                	jns    cbc9 <_IO_stdin_used+0xbc9>
    cba9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbaa:	65 65 64 73 20       	gs gs fs jae cbcf <_IO_stdin_used+0xbcf>
    cbaf:	61                   	(bad)  
    cbb0:	20 76 61             	and    BYTE PTR [rsi+0x61],dh
    cbb3:	6c                   	ins    BYTE PTR es:[rdi],dx
    cbb4:	75 65                	jne    cc1b <_IO_stdin_used+0xc1b>
    cbb6:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
    cbb9:	65 61                	gs (bad) 
    cbbb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbbc:	5f                   	pop    rdi
    cbbd:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    cbc0:	61                   	(bad)  
    cbc1:	79 5f                	jns    cc22 <_IO_stdin_used+0xc22>
    cbc3:	69 6e 5f 6d 73 65 63 	imul   ebp,DWORD PTR [rsi+0x5f],0x6365736d
    cbca:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cbcb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbcc:	64 73 3d             	fs jae cc0c <_IO_stdin_used+0xc0c>
    cbcf:	00 75 73             	add    BYTE PTR [rbp+0x73],dh
    cbd2:	65 5f                	gs pop rdi
    cbd4:	73 71                	jae    cc47 <_IO_stdin_used+0xc47>
    cbd6:	6c                   	ins    BYTE PTR es:[rdi],dx
    cbd7:	69 74 65 3d 00 73 71 	imul   esi,DWORD PTR [rbp+riz*2+0x3d],0x6c717300
    cbde:	6c 
    cbdf:	69 74 65 5f 64 61 74 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x61746164
    cbe6:	61 
    cbe7:	62 61                	(bad)  
    cbe9:	73 65                	jae    cc50 <_IO_stdin_used+0xc50>
    cbeb:	5f                   	pop    rdi
    cbec:	70 61                	jo     cc4f <_IO_stdin_used+0xc4f>
    cbee:	74 68                	je     cc58 <_IO_stdin_used+0xc58>
    cbf0:	3d 00 73 71 6c       	cmp    eax,0x6c717300
    cbf5:	69 74 65 5f 64 61 74 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x61746164
    cbfc:	61 
    cbfd:	62 61                	(bad)  
    cbff:	73 65                	jae    cc66 <_IO_stdin_used+0xc66>
    cc01:	5f                   	pop    rdi
    cc02:	70 61                	jo     cc65 <_IO_stdin_used+0xc65>
    cc04:	74 68                	je     cc6e <_IO_stdin_used+0xc6e>
    cc06:	3a 20                	cmp    ah,BYTE PTR [rax]
    cc08:	25 73 00 69 6e       	and    eax,0x6e690073
    cc0d:	5f                   	pop    rdi
    cc0e:	61                   	(bad)  
    cc0f:	64 61                	fs (bad) 
    cc11:	70 74                	jo     cc87 <_IO_stdin_used+0xc87>
    cc13:	65 72 3d             	gs jb  cc53 <_IO_stdin_used+0xc53>
    cc16:	00 00                	add    BYTE PTR [rax],al
    cc18:	72 75                	jb     cc8f <_IO_stdin_used+0xc8f>
    cc1a:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc1b:	65 5f                	gs pop rdi
    cc1d:	70 61                	jo     cc80 <_IO_stdin_used+0xc80>
    cc1f:	72 73                	jb     cc94 <_IO_stdin_used+0xc94>
    cc21:	65 72 2e             	gs jb  cc52 <_IO_stdin_used+0xc52>
    cc24:	63 3a                	movsxd edi,DWORD PTR [rdx]
    cc26:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    cc29:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc2a:	65 5f                	gs pop rdi
    cc2c:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc2d:	69 62 72 61 72 79 5f 	imul   esp,DWORD PTR [rdx+0x72],0x5f797261
    cc34:	70 61                	jo     cc97 <_IO_stdin_used+0xc97>
    cc36:	72 73                	jb     ccab <_IO_stdin_used+0xcab>
    cc38:	65 72 3a             	gs jb  cc75 <_IO_stdin_used+0xc75>
    cc3b:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    cc3e:	5f                   	pop    rdi
    cc3f:	61                   	(bad)  
    cc40:	64 61                	fs (bad) 
    cc42:	70 74                	jo     ccb8 <_IO_stdin_used+0xcb8>
    cc44:	65 72 3a             	gs jb  cc81 <_IO_stdin_used+0xc81>
    cc47:	20 25 73 00 6f 75    	and    BYTE PTR [rip+0x756f0073],ah        # 756fccc0 <_end+0x755bfc80>
    cc4d:	74 5f                	je     ccae <_IO_stdin_used+0xcae>
    cc4f:	61                   	(bad)  
    cc50:	64 61                	fs (bad) 
    cc52:	70 74                	jo     ccc8 <_IO_stdin_used+0xcc8>
    cc54:	65 72 3d             	gs jb  cc94 <_IO_stdin_used+0xc94>
    cc57:	00 72 75             	add    BYTE PTR [rdx+0x75],dh
    cc5a:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc5b:	65 5f                	gs pop rdi
    cc5d:	70 61                	jo     ccc0 <_IO_stdin_used+0xcc0>
    cc5f:	72 73                	jb     ccd4 <_IO_stdin_used+0xcd4>
    cc61:	65 72 2e             	gs jb  cc92 <_IO_stdin_used+0xc92>
    cc64:	63 3a                	movsxd edi,DWORD PTR [rdx]
    cc66:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    cc69:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc6a:	65 5f                	gs pop rdi
    cc6c:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc6d:	69 62 72 61 72 79 5f 	imul   esp,DWORD PTR [rdx+0x72],0x5f797261
    cc74:	70 61                	jo     ccd7 <_IO_stdin_used+0xcd7>
    cc76:	72 73                	jb     cceb <_IO_stdin_used+0xceb>
    cc78:	65 72 3a             	gs jb  ccb5 <_IO_stdin_used+0xcb5>
    cc7b:	20 6f 75             	and    BYTE PTR [rdi+0x75],ch
    cc7e:	74 5f                	je     ccdf <_IO_stdin_used+0xcdf>
    cc80:	61                   	(bad)  
    cc81:	64 61                	fs (bad) 
    cc83:	70 74                	jo     ccf9 <_IO_stdin_used+0xcf9>
    cc85:	65 72 3a             	gs jb  ccc2 <_IO_stdin_used+0xcc2>
    cc88:	20 25 73 00 6d 6f    	and    BYTE PTR [rip+0x6f6d0073],ah        # 6f6dcd01 <_end+0x6f59fcc1>
    cc8e:	64 65 3d 00 6d 6f 64 	fs gs cmp eax,0x646f6d00
    cc95:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    cc98:	25 73 00 52 75       	and    eax,0x75520073
    cc9d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cc9e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cc9f:	69 6e 67 20 69 6e 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206e6920
    cca6:	00 32                	add    BYTE PTR [rdx],dh
    cca8:	00 49 50             	add    BYTE PTR [rcx+0x50],cl
    ccab:	53                   	push   rbx
    ccac:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    ccaf:	64 65 20 61 73       	fs and BYTE PTR gs:[rcx+0x73],ah
    ccb4:	20 70 65             	and    BYTE PTR [rax+0x65],dh
    ccb7:	72 20                	jb     ccd9 <_IO_stdin_used+0xcd9>
    ccb9:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    ccbc:	66 69 67 00 49 44    	imul   sp,WORD PTR [rdi+0x0],0x4449
    ccc2:	53                   	push   rbx
    ccc3:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    ccc6:	64 65 20 61 73       	fs and BYTE PTR gs:[rcx+0x73],ah
    cccb:	20 70 65             	and    BYTE PTR [rax+0x65],dh
    ccce:	72 20                	jb     ccf0 <_IO_stdin_used+0xcf0>
    ccd0:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    ccd3:	66 69 67 00 6c 6f    	imul   sp,WORD PTR [rdi+0x0],0x6f6c
    ccd9:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
    ccdc:	69 70 3d 00 6c 6f 63 	imul   esi,DWORD PTR [rax+0x3d],0x636f6c00
    cce3:	61                   	(bad)  
    cce4:	6c                   	ins    BYTE PTR es:[rdi],dx
    cce5:	5f                   	pop    rdi
    cce6:	69 70 20 61 73 20 70 	imul   esi,DWORD PTR [rax+0x20],0x70207361
    cced:	65 72 20             	gs jb  cd10 <_IO_stdin_used+0xd10>
    ccf0:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    ccf3:	66 69 67 3a 20 25    	imul   sp,WORD PTR [rdi+0x3a],0x2520
    ccf9:	73 00                	jae    ccfb <_IO_stdin_used+0xcfb>
    ccfb:	64 65 66 67 77 3d    	fs gs data16 addr32 ja cd3e <_IO_stdin_used+0xd3e>
    cd01:	00 75 73             	add    BYTE PTR [rbp+0x73],dh
    cd04:	65 5f                	gs pop rdi
    cd06:	73 70                	jae    cd78 <_IO_stdin_used+0xd78>
    cd08:	69 3d 00 56 49 47 49 	imul   edi,DWORD PTR [rip+0x47495600],0x53204c49        # 474a2312 <_end+0x473652d2>
    cd0f:	4c 20 53 
    cd12:	50                   	push   rax
    cd13:	49 20 73 65          	rex.WB and BYTE PTR [r11+0x65],sil
    cd17:	72 76                	jb     cd8f <_IO_stdin_used+0xd8f>
    cd19:	69 63 65 20 61 63 74 	imul   esp,DWORD PTR [rbx+0x65],0x74636120
    cd20:	69 76 65 00 48 4f 4d 	imul   esi,DWORD PTR [rsi+0x65],0x4d4f4800
    cd27:	45 5f                	rex.RB pop r15
    cd29:	4e                   	rex.WRX
    cd2a:	45 54                	rex.RB push r12
    cd2c:	3d 00 48 4f 4d       	cmp    eax,0x4d4f4800
    cd31:	45 5f                	rex.RB pop r15
    cd33:	4e                   	rex.WRX
    cd34:	45 54                	rex.RB push r12
    cd36:	5f                   	pop    rdi
    cd37:	4d                   	rex.WRB
    cd38:	41 53                	push   r11
    cd3a:	4b 3d 00 6c 6f 63    	rex.WXB cmp rax,0x636f6c00
    cd40:	61                   	(bad)  
    cd41:	74 69                	je     cdac <_IO_stdin_used+0xdac>
    cd43:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd44:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd45:	3d 00 65 78 74       	cmp    eax,0x74786500
    cd4a:	65 72 6e             	gs jb  cdbb <_IO_stdin_used+0xdbb>
    cd4d:	61                   	(bad)  
    cd4e:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd4f:	00 53 79             	add    BYTE PTR [rbx+0x79],dl
    cd52:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd53:	74 61                	je     cdb6 <_IO_stdin_used+0xdb6>
    cd55:	78 20                	js     cd77 <_IO_stdin_used+0xd77>
    cd57:	65 72 72             	gs jb  cdcc <_IO_stdin_used+0xdcc>
    cd5a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd5b:	72 20                	jb     cd7d <_IO_stdin_used+0xd7d>
    cd5d:	61                   	(bad)  
    cd5e:	74 20                	je     cd80 <_IO_stdin_used+0xd80>
    cd60:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd61:	69 6e 65 20 25 64 3a 	imul   ebp,DWORD PTR [rsi+0x65],0x3a642520
    cd68:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # d7e1 <_IO_stdin_used+0x17e1>
    cd6e:	00 00                	add    BYTE PTR [rax],al
    cd70:	45 72 72             	rex.RB jb cde5 <_IO_stdin_used+0xde5>
    cd73:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd74:	72 20                	jb     cd96 <_IO_stdin_used+0xd96>
    cd76:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd77:	70 65                	jo     cdde <_IO_stdin_used+0xdde>
    cd79:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd7a:	69 6e 67 20 72 75 6c 	imul   ebp,DWORD PTR [rsi+0x67],0x6c757220
    cd81:	65 20 66 69          	and    BYTE PTR gs:[rsi+0x69],ah
    cd85:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd86:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    cd89:	25 73 2e 20 52       	and    eax,0x52202e73
    cd8e:	65 66 75 73          	gs data16 jne ce05 <_IO_stdin_used+0xe05>
    cd92:	69 6e 67 20 74 6f 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
    cd99:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    cd9c:	74 69                	je     ce07 <_IO_stdin_used+0xe07>
    cd9e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd9f:	75 65                	jne    ce06 <_IO_stdin_used+0xe06>
    cda1:	0a 00                	or     al,BYTE PTR [rax]
    cda3:	50                   	push   rax
    cda4:	61                   	(bad)  
    cda5:	72 73                	jb     ce1a <_IO_stdin_used+0xe1a>
    cda7:	69 6e 67 20 66 69 6c 	imul   ebp,DWORD PTR [rsi+0x67],0x6c696620
    cdae:	65 20 25 73 0a 00 61 	and    BYTE PTR gs:[rip+0x61000a73],ah        # 6100d828 <_end+0x60ed07e8>
    cdb5:	6c                   	ins    BYTE PTR es:[rdi],dx
    cdb6:	65 72 74             	gs jb  ce2d <_IO_stdin_used+0xe2d>
    cdb9:	00 46 69             	add    BYTE PTR [rsi+0x69],al
    cdbc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cdbd:	69 73 68 65 64 20 70 	imul   esi,DWORD PTR [rbx+0x68],0x70206465
    cdc4:	61                   	(bad)  
    cdc5:	72 73                	jb     ce3a <_IO_stdin_used+0xe3a>
    cdc7:	69 6e 67 20 25 73 0a 	imul   ebp,DWORD PTR [rsi+0x67],0xa732520
    cdce:	00 00                	add    BYTE PTR [rax],al
    cdd0:	45 72 72             	rex.RB jb ce45 <_IO_stdin_used+0xe45>
    cdd3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cdd4:	72 20                	jb     cdf6 <_IO_stdin_used+0xdf6>
    cdd6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cdd7:	70 65                	jo     ce3e <_IO_stdin_used+0xe3e>
    cdd9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cdda:	69 6e 67 20 25 73 20 	imul   ebp,DWORD PTR [rsi+0x67],0x20732520
    cde1:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    cde3:	72 20                	jb     ce05 <_IO_stdin_used+0xe05>
    cde5:	65 78 70             	gs js  ce58 <_IO_stdin_used+0xe58>
    cde8:	6c                   	ins    BYTE PTR es:[rdi],dx
    cde9:	2f                   	(bad)  
    cdea:	69 6d 70 6c 69 63 69 	imul   ebp,DWORD PTR [rbp+0x70],0x6963696c
    cdf1:	74 20                	je     ce13 <_IO_stdin_used+0xe13>
    cdf3:	64 65 6e             	fs outs dx,BYTE PTR gs:[rsi]
    cdf6:	79 20                	jns    ce18 <_IO_stdin_used+0xe18>
    cdf8:	70 61                	jo     ce5b <_IO_stdin_used+0xe5b>
    cdfa:	72 73                	jb     ce6f <_IO_stdin_used+0xe6f>
    cdfc:	69 6e 67 0a 00 69 70 	imul   ebp,DWORD PTR [rsi+0x67],0x7069000a
    ce03:	76 34                	jbe    ce39 <_IO_stdin_used+0xe39>
    ce05:	00 46 61             	add    BYTE PTR [rsi+0x61],al
    ce08:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    ce0f:	20 
    ce10:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ce11:	70 65                	jo     ce78 <_IO_stdin_used+0xe78>
    ce13:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ce14:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # d88d <_IO_stdin_used+0x188d>
    ce1a:	00 00                	add    BYTE PTR [rax],al
    ce1c:	00 00                	add    BYTE PTR [rax],al
    ce1e:	00 00                	add    BYTE PTR [rax],al
    ce20:	52                   	push   rdx
    ce21:	55                   	push   rbp
    ce22:	4e                   	rex.WRX
    ce23:	4e                   	rex.WRX
    ce24:	49                   	rex.WB
    ce25:	4e                   	rex.WRX
    ce26:	47 20 49 4e          	rex.RXB and BYTE PTR [r9+0x4e],r9b
    ce2a:	20 44 45 4d          	and    BYTE PTR [rbp+rax*2+0x4d],al
    ce2e:	4f                   	rex.WRXB
    ce2f:	4e 53                	rex.WRX push rbx
    ce31:	54                   	push   rsp
    ce32:	52                   	push   rdx
    ce33:	41 54                	push   r12
    ce35:	49                   	rex.WB
    ce36:	4f                   	rex.WRXB
    ce37:	4e 20 4d 4f          	rex.WRX and BYTE PTR [rbp+0x4f],r9b
    ce3b:	44                   	rex.R
    ce3c:	45                   	rex.RB
    ce3d:	2e 20 59 4f          	cs and BYTE PTR [rcx+0x4f],bl
    ce41:	55                   	push   rbp
    ce42:	20 48 41             	and    BYTE PTR [rax+0x41],cl
    ce45:	56                   	push   rsi
    ce46:	45 20 31             	and    BYTE PTR [r9],r14b
    ce49:	30 20                	xor    BYTE PTR [rax],ah
    ce4b:	53                   	push   rbx
    ce4c:	45                   	rex.RB
    ce4d:	43                   	rex.XB
    ce4e:	4f                   	rex.WRXB
    ce4f:	4e                   	rex.WRX
    ce50:	44 53                	rex.R push rbx
    ce52:	20 54 4f 20          	and    BYTE PTR [rdi+rcx*2+0x20],dl
    ce56:	41                   	rex.B
    ce57:	42                   	rex.X
    ce58:	4f 52                	rex.WRXB push r10
    ce5a:	54                   	push   rsp
    ce5b:	2e 00 00             	cs add BYTE PTR [rax],al
    ce5e:	00 00                	add    BYTE PTR [rax],al
    ce60:	52                   	push   rdx
    ce61:	55                   	push   rbp
    ce62:	4e                   	rex.WRX
    ce63:	4e                   	rex.WRX
    ce64:	49                   	rex.WB
    ce65:	4e                   	rex.WRX
    ce66:	47 20 49 4e          	rex.RXB and BYTE PTR [r9+0x4e],r9b
    ce6a:	20 54 45 53          	and    BYTE PTR [rbp+rax*2+0x53],dl
    ce6e:	54                   	push   rsp
    ce6f:	20 4d 4f             	and    BYTE PTR [rbp+0x4f],cl
    ce72:	44                   	rex.R
    ce73:	45                   	rex.RB
    ce74:	2e 20 59 4f          	cs and BYTE PTR [rcx+0x4f],bl
    ce78:	55                   	push   rbp
    ce79:	20 48 41             	and    BYTE PTR [rax+0x41],cl
    ce7c:	56                   	push   rsi
    ce7d:	45 20 31             	and    BYTE PTR [r9],r14b
    ce80:	30 20                	xor    BYTE PTR [rax],ah
    ce82:	53                   	push   rbx
    ce83:	45                   	rex.RB
    ce84:	43                   	rex.XB
    ce85:	4f                   	rex.WRXB
    ce86:	4e                   	rex.WRX
    ce87:	44 53                	rex.R push rbx
    ce89:	20 54 4f 20          	and    BYTE PTR [rdi+rcx*2+0x20],dl
    ce8d:	41                   	rex.B
    ce8e:	42                   	rex.X
    ce8f:	4f 52                	rex.WRXB push r10
    ce91:	54                   	push   rsp
    ce92:	2e 00 55 6e          	cs add BYTE PTR [rbp+0x6e],dl
    ce96:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    ce9a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ce9b:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    ce9e:	67 75 6d             	addr32 jne cf0e <_IO_stdin_used+0xf0e>
    cea1:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    cea3:	74 20                	je     cec5 <_IO_stdin_used+0xec5>
    cea5:	2d 25 63 0a 00       	sub    eax,0xa6325
    ceaa:	70 64                	jo     cf10 <_IO_stdin_used+0xf10>
    ceac:	71 68                	jno    cf16 <_IO_stdin_used+0xf16>
    ceae:	74 65                	je     cf15 <_IO_stdin_used+0xf15>
    ceb0:	69 3a 00 2f 65 74    	imul   edi,DWORD PTR [rdx],0x74652f00
    ceb6:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    ceb8:	76 69                	jbe    cf23 <_IO_stdin_used+0xf23>
    ceba:	67 69 6c 2f 64 65 6e 	imul   ebp,DWORD PTR [edi+ebp*1+0x64],0x2e796e65
    cec1:	79 2e 
    cec3:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    cec6:	66 00 46 69          	data16 add BYTE PTR [rsi+0x69],al
    ceca:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cecb:	73 69                	jae    cf36 <_IO_stdin_used+0xf36>
    cecd:	73 68                	jae    cf37 <_IO_stdin_used+0xf37>
    cecf:	65 64 20 6c 6f 61    	gs and BYTE PTR fs:[rdi+rbp*2+0x61],ch
    ced5:	64 69 6e 67 20 65 78 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x70786520
    cedc:	70 
    cedd:	6c                   	ins    BYTE PTR es:[rdi],dx
    cede:	69 63 69 74 20 64 65 	imul   esp,DWORD PTR [rbx+0x69],0x65642074
    cee5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cee6:	79 20                	jns    cf08 <_IO_stdin_used+0xf08>
    cee8:	66 69 6c 65 28 2f 65 	imul   bp,WORD PTR [rbp+riz*2+0x28],0x652f
    ceef:	74 63                	je     cf54 <_IO_stdin_used+0xf54>
    cef1:	2f                   	(bad)  
    cef2:	76 69                	jbe    cf5d <_IO_stdin_used+0xf5d>
    cef4:	67 69 6c 2f 64 65 6e 	imul   ebp,DWORD PTR [edi+ebp*1+0x64],0x2e796e65
    cefb:	79 2e 
    cefd:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    cf00:	66 29 00             	sub    WORD PTR [rax],ax
    cf03:	2f                   	(bad)  
    cf04:	65 74 63             	gs je  cf6a <_IO_stdin_used+0xf6a>
    cf07:	2f                   	(bad)  
    cf08:	76 69                	jbe    cf73 <_IO_stdin_used+0xf73>
    cf0a:	67 69 6c 2f 76 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x76],0x6c696769
    cf11:	69 6c 
    cf13:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    cf17:	66 00 50 61          	data16 add BYTE PTR [rax+0x61],dl
    cf1b:	72 73                	jb     cf90 <_IO_stdin_used+0xf90>
    cf1d:	65 64 20 72 75       	gs and BYTE PTR fs:[rdx+0x75],dh
    cf22:	6c                   	ins    BYTE PTR es:[rdi],dx
    cf23:	65 20 66 69          	and    BYTE PTR gs:[rsi+0x69],ah
    cf27:	6c                   	ins    BYTE PTR es:[rdi],dx
    cf28:	65 73 00             	gs jae cf2b <_IO_stdin_used+0xf2b>
    cf2b:	00 00                	add    BYTE PTR [rax],al
    cf2d:	00 00                	add    BYTE PTR [rax],al
    cf2f:	00 56 49             	add    BYTE PTR [rsi+0x49],dl
    cf32:	47                   	rex.RXB
    cf33:	49                   	rex.WB
    cf34:	4c 20 6c 69 73       	rex.WR and BYTE PTR [rcx+rbp*2+0x73],r13b
    cf39:	74 65                	je     cfa0 <_IO_stdin_used+0xfa0>
    cf3b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cf3c:	69 6e 67 20 6f 6e 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206e6f20
    cf43:	69 6e 74 65 72 66 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61667265
    cf4a:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    cf4d:	25 73 0a 00 70       	and    eax,0x70000a73
    cf52:	63 61 70             	movsxd esp,DWORD PTR [rcx+0x70]
    cf55:	5f                   	pop    rdi
    cf56:	6d                   	ins    DWORD PTR es:[rdi],dx
    cf57:	67 72 20             	addr32 jb cf7a <_IO_stdin_used+0xf7a>
    cf5a:	69 6e 20 70 63 61 70 	imul   ebp,DWORD PTR [rsi+0x20],0x70616370
    cf61:	5f                   	pop    rdi
    cf62:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cf63:	70 65                	jo     cfca <_IO_stdin_used+0xfca>
    cf65:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cf66:	5f                   	pop    rdi
    cf67:	6c                   	ins    BYTE PTR es:[rdi],dx
    cf68:	69 76 65 00 00 00 00 	imul   esi,DWORD PTR [rsi+0x65],0x0
    cf6f:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    cf72:	65 63 72 79          	movsxd esi,DWORD PTR gs:[rdx+0x79]
    cf76:	70 74                	jo     cfec <_IO_stdin_used+0xfec>
    cf78:	65 64 20 4e 53       	gs and BYTE PTR fs:[rsi+0x53],cl
    cf7d:	48 20 63 6f          	rex.W and BYTE PTR [rbx+0x6f],spl
    cf81:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cf82:	66 69 67 20 73 65    	imul   sp,WORD PTR [rdi+0x20],0x6573
    cf88:	72 76                	jb     d000 <_IO_stdin_used+0x1000>
    cf8a:	65 72 20             	gs jb  cfad <_IO_stdin_used+0xfad>
    cf8d:	73 74                	jae    d003 <_IO_stdin_used+0x1003>
    cf8f:	61                   	(bad)  
    cf90:	72 74                	jb     d006 <_IO_stdin_used+0x1006>
    cf92:	65 64 3a 20          	gs cmp ah,BYTE PTR fs:[rax]
    cf96:	31 32                	xor    DWORD PTR [rdx],esi
    cf98:	37                   	(bad)  
    cf99:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
    cf9c:	30 2e                	xor    BYTE PTR [rsi],ch
    cf9e:	31 3a                	xor    DWORD PTR [rdx],edi
    cfa0:	36 34 31             	ss xor al,0x31
    cfa3:	00 f3                	add    bl,dh
    cfa5:	9a                   	(bad)  
    cfa6:	ff                   	(bad)  
    cfa7:	ff 30                	push   QWORD PTR [rax]
    cfa9:	9b                   	fwait
    cfaa:	ff                   	(bad)  
    cfab:	ff 6e 9b             	jmp    FWORD PTR [rsi-0x65]
    cfae:	ff                   	(bad)  
    cfaf:	ff 6e 9b             	jmp    FWORD PTR [rsi-0x65]
    cfb2:	ff                   	(bad)  
    cfb3:	ff                   	(bad)  
    cfb4:	ff 9a ff ff 0e 9b    	call   FWORD PTR [rdx-0x64f10001]
    cfba:	ff                   	(bad)  
    cfbb:	ff 6e 9b             	jmp    FWORD PTR [rsi-0x65]
    cfbe:	ff                   	(bad)  
    cfbf:	ff 6e 9b             	jmp    FWORD PTR [rsi-0x65]
    cfc2:	ff                   	(bad)  
    cfc3:	ff 6e 9b             	jmp    FWORD PTR [rsi-0x65]
    cfc6:	ff                   	(bad)  
    cfc7:	ff 6e 9b             	jmp    FWORD PTR [rsi-0x65]
    cfca:	ff                   	(bad)  
    cfcb:	ff 6e 9b             	jmp    FWORD PTR [rsi-0x65]
    cfce:	ff                   	(bad)  
    cfcf:	ff 6e 9b             	jmp    FWORD PTR [rsi-0x65]
    cfd2:	ff                   	(bad)  
    cfd3:	ff 1e                	call   FWORD PTR [rsi]
    cfd5:	9b                   	fwait
    cfd6:	ff                   	(bad)  
    cfd7:	ff 27                	jmp    QWORD PTR [rdi]
    cfd9:	9b                   	fwait
    cfda:	ff                   	(bad)  
    cfdb:	ff 6e 9b             	jmp    FWORD PTR [rsi-0x65]
    cfde:	ff                   	(bad)  
    cfdf:	ff 6e 9b             	jmp    FWORD PTR [rsi-0x65]
    cfe2:	ff                   	(bad)  
    cfe3:	ff 4f 9b             	dec    DWORD PTR [rdi-0x65]
    cfe6:	ff                   	(bad)  
    cfe7:	ff 0a                	dec    DWORD PTR [rdx]
    cfe9:	43 61                	rex.XB (bad) 
    cfeb:	75 67                	jne    d054 <_IO_stdin_used+0x1054>
    cfed:	68 74 20 73 69       	push   0x69732074
    cff2:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    cff4:	61                   	(bad)  
    cff5:	6c                   	ins    BYTE PTR es:[rdi],dx
    cff6:	20 25 64 20 61 74    	and    BYTE PTR [rip+0x74612064],ah        # 7461f060 <_end+0x744e2020>
    cffc:	20 25 73 2c 20 65    	and    BYTE PTR [rip+0x65202c73],ah        # 6520fc75 <_end+0x650d2c35>
    d002:	78 69                	js     d06d <_IO_stdin_used+0x106d>
    d004:	74 69                	je     d06f <_IO_stdin_used+0x106f>
    d006:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d007:	67 2e 2e 2e 0a 00    	cs cs cs or al,BYTE PTR [eax]
    d00d:	00 54 6f 74          	add    BYTE PTR [rdi+rbp*2+0x74],dl
    d011:	61                   	(bad)  
    d012:	6c                   	ins    BYTE PTR es:[rdi],dx
    d013:	20 50 61             	and    BYTE PTR [rax+0x61],dl
    d016:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d019:	74 73                	je     d08e <_IO_stdin_used+0x108e>
    d01b:	20 43 61             	and    BYTE PTR [rbx+0x61],al
    d01e:	75 67                	jne    d087 <_IO_stdin_used+0x1087>
    d020:	68 74 3a 20 25       	push   0x25203a74
    d025:	64 0a 00             	or     al,BYTE PTR fs:[rax]
    d028:	53                   	push   rbx
    d029:	74 61                	je     d08c <_IO_stdin_used+0x108c>
    d02b:	74 69                	je     d096 <_IO_stdin_used+0x1096>
    d02d:	73 74                	jae    d0a3 <_IO_stdin_used+0x10a3>
    d02f:	69 63 73 0a 49 70 20 	imul   esp,DWORD PTR [rbx+0x73],0x2070490a
    d036:	61                   	(bad)  
    d037:	64 64 72 65          	fs fs jb d0a0 <_IO_stdin_used+0x10a0>
    d03b:	73 73                	jae    d0b0 <_IO_stdin_used+0x10b0>
    d03d:	20 20                	and    BYTE PTR [rax],ah
    d03f:	20 20                	and    BYTE PTR [rax],ah
    d041:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    d043:	75 6e                	jne    d0b3 <_IO_stdin_used+0x10b3>
    d045:	74 0a                	je     d051 <_IO_stdin_used+0x1051>
    d047:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    d04c:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    d051:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    d056:	2d 2d 00 00 00       	sub    eax,0x2d
    d05b:	00 00                	add    BYTE PTR [rax],al
    d05d:	00 00                	add    BYTE PTR [rax],al
    d05f:	00 25 73 0a 09 09    	add    BYTE PTR [rip+0x9090a73],ah        # 909dad8 <_end+0x8f60a98>
    d065:	74 6f                	je     d0d6 <_IO_stdin_used+0x10d6>
    d067:	74 61                	je     d0ca <_IO_stdin_used+0x10ca>
    d069:	6c                   	ins    BYTE PTR es:[rdi],dx
    d06a:	20 70 61             	and    BYTE PTR [rax+0x61],dh
    d06d:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d070:	74 73                	je     d0e5 <_IO_stdin_used+0x10e5>
    d072:	20 3d 20 25 64 0a    	and    BYTE PTR [rip+0xa642520],bh        # a64f598 <_end+0xa512558>
    d078:	09 09                	or     DWORD PTR [rcx],ecx
    d07a:	74 6f                	je     d0eb <_IO_stdin_used+0x10eb>
    d07c:	74 61                	je     d0df <_IO_stdin_used+0x10df>
    d07e:	6c                   	ins    BYTE PTR es:[rdi],dx
    d07f:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d082:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d083:	74 20                	je     d0a5 <_IO_stdin_used+0x10a5>
    d085:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d08a:	09 09                	or     DWORD PTR [rcx],ecx
    d08c:	74 6f                	je     d0fd <_IO_stdin_used+0x10fd>
    d08e:	74 61                	je     d0f1 <_IO_stdin_used+0x10f1>
    d090:	6c                   	ins    BYTE PTR es:[rdi],dx
    d091:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d094:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d097:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d09c:	09 09                	or     DWORD PTR [rcx],ecx
    d09e:	54                   	push   rsp
    d09f:	43 50                	rex.XB push r8
    d0a1:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d0a4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d0a5:	74 20                	je     d0c7 <_IO_stdin_used+0x10c7>
    d0a7:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0ac:	09 09                	or     DWORD PTR [rcx],ecx
    d0ae:	54                   	push   rsp
    d0af:	43 50                	rex.XB push r8
    d0b1:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d0b4:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d0b7:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0bc:	09 09                	or     DWORD PTR [rcx],ecx
    d0be:	55                   	push   rbp
    d0bf:	44 50                	rex.R push rax
    d0c1:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d0c4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d0c5:	74 20                	je     d0e7 <_IO_stdin_used+0x10e7>
    d0c7:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0cc:	09 09                	or     DWORD PTR [rcx],ecx
    d0ce:	55                   	push   rbp
    d0cf:	44 50                	rex.R push rax
    d0d1:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d0d4:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d0d7:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0dc:	09 09                	or     DWORD PTR [rcx],ecx
    d0de:	49                   	rex.WB
    d0df:	43                   	rex.XB
    d0e0:	4d 50                	rex.WRB push r8
    d0e2:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d0e5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d0e6:	74 20                	je     d108 <_IO_stdin_used+0x1108>
    d0e8:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0ed:	09 09                	or     DWORD PTR [rcx],ecx
    d0ef:	49                   	rex.WB
    d0f0:	43                   	rex.XB
    d0f1:	4d 50                	rex.WRB push r8
    d0f3:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d0f6:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d0f9:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0fe:	0a 00                	or     al,BYTE PTR [rax]
    d100:	77 00                	ja     d102 <_IO_stdin_used+0x1102>
    d102:	2f                   	(bad)  
    d103:	75 73                	jne    d178 <_IO_stdin_used+0x1178>
    d105:	72 2f                	jb     d136 <_IO_stdin_used+0x1136>
    d107:	73 68                	jae    d171 <_IO_stdin_used+0x1171>
    d109:	61                   	(bad)  
    d10a:	72 65                	jb     d171 <_IO_stdin_used+0x1171>
    d10c:	2f                   	(bad)  
    d10d:	76 69                	jbe    d178 <_IO_stdin_used+0x1178>
    d10f:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    d116:	63 61 
    d118:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    d11b:	2e 63 73 76          	cs movsxd esi,DWORD PTR [rbx+0x76]
    d11f:	00 43 61             	add    BYTE PTR [rbx+0x61],al
    d122:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d123:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d124:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d125:	74 20                	je     d147 <_IO_stdin_used+0x1147>
    d127:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d128:	70 65                	jo     d18f <_IO_stdin_used+0x118f>
    d12a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d12b:	20 2f                	and    BYTE PTR [rdi],ch
    d12d:	75 73                	jne    d1a2 <_IO_stdin_used+0x11a2>
    d12f:	72 2f                	jb     d160 <_IO_stdin_used+0x1160>
    d131:	73 68                	jae    d19b <_IO_stdin_used+0x119b>
    d133:	61                   	(bad)  
    d134:	72 65                	jb     d19b <_IO_stdin_used+0x119b>
    d136:	2f                   	(bad)  
    d137:	76 69                	jbe    d1a2 <_IO_stdin_used+0x11a2>
    d139:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    d140:	63 61 
    d142:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    d145:	2e 63 73 76          	cs movsxd esi,DWORD PTR [rbx+0x76]
    d149:	3a 20                	cmp    ah,BYTE PTR [rax]
    d14b:	70 72                	jo     d1bf <_IO_stdin_used+0x11bf>
    d14d:	69 6e 74 69 6e 67 20 	imul   ebp,DWORD PTR [rsi+0x74],0x20676e69
    d154:	61                   	(bad)  
    d155:	72 70                	jb     d1c7 <_IO_stdin_used+0x11c7>
    d157:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    d15a:	68 65 20 74 6f       	push   0x6f742065
    d15f:	20 73 63             	and    BYTE PTR [rbx+0x63],dh
    d162:	72 65                	jb     d1c9 <_IO_stdin_used+0x11c9>
    d164:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d166:	00 25 73 20 2d 3e    	add    BYTE PTR [rip+0x3e2d2073],ah        # 3e2df1df <_end+0x3e1a219f>
    d16c:	20 25 73 0a 00 25    	and    BYTE PTR [rip+0x25000a73],ah        # 2500dbe5 <_end+0x24ed0ba5>
    d172:	73 2c                	jae    d1a0 <_IO_stdin_used+0x11a0>
    d174:	25 73 0a 00 31       	and    eax,0x31000a73
    d179:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
    d17c:	30 00                	xor    BYTE PTR [rax],al
    d17e:	00 00                	add    BYTE PTR [rax],al
    d180:	56                   	push   rsi
    d181:	49                   	rex.WB
    d182:	47                   	rex.RXB
    d183:	49                   	rex.WB
    d184:	4c 20 55 54          	rex.WR and BYTE PTR [rbp+0x54],r10b
    d188:	4d 20 25 73 0a 09 2d 	rex.WRB and BYTE PTR [rip+0x2d090a73],r12b        # 2d09dc02 <_end+0x2cf60bc2>
    d18f:	64 3a 20             	cmp    ah,BYTE PTR fs:[rax]
    d192:	64 65 62             	fs gs (bad) 
    d195:	75 67                	jne    d1fe <_IO_stdin_used+0x11fe>
    d197:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    d19a:	64 65 0a 09          	fs or  cl,BYTE PTR gs:[rcx]
    d19e:	2d 68 3a 20 64       	sub    eax,0x64203a68
    d1a3:	69 73 70 6c 61 79 20 	imul   esi,DWORD PTR [rbx+0x70],0x2079616c
    d1aa:	74 68                	je     d214 <_IO_stdin_used+0x1214>
    d1ac:	69 73 20 6d 65 73 73 	imul   esi,DWORD PTR [rbx+0x20],0x7373656d
    d1b3:	61                   	(bad)  
    d1b4:	67 65 0a 09          	or     cl,BYTE PTR gs:[ecx]
    d1b8:	2d 69 20 3c 69       	sub    eax,0x693c2069
    d1bd:	66 61                	data16 (bad) 
    d1bf:	63 65 3e             	movsxd esp,DWORD PTR [rbp+0x3e]
    d1c2:	3a 20                	cmp    ah,BYTE PTR [rax]
    d1c4:	73 65                	jae    d22b <_IO_stdin_used+0x122b>
    d1c6:	74 20                	je     d1e8 <_IO_stdin_used+0x11e8>
    d1c8:	74 68                	je     d232 <_IO_stdin_used+0x1232>
    d1ca:	65 20 69 6e          	and    BYTE PTR gs:[rcx+0x6e],ch
    d1ce:	74 65                	je     d235 <_IO_stdin_used+0x1235>
    d1d0:	72 66                	jb     d238 <_IO_stdin_used+0x1238>
    d1d2:	61                   	(bad)  
    d1d3:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    d1d6:	74 6f                	je     d247 <_IO_stdin_used+0x1247>
    d1d8:	20 6c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],ch
    d1dc:	74 65                	je     d243 <_IO_stdin_used+0x1243>
    d1de:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d1df:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    d1e2:	0a 09                	or     cl,BYTE PTR [rcx]
    d1e4:	2d 70 20 70 72       	sub    eax,0x72702070
    d1e9:	69 6e 74 20 70 61 63 	imul   ebp,DWORD PTR [rsi+0x74],0x63617020
    d1f0:	6b 65 74 73          	imul   esp,DWORD PTR [rbp+0x74],0x73
    d1f4:	0a 09                	or     cl,BYTE PTR [rcx]
    d1f6:	2d 71 20 65 78       	sub    eax,0x78652071
    d1fb:	69 74 20 71 75 69 65 	imul   esi,DWORD PTR [rax+riz*1+0x71],0x74656975
    d202:	74 
    d203:	6c                   	ins    BYTE PTR es:[rdi],dx
    d204:	79 0a                	jns    d210 <_IO_stdin_used+0x1210>
    d206:	00 72 62             	add    BYTE PTR [rdx+0x62],dh
    d209:	00 2f                	add    BYTE PTR [rdi],ch
    d20b:	70 72                	jo     d27f <_IO_stdin_used+0x127f>
    d20d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d20e:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    d210:	63 70 75             	movsxd esi,DWORD PTR [rax+0x75]
    d213:	69 6e 66 6f 00 6d 6f 	imul   ebp,DWORD PTR [rsi+0x66],0x6f6d006f
    d21a:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    d21d:	20 6e 61             	and    BYTE PTR [rsi+0x61],ch
    d220:	6d                   	ins    DWORD PTR es:[rdi],dx
    d221:	65 00 46 6f          	add    BYTE PTR gs:[rsi+0x6f],al
    d225:	75 6e                	jne    d295 <_IO_stdin_used+0x1295>
    d227:	64 20 25 64 20 63 70 	and    BYTE PTR fs:[rip+0x70632064],ah        # 7063f292 <_end+0x70502252>
    d22e:	75 73                	jne    d2a3 <_IO_stdin_used+0x12a3>
    d230:	3a 0a                	cmp    cl,BYTE PTR [rdx]
    d232:	25 73 00 00 00       	and    eax,0x73
    d237:	00 e2                	add    dl,ah
    d239:	96                   	xchg   esi,eax
    d23a:	88 e2                	mov    dl,ah
    d23c:	96                   	xchg   esi,eax
    d23d:	88 e2                	mov    dl,ah
    d23f:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d246:	88 e2                	mov    dl,ah
    d248:	96                   	xchg   esi,eax
    d249:	88 e2                	mov    dl,ah
    d24b:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d252:	88 e2                	mov    dl,ah
    d254:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    d25b:	96                   	xchg   esi,eax
    d25c:	88 e2                	mov    dl,ah
    d25e:	96                   	xchg   esi,eax
    d25f:	88 e2                	mov    dl,ah
    d261:	96                   	xchg   esi,eax
    d262:	88 e2                	mov    dl,ah
    d264:	96                   	xchg   esi,eax
    d265:	88 e2                	mov    dl,ah
    d267:	96                   	xchg   esi,eax
    d268:	88 e2                	mov    dl,ah
    d26a:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    d271:	96                   	xchg   esi,eax
    d272:	88 e2                	mov    dl,ah
    d274:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d27b:	88 0a                	mov    BYTE PTR [rdx],cl
    d27d:	e2 96                	loop   d215 <_IO_stdin_used+0x1215>
    d27f:	88 e2                	mov    dl,ah
    d281:	96                   	xchg   esi,eax
    d282:	88 e2                	mov    dl,ah
    d284:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d28b:	88 e2                	mov    dl,ah
    d28d:	96                   	xchg   esi,eax
    d28e:	88 e2                	mov    dl,ah
    d290:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d297:	88 e2                	mov    dl,ah
    d299:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2a0:	88 e2                	mov    dl,ah
    d2a2:	80 81 e2 80 81 e2 80 	add    BYTE PTR [rcx-0x1d7e7f1e],0x80
    d2a9:	81 e2 80 81 e2 80    	and    edx,0x80e28180
    d2af:	81 e2 80 81 20 e2    	and    edx,0xe2208180
    d2b5:	96                   	xchg   esi,eax
    d2b6:	88 e2                	mov    dl,ah
    d2b8:	96                   	xchg   esi,eax
    d2b9:	88 e2                	mov    dl,ah
    d2bb:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2c2:	88 0a                	mov    BYTE PTR [rdx],cl
    d2c4:	e2 96                	loop   d25c <_IO_stdin_used+0x125c>
    d2c6:	88 e2                	mov    dl,ah
    d2c8:	96                   	xchg   esi,eax
    d2c9:	88 e2                	mov    dl,ah
    d2cb:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d2d2:	88 e2                	mov    dl,ah
    d2d4:	96                   	xchg   esi,eax
    d2d5:	88 e2                	mov    dl,ah
    d2d7:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2de:	88 e2                	mov    dl,ah
    d2e0:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2e7:	88 e2                	mov    dl,ah
    d2e9:	80 81 20 20 e2 96 88 	add    BYTE PTR [rcx-0x691ddfe0],0x88
    d2f0:	e2 96                	loop   d288 <_IO_stdin_used+0x1288>
    d2f2:	88 e2                	mov    dl,ah
    d2f4:	96                   	xchg   esi,eax
    d2f5:	88 e2                	mov    dl,ah
    d2f7:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2fe:	88 e2                	mov    dl,ah
    d300:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d307:	88 0a                	mov    BYTE PTR [rdx],cl
    d309:	e2 80                	loop   d28b <_IO_stdin_used+0x128b>
    d30b:	81 e2 96 88 e2 96    	and    edx,0x96e28896
    d311:	88 e2                	mov    dl,ah
    d313:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    d31a:	96                   	xchg   esi,eax
    d31b:	88 e2                	mov    dl,ah
    d31d:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    d324:	88 e2                	mov    dl,ah
    d326:	96                   	xchg   esi,eax
    d327:	88 e2                	mov    dl,ah
    d329:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d330:	88 e2                	mov    dl,ah
    d332:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d339:	88 e2                	mov    dl,ah
    d33b:	96                   	xchg   esi,eax
    d33c:	88 e2                	mov    dl,ah
    d33e:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d345:	88 e2                	mov    dl,ah
    d347:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d34e:	88 0a                	mov    BYTE PTR [rdx],cl
    d350:	20 e2                	and    dl,ah
    d352:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d359:	88 e2                	mov    dl,ah
    d35b:	96                   	xchg   esi,eax
    d35c:	88 e2                	mov    dl,ah
    d35e:	96                   	xchg   esi,eax
    d35f:	88 e2                	mov    dl,ah
    d361:	80 81 e2 80 81 20 e2 	add    BYTE PTR [rcx+0x208180e2],0xe2
    d368:	96                   	xchg   esi,eax
    d369:	88 e2                	mov    dl,ah
    d36b:	96                   	xchg   esi,eax
    d36c:	88 e2                	mov    dl,ah
    d36e:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    d375:	88 e2                	mov    dl,ah
    d377:	96                   	xchg   esi,eax
    d378:	88 e2                	mov    dl,ah
    d37a:	96                   	xchg   esi,eax
    d37b:	88 e2                	mov    dl,ah
    d37d:	96                   	xchg   esi,eax
    d37e:	88 e2                	mov    dl,ah
    d380:	96                   	xchg   esi,eax
    d381:	88 e2                	mov    dl,ah
    d383:	96                   	xchg   esi,eax
    d384:	88 e2                	mov    dl,ah
    d386:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    d38d:	88 e2                	mov    dl,ah
    d38f:	96                   	xchg   esi,eax
    d390:	88 e2                	mov    dl,ah
    d392:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d399:	88 e2                	mov    dl,ah
    d39b:	96                   	xchg   esi,eax
    d39c:	88 e2                	mov    dl,ah
    d39e:	96                   	xchg   esi,eax
    d39f:	88 e2                	mov    dl,ah
    d3a1:	96                   	xchg   esi,eax
    d3a2:	88 e2                	mov    dl,ah
    d3a4:	96                   	xchg   esi,eax
    d3a5:	88 e2                	mov    dl,ah
    d3a7:	96                   	xchg   esi,eax
    d3a8:	88 00                	mov    BYTE PTR [rax],al
    d3aa:	00 00                	add    BYTE PTR [rax],al
    d3ac:	00 00                	add    BYTE PTR [rax],al
    d3ae:	00 00                	add    BYTE PTR [rax],al
    d3b0:	0a 00                	or     al,BYTE PTR [rax]
    d3b2:	0d 00 00 00 00       	or     eax,0x0
    d3b7:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    d3ba:	68 5f 73 65 72       	push   0x7265735f
    d3bf:	76 65                	jbe    d426 <_IO_stdin_used+0x1426>
    d3c1:	72 2e                	jb     d3f1 <_IO_stdin_used+0x13f1>
    d3c3:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d3c5:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    d3c8:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    d3cf:	20 
    d3d0:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
    d3d3:	61                   	(bad)  
    d3d4:	74 65                	je     d43b <_IO_stdin_used+0x143b>
    d3d6:	20 73 6f             	and    BYTE PTR [rbx+0x6f],dh
    d3d9:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d3dc:	74 00                	je     d3de <_IO_stdin_used+0x13de>
    d3de:	00 00                	add    BYTE PTR [rax],al
    d3e0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d3e1:	73 68                	jae    d44b <_IO_stdin_used+0x144b>
    d3e3:	5f                   	pop    rdi
    d3e4:	73 65                	jae    d44b <_IO_stdin_used+0x144b>
    d3e6:	72 76                	jb     d45e <_IO_stdin_used+0x145e>
    d3e8:	65 72 2e             	gs jb  d419 <_IO_stdin_used+0x1419>
    d3eb:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d3ed:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    d3f0:	69 6c 75 72 65 20 69 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6e692065
    d3f7:	6e 
    d3f8:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d3fb:	74 73                	je     d470 <_IO_stdin_used+0x1470>
    d3fd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d3fe:	63 6b 6f             	movsxd ebp,DWORD PTR [rbx+0x6f]
    d401:	70 74                	jo     d477 <_IO_stdin_used+0x1477>
    d403:	00 00                	add    BYTE PTR [rax],al
    d405:	00 00                	add    BYTE PTR [rax],al
    d407:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    d40a:	68 5f 73 65 72       	push   0x7265735f
    d40f:	76 65                	jbe    d476 <_IO_stdin_used+0x1476>
    d411:	72 2e                	jb     d441 <_IO_stdin_used+0x1441>
    d413:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d415:	20 62 69             	and    BYTE PTR [rdx+0x69],ah
    d418:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d419:	64 69 6e 67 20 6f 66 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x20666f20
    d420:	20 
    d421:	73 6f                	jae    d492 <_IO_stdin_used+0x1492>
    d423:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d426:	74 20                	je     d448 <_IO_stdin_used+0x1448>
    d428:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    d42a:	72 20                	jb     d44c <_IO_stdin_used+0x144c>
    d42c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d42d:	73 68                	jae    d497 <_IO_stdin_used+0x1497>
    d42f:	5f                   	pop    rdi
    d430:	66 64 20 66 61       	data16 and BYTE PTR fs:[rsi+0x61],ah
    d435:	69 6c 65 64 00 00 00 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
    d43c:	00 
    d43d:	00 00                	add    BYTE PTR [rax],al
    d43f:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    d442:	68 5f 73 65 72       	push   0x7265735f
    d447:	76 65                	jbe    d4ae <_IO_stdin_used+0x14ae>
    d449:	72 2e                	jb     d479 <_IO_stdin_used+0x1479>
    d44b:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d44d:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    d450:	69 6c 75 72 65 20 6f 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6e6f2065
    d457:	6e 
    d458:	20 6c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],ch
    d45c:	74 65                	je     d4c3 <_IO_stdin_used+0x14c3>
    d45e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d45f:	69 6e 67 20 66 6f 72 	imul   ebp,DWORD PTR [rsi+0x67],0x726f6620
    d466:	20 6e 73             	and    BYTE PTR [rsi+0x73],ch
    d469:	68 5f 66 64 00       	push   0x64665f
    d46e:	00 00                	add    BYTE PTR [rax],al
    d470:	46 61                	rex.RX (bad) 
    d472:	69 6c 75 72 65 20 74 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f742065
    d479:	6f 
    d47a:	20 61 63             	and    BYTE PTR [rcx+0x63],ah
    d47d:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    d480:	74 20                	je     d4a2 <_IO_stdin_used+0x14a2>
    d482:	61                   	(bad)  
    d483:	20 63 6c             	and    BYTE PTR [rbx+0x6c],ah
    d486:	69 65 6e 74 20 61 74 	imul   esp,DWORD PTR [rbp+0x6e],0x74612074
    d48d:	20 25 73 0a 00 30    	and    BYTE PTR [rip+0x30000a73],ah        # 3000df06 <_end+0x2fed0ec6>
    d493:	78 25                	js     d4ba <_IO_stdin_used+0x14ba>
    d495:	30 32                	xor    BYTE PTR [rdx],dh
    d497:	78 0a                	js     d4a3 <_IO_stdin_used+0x14a3>
    d499:	00 00                	add    BYTE PTR [rax],al
    d49b:	00 00                	add    BYTE PTR [rax],al
    d49d:	00 00                	add    BYTE PTR [rax],al
    d49f:	00 61 00             	add    BYTE PTR [rcx+0x0],ah
    d4a2:	00 00                	add    BYTE PTR [rax],al
    d4a4:	00 00                	add    BYTE PTR [rax],al
    d4a6:	00 00                	add    BYTE PTR [rax],al
    d4a8:	42 61                	rex.X (bad) 
    d4aa:	73 69                	jae    d515 <_IO_stdin_used+0x1515>
    d4ac:	63 20                	movsxd esp,DWORD PTR [rax]
    d4ae:	70 6f                	jo     d51f <_IO_stdin_used+0x151f>
    d4b0:	72 74                	jb     d526 <_IO_stdin_used+0x1526>
    d4b2:	73 63                	jae    d517 <_IO_stdin_used+0x1517>
    d4b4:	61                   	(bad)  
    d4b5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d4b6:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d4ba:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d4bf:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d4c2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d4c3:	6d                   	ins    DWORD PTR es:[rdi],dx
    d4c4:	20 49 50             	and    BYTE PTR [rcx+0x50],cl
    d4c7:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    d4ca:	64 72 65             	fs jb  d532 <_IO_stdin_used+0x1532>
    d4cd:	73 73                	jae    d542 <_IO_stdin_used+0x1542>
    d4cf:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # df48 <_IO_stdin_used+0x1f48>
    d4d5:	00 00                	add    BYTE PTR [rax],al
    d4d7:	00 50 6f             	add    BYTE PTR [rax+0x6f],dl
    d4da:	72 74                	jb     d550 <_IO_stdin_used+0x1550>
    d4dc:	73 63                	jae    d541 <_IO_stdin_used+0x1541>
    d4de:	61                   	(bad)  
    d4df:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d4e0:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d4e4:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d4e9:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d4ec:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d4ed:	6d                   	ins    DWORD PTR es:[rdi],dx
    d4ee:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461f567 <_end+0x744e2527>
    d4f4:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # df6d <_IO_stdin_used+0x1f6d>
    d4fa:	00 00                	add    BYTE PTR [rax],al
    d4fc:	00 00                	add    BYTE PTR [rax],al
    d4fe:	00 00                	add    BYTE PTR [rax],al
    d500:	46                   	rex.RX
    d501:	49                   	rex.WB
    d502:	4e 20 70 6f          	rex.WRX and BYTE PTR [rax+0x6f],r14b
    d506:	72 74                	jb     d57c <_IO_stdin_used+0x157c>
    d508:	73 63                	jae    d56d <_IO_stdin_used+0x156d>
    d50a:	61                   	(bad)  
    d50b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d50c:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d510:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d515:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d518:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d519:	6d                   	ins    DWORD PTR es:[rdi],dx
    d51a:	20 49 50             	and    BYTE PTR [rcx+0x50],cl
    d51d:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    d520:	64 72 65             	fs jb  d588 <_IO_stdin_used+0x1588>
    d523:	73 73                	jae    d598 <_IO_stdin_used+0x1598>
    d525:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # df9e <_IO_stdin_used+0x1f9e>
    d52b:	00 00                	add    BYTE PTR [rax],al
    d52d:	00 00                	add    BYTE PTR [rax],al
    d52f:	00 46 49             	add    BYTE PTR [rsi+0x49],al
    d532:	4e 20 70 6f          	rex.WRX and BYTE PTR [rax+0x6f],r14b
    d536:	72 74                	jb     d5ac <_IO_stdin_used+0x15ac>
    d538:	73 63                	jae    d59d <_IO_stdin_used+0x159d>
    d53a:	61                   	(bad)  
    d53b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d53c:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d540:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d545:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d548:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d549:	6d                   	ins    DWORD PTR es:[rdi],dx
    d54a:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461f5c3 <_end+0x744e2583>
    d550:	20 25 73 0a 00 30    	and    BYTE PTR [rip+0x30000a73],ah        # 3000dfc9 <_end+0x2fed0f89>
    d556:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
    d559:	30 2e                	xor    BYTE PTR [rsi],ch
    d55b:	31 00                	xor    DWORD PTR [rax],eax
    d55d:	30 2e                	xor    BYTE PTR [rsi],ch
    d55f:	30 2e                	xor    BYTE PTR [rsi],ch
    d561:	30 2e                	xor    BYTE PTR [rsi],ch
    d563:	31 00                	xor    DWORD PTR [rax],eax
    d565:	00 00                	add    BYTE PTR [rax],al
    d567:	00 41 72             	add    BYTE PTR [rcx+0x72],al
    d56a:	70 20                	jo     d58c <_IO_stdin_used+0x158c>
    d56c:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d56e:	74 72                	je     d5e2 <_IO_stdin_used+0x15e2>
    d570:	79 20                	jns    d592 <_IO_stdin_used+0x1592>
    d572:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    d575:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d576:	67 65 64 20 66 6f    	gs and BYTE PTR fs:[esi+0x6f],ah
    d57c:	72 20                	jb     d59e <_IO_stdin_used+0x159e>
    d57e:	69 70 20 61 64 64 72 	imul   esi,DWORD PTR [rax+0x20],0x72646461
    d585:	65 73 73             	gs jae d5fb <_IO_stdin_used+0x15fb>
    d588:	20 25 73 3a 20 77    	and    BYTE PTR [rip+0x77203a73],ah        # 77211001 <_end+0x770d3fc1>
    d58e:	61                   	(bad)  
    d58f:	73 20                	jae    d5b1 <_IO_stdin_used+0x15b1>
    d591:	25 73 20 69 73       	and    eax,0x73692073
    d596:	20 6e 6f             	and    BYTE PTR [rsi+0x6f],ch
    d599:	77 20                	ja     d5bb <_IO_stdin_used+0x15bb>
    d59b:	25 73 00 72 00       	and    eax,0x720073
    d5a0:	2f                   	(bad)  
    d5a1:	75 73                	jne    d616 <_IO_stdin_used+0x1616>
    d5a3:	72 2f                	jb     d5d4 <_IO_stdin_used+0x15d4>
    d5a5:	73 68                	jae    d60f <_IO_stdin_used+0x160f>
    d5a7:	61                   	(bad)  
    d5a8:	72 65                	jb     d60f <_IO_stdin_used+0x160f>
    d5aa:	2f                   	(bad)  
    d5ab:	76 69                	jbe    d616 <_IO_stdin_used+0x1616>
    d5ad:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    d5b4:	63 61 
    d5b6:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    d5b9:	2e 63 73 76          	cs movsxd esi,DWORD PTR [rbx+0x76]
    d5bd:	00 00                	add    BYTE PTR [rax],al
    d5bf:	00 43 6f             	add    BYTE PTR [rbx+0x6f],al
    d5c2:	75 6c                	jne    d630 <_IO_stdin_used+0x1630>
    d5c4:	64 20 6e 6f          	and    BYTE PTR fs:[rsi+0x6f],ch
    d5c8:	74 20                	je     d5ea <_IO_stdin_used+0x15ea>
    d5ca:	6c                   	ins    BYTE PTR es:[rdi],dx
    d5cb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d5cc:	61                   	(bad)  
    d5cd:	64 20 61 72          	and    BYTE PTR fs:[rcx+0x72],ah
    d5d1:	70 20                	jo     d5f3 <_IO_stdin_used+0x15f3>
    d5d3:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    d5d6:	68 65 20 66 72       	push   0x72662065
    d5db:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d5dc:	6d                   	ins    DWORD PTR es:[rdi],dx
    d5dd:	20 64 61 74          	and    BYTE PTR [rcx+riz*2+0x74],ah
    d5e1:	61                   	(bad)  
    d5e2:	62 61                	(bad)  
    d5e4:	73 65                	jae    d64b <_IO_stdin_used+0x164b>
    d5e6:	2c 20                	sub    al,0x20
    d5e8:	66 69 6c 65 20 6e 6f 	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f6e
    d5ef:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d5f0:	65 78 69             	gs js  d65c <_IO_stdin_used+0x165c>
    d5f3:	73 74                	jae    d669 <_IO_stdin_used+0x1669>
    d5f5:	61                   	(bad)  
    d5f6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d5f7:	74 00                	je     d5f9 <_IO_stdin_used+0x15f9>
    d5f9:	0a 00                	or     al,BYTE PTR [rax]
    d5fb:	2c 00                	sub    al,0x0
    d5fd:	00 00                	add    BYTE PTR [rax],al
    d5ff:	00 54 4c 53          	add    BYTE PTR [rsp+rcx*2+0x53],dl
    d603:	20 31                	and    BYTE PTR [rcx],dh
    d605:	2e 30 20             	cs xor BYTE PTR [rax],ah
    d608:	44                   	rex.R
    d609:	41 54                	push   r12
    d60b:	41 3a 20             	cmp    spl,BYTE PTR [r8]
    d60e:	00 54 4c 53          	add    BYTE PTR [rsp+rcx*2+0x53],dl
    d612:	20 31                	and    BYTE PTR [rcx],dh
    d614:	2e 32 20             	cs xor ah,BYTE PTR [rax]
    d617:	44                   	rex.R
    d618:	41 54                	push   r12
    d61a:	41 3a 20             	cmp    spl,BYTE PTR [r8]
    d61d:	00 54 4c 53          	add    BYTE PTR [rsp+rcx*2+0x53],dl
    d621:	20 31                	and    BYTE PTR [rcx],dh
    d623:	2e 33 20             	cs xor esp,DWORD PTR [rax]
    d626:	44                   	rex.R
    d627:	41 54                	push   r12
    d629:	41 3a 20             	cmp    spl,BYTE PTR [r8]
    d62c:	00 43 6c             	add    BYTE PTR [rbx+0x6c],al
    d62f:	69 65 6e 74 20 48 65 	imul   esp,DWORD PTR [rbp+0x6e],0x65482074
    d636:	6c                   	ins    BYTE PTR es:[rdi],dx
    d637:	6c                   	ins    BYTE PTR es:[rdi],dx
    d638:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d639:	00 53 65             	add    BYTE PTR [rbx+0x65],dl
    d63c:	72 76                	jb     d6b4 <_IO_stdin_used+0x16b4>
    d63e:	65 72 20             	gs jb  d661 <_IO_stdin_used+0x1661>
    d641:	48                   	rex.W
    d642:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    d644:	6c                   	ins    BYTE PTR es:[rdi],dx
    d645:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d646:	00 4e 65             	add    BYTE PTR [rsi+0x65],cl
    d649:	77 20                	ja     d66b <_IO_stdin_used+0x166b>
    d64b:	53                   	push   rbx
    d64c:	65 73 73             	gs jae d6c2 <_IO_stdin_used+0x16c2>
    d64f:	69 6f 6e 20 54 69 63 	imul   ebp,DWORD PTR [rdi+0x6e],0x63695420
    d656:	6b 65 74 00          	imul   esp,DWORD PTR [rbp+0x74],0x0
    d65a:	43                   	rex.XB
    d65b:	65 72 74             	gs jb  d6d2 <_IO_stdin_used+0x16d2>
    d65e:	69 66 69 63 61 74 65 	imul   esp,DWORD PTR [rsi+0x69],0x65746163
    d665:	00 43 6c             	add    BYTE PTR [rbx+0x6c],al
    d668:	69 65 6e 74 20 4b 65 	imul   esp,DWORD PTR [rbp+0x6e],0x654b2074
    d66f:	78 00                	js     d671 <_IO_stdin_used+0x1671>
    d671:	00 00                	add    BYTE PTR [rax],al
    d673:	00 a4 ab ff ff 08 ab 	add    BYTE PTR [rbx+rbp*4-0x54f70001],ah
    d67a:	ff                   	(bad)  
    d67b:	ff 21                	jmp    QWORD PTR [rcx]
    d67d:	ab                   	stos   DWORD PTR es:[rdi],eax
    d67e:	ff                   	(bad)  
    d67f:	ff a4 ab ff ff 42 ab 	jmp    QWORD PTR [rbx+rbp*4-0x54bd0001]
    d686:	ff                   	(bad)  
    d687:	ff a4 ab ff ff a4 ab 	jmp    QWORD PTR [rbx+rbp*4-0x545b0001]
    d68e:	ff                   	(bad)  
    d68f:	ff a4 ab ff ff a4 ab 	jmp    QWORD PTR [rbx+rbp*4-0x545b0001]
    d696:	ff                   	(bad)  
    d697:	ff a4 ab ff ff 84 ab 	jmp    QWORD PTR [rbx+rbp*4-0x547b0001]
    d69e:	ff                   	(bad)  
    d69f:	ff 63 ab             	jmp    QWORD PTR [rbx-0x55]
    d6a2:	ff                   	(bad)  
    d6a3:	ff 00                	inc    DWORD PTR [rax]
    d6a5:	00 00                	add    BYTE PTR [rax],al
    d6a7:	00 55 70             	add    BYTE PTR [rbp+0x70],dl
    d6aa:	64 61                	fs (bad) 
    d6ac:	74 69                	je     d717 <_IO_stdin_used+0x1717>
    d6ae:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d6af:	67 20 64 62 00       	and    BYTE PTR [edx+eiz*2+0x0],ah
    d6b4:	53                   	push   rbx
    d6b5:	51                   	push   rcx
    d6b6:	6c                   	ins    BYTE PTR es:[rdi],dx
    d6b7:	69 74 65 20 65 72 72 	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x6f727265
    d6be:	6f 
    d6bf:	72 3a                	jb     d6fb <_IO_stdin_used+0x16fb>
    d6c1:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # e13a <__GNU_EH_FRAME_HDR+0x2a>
    d6c7:	00 49 4e             	add    BYTE PTR [rcx+0x4e],cl
    d6ca:	53                   	push   rbx
    d6cb:	45 52                	rex.RB push r10
    d6cd:	54                   	push   rsp
    d6ce:	20 49 4e             	and    BYTE PTR [rcx+0x4e],cl
    d6d1:	54                   	push   rsp
    d6d2:	4f 20 61 72          	rex.WRXB and BYTE PTR [r9+0x72],r12b
    d6d6:	70 5f                	jo     d737 <_IO_stdin_used+0x1737>
    d6d8:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    d6db:	68 65 20 28 69       	push   0x69282065
    d6e0:	70 5f                	jo     d741 <_IO_stdin_used+0x1741>
    d6e2:	61                   	(bad)  
    d6e3:	64 64 72 65          	fs fs jb d74c <_IO_stdin_used+0x174c>
    d6e7:	73 73                	jae    d75c <_IO_stdin_used+0x175c>
    d6e9:	2c 20                	sub    al,0x20
    d6eb:	6d                   	ins    DWORD PTR es:[rdi],dx
    d6ec:	61                   	(bad)  
    d6ed:	63 5f 61             	movsxd ebx,DWORD PTR [rdi+0x61]
    d6f0:	64 64 72 65          	fs fs jb d759 <_IO_stdin_used+0x1759>
    d6f4:	73 73                	jae    d769 <_IO_stdin_used+0x1769>
    d6f6:	29 20                	sub    DWORD PTR [rax],esp
    d6f8:	56                   	push   rsi
    d6f9:	41                   	rex.B
    d6fa:	4c 55                	rex.WR push rbp
    d6fc:	45 53                	rex.RB push r11
    d6fe:	20 28                	and    BYTE PTR [rax],ch
    d700:	22 25 73 22 2c 20    	and    ah,BYTE PTR [rip+0x202c2273]        # 202cf979 <_end+0x20192939>
    d706:	22 25 73 22 29 3b    	and    ah,BYTE PTR [rip+0x3b292273]        # 3b29f97f <_end+0x3b16293f>
    d70c:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    d70f:	4c 69 74 65 20 65 6e 	imul   r14,QWORD PTR [rbp+riz*2+0x20],0x6f636e65
    d716:	63 6f 
    d718:	75 6e                	jne    d788 <_IO_stdin_used+0x1788>
    d71a:	74 65                	je     d781 <_IO_stdin_used+0x1781>
    d71c:	72 65                	jb     d783 <_IO_stdin_used+0x1783>
    d71e:	64 20 65 72          	and    BYTE PTR fs:[rbp+0x72],ah
    d722:	72 6f                	jb     d793 <_IO_stdin_used+0x1793>
    d724:	72 3a                	jb     d760 <_IO_stdin_used+0x1760>
    d726:	20 25 73 0a 00 2f    	and    BYTE PTR [rip+0x2f000a73],ah        # 2f00e19f <_end+0x2eed115f>
    d72c:	75 73                	jne    d7a1 <_IO_stdin_used+0x17a1>
    d72e:	72 2f                	jb     d75f <_IO_stdin_used+0x175f>
    d730:	73 68                	jae    d79a <_IO_stdin_used+0x179a>
    d732:	61                   	(bad)  
    d733:	72 65                	jb     d79a <_IO_stdin_used+0x179a>
    d735:	2f                   	(bad)  
    d736:	76 69                	jbe    d7a1 <_IO_stdin_used+0x17a1>
    d738:	67 69 6c 2f 73 70 69 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x642e6970
    d73f:	2e 64 
    d741:	62                   	(bad)  
    d742:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    d745:	4c 69 74 65 20 65 72 	imul   r14,QWORD PTR [rbp+riz*2+0x20],0x6f727265
    d74c:	72 6f 
    d74e:	72 20                	jb     d770 <_IO_stdin_used+0x1770>
    d750:	25 73 0a 00 00       	and    eax,0xa73
    d755:	00 00                	add    BYTE PTR [rax],al
    d757:	00 49 4e             	add    BYTE PTR [rcx+0x4e],cl
    d75a:	53                   	push   rbx
    d75b:	45 52                	rex.RB push r10
    d75d:	54                   	push   rsp
    d75e:	20 49 4e             	and    BYTE PTR [rcx+0x4e],cl
    d761:	54                   	push   rsp
    d762:	4f 20 73 70          	rex.WRXB and BYTE PTR [r11+0x70],r14b
    d766:	69 5f 74 61 62 6c 65 	imul   ebx,DWORD PTR [rdi+0x74],0x656c6261
    d76d:	20 28                	and    BYTE PTR [rax],ch
    d76f:	73 65                	jae    d7d6 <_IO_stdin_used+0x17d6>
    d771:	72 76                	jb     d7e9 <_IO_stdin_used+0x17e9>
    d773:	5f                   	pop    rdi
    d774:	61                   	(bad)  
    d775:	64 64 72 2c          	fs fs jb d7a5 <_IO_stdin_used+0x17a5>
    d779:	20 63 6c             	and    BYTE PTR [rbx+0x6c],ah
    d77c:	69 5f 61 64 64 72 2c 	imul   ebx,DWORD PTR [rdi+0x61],0x2c726464
    d783:	73 65                	jae    d7ea <_IO_stdin_used+0x17ea>
    d785:	72 76                	jb     d7fd <_IO_stdin_used+0x17fd>
    d787:	5f                   	pop    rdi
    d788:	70 6f                	jo     d7f9 <_IO_stdin_used+0x17f9>
    d78a:	72 74                	jb     d800 <_IO_stdin_used+0x1800>
    d78c:	2c 63                	sub    al,0x63
    d78e:	6c                   	ins    BYTE PTR es:[rdi],dx
    d78f:	69 5f 70 6f 72 74 2c 	imul   ebx,DWORD PTR [rdi+0x70],0x2c74726f
    d796:	73 65                	jae    d7fd <_IO_stdin_used+0x17fd>
    d798:	72 76                	jb     d810 <_IO_stdin_used+0x1810>
    d79a:	5f                   	pop    rdi
    d79b:	70 6b                	jo     d808 <_IO_stdin_used+0x1808>
    d79d:	74 5f                	je     d7fe <_IO_stdin_used+0x17fe>
    d79f:	73 65                	jae    d806 <_IO_stdin_used+0x1806>
    d7a1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d7a2:	74 2c                	je     d7d0 <_IO_stdin_used+0x17d0>
    d7a4:	63 6c 69 5f          	movsxd ebp,DWORD PTR [rcx+rbp*2+0x5f]
    d7a8:	70 6b                	jo     d815 <_IO_stdin_used+0x1815>
    d7aa:	74 5f                	je     d80b <_IO_stdin_used+0x180b>
    d7ac:	73 65                	jae    d813 <_IO_stdin_used+0x1813>
    d7ae:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d7af:	74 2c                	je     d7dd <_IO_stdin_used+0x17dd>
    d7b1:	73 65                	jae    d818 <_IO_stdin_used+0x1818>
    d7b3:	72 76                	jb     d82b <_IO_stdin_used+0x182b>
    d7b5:	5f                   	pop    rdi
    d7b6:	70 6b                	jo     d823 <_IO_stdin_used+0x1823>
    d7b8:	74 5f                	je     d819 <_IO_stdin_used+0x1819>
    d7ba:	72 65                	jb     d821 <_IO_stdin_used+0x1821>
    d7bc:	63 76 2c             	movsxd esi,DWORD PTR [rsi+0x2c]
    d7bf:	63 6c 69 5f          	movsxd ebp,DWORD PTR [rcx+rbp*2+0x5f]
    d7c3:	70 6b                	jo     d830 <_IO_stdin_used+0x1830>
    d7c5:	74 5f                	je     d826 <_IO_stdin_used+0x1826>
    d7c7:	72 65                	jb     d82e <_IO_stdin_used+0x182e>
    d7c9:	63 76 2c             	movsxd esi,DWORD PTR [rsi+0x2c]
    d7cc:	70 72                	jo     d840 <_IO_stdin_used+0x1840>
    d7ce:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d7cf:	74 6f                	je     d840 <_IO_stdin_used+0x1840>
    d7d1:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    d7d4:	2c 61                	sub    al,0x61
    d7d6:	76 67                	jbe    d83f <_IO_stdin_used+0x183f>
    d7d8:	5f                   	pop    rdi
    d7d9:	70 70                	jo     d84b <_IO_stdin_used+0x184b>
    d7db:	73 2c                	jae    d809 <_IO_stdin_used+0x1809>
    d7dd:	73 74                	jae    d853 <_IO_stdin_used+0x1853>
    d7df:	61                   	(bad)  
    d7e0:	72 74                	jb     d856 <_IO_stdin_used+0x1856>
    d7e2:	5f                   	pop    rdi
    d7e3:	74 69                	je     d84e <_IO_stdin_used+0x184e>
    d7e5:	6d                   	ins    DWORD PTR es:[rdi],dx
    d7e6:	65 2c 65             	gs sub al,0x65
    d7e9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d7ea:	64 5f                	fs pop rdi
    d7ec:	74 69                	je     d857 <_IO_stdin_used+0x1857>
    d7ee:	6d                   	ins    DWORD PTR es:[rdi],dx
    d7ef:	65 2c 64             	gs sub al,0x64
    d7f2:	61                   	(bad)  
    d7f3:	74 61                	je     d856 <_IO_stdin_used+0x1856>
    d7f5:	5f                   	pop    rdi
    d7f6:	70 6b                	jo     d863 <_IO_stdin_used+0x1863>
    d7f8:	74 73                	je     d86d <_IO_stdin_used+0x186d>
    d7fa:	2c 63                	sub    al,0x63
    d7fc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d7fd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d7fe:	74 72                	je     d872 <_IO_stdin_used+0x1872>
    d800:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d801:	6c                   	ins    BYTE PTR es:[rdi],dx
    d802:	5f                   	pop    rdi
    d803:	70 6b                	jo     d870 <_IO_stdin_used+0x1870>
    d805:	74 73                	je     d87a <_IO_stdin_used+0x187a>
    d807:	29 20                	sub    DWORD PTR [rax],esp
    d809:	56                   	push   rsi
    d80a:	41                   	rex.B
    d80b:	4c 55                	rex.WR push rbp
    d80d:	45 53                	rex.RB push r11
    d80f:	20 28                	and    BYTE PTR [rax],ch
    d811:	22 25 73 22 2c 22    	and    ah,BYTE PTR [rip+0x222c2273]        # 222cfa8a <_end+0x22192a4a>
    d817:	25 73 22 2c 25       	and    eax,0x252c2273
    d81c:	6c                   	ins    BYTE PTR es:[rdi],dx
    d81d:	64 2c 25             	fs sub al,0x25
    d820:	6c                   	ins    BYTE PTR es:[rdi],dx
    d821:	64 2c 25             	fs sub al,0x25
    d824:	64 2c 25             	fs sub al,0x25
    d827:	64 2c 25             	fs sub al,0x25
    d82a:	64 2c 25             	fs sub al,0x25
    d82d:	64 2c 25             	fs sub al,0x25
    d830:	64 2c 25             	fs sub al,0x25
    d833:	64 2c 25             	fs sub al,0x25
    d836:	6c                   	ins    BYTE PTR es:[rdi],dx
    d837:	64 2c 25             	fs sub al,0x25
    d83a:	6c                   	ins    BYTE PTR es:[rdi],dx
    d83b:	64 2c 25             	fs sub al,0x25
    d83e:	64 2c 25             	fs sub al,0x25
    d841:	64 29 3b             	sub    DWORD PTR fs:[rbx],edi
    d844:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    d847:	4c                   	rex.WR
    d848:	49 54                	rex.WB push r12
    d84a:	45 20 45 6e          	and    BYTE PTR [r13+0x6e],r8b
    d84e:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    d851:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d852:	74 65                	je     d8b9 <_IO_stdin_used+0x18b9>
    d854:	72 65                	jb     d8bb <_IO_stdin_used+0x18bb>
    d856:	64 20 65 72          	and    BYTE PTR fs:[rbp+0x72],ah
    d85a:	72 6f                	jb     d8cb <_IO_stdin_used+0x18cb>
    d85c:	72 3a                	jb     d898 <_IO_stdin_used+0x1898>
    d85e:	20 25 73 0a 00 53    	and    BYTE PTR [rip+0x53000a73],ah        # 5300e2d7 <_end+0x52ed1297>
    d864:	74 72                	je     d8d8 <_IO_stdin_used+0x18d8>
    d866:	6c                   	ins    BYTE PTR es:[rdi],dx
    d867:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d868:	63 20                	movsxd esp,DWORD PTR [rax]
    d86a:	73 75                	jae    d8e1 <_IO_stdin_used+0x18e1>
    d86c:	63 63 65             	movsxd esp,DWORD PTR [rbx+0x65]
    d86f:	73 73                	jae    d8e4 <_IO_stdin_used+0x18e4>
    d871:	66 75 6c             	data16 jne d8e0 <_IO_stdin_used+0x18e0>
    d874:	00 51 75             	add    BYTE PTR [rcx+0x75],dl
    d877:	65 72 79             	gs jb  d8f3 <_IO_stdin_used+0x18f3>
    d87a:	3a 20                	cmp    ah,BYTE PTR [rax]
    d87c:	25 73 0a 00 4c       	and    eax,0x4c000a73
    d881:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d882:	67 69 6e 20 69 6e 63 	imul   ebp,DWORD PTR [esi+0x20],0x6f636e69
    d889:	6f 
    d88a:	72 72                	jb     d8fe <_IO_stdin_used+0x18fe>
    d88c:	65 63 74 00 6c       	movsxd esi,DWORD PTR gs:[rax+rax*1+0x6c]
    d891:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d892:	67 69 6e 20 69 6e 63 	imul   ebp,DWORD PTR [esi+0x20],0x6f636e69
    d899:	6f 
    d89a:	72 72                	jb     d90e <_IO_stdin_used+0x190e>
    d89c:	65 63 74 00 50       	movsxd esi,DWORD PTR gs:[rax+rax*1+0x50]
    d8a1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d8a2:	73 73                	jae    d917 <_IO_stdin_used+0x1917>
    d8a4:	69 62 6c 65 20 46 54 	imul   esp,DWORD PTR [rdx+0x6c],0x54462065
    d8ab:	50                   	push   rax
    d8ac:	20 62 72             	and    BYTE PTR [rdx+0x72],ah
    d8af:	75 74                	jne    d925 <_IO_stdin_used+0x1925>
    d8b1:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    d8b5:	72 63                	jb     d91a <_IO_stdin_used+0x191a>
    d8b7:	65 20 61 74          	and    BYTE PTR gs:[rcx+0x74],ah
    d8bb:	74 65                	je     d922 <_IO_stdin_used+0x1922>
    d8bd:	6d                   	ins    DWORD PTR es:[rdi],dx
    d8be:	70 74                	jo     d934 <_IO_stdin_used+0x1934>
    d8c0:	3a 20                	cmp    ah,BYTE PTR [rax]
    d8c2:	25 73 28 73 75       	and    eax,0x75732873
    d8c7:	73 70                	jae    d939 <_IO_stdin_used+0x1939>
    d8c9:	65 63 74 29 20       	movsxd esi,DWORD PTR gs:[rcx+rbp*1+0x20]
    d8ce:	2d 3e 20 25 73       	sub    eax,0x7325203e
    d8d3:	2e 20 25 64 20 66 61 	cs and BYTE PTR [rip+0x61662064],ah        # 6166f93e <_end+0x615328fe>
    d8da:	69 6c 65 64 20 6c 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x676f6c20
    d8e1:	67 
    d8e2:	69 6e 73 0a 00 00 53 	imul   ebp,DWORD PTR [rsi+0x73],0x5300000a
    d8e9:	50                   	push   rax
    d8ea:	49 20 54 41 42       	rex.WB and BYTE PTR [r9+rax*2+0x42],dl
    d8ef:	4c                   	rex.WR
    d8f0:	45 20 52 45          	and    BYTE PTR [r10+0x45],r10b
    d8f4:	54                   	push   rsp
    d8f5:	52                   	push   rdx
    d8f6:	41                   	rex.B
    d8f7:	4e 53                	rex.WRX push rbx
    d8f9:	3a 20                	cmp    ah,BYTE PTR [rax]
    d8fb:	25 64 3a 20 25       	and    eax,0x25203a64
    d900:	73 3a                	jae    d93c <_IO_stdin_used+0x193c>
    d902:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    d907:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64261380 <_end+0x64124340>
    d90d:	0a 00                	or     al,BYTE PTR [rax]
    d90f:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d912:	49 20 4e 45          	rex.WB and BYTE PTR [r14+0x45],cl
    d916:	57                   	push   rdi
    d917:	20 43 4f             	and    BYTE PTR [rbx+0x4f],al
    d91a:	4e 56                	rex.WRX push rsi
    d91c:	3a 20                	cmp    ah,BYTE PTR [rax]
    d91e:	25 64 3a 20 25       	and    eax,0x25203a64
    d923:	73 3a                	jae    d95f <_IO_stdin_used+0x195f>
    d925:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    d92a:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642613a3 <_end+0x64124363>
    d930:	0a 00                	or     al,BYTE PTR [rax]
    d932:	00 00                	add    BYTE PTR [rax],al
    d934:	00 00                	add    BYTE PTR [rax],al
    d936:	00 00                	add    BYTE PTR [rax],al
    d938:	53                   	push   rbx
    d939:	50                   	push   rax
    d93a:	49 20 54 57 48       	rex.WB and BYTE PTR [r15+rdx*2+0x48],dl
    d93f:	20 32                	and    BYTE PTR [rdx],dh
    d941:	2f                   	(bad)  
    d942:	33 3a                	xor    edi,DWORD PTR [rdx]
    d944:	20 25 64 3a 20 25    	and    BYTE PTR [rip+0x25203a64],ah        # 252113ae <_end+0x250d436e>
    d94a:	73 3a                	jae    d986 <_IO_stdin_used+0x1986>
    d94c:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    d951:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642613ca <_end+0x6412438a>
    d957:	0a 00                	or     al,BYTE PTR [rax]
    d959:	00 00                	add    BYTE PTR [rax],al
    d95b:	00 00                	add    BYTE PTR [rax],al
    d95d:	00 00                	add    BYTE PTR [rax],al
    d95f:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d962:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d966:	54                   	push   rsp
    d967:	52                   	push   rdx
    d968:	59                   	pop    rcx
    d969:	3a 20                	cmp    ah,BYTE PTR [rax]
    d96b:	25 64 3a 20 53       	and    eax,0x53203a64
    d970:	45 53                	rex.RB push r11
    d972:	53                   	push   rbx
    d973:	49                   	rex.WB
    d974:	4f                   	rex.WRXB
    d975:	4e 20 45 53          	rex.WRX and BYTE PTR [rbp+0x53],r8b
    d979:	54                   	push   rsp
    d97a:	3a 20                	cmp    ah,BYTE PTR [rax]
    d97c:	25 73 3a 25 64       	and    eax,0x64253a73
    d981:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325f9c5 <_end+0x73122985>
    d987:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e3f1 <__GNU_EH_FRAME_HDR+0x2e1>
    d98d:	00 00                	add    BYTE PTR [rax],al
    d98f:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d992:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d996:	54                   	push   rsp
    d997:	52                   	push   rdx
    d998:	59                   	pop    rcx
    d999:	3a 20                	cmp    ah,BYTE PTR [rax]
    d99b:	25 64 3a 20 50       	and    eax,0x50203a64
    d9a0:	4f                   	rex.WRXB
    d9a1:	4c                   	rex.WR
    d9a2:	49 54                	rex.WB push r12
    d9a4:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    d9a8:	4e 56                	rex.WRX push rsi
    d9aa:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    d9ad:	44 20 33             	and    BYTE PTR [rbx],r14b
    d9b0:	2f                   	(bad)  
    d9b1:	33 3a                	xor    edi,DWORD PTR [rdx]
    d9b3:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 6426142c <_end+0x641243ec>
    d9b9:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325f9fd <_end+0x731229bd>
    d9bf:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e429 <__GNU_EH_FRAME_HDR+0x319>
    d9c5:	00 00                	add    BYTE PTR [rax],al
    d9c7:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d9ca:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d9ce:	54                   	push   rsp
    d9cf:	52                   	push   rdx
    d9d0:	59                   	pop    rcx
    d9d1:	3a 20                	cmp    ah,BYTE PTR [rax]
    d9d3:	25 64 3a 20 50       	and    eax,0x50203a64
    d9d8:	4f                   	rex.WRXB
    d9d9:	4c                   	rex.WR
    d9da:	49 54                	rex.WB push r12
    d9dc:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    d9e0:	4e 56                	rex.WRX push rsi
    d9e2:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    d9e5:	44 20 32             	and    BYTE PTR [rdx],r14b
    d9e8:	2f                   	(bad)  
    d9e9:	33 3a                	xor    edi,DWORD PTR [rdx]
    d9eb:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64261464 <_end+0x64124424>
    d9f1:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fa35 <_end+0x731229f5>
    d9f7:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e461 <__GNU_EH_FRAME_HDR+0x351>
    d9fd:	00 00                	add    BYTE PTR [rax],al
    d9ff:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    da02:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    da06:	54                   	push   rsp
    da07:	52                   	push   rdx
    da08:	59                   	pop    rcx
    da09:	3a 20                	cmp    ah,BYTE PTR [rax]
    da0b:	25 64 3a 20 50       	and    eax,0x50203a64
    da10:	4f                   	rex.WRXB
    da11:	4c                   	rex.WR
    da12:	49 54                	rex.WB push r12
    da14:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    da18:	4e 56                	rex.WRX push rsi
    da1a:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    da1d:	44 20 31             	and    BYTE PTR [rcx],r14b
    da20:	2f                   	(bad)  
    da21:	33 3a                	xor    edi,DWORD PTR [rdx]
    da23:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 6426149c <_end+0x6412445c>
    da29:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fa6d <_end+0x73122a2d>
    da2f:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e499 <__GNU_EH_FRAME_HDR+0x389>
    da35:	00 00                	add    BYTE PTR [rax],al
    da37:	00 61 00             	add    BYTE PTR [rcx+0x0],ah
    da3a:	00 00                	add    BYTE PTR [rax],al
    da3c:	00 00                	add    BYTE PTR [rax],al
    da3e:	00 00                	add    BYTE PTR [rax],al
    da40:	43 52                	rex.XB push r10
    da42:	49 54                	rex.WB push r12
    da44:	49                   	rex.WB
    da45:	43                   	rex.XB
    da46:	41                   	rex.B
    da47:	4c 20 46 41          	rex.WR and BYTE PTR [rsi+0x41],r8b
    da4b:	49                   	rex.WB
    da4c:	4c                   	rex.WR
    da4d:	45                   	rex.RB
    da4e:	44 20 54 4f 20       	and    BYTE PTR [rdi+rcx*2+0x20],r10b
    da53:	4f 50                	rex.WRXB push r8
    da55:	45                   	rex.RB
    da56:	4e 20 46 49          	rex.WRX and BYTE PTR [rsi+0x49],r8b
    da5a:	4c                   	rex.WR
    da5b:	45 20 46 4f          	and    BYTE PTR [r14+0x4f],r8b
    da5f:	52                   	push   rdx
    da60:	20 4c 4f 47          	and    BYTE PTR [rdi+rcx*2+0x47],cl
    da64:	47                   	rex.RXB
    da65:	49                   	rex.WB
    da66:	4e                   	rex.WRX
    da67:	47 3a 20             	rex.RXB cmp r12b,BYTE PTR [r8]
    da6a:	25 73 0a 00 25       	and    eax,0x25000a73
    da6f:	73 20                	jae    da91 <_IO_stdin_used+0x1a91>
    da71:	25 73 20 25 73       	and    eax,0x73252073
    da76:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325faba <_end+0x73122a7a>
    da7c:	0a 00                	or     al,BYTE PTR [rax]
    da7e:	25 73 20 25 73       	and    eax,0x73252073
    da83:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642614fc <_end+0x641244bc>
    da89:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325facd <_end+0x73122a8d>
    da8f:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e4f9 <__GNU_EH_FRAME_HDR+0x3e9>
    da95:	00 00                	add    BYTE PTR [rax],al
    da97:	00 61 6e             	add    BYTE PTR [rcx+0x6e],ah
    da9a:	79 00                	jns    da9c <_IO_stdin_used+0x1a9c>
    da9c:	41                   	rex.B
    da9d:	4e 59                	rex.WRX pop rcx
    da9f:	00 49 43             	add    BYTE PTR [rcx+0x43],cl
    daa2:	4d 50                	rex.WRB push r8
    daa4:	00 54 43 50          	add    BYTE PTR [rbx+rax*2+0x50],dl
    daa8:	00 55 44             	add    BYTE PTR [rbp+0x44],dl
    daab:	50                   	push   rax
    daac:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    daaf:	72 5f                	jb     db10 <_IO_stdin_used+0x1b10>
    dab1:	6d                   	ins    DWORD PTR es:[rdi],dx
    dab2:	61                   	(bad)  
    dab3:	74 63                	je     db18 <_IO_stdin_used+0x1b18>
    dab5:	68 00 6e 6f 6e       	push   0x6e6f6e00
    daba:	65 00 70 63          	add    BYTE PTR gs:[rax+0x63],dh
    dabe:	72 65                	jb     db25 <_IO_stdin_used+0x1b25>
    dac0:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    dac3:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    dac7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dac8:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    dacb:	6c                   	ins    BYTE PTR es:[rdi],dx
    dacc:	65 20 74 79 70       	and    BYTE PTR gs:[rcx+rdi*2+0x70],dh
    dad1:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    dad4:	25 73 0a 00 3b       	and    eax,0x3b000a73
    dad9:	00 46 6f             	add    BYTE PTR [rsi+0x6f],al
    dadc:	75 6e                	jne    db4c <_IO_stdin_used+0x1b4c>
    dade:	64 20 6f 70          	and    BYTE PTR fs:[rdi+0x70],ch
    dae2:	65 72 61             	gs jb  db46 <_IO_stdin_used+0x1b46>
    dae5:	74 6f                	je     db56 <_IO_stdin_used+0x1b56>
    dae7:	72 00                	jb     dae9 <_IO_stdin_used+0x1ae9>
    dae9:	61                   	(bad)  
    daea:	6c                   	ins    BYTE PTR es:[rdi],dx
    daeb:	65 72 74             	gs jb  db62 <_IO_stdin_used+0x1b62>
    daee:	00 24 68             	add    BYTE PTR [rax+rbp*2],ah
    daf1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    daf2:	6d                   	ins    DWORD PTR es:[rdi],dx
    daf3:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    daf5:	65 74 00             	gs je  daf8 <_IO_stdin_used+0x1af8>
    daf8:	2d 3e 00 3c 3e       	sub    eax,0x3e3c003e
    dafd:	00 24 65 78 74 65 72 	add    BYTE PTR [riz*2+0x72657478],ah
    db04:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db05:	61                   	(bad)  
    db06:	6c                   	ins    BYTE PTR es:[rdi],dx
    db07:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db08:	65 74 00             	gs je  db0b <_IO_stdin_used+0x1b0b>
    db0b:	22 3b                	and    bh,BYTE PTR [rbx]
    db0d:	00 6e 61             	add    BYTE PTR [rsi+0x61],ch
    db10:	6d                   	ins    DWORD PTR es:[rdi],dx
    db11:	65 3a 22             	cmp    ah,BYTE PTR gs:[rdx]
    db14:	00 6d 73             	add    BYTE PTR [rbp+0x73],ch
    db17:	67 3a 22             	cmp    ah,BYTE PTR [edx]
    db1a:	00 64 65 70          	add    BYTE PTR [rbp+riz*2+0x70],ah
    db1e:	74 68                	je     db88 <_IO_stdin_used+0x1b88>
    db20:	3a 00                	cmp    al,BYTE PTR [rax]
    db22:	74 79                	je     db9d <_IO_stdin_used+0x1b9d>
    db24:	70 65                	jo     db8b <_IO_stdin_used+0x1b8b>
    db26:	3a 00                	cmp    al,BYTE PTR [rax]
    db28:	74 61                	je     db8b <_IO_stdin_used+0x1b8b>
    db2a:	72 67                	jb     db93 <_IO_stdin_used+0x1b93>
    db2c:	65 74 3a             	gs je  db69 <_IO_stdin_used+0x1b69>
    db2f:	22 00                	and    al,BYTE PTR [rax]
    db31:	73 65                	jae    db98 <_IO_stdin_used+0x1b98>
    db33:	76 3a                	jbe    db6f <_IO_stdin_used+0x1b6f>
    db35:	00 00                	add    BYTE PTR [rax],al
    db37:	00 52 75             	add    BYTE PTR [rdx+0x75],dl
    db3a:	6c                   	ins    BYTE PTR es:[rdi],dx
    db3b:	65 20 73 65          	and    BYTE PTR gs:[rbx+0x65],dh
    db3f:	76 65                	jbe    dba6 <_IO_stdin_used+0x1ba6>
    db41:	72 69                	jb     dbac <_IO_stdin_used+0x1bac>
    db43:	74 79                	je     dbbe <_IO_stdin_used+0x1bbe>
    db45:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    db48:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    db49:	75 6c                	jne    dbb7 <_IO_stdin_used+0x1bb7>
    db4b:	64 20 62 65          	and    BYTE PTR fs:[rdx+0x65],ah
    db4f:	20 3e                	and    BYTE PTR [rsi],bh
    db51:	20 30                	and    BYTE PTR [rax],dh
    db53:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    db56:	64 20 3c 3d 20 31 30 	and    BYTE PTR fs:[rdi*1+0x303120],bh
    db5d:	00 
    db5e:	00 00                	add    BYTE PTR [rax],al
    db60:	52                   	push   rdx
    db61:	75 6c                	jne    dbcf <_IO_stdin_used+0x1bcf>
    db63:	65 20 73 65          	and    BYTE PTR gs:[rbx+0x65],dh
    db67:	76 65                	jbe    dbce <_IO_stdin_used+0x1bce>
    db69:	72 69                	jb     dbd4 <_IO_stdin_used+0x1bd4>
    db6b:	74 79                	je     dbe6 <_IO_stdin_used+0x1be6>
    db6d:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    db70:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    db71:	75 6c                	jne    dbdf <_IO_stdin_used+0x1bdf>
    db73:	64 20 62 65          	and    BYTE PTR fs:[rdx+0x65],ah
    db77:	20 61 20             	and    BYTE PTR [rcx+0x20],ah
    db7a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db7b:	75 6d                	jne    dbea <_IO_stdin_used+0x1bea>
    db7d:	65 72 69             	gs jb  dbe9 <_IO_stdin_used+0x1be9>
    db80:	63 20                	movsxd esp,DWORD PTR [rax]
    db82:	76 61                	jbe    dbe5 <_IO_stdin_used+0x1be5>
    db84:	6c                   	ins    BYTE PTR es:[rdi],dx
    db85:	75 65                	jne    dbec <_IO_stdin_used+0x1bec>
    db87:	00 69 74             	add    BYTE PTR [rcx+0x74],ch
    db8a:	79 70                	jns    dbfc <_IO_stdin_used+0x1bfc>
    db8c:	65 3a 00             	cmp    al,BYTE PTR gs:[rax]
    db8f:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    db91:	76 61                	jbe    dbf4 <_IO_stdin_used+0x1bf4>
    db93:	6c                   	ins    BYTE PTR es:[rdi],dx
    db94:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    db9b:	20 
    db9c:	74 79                	je     dc17 <_IO_stdin_used+0x1c17>
    db9e:	70 65                	jo     dc05 <_IO_stdin_used+0x1c05>
    dba0:	20 76 61             	and    BYTE PTR [rsi+0x61],dh
    dba3:	6c                   	ins    BYTE PTR es:[rdi],dx
    dba4:	75 65                	jne    dc0b <_IO_stdin_used+0x1c0b>
    dba6:	00 00                	add    BYTE PTR [rax],al
    dba8:	25 73 3a 20 69       	and    eax,0x69203a73
    dbad:	74 79                	je     dc28 <_IO_stdin_used+0x1c28>
    dbaf:	70 65                	jo     dc16 <_IO_stdin_used+0x1c16>
    dbb1:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    dbb4:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbb5:	79 20                	jns    dbd7 <_IO_stdin_used+0x1bd7>
    dbb7:	61                   	(bad)  
    dbb8:	70 70                	jo     dc2a <_IO_stdin_used+0x1c2a>
    dbba:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbbb:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dbc2:	72 75                	jb     dc39 <_IO_stdin_used+0x1c39>
    dbc4:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbc5:	65 73 20             	gs jae dbe8 <_IO_stdin_used+0x1be8>
    dbc8:	77 69                	ja     dc33 <_IO_stdin_used+0x1c33>
    dbca:	74 68                	je     dc34 <_IO_stdin_used+0x1c34>
    dbcc:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    dbcf:	4d 50                	rex.WRB push r8
    dbd1:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dbd4:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dbd7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dbd8:	74 6f                	je     dc49 <_IO_stdin_used+0x1c49>
    dbda:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dbdd:	0a 00                	or     al,BYTE PTR [rax]
    dbdf:	69 63 6f 64 65 3a 00 	imul   esp,DWORD PTR [rbx+0x6f],0x3a6564
    dbe6:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    dbe8:	76 61                	jbe    dc4b <_IO_stdin_used+0x1c4b>
    dbea:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbeb:	69 64 65 20 69 63 6d 	imul   esp,DWORD PTR [rbp+riz*2+0x20],0x706d6369
    dbf2:	70 
    dbf3:	20 63 6f             	and    BYTE PTR [rbx+0x6f],ah
    dbf6:	64 65 20 76 61       	fs and BYTE PTR gs:[rsi+0x61],dh
    dbfb:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbfc:	75 65                	jne    dc63 <_IO_stdin_used+0x1c63>
    dbfe:	00 00                	add    BYTE PTR [rax],al
    dc00:	69 63 6f 64 65 20 6f 	imul   esp,DWORD PTR [rbx+0x6f],0x6f206564
    dc07:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dc08:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc09:	79 20                	jns    dc2b <_IO_stdin_used+0x1c2b>
    dc0b:	61                   	(bad)  
    dc0c:	70 70                	jo     dc7e <_IO_stdin_used+0x1c7e>
    dc0e:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc0f:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dc16:	72 75                	jb     dc8d <_IO_stdin_used+0x1c8d>
    dc18:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc19:	65 73 20             	gs jae dc3c <_IO_stdin_used+0x1c3c>
    dc1c:	77 69                	ja     dc87 <_IO_stdin_used+0x1c87>
    dc1e:	74 68                	je     dc88 <_IO_stdin_used+0x1c88>
    dc20:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    dc23:	4d 50                	rex.WRB push r8
    dc25:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dc28:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dc2b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dc2c:	74 6f                	je     dc9d <_IO_stdin_used+0x1c9d>
    dc2e:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dc31:	00 69 63             	add    BYTE PTR [rcx+0x63],ch
    dc34:	6d                   	ins    DWORD PTR es:[rdi],dx
    dc35:	70 5f                	jo     dc96 <_IO_stdin_used+0x1c96>
    dc37:	69 64 3a 00 49 6e 76 	imul   esp,DWORD PTR [rdx+rdi*1+0x0],0x61766e49
    dc3e:	61 
    dc3f:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc40:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    dc47:	20 
    dc48:	69 64 20 76 61 6c 75 	imul   esp,DWORD PTR [rax+riz*1+0x76],0x65756c61
    dc4f:	65 
	...
    dc58:	49                   	rex.WB
    dc59:	43                   	rex.XB
    dc5a:	4d 50                	rex.WRB push r8
    dc5c:	20 49 44             	and    BYTE PTR [rcx+0x44],cl
    dc5f:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    dc62:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc63:	79 20                	jns    dc85 <_IO_stdin_used+0x1c85>
    dc65:	61                   	(bad)  
    dc66:	70 70                	jo     dcd8 <_IO_stdin_used+0x1cd8>
    dc68:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc69:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dc70:	72 75                	jb     dce7 <_IO_stdin_used+0x1ce7>
    dc72:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc73:	65 73 20             	gs jae dc96 <_IO_stdin_used+0x1c96>
    dc76:	77 69                	ja     dce1 <_IO_stdin_used+0x1ce1>
    dc78:	74 68                	je     dce2 <_IO_stdin_used+0x1ce2>
    dc7a:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    dc7d:	4d 50                	rex.WRB push r8
    dc7f:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dc82:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dc85:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dc86:	74 6f                	je     dcf7 <_IO_stdin_used+0x1cf7>
    dc88:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dc8b:	00 69 63             	add    BYTE PTR [rcx+0x63],ch
    dc8e:	6d                   	ins    DWORD PTR es:[rdi],dx
    dc8f:	70 5f                	jo     dcf0 <_IO_stdin_used+0x1cf0>
    dc91:	73 65                	jae    dcf8 <_IO_stdin_used+0x1cf8>
    dc93:	71 3a                	jno    dccf <_IO_stdin_used+0x1ccf>
    dc95:	00 49 6e             	add    BYTE PTR [rcx+0x6e],cl
    dc98:	76 61                	jbe    dcfb <_IO_stdin_used+0x1cfb>
    dc9a:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc9b:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    dca2:	20 
    dca3:	73 65                	jae    dd0a <_IO_stdin_used+0x1d0a>
    dca5:	71 75                	jno    dd1c <_IO_stdin_used+0x1d1c>
    dca7:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    dca9:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    dcac:	76 61                	jbe    dd0f <_IO_stdin_used+0x1d0f>
    dcae:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcaf:	75 65                	jne    dd16 <_IO_stdin_used+0x1d16>
    dcb1:	00 74 74 6c          	add    BYTE PTR [rsp+rsi*2+0x6c],dh
    dcb5:	3a 00                	cmp    al,BYTE PTR [rax]
    dcb7:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    dcb9:	76 61                	jbe    dd1c <_IO_stdin_used+0x1d1c>
    dcbb:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcbc:	69 64 20 74 74 6c 20 	imul   esp,DWORD PTR [rax+riz*1+0x74],0x76206c74
    dcc3:	76 
    dcc4:	61                   	(bad)  
    dcc5:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcc6:	75 65                	jne    dd2d <_IO_stdin_used+0x1d2d>
    dcc8:	00 66 6c             	add    BYTE PTR [rsi+0x6c],ah
    dccb:	61                   	(bad)  
    dccc:	67 73 3a             	addr32 jae dd09 <_IO_stdin_used+0x1d09>
    dccf:	22 00                	and    al,BYTE PTR [rax]
    dcd1:	00 00                	add    BYTE PTR [rax],al
    dcd3:	00 00                	add    BYTE PTR [rax],al
    dcd5:	00 00                	add    BYTE PTR [rax],al
    dcd7:	00 66 6c             	add    BYTE PTR [rsi+0x6c],ah
    dcda:	61                   	(bad)  
    dcdb:	67 73 20             	addr32 jae dcfe <_IO_stdin_used+0x1cfe>
    dcde:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dcdf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dce0:	6c                   	ins    BYTE PTR es:[rdi],dx
    dce1:	79 20                	jns    dd03 <_IO_stdin_used+0x1d03>
    dce3:	61                   	(bad)  
    dce4:	70 70                	jo     dd56 <_IO_stdin_used+0x1d56>
    dce6:	6c                   	ins    BYTE PTR es:[rdi],dx
    dce7:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dcee:	72 75                	jb     dd65 <_IO_stdin_used+0x1d65>
    dcf0:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcf1:	65 73 20             	gs jae dd14 <_IO_stdin_used+0x1d14>
    dcf4:	77 69                	ja     dd5f <_IO_stdin_used+0x1d5f>
    dcf6:	74 68                	je     dd60 <_IO_stdin_used+0x1d60>
    dcf8:	20 74 63 70          	and    BYTE PTR [rbx+riz*2+0x70],dh
    dcfc:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dcff:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dd02:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd03:	74 6f                	je     dd74 <_IO_stdin_used+0x1d74>
    dd05:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dd08:	00 61 63             	add    BYTE PTR [rcx+0x63],ah
    dd0b:	6b 3a 00             	imul   edi,DWORD PTR [rdx],0x0
    dd0e:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    dd10:	76 61                	jbe    dd73 <_IO_stdin_used+0x1d73>
    dd12:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd13:	69 64 20 61 63 6b 20 	imul   esp,DWORD PTR [rax+riz*1+0x61],0x76206b63
    dd1a:	76 
    dd1b:	61                   	(bad)  
    dd1c:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd1d:	75 65                	jne    dd84 <_IO_stdin_used+0x1d84>
    dd1f:	00 70 63             	add    BYTE PTR [rax+0x63],dh
    dd22:	72 65                	jb     dd89 <_IO_stdin_used+0x1d89>
    dd24:	3a 22                	cmp    ah,BYTE PTR [rdx]
    dd26:	00 00                	add    BYTE PTR [rax],al
    dd28:	46 61                	rex.RX (bad) 
    dd2a:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    dd31:	20 
    dd32:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    dd35:	70 69                	jo     dda0 <_IO_stdin_used+0x1da0>
    dd37:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd38:	65 20 72 65          	and    BYTE PTR gs:[rdx+0x65],dh
    dd3c:	67 75 6c             	addr32 jne ddab <_IO_stdin_used+0x1dab>
    dd3f:	61                   	(bad)  
    dd40:	72 20                	jb     dd62 <_IO_stdin_used+0x1d62>
    dd42:	65 78 70             	gs js  ddb5 <_IO_stdin_used+0x1db5>
    dd45:	72 65                	jb     ddac <_IO_stdin_used+0x1dac>
    dd47:	73 73                	jae    ddbc <_IO_stdin_used+0x1dbc>
    dd49:	69 6f 6e 00 64 73 69 	imul   ebp,DWORD PTR [rdi+0x6e],0x69736400
    dd50:	7a 65                	jp     ddb7 <_IO_stdin_used+0x1db7>
    dd52:	3a 00                	cmp    al,BYTE PTR [rax]
    dd54:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd55:	66 66 73 65          	data16 data16 jae ddbe <_IO_stdin_used+0x1dbe>
    dd59:	74 3a                	je     dd95 <_IO_stdin_used+0x1d95>
    dd5b:	00 65 73             	add    BYTE PTR [rbp+0x73],ah
    dd5e:	74 61                	je     ddc1 <_IO_stdin_used+0x1dc1>
    dd60:	62                   	(bad)  
    dd61:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd62:	69 73 68 65 64 00 6e 	imul   esi,DWORD PTR [rbx+0x68],0x6e006465
    dd69:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd6a:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    dd6c:	63 72 79             	movsxd esi,DWORD PTR [rdx+0x79]
    dd6f:	70 74                	jo     dde5 <_IO_stdin_used+0x1de5>
    dd71:	00 25 63 00 25 30    	add    BYTE PTR [rip+0x30250063],ah        # 3025ddda <_end+0x30120d9a>
    dd77:	32 78 00             	xor    bh,BYTE PTR [rax+0x0]
    dd7a:	00 00                	add    BYTE PTR [rax],al
    dd7c:	3e 00 3c 00          	ds add BYTE PTR [rax+rax*1],bh
    dd80:	21 00                	and    DWORD PTR [rax],eax
    dd82:	3c 3d                	cmp    al,0x3d
    dd84:	00 3e                	add    BYTE PTR [rsi],bh
    dd86:	3d 00 55 6e 73       	cmp    eax,0x736e5500
    dd8b:	75 70                	jne    ddfd <_IO_stdin_used+0x1dfd>
    dd8d:	70 6f                	jo     ddfe <_IO_stdin_used+0x1dfe>
    dd8f:	72 74                	jb     de05 <_IO_stdin_used+0x1e05>
    dd91:	65 64 20 6f 70       	gs and BYTE PTR fs:[rdi+0x70],ch
    dd96:	65 72 61             	gs jb  ddfa <_IO_stdin_used+0x1dfa>
    dd99:	74 6f                	je     de0a <_IO_stdin_used+0x1e0a>
    dd9b:	72 00                	jb     dd9d <_IO_stdin_used+0x1d9d>
    dd9d:	00 00                	add    BYTE PTR [rax],al
    dd9f:	00 74 d0 ff          	add    BYTE PTR [rax+rdx*8-0x1],dh
    dda3:	ff c6                	inc    esi
    dda5:	d0 ff                	sar    bh,1
    dda7:	ff                   	(bad)  
    dda8:	df d0                	(bad)  
    ddaa:	ff                   	(bad)  
    ddab:	ff 94 d0 ff ff ad d0 	call   QWORD PTR [rax+rdx*8-0x2f520001]
    ddb2:	ff                   	(bad)  
    ddb3:	ff                   	(bad)  
    ddb4:	f8                   	clc    
    ddb5:	d0 ff                	sar    bh,1
    ddb7:	ff 2e                	jmp    FWORD PTR [rsi]
    ddb9:	00 25 30 32 78 00    	add    BYTE PTR [rip+0x783230],ah        # 790fef <_end+0x653faf>
    ddbf:	25 30 32 78 20       	and    eax,0x20783230
    ddc4:	2d 2d 20 25 30       	sub    eax,0x3025202d
    ddc9:	32 78 0a             	xor    bh,BYTE PTR [rax+0xa]
    ddcc:	00 00                	add    BYTE PTR [rax],al
    ddce:	00 00                	add    BYTE PTR [rax],al
    ddd0:	73 72                	jae    de44 <_IO_stdin_used+0x1e44>
    ddd2:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    ddd4:	6c                   	ins    BYTE PTR es:[rdi],dx
    ddd5:	75 61                	jne    de38 <_IO_stdin_used+0x1e38>
    ddd7:	2f                   	(bad)  
    ddd8:	73 63                	jae    de3d <_IO_stdin_used+0x1e3d>
    ddda:	72 69                	jb     de45 <_IO_stdin_used+0x1e45>
    dddc:	70 74                	jo     de52 <_IO_stdin_used+0x1e52>
    ddde:	73 2f                	jae    de0f <_IO_stdin_used+0x1e0f>
    dde0:	68 65 6c 6c 6f       	push   0x6f6c6c65
    dde5:	74 65                	je     de4c <_IO_stdin_used+0x1e4c>
    dde7:	73 74                	jae    de5d <_IO_stdin_used+0x1e5d>
    dde9:	2e 6c                	cs ins BYTE PTR es:[rdi],dx
    ddeb:	75 61                	jne    de4e <_IO_stdin_used+0x1e4e>
    dded:	00 72 00             	add    BYTE PTR [rdx+0x0],dh
    ddf0:	2f                   	(bad)  
    ddf1:	65 74 63             	gs je  de57 <_IO_stdin_used+0x1e57>
    ddf4:	2f                   	(bad)  
    ddf5:	76 69                	jbe    de60 <_IO_stdin_used+0x1e60>
    ddf7:	67 69 6c 2f 6c 73 63 	imul   ebp,DWORD PTR [edi+ebp*1+0x6c],0x69726373
    ddfe:	72 69 
    de00:	70 74                	jo     de76 <_IO_stdin_used+0x1e76>
    de02:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    de06:	66 00 46 61          	data16 add BYTE PTR [rsi+0x61],al
    de0a:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    de11:	20 
    de12:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    de15:	6c                   	ins    BYTE PTR es:[rdi],dx
    de16:	65 63 74 20 4c       	movsxd esi,DWORD PTR gs:[rax+riz*1+0x4c]
    de1b:	75 61                	jne    de7e <_IO_stdin_used+0x1e7e>
    de1d:	20 73 63             	and    BYTE PTR [rbx+0x63],dh
    de20:	72 69                	jb     de8b <_IO_stdin_used+0x1e8b>
    de22:	70 74                	jo     de98 <_IO_stdin_used+0x1e98>
    de24:	73 3a                	jae    de60 <_IO_stdin_used+0x1e60>
    de26:	20 2f                	and    BYTE PTR [rdi],ch
    de28:	65 74 63             	gs je  de8e <_IO_stdin_used+0x1e8e>
    de2b:	2f                   	(bad)  
    de2c:	76 69                	jbe    de97 <_IO_stdin_used+0x1e97>
    de2e:	67 69 6c 2f 6c 73 63 	imul   ebp,DWORD PTR [edi+ebp*1+0x6c],0x69726373
    de35:	72 69 
    de37:	70 74                	jo     dead <_IO_stdin_used+0x1ead>
    de39:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    de3d:	66 20 6e 6f          	data16 and BYTE PTR [rsi+0x6f],ch
    de41:	74 20                	je     de63 <_IO_stdin_used+0x1e63>
    de43:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    de45:	75 6e                	jne    deb5 <_IO_stdin_used+0x1eb5>
    de47:	64 2e 00 2e          	fs add BYTE PTR fs:[rsi],ch
    de4b:	2a 2e                	sub    ch,BYTE PTR [rsi]
    de4d:	6c                   	ins    BYTE PTR es:[rdi],dx
    de4e:	75 61                	jne    deb1 <_IO_stdin_used+0x1eb1>
    de50:	3a 2e                	cmp    ch,BYTE PTR [rsi]
    de52:	2a 00                	sub    al,BYTE PTR [rax]
    de54:	6c                   	ins    BYTE PTR es:[rdi],dx
    de55:	5f                   	pop    rdi
    de56:	73 63                	jae    debb <_IO_stdin_used+0x1ebb>
    de58:	72 69                	jb     dec3 <_IO_stdin_used+0x1ec3>
    de5a:	70 74                	jo     ded0 <_IO_stdin_used+0x1ed0>
    de5c:	5f                   	pop    rdi
    de5d:	72 6f                	jb     dece <_IO_stdin_used+0x1ece>
    de5f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    de60:	74 3d                	je     de9f <_IO_stdin_used+0x1e9f>
    de62:	00 0a                	add    BYTE PTR [rdx],cl
    de64:	00 00                	add    BYTE PTR [rax],al
    de66:	00 00                	add    BYTE PTR [rax],al
    de68:	49 50                	rex.WB push r8
    de6a:	76 36                	jbe    dea2 <_IO_stdin_used+0x1ea2>
    de6c:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2dfee5 <_end+0x3e1a2ea5>
    de72:	20 25 73 20 50 72    	and    BYTE PTR [rip+0x72502073],ah        # 7250feeb <_end+0x723d2eab>
    de78:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    de79:	74 6f                	je     deea <_IO_stdin_used+0x1eea>
    de7b:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    de7e:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    de81:	6d                   	ins    DWORD PTR es:[rdi],dx
    de82:	62                   	(bad)  
    de83:	65 72 20             	gs jb  dea6 <_IO_stdin_used+0x1ea6>
    de86:	3d 20 25 64 0a       	cmp    eax,0xa642520
    de8b:	00 00                	add    BYTE PTR [rax],al
    de8d:	00 00                	add    BYTE PTR [rax],al
    de8f:	00 5b 4e             	add    BYTE PTR [rbx+0x4e],bl
    de92:	20 25 73 20 53 20    	and    BYTE PTR [rip+0x20532073],ah        # 2053ff0b <_end+0x20402ecb>
    de98:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    de9b:	30 32                	xor    BYTE PTR [rdx],dh
    de9d:	78 20                	js     debf <_IO_stdin_used+0x1ebf>
    de9f:	45 20 30             	and    BYTE PTR [r8],r14b
    dea2:	78 25                	js     dec9 <_IO_stdin_used+0x1ec9>
    dea4:	30 32                	xor    BYTE PTR [rdx],dh
    dea6:	78 5d                	js     df05 <_IO_stdin_used+0x1f05>
    dea8:	0a 00                	or     al,BYTE PTR [rax]
    deaa:	00 00                	add    BYTE PTR [rax],al
    deac:	00 00                	add    BYTE PTR [rax],al
    deae:	00 00                	add    BYTE PTR [rax],al
    deb0:	53                   	push   rbx
    deb1:	65 67 6d             	gs ins DWORD PTR es:[edi],dx
    deb4:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    deb6:	74 61                	je     df19 <_IO_stdin_used+0x1f19>
    deb8:	74 69                	je     df23 <_IO_stdin_used+0x1f23>
    deba:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    debb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    debc:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    debf:	75 6c                	jne    df2d <_IO_stdin_used+0x1f2d>
    dec1:	74 20                	je     dee3 <_IO_stdin_used+0x1ee3>
    dec3:	61                   	(bad)  
    dec4:	74 20                	je     dee6 <_IO_stdin_used+0x1ee6>
    dec6:	25 73 3a 20 61       	and    eax,0x61203a73
    decb:	70 70                	jo     df3d <_IO_stdin_used+0x1f3d>
    decd:	6c                   	ins    BYTE PTR es:[rdi],dx
    dece:	69 63 61 74 69 6f 6e 	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
    ded5:	20 63 72             	and    BYTE PTR [rbx+0x72],ah
    ded8:	61                   	(bad)  
    ded9:	73 68                	jae    df43 <_IO_stdin_used+0x1f43>
    dedb:	65 64 0a 00          	gs or  al,BYTE PTR fs:[rax]
    dedf:	46 75 6e             	rex.RX jne df50 <_IO_stdin_used+0x1f50>
    dee2:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    dee6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dee7:	20 62 61             	and    BYTE PTR [rdx+0x61],ah
    deea:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
    deed:	72 61                	jb     df50 <_IO_stdin_used+0x1f50>
    deef:	63 65 3a             	movsxd esp,DWORD PTR [rbp+0x3a]
    def2:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
    def6:	00 25 73 0a 00 00    	add    BYTE PTR [rip+0xa73],ah        # e96f <__GNU_EH_FRAME_HDR+0x85f>
    defc:	00 00                	add    BYTE PTR [rax],al
    defe:	00 00                	add    BYTE PTR [rax],al
    df00:	5b                   	pop    rbx
    df01:	4e 20 25 73 20 53 20 	rex.WRX and BYTE PTR [rip+0x20532073],r12b        # 2053ff7b <_end+0x20402f3b>
    df08:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    df0b:	30 32                	xor    BYTE PTR [rdx],dh
    df0d:	78 20                	js     df2f <_IO_stdin_used+0x1f2f>
    df0f:	45 20 30             	and    BYTE PTR [r8],r14b
    df12:	78 25                	js     df39 <_IO_stdin_used+0x1f39>
    df14:	30 32                	xor    BYTE PTR [rdx],dh
    df16:	78 20                	js     df38 <_IO_stdin_used+0x1f38>
    df18:	28 2e                	sub    BYTE PTR [rsi],ch
    df1a:	2f                   	(bad)  
    df1b:	76 69                	jbe    df86 <_IO_stdin_used+0x1f86>
    df1d:	67 69 6c 2e 65 78 65 	imul   ebp,DWORD PTR [esi+ebp*1+0x65],0x2b286578
    df24:	28 2b 
    df26:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    df29:	30 32                	xor    BYTE PTR [rdx],dh
    df2b:	78 29                	js     df56 <_IO_stdin_used+0x1f56>
    df2d:	29 5d 0a             	sub    DWORD PTR [rbp+0xa],ebx
	...
    df38:	55                   	push   rbp
    df39:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df3a:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    df3e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df3f:	20 66 75             	and    BYTE PTR [rsi+0x75],ah
    df42:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df43:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    df47:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df48:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    df4b:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
    df4e:	6d                   	ins    DWORD PTR es:[rdi],dx
    df4f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    df50:	72 79                	jb     dfcb <_IO_stdin_used+0x1fcb>
    df52:	20 6f 66             	and    BYTE PTR [rdi+0x66],ch
    df55:	66 73 65             	data16 jae dfbd <_IO_stdin_used+0x1fbd>
    df58:	74 20                	je     df7a <_IO_stdin_used+0x1f7a>
    df5a:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    df5d:	30 32                	xor    BYTE PTR [rdx],dh
    df5f:	78 0a                	js     df6b <_IO_stdin_used+0x1f6b>
    df61:	00 52 65             	add    BYTE PTR [rdx+0x65],dl
    df64:	67 69 73 74 65 72 20 	imul   esi,DWORD PTR [ebx+0x74],0x44207265
    df6b:	44 
    df6c:	75 6d                	jne    dfdb <_IO_stdin_used+0x1fdb>
    df6e:	70 3a                	jo     dfaa <_IO_stdin_used+0x1faa>
    df70:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    df73:	41 58                	pop    r8
    df75:	5d                   	pop    rbp
    df76:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790f9c <_end+0x25653f5c>
    df7c:	30 32                	xor    BYTE PTR [rdx],dh
    df7e:	78 0a                	js     df8a <_IO_stdin_used+0x1f8a>
    df80:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    df83:	42 58                	rex.X pop rax
    df85:	5d                   	pop    rbp
    df86:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790fac <_end+0x25653f6c>
    df8c:	30 32                	xor    BYTE PTR [rdx],dh
    df8e:	78 0a                	js     df9a <_IO_stdin_used+0x1f9a>
    df90:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    df93:	43 58                	rex.XB pop r8
    df95:	5d                   	pop    rbp
    df96:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790fbc <_end+0x25653f7c>
    df9c:	30 32                	xor    BYTE PTR [rdx],dh
    df9e:	78 0a                	js     dfaa <_IO_stdin_used+0x1faa>
    dfa0:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    dfa3:	44 58                	rex.R pop rax
    dfa5:	5d                   	pop    rbp
    dfa6:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790fcc <_end+0x25653f8c>
    dfac:	30 32                	xor    BYTE PTR [rdx],dh
    dfae:	78 0a                	js     dfba <_IO_stdin_used+0x1fba>
    dfb0:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    dfb3:	53                   	push   rbx
    dfb4:	50                   	push   rax
    dfb5:	5d                   	pop    rbp
    dfb6:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790fdc <_end+0x25653f9c>
    dfbc:	30 32                	xor    BYTE PTR [rdx],dh
    dfbe:	78 0a                	js     dfca <_IO_stdin_used+0x1fca>
    dfc0:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    dfc3:	42 50                	rex.X push rax
    dfc5:	5d                   	pop    rbp
    dfc6:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790fec <_end+0x25653fac>
    dfcc:	30 32                	xor    BYTE PTR [rdx],dh
    dfce:	78 0a                	js     dfda <_IO_stdin_used+0x1fda>
	...
    dfd8:	72 00                	jb     dfda <_IO_stdin_used+0x1fda>
    dfda:	2f                   	(bad)  
    dfdb:	75 73                	jne    e050 <_IO_stdin_used+0x2050>
    dfdd:	72 2f                	jb     e00e <_IO_stdin_used+0x200e>
    dfdf:	73 68                	jae    e049 <_IO_stdin_used+0x2049>
    dfe1:	61                   	(bad)  
    dfe2:	72 65                	jb     e049 <_IO_stdin_used+0x2049>
    dfe4:	2f                   	(bad)  
    dfe5:	76 69                	jbe    e050 <_IO_stdin_used+0x2050>
    dfe7:	67 69 6c 2f 6d 65 6d 	imul   ebp,DWORD PTR [edi+ebp*1+0x6d],0x616d6d65
    dfee:	6d 61 
    dff0:	70 2e                	jo     e020 <_IO_stdin_used+0x2020>
    dff2:	74 78                	je     e06c <_IO_stdin_used+0x206c>
    dff4:	74 00                	je     dff6 <_IO_stdin_used+0x1ff6>
    dff6:	00 00                	add    BYTE PTR [rax],al
    dff8:	46                   	rex.RX
    dff9:	41 54                	push   r12
    dffb:	41                   	rex.B
    dffc:	4c 20 45 52          	rex.WR and BYTE PTR [rbp+0x52],r8b
    e000:	52                   	push   rdx
    e001:	4f 52                	rex.WRXB push r10
    e003:	3a 20                	cmp    ah,BYTE PTR [rax]
    e005:	6d                   	ins    DWORD PTR es:[rdi],dx
    e006:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    e008:	6d                   	ins    DWORD PTR es:[rdi],dx
    e009:	61                   	(bad)  
    e00a:	70 2e                	jo     e03a <_IO_stdin_used+0x203a>
    e00c:	74 78                	je     e086 <_IO_stdin_used+0x2086>
    e00e:	74 20                	je     e030 <_IO_stdin_used+0x2030>
    e010:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e011:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e012:	74 20                	je     e034 <_IO_stdin_used+0x2034>
    e014:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    e016:	75 6e                	jne    e086 <_IO_stdin_used+0x2086>
    e018:	64 2e 50             	fs cs push rax
    e01b:	6c                   	ins    BYTE PTR es:[rdi],dx
    e01c:	65 61                	gs (bad) 
    e01e:	73 65                	jae    e085 <_IO_stdin_used+0x2085>
    e020:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    e023:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    e026:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e027:	20 67 65             	and    BYTE PTR [rdi+0x65],ah
    e02a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e02b:	5f                   	pop    rdi
    e02c:	6d                   	ins    DWORD PTR es:[rdi],dx
    e02d:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    e02f:	5f                   	pop    rdi
    e030:	6d                   	ins    DWORD PTR es:[rdi],dx
    e031:	61                   	(bad)  
    e032:	70 2e                	jo     e062 <_IO_stdin_used+0x2062>
    e034:	70 79                	jo     e0af <_IO_stdin_used+0x20af>
    e036:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    e039:	64 20 63 6f          	and    BYTE PTR fs:[rbx+0x6f],ah
    e03d:	70 79                	jo     e0b8 <_IO_stdin_used+0x20b8>
    e03f:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
    e042:	6d                   	ins    DWORD PTR es:[rdi],dx
    e043:	6d                   	ins    DWORD PTR es:[rdi],dx
    e044:	61                   	(bad)  
    e045:	70 2e                	jo     e075 <_IO_stdin_used+0x2075>
    e047:	74 78                	je     e0c1 <_IO_stdin_used+0x20c1>
    e049:	74 20                	je     e06b <_IO_stdin_used+0x206b>
    e04b:	74 6f                	je     e0bc <_IO_stdin_used+0x20bc>
    e04d:	20 2f                	and    BYTE PTR [rdi],ch
    e04f:	75 73                	jne    e0c4 <_IO_stdin_used+0x20c4>
    e051:	72 2f                	jb     e082 <_IO_stdin_used+0x2082>
    e053:	73 68                	jae    e0bd <_IO_stdin_used+0x20bd>
    e055:	61                   	(bad)  
    e056:	72 65                	jb     e0bd <_IO_stdin_used+0x20bd>
    e058:	2f                   	(bad)  
    e059:	76 69                	jbe    e0c4 <_IO_stdin_used+0x20c4>
    e05b:	67 69 6c 00 0a 00 20 	imul   ebp,DWORD PTR [eax+eax*1+0xa],0x2000
    e062:	00 00 
    e064:	00 00                	add    BYTE PTR [rax],al
    e066:	00 00                	add    BYTE PTR [rax],al
    e068:	53                   	push   rbx
    e069:	63 61 6e             	movsxd esp,DWORD PTR [rcx+0x6e]
    e06c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e06d:	69 6e 67 20 66 6f 72 	imul   ebp,DWORD PTR [rsi+0x67],0x726f6620
    e074:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    e077:	65 76 69             	gs jbe e0e3 <_IO_stdin_used+0x20e3>
    e07a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e07b:	75 73                	jne    e0f0 <_IO_stdin_used+0x20f0>
    e07d:	20 6c 6f 67          	and    BYTE PTR [rdi+rbp*2+0x67],ch
    e081:	20 66 69             	and    BYTE PTR [rsi+0x69],ah
    e084:	6c                   	ins    BYTE PTR es:[rdi],dx
    e085:	65 73 2e             	gs jae e0b6 <_IO_stdin_used+0x20b6>
    e088:	2e 2e 00 2f          	cs cs add BYTE PTR [rdi],ch
    e08c:	75 73                	jne    e101 <_IO_stdin_used+0x2101>
    e08e:	72 2f                	jb     e0bf <_IO_stdin_used+0x20bf>
    e090:	73 68                	jae    e0fa <_IO_stdin_used+0x20fa>
    e092:	61                   	(bad)  
    e093:	72 65                	jb     e0fa <_IO_stdin_used+0x20fa>
    e095:	2f                   	(bad)  
    e096:	76 69                	jbe    e101 <_IO_stdin_used+0x2101>
    e098:	67 69 6c 2f 73 74 61 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x73746174
    e09f:	74 73 
    e0a1:	2f                   	(bad)  
    e0a2:	70 70                	jo     e114 <__GNU_EH_FRAME_HDR+0x4>
    e0a4:	73 2f                	jae    e0d5 <_IO_stdin_used+0x20d5>
    e0a6:	00 46 61             	add    BYTE PTR [rsi+0x61],al
    e0a9:	69 6c 65 64 00 46 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x756f4600
    e0b0:	75 
    e0b1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e0b2:	64 20 25 64 20 6c 6f 	and    BYTE PTR fs:[rip+0x6f6c2064],ah        # 6f6d011d <_end+0x6f5930dd>
    e0b9:	67 20 66 69          	and    BYTE PTR [esi+0x69],ah
    e0bd:	6c                   	ins    BYTE PTR es:[rdi],dx
    e0be:	65 73 0a             	gs jae e0cb <_IO_stdin_used+0x20cb>
    e0c1:	00 00                	add    BYTE PTR [rax],al
    e0c3:	00 00                	add    BYTE PTR [rax],al
    e0c5:	00 00                	add    BYTE PTR [rax],al
    e0c7:	00 2f                	add    BYTE PTR [rdi],ch
    e0c9:	75 73                	jne    e13e <__GNU_EH_FRAME_HDR+0x2e>
    e0cb:	72 2f                	jb     e0fc <_IO_stdin_used+0x20fc>
    e0cd:	73 68                	jae    e137 <__GNU_EH_FRAME_HDR+0x27>
    e0cf:	61                   	(bad)  
    e0d0:	72 65                	jb     e137 <__GNU_EH_FRAME_HDR+0x27>
    e0d2:	2f                   	(bad)  
    e0d3:	76 69                	jbe    e13e <__GNU_EH_FRAME_HDR+0x2e>
    e0d5:	67 69 6c 2f 73 74 61 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x73746174
    e0dc:	74 73 
    e0de:	2f                   	(bad)  
    e0df:	70 70                	jo     e151 <__GNU_EH_FRAME_HDR+0x41>
    e0e1:	73 2f                	jae    e112 <__GNU_EH_FRAME_HDR+0x2>
    e0e3:	70 70                	jo     e155 <__GNU_EH_FRAME_HDR+0x45>
    e0e5:	73 2e                	jae    e115 <__GNU_EH_FRAME_HDR+0x5>
    e0e7:	6c                   	ins    BYTE PTR es:[rdi],dx
    e0e8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e0e9:	67 2e 25 64 2e 74 78 	addr32 cs and eax,0x78742e64
    e0f0:	74 00                	je     e0f2 <_IO_stdin_used+0x20f2>
    e0f2:	77 00                	ja     e0f4 <_IO_stdin_used+0x20f4>
    e0f4:	61                   	(bad)  
    e0f5:	00 44 75 6d          	add    BYTE PTR [rbp+rsi*2+0x6d],al
    e0f9:	70 69                	jo     e164 <__GNU_EH_FRAME_HDR+0x54>
    e0fb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e0fc:	67 20 74 6f 20       	and    BYTE PTR [edi+ebp*2+0x20],dh
    e101:	25 73 0a 00 25       	and    eax,0x25000a73
    e106:	6c                   	ins    BYTE PTR es:[rdi],dx
    e107:	75 2c                	jne    e135 <__GNU_EH_FRAME_HDR+0x25>
    e109:	25                   	.byte 0x25
    e10a:	64 0a 00             	or     al,BYTE PTR fs:[rax]

Disassembly of section .eh_frame_hdr:

000000000000e110 <__GNU_EH_FRAME_HDR>:
    e110:	01 1b                	add    DWORD PTR [rbx],ebx
    e112:	03 3b                	add    edi,DWORD PTR [rbx]
    e114:	c4 03 00 00          	(bad)
    e118:	77 00                	ja     e11a <__GNU_EH_FRAME_HDR+0xa>
    e11a:	00 00                	add    BYTE PTR [rax],al
    e11c:	10 3f                	adc    BYTE PTR [rdi],bh
    e11e:	ff                   	(bad)  
    e11f:	ff                   	(bad)  
    e120:	f8                   	clc    
    e121:	03 00                	add    eax,DWORD PTR [rax]
    e123:	00 90 43 ff ff 20    	add    BYTE PTR [rax+0x20ffff43],dl
    e129:	04 00                	add    al,0x0
    e12b:	00 a0 43 ff ff 38    	add    BYTE PTR [rax+0x38ffff43],ah
    e131:	04 00                	add    al,0x0
    e133:	00 10                	add    BYTE PTR [rax],dl
    e135:	48 ff                	rex.W (bad) 
    e137:	ff e0                	jmp    rax
    e139:	03 00                	add    eax,DWORD PTR [rax]
    e13b:	00 f9                	add    cl,bh
    e13d:	48 ff                	rex.W (bad) 
    e13f:	ff 50 04             	call   QWORD PTR [rax+0x4]
    e142:	00 00                	add    BYTE PTR [rax],al
    e144:	33 49 ff             	xor    ecx,DWORD PTR [rcx-0x1]
    e147:	ff 70 04             	push   QWORD PTR [rax+0x4]
    e14a:	00 00                	add    BYTE PTR [rax],al
    e14c:	89 4a ff             	mov    DWORD PTR [rdx-0x1],ecx
    e14f:	ff 98 04 00 00 7d    	call   FWORD PTR [rax+0x7d000004]
    e155:	4d ff                	rex.WRB (bad) 
    e157:	ff                   	(bad)  
    e158:	b8 04 00 00 90       	mov    eax,0x90000004
    e15d:	4e ff                	rex.WRX (bad) 
    e15f:	ff                   	(bad)  
    e160:	d8 04 00             	fadd   DWORD PTR [rax+rax*1]
    e163:	00 3e                	add    BYTE PTR [rsi],bh
    e165:	4f ff                	rex.WRXB (bad) 
    e167:	ff                   	(bad)  
    e168:	f8                   	clc    
    e169:	04 00                	add    al,0x0
    e16b:	00 e4                	add    ah,ah
    e16d:	4f ff                	rex.WRXB (bad) 
    e16f:	ff 18                	call   FWORD PTR [rax]
    e171:	05 00 00 79 50       	add    eax,0x50790000
    e176:	ff                   	(bad)  
    e177:	ff                   	(bad)  
    e178:	38 05 00 00 0d 51    	cmp    BYTE PTR [rip+0x510d0000],al        # 510de17e <_end+0x50fa113e>
    e17e:	ff                   	(bad)  
    e17f:	ff 58 05             	call   FWORD PTR [rax+0x5]
    e182:	00 00                	add    BYTE PTR [rax],al
    e184:	d9 52 ff             	fst    DWORD PTR [rdx-0x1]
    e187:	ff 84 05 00 00 ad 53 	inc    DWORD PTR [rbp+rax*1+0x53ad0000]
    e18e:	ff                   	(bad)  
    e18f:	ff a8 05 00 00 74    	jmp    FWORD PTR [rax+0x74000005]
    e195:	54                   	push   rsp
    e196:	ff                   	(bad)  
    e197:	ff cc                	dec    esp
    e199:	05 00 00 c7 54       	add    eax,0x54c70000
    e19e:	ff                   	(bad)  
    e19f:	ff                   	(bad)  
    e1a0:	ec                   	in     al,dx
    e1a1:	05 00 00 fa 54       	add    eax,0x54fa0000
    e1a6:	ff                   	(bad)  
    e1a7:	ff 0c 06             	dec    DWORD PTR [rsi+rax*1]
    e1aa:	00 00                	add    BYTE PTR [rax],al
    e1ac:	1b 55 ff             	sbb    edx,DWORD PTR [rbp-0x1]
    e1af:	ff 2c 06             	jmp    FWORD PTR [rsi+rax*1]
    e1b2:	00 00                	add    BYTE PTR [rax],al
    e1b4:	83 55 ff ff          	adc    DWORD PTR [rbp-0x1],0xffffffff
    e1b8:	50                   	push   rax
    e1b9:	06                   	(bad)  
    e1ba:	00 00                	add    BYTE PTR [rax],al
    e1bc:	a8 59                	test   al,0x59
    e1be:	ff                   	(bad)  
    e1bf:	ff 70 06             	push   QWORD PTR [rax+0x6]
    e1c2:	00 00                	add    BYTE PTR [rax],al
    e1c4:	05 5b ff ff 90       	add    eax,0x90ffff5b
    e1c9:	06                   	(bad)  
    e1ca:	00 00                	add    BYTE PTR [rax],al
    e1cc:	49 63 ff             	movsxd rdi,r15d
    e1cf:	ff b0 06 00 00 05    	push   QWORD PTR [rax+0x5000006]
    e1d5:	6c                   	ins    BYTE PTR es:[rdi],dx
    e1d6:	ff                   	(bad)  
    e1d7:	ff                   	(bad)  
    e1d8:	d8 06                	fadd   DWORD PTR [rsi]
    e1da:	00 00                	add    BYTE PTR [rax],al
    e1dc:	5a                   	pop    rdx
    e1dd:	6d                   	ins    DWORD PTR es:[rdi],dx
    e1de:	ff                   	(bad)  
    e1df:	ff                   	(bad)  
    e1e0:	f8                   	clc    
    e1e1:	06                   	(bad)  
    e1e2:	00 00                	add    BYTE PTR [rax],al
    e1e4:	59                   	pop    rcx
    e1e5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e1e6:	ff                   	(bad)  
    e1e7:	ff 18                	call   FWORD PTR [rax]
    e1e9:	07                   	(bad)  
    e1ea:	00 00                	add    BYTE PTR [rax],al
    e1ec:	45 6f                	rex.RB outs dx,DWORD PTR ds:[rsi]
    e1ee:	ff                   	(bad)  
    e1ef:	ff                   	(bad)  
    e1f0:	38 07                	cmp    BYTE PTR [rdi],al
    e1f2:	00 00                	add    BYTE PTR [rax],al
    e1f4:	f7 72 ff             	div    DWORD PTR [rdx-0x1]
    e1f7:	ff 58 07             	call   FWORD PTR [rax+0x7]
    e1fa:	00 00                	add    BYTE PTR [rax],al
    e1fc:	7a 73                	jp     e271 <__GNU_EH_FRAME_HDR+0x161>
    e1fe:	ff                   	(bad)  
    e1ff:	ff                   	(bad)  
    e200:	78 07                	js     e209 <__GNU_EH_FRAME_HDR+0xf9>
    e202:	00 00                	add    BYTE PTR [rax],al
    e204:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    e205:	75 ff                	jne    e206 <__GNU_EH_FRAME_HDR+0xf6>
    e207:	ff a0 07 00 00 e1    	jmp    QWORD PTR [rax-0x1efffff9]
    e20d:	77 ff                	ja     e20e <__GNU_EH_FRAME_HDR+0xfe>
    e20f:	ff c4                	inc    esp
    e211:	07                   	(bad)  
    e212:	00 00                	add    BYTE PTR [rax],al
    e214:	47 78 ff             	rex.RXB js e216 <__GNU_EH_FRAME_HDR+0x106>
    e217:	ff e4                	jmp    rsp
    e219:	07                   	(bad)  
    e21a:	00 00                	add    BYTE PTR [rax],al
    e21c:	5e                   	pop    rsi
    e21d:	78 ff                	js     e21e <__GNU_EH_FRAME_HDR+0x10e>
    e21f:	ff 04 08             	inc    DWORD PTR [rax+rcx*1]
    e222:	00 00                	add    BYTE PTR [rax],al
    e224:	af                   	scas   eax,DWORD PTR es:[rdi]
    e225:	78 ff                	js     e226 <__GNU_EH_FRAME_HDR+0x116>
    e227:	ff 28                	jmp    FWORD PTR [rax]
    e229:	08 00                	or     BYTE PTR [rax],al
    e22b:	00 ec                	add    ah,ch
    e22d:	7e ff                	jle    e22e <__GNU_EH_FRAME_HDR+0x11e>
    e22f:	ff 4c 08 00          	dec    DWORD PTR [rax+rcx*1+0x0]
    e233:	00 06                	add    BYTE PTR [rsi],al
    e235:	7f ff                	jg     e236 <__GNU_EH_FRAME_HDR+0x126>
    e237:	ff 6c 08 00          	jmp    FWORD PTR [rax+rcx*1+0x0]
    e23b:	00 2f                	add    BYTE PTR [rdi],ch
    e23d:	7f ff                	jg     e23e <__GNU_EH_FRAME_HDR+0x12e>
    e23f:	ff 8c 08 00 00 5f 7f 	dec    DWORD PTR [rax+rcx*1+0x7f5f0000]
    e246:	ff                   	(bad)  
    e247:	ff ac 08 00 00 96 7f 	jmp    FWORD PTR [rax+rcx*1+0x7f960000]
    e24e:	ff                   	(bad)  
    e24f:	ff c8                	dec    eax
    e251:	08 00                	or     BYTE PTR [rax],al
    e253:	00 db                	add    bl,bl
    e255:	80 ff ff             	cmp    bh,0xff
    e258:	e8 08 00 00 3b       	call   3b00e265 <_end+0x3aed1225>
    e25d:	82                   	(bad)  
    e25e:	ff                   	(bad)  
    e25f:	ff 08                	dec    DWORD PTR [rax]
    e261:	09 00                	or     DWORD PTR [rax],eax
    e263:	00 9c 82 ff ff 28 09 	add    BYTE PTR [rdx+rax*4+0x928ffff],bl
    e26a:	00 00                	add    BYTE PTR [rax],al
    e26c:	d5                   	(bad)  
    e26d:	82                   	(bad)  
    e26e:	ff                   	(bad)  
    e26f:	ff 48 09             	dec    DWORD PTR [rax+0x9]
    e272:	00 00                	add    BYTE PTR [rax],al
    e274:	93                   	xchg   ebx,eax
    e275:	83 ff ff             	cmp    edi,0xffffffff
    e278:	68 09 00 00 51       	push   0x51000009
    e27d:	86 ff                	xchg   bh,bh
    e27f:	ff 88 09 00 00 49    	dec    DWORD PTR [rax+0x49000009]
    e285:	88 ff                	mov    bh,bh
    e287:	ff a8 09 00 00 a3    	jmp    FWORD PTR [rax-0x5cfffff7]
    e28d:	88 ff                	mov    bh,bh
    e28f:	ff c8                	dec    eax
    e291:	09 00                	or     DWORD PTR [rax],eax
    e293:	00 93 8b ff ff e8    	add    BYTE PTR [rbx-0x17000075],dl
    e299:	09 00                	or     DWORD PTR [rax],eax
    e29b:	00 e4                	add    ah,ah
    e29d:	8f                   	(bad)  
    e29e:	ff                   	(bad)  
    e29f:	ff 08                	dec    DWORD PTR [rax]
    e2a1:	0a 00                	or     al,BYTE PTR [rax]
    e2a3:	00 0e                	add    BYTE PTR [rsi],cl
    e2a5:	90                   	nop
    e2a6:	ff                   	(bad)  
    e2a7:	ff 24 0a             	jmp    QWORD PTR [rdx+rcx*1]
    e2aa:	00 00                	add    BYTE PTR [rax],al
    e2ac:	c0 91 ff ff 48 0a 00 	rcl    BYTE PTR [rcx+0xa48ffff],0x0
    e2b3:	00 d7                	add    bh,dl
    e2b5:	91                   	xchg   ecx,eax
    e2b6:	ff                   	(bad)  
    e2b7:	ff 68 0a             	jmp    FWORD PTR [rax+0xa]
    e2ba:	00 00                	add    BYTE PTR [rax],al
    e2bc:	26 92                	es xchg edx,eax
    e2be:	ff                   	(bad)  
    e2bf:	ff 88 0a 00 00 73    	dec    DWORD PTR [rax+0x7300000a]
    e2c5:	92                   	xchg   edx,eax
    e2c6:	ff                   	(bad)  
    e2c7:	ff a8 0a 00 00 ea    	jmp    FWORD PTR [rax-0x15fffff6]
    e2cd:	93                   	xchg   ebx,eax
    e2ce:	ff                   	(bad)  
    e2cf:	ff c4                	inc    esp
    e2d1:	0a 00                	or     al,BYTE PTR [rax]
    e2d3:	00 86 94 ff ff e8    	add    BYTE PTR [rsi-0x1700006c],al
    e2d9:	0a 00                	or     al,BYTE PTR [rax]
    e2db:	00 74 96 ff          	add    BYTE PTR [rsi+rdx*4-0x1],dh
    e2df:	ff 08                	dec    DWORD PTR [rax]
    e2e1:	0b 00                	or     eax,DWORD PTR [rax]
    e2e3:	00 5c 98 ff          	add    BYTE PTR [rax+rbx*4-0x1],bl
    e2e7:	ff 28                	jmp    FWORD PTR [rax]
    e2e9:	0b 00                	or     eax,DWORD PTR [rax]
    e2eb:	00 c8                	add    al,cl
    e2ed:	98                   	cwde   
    e2ee:	ff                   	(bad)  
    e2ef:	ff 48 0b             	dec    DWORD PTR [rax+0xb]
    e2f2:	00 00                	add    BYTE PTR [rax],al
    e2f4:	3a 99 ff ff 68 0b    	cmp    bl,BYTE PTR [rcx+0xb68ffff]
    e2fa:	00 00                	add    BYTE PTR [rax],al
    e2fc:	4b 9a                	rex.WXB (bad) 
    e2fe:	ff                   	(bad)  
    e2ff:	ff 88 0b 00 00 a7    	dec    DWORD PTR [rax-0x58fffff5]
    e305:	9a                   	(bad)  
    e306:	ff                   	(bad)  
    e307:	ff a8 0b 00 00 e5    	jmp    FWORD PTR [rax-0x1afffff5]
    e30d:	9a                   	(bad)  
    e30e:	ff                   	(bad)  
    e30f:	ff c8                	dec    eax
    e311:	0b 00                	or     eax,DWORD PTR [rax]
    e313:	00 6b 9b             	add    BYTE PTR [rbx-0x65],ch
    e316:	ff                   	(bad)  
    e317:	ff                   	(bad)  
    e318:	e8 0b 00 00 4a       	call   4a00e328 <_end+0x49ed12e8>
    e31d:	9c                   	pushf  
    e31e:	ff                   	(bad)  
    e31f:	ff 08                	dec    DWORD PTR [rax]
    e321:	0c 00                	or     al,0x0
    e323:	00 be 9c ff ff 28    	add    BYTE PTR [rsi+0x28ffff9c],bh
    e329:	0c 00                	or     al,0x0
    e32b:	00 5a 9d             	add    BYTE PTR [rdx-0x63],bl
    e32e:	ff                   	(bad)  
    e32f:	ff 48 0c             	dec    DWORD PTR [rax+0xc]
    e332:	00 00                	add    BYTE PTR [rax],al
    e334:	83 9d ff ff 68 0c 00 	sbb    DWORD PTR [rbp+0xc68ffff],0x0
    e33b:	00 ac 9d ff ff 88 0c 	add    BYTE PTR [rbp+rbx*4+0xc88ffff],ch
    e342:	00 00                	add    BYTE PTR [rax],al
    e344:	ff 9e ff ff b0 0c    	call   FWORD PTR [rsi+0xcb0ffff]
    e34a:	00 00                	add    BYTE PTR [rax],al
    e34c:	12 a0 ff ff d0 0c    	adc    ah,BYTE PTR [rax+0xcd0ffff]
    e352:	00 00                	add    BYTE PTR [rax],al
    e354:	0b a1 ff ff f0 0c    	or     esp,DWORD PTR [rcx+0xcf0ffff]
    e35a:	00 00                	add    BYTE PTR [rax],al
    e35c:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    e35d:	a1 ff ff 10 0d 00 00 	movabs eax,ds:0xa1cb00000d10ffff
    e364:	cb a1 
    e366:	ff                   	(bad)  
    e367:	ff 30                	push   QWORD PTR [rax]
    e369:	0d 00 00 2e a3       	or     eax,0xa32e0000
    e36e:	ff                   	(bad)  
    e36f:	ff 50 0d             	call   QWORD PTR [rax+0xd]
    e372:	00 00                	add    BYTE PTR [rax],al
    e374:	3f                   	(bad)  
    e375:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    e376:	ff                   	(bad)  
    e377:	ff 80 0d 00 00 f1    	inc    DWORD PTR [rax-0xefffff3]
    e37d:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    e37e:	ff                   	(bad)  
    e37f:	ff a0 0d 00 00 96    	jmp    QWORD PTR [rax-0x69fffff3]
    e385:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    e386:	ff                   	(bad)  
    e387:	ff c0                	inc    eax
    e389:	0d 00 00 2a a7       	or     eax,0xa72a0000
    e38e:	ff                   	(bad)  
    e38f:	ff                   	(bad)  
    e390:	e8 0d 00 00 ff       	call   ffffffffff00e3a2 <_end+0xfffffffffeed1362>
    e395:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    e396:	ff                   	(bad)  
    e397:	ff 08                	dec    DWORD PTR [rax]
    e399:	0e                   	(bad)  
    e39a:	00 00                	add    BYTE PTR [rax],al
    e39c:	de a8 ff ff 28 0e    	fisubr WORD PTR [rax+0xe28ffff]
    e3a2:	00 00                	add    BYTE PTR [rax],al
    e3a4:	5b                   	pop    rbx
    e3a5:	a9 ff ff 48 0e       	test   eax,0xe48ffff
    e3aa:	00 00                	add    BYTE PTR [rax],al
    e3ac:	91                   	xchg   ecx,eax
    e3ad:	aa                   	stos   BYTE PTR es:[rdi],al
    e3ae:	ff                   	(bad)  
    e3af:	ff 68 0e             	jmp    FWORD PTR [rax+0xe]
    e3b2:	00 00                	add    BYTE PTR [rax],al
    e3b4:	0f ab ff             	bts    edi,edi
    e3b7:	ff 88 0e 00 00 48    	dec    DWORD PTR [rax+0x4800000e]
    e3bd:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    e3be:	ff                   	(bad)  
    e3bf:	ff a8 0e 00 00 11    	jmp    FWORD PTR [rax+0x1100000e]
    e3c5:	ae                   	scas   al,BYTE PTR es:[rdi]
    e3c6:	ff                   	(bad)  
    e3c7:	ff c8                	dec    eax
    e3c9:	0e                   	(bad)  
    e3ca:	00 00                	add    BYTE PTR [rax],al
    e3cc:	b2 af                	mov    dl,0xaf
    e3ce:	ff                   	(bad)  
    e3cf:	ff                   	(bad)  
    e3d0:	e8 0e 00 00 c5       	call   ffffffffc500e3e3 <_end+0xffffffffc4ed13a3>
    e3d5:	b0 ff                	mov    al,0xff
    e3d7:	ff 08                	dec    DWORD PTR [rax]
    e3d9:	0f 00 00             	sldt   WORD PTR [rax]
    e3dc:	2b b1 ff ff 28 0f    	sub    esi,DWORD PTR [rcx+0xf28ffff]
    e3e2:	00 00                	add    BYTE PTR [rax],al
    e3e4:	a0 b1 ff ff 48 0f 00 	movabs al,ds:0x7b00000f48ffffb1
    e3eb:	00 7b 
    e3ed:	b2 ff                	mov    dl,0xff
    e3ef:	ff 68 0f             	jmp    FWORD PTR [rax+0xf]
    e3f2:	00 00                	add    BYTE PTR [rax],al
    e3f4:	ed                   	in     eax,dx
    e3f5:	b3 ff                	mov    bl,0xff
    e3f7:	ff 88 0f 00 00 59    	dec    DWORD PTR [rax+0x5900000f]
    e3fd:	b4 ff                	mov    ah,0xff
    e3ff:	ff a8 0f 00 00 d9    	jmp    FWORD PTR [rax-0x26fffff1]
    e405:	b4 ff                	mov    ah,0xff
    e407:	ff c8                	dec    eax
    e409:	0f 00 00             	sldt   WORD PTR [rax]
    e40c:	ef                   	out    dx,eax
    e40d:	b4 ff                	mov    ah,0xff
    e40f:	ff                   	(bad)  
    e410:	e8 0f 00 00 29       	call   2900e424 <_end+0x28ed13e4>
    e415:	b6 ff                	mov    dh,0xff
    e417:	ff 0c 10             	dec    DWORD PTR [rax+rdx*1]
    e41a:	00 00                	add    BYTE PTR [rax],al
    e41c:	8d b6 ff ff 2c 10    	lea    esi,[rsi+0x102cffff]
    e422:	00 00                	add    BYTE PTR [rax],al
    e424:	e0 b6                	loopne e3dc <__GNU_EH_FRAME_HDR+0x2cc>
    e426:	ff                   	(bad)  
    e427:	ff 4c 10 00          	dec    DWORD PTR [rax+rdx*1+0x0]
    e42b:	00 91 b7 ff ff 6c    	add    BYTE PTR [rcx+0x6cffffb7],dl
    e431:	10 00                	adc    BYTE PTR [rax],al
    e433:	00 5c b8 ff          	add    BYTE PTR [rax+rdi*4-0x1],bl
    e437:	ff 8c 10 00 00 b1 b8 	dec    DWORD PTR [rax+rdx*1-0x474f0000]
    e43e:	ff                   	(bad)  
    e43f:	ff ac 10 00 00 e1 b8 	jmp    FWORD PTR [rax+rdx*1-0x471f0000]
    e446:	ff                   	(bad)  
    e447:	ff cc                	dec    esp
    e449:	10 00                	adc    BYTE PTR [rax],al
    e44b:	00 48 b9             	add    BYTE PTR [rax-0x47],cl
    e44e:	ff                   	(bad)  
    e44f:	ff                   	(bad)  
    e450:	ec                   	in     al,dx
    e451:	10 00                	adc    BYTE PTR [rax],al
    e453:	00 80 c8 ff ff 10    	add    BYTE PTR [rax+0x10ffffc8],al
    e459:	11 00                	adc    DWORD PTR [rax],eax
    e45b:	00 c6                	add    dh,al
    e45d:	c8 ff ff 30          	enter  0xffff,0x30
    e461:	11 00                	adc    DWORD PTR [rax],eax
    e463:	00 01                	add    BYTE PTR [rcx],al
    e465:	cb                   	retf   
    e466:	ff                   	(bad)  
    e467:	ff 58 11             	call   FWORD PTR [rax+0x11]
    e46a:	00 00                	add    BYTE PTR [rax],al
    e46c:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    e46d:	cc                   	int3   
    e46e:	ff                   	(bad)  
    e46f:	ff                   	(bad)  
    e470:	78 11                	js     e483 <__GNU_EH_FRAME_HDR+0x373>
    e472:	00 00                	add    BYTE PTR [rax],al
    e474:	b8 cd ff ff 98       	mov    eax,0x98ffffcd
    e479:	11 00                	adc    DWORD PTR [rax],eax
    e47b:	00 74 ce ff          	add    BYTE PTR [rsi+rcx*8-0x1],dh
    e47f:	ff c0                	inc    eax
    e481:	11 00                	adc    DWORD PTR [rax],eax
    e483:	00 0f                	add    BYTE PTR [rdi],cl
    e485:	d0 ff                	sar    bh,1
    e487:	ff                   	(bad)  
    e488:	e8 11 00 00 b4       	call   ffffffffb400e49e <_end+0xffffffffb3ed145e>
    e48d:	d0 ff                	sar    bh,1
    e48f:	ff 08                	dec    DWORD PTR [rax]
    e491:	12 00                	adc    al,BYTE PTR [rax]
    e493:	00 f7                	add    bh,dh
    e495:	d1 ff                	sar    edi,1
    e497:	ff 28                	jmp    FWORD PTR [rax]
    e499:	12 00                	adc    al,BYTE PTR [rax]
    e49b:	00 ea                	add    dl,ch
    e49d:	d2 ff                	sar    bh,cl
    e49f:	ff 48 12             	dec    DWORD PTR [rax+0x12]
    e4a2:	00 00                	add    BYTE PTR [rax],al
    e4a4:	5a                   	pop    rdx
    e4a5:	d3 ff                	sar    edi,cl
    e4a7:	ff 68 12             	jmp    FWORD PTR [rax+0x12]
    e4aa:	00 00                	add    BYTE PTR [rax],al
    e4ac:	ff d5                	call   rbp
    e4ae:	ff                   	(bad)  
    e4af:	ff 88 12 00 00 69    	dec    DWORD PTR [rax+0x69000012]
    e4b5:	d6                   	(bad)  
    e4b6:	ff                   	(bad)  
    e4b7:	ff a8 12 00 00 d7    	jmp    FWORD PTR [rax-0x28ffffee]
    e4bd:	d6                   	(bad)  
    e4be:	ff                   	(bad)  
    e4bf:	ff c8                	dec    eax
    e4c1:	12 00                	adc    al,BYTE PTR [rax]
    e4c3:	00 64 d8 ff          	add    BYTE PTR [rax+rbx*8-0x1],ah
    e4c7:	ff f0                	push   rax
    e4c9:	12 00                	adc    al,BYTE PTR [rax]
    e4cb:	00 4b dc             	add    BYTE PTR [rbx-0x24],cl
    e4ce:	ff                   	(bad)  
    e4cf:	ff 10                	call   QWORD PTR [rax]
    e4d1:	13 00                	adc    eax,DWORD PTR [rax]
	...

Disassembly of section .eh_frame:

000000000000e4d8 <__FRAME_END__-0xf68>:
    e4d8:	14 00                	adc    al,0x0
    e4da:	00 00                	add    BYTE PTR [rax],al
    e4dc:	00 00                	add    BYTE PTR [rax],al
    e4de:	00 00                	add    BYTE PTR [rax],al
    e4e0:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    e4e3:	00 01                	add    BYTE PTR [rcx],al
    e4e5:	78 10                	js     e4f7 <__GNU_EH_FRAME_HDR+0x3e7>
    e4e7:	01 1b                	add    DWORD PTR [rbx],ebx
    e4e9:	0c 07                	or     al,0x7
    e4eb:	08 90 01 00 00 14    	or     BYTE PTR [rax+0x14000001],dl
    e4f1:	00 00                	add    BYTE PTR [rax],al
    e4f3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e4f6:	00 00                	add    BYTE PTR [rax],al
    e4f8:	28 44 ff ff          	sub    BYTE PTR [rdi+rdi*8-0x1],al
    e4fc:	26 00 00             	es add BYTE PTR [rax],al
    e4ff:	00 00                	add    BYTE PTR [rax],al
    e501:	44 07                	rex.R (bad) 
    e503:	10 00                	adc    BYTE PTR [rax],al
    e505:	00 00                	add    BYTE PTR [rax],al
    e507:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    e50a:	00 00                	add    BYTE PTR [rax],al
    e50c:	34 00                	xor    al,0x0
    e50e:	00 00                	add    BYTE PTR [rax],al
    e510:	10 3b                	adc    BYTE PTR [rbx],bh
    e512:	ff                   	(bad)  
    e513:	ff 80 04 00 00 00    	inc    DWORD PTR [rax+0x4]
    e519:	0e                   	(bad)  
    e51a:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
    e51d:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
    e520:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
    e523:	80 00 3f             	add    BYTE PTR [rax],0x3f
    e526:	1a 3a                	sbb    bh,BYTE PTR [rdx]
    e528:	2a 33                	sub    dh,BYTE PTR [rbx]
    e52a:	24 22                	and    al,0x22
    e52c:	00 00                	add    BYTE PTR [rax],al
    e52e:	00 00                	add    BYTE PTR [rax],al
    e530:	14 00                	adc    al,0x0
    e532:	00 00                	add    BYTE PTR [rax],al
    e534:	5c                   	pop    rsp
    e535:	00 00                	add    BYTE PTR [rax],al
    e537:	00 68 3f             	add    BYTE PTR [rax+0x3f],ch
    e53a:	ff                   	(bad)  
    e53b:	ff 10                	call   QWORD PTR [rax]
	...
    e545:	00 00                	add    BYTE PTR [rax],al
    e547:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    e54a:	00 00                	add    BYTE PTR [rax],al
    e54c:	74 00                	je     e54e <__GNU_EH_FRAME_HDR+0x43e>
    e54e:	00 00                	add    BYTE PTR [rax],al
    e550:	60                   	(bad)  
    e551:	3f                   	(bad)  
    e552:	ff                   	(bad)  
    e553:	ff 70 04             	push   QWORD PTR [rax+0x4]
	...
    e55e:	00 00                	add    BYTE PTR [rax],al
    e560:	1c 00                	sbb    al,0x0
    e562:	00 00                	add    BYTE PTR [rax],al
    e564:	8c 00                	mov    WORD PTR [rax],es
    e566:	00 00                	add    BYTE PTR [rax],al
    e568:	a1 44 ff ff 3a 00 00 	movabs eax,ds:0x3affff44
    e56f:	00 00 
    e571:	45 0e                	rex.RB (bad) 
    e573:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e579:	71 0c                	jno    e587 <__GNU_EH_FRAME_HDR+0x477>
    e57b:	07                   	(bad)  
    e57c:	08 00                	or     BYTE PTR [rax],al
    e57e:	00 00                	add    BYTE PTR [rax],al
    e580:	24 00                	and    al,0x0
    e582:	00 00                	add    BYTE PTR [rax],al
    e584:	ac                   	lods   al,BYTE PTR ds:[rsi]
    e585:	00 00                	add    BYTE PTR [rax],al
    e587:	00 bb 44 ff ff 56    	add    BYTE PTR [rbx+0x56ffff44],bh
    e58d:	01 00                	add    DWORD PTR [rax],eax
    e58f:	00 00                	add    BYTE PTR [rax],al
    e591:	45 0e                	rex.RB (bad) 
    e593:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e599:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    e59d:	48 01 0c 07          	add    QWORD PTR [rdi+rax*1],rcx
    e5a1:	08 00                	or     BYTE PTR [rax],al
    e5a3:	00 00                	add    BYTE PTR [rax],al
    e5a5:	00 00                	add    BYTE PTR [rax],al
    e5a7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e5aa:	00 00                	add    BYTE PTR [rax],al
    e5ac:	d4                   	(bad)  
    e5ad:	00 00                	add    BYTE PTR [rax],al
    e5af:	00 e9                	add    cl,ch
    e5b1:	45 ff                	rex.RB (bad) 
    e5b3:	ff f4                	push   rsp
    e5b5:	02 00                	add    al,BYTE PTR [rax]
    e5b7:	00 00                	add    BYTE PTR [rax],al
    e5b9:	45 0e                	rex.RB (bad) 
    e5bb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e5c1:	03 eb                	add    ebp,ebx
    e5c3:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    e5c6:	08 00                	or     BYTE PTR [rax],al
    e5c8:	1c 00                	sbb    al,0x0
    e5ca:	00 00                	add    BYTE PTR [rax],al
    e5cc:	f4                   	hlt    
    e5cd:	00 00                	add    BYTE PTR [rax],al
    e5cf:	00 bd 48 ff ff 13    	add    BYTE PTR [rbp+0x13ffff48],bh
    e5d5:	01 00                	add    DWORD PTR [rax],eax
    e5d7:	00 00                	add    BYTE PTR [rax],al
    e5d9:	45 0e                	rex.RB (bad) 
    e5db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e5e1:	03 0a                	add    ecx,DWORD PTR [rdx]
    e5e3:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    e5e6:	08 00                	or     BYTE PTR [rax],al
    e5e8:	1c 00                	sbb    al,0x0
    e5ea:	00 00                	add    BYTE PTR [rax],al
    e5ec:	14 01                	adc    al,0x1
    e5ee:	00 00                	add    BYTE PTR [rax],al
    e5f0:	b0 49                	mov    al,0x49
    e5f2:	ff                   	(bad)  
    e5f3:	ff ae 00 00 00 00    	jmp    FWORD PTR [rsi+0x0]
    e5f9:	45 0e                	rex.RB (bad) 
    e5fb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e601:	02 a5 0c 07 08 00    	add    ah,BYTE PTR [rbp+0x8070c]
    e607:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e60a:	00 00                	add    BYTE PTR [rax],al
    e60c:	34 01                	xor    al,0x1
    e60e:	00 00                	add    BYTE PTR [rax],al
    e610:	3e 4a ff             	ds rex.WX (bad) 
    e613:	ff a6 00 00 00 00    	jmp    QWORD PTR [rsi+0x0]
    e619:	45 0e                	rex.RB (bad) 
    e61b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e621:	02 9d 0c 07 08 00    	add    bl,BYTE PTR [rbp+0x8070c]
    e627:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e62a:	00 00                	add    BYTE PTR [rax],al
    e62c:	54                   	push   rsp
    e62d:	01 00                	add    DWORD PTR [rax],eax
    e62f:	00 c4                	add    ah,al
    e631:	4a ff                	rex.WX (bad) 
    e633:	ff 95 00 00 00 00    	call   QWORD PTR [rbp+0x0]
    e639:	45 0e                	rex.RB (bad) 
    e63b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e641:	02 8c 0c 07 08 00 00 	add    cl,BYTE PTR [rsp+rcx*1+0x807]
    e648:	1c 00                	sbb    al,0x0
    e64a:	00 00                	add    BYTE PTR [rax],al
    e64c:	74 01                	je     e64f <__GNU_EH_FRAME_HDR+0x53f>
    e64e:	00 00                	add    BYTE PTR [rax],al
    e650:	39 4b ff             	cmp    DWORD PTR [rbx-0x1],ecx
    e653:	ff 94 00 00 00 00 45 	call   QWORD PTR [rax+rax*1+0x45000000]
    e65a:	0e                   	(bad)  
    e65b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e661:	02 8b 0c 07 08 00    	add    cl,BYTE PTR [rbx+0x8070c]
    e667:	00 28                	add    BYTE PTR [rax],ch
    e669:	00 00                	add    BYTE PTR [rax],al
    e66b:	00 94 01 00 00 ad 4b 	add    BYTE PTR [rcx+rax*1+0x4bad0000],dl
    e672:	ff                   	(bad)  
    e673:	ff cc                	dec    esp
    e675:	01 00                	add    DWORD PTR [rax],eax
    e677:	00 00                	add    BYTE PTR [rax],al
    e679:	45 0e                	rex.RB (bad) 
    e67b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e681:	4d 8f 03             	rex.WRB pop QWORD PTR [r11]
    e684:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
    e68b:	07                   	(bad)  
    e68c:	03 b6 01 0c 07 08    	add    esi,DWORD PTR [rsi+0x8070c01]
    e692:	00 00                	add    BYTE PTR [rax],al
    e694:	20 00                	and    BYTE PTR [rax],al
    e696:	00 00                	add    BYTE PTR [rax],al
    e698:	c0 01 00             	rol    BYTE PTR [rcx],0x0
    e69b:	00 4d 4d             	add    BYTE PTR [rbp+0x4d],cl
    e69e:	ff                   	(bad)  
    e69f:	ff d4                	call   rsp
    e6a1:	00 00                	add    BYTE PTR [rax],al
    e6a3:	00 00                	add    BYTE PTR [rax],al
    e6a5:	45 0e                	rex.RB (bad) 
    e6a7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e6ad:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    e6b1:	c6                   	(bad)  
    e6b2:	0c 07                	or     al,0x7
    e6b4:	08 00                	or     BYTE PTR [rax],al
    e6b6:	00 00                	add    BYTE PTR [rax],al
    e6b8:	20 00                	and    BYTE PTR [rax],al
    e6ba:	00 00                	add    BYTE PTR [rax],al
    e6bc:	e4 01                	in     al,0x1
    e6be:	00 00                	add    BYTE PTR [rax],al
    e6c0:	fd                   	std    
    e6c1:	4d ff                	rex.WRB (bad) 
    e6c3:	ff c7                	inc    edi
    e6c5:	00 00                	add    BYTE PTR [rax],al
    e6c7:	00 00                	add    BYTE PTR [rax],al
    e6c9:	45 0e                	rex.RB (bad) 
    e6cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e6d1:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    e6d5:	b9 0c 07 08 00       	mov    ecx,0x8070c
    e6da:	00 00                	add    BYTE PTR [rax],al
    e6dc:	1c 00                	sbb    al,0x0
    e6de:	00 00                	add    BYTE PTR [rax],al
    e6e0:	08 02                	or     BYTE PTR [rdx],al
    e6e2:	00 00                	add    BYTE PTR [rax],al
    e6e4:	a0 4e ff ff 53 00 00 	movabs al,ds:0x53ffff4e
    e6eb:	00 00 
    e6ed:	45 0e                	rex.RB (bad) 
    e6ef:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e6f5:	02 4a 0c             	add    cl,BYTE PTR [rdx+0xc]
    e6f8:	07                   	(bad)  
    e6f9:	08 00                	or     BYTE PTR [rax],al
    e6fb:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e6fe:	00 00                	add    BYTE PTR [rax],al
    e700:	28 02                	sub    BYTE PTR [rdx],al
    e702:	00 00                	add    BYTE PTR [rax],al
    e704:	d3 4e ff             	ror    DWORD PTR [rsi-0x1],cl
    e707:	ff 33                	push   QWORD PTR [rbx]
    e709:	00 00                	add    BYTE PTR [rax],al
    e70b:	00 00                	add    BYTE PTR [rax],al
    e70d:	45 0e                	rex.RB (bad) 
    e70f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e715:	6a 0c                	push   0xc
    e717:	07                   	(bad)  
    e718:	08 00                	or     BYTE PTR [rax],al
    e71a:	00 00                	add    BYTE PTR [rax],al
    e71c:	1c 00                	sbb    al,0x0
    e71e:	00 00                	add    BYTE PTR [rax],al
    e720:	48 02 00             	rex.W add al,BYTE PTR [rax]
    e723:	00 e6                	add    dh,ah
    e725:	4e ff                	rex.WRX (bad) 
    e727:	ff 21                	jmp    QWORD PTR [rcx]
    e729:	00 00                	add    BYTE PTR [rax],al
    e72b:	00 00                	add    BYTE PTR [rax],al
    e72d:	45 0e                	rex.RB (bad) 
    e72f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e735:	58                   	pop    rax
    e736:	0c 07                	or     al,0x7
    e738:	08 00                	or     BYTE PTR [rax],al
    e73a:	00 00                	add    BYTE PTR [rax],al
    e73c:	20 00                	and    BYTE PTR [rax],al
    e73e:	00 00                	add    BYTE PTR [rax],al
    e740:	68 02 00 00 e7       	push   0xffffffffe7000002
    e745:	4e ff                	rex.WRX (bad) 
    e747:	ff 68 00             	jmp    FWORD PTR [rax+0x0]
    e74a:	00 00                	add    BYTE PTR [rax],al
    e74c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e74f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e755:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    e759:	5a                   	pop    rdx
    e75a:	0c 07                	or     al,0x7
    e75c:	08 00                	or     BYTE PTR [rax],al
    e75e:	00 00                	add    BYTE PTR [rax],al
    e760:	1c 00                	sbb    al,0x0
    e762:	00 00                	add    BYTE PTR [rax],al
    e764:	8c 02                	mov    WORD PTR [rdx],es
    e766:	00 00                	add    BYTE PTR [rax],al
    e768:	2b 4f ff             	sub    ecx,DWORD PTR [rdi-0x1]
    e76b:	ff 25 04 00 00 00    	jmp    QWORD PTR [rip+0x4]        # e775 <__GNU_EH_FRAME_HDR+0x665>
    e771:	45 0e                	rex.RB (bad) 
    e773:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e779:	03 1c 04             	add    ebx,DWORD PTR [rsp+rax*1]
    e77c:	0c 07                	or     al,0x7
    e77e:	08 00                	or     BYTE PTR [rax],al
    e780:	1c 00                	sbb    al,0x0
    e782:	00 00                	add    BYTE PTR [rax],al
    e784:	ac                   	lods   al,BYTE PTR ds:[rsi]
    e785:	02 00                	add    al,BYTE PTR [rax]
    e787:	00 30                	add    BYTE PTR [rax],dh
    e789:	53                   	push   rbx
    e78a:	ff                   	(bad)  
    e78b:	ff 5d 01             	call   FWORD PTR [rbp+0x1]
    e78e:	00 00                	add    BYTE PTR [rax],al
    e790:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e793:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e799:	03 54 01 0c          	add    edx,DWORD PTR [rcx+rax*1+0xc]
    e79d:	07                   	(bad)  
    e79e:	08 00                	or     BYTE PTR [rax],al
    e7a0:	1c 00                	sbb    al,0x0
    e7a2:	00 00                	add    BYTE PTR [rax],al
    e7a4:	cc                   	int3   
    e7a5:	02 00                	add    al,BYTE PTR [rax]
    e7a7:	00 6d 54             	add    BYTE PTR [rbp+0x54],ch
    e7aa:	ff                   	(bad)  
    e7ab:	ff 44 08 00          	inc    DWORD PTR [rax+rcx*1+0x0]
    e7af:	00 00                	add    BYTE PTR [rax],al
    e7b1:	45 0e                	rex.RB (bad) 
    e7b3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e7b9:	03 3b                	add    edi,DWORD PTR [rbx]
    e7bb:	08 0c 07             	or     BYTE PTR [rdi+rax*1],cl
    e7be:	08 00                	or     BYTE PTR [rax],al
    e7c0:	24 00                	and    al,0x0
    e7c2:	00 00                	add    BYTE PTR [rax],al
    e7c4:	ec                   	in     al,dx
    e7c5:	02 00                	add    al,BYTE PTR [rax]
    e7c7:	00 91 5c ff ff bc    	add    BYTE PTR [rcx-0x430000a4],dl
    e7cd:	08 00                	or     BYTE PTR [rax],al
    e7cf:	00 00                	add    BYTE PTR [rax],al
    e7d1:	45 0e                	rex.RB (bad) 
    e7d3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e7d9:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    e7dd:	ab                   	stos   DWORD PTR es:[rdi],eax
    e7de:	08 0c 07             	or     BYTE PTR [rdi+rax*1],cl
    e7e1:	08 00                	or     BYTE PTR [rax],al
    e7e3:	00 00                	add    BYTE PTR [rax],al
    e7e5:	00 00                	add    BYTE PTR [rax],al
    e7e7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e7ea:	00 00                	add    BYTE PTR [rax],al
    e7ec:	14 03                	adc    al,0x3
    e7ee:	00 00                	add    BYTE PTR [rax],al
    e7f0:	25 65 ff ff 55       	and    eax,0x55ffff65
    e7f5:	01 00                	add    DWORD PTR [rax],eax
    e7f7:	00 00                	add    BYTE PTR [rax],al
    e7f9:	45 0e                	rex.RB (bad) 
    e7fb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e801:	03 4c 01 0c          	add    ecx,DWORD PTR [rcx+rax*1+0xc]
    e805:	07                   	(bad)  
    e806:	08 00                	or     BYTE PTR [rax],al
    e808:	1c 00                	sbb    al,0x0
    e80a:	00 00                	add    BYTE PTR [rax],al
    e80c:	34 03                	xor    al,0x3
    e80e:	00 00                	add    BYTE PTR [rax],al
    e810:	5a                   	pop    rdx
    e811:	66 ff                	data16 (bad) 
    e813:	ff                   	(bad)  
    e814:	ff 00                	inc    DWORD PTR [rax]
    e816:	00 00                	add    BYTE PTR [rax],al
    e818:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e81b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e821:	02 f6                	add    dh,dh
    e823:	0c 07                	or     al,0x7
    e825:	08 00                	or     BYTE PTR [rax],al
    e827:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e82a:	00 00                	add    BYTE PTR [rax],al
    e82c:	54                   	push   rsp
    e82d:	03 00                	add    eax,DWORD PTR [rax]
    e82f:	00 39                	add    BYTE PTR [rcx],bh
    e831:	67 ff                	addr32 (bad) 
    e833:	ff                   	(bad)  
    e834:	ec                   	in     al,dx
    e835:	00 00                	add    BYTE PTR [rax],al
    e837:	00 00                	add    BYTE PTR [rax],al
    e839:	45 0e                	rex.RB (bad) 
    e83b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e841:	02 e3                	add    ah,bl
    e843:	0c 07                	or     al,0x7
    e845:	08 00                	or     BYTE PTR [rax],al
    e847:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e84a:	00 00                	add    BYTE PTR [rax],al
    e84c:	74 03                	je     e851 <__GNU_EH_FRAME_HDR+0x741>
    e84e:	00 00                	add    BYTE PTR [rax],al
    e850:	05 68 ff ff b2       	add    eax,0xb2ffff68
    e855:	03 00                	add    eax,DWORD PTR [rax]
    e857:	00 00                	add    BYTE PTR [rax],al
    e859:	45 0e                	rex.RB (bad) 
    e85b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e861:	03 a9 03 0c 07 08    	add    ebp,DWORD PTR [rcx+0x8070c03]
    e867:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e86a:	00 00                	add    BYTE PTR [rax],al
    e86c:	94                   	xchg   esp,eax
    e86d:	03 00                	add    eax,DWORD PTR [rax]
    e86f:	00 97 6b ff ff 83    	add    BYTE PTR [rdi-0x7c000095],dl
    e875:	00 00                	add    BYTE PTR [rax],al
    e877:	00 00                	add    BYTE PTR [rax],al
    e879:	45 0e                	rex.RB (bad) 
    e87b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e881:	02 7a 0c             	add    bh,BYTE PTR [rdx+0xc]
    e884:	07                   	(bad)  
    e885:	08 00                	or     BYTE PTR [rax],al
    e887:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    e88a:	00 00                	add    BYTE PTR [rax],al
    e88c:	b4 03                	mov    ah,0x3
    e88e:	00 00                	add    BYTE PTR [rax],al
    e890:	fa                   	cli    
    e891:	6b ff ff             	imul   edi,edi,0xffffffff
    e894:	2a 02                	sub    al,BYTE PTR [rdx]
    e896:	00 00                	add    BYTE PTR [rax],al
    e898:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e89b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e8a1:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    e8a5:	19 02                	sbb    DWORD PTR [rdx],eax
    e8a7:	0c 07                	or     al,0x7
    e8a9:	08 00                	or     BYTE PTR [rax],al
    e8ab:	00 00                	add    BYTE PTR [rax],al
    e8ad:	00 00                	add    BYTE PTR [rax],al
    e8af:	00 20                	add    BYTE PTR [rax],ah
    e8b1:	00 00                	add    BYTE PTR [rax],al
    e8b3:	00 dc                	add    ah,bl
    e8b5:	03 00                	add    eax,DWORD PTR [rax]
    e8b7:	00 fc                	add    ah,bh
    e8b9:	6d                   	ins    DWORD PTR es:[rdi],dx
    e8ba:	ff                   	(bad)  
    e8bb:	ff                   	(bad)  
    e8bc:	3d 02 00 00 00       	cmp    eax,0x2
    e8c1:	45 0e                	rex.RB (bad) 
    e8c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e8c9:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    e8cd:	2f                   	(bad)  
    e8ce:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    e8d1:	08 00                	or     BYTE PTR [rax],al
    e8d3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e8d6:	00 00                	add    BYTE PTR [rax],al
    e8d8:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    e8db:	00 15 70 ff ff 66    	add    BYTE PTR [rip+0x66ffff70],dl        # 6700e851 <_end+0x66ed1811>
    e8e1:	00 00                	add    BYTE PTR [rax],al
    e8e3:	00 00                	add    BYTE PTR [rax],al
    e8e5:	45 0e                	rex.RB (bad) 
    e8e7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e8ed:	02 5d 0c             	add    bl,BYTE PTR [rbp+0xc]
    e8f0:	07                   	(bad)  
    e8f1:	08 00                	or     BYTE PTR [rax],al
    e8f3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e8f6:	00 00                	add    BYTE PTR [rax],al
    e8f8:	20 04 00             	and    BYTE PTR [rax+rax*1],al
    e8fb:	00 5b 70             	add    BYTE PTR [rbx+0x70],bl
    e8fe:	ff                   	(bad)  
    e8ff:	ff 17                	call   QWORD PTR [rdi]
    e901:	00 00                	add    BYTE PTR [rax],al
    e903:	00 00                	add    BYTE PTR [rax],al
    e905:	45 0e                	rex.RB (bad) 
    e907:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e90d:	4e 0c 07             	rex.WRX or al,0x7
    e910:	08 00                	or     BYTE PTR [rax],al
    e912:	00 00                	add    BYTE PTR [rax],al
    e914:	20 00                	and    BYTE PTR [rax],al
    e916:	00 00                	add    BYTE PTR [rax],al
    e918:	40 04 00             	rex add al,0x0
    e91b:	00 52 70             	add    BYTE PTR [rdx+0x70],dl
    e91e:	ff                   	(bad)  
    e91f:	ff 51 00             	call   QWORD PTR [rcx+0x0]
    e922:	00 00                	add    BYTE PTR [rax],al
    e924:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e927:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e92d:	02 48 0c             	add    cl,BYTE PTR [rax+0xc]
    e930:	07                   	(bad)  
    e931:	08 00                	or     BYTE PTR [rax],al
    e933:	00 00                	add    BYTE PTR [rax],al
    e935:	00 00                	add    BYTE PTR [rax],al
    e937:	00 20                	add    BYTE PTR [rax],ah
    e939:	00 00                	add    BYTE PTR [rax],al
    e93b:	00 64 04 00          	add    BYTE PTR [rsp+rax*1+0x0],ah
    e93f:	00 7f 70             	add    BYTE PTR [rdi+0x70],bh
    e942:	ff                   	(bad)  
    e943:	ff                   	(bad)  
    e944:	3d 06 00 00 00       	cmp    eax,0x6
    e949:	45 0e                	rex.RB (bad) 
    e94b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e951:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    e955:	2f                   	(bad)  
    e956:	06                   	(bad)  
    e957:	0c 07                	or     al,0x7
    e959:	08 00                	or     BYTE PTR [rax],al
    e95b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e95e:	00 00                	add    BYTE PTR [rax],al
    e960:	88 04 00             	mov    BYTE PTR [rax+rax*1],al
    e963:	00 98 76 ff ff 1a    	add    BYTE PTR [rax+0x1affff76],bl
    e969:	00 00                	add    BYTE PTR [rax],al
    e96b:	00 00                	add    BYTE PTR [rax],al
    e96d:	45 0e                	rex.RB (bad) 
    e96f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e975:	51                   	push   rcx
    e976:	0c 07                	or     al,0x7
    e978:	08 00                	or     BYTE PTR [rax],al
    e97a:	00 00                	add    BYTE PTR [rax],al
    e97c:	1c 00                	sbb    al,0x0
    e97e:	00 00                	add    BYTE PTR [rax],al
    e980:	a8 04                	test   al,0x4
    e982:	00 00                	add    BYTE PTR [rax],al
    e984:	92                   	xchg   edx,eax
    e985:	76 ff                	jbe    e986 <__GNU_EH_FRAME_HDR+0x876>
    e987:	ff 29                	jmp    FWORD PTR [rcx]
    e989:	00 00                	add    BYTE PTR [rax],al
    e98b:	00 00                	add    BYTE PTR [rax],al
    e98d:	45 0e                	rex.RB (bad) 
    e98f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e995:	60                   	(bad)  
    e996:	0c 07                	or     al,0x7
    e998:	08 00                	or     BYTE PTR [rax],al
    e99a:	00 00                	add    BYTE PTR [rax],al
    e99c:	1c 00                	sbb    al,0x0
    e99e:	00 00                	add    BYTE PTR [rax],al
    e9a0:	c8 04 00 00          	enter  0x4,0x0
    e9a4:	9b                   	fwait
    e9a5:	76 ff                	jbe    e9a6 <__GNU_EH_FRAME_HDR+0x896>
    e9a7:	ff 30                	push   QWORD PTR [rax]
    e9a9:	00 00                	add    BYTE PTR [rax],al
    e9ab:	00 00                	add    BYTE PTR [rax],al
    e9ad:	45 0e                	rex.RB (bad) 
    e9af:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e9b5:	67 0c 07             	addr32 or al,0x7
    e9b8:	08 00                	or     BYTE PTR [rax],al
    e9ba:	00 00                	add    BYTE PTR [rax],al
    e9bc:	18 00                	sbb    BYTE PTR [rax],al
    e9be:	00 00                	add    BYTE PTR [rax],al
    e9c0:	e8 04 00 00 ab       	call   ffffffffab00e9c9 <_end+0xffffffffaaed1989>
    e9c5:	76 ff                	jbe    e9c6 <__GNU_EH_FRAME_HDR+0x8b6>
    e9c7:	ff 37                	push   QWORD PTR [rdi]
    e9c9:	00 00                	add    BYTE PTR [rax],al
    e9cb:	00 00                	add    BYTE PTR [rax],al
    e9cd:	45 0e                	rex.RB (bad) 
    e9cf:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e9d5:	00 00                	add    BYTE PTR [rax],al
    e9d7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e9da:	00 00                	add    BYTE PTR [rax],al
    e9dc:	04 05                	add    al,0x5
    e9de:	00 00                	add    BYTE PTR [rax],al
    e9e0:	c6                   	(bad)  
    e9e1:	76 ff                	jbe    e9e2 <__GNU_EH_FRAME_HDR+0x8d2>
    e9e3:	ff 45 01             	inc    DWORD PTR [rbp+0x1]
    e9e6:	00 00                	add    BYTE PTR [rax],al
    e9e8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e9eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e9f1:	03 3c 01             	add    edi,DWORD PTR [rcx+rax*1]
    e9f4:	0c 07                	or     al,0x7
    e9f6:	08 00                	or     BYTE PTR [rax],al
    e9f8:	1c 00                	sbb    al,0x0
    e9fa:	00 00                	add    BYTE PTR [rax],al
    e9fc:	24 05                	and    al,0x5
    e9fe:	00 00                	add    BYTE PTR [rax],al
    ea00:	eb 77                	jmp    ea79 <__GNU_EH_FRAME_HDR+0x969>
    ea02:	ff                   	(bad)  
    ea03:	ff 60 01             	jmp    QWORD PTR [rax+0x1]
    ea06:	00 00                	add    BYTE PTR [rax],al
    ea08:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ea0b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea11:	03 57 01             	add    edx,DWORD PTR [rdi+0x1]
    ea14:	0c 07                	or     al,0x7
    ea16:	08 00                	or     BYTE PTR [rax],al
    ea18:	1c 00                	sbb    al,0x0
    ea1a:	00 00                	add    BYTE PTR [rax],al
    ea1c:	44 05 00 00 2b 79    	rex.R add eax,0x792b0000
    ea22:	ff                   	(bad)  
    ea23:	ff 61 00             	jmp    QWORD PTR [rcx+0x0]
    ea26:	00 00                	add    BYTE PTR [rax],al
    ea28:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ea2b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea31:	02 58 0c             	add    bl,BYTE PTR [rax+0xc]
    ea34:	07                   	(bad)  
    ea35:	08 00                	or     BYTE PTR [rax],al
    ea37:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ea3a:	00 00                	add    BYTE PTR [rax],al
    ea3c:	64 05 00 00 6c 79    	fs add eax,0x796c0000
    ea42:	ff                   	(bad)  
    ea43:	ff                   	(bad)  
    ea44:	39 00                	cmp    DWORD PTR [rax],eax
    ea46:	00 00                	add    BYTE PTR [rax],al
    ea48:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ea4b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea51:	70 0c                	jo     ea5f <__GNU_EH_FRAME_HDR+0x94f>
    ea53:	07                   	(bad)  
    ea54:	08 00                	or     BYTE PTR [rax],al
    ea56:	00 00                	add    BYTE PTR [rax],al
    ea58:	1c 00                	sbb    al,0x0
    ea5a:	00 00                	add    BYTE PTR [rax],al
    ea5c:	84 05 00 00 85 79    	test   BYTE PTR [rip+0x79850000],al        # 7985ea62 <_end+0x79721a22>
    ea62:	ff                   	(bad)  
    ea63:	ff                   	(bad)  
    ea64:	be 00 00 00 00       	mov    esi,0x0
    ea69:	45 0e                	rex.RB (bad) 
    ea6b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea71:	02 b5 0c 07 08 00    	add    dh,BYTE PTR [rbp+0x8070c]
    ea77:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ea7a:	00 00                	add    BYTE PTR [rax],al
    ea7c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    ea7d:	05 00 00 23 7a       	add    eax,0x7a230000
    ea82:	ff                   	(bad)  
    ea83:	ff                   	(bad)  
    ea84:	be 02 00 00 00       	mov    esi,0x2
    ea89:	45 0e                	rex.RB (bad) 
    ea8b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea91:	03 b5 02 0c 07 08    	add    esi,DWORD PTR [rbp+0x8070c02]
    ea97:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ea9a:	00 00                	add    BYTE PTR [rax],al
    ea9c:	c4                   	(bad)  
    ea9d:	05 00 00 c1 7c       	add    eax,0x7cc10000
    eaa2:	ff                   	(bad)  
    eaa3:	ff                   	(bad)  
    eaa4:	f8                   	clc    
    eaa5:	01 00                	add    DWORD PTR [rax],eax
    eaa7:	00 00                	add    BYTE PTR [rax],al
    eaa9:	45 0e                	rex.RB (bad) 
    eaab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eab1:	03 ef                	add    ebp,edi
    eab3:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    eab6:	08 00                	or     BYTE PTR [rax],al
    eab8:	1c 00                	sbb    al,0x0
    eaba:	00 00                	add    BYTE PTR [rax],al
    eabc:	e4 05                	in     al,0x5
    eabe:	00 00                	add    BYTE PTR [rax],al
    eac0:	99                   	cdq    
    eac1:	7e ff                	jle    eac2 <__GNU_EH_FRAME_HDR+0x9b2>
    eac3:	ff 5a 00             	call   FWORD PTR [rdx+0x0]
    eac6:	00 00                	add    BYTE PTR [rax],al
    eac8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eacb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ead1:	02 51 0c             	add    dl,BYTE PTR [rcx+0xc]
    ead4:	07                   	(bad)  
    ead5:	08 00                	or     BYTE PTR [rax],al
    ead7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eada:	00 00                	add    BYTE PTR [rax],al
    eadc:	04 06                	add    al,0x6
    eade:	00 00                	add    BYTE PTR [rax],al
    eae0:	d3 7e ff             	sar    DWORD PTR [rsi-0x1],cl
    eae3:	ff f0                	push   rax
    eae5:	02 00                	add    al,BYTE PTR [rax]
    eae7:	00 00                	add    BYTE PTR [rax],al
    eae9:	45 0e                	rex.RB (bad) 
    eaeb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eaf1:	03 e7                	add    esp,edi
    eaf3:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    eaf6:	08 00                	or     BYTE PTR [rax],al
    eaf8:	1c 00                	sbb    al,0x0
    eafa:	00 00                	add    BYTE PTR [rax],al
    eafc:	24 06                	and    al,0x6
    eafe:	00 00                	add    BYTE PTR [rax],al
    eb00:	a3 81 ff ff 51 04 00 	movabs ds:0x451ffff81,eax
    eb07:	00 00 
    eb09:	45 0e                	rex.RB (bad) 
    eb0b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb11:	4a 8c 03             	rex.WX mov WORD PTR [rbx],es
    eb14:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
    eb18:	18 00                	sbb    BYTE PTR [rax],al
    eb1a:	00 00                	add    BYTE PTR [rax],al
    eb1c:	44 06                	rex.R (bad) 
    eb1e:	00 00                	add    BYTE PTR [rax],al
    eb20:	d4                   	(bad)  
    eb21:	85 ff                	test   edi,edi
    eb23:	ff 2a                	jmp    FWORD PTR [rdx]
    eb25:	00 00                	add    BYTE PTR [rax],al
    eb27:	00 00                	add    BYTE PTR [rax],al
    eb29:	45 0e                	rex.RB (bad) 
    eb2b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb31:	00 00                	add    BYTE PTR [rax],al
    eb33:	00 20                	add    BYTE PTR [rax],ah
    eb35:	00 00                	add    BYTE PTR [rax],al
    eb37:	00 60 06             	add    BYTE PTR [rax+0x6],ah
    eb3a:	00 00                	add    BYTE PTR [rax],al
    eb3c:	e2 85                	loop   eac3 <__GNU_EH_FRAME_HDR+0x9b3>
    eb3e:	ff                   	(bad)  
    eb3f:	ff b2 01 00 00 00    	push   QWORD PTR [rdx+0x1]
    eb45:	45 0e                	rex.RB (bad) 
    eb47:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb4d:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    eb51:	a1 01 0c 07 08 00 00 	movabs eax,ds:0x1c000008070c01
    eb58:	1c 00 
    eb5a:	00 00                	add    BYTE PTR [rax],al
    eb5c:	84 06                	test   BYTE PTR [rsi],al
    eb5e:	00 00                	add    BYTE PTR [rax],al
    eb60:	70 87                	jo     eae9 <__GNU_EH_FRAME_HDR+0x9d9>
    eb62:	ff                   	(bad)  
    eb63:	ff 17                	call   QWORD PTR [rdi]
    eb65:	00 00                	add    BYTE PTR [rax],al
    eb67:	00 00                	add    BYTE PTR [rax],al
    eb69:	45 0e                	rex.RB (bad) 
    eb6b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb71:	4e 0c 07             	rex.WRX or al,0x7
    eb74:	08 00                	or     BYTE PTR [rax],al
    eb76:	00 00                	add    BYTE PTR [rax],al
    eb78:	1c 00                	sbb    al,0x0
    eb7a:	00 00                	add    BYTE PTR [rax],al
    eb7c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    eb7d:	06                   	(bad)  
    eb7e:	00 00                	add    BYTE PTR [rax],al
    eb80:	67 87 ff             	addr32 xchg edi,edi
    eb83:	ff 4f 00             	dec    DWORD PTR [rdi+0x0]
    eb86:	00 00                	add    BYTE PTR [rax],al
    eb88:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eb8b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb91:	02 46 0c             	add    al,BYTE PTR [rsi+0xc]
    eb94:	07                   	(bad)  
    eb95:	08 00                	or     BYTE PTR [rax],al
    eb97:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eb9a:	00 00                	add    BYTE PTR [rax],al
    eb9c:	c4                   	(bad)  
    eb9d:	06                   	(bad)  
    eb9e:	00 00                	add    BYTE PTR [rax],al
    eba0:	96                   	xchg   esi,eax
    eba1:	87 ff                	xchg   edi,edi
    eba3:	ff 4d 00             	dec    DWORD PTR [rbp+0x0]
    eba6:	00 00                	add    BYTE PTR [rax],al
    eba8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ebab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ebb1:	02 44 0c 07          	add    al,BYTE PTR [rsp+rcx*1+0x7]
    ebb5:	08 00                	or     BYTE PTR [rax],al
    ebb7:	00 18                	add    BYTE PTR [rax],bl
    ebb9:	00 00                	add    BYTE PTR [rax],al
    ebbb:	00 e4                	add    ah,ah
    ebbd:	06                   	(bad)  
    ebbe:	00 00                	add    BYTE PTR [rax],al
    ebc0:	c3                   	ret    
    ebc1:	87 ff                	xchg   edi,edi
    ebc3:	ff 77 01             	push   QWORD PTR [rdi+0x1]
    ebc6:	00 00                	add    BYTE PTR [rax],al
    ebc8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ebcb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ebd1:	00 00                	add    BYTE PTR [rax],al
    ebd3:	00 20                	add    BYTE PTR [rax],ah
    ebd5:	00 00                	add    BYTE PTR [rax],al
    ebd7:	00 00                	add    BYTE PTR [rax],al
    ebd9:	07                   	(bad)  
    ebda:	00 00                	add    BYTE PTR [rax],al
    ebdc:	1e                   	(bad)  
    ebdd:	89 ff                	mov    edi,edi
    ebdf:	ff 9c 00 00 00 00 45 	call   FWORD PTR [rax+rax*1+0x45000000]
    ebe6:	0e                   	(bad)  
    ebe7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ebed:	02 93 0c 07 08 00    	add    dl,BYTE PTR [rbx+0x8070c]
    ebf3:	00 00                	add    BYTE PTR [rax],al
    ebf5:	00 00                	add    BYTE PTR [rax],al
    ebf7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ebfa:	00 00                	add    BYTE PTR [rax],al
    ebfc:	24 07                	and    al,0x7
    ebfe:	00 00                	add    BYTE PTR [rax],al
    ec00:	96                   	xchg   esi,eax
    ec01:	89 ff                	mov    edi,edi
    ec03:	ff                   	(bad)  
    ec04:	ee                   	out    dx,al
    ec05:	01 00                	add    DWORD PTR [rax],eax
    ec07:	00 00                	add    BYTE PTR [rax],al
    ec09:	45 0e                	rex.RB (bad) 
    ec0b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec11:	03 e5                	add    esp,ebp
    ec13:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ec16:	08 00                	or     BYTE PTR [rax],al
    ec18:	1c 00                	sbb    al,0x0
    ec1a:	00 00                	add    BYTE PTR [rax],al
    ec1c:	44 07                	rex.R (bad) 
    ec1e:	00 00                	add    BYTE PTR [rax],al
    ec20:	64 8b ff             	fs mov edi,edi
    ec23:	ff                   	(bad)  
    ec24:	e8 01 00 00 00       	call   ec2a <__GNU_EH_FRAME_HDR+0xb1a>
    ec29:	45 0e                	rex.RB (bad) 
    ec2b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec31:	03 df                	add    ebx,edi
    ec33:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ec36:	08 00                	or     BYTE PTR [rax],al
    ec38:	1c 00                	sbb    al,0x0
    ec3a:	00 00                	add    BYTE PTR [rax],al
    ec3c:	64 07                	fs (bad) 
    ec3e:	00 00                	add    BYTE PTR [rax],al
    ec40:	2c 8d                	sub    al,0x8d
    ec42:	ff                   	(bad)  
    ec43:	ff 6c 00 00          	jmp    FWORD PTR [rax+rax*1+0x0]
    ec47:	00 00                	add    BYTE PTR [rax],al
    ec49:	45 0e                	rex.RB (bad) 
    ec4b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec51:	02 63 0c             	add    ah,BYTE PTR [rbx+0xc]
    ec54:	07                   	(bad)  
    ec55:	08 00                	or     BYTE PTR [rax],al
    ec57:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ec5a:	00 00                	add    BYTE PTR [rax],al
    ec5c:	84 07                	test   BYTE PTR [rdi],al
    ec5e:	00 00                	add    BYTE PTR [rax],al
    ec60:	78 8d                	js     ebef <__GNU_EH_FRAME_HDR+0xadf>
    ec62:	ff                   	(bad)  
    ec63:	ff 72 00             	push   QWORD PTR [rdx+0x0]
    ec66:	00 00                	add    BYTE PTR [rax],al
    ec68:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ec6b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec71:	02 69 0c             	add    ch,BYTE PTR [rcx+0xc]
    ec74:	07                   	(bad)  
    ec75:	08 00                	or     BYTE PTR [rax],al
    ec77:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ec7a:	00 00                	add    BYTE PTR [rax],al
    ec7c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    ec7d:	07                   	(bad)  
    ec7e:	00 00                	add    BYTE PTR [rax],al
    ec80:	ca 8d ff             	retf   0xff8d
    ec83:	ff 11                	call   QWORD PTR [rcx]
    ec85:	01 00                	add    DWORD PTR [rax],eax
    ec87:	00 00                	add    BYTE PTR [rax],al
    ec89:	45 0e                	rex.RB (bad) 
    ec8b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec91:	03 08                	add    ecx,DWORD PTR [rax]
    ec93:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ec96:	08 00                	or     BYTE PTR [rax],al
    ec98:	1c 00                	sbb    al,0x0
    ec9a:	00 00                	add    BYTE PTR [rax],al
    ec9c:	c4                   	(bad)  
    ec9d:	07                   	(bad)  
    ec9e:	00 00                	add    BYTE PTR [rax],al
    eca0:	bb 8e ff ff 5c       	mov    ebx,0x5cffff8e
    eca5:	00 00                	add    BYTE PTR [rax],al
    eca7:	00 00                	add    BYTE PTR [rax],al
    eca9:	45 0e                	rex.RB (bad) 
    ecab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ecb1:	02 53 0c             	add    dl,BYTE PTR [rbx+0xc]
    ecb4:	07                   	(bad)  
    ecb5:	08 00                	or     BYTE PTR [rax],al
    ecb7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ecba:	00 00                	add    BYTE PTR [rax],al
    ecbc:	e4 07                	in     al,0x7
    ecbe:	00 00                	add    BYTE PTR [rax],al
    ecc0:	f7 8e ff ff 3e 00 00 	test   DWORD PTR [rsi+0x3effff],0x45000000
    ecc7:	00 00 45 
    ecca:	0e                   	(bad)  
    eccb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ecd1:	75 0c                	jne    ecdf <__GNU_EH_FRAME_HDR+0xbcf>
    ecd3:	07                   	(bad)  
    ecd4:	08 00                	or     BYTE PTR [rax],al
    ecd6:	00 00                	add    BYTE PTR [rax],al
    ecd8:	1c 00                	sbb    al,0x0
    ecda:	00 00                	add    BYTE PTR [rax],al
    ecdc:	04 08                	add    al,0x8
    ecde:	00 00                	add    BYTE PTR [rax],al
    ece0:	15 8f ff ff 86       	adc    eax,0x86ffff8f
    ece5:	00 00                	add    BYTE PTR [rax],al
    ece7:	00 00                	add    BYTE PTR [rax],al
    ece9:	45 0e                	rex.RB (bad) 
    eceb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ecf1:	02 7d 0c             	add    bh,BYTE PTR [rbp+0xc]
    ecf4:	07                   	(bad)  
    ecf5:	08 00                	or     BYTE PTR [rax],al
    ecf7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ecfa:	00 00                	add    BYTE PTR [rax],al
    ecfc:	24 08                	and    al,0x8
    ecfe:	00 00                	add    BYTE PTR [rax],al
    ed00:	7b 8f                	jnp    ec91 <__GNU_EH_FRAME_HDR+0xb81>
    ed02:	ff                   	(bad)  
    ed03:	ff                   	(bad)  
    ed04:	df 00                	fild   WORD PTR [rax]
    ed06:	00 00                	add    BYTE PTR [rax],al
    ed08:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ed0b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed11:	02 d6                	add    dl,dh
    ed13:	0c 07                	or     al,0x7
    ed15:	08 00                	or     BYTE PTR [rax],al
    ed17:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ed1a:	00 00                	add    BYTE PTR [rax],al
    ed1c:	44 08 00             	or     BYTE PTR [rax],r8b
    ed1f:	00 3a                	add    BYTE PTR [rdx],bh
    ed21:	90                   	nop
    ed22:	ff                   	(bad)  
    ed23:	ff 74 00 00          	push   QWORD PTR [rax+rax*1+0x0]
    ed27:	00 00                	add    BYTE PTR [rax],al
    ed29:	45 0e                	rex.RB (bad) 
    ed2b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed31:	02 6b 0c             	add    ch,BYTE PTR [rbx+0xc]
    ed34:	07                   	(bad)  
    ed35:	08 00                	or     BYTE PTR [rax],al
    ed37:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ed3a:	00 00                	add    BYTE PTR [rax],al
    ed3c:	64 08 00             	or     BYTE PTR fs:[rax],al
    ed3f:	00 8e 90 ff ff 9c    	add    BYTE PTR [rsi-0x63000070],cl
    ed45:	00 00                	add    BYTE PTR [rax],al
    ed47:	00 00                	add    BYTE PTR [rax],al
    ed49:	45 0e                	rex.RB (bad) 
    ed4b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed51:	02 93 0c 07 08 00    	add    dl,BYTE PTR [rbx+0x8070c]
    ed57:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ed5a:	00 00                	add    BYTE PTR [rax],al
    ed5c:	84 08                	test   BYTE PTR [rax],cl
    ed5e:	00 00                	add    BYTE PTR [rax],al
    ed60:	0a 91 ff ff 29 00    	or     dl,BYTE PTR [rcx+0x29ffff]
    ed66:	00 00                	add    BYTE PTR [rax],al
    ed68:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ed6b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed71:	60                   	(bad)  
    ed72:	0c 07                	or     al,0x7
    ed74:	08 00                	or     BYTE PTR [rax],al
    ed76:	00 00                	add    BYTE PTR [rax],al
    ed78:	1c 00                	sbb    al,0x0
    ed7a:	00 00                	add    BYTE PTR [rax],al
    ed7c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    ed7d:	08 00                	or     BYTE PTR [rax],al
    ed7f:	00 13                	add    BYTE PTR [rbx],dl
    ed81:	91                   	xchg   ecx,eax
    ed82:	ff                   	(bad)  
    ed83:	ff 29                	jmp    FWORD PTR [rcx]
    ed85:	00 00                	add    BYTE PTR [rax],al
    ed87:	00 00                	add    BYTE PTR [rax],al
    ed89:	45 0e                	rex.RB (bad) 
    ed8b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed91:	60                   	(bad)  
    ed92:	0c 07                	or     al,0x7
    ed94:	08 00                	or     BYTE PTR [rax],al
    ed96:	00 00                	add    BYTE PTR [rax],al
    ed98:	24 00                	and    al,0x0
    ed9a:	00 00                	add    BYTE PTR [rax],al
    ed9c:	c4                   	(bad)  
    ed9d:	08 00                	or     BYTE PTR [rax],al
    ed9f:	00 1c 91             	add    BYTE PTR [rcx+rdx*4],bl
    eda2:	ff                   	(bad)  
    eda3:	ff 53 01             	call   QWORD PTR [rbx+0x1]
    eda6:	00 00                	add    BYTE PTR [rax],al
    eda8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    edab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    edb1:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    edb5:	45 01 0c 07          	add    DWORD PTR [r15+rax*1],r9d
    edb9:	08 00                	or     BYTE PTR [rax],al
    edbb:	00 00                	add    BYTE PTR [rax],al
    edbd:	00 00                	add    BYTE PTR [rax],al
    edbf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    edc2:	00 00                	add    BYTE PTR [rax],al
    edc4:	ec                   	in     al,dx
    edc5:	08 00                	or     BYTE PTR [rax],al
    edc7:	00 47 92             	add    BYTE PTR [rdi-0x6e],al
    edca:	ff                   	(bad)  
    edcb:	ff 13                	call   QWORD PTR [rbx]
    edcd:	01 00                	add    DWORD PTR [rax],eax
    edcf:	00 00                	add    BYTE PTR [rax],al
    edd1:	45 0e                	rex.RB (bad) 
    edd3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    edd9:	03 0a                	add    ecx,DWORD PTR [rdx]
    eddb:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    edde:	08 00                	or     BYTE PTR [rax],al
    ede0:	1c 00                	sbb    al,0x0
    ede2:	00 00                	add    BYTE PTR [rax],al
    ede4:	0c 09                	or     al,0x9
    ede6:	00 00                	add    BYTE PTR [rax],al
    ede8:	3a 93 ff ff f9 00    	cmp    dl,BYTE PTR [rbx+0xf9ffff]
    edee:	00 00                	add    BYTE PTR [rax],al
    edf0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    edf3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    edf9:	02 f0                	add    dh,al
    edfb:	0c 07                	or     al,0x7
    edfd:	08 00                	or     BYTE PTR [rax],al
    edff:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ee02:	00 00                	add    BYTE PTR [rax],al
    ee04:	2c 09                	sub    al,0x9
    ee06:	00 00                	add    BYTE PTR [rax],al
    ee08:	13 94 ff ff a2 00 00 	adc    edx,DWORD PTR [rdi+rdi*8+0xa2ff]
    ee0f:	00 00                	add    BYTE PTR [rax],al
    ee11:	45 0e                	rex.RB (bad) 
    ee13:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee19:	02 99 0c 07 08 00    	add    bl,BYTE PTR [rcx+0x8070c]
    ee1f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ee22:	00 00                	add    BYTE PTR [rax],al
    ee24:	4c 09 00             	or     QWORD PTR [rax],r8
    ee27:	00 95 94 ff ff 1e    	add    BYTE PTR [rbp+0x1effff94],dl
    ee2d:	00 00                	add    BYTE PTR [rax],al
    ee2f:	00 00                	add    BYTE PTR [rax],al
    ee31:	45 0e                	rex.RB (bad) 
    ee33:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee39:	55                   	push   rbp
    ee3a:	0c 07                	or     al,0x7
    ee3c:	08 00                	or     BYTE PTR [rax],al
    ee3e:	00 00                	add    BYTE PTR [rax],al
    ee40:	1c 00                	sbb    al,0x0
    ee42:	00 00                	add    BYTE PTR [rax],al
    ee44:	6c                   	ins    BYTE PTR es:[rdi],dx
    ee45:	09 00                	or     DWORD PTR [rax],eax
    ee47:	00 93 94 ff ff 63    	add    BYTE PTR [rbx+0x63ffff94],dl
    ee4d:	01 00                	add    DWORD PTR [rax],eax
    ee4f:	00 00                	add    BYTE PTR [rax],al
    ee51:	45 0e                	rex.RB (bad) 
    ee53:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee59:	03 5a 01             	add    ebx,DWORD PTR [rdx+0x1]
    ee5c:	0c 07                	or     al,0x7
    ee5e:	08 00                	or     BYTE PTR [rax],al
    ee60:	2c 00                	sub    al,0x0
    ee62:	00 00                	add    BYTE PTR [rax],al
    ee64:	8c 09                	mov    WORD PTR [rcx],cs
    ee66:	00 00                	add    BYTE PTR [rax],al
    ee68:	d6                   	(bad)  
    ee69:	95                   	xchg   ebp,eax
    ee6a:	ff                   	(bad)  
    ee6b:	ff 11                	call   QWORD PTR [rcx]
    ee6d:	02 00                	add    al,BYTE PTR [rax]
    ee6f:	00 00                	add    BYTE PTR [rax],al
    ee71:	45 0e                	rex.RB (bad) 
    ee73:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee79:	50                   	push   rax
    ee7a:	8f 03                	pop    QWORD PTR [rbx]
    ee7c:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
    ee83:	07                   	(bad)  
    ee84:	03 f8                	add    edi,eax
    ee86:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ee89:	08 00                	or     BYTE PTR [rax],al
    ee8b:	00 00                	add    BYTE PTR [rax],al
    ee8d:	00 00                	add    BYTE PTR [rax],al
    ee8f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ee92:	00 00                	add    BYTE PTR [rax],al
    ee94:	bc 09 00 00 b7       	mov    esp,0xb7000009
    ee99:	97                   	xchg   edi,eax
    ee9a:	ff                   	(bad)  
    ee9b:	ff b2 00 00 00 00    	push   QWORD PTR [rdx+0x0]
    eea1:	45 0e                	rex.RB (bad) 
    eea3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eea9:	02 a9 0c 07 08 00    	add    ch,BYTE PTR [rcx+0x8070c]
    eeaf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eeb2:	00 00                	add    BYTE PTR [rax],al
    eeb4:	dc 09                	fmul   QWORD PTR [rcx]
    eeb6:	00 00                	add    BYTE PTR [rax],al
    eeb8:	49 98                	rex.WB cdqe 
    eeba:	ff                   	(bad)  
    eebb:	ff a5 00 00 00 00    	jmp    QWORD PTR [rbp+0x0]
    eec1:	45 0e                	rex.RB (bad) 
    eec3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eec9:	02 9c 0c 07 08 00 00 	add    bl,BYTE PTR [rsp+rcx*1+0x807]
    eed0:	24 00                	and    al,0x0
    eed2:	00 00                	add    BYTE PTR [rax],al
    eed4:	fc                   	cld    
    eed5:	09 00                	or     DWORD PTR [rax],eax
    eed7:	00 ce                	add    dh,cl
    eed9:	98                   	cwde   
    eeda:	ff                   	(bad)  
    eedb:	ff 94 00 00 00 00 45 	call   QWORD PTR [rax+rax*1+0x45000000]
    eee2:	0e                   	(bad)  
    eee3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eee9:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    eeed:	86 0c 07             	xchg   BYTE PTR [rdi+rax*1],cl
    eef0:	08 00                	or     BYTE PTR [rax],al
    eef2:	00 00                	add    BYTE PTR [rax],al
    eef4:	00 00                	add    BYTE PTR [rax],al
    eef6:	00 00                	add    BYTE PTR [rax],al
    eef8:	1c 00                	sbb    al,0x0
    eefa:	00 00                	add    BYTE PTR [rax],al
    eefc:	24 0a                	and    al,0xa
    eefe:	00 00                	add    BYTE PTR [rax],al
    ef00:	3a 99 ff ff d5 00    	cmp    bl,BYTE PTR [rcx+0xd5ffff]
    ef06:	00 00                	add    BYTE PTR [rax],al
    ef08:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ef0b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef11:	02 cc                	add    cl,ah
    ef13:	0c 07                	or     al,0x7
    ef15:	08 00                	or     BYTE PTR [rax],al
    ef17:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef1a:	00 00                	add    BYTE PTR [rax],al
    ef1c:	44 0a 00             	or     r8b,BYTE PTR [rax]
    ef1f:	00 ef                	add    bh,ch
    ef21:	99                   	cdq    
    ef22:	ff                   	(bad)  
    ef23:	ff                   	(bad)  
    ef24:	df 00                	fild   WORD PTR [rax]
    ef26:	00 00                	add    BYTE PTR [rax],al
    ef28:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ef2b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef31:	02 d6                	add    dl,dh
    ef33:	0c 07                	or     al,0x7
    ef35:	08 00                	or     BYTE PTR [rax],al
    ef37:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef3a:	00 00                	add    BYTE PTR [rax],al
    ef3c:	64 0a 00             	or     al,BYTE PTR fs:[rax]
    ef3f:	00 ae 9a ff ff 7d    	add    BYTE PTR [rsi+0x7dffff9a],ch
    ef45:	00 00                	add    BYTE PTR [rax],al
    ef47:	00 00                	add    BYTE PTR [rax],al
    ef49:	45 0e                	rex.RB (bad) 
    ef4b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef51:	02 74 0c 07          	add    dh,BYTE PTR [rsp+rcx*1+0x7]
    ef55:	08 00                	or     BYTE PTR [rax],al
    ef57:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef5a:	00 00                	add    BYTE PTR [rax],al
    ef5c:	84 0a                	test   BYTE PTR [rdx],cl
    ef5e:	00 00                	add    BYTE PTR [rax],al
    ef60:	0b 9b ff ff 36 01    	or     ebx,DWORD PTR [rbx+0x136ffff]
    ef66:	00 00                	add    BYTE PTR [rax],al
    ef68:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ef6b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef71:	03 2d 01 0c 07 08    	add    ebp,DWORD PTR [rip+0x8070c01]        # 807fb78 <_end+0x7f42b38>
    ef77:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef7a:	00 00                	add    BYTE PTR [rax],al
    ef7c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    ef7d:	0a 00                	or     al,BYTE PTR [rax]
    ef7f:	00 21                	add    BYTE PTR [rcx],ah
    ef81:	9c                   	pushf  
    ef82:	ff                   	(bad)  
    ef83:	ff                   	(bad)  
    ef84:	7e 00                	jle    ef86 <__GNU_EH_FRAME_HDR+0xe76>
    ef86:	00 00                	add    BYTE PTR [rax],al
    ef88:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ef8b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef91:	02 75 0c             	add    dh,BYTE PTR [rbp+0xc]
    ef94:	07                   	(bad)  
    ef95:	08 00                	or     BYTE PTR [rax],al
    ef97:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef9a:	00 00                	add    BYTE PTR [rax],al
    ef9c:	c4                   	(bad)  
    ef9d:	0a 00                	or     al,BYTE PTR [rax]
    ef9f:	00 7f 9c             	add    BYTE PTR [rdi-0x64],bh
    efa2:	ff                   	(bad)  
    efa3:	ff                   	(bad)  
    efa4:	39 02                	cmp    DWORD PTR [rdx],eax
    efa6:	00 00                	add    BYTE PTR [rax],al
    efa8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    efab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    efb1:	03 30                	add    esi,DWORD PTR [rax]
    efb3:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    efb6:	08 00                	or     BYTE PTR [rax],al
    efb8:	1c 00                	sbb    al,0x0
    efba:	00 00                	add    BYTE PTR [rax],al
    efbc:	e4 0a                	in     al,0xa
    efbe:	00 00                	add    BYTE PTR [rax],al
    efc0:	98                   	cwde   
    efc1:	9e                   	sahf   
    efc2:	ff                   	(bad)  
    efc3:	ff c9                	dec    ecx
    efc5:	00 00                	add    BYTE PTR [rax],al
    efc7:	00 00                	add    BYTE PTR [rax],al
    efc9:	45 0e                	rex.RB (bad) 
    efcb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    efd1:	02 c0                	add    al,al
    efd3:	0c 07                	or     al,0x7
    efd5:	08 00                	or     BYTE PTR [rax],al
    efd7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    efda:	00 00                	add    BYTE PTR [rax],al
    efdc:	04 0b                	add    al,0xb
    efde:	00 00                	add    BYTE PTR [rax],al
    efe0:	41 9f                	rex.B lahf 
    efe2:	ff                   	(bad)  
    efe3:	ff a1 01 00 00 00    	jmp    QWORD PTR [rcx+0x1]
    efe9:	45 0e                	rex.RB (bad) 
    efeb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eff1:	03 98 01 0c 07 08    	add    ebx,DWORD PTR [rax+0x8070c01]
    eff7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    effa:	00 00                	add    BYTE PTR [rax],al
    effc:	24 0b                	and    al,0xb
    effe:	00 00                	add    BYTE PTR [rax],al
    f000:	c2 a0 ff             	ret    0xffa0
    f003:	ff 13                	call   QWORD PTR [rbx]
    f005:	01 00                	add    DWORD PTR [rax],eax
    f007:	00 00                	add    BYTE PTR [rax],al
    f009:	45 0e                	rex.RB (bad) 
    f00b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f011:	03 0a                	add    ecx,DWORD PTR [rdx]
    f013:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f016:	08 00                	or     BYTE PTR [rax],al
    f018:	1c 00                	sbb    al,0x0
    f01a:	00 00                	add    BYTE PTR [rax],al
    f01c:	44 0b 00             	or     r8d,DWORD PTR [rax]
    f01f:	00 b5 a1 ff ff 66    	add    BYTE PTR [rbp+0x66ffffa1],dh
    f025:	00 00                	add    BYTE PTR [rax],al
    f027:	00 00                	add    BYTE PTR [rax],al
    f029:	45 0e                	rex.RB (bad) 
    f02b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f031:	02 5d 0c             	add    bl,BYTE PTR [rbp+0xc]
    f034:	07                   	(bad)  
    f035:	08 00                	or     BYTE PTR [rax],al
    f037:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f03a:	00 00                	add    BYTE PTR [rax],al
    f03c:	64 0b 00             	or     eax,DWORD PTR fs:[rax]
    f03f:	00 fb                	add    bl,bh
    f041:	a1 ff ff 75 00 00 00 	movabs eax,ds:0x450000000075ffff
    f048:	00 45 
    f04a:	0e                   	(bad)  
    f04b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f051:	02 6c 0c 07          	add    ch,BYTE PTR [rsp+rcx*1+0x7]
    f055:	08 00                	or     BYTE PTR [rax],al
    f057:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f05a:	00 00                	add    BYTE PTR [rax],al
    f05c:	84 0b                	test   BYTE PTR [rbx],cl
    f05e:	00 00                	add    BYTE PTR [rax],al
    f060:	50                   	push   rax
    f061:	a2 ff ff db 00 00 00 	movabs ds:0x4500000000dbffff,al
    f068:	00 45 
    f06a:	0e                   	(bad)  
    f06b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f071:	02 d2                	add    dl,dl
    f073:	0c 07                	or     al,0x7
    f075:	08 00                	or     BYTE PTR [rax],al
    f077:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f07a:	00 00                	add    BYTE PTR [rax],al
    f07c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    f07d:	0b 00                	or     eax,DWORD PTR [rax]
    f07f:	00 0b                	add    BYTE PTR [rbx],cl
    f081:	a3 ff ff 72 01 00 00 	movabs ds:0x450000000172ffff,eax
    f088:	00 45 
    f08a:	0e                   	(bad)  
    f08b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f091:	03 69 01             	add    ebp,DWORD PTR [rcx+0x1]
    f094:	0c 07                	or     al,0x7
    f096:	08 00                	or     BYTE PTR [rax],al
    f098:	1c 00                	sbb    al,0x0
    f09a:	00 00                	add    BYTE PTR [rax],al
    f09c:	c4                   	(bad)  
    f09d:	0b 00                	or     eax,DWORD PTR [rax]
    f09f:	00 5d a4             	add    BYTE PTR [rbp-0x5c],bl
    f0a2:	ff                   	(bad)  
    f0a3:	ff 6c 00 00          	jmp    FWORD PTR [rax+rax*1+0x0]
    f0a7:	00 00                	add    BYTE PTR [rax],al
    f0a9:	45 0e                	rex.RB (bad) 
    f0ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f0b1:	02 63 0c             	add    ah,BYTE PTR [rbx+0xc]
    f0b4:	07                   	(bad)  
    f0b5:	08 00                	or     BYTE PTR [rax],al
    f0b7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f0ba:	00 00                	add    BYTE PTR [rax],al
    f0bc:	e4 0b                	in     al,0xb
    f0be:	00 00                	add    BYTE PTR [rax],al
    f0c0:	a9 a4 ff ff 80       	test   eax,0x80ffffa4
    f0c5:	00 00                	add    BYTE PTR [rax],al
    f0c7:	00 00                	add    BYTE PTR [rax],al
    f0c9:	45 0e                	rex.RB (bad) 
    f0cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f0d1:	02 77 0c             	add    dh,BYTE PTR [rdi+0xc]
    f0d4:	07                   	(bad)  
    f0d5:	08 00                	or     BYTE PTR [rax],al
    f0d7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f0da:	00 00                	add    BYTE PTR [rax],al
    f0dc:	04 0c                	add    al,0xc
    f0de:	00 00                	add    BYTE PTR [rax],al
    f0e0:	09 a5 ff ff 16 00    	or     DWORD PTR [rbp+0x16ffff],esp
    f0e6:	00 00                	add    BYTE PTR [rax],al
    f0e8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f0eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f0f1:	4d 0c 07             	rex.WRB or al,0x7
    f0f4:	08 00                	or     BYTE PTR [rax],al
    f0f6:	00 00                	add    BYTE PTR [rax],al
    f0f8:	20 00                	and    BYTE PTR [rax],al
    f0fa:	00 00                	add    BYTE PTR [rax],al
    f0fc:	24 0c                	and    al,0xc
    f0fe:	00 00                	add    BYTE PTR [rax],al
    f100:	ff a4 ff ff 3a 01 00 	jmp    QWORD PTR [rdi+rdi*8+0x13aff]
    f107:	00 00                	add    BYTE PTR [rax],al
    f109:	45 0e                	rex.RB (bad) 
    f10b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f111:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    f115:	2c 01                	sub    al,0x1
    f117:	0c 07                	or     al,0x7
    f119:	08 00                	or     BYTE PTR [rax],al
    f11b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f11e:	00 00                	add    BYTE PTR [rax],al
    f120:	48 0c 00             	rex.W or al,0x0
    f123:	00 15 a6 ff ff 64    	add    BYTE PTR [rip+0x64ffffa6],dl        # 6500f0cf <_end+0x64ed208f>
    f129:	00 00                	add    BYTE PTR [rax],al
    f12b:	00 00                	add    BYTE PTR [rax],al
    f12d:	45 0e                	rex.RB (bad) 
    f12f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f135:	02 5b 0c             	add    bl,BYTE PTR [rbx+0xc]
    f138:	07                   	(bad)  
    f139:	08 00                	or     BYTE PTR [rax],al
    f13b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f13e:	00 00                	add    BYTE PTR [rax],al
    f140:	68 0c 00 00 59       	push   0x5900000c
    f145:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    f146:	ff                   	(bad)  
    f147:	ff 53 00             	call   QWORD PTR [rbx+0x0]
    f14a:	00 00                	add    BYTE PTR [rax],al
    f14c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f14f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f155:	02 4a 0c             	add    cl,BYTE PTR [rdx+0xc]
    f158:	07                   	(bad)  
    f159:	08 00                	or     BYTE PTR [rax],al
    f15b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f15e:	00 00                	add    BYTE PTR [rax],al
    f160:	88 0c 00             	mov    BYTE PTR [rax+rax*1],cl
    f163:	00 8c a6 ff ff b1 00 	add    BYTE PTR [rsi+riz*4+0xb1ffff],cl
    f16a:	00 00                	add    BYTE PTR [rax],al
    f16c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f16f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f175:	02 a8 0c 07 08 00    	add    ch,BYTE PTR [rax+0x8070c]
    f17b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f17e:	00 00                	add    BYTE PTR [rax],al
    f180:	a8 0c                	test   al,0xc
    f182:	00 00                	add    BYTE PTR [rax],al
    f184:	1d a7 ff ff cb       	sbb    eax,0xcbffffa7
    f189:	00 00                	add    BYTE PTR [rax],al
    f18b:	00 00                	add    BYTE PTR [rax],al
    f18d:	45 0e                	rex.RB (bad) 
    f18f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f195:	02 c2                	add    al,dl
    f197:	0c 07                	or     al,0x7
    f199:	08 00                	or     BYTE PTR [rax],al
    f19b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f19e:	00 00                	add    BYTE PTR [rax],al
    f1a0:	c8 0c 00 00          	enter  0xc,0x0
    f1a4:	c8 a7 ff ff          	enter  0xffa7,0xff
    f1a8:	55                   	push   rbp
    f1a9:	00 00                	add    BYTE PTR [rax],al
    f1ab:	00 00                	add    BYTE PTR [rax],al
    f1ad:	45 0e                	rex.RB (bad) 
    f1af:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f1b5:	02 4c 0c 07          	add    cl,BYTE PTR [rsp+rcx*1+0x7]
    f1b9:	08 00                	or     BYTE PTR [rax],al
    f1bb:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f1be:	00 00                	add    BYTE PTR [rax],al
    f1c0:	e8 0c 00 00 fd       	call   fffffffffd00f1d1 <_end+0xfffffffffced2191>
    f1c5:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    f1c6:	ff                   	(bad)  
    f1c7:	ff 30                	push   QWORD PTR [rax]
    f1c9:	00 00                	add    BYTE PTR [rax],al
    f1cb:	00 00                	add    BYTE PTR [rax],al
    f1cd:	45 0e                	rex.RB (bad) 
    f1cf:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f1d5:	67 0c 07             	addr32 or al,0x7
    f1d8:	08 00                	or     BYTE PTR [rax],al
    f1da:	00 00                	add    BYTE PTR [rax],al
    f1dc:	1c 00                	sbb    al,0x0
    f1de:	00 00                	add    BYTE PTR [rax],al
    f1e0:	08 0d 00 00 0d a8    	or     BYTE PTR [rip+0xffffffffa80d0000],cl        # ffffffffa80df1e6 <_end+0xffffffffa7fa21a6>
    f1e6:	ff                   	(bad)  
    f1e7:	ff 67 00             	jmp    QWORD PTR [rdi+0x0]
    f1ea:	00 00                	add    BYTE PTR [rax],al
    f1ec:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f1ef:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f1f5:	02 5e 0c             	add    bl,BYTE PTR [rsi+0xc]
    f1f8:	07                   	(bad)  
    f1f9:	08 00                	or     BYTE PTR [rax],al
    f1fb:	00 20                	add    BYTE PTR [rax],ah
    f1fd:	00 00                	add    BYTE PTR [rax],al
    f1ff:	00 28                	add    BYTE PTR [rax],ch
    f201:	0d 00 00 54 a8       	or     eax,0xa8540000
    f206:	ff                   	(bad)  
    f207:	ff                   	(bad)  
    f208:	38 0f                	cmp    BYTE PTR [rdi],cl
    f20a:	00 00                	add    BYTE PTR [rax],al
    f20c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f20f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f215:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    f219:	27                   	(bad)  
    f21a:	0f 0c                	(bad)  
    f21c:	07                   	(bad)  
    f21d:	08 00                	or     BYTE PTR [rax],al
    f21f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f222:	00 00                	add    BYTE PTR [rax],al
    f224:	4c 0d 00 00 68 b7    	rex.WR or rax,0xffffffffb7680000
    f22a:	ff                   	(bad)  
    f22b:	ff 46 00             	inc    DWORD PTR [rsi+0x0]
    f22e:	00 00                	add    BYTE PTR [rax],al
    f230:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f233:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f239:	7d 0c                	jge    f247 <__GNU_EH_FRAME_HDR+0x1137>
    f23b:	07                   	(bad)  
    f23c:	08 00                	or     BYTE PTR [rax],al
    f23e:	00 00                	add    BYTE PTR [rax],al
    f240:	24 00                	and    al,0x0
    f242:	00 00                	add    BYTE PTR [rax],al
    f244:	6c                   	ins    BYTE PTR es:[rdi],dx
    f245:	0d 00 00 8e b7       	or     eax,0xb78e0000
    f24a:	ff                   	(bad)  
    f24b:	ff                   	(bad)  
    f24c:	3b 02                	cmp    eax,DWORD PTR [rdx]
    f24e:	00 00                	add    BYTE PTR [rax],al
    f250:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f253:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f259:	4b 8f 03             	rex.WXB pop QWORD PTR [r11]
    f25c:	8e 04 8c             	mov    es,WORD PTR [rsp+rcx*4]
    f25f:	05 83 06 03 27       	add    eax,0x27030683
    f264:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    f267:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
    f26a:	00 00                	add    BYTE PTR [rax],al
    f26c:	94                   	xchg   esp,eax
    f26d:	0d 00 00 a1 b9       	or     eax,0xb9a10000
    f272:	ff                   	(bad)  
    f273:	ff a5 01 00 00 00    	jmp    QWORD PTR [rbp+0x1]
    f279:	45 0e                	rex.RB (bad) 
    f27b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f281:	03 9c 01 0c 07 08 00 	add    ebx,DWORD PTR [rcx+rax*1+0x8070c]
    f288:	1c 00                	sbb    al,0x0
    f28a:	00 00                	add    BYTE PTR [rax],al
    f28c:	b4 0d                	mov    ah,0xd
    f28e:	00 00                	add    BYTE PTR [rax],al
    f290:	26 bb ff ff 12 01    	es mov ebx,0x112ffff
    f296:	00 00                	add    BYTE PTR [rax],al
    f298:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f29b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f2a1:	03 09                	add    ecx,DWORD PTR [rcx]
    f2a3:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f2a6:	08 00                	or     BYTE PTR [rax],al
    f2a8:	24 00                	and    al,0x0
    f2aa:	00 00                	add    BYTE PTR [rax],al
    f2ac:	d4                   	(bad)  
    f2ad:	0d 00 00 18 bc       	or     eax,0xbc180000
    f2b2:	ff                   	(bad)  
    f2b3:	ff                   	(bad)  
    f2b4:	bc 00 00 00 00       	mov    esp,0x0
    f2b9:	45 0e                	rex.RB (bad) 
    f2bb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f2c1:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    f2c5:	ae                   	scas   al,BYTE PTR es:[rdi]
    f2c6:	0c 07                	or     al,0x7
    f2c8:	08 00                	or     BYTE PTR [rax],al
    f2ca:	00 00                	add    BYTE PTR [rax],al
    f2cc:	00 00                	add    BYTE PTR [rax],al
    f2ce:	00 00                	add    BYTE PTR [rax],al
    f2d0:	24 00                	and    al,0x0
    f2d2:	00 00                	add    BYTE PTR [rax],al
    f2d4:	fc                   	cld    
    f2d5:	0d 00 00 ac bc       	or     eax,0xbcac0000
    f2da:	ff                   	(bad)  
    f2db:	ff 9b 01 00 00 00    	call   FWORD PTR [rbx+0x1]
    f2e1:	45 0e                	rex.RB (bad) 
    f2e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f2e9:	47 8c 03             	rex.RXB mov WORD PTR [r11],es
    f2ec:	83 04 03 8b          	add    DWORD PTR [rbx+rax*1],0xffffff8b
    f2f0:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f2f3:	08 00                	or     BYTE PTR [rax],al
    f2f5:	00 00                	add    BYTE PTR [rax],al
    f2f7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f2fa:	00 00                	add    BYTE PTR [rax],al
    f2fc:	24 0e                	and    al,0xe
    f2fe:	00 00                	add    BYTE PTR [rax],al
    f300:	1f                   	(bad)  
    f301:	be ff ff a5 00       	mov    esi,0xa5ffff
    f306:	00 00                	add    BYTE PTR [rax],al
    f308:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f30b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f311:	02 9c 0c 07 08 00 00 	add    bl,BYTE PTR [rsp+rcx*1+0x807]
    f318:	1c 00                	sbb    al,0x0
    f31a:	00 00                	add    BYTE PTR [rax],al
    f31c:	44 0e                	rex.R (bad) 
    f31e:	00 00                	add    BYTE PTR [rax],al
    f320:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    f321:	be ff ff 43 01       	mov    esi,0x143ffff
    f326:	00 00                	add    BYTE PTR [rax],al
    f328:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f32b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f331:	03 3a                	add    edi,DWORD PTR [rdx]
    f333:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f336:	08 00                	or     BYTE PTR [rax],al
    f338:	1c 00                	sbb    al,0x0
    f33a:	00 00                	add    BYTE PTR [rax],al
    f33c:	64 0e                	fs (bad) 
    f33e:	00 00                	add    BYTE PTR [rax],al
    f340:	c7                   	(bad)  
    f341:	bf ff ff f3 00       	mov    edi,0xf3ffff
    f346:	00 00                	add    BYTE PTR [rax],al
    f348:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f34b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f351:	02 ea                	add    ch,dl
    f353:	0c 07                	or     al,0x7
    f355:	08 00                	or     BYTE PTR [rax],al
    f357:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f35a:	00 00                	add    BYTE PTR [rax],al
    f35c:	84 0e                	test   BYTE PTR [rsi],cl
    f35e:	00 00                	add    BYTE PTR [rax],al
    f360:	9a                   	(bad)  
    f361:	c0 ff ff             	sar    bh,0xff
    f364:	70 00                	jo     f366 <__GNU_EH_FRAME_HDR+0x1256>
    f366:	00 00                	add    BYTE PTR [rax],al
    f368:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f36b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f371:	02 67 0c             	add    ah,BYTE PTR [rdi+0xc]
    f374:	07                   	(bad)  
    f375:	08 00                	or     BYTE PTR [rax],al
    f377:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f37a:	00 00                	add    BYTE PTR [rax],al
    f37c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    f37d:	0e                   	(bad)  
    f37e:	00 00                	add    BYTE PTR [rax],al
    f380:	ea                   	(bad)  
    f381:	c0 ff ff             	sar    bh,0xff
    f384:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    f385:	02 00                	add    al,BYTE PTR [rax]
    f387:	00 00                	add    BYTE PTR [rax],al
    f389:	45 0e                	rex.RB (bad) 
    f38b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f391:	4a 8c 03             	rex.WX mov WORD PTR [rbx],es
    f394:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
    f398:	1c 00                	sbb    al,0x0
    f39a:	00 00                	add    BYTE PTR [rax],al
    f39c:	c4                   	(bad)  
    f39d:	0e                   	(bad)  
    f39e:	00 00                	add    BYTE PTR [rax],al
    f3a0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    f3a1:	c3                   	ret    
    f3a2:	ff                   	(bad)  
    f3a3:	ff 6a 00             	jmp    FWORD PTR [rdx+0x0]
    f3a6:	00 00                	add    BYTE PTR [rax],al
    f3a8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f3ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f3b1:	02 61 0c             	add    ah,BYTE PTR [rcx+0xc]
    f3b4:	07                   	(bad)  
    f3b5:	08 00                	or     BYTE PTR [rax],al
    f3b7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f3ba:	00 00                	add    BYTE PTR [rax],al
    f3bc:	e4 0e                	in     al,0xe
    f3be:	00 00                	add    BYTE PTR [rax],al
    f3c0:	b9 c3 ff ff 6e       	mov    ecx,0x6effffc3
    f3c5:	00 00                	add    BYTE PTR [rax],al
    f3c7:	00 00                	add    BYTE PTR [rax],al
    f3c9:	45 0e                	rex.RB (bad) 
    f3cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f3d1:	02 65 0c             	add    ah,BYTE PTR [rbp+0xc]
    f3d4:	07                   	(bad)  
    f3d5:	08 00                	or     BYTE PTR [rax],al
    f3d7:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    f3da:	00 00                	add    BYTE PTR [rax],al
    f3dc:	04 0f                	add    al,0xf
    f3de:	00 00                	add    BYTE PTR [rax],al
    f3e0:	07                   	(bad)  
    f3e1:	c4                   	(bad)  
    f3e2:	ff                   	(bad)  
    f3e3:	ff 8d 01 00 00 00    	dec    DWORD PTR [rbp+0x1]
    f3e9:	45 0e                	rex.RB (bad) 
    f3eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f3f1:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    f3f5:	7f 01                	jg     f3f8 <__GNU_EH_FRAME_HDR+0x12e8>
    f3f7:	0c 07                	or     al,0x7
    f3f9:	08 00                	or     BYTE PTR [rax],al
    f3fb:	00 00                	add    BYTE PTR [rax],al
    f3fd:	00 00                	add    BYTE PTR [rax],al
    f3ff:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f402:	00 00                	add    BYTE PTR [rax],al
    f404:	2c 0f                	sub    al,0xf
    f406:	00 00                	add    BYTE PTR [rax],al
    f408:	6c                   	ins    BYTE PTR es:[rdi],dx
    f409:	c5 ff ff             	(bad)  
    f40c:	e7 03                	out    0x3,eax
    f40e:	00 00                	add    BYTE PTR [rax],al
    f410:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f413:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f419:	03 de                	add    ebx,esi
    f41b:	03 0c 07             	add    ecx,DWORD PTR [rdi+rax*1]
    f41e:	08 00                	or     BYTE PTR [rax],al
    f420:	1c 00                	sbb    al,0x0
    f422:	00 00                	add    BYTE PTR [rax],al
    f424:	4c 0f 00 00          	rex.WR sldt WORD PTR [rax]
    f428:	33 c9                	xor    ecx,ecx
    f42a:	ff                   	(bad)  
    f42b:	ff                   	(bad)  
    f42c:	3d 00 00 00 00       	cmp    eax,0x0
    f431:	45 0e                	rex.RB (bad) 
    f433:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f439:	74 0c                	je     f447 <__FRAME_END__+0x7>
    f43b:	07                   	(bad)  
    f43c:	08 00                	or     BYTE PTR [rax],al
	...

000000000000f440 <__FRAME_END__>:
    f440:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .tbss:

0000000000010b58 <buffer.0+0x10ad8>:
	...

Disassembly of section .init_array:

0000000000010b58 <__frame_dummy_init_array_entry>:
   10b58:	00 2a                	add    BYTE PTR [rdx],ch
   10b5a:	00 00                	add    BYTE PTR [rax],al
   10b5c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000010b60 <__do_global_dtors_aux_fini_array_entry>:
   10b60:	c0 29 00             	shr    BYTE PTR [rcx],0x0
   10b63:	00 00                	add    BYTE PTR [rax],al
   10b65:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000010b68 <_DYNAMIC>:
   10b68:	01 00                	add    DWORD PTR [rax],eax
   10b6a:	00 00                	add    BYTE PTR [rax],al
   10b6c:	00 00                	add    BYTE PTR [rax],al
   10b6e:	00 00                	add    BYTE PTR [rax],al
   10b70:	c2 02 00             	ret    0x2
   10b73:	00 00                	add    BYTE PTR [rax],al
   10b75:	00 00                	add    BYTE PTR [rax],al
   10b77:	00 01                	add    BYTE PTR [rcx],al
   10b79:	00 00                	add    BYTE PTR [rax],al
   10b7b:	00 00                	add    BYTE PTR [rax],al
   10b7d:	00 00                	add    BYTE PTR [rax],al
   10b7f:	00 d1                	add    cl,dl
   10b81:	02 00                	add    al,BYTE PTR [rax]
   10b83:	00 00                	add    BYTE PTR [rax],al
   10b85:	00 00                	add    BYTE PTR [rax],al
   10b87:	00 01                	add    BYTE PTR [rcx],al
   10b89:	00 00                	add    BYTE PTR [rax],al
   10b8b:	00 00                	add    BYTE PTR [rax],al
   10b8d:	00 00                	add    BYTE PTR [rax],al
   10b8f:	00 e1                	add    cl,ah
   10b91:	02 00                	add    al,BYTE PTR [rax]
   10b93:	00 00                	add    BYTE PTR [rax],al
   10b95:	00 00                	add    BYTE PTR [rax],al
   10b97:	00 01                	add    BYTE PTR [rcx],al
   10b99:	00 00                	add    BYTE PTR [rax],al
   10b9b:	00 00                	add    BYTE PTR [rax],al
   10b9d:	00 00                	add    BYTE PTR [rax],al
   10b9f:	00 f0                	add    al,dh
   10ba1:	02 00                	add    al,BYTE PTR [rax]
   10ba3:	00 00                	add    BYTE PTR [rax],al
   10ba5:	00 00                	add    BYTE PTR [rax],al
   10ba7:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
   10baa:	00 00                	add    BYTE PTR [rax],al
   10bac:	00 00                	add    BYTE PTR [rax],al
   10bae:	00 00                	add    BYTE PTR [rax],al
   10bb0:	00 20                	add    BYTE PTR [rax],ah
   10bb2:	00 00                	add    BYTE PTR [rax],al
   10bb4:	00 00                	add    BYTE PTR [rax],al
   10bb6:	00 00                	add    BYTE PTR [rax],al
   10bb8:	0d 00 00 00 00       	or     eax,0x0
   10bbd:	00 00                	add    BYTE PTR [rax],al
   10bbf:	00 98 bd 00 00 00    	add    BYTE PTR [rax+0xbd],bl
   10bc5:	00 00                	add    BYTE PTR [rax],al
   10bc7:	00 19                	add    BYTE PTR [rcx],bl
   10bc9:	00 00                	add    BYTE PTR [rax],al
   10bcb:	00 00                	add    BYTE PTR [rax],al
   10bcd:	00 00                	add    BYTE PTR [rax],al
   10bcf:	00 58 0b             	add    BYTE PTR [rax+0xb],bl
   10bd2:	01 00                	add    DWORD PTR [rax],eax
   10bd4:	00 00                	add    BYTE PTR [rax],al
   10bd6:	00 00                	add    BYTE PTR [rax],al
   10bd8:	1b 00                	sbb    eax,DWORD PTR [rax]
   10bda:	00 00                	add    BYTE PTR [rax],al
   10bdc:	00 00                	add    BYTE PTR [rax],al
   10bde:	00 00                	add    BYTE PTR [rax],al
   10be0:	08 00                	or     BYTE PTR [rax],al
   10be2:	00 00                	add    BYTE PTR [rax],al
   10be4:	00 00                	add    BYTE PTR [rax],al
   10be6:	00 00                	add    BYTE PTR [rax],al
   10be8:	1a 00                	sbb    al,BYTE PTR [rax]
   10bea:	00 00                	add    BYTE PTR [rax],al
   10bec:	00 00                	add    BYTE PTR [rax],al
   10bee:	00 00                	add    BYTE PTR [rax],al
   10bf0:	60                   	(bad)  
   10bf1:	0b 01                	or     eax,DWORD PTR [rcx]
   10bf3:	00 00                	add    BYTE PTR [rax],al
   10bf5:	00 00                	add    BYTE PTR [rax],al
   10bf7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   10bfa:	00 00                	add    BYTE PTR [rax],al
   10bfc:	00 00                	add    BYTE PTR [rax],al
   10bfe:	00 00                	add    BYTE PTR [rax],al
   10c00:	08 00                	or     BYTE PTR [rax],al
   10c02:	00 00                	add    BYTE PTR [rax],al
   10c04:	00 00                	add    BYTE PTR [rax],al
   10c06:	00 00                	add    BYTE PTR [rax],al
   10c08:	f5                   	cmc    
   10c09:	fe                   	(bad)  
   10c0a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10c0d:	00 00                	add    BYTE PTR [rax],al
   10c0f:	00 e8                	add    al,ch
   10c11:	03 00                	add    eax,DWORD PTR [rax]
   10c13:	00 00                	add    BYTE PTR [rax],al
   10c15:	00 00                	add    BYTE PTR [rax],al
   10c17:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 10c1d <_DYNAMIC+0xb5>
   10c1d:	00 00                	add    BYTE PTR [rax],al
   10c1f:	00 80 0b 00 00 00    	add    BYTE PTR [rax+0xb],al
   10c25:	00 00                	add    BYTE PTR [rax],al
   10c27:	00 06                	add    BYTE PTR [rsi],al
   10c29:	00 00                	add    BYTE PTR [rax],al
   10c2b:	00 00                	add    BYTE PTR [rax],al
   10c2d:	00 00                	add    BYTE PTR [rax],al
   10c2f:	00 18                	add    BYTE PTR [rax],bl
   10c31:	04 00                	add    al,0x0
   10c33:	00 00                	add    BYTE PTR [rax],al
   10c35:	00 00                	add    BYTE PTR [rax],al
   10c37:	00 0a                	add    BYTE PTR [rdx],cl
   10c39:	00 00                	add    BYTE PTR [rax],al
   10c3b:	00 00                	add    BYTE PTR [rax],al
   10c3d:	00 00                	add    BYTE PTR [rax],al
   10c3f:	00 2f                	add    BYTE PTR [rdi],ch
   10c41:	03 00                	add    eax,DWORD PTR [rax]
   10c43:	00 00                	add    BYTE PTR [rax],al
   10c45:	00 00                	add    BYTE PTR [rax],al
   10c47:	00 0b                	add    BYTE PTR [rbx],cl
   10c49:	00 00                	add    BYTE PTR [rax],al
   10c4b:	00 00                	add    BYTE PTR [rax],al
   10c4d:	00 00                	add    BYTE PTR [rax],al
   10c4f:	00 18                	add    BYTE PTR [rax],bl
   10c51:	00 00                	add    BYTE PTR [rax],al
   10c53:	00 00                	add    BYTE PTR [rax],al
   10c55:	00 00                	add    BYTE PTR [rax],al
   10c57:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 10c5d <_DYNAMIC+0xf5>
	...
   10c65:	00 00                	add    BYTE PTR [rax],al
   10c67:	00 03                	add    BYTE PTR [rbx],al
   10c69:	00 00                	add    BYTE PTR [rax],al
   10c6b:	00 00                	add    BYTE PTR [rax],al
   10c6d:	00 00                	add    BYTE PTR [rax],al
   10c6f:	00 88 0d 01 00 00    	add    BYTE PTR [rax+0x10d],cl
   10c75:	00 00                	add    BYTE PTR [rax],al
   10c77:	00 02                	add    BYTE PTR [rdx],al
   10c79:	00 00                	add    BYTE PTR [rax],al
   10c7b:	00 00                	add    BYTE PTR [rax],al
   10c7d:	00 00                	add    BYTE PTR [rax],al
   10c7f:	00 a8 06 00 00 00    	add    BYTE PTR [rax+0x6],ch
   10c85:	00 00                	add    BYTE PTR [rax],al
   10c87:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
   10c8a:	00 00                	add    BYTE PTR [rax],al
   10c8c:	00 00                	add    BYTE PTR [rax],al
   10c8e:	00 00                	add    BYTE PTR [rax],al
   10c90:	07                   	(bad)  
   10c91:	00 00                	add    BYTE PTR [rax],al
   10c93:	00 00                	add    BYTE PTR [rax],al
   10c95:	00 00                	add    BYTE PTR [rax],al
   10c97:	00 17                	add    BYTE PTR [rdi],dl
   10c99:	00 00                	add    BYTE PTR [rax],al
   10c9b:	00 00                	add    BYTE PTR [rax],al
   10c9d:	00 00                	add    BYTE PTR [rax],al
   10c9f:	00 e0                	add    al,ah
   10ca1:	10 00                	adc    BYTE PTR [rax],al
   10ca3:	00 00                	add    BYTE PTR [rax],al
   10ca5:	00 00                	add    BYTE PTR [rax],al
   10ca7:	00 07                	add    BYTE PTR [rdi],al
   10ca9:	00 00                	add    BYTE PTR [rax],al
   10cab:	00 00                	add    BYTE PTR [rax],al
   10cad:	00 00                	add    BYTE PTR [rax],al
   10caf:	00 c0                	add    al,al
   10cb1:	0f 00 00             	sldt   WORD PTR [rax]
   10cb4:	00 00                	add    BYTE PTR [rax],al
   10cb6:	00 00                	add    BYTE PTR [rax],al
   10cb8:	08 00                	or     BYTE PTR [rax],al
   10cba:	00 00                	add    BYTE PTR [rax],al
   10cbc:	00 00                	add    BYTE PTR [rax],al
   10cbe:	00 00                	add    BYTE PTR [rax],al
   10cc0:	20 01                	and    BYTE PTR [rcx],al
   10cc2:	00 00                	add    BYTE PTR [rax],al
   10cc4:	00 00                	add    BYTE PTR [rax],al
   10cc6:	00 00                	add    BYTE PTR [rax],al
   10cc8:	09 00                	or     DWORD PTR [rax],eax
   10cca:	00 00                	add    BYTE PTR [rax],al
   10ccc:	00 00                	add    BYTE PTR [rax],al
   10cce:	00 00                	add    BYTE PTR [rax],al
   10cd0:	18 00                	sbb    BYTE PTR [rax],al
   10cd2:	00 00                	add    BYTE PTR [rax],al
   10cd4:	00 00                	add    BYTE PTR [rax],al
   10cd6:	00 00                	add    BYTE PTR [rax],al
   10cd8:	1e                   	(bad)  
   10cd9:	00 00                	add    BYTE PTR [rax],al
   10cdb:	00 00                	add    BYTE PTR [rax],al
   10cdd:	00 00                	add    BYTE PTR [rax],al
   10cdf:	00 08                	add    BYTE PTR [rax],cl
   10ce1:	00 00                	add    BYTE PTR [rax],al
   10ce3:	00 00                	add    BYTE PTR [rax],al
   10ce5:	00 00                	add    BYTE PTR [rax],al
   10ce7:	00 fb                	add    bl,bh
   10ce9:	ff                   	(bad)  
   10cea:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10ced:	00 00                	add    BYTE PTR [rax],al
   10cef:	00 01                	add    BYTE PTR [rcx],al
   10cf1:	00 00                	add    BYTE PTR [rax],al
   10cf3:	08 00                	or     BYTE PTR [rax],al
   10cf5:	00 00                	add    BYTE PTR [rax],al
   10cf7:	00 fe                	add    dh,bh
   10cf9:	ff                   	(bad)  
   10cfa:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10cfd:	00 00                	add    BYTE PTR [rax],al
   10cff:	00 50 0f             	add    BYTE PTR [rax+0xf],dl
   10d02:	00 00                	add    BYTE PTR [rax],al
   10d04:	00 00                	add    BYTE PTR [rax],al
   10d06:	00 00                	add    BYTE PTR [rax],al
   10d08:	ff                   	(bad)  
   10d09:	ff                   	(bad)  
   10d0a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d0d:	00 00                	add    BYTE PTR [rax],al
   10d0f:	00 02                	add    BYTE PTR [rdx],al
   10d11:	00 00                	add    BYTE PTR [rax],al
   10d13:	00 00                	add    BYTE PTR [rax],al
   10d15:	00 00                	add    BYTE PTR [rax],al
   10d17:	00 f0                	add    al,dh
   10d19:	ff                   	(bad)  
   10d1a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d1d:	00 00                	add    BYTE PTR [rax],al
   10d1f:	00 b0 0e 00 00 00    	add    BYTE PTR [rax+0xe],dh
   10d25:	00 00                	add    BYTE PTR [rax],al
   10d27:	00 f9                	add    cl,bh
   10d29:	ff                   	(bad)  
   10d2a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d2d:	00 00                	add    BYTE PTR [rax],al
   10d2f:	00 06                	add    BYTE PTR [rsi],al
	...

Disassembly of section .got:

0000000000010d88 <_GLOBAL_OFFSET_TABLE_>:
   10d88:	68 0b 01 00 00       	push   0x10b
	...
   10d9d:	00 00                	add    BYTE PTR [rax],al
   10d9f:	00 30                	add    BYTE PTR [rax],dh
   10da1:	20 00                	and    BYTE PTR [rax],al
   10da3:	00 00                	add    BYTE PTR [rax],al
   10da5:	00 00                	add    BYTE PTR [rax],al
   10da7:	00 40 20             	add    BYTE PTR [rax+0x20],al
   10daa:	00 00                	add    BYTE PTR [rax],al
   10dac:	00 00                	add    BYTE PTR [rax],al
   10dae:	00 00                	add    BYTE PTR [rax],al
   10db0:	50                   	push   rax
   10db1:	20 00                	and    BYTE PTR [rax],al
   10db3:	00 00                	add    BYTE PTR [rax],al
   10db5:	00 00                	add    BYTE PTR [rax],al
   10db7:	00 60 20             	add    BYTE PTR [rax+0x20],ah
   10dba:	00 00                	add    BYTE PTR [rax],al
   10dbc:	00 00                	add    BYTE PTR [rax],al
   10dbe:	00 00                	add    BYTE PTR [rax],al
   10dc0:	70 20                	jo     10de2 <_GLOBAL_OFFSET_TABLE_+0x5a>
   10dc2:	00 00                	add    BYTE PTR [rax],al
   10dc4:	00 00                	add    BYTE PTR [rax],al
   10dc6:	00 00                	add    BYTE PTR [rax],al
   10dc8:	80 20 00             	and    BYTE PTR [rax],0x0
   10dcb:	00 00                	add    BYTE PTR [rax],al
   10dcd:	00 00                	add    BYTE PTR [rax],al
   10dcf:	00 90 20 00 00 00    	add    BYTE PTR [rax+0x20],dl
   10dd5:	00 00                	add    BYTE PTR [rax],al
   10dd7:	00 a0 20 00 00 00    	add    BYTE PTR [rax+0x20],ah
   10ddd:	00 00                	add    BYTE PTR [rax],al
   10ddf:	00 b0 20 00 00 00    	add    BYTE PTR [rax+0x20],dh
   10de5:	00 00                	add    BYTE PTR [rax],al
   10de7:	00 c0                	add    al,al
   10de9:	20 00                	and    BYTE PTR [rax],al
   10deb:	00 00                	add    BYTE PTR [rax],al
   10ded:	00 00                	add    BYTE PTR [rax],al
   10def:	00 d0                	add    al,dl
   10df1:	20 00                	and    BYTE PTR [rax],al
   10df3:	00 00                	add    BYTE PTR [rax],al
   10df5:	00 00                	add    BYTE PTR [rax],al
   10df7:	00 e0                	add    al,ah
   10df9:	20 00                	and    BYTE PTR [rax],al
   10dfb:	00 00                	add    BYTE PTR [rax],al
   10dfd:	00 00                	add    BYTE PTR [rax],al
   10dff:	00 f0                	add    al,dh
   10e01:	20 00                	and    BYTE PTR [rax],al
   10e03:	00 00                	add    BYTE PTR [rax],al
   10e05:	00 00                	add    BYTE PTR [rax],al
   10e07:	00 00                	add    BYTE PTR [rax],al
   10e09:	21 00                	and    DWORD PTR [rax],eax
   10e0b:	00 00                	add    BYTE PTR [rax],al
   10e0d:	00 00                	add    BYTE PTR [rax],al
   10e0f:	00 10                	add    BYTE PTR [rax],dl
   10e11:	21 00                	and    DWORD PTR [rax],eax
   10e13:	00 00                	add    BYTE PTR [rax],al
   10e15:	00 00                	add    BYTE PTR [rax],al
   10e17:	00 20                	add    BYTE PTR [rax],ah
   10e19:	21 00                	and    DWORD PTR [rax],eax
   10e1b:	00 00                	add    BYTE PTR [rax],al
   10e1d:	00 00                	add    BYTE PTR [rax],al
   10e1f:	00 30                	add    BYTE PTR [rax],dh
   10e21:	21 00                	and    DWORD PTR [rax],eax
   10e23:	00 00                	add    BYTE PTR [rax],al
   10e25:	00 00                	add    BYTE PTR [rax],al
   10e27:	00 40 21             	add    BYTE PTR [rax+0x21],al
   10e2a:	00 00                	add    BYTE PTR [rax],al
   10e2c:	00 00                	add    BYTE PTR [rax],al
   10e2e:	00 00                	add    BYTE PTR [rax],al
   10e30:	50                   	push   rax
   10e31:	21 00                	and    DWORD PTR [rax],eax
   10e33:	00 00                	add    BYTE PTR [rax],al
   10e35:	00 00                	add    BYTE PTR [rax],al
   10e37:	00 60 21             	add    BYTE PTR [rax+0x21],ah
   10e3a:	00 00                	add    BYTE PTR [rax],al
   10e3c:	00 00                	add    BYTE PTR [rax],al
   10e3e:	00 00                	add    BYTE PTR [rax],al
   10e40:	70 21                	jo     10e63 <_GLOBAL_OFFSET_TABLE_+0xdb>
   10e42:	00 00                	add    BYTE PTR [rax],al
   10e44:	00 00                	add    BYTE PTR [rax],al
   10e46:	00 00                	add    BYTE PTR [rax],al
   10e48:	80 21 00             	and    BYTE PTR [rcx],0x0
   10e4b:	00 00                	add    BYTE PTR [rax],al
   10e4d:	00 00                	add    BYTE PTR [rax],al
   10e4f:	00 90 21 00 00 00    	add    BYTE PTR [rax+0x21],dl
   10e55:	00 00                	add    BYTE PTR [rax],al
   10e57:	00 a0 21 00 00 00    	add    BYTE PTR [rax+0x21],ah
   10e5d:	00 00                	add    BYTE PTR [rax],al
   10e5f:	00 b0 21 00 00 00    	add    BYTE PTR [rax+0x21],dh
   10e65:	00 00                	add    BYTE PTR [rax],al
   10e67:	00 c0                	add    al,al
   10e69:	21 00                	and    DWORD PTR [rax],eax
   10e6b:	00 00                	add    BYTE PTR [rax],al
   10e6d:	00 00                	add    BYTE PTR [rax],al
   10e6f:	00 d0                	add    al,dl
   10e71:	21 00                	and    DWORD PTR [rax],eax
   10e73:	00 00                	add    BYTE PTR [rax],al
   10e75:	00 00                	add    BYTE PTR [rax],al
   10e77:	00 e0                	add    al,ah
   10e79:	21 00                	and    DWORD PTR [rax],eax
   10e7b:	00 00                	add    BYTE PTR [rax],al
   10e7d:	00 00                	add    BYTE PTR [rax],al
   10e7f:	00 f0                	add    al,dh
   10e81:	21 00                	and    DWORD PTR [rax],eax
   10e83:	00 00                	add    BYTE PTR [rax],al
   10e85:	00 00                	add    BYTE PTR [rax],al
   10e87:	00 00                	add    BYTE PTR [rax],al
   10e89:	22 00                	and    al,BYTE PTR [rax]
   10e8b:	00 00                	add    BYTE PTR [rax],al
   10e8d:	00 00                	add    BYTE PTR [rax],al
   10e8f:	00 10                	add    BYTE PTR [rax],dl
   10e91:	22 00                	and    al,BYTE PTR [rax]
   10e93:	00 00                	add    BYTE PTR [rax],al
   10e95:	00 00                	add    BYTE PTR [rax],al
   10e97:	00 20                	add    BYTE PTR [rax],ah
   10e99:	22 00                	and    al,BYTE PTR [rax]
   10e9b:	00 00                	add    BYTE PTR [rax],al
   10e9d:	00 00                	add    BYTE PTR [rax],al
   10e9f:	00 30                	add    BYTE PTR [rax],dh
   10ea1:	22 00                	and    al,BYTE PTR [rax]
   10ea3:	00 00                	add    BYTE PTR [rax],al
   10ea5:	00 00                	add    BYTE PTR [rax],al
   10ea7:	00 40 22             	add    BYTE PTR [rax+0x22],al
   10eaa:	00 00                	add    BYTE PTR [rax],al
   10eac:	00 00                	add    BYTE PTR [rax],al
   10eae:	00 00                	add    BYTE PTR [rax],al
   10eb0:	50                   	push   rax
   10eb1:	22 00                	and    al,BYTE PTR [rax]
   10eb3:	00 00                	add    BYTE PTR [rax],al
   10eb5:	00 00                	add    BYTE PTR [rax],al
   10eb7:	00 60 22             	add    BYTE PTR [rax+0x22],ah
   10eba:	00 00                	add    BYTE PTR [rax],al
   10ebc:	00 00                	add    BYTE PTR [rax],al
   10ebe:	00 00                	add    BYTE PTR [rax],al
   10ec0:	70 22                	jo     10ee4 <_GLOBAL_OFFSET_TABLE_+0x15c>
   10ec2:	00 00                	add    BYTE PTR [rax],al
   10ec4:	00 00                	add    BYTE PTR [rax],al
   10ec6:	00 00                	add    BYTE PTR [rax],al
   10ec8:	80 22 00             	and    BYTE PTR [rdx],0x0
   10ecb:	00 00                	add    BYTE PTR [rax],al
   10ecd:	00 00                	add    BYTE PTR [rax],al
   10ecf:	00 90 22 00 00 00    	add    BYTE PTR [rax+0x22],dl
   10ed5:	00 00                	add    BYTE PTR [rax],al
   10ed7:	00 a0 22 00 00 00    	add    BYTE PTR [rax+0x22],ah
   10edd:	00 00                	add    BYTE PTR [rax],al
   10edf:	00 b0 22 00 00 00    	add    BYTE PTR [rax+0x22],dh
   10ee5:	00 00                	add    BYTE PTR [rax],al
   10ee7:	00 c0                	add    al,al
   10ee9:	22 00                	and    al,BYTE PTR [rax]
   10eeb:	00 00                	add    BYTE PTR [rax],al
   10eed:	00 00                	add    BYTE PTR [rax],al
   10eef:	00 d0                	add    al,dl
   10ef1:	22 00                	and    al,BYTE PTR [rax]
   10ef3:	00 00                	add    BYTE PTR [rax],al
   10ef5:	00 00                	add    BYTE PTR [rax],al
   10ef7:	00 e0                	add    al,ah
   10ef9:	22 00                	and    al,BYTE PTR [rax]
   10efb:	00 00                	add    BYTE PTR [rax],al
   10efd:	00 00                	add    BYTE PTR [rax],al
   10eff:	00 f0                	add    al,dh
   10f01:	22 00                	and    al,BYTE PTR [rax]
   10f03:	00 00                	add    BYTE PTR [rax],al
   10f05:	00 00                	add    BYTE PTR [rax],al
   10f07:	00 00                	add    BYTE PTR [rax],al
   10f09:	23 00                	and    eax,DWORD PTR [rax]
   10f0b:	00 00                	add    BYTE PTR [rax],al
   10f0d:	00 00                	add    BYTE PTR [rax],al
   10f0f:	00 10                	add    BYTE PTR [rax],dl
   10f11:	23 00                	and    eax,DWORD PTR [rax]
   10f13:	00 00                	add    BYTE PTR [rax],al
   10f15:	00 00                	add    BYTE PTR [rax],al
   10f17:	00 20                	add    BYTE PTR [rax],ah
   10f19:	23 00                	and    eax,DWORD PTR [rax]
   10f1b:	00 00                	add    BYTE PTR [rax],al
   10f1d:	00 00                	add    BYTE PTR [rax],al
   10f1f:	00 30                	add    BYTE PTR [rax],dh
   10f21:	23 00                	and    eax,DWORD PTR [rax]
   10f23:	00 00                	add    BYTE PTR [rax],al
   10f25:	00 00                	add    BYTE PTR [rax],al
   10f27:	00 40 23             	add    BYTE PTR [rax+0x23],al
   10f2a:	00 00                	add    BYTE PTR [rax],al
   10f2c:	00 00                	add    BYTE PTR [rax],al
   10f2e:	00 00                	add    BYTE PTR [rax],al
   10f30:	50                   	push   rax
   10f31:	23 00                	and    eax,DWORD PTR [rax]
   10f33:	00 00                	add    BYTE PTR [rax],al
   10f35:	00 00                	add    BYTE PTR [rax],al
   10f37:	00 60 23             	add    BYTE PTR [rax+0x23],ah
   10f3a:	00 00                	add    BYTE PTR [rax],al
   10f3c:	00 00                	add    BYTE PTR [rax],al
   10f3e:	00 00                	add    BYTE PTR [rax],al
   10f40:	70 23                	jo     10f65 <_GLOBAL_OFFSET_TABLE_+0x1dd>
   10f42:	00 00                	add    BYTE PTR [rax],al
   10f44:	00 00                	add    BYTE PTR [rax],al
   10f46:	00 00                	add    BYTE PTR [rax],al
   10f48:	80 23 00             	and    BYTE PTR [rbx],0x0
   10f4b:	00 00                	add    BYTE PTR [rax],al
   10f4d:	00 00                	add    BYTE PTR [rax],al
   10f4f:	00 90 23 00 00 00    	add    BYTE PTR [rax+0x23],dl
   10f55:	00 00                	add    BYTE PTR [rax],al
   10f57:	00 a0 23 00 00 00    	add    BYTE PTR [rax+0x23],ah
   10f5d:	00 00                	add    BYTE PTR [rax],al
   10f5f:	00 b0 23 00 00 00    	add    BYTE PTR [rax+0x23],dh
   10f65:	00 00                	add    BYTE PTR [rax],al
   10f67:	00 c0                	add    al,al
   10f69:	23 00                	and    eax,DWORD PTR [rax]
   10f6b:	00 00                	add    BYTE PTR [rax],al
   10f6d:	00 00                	add    BYTE PTR [rax],al
   10f6f:	00 d0                	add    al,dl
   10f71:	23 00                	and    eax,DWORD PTR [rax]
   10f73:	00 00                	add    BYTE PTR [rax],al
   10f75:	00 00                	add    BYTE PTR [rax],al
   10f77:	00 e0                	add    al,ah
   10f79:	23 00                	and    eax,DWORD PTR [rax]
   10f7b:	00 00                	add    BYTE PTR [rax],al
   10f7d:	00 00                	add    BYTE PTR [rax],al
   10f7f:	00 f0                	add    al,dh
   10f81:	23 00                	and    eax,DWORD PTR [rax]
   10f83:	00 00                	add    BYTE PTR [rax],al
   10f85:	00 00                	add    BYTE PTR [rax],al
   10f87:	00 00                	add    BYTE PTR [rax],al
   10f89:	24 00                	and    al,0x0
   10f8b:	00 00                	add    BYTE PTR [rax],al
   10f8d:	00 00                	add    BYTE PTR [rax],al
   10f8f:	00 10                	add    BYTE PTR [rax],dl
   10f91:	24 00                	and    al,0x0
   10f93:	00 00                	add    BYTE PTR [rax],al
   10f95:	00 00                	add    BYTE PTR [rax],al
   10f97:	00 20                	add    BYTE PTR [rax],ah
   10f99:	24 00                	and    al,0x0
   10f9b:	00 00                	add    BYTE PTR [rax],al
   10f9d:	00 00                	add    BYTE PTR [rax],al
   10f9f:	00 30                	add    BYTE PTR [rax],dh
   10fa1:	24 00                	and    al,0x0
   10fa3:	00 00                	add    BYTE PTR [rax],al
   10fa5:	00 00                	add    BYTE PTR [rax],al
   10fa7:	00 40 24             	add    BYTE PTR [rax+0x24],al
   10faa:	00 00                	add    BYTE PTR [rax],al
   10fac:	00 00                	add    BYTE PTR [rax],al
   10fae:	00 00                	add    BYTE PTR [rax],al
   10fb0:	50                   	push   rax
   10fb1:	24 00                	and    al,0x0
   10fb3:	00 00                	add    BYTE PTR [rax],al
   10fb5:	00 00                	add    BYTE PTR [rax],al
   10fb7:	00 60 24             	add    BYTE PTR [rax+0x24],ah
   10fba:	00 00                	add    BYTE PTR [rax],al
   10fbc:	00 00                	add    BYTE PTR [rax],al
   10fbe:	00 00                	add    BYTE PTR [rax],al
   10fc0:	70 24                	jo     10fe6 <_GLOBAL_OFFSET_TABLE_+0x25e>
   10fc2:	00 00                	add    BYTE PTR [rax],al
   10fc4:	00 00                	add    BYTE PTR [rax],al
   10fc6:	00 00                	add    BYTE PTR [rax],al
   10fc8:	80 24 00 00          	and    BYTE PTR [rax+rax*1],0x0
   10fcc:	00 00                	add    BYTE PTR [rax],al
   10fce:	00 00                	add    BYTE PTR [rax],al
   10fd0:	90                   	nop
   10fd1:	24 00                	and    al,0x0
	...

Disassembly of section .data:

0000000000011000 <__data_start>:
	...

0000000000011008 <__dso_handle>:
   11008:	08 10                	or     BYTE PTR [rax],dl
   1100a:	01 00                	add    DWORD PTR [rax],eax
   1100c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011010 <blk_ipv4_len>:
   11010:	ff                   	(bad)  
   11011:	ff                   	(bad)  
   11012:	ff                   	(bad)  
   11013:	ff                   	(bad)  

0000000000011014 <num_rules>:
   11014:	ff                   	(bad)  
   11015:	ff                   	(bad)  
   11016:	ff                   	(bad)  
   11017:	ff                   	(bad)  

0000000000011018 <watchlist_num>:
   11018:	ff                   	(bad)  
   11019:	ff                   	(bad)  
   1101a:	ff                   	(bad)  
   1101b:	ff                   	(bad)  

000000000001101c <arp_entries>:
   1101c:	ff                   	(bad)  
   1101d:	ff                   	(bad)  
   1101e:	ff                   	(bad)  
   1101f:	ff                 	dec    eax

0000000000011020 <spi_max>:
   11020:	c8 00 00 00          	enter  0x0,0x0

0000000000011024 <VIGIL_MODE>:
   11024:	ff                   	(bad)  
   11025:	ff 00                	inc    DWORD PTR [rax]
	...

0000000000011028 <default_config>:
   11028:	04 c0                	add    al,0xc0
   1102a:	00 00                	add    BYTE PTR [rax],al
   1102c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011030 <def_log_file>:
   11030:	1a c0                	sbb    al,al
   11032:	00 00                	add    BYTE PTR [rax],al
   11034:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011038 <default_host_conf>:
   11038:	34 c0                	xor    al,0xc0
   1103a:	00 00                	add    BYTE PTR [rax],al
   1103c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011040 <total_conversations>:
   11040:	ff                   	(bad)  
   11041:	ff                   	(bad)  
   11042:	ff                   	(bad)  
   11043:	ff                   	.byte 0xff

Disassembly of section .bss:

0000000000011060 <optarg@GLIBC_2.2.5>:
	...

0000000000011068 <completed.0>:
	...

0000000000011080 <demo_mode>:
   11080:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011084 <strict_icmp_timestamp_req>:
   11084:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011088 <strict_nmap_host_alive_check>:
	...

00000000000110a0 <threads>:
	...

00000000000112a0 <thread_count>:
   112a0:	00 00                	add    BYTE PTR [rax],al
	...

00000000000112a4 <total_pkt_captured>:
   112a4:	00 00                	add    BYTE PTR [rax],al
	...

00000000000112a8 <is_running>:
	...

00000000000112b0 <last_clean_time>:
	...

00000000000112b8 <clean_delay>:
	...

00000000000112c0 <pkt_counter>:
	...

00000000000112e0 <rules>:
	...

00000000000f32e0 <blocked_ipv4_addrs>:
	...

00000000000f3520 <watchlist>:
	...

0000000000107d20 <arpcache>:
	...

0000000000109f00 <ip_addr>:
	...

0000000000109f20 <debug_mode>:
	...

0000000000109f21 <use_sqlite>:
	...

0000000000109f40 <sqlite_db_path>:
	...

0000000000109f60 <clean_delay_pkts>:
  109f60:	00 00                	add    BYTE PTR [rax],al
	...

0000000000109f64 <packet_print>:
	...

0000000000109f65 <quiet_exit>:
  109f65:	00 00                	add    BYTE PTR [rax],al
	...

0000000000109f68 <vigil_location>:
	...

0000000000109f70 <input_adapter>:
	...

0000000000109f80 <output_adapter>:
	...

0000000000109f90 <local_ip>:
	...

0000000000109fb0 <def_gw>:
	...

0000000000109fc2 <use_spi>:
	...

0000000000109fc4 <homenet>:
  109fc4:	00 00                	add    BYTE PTR [rax],al
	...

0000000000109fc8 <homenetmask>:
  109fc8:	00 00                	add    BYTE PTR [rax],al
	...

0000000000109fcc <in_test_mode>:
	...

0000000000109fe0 <spi_table>:
	...

0000000000137fe0 <lua_scripts>:
	...

0000000000138800 <fn_mem_map>:
	...

000000000013b000 <fn_num>:
	...

000000000013b020 <current_log_num.3>:
  13b020:	00 00                	add    BYTE PTR [rax],al
	...

000000000013b024 <lines_written.2>:
  13b024:	00 00                	add    BYTE PTR [rax],al
	...

000000000013b028 <arr_num.1>:
	...

000000000013b040 <pkt_times.0>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <buffer+0x78>
   a:	74 75                	je     81 <buffer.0+0x1>
   c:	20 31                	and    BYTE PTR [rcx],dh
   e:	30 2e                	xor    BYTE PTR [rsi],ch
  10:	33 2e                	xor    ebp,DWORD PTR [rsi]
  12:	30 2d 31 75 62 75    	xor    BYTE PTR [rip+0x75627531],ch        # 75627549 <_end+0x754ea509>
  18:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  19:	74 75                	je     90 <buffer.0+0x10>
  1b:	31 29                	xor    DWORD PTR [rcx],ebp
  1d:	20 31                	and    BYTE PTR [rcx],dh
  1f:	30 2e                	xor    BYTE PTR [rsi],ch
  21:	33 2e                	xor    ebp,DWORD PTR [rsi]
  23:	30 00                	xor    BYTE PTR [rax],al
