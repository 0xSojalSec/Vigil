
vigil.exe:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000350 <.interp>:
 350:	2f                   	(bad)  
 351:	6c                   	ins    BYTE PTR es:[rdi],dx
 352:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 359:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 35e:	78 2d                	js     38d <buffer.4704+0x30d>
 360:	78 38                	js     39a <buffer.4704+0x31a>
 362:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 368:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 369:	2e 32 00             	xor    al,BYTE PTR cs:[rax]

Disassembly of section .note.gnu.property:

0000000000000370 <.note.gnu.property>:
 370:	04 00                	add    al,0x0
 372:	00 00                	add    BYTE PTR [rax],al
 374:	10 00                	adc    BYTE PTR [rax],al
 376:	00 00                	add    BYTE PTR [rax],al
 378:	05 00 00 00 47       	add    eax,0x47000000
 37d:	4e 55                	rex.WRX push rbp
 37f:	00 02                	add    BYTE PTR [rdx],al
 381:	00 00                	add    BYTE PTR [rax],al
 383:	c0 04 00 00          	rol    BYTE PTR [rax+rax*1],0x0
 387:	00 03                	add    BYTE PTR [rbx],al
 389:	00 00                	add    BYTE PTR [rax],al
 38b:	00 00                	add    BYTE PTR [rax],al
 38d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000000390 <.note.gnu.build-id>:
 390:	04 00                	add    al,0x0
 392:	00 00                	add    BYTE PTR [rax],al
 394:	14 00                	adc    al,0x0
 396:	00 00                	add    BYTE PTR [rax],al
 398:	03 00                	add    eax,DWORD PTR [rax]
 39a:	00 00                	add    BYTE PTR [rax],al
 39c:	47                   	rex.RXB
 39d:	4e 55                	rex.WRX push rbp
 39f:	00 b8 58 4a d0 b0    	add    BYTE PTR [rax-0x4f2fb5a8],bh
 3a5:	11 34 d6             	adc    DWORD PTR [rsi+rdx*8],esi
 3a8:	68 bb 2a 86 51       	push   0x51862abb
 3ad:	20 75 96             	and    BYTE PTR [rbp-0x6a],dh
 3b0:	25                   	.byte 0x25
 3b1:	a2                   	.byte 0xa2
 3b2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 3b3:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]

Disassembly of section .note.ABI-tag:

00000000000003b4 <.note.ABI-tag>:
 3b4:	04 00                	add    al,0x0
 3b6:	00 00                	add    BYTE PTR [rax],al
 3b8:	10 00                	adc    BYTE PTR [rax],al
 3ba:	00 00                	add    BYTE PTR [rax],al
 3bc:	01 00                	add    DWORD PTR [rax],eax
 3be:	00 00                	add    BYTE PTR [rax],al
 3c0:	47                   	rex.RXB
 3c1:	4e 55                	rex.WRX push rbp
 3c3:	00 00                	add    BYTE PTR [rax],al
 3c5:	00 00                	add    BYTE PTR [rax],al
 3c7:	00 03                	add    BYTE PTR [rbx],al
 3c9:	00 00                	add    BYTE PTR [rax],al
 3cb:	00 02                	add    BYTE PTR [rdx],al
 3cd:	00 00                	add    BYTE PTR [rax],al
 3cf:	00 00                	add    BYTE PTR [rax],al
 3d1:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .gnu.hash:

00000000000003d8 <.gnu.hash>:
 3d8:	03 00                	add    eax,DWORD PTR [rax]
 3da:	00 00                	add    BYTE PTR [rax],al
 3dc:	48 00 00             	rex.W add BYTE PTR [rax],al
 3df:	00 01                	add    BYTE PTR [rcx],al
 3e1:	00 00                	add    BYTE PTR [rax],al
 3e3:	00 06                	add    BYTE PTR [rsi],al
 3e5:	00 00                	add    BYTE PTR [rax],al
 3e7:	00 00                	add    BYTE PTR [rax],al
 3e9:	14 81                	adc    al,0x81
 3eb:	00 00                	add    BYTE PTR [rax],al
 3ed:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 3f0:	48 00 00             	rex.W add BYTE PTR [rax],al
 3f3:	00 00                	add    BYTE PTR [rax],al
 3f5:	00 00                	add    BYTE PTR [rax],al
 3f7:	00 49 00             	add    BYTE PTR [rcx+0x0],cl
 3fa:	00 00                	add    BYTE PTR [rax],al
 3fc:	d1 65 ce             	shl    DWORD PTR [rbp-0x32],1
 3ff:	6d                   	ins    DWORD PTR es:[rdi],dx
 400:	b2 a2                	mov    dl,0xa2
 402:	f7 12                	not    DWORD PTR [rdx]
 404:	33                   	.byte 0x33
 405:	b3 f0                	mov    bl,0xf0
 407:	a9                   	.byte 0xa9

Disassembly of section .dynsym:

0000000000000408 <.dynsym>:
	...
 420:	d2 00                	rol    BYTE PTR [rax],cl
 422:	00 00                	add    BYTE PTR [rax],al
 424:	12 00                	adc    al,BYTE PTR [rax]
	...
 436:	00 00                	add    BYTE PTR [rax],al
 438:	d2 01                	rol    BYTE PTR [rcx],cl
 43a:	00 00                	add    BYTE PTR [rax],al
 43c:	12 00                	adc    al,BYTE PTR [rax]
	...
 44e:	00 00                	add    BYTE PTR [rax],al
 450:	97                   	xchg   edi,eax
 451:	00 00                	add    BYTE PTR [rax],al
 453:	00 12                	add    BYTE PTR [rdx],dl
	...
 465:	00 00                	add    BYTE PTR [rax],al
 467:	00 6d 02             	add    BYTE PTR [rbp+0x2],ch
 46a:	00 00                	add    BYTE PTR [rax],al
 46c:	12 00                	adc    al,BYTE PTR [rax]
	...
 47e:	00 00                	add    BYTE PTR [rax],al
 480:	b9 01 00 00 12       	mov    ecx,0x12000001
	...
 495:	00 00                	add    BYTE PTR [rax],al
 497:	00 9b 01 00 00 12    	add    BYTE PTR [rbx+0x12000001],bl
	...
 4ad:	00 00                	add    BYTE PTR [rax],al
 4af:	00 10                	add    BYTE PTR [rax],dl
 4b1:	00 00                	add    BYTE PTR [rax],al
 4b3:	00 20                	add    BYTE PTR [rax],ah
	...
 4c5:	00 00                	add    BYTE PTR [rax],al
 4c7:	00 75 01             	add    BYTE PTR [rbp+0x1],dh
 4ca:	00 00                	add    BYTE PTR [rax],al
 4cc:	12 00                	adc    al,BYTE PTR [rax]
	...
 4de:	00 00                	add    BYTE PTR [rax],al
 4e0:	0e                   	(bad)  
 4e1:	01 00                	add    DWORD PTR [rax],eax
 4e3:	00 12                	add    BYTE PTR [rdx],dl
	...
 4f5:	00 00                	add    BYTE PTR [rax],al
 4f7:	00 4b 01             	add    BYTE PTR [rbx+0x1],cl
 4fa:	00 00                	add    BYTE PTR [rax],al
 4fc:	12 00                	adc    al,BYTE PTR [rax]
	...
 50e:	00 00                	add    BYTE PTR [rax],al
 510:	22 02                	and    al,BYTE PTR [rdx]
 512:	00 00                	add    BYTE PTR [rax],al
 514:	12 00                	adc    al,BYTE PTR [rax]
	...
 526:	00 00                	add    BYTE PTR [rax],al
 528:	2e 02 00             	add    al,BYTE PTR cs:[rax]
 52b:	00 12                	add    BYTE PTR [rdx],dl
	...
 53d:	00 00                	add    BYTE PTR [rax],al
 53f:	00 ab 02 00 00 12    	add    BYTE PTR [rbx+0x12000002],ch
	...
 555:	00 00                	add    BYTE PTR [rax],al
 557:	00 d7                	add    bh,dl
 559:	00 00                	add    BYTE PTR [rax],al
 55b:	00 12                	add    BYTE PTR [rdx],dl
	...
 56d:	00 00                	add    BYTE PTR [rax],al
 56f:	00 f2                	add    dl,dh
 571:	00 00                	add    BYTE PTR [rax],al
 573:	00 12                	add    BYTE PTR [rdx],dl
	...
 585:	00 00                	add    BYTE PTR [rax],al
 587:	00 27                	add    BYTE PTR [rdi],ah
 589:	02 00                	add    al,BYTE PTR [rax]
 58b:	00 12                	add    BYTE PTR [rdx],dl
	...
 59d:	00 00                	add    BYTE PTR [rax],al
 59f:	00 ef                	add    bh,ch
 5a1:	01 00                	add    DWORD PTR [rax],eax
 5a3:	00 12                	add    BYTE PTR [rdx],dl
	...
 5b5:	00 00                	add    BYTE PTR [rax],al
 5b7:	00 63 02             	add    BYTE PTR [rbx+0x2],ah
 5ba:	00 00                	add    BYTE PTR [rax],al
 5bc:	12 00                	adc    al,BYTE PTR [rax]
	...
 5ce:	00 00                	add    BYTE PTR [rax],al
 5d0:	c1 01 00             	rol    DWORD PTR [rcx],0x0
 5d3:	00 12                	add    BYTE PTR [rdx],dl
	...
 5e5:	00 00                	add    BYTE PTR [rax],al
 5e7:	00 87 01 00 00 12    	add    BYTE PTR [rdi+0x12000001],al
	...
 5fd:	00 00                	add    BYTE PTR [rax],al
 5ff:	00 7e 00             	add    BYTE PTR [rsi+0x0],bh
 602:	00 00                	add    BYTE PTR [rax],al
 604:	12 00                	adc    al,BYTE PTR [rax]
	...
 616:	00 00                	add    BYTE PTR [rax],al
 618:	77 02                	ja     61c <buffer.4704+0x59c>
 61a:	00 00                	add    BYTE PTR [rax],al
 61c:	12 00                	adc    al,BYTE PTR [rax]
	...
 62e:	00 00                	add    BYTE PTR [rax],al
 630:	7f 02                	jg     634 <buffer.4704+0x5b4>
 632:	00 00                	add    BYTE PTR [rax],al
 634:	12 00                	adc    al,BYTE PTR [rax]
	...
 646:	00 00                	add    BYTE PTR [rax],al
 648:	e2 02                	loop   64c <buffer.4704+0x5cc>
 64a:	00 00                	add    BYTE PTR [rax],al
 64c:	12 00                	adc    al,BYTE PTR [rax]
	...
 65e:	00 00                	add    BYTE PTR [rax],al
 660:	21 02                	and    DWORD PTR [rdx],eax
 662:	00 00                	add    BYTE PTR [rax],al
 664:	12 00                	adc    al,BYTE PTR [rax]
	...
 676:	00 00                	add    BYTE PTR [rax],al
 678:	81 01 00 00 12 00    	add    DWORD PTR [rcx],0x120000
	...
 68e:	00 00                	add    BYTE PTR [rax],al
 690:	f6 01 00             	test   BYTE PTR [rcx],0x0
 693:	00 12                	add    BYTE PTR [rdx],dl
	...
 6a5:	00 00                	add    BYTE PTR [rax],al
 6a7:	00 56 02             	add    BYTE PTR [rsi+0x2],dl
 6aa:	00 00                	add    BYTE PTR [rax],al
 6ac:	12 00                	adc    al,BYTE PTR [rax]
	...
 6be:	00 00                	add    BYTE PTR [rax],al
 6c0:	ec                   	in     al,dx
 6c1:	00 00                	add    BYTE PTR [rax],al
 6c3:	00 12                	add    BYTE PTR [rdx],dl
	...
 6d5:	00 00                	add    BYTE PTR [rax],al
 6d7:	00 47 02             	add    BYTE PTR [rdi+0x2],al
 6da:	00 00                	add    BYTE PTR [rax],al
 6dc:	12 00                	adc    al,BYTE PTR [rax]
	...
 6ee:	00 00                	add    BYTE PTR [rax],al
 6f0:	04 02                	add    al,0x2
 6f2:	00 00                	add    BYTE PTR [rax],al
 6f4:	12 00                	adc    al,BYTE PTR [rax]
	...
 706:	00 00                	add    BYTE PTR [rax],al
 708:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
 709:	00 00                	add    BYTE PTR [rax],al
 70b:	00 12                	add    BYTE PTR [rdx],dl
	...
 71d:	00 00                	add    BYTE PTR [rax],al
 71f:	00 c4                	add    ah,al
 721:	02 00                	add    al,BYTE PTR [rax]
 723:	00 12                	add    BYTE PTR [rdx],dl
	...
 735:	00 00                	add    BYTE PTR [rax],al
 737:	00 36                	add    BYTE PTR [rsi],dh
 739:	01 00                	add    DWORD PTR [rax],eax
 73b:	00 12                	add    BYTE PTR [rdx],dl
	...
 74d:	00 00                	add    BYTE PTR [rax],al
 74f:	00 bb 00 00 00 12    	add    BYTE PTR [rbx+0x12000000],bh
	...
 765:	00 00                	add    BYTE PTR [rax],al
 767:	00 bd 02 00 00 12    	add    BYTE PTR [rbp+0x12000002],bh
	...
 77d:	00 00                	add    BYTE PTR [rax],al
 77f:	00 b2 01 00 00 12    	add    BYTE PTR [rdx+0x12000001],dh
	...
 795:	00 00                	add    BYTE PTR [rax],al
 797:	00 7e 02             	add    BYTE PTR [rsi+0x2],bh
 79a:	00 00                	add    BYTE PTR [rax],al
 79c:	12 00                	adc    al,BYTE PTR [rax]
	...
 7ae:	00 00                	add    BYTE PTR [rax],al
 7b0:	2c 00                	sub    al,0x0
 7b2:	00 00                	add    BYTE PTR [rax],al
 7b4:	20 00                	and    BYTE PTR [rax],al
	...
 7c6:	00 00                	add    BYTE PTR [rax],al
 7c8:	e8 01 00 00 12       	call   120007ce <_end+0x11ec57ae>
	...
 7dd:	00 00                	add    BYTE PTR [rax],al
 7df:	00 e4                	add    ah,ah
 7e1:	00 00                	add    BYTE PTR [rax],al
 7e3:	00 12                	add    BYTE PTR [rdx],dl
	...
 7f5:	00 00                	add    BYTE PTR [rax],al
 7f7:	00 72 02             	add    BYTE PTR [rdx+0x2],dh
 7fa:	00 00                	add    BYTE PTR [rax],al
 7fc:	12 00                	adc    al,BYTE PTR [rax]
	...
 80e:	00 00                	add    BYTE PTR [rax],al
 810:	28 01                	sub    BYTE PTR [rcx],al
 812:	00 00                	add    BYTE PTR [rax],al
 814:	12 00                	adc    al,BYTE PTR [rax]
	...
 826:	00 00                	add    BYTE PTR [rax],al
 828:	55                   	push   rbp
 829:	00 00                	add    BYTE PTR [rax],al
 82b:	00 12                	add    BYTE PTR [rdx],dl
	...
 83d:	00 00                	add    BYTE PTR [rax],al
 83f:	00 39                	add    BYTE PTR [rcx],bh
 841:	02 00                	add    al,BYTE PTR [rax]
 843:	00 12                	add    BYTE PTR [rdx],dl
	...
 855:	00 00                	add    BYTE PTR [rax],al
 857:	00 da                	add    dl,bl
 859:	01 00                	add    DWORD PTR [rax],eax
 85b:	00 12                	add    BYTE PTR [rdx],dl
	...
 86d:	00 00                	add    BYTE PTR [rax],al
 86f:	00 40 01             	add    BYTE PTR [rax+0x1],al
 872:	00 00                	add    BYTE PTR [rax],al
 874:	12 00                	adc    al,BYTE PTR [rax]
	...
 886:	00 00                	add    BYTE PTR [rax],al
 888:	a3 01 00 00 12 00 00 	movabs ds:0x12000001,eax
 88f:	00 00 
	...
 89d:	00 00                	add    BYTE PTR [rax],al
 89f:	00 dc                	add    ah,bl
 8a1:	02 00                	add    al,BYTE PTR [rax]
 8a3:	00 12                	add    BYTE PTR [rdx],dl
	...
 8b5:	00 00                	add    BYTE PTR [rax],al
 8b7:	00 19                	add    BYTE PTR [rcx],bl
 8b9:	01 00                	add    DWORD PTR [rax],eax
 8bb:	00 12                	add    BYTE PTR [rdx],dl
	...
 8cd:	00 00                	add    BYTE PTR [rax],al
 8cf:	00 0c 02             	add    BYTE PTR [rdx+rax*1],cl
 8d2:	00 00                	add    BYTE PTR [rax],al
 8d4:	12 00                	adc    al,BYTE PTR [rax]
	...
 8e6:	00 00                	add    BYTE PTR [rax],al
 8e8:	95                   	xchg   ebp,eax
 8e9:	01 00                	add    DWORD PTR [rax],eax
 8eb:	00 12                	add    BYTE PTR [rdx],dl
	...
 8fd:	00 00                	add    BYTE PTR [rax],al
 8ff:	00 ab 01 00 00 12    	add    BYTE PTR [rbx+0x12000001],ch
	...
 915:	00 00                	add    BYTE PTR [rax],al
 917:	00 e1                	add    cl,ah
 919:	01 00                	add    DWORD PTR [rax],eax
 91b:	00 12                	add    BYTE PTR [rdx],dl
	...
 92d:	00 00                	add    BYTE PTR [rax],al
 92f:	00 8a 00 00 00 12    	add    BYTE PTR [rdx+0x12000000],cl
	...
 945:	00 00                	add    BYTE PTR [rax],al
 947:	00 56 01             	add    BYTE PTR [rsi+0x1],dl
 94a:	00 00                	add    BYTE PTR [rax],al
 94c:	12 00                	adc    al,BYTE PTR [rax]
	...
 95e:	00 00                	add    BYTE PTR [rax],al
 960:	1a 02                	sbb    al,BYTE PTR [rdx]
 962:	00 00                	add    BYTE PTR [rax],al
 964:	12 00                	adc    al,BYTE PTR [rax]
	...
 976:	00 00                	add    BYTE PTR [rax],al
 978:	83 00 00             	add    DWORD PTR [rax],0x0
 97b:	00 12                	add    BYTE PTR [rdx],dl
	...
 98d:	00 00                	add    BYTE PTR [rax],al
 98f:	00 5e 02             	add    BYTE PTR [rsi+0x2],bl
 992:	00 00                	add    BYTE PTR [rax],al
 994:	12 00                	adc    al,BYTE PTR [rax]
	...
 9a6:	00 00                	add    BYTE PTR [rax],al
 9a8:	86 02                	xchg   BYTE PTR [rdx],al
 9aa:	00 00                	add    BYTE PTR [rax],al
 9ac:	12 00                	adc    al,BYTE PTR [rax]
	...
 9be:	00 00                	add    BYTE PTR [rax],al
 9c0:	40 02 00             	add    al,BYTE PTR [rax]
 9c3:	00 12                	add    BYTE PTR [rdx],dl
	...
 9d5:	00 00                	add    BYTE PTR [rax],al
 9d7:	00 5f 00             	add    BYTE PTR [rdi+0x0],bl
 9da:	00 00                	add    BYTE PTR [rax],al
 9dc:	12 00                	adc    al,BYTE PTR [rax]
	...
 9ee:	00 00                	add    BYTE PTR [rax],al
 9f0:	ca 00 00             	retf   0x0
 9f3:	00 12                	add    BYTE PTR [rdx],dl
	...
 a05:	00 00                	add    BYTE PTR [rax],al
 a07:	00 8d 01 00 00 12    	add    BYTE PTR [rbp+0x12000001],cl
	...
 a1d:	00 00                	add    BYTE PTR [rax],al
 a1f:	00 7c 01 00          	add    BYTE PTR [rcx+rax*1+0x0],bh
 a23:	00 12                	add    BYTE PTR [rdx],dl
	...
 a35:	00 00                	add    BYTE PTR [rax],al
 a37:	00 3b                	add    BYTE PTR [rbx],bh
 a39:	00 00                	add    BYTE PTR [rax],al
 a3b:	00 20                	add    BYTE PTR [rax],ah
	...
 a4d:	00 00                	add    BYTE PTR [rax],al
 a4f:	00 d6                	add    dh,dl
 a51:	02 00                	add    al,BYTE PTR [rax]
 a53:	00 12                	add    BYTE PTR [rdx],dl
	...
 a65:	00 00                	add    BYTE PTR [rax],al
 a67:	00 8e 02 00 00 12    	add    BYTE PTR [rsi+0x12000002],cl
	...
 a7d:	00 00                	add    BYTE PTR [rax],al
 a7f:	00 11                	add    BYTE PTR [rcx],dl
 a81:	02 00                	add    al,BYTE PTR [rax]
 a83:	00 12                	add    BYTE PTR [rdx],dl
	...
 a95:	00 00                	add    BYTE PTR [rax],al
 a97:	00 fd                	add    ch,bh
 a99:	01 00                	add    DWORD PTR [rax],eax
 a9b:	00 12                	add    BYTE PTR [rdx],dl
	...
 aad:	00 00                	add    BYTE PTR [rax],al
 aaf:	00 6e 01             	add    BYTE PTR [rsi+0x1],ch
 ab2:	00 00                	add    BYTE PTR [rax],al
 ab4:	12 00                	adc    al,BYTE PTR [rax]
	...
 ac6:	00 00                	add    BYTE PTR [rax],al
 ac8:	94                   	xchg   esp,eax
 ac9:	02 00                	add    al,BYTE PTR [rax]
 acb:	00 22                	add    BYTE PTR [rdx],ah
	...
 add:	00 00                	add    BYTE PTR [rax],al
 adf:	00 4f 02             	add    BYTE PTR [rdi+0x2],cl
 ae2:	00 00                	add    BYTE PTR [rax],al
 ae4:	11 00                	adc    DWORD PTR [rax],eax
 ae6:	1b 00                	sbb    eax,DWORD PTR [rax]
 ae8:	60                   	(bad)  
 ae9:	10 01                	adc    BYTE PTR [rcx],al
 aeb:	00 00                	add    BYTE PTR [rax],al
 aed:	00 00                	add    BYTE PTR [rax],al
 aef:	00 08                	add    BYTE PTR [rax],cl
 af1:	00 00                	add    BYTE PTR [rax],al
 af3:	00 00                	add    BYTE PTR [rax],al
 af5:	00 00                	add    BYTE PTR [rax],al
 af7:	00 a3 02 00 00 12    	add    BYTE PTR [rbx+0x12000002],ah
 afd:	00 10                	add    BYTE PTR [rax],dl
 aff:	00 59 96             	add    BYTE PTR [rcx-0x6a],bl
 b02:	00 00                	add    BYTE PTR [rax],al
 b04:	00 00                	add    BYTE PTR [rax],al
 b06:	00 00                	add    BYTE PTR [rax],al
 b08:	3b 01                	cmp    eax,DWORD PTR [rcx]
 b0a:	00 00                	add    BYTE PTR [rax],al
 b0c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynstr:

0000000000000b10 <.dynstr>:
 b10:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 b14:	70 63                	jo     b79 <buffer.4704+0xaf9>
 b16:	61                   	(bad)  
 b17:	70 2e                	jo     b47 <buffer.4704+0xac7>
 b19:	73 6f                	jae    b8a <buffer.4704+0xb0a>
 b1b:	2e 30 2e             	xor    BYTE PTR cs:[rsi],ch
 b1e:	38 00                	cmp    BYTE PTR [rax],al
 b20:	5f                   	pop    rdi
 b21:	49 54                	rex.WB push r12
 b23:	4d 5f                	rex.WRB pop r15
 b25:	64 65 72 65          	fs gs jb b8e <buffer.4704+0xb0e>
 b29:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 b30:	4d 
 b31:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 b33:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b34:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b35:	65 54                	gs push rsp
 b37:	61                   	(bad)  
 b38:	62                   	(bad)  
 b39:	6c                   	ins    BYTE PTR es:[rdi],dx
 b3a:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
 b3e:	67 6d                	ins    DWORD PTR es:[edi],dx
 b40:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b41:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b42:	5f                   	pop    rdi
 b43:	73 74                	jae    bb9 <buffer.4704+0xb39>
 b45:	61                   	(bad)  
 b46:	72 74                	jb     bbc <buffer.4704+0xb3c>
 b48:	5f                   	pop    rdi
 b49:	5f                   	pop    rdi
 b4a:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 b4d:	54                   	push   rsp
 b4e:	4d 5f                	rex.WRB pop r15
 b50:	72 65                	jb     bb7 <buffer.4704+0xb37>
 b52:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 b59:	4d 
 b5a:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 b5c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b5d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b5e:	65 54                	gs push rsp
 b60:	61                   	(bad)  
 b61:	62                   	(bad)  
 b62:	6c                   	ins    BYTE PTR es:[rdi],dx
 b63:	65 00 70 63          	add    BYTE PTR gs:[rax+0x63],dh
 b67:	61                   	(bad)  
 b68:	70 5f                	jo     bc9 <buffer.4704+0xb49>
 b6a:	6c                   	ins    BYTE PTR es:[rdi],dx
 b6b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b6c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b6d:	70 00                	jo     b6f <buffer.4704+0xaef>
 b6f:	70 63                	jo     bd4 <buffer.4704+0xb54>
 b71:	61                   	(bad)  
 b72:	70 5f                	jo     bd3 <buffer.4704+0xb53>
 b74:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b75:	70 65                	jo     bdc <buffer.4704+0xb5c>
 b77:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b78:	5f                   	pop    rdi
 b79:	6c                   	ins    BYTE PTR es:[rdi],dx
 b7a:	69 76 65 00 6c 69 62 	imul   esi,DWORD PTR [rsi+0x65],0x62696c00
 b81:	70 74                	jo     bf7 <buffer.4704+0xb77>
 b83:	68 72 65 61 64       	push   0x64616572
 b88:	2e 73 6f             	cs jae bfa <buffer.4704+0xb7a>
 b8b:	2e 30 00             	xor    BYTE PTR cs:[rax],al
 b8e:	73 65                	jae    bf5 <buffer.4704+0xb75>
 b90:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b91:	64 00 61 63          	add    BYTE PTR fs:[rcx+0x63],ah
 b95:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
 b98:	74 00                	je     b9a <buffer.4704+0xb1a>
 b9a:	70 74                	jo     c10 <buffer.4704+0xb90>
 b9c:	68 72 65 61 64       	push   0x64616572
 ba1:	5f                   	pop    rdi
 ba2:	6a 6f                	push   0x6f
 ba4:	69 6e 00 70 74 68 72 	imul   ebp,DWORD PTR [rsi+0x0],0x72687470
 bab:	65 61                	gs (bad) 
 bad:	64 5f                	fs pop rdi
 baf:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
 bb2:	61                   	(bad)  
 bb3:	74 65                	je     c1a <buffer.4704+0xb9a>
 bb5:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
 bb8:	61                   	(bad)  
 bb9:	64 00 6c 69 62       	add    BYTE PTR fs:[rcx+rbp*2+0x62],ch
 bbe:	73 71                	jae    c31 <buffer.4704+0xbb1>
 bc0:	6c                   	ins    BYTE PTR es:[rdi],dx
 bc1:	69 74 65 33 2e 73 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x2e6f732e
 bc8:	2e 
 bc9:	30 00                	xor    BYTE PTR [rax],al
 bcb:	73 71                	jae    c3e <buffer.4704+0xbbe>
 bcd:	6c                   	ins    BYTE PTR es:[rdi],dx
 bce:	69 74 65 33 5f 65 72 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x7272655f
 bd5:	72 
 bd6:	6d                   	ins    DWORD PTR es:[rdi],dx
 bd7:	73 67                	jae    c40 <buffer.4704+0xbc0>
 bd9:	00 73 71             	add    BYTE PTR [rbx+0x71],dh
 bdc:	6c                   	ins    BYTE PTR es:[rdi],dx
 bdd:	69 74 65 33 5f 66 72 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6572665f
 be4:	65 
 be5:	65 00 73 71          	add    BYTE PTR gs:[rbx+0x71],dh
 be9:	6c                   	ins    BYTE PTR es:[rdi],dx
 bea:	69 74 65 33 5f 65 78 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6578655f
 bf1:	65 
 bf2:	63 00                	movsxd eax,DWORD PTR [rax]
 bf4:	73 71                	jae    c67 <buffer.4704+0xbe7>
 bf6:	6c                   	ins    BYTE PTR es:[rdi],dx
 bf7:	69 74 65 33 5f 63 6c 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6f6c635f
 bfe:	6f 
 bff:	73 65                	jae    c66 <buffer.4704+0xbe6>
 c01:	00 73 71             	add    BYTE PTR [rbx+0x71],dh
 c04:	6c                   	ins    BYTE PTR es:[rdi],dx
 c05:	69 74 65 33 5f 6f 70 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x65706f5f
 c0c:	65 
 c0d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c0e:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 c12:	6c                   	ins    BYTE PTR es:[rdi],dx
 c13:	75 61                	jne    c76 <buffer.4704+0xbf6>
 c15:	35 2e 33 2e 73       	xor    eax,0x732e332e
 c1a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c1b:	2e 30 00             	xor    BYTE PTR cs:[rax],al
 c1e:	6c                   	ins    BYTE PTR es:[rdi],dx
 c1f:	75 61                	jne    c82 <buffer.4704+0xc02>
 c21:	5f                   	pop    rdi
 c22:	73 65                	jae    c89 <buffer.4704+0xc09>
 c24:	74 74                	je     c9a <buffer.4704+0xc1a>
 c26:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c27:	70 00                	jo     c29 <buffer.4704+0xba9>
 c29:	6c                   	ins    BYTE PTR es:[rdi],dx
 c2a:	75 61                	jne    c8d <buffer.4704+0xc0d>
 c2c:	4c 5f                	rex.WR pop rdi
 c2e:	6c                   	ins    BYTE PTR es:[rdi],dx
 c2f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c30:	61                   	(bad)  
 c31:	64 66 69 6c 65 78 00 	imul   bp,WORD PTR fs:[rbp+riz*2+0x78],0x6c00
 c38:	6c 
 c39:	75 61                	jne    c9c <buffer.4704+0xc1c>
 c3b:	4c 5f                	rex.WR pop rdi
 c3d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c3e:	65 77 73             	gs ja  cb4 <buffer.4704+0xc34>
 c41:	74 61                	je     ca4 <buffer.4704+0xc24>
 c43:	74 65                	je     caa <buffer.4704+0xc2a>
 c45:	00 6c 75 61          	add    BYTE PTR [rbp+rsi*2+0x61],ch
 c49:	5f                   	pop    rdi
 c4a:	63 6c 6f 73          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
 c4e:	65 00 6c 75 61       	add    BYTE PTR gs:[rbp+rsi*2+0x61],ch
 c53:	5f                   	pop    rdi
 c54:	70 63                	jo     cb9 <buffer.4704+0xc39>
 c56:	61                   	(bad)  
 c57:	6c                   	ins    BYTE PTR es:[rdi],dx
 c58:	6c                   	ins    BYTE PTR es:[rdi],dx
 c59:	6b 00 6c             	imul   eax,DWORD PTR [rax],0x6c
 c5c:	75 61                	jne    cbf <buffer.4704+0xc3f>
 c5e:	5f                   	pop    rdi
 c5f:	67 65 74 74          	addr32 gs je cd7 <buffer.4704+0xc57>
 c63:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c64:	70 00                	jo     c66 <buffer.4704+0xbe6>
 c66:	6c                   	ins    BYTE PTR es:[rdi],dx
 c67:	75 61                	jne    cca <buffer.4704+0xc4a>
 c69:	4c 5f                	rex.WR pop rdi
 c6b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c6c:	70 65                	jo     cd3 <buffer.4704+0xc53>
 c6e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c6f:	6c                   	ins    BYTE PTR es:[rdi],dx
 c70:	69 62 73 00 6c 69 62 	imul   esp,DWORD PTR [rdx+0x73],0x62696c00
 c77:	63 2e                	movsxd ebp,DWORD PTR [rsi]
 c79:	73 6f                	jae    cea <buffer.4704+0xc6a>
 c7b:	2e 36 00 73 6f       	cs add BYTE PTR ss:[rbx+0x6f],dh
 c80:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
 c83:	74 00                	je     c85 <buffer.4704+0xc05>
 c85:	73 74                	jae    cfb <buffer.4704+0xc7b>
 c87:	72 63                	jb     cec <buffer.4704+0xc6c>
 c89:	70 79                	jo     d04 <buffer.4704+0xc84>
 c8b:	00 65 78             	add    BYTE PTR [rbp+0x78],ah
 c8e:	69 74 00 68 74 6f 6e 	imul   esi,DWORD PTR [rax+rax*1+0x68],0x6c6e6f74
 c95:	6c 
 c96:	00 68 74             	add    BYTE PTR [rax+0x74],ch
 c99:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c9a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c9b:	73 00                	jae    c9d <buffer.4704+0xc1d>
 c9d:	73 70                	jae    d0f <buffer.4704+0xc8f>
 c9f:	72 69                	jb     d0a <buffer.4704+0xc8a>
 ca1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 ca2:	74 66                	je     d0a <buffer.4704+0xc8a>
 ca4:	00 66 6f             	add    BYTE PTR [rsi+0x6f],ah
 ca7:	70 65                	jo     d0e <buffer.4704+0xc8e>
 ca9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 caa:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 cad:	72 6e                	jb     d1d <buffer.4704+0xc9d>
 caf:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
 cb2:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
 cb5:	67 65 78 65          	addr32 gs js d1e <buffer.4704+0xc9e>
 cb9:	63 00                	movsxd eax,DWORD PTR [rax]
 cbb:	70 65                	jo     d22 <buffer.4704+0xca2>
 cbd:	72 72                	jb     d31 <buffer.4704+0xcb1>
 cbf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 cc0:	72 00                	jb     cc2 <buffer.4704+0xc42>
 cc2:	73 69                	jae    d2d <buffer.4704+0xcad>
 cc4:	67 6e                	outs   dx,BYTE PTR ds:[esi]
 cc6:	61                   	(bad)  
 cc7:	6c                   	ins    BYTE PTR es:[rdi],dx
 cc8:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 ccb:	72 6e                	jb     d3b <buffer.4704+0xcbb>
 ccd:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
 cd0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 cd3:	73 74                	jae    d49 <buffer.4704+0xcc9>
 cd5:	61                   	(bad)  
 cd6:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 cd9:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 cdc:	5f                   	pop    rdi
 cdd:	66 61                	data16 (bad) 
 cdf:	69 6c 00 70 75 74 63 	imul   ebp,DWORD PTR [rax+rax*1+0x70],0x68637475
 ce6:	68 
 ce7:	61                   	(bad)  
 ce8:	72 00                	jb     cea <buffer.4704+0xc6a>
 cea:	6c                   	ins    BYTE PTR es:[rdi],dx
 ceb:	69 73 74 65 6e 00 73 	imul   esi,DWORD PTR [rbx+0x74],0x73006e65
 cf2:	74 72                	je     d66 <buffer.4704+0xce6>
 cf4:	74 6f                	je     d65 <buffer.4704+0xce5>
 cf6:	6b 00 73             	imul   eax,DWORD PTR [rax],0x73
 cf9:	74 72                	je     d6d <buffer.4704+0xced>
 cfb:	74 6f                	je     d6c <buffer.4704+0xcec>
 cfd:	6c                   	ins    BYTE PTR es:[rdi],dx
 cfe:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 d01:	72 6c                	jb     d6f <buffer.4704+0xcef>
 d03:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 d05:	00 6d 65             	add    BYTE PTR [rbp+0x65],ch
 d08:	6d                   	ins    DWORD PTR es:[rdi],dx
 d09:	73 65                	jae    d70 <buffer.4704+0xcf0>
 d0b:	74 00                	je     d0d <buffer.4704+0xc8d>
 d0d:	73 74                	jae    d83 <buffer.4704+0xd03>
 d0f:	72 73                	jb     d84 <buffer.4704+0xd04>
 d11:	74 72                	je     d85 <buffer.4704+0xd05>
 d13:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 d16:	72 63                	jb     d7b <buffer.4704+0xcfb>
 d18:	73 70                	jae    d8a <buffer.4704+0xd0a>
 d1a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d1b:	00 62 69             	add    BYTE PTR [rdx+0x69],ah
 d1e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d1f:	64 00 67 65          	add    BYTE PTR fs:[rdi+0x65],ah
 d23:	74 64                	je     d89 <buffer.4704+0xd09>
 d25:	65 6c                	gs ins BYTE PTR es:[rdi],dx
 d27:	69 6d 00 67 65 74 6f 	imul   ebp,DWORD PTR [rbp+0x0],0x6f746567
 d2e:	70 74                	jo     da4 <buffer.4704+0xd24>
 d30:	00 66 70             	add    BYTE PTR [rsi+0x70],ah
 d33:	75 74                	jne    da9 <buffer.4704+0xd29>
 d35:	73 00                	jae    d37 <buffer.4704+0xcb7>
 d37:	66 63 6c 6f 73       	movsxd bp,DWORD PTR [rdi+rbp*2+0x73]
 d3c:	65 00 73 65          	add    BYTE PTR gs:[rbx+0x65],dh
 d40:	74 73                	je     db5 <buffer.4704+0xd35>
 d42:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d43:	63 6b 6f             	movsxd ebp,DWORD PTR [rbx+0x6f]
 d46:	70 74                	jo     dbc <buffer.4704+0xd3c>
 d48:	00 6d 61             	add    BYTE PTR [rbp+0x61],ch
 d4b:	6c                   	ins    BYTE PTR es:[rdi],dx
 d4c:	6c                   	ins    BYTE PTR es:[rdi],dx
 d4d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d4e:	63 00                	movsxd eax,DWORD PTR [rax]
 d50:	73 74                	jae    dc6 <buffer.4704+0xd46>
 d52:	72 63                	jb     db7 <buffer.4704+0xd37>
 d54:	61                   	(bad)  
 d55:	74 00                	je     d57 <buffer.4704+0xcd7>
 d57:	72 65                	jb     dbe <buffer.4704+0xd3e>
 d59:	67 63 6f 6d          	movsxd ebp,DWORD PTR [edi+0x6d]
 d5d:	70 00                	jo     d5f <buffer.4704+0xcdf>
 d5f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d60:	70 74                	jo     dd6 <buffer.4704+0xd56>
 d62:	61                   	(bad)  
 d63:	72 67                	jb     dcc <buffer.4704+0xd4c>
 d65:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 d68:	72 6e                	jb     dd8 <buffer.4704+0xd58>
 d6a:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
 d6d:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
 d70:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d71:	69 00 62 61 63 6b    	imul   eax,DWORD PTR [rax],0x6b636162
 d77:	74 72                	je     deb <buffer.4704+0xd6b>
 d79:	61                   	(bad)  
 d7a:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
 d7d:	6c                   	ins    BYTE PTR es:[rdi],dx
 d7e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d7f:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
 d82:	74 69                	je     ded <buffer.4704+0xd6d>
 d84:	6d                   	ins    DWORD PTR es:[rdi],dx
 d85:	65 00 73 74          	add    BYTE PTR gs:[rbx+0x74],dh
 d89:	72 63                	jb     dee <buffer.4704+0xd6e>
 d8b:	68 72 00 66 70       	push   0x70660072
 d90:	72 69                	jb     dfb <buffer.4704+0xd7b>
 d92:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d93:	74 66                	je     dfb <buffer.4704+0xd7b>
 d95:	00 67 65             	add    BYTE PTR [rdi+0x65],ah
 d98:	74 6c                	je     e06 <buffer.4704+0xd86>
 d9a:	69 6e 65 00 73 6c 65 	imul   ebp,DWORD PTR [rsi+0x65],0x656c7300
 da1:	65 70 00             	gs jo  da4 <buffer.4704+0xd24>
 da4:	5f                   	pop    rdi
 da5:	5f                   	pop    rdi
 da6:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
 da9:	5f                   	pop    rdi
 daa:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 db0:	7a 65                	jp     e17 <buffer.4704+0xd97>
 db2:	00 69 73             	add    BYTE PTR [rcx+0x73],ch
 db5:	64 69 67 69 74 00 62 	imul   esp,DWORD PTR fs:[rdi+0x69],0x61620074
 dbc:	61 
 dbd:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
 dc0:	72 61                	jb     e23 <buffer.4704+0xda3>
 dc2:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
 dc5:	73 79                	jae    e40 <buffer.4704+0xdc0>
 dc7:	6d                   	ins    DWORD PTR es:[rdi],dx
 dc8:	62                   	(bad)  
 dc9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 dca:	6c                   	ins    BYTE PTR es:[rdi],dx
 dcb:	73 00                	jae    dcd <buffer.4704+0xd4d>
 dcd:	73 74                	jae    e43 <buffer.4704+0xdc3>
 dcf:	72 63                	jb     e34 <buffer.4704+0xdb4>
 dd1:	6d                   	ins    DWORD PTR es:[rdi],dx
 dd2:	70 00                	jo     dd4 <buffer.4704+0xd54>
 dd4:	5f                   	pop    rdi
 dd5:	5f                   	pop    rdi
 dd6:	6c                   	ins    BYTE PTR es:[rdi],dx
 dd7:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 dde:	72 74                	jb     e54 <buffer.4704+0xdd4>
 de0:	5f                   	pop    rdi
 de1:	6d                   	ins    DWORD PTR es:[rdi],dx
 de2:	61                   	(bad)  
 de3:	69 6e 00 6e 74 6f 68 	imul   ebp,DWORD PTR [rsi+0x0],0x686f746e
 dea:	6c                   	ins    BYTE PTR es:[rdi],dx
 deb:	00 6e 74             	add    BYTE PTR [rsi+0x74],ch
 dee:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 def:	68 73 00 73 6e       	push   0x6e730073
 df4:	70 72                	jo     e68 <buffer.4704+0xde8>
 df6:	69 6e 74 66 00 4c 55 	imul   ebp,DWORD PTR [rsi+0x74],0x554c0066
 dfd:	41 5f                	pop    r15
 dff:	35 2e 33 00 47       	xor    eax,0x4700332e
 e04:	4c                   	rex.WR
 e05:	49                   	rex.WB
 e06:	42                   	rex.X
 e07:	43 5f                	rex.XB pop r15
 e09:	32 2e                	xor    ch,BYTE PTR [rsi]
 e0b:	32 2e                	xor    ch,BYTE PTR [rsi]
 e0d:	35 00 47 4c 49       	xor    eax,0x494c4700
 e12:	42                   	rex.X
 e13:	43 5f                	rex.XB pop r15
 e15:	32 2e                	xor    ch,BYTE PTR [rsi]
 e17:	33 2e                	xor    ebp,DWORD PTR [rsi]
 e19:	34 00                	xor    al,0x0
 e1b:	47                   	rex.RXB
 e1c:	4c                   	rex.WR
 e1d:	49                   	rex.WB
 e1e:	42                   	rex.X
 e1f:	43 5f                	rex.XB pop r15
 e21:	32 2e                	xor    ch,BYTE PTR [rsi]
 e23:	34 00                	xor    al,0x0

Disassembly of section .gnu.version:

0000000000000e26 <.gnu.version>:
 e26:	00 00                	add    BYTE PTR [rax],al
 e28:	02 00                	add    al,BYTE PTR [rax]
 e2a:	02 00                	add    al,BYTE PTR [rax]
 e2c:	03 00                	add    eax,DWORD PTR [rax]
 e2e:	02 00                	add    al,BYTE PTR [rax]
 e30:	02 00                	add    al,BYTE PTR [rax]
 e32:	02 00                	add    al,BYTE PTR [rax]
 e34:	00 00                	add    BYTE PTR [rax],al
 e36:	02 00                	add    al,BYTE PTR [rax]
 e38:	04 00                	add    al,0x0
 e3a:	04 00                	add    al,0x0
 e3c:	02 00                	add    al,BYTE PTR [rax]
 e3e:	02 00                	add    al,BYTE PTR [rax]
 e40:	02 00                	add    al,BYTE PTR [rax]
 e42:	00 00                	add    BYTE PTR [rax],al
 e44:	00 00                	add    BYTE PTR [rax],al
 e46:	02 00                	add    al,BYTE PTR [rax]
 e48:	02 00                	add    al,BYTE PTR [rax]
 e4a:	02 00                	add    al,BYTE PTR [rax]
 e4c:	05 00 02 00 03       	add    eax,0x3000200
 e51:	00 02                	add    BYTE PTR [rdx],al
 e53:	00 02                	add    BYTE PTR [rdx],al
 e55:	00 02                	add    BYTE PTR [rdx],al
 e57:	00 02                	add    BYTE PTR [rdx],al
 e59:	00 02                	add    BYTE PTR [rdx],al
 e5b:	00 02                	add    BYTE PTR [rdx],al
 e5d:	00 02                	add    BYTE PTR [rdx],al
 e5f:	00 03                	add    BYTE PTR [rbx],al
 e61:	00 02                	add    BYTE PTR [rdx],al
 e63:	00 02                	add    BYTE PTR [rdx],al
 e65:	00 03                	add    BYTE PTR [rbx],al
 e67:	00 02                	add    BYTE PTR [rdx],al
 e69:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 e6c:	00 00                	add    BYTE PTR [rax],al
 e6e:	02 00                	add    al,BYTE PTR [rax]
 e70:	02 00                	add    al,BYTE PTR [rax]
 e72:	02 00                	add    al,BYTE PTR [rax]
 e74:	00 00                	add    BYTE PTR [rax],al
 e76:	02 00                	add    al,BYTE PTR [rax]
 e78:	00 00                	add    BYTE PTR [rax],al
 e7a:	02 00                	add    al,BYTE PTR [rax]
 e7c:	04 00                	add    al,0x0
 e7e:	00 00                	add    BYTE PTR [rax],al
 e80:	02 00                	add    al,BYTE PTR [rax]
 e82:	02 00                	add    al,BYTE PTR [rax]
 e84:	04 00                	add    al,0x0
 e86:	06                   	(bad)  
 e87:	00 02                	add    BYTE PTR [rdx],al
 e89:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 e8c:	02 00                	add    al,BYTE PTR [rax]
 e8e:	02 00                	add    al,BYTE PTR [rax]
 e90:	02 00                	add    al,BYTE PTR [rax]
 e92:	02 00                	add    al,BYTE PTR [rax]
 e94:	03 00                	add    eax,DWORD PTR [rax]
 e96:	04 00                	add    al,0x0
 e98:	02 00                	add    al,BYTE PTR [rax]
 e9a:	03 00                	add    eax,DWORD PTR [rax]
 e9c:	02 00                	add    al,BYTE PTR [rax]
 e9e:	02 00                	add    al,BYTE PTR [rax]
 ea0:	02 00                	add    al,BYTE PTR [rax]
 ea2:	00 00                	add    BYTE PTR [rax],al
 ea4:	00 00                	add    BYTE PTR [rax],al
 ea6:	02 00                	add    al,BYTE PTR [rax]
 ea8:	02 00                	add    al,BYTE PTR [rax]
 eaa:	00 00                	add    BYTE PTR [rax],al
 eac:	02 00                	add    al,BYTE PTR [rax]
 eae:	02 00                	add    al,BYTE PTR [rax]
 eb0:	02 00                	add    al,BYTE PTR [rax]
 eb2:	02 00                	add    al,BYTE PTR [rax]
 eb4:	02 00                	add    al,BYTE PTR [rax]
 eb6:	02 00                	add    al,BYTE PTR [rax]
 eb8:	02 00                	add    al,BYTE PTR [rax]
 eba:	01 00                	add    DWORD PTR [rax],eax

Disassembly of section .gnu.version_r:

0000000000000ec0 <.gnu.version_r>:
 ec0:	01 00                	add    DWORD PTR [rax],eax
 ec2:	01 00                	add    DWORD PTR [rax],eax
 ec4:	ff 00                	inc    DWORD PTR [rax]
 ec6:	00 00                	add    BYTE PTR [rax],al
 ec8:	10 00                	adc    BYTE PTR [rax],al
 eca:	00 00                	add    BYTE PTR [rax],al
 ecc:	20 00                	and    BYTE PTR [rax],al
 ece:	00 00                	add    BYTE PTR [rax],al
 ed0:	43 28 97 01 00 00 04 	rex.XB sub BYTE PTR [r15+0x4000001],dl
 ed7:	00 eb                	add    bl,ch
 ed9:	02 00                	add    al,BYTE PTR [rax]
 edb:	00 00                	add    BYTE PTR [rax],al
 edd:	00 00                	add    BYTE PTR [rax],al
 edf:	00 01                	add    BYTE PTR [rcx],al
 ee1:	00 01                	add    BYTE PTR [rcx],al
 ee3:	00 6e 00             	add    BYTE PTR [rsi+0x0],ch
 ee6:	00 00                	add    BYTE PTR [rax],al
 ee8:	10 00                	adc    BYTE PTR [rax],al
 eea:	00 00                	add    BYTE PTR [rax],al
 eec:	20 00                	and    BYTE PTR [rax],al
 eee:	00 00                	add    BYTE PTR [rax],al
 ef0:	75 1a                	jne    f0c <buffer.4704+0xe8c>
 ef2:	69 09 00 00 03 00    	imul   ecx,DWORD PTR [rcx],0x30000
 ef8:	f3 02 00             	repz add al,BYTE PTR [rax]
 efb:	00 00                	add    BYTE PTR [rax],al
 efd:	00 00                	add    BYTE PTR [rax],al
 eff:	00 01                	add    BYTE PTR [rcx],al
 f01:	00 03                	add    BYTE PTR [rbx],al
 f03:	00 64 01 00          	add    BYTE PTR [rcx+rax*1+0x0],ah
 f07:	00 10                	add    BYTE PTR [rax],dl
 f09:	00 00                	add    BYTE PTR [rax],al
 f0b:	00 00                	add    BYTE PTR [rax],al
 f0d:	00 00                	add    BYTE PTR [rax],al
 f0f:	00 74 19 69          	add    BYTE PTR [rcx+rbx*1+0x69],dh
 f13:	09 00                	or     DWORD PTR [rax],eax
 f15:	00 06                	add    BYTE PTR [rsi],al
 f17:	00 ff                	add    bh,bh
 f19:	02 00                	add    al,BYTE PTR [rax]
 f1b:	00 10                	add    BYTE PTR [rax],dl
 f1d:	00 00                	add    BYTE PTR [rax],al
 f1f:	00 14 69             	add    BYTE PTR [rcx+rbp*2],dl
 f22:	69 0d 00 00 05 00 0b 	imul   ecx,DWORD PTR [rip+0x50000],0x30b        # 50f2c <rules+0x3fe8c>
 f29:	03 00 00 
 f2c:	10 00                	adc    BYTE PTR [rax],al
 f2e:	00 00                	add    BYTE PTR [rax],al
 f30:	75 1a                	jne    f4c <buffer.4704+0xecc>
 f32:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
 f38:	f3 02 00             	repz add al,BYTE PTR [rax]
 f3b:	00 00                	add    BYTE PTR [rax],al
 f3d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000000f40 <.rela.dyn>:
     f40:	68 0b 01 00 00       	push   0x10b
     f45:	00 00                	add    BYTE PTR [rax],al
     f47:	00 08                	add    BYTE PTR [rax],cl
     f49:	00 00                	add    BYTE PTR [rax],al
     f4b:	00 00                	add    BYTE PTR [rax],al
     f4d:	00 00                	add    BYTE PTR [rax],al
     f4f:	00 80 29 00 00 00    	add    BYTE PTR [rax+0x29],al
     f55:	00 00                	add    BYTE PTR [rax],al
     f57:	00 70 0b             	add    BYTE PTR [rax+0xb],dh
     f5a:	01 00                	add    DWORD PTR [rax],eax
     f5c:	00 00                	add    BYTE PTR [rax],al
     f5e:	00 00                	add    BYTE PTR [rax],al
     f60:	08 00                	or     BYTE PTR [rax],al
     f62:	00 00                	add    BYTE PTR [rax],al
     f64:	00 00                	add    BYTE PTR [rax],al
     f66:	00 00                	add    BYTE PTR [rax],al
     f68:	40 29 00             	rex sub DWORD PTR [rax],eax
     f6b:	00 00                	add    BYTE PTR [rax],al
     f6d:	00 00                	add    BYTE PTR [rax],al
     f6f:	00 08                	add    BYTE PTR [rax],cl
     f71:	10 01                	adc    BYTE PTR [rcx],al
     f73:	00 00                	add    BYTE PTR [rax],al
     f75:	00 00                	add    BYTE PTR [rax],al
     f77:	00 08                	add    BYTE PTR [rax],cl
     f79:	00 00                	add    BYTE PTR [rax],al
     f7b:	00 00                	add    BYTE PTR [rax],al
     f7d:	00 00                	add    BYTE PTR [rax],al
     f7f:	00 08                	add    BYTE PTR [rax],cl
     f81:	10 01                	adc    BYTE PTR [rcx],al
     f83:	00 00                	add    BYTE PTR [rax],al
     f85:	00 00                	add    BYTE PTR [rax],al
     f87:	00 28                	add    BYTE PTR [rax],ch
     f89:	10 01                	adc    BYTE PTR [rcx],al
     f8b:	00 00                	add    BYTE PTR [rax],al
     f8d:	00 00                	add    BYTE PTR [rax],al
     f8f:	00 08                	add    BYTE PTR [rax],cl
     f91:	00 00                	add    BYTE PTR [rax],al
     f93:	00 00                	add    BYTE PTR [rax],al
     f95:	00 00                	add    BYTE PTR [rax],al
     f97:	00 04 c0             	add    BYTE PTR [rax+rax*8],al
     f9a:	00 00                	add    BYTE PTR [rax],al
     f9c:	00 00                	add    BYTE PTR [rax],al
     f9e:	00 00                	add    BYTE PTR [rax],al
     fa0:	30 10                	xor    BYTE PTR [rax],dl
     fa2:	01 00                	add    DWORD PTR [rax],eax
     fa4:	00 00                	add    BYTE PTR [rax],al
     fa6:	00 00                	add    BYTE PTR [rax],al
     fa8:	08 00                	or     BYTE PTR [rax],al
     faa:	00 00                	add    BYTE PTR [rax],al
     fac:	00 00                	add    BYTE PTR [rax],al
     fae:	00 00                	add    BYTE PTR [rax],al
     fb0:	1a c0                	sbb    al,al
     fb2:	00 00                	add    BYTE PTR [rax],al
     fb4:	00 00                	add    BYTE PTR [rax],al
     fb6:	00 00                	add    BYTE PTR [rax],al
     fb8:	38 10                	cmp    BYTE PTR [rax],dl
     fba:	01 00                	add    DWORD PTR [rax],eax
     fbc:	00 00                	add    BYTE PTR [rax],al
     fbe:	00 00                	add    BYTE PTR [rax],al
     fc0:	08 00                	or     BYTE PTR [rax],al
     fc2:	00 00                	add    BYTE PTR [rax],al
     fc4:	00 00                	add    BYTE PTR [rax],al
     fc6:	00 00                	add    BYTE PTR [rax],al
     fc8:	34 c0                	xor    al,0xc0
     fca:	00 00                	add    BYTE PTR [rax],al
     fcc:	00 00                	add    BYTE PTR [rax],al
     fce:	00 00                	add    BYTE PTR [rax],al
     fd0:	d8 0f                	fmul   DWORD PTR [rdi]
     fd2:	01 00                	add    DWORD PTR [rax],eax
     fd4:	00 00                	add    BYTE PTR [rax],al
     fd6:	00 00                	add    BYTE PTR [rax],al
     fd8:	06                   	(bad)  
     fd9:	00 00                	add    BYTE PTR [rax],al
     fdb:	00 07                	add    BYTE PTR [rdi],al
	...
     fe5:	00 00                	add    BYTE PTR [rax],al
     fe7:	00 e0                	add    al,ah
     fe9:	0f 01 00             	sgdt   [rax]
     fec:	00 00                	add    BYTE PTR [rax],al
     fee:	00 00                	add    BYTE PTR [rax],al
     ff0:	06                   	(bad)  
     ff1:	00 00                	add    BYTE PTR [rax],al
     ff3:	00 21                	add    BYTE PTR [rcx],ah
	...
     ffd:	00 00                	add    BYTE PTR [rax],al
     fff:	00 e8                	add    al,ch
    1001:	0f 01 00             	sgdt   [rax]
    1004:	00 00                	add    BYTE PTR [rax],al
    1006:	00 00                	add    BYTE PTR [rax],al
    1008:	06                   	(bad)  
    1009:	00 00                	add    BYTE PTR [rax],al
    100b:	00 27                	add    BYTE PTR [rdi],ah
	...
    1015:	00 00                	add    BYTE PTR [rax],al
    1017:	00 f0                	add    al,dh
    1019:	0f 01 00             	sgdt   [rax]
    101c:	00 00                	add    BYTE PTR [rax],al
    101e:	00 00                	add    BYTE PTR [rax],al
    1020:	06                   	(bad)  
    1021:	00 00                	add    BYTE PTR [rax],al
    1023:	00 42 00             	add    BYTE PTR [rdx+0x0],al
	...
    102e:	00 00                	add    BYTE PTR [rax],al
    1030:	f8                   	clc    
    1031:	0f 01 00             	sgdt   [rax]
    1034:	00 00                	add    BYTE PTR [rax],al
    1036:	00 00                	add    BYTE PTR [rax],al
    1038:	06                   	(bad)  
    1039:	00 00                	add    BYTE PTR [rax],al
    103b:	00 48 00             	add    BYTE PTR [rax+0x0],cl
	...
    1046:	00 00                	add    BYTE PTR [rax],al
    1048:	60                   	(bad)  
    1049:	10 01                	adc    BYTE PTR [rcx],al
    104b:	00 00                	add    BYTE PTR [rax],al
    104d:	00 00                	add    BYTE PTR [rax],al
    104f:	00 05 00 00 00 49    	add    BYTE PTR [rip+0x49000000],al        # 49001055 <_end+0x48ec6035>
	...

Disassembly of section .rela.plt:

0000000000001060 <.rela.plt>:
    1060:	c0 0d 01 00 00 00 00 	ror    BYTE PTR [rip+0x1],0x0        # 1068 <buffer.4704+0xfe8>
    1067:	00 07                	add    BYTE PTR [rdi],al
    1069:	00 00                	add    BYTE PTR [rax],al
    106b:	00 01                	add    BYTE PTR [rcx],al
	...
    1075:	00 00                	add    BYTE PTR [rax],al
    1077:	00 c8                	add    al,cl
    1079:	0d 01 00 00 00       	or     eax,0x1
    107e:	00 00                	add    BYTE PTR [rax],al
    1080:	07                   	(bad)  
    1081:	00 00                	add    BYTE PTR [rax],al
    1083:	00 02                	add    BYTE PTR [rdx],al
	...
    108d:	00 00                	add    BYTE PTR [rax],al
    108f:	00 d0                	add    al,dl
    1091:	0d 01 00 00 00       	or     eax,0x1
    1096:	00 00                	add    BYTE PTR [rax],al
    1098:	07                   	(bad)  
    1099:	00 00                	add    BYTE PTR [rax],al
    109b:	00 03                	add    BYTE PTR [rbx],al
	...
    10a5:	00 00                	add    BYTE PTR [rax],al
    10a7:	00 d8                	add    al,bl
    10a9:	0d 01 00 00 00       	or     eax,0x1
    10ae:	00 00                	add    BYTE PTR [rax],al
    10b0:	07                   	(bad)  
    10b1:	00 00                	add    BYTE PTR [rax],al
    10b3:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
    10be:	00 00                	add    BYTE PTR [rax],al
    10c0:	e0 0d                	loopne 10cf <buffer.4704+0x104f>
    10c2:	01 00                	add    DWORD PTR [rax],eax
    10c4:	00 00                	add    BYTE PTR [rax],al
    10c6:	00 00                	add    BYTE PTR [rax],al
    10c8:	07                   	(bad)  
    10c9:	00 00                	add    BYTE PTR [rax],al
    10cb:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 10d1 <buffer.4704+0x1051>
    10d1:	00 00                	add    BYTE PTR [rax],al
    10d3:	00 00                	add    BYTE PTR [rax],al
    10d5:	00 00                	add    BYTE PTR [rax],al
    10d7:	00 e8                	add    al,ch
    10d9:	0d 01 00 00 00       	or     eax,0x1
    10de:	00 00                	add    BYTE PTR [rax],al
    10e0:	07                   	(bad)  
    10e1:	00 00                	add    BYTE PTR [rax],al
    10e3:	00 06                	add    BYTE PTR [rsi],al
	...
    10ed:	00 00                	add    BYTE PTR [rax],al
    10ef:	00 f0                	add    al,dh
    10f1:	0d 01 00 00 00       	or     eax,0x1
    10f6:	00 00                	add    BYTE PTR [rax],al
    10f8:	07                   	(bad)  
    10f9:	00 00                	add    BYTE PTR [rax],al
    10fb:	00 08                	add    BYTE PTR [rax],cl
	...
    1105:	00 00                	add    BYTE PTR [rax],al
    1107:	00 f8                	add    al,bh
    1109:	0d 01 00 00 00       	or     eax,0x1
    110e:	00 00                	add    BYTE PTR [rax],al
    1110:	07                   	(bad)  
    1111:	00 00                	add    BYTE PTR [rax],al
    1113:	00 09                	add    BYTE PTR [rcx],cl
	...
    1121:	0e                   	(bad)  
    1122:	01 00                	add    DWORD PTR [rax],eax
    1124:	00 00                	add    BYTE PTR [rax],al
    1126:	00 00                	add    BYTE PTR [rax],al
    1128:	07                   	(bad)  
    1129:	00 00                	add    BYTE PTR [rax],al
    112b:	00 0a                	add    BYTE PTR [rdx],cl
	...
    1135:	00 00                	add    BYTE PTR [rax],al
    1137:	00 08                	add    BYTE PTR [rax],cl
    1139:	0e                   	(bad)  
    113a:	01 00                	add    DWORD PTR [rax],eax
    113c:	00 00                	add    BYTE PTR [rax],al
    113e:	00 00                	add    BYTE PTR [rax],al
    1140:	07                   	(bad)  
    1141:	00 00                	add    BYTE PTR [rax],al
    1143:	00 0b                	add    BYTE PTR [rbx],cl
	...
    114d:	00 00                	add    BYTE PTR [rax],al
    114f:	00 10                	add    BYTE PTR [rax],dl
    1151:	0e                   	(bad)  
    1152:	01 00                	add    DWORD PTR [rax],eax
    1154:	00 00                	add    BYTE PTR [rax],al
    1156:	00 00                	add    BYTE PTR [rax],al
    1158:	07                   	(bad)  
    1159:	00 00                	add    BYTE PTR [rax],al
    115b:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
	...
    1166:	00 00                	add    BYTE PTR [rax],al
    1168:	18 0e                	sbb    BYTE PTR [rsi],cl
    116a:	01 00                	add    DWORD PTR [rax],eax
    116c:	00 00                	add    BYTE PTR [rax],al
    116e:	00 00                	add    BYTE PTR [rax],al
    1170:	07                   	(bad)  
    1171:	00 00                	add    BYTE PTR [rax],al
    1173:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 1179 <buffer.4704+0x10f9>
    1179:	00 00                	add    BYTE PTR [rax],al
    117b:	00 00                	add    BYTE PTR [rax],al
    117d:	00 00                	add    BYTE PTR [rax],al
    117f:	00 20                	add    BYTE PTR [rax],ah
    1181:	0e                   	(bad)  
    1182:	01 00                	add    DWORD PTR [rax],eax
    1184:	00 00                	add    BYTE PTR [rax],al
    1186:	00 00                	add    BYTE PTR [rax],al
    1188:	07                   	(bad)  
    1189:	00 00                	add    BYTE PTR [rax],al
    118b:	00 0e                	add    BYTE PTR [rsi],cl
	...
    1195:	00 00                	add    BYTE PTR [rax],al
    1197:	00 28                	add    BYTE PTR [rax],ch
    1199:	0e                   	(bad)  
    119a:	01 00                	add    DWORD PTR [rax],eax
    119c:	00 00                	add    BYTE PTR [rax],al
    119e:	00 00                	add    BYTE PTR [rax],al
    11a0:	07                   	(bad)  
    11a1:	00 00                	add    BYTE PTR [rax],al
    11a3:	00 0f                	add    BYTE PTR [rdi],cl
	...
    11ad:	00 00                	add    BYTE PTR [rax],al
    11af:	00 30                	add    BYTE PTR [rax],dh
    11b1:	0e                   	(bad)  
    11b2:	01 00                	add    DWORD PTR [rax],eax
    11b4:	00 00                	add    BYTE PTR [rax],al
    11b6:	00 00                	add    BYTE PTR [rax],al
    11b8:	07                   	(bad)  
    11b9:	00 00                	add    BYTE PTR [rax],al
    11bb:	00 10                	add    BYTE PTR [rax],dl
	...
    11c5:	00 00                	add    BYTE PTR [rax],al
    11c7:	00 38                	add    BYTE PTR [rax],bh
    11c9:	0e                   	(bad)  
    11ca:	01 00                	add    DWORD PTR [rax],eax
    11cc:	00 00                	add    BYTE PTR [rax],al
    11ce:	00 00                	add    BYTE PTR [rax],al
    11d0:	07                   	(bad)  
    11d1:	00 00                	add    BYTE PTR [rax],al
    11d3:	00 11                	add    BYTE PTR [rcx],dl
	...
    11dd:	00 00                	add    BYTE PTR [rax],al
    11df:	00 40 0e             	add    BYTE PTR [rax+0xe],al
    11e2:	01 00                	add    DWORD PTR [rax],eax
    11e4:	00 00                	add    BYTE PTR [rax],al
    11e6:	00 00                	add    BYTE PTR [rax],al
    11e8:	07                   	(bad)  
    11e9:	00 00                	add    BYTE PTR [rax],al
    11eb:	00 12                	add    BYTE PTR [rdx],dl
	...
    11f5:	00 00                	add    BYTE PTR [rax],al
    11f7:	00 48 0e             	add    BYTE PTR [rax+0xe],cl
    11fa:	01 00                	add    DWORD PTR [rax],eax
    11fc:	00 00                	add    BYTE PTR [rax],al
    11fe:	00 00                	add    BYTE PTR [rax],al
    1200:	07                   	(bad)  
    1201:	00 00                	add    BYTE PTR [rax],al
    1203:	00 13                	add    BYTE PTR [rbx],dl
	...
    120d:	00 00                	add    BYTE PTR [rax],al
    120f:	00 50 0e             	add    BYTE PTR [rax+0xe],dl
    1212:	01 00                	add    DWORD PTR [rax],eax
    1214:	00 00                	add    BYTE PTR [rax],al
    1216:	00 00                	add    BYTE PTR [rax],al
    1218:	07                   	(bad)  
    1219:	00 00                	add    BYTE PTR [rax],al
    121b:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
	...
    1226:	00 00                	add    BYTE PTR [rax],al
    1228:	58                   	pop    rax
    1229:	0e                   	(bad)  
    122a:	01 00                	add    DWORD PTR [rax],eax
    122c:	00 00                	add    BYTE PTR [rax],al
    122e:	00 00                	add    BYTE PTR [rax],al
    1230:	07                   	(bad)  
    1231:	00 00                	add    BYTE PTR [rax],al
    1233:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 1239 <buffer.4704+0x11b9>
    1239:	00 00                	add    BYTE PTR [rax],al
    123b:	00 00                	add    BYTE PTR [rax],al
    123d:	00 00                	add    BYTE PTR [rax],al
    123f:	00 60 0e             	add    BYTE PTR [rax+0xe],ah
    1242:	01 00                	add    DWORD PTR [rax],eax
    1244:	00 00                	add    BYTE PTR [rax],al
    1246:	00 00                	add    BYTE PTR [rax],al
    1248:	07                   	(bad)  
    1249:	00 00                	add    BYTE PTR [rax],al
    124b:	00 16                	add    BYTE PTR [rsi],dl
	...
    1255:	00 00                	add    BYTE PTR [rax],al
    1257:	00 68 0e             	add    BYTE PTR [rax+0xe],ch
    125a:	01 00                	add    DWORD PTR [rax],eax
    125c:	00 00                	add    BYTE PTR [rax],al
    125e:	00 00                	add    BYTE PTR [rax],al
    1260:	07                   	(bad)  
    1261:	00 00                	add    BYTE PTR [rax],al
    1263:	00 17                	add    BYTE PTR [rdi],dl
	...
    126d:	00 00                	add    BYTE PTR [rax],al
    126f:	00 70 0e             	add    BYTE PTR [rax+0xe],dh
    1272:	01 00                	add    DWORD PTR [rax],eax
    1274:	00 00                	add    BYTE PTR [rax],al
    1276:	00 00                	add    BYTE PTR [rax],al
    1278:	07                   	(bad)  
    1279:	00 00                	add    BYTE PTR [rax],al
    127b:	00 18                	add    BYTE PTR [rax],bl
	...
    1285:	00 00                	add    BYTE PTR [rax],al
    1287:	00 78 0e             	add    BYTE PTR [rax+0xe],bh
    128a:	01 00                	add    DWORD PTR [rax],eax
    128c:	00 00                	add    BYTE PTR [rax],al
    128e:	00 00                	add    BYTE PTR [rax],al
    1290:	07                   	(bad)  
    1291:	00 00                	add    BYTE PTR [rax],al
    1293:	00 19                	add    BYTE PTR [rcx],bl
	...
    129d:	00 00                	add    BYTE PTR [rax],al
    129f:	00 80 0e 01 00 00    	add    BYTE PTR [rax+0x10e],al
    12a5:	00 00                	add    BYTE PTR [rax],al
    12a7:	00 07                	add    BYTE PTR [rdi],al
    12a9:	00 00                	add    BYTE PTR [rax],al
    12ab:	00 1a                	add    BYTE PTR [rdx],bl
	...
    12b5:	00 00                	add    BYTE PTR [rax],al
    12b7:	00 88 0e 01 00 00    	add    BYTE PTR [rax+0x10e],cl
    12bd:	00 00                	add    BYTE PTR [rax],al
    12bf:	00 07                	add    BYTE PTR [rdi],al
    12c1:	00 00                	add    BYTE PTR [rax],al
    12c3:	00 1b                	add    BYTE PTR [rbx],bl
	...
    12cd:	00 00                	add    BYTE PTR [rax],al
    12cf:	00 90 0e 01 00 00    	add    BYTE PTR [rax+0x10e],dl
    12d5:	00 00                	add    BYTE PTR [rax],al
    12d7:	00 07                	add    BYTE PTR [rdi],al
    12d9:	00 00                	add    BYTE PTR [rax],al
    12db:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
	...
    12e6:	00 00                	add    BYTE PTR [rax],al
    12e8:	98                   	cwde   
    12e9:	0e                   	(bad)  
    12ea:	01 00                	add    DWORD PTR [rax],eax
    12ec:	00 00                	add    BYTE PTR [rax],al
    12ee:	00 00                	add    BYTE PTR [rax],al
    12f0:	07                   	(bad)  
    12f1:	00 00                	add    BYTE PTR [rax],al
    12f3:	00 1d 00 00 00 00    	add    BYTE PTR [rip+0x0],bl        # 12f9 <buffer.4704+0x1279>
    12f9:	00 00                	add    BYTE PTR [rax],al
    12fb:	00 00                	add    BYTE PTR [rax],al
    12fd:	00 00                	add    BYTE PTR [rax],al
    12ff:	00 a0 0e 01 00 00    	add    BYTE PTR [rax+0x10e],ah
    1305:	00 00                	add    BYTE PTR [rax],al
    1307:	00 07                	add    BYTE PTR [rdi],al
    1309:	00 00                	add    BYTE PTR [rax],al
    130b:	00 1e                	add    BYTE PTR [rsi],bl
	...
    1315:	00 00                	add    BYTE PTR [rax],al
    1317:	00 a8 0e 01 00 00    	add    BYTE PTR [rax+0x10e],ch
    131d:	00 00                	add    BYTE PTR [rax],al
    131f:	00 07                	add    BYTE PTR [rdi],al
    1321:	00 00                	add    BYTE PTR [rax],al
    1323:	00 1f                	add    BYTE PTR [rdi],bl
	...
    132d:	00 00                	add    BYTE PTR [rax],al
    132f:	00 b0 0e 01 00 00    	add    BYTE PTR [rax+0x10e],dh
    1335:	00 00                	add    BYTE PTR [rax],al
    1337:	00 07                	add    BYTE PTR [rdi],al
    1339:	00 00                	add    BYTE PTR [rax],al
    133b:	00 20                	add    BYTE PTR [rax],ah
	...
    1345:	00 00                	add    BYTE PTR [rax],al
    1347:	00 b8 0e 01 00 00    	add    BYTE PTR [rax+0x10e],bh
    134d:	00 00                	add    BYTE PTR [rax],al
    134f:	00 07                	add    BYTE PTR [rdi],al
    1351:	00 00                	add    BYTE PTR [rax],al
    1353:	00 22                	add    BYTE PTR [rdx],ah
	...
    135d:	00 00                	add    BYTE PTR [rax],al
    135f:	00 c0                	add    al,al
    1361:	0e                   	(bad)  
    1362:	01 00                	add    DWORD PTR [rax],eax
    1364:	00 00                	add    BYTE PTR [rax],al
    1366:	00 00                	add    BYTE PTR [rax],al
    1368:	07                   	(bad)  
    1369:	00 00                	add    BYTE PTR [rax],al
    136b:	00 23                	add    BYTE PTR [rbx],ah
	...
    1375:	00 00                	add    BYTE PTR [rax],al
    1377:	00 c8                	add    al,cl
    1379:	0e                   	(bad)  
    137a:	01 00                	add    DWORD PTR [rax],eax
    137c:	00 00                	add    BYTE PTR [rax],al
    137e:	00 00                	add    BYTE PTR [rax],al
    1380:	07                   	(bad)  
    1381:	00 00                	add    BYTE PTR [rax],al
    1383:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
	...
    138e:	00 00                	add    BYTE PTR [rax],al
    1390:	d0 0e                	ror    BYTE PTR [rsi],1
    1392:	01 00                	add    DWORD PTR [rax],eax
    1394:	00 00                	add    BYTE PTR [rax],al
    1396:	00 00                	add    BYTE PTR [rax],al
    1398:	07                   	(bad)  
    1399:	00 00                	add    BYTE PTR [rax],al
    139b:	00 25 00 00 00 00    	add    BYTE PTR [rip+0x0],ah        # 13a1 <buffer.4704+0x1321>
    13a1:	00 00                	add    BYTE PTR [rax],al
    13a3:	00 00                	add    BYTE PTR [rax],al
    13a5:	00 00                	add    BYTE PTR [rax],al
    13a7:	00 d8                	add    al,bl
    13a9:	0e                   	(bad)  
    13aa:	01 00                	add    DWORD PTR [rax],eax
    13ac:	00 00                	add    BYTE PTR [rax],al
    13ae:	00 00                	add    BYTE PTR [rax],al
    13b0:	07                   	(bad)  
    13b1:	00 00                	add    BYTE PTR [rax],al
    13b3:	00 26                	add    BYTE PTR [rsi],ah
	...
    13bd:	00 00                	add    BYTE PTR [rax],al
    13bf:	00 e0                	add    al,ah
    13c1:	0e                   	(bad)  
    13c2:	01 00                	add    DWORD PTR [rax],eax
    13c4:	00 00                	add    BYTE PTR [rax],al
    13c6:	00 00                	add    BYTE PTR [rax],al
    13c8:	07                   	(bad)  
    13c9:	00 00                	add    BYTE PTR [rax],al
    13cb:	00 28                	add    BYTE PTR [rax],ch
	...
    13d5:	00 00                	add    BYTE PTR [rax],al
    13d7:	00 e8                	add    al,ch
    13d9:	0e                   	(bad)  
    13da:	01 00                	add    DWORD PTR [rax],eax
    13dc:	00 00                	add    BYTE PTR [rax],al
    13de:	00 00                	add    BYTE PTR [rax],al
    13e0:	07                   	(bad)  
    13e1:	00 00                	add    BYTE PTR [rax],al
    13e3:	00 29                	add    BYTE PTR [rcx],ch
	...
    13ed:	00 00                	add    BYTE PTR [rax],al
    13ef:	00 f0                	add    al,dh
    13f1:	0e                   	(bad)  
    13f2:	01 00                	add    DWORD PTR [rax],eax
    13f4:	00 00                	add    BYTE PTR [rax],al
    13f6:	00 00                	add    BYTE PTR [rax],al
    13f8:	07                   	(bad)  
    13f9:	00 00                	add    BYTE PTR [rax],al
    13fb:	00 2a                	add    BYTE PTR [rdx],ch
	...
    1405:	00 00                	add    BYTE PTR [rax],al
    1407:	00 f8                	add    al,bh
    1409:	0e                   	(bad)  
    140a:	01 00                	add    DWORD PTR [rax],eax
    140c:	00 00                	add    BYTE PTR [rax],al
    140e:	00 00                	add    BYTE PTR [rax],al
    1410:	07                   	(bad)  
    1411:	00 00                	add    BYTE PTR [rax],al
    1413:	00 2b                	add    BYTE PTR [rbx],ch
	...
    1421:	0f 01 00             	sgdt   [rax]
    1424:	00 00                	add    BYTE PTR [rax],al
    1426:	00 00                	add    BYTE PTR [rax],al
    1428:	07                   	(bad)  
    1429:	00 00                	add    BYTE PTR [rax],al
    142b:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
	...
    1436:	00 00                	add    BYTE PTR [rax],al
    1438:	08 0f                	or     BYTE PTR [rdi],cl
    143a:	01 00                	add    DWORD PTR [rax],eax
    143c:	00 00                	add    BYTE PTR [rax],al
    143e:	00 00                	add    BYTE PTR [rax],al
    1440:	07                   	(bad)  
    1441:	00 00                	add    BYTE PTR [rax],al
    1443:	00 2d 00 00 00 00    	add    BYTE PTR [rip+0x0],ch        # 1449 <buffer.4704+0x13c9>
    1449:	00 00                	add    BYTE PTR [rax],al
    144b:	00 00                	add    BYTE PTR [rax],al
    144d:	00 00                	add    BYTE PTR [rax],al
    144f:	00 10                	add    BYTE PTR [rax],dl
    1451:	0f 01 00             	sgdt   [rax]
    1454:	00 00                	add    BYTE PTR [rax],al
    1456:	00 00                	add    BYTE PTR [rax],al
    1458:	07                   	(bad)  
    1459:	00 00                	add    BYTE PTR [rax],al
    145b:	00 2e                	add    BYTE PTR [rsi],ch
	...
    1465:	00 00                	add    BYTE PTR [rax],al
    1467:	00 18                	add    BYTE PTR [rax],bl
    1469:	0f 01 00             	sgdt   [rax]
    146c:	00 00                	add    BYTE PTR [rax],al
    146e:	00 00                	add    BYTE PTR [rax],al
    1470:	07                   	(bad)  
    1471:	00 00                	add    BYTE PTR [rax],al
    1473:	00 2f                	add    BYTE PTR [rdi],ch
	...
    147d:	00 00                	add    BYTE PTR [rax],al
    147f:	00 20                	add    BYTE PTR [rax],ah
    1481:	0f 01 00             	sgdt   [rax]
    1484:	00 00                	add    BYTE PTR [rax],al
    1486:	00 00                	add    BYTE PTR [rax],al
    1488:	07                   	(bad)  
    1489:	00 00                	add    BYTE PTR [rax],al
    148b:	00 30                	add    BYTE PTR [rax],dh
	...
    1495:	00 00                	add    BYTE PTR [rax],al
    1497:	00 28                	add    BYTE PTR [rax],ch
    1499:	0f 01 00             	sgdt   [rax]
    149c:	00 00                	add    BYTE PTR [rax],al
    149e:	00 00                	add    BYTE PTR [rax],al
    14a0:	07                   	(bad)  
    14a1:	00 00                	add    BYTE PTR [rax],al
    14a3:	00 31                	add    BYTE PTR [rcx],dh
	...
    14ad:	00 00                	add    BYTE PTR [rax],al
    14af:	00 30                	add    BYTE PTR [rax],dh
    14b1:	0f 01 00             	sgdt   [rax]
    14b4:	00 00                	add    BYTE PTR [rax],al
    14b6:	00 00                	add    BYTE PTR [rax],al
    14b8:	07                   	(bad)  
    14b9:	00 00                	add    BYTE PTR [rax],al
    14bb:	00 32                	add    BYTE PTR [rdx],dh
	...
    14c5:	00 00                	add    BYTE PTR [rax],al
    14c7:	00 38                	add    BYTE PTR [rax],bh
    14c9:	0f 01 00             	sgdt   [rax]
    14cc:	00 00                	add    BYTE PTR [rax],al
    14ce:	00 00                	add    BYTE PTR [rax],al
    14d0:	07                   	(bad)  
    14d1:	00 00                	add    BYTE PTR [rax],al
    14d3:	00 33                	add    BYTE PTR [rbx],dh
	...
    14dd:	00 00                	add    BYTE PTR [rax],al
    14df:	00 40 0f             	add    BYTE PTR [rax+0xf],al
    14e2:	01 00                	add    DWORD PTR [rax],eax
    14e4:	00 00                	add    BYTE PTR [rax],al
    14e6:	00 00                	add    BYTE PTR [rax],al
    14e8:	07                   	(bad)  
    14e9:	00 00                	add    BYTE PTR [rax],al
    14eb:	00 34 00             	add    BYTE PTR [rax+rax*1],dh
	...
    14f6:	00 00                	add    BYTE PTR [rax],al
    14f8:	48 0f 01 00          	rex.W sgdt [rax]
    14fc:	00 00                	add    BYTE PTR [rax],al
    14fe:	00 00                	add    BYTE PTR [rax],al
    1500:	07                   	(bad)  
    1501:	00 00                	add    BYTE PTR [rax],al
    1503:	00 35 00 00 00 00    	add    BYTE PTR [rip+0x0],dh        # 1509 <buffer.4704+0x1489>
    1509:	00 00                	add    BYTE PTR [rax],al
    150b:	00 00                	add    BYTE PTR [rax],al
    150d:	00 00                	add    BYTE PTR [rax],al
    150f:	00 50 0f             	add    BYTE PTR [rax+0xf],dl
    1512:	01 00                	add    DWORD PTR [rax],eax
    1514:	00 00                	add    BYTE PTR [rax],al
    1516:	00 00                	add    BYTE PTR [rax],al
    1518:	07                   	(bad)  
    1519:	00 00                	add    BYTE PTR [rax],al
    151b:	00 36                	add    BYTE PTR [rsi],dh
	...
    1525:	00 00                	add    BYTE PTR [rax],al
    1527:	00 58 0f             	add    BYTE PTR [rax+0xf],bl
    152a:	01 00                	add    DWORD PTR [rax],eax
    152c:	00 00                	add    BYTE PTR [rax],al
    152e:	00 00                	add    BYTE PTR [rax],al
    1530:	07                   	(bad)  
    1531:	00 00                	add    BYTE PTR [rax],al
    1533:	00 37                	add    BYTE PTR [rdi],dh
	...
    153d:	00 00                	add    BYTE PTR [rax],al
    153f:	00 60 0f             	add    BYTE PTR [rax+0xf],ah
    1542:	01 00                	add    DWORD PTR [rax],eax
    1544:	00 00                	add    BYTE PTR [rax],al
    1546:	00 00                	add    BYTE PTR [rax],al
    1548:	07                   	(bad)  
    1549:	00 00                	add    BYTE PTR [rax],al
    154b:	00 38                	add    BYTE PTR [rax],bh
	...
    1555:	00 00                	add    BYTE PTR [rax],al
    1557:	00 68 0f             	add    BYTE PTR [rax+0xf],ch
    155a:	01 00                	add    DWORD PTR [rax],eax
    155c:	00 00                	add    BYTE PTR [rax],al
    155e:	00 00                	add    BYTE PTR [rax],al
    1560:	07                   	(bad)  
    1561:	00 00                	add    BYTE PTR [rax],al
    1563:	00 39                	add    BYTE PTR [rcx],bh
	...
    156d:	00 00                	add    BYTE PTR [rax],al
    156f:	00 70 0f             	add    BYTE PTR [rax+0xf],dh
    1572:	01 00                	add    DWORD PTR [rax],eax
    1574:	00 00                	add    BYTE PTR [rax],al
    1576:	00 00                	add    BYTE PTR [rax],al
    1578:	07                   	(bad)  
    1579:	00 00                	add    BYTE PTR [rax],al
    157b:	00 3a                	add    BYTE PTR [rdx],bh
	...
    1585:	00 00                	add    BYTE PTR [rax],al
    1587:	00 78 0f             	add    BYTE PTR [rax+0xf],bh
    158a:	01 00                	add    DWORD PTR [rax],eax
    158c:	00 00                	add    BYTE PTR [rax],al
    158e:	00 00                	add    BYTE PTR [rax],al
    1590:	07                   	(bad)  
    1591:	00 00                	add    BYTE PTR [rax],al
    1593:	00 3b                	add    BYTE PTR [rbx],bh
	...
    159d:	00 00                	add    BYTE PTR [rax],al
    159f:	00 80 0f 01 00 00    	add    BYTE PTR [rax+0x10f],al
    15a5:	00 00                	add    BYTE PTR [rax],al
    15a7:	00 07                	add    BYTE PTR [rdi],al
    15a9:	00 00                	add    BYTE PTR [rax],al
    15ab:	00 3c 00             	add    BYTE PTR [rax+rax*1],bh
	...
    15b6:	00 00                	add    BYTE PTR [rax],al
    15b8:	88 0f                	mov    BYTE PTR [rdi],cl
    15ba:	01 00                	add    DWORD PTR [rax],eax
    15bc:	00 00                	add    BYTE PTR [rax],al
    15be:	00 00                	add    BYTE PTR [rax],al
    15c0:	07                   	(bad)  
    15c1:	00 00                	add    BYTE PTR [rax],al
    15c3:	00 3d 00 00 00 00    	add    BYTE PTR [rip+0x0],bh        # 15c9 <buffer.4704+0x1549>
    15c9:	00 00                	add    BYTE PTR [rax],al
    15cb:	00 00                	add    BYTE PTR [rax],al
    15cd:	00 00                	add    BYTE PTR [rax],al
    15cf:	00 90 0f 01 00 00    	add    BYTE PTR [rax+0x10f],dl
    15d5:	00 00                	add    BYTE PTR [rax],al
    15d7:	00 07                	add    BYTE PTR [rdi],al
    15d9:	00 00                	add    BYTE PTR [rax],al
    15db:	00 3e                	add    BYTE PTR [rsi],bh
	...
    15e5:	00 00                	add    BYTE PTR [rax],al
    15e7:	00 98 0f 01 00 00    	add    BYTE PTR [rax+0x10f],bl
    15ed:	00 00                	add    BYTE PTR [rax],al
    15ef:	00 07                	add    BYTE PTR [rdi],al
    15f1:	00 00                	add    BYTE PTR [rax],al
    15f3:	00 3f                	add    BYTE PTR [rdi],bh
	...
    15fd:	00 00                	add    BYTE PTR [rax],al
    15ff:	00 a0 0f 01 00 00    	add    BYTE PTR [rax+0x10f],ah
    1605:	00 00                	add    BYTE PTR [rax],al
    1607:	00 07                	add    BYTE PTR [rdi],al
    1609:	00 00                	add    BYTE PTR [rax],al
    160b:	00 40 00             	add    BYTE PTR [rax+0x0],al
	...
    1616:	00 00                	add    BYTE PTR [rax],al
    1618:	a8 0f                	test   al,0xf
    161a:	01 00                	add    DWORD PTR [rax],eax
    161c:	00 00                	add    BYTE PTR [rax],al
    161e:	00 00                	add    BYTE PTR [rax],al
    1620:	07                   	(bad)  
    1621:	00 00                	add    BYTE PTR [rax],al
    1623:	00 41 00             	add    BYTE PTR [rcx+0x0],al
	...
    162e:	00 00                	add    BYTE PTR [rax],al
    1630:	b0 0f                	mov    al,0xf
    1632:	01 00                	add    DWORD PTR [rax],eax
    1634:	00 00                	add    BYTE PTR [rax],al
    1636:	00 00                	add    BYTE PTR [rax],al
    1638:	07                   	(bad)  
    1639:	00 00                	add    BYTE PTR [rax],al
    163b:	00 43 00             	add    BYTE PTR [rbx+0x0],al
	...
    1646:	00 00                	add    BYTE PTR [rax],al
    1648:	b8 0f 01 00 00       	mov    eax,0x10f
    164d:	00 00                	add    BYTE PTR [rax],al
    164f:	00 07                	add    BYTE PTR [rdi],al
    1651:	00 00                	add    BYTE PTR [rax],al
    1653:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
	...
    165f:	00 c0                	add    al,al
    1661:	0f 01 00             	sgdt   [rax]
    1664:	00 00                	add    BYTE PTR [rax],al
    1666:	00 00                	add    BYTE PTR [rax],al
    1668:	07                   	(bad)  
    1669:	00 00                	add    BYTE PTR [rax],al
    166b:	00 45 00             	add    BYTE PTR [rbp+0x0],al
	...
    1676:	00 00                	add    BYTE PTR [rax],al
    1678:	c8 0f 01 00          	enter  0x10f,0x0
    167c:	00 00                	add    BYTE PTR [rax],al
    167e:	00 00                	add    BYTE PTR [rax],al
    1680:	07                   	(bad)  
    1681:	00 00                	add    BYTE PTR [rax],al
    1683:	00 46 00             	add    BYTE PTR [rsi+0x0],al
	...
    168e:	00 00                	add    BYTE PTR [rax],al
    1690:	d0 0f                	ror    BYTE PTR [rdi],1
    1692:	01 00                	add    DWORD PTR [rax],eax
    1694:	00 00                	add    BYTE PTR [rax],al
    1696:	00 00                	add    BYTE PTR [rax],al
    1698:	07                   	(bad)  
    1699:	00 00                	add    BYTE PTR [rax],al
    169b:	00 47 00             	add    BYTE PTR [rdi+0x0],al
	...

Disassembly of section .init:

0000000000002000 <_init>:
    2000:	f3 0f 1e fa          	endbr64 
    2004:	48 83 ec 08          	sub    rsp,0x8
    2008:	48 8b 05 d9 ef 00 00 	mov    rax,QWORD PTR [rip+0xefd9]        # 10fe8 <__gmon_start__>
    200f:	48 85 c0             	test   rax,rax
    2012:	74 02                	je     2016 <_init+0x16>
    2014:	ff d0                	call   rax
    2016:	48 83 c4 08          	add    rsp,0x8
    201a:	c3                   	ret    

Disassembly of section .plt:

0000000000002020 <.plt>:
    2020:	ff 35 8a ed 00 00    	push   QWORD PTR [rip+0xed8a]        # 10db0 <_GLOBAL_OFFSET_TABLE_+0x8>
    2026:	f2 ff 25 8b ed 00 00 	bnd jmp QWORD PTR [rip+0xed8b]        # 10db8 <_GLOBAL_OFFSET_TABLE_+0x10>
    202d:	0f 1f 00             	nop    DWORD PTR [rax]
    2030:	f3 0f 1e fa          	endbr64 
    2034:	68 00 00 00 00       	push   0x0
    2039:	f2 e9 e1 ff ff ff    	bnd jmp 2020 <.plt>
    203f:	90                   	nop
    2040:	f3 0f 1e fa          	endbr64 
    2044:	68 01 00 00 00       	push   0x1
    2049:	f2 e9 d1 ff ff ff    	bnd jmp 2020 <.plt>
    204f:	90                   	nop
    2050:	f3 0f 1e fa          	endbr64 
    2054:	68 02 00 00 00       	push   0x2
    2059:	f2 e9 c1 ff ff ff    	bnd jmp 2020 <.plt>
    205f:	90                   	nop
    2060:	f3 0f 1e fa          	endbr64 
    2064:	68 03 00 00 00       	push   0x3
    2069:	f2 e9 b1 ff ff ff    	bnd jmp 2020 <.plt>
    206f:	90                   	nop
    2070:	f3 0f 1e fa          	endbr64 
    2074:	68 04 00 00 00       	push   0x4
    2079:	f2 e9 a1 ff ff ff    	bnd jmp 2020 <.plt>
    207f:	90                   	nop
    2080:	f3 0f 1e fa          	endbr64 
    2084:	68 05 00 00 00       	push   0x5
    2089:	f2 e9 91 ff ff ff    	bnd jmp 2020 <.plt>
    208f:	90                   	nop
    2090:	f3 0f 1e fa          	endbr64 
    2094:	68 06 00 00 00       	push   0x6
    2099:	f2 e9 81 ff ff ff    	bnd jmp 2020 <.plt>
    209f:	90                   	nop
    20a0:	f3 0f 1e fa          	endbr64 
    20a4:	68 07 00 00 00       	push   0x7
    20a9:	f2 e9 71 ff ff ff    	bnd jmp 2020 <.plt>
    20af:	90                   	nop
    20b0:	f3 0f 1e fa          	endbr64 
    20b4:	68 08 00 00 00       	push   0x8
    20b9:	f2 e9 61 ff ff ff    	bnd jmp 2020 <.plt>
    20bf:	90                   	nop
    20c0:	f3 0f 1e fa          	endbr64 
    20c4:	68 09 00 00 00       	push   0x9
    20c9:	f2 e9 51 ff ff ff    	bnd jmp 2020 <.plt>
    20cf:	90                   	nop
    20d0:	f3 0f 1e fa          	endbr64 
    20d4:	68 0a 00 00 00       	push   0xa
    20d9:	f2 e9 41 ff ff ff    	bnd jmp 2020 <.plt>
    20df:	90                   	nop
    20e0:	f3 0f 1e fa          	endbr64 
    20e4:	68 0b 00 00 00       	push   0xb
    20e9:	f2 e9 31 ff ff ff    	bnd jmp 2020 <.plt>
    20ef:	90                   	nop
    20f0:	f3 0f 1e fa          	endbr64 
    20f4:	68 0c 00 00 00       	push   0xc
    20f9:	f2 e9 21 ff ff ff    	bnd jmp 2020 <.plt>
    20ff:	90                   	nop
    2100:	f3 0f 1e fa          	endbr64 
    2104:	68 0d 00 00 00       	push   0xd
    2109:	f2 e9 11 ff ff ff    	bnd jmp 2020 <.plt>
    210f:	90                   	nop
    2110:	f3 0f 1e fa          	endbr64 
    2114:	68 0e 00 00 00       	push   0xe
    2119:	f2 e9 01 ff ff ff    	bnd jmp 2020 <.plt>
    211f:	90                   	nop
    2120:	f3 0f 1e fa          	endbr64 
    2124:	68 0f 00 00 00       	push   0xf
    2129:	f2 e9 f1 fe ff ff    	bnd jmp 2020 <.plt>
    212f:	90                   	nop
    2130:	f3 0f 1e fa          	endbr64 
    2134:	68 10 00 00 00       	push   0x10
    2139:	f2 e9 e1 fe ff ff    	bnd jmp 2020 <.plt>
    213f:	90                   	nop
    2140:	f3 0f 1e fa          	endbr64 
    2144:	68 11 00 00 00       	push   0x11
    2149:	f2 e9 d1 fe ff ff    	bnd jmp 2020 <.plt>
    214f:	90                   	nop
    2150:	f3 0f 1e fa          	endbr64 
    2154:	68 12 00 00 00       	push   0x12
    2159:	f2 e9 c1 fe ff ff    	bnd jmp 2020 <.plt>
    215f:	90                   	nop
    2160:	f3 0f 1e fa          	endbr64 
    2164:	68 13 00 00 00       	push   0x13
    2169:	f2 e9 b1 fe ff ff    	bnd jmp 2020 <.plt>
    216f:	90                   	nop
    2170:	f3 0f 1e fa          	endbr64 
    2174:	68 14 00 00 00       	push   0x14
    2179:	f2 e9 a1 fe ff ff    	bnd jmp 2020 <.plt>
    217f:	90                   	nop
    2180:	f3 0f 1e fa          	endbr64 
    2184:	68 15 00 00 00       	push   0x15
    2189:	f2 e9 91 fe ff ff    	bnd jmp 2020 <.plt>
    218f:	90                   	nop
    2190:	f3 0f 1e fa          	endbr64 
    2194:	68 16 00 00 00       	push   0x16
    2199:	f2 e9 81 fe ff ff    	bnd jmp 2020 <.plt>
    219f:	90                   	nop
    21a0:	f3 0f 1e fa          	endbr64 
    21a4:	68 17 00 00 00       	push   0x17
    21a9:	f2 e9 71 fe ff ff    	bnd jmp 2020 <.plt>
    21af:	90                   	nop
    21b0:	f3 0f 1e fa          	endbr64 
    21b4:	68 18 00 00 00       	push   0x18
    21b9:	f2 e9 61 fe ff ff    	bnd jmp 2020 <.plt>
    21bf:	90                   	nop
    21c0:	f3 0f 1e fa          	endbr64 
    21c4:	68 19 00 00 00       	push   0x19
    21c9:	f2 e9 51 fe ff ff    	bnd jmp 2020 <.plt>
    21cf:	90                   	nop
    21d0:	f3 0f 1e fa          	endbr64 
    21d4:	68 1a 00 00 00       	push   0x1a
    21d9:	f2 e9 41 fe ff ff    	bnd jmp 2020 <.plt>
    21df:	90                   	nop
    21e0:	f3 0f 1e fa          	endbr64 
    21e4:	68 1b 00 00 00       	push   0x1b
    21e9:	f2 e9 31 fe ff ff    	bnd jmp 2020 <.plt>
    21ef:	90                   	nop
    21f0:	f3 0f 1e fa          	endbr64 
    21f4:	68 1c 00 00 00       	push   0x1c
    21f9:	f2 e9 21 fe ff ff    	bnd jmp 2020 <.plt>
    21ff:	90                   	nop
    2200:	f3 0f 1e fa          	endbr64 
    2204:	68 1d 00 00 00       	push   0x1d
    2209:	f2 e9 11 fe ff ff    	bnd jmp 2020 <.plt>
    220f:	90                   	nop
    2210:	f3 0f 1e fa          	endbr64 
    2214:	68 1e 00 00 00       	push   0x1e
    2219:	f2 e9 01 fe ff ff    	bnd jmp 2020 <.plt>
    221f:	90                   	nop
    2220:	f3 0f 1e fa          	endbr64 
    2224:	68 1f 00 00 00       	push   0x1f
    2229:	f2 e9 f1 fd ff ff    	bnd jmp 2020 <.plt>
    222f:	90                   	nop
    2230:	f3 0f 1e fa          	endbr64 
    2234:	68 20 00 00 00       	push   0x20
    2239:	f2 e9 e1 fd ff ff    	bnd jmp 2020 <.plt>
    223f:	90                   	nop
    2240:	f3 0f 1e fa          	endbr64 
    2244:	68 21 00 00 00       	push   0x21
    2249:	f2 e9 d1 fd ff ff    	bnd jmp 2020 <.plt>
    224f:	90                   	nop
    2250:	f3 0f 1e fa          	endbr64 
    2254:	68 22 00 00 00       	push   0x22
    2259:	f2 e9 c1 fd ff ff    	bnd jmp 2020 <.plt>
    225f:	90                   	nop
    2260:	f3 0f 1e fa          	endbr64 
    2264:	68 23 00 00 00       	push   0x23
    2269:	f2 e9 b1 fd ff ff    	bnd jmp 2020 <.plt>
    226f:	90                   	nop
    2270:	f3 0f 1e fa          	endbr64 
    2274:	68 24 00 00 00       	push   0x24
    2279:	f2 e9 a1 fd ff ff    	bnd jmp 2020 <.plt>
    227f:	90                   	nop
    2280:	f3 0f 1e fa          	endbr64 
    2284:	68 25 00 00 00       	push   0x25
    2289:	f2 e9 91 fd ff ff    	bnd jmp 2020 <.plt>
    228f:	90                   	nop
    2290:	f3 0f 1e fa          	endbr64 
    2294:	68 26 00 00 00       	push   0x26
    2299:	f2 e9 81 fd ff ff    	bnd jmp 2020 <.plt>
    229f:	90                   	nop
    22a0:	f3 0f 1e fa          	endbr64 
    22a4:	68 27 00 00 00       	push   0x27
    22a9:	f2 e9 71 fd ff ff    	bnd jmp 2020 <.plt>
    22af:	90                   	nop
    22b0:	f3 0f 1e fa          	endbr64 
    22b4:	68 28 00 00 00       	push   0x28
    22b9:	f2 e9 61 fd ff ff    	bnd jmp 2020 <.plt>
    22bf:	90                   	nop
    22c0:	f3 0f 1e fa          	endbr64 
    22c4:	68 29 00 00 00       	push   0x29
    22c9:	f2 e9 51 fd ff ff    	bnd jmp 2020 <.plt>
    22cf:	90                   	nop
    22d0:	f3 0f 1e fa          	endbr64 
    22d4:	68 2a 00 00 00       	push   0x2a
    22d9:	f2 e9 41 fd ff ff    	bnd jmp 2020 <.plt>
    22df:	90                   	nop
    22e0:	f3 0f 1e fa          	endbr64 
    22e4:	68 2b 00 00 00       	push   0x2b
    22e9:	f2 e9 31 fd ff ff    	bnd jmp 2020 <.plt>
    22ef:	90                   	nop
    22f0:	f3 0f 1e fa          	endbr64 
    22f4:	68 2c 00 00 00       	push   0x2c
    22f9:	f2 e9 21 fd ff ff    	bnd jmp 2020 <.plt>
    22ff:	90                   	nop
    2300:	f3 0f 1e fa          	endbr64 
    2304:	68 2d 00 00 00       	push   0x2d
    2309:	f2 e9 11 fd ff ff    	bnd jmp 2020 <.plt>
    230f:	90                   	nop
    2310:	f3 0f 1e fa          	endbr64 
    2314:	68 2e 00 00 00       	push   0x2e
    2319:	f2 e9 01 fd ff ff    	bnd jmp 2020 <.plt>
    231f:	90                   	nop
    2320:	f3 0f 1e fa          	endbr64 
    2324:	68 2f 00 00 00       	push   0x2f
    2329:	f2 e9 f1 fc ff ff    	bnd jmp 2020 <.plt>
    232f:	90                   	nop
    2330:	f3 0f 1e fa          	endbr64 
    2334:	68 30 00 00 00       	push   0x30
    2339:	f2 e9 e1 fc ff ff    	bnd jmp 2020 <.plt>
    233f:	90                   	nop
    2340:	f3 0f 1e fa          	endbr64 
    2344:	68 31 00 00 00       	push   0x31
    2349:	f2 e9 d1 fc ff ff    	bnd jmp 2020 <.plt>
    234f:	90                   	nop
    2350:	f3 0f 1e fa          	endbr64 
    2354:	68 32 00 00 00       	push   0x32
    2359:	f2 e9 c1 fc ff ff    	bnd jmp 2020 <.plt>
    235f:	90                   	nop
    2360:	f3 0f 1e fa          	endbr64 
    2364:	68 33 00 00 00       	push   0x33
    2369:	f2 e9 b1 fc ff ff    	bnd jmp 2020 <.plt>
    236f:	90                   	nop
    2370:	f3 0f 1e fa          	endbr64 
    2374:	68 34 00 00 00       	push   0x34
    2379:	f2 e9 a1 fc ff ff    	bnd jmp 2020 <.plt>
    237f:	90                   	nop
    2380:	f3 0f 1e fa          	endbr64 
    2384:	68 35 00 00 00       	push   0x35
    2389:	f2 e9 91 fc ff ff    	bnd jmp 2020 <.plt>
    238f:	90                   	nop
    2390:	f3 0f 1e fa          	endbr64 
    2394:	68 36 00 00 00       	push   0x36
    2399:	f2 e9 81 fc ff ff    	bnd jmp 2020 <.plt>
    239f:	90                   	nop
    23a0:	f3 0f 1e fa          	endbr64 
    23a4:	68 37 00 00 00       	push   0x37
    23a9:	f2 e9 71 fc ff ff    	bnd jmp 2020 <.plt>
    23af:	90                   	nop
    23b0:	f3 0f 1e fa          	endbr64 
    23b4:	68 38 00 00 00       	push   0x38
    23b9:	f2 e9 61 fc ff ff    	bnd jmp 2020 <.plt>
    23bf:	90                   	nop
    23c0:	f3 0f 1e fa          	endbr64 
    23c4:	68 39 00 00 00       	push   0x39
    23c9:	f2 e9 51 fc ff ff    	bnd jmp 2020 <.plt>
    23cf:	90                   	nop
    23d0:	f3 0f 1e fa          	endbr64 
    23d4:	68 3a 00 00 00       	push   0x3a
    23d9:	f2 e9 41 fc ff ff    	bnd jmp 2020 <.plt>
    23df:	90                   	nop
    23e0:	f3 0f 1e fa          	endbr64 
    23e4:	68 3b 00 00 00       	push   0x3b
    23e9:	f2 e9 31 fc ff ff    	bnd jmp 2020 <.plt>
    23ef:	90                   	nop
    23f0:	f3 0f 1e fa          	endbr64 
    23f4:	68 3c 00 00 00       	push   0x3c
    23f9:	f2 e9 21 fc ff ff    	bnd jmp 2020 <.plt>
    23ff:	90                   	nop
    2400:	f3 0f 1e fa          	endbr64 
    2404:	68 3d 00 00 00       	push   0x3d
    2409:	f2 e9 11 fc ff ff    	bnd jmp 2020 <.plt>
    240f:	90                   	nop
    2410:	f3 0f 1e fa          	endbr64 
    2414:	68 3e 00 00 00       	push   0x3e
    2419:	f2 e9 01 fc ff ff    	bnd jmp 2020 <.plt>
    241f:	90                   	nop
    2420:	f3 0f 1e fa          	endbr64 
    2424:	68 3f 00 00 00       	push   0x3f
    2429:	f2 e9 f1 fb ff ff    	bnd jmp 2020 <.plt>
    242f:	90                   	nop
    2430:	f3 0f 1e fa          	endbr64 
    2434:	68 40 00 00 00       	push   0x40
    2439:	f2 e9 e1 fb ff ff    	bnd jmp 2020 <.plt>
    243f:	90                   	nop
    2440:	f3 0f 1e fa          	endbr64 
    2444:	68 41 00 00 00       	push   0x41
    2449:	f2 e9 d1 fb ff ff    	bnd jmp 2020 <.plt>
    244f:	90                   	nop
    2450:	f3 0f 1e fa          	endbr64 
    2454:	68 42 00 00 00       	push   0x42
    2459:	f2 e9 c1 fb ff ff    	bnd jmp 2020 <.plt>
    245f:	90                   	nop

Disassembly of section .plt.got:

0000000000002460 <__cxa_finalize@plt>:
    2460:	f3 0f 1e fa          	endbr64 
    2464:	f2 ff 25 8d eb 00 00 	bnd jmp QWORD PTR [rip+0xeb8d]        # 10ff8 <__cxa_finalize@GLIBC_2.2.5>
    246b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

0000000000002470 <free@plt>:
    2470:	f3 0f 1e fa          	endbr64 
    2474:	f2 ff 25 45 e9 00 00 	bnd jmp QWORD PTR [rip+0xe945]        # 10dc0 <free@GLIBC_2.2.5>
    247b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002480 <putchar@plt>:
    2480:	f3 0f 1e fa          	endbr64 
    2484:	f2 ff 25 3d e9 00 00 	bnd jmp QWORD PTR [rip+0xe93d]        # 10dc8 <putchar@GLIBC_2.2.5>
    248b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002490 <pthread_create@plt>:
    2490:	f3 0f 1e fa          	endbr64 
    2494:	f2 ff 25 35 e9 00 00 	bnd jmp QWORD PTR [rip+0xe935]        # 10dd0 <pthread_create@GLIBC_2.2.5>
    249b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024a0 <localtime@plt>:
    24a0:	f3 0f 1e fa          	endbr64 
    24a4:	f2 ff 25 2d e9 00 00 	bnd jmp QWORD PTR [rip+0xe92d]        # 10dd8 <localtime@GLIBC_2.2.5>
    24ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024b0 <strncpy@plt>:
    24b0:	f3 0f 1e fa          	endbr64 
    24b4:	f2 ff 25 25 e9 00 00 	bnd jmp QWORD PTR [rip+0xe925]        # 10de0 <strncpy@GLIBC_2.2.5>
    24bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024c0 <strncmp@plt>:
    24c0:	f3 0f 1e fa          	endbr64 
    24c4:	f2 ff 25 1d e9 00 00 	bnd jmp QWORD PTR [rip+0xe91d]        # 10de8 <strncmp@GLIBC_2.2.5>
    24cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024d0 <strcpy@plt>:
    24d0:	f3 0f 1e fa          	endbr64 
    24d4:	f2 ff 25 15 e9 00 00 	bnd jmp QWORD PTR [rip+0xe915]        # 10df0 <strcpy@GLIBC_2.2.5>
    24db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024e0 <lua_settop@plt>:
    24e0:	f3 0f 1e fa          	endbr64 
    24e4:	f2 ff 25 0d e9 00 00 	bnd jmp QWORD PTR [rip+0xe90d]        # 10df8 <lua_settop@LUA_5.3>
    24eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024f0 <lua_gettop@plt>:
    24f0:	f3 0f 1e fa          	endbr64 
    24f4:	f2 ff 25 05 e9 00 00 	bnd jmp QWORD PTR [rip+0xe905]        # 10e00 <lua_gettop@LUA_5.3>
    24fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002500 <puts@plt>:
    2500:	f3 0f 1e fa          	endbr64 
    2504:	f2 ff 25 fd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8fd]        # 10e08 <puts@GLIBC_2.2.5>
    250b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002510 <setsockopt@plt>:
    2510:	f3 0f 1e fa          	endbr64 
    2514:	f2 ff 25 f5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8f5]        # 10e10 <setsockopt@GLIBC_2.2.5>
    251b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002520 <backtrace_symbols@plt>:
    2520:	f3 0f 1e fa          	endbr64 
    2524:	f2 ff 25 ed e8 00 00 	bnd jmp QWORD PTR [rip+0xe8ed]        # 10e18 <backtrace_symbols@GLIBC_2.2.5>
    252b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002530 <sqlite3_exec@plt>:
    2530:	f3 0f 1e fa          	endbr64 
    2534:	f2 ff 25 e5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8e5]        # 10e20 <sqlite3_exec>
    253b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002540 <sqlite3_open@plt>:
    2540:	f3 0f 1e fa          	endbr64 
    2544:	f2 ff 25 dd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8dd]        # 10e28 <sqlite3_open>
    254b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002550 <fclose@plt>:
    2550:	f3 0f 1e fa          	endbr64 
    2554:	f2 ff 25 d5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8d5]        # 10e30 <fclose@GLIBC_2.2.5>
    255b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002560 <strlen@plt>:
    2560:	f3 0f 1e fa          	endbr64 
    2564:	f2 ff 25 cd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8cd]        # 10e38 <strlen@GLIBC_2.2.5>
    256b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002570 <backtrace@plt>:
    2570:	f3 0f 1e fa          	endbr64 
    2574:	f2 ff 25 c5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8c5]        # 10e40 <backtrace@GLIBC_2.2.5>
    257b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002580 <__stack_chk_fail@plt>:
    2580:	f3 0f 1e fa          	endbr64 
    2584:	f2 ff 25 bd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8bd]        # 10e48 <__stack_chk_fail@GLIBC_2.4>
    258b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002590 <htons@plt>:
    2590:	f3 0f 1e fa          	endbr64 
    2594:	f2 ff 25 b5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8b5]        # 10e50 <htons@GLIBC_2.2.5>
    259b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025a0 <send@plt>:
    25a0:	f3 0f 1e fa          	endbr64 
    25a4:	f2 ff 25 ad e8 00 00 	bnd jmp QWORD PTR [rip+0xe8ad]        # 10e58 <send@GLIBC_2.2.5>
    25ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025b0 <strchr@plt>:
    25b0:	f3 0f 1e fa          	endbr64 
    25b4:	f2 ff 25 a5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8a5]        # 10e60 <strchr@GLIBC_2.2.5>
    25bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025c0 <printf@plt>:
    25c0:	f3 0f 1e fa          	endbr64 
    25c4:	f2 ff 25 9d e8 00 00 	bnd jmp QWORD PTR [rip+0xe89d]        # 10e68 <printf@GLIBC_2.2.5>
    25cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025d0 <snprintf@plt>:
    25d0:	f3 0f 1e fa          	endbr64 
    25d4:	f2 ff 25 95 e8 00 00 	bnd jmp QWORD PTR [rip+0xe895]        # 10e70 <snprintf@GLIBC_2.2.5>
    25db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025e0 <fputs@plt>:
    25e0:	f3 0f 1e fa          	endbr64 
    25e4:	f2 ff 25 8d e8 00 00 	bnd jmp QWORD PTR [rip+0xe88d]        # 10e78 <fputs@GLIBC_2.2.5>
    25eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025f0 <htonl@plt>:
    25f0:	f3 0f 1e fa          	endbr64 
    25f4:	f2 ff 25 85 e8 00 00 	bnd jmp QWORD PTR [rip+0xe885]        # 10e80 <htonl@GLIBC_2.2.5>
    25fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002600 <memset@plt>:
    2600:	f3 0f 1e fa          	endbr64 
    2604:	f2 ff 25 7d e8 00 00 	bnd jmp QWORD PTR [rip+0xe87d]        # 10e88 <memset@GLIBC_2.2.5>
    260b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002610 <strncat@plt>:
    2610:	f3 0f 1e fa          	endbr64 
    2614:	f2 ff 25 75 e8 00 00 	bnd jmp QWORD PTR [rip+0xe875]        # 10e90 <strncat@GLIBC_2.2.5>
    261b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002620 <close@plt>:
    2620:	f3 0f 1e fa          	endbr64 
    2624:	f2 ff 25 6d e8 00 00 	bnd jmp QWORD PTR [rip+0xe86d]        # 10e98 <close@GLIBC_2.2.5>
    262b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002630 <regcomp@plt>:
    2630:	f3 0f 1e fa          	endbr64 
    2634:	f2 ff 25 65 e8 00 00 	bnd jmp QWORD PTR [rip+0xe865]        # 10ea0 <regcomp@GLIBC_2.2.5>
    263b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002640 <strcspn@plt>:
    2640:	f3 0f 1e fa          	endbr64 
    2644:	f2 ff 25 5d e8 00 00 	bnd jmp QWORD PTR [rip+0xe85d]        # 10ea8 <strcspn@GLIBC_2.2.5>
    264b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002650 <read@plt>:
    2650:	f3 0f 1e fa          	endbr64 
    2654:	f2 ff 25 55 e8 00 00 	bnd jmp QWORD PTR [rip+0xe855]        # 10eb0 <read@GLIBC_2.2.5>
    265b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002660 <lua_close@plt>:
    2660:	f3 0f 1e fa          	endbr64 
    2664:	f2 ff 25 4d e8 00 00 	bnd jmp QWORD PTR [rip+0xe84d]        # 10eb8 <lua_close@LUA_5.3>
    266b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002670 <sqlite3_errmsg@plt>:
    2670:	f3 0f 1e fa          	endbr64 
    2674:	f2 ff 25 45 e8 00 00 	bnd jmp QWORD PTR [rip+0xe845]        # 10ec0 <sqlite3_errmsg>
    267b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002680 <strcmp@plt>:
    2680:	f3 0f 1e fa          	endbr64 
    2684:	f2 ff 25 3d e8 00 00 	bnd jmp QWORD PTR [rip+0xe83d]        # 10ec8 <strcmp@GLIBC_2.2.5>
    268b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002690 <signal@plt>:
    2690:	f3 0f 1e fa          	endbr64 
    2694:	f2 ff 25 35 e8 00 00 	bnd jmp QWORD PTR [rip+0xe835]        # 10ed0 <signal@GLIBC_2.2.5>
    269b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026a0 <fprintf@plt>:
    26a0:	f3 0f 1e fa          	endbr64 
    26a4:	f2 ff 25 2d e8 00 00 	bnd jmp QWORD PTR [rip+0xe82d]        # 10ed8 <fprintf@GLIBC_2.2.5>
    26ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026b0 <strtol@plt>:
    26b0:	f3 0f 1e fa          	endbr64 
    26b4:	f2 ff 25 25 e8 00 00 	bnd jmp QWORD PTR [rip+0xe825]        # 10ee0 <strtol@GLIBC_2.2.5>
    26bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026c0 <sqlite3_close@plt>:
    26c0:	f3 0f 1e fa          	endbr64 
    26c4:	f2 ff 25 1d e8 00 00 	bnd jmp QWORD PTR [rip+0xe81d]        # 10ee8 <sqlite3_close>
    26cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026d0 <time@plt>:
    26d0:	f3 0f 1e fa          	endbr64 
    26d4:	f2 ff 25 15 e8 00 00 	bnd jmp QWORD PTR [rip+0xe815]        # 10ef0 <time@GLIBC_2.2.5>
    26db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026e0 <luaL_newstate@plt>:
    26e0:	f3 0f 1e fa          	endbr64 
    26e4:	f2 ff 25 0d e8 00 00 	bnd jmp QWORD PTR [rip+0xe80d]        # 10ef8 <luaL_newstate@LUA_5.3>
    26eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026f0 <pcap_loop@plt>:
    26f0:	f3 0f 1e fa          	endbr64 
    26f4:	f2 ff 25 05 e8 00 00 	bnd jmp QWORD PTR [rip+0xe805]        # 10f00 <pcap_loop>
    26fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002700 <malloc@plt>:
    2700:	f3 0f 1e fa          	endbr64 
    2704:	f2 ff 25 fd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7fd]        # 10f08 <malloc@GLIBC_2.2.5>
    270b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002710 <listen@plt>:
    2710:	f3 0f 1e fa          	endbr64 
    2714:	f2 ff 25 f5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7f5]        # 10f10 <listen@GLIBC_2.2.5>
    271b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002720 <lua_pcallk@plt>:
    2720:	f3 0f 1e fa          	endbr64 
    2724:	f2 ff 25 ed e7 00 00 	bnd jmp QWORD PTR [rip+0xe7ed]        # 10f18 <lua_pcallk@LUA_5.3>
    272b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002730 <regexec@plt>:
    2730:	f3 0f 1e fa          	endbr64 
    2734:	f2 ff 25 e5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7e5]        # 10f20 <regexec@GLIBC_2.3.4>
    273b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002740 <ntohs@plt>:
    2740:	f3 0f 1e fa          	endbr64 
    2744:	f2 ff 25 dd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7dd]        # 10f28 <ntohs@GLIBC_2.2.5>
    274b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002750 <luaL_loadfilex@plt>:
    2750:	f3 0f 1e fa          	endbr64 
    2754:	f2 ff 25 d5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7d5]        # 10f30 <luaL_loadfilex@LUA_5.3>
    275b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002760 <bind@plt>:
    2760:	f3 0f 1e fa          	endbr64 
    2764:	f2 ff 25 cd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7cd]        # 10f38 <bind@GLIBC_2.2.5>
    276b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002770 <fopen@plt>:
    2770:	f3 0f 1e fa          	endbr64 
    2774:	f2 ff 25 c5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7c5]        # 10f40 <fopen@GLIBC_2.2.5>
    277b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002780 <perror@plt>:
    2780:	f3 0f 1e fa          	endbr64 
    2784:	f2 ff 25 bd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7bd]        # 10f48 <perror@GLIBC_2.2.5>
    278b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002790 <strtok@plt>:
    2790:	f3 0f 1e fa          	endbr64 
    2794:	f2 ff 25 b5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7b5]        # 10f50 <strtok@GLIBC_2.2.5>
    279b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027a0 <pthread_join@plt>:
    27a0:	f3 0f 1e fa          	endbr64 
    27a4:	f2 ff 25 ad e7 00 00 	bnd jmp QWORD PTR [rip+0xe7ad]        # 10f58 <pthread_join@GLIBC_2.2.5>
    27ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027b0 <luaL_openlibs@plt>:
    27b0:	f3 0f 1e fa          	endbr64 
    27b4:	f2 ff 25 a5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7a5]        # 10f60 <luaL_openlibs@LUA_5.3>
    27bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027c0 <getopt@plt>:
    27c0:	f3 0f 1e fa          	endbr64 
    27c4:	f2 ff 25 9d e7 00 00 	bnd jmp QWORD PTR [rip+0xe79d]        # 10f68 <getopt@GLIBC_2.2.5>
    27cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027d0 <accept@plt>:
    27d0:	f3 0f 1e fa          	endbr64 
    27d4:	f2 ff 25 95 e7 00 00 	bnd jmp QWORD PTR [rip+0xe795]        # 10f70 <accept@GLIBC_2.2.5>
    27db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027e0 <atoi@plt>:
    27e0:	f3 0f 1e fa          	endbr64 
    27e4:	f2 ff 25 8d e7 00 00 	bnd jmp QWORD PTR [rip+0xe78d]        # 10f78 <atoi@GLIBC_2.2.5>
    27eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027f0 <getline@plt>:
    27f0:	f3 0f 1e fa          	endbr64 
    27f4:	f2 ff 25 85 e7 00 00 	bnd jmp QWORD PTR [rip+0xe785]        # 10f80 <getline@GLIBC_2.2.5>
    27fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002800 <strcat@plt>:
    2800:	f3 0f 1e fa          	endbr64 
    2804:	f2 ff 25 7d e7 00 00 	bnd jmp QWORD PTR [rip+0xe77d]        # 10f88 <strcat@GLIBC_2.2.5>
    280b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002810 <pcap_open_live@plt>:
    2810:	f3 0f 1e fa          	endbr64 
    2814:	f2 ff 25 75 e7 00 00 	bnd jmp QWORD PTR [rip+0xe775]        # 10f90 <pcap_open_live>
    281b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002820 <sqlite3_free@plt>:
    2820:	f3 0f 1e fa          	endbr64 
    2824:	f2 ff 25 6d e7 00 00 	bnd jmp QWORD PTR [rip+0xe76d]        # 10f98 <sqlite3_free>
    282b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002830 <sprintf@plt>:
    2830:	f3 0f 1e fa          	endbr64 
    2834:	f2 ff 25 65 e7 00 00 	bnd jmp QWORD PTR [rip+0xe765]        # 10fa0 <sprintf@GLIBC_2.2.5>
    283b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002840 <exit@plt>:
    2840:	f3 0f 1e fa          	endbr64 
    2844:	f2 ff 25 5d e7 00 00 	bnd jmp QWORD PTR [rip+0xe75d]        # 10fa8 <exit@GLIBC_2.2.5>
    284b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002850 <ntohl@plt>:
    2850:	f3 0f 1e fa          	endbr64 
    2854:	f2 ff 25 55 e7 00 00 	bnd jmp QWORD PTR [rip+0xe755]        # 10fb0 <ntohl@GLIBC_2.2.5>
    285b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002860 <sleep@plt>:
    2860:	f3 0f 1e fa          	endbr64 
    2864:	f2 ff 25 4d e7 00 00 	bnd jmp QWORD PTR [rip+0xe74d]        # 10fb8 <sleep@GLIBC_2.2.5>
    286b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002870 <getdelim@plt>:
    2870:	f3 0f 1e fa          	endbr64 
    2874:	f2 ff 25 45 e7 00 00 	bnd jmp QWORD PTR [rip+0xe745]        # 10fc0 <getdelim@GLIBC_2.2.5>
    287b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002880 <strstr@plt>:
    2880:	f3 0f 1e fa          	endbr64 
    2884:	f2 ff 25 3d e7 00 00 	bnd jmp QWORD PTR [rip+0xe73d]        # 10fc8 <strstr@GLIBC_2.2.5>
    288b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002890 <socket@plt>:
    2890:	f3 0f 1e fa          	endbr64 
    2894:	f2 ff 25 35 e7 00 00 	bnd jmp QWORD PTR [rip+0xe735]        # 10fd0 <socket@GLIBC_2.2.5>
    289b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000000028a0 <_start>:
    28a0:	f3 0f 1e fa          	endbr64 
    28a4:	31 ed                	xor    ebp,ebp
    28a6:	49 89 d1             	mov    r9,rdx
    28a9:	5e                   	pop    rsi
    28aa:	48 89 e2             	mov    rdx,rsp
    28ad:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    28b1:	50                   	push   rax
    28b2:	54                   	push   rsp
    28b3:	4c 8d 05 c6 91 00 00 	lea    r8,[rip+0x91c6]        # ba80 <__libc_csu_fini>
    28ba:	48 8d 0d 4f 91 00 00 	lea    rcx,[rip+0x914f]        # ba10 <__libc_csu_init>
    28c1:	48 8d 3d f0 40 00 00 	lea    rdi,[rip+0x40f0]        # 69b8 <main>
    28c8:	ff 15 12 e7 00 00    	call   QWORD PTR [rip+0xe712]        # 10fe0 <__libc_start_main@GLIBC_2.2.5>
    28ce:	f4                   	hlt    
    28cf:	90                   	nop

00000000000028d0 <deregister_tm_clones>:
    28d0:	48 8d 3d 71 e7 00 00 	lea    rdi,[rip+0xe771]        # 11048 <__TMC_END__>
    28d7:	48 8d 05 6a e7 00 00 	lea    rax,[rip+0xe76a]        # 11048 <__TMC_END__>
    28de:	48 39 f8             	cmp    rax,rdi
    28e1:	74 15                	je     28f8 <deregister_tm_clones+0x28>
    28e3:	48 8b 05 ee e6 00 00 	mov    rax,QWORD PTR [rip+0xe6ee]        # 10fd8 <_ITM_deregisterTMCloneTable>
    28ea:	48 85 c0             	test   rax,rax
    28ed:	74 09                	je     28f8 <deregister_tm_clones+0x28>
    28ef:	ff e0                	jmp    rax
    28f1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    28f8:	c3                   	ret    
    28f9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002900 <register_tm_clones>:
    2900:	48 8d 3d 41 e7 00 00 	lea    rdi,[rip+0xe741]        # 11048 <__TMC_END__>
    2907:	48 8d 35 3a e7 00 00 	lea    rsi,[rip+0xe73a]        # 11048 <__TMC_END__>
    290e:	48 29 fe             	sub    rsi,rdi
    2911:	48 89 f0             	mov    rax,rsi
    2914:	48 c1 ee 3f          	shr    rsi,0x3f
    2918:	48 c1 f8 03          	sar    rax,0x3
    291c:	48 01 c6             	add    rsi,rax
    291f:	48 d1 fe             	sar    rsi,1
    2922:	74 14                	je     2938 <register_tm_clones+0x38>
    2924:	48 8b 05 c5 e6 00 00 	mov    rax,QWORD PTR [rip+0xe6c5]        # 10ff0 <_ITM_registerTMCloneTable>
    292b:	48 85 c0             	test   rax,rax
    292e:	74 08                	je     2938 <register_tm_clones+0x38>
    2930:	ff e0                	jmp    rax
    2932:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    2938:	c3                   	ret    
    2939:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002940 <__do_global_dtors_aux>:
    2940:	f3 0f 1e fa          	endbr64 
    2944:	80 3d 1d e7 00 00 00 	cmp    BYTE PTR [rip+0xe71d],0x0        # 11068 <completed.8061>
    294b:	75 2b                	jne    2978 <__do_global_dtors_aux+0x38>
    294d:	55                   	push   rbp
    294e:	48 83 3d a2 e6 00 00 	cmp    QWORD PTR [rip+0xe6a2],0x0        # 10ff8 <__cxa_finalize@GLIBC_2.2.5>
    2955:	00 
    2956:	48 89 e5             	mov    rbp,rsp
    2959:	74 0c                	je     2967 <__do_global_dtors_aux+0x27>
    295b:	48 8b 3d a6 e6 00 00 	mov    rdi,QWORD PTR [rip+0xe6a6]        # 11008 <__dso_handle>
    2962:	e8 f9 fa ff ff       	call   2460 <__cxa_finalize@plt>
    2967:	e8 64 ff ff ff       	call   28d0 <deregister_tm_clones>
    296c:	c6 05 f5 e6 00 00 01 	mov    BYTE PTR [rip+0xe6f5],0x1        # 11068 <completed.8061>
    2973:	5d                   	pop    rbp
    2974:	c3                   	ret    
    2975:	0f 1f 00             	nop    DWORD PTR [rax]
    2978:	c3                   	ret    
    2979:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002980 <frame_dummy>:
    2980:	f3 0f 1e fa          	endbr64 
    2984:	e9 77 ff ff ff       	jmp    2900 <register_tm_clones>

0000000000002989 <add_thread>:
    2989:	f3 0f 1e fa          	endbr64 
    298d:	55                   	push   rbp
    298e:	48 89 e5             	mov    rbp,rsp
    2991:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    2995:	8b 05 e5 e6 00 00    	mov    eax,DWORD PTR [rip+0xe6e5]        # 11080 <thread_count>
    299b:	8d 50 01             	lea    edx,[rax+0x1]
    299e:	89 15 dc e6 00 00    	mov    DWORD PTR [rip+0xe6dc],edx        # 11080 <thread_count>
    29a4:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    29a8:	48 8b 12             	mov    rdx,QWORD PTR [rdx]
    29ab:	48 98                	cdqe   
    29ad:	48 8d 0c c5 00 00 00 	lea    rcx,[rax*8+0x0]
    29b4:	00 
    29b5:	48 8d 05 84 4f 10 00 	lea    rax,[rip+0x104f84]        # 107940 <threads>
    29bc:	48 89 14 01          	mov    QWORD PTR [rcx+rax*1],rdx
    29c0:	90                   	nop
    29c1:	5d                   	pop    rbp
    29c2:	c3                   	ret    

00000000000029c3 <pktmgr>:
    29c3:	f3 0f 1e fa          	endbr64 
    29c7:	55                   	push   rbp
    29c8:	48 89 e5             	mov    rbp,rsp
    29cb:	53                   	push   rbx
    29cc:	48 83 ec 38          	sub    rsp,0x38
    29d0:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    29d4:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    29d8:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    29dc:	0f b6 05 56 4f 10 00 	movzx  eax,BYTE PTR [rip+0x104f56]        # 107939 <packet_print>
    29e3:	84 c0                	test   al,al
    29e5:	74 0c                	je     29f3 <pktmgr+0x30>
    29e7:	48 8d 3d 62 96 00 00 	lea    rdi,[rip+0x9662]        # c050 <_IO_stdin_used+0x50>
    29ee:	e8 0d fb ff ff       	call   2500 <puts@plt>
    29f3:	8b 05 8b e6 00 00    	mov    eax,DWORD PTR [rip+0xe68b]        # 11084 <total_pkt_captured>
    29f9:	83 c0 01             	add    eax,0x1
    29fc:	89 05 82 e6 00 00    	mov    DWORD PTR [rip+0xe682],eax        # 11084 <total_pkt_captured>
    2a02:	8b 05 38 51 10 00    	mov    eax,DWORD PTR [rip+0x105138]        # 107b40 <pkt_counter>
    2a08:	83 c0 01             	add    eax,0x1
    2a0b:	89 05 2f 51 10 00    	mov    DWORD PTR [rip+0x10512f],eax        # 107b40 <pkt_counter>
    2a11:	8b 15 29 51 10 00    	mov    edx,DWORD PTR [rip+0x105129]        # 107b40 <pkt_counter>
    2a17:	8b 05 83 4e 10 00    	mov    eax,DWORD PTR [rip+0x104e83]        # 1078a0 <clean_delay_pkts>
    2a1d:	39 c2                	cmp    edx,eax
    2a1f:	72 0a                	jb     2a2b <pktmgr+0x68>
    2a21:	c7 05 15 51 10 00 00 	mov    DWORD PTR [rip+0x105115],0x0        # 107b40 <pkt_counter>
    2a28:	00 00 00 
    2a2b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2a2f:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    2a33:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2a37:	0f b7 40 0c          	movzx  eax,WORD PTR [rax+0xc]
    2a3b:	0f b7 c0             	movzx  eax,ax
    2a3e:	3d 86 dd 00 00       	cmp    eax,0xdd86
    2a43:	74 46                	je     2a8b <pktmgr+0xc8>
    2a45:	3d 86 dd 00 00       	cmp    eax,0xdd86
    2a4a:	7f 77                	jg     2ac3 <pktmgr+0x100>
    2a4c:	3d 80 35 00 00       	cmp    eax,0x3580
    2a51:	74 23                	je     2a76 <pktmgr+0xb3>
    2a53:	3d 80 35 00 00       	cmp    eax,0x3580
    2a58:	7f 69                	jg     2ac3 <pktmgr+0x100>
    2a5a:	3d 08 06 00 00       	cmp    eax,0x608
    2a5f:	74 15                	je     2a76 <pktmgr+0xb3>
    2a61:	3d 08 06 00 00       	cmp    eax,0x608
    2a66:	7f 5b                	jg     2ac3 <pktmgr+0x100>
    2a68:	83 f8 08             	cmp    eax,0x8
    2a6b:	74 33                	je     2aa0 <pktmgr+0xdd>
    2a6d:	3d 90 00 00 00       	cmp    eax,0x90
    2a72:	74 41                	je     2ab5 <pktmgr+0xf2>
    2a74:	eb 4d                	jmp    2ac3 <pktmgr+0x100>
    2a76:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2a7a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2a7e:	48 89 d6             	mov    rsi,rdx
    2a81:	48 89 c7             	mov    rdi,rax
    2a84:	e8 87 00 00 00       	call   2b10 <arpdecode>
    2a89:	eb 7d                	jmp    2b08 <pktmgr+0x145>
    2a8b:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2a8f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2a93:	48 89 d6             	mov    rsi,rdx
    2a96:	48 89 c7             	mov    rdi,rax
    2a99:	e8 f9 88 00 00       	call   b397 <ip6decode>
    2a9e:	eb 68                	jmp    2b08 <pktmgr+0x145>
    2aa0:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2aa4:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2aa8:	48 89 d6             	mov    rsi,rdx
    2aab:	48 89 c7             	mov    rdi,rax
    2aae:	e8 58 0b 00 00       	call   360b <ipv4pktmgr>
    2ab3:	eb 53                	jmp    2b08 <pktmgr+0x145>
    2ab5:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2ab9:	48 89 c7             	mov    rdi,rax
    2abc:	e8 43 03 00 00       	call   2e04 <loopback_ctp_decode>
    2ac1:	eb 45                	jmp    2b08 <pktmgr+0x145>
    2ac3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2ac7:	48 89 c7             	mov    rdi,rax
    2aca:	e8 f6 04 00 00       	call   2fc5 <uc_mac_ntoa>
    2acf:	48 89 c3             	mov    rbx,rax
    2ad2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2ad6:	48 83 c0 06          	add    rax,0x6
    2ada:	48 89 c7             	mov    rdi,rax
    2add:	e8 e3 04 00 00       	call   2fc5 <uc_mac_ntoa>
    2ae2:	41 b9 ff ff ff ff    	mov    r9d,0xffffffff
    2ae8:	41 b8 ff ff ff ff    	mov    r8d,0xffffffff
    2aee:	48 89 d9             	mov    rcx,rbx
    2af1:	48 89 c2             	mov    rdx,rax
    2af4:	48 8d 35 9d 95 00 00 	lea    rsi,[rip+0x959d]        # c098 <_IO_stdin_used+0x98>
    2afb:	48 8d 3d c8 95 00 00 	lea    rdi,[rip+0x95c8]        # c0ca <_IO_stdin_used+0xca>
    2b02:	e8 de 68 00 00       	call   93e5 <lfprintf>
    2b07:	90                   	nop
    2b08:	90                   	nop
    2b09:	48 83 c4 38          	add    rsp,0x38
    2b0d:	5b                   	pop    rbx
    2b0e:	5d                   	pop    rbp
    2b0f:	c3                   	ret    

0000000000002b10 <arpdecode>:
    2b10:	f3 0f 1e fa          	endbr64 
    2b14:	55                   	push   rbp
    2b15:	48 89 e5             	mov    rbp,rsp
    2b18:	48 81 ec 50 03 00 00 	sub    rsp,0x350
    2b1f:	48 89 bd b8 fc ff ff 	mov    QWORD PTR [rbp-0x348],rdi
    2b26:	48 89 b5 b0 fc ff ff 	mov    QWORD PTR [rbp-0x350],rsi
    2b2d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2b34:	00 00 
    2b36:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2b3a:	31 c0                	xor    eax,eax
    2b3c:	0f b6 05 f6 4d 10 00 	movzx  eax,BYTE PTR [rip+0x104df6]        # 107939 <packet_print>
    2b43:	84 c0                	test   al,al
    2b45:	74 18                	je     2b5f <arpdecode+0x4f>
    2b47:	48 8d 35 9a 95 00 00 	lea    rsi,[rip+0x959a]        # c0e8 <_IO_stdin_used+0xe8>
    2b4e:	48 8d 3d 9b 95 00 00 	lea    rdi,[rip+0x959b]        # c0f0 <_IO_stdin_used+0xf0>
    2b55:	b8 00 00 00 00       	mov    eax,0x0
    2b5a:	e8 61 fa ff ff       	call   25c0 <printf@plt>
    2b5f:	48 8b 85 b8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x348]
    2b66:	48 83 c0 0e          	add    rax,0xe
    2b6a:	48 89 85 c8 fc ff ff 	mov    QWORD PTR [rbp-0x338],rax
    2b71:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2b78:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    2b7c:	0f b7 c0             	movzx  eax,ax
    2b7f:	3d 00 18 00 00       	cmp    eax,0x1800
    2b84:	74 35                	je     2bbb <arpdecode+0xab>
    2b86:	3d 00 18 00 00       	cmp    eax,0x1800
    2b8b:	0f 8f 1d 02 00 00    	jg     2dae <arpdecode+0x29e>
    2b91:	3d 00 02 00 00       	cmp    eax,0x200
    2b96:	0f 84 eb 00 00 00    	je     2c87 <arpdecode+0x177>
    2b9c:	3d 00 02 00 00       	cmp    eax,0x200
    2ba1:	0f 8f 07 02 00 00    	jg     2dae <arpdecode+0x29e>
    2ba7:	83 f8 02             	cmp    eax,0x2
    2baa:	0f 84 d7 00 00 00    	je     2c87 <arpdecode+0x177>
    2bb0:	3d 00 01 00 00       	cmp    eax,0x100
    2bb5:	0f 85 f3 01 00 00    	jne    2dae <arpdecode+0x29e>
    2bbb:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2bc2:	48 83 c0 18          	add    rax,0x18
    2bc6:	48 89 c7             	mov    rdi,rax
    2bc9:	e8 9d 04 00 00       	call   306b <u8_ipv4_ntoa>
    2bce:	48 89 c1             	mov    rcx,rax
    2bd1:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2bd5:	ba 20 00 00 00       	mov    edx,0x20
    2bda:	48 89 ce             	mov    rsi,rcx
    2bdd:	48 89 c7             	mov    rdi,rax
    2be0:	e8 cb f8 ff ff       	call   24b0 <strncpy@plt>
    2be5:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2bec:	48 83 c0 0e          	add    rax,0xe
    2bf0:	48 89 c7             	mov    rdi,rax
    2bf3:	e8 73 04 00 00       	call   306b <u8_ipv4_ntoa>
    2bf8:	48 89 c1             	mov    rcx,rax
    2bfb:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2bff:	ba 20 00 00 00       	mov    edx,0x20
    2c04:	48 89 ce             	mov    rsi,rcx
    2c07:	48 89 c7             	mov    rdi,rax
    2c0a:	e8 a1 f8 ff ff       	call   24b0 <strncpy@plt>
    2c0f:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2c13:	ba 05 00 00 00       	mov    edx,0x5
    2c18:	48 8d 35 d4 94 00 00 	lea    rsi,[rip+0x94d4]        # c0f3 <_IO_stdin_used+0xf3>
    2c1f:	48 89 c7             	mov    rdi,rax
    2c22:	e8 99 f8 ff ff       	call   24c0 <strncmp@plt>
    2c27:	85 c0                	test   eax,eax
    2c29:	75 2c                	jne    2c57 <arpdecode+0x147>
    2c2b:	0f b6 05 07 4d 10 00 	movzx  eax,BYTE PTR [rip+0x104d07]        # 107939 <packet_print>
    2c32:	84 c0                	test   al,al
    2c34:	0f 84 97 01 00 00    	je     2dd1 <arpdecode+0x2c1>
    2c3a:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2c3e:	48 89 c6             	mov    rsi,rax
    2c41:	48 8d 3d b8 94 00 00 	lea    rdi,[rip+0x94b8]        # c100 <_IO_stdin_used+0x100>
    2c48:	b8 00 00 00 00       	mov    eax,0x0
    2c4d:	e8 6e f9 ff ff       	call   25c0 <printf@plt>
    2c52:	e9 7a 01 00 00       	jmp    2dd1 <arpdecode+0x2c1>
    2c57:	0f b6 05 db 4c 10 00 	movzx  eax,BYTE PTR [rip+0x104cdb]        # 107939 <packet_print>
    2c5e:	84 c0                	test   al,al
    2c60:	0f 84 6b 01 00 00    	je     2dd1 <arpdecode+0x2c1>
    2c66:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2c6a:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2c6e:	48 89 c6             	mov    rsi,rax
    2c71:	48 8d 3d a8 94 00 00 	lea    rdi,[rip+0x94a8]        # c120 <_IO_stdin_used+0x120>
    2c78:	b8 00 00 00 00       	mov    eax,0x0
    2c7d:	e8 3e f9 ff ff       	call   25c0 <printf@plt>
    2c82:	e9 4a 01 00 00       	jmp    2dd1 <arpdecode+0x2c1>
    2c87:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2c8e:	48 83 c0 08          	add    rax,0x8
    2c92:	48 89 c7             	mov    rdi,rax
    2c95:	e8 7d 02 00 00       	call   2f17 <mac_ntoa>
    2c9a:	48 89 c1             	mov    rcx,rax
    2c9d:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2ca1:	ba 40 00 00 00       	mov    edx,0x40
    2ca6:	48 89 ce             	mov    rsi,rcx
    2ca9:	48 89 c7             	mov    rdi,rax
    2cac:	e8 ff f7 ff ff       	call   24b0 <strncpy@plt>
    2cb1:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2cb8:	48 83 c0 0e          	add    rax,0xe
    2cbc:	48 89 c7             	mov    rdi,rax
    2cbf:	e8 a7 03 00 00       	call   306b <u8_ipv4_ntoa>
    2cc4:	48 89 c1             	mov    rcx,rax
    2cc7:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2ccb:	ba 20 00 00 00       	mov    edx,0x20
    2cd0:	48 89 ce             	mov    rsi,rcx
    2cd3:	48 89 c7             	mov    rdi,rax
    2cd6:	e8 d5 f7 ff ff       	call   24b0 <strncpy@plt>
    2cdb:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2cdf:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2ce3:	48 89 d6             	mov    rsi,rdx
    2ce6:	48 89 c7             	mov    rdi,rax
    2ce9:	e8 0d 51 00 00       	call   7dfb <entry_exists>
    2cee:	83 f8 ff             	cmp    eax,0xffffffff
    2cf1:	74 15                	je     2d08 <arpdecode+0x1f8>
    2cf3:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2cf7:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2cfb:	48 89 d6             	mov    rsi,rdx
    2cfe:	48 89 c7             	mov    rdi,rax
    2d01:	e8 a2 4f 00 00       	call   7ca8 <compare_entries>
    2d06:	eb 7d                	jmp    2d85 <arpdecode+0x275>
    2d08:	0f b6 05 11 4c 10 00 	movzx  eax,BYTE PTR [rip+0x104c11]        # 107920 <use_sqlite>
    2d0f:	84 c0                	test   al,al
    2d11:	74 5f                	je     2d72 <arpdecode+0x262>
    2d13:	c7 85 f4 fc ff ff 00 	mov    DWORD PTR [rbp-0x30c],0x0
    2d1a:	00 00 00 
    2d1d:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    2d21:	48 8d 85 d0 fc ff ff 	lea    rax,[rbp-0x330]
    2d28:	48 89 d6             	mov    rsi,rdx
    2d2b:	48 89 c7             	mov    rdi,rax
    2d2e:	e8 9d f7 ff ff       	call   24d0 <strcpy@plt>
    2d33:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2d37:	48 8d 95 d0 fc ff ff 	lea    rdx,[rbp-0x330]
    2d3e:	48 83 c2 10          	add    rdx,0x10
    2d42:	48 89 c6             	mov    rsi,rax
    2d45:	48 89 d7             	mov    rdi,rdx
    2d48:	e8 83 f7 ff ff       	call   24d0 <strcpy@plt>
    2d4d:	48 8d 95 d0 fc ff ff 	lea    rdx,[rbp-0x330]
    2d54:	48 8d 85 c0 fc ff ff 	lea    rax,[rbp-0x340]
    2d5b:	48 89 d1             	mov    rcx,rdx
    2d5e:	48 8d 15 b8 55 00 00 	lea    rdx,[rip+0x55b8]        # 831d <update_db>
    2d65:	be 00 00 00 00       	mov    esi,0x0
    2d6a:	48 89 c7             	mov    rdi,rax
    2d6d:	e8 1e f7 ff ff       	call   2490 <pthread_create@plt>
    2d72:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2d76:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d7a:	48 89 d6             	mov    rsi,rdx
    2d7d:	48 89 c7             	mov    rdi,rax
    2d80:	e8 02 50 00 00       	call   7d87 <add_entry>
    2d85:	0f b6 05 ad 4b 10 00 	movzx  eax,BYTE PTR [rip+0x104bad]        # 107939 <packet_print>
    2d8c:	84 c0                	test   al,al
    2d8e:	74 44                	je     2dd4 <arpdecode+0x2c4>
    2d90:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2d94:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d98:	48 89 c6             	mov    rsi,rax
    2d9b:	48 8d 3d a6 93 00 00 	lea    rdi,[rip+0x93a6]        # c148 <_IO_stdin_used+0x148>
    2da2:	b8 00 00 00 00       	mov    eax,0x0
    2da7:	e8 14 f8 ff ff       	call   25c0 <printf@plt>
    2dac:	eb 26                	jmp    2dd4 <arpdecode+0x2c4>
    2dae:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2db5:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    2db9:	0f b7 c0             	movzx  eax,ax
    2dbc:	89 c6                	mov    esi,eax
    2dbe:	48 8d 3d a2 93 00 00 	lea    rdi,[rip+0x93a2]        # c167 <_IO_stdin_used+0x167>
    2dc5:	b8 00 00 00 00       	mov    eax,0x0
    2dca:	e8 f1 f7 ff ff       	call   25c0 <printf@plt>
    2dcf:	eb 04                	jmp    2dd5 <arpdecode+0x2c5>
    2dd1:	90                   	nop
    2dd2:	eb 01                	jmp    2dd5 <arpdecode+0x2c5>
    2dd4:	90                   	nop
    2dd5:	48 8d 35 a3 93 00 00 	lea    rsi,[rip+0x93a3]        # c17f <_IO_stdin_used+0x17f>
    2ddc:	48 8d 3d 0d 93 00 00 	lea    rdi,[rip+0x930d]        # c0f0 <_IO_stdin_used+0xf0>
    2de3:	b8 00 00 00 00       	mov    eax,0x0
    2de8:	e8 d3 f7 ff ff       	call   25c0 <printf@plt>
    2ded:	90                   	nop
    2dee:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2df2:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    2df9:	00 00 
    2dfb:	74 05                	je     2e02 <arpdecode+0x2f2>
    2dfd:	e8 7e f7 ff ff       	call   2580 <__stack_chk_fail@plt>
    2e02:	c9                   	leave  
    2e03:	c3                   	ret    

0000000000002e04 <loopback_ctp_decode>:
    2e04:	f3 0f 1e fa          	endbr64 
    2e08:	55                   	push   rbp
    2e09:	48 89 e5             	mov    rbp,rsp
    2e0c:	48 83 ec 60          	sub    rsp,0x60
    2e10:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    2e14:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2e1b:	00 00 
    2e1d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2e21:	31 c0                	xor    eax,eax
    2e23:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    2e27:	48 83 c0 0e          	add    rax,0xe
    2e2b:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    2e2f:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    2e33:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    2e37:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    2e3b:	48 83 c0 06          	add    rax,0x6
    2e3f:	48 89 c7             	mov    rdi,rax
    2e42:	e8 7e 01 00 00       	call   2fc5 <uc_mac_ntoa>
    2e47:	48 89 c1             	mov    rcx,rax
    2e4a:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    2e4e:	ba 18 00 00 00       	mov    edx,0x18
    2e53:	48 89 ce             	mov    rsi,rcx
    2e56:	48 89 c7             	mov    rdi,rax
    2e59:	e8 52 f6 ff ff       	call   24b0 <strncpy@plt>
    2e5e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    2e62:	48 89 c7             	mov    rdi,rax
    2e65:	e8 5b 01 00 00       	call   2fc5 <uc_mac_ntoa>
    2e6a:	48 89 c1             	mov    rcx,rax
    2e6d:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    2e71:	ba 18 00 00 00       	mov    edx,0x18
    2e76:	48 89 ce             	mov    rsi,rcx
    2e79:	48 89 c7             	mov    rdi,rax
    2e7c:	e8 2f f6 ff ff       	call   24b0 <strncpy@plt>
    2e81:	0f b6 05 b1 4a 10 00 	movzx  eax,BYTE PTR [rip+0x104ab1]        # 107939 <packet_print>
    2e88:	84 c0                	test   al,al
    2e8a:	74 1c                	je     2ea8 <loopback_ctp_decode+0xa4>
    2e8c:	48 8d 55 e0          	lea    rdx,[rbp-0x20]
    2e90:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    2e94:	48 89 c6             	mov    rsi,rax
    2e97:	48 8d 3d e6 92 00 00 	lea    rdi,[rip+0x92e6]        # c184 <_IO_stdin_used+0x184>
    2e9e:	b8 00 00 00 00       	mov    eax,0x0
    2ea3:	e8 18 f7 ff ff       	call   25c0 <printf@plt>
    2ea8:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    2eac:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    2eb0:	0f b7 c0             	movzx  eax,ax
    2eb3:	83 f8 01             	cmp    eax,0x1
    2eb6:	75 19                	jne    2ed1 <loopback_ctp_decode+0xcd>
    2eb8:	0f b6 05 7a 4a 10 00 	movzx  eax,BYTE PTR [rip+0x104a7a]        # 107939 <packet_print>
    2ebf:	84 c0                	test   al,al
    2ec1:	74 39                	je     2efc <loopback_ctp_decode+0xf8>
    2ec3:	48 8d 3d c8 92 00 00 	lea    rdi,[rip+0x92c8]        # c192 <_IO_stdin_used+0x192>
    2eca:	e8 31 f6 ff ff       	call   2500 <puts@plt>
    2ecf:	eb 2b                	jmp    2efc <loopback_ctp_decode+0xf8>
    2ed1:	0f b6 05 61 4a 10 00 	movzx  eax,BYTE PTR [rip+0x104a61]        # 107939 <packet_print>
    2ed8:	84 c0                	test   al,al
    2eda:	74 23                	je     2eff <loopback_ctp_decode+0xfb>
    2edc:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    2ee0:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    2ee4:	0f b7 c0             	movzx  eax,ax
    2ee7:	89 c6                	mov    esi,eax
    2ee9:	48 8d 3d aa 92 00 00 	lea    rdi,[rip+0x92aa]        # c19a <_IO_stdin_used+0x19a>
    2ef0:	b8 00 00 00 00       	mov    eax,0x0
    2ef5:	e8 c6 f6 ff ff       	call   25c0 <printf@plt>
    2efa:	eb 03                	jmp    2eff <loopback_ctp_decode+0xfb>
    2efc:	90                   	nop
    2efd:	eb 01                	jmp    2f00 <loopback_ctp_decode+0xfc>
    2eff:	90                   	nop
    2f00:	90                   	nop
    2f01:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f05:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    2f0c:	00 00 
    2f0e:	74 05                	je     2f15 <loopback_ctp_decode+0x111>
    2f10:	e8 6b f6 ff ff       	call   2580 <__stack_chk_fail@plt>
    2f15:	c9                   	leave  
    2f16:	c3                   	ret    

0000000000002f17 <mac_ntoa>:
    2f17:	f3 0f 1e fa          	endbr64 
    2f1b:	55                   	push   rbp
    2f1c:	48 89 e5             	mov    rbp,rsp
    2f1f:	48 83 ec 20          	sub    rsp,0x20
    2f23:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    2f27:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2f2b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2f2f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f33:	48 83 c0 05          	add    rax,0x5
    2f37:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f3a:	0f b6 f0             	movzx  esi,al
    2f3d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f41:	48 83 c0 04          	add    rax,0x4
    2f45:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f48:	0f b6 c8             	movzx  ecx,al
    2f4b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f4f:	48 83 c0 03          	add    rax,0x3
    2f53:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f56:	0f b6 d0             	movzx  edx,al
    2f59:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f5d:	48 83 c0 02          	add    rax,0x2
    2f61:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f64:	44 0f b6 c8          	movzx  r9d,al
    2f68:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f6c:	48 83 c0 01          	add    rax,0x1
    2f70:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f73:	44 0f b6 c0          	movzx  r8d,al
    2f77:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f7b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f7e:	0f b6 c0             	movzx  eax,al
    2f81:	64 48 8b 3c 25 00 00 	mov    rdi,QWORD PTR fs:0x0
    2f88:	00 00 
    2f8a:	48 81 c7 80 fb ff ff 	add    rdi,0xfffffffffffffb80
    2f91:	48 83 ec 08          	sub    rsp,0x8
    2f95:	56                   	push   rsi
    2f96:	51                   	push   rcx
    2f97:	52                   	push   rdx
    2f98:	89 c1                	mov    ecx,eax
    2f9a:	48 8d 15 17 92 00 00 	lea    rdx,[rip+0x9217]        # c1b8 <_IO_stdin_used+0x1b8>
    2fa1:	be 80 00 00 00       	mov    esi,0x80
    2fa6:	b8 00 00 00 00       	mov    eax,0x0
    2fab:	e8 20 f6 ff ff       	call   25d0 <snprintf@plt>
    2fb0:	48 83 c4 20          	add    rsp,0x20
    2fb4:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    2fbb:	00 00 
    2fbd:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    2fc3:	c9                   	leave  
    2fc4:	c3                   	ret    

0000000000002fc5 <uc_mac_ntoa>:
    2fc5:	f3 0f 1e fa          	endbr64 
    2fc9:	55                   	push   rbp
    2fca:	48 89 e5             	mov    rbp,rsp
    2fcd:	48 83 ec 10          	sub    rsp,0x10
    2fd1:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    2fd5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fd9:	48 83 c0 05          	add    rax,0x5
    2fdd:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fe0:	0f b6 f0             	movzx  esi,al
    2fe3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fe7:	48 83 c0 04          	add    rax,0x4
    2feb:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fee:	0f b6 c8             	movzx  ecx,al
    2ff1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2ff5:	48 83 c0 03          	add    rax,0x3
    2ff9:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2ffc:	0f b6 d0             	movzx  edx,al
    2fff:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3003:	48 83 c0 02          	add    rax,0x2
    3007:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    300a:	44 0f b6 c8          	movzx  r9d,al
    300e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3012:	48 83 c0 01          	add    rax,0x1
    3016:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3019:	44 0f b6 c0          	movzx  r8d,al
    301d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3021:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3024:	0f b6 c0             	movzx  eax,al
    3027:	64 48 8b 3c 25 00 00 	mov    rdi,QWORD PTR fs:0x0
    302e:	00 00 
    3030:	48 81 c7 80 fb ff ff 	add    rdi,0xfffffffffffffb80
    3037:	48 83 ec 08          	sub    rsp,0x8
    303b:	56                   	push   rsi
    303c:	51                   	push   rcx
    303d:	52                   	push   rdx
    303e:	89 c1                	mov    ecx,eax
    3040:	48 8d 15 71 91 00 00 	lea    rdx,[rip+0x9171]        # c1b8 <_IO_stdin_used+0x1b8>
    3047:	be 80 00 00 00       	mov    esi,0x80
    304c:	b8 00 00 00 00       	mov    eax,0x0
    3051:	e8 7a f5 ff ff       	call   25d0 <snprintf@plt>
    3056:	48 83 c4 20          	add    rsp,0x20
    305a:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3061:	00 00 
    3063:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    3069:	c9                   	leave  
    306a:	c3                   	ret    

000000000000306b <u8_ipv4_ntoa>:
    306b:	f3 0f 1e fa          	endbr64 
    306f:	55                   	push   rbp
    3070:	48 89 e5             	mov    rbp,rsp
    3073:	48 83 ec 20          	sub    rsp,0x20
    3077:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    307b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    307f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3083:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3087:	48 83 c0 03          	add    rax,0x3
    308b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    308e:	0f b6 d0             	movzx  edx,al
    3091:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3095:	48 83 c0 02          	add    rax,0x2
    3099:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    309c:	44 0f b6 c0          	movzx  r8d,al
    30a0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    30a4:	48 83 c0 01          	add    rax,0x1
    30a8:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    30ab:	0f b6 f0             	movzx  esi,al
    30ae:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    30b2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    30b5:	0f b6 c0             	movzx  eax,al
    30b8:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    30bf:	00 00 
    30c1:	48 8d b9 80 fb ff ff 	lea    rdi,[rcx-0x480]
    30c8:	48 83 ec 08          	sub    rsp,0x8
    30cc:	52                   	push   rdx
    30cd:	45 89 c1             	mov    r9d,r8d
    30d0:	41 89 f0             	mov    r8d,esi
    30d3:	89 c1                	mov    ecx,eax
    30d5:	48 8d 15 fa 90 00 00 	lea    rdx,[rip+0x90fa]        # c1d6 <_IO_stdin_used+0x1d6>
    30dc:	be 80 00 00 00       	mov    esi,0x80
    30e1:	b8 00 00 00 00       	mov    eax,0x0
    30e6:	e8 e5 f4 ff ff       	call   25d0 <snprintf@plt>
    30eb:	48 83 c4 10          	add    rsp,0x10
    30ef:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    30f6:	00 00 
    30f8:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    30fe:	c9                   	leave  
    30ff:	c3                   	ret    

0000000000003100 <ipv4_ntoa>:
    3100:	f3 0f 1e fa          	endbr64 
    3104:	55                   	push   rbp
    3105:	48 89 e5             	mov    rbp,rsp
    3108:	48 83 ec 20          	sub    rsp,0x20
    310c:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    310f:	48 8d 45 ec          	lea    rax,[rbp-0x14]
    3113:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3117:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    311b:	48 83 c0 03          	add    rax,0x3
    311f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3122:	0f b6 d0             	movzx  edx,al
    3125:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3129:	48 83 c0 02          	add    rax,0x2
    312d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3130:	44 0f b6 c0          	movzx  r8d,al
    3134:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3138:	48 83 c0 01          	add    rax,0x1
    313c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    313f:	0f b6 f0             	movzx  esi,al
    3142:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3146:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3149:	0f b6 c0             	movzx  eax,al
    314c:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    3153:	00 00 
    3155:	48 8d b9 80 fb ff ff 	lea    rdi,[rcx-0x480]
    315c:	48 83 ec 08          	sub    rsp,0x8
    3160:	52                   	push   rdx
    3161:	45 89 c1             	mov    r9d,r8d
    3164:	41 89 f0             	mov    r8d,esi
    3167:	89 c1                	mov    ecx,eax
    3169:	48 8d 15 66 90 00 00 	lea    rdx,[rip+0x9066]        # c1d6 <_IO_stdin_used+0x1d6>
    3170:	be 80 00 00 00       	mov    esi,0x80
    3175:	b8 00 00 00 00       	mov    eax,0x0
    317a:	e8 51 f4 ff ff       	call   25d0 <snprintf@plt>
    317f:	48 83 c4 10          	add    rsp,0x10
    3183:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    318a:	00 00 
    318c:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    3192:	c9                   	leave  
    3193:	c3                   	ret    

0000000000003194 <inet6_ntoa>:
    3194:	f3 0f 1e fa          	endbr64 
    3198:	55                   	push   rbp
    3199:	48 89 e5             	mov    rbp,rsp
    319c:	41 57                	push   r15
    319e:	41 56                	push   r14
    31a0:	41 55                	push   r13
    31a2:	41 54                	push   r12
    31a4:	53                   	push   rbx
    31a5:	48 83 ec 38          	sub    rsp,0x38
    31a9:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    31ad:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    31b4:	00 00 
    31b6:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    31ba:	31 c0                	xor    eax,eax
    31bc:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    31c3:	00 00 
    31c5:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    31cb:	ba 80 00 00 00       	mov    edx,0x80
    31d0:	be 00 00 00 00       	mov    esi,0x0
    31d5:	48 89 c7             	mov    rdi,rax
    31d8:	e8 23 f4 ff ff       	call   2600 <memset@plt>
    31dd:	48 c7 45 c0 00 00 00 	mov    QWORD PTR [rbp-0x40],0x0
    31e4:	00 
    31e5:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    31e9:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    31ed:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    31f1:	48 83 c0 0f          	add    rax,0xf
    31f5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31f8:	0f b6 c8             	movzx  ecx,al
    31fb:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    31ff:	48 83 c0 0e          	add    rax,0xe
    3203:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3206:	0f b6 f8             	movzx  edi,al
    3209:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    320d:	48 83 c0 0d          	add    rax,0xd
    3211:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3214:	0f b6 c0             	movzx  eax,al
    3217:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
    321a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    321e:	48 83 c0 0c          	add    rax,0xc
    3222:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3225:	0f b6 d8             	movzx  ebx,al
    3228:	89 5d b0             	mov    DWORD PTR [rbp-0x50],ebx
    322b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    322f:	48 83 c0 0b          	add    rax,0xb
    3233:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3236:	44 0f b6 f8          	movzx  r15d,al
    323a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    323e:	48 83 c0 0a          	add    rax,0xa
    3242:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3245:	44 0f b6 f0          	movzx  r14d,al
    3249:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    324d:	48 83 c0 09          	add    rax,0x9
    3251:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3254:	44 0f b6 e8          	movzx  r13d,al
    3258:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    325c:	48 83 c0 08          	add    rax,0x8
    3260:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3263:	44 0f b6 e0          	movzx  r12d,al
    3267:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    326b:	48 83 c0 07          	add    rax,0x7
    326f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3272:	0f b6 d8             	movzx  ebx,al
    3275:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3279:	48 83 c0 06          	add    rax,0x6
    327d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3280:	44 0f b6 d8          	movzx  r11d,al
    3284:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3288:	48 83 c0 05          	add    rax,0x5
    328c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    328f:	44 0f b6 d0          	movzx  r10d,al
    3293:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3297:	48 83 c0 04          	add    rax,0x4
    329b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    329e:	44 0f b6 c8          	movzx  r9d,al
    32a2:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32a6:	48 83 c0 03          	add    rax,0x3
    32aa:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32ad:	44 0f b6 c0          	movzx  r8d,al
    32b1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32b5:	48 83 c0 02          	add    rax,0x2
    32b9:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32bc:	0f b6 d0             	movzx  edx,al
    32bf:	89 55 ac             	mov    DWORD PTR [rbp-0x54],edx
    32c2:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32c6:	48 83 c0 01          	add    rax,0x1
    32ca:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32cd:	0f b6 f0             	movzx  esi,al
    32d0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32d4:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32d7:	0f b6 d0             	movzx  edx,al
    32da:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    32e1:	00 00 
    32e3:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    32e9:	48 83 ec 08          	sub    rsp,0x8
    32ed:	51                   	push   rcx
    32ee:	57                   	push   rdi
    32ef:	8b 4d b4             	mov    ecx,DWORD PTR [rbp-0x4c]
    32f2:	51                   	push   rcx
    32f3:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
    32f6:	51                   	push   rcx
    32f7:	41 57                	push   r15
    32f9:	41 56                	push   r14
    32fb:	41 55                	push   r13
    32fd:	41 54                	push   r12
    32ff:	53                   	push   rbx
    3300:	41 53                	push   r11
    3302:	41 52                	push   r10
    3304:	41 51                	push   r9
    3306:	41 50                	push   r8
    3308:	44 8b 4d ac          	mov    r9d,DWORD PTR [rbp-0x54]
    330c:	41 89 f0             	mov    r8d,esi
    330f:	89 d1                	mov    ecx,edx
    3311:	48 8d 15 d0 8e 00 00 	lea    rdx,[rip+0x8ed0]        # c1e8 <_IO_stdin_used+0x1e8>
    3318:	be 80 00 00 00       	mov    esi,0x80
    331d:	48 89 c7             	mov    rdi,rax
    3320:	b8 00 00 00 00       	mov    eax,0x0
    3325:	e8 a6 f2 ff ff       	call   25d0 <snprintf@plt>
    332a:	48 83 c4 70          	add    rsp,0x70
    332e:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3335:	00 00 
    3337:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    333d:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    3341:	64 48 33 34 25 28 00 	xor    rsi,QWORD PTR fs:0x28
    3348:	00 00 
    334a:	74 05                	je     3351 <inet6_ntoa+0x1bd>
    334c:	e8 2f f2 ff ff       	call   2580 <__stack_chk_fail@plt>
    3351:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    3355:	5b                   	pop    rbx
    3356:	41 5c                	pop    r12
    3358:	41 5d                	pop    r13
    335a:	41 5e                	pop    r14
    335c:	41 5f                	pop    r15
    335e:	5d                   	pop    rbp
    335f:	c3                   	ret    

0000000000003360 <get_formated_time>:
    3360:	f3 0f 1e fa          	endbr64 
    3364:	55                   	push   rbp
    3365:	48 89 e5             	mov    rbp,rsp
    3368:	53                   	push   rbx
    3369:	48 83 ec 58          	sub    rsp,0x58
    336d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3374:	00 00 
    3376:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    337a:	31 c0                	xor    eax,eax
    337c:	bf ff 00 00 00       	mov    edi,0xff
    3381:	e8 7a f3 ff ff       	call   2700 <malloc@plt>
    3386:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    338a:	bf 00 00 00 00       	mov    edi,0x0
    338f:	e8 3c f3 ff ff       	call   26d0 <time@plt>
    3394:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    3398:	48 8d 45 a0          	lea    rax,[rbp-0x60]
    339c:	48 89 c7             	mov    rdi,rax
    339f:	e8 fc f0 ff ff       	call   24a0 <localtime@plt>
    33a4:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    33a7:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    33ab:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
    33af:	48 89 5d b8          	mov    QWORD PTR [rbp-0x48],rbx
    33b3:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    33b7:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    33bb:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    33bf:	48 89 5d c8          	mov    QWORD PTR [rbp-0x38],rbx
    33c3:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    33c7:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    33cb:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    33cf:	48 89 5d d8          	mov    QWORD PTR [rbp-0x28],rbx
    33d3:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    33d7:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    33db:	8b 7d b0             	mov    edi,DWORD PTR [rbp-0x50]
    33de:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
    33e1:	44 8b 4d b8          	mov    r9d,DWORD PTR [rbp-0x48]
    33e5:	44 8b 45 bc          	mov    r8d,DWORD PTR [rbp-0x44]
    33e9:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    33ec:	8d 48 01             	lea    ecx,[rax+0x1]
    33ef:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    33f2:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    33f8:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    33fc:	57                   	push   rdi
    33fd:	56                   	push   rsi
    33fe:	48 8d 35 2b 8e 00 00 	lea    rsi,[rip+0x8e2b]        # c230 <_IO_stdin_used+0x230>
    3405:	48 89 c7             	mov    rdi,rax
    3408:	b8 00 00 00 00       	mov    eax,0x0
    340d:	e8 1e f4 ff ff       	call   2830 <sprintf@plt>
    3412:	48 83 c4 10          	add    rsp,0x10
    3416:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    341a:	48 8b 5d e8          	mov    rbx,QWORD PTR [rbp-0x18]
    341e:	64 48 33 1c 25 28 00 	xor    rbx,QWORD PTR fs:0x28
    3425:	00 00 
    3427:	74 05                	je     342e <get_formated_time+0xce>
    3429:	e8 52 f1 ff ff       	call   2580 <__stack_chk_fail@plt>
    342e:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    3432:	c9                   	leave  
    3433:	c3                   	ret    

0000000000003434 <cb_get_formatted_time>:
    3434:	f3 0f 1e fa          	endbr64 
    3438:	55                   	push   rbp
    3439:	48 89 e5             	mov    rbp,rsp
    343c:	53                   	push   rbx
    343d:	48 83 ec 68          	sub    rsp,0x68
    3441:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    3445:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    344c:	00 00 
    344e:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    3452:	31 c0                	xor    eax,eax
    3454:	bf 00 00 00 00       	mov    edi,0x0
    3459:	e8 72 f2 ff ff       	call   26d0 <time@plt>
    345e:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    3462:	48 8d 45 a8          	lea    rax,[rbp-0x58]
    3466:	48 89 c7             	mov    rdi,rax
    3469:	e8 32 f0 ff ff       	call   24a0 <localtime@plt>
    346e:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    3471:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    3475:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
    3479:	48 89 5d b8          	mov    QWORD PTR [rbp-0x48],rbx
    347d:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    3481:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    3485:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    3489:	48 89 5d c8          	mov    QWORD PTR [rbp-0x38],rbx
    348d:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    3491:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    3495:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    3499:	48 89 5d d8          	mov    QWORD PTR [rbp-0x28],rbx
    349d:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    34a1:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    34a5:	8b 7d b0             	mov    edi,DWORD PTR [rbp-0x50]
    34a8:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
    34ab:	44 8b 4d b8          	mov    r9d,DWORD PTR [rbp-0x48]
    34af:	44 8b 45 bc          	mov    r8d,DWORD PTR [rbp-0x44]
    34b3:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    34b6:	8d 48 01             	lea    ecx,[rax+0x1]
    34b9:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    34bc:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    34c2:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    34c6:	57                   	push   rdi
    34c7:	56                   	push   rsi
    34c8:	48 8d 35 61 8d 00 00 	lea    rsi,[rip+0x8d61]        # c230 <_IO_stdin_used+0x230>
    34cf:	48 89 c7             	mov    rdi,rax
    34d2:	b8 00 00 00 00       	mov    eax,0x0
    34d7:	e8 54 f3 ff ff       	call   2830 <sprintf@plt>
    34dc:	48 83 c4 10          	add    rsp,0x10
    34e0:	90                   	nop
    34e1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    34e5:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    34ec:	00 00 
    34ee:	74 05                	je     34f5 <cb_get_formatted_time+0xc1>
    34f0:	e8 8b f0 ff ff       	call   2580 <__stack_chk_fail@plt>
    34f5:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    34f9:	c9                   	leave  
    34fa:	c3                   	ret    

00000000000034fb <strloc>:
    34fb:	f3 0f 1e fa          	endbr64 
    34ff:	55                   	push   rbp
    3500:	48 89 e5             	mov    rbp,rsp
    3503:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    3507:	89 f0                	mov    eax,esi
    3509:	88 45 e4             	mov    BYTE PTR [rbp-0x1c],al
    350c:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    3513:	eb 1e                	jmp    3533 <strloc+0x38>
    3515:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    3518:	48 63 d0             	movsxd rdx,eax
    351b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    351f:	48 01 d0             	add    rax,rdx
    3522:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3525:	38 45 e4             	cmp    BYTE PTR [rbp-0x1c],al
    3528:	75 05                	jne    352f <strloc+0x34>
    352a:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    352d:	eb 1d                	jmp    354c <strloc+0x51>
    352f:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    3533:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    3536:	48 63 d0             	movsxd rdx,eax
    3539:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    353d:	48 01 d0             	add    rax,rdx
    3540:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3543:	84 c0                	test   al,al
    3545:	75 ce                	jne    3515 <strloc+0x1a>
    3547:	b8 ff ff ff ff       	mov    eax,0xffffffff
    354c:	5d                   	pop    rbp
    354d:	c3                   	ret    

000000000000354e <fail>:
    354e:	f3 0f 1e fa          	endbr64 
    3552:	55                   	push   rbp
    3553:	48 89 e5             	mov    rbp,rsp
    3556:	48 83 ec 10          	sub    rsp,0x10
    355a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    355e:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    3562:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    3566:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    356a:	48 89 c6             	mov    rsi,rax
    356d:	48 8d 3d d8 8c 00 00 	lea    rdi,[rip+0x8cd8]        # c24c <_IO_stdin_used+0x24c>
    3574:	b8 00 00 00 00       	mov    eax,0x0
    3579:	e8 42 f0 ff ff       	call   25c0 <printf@plt>
    357e:	90                   	nop
    357f:	c9                   	leave  
    3580:	c3                   	ret    

0000000000003581 <char_is_printable>:
    3581:	f3 0f 1e fa          	endbr64 
    3585:	55                   	push   rbp
    3586:	48 89 e5             	mov    rbp,rsp
    3589:	89 f8                	mov    eax,edi
    358b:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
    358e:	80 7d fc 1f          	cmp    BYTE PTR [rbp-0x4],0x1f
    3592:	7f 07                	jg     359b <char_is_printable+0x1a>
    3594:	b8 00 00 00 00       	mov    eax,0x0
    3599:	eb 05                	jmp    35a0 <char_is_printable+0x1f>
    359b:	b8 01 00 00 00       	mov    eax,0x1
    35a0:	5d                   	pop    rbp
    35a1:	c3                   	ret    

00000000000035a2 <test_string_arr_print>:
    35a2:	f3 0f 1e fa          	endbr64 
    35a6:	55                   	push   rbp
    35a7:	48 89 e5             	mov    rbp,rsp
    35aa:	53                   	push   rbx
    35ab:	48 83 ec 28          	sub    rsp,0x28
    35af:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    35b3:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    35ba:	eb 2c                	jmp    35e8 <test_string_arr_print+0x46>
    35bc:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    35bf:	48 63 d0             	movsxd rdx,eax
    35c2:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    35c6:	48 01 d0             	add    rax,rdx
    35c9:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    35cc:	0f be c0             	movsx  eax,al
    35cf:	89 c7                	mov    edi,eax
    35d1:	e8 ab ff ff ff       	call   3581 <char_is_printable>
    35d6:	83 f0 01             	xor    eax,0x1
    35d9:	84 c0                	test   al,al
    35db:	74 07                	je     35e4 <test_string_arr_print+0x42>
    35dd:	b8 00 00 00 00       	mov    eax,0x0
    35e2:	eb 20                	jmp    3604 <test_string_arr_print+0x62>
    35e4:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    35e8:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    35eb:	48 63 d8             	movsxd rbx,eax
    35ee:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    35f2:	48 89 c7             	mov    rdi,rax
    35f5:	e8 66 ef ff ff       	call   2560 <strlen@plt>
    35fa:	48 39 c3             	cmp    rbx,rax
    35fd:	72 bd                	jb     35bc <test_string_arr_print+0x1a>
    35ff:	b8 01 00 00 00       	mov    eax,0x1
    3604:	48 83 c4 28          	add    rsp,0x28
    3608:	5b                   	pop    rbx
    3609:	5d                   	pop    rbp
    360a:	c3                   	ret    

000000000000360b <ipv4pktmgr>:
    360b:	f3 0f 1e fa          	endbr64 
    360f:	55                   	push   rbp
    3610:	48 89 e5             	mov    rbp,rsp
    3613:	48 81 ec e0 04 00 00 	sub    rsp,0x4e0
    361a:	48 89 bd 28 fb ff ff 	mov    QWORD PTR [rbp-0x4d8],rdi
    3621:	48 89 b5 20 fb ff ff 	mov    QWORD PTR [rbp-0x4e0],rsi
    3628:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    362f:	00 00 
    3631:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3635:	31 c0                	xor    eax,eax
    3637:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    363e:	48 83 c0 0e          	add    rax,0xe
    3642:	48 89 85 48 fb ff ff 	mov    QWORD PTR [rbp-0x4b8],rax
    3649:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    3650:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    3653:	89 c7                	mov    edi,eax
    3655:	e8 f6 f1 ff ff       	call   2850 <ntohl@plt>
    365a:	89 85 6c fb ff ff    	mov    DWORD PTR [rbp-0x494],eax
    3660:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    3667:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    366a:	89 c7                	mov    edi,eax
    366c:	e8 df f1 ff ff       	call   2850 <ntohl@plt>
    3671:	89 85 68 fb ff ff    	mov    DWORD PTR [rbp-0x498],eax
    3677:	8b 95 68 fb ff ff    	mov    edx,DWORD PTR [rbp-0x498]
    367d:	8b 05 fd 66 10 00    	mov    eax,DWORD PTR [rip+0x1066fd]        # 109d80 <homenetmask>
    3683:	21 d0                	and    eax,edx
    3685:	89 85 3c fb ff ff    	mov    DWORD PTR [rbp-0x4c4],eax
    368b:	8b 95 6c fb ff ff    	mov    edx,DWORD PTR [rbp-0x494]
    3691:	8b 05 e9 66 10 00    	mov    eax,DWORD PTR [rip+0x1066e9]        # 109d80 <homenetmask>
    3697:	21 d0                	and    eax,edx
    3699:	89 85 40 fb ff ff    	mov    DWORD PTR [rbp-0x4c0],eax
    369f:	8b 05 3f 42 10 00    	mov    eax,DWORD PTR [rip+0x10423f]        # 1078e4 <homenet>
    36a5:	39 85 3c fb ff ff    	cmp    DWORD PTR [rbp-0x4c4],eax
    36ab:	75 0c                	jne    36b9 <ipv4pktmgr+0xae>
    36ad:	c7 85 70 fb ff ff 45 	mov    DWORD PTR [rbp-0x490],0x45
    36b4:	00 00 00 
    36b7:	eb 24                	jmp    36dd <ipv4pktmgr+0xd2>
    36b9:	8b 05 25 42 10 00    	mov    eax,DWORD PTR [rip+0x104225]        # 1078e4 <homenet>
    36bf:	39 85 40 fb ff ff    	cmp    DWORD PTR [rbp-0x4c0],eax
    36c5:	75 0c                	jne    36d3 <ipv4pktmgr+0xc8>
    36c7:	c7 85 70 fb ff ff 46 	mov    DWORD PTR [rbp-0x490],0x46
    36ce:	00 00 00 
    36d1:	eb 0a                	jmp    36dd <ipv4pktmgr+0xd2>
    36d3:	c7 85 70 fb ff ff 47 	mov    DWORD PTR [rbp-0x490],0x47
    36da:	00 00 00 
    36dd:	48 8b 85 20 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4e0]
    36e4:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    36e7:	89 85 80 fb ff ff    	mov    DWORD PTR [rbp-0x480],eax
    36ed:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    36f4:	48 89 85 a0 fb ff ff 	mov    QWORD PTR [rbp-0x460],rax
    36fb:	48 8b 85 20 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4e0]
    3702:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    3705:	48 8b 95 28 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4d8]
    370c:	48 83 c2 0e          	add    rdx,0xe
    3710:	0f b6 12             	movzx  edx,BYTE PTR [rdx]
    3713:	83 e2 0f             	and    edx,0xf
    3716:	0f b6 d2             	movzx  edx,dl
    3719:	c1 e2 02             	shl    edx,0x2
    371c:	29 d0                	sub    eax,edx
    371e:	83 e8 0e             	sub    eax,0xe
    3721:	89 85 44 fb ff ff    	mov    DWORD PTR [rbp-0x4bc],eax
    3727:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    372e:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    3731:	89 c7                	mov    edi,eax
    3733:	e8 c8 f9 ff ff       	call   3100 <ipv4_ntoa>
    3738:	48 89 c1             	mov    rcx,rax
    373b:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    3742:	ba 10 00 00 00       	mov    edx,0x10
    3747:	48 89 ce             	mov    rsi,rcx
    374a:	48 89 c7             	mov    rdi,rax
    374d:	e8 5e ed ff ff       	call   24b0 <strncpy@plt>
    3752:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    3759:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    375c:	89 c7                	mov    edi,eax
    375e:	e8 9d f9 ff ff       	call   3100 <ipv4_ntoa>
    3763:	48 89 c1             	mov    rcx,rax
    3766:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    376d:	ba 10 00 00 00       	mov    edx,0x10
    3772:	48 89 ce             	mov    rsi,rcx
    3775:	48 89 c7             	mov    rdi,rax
    3778:	e8 33 ed ff ff       	call   24b0 <strncpy@plt>
    377d:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    3784:	48 89 c7             	mov    rdi,rax
    3787:	e8 eb 42 00 00       	call   7a77 <init_member>
    378c:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    3793:	48 89 c7             	mov    rdi,rax
    3796:	e8 dc 42 00 00       	call   7a77 <init_member>
    379b:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    37a2:	48 89 c7             	mov    rdi,rax
    37a5:	e8 49 21 00 00       	call   58f3 <is_blocked_ipv4>
    37aa:	84 c0                	test   al,al
    37ac:	74 44                	je     37f2 <ipv4pktmgr+0x1e7>
    37ae:	b8 00 00 00 00       	mov    eax,0x0
    37b3:	e8 a8 fb ff ff       	call   3360 <get_formated_time>
    37b8:	48 89 c6             	mov    rsi,rax
    37bb:	48 8d 95 e0 fb ff ff 	lea    rdx,[rbp-0x420]
    37c2:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    37c9:	48 89 d1             	mov    rcx,rdx
    37cc:	48 89 f2             	mov    rdx,rsi
    37cf:	48 8d 35 82 8a 00 00 	lea    rsi,[rip+0x8a82]        # c258 <_IO_stdin_used+0x258>
    37d6:	48 89 c7             	mov    rdi,rax
    37d9:	b8 00 00 00 00       	mov    eax,0x0
    37de:	e8 4d f0 ff ff       	call   2830 <sprintf@plt>
    37e3:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    37ea:	48 89 c7             	mov    rdi,rax
    37ed:	e8 65 5d 00 00       	call   9557 <saprintf>
    37f2:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    37f9:	48 89 c7             	mov    rdi,rax
    37fc:	e8 f2 20 00 00       	call   58f3 <is_blocked_ipv4>
    3801:	84 c0                	test   al,al
    3803:	74 44                	je     3849 <ipv4pktmgr+0x23e>
    3805:	b8 00 00 00 00       	mov    eax,0x0
    380a:	e8 51 fb ff ff       	call   3360 <get_formated_time>
    380f:	48 89 c6             	mov    rsi,rax
    3812:	48 8d 95 d0 fb ff ff 	lea    rdx,[rbp-0x430]
    3819:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    3820:	48 89 d1             	mov    rcx,rdx
    3823:	48 89 f2             	mov    rdx,rsi
    3826:	48 8d 35 5b 8a 00 00 	lea    rsi,[rip+0x8a5b]        # c288 <_IO_stdin_used+0x288>
    382d:	48 89 c7             	mov    rdi,rax
    3830:	b8 00 00 00 00       	mov    eax,0x0
    3835:	e8 f6 ef ff ff       	call   2830 <sprintf@plt>
    383a:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    3841:	48 89 c7             	mov    rdi,rax
    3844:	e8 0e 5d 00 00       	call   9557 <saprintf>
    3849:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    3850:	48 89 85 58 fb ff ff 	mov    QWORD PTR [rbp-0x4a8],rax
    3857:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    385e:	48 89 85 60 fb ff ff 	mov    QWORD PTR [rbp-0x4a0],rax
    3865:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    386c:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    3870:	66 83 f8 20          	cmp    ax,0x20
    3874:	74 11                	je     3887 <ipv4pktmgr+0x27c>
    3876:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    387d:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    3881:	66 3d 02 01          	cmp    ax,0x102
    3885:	75 66                	jne    38ed <ipv4pktmgr+0x2e2>
    3887:	48 8d 35 22 8a 00 00 	lea    rsi,[rip+0x8a22]        # c2b0 <_IO_stdin_used+0x2b0>
    388e:	48 8d 3d 20 8a 00 00 	lea    rdi,[rip+0x8a20]        # c2b5 <_IO_stdin_used+0x2b5>
    3895:	b8 00 00 00 00       	mov    eax,0x0
    389a:	e8 21 ed ff ff       	call   25c0 <printf@plt>
    389f:	0f b6 05 93 40 10 00 	movzx  eax,BYTE PTR [rip+0x104093]        # 107939 <packet_print>
    38a6:	84 c0                	test   al,al
    38a8:	74 1a                	je     38c4 <ipv4pktmgr+0x2b9>
    38aa:	48 8d 35 12 8a 00 00 	lea    rsi,[rip+0x8a12]        # c2c3 <_IO_stdin_used+0x2c3>
    38b1:	48 8d 3d 10 8a 00 00 	lea    rdi,[rip+0x8a10]        # c2c8 <_IO_stdin_used+0x2c8>
    38b8:	b8 00 00 00 00       	mov    eax,0x0
    38bd:	e8 fe ec ff ff       	call   25c0 <printf@plt>
    38c2:	eb 29                	jmp    38ed <ipv4pktmgr+0x2e2>
    38c4:	48 8d 95 e0 fb ff ff 	lea    rdx,[rbp-0x420]
    38cb:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    38d2:	48 8d 0d ea 89 00 00 	lea    rcx,[rip+0x89ea]        # c2c3 <_IO_stdin_used+0x2c3>
    38d9:	48 89 c6             	mov    rsi,rax
    38dc:	48 8d 3d e8 89 00 00 	lea    rdi,[rip+0x89e8]        # c2cb <_IO_stdin_used+0x2cb>
    38e3:	b8 00 00 00 00       	mov    eax,0x0
    38e8:	e8 d3 ec ff ff       	call   25c0 <printf@plt>
    38ed:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    38f4:	0f b6 40 09          	movzx  eax,BYTE PTR [rax+0x9]
    38f8:	0f b6 c0             	movzx  eax,al
    38fb:	83 f8 11             	cmp    eax,0x11
    38fe:	0f 84 b8 00 00 00    	je     39bc <ipv4pktmgr+0x3b1>
    3904:	83 f8 11             	cmp    eax,0x11
    3907:	0f 8f db 00 00 00    	jg     39e8 <ipv4pktmgr+0x3dd>
    390d:	83 f8 06             	cmp    eax,0x6
    3910:	74 7e                	je     3990 <ipv4pktmgr+0x385>
    3912:	83 f8 06             	cmp    eax,0x6
    3915:	0f 8f cd 00 00 00    	jg     39e8 <ipv4pktmgr+0x3dd>
    391b:	83 f8 01             	cmp    eax,0x1
    391e:	74 0a                	je     392a <ipv4pktmgr+0x31f>
    3920:	83 f8 02             	cmp    eax,0x2
    3923:	74 2d                	je     3952 <ipv4pktmgr+0x347>
    3925:	e9 be 00 00 00       	jmp    39e8 <ipv4pktmgr+0x3dd>
    392a:	c7 85 7c fb ff ff 80 	mov    DWORD PTR [rbp-0x484],0x80
    3931:	00 00 00 
    3934:	48 8d 95 50 fb ff ff 	lea    rdx,[rbp-0x4b0]
    393b:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    3942:	48 89 d6             	mov    rsi,rdx
    3945:	48 89 c7             	mov    rdi,rax
    3948:	e8 40 02 00 00       	call   3b8d <ip4_icmp_decode>
    394d:	e9 c7 00 00 00       	jmp    3a19 <ipv4pktmgr+0x40e>
    3952:	c7 85 7c fb ff ff ff 	mov    DWORD PTR [rbp-0x484],0xffffffff
    3959:	ff ff ff 
    395c:	8b 05 de d6 00 00    	mov    eax,DWORD PTR [rip+0xd6de]        # 11040 <total_conversations>
    3962:	83 e8 01             	sub    eax,0x1
    3965:	89 05 d5 d6 00 00    	mov    DWORD PTR [rip+0xd6d5],eax        # 11040 <total_conversations>
    396b:	48 8b 95 60 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4a0]
    3972:	48 8b 8d 58 fb ff ff 	mov    rcx,QWORD PTR [rbp-0x4a8]
    3979:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    3980:	48 89 ce             	mov    rsi,rcx
    3983:	48 89 c7             	mov    rdi,rax
    3986:	e8 de 14 00 00       	call   4e69 <ip4_igmp_decode>
    398b:	e9 89 00 00 00       	jmp    3a19 <ipv4pktmgr+0x40e>
    3990:	c7 85 7c fb ff ff 7e 	mov    DWORD PTR [rbp-0x484],0x7e
    3997:	00 00 00 
    399a:	48 8b 95 20 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4e0]
    39a1:	48 8d 8d 50 fb ff ff 	lea    rcx,[rbp-0x4b0]
    39a8:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    39af:	48 89 ce             	mov    rsi,rcx
    39b2:	48 89 c7             	mov    rdi,rax
    39b5:	e8 17 0a 00 00       	call   43d1 <ip4_tcp_decode>
    39ba:	eb 5d                	jmp    3a19 <ipv4pktmgr+0x40e>
    39bc:	c7 85 7c fb ff ff 7f 	mov    DWORD PTR [rbp-0x484],0x7f
    39c3:	00 00 00 
    39c6:	48 8b 95 20 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4e0]
    39cd:	48 8d 8d 50 fb ff ff 	lea    rcx,[rbp-0x4b0]
    39d4:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    39db:	48 89 ce             	mov    rsi,rcx
    39de:	48 89 c7             	mov    rdi,rax
    39e1:	e8 2e 13 00 00       	call   4d14 <ip4_udp_decode>
    39e6:	eb 31                	jmp    3a19 <ipv4pktmgr+0x40e>
    39e8:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    39ef:	0f b6 40 09          	movzx  eax,BYTE PTR [rax+0x9]
    39f3:	0f b6 c8             	movzx  ecx,al
    39f6:	48 8b 95 60 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4a0]
    39fd:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    3a04:	48 89 c6             	mov    rsi,rax
    3a07:	48 8d 3d ca 88 00 00 	lea    rdi,[rip+0x88ca]        # c2d8 <_IO_stdin_used+0x2d8>
    3a0e:	b8 00 00 00 00       	mov    eax,0x0
    3a13:	e8 a8 eb ff ff       	call   25c0 <printf@plt>
    3a18:	90                   	nop
    3a19:	90                   	nop
    3a1a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3a1e:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    3a25:	00 00 
    3a27:	74 05                	je     3a2e <ipv4pktmgr+0x423>
    3a29:	e8 52 eb ff ff       	call   2580 <__stack_chk_fail@plt>
    3a2e:	c9                   	leave  
    3a2f:	c3                   	ret    

0000000000003a30 <ip6_icmp_decode>:
    3a30:	f3 0f 1e fa          	endbr64 
    3a34:	55                   	push   rbp
    3a35:	48 89 e5             	mov    rbp,rsp
    3a38:	48 83 c4 80          	add    rsp,0xffffffffffffff80
    3a3c:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    3a40:	48 89 75 90          	mov    QWORD PTR [rbp-0x70],rsi
    3a44:	48 89 55 88          	mov    QWORD PTR [rbp-0x78],rdx
    3a48:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3a4f:	00 00 
    3a51:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3a55:	31 c0                	xor    eax,eax
    3a57:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    3a5b:	48 83 c0 36          	add    rax,0x36
    3a5f:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    3a63:	0f b6 05 cf 3e 10 00 	movzx  eax,BYTE PTR [rip+0x103ecf]        # 107939 <packet_print>
    3a6a:	84 c0                	test   al,al
    3a6c:	0f 84 04 01 00 00    	je     3b76 <ip6_icmp_decode+0x146>
    3a72:	48 8d 35 87 88 00 00 	lea    rsi,[rip+0x8887]        # c300 <_IO_stdin_used+0x300>
    3a79:	48 8d 3d 86 88 00 00 	lea    rdi,[rip+0x8886]        # c306 <_IO_stdin_used+0x306>
    3a80:	b8 00 00 00 00       	mov    eax,0x0
    3a85:	e8 36 eb ff ff       	call   25c0 <printf@plt>
    3a8a:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
    3a8e:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    3a92:	48 89 c6             	mov    rsi,rax
    3a95:	48 8d 3d 6d 88 00 00 	lea    rdi,[rip+0x886d]        # c309 <_IO_stdin_used+0x309>
    3a9c:	b8 00 00 00 00       	mov    eax,0x0
    3aa1:	e8 1a eb ff ff       	call   25c0 <printf@plt>
    3aa6:	48 8d 3d 6b 88 00 00 	lea    rdi,[rip+0x886b]        # c318 <_IO_stdin_used+0x318>
    3aad:	b8 00 00 00 00       	mov    eax,0x0
    3ab2:	e8 09 eb ff ff       	call   25c0 <printf@plt>
    3ab7:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3abb:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3abe:	0f b6 c0             	movzx  eax,al
    3ac1:	3d 8f 00 00 00       	cmp    eax,0x8f
    3ac6:	74 68                	je     3b30 <ip6_icmp_decode+0x100>
    3ac8:	3d 8f 00 00 00       	cmp    eax,0x8f
    3acd:	0f 8f 8b 00 00 00    	jg     3b5e <ip6_icmp_decode+0x12e>
    3ad3:	3d 87 00 00 00       	cmp    eax,0x87
    3ad8:	74 77                	je     3b51 <ip6_icmp_decode+0x121>
    3ada:	3d 87 00 00 00       	cmp    eax,0x87
    3adf:	7f 7d                	jg     3b5e <ip6_icmp_decode+0x12e>
    3ae1:	3d 82 00 00 00       	cmp    eax,0x82
    3ae6:	74 56                	je     3b3e <ip6_icmp_decode+0x10e>
    3ae8:	3d 85 00 00 00       	cmp    eax,0x85
    3aed:	75 6f                	jne    3b5e <ip6_icmp_decode+0x12e>
    3aef:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3af3:	48 83 c0 0a          	add    rax,0xa
    3af7:	48 89 c7             	mov    rdi,rax
    3afa:	e8 18 f4 ff ff       	call   2f17 <mac_ntoa>
    3aff:	48 89 c1             	mov    rcx,rax
    3b02:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    3b06:	ba 40 00 00 00       	mov    edx,0x40
    3b0b:	48 89 ce             	mov    rsi,rcx
    3b0e:	48 89 c7             	mov    rdi,rax
    3b11:	e8 9a e9 ff ff       	call   24b0 <strncpy@plt>
    3b16:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    3b1a:	48 89 c6             	mov    rsi,rax
    3b1d:	48 8d 3d fd 87 00 00 	lea    rdi,[rip+0x87fd]        # c321 <_IO_stdin_used+0x321>
    3b24:	b8 00 00 00 00       	mov    eax,0x0
    3b29:	e8 92 ea ff ff       	call   25c0 <printf@plt>
    3b2e:	eb 2e                	jmp    3b5e <ip6_icmp_decode+0x12e>
    3b30:	48 8d 3d 09 88 00 00 	lea    rdi,[rip+0x8809]        # c340 <_IO_stdin_used+0x340>
    3b37:	e8 c4 e9 ff ff       	call   2500 <puts@plt>
    3b3c:	eb 20                	jmp    3b5e <ip6_icmp_decode+0x12e>
    3b3e:	48 8d 3d 20 88 00 00 	lea    rdi,[rip+0x8820]        # c365 <_IO_stdin_used+0x365>
    3b45:	b8 00 00 00 00       	mov    eax,0x0
    3b4a:	e8 71 ea ff ff       	call   25c0 <printf@plt>
    3b4f:	eb 0d                	jmp    3b5e <ip6_icmp_decode+0x12e>
    3b51:	48 8d 3d 27 88 00 00 	lea    rdi,[rip+0x8827]        # c37f <_IO_stdin_used+0x37f>
    3b58:	e8 a3 e9 ff ff       	call   2500 <puts@plt>
    3b5d:	90                   	nop
    3b5e:	48 8d 35 30 88 00 00 	lea    rsi,[rip+0x8830]        # c395 <_IO_stdin_used+0x395>
    3b65:	48 8d 3d 9a 87 00 00 	lea    rdi,[rip+0x879a]        # c306 <_IO_stdin_used+0x306>
    3b6c:	b8 00 00 00 00       	mov    eax,0x0
    3b71:	e8 4a ea ff ff       	call   25c0 <printf@plt>
    3b76:	90                   	nop
    3b77:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3b7b:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    3b82:	00 00 
    3b84:	74 05                	je     3b8b <ip6_icmp_decode+0x15b>
    3b86:	e8 f5 e9 ff ff       	call   2580 <__stack_chk_fail@plt>
    3b8b:	c9                   	leave  
    3b8c:	c3                   	ret    

0000000000003b8d <ip4_icmp_decode>:
    3b8d:	f3 0f 1e fa          	endbr64 
    3b91:	55                   	push   rbp
    3b92:	48 89 e5             	mov    rbp,rsp
    3b95:	48 81 ec 20 01 00 00 	sub    rsp,0x120
    3b9c:	48 89 bd e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rdi
    3ba3:	48 89 b5 e0 fe ff ff 	mov    QWORD PTR [rbp-0x120],rsi
    3baa:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3bb1:	00 00 
    3bb3:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3bb7:	31 c0                	xor    eax,eax
    3bb9:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3bc0:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3bc4:	ba 5e 00 00 00       	mov    edx,0x5e
    3bc9:	be 01 00 00 00       	mov    esi,0x1
    3bce:	48 89 c7             	mov    rdi,rax
    3bd1:	e8 92 13 00 00       	call   4f68 <add_ip_addr_or_inc_counter>
    3bd6:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3bdd:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    3be1:	ba 5e 00 00 00       	mov    edx,0x5e
    3be6:	be 00 00 00 00       	mov    esi,0x0
    3beb:	48 89 c7             	mov    rdi,rax
    3bee:	e8 75 13 00 00       	call   4f68 <add_ip_addr_or_inc_counter>
    3bf3:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3bfa:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3bfe:	48 89 85 08 ff ff ff 	mov    QWORD PTR [rbp-0xf8],rax
    3c05:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c0c:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    3c10:	48 89 85 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],rax
    3c17:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    3c1e:	48 83 c0 22          	add    rax,0x22
    3c22:	48 89 85 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rax
    3c29:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    3c30:	48 8d 50 22          	lea    rdx,[rax+0x22]
    3c34:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c3b:	48 89 10             	mov    QWORD PTR [rax],rdx
    3c3e:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c45:	48 8b 95 18 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xe8]
    3c4c:	48 89 50 60          	mov    QWORD PTR [rax+0x60],rdx
    3c50:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c57:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    3c5a:	89 85 fc fe ff ff    	mov    DWORD PTR [rbp-0x104],eax
    3c60:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c67:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    3c6a:	8d 50 d6             	lea    edx,[rax-0x2a]
    3c6d:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c74:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    3c77:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    3c7e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3c81:	3c 08                	cmp    al,0x8
    3c83:	0f 85 55 01 00 00    	jne    3dde <ip4_icmp_decode+0x251>
    3c89:	8b 05 59 3c 10 00    	mov    eax,DWORD PTR [rip+0x103c59]        # 1078e8 <strict_nmap_host_alive_check>
    3c8f:	83 f8 01             	cmp    eax,0x1
    3c92:	0f 85 46 01 00 00    	jne    3dde <ip4_icmp_decode+0x251>
    3c98:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c9f:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3ca3:	48 89 c7             	mov    rdi,rax
    3ca6:	e8 5a 3d 00 00       	call   7a05 <member_exists>
    3cab:	89 85 00 ff ff ff    	mov    DWORD PTR [rbp-0x100],eax
    3cb1:	83 bd 00 ff ff ff ff 	cmp    DWORD PTR [rbp-0x100],0xffffffff
    3cb8:	0f 84 83 00 00 00    	je     3d41 <ip4_icmp_decode+0x1b4>
    3cbe:	8b 85 00 ff ff ff    	mov    eax,DWORD PTR [rbp-0x100]
    3cc4:	48 63 d0             	movsxd rdx,eax
    3cc7:	48 89 d0             	mov    rax,rdx
    3cca:	48 c1 e0 02          	shl    rax,0x2
    3cce:	48 01 d0             	add    rax,rdx
    3cd1:	48 c1 e0 03          	shl    rax,0x3
    3cd5:	48 01 d0             	add    rax,rdx
    3cd8:	48 c1 e0 04          	shl    rax,0x4
    3cdc:	48 8d 15 bd f3 0e 00 	lea    rdx,[rip+0xef3bd]        # f30a0 <watchlist>
    3ce3:	48 01 d0             	add    rax,rdx
    3ce6:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
    3ced:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3cf4:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3cf7:	85 c0                	test   eax,eax
    3cf9:	0f 85 a8 02 00 00    	jne    3fa7 <ip4_icmp_decode+0x41a>
    3cff:	bf 00 00 00 00       	mov    edi,0x0
    3d04:	e8 c7 e9 ff ff       	call   26d0 <time@plt>
    3d09:	48 89 c2             	mov    rdx,rax
    3d0c:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d13:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    3d17:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d1e:	c7 40 30 01 00 00 00 	mov    DWORD PTR [rax+0x30],0x1
    3d25:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d2c:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3d2f:	8d 50 01             	lea    edx,[rax+0x1]
    3d32:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d39:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    3d3c:	e9 66 02 00 00       	jmp    3fa7 <ip4_icmp_decode+0x41a>
    3d41:	8b 05 d1 d2 00 00    	mov    eax,DWORD PTR [rip+0xd2d1]        # 11018 <watchlist_num>
    3d47:	83 c0 01             	add    eax,0x1
    3d4a:	89 05 c8 d2 00 00    	mov    DWORD PTR [rip+0xd2c8],eax        # 11018 <watchlist_num>
    3d50:	8b 05 c2 d2 00 00    	mov    eax,DWORD PTR [rip+0xd2c2]        # 11018 <watchlist_num>
    3d56:	48 63 d0             	movsxd rdx,eax
    3d59:	48 89 d0             	mov    rax,rdx
    3d5c:	48 c1 e0 02          	shl    rax,0x2
    3d60:	48 01 d0             	add    rax,rdx
    3d63:	48 c1 e0 03          	shl    rax,0x3
    3d67:	48 01 d0             	add    rax,rdx
    3d6a:	48 c1 e0 04          	shl    rax,0x4
    3d6e:	48 8d 15 2b f3 0e 00 	lea    rdx,[rip+0xef32b]        # f30a0 <watchlist>
    3d75:	48 01 d0             	add    rax,rdx
    3d78:	48 89 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rax
    3d7f:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3d86:	48 8d 50 08          	lea    rdx,[rax+0x8]
    3d8a:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3d91:	48 89 c6             	mov    rsi,rax
    3d94:	48 89 d7             	mov    rdi,rdx
    3d97:	e8 34 e7 ff ff       	call   24d0 <strcpy@plt>
    3d9c:	bf 00 00 00 00       	mov    edi,0x0
    3da1:	e8 2a e9 ff ff       	call   26d0 <time@plt>
    3da6:	48 89 c2             	mov    rdx,rax
    3da9:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3db0:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    3db4:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3dbb:	c7 40 30 01 00 00 00 	mov    DWORD PTR [rax+0x30],0x1
    3dc2:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3dc9:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3dcc:	8d 50 01             	lea    edx,[rax+0x1]
    3dcf:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3dd6:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    3dd9:	e9 c9 01 00 00       	jmp    3fa7 <ip4_icmp_decode+0x41a>
    3dde:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    3de5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3de8:	3c 0d                	cmp    al,0xd
    3dea:	0f 85 ba 01 00 00    	jne    3faa <ip4_icmp_decode+0x41d>
    3df0:	8b 05 ae 5f 10 00    	mov    eax,DWORD PTR [rip+0x105fae]        # 109da4 <strict_icmp_timestamp_req>
    3df6:	83 f8 01             	cmp    eax,0x1
    3df9:	74 0f                	je     3e0a <ip4_icmp_decode+0x27d>
    3dfb:	8b 05 e7 3a 10 00    	mov    eax,DWORD PTR [rip+0x103ae7]        # 1078e8 <strict_nmap_host_alive_check>
    3e01:	83 f8 01             	cmp    eax,0x1
    3e04:	0f 85 a0 01 00 00    	jne    3faa <ip4_icmp_decode+0x41d>
    3e0a:	8b 05 94 5f 10 00    	mov    eax,DWORD PTR [rip+0x105f94]        # 109da4 <strict_icmp_timestamp_req>
    3e10:	85 c0                	test   eax,eax
    3e12:	74 22                	je     3e36 <ip4_icmp_decode+0x2a9>
    3e14:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    3e1b:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3e22:	48 89 c6             	mov    rsi,rax
    3e25:	48 8d 3d 74 85 00 00 	lea    rdi,[rip+0x8574]        # c3a0 <_IO_stdin_used+0x3a0>
    3e2c:	b8 00 00 00 00       	mov    eax,0x0
    3e31:	e8 8a e7 ff ff       	call   25c0 <printf@plt>
    3e36:	8b 05 ac 3a 10 00    	mov    eax,DWORD PTR [rip+0x103aac]        # 1078e8 <strict_nmap_host_alive_check>
    3e3c:	85 c0                	test   eax,eax
    3e3e:	0f 84 66 01 00 00    	je     3faa <ip4_icmp_decode+0x41d>
    3e44:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3e4b:	48 89 c7             	mov    rdi,rax
    3e4e:	e8 b2 3b 00 00       	call   7a05 <member_exists>
    3e53:	89 85 04 ff ff ff    	mov    DWORD PTR [rbp-0xfc],eax
    3e59:	83 bd 04 ff ff ff ff 	cmp    DWORD PTR [rbp-0xfc],0xffffffff
    3e60:	0f 84 44 01 00 00    	je     3faa <ip4_icmp_decode+0x41d>
    3e66:	8b 85 04 ff ff ff    	mov    eax,DWORD PTR [rbp-0xfc]
    3e6c:	48 63 d0             	movsxd rdx,eax
    3e6f:	48 89 d0             	mov    rax,rdx
    3e72:	48 c1 e0 02          	shl    rax,0x2
    3e76:	48 01 d0             	add    rax,rdx
    3e79:	48 c1 e0 03          	shl    rax,0x3
    3e7d:	48 01 d0             	add    rax,rdx
    3e80:	48 c1 e0 04          	shl    rax,0x4
    3e84:	48 8d 15 15 f2 0e 00 	lea    rdx,[rip+0xef215]        # f30a0 <watchlist>
    3e8b:	48 01 d0             	add    rax,rdx
    3e8e:	48 89 85 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rax
    3e95:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3e9c:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3e9f:	83 f8 03             	cmp    eax,0x3
    3ea2:	0f 85 05 01 00 00    	jne    3fad <ip4_icmp_decode+0x420>
    3ea8:	bf 00 00 00 00       	mov    edi,0x0
    3ead:	e8 1e e8 ff ff       	call   26d0 <time@plt>
    3eb2:	48 89 c2             	mov    rdx,rax
    3eb5:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3ebc:	48 89 50 48          	mov    QWORD PTR [rax+0x48],rdx
    3ec0:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3ec7:	48 8b 50 48          	mov    rdx,QWORD PTR [rax+0x48]
    3ecb:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3ed2:	48 8b 40 28          	mov    rax,QWORD PTR [rax+0x28]
    3ed6:	48 29 c2             	sub    rdx,rax
    3ed9:	48 89 d0             	mov    rax,rdx
    3edc:	48 3d e2 b4 04 00    	cmp    rax,0x4b4e2
    3ee2:	0f 87 c2 00 00 00    	ja     3faa <ip4_icmp_decode+0x41d>
    3ee8:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    3eef:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3ef6:	48 89 c6             	mov    rsi,rax
    3ef9:	48 8d 3d e8 84 00 00 	lea    rdi,[rip+0x84e8]        # c3e8 <_IO_stdin_used+0x3e8>
    3f00:	b8 00 00 00 00       	mov    eax,0x0
    3f05:	e8 b6 e6 ff ff       	call   25c0 <printf@plt>
    3f0a:	48 8b 05 1f d1 00 00 	mov    rax,QWORD PTR [rip+0xd11f]        # 11030 <def_log_file>
    3f11:	48 8d 35 3a 85 00 00 	lea    rsi,[rip+0x853a]        # c452 <_IO_stdin_used+0x452>
    3f18:	48 89 c7             	mov    rdi,rax
    3f1b:	e8 50 e8 ff ff       	call   2770 <fopen@plt>
    3f20:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    3f27:	b8 00 00 00 00       	mov    eax,0x0
    3f2c:	e8 2f f4 ff ff       	call   3360 <get_formated_time>
    3f31:	48 89 c6             	mov    rsi,rax
    3f34:	48 8b 8d 10 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xf0]
    3f3b:	48 8b 95 08 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf8]
    3f42:	48 8d 85 40 ff ff ff 	lea    rax,[rbp-0xc0]
    3f49:	49 89 f0             	mov    r8,rsi
    3f4c:	48 8d 35 05 85 00 00 	lea    rsi,[rip+0x8505]        # c458 <_IO_stdin_used+0x458>
    3f53:	48 89 c7             	mov    rdi,rax
    3f56:	b8 00 00 00 00       	mov    eax,0x0
    3f5b:	e8 d0 e8 ff ff       	call   2830 <sprintf@plt>
    3f60:	48 8b 95 38 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xc8]
    3f67:	48 8d 85 40 ff ff ff 	lea    rax,[rbp-0xc0]
    3f6e:	48 89 d6             	mov    rsi,rdx
    3f71:	48 89 c7             	mov    rdi,rax
    3f74:	e8 67 e6 ff ff       	call   25e0 <fputs@plt>
    3f79:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
    3f80:	48 89 c7             	mov    rdi,rax
    3f83:	e8 c8 e5 ff ff       	call   2550 <fclose@plt>
    3f88:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3f8f:	48 83 c0 28          	add    rax,0x28
    3f93:	ba 28 00 00 00       	mov    edx,0x28
    3f98:	be 00 00 00 00       	mov    esi,0x0
    3f9d:	48 89 c7             	mov    rdi,rax
    3fa0:	e8 5b e6 ff ff       	call   2600 <memset@plt>
    3fa5:	eb 07                	jmp    3fae <ip4_icmp_decode+0x421>
    3fa7:	90                   	nop
    3fa8:	eb 04                	jmp    3fae <ip4_icmp_decode+0x421>
    3faa:	90                   	nop
    3fab:	eb 01                	jmp    3fae <ip4_icmp_decode+0x421>
    3fad:	90                   	nop
    3fae:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3fb5:	c7 40 2c 80 00 00 00 	mov    DWORD PTR [rax+0x2c],0x80
    3fbc:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3fc3:	48 89 c7             	mov    rdi,rax
    3fc6:	e8 dd 24 00 00       	call   64a8 <rulemgr>
    3fcb:	0f b6 05 67 39 10 00 	movzx  eax,BYTE PTR [rip+0x103967]        # 107939 <packet_print>
    3fd2:	84 c0                	test   al,al
    3fd4:	0f 84 e0 03 00 00    	je     43ba <ip4_icmp_decode+0x82d>
    3fda:	48 8d 35 1f 83 00 00 	lea    rsi,[rip+0x831f]        # c300 <_IO_stdin_used+0x300>
    3fe1:	48 8d 3d 1e 83 00 00 	lea    rdi,[rip+0x831e]        # c306 <_IO_stdin_used+0x306>
    3fe8:	b8 00 00 00 00       	mov    eax,0x0
    3fed:	e8 ce e5 ff ff       	call   25c0 <printf@plt>
    3ff2:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    3ff9:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    4000:	48 89 c6             	mov    rsi,rax
    4003:	48 8d 3d be 84 00 00 	lea    rdi,[rip+0x84be]        # c4c8 <_IO_stdin_used+0x4c8>
    400a:	b8 00 00 00 00       	mov    eax,0x0
    400f:	e8 ac e5 ff ff       	call   25c0 <printf@plt>
    4014:	48 8d 3d bc 84 00 00 	lea    rdi,[rip+0x84bc]        # c4d7 <_IO_stdin_used+0x4d7>
    401b:	b8 00 00 00 00       	mov    eax,0x0
    4020:	e8 9b e5 ff ff       	call   25c0 <printf@plt>
    4025:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    402c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    402f:	0f b6 c0             	movzx  eax,al
    4032:	83 f8 0e             	cmp    eax,0xe
    4035:	0f 87 46 03 00 00    	ja     4381 <ip4_icmp_decode+0x7f4>
    403b:	89 c0                	mov    eax,eax
    403d:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    4044:	00 
    4045:	48 8d 05 94 88 00 00 	lea    rax,[rip+0x8894]        # c8e0 <_IO_stdin_used+0x8e0>
    404c:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    404f:	48 98                	cdqe   
    4051:	48 8d 15 88 88 00 00 	lea    rdx,[rip+0x8888]        # c8e0 <_IO_stdin_used+0x8e0>
    4058:	48 01 d0             	add    rax,rdx
    405b:	3e ff e0             	notrack jmp rax
    405e:	48 8d 3d 79 84 00 00 	lea    rdi,[rip+0x8479]        # c4de <_IO_stdin_used+0x4de>
    4065:	e8 96 e4 ff ff       	call   2500 <puts@plt>
    406a:	e9 33 03 00 00       	jmp    43a2 <ip4_icmp_decode+0x815>
    406f:	48 8d 3d 74 84 00 00 	lea    rdi,[rip+0x8474]        # c4ea <_IO_stdin_used+0x4ea>
    4076:	b8 00 00 00 00       	mov    eax,0x0
    407b:	e8 40 e5 ff ff       	call   25c0 <printf@plt>
    4080:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4087:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    408b:	0f b6 c0             	movzx  eax,al
    408e:	83 f8 0f             	cmp    eax,0xf
    4091:	0f 87 1e 01 00 00    	ja     41b5 <ip4_icmp_decode+0x628>
    4097:	89 c0                	mov    eax,eax
    4099:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    40a0:	00 
    40a1:	48 8d 05 74 88 00 00 	lea    rax,[rip+0x8874]        # c91c <_IO_stdin_used+0x91c>
    40a8:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    40ab:	48 98                	cdqe   
    40ad:	48 8d 15 68 88 00 00 	lea    rdx,[rip+0x8868]        # c91c <_IO_stdin_used+0x91c>
    40b4:	48 01 d0             	add    rax,rdx
    40b7:	3e ff e0             	notrack jmp rax
    40ba:	48 8d 3d 43 84 00 00 	lea    rdi,[rip+0x8443]        # c504 <_IO_stdin_used+0x504>
    40c1:	e8 3a e4 ff ff       	call   2500 <puts@plt>
    40c6:	e9 0c 01 00 00       	jmp    41d7 <ip4_icmp_decode+0x64a>
    40cb:	48 8d 3d 49 84 00 00 	lea    rdi,[rip+0x8449]        # c51b <_IO_stdin_used+0x51b>
    40d2:	e8 29 e4 ff ff       	call   2500 <puts@plt>
    40d7:	e9 fb 00 00 00       	jmp    41d7 <ip4_icmp_decode+0x64a>
    40dc:	48 8d 3d 4c 84 00 00 	lea    rdi,[rip+0x844c]        # c52f <_IO_stdin_used+0x52f>
    40e3:	e8 18 e4 ff ff       	call   2500 <puts@plt>
    40e8:	e9 ea 00 00 00       	jmp    41d7 <ip4_icmp_decode+0x64a>
    40ed:	48 8d 3d 53 84 00 00 	lea    rdi,[rip+0x8453]        # c547 <_IO_stdin_used+0x547>
    40f4:	e8 07 e4 ff ff       	call   2500 <puts@plt>
    40f9:	e9 d9 00 00 00       	jmp    41d7 <ip4_icmp_decode+0x64a>
    40fe:	48 8d 3d 56 84 00 00 	lea    rdi,[rip+0x8456]        # c55b <_IO_stdin_used+0x55b>
    4105:	e8 f6 e3 ff ff       	call   2500 <puts@plt>
    410a:	e9 c8 00 00 00       	jmp    41d7 <ip4_icmp_decode+0x64a>
    410f:	48 8d 3d 5d 84 00 00 	lea    rdi,[rip+0x845d]        # c573 <_IO_stdin_used+0x573>
    4116:	e8 e5 e3 ff ff       	call   2500 <puts@plt>
    411b:	e9 b7 00 00 00       	jmp    41d7 <ip4_icmp_decode+0x64a>
    4120:	48 8d 3d 69 84 00 00 	lea    rdi,[rip+0x8469]        # c590 <_IO_stdin_used+0x590>
    4127:	e8 d4 e3 ff ff       	call   2500 <puts@plt>
    412c:	e9 a6 00 00 00       	jmp    41d7 <ip4_icmp_decode+0x64a>
    4131:	48 8d 3d 80 84 00 00 	lea    rdi,[rip+0x8480]        # c5b8 <_IO_stdin_used+0x5b8>
    4138:	e8 c3 e3 ff ff       	call   2500 <puts@plt>
    413d:	e9 95 00 00 00       	jmp    41d7 <ip4_icmp_decode+0x64a>
    4142:	48 8d 3d 8f 84 00 00 	lea    rdi,[rip+0x848f]        # c5d8 <_IO_stdin_used+0x5d8>
    4149:	e8 b2 e3 ff ff       	call   2500 <puts@plt>
    414e:	e9 84 00 00 00       	jmp    41d7 <ip4_icmp_decode+0x64a>
    4153:	48 8d 3d 96 84 00 00 	lea    rdi,[rip+0x8496]        # c5f0 <_IO_stdin_used+0x5f0>
    415a:	e8 a1 e3 ff ff       	call   2500 <puts@plt>
    415f:	eb 76                	jmp    41d7 <ip4_icmp_decode+0x64a>
    4161:	48 8d 3d b0 84 00 00 	lea    rdi,[rip+0x84b0]        # c618 <_IO_stdin_used+0x618>
    4168:	e8 93 e3 ff ff       	call   2500 <puts@plt>
    416d:	eb 68                	jmp    41d7 <ip4_icmp_decode+0x64a>
    416f:	48 8d 3d ca 84 00 00 	lea    rdi,[rip+0x84ca]        # c640 <_IO_stdin_used+0x640>
    4176:	e8 85 e3 ff ff       	call   2500 <puts@plt>
    417b:	eb 5a                	jmp    41d7 <ip4_icmp_decode+0x64a>
    417d:	48 8d 3d db 84 00 00 	lea    rdi,[rip+0x84db]        # c65f <_IO_stdin_used+0x65f>
    4184:	e8 77 e3 ff ff       	call   2500 <puts@plt>
    4189:	eb 4c                	jmp    41d7 <ip4_icmp_decode+0x64a>
    418b:	48 8d 3d ee 84 00 00 	lea    rdi,[rip+0x84ee]        # c680 <_IO_stdin_used+0x680>
    4192:	e8 69 e3 ff ff       	call   2500 <puts@plt>
    4197:	eb 3e                	jmp    41d7 <ip4_icmp_decode+0x64a>
    4199:	48 8d 3d 0d 85 00 00 	lea    rdi,[rip+0x850d]        # c6ad <_IO_stdin_used+0x6ad>
    41a0:	e8 5b e3 ff ff       	call   2500 <puts@plt>
    41a5:	eb 30                	jmp    41d7 <ip4_icmp_decode+0x64a>
    41a7:	48 8d 3d 22 85 00 00 	lea    rdi,[rip+0x8522]        # c6d0 <_IO_stdin_used+0x6d0>
    41ae:	e8 4d e3 ff ff       	call   2500 <puts@plt>
    41b3:	eb 22                	jmp    41d7 <ip4_icmp_decode+0x64a>
    41b5:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    41bc:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    41c0:	0f b6 c0             	movzx  eax,al
    41c3:	89 c6                	mov    esi,eax
    41c5:	48 8d 3d 23 85 00 00 	lea    rdi,[rip+0x8523]        # c6ef <_IO_stdin_used+0x6ef>
    41cc:	b8 00 00 00 00       	mov    eax,0x0
    41d1:	e8 ea e3 ff ff       	call   25c0 <printf@plt>
    41d6:	90                   	nop
    41d7:	e9 c6 01 00 00       	jmp    43a2 <ip4_icmp_decode+0x815>
    41dc:	48 8d 3d 25 85 00 00 	lea    rdi,[rip+0x8525]        # c708 <_IO_stdin_used+0x708>
    41e3:	e8 18 e3 ff ff       	call   2500 <puts@plt>
    41e8:	e9 b5 01 00 00       	jmp    43a2 <ip4_icmp_decode+0x815>
    41ed:	48 8d 3d 33 85 00 00 	lea    rdi,[rip+0x8533]        # c727 <_IO_stdin_used+0x727>
    41f4:	b8 00 00 00 00       	mov    eax,0x0
    41f9:	e8 c2 e3 ff ff       	call   25c0 <printf@plt>
    41fe:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4205:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4209:	0f b6 c0             	movzx  eax,al
    420c:	83 f8 03             	cmp    eax,0x3
    420f:	74 44                	je     4255 <ip4_icmp_decode+0x6c8>
    4211:	83 f8 03             	cmp    eax,0x3
    4214:	7f 4d                	jg     4263 <ip4_icmp_decode+0x6d6>
    4216:	83 f8 02             	cmp    eax,0x2
    4219:	74 2c                	je     4247 <ip4_icmp_decode+0x6ba>
    421b:	83 f8 02             	cmp    eax,0x2
    421e:	7f 43                	jg     4263 <ip4_icmp_decode+0x6d6>
    4220:	85 c0                	test   eax,eax
    4222:	74 07                	je     422b <ip4_icmp_decode+0x69e>
    4224:	83 f8 01             	cmp    eax,0x1
    4227:	74 10                	je     4239 <ip4_icmp_decode+0x6ac>
    4229:	eb 38                	jmp    4263 <ip4_icmp_decode+0x6d6>
    422b:	48 8d 3d 01 85 00 00 	lea    rdi,[rip+0x8501]        # c733 <_IO_stdin_used+0x733>
    4232:	e8 c9 e2 ff ff       	call   2500 <puts@plt>
    4237:	eb 4c                	jmp    4285 <ip4_icmp_decode+0x6f8>
    4239:	48 8d 3d 0b 85 00 00 	lea    rdi,[rip+0x850b]        # c74b <_IO_stdin_used+0x74b>
    4240:	e8 bb e2 ff ff       	call   2500 <puts@plt>
    4245:	eb 3e                	jmp    4285 <ip4_icmp_decode+0x6f8>
    4247:	48 8d 3d 12 85 00 00 	lea    rdi,[rip+0x8512]        # c760 <_IO_stdin_used+0x760>
    424e:	e8 ad e2 ff ff       	call   2500 <puts@plt>
    4253:	eb 30                	jmp    4285 <ip4_icmp_decode+0x6f8>
    4255:	48 8d 3d 24 85 00 00 	lea    rdi,[rip+0x8524]        # c780 <_IO_stdin_used+0x780>
    425c:	e8 9f e2 ff ff       	call   2500 <puts@plt>
    4261:	eb 22                	jmp    4285 <ip4_icmp_decode+0x6f8>
    4263:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    426a:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    426e:	0f b6 c0             	movzx  eax,al
    4271:	89 c6                	mov    esi,eax
    4273:	48 8d 3d 75 84 00 00 	lea    rdi,[rip+0x8475]        # c6ef <_IO_stdin_used+0x6ef>
    427a:	b8 00 00 00 00       	mov    eax,0x0
    427f:	e8 3c e3 ff ff       	call   25c0 <printf@plt>
    4284:	90                   	nop
    4285:	e9 18 01 00 00       	jmp    43a2 <ip4_icmp_decode+0x815>
    428a:	48 8d 3d 0c 85 00 00 	lea    rdi,[rip+0x850c]        # c79d <_IO_stdin_used+0x79d>
    4291:	e8 6a e2 ff ff       	call   2500 <puts@plt>
    4296:	e9 07 01 00 00       	jmp    43a2 <ip4_icmp_decode+0x815>
    429b:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    42a2:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    42a6:	84 c0                	test   al,al
    42a8:	75 16                	jne    42c0 <ip4_icmp_decode+0x733>
    42aa:	48 8d 3d ff 84 00 00 	lea    rdi,[rip+0x84ff]        # c7b0 <_IO_stdin_used+0x7b0>
    42b1:	b8 00 00 00 00       	mov    eax,0x0
    42b6:	e8 05 e3 ff ff       	call   25c0 <printf@plt>
    42bb:	e9 e2 00 00 00       	jmp    43a2 <ip4_icmp_decode+0x815>
    42c0:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    42c7:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    42cb:	0f b6 c0             	movzx  eax,al
    42ce:	89 c6                	mov    esi,eax
    42d0:	48 8d 3d 19 85 00 00 	lea    rdi,[rip+0x8519]        # c7f0 <_IO_stdin_used+0x7f0>
    42d7:	b8 00 00 00 00       	mov    eax,0x0
    42dc:	e8 df e2 ff ff       	call   25c0 <printf@plt>
    42e1:	e9 bc 00 00 00       	jmp    43a2 <ip4_icmp_decode+0x815>
    42e6:	48 8d 3d 30 85 00 00 	lea    rdi,[rip+0x8530]        # c81d <_IO_stdin_used+0x81d>
    42ed:	e8 0e e2 ff ff       	call   2500 <puts@plt>
    42f2:	e9 ab 00 00 00       	jmp    43a2 <ip4_icmp_decode+0x815>
    42f7:	48 8d 3d 36 85 00 00 	lea    rdi,[rip+0x8536]        # c834 <_IO_stdin_used+0x834>
    42fe:	b8 00 00 00 00       	mov    eax,0x0
    4303:	e8 b8 e2 ff ff       	call   25c0 <printf@plt>
    4308:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    430f:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4313:	84 c0                	test   al,al
    4315:	75 0e                	jne    4325 <ip4_icmp_decode+0x798>
    4317:	48 8d 3d 2d 85 00 00 	lea    rdi,[rip+0x852d]        # c84b <_IO_stdin_used+0x84b>
    431e:	e8 dd e1 ff ff       	call   2500 <puts@plt>
    4323:	eb 7d                	jmp    43a2 <ip4_icmp_decode+0x815>
    4325:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    432c:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4330:	3c 01                	cmp    al,0x1
    4332:	75 0e                	jne    4342 <ip4_icmp_decode+0x7b5>
    4334:	48 8d 3d 2d 85 00 00 	lea    rdi,[rip+0x852d]        # c868 <_IO_stdin_used+0x868>
    433b:	e8 c0 e1 ff ff       	call   2500 <puts@plt>
    4340:	eb 60                	jmp    43a2 <ip4_icmp_decode+0x815>
    4342:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4349:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    434d:	0f b6 c0             	movzx  eax,al
    4350:	89 c6                	mov    esi,eax
    4352:	48 8d 3d 36 85 00 00 	lea    rdi,[rip+0x8536]        # c88f <_IO_stdin_used+0x88f>
    4359:	b8 00 00 00 00       	mov    eax,0x0
    435e:	e8 5d e2 ff ff       	call   25c0 <printf@plt>
    4363:	eb 3d                	jmp    43a2 <ip4_icmp_decode+0x815>
    4365:	48 8d 3d 39 85 00 00 	lea    rdi,[rip+0x8539]        # c8a5 <_IO_stdin_used+0x8a5>
    436c:	e8 8f e1 ff ff       	call   2500 <puts@plt>
    4371:	eb 2f                	jmp    43a2 <ip4_icmp_decode+0x815>
    4373:	48 8d 3d 3e 85 00 00 	lea    rdi,[rip+0x853e]        # c8b8 <_IO_stdin_used+0x8b8>
    437a:	e8 81 e1 ff ff       	call   2500 <puts@plt>
    437f:	eb 21                	jmp    43a2 <ip4_icmp_decode+0x815>
    4381:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4388:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    438b:	0f b6 c0             	movzx  eax,al
    438e:	89 c6                	mov    esi,eax
    4390:	48 8d 3d 32 85 00 00 	lea    rdi,[rip+0x8532]        # c8c9 <_IO_stdin_used+0x8c9>
    4397:	b8 00 00 00 00       	mov    eax,0x0
    439c:	e8 1f e2 ff ff       	call   25c0 <printf@plt>
    43a1:	90                   	nop
    43a2:	48 8d 35 ec 7f 00 00 	lea    rsi,[rip+0x7fec]        # c395 <_IO_stdin_used+0x395>
    43a9:	48 8d 3d 56 7f 00 00 	lea    rdi,[rip+0x7f56]        # c306 <_IO_stdin_used+0x306>
    43b0:	b8 00 00 00 00       	mov    eax,0x0
    43b5:	e8 06 e2 ff ff       	call   25c0 <printf@plt>
    43ba:	90                   	nop
    43bb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    43bf:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    43c6:	00 00 
    43c8:	74 05                	je     43cf <ip4_icmp_decode+0x842>
    43ca:	e8 b1 e1 ff ff       	call   2580 <__stack_chk_fail@plt>
    43cf:	c9                   	leave  
    43d0:	c3                   	ret    

00000000000043d1 <ip4_tcp_decode>:
    43d1:	f3 0f 1e fa          	endbr64 
    43d5:	55                   	push   rbp
    43d6:	48 89 e5             	mov    rbp,rsp
    43d9:	48 83 c4 80          	add    rsp,0xffffffffffffff80
    43dd:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    43e1:	48 89 75 90          	mov    QWORD PTR [rbp-0x70],rsi
    43e5:	48 89 55 88          	mov    QWORD PTR [rbp-0x78],rdx
    43e9:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    43ed:	48 83 c0 22          	add    rax,0x22
    43f1:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    43f5:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    43f9:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    43fd:	c0 e8 04             	shr    al,0x4
    4400:	0f b6 c0             	movzx  eax,al
    4403:	c1 e0 02             	shl    eax,0x2
    4406:	48 98                	cdqe   
    4408:	48 8d 50 22          	lea    rdx,[rax+0x22]
    440c:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    4410:	48 01 c2             	add    rdx,rax
    4413:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4417:	48 89 10             	mov    QWORD PTR [rax],rdx
    441a:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    441e:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    4421:	89 c2                	mov    edx,eax
    4423:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4427:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    442b:	c0 e8 04             	shr    al,0x4
    442e:	0f b6 c0             	movzx  eax,al
    4431:	c1 e0 02             	shl    eax,0x2
    4434:	29 c2                	sub    edx,eax
    4436:	89 d0                	mov    eax,edx
    4438:	83 e8 22             	sub    eax,0x22
    443b:	89 c2                	mov    edx,eax
    443d:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4441:	89 50 30             	mov    DWORD PTR [rax+0x30],edx
    4444:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4448:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    444c:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    4450:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4454:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4458:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    445c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4460:	ba 5c 00 00 00       	mov    edx,0x5c
    4465:	be 01 00 00 00       	mov    esi,0x1
    446a:	48 89 c7             	mov    rdi,rax
    446d:	e8 f6 0a 00 00       	call   4f68 <add_ip_addr_or_inc_counter>
    4472:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4476:	ba 5c 00 00 00       	mov    edx,0x5c
    447b:	be 00 00 00 00       	mov    esi,0x0
    4480:	48 89 c7             	mov    rdi,rax
    4483:	e8 e0 0a 00 00       	call   4f68 <add_ip_addr_or_inc_counter>
    4488:	c7 45 b4 00 00 00 00 	mov    DWORD PTR [rbp-0x4c],0x0
    448f:	c6 45 af 00          	mov    BYTE PTR [rbp-0x51],0x0
    4493:	c6 45 b0 00          	mov    BYTE PTR [rbp-0x50],0x0
    4497:	c6 45 b1 00          	mov    BYTE PTR [rbp-0x4f],0x0
    449b:	c6 45 b2 00          	mov    BYTE PTR [rbp-0x4e],0x0
    449f:	c6 45 b3 00          	mov    BYTE PTR [rbp-0x4d],0x0
    44a3:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    44a7:	48 83 c0 68          	add    rax,0x68
    44ab:	ba 08 00 00 00       	mov    edx,0x8
    44b0:	be 00 00 00 00       	mov    esi,0x0
    44b5:	48 89 c7             	mov    rdi,rax
    44b8:	e8 43 e1 ff ff       	call   2600 <memset@plt>
    44bd:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    44c1:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    44c5:	0f b7 c0             	movzx  eax,ax
    44c8:	89 c7                	mov    edi,eax
    44ca:	e8 71 e2 ff ff       	call   2740 <ntohs@plt>
    44cf:	0f b7 c0             	movzx  eax,ax
    44d2:	89 45 b8             	mov    DWORD PTR [rbp-0x48],eax
    44d5:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    44d9:	0f b7 00             	movzx  eax,WORD PTR [rax]
    44dc:	0f b7 c0             	movzx  eax,ax
    44df:	89 c7                	mov    edi,eax
    44e1:	e8 5a e2 ff ff       	call   2740 <ntohs@plt>
    44e6:	0f b7 c0             	movzx  eax,ax
    44e9:	89 45 bc             	mov    DWORD PTR [rbp-0x44],eax
    44ec:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    44f0:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    44f4:	0f b7 c0             	movzx  eax,ax
    44f7:	89 c7                	mov    edi,eax
    44f9:	e8 42 e2 ff ff       	call   2740 <ntohs@plt>
    44fe:	0f b7 d0             	movzx  edx,ax
    4501:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4505:	89 50 28             	mov    DWORD PTR [rax+0x28],edx
    4508:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    450c:	8b 55 bc             	mov    edx,DWORD PTR [rbp-0x44]
    450f:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    4512:	0f b6 05 20 34 10 00 	movzx  eax,BYTE PTR [rip+0x103420]        # 107939 <packet_print>
    4519:	84 c0                	test   al,al
    451b:	74 4e                	je     456b <ip4_tcp_decode+0x19a>
    451d:	48 8d 35 3c 84 00 00 	lea    rsi,[rip+0x843c]        # c960 <_IO_stdin_used+0x960>
    4524:	48 8d 3d 3b 84 00 00 	lea    rdi,[rip+0x843b]        # c966 <_IO_stdin_used+0x966>
    452b:	b8 00 00 00 00       	mov    eax,0x0
    4530:	e8 8b e0 ff ff       	call   25c0 <printf@plt>
    4535:	8b 75 b8             	mov    esi,DWORD PTR [rbp-0x48]
    4538:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    453c:	8b 55 bc             	mov    edx,DWORD PTR [rbp-0x44]
    453f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4543:	41 89 f0             	mov    r8d,esi
    4546:	48 89 c6             	mov    rsi,rax
    4549:	48 8d 3d 19 84 00 00 	lea    rdi,[rip+0x8419]        # c969 <_IO_stdin_used+0x969>
    4550:	b8 00 00 00 00       	mov    eax,0x0
    4555:	e8 66 e0 ff ff       	call   25c0 <printf@plt>
    455a:	48 8d 3d 1d 84 00 00 	lea    rdi,[rip+0x841d]        # c97e <_IO_stdin_used+0x97e>
    4561:	b8 00 00 00 00       	mov    eax,0x0
    4566:	e8 55 e0 ff ff       	call   25c0 <printf@plt>
    456b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    456f:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4573:	c0 e8 04             	shr    al,0x4
    4576:	83 e0 01             	and    eax,0x1
    4579:	0f b6 c0             	movzx  eax,al
    457c:	89 c7                	mov    edi,eax
    457e:	e8 bd e1 ff ff       	call   2740 <ntohs@plt>
    4583:	66 85 c0             	test   ax,ax
    4586:	74 5c                	je     45e4 <ip4_tcp_decode+0x213>
    4588:	0f b6 05 aa 33 10 00 	movzx  eax,BYTE PTR [rip+0x1033aa]        # 107939 <packet_print>
    458f:	84 c0                	test   al,al
    4591:	74 18                	je     45ab <ip4_tcp_decode+0x1da>
    4593:	48 8d 35 eb 83 00 00 	lea    rsi,[rip+0x83eb]        # c985 <_IO_stdin_used+0x985>
    459a:	48 8d 3d ea 83 00 00 	lea    rdi,[rip+0x83ea]        # c98b <_IO_stdin_used+0x98b>
    45a1:	b8 00 00 00 00       	mov    eax,0x0
    45a6:	e8 15 e0 ff ff       	call   25c0 <printf@plt>
    45ab:	c6 45 b0 01          	mov    BYTE PTR [rbp-0x50],0x1
    45af:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    45b3:	48 8d 50 68          	lea    rdx,[rax+0x68]
    45b7:	48 89 d0             	mov    rax,rdx
    45ba:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    45c1:	48 89 c6             	mov    rsi,rax
    45c4:	b8 00 00 00 00       	mov    eax,0x0
    45c9:	48 89 f7             	mov    rdi,rsi
    45cc:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    45ce:	48 89 c8             	mov    rax,rcx
    45d1:	48 f7 d0             	not    rax
    45d4:	48 83 e8 01          	sub    rax,0x1
    45d8:	48 01 d0             	add    rax,rdx
    45db:	66 c7 00 41 00       	mov    WORD PTR [rax],0x41
    45e0:	83 45 b4 01          	add    DWORD PTR [rbp-0x4c],0x1
    45e4:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    45e8:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    45ec:	83 e0 01             	and    eax,0x1
    45ef:	0f b6 c0             	movzx  eax,al
    45f2:	89 c7                	mov    edi,eax
    45f4:	e8 47 e1 ff ff       	call   2740 <ntohs@plt>
    45f9:	66 85 c0             	test   ax,ax
    45fc:	74 5c                	je     465a <ip4_tcp_decode+0x289>
    45fe:	0f b6 05 34 33 10 00 	movzx  eax,BYTE PTR [rip+0x103334]        # 107939 <packet_print>
    4605:	84 c0                	test   al,al
    4607:	74 18                	je     4621 <ip4_tcp_decode+0x250>
    4609:	48 8d 35 83 83 00 00 	lea    rsi,[rip+0x8383]        # c993 <_IO_stdin_used+0x993>
    4610:	48 8d 3d 82 83 00 00 	lea    rdi,[rip+0x8382]        # c999 <_IO_stdin_used+0x999>
    4617:	b8 00 00 00 00       	mov    eax,0x0
    461c:	e8 9f df ff ff       	call   25c0 <printf@plt>
    4621:	c6 45 b2 01          	mov    BYTE PTR [rbp-0x4e],0x1
    4625:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4629:	48 8d 50 68          	lea    rdx,[rax+0x68]
    462d:	48 89 d0             	mov    rax,rdx
    4630:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    4637:	48 89 c6             	mov    rsi,rax
    463a:	b8 00 00 00 00       	mov    eax,0x0
    463f:	48 89 f7             	mov    rdi,rsi
    4642:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    4644:	48 89 c8             	mov    rax,rcx
    4647:	48 f7 d0             	not    rax
    464a:	48 83 e8 01          	sub    rax,0x1
    464e:	48 01 d0             	add    rax,rdx
    4651:	66 c7 00 46 00       	mov    WORD PTR [rax],0x46
    4656:	83 45 b4 01          	add    DWORD PTR [rbp-0x4c],0x1
    465a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    465e:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4662:	c0 e8 03             	shr    al,0x3
    4665:	83 e0 01             	and    eax,0x1
    4668:	0f b6 c0             	movzx  eax,al
    466b:	89 c7                	mov    edi,eax
    466d:	e8 ce e0 ff ff       	call   2740 <ntohs@plt>
    4672:	66 85 c0             	test   ax,ax
    4675:	74 5c                	je     46d3 <ip4_tcp_decode+0x302>
    4677:	0f b6 05 bb 32 10 00 	movzx  eax,BYTE PTR [rip+0x1032bb]        # 107939 <packet_print>
    467e:	84 c0                	test   al,al
    4680:	74 18                	je     469a <ip4_tcp_decode+0x2c9>
    4682:	48 8d 35 18 83 00 00 	lea    rsi,[rip+0x8318]        # c9a1 <_IO_stdin_used+0x9a1>
    4689:	48 8d 3d 17 83 00 00 	lea    rdi,[rip+0x8317]        # c9a7 <_IO_stdin_used+0x9a7>
    4690:	b8 00 00 00 00       	mov    eax,0x0
    4695:	e8 26 df ff ff       	call   25c0 <printf@plt>
    469a:	83 45 b4 01          	add    DWORD PTR [rbp-0x4c],0x1
    469e:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    46a2:	48 8d 50 68          	lea    rdx,[rax+0x68]
    46a6:	48 89 d0             	mov    rax,rdx
    46a9:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    46b0:	48 89 c6             	mov    rsi,rax
    46b3:	b8 00 00 00 00       	mov    eax,0x0
    46b8:	48 89 f7             	mov    rdi,rsi
    46bb:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    46bd:	48 89 c8             	mov    rax,rcx
    46c0:	48 f7 d0             	not    rax
    46c3:	48 83 e8 01          	sub    rax,0x1
    46c7:	48 01 d0             	add    rax,rdx
    46ca:	66 c7 00 50 00       	mov    WORD PTR [rax],0x50
    46cf:	c6 45 b3 01          	mov    BYTE PTR [rbp-0x4d],0x1
    46d3:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    46d7:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    46db:	c0 e8 02             	shr    al,0x2
    46de:	83 e0 01             	and    eax,0x1
    46e1:	0f b6 c0             	movzx  eax,al
    46e4:	89 c7                	mov    edi,eax
    46e6:	e8 55 e0 ff ff       	call   2740 <ntohs@plt>
    46eb:	66 85 c0             	test   ax,ax
    46ee:	74 5c                	je     474c <ip4_tcp_decode+0x37b>
    46f0:	0f b6 05 42 32 10 00 	movzx  eax,BYTE PTR [rip+0x103242]        # 107939 <packet_print>
    46f7:	84 c0                	test   al,al
    46f9:	74 18                	je     4713 <ip4_tcp_decode+0x342>
    46fb:	48 8d 35 ad 82 00 00 	lea    rsi,[rip+0x82ad]        # c9af <_IO_stdin_used+0x9af>
    4702:	48 8d 3d ac 82 00 00 	lea    rdi,[rip+0x82ac]        # c9b5 <_IO_stdin_used+0x9b5>
    4709:	b8 00 00 00 00       	mov    eax,0x0
    470e:	e8 ad de ff ff       	call   25c0 <printf@plt>
    4713:	c6 45 af 01          	mov    BYTE PTR [rbp-0x51],0x1
    4717:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    471b:	48 8d 50 68          	lea    rdx,[rax+0x68]
    471f:	48 89 d0             	mov    rax,rdx
    4722:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    4729:	48 89 c6             	mov    rsi,rax
    472c:	b8 00 00 00 00       	mov    eax,0x0
    4731:	48 89 f7             	mov    rdi,rsi
    4734:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    4736:	48 89 c8             	mov    rax,rcx
    4739:	48 f7 d0             	not    rax
    473c:	48 83 e8 01          	sub    rax,0x1
    4740:	48 01 d0             	add    rax,rdx
    4743:	66 c7 00 52 00       	mov    WORD PTR [rax],0x52
    4748:	83 45 b4 01          	add    DWORD PTR [rbp-0x4c],0x1
    474c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4750:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4754:	d0 e8                	shr    al,1
    4756:	83 e0 01             	and    eax,0x1
    4759:	0f b6 c0             	movzx  eax,al
    475c:	89 c7                	mov    edi,eax
    475e:	e8 dd df ff ff       	call   2740 <ntohs@plt>
    4763:	66 85 c0             	test   ax,ax
    4766:	74 5c                	je     47c4 <ip4_tcp_decode+0x3f3>
    4768:	0f b6 05 ca 31 10 00 	movzx  eax,BYTE PTR [rip+0x1031ca]        # 107939 <packet_print>
    476f:	84 c0                	test   al,al
    4771:	74 18                	je     478b <ip4_tcp_decode+0x3ba>
    4773:	48 8d 35 43 82 00 00 	lea    rsi,[rip+0x8243]        # c9bd <_IO_stdin_used+0x9bd>
    477a:	48 8d 3d 42 82 00 00 	lea    rdi,[rip+0x8242]        # c9c3 <_IO_stdin_used+0x9c3>
    4781:	b8 00 00 00 00       	mov    eax,0x0
    4786:	e8 35 de ff ff       	call   25c0 <printf@plt>
    478b:	c6 45 b1 01          	mov    BYTE PTR [rbp-0x4f],0x1
    478f:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4793:	48 8d 50 68          	lea    rdx,[rax+0x68]
    4797:	48 89 d0             	mov    rax,rdx
    479a:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    47a1:	48 89 c6             	mov    rsi,rax
    47a4:	b8 00 00 00 00       	mov    eax,0x0
    47a9:	48 89 f7             	mov    rdi,rsi
    47ac:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    47ae:	48 89 c8             	mov    rax,rcx
    47b1:	48 f7 d0             	not    rax
    47b4:	48 83 e8 01          	sub    rax,0x1
    47b8:	48 01 d0             	add    rax,rdx
    47bb:	66 c7 00 53 00       	mov    WORD PTR [rax],0x53
    47c0:	83 45 b4 01          	add    DWORD PTR [rbp-0x4c],0x1
    47c4:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    47c8:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    47cc:	c0 e8 05             	shr    al,0x5
    47cf:	83 e0 01             	and    eax,0x1
    47d2:	0f b6 c0             	movzx  eax,al
    47d5:	89 c7                	mov    edi,eax
    47d7:	e8 64 df ff ff       	call   2740 <ntohs@plt>
    47dc:	66 85 c0             	test   ax,ax
    47df:	74 58                	je     4839 <ip4_tcp_decode+0x468>
    47e1:	0f b6 05 51 31 10 00 	movzx  eax,BYTE PTR [rip+0x103151]        # 107939 <packet_print>
    47e8:	84 c0                	test   al,al
    47ea:	74 18                	je     4804 <ip4_tcp_decode+0x433>
    47ec:	48 8d 35 d8 81 00 00 	lea    rsi,[rip+0x81d8]        # c9cb <_IO_stdin_used+0x9cb>
    47f3:	48 8d 3d d7 81 00 00 	lea    rdi,[rip+0x81d7]        # c9d1 <_IO_stdin_used+0x9d1>
    47fa:	b8 00 00 00 00       	mov    eax,0x0
    47ff:	e8 bc dd ff ff       	call   25c0 <printf@plt>
    4804:	83 45 b4 01          	add    DWORD PTR [rbp-0x4c],0x1
    4808:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    480c:	48 8d 50 68          	lea    rdx,[rax+0x68]
    4810:	48 89 d0             	mov    rax,rdx
    4813:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    481a:	48 89 c6             	mov    rsi,rax
    481d:	b8 00 00 00 00       	mov    eax,0x0
    4822:	48 89 f7             	mov    rdi,rsi
    4825:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    4827:	48 89 c8             	mov    rax,rcx
    482a:	48 f7 d0             	not    rax
    482d:	48 83 e8 01          	sub    rax,0x1
    4831:	48 01 d0             	add    rax,rdx
    4834:	66 c7 00 55 00       	mov    WORD PTR [rax],0x55
    4839:	0f b6 05 f9 30 10 00 	movzx  eax,BYTE PTR [rip+0x1030f9]        # 107939 <packet_print>
    4840:	84 c0                	test   al,al
    4842:	74 3c                	je     4880 <ip4_tcp_decode+0x4af>
    4844:	48 8d 35 15 81 00 00 	lea    rsi,[rip+0x8115]        # c960 <_IO_stdin_used+0x960>
    484b:	48 8d 3d 14 81 00 00 	lea    rdi,[rip+0x8114]        # c966 <_IO_stdin_used+0x966>
    4852:	b8 00 00 00 00       	mov    eax,0x0
    4857:	e8 64 dd ff ff       	call   25c0 <printf@plt>
    485c:	48 8d 3d 76 81 00 00 	lea    rdi,[rip+0x8176]        # c9d9 <_IO_stdin_used+0x9d9>
    4863:	e8 98 dc ff ff       	call   2500 <puts@plt>
    4868:	48 8d 35 6c 81 00 00 	lea    rsi,[rip+0x816c]        # c9db <_IO_stdin_used+0x9db>
    486f:	48 8d 3d f0 80 00 00 	lea    rdi,[rip+0x80f0]        # c966 <_IO_stdin_used+0x966>
    4876:	b8 00 00 00 00       	mov    eax,0x0
    487b:	e8 40 dd ff ff       	call   25c0 <printf@plt>
    4880:	83 7d b4 03          	cmp    DWORD PTR [rbp-0x4c],0x3
    4884:	7f 06                	jg     488c <ip4_tcp_decode+0x4bb>
    4886:	83 7d b4 00          	cmp    DWORD PTR [rbp-0x4c],0x0
    488a:	75 41                	jne    48cd <ip4_tcp_decode+0x4fc>
    488c:	8b 7d b8             	mov    edi,DWORD PTR [rbp-0x48]
    488f:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
    4893:	8b 55 bc             	mov    edx,DWORD PTR [rbp-0x44]
    4896:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    489a:	48 8d 0d 3a 81 00 00 	lea    rcx,[rip+0x813a]        # c9db <_IO_stdin_used+0x9db>
    48a1:	51                   	push   rcx
    48a2:	8b 4d b4             	mov    ecx,DWORD PTR [rbp-0x4c]
    48a5:	51                   	push   rcx
    48a6:	41 89 f9             	mov    r9d,edi
    48a9:	49 89 f0             	mov    r8,rsi
    48ac:	89 d1                	mov    ecx,edx
    48ae:	48 89 c2             	mov    rdx,rax
    48b1:	48 8d 35 f7 80 00 00 	lea    rsi,[rip+0x80f7]        # c9af <_IO_stdin_used+0x9af>
    48b8:	48 8d 3d 21 81 00 00 	lea    rdi,[rip+0x8121]        # c9e0 <_IO_stdin_used+0x9e0>
    48bf:	b8 00 00 00 00       	mov    eax,0x0
    48c4:	e8 f7 dc ff ff       	call   25c0 <printf@plt>
    48c9:	48 83 c4 10          	add    rsp,0x10
    48cd:	0f b6 05 5d 30 10 00 	movzx  eax,BYTE PTR [rip+0x10305d]        # 107931 <use_spi>
    48d4:	84 c0                	test   al,al
    48d6:	0f 84 8c 00 00 00    	je     4968 <ip4_tcp_decode+0x597>
    48dc:	80 7d b3 00          	cmp    BYTE PTR [rbp-0x4d],0x0
    48e0:	74 1a                	je     48fc <ip4_tcp_decode+0x52b>
    48e2:	80 7d b0 00          	cmp    BYTE PTR [rbp-0x50],0x0
    48e6:	74 14                	je     48fc <ip4_tcp_decode+0x52b>
    48e8:	83 7d b4 02          	cmp    DWORD PTR [rbp-0x4c],0x2
    48ec:	75 0e                	jne    48fc <ip4_tcp_decode+0x52b>
    48ee:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    48f2:	48 89 c7             	mov    rdi,rax
    48f5:	e8 35 49 00 00       	call   922f <handle_data_pkt>
    48fa:	eb 6c                	jmp    4968 <ip4_tcp_decode+0x597>
    48fc:	80 7d b2 00          	cmp    BYTE PTR [rbp-0x4e],0x0
    4900:	74 14                	je     4916 <ip4_tcp_decode+0x545>
    4902:	80 7d b0 00          	cmp    BYTE PTR [rbp-0x50],0x0
    4906:	74 0e                	je     4916 <ip4_tcp_decode+0x545>
    4908:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    490c:	48 89 c7             	mov    rdi,rax
    490f:	e8 08 48 00 00       	call   911c <polite_end>
    4914:	eb 52                	jmp    4968 <ip4_tcp_decode+0x597>
    4916:	80 7d b1 00          	cmp    BYTE PTR [rbp-0x4f],0x0
    491a:	74 14                	je     4930 <ip4_tcp_decode+0x55f>
    491c:	83 7d b4 01          	cmp    DWORD PTR [rbp-0x4c],0x1
    4920:	75 0e                	jne    4930 <ip4_tcp_decode+0x55f>
    4922:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4926:	48 89 c7             	mov    rdi,rax
    4929:	e8 4b 43 00 00       	call   8c79 <add_new_conversation>
    492e:	eb 38                	jmp    4968 <ip4_tcp_decode+0x597>
    4930:	80 7d b1 00          	cmp    BYTE PTR [rbp-0x4f],0x0
    4934:	74 1a                	je     4950 <ip4_tcp_decode+0x57f>
    4936:	80 7d b0 00          	cmp    BYTE PTR [rbp-0x50],0x0
    493a:	74 14                	je     4950 <ip4_tcp_decode+0x57f>
    493c:	83 7d b4 02          	cmp    DWORD PTR [rbp-0x4c],0x2
    4940:	75 0e                	jne    4950 <ip4_tcp_decode+0x57f>
    4942:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4946:	48 89 c7             	mov    rdi,rax
    4949:	e8 64 45 00 00       	call   8eb2 <spi_ud_thw>
    494e:	eb 18                	jmp    4968 <ip4_tcp_decode+0x597>
    4950:	80 7d b0 00          	cmp    BYTE PTR [rbp-0x50],0x0
    4954:	74 12                	je     4968 <ip4_tcp_decode+0x597>
    4956:	83 7d b4 01          	cmp    DWORD PTR [rbp-0x4c],0x1
    495a:	75 0c                	jne    4968 <ip4_tcp_decode+0x597>
    495c:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4960:	48 89 c7             	mov    rdi,rax
    4963:	e8 13 46 00 00       	call   8f7b <update_table>
    4968:	80 7d b3 00          	cmp    BYTE PTR [rbp-0x4d],0x0
    496c:	74 17                	je     4985 <ip4_tcp_decode+0x5b4>
    496e:	80 7d b0 00          	cmp    BYTE PTR [rbp-0x50],0x0
    4972:	74 11                	je     4985 <ip4_tcp_decode+0x5b4>
    4974:	83 7d b4 02          	cmp    DWORD PTR [rbp-0x4c],0x2
    4978:	75 0b                	jne    4985 <ip4_tcp_decode+0x5b4>
    497a:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    497e:	c7 40 70 01 00 00 00 	mov    DWORD PTR [rax+0x70],0x1
    4985:	80 7d af 00          	cmp    BYTE PTR [rbp-0x51],0x0
    4989:	0f 84 95 01 00 00    	je     4b24 <ip4_tcp_decode+0x753>
    498f:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4993:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4997:	48 89 c7             	mov    rdi,rax
    499a:	e8 66 30 00 00       	call   7a05 <member_exists>
    499f:	89 45 c0             	mov    DWORD PTR [rbp-0x40],eax
    49a2:	83 7d c0 ff          	cmp    DWORD PTR [rbp-0x40],0xffffffff
    49a6:	0f 84 de 00 00 00    	je     4a8a <ip4_tcp_decode+0x6b9>
    49ac:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    49af:	48 63 d0             	movsxd rdx,eax
    49b2:	48 89 d0             	mov    rax,rdx
    49b5:	48 c1 e0 02          	shl    rax,0x2
    49b9:	48 01 d0             	add    rax,rdx
    49bc:	48 c1 e0 03          	shl    rax,0x3
    49c0:	48 01 d0             	add    rax,rdx
    49c3:	48 c1 e0 04          	shl    rax,0x4
    49c7:	48 8d 15 d2 e6 0e 00 	lea    rdx,[rip+0xee6d2]        # f30a0 <watchlist>
    49ce:	48 01 d0             	add    rax,rdx
    49d1:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    49d5:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    49d9:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    49dd:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    49e1:	48 83 c2 08          	add    rdx,0x8
    49e5:	48 89 c6             	mov    rsi,rax
    49e8:	48 89 d7             	mov    rdi,rdx
    49eb:	e8 e0 da ff ff       	call   24d0 <strcpy@plt>
    49f0:	bf 00 00 00 00       	mov    edi,0x0
    49f5:	e8 d6 dc ff ff       	call   26d0 <time@plt>
    49fa:	48 89 c2             	mov    rdx,rax
    49fd:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4a01:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    4a07:	8d 70 01             	lea    esi,[rax+0x1]
    4a0a:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    4a0e:	89 b1 48 01 00 00    	mov    DWORD PTR [rcx+0x148],esi
    4a14:	48 89 d1             	mov    rcx,rdx
    4a17:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    4a1b:	89 c0                	mov    eax,eax
    4a1d:	48 83 c0 28          	add    rax,0x28
    4a21:	48 89 4c c2 10       	mov    QWORD PTR [rdx+rax*8+0x10],rcx
    4a26:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4a2a:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    4a30:	83 f8 1d             	cmp    eax,0x1d
    4a33:	0f 86 eb 00 00 00    	jbe    4b24 <ip4_tcp_decode+0x753>
    4a39:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4a3d:	c7 80 48 01 00 00 1e 	mov    DWORD PTR [rax+0x148],0x1e
    4a44:	00 00 00 
    4a47:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4a4b:	48 89 c7             	mov    rdi,rax
    4a4e:	e8 70 2b 00 00       	call   75c3 <tcp_rst_portscan_detect>
    4a53:	84 c0                	test   al,al
    4a55:	0f 84 c9 00 00 00    	je     4b24 <ip4_tcp_decode+0x753>
    4a5b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4a5f:	c7 80 48 01 00 00 00 	mov    DWORD PTR [rax+0x148],0x0
    4a66:	00 00 00 
    4a69:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4a6d:	48 05 50 01 00 00    	add    rax,0x150
    4a73:	ba f0 00 00 00       	mov    edx,0xf0
    4a78:	be 00 00 00 00       	mov    esi,0x0
    4a7d:	48 89 c7             	mov    rdi,rax
    4a80:	e8 7b db ff ff       	call   2600 <memset@plt>
    4a85:	e9 9a 00 00 00       	jmp    4b24 <ip4_tcp_decode+0x753>
    4a8a:	8b 05 88 c5 00 00    	mov    eax,DWORD PTR [rip+0xc588]        # 11018 <watchlist_num>
    4a90:	83 c0 01             	add    eax,0x1
    4a93:	89 05 7f c5 00 00    	mov    DWORD PTR [rip+0xc57f],eax        # 11018 <watchlist_num>
    4a99:	8b 05 79 c5 00 00    	mov    eax,DWORD PTR [rip+0xc579]        # 11018 <watchlist_num>
    4a9f:	48 63 d0             	movsxd rdx,eax
    4aa2:	48 89 d0             	mov    rax,rdx
    4aa5:	48 c1 e0 02          	shl    rax,0x2
    4aa9:	48 01 d0             	add    rax,rdx
    4aac:	48 c1 e0 03          	shl    rax,0x3
    4ab0:	48 01 d0             	add    rax,rdx
    4ab3:	48 c1 e0 04          	shl    rax,0x4
    4ab7:	48 8d 15 e2 e5 0e 00 	lea    rdx,[rip+0xee5e2]        # f30a0 <watchlist>
    4abe:	48 01 d0             	add    rax,rdx
    4ac1:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    4ac5:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4ac9:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4acd:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    4ad1:	48 83 c2 08          	add    rdx,0x8
    4ad5:	48 89 c6             	mov    rsi,rax
    4ad8:	48 89 d7             	mov    rdi,rdx
    4adb:	e8 f0 d9 ff ff       	call   24d0 <strcpy@plt>
    4ae0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4ae4:	c7 80 48 01 00 00 00 	mov    DWORD PTR [rax+0x148],0x0
    4aeb:	00 00 00 
    4aee:	bf 00 00 00 00       	mov    edi,0x0
    4af3:	e8 d8 db ff ff       	call   26d0 <time@plt>
    4af8:	48 89 c2             	mov    rdx,rax
    4afb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4aff:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    4b05:	8d 70 01             	lea    esi,[rax+0x1]
    4b08:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    4b0c:	89 b1 48 01 00 00    	mov    DWORD PTR [rcx+0x148],esi
    4b12:	48 89 d1             	mov    rcx,rdx
    4b15:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    4b19:	89 c0                	mov    eax,eax
    4b1b:	48 83 c0 28          	add    rax,0x28
    4b1f:	48 89 4c c2 10       	mov    QWORD PTR [rdx+rax*8+0x10],rcx
    4b24:	8b 05 be 2d 10 00    	mov    eax,DWORD PTR [rip+0x102dbe]        # 1078e8 <strict_nmap_host_alive_check>
    4b2a:	83 f8 01             	cmp    eax,0x1
    4b2d:	0f 85 f6 00 00 00    	jne    4c29 <ip4_tcp_decode+0x858>
    4b33:	80 7d b0 00          	cmp    BYTE PTR [rbp-0x50],0x0
    4b37:	74 0c                	je     4b45 <ip4_tcp_decode+0x774>
    4b39:	83 7d b8 50          	cmp    DWORD PTR [rbp-0x48],0x50
    4b3d:	74 26                	je     4b65 <ip4_tcp_decode+0x794>
    4b3f:	83 7d bc 50          	cmp    DWORD PTR [rbp-0x44],0x50
    4b43:	74 20                	je     4b65 <ip4_tcp_decode+0x794>
    4b45:	80 7d b1 00          	cmp    BYTE PTR [rbp-0x4f],0x0
    4b49:	0f 84 da 00 00 00    	je     4c29 <ip4_tcp_decode+0x858>
    4b4f:	81 7d b8 bb 01 00 00 	cmp    DWORD PTR [rbp-0x48],0x1bb
    4b56:	74 0d                	je     4b65 <ip4_tcp_decode+0x794>
    4b58:	81 7d bc bb 01 00 00 	cmp    DWORD PTR [rbp-0x44],0x1bb
    4b5f:	0f 85 c4 00 00 00    	jne    4c29 <ip4_tcp_decode+0x858>
    4b65:	8b 45 b8             	mov    eax,DWORD PTR [rbp-0x48]
    4b68:	3b 45 bc             	cmp    eax,DWORD PTR [rbp-0x44]
    4b6b:	76 0a                	jbe    4b77 <ip4_tcp_decode+0x7a6>
    4b6d:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4b71:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    4b75:	eb 08                	jmp    4b7f <ip4_tcp_decode+0x7ae>
    4b77:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4b7b:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    4b7f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4b83:	48 89 c7             	mov    rdi,rax
    4b86:	e8 7a 2e 00 00       	call   7a05 <member_exists>
    4b8b:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    4b8e:	83 7d c4 ff          	cmp    DWORD PTR [rbp-0x3c],0xffffffff
    4b92:	0f 84 91 00 00 00    	je     4c29 <ip4_tcp_decode+0x858>
    4b98:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    4b9b:	48 63 d0             	movsxd rdx,eax
    4b9e:	48 89 d0             	mov    rax,rdx
    4ba1:	48 c1 e0 02          	shl    rax,0x2
    4ba5:	48 01 d0             	add    rax,rdx
    4ba8:	48 c1 e0 03          	shl    rax,0x3
    4bac:	48 01 d0             	add    rax,rdx
    4baf:	48 c1 e0 04          	shl    rax,0x4
    4bb3:	48 8d 15 e6 e4 0e 00 	lea    rdx,[rip+0xee4e6]        # f30a0 <watchlist>
    4bba:	48 01 d0             	add    rax,rdx
    4bbd:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4bc1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4bc5:	8b 40 34             	mov    eax,DWORD PTR [rax+0x34]
    4bc8:	85 c0                	test   eax,eax
    4bca:	75 2a                	jne    4bf6 <ip4_tcp_decode+0x825>
    4bcc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4bd0:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4bd3:	83 f8 01             	cmp    eax,0x1
    4bd6:	75 1e                	jne    4bf6 <ip4_tcp_decode+0x825>
    4bd8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4bdc:	c7 40 34 01 00 00 00 	mov    DWORD PTR [rax+0x34],0x1
    4be3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4be7:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4bea:	8d 50 01             	lea    edx,[rax+0x1]
    4bed:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4bf1:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    4bf4:	eb 33                	jmp    4c29 <ip4_tcp_decode+0x858>
    4bf6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4bfa:	8b 40 38             	mov    eax,DWORD PTR [rax+0x38]
    4bfd:	85 c0                	test   eax,eax
    4bff:	75 28                	jne    4c29 <ip4_tcp_decode+0x858>
    4c01:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4c05:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4c08:	83 f8 02             	cmp    eax,0x2
    4c0b:	75 1c                	jne    4c29 <ip4_tcp_decode+0x858>
    4c0d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4c11:	c7 40 38 01 00 00 00 	mov    DWORD PTR [rax+0x38],0x1
    4c18:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4c1c:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4c1f:	8d 50 01             	lea    edx,[rax+0x1]
    4c22:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4c26:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    4c29:	0f b6 05 09 2d 10 00 	movzx  eax,BYTE PTR [rip+0x102d09]        # 107939 <packet_print>
    4c30:	84 c0                	test   al,al
    4c32:	74 3a                	je     4c6e <ip4_tcp_decode+0x89d>
    4c34:	80 7d b3 00          	cmp    BYTE PTR [rbp-0x4d],0x0
    4c38:	74 34                	je     4c6e <ip4_tcp_decode+0x89d>
    4c3a:	80 7d b0 00          	cmp    BYTE PTR [rbp-0x50],0x0
    4c3e:	74 2e                	je     4c6e <ip4_tcp_decode+0x89d>
    4c40:	0f b6 45 b2          	movzx  eax,BYTE PTR [rbp-0x4e]
    4c44:	83 f0 01             	xor    eax,0x1
    4c47:	84 c0                	test   al,al
    4c49:	74 23                	je     4c6e <ip4_tcp_decode+0x89d>
    4c4b:	83 7d b8 50          	cmp    DWORD PTR [rbp-0x48],0x50
    4c4f:	74 06                	je     4c57 <ip4_tcp_decode+0x886>
    4c51:	83 7d bc 50          	cmp    DWORD PTR [rbp-0x44],0x50
    4c55:	75 17                	jne    4c6e <ip4_tcp_decode+0x89d>
    4c57:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    4c5b:	48 8d 50 42          	lea    rdx,[rax+0x42]
    4c5f:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4c63:	48 89 c6             	mov    rsi,rax
    4c66:	48 89 d7             	mov    rdi,rdx
    4c69:	e8 23 3a 00 00       	call   8691 <http_disect>
    4c6e:	83 7d b8 15          	cmp    DWORD PTR [rbp-0x48],0x15
    4c72:	74 06                	je     4c7a <ip4_tcp_decode+0x8a9>
    4c74:	83 7d bc 15          	cmp    DWORD PTR [rbp-0x44],0x15
    4c78:	75 2d                	jne    4ca7 <ip4_tcp_decode+0x8d6>
    4c7a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4c7e:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    4c82:	c0 e8 04             	shr    al,0x4
    4c85:	0f b6 c0             	movzx  eax,al
    4c88:	c1 e0 02             	shl    eax,0x2
    4c8b:	48 98                	cdqe   
    4c8d:	48 8d 50 22          	lea    rdx,[rax+0x22]
    4c91:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    4c95:	48 01 c2             	add    rdx,rax
    4c98:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4c9c:	48 89 c6             	mov    rsi,rax
    4c9f:	48 89 d7             	mov    rdi,rdx
    4ca2:	e8 ed 3b 00 00       	call   8894 <ftp_disect>
    4ca7:	81 7d b8 bb 01 00 00 	cmp    DWORD PTR [rbp-0x48],0x1bb
    4cae:	74 09                	je     4cb9 <ip4_tcp_decode+0x8e8>
    4cb0:	81 7d bc bb 01 00 00 	cmp    DWORD PTR [rbp-0x44],0x1bb
    4cb7:	75 26                	jne    4cdf <ip4_tcp_decode+0x90e>
    4cb9:	80 7d b3 00          	cmp    BYTE PTR [rbp-0x4d],0x0
    4cbd:	74 20                	je     4cdf <ip4_tcp_decode+0x90e>
    4cbf:	80 7d b0 00          	cmp    BYTE PTR [rbp-0x50],0x0
    4cc3:	74 1a                	je     4cdf <ip4_tcp_decode+0x90e>
    4cc5:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4cc9:	48 8b 00             	mov    rax,QWORD PTR [rax]
    4ccc:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
    4cd0:	48 8b 4d 90          	mov    rcx,QWORD PTR [rbp-0x70]
    4cd4:	48 89 ce             	mov    rsi,rcx
    4cd7:	48 89 c7             	mov    rdi,rax
    4cda:	e8 5e 33 00 00       	call   803d <tls_decode>
    4cdf:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    4ce3:	8b 50 14             	mov    edx,DWORD PTR [rax+0x14]
    4ce6:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4cea:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    4cee:	c0 e8 04             	shr    al,0x4
    4cf1:	0f b6 c0             	movzx  eax,al
    4cf4:	c1 e0 02             	shl    eax,0x2
    4cf7:	29 c2                	sub    edx,eax
    4cf9:	89 d0                	mov    eax,edx
    4cfb:	8d 50 de             	lea    edx,[rax-0x22]
    4cfe:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4d02:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    4d05:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4d09:	48 89 c7             	mov    rdi,rax
    4d0c:	e8 97 17 00 00       	call   64a8 <rulemgr>
    4d11:	90                   	nop
    4d12:	c9                   	leave  
    4d13:	c3                   	ret    

0000000000004d14 <ip4_udp_decode>:
    4d14:	f3 0f 1e fa          	endbr64 
    4d18:	55                   	push   rbp
    4d19:	48 89 e5             	mov    rbp,rsp
    4d1c:	48 83 ec 30          	sub    rsp,0x30
    4d20:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    4d24:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    4d28:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    4d2c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4d30:	48 83 c0 22          	add    rax,0x22
    4d34:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4d38:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4d3c:	48 8d 50 2a          	lea    rdx,[rax+0x2a]
    4d40:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d44:	48 89 10             	mov    QWORD PTR [rax],rdx
    4d47:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d4b:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    4d4f:	ba 5d 00 00 00       	mov    edx,0x5d
    4d54:	be 01 00 00 00       	mov    esi,0x1
    4d59:	48 89 c7             	mov    rdi,rax
    4d5c:	e8 07 02 00 00       	call   4f68 <add_ip_addr_or_inc_counter>
    4d61:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d65:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4d69:	ba 5d 00 00 00       	mov    edx,0x5d
    4d6e:	be 00 00 00 00       	mov    esi,0x0
    4d73:	48 89 c7             	mov    rdi,rax
    4d76:	e8 ed 01 00 00       	call   4f68 <add_ip_addr_or_inc_counter>
    4d7b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4d7f:	0f b7 00             	movzx  eax,WORD PTR [rax]
    4d82:	0f b7 c0             	movzx  eax,ax
    4d85:	89 c7                	mov    edi,eax
    4d87:	e8 b4 d9 ff ff       	call   2740 <ntohs@plt>
    4d8c:	0f b7 c0             	movzx  eax,ax
    4d8f:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
    4d92:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4d96:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    4d9a:	0f b7 c0             	movzx  eax,ax
    4d9d:	89 c7                	mov    edi,eax
    4d9f:	e8 9c d9 ff ff       	call   2740 <ntohs@plt>
    4da4:	0f b7 c0             	movzx  eax,ax
    4da7:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    4daa:	0f b6 05 88 2b 10 00 	movzx  eax,BYTE PTR [rip+0x102b88]        # 107939 <packet_print>
    4db1:	84 c0                	test   al,al
    4db3:	74 5d                	je     4e12 <ip4_udp_decode+0xfe>
    4db5:	48 8d 35 64 7c 00 00 	lea    rsi,[rip+0x7c64]        # ca20 <_IO_stdin_used+0xa20>
    4dbc:	48 8d 3d 63 7c 00 00 	lea    rdi,[rip+0x7c63]        # ca26 <_IO_stdin_used+0xa26>
    4dc3:	b8 00 00 00 00       	mov    eax,0x0
    4dc8:	e8 f3 d7 ff ff       	call   25c0 <printf@plt>
    4dcd:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4dd1:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    4dd5:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4dd9:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    4ddd:	8b 75 f4             	mov    esi,DWORD PTR [rbp-0xc]
    4de0:	8b 55 f0             	mov    edx,DWORD PTR [rbp-0x10]
    4de3:	41 89 f0             	mov    r8d,esi
    4de6:	48 89 c6             	mov    rsi,rax
    4de9:	48 8d 3d 39 7c 00 00 	lea    rdi,[rip+0x7c39]        # ca29 <_IO_stdin_used+0xa29>
    4df0:	b8 00 00 00 00       	mov    eax,0x0
    4df5:	e8 c6 d7 ff ff       	call   25c0 <printf@plt>
    4dfa:	48 8d 35 41 7c 00 00 	lea    rsi,[rip+0x7c41]        # ca42 <_IO_stdin_used+0xa42>
    4e01:	48 8d 3d 1e 7c 00 00 	lea    rdi,[rip+0x7c1e]        # ca26 <_IO_stdin_used+0xa26>
    4e08:	b8 00 00 00 00       	mov    eax,0x0
    4e0d:	e8 ae d7 ff ff       	call   25c0 <printf@plt>
    4e12:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e16:	8b 55 f0             	mov    edx,DWORD PTR [rbp-0x10]
    4e19:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    4e1c:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e20:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
    4e23:	89 50 28             	mov    DWORD PTR [rax+0x28],edx
    4e26:	83 7d f0 35          	cmp    DWORD PTR [rbp-0x10],0x35
    4e2a:	74 06                	je     4e32 <ip4_udp_decode+0x11e>
    4e2c:	83 7d f4 35          	cmp    DWORD PTR [rbp-0xc],0x35
    4e30:	75 17                	jne    4e49 <ip4_udp_decode+0x135>
    4e32:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4e36:	48 8d 50 2b          	lea    rdx,[rax+0x2b]
    4e3a:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e3e:	48 89 c6             	mov    rsi,rax
    4e41:	48 89 d7             	mov    rdi,rdx
    4e44:	e8 fa 38 00 00       	call   8743 <dns_disect>
    4e49:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4e4d:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    4e50:	8d 50 d6             	lea    edx,[rax-0x2a]
    4e53:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e57:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    4e5a:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e5e:	48 89 c7             	mov    rdi,rax
    4e61:	e8 42 16 00 00       	call   64a8 <rulemgr>
    4e66:	90                   	nop
    4e67:	c9                   	leave  
    4e68:	c3                   	ret    

0000000000004e69 <ip4_igmp_decode>:
    4e69:	f3 0f 1e fa          	endbr64 
    4e6d:	55                   	push   rbp
    4e6e:	48 89 e5             	mov    rbp,rsp
    4e71:	48 83 ec 60          	sub    rsp,0x60
    4e75:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    4e79:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
    4e7d:	48 89 55 a8          	mov    QWORD PTR [rbp-0x58],rdx
    4e81:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4e88:	00 00 
    4e8a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4e8e:	31 c0                	xor    eax,eax
    4e90:	0f b6 05 a2 2a 10 00 	movzx  eax,BYTE PTR [rip+0x102aa2]        # 107939 <packet_print>
    4e97:	84 c0                	test   al,al
    4e99:	0f 84 b1 00 00 00    	je     4f50 <ip4_igmp_decode+0xe7>
    4e9f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4ea3:	48 83 c0 26          	add    rax,0x26
    4ea7:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    4eab:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    4eaf:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    4eb3:	48 89 c6             	mov    rsi,rax
    4eb6:	48 8d 3d 8b 7b 00 00 	lea    rdi,[rip+0x7b8b]        # ca48 <_IO_stdin_used+0xa48>
    4ebd:	b8 00 00 00 00       	mov    eax,0x0
    4ec2:	e8 f9 d6 ff ff       	call   25c0 <printf@plt>
    4ec7:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4ecb:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4ece:	0f b6 c0             	movzx  eax,al
    4ed1:	83 f8 11             	cmp    eax,0x11
    4ed4:	74 07                	je     4edd <ip4_igmp_decode+0x74>
    4ed6:	83 f8 22             	cmp    eax,0x22
    4ed9:	74 10                	je     4eeb <ip4_igmp_decode+0x82>
    4edb:	eb 54                	jmp    4f31 <ip4_igmp_decode+0xc8>
    4edd:	48 8d 3d 79 7b 00 00 	lea    rdi,[rip+0x7b79]        # ca5d <_IO_stdin_used+0xa5d>
    4ee4:	e8 17 d6 ff ff       	call   2500 <puts@plt>
    4ee9:	eb 66                	jmp    4f51 <ip4_igmp_decode+0xe8>
    4eeb:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4eef:	48 83 c0 26          	add    rax,0x26
    4ef3:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    4ef7:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4efb:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    4efe:	89 c7                	mov    edi,eax
    4f00:	e8 fb e1 ff ff       	call   3100 <ipv4_ntoa>
    4f05:	48 89 c2             	mov    rdx,rax
    4f08:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    4f0c:	48 89 d6             	mov    rsi,rdx
    4f0f:	48 89 c7             	mov    rdi,rax
    4f12:	e8 b9 d5 ff ff       	call   24d0 <strcpy@plt>
    4f17:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    4f1b:	48 89 c6             	mov    rsi,rax
    4f1e:	48 8d 3d 53 7b 00 00 	lea    rdi,[rip+0x7b53]        # ca78 <_IO_stdin_used+0xa78>
    4f25:	b8 00 00 00 00       	mov    eax,0x0
    4f2a:	e8 91 d6 ff ff       	call   25c0 <printf@plt>
    4f2f:	eb 20                	jmp    4f51 <ip4_igmp_decode+0xe8>
    4f31:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4f35:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4f38:	0f b6 c0             	movzx  eax,al
    4f3b:	89 c6                	mov    esi,eax
    4f3d:	48 8d 3d 6a 7b 00 00 	lea    rdi,[rip+0x7b6a]        # caae <_IO_stdin_used+0xaae>
    4f44:	b8 00 00 00 00       	mov    eax,0x0
    4f49:	e8 72 d6 ff ff       	call   25c0 <printf@plt>
    4f4e:	eb 01                	jmp    4f51 <ip4_igmp_decode+0xe8>
    4f50:	90                   	nop
    4f51:	90                   	nop
    4f52:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4f56:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    4f5d:	00 00 
    4f5f:	74 05                	je     4f66 <ip4_igmp_decode+0xfd>
    4f61:	e8 1a d6 ff ff       	call   2580 <__stack_chk_fail@plt>
    4f66:	c9                   	leave  
    4f67:	c3                   	ret    

0000000000004f68 <add_ip_addr_or_inc_counter>:
    4f68:	f3 0f 1e fa          	endbr64 
    4f6c:	55                   	push   rbp
    4f6d:	48 89 e5             	mov    rbp,rsp
    4f70:	48 83 ec 60          	sub    rsp,0x60
    4f74:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    4f78:	89 f0                	mov    eax,esi
    4f7a:	89 55 a0             	mov    DWORD PTR [rbp-0x60],edx
    4f7d:	88 45 a4             	mov    BYTE PTR [rbp-0x5c],al
    4f80:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4f87:	00 00 
    4f89:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4f8d:	31 c0                	xor    eax,eax
    4f8f:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4f93:	ba 08 00 00 00       	mov    edx,0x8
    4f98:	be 00 00 00 00       	mov    esi,0x0
    4f9d:	48 89 c7             	mov    rdi,rax
    4fa0:	e8 5b d6 ff ff       	call   2600 <memset@plt>
    4fa5:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    4fa9:	ba 1c 00 00 00       	mov    edx,0x1c
    4fae:	be 00 00 00 00       	mov    esi,0x0
    4fb3:	48 89 c7             	mov    rdi,rax
    4fb6:	e8 45 d6 ff ff       	call   2600 <memset@plt>
    4fbb:	48 8b 4d a8          	mov    rcx,QWORD PTR [rbp-0x58]
    4fbf:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4fc3:	ba 18 00 00 00       	mov    edx,0x18
    4fc8:	48 89 ce             	mov    rsi,rcx
    4fcb:	48 89 c7             	mov    rdi,rax
    4fce:	e8 dd d4 ff ff       	call   24b0 <strncpy@plt>
    4fd3:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    4fd7:	ba 1c 00 00 00       	mov    edx,0x1c
    4fdc:	be 00 00 00 00       	mov    esi,0x0
    4fe1:	48 89 c7             	mov    rdi,rax
    4fe4:	e8 17 d6 ff ff       	call   2600 <memset@plt>
    4fe9:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4fed:	48 8d 55 c0          	lea    rdx,[rbp-0x40]
    4ff1:	48 83 c2 08          	add    rdx,0x8
    4ff5:	48 89 c6             	mov    rsi,rax
    4ff8:	48 89 d7             	mov    rdi,rdx
    4ffb:	e8 d0 d4 ff ff       	call   24d0 <strcpy@plt>
    5000:	0f b6 45 a4          	movzx  eax,BYTE PTR [rbp-0x5c]
    5004:	88 45 c0             	mov    BYTE PTR [rbp-0x40],al
    5007:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    500a:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    500d:	48 8d 55 c0          	lea    rdx,[rbp-0x40]
    5011:	48 8d 45 b8          	lea    rax,[rbp-0x48]
    5015:	48 89 d1             	mov    rcx,rdx
    5018:	48 8d 15 35 00 00 00 	lea    rdx,[rip+0x35]        # 5054 <verify_ip_addr>
    501f:	be 00 00 00 00       	mov    esi,0x0
    5024:	48 89 c7             	mov    rdi,rax
    5027:	e8 64 d4 ff ff       	call   2490 <pthread_create@plt>
    502c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5030:	be 00 00 00 00       	mov    esi,0x0
    5035:	48 89 c7             	mov    rdi,rax
    5038:	e8 63 d7 ff ff       	call   27a0 <pthread_join@plt>
    503d:	90                   	nop
    503e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5042:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    5049:	00 00 
    504b:	74 05                	je     5052 <add_ip_addr_or_inc_counter+0xea>
    504d:	e8 2e d5 ff ff       	call   2580 <__stack_chk_fail@plt>
    5052:	c9                   	leave  
    5053:	c3                   	ret    

0000000000005054 <verify_ip_addr>:
    5054:	f3 0f 1e fa          	endbr64 
    5058:	55                   	push   rbp
    5059:	48 89 e5             	mov    rbp,rsp
    505c:	48 83 ec 30          	sub    rsp,0x30
    5060:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    5064:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    5068:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    506c:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
    5073:	e9 c9 00 00 00       	jmp    5141 <verify_ip_addr+0xed>
    5078:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    507b:	48 63 d0             	movsxd rdx,eax
    507e:	48 89 d0             	mov    rax,rdx
    5081:	48 c1 e0 02          	shl    rax,0x2
    5085:	48 01 d0             	add    rax,rdx
    5088:	48 c1 e0 03          	shl    rax,0x3
    508c:	48 01 d0             	add    rax,rdx
    508f:	48 c1 e0 04          	shl    rax,0x4
    5093:	48 8d 15 06 e0 0e 00 	lea    rdx,[rip+0xee006]        # f30a0 <watchlist>
    509a:	48 01 d0             	add    rax,rdx
    509d:	48 8d 50 08          	lea    rdx,[rax+0x8]
    50a1:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    50a5:	48 83 c0 08          	add    rax,0x8
    50a9:	48 89 d6             	mov    rsi,rdx
    50ac:	48 89 c7             	mov    rdi,rax
    50af:	e8 cc d5 ff ff       	call   2680 <strcmp@plt>
    50b4:	85 c0                	test   eax,eax
    50b6:	0f 85 81 00 00 00    	jne    513d <verify_ip_addr+0xe9>
    50bc:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    50bf:	48 63 d0             	movsxd rdx,eax
    50c2:	48 89 d0             	mov    rax,rdx
    50c5:	48 c1 e0 02          	shl    rax,0x2
    50c9:	48 01 d0             	add    rax,rdx
    50cc:	48 c1 e0 03          	shl    rax,0x3
    50d0:	48 01 d0             	add    rax,rdx
    50d3:	48 c1 e0 04          	shl    rax,0x4
    50d7:	48 89 c2             	mov    rdx,rax
    50da:	48 8d 05 17 e2 0e 00 	lea    rax,[rip+0xee217]        # f32f8 <watchlist+0x258>
    50e1:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    50e4:	8d 48 01             	lea    ecx,[rax+0x1]
    50e7:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    50ea:	48 63 d0             	movsxd rdx,eax
    50ed:	48 89 d0             	mov    rax,rdx
    50f0:	48 c1 e0 02          	shl    rax,0x2
    50f4:	48 01 d0             	add    rax,rdx
    50f7:	48 c1 e0 03          	shl    rax,0x3
    50fb:	48 01 d0             	add    rax,rdx
    50fe:	48 c1 e0 04          	shl    rax,0x4
    5102:	48 89 c2             	mov    rdx,rax
    5105:	48 8d 05 ec e1 0e 00 	lea    rax,[rip+0xee1ec]        # f32f8 <watchlist+0x258>
    510c:	89 0c 02             	mov    DWORD PTR [rdx+rax*1],ecx
    510f:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    5112:	48 63 d0             	movsxd rdx,eax
    5115:	48 89 d0             	mov    rax,rdx
    5118:	48 c1 e0 02          	shl    rax,0x2
    511c:	48 01 d0             	add    rax,rdx
    511f:	48 c1 e0 03          	shl    rax,0x3
    5123:	48 01 d0             	add    rax,rdx
    5126:	48 c1 e0 04          	shl    rax,0x4
    512a:	48 8d 15 6f df 0e 00 	lea    rdx,[rip+0xedf6f]        # f30a0 <watchlist>
    5131:	48 01 d0             	add    rax,rdx
    5134:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    5138:	e9 f5 00 00 00       	jmp    5232 <verify_ip_addr+0x1de>
    513d:	83 45 e4 01          	add    DWORD PTR [rbp-0x1c],0x1
    5141:	8b 05 d1 be 00 00    	mov    eax,DWORD PTR [rip+0xbed1]        # 11018 <watchlist_num>
    5147:	39 45 e4             	cmp    DWORD PTR [rbp-0x1c],eax
    514a:	0f 8e 28 ff ff ff    	jle    5078 <verify_ip_addr+0x24>
    5150:	bf 90 02 00 00       	mov    edi,0x290
    5155:	e8 a6 d5 ff ff       	call   2700 <malloc@plt>
    515a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    515e:	8b 05 b4 be 00 00    	mov    eax,DWORD PTR [rip+0xbeb4]        # 11018 <watchlist_num>
    5164:	83 c0 01             	add    eax,0x1
    5167:	89 05 ab be 00 00    	mov    DWORD PTR [rip+0xbeab],eax        # 11018 <watchlist_num>
    516d:	8b 05 a5 be 00 00    	mov    eax,DWORD PTR [rip+0xbea5]        # 11018 <watchlist_num>
    5173:	48 63 d0             	movsxd rdx,eax
    5176:	48 89 d0             	mov    rax,rdx
    5179:	48 c1 e0 02          	shl    rax,0x2
    517d:	48 01 d0             	add    rax,rdx
    5180:	48 c1 e0 03          	shl    rax,0x3
    5184:	48 01 d0             	add    rax,rdx
    5187:	48 c1 e0 04          	shl    rax,0x4
    518b:	48 89 c1             	mov    rcx,rax
    518e:	48 8d 05 0b df 0e 00 	lea    rax,[rip+0xedf0b]        # f30a0 <watchlist>
    5195:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    5199:	48 01 c8             	add    rax,rcx
    519c:	48 89 d6             	mov    rsi,rdx
    519f:	ba 52 00 00 00       	mov    edx,0x52
    51a4:	48 89 c7             	mov    rdi,rax
    51a7:	48 89 d1             	mov    rcx,rdx
    51aa:	f3 48 a5             	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
    51ad:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    51b1:	48 83 c0 08          	add    rax,0x8
    51b5:	ba 0f 00 00 00       	mov    edx,0xf
    51ba:	be 00 00 00 00       	mov    esi,0x0
    51bf:	48 89 c7             	mov    rdi,rax
    51c2:	e8 39 d4 ff ff       	call   2600 <memset@plt>
    51c7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    51cb:	48 8d 48 08          	lea    rcx,[rax+0x8]
    51cf:	8b 05 43 be 00 00    	mov    eax,DWORD PTR [rip+0xbe43]        # 11018 <watchlist_num>
    51d5:	48 63 d0             	movsxd rdx,eax
    51d8:	48 89 d0             	mov    rax,rdx
    51db:	48 c1 e0 02          	shl    rax,0x2
    51df:	48 01 d0             	add    rax,rdx
    51e2:	48 c1 e0 03          	shl    rax,0x3
    51e6:	48 01 d0             	add    rax,rdx
    51e9:	48 c1 e0 04          	shl    rax,0x4
    51ed:	48 8d 15 ac de 0e 00 	lea    rdx,[rip+0xedeac]        # f30a0 <watchlist>
    51f4:	48 01 d0             	add    rax,rdx
    51f7:	48 83 c0 08          	add    rax,0x8
    51fb:	48 89 ce             	mov    rsi,rcx
    51fe:	48 89 c7             	mov    rdi,rax
    5201:	e8 ca d2 ff ff       	call   24d0 <strcpy@plt>
    5206:	8b 05 0c be 00 00    	mov    eax,DWORD PTR [rip+0xbe0c]        # 11018 <watchlist_num>
    520c:	48 63 d0             	movsxd rdx,eax
    520f:	48 89 d0             	mov    rax,rdx
    5212:	48 c1 e0 02          	shl    rax,0x2
    5216:	48 01 d0             	add    rax,rdx
    5219:	48 c1 e0 03          	shl    rax,0x3
    521d:	48 01 d0             	add    rax,rdx
    5220:	48 c1 e0 04          	shl    rax,0x4
    5224:	48 8d 15 75 de 0e 00 	lea    rdx,[rip+0xede75]        # f30a0 <watchlist>
    522b:	48 01 d0             	add    rax,rdx
    522e:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    5232:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5236:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5239:	84 c0                	test   al,al
    523b:	74 36                	je     5273 <verify_ip_addr+0x21f>
    523d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5241:	8b 80 80 02 00 00    	mov    eax,DWORD PTR [rax+0x280]
    5247:	8d 50 01             	lea    edx,[rax+0x1]
    524a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    524e:	89 90 80 02 00 00    	mov    DWORD PTR [rax+0x280],edx
    5254:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5258:	8b 90 88 02 00 00    	mov    edx,DWORD PTR [rax+0x288]
    525e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5262:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    5265:	01 c2                	add    edx,eax
    5267:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    526b:	89 90 88 02 00 00    	mov    DWORD PTR [rax+0x288],edx
    5271:	eb 34                	jmp    52a7 <verify_ip_addr+0x253>
    5273:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5277:	8b 80 7c 02 00 00    	mov    eax,DWORD PTR [rax+0x27c]
    527d:	8d 50 01             	lea    edx,[rax+0x1]
    5280:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5284:	89 90 7c 02 00 00    	mov    DWORD PTR [rax+0x27c],edx
    528a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    528e:	8b 90 84 02 00 00    	mov    edx,DWORD PTR [rax+0x284]
    5294:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5298:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    529b:	01 c2                	add    edx,eax
    529d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52a1:	89 90 84 02 00 00    	mov    DWORD PTR [rax+0x284],edx
    52a7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52ab:	8b 90 8c 02 00 00    	mov    edx,DWORD PTR [rax+0x28c]
    52b1:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    52b5:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    52b8:	01 c2                	add    edx,eax
    52ba:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52be:	89 90 8c 02 00 00    	mov    DWORD PTR [rax+0x28c],edx
    52c4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52c8:	8b 80 7c 02 00 00    	mov    eax,DWORD PTR [rax+0x27c]
    52ce:	8d 14 00             	lea    edx,[rax+rax*1]
    52d1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52d5:	89 90 58 02 00 00    	mov    DWORD PTR [rax+0x258],edx
    52db:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    52df:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    52e2:	83 f8 5e             	cmp    eax,0x5e
    52e5:	0f 84 9b 00 00 00    	je     5386 <verify_ip_addr+0x332>
    52eb:	83 f8 5e             	cmp    eax,0x5e
    52ee:	0f 8f cf 00 00 00    	jg     53c3 <verify_ip_addr+0x36f>
    52f4:	83 f8 5c             	cmp    eax,0x5c
    52f7:	74 0a                	je     5303 <verify_ip_addr+0x2af>
    52f9:	83 f8 5d             	cmp    eax,0x5d
    52fc:	74 48                	je     5346 <verify_ip_addr+0x2f2>
    52fe:	e9 c0 00 00 00       	jmp    53c3 <verify_ip_addr+0x36f>
    5303:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5307:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    530a:	84 c0                	test   al,al
    530c:	74 1c                	je     532a <verify_ip_addr+0x2d6>
    530e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5312:	8b 80 5c 02 00 00    	mov    eax,DWORD PTR [rax+0x25c]
    5318:	8d 50 01             	lea    edx,[rax+0x1]
    531b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    531f:	89 90 5c 02 00 00    	mov    DWORD PTR [rax+0x25c],edx
    5325:	e9 d5 00 00 00       	jmp    53ff <verify_ip_addr+0x3ab>
    532a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    532e:	8b 80 68 02 00 00    	mov    eax,DWORD PTR [rax+0x268]
    5334:	8d 50 01             	lea    edx,[rax+0x1]
    5337:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    533b:	89 90 68 02 00 00    	mov    DWORD PTR [rax+0x268],edx
    5341:	e9 b9 00 00 00       	jmp    53ff <verify_ip_addr+0x3ab>
    5346:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    534a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    534d:	84 c0                	test   al,al
    534f:	74 1c                	je     536d <verify_ip_addr+0x319>
    5351:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5355:	8b 80 60 02 00 00    	mov    eax,DWORD PTR [rax+0x260]
    535b:	8d 50 01             	lea    edx,[rax+0x1]
    535e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5362:	89 90 60 02 00 00    	mov    DWORD PTR [rax+0x260],edx
    5368:	e9 92 00 00 00       	jmp    53ff <verify_ip_addr+0x3ab>
    536d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5371:	8b 80 6c 02 00 00    	mov    eax,DWORD PTR [rax+0x26c]
    5377:	8d 50 01             	lea    edx,[rax+0x1]
    537a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    537e:	89 90 6c 02 00 00    	mov    DWORD PTR [rax+0x26c],edx
    5384:	eb 79                	jmp    53ff <verify_ip_addr+0x3ab>
    5386:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    538a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    538d:	84 c0                	test   al,al
    538f:	74 19                	je     53aa <verify_ip_addr+0x356>
    5391:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5395:	8b 80 64 02 00 00    	mov    eax,DWORD PTR [rax+0x264]
    539b:	8d 50 01             	lea    edx,[rax+0x1]
    539e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53a2:	89 90 64 02 00 00    	mov    DWORD PTR [rax+0x264],edx
    53a8:	eb 55                	jmp    53ff <verify_ip_addr+0x3ab>
    53aa:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53ae:	8b 80 70 02 00 00    	mov    eax,DWORD PTR [rax+0x270]
    53b4:	8d 50 01             	lea    edx,[rax+0x1]
    53b7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53bb:	89 90 70 02 00 00    	mov    DWORD PTR [rax+0x270],edx
    53c1:	eb 3c                	jmp    53ff <verify_ip_addr+0x3ab>
    53c3:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    53c7:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    53ca:	84 c0                	test   al,al
    53cc:	74 19                	je     53e7 <verify_ip_addr+0x393>
    53ce:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53d2:	8b 80 74 02 00 00    	mov    eax,DWORD PTR [rax+0x274]
    53d8:	8d 50 01             	lea    edx,[rax+0x1]
    53db:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53df:	89 90 74 02 00 00    	mov    DWORD PTR [rax+0x274],edx
    53e5:	eb 17                	jmp    53fe <verify_ip_addr+0x3aa>
    53e7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53eb:	8b 80 78 02 00 00    	mov    eax,DWORD PTR [rax+0x278]
    53f1:	8d 50 01             	lea    edx,[rax+0x1]
    53f4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53f8:	89 90 78 02 00 00    	mov    DWORD PTR [rax+0x278],edx
    53fe:	90                   	nop
    53ff:	b8 01 00 00 00       	mov    eax,0x1
    5404:	c9                   	leave  
    5405:	c3                   	ret    

0000000000005406 <ascii_hexdump>:
    5406:	f3 0f 1e fa          	endbr64 
    540a:	55                   	push   rbp
    540b:	48 89 e5             	mov    rbp,rsp
    540e:	48 83 ec 20          	sub    rsp,0x20
    5412:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    5416:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    5419:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    5420:	eb 52                	jmp    5474 <ascii_hexdump+0x6e>
    5422:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5425:	48 63 d0             	movsxd rdx,eax
    5428:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    542c:	48 01 d0             	add    rax,rdx
    542f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5432:	3c 20                	cmp    al,0x20
    5434:	76 30                	jbe    5466 <ascii_hexdump+0x60>
    5436:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5439:	48 63 d0             	movsxd rdx,eax
    543c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5440:	48 01 d0             	add    rax,rdx
    5443:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5446:	3c 7e                	cmp    al,0x7e
    5448:	77 1c                	ja     5466 <ascii_hexdump+0x60>
    544a:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    544d:	48 63 d0             	movsxd rdx,eax
    5450:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5454:	48 01 d0             	add    rax,rdx
    5457:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    545a:	0f b6 c0             	movzx  eax,al
    545d:	89 c7                	mov    edi,eax
    545f:	e8 1c d0 ff ff       	call   2480 <putchar@plt>
    5464:	eb 0a                	jmp    5470 <ascii_hexdump+0x6a>
    5466:	bf 2e 00 00 00       	mov    edi,0x2e
    546b:	e8 10 d0 ff ff       	call   2480 <putchar@plt>
    5470:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    5474:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5477:	3b 45 e4             	cmp    eax,DWORD PTR [rbp-0x1c]
    547a:	7c a6                	jl     5422 <ascii_hexdump+0x1c>
    547c:	bf 0a 00 00 00       	mov    edi,0xa
    5481:	e8 fa cf ff ff       	call   2480 <putchar@plt>
    5486:	90                   	nop
    5487:	c9                   	leave  
    5488:	c3                   	ret    

0000000000005489 <stdout_alert>:
    5489:	f3 0f 1e fa          	endbr64 
    548d:	55                   	push   rbp
    548e:	48 89 e5             	mov    rbp,rsp
    5491:	53                   	push   rbx
    5492:	48 81 ec c8 01 00 00 	sub    rsp,0x1c8
    5499:	48 89 bd 48 fe ff ff 	mov    QWORD PTR [rbp-0x1b8],rdi
    54a0:	48 89 b5 40 fe ff ff 	mov    QWORD PTR [rbp-0x1c0],rsi
    54a7:	89 95 3c fe ff ff    	mov    DWORD PTR [rbp-0x1c4],edx
    54ad:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    54b4:	00 00 
    54b6:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    54ba:	31 c0                	xor    eax,eax
    54bc:	bf 00 00 00 00       	mov    edi,0x0
    54c1:	e8 0a d2 ff ff       	call   26d0 <time@plt>
    54c6:	48 89 85 50 fe ff ff 	mov    QWORD PTR [rbp-0x1b0],rax
    54cd:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
    54d4:	48 89 c7             	mov    rdi,rax
    54d7:	e8 c4 cf ff ff       	call   24a0 <localtime@plt>
    54dc:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    54df:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    54e3:	48 89 8d 60 fe ff ff 	mov    QWORD PTR [rbp-0x1a0],rcx
    54ea:	48 89 9d 68 fe ff ff 	mov    QWORD PTR [rbp-0x198],rbx
    54f1:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    54f5:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    54f9:	48 89 8d 70 fe ff ff 	mov    QWORD PTR [rbp-0x190],rcx
    5500:	48 89 9d 78 fe ff ff 	mov    QWORD PTR [rbp-0x188],rbx
    5507:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    550b:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    550f:	48 89 8d 80 fe ff ff 	mov    QWORD PTR [rbp-0x180],rcx
    5516:	48 89 9d 88 fe ff ff 	mov    QWORD PTR [rbp-0x178],rbx
    551d:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    5521:	48 89 85 90 fe ff ff 	mov    QWORD PTR [rbp-0x170],rax
    5528:	8b bd 60 fe ff ff    	mov    edi,DWORD PTR [rbp-0x1a0]
    552e:	8b b5 64 fe ff ff    	mov    esi,DWORD PTR [rbp-0x19c]
    5534:	44 8b 8d 68 fe ff ff 	mov    r9d,DWORD PTR [rbp-0x198]
    553b:	44 8b 85 6c fe ff ff 	mov    r8d,DWORD PTR [rbp-0x194]
    5542:	8b 85 70 fe ff ff    	mov    eax,DWORD PTR [rbp-0x190]
    5548:	8d 48 01             	lea    ecx,[rax+0x1]
    554b:	8b 85 74 fe ff ff    	mov    eax,DWORD PTR [rbp-0x18c]
    5551:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    5557:	48 8d 85 a0 fe ff ff 	lea    rax,[rbp-0x160]
    555e:	57                   	push   rdi
    555f:	56                   	push   rsi
    5560:	48 8d 35 5f 75 00 00 	lea    rsi,[rip+0x755f]        # cac6 <_IO_stdin_used+0xac6>
    5567:	48 89 c7             	mov    rdi,rax
    556a:	b8 00 00 00 00       	mov    eax,0x0
    556f:	e8 bc d2 ff ff       	call   2830 <sprintf@plt>
    5574:	48 83 c4 10          	add    rsp,0x10
    5578:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    557f:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    5582:	3d 80 00 00 00       	cmp    eax,0x80
    5587:	75 4e                	jne    55d7 <stdout_alert+0x14e>
    5589:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    5590:	48 8b 78 10          	mov    rdi,QWORD PTR [rax+0x10]
    5594:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    559b:	48 8b 70 08          	mov    rsi,QWORD PTR [rax+0x8]
    559f:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
    55a6:	48 8d 88 50 01 00 00 	lea    rcx,[rax+0x150]
    55ad:	48 8d 95 a0 fe ff ff 	lea    rdx,[rbp-0x160]
    55b4:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    55bb:	49 89 f9             	mov    r9,rdi
    55be:	49 89 f0             	mov    r8,rsi
    55c1:	48 8d 35 1a 75 00 00 	lea    rsi,[rip+0x751a]        # cae2 <_IO_stdin_used+0xae2>
    55c8:	48 89 c7             	mov    rdi,rax
    55cb:	b8 00 00 00 00       	mov    eax,0x0
    55d0:	e8 5b d2 ff ff       	call   2830 <sprintf@plt>
    55d5:	eb 61                	jmp    5638 <stdout_alert+0x1af>
    55d7:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    55de:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    55e1:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    55e8:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    55ec:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    55f3:	44 8b 48 24          	mov    r9d,DWORD PTR [rax+0x24]
    55f7:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    55fe:	4c 8b 40 08          	mov    r8,QWORD PTR [rax+0x8]
    5602:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
    5609:	48 8d 88 50 01 00 00 	lea    rcx,[rax+0x150]
    5610:	48 8d 95 a0 fe ff ff 	lea    rdx,[rbp-0x160]
    5617:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    561e:	57                   	push   rdi
    561f:	56                   	push   rsi
    5620:	48 8d 35 cb 74 00 00 	lea    rsi,[rip+0x74cb]        # caf2 <_IO_stdin_used+0xaf2>
    5627:	48 89 c7             	mov    rdi,rax
    562a:	b8 00 00 00 00       	mov    eax,0x0
    562f:	e8 fc d1 ff ff       	call   2830 <sprintf@plt>
    5634:	48 83 c4 10          	add    rsp,0x10
    5638:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    563f:	48 89 c6             	mov    rsi,rax
    5642:	48 8d 3d bf 74 00 00 	lea    rdi,[rip+0x74bf]        # cb08 <_IO_stdin_used+0xb08>
    5649:	b8 00 00 00 00       	mov    eax,0x0
    564e:	e8 6d cf ff ff       	call   25c0 <printf@plt>
    5653:	48 8b 05 d6 b9 00 00 	mov    rax,QWORD PTR [rip+0xb9d6]        # 11030 <def_log_file>
    565a:	48 8d 35 aa 74 00 00 	lea    rsi,[rip+0x74aa]        # cb0b <_IO_stdin_used+0xb0b>
    5661:	48 89 c7             	mov    rdi,rax
    5664:	e8 07 d1 ff ff       	call   2770 <fopen@plt>
    5669:	48 89 85 58 fe ff ff 	mov    QWORD PTR [rbp-0x1a8],rax
    5670:	48 8b 95 58 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1a8]
    5677:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    567e:	48 89 d6             	mov    rsi,rdx
    5681:	48 89 c7             	mov    rdi,rax
    5684:	e8 57 cf ff ff       	call   25e0 <fputs@plt>
    5689:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    5690:	48 89 c7             	mov    rdi,rax
    5693:	e8 b8 ce ff ff       	call   2550 <fclose@plt>
    5698:	90                   	nop
    5699:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    569d:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    56a4:	00 00 
    56a6:	74 05                	je     56ad <stdout_alert+0x224>
    56a8:	e8 d3 ce ff ff       	call   2580 <__stack_chk_fail@plt>
    56ad:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    56b1:	c9                   	leave  
    56b2:	c3                   	ret    

00000000000056b3 <str_match_parser>:
    56b3:	f3 0f 1e fa          	endbr64 
    56b7:	55                   	push   rbp
    56b8:	48 89 e5             	mov    rbp,rsp
    56bb:	53                   	push   rbx
    56bc:	48 83 ec 48          	sub    rsp,0x48
    56c0:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    56c4:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
    56c8:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    56cf:	00 00 
    56d1:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    56d5:	31 c0                	xor    eax,eax
    56d7:	48 89 e0             	mov    rax,rsp
    56da:	48 89 c3             	mov    rbx,rax
    56dd:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    56e1:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    56e4:	85 c0                	test   eax,eax
    56e6:	75 0a                	jne    56f2 <str_match_parser+0x3f>
    56e8:	b8 00 00 00 00       	mov    eax,0x0
    56ed:	e9 e4 01 00 00       	jmp    58d6 <str_match_parser+0x223>
    56f2:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    56f6:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    56f9:	83 c0 01             	add    eax,0x1
    56fc:	01 c0                	add    eax,eax
    56fe:	48 98                	cdqe   
    5700:	48 83 e8 01          	sub    rax,0x1
    5704:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    5708:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    570c:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    570f:	83 c0 01             	add    eax,0x1
    5712:	01 c0                	add    eax,eax
    5714:	48 98                	cdqe   
    5716:	49 89 c2             	mov    r10,rax
    5719:	41 bb 00 00 00 00    	mov    r11d,0x0
    571f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5723:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5726:	83 c0 01             	add    eax,0x1
    5729:	01 c0                	add    eax,eax
    572b:	48 98                	cdqe   
    572d:	49 89 c0             	mov    r8,rax
    5730:	41 b9 00 00 00 00    	mov    r9d,0x0
    5736:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    573a:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    573d:	83 c0 01             	add    eax,0x1
    5740:	01 c0                	add    eax,eax
    5742:	48 98                	cdqe   
    5744:	ba 10 00 00 00       	mov    edx,0x10
    5749:	48 83 ea 01          	sub    rdx,0x1
    574d:	48 01 d0             	add    rax,rdx
    5750:	bf 10 00 00 00       	mov    edi,0x10
    5755:	ba 00 00 00 00       	mov    edx,0x0
    575a:	48 f7 f7             	div    rdi
    575d:	48 6b c0 10          	imul   rax,rax,0x10
    5761:	48 89 c2             	mov    rdx,rax
    5764:	48 81 e2 00 f0 ff ff 	and    rdx,0xfffffffffffff000
    576b:	48 89 e6             	mov    rsi,rsp
    576e:	48 29 d6             	sub    rsi,rdx
    5771:	48 89 f2             	mov    rdx,rsi
    5774:	48 39 d4             	cmp    rsp,rdx
    5777:	74 12                	je     578b <str_match_parser+0xd8>
    5779:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    5780:	48 83 8c 24 f8 0f 00 	or     QWORD PTR [rsp+0xff8],0x0
    5787:	00 00 
    5789:	eb e9                	jmp    5774 <str_match_parser+0xc1>
    578b:	48 89 c2             	mov    rdx,rax
    578e:	81 e2 ff 0f 00 00    	and    edx,0xfff
    5794:	48 29 d4             	sub    rsp,rdx
    5797:	48 89 c2             	mov    rdx,rax
    579a:	81 e2 ff 0f 00 00    	and    edx,0xfff
    57a0:	48 85 d2             	test   rdx,rdx
    57a3:	74 10                	je     57b5 <str_match_parser+0x102>
    57a5:	25 ff 0f 00 00       	and    eax,0xfff
    57aa:	48 83 e8 08          	sub    rax,0x8
    57ae:	48 01 e0             	add    rax,rsp
    57b1:	48 83 08 00          	or     QWORD PTR [rax],0x0
    57b5:	48 89 e0             	mov    rax,rsp
    57b8:	48 83 c0 00          	add    rax,0x0
    57bc:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    57c0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    57c4:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    57c7:	83 c0 01             	add    eax,0x1
    57ca:	01 c0                	add    eax,eax
    57cc:	48 63 d0             	movsxd rdx,eax
    57cf:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    57d3:	be 00 00 00 00       	mov    esi,0x0
    57d8:	48 89 c7             	mov    rdi,rax
    57db:	e8 20 ce ff ff       	call   2600 <memset@plt>
    57e0:	c7 45 d4 00 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x0
    57e7:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    57eb:	8b 80 4c 03 00 00    	mov    eax,DWORD PTR [rax+0x34c]
    57f1:	85 c0                	test   eax,eax
    57f3:	74 5f                	je     5854 <str_match_parser+0x1a1>
    57f5:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    57f9:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    57fc:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
    57ff:	eb 42                	jmp    5843 <str_match_parser+0x190>
    5801:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5805:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    5808:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
    580b:	48 98                	cdqe   
    580d:	48 01 d0             	add    rax,rdx
    5810:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5813:	0f b6 d0             	movzx  edx,al
    5816:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    5819:	8d 48 01             	lea    ecx,[rax+0x1]
    581c:	89 4d d4             	mov    DWORD PTR [rbp-0x2c],ecx
    581f:	01 c0                	add    eax,eax
    5821:	48 63 c8             	movsxd rcx,eax
    5824:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    5828:	48 01 c8             	add    rax,rcx
    582b:	48 8d 35 db 72 00 00 	lea    rsi,[rip+0x72db]        # cb0d <_IO_stdin_used+0xb0d>
    5832:	48 89 c7             	mov    rdi,rax
    5835:	b8 00 00 00 00       	mov    eax,0x0
    583a:	e8 f1 cf ff ff       	call   2830 <sprintf@plt>
    583f:	83 45 d0 01          	add    DWORD PTR [rbp-0x30],0x1
    5843:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5847:	8b 80 4c 03 00 00    	mov    eax,DWORD PTR [rax+0x34c]
    584d:	39 45 d0             	cmp    DWORD PTR [rbp-0x30],eax
    5850:	7c af                	jl     5801 <str_match_parser+0x14e>
    5852:	eb 5a                	jmp    58ae <str_match_parser+0x1fb>
    5854:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5858:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    585b:	89 45 cc             	mov    DWORD PTR [rbp-0x34],eax
    585e:	eb 42                	jmp    58a2 <str_match_parser+0x1ef>
    5860:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5864:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    5867:	8b 45 cc             	mov    eax,DWORD PTR [rbp-0x34]
    586a:	48 98                	cdqe   
    586c:	48 01 d0             	add    rax,rdx
    586f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5872:	0f b6 d0             	movzx  edx,al
    5875:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    5878:	8d 48 01             	lea    ecx,[rax+0x1]
    587b:	89 4d d4             	mov    DWORD PTR [rbp-0x2c],ecx
    587e:	01 c0                	add    eax,eax
    5880:	48 63 c8             	movsxd rcx,eax
    5883:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    5887:	48 01 c8             	add    rax,rcx
    588a:	48 8d 35 7c 72 00 00 	lea    rsi,[rip+0x727c]        # cb0d <_IO_stdin_used+0xb0d>
    5891:	48 89 c7             	mov    rdi,rax
    5894:	b8 00 00 00 00       	mov    eax,0x0
    5899:	e8 92 cf ff ff       	call   2830 <sprintf@plt>
    589e:	83 45 cc 01          	add    DWORD PTR [rbp-0x34],0x1
    58a2:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    58a6:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    58a9:	39 45 cc             	cmp    DWORD PTR [rbp-0x34],eax
    58ac:	7c b2                	jl     5860 <str_match_parser+0x1ad>
    58ae:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    58b2:	48 8d 50 40          	lea    rdx,[rax+0x40]
    58b6:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    58ba:	48 89 d6             	mov    rsi,rdx
    58bd:	48 89 c7             	mov    rdi,rax
    58c0:	e8 bb cf ff ff       	call   2880 <strstr@plt>
    58c5:	48 85 c0             	test   rax,rax
    58c8:	74 07                	je     58d1 <str_match_parser+0x21e>
    58ca:	b8 01 00 00 00       	mov    eax,0x1
    58cf:	eb 05                	jmp    58d6 <str_match_parser+0x223>
    58d1:	b8 00 00 00 00       	mov    eax,0x0
    58d6:	48 89 dc             	mov    rsp,rbx
    58d9:	48 8b 5d e8          	mov    rbx,QWORD PTR [rbp-0x18]
    58dd:	64 48 33 1c 25 28 00 	xor    rbx,QWORD PTR fs:0x28
    58e4:	00 00 
    58e6:	74 05                	je     58ed <str_match_parser+0x23a>
    58e8:	e8 93 cc ff ff       	call   2580 <__stack_chk_fail@plt>
    58ed:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    58f1:	c9                   	leave  
    58f2:	c3                   	ret    

00000000000058f3 <is_blocked_ipv4>:
    58f3:	f3 0f 1e fa          	endbr64 
    58f7:	55                   	push   rbp
    58f8:	48 89 e5             	mov    rbp,rsp
    58fb:	48 83 ec 20          	sub    rsp,0x20
    58ff:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    5903:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    590a:	eb 3b                	jmp    5947 <is_blocked_ipv4+0x54>
    590c:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    590f:	48 63 d0             	movsxd rdx,eax
    5912:	48 89 d0             	mov    rax,rdx
    5915:	48 c1 e0 03          	shl    rax,0x3
    5919:	48 01 d0             	add    rax,rdx
    591c:	48 01 c0             	add    rax,rax
    591f:	48 8d 15 9a 44 10 00 	lea    rdx,[rip+0x10449a]        # 109dc0 <blocked_ipv4_addrs>
    5926:	48 01 c2             	add    rdx,rax
    5929:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    592d:	48 89 d6             	mov    rsi,rdx
    5930:	48 89 c7             	mov    rdi,rax
    5933:	e8 48 cd ff ff       	call   2680 <strcmp@plt>
    5938:	85 c0                	test   eax,eax
    593a:	75 07                	jne    5943 <is_blocked_ipv4+0x50>
    593c:	b8 01 00 00 00       	mov    eax,0x1
    5941:	eb 14                	jmp    5957 <is_blocked_ipv4+0x64>
    5943:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    5947:	8b 05 c3 b6 00 00    	mov    eax,DWORD PTR [rip+0xb6c3]        # 11010 <blk_ipv4_len>
    594d:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    5950:	7e ba                	jle    590c <is_blocked_ipv4+0x19>
    5952:	b8 00 00 00 00       	mov    eax,0x0
    5957:	c9                   	leave  
    5958:	c3                   	ret    

0000000000005959 <none>:
    5959:	f3 0f 1e fa          	endbr64 
    595d:	55                   	push   rbp
    595e:	48 89 e5             	mov    rbp,rsp
    5961:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5965:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    5969:	b8 01 00 00 00       	mov    eax,0x1
    596e:	5d                   	pop    rbp
    596f:	c3                   	ret    

0000000000005970 <pcre_match>:
    5970:	f3 0f 1e fa          	endbr64 
    5974:	55                   	push   rbp
    5975:	48 89 e5             	mov    rbp,rsp
    5978:	48 83 ec 10          	sub    rsp,0x10
    597c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5980:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    5984:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5988:	48 8b 00             	mov    rax,QWORD PTR [rax]
    598b:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    598f:	48 8d ba d0 01 00 00 	lea    rdi,[rdx+0x1d0]
    5996:	41 b8 00 00 00 00    	mov    r8d,0x0
    599c:	b9 00 00 00 00       	mov    ecx,0x0
    59a1:	ba 00 00 00 00       	mov    edx,0x0
    59a6:	48 89 c6             	mov    rsi,rax
    59a9:	e8 82 cd ff ff       	call   2730 <regexec@plt>
    59ae:	83 f8 01             	cmp    eax,0x1
    59b1:	75 07                	jne    59ba <pcre_match+0x4a>
    59b3:	b8 00 00 00 00       	mov    eax,0x0
    59b8:	eb 05                	jmp    59bf <pcre_match+0x4f>
    59ba:	b8 01 00 00 00       	mov    eax,0x1
    59bf:	c9                   	leave  
    59c0:	c3                   	ret    

00000000000059c1 <rule_library_parser>:
    59c1:	f3 0f 1e fa          	endbr64 
    59c5:	55                   	push   rbp
    59c6:	48 89 e5             	mov    rbp,rsp
    59c9:	53                   	push   rbx
    59ca:	48 83 ec 48          	sub    rsp,0x48
    59ce:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    59d2:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    59d9:	00 00 
    59db:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    59df:	31 c0                	xor    eax,eax
    59e1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    59e5:	48 8d 35 2c 71 00 00 	lea    rsi,[rip+0x712c]        # cb18 <_IO_stdin_used+0xb18>
    59ec:	48 89 c7             	mov    rdi,rax
    59ef:	e8 7c cd ff ff       	call   2770 <fopen@plt>
    59f4:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    59f8:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    59fd:	75 22                	jne    5a21 <rule_library_parser+0x60>
    59ff:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5a03:	48 89 c6             	mov    rsi,rax
    5a06:	48 8d 3d 13 71 00 00 	lea    rdi,[rip+0x7113]        # cb20 <_IO_stdin_used+0xb20>
    5a0d:	b8 00 00 00 00       	mov    eax,0x0
    5a12:	e8 a9 cb ff ff       	call   25c0 <printf@plt>
    5a17:	bf 01 00 00 00       	mov    edi,0x1
    5a1c:	e8 1f ce ff ff       	call   2840 <exit@plt>
    5a21:	48 c7 45 c8 00 00 00 	mov    QWORD PTR [rbp-0x38],0x0
    5a28:	00 
    5a29:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    5a30:	00 
    5a31:	e9 72 05 00 00       	jmp    5fa8 <rule_library_parser+0x5e7>
    5a36:	48 8b 5d d0          	mov    rbx,QWORD PTR [rbp-0x30]
    5a3a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a3e:	48 8d 35 01 71 00 00 	lea    rsi,[rip+0x7101]        # cb46 <_IO_stdin_used+0xb46>
    5a45:	48 89 c7             	mov    rdi,rax
    5a48:	e8 f3 cb ff ff       	call   2640 <strcspn@plt>
    5a4d:	48 01 d8             	add    rax,rbx
    5a50:	c6 00 00             	mov    BYTE PTR [rax],0x0
    5a53:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a57:	48 89 c7             	mov    rdi,rax
    5a5a:	e8 bc 05 00 00       	call   601b <is_comment>
    5a5f:	84 c0                	test   al,al
    5a61:	74 05                	je     5a68 <rule_library_parser+0xa7>
    5a63:	e9 40 05 00 00       	jmp    5fa8 <rule_library_parser+0x5e7>
    5a68:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a6c:	ba 1a 00 00 00       	mov    edx,0x1a
    5a71:	48 8d 35 d0 70 00 00 	lea    rsi,[rip+0x70d0]        # cb48 <_IO_stdin_used+0xb48>
    5a78:	48 89 c7             	mov    rdi,rax
    5a7b:	e8 40 ca ff ff       	call   24c0 <strncmp@plt>
    5a80:	85 c0                	test   eax,eax
    5a82:	75 39                	jne    5abd <rule_library_parser+0xfc>
    5a84:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a88:	48 83 c0 1a          	add    rax,0x1a
    5a8c:	48 8d 35 d0 70 00 00 	lea    rsi,[rip+0x70d0]        # cb63 <_IO_stdin_used+0xb63>
    5a93:	48 89 c7             	mov    rdi,rax
    5a96:	e8 e5 cb ff ff       	call   2680 <strcmp@plt>
    5a9b:	85 c0                	test   eax,eax
    5a9d:	75 0f                	jne    5aae <rule_library_parser+0xed>
    5a9f:	c7 05 fb 42 10 00 01 	mov    DWORD PTR [rip+0x1042fb],0x1        # 109da4 <strict_icmp_timestamp_req>
    5aa6:	00 00 00 
    5aa9:	e9 e4 04 00 00       	jmp    5f92 <rule_library_parser+0x5d1>
    5aae:	c7 05 ec 42 10 00 00 	mov    DWORD PTR [rip+0x1042ec],0x0        # 109da4 <strict_icmp_timestamp_req>
    5ab5:	00 00 00 
    5ab8:	e9 d5 04 00 00       	jmp    5f92 <rule_library_parser+0x5d1>
    5abd:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ac1:	ba 1d 00 00 00       	mov    edx,0x1d
    5ac6:	48 8d 35 9a 70 00 00 	lea    rsi,[rip+0x709a]        # cb67 <_IO_stdin_used+0xb67>
    5acd:	48 89 c7             	mov    rdi,rax
    5ad0:	e8 eb c9 ff ff       	call   24c0 <strncmp@plt>
    5ad5:	85 c0                	test   eax,eax
    5ad7:	75 39                	jne    5b12 <rule_library_parser+0x151>
    5ad9:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5add:	48 83 c0 1d          	add    rax,0x1d
    5ae1:	48 8d 35 7b 70 00 00 	lea    rsi,[rip+0x707b]        # cb63 <_IO_stdin_used+0xb63>
    5ae8:	48 89 c7             	mov    rdi,rax
    5aeb:	e8 90 cb ff ff       	call   2680 <strcmp@plt>
    5af0:	85 c0                	test   eax,eax
    5af2:	75 0f                	jne    5b03 <rule_library_parser+0x142>
    5af4:	c7 05 ea 1d 10 00 01 	mov    DWORD PTR [rip+0x101dea],0x1        # 1078e8 <strict_nmap_host_alive_check>
    5afb:	00 00 00 
    5afe:	e9 8f 04 00 00       	jmp    5f92 <rule_library_parser+0x5d1>
    5b03:	c7 05 db 1d 10 00 00 	mov    DWORD PTR [rip+0x101ddb],0x0        # 1078e8 <strict_nmap_host_alive_check>
    5b0a:	00 00 00 
    5b0d:	e9 80 04 00 00       	jmp    5f92 <rule_library_parser+0x5d1>
    5b12:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b16:	ba 17 00 00 00       	mov    edx,0x17
    5b1b:	48 8d 35 63 70 00 00 	lea    rsi,[rip+0x7063]        # cb85 <_IO_stdin_used+0xb85>
    5b22:	48 89 c7             	mov    rdi,rax
    5b25:	e8 96 c9 ff ff       	call   24c0 <strncmp@plt>
    5b2a:	85 c0                	test   eax,eax
    5b2c:	75 43                	jne    5b71 <rule_library_parser+0x1b0>
    5b2e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b32:	48 89 c7             	mov    rdi,rax
    5b35:	e8 26 ca ff ff       	call   2560 <strlen@plt>
    5b3a:	48 83 f8 17          	cmp    rax,0x17
    5b3e:	77 16                	ja     5b56 <rule_library_parser+0x195>
    5b40:	48 8d 3d 56 70 00 00 	lea    rdi,[rip+0x7056]        # cb9d <_IO_stdin_used+0xb9d>
    5b47:	e8 b4 c9 ff ff       	call   2500 <puts@plt>
    5b4c:	bf 01 00 00 00       	mov    edi,0x1
    5b51:	e8 ea cc ff ff       	call   2840 <exit@plt>
    5b56:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b5a:	48 83 c0 17          	add    rax,0x17
    5b5e:	48 89 c7             	mov    rdi,rax
    5b61:	e8 7a cc ff ff       	call   27e0 <atoi@plt>
    5b66:	89 05 34 1d 10 00    	mov    DWORD PTR [rip+0x101d34],eax        # 1078a0 <clean_delay_pkts>
    5b6c:	e9 21 04 00 00       	jmp    5f92 <rule_library_parser+0x5d1>
    5b71:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b75:	ba 18 00 00 00       	mov    edx,0x18
    5b7a:	48 8d 35 36 70 00 00 	lea    rsi,[rip+0x7036]        # cbb7 <_IO_stdin_used+0xbb7>
    5b81:	48 89 c7             	mov    rdi,rax
    5b84:	e8 37 c9 ff ff       	call   24c0 <strncmp@plt>
    5b89:	85 c0                	test   eax,eax
    5b8b:	75 46                	jne    5bd3 <rule_library_parser+0x212>
    5b8d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b91:	48 89 c7             	mov    rdi,rax
    5b94:	e8 c7 c9 ff ff       	call   2560 <strlen@plt>
    5b99:	48 83 f8 18          	cmp    rax,0x18
    5b9d:	75 16                	jne    5bb5 <rule_library_parser+0x1f4>
    5b9f:	48 8d 3d f7 6f 00 00 	lea    rdi,[rip+0x6ff7]        # cb9d <_IO_stdin_used+0xb9d>
    5ba6:	e8 55 c9 ff ff       	call   2500 <puts@plt>
    5bab:	bf 01 00 00 00       	mov    edi,0x1
    5bb0:	e8 8b cc ff ff       	call   2840 <exit@plt>
    5bb5:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5bb9:	48 83 c0 18          	add    rax,0x18
    5bbd:	48 89 c7             	mov    rdi,rax
    5bc0:	e8 1b cc ff ff       	call   27e0 <atoi@plt>
    5bc5:	48 98                	cdqe   
    5bc7:	48 89 05 5a 1d 10 00 	mov    QWORD PTR [rip+0x101d5a],rax        # 107928 <clean_delay>
    5bce:	e9 bf 03 00 00       	jmp    5f92 <rule_library_parser+0x5d1>
    5bd3:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5bd7:	ba 0b 00 00 00       	mov    edx,0xb
    5bdc:	48 8d 35 ed 6f 00 00 	lea    rsi,[rip+0x6fed]        # cbd0 <_IO_stdin_used+0xbd0>
    5be3:	48 89 c7             	mov    rdi,rax
    5be6:	e8 d5 c8 ff ff       	call   24c0 <strncmp@plt>
    5beb:	85 c0                	test   eax,eax
    5bed:	75 33                	jne    5c22 <rule_library_parser+0x261>
    5bef:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5bf3:	48 83 c0 0b          	add    rax,0xb
    5bf7:	48 8d 35 65 6f 00 00 	lea    rsi,[rip+0x6f65]        # cb63 <_IO_stdin_used+0xb63>
    5bfe:	48 89 c7             	mov    rdi,rax
    5c01:	e8 7a ca ff ff       	call   2680 <strcmp@plt>
    5c06:	85 c0                	test   eax,eax
    5c08:	75 0c                	jne    5c16 <rule_library_parser+0x255>
    5c0a:	c6 05 0f 1d 10 00 01 	mov    BYTE PTR [rip+0x101d0f],0x1        # 107920 <use_sqlite>
    5c11:	e9 7c 03 00 00       	jmp    5f92 <rule_library_parser+0x5d1>
    5c16:	c6 05 03 1d 10 00 00 	mov    BYTE PTR [rip+0x101d03],0x0        # 107920 <use_sqlite>
    5c1d:	e9 70 03 00 00       	jmp    5f92 <rule_library_parser+0x5d1>
    5c22:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c26:	ba 15 00 00 00       	mov    edx,0x15
    5c2b:	48 8d 35 aa 6f 00 00 	lea    rsi,[rip+0x6faa]        # cbdc <_IO_stdin_used+0xbdc>
    5c32:	48 89 c7             	mov    rdi,rax
    5c35:	e8 86 c8 ff ff       	call   24c0 <strncmp@plt>
    5c3a:	85 c0                	test   eax,eax
    5c3c:	75 34                	jne    5c72 <rule_library_parser+0x2b1>
    5c3e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c42:	48 83 c0 15          	add    rax,0x15
    5c46:	48 89 c6             	mov    rsi,rax
    5c49:	48 8d 3d b0 1c 10 00 	lea    rdi,[rip+0x101cb0]        # 107900 <sqlite_db_path>
    5c50:	e8 7b c8 ff ff       	call   24d0 <strcpy@plt>
    5c55:	48 8d 35 a4 1c 10 00 	lea    rsi,[rip+0x101ca4]        # 107900 <sqlite_db_path>
    5c5c:	48 8d 3d 8f 6f 00 00 	lea    rdi,[rip+0x6f8f]        # cbf2 <_IO_stdin_used+0xbf2>
    5c63:	b8 00 00 00 00       	mov    eax,0x0
    5c68:	e8 fc 2c 00 00       	call   8969 <livedebug>
    5c6d:	e9 20 03 00 00       	jmp    5f92 <rule_library_parser+0x5d1>
    5c72:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c76:	ba 0b 00 00 00       	mov    edx,0xb
    5c7b:	48 8d 35 89 6f 00 00 	lea    rsi,[rip+0x6f89]        # cc0b <_IO_stdin_used+0xc0b>
    5c82:	48 89 c7             	mov    rdi,rax
    5c85:	e8 36 c8 ff ff       	call   24c0 <strncmp@plt>
    5c8a:	85 c0                	test   eax,eax
    5c8c:	75 34                	jne    5cc2 <rule_library_parser+0x301>
    5c8e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c92:	48 83 c0 0b          	add    rax,0xb
    5c96:	48 89 c6             	mov    rsi,rax
    5c99:	48 8d 3d e8 40 10 00 	lea    rdi,[rip+0x1040e8]        # 109d88 <input_adapter>
    5ca0:	e8 2b c8 ff ff       	call   24d0 <strcpy@plt>
    5ca5:	48 8d 35 dc 40 10 00 	lea    rsi,[rip+0x1040dc]        # 109d88 <input_adapter>
    5cac:	48 8d 3d 65 6f 00 00 	lea    rdi,[rip+0x6f65]        # cc18 <_IO_stdin_used+0xc18>
    5cb3:	b8 00 00 00 00       	mov    eax,0x0
    5cb8:	e8 ac 2c 00 00       	call   8969 <livedebug>
    5cbd:	e9 d0 02 00 00       	jmp    5f92 <rule_library_parser+0x5d1>
    5cc2:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5cc6:	ba 0c 00 00 00       	mov    edx,0xc
    5ccb:	48 8d 35 79 6f 00 00 	lea    rsi,[rip+0x6f79]        # cc4b <_IO_stdin_used+0xc4b>
    5cd2:	48 89 c7             	mov    rdi,rax
    5cd5:	e8 e6 c7 ff ff       	call   24c0 <strncmp@plt>
    5cda:	85 c0                	test   eax,eax
    5cdc:	75 34                	jne    5d12 <rule_library_parser+0x351>
    5cde:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ce2:	48 83 c0 0c          	add    rax,0xc
    5ce6:	48 89 c6             	mov    rsi,rax
    5ce9:	48 8d 3d a8 40 10 00 	lea    rdi,[rip+0x1040a8]        # 109d98 <output_adapter>
    5cf0:	e8 db c7 ff ff       	call   24d0 <strcpy@plt>
    5cf5:	48 8d 35 9c 40 10 00 	lea    rsi,[rip+0x10409c]        # 109d98 <output_adapter>
    5cfc:	48 8d 3d 55 6f 00 00 	lea    rdi,[rip+0x6f55]        # cc58 <_IO_stdin_used+0xc58>
    5d03:	b8 00 00 00 00       	mov    eax,0x0
    5d08:	e8 5c 2c 00 00       	call   8969 <livedebug>
    5d0d:	e9 80 02 00 00       	jmp    5f92 <rule_library_parser+0x5d1>
    5d12:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d16:	ba 05 00 00 00       	mov    edx,0x5
    5d1b:	48 8d 35 6a 6f 00 00 	lea    rsi,[rip+0x6f6a]        # cc8c <_IO_stdin_used+0xc8c>
    5d22:	48 89 c7             	mov    rdi,rax
    5d25:	e8 96 c7 ff ff       	call   24c0 <strncmp@plt>
    5d2a:	85 c0                	test   eax,eax
    5d2c:	0f 85 83 00 00 00    	jne    5db5 <rule_library_parser+0x3f4>
    5d32:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d36:	48 83 c0 05          	add    rax,0x5
    5d3a:	48 89 c6             	mov    rsi,rax
    5d3d:	48 8d 3d 4e 6f 00 00 	lea    rdi,[rip+0x6f4e]        # cc92 <_IO_stdin_used+0xc92>
    5d44:	b8 00 00 00 00       	mov    eax,0x0
    5d49:	e8 1b 2c 00 00       	call   8969 <livedebug>
    5d4e:	48 8d 3d 46 6f 00 00 	lea    rdi,[rip+0x6f46]        # cc9b <_IO_stdin_used+0xc9b>
    5d55:	b8 00 00 00 00       	mov    eax,0x0
    5d5a:	e8 61 c8 ff ff       	call   25c0 <printf@plt>
    5d5f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d63:	48 83 c0 05          	add    rax,0x5
    5d67:	0f b6 10             	movzx  edx,BYTE PTR [rax]
    5d6a:	0f b6 05 36 6f 00 00 	movzx  eax,BYTE PTR [rip+0x6f36]        # cca7 <_IO_stdin_used+0xca7>
    5d71:	0f b6 d2             	movzx  edx,dl
    5d74:	0f b6 c0             	movzx  eax,al
    5d77:	29 c2                	sub    edx,eax
    5d79:	89 d0                	mov    eax,edx
    5d7b:	85 c0                	test   eax,eax
    5d7d:	75 1b                	jne    5d9a <rule_library_parser+0x3d9>
    5d7f:	c7 05 9b b2 00 00 02 	mov    DWORD PTR [rip+0xb29b],0x2        # 11024 <VIGIL_MODE>
    5d86:	00 00 00 
    5d89:	48 8d 3d 19 6f 00 00 	lea    rdi,[rip+0x6f19]        # cca9 <_IO_stdin_used+0xca9>
    5d90:	e8 6b c7 ff ff       	call   2500 <puts@plt>
    5d95:	e9 f8 01 00 00       	jmp    5f92 <rule_library_parser+0x5d1>
    5d9a:	c7 05 80 b2 00 00 01 	mov    DWORD PTR [rip+0xb280],0x1        # 11024 <VIGIL_MODE>
    5da1:	00 00 00 
    5da4:	48 8d 3d 15 6f 00 00 	lea    rdi,[rip+0x6f15]        # ccc0 <_IO_stdin_used+0xcc0>
    5dab:	e8 50 c7 ff ff       	call   2500 <puts@plt>
    5db0:	e9 dd 01 00 00       	jmp    5f92 <rule_library_parser+0x5d1>
    5db5:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5db9:	ba 08 00 00 00       	mov    edx,0x8
    5dbe:	48 8d 35 12 6f 00 00 	lea    rsi,[rip+0x6f12]        # ccd7 <_IO_stdin_used+0xcd7>
    5dc5:	48 89 c7             	mov    rdi,rax
    5dc8:	e8 f3 c6 ff ff       	call   24c0 <strncmp@plt>
    5dcd:	85 c0                	test   eax,eax
    5dcf:	75 34                	jne    5e05 <rule_library_parser+0x444>
    5dd1:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5dd5:	48 83 c0 08          	add    rax,0x8
    5dd9:	48 89 c6             	mov    rsi,rax
    5ddc:	48 8d 3d ed 1a 10 00 	lea    rdi,[rip+0x101aed]        # 1078d0 <local_ip>
    5de3:	e8 e8 c6 ff ff       	call   24d0 <strcpy@plt>
    5de8:	48 8d 35 e1 1a 10 00 	lea    rsi,[rip+0x101ae1]        # 1078d0 <local_ip>
    5def:	48 8d 3d ea 6e 00 00 	lea    rdi,[rip+0x6eea]        # cce0 <_IO_stdin_used+0xce0>
    5df6:	b8 00 00 00 00       	mov    eax,0x0
    5dfb:	e8 69 2b 00 00       	call   8969 <livedebug>
    5e00:	e9 8d 01 00 00       	jmp    5f92 <rule_library_parser+0x5d1>
    5e05:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e09:	ba 06 00 00 00       	mov    edx,0x6
    5e0e:	48 8d 35 e6 6e 00 00 	lea    rsi,[rip+0x6ee6]        # ccfb <_IO_stdin_used+0xcfb>
    5e15:	48 89 c7             	mov    rdi,rax
    5e18:	e8 a3 c6 ff ff       	call   24c0 <strncmp@plt>
    5e1d:	85 c0                	test   eax,eax
    5e1f:	75 1c                	jne    5e3d <rule_library_parser+0x47c>
    5e21:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e25:	48 83 c0 06          	add    rax,0x6
    5e29:	48 89 c6             	mov    rsi,rax
    5e2c:	48 8d 3d 1d 1d 10 00 	lea    rdi,[rip+0x101d1d]        # 107b50 <def_gw>
    5e33:	e8 98 c6 ff ff       	call   24d0 <strcpy@plt>
    5e38:	e9 55 01 00 00       	jmp    5f92 <rule_library_parser+0x5d1>
    5e3d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e41:	ba 08 00 00 00       	mov    edx,0x8
    5e46:	48 8d 35 b5 6e 00 00 	lea    rsi,[rip+0x6eb5]        # cd02 <_IO_stdin_used+0xd02>
    5e4d:	48 89 c7             	mov    rdi,rax
    5e50:	e8 6b c6 ff ff       	call   24c0 <strncmp@plt>
    5e55:	85 c0                	test   eax,eax
    5e57:	75 3f                	jne    5e98 <rule_library_parser+0x4d7>
    5e59:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e5d:	48 83 c0 08          	add    rax,0x8
    5e61:	48 8d 35 fb 6c 00 00 	lea    rsi,[rip+0x6cfb]        # cb63 <_IO_stdin_used+0xb63>
    5e68:	48 89 c7             	mov    rdi,rax
    5e6b:	e8 10 c8 ff ff       	call   2680 <strcmp@plt>
    5e70:	85 c0                	test   eax,eax
    5e72:	75 18                	jne    5e8c <rule_library_parser+0x4cb>
    5e74:	c6 05 b6 1a 10 00 01 	mov    BYTE PTR [rip+0x101ab6],0x1        # 107931 <use_spi>
    5e7b:	48 8d 3d 89 6e 00 00 	lea    rdi,[rip+0x6e89]        # cd0b <_IO_stdin_used+0xd0b>
    5e82:	e8 79 c6 ff ff       	call   2500 <puts@plt>
    5e87:	e9 06 01 00 00       	jmp    5f92 <rule_library_parser+0x5d1>
    5e8c:	c6 05 9e 1a 10 00 00 	mov    BYTE PTR [rip+0x101a9e],0x0        # 107931 <use_spi>
    5e93:	e9 fa 00 00 00       	jmp    5f92 <rule_library_parser+0x5d1>
    5e98:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e9c:	ba 09 00 00 00       	mov    edx,0x9
    5ea1:	48 8d 35 7c 6e 00 00 	lea    rsi,[rip+0x6e7c]        # cd24 <_IO_stdin_used+0xd24>
    5ea8:	48 89 c7             	mov    rdi,rax
    5eab:	e8 10 c6 ff ff       	call   24c0 <strncmp@plt>
    5eb0:	85 c0                	test   eax,eax
    5eb2:	75 27                	jne    5edb <rule_library_parser+0x51a>
    5eb4:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5eb8:	48 89 c7             	mov    rdi,rax
    5ebb:	e8 84 01 00 00       	call   6044 <rstrip>
    5ec0:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ec4:	48 83 c0 09          	add    rax,0x9
    5ec8:	48 89 c7             	mov    rdi,rax
    5ecb:	e8 87 50 00 00       	call   af57 <homenet_toi>
    5ed0:	89 05 0e 1a 10 00    	mov    DWORD PTR [rip+0x101a0e],eax        # 1078e4 <homenet>
    5ed6:	e9 b7 00 00 00       	jmp    5f92 <rule_library_parser+0x5d1>
    5edb:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5edf:	ba 0e 00 00 00       	mov    edx,0xe
    5ee4:	48 8d 35 43 6e 00 00 	lea    rsi,[rip+0x6e43]        # cd2e <_IO_stdin_used+0xd2e>
    5eeb:	48 89 c7             	mov    rdi,rax
    5eee:	e8 cd c5 ff ff       	call   24c0 <strncmp@plt>
    5ef3:	85 c0                	test   eax,eax
    5ef5:	75 24                	jne    5f1b <rule_library_parser+0x55a>
    5ef7:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5efb:	48 89 c7             	mov    rdi,rax
    5efe:	e8 41 01 00 00       	call   6044 <rstrip>
    5f03:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f07:	48 83 c0 0e          	add    rax,0xe
    5f0b:	48 89 c7             	mov    rdi,rax
    5f0e:	e8 44 50 00 00       	call   af57 <homenet_toi>
    5f13:	89 05 67 3e 10 00    	mov    DWORD PTR [rip+0x103e67],eax        # 109d80 <homenetmask>
    5f19:	eb 77                	jmp    5f92 <rule_library_parser+0x5d1>
    5f1b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f1f:	ba 09 00 00 00       	mov    edx,0x9
    5f24:	48 8d 35 12 6e 00 00 	lea    rsi,[rip+0x6e12]        # cd3d <_IO_stdin_used+0xd3d>
    5f2b:	48 89 c7             	mov    rdi,rax
    5f2e:	e8 8d c5 ff ff       	call   24c0 <strncmp@plt>
    5f33:	85 c0                	test   eax,eax
    5f35:	75 3f                	jne    5f76 <rule_library_parser+0x5b5>
    5f37:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f3b:	48 89 c7             	mov    rdi,rax
    5f3e:	e8 01 01 00 00       	call   6044 <rstrip>
    5f43:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f47:	48 83 c0 09          	add    rax,0x9
    5f4b:	48 8d 35 f5 6d 00 00 	lea    rsi,[rip+0x6df5]        # cd47 <_IO_stdin_used+0xd47>
    5f52:	48 89 c7             	mov    rdi,rax
    5f55:	e8 26 c7 ff ff       	call   2680 <strcmp@plt>
    5f5a:	85 c0                	test   eax,eax
    5f5c:	75 0c                	jne    5f6a <rule_library_parser+0x5a9>
    5f5e:	c7 05 58 19 10 00 04 	mov    DWORD PTR [rip+0x101958],0x4        # 1078c0 <vigil_location>
    5f65:	00 00 00 
    5f68:	eb 28                	jmp    5f92 <rule_library_parser+0x5d1>
    5f6a:	c7 05 4c 19 10 00 03 	mov    DWORD PTR [rip+0x10194c],0x3        # 1078c0 <vigil_location>
    5f71:	00 00 00 
    5f74:	eb 1c                	jmp    5f92 <rule_library_parser+0x5d1>
    5f76:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f7a:	48 89 c7             	mov    rdi,rax
    5f7d:	e8 7f 00 00 00       	call   6001 <is_rule>
    5f82:	84 c0                	test   al,al
    5f84:	74 0c                	je     5f92 <rule_library_parser+0x5d1>
    5f86:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f8a:	48 89 c7             	mov    rdi,rax
    5f8d:	e8 19 01 00 00       	call   60ab <rule_parser>
    5f92:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f96:	ba 08 00 00 00       	mov    edx,0x8
    5f9b:	be 00 00 00 00       	mov    esi,0x0
    5fa0:	48 89 c7             	mov    rdi,rax
    5fa3:	e8 58 c6 ff ff       	call   2600 <memset@plt>
    5fa8:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    5fac:	48 8d 4d c8          	lea    rcx,[rbp-0x38]
    5fb0:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    5fb4:	48 89 ce             	mov    rsi,rcx
    5fb7:	48 89 c7             	mov    rdi,rax
    5fba:	e8 31 c8 ff ff       	call   27f0 <getline@plt>
    5fbf:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    5fc3:	48 83 7d e0 ff       	cmp    QWORD PTR [rbp-0x20],0xffffffffffffffff
    5fc8:	0f 85 68 fa ff ff    	jne    5a36 <rule_library_parser+0x75>
    5fce:	8b 05 50 b0 00 00    	mov    eax,DWORD PTR [rip+0xb050]        # 11024 <VIGIL_MODE>
    5fd4:	3d ff ff 00 00       	cmp    eax,0xffff
    5fd9:	75 0a                	jne    5fe5 <rule_library_parser+0x624>
    5fdb:	c7 05 3f b0 00 00 01 	mov    DWORD PTR [rip+0xb03f],0x1        # 11024 <VIGIL_MODE>
    5fe2:	00 00 00 
    5fe5:	90                   	nop
    5fe6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5fea:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    5ff1:	00 00 
    5ff3:	74 05                	je     5ffa <rule_library_parser+0x639>
    5ff5:	e8 86 c5 ff ff       	call   2580 <__stack_chk_fail@plt>
    5ffa:	48 83 c4 48          	add    rsp,0x48
    5ffe:	5b                   	pop    rbx
    5fff:	5d                   	pop    rbp
    6000:	c3                   	ret    

0000000000006001 <is_rule>:
    6001:	f3 0f 1e fa          	endbr64 
    6005:	55                   	push   rbp
    6006:	48 89 e5             	mov    rbp,rsp
    6009:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    600d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6011:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    6014:	3c 24                	cmp    al,0x24
    6016:	0f 94 c0             	sete   al
    6019:	5d                   	pop    rbp
    601a:	c3                   	ret    

000000000000601b <is_comment>:
    601b:	f3 0f 1e fa          	endbr64 
    601f:	55                   	push   rbp
    6020:	48 89 e5             	mov    rbp,rsp
    6023:	48 83 ec 10          	sub    rsp,0x10
    6027:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    602b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    602f:	be 23 00 00 00       	mov    esi,0x23
    6034:	48 89 c7             	mov    rdi,rax
    6037:	e8 74 c5 ff ff       	call   25b0 <strchr@plt>
    603c:	48 85 c0             	test   rax,rax
    603f:	0f 95 c0             	setne  al
    6042:	c9                   	leave  
    6043:	c3                   	ret    

0000000000006044 <rstrip>:
    6044:	f3 0f 1e fa          	endbr64 
    6048:	55                   	push   rbp
    6049:	48 89 e5             	mov    rbp,rsp
    604c:	48 83 ec 10          	sub    rsp,0x10
    6050:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6054:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6058:	48 8d 35 e7 6a 00 00 	lea    rsi,[rip+0x6ae7]        # cb46 <_IO_stdin_used+0xb46>
    605f:	48 89 c7             	mov    rdi,rax
    6062:	e8 d9 c5 ff ff       	call   2640 <strcspn@plt>
    6067:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    606b:	48 01 d0             	add    rax,rdx
    606e:	c6 00 00             	mov    BYTE PTR [rax],0x0
    6071:	90                   	nop
    6072:	c9                   	leave  
    6073:	c3                   	ret    

0000000000006074 <syntax_error>:
    6074:	f3 0f 1e fa          	endbr64 
    6078:	55                   	push   rbp
    6079:	48 89 e5             	mov    rbp,rsp
    607c:	48 83 ec 10          	sub    rsp,0x10
    6080:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6084:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
    6087:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    608b:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    608e:	89 c6                	mov    esi,eax
    6090:	48 8d 3d b9 6c 00 00 	lea    rdi,[rip+0x6cb9]        # cd50 <_IO_stdin_used+0xd50>
    6097:	b8 00 00 00 00       	mov    eax,0x0
    609c:	e8 1f c5 ff ff       	call   25c0 <printf@plt>
    60a1:	bf 01 00 00 00       	mov    edi,0x1
    60a6:	e8 95 c7 ff ff       	call   2840 <exit@plt>

00000000000060ab <rule_parser>:
    60ab:	f3 0f 1e fa          	endbr64 
    60af:	55                   	push   rbp
    60b0:	48 89 e5             	mov    rbp,rsp
    60b3:	48 83 ec 40          	sub    rsp,0x40
    60b7:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    60bb:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    60c2:	00 00 
    60c4:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    60c8:	31 c0                	xor    eax,eax
    60ca:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    60ce:	48 83 c0 01          	add    rax,0x1
    60d2:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    60d6:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    60da:	48 8d 35 37 6a 00 00 	lea    rsi,[rip+0x6a37]        # cb18 <_IO_stdin_used+0xb18>
    60e1:	48 89 c7             	mov    rdi,rax
    60e4:	e8 87 c6 ff ff       	call   2770 <fopen@plt>
    60e9:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    60ed:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
    60f2:	75 22                	jne    6116 <rule_parser+0x6b>
    60f4:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    60f8:	48 89 c6             	mov    rsi,rax
    60fb:	48 8d 3d 6e 6c 00 00 	lea    rdi,[rip+0x6c6e]        # cd70 <_IO_stdin_used+0xd70>
    6102:	b8 00 00 00 00       	mov    eax,0x0
    6107:	e8 b4 c4 ff ff       	call   25c0 <printf@plt>
    610c:	bf 01 00 00 00       	mov    edi,0x1
    6111:	e8 2a c7 ff ff       	call   2840 <exit@plt>
    6116:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    611a:	48 89 c6             	mov    rsi,rax
    611d:	48 8d 3d 7f 6c 00 00 	lea    rdi,[rip+0x6c7f]        # cda3 <_IO_stdin_used+0xda3>
    6124:	b8 00 00 00 00       	mov    eax,0x0
    6129:	e8 92 c4 ff ff       	call   25c0 <printf@plt>
    612e:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    6135:	00 
    6136:	48 c7 45 d8 00 00 00 	mov    QWORD PTR [rbp-0x28],0x0
    613d:	00 
    613e:	eb 54                	jmp    6194 <rule_parser+0xe9>
    6140:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    6144:	48 89 c7             	mov    rdi,rax
    6147:	e8 cf fe ff ff       	call   601b <is_comment>
    614c:	84 c0                	test   al,al
    614e:	74 02                	je     6152 <rule_parser+0xa7>
    6150:	eb 42                	jmp    6194 <rule_parser+0xe9>
    6152:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    6156:	48 89 c7             	mov    rdi,rax
    6159:	e8 e6 fe ff ff       	call   6044 <rstrip>
    615e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    6162:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    6165:	0f b6 c0             	movzx  eax,al
    6168:	f7 d8                	neg    eax
    616a:	85 c0                	test   eax,eax
    616c:	75 02                	jne    6170 <rule_parser+0xc5>
    616e:	eb 24                	jmp    6194 <rule_parser+0xe9>
    6170:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    6174:	48 8d 35 39 6c 00 00 	lea    rsi,[rip+0x6c39]        # cdb4 <_IO_stdin_used+0xdb4>
    617b:	48 89 c7             	mov    rdi,rax
    617e:	e8 fd c6 ff ff       	call   2880 <strstr@plt>
    6183:	48 85 c0             	test   rax,rax
    6186:	74 0c                	je     6194 <rule_parser+0xe9>
    6188:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    618c:	48 89 c7             	mov    rdi,rax
    618f:	e8 1f 39 00 00       	call   9ab3 <line_parser>
    6194:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6198:	48 8d 4d d0          	lea    rcx,[rbp-0x30]
    619c:	48 8d 45 d8          	lea    rax,[rbp-0x28]
    61a0:	48 89 ce             	mov    rsi,rcx
    61a3:	48 89 c7             	mov    rdi,rax
    61a6:	e8 45 c6 ff ff       	call   27f0 <getline@plt>
    61ab:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    61af:	48 83 7d f0 ff       	cmp    QWORD PTR [rbp-0x10],0xffffffffffffffff
    61b4:	75 8a                	jne    6140 <rule_parser+0x95>
    61b6:	0f b6 05 e5 3b 10 00 	movzx  eax,BYTE PTR [rip+0x103be5]        # 109da2 <debug_mode>
    61bd:	84 c0                	test   al,al
    61bf:	74 18                	je     61d9 <rule_parser+0x12e>
    61c1:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    61c5:	48 89 c6             	mov    rsi,rax
    61c8:	48 8d 3d eb 6b 00 00 	lea    rdi,[rip+0x6beb]        # cdba <_IO_stdin_used+0xdba>
    61cf:	b8 00 00 00 00       	mov    eax,0x0
    61d4:	e8 e7 c3 ff ff       	call   25c0 <printf@plt>
    61d9:	90                   	nop
    61da:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    61de:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    61e5:	00 00 
    61e7:	74 05                	je     61ee <rule_parser+0x143>
    61e9:	e8 92 c3 ff ff       	call   2580 <__stack_chk_fail@plt>
    61ee:	c9                   	leave  
    61ef:	c3                   	ret    

00000000000061f0 <deny_conf_parser>:
    61f0:	f3 0f 1e fa          	endbr64 
    61f4:	55                   	push   rbp
    61f5:	48 89 e5             	mov    rbp,rsp
    61f8:	48 83 ec 50          	sub    rsp,0x50
    61fc:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    6200:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6207:	00 00 
    6209:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    620d:	31 c0                	xor    eax,eax
    620f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    6213:	48 8d 35 fe 68 00 00 	lea    rsi,[rip+0x68fe]        # cb18 <_IO_stdin_used+0xb18>
    621a:	48 89 c7             	mov    rdi,rax
    621d:	e8 4e c5 ff ff       	call   2770 <fopen@plt>
    6222:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    6226:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    622b:	75 22                	jne    624f <deny_conf_parser+0x5f>
    622d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    6231:	48 89 c6             	mov    rsi,rax
    6234:	48 8d 3d 95 6b 00 00 	lea    rdi,[rip+0x6b95]        # cdd0 <_IO_stdin_used+0xdd0>
    623b:	b8 00 00 00 00       	mov    eax,0x0
    6240:	e8 7b c3 ff ff       	call   25c0 <printf@plt>
    6245:	bf 01 00 00 00       	mov    edi,0x1
    624a:	e8 f1 c5 ff ff       	call   2840 <exit@plt>
    624f:	48 c7 45 c8 00 00 00 	mov    QWORD PTR [rbp-0x38],0x0
    6256:	00 
    6257:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    625e:	00 
    625f:	e9 9a 00 00 00       	jmp    62fe <deny_conf_parser+0x10e>
    6264:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6268:	48 89 c7             	mov    rdi,rax
    626b:	e8 d4 fd ff ff       	call   6044 <rstrip>
    6270:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6274:	48 89 c7             	mov    rdi,rax
    6277:	e8 9f fd ff ff       	call   601b <is_comment>
    627c:	84 c0                	test   al,al
    627e:	74 02                	je     6282 <deny_conf_parser+0x92>
    6280:	eb 7c                	jmp    62fe <deny_conf_parser+0x10e>
    6282:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6286:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    6289:	0f b6 c0             	movzx  eax,al
    628c:	f7 d8                	neg    eax
    628e:	85 c0                	test   eax,eax
    6290:	75 02                	jne    6294 <deny_conf_parser+0xa4>
    6292:	eb 6a                	jmp    62fe <deny_conf_parser+0x10e>
    6294:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6298:	48 8d 35 62 6b 00 00 	lea    rsi,[rip+0x6b62]        # ce01 <_IO_stdin_used+0xe01>
    629f:	48 89 c7             	mov    rdi,rax
    62a2:	e8 d9 c5 ff ff       	call   2880 <strstr@plt>
    62a7:	48 85 c0             	test   rax,rax
    62aa:	74 52                	je     62fe <deny_conf_parser+0x10e>
    62ac:	8b 05 5e ad 00 00    	mov    eax,DWORD PTR [rip+0xad5e]        # 11010 <blk_ipv4_len>
    62b2:	83 c0 01             	add    eax,0x1
    62b5:	89 05 55 ad 00 00    	mov    DWORD PTR [rip+0xad55],eax        # 11010 <blk_ipv4_len>
    62bb:	8b 05 4f ad 00 00    	mov    eax,DWORD PTR [rip+0xad4f]        # 11010 <blk_ipv4_len>
    62c1:	48 63 d0             	movsxd rdx,eax
    62c4:	48 89 d0             	mov    rax,rdx
    62c7:	48 c1 e0 03          	shl    rax,0x3
    62cb:	48 01 d0             	add    rax,rdx
    62ce:	48 01 c0             	add    rax,rax
    62d1:	48 8d 15 e8 3a 10 00 	lea    rdx,[rip+0x103ae8]        # 109dc0 <blocked_ipv4_addrs>
    62d8:	48 01 d0             	add    rax,rdx
    62db:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    62df:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    62e3:	48 83 c0 05          	add    rax,0x5
    62e7:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    62eb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    62ef:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    62f3:	48 89 d6             	mov    rsi,rdx
    62f6:	48 89 c7             	mov    rdi,rax
    62f9:	e8 d2 c1 ff ff       	call   24d0 <strcpy@plt>
    62fe:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    6302:	48 8d 4d d0          	lea    rcx,[rbp-0x30]
    6306:	48 8d 45 c8          	lea    rax,[rbp-0x38]
    630a:	48 89 ce             	mov    rsi,rcx
    630d:	48 89 c7             	mov    rdi,rax
    6310:	e8 db c4 ff ff       	call   27f0 <getline@plt>
    6315:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    6319:	48 83 7d e0 ff       	cmp    QWORD PTR [rbp-0x20],0xffffffffffffffff
    631e:	0f 85 40 ff ff ff    	jne    6264 <deny_conf_parser+0x74>
    6324:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6328:	48 85 c0             	test   rax,rax
    632b:	74 0c                	je     6339 <deny_conf_parser+0x149>
    632d:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6331:	48 89 c7             	mov    rdi,rax
    6334:	e8 37 c1 ff ff       	call   2470 <free@plt>
    6339:	90                   	nop
    633a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    633e:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    6345:	00 00 
    6347:	74 05                	je     634e <deny_conf_parser+0x15e>
    6349:	e8 32 c2 ff ff       	call   2580 <__stack_chk_fail@plt>
    634e:	c9                   	leave  
    634f:	c3                   	ret    

0000000000006350 <host_mon_parser>:
    6350:	f3 0f 1e fa          	endbr64 
    6354:	55                   	push   rbp
    6355:	48 89 e5             	mov    rbp,rsp
    6358:	48 83 ec 10          	sub    rsp,0x10
    635c:	48 8b 05 d5 ac 00 00 	mov    rax,QWORD PTR [rip+0xacd5]        # 11038 <default_host_conf>
    6363:	48 8d 35 ae 67 00 00 	lea    rsi,[rip+0x67ae]        # cb18 <_IO_stdin_used+0xb18>
    636a:	48 89 c7             	mov    rdi,rax
    636d:	e8 fe c3 ff ff       	call   2770 <fopen@plt>
    6372:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    6376:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    637b:	75 25                	jne    63a2 <host_mon_parser+0x52>
    637d:	48 8b 05 b4 ac 00 00 	mov    rax,QWORD PTR [rip+0xacb4]        # 11038 <default_host_conf>
    6384:	48 89 c6             	mov    rsi,rax
    6387:	48 8d 3d 78 6a 00 00 	lea    rdi,[rip+0x6a78]        # ce06 <_IO_stdin_used+0xe06>
    638e:	b8 00 00 00 00       	mov    eax,0x0
    6393:	e8 28 c2 ff ff       	call   25c0 <printf@plt>
    6398:	bf 01 00 00 00       	mov    edi,0x1
    639d:	e8 9e c4 ff ff       	call   2840 <exit@plt>
    63a2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    63a6:	48 89 c7             	mov    rdi,rax
    63a9:	e8 a2 c1 ff ff       	call   2550 <fclose@plt>
    63ae:	90                   	nop
    63af:	c9                   	leave  
    63b0:	c3                   	ret    

00000000000063b1 <test_encrypt>:
    63b1:	f3 0f 1e fa          	endbr64 
    63b5:	55                   	push   rbp
    63b6:	48 89 e5             	mov    rbp,rsp
    63b9:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    63bd:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    63c1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    63c5:	0f b6 80 48 01 00 00 	movzx  eax,BYTE PTR [rax+0x148]
    63cc:	84 c0                	test   al,al
    63ce:	74 13                	je     63e3 <test_encrypt+0x32>
    63d0:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    63d4:	0f b6 40 38          	movzx  eax,BYTE PTR [rax+0x38]
    63d8:	84 c0                	test   al,al
    63da:	74 07                	je     63e3 <test_encrypt+0x32>
    63dc:	b8 00 00 00 00       	mov    eax,0x0
    63e1:	eb 05                	jmp    63e8 <test_encrypt+0x37>
    63e3:	b8 01 00 00 00       	mov    eax,0x1
    63e8:	5d                   	pop    rbp
    63e9:	c3                   	ret    

00000000000063ea <rule_app>:
    63ea:	f3 0f 1e fa          	endbr64 
    63ee:	55                   	push   rbp
    63ef:	48 89 e5             	mov    rbp,rsp
    63f2:	48 83 ec 20          	sub    rsp,0x20
    63f6:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    63fa:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    63fe:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    6402:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6406:	48 89 d6             	mov    rsi,rdx
    6409:	48 89 c7             	mov    rdi,rax
    640c:	e8 55 03 00 00       	call   6766 <r_engine>
    6411:	88 45 fd             	mov    BYTE PTR [rbp-0x3],al
    6414:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    6418:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    641c:	48 89 d6             	mov    rsi,rdx
    641f:	48 89 c7             	mov    rdi,rax
    6422:	e8 1e 4a 00 00       	call   ae45 <d_engine>
    6427:	88 45 fe             	mov    BYTE PTR [rbp-0x2],al
    642a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    642e:	48 8b 88 78 03 00 00 	mov    rcx,QWORD PTR [rax+0x378]
    6435:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6439:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    643d:	48 89 d6             	mov    rsi,rdx
    6440:	48 89 c7             	mov    rdi,rax
    6443:	ff d1                	call   rcx
    6445:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
    6448:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
    644c:	74 40                	je     648e <rule_app+0xa4>
    644e:	80 7d fd 00          	cmp    BYTE PTR [rbp-0x3],0x0
    6452:	74 3a                	je     648e <rule_app+0xa4>
    6454:	80 7d fe 00          	cmp    BYTE PTR [rbp-0x2],0x0
    6458:	74 34                	je     648e <rule_app+0xa4>
    645a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    645e:	4c 8b 80 80 03 00 00 	mov    r8,QWORD PTR [rax+0x380]
    6465:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    6469:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    646d:	ba 00 00 00 00       	mov    edx,0x0
    6472:	48 89 ce             	mov    rsi,rcx
    6475:	48 89 c7             	mov    rdi,rax
    6478:	41 ff d0             	call   r8
    647b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    647f:	8b 40 3c             	mov    eax,DWORD PTR [rax+0x3c]
    6482:	8d 50 01             	lea    edx,[rax+0x1]
    6485:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6489:	89 50 3c             	mov    DWORD PTR [rax+0x3c],edx
    648c:	eb 17                	jmp    64a5 <rule_app+0xbb>
    648e:	8b 05 90 ab 00 00    	mov    eax,DWORD PTR [rip+0xab90]        # 11024 <VIGIL_MODE>
    6494:	83 f8 02             	cmp    eax,0x2
    6497:	75 0c                	jne    64a5 <rule_app+0xbb>
    6499:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    649d:	48 89 c7             	mov    rdi,rax
    64a0:	e8 a3 25 00 00       	call   8a48 <forward_packet>
    64a5:	90                   	nop
    64a6:	c9                   	leave  
    64a7:	c3                   	ret    

00000000000064a8 <rulemgr>:
    64a8:	f3 0f 1e fa          	endbr64 
    64ac:	55                   	push   rbp
    64ad:	48 89 e5             	mov    rbp,rsp
    64b0:	48 83 ec 20          	sub    rsp,0x20
    64b4:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    64b8:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    64bf:	e9 8f 02 00 00       	jmp    6753 <rulemgr+0x2ab>
    64c4:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    64c7:	8d 50 01             	lea    edx,[rax+0x1]
    64ca:	89 55 f4             	mov    DWORD PTR [rbp-0xc],edx
    64cd:	48 98                	cdqe   
    64cf:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    64d6:	48 8d 15 c3 ab 00 00 	lea    rdx,[rip+0xabc3]        # 110a0 <rules>
    64dd:	48 01 d0             	add    rax,rdx
    64e0:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    64e4:	0f b6 05 4d 14 10 00 	movzx  eax,BYTE PTR [rip+0x10144d]        # 107938 <in_test_mode>
    64eb:	84 c0                	test   al,al
    64ed:	74 30                	je     651f <rulemgr+0x77>
    64ef:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64f3:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    64f6:	83 f8 46             	cmp    eax,0x46
    64f9:	75 0d                	jne    6508 <rulemgr+0x60>
    64fb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64ff:	c7 40 10 45 00 00 00 	mov    DWORD PTR [rax+0x10],0x45
    6506:	eb 17                	jmp    651f <rulemgr+0x77>
    6508:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    650c:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    650f:	83 f8 45             	cmp    eax,0x45
    6512:	75 0b                	jne    651f <rulemgr+0x77>
    6514:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6518:	c7 40 10 46 00 00 00 	mov    DWORD PTR [rax+0x10],0x46
    651f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6523:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    6529:	83 f8 ff             	cmp    eax,0xffffffff
    652c:	74 19                	je     6547 <rulemgr+0x9f>
    652e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6532:	8b 50 2c             	mov    edx,DWORD PTR [rax+0x2c]
    6535:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6539:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    653f:	39 c2                	cmp    edx,eax
    6541:	0f 85 0c 02 00 00    	jne    6753 <rulemgr+0x2ab>
    6547:	0f b6 05 e2 13 10 00 	movzx  eax,BYTE PTR [rip+0x1013e2]        # 107930 <demo_mode>
    654e:	84 c0                	test   al,al
    6550:	75 0f                	jne    6561 <rulemgr+0xb9>
    6552:	8b 05 68 13 10 00    	mov    eax,DWORD PTR [rip+0x101368]        # 1078c0 <vigil_location>
    6558:	83 f8 03             	cmp    eax,0x3
    655b:	0f 85 a1 00 00 00    	jne    6602 <rulemgr+0x15a>
    6561:	8b 05 59 13 10 00    	mov    eax,DWORD PTR [rip+0x101359]        # 1078c0 <vigil_location>
    6567:	83 f8 03             	cmp    eax,0x3
    656a:	0f 85 e3 01 00 00    	jne    6753 <rulemgr+0x2ab>
    6570:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6574:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    6577:	83 f8 ff             	cmp    eax,0xffffffff
    657a:	74 16                	je     6592 <rulemgr+0xea>
    657c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6580:	8b 50 0c             	mov    edx,DWORD PTR [rax+0xc]
    6583:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6587:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    658a:	39 c2                	cmp    edx,eax
    658c:	0f 85 c1 01 00 00    	jne    6753 <rulemgr+0x2ab>
    6592:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6596:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    6599:	83 f8 ff             	cmp    eax,0xffffffff
    659c:	74 16                	je     65b4 <rulemgr+0x10c>
    659e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65a2:	8b 50 08             	mov    edx,DWORD PTR [rax+0x8]
    65a5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    65a9:	8b 40 28             	mov    eax,DWORD PTR [rax+0x28]
    65ac:	39 c2                	cmp    edx,eax
    65ae:	0f 85 9f 01 00 00    	jne    6753 <rulemgr+0x2ab>
    65b4:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    65b8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65bc:	48 89 d6             	mov    rsi,rdx
    65bf:	48 89 c7             	mov    rdi,rax
    65c2:	e8 97 03 00 00       	call   695e <test_tcp_session_status>
    65c7:	84 c0                	test   al,al
    65c9:	0f 84 84 01 00 00    	je     6753 <rulemgr+0x2ab>
    65cf:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    65d3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65d7:	48 89 d6             	mov    rsi,rdx
    65da:	48 89 c7             	mov    rdi,rax
    65dd:	e8 cf fd ff ff       	call   63b1 <test_encrypt>
    65e2:	84 c0                	test   al,al
    65e4:	0f 84 69 01 00 00    	je     6753 <rulemgr+0x2ab>
    65ea:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    65ee:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65f2:	48 89 d6             	mov    rsi,rdx
    65f5:	48 89 c7             	mov    rdi,rax
    65f8:	e8 ed fd ff ff       	call   63ea <rule_app>
    65fd:	e9 51 01 00 00       	jmp    6753 <rulemgr+0x2ab>
    6602:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6606:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    6609:	83 f8 47             	cmp    eax,0x47
    660c:	74 16                	je     6624 <rulemgr+0x17c>
    660e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6612:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    6615:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6619:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    661c:	39 c2                	cmp    edx,eax
    661e:	0f 85 2f 01 00 00    	jne    6753 <rulemgr+0x2ab>
    6624:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6628:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    662e:	3d 80 00 00 00       	cmp    eax,0x80
    6633:	75 18                	jne    664d <rulemgr+0x1a5>
    6635:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6639:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    663d:	48 89 d6             	mov    rsi,rdx
    6640:	48 89 c7             	mov    rdi,rax
    6643:	e8 a2 fd ff ff       	call   63ea <rule_app>
    6648:	e9 06 01 00 00       	jmp    6753 <rulemgr+0x2ab>
    664d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6651:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    6654:	83 f8 47             	cmp    eax,0x47
    6657:	75 7d                	jne    66d6 <rulemgr+0x22e>
    6659:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    665d:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    6660:	83 f8 ff             	cmp    eax,0xffffffff
    6663:	74 28                	je     668d <rulemgr+0x1e5>
    6665:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6669:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    666c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6670:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    6673:	39 c2                	cmp    edx,eax
    6675:	74 16                	je     668d <rulemgr+0x1e5>
    6677:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    667b:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    667e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6682:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    6685:	39 c2                	cmp    edx,eax
    6687:	0f 85 c6 00 00 00    	jne    6753 <rulemgr+0x2ab>
    668d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6691:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    6694:	83 f8 ff             	cmp    eax,0xffffffff
    6697:	74 28                	je     66c1 <rulemgr+0x219>
    6699:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    669d:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    66a0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66a4:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    66a7:	39 c2                	cmp    edx,eax
    66a9:	74 16                	je     66c1 <rulemgr+0x219>
    66ab:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    66af:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    66b2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66b6:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    66b9:	39 c2                	cmp    edx,eax
    66bb:	0f 85 92 00 00 00    	jne    6753 <rulemgr+0x2ab>
    66c1:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    66c5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66c9:	48 89 d6             	mov    rsi,rdx
    66cc:	48 89 c7             	mov    rdi,rax
    66cf:	e8 16 fd ff ff       	call   63ea <rule_app>
    66d4:	eb 7d                	jmp    6753 <rulemgr+0x2ab>
    66d6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66da:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    66dd:	83 f8 ff             	cmp    eax,0xffffffff
    66e0:	74 12                	je     66f4 <rulemgr+0x24c>
    66e2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66e6:	8b 50 0c             	mov    edx,DWORD PTR [rax+0xc]
    66e9:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    66ed:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    66f0:	39 c2                	cmp    edx,eax
    66f2:	75 5f                	jne    6753 <rulemgr+0x2ab>
    66f4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66f8:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    66fb:	83 f8 ff             	cmp    eax,0xffffffff
    66fe:	74 12                	je     6712 <rulemgr+0x26a>
    6700:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6704:	8b 50 08             	mov    edx,DWORD PTR [rax+0x8]
    6707:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    670b:	8b 40 28             	mov    eax,DWORD PTR [rax+0x28]
    670e:	39 c2                	cmp    edx,eax
    6710:	75 41                	jne    6753 <rulemgr+0x2ab>
    6712:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6716:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    671a:	48 89 d6             	mov    rsi,rdx
    671d:	48 89 c7             	mov    rdi,rax
    6720:	e8 39 02 00 00       	call   695e <test_tcp_session_status>
    6725:	84 c0                	test   al,al
    6727:	74 2a                	je     6753 <rulemgr+0x2ab>
    6729:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    672d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6731:	48 89 d6             	mov    rsi,rdx
    6734:	48 89 c7             	mov    rdi,rax
    6737:	e8 75 fc ff ff       	call   63b1 <test_encrypt>
    673c:	84 c0                	test   al,al
    673e:	74 13                	je     6753 <rulemgr+0x2ab>
    6740:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6744:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6748:	48 89 d6             	mov    rsi,rdx
    674b:	48 89 c7             	mov    rdi,rax
    674e:	e8 97 fc ff ff       	call   63ea <rule_app>
    6753:	8b 05 bb a8 00 00    	mov    eax,DWORD PTR [rip+0xa8bb]        # 11014 <num_rules>
    6759:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    675c:	0f 8e 62 fd ff ff    	jle    64c4 <rulemgr+0x1c>
    6762:	90                   	nop
    6763:	90                   	nop
    6764:	c9                   	leave  
    6765:	c3                   	ret    

0000000000006766 <r_engine>:
    6766:	f3 0f 1e fa          	endbr64 
    676a:	55                   	push   rbp
    676b:	48 89 e5             	mov    rbp,rsp
    676e:	48 83 ec 10          	sub    rsp,0x10
    6772:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6776:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    677a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    677e:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    6781:	3d 80 00 00 00       	cmp    eax,0x80
    6786:	0f 85 d9 00 00 00    	jne    6865 <r_engine+0xff>
    678c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6790:	0f b6 80 6f 03 00 00 	movzx  eax,BYTE PTR [rax+0x36f]
    6797:	84 c0                	test   al,al
    6799:	74 25                	je     67c0 <r_engine+0x5a>
    679b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    679f:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    67a3:	0f b6 50 01          	movzx  edx,BYTE PTR [rax+0x1]
    67a7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67ab:	0f b6 80 73 03 00 00 	movzx  eax,BYTE PTR [rax+0x373]
    67b2:	38 c2                	cmp    dl,al
    67b4:	74 0a                	je     67c0 <r_engine+0x5a>
    67b6:	b8 00 00 00 00       	mov    eax,0x0
    67bb:	e9 9c 01 00 00       	jmp    695c <r_engine+0x1f6>
    67c0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67c4:	0f b6 80 71 03 00 00 	movzx  eax,BYTE PTR [rax+0x371]
    67cb:	84 c0                	test   al,al
    67cd:	74 26                	je     67f5 <r_engine+0x8f>
    67cf:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    67d3:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    67d7:	0f b7 50 04          	movzx  edx,WORD PTR [rax+0x4]
    67db:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67df:	0f b7 80 76 03 00 00 	movzx  eax,WORD PTR [rax+0x376]
    67e6:	66 39 c2             	cmp    dx,ax
    67e9:	74 0a                	je     67f5 <r_engine+0x8f>
    67eb:	b8 00 00 00 00       	mov    eax,0x0
    67f0:	e9 67 01 00 00       	jmp    695c <r_engine+0x1f6>
    67f5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67f9:	0f b6 80 70 03 00 00 	movzx  eax,BYTE PTR [rax+0x370]
    6800:	84 c0                	test   al,al
    6802:	74 26                	je     682a <r_engine+0xc4>
    6804:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6808:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    680c:	0f b7 50 06          	movzx  edx,WORD PTR [rax+0x6]
    6810:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6814:	0f b7 80 74 03 00 00 	movzx  eax,WORD PTR [rax+0x374]
    681b:	66 39 c2             	cmp    dx,ax
    681e:	74 0a                	je     682a <r_engine+0xc4>
    6820:	b8 00 00 00 00       	mov    eax,0x0
    6825:	e9 32 01 00 00       	jmp    695c <r_engine+0x1f6>
    682a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    682e:	0f b6 80 6e 03 00 00 	movzx  eax,BYTE PTR [rax+0x36e]
    6835:	84 c0                	test   al,al
    6837:	0f 84 dc 00 00 00    	je     6919 <r_engine+0x1b3>
    683d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6841:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    6845:	0f b6 10             	movzx  edx,BYTE PTR [rax]
    6848:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    684c:	0f b6 80 72 03 00 00 	movzx  eax,BYTE PTR [rax+0x372]
    6853:	38 c2                	cmp    dl,al
    6855:	0f 84 be 00 00 00    	je     6919 <r_engine+0x1b3>
    685b:	b8 00 00 00 00       	mov    eax,0x0
    6860:	e9 f7 00 00 00       	jmp    695c <r_engine+0x1f6>
    6865:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6869:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    686c:	83 f8 7e             	cmp    eax,0x7e
    686f:	0f 85 a4 00 00 00    	jne    6919 <r_engine+0x1b3>
    6875:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6879:	0f b6 80 51 03 00 00 	movzx  eax,BYTE PTR [rax+0x351]
    6880:	84 c0                	test   al,al
    6882:	74 2e                	je     68b2 <r_engine+0x14c>
    6884:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6888:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    688c:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    688f:	89 c7                	mov    edi,eax
    6891:	e8 ba bf ff ff       	call   2850 <ntohl@plt>
    6896:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    689a:	0f b7 92 5c 03 00 00 	movzx  edx,WORD PTR [rdx+0x35c]
    68a1:	0f b7 d2             	movzx  edx,dx
    68a4:	39 d0                	cmp    eax,edx
    68a6:	74 0a                	je     68b2 <r_engine+0x14c>
    68a8:	b8 00 00 00 00       	mov    eax,0x0
    68ad:	e9 aa 00 00 00       	jmp    695c <r_engine+0x1f6>
    68b2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    68b6:	0f b6 80 50 03 00 00 	movzx  eax,BYTE PTR [rax+0x350]
    68bd:	84 c0                	test   al,al
    68bf:	74 29                	je     68ea <r_engine+0x184>
    68c1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    68c5:	48 8d 90 53 03 00 00 	lea    rdx,[rax+0x353]
    68cc:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    68d0:	48 83 c0 68          	add    rax,0x68
    68d4:	48 89 d6             	mov    rsi,rdx
    68d7:	48 89 c7             	mov    rdi,rax
    68da:	e8 a1 bd ff ff       	call   2680 <strcmp@plt>
    68df:	85 c0                	test   eax,eax
    68e1:	74 07                	je     68ea <r_engine+0x184>
    68e3:	b8 00 00 00 00       	mov    eax,0x0
    68e8:	eb 72                	jmp    695c <r_engine+0x1f6>
    68ea:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    68ee:	0f b6 80 52 03 00 00 	movzx  eax,BYTE PTR [rax+0x352]
    68f5:	84 c0                	test   al,al
    68f7:	74 20                	je     6919 <r_engine+0x1b3>
    68f9:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    68fd:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    6901:	8b 50 04             	mov    edx,DWORD PTR [rax+0x4]
    6904:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6908:	8b 80 60 03 00 00    	mov    eax,DWORD PTR [rax+0x360]
    690e:	39 c2                	cmp    edx,eax
    6910:	74 07                	je     6919 <r_engine+0x1b3>
    6912:	b8 00 00 00 00       	mov    eax,0x0
    6917:	eb 43                	jmp    695c <r_engine+0x1f6>
    6919:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    691d:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    6921:	48 85 c0             	test   rax,rax
    6924:	74 31                	je     6957 <r_engine+0x1f1>
    6926:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    692a:	0f b6 80 69 03 00 00 	movzx  eax,BYTE PTR [rax+0x369]
    6931:	84 c0                	test   al,al
    6933:	74 22                	je     6957 <r_engine+0x1f1>
    6935:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6939:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    693d:	0f b6 50 08          	movzx  edx,BYTE PTR [rax+0x8]
    6941:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6945:	0f b6 80 6c 03 00 00 	movzx  eax,BYTE PTR [rax+0x36c]
    694c:	38 c2                	cmp    dl,al
    694e:	74 07                	je     6957 <r_engine+0x1f1>
    6950:	b8 00 00 00 00       	mov    eax,0x0
    6955:	eb 05                	jmp    695c <r_engine+0x1f6>
    6957:	b8 01 00 00 00       	mov    eax,0x1
    695c:	c9                   	leave  
    695d:	c3                   	ret    

000000000000695e <test_tcp_session_status>:
    695e:	f3 0f 1e fa          	endbr64 
    6962:	55                   	push   rbp
    6963:	48 89 e5             	mov    rbp,rsp
    6966:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    696a:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    696e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6972:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    6978:	83 f8 7e             	cmp    eax,0x7e
    697b:	75 34                	jne    69b1 <test_tcp_session_status+0x53>
    697d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6981:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    6984:	83 f8 7e             	cmp    eax,0x7e
    6987:	75 28                	jne    69b1 <test_tcp_session_status+0x53>
    6989:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    698d:	8b 80 48 03 00 00    	mov    eax,DWORD PTR [rax+0x348]
    6993:	83 f8 01             	cmp    eax,0x1
    6996:	75 12                	jne    69aa <test_tcp_session_status+0x4c>
    6998:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    699c:	8b 40 70             	mov    eax,DWORD PTR [rax+0x70]
    699f:	85 c0                	test   eax,eax
    69a1:	75 07                	jne    69aa <test_tcp_session_status+0x4c>
    69a3:	b8 00 00 00 00       	mov    eax,0x0
    69a8:	eb 0c                	jmp    69b6 <test_tcp_session_status+0x58>
    69aa:	b8 01 00 00 00       	mov    eax,0x1
    69af:	eb 05                	jmp    69b6 <test_tcp_session_status+0x58>
    69b1:	b8 01 00 00 00       	mov    eax,0x1
    69b6:	5d                   	pop    rbp
    69b7:	c3                   	ret    

00000000000069b8 <main>:
    69b8:	f3 0f 1e fa          	endbr64 
    69bc:	55                   	push   rbp
    69bd:	48 89 e5             	mov    rbp,rsp
    69c0:	48 81 ec 40 08 00 00 	sub    rsp,0x840
    69c7:	89 bd cc f7 ff ff    	mov    DWORD PTR [rbp-0x834],edi
    69cd:	48 89 b5 c0 f7 ff ff 	mov    QWORD PTR [rbp-0x840],rsi
    69d4:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    69db:	00 00 
    69dd:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    69e1:	31 c0                	xor    eax,eax
    69e3:	b8 00 00 00 00       	mov    eax,0x0
    69e8:	e8 8a 4e 00 00       	call   b877 <load_fn_mem_map>
    69ed:	48 8d 35 d3 02 00 00 	lea    rsi,[rip+0x2d3]        # 6cc7 <sigint_processor>
    69f4:	bf 02 00 00 00       	mov    edi,0x2
    69f9:	e8 92 bc ff ff       	call   2690 <signal@plt>
    69fe:	48 8d 05 f5 4a 00 00 	lea    rax,[rip+0x4af5]        # b4fa <crash_handler>
    6a05:	48 89 c6             	mov    rsi,rax
    6a08:	bf 0b 00 00 00       	mov    edi,0xb
    6a0d:	e8 7e bc ff ff       	call   2690 <signal@plt>
    6a12:	b8 00 00 00 00       	mov    eax,0x0
    6a17:	e8 e1 08 00 00       	call   72fd <print_logo>
    6a1c:	b8 00 00 00 00       	mov    eax,0x0
    6a21:	e8 20 07 00 00       	call   7146 <print_cpu_info>
    6a26:	c7 05 04 0f 10 00 01 	mov    DWORD PTR [rip+0x100f04],0x1        # 107934 <is_running>
    6a2d:	00 00 00 
    6a30:	bf 00 00 00 00       	mov    edi,0x0
    6a35:	e8 96 bc ff ff       	call   26d0 <time@plt>
    6a3a:	48 89 05 07 11 10 00 	mov    QWORD PTR [rip+0x101107],rax        # 107b48 <last_clean_time>
    6a41:	83 bd cc f7 ff ff 01 	cmp    DWORD PTR [rbp-0x834],0x1
    6a48:	0f 85 e3 00 00 00    	jne    6b31 <main+0x179>
    6a4e:	b8 00 00 00 00       	mov    eax,0x0
    6a53:	e8 c4 06 00 00       	call   711c <print_help_and_exit>
    6a58:	e9 d4 00 00 00       	jmp    6b31 <main+0x179>
    6a5d:	8b 85 dc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x824]
    6a63:	83 e8 64             	sub    eax,0x64
    6a66:	83 f8 10             	cmp    eax,0x10
    6a69:	0f 87 9e 00 00 00    	ja     6b0d <main+0x155>
    6a6f:	89 c0                	mov    eax,eax
    6a71:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    6a78:	00 
    6a79:	48 8d 05 7c 65 00 00 	lea    rax,[rip+0x657c]        # cffc <_IO_stdin_used+0xffc>
    6a80:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    6a83:	48 98                	cdqe   
    6a85:	48 8d 15 70 65 00 00 	lea    rdx,[rip+0x6570]        # cffc <_IO_stdin_used+0xffc>
    6a8c:	48 01 d0             	add    rax,rdx
    6a8f:	3e ff e0             	notrack jmp rax
    6a92:	c6 05 09 33 10 00 01 	mov    BYTE PTR [rip+0x103309],0x1        # 109da2 <debug_mode>
    6a99:	e9 93 00 00 00       	jmp    6b31 <main+0x179>
    6a9e:	b8 00 00 00 00       	mov    eax,0x0
    6aa3:	e8 74 06 00 00       	call   711c <print_help_and_exit>
    6aa8:	e9 84 00 00 00       	jmp    6b31 <main+0x179>
    6aad:	48 8b 05 ac a5 00 00 	mov    rax,QWORD PTR [rip+0xa5ac]        # 11060 <optarg@@GLIBC_2.2.5>
    6ab4:	48 89 85 e0 f7 ff ff 	mov    QWORD PTR [rbp-0x820],rax
    6abb:	eb 74                	jmp    6b31 <main+0x179>
    6abd:	c6 05 75 0e 10 00 01 	mov    BYTE PTR [rip+0x100e75],0x1        # 107939 <packet_print>
    6ac4:	eb 6b                	jmp    6b31 <main+0x179>
    6ac6:	c6 05 d7 0d 10 00 01 	mov    BYTE PTR [rip+0x100dd7],0x1        # 1078a4 <quiet_exit>
    6acd:	eb 62                	jmp    6b31 <main+0x179>
    6acf:	48 8d 3d 4a 63 00 00 	lea    rdi,[rip+0x634a]        # ce20 <_IO_stdin_used+0xe20>
    6ad6:	e8 25 ba ff ff       	call   2500 <puts@plt>
    6adb:	bf 0a 00 00 00       	mov    edi,0xa
    6ae0:	e8 7b bd ff ff       	call   2860 <sleep@plt>
    6ae5:	c6 05 44 0e 10 00 01 	mov    BYTE PTR [rip+0x100e44],0x1        # 107930 <demo_mode>
    6aec:	eb 43                	jmp    6b31 <main+0x179>
    6aee:	48 8d 3d 6b 63 00 00 	lea    rdi,[rip+0x636b]        # ce60 <_IO_stdin_used+0xe60>
    6af5:	e8 06 ba ff ff       	call   2500 <puts@plt>
    6afa:	bf 0a 00 00 00       	mov    edi,0xa
    6aff:	e8 5c bd ff ff       	call   2860 <sleep@plt>
    6b04:	c6 05 2d 0e 10 00 01 	mov    BYTE PTR [rip+0x100e2d],0x1        # 107938 <in_test_mode>
    6b0b:	eb 24                	jmp    6b31 <main+0x179>
    6b0d:	8b 85 dc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x824]
    6b13:	89 c6                	mov    esi,eax
    6b15:	48 8d 3d 78 63 00 00 	lea    rdi,[rip+0x6378]        # ce94 <_IO_stdin_used+0xe94>
    6b1c:	b8 00 00 00 00       	mov    eax,0x0
    6b21:	e8 9a ba ff ff       	call   25c0 <printf@plt>
    6b26:	b8 00 00 00 00       	mov    eax,0x0
    6b2b:	e8 ec 05 00 00       	call   711c <print_help_and_exit>
    6b30:	90                   	nop
    6b31:	48 8b 8d c0 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x840]
    6b38:	8b 85 cc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x834]
    6b3e:	48 8d 15 65 63 00 00 	lea    rdx,[rip+0x6365]        # ceaa <_IO_stdin_used+0xeaa>
    6b45:	48 89 ce             	mov    rsi,rcx
    6b48:	89 c7                	mov    edi,eax
    6b4a:	e8 71 bc ff ff       	call   27c0 <getopt@plt>
    6b4f:	89 85 dc f7 ff ff    	mov    DWORD PTR [rbp-0x824],eax
    6b55:	83 bd dc f7 ff ff ff 	cmp    DWORD PTR [rbp-0x824],0xffffffff
    6b5c:	0f 85 fb fe ff ff    	jne    6a5d <main+0xa5>
    6b62:	48 8d 3d 4a 63 00 00 	lea    rdi,[rip+0x634a]        # ceb3 <_IO_stdin_used+0xeb3>
    6b69:	e8 82 f6 ff ff       	call   61f0 <deny_conf_parser>
    6b6e:	48 8d 3d 53 63 00 00 	lea    rdi,[rip+0x6353]        # cec8 <_IO_stdin_used+0xec8>
    6b75:	e8 86 b9 ff ff       	call   2500 <puts@plt>
    6b7a:	b8 00 00 00 00       	mov    eax,0x0
    6b7f:	e8 65 13 00 00       	call   7ee9 <load_csv_arp_cache>
    6b84:	83 f8 ff             	cmp    eax,0xffffffff
    6b87:	74 0e                	je     6b97 <main+0x1df>
    6b89:	48 8d 3d 78 63 00 00 	lea    rdi,[rip+0x6378]        # cf08 <_IO_stdin_used+0xf08>
    6b90:	e8 6b b9 ff ff       	call   2500 <puts@plt>
    6b95:	eb 0c                	jmp    6ba3 <main+0x1eb>
    6b97:	48 8d 3d 8a 63 00 00 	lea    rdi,[rip+0x638a]        # cf28 <_IO_stdin_used+0xf28>
    6b9e:	e8 5d b9 ff ff       	call   2500 <puts@plt>
    6ba3:	48 8d 3d af 63 00 00 	lea    rdi,[rip+0x63af]        # cf59 <_IO_stdin_used+0xf59>
    6baa:	e8 12 ee ff ff       	call   59c1 <rule_library_parser>
    6baf:	48 8d 3d b9 63 00 00 	lea    rdi,[rip+0x63b9]        # cf6f <_IO_stdin_used+0xf6f>
    6bb6:	e8 45 b9 ff ff       	call   2500 <puts@plt>
    6bbb:	b8 00 00 00 00       	mov    eax,0x0
    6bc0:	e8 51 3e 00 00       	call   aa16 <rule_processor>
    6bc5:	48 8b 85 e0 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x820]
    6bcc:	48 89 c6             	mov    rsi,rax
    6bcf:	48 8d 3d b2 63 00 00 	lea    rdi,[rip+0x63b2]        # cf88 <_IO_stdin_used+0xf88>
    6bd6:	b8 00 00 00 00       	mov    eax,0x0
    6bdb:	e8 e0 b9 ff ff       	call   25c0 <printf@plt>
    6be0:	48 c7 85 f0 f7 ff ff 	mov    QWORD PTR [rbp-0x810],0x0
    6be7:	00 00 00 00 
    6beb:	48 c7 85 f8 f7 ff ff 	mov    QWORD PTR [rbp-0x808],0x0
    6bf2:	00 00 00 00 
    6bf6:	48 8d 95 00 f8 ff ff 	lea    rdx,[rbp-0x800]
    6bfd:	b8 00 00 00 00       	mov    eax,0x0
    6c02:	b9 fd 00 00 00       	mov    ecx,0xfd
    6c07:	48 89 d7             	mov    rdi,rdx
    6c0a:	f3 48 ab             	rep stos QWORD PTR es:[rdi],rax
    6c0d:	48 89 fa             	mov    rdx,rdi
    6c10:	89 02                	mov    DWORD PTR [rdx],eax
    6c12:	48 83 c2 04          	add    rdx,0x4
    6c16:	66 89 02             	mov    WORD PTR [rdx],ax
    6c19:	48 83 c2 02          	add    rdx,0x2
    6c1d:	48 8d 95 f0 f7 ff ff 	lea    rdx,[rbp-0x810]
    6c24:	48 8b 85 e0 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x820]
    6c2b:	49 89 d0             	mov    r8,rdx
    6c2e:	b9 64 00 00 00       	mov    ecx,0x64
    6c33:	ba 01 00 00 00       	mov    edx,0x1
    6c38:	be 00 04 00 00       	mov    esi,0x400
    6c3d:	48 89 c7             	mov    rdi,rax
    6c40:	e8 cb bb ff ff       	call   2810 <pcap_open_live@plt>
    6c45:	48 89 85 e8 f7 ff ff 	mov    QWORD PTR [rbp-0x818],rax
    6c4c:	48 83 bd e8 f7 ff ff 	cmp    QWORD PTR [rbp-0x818],0x0
    6c53:	00 
    6c54:	75 16                	jne    6c6c <main+0x2b4>
    6c56:	48 8d 3d 4c 63 00 00 	lea    rdi,[rip+0x634c]        # cfa9 <_IO_stdin_used+0xfa9>
    6c5d:	e8 1e bb ff ff       	call   2780 <perror@plt>
    6c62:	bf 01 00 00 00       	mov    edi,0x1
    6c67:	e8 d4 bb ff ff       	call   2840 <exit@plt>
    6c6c:	b8 00 00 00 00       	mov    eax,0x0
    6c71:	e8 de 45 00 00       	call   b254 <collect_scripts>
    6c76:	b8 00 00 00 00       	mov    eax,0x0
    6c7b:	e8 94 06 00 00       	call   7314 <start_nsh_server>
    6c80:	48 8d 3d 41 63 00 00 	lea    rdi,[rip+0x6341]        # cfc8 <_IO_stdin_used+0xfc8>
    6c87:	e8 74 b8 ff ff       	call   2500 <puts@plt>
    6c8c:	48 8b 85 e8 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x818]
    6c93:	b9 00 00 00 00       	mov    ecx,0x0
    6c98:	48 8d 15 24 bd ff ff 	lea    rdx,[rip+0xffffffffffffbd24]        # 29c3 <pktmgr>
    6c9f:	be ff ff ff ff       	mov    esi,0xffffffff
    6ca4:	48 89 c7             	mov    rdi,rax
    6ca7:	e8 44 ba ff ff       	call   26f0 <pcap_loop@plt>
    6cac:	b8 00 00 00 00       	mov    eax,0x0
    6cb1:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    6cb5:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
    6cbc:	00 00 
    6cbe:	74 05                	je     6cc5 <main+0x30d>
    6cc0:	e8 bb b8 ff ff       	call   2580 <__stack_chk_fail@plt>
    6cc5:	c9                   	leave  
    6cc6:	c3                   	ret    

0000000000006cc7 <sigint_processor>:
    6cc7:	f3 0f 1e fa          	endbr64 
    6ccb:	55                   	push   rbp
    6ccc:	48 89 e5             	mov    rbp,rsp
    6ccf:	41 54                	push   r12
    6cd1:	53                   	push   rbx
    6cd2:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    6cd9:	89 bd bc fe ff ff    	mov    DWORD PTR [rbp-0x144],edi
    6cdf:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6ce6:	00 00 
    6ce8:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    6cec:	31 c0                	xor    eax,eax
    6cee:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    6cf5:	00 00 00 
    6cf8:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    6cff:	48 89 c7             	mov    rdi,rax
    6d02:	e8 2d c7 ff ff       	call   3434 <cb_get_formatted_time>
    6d07:	48 8d 95 e0 fe ff ff 	lea    rdx,[rbp-0x120]
    6d0e:	8b 85 bc fe ff ff    	mov    eax,DWORD PTR [rbp-0x144]
    6d14:	89 c6                	mov    esi,eax
    6d16:	48 8d 3d 23 63 00 00 	lea    rdi,[rip+0x6323]        # d040 <_IO_stdin_used+0x1040>
    6d1d:	b8 00 00 00 00       	mov    eax,0x0
    6d22:	e8 99 b8 ff ff       	call   25c0 <printf@plt>
    6d27:	48 8d 3d 37 63 00 00 	lea    rdi,[rip+0x6337]        # d065 <_IO_stdin_used+0x1065>
    6d2e:	e8 4d ba ff ff       	call   2780 <perror@plt>
    6d33:	0f b6 05 6a 0b 10 00 	movzx  eax,BYTE PTR [rip+0x100b6a]        # 1078a4 <quiet_exit>
    6d3a:	83 f0 01             	xor    eax,0x1
    6d3d:	84 c0                	test   al,al
    6d3f:	0f 84 2e 02 00 00    	je     6f73 <sigint_processor+0x2ac>
    6d45:	8b 05 39 a3 00 00    	mov    eax,DWORD PTR [rip+0xa339]        # 11084 <total_pkt_captured>
    6d4b:	89 c6                	mov    esi,eax
    6d4d:	48 8d 3d 12 63 00 00 	lea    rdi,[rip+0x6312]        # d066 <_IO_stdin_used+0x1066>
    6d54:	b8 00 00 00 00       	mov    eax,0x0
    6d59:	e8 62 b8 ff ff       	call   25c0 <printf@plt>
    6d5e:	48 8d 3d 1b 63 00 00 	lea    rdi,[rip+0x631b]        # d080 <_IO_stdin_used+0x1080>
    6d65:	e8 96 b7 ff ff       	call   2500 <puts@plt>
    6d6a:	c7 85 c4 fe ff ff 00 	mov    DWORD PTR [rbp-0x13c],0x0
    6d71:	00 00 00 
    6d74:	e9 e8 01 00 00       	jmp    6f61 <sigint_processor+0x29a>
    6d79:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6d7f:	48 63 d0             	movsxd rdx,eax
    6d82:	48 89 d0             	mov    rax,rdx
    6d85:	48 c1 e0 02          	shl    rax,0x2
    6d89:	48 01 d0             	add    rax,rdx
    6d8c:	48 c1 e0 03          	shl    rax,0x3
    6d90:	48 01 d0             	add    rax,rdx
    6d93:	48 c1 e0 04          	shl    rax,0x4
    6d97:	48 89 c2             	mov    rdx,rax
    6d9a:	48 8d 05 6f c5 0e 00 	lea    rax,[rip+0xec56f]        # f3310 <watchlist+0x270>
    6da1:	44 8b 1c 02          	mov    r11d,DWORD PTR [rdx+rax*1]
    6da5:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6dab:	48 63 d0             	movsxd rdx,eax
    6dae:	48 89 d0             	mov    rax,rdx
    6db1:	48 c1 e0 02          	shl    rax,0x2
    6db5:	48 01 d0             	add    rax,rdx
    6db8:	48 c1 e0 03          	shl    rax,0x3
    6dbc:	48 01 d0             	add    rax,rdx
    6dbf:	48 c1 e0 04          	shl    rax,0x4
    6dc3:	48 89 c2             	mov    rdx,rax
    6dc6:	48 8d 05 37 c5 0e 00 	lea    rax,[rip+0xec537]        # f3304 <watchlist+0x264>
    6dcd:	44 8b 14 02          	mov    r10d,DWORD PTR [rdx+rax*1]
    6dd1:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6dd7:	48 63 d0             	movsxd rdx,eax
    6dda:	48 89 d0             	mov    rax,rdx
    6ddd:	48 c1 e0 02          	shl    rax,0x2
    6de1:	48 01 d0             	add    rax,rdx
    6de4:	48 c1 e0 03          	shl    rax,0x3
    6de8:	48 01 d0             	add    rax,rdx
    6deb:	48 c1 e0 04          	shl    rax,0x4
    6def:	48 89 c2             	mov    rdx,rax
    6df2:	48 8d 05 13 c5 0e 00 	lea    rax,[rip+0xec513]        # f330c <watchlist+0x26c>
    6df9:	44 8b 0c 02          	mov    r9d,DWORD PTR [rdx+rax*1]
    6dfd:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6e03:	48 63 d0             	movsxd rdx,eax
    6e06:	48 89 d0             	mov    rax,rdx
    6e09:	48 c1 e0 02          	shl    rax,0x2
    6e0d:	48 01 d0             	add    rax,rdx
    6e10:	48 c1 e0 03          	shl    rax,0x3
    6e14:	48 01 d0             	add    rax,rdx
    6e17:	48 c1 e0 04          	shl    rax,0x4
    6e1b:	48 89 c2             	mov    rdx,rax
    6e1e:	48 8d 05 db c4 0e 00 	lea    rax,[rip+0xec4db]        # f3300 <watchlist+0x260>
    6e25:	44 8b 04 02          	mov    r8d,DWORD PTR [rdx+rax*1]
    6e29:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6e2f:	48 63 d0             	movsxd rdx,eax
    6e32:	48 89 d0             	mov    rax,rdx
    6e35:	48 c1 e0 02          	shl    rax,0x2
    6e39:	48 01 d0             	add    rax,rdx
    6e3c:	48 c1 e0 03          	shl    rax,0x3
    6e40:	48 01 d0             	add    rax,rdx
    6e43:	48 c1 e0 04          	shl    rax,0x4
    6e47:	48 89 c2             	mov    rdx,rax
    6e4a:	48 8d 05 b7 c4 0e 00 	lea    rax,[rip+0xec4b7]        # f3308 <watchlist+0x268>
    6e51:	8b 3c 02             	mov    edi,DWORD PTR [rdx+rax*1]
    6e54:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6e5a:	48 63 d0             	movsxd rdx,eax
    6e5d:	48 89 d0             	mov    rax,rdx
    6e60:	48 c1 e0 02          	shl    rax,0x2
    6e64:	48 01 d0             	add    rax,rdx
    6e67:	48 c1 e0 03          	shl    rax,0x3
    6e6b:	48 01 d0             	add    rax,rdx
    6e6e:	48 c1 e0 04          	shl    rax,0x4
    6e72:	48 89 c2             	mov    rdx,rax
    6e75:	48 8d 05 80 c4 0e 00 	lea    rax,[rip+0xec480]        # f32fc <watchlist+0x25c>
    6e7c:	44 8b 24 02          	mov    r12d,DWORD PTR [rdx+rax*1]
    6e80:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6e86:	48 63 d0             	movsxd rdx,eax
    6e89:	48 89 d0             	mov    rax,rdx
    6e8c:	48 c1 e0 02          	shl    rax,0x2
    6e90:	48 01 d0             	add    rax,rdx
    6e93:	48 c1 e0 03          	shl    rax,0x3
    6e97:	48 01 d0             	add    rax,rdx
    6e9a:	48 c1 e0 04          	shl    rax,0x4
    6e9e:	48 89 c2             	mov    rdx,rax
    6ea1:	48 8d 05 74 c4 0e 00 	lea    rax,[rip+0xec474]        # f331c <watchlist+0x27c>
    6ea8:	8b 1c 02             	mov    ebx,DWORD PTR [rdx+rax*1]
    6eab:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6eb1:	48 63 d0             	movsxd rdx,eax
    6eb4:	48 89 d0             	mov    rax,rdx
    6eb7:	48 c1 e0 02          	shl    rax,0x2
    6ebb:	48 01 d0             	add    rax,rdx
    6ebe:	48 c1 e0 03          	shl    rax,0x3
    6ec2:	48 01 d0             	add    rax,rdx
    6ec5:	48 c1 e0 04          	shl    rax,0x4
    6ec9:	48 89 c2             	mov    rdx,rax
    6ecc:	48 8d 05 4d c4 0e 00 	lea    rax,[rip+0xec44d]        # f3320 <watchlist+0x280>
    6ed3:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
    6ed6:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6edc:	48 63 d0             	movsxd rdx,eax
    6edf:	48 89 d0             	mov    rax,rdx
    6ee2:	48 c1 e0 02          	shl    rax,0x2
    6ee6:	48 01 d0             	add    rax,rdx
    6ee9:	48 c1 e0 03          	shl    rax,0x3
    6eed:	48 01 d0             	add    rax,rdx
    6ef0:	48 c1 e0 04          	shl    rax,0x4
    6ef4:	48 89 c2             	mov    rdx,rax
    6ef7:	48 8d 05 fa c3 0e 00 	lea    rax,[rip+0xec3fa]        # f32f8 <watchlist+0x258>
    6efe:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
    6f01:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6f07:	48 63 d0             	movsxd rdx,eax
    6f0a:	48 89 d0             	mov    rax,rdx
    6f0d:	48 c1 e0 02          	shl    rax,0x2
    6f11:	48 01 d0             	add    rax,rdx
    6f14:	48 c1 e0 03          	shl    rax,0x3
    6f18:	48 01 d0             	add    rax,rdx
    6f1b:	48 c1 e0 04          	shl    rax,0x4
    6f1f:	48 8d 15 7a c1 0e 00 	lea    rdx,[rip+0xec17a]        # f30a0 <watchlist>
    6f26:	48 01 d0             	add    rax,rdx
    6f29:	48 83 c0 08          	add    rax,0x8
    6f2d:	48 83 ec 08          	sub    rsp,0x8
    6f31:	41 53                	push   r11
    6f33:	41 52                	push   r10
    6f35:	41 51                	push   r9
    6f37:	41 50                	push   r8
    6f39:	57                   	push   rdi
    6f3a:	45 89 e1             	mov    r9d,r12d
    6f3d:	41 89 d8             	mov    r8d,ebx
    6f40:	89 f2                	mov    edx,esi
    6f42:	48 89 c6             	mov    rsi,rax
    6f45:	48 8d 3d 6c 61 00 00 	lea    rdi,[rip+0x616c]        # d0b8 <_IO_stdin_used+0x10b8>
    6f4c:	b8 00 00 00 00       	mov    eax,0x0
    6f51:	e8 6a b6 ff ff       	call   25c0 <printf@plt>
    6f56:	48 83 c4 30          	add    rsp,0x30
    6f5a:	83 85 c4 fe ff ff 01 	add    DWORD PTR [rbp-0x13c],0x1
    6f61:	8b 05 b1 a0 00 00    	mov    eax,DWORD PTR [rip+0xa0b1]        # 11018 <watchlist_num>
    6f67:	39 85 c4 fe ff ff    	cmp    DWORD PTR [rbp-0x13c],eax
    6f6d:	0f 8e 06 fe ff ff    	jle    6d79 <sigint_processor+0xb2>
    6f73:	48 8d 35 de 61 00 00 	lea    rsi,[rip+0x61de]        # d158 <_IO_stdin_used+0x1158>
    6f7a:	48 8d 3d d9 61 00 00 	lea    rdi,[rip+0x61d9]        # d15a <_IO_stdin_used+0x115a>
    6f81:	e8 ea b7 ff ff       	call   2770 <fopen@plt>
    6f86:	48 89 85 d8 fe ff ff 	mov    QWORD PTR [rbp-0x128],rax
    6f8d:	48 83 bd d8 fe ff ff 	cmp    QWORD PTR [rbp-0x128],0x0
    6f94:	00 
    6f95:	0f 85 9d 00 00 00    	jne    7038 <sigint_processor+0x371>
    6f9b:	48 8d 3d d6 61 00 00 	lea    rdi,[rip+0x61d6]        # d178 <_IO_stdin_used+0x1178>
    6fa2:	e8 59 b5 ff ff       	call   2500 <puts@plt>
    6fa7:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    6fae:	48 89 c7             	mov    rdi,rax
    6fb1:	e8 9a b5 ff ff       	call   2550 <fclose@plt>
    6fb6:	c7 85 c8 fe ff ff 00 	mov    DWORD PTR [rbp-0x138],0x0
    6fbd:	00 00 00 
    6fc0:	eb 63                	jmp    7025 <sigint_processor+0x35e>
    6fc2:	8b 85 c8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x138]
    6fc8:	48 63 d0             	movsxd rdx,eax
    6fcb:	48 89 d0             	mov    rax,rdx
    6fce:	48 c1 e0 04          	shl    rax,0x4
    6fd2:	48 01 d0             	add    rax,rdx
    6fd5:	48 01 c0             	add    rax,rax
    6fd8:	48 8d 50 10          	lea    rdx,[rax+0x10]
    6fdc:	48 8d 05 9d 0b 10 00 	lea    rax,[rip+0x100b9d]        # 107b80 <arpcache>
    6fe3:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    6fe7:	8b 85 c8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x138]
    6fed:	48 63 d0             	movsxd rdx,eax
    6ff0:	48 89 d0             	mov    rax,rdx
    6ff3:	48 c1 e0 04          	shl    rax,0x4
    6ff7:	48 01 d0             	add    rax,rdx
    6ffa:	48 01 c0             	add    rax,rax
    6ffd:	48 8d 15 7c 0b 10 00 	lea    rdx,[rip+0x100b7c]        # 107b80 <arpcache>
    7004:	48 01 d0             	add    rax,rdx
    7007:	48 89 ca             	mov    rdx,rcx
    700a:	48 89 c6             	mov    rsi,rax
    700d:	48 8d 3d ab 61 00 00 	lea    rdi,[rip+0x61ab]        # d1bf <_IO_stdin_used+0x11bf>
    7014:	b8 00 00 00 00       	mov    eax,0x0
    7019:	e8 a2 b5 ff ff       	call   25c0 <printf@plt>
    701e:	83 85 c8 fe ff ff 01 	add    DWORD PTR [rbp-0x138],0x1
    7025:	8b 05 f1 9f 00 00    	mov    eax,DWORD PTR [rip+0x9ff1]        # 1101c <arp_entries>
    702b:	39 85 c8 fe ff ff    	cmp    DWORD PTR [rbp-0x138],eax
    7031:	7e 8f                	jle    6fc2 <sigint_processor+0x2fb>
    7033:	e9 da 00 00 00       	jmp    7112 <sigint_processor+0x44b>
    7038:	c7 85 cc fe ff ff 00 	mov    DWORD PTR [rbp-0x134],0x0
    703f:	00 00 00 
    7042:	eb 67                	jmp    70ab <sigint_processor+0x3e4>
    7044:	8b 85 cc fe ff ff    	mov    eax,DWORD PTR [rbp-0x134]
    704a:	48 63 d0             	movsxd rdx,eax
    704d:	48 89 d0             	mov    rax,rdx
    7050:	48 c1 e0 04          	shl    rax,0x4
    7054:	48 01 d0             	add    rax,rdx
    7057:	48 01 c0             	add    rax,rax
    705a:	48 8d 50 10          	lea    rdx,[rax+0x10]
    705e:	48 8d 05 1b 0b 10 00 	lea    rax,[rip+0x100b1b]        # 107b80 <arpcache>
    7065:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    7069:	8b 85 cc fe ff ff    	mov    eax,DWORD PTR [rbp-0x134]
    706f:	48 63 d0             	movsxd rdx,eax
    7072:	48 89 d0             	mov    rax,rdx
    7075:	48 c1 e0 04          	shl    rax,0x4
    7079:	48 01 d0             	add    rax,rdx
    707c:	48 01 c0             	add    rax,rax
    707f:	48 8d 15 fa 0a 10 00 	lea    rdx,[rip+0x100afa]        # 107b80 <arpcache>
    7086:	48 01 c2             	add    rdx,rax
    7089:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    7090:	48 8d 35 32 61 00 00 	lea    rsi,[rip+0x6132]        # d1c9 <_IO_stdin_used+0x11c9>
    7097:	48 89 c7             	mov    rdi,rax
    709a:	b8 00 00 00 00       	mov    eax,0x0
    709f:	e8 fc b5 ff ff       	call   26a0 <fprintf@plt>
    70a4:	83 85 cc fe ff ff 01 	add    DWORD PTR [rbp-0x134],0x1
    70ab:	8b 05 6b 9f 00 00    	mov    eax,DWORD PTR [rip+0x9f6b]        # 1101c <arp_entries>
    70b1:	39 85 cc fe ff ff    	cmp    DWORD PTR [rbp-0x134],eax
    70b7:	7e 8b                	jle    7044 <sigint_processor+0x37d>
    70b9:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    70c0:	48 89 c7             	mov    rdi,rax
    70c3:	e8 88 b4 ff ff       	call   2550 <fclose@plt>
    70c8:	c7 85 d0 fe ff ff 00 	mov    DWORD PTR [rbp-0x130],0x0
    70cf:	00 00 00 
    70d2:	eb 2f                	jmp    7103 <sigint_processor+0x43c>
    70d4:	8b 85 d0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x130]
    70da:	48 98                	cdqe   
    70dc:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    70e3:	00 
    70e4:	48 8d 05 55 08 10 00 	lea    rax,[rip+0x100855]        # 107940 <threads>
    70eb:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    70ef:	be 00 00 00 00       	mov    esi,0x0
    70f4:	48 89 c7             	mov    rdi,rax
    70f7:	e8 a4 b6 ff ff       	call   27a0 <pthread_join@plt>
    70fc:	83 85 d0 fe ff ff 01 	add    DWORD PTR [rbp-0x130],0x1
    7103:	8b 05 77 9f 00 00    	mov    eax,DWORD PTR [rip+0x9f77]        # 11080 <thread_count>
    7109:	39 85 d0 fe ff ff    	cmp    DWORD PTR [rbp-0x130],eax
    710f:	7c c3                	jl     70d4 <sigint_processor+0x40d>
    7111:	90                   	nop
    7112:	bf 00 00 00 00       	mov    edi,0x0
    7117:	e8 24 b7 ff ff       	call   2840 <exit@plt>

000000000000711c <print_help_and_exit>:
    711c:	f3 0f 1e fa          	endbr64 
    7120:	55                   	push   rbp
    7121:	48 89 e5             	mov    rbp,rsp
    7124:	48 8d 35 a5 60 00 00 	lea    rsi,[rip+0x60a5]        # d1d0 <_IO_stdin_used+0x11d0>
    712b:	48 8d 3d a6 60 00 00 	lea    rdi,[rip+0x60a6]        # d1d8 <_IO_stdin_used+0x11d8>
    7132:	b8 00 00 00 00       	mov    eax,0x0
    7137:	e8 84 b4 ff ff       	call   25c0 <printf@plt>
    713c:	bf 00 00 00 00       	mov    edi,0x0
    7141:	e8 fa b6 ff ff       	call   2840 <exit@plt>

0000000000007146 <print_cpu_info>:
    7146:	f3 0f 1e fa          	endbr64 
    714a:	55                   	push   rbp
    714b:	48 89 e5             	mov    rbp,rsp
    714e:	53                   	push   rbx
    714f:	48 81 ec 48 02 00 00 	sub    rsp,0x248
    7156:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    715d:	00 00 
    715f:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    7163:	31 c0                	xor    eax,eax
    7165:	48 8d 35 f3 60 00 00 	lea    rsi,[rip+0x60f3]        # d25f <_IO_stdin_used+0x125f>
    716c:	48 8d 3d ef 60 00 00 	lea    rdi,[rip+0x60ef]        # d262 <_IO_stdin_used+0x1262>
    7173:	e8 f8 b5 ff ff       	call   2770 <fopen@plt>
    7178:	48 89 85 d8 fd ff ff 	mov    QWORD PTR [rbp-0x228],rax
    717f:	48 c7 85 c8 fd ff ff 	mov    QWORD PTR [rbp-0x238],0x0
    7186:	00 00 00 00 
    718a:	48 c7 85 d0 fd ff ff 	mov    QWORD PTR [rbp-0x230],0x0
    7191:	00 00 00 00 
    7195:	c7 85 bc fd ff ff 00 	mov    DWORD PTR [rbp-0x244],0x0
    719c:	00 00 00 
    719f:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    71a6:	ba 00 02 00 00       	mov    edx,0x200
    71ab:	be 00 00 00 00       	mov    esi,0x0
    71b0:	48 89 c7             	mov    rdi,rax
    71b3:	e8 48 b4 ff ff       	call   2600 <memset@plt>
    71b8:	e9 b4 00 00 00       	jmp    7271 <print_cpu_info+0x12b>
    71bd:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    71c4:	ba 0a 00 00 00       	mov    edx,0xa
    71c9:	48 89 c6             	mov    rsi,rax
    71cc:	48 8d 3d 9d 60 00 00 	lea    rdi,[rip+0x609d]        # d270 <_IO_stdin_used+0x1270>
    71d3:	e8 e8 b2 ff ff       	call   24c0 <strncmp@plt>
    71d8:	85 c0                	test   eax,eax
    71da:	0f 85 91 00 00 00    	jne    7271 <print_cpu_info+0x12b>
    71e0:	c7 85 c0 fd ff ff 00 	mov    DWORD PTR [rbp-0x240],0x0
    71e7:	00 00 00 
    71ea:	c7 85 c4 fd ff ff 00 	mov    DWORD PTR [rbp-0x23c],0x0
    71f1:	00 00 00 
    71f4:	eb 2e                	jmp    7224 <print_cpu_info+0xde>
    71f6:	48 8b 95 c8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x238]
    71fd:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    7203:	48 98                	cdqe   
    7205:	48 01 d0             	add    rax,rdx
    7208:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    720b:	3c 3a                	cmp    al,0x3a
    720d:	75 0e                	jne    721d <print_cpu_info+0xd7>
    720f:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    7215:	89 85 c0 fd ff ff    	mov    DWORD PTR [rbp-0x240],eax
    721b:	eb 24                	jmp    7241 <print_cpu_info+0xfb>
    721d:	83 85 c4 fd ff ff 01 	add    DWORD PTR [rbp-0x23c],0x1
    7224:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    722a:	48 63 d8             	movsxd rbx,eax
    722d:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    7234:	48 89 c7             	mov    rdi,rax
    7237:	e8 24 b3 ff ff       	call   2560 <strlen@plt>
    723c:	48 39 c3             	cmp    rbx,rax
    723f:	72 b5                	jb     71f6 <print_cpu_info+0xb0>
    7241:	83 85 bc fd ff ff 01 	add    DWORD PTR [rbp-0x244],0x1
    7248:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    724f:	8b 95 c0 fd ff ff    	mov    edx,DWORD PTR [rbp-0x240]
    7255:	48 63 d2             	movsxd rdx,edx
    7258:	48 83 c2 02          	add    rdx,0x2
    725c:	48 01 c2             	add    rdx,rax
    725f:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    7266:	48 89 d6             	mov    rsi,rdx
    7269:	48 89 c7             	mov    rdi,rax
    726c:	e8 8f b5 ff ff       	call   2800 <strcat@plt>
    7271:	48 8b 95 d8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x228]
    7278:	48 8d b5 d0 fd ff ff 	lea    rsi,[rbp-0x230]
    727f:	48 8d 85 c8 fd ff ff 	lea    rax,[rbp-0x238]
    7286:	48 89 d1             	mov    rcx,rdx
    7289:	ba 0a 00 00 00       	mov    edx,0xa
    728e:	48 89 c7             	mov    rdi,rax
    7291:	e8 da b5 ff ff       	call   2870 <getdelim@plt>
    7296:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
    729a:	0f 85 1d ff ff ff    	jne    71bd <print_cpu_info+0x77>
    72a0:	48 8d 95 e0 fd ff ff 	lea    rdx,[rbp-0x220]
    72a7:	8b 85 bc fd ff ff    	mov    eax,DWORD PTR [rbp-0x244]
    72ad:	89 c6                	mov    esi,eax
    72af:	48 8d 3d c5 5f 00 00 	lea    rdi,[rip+0x5fc5]        # d27b <_IO_stdin_used+0x127b>
    72b6:	b8 00 00 00 00       	mov    eax,0x0
    72bb:	e8 00 b3 ff ff       	call   25c0 <printf@plt>
    72c0:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    72c7:	48 89 c7             	mov    rdi,rax
    72ca:	e8 a1 b1 ff ff       	call   2470 <free@plt>
    72cf:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    72d6:	48 89 c7             	mov    rdi,rax
    72d9:	e8 72 b2 ff ff       	call   2550 <fclose@plt>
    72de:	90                   	nop
    72df:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    72e3:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    72ea:	00 00 
    72ec:	74 05                	je     72f3 <print_cpu_info+0x1ad>
    72ee:	e8 8d b2 ff ff       	call   2580 <__stack_chk_fail@plt>
    72f3:	48 81 c4 48 02 00 00 	add    rsp,0x248
    72fa:	5b                   	pop    rbx
    72fb:	5d                   	pop    rbp
    72fc:	c3                   	ret    

00000000000072fd <print_logo>:
    72fd:	f3 0f 1e fa          	endbr64 
    7301:	55                   	push   rbp
    7302:	48 89 e5             	mov    rbp,rsp
    7305:	48 8d 3d 84 5f 00 00 	lea    rdi,[rip+0x5f84]        # d290 <_IO_stdin_used+0x1290>
    730c:	e8 ef b1 ff ff       	call   2500 <puts@plt>
    7311:	90                   	nop
    7312:	5d                   	pop    rbp
    7313:	c3                   	ret    

0000000000007314 <start_nsh_server>:
    7314:	f3 0f 1e fa          	endbr64 
    7318:	55                   	push   rbp
    7319:	48 89 e5             	mov    rbp,rsp
    731c:	48 83 ec 10          	sub    rsp,0x10
    7320:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7327:	00 00 
    7329:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    732d:	31 c0                	xor    eax,eax
    732f:	48 8d 45 f0          	lea    rax,[rbp-0x10]
    7333:	b9 00 00 00 00       	mov    ecx,0x0
    7338:	48 8d 15 71 00 00 00 	lea    rdx,[rip+0x71]        # 73b0 <actually_start_nsh_server>
    733f:	be 00 00 00 00       	mov    esi,0x0
    7344:	48 89 c7             	mov    rdi,rax
    7347:	e8 44 b1 ff ff       	call   2490 <pthread_create@plt>
    734c:	90                   	nop
    734d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7351:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    7358:	00 00 
    735a:	74 05                	je     7361 <start_nsh_server+0x4d>
    735c:	e8 1f b2 ff ff       	call   2580 <__stack_chk_fail@plt>
    7361:	c9                   	leave  
    7362:	c3                   	ret    

0000000000007363 <rnstrip>:
    7363:	f3 0f 1e fa          	endbr64 
    7367:	55                   	push   rbp
    7368:	48 89 e5             	mov    rbp,rsp
    736b:	48 83 ec 10          	sub    rsp,0x10
    736f:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7373:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7377:	48 8d 35 8a 60 00 00 	lea    rsi,[rip+0x608a]        # d408 <_IO_stdin_used+0x1408>
    737e:	48 89 c7             	mov    rdi,rax
    7381:	e8 ba b2 ff ff       	call   2640 <strcspn@plt>
    7386:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    738a:	48 01 d0             	add    rax,rdx
    738d:	c6 00 00             	mov    BYTE PTR [rax],0x0
    7390:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7394:	48 8d 35 6f 60 00 00 	lea    rsi,[rip+0x606f]        # d40a <_IO_stdin_used+0x140a>
    739b:	48 89 c7             	mov    rdi,rax
    739e:	e8 9d b2 ff ff       	call   2640 <strcspn@plt>
    73a3:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    73a7:	48 01 d0             	add    rax,rdx
    73aa:	c6 00 00             	mov    BYTE PTR [rax],0x0
    73ad:	90                   	nop
    73ae:	c9                   	leave  
    73af:	c3                   	ret    

00000000000073b0 <actually_start_nsh_server>:
    73b0:	f3 0f 1e fa          	endbr64 
    73b4:	55                   	push   rbp
    73b5:	48 89 e5             	mov    rbp,rsp
    73b8:	48 83 ec 50          	sub    rsp,0x50
    73bc:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    73c3:	00 00 
    73c5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    73c9:	31 c0                	xor    eax,eax
    73cb:	c7 45 bc 10 00 00 00 	mov    DWORD PTR [rbp-0x44],0x10
    73d2:	ba 00 00 00 00       	mov    edx,0x0
    73d7:	be 01 00 00 00       	mov    esi,0x1
    73dc:	bf 02 00 00 00       	mov    edi,0x2
    73e1:	e8 aa b4 ff ff       	call   2890 <socket@plt>
    73e6:	89 45 c0             	mov    DWORD PTR [rbp-0x40],eax
    73e9:	83 7d c0 00          	cmp    DWORD PTR [rbp-0x40],0x0
    73ed:	75 16                	jne    7405 <actually_start_nsh_server+0x55>
    73ef:	48 8d 3d 1a 60 00 00 	lea    rdi,[rip+0x601a]        # d410 <_IO_stdin_used+0x1410>
    73f6:	e8 05 b1 ff ff       	call   2500 <puts@plt>
    73fb:	bf 01 00 00 00       	mov    edi,0x1
    7400:	e8 3b b4 ff ff       	call   2840 <exit@plt>
    7405:	48 8d 55 bc          	lea    rdx,[rbp-0x44]
    7409:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    740c:	41 b8 04 00 00 00    	mov    r8d,0x4
    7412:	48 89 d1             	mov    rcx,rdx
    7415:	ba 02 00 00 00       	mov    edx,0x2
    741a:	be 01 00 00 00       	mov    esi,0x1
    741f:	89 c7                	mov    edi,eax
    7421:	e8 ea b0 ff ff       	call   2510 <setsockopt@plt>
    7426:	85 c0                	test   eax,eax
    7428:	74 16                	je     7440 <actually_start_nsh_server+0x90>
    742a:	48 8d 3d 07 60 00 00 	lea    rdi,[rip+0x6007]        # d438 <_IO_stdin_used+0x1438>
    7431:	e8 ca b0 ff ff       	call   2500 <puts@plt>
    7436:	bf 01 00 00 00       	mov    edi,0x1
    743b:	e8 00 b4 ff ff       	call   2840 <exit@plt>
    7440:	66 c7 45 e0 02 00    	mov    WORD PTR [rbp-0x20],0x2
    7446:	bf 00 00 00 00       	mov    edi,0x0
    744b:	e8 a0 b1 ff ff       	call   25f0 <htonl@plt>
    7450:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
    7453:	bf 81 02 00 00       	mov    edi,0x281
    7458:	e8 33 b1 ff ff       	call   2590 <htons@plt>
    745d:	66 89 45 e2          	mov    WORD PTR [rbp-0x1e],ax
    7461:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
    7465:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    7468:	ba 10 00 00 00       	mov    edx,0x10
    746d:	48 89 ce             	mov    rsi,rcx
    7470:	89 c7                	mov    edi,eax
    7472:	e8 e9 b2 ff ff       	call   2760 <bind@plt>
    7477:	85 c0                	test   eax,eax
    7479:	79 16                	jns    7491 <actually_start_nsh_server+0xe1>
    747b:	48 8d 3d de 5f 00 00 	lea    rdi,[rip+0x5fde]        # d460 <_IO_stdin_used+0x1460>
    7482:	e8 79 b0 ff ff       	call   2500 <puts@plt>
    7487:	bf 01 00 00 00       	mov    edi,0x1
    748c:	e8 af b3 ff ff       	call   2840 <exit@plt>
    7491:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    7494:	be 05 00 00 00       	mov    esi,0x5
    7499:	89 c7                	mov    edi,eax
    749b:	e8 70 b2 ff ff       	call   2710 <listen@plt>
    74a0:	85 c0                	test   eax,eax
    74a2:	79 16                	jns    74ba <actually_start_nsh_server+0x10a>
    74a4:	48 8d 3d ed 5f 00 00 	lea    rdi,[rip+0x5fed]        # d498 <_IO_stdin_used+0x1498>
    74ab:	e8 50 b0 ff ff       	call   2500 <puts@plt>
    74b0:	bf 01 00 00 00       	mov    edi,0x1
    74b5:	e8 86 b3 ff ff       	call   2840 <exit@plt>
    74ba:	48 8d 55 bc          	lea    rdx,[rbp-0x44]
    74be:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
    74c2:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    74c5:	48 89 ce             	mov    rsi,rcx
    74c8:	89 c7                	mov    edi,eax
    74ca:	e8 01 b3 ff ff       	call   27d0 <accept@plt>
    74cf:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    74d2:	83 7d c4 00          	cmp    DWORD PTR [rbp-0x3c],0x0
    74d6:	79 20                	jns    74f8 <actually_start_nsh_server+0x148>
    74d8:	b8 00 00 00 00       	mov    eax,0x0
    74dd:	e8 7e be ff ff       	call   3360 <get_formated_time>
    74e2:	48 89 c6             	mov    rsi,rax
    74e5:	48 8d 3d dc 5f 00 00 	lea    rdi,[rip+0x5fdc]        # d4c8 <_IO_stdin_used+0x14c8>
    74ec:	b8 00 00 00 00       	mov    eax,0x0
    74f1:	e8 ca b0 ff ff       	call   25c0 <printf@plt>
    74f6:	eb c2                	jmp    74ba <actually_start_nsh_server+0x10a>
    74f8:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    74fb:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
    74fe:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    7502:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    7506:	48 8d 55 d0          	lea    rdx,[rbp-0x30]
    750a:	48 8d 45 c8          	lea    rax,[rbp-0x38]
    750e:	48 89 d1             	mov    rcx,rdx
    7511:	48 8d 15 0f 00 00 00 	lea    rdx,[rip+0xf]        # 7527 <accept_cmd>
    7518:	be 00 00 00 00       	mov    esi,0x0
    751d:	48 89 c7             	mov    rdi,rax
    7520:	e8 6b af ff ff       	call   2490 <pthread_create@plt>
    7525:	eb 93                	jmp    74ba <actually_start_nsh_server+0x10a>

0000000000007527 <accept_cmd>:
    7527:	f3 0f 1e fa          	endbr64 
    752b:	55                   	push   rbp
    752c:	48 89 e5             	mov    rbp,rsp
    752f:	48 83 ec 30          	sub    rsp,0x30
    7533:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    7537:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    753b:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    753f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    7543:	8b 00                	mov    eax,DWORD PTR [rax]
    7545:	64 48 8b 14 25 00 00 	mov    rdx,QWORD PTR fs:0x0
    754c:	00 00 
    754e:	48 8d 8a 00 fc ff ff 	lea    rcx,[rdx-0x400]
    7555:	ba 00 04 00 00       	mov    edx,0x400
    755a:	48 89 ce             	mov    rsi,rcx
    755d:	89 c7                	mov    edi,eax
    755f:	e8 ec b0 ff ff       	call   2650 <read@plt>
    7564:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
    7567:	83 7d ec 00          	cmp    DWORD PTR [rbp-0x14],0x0
    756b:	7e 45                	jle    75b2 <accept_cmd+0x8b>
    756d:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    7574:	00 00 
    7576:	48 05 00 fc ff ff    	add    rax,0xfffffffffffffc00
    757c:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7580:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7584:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    7587:	0f b6 c0             	movzx  eax,al
    758a:	89 c6                	mov    esi,eax
    758c:	48 8d 3d 57 5f 00 00 	lea    rdi,[rip+0x5f57]        # d4ea <_IO_stdin_used+0x14ea>
    7593:	b8 00 00 00 00       	mov    eax,0x0
    7598:	e8 23 b0 ff ff       	call   25c0 <printf@plt>
    759d:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    75a1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    75a5:	48 89 d6             	mov    rsi,rdx
    75a8:	48 89 c7             	mov    rdi,rax
    75ab:	e8 99 0c 00 00       	call   8249 <process_opcode>
    75b0:	eb 8d                	jmp    753f <accept_cmd+0x18>
    75b2:	90                   	nop
    75b3:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    75b7:	8b 00                	mov    eax,DWORD PTR [rax]
    75b9:	89 c7                	mov    edi,eax
    75bb:	e8 60 b0 ff ff       	call   2620 <close@plt>
    75c0:	90                   	nop
    75c1:	c9                   	leave  
    75c2:	c3                   	ret    

00000000000075c3 <tcp_rst_portscan_detect>:
    75c3:	f3 0f 1e fa          	endbr64 
    75c7:	55                   	push   rbp
    75c8:	48 89 e5             	mov    rbp,rsp
    75cb:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    75d2:	48 89 bd c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rdi
    75d9:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    75e0:	00 00 
    75e2:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    75e6:	31 c0                	xor    eax,eax
    75e8:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    75ef:	00 00 00 
    75f2:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    75f9:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    75ff:	83 f8 1e             	cmp    eax,0x1e
    7602:	74 0a                	je     760e <tcp_rst_portscan_detect+0x4b>
    7604:	b8 00 00 00 00       	mov    eax,0x0
    7609:	e9 8d 01 00 00       	jmp    779b <tcp_rst_portscan_detect+0x1d8>
    760e:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7615:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    761b:	83 e8 01             	sub    eax,0x1
    761e:	89 85 d8 fe ff ff    	mov    DWORD PTR [rbp-0x128],eax
    7624:	eb 6c                	jmp    7692 <tcp_rst_portscan_detect+0xcf>
    7626:	8b 85 d8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x128]
    762c:	89 85 e4 fe ff ff    	mov    DWORD PTR [rbp-0x11c],eax
    7632:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7639:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    763f:	48 63 d2             	movsxd rdx,edx
    7642:	48 83 c2 28          	add    rdx,0x28
    7646:	48 8b 44 d0 10       	mov    rax,QWORD PTR [rax+rdx*8+0x10]
    764b:	89 c1                	mov    ecx,eax
    764d:	83 ad d8 fe ff ff 01 	sub    DWORD PTR [rbp-0x128],0x1
    7654:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    765b:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    7661:	48 63 d2             	movsxd rdx,edx
    7664:	48 83 c2 28          	add    rdx,0x28
    7668:	48 8b 44 d0 10       	mov    rax,QWORD PTR [rax+rdx*8+0x10]
    766d:	29 c1                	sub    ecx,eax
    766f:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
    7675:	8d 50 01             	lea    edx,[rax+0x1]
    7678:	89 95 d4 fe ff ff    	mov    DWORD PTR [rbp-0x12c],edx
    767e:	89 ca                	mov    edx,ecx
    7680:	48 98                	cdqe   
    7682:	89 94 85 f0 fe ff ff 	mov    DWORD PTR [rbp+rax*4-0x110],edx
    7689:	83 bd e4 fe ff ff 01 	cmp    DWORD PTR [rbp-0x11c],0x1
    7690:	74 0b                	je     769d <tcp_rst_portscan_detect+0xda>
    7692:	83 bd d8 fe ff ff 00 	cmp    DWORD PTR [rbp-0x128],0x0
    7699:	75 8b                	jne    7626 <tcp_rst_portscan_detect+0x63>
    769b:	eb 01                	jmp    769e <tcp_rst_portscan_detect+0xdb>
    769d:	90                   	nop
    769e:	c7 85 dc fe ff ff 00 	mov    DWORD PTR [rbp-0x124],0x0
    76a5:	00 00 00 
    76a8:	c7 85 e0 fe ff ff 00 	mov    DWORD PTR [rbp-0x120],0x0
    76af:	00 00 00 
    76b2:	eb 24                	jmp    76d8 <tcp_rst_portscan_detect+0x115>
    76b4:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    76ba:	48 98                	cdqe   
    76bc:	8b 84 85 f0 fe ff ff 	mov    eax,DWORD PTR [rbp+rax*4-0x110]
    76c3:	3d b3 b7 b4 00       	cmp    eax,0xb4b7b3
    76c8:	7f 07                	jg     76d1 <tcp_rst_portscan_detect+0x10e>
    76ca:	83 85 dc fe ff ff 01 	add    DWORD PTR [rbp-0x124],0x1
    76d1:	83 85 e0 fe ff ff 01 	add    DWORD PTR [rbp-0x120],0x1
    76d8:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    76de:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    76e4:	7c ce                	jl     76b4 <tcp_rst_portscan_detect+0xf1>
    76e6:	8b 85 dc fe ff ff    	mov    eax,DWORD PTR [rbp-0x124]
    76ec:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    76f2:	0f 85 9e 00 00 00    	jne    7796 <tcp_rst_portscan_detect+0x1d3>
    76f8:	48 8b 05 31 99 00 00 	mov    rax,QWORD PTR [rip+0x9931]        # 11030 <def_log_file>
    76ff:	48 8d 35 f2 5d 00 00 	lea    rsi,[rip+0x5df2]        # d4f8 <_IO_stdin_used+0x14f8>
    7706:	48 89 c7             	mov    rdi,rax
    7709:	e8 62 b0 ff ff       	call   2770 <fopen@plt>
    770e:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
    7715:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    771c:	48 83 c0 08          	add    rax,0x8
    7720:	48 89 c6             	mov    rsi,rax
    7723:	48 8d 3d d6 5d 00 00 	lea    rdi,[rip+0x5dd6]        # d500 <_IO_stdin_used+0x1500>
    772a:	b8 00 00 00 00       	mov    eax,0x0
    772f:	e8 8c ae ff ff       	call   25c0 <printf@plt>
    7734:	b8 00 00 00 00       	mov    eax,0x0
    7739:	e8 22 bc ff ff       	call   3360 <get_formated_time>
    773e:	48 89 c1             	mov    rcx,rax
    7741:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7748:	48 8d 50 08          	lea    rdx,[rax+0x8]
    774c:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    7753:	48 8d 35 d6 5d 00 00 	lea    rsi,[rip+0x5dd6]        # d530 <_IO_stdin_used+0x1530>
    775a:	48 89 c7             	mov    rdi,rax
    775d:	b8 00 00 00 00       	mov    eax,0x0
    7762:	e8 c9 b0 ff ff       	call   2830 <sprintf@plt>
    7767:	48 8b 95 e8 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x118]
    776e:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    7775:	48 89 d6             	mov    rsi,rdx
    7778:	48 89 c7             	mov    rdi,rax
    777b:	e8 60 ae ff ff       	call   25e0 <fputs@plt>
    7780:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    7787:	48 89 c7             	mov    rdi,rax
    778a:	e8 c1 ad ff ff       	call   2550 <fclose@plt>
    778f:	b8 01 00 00 00       	mov    eax,0x1
    7794:	eb 05                	jmp    779b <tcp_rst_portscan_detect+0x1d8>
    7796:	b8 00 00 00 00       	mov    eax,0x0
    779b:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    779f:	64 48 33 34 25 28 00 	xor    rsi,QWORD PTR fs:0x28
    77a6:	00 00 
    77a8:	74 05                	je     77af <tcp_rst_portscan_detect+0x1ec>
    77aa:	e8 d1 ad ff ff       	call   2580 <__stack_chk_fail@plt>
    77af:	c9                   	leave  
    77b0:	c3                   	ret    

00000000000077b1 <fin_rst_portscan_detect>:
    77b1:	f3 0f 1e fa          	endbr64 
    77b5:	55                   	push   rbp
    77b6:	48 89 e5             	mov    rbp,rsp
    77b9:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    77c0:	48 89 bd c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rdi
    77c7:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    77ce:	00 00 
    77d0:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    77d4:	31 c0                	xor    eax,eax
    77d6:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    77dd:	00 00 00 
    77e0:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    77e7:	8b 40 50             	mov    eax,DWORD PTR [rax+0x50]
    77ea:	83 f8 1e             	cmp    eax,0x1e
    77ed:	74 0a                	je     77f9 <fin_rst_portscan_detect+0x48>
    77ef:	b8 00 00 00 00       	mov    eax,0x0
    77f4:	e9 8a 01 00 00       	jmp    7983 <fin_rst_portscan_detect+0x1d2>
    77f9:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7800:	8b 40 50             	mov    eax,DWORD PTR [rax+0x50]
    7803:	83 e8 01             	sub    eax,0x1
    7806:	89 85 d8 fe ff ff    	mov    DWORD PTR [rbp-0x128],eax
    780c:	eb 6c                	jmp    787a <fin_rst_portscan_detect+0xc9>
    780e:	8b 85 d8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x128]
    7814:	89 85 e4 fe ff ff    	mov    DWORD PTR [rbp-0x11c],eax
    781a:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7821:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    7827:	48 63 d2             	movsxd rdx,edx
    782a:	48 83 c2 0a          	add    rdx,0xa
    782e:	48 8b 44 d0 08       	mov    rax,QWORD PTR [rax+rdx*8+0x8]
    7833:	89 c1                	mov    ecx,eax
    7835:	83 ad d8 fe ff ff 01 	sub    DWORD PTR [rbp-0x128],0x1
    783c:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7843:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    7849:	48 63 d2             	movsxd rdx,edx
    784c:	48 83 c2 0a          	add    rdx,0xa
    7850:	48 8b 44 d0 08       	mov    rax,QWORD PTR [rax+rdx*8+0x8]
    7855:	29 c1                	sub    ecx,eax
    7857:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
    785d:	8d 50 01             	lea    edx,[rax+0x1]
    7860:	89 95 d4 fe ff ff    	mov    DWORD PTR [rbp-0x12c],edx
    7866:	89 ca                	mov    edx,ecx
    7868:	48 98                	cdqe   
    786a:	89 94 85 f0 fe ff ff 	mov    DWORD PTR [rbp+rax*4-0x110],edx
    7871:	83 bd e4 fe ff ff 01 	cmp    DWORD PTR [rbp-0x11c],0x1
    7878:	74 0b                	je     7885 <fin_rst_portscan_detect+0xd4>
    787a:	83 bd d8 fe ff ff 00 	cmp    DWORD PTR [rbp-0x128],0x0
    7881:	75 8b                	jne    780e <fin_rst_portscan_detect+0x5d>
    7883:	eb 01                	jmp    7886 <fin_rst_portscan_detect+0xd5>
    7885:	90                   	nop
    7886:	c7 85 dc fe ff ff 00 	mov    DWORD PTR [rbp-0x124],0x0
    788d:	00 00 00 
    7890:	c7 85 e0 fe ff ff 00 	mov    DWORD PTR [rbp-0x120],0x0
    7897:	00 00 00 
    789a:	eb 24                	jmp    78c0 <fin_rst_portscan_detect+0x10f>
    789c:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    78a2:	48 98                	cdqe   
    78a4:	8b 84 85 f0 fe ff ff 	mov    eax,DWORD PTR [rbp+rax*4-0x110]
    78ab:	3d 73 7e e2 00       	cmp    eax,0xe27e73
    78b0:	7f 07                	jg     78b9 <fin_rst_portscan_detect+0x108>
    78b2:	83 85 dc fe ff ff 01 	add    DWORD PTR [rbp-0x124],0x1
    78b9:	83 85 e0 fe ff ff 01 	add    DWORD PTR [rbp-0x120],0x1
    78c0:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    78c6:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    78cc:	7c ce                	jl     789c <fin_rst_portscan_detect+0xeb>
    78ce:	8b 85 dc fe ff ff    	mov    eax,DWORD PTR [rbp-0x124]
    78d4:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    78da:	0f 85 9e 00 00 00    	jne    797e <fin_rst_portscan_detect+0x1cd>
    78e0:	48 8b 05 49 97 00 00 	mov    rax,QWORD PTR [rip+0x9749]        # 11030 <def_log_file>
    78e7:	48 8d 35 0a 5c 00 00 	lea    rsi,[rip+0x5c0a]        # d4f8 <_IO_stdin_used+0x14f8>
    78ee:	48 89 c7             	mov    rdi,rax
    78f1:	e8 7a ae ff ff       	call   2770 <fopen@plt>
    78f6:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
    78fd:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7904:	48 83 c0 08          	add    rax,0x8
    7908:	48 89 c6             	mov    rsi,rax
    790b:	48 8d 3d 46 5c 00 00 	lea    rdi,[rip+0x5c46]        # d558 <_IO_stdin_used+0x1558>
    7912:	b8 00 00 00 00       	mov    eax,0x0
    7917:	e8 a4 ac ff ff       	call   25c0 <printf@plt>
    791c:	b8 00 00 00 00       	mov    eax,0x0
    7921:	e8 3a ba ff ff       	call   3360 <get_formated_time>
    7926:	48 89 c1             	mov    rcx,rax
    7929:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7930:	48 8d 50 08          	lea    rdx,[rax+0x8]
    7934:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    793b:	48 8d 35 46 5c 00 00 	lea    rsi,[rip+0x5c46]        # d588 <_IO_stdin_used+0x1588>
    7942:	48 89 c7             	mov    rdi,rax
    7945:	b8 00 00 00 00       	mov    eax,0x0
    794a:	e8 e1 ae ff ff       	call   2830 <sprintf@plt>
    794f:	48 8b 95 e8 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x118]
    7956:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    795d:	48 89 d6             	mov    rsi,rdx
    7960:	48 89 c7             	mov    rdi,rax
    7963:	e8 78 ac ff ff       	call   25e0 <fputs@plt>
    7968:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    796f:	48 89 c7             	mov    rdi,rax
    7972:	e8 d9 ab ff ff       	call   2550 <fclose@plt>
    7977:	b8 01 00 00 00       	mov    eax,0x1
    797c:	eb 05                	jmp    7983 <fin_rst_portscan_detect+0x1d2>
    797e:	b8 00 00 00 00       	mov    eax,0x0
    7983:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    7987:	64 48 33 34 25 28 00 	xor    rsi,QWORD PTR fs:0x28
    798e:	00 00 
    7990:	74 05                	je     7997 <fin_rst_portscan_detect+0x1e6>
    7992:	e8 e9 ab ff ff       	call   2580 <__stack_chk_fail@plt>
    7997:	c9                   	leave  
    7998:	c3                   	ret    

0000000000007999 <member_ready_for_scan>:
    7999:	f3 0f 1e fa          	endbr64 
    799d:	55                   	push   rbp
    799e:	48 89 e5             	mov    rbp,rsp
    79a1:	48 83 ec 10          	sub    rsp,0x10
    79a5:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    79ac:	eb 48                	jmp    79f6 <member_ready_for_scan+0x5d>
    79ae:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    79b1:	48 63 d0             	movsxd rdx,eax
    79b4:	48 89 d0             	mov    rax,rdx
    79b7:	48 c1 e0 02          	shl    rax,0x2
    79bb:	48 01 d0             	add    rax,rdx
    79be:	48 c1 e0 03          	shl    rax,0x3
    79c2:	48 01 d0             	add    rax,rdx
    79c5:	48 c1 e0 04          	shl    rax,0x4
    79c9:	48 8d 15 d0 b6 0e 00 	lea    rdx,[rip+0xeb6d0]        # f30a0 <watchlist>
    79d0:	48 01 d0             	add    rax,rdx
    79d3:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    79d7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    79db:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    79e1:	83 f8 1d             	cmp    eax,0x1d
    79e4:	76 0c                	jbe    79f2 <member_ready_for_scan+0x59>
    79e6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    79ea:	48 89 c7             	mov    rdi,rax
    79ed:	e8 d1 fb ff ff       	call   75c3 <tcp_rst_portscan_detect>
    79f2:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    79f6:	8b 05 1c 96 00 00    	mov    eax,DWORD PTR [rip+0x961c]        # 11018 <watchlist_num>
    79fc:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    79ff:	7e ad                	jle    79ae <member_ready_for_scan+0x15>
    7a01:	90                   	nop
    7a02:	90                   	nop
    7a03:	c9                   	leave  
    7a04:	c3                   	ret    

0000000000007a05 <member_exists>:
    7a05:	f3 0f 1e fa          	endbr64 
    7a09:	55                   	push   rbp
    7a0a:	48 89 e5             	mov    rbp,rsp
    7a0d:	48 83 ec 20          	sub    rsp,0x20
    7a11:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7a15:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7a1c:	eb 47                	jmp    7a65 <member_exists+0x60>
    7a1e:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7a21:	8d 50 01             	lea    edx,[rax+0x1]
    7a24:	89 55 fc             	mov    DWORD PTR [rbp-0x4],edx
    7a27:	48 63 d0             	movsxd rdx,eax
    7a2a:	48 89 d0             	mov    rax,rdx
    7a2d:	48 c1 e0 02          	shl    rax,0x2
    7a31:	48 01 d0             	add    rax,rdx
    7a34:	48 c1 e0 03          	shl    rax,0x3
    7a38:	48 01 d0             	add    rax,rdx
    7a3b:	48 c1 e0 04          	shl    rax,0x4
    7a3f:	48 8d 15 5a b6 0e 00 	lea    rdx,[rip+0xeb65a]        # f30a0 <watchlist>
    7a46:	48 01 d0             	add    rax,rdx
    7a49:	48 8d 50 08          	lea    rdx,[rax+0x8]
    7a4d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7a51:	48 89 c6             	mov    rsi,rax
    7a54:	48 89 d7             	mov    rdi,rdx
    7a57:	e8 24 ac ff ff       	call   2680 <strcmp@plt>
    7a5c:	85 c0                	test   eax,eax
    7a5e:	75 05                	jne    7a65 <member_exists+0x60>
    7a60:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7a63:	eb 10                	jmp    7a75 <member_exists+0x70>
    7a65:	8b 05 ad 95 00 00    	mov    eax,DWORD PTR [rip+0x95ad]        # 11018 <watchlist_num>
    7a6b:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7a6e:	7e ae                	jle    7a1e <member_exists+0x19>
    7a70:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7a75:	c9                   	leave  
    7a76:	c3                   	ret    

0000000000007a77 <init_member>:
    7a77:	f3 0f 1e fa          	endbr64 
    7a7b:	55                   	push   rbp
    7a7c:	48 89 e5             	mov    rbp,rsp
    7a7f:	48 83 ec 20          	sub    rsp,0x20
    7a83:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7a87:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7a8b:	48 89 c7             	mov    rdi,rax
    7a8e:	e8 72 ff ff ff       	call   7a05 <member_exists>
    7a93:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    7a96:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    7a9a:	74 42                	je     7ade <init_member+0x67>
    7a9c:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    7a9f:	48 63 d0             	movsxd rdx,eax
    7aa2:	48 89 d0             	mov    rax,rdx
    7aa5:	48 c1 e0 02          	shl    rax,0x2
    7aa9:	48 01 d0             	add    rax,rdx
    7aac:	48 c1 e0 03          	shl    rax,0x3
    7ab0:	48 01 d0             	add    rax,rdx
    7ab3:	48 c1 e0 04          	shl    rax,0x4
    7ab7:	48 8d 15 e2 b5 0e 00 	lea    rdx,[rip+0xeb5e2]        # f30a0 <watchlist>
    7abe:	48 01 d0             	add    rax,rdx
    7ac1:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7ac5:	bf 00 00 00 00       	mov    edi,0x0
    7aca:	e8 01 ac ff ff       	call   26d0 <time@plt>
    7acf:	48 89 c2             	mov    rdx,rax
    7ad2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7ad6:	48 89 10             	mov    QWORD PTR [rax],rdx
    7ad9:	e9 a8 00 00 00       	jmp    7b86 <init_member+0x10f>
    7ade:	48 8d 3d c8 5a 00 00 	lea    rdi,[rip+0x5ac8]        # d5ad <_IO_stdin_used+0x15ad>
    7ae5:	e8 1b ff ff ff       	call   7a05 <member_exists>
    7aea:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    7aed:	83 7d f4 00          	cmp    DWORD PTR [rbp-0xc],0x0
    7af1:	74 2b                	je     7b1e <init_member+0xa7>
    7af3:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    7af6:	48 63 d0             	movsxd rdx,eax
    7af9:	48 89 d0             	mov    rax,rdx
    7afc:	48 c1 e0 02          	shl    rax,0x2
    7b00:	48 01 d0             	add    rax,rdx
    7b03:	48 c1 e0 03          	shl    rax,0x3
    7b07:	48 01 d0             	add    rax,rdx
    7b0a:	48 c1 e0 04          	shl    rax,0x4
    7b0e:	48 8d 15 8b b5 0e 00 	lea    rdx,[rip+0xeb58b]        # f30a0 <watchlist>
    7b15:	48 01 d0             	add    rax,rdx
    7b18:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7b1c:	eb 3b                	jmp    7b59 <init_member+0xe2>
    7b1e:	8b 05 f4 94 00 00    	mov    eax,DWORD PTR [rip+0x94f4]        # 11018 <watchlist_num>
    7b24:	83 c0 01             	add    eax,0x1
    7b27:	89 05 eb 94 00 00    	mov    DWORD PTR [rip+0x94eb],eax        # 11018 <watchlist_num>
    7b2d:	8b 05 e5 94 00 00    	mov    eax,DWORD PTR [rip+0x94e5]        # 11018 <watchlist_num>
    7b33:	48 63 d0             	movsxd rdx,eax
    7b36:	48 89 d0             	mov    rax,rdx
    7b39:	48 c1 e0 02          	shl    rax,0x2
    7b3d:	48 01 d0             	add    rax,rdx
    7b40:	48 c1 e0 03          	shl    rax,0x3
    7b44:	48 01 d0             	add    rax,rdx
    7b47:	48 c1 e0 04          	shl    rax,0x4
    7b4b:	48 8d 15 4e b5 0e 00 	lea    rdx,[rip+0xeb54e]        # f30a0 <watchlist>
    7b52:	48 01 d0             	add    rax,rdx
    7b55:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7b59:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7b5d:	ba 08 00 00 00       	mov    edx,0x8
    7b62:	be 00 00 00 00       	mov    esi,0x0
    7b67:	48 89 c7             	mov    rdi,rax
    7b6a:	e8 91 aa ff ff       	call   2600 <memset@plt>
    7b6f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7b73:	48 8d 50 08          	lea    rdx,[rax+0x8]
    7b77:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7b7b:	48 89 c6             	mov    rsi,rax
    7b7e:	48 89 d7             	mov    rdi,rdx
    7b81:	e8 4a a9 ff ff       	call   24d0 <strcpy@plt>
    7b86:	c9                   	leave  
    7b87:	c3                   	ret    

0000000000007b88 <ready_for_clean>:
    7b88:	f3 0f 1e fa          	endbr64 
    7b8c:	55                   	push   rbp
    7b8d:	48 89 e5             	mov    rbp,rsp
    7b90:	48 83 ec 10          	sub    rsp,0x10
    7b94:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7b98:	bf 00 00 00 00       	mov    edi,0x0
    7b9d:	e8 2e ab ff ff       	call   26d0 <time@plt>
    7ba2:	48 89 c2             	mov    rdx,rax
    7ba5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7ba9:	48 8b 00             	mov    rax,QWORD PTR [rax]
    7bac:	48 29 c2             	sub    rdx,rax
    7baf:	48 8b 05 72 fd 0f 00 	mov    rax,QWORD PTR [rip+0xffd72]        # 107928 <clean_delay>
    7bb6:	48 39 c2             	cmp    rdx,rax
    7bb9:	72 22                	jb     7bdd <ready_for_clean+0x55>
    7bbb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7bbf:	48 83 c0 08          	add    rax,0x8
    7bc3:	48 8d 35 eb 59 00 00 	lea    rsi,[rip+0x59eb]        # d5b5 <_IO_stdin_used+0x15b5>
    7bca:	48 89 c7             	mov    rdi,rax
    7bcd:	e8 ae aa ff ff       	call   2680 <strcmp@plt>
    7bd2:	85 c0                	test   eax,eax
    7bd4:	74 07                	je     7bdd <ready_for_clean+0x55>
    7bd6:	b8 01 00 00 00       	mov    eax,0x1
    7bdb:	eb 05                	jmp    7be2 <ready_for_clean+0x5a>
    7bdd:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7be2:	c9                   	leave  
    7be3:	c3                   	ret    

0000000000007be4 <clean>:
    7be4:	f3 0f 1e fa          	endbr64 
    7be8:	55                   	push   rbp
    7be9:	48 89 e5             	mov    rbp,rsp
    7bec:	48 83 ec 10          	sub    rsp,0x10
    7bf0:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7bf4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7bf8:	ba 08 00 00 00       	mov    edx,0x8
    7bfd:	be 00 00 00 00       	mov    esi,0x0
    7c02:	48 89 c7             	mov    rdi,rax
    7c05:	e8 f6 a9 ff ff       	call   2600 <memset@plt>
    7c0a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7c0e:	48 83 c0 08          	add    rax,0x8
    7c12:	48 b9 30 2e 30 2e 30 	movabs rcx,0x312e302e302e30
    7c19:	2e 31 00 
    7c1c:	48 89 08             	mov    QWORD PTR [rax],rcx
    7c1f:	90                   	nop
    7c20:	c9                   	leave  
    7c21:	c3                   	ret    

0000000000007c22 <scan_for_clean>:
    7c22:	f3 0f 1e fa          	endbr64 
    7c26:	55                   	push   rbp
    7c27:	48 89 e5             	mov    rbp,rsp
    7c2a:	48 83 ec 10          	sub    rsp,0x10
    7c2e:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7c35:	eb 62                	jmp    7c99 <scan_for_clean+0x77>
    7c37:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7c3a:	48 63 d0             	movsxd rdx,eax
    7c3d:	48 89 d0             	mov    rax,rdx
    7c40:	48 c1 e0 02          	shl    rax,0x2
    7c44:	48 01 d0             	add    rax,rdx
    7c47:	48 c1 e0 03          	shl    rax,0x3
    7c4b:	48 01 d0             	add    rax,rdx
    7c4e:	48 c1 e0 04          	shl    rax,0x4
    7c52:	48 8d 15 47 b4 0e 00 	lea    rdx,[rip+0xeb447]        # f30a0 <watchlist>
    7c59:	48 01 d0             	add    rax,rdx
    7c5c:	48 89 c7             	mov    rdi,rax
    7c5f:	e8 24 ff ff ff       	call   7b88 <ready_for_clean>
    7c64:	85 c0                	test   eax,eax
    7c66:	7e 2d                	jle    7c95 <scan_for_clean+0x73>
    7c68:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7c6b:	48 63 d0             	movsxd rdx,eax
    7c6e:	48 89 d0             	mov    rax,rdx
    7c71:	48 c1 e0 02          	shl    rax,0x2
    7c75:	48 01 d0             	add    rax,rdx
    7c78:	48 c1 e0 03          	shl    rax,0x3
    7c7c:	48 01 d0             	add    rax,rdx
    7c7f:	48 c1 e0 04          	shl    rax,0x4
    7c83:	48 8d 15 16 b4 0e 00 	lea    rdx,[rip+0xeb416]        # f30a0 <watchlist>
    7c8a:	48 01 d0             	add    rax,rdx
    7c8d:	48 89 c7             	mov    rdi,rax
    7c90:	e8 4f ff ff ff       	call   7be4 <clean>
    7c95:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    7c99:	8b 05 79 93 00 00    	mov    eax,DWORD PTR [rip+0x9379]        # 11018 <watchlist_num>
    7c9f:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7ca2:	7e 93                	jle    7c37 <scan_for_clean+0x15>
    7ca4:	90                   	nop
    7ca5:	90                   	nop
    7ca6:	c9                   	leave  
    7ca7:	c3                   	ret    

0000000000007ca8 <compare_entries>:
    7ca8:	f3 0f 1e fa          	endbr64 
    7cac:	55                   	push   rbp
    7cad:	48 89 e5             	mov    rbp,rsp
    7cb0:	48 83 ec 20          	sub    rsp,0x20
    7cb4:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7cb8:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7cbc:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7cc3:	e9 ac 00 00 00       	jmp    7d74 <compare_entries+0xcc>
    7cc8:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7ccb:	48 63 d0             	movsxd rdx,eax
    7cce:	48 89 d0             	mov    rax,rdx
    7cd1:	48 c1 e0 04          	shl    rax,0x4
    7cd5:	48 01 d0             	add    rax,rdx
    7cd8:	48 01 c0             	add    rax,rax
    7cdb:	48 8d 15 9e fe 0f 00 	lea    rdx,[rip+0xffe9e]        # 107b80 <arpcache>
    7ce2:	48 01 c2             	add    rdx,rax
    7ce5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7ce9:	48 89 c6             	mov    rsi,rax
    7cec:	48 89 d7             	mov    rdi,rdx
    7cef:	e8 a3 01 00 00       	call   7e97 <compare_ip_entry>
    7cf4:	85 c0                	test   eax,eax
    7cf6:	74 78                	je     7d70 <compare_entries+0xc8>
    7cf8:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7cfb:	48 63 d0             	movsxd rdx,eax
    7cfe:	48 89 d0             	mov    rax,rdx
    7d01:	48 c1 e0 04          	shl    rax,0x4
    7d05:	48 01 d0             	add    rax,rdx
    7d08:	48 01 c0             	add    rax,rax
    7d0b:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7d0f:	48 8d 05 6a fe 0f 00 	lea    rax,[rip+0xffe6a]        # 107b80 <arpcache>
    7d16:	48 01 c2             	add    rdx,rax
    7d19:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7d1d:	48 89 c6             	mov    rsi,rax
    7d20:	48 89 d7             	mov    rdi,rdx
    7d23:	e8 98 01 00 00       	call   7ec0 <compare_mac_entry>
    7d28:	85 c0                	test   eax,eax
    7d2a:	75 44                	jne    7d70 <compare_entries+0xc8>
    7d2c:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7d2f:	48 63 d0             	movsxd rdx,eax
    7d32:	48 89 d0             	mov    rax,rdx
    7d35:	48 c1 e0 04          	shl    rax,0x4
    7d39:	48 01 d0             	add    rax,rdx
    7d3c:	48 01 c0             	add    rax,rax
    7d3f:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7d43:	48 8d 05 36 fe 0f 00 	lea    rax,[rip+0xffe36]        # 107b80 <arpcache>
    7d4a:	48 8d 34 02          	lea    rsi,[rdx+rax*1]
    7d4e:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    7d52:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7d56:	48 89 d1             	mov    rcx,rdx
    7d59:	48 89 f2             	mov    rdx,rsi
    7d5c:	48 89 c6             	mov    rsi,rax
    7d5f:	48 8d 3d 5a 58 00 00 	lea    rdi,[rip+0x585a]        # d5c0 <_IO_stdin_used+0x15c0>
    7d66:	b8 00 00 00 00       	mov    eax,0x0
    7d6b:	e8 50 a8 ff ff       	call   25c0 <printf@plt>
    7d70:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    7d74:	8b 05 a2 92 00 00    	mov    eax,DWORD PTR [rip+0x92a2]        # 1101c <arp_entries>
    7d7a:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7d7d:	0f 8e 45 ff ff ff    	jle    7cc8 <compare_entries+0x20>
    7d83:	90                   	nop
    7d84:	90                   	nop
    7d85:	c9                   	leave  
    7d86:	c3                   	ret    

0000000000007d87 <add_entry>:
    7d87:	f3 0f 1e fa          	endbr64 
    7d8b:	55                   	push   rbp
    7d8c:	48 89 e5             	mov    rbp,rsp
    7d8f:	48 83 ec 20          	sub    rsp,0x20
    7d93:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7d97:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7d9b:	8b 05 7b 92 00 00    	mov    eax,DWORD PTR [rip+0x927b]        # 1101c <arp_entries>
    7da1:	83 c0 01             	add    eax,0x1
    7da4:	89 05 72 92 00 00    	mov    DWORD PTR [rip+0x9272],eax        # 1101c <arp_entries>
    7daa:	8b 05 6c 92 00 00    	mov    eax,DWORD PTR [rip+0x926c]        # 1101c <arp_entries>
    7db0:	48 63 d0             	movsxd rdx,eax
    7db3:	48 89 d0             	mov    rax,rdx
    7db6:	48 c1 e0 04          	shl    rax,0x4
    7dba:	48 01 d0             	add    rax,rdx
    7dbd:	48 01 c0             	add    rax,rax
    7dc0:	48 8d 15 b9 fd 0f 00 	lea    rdx,[rip+0xffdb9]        # 107b80 <arpcache>
    7dc7:	48 01 d0             	add    rax,rdx
    7dca:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7dce:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7dd2:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    7dd6:	48 89 d6             	mov    rsi,rdx
    7dd9:	48 89 c7             	mov    rdi,rax
    7ddc:	e8 ef a6 ff ff       	call   24d0 <strcpy@plt>
    7de1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7de5:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7de9:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7ded:	48 89 c6             	mov    rsi,rax
    7df0:	48 89 d7             	mov    rdi,rdx
    7df3:	e8 d8 a6 ff ff       	call   24d0 <strcpy@plt>
    7df8:	90                   	nop
    7df9:	c9                   	leave  
    7dfa:	c3                   	ret    

0000000000007dfb <entry_exists>:
    7dfb:	f3 0f 1e fa          	endbr64 
    7dff:	55                   	push   rbp
    7e00:	48 89 e5             	mov    rbp,rsp
    7e03:	48 83 ec 20          	sub    rsp,0x20
    7e07:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7e0b:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7e0f:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7e16:	eb 6d                	jmp    7e85 <entry_exists+0x8a>
    7e18:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7e1b:	48 63 d0             	movsxd rdx,eax
    7e1e:	48 89 d0             	mov    rax,rdx
    7e21:	48 c1 e0 04          	shl    rax,0x4
    7e25:	48 01 d0             	add    rax,rdx
    7e28:	48 01 c0             	add    rax,rax
    7e2b:	48 8d 15 4e fd 0f 00 	lea    rdx,[rip+0xffd4e]        # 107b80 <arpcache>
    7e32:	48 01 c2             	add    rdx,rax
    7e35:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7e39:	48 89 c6             	mov    rsi,rax
    7e3c:	48 89 d7             	mov    rdi,rdx
    7e3f:	e8 53 00 00 00       	call   7e97 <compare_ip_entry>
    7e44:	85 c0                	test   eax,eax
    7e46:	75 39                	jne    7e81 <entry_exists+0x86>
    7e48:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7e4b:	48 63 d0             	movsxd rdx,eax
    7e4e:	48 89 d0             	mov    rax,rdx
    7e51:	48 c1 e0 04          	shl    rax,0x4
    7e55:	48 01 d0             	add    rax,rdx
    7e58:	48 01 c0             	add    rax,rax
    7e5b:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7e5f:	48 8d 05 1a fd 0f 00 	lea    rax,[rip+0xffd1a]        # 107b80 <arpcache>
    7e66:	48 01 c2             	add    rdx,rax
    7e69:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7e6d:	48 89 c6             	mov    rsi,rax
    7e70:	48 89 d7             	mov    rdi,rdx
    7e73:	e8 48 00 00 00       	call   7ec0 <compare_mac_entry>
    7e78:	85 c0                	test   eax,eax
    7e7a:	75 05                	jne    7e81 <entry_exists+0x86>
    7e7c:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7e7f:	eb 14                	jmp    7e95 <entry_exists+0x9a>
    7e81:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    7e85:	8b 05 91 91 00 00    	mov    eax,DWORD PTR [rip+0x9191]        # 1101c <arp_entries>
    7e8b:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7e8e:	7e 88                	jle    7e18 <entry_exists+0x1d>
    7e90:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7e95:	c9                   	leave  
    7e96:	c3                   	ret    

0000000000007e97 <compare_ip_entry>:
    7e97:	f3 0f 1e fa          	endbr64 
    7e9b:	55                   	push   rbp
    7e9c:	48 89 e5             	mov    rbp,rsp
    7e9f:	48 83 ec 10          	sub    rsp,0x10
    7ea3:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7ea7:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7eab:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    7eaf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7eb3:	48 89 d6             	mov    rsi,rdx
    7eb6:	48 89 c7             	mov    rdi,rax
    7eb9:	e8 c2 a7 ff ff       	call   2680 <strcmp@plt>
    7ebe:	c9                   	leave  
    7ebf:	c3                   	ret    

0000000000007ec0 <compare_mac_entry>:
    7ec0:	f3 0f 1e fa          	endbr64 
    7ec4:	55                   	push   rbp
    7ec5:	48 89 e5             	mov    rbp,rsp
    7ec8:	48 83 ec 10          	sub    rsp,0x10
    7ecc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7ed0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7ed4:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    7ed8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7edc:	48 89 d6             	mov    rsi,rdx
    7edf:	48 89 c7             	mov    rdi,rax
    7ee2:	e8 99 a7 ff ff       	call   2680 <strcmp@plt>
    7ee7:	c9                   	leave  
    7ee8:	c3                   	ret    

0000000000007ee9 <load_csv_arp_cache>:
    7ee9:	f3 0f 1e fa          	endbr64 
    7eed:	55                   	push   rbp
    7eee:	48 89 e5             	mov    rbp,rsp
    7ef1:	53                   	push   rbx
    7ef2:	48 83 ec 68          	sub    rsp,0x68
    7ef6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7efd:	00 00 
    7eff:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    7f03:	31 c0                	xor    eax,eax
    7f05:	48 8d 35 ea 56 00 00 	lea    rsi,[rip+0x56ea]        # d5f6 <_IO_stdin_used+0x15f6>
    7f0c:	48 8d 3d e5 56 00 00 	lea    rdi,[rip+0x56e5]        # d5f8 <_IO_stdin_used+0x15f8>
    7f13:	e8 58 a8 ff ff       	call   2770 <fopen@plt>
    7f18:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    7f1c:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
    7f21:	75 22                	jne    7f45 <load_csv_arp_cache+0x5c>
    7f23:	48 8d 3d ee 56 00 00 	lea    rdi,[rip+0x56ee]        # d618 <_IO_stdin_used+0x1618>
    7f2a:	e8 d1 a5 ff ff       	call   2500 <puts@plt>
    7f2f:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    7f33:	48 89 c7             	mov    rdi,rax
    7f36:	e8 15 a6 ff ff       	call   2550 <fclose@plt>
    7f3b:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7f40:	e9 dd 00 00 00       	jmp    8022 <load_csv_arp_cache+0x139>
    7f45:	48 c7 45 98 00 00 00 	mov    QWORD PTR [rbp-0x68],0x0
    7f4c:	00 
    7f4d:	48 c7 45 a0 00 00 00 	mov    QWORD PTR [rbp-0x60],0x0
    7f54:	00 
    7f55:	eb 7c                	jmp    7fd3 <load_csv_arp_cache+0xea>
    7f57:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7f5b:	48 85 c0             	test   rax,rax
    7f5e:	0f 84 97 00 00 00    	je     7ffb <load_csv_arp_cache+0x112>
    7f64:	48 8b 5d 98          	mov    rbx,QWORD PTR [rbp-0x68]
    7f68:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7f6c:	48 8d 35 de 56 00 00 	lea    rsi,[rip+0x56de]        # d651 <_IO_stdin_used+0x1651>
    7f73:	48 89 c7             	mov    rdi,rax
    7f76:	e8 c5 a6 ff ff       	call   2640 <strcspn@plt>
    7f7b:	48 01 d8             	add    rax,rbx
    7f7e:	c6 00 00             	mov    BYTE PTR [rax],0x0
    7f81:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7f85:	48 8d 35 c7 56 00 00 	lea    rsi,[rip+0x56c7]        # d653 <_IO_stdin_used+0x1653>
    7f8c:	48 89 c7             	mov    rdi,rax
    7f8f:	e8 fc a7 ff ff       	call   2790 <strtok@plt>
    7f94:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    7f98:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    7f9c:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    7fa0:	48 89 d6             	mov    rsi,rdx
    7fa3:	48 89 c7             	mov    rdi,rax
    7fa6:	e8 25 a5 ff ff       	call   24d0 <strcpy@plt>
    7fab:	48 8d 35 a1 56 00 00 	lea    rsi,[rip+0x56a1]        # d653 <_IO_stdin_used+0x1653>
    7fb2:	bf 00 00 00 00       	mov    edi,0x0
    7fb7:	e8 d4 a7 ff ff       	call   2790 <strtok@plt>
    7fbc:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    7fc0:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    7fc4:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    7fc8:	48 89 d6             	mov    rsi,rdx
    7fcb:	48 89 c7             	mov    rdi,rax
    7fce:	e8 fd a4 ff ff       	call   24d0 <strcpy@plt>
    7fd3:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    7fd7:	48 8d 4d a0          	lea    rcx,[rbp-0x60]
    7fdb:	48 8d 45 98          	lea    rax,[rbp-0x68]
    7fdf:	48 89 ce             	mov    rsi,rcx
    7fe2:	48 89 c7             	mov    rdi,rax
    7fe5:	e8 06 a8 ff ff       	call   27f0 <getline@plt>
    7fea:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    7fee:	48 83 7d b0 ff       	cmp    QWORD PTR [rbp-0x50],0xffffffffffffffff
    7ff3:	0f 85 5e ff ff ff    	jne    7f57 <load_csv_arp_cache+0x6e>
    7ff9:	eb 01                	jmp    7ffc <load_csv_arp_cache+0x113>
    7ffb:	90                   	nop
    7ffc:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    8000:	48 85 c0             	test   rax,rax
    8003:	74 0c                	je     8011 <load_csv_arp_cache+0x128>
    8005:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    8009:	48 89 c7             	mov    rdi,rax
    800c:	e8 5f a4 ff ff       	call   2470 <free@plt>
    8011:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    8015:	48 89 c7             	mov    rdi,rax
    8018:	e8 33 a5 ff ff       	call   2550 <fclose@plt>
    801d:	b8 01 00 00 00       	mov    eax,0x1
    8022:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    8026:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
    802d:	00 00 
    802f:	74 05                	je     8036 <load_csv_arp_cache+0x14d>
    8031:	e8 4a a5 ff ff       	call   2580 <__stack_chk_fail@plt>
    8036:	48 83 c4 68          	add    rsp,0x68
    803a:	5b                   	pop    rbx
    803b:	5d                   	pop    rbp
    803c:	c3                   	ret    

000000000000803d <tls_decode>:
    803d:	f3 0f 1e fa          	endbr64 
    8041:	55                   	push   rbp
    8042:	48 89 e5             	mov    rbp,rsp
    8045:	48 83 ec 30          	sub    rsp,0x30
    8049:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    804d:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    8051:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    8055:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8059:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    805d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8061:	0f b7 40 01          	movzx  eax,WORD PTR [rax+0x1]
    8065:	0f b7 c0             	movzx  eax,ax
    8068:	3d 03 03 00 00       	cmp    eax,0x303
    806d:	74 6a                	je     80d9 <tls_decode+0x9c>
    806f:	3d 03 03 00 00       	cmp    eax,0x303
    8074:	0f 8f c7 00 00 00    	jg     8141 <tls_decode+0x104>
    807a:	3d 01 03 00 00       	cmp    eax,0x301
    807f:	74 0c                	je     808d <tls_decode+0x50>
    8081:	3d 02 03 00 00       	cmp    eax,0x302
    8086:	74 2b                	je     80b3 <tls_decode+0x76>
    8088:	e9 b4 00 00 00       	jmp    8141 <tls_decode+0x104>
    808d:	0f b6 05 a5 f8 0f 00 	movzx  eax,BYTE PTR [rip+0xff8a5]        # 107939 <packet_print>
    8094:	84 c0                	test   al,al
    8096:	74 11                	je     80a9 <tls_decode+0x6c>
    8098:	48 8d 3d b9 55 00 00 	lea    rdi,[rip+0x55b9]        # d658 <_IO_stdin_used+0x1658>
    809f:	b8 00 00 00 00       	mov    eax,0x0
    80a4:	e8 17 a5 ff ff       	call   25c0 <printf@plt>
    80a9:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    80ad:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    80b1:	eb 4b                	jmp    80fe <tls_decode+0xc1>
    80b3:	0f b6 05 7f f8 0f 00 	movzx  eax,BYTE PTR [rip+0xff87f]        # 107939 <packet_print>
    80ba:	84 c0                	test   al,al
    80bc:	74 11                	je     80cf <tls_decode+0x92>
    80be:	48 8d 3d a2 55 00 00 	lea    rdi,[rip+0x55a2]        # d667 <_IO_stdin_used+0x1667>
    80c5:	b8 00 00 00 00       	mov    eax,0x0
    80ca:	e8 f1 a4 ff ff       	call   25c0 <printf@plt>
    80cf:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    80d3:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    80d7:	eb 25                	jmp    80fe <tls_decode+0xc1>
    80d9:	0f b6 05 59 f8 0f 00 	movzx  eax,BYTE PTR [rip+0xff859]        # 107939 <packet_print>
    80e0:	84 c0                	test   al,al
    80e2:	74 11                	je     80f5 <tls_decode+0xb8>
    80e4:	48 8d 3d 8b 55 00 00 	lea    rdi,[rip+0x558b]        # d676 <_IO_stdin_used+0x1676>
    80eb:	b8 00 00 00 00       	mov    eax,0x0
    80f0:	e8 cb a4 ff ff       	call   25c0 <printf@plt>
    80f5:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    80f9:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    80fd:	90                   	nop
    80fe:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8102:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    8105:	0f b6 c0             	movzx  eax,al
    8108:	83 f8 17             	cmp    eax,0x17
    810b:	74 37                	je     8144 <tls_decode+0x107>
    810d:	83 f8 17             	cmp    eax,0x17
    8110:	7f 35                	jg     8147 <tls_decode+0x10a>
    8112:	83 f8 16             	cmp    eax,0x16
    8115:	74 11                	je     8128 <tls_decode+0xeb>
    8117:	83 f8 16             	cmp    eax,0x16
    811a:	7f 2b                	jg     8147 <tls_decode+0x10a>
    811c:	83 f8 14             	cmp    eax,0x14
    811f:	74 29                	je     814a <tls_decode+0x10d>
    8121:	83 f8 15             	cmp    eax,0x15
    8124:	74 27                	je     814d <tls_decode+0x110>
    8126:	eb 1f                	jmp    8147 <tls_decode+0x10a>
    8128:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    812c:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    8130:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8134:	48 89 ce             	mov    rsi,rcx
    8137:	48 89 c7             	mov    rdi,rax
    813a:	e8 11 00 00 00       	call   8150 <tlshandshake>
    813f:	eb 0d                	jmp    814e <tls_decode+0x111>
    8141:	90                   	nop
    8142:	eb 0a                	jmp    814e <tls_decode+0x111>
    8144:	90                   	nop
    8145:	eb 07                	jmp    814e <tls_decode+0x111>
    8147:	90                   	nop
    8148:	eb 04                	jmp    814e <tls_decode+0x111>
    814a:	90                   	nop
    814b:	eb 01                	jmp    814e <tls_decode+0x111>
    814d:	90                   	nop
    814e:	c9                   	leave  
    814f:	c3                   	ret    

0000000000008150 <tlshandshake>:
    8150:	f3 0f 1e fa          	endbr64 
    8154:	55                   	push   rbp
    8155:	48 89 e5             	mov    rbp,rsp
    8158:	48 83 ec 30          	sub    rsp,0x30
    815c:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8160:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    8164:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    8168:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    816c:	48 83 c0 08          	add    rax,0x8
    8170:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8174:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8178:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    817b:	0f b6 c0             	movzx  eax,al
    817e:	83 f8 0b             	cmp    eax,0xb
    8181:	0f 87 bf 00 00 00    	ja     8246 <tlshandshake+0xf6>
    8187:	89 c0                	mov    eax,eax
    8189:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    8190:	00 
    8191:	48 8d 05 34 55 00 00 	lea    rax,[rip+0x5534]        # d6cc <_IO_stdin_used+0x16cc>
    8198:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    819b:	48 98                	cdqe   
    819d:	48 8d 15 28 55 00 00 	lea    rdx,[rip+0x5528]        # d6cc <_IO_stdin_used+0x16cc>
    81a4:	48 01 d0             	add    rax,rdx
    81a7:	3e ff e0             	notrack jmp rax
    81aa:	48 8d 3d d4 54 00 00 	lea    rdi,[rip+0x54d4]        # d685 <_IO_stdin_used+0x1685>
    81b1:	e8 4a a3 ff ff       	call   2500 <puts@plt>
    81b6:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    81ba:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    81be:	e9 83 00 00 00       	jmp    8246 <tlshandshake+0xf6>
    81c3:	0f b6 05 6f f7 0f 00 	movzx  eax,BYTE PTR [rip+0xff76f]        # 107939 <packet_print>
    81ca:	84 c0                	test   al,al
    81cc:	74 0c                	je     81da <tlshandshake+0x8a>
    81ce:	48 8d 3d bd 54 00 00 	lea    rdi,[rip+0x54bd]        # d692 <_IO_stdin_used+0x1692>
    81d5:	e8 26 a3 ff ff       	call   2500 <puts@plt>
    81da:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    81de:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    81e2:	eb 62                	jmp    8246 <tlshandshake+0xf6>
    81e4:	0f b6 05 4e f7 0f 00 	movzx  eax,BYTE PTR [rip+0xff74e]        # 107939 <packet_print>
    81eb:	84 c0                	test   al,al
    81ed:	74 0c                	je     81fb <tlshandshake+0xab>
    81ef:	48 8d 3d a9 54 00 00 	lea    rdi,[rip+0x54a9]        # d69f <_IO_stdin_used+0x169f>
    81f6:	e8 05 a3 ff ff       	call   2500 <puts@plt>
    81fb:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    81ff:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    8203:	eb 41                	jmp    8246 <tlshandshake+0xf6>
    8205:	0f b6 05 2d f7 0f 00 	movzx  eax,BYTE PTR [rip+0xff72d]        # 107939 <packet_print>
    820c:	84 c0                	test   al,al
    820e:	74 0c                	je     821c <tlshandshake+0xcc>
    8210:	48 8d 3d 9b 54 00 00 	lea    rdi,[rip+0x549b]        # d6b2 <_IO_stdin_used+0x16b2>
    8217:	e8 e4 a2 ff ff       	call   2500 <puts@plt>
    821c:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8220:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    8224:	eb 20                	jmp    8246 <tlshandshake+0xf6>
    8226:	0f b6 05 0c f7 0f 00 	movzx  eax,BYTE PTR [rip+0xff70c]        # 107939 <packet_print>
    822d:	84 c0                	test   al,al
    822f:	74 0c                	je     823d <tlshandshake+0xed>
    8231:	48 8d 3d 86 54 00 00 	lea    rdi,[rip+0x5486]        # d6be <_IO_stdin_used+0x16be>
    8238:	e8 c3 a2 ff ff       	call   2500 <puts@plt>
    823d:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8241:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    8245:	90                   	nop
    8246:	90                   	nop
    8247:	c9                   	leave  
    8248:	c3                   	ret    

0000000000008249 <process_opcode>:
    8249:	f3 0f 1e fa          	endbr64 
    824d:	55                   	push   rbp
    824e:	48 89 e5             	mov    rbp,rsp
    8251:	48 81 ec 30 04 00 00 	sub    rsp,0x430
    8258:	48 89 bd d8 fb ff ff 	mov    QWORD PTR [rbp-0x428],rdi
    825f:	48 89 b5 d0 fb ff ff 	mov    QWORD PTR [rbp-0x430],rsi
    8266:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    826d:	00 00 
    826f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8273:	31 c0                	xor    eax,eax
    8275:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    827c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    827f:	0f b6 c0             	movzx  eax,al
    8282:	3d db 00 00 00       	cmp    eax,0xdb
    8287:	75 5f                	jne    82e8 <process_opcode+0x9f>
    8289:	c6 85 e4 fb ff ff db 	mov    BYTE PTR [rbp-0x41c],0xdb
    8290:	bf 00 00 00 00       	mov    edi,0x0
    8295:	e8 f6 a2 ff ff       	call   2590 <htons@plt>
    829a:	0f b7 c0             	movzx  eax,ax
    829d:	25 ff ff ff 00       	and    eax,0xffffff
    82a2:	c1 e0 08             	shl    eax,0x8
    82a5:	89 c2                	mov    edx,eax
    82a7:	8b 85 e4 fb ff ff    	mov    eax,DWORD PTR [rbp-0x41c]
    82ad:	0f b6 c0             	movzx  eax,al
    82b0:	09 d0                	or     eax,edx
    82b2:	89 85 e4 fb ff ff    	mov    DWORD PTR [rbp-0x41c],eax
    82b8:	48 8d 85 e4 fb ff ff 	lea    rax,[rbp-0x41c]
    82bf:	48 89 85 e8 fb ff ff 	mov    QWORD PTR [rbp-0x418],rax
    82c6:	48 8b 85 d0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x430]
    82cd:	8b 00                	mov    eax,DWORD PTR [rax]
    82cf:	48 8b b5 e8 fb ff ff 	mov    rsi,QWORD PTR [rbp-0x418]
    82d6:	b9 00 00 00 00       	mov    ecx,0x0
    82db:	ba 04 00 00 00       	mov    edx,0x4
    82e0:	89 c7                	mov    edi,eax
    82e2:	e8 b9 a2 ff ff       	call   25a0 <send@plt>
    82e7:	90                   	nop
    82e8:	90                   	nop
    82e9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    82ed:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    82f4:	00 00 
    82f6:	74 05                	je     82fd <process_opcode+0xb4>
    82f8:	e8 83 a2 ff ff       	call   2580 <__stack_chk_fail@plt>
    82fd:	c9                   	leave  
    82fe:	c3                   	ret    

00000000000082ff <callback>:
    82ff:	f3 0f 1e fa          	endbr64 
    8303:	55                   	push   rbp
    8304:	48 89 e5             	mov    rbp,rsp
    8307:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    830b:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
    830e:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    8312:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    8316:	b8 00 00 00 00       	mov    eax,0x0
    831b:	5d                   	pop    rbp
    831c:	c3                   	ret    

000000000000831d <update_db>:
    831d:	f3 0f 1e fa          	endbr64 
    8321:	55                   	push   rbp
    8322:	48 89 e5             	mov    rbp,rsp
    8325:	48 81 ec 40 02 00 00 	sub    rsp,0x240
    832c:	48 89 bd c8 fd ff ff 	mov    QWORD PTR [rbp-0x238],rdi
    8333:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    833a:	00 00 
    833c:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8340:	31 c0                	xor    eax,eax
    8342:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    8349:	48 89 85 e8 fd ff ff 	mov    QWORD PTR [rbp-0x218],rax
    8350:	48 8d 3d a9 53 00 00 	lea    rdi,[rip+0x53a9]        # d700 <_IO_stdin_used+0x1700>
    8357:	e8 a4 a1 ff ff       	call   2500 <puts@plt>
    835c:	48 c7 85 d8 fd ff ff 	mov    QWORD PTR [rbp-0x228],0x0
    8363:	00 00 00 00 
    8367:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    836e:	48 89 c6             	mov    rsi,rax
    8371:	48 8d 3d 88 f5 0f 00 	lea    rdi,[rip+0xff588]        # 107900 <sqlite_db_path>
    8378:	e8 c3 a1 ff ff       	call   2540 <sqlite3_open@plt>
    837d:	89 85 d4 fd ff ff    	mov    DWORD PTR [rbp-0x22c],eax
    8383:	83 bd d4 fd ff ff 00 	cmp    DWORD PTR [rbp-0x22c],0x0
    838a:	74 28                	je     83b4 <update_db+0x97>
    838c:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    8393:	48 89 c7             	mov    rdi,rax
    8396:	e8 d5 a2 ff ff       	call   2670 <sqlite3_errmsg@plt>
    839b:	48 89 c6             	mov    rsi,rax
    839e:	48 8d 3d 67 53 00 00 	lea    rdi,[rip+0x5367]        # d70c <_IO_stdin_used+0x170c>
    83a5:	b8 00 00 00 00       	mov    eax,0x0
    83aa:	e8 11 a2 ff ff       	call   25c0 <printf@plt>
    83af:	e9 a2 00 00 00       	jmp    8456 <update_db+0x139>
    83b4:	48 8b 85 e8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x218]
    83bb:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    83be:	85 c0                	test   eax,eax
    83c0:	75 2e                	jne    83f0 <update_db+0xd3>
    83c2:	48 8b 85 e8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x218]
    83c9:	48 8d 48 10          	lea    rcx,[rax+0x10]
    83cd:	48 8b 95 e8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x218]
    83d4:	48 8d 85 f0 fd ff ff 	lea    rax,[rbp-0x210]
    83db:	48 8d 35 3e 53 00 00 	lea    rsi,[rip+0x533e]        # d720 <_IO_stdin_used+0x1720>
    83e2:	48 89 c7             	mov    rdi,rax
    83e5:	b8 00 00 00 00       	mov    eax,0x0
    83ea:	e8 41 a4 ff ff       	call   2830 <sprintf@plt>
    83ef:	90                   	nop
    83f0:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    83f7:	48 8d 95 d8 fd ff ff 	lea    rdx,[rbp-0x228]
    83fe:	48 8d b5 f0 fd ff ff 	lea    rsi,[rbp-0x210]
    8405:	49 89 d0             	mov    r8,rdx
    8408:	b9 00 00 00 00       	mov    ecx,0x0
    840d:	ba 00 00 00 00       	mov    edx,0x0
    8412:	48 89 c7             	mov    rdi,rax
    8415:	e8 16 a1 ff ff       	call   2530 <sqlite3_exec@plt>
    841a:	89 85 d4 fd ff ff    	mov    DWORD PTR [rbp-0x22c],eax
    8420:	83 bd d4 fd ff ff 00 	cmp    DWORD PTR [rbp-0x22c],0x0
    8427:	74 2c                	je     8455 <update_db+0x138>
    8429:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    8430:	48 89 c6             	mov    rsi,rax
    8433:	48 8d 3d 2b 53 00 00 	lea    rdi,[rip+0x532b]        # d765 <_IO_stdin_used+0x1765>
    843a:	b8 00 00 00 00       	mov    eax,0x0
    843f:	e8 7c a1 ff ff       	call   25c0 <printf@plt>
    8444:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    844b:	48 89 c7             	mov    rdi,rax
    844e:	e8 cd a3 ff ff       	call   2820 <sqlite3_free@plt>
    8453:	eb 01                	jmp    8456 <update_db+0x139>
    8455:	90                   	nop
    8456:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    845d:	48 89 c7             	mov    rdi,rax
    8460:	e8 5b a2 ff ff       	call   26c0 <sqlite3_close@plt>
    8465:	b8 01 00 00 00       	mov    eax,0x1
    846a:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    846e:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
    8475:	00 00 
    8477:	74 05                	je     847e <update_db+0x161>
    8479:	e8 02 a1 ff ff       	call   2580 <__stack_chk_fail@plt>
    847e:	c9                   	leave  
    847f:	c3                   	ret    

0000000000008480 <update_spi_db>:
    8480:	f3 0f 1e fa          	endbr64 
    8484:	55                   	push   rbp
    8485:	48 89 e5             	mov    rbp,rsp
    8488:	41 57                	push   r15
    848a:	41 56                	push   r14
    848c:	41 55                	push   r13
    848e:	41 54                	push   r12
    8490:	53                   	push   rbx
    8491:	48 81 ec 48 04 00 00 	sub    rsp,0x448
    8498:	48 89 bd 98 fb ff ff 	mov    QWORD PTR [rbp-0x468],rdi
    849f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    84a6:	00 00 
    84a8:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    84ac:	31 c0                	xor    eax,eax
    84ae:	48 8b 85 98 fb ff ff 	mov    rax,QWORD PTR [rbp-0x468]
    84b5:	48 89 85 b0 fb ff ff 	mov    QWORD PTR [rbp-0x450],rax
    84bc:	48 8d 85 a0 fb ff ff 	lea    rax,[rbp-0x460]
    84c3:	48 89 c6             	mov    rsi,rax
    84c6:	48 8d 3d b6 52 00 00 	lea    rdi,[rip+0x52b6]        # d783 <_IO_stdin_used+0x1783>
    84cd:	e8 6e a0 ff ff       	call   2540 <sqlite3_open@plt>
    84d2:	85 c0                	test   eax,eax
    84d4:	74 3c                	je     8512 <update_spi_db+0x92>
    84d6:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    84dd:	48 89 c7             	mov    rdi,rax
    84e0:	e8 8b a1 ff ff       	call   2670 <sqlite3_errmsg@plt>
    84e5:	48 89 c6             	mov    rsi,rax
    84e8:	48 8d 3d ac 52 00 00 	lea    rdi,[rip+0x52ac]        # d79b <_IO_stdin_used+0x179b>
    84ef:	b8 00 00 00 00       	mov    eax,0x0
    84f4:	e8 c7 a0 ff ff       	call   25c0 <printf@plt>
    84f9:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    8500:	48 89 c7             	mov    rdi,rax
    8503:	e8 b8 a1 ff ff       	call   26c0 <sqlite3_close@plt>
    8508:	b8 00 00 00 00       	mov    eax,0x0
    850d:	e9 5c 01 00 00       	jmp    866e <update_spi_db+0x1ee>
    8512:	48 8d 05 97 52 00 00 	lea    rax,[rip+0x5297]        # d7b0 <_IO_stdin_used+0x17b0>
    8519:	48 89 85 b8 fb ff ff 	mov    QWORD PTR [rbp-0x448],rax
    8520:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8527:	8b 90 80 00 00 00    	mov    edx,DWORD PTR [rax+0x80]
    852d:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8534:	44 8b 78 7c          	mov    r15d,DWORD PTR [rax+0x7c]
    8538:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    853f:	4c 8b b0 98 00 00 00 	mov    r14,QWORD PTR [rax+0x98]
    8546:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    854d:	4c 8b a8 90 00 00 00 	mov    r13,QWORD PTR [rax+0x90]
    8554:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    855b:	44 8b a0 a8 00 00 00 	mov    r12d,DWORD PTR [rax+0xa8]
    8562:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8569:	8b 98 a4 00 00 00    	mov    ebx,DWORD PTR [rax+0xa4]
    856f:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8576:	48 8b 40 70          	mov    rax,QWORD PTR [rax+0x70]
    857a:	44 8b 18             	mov    r11d,DWORD PTR [rax]
    857d:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8584:	44 8b 50 60          	mov    r10d,DWORD PTR [rax+0x60]
    8588:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    858f:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
    8593:	44 8b 08             	mov    r9d,DWORD PTR [rax]
    8596:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    859d:	44 8b 40 5c          	mov    r8d,DWORD PTR [rax+0x5c]
    85a1:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    85a8:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    85ab:	89 85 94 fb ff ff    	mov    DWORD PTR [rbp-0x46c],eax
    85b1:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    85b8:	8b 48 54             	mov    ecx,DWORD PTR [rax+0x54]
    85bb:	89 8d 90 fb ff ff    	mov    DWORD PTR [rbp-0x470],ecx
    85c1:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    85c8:	48 8d 48 29          	lea    rcx,[rax+0x29]
    85cc:	48 8b bd b0 fb ff ff 	mov    rdi,QWORD PTR [rbp-0x450]
    85d3:	48 8b b5 b8 fb ff ff 	mov    rsi,QWORD PTR [rbp-0x448]
    85da:	48 8d 85 c0 fb ff ff 	lea    rax,[rbp-0x440]
    85e1:	52                   	push   rdx
    85e2:	41 57                	push   r15
    85e4:	41 56                	push   r14
    85e6:	41 55                	push   r13
    85e8:	41 54                	push   r12
    85ea:	53                   	push   rbx
    85eb:	41 53                	push   r11
    85ed:	41 52                	push   r10
    85ef:	41 51                	push   r9
    85f1:	41 50                	push   r8
    85f3:	44 8b 8d 94 fb ff ff 	mov    r9d,DWORD PTR [rbp-0x46c]
    85fa:	44 8b 85 90 fb ff ff 	mov    r8d,DWORD PTR [rbp-0x470]
    8601:	48 89 fa             	mov    rdx,rdi
    8604:	48 89 c7             	mov    rdi,rax
    8607:	b8 00 00 00 00       	mov    eax,0x0
    860c:	e8 1f a2 ff ff       	call   2830 <sprintf@plt>
    8611:	48 83 c4 50          	add    rsp,0x50
    8615:	48 c7 85 a8 fb ff ff 	mov    QWORD PTR [rbp-0x458],0x0
    861c:	00 00 00 00 
    8620:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    8627:	48 8d 95 a8 fb ff ff 	lea    rdx,[rbp-0x458]
    862e:	48 8d b5 c0 fb ff ff 	lea    rsi,[rbp-0x440]
    8635:	49 89 d0             	mov    r8,rdx
    8638:	b9 00 00 00 00       	mov    ecx,0x0
    863d:	ba 00 00 00 00       	mov    edx,0x0
    8642:	48 89 c7             	mov    rdi,rax
    8645:	e8 e6 9e ff ff       	call   2530 <sqlite3_exec@plt>
    864a:	85 c0                	test   eax,eax
    864c:	74 1b                	je     8669 <update_spi_db+0x1e9>
    864e:	48 8b 85 a8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x458]
    8655:	48 89 c6             	mov    rsi,rax
    8658:	48 8d 3d 3e 52 00 00 	lea    rdi,[rip+0x523e]        # d89d <_IO_stdin_used+0x189d>
    865f:	b8 00 00 00 00       	mov    eax,0x0
    8664:	e8 57 9f ff ff       	call   25c0 <printf@plt>
    8669:	b8 00 00 00 00       	mov    eax,0x0
    866e:	48 8b 5d c8          	mov    rbx,QWORD PTR [rbp-0x38]
    8672:	64 48 33 1c 25 28 00 	xor    rbx,QWORD PTR fs:0x28
    8679:	00 00 
    867b:	74 05                	je     8682 <update_spi_db+0x202>
    867d:	e8 fe 9e ff ff       	call   2580 <__stack_chk_fail@plt>
    8682:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    8686:	5b                   	pop    rbx
    8687:	41 5c                	pop    r12
    8689:	41 5d                	pop    r13
    868b:	41 5e                	pop    r14
    868d:	41 5f                	pop    r15
    868f:	5d                   	pop    rbp
    8690:	c3                   	ret    

0000000000008691 <http_disect>:
    8691:	f3 0f 1e fa          	endbr64 
    8695:	55                   	push   rbp
    8696:	48 89 e5             	mov    rbp,rsp
    8699:	48 81 ec 30 04 00 00 	sub    rsp,0x430
    86a0:	48 89 bd d8 fb ff ff 	mov    QWORD PTR [rbp-0x428],rdi
    86a7:	48 89 b5 d0 fb ff ff 	mov    QWORD PTR [rbp-0x430],rsi
    86ae:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    86b5:	00 00 
    86b7:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    86bb:	31 c0                	xor    eax,eax
    86bd:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    86c4:	be 0d 00 00 00       	mov    esi,0xd
    86c9:	48 89 c7             	mov    rdi,rax
    86cc:	e8 2a ae ff ff       	call   34fb <strloc>
    86d1:	89 85 ec fb ff ff    	mov    DWORD PTR [rbp-0x414],eax
    86d7:	48 8d 3d dd 51 00 00 	lea    rdi,[rip+0x51dd]        # d8bb <_IO_stdin_used+0x18bb>
    86de:	e8 1d 9e ff ff       	call   2500 <puts@plt>
    86e3:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    86ea:	48 89 c7             	mov    rdi,rax
    86ed:	e8 b0 ae ff ff       	call   35a2 <test_string_arr_print>
    86f2:	83 f0 01             	xor    eax,0x1
    86f5:	84 c0                	test   al,al
    86f7:	75 33                	jne    872c <http_disect+0x9b>
    86f9:	8b 85 ec fb ff ff    	mov    eax,DWORD PTR [rbp-0x414]
    86ff:	48 63 d0             	movsxd rdx,eax
    8702:	48 8b 8d d8 fb ff ff 	mov    rcx,QWORD PTR [rbp-0x428]
    8709:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    8710:	48 89 ce             	mov    rsi,rcx
    8713:	48 89 c7             	mov    rdi,rax
    8716:	e8 95 9d ff ff       	call   24b0 <strncpy@plt>
    871b:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    8722:	48 89 c7             	mov    rdi,rax
    8725:	e8 d6 9d ff ff       	call   2500 <puts@plt>
    872a:	eb 01                	jmp    872d <http_disect+0x9c>
    872c:	90                   	nop
    872d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8731:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    8738:	00 00 
    873a:	74 05                	je     8741 <http_disect+0xb0>
    873c:	e8 3f 9e ff ff       	call   2580 <__stack_chk_fail@plt>
    8741:	c9                   	leave  
    8742:	c3                   	ret    

0000000000008743 <dns_disect>:
    8743:	f3 0f 1e fa          	endbr64 
    8747:	55                   	push   rbp
    8748:	48 89 e5             	mov    rbp,rsp
    874b:	48 83 ec 30          	sub    rsp,0x30
    874f:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    8753:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    8757:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    875b:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    875f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8763:	48 83 c0 0c          	add    rax,0xc
    8767:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    876b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    876f:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    8773:	66 85 c0             	test   ax,ax
    8776:	75 6d                	jne    87e5 <dns_disect+0xa2>
    8778:	bf 00 04 00 00       	mov    edi,0x400
    877d:	e8 7e 9f ff ff       	call   2700 <malloc@plt>
    8782:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8786:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    878a:	ba 08 00 00 00       	mov    edx,0x8
    878f:	be 00 00 00 00       	mov    esi,0x0
    8794:	48 89 c7             	mov    rdi,rax
    8797:	e8 64 9e ff ff       	call   2600 <memset@plt>
    879c:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    87a0:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    87a4:	48 89 d6             	mov    rsi,rdx
    87a7:	48 89 c7             	mov    rdi,rax
    87aa:	e8 39 00 00 00       	call   87e8 <get_dns_name>
    87af:	0f b6 05 83 f1 0f 00 	movzx  eax,BYTE PTR [rip+0xff183]        # 107939 <packet_print>
    87b6:	84 c0                	test   al,al
    87b8:	74 18                	je     87d2 <dns_disect+0x8f>
    87ba:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    87be:	48 89 c6             	mov    rsi,rax
    87c1:	48 8d 3d 05 51 00 00 	lea    rdi,[rip+0x5105]        # d8cd <_IO_stdin_used+0x18cd>
    87c8:	b8 00 00 00 00       	mov    eax,0x0
    87cd:	e8 ee 9d ff ff       	call   25c0 <printf@plt>
    87d2:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    87d7:	74 0c                	je     87e5 <dns_disect+0xa2>
    87d9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    87dd:	48 89 c7             	mov    rdi,rax
    87e0:	e8 8b 9c ff ff       	call   2470 <free@plt>
    87e5:	90                   	nop
    87e6:	c9                   	leave  
    87e7:	c3                   	ret    

00000000000087e8 <get_dns_name>:
    87e8:	f3 0f 1e fa          	endbr64 
    87ec:	55                   	push   rbp
    87ed:	48 89 e5             	mov    rbp,rsp
    87f0:	53                   	push   rbx
    87f1:	48 83 ec 28          	sub    rsp,0x28
    87f5:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    87f9:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    87fd:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    8804:	eb 6a                	jmp    8870 <get_dns_name+0x88>
    8806:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    8809:	48 63 d0             	movsxd rdx,eax
    880c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8810:	48 01 d0             	add    rax,rdx
    8813:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    8816:	3c 20                	cmp    al,0x20
    8818:	7e 24                	jle    883e <get_dns_name+0x56>
    881a:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    881d:	48 63 d0             	movsxd rdx,eax
    8820:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8824:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    8828:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    882c:	ba 01 00 00 00       	mov    edx,0x1
    8831:	48 89 ce             	mov    rsi,rcx
    8834:	48 89 c7             	mov    rdi,rax
    8837:	e8 d4 9d ff ff       	call   2610 <strncat@plt>
    883c:	eb 2e                	jmp    886c <get_dns_name+0x84>
    883e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    8842:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    8849:	48 89 c2             	mov    rdx,rax
    884c:	b8 00 00 00 00       	mov    eax,0x0
    8851:	48 89 d7             	mov    rdi,rdx
    8854:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    8856:	48 89 c8             	mov    rax,rcx
    8859:	48 f7 d0             	not    rax
    885c:	48 8d 50 ff          	lea    rdx,[rax-0x1]
    8860:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    8864:	48 01 d0             	add    rax,rdx
    8867:	66 c7 00 2e 00       	mov    WORD PTR [rax],0x2e
    886c:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    8870:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    8873:	48 63 d8             	movsxd rbx,eax
    8876:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    887a:	48 89 c7             	mov    rdi,rax
    887d:	e8 de 9c ff ff       	call   2560 <strlen@plt>
    8882:	48 39 c3             	cmp    rbx,rax
    8885:	0f 82 7b ff ff ff    	jb     8806 <get_dns_name+0x1e>
    888b:	90                   	nop
    888c:	90                   	nop
    888d:	48 83 c4 28          	add    rsp,0x28
    8891:	5b                   	pop    rbx
    8892:	5d                   	pop    rbp
    8893:	c3                   	ret    

0000000000008894 <ftp_disect>:
    8894:	f3 0f 1e fa          	endbr64 
    8898:	55                   	push   rbp
    8899:	48 89 e5             	mov    rbp,rsp
    889c:	48 83 ec 20          	sub    rsp,0x20
    88a0:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    88a4:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    88a8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    88ac:	48 8d 35 25 50 00 00 	lea    rsi,[rip+0x5025]        # d8d8 <_IO_stdin_used+0x18d8>
    88b3:	48 89 c7             	mov    rdi,rax
    88b6:	e8 c5 9f ff ff       	call   2880 <strstr@plt>
    88bb:	48 85 c0             	test   rax,rax
    88be:	75 1c                	jne    88dc <ftp_disect+0x48>
    88c0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    88c4:	48 8d 35 1d 50 00 00 	lea    rsi,[rip+0x501d]        # d8e8 <_IO_stdin_used+0x18e8>
    88cb:	48 89 c7             	mov    rdi,rax
    88ce:	e8 ad 9f ff ff       	call   2880 <strstr@plt>
    88d3:	48 85 c0             	test   rax,rax
    88d6:	0f 84 8a 00 00 00    	je     8966 <ftp_disect+0xd2>
    88dc:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    88e0:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    88e4:	48 89 c7             	mov    rdi,rax
    88e7:	e8 19 f1 ff ff       	call   7a05 <member_exists>
    88ec:	48 63 d0             	movsxd rdx,eax
    88ef:	48 89 d0             	mov    rax,rdx
    88f2:	48 c1 e0 02          	shl    rax,0x2
    88f6:	48 01 d0             	add    rax,rdx
    88f9:	48 c1 e0 03          	shl    rax,0x3
    88fd:	48 01 d0             	add    rax,rdx
    8900:	48 c1 e0 04          	shl    rax,0x4
    8904:	48 8d 15 95 a7 0e 00 	lea    rdx,[rip+0xea795]        # f30a0 <watchlist>
    890b:	48 01 d0             	add    rax,rdx
    890e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8912:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8916:	8b 80 40 02 00 00    	mov    eax,DWORD PTR [rax+0x240]
    891c:	8d 50 01             	lea    edx,[rax+0x1]
    891f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8923:	89 90 40 02 00 00    	mov    DWORD PTR [rax+0x240],edx
    8929:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    892d:	8b 80 40 02 00 00    	mov    eax,DWORD PTR [rax+0x240]
    8933:	83 f8 04             	cmp    eax,0x4
    8936:	7e 2e                	jle    8966 <ftp_disect+0xd2>
    8938:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    893c:	8b 88 40 02 00 00    	mov    ecx,DWORD PTR [rax+0x240]
    8942:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8946:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    894a:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    894e:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    8952:	48 89 c6             	mov    rsi,rax
    8955:	48 8d 3d 9c 4f 00 00 	lea    rdi,[rip+0x4f9c]        # d8f8 <_IO_stdin_used+0x18f8>
    895c:	b8 00 00 00 00       	mov    eax,0x0
    8961:	e8 5a 9c ff ff       	call   25c0 <printf@plt>
    8966:	90                   	nop
    8967:	c9                   	leave  
    8968:	c3                   	ret    

0000000000008969 <livedebug>:
    8969:	f3 0f 1e fa          	endbr64 
    896d:	55                   	push   rbp
    896e:	48 89 e5             	mov    rbp,rsp
    8971:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
    8978:	48 89 bd 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rdi
    897f:	48 89 b5 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rsi
    8986:	48 89 95 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdx
    898d:	48 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rcx
    8994:	4c 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r8
    899b:	4c 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r9
    89a2:	84 c0                	test   al,al
    89a4:	74 20                	je     89c6 <livedebug+0x5d>
    89a6:	0f 29 45 80          	movaps XMMWORD PTR [rbp-0x80],xmm0
    89aa:	0f 29 4d 90          	movaps XMMWORD PTR [rbp-0x70],xmm1
    89ae:	0f 29 55 a0          	movaps XMMWORD PTR [rbp-0x60],xmm2
    89b2:	0f 29 5d b0          	movaps XMMWORD PTR [rbp-0x50],xmm3
    89b6:	0f 29 65 c0          	movaps XMMWORD PTR [rbp-0x40],xmm4
    89ba:	0f 29 6d d0          	movaps XMMWORD PTR [rbp-0x30],xmm5
    89be:	0f 29 75 e0          	movaps XMMWORD PTR [rbp-0x20],xmm6
    89c2:	0f 29 7d f0          	movaps XMMWORD PTR [rbp-0x10],xmm7
    89c6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    89cd:	00 00 
    89cf:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    89d6:	31 c0                	xor    eax,eax
    89d8:	0f b6 05 c3 13 10 00 	movzx  eax,BYTE PTR [rip+0x1013c3]        # 109da2 <debug_mode>
    89df:	84 c0                	test   al,al
    89e1:	74 4b                	je     8a2e <livedebug+0xc5>
    89e3:	c7 85 30 ff ff ff 08 	mov    DWORD PTR [rbp-0xd0],0x8
    89ea:	00 00 00 
    89ed:	c7 85 34 ff ff ff 30 	mov    DWORD PTR [rbp-0xcc],0x30
    89f4:	00 00 00 
    89f7:	48 8d 45 10          	lea    rax,[rbp+0x10]
    89fb:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    8a02:	48 8d 85 50 ff ff ff 	lea    rax,[rbp-0xb0]
    8a09:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    8a10:	48 8d 95 30 ff ff ff 	lea    rdx,[rbp-0xd0]
    8a17:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    8a1e:	48 89 d6             	mov    rsi,rdx
    8a21:	48 89 c7             	mov    rdi,rax
    8a24:	b8 00 00 00 00       	mov    eax,0x0
    8a29:	e8 92 9b ff ff       	call   25c0 <printf@plt>
    8a2e:	90                   	nop
    8a2f:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    8a36:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    8a3d:	00 00 
    8a3f:	74 05                	je     8a46 <livedebug+0xdd>
    8a41:	e8 3a 9b ff ff       	call   2580 <__stack_chk_fail@plt>
    8a46:	c9                   	leave  
    8a47:	c3                   	ret    

0000000000008a48 <forward_packet>:
    8a48:	f3 0f 1e fa          	endbr64 
    8a4c:	55                   	push   rbp
    8a4d:	48 89 e5             	mov    rbp,rsp
    8a50:	48 83 ec 20          	sub    rsp,0x20
    8a54:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8a58:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a5c:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8a60:	48 8d 35 69 ee 0f 00 	lea    rsi,[rip+0xfee69]        # 1078d0 <local_ip>
    8a67:	48 89 c7             	mov    rdi,rax
    8a6a:	e8 11 9c ff ff       	call   2680 <strcmp@plt>
    8a6f:	85 c0                	test   eax,eax
    8a71:	74 4f                	je     8ac2 <forward_packet+0x7a>
    8a73:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a77:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    8a7b:	48 8d 35 4e ee 0f 00 	lea    rsi,[rip+0xfee4e]        # 1078d0 <local_ip>
    8a82:	48 89 c7             	mov    rdi,rax
    8a85:	e8 f6 9b ff ff       	call   2680 <strcmp@plt>
    8a8a:	85 c0                	test   eax,eax
    8a8c:	74 34                	je     8ac2 <forward_packet+0x7a>
    8a8e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a92:	48 8b 00             	mov    rax,QWORD PTR [rax]
    8a95:	48 8d 50 0e          	lea    rdx,[rax+0xe]
    8a99:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8a9d:	48 89 d6             	mov    rsi,rdx
    8aa0:	48 89 c7             	mov    rdi,rax
    8aa3:	e8 28 9a ff ff       	call   24d0 <strcpy@plt>
    8aa8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8aac:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    8aaf:	83 e8 0e             	sub    eax,0xe
    8ab2:	89 c2                	mov    edx,eax
    8ab4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8ab8:	89 d6                	mov    esi,edx
    8aba:	48 89 c7             	mov    rdi,rax
    8abd:	e8 44 c9 ff ff       	call   5406 <ascii_hexdump>
    8ac2:	90                   	nop
    8ac3:	c9                   	leave  
    8ac4:	c3                   	ret    

0000000000008ac5 <conversation_exists>:
    8ac5:	f3 0f 1e fa          	endbr64 
    8ac9:	55                   	push   rbp
    8aca:	48 89 e5             	mov    rbp,rsp
    8acd:	48 83 ec 20          	sub    rsp,0x20
    8ad1:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8ad5:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    8adc:	e9 ff 00 00 00       	jmp    8be0 <conversation_exists+0x11b>
    8ae1:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8ae4:	48 98                	cdqe   
    8ae6:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8aed:	48 8d 15 0c 15 10 00 	lea    rdx,[rip+0x10150c]        # 10a000 <spi_table>
    8af4:	48 01 d0             	add    rax,rdx
    8af7:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8afb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8aff:	0f b6 80 b0 00 00 00 	movzx  eax,BYTE PTR [rax+0xb0]
    8b06:	84 c0                	test   al,al
    8b08:	0f 84 ce 00 00 00    	je     8bdc <conversation_exists+0x117>
    8b0e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b12:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    8b15:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b19:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    8b1c:	39 c2                	cmp    edx,eax
    8b1e:	75 58                	jne    8b78 <conversation_exists+0xb3>
    8b20:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b24:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    8b27:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b2b:	8b 40 54             	mov    eax,DWORD PTR [rax+0x54]
    8b2e:	39 c2                	cmp    edx,eax
    8b30:	75 46                	jne    8b78 <conversation_exists+0xb3>
    8b32:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8b36:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b3a:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8b3e:	48 89 d6             	mov    rsi,rdx
    8b41:	48 89 c7             	mov    rdi,rax
    8b44:	e8 37 9b ff ff       	call   2680 <strcmp@plt>
    8b49:	85 c0                	test   eax,eax
    8b4b:	0f 85 8a 00 00 00    	jne    8bdb <conversation_exists+0x116>
    8b51:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b55:	48 8d 50 29          	lea    rdx,[rax+0x29]
    8b59:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b5d:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    8b61:	48 89 d6             	mov    rsi,rdx
    8b64:	48 89 c7             	mov    rdi,rax
    8b67:	e8 14 9b ff ff       	call   2680 <strcmp@plt>
    8b6c:	85 c0                	test   eax,eax
    8b6e:	75 6b                	jne    8bdb <conversation_exists+0x116>
    8b70:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8b73:	e9 81 00 00 00       	jmp    8bf9 <conversation_exists+0x134>
    8b78:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b7c:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    8b7f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b83:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    8b86:	39 c2                	cmp    edx,eax
    8b88:	75 52                	jne    8bdc <conversation_exists+0x117>
    8b8a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b8e:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    8b91:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b95:	8b 40 54             	mov    eax,DWORD PTR [rax+0x54]
    8b98:	39 c2                	cmp    edx,eax
    8b9a:	75 40                	jne    8bdc <conversation_exists+0x117>
    8b9c:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8ba0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8ba4:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    8ba8:	48 89 d6             	mov    rsi,rdx
    8bab:	48 89 c7             	mov    rdi,rax
    8bae:	e8 cd 9a ff ff       	call   2680 <strcmp@plt>
    8bb3:	85 c0                	test   eax,eax
    8bb5:	75 25                	jne    8bdc <conversation_exists+0x117>
    8bb7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8bbb:	48 8d 50 29          	lea    rdx,[rax+0x29]
    8bbf:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8bc3:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8bc7:	48 89 d6             	mov    rsi,rdx
    8bca:	48 89 c7             	mov    rdi,rax
    8bcd:	e8 ae 9a ff ff       	call   2680 <strcmp@plt>
    8bd2:	85 c0                	test   eax,eax
    8bd4:	75 06                	jne    8bdc <conversation_exists+0x117>
    8bd6:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8bd9:	eb 1e                	jmp    8bf9 <conversation_exists+0x134>
    8bdb:	90                   	nop
    8bdc:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    8be0:	8b 05 5a 84 00 00    	mov    eax,DWORD PTR [rip+0x845a]        # 11040 <total_conversations>
    8be6:	8d 50 01             	lea    edx,[rax+0x1]
    8be9:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8bec:	39 c2                	cmp    edx,eax
    8bee:	0f 87 ed fe ff ff    	ja     8ae1 <conversation_exists+0x1c>
    8bf4:	b8 ff ff ff ff       	mov    eax,0xffffffff
    8bf9:	c9                   	leave  
    8bfa:	c3                   	ret    

0000000000008bfb <get_new_spi_location>:
    8bfb:	f3 0f 1e fa          	endbr64 
    8bff:	55                   	push   rbp
    8c00:	48 89 e5             	mov    rbp,rsp
    8c03:	8b 05 37 84 00 00    	mov    eax,DWORD PTR [rip+0x8437]        # 11040 <total_conversations>
    8c09:	83 f8 ff             	cmp    eax,0xffffffff
    8c0c:	75 17                	jne    8c25 <get_new_spi_location+0x2a>
    8c0e:	8b 05 2c 84 00 00    	mov    eax,DWORD PTR [rip+0x842c]        # 11040 <total_conversations>
    8c14:	83 c0 01             	add    eax,0x1
    8c17:	89 05 23 84 00 00    	mov    DWORD PTR [rip+0x8423],eax        # 11040 <total_conversations>
    8c1d:	8b 05 1d 84 00 00    	mov    eax,DWORD PTR [rip+0x841d]        # 11040 <total_conversations>
    8c23:	eb 52                	jmp    8c77 <get_new_spi_location+0x7c>
    8c25:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    8c2c:	eb 27                	jmp    8c55 <get_new_spi_location+0x5a>
    8c2e:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    8c31:	48 98                	cdqe   
    8c33:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8c3a:	48 8d 15 6f 14 10 00 	lea    rdx,[rip+0x10146f]        # 10a0b0 <spi_table+0xb0>
    8c41:	0f b6 04 10          	movzx  eax,BYTE PTR [rax+rdx*1]
    8c45:	83 f0 01             	xor    eax,0x1
    8c48:	84 c0                	test   al,al
    8c4a:	74 05                	je     8c51 <get_new_spi_location+0x56>
    8c4c:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    8c4f:	eb 26                	jmp    8c77 <get_new_spi_location+0x7c>
    8c51:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    8c55:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
    8c58:	8b 05 e2 83 00 00    	mov    eax,DWORD PTR [rip+0x83e2]        # 11040 <total_conversations>
    8c5e:	39 c2                	cmp    edx,eax
    8c60:	72 cc                	jb     8c2e <get_new_spi_location+0x33>
    8c62:	8b 05 d8 83 00 00    	mov    eax,DWORD PTR [rip+0x83d8]        # 11040 <total_conversations>
    8c68:	83 c0 01             	add    eax,0x1
    8c6b:	89 05 cf 83 00 00    	mov    DWORD PTR [rip+0x83cf],eax        # 11040 <total_conversations>
    8c71:	8b 05 c9 83 00 00    	mov    eax,DWORD PTR [rip+0x83c9]        # 11040 <total_conversations>
    8c77:	5d                   	pop    rbp
    8c78:	c3                   	ret    

0000000000008c79 <add_new_conversation>:
    8c79:	f3 0f 1e fa          	endbr64 
    8c7d:	55                   	push   rbp
    8c7e:	48 89 e5             	mov    rbp,rsp
    8c81:	48 83 ec 20          	sub    rsp,0x20
    8c85:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8c89:	0f b6 05 a1 ec 0f 00 	movzx  eax,BYTE PTR [rip+0xfeca1]        # 107931 <use_spi>
    8c90:	84 c0                	test   al,al
    8c92:	0f 84 17 02 00 00    	je     8eaf <add_new_conversation+0x236>
    8c98:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8c9c:	48 89 c7             	mov    rdi,rax
    8c9f:	e8 21 fe ff ff       	call   8ac5 <conversation_exists>
    8ca4:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    8ca7:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    8cab:	0f 84 88 00 00 00    	je     8d39 <add_new_conversation+0xc0>
    8cb1:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8cb4:	48 98                	cdqe   
    8cb6:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8cbd:	48 8d 15 3c 13 10 00 	lea    rdx,[rip+0x10133c]        # 10a000 <spi_table>
    8cc4:	48 01 d0             	add    rax,rdx
    8cc7:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8ccb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8ccf:	8b 80 ac 00 00 00    	mov    eax,DWORD PTR [rax+0xac]
    8cd5:	8d 50 01             	lea    edx,[rax+0x1]
    8cd8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8cdc:	89 90 ac 00 00 00    	mov    DWORD PTR [rax+0xac],edx
    8ce2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8ce6:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    8cec:	8d 50 01             	lea    edx,[rax+0x1]
    8cef:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8cf3:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    8cf9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8cfd:	8b 78 54             	mov    edi,DWORD PTR [rax+0x54]
    8d00:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    8d04:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d08:	8b 50 58             	mov    edx,DWORD PTR [rax+0x58]
    8d0b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d0f:	48 8d 70 29          	lea    rsi,[rax+0x29]
    8d13:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8d16:	41 89 f9             	mov    r9d,edi
    8d19:	49 89 c8             	mov    r8,rcx
    8d1c:	89 d1                	mov    ecx,edx
    8d1e:	48 89 f2             	mov    rdx,rsi
    8d21:	89 c6                	mov    esi,eax
    8d23:	48 8d 3d 16 4c 00 00 	lea    rdi,[rip+0x4c16]        # d940 <_IO_stdin_used+0x1940>
    8d2a:	b8 00 00 00 00       	mov    eax,0x0
    8d2f:	e8 8c 98 ff ff       	call   25c0 <printf@plt>
    8d34:	e9 76 01 00 00       	jmp    8eaf <add_new_conversation+0x236>
    8d39:	b8 00 00 00 00       	mov    eax,0x0
    8d3e:	e8 b8 fe ff ff       	call   8bfb <get_new_spi_location>
    8d43:	48 98                	cdqe   
    8d45:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8d4c:	48 8d 15 ad 12 10 00 	lea    rdx,[rip+0x1012ad]        # 10a000 <spi_table>
    8d53:	48 01 d0             	add    rax,rdx
    8d56:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8d5a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d5e:	ba 08 00 00 00       	mov    edx,0x8
    8d63:	be 00 00 00 00       	mov    esi,0x0
    8d68:	48 89 c7             	mov    rdi,rax
    8d6b:	e8 90 98 ff ff       	call   2600 <memset@plt>
    8d70:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d74:	c6 80 b0 00 00 00 01 	mov    BYTE PTR [rax+0xb0],0x1
    8d7b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d7f:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8d83:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8d87:	48 83 c2 29          	add    rdx,0x29
    8d8b:	48 89 c6             	mov    rsi,rax
    8d8e:	48 89 d7             	mov    rdi,rdx
    8d91:	e8 3a 97 ff ff       	call   24d0 <strcpy@plt>
    8d96:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d9a:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
    8d9e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8da2:	48 89 d6             	mov    rsi,rdx
    8da5:	48 89 c7             	mov    rdi,rax
    8da8:	e8 23 97 ff ff       	call   24d0 <strcpy@plt>
    8dad:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8db1:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    8db4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8db8:	89 50 58             	mov    DWORD PTR [rax+0x58],edx
    8dbb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8dbf:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    8dc2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8dc6:	89 50 54             	mov    DWORD PTR [rax+0x54],edx
    8dc9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8dcd:	c7 40 7c 00 00 00 00 	mov    DWORD PTR [rax+0x7c],0x0
    8dd4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8dd8:	48 8d 50 5c          	lea    rdx,[rax+0x5c]
    8ddc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8de0:	48 89 50 70          	mov    QWORD PTR [rax+0x70],rdx
    8de4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8de8:	48 8d 50 60          	lea    rdx,[rax+0x60]
    8dec:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8df0:	48 89 50 68          	mov    QWORD PTR [rax+0x68],rdx
    8df4:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8df8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8dfc:	48 89 d6             	mov    rsi,rdx
    8dff:	48 89 c7             	mov    rdi,rax
    8e02:	e8 8e 04 00 00       	call   9295 <increment_stats>
    8e07:	bf 00 00 00 00       	mov    edi,0x0
    8e0c:	e8 bf 98 ff ff       	call   26d0 <time@plt>
    8e11:	48 89 c2             	mov    rdx,rax
    8e14:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e18:	48 89 90 90 00 00 00 	mov    QWORD PTR [rax+0x90],rdx
    8e1f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e23:	c7 80 80 00 00 00 00 	mov    DWORD PTR [rax+0x80],0x0
    8e2a:	00 00 00 
    8e2d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e31:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    8e37:	8d 50 01             	lea    edx,[rax+0x1]
    8e3a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e3e:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    8e44:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8e48:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    8e4b:	89 c2                	mov    edx,eax
    8e4d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e51:	89 90 a4 00 00 00    	mov    DWORD PTR [rax+0xa4],edx
    8e57:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e5b:	8b 78 54             	mov    edi,DWORD PTR [rax+0x54]
    8e5e:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    8e62:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e66:	8b 50 58             	mov    edx,DWORD PTR [rax+0x58]
    8e69:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e6d:	48 8d 70 29          	lea    rsi,[rax+0x29]
    8e71:	8b 05 c9 81 00 00    	mov    eax,DWORD PTR [rip+0x81c9]        # 11040 <total_conversations>
    8e77:	41 89 f9             	mov    r9d,edi
    8e7a:	49 89 c8             	mov    r8,rcx
    8e7d:	89 d1                	mov    ecx,edx
    8e7f:	48 89 f2             	mov    rdx,rsi
    8e82:	89 c6                	mov    esi,eax
    8e84:	48 8d 3d dd 4a 00 00 	lea    rdi,[rip+0x4add]        # d968 <_IO_stdin_used+0x1968>
    8e8b:	b8 00 00 00 00       	mov    eax,0x0
    8e90:	e8 2b 97 ff ff       	call   25c0 <printf@plt>
    8e95:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8e99:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    8e9c:	83 f8 7e             	cmp    eax,0x7e
    8e9f:	75 0e                	jne    8eaf <add_new_conversation+0x236>
    8ea1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8ea5:	c7 80 8c 00 00 00 f3 	mov    DWORD PTR [rax+0x8c],0xf3
    8eac:	00 00 00 
    8eaf:	90                   	nop
    8eb0:	c9                   	leave  
    8eb1:	c3                   	ret    

0000000000008eb2 <spi_ud_thw>:
    8eb2:	f3 0f 1e fa          	endbr64 
    8eb6:	55                   	push   rbp
    8eb7:	48 89 e5             	mov    rbp,rsp
    8eba:	48 83 ec 20          	sub    rsp,0x20
    8ebe:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8ec2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8ec6:	48 89 c7             	mov    rdi,rax
    8ec9:	e8 f7 fb ff ff       	call   8ac5 <conversation_exists>
    8ece:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    8ed1:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    8ed5:	0f 84 9d 00 00 00    	je     8f78 <spi_ud_thw+0xc6>
    8edb:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8ede:	48 98                	cdqe   
    8ee0:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8ee7:	48 8d 15 12 11 10 00 	lea    rdx,[rip+0x101112]        # 10a000 <spi_table>
    8eee:	48 01 d0             	add    rax,rdx
    8ef1:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8ef5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8ef9:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    8eff:	8d 50 01             	lea    edx,[rax+0x1]
    8f02:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8f06:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    8f0c:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8f10:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8f14:	48 89 d6             	mov    rsi,rdx
    8f17:	48 89 c7             	mov    rdi,rax
    8f1a:	e8 76 03 00 00       	call   9295 <increment_stats>
    8f1f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8f23:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    8f26:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8f2a:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    8f2e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8f32:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    8f35:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8f39:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    8f3d:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8f40:	41 89 f9             	mov    r9d,edi
    8f43:	49 89 f0             	mov    r8,rsi
    8f46:	89 c6                	mov    esi,eax
    8f48:	48 8d 3d 41 4a 00 00 	lea    rdi,[rip+0x4a41]        # d990 <_IO_stdin_used+0x1990>
    8f4f:	b8 00 00 00 00       	mov    eax,0x0
    8f54:	e8 67 96 ff ff       	call   25c0 <printf@plt>
    8f59:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8f5d:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
    8f63:	3d f3 00 00 00       	cmp    eax,0xf3
    8f68:	75 0e                	jne    8f78 <spi_ud_thw+0xc6>
    8f6a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8f6e:	c7 80 8c 00 00 00 f4 	mov    DWORD PTR [rax+0x8c],0xf4
    8f75:	00 00 00 
    8f78:	90                   	nop
    8f79:	c9                   	leave  
    8f7a:	c3                   	ret    

0000000000008f7b <update_table>:
    8f7b:	f3 0f 1e fa          	endbr64 
    8f7f:	55                   	push   rbp
    8f80:	48 89 e5             	mov    rbp,rsp
    8f83:	48 83 ec 30          	sub    rsp,0x30
    8f87:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    8f8b:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8f92:	00 00 
    8f94:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8f98:	31 c0                	xor    eax,eax
    8f9a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8f9e:	48 89 c7             	mov    rdi,rax
    8fa1:	e8 1f fb ff ff       	call   8ac5 <conversation_exists>
    8fa6:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
    8fa9:	83 7d e4 ff          	cmp    DWORD PTR [rbp-0x1c],0xffffffff
    8fad:	0f 84 52 01 00 00    	je     9105 <update_table+0x18a>
    8fb3:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    8fb6:	48 98                	cdqe   
    8fb8:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8fbf:	48 8d 15 3a 10 10 00 	lea    rdx,[rip+0x10103a]        # 10a000 <spi_table>
    8fc6:	48 01 d0             	add    rax,rdx
    8fc9:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    8fcd:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8fd1:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    8fd7:	8d 50 01             	lea    edx,[rax+0x1]
    8fda:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8fde:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    8fe4:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    8fe8:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8fec:	48 89 d6             	mov    rsi,rdx
    8fef:	48 89 c7             	mov    rdi,rax
    8ff2:	e8 9e 02 00 00       	call   9295 <increment_stats>
    8ff7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8ffb:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
    9001:	3d f4 00 00 00       	cmp    eax,0xf4
    9006:	75 4d                	jne    9055 <update_table+0xda>
    9008:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    900c:	c7 80 8c 00 00 00 f1 	mov    DWORD PTR [rax+0x8c],0xf1
    9013:	00 00 00 
    9016:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    901a:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    901d:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9021:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    9025:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9029:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    902c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9030:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    9034:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    9037:	41 89 f9             	mov    r9d,edi
    903a:	49 89 f0             	mov    r8,rsi
    903d:	89 c6                	mov    esi,eax
    903f:	48 8d 3d 72 49 00 00 	lea    rdi,[rip+0x4972]        # d9b8 <_IO_stdin_used+0x19b8>
    9046:	b8 00 00 00 00       	mov    eax,0x0
    904b:	e8 70 95 ff ff       	call   25c0 <printf@plt>
    9050:	e9 b0 00 00 00       	jmp    9105 <update_table+0x18a>
    9055:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9059:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
    905f:	3d f6 00 00 00       	cmp    eax,0xf6
    9064:	0f 85 9b 00 00 00    	jne    9105 <update_table+0x18a>
    906a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    906e:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    9071:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9075:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    9079:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    907d:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    9080:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9084:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    9088:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    908b:	41 89 f9             	mov    r9d,edi
    908e:	49 89 f0             	mov    r8,rsi
    9091:	89 c6                	mov    esi,eax
    9093:	48 8d 3d 4e 49 00 00 	lea    rdi,[rip+0x494e]        # d9e8 <_IO_stdin_used+0x19e8>
    909a:	b8 00 00 00 00       	mov    eax,0x0
    909f:	e8 1c 95 ff ff       	call   25c0 <printf@plt>
    90a4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    90a8:	c7 80 8c 00 00 00 fa 	mov    DWORD PTR [rax+0x8c],0xfa
    90af:	00 00 00 
    90b2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    90b6:	c6 80 b0 00 00 00 00 	mov    BYTE PTR [rax+0xb0],0x0
    90bd:	bf 00 00 00 00       	mov    edi,0x0
    90c2:	e8 09 96 ff ff       	call   26d0 <time@plt>
    90c7:	48 89 c2             	mov    rdx,rax
    90ca:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    90ce:	48 89 90 98 00 00 00 	mov    QWORD PTR [rax+0x98],rdx
    90d5:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    90d9:	48 8d 45 e8          	lea    rax,[rbp-0x18]
    90dd:	48 89 d1             	mov    rcx,rdx
    90e0:	48 8d 15 99 f3 ff ff 	lea    rdx,[rip+0xfffffffffffff399]        # 8480 <update_spi_db>
    90e7:	be 00 00 00 00       	mov    esi,0x0
    90ec:	48 89 c7             	mov    rdi,rax
    90ef:	e8 9c 93 ff ff       	call   2490 <pthread_create@plt>
    90f4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    90f8:	be 00 00 00 00       	mov    esi,0x0
    90fd:	48 89 c7             	mov    rdi,rax
    9100:	e8 9b 96 ff ff       	call   27a0 <pthread_join@plt>
    9105:	90                   	nop
    9106:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    910a:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    9111:	00 00 
    9113:	74 05                	je     911a <update_table+0x19f>
    9115:	e8 66 94 ff ff       	call   2580 <__stack_chk_fail@plt>
    911a:	c9                   	leave  
    911b:	c3                   	ret    

000000000000911c <polite_end>:
    911c:	f3 0f 1e fa          	endbr64 
    9120:	55                   	push   rbp
    9121:	48 89 e5             	mov    rbp,rsp
    9124:	48 83 ec 20          	sub    rsp,0x20
    9128:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    912c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9130:	48 89 c7             	mov    rdi,rax
    9133:	e8 8d f9 ff ff       	call   8ac5 <conversation_exists>
    9138:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    913b:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    913f:	0f 84 e7 00 00 00    	je     922c <polite_end+0x110>
    9145:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    9148:	48 98                	cdqe   
    914a:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    9151:	48 8d 15 a8 0e 10 00 	lea    rdx,[rip+0x100ea8]        # 10a000 <spi_table>
    9158:	48 01 d0             	add    rax,rdx
    915b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    915f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9163:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    9169:	8d 50 01             	lea    edx,[rax+0x1]
    916c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9170:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    9176:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    917a:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
    9180:	3d f5 00 00 00       	cmp    eax,0xf5
    9185:	75 4a                	jne    91d1 <polite_end+0xb5>
    9187:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    918b:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    918e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9192:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    9196:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    919a:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    919d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    91a1:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    91a5:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    91a8:	41 89 f9             	mov    r9d,edi
    91ab:	49 89 f0             	mov    r8,rsi
    91ae:	89 c6                	mov    esi,eax
    91b0:	48 8d 3d 69 48 00 00 	lea    rdi,[rip+0x4869]        # da20 <_IO_stdin_used+0x1a20>
    91b7:	b8 00 00 00 00       	mov    eax,0x0
    91bc:	e8 ff 93 ff ff       	call   25c0 <printf@plt>
    91c1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    91c5:	c7 80 8c 00 00 00 f6 	mov    DWORD PTR [rax+0x8c],0xf6
    91cc:	00 00 00 
    91cf:	eb 48                	jmp    9219 <polite_end+0xfd>
    91d1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    91d5:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    91d8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    91dc:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    91e0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    91e4:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    91e7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    91eb:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    91ef:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    91f2:	41 89 f9             	mov    r9d,edi
    91f5:	49 89 f0             	mov    r8,rsi
    91f8:	89 c6                	mov    esi,eax
    91fa:	48 8d 3d 57 48 00 00 	lea    rdi,[rip+0x4857]        # da58 <_IO_stdin_used+0x1a58>
    9201:	b8 00 00 00 00       	mov    eax,0x0
    9206:	e8 b5 93 ff ff       	call   25c0 <printf@plt>
    920b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    920f:	c7 80 8c 00 00 00 f5 	mov    DWORD PTR [rax+0x8c],0xf5
    9216:	00 00 00 
    9219:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    921d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9221:	48 89 d6             	mov    rsi,rdx
    9224:	48 89 c7             	mov    rdi,rax
    9227:	e8 69 00 00 00       	call   9295 <increment_stats>
    922c:	90                   	nop
    922d:	c9                   	leave  
    922e:	c3                   	ret    

000000000000922f <handle_data_pkt>:
    922f:	f3 0f 1e fa          	endbr64 
    9233:	55                   	push   rbp
    9234:	48 89 e5             	mov    rbp,rsp
    9237:	48 83 ec 20          	sub    rsp,0x20
    923b:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    923f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9243:	48 89 c7             	mov    rdi,rax
    9246:	e8 7a f8 ff ff       	call   8ac5 <conversation_exists>
    924b:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    924e:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    9252:	74 3e                	je     9292 <handle_data_pkt+0x63>
    9254:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    9257:	48 98                	cdqe   
    9259:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    9260:	48 8d 15 99 0d 10 00 	lea    rdx,[rip+0x100d99]        # 10a000 <spi_table>
    9267:	48 01 d0             	add    rax,rdx
    926a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    926e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9272:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    9275:	8d 50 01             	lea    edx,[rax+0x1]
    9278:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    927c:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    927f:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    9283:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9287:	48 89 d6             	mov    rsi,rdx
    928a:	48 89 c7             	mov    rdi,rax
    928d:	e8 03 00 00 00       	call   9295 <increment_stats>
    9292:	90                   	nop
    9293:	c9                   	leave  
    9294:	c3                   	ret    

0000000000009295 <increment_stats>:
    9295:	f3 0f 1e fa          	endbr64 
    9299:	55                   	push   rbp
    929a:	48 89 e5             	mov    rbp,rsp
    929d:	48 83 ec 10          	sub    rsp,0x10
    92a1:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    92a5:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    92a9:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    92ad:	48 8d 50 29          	lea    rdx,[rax+0x29]
    92b1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    92b5:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    92b9:	48 89 d6             	mov    rsi,rdx
    92bc:	48 89 c7             	mov    rdi,rax
    92bf:	e8 bc 93 ff ff       	call   2680 <strcmp@plt>
    92c4:	85 c0                	test   eax,eax
    92c6:	75 13                	jne    92db <increment_stats+0x46>
    92c8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    92cc:	8b 40 60             	mov    eax,DWORD PTR [rax+0x60]
    92cf:	8d 50 01             	lea    edx,[rax+0x1]
    92d2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    92d6:	89 50 60             	mov    DWORD PTR [rax+0x60],edx
    92d9:	eb 2c                	jmp    9307 <increment_stats+0x72>
    92db:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    92df:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    92e3:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    92e7:	48 89 d6             	mov    rsi,rdx
    92ea:	48 89 c7             	mov    rdi,rax
    92ed:	e8 8e 93 ff ff       	call   2680 <strcmp@plt>
    92f2:	85 c0                	test   eax,eax
    92f4:	75 11                	jne    9307 <increment_stats+0x72>
    92f6:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    92fa:	8b 40 5c             	mov    eax,DWORD PTR [rax+0x5c]
    92fd:	8d 50 01             	lea    edx,[rax+0x1]
    9300:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9304:	89 50 5c             	mov    DWORD PTR [rax+0x5c],edx
    9307:	90                   	nop
    9308:	c9                   	leave  
    9309:	c3                   	ret    

000000000000930a <lprintf>:
    930a:	f3 0f 1e fa          	endbr64 
    930e:	55                   	push   rbp
    930f:	48 89 e5             	mov    rbp,rsp
    9312:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
    9319:	48 89 bd 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rdi
    9320:	48 89 b5 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rsi
    9327:	48 89 95 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdx
    932e:	48 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rcx
    9335:	4c 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r8
    933c:	4c 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r9
    9343:	84 c0                	test   al,al
    9345:	74 20                	je     9367 <lprintf+0x5d>
    9347:	0f 29 45 80          	movaps XMMWORD PTR [rbp-0x80],xmm0
    934b:	0f 29 4d 90          	movaps XMMWORD PTR [rbp-0x70],xmm1
    934f:	0f 29 55 a0          	movaps XMMWORD PTR [rbp-0x60],xmm2
    9353:	0f 29 5d b0          	movaps XMMWORD PTR [rbp-0x50],xmm3
    9357:	0f 29 65 c0          	movaps XMMWORD PTR [rbp-0x40],xmm4
    935b:	0f 29 6d d0          	movaps XMMWORD PTR [rbp-0x30],xmm5
    935f:	0f 29 75 e0          	movaps XMMWORD PTR [rbp-0x20],xmm6
    9363:	0f 29 7d f0          	movaps XMMWORD PTR [rbp-0x10],xmm7
    9367:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    936e:	00 00 
    9370:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    9377:	31 c0                	xor    eax,eax
    9379:	c7 85 30 ff ff ff 10 	mov    DWORD PTR [rbp-0xd0],0x10
    9380:	00 00 00 
    9383:	c7 85 34 ff ff ff 30 	mov    DWORD PTR [rbp-0xcc],0x30
    938a:	00 00 00 
    938d:	48 8d 45 10          	lea    rax,[rbp+0x10]
    9391:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    9398:	48 8d 85 50 ff ff ff 	lea    rax,[rbp-0xb0]
    939f:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    93a6:	48 8d 95 30 ff ff ff 	lea    rdx,[rbp-0xd0]
    93ad:	48 8b 8d 20 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xe0]
    93b4:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    93bb:	48 89 ce             	mov    rsi,rcx
    93be:	48 89 c7             	mov    rdi,rax
    93c1:	b8 00 00 00 00       	mov    eax,0x0
    93c6:	e8 d5 92 ff ff       	call   26a0 <fprintf@plt>
    93cb:	90                   	nop
    93cc:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    93d3:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    93da:	00 00 
    93dc:	74 05                	je     93e3 <lprintf+0xd9>
    93de:	e8 9d 91 ff ff       	call   2580 <__stack_chk_fail@plt>
    93e3:	c9                   	leave  
    93e4:	c3                   	ret    

00000000000093e5 <lfprintf>:
    93e5:	f3 0f 1e fa          	endbr64 
    93e9:	55                   	push   rbp
    93ea:	48 89 e5             	mov    rbp,rsp
    93ed:	48 81 ec 90 08 00 00 	sub    rsp,0x890
    93f4:	48 89 bd 98 f7 ff ff 	mov    QWORD PTR [rbp-0x868],rdi
    93fb:	48 89 b5 90 f7 ff ff 	mov    QWORD PTR [rbp-0x870],rsi
    9402:	48 89 95 88 f7 ff ff 	mov    QWORD PTR [rbp-0x878],rdx
    9409:	48 89 8d 80 f7 ff ff 	mov    QWORD PTR [rbp-0x880],rcx
    9410:	44 89 85 7c f7 ff ff 	mov    DWORD PTR [rbp-0x884],r8d
    9417:	44 89 8d 78 f7 ff ff 	mov    DWORD PTR [rbp-0x888],r9d
    941e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9425:	00 00 
    9427:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    942b:	31 c0                	xor    eax,eax
    942d:	48 8b 85 98 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x868]
    9434:	48 8d 35 55 46 00 00 	lea    rsi,[rip+0x4655]        # da90 <_IO_stdin_used+0x1a90>
    943b:	48 89 c7             	mov    rdi,rax
    943e:	e8 2d 93 ff ff       	call   2770 <fopen@plt>
    9443:	48 89 85 a8 f7 ff ff 	mov    QWORD PTR [rbp-0x858],rax
    944a:	48 83 bd a8 f7 ff ff 	cmp    QWORD PTR [rbp-0x858],0x0
    9451:	00 
    9452:	75 20                	jne    9474 <lfprintf+0x8f>
    9454:	48 8b 85 90 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x870]
    945b:	48 89 c6             	mov    rsi,rax
    945e:	48 8d 3d 33 46 00 00 	lea    rdi,[rip+0x4633]        # da98 <_IO_stdin_used+0x1a98>
    9465:	b8 00 00 00 00       	mov    eax,0x0
    946a:	e8 51 91 ff ff       	call   25c0 <printf@plt>
    946f:	e9 cd 00 00 00       	jmp    9541 <lfprintf+0x15c>
    9474:	48 8d 85 b0 f7 ff ff 	lea    rax,[rbp-0x850]
    947b:	48 89 c7             	mov    rdi,rax
    947e:	e8 b1 9f ff ff       	call   3434 <cb_get_formatted_time>
    9483:	83 bd 7c f7 ff ff ff 	cmp    DWORD PTR [rbp-0x884],0xffffffff
    948a:	75 3f                	jne    94cb <lfprintf+0xe6>
    948c:	48 8b bd 80 f7 ff ff 	mov    rdi,QWORD PTR [rbp-0x880]
    9493:	48 8b b5 88 f7 ff ff 	mov    rsi,QWORD PTR [rbp-0x878]
    949a:	48 8b 8d 90 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x870]
    94a1:	48 8d 95 b0 f7 ff ff 	lea    rdx,[rbp-0x850]
    94a8:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    94af:	49 89 f9             	mov    r9,rdi
    94b2:	49 89 f0             	mov    r8,rsi
    94b5:	48 8d 35 0a 46 00 00 	lea    rsi,[rip+0x460a]        # dac6 <_IO_stdin_used+0x1ac6>
    94bc:	48 89 c7             	mov    rdi,rax
    94bf:	b8 00 00 00 00       	mov    eax,0x0
    94c4:	e8 67 93 ff ff       	call   2830 <sprintf@plt>
    94c9:	eb 4e                	jmp    9519 <lfprintf+0x134>
    94cb:	44 8b 85 7c f7 ff ff 	mov    r8d,DWORD PTR [rbp-0x884]
    94d2:	48 8b bd 88 f7 ff ff 	mov    rdi,QWORD PTR [rbp-0x878]
    94d9:	48 8b 8d 90 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x870]
    94e0:	48 8d 95 b0 f7 ff ff 	lea    rdx,[rbp-0x850]
    94e7:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    94ee:	8b b5 78 f7 ff ff    	mov    esi,DWORD PTR [rbp-0x888]
    94f4:	56                   	push   rsi
    94f5:	ff b5 80 f7 ff ff    	push   QWORD PTR [rbp-0x880]
    94fb:	45 89 c1             	mov    r9d,r8d
    94fe:	49 89 f8             	mov    r8,rdi
    9501:	48 8d 35 ce 45 00 00 	lea    rsi,[rip+0x45ce]        # dad6 <_IO_stdin_used+0x1ad6>
    9508:	48 89 c7             	mov    rdi,rax
    950b:	b8 00 00 00 00       	mov    eax,0x0
    9510:	e8 1b 93 ff ff       	call   2830 <sprintf@plt>
    9515:	48 83 c4 10          	add    rsp,0x10
    9519:	48 8b 95 a8 f7 ff ff 	mov    rdx,QWORD PTR [rbp-0x858]
    9520:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    9527:	48 89 d6             	mov    rsi,rdx
    952a:	48 89 c7             	mov    rdi,rax
    952d:	e8 ae 90 ff ff       	call   25e0 <fputs@plt>
    9532:	48 8b 85 a8 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x858]
    9539:	48 89 c7             	mov    rdi,rax
    953c:	e8 0f 90 ff ff       	call   2550 <fclose@plt>
    9541:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9545:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    954c:	00 00 
    954e:	74 05                	je     9555 <lfprintf+0x170>
    9550:	e8 2b 90 ff ff       	call   2580 <__stack_chk_fail@plt>
    9555:	c9                   	leave  
    9556:	c3                   	ret    

0000000000009557 <saprintf>:
    9557:	f3 0f 1e fa          	endbr64 
    955b:	55                   	push   rbp
    955c:	48 89 e5             	mov    rbp,rsp
    955f:	48 83 ec 20          	sub    rsp,0x20
    9563:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    9567:	48 8b 05 c2 7a 00 00 	mov    rax,QWORD PTR [rip+0x7ac2]        # 11030 <def_log_file>
    956e:	48 8d 35 1b 45 00 00 	lea    rsi,[rip+0x451b]        # da90 <_IO_stdin_used+0x1a90>
    9575:	48 89 c7             	mov    rdi,rax
    9578:	e8 f3 91 ff ff       	call   2770 <fopen@plt>
    957d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9581:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    9586:	75 1a                	jne    95a2 <saprintf+0x4b>
    9588:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    958c:	48 89 c6             	mov    rsi,rax
    958f:	48 8d 3d 02 45 00 00 	lea    rdi,[rip+0x4502]        # da98 <_IO_stdin_used+0x1a98>
    9596:	b8 00 00 00 00       	mov    eax,0x0
    959b:	e8 20 90 ff ff       	call   25c0 <printf@plt>
    95a0:	eb 1f                	jmp    95c1 <saprintf+0x6a>
    95a2:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    95a6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    95aa:	48 89 d6             	mov    rsi,rdx
    95ad:	48 89 c7             	mov    rdi,rax
    95b0:	e8 2b 90 ff ff       	call   25e0 <fputs@plt>
    95b5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    95b9:	48 89 c7             	mov    rdi,rax
    95bc:	e8 8f 8f ff ff       	call   2550 <fclose@plt>
    95c1:	c9                   	leave  
    95c2:	c3                   	ret    

00000000000095c3 <substr>:
    95c3:	f3 0f 1e fa          	endbr64 
    95c7:	55                   	push   rbp
    95c8:	48 89 e5             	mov    rbp,rsp
    95cb:	48 83 ec 20          	sub    rsp,0x20
    95cf:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    95d3:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    95d6:	89 55 e0             	mov    DWORD PTR [rbp-0x20],edx
    95d9:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
    95dc:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    95df:	83 c0 02             	add    eax,0x2
    95e2:	48 98                	cdqe   
    95e4:	48 89 c7             	mov    rdi,rax
    95e7:	e8 14 91 ff ff       	call   2700 <malloc@plt>
    95ec:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    95f0:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    95f3:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    95f6:	eb 27                	jmp    961f <substr+0x5c>
    95f8:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    95fb:	48 63 d0             	movsxd rdx,eax
    95fe:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9602:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    9606:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    9609:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    960c:	48 63 d0             	movsxd rdx,eax
    960f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9613:	48 01 c2             	add    rdx,rax
    9616:	0f b6 01             	movzx  eax,BYTE PTR [rcx]
    9619:	88 02                	mov    BYTE PTR [rdx],al
    961b:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    961f:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    9622:	3b 45 e0             	cmp    eax,DWORD PTR [rbp-0x20]
    9625:	7e d1                	jle    95f8 <substr+0x35>
    9627:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
    962a:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    962d:	48 98                	cdqe   
    962f:	48 8d 50 01          	lea    rdx,[rax+0x1]
    9633:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9637:	48 01 d0             	add    rax,rdx
    963a:	c6 00 00             	mov    BYTE PTR [rax],0x0
    963d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9641:	c9                   	leave  
    9642:	c3                   	ret    

0000000000009643 <delimit>:
    9643:	f3 0f 1e fa          	endbr64 
    9647:	55                   	push   rbp
    9648:	48 89 e5             	mov    rbp,rsp
    964b:	89 f8                	mov    eax,edi
    964d:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
    9650:	80 7d fc 20          	cmp    BYTE PTR [rbp-0x4],0x20
    9654:	0f 94 c0             	sete   al
    9657:	5d                   	pop    rbp
    9658:	c3                   	ret    

0000000000009659 <isdigit>:
    9659:	f3 0f 1e fa          	endbr64 
    965d:	55                   	push   rbp
    965e:	48 89 e5             	mov    rbp,rsp
    9661:	53                   	push   rbx
    9662:	48 83 ec 28          	sub    rsp,0x28
    9666:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    966a:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    9671:	e9 f7 00 00 00       	jmp    976d <isdigit+0x114>
    9676:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9679:	48 63 d0             	movsxd rdx,eax
    967c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9680:	48 01 d0             	add    rax,rdx
    9683:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9686:	3c 30                	cmp    al,0x30
    9688:	0f 84 db 00 00 00    	je     9769 <isdigit+0x110>
    968e:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9691:	48 63 d0             	movsxd rdx,eax
    9694:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9698:	48 01 d0             	add    rax,rdx
    969b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    969e:	3c 31                	cmp    al,0x31
    96a0:	0f 84 c3 00 00 00    	je     9769 <isdigit+0x110>
    96a6:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    96a9:	48 63 d0             	movsxd rdx,eax
    96ac:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    96b0:	48 01 d0             	add    rax,rdx
    96b3:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    96b6:	3c 32                	cmp    al,0x32
    96b8:	0f 84 ab 00 00 00    	je     9769 <isdigit+0x110>
    96be:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    96c1:	48 63 d0             	movsxd rdx,eax
    96c4:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    96c8:	48 01 d0             	add    rax,rdx
    96cb:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    96ce:	3c 33                	cmp    al,0x33
    96d0:	0f 84 93 00 00 00    	je     9769 <isdigit+0x110>
    96d6:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    96d9:	48 63 d0             	movsxd rdx,eax
    96dc:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    96e0:	48 01 d0             	add    rax,rdx
    96e3:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    96e6:	3c 34                	cmp    al,0x34
    96e8:	74 7f                	je     9769 <isdigit+0x110>
    96ea:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    96ed:	48 63 d0             	movsxd rdx,eax
    96f0:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    96f4:	48 01 d0             	add    rax,rdx
    96f7:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    96fa:	3c 34                	cmp    al,0x34
    96fc:	74 6b                	je     9769 <isdigit+0x110>
    96fe:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9701:	48 63 d0             	movsxd rdx,eax
    9704:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9708:	48 01 d0             	add    rax,rdx
    970b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    970e:	3c 35                	cmp    al,0x35
    9710:	74 57                	je     9769 <isdigit+0x110>
    9712:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9715:	48 63 d0             	movsxd rdx,eax
    9718:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    971c:	48 01 d0             	add    rax,rdx
    971f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9722:	3c 36                	cmp    al,0x36
    9724:	74 43                	je     9769 <isdigit+0x110>
    9726:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9729:	48 63 d0             	movsxd rdx,eax
    972c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9730:	48 01 d0             	add    rax,rdx
    9733:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9736:	3c 37                	cmp    al,0x37
    9738:	74 2f                	je     9769 <isdigit+0x110>
    973a:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    973d:	48 63 d0             	movsxd rdx,eax
    9740:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9744:	48 01 d0             	add    rax,rdx
    9747:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    974a:	3c 38                	cmp    al,0x38
    974c:	74 1b                	je     9769 <isdigit+0x110>
    974e:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9751:	48 63 d0             	movsxd rdx,eax
    9754:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9758:	48 01 d0             	add    rax,rdx
    975b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    975e:	3c 39                	cmp    al,0x39
    9760:	74 07                	je     9769 <isdigit+0x110>
    9762:	b8 00 00 00 00       	mov    eax,0x0
    9767:	eb 24                	jmp    978d <isdigit+0x134>
    9769:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    976d:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9770:	48 63 d8             	movsxd rbx,eax
    9773:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9777:	48 89 c7             	mov    rdi,rax
    977a:	e8 e1 8d ff ff       	call   2560 <strlen@plt>
    977f:	48 39 c3             	cmp    rbx,rax
    9782:	0f 82 ee fe ff ff    	jb     9676 <isdigit+0x1d>
    9788:	b8 01 00 00 00       	mov    eax,0x1
    978d:	48 83 c4 28          	add    rsp,0x28
    9791:	5b                   	pop    rbx
    9792:	5d                   	pop    rbp
    9793:	c3                   	ret    

0000000000009794 <assign_port_number>:
    9794:	f3 0f 1e fa          	endbr64 
    9798:	55                   	push   rbp
    9799:	48 89 e5             	mov    rbp,rsp
    979c:	48 83 ec 10          	sub    rsp,0x10
    97a0:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    97a4:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    97a8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    97ac:	48 89 c7             	mov    rdi,rax
    97af:	e8 a5 fe ff ff       	call   9659 <isdigit>
    97b4:	84 c0                	test   al,al
    97b6:	74 18                	je     97d0 <assign_port_number+0x3c>
    97b8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    97bc:	48 89 c7             	mov    rdi,rax
    97bf:	e8 1c 90 ff ff       	call   27e0 <atoi@plt>
    97c4:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    97c8:	89 82 44 01 00 00    	mov    DWORD PTR [rdx+0x144],eax
    97ce:	eb 25                	jmp    97f5 <assign_port_number+0x61>
    97d0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    97d4:	48 8d 35 15 43 00 00 	lea    rsi,[rip+0x4315]        # daf0 <_IO_stdin_used+0x1af0>
    97db:	48 89 c7             	mov    rdi,rax
    97de:	e8 9d 8e ff ff       	call   2680 <strcmp@plt>
    97e3:	85 c0                	test   eax,eax
    97e5:	75 0e                	jne    97f5 <assign_port_number+0x61>
    97e7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    97eb:	c7 80 44 01 00 00 ff 	mov    DWORD PTR [rax+0x144],0xffffffff
    97f2:	ff ff ff 
    97f5:	90                   	nop
    97f6:	c9                   	leave  
    97f7:	c3                   	ret    

00000000000097f8 <check_port_number>:
    97f8:	f3 0f 1e fa          	endbr64 
    97fc:	55                   	push   rbp
    97fd:	48 89 e5             	mov    rbp,rsp
    9800:	48 83 ec 10          	sub    rsp,0x10
    9804:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9808:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    980c:	48 89 c7             	mov    rdi,rax
    980f:	e8 45 fe ff ff       	call   9659 <isdigit>
    9814:	84 c0                	test   al,al
    9816:	74 0e                	je     9826 <check_port_number+0x2e>
    9818:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    981c:	48 89 c7             	mov    rdi,rax
    981f:	e8 bc 8f ff ff       	call   27e0 <atoi@plt>
    9824:	eb 23                	jmp    9849 <check_port_number+0x51>
    9826:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    982a:	48 8d 35 bf 42 00 00 	lea    rsi,[rip+0x42bf]        # daf0 <_IO_stdin_used+0x1af0>
    9831:	48 89 c7             	mov    rdi,rax
    9834:	e8 47 8e ff ff       	call   2680 <strcmp@plt>
    9839:	85 c0                	test   eax,eax
    983b:	75 07                	jne    9844 <check_port_number+0x4c>
    983d:	b8 ff ff ff ff       	mov    eax,0xffffffff
    9842:	eb 05                	jmp    9849 <check_port_number+0x51>
    9844:	b8 ff ff ff ff       	mov    eax,0xffffffff
    9849:	c9                   	leave  
    984a:	c3                   	ret    

000000000000984b <assign_protocol>:
    984b:	f3 0f 1e fa          	endbr64 
    984f:	55                   	push   rbp
    9850:	48 89 e5             	mov    rbp,rsp
    9853:	48 83 ec 10          	sub    rsp,0x10
    9857:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    985b:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    985f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9863:	48 8d 35 8a 42 00 00 	lea    rsi,[rip+0x428a]        # daf4 <_IO_stdin_used+0x1af4>
    986a:	48 89 c7             	mov    rdi,rax
    986d:	e8 0e 8e ff ff       	call   2680 <strcmp@plt>
    9872:	85 c0                	test   eax,eax
    9874:	75 10                	jne    9886 <assign_protocol+0x3b>
    9876:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    987a:	c7 80 40 01 00 00 ff 	mov    DWORD PTR [rax+0x140],0xffffffff
    9881:	ff ff ff 
    9884:	eb 73                	jmp    98f9 <assign_protocol+0xae>
    9886:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    988a:	48 8d 35 67 42 00 00 	lea    rsi,[rip+0x4267]        # daf8 <_IO_stdin_used+0x1af8>
    9891:	48 89 c7             	mov    rdi,rax
    9894:	e8 e7 8d ff ff       	call   2680 <strcmp@plt>
    9899:	85 c0                	test   eax,eax
    989b:	75 10                	jne    98ad <assign_protocol+0x62>
    989d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    98a1:	c7 80 40 01 00 00 80 	mov    DWORD PTR [rax+0x140],0x80
    98a8:	00 00 00 
    98ab:	eb 4c                	jmp    98f9 <assign_protocol+0xae>
    98ad:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    98b1:	48 8d 35 45 42 00 00 	lea    rsi,[rip+0x4245]        # dafd <_IO_stdin_used+0x1afd>
    98b8:	48 89 c7             	mov    rdi,rax
    98bb:	e8 c0 8d ff ff       	call   2680 <strcmp@plt>
    98c0:	85 c0                	test   eax,eax
    98c2:	75 10                	jne    98d4 <assign_protocol+0x89>
    98c4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    98c8:	c7 80 40 01 00 00 7e 	mov    DWORD PTR [rax+0x140],0x7e
    98cf:	00 00 00 
    98d2:	eb 25                	jmp    98f9 <assign_protocol+0xae>
    98d4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    98d8:	48 8d 35 22 42 00 00 	lea    rsi,[rip+0x4222]        # db01 <_IO_stdin_used+0x1b01>
    98df:	48 89 c7             	mov    rdi,rax
    98e2:	e8 99 8d ff ff       	call   2680 <strcmp@plt>
    98e7:	85 c0                	test   eax,eax
    98e9:	75 0e                	jne    98f9 <assign_protocol+0xae>
    98eb:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    98ef:	c7 80 40 01 00 00 7f 	mov    DWORD PTR [rax+0x140],0x7f
    98f6:	00 00 00 
    98f9:	90                   	nop
    98fa:	c9                   	leave  
    98fb:	c3                   	ret    

00000000000098fc <get_ruletype>:
    98fc:	f3 0f 1e fa          	endbr64 
    9900:	55                   	push   rbp
    9901:	48 89 e5             	mov    rbp,rsp
    9904:	48 83 ec 10          	sub    rsp,0x10
    9908:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    990c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    9910:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9914:	ba 09 00 00 00       	mov    edx,0x9
    9919:	48 8d 35 e5 41 00 00 	lea    rsi,[rip+0x41e5]        # db05 <_IO_stdin_used+0x1b05>
    9920:	48 89 c7             	mov    rdi,rax
    9923:	e8 98 8b ff ff       	call   24c0 <strncmp@plt>
    9928:	85 c0                	test   eax,eax
    992a:	75 17                	jne    9943 <get_ruletype+0x47>
    992c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9930:	48 8d 15 7c bd ff ff 	lea    rdx,[rip+0xffffffffffffbd7c]        # 56b3 <str_match_parser>
    9937:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    993e:	e9 82 00 00 00       	jmp    99c5 <get_ruletype+0xc9>
    9943:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9947:	ba 04 00 00 00       	mov    edx,0x4
    994c:	48 8d 35 bc 41 00 00 	lea    rsi,[rip+0x41bc]        # db0f <_IO_stdin_used+0x1b0f>
    9953:	48 89 c7             	mov    rdi,rax
    9956:	e8 65 8b ff ff       	call   24c0 <strncmp@plt>
    995b:	85 c0                	test   eax,eax
    995d:	75 14                	jne    9973 <get_ruletype+0x77>
    995f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9963:	48 8d 15 ef bf ff ff 	lea    rdx,[rip+0xffffffffffffbfef]        # 5959 <none>
    996a:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    9971:	eb 52                	jmp    99c5 <get_ruletype+0xc9>
    9973:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9977:	ba 04 00 00 00       	mov    edx,0x4
    997c:	48 8d 35 91 41 00 00 	lea    rsi,[rip+0x4191]        # db14 <_IO_stdin_used+0x1b14>
    9983:	48 89 c7             	mov    rdi,rax
    9986:	e8 35 8b ff ff       	call   24c0 <strncmp@plt>
    998b:	85 c0                	test   eax,eax
    998d:	75 14                	jne    99a3 <get_ruletype+0xa7>
    998f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9993:	48 8d 15 d6 bf ff ff 	lea    rdx,[rip+0xffffffffffffbfd6]        # 5970 <pcre_match>
    999a:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    99a1:	eb 22                	jmp    99c5 <get_ruletype+0xc9>
    99a3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    99a7:	48 89 c6             	mov    rsi,rax
    99aa:	48 8d 3d 68 41 00 00 	lea    rdi,[rip+0x4168]        # db19 <_IO_stdin_used+0x1b19>
    99b1:	b8 00 00 00 00       	mov    eax,0x0
    99b6:	e8 05 8c ff ff       	call   25c0 <printf@plt>
    99bb:	bf 01 00 00 00       	mov    edi,0x1
    99c0:	e8 7b 8e ff ff       	call   2840 <exit@plt>
    99c5:	c9                   	leave  
    99c6:	c3                   	ret    

00000000000099c7 <numeric_check>:
    99c7:	f3 0f 1e fa          	endbr64 
    99cb:	55                   	push   rbp
    99cc:	48 89 e5             	mov    rbp,rsp
    99cf:	48 83 ec 30          	sub    rsp,0x30
    99d3:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    99d7:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    99da:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    99de:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    99e2:	48 89 c7             	mov    rdi,rax
    99e5:	e8 6f fc ff ff       	call   9659 <isdigit>
    99ea:	84 c0                	test   al,al
    99ec:	74 27                	je     9a15 <numeric_check+0x4e>
    99ee:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    99f2:	48 89 c7             	mov    rdi,rax
    99f5:	e8 e6 8d ff ff       	call   27e0 <atoi@plt>
    99fa:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
    99fd:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    9a00:	39 45 e4             	cmp    DWORD PTR [rbp-0x1c],eax
    9a03:	77 10                	ja     9a15 <numeric_check+0x4e>
    9a05:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    9a08:	48 98                	cdqe   
    9a0a:	48 39 45 d8          	cmp    QWORD PTR [rbp-0x28],rax
    9a0e:	72 05                	jb     9a15 <numeric_check+0x4e>
    9a10:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    9a13:	eb 05                	jmp    9a1a <numeric_check+0x53>
    9a15:	b8 ff ff ff ff       	mov    eax,0xffffffff
    9a1a:	c9                   	leave  
    9a1b:	c3                   	ret    

0000000000009a1c <sc_strip>:
    9a1c:	f3 0f 1e fa          	endbr64 
    9a20:	55                   	push   rbp
    9a21:	48 89 e5             	mov    rbp,rsp
    9a24:	48 83 ec 10          	sub    rsp,0x10
    9a28:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9a2c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9a30:	48 8d 35 f9 40 00 00 	lea    rsi,[rip+0x40f9]        # db30 <_IO_stdin_used+0x1b30>
    9a37:	48 89 c7             	mov    rdi,rax
    9a3a:	e8 01 8c ff ff       	call   2640 <strcspn@plt>
    9a3f:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    9a43:	48 01 d0             	add    rax,rdx
    9a46:	c6 00 00             	mov    BYTE PTR [rax],0x0
    9a49:	90                   	nop
    9a4a:	c9                   	leave  
    9a4b:	c3                   	ret    

0000000000009a4c <void_rule>:
    9a4c:	f3 0f 1e fa          	endbr64 
    9a50:	55                   	push   rbp
    9a51:	48 89 e5             	mov    rbp,rsp
    9a54:	48 83 ec 10          	sub    rsp,0x10
    9a58:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9a5c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9a60:	48 05 6e 03 00 00    	add    rax,0x36e
    9a66:	ba 0a 00 00 00       	mov    edx,0xa
    9a6b:	be 00 00 00 00       	mov    esi,0x0
    9a70:	48 89 c7             	mov    rdi,rax
    9a73:	e8 88 8b ff ff       	call   2600 <memset@plt>
    9a78:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9a7c:	48 05 68 03 00 00    	add    rax,0x368
    9a82:	ba 06 00 00 00       	mov    edx,0x6
    9a87:	be 00 00 00 00       	mov    esi,0x0
    9a8c:	48 89 c7             	mov    rdi,rax
    9a8f:	e8 6c 8b ff ff       	call   2600 <memset@plt>
    9a94:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9a98:	48 05 50 03 00 00    	add    rax,0x350
    9a9e:	ba 18 00 00 00       	mov    edx,0x18
    9aa3:	be 00 00 00 00       	mov    esi,0x0
    9aa8:	48 89 c7             	mov    rdi,rax
    9aab:	e8 50 8b ff ff       	call   2600 <memset@plt>
    9ab0:	90                   	nop
    9ab1:	c9                   	leave  
    9ab2:	c3                   	ret    

0000000000009ab3 <line_parser>:
    9ab3:	f3 0f 1e fa          	endbr64 
    9ab7:	55                   	push   rbp
    9ab8:	48 89 e5             	mov    rbp,rsp
    9abb:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    9ac2:	48 89 bd 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdi
    9ac9:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9ad0:	00 00 
    9ad2:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9ad6:	31 c0                	xor    eax,eax
    9ad8:	8b 05 36 75 00 00    	mov    eax,DWORD PTR [rip+0x7536]        # 11014 <num_rules>
    9ade:	83 c0 01             	add    eax,0x1
    9ae1:	89 05 2d 75 00 00    	mov    DWORD PTR [rip+0x752d],eax        # 11014 <num_rules>
    9ae7:	8b 05 27 75 00 00    	mov    eax,DWORD PTR [rip+0x7527]        # 11014 <num_rules>
    9aed:	48 98                	cdqe   
    9aef:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    9af6:	48 8d 15 a3 75 00 00 	lea    rdx,[rip+0x75a3]        # 110a0 <rules>
    9afd:	48 01 d0             	add    rax,rdx
    9b00:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    9b04:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9b08:	ba 08 00 00 00       	mov    edx,0x8
    9b0d:	be 00 00 00 00       	mov    esi,0x0
    9b12:	48 89 c7             	mov    rdi,rax
    9b15:	e8 e6 8a ff ff       	call   2600 <memset@plt>
    9b1a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9b1e:	c7 80 44 01 00 00 ff 	mov    DWORD PTR [rax+0x144],0xffffffff
    9b25:	ff ff ff 
    9b28:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9b2c:	c7 80 40 01 00 00 ff 	mov    DWORD PTR [rax+0x140],0xffffffff
    9b33:	ff ff ff 
    9b36:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9b3a:	c7 40 1c ff ff ff ff 	mov    DWORD PTR [rax+0x1c],0xffffffff
    9b41:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9b45:	c7 40 18 ff ff ff ff 	mov    DWORD PTR [rax+0x18],0xffffffff
    9b4c:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9b50:	c7 40 10 ff ff ff ff 	mov    DWORD PTR [rax+0x10],0xffffffff
    9b57:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9b5b:	c7 80 4c 03 00 00 00 	mov    DWORD PTR [rax+0x34c],0x0
    9b62:	00 00 00 
    9b65:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9b69:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
    9b6f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9b73:	c7 40 04 00 00 00 00 	mov    DWORD PTR [rax+0x4],0x0
    9b7a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9b7e:	48 89 c7             	mov    rdi,rax
    9b81:	e8 c6 fe ff ff       	call   9a4c <void_rule>
    9b86:	c7 45 98 00 00 00 00 	mov    DWORD PTR [rbp-0x68],0x0
    9b8d:	c6 45 8c 00          	mov    BYTE PTR [rbp-0x74],0x0
    9b91:	c7 45 90 00 00 00 00 	mov    DWORD PTR [rbp-0x70],0x0
    9b98:	c7 45 94 00 00 00 00 	mov    DWORD PTR [rbp-0x6c],0x0
    9b9f:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    9ba6:	48 89 c7             	mov    rdi,rax
    9ba9:	e8 b2 89 ff ff       	call   2560 <strlen@plt>
    9bae:	89 45 9c             	mov    DWORD PTR [rbp-0x64],eax
    9bb1:	c6 45 8d 00          	mov    BYTE PTR [rbp-0x73],0x0
    9bb5:	c6 45 8e 00          	mov    BYTE PTR [rbp-0x72],0x0
    9bb9:	c6 45 8f 00          	mov    BYTE PTR [rbp-0x71],0x0
    9bbd:	e9 03 0e 00 00       	jmp    a9c5 <line_parser+0xf12>
    9bc2:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    9bc5:	48 63 d0             	movsxd rdx,eax
    9bc8:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    9bcf:	48 01 d0             	add    rax,rdx
    9bd2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9bd5:	0f be c0             	movsx  eax,al
    9bd8:	89 c7                	mov    edi,eax
    9bda:	e8 64 fa ff ff       	call   9643 <delimit>
    9bdf:	83 f0 01             	xor    eax,0x1
    9be2:	84 c0                	test   al,al
    9be4:	74 04                	je     9bea <line_parser+0x137>
    9be6:	83 45 94 01          	add    DWORD PTR [rbp-0x6c],0x1
    9bea:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    9bed:	48 63 d0             	movsxd rdx,eax
    9bf0:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    9bf7:	48 01 d0             	add    rax,rdx
    9bfa:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9bfd:	0f be c0             	movsx  eax,al
    9c00:	89 c7                	mov    edi,eax
    9c02:	e8 3c fa ff ff       	call   9643 <delimit>
    9c07:	84 c0                	test   al,al
    9c09:	74 3f                	je     9c4a <line_parser+0x197>
    9c0b:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    9c0e:	3b 45 90             	cmp    eax,DWORD PTR [rbp-0x70]
    9c11:	75 37                	jne    9c4a <line_parser+0x197>
    9c13:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    9c16:	48 63 d0             	movsxd rdx,eax
    9c19:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    9c20:	48 01 d0             	add    rax,rdx
    9c23:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9c26:	3c 3a                	cmp    al,0x3a
    9c28:	75 11                	jne    9c3b <line_parser+0x188>
    9c2a:	48 8d 3d 01 3f 00 00 	lea    rdi,[rip+0x3f01]        # db32 <_IO_stdin_used+0x1b32>
    9c31:	b8 00 00 00 00       	mov    eax,0x0
    9c36:	e8 85 89 ff ff       	call   25c0 <printf@plt>
    9c3b:	83 45 94 01          	add    DWORD PTR [rbp-0x6c],0x1
    9c3f:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    9c42:	89 45 90             	mov    DWORD PTR [rbp-0x70],eax
    9c45:	e9 7b 0d 00 00       	jmp    a9c5 <line_parser+0xf12>
    9c4a:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    9c4d:	48 63 d0             	movsxd rdx,eax
    9c50:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    9c57:	48 01 d0             	add    rax,rdx
    9c5a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9c5d:	0f be c0             	movsx  eax,al
    9c60:	89 c7                	mov    edi,eax
    9c62:	e8 dc f9 ff ff       	call   9643 <delimit>
    9c67:	84 c0                	test   al,al
    9c69:	74 08                	je     9c73 <line_parser+0x1c0>
    9c6b:	8b 45 90             	mov    eax,DWORD PTR [rbp-0x70]
    9c6e:	3b 45 94             	cmp    eax,DWORD PTR [rbp-0x6c]
    9c71:	75 18                	jne    9c8b <line_parser+0x1d8>
    9c73:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    9c76:	3b 45 9c             	cmp    eax,DWORD PTR [rbp-0x64]
    9c79:	0f 85 46 0d 00 00    	jne    a9c5 <line_parser+0xf12>
    9c7f:	8b 45 90             	mov    eax,DWORD PTR [rbp-0x70]
    9c82:	3b 45 94             	cmp    eax,DWORD PTR [rbp-0x6c]
    9c85:	0f 84 3a 0d 00 00    	je     a9c5 <line_parser+0xf12>
    9c8b:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    9c8e:	8d 50 ff             	lea    edx,[rax-0x1]
    9c91:	8b 4d 90             	mov    ecx,DWORD PTR [rbp-0x70]
    9c94:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    9c9b:	89 ce                	mov    esi,ecx
    9c9d:	48 89 c7             	mov    rdi,rax
    9ca0:	e8 1e f9 ff ff       	call   95c3 <substr>
    9ca5:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    9ca9:	f3 0f 1e fa          	endbr64 
    9cad:	0f b6 45 8c          	movzx  eax,BYTE PTR [rbp-0x74]
    9cb1:	83 f0 01             	xor    eax,0x1
    9cb4:	84 c0                	test   al,al
    9cb6:	0f 84 d5 02 00 00    	je     9f91 <line_parser+0x4de>
    9cbc:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9cc0:	48 8d 35 7a 3e 00 00 	lea    rsi,[rip+0x3e7a]        # db41 <_IO_stdin_used+0x1b41>
    9cc7:	48 89 c7             	mov    rdi,rax
    9cca:	e8 b1 89 ff ff       	call   2680 <strcmp@plt>
    9ccf:	85 c0                	test   eax,eax
    9cd1:	75 2d                	jne    9d00 <line_parser+0x24d>
    9cd3:	0f b6 45 8d          	movzx  eax,BYTE PTR [rbp-0x73]
    9cd7:	83 f0 01             	xor    eax,0x1
    9cda:	84 c0                	test   al,al
    9cdc:	74 22                	je     9d00 <line_parser+0x24d>
    9cde:	0f b6 45 8e          	movzx  eax,BYTE PTR [rbp-0x72]
    9ce2:	83 f0 01             	xor    eax,0x1
    9ce5:	84 c0                	test   al,al
    9ce7:	74 17                	je     9d00 <line_parser+0x24d>
    9ce9:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9ced:	48 8d 15 95 b7 ff ff 	lea    rdx,[rip+0xffffffffffffb795]        # 5489 <stdout_alert>
    9cf4:	48 89 90 80 03 00 00 	mov    QWORD PTR [rax+0x380],rdx
    9cfb:	e9 a1 0c 00 00       	jmp    a9a1 <line_parser+0xeee>
    9d00:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9d04:	48 8d 35 ed 3d 00 00 	lea    rsi,[rip+0x3ded]        # daf8 <_IO_stdin_used+0x1af8>
    9d0b:	48 89 c7             	mov    rdi,rax
    9d0e:	e8 6d 89 ff ff       	call   2680 <strcmp@plt>
    9d13:	85 c0                	test   eax,eax
    9d15:	74 45                	je     9d5c <line_parser+0x2a9>
    9d17:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9d1b:	48 8d 35 d2 3d 00 00 	lea    rsi,[rip+0x3dd2]        # daf4 <_IO_stdin_used+0x1af4>
    9d22:	48 89 c7             	mov    rdi,rax
    9d25:	e8 56 89 ff ff       	call   2680 <strcmp@plt>
    9d2a:	85 c0                	test   eax,eax
    9d2c:	74 2e                	je     9d5c <line_parser+0x2a9>
    9d2e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9d32:	48 8d 35 c4 3d 00 00 	lea    rsi,[rip+0x3dc4]        # dafd <_IO_stdin_used+0x1afd>
    9d39:	48 89 c7             	mov    rdi,rax
    9d3c:	e8 3f 89 ff ff       	call   2680 <strcmp@plt>
    9d41:	85 c0                	test   eax,eax
    9d43:	74 17                	je     9d5c <line_parser+0x2a9>
    9d45:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9d49:	48 8d 35 b1 3d 00 00 	lea    rsi,[rip+0x3db1]        # db01 <_IO_stdin_used+0x1b01>
    9d50:	48 89 c7             	mov    rdi,rax
    9d53:	e8 28 89 ff ff       	call   2680 <strcmp@plt>
    9d58:	85 c0                	test   eax,eax
    9d5a:	75 2e                	jne    9d8a <line_parser+0x2d7>
    9d5c:	0f b6 45 8e          	movzx  eax,BYTE PTR [rbp-0x72]
    9d60:	83 f0 01             	xor    eax,0x1
    9d63:	84 c0                	test   al,al
    9d65:	74 23                	je     9d8a <line_parser+0x2d7>
    9d67:	0f b6 45 8d          	movzx  eax,BYTE PTR [rbp-0x73]
    9d6b:	83 f0 01             	xor    eax,0x1
    9d6e:	84 c0                	test   al,al
    9d70:	74 18                	je     9d8a <line_parser+0x2d7>
    9d72:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    9d76:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9d7a:	48 89 d6             	mov    rsi,rdx
    9d7d:	48 89 c7             	mov    rdi,rax
    9d80:	e8 c6 fa ff ff       	call   984b <assign_protocol>
    9d85:	e9 17 0c 00 00       	jmp    a9a1 <line_parser+0xeee>
    9d8a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9d8e:	48 89 c7             	mov    rdi,rax
    9d91:	e8 c3 f8 ff ff       	call   9659 <isdigit>
    9d96:	84 c0                	test   al,al
    9d98:	75 17                	jne    9db1 <line_parser+0x2fe>
    9d9a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9d9e:	48 8d 35 4b 3d 00 00 	lea    rsi,[rip+0x3d4b]        # daf0 <_IO_stdin_used+0x1af0>
    9da5:	48 89 c7             	mov    rdi,rax
    9da8:	e8 d3 88 ff ff       	call   2680 <strcmp@plt>
    9dad:	85 c0                	test   eax,eax
    9daf:	75 2e                	jne    9ddf <line_parser+0x32c>
    9db1:	0f b6 45 8d          	movzx  eax,BYTE PTR [rbp-0x73]
    9db5:	83 f0 01             	xor    eax,0x1
    9db8:	84 c0                	test   al,al
    9dba:	74 23                	je     9ddf <line_parser+0x32c>
    9dbc:	0f b6 45 8e          	movzx  eax,BYTE PTR [rbp-0x72]
    9dc0:	83 f0 01             	xor    eax,0x1
    9dc3:	84 c0                	test   al,al
    9dc5:	74 18                	je     9ddf <line_parser+0x32c>
    9dc7:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    9dcb:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9dcf:	48 89 d6             	mov    rsi,rdx
    9dd2:	48 89 c7             	mov    rdi,rax
    9dd5:	e8 ba f9 ff ff       	call   9794 <assign_port_number>
    9dda:	e9 c2 0b 00 00       	jmp    a9a1 <line_parser+0xeee>
    9ddf:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9de3:	ba 08 00 00 00       	mov    edx,0x8
    9de8:	48 8d 35 58 3d 00 00 	lea    rsi,[rip+0x3d58]        # db47 <_IO_stdin_used+0x1b47>
    9def:	48 89 c7             	mov    rdi,rax
    9df2:	e8 c9 86 ff ff       	call   24c0 <strncmp@plt>
    9df7:	85 c0                	test   eax,eax
    9df9:	75 75                	jne    9e70 <line_parser+0x3bd>
    9dfb:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9dff:	48 8d 50 09          	lea    rdx,[rax+0x9]
    9e03:	48 8d 45 ee          	lea    rax,[rbp-0x12]
    9e07:	48 89 d6             	mov    rsi,rdx
    9e0a:	48 89 c7             	mov    rdi,rax
    9e0d:	e8 be 86 ff ff       	call   24d0 <strcpy@plt>
    9e12:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9e16:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    9e19:	85 c0                	test   eax,eax
    9e1b:	75 2e                	jne    9e4b <line_parser+0x398>
    9e1d:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9e21:	8b 00                	mov    eax,DWORD PTR [rax]
    9e23:	85 c0                	test   eax,eax
    9e25:	75 24                	jne    9e4b <line_parser+0x398>
    9e27:	8b 15 b7 da 0f 00    	mov    edx,DWORD PTR [rip+0xfdab7]        # 1078e4 <homenet>
    9e2d:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9e31:	89 10                	mov    DWORD PTR [rax],edx
    9e33:	48 8d 45 ee          	lea    rax,[rbp-0x12]
    9e37:	48 89 c7             	mov    rdi,rax
    9e3a:	e8 b9 f9 ff ff       	call   97f8 <check_port_number>
    9e3f:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    9e43:	89 42 0c             	mov    DWORD PTR [rdx+0xc],eax
    9e46:	e9 56 0b 00 00       	jmp    a9a1 <line_parser+0xeee>
    9e4b:	8b 15 93 da 0f 00    	mov    edx,DWORD PTR [rip+0xfda93]        # 1078e4 <homenet>
    9e51:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9e55:	89 50 04             	mov    DWORD PTR [rax+0x4],edx
    9e58:	48 8d 45 ee          	lea    rax,[rbp-0x12]
    9e5c:	48 89 c7             	mov    rdi,rax
    9e5f:	e8 94 f9 ff ff       	call   97f8 <check_port_number>
    9e64:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    9e68:	89 42 08             	mov    DWORD PTR [rdx+0x8],eax
    9e6b:	e9 31 0b 00 00       	jmp    a9a1 <line_parser+0xeee>
    9e70:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9e74:	48 8d 35 d5 3c 00 00 	lea    rsi,[rip+0x3cd5]        # db50 <_IO_stdin_used+0x1b50>
    9e7b:	48 89 c7             	mov    rdi,rax
    9e7e:	e8 fd 87 ff ff       	call   2680 <strcmp@plt>
    9e83:	85 c0                	test   eax,eax
    9e85:	75 30                	jne    9eb7 <line_parser+0x404>
    9e87:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9e8b:	8b 10                	mov    edx,DWORD PTR [rax]
    9e8d:	8b 05 51 da 0f 00    	mov    eax,DWORD PTR [rip+0xfda51]        # 1078e4 <homenet>
    9e93:	39 c2                	cmp    edx,eax
    9e95:	75 10                	jne    9ea7 <line_parser+0x3f4>
    9e97:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9e9b:	c7 40 10 45 00 00 00 	mov    DWORD PTR [rax+0x10],0x45
    9ea2:	e9 fa 0a 00 00       	jmp    a9a1 <line_parser+0xeee>
    9ea7:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9eab:	c7 40 10 46 00 00 00 	mov    DWORD PTR [rax+0x10],0x46
    9eb2:	e9 ea 0a 00 00       	jmp    a9a1 <line_parser+0xeee>
    9eb7:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9ebb:	48 8d 35 91 3c 00 00 	lea    rsi,[rip+0x3c91]        # db53 <_IO_stdin_used+0x1b53>
    9ec2:	48 89 c7             	mov    rdi,rax
    9ec5:	e8 b6 87 ff ff       	call   2680 <strcmp@plt>
    9eca:	85 c0                	test   eax,eax
    9ecc:	75 10                	jne    9ede <line_parser+0x42b>
    9ece:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9ed2:	c7 40 10 47 00 00 00 	mov    DWORD PTR [rax+0x10],0x47
    9ed9:	e9 c3 0a 00 00       	jmp    a9a1 <line_parser+0xeee>
    9ede:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9ee2:	ba 0c 00 00 00       	mov    edx,0xc
    9ee7:	48 8d 35 68 3c 00 00 	lea    rsi,[rip+0x3c68]        # db56 <_IO_stdin_used+0x1b56>
    9eee:	48 89 c7             	mov    rdi,rax
    9ef1:	e8 ca 85 ff ff       	call   24c0 <strncmp@plt>
    9ef6:	85 c0                	test   eax,eax
    9ef8:	75 7f                	jne    9f79 <line_parser+0x4c6>
    9efa:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9efe:	48 8d 50 0c          	lea    rdx,[rax+0xc]
    9f02:	48 8d 45 ee          	lea    rax,[rbp-0x12]
    9f06:	48 89 d6             	mov    rsi,rdx
    9f09:	48 89 c7             	mov    rdi,rax
    9f0c:	e8 bf 85 ff ff       	call   24d0 <strcpy@plt>
    9f11:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9f15:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    9f18:	85 c0                	test   eax,eax
    9f1a:	75 37                	jne    9f53 <line_parser+0x4a0>
    9f1c:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9f20:	8b 10                	mov    edx,DWORD PTR [rax]
    9f22:	8b 05 bc d9 0f 00    	mov    eax,DWORD PTR [rip+0xfd9bc]        # 1078e4 <homenet>
    9f28:	39 c2                	cmp    edx,eax
    9f2a:	75 27                	jne    9f53 <line_parser+0x4a0>
    9f2c:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9f30:	c7 40 04 ff ff ff ff 	mov    DWORD PTR [rax+0x4],0xffffffff
    9f37:	48 8d 45 ee          	lea    rax,[rbp-0x12]
    9f3b:	48 83 c0 01          	add    rax,0x1
    9f3f:	48 89 c7             	mov    rdi,rax
    9f42:	e8 b1 f8 ff ff       	call   97f8 <check_port_number>
    9f47:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    9f4b:	89 42 08             	mov    DWORD PTR [rdx+0x8],eax
    9f4e:	e9 4e 0a 00 00       	jmp    a9a1 <line_parser+0xeee>
    9f53:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9f57:	c7 00 ff ff ff ff    	mov    DWORD PTR [rax],0xffffffff
    9f5d:	48 8d 45 ee          	lea    rax,[rbp-0x12]
    9f61:	48 83 c0 01          	add    rax,0x1
    9f65:	48 89 c7             	mov    rdi,rax
    9f68:	e8 8b f8 ff ff       	call   97f8 <check_port_number>
    9f6d:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    9f71:	89 42 0c             	mov    DWORD PTR [rdx+0xc],eax
    9f74:	e9 28 0a 00 00       	jmp    a9a1 <line_parser+0xeee>
    9f79:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9f7d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9f80:	3c 28                	cmp    al,0x28
    9f82:	0f 85 19 0a 00 00    	jne    a9a1 <line_parser+0xeee>
    9f88:	c6 45 8c 01          	mov    BYTE PTR [rbp-0x74],0x1
    9f8c:	e9 34 0a 00 00       	jmp    a9c5 <line_parser+0xf12>
    9f91:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9f95:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9f98:	3c 28                	cmp    al,0x28
    9f9a:	75 0e                	jne    9faa <line_parser+0x4f7>
    9f9c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9fa0:	48 83 c0 01          	add    rax,0x1
    9fa4:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    9fa8:	eb 08                	jmp    9fb2 <line_parser+0x4ff>
    9faa:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9fae:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    9fb2:	80 7d 8d 00          	cmp    BYTE PTR [rbp-0x73],0x0
    9fb6:	0f 84 a4 00 00 00    	je     a060 <line_parser+0x5ad>
    9fbc:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9fc0:	48 89 c7             	mov    rdi,rax
    9fc3:	e8 98 85 ff ff       	call   2560 <strlen@plt>
    9fc8:	48 8d 50 ff          	lea    rdx,[rax-0x1]
    9fcc:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9fd0:	48 01 d0             	add    rax,rdx
    9fd3:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9fd6:	3c 3b                	cmp    al,0x3b
    9fd8:	75 33                	jne    a00d <line_parser+0x55a>
    9fda:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9fde:	48 89 c7             	mov    rdi,rax
    9fe1:	e8 7a 85 ff ff       	call   2560 <strlen@plt>
    9fe6:	48 8d 50 fe          	lea    rdx,[rax-0x2]
    9fea:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9fee:	48 8d 88 50 01 00 00 	lea    rcx,[rax+0x150]
    9ff5:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9ff9:	48 89 c6             	mov    rsi,rax
    9ffc:	48 89 cf             	mov    rdi,rcx
    9fff:	e8 0c 86 ff ff       	call   2610 <strncat@plt>
    a004:	c6 45 8d 00          	mov    BYTE PTR [rbp-0x73],0x0
    a008:	e9 b8 09 00 00       	jmp    a9c5 <line_parser+0xf12>
    a00d:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a011:	48 8d 90 50 01 00 00 	lea    rdx,[rax+0x150]
    a018:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a01c:	48 89 c6             	mov    rsi,rax
    a01f:	48 89 d7             	mov    rdi,rdx
    a022:	e8 d9 87 ff ff       	call   2800 <strcat@plt>
    a027:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a02b:	48 8d 90 50 01 00 00 	lea    rdx,[rax+0x150]
    a032:	48 89 d0             	mov    rax,rdx
    a035:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    a03c:	48 89 c6             	mov    rsi,rax
    a03f:	b8 00 00 00 00       	mov    eax,0x0
    a044:	48 89 f7             	mov    rdi,rsi
    a047:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    a049:	48 89 c8             	mov    rax,rcx
    a04c:	48 f7 d0             	not    rax
    a04f:	48 83 e8 01          	sub    rax,0x1
    a053:	48 01 d0             	add    rax,rdx
    a056:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    a05b:	e9 41 09 00 00       	jmp    a9a1 <line_parser+0xeee>
    a060:	80 7d 8e 00          	cmp    BYTE PTR [rbp-0x72],0x0
    a064:	0f 84 95 00 00 00    	je     a0ff <line_parser+0x64c>
    a06a:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a06e:	48 8d 35 ee 3a 00 00 	lea    rsi,[rip+0x3aee]        # db63 <_IO_stdin_used+0x1b63>
    a075:	48 89 c7             	mov    rdi,rax
    a078:	e8 03 88 ff ff       	call   2880 <strstr@plt>
    a07d:	48 85 c0             	test   rax,rax
    a080:	74 30                	je     a0b2 <line_parser+0x5ff>
    a082:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a086:	48 89 c7             	mov    rdi,rax
    a089:	e8 d2 84 ff ff       	call   2560 <strlen@plt>
    a08e:	48 8d 50 fd          	lea    rdx,[rax-0x3]
    a092:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a096:	48 8d 48 40          	lea    rcx,[rax+0x40]
    a09a:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a09e:	48 89 c6             	mov    rsi,rax
    a0a1:	48 89 cf             	mov    rdi,rcx
    a0a4:	e8 67 85 ff ff       	call   2610 <strncat@plt>
    a0a9:	c6 45 8e 00          	mov    BYTE PTR [rbp-0x72],0x0
    a0ad:	e9 13 09 00 00       	jmp    a9c5 <line_parser+0xf12>
    a0b2:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a0b6:	48 8d 50 40          	lea    rdx,[rax+0x40]
    a0ba:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a0be:	48 89 c6             	mov    rsi,rax
    a0c1:	48 89 d7             	mov    rdi,rdx
    a0c4:	e8 37 87 ff ff       	call   2800 <strcat@plt>
    a0c9:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a0cd:	48 8d 50 40          	lea    rdx,[rax+0x40]
    a0d1:	48 89 d0             	mov    rax,rdx
    a0d4:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    a0db:	48 89 c6             	mov    rsi,rax
    a0de:	b8 00 00 00 00       	mov    eax,0x0
    a0e3:	48 89 f7             	mov    rdi,rsi
    a0e6:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    a0e8:	48 89 c8             	mov    rax,rcx
    a0eb:	48 f7 d0             	not    rax
    a0ee:	48 83 e8 01          	sub    rax,0x1
    a0f2:	48 01 d0             	add    rax,rdx
    a0f5:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    a0fa:	e9 a2 08 00 00       	jmp    a9a1 <line_parser+0xeee>
    a0ff:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a103:	ba 06 00 00 00       	mov    edx,0x6
    a108:	48 8d 35 57 3a 00 00 	lea    rsi,[rip+0x3a57]        # db66 <_IO_stdin_used+0x1b66>
    a10f:	48 89 c7             	mov    rdi,rax
    a112:	e8 a9 83 ff ff       	call   24c0 <strncmp@plt>
    a117:	85 c0                	test   eax,eax
    a119:	75 34                	jne    a14f <line_parser+0x69c>
    a11b:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a11f:	48 89 c7             	mov    rdi,rax
    a122:	e8 39 84 ff ff       	call   2560 <strlen@plt>
    a127:	48 8d 50 f8          	lea    rdx,[rax-0x8]
    a12b:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a12f:	48 8d 48 06          	lea    rcx,[rax+0x6]
    a133:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a137:	48 83 c0 20          	add    rax,0x20
    a13b:	48 89 ce             	mov    rsi,rcx
    a13e:	48 89 c7             	mov    rdi,rax
    a141:	e8 6a 83 ff ff       	call   24b0 <strncpy@plt>
    a146:	c6 45 8f 01          	mov    BYTE PTR [rbp-0x71],0x1
    a14a:	e9 52 08 00 00       	jmp    a9a1 <line_parser+0xeee>
    a14f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a153:	ba 05 00 00 00       	mov    edx,0x5
    a158:	48 8d 35 0e 3a 00 00 	lea    rsi,[rip+0x3a0e]        # db6d <_IO_stdin_used+0x1b6d>
    a15f:	48 89 c7             	mov    rdi,rax
    a162:	e8 59 83 ff ff       	call   24c0 <strncmp@plt>
    a167:	85 c0                	test   eax,eax
    a169:	75 63                	jne    a1ce <line_parser+0x71b>
    a16b:	c6 45 8d 01          	mov    BYTE PTR [rbp-0x73],0x1
    a16f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a173:	48 83 c0 05          	add    rax,0x5
    a177:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    a17b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a17f:	48 8d 90 50 01 00 00 	lea    rdx,[rax+0x150]
    a186:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    a18a:	48 89 c6             	mov    rsi,rax
    a18d:	48 89 d7             	mov    rdi,rdx
    a190:	e8 6b 86 ff ff       	call   2800 <strcat@plt>
    a195:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a199:	48 8d 90 50 01 00 00 	lea    rdx,[rax+0x150]
    a1a0:	48 89 d0             	mov    rax,rdx
    a1a3:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    a1aa:	48 89 c6             	mov    rsi,rax
    a1ad:	b8 00 00 00 00       	mov    eax,0x0
    a1b2:	48 89 f7             	mov    rdi,rsi
    a1b5:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    a1b7:	48 89 c8             	mov    rax,rcx
    a1ba:	48 f7 d0             	not    rax
    a1bd:	48 83 e8 01          	sub    rax,0x1
    a1c1:	48 01 d0             	add    rax,rdx
    a1c4:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    a1c9:	e9 d3 07 00 00       	jmp    a9a1 <line_parser+0xeee>
    a1ce:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a1d2:	ba 06 00 00 00       	mov    edx,0x6
    a1d7:	48 8d 35 95 39 00 00 	lea    rsi,[rip+0x3995]        # db73 <_IO_stdin_used+0x1b73>
    a1de:	48 89 c7             	mov    rdi,rax
    a1e1:	e8 da 82 ff ff       	call   24c0 <strncmp@plt>
    a1e6:	85 c0                	test   eax,eax
    a1e8:	75 31                	jne    a21b <line_parser+0x768>
    a1ea:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a1ee:	48 89 c7             	mov    rdi,rax
    a1f1:	e8 26 f8 ff ff       	call   9a1c <sc_strip>
    a1f6:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a1fa:	48 83 c0 06          	add    rax,0x6
    a1fe:	48 89 c7             	mov    rdi,rax
    a201:	e8 da 85 ff ff       	call   27e0 <atoi@plt>
    a206:	89 45 bc             	mov    DWORD PTR [rbp-0x44],eax
    a209:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a20d:	8b 55 bc             	mov    edx,DWORD PTR [rbp-0x44]
    a210:	89 90 4c 03 00 00    	mov    DWORD PTR [rax+0x34c],edx
    a216:	e9 86 07 00 00       	jmp    a9a1 <line_parser+0xeee>
    a21b:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a21f:	ba 05 00 00 00       	mov    edx,0x5
    a224:	48 8d 35 4f 39 00 00 	lea    rsi,[rip+0x394f]        # db7a <_IO_stdin_used+0x1b7a>
    a22b:	48 89 c7             	mov    rdi,rax
    a22e:	e8 8d 82 ff ff       	call   24c0 <strncmp@plt>
    a233:	85 c0                	test   eax,eax
    a235:	75 3f                	jne    a276 <line_parser+0x7c3>
    a237:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a23b:	48 89 c7             	mov    rdi,rax
    a23e:	e8 1d 83 ff ff       	call   2560 <strlen@plt>
    a243:	48 8d 50 fa          	lea    rdx,[rax-0x6]
    a247:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a24b:	48 8d 48 05          	lea    rcx,[rax+0x5]
    a24f:	48 8d 45 ee          	lea    rax,[rbp-0x12]
    a253:	48 89 ce             	mov    rsi,rcx
    a256:	48 89 c7             	mov    rdi,rax
    a259:	e8 52 82 ff ff       	call   24b0 <strncpy@plt>
    a25e:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    a262:	48 8d 45 ee          	lea    rax,[rbp-0x12]
    a266:	48 89 d6             	mov    rsi,rdx
    a269:	48 89 c7             	mov    rdi,rax
    a26c:	e8 8b f6 ff ff       	call   98fc <get_ruletype>
    a271:	e9 2b 07 00 00       	jmp    a9a1 <line_parser+0xeee>
    a276:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a27a:	ba 08 00 00 00       	mov    edx,0x8
    a27f:	48 8d 35 fa 38 00 00 	lea    rsi,[rip+0x38fa]        # db80 <_IO_stdin_used+0x1b80>
    a286:	48 89 c7             	mov    rdi,rax
    a289:	e8 32 82 ff ff       	call   24c0 <strncmp@plt>
    a28e:	85 c0                	test   eax,eax
    a290:	0f 85 a5 00 00 00    	jne    a33b <line_parser+0x888>
    a296:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a29a:	48 83 c0 08          	add    rax,0x8
    a29e:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    a2a2:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a2a6:	48 8d 35 b6 38 00 00 	lea    rsi,[rip+0x38b6]        # db63 <_IO_stdin_used+0x1b63>
    a2ad:	48 89 c7             	mov    rdi,rax
    a2b0:	e8 cb 85 ff ff       	call   2880 <strstr@plt>
    a2b5:	48 85 c0             	test   rax,rax
    a2b8:	74 30                	je     a2ea <line_parser+0x837>
    a2ba:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a2be:	48 89 c7             	mov    rdi,rax
    a2c1:	e8 9a 82 ff ff       	call   2560 <strlen@plt>
    a2c6:	48 8d 50 f5          	lea    rdx,[rax-0xb]
    a2ca:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a2ce:	48 8d 48 08          	lea    rcx,[rax+0x8]
    a2d2:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a2d6:	48 83 c0 40          	add    rax,0x40
    a2da:	48 89 ce             	mov    rsi,rcx
    a2dd:	48 89 c7             	mov    rdi,rax
    a2e0:	e8 cb 81 ff ff       	call   24b0 <strncpy@plt>
    a2e5:	e9 b7 06 00 00       	jmp    a9a1 <line_parser+0xeee>
    a2ea:	c6 45 8e 01          	mov    BYTE PTR [rbp-0x72],0x1
    a2ee:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a2f2:	48 8d 50 40          	lea    rdx,[rax+0x40]
    a2f6:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a2fa:	48 89 c6             	mov    rsi,rax
    a2fd:	48 89 d7             	mov    rdi,rdx
    a300:	e8 fb 84 ff ff       	call   2800 <strcat@plt>
    a305:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a309:	48 8d 50 40          	lea    rdx,[rax+0x40]
    a30d:	48 89 d0             	mov    rax,rdx
    a310:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    a317:	48 89 c6             	mov    rsi,rax
    a31a:	b8 00 00 00 00       	mov    eax,0x0
    a31f:	48 89 f7             	mov    rdi,rsi
    a322:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    a324:	48 89 c8             	mov    rax,rcx
    a327:	48 f7 d0             	not    rax
    a32a:	48 83 e8 01          	sub    rax,0x1
    a32e:	48 01 d0             	add    rax,rdx
    a331:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    a336:	e9 66 06 00 00       	jmp    a9a1 <line_parser+0xeee>
    a33b:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a33f:	ba 04 00 00 00       	mov    edx,0x4
    a344:	48 8d 35 3e 38 00 00 	lea    rsi,[rip+0x383e]        # db89 <_IO_stdin_used+0x1b89>
    a34b:	48 89 c7             	mov    rdi,rax
    a34e:	e8 6d 81 ff ff       	call   24c0 <strncmp@plt>
    a353:	85 c0                	test   eax,eax
    a355:	0f 85 8e 00 00 00    	jne    a3e9 <line_parser+0x936>
    a35b:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a35f:	48 8d 35 ca 37 00 00 	lea    rsi,[rip+0x37ca]        # db30 <_IO_stdin_used+0x1b30>
    a366:	48 89 c7             	mov    rdi,rax
    a369:	e8 d2 82 ff ff       	call   2640 <strcspn@plt>
    a36e:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
    a372:	48 01 d0             	add    rax,rdx
    a375:	c6 00 00             	mov    BYTE PTR [rax],0x0
    a378:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a37c:	48 83 c0 04          	add    rax,0x4
    a380:	48 89 c7             	mov    rdi,rax
    a383:	e8 d1 f2 ff ff       	call   9659 <isdigit>
    a388:	84 c0                	test   al,al
    a38a:	74 47                	je     a3d3 <line_parser+0x920>
    a38c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a390:	48 83 c0 04          	add    rax,0x4
    a394:	48 89 c7             	mov    rdi,rax
    a397:	e8 44 84 ff ff       	call   27e0 <atoi@plt>
    a39c:	89 45 b8             	mov    DWORD PTR [rbp-0x48],eax
    a39f:	83 7d b8 00          	cmp    DWORD PTR [rbp-0x48],0x0
    a3a3:	7e 18                	jle    a3bd <line_parser+0x90a>
    a3a5:	83 7d b8 0a          	cmp    DWORD PTR [rbp-0x48],0xa
    a3a9:	7f 12                	jg     a3bd <line_parser+0x90a>
    a3ab:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a3af:	8b 55 b8             	mov    edx,DWORD PTR [rbp-0x48]
    a3b2:	89 90 4c 01 00 00    	mov    DWORD PTR [rax+0x14c],edx
    a3b8:	e9 e4 05 00 00       	jmp    a9a1 <line_parser+0xeee>
    a3bd:	48 8d 3d cc 37 00 00 	lea    rdi,[rip+0x37cc]        # db90 <_IO_stdin_used+0x1b90>
    a3c4:	e8 37 81 ff ff       	call   2500 <puts@plt>
    a3c9:	bf ff ff ff ff       	mov    edi,0xffffffff
    a3ce:	e8 6d 84 ff ff       	call   2840 <exit@plt>
    a3d3:	48 8d 3d de 37 00 00 	lea    rdi,[rip+0x37de]        # dbb8 <_IO_stdin_used+0x1bb8>
    a3da:	e8 21 81 ff ff       	call   2500 <puts@plt>
    a3df:	bf ff ff ff ff       	mov    edi,0xffffffff
    a3e4:	e8 57 84 ff ff       	call   2840 <exit@plt>
    a3e9:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a3ed:	ba 06 00 00 00       	mov    edx,0x6
    a3f2:	48 8d 35 e7 37 00 00 	lea    rsi,[rip+0x37e7]        # dbe0 <_IO_stdin_used+0x1be0>
    a3f9:	48 89 c7             	mov    rdi,rax
    a3fc:	e8 bf 80 ff ff       	call   24c0 <strncmp@plt>
    a401:	85 c0                	test   eax,eax
    a403:	0f 85 9b 00 00 00    	jne    a4a4 <line_parser+0x9f1>
    a409:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a40d:	48 89 c7             	mov    rdi,rax
    a410:	e8 07 f6 ff ff       	call   9a1c <sc_strip>
    a415:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a419:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a41f:	3d 80 00 00 00       	cmp    eax,0x80
    a424:	75 58                	jne    a47e <line_parser+0x9cb>
    a426:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a42a:	48 83 c0 06          	add    rax,0x6
    a42e:	ba ff 00 00 00       	mov    edx,0xff
    a433:	be 00 00 00 00       	mov    esi,0x0
    a438:	48 89 c7             	mov    rdi,rax
    a43b:	e8 87 f5 ff ff       	call   99c7 <numeric_check>
    a440:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
    a443:	83 7d b4 ff          	cmp    DWORD PTR [rbp-0x4c],0xffffffff
    a447:	75 16                	jne    a45f <line_parser+0x9ac>
    a449:	48 8d 3d 97 37 00 00 	lea    rdi,[rip+0x3797]        # dbe7 <_IO_stdin_used+0x1be7>
    a450:	e8 ab 80 ff ff       	call   2500 <puts@plt>
    a455:	bf ff ff ff ff       	mov    edi,0xffffffff
    a45a:	e8 e1 83 ff ff       	call   2840 <exit@plt>
    a45f:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    a462:	89 c2                	mov    edx,eax
    a464:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a468:	88 90 72 03 00 00    	mov    BYTE PTR [rax+0x372],dl
    a46e:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a472:	c6 80 6e 03 00 00 01 	mov    BYTE PTR [rax+0x36e],0x1
    a479:	e9 23 05 00 00       	jmp    a9a1 <line_parser+0xeee>
    a47e:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a482:	48 83 c0 20          	add    rax,0x20
    a486:	48 89 c6             	mov    rsi,rax
    a489:	48 8d 3d 70 37 00 00 	lea    rdi,[rip+0x3770]        # dc00 <_IO_stdin_used+0x1c00>
    a490:	b8 00 00 00 00       	mov    eax,0x0
    a495:	e8 26 81 ff ff       	call   25c0 <printf@plt>
    a49a:	bf ff ff ff ff       	mov    edi,0xffffffff
    a49f:	e8 9c 83 ff ff       	call   2840 <exit@plt>
    a4a4:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a4a8:	ba 06 00 00 00       	mov    edx,0x6
    a4ad:	48 8d 35 83 37 00 00 	lea    rsi,[rip+0x3783]        # dc37 <_IO_stdin_used+0x1c37>
    a4b4:	48 89 c7             	mov    rdi,rax
    a4b7:	e8 04 80 ff ff       	call   24c0 <strncmp@plt>
    a4bc:	85 c0                	test   eax,eax
    a4be:	0f 85 86 00 00 00    	jne    a54a <line_parser+0xa97>
    a4c4:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a4c8:	48 89 c7             	mov    rdi,rax
    a4cb:	e8 4c f5 ff ff       	call   9a1c <sc_strip>
    a4d0:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a4d4:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a4da:	3d 80 00 00 00       	cmp    eax,0x80
    a4df:	75 58                	jne    a539 <line_parser+0xa86>
    a4e1:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a4e5:	48 83 c0 06          	add    rax,0x6
    a4e9:	ba ff 00 00 00       	mov    edx,0xff
    a4ee:	be 00 00 00 00       	mov    esi,0x0
    a4f3:	48 89 c7             	mov    rdi,rax
    a4f6:	e8 cc f4 ff ff       	call   99c7 <numeric_check>
    a4fb:	89 45 b0             	mov    DWORD PTR [rbp-0x50],eax
    a4fe:	83 7d b0 ff          	cmp    DWORD PTR [rbp-0x50],0xffffffff
    a502:	75 16                	jne    a51a <line_parser+0xa67>
    a504:	48 8d 3d 33 37 00 00 	lea    rdi,[rip+0x3733]        # dc3e <_IO_stdin_used+0x1c3e>
    a50b:	e8 f0 7f ff ff       	call   2500 <puts@plt>
    a510:	bf ff ff ff ff       	mov    edi,0xffffffff
    a515:	e8 26 83 ff ff       	call   2840 <exit@plt>
    a51a:	8b 45 b0             	mov    eax,DWORD PTR [rbp-0x50]
    a51d:	89 c2                	mov    edx,eax
    a51f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a523:	88 90 73 03 00 00    	mov    BYTE PTR [rax+0x373],dl
    a529:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a52d:	c6 80 6f 03 00 00 01 	mov    BYTE PTR [rax+0x36f],0x1
    a534:	e9 68 04 00 00       	jmp    a9a1 <line_parser+0xeee>
    a539:	48 8d 3d 18 37 00 00 	lea    rdi,[rip+0x3718]        # dc58 <_IO_stdin_used+0x1c58>
    a540:	e8 bb 7f ff ff       	call   2500 <puts@plt>
    a545:	e9 57 04 00 00       	jmp    a9a1 <line_parser+0xeee>
    a54a:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a54e:	ba 08 00 00 00       	mov    edx,0x8
    a553:	48 8d 35 30 37 00 00 	lea    rsi,[rip+0x3730]        # dc8a <_IO_stdin_used+0x1c8a>
    a55a:	48 89 c7             	mov    rdi,rax
    a55d:	e8 5e 7f ff ff       	call   24c0 <strncmp@plt>
    a562:	85 c0                	test   eax,eax
    a564:	0f 85 8c 00 00 00    	jne    a5f6 <line_parser+0xb43>
    a56a:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a56e:	48 89 c7             	mov    rdi,rax
    a571:	e8 a6 f4 ff ff       	call   9a1c <sc_strip>
    a576:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a57a:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a580:	3d 80 00 00 00       	cmp    eax,0x80
    a585:	75 59                	jne    a5e0 <line_parser+0xb2d>
    a587:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a58b:	48 83 c0 08          	add    rax,0x8
    a58f:	ba ff ff 00 00       	mov    edx,0xffff
    a594:	be 00 00 00 00       	mov    esi,0x0
    a599:	48 89 c7             	mov    rdi,rax
    a59c:	e8 26 f4 ff ff       	call   99c7 <numeric_check>
    a5a1:	89 45 ac             	mov    DWORD PTR [rbp-0x54],eax
    a5a4:	83 7d ac ff          	cmp    DWORD PTR [rbp-0x54],0xffffffff
    a5a8:	75 16                	jne    a5c0 <line_parser+0xb0d>
    a5aa:	48 8d 3d e2 36 00 00 	lea    rdi,[rip+0x36e2]        # dc93 <_IO_stdin_used+0x1c93>
    a5b1:	e8 4a 7f ff ff       	call   2500 <puts@plt>
    a5b6:	bf ff ff ff ff       	mov    edi,0xffffffff
    a5bb:	e8 80 82 ff ff       	call   2840 <exit@plt>
    a5c0:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
    a5c3:	89 c2                	mov    edx,eax
    a5c5:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a5c9:	66 89 90 76 03 00 00 	mov    WORD PTR [rax+0x376],dx
    a5d0:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a5d4:	c6 80 71 03 00 00 01 	mov    BYTE PTR [rax+0x371],0x1
    a5db:	e9 c1 03 00 00       	jmp    a9a1 <line_parser+0xeee>
    a5e0:	48 8d 3d c9 36 00 00 	lea    rdi,[rip+0x36c9]        # dcb0 <_IO_stdin_used+0x1cb0>
    a5e7:	e8 14 7f ff ff       	call   2500 <puts@plt>
    a5ec:	bf ff ff ff ff       	mov    edi,0xffffffff
    a5f1:	e8 4a 82 ff ff       	call   2840 <exit@plt>
    a5f6:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a5fa:	ba 09 00 00 00       	mov    edx,0x9
    a5ff:	48 8d 35 de 36 00 00 	lea    rsi,[rip+0x36de]        # dce4 <_IO_stdin_used+0x1ce4>
    a606:	48 89 c7             	mov    rdi,rax
    a609:	e8 b2 7e ff ff       	call   24c0 <strncmp@plt>
    a60e:	85 c0                	test   eax,eax
    a610:	75 7a                	jne    a68c <line_parser+0xbd9>
    a612:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a616:	48 89 c7             	mov    rdi,rax
    a619:	e8 fe f3 ff ff       	call   9a1c <sc_strip>
    a61e:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a622:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a628:	3d 80 00 00 00       	cmp    eax,0x80
    a62d:	0f 85 6e 03 00 00    	jne    a9a1 <line_parser+0xeee>
    a633:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a637:	48 83 c0 09          	add    rax,0x9
    a63b:	ba ff ff 00 00       	mov    edx,0xffff
    a640:	be 00 00 00 00       	mov    esi,0x0
    a645:	48 89 c7             	mov    rdi,rax
    a648:	e8 7a f3 ff ff       	call   99c7 <numeric_check>
    a64d:	89 45 a8             	mov    DWORD PTR [rbp-0x58],eax
    a650:	83 7d a8 ff          	cmp    DWORD PTR [rbp-0x58],0xffffffff
    a654:	75 16                	jne    a66c <line_parser+0xbb9>
    a656:	48 8d 3d 91 36 00 00 	lea    rdi,[rip+0x3691]        # dcee <_IO_stdin_used+0x1cee>
    a65d:	e8 9e 7e ff ff       	call   2500 <puts@plt>
    a662:	bf ff ff ff ff       	mov    edi,0xffffffff
    a667:	e8 d4 81 ff ff       	call   2840 <exit@plt>
    a66c:	8b 45 a8             	mov    eax,DWORD PTR [rbp-0x58]
    a66f:	89 c2                	mov    edx,eax
    a671:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a675:	66 89 90 74 03 00 00 	mov    WORD PTR [rax+0x374],dx
    a67c:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a680:	c6 80 70 03 00 00 01 	mov    BYTE PTR [rax+0x370],0x1
    a687:	e9 15 03 00 00       	jmp    a9a1 <line_parser+0xeee>
    a68c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a690:	ba 04 00 00 00       	mov    edx,0x4
    a695:	48 8d 35 6e 36 00 00 	lea    rsi,[rip+0x366e]        # dd0a <_IO_stdin_used+0x1d0a>
    a69c:	48 89 c7             	mov    rdi,rax
    a69f:	e8 1c 7e ff ff       	call   24c0 <strncmp@plt>
    a6a4:	85 c0                	test   eax,eax
    a6a6:	75 64                	jne    a70c <line_parser+0xc59>
    a6a8:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a6ac:	48 89 c7             	mov    rdi,rax
    a6af:	e8 68 f3 ff ff       	call   9a1c <sc_strip>
    a6b4:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a6b8:	48 83 c0 04          	add    rax,0x4
    a6bc:	ba ff 00 00 00       	mov    edx,0xff
    a6c1:	be 00 00 00 00       	mov    esi,0x0
    a6c6:	48 89 c7             	mov    rdi,rax
    a6c9:	e8 f9 f2 ff ff       	call   99c7 <numeric_check>
    a6ce:	89 45 a4             	mov    DWORD PTR [rbp-0x5c],eax
    a6d1:	83 7d a4 ff          	cmp    DWORD PTR [rbp-0x5c],0xffffffff
    a6d5:	75 16                	jne    a6ed <line_parser+0xc3a>
    a6d7:	48 8d 3d 31 36 00 00 	lea    rdi,[rip+0x3631]        # dd0f <_IO_stdin_used+0x1d0f>
    a6de:	e8 1d 7e ff ff       	call   2500 <puts@plt>
    a6e3:	bf ff ff ff ff       	mov    edi,0xffffffff
    a6e8:	e8 53 81 ff ff       	call   2840 <exit@plt>
    a6ed:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
    a6f0:	89 c2                	mov    edx,eax
    a6f2:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a6f6:	88 90 6c 03 00 00    	mov    BYTE PTR [rax+0x36c],dl
    a6fc:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a700:	c6 80 69 03 00 00 01 	mov    BYTE PTR [rax+0x369],0x1
    a707:	e9 95 02 00 00       	jmp    a9a1 <line_parser+0xeee>
    a70c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a710:	ba 07 00 00 00       	mov    edx,0x7
    a715:	48 8d 35 05 36 00 00 	lea    rsi,[rip+0x3605]        # dd21 <_IO_stdin_used+0x1d21>
    a71c:	48 89 c7             	mov    rdi,rax
    a71f:	e8 9c 7d ff ff       	call   24c0 <strncmp@plt>
    a724:	85 c0                	test   eax,eax
    a726:	75 6e                	jne    a796 <line_parser+0xce3>
    a728:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a72c:	48 89 c7             	mov    rdi,rax
    a72f:	e8 e8 f2 ff ff       	call   9a1c <sc_strip>
    a734:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a738:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a73e:	83 f8 7e             	cmp    eax,0x7e
    a741:	75 3d                	jne    a780 <line_parser+0xccd>
    a743:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a747:	48 89 c7             	mov    rdi,rax
    a74a:	e8 11 7e ff ff       	call   2560 <strlen@plt>
    a74f:	48 8d 50 f8          	lea    rdx,[rax-0x8]
    a753:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a757:	48 8d 48 07          	lea    rcx,[rax+0x7]
    a75b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a75f:	48 05 53 03 00 00    	add    rax,0x353
    a765:	48 89 ce             	mov    rsi,rcx
    a768:	48 89 c7             	mov    rdi,rax
    a76b:	e8 40 7d ff ff       	call   24b0 <strncpy@plt>
    a770:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a774:	c6 80 50 03 00 00 01 	mov    BYTE PTR [rax+0x350],0x1
    a77b:	e9 21 02 00 00       	jmp    a9a1 <line_parser+0xeee>
    a780:	48 8d 3d a9 35 00 00 	lea    rdi,[rip+0x35a9]        # dd30 <_IO_stdin_used+0x1d30>
    a787:	e8 74 7d ff ff       	call   2500 <puts@plt>
    a78c:	bf ff ff ff ff       	mov    edi,0xffffffff
    a791:	e8 aa 80 ff ff       	call   2840 <exit@plt>
    a796:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a79a:	ba 04 00 00 00       	mov    edx,0x4
    a79f:	48 8d 35 bb 35 00 00 	lea    rsi,[rip+0x35bb]        # dd61 <_IO_stdin_used+0x1d61>
    a7a6:	48 89 c7             	mov    rdi,rax
    a7a9:	e8 12 7d ff ff       	call   24c0 <strncmp@plt>
    a7ae:	85 c0                	test   eax,eax
    a7b0:	75 78                	jne    a82a <line_parser+0xd77>
    a7b2:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a7b6:	48 89 c7             	mov    rdi,rax
    a7b9:	e8 5e f2 ff ff       	call   9a1c <sc_strip>
    a7be:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a7c2:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a7c8:	83 f8 7e             	cmp    eax,0x7e
    a7cb:	0f 85 d0 01 00 00    	jne    a9a1 <line_parser+0xeee>
    a7d1:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a7d5:	48 83 c0 04          	add    rax,0x4
    a7d9:	ba ff ff ff ff       	mov    edx,0xffffffff
    a7de:	be 00 00 00 00       	mov    esi,0x0
    a7e3:	48 89 c7             	mov    rdi,rax
    a7e6:	e8 dc f1 ff ff       	call   99c7 <numeric_check>
    a7eb:	89 45 a0             	mov    DWORD PTR [rbp-0x60],eax
    a7ee:	83 7d a0 ff          	cmp    DWORD PTR [rbp-0x60],0xffffffff
    a7f2:	75 16                	jne    a80a <line_parser+0xd57>
    a7f4:	48 8d 3d 6b 35 00 00 	lea    rdi,[rip+0x356b]        # dd66 <_IO_stdin_used+0x1d66>
    a7fb:	e8 00 7d ff ff       	call   2500 <puts@plt>
    a800:	bf ff ff ff ff       	mov    edi,0xffffffff
    a805:	e8 36 80 ff ff       	call   2840 <exit@plt>
    a80a:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    a80d:	89 c2                	mov    edx,eax
    a80f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a813:	66 89 90 5c 03 00 00 	mov    WORD PTR [rax+0x35c],dx
    a81a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a81e:	c6 80 51 03 00 00 01 	mov    BYTE PTR [rax+0x351],0x1
    a825:	e9 77 01 00 00       	jmp    a9a1 <line_parser+0xeee>
    a82a:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a82e:	ba 06 00 00 00       	mov    edx,0x6
    a833:	48 8d 35 3e 35 00 00 	lea    rsi,[rip+0x353e]        # dd78 <_IO_stdin_used+0x1d78>
    a83a:	48 89 c7             	mov    rdi,rax
    a83d:	e8 7e 7c ff ff       	call   24c0 <strncmp@plt>
    a842:	85 c0                	test   eax,eax
    a844:	75 7c                	jne    a8c2 <line_parser+0xe0f>
    a846:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a84a:	48 89 c7             	mov    rdi,rax
    a84d:	e8 0e 7d ff ff       	call   2560 <strlen@plt>
    a852:	48 8d 50 f7          	lea    rdx,[rax-0x9]
    a856:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a85a:	48 8d 48 06          	lea    rcx,[rax+0x6]
    a85e:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a862:	48 05 10 02 00 00    	add    rax,0x210
    a868:	48 89 ce             	mov    rsi,rcx
    a86b:	48 89 c7             	mov    rdi,rax
    a86e:	e8 3d 7c ff ff       	call   24b0 <strncpy@plt>
    a873:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a877:	48 8d 88 10 02 00 00 	lea    rcx,[rax+0x210]
    a87e:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a882:	48 05 d0 01 00 00    	add    rax,0x1d0
    a888:	ba 00 00 00 00       	mov    edx,0x0
    a88d:	48 89 ce             	mov    rsi,rcx
    a890:	48 89 c7             	mov    rdi,rax
    a893:	e8 98 7d ff ff       	call   2630 <regcomp@plt>
    a898:	85 c0                	test   eax,eax
    a89a:	74 16                	je     a8b2 <line_parser+0xdff>
    a89c:	48 8d 3d dd 34 00 00 	lea    rdi,[rip+0x34dd]        # dd80 <_IO_stdin_used+0x1d80>
    a8a3:	e8 58 7c ff ff       	call   2500 <puts@plt>
    a8a8:	bf ff ff ff ff       	mov    edi,0xffffffff
    a8ad:	e8 8e 7f ff ff       	call   2840 <exit@plt>
    a8b2:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a8b6:	c6 80 90 02 00 00 01 	mov    BYTE PTR [rax+0x290],0x1
    a8bd:	e9 df 00 00 00       	jmp    a9a1 <line_parser+0xeee>
    a8c2:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a8c6:	ba 06 00 00 00       	mov    edx,0x6
    a8cb:	48 8d 35 d3 34 00 00 	lea    rsi,[rip+0x34d3]        # dda5 <_IO_stdin_used+0x1da5>
    a8d2:	48 89 c7             	mov    rdi,rax
    a8d5:	e8 e6 7b ff ff       	call   24c0 <strncmp@plt>
    a8da:	85 c0                	test   eax,eax
    a8dc:	75 2d                	jne    a90b <line_parser+0xe58>
    a8de:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a8e2:	48 89 c7             	mov    rdi,rax
    a8e5:	e8 32 f1 ff ff       	call   9a1c <sc_strip>
    a8ea:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a8ee:	48 8d 48 06          	lea    rcx,[rax+0x6]
    a8f2:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a8f6:	ba 01 00 00 00       	mov    edx,0x1
    a8fb:	48 89 ce             	mov    rsi,rcx
    a8fe:	48 89 c7             	mov    rdi,rax
    a901:	e8 94 03 00 00       	call   ac9a <d_op_parser>
    a906:	e9 96 00 00 00       	jmp    a9a1 <line_parser+0xeee>
    a90b:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a90f:	ba 07 00 00 00       	mov    edx,0x7
    a914:	48 8d 35 91 34 00 00 	lea    rsi,[rip+0x3491]        # ddac <_IO_stdin_used+0x1dac>
    a91b:	48 89 c7             	mov    rdi,rax
    a91e:	e8 9d 7b ff ff       	call   24c0 <strncmp@plt>
    a923:	85 c0                	test   eax,eax
    a925:	75 27                	jne    a94e <line_parser+0xe9b>
    a927:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a92b:	48 89 c7             	mov    rdi,rax
    a92e:	e8 e9 f0 ff ff       	call   9a1c <sc_strip>
    a933:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a937:	48 83 c0 07          	add    rax,0x7
    a93b:	48 89 c7             	mov    rdi,rax
    a93e:	e8 9d 7e ff ff       	call   27e0 <atoi@plt>
    a943:	89 c2                	mov    edx,eax
    a945:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a949:	89 50 14             	mov    DWORD PTR [rax+0x14],edx
    a94c:	eb 53                	jmp    a9a1 <line_parser+0xeee>
    a94e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a952:	ba 0b 00 00 00       	mov    edx,0xb
    a957:	48 8d 35 56 34 00 00 	lea    rsi,[rip+0x3456]        # ddb4 <_IO_stdin_used+0x1db4>
    a95e:	48 89 c7             	mov    rdi,rax
    a961:	e8 5a 7b ff ff       	call   24c0 <strncmp@plt>
    a966:	85 c0                	test   eax,eax
    a968:	75 10                	jne    a97a <line_parser+0xec7>
    a96a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a96e:	c7 80 48 03 00 00 01 	mov    DWORD PTR [rax+0x348],0x1
    a975:	00 00 00 
    a978:	eb 27                	jmp    a9a1 <line_parser+0xeee>
    a97a:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a97e:	ba 09 00 00 00       	mov    edx,0x9
    a983:	48 8d 35 36 34 00 00 	lea    rsi,[rip+0x3436]        # ddc0 <_IO_stdin_used+0x1dc0>
    a98a:	48 89 c7             	mov    rdi,rax
    a98d:	e8 2e 7b ff ff       	call   24c0 <strncmp@plt>
    a992:	85 c0                	test   eax,eax
    a994:	75 0b                	jne    a9a1 <line_parser+0xeee>
    a996:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a99a:	c6 80 48 01 00 00 01 	mov    BYTE PTR [rax+0x148],0x1
    a9a1:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    a9a4:	89 45 90             	mov    DWORD PTR [rbp-0x70],eax
    a9a7:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    a9ab:	48 89 c7             	mov    rdi,rax
    a9ae:	e8 ad 7b ff ff       	call   2560 <strlen@plt>
    a9b3:	48 8d 50 ff          	lea    rdx,[rax-0x1]
    a9b7:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    a9bb:	48 01 d0             	add    rax,rdx
    a9be:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    a9c1:	3c 29                	cmp    al,0x29
    a9c3:	74 3a                	je     a9ff <line_parser+0xf4c>
    a9c5:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    a9c8:	3b 45 9c             	cmp    eax,DWORD PTR [rbp-0x64]
    a9cb:	7f 0c                	jg     a9d9 <line_parser+0xf26>
    a9cd:	8b 45 90             	mov    eax,DWORD PTR [rbp-0x70]
    a9d0:	3b 45 94             	cmp    eax,DWORD PTR [rbp-0x6c]
    a9d3:	0f 8e e9 f1 ff ff    	jle    9bc2 <line_parser+0x10f>
    a9d9:	0f b6 45 8f          	movzx  eax,BYTE PTR [rbp-0x71]
    a9dd:	83 f0 01             	xor    eax,0x1
    a9e0:	84 c0                	test   al,al
    a9e2:	74 1c                	je     aa00 <line_parser+0xf4d>
    a9e4:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a9e8:	48 83 c0 20          	add    rax,0x20
    a9ec:	48 b9 55 6e 74 69 74 	movabs rcx,0x64656c7469746e55
    a9f3:	6c 65 64 
    a9f6:	48 89 08             	mov    QWORD PTR [rax],rcx
    a9f9:	c6 40 08 00          	mov    BYTE PTR [rax+0x8],0x0
    a9fd:	eb 01                	jmp    aa00 <line_parser+0xf4d>
    a9ff:	90                   	nop
    aa00:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aa04:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    aa0b:	00 00 
    aa0d:	74 05                	je     aa14 <line_parser+0xf61>
    aa0f:	e8 6c 7b ff ff       	call   2580 <__stack_chk_fail@plt>
    aa14:	c9                   	leave  
    aa15:	c3                   	ret    

000000000000aa16 <rule_processor>:
    aa16:	f3 0f 1e fa          	endbr64 
    aa1a:	55                   	push   rbp
    aa1b:	48 89 e5             	mov    rbp,rsp
    aa1e:	48 83 ec 10          	sub    rsp,0x10
    aa22:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    aa29:	eb 22                	jmp    aa4d <rule_processor+0x37>
    aa2b:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    aa2e:	48 98                	cdqe   
    aa30:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    aa37:	48 8d 15 62 66 00 00 	lea    rdx,[rip+0x6662]        # 110a0 <rules>
    aa3e:	48 01 d0             	add    rax,rdx
    aa41:	48 89 c7             	mov    rdi,rax
    aa44:	e8 13 00 00 00       	call   aa5c <process_rule>
    aa49:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    aa4d:	8b 05 c1 65 00 00    	mov    eax,DWORD PTR [rip+0x65c1]        # 11014 <num_rules>
    aa53:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    aa56:	7e d3                	jle    aa2b <rule_processor+0x15>
    aa58:	90                   	nop
    aa59:	90                   	nop
    aa5a:	c9                   	leave  
    aa5b:	c3                   	ret    

000000000000aa5c <process_rule>:
    aa5c:	f3 0f 1e fa          	endbr64 
    aa60:	55                   	push   rbp
    aa61:	48 89 e5             	mov    rbp,rsp
    aa64:	41 57                	push   r15
    aa66:	41 56                	push   r14
    aa68:	41 54                	push   r12
    aa6a:	53                   	push   rbx
    aa6b:	48 83 ec 40          	sub    rsp,0x40
    aa6f:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    aa73:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    aa7a:	00 00 
    aa7c:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    aa80:	31 c0                	xor    eax,eax
    aa82:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    aa86:	0f b6 80 90 02 00 00 	movzx  eax,BYTE PTR [rax+0x290]
    aa8d:	83 f0 01             	xor    eax,0x1
    aa90:	84 c0                	test   al,al
    aa92:	0f 84 e0 01 00 00    	je     ac78 <process_rule+0x21c>
    aa98:	48 89 e0             	mov    rax,rsp
    aa9b:	49 89 c4             	mov    r12,rax
    aa9e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    aaa2:	48 83 c0 40          	add    rax,0x40
    aaa6:	48 89 c7             	mov    rdi,rax
    aaa9:	e8 b2 7a ff ff       	call   2560 <strlen@plt>
    aaae:	48 83 c0 01          	add    rax,0x1
    aab2:	48 01 c0             	add    rax,rax
    aab5:	48 89 c2             	mov    rdx,rax
    aab8:	48 83 ea 01          	sub    rdx,0x1
    aabc:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    aac0:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    aac4:	48 c7 45 a8 00 00 00 	mov    QWORD PTR [rbp-0x58],0x0
    aacb:	00 
    aacc:	49 89 c6             	mov    r14,rax
    aacf:	41 bf 00 00 00 00    	mov    r15d,0x0
    aad5:	ba 10 00 00 00       	mov    edx,0x10
    aada:	48 83 ea 01          	sub    rdx,0x1
    aade:	48 01 d0             	add    rax,rdx
    aae1:	be 10 00 00 00       	mov    esi,0x10
    aae6:	ba 00 00 00 00       	mov    edx,0x0
    aaeb:	48 f7 f6             	div    rsi
    aaee:	48 6b c0 10          	imul   rax,rax,0x10
    aaf2:	48 89 c2             	mov    rdx,rax
    aaf5:	48 81 e2 00 f0 ff ff 	and    rdx,0xfffffffffffff000
    aafc:	48 89 e3             	mov    rbx,rsp
    aaff:	48 29 d3             	sub    rbx,rdx
    ab02:	48 89 da             	mov    rdx,rbx
    ab05:	48 39 d4             	cmp    rsp,rdx
    ab08:	74 12                	je     ab1c <process_rule+0xc0>
    ab0a:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    ab11:	48 83 8c 24 f8 0f 00 	or     QWORD PTR [rsp+0xff8],0x0
    ab18:	00 00 
    ab1a:	eb e9                	jmp    ab05 <process_rule+0xa9>
    ab1c:	48 89 c2             	mov    rdx,rax
    ab1f:	81 e2 ff 0f 00 00    	and    edx,0xfff
    ab25:	48 29 d4             	sub    rsp,rdx
    ab28:	48 89 c2             	mov    rdx,rax
    ab2b:	81 e2 ff 0f 00 00    	and    edx,0xfff
    ab31:	48 85 d2             	test   rdx,rdx
    ab34:	74 10                	je     ab46 <process_rule+0xea>
    ab36:	25 ff 0f 00 00       	and    eax,0xfff
    ab3b:	48 83 e8 08          	sub    rax,0x8
    ab3f:	48 01 e0             	add    rax,rsp
    ab42:	48 83 08 00          	or     QWORD PTR [rax],0x0
    ab46:	48 89 e0             	mov    rax,rsp
    ab49:	48 83 c0 00          	add    rax,0x0
    ab4d:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    ab51:	c7 45 c0 00 00 00 00 	mov    DWORD PTR [rbp-0x40],0x0
    ab58:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ab5c:	48 8d 50 40          	lea    rdx,[rax+0x40]
    ab60:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ab64:	48 05 c8 02 00 00    	add    rax,0x2c8
    ab6a:	48 89 d6             	mov    rsi,rdx
    ab6d:	48 89 c7             	mov    rdi,rax
    ab70:	e8 5b 79 ff ff       	call   24d0 <strcpy@plt>
    ab75:	c7 45 c4 00 00 00 00 	mov    DWORD PTR [rbp-0x3c],0x0
    ab7c:	e9 a4 00 00 00       	jmp    ac25 <process_rule+0x1c9>
    ab81:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    ab85:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    ab88:	48 98                	cdqe   
    ab8a:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    ab8f:	3c 7c                	cmp    al,0x7c
    ab91:	75 18                	jne    abab <process_rule+0x14f>
    ab93:	83 7d c0 00          	cmp    DWORD PTR [rbp-0x40],0x0
    ab97:	74 09                	je     aba2 <process_rule+0x146>
    ab99:	c7 45 c0 00 00 00 00 	mov    DWORD PTR [rbp-0x40],0x0
    aba0:	eb 7f                	jmp    ac21 <process_rule+0x1c5>
    aba2:	c7 45 c0 01 00 00 00 	mov    DWORD PTR [rbp-0x40],0x1
    aba9:	eb 76                	jmp    ac21 <process_rule+0x1c5>
    abab:	83 7d c0 01          	cmp    DWORD PTR [rbp-0x40],0x1
    abaf:	75 3a                	jne    abeb <process_rule+0x18f>
    abb1:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    abb5:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    abb8:	48 98                	cdqe   
    abba:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    abbf:	0f be c0             	movsx  eax,al
    abc2:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
    abc5:	48 63 d2             	movsxd rdx,edx
    abc8:	48 8d 4a ff          	lea    rcx,[rdx-0x1]
    abcc:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    abd0:	48 01 d1             	add    rcx,rdx
    abd3:	89 c2                	mov    edx,eax
    abd5:	48 8d 35 ee 31 00 00 	lea    rsi,[rip+0x31ee]        # ddca <_IO_stdin_used+0x1dca>
    abdc:	48 89 cf             	mov    rdi,rcx
    abdf:	b8 00 00 00 00       	mov    eax,0x0
    abe4:	e8 47 7c ff ff       	call   2830 <sprintf@plt>
    abe9:	eb 36                	jmp    ac21 <process_rule+0x1c5>
    abeb:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    abef:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    abf2:	48 98                	cdqe   
    abf4:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    abf9:	0f be c0             	movsx  eax,al
    abfc:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
    abff:	01 d2                	add    edx,edx
    ac01:	48 63 ca             	movsxd rcx,edx
    ac04:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    ac08:	48 01 d1             	add    rcx,rdx
    ac0b:	89 c2                	mov    edx,eax
    ac0d:	48 8d 35 b9 31 00 00 	lea    rsi,[rip+0x31b9]        # ddcd <_IO_stdin_used+0x1dcd>
    ac14:	48 89 cf             	mov    rdi,rcx
    ac17:	b8 00 00 00 00       	mov    eax,0x0
    ac1c:	e8 0f 7c ff ff       	call   2830 <sprintf@plt>
    ac21:	83 45 c4 01          	add    DWORD PTR [rbp-0x3c],0x1
    ac25:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    ac28:	48 63 d8             	movsxd rbx,eax
    ac2b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ac2f:	48 83 c0 40          	add    rax,0x40
    ac33:	48 89 c7             	mov    rdi,rax
    ac36:	e8 25 79 ff ff       	call   2560 <strlen@plt>
    ac3b:	48 39 c3             	cmp    rbx,rax
    ac3e:	0f 82 3d ff ff ff    	jb     ab81 <process_rule+0x125>
    ac44:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ac48:	48 83 c0 40          	add    rax,0x40
    ac4c:	ba ff 00 00 00       	mov    edx,0xff
    ac51:	be 00 00 00 00       	mov    esi,0x0
    ac56:	48 89 c7             	mov    rdi,rax
    ac59:	e8 a2 79 ff ff       	call   2600 <memset@plt>
    ac5e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ac62:	48 8d 50 40          	lea    rdx,[rax+0x40]
    ac66:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    ac6a:	48 89 c6             	mov    rsi,rax
    ac6d:	48 89 d7             	mov    rdi,rdx
    ac70:	e8 5b 78 ff ff       	call   24d0 <strcpy@plt>
    ac75:	4c 89 e4             	mov    rsp,r12
    ac78:	90                   	nop
    ac79:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ac7d:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    ac84:	00 00 
    ac86:	74 05                	je     ac8d <process_rule+0x231>
    ac88:	e8 f3 78 ff ff       	call   2580 <__stack_chk_fail@plt>
    ac8d:	48 8d 65 e0          	lea    rsp,[rbp-0x20]
    ac91:	5b                   	pop    rbx
    ac92:	41 5c                	pop    r12
    ac94:	41 5e                	pop    r14
    ac96:	41 5f                	pop    r15
    ac98:	5d                   	pop    rbp
    ac99:	c3                   	ret    

000000000000ac9a <d_op_parser>:
    ac9a:	f3 0f 1e fa          	endbr64 
    ac9e:	55                   	push   rbp
    ac9f:	48 89 e5             	mov    rbp,rsp
    aca2:	48 83 ec 20          	sub    rsp,0x20
    aca6:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    acaa:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    acae:	89 55 ec             	mov    DWORD PTR [rbp-0x14],edx
    acb1:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    acb5:	48 89 c7             	mov    rdi,rax
    acb8:	e8 9c e9 ff ff       	call   9659 <isdigit>
    acbd:	84 c0                	test   al,al
    acbf:	74 23                	je     ace4 <d_op_parser+0x4a>
    acc1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    acc5:	c7 40 1c a1 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa1
    accc:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    acd0:	48 89 c7             	mov    rdi,rax
    acd3:	e8 08 7b ff ff       	call   27e0 <atoi@plt>
    acd8:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    acdc:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    acdf:	e9 5f 01 00 00       	jmp    ae43 <d_op_parser+0x1a9>
    ace4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ace8:	0f b6 10             	movzx  edx,BYTE PTR [rax]
    aceb:	0f b6 05 e2 30 00 00 	movzx  eax,BYTE PTR [rip+0x30e2]        # ddd4 <_IO_stdin_used+0x1dd4>
    acf2:	0f b6 d2             	movzx  edx,dl
    acf5:	0f b6 c0             	movzx  eax,al
    acf8:	29 c2                	sub    edx,eax
    acfa:	89 d0                	mov    eax,edx
    acfc:	85 c0                	test   eax,eax
    acfe:	75 27                	jne    ad27 <d_op_parser+0x8d>
    ad00:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad04:	c7 40 1c a4 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa4
    ad0b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad0f:	48 83 c0 01          	add    rax,0x1
    ad13:	48 89 c7             	mov    rdi,rax
    ad16:	e8 c5 7a ff ff       	call   27e0 <atoi@plt>
    ad1b:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ad1f:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    ad22:	e9 1c 01 00 00       	jmp    ae43 <d_op_parser+0x1a9>
    ad27:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad2b:	0f b6 10             	movzx  edx,BYTE PTR [rax]
    ad2e:	0f b6 05 a1 30 00 00 	movzx  eax,BYTE PTR [rip+0x30a1]        # ddd6 <_IO_stdin_used+0x1dd6>
    ad35:	0f b6 d2             	movzx  edx,dl
    ad38:	0f b6 c0             	movzx  eax,al
    ad3b:	29 c2                	sub    edx,eax
    ad3d:	89 d0                	mov    eax,edx
    ad3f:	85 c0                	test   eax,eax
    ad41:	75 27                	jne    ad6a <d_op_parser+0xd0>
    ad43:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad47:	c7 40 1c a2 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa2
    ad4e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad52:	48 83 c0 01          	add    rax,0x1
    ad56:	48 89 c7             	mov    rdi,rax
    ad59:	e8 82 7a ff ff       	call   27e0 <atoi@plt>
    ad5e:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ad62:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    ad65:	e9 d9 00 00 00       	jmp    ae43 <d_op_parser+0x1a9>
    ad6a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad6e:	0f b6 10             	movzx  edx,BYTE PTR [rax]
    ad71:	0f b6 05 60 30 00 00 	movzx  eax,BYTE PTR [rip+0x3060]        # ddd8 <_IO_stdin_used+0x1dd8>
    ad78:	0f b6 d2             	movzx  edx,dl
    ad7b:	0f b6 c0             	movzx  eax,al
    ad7e:	29 c2                	sub    edx,eax
    ad80:	89 d0                	mov    eax,edx
    ad82:	85 c0                	test   eax,eax
    ad84:	75 27                	jne    adad <d_op_parser+0x113>
    ad86:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad8a:	c7 40 1c a6 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa6
    ad91:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad95:	48 83 c0 01          	add    rax,0x1
    ad99:	48 89 c7             	mov    rdi,rax
    ad9c:	e8 3f 7a ff ff       	call   27e0 <atoi@plt>
    ada1:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ada5:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    ada8:	e9 96 00 00 00       	jmp    ae43 <d_op_parser+0x1a9>
    adad:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    adb1:	ba 02 00 00 00       	mov    edx,0x2
    adb6:	48 8d 35 1d 30 00 00 	lea    rsi,[rip+0x301d]        # ddda <_IO_stdin_used+0x1dda>
    adbd:	48 89 c7             	mov    rdi,rax
    adc0:	e8 fb 76 ff ff       	call   24c0 <strncmp@plt>
    adc5:	85 c0                	test   eax,eax
    adc7:	75 24                	jne    aded <d_op_parser+0x153>
    adc9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    adcd:	c7 40 1c a3 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa3
    add4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    add8:	48 83 c0 02          	add    rax,0x2
    addc:	48 89 c7             	mov    rdi,rax
    addf:	e8 fc 79 ff ff       	call   27e0 <atoi@plt>
    ade4:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ade8:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    adeb:	eb 56                	jmp    ae43 <d_op_parser+0x1a9>
    aded:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    adf1:	ba 02 00 00 00       	mov    edx,0x2
    adf6:	48 8d 35 e0 2f 00 00 	lea    rsi,[rip+0x2fe0]        # dddd <_IO_stdin_used+0x1ddd>
    adfd:	48 89 c7             	mov    rdi,rax
    ae00:	e8 bb 76 ff ff       	call   24c0 <strncmp@plt>
    ae05:	85 c0                	test   eax,eax
    ae07:	75 24                	jne    ae2d <d_op_parser+0x193>
    ae09:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae0d:	c7 40 1c a5 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa5
    ae14:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ae18:	48 83 c0 02          	add    rax,0x2
    ae1c:	48 89 c7             	mov    rdi,rax
    ae1f:	e8 bc 79 ff ff       	call   27e0 <atoi@plt>
    ae24:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ae28:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    ae2b:	eb 16                	jmp    ae43 <d_op_parser+0x1a9>
    ae2d:	48 8d 3d ac 2f 00 00 	lea    rdi,[rip+0x2fac]        # dde0 <_IO_stdin_used+0x1de0>
    ae34:	e8 c7 76 ff ff       	call   2500 <puts@plt>
    ae39:	bf ff ff ff ff       	mov    edi,0xffffffff
    ae3e:	e8 fd 79 ff ff       	call   2840 <exit@plt>
    ae43:	c9                   	leave  
    ae44:	c3                   	ret    

000000000000ae45 <d_engine>:
    ae45:	f3 0f 1e fa          	endbr64 
    ae49:	55                   	push   rbp
    ae4a:	48 89 e5             	mov    rbp,rsp
    ae4d:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    ae51:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    ae55:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae59:	8b 40 1c             	mov    eax,DWORD PTR [rax+0x1c]
    ae5c:	83 f8 ff             	cmp    eax,0xffffffff
    ae5f:	75 0a                	jne    ae6b <d_engine+0x26>
    ae61:	b8 01 00 00 00       	mov    eax,0x1
    ae66:	e9 ea 00 00 00       	jmp    af55 <d_engine+0x110>
    ae6b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae6f:	8b 40 1c             	mov    eax,DWORD PTR [rax+0x1c]
    ae72:	2d a1 00 00 00       	sub    eax,0xa1
    ae77:	83 f8 05             	cmp    eax,0x5
    ae7a:	0f 87 d0 00 00 00    	ja     af50 <d_engine+0x10b>
    ae80:	89 c0                	mov    eax,eax
    ae82:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    ae89:	00 
    ae8a:	48 8d 05 67 2f 00 00 	lea    rax,[rip+0x2f67]        # ddf8 <_IO_stdin_used+0x1df8>
    ae91:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    ae94:	48 98                	cdqe   
    ae96:	48 8d 15 5b 2f 00 00 	lea    rdx,[rip+0x2f5b]        # ddf8 <_IO_stdin_used+0x1df8>
    ae9d:	48 01 d0             	add    rax,rdx
    aea0:	3e ff e0             	notrack jmp rax
    aea3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aea7:	8b 50 18             	mov    edx,DWORD PTR [rax+0x18]
    aeaa:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    aeae:	8b 40 34             	mov    eax,DWORD PTR [rax+0x34]
    aeb1:	39 c2                	cmp    edx,eax
    aeb3:	0f 85 87 00 00 00    	jne    af40 <d_engine+0xfb>
    aeb9:	b8 01 00 00 00       	mov    eax,0x1
    aebe:	e9 92 00 00 00       	jmp    af55 <d_engine+0x110>
    aec3:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    aec7:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    aeca:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aece:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    aed1:	39 c2                	cmp    edx,eax
    aed3:	76 6e                	jbe    af43 <d_engine+0xfe>
    aed5:	b8 01 00 00 00       	mov    eax,0x1
    aeda:	eb 79                	jmp    af55 <d_engine+0x110>
    aedc:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    aee0:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    aee3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aee7:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    aeea:	39 c2                	cmp    edx,eax
    aeec:	72 58                	jb     af46 <d_engine+0x101>
    aeee:	b8 01 00 00 00       	mov    eax,0x1
    aef3:	eb 60                	jmp    af55 <d_engine+0x110>
    aef5:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    aef9:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    aefc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    af00:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    af03:	39 c2                	cmp    edx,eax
    af05:	73 42                	jae    af49 <d_engine+0x104>
    af07:	b8 01 00 00 00       	mov    eax,0x1
    af0c:	eb 47                	jmp    af55 <d_engine+0x110>
    af0e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    af12:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    af15:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    af19:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    af1c:	39 c2                	cmp    edx,eax
    af1e:	77 2c                	ja     af4c <d_engine+0x107>
    af20:	b8 01 00 00 00       	mov    eax,0x1
    af25:	eb 2e                	jmp    af55 <d_engine+0x110>
    af27:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    af2b:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    af2e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    af32:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    af35:	39 c2                	cmp    edx,eax
    af37:	74 16                	je     af4f <d_engine+0x10a>
    af39:	b8 01 00 00 00       	mov    eax,0x1
    af3e:	eb 15                	jmp    af55 <d_engine+0x110>
    af40:	90                   	nop
    af41:	eb 0d                	jmp    af50 <d_engine+0x10b>
    af43:	90                   	nop
    af44:	eb 0a                	jmp    af50 <d_engine+0x10b>
    af46:	90                   	nop
    af47:	eb 07                	jmp    af50 <d_engine+0x10b>
    af49:	90                   	nop
    af4a:	eb 04                	jmp    af50 <d_engine+0x10b>
    af4c:	90                   	nop
    af4d:	eb 01                	jmp    af50 <d_engine+0x10b>
    af4f:	90                   	nop
    af50:	b8 00 00 00 00       	mov    eax,0x0
    af55:	5d                   	pop    rbp
    af56:	c3                   	ret    

000000000000af57 <homenet_toi>:
    af57:	f3 0f 1e fa          	endbr64 
    af5b:	55                   	push   rbp
    af5c:	48 89 e5             	mov    rbp,rsp
    af5f:	53                   	push   rbx
    af60:	48 83 ec 38          	sub    rsp,0x38
    af64:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    af68:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    af6f:	00 00 
    af71:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    af75:	31 c0                	xor    eax,eax
    af77:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    af7b:	48 8d 35 8e 2e 00 00 	lea    rsi,[rip+0x2e8e]        # de10 <_IO_stdin_used+0x1e10>
    af82:	48 89 c7             	mov    rdi,rax
    af85:	e8 06 78 ff ff       	call   2790 <strtok@plt>
    af8a:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    af8e:	eb 4c                	jmp    afdc <homenet_toi+0x85>
    af90:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    af94:	48 89 c7             	mov    rdi,rax
    af97:	e8 44 78 ff ff       	call   27e0 <atoi@plt>
    af9c:	89 c3                	mov    ebx,eax
    af9e:	48 8d 45 df          	lea    rax,[rbp-0x21]
    afa2:	48 89 c7             	mov    rdi,rax
    afa5:	e8 b6 75 ff ff       	call   2560 <strlen@plt>
    afaa:	48 8d 55 df          	lea    rdx,[rbp-0x21]
    afae:	48 01 d0             	add    rax,rdx
    afb1:	89 da                	mov    edx,ebx
    afb3:	48 8d 35 58 2e 00 00 	lea    rsi,[rip+0x2e58]        # de12 <_IO_stdin_used+0x1e12>
    afba:	48 89 c7             	mov    rdi,rax
    afbd:	b8 00 00 00 00       	mov    eax,0x0
    afc2:	e8 69 78 ff ff       	call   2830 <sprintf@plt>
    afc7:	48 8d 35 42 2e 00 00 	lea    rsi,[rip+0x2e42]        # de10 <_IO_stdin_used+0x1e10>
    afce:	bf 00 00 00 00       	mov    edi,0x0
    afd3:	e8 b8 77 ff ff       	call   2790 <strtok@plt>
    afd8:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    afdc:	48 83 7d d0 00       	cmp    QWORD PTR [rbp-0x30],0x0
    afe1:	75 ad                	jne    af90 <homenet_toi+0x39>
    afe3:	48 8d 45 df          	lea    rax,[rbp-0x21]
    afe7:	ba 10 00 00 00       	mov    edx,0x10
    afec:	be 00 00 00 00       	mov    esi,0x0
    aff1:	48 89 c7             	mov    rdi,rax
    aff4:	e8 b7 76 ff ff       	call   26b0 <strtol@plt>
    aff9:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    affd:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
    b004:	00 00 
    b006:	74 05                	je     b00d <homenet_toi+0xb6>
    b008:	e8 73 75 ff ff       	call   2580 <__stack_chk_fail@plt>
    b00d:	48 83 c4 38          	add    rsp,0x38
    b011:	5b                   	pop    rbx
    b012:	5d                   	pop    rbp
    b013:	c3                   	ret    

000000000000b014 <tcp_check_sum_passed>:
    b014:	f3 0f 1e fa          	endbr64 
    b018:	55                   	push   rbp
    b019:	48 89 e5             	mov    rbp,rsp
    b01c:	41 54                	push   r12
    b01e:	53                   	push   rbx
    b01f:	48 83 ec 30          	sub    rsp,0x30
    b023:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    b027:	48 89 75 c0          	mov    QWORD PTR [rbp-0x40],rsi
    b02b:	bb 00 00 00 00       	mov    ebx,0x0
    b030:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    b034:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    b038:	0f b7 c0             	movzx  eax,ax
    b03b:	89 c7                	mov    edi,eax
    b03d:	e8 fe 76 ff ff       	call   2740 <ntohs@plt>
    b042:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    b046:	0f b6 12             	movzx  edx,BYTE PTR [rdx]
    b049:	83 e2 0f             	and    edx,0xf
    b04c:	0f b6 d2             	movzx  edx,dl
    b04f:	c1 e2 02             	shl    edx,0x2
    b052:	29 d0                	sub    eax,edx
    b054:	66 89 45 de          	mov    WORD PTR [rbp-0x22],ax
    b058:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b05c:	0f b7 40 10          	movzx  eax,WORD PTR [rax+0x10]
    b060:	0f b7 c0             	movzx  eax,ax
    b063:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    b067:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b06b:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    b06f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b073:	66 c7 40 10 00 00    	mov    WORD PTR [rax+0x10],0x0
    b079:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    b07d:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    b080:	c1 e8 10             	shr    eax,0x10
    b083:	89 c0                	mov    eax,eax
    b085:	0f b7 c0             	movzx  eax,ax
    b088:	48 01 c3             	add    rbx,rax
    b08b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    b08f:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    b092:	89 c0                	mov    eax,eax
    b094:	0f b7 c0             	movzx  eax,ax
    b097:	48 01 c3             	add    rbx,rax
    b09a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    b09e:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    b0a1:	c1 e8 10             	shr    eax,0x10
    b0a4:	89 c0                	mov    eax,eax
    b0a6:	0f b7 c0             	movzx  eax,ax
    b0a9:	48 01 c3             	add    rbx,rax
    b0ac:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    b0b0:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    b0b3:	89 c0                	mov    eax,eax
    b0b5:	0f b7 c0             	movzx  eax,ax
    b0b8:	48 01 c3             	add    rbx,rax
    b0bb:	bf 06 00 00 00       	mov    edi,0x6
    b0c0:	e8 cb 74 ff ff       	call   2590 <htons@plt>
    b0c5:	0f b7 c0             	movzx  eax,ax
    b0c8:	48 01 c3             	add    rbx,rax
    b0cb:	0f b7 45 de          	movzx  eax,WORD PTR [rbp-0x22]
    b0cf:	89 c7                	mov    edi,eax
    b0d1:	e8 ba 74 ff ff       	call   2590 <htons@plt>
    b0d6:	0f b7 c0             	movzx  eax,ax
    b0d9:	48 01 c3             	add    rbx,rax
    b0dc:	eb 1a                	jmp    b0f8 <tcp_check_sum_passed+0xe4>
    b0de:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b0e2:	48 8d 50 14          	lea    rdx,[rax+0x14]
    b0e6:	48 89 55 c0          	mov    QWORD PTR [rbp-0x40],rdx
    b0ea:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b0ed:	0f b6 c0             	movzx  eax,al
    b0f0:	48 01 c3             	add    rbx,rax
    b0f3:	66 83 6d de 02       	sub    WORD PTR [rbp-0x22],0x2
    b0f8:	66 83 7d de 01       	cmp    WORD PTR [rbp-0x22],0x1
    b0fd:	77 df                	ja     b0de <tcp_check_sum_passed+0xca>
    b0ff:	66 83 7d de 00       	cmp    WORD PTR [rbp-0x22],0x0
    b104:	74 1d                	je     b123 <tcp_check_sum_passed+0x10f>
    b106:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b10a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b10d:	0f b6 c0             	movzx  eax,al
    b110:	48 01 c3             	add    rbx,rax
    b113:	eb 0e                	jmp    b123 <tcp_check_sum_passed+0x10f>
    b115:	0f b7 c3             	movzx  eax,bx
    b118:	48 c1 eb 10          	shr    rbx,0x10
    b11c:	48 89 da             	mov    rdx,rbx
    b11f:	48 8d 1c 10          	lea    rbx,[rax+rdx*1]
    b123:	48 89 d8             	mov    rax,rbx
    b126:	48 c1 e8 10          	shr    rax,0x10
    b12a:	48 85 c0             	test   rax,rax
    b12d:	75 e6                	jne    b115 <tcp_check_sum_passed+0x101>
    b12f:	48 f7 d3             	not    rbx
    b132:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b136:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    b13a:	66 89 50 10          	mov    WORD PTR [rax+0x10],dx
    b13e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b142:	0f b7 40 10          	movzx  eax,WORD PTR [rax+0x10]
    b146:	0f b7 c0             	movzx  eax,ax
    b149:	89 c7                	mov    edi,eax
    b14b:	e8 f0 75 ff ff       	call   2740 <ntohs@plt>
    b150:	44 0f b7 e0          	movzx  r12d,ax
    b154:	89 d8                	mov    eax,ebx
    b156:	0f b7 c0             	movzx  eax,ax
    b159:	89 c7                	mov    edi,eax
    b15b:	e8 e0 75 ff ff       	call   2740 <ntohs@plt>
    b160:	0f b7 c0             	movzx  eax,ax
    b163:	44 89 e2             	mov    edx,r12d
    b166:	89 c6                	mov    esi,eax
    b168:	48 8d 3d a8 2c 00 00 	lea    rdi,[rip+0x2ca8]        # de17 <_IO_stdin_used+0x1e17>
    b16f:	b8 00 00 00 00       	mov    eax,0x0
    b174:	e8 47 74 ff ff       	call   25c0 <printf@plt>
    b179:	89 d8                	mov    eax,ebx
    b17b:	0f b7 c0             	movzx  eax,ax
    b17e:	89 c7                	mov    edi,eax
    b180:	e8 bb 75 ff ff       	call   2740 <ntohs@plt>
    b185:	89 c3                	mov    ebx,eax
    b187:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    b18b:	0f b7 c0             	movzx  eax,ax
    b18e:	89 c7                	mov    edi,eax
    b190:	e8 ab 75 ff ff       	call   2740 <ntohs@plt>
    b195:	66 39 c3             	cmp    bx,ax
    b198:	75 07                	jne    b1a1 <tcp_check_sum_passed+0x18d>
    b19a:	b8 01 00 00 00       	mov    eax,0x1
    b19f:	eb 05                	jmp    b1a6 <tcp_check_sum_passed+0x192>
    b1a1:	b8 00 00 00 00       	mov    eax,0x0
    b1a6:	48 83 c4 30          	add    rsp,0x30
    b1aa:	5b                   	pop    rbx
    b1ab:	41 5c                	pop    r12
    b1ad:	5d                   	pop    rbp
    b1ae:	c3                   	ret    

000000000000b1af <run_hello_script>:
    b1af:	f3 0f 1e fa          	endbr64 
    b1b3:	55                   	push   rbp
    b1b4:	48 89 e5             	mov    rbp,rsp
    b1b7:	48 83 ec 10          	sub    rsp,0x10
    b1bb:	e8 20 75 ff ff       	call   26e0 <luaL_newstate@plt>
    b1c0:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b1c4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b1c8:	48 89 c7             	mov    rdi,rax
    b1cb:	e8 e0 75 ff ff       	call   27b0 <luaL_openlibs@plt>
    b1d0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b1d4:	ba 00 00 00 00       	mov    edx,0x0
    b1d9:	48 8d 35 48 2c 00 00 	lea    rsi,[rip+0x2c48]        # de28 <_IO_stdin_used+0x1e28>
    b1e0:	48 89 c7             	mov    rdi,rax
    b1e3:	e8 68 75 ff ff       	call   2750 <luaL_loadfilex@plt>
    b1e8:	85 c0                	test   eax,eax
    b1ea:	75 2b                	jne    b217 <run_hello_script+0x68>
    b1ec:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b1f0:	41 b9 00 00 00 00    	mov    r9d,0x0
    b1f6:	41 b8 00 00 00 00    	mov    r8d,0x0
    b1fc:	b9 00 00 00 00       	mov    ecx,0x0
    b201:	ba ff ff ff ff       	mov    edx,0xffffffff
    b206:	be 00 00 00 00       	mov    esi,0x0
    b20b:	48 89 c7             	mov    rdi,rax
    b20e:	e8 0d 75 ff ff       	call   2720 <lua_pcallk@plt>
    b213:	85 c0                	test   eax,eax
    b215:	74 07                	je     b21e <run_hello_script+0x6f>
    b217:	b8 01 00 00 00       	mov    eax,0x1
    b21c:	eb 05                	jmp    b223 <run_hello_script+0x74>
    b21e:	b8 00 00 00 00       	mov    eax,0x0
    b223:	85 c0                	test   eax,eax
    b225:	75 1e                	jne    b245 <run_hello_script+0x96>
    b227:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b22b:	48 89 c7             	mov    rdi,rax
    b22e:	e8 bd 72 ff ff       	call   24f0 <lua_gettop@plt>
    b233:	f7 d0                	not    eax
    b235:	89 c2                	mov    edx,eax
    b237:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b23b:	89 d6                	mov    esi,edx
    b23d:	48 89 c7             	mov    rdi,rax
    b240:	e8 9b 72 ff ff       	call   24e0 <lua_settop@plt>
    b245:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b249:	48 89 c7             	mov    rdi,rax
    b24c:	e8 0f 74 ff ff       	call   2660 <lua_close@plt>
    b251:	90                   	nop
    b252:	c9                   	leave  
    b253:	c3                   	ret    

000000000000b254 <collect_scripts>:
    b254:	f3 0f 1e fa          	endbr64 
    b258:	55                   	push   rbp
    b259:	48 89 e5             	mov    rbp,rsp
    b25c:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    b263:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b26a:	00 00 
    b26c:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b270:	31 c0                	xor    eax,eax
    b272:	48 8d 35 cd 2b 00 00 	lea    rsi,[rip+0x2bcd]        # de46 <_IO_stdin_used+0x1e46>
    b279:	48 8d 3d c8 2b 00 00 	lea    rdi,[rip+0x2bc8]        # de48 <_IO_stdin_used+0x1e48>
    b280:	e8 eb 74 ff ff       	call   2770 <fopen@plt>
    b285:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
    b289:	48 83 7d 80 00       	cmp    QWORD PTR [rbp-0x80],0x0
    b28e:	75 16                	jne    b2a6 <collect_scripts+0x52>
    b290:	48 8d 3d c9 2b 00 00 	lea    rdi,[rip+0x2bc9]        # de60 <_IO_stdin_used+0x1e60>
    b297:	e8 64 72 ff ff       	call   2500 <puts@plt>
    b29c:	bf ff ff ff ff       	mov    edi,0xffffffff
    b2a1:	e8 9a 75 ff ff       	call   2840 <exit@plt>
    b2a6:	48 c7 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],0x0
    b2ad:	00 00 00 00 
    b2b1:	48 8d 45 90          	lea    rax,[rbp-0x70]
    b2b5:	ba 00 00 00 00       	mov    edx,0x0
    b2ba:	48 8d 35 e1 2b 00 00 	lea    rsi,[rip+0x2be1]        # dea2 <_IO_stdin_used+0x1ea2>
    b2c1:	48 89 c7             	mov    rdi,rax
    b2c4:	e8 67 73 ff ff       	call   2630 <regcomp@plt>
    b2c9:	e9 86 00 00 00       	jmp    b354 <collect_scripts+0x100>
    b2ce:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b2d5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b2d8:	3c 23                	cmp    al,0x23
    b2da:	75 02                	jne    b2de <collect_scripts+0x8a>
    b2dc:	eb 76                	jmp    b354 <collect_scripts+0x100>
    b2de:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b2e5:	ba 0e 00 00 00       	mov    edx,0xe
    b2ea:	48 8d 35 bb 2b 00 00 	lea    rsi,[rip+0x2bbb]        # deac <_IO_stdin_used+0x1eac>
    b2f1:	48 89 c7             	mov    rdi,rax
    b2f4:	e8 c7 71 ff ff       	call   24c0 <strncmp@plt>
    b2f9:	85 c0                	test   eax,eax
    b2fb:	75 34                	jne    b331 <collect_scripts+0xdd>
    b2fd:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b304:	48 8d 50 0e          	lea    rdx,[rax+0xe]
    b308:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b30c:	48 89 d6             	mov    rsi,rdx
    b30f:	48 89 c7             	mov    rdi,rax
    b312:	e8 b9 71 ff ff       	call   24d0 <strcpy@plt>
    b317:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b31b:	48 8d 35 99 2b 00 00 	lea    rsi,[rip+0x2b99]        # debb <_IO_stdin_used+0x1ebb>
    b322:	48 89 c7             	mov    rdi,rax
    b325:	e8 16 73 ff ff       	call   2640 <strcspn@plt>
    b32a:	c6 44 05 d0 00       	mov    BYTE PTR [rbp+rax*1-0x30],0x0
    b32f:	eb 23                	jmp    b354 <collect_scripts+0x100>
    b331:	48 8b b5 78 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x88]
    b338:	48 8d 45 90          	lea    rax,[rbp-0x70]
    b33c:	41 b8 00 00 00 00    	mov    r8d,0x0
    b342:	b9 00 00 00 00       	mov    ecx,0x0
    b347:	ba 00 00 00 00       	mov    edx,0x0
    b34c:	48 89 c7             	mov    rdi,rax
    b34f:	e8 dc 73 ff ff       	call   2730 <regexec@plt>
    b354:	48 8b 55 80          	mov    rdx,QWORD PTR [rbp-0x80]
    b358:	48 8d 8d 70 ff ff ff 	lea    rcx,[rbp-0x90]
    b35f:	48 8d 85 78 ff ff ff 	lea    rax,[rbp-0x88]
    b366:	48 89 ce             	mov    rsi,rcx
    b369:	48 89 c7             	mov    rdi,rax
    b36c:	e8 7f 74 ff ff       	call   27f0 <getline@plt>
    b371:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    b375:	48 83 7d 88 ff       	cmp    QWORD PTR [rbp-0x78],0xffffffffffffffff
    b37a:	0f 85 4e ff ff ff    	jne    b2ce <collect_scripts+0x7a>
    b380:	90                   	nop
    b381:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b385:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    b38c:	00 00 
    b38e:	74 05                	je     b395 <collect_scripts+0x141>
    b390:	e8 eb 71 ff ff       	call   2580 <__stack_chk_fail@plt>
    b395:	c9                   	leave  
    b396:	c3                   	ret    

000000000000b397 <ip6decode>:
    b397:	f3 0f 1e fa          	endbr64 
    b39b:	55                   	push   rbp
    b39c:	48 89 e5             	mov    rbp,rsp
    b39f:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    b3a6:	48 89 bd 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdi
    b3ad:	48 89 b5 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rsi
    b3b4:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b3bb:	00 00 
    b3bd:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b3c1:	31 c0                	xor    eax,eax
    b3c3:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b3ca:	48 83 c0 0e          	add    rax,0xe
    b3ce:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    b3d2:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    b3d6:	48 83 c0 08          	add    rax,0x8
    b3da:	48 89 c7             	mov    rdi,rax
    b3dd:	e8 b2 7d ff ff       	call   3194 <inet6_ntoa>
    b3e2:	48 89 c1             	mov    rcx,rax
    b3e5:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b3e9:	ba 29 00 00 00       	mov    edx,0x29
    b3ee:	48 89 ce             	mov    rsi,rcx
    b3f1:	48 89 c7             	mov    rdi,rax
    b3f4:	e8 b7 70 ff ff       	call   24b0 <strncpy@plt>
    b3f9:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    b3fd:	48 83 c0 18          	add    rax,0x18
    b401:	48 89 c7             	mov    rdi,rax
    b404:	e8 8b 7d ff ff       	call   3194 <inet6_ntoa>
    b409:	48 89 c1             	mov    rcx,rax
    b40c:	48 8d 45 90          	lea    rax,[rbp-0x70]
    b410:	ba 29 00 00 00       	mov    edx,0x29
    b415:	48 89 ce             	mov    rsi,rcx
    b418:	48 89 c7             	mov    rdi,rax
    b41b:	e8 90 70 ff ff       	call   24b0 <strncpy@plt>
    b420:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    b424:	0f b6 40 06          	movzx  eax,BYTE PTR [rax+0x6]
    b428:	0f b6 c0             	movzx  eax,al
    b42b:	85 c0                	test   eax,eax
    b42d:	75 1c                	jne    b44b <ip6decode+0xb4>
    b42f:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    b433:	48 8d 4d c0          	lea    rcx,[rbp-0x40]
    b437:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b43e:	48 89 ce             	mov    rsi,rcx
    b441:	48 89 c7             	mov    rdi,rax
    b444:	e8 e7 85 ff ff       	call   3a30 <ip6_icmp_decode>
    b449:	eb 28                	jmp    b473 <ip6decode+0xdc>
    b44b:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    b44f:	0f b6 40 06          	movzx  eax,BYTE PTR [rax+0x6]
    b453:	0f b6 c8             	movzx  ecx,al
    b456:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    b45a:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b45e:	48 89 c6             	mov    rsi,rax
    b461:	48 8d 3d 58 2a 00 00 	lea    rdi,[rip+0x2a58]        # dec0 <_IO_stdin_used+0x1ec0>
    b468:	b8 00 00 00 00       	mov    eax,0x0
    b46d:	e8 4e 71 ff ff       	call   25c0 <printf@plt>
    b472:	90                   	nop
    b473:	90                   	nop
    b474:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b478:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    b47f:	00 00 
    b481:	74 05                	je     b488 <ip6decode+0xf1>
    b483:	e8 f8 70 ff ff       	call   2580 <__stack_chk_fail@plt>
    b488:	c9                   	leave  
    b489:	c3                   	ret    

000000000000b48a <print_mem_map>:
    b48a:	f3 0f 1e fa          	endbr64 
    b48e:	55                   	push   rbp
    b48f:	48 89 e5             	mov    rbp,rsp
    b492:	48 83 ec 10          	sub    rsp,0x10
    b496:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    b49d:	eb 4c                	jmp    b4eb <print_mem_map+0x61>
    b49f:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    b4a2:	48 63 d0             	movsxd rdx,eax
    b4a5:	48 89 d0             	mov    rax,rdx
    b4a8:	48 c1 e0 02          	shl    rax,0x2
    b4ac:	48 01 d0             	add    rax,rdx
    b4af:	48 c1 e0 03          	shl    rax,0x3
    b4b3:	48 8d 15 66 d3 12 00 	lea    rdx,[rip+0x12d366]        # 138820 <fn_mem_map>
    b4ba:	48 01 d0             	add    rax,rdx
    b4bd:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b4c1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b4c5:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    b4c8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b4cc:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    b4cf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b4d3:	48 89 c6             	mov    rsi,rax
    b4d6:	48 8d 3d 0b 2a 00 00 	lea    rdi,[rip+0x2a0b]        # dee8 <_IO_stdin_used+0x1ee8>
    b4dd:	b8 00 00 00 00       	mov    eax,0x0
    b4e2:	e8 d9 70 ff ff       	call   25c0 <printf@plt>
    b4e7:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    b4eb:	8b 05 b7 c3 0f 00    	mov    eax,DWORD PTR [rip+0xfc3b7]        # 1078a8 <fn_num>
    b4f1:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    b4f4:	7c a9                	jl     b49f <print_mem_map+0x15>
    b4f6:	90                   	nop
    b4f7:	90                   	nop
    b4f8:	c9                   	leave  
    b4f9:	c3                   	ret    

000000000000b4fa <crash_handler>:
    b4fa:	f3 0f 1e fa          	endbr64 
    b4fe:	55                   	push   rbp
    b4ff:	48 89 e5             	mov    rbp,rsp
    b502:	41 54                	push   r12
    b504:	53                   	push   rbx
    b505:	48 81 ec f0 00 00 00 	sub    rsp,0xf0
    b50c:	89 bd 0c ff ff ff    	mov    DWORD PTR [rbp-0xf4],edi
    b512:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b519:	00 00 
    b51b:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    b51f:	31 c0                	xor    eax,eax
    b521:	48 8d 85 30 ff ff ff 	lea    rax,[rbp-0xd0]
    b528:	be 14 00 00 00       	mov    esi,0x14
    b52d:	48 89 c7             	mov    rdi,rax
    b530:	e8 3b 70 ff ff       	call   2570 <backtrace@plt>
    b535:	89 85 18 ff ff ff    	mov    DWORD PTR [rbp-0xe8],eax
    b53b:	8b 95 18 ff ff ff    	mov    edx,DWORD PTR [rbp-0xe8]
    b541:	48 8d 85 30 ff ff ff 	lea    rax,[rbp-0xd0]
    b548:	89 d6                	mov    esi,edx
    b54a:	48 89 c7             	mov    rdi,rax
    b54d:	e8 ce 6f ff ff       	call   2520 <backtrace_symbols@plt>
    b552:	48 89 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rax
    b559:	b8 00 00 00 00       	mov    eax,0x0
    b55e:	e8 fd 7d ff ff       	call   3360 <get_formated_time>
    b563:	48 89 c6             	mov    rsi,rax
    b566:	48 8d 3d 9b 29 00 00 	lea    rdi,[rip+0x299b]        # df08 <_IO_stdin_used+0x1f08>
    b56d:	b8 00 00 00 00       	mov    eax,0x0
    b572:	e8 49 70 ff ff       	call   25c0 <printf@plt>
    b577:	48 8d 3d b9 29 00 00 	lea    rdi,[rip+0x29b9]        # df37 <_IO_stdin_used+0x1f37>
    b57e:	e8 7d 6f ff ff       	call   2500 <puts@plt>
    b583:	48 83 bd 20 ff ff ff 	cmp    QWORD PTR [rbp-0xe0],0x0
    b58a:	00 
    b58b:	0f 84 6d 01 00 00    	je     b6fe <crash_handler+0x204>
    b591:	c7 85 14 ff ff ff 00 	mov    DWORD PTR [rbp-0xec],0x0
    b598:	00 00 00 
    b59b:	e9 4c 01 00 00       	jmp    b6ec <crash_handler+0x1f2>
    b5a0:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b5a6:	48 98                	cdqe   
    b5a8:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    b5af:	00 
    b5b0:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b5b7:	48 01 d0             	add    rax,rdx
    b5ba:	48 8b 00             	mov    rax,QWORD PTR [rax]
    b5bd:	48 8d 35 87 29 00 00 	lea    rsi,[rip+0x2987]        # df4b <_IO_stdin_used+0x1f4b>
    b5c4:	48 89 c7             	mov    rdi,rax
    b5c7:	e8 b4 72 ff ff       	call   2880 <strstr@plt>
    b5cc:	48 85 c0             	test   rax,rax
    b5cf:	0f 85 0f 01 00 00    	jne    b6e4 <crash_handler+0x1ea>
    b5d5:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b5db:	48 98                	cdqe   
    b5dd:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    b5e4:	00 
    b5e5:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b5ec:	48 01 d0             	add    rax,rdx
    b5ef:	4c 8b 20             	mov    r12,QWORD PTR [rax]
    b5f2:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b5f8:	48 98                	cdqe   
    b5fa:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    b601:	00 
    b602:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b609:	48 01 d0             	add    rax,rdx
    b60c:	48 8b 00             	mov    rax,QWORD PTR [rax]
    b60f:	be 2b 00 00 00       	mov    esi,0x2b
    b614:	48 89 c7             	mov    rdi,rax
    b617:	e8 df 7e ff ff       	call   34fb <strloc>
    b61c:	48 98                	cdqe   
    b61e:	48 83 c0 01          	add    rax,0x1
    b622:	49 8d 14 04          	lea    rdx,[r12+rax*1]
    b626:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b62a:	48 8d 35 1e 29 00 00 	lea    rsi,[rip+0x291e]        # df4f <_IO_stdin_used+0x1f4f>
    b631:	48 89 c7             	mov    rdi,rax
    b634:	b8 00 00 00 00       	mov    eax,0x0
    b639:	e8 f2 71 ff ff       	call   2830 <sprintf@plt>
    b63e:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b642:	be 29 00 00 00       	mov    esi,0x29
    b647:	48 89 c7             	mov    rdi,rax
    b64a:	e8 ac 7e ff ff       	call   34fb <strloc>
    b64f:	48 98                	cdqe   
    b651:	c6 44 05 d0 00       	mov    BYTE PTR [rbp+rax*1-0x30],0x0
    b656:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b65a:	ba 10 00 00 00       	mov    edx,0x10
    b65f:	be 00 00 00 00       	mov    esi,0x0
    b664:	48 89 c7             	mov    rdi,rax
    b667:	e8 44 70 ff ff       	call   26b0 <strtol@plt>
    b66c:	89 85 1c ff ff ff    	mov    DWORD PTR [rbp-0xe4],eax
    b672:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [rbp-0xe4]
    b678:	89 c7                	mov    edi,eax
    b67a:	e8 20 01 00 00       	call   b79f <offset_search>
    b67f:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
    b686:	83 bd 1c ff ff ff 00 	cmp    DWORD PTR [rbp-0xe4],0x0
    b68d:	74 3a                	je     b6c9 <crash_handler+0x1cf>
    b68f:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    b696:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    b699:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    b6a0:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    b6a3:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    b6aa:	8b b5 1c ff ff ff    	mov    esi,DWORD PTR [rbp-0xe4]
    b6b0:	41 89 f0             	mov    r8d,esi
    b6b3:	48 89 c6             	mov    rsi,rax
    b6b6:	48 8d 3d 9b 28 00 00 	lea    rdi,[rip+0x289b]        # df58 <_IO_stdin_used+0x1f58>
    b6bd:	b8 00 00 00 00       	mov    eax,0x0
    b6c2:	e8 f9 6e ff ff       	call   25c0 <printf@plt>
    b6c7:	eb 1c                	jmp    b6e5 <crash_handler+0x1eb>
    b6c9:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [rbp-0xe4]
    b6cf:	89 c6                	mov    esi,eax
    b6d1:	48 8d 3d b8 28 00 00 	lea    rdi,[rip+0x28b8]        # df90 <_IO_stdin_used+0x1f90>
    b6d8:	b8 00 00 00 00       	mov    eax,0x0
    b6dd:	e8 de 6e ff ff       	call   25c0 <printf@plt>
    b6e2:	eb 01                	jmp    b6e5 <crash_handler+0x1eb>
    b6e4:	90                   	nop
    b6e5:	83 85 14 ff ff ff 01 	add    DWORD PTR [rbp-0xec],0x1
    b6ec:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b6f2:	3b 85 18 ff ff ff    	cmp    eax,DWORD PTR [rbp-0xe8]
    b6f8:	0f 8c a2 fe ff ff    	jl     b5a0 <crash_handler+0xa6>
    b6fe:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b705:	48 89 c7             	mov    rdi,rax
    b708:	e8 63 6d ff ff       	call   2470 <free@plt>
    b70d:	48 8d 3d a6 28 00 00 	lea    rdi,[rip+0x28a6]        # dfba <_IO_stdin_used+0x1fba>
    b714:	e8 e7 6d ff ff       	call   2500 <puts@plt>
    b719:	89 c6                	mov    esi,eax
    b71b:	48 8d 3d a7 28 00 00 	lea    rdi,[rip+0x28a7]        # dfc9 <_IO_stdin_used+0x1fc9>
    b722:	b8 00 00 00 00       	mov    eax,0x0
    b727:	e8 94 6e ff ff       	call   25c0 <printf@plt>
    b72c:	89 d8                	mov    eax,ebx
    b72e:	89 c6                	mov    esi,eax
    b730:	48 8d 3d a2 28 00 00 	lea    rdi,[rip+0x28a2]        # dfd9 <_IO_stdin_used+0x1fd9>
    b737:	b8 00 00 00 00       	mov    eax,0x0
    b73c:	e8 7f 6e ff ff       	call   25c0 <printf@plt>
    b741:	89 d8                	mov    eax,ebx
    b743:	89 c6                	mov    esi,eax
    b745:	48 8d 3d 9d 28 00 00 	lea    rdi,[rip+0x289d]        # dfe9 <_IO_stdin_used+0x1fe9>
    b74c:	b8 00 00 00 00       	mov    eax,0x0
    b751:	e8 6a 6e ff ff       	call   25c0 <printf@plt>
    b756:	89 c8                	mov    eax,ecx
    b758:	89 c6                	mov    esi,eax
    b75a:	48 8d 3d 98 28 00 00 	lea    rdi,[rip+0x2898]        # dff9 <_IO_stdin_used+0x1ff9>
    b761:	b8 00 00 00 00       	mov    eax,0x0
    b766:	e8 55 6e ff ff       	call   25c0 <printf@plt>
    b76b:	89 e0                	mov    eax,esp
    b76d:	89 c6                	mov    esi,eax
    b76f:	48 8d 3d 93 28 00 00 	lea    rdi,[rip+0x2893]        # e009 <_IO_stdin_used+0x2009>
    b776:	b8 00 00 00 00       	mov    eax,0x0
    b77b:	e8 40 6e ff ff       	call   25c0 <printf@plt>
    b780:	89 e8                	mov    eax,ebp
    b782:	89 c6                	mov    esi,eax
    b784:	48 8d 3d 8e 28 00 00 	lea    rdi,[rip+0x288e]        # e019 <_IO_stdin_used+0x2019>
    b78b:	b8 00 00 00 00       	mov    eax,0x0
    b790:	e8 2b 6e ff ff       	call   25c0 <printf@plt>
    b795:	bf 01 00 00 00       	mov    edi,0x1
    b79a:	e8 a1 70 ff ff       	call   2840 <exit@plt>

000000000000b79f <offset_search>:
    b79f:	f3 0f 1e fa          	endbr64 
    b7a3:	55                   	push   rbp
    b7a4:	48 89 e5             	mov    rbp,rsp
    b7a7:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    b7aa:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    b7b1:	eb 44                	jmp    b7f7 <offset_search+0x58>
    b7b3:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    b7b6:	48 63 d0             	movsxd rdx,eax
    b7b9:	48 89 d0             	mov    rax,rdx
    b7bc:	48 c1 e0 02          	shl    rax,0x2
    b7c0:	48 01 d0             	add    rax,rdx
    b7c3:	48 c1 e0 03          	shl    rax,0x3
    b7c7:	48 8d 15 52 d0 12 00 	lea    rdx,[rip+0x12d052]        # 138820 <fn_mem_map>
    b7ce:	48 01 d0             	add    rax,rdx
    b7d1:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b7d5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b7d9:	8b 40 20             	mov    eax,DWORD PTR [rax+0x20]
    b7dc:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    b7df:	76 12                	jbe    b7f3 <offset_search+0x54>
    b7e1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b7e5:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    b7e8:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    b7eb:	73 06                	jae    b7f3 <offset_search+0x54>
    b7ed:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b7f1:	eb 14                	jmp    b807 <offset_search+0x68>
    b7f3:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    b7f7:	8b 05 ab c0 0f 00    	mov    eax,DWORD PTR [rip+0xfc0ab]        # 1078a8 <fn_num>
    b7fd:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    b800:	7c b1                	jl     b7b3 <offset_search+0x14>
    b802:	b8 00 00 00 00       	mov    eax,0x0
    b807:	5d                   	pop    rbp
    b808:	c3                   	ret    

000000000000b809 <add_fn>:
    b809:	f3 0f 1e fa          	endbr64 
    b80d:	55                   	push   rbp
    b80e:	48 89 e5             	mov    rbp,rsp
    b811:	48 83 ec 20          	sub    rsp,0x20
    b815:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    b819:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    b81c:	89 55 e0             	mov    DWORD PTR [rbp-0x20],edx
    b81f:	8b 05 83 c0 0f 00    	mov    eax,DWORD PTR [rip+0xfc083]        # 1078a8 <fn_num>
    b825:	8d 50 01             	lea    edx,[rax+0x1]
    b828:	89 15 7a c0 0f 00    	mov    DWORD PTR [rip+0xfc07a],edx        # 1078a8 <fn_num>
    b82e:	48 63 d0             	movsxd rdx,eax
    b831:	48 89 d0             	mov    rax,rdx
    b834:	48 c1 e0 02          	shl    rax,0x2
    b838:	48 01 d0             	add    rax,rdx
    b83b:	48 c1 e0 03          	shl    rax,0x3
    b83f:	48 8d 15 da cf 12 00 	lea    rdx,[rip+0x12cfda]        # 138820 <fn_mem_map>
    b846:	48 01 d0             	add    rax,rdx
    b849:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b84d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b851:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    b855:	48 89 d6             	mov    rsi,rdx
    b858:	48 89 c7             	mov    rdi,rax
    b85b:	e8 70 6c ff ff       	call   24d0 <strcpy@plt>
    b860:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b864:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    b867:	89 50 20             	mov    DWORD PTR [rax+0x20],edx
    b86a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b86e:	8b 55 e0             	mov    edx,DWORD PTR [rbp-0x20]
    b871:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    b874:	90                   	nop
    b875:	c9                   	leave  
    b876:	c3                   	ret    

000000000000b877 <load_fn_mem_map>:
    b877:	f3 0f 1e fa          	endbr64 
    b87b:	55                   	push   rbp
    b87c:	48 89 e5             	mov    rbp,rsp
    b87f:	53                   	push   rbx
    b880:	48 83 ec 78          	sub    rsp,0x78
    b884:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b88b:	00 00 
    b88d:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    b891:	31 c0                	xor    eax,eax
    b893:	48 8d 35 96 27 00 00 	lea    rsi,[rip+0x2796]        # e030 <_IO_stdin_used+0x2030>
    b89a:	48 8d 3d 91 27 00 00 	lea    rdi,[rip+0x2791]        # e032 <_IO_stdin_used+0x2032>
    b8a1:	e8 ca 6e ff ff       	call   2770 <fopen@plt>
    b8a6:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    b8aa:	48 83 7d b0 00       	cmp    QWORD PTR [rbp-0x50],0x0
    b8af:	75 16                	jne    b8c7 <load_fn_mem_map+0x50>
    b8b1:	48 8d 3d 98 27 00 00 	lea    rdi,[rip+0x2798]        # e050 <_IO_stdin_used+0x2050>
    b8b8:	e8 43 6c ff ff       	call   2500 <puts@plt>
    b8bd:	bf ff ff ff ff       	mov    edi,0xffffffff
    b8c2:	e8 79 6f ff ff       	call   2840 <exit@plt>
    b8c7:	48 c7 45 98 00 00 00 	mov    QWORD PTR [rbp-0x68],0x0
    b8ce:	00 
    b8cf:	48 c7 45 a0 00 00 00 	mov    QWORD PTR [rbp-0x60],0x0
    b8d6:	00 
    b8d7:	e9 db 00 00 00       	jmp    b9b7 <load_fn_mem_map+0x140>
    b8dc:	48 8b 5d 98          	mov    rbx,QWORD PTR [rbp-0x68]
    b8e0:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    b8e4:	48 8d 35 cc 27 00 00 	lea    rsi,[rip+0x27cc]        # e0b7 <_IO_stdin_used+0x20b7>
    b8eb:	48 89 c7             	mov    rdi,rax
    b8ee:	e8 4d 6d ff ff       	call   2640 <strcspn@plt>
    b8f3:	48 01 d8             	add    rax,rbx
    b8f6:	c6 00 00             	mov    BYTE PTR [rax],0x0
    b8f9:	c7 45 94 00 00 00 00 	mov    DWORD PTR [rbp-0x6c],0x0
    b900:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    b904:	48 8d 35 ae 27 00 00 	lea    rsi,[rip+0x27ae]        # e0b9 <_IO_stdin_used+0x20b9>
    b90b:	48 89 c7             	mov    rdi,rax
    b90e:	e8 7d 6e ff ff       	call   2790 <strtok@plt>
    b913:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    b917:	eb 7f                	jmp    b998 <load_fn_mem_map+0x121>
    b919:	83 7d 94 02          	cmp    DWORD PTR [rbp-0x6c],0x2
    b91d:	74 44                	je     b963 <load_fn_mem_map+0xec>
    b91f:	83 7d 94 02          	cmp    DWORD PTR [rbp-0x6c],0x2
    b923:	7f 59                	jg     b97e <load_fn_mem_map+0x107>
    b925:	83 7d 94 00          	cmp    DWORD PTR [rbp-0x6c],0x0
    b929:	74 08                	je     b933 <load_fn_mem_map+0xbc>
    b92b:	83 7d 94 01          	cmp    DWORD PTR [rbp-0x6c],0x1
    b92f:	74 17                	je     b948 <load_fn_mem_map+0xd1>
    b931:	eb 4b                	jmp    b97e <load_fn_mem_map+0x107>
    b933:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    b937:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b93b:	48 89 d6             	mov    rsi,rdx
    b93e:	48 89 c7             	mov    rdi,rax
    b941:	e8 8a 6b ff ff       	call   24d0 <strcpy@plt>
    b946:	eb 37                	jmp    b97f <load_fn_mem_map+0x108>
    b948:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    b94c:	ba 10 00 00 00       	mov    edx,0x10
    b951:	be 00 00 00 00       	mov    esi,0x0
    b956:	48 89 c7             	mov    rdi,rax
    b959:	e8 52 6d ff ff       	call   26b0 <strtol@plt>
    b95e:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    b961:	eb 1c                	jmp    b97f <load_fn_mem_map+0x108>
    b963:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    b967:	ba 10 00 00 00       	mov    edx,0x10
    b96c:	be 00 00 00 00       	mov    esi,0x0
    b971:	48 89 c7             	mov    rdi,rax
    b974:	e8 37 6d ff ff       	call   26b0 <strtol@plt>
    b979:	89 45 90             	mov    DWORD PTR [rbp-0x70],eax
    b97c:	eb 01                	jmp    b97f <load_fn_mem_map+0x108>
    b97e:	90                   	nop
    b97f:	48 8d 35 33 27 00 00 	lea    rsi,[rip+0x2733]        # e0b9 <_IO_stdin_used+0x20b9>
    b986:	bf 00 00 00 00       	mov    edi,0x0
    b98b:	e8 00 6e ff ff       	call   2790 <strtok@plt>
    b990:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    b994:	83 45 94 01          	add    DWORD PTR [rbp-0x6c],0x1
    b998:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
    b99d:	0f 85 76 ff ff ff    	jne    b919 <load_fn_mem_map+0xa2>
    b9a3:	8b 55 90             	mov    edx,DWORD PTR [rbp-0x70]
    b9a6:	8b 4d 8c             	mov    ecx,DWORD PTR [rbp-0x74]
    b9a9:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b9ad:	89 ce                	mov    esi,ecx
    b9af:	48 89 c7             	mov    rdi,rax
    b9b2:	e8 52 fe ff ff       	call   b809 <add_fn>
    b9b7:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
    b9bb:	48 8d 4d a0          	lea    rcx,[rbp-0x60]
    b9bf:	48 8d 45 98          	lea    rax,[rbp-0x68]
    b9c3:	48 89 ce             	mov    rsi,rcx
    b9c6:	48 89 c7             	mov    rdi,rax
    b9c9:	e8 22 6e ff ff       	call   27f0 <getline@plt>
    b9ce:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    b9d2:	48 83 7d b8 ff       	cmp    QWORD PTR [rbp-0x48],0xffffffffffffffff
    b9d7:	0f 85 ff fe ff ff    	jne    b8dc <load_fn_mem_map+0x65>
    b9dd:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b9e1:	48 89 c7             	mov    rdi,rax
    b9e4:	e8 67 6b ff ff       	call   2550 <fclose@plt>
    b9e9:	90                   	nop
    b9ea:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    b9ee:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    b9f5:	00 00 
    b9f7:	74 05                	je     b9fe <load_fn_mem_map+0x187>
    b9f9:	e8 82 6b ff ff       	call   2580 <__stack_chk_fail@plt>
    b9fe:	48 83 c4 78          	add    rsp,0x78
    ba02:	5b                   	pop    rbx
    ba03:	5d                   	pop    rbp
    ba04:	c3                   	ret    
    ba05:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    ba0c:	00 00 00 
    ba0f:	90                   	nop

000000000000ba10 <__libc_csu_init>:
    ba10:	f3 0f 1e fa          	endbr64 
    ba14:	41 57                	push   r15
    ba16:	4c 8d 3d 4b 51 00 00 	lea    r15,[rip+0x514b]        # 10b68 <__frame_dummy_init_array_entry>
    ba1d:	41 56                	push   r14
    ba1f:	49 89 d6             	mov    r14,rdx
    ba22:	41 55                	push   r13
    ba24:	49 89 f5             	mov    r13,rsi
    ba27:	41 54                	push   r12
    ba29:	41 89 fc             	mov    r12d,edi
    ba2c:	55                   	push   rbp
    ba2d:	48 8d 2d 3c 51 00 00 	lea    rbp,[rip+0x513c]        # 10b70 <__do_global_dtors_aux_fini_array_entry>
    ba34:	53                   	push   rbx
    ba35:	4c 29 fd             	sub    rbp,r15
    ba38:	48 83 ec 08          	sub    rsp,0x8
    ba3c:	e8 bf 65 ff ff       	call   2000 <_init>
    ba41:	48 c1 fd 03          	sar    rbp,0x3
    ba45:	74 1f                	je     ba66 <__libc_csu_init+0x56>
    ba47:	31 db                	xor    ebx,ebx
    ba49:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    ba50:	4c 89 f2             	mov    rdx,r14
    ba53:	4c 89 ee             	mov    rsi,r13
    ba56:	44 89 e7             	mov    edi,r12d
    ba59:	41 ff 14 df          	call   QWORD PTR [r15+rbx*8]
    ba5d:	48 83 c3 01          	add    rbx,0x1
    ba61:	48 39 dd             	cmp    rbp,rbx
    ba64:	75 ea                	jne    ba50 <__libc_csu_init+0x40>
    ba66:	48 83 c4 08          	add    rsp,0x8
    ba6a:	5b                   	pop    rbx
    ba6b:	5d                   	pop    rbp
    ba6c:	41 5c                	pop    r12
    ba6e:	41 5d                	pop    r13
    ba70:	41 5e                	pop    r14
    ba72:	41 5f                	pop    r15
    ba74:	c3                   	ret    
    ba75:	66 66 2e 0f 1f 84 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    ba7c:	00 00 00 00 

000000000000ba80 <__libc_csu_fini>:
    ba80:	f3 0f 1e fa          	endbr64 
    ba84:	c3                   	ret    

Disassembly of section .fini:

000000000000ba88 <_fini>:
    ba88:	f3 0f 1e fa          	endbr64 
    ba8c:	48 83 ec 08          	sub    rsp,0x8
    ba90:	48 83 c4 08          	add    rsp,0x8
    ba94:	c3                   	ret    

Disassembly of section .rodata:

000000000000c000 <_IO_stdin_used>:
    c000:	01 00                	add    DWORD PTR [rax],eax
    c002:	02 00                	add    al,BYTE PTR [rax]
    c004:	2f                   	(bad)  
    c005:	65 74 63             	gs je  c06b <_IO_stdin_used+0x6b>
    c008:	2f                   	(bad)  
    c009:	76 69                	jbe    c074 <_IO_stdin_used+0x74>
    c00b:	67 69 6c 2f 76 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x76],0x6c696769
    c012:	69 6c 
    c014:	2e 63 6f 6e          	movsxd ebp,DWORD PTR cs:[rdi+0x6e]
    c018:	66 00 2f             	data16 add BYTE PTR [rdi],ch
    c01b:	76 61                	jbe    c07e <_IO_stdin_used+0x7e>
    c01d:	72 2f                	jb     c04e <_IO_stdin_used+0x4e>
    c01f:	6c                   	ins    BYTE PTR es:[rdi],dx
    c020:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c021:	67 2f                	addr32 (bad) 
    c023:	76 69                	jbe    c08e <_IO_stdin_used+0x8e>
    c025:	67 69 6c 2f 73 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x6f6c6769
    c02c:	6c 6f 
    c02e:	67 2e 6c             	cs ins BYTE PTR es:[edi],dx
    c031:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c032:	67 00 2f             	add    BYTE PTR [edi],ch
    c035:	65 74 63             	gs je  c09b <_IO_stdin_used+0x9b>
    c038:	2f                   	(bad)  
    c039:	76 69                	jbe    c0a4 <_IO_stdin_used+0xa4>
    c03b:	67 69 6c 2f 68 6f 73 	imul   ebp,DWORD PTR [edi+ebp*1+0x68],0x7374736f
    c042:	74 73 
    c044:	2e 63 6f 6e          	movsxd ebp,DWORD PTR cs:[rdi+0x6e]
    c048:	66 00 00             	data16 add BYTE PTR [rax],al
    c04b:	00 00                	add    BYTE PTR [rax],al
    c04d:	00 00                	add    BYTE PTR [rax],al
    c04f:	00 1b                	add    BYTE PTR [rbx],bl
    c051:	5b                   	pop    rbx
    c052:	39 30                	cmp    DWORD PTR [rax],esi
    c054:	6d                   	ins    DWORD PTR es:[rdi],dx
    c055:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c05a:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c05f:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c064:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c069:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c06e:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c073:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c078:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c07d:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c082:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c087:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c08c:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c091:	2d 1b 5b 6d 00       	sub    eax,0x6d5b1b
    c096:	00 00                	add    BYTE PTR [rax],al
    c098:	42                   	rex.X
    c099:	41                   	rex.B
    c09a:	44 2d 54 52 41 46    	rex.R sub eax,0x46415254
    c0a0:	46                   	rex.RX
    c0a1:	49                   	rex.WB
    c0a2:	43 20 55 6e          	rex.XB and BYTE PTR [r13+0x6e],dl
    c0a6:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c0aa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c0ab:	20 45 74             	and    BYTE PTR [rbp+0x74],al
    c0ae:	68 65 72 6e 74       	push   0x746e7265
    c0b3:	20 46 72             	and    BYTE PTR [rsi+0x72],al
    c0b6:	61                   	(bad)  
    c0b7:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0b8:	65 20 50 72          	and    BYTE PTR gs:[rax+0x72],dl
    c0bc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c0bd:	74 6f                	je     c12e <_IO_stdin_used+0x12e>
    c0bf:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    c0c2:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    c0c5:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0c6:	62                   	(bad)  
    c0c7:	65 72 00             	gs jb  c0ca <_IO_stdin_used+0xca>
    c0ca:	2f                   	(bad)  
    c0cb:	76 61                	jbe    c12e <_IO_stdin_used+0x12e>
    c0cd:	72 2f                	jb     c0fe <_IO_stdin_used+0xfe>
    c0cf:	6c                   	ins    BYTE PTR es:[rdi],dx
    c0d0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c0d1:	67 2f                	addr32 (bad) 
    c0d3:	76 69                	jbe    c13e <_IO_stdin_used+0x13e>
    c0d5:	67 69 6c 2f 73 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x6f6c6769
    c0dc:	6c 6f 
    c0de:	67 2e 6c             	cs ins BYTE PTR es:[edi],dx
    c0e1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c0e2:	67 00 00             	add    BYTE PTR [eax],al
    c0e5:	00 00                	add    BYTE PTR [rax],al
    c0e7:	00 1b                	add    BYTE PTR [rbx],bl
    c0e9:	5b                   	pop    rbx
    c0ea:	33 3b                	xor    edi,DWORD PTR [rbx]
    c0ec:	33 33                	xor    esi,DWORD PTR [rbx]
    c0ee:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0ef:	00 25 73 00 30 2e    	add    BYTE PTR [rip+0x2e300073],ah        # 2e30c168 <_end+0x2e1d1148>
    c0f5:	30 2e                	xor    BYTE PTR [rsi],ch
    c0f7:	30 2e                	xor    BYTE PTR [rsi],ch
    c0f9:	30 00                	xor    BYTE PTR [rax],al
    c0fb:	00 00                	add    BYTE PTR [rax],al
    c0fd:	00 00                	add    BYTE PTR [rax],al
    c0ff:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    c102:	4f 54                	rex.WRXB push r12
    c104:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    c108:	50                   	push   rax
    c109:	3a 20                	cmp    ah,BYTE PTR [rax]
    c10b:	50                   	push   rax
    c10c:	52                   	push   rdx
    c10d:	4f                   	rex.WRXB
    c10e:	42                   	rex.X
    c10f:	45 3a 20             	cmp    r12b,BYTE PTR [r8]
    c112:	57                   	push   rdi
    c113:	68 6f 20 68 61       	push   0x6168206f
    c118:	73 20                	jae    c13a <_IO_stdin_used+0x13a>
    c11a:	25 73 3f 0a 00       	and    eax,0xa3f73
    c11f:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    c122:	4f 54                	rex.WRXB push r12
    c124:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    c128:	50                   	push   rax
    c129:	3a 20                	cmp    ah,BYTE PTR [rax]
    c12b:	57                   	push   rdi
    c12c:	68 6f 20 69 73       	push   0x7369206f
    c131:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    c134:	20 25 73 3f 20 54    	and    BYTE PTR [rip+0x54203f73],ah        # 542100ad <_end+0x540d508d>
    c13a:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    c13c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c13d:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # cbb6 <_IO_stdin_used+0xbb6>
    c143:	00 00                	add    BYTE PTR [rax],al
    c145:	00 00                	add    BYTE PTR [rax],al
    c147:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    c14a:	4f 54                	rex.WRXB push r12
    c14c:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    c150:	50                   	push   rax
    c151:	3a 20                	cmp    ah,BYTE PTR [rax]
    c153:	52                   	push   rdx
    c154:	45 50                	rex.RB push r8
    c156:	4c 59                	rex.WR pop rcx
    c158:	3a 20                	cmp    ah,BYTE PTR [rax]
    c15a:	25 73 20 69 73       	and    eax,0x73692073
    c15f:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    c162:	20 25 73 0a 00 55    	and    BYTE PTR [rip+0x55000a73],ah        # 5500cbdb <_end+0x54ed1bbb>
    c168:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c169:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c16d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c16e:	20 41 52             	and    BYTE PTR [rcx+0x52],al
    c171:	50                   	push   rax
    c172:	20 6f 70             	and    BYTE PTR [rdi+0x70],ch
    c175:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
    c178:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    c17b:	25 64 0a 00 1b       	and    eax,0x1b000a64
    c180:	5b                   	pop    rbx
    c181:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    c184:	4c                   	rex.WR
    c185:	4f                   	rex.WRXB
    c186:	4f 50                	rex.WRXB push r8
    c188:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de201 <_end+0x3e1a31e1>
    c18e:	20 25 73 00 20 52    	and    BYTE PTR [rip+0x52200073],ah        # 5220c207 <_end+0x520d11e7>
    c194:	45 50                	rex.RB push r8
    c196:	4c 59                	rex.WR pop rcx
    c198:	20 00                	and    BYTE PTR [rax],al
    c19a:	20 55 4e             	and    BYTE PTR [rbp+0x4e],dl
    c19d:	4b                   	rex.WXB
    c19e:	4e                   	rex.WRX
    c19f:	4f 57                	rex.WRXB push r15
    c1a1:	4e 20 4c 4f 4f       	rex.WRX and BYTE PTR [rdi+r9*2+0x4f],r9b
    c1a6:	50                   	push   rax
    c1a7:	20 46 55             	and    BYTE PTR [rsi+0x55],al
    c1aa:	4e                   	rex.WRX
    c1ab:	43 54                	rex.XB push r12
    c1ad:	49                   	rex.WB
    c1ae:	4f                   	rex.WRXB
    c1af:	4e 3a 25 64 20 0a 00 	rex.WRX cmp r12b,BYTE PTR [rip+0xa2064]        # ae21a <rules+0x9d17a>
    c1b6:	00 00                	add    BYTE PTR [rax],al
    c1b8:	25 30 32 78 3a       	and    eax,0x3a783230
    c1bd:	25 30 32 78 3a       	and    eax,0x3a783230
    c1c2:	25 30 32 78 3a       	and    eax,0x3a783230
    c1c7:	25 30 32 78 3a       	and    eax,0x3a783230
    c1cc:	25 30 32 78 3a       	and    eax,0x3a783230
    c1d1:	25 30 32 78 00       	and    eax,0x783230
    c1d6:	25 64 2e 25 64       	and    eax,0x64252e64
    c1db:	2e 25 64 2e 25 64    	cs and eax,0x64252e64
    c1e1:	00 00                	add    BYTE PTR [rax],al
    c1e3:	00 00                	add    BYTE PTR [rax],al
    c1e5:	00 00                	add    BYTE PTR [rax],al
    c1e7:	00 25 30 32 78 25    	add    BYTE PTR [rip+0x25783230],ah        # 2578f41d <_end+0x256543fd>
    c1ed:	30 32                	xor    BYTE PTR [rdx],dh
    c1ef:	78 3a                	js     c22b <_IO_stdin_used+0x22b>
    c1f1:	25 30 32 78 25       	and    eax,0x25783230
    c1f6:	30 32                	xor    BYTE PTR [rdx],dh
    c1f8:	78 3a                	js     c234 <_IO_stdin_used+0x234>
    c1fa:	25 30 32 78 25       	and    eax,0x25783230
    c1ff:	30 32                	xor    BYTE PTR [rdx],dh
    c201:	78 3a                	js     c23d <_IO_stdin_used+0x23d>
    c203:	25 30 32 78 25       	and    eax,0x25783230
    c208:	30 32                	xor    BYTE PTR [rdx],dh
    c20a:	78 3a                	js     c246 <_IO_stdin_used+0x246>
    c20c:	25 30 32 78 25       	and    eax,0x25783230
    c211:	30 32                	xor    BYTE PTR [rdx],dh
    c213:	78 3a                	js     c24f <_IO_stdin_used+0x24f>
    c215:	25 30 32 78 25       	and    eax,0x25783230
    c21a:	30 32                	xor    BYTE PTR [rdx],dh
    c21c:	78 3a                	js     c258 <_IO_stdin_used+0x258>
    c21e:	25 30 32 78 25       	and    eax,0x25783230
    c223:	30 32                	xor    BYTE PTR [rdx],dh
    c225:	78 3a                	js     c261 <_IO_stdin_used+0x261>
    c227:	25 30 32 78 25       	and    eax,0x25783230
    c22c:	30 32                	xor    BYTE PTR [rdx],dh
    c22e:	78 00                	js     c230 <_IO_stdin_used+0x230>
    c230:	25 64 2d 25 30       	and    eax,0x30252d64
    c235:	32 64 2d 25          	xor    ah,BYTE PTR [rbp+rbp*1+0x25]
    c239:	30 32                	xor    BYTE PTR [rdx],dh
    c23b:	64 20 25 30 32 64 3a 	and    BYTE PTR fs:[rip+0x3a643230],ah        # 3a64f472 <_end+0x3a514452>
    c242:	25 30 32 64 3a       	and    eax,0x3a643230
    c247:	25 30 32 64 00       	and    eax,0x643230
    c24c:	25 73 3a 20 25       	and    eax,0x25203a73
    c251:	73 0a                	jae    c25d <_IO_stdin_used+0x25d>
    c253:	00 00                	add    BYTE PTR [rax],al
    c255:	00 00                	add    BYTE PTR [rax],al
    c257:	00 25 73 20 46 6f    	add    BYTE PTR [rip+0x6f462073],ah        # 6f46e2d0 <_end+0x6f3332b0>
    c25d:	75 6e                	jne    c2cd <_IO_stdin_used+0x2cd>
    c25f:	64 20 62 6c          	and    BYTE PTR fs:[rdx+0x6c],ah
    c263:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c264:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    c267:	64 20 69 70          	and    BYTE PTR fs:[rcx+0x70],ch
    c26b:	76 34                	jbe    c2a1 <_IO_stdin_used+0x2a1>
    c26d:	20 61 64             	and    BYTE PTR [rcx+0x64],ah
    c270:	64 72 65             	fs jb  c2d8 <_IO_stdin_used+0x2d8>
    c273:	73 73                	jae    c2e8 <_IO_stdin_used+0x2e8>
    c275:	28 64 65 73          	sub    BYTE PTR [rbp+riz*2+0x73],ah
    c279:	74 29                	je     c2a4 <_IO_stdin_used+0x2a4>
    c27b:	3a 20                	cmp    ah,BYTE PTR [rax]
    c27d:	25 73 0a 00 00       	and    eax,0xa73
    c282:	00 00                	add    BYTE PTR [rax],al
    c284:	00 00                	add    BYTE PTR [rax],al
    c286:	00 00                	add    BYTE PTR [rax],al
    c288:	25 73 20 46 6f       	and    eax,0x6f462073
    c28d:	75 6e                	jne    c2fd <_IO_stdin_used+0x2fd>
    c28f:	64 20 62 6c          	and    BYTE PTR fs:[rdx+0x6c],ah
    c293:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c294:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    c297:	64 20 69 70          	and    BYTE PTR fs:[rcx+0x70],ch
    c29b:	76 34                	jbe    c2d1 <_IO_stdin_used+0x2d1>
    c29d:	20 61 64             	and    BYTE PTR [rcx+0x64],ah
    c2a0:	64 72 65             	fs jb  c308 <_IO_stdin_used+0x308>
    c2a3:	73 73                	jae    c318 <_IO_stdin_used+0x318>
    c2a5:	28 73 72             	sub    BYTE PTR [rbx+0x72],dh
    c2a8:	63 29                	movsxd ebp,DWORD PTR [rcx]
    c2aa:	3a 20                	cmp    ah,BYTE PTR [rax]
    c2ac:	25 73 0a 00 1b       	and    eax,0x1b000a73
    c2b1:	5b                   	pop    rbx
    c2b2:	34 6d                	xor    al,0x6d
    c2b4:	00 25 73 46 72 61    	add    BYTE PTR [rip+0x61724673],ah        # 6173092d <_end+0x615f590d>
    c2ba:	67 6d                	ins    DWORD PTR es:[edi],dx
    c2bc:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c2be:	74 65                	je     c325 <_IO_stdin_used+0x325>
    c2c0:	64 20 00             	and    BYTE PTR fs:[rax],al
    c2c3:	1b 5b 30             	sbb    ebx,DWORD PTR [rbx+0x30]
    c2c6:	6d                   	ins    DWORD PTR es:[rdi],dx
    c2c7:	00 25 73 00 20 25    	add    BYTE PTR [rip+0x25200073],ah        # 2520c340 <_end+0x250d1320>
    c2cd:	73 20                	jae    c2ef <_IO_stdin_used+0x2ef>
    c2cf:	2d 3e 20 25 73       	sub    eax,0x7325203e
    c2d4:	25 73 0a 00 49       	and    eax,0x49000a73
    c2d9:	50                   	push   rax
    c2da:	76 34                	jbe    c310 <_IO_stdin_used+0x310>
    c2dc:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de355 <_end+0x3e1a3335>
    c2e2:	20 25 73 20 50 72    	and    BYTE PTR [rip+0x72502073],ah        # 7250e35b <_end+0x723d333b>
    c2e8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c2e9:	74 6f                	je     c35a <_IO_stdin_used+0x35a>
    c2eb:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    c2ee:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    c2f1:	6d                   	ins    DWORD PTR es:[rdi],dx
    c2f2:	62                   	(bad)  
    c2f3:	65 72 20             	gs jb  c316 <_IO_stdin_used+0x316>
    c2f6:	3d 20 25 64 0a       	cmp    eax,0xa642520
    c2fb:	00 00                	add    BYTE PTR [rax],al
    c2fd:	00 00                	add    BYTE PTR [rax],al
    c2ff:	00 1b                	add    BYTE PTR [rbx],bl
    c301:	5b                   	pop    rbx
    c302:	33 35 6d 00 25 73    	xor    esi,DWORD PTR [rip+0x7325006d]        # 7325c375 <_end+0x73121355>
    c308:	00 49 50             	add    BYTE PTR [rcx+0x50],cl
    c30b:	76 36                	jbe    c343 <_IO_stdin_used+0x343>
    c30d:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de386 <_end+0x3e1a3366>
    c313:	20 25 73 0a 00 09    	and    BYTE PTR [rip+0x9000a73],ah        # 900cd8c <_end+0x8ed1d6c>
    c319:	49                   	rex.WB
    c31a:	43                   	rex.XB
    c31b:	4d 50                	rex.WRB push r8
    c31d:	76 36                	jbe    c355 <_IO_stdin_used+0x355>
    c31f:	20 00                	and    BYTE PTR [rax],al
    c321:	20 52 6f             	and    BYTE PTR [rdx+0x6f],dl
    c324:	75 74                	jne    c39a <_IO_stdin_used+0x39a>
    c326:	65 72 20             	gs jb  c349 <_IO_stdin_used+0x349>
    c329:	53                   	push   rbx
    c32a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c32b:	6c                   	ins    BYTE PTR es:[rdi],dx
    c32c:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    c333:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c334:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c335:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    c338:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c339:	6d                   	ins    DWORD PTR es:[rdi],dx
    c33a:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # cdb3 <_IO_stdin_used+0xdb3>
    c340:	4d 75 6c             	rex.WRB jne c3af <_IO_stdin_used+0x3af>
    c343:	74 69                	je     c3ae <_IO_stdin_used+0x3ae>
    c345:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    c348:	74 20                	je     c36a <_IO_stdin_used+0x36a>
    c34a:	4c 69 73 74 65 6e 65 	imul   r14,QWORD PTR [rbx+0x74],0x72656e65
    c351:	72 
    c352:	20 52 65             	and    BYTE PTR [rdx+0x65],dl
    c355:	70 6f                	jo     c3c6 <_IO_stdin_used+0x3c6>
    c357:	72 74                	jb     c3cd <_IO_stdin_used+0x3cd>
    c359:	20 4d 65             	and    BYTE PTR [rbp+0x65],cl
    c35c:	73 73                	jae    c3d1 <_IO_stdin_used+0x3d1>
    c35e:	61                   	(bad)  
    c35f:	67 65 20 76 32       	and    BYTE PTR gs:[esi+0x32],dh
    c364:	00 4d 75             	add    BYTE PTR [rbp+0x75],cl
    c367:	6c                   	ins    BYTE PTR es:[rdi],dx
    c368:	74 69                	je     c3d3 <_IO_stdin_used+0x3d3>
    c36a:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    c36d:	74 20                	je     c38f <_IO_stdin_used+0x38f>
    c36f:	20 4c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],cl
    c373:	74 65                	je     c3da <_IO_stdin_used+0x3da>
    c375:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c376:	65 72 20             	gs jb  c399 <_IO_stdin_used+0x399>
    c379:	51                   	push   rcx
    c37a:	75 65                	jne    c3e1 <_IO_stdin_used+0x3e1>
    c37c:	72 79                	jb     c3f7 <_IO_stdin_used+0x3f7>
    c37e:	00 4e 65             	add    BYTE PTR [rsi+0x65],cl
    c381:	69 67 68 62 6f 72 20 	imul   esp,DWORD PTR [rdi+0x68],0x20726f62
    c388:	53                   	push   rbx
    c389:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c38a:	6c                   	ins    BYTE PTR es:[rdi],dx
    c38b:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    c392:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c393:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c394:	00 1b                	add    BYTE PTR [rbx],bl
    c396:	5b                   	pop    rbx
    c397:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    c39a:	00 00                	add    BYTE PTR [rax],al
    c39c:	00 00                	add    BYTE PTR [rax],al
    c39e:	00 00                	add    BYTE PTR [rax],al
    c3a0:	54                   	push   rsp
    c3a1:	69 6d 65 20 73 74 61 	imul   ebp,DWORD PTR [rbp+0x65],0x61747320
    c3a8:	6d                   	ins    DWORD PTR es:[rdi],dx
    c3a9:	70 20                	jo     c3cb <_IO_stdin_used+0x3cb>
    c3ab:	72 65                	jb     c412 <_IO_stdin_used+0x412>
    c3ad:	71 75                	jno    c424 <_IO_stdin_used+0x424>
    c3af:	65 73 74             	gs jae c426 <_IO_stdin_used+0x426>
    c3b2:	3a 20                	cmp    ah,BYTE PTR [rax]
    c3b4:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    c3b9:	20 25 73 28 63 6f    	and    BYTE PTR [rip+0x6f632873],ah        # 6f63ec32 <_end+0x6f503c12>
    c3bf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c3c0:	66 69 67 20 73 70    	imul   sp,WORD PTR [rdi+0x20],0x7073
    c3c6:	65 63 69 66          	movsxd ebp,DWORD PTR gs:[rcx+0x66]
    c3ca:	69 65 73 20 73 74 72 	imul   esp,DWORD PTR [rbp+0x73],0x72747320
    c3d1:	69 63 74 20 74 69 6d 	imul   esp,DWORD PTR [rbx+0x74],0x6d697420
    c3d8:	65 73 74             	gs jae c44f <_IO_stdin_used+0x44f>
    c3db:	61                   	(bad)  
    c3dc:	6d                   	ins    DWORD PTR es:[rdi],dx
    c3dd:	70 20                	jo     c3ff <_IO_stdin_used+0x3ff>
    c3df:	61                   	(bad)  
    c3e0:	6c                   	ins    BYTE PTR es:[rdi],dx
    c3e1:	65 72 74             	gs jb  c458 <_IO_stdin_used+0x458>
    c3e4:	73 29                	jae    c40f <_IO_stdin_used+0x40f>
    c3e6:	0a 00                	or     al,BYTE PTR [rax]
    c3e8:	50                   	push   rax
    c3e9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c3ea:	73 73                	jae    c45f <_IO_stdin_used+0x45f>
    c3ec:	69 62 6c 65 20 6e 6d 	imul   esp,DWORD PTR [rdx+0x6c],0x6d6e2065
    c3f3:	61                   	(bad)  
    c3f4:	70 20                	jo     c416 <_IO_stdin_used+0x416>
    c3f6:	68 6f 73 74 20       	push   0x2074736f
    c3fb:	61                   	(bad)  
    c3fc:	6c                   	ins    BYTE PTR es:[rdi],dx
    c3fd:	69 76 65 20 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x65686320
    c404:	63 6b 20             	movsxd ebp,DWORD PTR [rbx+0x20]
    c407:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    c40c:	20 25 73 3b 20 6d    	and    BYTE PTR [rip+0x6d203b73],ah        # 6d20ff85 <_end+0x6d0d4f65>
    c412:	61                   	(bad)  
    c413:	74 63                	je     c478 <_IO_stdin_used+0x478>
    c415:	68 65 64 20 49       	push   0x49206465
    c41a:	43                   	rex.XB
    c41b:	4d 50                	rex.WRB push r8
    c41d:	20 45 63             	and    BYTE PTR [rbp+0x63],al
    c420:	68 6f 2c 20 54       	push   0x54202c6f
    c425:	43 50                	rex.XB push r8
    c427:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    c42a:	4e 2c 20             	rex.WRX sub al,0x20
    c42d:	54                   	push   rsp
    c42e:	43 50                	rex.XB push r8
    c430:	20 41 43             	and    BYTE PTR [rcx+0x43],al
    c433:	4b 2c 20             	rex.WXB sub al,0x20
    c436:	61                   	(bad)  
    c437:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c438:	64 20 49 43          	and    BYTE PTR fs:[rcx+0x43],cl
    c43c:	4d 50                	rex.WRB push r8
    c43e:	20 54 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dl
    c442:	65 73 74             	gs jae c4b9 <_IO_stdin_used+0x4b9>
    c445:	61                   	(bad)  
    c446:	6d                   	ins    DWORD PTR es:[rdi],dx
    c447:	70 20                	jo     c469 <_IO_stdin_used+0x469>
    c449:	72 65                	jb     c4b0 <_IO_stdin_used+0x4b0>
    c44b:	71 75                	jno    c4c2 <_IO_stdin_used+0x4c2>
    c44d:	65 73 74             	gs jae c4c4 <_IO_stdin_used+0x4c4>
    c450:	0a 00                	or     al,BYTE PTR [rax]
    c452:	61                   	(bad)  
    c453:	00 00                	add    BYTE PTR [rax],al
    c455:	00 00                	add    BYTE PTR [rax],al
    c457:	00 50 6f             	add    BYTE PTR [rax+0x6f],dl
    c45a:	73 73                	jae    c4cf <_IO_stdin_used+0x4cf>
    c45c:	69 62 6c 65 20 6e 6d 	imul   esp,DWORD PTR [rdx+0x6c],0x6d6e2065
    c463:	61                   	(bad)  
    c464:	70 20                	jo     c486 <_IO_stdin_used+0x486>
    c466:	68 6f 73 74 20       	push   0x2074736f
    c46b:	61                   	(bad)  
    c46c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c46d:	69 76 65 20 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x65686320
    c474:	63 6b 20             	movsxd ebp,DWORD PTR [rbx+0x20]
    c477:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    c47c:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461e4f5 <_end+0x744e34d5>
    c482:	20 25 73 3b 20 6d    	and    BYTE PTR [rip+0x6d203b73],ah        # 6d20fffb <_end+0x6d0d4fdb>
    c488:	61                   	(bad)  
    c489:	74 63                	je     c4ee <_IO_stdin_used+0x4ee>
    c48b:	68 65 64 20 49       	push   0x49206465
    c490:	43                   	rex.XB
    c491:	4d 50                	rex.WRB push r8
    c493:	20 45 63             	and    BYTE PTR [rbp+0x63],al
    c496:	68 6f 2c 20 54       	push   0x54202c6f
    c49b:	43 50                	rex.XB push r8
    c49d:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    c4a0:	4e 2c 20             	rex.WRX sub al,0x20
    c4a3:	54                   	push   rsp
    c4a4:	43 50                	rex.XB push r8
    c4a6:	20 41 43             	and    BYTE PTR [rcx+0x43],al
    c4a9:	4b 2c 20             	rex.WXB sub al,0x20
    c4ac:	61                   	(bad)  
    c4ad:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c4ae:	64 20 49 43          	and    BYTE PTR fs:[rcx+0x43],cl
    c4b2:	4d 50                	rex.WRB push r8
    c4b4:	20 54 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dl
    c4b8:	65 73 74             	gs jae c52f <_IO_stdin_used+0x52f>
    c4bb:	61                   	(bad)  
    c4bc:	6d                   	ins    DWORD PTR es:[rdi],dx
    c4bd:	70 20                	jo     c4df <_IO_stdin_used+0x4df>
    c4bf:	72 65                	jb     c526 <_IO_stdin_used+0x526>
    c4c1:	71 75                	jno    c538 <_IO_stdin_used+0x538>
    c4c3:	65 73 74             	gs jae c53a <_IO_stdin_used+0x53a>
    c4c6:	0a 00                	or     al,BYTE PTR [rax]
    c4c8:	49 50                	rex.WB push r8
    c4ca:	76 34                	jbe    c500 <_IO_stdin_used+0x500>
    c4cc:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de545 <_end+0x3e1a3525>
    c4d2:	20 25 73 0a 00 09    	and    BYTE PTR [rip+0x9000a73],ah        # 900cf4b <_end+0x8ed1f2b>
    c4d8:	49                   	rex.WB
    c4d9:	43                   	rex.XB
    c4da:	4d 50                	rex.WRB push r8
    c4dc:	20 00                	and    BYTE PTR [rax],al
    c4de:	20 65 63             	and    BYTE PTR [rbp+0x63],ah
    c4e1:	68 6f 20 72 65       	push   0x6572206f
    c4e6:	70 6c                	jo     c554 <_IO_stdin_used+0x554>
    c4e8:	79 00                	jns    c4ea <_IO_stdin_used+0x4ea>
    c4ea:	20 64 65 73          	and    BYTE PTR [rbp+riz*2+0x73],ah
    c4ee:	74 69                	je     c559 <_IO_stdin_used+0x559>
    c4f0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c4f1:	61                   	(bad)  
    c4f2:	74 69                	je     c55d <_IO_stdin_used+0x55d>
    c4f4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c4f5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c4f6:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    c4f9:	72 65                	jb     c560 <_IO_stdin_used+0x560>
    c4fb:	61                   	(bad)  
    c4fc:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c4ff:	62                   	(bad)  
    c500:	6c                   	ins    BYTE PTR es:[rdi],dx
    c501:	65 28 00             	sub    BYTE PTR gs:[rax],al
    c504:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    c507:	74 77                	je     c580 <_IO_stdin_used+0x580>
    c509:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c50a:	72 6b                	jb     c577 <_IO_stdin_used+0x577>
    c50c:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c50f:	72 65                	jb     c576 <_IO_stdin_used+0x576>
    c511:	61                   	(bad)  
    c512:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c515:	62                   	(bad)  
    c516:	6c                   	ins    BYTE PTR es:[rdi],dx
    c517:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c51a:	00 20                	add    BYTE PTR [rax],ah
    c51c:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c51e:	73 74                	jae    c594 <_IO_stdin_used+0x594>
    c520:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c523:	72 65                	jb     c58a <_IO_stdin_used+0x58a>
    c525:	61                   	(bad)  
    c526:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c529:	62                   	(bad)  
    c52a:	6c                   	ins    BYTE PTR es:[rdi],dx
    c52b:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c52e:	00 20                	add    BYTE PTR [rax],ah
    c530:	50                   	push   rax
    c531:	72 6f                	jb     c5a2 <_IO_stdin_used+0x5a2>
    c533:	74 6f                	je     c5a4 <_IO_stdin_used+0x5a4>
    c535:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    c538:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c53b:	72 65                	jb     c5a2 <_IO_stdin_used+0x5a2>
    c53d:	61                   	(bad)  
    c53e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c541:	62                   	(bad)  
    c542:	6c                   	ins    BYTE PTR es:[rdi],dx
    c543:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c546:	00 20                	add    BYTE PTR [rax],ah
    c548:	50                   	push   rax
    c549:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c54a:	72 74                	jb     c5c0 <_IO_stdin_used+0x5c0>
    c54c:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c54f:	72 65                	jb     c5b6 <_IO_stdin_used+0x5b6>
    c551:	61                   	(bad)  
    c552:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c555:	62                   	(bad)  
    c556:	6c                   	ins    BYTE PTR es:[rdi],dx
    c557:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c55a:	00 20                	add    BYTE PTR [rax],ah
    c55c:	46 72 61             	rex.RX jb c5c0 <_IO_stdin_used+0x5c0>
    c55f:	67 6d                	ins    DWORD PTR es:[edi],dx
    c561:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c563:	74 61                	je     c5c6 <_IO_stdin_used+0x5c6>
    c565:	74 69                	je     c5d0 <_IO_stdin_used+0x5d0>
    c567:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c568:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c569:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    c56c:	65 64 65 64 20 29    	gs fs gs and BYTE PTR fs:[rcx],ch
    c572:	00 20                	add    BYTE PTR [rax],ah
    c574:	53                   	push   rbx
    c575:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c576:	75 72                	jne    c5ea <_IO_stdin_used+0x5ea>
    c578:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c57b:	52                   	push   rdx
    c57c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c57d:	75 74                	jne    c5f3 <_IO_stdin_used+0x5f3>
    c57f:	65 20 46 61          	and    BYTE PTR gs:[rsi+0x61],al
    c583:	69 6c 65 64 20 29 00 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x2920
    c58a:	00 
    c58b:	00 00                	add    BYTE PTR [rax],al
    c58d:	00 00                	add    BYTE PTR [rax],al
    c58f:	00 20                	add    BYTE PTR [rax],ah
    c591:	44                   	rex.R
    c592:	65 73 74             	gs jae c609 <_IO_stdin_used+0x609>
    c595:	69 6e 61 74 69 6f 6e 	imul   ebp,DWORD PTR [rsi+0x61],0x6e6f6974
    c59c:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    c59f:	74 77                	je     c618 <_IO_stdin_used+0x618>
    c5a1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5a2:	72 6b                	jb     c60f <_IO_stdin_used+0x60f>
    c5a4:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c5a7:	72 65                	jb     c60e <_IO_stdin_used+0x60e>
    c5a9:	61                   	(bad)  
    c5aa:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c5ad:	62                   	(bad)  
    c5ae:	6c                   	ins    BYTE PTR es:[rdi],dx
    c5af:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c5b2:	00 00                	add    BYTE PTR [rax],al
    c5b4:	00 00                	add    BYTE PTR [rax],al
    c5b6:	00 00                	add    BYTE PTR [rax],al
    c5b8:	20 44 65 73          	and    BYTE PTR [rbp+riz*2+0x73],al
    c5bc:	74 69                	je     c627 <_IO_stdin_used+0x627>
    c5be:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c5bf:	61                   	(bad)  
    c5c0:	74 69                	je     c62b <_IO_stdin_used+0x62b>
    c5c2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5c3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c5c4:	20 48 6f             	and    BYTE PTR [rax+0x6f],cl
    c5c7:	73 74                	jae    c63d <_IO_stdin_used+0x63d>
    c5c9:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c5cc:	72 65                	jb     c633 <_IO_stdin_used+0x633>
    c5ce:	61                   	(bad)  
    c5cf:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c5d2:	62                   	(bad)  
    c5d3:	6c                   	ins    BYTE PTR es:[rdi],dx
    c5d4:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c5d7:	00 20                	add    BYTE PTR [rax],ah
    c5d9:	53                   	push   rbx
    c5da:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5db:	75 72                	jne    c64f <_IO_stdin_used+0x64f>
    c5dd:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c5e0:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c5e2:	73 74                	jae    c658 <_IO_stdin_used+0x658>
    c5e4:	20 49 73             	and    BYTE PTR [rcx+0x73],cl
    c5e7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5e8:	6c                   	ins    BYTE PTR es:[rdi],dx
    c5e9:	61                   	(bad)  
    c5ea:	74 65                	je     c651 <_IO_stdin_used+0x651>
    c5ec:	64 20 29             	and    BYTE PTR fs:[rcx],ch
    c5ef:	00 20                	add    BYTE PTR [rax],ah
    c5f1:	4e                   	rex.WRX
    c5f2:	65 74 77             	gs je  c66c <_IO_stdin_used+0x66c>
    c5f5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5f6:	72 6b                	jb     c663 <_IO_stdin_used+0x663>
    c5f8:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    c5fb:	6d                   	ins    DWORD PTR es:[rdi],dx
    c5fc:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    c603:	74 69                	je     c66e <_IO_stdin_used+0x66e>
    c605:	76 65                	jbe    c66c <_IO_stdin_used+0x66c>
    c607:	6c                   	ins    BYTE PTR es:[rdi],dx
    c608:	79 20                	jns    c62a <_IO_stdin_used+0x62a>
    c60a:	50                   	push   rax
    c60b:	72 6f                	jb     c67c <_IO_stdin_used+0x67c>
    c60d:	68 69 62 69 74       	push   0x74696269
    c612:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    c616:	00 00                	add    BYTE PTR [rax],al
    c618:	20 48 6f             	and    BYTE PTR [rax+0x6f],cl
    c61b:	73 74                	jae    c691 <_IO_stdin_used+0x691>
    c61d:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    c620:	6d                   	ins    DWORD PTR es:[rdi],dx
    c621:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    c628:	74 69                	je     c693 <_IO_stdin_used+0x693>
    c62a:	76 65                	jbe    c691 <_IO_stdin_used+0x691>
    c62c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c62d:	79 20                	jns    c64f <_IO_stdin_used+0x64f>
    c62f:	50                   	push   rax
    c630:	72 6f                	jb     c6a1 <_IO_stdin_used+0x6a1>
    c632:	68 69 62 69 74       	push   0x74696269
    c637:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    c63b:	00 00                	add    BYTE PTR [rax],al
    c63d:	00 00                	add    BYTE PTR [rax],al
    c63f:	00 20                	add    BYTE PTR [rax],ah
    c641:	4e                   	rex.WRX
    c642:	65 74 77             	gs je  c6bc <_IO_stdin_used+0x6bc>
    c645:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c646:	72 6b                	jb     c6b3 <_IO_stdin_used+0x6b3>
    c648:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c64b:	72 65                	jb     c6b2 <_IO_stdin_used+0x6b2>
    c64d:	61                   	(bad)  
    c64e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c651:	62                   	(bad)  
    c652:	6c                   	ins    BYTE PTR es:[rdi],dx
    c653:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    c657:	72 20                	jb     c679 <_IO_stdin_used+0x679>
    c659:	54                   	push   rsp
    c65a:	4f 53                	rex.WRXB push r11
    c65c:	20 29                	and    BYTE PTR [rcx],ch
    c65e:	00 20                	add    BYTE PTR [rax],ah
    c660:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c662:	73 74                	jae    c6d8 <_IO_stdin_used+0x6d8>
    c664:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c667:	72 65                	jb     c6ce <_IO_stdin_used+0x6ce>
    c669:	61                   	(bad)  
    c66a:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c66d:	62                   	(bad)  
    c66e:	6c                   	ins    BYTE PTR es:[rdi],dx
    c66f:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    c673:	72 20                	jb     c695 <_IO_stdin_used+0x695>
    c675:	54                   	push   rsp
    c676:	4f 53                	rex.WRXB push r11
    c678:	20 29                	and    BYTE PTR [rcx],ch
    c67a:	00 00                	add    BYTE PTR [rax],al
    c67c:	00 00                	add    BYTE PTR [rax],al
    c67e:	00 00                	add    BYTE PTR [rax],al
    c680:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c683:	6d                   	ins    DWORD PTR es:[rdi],dx
    c684:	6d                   	ins    DWORD PTR es:[rdi],dx
    c685:	75 6e                	jne    c6f5 <_IO_stdin_used+0x6f5>
    c687:	69 63 61 74 69 6f 6e 	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
    c68e:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    c691:	6d                   	ins    DWORD PTR es:[rdi],dx
    c692:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    c699:	74 69                	je     c704 <_IO_stdin_used+0x704>
    c69b:	76 65                	jbe    c702 <_IO_stdin_used+0x702>
    c69d:	6c                   	ins    BYTE PTR es:[rdi],dx
    c69e:	79 20                	jns    c6c0 <_IO_stdin_used+0x6c0>
    c6a0:	50                   	push   rax
    c6a1:	72 6f                	jb     c712 <_IO_stdin_used+0x712>
    c6a3:	68 69 62 69 74       	push   0x74696269
    c6a8:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    c6ac:	00 20                	add    BYTE PTR [rax],ah
    c6ae:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c6b0:	73 74                	jae    c726 <_IO_stdin_used+0x726>
    c6b2:	20 50 72             	and    BYTE PTR [rax+0x72],dl
    c6b5:	65 63 65 64          	movsxd esp,DWORD PTR gs:[rbp+0x64]
    c6b9:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c6bb:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c6be:	56                   	push   rsi
    c6bf:	69 6f 6c 61 74 69 6f 	imul   ebp,DWORD PTR [rdi+0x6c],0x6f697461
    c6c6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c6c7:	20 29                	and    BYTE PTR [rcx],ch
    c6c9:	00 00                	add    BYTE PTR [rax],al
    c6cb:	00 00                	add    BYTE PTR [rax],al
    c6cd:	00 00                	add    BYTE PTR [rax],al
    c6cf:	00 20                	add    BYTE PTR [rax],ah
    c6d1:	50                   	push   rax
    c6d2:	72 65                	jb     c739 <_IO_stdin_used+0x739>
    c6d4:	63 65 64             	movsxd esp,DWORD PTR [rbp+0x64]
    c6d7:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c6d9:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c6dc:	43 75 74             	rex.XB jne c753 <_IO_stdin_used+0x753>
    c6df:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c6e0:	66 66 20 69 6e       	data16 data16 and BYTE PTR [rcx+0x6e],ch
    c6e5:	20 45 66             	and    BYTE PTR [rbp+0x66],al
    c6e8:	66 65 63 74 20 29    	movsxd si,DWORD PTR gs:[rax+riz*1+0x29]
    c6ee:	00 20                	add    BYTE PTR [rax],ah
    c6f0:	55                   	push   rbp
    c6f1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c6f2:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c6f6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c6f7:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c6fa:	64 65 3d 25 64 20 29 	fs gs cmp eax,0x29206425
    c701:	0a 00                	or     al,BYTE PTR [rax]
    c703:	00 00                	add    BYTE PTR [rax],al
    c705:	00 00                	add    BYTE PTR [rax],al
    c707:	00 20                	add    BYTE PTR [rax],ah
    c709:	53                   	push   rbx
    c70a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c70b:	75 72                	jne    c77f <_IO_stdin_used+0x77f>
    c70d:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c710:	51                   	push   rcx
    c711:	75 65                	jne    c778 <_IO_stdin_used+0x778>
    c713:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c714:	63 68 28             	movsxd ebp,DWORD PTR [rax+0x28]
    c717:	20 66 6c             	and    BYTE PTR [rsi+0x6c],ah
    c71a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c71b:	77 20                	ja     c73d <_IO_stdin_used+0x73d>
    c71d:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    c720:	74 72                	je     c794 <_IO_stdin_used+0x794>
    c722:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c723:	6c                   	ins    BYTE PTR es:[rdi],dx
    c724:	20 29                	and    BYTE PTR [rcx],ch
    c726:	00 20                	add    BYTE PTR [rax],ah
    c728:	52                   	push   rdx
    c729:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x28207463
    c730:	20 28 
    c732:	00 20                	add    BYTE PTR [rax],ah
    c734:	52                   	push   rdx
    c735:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c73c:	20 66 
    c73e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c73f:	72 20                	jb     c761 <_IO_stdin_used+0x761>
    c741:	4e                   	rex.WRX
    c742:	65 74 77             	gs je  c7bc <_IO_stdin_used+0x7bc>
    c745:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c746:	72 6b                	jb     c7b3 <_IO_stdin_used+0x7b3>
    c748:	20 29                	and    BYTE PTR [rcx],ch
    c74a:	00 20                	add    BYTE PTR [rax],ah
    c74c:	52                   	push   rdx
    c74d:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c754:	20 66 
    c756:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c757:	72 20                	jb     c779 <_IO_stdin_used+0x779>
    c759:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c75b:	73 74                	jae    c7d1 <_IO_stdin_used+0x7d1>
    c75d:	20 29                	and    BYTE PTR [rcx],ch
    c75f:	00 20                	add    BYTE PTR [rax],ah
    c761:	52                   	push   rdx
    c762:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c769:	20 66 
    c76b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c76c:	72 20                	jb     c78e <_IO_stdin_used+0x78e>
    c76e:	54                   	push   rsp
    c76f:	4f 53                	rex.WRXB push r11
    c771:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    c774:	64 20 4e 65          	and    BYTE PTR fs:[rsi+0x65],cl
    c778:	74 77                	je     c7f1 <_IO_stdin_used+0x7f1>
    c77a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c77b:	72 6b                	jb     c7e8 <_IO_stdin_used+0x7e8>
    c77d:	20 29                	and    BYTE PTR [rcx],ch
    c77f:	00 20                	add    BYTE PTR [rax],ah
    c781:	52                   	push   rdx
    c782:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c789:	20 66 
    c78b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c78c:	72 20                	jb     c7ae <_IO_stdin_used+0x7ae>
    c78e:	54                   	push   rsp
    c78f:	4f 53                	rex.WRXB push r11
    c791:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    c794:	64 20 48 6f          	and    BYTE PTR fs:[rax+0x6f],cl
    c798:	73 74                	jae    c80e <_IO_stdin_used+0x80e>
    c79a:	20 29                	and    BYTE PTR [rcx],ch
    c79c:	00 20                	add    BYTE PTR [rax],ah
    c79e:	65 63 68 6f          	movsxd ebp,DWORD PTR gs:[rax+0x6f]
    c7a2:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    c7a5:	71 75                	jno    c81c <_IO_stdin_used+0x81c>
    c7a7:	65 73 74             	gs jae c81e <_IO_stdin_used+0x81e>
    c7aa:	00 00                	add    BYTE PTR [rax],al
    c7ac:	00 00                	add    BYTE PTR [rax],al
    c7ae:	00 00                	add    BYTE PTR [rax],al
    c7b0:	20 4d 6f             	and    BYTE PTR [rbp+0x6f],cl
    c7b3:	62                   	(bad)  
    c7b4:	69 6c 65 20 49 50 20 	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x41205049
    c7bb:	41 
    c7bc:	64 76 65             	fs jbe c824 <_IO_stdin_used+0x824>
    c7bf:	72 74                	jb     c835 <_IO_stdin_used+0x835>
    c7c1:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    c7c8:	20 28                	and    BYTE PTR [rax],ch
    c7ca:	4e 6f                	rex.WRX outs dx,DWORD PTR ds:[rsi]
    c7cc:	72 6d                	jb     c83b <_IO_stdin_used+0x83b>
    c7ce:	61                   	(bad)  
    c7cf:	6c                   	ins    BYTE PTR es:[rdi],dx
    c7d0:	20 52 6f             	and    BYTE PTR [rdx+0x6f],dl
    c7d3:	75 74                	jne    c849 <_IO_stdin_used+0x849>
    c7d5:	65 72 20             	gs jb  c7f8 <_IO_stdin_used+0x7f8>
    c7d8:	41                   	rex.B
    c7d9:	64 76 65             	fs jbe c841 <_IO_stdin_used+0x841>
    c7dc:	72 74                	jb     c852 <_IO_stdin_used+0x852>
    c7de:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    c7e5:	20 29                	and    BYTE PTR [rcx],ch
    c7e7:	20 29                	and    BYTE PTR [rcx],ch
    c7e9:	0a 20                	or     ah,BYTE PTR [rax]
    c7eb:	00 00                	add    BYTE PTR [rax],al
    c7ed:	00 00                	add    BYTE PTR [rax],al
    c7ef:	00 20                	add    BYTE PTR [rax],ah
    c7f1:	52                   	push   rdx
    c7f2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c7f3:	75 74                	jne    c869 <_IO_stdin_used+0x869>
    c7f5:	65 72 20             	gs jb  c818 <_IO_stdin_used+0x818>
    c7f8:	41                   	rex.B
    c7f9:	64 76 65             	fs jbe c861 <_IO_stdin_used+0x861>
    c7fc:	72 74                	jb     c872 <_IO_stdin_used+0x872>
    c7fe:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    c805:	20 28                	and    BYTE PTR [rax],ch
    c807:	55                   	push   rbp
    c808:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c809:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c80d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c80e:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c811:	64 65 3a 20          	fs cmp ah,BYTE PTR gs:[rax]
    c815:	25 64 20 29 20       	and    eax,0x20292064
    c81a:	29 0a                	sub    DWORD PTR [rdx],ecx
    c81c:	00 20                	add    BYTE PTR [rax],ah
    c81e:	52                   	push   rdx
    c81f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c820:	75 74                	jne    c896 <_IO_stdin_used+0x896>
    c822:	65 72 20             	gs jb  c845 <_IO_stdin_used+0x845>
    c825:	53                   	push   rbx
    c826:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c827:	6c                   	ins    BYTE PTR es:[rdi],dx
    c828:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    c82f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c830:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c831:	20 29                	and    BYTE PTR [rcx],ch
    c833:	00 20                	add    BYTE PTR [rax],ah
    c835:	54                   	push   rsp
    c836:	69 6d 65 20 54 6f 20 	imul   ebp,DWORD PTR [rbp+0x65],0x206f5420
    c83d:	4c 69 76 65 20 65 78 	imul   r14,QWORD PTR [rsi+0x65],0x63786520
    c844:	63 
    c845:	65 65 64 65 64 00 20 	gs gs fs gs add BYTE PTR fs:[rax],ah
    c84c:	28 20                	sub    BYTE PTR [rax],ah
    c84e:	74 74                	je     c8c4 <_IO_stdin_used+0x8c4>
    c850:	6c                   	ins    BYTE PTR es:[rdi],dx
    c851:	20 65 78             	and    BYTE PTR [rbp+0x78],ah
    c854:	63 65 65             	movsxd esp,DWORD PTR [rbp+0x65]
    c857:	64 65 64 20 69 6e    	fs gs and BYTE PTR fs:[rcx+0x6e],ch
    c85d:	20 74 72 61          	and    BYTE PTR [rdx+rsi*2+0x61],dh
    c861:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c862:	73 69                	jae    c8cd <_IO_stdin_used+0x8cd>
    c864:	74 20                	je     c886 <_IO_stdin_used+0x886>
    c866:	29 00                	sub    DWORD PTR [rax],eax
    c868:	20 28                	and    BYTE PTR [rax],ch
    c86a:	20 46 72             	and    BYTE PTR [rsi+0x72],al
    c86d:	61                   	(bad)  
    c86e:	67 6d                	ins    DWORD PTR es:[edi],dx
    c870:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c872:	74 20                	je     c894 <_IO_stdin_used+0x894>
    c874:	52                   	push   rdx
    c875:	65 61                	gs (bad) 
    c877:	73 73                	jae    c8ec <_IO_stdin_used+0x8ec>
    c879:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    c87b:	62                   	(bad)  
    c87c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c87d:	79 20                	jns    c89f <_IO_stdin_used+0x89f>
    c87f:	74 69                	je     c8ea <_IO_stdin_used+0x8ea>
    c881:	6d                   	ins    DWORD PTR es:[rdi],dx
    c882:	65 20 65 78          	and    BYTE PTR gs:[rbp+0x78],ah
    c886:	63 65 65             	movsxd esp,DWORD PTR [rbp+0x65]
    c889:	64 65 64 20 29       	fs gs and BYTE PTR fs:[rcx],ch
    c88e:	00 20                	add    BYTE PTR [rax],ah
    c890:	28 20                	sub    BYTE PTR [rax],ah
    c892:	55                   	push   rbp
    c893:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c894:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c898:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c899:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c89c:	64 65 3a 20          	fs cmp ah,BYTE PTR gs:[rax]
    c8a0:	25 64 29 0a 00       	and    eax,0xa2964
    c8a5:	20 74 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dh
    c8a9:	65 73 74             	gs jae c920 <_IO_stdin_used+0x920>
    c8ac:	61                   	(bad)  
    c8ad:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8ae:	70 20                	jo     c8d0 <_IO_stdin_used+0x8d0>
    c8b0:	72 65                	jb     c917 <_IO_stdin_used+0x917>
    c8b2:	71 75                	jno    c929 <_IO_stdin_used+0x929>
    c8b4:	65 73 74             	gs jae c92b <_IO_stdin_used+0x92b>
    c8b7:	00 20                	add    BYTE PTR [rax],ah
    c8b9:	74 69                	je     c924 <_IO_stdin_used+0x924>
    c8bb:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8bc:	65 73 74             	gs jae c933 <_IO_stdin_used+0x933>
    c8bf:	61                   	(bad)  
    c8c0:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8c1:	70 20                	jo     c8e3 <_IO_stdin_used+0x8e3>
    c8c3:	72 65                	jb     c92a <_IO_stdin_used+0x92a>
    c8c5:	70 6c                	jo     c933 <_IO_stdin_used+0x933>
    c8c7:	79 00                	jns    c8c9 <_IO_stdin_used+0x8c9>
    c8c9:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    c8cc:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c8d0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c8d1:	20 69 63             	and    BYTE PTR [rcx+0x63],ch
    c8d4:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8d5:	70 20                	jo     c8f7 <_IO_stdin_used+0x8f7>
    c8d7:	74 79                	je     c952 <_IO_stdin_used+0x952>
    c8d9:	70 65                	jo     c940 <_IO_stdin_used+0x940>
    c8db:	3d 25 64 00 00       	cmp    eax,0x6425
    c8e0:	7e 77                	jle    c959 <_IO_stdin_used+0x959>
    c8e2:	ff                   	(bad)  
    c8e3:	ff a1 7a ff ff a1    	jmp    QWORD PTR [rcx-0x5e000086]
    c8e9:	7a ff                	jp     c8ea <_IO_stdin_used+0x8ea>
    c8eb:	ff 8f 77 ff ff fc    	dec    DWORD PTR [rdi-0x3000089]
    c8f1:	78 ff                	js     c8f2 <_IO_stdin_used+0x8f2>
    c8f3:	ff 0d 79 ff ff a1    	dec    DWORD PTR [rip+0xffffffffa1ffff79]        # ffffffffa200c872 <_end+0xffffffffa1ed1852>
    c8f9:	7a ff                	jp     c8fa <_IO_stdin_used+0x8fa>
    c8fb:	ff a1 7a ff ff aa    	jmp    QWORD PTR [rcx-0x55000086]
    c901:	79 ff                	jns    c902 <_IO_stdin_used+0x902>
    c903:	ff                   	(bad)  
    c904:	bb 79 ff ff 06       	mov    ebx,0x6ffff79
    c909:	7a ff                	jp     c90a <_IO_stdin_used+0x90a>
    c90b:	ff 17                	call   QWORD PTR [rdi]
    c90d:	7a ff                	jp     c90e <_IO_stdin_used+0x90e>
    c90f:	ff a1 7a ff ff 85    	jmp    QWORD PTR [rcx-0x7a000086]
    c915:	7a ff                	jp     c916 <_IO_stdin_used+0x916>
    c917:	ff 93 7a ff ff 9e    	call   QWORD PTR [rbx-0x61000086]
    c91d:	77 ff                	ja     c91e <_IO_stdin_used+0x91e>
    c91f:	ff af 77 ff ff c0    	jmp    FWORD PTR [rdi-0x3f000089]
    c925:	77 ff                	ja     c926 <_IO_stdin_used+0x926>
    c927:	ff d1                	call   rcx
    c929:	77 ff                	ja     c92a <_IO_stdin_used+0x92a>
    c92b:	ff e2                	jmp    rdx
    c92d:	77 ff                	ja     c92e <_IO_stdin_used+0x92e>
    c92f:	ff f3                	push   rbx
    c931:	77 ff                	ja     c932 <_IO_stdin_used+0x932>
    c933:	ff 04 78             	inc    DWORD PTR [rax+rdi*2]
    c936:	ff                   	(bad)  
    c937:	ff 15 78 ff ff 26    	call   QWORD PTR [rip+0x26ffff78]        # 2700c8b5 <_end+0x26ed1895>
    c93d:	78 ff                	js     c93e <_IO_stdin_used+0x93e>
    c93f:	ff 37                	push   QWORD PTR [rdi]
    c941:	78 ff                	js     c942 <_IO_stdin_used+0x942>
    c943:	ff 45 78             	inc    DWORD PTR [rbp+0x78]
    c946:	ff                   	(bad)  
    c947:	ff 53 78             	call   QWORD PTR [rbx+0x78]
    c94a:	ff                   	(bad)  
    c94b:	ff 61 78             	jmp    QWORD PTR [rcx+0x78]
    c94e:	ff                   	(bad)  
    c94f:	ff 6f 78             	jmp    FWORD PTR [rdi+0x78]
    c952:	ff                   	(bad)  
    c953:	ff                   	(bad)  
    c954:	7d 78                	jge    c9ce <_IO_stdin_used+0x9ce>
    c956:	ff                   	(bad)  
    c957:	ff 8b 78 ff ff 00    	dec    DWORD PTR [rbx+0xffff78]
    c95d:	00 00                	add    BYTE PTR [rax],al
    c95f:	00 1b                	add    BYTE PTR [rbx],bl
    c961:	5b                   	pop    rbx
    c962:	33 32                	xor    esi,DWORD PTR [rdx]
    c964:	6d                   	ins    DWORD PTR es:[rdi],dx
    c965:	00 25 73 00 49 50    	add    BYTE PTR [rip+0x50490073],ah        # 5049c9de <_end+0x503619be>
    c96b:	76 34                	jbe    c9a1 <_IO_stdin_used+0x9a1>
    c96d:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642603e6 <_end+0x641253c6>
    c973:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325e9b7 <_end+0x73123997>
    c979:	3a 25 64 0a 00 09    	cmp    ah,BYTE PTR [rip+0x9000a64]        # 900d3e3 <_end+0x8ed23c3>
    c97f:	54                   	push   rsp
    c980:	43 50                	rex.XB push r8
    c982:	20 5b 00             	and    BYTE PTR [rbx+0x0],bl
    c985:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c988:	33 6d 00             	xor    ebp,DWORD PTR [rbp+0x0]
    c98b:	25 73 20 41 43       	and    eax,0x43412073
    c990:	4b 20 00             	rex.WXB and BYTE PTR [r8],al
    c993:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c996:	37                   	(bad)  
    c997:	6d                   	ins    DWORD PTR es:[rdi],dx
    c998:	00 25 73 20 46 49    	add    BYTE PTR [rip+0x49462073],ah        # 4946ea11 <_end+0x493339f1>
    c99e:	4e 20 00             	rex.WRX and BYTE PTR [rax],r8b
    c9a1:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9a4:	34 6d                	xor    al,0x6d
    c9a6:	00 25 73 20 50 53    	add    BYTE PTR [rip+0x53502073],ah        # 5350ea1f <_end+0x533d39ff>
    c9ac:	48 20 00             	rex.W and BYTE PTR [rax],al
    c9af:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9b2:	31 6d 00             	xor    DWORD PTR [rbp+0x0],ebp
    c9b5:	25 73 20 52 53       	and    eax,0x53522073
    c9ba:	54                   	push   rsp
    c9bb:	20 00                	and    BYTE PTR [rax],al
    c9bd:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9c0:	35 6d 00 25 73       	xor    eax,0x7325006d
    c9c5:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    c9c8:	4e 20 00             	rex.WRX and BYTE PTR [rax],r8b
    c9cb:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9ce:	36 6d                	ss ins DWORD PTR es:[rdi],dx
    c9d0:	00 25 73 20 55 52    	add    BYTE PTR [rip+0x52552073],ah        # 5255ea49 <_end+0x52423a29>
    c9d6:	47 20 00             	rex.RXB and BYTE PTR [r8],r8b
    c9d9:	5d                   	pop    rbp
    c9da:	00 1b                	add    BYTE PTR [rbx],bl
    c9dc:	5b                   	pop    rbx
    c9dd:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    c9e0:	25 73 53 75 73       	and    eax,0x73755373
    c9e5:	70 69                	jo     ca50 <_IO_stdin_used+0xa50>
    c9e7:	63 69 6f             	movsxd ebp,DWORD PTR [rcx+0x6f]
    c9ea:	75 73                	jne    ca5f <_IO_stdin_used+0xa5f>
    c9ec:	20 54 43 50          	and    BYTE PTR [rbx+rax*2+0x50],dl
    c9f0:	20 50 61             	and    BYTE PTR [rax+0x61],dl
    c9f3:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    c9f6:	74 20                	je     ca18 <_IO_stdin_used+0xa18>
    c9f8:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c9fa:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    c9fd:	74 65                	je     ca64 <_IO_stdin_used+0xa64>
    c9ff:	72 65                	jb     ca66 <_IO_stdin_used+0xa66>
    ca01:	64 3a 20             	cmp    ah,BYTE PTR fs:[rax]
    ca04:	25 73 3a 25 64       	and    eax,0x64253a73
    ca09:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325ea4d <_end+0x73123a2d>
    ca0f:	3a 25 64 2c 20 25    	cmp    ah,BYTE PTR [rip+0x25202c64]        # 2520f679 <_end+0x250d4659>
    ca15:	64 20 66 6c          	and    BYTE PTR fs:[rsi+0x6c],ah
    ca19:	61                   	(bad)  
    ca1a:	67 73 25             	addr32 jae ca42 <_IO_stdin_used+0xa42>
    ca1d:	73 0a                	jae    ca29 <_IO_stdin_used+0xa29>
    ca1f:	00 1b                	add    BYTE PTR [rbx],bl
    ca21:	5b                   	pop    rbx
    ca22:	39 36                	cmp    DWORD PTR [rsi],esi
    ca24:	6d                   	ins    DWORD PTR es:[rdi],dx
    ca25:	00 25 73 00 49 50    	add    BYTE PTR [rip+0x50490073],ah        # 5049ca9e <_end+0x50361a7e>
    ca2b:	76 34                	jbe    ca61 <_IO_stdin_used+0xa61>
    ca2d:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642604a6 <_end+0x64125486>
    ca33:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325ea77 <_end+0x73123a57>
    ca39:	3a 25 64 20 55 44    	cmp    ah,BYTE PTR [rip+0x44552064]        # 4455eaa3 <_end+0x44423a83>
    ca3f:	50                   	push   rax
    ca40:	0a 00                	or     al,BYTE PTR [rax]
    ca42:	1b 5b 30             	sbb    ebx,DWORD PTR [rbx+0x30]
    ca45:	6d                   	ins    DWORD PTR es:[rdi],dx
    ca46:	00 00                	add    BYTE PTR [rax],al
    ca48:	49 50                	rex.WB push r8
    ca4a:	76 34                	jbe    ca80 <_IO_stdin_used+0xa80>
    ca4c:	20 49 47             	and    BYTE PTR [rcx+0x47],cl
    ca4f:	4d 50                	rex.WRB push r8
    ca51:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2deaca <_end+0x3e1a3aaa>
    ca57:	20 25 73 20 5b 00    	and    BYTE PTR [rip+0x5b2073],ah        # 5bead0 <_end+0x483ab0>
    ca5d:	20 4d 65             	and    BYTE PTR [rbp+0x65],cl
    ca60:	6d                   	ins    DWORD PTR es:[rdi],dx
    ca61:	62                   	(bad)  
    ca62:	65 72 73             	gs jb  cad8 <_IO_stdin_used+0xad8>
    ca65:	68 69 70 20 51       	push   0x51207069
    ca6a:	75 65                	jne    cad1 <_IO_stdin_used+0xad1>
    ca6c:	72 79                	jb     cae7 <_IO_stdin_used+0xae7>
    ca6e:	20 5d 00             	and    BYTE PTR [rbp+0x0],bl
    ca71:	00 00                	add    BYTE PTR [rax],al
    ca73:	00 00                	add    BYTE PTR [rax],al
    ca75:	00 00                	add    BYTE PTR [rax],al
    ca77:	00 20                	add    BYTE PTR [rax],ah
    ca79:	4d                   	rex.WRB
    ca7a:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    ca7c:	62                   	(bad)  
    ca7d:	65 72 73             	gs jb  caf3 <_IO_stdin_used+0xaf3>
    ca80:	68 69 70 20 52       	push   0x52207069
    ca85:	65 70 6f             	gs jo  caf7 <_IO_stdin_used+0xaf7>
    ca88:	72 74                	jb     cafe <_IO_stdin_used+0xafe>
    ca8a:	20 2f                	and    BYTE PTR [rdi],ch
    ca8c:	20 4a 6f             	and    BYTE PTR [rdx+0x6f],cl
    ca8f:	69 6e 20 67 72 6f 75 	imul   ebp,DWORD PTR [rsi+0x20],0x756f7267
    ca96:	70 20                	jo     cab8 <_IO_stdin_used+0xab8>
    ca98:	25 73 20 66 6f       	and    eax,0x6f662073
    ca9d:	72 20                	jb     cabf <_IO_stdin_used+0xabf>
    ca9f:	61                   	(bad)  
    caa0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    caa1:	79 20                	jns    cac3 <_IO_stdin_used+0xac3>
    caa3:	73 6f                	jae    cb14 <_IO_stdin_used+0xb14>
    caa5:	75 72                	jne    cb19 <_IO_stdin_used+0xb19>
    caa7:	63 65 73             	movsxd esp,DWORD PTR [rbp+0x73]
    caaa:	20 5d 0a             	and    BYTE PTR [rbp+0xa],bl
    caad:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    cab0:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    cab4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cab5:	20 49 47             	and    BYTE PTR [rcx+0x47],cl
    cab8:	4d 50                	rex.WRB push r8
    caba:	20 54 79 70          	and    BYTE PTR [rcx+rdi*2+0x70],dl
    cabe:	65 3d 25 64 20 5d    	gs cmp eax,0x5d206425
    cac4:	0a 00                	or     al,BYTE PTR [rax]
    cac6:	25 64 2d 25 30       	and    eax,0x30252d64
    cacb:	32 64 2d 25          	xor    ah,BYTE PTR [rbp+rbp*1+0x25]
    cacf:	30 32                	xor    BYTE PTR [rdx],dh
    cad1:	64 20 25 30 32 64 3a 	and    BYTE PTR fs:[rip+0x3a643230],ah        # 3a64fd08 <_end+0x3a514ce8>
    cad8:	25 30 32 64 3a       	and    eax,0x3a643230
    cadd:	25 30 32 64 00       	and    eax,0x643230
    cae2:	25 73 20 25 73       	and    eax,0x73252073
    cae7:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2deb60 <_end+0x3e1a3b40>
    caed:	20 25 73 0a 00 25    	and    BYTE PTR [rip+0x25000a73],ah        # 2500d566 <_end+0x24ed2546>
    caf3:	73 20                	jae    cb15 <_IO_stdin_used+0xb15>
    caf5:	25 73 20 25 73       	and    eax,0x73252073
    cafa:	3a 25 64 20 2d 3e    	cmp    ah,BYTE PTR [rip+0x3e2d2064]        # 3e2deb64 <_end+0x3e1a3b44>
    cb00:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64260579 <_end+0x64125559>
    cb06:	0a 00                	or     al,BYTE PTR [rax]
    cb08:	25 73 00 61 00       	and    eax,0x610073
    cb0d:	25 30 32 78 00       	and    eax,0x783230
    cb12:	00 00                	add    BYTE PTR [rax],al
    cb14:	00 00                	add    BYTE PTR [rax],al
    cb16:	00 00                	add    BYTE PTR [rax],al
    cb18:	72 00                	jb     cb1a <_IO_stdin_used+0xb1a>
    cb1a:	00 00                	add    BYTE PTR [rax],al
    cb1c:	00 00                	add    BYTE PTR [rax],al
    cb1e:	00 00                	add    BYTE PTR [rax],al
    cb20:	45 72 72             	rex.RB jb cb95 <_IO_stdin_used+0xb95>
    cb23:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb24:	72 20                	jb     cb46 <_IO_stdin_used+0xb46>
    cb26:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb27:	70 65                	jo     cb8e <_IO_stdin_used+0xb8e>
    cb29:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cb2a:	69 6e 67 20 63 6f 6e 	imul   ebp,DWORD PTR [rsi+0x67],0x6e6f6320
    cb31:	66 69 67 75 72 61    	imul   sp,WORD PTR [rdi+0x75],0x6172
    cb37:	74 69                	je     cba2 <_IO_stdin_used+0xba2>
    cb39:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb3a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cb3b:	20 66 69             	and    BYTE PTR [rsi+0x69],ah
    cb3e:	6c                   	ins    BYTE PTR es:[rdi],dx
    cb3f:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    cb42:	25 73 0a 00 0a       	and    eax,0xa000a73
    cb47:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    cb4a:	72 69                	jb     cbb5 <_IO_stdin_used+0xbb5>
    cb4c:	63 74 5f 69          	movsxd esi,DWORD PTR [rdi+rbx*2+0x69]
    cb50:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
    cb53:	5f                   	pop    rdi
    cb54:	74 69                	je     cbbf <_IO_stdin_used+0xbbf>
    cb56:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb57:	65 73 74             	gs jae cbce <_IO_stdin_used+0xbce>
    cb5a:	61                   	(bad)  
    cb5b:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb5c:	70 5f                	jo     cbbd <_IO_stdin_used+0xbbd>
    cb5e:	72 65                	jb     cbc5 <_IO_stdin_used+0xbc5>
    cb60:	71 3d                	jno    cb9f <_IO_stdin_used+0xb9f>
    cb62:	00 59 45             	add    BYTE PTR [rcx+0x45],bl
    cb65:	53                   	push   rbx
    cb66:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    cb69:	72 69                	jb     cbd4 <_IO_stdin_used+0xbd4>
    cb6b:	63 74 5f 6e          	movsxd esi,DWORD PTR [rdi+rbx*2+0x6e]
    cb6f:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb70:	61                   	(bad)  
    cb71:	70 5f                	jo     cbd2 <_IO_stdin_used+0xbd2>
    cb73:	68 6f 73 74 5f       	push   0x5f74736f
    cb78:	61                   	(bad)  
    cb79:	6c                   	ins    BYTE PTR es:[rdi],dx
    cb7a:	69 76 65 5f 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x6568635f
    cb81:	63 6b 3d             	movsxd ebp,DWORD PTR [rbx+0x3d]
    cb84:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
    cb87:	65 61                	gs (bad) 
    cb89:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cb8a:	5f                   	pop    rdi
    cb8b:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    cb8e:	61                   	(bad)  
    cb8f:	79 5f                	jns    cbf0 <_IO_stdin_used+0xbf0>
    cb91:	69 6e 5f 70 61 63 6b 	imul   ebp,DWORD PTR [rsi+0x5f],0x6b636170
    cb98:	65 74 73             	gs je  cc0e <_IO_stdin_used+0xc0e>
    cb9b:	3d 00 43 6c 65       	cmp    eax,0x656c4300
    cba0:	61                   	(bad)  
    cba1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cba2:	20 64 65 6c          	and    BYTE PTR [rbp+riz*2+0x6c],ah
    cba6:	61                   	(bad)  
    cba7:	79 20                	jns    cbc9 <_IO_stdin_used+0xbc9>
    cba9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbaa:	65 65 64 73 20       	gs gs fs jae cbcf <_IO_stdin_used+0xbcf>
    cbaf:	61                   	(bad)  
    cbb0:	20 76 61             	and    BYTE PTR [rsi+0x61],dh
    cbb3:	6c                   	ins    BYTE PTR es:[rdi],dx
    cbb4:	75 65                	jne    cc1b <_IO_stdin_used+0xc1b>
    cbb6:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
    cbb9:	65 61                	gs (bad) 
    cbbb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbbc:	5f                   	pop    rdi
    cbbd:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    cbc0:	61                   	(bad)  
    cbc1:	79 5f                	jns    cc22 <_IO_stdin_used+0xc22>
    cbc3:	69 6e 5f 6d 73 65 63 	imul   ebp,DWORD PTR [rsi+0x5f],0x6365736d
    cbca:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cbcb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbcc:	64 73 3d             	fs jae cc0c <_IO_stdin_used+0xc0c>
    cbcf:	00 75 73             	add    BYTE PTR [rbp+0x73],dh
    cbd2:	65 5f                	gs pop rdi
    cbd4:	73 71                	jae    cc47 <_IO_stdin_used+0xc47>
    cbd6:	6c                   	ins    BYTE PTR es:[rdi],dx
    cbd7:	69 74 65 3d 00 73 71 	imul   esi,DWORD PTR [rbp+riz*2+0x3d],0x6c717300
    cbde:	6c 
    cbdf:	69 74 65 5f 64 61 74 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x61746164
    cbe6:	61 
    cbe7:	62 61                	(bad)  
    cbe9:	73 65                	jae    cc50 <_IO_stdin_used+0xc50>
    cbeb:	5f                   	pop    rdi
    cbec:	70 61                	jo     cc4f <_IO_stdin_used+0xc4f>
    cbee:	74 68                	je     cc58 <_IO_stdin_used+0xc58>
    cbf0:	3d 00 73 71 6c       	cmp    eax,0x6c717300
    cbf5:	69 74 65 5f 64 61 74 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x61746164
    cbfc:	61 
    cbfd:	62 61                	(bad)  
    cbff:	73 65                	jae    cc66 <_IO_stdin_used+0xc66>
    cc01:	5f                   	pop    rdi
    cc02:	70 61                	jo     cc65 <_IO_stdin_used+0xc65>
    cc04:	74 68                	je     cc6e <_IO_stdin_used+0xc6e>
    cc06:	3a 20                	cmp    ah,BYTE PTR [rax]
    cc08:	25 73 00 69 6e       	and    eax,0x6e690073
    cc0d:	5f                   	pop    rdi
    cc0e:	61                   	(bad)  
    cc0f:	64 61                	fs (bad) 
    cc11:	70 74                	jo     cc87 <_IO_stdin_used+0xc87>
    cc13:	65 72 3d             	gs jb  cc53 <_IO_stdin_used+0xc53>
    cc16:	00 00                	add    BYTE PTR [rax],al
    cc18:	72 75                	jb     cc8f <_IO_stdin_used+0xc8f>
    cc1a:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc1b:	65 5f                	gs pop rdi
    cc1d:	70 61                	jo     cc80 <_IO_stdin_used+0xc80>
    cc1f:	72 73                	jb     cc94 <_IO_stdin_used+0xc94>
    cc21:	65 72 2e             	gs jb  cc52 <_IO_stdin_used+0xc52>
    cc24:	63 3a                	movsxd edi,DWORD PTR [rdx]
    cc26:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    cc29:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc2a:	65 5f                	gs pop rdi
    cc2c:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc2d:	69 62 72 61 72 79 5f 	imul   esp,DWORD PTR [rdx+0x72],0x5f797261
    cc34:	70 61                	jo     cc97 <_IO_stdin_used+0xc97>
    cc36:	72 73                	jb     ccab <_IO_stdin_used+0xcab>
    cc38:	65 72 3a             	gs jb  cc75 <_IO_stdin_used+0xc75>
    cc3b:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    cc3e:	5f                   	pop    rdi
    cc3f:	61                   	(bad)  
    cc40:	64 61                	fs (bad) 
    cc42:	70 74                	jo     ccb8 <_IO_stdin_used+0xcb8>
    cc44:	65 72 3a             	gs jb  cc81 <_IO_stdin_used+0xc81>
    cc47:	20 25 73 00 6f 75    	and    BYTE PTR [rip+0x756f0073],ah        # 756fccc0 <_end+0x755c1ca0>
    cc4d:	74 5f                	je     ccae <_IO_stdin_used+0xcae>
    cc4f:	61                   	(bad)  
    cc50:	64 61                	fs (bad) 
    cc52:	70 74                	jo     ccc8 <_IO_stdin_used+0xcc8>
    cc54:	65 72 3d             	gs jb  cc94 <_IO_stdin_used+0xc94>
    cc57:	00 72 75             	add    BYTE PTR [rdx+0x75],dh
    cc5a:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc5b:	65 5f                	gs pop rdi
    cc5d:	70 61                	jo     ccc0 <_IO_stdin_used+0xcc0>
    cc5f:	72 73                	jb     ccd4 <_IO_stdin_used+0xcd4>
    cc61:	65 72 2e             	gs jb  cc92 <_IO_stdin_used+0xc92>
    cc64:	63 3a                	movsxd edi,DWORD PTR [rdx]
    cc66:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    cc69:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc6a:	65 5f                	gs pop rdi
    cc6c:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc6d:	69 62 72 61 72 79 5f 	imul   esp,DWORD PTR [rdx+0x72],0x5f797261
    cc74:	70 61                	jo     ccd7 <_IO_stdin_used+0xcd7>
    cc76:	72 73                	jb     cceb <_IO_stdin_used+0xceb>
    cc78:	65 72 3a             	gs jb  ccb5 <_IO_stdin_used+0xcb5>
    cc7b:	20 6f 75             	and    BYTE PTR [rdi+0x75],ch
    cc7e:	74 5f                	je     ccdf <_IO_stdin_used+0xcdf>
    cc80:	61                   	(bad)  
    cc81:	64 61                	fs (bad) 
    cc83:	70 74                	jo     ccf9 <_IO_stdin_used+0xcf9>
    cc85:	65 72 3a             	gs jb  ccc2 <_IO_stdin_used+0xcc2>
    cc88:	20 25 73 00 6d 6f    	and    BYTE PTR [rip+0x6f6d0073],ah        # 6f6dcd01 <_end+0x6f5a1ce1>
    cc8e:	64 65 3d 00 6d 6f 64 	fs gs cmp eax,0x646f6d00
    cc95:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    cc98:	25 73 00 52 75       	and    eax,0x75520073
    cc9d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cc9e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cc9f:	69 6e 67 20 69 6e 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206e6920
    cca6:	00 32                	add    BYTE PTR [rdx],dh
    cca8:	00 49 50             	add    BYTE PTR [rcx+0x50],cl
    ccab:	53                   	push   rbx
    ccac:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    ccaf:	64 65 20 61 73       	fs and BYTE PTR gs:[rcx+0x73],ah
    ccb4:	20 70 65             	and    BYTE PTR [rax+0x65],dh
    ccb7:	72 20                	jb     ccd9 <_IO_stdin_used+0xcd9>
    ccb9:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    ccbc:	66 69 67 00 49 44    	imul   sp,WORD PTR [rdi+0x0],0x4449
    ccc2:	53                   	push   rbx
    ccc3:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    ccc6:	64 65 20 61 73       	fs and BYTE PTR gs:[rcx+0x73],ah
    cccb:	20 70 65             	and    BYTE PTR [rax+0x65],dh
    ccce:	72 20                	jb     ccf0 <_IO_stdin_used+0xcf0>
    ccd0:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    ccd3:	66 69 67 00 6c 6f    	imul   sp,WORD PTR [rdi+0x0],0x6f6c
    ccd9:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
    ccdc:	69 70 3d 00 6c 6f 63 	imul   esi,DWORD PTR [rax+0x3d],0x636f6c00
    cce3:	61                   	(bad)  
    cce4:	6c                   	ins    BYTE PTR es:[rdi],dx
    cce5:	5f                   	pop    rdi
    cce6:	69 70 20 61 73 20 70 	imul   esi,DWORD PTR [rax+0x20],0x70207361
    cced:	65 72 20             	gs jb  cd10 <_IO_stdin_used+0xd10>
    ccf0:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    ccf3:	66 69 67 3a 20 25    	imul   sp,WORD PTR [rdi+0x3a],0x2520
    ccf9:	73 00                	jae    ccfb <_IO_stdin_used+0xcfb>
    ccfb:	64 65 66 67 77 3d    	fs gs data16 addr32 ja cd3e <_IO_stdin_used+0xd3e>
    cd01:	00 75 73             	add    BYTE PTR [rbp+0x73],dh
    cd04:	65 5f                	gs pop rdi
    cd06:	73 70                	jae    cd78 <_IO_stdin_used+0xd78>
    cd08:	69 3d 00 56 49 47 49 	imul   edi,DWORD PTR [rip+0x47495600],0x53204c49        # 474a2312 <_end+0x473672f2>
    cd0f:	4c 20 53 
    cd12:	50                   	push   rax
    cd13:	49 20 73 65          	rex.WB and BYTE PTR [r11+0x65],sil
    cd17:	72 76                	jb     cd8f <_IO_stdin_used+0xd8f>
    cd19:	69 63 65 20 61 63 74 	imul   esp,DWORD PTR [rbx+0x65],0x74636120
    cd20:	69 76 65 00 48 4f 4d 	imul   esi,DWORD PTR [rsi+0x65],0x4d4f4800
    cd27:	45 5f                	rex.RB pop r15
    cd29:	4e                   	rex.WRX
    cd2a:	45 54                	rex.RB push r12
    cd2c:	3d 00 48 4f 4d       	cmp    eax,0x4d4f4800
    cd31:	45 5f                	rex.RB pop r15
    cd33:	4e                   	rex.WRX
    cd34:	45 54                	rex.RB push r12
    cd36:	5f                   	pop    rdi
    cd37:	4d                   	rex.WRB
    cd38:	41 53                	push   r11
    cd3a:	4b 3d 00 6c 6f 63    	rex.WXB cmp rax,0x636f6c00
    cd40:	61                   	(bad)  
    cd41:	74 69                	je     cdac <_IO_stdin_used+0xdac>
    cd43:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd44:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd45:	3d 00 65 78 74       	cmp    eax,0x74786500
    cd4a:	65 72 6e             	gs jb  cdbb <_IO_stdin_used+0xdbb>
    cd4d:	61                   	(bad)  
    cd4e:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd4f:	00 53 79             	add    BYTE PTR [rbx+0x79],dl
    cd52:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd53:	74 61                	je     cdb6 <_IO_stdin_used+0xdb6>
    cd55:	78 20                	js     cd77 <_IO_stdin_used+0xd77>
    cd57:	65 72 72             	gs jb  cdcc <_IO_stdin_used+0xdcc>
    cd5a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd5b:	72 20                	jb     cd7d <_IO_stdin_used+0xd7d>
    cd5d:	61                   	(bad)  
    cd5e:	74 20                	je     cd80 <_IO_stdin_used+0xd80>
    cd60:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd61:	69 6e 65 20 25 64 3a 	imul   ebp,DWORD PTR [rsi+0x65],0x3a642520
    cd68:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # d7e1 <_IO_stdin_used+0x17e1>
    cd6e:	00 00                	add    BYTE PTR [rax],al
    cd70:	45 72 72             	rex.RB jb cde5 <_IO_stdin_used+0xde5>
    cd73:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd74:	72 20                	jb     cd96 <_IO_stdin_used+0xd96>
    cd76:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd77:	70 65                	jo     cdde <_IO_stdin_used+0xdde>
    cd79:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd7a:	69 6e 67 20 72 75 6c 	imul   ebp,DWORD PTR [rsi+0x67],0x6c757220
    cd81:	65 20 66 69          	and    BYTE PTR gs:[rsi+0x69],ah
    cd85:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd86:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    cd89:	25 73 2e 20 52       	and    eax,0x52202e73
    cd8e:	65 66 75 73          	gs data16 jne ce05 <_IO_stdin_used+0xe05>
    cd92:	69 6e 67 20 74 6f 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
    cd99:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    cd9c:	74 69                	je     ce07 <_IO_stdin_used+0xe07>
    cd9e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd9f:	75 65                	jne    ce06 <_IO_stdin_used+0xe06>
    cda1:	0a 00                	or     al,BYTE PTR [rax]
    cda3:	50                   	push   rax
    cda4:	61                   	(bad)  
    cda5:	72 73                	jb     ce1a <_IO_stdin_used+0xe1a>
    cda7:	69 6e 67 20 66 69 6c 	imul   ebp,DWORD PTR [rsi+0x67],0x6c696620
    cdae:	65 20 25 73 0a 00 61 	and    BYTE PTR gs:[rip+0x61000a73],ah        # 6100d828 <_end+0x60ed2808>
    cdb5:	6c                   	ins    BYTE PTR es:[rdi],dx
    cdb6:	65 72 74             	gs jb  ce2d <_IO_stdin_used+0xe2d>
    cdb9:	00 46 69             	add    BYTE PTR [rsi+0x69],al
    cdbc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cdbd:	69 73 68 65 64 20 70 	imul   esi,DWORD PTR [rbx+0x68],0x70206465
    cdc4:	61                   	(bad)  
    cdc5:	72 73                	jb     ce3a <_IO_stdin_used+0xe3a>
    cdc7:	69 6e 67 20 25 73 0a 	imul   ebp,DWORD PTR [rsi+0x67],0xa732520
    cdce:	00 00                	add    BYTE PTR [rax],al
    cdd0:	45 72 72             	rex.RB jb ce45 <_IO_stdin_used+0xe45>
    cdd3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cdd4:	72 20                	jb     cdf6 <_IO_stdin_used+0xdf6>
    cdd6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cdd7:	70 65                	jo     ce3e <_IO_stdin_used+0xe3e>
    cdd9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cdda:	69 6e 67 20 25 73 20 	imul   ebp,DWORD PTR [rsi+0x67],0x20732520
    cde1:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    cde3:	72 20                	jb     ce05 <_IO_stdin_used+0xe05>
    cde5:	65 78 70             	gs js  ce58 <_IO_stdin_used+0xe58>
    cde8:	6c                   	ins    BYTE PTR es:[rdi],dx
    cde9:	2f                   	(bad)  
    cdea:	69 6d 70 6c 69 63 69 	imul   ebp,DWORD PTR [rbp+0x70],0x6963696c
    cdf1:	74 20                	je     ce13 <_IO_stdin_used+0xe13>
    cdf3:	64 65 6e             	fs outs dx,BYTE PTR gs:[rsi]
    cdf6:	79 20                	jns    ce18 <_IO_stdin_used+0xe18>
    cdf8:	70 61                	jo     ce5b <_IO_stdin_used+0xe5b>
    cdfa:	72 73                	jb     ce6f <_IO_stdin_used+0xe6f>
    cdfc:	69 6e 67 0a 00 69 70 	imul   ebp,DWORD PTR [rsi+0x67],0x7069000a
    ce03:	76 34                	jbe    ce39 <_IO_stdin_used+0xe39>
    ce05:	00 46 61             	add    BYTE PTR [rsi+0x61],al
    ce08:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    ce0f:	20 
    ce10:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ce11:	70 65                	jo     ce78 <_IO_stdin_used+0xe78>
    ce13:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ce14:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # d88d <_IO_stdin_used+0x188d>
    ce1a:	00 00                	add    BYTE PTR [rax],al
    ce1c:	00 00                	add    BYTE PTR [rax],al
    ce1e:	00 00                	add    BYTE PTR [rax],al
    ce20:	52                   	push   rdx
    ce21:	55                   	push   rbp
    ce22:	4e                   	rex.WRX
    ce23:	4e                   	rex.WRX
    ce24:	49                   	rex.WB
    ce25:	4e                   	rex.WRX
    ce26:	47 20 49 4e          	rex.RXB and BYTE PTR [r9+0x4e],r9b
    ce2a:	20 44 45 4d          	and    BYTE PTR [rbp+rax*2+0x4d],al
    ce2e:	4f                   	rex.WRXB
    ce2f:	4e 53                	rex.WRX push rbx
    ce31:	54                   	push   rsp
    ce32:	52                   	push   rdx
    ce33:	41 54                	push   r12
    ce35:	49                   	rex.WB
    ce36:	4f                   	rex.WRXB
    ce37:	4e 20 4d 4f          	rex.WRX and BYTE PTR [rbp+0x4f],r9b
    ce3b:	44                   	rex.R
    ce3c:	45                   	rex.RB
    ce3d:	2e 20 59 4f          	and    BYTE PTR cs:[rcx+0x4f],bl
    ce41:	55                   	push   rbp
    ce42:	20 48 41             	and    BYTE PTR [rax+0x41],cl
    ce45:	56                   	push   rsi
    ce46:	45 20 31             	and    BYTE PTR [r9],r14b
    ce49:	30 20                	xor    BYTE PTR [rax],ah
    ce4b:	53                   	push   rbx
    ce4c:	45                   	rex.RB
    ce4d:	43                   	rex.XB
    ce4e:	4f                   	rex.WRXB
    ce4f:	4e                   	rex.WRX
    ce50:	44 53                	rex.R push rbx
    ce52:	20 54 4f 20          	and    BYTE PTR [rdi+rcx*2+0x20],dl
    ce56:	41                   	rex.B
    ce57:	42                   	rex.X
    ce58:	4f 52                	rex.WRXB push r10
    ce5a:	54                   	push   rsp
    ce5b:	2e 00 00             	add    BYTE PTR cs:[rax],al
    ce5e:	00 00                	add    BYTE PTR [rax],al
    ce60:	52                   	push   rdx
    ce61:	55                   	push   rbp
    ce62:	4e                   	rex.WRX
    ce63:	4e                   	rex.WRX
    ce64:	49                   	rex.WB
    ce65:	4e                   	rex.WRX
    ce66:	47 20 49 4e          	rex.RXB and BYTE PTR [r9+0x4e],r9b
    ce6a:	20 54 45 53          	and    BYTE PTR [rbp+rax*2+0x53],dl
    ce6e:	54                   	push   rsp
    ce6f:	20 4d 4f             	and    BYTE PTR [rbp+0x4f],cl
    ce72:	44                   	rex.R
    ce73:	45                   	rex.RB
    ce74:	2e 20 59 4f          	and    BYTE PTR cs:[rcx+0x4f],bl
    ce78:	55                   	push   rbp
    ce79:	20 48 41             	and    BYTE PTR [rax+0x41],cl
    ce7c:	56                   	push   rsi
    ce7d:	45 20 31             	and    BYTE PTR [r9],r14b
    ce80:	30 20                	xor    BYTE PTR [rax],ah
    ce82:	53                   	push   rbx
    ce83:	45                   	rex.RB
    ce84:	43                   	rex.XB
    ce85:	4f                   	rex.WRXB
    ce86:	4e                   	rex.WRX
    ce87:	44 53                	rex.R push rbx
    ce89:	20 54 4f 20          	and    BYTE PTR [rdi+rcx*2+0x20],dl
    ce8d:	41                   	rex.B
    ce8e:	42                   	rex.X
    ce8f:	4f 52                	rex.WRXB push r10
    ce91:	54                   	push   rsp
    ce92:	2e 00 55 6e          	add    BYTE PTR cs:[rbp+0x6e],dl
    ce96:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    ce9a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ce9b:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    ce9e:	67 75 6d             	addr32 jne cf0e <_IO_stdin_used+0xf0e>
    cea1:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    cea3:	74 20                	je     cec5 <_IO_stdin_used+0xec5>
    cea5:	2d 25 63 0a 00       	sub    eax,0xa6325
    ceaa:	70 64                	jo     cf10 <_IO_stdin_used+0xf10>
    ceac:	71 68                	jno    cf16 <_IO_stdin_used+0xf16>
    ceae:	74 65                	je     cf15 <_IO_stdin_used+0xf15>
    ceb0:	69 3a 00 2f 65 74    	imul   edi,DWORD PTR [rdx],0x74652f00
    ceb6:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    ceb8:	76 69                	jbe    cf23 <_IO_stdin_used+0xf23>
    ceba:	67 69 6c 2f 64 65 6e 	imul   ebp,DWORD PTR [edi+ebp*1+0x64],0x2e796e65
    cec1:	79 2e 
    cec3:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    cec6:	66 00 46 69          	data16 add BYTE PTR [rsi+0x69],al
    ceca:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cecb:	73 69                	jae    cf36 <_IO_stdin_used+0xf36>
    cecd:	73 68                	jae    cf37 <_IO_stdin_used+0xf37>
    cecf:	65 64 20 6c 6f 61    	gs and BYTE PTR fs:[rdi+rbp*2+0x61],ch
    ced5:	64 69 6e 67 20 65 78 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x70786520
    cedc:	70 
    cedd:	6c                   	ins    BYTE PTR es:[rdi],dx
    cede:	69 63 69 74 20 64 65 	imul   esp,DWORD PTR [rbx+0x69],0x65642074
    cee5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cee6:	79 20                	jns    cf08 <_IO_stdin_used+0xf08>
    cee8:	66 69 6c 65 28 2f 65 	imul   bp,WORD PTR [rbp+riz*2+0x28],0x652f
    ceef:	74 63                	je     cf54 <_IO_stdin_used+0xf54>
    cef1:	2f                   	(bad)  
    cef2:	76 69                	jbe    cf5d <_IO_stdin_used+0xf5d>
    cef4:	67 69 6c 2f 64 65 6e 	imul   ebp,DWORD PTR [edi+ebp*1+0x64],0x2e796e65
    cefb:	79 2e 
    cefd:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    cf00:	66 29 00             	sub    WORD PTR [rax],ax
    cf03:	00 00                	add    BYTE PTR [rax],al
    cf05:	00 00                	add    BYTE PTR [rax],al
    cf07:	00 46 69             	add    BYTE PTR [rsi+0x69],al
    cf0a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cf0b:	69 73 68 65 64 20 6c 	imul   esi,DWORD PTR [rbx+0x68],0x6c206465
    cf12:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cf13:	61                   	(bad)  
    cf14:	64 69 6e 67 20 43 53 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x56534320
    cf1b:	56 
    cf1c:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    cf1f:	70 20                	jo     cf41 <_IO_stdin_used+0xf41>
    cf21:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    cf24:	68 65 00 00 46       	push   0x46000065
    cf29:	61                   	(bad)  
    cf2a:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    cf31:	20 
    cf32:	6c                   	ins    BYTE PTR es:[rdi],dx
    cf33:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cf34:	61                   	(bad)  
    cf35:	64 20 43 53          	and    BYTE PTR fs:[rbx+0x53],al
    cf39:	56                   	push   rsi
    cf3a:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    cf3d:	70 20                	jo     cf5f <_IO_stdin_used+0xf5f>
    cf3f:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    cf42:	68 65 28 6e 6f       	push   0x6f6e2865
    cf47:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cf48:	20 63 72             	and    BYTE PTR [rbx+0x72],ah
    cf4b:	69 74 69 63 61 6c 20 	imul   esi,DWORD PTR [rcx+rbp*2+0x63],0x65206c61
    cf52:	65 
    cf53:	72 72                	jb     cfc7 <_IO_stdin_used+0xfc7>
    cf55:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cf56:	72 29                	jb     cf81 <_IO_stdin_used+0xf81>
    cf58:	00 2f                	add    BYTE PTR [rdi],ch
    cf5a:	65 74 63             	gs je  cfc0 <_IO_stdin_used+0xfc0>
    cf5d:	2f                   	(bad)  
    cf5e:	76 69                	jbe    cfc9 <_IO_stdin_used+0xfc9>
    cf60:	67 69 6c 2f 76 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x76],0x6c696769
    cf67:	69 6c 
    cf69:	2e 63 6f 6e          	movsxd ebp,DWORD PTR cs:[rdi+0x6e]
    cf6d:	66 00 50 61          	data16 add BYTE PTR [rax+0x61],dl
    cf71:	72 73                	jb     cfe6 <_IO_stdin_used+0xfe6>
    cf73:	65 64 20 72 75       	gs and BYTE PTR fs:[rdx+0x75],dh
    cf78:	6c                   	ins    BYTE PTR es:[rdi],dx
    cf79:	65 20 66 69          	and    BYTE PTR gs:[rsi+0x69],ah
    cf7d:	6c                   	ins    BYTE PTR es:[rdi],dx
    cf7e:	65 73 00             	gs jae cf81 <_IO_stdin_used+0xf81>
    cf81:	00 00                	add    BYTE PTR [rax],al
    cf83:	00 00                	add    BYTE PTR [rax],al
    cf85:	00 00                	add    BYTE PTR [rax],al
    cf87:	00 56 49             	add    BYTE PTR [rsi+0x49],dl
    cf8a:	47                   	rex.RXB
    cf8b:	49                   	rex.WB
    cf8c:	4c 20 6c 69 73       	rex.WR and BYTE PTR [rcx+rbp*2+0x73],r13b
    cf91:	74 65                	je     cff8 <_IO_stdin_used+0xff8>
    cf93:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cf94:	69 6e 67 20 6f 6e 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206e6f20
    cf9b:	69 6e 74 65 72 66 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61667265
    cfa2:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    cfa5:	25 73 0a 00 70       	and    eax,0x70000a73
    cfaa:	63 61 70             	movsxd esp,DWORD PTR [rcx+0x70]
    cfad:	5f                   	pop    rdi
    cfae:	6d                   	ins    DWORD PTR es:[rdi],dx
    cfaf:	67 72 20             	addr32 jb cfd2 <_IO_stdin_used+0xfd2>
    cfb2:	69 6e 20 70 63 61 70 	imul   ebp,DWORD PTR [rsi+0x20],0x70616370
    cfb9:	5f                   	pop    rdi
    cfba:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cfbb:	70 65                	jo     d022 <_IO_stdin_used+0x1022>
    cfbd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cfbe:	5f                   	pop    rdi
    cfbf:	6c                   	ins    BYTE PTR es:[rdi],dx
    cfc0:	69 76 65 00 00 00 00 	imul   esi,DWORD PTR [rsi+0x65],0x0
    cfc7:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    cfca:	65 63 72 79          	movsxd esi,DWORD PTR gs:[rdx+0x79]
    cfce:	70 74                	jo     d044 <_IO_stdin_used+0x1044>
    cfd0:	65 64 20 4e 53       	gs and BYTE PTR fs:[rsi+0x53],cl
    cfd5:	48 20 63 6f          	rex.W and BYTE PTR [rbx+0x6f],spl
    cfd9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cfda:	66 69 67 20 73 65    	imul   sp,WORD PTR [rdi+0x20],0x6573
    cfe0:	72 76                	jb     d058 <_IO_stdin_used+0x1058>
    cfe2:	65 72 20             	gs jb  d005 <_IO_stdin_used+0x1005>
    cfe5:	73 74                	jae    d05b <_IO_stdin_used+0x105b>
    cfe7:	61                   	(bad)  
    cfe8:	72 74                	jb     d05e <_IO_stdin_used+0x105e>
    cfea:	65 64 3a 20          	gs cmp ah,BYTE PTR fs:[rax]
    cfee:	31 32                	xor    DWORD PTR [rdx],esi
    cff0:	37                   	(bad)  
    cff1:	2e 30 2e             	xor    BYTE PTR cs:[rsi],ch
    cff4:	30 2e                	xor    BYTE PTR [rsi],ch
    cff6:	31 3a                	xor    DWORD PTR [rdx],edi
    cff8:	36 34 31             	ss xor al,0x31
    cffb:	00 96 9a ff ff d3    	add    BYTE PTR [rsi-0x2c000066],dl
    d001:	9a                   	(bad)  
    d002:	ff                   	(bad)  
    d003:	ff 11                	call   QWORD PTR [rcx]
    d005:	9b                   	fwait
    d006:	ff                   	(bad)  
    d007:	ff 11                	call   QWORD PTR [rcx]
    d009:	9b                   	fwait
    d00a:	ff                   	(bad)  
    d00b:	ff a2 9a ff ff b1    	jmp    QWORD PTR [rdx-0x4e000066]
    d011:	9a                   	(bad)  
    d012:	ff                   	(bad)  
    d013:	ff 11                	call   QWORD PTR [rcx]
    d015:	9b                   	fwait
    d016:	ff                   	(bad)  
    d017:	ff 11                	call   QWORD PTR [rcx]
    d019:	9b                   	fwait
    d01a:	ff                   	(bad)  
    d01b:	ff 11                	call   QWORD PTR [rcx]
    d01d:	9b                   	fwait
    d01e:	ff                   	(bad)  
    d01f:	ff 11                	call   QWORD PTR [rcx]
    d021:	9b                   	fwait
    d022:	ff                   	(bad)  
    d023:	ff 11                	call   QWORD PTR [rcx]
    d025:	9b                   	fwait
    d026:	ff                   	(bad)  
    d027:	ff 11                	call   QWORD PTR [rcx]
    d029:	9b                   	fwait
    d02a:	ff                   	(bad)  
    d02b:	ff c1                	inc    ecx
    d02d:	9a                   	(bad)  
    d02e:	ff                   	(bad)  
    d02f:	ff ca                	dec    edx
    d031:	9a                   	(bad)  
    d032:	ff                   	(bad)  
    d033:	ff 11                	call   QWORD PTR [rcx]
    d035:	9b                   	fwait
    d036:	ff                   	(bad)  
    d037:	ff 11                	call   QWORD PTR [rcx]
    d039:	9b                   	fwait
    d03a:	ff                   	(bad)  
    d03b:	ff f2                	push   rdx
    d03d:	9a                   	(bad)  
    d03e:	ff                   	(bad)  
    d03f:	ff 0a                	dec    DWORD PTR [rdx]
    d041:	43 61                	rex.XB (bad) 
    d043:	75 67                	jne    d0ac <_IO_stdin_used+0x10ac>
    d045:	68 74 20 73 69       	push   0x69732074
    d04a:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    d04c:	61                   	(bad)  
    d04d:	6c                   	ins    BYTE PTR es:[rdi],dx
    d04e:	20 25 64 20 61 74    	and    BYTE PTR [rip+0x74612064],ah        # 7461f0b8 <_end+0x744e4098>
    d054:	20 25 73 2c 20 65    	and    BYTE PTR [rip+0x65202c73],ah        # 6520fccd <_end+0x650d4cad>
    d05a:	78 69                	js     d0c5 <_IO_stdin_used+0x10c5>
    d05c:	74 69                	je     d0c7 <_IO_stdin_used+0x10c7>
    d05e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d05f:	67 2e 2e 2e 0a 00    	cs cs or al,BYTE PTR cs:[eax]
    d065:	00 54 6f 74          	add    BYTE PTR [rdi+rbp*2+0x74],dl
    d069:	61                   	(bad)  
    d06a:	6c                   	ins    BYTE PTR es:[rdi],dx
    d06b:	20 50 61             	and    BYTE PTR [rax+0x61],dl
    d06e:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d071:	74 73                	je     d0e6 <_IO_stdin_used+0x10e6>
    d073:	20 43 61             	and    BYTE PTR [rbx+0x61],al
    d076:	75 67                	jne    d0df <_IO_stdin_used+0x10df>
    d078:	68 74 3a 20 25       	push   0x25203a74
    d07d:	64 0a 00             	or     al,BYTE PTR fs:[rax]
    d080:	53                   	push   rbx
    d081:	74 61                	je     d0e4 <_IO_stdin_used+0x10e4>
    d083:	74 69                	je     d0ee <_IO_stdin_used+0x10ee>
    d085:	73 74                	jae    d0fb <_IO_stdin_used+0x10fb>
    d087:	69 63 73 0a 49 70 20 	imul   esp,DWORD PTR [rbx+0x73],0x2070490a
    d08e:	61                   	(bad)  
    d08f:	64 64 72 65          	fs fs jb d0f8 <_IO_stdin_used+0x10f8>
    d093:	73 73                	jae    d108 <_IO_stdin_used+0x1108>
    d095:	20 20                	and    BYTE PTR [rax],ah
    d097:	20 20                	and    BYTE PTR [rax],ah
    d099:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    d09b:	75 6e                	jne    d10b <_IO_stdin_used+0x110b>
    d09d:	74 0a                	je     d0a9 <_IO_stdin_used+0x10a9>
    d09f:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    d0a4:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    d0a9:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    d0ae:	2d 2d 00 00 00       	sub    eax,0x2d
    d0b3:	00 00                	add    BYTE PTR [rax],al
    d0b5:	00 00                	add    BYTE PTR [rax],al
    d0b7:	00 25 73 0a 09 09    	add    BYTE PTR [rip+0x9090a73],ah        # 909db30 <_end+0x8f62b10>
    d0bd:	74 6f                	je     d12e <_IO_stdin_used+0x112e>
    d0bf:	74 61                	je     d122 <_IO_stdin_used+0x1122>
    d0c1:	6c                   	ins    BYTE PTR es:[rdi],dx
    d0c2:	20 70 61             	and    BYTE PTR [rax+0x61],dh
    d0c5:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d0c8:	74 73                	je     d13d <_IO_stdin_used+0x113d>
    d0ca:	20 3d 20 25 64 0a    	and    BYTE PTR [rip+0xa642520],bh        # a64f5f0 <_end+0xa5145d0>
    d0d0:	09 09                	or     DWORD PTR [rcx],ecx
    d0d2:	74 6f                	je     d143 <_IO_stdin_used+0x1143>
    d0d4:	74 61                	je     d137 <_IO_stdin_used+0x1137>
    d0d6:	6c                   	ins    BYTE PTR es:[rdi],dx
    d0d7:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d0da:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d0db:	74 20                	je     d0fd <_IO_stdin_used+0x10fd>
    d0dd:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0e2:	09 09                	or     DWORD PTR [rcx],ecx
    d0e4:	74 6f                	je     d155 <_IO_stdin_used+0x1155>
    d0e6:	74 61                	je     d149 <_IO_stdin_used+0x1149>
    d0e8:	6c                   	ins    BYTE PTR es:[rdi],dx
    d0e9:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d0ec:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d0ef:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0f4:	09 09                	or     DWORD PTR [rcx],ecx
    d0f6:	54                   	push   rsp
    d0f7:	43 50                	rex.XB push r8
    d0f9:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d0fc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d0fd:	74 20                	je     d11f <_IO_stdin_used+0x111f>
    d0ff:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d104:	09 09                	or     DWORD PTR [rcx],ecx
    d106:	54                   	push   rsp
    d107:	43 50                	rex.XB push r8
    d109:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d10c:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d10f:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d114:	09 09                	or     DWORD PTR [rcx],ecx
    d116:	55                   	push   rbp
    d117:	44 50                	rex.R push rax
    d119:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d11c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d11d:	74 20                	je     d13f <_IO_stdin_used+0x113f>
    d11f:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d124:	09 09                	or     DWORD PTR [rcx],ecx
    d126:	55                   	push   rbp
    d127:	44 50                	rex.R push rax
    d129:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d12c:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d12f:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d134:	09 09                	or     DWORD PTR [rcx],ecx
    d136:	49                   	rex.WB
    d137:	43                   	rex.XB
    d138:	4d 50                	rex.WRB push r8
    d13a:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d13d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d13e:	74 20                	je     d160 <_IO_stdin_used+0x1160>
    d140:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d145:	09 09                	or     DWORD PTR [rcx],ecx
    d147:	49                   	rex.WB
    d148:	43                   	rex.XB
    d149:	4d 50                	rex.WRB push r8
    d14b:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d14e:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d151:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d156:	0a 00                	or     al,BYTE PTR [rax]
    d158:	77 00                	ja     d15a <_IO_stdin_used+0x115a>
    d15a:	2f                   	(bad)  
    d15b:	75 73                	jne    d1d0 <_IO_stdin_used+0x11d0>
    d15d:	72 2f                	jb     d18e <_IO_stdin_used+0x118e>
    d15f:	73 68                	jae    d1c9 <_IO_stdin_used+0x11c9>
    d161:	61                   	(bad)  
    d162:	72 65                	jb     d1c9 <_IO_stdin_used+0x11c9>
    d164:	2f                   	(bad)  
    d165:	76 69                	jbe    d1d0 <_IO_stdin_used+0x11d0>
    d167:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    d16e:	63 61 
    d170:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    d173:	2e 63 73 76          	movsxd esi,DWORD PTR cs:[rbx+0x76]
    d177:	00 43 61             	add    BYTE PTR [rbx+0x61],al
    d17a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d17b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d17c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d17d:	74 20                	je     d19f <_IO_stdin_used+0x119f>
    d17f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d180:	70 65                	jo     d1e7 <_IO_stdin_used+0x11e7>
    d182:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d183:	20 2f                	and    BYTE PTR [rdi],ch
    d185:	75 73                	jne    d1fa <_IO_stdin_used+0x11fa>
    d187:	72 2f                	jb     d1b8 <_IO_stdin_used+0x11b8>
    d189:	73 68                	jae    d1f3 <_IO_stdin_used+0x11f3>
    d18b:	61                   	(bad)  
    d18c:	72 65                	jb     d1f3 <_IO_stdin_used+0x11f3>
    d18e:	2f                   	(bad)  
    d18f:	76 69                	jbe    d1fa <_IO_stdin_used+0x11fa>
    d191:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    d198:	63 61 
    d19a:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    d19d:	2e 63 73 76          	movsxd esi,DWORD PTR cs:[rbx+0x76]
    d1a1:	3a 20                	cmp    ah,BYTE PTR [rax]
    d1a3:	70 72                	jo     d217 <_IO_stdin_used+0x1217>
    d1a5:	69 6e 74 69 6e 67 20 	imul   ebp,DWORD PTR [rsi+0x74],0x20676e69
    d1ac:	61                   	(bad)  
    d1ad:	72 70                	jb     d21f <_IO_stdin_used+0x121f>
    d1af:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    d1b2:	68 65 20 74 6f       	push   0x6f742065
    d1b7:	20 73 63             	and    BYTE PTR [rbx+0x63],dh
    d1ba:	72 65                	jb     d221 <_IO_stdin_used+0x1221>
    d1bc:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d1be:	00 25 73 20 2d 3e    	add    BYTE PTR [rip+0x3e2d2073],ah        # 3e2df237 <_end+0x3e1a4217>
    d1c4:	20 25 73 0a 00 25    	and    BYTE PTR [rip+0x25000a73],ah        # 2500dc3d <_end+0x24ed2c1d>
    d1ca:	73 2c                	jae    d1f8 <_IO_stdin_used+0x11f8>
    d1cc:	25 73 0a 00 31       	and    eax,0x31000a73
    d1d1:	2e 30 2e             	xor    BYTE PTR cs:[rsi],ch
    d1d4:	30 00                	xor    BYTE PTR [rax],al
    d1d6:	00 00                	add    BYTE PTR [rax],al
    d1d8:	56                   	push   rsi
    d1d9:	49                   	rex.WB
    d1da:	47                   	rex.RXB
    d1db:	49                   	rex.WB
    d1dc:	4c 20 55 54          	rex.WR and BYTE PTR [rbp+0x54],r10b
    d1e0:	4d 20 25 73 0a 09 2d 	rex.WRB and BYTE PTR [rip+0x2d090a73],r12b        # 2d09dc5a <_end+0x2cf62c3a>
    d1e7:	64 3a 20             	cmp    ah,BYTE PTR fs:[rax]
    d1ea:	64 65 62             	fs gs (bad) 
    d1ed:	75 67                	jne    d256 <_IO_stdin_used+0x1256>
    d1ef:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    d1f2:	64 65 0a 09          	fs or  cl,BYTE PTR gs:[rcx]
    d1f6:	2d 68 3a 20 64       	sub    eax,0x64203a68
    d1fb:	69 73 70 6c 61 79 20 	imul   esi,DWORD PTR [rbx+0x70],0x2079616c
    d202:	74 68                	je     d26c <_IO_stdin_used+0x126c>
    d204:	69 73 20 6d 65 73 73 	imul   esi,DWORD PTR [rbx+0x20],0x7373656d
    d20b:	61                   	(bad)  
    d20c:	67 65 0a 09          	or     cl,BYTE PTR gs:[ecx]
    d210:	2d 69 20 3c 69       	sub    eax,0x693c2069
    d215:	66 61                	data16 (bad) 
    d217:	63 65 3e             	movsxd esp,DWORD PTR [rbp+0x3e]
    d21a:	3a 20                	cmp    ah,BYTE PTR [rax]
    d21c:	73 65                	jae    d283 <_IO_stdin_used+0x1283>
    d21e:	74 20                	je     d240 <_IO_stdin_used+0x1240>
    d220:	74 68                	je     d28a <_IO_stdin_used+0x128a>
    d222:	65 20 69 6e          	and    BYTE PTR gs:[rcx+0x6e],ch
    d226:	74 65                	je     d28d <_IO_stdin_used+0x128d>
    d228:	72 66                	jb     d290 <_IO_stdin_used+0x1290>
    d22a:	61                   	(bad)  
    d22b:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    d22e:	74 6f                	je     d29f <_IO_stdin_used+0x129f>
    d230:	20 6c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],ch
    d234:	74 65                	je     d29b <_IO_stdin_used+0x129b>
    d236:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d237:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    d23a:	0a 09                	or     cl,BYTE PTR [rcx]
    d23c:	2d 70 20 70 72       	sub    eax,0x72702070
    d241:	69 6e 74 20 70 61 63 	imul   ebp,DWORD PTR [rsi+0x74],0x63617020
    d248:	6b 65 74 73          	imul   esp,DWORD PTR [rbp+0x74],0x73
    d24c:	0a 09                	or     cl,BYTE PTR [rcx]
    d24e:	2d 71 20 65 78       	sub    eax,0x78652071
    d253:	69 74 20 71 75 69 65 	imul   esi,DWORD PTR [rax+riz*1+0x71],0x74656975
    d25a:	74 
    d25b:	6c                   	ins    BYTE PTR es:[rdi],dx
    d25c:	79 0a                	jns    d268 <_IO_stdin_used+0x1268>
    d25e:	00 72 62             	add    BYTE PTR [rdx+0x62],dh
    d261:	00 2f                	add    BYTE PTR [rdi],ch
    d263:	70 72                	jo     d2d7 <_IO_stdin_used+0x12d7>
    d265:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d266:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    d268:	63 70 75             	movsxd esi,DWORD PTR [rax+0x75]
    d26b:	69 6e 66 6f 00 6d 6f 	imul   ebp,DWORD PTR [rsi+0x66],0x6f6d006f
    d272:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    d275:	20 6e 61             	and    BYTE PTR [rsi+0x61],ch
    d278:	6d                   	ins    DWORD PTR es:[rdi],dx
    d279:	65 00 46 6f          	add    BYTE PTR gs:[rsi+0x6f],al
    d27d:	75 6e                	jne    d2ed <_IO_stdin_used+0x12ed>
    d27f:	64 20 25 64 20 63 70 	and    BYTE PTR fs:[rip+0x70632064],ah        # 7063f2ea <_end+0x705042ca>
    d286:	75 73                	jne    d2fb <_IO_stdin_used+0x12fb>
    d288:	3a 0a                	cmp    cl,BYTE PTR [rdx]
    d28a:	25 73 00 00 00       	and    eax,0x73
    d28f:	00 e2                	add    dl,ah
    d291:	96                   	xchg   esi,eax
    d292:	88 e2                	mov    dl,ah
    d294:	96                   	xchg   esi,eax
    d295:	88 e2                	mov    dl,ah
    d297:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d29e:	88 e2                	mov    dl,ah
    d2a0:	96                   	xchg   esi,eax
    d2a1:	88 e2                	mov    dl,ah
    d2a3:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2aa:	88 e2                	mov    dl,ah
    d2ac:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    d2b3:	96                   	xchg   esi,eax
    d2b4:	88 e2                	mov    dl,ah
    d2b6:	96                   	xchg   esi,eax
    d2b7:	88 e2                	mov    dl,ah
    d2b9:	96                   	xchg   esi,eax
    d2ba:	88 e2                	mov    dl,ah
    d2bc:	96                   	xchg   esi,eax
    d2bd:	88 e2                	mov    dl,ah
    d2bf:	96                   	xchg   esi,eax
    d2c0:	88 e2                	mov    dl,ah
    d2c2:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    d2c9:	96                   	xchg   esi,eax
    d2ca:	88 e2                	mov    dl,ah
    d2cc:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2d3:	88 0a                	mov    BYTE PTR [rdx],cl
    d2d5:	e2 96                	loop   d26d <_IO_stdin_used+0x126d>
    d2d7:	88 e2                	mov    dl,ah
    d2d9:	96                   	xchg   esi,eax
    d2da:	88 e2                	mov    dl,ah
    d2dc:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d2e3:	88 e2                	mov    dl,ah
    d2e5:	96                   	xchg   esi,eax
    d2e6:	88 e2                	mov    dl,ah
    d2e8:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2ef:	88 e2                	mov    dl,ah
    d2f1:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2f8:	88 e2                	mov    dl,ah
    d2fa:	80 81 e2 80 81 e2 80 	add    BYTE PTR [rcx-0x1d7e7f1e],0x80
    d301:	81 e2 80 81 e2 80    	and    edx,0x80e28180
    d307:	81 e2 80 81 20 e2    	and    edx,0xe2208180
    d30d:	96                   	xchg   esi,eax
    d30e:	88 e2                	mov    dl,ah
    d310:	96                   	xchg   esi,eax
    d311:	88 e2                	mov    dl,ah
    d313:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d31a:	88 0a                	mov    BYTE PTR [rdx],cl
    d31c:	e2 96                	loop   d2b4 <_IO_stdin_used+0x12b4>
    d31e:	88 e2                	mov    dl,ah
    d320:	96                   	xchg   esi,eax
    d321:	88 e2                	mov    dl,ah
    d323:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d32a:	88 e2                	mov    dl,ah
    d32c:	96                   	xchg   esi,eax
    d32d:	88 e2                	mov    dl,ah
    d32f:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d336:	88 e2                	mov    dl,ah
    d338:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d33f:	88 e2                	mov    dl,ah
    d341:	80 81 20 20 e2 96 88 	add    BYTE PTR [rcx-0x691ddfe0],0x88
    d348:	e2 96                	loop   d2e0 <_IO_stdin_used+0x12e0>
    d34a:	88 e2                	mov    dl,ah
    d34c:	96                   	xchg   esi,eax
    d34d:	88 e2                	mov    dl,ah
    d34f:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d356:	88 e2                	mov    dl,ah
    d358:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d35f:	88 0a                	mov    BYTE PTR [rdx],cl
    d361:	e2 80                	loop   d2e3 <_IO_stdin_used+0x12e3>
    d363:	81 e2 96 88 e2 96    	and    edx,0x96e28896
    d369:	88 e2                	mov    dl,ah
    d36b:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    d372:	96                   	xchg   esi,eax
    d373:	88 e2                	mov    dl,ah
    d375:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    d37c:	88 e2                	mov    dl,ah
    d37e:	96                   	xchg   esi,eax
    d37f:	88 e2                	mov    dl,ah
    d381:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d388:	88 e2                	mov    dl,ah
    d38a:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d391:	88 e2                	mov    dl,ah
    d393:	96                   	xchg   esi,eax
    d394:	88 e2                	mov    dl,ah
    d396:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d39d:	88 e2                	mov    dl,ah
    d39f:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d3a6:	88 0a                	mov    BYTE PTR [rdx],cl
    d3a8:	20 e2                	and    dl,ah
    d3aa:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d3b1:	88 e2                	mov    dl,ah
    d3b3:	96                   	xchg   esi,eax
    d3b4:	88 e2                	mov    dl,ah
    d3b6:	96                   	xchg   esi,eax
    d3b7:	88 e2                	mov    dl,ah
    d3b9:	80 81 e2 80 81 20 e2 	add    BYTE PTR [rcx+0x208180e2],0xe2
    d3c0:	96                   	xchg   esi,eax
    d3c1:	88 e2                	mov    dl,ah
    d3c3:	96                   	xchg   esi,eax
    d3c4:	88 e2                	mov    dl,ah
    d3c6:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    d3cd:	88 e2                	mov    dl,ah
    d3cf:	96                   	xchg   esi,eax
    d3d0:	88 e2                	mov    dl,ah
    d3d2:	96                   	xchg   esi,eax
    d3d3:	88 e2                	mov    dl,ah
    d3d5:	96                   	xchg   esi,eax
    d3d6:	88 e2                	mov    dl,ah
    d3d8:	96                   	xchg   esi,eax
    d3d9:	88 e2                	mov    dl,ah
    d3db:	96                   	xchg   esi,eax
    d3dc:	88 e2                	mov    dl,ah
    d3de:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    d3e5:	88 e2                	mov    dl,ah
    d3e7:	96                   	xchg   esi,eax
    d3e8:	88 e2                	mov    dl,ah
    d3ea:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d3f1:	88 e2                	mov    dl,ah
    d3f3:	96                   	xchg   esi,eax
    d3f4:	88 e2                	mov    dl,ah
    d3f6:	96                   	xchg   esi,eax
    d3f7:	88 e2                	mov    dl,ah
    d3f9:	96                   	xchg   esi,eax
    d3fa:	88 e2                	mov    dl,ah
    d3fc:	96                   	xchg   esi,eax
    d3fd:	88 e2                	mov    dl,ah
    d3ff:	96                   	xchg   esi,eax
    d400:	88 00                	mov    BYTE PTR [rax],al
    d402:	00 00                	add    BYTE PTR [rax],al
    d404:	00 00                	add    BYTE PTR [rax],al
    d406:	00 00                	add    BYTE PTR [rax],al
    d408:	0a 00                	or     al,BYTE PTR [rax]
    d40a:	0d 00 00 00 00       	or     eax,0x0
    d40f:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    d412:	68 5f 73 65 72       	push   0x7265735f
    d417:	76 65                	jbe    d47e <_IO_stdin_used+0x147e>
    d419:	72 2e                	jb     d449 <_IO_stdin_used+0x1449>
    d41b:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d41d:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    d420:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    d427:	20 
    d428:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
    d42b:	61                   	(bad)  
    d42c:	74 65                	je     d493 <_IO_stdin_used+0x1493>
    d42e:	20 73 6f             	and    BYTE PTR [rbx+0x6f],dh
    d431:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d434:	74 00                	je     d436 <_IO_stdin_used+0x1436>
    d436:	00 00                	add    BYTE PTR [rax],al
    d438:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d439:	73 68                	jae    d4a3 <_IO_stdin_used+0x14a3>
    d43b:	5f                   	pop    rdi
    d43c:	73 65                	jae    d4a3 <_IO_stdin_used+0x14a3>
    d43e:	72 76                	jb     d4b6 <_IO_stdin_used+0x14b6>
    d440:	65 72 2e             	gs jb  d471 <_IO_stdin_used+0x1471>
    d443:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d445:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    d448:	69 6c 75 72 65 20 69 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6e692065
    d44f:	6e 
    d450:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d453:	74 73                	je     d4c8 <_IO_stdin_used+0x14c8>
    d455:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d456:	63 6b 6f             	movsxd ebp,DWORD PTR [rbx+0x6f]
    d459:	70 74                	jo     d4cf <_IO_stdin_used+0x14cf>
    d45b:	00 00                	add    BYTE PTR [rax],al
    d45d:	00 00                	add    BYTE PTR [rax],al
    d45f:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    d462:	68 5f 73 65 72       	push   0x7265735f
    d467:	76 65                	jbe    d4ce <_IO_stdin_used+0x14ce>
    d469:	72 2e                	jb     d499 <_IO_stdin_used+0x1499>
    d46b:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d46d:	20 62 69             	and    BYTE PTR [rdx+0x69],ah
    d470:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d471:	64 69 6e 67 20 6f 66 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x20666f20
    d478:	20 
    d479:	73 6f                	jae    d4ea <_IO_stdin_used+0x14ea>
    d47b:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d47e:	74 20                	je     d4a0 <_IO_stdin_used+0x14a0>
    d480:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    d482:	72 20                	jb     d4a4 <_IO_stdin_used+0x14a4>
    d484:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d485:	73 68                	jae    d4ef <_IO_stdin_used+0x14ef>
    d487:	5f                   	pop    rdi
    d488:	66 64 20 66 61       	data16 and BYTE PTR fs:[rsi+0x61],ah
    d48d:	69 6c 65 64 00 00 00 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
    d494:	00 
    d495:	00 00                	add    BYTE PTR [rax],al
    d497:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    d49a:	68 5f 73 65 72       	push   0x7265735f
    d49f:	76 65                	jbe    d506 <_IO_stdin_used+0x1506>
    d4a1:	72 2e                	jb     d4d1 <_IO_stdin_used+0x14d1>
    d4a3:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d4a5:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    d4a8:	69 6c 75 72 65 20 6f 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6e6f2065
    d4af:	6e 
    d4b0:	20 6c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],ch
    d4b4:	74 65                	je     d51b <_IO_stdin_used+0x151b>
    d4b6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d4b7:	69 6e 67 20 66 6f 72 	imul   ebp,DWORD PTR [rsi+0x67],0x726f6620
    d4be:	20 6e 73             	and    BYTE PTR [rsi+0x73],ch
    d4c1:	68 5f 66 64 00       	push   0x64665f
    d4c6:	00 00                	add    BYTE PTR [rax],al
    d4c8:	46 61                	rex.RX (bad) 
    d4ca:	69 6c 75 72 65 20 74 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f742065
    d4d1:	6f 
    d4d2:	20 61 63             	and    BYTE PTR [rcx+0x63],ah
    d4d5:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    d4d8:	74 20                	je     d4fa <_IO_stdin_used+0x14fa>
    d4da:	61                   	(bad)  
    d4db:	20 63 6c             	and    BYTE PTR [rbx+0x6c],ah
    d4de:	69 65 6e 74 20 61 74 	imul   esp,DWORD PTR [rbp+0x6e],0x74612074
    d4e5:	20 25 73 0a 00 30    	and    BYTE PTR [rip+0x30000a73],ah        # 3000df5e <_end+0x2fed2f3e>
    d4eb:	78 25                	js     d512 <_IO_stdin_used+0x1512>
    d4ed:	30 32                	xor    BYTE PTR [rdx],dh
    d4ef:	78 0a                	js     d4fb <_IO_stdin_used+0x14fb>
    d4f1:	00 00                	add    BYTE PTR [rax],al
    d4f3:	00 00                	add    BYTE PTR [rax],al
    d4f5:	00 00                	add    BYTE PTR [rax],al
    d4f7:	00 61 00             	add    BYTE PTR [rcx+0x0],ah
    d4fa:	00 00                	add    BYTE PTR [rax],al
    d4fc:	00 00                	add    BYTE PTR [rax],al
    d4fe:	00 00                	add    BYTE PTR [rax],al
    d500:	42 61                	rex.X (bad) 
    d502:	73 69                	jae    d56d <_IO_stdin_used+0x156d>
    d504:	63 20                	movsxd esp,DWORD PTR [rax]
    d506:	70 6f                	jo     d577 <_IO_stdin_used+0x1577>
    d508:	72 74                	jb     d57e <_IO_stdin_used+0x157e>
    d50a:	73 63                	jae    d56f <_IO_stdin_used+0x156f>
    d50c:	61                   	(bad)  
    d50d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d50e:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d512:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d517:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d51a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d51b:	6d                   	ins    DWORD PTR es:[rdi],dx
    d51c:	20 49 50             	and    BYTE PTR [rcx+0x50],cl
    d51f:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    d522:	64 72 65             	fs jb  d58a <_IO_stdin_used+0x158a>
    d525:	73 73                	jae    d59a <_IO_stdin_used+0x159a>
    d527:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # dfa0 <_IO_stdin_used+0x1fa0>
    d52d:	00 00                	add    BYTE PTR [rax],al
    d52f:	00 50 6f             	add    BYTE PTR [rax+0x6f],dl
    d532:	72 74                	jb     d5a8 <_IO_stdin_used+0x15a8>
    d534:	73 63                	jae    d599 <_IO_stdin_used+0x1599>
    d536:	61                   	(bad)  
    d537:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d538:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d53c:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d541:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d544:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d545:	6d                   	ins    DWORD PTR es:[rdi],dx
    d546:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461f5bf <_end+0x744e459f>
    d54c:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # dfc5 <_IO_stdin_used+0x1fc5>
    d552:	00 00                	add    BYTE PTR [rax],al
    d554:	00 00                	add    BYTE PTR [rax],al
    d556:	00 00                	add    BYTE PTR [rax],al
    d558:	46                   	rex.RX
    d559:	49                   	rex.WB
    d55a:	4e 20 70 6f          	rex.WRX and BYTE PTR [rax+0x6f],r14b
    d55e:	72 74                	jb     d5d4 <_IO_stdin_used+0x15d4>
    d560:	73 63                	jae    d5c5 <_IO_stdin_used+0x15c5>
    d562:	61                   	(bad)  
    d563:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d564:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d568:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d56d:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d570:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d571:	6d                   	ins    DWORD PTR es:[rdi],dx
    d572:	20 49 50             	and    BYTE PTR [rcx+0x50],cl
    d575:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    d578:	64 72 65             	fs jb  d5e0 <_IO_stdin_used+0x15e0>
    d57b:	73 73                	jae    d5f0 <_IO_stdin_used+0x15f0>
    d57d:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # dff6 <_IO_stdin_used+0x1ff6>
    d583:	00 00                	add    BYTE PTR [rax],al
    d585:	00 00                	add    BYTE PTR [rax],al
    d587:	00 46 49             	add    BYTE PTR [rsi+0x49],al
    d58a:	4e 20 70 6f          	rex.WRX and BYTE PTR [rax+0x6f],r14b
    d58e:	72 74                	jb     d604 <_IO_stdin_used+0x1604>
    d590:	73 63                	jae    d5f5 <_IO_stdin_used+0x15f5>
    d592:	61                   	(bad)  
    d593:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d594:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d598:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d59d:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d5a0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d5a1:	6d                   	ins    DWORD PTR es:[rdi],dx
    d5a2:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461f61b <_end+0x744e45fb>
    d5a8:	20 25 73 0a 00 30    	and    BYTE PTR [rip+0x30000a73],ah        # 3000e021 <_end+0x2fed3001>
    d5ae:	2e 30 2e             	xor    BYTE PTR cs:[rsi],ch
    d5b1:	30 2e                	xor    BYTE PTR [rsi],ch
    d5b3:	31 00                	xor    DWORD PTR [rax],eax
    d5b5:	30 2e                	xor    BYTE PTR [rsi],ch
    d5b7:	30 2e                	xor    BYTE PTR [rsi],ch
    d5b9:	30 2e                	xor    BYTE PTR [rsi],ch
    d5bb:	31 00                	xor    DWORD PTR [rax],eax
    d5bd:	00 00                	add    BYTE PTR [rax],al
    d5bf:	00 41 72             	add    BYTE PTR [rcx+0x72],al
    d5c2:	70 20                	jo     d5e4 <_IO_stdin_used+0x15e4>
    d5c4:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d5c6:	74 72                	je     d63a <_IO_stdin_used+0x163a>
    d5c8:	79 20                	jns    d5ea <_IO_stdin_used+0x15ea>
    d5ca:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    d5cd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d5ce:	67 65 64 20 66 6f    	gs and BYTE PTR fs:[esi+0x6f],ah
    d5d4:	72 20                	jb     d5f6 <_IO_stdin_used+0x15f6>
    d5d6:	69 70 20 61 64 64 72 	imul   esi,DWORD PTR [rax+0x20],0x72646461
    d5dd:	65 73 73             	gs jae d653 <_IO_stdin_used+0x1653>
    d5e0:	20 25 73 3a 20 77    	and    BYTE PTR [rip+0x77203a73],ah        # 77211059 <_end+0x770d6039>
    d5e6:	61                   	(bad)  
    d5e7:	73 20                	jae    d609 <_IO_stdin_used+0x1609>
    d5e9:	25 73 20 69 73       	and    eax,0x73692073
    d5ee:	20 6e 6f             	and    BYTE PTR [rsi+0x6f],ch
    d5f1:	77 20                	ja     d613 <_IO_stdin_used+0x1613>
    d5f3:	25 73 00 72 00       	and    eax,0x720073
    d5f8:	2f                   	(bad)  
    d5f9:	75 73                	jne    d66e <_IO_stdin_used+0x166e>
    d5fb:	72 2f                	jb     d62c <_IO_stdin_used+0x162c>
    d5fd:	73 68                	jae    d667 <_IO_stdin_used+0x1667>
    d5ff:	61                   	(bad)  
    d600:	72 65                	jb     d667 <_IO_stdin_used+0x1667>
    d602:	2f                   	(bad)  
    d603:	76 69                	jbe    d66e <_IO_stdin_used+0x166e>
    d605:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    d60c:	63 61 
    d60e:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    d611:	2e 63 73 76          	movsxd esi,DWORD PTR cs:[rbx+0x76]
    d615:	00 00                	add    BYTE PTR [rax],al
    d617:	00 43 6f             	add    BYTE PTR [rbx+0x6f],al
    d61a:	75 6c                	jne    d688 <_IO_stdin_used+0x1688>
    d61c:	64 20 6e 6f          	and    BYTE PTR fs:[rsi+0x6f],ch
    d620:	74 20                	je     d642 <_IO_stdin_used+0x1642>
    d622:	6c                   	ins    BYTE PTR es:[rdi],dx
    d623:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d624:	61                   	(bad)  
    d625:	64 20 61 72          	and    BYTE PTR fs:[rcx+0x72],ah
    d629:	70 20                	jo     d64b <_IO_stdin_used+0x164b>
    d62b:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    d62e:	68 65 20 66 72       	push   0x72662065
    d633:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d634:	6d                   	ins    DWORD PTR es:[rdi],dx
    d635:	20 64 61 74          	and    BYTE PTR [rcx+riz*2+0x74],ah
    d639:	61                   	(bad)  
    d63a:	62 61                	(bad)  
    d63c:	73 65                	jae    d6a3 <_IO_stdin_used+0x16a3>
    d63e:	2c 20                	sub    al,0x20
    d640:	66 69 6c 65 20 6e 6f 	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f6e
    d647:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d648:	65 78 69             	gs js  d6b4 <_IO_stdin_used+0x16b4>
    d64b:	73 74                	jae    d6c1 <_IO_stdin_used+0x16c1>
    d64d:	61                   	(bad)  
    d64e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d64f:	74 00                	je     d651 <_IO_stdin_used+0x1651>
    d651:	0a 00                	or     al,BYTE PTR [rax]
    d653:	2c 00                	sub    al,0x0
    d655:	00 00                	add    BYTE PTR [rax],al
    d657:	00 54 4c 53          	add    BYTE PTR [rsp+rcx*2+0x53],dl
    d65b:	20 31                	and    BYTE PTR [rcx],dh
    d65d:	2e 30 20             	xor    BYTE PTR cs:[rax],ah
    d660:	44                   	rex.R
    d661:	41 54                	push   r12
    d663:	41 3a 20             	cmp    spl,BYTE PTR [r8]
    d666:	00 54 4c 53          	add    BYTE PTR [rsp+rcx*2+0x53],dl
    d66a:	20 31                	and    BYTE PTR [rcx],dh
    d66c:	2e 32 20             	xor    ah,BYTE PTR cs:[rax]
    d66f:	44                   	rex.R
    d670:	41 54                	push   r12
    d672:	41 3a 20             	cmp    spl,BYTE PTR [r8]
    d675:	00 54 4c 53          	add    BYTE PTR [rsp+rcx*2+0x53],dl
    d679:	20 31                	and    BYTE PTR [rcx],dh
    d67b:	2e 33 20             	xor    esp,DWORD PTR cs:[rax]
    d67e:	44                   	rex.R
    d67f:	41 54                	push   r12
    d681:	41 3a 20             	cmp    spl,BYTE PTR [r8]
    d684:	00 43 6c             	add    BYTE PTR [rbx+0x6c],al
    d687:	69 65 6e 74 20 48 65 	imul   esp,DWORD PTR [rbp+0x6e],0x65482074
    d68e:	6c                   	ins    BYTE PTR es:[rdi],dx
    d68f:	6c                   	ins    BYTE PTR es:[rdi],dx
    d690:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d691:	00 53 65             	add    BYTE PTR [rbx+0x65],dl
    d694:	72 76                	jb     d70c <_IO_stdin_used+0x170c>
    d696:	65 72 20             	gs jb  d6b9 <_IO_stdin_used+0x16b9>
    d699:	48                   	rex.W
    d69a:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    d69c:	6c                   	ins    BYTE PTR es:[rdi],dx
    d69d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d69e:	00 4e 65             	add    BYTE PTR [rsi+0x65],cl
    d6a1:	77 20                	ja     d6c3 <_IO_stdin_used+0x16c3>
    d6a3:	53                   	push   rbx
    d6a4:	65 73 73             	gs jae d71a <_IO_stdin_used+0x171a>
    d6a7:	69 6f 6e 20 54 69 63 	imul   ebp,DWORD PTR [rdi+0x6e],0x63695420
    d6ae:	6b 65 74 00          	imul   esp,DWORD PTR [rbp+0x74],0x0
    d6b2:	43                   	rex.XB
    d6b3:	65 72 74             	gs jb  d72a <_IO_stdin_used+0x172a>
    d6b6:	69 66 69 63 61 74 65 	imul   esp,DWORD PTR [rsi+0x69],0x65746163
    d6bd:	00 43 6c             	add    BYTE PTR [rbx+0x6c],al
    d6c0:	69 65 6e 74 20 4b 65 	imul   esp,DWORD PTR [rbp+0x6e],0x654b2074
    d6c7:	78 00                	js     d6c9 <_IO_stdin_used+0x16c9>
    d6c9:	00 00                	add    BYTE PTR [rax],al
    d6cb:	00 7a ab             	add    BYTE PTR [rdx-0x55],bh
    d6ce:	ff                   	(bad)  
    d6cf:	ff                   	(bad)  
    d6d0:	de aa ff ff f7 aa    	fisubr WORD PTR [rdx-0x55080001]
    d6d6:	ff                   	(bad)  
    d6d7:	ff                   	(bad)  
    d6d8:	7a ab                	jp     d685 <_IO_stdin_used+0x1685>
    d6da:	ff                   	(bad)  
    d6db:	ff 18                	call   FWORD PTR [rax]
    d6dd:	ab                   	stos   DWORD PTR es:[rdi],eax
    d6de:	ff                   	(bad)  
    d6df:	ff                   	(bad)  
    d6e0:	7a ab                	jp     d68d <_IO_stdin_used+0x168d>
    d6e2:	ff                   	(bad)  
    d6e3:	ff                   	(bad)  
    d6e4:	7a ab                	jp     d691 <_IO_stdin_used+0x1691>
    d6e6:	ff                   	(bad)  
    d6e7:	ff                   	(bad)  
    d6e8:	7a ab                	jp     d695 <_IO_stdin_used+0x1695>
    d6ea:	ff                   	(bad)  
    d6eb:	ff                   	(bad)  
    d6ec:	7a ab                	jp     d699 <_IO_stdin_used+0x1699>
    d6ee:	ff                   	(bad)  
    d6ef:	ff                   	(bad)  
    d6f0:	7a ab                	jp     d69d <_IO_stdin_used+0x169d>
    d6f2:	ff                   	(bad)  
    d6f3:	ff 5a ab             	call   FWORD PTR [rdx-0x55]
    d6f6:	ff                   	(bad)  
    d6f7:	ff                   	(bad)  
    d6f8:	39 ab ff ff 00 00    	cmp    DWORD PTR [rbx+0xffff],ebp
    d6fe:	00 00                	add    BYTE PTR [rax],al
    d700:	55                   	push   rbp
    d701:	70 64                	jo     d767 <_IO_stdin_used+0x1767>
    d703:	61                   	(bad)  
    d704:	74 69                	je     d76f <_IO_stdin_used+0x176f>
    d706:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d707:	67 20 64 62 00       	and    BYTE PTR [edx+eiz*2+0x0],ah
    d70c:	53                   	push   rbx
    d70d:	51                   	push   rcx
    d70e:	6c                   	ins    BYTE PTR es:[rdi],dx
    d70f:	69 74 65 20 65 72 72 	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x6f727265
    d716:	6f 
    d717:	72 3a                	jb     d753 <_IO_stdin_used+0x1753>
    d719:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # e192 <__GNU_EH_FRAME_HDR+0xd6>
    d71f:	00 49 4e             	add    BYTE PTR [rcx+0x4e],cl
    d722:	53                   	push   rbx
    d723:	45 52                	rex.RB push r10
    d725:	54                   	push   rsp
    d726:	20 49 4e             	and    BYTE PTR [rcx+0x4e],cl
    d729:	54                   	push   rsp
    d72a:	4f 20 61 72          	rex.WRXB and BYTE PTR [r9+0x72],r12b
    d72e:	70 5f                	jo     d78f <_IO_stdin_used+0x178f>
    d730:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    d733:	68 65 20 28 69       	push   0x69282065
    d738:	70 5f                	jo     d799 <_IO_stdin_used+0x1799>
    d73a:	61                   	(bad)  
    d73b:	64 64 72 65          	fs fs jb d7a4 <_IO_stdin_used+0x17a4>
    d73f:	73 73                	jae    d7b4 <_IO_stdin_used+0x17b4>
    d741:	2c 20                	sub    al,0x20
    d743:	6d                   	ins    DWORD PTR es:[rdi],dx
    d744:	61                   	(bad)  
    d745:	63 5f 61             	movsxd ebx,DWORD PTR [rdi+0x61]
    d748:	64 64 72 65          	fs fs jb d7b1 <_IO_stdin_used+0x17b1>
    d74c:	73 73                	jae    d7c1 <_IO_stdin_used+0x17c1>
    d74e:	29 20                	sub    DWORD PTR [rax],esp
    d750:	56                   	push   rsi
    d751:	41                   	rex.B
    d752:	4c 55                	rex.WR push rbp
    d754:	45 53                	rex.RB push r11
    d756:	20 28                	and    BYTE PTR [rax],ch
    d758:	22 25 73 22 2c 20    	and    ah,BYTE PTR [rip+0x202c2273]        # 202cf9d1 <_end+0x201949b1>
    d75e:	22 25 73 22 29 3b    	and    ah,BYTE PTR [rip+0x3b292273]        # 3b29f9d7 <_end+0x3b1649b7>
    d764:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    d767:	4c 69 74 65 20 65 6e 	imul   r14,QWORD PTR [rbp+riz*2+0x20],0x6f636e65
    d76e:	63 6f 
    d770:	75 6e                	jne    d7e0 <_IO_stdin_used+0x17e0>
    d772:	74 65                	je     d7d9 <_IO_stdin_used+0x17d9>
    d774:	72 65                	jb     d7db <_IO_stdin_used+0x17db>
    d776:	64 20 65 72          	and    BYTE PTR fs:[rbp+0x72],ah
    d77a:	72 6f                	jb     d7eb <_IO_stdin_used+0x17eb>
    d77c:	72 3a                	jb     d7b8 <_IO_stdin_used+0x17b8>
    d77e:	20 25 73 0a 00 2f    	and    BYTE PTR [rip+0x2f000a73],ah        # 2f00e1f7 <_end+0x2eed31d7>
    d784:	75 73                	jne    d7f9 <_IO_stdin_used+0x17f9>
    d786:	72 2f                	jb     d7b7 <_IO_stdin_used+0x17b7>
    d788:	73 68                	jae    d7f2 <_IO_stdin_used+0x17f2>
    d78a:	61                   	(bad)  
    d78b:	72 65                	jb     d7f2 <_IO_stdin_used+0x17f2>
    d78d:	2f                   	(bad)  
    d78e:	76 69                	jbe    d7f9 <_IO_stdin_used+0x17f9>
    d790:	67 69 6c 2f 73 70 69 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x642e6970
    d797:	2e 64 
    d799:	62                   	(bad)  
    d79a:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    d79d:	4c 69 74 65 20 65 72 	imul   r14,QWORD PTR [rbp+riz*2+0x20],0x6f727265
    d7a4:	72 6f 
    d7a6:	72 20                	jb     d7c8 <_IO_stdin_used+0x17c8>
    d7a8:	25 73 0a 00 00       	and    eax,0xa73
    d7ad:	00 00                	add    BYTE PTR [rax],al
    d7af:	00 49 4e             	add    BYTE PTR [rcx+0x4e],cl
    d7b2:	53                   	push   rbx
    d7b3:	45 52                	rex.RB push r10
    d7b5:	54                   	push   rsp
    d7b6:	20 49 4e             	and    BYTE PTR [rcx+0x4e],cl
    d7b9:	54                   	push   rsp
    d7ba:	4f 20 73 70          	rex.WRXB and BYTE PTR [r11+0x70],r14b
    d7be:	69 5f 74 61 62 6c 65 	imul   ebx,DWORD PTR [rdi+0x74],0x656c6261
    d7c5:	20 28                	and    BYTE PTR [rax],ch
    d7c7:	73 65                	jae    d82e <_IO_stdin_used+0x182e>
    d7c9:	72 76                	jb     d841 <_IO_stdin_used+0x1841>
    d7cb:	5f                   	pop    rdi
    d7cc:	61                   	(bad)  
    d7cd:	64 64 72 2c          	fs fs jb d7fd <_IO_stdin_used+0x17fd>
    d7d1:	20 63 6c             	and    BYTE PTR [rbx+0x6c],ah
    d7d4:	69 5f 61 64 64 72 2c 	imul   ebx,DWORD PTR [rdi+0x61],0x2c726464
    d7db:	73 65                	jae    d842 <_IO_stdin_used+0x1842>
    d7dd:	72 76                	jb     d855 <_IO_stdin_used+0x1855>
    d7df:	5f                   	pop    rdi
    d7e0:	70 6f                	jo     d851 <_IO_stdin_used+0x1851>
    d7e2:	72 74                	jb     d858 <_IO_stdin_used+0x1858>
    d7e4:	2c 63                	sub    al,0x63
    d7e6:	6c                   	ins    BYTE PTR es:[rdi],dx
    d7e7:	69 5f 70 6f 72 74 2c 	imul   ebx,DWORD PTR [rdi+0x70],0x2c74726f
    d7ee:	73 65                	jae    d855 <_IO_stdin_used+0x1855>
    d7f0:	72 76                	jb     d868 <_IO_stdin_used+0x1868>
    d7f2:	5f                   	pop    rdi
    d7f3:	70 6b                	jo     d860 <_IO_stdin_used+0x1860>
    d7f5:	74 5f                	je     d856 <_IO_stdin_used+0x1856>
    d7f7:	73 65                	jae    d85e <_IO_stdin_used+0x185e>
    d7f9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d7fa:	74 2c                	je     d828 <_IO_stdin_used+0x1828>
    d7fc:	63 6c 69 5f          	movsxd ebp,DWORD PTR [rcx+rbp*2+0x5f]
    d800:	70 6b                	jo     d86d <_IO_stdin_used+0x186d>
    d802:	74 5f                	je     d863 <_IO_stdin_used+0x1863>
    d804:	73 65                	jae    d86b <_IO_stdin_used+0x186b>
    d806:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d807:	74 2c                	je     d835 <_IO_stdin_used+0x1835>
    d809:	73 65                	jae    d870 <_IO_stdin_used+0x1870>
    d80b:	72 76                	jb     d883 <_IO_stdin_used+0x1883>
    d80d:	5f                   	pop    rdi
    d80e:	70 6b                	jo     d87b <_IO_stdin_used+0x187b>
    d810:	74 5f                	je     d871 <_IO_stdin_used+0x1871>
    d812:	72 65                	jb     d879 <_IO_stdin_used+0x1879>
    d814:	63 76 2c             	movsxd esi,DWORD PTR [rsi+0x2c]
    d817:	63 6c 69 5f          	movsxd ebp,DWORD PTR [rcx+rbp*2+0x5f]
    d81b:	70 6b                	jo     d888 <_IO_stdin_used+0x1888>
    d81d:	74 5f                	je     d87e <_IO_stdin_used+0x187e>
    d81f:	72 65                	jb     d886 <_IO_stdin_used+0x1886>
    d821:	63 76 2c             	movsxd esi,DWORD PTR [rsi+0x2c]
    d824:	70 72                	jo     d898 <_IO_stdin_used+0x1898>
    d826:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d827:	74 6f                	je     d898 <_IO_stdin_used+0x1898>
    d829:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    d82c:	2c 61                	sub    al,0x61
    d82e:	76 67                	jbe    d897 <_IO_stdin_used+0x1897>
    d830:	5f                   	pop    rdi
    d831:	70 70                	jo     d8a3 <_IO_stdin_used+0x18a3>
    d833:	73 2c                	jae    d861 <_IO_stdin_used+0x1861>
    d835:	73 74                	jae    d8ab <_IO_stdin_used+0x18ab>
    d837:	61                   	(bad)  
    d838:	72 74                	jb     d8ae <_IO_stdin_used+0x18ae>
    d83a:	5f                   	pop    rdi
    d83b:	74 69                	je     d8a6 <_IO_stdin_used+0x18a6>
    d83d:	6d                   	ins    DWORD PTR es:[rdi],dx
    d83e:	65 2c 65             	gs sub al,0x65
    d841:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d842:	64 5f                	fs pop rdi
    d844:	74 69                	je     d8af <_IO_stdin_used+0x18af>
    d846:	6d                   	ins    DWORD PTR es:[rdi],dx
    d847:	65 2c 64             	gs sub al,0x64
    d84a:	61                   	(bad)  
    d84b:	74 61                	je     d8ae <_IO_stdin_used+0x18ae>
    d84d:	5f                   	pop    rdi
    d84e:	70 6b                	jo     d8bb <_IO_stdin_used+0x18bb>
    d850:	74 73                	je     d8c5 <_IO_stdin_used+0x18c5>
    d852:	2c 63                	sub    al,0x63
    d854:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d855:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d856:	74 72                	je     d8ca <_IO_stdin_used+0x18ca>
    d858:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d859:	6c                   	ins    BYTE PTR es:[rdi],dx
    d85a:	5f                   	pop    rdi
    d85b:	70 6b                	jo     d8c8 <_IO_stdin_used+0x18c8>
    d85d:	74 73                	je     d8d2 <_IO_stdin_used+0x18d2>
    d85f:	29 20                	sub    DWORD PTR [rax],esp
    d861:	56                   	push   rsi
    d862:	41                   	rex.B
    d863:	4c 55                	rex.WR push rbp
    d865:	45 53                	rex.RB push r11
    d867:	20 28                	and    BYTE PTR [rax],ch
    d869:	22 25 73 22 2c 22    	and    ah,BYTE PTR [rip+0x222c2273]        # 222cfae2 <_end+0x22194ac2>
    d86f:	25 73 22 2c 25       	and    eax,0x252c2273
    d874:	6c                   	ins    BYTE PTR es:[rdi],dx
    d875:	64 2c 25             	fs sub al,0x25
    d878:	6c                   	ins    BYTE PTR es:[rdi],dx
    d879:	64 2c 25             	fs sub al,0x25
    d87c:	64 2c 25             	fs sub al,0x25
    d87f:	64 2c 25             	fs sub al,0x25
    d882:	64 2c 25             	fs sub al,0x25
    d885:	64 2c 25             	fs sub al,0x25
    d888:	64 2c 25             	fs sub al,0x25
    d88b:	64 2c 25             	fs sub al,0x25
    d88e:	6c                   	ins    BYTE PTR es:[rdi],dx
    d88f:	64 2c 25             	fs sub al,0x25
    d892:	6c                   	ins    BYTE PTR es:[rdi],dx
    d893:	64 2c 25             	fs sub al,0x25
    d896:	64 2c 25             	fs sub al,0x25
    d899:	64 29 3b             	sub    DWORD PTR fs:[rbx],edi
    d89c:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    d89f:	4c                   	rex.WR
    d8a0:	49 54                	rex.WB push r12
    d8a2:	45 20 45 6e          	and    BYTE PTR [r13+0x6e],r8b
    d8a6:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    d8a9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d8aa:	74 65                	je     d911 <_IO_stdin_used+0x1911>
    d8ac:	72 65                	jb     d913 <_IO_stdin_used+0x1913>
    d8ae:	64 20 65 72          	and    BYTE PTR fs:[rbp+0x72],ah
    d8b2:	72 6f                	jb     d923 <_IO_stdin_used+0x1923>
    d8b4:	72 3a                	jb     d8f0 <_IO_stdin_used+0x18f0>
    d8b6:	20 25 73 0a 00 53    	and    BYTE PTR [rip+0x53000a73],ah        # 5300e32f <_end+0x52ed330f>
    d8bc:	74 72                	je     d930 <_IO_stdin_used+0x1930>
    d8be:	6c                   	ins    BYTE PTR es:[rdi],dx
    d8bf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d8c0:	63 20                	movsxd esp,DWORD PTR [rax]
    d8c2:	73 75                	jae    d939 <_IO_stdin_used+0x1939>
    d8c4:	63 63 65             	movsxd esp,DWORD PTR [rbx+0x65]
    d8c7:	73 73                	jae    d93c <_IO_stdin_used+0x193c>
    d8c9:	66 75 6c             	data16 jne d938 <_IO_stdin_used+0x1938>
    d8cc:	00 51 75             	add    BYTE PTR [rcx+0x75],dl
    d8cf:	65 72 79             	gs jb  d94b <_IO_stdin_used+0x194b>
    d8d2:	3a 20                	cmp    ah,BYTE PTR [rax]
    d8d4:	25 73 0a 00 4c       	and    eax,0x4c000a73
    d8d9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d8da:	67 69 6e 20 69 6e 63 	imul   ebp,DWORD PTR [esi+0x20],0x6f636e69
    d8e1:	6f 
    d8e2:	72 72                	jb     d956 <_IO_stdin_used+0x1956>
    d8e4:	65 63 74 00 6c       	movsxd esi,DWORD PTR gs:[rax+rax*1+0x6c]
    d8e9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d8ea:	67 69 6e 20 69 6e 63 	imul   ebp,DWORD PTR [esi+0x20],0x6f636e69
    d8f1:	6f 
    d8f2:	72 72                	jb     d966 <_IO_stdin_used+0x1966>
    d8f4:	65 63 74 00 50       	movsxd esi,DWORD PTR gs:[rax+rax*1+0x50]
    d8f9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d8fa:	73 73                	jae    d96f <_IO_stdin_used+0x196f>
    d8fc:	69 62 6c 65 20 46 54 	imul   esp,DWORD PTR [rdx+0x6c],0x54462065
    d903:	50                   	push   rax
    d904:	20 62 72             	and    BYTE PTR [rdx+0x72],ah
    d907:	75 74                	jne    d97d <_IO_stdin_used+0x197d>
    d909:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    d90d:	72 63                	jb     d972 <_IO_stdin_used+0x1972>
    d90f:	65 20 61 74          	and    BYTE PTR gs:[rcx+0x74],ah
    d913:	74 65                	je     d97a <_IO_stdin_used+0x197a>
    d915:	6d                   	ins    DWORD PTR es:[rdi],dx
    d916:	70 74                	jo     d98c <_IO_stdin_used+0x198c>
    d918:	3a 20                	cmp    ah,BYTE PTR [rax]
    d91a:	25 73 28 73 75       	and    eax,0x75732873
    d91f:	73 70                	jae    d991 <_IO_stdin_used+0x1991>
    d921:	65 63 74 29 20       	movsxd esi,DWORD PTR gs:[rcx+rbp*1+0x20]
    d926:	2d 3e 20 25 73       	sub    eax,0x7325203e
    d92b:	2e 20 25 64 20 66 61 	and    BYTE PTR cs:[rip+0x61662064],ah        # 6166f996 <_end+0x61534976>
    d932:	69 6c 65 64 20 6c 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x676f6c20
    d939:	67 
    d93a:	69 6e 73 0a 00 00 53 	imul   ebp,DWORD PTR [rsi+0x73],0x5300000a
    d941:	50                   	push   rax
    d942:	49 20 54 41 42       	rex.WB and BYTE PTR [r9+rax*2+0x42],dl
    d947:	4c                   	rex.WR
    d948:	45 20 52 45          	and    BYTE PTR [r10+0x45],r10b
    d94c:	54                   	push   rsp
    d94d:	52                   	push   rdx
    d94e:	41                   	rex.B
    d94f:	4e 53                	rex.WRX push rbx
    d951:	3a 20                	cmp    ah,BYTE PTR [rax]
    d953:	25 64 3a 20 25       	and    eax,0x25203a64
    d958:	73 3a                	jae    d994 <_IO_stdin_used+0x1994>
    d95a:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    d95f:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642613d8 <_end+0x641263b8>
    d965:	0a 00                	or     al,BYTE PTR [rax]
    d967:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d96a:	49 20 4e 45          	rex.WB and BYTE PTR [r14+0x45],cl
    d96e:	57                   	push   rdi
    d96f:	20 43 4f             	and    BYTE PTR [rbx+0x4f],al
    d972:	4e 56                	rex.WRX push rsi
    d974:	3a 20                	cmp    ah,BYTE PTR [rax]
    d976:	25 64 3a 20 25       	and    eax,0x25203a64
    d97b:	73 3a                	jae    d9b7 <_IO_stdin_used+0x19b7>
    d97d:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    d982:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642613fb <_end+0x641263db>
    d988:	0a 00                	or     al,BYTE PTR [rax]
    d98a:	00 00                	add    BYTE PTR [rax],al
    d98c:	00 00                	add    BYTE PTR [rax],al
    d98e:	00 00                	add    BYTE PTR [rax],al
    d990:	53                   	push   rbx
    d991:	50                   	push   rax
    d992:	49 20 54 57 48       	rex.WB and BYTE PTR [r15+rdx*2+0x48],dl
    d997:	20 32                	and    BYTE PTR [rdx],dh
    d999:	2f                   	(bad)  
    d99a:	33 3a                	xor    edi,DWORD PTR [rdx]
    d99c:	20 25 64 3a 20 25    	and    BYTE PTR [rip+0x25203a64],ah        # 25211406 <_end+0x250d63e6>
    d9a2:	73 3a                	jae    d9de <_IO_stdin_used+0x19de>
    d9a4:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    d9a9:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64261422 <_end+0x64126402>
    d9af:	0a 00                	or     al,BYTE PTR [rax]
    d9b1:	00 00                	add    BYTE PTR [rax],al
    d9b3:	00 00                	add    BYTE PTR [rax],al
    d9b5:	00 00                	add    BYTE PTR [rax],al
    d9b7:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d9ba:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d9be:	54                   	push   rsp
    d9bf:	52                   	push   rdx
    d9c0:	59                   	pop    rcx
    d9c1:	3a 20                	cmp    ah,BYTE PTR [rax]
    d9c3:	25 64 3a 20 53       	and    eax,0x53203a64
    d9c8:	45 53                	rex.RB push r11
    d9ca:	53                   	push   rbx
    d9cb:	49                   	rex.WB
    d9cc:	4f                   	rex.WRXB
    d9cd:	4e 20 45 53          	rex.WRX and BYTE PTR [rbp+0x53],r8b
    d9d1:	54                   	push   rsp
    d9d2:	3a 20                	cmp    ah,BYTE PTR [rax]
    d9d4:	25 73 3a 25 64       	and    eax,0x64253a73
    d9d9:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fa1d <_end+0x731249fd>
    d9df:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e449 <__GNU_EH_FRAME_HDR+0x38d>
    d9e5:	00 00                	add    BYTE PTR [rax],al
    d9e7:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d9ea:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d9ee:	54                   	push   rsp
    d9ef:	52                   	push   rdx
    d9f0:	59                   	pop    rcx
    d9f1:	3a 20                	cmp    ah,BYTE PTR [rax]
    d9f3:	25 64 3a 20 50       	and    eax,0x50203a64
    d9f8:	4f                   	rex.WRXB
    d9f9:	4c                   	rex.WR
    d9fa:	49 54                	rex.WB push r12
    d9fc:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    da00:	4e 56                	rex.WRX push rsi
    da02:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    da05:	44 20 33             	and    BYTE PTR [rbx],r14b
    da08:	2f                   	(bad)  
    da09:	33 3a                	xor    edi,DWORD PTR [rdx]
    da0b:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64261484 <_end+0x64126464>
    da11:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fa55 <_end+0x73124a35>
    da17:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e481 <__GNU_EH_FRAME_HDR+0x3c5>
    da1d:	00 00                	add    BYTE PTR [rax],al
    da1f:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    da22:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    da26:	54                   	push   rsp
    da27:	52                   	push   rdx
    da28:	59                   	pop    rcx
    da29:	3a 20                	cmp    ah,BYTE PTR [rax]
    da2b:	25 64 3a 20 50       	and    eax,0x50203a64
    da30:	4f                   	rex.WRXB
    da31:	4c                   	rex.WR
    da32:	49 54                	rex.WB push r12
    da34:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    da38:	4e 56                	rex.WRX push rsi
    da3a:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    da3d:	44 20 32             	and    BYTE PTR [rdx],r14b
    da40:	2f                   	(bad)  
    da41:	33 3a                	xor    edi,DWORD PTR [rdx]
    da43:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642614bc <_end+0x6412649c>
    da49:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fa8d <_end+0x73124a6d>
    da4f:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e4b9 <__GNU_EH_FRAME_HDR+0x3fd>
    da55:	00 00                	add    BYTE PTR [rax],al
    da57:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    da5a:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    da5e:	54                   	push   rsp
    da5f:	52                   	push   rdx
    da60:	59                   	pop    rcx
    da61:	3a 20                	cmp    ah,BYTE PTR [rax]
    da63:	25 64 3a 20 50       	and    eax,0x50203a64
    da68:	4f                   	rex.WRXB
    da69:	4c                   	rex.WR
    da6a:	49 54                	rex.WB push r12
    da6c:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    da70:	4e 56                	rex.WRX push rsi
    da72:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    da75:	44 20 31             	and    BYTE PTR [rcx],r14b
    da78:	2f                   	(bad)  
    da79:	33 3a                	xor    edi,DWORD PTR [rdx]
    da7b:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642614f4 <_end+0x641264d4>
    da81:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fac5 <_end+0x73124aa5>
    da87:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e4f1 <__GNU_EH_FRAME_HDR+0x435>
    da8d:	00 00                	add    BYTE PTR [rax],al
    da8f:	00 61 00             	add    BYTE PTR [rcx+0x0],ah
    da92:	00 00                	add    BYTE PTR [rax],al
    da94:	00 00                	add    BYTE PTR [rax],al
    da96:	00 00                	add    BYTE PTR [rax],al
    da98:	43 52                	rex.XB push r10
    da9a:	49 54                	rex.WB push r12
    da9c:	49                   	rex.WB
    da9d:	43                   	rex.XB
    da9e:	41                   	rex.B
    da9f:	4c 20 46 41          	rex.WR and BYTE PTR [rsi+0x41],r8b
    daa3:	49                   	rex.WB
    daa4:	4c                   	rex.WR
    daa5:	45                   	rex.RB
    daa6:	44 20 54 4f 20       	and    BYTE PTR [rdi+rcx*2+0x20],r10b
    daab:	4f 50                	rex.WRXB push r8
    daad:	45                   	rex.RB
    daae:	4e 20 46 49          	rex.WRX and BYTE PTR [rsi+0x49],r8b
    dab2:	4c                   	rex.WR
    dab3:	45 20 46 4f          	and    BYTE PTR [r14+0x4f],r8b
    dab7:	52                   	push   rdx
    dab8:	20 4c 4f 47          	and    BYTE PTR [rdi+rcx*2+0x47],cl
    dabc:	47                   	rex.RXB
    dabd:	49                   	rex.WB
    dabe:	4e                   	rex.WRX
    dabf:	47 3a 20             	rex.RXB cmp r12b,BYTE PTR [r8]
    dac2:	25 73 0a 00 25       	and    eax,0x25000a73
    dac7:	73 20                	jae    dae9 <_IO_stdin_used+0x1ae9>
    dac9:	25 73 20 25 73       	and    eax,0x73252073
    dace:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fb12 <_end+0x73124af2>
    dad4:	0a 00                	or     al,BYTE PTR [rax]
    dad6:	25 73 20 25 73       	and    eax,0x73252073
    dadb:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64261554 <_end+0x64126534>
    dae1:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fb25 <_end+0x73124b05>
    dae7:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e551 <__GNU_EH_FRAME_HDR+0x495>
    daed:	00 00                	add    BYTE PTR [rax],al
    daef:	00 61 6e             	add    BYTE PTR [rcx+0x6e],ah
    daf2:	79 00                	jns    daf4 <_IO_stdin_used+0x1af4>
    daf4:	41                   	rex.B
    daf5:	4e 59                	rex.WRX pop rcx
    daf7:	00 49 43             	add    BYTE PTR [rcx+0x43],cl
    dafa:	4d 50                	rex.WRB push r8
    dafc:	00 54 43 50          	add    BYTE PTR [rbx+rax*2+0x50],dl
    db00:	00 55 44             	add    BYTE PTR [rbp+0x44],dl
    db03:	50                   	push   rax
    db04:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    db07:	72 5f                	jb     db68 <_IO_stdin_used+0x1b68>
    db09:	6d                   	ins    DWORD PTR es:[rdi],dx
    db0a:	61                   	(bad)  
    db0b:	74 63                	je     db70 <_IO_stdin_used+0x1b70>
    db0d:	68 00 6e 6f 6e       	push   0x6e6f6e00
    db12:	65 00 70 63          	add    BYTE PTR gs:[rax+0x63],dh
    db16:	72 65                	jb     db7d <_IO_stdin_used+0x1b7d>
    db18:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    db1b:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    db1f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db20:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    db23:	6c                   	ins    BYTE PTR es:[rdi],dx
    db24:	65 20 74 79 70       	and    BYTE PTR gs:[rcx+rdi*2+0x70],dh
    db29:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    db2c:	25 73 0a 00 3b       	and    eax,0x3b000a73
    db31:	00 46 6f             	add    BYTE PTR [rsi+0x6f],al
    db34:	75 6e                	jne    dba4 <_IO_stdin_used+0x1ba4>
    db36:	64 20 6f 70          	and    BYTE PTR fs:[rdi+0x70],ch
    db3a:	65 72 61             	gs jb  db9e <_IO_stdin_used+0x1b9e>
    db3d:	74 6f                	je     dbae <_IO_stdin_used+0x1bae>
    db3f:	72 00                	jb     db41 <_IO_stdin_used+0x1b41>
    db41:	61                   	(bad)  
    db42:	6c                   	ins    BYTE PTR es:[rdi],dx
    db43:	65 72 74             	gs jb  dbba <_IO_stdin_used+0x1bba>
    db46:	00 24 68             	add    BYTE PTR [rax+rbp*2],ah
    db49:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    db4a:	6d                   	ins    DWORD PTR es:[rdi],dx
    db4b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    db4d:	65 74 00             	gs je  db50 <_IO_stdin_used+0x1b50>
    db50:	2d 3e 00 3c 3e       	sub    eax,0x3e3c003e
    db55:	00 24 65 78 74 65 72 	add    BYTE PTR [riz*2+0x72657478],ah
    db5c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db5d:	61                   	(bad)  
    db5e:	6c                   	ins    BYTE PTR es:[rdi],dx
    db5f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db60:	65 74 00             	gs je  db63 <_IO_stdin_used+0x1b63>
    db63:	22 3b                	and    bh,BYTE PTR [rbx]
    db65:	00 6e 61             	add    BYTE PTR [rsi+0x61],ch
    db68:	6d                   	ins    DWORD PTR es:[rdi],dx
    db69:	65 3a 22             	cmp    ah,BYTE PTR gs:[rdx]
    db6c:	00 6d 73             	add    BYTE PTR [rbp+0x73],ch
    db6f:	67 3a 22             	cmp    ah,BYTE PTR [edx]
    db72:	00 64 65 70          	add    BYTE PTR [rbp+riz*2+0x70],ah
    db76:	74 68                	je     dbe0 <_IO_stdin_used+0x1be0>
    db78:	3a 00                	cmp    al,BYTE PTR [rax]
    db7a:	74 79                	je     dbf5 <_IO_stdin_used+0x1bf5>
    db7c:	70 65                	jo     dbe3 <_IO_stdin_used+0x1be3>
    db7e:	3a 00                	cmp    al,BYTE PTR [rax]
    db80:	74 61                	je     dbe3 <_IO_stdin_used+0x1be3>
    db82:	72 67                	jb     dbeb <_IO_stdin_used+0x1beb>
    db84:	65 74 3a             	gs je  dbc1 <_IO_stdin_used+0x1bc1>
    db87:	22 00                	and    al,BYTE PTR [rax]
    db89:	73 65                	jae    dbf0 <_IO_stdin_used+0x1bf0>
    db8b:	76 3a                	jbe    dbc7 <_IO_stdin_used+0x1bc7>
    db8d:	00 00                	add    BYTE PTR [rax],al
    db8f:	00 52 75             	add    BYTE PTR [rdx+0x75],dl
    db92:	6c                   	ins    BYTE PTR es:[rdi],dx
    db93:	65 20 73 65          	and    BYTE PTR gs:[rbx+0x65],dh
    db97:	76 65                	jbe    dbfe <_IO_stdin_used+0x1bfe>
    db99:	72 69                	jb     dc04 <_IO_stdin_used+0x1c04>
    db9b:	74 79                	je     dc16 <_IO_stdin_used+0x1c16>
    db9d:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    dba0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dba1:	75 6c                	jne    dc0f <_IO_stdin_used+0x1c0f>
    dba3:	64 20 62 65          	and    BYTE PTR fs:[rdx+0x65],ah
    dba7:	20 3e                	and    BYTE PTR [rsi],bh
    dba9:	20 30                	and    BYTE PTR [rax],dh
    dbab:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    dbae:	64 20 3c 3d 20 31 30 	and    BYTE PTR fs:[rdi*1+0x303120],bh
    dbb5:	00 
    dbb6:	00 00                	add    BYTE PTR [rax],al
    dbb8:	52                   	push   rdx
    dbb9:	75 6c                	jne    dc27 <_IO_stdin_used+0x1c27>
    dbbb:	65 20 73 65          	and    BYTE PTR gs:[rbx+0x65],dh
    dbbf:	76 65                	jbe    dc26 <_IO_stdin_used+0x1c26>
    dbc1:	72 69                	jb     dc2c <_IO_stdin_used+0x1c2c>
    dbc3:	74 79                	je     dc3e <_IO_stdin_used+0x1c3e>
    dbc5:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    dbc8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dbc9:	75 6c                	jne    dc37 <_IO_stdin_used+0x1c37>
    dbcb:	64 20 62 65          	and    BYTE PTR fs:[rdx+0x65],ah
    dbcf:	20 61 20             	and    BYTE PTR [rcx+0x20],ah
    dbd2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dbd3:	75 6d                	jne    dc42 <_IO_stdin_used+0x1c42>
    dbd5:	65 72 69             	gs jb  dc41 <_IO_stdin_used+0x1c41>
    dbd8:	63 20                	movsxd esp,DWORD PTR [rax]
    dbda:	76 61                	jbe    dc3d <_IO_stdin_used+0x1c3d>
    dbdc:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbdd:	75 65                	jne    dc44 <_IO_stdin_used+0x1c44>
    dbdf:	00 69 74             	add    BYTE PTR [rcx+0x74],ch
    dbe2:	79 70                	jns    dc54 <_IO_stdin_used+0x1c54>
    dbe4:	65 3a 00             	cmp    al,BYTE PTR gs:[rax]
    dbe7:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    dbe9:	76 61                	jbe    dc4c <_IO_stdin_used+0x1c4c>
    dbeb:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbec:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    dbf3:	20 
    dbf4:	74 79                	je     dc6f <_IO_stdin_used+0x1c6f>
    dbf6:	70 65                	jo     dc5d <_IO_stdin_used+0x1c5d>
    dbf8:	20 76 61             	and    BYTE PTR [rsi+0x61],dh
    dbfb:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbfc:	75 65                	jne    dc63 <_IO_stdin_used+0x1c63>
    dbfe:	00 00                	add    BYTE PTR [rax],al
    dc00:	25 73 3a 20 69       	and    eax,0x69203a73
    dc05:	74 79                	je     dc80 <_IO_stdin_used+0x1c80>
    dc07:	70 65                	jo     dc6e <_IO_stdin_used+0x1c6e>
    dc09:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    dc0c:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc0d:	79 20                	jns    dc2f <_IO_stdin_used+0x1c2f>
    dc0f:	61                   	(bad)  
    dc10:	70 70                	jo     dc82 <_IO_stdin_used+0x1c82>
    dc12:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc13:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dc1a:	72 75                	jb     dc91 <_IO_stdin_used+0x1c91>
    dc1c:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc1d:	65 73 20             	gs jae dc40 <_IO_stdin_used+0x1c40>
    dc20:	77 69                	ja     dc8b <_IO_stdin_used+0x1c8b>
    dc22:	74 68                	je     dc8c <_IO_stdin_used+0x1c8c>
    dc24:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    dc27:	4d 50                	rex.WRB push r8
    dc29:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dc2c:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dc2f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dc30:	74 6f                	je     dca1 <_IO_stdin_used+0x1ca1>
    dc32:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dc35:	0a 00                	or     al,BYTE PTR [rax]
    dc37:	69 63 6f 64 65 3a 00 	imul   esp,DWORD PTR [rbx+0x6f],0x3a6564
    dc3e:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    dc40:	76 61                	jbe    dca3 <_IO_stdin_used+0x1ca3>
    dc42:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc43:	69 64 65 20 69 63 6d 	imul   esp,DWORD PTR [rbp+riz*2+0x20],0x706d6369
    dc4a:	70 
    dc4b:	20 63 6f             	and    BYTE PTR [rbx+0x6f],ah
    dc4e:	64 65 20 76 61       	fs and BYTE PTR gs:[rsi+0x61],dh
    dc53:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc54:	75 65                	jne    dcbb <_IO_stdin_used+0x1cbb>
    dc56:	00 00                	add    BYTE PTR [rax],al
    dc58:	69 63 6f 64 65 20 6f 	imul   esp,DWORD PTR [rbx+0x6f],0x6f206564
    dc5f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dc60:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc61:	79 20                	jns    dc83 <_IO_stdin_used+0x1c83>
    dc63:	61                   	(bad)  
    dc64:	70 70                	jo     dcd6 <_IO_stdin_used+0x1cd6>
    dc66:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc67:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dc6e:	72 75                	jb     dce5 <_IO_stdin_used+0x1ce5>
    dc70:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc71:	65 73 20             	gs jae dc94 <_IO_stdin_used+0x1c94>
    dc74:	77 69                	ja     dcdf <_IO_stdin_used+0x1cdf>
    dc76:	74 68                	je     dce0 <_IO_stdin_used+0x1ce0>
    dc78:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    dc7b:	4d 50                	rex.WRB push r8
    dc7d:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dc80:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dc83:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dc84:	74 6f                	je     dcf5 <_IO_stdin_used+0x1cf5>
    dc86:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dc89:	00 69 63             	add    BYTE PTR [rcx+0x63],ch
    dc8c:	6d                   	ins    DWORD PTR es:[rdi],dx
    dc8d:	70 5f                	jo     dcee <_IO_stdin_used+0x1cee>
    dc8f:	69 64 3a 00 49 6e 76 	imul   esp,DWORD PTR [rdx+rdi*1+0x0],0x61766e49
    dc96:	61 
    dc97:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc98:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    dc9f:	20 
    dca0:	69 64 20 76 61 6c 75 	imul   esp,DWORD PTR [rax+riz*1+0x76],0x65756c61
    dca7:	65 
	...
    dcb0:	49                   	rex.WB
    dcb1:	43                   	rex.XB
    dcb2:	4d 50                	rex.WRB push r8
    dcb4:	20 49 44             	and    BYTE PTR [rcx+0x44],cl
    dcb7:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    dcba:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcbb:	79 20                	jns    dcdd <_IO_stdin_used+0x1cdd>
    dcbd:	61                   	(bad)  
    dcbe:	70 70                	jo     dd30 <_IO_stdin_used+0x1d30>
    dcc0:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcc1:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dcc8:	72 75                	jb     dd3f <_IO_stdin_used+0x1d3f>
    dcca:	6c                   	ins    BYTE PTR es:[rdi],dx
    dccb:	65 73 20             	gs jae dcee <_IO_stdin_used+0x1cee>
    dcce:	77 69                	ja     dd39 <_IO_stdin_used+0x1d39>
    dcd0:	74 68                	je     dd3a <_IO_stdin_used+0x1d3a>
    dcd2:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    dcd5:	4d 50                	rex.WRB push r8
    dcd7:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dcda:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dcdd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dcde:	74 6f                	je     dd4f <_IO_stdin_used+0x1d4f>
    dce0:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dce3:	00 69 63             	add    BYTE PTR [rcx+0x63],ch
    dce6:	6d                   	ins    DWORD PTR es:[rdi],dx
    dce7:	70 5f                	jo     dd48 <_IO_stdin_used+0x1d48>
    dce9:	73 65                	jae    dd50 <_IO_stdin_used+0x1d50>
    dceb:	71 3a                	jno    dd27 <_IO_stdin_used+0x1d27>
    dced:	00 49 6e             	add    BYTE PTR [rcx+0x6e],cl
    dcf0:	76 61                	jbe    dd53 <_IO_stdin_used+0x1d53>
    dcf2:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcf3:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    dcfa:	20 
    dcfb:	73 65                	jae    dd62 <_IO_stdin_used+0x1d62>
    dcfd:	71 75                	jno    dd74 <_IO_stdin_used+0x1d74>
    dcff:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    dd01:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    dd04:	76 61                	jbe    dd67 <_IO_stdin_used+0x1d67>
    dd06:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd07:	75 65                	jne    dd6e <_IO_stdin_used+0x1d6e>
    dd09:	00 74 74 6c          	add    BYTE PTR [rsp+rsi*2+0x6c],dh
    dd0d:	3a 00                	cmp    al,BYTE PTR [rax]
    dd0f:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    dd11:	76 61                	jbe    dd74 <_IO_stdin_used+0x1d74>
    dd13:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd14:	69 64 20 74 74 6c 20 	imul   esp,DWORD PTR [rax+riz*1+0x74],0x76206c74
    dd1b:	76 
    dd1c:	61                   	(bad)  
    dd1d:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd1e:	75 65                	jne    dd85 <_IO_stdin_used+0x1d85>
    dd20:	00 66 6c             	add    BYTE PTR [rsi+0x6c],ah
    dd23:	61                   	(bad)  
    dd24:	67 73 3a             	addr32 jae dd61 <_IO_stdin_used+0x1d61>
    dd27:	22 00                	and    al,BYTE PTR [rax]
    dd29:	00 00                	add    BYTE PTR [rax],al
    dd2b:	00 00                	add    BYTE PTR [rax],al
    dd2d:	00 00                	add    BYTE PTR [rax],al
    dd2f:	00 66 6c             	add    BYTE PTR [rsi+0x6c],ah
    dd32:	61                   	(bad)  
    dd33:	67 73 20             	addr32 jae dd56 <_IO_stdin_used+0x1d56>
    dd36:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd37:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dd38:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd39:	79 20                	jns    dd5b <_IO_stdin_used+0x1d5b>
    dd3b:	61                   	(bad)  
    dd3c:	70 70                	jo     ddae <_IO_stdin_used+0x1dae>
    dd3e:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd3f:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dd46:	72 75                	jb     ddbd <_IO_stdin_used+0x1dbd>
    dd48:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd49:	65 73 20             	gs jae dd6c <_IO_stdin_used+0x1d6c>
    dd4c:	77 69                	ja     ddb7 <_IO_stdin_used+0x1db7>
    dd4e:	74 68                	je     ddb8 <_IO_stdin_used+0x1db8>
    dd50:	20 74 63 70          	and    BYTE PTR [rbx+riz*2+0x70],dh
    dd54:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dd57:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dd5a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd5b:	74 6f                	je     ddcc <_IO_stdin_used+0x1dcc>
    dd5d:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dd60:	00 61 63             	add    BYTE PTR [rcx+0x63],ah
    dd63:	6b 3a 00             	imul   edi,DWORD PTR [rdx],0x0
    dd66:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    dd68:	76 61                	jbe    ddcb <_IO_stdin_used+0x1dcb>
    dd6a:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd6b:	69 64 20 61 63 6b 20 	imul   esp,DWORD PTR [rax+riz*1+0x61],0x76206b63
    dd72:	76 
    dd73:	61                   	(bad)  
    dd74:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd75:	75 65                	jne    dddc <_IO_stdin_used+0x1ddc>
    dd77:	00 70 63             	add    BYTE PTR [rax+0x63],dh
    dd7a:	72 65                	jb     dde1 <_IO_stdin_used+0x1de1>
    dd7c:	3a 22                	cmp    ah,BYTE PTR [rdx]
    dd7e:	00 00                	add    BYTE PTR [rax],al
    dd80:	46 61                	rex.RX (bad) 
    dd82:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    dd89:	20 
    dd8a:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    dd8d:	70 69                	jo     ddf8 <_IO_stdin_used+0x1df8>
    dd8f:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd90:	65 20 72 65          	and    BYTE PTR gs:[rdx+0x65],dh
    dd94:	67 75 6c             	addr32 jne de03 <_IO_stdin_used+0x1e03>
    dd97:	61                   	(bad)  
    dd98:	72 20                	jb     ddba <_IO_stdin_used+0x1dba>
    dd9a:	65 78 70             	gs js  de0d <_IO_stdin_used+0x1e0d>
    dd9d:	72 65                	jb     de04 <_IO_stdin_used+0x1e04>
    dd9f:	73 73                	jae    de14 <_IO_stdin_used+0x1e14>
    dda1:	69 6f 6e 00 64 73 69 	imul   ebp,DWORD PTR [rdi+0x6e],0x69736400
    dda8:	7a 65                	jp     de0f <_IO_stdin_used+0x1e0f>
    ddaa:	3a 00                	cmp    al,BYTE PTR [rax]
    ddac:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ddad:	66 66 73 65          	data16 data16 jae de16 <_IO_stdin_used+0x1e16>
    ddb1:	74 3a                	je     dded <_IO_stdin_used+0x1ded>
    ddb3:	00 65 73             	add    BYTE PTR [rbp+0x73],ah
    ddb6:	74 61                	je     de19 <_IO_stdin_used+0x1e19>
    ddb8:	62                   	(bad)  
    ddb9:	6c                   	ins    BYTE PTR es:[rdi],dx
    ddba:	69 73 68 65 64 00 6e 	imul   esi,DWORD PTR [rbx+0x68],0x6e006465
    ddc1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ddc2:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    ddc4:	63 72 79             	movsxd esi,DWORD PTR [rdx+0x79]
    ddc7:	70 74                	jo     de3d <_IO_stdin_used+0x1e3d>
    ddc9:	00 25 63 00 25 30    	add    BYTE PTR [rip+0x30250063],ah        # 3025de32 <_end+0x30122e12>
    ddcf:	32 78 00             	xor    bh,BYTE PTR [rax+0x0]
    ddd2:	00 00                	add    BYTE PTR [rax],al
    ddd4:	3e 00 3c 00          	add    BYTE PTR ds:[rax+rax*1],bh
    ddd8:	21 00                	and    DWORD PTR [rax],eax
    ddda:	3c 3d                	cmp    al,0x3d
    dddc:	00 3e                	add    BYTE PTR [rsi],bh
    ddde:	3d 00 55 6e 73       	cmp    eax,0x736e5500
    dde3:	75 70                	jne    de55 <_IO_stdin_used+0x1e55>
    dde5:	70 6f                	jo     de56 <_IO_stdin_used+0x1e56>
    dde7:	72 74                	jb     de5d <_IO_stdin_used+0x1e5d>
    dde9:	65 64 20 6f 70       	gs and BYTE PTR fs:[rdi+0x70],ch
    ddee:	65 72 61             	gs jb  de52 <_IO_stdin_used+0x1e52>
    ddf1:	74 6f                	je     de62 <_IO_stdin_used+0x1e62>
    ddf3:	72 00                	jb     ddf5 <_IO_stdin_used+0x1df5>
    ddf5:	00 00                	add    BYTE PTR [rax],al
    ddf7:	00 ab d0 ff ff fd    	add    BYTE PTR [rbx-0x2000030],ch
    ddfd:	d0 ff                	sar    bh,1
    ddff:	ff 16                	call   QWORD PTR [rsi]
    de01:	d1 ff                	sar    edi,1
    de03:	ff cb                	dec    ebx
    de05:	d0 ff                	sar    bh,1
    de07:	ff e4                	jmp    rsp
    de09:	d0 ff                	sar    bh,1
    de0b:	ff 2f                	jmp    FWORD PTR [rdi]
    de0d:	d1 ff                	sar    edi,1
    de0f:	ff 2e                	jmp    FWORD PTR [rsi]
    de11:	00 25 30 32 78 00    	add    BYTE PTR [rip+0x783230],ah        # 791047 <_end+0x656027>
    de17:	25 30 32 78 20       	and    eax,0x20783230
    de1c:	2d 2d 20 25 30       	sub    eax,0x3025202d
    de21:	32 78 0a             	xor    bh,BYTE PTR [rax+0xa]
    de24:	00 00                	add    BYTE PTR [rax],al
    de26:	00 00                	add    BYTE PTR [rax],al
    de28:	73 72                	jae    de9c <_IO_stdin_used+0x1e9c>
    de2a:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    de2c:	6c                   	ins    BYTE PTR es:[rdi],dx
    de2d:	75 61                	jne    de90 <_IO_stdin_used+0x1e90>
    de2f:	2f                   	(bad)  
    de30:	73 63                	jae    de95 <_IO_stdin_used+0x1e95>
    de32:	72 69                	jb     de9d <_IO_stdin_used+0x1e9d>
    de34:	70 74                	jo     deaa <_IO_stdin_used+0x1eaa>
    de36:	73 2f                	jae    de67 <_IO_stdin_used+0x1e67>
    de38:	68 65 6c 6c 6f       	push   0x6f6c6c65
    de3d:	74 65                	je     dea4 <_IO_stdin_used+0x1ea4>
    de3f:	73 74                	jae    deb5 <_IO_stdin_used+0x1eb5>
    de41:	2e 6c                	cs ins BYTE PTR es:[rdi],dx
    de43:	75 61                	jne    dea6 <_IO_stdin_used+0x1ea6>
    de45:	00 72 00             	add    BYTE PTR [rdx+0x0],dh
    de48:	2f                   	(bad)  
    de49:	65 74 63             	gs je  deaf <_IO_stdin_used+0x1eaf>
    de4c:	2f                   	(bad)  
    de4d:	76 69                	jbe    deb8 <_IO_stdin_used+0x1eb8>
    de4f:	67 69 6c 2f 6c 73 63 	imul   ebp,DWORD PTR [edi+ebp*1+0x6c],0x69726373
    de56:	72 69 
    de58:	70 74                	jo     dece <_IO_stdin_used+0x1ece>
    de5a:	2e 63 6f 6e          	movsxd ebp,DWORD PTR cs:[rdi+0x6e]
    de5e:	66 00 46 61          	data16 add BYTE PTR [rsi+0x61],al
    de62:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    de69:	20 
    de6a:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    de6d:	6c                   	ins    BYTE PTR es:[rdi],dx
    de6e:	65 63 74 20 4c       	movsxd esi,DWORD PTR gs:[rax+riz*1+0x4c]
    de73:	75 61                	jne    ded6 <_IO_stdin_used+0x1ed6>
    de75:	20 73 63             	and    BYTE PTR [rbx+0x63],dh
    de78:	72 69                	jb     dee3 <_IO_stdin_used+0x1ee3>
    de7a:	70 74                	jo     def0 <_IO_stdin_used+0x1ef0>
    de7c:	73 3a                	jae    deb8 <_IO_stdin_used+0x1eb8>
    de7e:	20 2f                	and    BYTE PTR [rdi],ch
    de80:	65 74 63             	gs je  dee6 <_IO_stdin_used+0x1ee6>
    de83:	2f                   	(bad)  
    de84:	76 69                	jbe    deef <_IO_stdin_used+0x1eef>
    de86:	67 69 6c 2f 6c 73 63 	imul   ebp,DWORD PTR [edi+ebp*1+0x6c],0x69726373
    de8d:	72 69 
    de8f:	70 74                	jo     df05 <_IO_stdin_used+0x1f05>
    de91:	2e 63 6f 6e          	movsxd ebp,DWORD PTR cs:[rdi+0x6e]
    de95:	66 20 6e 6f          	data16 and BYTE PTR [rsi+0x6f],ch
    de99:	74 20                	je     debb <_IO_stdin_used+0x1ebb>
    de9b:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    de9d:	75 6e                	jne    df0d <_IO_stdin_used+0x1f0d>
    de9f:	64 2e 00 2e          	fs add BYTE PTR cs:[rsi],ch
    dea3:	2a 2e                	sub    ch,BYTE PTR [rsi]
    dea5:	6c                   	ins    BYTE PTR es:[rdi],dx
    dea6:	75 61                	jne    df09 <_IO_stdin_used+0x1f09>
    dea8:	3a 2e                	cmp    ch,BYTE PTR [rsi]
    deaa:	2a 00                	sub    al,BYTE PTR [rax]
    deac:	6c                   	ins    BYTE PTR es:[rdi],dx
    dead:	5f                   	pop    rdi
    deae:	73 63                	jae    df13 <_IO_stdin_used+0x1f13>
    deb0:	72 69                	jb     df1b <_IO_stdin_used+0x1f1b>
    deb2:	70 74                	jo     df28 <_IO_stdin_used+0x1f28>
    deb4:	5f                   	pop    rdi
    deb5:	72 6f                	jb     df26 <_IO_stdin_used+0x1f26>
    deb7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    deb8:	74 3d                	je     def7 <_IO_stdin_used+0x1ef7>
    deba:	00 0a                	add    BYTE PTR [rdx],cl
    debc:	00 00                	add    BYTE PTR [rax],al
    debe:	00 00                	add    BYTE PTR [rax],al
    dec0:	49 50                	rex.WB push r8
    dec2:	76 36                	jbe    defa <_IO_stdin_used+0x1efa>
    dec4:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2dff3d <_end+0x3e1a4f1d>
    deca:	20 25 73 20 50 72    	and    BYTE PTR [rip+0x72502073],ah        # 7250ff43 <_end+0x723d4f23>
    ded0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ded1:	74 6f                	je     df42 <_IO_stdin_used+0x1f42>
    ded3:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    ded6:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    ded9:	6d                   	ins    DWORD PTR es:[rdi],dx
    deda:	62                   	(bad)  
    dedb:	65 72 20             	gs jb  defe <_IO_stdin_used+0x1efe>
    dede:	3d 20 25 64 0a       	cmp    eax,0xa642520
    dee3:	00 00                	add    BYTE PTR [rax],al
    dee5:	00 00                	add    BYTE PTR [rax],al
    dee7:	00 5b 4e             	add    BYTE PTR [rbx+0x4e],bl
    deea:	20 25 73 20 53 20    	and    BYTE PTR [rip+0x20532073],ah        # 2053ff63 <_end+0x20404f43>
    def0:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    def3:	30 32                	xor    BYTE PTR [rdx],dh
    def5:	78 20                	js     df17 <_IO_stdin_used+0x1f17>
    def7:	45 20 30             	and    BYTE PTR [r8],r14b
    defa:	78 25                	js     df21 <_IO_stdin_used+0x1f21>
    defc:	30 32                	xor    BYTE PTR [rdx],dh
    defe:	78 5d                	js     df5d <_IO_stdin_used+0x1f5d>
    df00:	0a 00                	or     al,BYTE PTR [rax]
    df02:	00 00                	add    BYTE PTR [rax],al
    df04:	00 00                	add    BYTE PTR [rax],al
    df06:	00 00                	add    BYTE PTR [rax],al
    df08:	53                   	push   rbx
    df09:	65 67 6d             	gs ins DWORD PTR es:[edi],dx
    df0c:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    df0e:	74 61                	je     df71 <_IO_stdin_used+0x1f71>
    df10:	74 69                	je     df7b <_IO_stdin_used+0x1f7b>
    df12:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    df13:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df14:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    df17:	75 6c                	jne    df85 <_IO_stdin_used+0x1f85>
    df19:	74 20                	je     df3b <_IO_stdin_used+0x1f3b>
    df1b:	61                   	(bad)  
    df1c:	74 20                	je     df3e <_IO_stdin_used+0x1f3e>
    df1e:	25 73 3a 20 61       	and    eax,0x61203a73
    df23:	70 70                	jo     df95 <_IO_stdin_used+0x1f95>
    df25:	6c                   	ins    BYTE PTR es:[rdi],dx
    df26:	69 63 61 74 69 6f 6e 	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
    df2d:	20 63 72             	and    BYTE PTR [rbx+0x72],ah
    df30:	61                   	(bad)  
    df31:	73 68                	jae    df9b <_IO_stdin_used+0x1f9b>
    df33:	65 64 0a 00          	gs or  al,BYTE PTR fs:[rax]
    df37:	46 75 6e             	rex.RX jne dfa8 <_IO_stdin_used+0x1fa8>
    df3a:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    df3e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df3f:	20 62 61             	and    BYTE PTR [rdx+0x61],ah
    df42:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
    df45:	72 61                	jb     dfa8 <_IO_stdin_used+0x1fa8>
    df47:	63 65 3a             	movsxd esp,DWORD PTR [rbp+0x3a]
    df4a:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
    df4e:	00 25 73 0a 00 00    	add    BYTE PTR [rip+0xa73],ah        # e9c7 <__GNU_EH_FRAME_HDR+0x90b>
    df54:	00 00                	add    BYTE PTR [rax],al
    df56:	00 00                	add    BYTE PTR [rax],al
    df58:	5b                   	pop    rbx
    df59:	4e 20 25 73 20 53 20 	rex.WRX and BYTE PTR [rip+0x20532073],r12b        # 2053ffd3 <_end+0x20404fb3>
    df60:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    df63:	30 32                	xor    BYTE PTR [rdx],dh
    df65:	78 20                	js     df87 <_IO_stdin_used+0x1f87>
    df67:	45 20 30             	and    BYTE PTR [r8],r14b
    df6a:	78 25                	js     df91 <_IO_stdin_used+0x1f91>
    df6c:	30 32                	xor    BYTE PTR [rdx],dh
    df6e:	78 20                	js     df90 <_IO_stdin_used+0x1f90>
    df70:	28 2e                	sub    BYTE PTR [rsi],ch
    df72:	2f                   	(bad)  
    df73:	76 69                	jbe    dfde <_IO_stdin_used+0x1fde>
    df75:	67 69 6c 2e 65 78 65 	imul   ebp,DWORD PTR [esi+ebp*1+0x65],0x2b286578
    df7c:	28 2b 
    df7e:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    df81:	30 32                	xor    BYTE PTR [rdx],dh
    df83:	78 29                	js     dfae <_IO_stdin_used+0x1fae>
    df85:	29 5d 0a             	sub    DWORD PTR [rbp+0xa],ebx
	...
    df90:	55                   	push   rbp
    df91:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df92:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    df96:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df97:	20 66 75             	and    BYTE PTR [rsi+0x75],ah
    df9a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df9b:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    df9f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dfa0:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    dfa3:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
    dfa6:	6d                   	ins    DWORD PTR es:[rdi],dx
    dfa7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dfa8:	72 79                	jb     e023 <_IO_stdin_used+0x2023>
    dfaa:	20 6f 66             	and    BYTE PTR [rdi+0x66],ch
    dfad:	66 73 65             	data16 jae e015 <_IO_stdin_used+0x2015>
    dfb0:	74 20                	je     dfd2 <_IO_stdin_used+0x1fd2>
    dfb2:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    dfb5:	30 32                	xor    BYTE PTR [rdx],dh
    dfb7:	78 0a                	js     dfc3 <_IO_stdin_used+0x1fc3>
    dfb9:	00 52 65             	add    BYTE PTR [rdx+0x65],dl
    dfbc:	67 69 73 74 65 72 20 	imul   esi,DWORD PTR [ebx+0x74],0x44207265
    dfc3:	44 
    dfc4:	75 6d                	jne    e033 <_IO_stdin_used+0x2033>
    dfc6:	70 3a                	jo     e002 <_IO_stdin_used+0x2002>
    dfc8:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    dfcb:	41 58                	pop    r8
    dfcd:	5d                   	pop    rbp
    dfce:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790ff4 <_end+0x25655fd4>
    dfd4:	30 32                	xor    BYTE PTR [rdx],dh
    dfd6:	78 0a                	js     dfe2 <_IO_stdin_used+0x1fe2>
    dfd8:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    dfdb:	42 58                	rex.X pop rax
    dfdd:	5d                   	pop    rbp
    dfde:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25791004 <_end+0x25655fe4>
    dfe4:	30 32                	xor    BYTE PTR [rdx],dh
    dfe6:	78 0a                	js     dff2 <_IO_stdin_used+0x1ff2>
    dfe8:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    dfeb:	43 58                	rex.XB pop r8
    dfed:	5d                   	pop    rbp
    dfee:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25791014 <_end+0x25655ff4>
    dff4:	30 32                	xor    BYTE PTR [rdx],dh
    dff6:	78 0a                	js     e002 <_IO_stdin_used+0x2002>
    dff8:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    dffb:	44 58                	rex.R pop rax
    dffd:	5d                   	pop    rbp
    dffe:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25791024 <_end+0x25656004>
    e004:	30 32                	xor    BYTE PTR [rdx],dh
    e006:	78 0a                	js     e012 <_IO_stdin_used+0x2012>
    e008:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    e00b:	53                   	push   rbx
    e00c:	50                   	push   rax
    e00d:	5d                   	pop    rbp
    e00e:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25791034 <_end+0x25656014>
    e014:	30 32                	xor    BYTE PTR [rdx],dh
    e016:	78 0a                	js     e022 <_IO_stdin_used+0x2022>
    e018:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    e01b:	42 50                	rex.X push rax
    e01d:	5d                   	pop    rbp
    e01e:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25791044 <_end+0x25656024>
    e024:	30 32                	xor    BYTE PTR [rdx],dh
    e026:	78 0a                	js     e032 <_IO_stdin_used+0x2032>
	...
    e030:	72 00                	jb     e032 <_IO_stdin_used+0x2032>
    e032:	2f                   	(bad)  
    e033:	75 73                	jne    e0a8 <_IO_stdin_used+0x20a8>
    e035:	72 2f                	jb     e066 <_IO_stdin_used+0x2066>
    e037:	73 68                	jae    e0a1 <_IO_stdin_used+0x20a1>
    e039:	61                   	(bad)  
    e03a:	72 65                	jb     e0a1 <_IO_stdin_used+0x20a1>
    e03c:	2f                   	(bad)  
    e03d:	76 69                	jbe    e0a8 <_IO_stdin_used+0x20a8>
    e03f:	67 69 6c 2f 6d 65 6d 	imul   ebp,DWORD PTR [edi+ebp*1+0x6d],0x616d6d65
    e046:	6d 61 
    e048:	70 2e                	jo     e078 <_IO_stdin_used+0x2078>
    e04a:	74 78                	je     e0c4 <__GNU_EH_FRAME_HDR+0x8>
    e04c:	74 00                	je     e04e <_IO_stdin_used+0x204e>
    e04e:	00 00                	add    BYTE PTR [rax],al
    e050:	46                   	rex.RX
    e051:	41 54                	push   r12
    e053:	41                   	rex.B
    e054:	4c 20 45 52          	rex.WR and BYTE PTR [rbp+0x52],r8b
    e058:	52                   	push   rdx
    e059:	4f 52                	rex.WRXB push r10
    e05b:	3a 20                	cmp    ah,BYTE PTR [rax]
    e05d:	6d                   	ins    DWORD PTR es:[rdi],dx
    e05e:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    e060:	6d                   	ins    DWORD PTR es:[rdi],dx
    e061:	61                   	(bad)  
    e062:	70 2e                	jo     e092 <_IO_stdin_used+0x2092>
    e064:	74 78                	je     e0de <__GNU_EH_FRAME_HDR+0x22>
    e066:	74 20                	je     e088 <_IO_stdin_used+0x2088>
    e068:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e069:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e06a:	74 20                	je     e08c <_IO_stdin_used+0x208c>
    e06c:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    e06e:	75 6e                	jne    e0de <__GNU_EH_FRAME_HDR+0x22>
    e070:	64 2e 50             	fs cs push rax
    e073:	6c                   	ins    BYTE PTR es:[rdi],dx
    e074:	65 61                	gs (bad) 
    e076:	73 65                	jae    e0dd <__GNU_EH_FRAME_HDR+0x21>
    e078:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    e07b:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    e07e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e07f:	20 67 65             	and    BYTE PTR [rdi+0x65],ah
    e082:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e083:	5f                   	pop    rdi
    e084:	6d                   	ins    DWORD PTR es:[rdi],dx
    e085:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    e087:	5f                   	pop    rdi
    e088:	6d                   	ins    DWORD PTR es:[rdi],dx
    e089:	61                   	(bad)  
    e08a:	70 2e                	jo     e0ba <_IO_stdin_used+0x20ba>
    e08c:	70 79                	jo     e107 <__GNU_EH_FRAME_HDR+0x4b>
    e08e:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    e091:	64 20 63 6f          	and    BYTE PTR fs:[rbx+0x6f],ah
    e095:	70 79                	jo     e110 <__GNU_EH_FRAME_HDR+0x54>
    e097:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
    e09a:	6d                   	ins    DWORD PTR es:[rdi],dx
    e09b:	6d                   	ins    DWORD PTR es:[rdi],dx
    e09c:	61                   	(bad)  
    e09d:	70 2e                	jo     e0cd <__GNU_EH_FRAME_HDR+0x11>
    e09f:	74 78                	je     e119 <__GNU_EH_FRAME_HDR+0x5d>
    e0a1:	74 20                	je     e0c3 <__GNU_EH_FRAME_HDR+0x7>
    e0a3:	74 6f                	je     e114 <__GNU_EH_FRAME_HDR+0x58>
    e0a5:	20 2f                	and    BYTE PTR [rdi],ch
    e0a7:	75 73                	jne    e11c <__GNU_EH_FRAME_HDR+0x60>
    e0a9:	72 2f                	jb     e0da <__GNU_EH_FRAME_HDR+0x1e>
    e0ab:	73 68                	jae    e115 <__GNU_EH_FRAME_HDR+0x59>
    e0ad:	61                   	(bad)  
    e0ae:	72 65                	jb     e115 <__GNU_EH_FRAME_HDR+0x59>
    e0b0:	2f                   	(bad)  
    e0b1:	76 69                	jbe    e11c <__GNU_EH_FRAME_HDR+0x60>
    e0b3:	67                   	addr32
    e0b4:	69                   	.byte 0x69
    e0b5:	6c                   	ins    BYTE PTR es:[rdi],dx
    e0b6:	00 0a                	add    BYTE PTR [rdx],cl
    e0b8:	00 20                	add    BYTE PTR [rax],ah
	...

Disassembly of section .eh_frame_hdr:

000000000000e0bc <__GNU_EH_FRAME_HDR>:
    e0bc:	01 1b                	add    DWORD PTR [rbx],ebx
    e0be:	03 3b                	add    edi,DWORD PTR [rbx]
    e0c0:	c0 03 00             	rol    BYTE PTR [rbx],0x0
    e0c3:	00 77 00             	add    BYTE PTR [rdi+0x0],dh
    e0c6:	00 00                	add    BYTE PTR [rax],al
    e0c8:	64 3f                	fs (bad) 
    e0ca:	ff                   	(bad)  
    e0cb:	ff f4                	push   rsp
    e0cd:	03 00                	add    eax,DWORD PTR [rax]
    e0cf:	00 a4 43 ff ff 1c 04 	add    BYTE PTR [rbx+rax*2+0x41cffff],ah
    e0d6:	00 00                	add    BYTE PTR [rax],al
    e0d8:	b4 43                	mov    ah,0x43
    e0da:	ff                   	(bad)  
    e0db:	ff 34 04             	push   QWORD PTR [rsp+rax*1]
    e0de:	00 00                	add    BYTE PTR [rax],al
    e0e0:	e4 47                	in     al,0x47
    e0e2:	ff                   	(bad)  
    e0e3:	ff                   	(bad)  
    e0e4:	dc 03                	fadd   QWORD PTR [rbx]
    e0e6:	00 00                	add    BYTE PTR [rax],al
    e0e8:	cd 48                	int    0x48
    e0ea:	ff                   	(bad)  
    e0eb:	ff 4c 04 00          	dec    DWORD PTR [rsp+rax*1+0x0]
    e0ef:	00 07                	add    BYTE PTR [rdi],al
    e0f1:	49 ff                	rex.WB (bad) 
    e0f3:	ff 6c 04 00          	jmp    FWORD PTR [rsp+rax*1+0x0]
    e0f7:	00 54 4a ff          	add    BYTE PTR [rdx+rcx*2-0x1],dl
    e0fb:	ff 94 04 00 00 48 4d 	call   QWORD PTR [rsp+rax*1+0x4d480000]
    e102:	ff                   	(bad)  
    e103:	ff b4 04 00 00 5b 4e 	push   QWORD PTR [rsp+rax*1+0x4e5b0000]
    e10a:	ff                   	(bad)  
    e10b:	ff d4                	call   rsp
    e10d:	04 00                	add    al,0x0
    e10f:	00 09                	add    BYTE PTR [rcx],cl
    e111:	4f ff                	rex.WRXB (bad) 
    e113:	ff f4                	push   rsp
    e115:	04 00                	add    al,0x0
    e117:	00 af 4f ff ff 14    	add    BYTE PTR [rdi+0x14ffff4f],ch
    e11d:	05 00 00 44 50       	add    eax,0x50440000
    e122:	ff                   	(bad)  
    e123:	ff 34 05 00 00 d8 50 	push   QWORD PTR [rax*1+0x50d80000]
    e12a:	ff                   	(bad)  
    e12b:	ff 54 05 00          	call   QWORD PTR [rbp+rax*1+0x0]
    e12f:	00 a4 52 ff ff 80 05 	add    BYTE PTR [rdx+rdx*2+0x580ffff],ah
    e136:	00 00                	add    BYTE PTR [rax],al
    e138:	78 53                	js     e18d <__GNU_EH_FRAME_HDR+0xd1>
    e13a:	ff                   	(bad)  
    e13b:	ff a4 05 00 00 3f 54 	jmp    QWORD PTR [rbp+rax*1+0x543f0000]
    e142:	ff                   	(bad)  
    e143:	ff c8                	dec    eax
    e145:	05 00 00 92 54       	add    eax,0x54920000
    e14a:	ff                   	(bad)  
    e14b:	ff                   	(bad)  
    e14c:	e8 05 00 00 c5       	call   ffffffffc500e156 <_end+0xffffffffc4ed3136>
    e151:	54                   	push   rsp
    e152:	ff                   	(bad)  
    e153:	ff 08                	dec    DWORD PTR [rax]
    e155:	06                   	(bad)  
    e156:	00 00                	add    BYTE PTR [rax],al
    e158:	e6 54                	out    0x54,al
    e15a:	ff                   	(bad)  
    e15b:	ff 28                	jmp    FWORD PTR [rax]
    e15d:	06                   	(bad)  
    e15e:	00 00                	add    BYTE PTR [rax],al
    e160:	4f 55                	rex.WRXB push r13
    e162:	ff                   	(bad)  
    e163:	ff 4c 06 00          	dec    DWORD PTR [rsi+rax*1+0x0]
    e167:	00 74 59 ff          	add    BYTE PTR [rcx+rbx*2-0x1],dh
    e16b:	ff 6c 06 00          	jmp    FWORD PTR [rsi+rax*1+0x0]
    e16f:	00 d1                	add    cl,dl
    e171:	5a                   	pop    rdx
    e172:	ff                   	(bad)  
    e173:	ff 8c 06 00 00 15 63 	dec    DWORD PTR [rsi+rax*1+0x63150000]
    e17a:	ff                   	(bad)  
    e17b:	ff ac 06 00 00 58 6c 	jmp    FWORD PTR [rsi+rax*1+0x6c580000]
    e182:	ff                   	(bad)  
    e183:	ff cc                	dec    esp
    e185:	06                   	(bad)  
    e186:	00 00                	add    BYTE PTR [rax],al
    e188:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    e189:	6d                   	ins    DWORD PTR es:[rdi],dx
    e18a:	ff                   	(bad)  
    e18b:	ff                   	(bad)  
    e18c:	ec                   	in     al,dx
    e18d:	06                   	(bad)  
    e18e:	00 00                	add    BYTE PTR [rax],al
    e190:	ac                   	lods   al,BYTE PTR ds:[rsi]
    e191:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e192:	ff                   	(bad)  
    e193:	ff 0c 07             	dec    DWORD PTR [rdi+rax*1]
    e196:	00 00                	add    BYTE PTR [rax],al
    e198:	98                   	cwde   
    e199:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e19a:	ff                   	(bad)  
    e19b:	ff 2c 07             	jmp    FWORD PTR [rdi+rax*1]
    e19e:	00 00                	add    BYTE PTR [rax],al
    e1a0:	4a 73 ff             	rex.WX jae e1a2 <__GNU_EH_FRAME_HDR+0xe6>
    e1a3:	ff 4c 07 00          	dec    DWORD PTR [rdi+rax*1+0x0]
    e1a7:	00 cd                	add    ch,cl
    e1a9:	73 ff                	jae    e1aa <__GNU_EH_FRAME_HDR+0xee>
    e1ab:	ff 6c 07 00          	jmp    FWORD PTR [rdi+rax*1+0x0]
    e1af:	00 f7                	add    bh,dh
    e1b1:	75 ff                	jne    e1b2 <__GNU_EH_FRAME_HDR+0xf6>
    e1b3:	ff 94 07 00 00 37 78 	call   QWORD PTR [rdi+rax*1+0x78370000]
    e1ba:	ff                   	(bad)  
    e1bb:	ff                   	(bad)  
    e1bc:	b8 07 00 00 9d       	mov    eax,0x9d000007
    e1c1:	78 ff                	js     e1c2 <__GNU_EH_FRAME_HDR+0x106>
    e1c3:	ff                   	(bad)  
    e1c4:	d8 07                	fadd   DWORD PTR [rdi]
    e1c6:	00 00                	add    BYTE PTR [rax],al
    e1c8:	b4 78                	mov    ah,0x78
    e1ca:	ff                   	(bad)  
    e1cb:	ff                   	(bad)  
    e1cc:	f8                   	clc    
    e1cd:	07                   	(bad)  
    e1ce:	00 00                	add    BYTE PTR [rax],al
    e1d0:	05 79 ff ff 1c       	add    eax,0x1cffff79
    e1d5:	08 00                	or     BYTE PTR [rax],al
    e1d7:	00 45 7f             	add    BYTE PTR [rbp+0x7f],al
    e1da:	ff                   	(bad)  
    e1db:	ff 40 08             	inc    DWORD PTR [rax+0x8]
    e1de:	00 00                	add    BYTE PTR [rax],al
    e1e0:	5f                   	pop    rdi
    e1e1:	7f ff                	jg     e1e2 <__GNU_EH_FRAME_HDR+0x126>
    e1e3:	ff 60 08             	jmp    QWORD PTR [rax+0x8]
    e1e6:	00 00                	add    BYTE PTR [rax],al
    e1e8:	88 7f ff             	mov    BYTE PTR [rdi-0x1],bh
    e1eb:	ff 80 08 00 00 b8    	inc    DWORD PTR [rax-0x47fffff8]
    e1f1:	7f ff                	jg     e1f2 <__GNU_EH_FRAME_HDR+0x136>
    e1f3:	ff a0 08 00 00 ef    	jmp    QWORD PTR [rax-0x10fffff8]
    e1f9:	7f ff                	jg     e1fa <__GNU_EH_FRAME_HDR+0x13e>
    e1fb:	ff                   	(bad)  
    e1fc:	bc 08 00 00 34       	mov    esp,0x34000008
    e201:	81 ff ff dc 08 00    	cmp    edi,0x8dcff
    e207:	00 94 82 ff ff fc 08 	add    BYTE PTR [rdx+rax*4+0x8fcffff],dl
    e20e:	00 00                	add    BYTE PTR [rax],al
    e210:	f5                   	cmc    
    e211:	82                   	(bad)  
    e212:	ff                   	(bad)  
    e213:	ff 1c 09             	call   FWORD PTR [rcx+rcx*1]
    e216:	00 00                	add    BYTE PTR [rax],al
    e218:	2e 83 ff ff          	cs cmp edi,0xffffffff
    e21c:	3c 09                	cmp    al,0x9
    e21e:	00 00                	add    BYTE PTR [rax],al
    e220:	ec                   	in     al,dx
    e221:	83 ff ff             	cmp    edi,0xffffffff
    e224:	5c                   	pop    rsp
    e225:	09 00                	or     DWORD PTR [rax],eax
    e227:	00 aa 86 ff ff 7c    	add    BYTE PTR [rdx+0x7cffff86],ch
    e22d:	09 00                	or     DWORD PTR [rax],eax
    e22f:	00 a2 88 ff ff 9c    	add    BYTE PTR [rdx-0x63000078],ah
    e235:	09 00                	or     DWORD PTR [rax],eax
    e237:	00 fc                	add    ah,bh
    e239:	88 ff                	mov    bh,bh
    e23b:	ff                   	(bad)  
    e23c:	bc 09 00 00 0b       	mov    esp,0xb000009
    e241:	8c ff                	mov    edi,?
    e243:	ff                   	(bad)  
    e244:	dc 09                	fmul   QWORD PTR [rcx]
    e246:	00 00                	add    BYTE PTR [rax],al
    e248:	60                   	(bad)  
    e249:	90                   	nop
    e24a:	ff                   	(bad)  
    e24b:	ff                   	(bad)  
    e24c:	fc                   	cld    
    e24d:	09 00                	or     DWORD PTR [rax],eax
    e24f:	00 8a 90 ff ff 18    	add    BYTE PTR [rdx+0x18ffff90],cl
    e255:	0a 00                	or     al,BYTE PTR [rax]
    e257:	00 41 92             	add    BYTE PTR [rcx-0x6e],al
    e25a:	ff                   	(bad)  
    e25b:	ff                   	(bad)  
    e25c:	3c 0a                	cmp    al,0xa
    e25e:	00 00                	add    BYTE PTR [rax],al
    e260:	58                   	pop    rax
    e261:	92                   	xchg   edx,eax
    e262:	ff                   	(bad)  
    e263:	ff 5c 0a 00          	call   FWORD PTR [rdx+rcx*1+0x0]
    e267:	00 a7 92 ff ff 7c    	add    BYTE PTR [rdi+0x7cffff92],ah
    e26d:	0a 00                	or     al,BYTE PTR [rax]
    e26f:	00 f4                	add    ah,dh
    e271:	92                   	xchg   edx,eax
    e272:	ff                   	(bad)  
    e273:	ff 9c 0a 00 00 6b 94 	call   FWORD PTR [rdx+rcx*1-0x6b950000]
    e27a:	ff                   	(bad)  
    e27b:	ff                   	(bad)  
    e27c:	b8 0a 00 00 07       	mov    eax,0x700000a
    e281:	95                   	xchg   ebp,eax
    e282:	ff                   	(bad)  
    e283:	ff                   	(bad)  
    e284:	dc 0a                	fmul   QWORD PTR [rdx]
    e286:	00 00                	add    BYTE PTR [rax],al
    e288:	f5                   	cmc    
    e289:	96                   	xchg   esi,eax
    e28a:	ff                   	(bad)  
    e28b:	ff                   	(bad)  
    e28c:	fc                   	cld    
    e28d:	0a 00                	or     al,BYTE PTR [rax]
    e28f:	00 dd                	add    ch,bl
    e291:	98                   	cwde   
    e292:	ff                   	(bad)  
    e293:	ff 1c 0b             	call   FWORD PTR [rbx+rcx*1]
    e296:	00 00                	add    BYTE PTR [rax],al
    e298:	49 99                	rex.WB cqo 
    e29a:	ff                   	(bad)  
    e29b:	ff                   	(bad)  
    e29c:	3c 0b                	cmp    al,0xb
    e29e:	00 00                	add    BYTE PTR [rax],al
    e2a0:	bb 99 ff ff 5c       	mov    ebx,0x5cffff99
    e2a5:	0b 00                	or     eax,DWORD PTR [rax]
    e2a7:	00 cc                	add    ah,cl
    e2a9:	9a                   	(bad)  
    e2aa:	ff                   	(bad)  
    e2ab:	ff                   	(bad)  
    e2ac:	7c 0b                	jl     e2b9 <__GNU_EH_FRAME_HDR+0x1fd>
    e2ae:	00 00                	add    BYTE PTR [rax],al
    e2b0:	28 9b ff ff 9c 0b    	sub    BYTE PTR [rbx+0xb9cffff],bl
    e2b6:	00 00                	add    BYTE PTR [rax],al
    e2b8:	66 9b                	data16 fwait
    e2ba:	ff                   	(bad)  
    e2bb:	ff                   	(bad)  
    e2bc:	bc 0b 00 00 ec       	mov    esp,0xec00000b
    e2c1:	9b                   	fwait
    e2c2:	ff                   	(bad)  
    e2c3:	ff                   	(bad)  
    e2c4:	dc 0b                	fmul   QWORD PTR [rbx]
    e2c6:	00 00                	add    BYTE PTR [rax],al
    e2c8:	cb                   	retf   
    e2c9:	9c                   	pushf  
    e2ca:	ff                   	(bad)  
    e2cb:	ff                   	(bad)  
    e2cc:	fc                   	cld    
    e2cd:	0b 00                	or     eax,DWORD PTR [rax]
    e2cf:	00 3f                	add    BYTE PTR [rdi],bh
    e2d1:	9d                   	popf   
    e2d2:	ff                   	(bad)  
    e2d3:	ff 1c 0c             	call   FWORD PTR [rsp+rcx*1]
    e2d6:	00 00                	add    BYTE PTR [rax],al
    e2d8:	db 9d ff ff 3c 0c    	fistp  DWORD PTR [rbp+0xc3cffff]
    e2de:	00 00                	add    BYTE PTR [rax],al
    e2e0:	04 9e                	add    al,0x9e
    e2e2:	ff                   	(bad)  
    e2e3:	ff 5c 0c 00          	call   FWORD PTR [rsp+rcx*1+0x0]
    e2e7:	00 2d 9e ff ff 7c    	add    BYTE PTR [rip+0x7cffff9e],ch        # 7d00e28b <_end+0x7ced326b>
    e2ed:	0c 00                	or     al,0x0
    e2ef:	00 81 9f ff ff a4    	add    BYTE PTR [rcx-0x5b000061],al
    e2f5:	0c 00                	or     al,0x0
    e2f7:	00 94 a0 ff ff c4 0c 	add    BYTE PTR [rax+riz*4+0xcc4ffff],dl
    e2fe:	00 00                	add    BYTE PTR [rax],al
    e300:	8d a1 ff ff e4 0c    	lea    esp,[rcx+0xce4ffff]
    e306:	00 00                	add    BYTE PTR [rax],al
    e308:	43 a2 ff ff 04 0d 00 	rex.XB movabs ds:0xa26100000d04ffff,al
    e30f:	00 61 a2 
    e312:	ff                   	(bad)  
    e313:	ff 24 0d 00 00 c4 a3 	jmp    QWORD PTR [rcx*1-0x5c3c0000]
    e31a:	ff                   	(bad)  
    e31b:	ff 44 0d 00          	inc    DWORD PTR [rbp+rcx*1+0x0]
    e31f:	00 d5                	add    ch,dl
    e321:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    e322:	ff                   	(bad)  
    e323:	ff 74 0d 00          	push   QWORD PTR [rbp+rcx*1+0x0]
    e327:	00 87 a6 ff ff 94    	add    BYTE PTR [rdi-0x6b00005a],al
    e32d:	0d 00 00 2c a7       	or     eax,0xa72c0000
    e332:	ff                   	(bad)  
    e333:	ff b4 0d 00 00 d8 a7 	push   QWORD PTR [rbp+rcx*1-0x58280000]
    e33a:	ff                   	(bad)  
    e33b:	ff                   	(bad)  
    e33c:	dc 0d 00 00 ad a8    	fmul   QWORD PTR [rip+0xffffffffa8ad0000]        # ffffffffa8ade342 <_end+0xffffffffa89a3322>
    e342:	ff                   	(bad)  
    e343:	ff                   	(bad)  
    e344:	fc                   	cld    
    e345:	0d 00 00 8c a9       	or     eax,0xa98c0000
    e34a:	ff                   	(bad)  
    e34b:	ff 1c 0e             	call   FWORD PTR [rsi+rcx*1]
    e34e:	00 00                	add    BYTE PTR [rax],al
    e350:	09 aa ff ff 3c 0e    	or     DWORD PTR [rdx+0xe3cffff],ebp
    e356:	00 00                	add    BYTE PTR [rax],al
    e358:	3f                   	(bad)  
    e359:	ab                   	stos   DWORD PTR es:[rdi],eax
    e35a:	ff                   	(bad)  
    e35b:	ff 5c 0e 00          	call   FWORD PTR [rsi+rcx*1+0x0]
    e35f:	00 bd ab ff ff 7c    	add    BYTE PTR [rbp+0x7cffffab],bh
    e365:	0e                   	(bad)  
    e366:	00 00                	add    BYTE PTR [rax],al
    e368:	f6 ad ff ff 9c 0e    	imul   BYTE PTR [rbp+0xe9cffff]
    e36e:	00 00                	add    BYTE PTR [rax],al
    e370:	bf ae ff ff bc       	mov    edi,0xbcffffae
    e375:	0e                   	(bad)  
    e376:	00 00                	add    BYTE PTR [rax],al
    e378:	60                   	(bad)  
    e379:	b0 ff                	mov    al,0xff
    e37b:	ff                   	(bad)  
    e37c:	dc 0e                	fmul   QWORD PTR [rsi]
    e37e:	00 00                	add    BYTE PTR [rax],al
    e380:	73 b1                	jae    e333 <__GNU_EH_FRAME_HDR+0x277>
    e382:	ff                   	(bad)  
    e383:	ff                   	(bad)  
    e384:	fc                   	cld    
    e385:	0e                   	(bad)  
    e386:	00 00                	add    BYTE PTR [rax],al
    e388:	d9 b1 ff ff 1c 0f    	fnstenv [rcx+0xf1cffff]
    e38e:	00 00                	add    BYTE PTR [rax],al
    e390:	4e b2 ff             	rex.WRX mov dl,0xff
    e393:	ff                   	(bad)  
    e394:	3c 0f                	cmp    al,0xf
    e396:	00 00                	add    BYTE PTR [rax],al
    e398:	29 b3 ff ff 5c 0f    	sub    DWORD PTR [rbx+0xf5cffff],esi
    e39e:	00 00                	add    BYTE PTR [rax],al
    e3a0:	9b                   	fwait
    e3a1:	b4 ff                	mov    ah,0xff
    e3a3:	ff                   	(bad)  
    e3a4:	7c 0f                	jl     e3b5 <__GNU_EH_FRAME_HDR+0x2f9>
    e3a6:	00 00                	add    BYTE PTR [rax],al
    e3a8:	07                   	(bad)  
    e3a9:	b5 ff                	mov    ch,0xff
    e3ab:	ff 9c 0f 00 00 87 b5 	call   FWORD PTR [rdi+rcx*1-0x4a790000]
    e3b2:	ff                   	(bad)  
    e3b3:	ff                   	(bad)  
    e3b4:	bc 0f 00 00 9d       	mov    esp,0x9d00000f
    e3b9:	b5 ff                	mov    ch,0xff
    e3bb:	ff                   	(bad)  
    e3bc:	dc 0f                	fmul   QWORD PTR [rdi]
    e3be:	00 00                	add    BYTE PTR [rax],al
    e3c0:	d8 b6 ff ff 00 10    	fdiv   DWORD PTR [rsi+0x1000ffff]
    e3c6:	00 00                	add    BYTE PTR [rax],al
    e3c8:	3c b7                	cmp    al,0xb7
    e3ca:	ff                   	(bad)  
    e3cb:	ff 20                	jmp    QWORD PTR [rax]
    e3cd:	10 00                	adc    BYTE PTR [rax],al
    e3cf:	00 8f b7 ff ff 40    	add    BYTE PTR [rdi+0x40ffffb7],cl
    e3d5:	10 00                	adc    BYTE PTR [rax],al
    e3d7:	00 40 b8             	add    BYTE PTR [rax-0x48],al
    e3da:	ff                   	(bad)  
    e3db:	ff 60 10             	jmp    QWORD PTR [rax+0x10]
    e3de:	00 00                	add    BYTE PTR [rax],al
    e3e0:	0b b9 ff ff 80 10    	or     edi,DWORD PTR [rcx+0x1080ffff]
    e3e6:	00 00                	add    BYTE PTR [rax],al
    e3e8:	60                   	(bad)  
    e3e9:	b9 ff ff a0 10       	mov    ecx,0x10a0ffff
    e3ee:	00 00                	add    BYTE PTR [rax],al
    e3f0:	90                   	nop
    e3f1:	b9 ff ff c0 10       	mov    ecx,0x10c0ffff
    e3f6:	00 00                	add    BYTE PTR [rax],al
    e3f8:	f7 b9 ff ff e0 10    	idiv   DWORD PTR [rcx+0x10e0ffff]
    e3fe:	00 00                	add    BYTE PTR [rax],al
    e400:	5a                   	pop    rdx
    e401:	c9                   	leave  
    e402:	ff                   	(bad)  
    e403:	ff 04 11             	inc    DWORD PTR [rcx+rdx*1]
    e406:	00 00                	add    BYTE PTR [rax],al
    e408:	a0 c9 ff ff 24 11 00 	movabs al,ds:0xde00001124ffffc9
    e40f:	00 de 
    e411:	cb                   	retf   
    e412:	ff                   	(bad)  
    e413:	ff 4c 11 00          	dec    DWORD PTR [rcx+rdx*1+0x0]
    e417:	00 89 cd ff ff 6c    	add    BYTE PTR [rcx+0x6cffffcd],cl
    e41d:	11 00                	adc    DWORD PTR [rax],eax
    e41f:	00 9b ce ff ff 8c    	add    BYTE PTR [rbx-0x73000032],bl
    e425:	11 00                	adc    DWORD PTR [rax],eax
    e427:	00 58 cf             	add    BYTE PTR [rax-0x31],bl
    e42a:	ff                   	(bad)  
    e42b:	ff b4 11 00 00 f3 d0 	push   QWORD PTR [rcx+rdx*1-0x2f0d0000]
    e432:	ff                   	(bad)  
    e433:	ff                   	(bad)  
    e434:	dc 11                	fcom   QWORD PTR [rcx]
    e436:	00 00                	add    BYTE PTR [rax],al
    e438:	98                   	cwde   
    e439:	d1 ff                	sar    edi,1
    e43b:	ff                   	(bad)  
    e43c:	fc                   	cld    
    e43d:	11 00                	adc    DWORD PTR [rax],eax
    e43f:	00 db                	add    bl,bl
    e441:	d2 ff                	sar    bh,cl
    e443:	ff 1c 12             	call   FWORD PTR [rdx+rdx*1]
    e446:	00 00                	add    BYTE PTR [rax],al
    e448:	ce                   	(bad)  
    e449:	d3 ff                	sar    edi,cl
    e44b:	ff                   	(bad)  
    e44c:	3c 12                	cmp    al,0x12
    e44e:	00 00                	add    BYTE PTR [rax],al
    e450:	3e d4                	ds (bad) 
    e452:	ff                   	(bad)  
    e453:	ff 5c 12 00          	call   FWORD PTR [rdx+rdx*1+0x0]
    e457:	00 e3                	add    bl,ah
    e459:	d6                   	(bad)  
    e45a:	ff                   	(bad)  
    e45b:	ff                   	(bad)  
    e45c:	7c 12                	jl     e470 <__GNU_EH_FRAME_HDR+0x3b4>
    e45e:	00 00                	add    BYTE PTR [rax],al
    e460:	4d d7                	rex.WRB xlat BYTE PTR ds:[rbx]
    e462:	ff                   	(bad)  
    e463:	ff 9c 12 00 00 bb d7 	call   FWORD PTR [rdx+rdx*1-0x28450000]
    e46a:	ff                   	(bad)  
    e46b:	ff                   	(bad)  
    e46c:	bc 12 00 00 54       	mov    esp,0x54000012
    e471:	d9 ff                	fcos   
    e473:	ff e4                	jmp    rsp
    e475:	12 00                	adc    al,BYTE PTR [rax]
    e477:	00 c4                	add    ah,al
    e479:	d9 ff                	fcos   
    e47b:	ff 2c 13             	jmp    FWORD PTR [rbx+rdx*1]
	...

Disassembly of section .eh_frame:

000000000000e480 <__FRAME_END__-0xf7c>:
    e480:	14 00                	adc    al,0x0
    e482:	00 00                	add    BYTE PTR [rax],al
    e484:	00 00                	add    BYTE PTR [rax],al
    e486:	00 00                	add    BYTE PTR [rax],al
    e488:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    e48b:	00 01                	add    BYTE PTR [rcx],al
    e48d:	78 10                	js     e49f <__GNU_EH_FRAME_HDR+0x3e3>
    e48f:	01 1b                	add    DWORD PTR [rbx],ebx
    e491:	0c 07                	or     al,0x7
    e493:	08 90 01 00 00 14    	or     BYTE PTR [rax+0x14000001],dl
    e499:	00 00                	add    BYTE PTR [rax],al
    e49b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e49e:	00 00                	add    BYTE PTR [rax],al
    e4a0:	00 44 ff ff          	add    BYTE PTR [rdi+rdi*8-0x1],al
    e4a4:	2f                   	(bad)  
    e4a5:	00 00                	add    BYTE PTR [rax],al
    e4a7:	00 00                	add    BYTE PTR [rax],al
    e4a9:	44 07                	rex.R (bad) 
    e4ab:	10 00                	adc    BYTE PTR [rax],al
    e4ad:	00 00                	add    BYTE PTR [rax],al
    e4af:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    e4b2:	00 00                	add    BYTE PTR [rax],al
    e4b4:	34 00                	xor    al,0x0
    e4b6:	00 00                	add    BYTE PTR [rax],al
    e4b8:	68 3b ff ff 40       	push   0x40ffff3b
    e4bd:	04 00                	add    al,0x0
    e4bf:	00 00                	add    BYTE PTR [rax],al
    e4c1:	0e                   	(bad)  
    e4c2:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
    e4c5:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
    e4c8:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
    e4cb:	80 00 3f             	add    BYTE PTR [rax],0x3f
    e4ce:	1a 3a                	sbb    bh,BYTE PTR [rdx]
    e4d0:	2a 33                	sub    dh,BYTE PTR [rbx]
    e4d2:	24 22                	and    al,0x22
    e4d4:	00 00                	add    BYTE PTR [rax],al
    e4d6:	00 00                	add    BYTE PTR [rax],al
    e4d8:	14 00                	adc    al,0x0
    e4da:	00 00                	add    BYTE PTR [rax],al
    e4dc:	5c                   	pop    rsp
    e4dd:	00 00                	add    BYTE PTR [rax],al
    e4df:	00 80 3f ff ff 10    	add    BYTE PTR [rax+0x10ffff3f],al
	...
    e4ed:	00 00                	add    BYTE PTR [rax],al
    e4ef:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    e4f2:	00 00                	add    BYTE PTR [rax],al
    e4f4:	74 00                	je     e4f6 <__GNU_EH_FRAME_HDR+0x43a>
    e4f6:	00 00                	add    BYTE PTR [rax],al
    e4f8:	78 3f                	js     e539 <__GNU_EH_FRAME_HDR+0x47d>
    e4fa:	ff                   	(bad)  
    e4fb:	ff 30                	push   QWORD PTR [rax]
    e4fd:	04 00                	add    al,0x0
	...
    e507:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e50a:	00 00                	add    BYTE PTR [rax],al
    e50c:	8c 00                	mov    WORD PTR [rax],es
    e50e:	00 00                	add    BYTE PTR [rax],al
    e510:	79 44                	jns    e556 <__GNU_EH_FRAME_HDR+0x49a>
    e512:	ff                   	(bad)  
    e513:	ff                   	(bad)  
    e514:	3a 00                	cmp    al,BYTE PTR [rax]
    e516:	00 00                	add    BYTE PTR [rax],al
    e518:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e51b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e521:	71 0c                	jno    e52f <__GNU_EH_FRAME_HDR+0x473>
    e523:	07                   	(bad)  
    e524:	08 00                	or     BYTE PTR [rax],al
    e526:	00 00                	add    BYTE PTR [rax],al
    e528:	24 00                	and    al,0x0
    e52a:	00 00                	add    BYTE PTR [rax],al
    e52c:	ac                   	lods   al,BYTE PTR ds:[rsi]
    e52d:	00 00                	add    BYTE PTR [rax],al
    e52f:	00 93 44 ff ff 4d    	add    BYTE PTR [rbx+0x4dffff44],dl
    e535:	01 00                	add    DWORD PTR [rax],eax
    e537:	00 00                	add    BYTE PTR [rax],al
    e539:	45 0e                	rex.RB (bad) 
    e53b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e541:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    e545:	3f                   	(bad)  
    e546:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    e549:	08 00                	or     BYTE PTR [rax],al
    e54b:	00 00                	add    BYTE PTR [rax],al
    e54d:	00 00                	add    BYTE PTR [rax],al
    e54f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e552:	00 00                	add    BYTE PTR [rax],al
    e554:	d4                   	(bad)  
    e555:	00 00                	add    BYTE PTR [rax],al
    e557:	00 b8 45 ff ff f4    	add    BYTE PTR [rax-0xb0000bb],bh
    e55d:	02 00                	add    al,BYTE PTR [rax]
    e55f:	00 00                	add    BYTE PTR [rax],al
    e561:	45 0e                	rex.RB (bad) 
    e563:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e569:	03 eb                	add    ebp,ebx
    e56b:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    e56e:	08 00                	or     BYTE PTR [rax],al
    e570:	1c 00                	sbb    al,0x0
    e572:	00 00                	add    BYTE PTR [rax],al
    e574:	f4                   	hlt    
    e575:	00 00                	add    BYTE PTR [rax],al
    e577:	00 8c 48 ff ff 13 01 	add    BYTE PTR [rax+rcx*2+0x113ffff],cl
    e57e:	00 00                	add    BYTE PTR [rax],al
    e580:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e583:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e589:	03 0a                	add    ecx,DWORD PTR [rdx]
    e58b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    e58e:	08 00                	or     BYTE PTR [rax],al
    e590:	1c 00                	sbb    al,0x0
    e592:	00 00                	add    BYTE PTR [rax],al
    e594:	14 01                	adc    al,0x1
    e596:	00 00                	add    BYTE PTR [rax],al
    e598:	7f 49                	jg     e5e3 <__GNU_EH_FRAME_HDR+0x527>
    e59a:	ff                   	(bad)  
    e59b:	ff ae 00 00 00 00    	jmp    FWORD PTR [rsi+0x0]
    e5a1:	45 0e                	rex.RB (bad) 
    e5a3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e5a9:	02 a5 0c 07 08 00    	add    ah,BYTE PTR [rbp+0x8070c]
    e5af:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e5b2:	00 00                	add    BYTE PTR [rax],al
    e5b4:	34 01                	xor    al,0x1
    e5b6:	00 00                	add    BYTE PTR [rax],al
    e5b8:	0d 4a ff ff a6       	or     eax,0xa6ffff4a
    e5bd:	00 00                	add    BYTE PTR [rax],al
    e5bf:	00 00                	add    BYTE PTR [rax],al
    e5c1:	45 0e                	rex.RB (bad) 
    e5c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e5c9:	02 9d 0c 07 08 00    	add    bl,BYTE PTR [rbp+0x8070c]
    e5cf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e5d2:	00 00                	add    BYTE PTR [rax],al
    e5d4:	54                   	push   rsp
    e5d5:	01 00                	add    DWORD PTR [rax],eax
    e5d7:	00 93 4a ff ff 95    	add    BYTE PTR [rbx-0x6a0000b6],dl
    e5dd:	00 00                	add    BYTE PTR [rax],al
    e5df:	00 00                	add    BYTE PTR [rax],al
    e5e1:	45 0e                	rex.RB (bad) 
    e5e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e5e9:	02 8c 0c 07 08 00 00 	add    cl,BYTE PTR [rsp+rcx*1+0x807]
    e5f0:	1c 00                	sbb    al,0x0
    e5f2:	00 00                	add    BYTE PTR [rax],al
    e5f4:	74 01                	je     e5f7 <__GNU_EH_FRAME_HDR+0x53b>
    e5f6:	00 00                	add    BYTE PTR [rax],al
    e5f8:	08 4b ff             	or     BYTE PTR [rbx-0x1],cl
    e5fb:	ff 94 00 00 00 00 45 	call   QWORD PTR [rax+rax*1+0x45000000]
    e602:	0e                   	(bad)  
    e603:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e609:	02 8b 0c 07 08 00    	add    cl,BYTE PTR [rbx+0x8070c]
    e60f:	00 28                	add    BYTE PTR [rax],ch
    e611:	00 00                	add    BYTE PTR [rax],al
    e613:	00 94 01 00 00 7c 4b 	add    BYTE PTR [rcx+rax*1+0x4b7c0000],dl
    e61a:	ff                   	(bad)  
    e61b:	ff cc                	dec    esp
    e61d:	01 00                	add    DWORD PTR [rax],eax
    e61f:	00 00                	add    BYTE PTR [rax],al
    e621:	45 0e                	rex.RB (bad) 
    e623:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e629:	4d 8f 03             	rex.WRB pop QWORD PTR [r11]
    e62c:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
    e633:	07                   	(bad)  
    e634:	03 b6 01 0c 07 08    	add    esi,DWORD PTR [rsi+0x8070c01]
    e63a:	00 00                	add    BYTE PTR [rax],al
    e63c:	20 00                	and    BYTE PTR [rax],al
    e63e:	00 00                	add    BYTE PTR [rax],al
    e640:	c0 01 00             	rol    BYTE PTR [rcx],0x0
    e643:	00 1c 4d ff ff d4 00 	add    BYTE PTR [rcx*2+0xd4ffff],bl
    e64a:	00 00                	add    BYTE PTR [rax],al
    e64c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e64f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e655:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    e659:	c6                   	(bad)  
    e65a:	0c 07                	or     al,0x7
    e65c:	08 00                	or     BYTE PTR [rax],al
    e65e:	00 00                	add    BYTE PTR [rax],al
    e660:	20 00                	and    BYTE PTR [rax],al
    e662:	00 00                	add    BYTE PTR [rax],al
    e664:	e4 01                	in     al,0x1
    e666:	00 00                	add    BYTE PTR [rax],al
    e668:	cc                   	int3   
    e669:	4d ff                	rex.WRB (bad) 
    e66b:	ff c7                	inc    edi
    e66d:	00 00                	add    BYTE PTR [rax],al
    e66f:	00 00                	add    BYTE PTR [rax],al
    e671:	45 0e                	rex.RB (bad) 
    e673:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e679:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    e67d:	b9 0c 07 08 00       	mov    ecx,0x8070c
    e682:	00 00                	add    BYTE PTR [rax],al
    e684:	1c 00                	sbb    al,0x0
    e686:	00 00                	add    BYTE PTR [rax],al
    e688:	08 02                	or     BYTE PTR [rdx],al
    e68a:	00 00                	add    BYTE PTR [rax],al
    e68c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e68d:	4e ff                	rex.WRX (bad) 
    e68f:	ff 53 00             	call   QWORD PTR [rbx+0x0]
    e692:	00 00                	add    BYTE PTR [rax],al
    e694:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e697:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e69d:	02 4a 0c             	add    cl,BYTE PTR [rdx+0xc]
    e6a0:	07                   	(bad)  
    e6a1:	08 00                	or     BYTE PTR [rax],al
    e6a3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e6a6:	00 00                	add    BYTE PTR [rax],al
    e6a8:	28 02                	sub    BYTE PTR [rdx],al
    e6aa:	00 00                	add    BYTE PTR [rax],al
    e6ac:	a2 4e ff ff 33 00 00 	movabs ds:0x33ffff4e,al
    e6b3:	00 00 
    e6b5:	45 0e                	rex.RB (bad) 
    e6b7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e6bd:	6a 0c                	push   0xc
    e6bf:	07                   	(bad)  
    e6c0:	08 00                	or     BYTE PTR [rax],al
    e6c2:	00 00                	add    BYTE PTR [rax],al
    e6c4:	1c 00                	sbb    al,0x0
    e6c6:	00 00                	add    BYTE PTR [rax],al
    e6c8:	48 02 00             	rex.W add al,BYTE PTR [rax]
    e6cb:	00 b5 4e ff ff 21    	add    BYTE PTR [rbp+0x21ffff4e],dh
    e6d1:	00 00                	add    BYTE PTR [rax],al
    e6d3:	00 00                	add    BYTE PTR [rax],al
    e6d5:	45 0e                	rex.RB (bad) 
    e6d7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e6dd:	58                   	pop    rax
    e6de:	0c 07                	or     al,0x7
    e6e0:	08 00                	or     BYTE PTR [rax],al
    e6e2:	00 00                	add    BYTE PTR [rax],al
    e6e4:	20 00                	and    BYTE PTR [rax],al
    e6e6:	00 00                	add    BYTE PTR [rax],al
    e6e8:	68 02 00 00 b6       	push   0xffffffffb6000002
    e6ed:	4e ff                	rex.WRX (bad) 
    e6ef:	ff 69 00             	jmp    FWORD PTR [rcx+0x0]
    e6f2:	00 00                	add    BYTE PTR [rax],al
    e6f4:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e6f7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e6fd:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    e701:	5b                   	pop    rbx
    e702:	0c 07                	or     al,0x7
    e704:	08 00                	or     BYTE PTR [rax],al
    e706:	00 00                	add    BYTE PTR [rax],al
    e708:	1c 00                	sbb    al,0x0
    e70a:	00 00                	add    BYTE PTR [rax],al
    e70c:	8c 02                	mov    WORD PTR [rdx],es
    e70e:	00 00                	add    BYTE PTR [rax],al
    e710:	fb                   	sti    
    e711:	4e ff                	rex.WRX (bad) 
    e713:	ff 25 04 00 00 00    	jmp    QWORD PTR [rip+0x4]        # e71d <__GNU_EH_FRAME_HDR+0x661>
    e719:	45 0e                	rex.RB (bad) 
    e71b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e721:	03 1c 04             	add    ebx,DWORD PTR [rsp+rax*1]
    e724:	0c 07                	or     al,0x7
    e726:	08 00                	or     BYTE PTR [rax],al
    e728:	1c 00                	sbb    al,0x0
    e72a:	00 00                	add    BYTE PTR [rax],al
    e72c:	ac                   	lods   al,BYTE PTR ds:[rsi]
    e72d:	02 00                	add    al,BYTE PTR [rax]
    e72f:	00 00                	add    BYTE PTR [rax],al
    e731:	53                   	push   rbx
    e732:	ff                   	(bad)  
    e733:	ff 5d 01             	call   FWORD PTR [rbp+0x1]
    e736:	00 00                	add    BYTE PTR [rax],al
    e738:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e73b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e741:	03 54 01 0c          	add    edx,DWORD PTR [rcx+rax*1+0xc]
    e745:	07                   	(bad)  
    e746:	08 00                	or     BYTE PTR [rax],al
    e748:	1c 00                	sbb    al,0x0
    e74a:	00 00                	add    BYTE PTR [rax],al
    e74c:	cc                   	int3   
    e74d:	02 00                	add    al,BYTE PTR [rax]
    e74f:	00 3d 54 ff ff 44    	add    BYTE PTR [rip+0x44ffff54],bh        # 4500e6a9 <_end+0x44ed3689>
    e755:	08 00                	or     BYTE PTR [rax],al
    e757:	00 00                	add    BYTE PTR [rax],al
    e759:	45 0e                	rex.RB (bad) 
    e75b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e761:	03 3b                	add    edi,DWORD PTR [rbx]
    e763:	08 0c 07             	or     BYTE PTR [rdi+rax*1],cl
    e766:	08 00                	or     BYTE PTR [rax],al
    e768:	1c 00                	sbb    al,0x0
    e76a:	00 00                	add    BYTE PTR [rax],al
    e76c:	ec                   	in     al,dx
    e76d:	02 00                	add    al,BYTE PTR [rax]
    e76f:	00 61 5c             	add    BYTE PTR [rcx+0x5c],ah
    e772:	ff                   	(bad)  
    e773:	ff 43 09             	inc    DWORD PTR [rbx+0x9]
    e776:	00 00                	add    BYTE PTR [rax],al
    e778:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e77b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e781:	03 3a                	add    edi,DWORD PTR [rdx]
    e783:	09 0c 07             	or     DWORD PTR [rdi+rax*1],ecx
    e786:	08 00                	or     BYTE PTR [rax],al
    e788:	1c 00                	sbb    al,0x0
    e78a:	00 00                	add    BYTE PTR [rax],al
    e78c:	0c 03                	or     al,0x3
    e78e:	00 00                	add    BYTE PTR [rax],al
    e790:	84 65 ff             	test   BYTE PTR [rbp-0x1],ah
    e793:	ff 55 01             	call   QWORD PTR [rbp+0x1]
    e796:	00 00                	add    BYTE PTR [rax],al
    e798:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e79b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e7a1:	03 4c 01 0c          	add    ecx,DWORD PTR [rcx+rax*1+0xc]
    e7a5:	07                   	(bad)  
    e7a6:	08 00                	or     BYTE PTR [rax],al
    e7a8:	1c 00                	sbb    al,0x0
    e7aa:	00 00                	add    BYTE PTR [rax],al
    e7ac:	2c 03                	sub    al,0x3
    e7ae:	00 00                	add    BYTE PTR [rax],al
    e7b0:	b9 66 ff ff ff       	mov    ecx,0xffffff66
    e7b5:	00 00                	add    BYTE PTR [rax],al
    e7b7:	00 00                	add    BYTE PTR [rax],al
    e7b9:	45 0e                	rex.RB (bad) 
    e7bb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e7c1:	02 f6                	add    dh,dh
    e7c3:	0c 07                	or     al,0x7
    e7c5:	08 00                	or     BYTE PTR [rax],al
    e7c7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e7ca:	00 00                	add    BYTE PTR [rax],al
    e7cc:	4c 03 00             	add    r8,QWORD PTR [rax]
    e7cf:	00 98 67 ff ff ec    	add    BYTE PTR [rax-0x13000099],bl
    e7d5:	00 00                	add    BYTE PTR [rax],al
    e7d7:	00 00                	add    BYTE PTR [rax],al
    e7d9:	45 0e                	rex.RB (bad) 
    e7db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e7e1:	02 e3                	add    ah,bl
    e7e3:	0c 07                	or     al,0x7
    e7e5:	08 00                	or     BYTE PTR [rax],al
    e7e7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e7ea:	00 00                	add    BYTE PTR [rax],al
    e7ec:	6c                   	ins    BYTE PTR es:[rdi],dx
    e7ed:	03 00                	add    eax,DWORD PTR [rax]
    e7ef:	00 64 68 ff          	add    BYTE PTR [rax+rbp*2-0x1],ah
    e7f3:	ff b2 03 00 00 00    	push   QWORD PTR [rdx+0x3]
    e7f9:	45 0e                	rex.RB (bad) 
    e7fb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e801:	03 a9 03 0c 07 08    	add    ebp,DWORD PTR [rcx+0x8070c03]
    e807:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e80a:	00 00                	add    BYTE PTR [rax],al
    e80c:	8c 03                	mov    WORD PTR [rbx],es
    e80e:	00 00                	add    BYTE PTR [rax],al
    e810:	f6 6b ff             	imul   BYTE PTR [rbx-0x1]
    e813:	ff 83 00 00 00 00    	inc    DWORD PTR [rbx+0x0]
    e819:	45 0e                	rex.RB (bad) 
    e81b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e821:	02 7a 0c             	add    bh,BYTE PTR [rdx+0xc]
    e824:	07                   	(bad)  
    e825:	08 00                	or     BYTE PTR [rax],al
    e827:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    e82a:	00 00                	add    BYTE PTR [rax],al
    e82c:	ac                   	lods   al,BYTE PTR ds:[rsi]
    e82d:	03 00                	add    eax,DWORD PTR [rax]
    e82f:	00 59 6c             	add    BYTE PTR [rcx+0x6c],bl
    e832:	ff                   	(bad)  
    e833:	ff 2a                	jmp    FWORD PTR [rdx]
    e835:	02 00                	add    al,BYTE PTR [rax]
    e837:	00 00                	add    BYTE PTR [rax],al
    e839:	45 0e                	rex.RB (bad) 
    e83b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e841:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    e845:	19 02                	sbb    DWORD PTR [rdx],eax
    e847:	0c 07                	or     al,0x7
    e849:	08 00                	or     BYTE PTR [rax],al
    e84b:	00 00                	add    BYTE PTR [rax],al
    e84d:	00 00                	add    BYTE PTR [rax],al
    e84f:	00 20                	add    BYTE PTR [rax],ah
    e851:	00 00                	add    BYTE PTR [rax],al
    e853:	00 d4                	add    ah,dl
    e855:	03 00                	add    eax,DWORD PTR [rax]
    e857:	00 5b 6e             	add    BYTE PTR [rbx+0x6e],bl
    e85a:	ff                   	(bad)  
    e85b:	ff 40 02             	inc    DWORD PTR [rax+0x2]
    e85e:	00 00                	add    BYTE PTR [rax],al
    e860:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e863:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e869:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    e86d:	32 02                	xor    al,BYTE PTR [rdx]
    e86f:	0c 07                	or     al,0x7
    e871:	08 00                	or     BYTE PTR [rax],al
    e873:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e876:	00 00                	add    BYTE PTR [rax],al
    e878:	f8                   	clc    
    e879:	03 00                	add    eax,DWORD PTR [rax]
    e87b:	00 77 70             	add    BYTE PTR [rdi+0x70],dh
    e87e:	ff                   	(bad)  
    e87f:	ff 66 00             	jmp    QWORD PTR [rsi+0x0]
    e882:	00 00                	add    BYTE PTR [rax],al
    e884:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e887:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e88d:	02 5d 0c             	add    bl,BYTE PTR [rbp+0xc]
    e890:	07                   	(bad)  
    e891:	08 00                	or     BYTE PTR [rax],al
    e893:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e896:	00 00                	add    BYTE PTR [rax],al
    e898:	18 04 00             	sbb    BYTE PTR [rax+rax*1],al
    e89b:	00 bd 70 ff ff 17    	add    BYTE PTR [rbp+0x17ffff70],bh
    e8a1:	00 00                	add    BYTE PTR [rax],al
    e8a3:	00 00                	add    BYTE PTR [rax],al
    e8a5:	45 0e                	rex.RB (bad) 
    e8a7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e8ad:	4e 0c 07             	rex.WRX or al,0x7
    e8b0:	08 00                	or     BYTE PTR [rax],al
    e8b2:	00 00                	add    BYTE PTR [rax],al
    e8b4:	20 00                	and    BYTE PTR [rax],al
    e8b6:	00 00                	add    BYTE PTR [rax],al
    e8b8:	38 04 00             	cmp    BYTE PTR [rax+rax*1],al
    e8bb:	00 b4 70 ff ff 51 00 	add    BYTE PTR [rax+rsi*2+0x51ffff],dh
    e8c2:	00 00                	add    BYTE PTR [rax],al
    e8c4:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e8c7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e8cd:	02 48 0c             	add    cl,BYTE PTR [rax+0xc]
    e8d0:	07                   	(bad)  
    e8d1:	08 00                	or     BYTE PTR [rax],al
    e8d3:	00 00                	add    BYTE PTR [rax],al
    e8d5:	00 00                	add    BYTE PTR [rax],al
    e8d7:	00 20                	add    BYTE PTR [rax],ah
    e8d9:	00 00                	add    BYTE PTR [rax],al
    e8db:	00 5c 04 00          	add    BYTE PTR [rsp+rax*1+0x0],bl
    e8df:	00 e1                	add    cl,ah
    e8e1:	70 ff                	jo     e8e2 <__GNU_EH_FRAME_HDR+0x826>
    e8e3:	ff 40 06             	inc    DWORD PTR [rax+0x6]
    e8e6:	00 00                	add    BYTE PTR [rax],al
    e8e8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e8eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e8f1:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    e8f5:	32 06                	xor    al,BYTE PTR [rsi]
    e8f7:	0c 07                	or     al,0x7
    e8f9:	08 00                	or     BYTE PTR [rax],al
    e8fb:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e8fe:	00 00                	add    BYTE PTR [rax],al
    e900:	80 04 00 00          	add    BYTE PTR [rax+rax*1],0x0
    e904:	fd                   	std    
    e905:	76 ff                	jbe    e906 <__GNU_EH_FRAME_HDR+0x84a>
    e907:	ff 1a                	call   FWORD PTR [rdx]
    e909:	00 00                	add    BYTE PTR [rax],al
    e90b:	00 00                	add    BYTE PTR [rax],al
    e90d:	45 0e                	rex.RB (bad) 
    e90f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e915:	51                   	push   rcx
    e916:	0c 07                	or     al,0x7
    e918:	08 00                	or     BYTE PTR [rax],al
    e91a:	00 00                	add    BYTE PTR [rax],al
    e91c:	1c 00                	sbb    al,0x0
    e91e:	00 00                	add    BYTE PTR [rax],al
    e920:	a0 04 00 00 f7 76 ff 	movabs al,ds:0x29ffff76f7000004
    e927:	ff 29 
    e929:	00 00                	add    BYTE PTR [rax],al
    e92b:	00 00                	add    BYTE PTR [rax],al
    e92d:	45 0e                	rex.RB (bad) 
    e92f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e935:	60                   	(bad)  
    e936:	0c 07                	or     al,0x7
    e938:	08 00                	or     BYTE PTR [rax],al
    e93a:	00 00                	add    BYTE PTR [rax],al
    e93c:	1c 00                	sbb    al,0x0
    e93e:	00 00                	add    BYTE PTR [rax],al
    e940:	c0 04 00 00          	rol    BYTE PTR [rax+rax*1],0x0
    e944:	00 77 ff             	add    BYTE PTR [rdi-0x1],dh
    e947:	ff 30                	push   QWORD PTR [rax]
    e949:	00 00                	add    BYTE PTR [rax],al
    e94b:	00 00                	add    BYTE PTR [rax],al
    e94d:	45 0e                	rex.RB (bad) 
    e94f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e955:	67 0c 07             	addr32 or al,0x7
    e958:	08 00                	or     BYTE PTR [rax],al
    e95a:	00 00                	add    BYTE PTR [rax],al
    e95c:	18 00                	sbb    BYTE PTR [rax],al
    e95e:	00 00                	add    BYTE PTR [rax],al
    e960:	e0 04                	loopne e966 <__GNU_EH_FRAME_HDR+0x8aa>
    e962:	00 00                	add    BYTE PTR [rax],al
    e964:	10 77 ff             	adc    BYTE PTR [rdi-0x1],dh
    e967:	ff 37                	push   QWORD PTR [rdi]
    e969:	00 00                	add    BYTE PTR [rax],al
    e96b:	00 00                	add    BYTE PTR [rax],al
    e96d:	45 0e                	rex.RB (bad) 
    e96f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e975:	00 00                	add    BYTE PTR [rax],al
    e977:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e97a:	00 00                	add    BYTE PTR [rax],al
    e97c:	fc                   	cld    
    e97d:	04 00                	add    al,0x0
    e97f:	00 2b                	add    BYTE PTR [rbx],ch
    e981:	77 ff                	ja     e982 <__GNU_EH_FRAME_HDR+0x8c6>
    e983:	ff 45 01             	inc    DWORD PTR [rbp+0x1]
    e986:	00 00                	add    BYTE PTR [rax],al
    e988:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e98b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e991:	03 3c 01             	add    edi,DWORD PTR [rcx+rax*1]
    e994:	0c 07                	or     al,0x7
    e996:	08 00                	or     BYTE PTR [rax],al
    e998:	1c 00                	sbb    al,0x0
    e99a:	00 00                	add    BYTE PTR [rax],al
    e99c:	1c 05                	sbb    al,0x5
    e99e:	00 00                	add    BYTE PTR [rax],al
    e9a0:	50                   	push   rax
    e9a1:	78 ff                	js     e9a2 <__GNU_EH_FRAME_HDR+0x8e6>
    e9a3:	ff 60 01             	jmp    QWORD PTR [rax+0x1]
    e9a6:	00 00                	add    BYTE PTR [rax],al
    e9a8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e9ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e9b1:	03 57 01             	add    edx,DWORD PTR [rdi+0x1]
    e9b4:	0c 07                	or     al,0x7
    e9b6:	08 00                	or     BYTE PTR [rax],al
    e9b8:	1c 00                	sbb    al,0x0
    e9ba:	00 00                	add    BYTE PTR [rax],al
    e9bc:	3c 05                	cmp    al,0x5
    e9be:	00 00                	add    BYTE PTR [rax],al
    e9c0:	90                   	nop
    e9c1:	79 ff                	jns    e9c2 <__GNU_EH_FRAME_HDR+0x906>
    e9c3:	ff 61 00             	jmp    QWORD PTR [rcx+0x0]
    e9c6:	00 00                	add    BYTE PTR [rax],al
    e9c8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e9cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e9d1:	02 58 0c             	add    bl,BYTE PTR [rax+0xc]
    e9d4:	07                   	(bad)  
    e9d5:	08 00                	or     BYTE PTR [rax],al
    e9d7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e9da:	00 00                	add    BYTE PTR [rax],al
    e9dc:	5c                   	pop    rsp
    e9dd:	05 00 00 d1 79       	add    eax,0x79d10000
    e9e2:	ff                   	(bad)  
    e9e3:	ff                   	(bad)  
    e9e4:	39 00                	cmp    DWORD PTR [rax],eax
    e9e6:	00 00                	add    BYTE PTR [rax],al
    e9e8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e9eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e9f1:	70 0c                	jo     e9ff <__GNU_EH_FRAME_HDR+0x943>
    e9f3:	07                   	(bad)  
    e9f4:	08 00                	or     BYTE PTR [rax],al
    e9f6:	00 00                	add    BYTE PTR [rax],al
    e9f8:	1c 00                	sbb    al,0x0
    e9fa:	00 00                	add    BYTE PTR [rax],al
    e9fc:	7c 05                	jl     ea03 <__GNU_EH_FRAME_HDR+0x947>
    e9fe:	00 00                	add    BYTE PTR [rax],al
    ea00:	ea                   	(bad)  
    ea01:	79 ff                	jns    ea02 <__GNU_EH_FRAME_HDR+0x946>
    ea03:	ff                   	(bad)  
    ea04:	be 00 00 00 00       	mov    esi,0x0
    ea09:	45 0e                	rex.RB (bad) 
    ea0b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea11:	02 b5 0c 07 08 00    	add    dh,BYTE PTR [rbp+0x8070c]
    ea17:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ea1a:	00 00                	add    BYTE PTR [rax],al
    ea1c:	9c                   	pushf  
    ea1d:	05 00 00 88 7a       	add    eax,0x7a880000
    ea22:	ff                   	(bad)  
    ea23:	ff                   	(bad)  
    ea24:	be 02 00 00 00       	mov    esi,0x2
    ea29:	45 0e                	rex.RB (bad) 
    ea2b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea31:	03 b5 02 0c 07 08    	add    esi,DWORD PTR [rbp+0x8070c02]
    ea37:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ea3a:	00 00                	add    BYTE PTR [rax],al
    ea3c:	bc 05 00 00 26       	mov    esp,0x26000005
    ea41:	7d ff                	jge    ea42 <__GNU_EH_FRAME_HDR+0x986>
    ea43:	ff                   	(bad)  
    ea44:	f8                   	clc    
    ea45:	01 00                	add    DWORD PTR [rax],eax
    ea47:	00 00                	add    BYTE PTR [rax],al
    ea49:	45 0e                	rex.RB (bad) 
    ea4b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea51:	03 ef                	add    ebp,edi
    ea53:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ea56:	08 00                	or     BYTE PTR [rax],al
    ea58:	1c 00                	sbb    al,0x0
    ea5a:	00 00                	add    BYTE PTR [rax],al
    ea5c:	dc 05 00 00 fe 7e    	fadd   QWORD PTR [rip+0x7efe0000]        # 7efeea62 <_end+0x7eeb3a42>
    ea62:	ff                   	(bad)  
    ea63:	ff 5a 00             	call   FWORD PTR [rdx+0x0]
    ea66:	00 00                	add    BYTE PTR [rax],al
    ea68:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ea6b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea71:	02 51 0c             	add    dl,BYTE PTR [rcx+0xc]
    ea74:	07                   	(bad)  
    ea75:	08 00                	or     BYTE PTR [rax],al
    ea77:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ea7a:	00 00                	add    BYTE PTR [rax],al
    ea7c:	fc                   	cld    
    ea7d:	05 00 00 38 7f       	add    eax,0x7f380000
    ea82:	ff                   	(bad)  
    ea83:	ff 0f                	dec    DWORD PTR [rdi]
    ea85:	03 00                	add    eax,DWORD PTR [rax]
    ea87:	00 00                	add    BYTE PTR [rax],al
    ea89:	45 0e                	rex.RB (bad) 
    ea8b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea91:	03 06                	add    eax,DWORD PTR [rsi]
    ea93:	03 0c 07             	add    ecx,DWORD PTR [rdi+rax*1]
    ea96:	08 00                	or     BYTE PTR [rax],al
    ea98:	1c 00                	sbb    al,0x0
    ea9a:	00 00                	add    BYTE PTR [rax],al
    ea9c:	1c 06                	sbb    al,0x6
    ea9e:	00 00                	add    BYTE PTR [rax],al
    eaa0:	27                   	(bad)  
    eaa1:	82                   	(bad)  
    eaa2:	ff                   	(bad)  
    eaa3:	ff 55 04             	call   QWORD PTR [rbp+0x4]
    eaa6:	00 00                	add    BYTE PTR [rax],al
    eaa8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eaab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eab1:	4a 8c 03             	rex.WX mov WORD PTR [rbx],es
    eab4:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
    eab8:	18 00                	sbb    BYTE PTR [rax],al
    eaba:	00 00                	add    BYTE PTR [rax],al
    eabc:	3c 06                	cmp    al,0x6
    eabe:	00 00                	add    BYTE PTR [rax],al
    eac0:	5c                   	pop    rsp
    eac1:	86 ff                	xchg   bh,bh
    eac3:	ff 2a                	jmp    FWORD PTR [rdx]
    eac5:	00 00                	add    BYTE PTR [rax],al
    eac7:	00 00                	add    BYTE PTR [rax],al
    eac9:	45 0e                	rex.RB (bad) 
    eacb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ead1:	00 00                	add    BYTE PTR [rax],al
    ead3:	00 20                	add    BYTE PTR [rax],ah
    ead5:	00 00                	add    BYTE PTR [rax],al
    ead7:	00 58 06             	add    BYTE PTR [rax+0x6],bl
    eada:	00 00                	add    BYTE PTR [rax],al
    eadc:	6a 86                	push   0xffffffffffffff86
    eade:	ff                   	(bad)  
    eadf:	ff b7 01 00 00 00    	push   QWORD PTR [rdi+0x1]
    eae5:	45 0e                	rex.RB (bad) 
    eae7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eaed:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    eaf1:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    eaf2:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    eaf5:	08 00                	or     BYTE PTR [rax],al
    eaf7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eafa:	00 00                	add    BYTE PTR [rax],al
    eafc:	7c 06                	jl     eb04 <__GNU_EH_FRAME_HDR+0xa48>
    eafe:	00 00                	add    BYTE PTR [rax],al
    eb00:	fd                   	std    
    eb01:	87 ff                	xchg   edi,edi
    eb03:	ff 17                	call   QWORD PTR [rdi]
    eb05:	00 00                	add    BYTE PTR [rax],al
    eb07:	00 00                	add    BYTE PTR [rax],al
    eb09:	45 0e                	rex.RB (bad) 
    eb0b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb11:	4e 0c 07             	rex.WRX or al,0x7
    eb14:	08 00                	or     BYTE PTR [rax],al
    eb16:	00 00                	add    BYTE PTR [rax],al
    eb18:	1c 00                	sbb    al,0x0
    eb1a:	00 00                	add    BYTE PTR [rax],al
    eb1c:	9c                   	pushf  
    eb1d:	06                   	(bad)  
    eb1e:	00 00                	add    BYTE PTR [rax],al
    eb20:	f4                   	hlt    
    eb21:	87 ff                	xchg   edi,edi
    eb23:	ff 4f 00             	dec    DWORD PTR [rdi+0x0]
    eb26:	00 00                	add    BYTE PTR [rax],al
    eb28:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eb2b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb31:	02 46 0c             	add    al,BYTE PTR [rsi+0xc]
    eb34:	07                   	(bad)  
    eb35:	08 00                	or     BYTE PTR [rax],al
    eb37:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eb3a:	00 00                	add    BYTE PTR [rax],al
    eb3c:	bc 06 00 00 23       	mov    esp,0x23000006
    eb41:	88 ff                	mov    bh,bh
    eb43:	ff 4d 00             	dec    DWORD PTR [rbp+0x0]
    eb46:	00 00                	add    BYTE PTR [rax],al
    eb48:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eb4b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb51:	02 44 0c 07          	add    al,BYTE PTR [rsp+rcx*1+0x7]
    eb55:	08 00                	or     BYTE PTR [rax],al
    eb57:	00 18                	add    BYTE PTR [rax],bl
    eb59:	00 00                	add    BYTE PTR [rax],al
    eb5b:	00 dc                	add    ah,bl
    eb5d:	06                   	(bad)  
    eb5e:	00 00                	add    BYTE PTR [rax],al
    eb60:	50                   	push   rax
    eb61:	88 ff                	mov    bh,bh
    eb63:	ff 77 01             	push   QWORD PTR [rdi+0x1]
    eb66:	00 00                	add    BYTE PTR [rax],al
    eb68:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eb6b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb71:	00 00                	add    BYTE PTR [rax],al
    eb73:	00 20                	add    BYTE PTR [rax],ah
    eb75:	00 00                	add    BYTE PTR [rax],al
    eb77:	00 f8                	add    al,bh
    eb79:	06                   	(bad)  
    eb7a:	00 00                	add    BYTE PTR [rax],al
    eb7c:	ab                   	stos   DWORD PTR es:[rdi],eax
    eb7d:	89 ff                	mov    edi,edi
    eb7f:	ff 9c 00 00 00 00 45 	call   FWORD PTR [rax+rax*1+0x45000000]
    eb86:	0e                   	(bad)  
    eb87:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb8d:	02 93 0c 07 08 00    	add    dl,BYTE PTR [rbx+0x8070c]
    eb93:	00 00                	add    BYTE PTR [rax],al
    eb95:	00 00                	add    BYTE PTR [rax],al
    eb97:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eb9a:	00 00                	add    BYTE PTR [rax],al
    eb9c:	1c 07                	sbb    al,0x7
    eb9e:	00 00                	add    BYTE PTR [rax],al
    eba0:	23 8a ff ff ee 01    	and    ecx,DWORD PTR [rdx+0x1eeffff]
    eba6:	00 00                	add    BYTE PTR [rax],al
    eba8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ebab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ebb1:	03 e5                	add    esp,ebp
    ebb3:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ebb6:	08 00                	or     BYTE PTR [rax],al
    ebb8:	1c 00                	sbb    al,0x0
    ebba:	00 00                	add    BYTE PTR [rax],al
    ebbc:	3c 07                	cmp    al,0x7
    ebbe:	00 00                	add    BYTE PTR [rax],al
    ebc0:	f1                   	icebp  
    ebc1:	8b ff                	mov    edi,edi
    ebc3:	ff                   	(bad)  
    ebc4:	e8 01 00 00 00       	call   ebca <__GNU_EH_FRAME_HDR+0xb0e>
    ebc9:	45 0e                	rex.RB (bad) 
    ebcb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ebd1:	03 df                	add    ebx,edi
    ebd3:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ebd6:	08 00                	or     BYTE PTR [rax],al
    ebd8:	1c 00                	sbb    al,0x0
    ebda:	00 00                	add    BYTE PTR [rax],al
    ebdc:	5c                   	pop    rsp
    ebdd:	07                   	(bad)  
    ebde:	00 00                	add    BYTE PTR [rax],al
    ebe0:	b9 8d ff ff 6c       	mov    ecx,0x6cffff8d
    ebe5:	00 00                	add    BYTE PTR [rax],al
    ebe7:	00 00                	add    BYTE PTR [rax],al
    ebe9:	45 0e                	rex.RB (bad) 
    ebeb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ebf1:	02 63 0c             	add    ah,BYTE PTR [rbx+0xc]
    ebf4:	07                   	(bad)  
    ebf5:	08 00                	or     BYTE PTR [rax],al
    ebf7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ebfa:	00 00                	add    BYTE PTR [rax],al
    ebfc:	7c 07                	jl     ec05 <__GNU_EH_FRAME_HDR+0xb49>
    ebfe:	00 00                	add    BYTE PTR [rax],al
    ec00:	05 8e ff ff 72       	add    eax,0x72ffff8e
    ec05:	00 00                	add    BYTE PTR [rax],al
    ec07:	00 00                	add    BYTE PTR [rax],al
    ec09:	45 0e                	rex.RB (bad) 
    ec0b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec11:	02 69 0c             	add    ch,BYTE PTR [rcx+0xc]
    ec14:	07                   	(bad)  
    ec15:	08 00                	or     BYTE PTR [rax],al
    ec17:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ec1a:	00 00                	add    BYTE PTR [rax],al
    ec1c:	9c                   	pushf  
    ec1d:	07                   	(bad)  
    ec1e:	00 00                	add    BYTE PTR [rax],al
    ec20:	57                   	push   rdi
    ec21:	8e ff                	mov    ?,edi
    ec23:	ff 11                	call   QWORD PTR [rcx]
    ec25:	01 00                	add    DWORD PTR [rax],eax
    ec27:	00 00                	add    BYTE PTR [rax],al
    ec29:	45 0e                	rex.RB (bad) 
    ec2b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec31:	03 08                	add    ecx,DWORD PTR [rax]
    ec33:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ec36:	08 00                	or     BYTE PTR [rax],al
    ec38:	1c 00                	sbb    al,0x0
    ec3a:	00 00                	add    BYTE PTR [rax],al
    ec3c:	bc 07 00 00 48       	mov    esp,0x48000007
    ec41:	8f                   	(bad)  
    ec42:	ff                   	(bad)  
    ec43:	ff 5c 00 00          	call   FWORD PTR [rax+rax*1+0x0]
    ec47:	00 00                	add    BYTE PTR [rax],al
    ec49:	45 0e                	rex.RB (bad) 
    ec4b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec51:	02 53 0c             	add    dl,BYTE PTR [rbx+0xc]
    ec54:	07                   	(bad)  
    ec55:	08 00                	or     BYTE PTR [rax],al
    ec57:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ec5a:	00 00                	add    BYTE PTR [rax],al
    ec5c:	dc 07                	fadd   QWORD PTR [rdi]
    ec5e:	00 00                	add    BYTE PTR [rax],al
    ec60:	84 8f ff ff 3e 00    	test   BYTE PTR [rdi+0x3effff],cl
    ec66:	00 00                	add    BYTE PTR [rax],al
    ec68:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ec6b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec71:	75 0c                	jne    ec7f <__GNU_EH_FRAME_HDR+0xbc3>
    ec73:	07                   	(bad)  
    ec74:	08 00                	or     BYTE PTR [rax],al
    ec76:	00 00                	add    BYTE PTR [rax],al
    ec78:	1c 00                	sbb    al,0x0
    ec7a:	00 00                	add    BYTE PTR [rax],al
    ec7c:	fc                   	cld    
    ec7d:	07                   	(bad)  
    ec7e:	00 00                	add    BYTE PTR [rax],al
    ec80:	a2 8f ff ff 86 00 00 	movabs ds:0x86ffff8f,al
    ec87:	00 00 
    ec89:	45 0e                	rex.RB (bad) 
    ec8b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec91:	02 7d 0c             	add    bh,BYTE PTR [rbp+0xc]
    ec94:	07                   	(bad)  
    ec95:	08 00                	or     BYTE PTR [rax],al
    ec97:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ec9a:	00 00                	add    BYTE PTR [rax],al
    ec9c:	1c 08                	sbb    al,0x8
    ec9e:	00 00                	add    BYTE PTR [rax],al
    eca0:	08 90 ff ff df 00    	or     BYTE PTR [rax+0xdfffff],dl
    eca6:	00 00                	add    BYTE PTR [rax],al
    eca8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ecab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ecb1:	02 d6                	add    dl,dh
    ecb3:	0c 07                	or     al,0x7
    ecb5:	08 00                	or     BYTE PTR [rax],al
    ecb7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ecba:	00 00                	add    BYTE PTR [rax],al
    ecbc:	3c 08                	cmp    al,0x8
    ecbe:	00 00                	add    BYTE PTR [rax],al
    ecc0:	c7                   	(bad)  
    ecc1:	90                   	nop
    ecc2:	ff                   	(bad)  
    ecc3:	ff 74 00 00          	push   QWORD PTR [rax+rax*1+0x0]
    ecc7:	00 00                	add    BYTE PTR [rax],al
    ecc9:	45 0e                	rex.RB (bad) 
    eccb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ecd1:	02 6b 0c             	add    ch,BYTE PTR [rbx+0xc]
    ecd4:	07                   	(bad)  
    ecd5:	08 00                	or     BYTE PTR [rax],al
    ecd7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ecda:	00 00                	add    BYTE PTR [rax],al
    ecdc:	5c                   	pop    rsp
    ecdd:	08 00                	or     BYTE PTR [rax],al
    ecdf:	00 1b                	add    BYTE PTR [rbx],bl
    ece1:	91                   	xchg   ecx,eax
    ece2:	ff                   	(bad)  
    ece3:	ff 9c 00 00 00 00 45 	call   FWORD PTR [rax+rax*1+0x45000000]
    ecea:	0e                   	(bad)  
    eceb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ecf1:	02 93 0c 07 08 00    	add    dl,BYTE PTR [rbx+0x8070c]
    ecf7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ecfa:	00 00                	add    BYTE PTR [rax],al
    ecfc:	7c 08                	jl     ed06 <__GNU_EH_FRAME_HDR+0xc4a>
    ecfe:	00 00                	add    BYTE PTR [rax],al
    ed00:	97                   	xchg   edi,eax
    ed01:	91                   	xchg   ecx,eax
    ed02:	ff                   	(bad)  
    ed03:	ff 29                	jmp    FWORD PTR [rcx]
    ed05:	00 00                	add    BYTE PTR [rax],al
    ed07:	00 00                	add    BYTE PTR [rax],al
    ed09:	45 0e                	rex.RB (bad) 
    ed0b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed11:	60                   	(bad)  
    ed12:	0c 07                	or     al,0x7
    ed14:	08 00                	or     BYTE PTR [rax],al
    ed16:	00 00                	add    BYTE PTR [rax],al
    ed18:	1c 00                	sbb    al,0x0
    ed1a:	00 00                	add    BYTE PTR [rax],al
    ed1c:	9c                   	pushf  
    ed1d:	08 00                	or     BYTE PTR [rax],al
    ed1f:	00 a0 91 ff ff 29    	add    BYTE PTR [rax+0x29ffff91],ah
    ed25:	00 00                	add    BYTE PTR [rax],al
    ed27:	00 00                	add    BYTE PTR [rax],al
    ed29:	45 0e                	rex.RB (bad) 
    ed2b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed31:	60                   	(bad)  
    ed32:	0c 07                	or     al,0x7
    ed34:	08 00                	or     BYTE PTR [rax],al
    ed36:	00 00                	add    BYTE PTR [rax],al
    ed38:	24 00                	and    al,0x0
    ed3a:	00 00                	add    BYTE PTR [rax],al
    ed3c:	bc 08 00 00 a9       	mov    esp,0xa9000008
    ed41:	91                   	xchg   ecx,eax
    ed42:	ff                   	(bad)  
    ed43:	ff 54 01 00          	call   QWORD PTR [rcx+rax*1+0x0]
    ed47:	00 00                	add    BYTE PTR [rax],al
    ed49:	45 0e                	rex.RB (bad) 
    ed4b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed51:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    ed55:	46 01 0c 07          	add    DWORD PTR [rdi+r8*1],r9d
    ed59:	08 00                	or     BYTE PTR [rax],al
    ed5b:	00 00                	add    BYTE PTR [rax],al
    ed5d:	00 00                	add    BYTE PTR [rax],al
    ed5f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ed62:	00 00                	add    BYTE PTR [rax],al
    ed64:	e4 08                	in     al,0x8
    ed66:	00 00                	add    BYTE PTR [rax],al
    ed68:	d5                   	(bad)  
    ed69:	92                   	xchg   edx,eax
    ed6a:	ff                   	(bad)  
    ed6b:	ff 13                	call   QWORD PTR [rbx]
    ed6d:	01 00                	add    DWORD PTR [rax],eax
    ed6f:	00 00                	add    BYTE PTR [rax],al
    ed71:	45 0e                	rex.RB (bad) 
    ed73:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed79:	03 0a                	add    ecx,DWORD PTR [rdx]
    ed7b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ed7e:	08 00                	or     BYTE PTR [rax],al
    ed80:	1c 00                	sbb    al,0x0
    ed82:	00 00                	add    BYTE PTR [rax],al
    ed84:	04 09                	add    al,0x9
    ed86:	00 00                	add    BYTE PTR [rax],al
    ed88:	c8 93 ff ff          	enter  0xff93,0xff
    ed8c:	f9                   	stc    
    ed8d:	00 00                	add    BYTE PTR [rax],al
    ed8f:	00 00                	add    BYTE PTR [rax],al
    ed91:	45 0e                	rex.RB (bad) 
    ed93:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed99:	02 f0                	add    dh,al
    ed9b:	0c 07                	or     al,0x7
    ed9d:	08 00                	or     BYTE PTR [rax],al
    ed9f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eda2:	00 00                	add    BYTE PTR [rax],al
    eda4:	24 09                	and    al,0x9
    eda6:	00 00                	add    BYTE PTR [rax],al
    eda8:	a1 94 ff ff b6 00 00 	movabs eax,ds:0xb6ffff94
    edaf:	00 00 
    edb1:	45 0e                	rex.RB (bad) 
    edb3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    edb9:	02 ad 0c 07 08 00    	add    ch,BYTE PTR [rbp+0x8070c]
    edbf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    edc2:	00 00                	add    BYTE PTR [rax],al
    edc4:	44 09 00             	or     DWORD PTR [rax],r8d
    edc7:	00 37                	add    BYTE PTR [rdi],dh
    edc9:	95                   	xchg   ebp,eax
    edca:	ff                   	(bad)  
    edcb:	ff 1e                	call   FWORD PTR [rsi]
    edcd:	00 00                	add    BYTE PTR [rax],al
    edcf:	00 00                	add    BYTE PTR [rax],al
    edd1:	45 0e                	rex.RB (bad) 
    edd3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    edd9:	55                   	push   rbp
    edda:	0c 07                	or     al,0x7
    eddc:	08 00                	or     BYTE PTR [rax],al
    edde:	00 00                	add    BYTE PTR [rax],al
    ede0:	1c 00                	sbb    al,0x0
    ede2:	00 00                	add    BYTE PTR [rax],al
    ede4:	64 09 00             	or     DWORD PTR fs:[rax],eax
    ede7:	00 35 95 ff ff 63    	add    BYTE PTR [rip+0x63ffff95],dh        # 6400ed82 <_end+0x63ed3d62>
    eded:	01 00                	add    DWORD PTR [rax],eax
    edef:	00 00                	add    BYTE PTR [rax],al
    edf1:	45 0e                	rex.RB (bad) 
    edf3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    edf9:	03 5a 01             	add    ebx,DWORD PTR [rdx+0x1]
    edfc:	0c 07                	or     al,0x7
    edfe:	08 00                	or     BYTE PTR [rax],al
    ee00:	2c 00                	sub    al,0x0
    ee02:	00 00                	add    BYTE PTR [rax],al
    ee04:	84 09                	test   BYTE PTR [rcx],cl
    ee06:	00 00                	add    BYTE PTR [rax],al
    ee08:	78 96                	js     eda0 <__GNU_EH_FRAME_HDR+0xce4>
    ee0a:	ff                   	(bad)  
    ee0b:	ff 11                	call   QWORD PTR [rcx]
    ee0d:	02 00                	add    al,BYTE PTR [rax]
    ee0f:	00 00                	add    BYTE PTR [rax],al
    ee11:	45 0e                	rex.RB (bad) 
    ee13:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee19:	50                   	push   rax
    ee1a:	8f 03                	pop    QWORD PTR [rbx]
    ee1c:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
    ee23:	07                   	(bad)  
    ee24:	03 f8                	add    edi,eax
    ee26:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ee29:	08 00                	or     BYTE PTR [rax],al
    ee2b:	00 00                	add    BYTE PTR [rax],al
    ee2d:	00 00                	add    BYTE PTR [rax],al
    ee2f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ee32:	00 00                	add    BYTE PTR [rax],al
    ee34:	b4 09                	mov    ah,0x9
    ee36:	00 00                	add    BYTE PTR [rax],al
    ee38:	59                   	pop    rcx
    ee39:	98                   	cwde   
    ee3a:	ff                   	(bad)  
    ee3b:	ff b2 00 00 00 00    	push   QWORD PTR [rdx+0x0]
    ee41:	45 0e                	rex.RB (bad) 
    ee43:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee49:	02 a9 0c 07 08 00    	add    ch,BYTE PTR [rcx+0x8070c]
    ee4f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ee52:	00 00                	add    BYTE PTR [rax],al
    ee54:	d4                   	(bad)  
    ee55:	09 00                	or     DWORD PTR [rax],eax
    ee57:	00 eb                	add    bl,ch
    ee59:	98                   	cwde   
    ee5a:	ff                   	(bad)  
    ee5b:	ff a5 00 00 00 00    	jmp    QWORD PTR [rbp+0x0]
    ee61:	45 0e                	rex.RB (bad) 
    ee63:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee69:	02 9c 0c 07 08 00 00 	add    bl,BYTE PTR [rsp+rcx*1+0x807]
    ee70:	24 00                	and    al,0x0
    ee72:	00 00                	add    BYTE PTR [rax],al
    ee74:	f4                   	hlt    
    ee75:	09 00                	or     DWORD PTR [rax],eax
    ee77:	00 70 99             	add    BYTE PTR [rax-0x67],dh
    ee7a:	ff                   	(bad)  
    ee7b:	ff ac 00 00 00 00 45 	jmp    FWORD PTR [rax+rax*1+0x45000000]
    ee82:	0e                   	(bad)  
    ee83:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee89:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    ee8d:	9e                   	sahf   
    ee8e:	0c 07                	or     al,0x7
    ee90:	08 00                	or     BYTE PTR [rax],al
    ee92:	00 00                	add    BYTE PTR [rax],al
    ee94:	00 00                	add    BYTE PTR [rax],al
    ee96:	00 00                	add    BYTE PTR [rax],al
    ee98:	1c 00                	sbb    al,0x0
    ee9a:	00 00                	add    BYTE PTR [rax],al
    ee9c:	1c 0a                	sbb    al,0xa
    ee9e:	00 00                	add    BYTE PTR [rax],al
    eea0:	f4                   	hlt    
    eea1:	99                   	cdq    
    eea2:	ff                   	(bad)  
    eea3:	ff d5                	call   rbp
    eea5:	00 00                	add    BYTE PTR [rax],al
    eea7:	00 00                	add    BYTE PTR [rax],al
    eea9:	45 0e                	rex.RB (bad) 
    eeab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eeb1:	02 cc                	add    cl,ah
    eeb3:	0c 07                	or     al,0x7
    eeb5:	08 00                	or     BYTE PTR [rax],al
    eeb7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eeba:	00 00                	add    BYTE PTR [rax],al
    eebc:	3c 0a                	cmp    al,0xa
    eebe:	00 00                	add    BYTE PTR [rax],al
    eec0:	a9 9a ff ff df       	test   eax,0xdfffff9a
    eec5:	00 00                	add    BYTE PTR [rax],al
    eec7:	00 00                	add    BYTE PTR [rax],al
    eec9:	45 0e                	rex.RB (bad) 
    eecb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eed1:	02 d6                	add    dl,dh
    eed3:	0c 07                	or     al,0x7
    eed5:	08 00                	or     BYTE PTR [rax],al
    eed7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eeda:	00 00                	add    BYTE PTR [rax],al
    eedc:	5c                   	pop    rsp
    eedd:	0a 00                	or     al,BYTE PTR [rax]
    eedf:	00 68 9b             	add    BYTE PTR [rax-0x65],ch
    eee2:	ff                   	(bad)  
    eee3:	ff                   	(bad)  
    eee4:	7d 00                	jge    eee6 <__GNU_EH_FRAME_HDR+0xe2a>
    eee6:	00 00                	add    BYTE PTR [rax],al
    eee8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eeeb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eef1:	02 74 0c 07          	add    dh,BYTE PTR [rsp+rcx*1+0x7]
    eef5:	08 00                	or     BYTE PTR [rax],al
    eef7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eefa:	00 00                	add    BYTE PTR [rax],al
    eefc:	7c 0a                	jl     ef08 <__GNU_EH_FRAME_HDR+0xe4c>
    eefe:	00 00                	add    BYTE PTR [rax],al
    ef00:	c5 9b ff             	(bad)
    ef03:	ff 36                	push   QWORD PTR [rsi]
    ef05:	01 00                	add    DWORD PTR [rax],eax
    ef07:	00 00                	add    BYTE PTR [rax],al
    ef09:	45 0e                	rex.RB (bad) 
    ef0b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef11:	03 2d 01 0c 07 08    	add    ebp,DWORD PTR [rip+0x8070c01]        # 807fb18 <_end+0x7f44af8>
    ef17:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef1a:	00 00                	add    BYTE PTR [rax],al
    ef1c:	9c                   	pushf  
    ef1d:	0a 00                	or     al,BYTE PTR [rax]
    ef1f:	00 db                	add    bl,bl
    ef21:	9c                   	pushf  
    ef22:	ff                   	(bad)  
    ef23:	ff                   	(bad)  
    ef24:	7e 00                	jle    ef26 <__GNU_EH_FRAME_HDR+0xe6a>
    ef26:	00 00                	add    BYTE PTR [rax],al
    ef28:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ef2b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef31:	02 75 0c             	add    dh,BYTE PTR [rbp+0xc]
    ef34:	07                   	(bad)  
    ef35:	08 00                	or     BYTE PTR [rax],al
    ef37:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef3a:	00 00                	add    BYTE PTR [rax],al
    ef3c:	bc 0a 00 00 39       	mov    esp,0x3900000a
    ef41:	9d                   	popf   
    ef42:	ff                   	(bad)  
    ef43:	ff                   	(bad)  
    ef44:	39 02                	cmp    DWORD PTR [rdx],eax
    ef46:	00 00                	add    BYTE PTR [rax],al
    ef48:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ef4b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef51:	03 30                	add    esi,DWORD PTR [rax]
    ef53:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    ef56:	08 00                	or     BYTE PTR [rax],al
    ef58:	1c 00                	sbb    al,0x0
    ef5a:	00 00                	add    BYTE PTR [rax],al
    ef5c:	dc 0a                	fmul   QWORD PTR [rdx]
    ef5e:	00 00                	add    BYTE PTR [rax],al
    ef60:	52                   	push   rdx
    ef61:	9f                   	lahf   
    ef62:	ff                   	(bad)  
    ef63:	ff c9                	dec    ecx
    ef65:	00 00                	add    BYTE PTR [rax],al
    ef67:	00 00                	add    BYTE PTR [rax],al
    ef69:	45 0e                	rex.RB (bad) 
    ef6b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef71:	02 c0                	add    al,al
    ef73:	0c 07                	or     al,0x7
    ef75:	08 00                	or     BYTE PTR [rax],al
    ef77:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef7a:	00 00                	add    BYTE PTR [rax],al
    ef7c:	fc                   	cld    
    ef7d:	0a 00                	or     al,BYTE PTR [rax]
    ef7f:	00 fb                	add    bl,bh
    ef81:	9f                   	lahf   
    ef82:	ff                   	(bad)  
    ef83:	ff a1 01 00 00 00    	jmp    QWORD PTR [rcx+0x1]
    ef89:	45 0e                	rex.RB (bad) 
    ef8b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef91:	03 98 01 0c 07 08    	add    ebx,DWORD PTR [rax+0x8070c01]
    ef97:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef9a:	00 00                	add    BYTE PTR [rax],al
    ef9c:	1c 0b                	sbb    al,0xb
    ef9e:	00 00                	add    BYTE PTR [rax],al
    efa0:	7c a1                	jl     ef43 <__GNU_EH_FRAME_HDR+0xe87>
    efa2:	ff                   	(bad)  
    efa3:	ff 13                	call   QWORD PTR [rbx]
    efa5:	01 00                	add    DWORD PTR [rax],eax
    efa7:	00 00                	add    BYTE PTR [rax],al
    efa9:	45 0e                	rex.RB (bad) 
    efab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    efb1:	03 0a                	add    ecx,DWORD PTR [rdx]
    efb3:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    efb6:	08 00                	or     BYTE PTR [rax],al
    efb8:	1c 00                	sbb    al,0x0
    efba:	00 00                	add    BYTE PTR [rax],al
    efbc:	3c 0b                	cmp    al,0xb
    efbe:	00 00                	add    BYTE PTR [rax],al
    efc0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    efc1:	a2 ff ff 66 00 00 00 	movabs ds:0x450000000066ffff,al
    efc8:	00 45 
    efca:	0e                   	(bad)  
    efcb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    efd1:	02 5d 0c             	add    bl,BYTE PTR [rbp+0xc]
    efd4:	07                   	(bad)  
    efd5:	08 00                	or     BYTE PTR [rax],al
    efd7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    efda:	00 00                	add    BYTE PTR [rax],al
    efdc:	5c                   	pop    rsp
    efdd:	0b 00                	or     eax,DWORD PTR [rax]
    efdf:	00 b5 a2 ff ff 75    	add    BYTE PTR [rbp+0x75ffffa2],dh
    efe5:	00 00                	add    BYTE PTR [rax],al
    efe7:	00 00                	add    BYTE PTR [rax],al
    efe9:	45 0e                	rex.RB (bad) 
    efeb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eff1:	02 6c 0c 07          	add    ch,BYTE PTR [rsp+rcx*1+0x7]
    eff5:	08 00                	or     BYTE PTR [rax],al
    eff7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    effa:	00 00                	add    BYTE PTR [rax],al
    effc:	7c 0b                	jl     f009 <__GNU_EH_FRAME_HDR+0xf4d>
    effe:	00 00                	add    BYTE PTR [rax],al
    f000:	0a a3 ff ff db 00    	or     ah,BYTE PTR [rbx+0xdbffff]
    f006:	00 00                	add    BYTE PTR [rax],al
    f008:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f00b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f011:	02 d2                	add    dl,dl
    f013:	0c 07                	or     al,0x7
    f015:	08 00                	or     BYTE PTR [rax],al
    f017:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f01a:	00 00                	add    BYTE PTR [rax],al
    f01c:	9c                   	pushf  
    f01d:	0b 00                	or     eax,DWORD PTR [rax]
    f01f:	00 c5                	add    ch,al
    f021:	a3 ff ff 72 01 00 00 	movabs ds:0x450000000172ffff,eax
    f028:	00 45 
    f02a:	0e                   	(bad)  
    f02b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f031:	03 69 01             	add    ebp,DWORD PTR [rcx+0x1]
    f034:	0c 07                	or     al,0x7
    f036:	08 00                	or     BYTE PTR [rax],al
    f038:	1c 00                	sbb    al,0x0
    f03a:	00 00                	add    BYTE PTR [rax],al
    f03c:	bc 0b 00 00 17       	mov    esp,0x1700000b
    f041:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    f042:	ff                   	(bad)  
    f043:	ff 6c 00 00          	jmp    FWORD PTR [rax+rax*1+0x0]
    f047:	00 00                	add    BYTE PTR [rax],al
    f049:	45 0e                	rex.RB (bad) 
    f04b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f051:	02 63 0c             	add    ah,BYTE PTR [rbx+0xc]
    f054:	07                   	(bad)  
    f055:	08 00                	or     BYTE PTR [rax],al
    f057:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f05a:	00 00                	add    BYTE PTR [rax],al
    f05c:	dc 0b                	fmul   QWORD PTR [rbx]
    f05e:	00 00                	add    BYTE PTR [rax],al
    f060:	63 a5 ff ff 80 00    	movsxd esp,DWORD PTR [rbp+0x80ffff]
    f066:	00 00                	add    BYTE PTR [rax],al
    f068:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f06b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f071:	02 77 0c             	add    dh,BYTE PTR [rdi+0xc]
    f074:	07                   	(bad)  
    f075:	08 00                	or     BYTE PTR [rax],al
    f077:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f07a:	00 00                	add    BYTE PTR [rax],al
    f07c:	fc                   	cld    
    f07d:	0b 00                	or     eax,DWORD PTR [rax]
    f07f:	00 c3                	add    bl,al
    f081:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    f082:	ff                   	(bad)  
    f083:	ff 16                	call   QWORD PTR [rsi]
    f085:	00 00                	add    BYTE PTR [rax],al
    f087:	00 00                	add    BYTE PTR [rax],al
    f089:	45 0e                	rex.RB (bad) 
    f08b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f091:	4d 0c 07             	rex.WRB or al,0x7
    f094:	08 00                	or     BYTE PTR [rax],al
    f096:	00 00                	add    BYTE PTR [rax],al
    f098:	20 00                	and    BYTE PTR [rax],al
    f09a:	00 00                	add    BYTE PTR [rax],al
    f09c:	1c 0c                	sbb    al,0xc
    f09e:	00 00                	add    BYTE PTR [rax],al
    f0a0:	b9 a5 ff ff 3b       	mov    ecx,0x3bffffa5
    f0a5:	01 00                	add    DWORD PTR [rax],eax
    f0a7:	00 00                	add    BYTE PTR [rax],al
    f0a9:	45 0e                	rex.RB (bad) 
    f0ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f0b1:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    f0b5:	2d 01 0c 07 08       	sub    eax,0x8070c01
    f0ba:	00 00                	add    BYTE PTR [rax],al
    f0bc:	1c 00                	sbb    al,0x0
    f0be:	00 00                	add    BYTE PTR [rax],al
    f0c0:	40 0c 00             	or     al,0x0
    f0c3:	00 d0                	add    al,dl
    f0c5:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    f0c6:	ff                   	(bad)  
    f0c7:	ff 64 00 00          	jmp    QWORD PTR [rax+rax*1+0x0]
    f0cb:	00 00                	add    BYTE PTR [rax],al
    f0cd:	45 0e                	rex.RB (bad) 
    f0cf:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f0d5:	02 5b 0c             	add    bl,BYTE PTR [rbx+0xc]
    f0d8:	07                   	(bad)  
    f0d9:	08 00                	or     BYTE PTR [rax],al
    f0db:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f0de:	00 00                	add    BYTE PTR [rax],al
    f0e0:	60                   	(bad)  
    f0e1:	0c 00                	or     al,0x0
    f0e3:	00 14 a7             	add    BYTE PTR [rdi+riz*4],dl
    f0e6:	ff                   	(bad)  
    f0e7:	ff 53 00             	call   QWORD PTR [rbx+0x0]
    f0ea:	00 00                	add    BYTE PTR [rax],al
    f0ec:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f0ef:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f0f5:	02 4a 0c             	add    cl,BYTE PTR [rdx+0xc]
    f0f8:	07                   	(bad)  
    f0f9:	08 00                	or     BYTE PTR [rax],al
    f0fb:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f0fe:	00 00                	add    BYTE PTR [rax],al
    f100:	80 0c 00 00          	or     BYTE PTR [rax+rax*1],0x0
    f104:	47 a7                	rex.RXB cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    f106:	ff                   	(bad)  
    f107:	ff b1 00 00 00 00    	push   QWORD PTR [rcx+0x0]
    f10d:	45 0e                	rex.RB (bad) 
    f10f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f115:	02 a8 0c 07 08 00    	add    ch,BYTE PTR [rax+0x8070c]
    f11b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f11e:	00 00                	add    BYTE PTR [rax],al
    f120:	a0 0c 00 00 d8 a7 ff 	movabs al,ds:0xcbffffa7d800000c
    f127:	ff cb 
    f129:	00 00                	add    BYTE PTR [rax],al
    f12b:	00 00                	add    BYTE PTR [rax],al
    f12d:	45 0e                	rex.RB (bad) 
    f12f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f135:	02 c2                	add    al,dl
    f137:	0c 07                	or     al,0x7
    f139:	08 00                	or     BYTE PTR [rax],al
    f13b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f13e:	00 00                	add    BYTE PTR [rax],al
    f140:	c0 0c 00 00          	ror    BYTE PTR [rax+rax*1],0x0
    f144:	83 a8 ff ff 55 00 00 	sub    DWORD PTR [rax+0x55ffff],0x0
    f14b:	00 00                	add    BYTE PTR [rax],al
    f14d:	45 0e                	rex.RB (bad) 
    f14f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f155:	02 4c 0c 07          	add    cl,BYTE PTR [rsp+rcx*1+0x7]
    f159:	08 00                	or     BYTE PTR [rax],al
    f15b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f15e:	00 00                	add    BYTE PTR [rax],al
    f160:	e0 0c                	loopne f16e <__GNU_EH_FRAME_HDR+0x10b2>
    f162:	00 00                	add    BYTE PTR [rax],al
    f164:	b8 a8 ff ff 30       	mov    eax,0x30ffffa8
    f169:	00 00                	add    BYTE PTR [rax],al
    f16b:	00 00                	add    BYTE PTR [rax],al
    f16d:	45 0e                	rex.RB (bad) 
    f16f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f175:	67 0c 07             	addr32 or al,0x7
    f178:	08 00                	or     BYTE PTR [rax],al
    f17a:	00 00                	add    BYTE PTR [rax],al
    f17c:	1c 00                	sbb    al,0x0
    f17e:	00 00                	add    BYTE PTR [rax],al
    f180:	00 0d 00 00 c8 a8    	add    BYTE PTR [rip+0xffffffffa8c80000],cl        # ffffffffa8c8f186 <_end+0xffffffffa8b54166>
    f186:	ff                   	(bad)  
    f187:	ff 67 00             	jmp    QWORD PTR [rdi+0x0]
    f18a:	00 00                	add    BYTE PTR [rax],al
    f18c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f18f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f195:	02 5e 0c             	add    bl,BYTE PTR [rsi+0xc]
    f198:	07                   	(bad)  
    f199:	08 00                	or     BYTE PTR [rax],al
    f19b:	00 20                	add    BYTE PTR [rax],ah
    f19d:	00 00                	add    BYTE PTR [rax],al
    f19f:	00 20                	add    BYTE PTR [rax],ah
    f1a1:	0d 00 00 0f a9       	or     eax,0xa90f0000
    f1a6:	ff                   	(bad)  
    f1a7:	ff 63 0f             	jmp    QWORD PTR [rbx+0xf]
    f1aa:	00 00                	add    BYTE PTR [rax],al
    f1ac:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f1af:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f1b5:	03 5a 0f             	add    ebx,DWORD PTR [rdx+0xf]
    f1b8:	0c 07                	or     al,0x7
    f1ba:	08 00                	or     BYTE PTR [rax],al
    f1bc:	00 00                	add    BYTE PTR [rax],al
    f1be:	00 00                	add    BYTE PTR [rax],al
    f1c0:	1c 00                	sbb    al,0x0
    f1c2:	00 00                	add    BYTE PTR [rax],al
    f1c4:	44 0d 00 00 4e b8    	rex.R or eax,0xb84e0000
    f1ca:	ff                   	(bad)  
    f1cb:	ff 46 00             	inc    DWORD PTR [rsi+0x0]
    f1ce:	00 00                	add    BYTE PTR [rax],al
    f1d0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f1d3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f1d9:	7d 0c                	jge    f1e7 <__GNU_EH_FRAME_HDR+0x112b>
    f1db:	07                   	(bad)  
    f1dc:	08 00                	or     BYTE PTR [rax],al
    f1de:	00 00                	add    BYTE PTR [rax],al
    f1e0:	24 00                	and    al,0x0
    f1e2:	00 00                	add    BYTE PTR [rax],al
    f1e4:	64 0d 00 00 74 b8    	fs or  eax,0xb8740000
    f1ea:	ff                   	(bad)  
    f1eb:	ff                   	(bad)  
    f1ec:	3e 02 00             	add    al,BYTE PTR ds:[rax]
    f1ef:	00 00                	add    BYTE PTR [rax],al
    f1f1:	45 0e                	rex.RB (bad) 
    f1f3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f1f9:	4b 8f 03             	rex.WXB pop QWORD PTR [r11]
    f1fc:	8e 04 8c             	mov    es,WORD PTR [rsp+rcx*4]
    f1ff:	05 83 06 03 2a       	add    eax,0x2a030683
    f204:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    f207:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
    f20a:	00 00                	add    BYTE PTR [rax],al
    f20c:	8c 0d 00 00 8a ba    	mov    WORD PTR [rip+0xffffffffba8a0000],cs        # ffffffffba8af212 <_end+0xffffffffba7741f2>
    f212:	ff                   	(bad)  
    f213:	ff ab 01 00 00 00    	jmp    FWORD PTR [rbx+0x1]
    f219:	45 0e                	rex.RB (bad) 
    f21b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f221:	03 a2 01 0c 07 08    	add    esp,DWORD PTR [rdx+0x8070c01]
    f227:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f22a:	00 00                	add    BYTE PTR [rax],al
    f22c:	ac                   	lods   al,BYTE PTR ds:[rsi]
    f22d:	0d 00 00 15 bc       	or     eax,0xbc150000
    f232:	ff                   	(bad)  
    f233:	ff 12                	call   QWORD PTR [rdx]
    f235:	01 00                	add    DWORD PTR [rax],eax
    f237:	00 00                	add    BYTE PTR [rax],al
    f239:	45 0e                	rex.RB (bad) 
    f23b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f241:	03 09                	add    ecx,DWORD PTR [rcx]
    f243:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f246:	08 00                	or     BYTE PTR [rax],al
    f248:	24 00                	and    al,0x0
    f24a:	00 00                	add    BYTE PTR [rax],al
    f24c:	cc                   	int3   
    f24d:	0d 00 00 07 bd       	or     eax,0xbd070000
    f252:	ff                   	(bad)  
    f253:	ff                   	(bad)  
    f254:	bd 00 00 00 00       	mov    ebp,0x0
    f259:	45 0e                	rex.RB (bad) 
    f25b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f261:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    f265:	af                   	scas   eax,DWORD PTR es:[rdi]
    f266:	0c 07                	or     al,0x7
    f268:	08 00                	or     BYTE PTR [rax],al
    f26a:	00 00                	add    BYTE PTR [rax],al
    f26c:	00 00                	add    BYTE PTR [rax],al
    f26e:	00 00                	add    BYTE PTR [rax],al
    f270:	24 00                	and    al,0x0
    f272:	00 00                	add    BYTE PTR [rax],al
    f274:	f4                   	hlt    
    f275:	0d 00 00 9c bd       	or     eax,0xbd9c0000
    f27a:	ff                   	(bad)  
    f27b:	ff 9b 01 00 00 00    	call   FWORD PTR [rbx+0x1]
    f281:	45 0e                	rex.RB (bad) 
    f283:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f289:	47 8c 03             	rex.RXB mov WORD PTR [r11],es
    f28c:	83 04 03 8b          	add    DWORD PTR [rbx+rax*1],0xffffff8b
    f290:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f293:	08 00                	or     BYTE PTR [rax],al
    f295:	00 00                	add    BYTE PTR [rax],al
    f297:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f29a:	00 00                	add    BYTE PTR [rax],al
    f29c:	1c 0e                	sbb    al,0xe
    f29e:	00 00                	add    BYTE PTR [rax],al
    f2a0:	0f bf ff             	movsx  edi,di
    f2a3:	ff a5 00 00 00 00    	jmp    QWORD PTR [rbp+0x0]
    f2a9:	45 0e                	rex.RB (bad) 
    f2ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f2b1:	02 9c 0c 07 08 00 00 	add    bl,BYTE PTR [rsp+rcx*1+0x807]
    f2b8:	1c 00                	sbb    al,0x0
    f2ba:	00 00                	add    BYTE PTR [rax],al
    f2bc:	3c 0e                	cmp    al,0xe
    f2be:	00 00                	add    BYTE PTR [rax],al
    f2c0:	94                   	xchg   esp,eax
    f2c1:	bf ff ff 43 01       	mov    edi,0x143ffff
    f2c6:	00 00                	add    BYTE PTR [rax],al
    f2c8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f2cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f2d1:	03 3a                	add    edi,DWORD PTR [rdx]
    f2d3:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f2d6:	08 00                	or     BYTE PTR [rax],al
    f2d8:	1c 00                	sbb    al,0x0
    f2da:	00 00                	add    BYTE PTR [rax],al
    f2dc:	5c                   	pop    rsp
    f2dd:	0e                   	(bad)  
    f2de:	00 00                	add    BYTE PTR [rax],al
    f2e0:	b7 c0                	mov    bh,0xc0
    f2e2:	ff                   	(bad)  
    f2e3:	ff f3                	push   rbx
    f2e5:	00 00                	add    BYTE PTR [rax],al
    f2e7:	00 00                	add    BYTE PTR [rax],al
    f2e9:	45 0e                	rex.RB (bad) 
    f2eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f2f1:	02 ea                	add    ch,dl
    f2f3:	0c 07                	or     al,0x7
    f2f5:	08 00                	or     BYTE PTR [rax],al
    f2f7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f2fa:	00 00                	add    BYTE PTR [rax],al
    f2fc:	7c 0e                	jl     f30c <__GNU_EH_FRAME_HDR+0x1250>
    f2fe:	00 00                	add    BYTE PTR [rax],al
    f300:	8a c1                	mov    al,cl
    f302:	ff                   	(bad)  
    f303:	ff 70 00             	push   QWORD PTR [rax+0x0]
    f306:	00 00                	add    BYTE PTR [rax],al
    f308:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f30b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f311:	02 67 0c             	add    ah,BYTE PTR [rdi+0xc]
    f314:	07                   	(bad)  
    f315:	08 00                	or     BYTE PTR [rax],al
    f317:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f31a:	00 00                	add    BYTE PTR [rax],al
    f31c:	9c                   	pushf  
    f31d:	0e                   	(bad)  
    f31e:	00 00                	add    BYTE PTR [rax],al
    f320:	da c1                	fcmovb st,st(1)
    f322:	ff                   	(bad)  
    f323:	ff a5 02 00 00 00    	jmp    QWORD PTR [rbp+0x2]
    f329:	45 0e                	rex.RB (bad) 
    f32b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f331:	4a 8c 03             	rex.WX mov WORD PTR [rbx],es
    f334:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
    f338:	1c 00                	sbb    al,0x0
    f33a:	00 00                	add    BYTE PTR [rax],al
    f33c:	bc 0e 00 00 5f       	mov    esp,0x5f00000e
    f341:	c4                   	(bad)  
    f342:	ff                   	(bad)  
    f343:	ff 6a 00             	jmp    FWORD PTR [rdx+0x0]
    f346:	00 00                	add    BYTE PTR [rax],al
    f348:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f34b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f351:	02 61 0c             	add    ah,BYTE PTR [rcx+0xc]
    f354:	07                   	(bad)  
    f355:	08 00                	or     BYTE PTR [rax],al
    f357:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f35a:	00 00                	add    BYTE PTR [rax],al
    f35c:	dc 0e                	fmul   QWORD PTR [rsi]
    f35e:	00 00                	add    BYTE PTR [rax],al
    f360:	a9 c4 ff ff 6e       	test   eax,0x6effffc4
    f365:	00 00                	add    BYTE PTR [rax],al
    f367:	00 00                	add    BYTE PTR [rax],al
    f369:	45 0e                	rex.RB (bad) 
    f36b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f371:	02 65 0c             	add    ah,BYTE PTR [rbp+0xc]
    f374:	07                   	(bad)  
    f375:	08 00                	or     BYTE PTR [rax],al
    f377:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    f37a:	00 00                	add    BYTE PTR [rax],al
    f37c:	fc                   	cld    
    f37d:	0e                   	(bad)  
    f37e:	00 00                	add    BYTE PTR [rax],al
    f380:	f7 c4 ff ff 8e 01    	test   esp,0x18effff
    f386:	00 00                	add    BYTE PTR [rax],al
    f388:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f38b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f391:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    f395:	80 01 0c             	add    BYTE PTR [rcx],0xc
    f398:	07                   	(bad)  
    f399:	08 00                	or     BYTE PTR [rax],al
    f39b:	00 00                	add    BYTE PTR [rax],al
    f39d:	00 00                	add    BYTE PTR [rax],al
    f39f:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
    f3a3:	00 24 0f             	add    BYTE PTR [rdi+rcx*1],ah
    f3a6:	00 00                	add    BYTE PTR [rax],al
    f3a8:	68 c6 ff ff 65       	push   0x65ffffc6
    f3ad:	00 00                	add    BYTE PTR [rax],al
    f3af:	00 00                	add    BYTE PTR [rax],al
    f3b1:	46 0e                	rex.RX (bad) 
    f3b3:	10 8f 02 49 0e 18    	adc    BYTE PTR [rdi+0x180e4902],cl
    f3b9:	8e 03                	mov    es,WORD PTR [rbx]
    f3bb:	45 0e                	rex.RB (bad) 
    f3bd:	20 8d 04 45 0e 28    	and    BYTE PTR [rbp+0x280e4504],cl
    f3c3:	8c 05 44 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e44],es        # ffffffff8631020d <_end+0xffffffff861d51ed>
    f3c9:	06                   	(bad)  
    f3ca:	48 0e                	rex.W (bad) 
    f3cc:	38 83 07 47 0e 40    	cmp    BYTE PTR [rbx+0x400e4707],al
    f3d2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    f3d3:	0e                   	(bad)  
    f3d4:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
    f3d7:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
    f3da:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
    f3dd:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
    f3e0:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    f3e3:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    f3e6:	08 00                	or     BYTE PTR [rax],al
    f3e8:	10 00                	adc    BYTE PTR [rax],al
    f3ea:	00 00                	add    BYTE PTR [rax],al
    f3ec:	6c                   	ins    BYTE PTR es:[rdi],dx
    f3ed:	0f 00 00             	sldt   WORD PTR [rax]
    f3f0:	90                   	nop
    f3f1:	c6                   	(bad)  
    f3f2:	ff                   	(bad)  
    f3f3:	ff 05 00 00 00 00    	inc    DWORD PTR [rip+0x0]        # f3f9 <__GNU_EH_FRAME_HDR+0x133d>
    f3f9:	00 00                	add    BYTE PTR [rax],al
	...

000000000000f3fc <__FRAME_END__>:
    f3fc:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .tbss:

0000000000010b68 <buffer.4704+0x10ae8>:
	...

Disassembly of section .init_array:

0000000000010b68 <__frame_dummy_init_array_entry>:
   10b68:	80 29 00             	sub    BYTE PTR [rcx],0x0
   10b6b:	00 00                	add    BYTE PTR [rax],al
   10b6d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000010b70 <__do_global_dtors_aux_fini_array_entry>:
   10b70:	40 29 00             	rex sub DWORD PTR [rax],eax
   10b73:	00 00                	add    BYTE PTR [rax],al
   10b75:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000010b78 <_DYNAMIC>:
   10b78:	01 00                	add    DWORD PTR [rax],eax
   10b7a:	00 00                	add    BYTE PTR [rax],al
   10b7c:	00 00                	add    BYTE PTR [rax],al
   10b7e:	00 00                	add    BYTE PTR [rax],al
   10b80:	01 00                	add    DWORD PTR [rax],eax
   10b82:	00 00                	add    BYTE PTR [rax],al
   10b84:	00 00                	add    BYTE PTR [rax],al
   10b86:	00 00                	add    BYTE PTR [rax],al
   10b88:	01 00                	add    DWORD PTR [rax],eax
   10b8a:	00 00                	add    BYTE PTR [rax],al
   10b8c:	00 00                	add    BYTE PTR [rax],al
   10b8e:	00 00                	add    BYTE PTR [rax],al
   10b90:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   10b91:	00 00                	add    BYTE PTR [rax],al
   10b93:	00 00                	add    BYTE PTR [rax],al
   10b95:	00 00                	add    BYTE PTR [rax],al
   10b97:	00 01                	add    BYTE PTR [rcx],al
   10b99:	00 00                	add    BYTE PTR [rax],al
   10b9b:	00 00                	add    BYTE PTR [rax],al
   10b9d:	00 00                	add    BYTE PTR [rax],al
   10b9f:	00 ab 00 00 00 00    	add    BYTE PTR [rbx+0x0],ch
   10ba5:	00 00                	add    BYTE PTR [rax],al
   10ba7:	00 01                	add    BYTE PTR [rcx],al
   10ba9:	00 00                	add    BYTE PTR [rax],al
   10bab:	00 00                	add    BYTE PTR [rax],al
   10bad:	00 00                	add    BYTE PTR [rax],al
   10baf:	00 ff                	add    bh,bh
   10bb1:	00 00                	add    BYTE PTR [rax],al
   10bb3:	00 00                	add    BYTE PTR [rax],al
   10bb5:	00 00                	add    BYTE PTR [rax],al
   10bb7:	00 01                	add    BYTE PTR [rcx],al
   10bb9:	00 00                	add    BYTE PTR [rax],al
   10bbb:	00 00                	add    BYTE PTR [rax],al
   10bbd:	00 00                	add    BYTE PTR [rax],al
   10bbf:	00 64 01 00          	add    BYTE PTR [rcx+rax*1+0x0],ah
   10bc3:	00 00                	add    BYTE PTR [rax],al
   10bc5:	00 00                	add    BYTE PTR [rax],al
   10bc7:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
   10bca:	00 00                	add    BYTE PTR [rax],al
   10bcc:	00 00                	add    BYTE PTR [rax],al
   10bce:	00 00                	add    BYTE PTR [rax],al
   10bd0:	00 20                	add    BYTE PTR [rax],ah
   10bd2:	00 00                	add    BYTE PTR [rax],al
   10bd4:	00 00                	add    BYTE PTR [rax],al
   10bd6:	00 00                	add    BYTE PTR [rax],al
   10bd8:	0d 00 00 00 00       	or     eax,0x0
   10bdd:	00 00                	add    BYTE PTR [rax],al
   10bdf:	00 88 ba 00 00 00    	add    BYTE PTR [rax+0xba],cl
   10be5:	00 00                	add    BYTE PTR [rax],al
   10be7:	00 19                	add    BYTE PTR [rcx],bl
   10be9:	00 00                	add    BYTE PTR [rax],al
   10beb:	00 00                	add    BYTE PTR [rax],al
   10bed:	00 00                	add    BYTE PTR [rax],al
   10bef:	00 68 0b             	add    BYTE PTR [rax+0xb],ch
   10bf2:	01 00                	add    DWORD PTR [rax],eax
   10bf4:	00 00                	add    BYTE PTR [rax],al
   10bf6:	00 00                	add    BYTE PTR [rax],al
   10bf8:	1b 00                	sbb    eax,DWORD PTR [rax]
   10bfa:	00 00                	add    BYTE PTR [rax],al
   10bfc:	00 00                	add    BYTE PTR [rax],al
   10bfe:	00 00                	add    BYTE PTR [rax],al
   10c00:	08 00                	or     BYTE PTR [rax],al
   10c02:	00 00                	add    BYTE PTR [rax],al
   10c04:	00 00                	add    BYTE PTR [rax],al
   10c06:	00 00                	add    BYTE PTR [rax],al
   10c08:	1a 00                	sbb    al,BYTE PTR [rax]
   10c0a:	00 00                	add    BYTE PTR [rax],al
   10c0c:	00 00                	add    BYTE PTR [rax],al
   10c0e:	00 00                	add    BYTE PTR [rax],al
   10c10:	70 0b                	jo     10c1d <_DYNAMIC+0xa5>
   10c12:	01 00                	add    DWORD PTR [rax],eax
   10c14:	00 00                	add    BYTE PTR [rax],al
   10c16:	00 00                	add    BYTE PTR [rax],al
   10c18:	1c 00                	sbb    al,0x0
   10c1a:	00 00                	add    BYTE PTR [rax],al
   10c1c:	00 00                	add    BYTE PTR [rax],al
   10c1e:	00 00                	add    BYTE PTR [rax],al
   10c20:	08 00                	or     BYTE PTR [rax],al
   10c22:	00 00                	add    BYTE PTR [rax],al
   10c24:	00 00                	add    BYTE PTR [rax],al
   10c26:	00 00                	add    BYTE PTR [rax],al
   10c28:	f5                   	cmc    
   10c29:	fe                   	(bad)  
   10c2a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10c2d:	00 00                	add    BYTE PTR [rax],al
   10c2f:	00 d8                	add    al,bl
   10c31:	03 00                	add    eax,DWORD PTR [rax]
   10c33:	00 00                	add    BYTE PTR [rax],al
   10c35:	00 00                	add    BYTE PTR [rax],al
   10c37:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 10c3d <_DYNAMIC+0xc5>
   10c3d:	00 00                	add    BYTE PTR [rax],al
   10c3f:	00 10                	add    BYTE PTR [rax],dl
   10c41:	0b 00                	or     eax,DWORD PTR [rax]
   10c43:	00 00                	add    BYTE PTR [rax],al
   10c45:	00 00                	add    BYTE PTR [rax],al
   10c47:	00 06                	add    BYTE PTR [rsi],al
   10c49:	00 00                	add    BYTE PTR [rax],al
   10c4b:	00 00                	add    BYTE PTR [rax],al
   10c4d:	00 00                	add    BYTE PTR [rax],al
   10c4f:	00 08                	add    BYTE PTR [rax],cl
   10c51:	04 00                	add    al,0x0
   10c53:	00 00                	add    BYTE PTR [rax],al
   10c55:	00 00                	add    BYTE PTR [rax],al
   10c57:	00 0a                	add    BYTE PTR [rdx],cl
   10c59:	00 00                	add    BYTE PTR [rax],al
   10c5b:	00 00                	add    BYTE PTR [rax],al
   10c5d:	00 00                	add    BYTE PTR [rax],al
   10c5f:	00 15 03 00 00 00    	add    BYTE PTR [rip+0x3],dl        # 10c68 <_DYNAMIC+0xf0>
   10c65:	00 00                	add    BYTE PTR [rax],al
   10c67:	00 0b                	add    BYTE PTR [rbx],cl
   10c69:	00 00                	add    BYTE PTR [rax],al
   10c6b:	00 00                	add    BYTE PTR [rax],al
   10c6d:	00 00                	add    BYTE PTR [rax],al
   10c6f:	00 18                	add    BYTE PTR [rax],bl
   10c71:	00 00                	add    BYTE PTR [rax],al
   10c73:	00 00                	add    BYTE PTR [rax],al
   10c75:	00 00                	add    BYTE PTR [rax],al
   10c77:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 10c7d <_DYNAMIC+0x105>
	...
   10c85:	00 00                	add    BYTE PTR [rax],al
   10c87:	00 03                	add    BYTE PTR [rbx],al
   10c89:	00 00                	add    BYTE PTR [rax],al
   10c8b:	00 00                	add    BYTE PTR [rax],al
   10c8d:	00 00                	add    BYTE PTR [rax],al
   10c8f:	00 a8 0d 01 00 00    	add    BYTE PTR [rax+0x10d],ch
   10c95:	00 00                	add    BYTE PTR [rax],al
   10c97:	00 02                	add    BYTE PTR [rdx],al
   10c99:	00 00                	add    BYTE PTR [rax],al
   10c9b:	00 00                	add    BYTE PTR [rax],al
   10c9d:	00 00                	add    BYTE PTR [rax],al
   10c9f:	00 48 06             	add    BYTE PTR [rax+0x6],cl
   10ca2:	00 00                	add    BYTE PTR [rax],al
   10ca4:	00 00                	add    BYTE PTR [rax],al
   10ca6:	00 00                	add    BYTE PTR [rax],al
   10ca8:	14 00                	adc    al,0x0
   10caa:	00 00                	add    BYTE PTR [rax],al
   10cac:	00 00                	add    BYTE PTR [rax],al
   10cae:	00 00                	add    BYTE PTR [rax],al
   10cb0:	07                   	(bad)  
   10cb1:	00 00                	add    BYTE PTR [rax],al
   10cb3:	00 00                	add    BYTE PTR [rax],al
   10cb5:	00 00                	add    BYTE PTR [rax],al
   10cb7:	00 17                	add    BYTE PTR [rdi],dl
   10cb9:	00 00                	add    BYTE PTR [rax],al
   10cbb:	00 00                	add    BYTE PTR [rax],al
   10cbd:	00 00                	add    BYTE PTR [rax],al
   10cbf:	00 60 10             	add    BYTE PTR [rax+0x10],ah
   10cc2:	00 00                	add    BYTE PTR [rax],al
   10cc4:	00 00                	add    BYTE PTR [rax],al
   10cc6:	00 00                	add    BYTE PTR [rax],al
   10cc8:	07                   	(bad)  
   10cc9:	00 00                	add    BYTE PTR [rax],al
   10ccb:	00 00                	add    BYTE PTR [rax],al
   10ccd:	00 00                	add    BYTE PTR [rax],al
   10ccf:	00 40 0f             	add    BYTE PTR [rax+0xf],al
   10cd2:	00 00                	add    BYTE PTR [rax],al
   10cd4:	00 00                	add    BYTE PTR [rax],al
   10cd6:	00 00                	add    BYTE PTR [rax],al
   10cd8:	08 00                	or     BYTE PTR [rax],al
   10cda:	00 00                	add    BYTE PTR [rax],al
   10cdc:	00 00                	add    BYTE PTR [rax],al
   10cde:	00 00                	add    BYTE PTR [rax],al
   10ce0:	20 01                	and    BYTE PTR [rcx],al
   10ce2:	00 00                	add    BYTE PTR [rax],al
   10ce4:	00 00                	add    BYTE PTR [rax],al
   10ce6:	00 00                	add    BYTE PTR [rax],al
   10ce8:	09 00                	or     DWORD PTR [rax],eax
   10cea:	00 00                	add    BYTE PTR [rax],al
   10cec:	00 00                	add    BYTE PTR [rax],al
   10cee:	00 00                	add    BYTE PTR [rax],al
   10cf0:	18 00                	sbb    BYTE PTR [rax],al
   10cf2:	00 00                	add    BYTE PTR [rax],al
   10cf4:	00 00                	add    BYTE PTR [rax],al
   10cf6:	00 00                	add    BYTE PTR [rax],al
   10cf8:	1e                   	(bad)  
   10cf9:	00 00                	add    BYTE PTR [rax],al
   10cfb:	00 00                	add    BYTE PTR [rax],al
   10cfd:	00 00                	add    BYTE PTR [rax],al
   10cff:	00 08                	add    BYTE PTR [rax],cl
   10d01:	00 00                	add    BYTE PTR [rax],al
   10d03:	00 00                	add    BYTE PTR [rax],al
   10d05:	00 00                	add    BYTE PTR [rax],al
   10d07:	00 fb                	add    bl,bh
   10d09:	ff                   	(bad)  
   10d0a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d0d:	00 00                	add    BYTE PTR [rax],al
   10d0f:	00 01                	add    BYTE PTR [rcx],al
   10d11:	00 00                	add    BYTE PTR [rax],al
   10d13:	08 00                	or     BYTE PTR [rax],al
   10d15:	00 00                	add    BYTE PTR [rax],al
   10d17:	00 fe                	add    dh,bh
   10d19:	ff                   	(bad)  
   10d1a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d1d:	00 00                	add    BYTE PTR [rax],al
   10d1f:	00 c0                	add    al,al
   10d21:	0e                   	(bad)  
   10d22:	00 00                	add    BYTE PTR [rax],al
   10d24:	00 00                	add    BYTE PTR [rax],al
   10d26:	00 00                	add    BYTE PTR [rax],al
   10d28:	ff                   	(bad)  
   10d29:	ff                   	(bad)  
   10d2a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d2d:	00 00                	add    BYTE PTR [rax],al
   10d2f:	00 03                	add    BYTE PTR [rbx],al
   10d31:	00 00                	add    BYTE PTR [rax],al
   10d33:	00 00                	add    BYTE PTR [rax],al
   10d35:	00 00                	add    BYTE PTR [rax],al
   10d37:	00 f0                	add    al,dh
   10d39:	ff                   	(bad)  
   10d3a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d3d:	00 00                	add    BYTE PTR [rax],al
   10d3f:	00 26                	add    BYTE PTR [rsi],ah
   10d41:	0e                   	(bad)  
   10d42:	00 00                	add    BYTE PTR [rax],al
   10d44:	00 00                	add    BYTE PTR [rax],al
   10d46:	00 00                	add    BYTE PTR [rax],al
   10d48:	f9                   	stc    
   10d49:	ff                   	(bad)  
   10d4a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d4d:	00 00                	add    BYTE PTR [rax],al
   10d4f:	00 06                	add    BYTE PTR [rsi],al
	...

Disassembly of section .got:

0000000000010da8 <_GLOBAL_OFFSET_TABLE_>:
   10da8:	78 0b                	js     10db5 <_GLOBAL_OFFSET_TABLE_+0xd>
   10daa:	01 00                	add    DWORD PTR [rax],eax
	...
   10dc0:	30 20                	xor    BYTE PTR [rax],ah
   10dc2:	00 00                	add    BYTE PTR [rax],al
   10dc4:	00 00                	add    BYTE PTR [rax],al
   10dc6:	00 00                	add    BYTE PTR [rax],al
   10dc8:	40 20 00             	and    BYTE PTR [rax],al
   10dcb:	00 00                	add    BYTE PTR [rax],al
   10dcd:	00 00                	add    BYTE PTR [rax],al
   10dcf:	00 50 20             	add    BYTE PTR [rax+0x20],dl
   10dd2:	00 00                	add    BYTE PTR [rax],al
   10dd4:	00 00                	add    BYTE PTR [rax],al
   10dd6:	00 00                	add    BYTE PTR [rax],al
   10dd8:	60                   	(bad)  
   10dd9:	20 00                	and    BYTE PTR [rax],al
   10ddb:	00 00                	add    BYTE PTR [rax],al
   10ddd:	00 00                	add    BYTE PTR [rax],al
   10ddf:	00 70 20             	add    BYTE PTR [rax+0x20],dh
   10de2:	00 00                	add    BYTE PTR [rax],al
   10de4:	00 00                	add    BYTE PTR [rax],al
   10de6:	00 00                	add    BYTE PTR [rax],al
   10de8:	80 20 00             	and    BYTE PTR [rax],0x0
   10deb:	00 00                	add    BYTE PTR [rax],al
   10ded:	00 00                	add    BYTE PTR [rax],al
   10def:	00 90 20 00 00 00    	add    BYTE PTR [rax+0x20],dl
   10df5:	00 00                	add    BYTE PTR [rax],al
   10df7:	00 a0 20 00 00 00    	add    BYTE PTR [rax+0x20],ah
   10dfd:	00 00                	add    BYTE PTR [rax],al
   10dff:	00 b0 20 00 00 00    	add    BYTE PTR [rax+0x20],dh
   10e05:	00 00                	add    BYTE PTR [rax],al
   10e07:	00 c0                	add    al,al
   10e09:	20 00                	and    BYTE PTR [rax],al
   10e0b:	00 00                	add    BYTE PTR [rax],al
   10e0d:	00 00                	add    BYTE PTR [rax],al
   10e0f:	00 d0                	add    al,dl
   10e11:	20 00                	and    BYTE PTR [rax],al
   10e13:	00 00                	add    BYTE PTR [rax],al
   10e15:	00 00                	add    BYTE PTR [rax],al
   10e17:	00 e0                	add    al,ah
   10e19:	20 00                	and    BYTE PTR [rax],al
   10e1b:	00 00                	add    BYTE PTR [rax],al
   10e1d:	00 00                	add    BYTE PTR [rax],al
   10e1f:	00 f0                	add    al,dh
   10e21:	20 00                	and    BYTE PTR [rax],al
   10e23:	00 00                	add    BYTE PTR [rax],al
   10e25:	00 00                	add    BYTE PTR [rax],al
   10e27:	00 00                	add    BYTE PTR [rax],al
   10e29:	21 00                	and    DWORD PTR [rax],eax
   10e2b:	00 00                	add    BYTE PTR [rax],al
   10e2d:	00 00                	add    BYTE PTR [rax],al
   10e2f:	00 10                	add    BYTE PTR [rax],dl
   10e31:	21 00                	and    DWORD PTR [rax],eax
   10e33:	00 00                	add    BYTE PTR [rax],al
   10e35:	00 00                	add    BYTE PTR [rax],al
   10e37:	00 20                	add    BYTE PTR [rax],ah
   10e39:	21 00                	and    DWORD PTR [rax],eax
   10e3b:	00 00                	add    BYTE PTR [rax],al
   10e3d:	00 00                	add    BYTE PTR [rax],al
   10e3f:	00 30                	add    BYTE PTR [rax],dh
   10e41:	21 00                	and    DWORD PTR [rax],eax
   10e43:	00 00                	add    BYTE PTR [rax],al
   10e45:	00 00                	add    BYTE PTR [rax],al
   10e47:	00 40 21             	add    BYTE PTR [rax+0x21],al
   10e4a:	00 00                	add    BYTE PTR [rax],al
   10e4c:	00 00                	add    BYTE PTR [rax],al
   10e4e:	00 00                	add    BYTE PTR [rax],al
   10e50:	50                   	push   rax
   10e51:	21 00                	and    DWORD PTR [rax],eax
   10e53:	00 00                	add    BYTE PTR [rax],al
   10e55:	00 00                	add    BYTE PTR [rax],al
   10e57:	00 60 21             	add    BYTE PTR [rax+0x21],ah
   10e5a:	00 00                	add    BYTE PTR [rax],al
   10e5c:	00 00                	add    BYTE PTR [rax],al
   10e5e:	00 00                	add    BYTE PTR [rax],al
   10e60:	70 21                	jo     10e83 <_GLOBAL_OFFSET_TABLE_+0xdb>
   10e62:	00 00                	add    BYTE PTR [rax],al
   10e64:	00 00                	add    BYTE PTR [rax],al
   10e66:	00 00                	add    BYTE PTR [rax],al
   10e68:	80 21 00             	and    BYTE PTR [rcx],0x0
   10e6b:	00 00                	add    BYTE PTR [rax],al
   10e6d:	00 00                	add    BYTE PTR [rax],al
   10e6f:	00 90 21 00 00 00    	add    BYTE PTR [rax+0x21],dl
   10e75:	00 00                	add    BYTE PTR [rax],al
   10e77:	00 a0 21 00 00 00    	add    BYTE PTR [rax+0x21],ah
   10e7d:	00 00                	add    BYTE PTR [rax],al
   10e7f:	00 b0 21 00 00 00    	add    BYTE PTR [rax+0x21],dh
   10e85:	00 00                	add    BYTE PTR [rax],al
   10e87:	00 c0                	add    al,al
   10e89:	21 00                	and    DWORD PTR [rax],eax
   10e8b:	00 00                	add    BYTE PTR [rax],al
   10e8d:	00 00                	add    BYTE PTR [rax],al
   10e8f:	00 d0                	add    al,dl
   10e91:	21 00                	and    DWORD PTR [rax],eax
   10e93:	00 00                	add    BYTE PTR [rax],al
   10e95:	00 00                	add    BYTE PTR [rax],al
   10e97:	00 e0                	add    al,ah
   10e99:	21 00                	and    DWORD PTR [rax],eax
   10e9b:	00 00                	add    BYTE PTR [rax],al
   10e9d:	00 00                	add    BYTE PTR [rax],al
   10e9f:	00 f0                	add    al,dh
   10ea1:	21 00                	and    DWORD PTR [rax],eax
   10ea3:	00 00                	add    BYTE PTR [rax],al
   10ea5:	00 00                	add    BYTE PTR [rax],al
   10ea7:	00 00                	add    BYTE PTR [rax],al
   10ea9:	22 00                	and    al,BYTE PTR [rax]
   10eab:	00 00                	add    BYTE PTR [rax],al
   10ead:	00 00                	add    BYTE PTR [rax],al
   10eaf:	00 10                	add    BYTE PTR [rax],dl
   10eb1:	22 00                	and    al,BYTE PTR [rax]
   10eb3:	00 00                	add    BYTE PTR [rax],al
   10eb5:	00 00                	add    BYTE PTR [rax],al
   10eb7:	00 20                	add    BYTE PTR [rax],ah
   10eb9:	22 00                	and    al,BYTE PTR [rax]
   10ebb:	00 00                	add    BYTE PTR [rax],al
   10ebd:	00 00                	add    BYTE PTR [rax],al
   10ebf:	00 30                	add    BYTE PTR [rax],dh
   10ec1:	22 00                	and    al,BYTE PTR [rax]
   10ec3:	00 00                	add    BYTE PTR [rax],al
   10ec5:	00 00                	add    BYTE PTR [rax],al
   10ec7:	00 40 22             	add    BYTE PTR [rax+0x22],al
   10eca:	00 00                	add    BYTE PTR [rax],al
   10ecc:	00 00                	add    BYTE PTR [rax],al
   10ece:	00 00                	add    BYTE PTR [rax],al
   10ed0:	50                   	push   rax
   10ed1:	22 00                	and    al,BYTE PTR [rax]
   10ed3:	00 00                	add    BYTE PTR [rax],al
   10ed5:	00 00                	add    BYTE PTR [rax],al
   10ed7:	00 60 22             	add    BYTE PTR [rax+0x22],ah
   10eda:	00 00                	add    BYTE PTR [rax],al
   10edc:	00 00                	add    BYTE PTR [rax],al
   10ede:	00 00                	add    BYTE PTR [rax],al
   10ee0:	70 22                	jo     10f04 <_GLOBAL_OFFSET_TABLE_+0x15c>
   10ee2:	00 00                	add    BYTE PTR [rax],al
   10ee4:	00 00                	add    BYTE PTR [rax],al
   10ee6:	00 00                	add    BYTE PTR [rax],al
   10ee8:	80 22 00             	and    BYTE PTR [rdx],0x0
   10eeb:	00 00                	add    BYTE PTR [rax],al
   10eed:	00 00                	add    BYTE PTR [rax],al
   10eef:	00 90 22 00 00 00    	add    BYTE PTR [rax+0x22],dl
   10ef5:	00 00                	add    BYTE PTR [rax],al
   10ef7:	00 a0 22 00 00 00    	add    BYTE PTR [rax+0x22],ah
   10efd:	00 00                	add    BYTE PTR [rax],al
   10eff:	00 b0 22 00 00 00    	add    BYTE PTR [rax+0x22],dh
   10f05:	00 00                	add    BYTE PTR [rax],al
   10f07:	00 c0                	add    al,al
   10f09:	22 00                	and    al,BYTE PTR [rax]
   10f0b:	00 00                	add    BYTE PTR [rax],al
   10f0d:	00 00                	add    BYTE PTR [rax],al
   10f0f:	00 d0                	add    al,dl
   10f11:	22 00                	and    al,BYTE PTR [rax]
   10f13:	00 00                	add    BYTE PTR [rax],al
   10f15:	00 00                	add    BYTE PTR [rax],al
   10f17:	00 e0                	add    al,ah
   10f19:	22 00                	and    al,BYTE PTR [rax]
   10f1b:	00 00                	add    BYTE PTR [rax],al
   10f1d:	00 00                	add    BYTE PTR [rax],al
   10f1f:	00 f0                	add    al,dh
   10f21:	22 00                	and    al,BYTE PTR [rax]
   10f23:	00 00                	add    BYTE PTR [rax],al
   10f25:	00 00                	add    BYTE PTR [rax],al
   10f27:	00 00                	add    BYTE PTR [rax],al
   10f29:	23 00                	and    eax,DWORD PTR [rax]
   10f2b:	00 00                	add    BYTE PTR [rax],al
   10f2d:	00 00                	add    BYTE PTR [rax],al
   10f2f:	00 10                	add    BYTE PTR [rax],dl
   10f31:	23 00                	and    eax,DWORD PTR [rax]
   10f33:	00 00                	add    BYTE PTR [rax],al
   10f35:	00 00                	add    BYTE PTR [rax],al
   10f37:	00 20                	add    BYTE PTR [rax],ah
   10f39:	23 00                	and    eax,DWORD PTR [rax]
   10f3b:	00 00                	add    BYTE PTR [rax],al
   10f3d:	00 00                	add    BYTE PTR [rax],al
   10f3f:	00 30                	add    BYTE PTR [rax],dh
   10f41:	23 00                	and    eax,DWORD PTR [rax]
   10f43:	00 00                	add    BYTE PTR [rax],al
   10f45:	00 00                	add    BYTE PTR [rax],al
   10f47:	00 40 23             	add    BYTE PTR [rax+0x23],al
   10f4a:	00 00                	add    BYTE PTR [rax],al
   10f4c:	00 00                	add    BYTE PTR [rax],al
   10f4e:	00 00                	add    BYTE PTR [rax],al
   10f50:	50                   	push   rax
   10f51:	23 00                	and    eax,DWORD PTR [rax]
   10f53:	00 00                	add    BYTE PTR [rax],al
   10f55:	00 00                	add    BYTE PTR [rax],al
   10f57:	00 60 23             	add    BYTE PTR [rax+0x23],ah
   10f5a:	00 00                	add    BYTE PTR [rax],al
   10f5c:	00 00                	add    BYTE PTR [rax],al
   10f5e:	00 00                	add    BYTE PTR [rax],al
   10f60:	70 23                	jo     10f85 <_GLOBAL_OFFSET_TABLE_+0x1dd>
   10f62:	00 00                	add    BYTE PTR [rax],al
   10f64:	00 00                	add    BYTE PTR [rax],al
   10f66:	00 00                	add    BYTE PTR [rax],al
   10f68:	80 23 00             	and    BYTE PTR [rbx],0x0
   10f6b:	00 00                	add    BYTE PTR [rax],al
   10f6d:	00 00                	add    BYTE PTR [rax],al
   10f6f:	00 90 23 00 00 00    	add    BYTE PTR [rax+0x23],dl
   10f75:	00 00                	add    BYTE PTR [rax],al
   10f77:	00 a0 23 00 00 00    	add    BYTE PTR [rax+0x23],ah
   10f7d:	00 00                	add    BYTE PTR [rax],al
   10f7f:	00 b0 23 00 00 00    	add    BYTE PTR [rax+0x23],dh
   10f85:	00 00                	add    BYTE PTR [rax],al
   10f87:	00 c0                	add    al,al
   10f89:	23 00                	and    eax,DWORD PTR [rax]
   10f8b:	00 00                	add    BYTE PTR [rax],al
   10f8d:	00 00                	add    BYTE PTR [rax],al
   10f8f:	00 d0                	add    al,dl
   10f91:	23 00                	and    eax,DWORD PTR [rax]
   10f93:	00 00                	add    BYTE PTR [rax],al
   10f95:	00 00                	add    BYTE PTR [rax],al
   10f97:	00 e0                	add    al,ah
   10f99:	23 00                	and    eax,DWORD PTR [rax]
   10f9b:	00 00                	add    BYTE PTR [rax],al
   10f9d:	00 00                	add    BYTE PTR [rax],al
   10f9f:	00 f0                	add    al,dh
   10fa1:	23 00                	and    eax,DWORD PTR [rax]
   10fa3:	00 00                	add    BYTE PTR [rax],al
   10fa5:	00 00                	add    BYTE PTR [rax],al
   10fa7:	00 00                	add    BYTE PTR [rax],al
   10fa9:	24 00                	and    al,0x0
   10fab:	00 00                	add    BYTE PTR [rax],al
   10fad:	00 00                	add    BYTE PTR [rax],al
   10faf:	00 10                	add    BYTE PTR [rax],dl
   10fb1:	24 00                	and    al,0x0
   10fb3:	00 00                	add    BYTE PTR [rax],al
   10fb5:	00 00                	add    BYTE PTR [rax],al
   10fb7:	00 20                	add    BYTE PTR [rax],ah
   10fb9:	24 00                	and    al,0x0
   10fbb:	00 00                	add    BYTE PTR [rax],al
   10fbd:	00 00                	add    BYTE PTR [rax],al
   10fbf:	00 30                	add    BYTE PTR [rax],dh
   10fc1:	24 00                	and    al,0x0
   10fc3:	00 00                	add    BYTE PTR [rax],al
   10fc5:	00 00                	add    BYTE PTR [rax],al
   10fc7:	00 40 24             	add    BYTE PTR [rax+0x24],al
   10fca:	00 00                	add    BYTE PTR [rax],al
   10fcc:	00 00                	add    BYTE PTR [rax],al
   10fce:	00 00                	add    BYTE PTR [rax],al
   10fd0:	50                   	push   rax
   10fd1:	24 00                	and    al,0x0
	...

Disassembly of section .data:

0000000000011000 <__data_start>:
	...

0000000000011008 <__dso_handle>:
   11008:	08 10                	or     BYTE PTR [rax],dl
   1100a:	01 00                	add    DWORD PTR [rax],eax
   1100c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011010 <blk_ipv4_len>:
   11010:	ff                   	(bad)  
   11011:	ff                   	(bad)  
   11012:	ff                   	(bad)  
   11013:	ff                   	(bad)  

0000000000011014 <num_rules>:
   11014:	ff                   	(bad)  
   11015:	ff                   	(bad)  
   11016:	ff                   	(bad)  
   11017:	ff                   	(bad)  

0000000000011018 <watchlist_num>:
   11018:	ff                   	(bad)  
   11019:	ff                   	(bad)  
   1101a:	ff                   	(bad)  
   1101b:	ff                   	(bad)  

000000000001101c <arp_entries>:
   1101c:	ff                   	(bad)  
   1101d:	ff                   	(bad)  
   1101e:	ff                   	(bad)  
   1101f:	ff                 	dec    eax

0000000000011020 <spi_max>:
   11020:	c8 00 00 00          	enter  0x0,0x0

0000000000011024 <VIGIL_MODE>:
   11024:	ff                   	(bad)  
   11025:	ff 00                	inc    DWORD PTR [rax]
	...

0000000000011028 <default_config>:
   11028:	04 c0                	add    al,0xc0
   1102a:	00 00                	add    BYTE PTR [rax],al
   1102c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011030 <def_log_file>:
   11030:	1a c0                	sbb    al,al
   11032:	00 00                	add    BYTE PTR [rax],al
   11034:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011038 <default_host_conf>:
   11038:	34 c0                	xor    al,0xc0
   1103a:	00 00                	add    BYTE PTR [rax],al
   1103c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011040 <total_conversations>:
   11040:	ff                   	(bad)  
   11041:	ff                   	(bad)  
   11042:	ff                   	(bad)  
   11043:	ff                   	.byte 0xff

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <buffer+0x78>
   a:	74 75                	je     81 <buffer.4704+0x1>
   c:	20 39                	and    BYTE PTR [rcx],bh
   e:	2e 34 2e             	cs xor al,0x2e
  11:	30 2d 31 75 62 75    	xor    BYTE PTR [rip+0x75627531],ch        # 75627548 <_end+0x754ec528>
  17:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  18:	74 75                	je     8f <buffer.4704+0xf>
  1a:	31 7e 32             	xor    DWORD PTR [rsi+0x32],edi
  1d:	30 2e                	xor    BYTE PTR [rsi],ch
  1f:	30 34 29             	xor    BYTE PTR [rcx+rbp*1],dh
  22:	20 39                	and    BYTE PTR [rcx],bh
  24:	2e 34 2e             	cs xor al,0x2e
  27:	30 00                	xor    BYTE PTR [rax],al
