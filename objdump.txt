
vigil.exe:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000350 <.interp>:
 350:	2f                   	(bad)  
 351:	6c                   	ins    BYTE PTR es:[rdi],dx
 352:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 359:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 35e:	78 2d                	js     38d <buffer+0x38d>
 360:	78 38                	js     39a <buffer+0x39a>
 362:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 368:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 369:	2e 32 00             	cs xor al,BYTE PTR [rax]

Disassembly of section .note.gnu.property:

0000000000000370 <.note.gnu.property>:
 370:	04 00                	add    al,0x0
 372:	00 00                	add    BYTE PTR [rax],al
 374:	20 00                	and    BYTE PTR [rax],al
 376:	00 00                	add    BYTE PTR [rax],al
 378:	05 00 00 00 47       	add    eax,0x47000000
 37d:	4e 55                	rex.WRX push rbp
 37f:	00 02                	add    BYTE PTR [rdx],al
 381:	00 00                	add    BYTE PTR [rax],al
 383:	c0 04 00 00          	rol    BYTE PTR [rax+rax*1],0x0
 387:	00 03                	add    BYTE PTR [rbx],al
 389:	00 00                	add    BYTE PTR [rax],al
 38b:	00 00                	add    BYTE PTR [rax],al
 38d:	00 00                	add    BYTE PTR [rax],al
 38f:	00 02                	add    BYTE PTR [rdx],al
 391:	80 00 c0             	add    BYTE PTR [rax],0xc0
 394:	04 00                	add    al,0x0
 396:	00 00                	add    BYTE PTR [rax],al
 398:	01 00                	add    DWORD PTR [rax],eax
 39a:	00 00                	add    BYTE PTR [rax],al
 39c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

00000000000003a0 <.note.gnu.build-id>:
 3a0:	04 00                	add    al,0x0
 3a2:	00 00                	add    BYTE PTR [rax],al
 3a4:	14 00                	adc    al,0x0
 3a6:	00 00                	add    BYTE PTR [rax],al
 3a8:	03 00                	add    eax,DWORD PTR [rax]
 3aa:	00 00                	add    BYTE PTR [rax],al
 3ac:	47                   	rex.RXB
 3ad:	4e 55                	rex.WRX push rbp
 3af:	00 87 3b f9 c5 0b    	add    BYTE PTR [rdi+0xbc5f93b],al
 3b5:	cc                   	int3   
 3b6:	37                   	(bad)  
 3b7:	eb 64                	jmp    41d <__abi_tag+0x59>
 3b9:	18 54 39 9f          	sbb    BYTE PTR [rcx+rdi*1-0x61],dl
 3bd:	7f f3                	jg     3b2 <buffer+0x3b2>
 3bf:	b9 cf 5b e6 1f       	mov    ecx,0x1fe65bcf

Disassembly of section .note.ABI-tag:

00000000000003c4 <__abi_tag>:
 3c4:	04 00                	add    al,0x0
 3c6:	00 00                	add    BYTE PTR [rax],al
 3c8:	10 00                	adc    BYTE PTR [rax],al
 3ca:	00 00                	add    BYTE PTR [rax],al
 3cc:	01 00                	add    DWORD PTR [rax],eax
 3ce:	00 00                	add    BYTE PTR [rax],al
 3d0:	47                   	rex.RXB
 3d1:	4e 55                	rex.WRX push rbp
 3d3:	00 00                	add    BYTE PTR [rax],al
 3d5:	00 00                	add    BYTE PTR [rax],al
 3d7:	00 03                	add    BYTE PTR [rbx],al
 3d9:	00 00                	add    BYTE PTR [rax],al
 3db:	00 02                	add    BYTE PTR [rdx],al
 3dd:	00 00                	add    BYTE PTR [rax],al
 3df:	00 00                	add    BYTE PTR [rax],al
 3e1:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .gnu.hash:

00000000000003e8 <.gnu.hash>:
 3e8:	03 00                	add    eax,DWORD PTR [rax]
 3ea:	00 00                	add    BYTE PTR [rax],al
 3ec:	45 00 00             	add    BYTE PTR [r8],r8b
 3ef:	00 01                	add    BYTE PTR [rcx],al
 3f1:	00 00                	add    BYTE PTR [rax],al
 3f3:	00 06                	add    BYTE PTR [rsi],al
 3f5:	00 00                	add    BYTE PTR [rax],al
 3f7:	00 00                	add    BYTE PTR [rax],al
 3f9:	14 81                	adc    al,0x81
 3fb:	00 00                	add    BYTE PTR [rax],al
 3fd:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 400:	45 00 00             	add    BYTE PTR [r8],r8b
 403:	00 00                	add    BYTE PTR [rax],al
 405:	00 00                	add    BYTE PTR [rax],al
 407:	00 46 00             	add    BYTE PTR [rsi+0x0],al
 40a:	00 00                	add    BYTE PTR [rax],al
 40c:	d1 65 ce             	shl    DWORD PTR [rbp-0x32],1
 40f:	6d                   	ins    DWORD PTR es:[rdi],dx
 410:	32 b3 f0 a9 b3 a2    	xor    dh,BYTE PTR [rbx-0x5d4c5610]
 416:	f7 12                	not    DWORD PTR [rdx]

Disassembly of section .dynsym:

0000000000000418 <.dynsym>:
	...
 430:	88 00                	mov    BYTE PTR [rax],al
 432:	00 00                	add    BYTE PTR [rax],al
 434:	12 00                	adc    al,BYTE PTR [rax]
	...
 446:	00 00                	add    BYTE PTR [rax],al
 448:	3c 01                	cmp    al,0x1
 44a:	00 00                	add    BYTE PTR [rax],al
 44c:	12 00                	adc    al,BYTE PTR [rax]
	...
 45e:	00 00                	add    BYTE PTR [rax],al
 460:	85 01                	test   DWORD PTR [rcx],eax
 462:	00 00                	add    BYTE PTR [rax],al
 464:	12 00                	adc    al,BYTE PTR [rax]
	...
 476:	00 00                	add    BYTE PTR [rax],al
 478:	d8 01                	fadd   DWORD PTR [rcx]
 47a:	00 00                	add    BYTE PTR [rax],al
 47c:	12 00                	adc    al,BYTE PTR [rax]
	...
 48e:	00 00                	add    BYTE PTR [rax],al
 490:	43 02 00             	rex.XB add al,BYTE PTR [r8]
 493:	00 12                	add    BYTE PTR [rdx],dl
	...
 4a5:	00 00                	add    BYTE PTR [rax],al
 4a7:	00 c0                	add    al,al
 4a9:	01 00                	add    DWORD PTR [rax],eax
 4ab:	00 12                	add    BYTE PTR [rdx],dl
	...
 4bd:	00 00                	add    BYTE PTR [rax],al
 4bf:	00 01                	add    BYTE PTR [rcx],al
 4c1:	01 00                	add    DWORD PTR [rax],eax
 4c3:	00 12                	add    BYTE PTR [rdx],dl
	...
 4d5:	00 00                	add    BYTE PTR [rax],al
 4d7:	00 1d 00 00 00 20    	add    BYTE PTR [rip+0x20000000],bl        # 200004dd <_end+0x1fec54d5>
	...
 4ed:	00 00                	add    BYTE PTR [rax],al
 4ef:	00 8d 01 00 00 12    	add    BYTE PTR [rbp+0x12000001],cl
	...
 505:	00 00                	add    BYTE PTR [rax],al
 507:	00 3d 02 00 00 12    	add    BYTE PTR [rip+0x12000002],bh        # 1200050f <_end+0x11ec5507>
	...
 51d:	00 00                	add    BYTE PTR [rax],al
 51f:	00 78 02             	add    BYTE PTR [rax+0x2],bh
 522:	00 00                	add    BYTE PTR [rax],al
 524:	12 00                	adc    al,BYTE PTR [rax]
	...
 536:	00 00                	add    BYTE PTR [rax],al
 538:	70 02                	jo     53c <__abi_tag+0x178>
 53a:	00 00                	add    BYTE PTR [rax],al
 53c:	12 00                	adc    al,BYTE PTR [rax]
	...
 54e:	00 00                	add    BYTE PTR [rax],al
 550:	7b 00                	jnp    552 <__abi_tag+0x18e>
 552:	00 00                	add    BYTE PTR [rax],al
 554:	12 00                	adc    al,BYTE PTR [rax]
	...
 566:	00 00                	add    BYTE PTR [rax],al
 568:	ab                   	stos   DWORD PTR es:[rdi],eax
 569:	01 00                	add    DWORD PTR [rax],eax
 56b:	00 12                	add    BYTE PTR [rdx],dl
	...
 57d:	00 00                	add    BYTE PTR [rax],al
 57f:	00 e6                	add    dh,ah
 581:	01 00                	add    DWORD PTR [rax],eax
 583:	00 12                	add    BYTE PTR [rdx],dl
	...
 595:	00 00                	add    BYTE PTR [rax],al
 597:	00 35 01 00 00 12    	add    BYTE PTR [rip+0x12000001],dh        # 1200059e <_end+0x11ec5596>
	...
 5ad:	00 00                	add    BYTE PTR [rax],al
 5af:	00 a5 01 00 00 12    	add    BYTE PTR [rbp+0x12000001],ah
	...
 5c5:	00 00                	add    BYTE PTR [rax],al
 5c7:	00 4c 02 00          	add    BYTE PTR [rdx+rax*1+0x0],cl
 5cb:	00 12                	add    BYTE PTR [rdx],dl
	...
 5dd:	00 00                	add    BYTE PTR [rax],al
 5df:	00 50 00             	add    BYTE PTR [rax+0x0],dl
 5e2:	00 00                	add    BYTE PTR [rax],al
 5e4:	12 00                	adc    al,BYTE PTR [rax]
	...
 5f6:	00 00                	add    BYTE PTR [rax],al
 5f8:	8e 02                	mov    es,WORD PTR [rdx]
 5fa:	00 00                	add    BYTE PTR [rax],al
 5fc:	12 00                	adc    al,BYTE PTR [rax]
	...
 60e:	00 00                	add    BYTE PTR [rax],al
 610:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 611:	00 00                	add    BYTE PTR [rax],al
 613:	00 12                	add    BYTE PTR [rdx],dl
	...
 625:	00 00                	add    BYTE PTR [rax],al
 627:	00 a3 00 00 00 12    	add    BYTE PTR [rbx+0x12000000],ah
	...
 63d:	00 00                	add    BYTE PTR [rax],al
 63f:	00 01                	add    BYTE PTR [rcx],al
 641:	00 00                	add    BYTE PTR [rax],al
 643:	00 20                	add    BYTE PTR [rax],ah
	...
 655:	00 00                	add    BYTE PTR [rax],al
 657:	00 fd                	add    ch,bh
 659:	01 00                	add    DWORD PTR [rax],eax
 65b:	00 12                	add    BYTE PTR [rdx],dl
	...
 66d:	00 00                	add    BYTE PTR [rax],al
 66f:	00 51 01             	add    BYTE PTR [rcx+0x1],dl
 672:	00 00                	add    BYTE PTR [rax],al
 674:	12 00                	adc    al,BYTE PTR [rax]
	...
 686:	00 00                	add    BYTE PTR [rax],al
 688:	76 00                	jbe    68a <__abi_tag+0x2c6>
 68a:	00 00                	add    BYTE PTR [rax],al
 68c:	12 00                	adc    al,BYTE PTR [rax]
	...
 69e:	00 00                	add    BYTE PTR [rax],al
 6a0:	14 02                	adc    al,0x2
 6a2:	00 00                	add    BYTE PTR [rax],al
 6a4:	12 00                	adc    al,BYTE PTR [rax]
	...
 6b6:	00 00                	add    BYTE PTR [rax],al
 6b8:	2c 00                	sub    al,0x0
 6ba:	00 00                	add    BYTE PTR [rax],al
 6bc:	20 00                	and    BYTE PTR [rax],al
	...
 6ce:	00 00                	add    BYTE PTR [rax],al
 6d0:	54                   	push   rsp
 6d1:	02 00                	add    al,BYTE PTR [rax]
 6d3:	00 12                	add    BYTE PTR [rdx],dl
	...
 6e5:	00 00                	add    BYTE PTR [rax],al
 6e7:	00 2a                	add    BYTE PTR [rdx],ch
 6e9:	02 00                	add    al,BYTE PTR [rax]
 6eb:	00 12                	add    BYTE PTR [rdx],dl
	...
 6fd:	00 00                	add    BYTE PTR [rax],al
 6ff:	00 1e                	add    BYTE PTR [rsi],bl
 701:	01 00                	add    DWORD PTR [rax],eax
 703:	00 12                	add    BYTE PTR [rdx],dl
	...
 715:	00 00                	add    BYTE PTR [rax],al
 717:	00 18                	add    BYTE PTR [rax],bl
 719:	01 00                	add    DWORD PTR [rax],eax
 71b:	00 12                	add    BYTE PTR [rdx],dl
	...
 72d:	00 00                	add    BYTE PTR [rax],al
 72f:	00 1b                	add    BYTE PTR [rbx],bl
 731:	02 00                	add    al,BYTE PTR [rax]
 733:	00 12                	add    BYTE PTR [rdx],dl
	...
 745:	00 00                	add    BYTE PTR [rax],al
 747:	00 d5                	add    ch,dl
 749:	00 00                	add    BYTE PTR [rax],al
 74b:	00 12                	add    BYTE PTR [rdx],dl
	...
 75d:	00 00                	add    BYTE PTR [rax],al
 75f:	00 f6                	add    dh,dh
 761:	01 00                	add    DWORD PTR [rax],eax
 763:	00 12                	add    BYTE PTR [rdx],dl
	...
 775:	00 00                	add    BYTE PTR [rax],al
 777:	00 62 02             	add    BYTE PTR [rdx+0x2],ah
 77a:	00 00                	add    BYTE PTR [rax],al
 77c:	12 00                	adc    al,BYTE PTR [rax]
	...
 78e:	00 00                	add    BYTE PTR [rax],al
 790:	8c 01                	mov    WORD PTR [rcx],es
 792:	00 00                	add    BYTE PTR [rax],al
 794:	12 00                	adc    al,BYTE PTR [rax]
	...
 7a6:	00 00                	add    BYTE PTR [rax],al
 7a8:	d1 01                	rol    DWORD PTR [rcx],1
 7aa:	00 00                	add    BYTE PTR [rax],al
 7ac:	12 00                	adc    al,BYTE PTR [rax]
	...
 7be:	00 00                	add    BYTE PTR [rax],al
 7c0:	ae                   	scas   al,BYTE PTR es:[rdi]
 7c1:	00 00                	add    BYTE PTR [rax],al
 7c3:	00 12                	add    BYTE PTR [rdx],dl
	...
 7d5:	00 00                	add    BYTE PTR [rax],al
 7d7:	00 a0 01 00 00 12    	add    BYTE PTR [rax+0x12000001],ah
	...
 7ed:	00 00                	add    BYTE PTR [rax],al
 7ef:	00 63 01             	add    BYTE PTR [rbx+0x1],ah
 7f2:	00 00                	add    BYTE PTR [rax],al
 7f4:	12 00                	adc    al,BYTE PTR [rax]
	...
 806:	00 00                	add    BYTE PTR [rax],al
 808:	99                   	cdq    
 809:	01 00                	add    DWORD PTR [rax],eax
 80b:	00 12                	add    BYTE PTR [rdx],dl
	...
 81d:	00 00                	add    BYTE PTR [rax],al
 81f:	00 24 01             	add    BYTE PTR [rcx+rax*1],ah
 822:	00 00                	add    BYTE PTR [rax],al
 824:	12 00                	adc    al,BYTE PTR [rax]
	...
 836:	00 00                	add    BYTE PTR [rax],al
 838:	e0 00                	loopne 83a <__abi_tag+0x476>
 83a:	00 00                	add    BYTE PTR [rax],al
 83c:	12 00                	adc    al,BYTE PTR [rax]
	...
 84e:	00 00                	add    BYTE PTR [rax],al
 850:	bd 00 00 00 12       	mov    ebp,0x12000000
	...
 865:	00 00                	add    BYTE PTR [rax],al
 867:	00 92 01 00 00 12    	add    BYTE PTR [rdx+0x12000001],dl
	...
 87d:	00 00                	add    BYTE PTR [rax],al
 87f:	00 eb                	add    bl,ch
 881:	00 00                	add    BYTE PTR [rax],al
 883:	00 12                	add    BYTE PTR [rdx],dl
	...
 895:	00 00                	add    BYTE PTR [rax],al
 897:	00 7d 02             	add    BYTE PTR [rbp+0x2],bh
 89a:	00 00                	add    BYTE PTR [rax],al
 89c:	12 00                	adc    al,BYTE PTR [rax]
	...
 8ae:	00 00                	add    BYTE PTR [rax],al
 8b0:	7d 01                	jge    8b3 <__abi_tag+0x4ef>
 8b2:	00 00                	add    BYTE PTR [rax],al
 8b4:	12 00                	adc    al,BYTE PTR [rax]
	...
 8c6:	00 00                	add    BYTE PTR [rax],al
 8c8:	f9                   	stc    
 8c9:	00 00                	add    BYTE PTR [rax],al
 8cb:	00 12                	add    BYTE PTR [rdx],dl
	...
 8dd:	00 00                	add    BYTE PTR [rax],al
 8df:	00 b9 01 00 00 12    	add    BYTE PTR [rcx+0x12000001],bh
	...
 8f5:	00 00                	add    BYTE PTR [rax],al
 8f7:	00 ca                	add    dl,cl
 8f9:	01 00                	add    DWORD PTR [rax],eax
 8fb:	00 12                	add    BYTE PTR [rdx],dl
	...
 90d:	00 00                	add    BYTE PTR [rax],al
 90f:	00 cb                	add    bl,cl
 911:	00 00                	add    BYTE PTR [rax],al
 913:	00 12                	add    BYTE PTR [rdx],dl
	...
 925:	00 00                	add    BYTE PTR [rax],al
 927:	00 5f 00             	add    BYTE PTR [rdi+0x0],bl
 92a:	00 00                	add    BYTE PTR [rax],al
 92c:	12 00                	adc    al,BYTE PTR [rax]
	...
 93e:	00 00                	add    BYTE PTR [rax],al
 940:	b2 01                	mov    dl,0x1
 942:	00 00                	add    BYTE PTR [rax],al
 944:	12 00                	adc    al,BYTE PTR [rax]
	...
 956:	00 00                	add    BYTE PTR [rax],al
 958:	0c 02                	or     al,0x2
 95a:	00 00                	add    BYTE PTR [rax],al
 95c:	12 00                	adc    al,BYTE PTR [rax]
	...
 96e:	00 00                	add    BYTE PTR [rax],al
 970:	49 01 00             	add    QWORD PTR [r8],rax
 973:	00 12                	add    BYTE PTR [rdx],dl
	...
 985:	00 00                	add    BYTE PTR [rax],al
 987:	00 32                	add    BYTE PTR [rdx],dh
 989:	02 00                	add    al,BYTE PTR [rax]
 98b:	00 12                	add    BYTE PTR [rdx],dl
	...
 99d:	00 00                	add    BYTE PTR [rax],al
 99f:	00 46 00             	add    BYTE PTR [rsi+0x0],al
 9a2:	00 00                	add    BYTE PTR [rax],al
 9a4:	12 00                	adc    al,BYTE PTR [rax]
	...
 9b6:	00 00                	add    BYTE PTR [rax],al
 9b8:	37                   	(bad)  
 9b9:	02 00                	add    al,BYTE PTR [rax]
 9bb:	00 12                	add    BYTE PTR [rdx],dl
	...
 9cd:	00 00                	add    BYTE PTR [rax],al
 9cf:	00 5b 02             	add    BYTE PTR [rbx+0x2],bl
 9d2:	00 00                	add    BYTE PTR [rax],al
 9d4:	12 00                	adc    al,BYTE PTR [rax]
	...
 9e6:	00 00                	add    BYTE PTR [rax],al
 9e8:	84 01                	test   BYTE PTR [rcx],al
 9ea:	00 00                	add    BYTE PTR [rax],al
 9ec:	12 00                	adc    al,BYTE PTR [rax]
	...
 9fe:	00 00                	add    BYTE PTR [rax],al
 a00:	2b 01                	sub    eax,DWORD PTR [rcx]
 a02:	00 00                	add    BYTE PTR [rax],al
 a04:	12 00                	adc    al,BYTE PTR [rax]
	...
 a16:	00 00                	add    BYTE PTR [rax],al
 a18:	21 02                	and    DWORD PTR [rdx],eax
 a1a:	00 00                	add    BYTE PTR [rax],al
 a1c:	12 00                	adc    al,BYTE PTR [rax]
	...
 a2e:	00 00                	add    BYTE PTR [rax],al
 a30:	6b 01 00             	imul   eax,DWORD PTR [rcx],0x0
 a33:	00 12                	add    BYTE PTR [rdx],dl
	...
 a45:	00 00                	add    BYTE PTR [rax],al
 a47:	00 69 02             	add    BYTE PTR [rcx+0x2],ch
 a4a:	00 00                	add    BYTE PTR [rax],al
 a4c:	12 00                	adc    al,BYTE PTR [rax]
	...
 a5e:	00 00                	add    BYTE PTR [rax],al
 a60:	96                   	xchg   esi,eax
 a61:	00 00                	add    BYTE PTR [rax],al
 a63:	00 12                	add    BYTE PTR [rdx],dl
	...
 a75:	00 00                	add    BYTE PTR [rax],al
 a77:	00 30                	add    BYTE PTR [rax],dh
 a79:	01 00                	add    DWORD PTR [rax],eax
 a7b:	00 12                	add    BYTE PTR [rdx],dl
	...
 a8d:	00 00                	add    BYTE PTR [rax],al
 a8f:	00 09                	add    BYTE PTR [rcx],cl
 a91:	01 00                	add    DWORD PTR [rax],eax
 a93:	00 22                	add    BYTE PTR [rdx],ah
	...
 aa5:	00 00                	add    BYTE PTR [rax],al
 aa7:	00 ee                	add    dh,ch
 aa9:	01 00                	add    DWORD PTR [rax],eax
 aab:	00 12                	add    BYTE PTR [rdx],dl
 aad:	00 10                	add    BYTE PTR [rax],dl
 aaf:	00 f5                	add    ch,dh
 ab1:	90                   	nop
 ab2:	00 00                	add    BYTE PTR [rax],al
 ab4:	00 00                	add    BYTE PTR [rax],al
 ab6:	00 00                	add    BYTE PTR [rax],al
 ab8:	3a 01                	cmp    al,BYTE PTR [rcx]
 aba:	00 00                	add    BYTE PTR [rax],al
 abc:	00 00                	add    BYTE PTR [rax],al
 abe:	00 00                	add    BYTE PTR [rax],al
 ac0:	df 01                	fild   WORD PTR [rcx]
 ac2:	00 00                	add    BYTE PTR [rax],al
 ac4:	11 00                	adc    DWORD PTR [rax],eax
 ac6:	1b 00                	sbb    eax,DWORD PTR [rax]
 ac8:	60                   	(bad)  
 ac9:	10 01                	adc    BYTE PTR [rcx],al
 acb:	00 00                	add    BYTE PTR [rax],al
 acd:	00 00                	add    BYTE PTR [rax],al
 acf:	00 08                	add    BYTE PTR [rax],cl
 ad1:	00 00                	add    BYTE PTR [rax],al
 ad3:	00 00                	add    BYTE PTR [rax],al
 ad5:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynstr:

0000000000000ad8 <.dynstr>:
 ad8:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 adb:	54                   	push   rsp
 adc:	4d 5f                	rex.WRB pop r15
 ade:	64 65 72 65          	fs gs jb b47 <__abi_tag+0x783>
 ae2:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 ae9:	4d 
 aea:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 aec:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 aed:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 aee:	65 54                	gs push rsp
 af0:	61                   	(bad)  
 af1:	62                   	(bad)  
 af2:	6c                   	ins    BYTE PTR es:[rdi],dx
 af3:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
 af7:	67 6d                	ins    DWORD PTR es:[edi],dx
 af9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 afa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 afb:	5f                   	pop    rdi
 afc:	73 74                	jae    b72 <__abi_tag+0x7ae>
 afe:	61                   	(bad)  
 aff:	72 74                	jb     b75 <__abi_tag+0x7b1>
 b01:	5f                   	pop    rdi
 b02:	5f                   	pop    rdi
 b03:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 b06:	54                   	push   rsp
 b07:	4d 5f                	rex.WRB pop r15
 b09:	72 65                	jb     b70 <__abi_tag+0x7ac>
 b0b:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 b12:	4d 
 b13:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 b15:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b16:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b17:	65 54                	gs push rsp
 b19:	61                   	(bad)  
 b1a:	62                   	(bad)  
 b1b:	6c                   	ins    BYTE PTR es:[rdi],dx
 b1c:	65 00 70 63          	add    BYTE PTR gs:[rax+0x63],dh
 b20:	61                   	(bad)  
 b21:	70 5f                	jo     b82 <__abi_tag+0x7be>
 b23:	6c                   	ins    BYTE PTR es:[rdi],dx
 b24:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b25:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b26:	70 00                	jo     b28 <__abi_tag+0x764>
 b28:	70 63                	jo     b8d <__abi_tag+0x7c9>
 b2a:	61                   	(bad)  
 b2b:	70 5f                	jo     b8c <__abi_tag+0x7c8>
 b2d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b2e:	70 65                	jo     b95 <__abi_tag+0x7d1>
 b30:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b31:	5f                   	pop    rdi
 b32:	6c                   	ins    BYTE PTR es:[rdi],dx
 b33:	69 76 65 00 73 71 6c 	imul   esi,DWORD PTR [rsi+0x65],0x6c717300
 b3a:	69 74 65 33 5f 65 72 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x7272655f
 b41:	72 
 b42:	6d                   	ins    DWORD PTR es:[rdi],dx
 b43:	73 67                	jae    bac <__abi_tag+0x7e8>
 b45:	00 73 71             	add    BYTE PTR [rbx+0x71],dh
 b48:	6c                   	ins    BYTE PTR es:[rdi],dx
 b49:	69 74 65 33 5f 66 72 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6572665f
 b50:	65 
 b51:	65 00 73 71          	add    BYTE PTR gs:[rbx+0x71],dh
 b55:	6c                   	ins    BYTE PTR es:[rdi],dx
 b56:	69 74 65 33 5f 65 78 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6578655f
 b5d:	65 
 b5e:	63 00                	movsxd eax,DWORD PTR [rax]
 b60:	73 71                	jae    bd3 <__abi_tag+0x80f>
 b62:	6c                   	ins    BYTE PTR es:[rdi],dx
 b63:	69 74 65 33 5f 63 6c 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6f6c635f
 b6a:	6f 
 b6b:	73 65                	jae    bd2 <__abi_tag+0x80e>
 b6d:	00 73 71             	add    BYTE PTR [rbx+0x71],dh
 b70:	6c                   	ins    BYTE PTR es:[rdi],dx
 b71:	69 74 65 33 5f 6f 70 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x65706f5f
 b78:	65 
 b79:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b7a:	00 6c 75 61          	add    BYTE PTR [rbp+rsi*2+0x61],ch
 b7e:	5f                   	pop    rdi
 b7f:	73 65                	jae    be6 <__abi_tag+0x822>
 b81:	74 74                	je     bf7 <__abi_tag+0x833>
 b83:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b84:	70 00                	jo     b86 <__abi_tag+0x7c2>
 b86:	6c                   	ins    BYTE PTR es:[rdi],dx
 b87:	75 61                	jne    bea <__abi_tag+0x826>
 b89:	4c 5f                	rex.WR pop rdi
 b8b:	6c                   	ins    BYTE PTR es:[rdi],dx
 b8c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b8d:	61                   	(bad)  
 b8e:	64 66 69 6c 65 78 00 	imul   bp,WORD PTR fs:[rbp+riz*2+0x78],0x6c00
 b95:	6c 
 b96:	75 61                	jne    bf9 <__abi_tag+0x835>
 b98:	4c 5f                	rex.WR pop rdi
 b9a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b9b:	65 77 73             	gs ja  c11 <__abi_tag+0x84d>
 b9e:	74 61                	je     c01 <__abi_tag+0x83d>
 ba0:	74 65                	je     c07 <__abi_tag+0x843>
 ba2:	00 6c 75 61          	add    BYTE PTR [rbp+rsi*2+0x61],ch
 ba6:	5f                   	pop    rdi
 ba7:	63 6c 6f 73          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
 bab:	65 00 6c 75 61       	add    BYTE PTR gs:[rbp+rsi*2+0x61],ch
 bb0:	5f                   	pop    rdi
 bb1:	70 63                	jo     c16 <__abi_tag+0x852>
 bb3:	61                   	(bad)  
 bb4:	6c                   	ins    BYTE PTR es:[rdi],dx
 bb5:	6c                   	ins    BYTE PTR es:[rdi],dx
 bb6:	6b 00 6c             	imul   eax,DWORD PTR [rax],0x6c
 bb9:	75 61                	jne    c1c <__abi_tag+0x858>
 bbb:	5f                   	pop    rdi
 bbc:	67 65 74 74          	addr32 gs je c34 <__abi_tag+0x870>
 bc0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bc1:	70 00                	jo     bc3 <__abi_tag+0x7ff>
 bc3:	6c                   	ins    BYTE PTR es:[rdi],dx
 bc4:	75 61                	jne    c27 <__abi_tag+0x863>
 bc6:	4c 5f                	rex.WR pop rdi
 bc8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bc9:	70 65                	jo     c30 <__abi_tag+0x86c>
 bcb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 bcc:	6c                   	ins    BYTE PTR es:[rdi],dx
 bcd:	69 62 73 00 67 65 74 	imul   esp,DWORD PTR [rdx+0x73],0x74656700
 bd4:	6c                   	ins    BYTE PTR es:[rdi],dx
 bd5:	69 6e 65 00 73 74 72 	imul   ebp,DWORD PTR [rsi+0x65],0x72747300
 bdc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 bdd:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
 be0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 be3:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
 be6:	5f                   	pop    rdi
 be7:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 bed:	7a 65                	jp     c54 <__abi_tag+0x890>
 bef:	00 6e 74             	add    BYTE PTR [rsi+0x74],ch
 bf2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bf3:	68 6c 00 6e 74       	push   0x746e006c
 bf8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bf9:	68 73 00 73 74       	push   0x74730073
 bfe:	72 63                	jb     c63 <__abi_tag+0x89f>
 c00:	68 72 00 6c 6f       	push   0x6f6c0072
 c05:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
 c08:	74 69                	je     c73 <__abi_tag+0x8af>
 c0a:	6d                   	ins    DWORD PTR es:[rdi],dx
 c0b:	65 00 6d 61          	add    BYTE PTR gs:[rbp+0x61],ch
 c0f:	6c                   	ins    BYTE PTR es:[rdi],dx
 c10:	6c                   	ins    BYTE PTR es:[rdi],dx
 c11:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c12:	63 00                	movsxd eax,DWORD PTR [rax]
 c14:	70 74                	jo     c8a <__abi_tag+0x8c6>
 c16:	68 72 65 61 64       	push   0x64616572
 c1b:	5f                   	pop    rdi
 c1c:	6a 6f                	push   0x6f
 c1e:	69 6e 00 73 74 72 63 	imul   ebp,DWORD PTR [rsi+0x0],0x63727473
 c25:	73 70                	jae    c97 <__abi_tag+0x8d3>
 c27:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c28:	00 62 61             	add    BYTE PTR [rdx+0x61],ah
 c2b:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
 c2e:	72 61                	jb     c91 <__abi_tag+0x8cd>
 c30:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
 c33:	73 79                	jae    cae <__abi_tag+0x8ea>
 c35:	6d                   	ins    DWORD PTR es:[rdi],dx
 c36:	62                   	(bad)  
 c37:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c38:	6c                   	ins    BYTE PTR es:[rdi],dx
 c39:	73 00                	jae    c3b <__abi_tag+0x877>
 c3b:	72 65                	jb     ca2 <__abi_tag+0x8de>
 c3d:	67 63 6f 6d          	movsxd ebp,DWORD PTR [edi+0x6d]
 c41:	70 00                	jo     c43 <__abi_tag+0x87f>
 c43:	5f                   	pop    rdi
 c44:	5f                   	pop    rdi
 c45:	6c                   	ins    BYTE PTR es:[rdi],dx
 c46:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 c4d:	72 74                	jb     cc3 <__abi_tag+0x8ff>
 c4f:	5f                   	pop    rdi
 c50:	6d                   	ins    DWORD PTR es:[rdi],dx
 c51:	61                   	(bad)  
 c52:	69 6e 00 73 74 72 63 	imul   ebp,DWORD PTR [rsi+0x0],0x63727473
 c59:	6d                   	ins    DWORD PTR es:[rdi],dx
 c5a:	70 00                	jo     c5c <__abi_tag+0x898>
 c5c:	66 70 72             	data16 jo cd1 <__abi_tag+0x90d>
 c5f:	69 6e 74 66 00 66 70 	imul   ebp,DWORD PTR [rsi+0x74],0x70660066
 c66:	75 74                	jne    cdc <__abi_tag+0x918>
 c68:	73 00                	jae    c6a <__abi_tag+0x8a6>
 c6a:	73 6f                	jae    cdb <__abi_tag+0x917>
 c6c:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
 c6f:	74 00                	je     c71 <__abi_tag+0x8ad>
 c71:	73 69                	jae    cdc <__abi_tag+0x918>
 c73:	67 6e                	outs   dx,BYTE PTR ds:[esi]
 c75:	61                   	(bad)  
 c76:	6c                   	ins    BYTE PTR es:[rdi],dx
 c77:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
 c7a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c7b:	69 00 66 6f 70 65    	imul   eax,DWORD PTR [rax],0x65706f66
 c81:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c82:	00 67 65             	add    BYTE PTR [rdi+0x65],ah
 c85:	74 6f                	je     cf6 <__abi_tag+0x932>
 c87:	70 74                	jo     cfd <__abi_tag+0x939>
 c89:	00 66 63             	add    BYTE PTR [rsi+0x63],ah
 c8c:	6c                   	ins    BYTE PTR es:[rdi],dx
 c8d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c8e:	73 65                	jae    cf5 <__abi_tag+0x931>
 c90:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 c93:	72 63                	jb     cf8 <__abi_tag+0x934>
 c95:	70 79                	jo     d10 <__abi_tag+0x94c>
 c97:	00 62 61             	add    BYTE PTR [rdx+0x61],ah
 c9a:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
 c9d:	72 61                	jb     d00 <__abi_tag+0x93c>
 c9f:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
 ca2:	73 74                	jae    d18 <__abi_tag+0x954>
 ca4:	72 74                	jb     d1a <__abi_tag+0x956>
 ca6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 ca7:	6b 00 73             	imul   eax,DWORD PTR [rax],0x73
 caa:	74 72                	je     d1e <__abi_tag+0x95a>
 cac:	74 6f                	je     d1d <__abi_tag+0x959>
 cae:	6c                   	ins    BYTE PTR es:[rdi],dx
 caf:	00 6d 65             	add    BYTE PTR [rbp+0x65],ch
 cb2:	6d                   	ins    DWORD PTR es:[rdi],dx
 cb3:	73 65                	jae    d1a <__abi_tag+0x956>
 cb5:	74 00                	je     cb7 <__abi_tag+0x8f3>
 cb7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 cb8:	70 74                	jo     d2e <__abi_tag+0x96a>
 cba:	61                   	(bad)  
 cbb:	72 67                	jb     d24 <__abi_tag+0x960>
 cbd:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 cc0:	72 6e                	jb     d30 <__abi_tag+0x96c>
 cc2:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
 cc5:	00 69 73             	add    BYTE PTR [rcx+0x73],ch
 cc8:	64 69 67 69 74 00 73 	imul   esp,DWORD PTR fs:[rdi+0x69],0x74730074
 ccf:	74 
 cd0:	72 73                	jb     d45 <__abi_tag+0x981>
 cd2:	74 72                	je     d46 <__abi_tag+0x982>
 cd4:	00 70 74             	add    BYTE PTR [rax+0x74],dh
 cd7:	68 72 65 61 64       	push   0x64616572
 cdc:	5f                   	pop    rdi
 cdd:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
 ce0:	61                   	(bad)  
 ce1:	74 65                	je     d48 <__abi_tag+0x984>
 ce3:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 ce6:	72 6e                	jb     d56 <__abi_tag+0x992>
 ce8:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
 ceb:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 cee:	72 6c                	jb     d5c <__abi_tag+0x998>
 cf0:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 cf2:	00 73 6c             	add    BYTE PTR [rbx+0x6c],dh
 cf5:	65 65 70 00          	gs gs jo cf9 <__abi_tag+0x935>
 cf9:	67 65 74 64          	addr32 gs je d61 <__abi_tag+0x99d>
 cfd:	65 6c                	gs ins BYTE PTR es:[rdi],dx
 cff:	69 6d 00 73 70 72 69 	imul   ebp,DWORD PTR [rbp+0x0],0x69727073
 d06:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d07:	74 66                	je     d6f <__abi_tag+0x9ab>
 d09:	00 62 69             	add    BYTE PTR [rdx+0x69],ah
 d0c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d0d:	64 00 68 74          	add    BYTE PTR fs:[rax+0x74],ch
 d11:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d12:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d13:	6c                   	ins    BYTE PTR es:[rdi],dx
 d14:	00 68 74             	add    BYTE PTR [rax+0x74],ch
 d17:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d18:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d19:	73 00                	jae    d1b <__abi_tag+0x957>
 d1b:	73 6e                	jae    d8b <__abi_tag+0x9c7>
 d1d:	70 72                	jo     d91 <__abi_tag+0x9cd>
 d1f:	69 6e 74 66 00 72 65 	imul   ebp,DWORD PTR [rsi+0x74],0x65720066
 d26:	67 65 78 65          	addr32 gs js d8f <__abi_tag+0x9cb>
 d2a:	63 00                	movsxd eax,DWORD PTR [rax]
 d2c:	6c                   	ins    BYTE PTR es:[rdi],dx
 d2d:	69 73 74 65 6e 00 70 	imul   esi,DWORD PTR [rbx+0x74],0x70006e65
 d34:	65 72 72             	gs jb  da9 <__abi_tag+0x9e5>
 d37:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d38:	72 00                	jb     d3a <__abi_tag+0x976>
 d3a:	73 74                	jae    db0 <__abi_tag+0x9ec>
 d3c:	72 63                	jb     da1 <__abi_tag+0x9dd>
 d3e:	61                   	(bad)  
 d3f:	74 00                	je     d41 <__abi_tag+0x97d>
 d41:	61                   	(bad)  
 d42:	63 63 65             	movsxd esp,DWORD PTR [rbx+0x65]
 d45:	70 74                	jo     dbb <__abi_tag+0x9f7>
 d47:	00 70 75             	add    BYTE PTR [rax+0x75],dh
 d4a:	74 63                	je     daf <__abi_tag+0x9eb>
 d4c:	68 61 72 00 65       	push   0x65007261
 d51:	78 69                	js     dbc <__abi_tag+0x9f8>
 d53:	74 00                	je     d55 <__abi_tag+0x991>
 d55:	5f                   	pop    rdi
 d56:	5f                   	pop    rdi
 d57:	73 74                	jae    dcd <__abi_tag+0xa09>
 d59:	61                   	(bad)  
 d5a:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 d5d:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 d60:	5f                   	pop    rdi
 d61:	66 61                	data16 (bad) 
 d63:	69 6c 00 73 65 74 73 	imul   ebp,DWORD PTR [rax+rax*1+0x73],0x6f737465
 d6a:	6f 
 d6b:	63 6b 6f             	movsxd ebp,DWORD PTR [rbx+0x6f]
 d6e:	70 74                	jo     de4 <__abi_tag+0xa20>
 d70:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 d74:	70 63                	jo     dd9 <__abi_tag+0xa15>
 d76:	61                   	(bad)  
 d77:	70 2e                	jo     da7 <__abi_tag+0x9e3>
 d79:	73 6f                	jae    dea <__abi_tag+0xa26>
 d7b:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
 d7e:	38 00                	cmp    BYTE PTR [rax],al
 d80:	6c                   	ins    BYTE PTR es:[rdi],dx
 d81:	69 62 73 71 6c 69 74 	imul   esp,DWORD PTR [rdx+0x73],0x74696c71
 d88:	65 33 2e             	xor    ebp,DWORD PTR gs:[rsi]
 d8b:	73 6f                	jae    dfc <__abi_tag+0xa38>
 d8d:	2e 30 00             	cs xor BYTE PTR [rax],al
 d90:	6c                   	ins    BYTE PTR es:[rdi],dx
 d91:	69 62 6c 75 61 35 2e 	imul   esp,DWORD PTR [rdx+0x6c],0x2e356175
 d98:	33 2e                	xor    ebp,DWORD PTR [rsi]
 d9a:	73 6f                	jae    e0b <__abi_tag+0xa47>
 d9c:	2e 30 00             	cs xor BYTE PTR [rax],al
 d9f:	6c                   	ins    BYTE PTR es:[rdi],dx
 da0:	69 62 63 2e 73 6f 2e 	imul   esp,DWORD PTR [rdx+0x63],0x2e6f732e
 da7:	36 00 4c 55 41       	ss add BYTE PTR [rbp+rdx*2+0x41],cl
 dac:	5f                   	pop    rdi
 dad:	35 2e 33 00 47       	xor    eax,0x4700332e
 db2:	4c                   	rex.WR
 db3:	49                   	rex.WB
 db4:	42                   	rex.X
 db5:	43 5f                	rex.XB pop r15
 db7:	32 2e                	xor    ch,BYTE PTR [rsi]
 db9:	34 00                	xor    al,0x0
 dbb:	47                   	rex.RXB
 dbc:	4c                   	rex.WR
 dbd:	49                   	rex.WB
 dbe:	42                   	rex.X
 dbf:	43 5f                	rex.XB pop r15
 dc1:	32 2e                	xor    ch,BYTE PTR [rsi]
 dc3:	33 2e                	xor    ebp,DWORD PTR [rsi]
 dc5:	34 00                	xor    al,0x0
 dc7:	47                   	rex.RXB
 dc8:	4c                   	rex.WR
 dc9:	49                   	rex.WB
 dca:	42                   	rex.X
 dcb:	43 5f                	rex.XB pop r15
 dcd:	32 2e                	xor    ch,BYTE PTR [rsi]
 dcf:	32 2e                	xor    ch,BYTE PTR [rsi]
 dd1:	35 00 47 4c 49       	xor    eax,0x494c4700
 dd6:	42                   	rex.X
 dd7:	43 5f                	rex.XB pop r15
 dd9:	32 2e                	xor    ch,BYTE PTR [rsi]
 ddb:	33 34 00             	xor    esi,DWORD PTR [rax+rax*1]

Disassembly of section .gnu.version:

0000000000000dde <.gnu.version>:
 dde:	00 00                	add    BYTE PTR [rax],al
 de0:	00 00                	add    BYTE PTR [rax],al
 de2:	02 00                	add    al,BYTE PTR [rax]
 de4:	03 00                	add    eax,DWORD PTR [rax]
 de6:	03 00                	add    eax,DWORD PTR [rax]
 de8:	03 00                	add    eax,DWORD PTR [rax]
 dea:	03 00                	add    eax,DWORD PTR [rax]
 dec:	03 00                	add    eax,DWORD PTR [rax]
 dee:	00 00                	add    BYTE PTR [rax],al
 df0:	03 00                	add    eax,DWORD PTR [rax]
 df2:	03 00                	add    eax,DWORD PTR [rax]
 df4:	03 00                	add    eax,DWORD PTR [rax]
 df6:	03 00                	add    eax,DWORD PTR [rax]
 df8:	00 00                	add    BYTE PTR [rax],al
 dfa:	03 00                	add    eax,DWORD PTR [rax]
 dfc:	03 00                	add    eax,DWORD PTR [rax]
 dfe:	03 00                	add    eax,DWORD PTR [rax]
 e00:	03 00                	add    eax,DWORD PTR [rax]
 e02:	04 00                	add    al,0x0
 e04:	00 00                	add    BYTE PTR [rax],al
 e06:	03 00                	add    eax,DWORD PTR [rax]
 e08:	00 00                	add    BYTE PTR [rax],al
 e0a:	05 00 00 00 02       	add    eax,0x2000000
 e0f:	00 03                	add    BYTE PTR [rbx],al
 e11:	00 03                	add    BYTE PTR [rbx],al
 e13:	00 03                	add    BYTE PTR [rbx],al
 e15:	00 00                	add    BYTE PTR [rax],al
 e17:	00 03                	add    BYTE PTR [rbx],al
 e19:	00 03                	add    BYTE PTR [rbx],al
 e1b:	00 03                	add    BYTE PTR [rbx],al
 e1d:	00 03                	add    BYTE PTR [rbx],al
 e1f:	00 03                	add    BYTE PTR [rbx],al
 e21:	00 05 00 03 00 03    	add    BYTE PTR [rip+0x3000300],al        # 3001127 <_end+0x2ec611f>
 e27:	00 03                	add    BYTE PTR [rbx],al
 e29:	00 03                	add    BYTE PTR [rbx],al
 e2b:	00 05 00 03 00 03    	add    BYTE PTR [rip+0x3000300],al        # 3001131 <_end+0x2ec6129>
 e31:	00 03                	add    BYTE PTR [rbx],al
 e33:	00 03                	add    BYTE PTR [rbx],al
 e35:	00 05 00 05 00 03    	add    BYTE PTR [rip+0x3000500],al        # 300133b <_end+0x2ec6333>
 e3b:	00 05 00 06 00 03    	add    BYTE PTR [rip+0x3000600],al        # 3001441 <_end+0x2ec6439>
 e41:	00 03                	add    BYTE PTR [rbx],al
 e43:	00 03                	add    BYTE PTR [rbx],al
 e45:	00 03                	add    BYTE PTR [rbx],al
 e47:	00 05 00 00 00 03    	add    BYTE PTR [rip+0x3000000],al        # 3000e4d <_end+0x2ec5e45>
 e4d:	00 03                	add    BYTE PTR [rbx],al
 e4f:	00 03                	add    BYTE PTR [rbx],al
 e51:	00 03                	add    BYTE PTR [rbx],al
 e53:	00 00                	add    BYTE PTR [rax],al
 e55:	00 03                	add    BYTE PTR [rbx],al
 e57:	00 03                	add    BYTE PTR [rbx],al
 e59:	00 03                	add    BYTE PTR [rbx],al
 e5b:	00 03                	add    BYTE PTR [rbx],al
 e5d:	00 03                	add    BYTE PTR [rbx],al
 e5f:	00 02                	add    BYTE PTR [rdx],al
 e61:	00 03                	add    BYTE PTR [rbx],al
 e63:	00 00                	add    BYTE PTR [rax],al
 e65:	00 03                	add    BYTE PTR [rbx],al
 e67:	00 03                	add    BYTE PTR [rbx],al
 e69:	00 01                	add    BYTE PTR [rcx],al
 e6b:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .gnu.version_r:

0000000000000e70 <.gnu.version_r>:
 e70:	01 00                	add    DWORD PTR [rax],eax
 e72:	01 00                	add    DWORD PTR [rax],eax
 e74:	b8 02 00 00 10       	mov    eax,0x10000002
 e79:	00 00                	add    BYTE PTR [rax],al
 e7b:	00 20                	add    BYTE PTR [rax],ah
 e7d:	00 00                	add    BYTE PTR [rax],al
 e7f:	00 43 28             	add    BYTE PTR [rbx+0x28],al
 e82:	97                   	xchg   edi,eax
 e83:	01 00                	add    DWORD PTR [rax],eax
 e85:	00 05 00 d1 02 00    	add    BYTE PTR [rip+0x2d100],al        # 2df8b <rules+0x1ccab>
 e8b:	00 00                	add    BYTE PTR [rax],al
 e8d:	00 00                	add    BYTE PTR [rax],al
 e8f:	00 01                	add    BYTE PTR [rcx],al
 e91:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 e94:	c7 02 00 00 10 00    	mov    DWORD PTR [rdx],0x100000
 e9a:	00 00                	add    BYTE PTR [rax],al
 e9c:	00 00                	add    BYTE PTR [rax],al
 e9e:	00 00                	add    BYTE PTR [rax],al
 ea0:	14 69                	adc    al,0x69
 ea2:	69 0d 00 00 06 00 d9 	imul   ecx,DWORD PTR [rip+0x60000],0x2d9        # 60eac <rules+0x4fbcc>
 ea9:	02 00 00 
 eac:	10 00                	adc    BYTE PTR [rax],al
 eae:	00 00                	add    BYTE PTR [rax],al
 eb0:	74 19                	je     ecb <__abi_tag+0xb07>
 eb2:	69 09 00 00 04 00    	imul   ecx,DWORD PTR [rcx],0x40000
 eb8:	e3 02                	jrcxz  ebc <__abi_tag+0xaf8>
 eba:	00 00                	add    BYTE PTR [rax],al
 ebc:	10 00                	adc    BYTE PTR [rax],al
 ebe:	00 00                	add    BYTE PTR [rax],al
 ec0:	75 1a                	jne    edc <__abi_tag+0xb18>
 ec2:	69 09 00 00 03 00    	imul   ecx,DWORD PTR [rcx],0x30000
 ec8:	ef                   	out    dx,eax
 ec9:	02 00                	add    al,BYTE PTR [rax]
 ecb:	00 10                	add    BYTE PTR [rax],dl
 ecd:	00 00                	add    BYTE PTR [rax],al
 ecf:	00 b4 91 96 06 00 00 	add    BYTE PTR [rcx+rdx*4+0x696],dh
 ed6:	02 00                	add    al,BYTE PTR [rax]
 ed8:	fb                   	sti    
 ed9:	02 00                	add    al,BYTE PTR [rax]
 edb:	00 00                	add    BYTE PTR [rax],al
 edd:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000000ee0 <.rela.dyn>:
     ee0:	90                   	nop
     ee1:	0b 01                	or     eax,DWORD PTR [rcx]
     ee3:	00 00                	add    BYTE PTR [rax],al
     ee5:	00 00                	add    BYTE PTR [rax],al
     ee7:	00 08                	add    BYTE PTR [rax],cl
     ee9:	00 00                	add    BYTE PTR [rax],al
     eeb:	00 00                	add    BYTE PTR [rax],al
     eed:	00 00                	add    BYTE PTR [rax],al
     eef:	00 20                	add    BYTE PTR [rax],ah
     ef1:	29 00                	sub    DWORD PTR [rax],eax
     ef3:	00 00                	add    BYTE PTR [rax],al
     ef5:	00 00                	add    BYTE PTR [rax],al
     ef7:	00 98 0b 01 00 00    	add    BYTE PTR [rax+0x10b],bl
     efd:	00 00                	add    BYTE PTR [rax],al
     eff:	00 08                	add    BYTE PTR [rax],cl
     f01:	00 00                	add    BYTE PTR [rax],al
     f03:	00 00                	add    BYTE PTR [rax],al
     f05:	00 00                	add    BYTE PTR [rax],al
     f07:	00 e0                	add    al,ah
     f09:	28 00                	sub    BYTE PTR [rax],al
     f0b:	00 00                	add    BYTE PTR [rax],al
     f0d:	00 00                	add    BYTE PTR [rax],al
     f0f:	00 08                	add    BYTE PTR [rax],cl
     f11:	10 01                	adc    BYTE PTR [rcx],al
     f13:	00 00                	add    BYTE PTR [rax],al
     f15:	00 00                	add    BYTE PTR [rax],al
     f17:	00 08                	add    BYTE PTR [rax],cl
     f19:	00 00                	add    BYTE PTR [rax],al
     f1b:	00 00                	add    BYTE PTR [rax],al
     f1d:	00 00                	add    BYTE PTR [rax],al
     f1f:	00 08                	add    BYTE PTR [rax],cl
     f21:	10 01                	adc    BYTE PTR [rcx],al
     f23:	00 00                	add    BYTE PTR [rax],al
     f25:	00 00                	add    BYTE PTR [rax],al
     f27:	00 28                	add    BYTE PTR [rax],ch
     f29:	10 01                	adc    BYTE PTR [rcx],al
     f2b:	00 00                	add    BYTE PTR [rax],al
     f2d:	00 00                	add    BYTE PTR [rax],al
     f2f:	00 08                	add    BYTE PTR [rax],cl
     f31:	00 00                	add    BYTE PTR [rax],al
     f33:	00 00                	add    BYTE PTR [rax],al
     f35:	00 00                	add    BYTE PTR [rax],al
     f37:	00 04 c0             	add    BYTE PTR [rax+rax*8],al
     f3a:	00 00                	add    BYTE PTR [rax],al
     f3c:	00 00                	add    BYTE PTR [rax],al
     f3e:	00 00                	add    BYTE PTR [rax],al
     f40:	30 10                	xor    BYTE PTR [rax],dl
     f42:	01 00                	add    DWORD PTR [rax],eax
     f44:	00 00                	add    BYTE PTR [rax],al
     f46:	00 00                	add    BYTE PTR [rax],al
     f48:	08 00                	or     BYTE PTR [rax],al
     f4a:	00 00                	add    BYTE PTR [rax],al
     f4c:	00 00                	add    BYTE PTR [rax],al
     f4e:	00 00                	add    BYTE PTR [rax],al
     f50:	1a c0                	sbb    al,al
     f52:	00 00                	add    BYTE PTR [rax],al
     f54:	00 00                	add    BYTE PTR [rax],al
     f56:	00 00                	add    BYTE PTR [rax],al
     f58:	38 10                	cmp    BYTE PTR [rax],dl
     f5a:	01 00                	add    DWORD PTR [rax],eax
     f5c:	00 00                	add    BYTE PTR [rax],al
     f5e:	00 00                	add    BYTE PTR [rax],al
     f60:	08 00                	or     BYTE PTR [rax],al
     f62:	00 00                	add    BYTE PTR [rax],al
     f64:	00 00                	add    BYTE PTR [rax],al
     f66:	00 00                	add    BYTE PTR [rax],al
     f68:	34 c0                	xor    al,0xc0
     f6a:	00 00                	add    BYTE PTR [rax],al
     f6c:	00 00                	add    BYTE PTR [rax],al
     f6e:	00 00                	add    BYTE PTR [rax],al
     f70:	d8 0f                	fmul   DWORD PTR [rdi]
     f72:	01 00                	add    DWORD PTR [rax],eax
     f74:	00 00                	add    BYTE PTR [rax],al
     f76:	00 00                	add    BYTE PTR [rax],al
     f78:	06                   	(bad)  
     f79:	00 00                	add    BYTE PTR [rax],al
     f7b:	00 08                	add    BYTE PTR [rax],cl
	...
     f85:	00 00                	add    BYTE PTR [rax],al
     f87:	00 e0                	add    al,ah
     f89:	0f 01 00             	sgdt   [rax]
     f8c:	00 00                	add    BYTE PTR [rax],al
     f8e:	00 00                	add    BYTE PTR [rax],al
     f90:	06                   	(bad)  
     f91:	00 00                	add    BYTE PTR [rax],al
     f93:	00 17                	add    BYTE PTR [rdi],dl
	...
     f9d:	00 00                	add    BYTE PTR [rax],al
     f9f:	00 e8                	add    al,ch
     fa1:	0f 01 00             	sgdt   [rax]
     fa4:	00 00                	add    BYTE PTR [rax],al
     fa6:	00 00                	add    BYTE PTR [rax],al
     fa8:	06                   	(bad)  
     fa9:	00 00                	add    BYTE PTR [rax],al
     fab:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
	...
     fb6:	00 00                	add    BYTE PTR [rax],al
     fb8:	f0 0f 01 00          	lock sgdt [rax]
     fbc:	00 00                	add    BYTE PTR [rax],al
     fbe:	00 00                	add    BYTE PTR [rax],al
     fc0:	06                   	(bad)  
     fc1:	00 00                	add    BYTE PTR [rax],al
     fc3:	00 45 00             	add    BYTE PTR [rbp+0x0],al
	...
     fce:	00 00                	add    BYTE PTR [rax],al
     fd0:	f8                   	clc    
     fd1:	0f 01 00             	sgdt   [rax]
     fd4:	00 00                	add    BYTE PTR [rax],al
     fd6:	00 00                	add    BYTE PTR [rax],al
     fd8:	06                   	(bad)  
     fd9:	00 00                	add    BYTE PTR [rax],al
     fdb:	00 41 00             	add    BYTE PTR [rcx+0x0],al
	...
     fe6:	00 00                	add    BYTE PTR [rax],al
     fe8:	60                   	(bad)  
     fe9:	10 01                	adc    BYTE PTR [rcx],al
     feb:	00 00                	add    BYTE PTR [rax],al
     fed:	00 00                	add    BYTE PTR [rax],al
     fef:	00 05 00 00 00 47    	add    BYTE PTR [rip+0x47000000],al        # 47000ff5 <_end+0x46ec5fed>
	...

Disassembly of section .rela.plt:

0000000000001000 <.rela.plt>:
    1000:	d8 0d 01 00 00 00    	fmul   DWORD PTR [rip+0x1]        # 1007 <__abi_tag+0xc43>
    1006:	00 00                	add    BYTE PTR [rax],al
    1008:	07                   	(bad)  
    1009:	00 00                	add    BYTE PTR [rax],al
    100b:	00 01                	add    BYTE PTR [rcx],al
	...
    1015:	00 00                	add    BYTE PTR [rax],al
    1017:	00 e0                	add    al,ah
    1019:	0d 01 00 00 00       	or     eax,0x1
    101e:	00 00                	add    BYTE PTR [rax],al
    1020:	07                   	(bad)  
    1021:	00 00                	add    BYTE PTR [rax],al
    1023:	00 02                	add    BYTE PTR [rdx],al
	...
    102d:	00 00                	add    BYTE PTR [rax],al
    102f:	00 e8                	add    al,ch
    1031:	0d 01 00 00 00       	or     eax,0x1
    1036:	00 00                	add    BYTE PTR [rax],al
    1038:	07                   	(bad)  
    1039:	00 00                	add    BYTE PTR [rax],al
    103b:	00 03                	add    BYTE PTR [rbx],al
	...
    1045:	00 00                	add    BYTE PTR [rax],al
    1047:	00 f0                	add    al,dh
    1049:	0d 01 00 00 00       	or     eax,0x1
    104e:	00 00                	add    BYTE PTR [rax],al
    1050:	07                   	(bad)  
    1051:	00 00                	add    BYTE PTR [rax],al
    1053:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
    105e:	00 00                	add    BYTE PTR [rax],al
    1060:	f8                   	clc    
    1061:	0d 01 00 00 00       	or     eax,0x1
    1066:	00 00                	add    BYTE PTR [rax],al
    1068:	07                   	(bad)  
    1069:	00 00                	add    BYTE PTR [rax],al
    106b:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 1071 <__abi_tag+0xcad>
	...
    1079:	0e                   	(bad)  
    107a:	01 00                	add    DWORD PTR [rax],eax
    107c:	00 00                	add    BYTE PTR [rax],al
    107e:	00 00                	add    BYTE PTR [rax],al
    1080:	07                   	(bad)  
    1081:	00 00                	add    BYTE PTR [rax],al
    1083:	00 06                	add    BYTE PTR [rsi],al
	...
    108d:	00 00                	add    BYTE PTR [rax],al
    108f:	00 08                	add    BYTE PTR [rax],cl
    1091:	0e                   	(bad)  
    1092:	01 00                	add    DWORD PTR [rax],eax
    1094:	00 00                	add    BYTE PTR [rax],al
    1096:	00 00                	add    BYTE PTR [rax],al
    1098:	07                   	(bad)  
    1099:	00 00                	add    BYTE PTR [rax],al
    109b:	00 07                	add    BYTE PTR [rdi],al
	...
    10a5:	00 00                	add    BYTE PTR [rax],al
    10a7:	00 10                	add    BYTE PTR [rax],dl
    10a9:	0e                   	(bad)  
    10aa:	01 00                	add    DWORD PTR [rax],eax
    10ac:	00 00                	add    BYTE PTR [rax],al
    10ae:	00 00                	add    BYTE PTR [rax],al
    10b0:	07                   	(bad)  
    10b1:	00 00                	add    BYTE PTR [rax],al
    10b3:	00 09                	add    BYTE PTR [rcx],cl
	...
    10bd:	00 00                	add    BYTE PTR [rax],al
    10bf:	00 18                	add    BYTE PTR [rax],bl
    10c1:	0e                   	(bad)  
    10c2:	01 00                	add    DWORD PTR [rax],eax
    10c4:	00 00                	add    BYTE PTR [rax],al
    10c6:	00 00                	add    BYTE PTR [rax],al
    10c8:	07                   	(bad)  
    10c9:	00 00                	add    BYTE PTR [rax],al
    10cb:	00 0a                	add    BYTE PTR [rdx],cl
	...
    10d5:	00 00                	add    BYTE PTR [rax],al
    10d7:	00 20                	add    BYTE PTR [rax],ah
    10d9:	0e                   	(bad)  
    10da:	01 00                	add    DWORD PTR [rax],eax
    10dc:	00 00                	add    BYTE PTR [rax],al
    10de:	00 00                	add    BYTE PTR [rax],al
    10e0:	07                   	(bad)  
    10e1:	00 00                	add    BYTE PTR [rax],al
    10e3:	00 0b                	add    BYTE PTR [rbx],cl
	...
    10ed:	00 00                	add    BYTE PTR [rax],al
    10ef:	00 28                	add    BYTE PTR [rax],ch
    10f1:	0e                   	(bad)  
    10f2:	01 00                	add    DWORD PTR [rax],eax
    10f4:	00 00                	add    BYTE PTR [rax],al
    10f6:	00 00                	add    BYTE PTR [rax],al
    10f8:	07                   	(bad)  
    10f9:	00 00                	add    BYTE PTR [rax],al
    10fb:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
	...
    1106:	00 00                	add    BYTE PTR [rax],al
    1108:	30 0e                	xor    BYTE PTR [rsi],cl
    110a:	01 00                	add    DWORD PTR [rax],eax
    110c:	00 00                	add    BYTE PTR [rax],al
    110e:	00 00                	add    BYTE PTR [rax],al
    1110:	07                   	(bad)  
    1111:	00 00                	add    BYTE PTR [rax],al
    1113:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 1119 <__abi_tag+0xd55>
    1119:	00 00                	add    BYTE PTR [rax],al
    111b:	00 00                	add    BYTE PTR [rax],al
    111d:	00 00                	add    BYTE PTR [rax],al
    111f:	00 38                	add    BYTE PTR [rax],bh
    1121:	0e                   	(bad)  
    1122:	01 00                	add    DWORD PTR [rax],eax
    1124:	00 00                	add    BYTE PTR [rax],al
    1126:	00 00                	add    BYTE PTR [rax],al
    1128:	07                   	(bad)  
    1129:	00 00                	add    BYTE PTR [rax],al
    112b:	00 0e                	add    BYTE PTR [rsi],cl
	...
    1135:	00 00                	add    BYTE PTR [rax],al
    1137:	00 40 0e             	add    BYTE PTR [rax+0xe],al
    113a:	01 00                	add    DWORD PTR [rax],eax
    113c:	00 00                	add    BYTE PTR [rax],al
    113e:	00 00                	add    BYTE PTR [rax],al
    1140:	07                   	(bad)  
    1141:	00 00                	add    BYTE PTR [rax],al
    1143:	00 0f                	add    BYTE PTR [rdi],cl
	...
    114d:	00 00                	add    BYTE PTR [rax],al
    114f:	00 48 0e             	add    BYTE PTR [rax+0xe],cl
    1152:	01 00                	add    DWORD PTR [rax],eax
    1154:	00 00                	add    BYTE PTR [rax],al
    1156:	00 00                	add    BYTE PTR [rax],al
    1158:	07                   	(bad)  
    1159:	00 00                	add    BYTE PTR [rax],al
    115b:	00 10                	add    BYTE PTR [rax],dl
	...
    1165:	00 00                	add    BYTE PTR [rax],al
    1167:	00 50 0e             	add    BYTE PTR [rax+0xe],dl
    116a:	01 00                	add    DWORD PTR [rax],eax
    116c:	00 00                	add    BYTE PTR [rax],al
    116e:	00 00                	add    BYTE PTR [rax],al
    1170:	07                   	(bad)  
    1171:	00 00                	add    BYTE PTR [rax],al
    1173:	00 11                	add    BYTE PTR [rcx],dl
	...
    117d:	00 00                	add    BYTE PTR [rax],al
    117f:	00 58 0e             	add    BYTE PTR [rax+0xe],bl
    1182:	01 00                	add    DWORD PTR [rax],eax
    1184:	00 00                	add    BYTE PTR [rax],al
    1186:	00 00                	add    BYTE PTR [rax],al
    1188:	07                   	(bad)  
    1189:	00 00                	add    BYTE PTR [rax],al
    118b:	00 12                	add    BYTE PTR [rdx],dl
	...
    1195:	00 00                	add    BYTE PTR [rax],al
    1197:	00 60 0e             	add    BYTE PTR [rax+0xe],ah
    119a:	01 00                	add    DWORD PTR [rax],eax
    119c:	00 00                	add    BYTE PTR [rax],al
    119e:	00 00                	add    BYTE PTR [rax],al
    11a0:	07                   	(bad)  
    11a1:	00 00                	add    BYTE PTR [rax],al
    11a3:	00 13                	add    BYTE PTR [rbx],dl
	...
    11ad:	00 00                	add    BYTE PTR [rax],al
    11af:	00 68 0e             	add    BYTE PTR [rax+0xe],ch
    11b2:	01 00                	add    DWORD PTR [rax],eax
    11b4:	00 00                	add    BYTE PTR [rax],al
    11b6:	00 00                	add    BYTE PTR [rax],al
    11b8:	07                   	(bad)  
    11b9:	00 00                	add    BYTE PTR [rax],al
    11bb:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
	...
    11c6:	00 00                	add    BYTE PTR [rax],al
    11c8:	70 0e                	jo     11d8 <__abi_tag+0xe14>
    11ca:	01 00                	add    DWORD PTR [rax],eax
    11cc:	00 00                	add    BYTE PTR [rax],al
    11ce:	00 00                	add    BYTE PTR [rax],al
    11d0:	07                   	(bad)  
    11d1:	00 00                	add    BYTE PTR [rax],al
    11d3:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 11d9 <__abi_tag+0xe15>
    11d9:	00 00                	add    BYTE PTR [rax],al
    11db:	00 00                	add    BYTE PTR [rax],al
    11dd:	00 00                	add    BYTE PTR [rax],al
    11df:	00 78 0e             	add    BYTE PTR [rax+0xe],bh
    11e2:	01 00                	add    DWORD PTR [rax],eax
    11e4:	00 00                	add    BYTE PTR [rax],al
    11e6:	00 00                	add    BYTE PTR [rax],al
    11e8:	07                   	(bad)  
    11e9:	00 00                	add    BYTE PTR [rax],al
    11eb:	00 16                	add    BYTE PTR [rsi],dl
	...
    11f5:	00 00                	add    BYTE PTR [rax],al
    11f7:	00 80 0e 01 00 00    	add    BYTE PTR [rax+0x10e],al
    11fd:	00 00                	add    BYTE PTR [rax],al
    11ff:	00 07                	add    BYTE PTR [rdi],al
    1201:	00 00                	add    BYTE PTR [rax],al
    1203:	00 18                	add    BYTE PTR [rax],bl
	...
    120d:	00 00                	add    BYTE PTR [rax],al
    120f:	00 88 0e 01 00 00    	add    BYTE PTR [rax+0x10e],cl
    1215:	00 00                	add    BYTE PTR [rax],al
    1217:	00 07                	add    BYTE PTR [rdi],al
    1219:	00 00                	add    BYTE PTR [rax],al
    121b:	00 19                	add    BYTE PTR [rcx],bl
	...
    1225:	00 00                	add    BYTE PTR [rax],al
    1227:	00 90 0e 01 00 00    	add    BYTE PTR [rax+0x10e],dl
    122d:	00 00                	add    BYTE PTR [rax],al
    122f:	00 07                	add    BYTE PTR [rdi],al
    1231:	00 00                	add    BYTE PTR [rax],al
    1233:	00 1a                	add    BYTE PTR [rdx],bl
	...
    123d:	00 00                	add    BYTE PTR [rax],al
    123f:	00 98 0e 01 00 00    	add    BYTE PTR [rax+0x10e],bl
    1245:	00 00                	add    BYTE PTR [rax],al
    1247:	00 07                	add    BYTE PTR [rdi],al
    1249:	00 00                	add    BYTE PTR [rax],al
    124b:	00 1b                	add    BYTE PTR [rbx],bl
	...
    1255:	00 00                	add    BYTE PTR [rax],al
    1257:	00 a0 0e 01 00 00    	add    BYTE PTR [rax+0x10e],ah
    125d:	00 00                	add    BYTE PTR [rax],al
    125f:	00 07                	add    BYTE PTR [rdi],al
    1261:	00 00                	add    BYTE PTR [rax],al
    1263:	00 1d 00 00 00 00    	add    BYTE PTR [rip+0x0],bl        # 1269 <__abi_tag+0xea5>
    1269:	00 00                	add    BYTE PTR [rax],al
    126b:	00 00                	add    BYTE PTR [rax],al
    126d:	00 00                	add    BYTE PTR [rax],al
    126f:	00 a8 0e 01 00 00    	add    BYTE PTR [rax+0x10e],ch
    1275:	00 00                	add    BYTE PTR [rax],al
    1277:	00 07                	add    BYTE PTR [rdi],al
    1279:	00 00                	add    BYTE PTR [rax],al
    127b:	00 1e                	add    BYTE PTR [rsi],bl
	...
    1285:	00 00                	add    BYTE PTR [rax],al
    1287:	00 b0 0e 01 00 00    	add    BYTE PTR [rax+0x10e],dh
    128d:	00 00                	add    BYTE PTR [rax],al
    128f:	00 07                	add    BYTE PTR [rdi],al
    1291:	00 00                	add    BYTE PTR [rax],al
    1293:	00 1f                	add    BYTE PTR [rdi],bl
	...
    129d:	00 00                	add    BYTE PTR [rax],al
    129f:	00 b8 0e 01 00 00    	add    BYTE PTR [rax+0x10e],bh
    12a5:	00 00                	add    BYTE PTR [rax],al
    12a7:	00 07                	add    BYTE PTR [rdi],al
    12a9:	00 00                	add    BYTE PTR [rax],al
    12ab:	00 20                	add    BYTE PTR [rax],ah
	...
    12b5:	00 00                	add    BYTE PTR [rax],al
    12b7:	00 c0                	add    al,al
    12b9:	0e                   	(bad)  
    12ba:	01 00                	add    DWORD PTR [rax],eax
    12bc:	00 00                	add    BYTE PTR [rax],al
    12be:	00 00                	add    BYTE PTR [rax],al
    12c0:	07                   	(bad)  
    12c1:	00 00                	add    BYTE PTR [rax],al
    12c3:	00 21                	add    BYTE PTR [rcx],ah
	...
    12cd:	00 00                	add    BYTE PTR [rax],al
    12cf:	00 c8                	add    al,cl
    12d1:	0e                   	(bad)  
    12d2:	01 00                	add    DWORD PTR [rax],eax
    12d4:	00 00                	add    BYTE PTR [rax],al
    12d6:	00 00                	add    BYTE PTR [rax],al
    12d8:	07                   	(bad)  
    12d9:	00 00                	add    BYTE PTR [rax],al
    12db:	00 22                	add    BYTE PTR [rdx],ah
	...
    12e5:	00 00                	add    BYTE PTR [rax],al
    12e7:	00 d0                	add    al,dl
    12e9:	0e                   	(bad)  
    12ea:	01 00                	add    DWORD PTR [rax],eax
    12ec:	00 00                	add    BYTE PTR [rax],al
    12ee:	00 00                	add    BYTE PTR [rax],al
    12f0:	07                   	(bad)  
    12f1:	00 00                	add    BYTE PTR [rax],al
    12f3:	00 23                	add    BYTE PTR [rbx],ah
	...
    12fd:	00 00                	add    BYTE PTR [rax],al
    12ff:	00 d8                	add    al,bl
    1301:	0e                   	(bad)  
    1302:	01 00                	add    DWORD PTR [rax],eax
    1304:	00 00                	add    BYTE PTR [rax],al
    1306:	00 00                	add    BYTE PTR [rax],al
    1308:	07                   	(bad)  
    1309:	00 00                	add    BYTE PTR [rax],al
    130b:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
	...
    1316:	00 00                	add    BYTE PTR [rax],al
    1318:	e0 0e                	loopne 1328 <__abi_tag+0xf64>
    131a:	01 00                	add    DWORD PTR [rax],eax
    131c:	00 00                	add    BYTE PTR [rax],al
    131e:	00 00                	add    BYTE PTR [rax],al
    1320:	07                   	(bad)  
    1321:	00 00                	add    BYTE PTR [rax],al
    1323:	00 25 00 00 00 00    	add    BYTE PTR [rip+0x0],ah        # 1329 <__abi_tag+0xf65>
    1329:	00 00                	add    BYTE PTR [rax],al
    132b:	00 00                	add    BYTE PTR [rax],al
    132d:	00 00                	add    BYTE PTR [rax],al
    132f:	00 e8                	add    al,ch
    1331:	0e                   	(bad)  
    1332:	01 00                	add    DWORD PTR [rax],eax
    1334:	00 00                	add    BYTE PTR [rax],al
    1336:	00 00                	add    BYTE PTR [rax],al
    1338:	07                   	(bad)  
    1339:	00 00                	add    BYTE PTR [rax],al
    133b:	00 26                	add    BYTE PTR [rsi],ah
	...
    1345:	00 00                	add    BYTE PTR [rax],al
    1347:	00 f0                	add    al,dh
    1349:	0e                   	(bad)  
    134a:	01 00                	add    DWORD PTR [rax],eax
    134c:	00 00                	add    BYTE PTR [rax],al
    134e:	00 00                	add    BYTE PTR [rax],al
    1350:	07                   	(bad)  
    1351:	00 00                	add    BYTE PTR [rax],al
    1353:	00 27                	add    BYTE PTR [rdi],ah
	...
    135d:	00 00                	add    BYTE PTR [rax],al
    135f:	00 f8                	add    al,bh
    1361:	0e                   	(bad)  
    1362:	01 00                	add    DWORD PTR [rax],eax
    1364:	00 00                	add    BYTE PTR [rax],al
    1366:	00 00                	add    BYTE PTR [rax],al
    1368:	07                   	(bad)  
    1369:	00 00                	add    BYTE PTR [rax],al
    136b:	00 28                	add    BYTE PTR [rax],ch
	...
    1379:	0f 01 00             	sgdt   [rax]
    137c:	00 00                	add    BYTE PTR [rax],al
    137e:	00 00                	add    BYTE PTR [rax],al
    1380:	07                   	(bad)  
    1381:	00 00                	add    BYTE PTR [rax],al
    1383:	00 29                	add    BYTE PTR [rcx],ch
	...
    138d:	00 00                	add    BYTE PTR [rax],al
    138f:	00 08                	add    BYTE PTR [rax],cl
    1391:	0f 01 00             	sgdt   [rax]
    1394:	00 00                	add    BYTE PTR [rax],al
    1396:	00 00                	add    BYTE PTR [rax],al
    1398:	07                   	(bad)  
    1399:	00 00                	add    BYTE PTR [rax],al
    139b:	00 2a                	add    BYTE PTR [rdx],ch
	...
    13a5:	00 00                	add    BYTE PTR [rax],al
    13a7:	00 10                	add    BYTE PTR [rax],dl
    13a9:	0f 01 00             	sgdt   [rax]
    13ac:	00 00                	add    BYTE PTR [rax],al
    13ae:	00 00                	add    BYTE PTR [rax],al
    13b0:	07                   	(bad)  
    13b1:	00 00                	add    BYTE PTR [rax],al
    13b3:	00 2b                	add    BYTE PTR [rbx],ch
	...
    13bd:	00 00                	add    BYTE PTR [rax],al
    13bf:	00 18                	add    BYTE PTR [rax],bl
    13c1:	0f 01 00             	sgdt   [rax]
    13c4:	00 00                	add    BYTE PTR [rax],al
    13c6:	00 00                	add    BYTE PTR [rax],al
    13c8:	07                   	(bad)  
    13c9:	00 00                	add    BYTE PTR [rax],al
    13cb:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
	...
    13d6:	00 00                	add    BYTE PTR [rax],al
    13d8:	20 0f                	and    BYTE PTR [rdi],cl
    13da:	01 00                	add    DWORD PTR [rax],eax
    13dc:	00 00                	add    BYTE PTR [rax],al
    13de:	00 00                	add    BYTE PTR [rax],al
    13e0:	07                   	(bad)  
    13e1:	00 00                	add    BYTE PTR [rax],al
    13e3:	00 2d 00 00 00 00    	add    BYTE PTR [rip+0x0],ch        # 13e9 <__abi_tag+0x1025>
    13e9:	00 00                	add    BYTE PTR [rax],al
    13eb:	00 00                	add    BYTE PTR [rax],al
    13ed:	00 00                	add    BYTE PTR [rax],al
    13ef:	00 28                	add    BYTE PTR [rax],ch
    13f1:	0f 01 00             	sgdt   [rax]
    13f4:	00 00                	add    BYTE PTR [rax],al
    13f6:	00 00                	add    BYTE PTR [rax],al
    13f8:	07                   	(bad)  
    13f9:	00 00                	add    BYTE PTR [rax],al
    13fb:	00 2e                	add    BYTE PTR [rsi],ch
	...
    1405:	00 00                	add    BYTE PTR [rax],al
    1407:	00 30                	add    BYTE PTR [rax],dh
    1409:	0f 01 00             	sgdt   [rax]
    140c:	00 00                	add    BYTE PTR [rax],al
    140e:	00 00                	add    BYTE PTR [rax],al
    1410:	07                   	(bad)  
    1411:	00 00                	add    BYTE PTR [rax],al
    1413:	00 2f                	add    BYTE PTR [rdi],ch
	...
    141d:	00 00                	add    BYTE PTR [rax],al
    141f:	00 38                	add    BYTE PTR [rax],bh
    1421:	0f 01 00             	sgdt   [rax]
    1424:	00 00                	add    BYTE PTR [rax],al
    1426:	00 00                	add    BYTE PTR [rax],al
    1428:	07                   	(bad)  
    1429:	00 00                	add    BYTE PTR [rax],al
    142b:	00 30                	add    BYTE PTR [rax],dh
	...
    1435:	00 00                	add    BYTE PTR [rax],al
    1437:	00 40 0f             	add    BYTE PTR [rax+0xf],al
    143a:	01 00                	add    DWORD PTR [rax],eax
    143c:	00 00                	add    BYTE PTR [rax],al
    143e:	00 00                	add    BYTE PTR [rax],al
    1440:	07                   	(bad)  
    1441:	00 00                	add    BYTE PTR [rax],al
    1443:	00 31                	add    BYTE PTR [rcx],dh
	...
    144d:	00 00                	add    BYTE PTR [rax],al
    144f:	00 48 0f             	add    BYTE PTR [rax+0xf],cl
    1452:	01 00                	add    DWORD PTR [rax],eax
    1454:	00 00                	add    BYTE PTR [rax],al
    1456:	00 00                	add    BYTE PTR [rax],al
    1458:	07                   	(bad)  
    1459:	00 00                	add    BYTE PTR [rax],al
    145b:	00 32                	add    BYTE PTR [rdx],dh
	...
    1465:	00 00                	add    BYTE PTR [rax],al
    1467:	00 50 0f             	add    BYTE PTR [rax+0xf],dl
    146a:	01 00                	add    DWORD PTR [rax],eax
    146c:	00 00                	add    BYTE PTR [rax],al
    146e:	00 00                	add    BYTE PTR [rax],al
    1470:	07                   	(bad)  
    1471:	00 00                	add    BYTE PTR [rax],al
    1473:	00 33                	add    BYTE PTR [rbx],dh
	...
    147d:	00 00                	add    BYTE PTR [rax],al
    147f:	00 58 0f             	add    BYTE PTR [rax+0xf],bl
    1482:	01 00                	add    DWORD PTR [rax],eax
    1484:	00 00                	add    BYTE PTR [rax],al
    1486:	00 00                	add    BYTE PTR [rax],al
    1488:	07                   	(bad)  
    1489:	00 00                	add    BYTE PTR [rax],al
    148b:	00 34 00             	add    BYTE PTR [rax+rax*1],dh
	...
    1496:	00 00                	add    BYTE PTR [rax],al
    1498:	60                   	(bad)  
    1499:	0f 01 00             	sgdt   [rax]
    149c:	00 00                	add    BYTE PTR [rax],al
    149e:	00 00                	add    BYTE PTR [rax],al
    14a0:	07                   	(bad)  
    14a1:	00 00                	add    BYTE PTR [rax],al
    14a3:	00 35 00 00 00 00    	add    BYTE PTR [rip+0x0],dh        # 14a9 <__abi_tag+0x10e5>
    14a9:	00 00                	add    BYTE PTR [rax],al
    14ab:	00 00                	add    BYTE PTR [rax],al
    14ad:	00 00                	add    BYTE PTR [rax],al
    14af:	00 68 0f             	add    BYTE PTR [rax+0xf],ch
    14b2:	01 00                	add    DWORD PTR [rax],eax
    14b4:	00 00                	add    BYTE PTR [rax],al
    14b6:	00 00                	add    BYTE PTR [rax],al
    14b8:	07                   	(bad)  
    14b9:	00 00                	add    BYTE PTR [rax],al
    14bb:	00 36                	add    BYTE PTR [rsi],dh
	...
    14c5:	00 00                	add    BYTE PTR [rax],al
    14c7:	00 70 0f             	add    BYTE PTR [rax+0xf],dh
    14ca:	01 00                	add    DWORD PTR [rax],eax
    14cc:	00 00                	add    BYTE PTR [rax],al
    14ce:	00 00                	add    BYTE PTR [rax],al
    14d0:	07                   	(bad)  
    14d1:	00 00                	add    BYTE PTR [rax],al
    14d3:	00 37                	add    BYTE PTR [rdi],dh
	...
    14dd:	00 00                	add    BYTE PTR [rax],al
    14df:	00 78 0f             	add    BYTE PTR [rax+0xf],bh
    14e2:	01 00                	add    DWORD PTR [rax],eax
    14e4:	00 00                	add    BYTE PTR [rax],al
    14e6:	00 00                	add    BYTE PTR [rax],al
    14e8:	07                   	(bad)  
    14e9:	00 00                	add    BYTE PTR [rax],al
    14eb:	00 38                	add    BYTE PTR [rax],bh
	...
    14f5:	00 00                	add    BYTE PTR [rax],al
    14f7:	00 80 0f 01 00 00    	add    BYTE PTR [rax+0x10f],al
    14fd:	00 00                	add    BYTE PTR [rax],al
    14ff:	00 07                	add    BYTE PTR [rdi],al
    1501:	00 00                	add    BYTE PTR [rax],al
    1503:	00 39                	add    BYTE PTR [rcx],bh
	...
    150d:	00 00                	add    BYTE PTR [rax],al
    150f:	00 88 0f 01 00 00    	add    BYTE PTR [rax+0x10f],cl
    1515:	00 00                	add    BYTE PTR [rax],al
    1517:	00 07                	add    BYTE PTR [rdi],al
    1519:	00 00                	add    BYTE PTR [rax],al
    151b:	00 3a                	add    BYTE PTR [rdx],bh
	...
    1525:	00 00                	add    BYTE PTR [rax],al
    1527:	00 90 0f 01 00 00    	add    BYTE PTR [rax+0x10f],dl
    152d:	00 00                	add    BYTE PTR [rax],al
    152f:	00 07                	add    BYTE PTR [rdi],al
    1531:	00 00                	add    BYTE PTR [rax],al
    1533:	00 3b                	add    BYTE PTR [rbx],bh
	...
    153d:	00 00                	add    BYTE PTR [rax],al
    153f:	00 98 0f 01 00 00    	add    BYTE PTR [rax+0x10f],bl
    1545:	00 00                	add    BYTE PTR [rax],al
    1547:	00 07                	add    BYTE PTR [rdi],al
    1549:	00 00                	add    BYTE PTR [rax],al
    154b:	00 3c 00             	add    BYTE PTR [rax+rax*1],bh
	...
    1556:	00 00                	add    BYTE PTR [rax],al
    1558:	a0 0f 01 00 00 00 00 	movabs al,ds:0x70000000000010f
    155f:	00 07 
    1561:	00 00                	add    BYTE PTR [rax],al
    1563:	00 3d 00 00 00 00    	add    BYTE PTR [rip+0x0],bh        # 1569 <__abi_tag+0x11a5>
    1569:	00 00                	add    BYTE PTR [rax],al
    156b:	00 00                	add    BYTE PTR [rax],al
    156d:	00 00                	add    BYTE PTR [rax],al
    156f:	00 a8 0f 01 00 00    	add    BYTE PTR [rax+0x10f],ch
    1575:	00 00                	add    BYTE PTR [rax],al
    1577:	00 07                	add    BYTE PTR [rdi],al
    1579:	00 00                	add    BYTE PTR [rax],al
    157b:	00 3e                	add    BYTE PTR [rsi],bh
	...
    1585:	00 00                	add    BYTE PTR [rax],al
    1587:	00 b0 0f 01 00 00    	add    BYTE PTR [rax+0x10f],dh
    158d:	00 00                	add    BYTE PTR [rax],al
    158f:	00 07                	add    BYTE PTR [rdi],al
    1591:	00 00                	add    BYTE PTR [rax],al
    1593:	00 3f                	add    BYTE PTR [rdi],bh
	...
    159d:	00 00                	add    BYTE PTR [rax],al
    159f:	00 b8 0f 01 00 00    	add    BYTE PTR [rax+0x10f],bh
    15a5:	00 00                	add    BYTE PTR [rax],al
    15a7:	00 07                	add    BYTE PTR [rdi],al
    15a9:	00 00                	add    BYTE PTR [rax],al
    15ab:	00 40 00             	add    BYTE PTR [rax+0x0],al
	...
    15b6:	00 00                	add    BYTE PTR [rax],al
    15b8:	c0 0f 01             	ror    BYTE PTR [rdi],0x1
    15bb:	00 00                	add    BYTE PTR [rax],al
    15bd:	00 00                	add    BYTE PTR [rax],al
    15bf:	00 07                	add    BYTE PTR [rdi],al
    15c1:	00 00                	add    BYTE PTR [rax],al
    15c3:	00 42 00             	add    BYTE PTR [rdx+0x0],al
	...
    15ce:	00 00                	add    BYTE PTR [rax],al
    15d0:	c8 0f 01 00          	enter  0x10f,0x0
    15d4:	00 00                	add    BYTE PTR [rax],al
    15d6:	00 00                	add    BYTE PTR [rax],al
    15d8:	07                   	(bad)  
    15d9:	00 00                	add    BYTE PTR [rax],al
    15db:	00 43 00             	add    BYTE PTR [rbx+0x0],al
	...
    15e6:	00 00                	add    BYTE PTR [rax],al
    15e8:	d0 0f                	ror    BYTE PTR [rdi],1
    15ea:	01 00                	add    DWORD PTR [rax],eax
    15ec:	00 00                	add    BYTE PTR [rax],al
    15ee:	00 00                	add    BYTE PTR [rax],al
    15f0:	07                   	(bad)  
    15f1:	00 00                	add    BYTE PTR [rax],al
    15f3:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
	...

Disassembly of section .init:

0000000000002000 <_init>:
    2000:	f3 0f 1e fa          	endbr64 
    2004:	48 83 ec 08          	sub    rsp,0x8
    2008:	48 8b 05 c9 ef 00 00 	mov    rax,QWORD PTR [rip+0xefc9]        # 10fd8 <__gmon_start__>
    200f:	48 85 c0             	test   rax,rax
    2012:	74 02                	je     2016 <_init+0x16>
    2014:	ff d0                	call   rax
    2016:	48 83 c4 08          	add    rsp,0x8
    201a:	c3                   	ret    

Disassembly of section .plt:

0000000000002020 <.plt>:
    2020:	ff 35 a2 ed 00 00    	push   QWORD PTR [rip+0xeda2]        # 10dc8 <_GLOBAL_OFFSET_TABLE_+0x8>
    2026:	f2 ff 25 a3 ed 00 00 	bnd jmp QWORD PTR [rip+0xeda3]        # 10dd0 <_GLOBAL_OFFSET_TABLE_+0x10>
    202d:	0f 1f 00             	nop    DWORD PTR [rax]
    2030:	f3 0f 1e fa          	endbr64 
    2034:	68 00 00 00 00       	push   0x0
    2039:	f2 e9 e1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    203f:	90                   	nop
    2040:	f3 0f 1e fa          	endbr64 
    2044:	68 01 00 00 00       	push   0x1
    2049:	f2 e9 d1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    204f:	90                   	nop
    2050:	f3 0f 1e fa          	endbr64 
    2054:	68 02 00 00 00       	push   0x2
    2059:	f2 e9 c1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    205f:	90                   	nop
    2060:	f3 0f 1e fa          	endbr64 
    2064:	68 03 00 00 00       	push   0x3
    2069:	f2 e9 b1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    206f:	90                   	nop
    2070:	f3 0f 1e fa          	endbr64 
    2074:	68 04 00 00 00       	push   0x4
    2079:	f2 e9 a1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    207f:	90                   	nop
    2080:	f3 0f 1e fa          	endbr64 
    2084:	68 05 00 00 00       	push   0x5
    2089:	f2 e9 91 ff ff ff    	bnd jmp 2020 <_init+0x20>
    208f:	90                   	nop
    2090:	f3 0f 1e fa          	endbr64 
    2094:	68 06 00 00 00       	push   0x6
    2099:	f2 e9 81 ff ff ff    	bnd jmp 2020 <_init+0x20>
    209f:	90                   	nop
    20a0:	f3 0f 1e fa          	endbr64 
    20a4:	68 07 00 00 00       	push   0x7
    20a9:	f2 e9 71 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20af:	90                   	nop
    20b0:	f3 0f 1e fa          	endbr64 
    20b4:	68 08 00 00 00       	push   0x8
    20b9:	f2 e9 61 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20bf:	90                   	nop
    20c0:	f3 0f 1e fa          	endbr64 
    20c4:	68 09 00 00 00       	push   0x9
    20c9:	f2 e9 51 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20cf:	90                   	nop
    20d0:	f3 0f 1e fa          	endbr64 
    20d4:	68 0a 00 00 00       	push   0xa
    20d9:	f2 e9 41 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20df:	90                   	nop
    20e0:	f3 0f 1e fa          	endbr64 
    20e4:	68 0b 00 00 00       	push   0xb
    20e9:	f2 e9 31 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20ef:	90                   	nop
    20f0:	f3 0f 1e fa          	endbr64 
    20f4:	68 0c 00 00 00       	push   0xc
    20f9:	f2 e9 21 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20ff:	90                   	nop
    2100:	f3 0f 1e fa          	endbr64 
    2104:	68 0d 00 00 00       	push   0xd
    2109:	f2 e9 11 ff ff ff    	bnd jmp 2020 <_init+0x20>
    210f:	90                   	nop
    2110:	f3 0f 1e fa          	endbr64 
    2114:	68 0e 00 00 00       	push   0xe
    2119:	f2 e9 01 ff ff ff    	bnd jmp 2020 <_init+0x20>
    211f:	90                   	nop
    2120:	f3 0f 1e fa          	endbr64 
    2124:	68 0f 00 00 00       	push   0xf
    2129:	f2 e9 f1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    212f:	90                   	nop
    2130:	f3 0f 1e fa          	endbr64 
    2134:	68 10 00 00 00       	push   0x10
    2139:	f2 e9 e1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    213f:	90                   	nop
    2140:	f3 0f 1e fa          	endbr64 
    2144:	68 11 00 00 00       	push   0x11
    2149:	f2 e9 d1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    214f:	90                   	nop
    2150:	f3 0f 1e fa          	endbr64 
    2154:	68 12 00 00 00       	push   0x12
    2159:	f2 e9 c1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    215f:	90                   	nop
    2160:	f3 0f 1e fa          	endbr64 
    2164:	68 13 00 00 00       	push   0x13
    2169:	f2 e9 b1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    216f:	90                   	nop
    2170:	f3 0f 1e fa          	endbr64 
    2174:	68 14 00 00 00       	push   0x14
    2179:	f2 e9 a1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    217f:	90                   	nop
    2180:	f3 0f 1e fa          	endbr64 
    2184:	68 15 00 00 00       	push   0x15
    2189:	f2 e9 91 fe ff ff    	bnd jmp 2020 <_init+0x20>
    218f:	90                   	nop
    2190:	f3 0f 1e fa          	endbr64 
    2194:	68 16 00 00 00       	push   0x16
    2199:	f2 e9 81 fe ff ff    	bnd jmp 2020 <_init+0x20>
    219f:	90                   	nop
    21a0:	f3 0f 1e fa          	endbr64 
    21a4:	68 17 00 00 00       	push   0x17
    21a9:	f2 e9 71 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21af:	90                   	nop
    21b0:	f3 0f 1e fa          	endbr64 
    21b4:	68 18 00 00 00       	push   0x18
    21b9:	f2 e9 61 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21bf:	90                   	nop
    21c0:	f3 0f 1e fa          	endbr64 
    21c4:	68 19 00 00 00       	push   0x19
    21c9:	f2 e9 51 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21cf:	90                   	nop
    21d0:	f3 0f 1e fa          	endbr64 
    21d4:	68 1a 00 00 00       	push   0x1a
    21d9:	f2 e9 41 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21df:	90                   	nop
    21e0:	f3 0f 1e fa          	endbr64 
    21e4:	68 1b 00 00 00       	push   0x1b
    21e9:	f2 e9 31 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21ef:	90                   	nop
    21f0:	f3 0f 1e fa          	endbr64 
    21f4:	68 1c 00 00 00       	push   0x1c
    21f9:	f2 e9 21 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21ff:	90                   	nop
    2200:	f3 0f 1e fa          	endbr64 
    2204:	68 1d 00 00 00       	push   0x1d
    2209:	f2 e9 11 fe ff ff    	bnd jmp 2020 <_init+0x20>
    220f:	90                   	nop
    2210:	f3 0f 1e fa          	endbr64 
    2214:	68 1e 00 00 00       	push   0x1e
    2219:	f2 e9 01 fe ff ff    	bnd jmp 2020 <_init+0x20>
    221f:	90                   	nop
    2220:	f3 0f 1e fa          	endbr64 
    2224:	68 1f 00 00 00       	push   0x1f
    2229:	f2 e9 f1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    222f:	90                   	nop
    2230:	f3 0f 1e fa          	endbr64 
    2234:	68 20 00 00 00       	push   0x20
    2239:	f2 e9 e1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    223f:	90                   	nop
    2240:	f3 0f 1e fa          	endbr64 
    2244:	68 21 00 00 00       	push   0x21
    2249:	f2 e9 d1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    224f:	90                   	nop
    2250:	f3 0f 1e fa          	endbr64 
    2254:	68 22 00 00 00       	push   0x22
    2259:	f2 e9 c1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    225f:	90                   	nop
    2260:	f3 0f 1e fa          	endbr64 
    2264:	68 23 00 00 00       	push   0x23
    2269:	f2 e9 b1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    226f:	90                   	nop
    2270:	f3 0f 1e fa          	endbr64 
    2274:	68 24 00 00 00       	push   0x24
    2279:	f2 e9 a1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    227f:	90                   	nop
    2280:	f3 0f 1e fa          	endbr64 
    2284:	68 25 00 00 00       	push   0x25
    2289:	f2 e9 91 fd ff ff    	bnd jmp 2020 <_init+0x20>
    228f:	90                   	nop
    2290:	f3 0f 1e fa          	endbr64 
    2294:	68 26 00 00 00       	push   0x26
    2299:	f2 e9 81 fd ff ff    	bnd jmp 2020 <_init+0x20>
    229f:	90                   	nop
    22a0:	f3 0f 1e fa          	endbr64 
    22a4:	68 27 00 00 00       	push   0x27
    22a9:	f2 e9 71 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22af:	90                   	nop
    22b0:	f3 0f 1e fa          	endbr64 
    22b4:	68 28 00 00 00       	push   0x28
    22b9:	f2 e9 61 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22bf:	90                   	nop
    22c0:	f3 0f 1e fa          	endbr64 
    22c4:	68 29 00 00 00       	push   0x29
    22c9:	f2 e9 51 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22cf:	90                   	nop
    22d0:	f3 0f 1e fa          	endbr64 
    22d4:	68 2a 00 00 00       	push   0x2a
    22d9:	f2 e9 41 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22df:	90                   	nop
    22e0:	f3 0f 1e fa          	endbr64 
    22e4:	68 2b 00 00 00       	push   0x2b
    22e9:	f2 e9 31 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22ef:	90                   	nop
    22f0:	f3 0f 1e fa          	endbr64 
    22f4:	68 2c 00 00 00       	push   0x2c
    22f9:	f2 e9 21 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22ff:	90                   	nop
    2300:	f3 0f 1e fa          	endbr64 
    2304:	68 2d 00 00 00       	push   0x2d
    2309:	f2 e9 11 fd ff ff    	bnd jmp 2020 <_init+0x20>
    230f:	90                   	nop
    2310:	f3 0f 1e fa          	endbr64 
    2314:	68 2e 00 00 00       	push   0x2e
    2319:	f2 e9 01 fd ff ff    	bnd jmp 2020 <_init+0x20>
    231f:	90                   	nop
    2320:	f3 0f 1e fa          	endbr64 
    2324:	68 2f 00 00 00       	push   0x2f
    2329:	f2 e9 f1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    232f:	90                   	nop
    2330:	f3 0f 1e fa          	endbr64 
    2334:	68 30 00 00 00       	push   0x30
    2339:	f2 e9 e1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    233f:	90                   	nop
    2340:	f3 0f 1e fa          	endbr64 
    2344:	68 31 00 00 00       	push   0x31
    2349:	f2 e9 d1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    234f:	90                   	nop
    2350:	f3 0f 1e fa          	endbr64 
    2354:	68 32 00 00 00       	push   0x32
    2359:	f2 e9 c1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    235f:	90                   	nop
    2360:	f3 0f 1e fa          	endbr64 
    2364:	68 33 00 00 00       	push   0x33
    2369:	f2 e9 b1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    236f:	90                   	nop
    2370:	f3 0f 1e fa          	endbr64 
    2374:	68 34 00 00 00       	push   0x34
    2379:	f2 e9 a1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    237f:	90                   	nop
    2380:	f3 0f 1e fa          	endbr64 
    2384:	68 35 00 00 00       	push   0x35
    2389:	f2 e9 91 fc ff ff    	bnd jmp 2020 <_init+0x20>
    238f:	90                   	nop
    2390:	f3 0f 1e fa          	endbr64 
    2394:	68 36 00 00 00       	push   0x36
    2399:	f2 e9 81 fc ff ff    	bnd jmp 2020 <_init+0x20>
    239f:	90                   	nop
    23a0:	f3 0f 1e fa          	endbr64 
    23a4:	68 37 00 00 00       	push   0x37
    23a9:	f2 e9 71 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23af:	90                   	nop
    23b0:	f3 0f 1e fa          	endbr64 
    23b4:	68 38 00 00 00       	push   0x38
    23b9:	f2 e9 61 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23bf:	90                   	nop
    23c0:	f3 0f 1e fa          	endbr64 
    23c4:	68 39 00 00 00       	push   0x39
    23c9:	f2 e9 51 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23cf:	90                   	nop
    23d0:	f3 0f 1e fa          	endbr64 
    23d4:	68 3a 00 00 00       	push   0x3a
    23d9:	f2 e9 41 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23df:	90                   	nop
    23e0:	f3 0f 1e fa          	endbr64 
    23e4:	68 3b 00 00 00       	push   0x3b
    23e9:	f2 e9 31 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23ef:	90                   	nop
    23f0:	f3 0f 1e fa          	endbr64 
    23f4:	68 3c 00 00 00       	push   0x3c
    23f9:	f2 e9 21 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23ff:	90                   	nop
    2400:	f3 0f 1e fa          	endbr64 
    2404:	68 3d 00 00 00       	push   0x3d
    2409:	f2 e9 11 fc ff ff    	bnd jmp 2020 <_init+0x20>
    240f:	90                   	nop
    2410:	f3 0f 1e fa          	endbr64 
    2414:	68 3e 00 00 00       	push   0x3e
    2419:	f2 e9 01 fc ff ff    	bnd jmp 2020 <_init+0x20>
    241f:	90                   	nop
    2420:	f3 0f 1e fa          	endbr64 
    2424:	68 3f 00 00 00       	push   0x3f
    2429:	f2 e9 f1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    242f:	90                   	nop

Disassembly of section .plt.got:

0000000000002430 <__cxa_finalize@plt>:
    2430:	f3 0f 1e fa          	endbr64 
    2434:	f2 ff 25 b5 eb 00 00 	bnd jmp QWORD PTR [rip+0xebb5]        # 10ff0 <__cxa_finalize@GLIBC_2.2.5>
    243b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

0000000000002440 <sqlite3_close@plt>:
    2440:	f3 0f 1e fa          	endbr64 
    2444:	f2 ff 25 8d e9 00 00 	bnd jmp QWORD PTR [rip+0xe98d]        # 10dd8 <sqlite3_close>
    244b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002450 <pthread_join@plt>:
    2450:	f3 0f 1e fa          	endbr64 
    2454:	f2 ff 25 85 e9 00 00 	bnd jmp QWORD PTR [rip+0xe985]        # 10de0 <pthread_join@GLIBC_2.34>
    245b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002460 <printf@plt>:
    2460:	f3 0f 1e fa          	endbr64 
    2464:	f2 ff 25 7d e9 00 00 	bnd jmp QWORD PTR [rip+0xe97d]        # 10de8 <printf@GLIBC_2.2.5>
    246b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002470 <memset@plt>:
    2470:	f3 0f 1e fa          	endbr64 
    2474:	f2 ff 25 75 e9 00 00 	bnd jmp QWORD PTR [rip+0xe975]        # 10df0 <memset@GLIBC_2.2.5>
    247b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002480 <snprintf@plt>:
    2480:	f3 0f 1e fa          	endbr64 
    2484:	f2 ff 25 6d e9 00 00 	bnd jmp QWORD PTR [rip+0xe96d]        # 10df8 <snprintf@GLIBC_2.2.5>
    248b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002490 <backtrace@plt>:
    2490:	f3 0f 1e fa          	endbr64 
    2494:	f2 ff 25 65 e9 00 00 	bnd jmp QWORD PTR [rip+0xe965]        # 10e00 <backtrace@GLIBC_2.2.5>
    249b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024a0 <strncat@plt>:
    24a0:	f3 0f 1e fa          	endbr64 
    24a4:	f2 ff 25 5d e9 00 00 	bnd jmp QWORD PTR [rip+0xe95d]        # 10e08 <strncat@GLIBC_2.2.5>
    24ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024b0 <puts@plt>:
    24b0:	f3 0f 1e fa          	endbr64 
    24b4:	f2 ff 25 55 e9 00 00 	bnd jmp QWORD PTR [rip+0xe955]        # 10e10 <puts@GLIBC_2.2.5>
    24bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024c0 <htons@plt>:
    24c0:	f3 0f 1e fa          	endbr64 
    24c4:	f2 ff 25 4d e9 00 00 	bnd jmp QWORD PTR [rip+0xe94d]        # 10e18 <htons@GLIBC_2.2.5>
    24cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024d0 <exit@plt>:
    24d0:	f3 0f 1e fa          	endbr64 
    24d4:	f2 ff 25 45 e9 00 00 	bnd jmp QWORD PTR [rip+0xe945]        # 10e20 <exit@GLIBC_2.2.5>
    24db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024e0 <putchar@plt>:
    24e0:	f3 0f 1e fa          	endbr64 
    24e4:	f2 ff 25 3d e9 00 00 	bnd jmp QWORD PTR [rip+0xe93d]        # 10e28 <putchar@GLIBC_2.2.5>
    24eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024f0 <sqlite3_exec@plt>:
    24f0:	f3 0f 1e fa          	endbr64 
    24f4:	f2 ff 25 35 e9 00 00 	bnd jmp QWORD PTR [rip+0xe935]        # 10e30 <sqlite3_exec>
    24fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002500 <getopt@plt>:
    2500:	f3 0f 1e fa          	endbr64 
    2504:	f2 ff 25 2d e9 00 00 	bnd jmp QWORD PTR [rip+0xe92d]        # 10e38 <getopt@GLIBC_2.2.5>
    250b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002510 <strncmp@plt>:
    2510:	f3 0f 1e fa          	endbr64 
    2514:	f2 ff 25 25 e9 00 00 	bnd jmp QWORD PTR [rip+0xe925]        # 10e40 <strncmp@GLIBC_2.2.5>
    251b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002520 <malloc@plt>:
    2520:	f3 0f 1e fa          	endbr64 
    2524:	f2 ff 25 1d e9 00 00 	bnd jmp QWORD PTR [rip+0xe91d]        # 10e48 <malloc@GLIBC_2.2.5>
    252b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002530 <fopen@plt>:
    2530:	f3 0f 1e fa          	endbr64 
    2534:	f2 ff 25 15 e9 00 00 	bnd jmp QWORD PTR [rip+0xe915]        # 10e50 <fopen@GLIBC_2.2.5>
    253b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002540 <regexec@plt>:
    2540:	f3 0f 1e fa          	endbr64 
    2544:	f2 ff 25 0d e9 00 00 	bnd jmp QWORD PTR [rip+0xe90d]        # 10e58 <regexec@GLIBC_2.3.4>
    254b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002550 <pcap_open_live@plt>:
    2550:	f3 0f 1e fa          	endbr64 
    2554:	f2 ff 25 05 e9 00 00 	bnd jmp QWORD PTR [rip+0xe905]        # 10e60 <pcap_open_live>
    255b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002560 <setsockopt@plt>:
    2560:	f3 0f 1e fa          	endbr64 
    2564:	f2 ff 25 fd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8fd]        # 10e68 <setsockopt@GLIBC_2.2.5>
    256b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002570 <sqlite3_free@plt>:
    2570:	f3 0f 1e fa          	endbr64 
    2574:	f2 ff 25 f5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8f5]        # 10e70 <sqlite3_free>
    257b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002580 <lua_settop@plt>:
    2580:	f3 0f 1e fa          	endbr64 
    2584:	f2 ff 25 ed e8 00 00 	bnd jmp QWORD PTR [rip+0xe8ed]        # 10e78 <lua_settop@LUA_5.3>
    258b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002590 <pthread_create@plt>:
    2590:	f3 0f 1e fa          	endbr64 
    2594:	f2 ff 25 e5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8e5]        # 10e80 <pthread_create@GLIBC_2.34>
    259b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025a0 <backtrace_symbols@plt>:
    25a0:	f3 0f 1e fa          	endbr64 
    25a4:	f2 ff 25 dd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8dd]        # 10e88 <backtrace_symbols@GLIBC_2.2.5>
    25ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025b0 <free@plt>:
    25b0:	f3 0f 1e fa          	endbr64 
    25b4:	f2 ff 25 d5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8d5]        # 10e90 <free@GLIBC_2.2.5>
    25bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025c0 <strlen@plt>:
    25c0:	f3 0f 1e fa          	endbr64 
    25c4:	f2 ff 25 cd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8cd]        # 10e98 <strlen@GLIBC_2.2.5>
    25cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025d0 <listen@plt>:
    25d0:	f3 0f 1e fa          	endbr64 
    25d4:	f2 ff 25 c5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8c5]        # 10ea0 <listen@GLIBC_2.2.5>
    25db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025e0 <sprintf@plt>:
    25e0:	f3 0f 1e fa          	endbr64 
    25e4:	f2 ff 25 bd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8bd]        # 10ea8 <sprintf@GLIBC_2.2.5>
    25eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025f0 <ntohs@plt>:
    25f0:	f3 0f 1e fa          	endbr64 
    25f4:	f2 ff 25 b5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8b5]        # 10eb0 <ntohs@GLIBC_2.2.5>
    25fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002600 <ntohl@plt>:
    2600:	f3 0f 1e fa          	endbr64 
    2604:	f2 ff 25 ad e8 00 00 	bnd jmp QWORD PTR [rip+0xe8ad]        # 10eb8 <ntohl@GLIBC_2.2.5>
    260b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002610 <sleep@plt>:
    2610:	f3 0f 1e fa          	endbr64 
    2614:	f2 ff 25 a5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8a5]        # 10ec0 <sleep@GLIBC_2.2.5>
    261b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002620 <lua_pcallk@plt>:
    2620:	f3 0f 1e fa          	endbr64 
    2624:	f2 ff 25 9d e8 00 00 	bnd jmp QWORD PTR [rip+0xe89d]        # 10ec8 <lua_pcallk@LUA_5.3>
    262b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002630 <strstr@plt>:
    2630:	f3 0f 1e fa          	endbr64 
    2634:	f2 ff 25 95 e8 00 00 	bnd jmp QWORD PTR [rip+0xe895]        # 10ed0 <strstr@GLIBC_2.2.5>
    263b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002640 <strcat@plt>:
    2640:	f3 0f 1e fa          	endbr64 
    2644:	f2 ff 25 8d e8 00 00 	bnd jmp QWORD PTR [rip+0xe88d]        # 10ed8 <strcat@GLIBC_2.2.5>
    264b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002650 <fputs@plt>:
    2650:	f3 0f 1e fa          	endbr64 
    2654:	f2 ff 25 85 e8 00 00 	bnd jmp QWORD PTR [rip+0xe885]        # 10ee0 <fputs@GLIBC_2.2.5>
    265b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002660 <strtol@plt>:
    2660:	f3 0f 1e fa          	endbr64 
    2664:	f2 ff 25 7d e8 00 00 	bnd jmp QWORD PTR [rip+0xe87d]        # 10ee8 <strtol@GLIBC_2.2.5>
    266b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002670 <luaL_loadfilex@plt>:
    2670:	f3 0f 1e fa          	endbr64 
    2674:	f2 ff 25 75 e8 00 00 	bnd jmp QWORD PTR [rip+0xe875]        # 10ef0 <luaL_loadfilex@LUA_5.3>
    267b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002680 <atoi@plt>:
    2680:	f3 0f 1e fa          	endbr64 
    2684:	f2 ff 25 6d e8 00 00 	bnd jmp QWORD PTR [rip+0xe86d]        # 10ef8 <atoi@GLIBC_2.2.5>
    268b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002690 <regcomp@plt>:
    2690:	f3 0f 1e fa          	endbr64 
    2694:	f2 ff 25 65 e8 00 00 	bnd jmp QWORD PTR [rip+0xe865]        # 10f00 <regcomp@GLIBC_2.2.5>
    269b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026a0 <signal@plt>:
    26a0:	f3 0f 1e fa          	endbr64 
    26a4:	f2 ff 25 5d e8 00 00 	bnd jmp QWORD PTR [rip+0xe85d]        # 10f08 <signal@GLIBC_2.2.5>
    26ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026b0 <strchr@plt>:
    26b0:	f3 0f 1e fa          	endbr64 
    26b4:	f2 ff 25 55 e8 00 00 	bnd jmp QWORD PTR [rip+0xe855]        # 10f10 <strchr@GLIBC_2.2.5>
    26bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026c0 <lua_gettop@plt>:
    26c0:	f3 0f 1e fa          	endbr64 
    26c4:	f2 ff 25 4d e8 00 00 	bnd jmp QWORD PTR [rip+0xe84d]        # 10f18 <lua_gettop@LUA_5.3>
    26cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026d0 <luaL_newstate@plt>:
    26d0:	f3 0f 1e fa          	endbr64 
    26d4:	f2 ff 25 45 e8 00 00 	bnd jmp QWORD PTR [rip+0xe845]        # 10f20 <luaL_newstate@LUA_5.3>
    26db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026e0 <socket@plt>:
    26e0:	f3 0f 1e fa          	endbr64 
    26e4:	f2 ff 25 3d e8 00 00 	bnd jmp QWORD PTR [rip+0xe83d]        # 10f28 <socket@GLIBC_2.2.5>
    26eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026f0 <luaL_openlibs@plt>:
    26f0:	f3 0f 1e fa          	endbr64 
    26f4:	f2 ff 25 35 e8 00 00 	bnd jmp QWORD PTR [rip+0xe835]        # 10f30 <luaL_openlibs@LUA_5.3>
    26fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002700 <__stack_chk_fail@plt>:
    2700:	f3 0f 1e fa          	endbr64 
    2704:	f2 ff 25 2d e8 00 00 	bnd jmp QWORD PTR [rip+0xe82d]        # 10f38 <__stack_chk_fail@GLIBC_2.4>
    270b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002710 <strcmp@plt>:
    2710:	f3 0f 1e fa          	endbr64 
    2714:	f2 ff 25 25 e8 00 00 	bnd jmp QWORD PTR [rip+0xe825]        # 10f40 <strcmp@GLIBC_2.2.5>
    271b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002720 <getline@plt>:
    2720:	f3 0f 1e fa          	endbr64 
    2724:	f2 ff 25 1d e8 00 00 	bnd jmp QWORD PTR [rip+0xe81d]        # 10f48 <getline@GLIBC_2.2.5>
    272b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002730 <strcpy@plt>:
    2730:	f3 0f 1e fa          	endbr64 
    2734:	f2 ff 25 15 e8 00 00 	bnd jmp QWORD PTR [rip+0xe815]        # 10f50 <strcpy@GLIBC_2.2.5>
    273b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002740 <strtok@plt>:
    2740:	f3 0f 1e fa          	endbr64 
    2744:	f2 ff 25 0d e8 00 00 	bnd jmp QWORD PTR [rip+0xe80d]        # 10f58 <strtok@GLIBC_2.2.5>
    274b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002750 <lua_close@plt>:
    2750:	f3 0f 1e fa          	endbr64 
    2754:	f2 ff 25 05 e8 00 00 	bnd jmp QWORD PTR [rip+0xe805]        # 10f60 <lua_close@LUA_5.3>
    275b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002760 <sqlite3_errmsg@plt>:
    2760:	f3 0f 1e fa          	endbr64 
    2764:	f2 ff 25 fd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7fd]        # 10f68 <sqlite3_errmsg>
    276b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002770 <fclose@plt>:
    2770:	f3 0f 1e fa          	endbr64 
    2774:	f2 ff 25 f5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7f5]        # 10f70 <fclose@GLIBC_2.2.5>
    277b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002780 <strncpy@plt>:
    2780:	f3 0f 1e fa          	endbr64 
    2784:	f2 ff 25 ed e7 00 00 	bnd jmp QWORD PTR [rip+0xe7ed]        # 10f78 <strncpy@GLIBC_2.2.5>
    278b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002790 <strcspn@plt>:
    2790:	f3 0f 1e fa          	endbr64 
    2794:	f2 ff 25 e5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7e5]        # 10f80 <strcspn@GLIBC_2.2.5>
    279b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027a0 <bind@plt>:
    27a0:	f3 0f 1e fa          	endbr64 
    27a4:	f2 ff 25 dd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7dd]        # 10f88 <bind@GLIBC_2.2.5>
    27ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027b0 <pcap_loop@plt>:
    27b0:	f3 0f 1e fa          	endbr64 
    27b4:	f2 ff 25 d5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7d5]        # 10f90 <pcap_loop>
    27bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027c0 <htonl@plt>:
    27c0:	f3 0f 1e fa          	endbr64 
    27c4:	f2 ff 25 cd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7cd]        # 10f98 <htonl@GLIBC_2.2.5>
    27cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027d0 <perror@plt>:
    27d0:	f3 0f 1e fa          	endbr64 
    27d4:	f2 ff 25 c5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7c5]        # 10fa0 <perror@GLIBC_2.2.5>
    27db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027e0 <fprintf@plt>:
    27e0:	f3 0f 1e fa          	endbr64 
    27e4:	f2 ff 25 bd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7bd]        # 10fa8 <fprintf@GLIBC_2.2.5>
    27eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027f0 <localtime@plt>:
    27f0:	f3 0f 1e fa          	endbr64 
    27f4:	f2 ff 25 b5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7b5]        # 10fb0 <localtime@GLIBC_2.2.5>
    27fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002800 <getdelim@plt>:
    2800:	f3 0f 1e fa          	endbr64 
    2804:	f2 ff 25 ad e7 00 00 	bnd jmp QWORD PTR [rip+0xe7ad]        # 10fb8 <getdelim@GLIBC_2.2.5>
    280b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002810 <accept@plt>:
    2810:	f3 0f 1e fa          	endbr64 
    2814:	f2 ff 25 a5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7a5]        # 10fc0 <accept@GLIBC_2.2.5>
    281b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002820 <sqlite3_open@plt>:
    2820:	f3 0f 1e fa          	endbr64 
    2824:	f2 ff 25 9d e7 00 00 	bnd jmp QWORD PTR [rip+0xe79d]        # 10fc8 <sqlite3_open>
    282b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002830 <time@plt>:
    2830:	f3 0f 1e fa          	endbr64 
    2834:	f2 ff 25 95 e7 00 00 	bnd jmp QWORD PTR [rip+0xe795]        # 10fd0 <time@GLIBC_2.2.5>
    283b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000002840 <_start>:
    2840:	f3 0f 1e fa          	endbr64 
    2844:	31 ed                	xor    ebp,ebp
    2846:	49 89 d1             	mov    r9,rdx
    2849:	5e                   	pop    rsi
    284a:	48 89 e2             	mov    rdx,rsp
    284d:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    2851:	50                   	push   rax
    2852:	54                   	push   rsp
    2853:	45 31 c0             	xor    r8d,r8d
    2856:	31 c9                	xor    ecx,ecx
    2858:	48 8d 3d 8a 3f 00 00 	lea    rdi,[rip+0x3f8a]        # 67e9 <main>
    285f:	ff 15 93 e7 00 00    	call   QWORD PTR [rip+0xe793]        # 10ff8 <__libc_start_main@GLIBC_2.34>
    2865:	f4                   	hlt    
    2866:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    286d:	00 00 00 

0000000000002870 <deregister_tm_clones>:
    2870:	48 8d 3d d1 e7 00 00 	lea    rdi,[rip+0xe7d1]        # 11048 <__TMC_END__>
    2877:	48 8d 05 ca e7 00 00 	lea    rax,[rip+0xe7ca]        # 11048 <__TMC_END__>
    287e:	48 39 f8             	cmp    rax,rdi
    2881:	74 15                	je     2898 <deregister_tm_clones+0x28>
    2883:	48 8b 05 56 e7 00 00 	mov    rax,QWORD PTR [rip+0xe756]        # 10fe0 <_ITM_deregisterTMCloneTable>
    288a:	48 85 c0             	test   rax,rax
    288d:	74 09                	je     2898 <deregister_tm_clones+0x28>
    288f:	ff e0                	jmp    rax
    2891:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    2898:	c3                   	ret    
    2899:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000028a0 <register_tm_clones>:
    28a0:	48 8d 3d a1 e7 00 00 	lea    rdi,[rip+0xe7a1]        # 11048 <__TMC_END__>
    28a7:	48 8d 35 9a e7 00 00 	lea    rsi,[rip+0xe79a]        # 11048 <__TMC_END__>
    28ae:	48 29 fe             	sub    rsi,rdi
    28b1:	48 89 f0             	mov    rax,rsi
    28b4:	48 c1 ee 3f          	shr    rsi,0x3f
    28b8:	48 c1 f8 03          	sar    rax,0x3
    28bc:	48 01 c6             	add    rsi,rax
    28bf:	48 d1 fe             	sar    rsi,1
    28c2:	74 14                	je     28d8 <register_tm_clones+0x38>
    28c4:	48 8b 05 1d e7 00 00 	mov    rax,QWORD PTR [rip+0xe71d]        # 10fe8 <_ITM_registerTMCloneTable>
    28cb:	48 85 c0             	test   rax,rax
    28ce:	74 08                	je     28d8 <register_tm_clones+0x38>
    28d0:	ff e0                	jmp    rax
    28d2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    28d8:	c3                   	ret    
    28d9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000028e0 <__do_global_dtors_aux>:
    28e0:	f3 0f 1e fa          	endbr64 
    28e4:	80 3d 7d e7 00 00 00 	cmp    BYTE PTR [rip+0xe77d],0x0        # 11068 <completed.0>
    28eb:	75 2b                	jne    2918 <__do_global_dtors_aux+0x38>
    28ed:	55                   	push   rbp
    28ee:	48 83 3d fa e6 00 00 	cmp    QWORD PTR [rip+0xe6fa],0x0        # 10ff0 <__cxa_finalize@GLIBC_2.2.5>
    28f5:	00 
    28f6:	48 89 e5             	mov    rbp,rsp
    28f9:	74 0c                	je     2907 <__do_global_dtors_aux+0x27>
    28fb:	48 8b 3d 06 e7 00 00 	mov    rdi,QWORD PTR [rip+0xe706]        # 11008 <__dso_handle>
    2902:	e8 29 fb ff ff       	call   2430 <__cxa_finalize@plt>
    2907:	e8 64 ff ff ff       	call   2870 <deregister_tm_clones>
    290c:	c6 05 55 e7 00 00 01 	mov    BYTE PTR [rip+0xe755],0x1        # 11068 <completed.0>
    2913:	5d                   	pop    rbp
    2914:	c3                   	ret    
    2915:	0f 1f 00             	nop    DWORD PTR [rax]
    2918:	c3                   	ret    
    2919:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002920 <frame_dummy>:
    2920:	f3 0f 1e fa          	endbr64 
    2924:	e9 77 ff ff ff       	jmp    28a0 <register_tm_clones>

0000000000002929 <add_thread>:
    2929:	f3 0f 1e fa          	endbr64 
    292d:	55                   	push   rbp
    292e:	48 89 e5             	mov    rbp,rsp
    2931:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    2935:	8b 05 65 e9 00 00    	mov    eax,DWORD PTR [rip+0xe965]        # 112a0 <thread_count>
    293b:	8d 50 01             	lea    edx,[rax+0x1]
    293e:	89 15 5c e9 00 00    	mov    DWORD PTR [rip+0xe95c],edx        # 112a0 <thread_count>
    2944:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    2948:	48 8b 12             	mov    rdx,QWORD PTR [rdx]
    294b:	48 98                	cdqe   
    294d:	48 8d 0c c5 00 00 00 	lea    rcx,[rax*8+0x0]
    2954:	00 
    2955:	48 8d 05 44 e7 00 00 	lea    rax,[rip+0xe744]        # 110a0 <threads>
    295c:	48 89 14 01          	mov    QWORD PTR [rcx+rax*1],rdx
    2960:	90                   	nop
    2961:	5d                   	pop    rbp
    2962:	c3                   	ret    

0000000000002963 <pktmgr>:
    2963:	f3 0f 1e fa          	endbr64 
    2967:	55                   	push   rbp
    2968:	48 89 e5             	mov    rbp,rsp
    296b:	53                   	push   rbx
    296c:	48 83 ec 38          	sub    rsp,0x38
    2970:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    2974:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    2978:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    297c:	0f b6 05 e1 75 10 00 	movzx  eax,BYTE PTR [rip+0x1075e1]        # 109f64 <packet_print>
    2983:	84 c0                	test   al,al
    2985:	74 0c                	je     2993 <pktmgr+0x30>
    2987:	48 8d 3d c2 96 00 00 	lea    rdi,[rip+0x96c2]        # c050 <_IO_stdin_used+0x50>
    298e:	e8 1d fb ff ff       	call   24b0 <puts@plt>
    2993:	8b 05 0b e9 00 00    	mov    eax,DWORD PTR [rip+0xe90b]        # 112a4 <total_pkt_captured>
    2999:	83 c0 01             	add    eax,0x1
    299c:	89 05 02 e9 00 00    	mov    DWORD PTR [rip+0xe902],eax        # 112a4 <total_pkt_captured>
    29a2:	8b 05 18 e9 00 00    	mov    eax,DWORD PTR [rip+0xe918]        # 112c0 <pkt_counter>
    29a8:	83 c0 01             	add    eax,0x1
    29ab:	89 05 0f e9 00 00    	mov    DWORD PTR [rip+0xe90f],eax        # 112c0 <pkt_counter>
    29b1:	8b 15 09 e9 00 00    	mov    edx,DWORD PTR [rip+0xe909]        # 112c0 <pkt_counter>
    29b7:	8b 05 a3 75 10 00    	mov    eax,DWORD PTR [rip+0x1075a3]        # 109f60 <clean_delay_pkts>
    29bd:	39 c2                	cmp    edx,eax
    29bf:	72 0a                	jb     29cb <pktmgr+0x68>
    29c1:	c7 05 f5 e8 00 00 00 	mov    DWORD PTR [rip+0xe8f5],0x0        # 112c0 <pkt_counter>
    29c8:	00 00 00 
    29cb:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    29cf:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    29d3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    29d7:	0f b7 40 0c          	movzx  eax,WORD PTR [rax+0xc]
    29db:	0f b7 c0             	movzx  eax,ax
    29de:	3d 86 dd 00 00       	cmp    eax,0xdd86
    29e3:	74 46                	je     2a2b <pktmgr+0xc8>
    29e5:	3d 86 dd 00 00       	cmp    eax,0xdd86
    29ea:	7f 77                	jg     2a63 <pktmgr+0x100>
    29ec:	3d 80 35 00 00       	cmp    eax,0x3580
    29f1:	74 23                	je     2a16 <pktmgr+0xb3>
    29f3:	3d 80 35 00 00       	cmp    eax,0x3580
    29f8:	7f 69                	jg     2a63 <pktmgr+0x100>
    29fa:	3d 08 06 00 00       	cmp    eax,0x608
    29ff:	74 15                	je     2a16 <pktmgr+0xb3>
    2a01:	3d 08 06 00 00       	cmp    eax,0x608
    2a06:	7f 5b                	jg     2a63 <pktmgr+0x100>
    2a08:	83 f8 08             	cmp    eax,0x8
    2a0b:	74 33                	je     2a40 <pktmgr+0xdd>
    2a0d:	3d 90 00 00 00       	cmp    eax,0x90
    2a12:	74 41                	je     2a55 <pktmgr+0xf2>
    2a14:	eb 4d                	jmp    2a63 <pktmgr+0x100>
    2a16:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2a1a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2a1e:	48 89 d6             	mov    rsi,rdx
    2a21:	48 89 c7             	mov    rdi,rax
    2a24:	e8 86 00 00 00       	call   2aaf <arpdecode>
    2a29:	eb 7d                	jmp    2aa8 <pktmgr+0x145>
    2a2b:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2a2f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2a33:	48 89 d6             	mov    rsi,rdx
    2a36:	48 89 c7             	mov    rdi,rax
    2a39:	e8 93 83 00 00       	call   add1 <ip6decode>
    2a3e:	eb 68                	jmp    2aa8 <pktmgr+0x145>
    2a40:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2a44:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2a48:	48 89 d6             	mov    rsi,rdx
    2a4b:	48 89 c7             	mov    rdi,rax
    2a4e:	e8 56 0b 00 00       	call   35a9 <ipv4pktmgr>
    2a53:	eb 53                	jmp    2aa8 <pktmgr+0x145>
    2a55:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2a59:	48 89 c7             	mov    rdi,rax
    2a5c:	e8 42 03 00 00       	call   2da3 <loopback_ctp_decode>
    2a61:	eb 45                	jmp    2aa8 <pktmgr+0x145>
    2a63:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2a67:	48 89 c7             	mov    rdi,rax
    2a6a:	e8 f5 04 00 00       	call   2f64 <uc_mac_ntoa>
    2a6f:	48 89 c3             	mov    rbx,rax
    2a72:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2a76:	48 83 c0 06          	add    rax,0x6
    2a7a:	48 89 c7             	mov    rdi,rax
    2a7d:	e8 e2 04 00 00       	call   2f64 <uc_mac_ntoa>
    2a82:	41 b9 ff ff ff ff    	mov    r9d,0xffffffff
    2a88:	41 b8 ff ff ff ff    	mov    r8d,0xffffffff
    2a8e:	48 89 d9             	mov    rcx,rbx
    2a91:	48 89 c2             	mov    rdx,rax
    2a94:	48 8d 35 fd 95 00 00 	lea    rsi,[rip+0x95fd]        # c098 <_IO_stdin_used+0x98>
    2a9b:	48 8d 3d 28 96 00 00 	lea    rdi,[rip+0x9628]        # c0ca <_IO_stdin_used+0xca>
    2aa2:	e8 da 63 00 00       	call   8e81 <lfprintf>
    2aa7:	90                   	nop
    2aa8:	90                   	nop
    2aa9:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    2aad:	c9                   	leave  
    2aae:	c3                   	ret    

0000000000002aaf <arpdecode>:
    2aaf:	f3 0f 1e fa          	endbr64 
    2ab3:	55                   	push   rbp
    2ab4:	48 89 e5             	mov    rbp,rsp
    2ab7:	48 81 ec 50 03 00 00 	sub    rsp,0x350
    2abe:	48 89 bd b8 fc ff ff 	mov    QWORD PTR [rbp-0x348],rdi
    2ac5:	48 89 b5 b0 fc ff ff 	mov    QWORD PTR [rbp-0x350],rsi
    2acc:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2ad3:	00 00 
    2ad5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2ad9:	31 c0                	xor    eax,eax
    2adb:	0f b6 05 82 74 10 00 	movzx  eax,BYTE PTR [rip+0x107482]        # 109f64 <packet_print>
    2ae2:	84 c0                	test   al,al
    2ae4:	74 18                	je     2afe <arpdecode+0x4f>
    2ae6:	48 8d 35 fb 95 00 00 	lea    rsi,[rip+0x95fb]        # c0e8 <_IO_stdin_used+0xe8>
    2aed:	48 8d 3d fc 95 00 00 	lea    rdi,[rip+0x95fc]        # c0f0 <_IO_stdin_used+0xf0>
    2af4:	b8 00 00 00 00       	mov    eax,0x0
    2af9:	e8 62 f9 ff ff       	call   2460 <printf@plt>
    2afe:	48 8b 85 b8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x348]
    2b05:	48 83 c0 0e          	add    rax,0xe
    2b09:	48 89 85 c8 fc ff ff 	mov    QWORD PTR [rbp-0x338],rax
    2b10:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2b17:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    2b1b:	0f b7 c0             	movzx  eax,ax
    2b1e:	3d 00 18 00 00       	cmp    eax,0x1800
    2b23:	74 35                	je     2b5a <arpdecode+0xab>
    2b25:	3d 00 18 00 00       	cmp    eax,0x1800
    2b2a:	0f 8f 1d 02 00 00    	jg     2d4d <arpdecode+0x29e>
    2b30:	3d 00 02 00 00       	cmp    eax,0x200
    2b35:	0f 84 eb 00 00 00    	je     2c26 <arpdecode+0x177>
    2b3b:	3d 00 02 00 00       	cmp    eax,0x200
    2b40:	0f 8f 07 02 00 00    	jg     2d4d <arpdecode+0x29e>
    2b46:	83 f8 02             	cmp    eax,0x2
    2b49:	0f 84 d7 00 00 00    	je     2c26 <arpdecode+0x177>
    2b4f:	3d 00 01 00 00       	cmp    eax,0x100
    2b54:	0f 85 f3 01 00 00    	jne    2d4d <arpdecode+0x29e>
    2b5a:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2b61:	48 83 c0 18          	add    rax,0x18
    2b65:	48 89 c7             	mov    rdi,rax
    2b68:	e8 9d 04 00 00       	call   300a <u8_ipv4_ntoa>
    2b6d:	48 89 c1             	mov    rcx,rax
    2b70:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2b74:	ba 20 00 00 00       	mov    edx,0x20
    2b79:	48 89 ce             	mov    rsi,rcx
    2b7c:	48 89 c7             	mov    rdi,rax
    2b7f:	e8 fc fb ff ff       	call   2780 <strncpy@plt>
    2b84:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2b8b:	48 83 c0 0e          	add    rax,0xe
    2b8f:	48 89 c7             	mov    rdi,rax
    2b92:	e8 73 04 00 00       	call   300a <u8_ipv4_ntoa>
    2b97:	48 89 c1             	mov    rcx,rax
    2b9a:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2b9e:	ba 20 00 00 00       	mov    edx,0x20
    2ba3:	48 89 ce             	mov    rsi,rcx
    2ba6:	48 89 c7             	mov    rdi,rax
    2ba9:	e8 d2 fb ff ff       	call   2780 <strncpy@plt>
    2bae:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2bb2:	ba 05 00 00 00       	mov    edx,0x5
    2bb7:	48 8d 35 35 95 00 00 	lea    rsi,[rip+0x9535]        # c0f3 <_IO_stdin_used+0xf3>
    2bbe:	48 89 c7             	mov    rdi,rax
    2bc1:	e8 4a f9 ff ff       	call   2510 <strncmp@plt>
    2bc6:	85 c0                	test   eax,eax
    2bc8:	75 2c                	jne    2bf6 <arpdecode+0x147>
    2bca:	0f b6 05 93 73 10 00 	movzx  eax,BYTE PTR [rip+0x107393]        # 109f64 <packet_print>
    2bd1:	84 c0                	test   al,al
    2bd3:	0f 84 97 01 00 00    	je     2d70 <arpdecode+0x2c1>
    2bd9:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2bdd:	48 89 c6             	mov    rsi,rax
    2be0:	48 8d 3d 19 95 00 00 	lea    rdi,[rip+0x9519]        # c100 <_IO_stdin_used+0x100>
    2be7:	b8 00 00 00 00       	mov    eax,0x0
    2bec:	e8 6f f8 ff ff       	call   2460 <printf@plt>
    2bf1:	e9 7a 01 00 00       	jmp    2d70 <arpdecode+0x2c1>
    2bf6:	0f b6 05 67 73 10 00 	movzx  eax,BYTE PTR [rip+0x107367]        # 109f64 <packet_print>
    2bfd:	84 c0                	test   al,al
    2bff:	0f 84 6b 01 00 00    	je     2d70 <arpdecode+0x2c1>
    2c05:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2c09:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2c0d:	48 89 c6             	mov    rsi,rax
    2c10:	48 8d 3d 09 95 00 00 	lea    rdi,[rip+0x9509]        # c120 <_IO_stdin_used+0x120>
    2c17:	b8 00 00 00 00       	mov    eax,0x0
    2c1c:	e8 3f f8 ff ff       	call   2460 <printf@plt>
    2c21:	e9 4a 01 00 00       	jmp    2d70 <arpdecode+0x2c1>
    2c26:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2c2d:	48 83 c0 08          	add    rax,0x8
    2c31:	48 89 c7             	mov    rdi,rax
    2c34:	e8 7d 02 00 00       	call   2eb6 <mac_ntoa>
    2c39:	48 89 c1             	mov    rcx,rax
    2c3c:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2c40:	ba 40 00 00 00       	mov    edx,0x40
    2c45:	48 89 ce             	mov    rsi,rcx
    2c48:	48 89 c7             	mov    rdi,rax
    2c4b:	e8 30 fb ff ff       	call   2780 <strncpy@plt>
    2c50:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2c57:	48 83 c0 0e          	add    rax,0xe
    2c5b:	48 89 c7             	mov    rdi,rax
    2c5e:	e8 a7 03 00 00       	call   300a <u8_ipv4_ntoa>
    2c63:	48 89 c1             	mov    rcx,rax
    2c66:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2c6a:	ba 20 00 00 00       	mov    edx,0x20
    2c6f:	48 89 ce             	mov    rsi,rcx
    2c72:	48 89 c7             	mov    rdi,rax
    2c75:	e8 06 fb ff ff       	call   2780 <strncpy@plt>
    2c7a:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2c7e:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2c82:	48 89 d6             	mov    rsi,rdx
    2c85:	48 89 c7             	mov    rdi,rax
    2c88:	e8 09 4f 00 00       	call   7b96 <entry_exists>
    2c8d:	83 f8 ff             	cmp    eax,0xffffffff
    2c90:	74 15                	je     2ca7 <arpdecode+0x1f8>
    2c92:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2c96:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2c9a:	48 89 d6             	mov    rsi,rdx
    2c9d:	48 89 c7             	mov    rdi,rax
    2ca0:	e8 9e 4d 00 00       	call   7a43 <compare_entries>
    2ca5:	eb 7d                	jmp    2d24 <arpdecode+0x275>
    2ca7:	0f b6 05 73 72 10 00 	movzx  eax,BYTE PTR [rip+0x107273]        # 109f21 <use_sqlite>
    2cae:	84 c0                	test   al,al
    2cb0:	74 5f                	je     2d11 <arpdecode+0x262>
    2cb2:	c7 85 f4 fc ff ff 00 	mov    DWORD PTR [rbp-0x30c],0x0
    2cb9:	00 00 00 
    2cbc:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    2cc0:	48 8d 85 d0 fc ff ff 	lea    rax,[rbp-0x330]
    2cc7:	48 89 d6             	mov    rsi,rdx
    2cca:	48 89 c7             	mov    rdi,rax
    2ccd:	e8 5e fa ff ff       	call   2730 <strcpy@plt>
    2cd2:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2cd6:	48 8d 95 d0 fc ff ff 	lea    rdx,[rbp-0x330]
    2cdd:	48 83 c2 10          	add    rdx,0x10
    2ce1:	48 89 c6             	mov    rsi,rax
    2ce4:	48 89 d7             	mov    rdi,rdx
    2ce7:	e8 44 fa ff ff       	call   2730 <strcpy@plt>
    2cec:	48 8d 95 d0 fc ff ff 	lea    rdx,[rbp-0x330]
    2cf3:	48 8d 85 c0 fc ff ff 	lea    rax,[rbp-0x340]
    2cfa:	48 89 d1             	mov    rcx,rdx
    2cfd:	48 8d 15 f1 50 00 00 	lea    rdx,[rip+0x50f1]        # 7df5 <update_db>
    2d04:	be 00 00 00 00       	mov    esi,0x0
    2d09:	48 89 c7             	mov    rdi,rax
    2d0c:	e8 7f f8 ff ff       	call   2590 <pthread_create@plt>
    2d11:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2d15:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d19:	48 89 d6             	mov    rsi,rdx
    2d1c:	48 89 c7             	mov    rdi,rax
    2d1f:	e8 fe 4d 00 00       	call   7b22 <add_entry>
    2d24:	0f b6 05 39 72 10 00 	movzx  eax,BYTE PTR [rip+0x107239]        # 109f64 <packet_print>
    2d2b:	84 c0                	test   al,al
    2d2d:	74 44                	je     2d73 <arpdecode+0x2c4>
    2d2f:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2d33:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d37:	48 89 c6             	mov    rsi,rax
    2d3a:	48 8d 3d 07 94 00 00 	lea    rdi,[rip+0x9407]        # c148 <_IO_stdin_used+0x148>
    2d41:	b8 00 00 00 00       	mov    eax,0x0
    2d46:	e8 15 f7 ff ff       	call   2460 <printf@plt>
    2d4b:	eb 26                	jmp    2d73 <arpdecode+0x2c4>
    2d4d:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2d54:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    2d58:	0f b7 c0             	movzx  eax,ax
    2d5b:	89 c6                	mov    esi,eax
    2d5d:	48 8d 3d 03 94 00 00 	lea    rdi,[rip+0x9403]        # c167 <_IO_stdin_used+0x167>
    2d64:	b8 00 00 00 00       	mov    eax,0x0
    2d69:	e8 f2 f6 ff ff       	call   2460 <printf@plt>
    2d6e:	eb 04                	jmp    2d74 <arpdecode+0x2c5>
    2d70:	90                   	nop
    2d71:	eb 01                	jmp    2d74 <arpdecode+0x2c5>
    2d73:	90                   	nop
    2d74:	48 8d 35 04 94 00 00 	lea    rsi,[rip+0x9404]        # c17f <_IO_stdin_used+0x17f>
    2d7b:	48 8d 3d 6e 93 00 00 	lea    rdi,[rip+0x936e]        # c0f0 <_IO_stdin_used+0xf0>
    2d82:	b8 00 00 00 00       	mov    eax,0x0
    2d87:	e8 d4 f6 ff ff       	call   2460 <printf@plt>
    2d8c:	90                   	nop
    2d8d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2d91:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    2d98:	00 00 
    2d9a:	74 05                	je     2da1 <arpdecode+0x2f2>
    2d9c:	e8 5f f9 ff ff       	call   2700 <__stack_chk_fail@plt>
    2da1:	c9                   	leave  
    2da2:	c3                   	ret    

0000000000002da3 <loopback_ctp_decode>:
    2da3:	f3 0f 1e fa          	endbr64 
    2da7:	55                   	push   rbp
    2da8:	48 89 e5             	mov    rbp,rsp
    2dab:	48 83 ec 60          	sub    rsp,0x60
    2daf:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    2db3:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2dba:	00 00 
    2dbc:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2dc0:	31 c0                	xor    eax,eax
    2dc2:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    2dc6:	48 83 c0 0e          	add    rax,0xe
    2dca:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    2dce:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    2dd2:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    2dd6:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    2dda:	48 83 c0 06          	add    rax,0x6
    2dde:	48 89 c7             	mov    rdi,rax
    2de1:	e8 7e 01 00 00       	call   2f64 <uc_mac_ntoa>
    2de6:	48 89 c1             	mov    rcx,rax
    2de9:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    2ded:	ba 18 00 00 00       	mov    edx,0x18
    2df2:	48 89 ce             	mov    rsi,rcx
    2df5:	48 89 c7             	mov    rdi,rax
    2df8:	e8 83 f9 ff ff       	call   2780 <strncpy@plt>
    2dfd:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    2e01:	48 89 c7             	mov    rdi,rax
    2e04:	e8 5b 01 00 00       	call   2f64 <uc_mac_ntoa>
    2e09:	48 89 c1             	mov    rcx,rax
    2e0c:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    2e10:	ba 18 00 00 00       	mov    edx,0x18
    2e15:	48 89 ce             	mov    rsi,rcx
    2e18:	48 89 c7             	mov    rdi,rax
    2e1b:	e8 60 f9 ff ff       	call   2780 <strncpy@plt>
    2e20:	0f b6 05 3d 71 10 00 	movzx  eax,BYTE PTR [rip+0x10713d]        # 109f64 <packet_print>
    2e27:	84 c0                	test   al,al
    2e29:	74 1c                	je     2e47 <loopback_ctp_decode+0xa4>
    2e2b:	48 8d 55 e0          	lea    rdx,[rbp-0x20]
    2e2f:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    2e33:	48 89 c6             	mov    rsi,rax
    2e36:	48 8d 3d 47 93 00 00 	lea    rdi,[rip+0x9347]        # c184 <_IO_stdin_used+0x184>
    2e3d:	b8 00 00 00 00       	mov    eax,0x0
    2e42:	e8 19 f6 ff ff       	call   2460 <printf@plt>
    2e47:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    2e4b:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    2e4f:	0f b7 c0             	movzx  eax,ax
    2e52:	83 f8 01             	cmp    eax,0x1
    2e55:	75 19                	jne    2e70 <loopback_ctp_decode+0xcd>
    2e57:	0f b6 05 06 71 10 00 	movzx  eax,BYTE PTR [rip+0x107106]        # 109f64 <packet_print>
    2e5e:	84 c0                	test   al,al
    2e60:	74 39                	je     2e9b <loopback_ctp_decode+0xf8>
    2e62:	48 8d 3d 29 93 00 00 	lea    rdi,[rip+0x9329]        # c192 <_IO_stdin_used+0x192>
    2e69:	e8 42 f6 ff ff       	call   24b0 <puts@plt>
    2e6e:	eb 2b                	jmp    2e9b <loopback_ctp_decode+0xf8>
    2e70:	0f b6 05 ed 70 10 00 	movzx  eax,BYTE PTR [rip+0x1070ed]        # 109f64 <packet_print>
    2e77:	84 c0                	test   al,al
    2e79:	74 23                	je     2e9e <loopback_ctp_decode+0xfb>
    2e7b:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    2e7f:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    2e83:	0f b7 c0             	movzx  eax,ax
    2e86:	89 c6                	mov    esi,eax
    2e88:	48 8d 3d 0b 93 00 00 	lea    rdi,[rip+0x930b]        # c19a <_IO_stdin_used+0x19a>
    2e8f:	b8 00 00 00 00       	mov    eax,0x0
    2e94:	e8 c7 f5 ff ff       	call   2460 <printf@plt>
    2e99:	eb 03                	jmp    2e9e <loopback_ctp_decode+0xfb>
    2e9b:	90                   	nop
    2e9c:	eb 01                	jmp    2e9f <loopback_ctp_decode+0xfc>
    2e9e:	90                   	nop
    2e9f:	90                   	nop
    2ea0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2ea4:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    2eab:	00 00 
    2ead:	74 05                	je     2eb4 <loopback_ctp_decode+0x111>
    2eaf:	e8 4c f8 ff ff       	call   2700 <__stack_chk_fail@plt>
    2eb4:	c9                   	leave  
    2eb5:	c3                   	ret    

0000000000002eb6 <mac_ntoa>:
    2eb6:	f3 0f 1e fa          	endbr64 
    2eba:	55                   	push   rbp
    2ebb:	48 89 e5             	mov    rbp,rsp
    2ebe:	48 83 ec 20          	sub    rsp,0x20
    2ec2:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    2ec6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2eca:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2ece:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2ed2:	48 83 c0 05          	add    rax,0x5
    2ed6:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2ed9:	0f b6 f0             	movzx  esi,al
    2edc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2ee0:	48 83 c0 04          	add    rax,0x4
    2ee4:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2ee7:	0f b6 c8             	movzx  ecx,al
    2eea:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2eee:	48 83 c0 03          	add    rax,0x3
    2ef2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2ef5:	0f b6 d0             	movzx  edx,al
    2ef8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2efc:	48 83 c0 02          	add    rax,0x2
    2f00:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f03:	44 0f b6 c8          	movzx  r9d,al
    2f07:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f0b:	48 83 c0 01          	add    rax,0x1
    2f0f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f12:	44 0f b6 c0          	movzx  r8d,al
    2f16:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f1a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f1d:	0f b6 c0             	movzx  eax,al
    2f20:	64 48 8b 3c 25 00 00 	mov    rdi,QWORD PTR fs:0x0
    2f27:	00 00 
    2f29:	48 81 c7 80 ff ff ff 	add    rdi,0xffffffffffffff80
    2f30:	48 83 ec 08          	sub    rsp,0x8
    2f34:	56                   	push   rsi
    2f35:	51                   	push   rcx
    2f36:	52                   	push   rdx
    2f37:	89 c1                	mov    ecx,eax
    2f39:	48 8d 15 78 92 00 00 	lea    rdx,[rip+0x9278]        # c1b8 <_IO_stdin_used+0x1b8>
    2f40:	be 80 00 00 00       	mov    esi,0x80
    2f45:	b8 00 00 00 00       	mov    eax,0x0
    2f4a:	e8 31 f5 ff ff       	call   2480 <snprintf@plt>
    2f4f:	48 83 c4 20          	add    rsp,0x20
    2f53:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    2f5a:	00 00 
    2f5c:	48 05 80 ff ff ff    	add    rax,0xffffffffffffff80
    2f62:	c9                   	leave  
    2f63:	c3                   	ret    

0000000000002f64 <uc_mac_ntoa>:
    2f64:	f3 0f 1e fa          	endbr64 
    2f68:	55                   	push   rbp
    2f69:	48 89 e5             	mov    rbp,rsp
    2f6c:	48 83 ec 10          	sub    rsp,0x10
    2f70:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    2f74:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f78:	48 83 c0 05          	add    rax,0x5
    2f7c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f7f:	0f b6 f0             	movzx  esi,al
    2f82:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f86:	48 83 c0 04          	add    rax,0x4
    2f8a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f8d:	0f b6 c8             	movzx  ecx,al
    2f90:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f94:	48 83 c0 03          	add    rax,0x3
    2f98:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f9b:	0f b6 d0             	movzx  edx,al
    2f9e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fa2:	48 83 c0 02          	add    rax,0x2
    2fa6:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fa9:	44 0f b6 c8          	movzx  r9d,al
    2fad:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fb1:	48 83 c0 01          	add    rax,0x1
    2fb5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fb8:	44 0f b6 c0          	movzx  r8d,al
    2fbc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fc0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fc3:	0f b6 c0             	movzx  eax,al
    2fc6:	64 48 8b 3c 25 00 00 	mov    rdi,QWORD PTR fs:0x0
    2fcd:	00 00 
    2fcf:	48 81 c7 80 ff ff ff 	add    rdi,0xffffffffffffff80
    2fd6:	48 83 ec 08          	sub    rsp,0x8
    2fda:	56                   	push   rsi
    2fdb:	51                   	push   rcx
    2fdc:	52                   	push   rdx
    2fdd:	89 c1                	mov    ecx,eax
    2fdf:	48 8d 15 d2 91 00 00 	lea    rdx,[rip+0x91d2]        # c1b8 <_IO_stdin_used+0x1b8>
    2fe6:	be 80 00 00 00       	mov    esi,0x80
    2feb:	b8 00 00 00 00       	mov    eax,0x0
    2ff0:	e8 8b f4 ff ff       	call   2480 <snprintf@plt>
    2ff5:	48 83 c4 20          	add    rsp,0x20
    2ff9:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3000:	00 00 
    3002:	48 05 80 ff ff ff    	add    rax,0xffffffffffffff80
    3008:	c9                   	leave  
    3009:	c3                   	ret    

000000000000300a <u8_ipv4_ntoa>:
    300a:	f3 0f 1e fa          	endbr64 
    300e:	55                   	push   rbp
    300f:	48 89 e5             	mov    rbp,rsp
    3012:	48 83 ec 20          	sub    rsp,0x20
    3016:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    301a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    301e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3022:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3026:	48 83 c0 03          	add    rax,0x3
    302a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    302d:	0f b6 d0             	movzx  edx,al
    3030:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3034:	48 83 c0 02          	add    rax,0x2
    3038:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    303b:	44 0f b6 c0          	movzx  r8d,al
    303f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3043:	48 83 c0 01          	add    rax,0x1
    3047:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    304a:	0f b6 f0             	movzx  esi,al
    304d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3051:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3054:	0f b6 c0             	movzx  eax,al
    3057:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    305e:	00 00 
    3060:	48 8d b9 80 ff ff ff 	lea    rdi,[rcx-0x80]
    3067:	48 83 ec 08          	sub    rsp,0x8
    306b:	52                   	push   rdx
    306c:	45 89 c1             	mov    r9d,r8d
    306f:	41 89 f0             	mov    r8d,esi
    3072:	89 c1                	mov    ecx,eax
    3074:	48 8d 15 5b 91 00 00 	lea    rdx,[rip+0x915b]        # c1d6 <_IO_stdin_used+0x1d6>
    307b:	be 80 00 00 00       	mov    esi,0x80
    3080:	b8 00 00 00 00       	mov    eax,0x0
    3085:	e8 f6 f3 ff ff       	call   2480 <snprintf@plt>
    308a:	48 83 c4 10          	add    rsp,0x10
    308e:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3095:	00 00 
    3097:	48 05 80 ff ff ff    	add    rax,0xffffffffffffff80
    309d:	c9                   	leave  
    309e:	c3                   	ret    

000000000000309f <ipv4_ntoa>:
    309f:	f3 0f 1e fa          	endbr64 
    30a3:	55                   	push   rbp
    30a4:	48 89 e5             	mov    rbp,rsp
    30a7:	48 83 ec 20          	sub    rsp,0x20
    30ab:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    30ae:	48 8d 45 ec          	lea    rax,[rbp-0x14]
    30b2:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    30b6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    30ba:	48 83 c0 03          	add    rax,0x3
    30be:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    30c1:	0f b6 d0             	movzx  edx,al
    30c4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    30c8:	48 83 c0 02          	add    rax,0x2
    30cc:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    30cf:	44 0f b6 c0          	movzx  r8d,al
    30d3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    30d7:	48 83 c0 01          	add    rax,0x1
    30db:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    30de:	0f b6 f0             	movzx  esi,al
    30e1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    30e5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    30e8:	0f b6 c0             	movzx  eax,al
    30eb:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    30f2:	00 00 
    30f4:	48 8d b9 80 ff ff ff 	lea    rdi,[rcx-0x80]
    30fb:	48 83 ec 08          	sub    rsp,0x8
    30ff:	52                   	push   rdx
    3100:	45 89 c1             	mov    r9d,r8d
    3103:	41 89 f0             	mov    r8d,esi
    3106:	89 c1                	mov    ecx,eax
    3108:	48 8d 15 c7 90 00 00 	lea    rdx,[rip+0x90c7]        # c1d6 <_IO_stdin_used+0x1d6>
    310f:	be 80 00 00 00       	mov    esi,0x80
    3114:	b8 00 00 00 00       	mov    eax,0x0
    3119:	e8 62 f3 ff ff       	call   2480 <snprintf@plt>
    311e:	48 83 c4 10          	add    rsp,0x10
    3122:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3129:	00 00 
    312b:	48 05 80 ff ff ff    	add    rax,0xffffffffffffff80
    3131:	c9                   	leave  
    3132:	c3                   	ret    

0000000000003133 <inet6_ntoa>:
    3133:	f3 0f 1e fa          	endbr64 
    3137:	55                   	push   rbp
    3138:	48 89 e5             	mov    rbp,rsp
    313b:	41 57                	push   r15
    313d:	41 56                	push   r14
    313f:	41 55                	push   r13
    3141:	41 54                	push   r12
    3143:	53                   	push   rbx
    3144:	48 83 ec 38          	sub    rsp,0x38
    3148:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    314c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3153:	00 00 
    3155:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    3159:	31 c0                	xor    eax,eax
    315b:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3162:	00 00 
    3164:	48 05 80 ff ff ff    	add    rax,0xffffffffffffff80
    316a:	ba 80 00 00 00       	mov    edx,0x80
    316f:	be 00 00 00 00       	mov    esi,0x0
    3174:	48 89 c7             	mov    rdi,rax
    3177:	e8 f4 f2 ff ff       	call   2470 <memset@plt>
    317c:	48 c7 45 c0 00 00 00 	mov    QWORD PTR [rbp-0x40],0x0
    3183:	00 
    3184:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3188:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    318c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3190:	48 83 c0 0f          	add    rax,0xf
    3194:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3197:	0f b6 c8             	movzx  ecx,al
    319a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    319e:	48 83 c0 0e          	add    rax,0xe
    31a2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31a5:	0f b6 f8             	movzx  edi,al
    31a8:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    31ac:	48 83 c0 0d          	add    rax,0xd
    31b0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31b3:	0f b6 c0             	movzx  eax,al
    31b6:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
    31b9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    31bd:	48 83 c0 0c          	add    rax,0xc
    31c1:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31c4:	0f b6 d8             	movzx  ebx,al
    31c7:	89 5d b0             	mov    DWORD PTR [rbp-0x50],ebx
    31ca:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    31ce:	48 83 c0 0b          	add    rax,0xb
    31d2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31d5:	44 0f b6 f8          	movzx  r15d,al
    31d9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    31dd:	48 83 c0 0a          	add    rax,0xa
    31e1:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31e4:	44 0f b6 f0          	movzx  r14d,al
    31e8:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    31ec:	48 83 c0 09          	add    rax,0x9
    31f0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31f3:	44 0f b6 e8          	movzx  r13d,al
    31f7:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    31fb:	48 83 c0 08          	add    rax,0x8
    31ff:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3202:	44 0f b6 e0          	movzx  r12d,al
    3206:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    320a:	48 83 c0 07          	add    rax,0x7
    320e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3211:	0f b6 d8             	movzx  ebx,al
    3214:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3218:	48 83 c0 06          	add    rax,0x6
    321c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    321f:	44 0f b6 d8          	movzx  r11d,al
    3223:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3227:	48 83 c0 05          	add    rax,0x5
    322b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    322e:	44 0f b6 d0          	movzx  r10d,al
    3232:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3236:	48 83 c0 04          	add    rax,0x4
    323a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    323d:	44 0f b6 c8          	movzx  r9d,al
    3241:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3245:	48 83 c0 03          	add    rax,0x3
    3249:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    324c:	44 0f b6 c0          	movzx  r8d,al
    3250:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3254:	48 83 c0 02          	add    rax,0x2
    3258:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    325b:	0f b6 d0             	movzx  edx,al
    325e:	89 55 ac             	mov    DWORD PTR [rbp-0x54],edx
    3261:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3265:	48 83 c0 01          	add    rax,0x1
    3269:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    326c:	0f b6 f0             	movzx  esi,al
    326f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3273:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3276:	0f b6 d0             	movzx  edx,al
    3279:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3280:	00 00 
    3282:	48 05 80 ff ff ff    	add    rax,0xffffffffffffff80
    3288:	48 83 ec 08          	sub    rsp,0x8
    328c:	51                   	push   rcx
    328d:	57                   	push   rdi
    328e:	8b 4d b4             	mov    ecx,DWORD PTR [rbp-0x4c]
    3291:	51                   	push   rcx
    3292:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
    3295:	51                   	push   rcx
    3296:	41 57                	push   r15
    3298:	41 56                	push   r14
    329a:	41 55                	push   r13
    329c:	41 54                	push   r12
    329e:	53                   	push   rbx
    329f:	41 53                	push   r11
    32a1:	41 52                	push   r10
    32a3:	41 51                	push   r9
    32a5:	41 50                	push   r8
    32a7:	44 8b 4d ac          	mov    r9d,DWORD PTR [rbp-0x54]
    32ab:	41 89 f0             	mov    r8d,esi
    32ae:	89 d1                	mov    ecx,edx
    32b0:	48 8d 15 31 8f 00 00 	lea    rdx,[rip+0x8f31]        # c1e8 <_IO_stdin_used+0x1e8>
    32b7:	be 80 00 00 00       	mov    esi,0x80
    32bc:	48 89 c7             	mov    rdi,rax
    32bf:	b8 00 00 00 00       	mov    eax,0x0
    32c4:	e8 b7 f1 ff ff       	call   2480 <snprintf@plt>
    32c9:	48 83 c4 70          	add    rsp,0x70
    32cd:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    32d4:	00 00 
    32d6:	48 05 80 ff ff ff    	add    rax,0xffffffffffffff80
    32dc:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    32e0:	64 48 2b 34 25 28 00 	sub    rsi,QWORD PTR fs:0x28
    32e7:	00 00 
    32e9:	74 05                	je     32f0 <inet6_ntoa+0x1bd>
    32eb:	e8 10 f4 ff ff       	call   2700 <__stack_chk_fail@plt>
    32f0:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    32f4:	5b                   	pop    rbx
    32f5:	41 5c                	pop    r12
    32f7:	41 5d                	pop    r13
    32f9:	41 5e                	pop    r14
    32fb:	41 5f                	pop    r15
    32fd:	5d                   	pop    rbp
    32fe:	c3                   	ret    

00000000000032ff <get_formated_time>:
    32ff:	f3 0f 1e fa          	endbr64 
    3303:	55                   	push   rbp
    3304:	48 89 e5             	mov    rbp,rsp
    3307:	53                   	push   rbx
    3308:	48 83 ec 58          	sub    rsp,0x58
    330c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3313:	00 00 
    3315:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    3319:	31 c0                	xor    eax,eax
    331b:	bf ff 00 00 00       	mov    edi,0xff
    3320:	e8 fb f1 ff ff       	call   2520 <malloc@plt>
    3325:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    3329:	bf 00 00 00 00       	mov    edi,0x0
    332e:	e8 fd f4 ff ff       	call   2830 <time@plt>
    3333:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    3337:	48 8d 45 a0          	lea    rax,[rbp-0x60]
    333b:	48 89 c7             	mov    rdi,rax
    333e:	e8 ad f4 ff ff       	call   27f0 <localtime@plt>
    3343:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    3346:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    334a:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
    334e:	48 89 5d b8          	mov    QWORD PTR [rbp-0x48],rbx
    3352:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    3356:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    335a:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    335e:	48 89 5d c8          	mov    QWORD PTR [rbp-0x38],rbx
    3362:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    3366:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    336a:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    336e:	48 89 5d d8          	mov    QWORD PTR [rbp-0x28],rbx
    3372:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    3376:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    337a:	8b 7d b0             	mov    edi,DWORD PTR [rbp-0x50]
    337d:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
    3380:	44 8b 4d b8          	mov    r9d,DWORD PTR [rbp-0x48]
    3384:	44 8b 45 bc          	mov    r8d,DWORD PTR [rbp-0x44]
    3388:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    338b:	8d 48 01             	lea    ecx,[rax+0x1]
    338e:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    3391:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    3397:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    339b:	57                   	push   rdi
    339c:	56                   	push   rsi
    339d:	48 8d 35 8c 8e 00 00 	lea    rsi,[rip+0x8e8c]        # c230 <_IO_stdin_used+0x230>
    33a4:	48 89 c7             	mov    rdi,rax
    33a7:	b8 00 00 00 00       	mov    eax,0x0
    33ac:	e8 2f f2 ff ff       	call   25e0 <sprintf@plt>
    33b1:	48 83 c4 10          	add    rsp,0x10
    33b5:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    33b9:	48 8b 5d e8          	mov    rbx,QWORD PTR [rbp-0x18]
    33bd:	64 48 2b 1c 25 28 00 	sub    rbx,QWORD PTR fs:0x28
    33c4:	00 00 
    33c6:	74 05                	je     33cd <get_formated_time+0xce>
    33c8:	e8 33 f3 ff ff       	call   2700 <__stack_chk_fail@plt>
    33cd:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    33d1:	c9                   	leave  
    33d2:	c3                   	ret    

00000000000033d3 <cb_get_formatted_time>:
    33d3:	f3 0f 1e fa          	endbr64 
    33d7:	55                   	push   rbp
    33d8:	48 89 e5             	mov    rbp,rsp
    33db:	53                   	push   rbx
    33dc:	48 83 ec 68          	sub    rsp,0x68
    33e0:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    33e4:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    33eb:	00 00 
    33ed:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    33f1:	31 c0                	xor    eax,eax
    33f3:	bf 00 00 00 00       	mov    edi,0x0
    33f8:	e8 33 f4 ff ff       	call   2830 <time@plt>
    33fd:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    3401:	48 8d 45 a8          	lea    rax,[rbp-0x58]
    3405:	48 89 c7             	mov    rdi,rax
    3408:	e8 e3 f3 ff ff       	call   27f0 <localtime@plt>
    340d:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    3410:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    3414:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
    3418:	48 89 5d b8          	mov    QWORD PTR [rbp-0x48],rbx
    341c:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    3420:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    3424:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    3428:	48 89 5d c8          	mov    QWORD PTR [rbp-0x38],rbx
    342c:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    3430:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    3434:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    3438:	48 89 5d d8          	mov    QWORD PTR [rbp-0x28],rbx
    343c:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    3440:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    3444:	8b 7d b0             	mov    edi,DWORD PTR [rbp-0x50]
    3447:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
    344a:	44 8b 4d b8          	mov    r9d,DWORD PTR [rbp-0x48]
    344e:	44 8b 45 bc          	mov    r8d,DWORD PTR [rbp-0x44]
    3452:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    3455:	8d 48 01             	lea    ecx,[rax+0x1]
    3458:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    345b:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    3461:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    3465:	57                   	push   rdi
    3466:	56                   	push   rsi
    3467:	48 8d 35 c2 8d 00 00 	lea    rsi,[rip+0x8dc2]        # c230 <_IO_stdin_used+0x230>
    346e:	48 89 c7             	mov    rdi,rax
    3471:	b8 00 00 00 00       	mov    eax,0x0
    3476:	e8 65 f1 ff ff       	call   25e0 <sprintf@plt>
    347b:	48 83 c4 10          	add    rsp,0x10
    347f:	90                   	nop
    3480:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    3484:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    348b:	00 00 
    348d:	74 05                	je     3494 <cb_get_formatted_time+0xc1>
    348f:	e8 6c f2 ff ff       	call   2700 <__stack_chk_fail@plt>
    3494:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    3498:	c9                   	leave  
    3499:	c3                   	ret    

000000000000349a <strloc>:
    349a:	f3 0f 1e fa          	endbr64 
    349e:	55                   	push   rbp
    349f:	48 89 e5             	mov    rbp,rsp
    34a2:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    34a6:	89 f0                	mov    eax,esi
    34a8:	88 45 e4             	mov    BYTE PTR [rbp-0x1c],al
    34ab:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    34b2:	eb 1e                	jmp    34d2 <strloc+0x38>
    34b4:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    34b7:	48 63 d0             	movsxd rdx,eax
    34ba:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    34be:	48 01 d0             	add    rax,rdx
    34c1:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    34c4:	38 45 e4             	cmp    BYTE PTR [rbp-0x1c],al
    34c7:	75 05                	jne    34ce <strloc+0x34>
    34c9:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    34cc:	eb 1d                	jmp    34eb <strloc+0x51>
    34ce:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    34d2:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    34d5:	48 63 d0             	movsxd rdx,eax
    34d8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    34dc:	48 01 d0             	add    rax,rdx
    34df:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    34e2:	84 c0                	test   al,al
    34e4:	75 ce                	jne    34b4 <strloc+0x1a>
    34e6:	b8 ff ff ff ff       	mov    eax,0xffffffff
    34eb:	5d                   	pop    rbp
    34ec:	c3                   	ret    

00000000000034ed <fail>:
    34ed:	f3 0f 1e fa          	endbr64 
    34f1:	55                   	push   rbp
    34f2:	48 89 e5             	mov    rbp,rsp
    34f5:	48 83 ec 10          	sub    rsp,0x10
    34f9:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    34fd:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    3501:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    3505:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3509:	48 89 c6             	mov    rsi,rax
    350c:	48 8d 3d 39 8d 00 00 	lea    rdi,[rip+0x8d39]        # c24c <_IO_stdin_used+0x24c>
    3513:	b8 00 00 00 00       	mov    eax,0x0
    3518:	e8 43 ef ff ff       	call   2460 <printf@plt>
    351d:	90                   	nop
    351e:	c9                   	leave  
    351f:	c3                   	ret    

0000000000003520 <char_is_printable>:
    3520:	f3 0f 1e fa          	endbr64 
    3524:	55                   	push   rbp
    3525:	48 89 e5             	mov    rbp,rsp
    3528:	89 f8                	mov    eax,edi
    352a:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
    352d:	80 7d fc 1f          	cmp    BYTE PTR [rbp-0x4],0x1f
    3531:	7f 07                	jg     353a <char_is_printable+0x1a>
    3533:	b8 00 00 00 00       	mov    eax,0x0
    3538:	eb 05                	jmp    353f <char_is_printable+0x1f>
    353a:	b8 01 00 00 00       	mov    eax,0x1
    353f:	5d                   	pop    rbp
    3540:	c3                   	ret    

0000000000003541 <test_string_arr_print>:
    3541:	f3 0f 1e fa          	endbr64 
    3545:	55                   	push   rbp
    3546:	48 89 e5             	mov    rbp,rsp
    3549:	53                   	push   rbx
    354a:	48 83 ec 28          	sub    rsp,0x28
    354e:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    3552:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    3559:	eb 2c                	jmp    3587 <test_string_arr_print+0x46>
    355b:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    355e:	48 63 d0             	movsxd rdx,eax
    3561:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    3565:	48 01 d0             	add    rax,rdx
    3568:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    356b:	0f be c0             	movsx  eax,al
    356e:	89 c7                	mov    edi,eax
    3570:	e8 ab ff ff ff       	call   3520 <char_is_printable>
    3575:	83 f0 01             	xor    eax,0x1
    3578:	84 c0                	test   al,al
    357a:	74 07                	je     3583 <test_string_arr_print+0x42>
    357c:	b8 00 00 00 00       	mov    eax,0x0
    3581:	eb 20                	jmp    35a3 <test_string_arr_print+0x62>
    3583:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    3587:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    358a:	48 63 d8             	movsxd rbx,eax
    358d:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    3591:	48 89 c7             	mov    rdi,rax
    3594:	e8 27 f0 ff ff       	call   25c0 <strlen@plt>
    3599:	48 39 c3             	cmp    rbx,rax
    359c:	72 bd                	jb     355b <test_string_arr_print+0x1a>
    359e:	b8 01 00 00 00       	mov    eax,0x1
    35a3:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    35a7:	c9                   	leave  
    35a8:	c3                   	ret    

00000000000035a9 <ipv4pktmgr>:
    35a9:	f3 0f 1e fa          	endbr64 
    35ad:	55                   	push   rbp
    35ae:	48 89 e5             	mov    rbp,rsp
    35b1:	48 81 ec d0 04 00 00 	sub    rsp,0x4d0
    35b8:	48 89 bd 38 fb ff ff 	mov    QWORD PTR [rbp-0x4c8],rdi
    35bf:	48 89 b5 30 fb ff ff 	mov    QWORD PTR [rbp-0x4d0],rsi
    35c6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    35cd:	00 00 
    35cf:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    35d3:	31 c0                	xor    eax,eax
    35d5:	48 8b 85 38 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4c8]
    35dc:	48 83 c0 0e          	add    rax,0xe
    35e0:	48 89 85 58 fb ff ff 	mov    QWORD PTR [rbp-0x4a8],rax
    35e7:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    35ee:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    35f1:	89 c7                	mov    edi,eax
    35f3:	e8 08 f0 ff ff       	call   2600 <ntohl@plt>
    35f8:	89 85 7c fb ff ff    	mov    DWORD PTR [rbp-0x484],eax
    35fe:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    3605:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    3608:	89 c7                	mov    edi,eax
    360a:	e8 f1 ef ff ff       	call   2600 <ntohl@plt>
    360f:	89 85 78 fb ff ff    	mov    DWORD PTR [rbp-0x488],eax
    3615:	8b 95 78 fb ff ff    	mov    edx,DWORD PTR [rbp-0x488]
    361b:	8b 05 a7 69 10 00    	mov    eax,DWORD PTR [rip+0x1069a7]        # 109fc8 <homenetmask>
    3621:	21 d0                	and    eax,edx
    3623:	89 85 4c fb ff ff    	mov    DWORD PTR [rbp-0x4b4],eax
    3629:	8b 95 7c fb ff ff    	mov    edx,DWORD PTR [rbp-0x484]
    362f:	8b 05 93 69 10 00    	mov    eax,DWORD PTR [rip+0x106993]        # 109fc8 <homenetmask>
    3635:	21 d0                	and    eax,edx
    3637:	89 85 50 fb ff ff    	mov    DWORD PTR [rbp-0x4b0],eax
    363d:	8b 05 81 69 10 00    	mov    eax,DWORD PTR [rip+0x106981]        # 109fc4 <homenet>
    3643:	39 85 4c fb ff ff    	cmp    DWORD PTR [rbp-0x4b4],eax
    3649:	75 0c                	jne    3657 <ipv4pktmgr+0xae>
    364b:	c7 85 80 fb ff ff 45 	mov    DWORD PTR [rbp-0x480],0x45
    3652:	00 00 00 
    3655:	eb 24                	jmp    367b <ipv4pktmgr+0xd2>
    3657:	8b 05 67 69 10 00    	mov    eax,DWORD PTR [rip+0x106967]        # 109fc4 <homenet>
    365d:	39 85 50 fb ff ff    	cmp    DWORD PTR [rbp-0x4b0],eax
    3663:	75 0c                	jne    3671 <ipv4pktmgr+0xc8>
    3665:	c7 85 80 fb ff ff 46 	mov    DWORD PTR [rbp-0x480],0x46
    366c:	00 00 00 
    366f:	eb 0a                	jmp    367b <ipv4pktmgr+0xd2>
    3671:	c7 85 80 fb ff ff 47 	mov    DWORD PTR [rbp-0x480],0x47
    3678:	00 00 00 
    367b:	48 8b 85 30 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d0]
    3682:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    3685:	89 85 90 fb ff ff    	mov    DWORD PTR [rbp-0x470],eax
    368b:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    3692:	48 89 85 a8 fb ff ff 	mov    QWORD PTR [rbp-0x458],rax
    3699:	48 8b 85 30 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d0]
    36a0:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    36a3:	48 8b 95 38 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4c8]
    36aa:	48 83 c2 0e          	add    rdx,0xe
    36ae:	0f b6 12             	movzx  edx,BYTE PTR [rdx]
    36b1:	83 e2 0f             	and    edx,0xf
    36b4:	0f b6 d2             	movzx  edx,dl
    36b7:	c1 e2 02             	shl    edx,0x2
    36ba:	29 d0                	sub    eax,edx
    36bc:	83 e8 0e             	sub    eax,0xe
    36bf:	89 85 54 fb ff ff    	mov    DWORD PTR [rbp-0x4ac],eax
    36c5:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    36cc:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    36cf:	89 c7                	mov    edi,eax
    36d1:	e8 c9 f9 ff ff       	call   309f <ipv4_ntoa>
    36d6:	48 89 c1             	mov    rcx,rax
    36d9:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    36e0:	ba 10 00 00 00       	mov    edx,0x10
    36e5:	48 89 ce             	mov    rsi,rcx
    36e8:	48 89 c7             	mov    rdi,rax
    36eb:	e8 90 f0 ff ff       	call   2780 <strncpy@plt>
    36f0:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    36f7:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    36fa:	89 c7                	mov    edi,eax
    36fc:	e8 9e f9 ff ff       	call   309f <ipv4_ntoa>
    3701:	48 89 c1             	mov    rcx,rax
    3704:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    370b:	ba 10 00 00 00       	mov    edx,0x10
    3710:	48 89 ce             	mov    rsi,rcx
    3713:	48 89 c7             	mov    rdi,rax
    3716:	e8 65 f0 ff ff       	call   2780 <strncpy@plt>
    371b:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    3722:	48 89 c7             	mov    rdi,rax
    3725:	e8 e8 40 00 00       	call   7812 <init_member>
    372a:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    3731:	48 89 c7             	mov    rdi,rax
    3734:	e8 d9 40 00 00       	call   7812 <init_member>
    3739:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    3740:	48 89 c7             	mov    rdi,rax
    3743:	e8 84 20 00 00       	call   57cc <is_blocked_ipv4>
    3748:	84 c0                	test   al,al
    374a:	74 44                	je     3790 <ipv4pktmgr+0x1e7>
    374c:	b8 00 00 00 00       	mov    eax,0x0
    3751:	e8 a9 fb ff ff       	call   32ff <get_formated_time>
    3756:	48 89 c6             	mov    rsi,rax
    3759:	48 8d 95 e0 fb ff ff 	lea    rdx,[rbp-0x420]
    3760:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    3767:	48 89 d1             	mov    rcx,rdx
    376a:	48 89 f2             	mov    rdx,rsi
    376d:	48 8d 35 e4 8a 00 00 	lea    rsi,[rip+0x8ae4]        # c258 <_IO_stdin_used+0x258>
    3774:	48 89 c7             	mov    rdi,rax
    3777:	b8 00 00 00 00       	mov    eax,0x0
    377c:	e8 5f ee ff ff       	call   25e0 <sprintf@plt>
    3781:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    3788:	48 89 c7             	mov    rdi,rax
    378b:	e8 63 58 00 00       	call   8ff3 <saprintf>
    3790:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    3797:	48 89 c7             	mov    rdi,rax
    379a:	e8 2d 20 00 00       	call   57cc <is_blocked_ipv4>
    379f:	84 c0                	test   al,al
    37a1:	74 44                	je     37e7 <ipv4pktmgr+0x23e>
    37a3:	b8 00 00 00 00       	mov    eax,0x0
    37a8:	e8 52 fb ff ff       	call   32ff <get_formated_time>
    37ad:	48 89 c6             	mov    rsi,rax
    37b0:	48 8d 95 d0 fb ff ff 	lea    rdx,[rbp-0x430]
    37b7:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    37be:	48 89 d1             	mov    rcx,rdx
    37c1:	48 89 f2             	mov    rdx,rsi
    37c4:	48 8d 35 bd 8a 00 00 	lea    rsi,[rip+0x8abd]        # c288 <_IO_stdin_used+0x288>
    37cb:	48 89 c7             	mov    rdi,rax
    37ce:	b8 00 00 00 00       	mov    eax,0x0
    37d3:	e8 08 ee ff ff       	call   25e0 <sprintf@plt>
    37d8:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    37df:	48 89 c7             	mov    rdi,rax
    37e2:	e8 0c 58 00 00       	call   8ff3 <saprintf>
    37e7:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    37ee:	48 89 85 68 fb ff ff 	mov    QWORD PTR [rbp-0x498],rax
    37f5:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    37fc:	48 89 85 70 fb ff ff 	mov    QWORD PTR [rbp-0x490],rax
    3803:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    380a:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    380e:	66 83 f8 20          	cmp    ax,0x20
    3812:	74 11                	je     3825 <ipv4pktmgr+0x27c>
    3814:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    381b:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    381f:	66 3d 02 01          	cmp    ax,0x102
    3823:	75 66                	jne    388b <ipv4pktmgr+0x2e2>
    3825:	48 8d 35 84 8a 00 00 	lea    rsi,[rip+0x8a84]        # c2b0 <_IO_stdin_used+0x2b0>
    382c:	48 8d 3d 82 8a 00 00 	lea    rdi,[rip+0x8a82]        # c2b5 <_IO_stdin_used+0x2b5>
    3833:	b8 00 00 00 00       	mov    eax,0x0
    3838:	e8 23 ec ff ff       	call   2460 <printf@plt>
    383d:	0f b6 05 20 67 10 00 	movzx  eax,BYTE PTR [rip+0x106720]        # 109f64 <packet_print>
    3844:	84 c0                	test   al,al
    3846:	74 1a                	je     3862 <ipv4pktmgr+0x2b9>
    3848:	48 8d 35 74 8a 00 00 	lea    rsi,[rip+0x8a74]        # c2c3 <_IO_stdin_used+0x2c3>
    384f:	48 8d 3d 72 8a 00 00 	lea    rdi,[rip+0x8a72]        # c2c8 <_IO_stdin_used+0x2c8>
    3856:	b8 00 00 00 00       	mov    eax,0x0
    385b:	e8 00 ec ff ff       	call   2460 <printf@plt>
    3860:	eb 29                	jmp    388b <ipv4pktmgr+0x2e2>
    3862:	48 8d 95 e0 fb ff ff 	lea    rdx,[rbp-0x420]
    3869:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    3870:	48 8d 0d 4c 8a 00 00 	lea    rcx,[rip+0x8a4c]        # c2c3 <_IO_stdin_used+0x2c3>
    3877:	48 89 c6             	mov    rsi,rax
    387a:	48 8d 3d 4a 8a 00 00 	lea    rdi,[rip+0x8a4a]        # c2cb <_IO_stdin_used+0x2cb>
    3881:	b8 00 00 00 00       	mov    eax,0x0
    3886:	e8 d5 eb ff ff       	call   2460 <printf@plt>
    388b:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    3892:	0f b6 40 09          	movzx  eax,BYTE PTR [rax+0x9]
    3896:	0f b6 c0             	movzx  eax,al
    3899:	83 f8 11             	cmp    eax,0x11
    389c:	0f 84 b8 00 00 00    	je     395a <ipv4pktmgr+0x3b1>
    38a2:	83 f8 11             	cmp    eax,0x11
    38a5:	0f 8f db 00 00 00    	jg     3986 <ipv4pktmgr+0x3dd>
    38ab:	83 f8 06             	cmp    eax,0x6
    38ae:	74 7e                	je     392e <ipv4pktmgr+0x385>
    38b0:	83 f8 06             	cmp    eax,0x6
    38b3:	0f 8f cd 00 00 00    	jg     3986 <ipv4pktmgr+0x3dd>
    38b9:	83 f8 01             	cmp    eax,0x1
    38bc:	74 0a                	je     38c8 <ipv4pktmgr+0x31f>
    38be:	83 f8 02             	cmp    eax,0x2
    38c1:	74 2d                	je     38f0 <ipv4pktmgr+0x347>
    38c3:	e9 be 00 00 00       	jmp    3986 <ipv4pktmgr+0x3dd>
    38c8:	c7 85 8c fb ff ff 80 	mov    DWORD PTR [rbp-0x474],0x80
    38cf:	00 00 00 
    38d2:	48 8d 95 60 fb ff ff 	lea    rdx,[rbp-0x4a0]
    38d9:	48 8b 85 38 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4c8]
    38e0:	48 89 d6             	mov    rsi,rdx
    38e3:	48 89 c7             	mov    rdi,rax
    38e6:	e8 40 02 00 00       	call   3b2b <ip4_icmp_decode>
    38eb:	e9 c7 00 00 00       	jmp    39b7 <ipv4pktmgr+0x40e>
    38f0:	c7 85 8c fb ff ff ff 	mov    DWORD PTR [rbp-0x474],0xffffffff
    38f7:	ff ff ff 
    38fa:	8b 05 40 d7 00 00    	mov    eax,DWORD PTR [rip+0xd740]        # 11040 <total_conversations>
    3900:	83 e8 01             	sub    eax,0x1
    3903:	89 05 37 d7 00 00    	mov    DWORD PTR [rip+0xd737],eax        # 11040 <total_conversations>
    3909:	48 8b 95 70 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x490]
    3910:	48 8b 8d 68 fb ff ff 	mov    rcx,QWORD PTR [rbp-0x498]
    3917:	48 8b 85 38 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4c8]
    391e:	48 89 ce             	mov    rsi,rcx
    3921:	48 89 c7             	mov    rdi,rax
    3924:	e8 1c 14 00 00       	call   4d45 <ip4_igmp_decode>
    3929:	e9 89 00 00 00       	jmp    39b7 <ipv4pktmgr+0x40e>
    392e:	c7 85 8c fb ff ff 7e 	mov    DWORD PTR [rbp-0x474],0x7e
    3935:	00 00 00 
    3938:	48 8b 95 30 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4d0]
    393f:	48 8d 8d 60 fb ff ff 	lea    rcx,[rbp-0x4a0]
    3946:	48 8b 85 38 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4c8]
    394d:	48 89 ce             	mov    rsi,rcx
    3950:	48 89 c7             	mov    rdi,rax
    3953:	e8 17 0a 00 00       	call   436f <ip4_tcp_decode>
    3958:	eb 5d                	jmp    39b7 <ipv4pktmgr+0x40e>
    395a:	c7 85 8c fb ff ff 7f 	mov    DWORD PTR [rbp-0x474],0x7f
    3961:	00 00 00 
    3964:	48 8b 95 30 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4d0]
    396b:	48 8d 8d 60 fb ff ff 	lea    rcx,[rbp-0x4a0]
    3972:	48 8b 85 38 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4c8]
    3979:	48 89 ce             	mov    rsi,rcx
    397c:	48 89 c7             	mov    rdi,rax
    397f:	e8 6c 12 00 00       	call   4bf0 <ip4_udp_decode>
    3984:	eb 31                	jmp    39b7 <ipv4pktmgr+0x40e>
    3986:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    398d:	0f b6 40 09          	movzx  eax,BYTE PTR [rax+0x9]
    3991:	0f b6 c8             	movzx  ecx,al
    3994:	48 8b 95 70 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x490]
    399b:	48 8b 85 68 fb ff ff 	mov    rax,QWORD PTR [rbp-0x498]
    39a2:	48 89 c6             	mov    rsi,rax
    39a5:	48 8d 3d 2c 89 00 00 	lea    rdi,[rip+0x892c]        # c2d8 <_IO_stdin_used+0x2d8>
    39ac:	b8 00 00 00 00       	mov    eax,0x0
    39b1:	e8 aa ea ff ff       	call   2460 <printf@plt>
    39b6:	90                   	nop
    39b7:	90                   	nop
    39b8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    39bc:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    39c3:	00 00 
    39c5:	74 05                	je     39cc <ipv4pktmgr+0x423>
    39c7:	e8 34 ed ff ff       	call   2700 <__stack_chk_fail@plt>
    39cc:	c9                   	leave  
    39cd:	c3                   	ret    

00000000000039ce <ip6_icmp_decode>:
    39ce:	f3 0f 1e fa          	endbr64 
    39d2:	55                   	push   rbp
    39d3:	48 89 e5             	mov    rbp,rsp
    39d6:	48 83 c4 80          	add    rsp,0xffffffffffffff80
    39da:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    39de:	48 89 75 90          	mov    QWORD PTR [rbp-0x70],rsi
    39e2:	48 89 55 88          	mov    QWORD PTR [rbp-0x78],rdx
    39e6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    39ed:	00 00 
    39ef:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    39f3:	31 c0                	xor    eax,eax
    39f5:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    39f9:	48 83 c0 36          	add    rax,0x36
    39fd:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    3a01:	0f b6 05 5c 65 10 00 	movzx  eax,BYTE PTR [rip+0x10655c]        # 109f64 <packet_print>
    3a08:	84 c0                	test   al,al
    3a0a:	0f 84 04 01 00 00    	je     3b14 <ip6_icmp_decode+0x146>
    3a10:	48 8d 35 e9 88 00 00 	lea    rsi,[rip+0x88e9]        # c300 <_IO_stdin_used+0x300>
    3a17:	48 8d 3d e8 88 00 00 	lea    rdi,[rip+0x88e8]        # c306 <_IO_stdin_used+0x306>
    3a1e:	b8 00 00 00 00       	mov    eax,0x0
    3a23:	e8 38 ea ff ff       	call   2460 <printf@plt>
    3a28:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
    3a2c:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    3a30:	48 89 c6             	mov    rsi,rax
    3a33:	48 8d 3d cf 88 00 00 	lea    rdi,[rip+0x88cf]        # c309 <_IO_stdin_used+0x309>
    3a3a:	b8 00 00 00 00       	mov    eax,0x0
    3a3f:	e8 1c ea ff ff       	call   2460 <printf@plt>
    3a44:	48 8d 3d cd 88 00 00 	lea    rdi,[rip+0x88cd]        # c318 <_IO_stdin_used+0x318>
    3a4b:	b8 00 00 00 00       	mov    eax,0x0
    3a50:	e8 0b ea ff ff       	call   2460 <printf@plt>
    3a55:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3a59:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3a5c:	0f b6 c0             	movzx  eax,al
    3a5f:	3d 8f 00 00 00       	cmp    eax,0x8f
    3a64:	74 68                	je     3ace <ip6_icmp_decode+0x100>
    3a66:	3d 8f 00 00 00       	cmp    eax,0x8f
    3a6b:	0f 8f 8b 00 00 00    	jg     3afc <ip6_icmp_decode+0x12e>
    3a71:	3d 87 00 00 00       	cmp    eax,0x87
    3a76:	74 77                	je     3aef <ip6_icmp_decode+0x121>
    3a78:	3d 87 00 00 00       	cmp    eax,0x87
    3a7d:	7f 7d                	jg     3afc <ip6_icmp_decode+0x12e>
    3a7f:	3d 82 00 00 00       	cmp    eax,0x82
    3a84:	74 56                	je     3adc <ip6_icmp_decode+0x10e>
    3a86:	3d 85 00 00 00       	cmp    eax,0x85
    3a8b:	75 6f                	jne    3afc <ip6_icmp_decode+0x12e>
    3a8d:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3a91:	48 83 c0 0a          	add    rax,0xa
    3a95:	48 89 c7             	mov    rdi,rax
    3a98:	e8 19 f4 ff ff       	call   2eb6 <mac_ntoa>
    3a9d:	48 89 c1             	mov    rcx,rax
    3aa0:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    3aa4:	ba 40 00 00 00       	mov    edx,0x40
    3aa9:	48 89 ce             	mov    rsi,rcx
    3aac:	48 89 c7             	mov    rdi,rax
    3aaf:	e8 cc ec ff ff       	call   2780 <strncpy@plt>
    3ab4:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    3ab8:	48 89 c6             	mov    rsi,rax
    3abb:	48 8d 3d 5f 88 00 00 	lea    rdi,[rip+0x885f]        # c321 <_IO_stdin_used+0x321>
    3ac2:	b8 00 00 00 00       	mov    eax,0x0
    3ac7:	e8 94 e9 ff ff       	call   2460 <printf@plt>
    3acc:	eb 2e                	jmp    3afc <ip6_icmp_decode+0x12e>
    3ace:	48 8d 3d 6b 88 00 00 	lea    rdi,[rip+0x886b]        # c340 <_IO_stdin_used+0x340>
    3ad5:	e8 d6 e9 ff ff       	call   24b0 <puts@plt>
    3ada:	eb 20                	jmp    3afc <ip6_icmp_decode+0x12e>
    3adc:	48 8d 3d 82 88 00 00 	lea    rdi,[rip+0x8882]        # c365 <_IO_stdin_used+0x365>
    3ae3:	b8 00 00 00 00       	mov    eax,0x0
    3ae8:	e8 73 e9 ff ff       	call   2460 <printf@plt>
    3aed:	eb 0d                	jmp    3afc <ip6_icmp_decode+0x12e>
    3aef:	48 8d 3d 89 88 00 00 	lea    rdi,[rip+0x8889]        # c37f <_IO_stdin_used+0x37f>
    3af6:	e8 b5 e9 ff ff       	call   24b0 <puts@plt>
    3afb:	90                   	nop
    3afc:	48 8d 35 92 88 00 00 	lea    rsi,[rip+0x8892]        # c395 <_IO_stdin_used+0x395>
    3b03:	48 8d 3d fc 87 00 00 	lea    rdi,[rip+0x87fc]        # c306 <_IO_stdin_used+0x306>
    3b0a:	b8 00 00 00 00       	mov    eax,0x0
    3b0f:	e8 4c e9 ff ff       	call   2460 <printf@plt>
    3b14:	90                   	nop
    3b15:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3b19:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    3b20:	00 00 
    3b22:	74 05                	je     3b29 <ip6_icmp_decode+0x15b>
    3b24:	e8 d7 eb ff ff       	call   2700 <__stack_chk_fail@plt>
    3b29:	c9                   	leave  
    3b2a:	c3                   	ret    

0000000000003b2b <ip4_icmp_decode>:
    3b2b:	f3 0f 1e fa          	endbr64 
    3b2f:	55                   	push   rbp
    3b30:	48 89 e5             	mov    rbp,rsp
    3b33:	48 81 ec 20 01 00 00 	sub    rsp,0x120
    3b3a:	48 89 bd e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rdi
    3b41:	48 89 b5 e0 fe ff ff 	mov    QWORD PTR [rbp-0x120],rsi
    3b48:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3b4f:	00 00 
    3b51:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3b55:	31 c0                	xor    eax,eax
    3b57:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3b5e:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3b62:	ba 5e 00 00 00       	mov    edx,0x5e
    3b67:	be 01 00 00 00       	mov    esi,0x1
    3b6c:	48 89 c7             	mov    rdi,rax
    3b6f:	e8 d0 12 00 00       	call   4e44 <add_ip_addr_or_inc_counter>
    3b74:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3b7b:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    3b7f:	ba 5e 00 00 00       	mov    edx,0x5e
    3b84:	be 00 00 00 00       	mov    esi,0x0
    3b89:	48 89 c7             	mov    rdi,rax
    3b8c:	e8 b3 12 00 00       	call   4e44 <add_ip_addr_or_inc_counter>
    3b91:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3b98:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3b9c:	48 89 85 08 ff ff ff 	mov    QWORD PTR [rbp-0xf8],rax
    3ba3:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3baa:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    3bae:	48 89 85 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],rax
    3bb5:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    3bbc:	48 83 c0 22          	add    rax,0x22
    3bc0:	48 89 85 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rax
    3bc7:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    3bce:	48 8d 50 22          	lea    rdx,[rax+0x22]
    3bd2:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3bd9:	48 89 10             	mov    QWORD PTR [rax],rdx
    3bdc:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3be3:	48 8b 95 18 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xe8]
    3bea:	48 89 50 58          	mov    QWORD PTR [rax+0x58],rdx
    3bee:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3bf5:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    3bf8:	89 85 fc fe ff ff    	mov    DWORD PTR [rbp-0x104],eax
    3bfe:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c05:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    3c08:	8d 50 d6             	lea    edx,[rax-0x2a]
    3c0b:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c12:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    3c15:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    3c1c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3c1f:	3c 08                	cmp    al,0x8
    3c21:	0f 85 55 01 00 00    	jne    3d7c <ip4_icmp_decode+0x251>
    3c27:	8b 05 5b d4 00 00    	mov    eax,DWORD PTR [rip+0xd45b]        # 11088 <strict_nmap_host_alive_check>
    3c2d:	83 f8 01             	cmp    eax,0x1
    3c30:	0f 85 46 01 00 00    	jne    3d7c <ip4_icmp_decode+0x251>
    3c36:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c3d:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3c41:	48 89 c7             	mov    rdi,rax
    3c44:	e8 57 3b 00 00       	call   77a0 <member_exists>
    3c49:	89 85 00 ff ff ff    	mov    DWORD PTR [rbp-0x100],eax
    3c4f:	83 bd 00 ff ff ff ff 	cmp    DWORD PTR [rbp-0x100],0xffffffff
    3c56:	0f 84 83 00 00 00    	je     3cdf <ip4_icmp_decode+0x1b4>
    3c5c:	8b 85 00 ff ff ff    	mov    eax,DWORD PTR [rbp-0x100]
    3c62:	48 63 d0             	movsxd rdx,eax
    3c65:	48 89 d0             	mov    rax,rdx
    3c68:	48 c1 e0 02          	shl    rax,0x2
    3c6c:	48 01 d0             	add    rax,rdx
    3c6f:	48 c1 e0 03          	shl    rax,0x3
    3c73:	48 01 d0             	add    rax,rdx
    3c76:	48 c1 e0 04          	shl    rax,0x4
    3c7a:	48 8d 15 9f f8 0e 00 	lea    rdx,[rip+0xef89f]        # f3520 <watchlist>
    3c81:	48 01 d0             	add    rax,rdx
    3c84:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
    3c8b:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3c92:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3c95:	85 c0                	test   eax,eax
    3c97:	0f 85 a8 02 00 00    	jne    3f45 <ip4_icmp_decode+0x41a>
    3c9d:	bf 00 00 00 00       	mov    edi,0x0
    3ca2:	e8 89 eb ff ff       	call   2830 <time@plt>
    3ca7:	48 89 c2             	mov    rdx,rax
    3caa:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3cb1:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    3cb5:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3cbc:	c7 40 30 01 00 00 00 	mov    DWORD PTR [rax+0x30],0x1
    3cc3:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3cca:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3ccd:	8d 50 01             	lea    edx,[rax+0x1]
    3cd0:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3cd7:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    3cda:	e9 66 02 00 00       	jmp    3f45 <ip4_icmp_decode+0x41a>
    3cdf:	8b 05 33 d3 00 00    	mov    eax,DWORD PTR [rip+0xd333]        # 11018 <watchlist_num>
    3ce5:	83 c0 01             	add    eax,0x1
    3ce8:	89 05 2a d3 00 00    	mov    DWORD PTR [rip+0xd32a],eax        # 11018 <watchlist_num>
    3cee:	8b 05 24 d3 00 00    	mov    eax,DWORD PTR [rip+0xd324]        # 11018 <watchlist_num>
    3cf4:	48 63 d0             	movsxd rdx,eax
    3cf7:	48 89 d0             	mov    rax,rdx
    3cfa:	48 c1 e0 02          	shl    rax,0x2
    3cfe:	48 01 d0             	add    rax,rdx
    3d01:	48 c1 e0 03          	shl    rax,0x3
    3d05:	48 01 d0             	add    rax,rdx
    3d08:	48 c1 e0 04          	shl    rax,0x4
    3d0c:	48 8d 15 0d f8 0e 00 	lea    rdx,[rip+0xef80d]        # f3520 <watchlist>
    3d13:	48 01 d0             	add    rax,rdx
    3d16:	48 89 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rax
    3d1d:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3d24:	48 8d 50 08          	lea    rdx,[rax+0x8]
    3d28:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3d2f:	48 89 c6             	mov    rsi,rax
    3d32:	48 89 d7             	mov    rdi,rdx
    3d35:	e8 f6 e9 ff ff       	call   2730 <strcpy@plt>
    3d3a:	bf 00 00 00 00       	mov    edi,0x0
    3d3f:	e8 ec ea ff ff       	call   2830 <time@plt>
    3d44:	48 89 c2             	mov    rdx,rax
    3d47:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3d4e:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    3d52:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3d59:	c7 40 30 01 00 00 00 	mov    DWORD PTR [rax+0x30],0x1
    3d60:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3d67:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3d6a:	8d 50 01             	lea    edx,[rax+0x1]
    3d6d:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3d74:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    3d77:	e9 c9 01 00 00       	jmp    3f45 <ip4_icmp_decode+0x41a>
    3d7c:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    3d83:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3d86:	3c 0d                	cmp    al,0xd
    3d88:	0f 85 ba 01 00 00    	jne    3f48 <ip4_icmp_decode+0x41d>
    3d8e:	8b 05 f0 d2 00 00    	mov    eax,DWORD PTR [rip+0xd2f0]        # 11084 <strict_icmp_timestamp_req>
    3d94:	83 f8 01             	cmp    eax,0x1
    3d97:	74 0f                	je     3da8 <ip4_icmp_decode+0x27d>
    3d99:	8b 05 e9 d2 00 00    	mov    eax,DWORD PTR [rip+0xd2e9]        # 11088 <strict_nmap_host_alive_check>
    3d9f:	83 f8 01             	cmp    eax,0x1
    3da2:	0f 85 a0 01 00 00    	jne    3f48 <ip4_icmp_decode+0x41d>
    3da8:	8b 05 d6 d2 00 00    	mov    eax,DWORD PTR [rip+0xd2d6]        # 11084 <strict_icmp_timestamp_req>
    3dae:	85 c0                	test   eax,eax
    3db0:	74 22                	je     3dd4 <ip4_icmp_decode+0x2a9>
    3db2:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    3db9:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3dc0:	48 89 c6             	mov    rsi,rax
    3dc3:	48 8d 3d d6 85 00 00 	lea    rdi,[rip+0x85d6]        # c3a0 <_IO_stdin_used+0x3a0>
    3dca:	b8 00 00 00 00       	mov    eax,0x0
    3dcf:	e8 8c e6 ff ff       	call   2460 <printf@plt>
    3dd4:	8b 05 ae d2 00 00    	mov    eax,DWORD PTR [rip+0xd2ae]        # 11088 <strict_nmap_host_alive_check>
    3dda:	85 c0                	test   eax,eax
    3ddc:	0f 84 66 01 00 00    	je     3f48 <ip4_icmp_decode+0x41d>
    3de2:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3de9:	48 89 c7             	mov    rdi,rax
    3dec:	e8 af 39 00 00       	call   77a0 <member_exists>
    3df1:	89 85 04 ff ff ff    	mov    DWORD PTR [rbp-0xfc],eax
    3df7:	83 bd 04 ff ff ff ff 	cmp    DWORD PTR [rbp-0xfc],0xffffffff
    3dfe:	0f 84 44 01 00 00    	je     3f48 <ip4_icmp_decode+0x41d>
    3e04:	8b 85 04 ff ff ff    	mov    eax,DWORD PTR [rbp-0xfc]
    3e0a:	48 63 d0             	movsxd rdx,eax
    3e0d:	48 89 d0             	mov    rax,rdx
    3e10:	48 c1 e0 02          	shl    rax,0x2
    3e14:	48 01 d0             	add    rax,rdx
    3e17:	48 c1 e0 03          	shl    rax,0x3
    3e1b:	48 01 d0             	add    rax,rdx
    3e1e:	48 c1 e0 04          	shl    rax,0x4
    3e22:	48 8d 15 f7 f6 0e 00 	lea    rdx,[rip+0xef6f7]        # f3520 <watchlist>
    3e29:	48 01 d0             	add    rax,rdx
    3e2c:	48 89 85 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rax
    3e33:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3e3a:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3e3d:	83 f8 03             	cmp    eax,0x3
    3e40:	0f 85 05 01 00 00    	jne    3f4b <ip4_icmp_decode+0x420>
    3e46:	bf 00 00 00 00       	mov    edi,0x0
    3e4b:	e8 e0 e9 ff ff       	call   2830 <time@plt>
    3e50:	48 89 c2             	mov    rdx,rax
    3e53:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3e5a:	48 89 50 48          	mov    QWORD PTR [rax+0x48],rdx
    3e5e:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3e65:	48 8b 50 48          	mov    rdx,QWORD PTR [rax+0x48]
    3e69:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3e70:	48 8b 48 28          	mov    rcx,QWORD PTR [rax+0x28]
    3e74:	48 89 d0             	mov    rax,rdx
    3e77:	48 29 c8             	sub    rax,rcx
    3e7a:	48 3d e2 b4 04 00    	cmp    rax,0x4b4e2
    3e80:	0f 87 c2 00 00 00    	ja     3f48 <ip4_icmp_decode+0x41d>
    3e86:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    3e8d:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3e94:	48 89 c6             	mov    rsi,rax
    3e97:	48 8d 3d 4a 85 00 00 	lea    rdi,[rip+0x854a]        # c3e8 <_IO_stdin_used+0x3e8>
    3e9e:	b8 00 00 00 00       	mov    eax,0x0
    3ea3:	e8 b8 e5 ff ff       	call   2460 <printf@plt>
    3ea8:	48 8b 05 81 d1 00 00 	mov    rax,QWORD PTR [rip+0xd181]        # 11030 <def_log_file>
    3eaf:	48 8d 35 9c 85 00 00 	lea    rsi,[rip+0x859c]        # c452 <_IO_stdin_used+0x452>
    3eb6:	48 89 c7             	mov    rdi,rax
    3eb9:	e8 72 e6 ff ff       	call   2530 <fopen@plt>
    3ebe:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    3ec5:	b8 00 00 00 00       	mov    eax,0x0
    3eca:	e8 30 f4 ff ff       	call   32ff <get_formated_time>
    3ecf:	48 89 c6             	mov    rsi,rax
    3ed2:	48 8b 8d 10 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xf0]
    3ed9:	48 8b 95 08 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf8]
    3ee0:	48 8d 85 40 ff ff ff 	lea    rax,[rbp-0xc0]
    3ee7:	49 89 f0             	mov    r8,rsi
    3eea:	48 8d 35 67 85 00 00 	lea    rsi,[rip+0x8567]        # c458 <_IO_stdin_used+0x458>
    3ef1:	48 89 c7             	mov    rdi,rax
    3ef4:	b8 00 00 00 00       	mov    eax,0x0
    3ef9:	e8 e2 e6 ff ff       	call   25e0 <sprintf@plt>
    3efe:	48 8b 95 38 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xc8]
    3f05:	48 8d 85 40 ff ff ff 	lea    rax,[rbp-0xc0]
    3f0c:	48 89 d6             	mov    rsi,rdx
    3f0f:	48 89 c7             	mov    rdi,rax
    3f12:	e8 39 e7 ff ff       	call   2650 <fputs@plt>
    3f17:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
    3f1e:	48 89 c7             	mov    rdi,rax
    3f21:	e8 4a e8 ff ff       	call   2770 <fclose@plt>
    3f26:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3f2d:	48 83 c0 28          	add    rax,0x28
    3f31:	ba 28 00 00 00       	mov    edx,0x28
    3f36:	be 00 00 00 00       	mov    esi,0x0
    3f3b:	48 89 c7             	mov    rdi,rax
    3f3e:	e8 2d e5 ff ff       	call   2470 <memset@plt>
    3f43:	eb 07                	jmp    3f4c <ip4_icmp_decode+0x421>
    3f45:	90                   	nop
    3f46:	eb 04                	jmp    3f4c <ip4_icmp_decode+0x421>
    3f48:	90                   	nop
    3f49:	eb 01                	jmp    3f4c <ip4_icmp_decode+0x421>
    3f4b:	90                   	nop
    3f4c:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3f53:	c7 40 2c 80 00 00 00 	mov    DWORD PTR [rax+0x2c],0x80
    3f5a:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3f61:	48 89 c7             	mov    rdi,rax
    3f64:	e8 dc 23 00 00       	call   6345 <rulemgr>
    3f69:	0f b6 05 f4 5f 10 00 	movzx  eax,BYTE PTR [rip+0x105ff4]        # 109f64 <packet_print>
    3f70:	84 c0                	test   al,al
    3f72:	0f 84 e0 03 00 00    	je     4358 <ip4_icmp_decode+0x82d>
    3f78:	48 8d 35 81 83 00 00 	lea    rsi,[rip+0x8381]        # c300 <_IO_stdin_used+0x300>
    3f7f:	48 8d 3d 80 83 00 00 	lea    rdi,[rip+0x8380]        # c306 <_IO_stdin_used+0x306>
    3f86:	b8 00 00 00 00       	mov    eax,0x0
    3f8b:	e8 d0 e4 ff ff       	call   2460 <printf@plt>
    3f90:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    3f97:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3f9e:	48 89 c6             	mov    rsi,rax
    3fa1:	48 8d 3d 20 85 00 00 	lea    rdi,[rip+0x8520]        # c4c8 <_IO_stdin_used+0x4c8>
    3fa8:	b8 00 00 00 00       	mov    eax,0x0
    3fad:	e8 ae e4 ff ff       	call   2460 <printf@plt>
    3fb2:	48 8d 3d 1e 85 00 00 	lea    rdi,[rip+0x851e]        # c4d7 <_IO_stdin_used+0x4d7>
    3fb9:	b8 00 00 00 00       	mov    eax,0x0
    3fbe:	e8 9d e4 ff ff       	call   2460 <printf@plt>
    3fc3:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    3fca:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3fcd:	0f b6 c0             	movzx  eax,al
    3fd0:	83 f8 0e             	cmp    eax,0xe
    3fd3:	0f 87 46 03 00 00    	ja     431f <ip4_icmp_decode+0x7f4>
    3fd9:	89 c0                	mov    eax,eax
    3fdb:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    3fe2:	00 
    3fe3:	48 8d 05 f6 88 00 00 	lea    rax,[rip+0x88f6]        # c8e0 <_IO_stdin_used+0x8e0>
    3fea:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    3fed:	48 98                	cdqe   
    3fef:	48 8d 15 ea 88 00 00 	lea    rdx,[rip+0x88ea]        # c8e0 <_IO_stdin_used+0x8e0>
    3ff6:	48 01 d0             	add    rax,rdx
    3ff9:	3e ff e0             	notrack jmp rax
    3ffc:	48 8d 3d db 84 00 00 	lea    rdi,[rip+0x84db]        # c4de <_IO_stdin_used+0x4de>
    4003:	e8 a8 e4 ff ff       	call   24b0 <puts@plt>
    4008:	e9 33 03 00 00       	jmp    4340 <ip4_icmp_decode+0x815>
    400d:	48 8d 3d d6 84 00 00 	lea    rdi,[rip+0x84d6]        # c4ea <_IO_stdin_used+0x4ea>
    4014:	b8 00 00 00 00       	mov    eax,0x0
    4019:	e8 42 e4 ff ff       	call   2460 <printf@plt>
    401e:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4025:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4029:	0f b6 c0             	movzx  eax,al
    402c:	83 f8 0f             	cmp    eax,0xf
    402f:	0f 87 1e 01 00 00    	ja     4153 <ip4_icmp_decode+0x628>
    4035:	89 c0                	mov    eax,eax
    4037:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    403e:	00 
    403f:	48 8d 05 d6 88 00 00 	lea    rax,[rip+0x88d6]        # c91c <_IO_stdin_used+0x91c>
    4046:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    4049:	48 98                	cdqe   
    404b:	48 8d 15 ca 88 00 00 	lea    rdx,[rip+0x88ca]        # c91c <_IO_stdin_used+0x91c>
    4052:	48 01 d0             	add    rax,rdx
    4055:	3e ff e0             	notrack jmp rax
    4058:	48 8d 3d a5 84 00 00 	lea    rdi,[rip+0x84a5]        # c504 <_IO_stdin_used+0x504>
    405f:	e8 4c e4 ff ff       	call   24b0 <puts@plt>
    4064:	e9 0c 01 00 00       	jmp    4175 <ip4_icmp_decode+0x64a>
    4069:	48 8d 3d ab 84 00 00 	lea    rdi,[rip+0x84ab]        # c51b <_IO_stdin_used+0x51b>
    4070:	e8 3b e4 ff ff       	call   24b0 <puts@plt>
    4075:	e9 fb 00 00 00       	jmp    4175 <ip4_icmp_decode+0x64a>
    407a:	48 8d 3d ae 84 00 00 	lea    rdi,[rip+0x84ae]        # c52f <_IO_stdin_used+0x52f>
    4081:	e8 2a e4 ff ff       	call   24b0 <puts@plt>
    4086:	e9 ea 00 00 00       	jmp    4175 <ip4_icmp_decode+0x64a>
    408b:	48 8d 3d b5 84 00 00 	lea    rdi,[rip+0x84b5]        # c547 <_IO_stdin_used+0x547>
    4092:	e8 19 e4 ff ff       	call   24b0 <puts@plt>
    4097:	e9 d9 00 00 00       	jmp    4175 <ip4_icmp_decode+0x64a>
    409c:	48 8d 3d b8 84 00 00 	lea    rdi,[rip+0x84b8]        # c55b <_IO_stdin_used+0x55b>
    40a3:	e8 08 e4 ff ff       	call   24b0 <puts@plt>
    40a8:	e9 c8 00 00 00       	jmp    4175 <ip4_icmp_decode+0x64a>
    40ad:	48 8d 3d bf 84 00 00 	lea    rdi,[rip+0x84bf]        # c573 <_IO_stdin_used+0x573>
    40b4:	e8 f7 e3 ff ff       	call   24b0 <puts@plt>
    40b9:	e9 b7 00 00 00       	jmp    4175 <ip4_icmp_decode+0x64a>
    40be:	48 8d 3d cb 84 00 00 	lea    rdi,[rip+0x84cb]        # c590 <_IO_stdin_used+0x590>
    40c5:	e8 e6 e3 ff ff       	call   24b0 <puts@plt>
    40ca:	e9 a6 00 00 00       	jmp    4175 <ip4_icmp_decode+0x64a>
    40cf:	48 8d 3d e2 84 00 00 	lea    rdi,[rip+0x84e2]        # c5b8 <_IO_stdin_used+0x5b8>
    40d6:	e8 d5 e3 ff ff       	call   24b0 <puts@plt>
    40db:	e9 95 00 00 00       	jmp    4175 <ip4_icmp_decode+0x64a>
    40e0:	48 8d 3d f1 84 00 00 	lea    rdi,[rip+0x84f1]        # c5d8 <_IO_stdin_used+0x5d8>
    40e7:	e8 c4 e3 ff ff       	call   24b0 <puts@plt>
    40ec:	e9 84 00 00 00       	jmp    4175 <ip4_icmp_decode+0x64a>
    40f1:	48 8d 3d f8 84 00 00 	lea    rdi,[rip+0x84f8]        # c5f0 <_IO_stdin_used+0x5f0>
    40f8:	e8 b3 e3 ff ff       	call   24b0 <puts@plt>
    40fd:	eb 76                	jmp    4175 <ip4_icmp_decode+0x64a>
    40ff:	48 8d 3d 12 85 00 00 	lea    rdi,[rip+0x8512]        # c618 <_IO_stdin_used+0x618>
    4106:	e8 a5 e3 ff ff       	call   24b0 <puts@plt>
    410b:	eb 68                	jmp    4175 <ip4_icmp_decode+0x64a>
    410d:	48 8d 3d 2c 85 00 00 	lea    rdi,[rip+0x852c]        # c640 <_IO_stdin_used+0x640>
    4114:	e8 97 e3 ff ff       	call   24b0 <puts@plt>
    4119:	eb 5a                	jmp    4175 <ip4_icmp_decode+0x64a>
    411b:	48 8d 3d 3d 85 00 00 	lea    rdi,[rip+0x853d]        # c65f <_IO_stdin_used+0x65f>
    4122:	e8 89 e3 ff ff       	call   24b0 <puts@plt>
    4127:	eb 4c                	jmp    4175 <ip4_icmp_decode+0x64a>
    4129:	48 8d 3d 50 85 00 00 	lea    rdi,[rip+0x8550]        # c680 <_IO_stdin_used+0x680>
    4130:	e8 7b e3 ff ff       	call   24b0 <puts@plt>
    4135:	eb 3e                	jmp    4175 <ip4_icmp_decode+0x64a>
    4137:	48 8d 3d 6f 85 00 00 	lea    rdi,[rip+0x856f]        # c6ad <_IO_stdin_used+0x6ad>
    413e:	e8 6d e3 ff ff       	call   24b0 <puts@plt>
    4143:	eb 30                	jmp    4175 <ip4_icmp_decode+0x64a>
    4145:	48 8d 3d 84 85 00 00 	lea    rdi,[rip+0x8584]        # c6d0 <_IO_stdin_used+0x6d0>
    414c:	e8 5f e3 ff ff       	call   24b0 <puts@plt>
    4151:	eb 22                	jmp    4175 <ip4_icmp_decode+0x64a>
    4153:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    415a:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    415e:	0f b6 c0             	movzx  eax,al
    4161:	89 c6                	mov    esi,eax
    4163:	48 8d 3d 85 85 00 00 	lea    rdi,[rip+0x8585]        # c6ef <_IO_stdin_used+0x6ef>
    416a:	b8 00 00 00 00       	mov    eax,0x0
    416f:	e8 ec e2 ff ff       	call   2460 <printf@plt>
    4174:	90                   	nop
    4175:	e9 c6 01 00 00       	jmp    4340 <ip4_icmp_decode+0x815>
    417a:	48 8d 3d 87 85 00 00 	lea    rdi,[rip+0x8587]        # c708 <_IO_stdin_used+0x708>
    4181:	e8 2a e3 ff ff       	call   24b0 <puts@plt>
    4186:	e9 b5 01 00 00       	jmp    4340 <ip4_icmp_decode+0x815>
    418b:	48 8d 3d 95 85 00 00 	lea    rdi,[rip+0x8595]        # c727 <_IO_stdin_used+0x727>
    4192:	b8 00 00 00 00       	mov    eax,0x0
    4197:	e8 c4 e2 ff ff       	call   2460 <printf@plt>
    419c:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    41a3:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    41a7:	0f b6 c0             	movzx  eax,al
    41aa:	83 f8 03             	cmp    eax,0x3
    41ad:	74 44                	je     41f3 <ip4_icmp_decode+0x6c8>
    41af:	83 f8 03             	cmp    eax,0x3
    41b2:	7f 4d                	jg     4201 <ip4_icmp_decode+0x6d6>
    41b4:	83 f8 02             	cmp    eax,0x2
    41b7:	74 2c                	je     41e5 <ip4_icmp_decode+0x6ba>
    41b9:	83 f8 02             	cmp    eax,0x2
    41bc:	7f 43                	jg     4201 <ip4_icmp_decode+0x6d6>
    41be:	85 c0                	test   eax,eax
    41c0:	74 07                	je     41c9 <ip4_icmp_decode+0x69e>
    41c2:	83 f8 01             	cmp    eax,0x1
    41c5:	74 10                	je     41d7 <ip4_icmp_decode+0x6ac>
    41c7:	eb 38                	jmp    4201 <ip4_icmp_decode+0x6d6>
    41c9:	48 8d 3d 63 85 00 00 	lea    rdi,[rip+0x8563]        # c733 <_IO_stdin_used+0x733>
    41d0:	e8 db e2 ff ff       	call   24b0 <puts@plt>
    41d5:	eb 4c                	jmp    4223 <ip4_icmp_decode+0x6f8>
    41d7:	48 8d 3d 6d 85 00 00 	lea    rdi,[rip+0x856d]        # c74b <_IO_stdin_used+0x74b>
    41de:	e8 cd e2 ff ff       	call   24b0 <puts@plt>
    41e3:	eb 3e                	jmp    4223 <ip4_icmp_decode+0x6f8>
    41e5:	48 8d 3d 74 85 00 00 	lea    rdi,[rip+0x8574]        # c760 <_IO_stdin_used+0x760>
    41ec:	e8 bf e2 ff ff       	call   24b0 <puts@plt>
    41f1:	eb 30                	jmp    4223 <ip4_icmp_decode+0x6f8>
    41f3:	48 8d 3d 86 85 00 00 	lea    rdi,[rip+0x8586]        # c780 <_IO_stdin_used+0x780>
    41fa:	e8 b1 e2 ff ff       	call   24b0 <puts@plt>
    41ff:	eb 22                	jmp    4223 <ip4_icmp_decode+0x6f8>
    4201:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4208:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    420c:	0f b6 c0             	movzx  eax,al
    420f:	89 c6                	mov    esi,eax
    4211:	48 8d 3d d7 84 00 00 	lea    rdi,[rip+0x84d7]        # c6ef <_IO_stdin_used+0x6ef>
    4218:	b8 00 00 00 00       	mov    eax,0x0
    421d:	e8 3e e2 ff ff       	call   2460 <printf@plt>
    4222:	90                   	nop
    4223:	e9 18 01 00 00       	jmp    4340 <ip4_icmp_decode+0x815>
    4228:	48 8d 3d 6e 85 00 00 	lea    rdi,[rip+0x856e]        # c79d <_IO_stdin_used+0x79d>
    422f:	e8 7c e2 ff ff       	call   24b0 <puts@plt>
    4234:	e9 07 01 00 00       	jmp    4340 <ip4_icmp_decode+0x815>
    4239:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4240:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4244:	84 c0                	test   al,al
    4246:	75 16                	jne    425e <ip4_icmp_decode+0x733>
    4248:	48 8d 3d 61 85 00 00 	lea    rdi,[rip+0x8561]        # c7b0 <_IO_stdin_used+0x7b0>
    424f:	b8 00 00 00 00       	mov    eax,0x0
    4254:	e8 07 e2 ff ff       	call   2460 <printf@plt>
    4259:	e9 e2 00 00 00       	jmp    4340 <ip4_icmp_decode+0x815>
    425e:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4265:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4269:	0f b6 c0             	movzx  eax,al
    426c:	89 c6                	mov    esi,eax
    426e:	48 8d 3d 7b 85 00 00 	lea    rdi,[rip+0x857b]        # c7f0 <_IO_stdin_used+0x7f0>
    4275:	b8 00 00 00 00       	mov    eax,0x0
    427a:	e8 e1 e1 ff ff       	call   2460 <printf@plt>
    427f:	e9 bc 00 00 00       	jmp    4340 <ip4_icmp_decode+0x815>
    4284:	48 8d 3d 92 85 00 00 	lea    rdi,[rip+0x8592]        # c81d <_IO_stdin_used+0x81d>
    428b:	e8 20 e2 ff ff       	call   24b0 <puts@plt>
    4290:	e9 ab 00 00 00       	jmp    4340 <ip4_icmp_decode+0x815>
    4295:	48 8d 3d 98 85 00 00 	lea    rdi,[rip+0x8598]        # c834 <_IO_stdin_used+0x834>
    429c:	b8 00 00 00 00       	mov    eax,0x0
    42a1:	e8 ba e1 ff ff       	call   2460 <printf@plt>
    42a6:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    42ad:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    42b1:	84 c0                	test   al,al
    42b3:	75 0e                	jne    42c3 <ip4_icmp_decode+0x798>
    42b5:	48 8d 3d 8f 85 00 00 	lea    rdi,[rip+0x858f]        # c84b <_IO_stdin_used+0x84b>
    42bc:	e8 ef e1 ff ff       	call   24b0 <puts@plt>
    42c1:	eb 7d                	jmp    4340 <ip4_icmp_decode+0x815>
    42c3:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    42ca:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    42ce:	3c 01                	cmp    al,0x1
    42d0:	75 0e                	jne    42e0 <ip4_icmp_decode+0x7b5>
    42d2:	48 8d 3d 8f 85 00 00 	lea    rdi,[rip+0x858f]        # c868 <_IO_stdin_used+0x868>
    42d9:	e8 d2 e1 ff ff       	call   24b0 <puts@plt>
    42de:	eb 60                	jmp    4340 <ip4_icmp_decode+0x815>
    42e0:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    42e7:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    42eb:	0f b6 c0             	movzx  eax,al
    42ee:	89 c6                	mov    esi,eax
    42f0:	48 8d 3d 98 85 00 00 	lea    rdi,[rip+0x8598]        # c88f <_IO_stdin_used+0x88f>
    42f7:	b8 00 00 00 00       	mov    eax,0x0
    42fc:	e8 5f e1 ff ff       	call   2460 <printf@plt>
    4301:	eb 3d                	jmp    4340 <ip4_icmp_decode+0x815>
    4303:	48 8d 3d 9b 85 00 00 	lea    rdi,[rip+0x859b]        # c8a5 <_IO_stdin_used+0x8a5>
    430a:	e8 a1 e1 ff ff       	call   24b0 <puts@plt>
    430f:	eb 2f                	jmp    4340 <ip4_icmp_decode+0x815>
    4311:	48 8d 3d a0 85 00 00 	lea    rdi,[rip+0x85a0]        # c8b8 <_IO_stdin_used+0x8b8>
    4318:	e8 93 e1 ff ff       	call   24b0 <puts@plt>
    431d:	eb 21                	jmp    4340 <ip4_icmp_decode+0x815>
    431f:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4326:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4329:	0f b6 c0             	movzx  eax,al
    432c:	89 c6                	mov    esi,eax
    432e:	48 8d 3d 94 85 00 00 	lea    rdi,[rip+0x8594]        # c8c9 <_IO_stdin_used+0x8c9>
    4335:	b8 00 00 00 00       	mov    eax,0x0
    433a:	e8 21 e1 ff ff       	call   2460 <printf@plt>
    433f:	90                   	nop
    4340:	48 8d 35 4e 80 00 00 	lea    rsi,[rip+0x804e]        # c395 <_IO_stdin_used+0x395>
    4347:	48 8d 3d b8 7f 00 00 	lea    rdi,[rip+0x7fb8]        # c306 <_IO_stdin_used+0x306>
    434e:	b8 00 00 00 00       	mov    eax,0x0
    4353:	e8 08 e1 ff ff       	call   2460 <printf@plt>
    4358:	90                   	nop
    4359:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    435d:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    4364:	00 00 
    4366:	74 05                	je     436d <ip4_icmp_decode+0x842>
    4368:	e8 93 e3 ff ff       	call   2700 <__stack_chk_fail@plt>
    436d:	c9                   	leave  
    436e:	c3                   	ret    

000000000000436f <ip4_tcp_decode>:
    436f:	f3 0f 1e fa          	endbr64 
    4373:	55                   	push   rbp
    4374:	48 89 e5             	mov    rbp,rsp
    4377:	53                   	push   rbx
    4378:	48 81 ec 88 00 00 00 	sub    rsp,0x88
    437f:	48 89 7d 88          	mov    QWORD PTR [rbp-0x78],rdi
    4383:	48 89 75 80          	mov    QWORD PTR [rbp-0x80],rsi
    4387:	48 89 95 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdx
    438e:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    4392:	48 83 c0 22          	add    rax,0x22
    4396:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    439a:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    439e:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    43a2:	c0 e8 04             	shr    al,0x4
    43a5:	0f b6 c0             	movzx  eax,al
    43a8:	c1 e0 02             	shl    eax,0x2
    43ab:	48 98                	cdqe   
    43ad:	48 8d 50 22          	lea    rdx,[rax+0x22]
    43b1:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    43b5:	48 01 c2             	add    rdx,rax
    43b8:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    43bc:	48 89 10             	mov    QWORD PTR [rax],rdx
    43bf:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    43c3:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    43c6:	89 c2                	mov    edx,eax
    43c8:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    43cc:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    43d0:	c0 e8 04             	shr    al,0x4
    43d3:	0f b6 c0             	movzx  eax,al
    43d6:	c1 e0 02             	shl    eax,0x2
    43d9:	89 c1                	mov    ecx,eax
    43db:	89 d0                	mov    eax,edx
    43dd:	29 c8                	sub    eax,ecx
    43df:	83 e8 22             	sub    eax,0x22
    43e2:	89 c2                	mov    edx,eax
    43e4:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    43e8:	89 50 30             	mov    DWORD PTR [rax+0x30],edx
    43eb:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    43ef:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    43f3:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    43f7:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    43fb:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    43ff:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    4403:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4407:	ba 5c 00 00 00       	mov    edx,0x5c
    440c:	be 01 00 00 00       	mov    esi,0x1
    4411:	48 89 c7             	mov    rdi,rax
    4414:	e8 2b 0a 00 00       	call   4e44 <add_ip_addr_or_inc_counter>
    4419:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    441d:	ba 5c 00 00 00       	mov    edx,0x5c
    4422:	be 00 00 00 00       	mov    esi,0x0
    4427:	48 89 c7             	mov    rdi,rax
    442a:	e8 15 0a 00 00       	call   4e44 <add_ip_addr_or_inc_counter>
    442f:	c7 45 a4 00 00 00 00 	mov    DWORD PTR [rbp-0x5c],0x0
    4436:	c6 45 9f 00          	mov    BYTE PTR [rbp-0x61],0x0
    443a:	c6 45 a0 00          	mov    BYTE PTR [rbp-0x60],0x0
    443e:	c6 45 a1 00          	mov    BYTE PTR [rbp-0x5f],0x0
    4442:	c6 45 a2 00          	mov    BYTE PTR [rbp-0x5e],0x0
    4446:	c6 45 a3 00          	mov    BYTE PTR [rbp-0x5d],0x0
    444a:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    444e:	48 83 c0 60          	add    rax,0x60
    4452:	ba 08 00 00 00       	mov    edx,0x8
    4457:	be 00 00 00 00       	mov    esi,0x0
    445c:	48 89 c7             	mov    rdi,rax
    445f:	e8 0c e0 ff ff       	call   2470 <memset@plt>
    4464:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4468:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    446c:	0f b7 c0             	movzx  eax,ax
    446f:	89 c7                	mov    edi,eax
    4471:	e8 7a e1 ff ff       	call   25f0 <ntohs@plt>
    4476:	0f b7 c0             	movzx  eax,ax
    4479:	89 45 a8             	mov    DWORD PTR [rbp-0x58],eax
    447c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4480:	0f b7 00             	movzx  eax,WORD PTR [rax]
    4483:	0f b7 c0             	movzx  eax,ax
    4486:	89 c7                	mov    edi,eax
    4488:	e8 63 e1 ff ff       	call   25f0 <ntohs@plt>
    448d:	0f b7 c0             	movzx  eax,ax
    4490:	89 45 ac             	mov    DWORD PTR [rbp-0x54],eax
    4493:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4497:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    449b:	0f b7 c0             	movzx  eax,ax
    449e:	89 c7                	mov    edi,eax
    44a0:	e8 4b e1 ff ff       	call   25f0 <ntohs@plt>
    44a5:	0f b7 d0             	movzx  edx,ax
    44a8:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    44ac:	89 50 28             	mov    DWORD PTR [rax+0x28],edx
    44af:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    44b3:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    44b6:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    44b9:	0f b6 05 a4 5a 10 00 	movzx  eax,BYTE PTR [rip+0x105aa4]        # 109f64 <packet_print>
    44c0:	84 c0                	test   al,al
    44c2:	74 4e                	je     4512 <ip4_tcp_decode+0x1a3>
    44c4:	48 8d 35 95 84 00 00 	lea    rsi,[rip+0x8495]        # c960 <_IO_stdin_used+0x960>
    44cb:	48 8d 3d 94 84 00 00 	lea    rdi,[rip+0x8494]        # c966 <_IO_stdin_used+0x966>
    44d2:	b8 00 00 00 00       	mov    eax,0x0
    44d7:	e8 84 df ff ff       	call   2460 <printf@plt>
    44dc:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
    44df:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
    44e3:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    44e6:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    44ea:	41 89 f0             	mov    r8d,esi
    44ed:	48 89 c6             	mov    rsi,rax
    44f0:	48 8d 3d 72 84 00 00 	lea    rdi,[rip+0x8472]        # c969 <_IO_stdin_used+0x969>
    44f7:	b8 00 00 00 00       	mov    eax,0x0
    44fc:	e8 5f df ff ff       	call   2460 <printf@plt>
    4501:	48 8d 3d 76 84 00 00 	lea    rdi,[rip+0x8476]        # c97e <_IO_stdin_used+0x97e>
    4508:	b8 00 00 00 00       	mov    eax,0x0
    450d:	e8 4e df ff ff       	call   2460 <printf@plt>
    4512:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4516:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    451a:	c0 e8 04             	shr    al,0x4
    451d:	83 e0 01             	and    eax,0x1
    4520:	0f b6 c0             	movzx  eax,al
    4523:	89 c7                	mov    edi,eax
    4525:	e8 c6 e0 ff ff       	call   25f0 <ntohs@plt>
    452a:	66 85 c0             	test   ax,ax
    452d:	74 43                	je     4572 <ip4_tcp_decode+0x203>
    452f:	0f b6 05 2e 5a 10 00 	movzx  eax,BYTE PTR [rip+0x105a2e]        # 109f64 <packet_print>
    4536:	84 c0                	test   al,al
    4538:	74 18                	je     4552 <ip4_tcp_decode+0x1e3>
    453a:	48 8d 35 44 84 00 00 	lea    rsi,[rip+0x8444]        # c985 <_IO_stdin_used+0x985>
    4541:	48 8d 3d 43 84 00 00 	lea    rdi,[rip+0x8443]        # c98b <_IO_stdin_used+0x98b>
    4548:	b8 00 00 00 00       	mov    eax,0x0
    454d:	e8 0e df ff ff       	call   2460 <printf@plt>
    4552:	c6 45 a0 01          	mov    BYTE PTR [rbp-0x60],0x1
    4556:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    455a:	48 8d 58 60          	lea    rbx,[rax+0x60]
    455e:	48 89 df             	mov    rdi,rbx
    4561:	e8 5a e0 ff ff       	call   25c0 <strlen@plt>
    4566:	48 01 d8             	add    rax,rbx
    4569:	66 c7 00 41 00       	mov    WORD PTR [rax],0x41
    456e:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    4572:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4576:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    457a:	83 e0 01             	and    eax,0x1
    457d:	0f b6 c0             	movzx  eax,al
    4580:	89 c7                	mov    edi,eax
    4582:	e8 69 e0 ff ff       	call   25f0 <ntohs@plt>
    4587:	66 85 c0             	test   ax,ax
    458a:	74 43                	je     45cf <ip4_tcp_decode+0x260>
    458c:	0f b6 05 d1 59 10 00 	movzx  eax,BYTE PTR [rip+0x1059d1]        # 109f64 <packet_print>
    4593:	84 c0                	test   al,al
    4595:	74 18                	je     45af <ip4_tcp_decode+0x240>
    4597:	48 8d 35 f5 83 00 00 	lea    rsi,[rip+0x83f5]        # c993 <_IO_stdin_used+0x993>
    459e:	48 8d 3d f4 83 00 00 	lea    rdi,[rip+0x83f4]        # c999 <_IO_stdin_used+0x999>
    45a5:	b8 00 00 00 00       	mov    eax,0x0
    45aa:	e8 b1 de ff ff       	call   2460 <printf@plt>
    45af:	c6 45 a2 01          	mov    BYTE PTR [rbp-0x5e],0x1
    45b3:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    45b7:	48 8d 58 60          	lea    rbx,[rax+0x60]
    45bb:	48 89 df             	mov    rdi,rbx
    45be:	e8 fd df ff ff       	call   25c0 <strlen@plt>
    45c3:	48 01 d8             	add    rax,rbx
    45c6:	66 c7 00 46 00       	mov    WORD PTR [rax],0x46
    45cb:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    45cf:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    45d3:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    45d7:	c0 e8 03             	shr    al,0x3
    45da:	83 e0 01             	and    eax,0x1
    45dd:	0f b6 c0             	movzx  eax,al
    45e0:	89 c7                	mov    edi,eax
    45e2:	e8 09 e0 ff ff       	call   25f0 <ntohs@plt>
    45e7:	66 85 c0             	test   ax,ax
    45ea:	74 43                	je     462f <ip4_tcp_decode+0x2c0>
    45ec:	0f b6 05 71 59 10 00 	movzx  eax,BYTE PTR [rip+0x105971]        # 109f64 <packet_print>
    45f3:	84 c0                	test   al,al
    45f5:	74 18                	je     460f <ip4_tcp_decode+0x2a0>
    45f7:	48 8d 35 a3 83 00 00 	lea    rsi,[rip+0x83a3]        # c9a1 <_IO_stdin_used+0x9a1>
    45fe:	48 8d 3d a2 83 00 00 	lea    rdi,[rip+0x83a2]        # c9a7 <_IO_stdin_used+0x9a7>
    4605:	b8 00 00 00 00       	mov    eax,0x0
    460a:	e8 51 de ff ff       	call   2460 <printf@plt>
    460f:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    4613:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4617:	48 8d 58 60          	lea    rbx,[rax+0x60]
    461b:	48 89 df             	mov    rdi,rbx
    461e:	e8 9d df ff ff       	call   25c0 <strlen@plt>
    4623:	48 01 d8             	add    rax,rbx
    4626:	66 c7 00 50 00       	mov    WORD PTR [rax],0x50
    462b:	c6 45 a3 01          	mov    BYTE PTR [rbp-0x5d],0x1
    462f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4633:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4637:	c0 e8 02             	shr    al,0x2
    463a:	83 e0 01             	and    eax,0x1
    463d:	0f b6 c0             	movzx  eax,al
    4640:	89 c7                	mov    edi,eax
    4642:	e8 a9 df ff ff       	call   25f0 <ntohs@plt>
    4647:	66 85 c0             	test   ax,ax
    464a:	74 43                	je     468f <ip4_tcp_decode+0x320>
    464c:	0f b6 05 11 59 10 00 	movzx  eax,BYTE PTR [rip+0x105911]        # 109f64 <packet_print>
    4653:	84 c0                	test   al,al
    4655:	74 18                	je     466f <ip4_tcp_decode+0x300>
    4657:	48 8d 35 51 83 00 00 	lea    rsi,[rip+0x8351]        # c9af <_IO_stdin_used+0x9af>
    465e:	48 8d 3d 50 83 00 00 	lea    rdi,[rip+0x8350]        # c9b5 <_IO_stdin_used+0x9b5>
    4665:	b8 00 00 00 00       	mov    eax,0x0
    466a:	e8 f1 dd ff ff       	call   2460 <printf@plt>
    466f:	c6 45 9f 01          	mov    BYTE PTR [rbp-0x61],0x1
    4673:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4677:	48 8d 58 60          	lea    rbx,[rax+0x60]
    467b:	48 89 df             	mov    rdi,rbx
    467e:	e8 3d df ff ff       	call   25c0 <strlen@plt>
    4683:	48 01 d8             	add    rax,rbx
    4686:	66 c7 00 52 00       	mov    WORD PTR [rax],0x52
    468b:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    468f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4693:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4697:	d0 e8                	shr    al,1
    4699:	83 e0 01             	and    eax,0x1
    469c:	0f b6 c0             	movzx  eax,al
    469f:	89 c7                	mov    edi,eax
    46a1:	e8 4a df ff ff       	call   25f0 <ntohs@plt>
    46a6:	66 85 c0             	test   ax,ax
    46a9:	74 43                	je     46ee <ip4_tcp_decode+0x37f>
    46ab:	0f b6 05 b2 58 10 00 	movzx  eax,BYTE PTR [rip+0x1058b2]        # 109f64 <packet_print>
    46b2:	84 c0                	test   al,al
    46b4:	74 18                	je     46ce <ip4_tcp_decode+0x35f>
    46b6:	48 8d 35 00 83 00 00 	lea    rsi,[rip+0x8300]        # c9bd <_IO_stdin_used+0x9bd>
    46bd:	48 8d 3d ff 82 00 00 	lea    rdi,[rip+0x82ff]        # c9c3 <_IO_stdin_used+0x9c3>
    46c4:	b8 00 00 00 00       	mov    eax,0x0
    46c9:	e8 92 dd ff ff       	call   2460 <printf@plt>
    46ce:	c6 45 a1 01          	mov    BYTE PTR [rbp-0x5f],0x1
    46d2:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    46d6:	48 8d 58 60          	lea    rbx,[rax+0x60]
    46da:	48 89 df             	mov    rdi,rbx
    46dd:	e8 de de ff ff       	call   25c0 <strlen@plt>
    46e2:	48 01 d8             	add    rax,rbx
    46e5:	66 c7 00 53 00       	mov    WORD PTR [rax],0x53
    46ea:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    46ee:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    46f2:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    46f6:	c0 e8 05             	shr    al,0x5
    46f9:	83 e0 01             	and    eax,0x1
    46fc:	0f b6 c0             	movzx  eax,al
    46ff:	89 c7                	mov    edi,eax
    4701:	e8 ea de ff ff       	call   25f0 <ntohs@plt>
    4706:	66 85 c0             	test   ax,ax
    4709:	74 3f                	je     474a <ip4_tcp_decode+0x3db>
    470b:	0f b6 05 52 58 10 00 	movzx  eax,BYTE PTR [rip+0x105852]        # 109f64 <packet_print>
    4712:	84 c0                	test   al,al
    4714:	74 18                	je     472e <ip4_tcp_decode+0x3bf>
    4716:	48 8d 35 ae 82 00 00 	lea    rsi,[rip+0x82ae]        # c9cb <_IO_stdin_used+0x9cb>
    471d:	48 8d 3d ad 82 00 00 	lea    rdi,[rip+0x82ad]        # c9d1 <_IO_stdin_used+0x9d1>
    4724:	b8 00 00 00 00       	mov    eax,0x0
    4729:	e8 32 dd ff ff       	call   2460 <printf@plt>
    472e:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    4732:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4736:	48 8d 58 60          	lea    rbx,[rax+0x60]
    473a:	48 89 df             	mov    rdi,rbx
    473d:	e8 7e de ff ff       	call   25c0 <strlen@plt>
    4742:	48 01 d8             	add    rax,rbx
    4745:	66 c7 00 55 00       	mov    WORD PTR [rax],0x55
    474a:	0f b6 05 13 58 10 00 	movzx  eax,BYTE PTR [rip+0x105813]        # 109f64 <packet_print>
    4751:	84 c0                	test   al,al
    4753:	74 3c                	je     4791 <ip4_tcp_decode+0x422>
    4755:	48 8d 35 04 82 00 00 	lea    rsi,[rip+0x8204]        # c960 <_IO_stdin_used+0x960>
    475c:	48 8d 3d 03 82 00 00 	lea    rdi,[rip+0x8203]        # c966 <_IO_stdin_used+0x966>
    4763:	b8 00 00 00 00       	mov    eax,0x0
    4768:	e8 f3 dc ff ff       	call   2460 <printf@plt>
    476d:	48 8d 3d 65 82 00 00 	lea    rdi,[rip+0x8265]        # c9d9 <_IO_stdin_used+0x9d9>
    4774:	e8 37 dd ff ff       	call   24b0 <puts@plt>
    4779:	48 8d 35 5b 82 00 00 	lea    rsi,[rip+0x825b]        # c9db <_IO_stdin_used+0x9db>
    4780:	48 8d 3d df 81 00 00 	lea    rdi,[rip+0x81df]        # c966 <_IO_stdin_used+0x966>
    4787:	b8 00 00 00 00       	mov    eax,0x0
    478c:	e8 cf dc ff ff       	call   2460 <printf@plt>
    4791:	83 7d a4 03          	cmp    DWORD PTR [rbp-0x5c],0x3
    4795:	7f 06                	jg     479d <ip4_tcp_decode+0x42e>
    4797:	83 7d a4 00          	cmp    DWORD PTR [rbp-0x5c],0x0
    479b:	75 41                	jne    47de <ip4_tcp_decode+0x46f>
    479d:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
    47a0:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
    47a4:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    47a7:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    47ab:	48 8d 0d 29 82 00 00 	lea    rcx,[rip+0x8229]        # c9db <_IO_stdin_used+0x9db>
    47b2:	51                   	push   rcx
    47b3:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
    47b6:	51                   	push   rcx
    47b7:	41 89 f9             	mov    r9d,edi
    47ba:	49 89 f0             	mov    r8,rsi
    47bd:	89 d1                	mov    ecx,edx
    47bf:	48 89 c2             	mov    rdx,rax
    47c2:	48 8d 35 e6 81 00 00 	lea    rsi,[rip+0x81e6]        # c9af <_IO_stdin_used+0x9af>
    47c9:	48 8d 3d 10 82 00 00 	lea    rdi,[rip+0x8210]        # c9e0 <_IO_stdin_used+0x9e0>
    47d0:	b8 00 00 00 00       	mov    eax,0x0
    47d5:	e8 86 dc ff ff       	call   2460 <printf@plt>
    47da:	48 83 c4 10          	add    rsp,0x10
    47de:	0f b6 05 dd 57 10 00 	movzx  eax,BYTE PTR [rip+0x1057dd]        # 109fc2 <use_spi>
    47e5:	84 c0                	test   al,al
    47e7:	0f 84 8c 00 00 00    	je     4879 <ip4_tcp_decode+0x50a>
    47ed:	80 7d a3 00          	cmp    BYTE PTR [rbp-0x5d],0x0
    47f1:	74 1a                	je     480d <ip4_tcp_decode+0x49e>
    47f3:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    47f7:	74 14                	je     480d <ip4_tcp_decode+0x49e>
    47f9:	83 7d a4 02          	cmp    DWORD PTR [rbp-0x5c],0x2
    47fd:	75 0e                	jne    480d <ip4_tcp_decode+0x49e>
    47ff:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4803:	48 89 c7             	mov    rdi,rax
    4806:	e8 c0 44 00 00       	call   8ccb <handle_data_pkt>
    480b:	eb 6c                	jmp    4879 <ip4_tcp_decode+0x50a>
    480d:	80 7d a2 00          	cmp    BYTE PTR [rbp-0x5e],0x0
    4811:	74 14                	je     4827 <ip4_tcp_decode+0x4b8>
    4813:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4817:	74 0e                	je     4827 <ip4_tcp_decode+0x4b8>
    4819:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    481d:	48 89 c7             	mov    rdi,rax
    4820:	e8 99 43 00 00       	call   8bbe <polite_end>
    4825:	eb 52                	jmp    4879 <ip4_tcp_decode+0x50a>
    4827:	80 7d a1 00          	cmp    BYTE PTR [rbp-0x5f],0x0
    482b:	74 14                	je     4841 <ip4_tcp_decode+0x4d2>
    482d:	83 7d a4 01          	cmp    DWORD PTR [rbp-0x5c],0x1
    4831:	75 0e                	jne    4841 <ip4_tcp_decode+0x4d2>
    4833:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4837:	48 89 c7             	mov    rdi,rax
    483a:	e8 f7 3e 00 00       	call   8736 <add_new_conversation>
    483f:	eb 38                	jmp    4879 <ip4_tcp_decode+0x50a>
    4841:	80 7d a1 00          	cmp    BYTE PTR [rbp-0x5f],0x0
    4845:	74 1a                	je     4861 <ip4_tcp_decode+0x4f2>
    4847:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    484b:	74 14                	je     4861 <ip4_tcp_decode+0x4f2>
    484d:	83 7d a4 02          	cmp    DWORD PTR [rbp-0x5c],0x2
    4851:	75 0e                	jne    4861 <ip4_tcp_decode+0x4f2>
    4853:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4857:	48 89 c7             	mov    rdi,rax
    485a:	e8 01 41 00 00       	call   8960 <spi_ud_thw>
    485f:	eb 18                	jmp    4879 <ip4_tcp_decode+0x50a>
    4861:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4865:	74 12                	je     4879 <ip4_tcp_decode+0x50a>
    4867:	83 7d a4 01          	cmp    DWORD PTR [rbp-0x5c],0x1
    486b:	75 0c                	jne    4879 <ip4_tcp_decode+0x50a>
    486d:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4871:	48 89 c7             	mov    rdi,rax
    4874:	e8 aa 41 00 00       	call   8a23 <update_table>
    4879:	80 7d a3 00          	cmp    BYTE PTR [rbp-0x5d],0x0
    487d:	74 17                	je     4896 <ip4_tcp_decode+0x527>
    487f:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4883:	74 11                	je     4896 <ip4_tcp_decode+0x527>
    4885:	83 7d a4 02          	cmp    DWORD PTR [rbp-0x5c],0x2
    4889:	75 0b                	jne    4896 <ip4_tcp_decode+0x527>
    488b:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    488f:	c7 40 68 01 00 00 00 	mov    DWORD PTR [rax+0x68],0x1
    4896:	80 7d 9f 00          	cmp    BYTE PTR [rbp-0x61],0x0
    489a:	0f 84 8f 01 00 00    	je     4a2f <ip4_tcp_decode+0x6c0>
    48a0:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    48a4:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    48a8:	48 89 c7             	mov    rdi,rax
    48ab:	e8 f0 2e 00 00       	call   77a0 <member_exists>
    48b0:	89 45 b0             	mov    DWORD PTR [rbp-0x50],eax
    48b3:	83 7d b0 ff          	cmp    DWORD PTR [rbp-0x50],0xffffffff
    48b7:	0f 84 db 00 00 00    	je     4998 <ip4_tcp_decode+0x629>
    48bd:	8b 45 b0             	mov    eax,DWORD PTR [rbp-0x50]
    48c0:	48 63 d0             	movsxd rdx,eax
    48c3:	48 89 d0             	mov    rax,rdx
    48c6:	48 c1 e0 02          	shl    rax,0x2
    48ca:	48 01 d0             	add    rax,rdx
    48cd:	48 c1 e0 03          	shl    rax,0x3
    48d1:	48 01 d0             	add    rax,rdx
    48d4:	48 c1 e0 04          	shl    rax,0x4
    48d8:	48 8d 15 41 ec 0e 00 	lea    rdx,[rip+0xeec41]        # f3520 <watchlist>
    48df:	48 01 d0             	add    rax,rdx
    48e2:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    48e6:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    48ea:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    48ee:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    48f2:	48 83 c2 08          	add    rdx,0x8
    48f6:	48 89 c6             	mov    rsi,rax
    48f9:	48 89 d7             	mov    rdi,rdx
    48fc:	e8 2f de ff ff       	call   2730 <strcpy@plt>
    4901:	bf 00 00 00 00       	mov    edi,0x0
    4906:	e8 25 df ff ff       	call   2830 <time@plt>
    490b:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    490f:	8b 92 48 01 00 00    	mov    edx,DWORD PTR [rdx+0x148]
    4915:	8d 72 01             	lea    esi,[rdx+0x1]
    4918:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    491c:	89 b1 48 01 00 00    	mov    DWORD PTR [rcx+0x148],esi
    4922:	48 89 c1             	mov    rcx,rax
    4925:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4929:	89 d2                	mov    edx,edx
    492b:	48 83 c2 28          	add    rdx,0x28
    492f:	48 89 4c d0 10       	mov    QWORD PTR [rax+rdx*8+0x10],rcx
    4934:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4938:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    493e:	83 f8 1d             	cmp    eax,0x1d
    4941:	0f 86 e8 00 00 00    	jbe    4a2f <ip4_tcp_decode+0x6c0>
    4947:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    494b:	c7 80 48 01 00 00 1e 	mov    DWORD PTR [rax+0x148],0x1e
    4952:	00 00 00 
    4955:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4959:	48 89 c7             	mov    rdi,rax
    495c:	e8 fd 29 00 00       	call   735e <tcp_rst_portscan_detect>
    4961:	84 c0                	test   al,al
    4963:	0f 84 c6 00 00 00    	je     4a2f <ip4_tcp_decode+0x6c0>
    4969:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    496d:	c7 80 48 01 00 00 00 	mov    DWORD PTR [rax+0x148],0x0
    4974:	00 00 00 
    4977:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    497b:	48 05 50 01 00 00    	add    rax,0x150
    4981:	ba f0 00 00 00       	mov    edx,0xf0
    4986:	be 00 00 00 00       	mov    esi,0x0
    498b:	48 89 c7             	mov    rdi,rax
    498e:	e8 dd da ff ff       	call   2470 <memset@plt>
    4993:	e9 97 00 00 00       	jmp    4a2f <ip4_tcp_decode+0x6c0>
    4998:	8b 05 7a c6 00 00    	mov    eax,DWORD PTR [rip+0xc67a]        # 11018 <watchlist_num>
    499e:	83 c0 01             	add    eax,0x1
    49a1:	89 05 71 c6 00 00    	mov    DWORD PTR [rip+0xc671],eax        # 11018 <watchlist_num>
    49a7:	8b 05 6b c6 00 00    	mov    eax,DWORD PTR [rip+0xc66b]        # 11018 <watchlist_num>
    49ad:	48 63 d0             	movsxd rdx,eax
    49b0:	48 89 d0             	mov    rax,rdx
    49b3:	48 c1 e0 02          	shl    rax,0x2
    49b7:	48 01 d0             	add    rax,rdx
    49ba:	48 c1 e0 03          	shl    rax,0x3
    49be:	48 01 d0             	add    rax,rdx
    49c1:	48 c1 e0 04          	shl    rax,0x4
    49c5:	48 8d 15 54 eb 0e 00 	lea    rdx,[rip+0xeeb54]        # f3520 <watchlist>
    49cc:	48 01 d0             	add    rax,rdx
    49cf:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    49d3:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    49d7:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    49db:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    49df:	48 83 c2 08          	add    rdx,0x8
    49e3:	48 89 c6             	mov    rsi,rax
    49e6:	48 89 d7             	mov    rdi,rdx
    49e9:	e8 42 dd ff ff       	call   2730 <strcpy@plt>
    49ee:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    49f2:	c7 80 48 01 00 00 00 	mov    DWORD PTR [rax+0x148],0x0
    49f9:	00 00 00 
    49fc:	bf 00 00 00 00       	mov    edi,0x0
    4a01:	e8 2a de ff ff       	call   2830 <time@plt>
    4a06:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    4a0a:	8b 92 48 01 00 00    	mov    edx,DWORD PTR [rdx+0x148]
    4a10:	8d 72 01             	lea    esi,[rdx+0x1]
    4a13:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    4a17:	89 b1 48 01 00 00    	mov    DWORD PTR [rcx+0x148],esi
    4a1d:	48 89 c1             	mov    rcx,rax
    4a20:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4a24:	89 d2                	mov    edx,edx
    4a26:	48 83 c2 28          	add    rdx,0x28
    4a2a:	48 89 4c d0 10       	mov    QWORD PTR [rax+rdx*8+0x10],rcx
    4a2f:	8b 05 53 c6 00 00    	mov    eax,DWORD PTR [rip+0xc653]        # 11088 <strict_nmap_host_alive_check>
    4a35:	83 f8 01             	cmp    eax,0x1
    4a38:	0f 85 f6 00 00 00    	jne    4b34 <ip4_tcp_decode+0x7c5>
    4a3e:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4a42:	74 0c                	je     4a50 <ip4_tcp_decode+0x6e1>
    4a44:	83 7d a8 50          	cmp    DWORD PTR [rbp-0x58],0x50
    4a48:	74 26                	je     4a70 <ip4_tcp_decode+0x701>
    4a4a:	83 7d ac 50          	cmp    DWORD PTR [rbp-0x54],0x50
    4a4e:	74 20                	je     4a70 <ip4_tcp_decode+0x701>
    4a50:	80 7d a1 00          	cmp    BYTE PTR [rbp-0x5f],0x0
    4a54:	0f 84 da 00 00 00    	je     4b34 <ip4_tcp_decode+0x7c5>
    4a5a:	81 7d a8 bb 01 00 00 	cmp    DWORD PTR [rbp-0x58],0x1bb
    4a61:	74 0d                	je     4a70 <ip4_tcp_decode+0x701>
    4a63:	81 7d ac bb 01 00 00 	cmp    DWORD PTR [rbp-0x54],0x1bb
    4a6a:	0f 85 c4 00 00 00    	jne    4b34 <ip4_tcp_decode+0x7c5>
    4a70:	8b 45 a8             	mov    eax,DWORD PTR [rbp-0x58]
    4a73:	3b 45 ac             	cmp    eax,DWORD PTR [rbp-0x54]
    4a76:	76 0a                	jbe    4a82 <ip4_tcp_decode+0x713>
    4a78:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4a7c:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    4a80:	eb 08                	jmp    4a8a <ip4_tcp_decode+0x71b>
    4a82:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4a86:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    4a8a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4a8e:	48 89 c7             	mov    rdi,rax
    4a91:	e8 0a 2d 00 00       	call   77a0 <member_exists>
    4a96:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
    4a99:	83 7d b4 ff          	cmp    DWORD PTR [rbp-0x4c],0xffffffff
    4a9d:	0f 84 91 00 00 00    	je     4b34 <ip4_tcp_decode+0x7c5>
    4aa3:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    4aa6:	48 63 d0             	movsxd rdx,eax
    4aa9:	48 89 d0             	mov    rax,rdx
    4aac:	48 c1 e0 02          	shl    rax,0x2
    4ab0:	48 01 d0             	add    rax,rdx
    4ab3:	48 c1 e0 03          	shl    rax,0x3
    4ab7:	48 01 d0             	add    rax,rdx
    4aba:	48 c1 e0 04          	shl    rax,0x4
    4abe:	48 8d 15 5b ea 0e 00 	lea    rdx,[rip+0xeea5b]        # f3520 <watchlist>
    4ac5:	48 01 d0             	add    rax,rdx
    4ac8:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    4acc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4ad0:	8b 40 34             	mov    eax,DWORD PTR [rax+0x34]
    4ad3:	85 c0                	test   eax,eax
    4ad5:	75 2a                	jne    4b01 <ip4_tcp_decode+0x792>
    4ad7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4adb:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4ade:	83 f8 01             	cmp    eax,0x1
    4ae1:	75 1e                	jne    4b01 <ip4_tcp_decode+0x792>
    4ae3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4ae7:	c7 40 34 01 00 00 00 	mov    DWORD PTR [rax+0x34],0x1
    4aee:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4af2:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4af5:	8d 50 01             	lea    edx,[rax+0x1]
    4af8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4afc:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    4aff:	eb 33                	jmp    4b34 <ip4_tcp_decode+0x7c5>
    4b01:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b05:	8b 40 38             	mov    eax,DWORD PTR [rax+0x38]
    4b08:	85 c0                	test   eax,eax
    4b0a:	75 28                	jne    4b34 <ip4_tcp_decode+0x7c5>
    4b0c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b10:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4b13:	83 f8 02             	cmp    eax,0x2
    4b16:	75 1c                	jne    4b34 <ip4_tcp_decode+0x7c5>
    4b18:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b1c:	c7 40 38 01 00 00 00 	mov    DWORD PTR [rax+0x38],0x1
    4b23:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b27:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4b2a:	8d 50 01             	lea    edx,[rax+0x1]
    4b2d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b31:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    4b34:	0f b6 05 29 54 10 00 	movzx  eax,BYTE PTR [rip+0x105429]        # 109f64 <packet_print>
    4b3b:	84 c0                	test   al,al
    4b3d:	74 3a                	je     4b79 <ip4_tcp_decode+0x80a>
    4b3f:	80 7d a3 00          	cmp    BYTE PTR [rbp-0x5d],0x0
    4b43:	74 34                	je     4b79 <ip4_tcp_decode+0x80a>
    4b45:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4b49:	74 2e                	je     4b79 <ip4_tcp_decode+0x80a>
    4b4b:	0f b6 45 a2          	movzx  eax,BYTE PTR [rbp-0x5e]
    4b4f:	83 f0 01             	xor    eax,0x1
    4b52:	84 c0                	test   al,al
    4b54:	74 23                	je     4b79 <ip4_tcp_decode+0x80a>
    4b56:	83 7d a8 50          	cmp    DWORD PTR [rbp-0x58],0x50
    4b5a:	74 06                	je     4b62 <ip4_tcp_decode+0x7f3>
    4b5c:	83 7d ac 50          	cmp    DWORD PTR [rbp-0x54],0x50
    4b60:	75 17                	jne    4b79 <ip4_tcp_decode+0x80a>
    4b62:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    4b66:	48 8d 50 42          	lea    rdx,[rax+0x42]
    4b6a:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4b6e:	48 89 c6             	mov    rsi,rax
    4b71:	48 89 d7             	mov    rdi,rdx
    4b74:	e8 ed 35 00 00       	call   8166 <http_disect>
    4b79:	83 7d a8 15          	cmp    DWORD PTR [rbp-0x58],0x15
    4b7d:	74 06                	je     4b85 <ip4_tcp_decode+0x816>
    4b7f:	83 7d ac 15          	cmp    DWORD PTR [rbp-0x54],0x15
    4b83:	75 2d                	jne    4bb2 <ip4_tcp_decode+0x843>
    4b85:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4b89:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    4b8d:	c0 e8 04             	shr    al,0x4
    4b90:	0f b6 c0             	movzx  eax,al
    4b93:	c1 e0 02             	shl    eax,0x2
    4b96:	48 98                	cdqe   
    4b98:	48 8d 50 22          	lea    rdx,[rax+0x22]
    4b9c:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    4ba0:	48 01 c2             	add    rdx,rax
    4ba3:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4ba7:	48 89 c6             	mov    rsi,rax
    4baa:	48 89 d7             	mov    rdi,rdx
    4bad:	e8 9f 37 00 00       	call   8351 <ftp_disect>
    4bb2:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    4bb9:	8b 50 14             	mov    edx,DWORD PTR [rax+0x14]
    4bbc:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4bc0:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    4bc4:	c0 e8 04             	shr    al,0x4
    4bc7:	0f b6 c0             	movzx  eax,al
    4bca:	c1 e0 02             	shl    eax,0x2
    4bcd:	89 c1                	mov    ecx,eax
    4bcf:	89 d0                	mov    eax,edx
    4bd1:	29 c8                	sub    eax,ecx
    4bd3:	8d 50 de             	lea    edx,[rax-0x22]
    4bd6:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4bda:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    4bdd:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4be1:	48 89 c7             	mov    rdi,rax
    4be4:	e8 5c 17 00 00       	call   6345 <rulemgr>
    4be9:	90                   	nop
    4bea:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    4bee:	c9                   	leave  
    4bef:	c3                   	ret    

0000000000004bf0 <ip4_udp_decode>:
    4bf0:	f3 0f 1e fa          	endbr64 
    4bf4:	55                   	push   rbp
    4bf5:	48 89 e5             	mov    rbp,rsp
    4bf8:	48 83 ec 30          	sub    rsp,0x30
    4bfc:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    4c00:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    4c04:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    4c08:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4c0c:	48 83 c0 22          	add    rax,0x22
    4c10:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4c14:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4c18:	48 8d 50 2a          	lea    rdx,[rax+0x2a]
    4c1c:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4c20:	48 89 10             	mov    QWORD PTR [rax],rdx
    4c23:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4c27:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    4c2b:	ba 5d 00 00 00       	mov    edx,0x5d
    4c30:	be 01 00 00 00       	mov    esi,0x1
    4c35:	48 89 c7             	mov    rdi,rax
    4c38:	e8 07 02 00 00       	call   4e44 <add_ip_addr_or_inc_counter>
    4c3d:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4c41:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4c45:	ba 5d 00 00 00       	mov    edx,0x5d
    4c4a:	be 00 00 00 00       	mov    esi,0x0
    4c4f:	48 89 c7             	mov    rdi,rax
    4c52:	e8 ed 01 00 00       	call   4e44 <add_ip_addr_or_inc_counter>
    4c57:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4c5b:	0f b7 00             	movzx  eax,WORD PTR [rax]
    4c5e:	0f b7 c0             	movzx  eax,ax
    4c61:	89 c7                	mov    edi,eax
    4c63:	e8 88 d9 ff ff       	call   25f0 <ntohs@plt>
    4c68:	0f b7 c0             	movzx  eax,ax
    4c6b:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
    4c6e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4c72:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    4c76:	0f b7 c0             	movzx  eax,ax
    4c79:	89 c7                	mov    edi,eax
    4c7b:	e8 70 d9 ff ff       	call   25f0 <ntohs@plt>
    4c80:	0f b7 c0             	movzx  eax,ax
    4c83:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    4c86:	0f b6 05 d7 52 10 00 	movzx  eax,BYTE PTR [rip+0x1052d7]        # 109f64 <packet_print>
    4c8d:	84 c0                	test   al,al
    4c8f:	74 5d                	je     4cee <ip4_udp_decode+0xfe>
    4c91:	48 8d 35 88 7d 00 00 	lea    rsi,[rip+0x7d88]        # ca20 <_IO_stdin_used+0xa20>
    4c98:	48 8d 3d 87 7d 00 00 	lea    rdi,[rip+0x7d87]        # ca26 <_IO_stdin_used+0xa26>
    4c9f:	b8 00 00 00 00       	mov    eax,0x0
    4ca4:	e8 b7 d7 ff ff       	call   2460 <printf@plt>
    4ca9:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4cad:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    4cb1:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4cb5:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    4cb9:	8b 75 f4             	mov    esi,DWORD PTR [rbp-0xc]
    4cbc:	8b 55 f0             	mov    edx,DWORD PTR [rbp-0x10]
    4cbf:	41 89 f0             	mov    r8d,esi
    4cc2:	48 89 c6             	mov    rsi,rax
    4cc5:	48 8d 3d 5d 7d 00 00 	lea    rdi,[rip+0x7d5d]        # ca29 <_IO_stdin_used+0xa29>
    4ccc:	b8 00 00 00 00       	mov    eax,0x0
    4cd1:	e8 8a d7 ff ff       	call   2460 <printf@plt>
    4cd6:	48 8d 35 65 7d 00 00 	lea    rsi,[rip+0x7d65]        # ca42 <_IO_stdin_used+0xa42>
    4cdd:	48 8d 3d 42 7d 00 00 	lea    rdi,[rip+0x7d42]        # ca26 <_IO_stdin_used+0xa26>
    4ce4:	b8 00 00 00 00       	mov    eax,0x0
    4ce9:	e8 72 d7 ff ff       	call   2460 <printf@plt>
    4cee:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4cf2:	8b 55 f0             	mov    edx,DWORD PTR [rbp-0x10]
    4cf5:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    4cf8:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4cfc:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
    4cff:	89 50 28             	mov    DWORD PTR [rax+0x28],edx
    4d02:	83 7d f0 35          	cmp    DWORD PTR [rbp-0x10],0x35
    4d06:	74 06                	je     4d0e <ip4_udp_decode+0x11e>
    4d08:	83 7d f4 35          	cmp    DWORD PTR [rbp-0xc],0x35
    4d0c:	75 17                	jne    4d25 <ip4_udp_decode+0x135>
    4d0e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4d12:	48 8d 50 2b          	lea    rdx,[rax+0x2b]
    4d16:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d1a:	48 89 c6             	mov    rsi,rax
    4d1d:	48 89 d7             	mov    rdi,rdx
    4d20:	e8 f3 34 00 00       	call   8218 <dns_disect>
    4d25:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4d29:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    4d2c:	8d 50 d6             	lea    edx,[rax-0x2a]
    4d2f:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d33:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    4d36:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d3a:	48 89 c7             	mov    rdi,rax
    4d3d:	e8 03 16 00 00       	call   6345 <rulemgr>
    4d42:	90                   	nop
    4d43:	c9                   	leave  
    4d44:	c3                   	ret    

0000000000004d45 <ip4_igmp_decode>:
    4d45:	f3 0f 1e fa          	endbr64 
    4d49:	55                   	push   rbp
    4d4a:	48 89 e5             	mov    rbp,rsp
    4d4d:	48 83 ec 60          	sub    rsp,0x60
    4d51:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    4d55:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
    4d59:	48 89 55 a8          	mov    QWORD PTR [rbp-0x58],rdx
    4d5d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4d64:	00 00 
    4d66:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4d6a:	31 c0                	xor    eax,eax
    4d6c:	0f b6 05 f1 51 10 00 	movzx  eax,BYTE PTR [rip+0x1051f1]        # 109f64 <packet_print>
    4d73:	84 c0                	test   al,al
    4d75:	0f 84 b1 00 00 00    	je     4e2c <ip4_igmp_decode+0xe7>
    4d7b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4d7f:	48 83 c0 26          	add    rax,0x26
    4d83:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    4d87:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    4d8b:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    4d8f:	48 89 c6             	mov    rsi,rax
    4d92:	48 8d 3d af 7c 00 00 	lea    rdi,[rip+0x7caf]        # ca48 <_IO_stdin_used+0xa48>
    4d99:	b8 00 00 00 00       	mov    eax,0x0
    4d9e:	e8 bd d6 ff ff       	call   2460 <printf@plt>
    4da3:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4da7:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4daa:	0f b6 c0             	movzx  eax,al
    4dad:	83 f8 11             	cmp    eax,0x11
    4db0:	74 07                	je     4db9 <ip4_igmp_decode+0x74>
    4db2:	83 f8 22             	cmp    eax,0x22
    4db5:	74 10                	je     4dc7 <ip4_igmp_decode+0x82>
    4db7:	eb 54                	jmp    4e0d <ip4_igmp_decode+0xc8>
    4db9:	48 8d 3d 9d 7c 00 00 	lea    rdi,[rip+0x7c9d]        # ca5d <_IO_stdin_used+0xa5d>
    4dc0:	e8 eb d6 ff ff       	call   24b0 <puts@plt>
    4dc5:	eb 66                	jmp    4e2d <ip4_igmp_decode+0xe8>
    4dc7:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4dcb:	48 83 c0 26          	add    rax,0x26
    4dcf:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    4dd3:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4dd7:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    4dda:	89 c7                	mov    edi,eax
    4ddc:	e8 be e2 ff ff       	call   309f <ipv4_ntoa>
    4de1:	48 89 c2             	mov    rdx,rax
    4de4:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    4de8:	48 89 d6             	mov    rsi,rdx
    4deb:	48 89 c7             	mov    rdi,rax
    4dee:	e8 3d d9 ff ff       	call   2730 <strcpy@plt>
    4df3:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    4df7:	48 89 c6             	mov    rsi,rax
    4dfa:	48 8d 3d 77 7c 00 00 	lea    rdi,[rip+0x7c77]        # ca78 <_IO_stdin_used+0xa78>
    4e01:	b8 00 00 00 00       	mov    eax,0x0
    4e06:	e8 55 d6 ff ff       	call   2460 <printf@plt>
    4e0b:	eb 20                	jmp    4e2d <ip4_igmp_decode+0xe8>
    4e0d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4e11:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4e14:	0f b6 c0             	movzx  eax,al
    4e17:	89 c6                	mov    esi,eax
    4e19:	48 8d 3d 8e 7c 00 00 	lea    rdi,[rip+0x7c8e]        # caae <_IO_stdin_used+0xaae>
    4e20:	b8 00 00 00 00       	mov    eax,0x0
    4e25:	e8 36 d6 ff ff       	call   2460 <printf@plt>
    4e2a:	eb 01                	jmp    4e2d <ip4_igmp_decode+0xe8>
    4e2c:	90                   	nop
    4e2d:	90                   	nop
    4e2e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4e32:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    4e39:	00 00 
    4e3b:	74 05                	je     4e42 <ip4_igmp_decode+0xfd>
    4e3d:	e8 be d8 ff ff       	call   2700 <__stack_chk_fail@plt>
    4e42:	c9                   	leave  
    4e43:	c3                   	ret    

0000000000004e44 <add_ip_addr_or_inc_counter>:
    4e44:	f3 0f 1e fa          	endbr64 
    4e48:	55                   	push   rbp
    4e49:	48 89 e5             	mov    rbp,rsp
    4e4c:	48 83 ec 60          	sub    rsp,0x60
    4e50:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    4e54:	89 f0                	mov    eax,esi
    4e56:	89 55 a0             	mov    DWORD PTR [rbp-0x60],edx
    4e59:	88 45 a4             	mov    BYTE PTR [rbp-0x5c],al
    4e5c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4e63:	00 00 
    4e65:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4e69:	31 c0                	xor    eax,eax
    4e6b:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4e6f:	ba 08 00 00 00       	mov    edx,0x8
    4e74:	be 00 00 00 00       	mov    esi,0x0
    4e79:	48 89 c7             	mov    rdi,rax
    4e7c:	e8 ef d5 ff ff       	call   2470 <memset@plt>
    4e81:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    4e85:	ba 1c 00 00 00       	mov    edx,0x1c
    4e8a:	be 00 00 00 00       	mov    esi,0x0
    4e8f:	48 89 c7             	mov    rdi,rax
    4e92:	e8 d9 d5 ff ff       	call   2470 <memset@plt>
    4e97:	48 8b 4d a8          	mov    rcx,QWORD PTR [rbp-0x58]
    4e9b:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4e9f:	ba 18 00 00 00       	mov    edx,0x18
    4ea4:	48 89 ce             	mov    rsi,rcx
    4ea7:	48 89 c7             	mov    rdi,rax
    4eaa:	e8 d1 d8 ff ff       	call   2780 <strncpy@plt>
    4eaf:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    4eb3:	ba 1c 00 00 00       	mov    edx,0x1c
    4eb8:	be 00 00 00 00       	mov    esi,0x0
    4ebd:	48 89 c7             	mov    rdi,rax
    4ec0:	e8 ab d5 ff ff       	call   2470 <memset@plt>
    4ec5:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4ec9:	48 8d 55 c0          	lea    rdx,[rbp-0x40]
    4ecd:	48 83 c2 08          	add    rdx,0x8
    4ed1:	48 89 c6             	mov    rsi,rax
    4ed4:	48 89 d7             	mov    rdi,rdx
    4ed7:	e8 54 d8 ff ff       	call   2730 <strcpy@plt>
    4edc:	0f b6 45 a4          	movzx  eax,BYTE PTR [rbp-0x5c]
    4ee0:	88 45 c0             	mov    BYTE PTR [rbp-0x40],al
    4ee3:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    4ee6:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    4ee9:	48 8d 55 c0          	lea    rdx,[rbp-0x40]
    4eed:	48 8d 45 b8          	lea    rax,[rbp-0x48]
    4ef1:	48 89 d1             	mov    rcx,rdx
    4ef4:	48 8d 15 35 00 00 00 	lea    rdx,[rip+0x35]        # 4f30 <verify_ip_addr>
    4efb:	be 00 00 00 00       	mov    esi,0x0
    4f00:	48 89 c7             	mov    rdi,rax
    4f03:	e8 88 d6 ff ff       	call   2590 <pthread_create@plt>
    4f08:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4f0c:	be 00 00 00 00       	mov    esi,0x0
    4f11:	48 89 c7             	mov    rdi,rax
    4f14:	e8 37 d5 ff ff       	call   2450 <pthread_join@plt>
    4f19:	90                   	nop
    4f1a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4f1e:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    4f25:	00 00 
    4f27:	74 05                	je     4f2e <add_ip_addr_or_inc_counter+0xea>
    4f29:	e8 d2 d7 ff ff       	call   2700 <__stack_chk_fail@plt>
    4f2e:	c9                   	leave  
    4f2f:	c3                   	ret    

0000000000004f30 <verify_ip_addr>:
    4f30:	f3 0f 1e fa          	endbr64 
    4f34:	55                   	push   rbp
    4f35:	48 89 e5             	mov    rbp,rsp
    4f38:	48 83 ec 30          	sub    rsp,0x30
    4f3c:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    4f40:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4f44:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    4f48:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
    4f4f:	e9 c9 00 00 00       	jmp    501d <verify_ip_addr+0xed>
    4f54:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    4f57:	48 63 d0             	movsxd rdx,eax
    4f5a:	48 89 d0             	mov    rax,rdx
    4f5d:	48 c1 e0 02          	shl    rax,0x2
    4f61:	48 01 d0             	add    rax,rdx
    4f64:	48 c1 e0 03          	shl    rax,0x3
    4f68:	48 01 d0             	add    rax,rdx
    4f6b:	48 c1 e0 04          	shl    rax,0x4
    4f6f:	48 8d 15 aa e5 0e 00 	lea    rdx,[rip+0xee5aa]        # f3520 <watchlist>
    4f76:	48 01 d0             	add    rax,rdx
    4f79:	48 8d 50 08          	lea    rdx,[rax+0x8]
    4f7d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4f81:	48 83 c0 08          	add    rax,0x8
    4f85:	48 89 d6             	mov    rsi,rdx
    4f88:	48 89 c7             	mov    rdi,rax
    4f8b:	e8 80 d7 ff ff       	call   2710 <strcmp@plt>
    4f90:	85 c0                	test   eax,eax
    4f92:	0f 85 81 00 00 00    	jne    5019 <verify_ip_addr+0xe9>
    4f98:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    4f9b:	48 63 d0             	movsxd rdx,eax
    4f9e:	48 89 d0             	mov    rax,rdx
    4fa1:	48 c1 e0 02          	shl    rax,0x2
    4fa5:	48 01 d0             	add    rax,rdx
    4fa8:	48 c1 e0 03          	shl    rax,0x3
    4fac:	48 01 d0             	add    rax,rdx
    4faf:	48 c1 e0 04          	shl    rax,0x4
    4fb3:	48 89 c2             	mov    rdx,rax
    4fb6:	48 8d 05 bb e7 0e 00 	lea    rax,[rip+0xee7bb]        # f3778 <watchlist+0x258>
    4fbd:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    4fc0:	8d 48 01             	lea    ecx,[rax+0x1]
    4fc3:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    4fc6:	48 63 d0             	movsxd rdx,eax
    4fc9:	48 89 d0             	mov    rax,rdx
    4fcc:	48 c1 e0 02          	shl    rax,0x2
    4fd0:	48 01 d0             	add    rax,rdx
    4fd3:	48 c1 e0 03          	shl    rax,0x3
    4fd7:	48 01 d0             	add    rax,rdx
    4fda:	48 c1 e0 04          	shl    rax,0x4
    4fde:	48 89 c2             	mov    rdx,rax
    4fe1:	48 8d 05 90 e7 0e 00 	lea    rax,[rip+0xee790]        # f3778 <watchlist+0x258>
    4fe8:	89 0c 02             	mov    DWORD PTR [rdx+rax*1],ecx
    4feb:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    4fee:	48 63 d0             	movsxd rdx,eax
    4ff1:	48 89 d0             	mov    rax,rdx
    4ff4:	48 c1 e0 02          	shl    rax,0x2
    4ff8:	48 01 d0             	add    rax,rdx
    4ffb:	48 c1 e0 03          	shl    rax,0x3
    4fff:	48 01 d0             	add    rax,rdx
    5002:	48 c1 e0 04          	shl    rax,0x4
    5006:	48 8d 15 13 e5 0e 00 	lea    rdx,[rip+0xee513]        # f3520 <watchlist>
    500d:	48 01 d0             	add    rax,rdx
    5010:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    5014:	e9 f5 00 00 00       	jmp    510e <verify_ip_addr+0x1de>
    5019:	83 45 e4 01          	add    DWORD PTR [rbp-0x1c],0x1
    501d:	8b 05 f5 bf 00 00    	mov    eax,DWORD PTR [rip+0xbff5]        # 11018 <watchlist_num>
    5023:	39 45 e4             	cmp    DWORD PTR [rbp-0x1c],eax
    5026:	0f 8e 28 ff ff ff    	jle    4f54 <verify_ip_addr+0x24>
    502c:	bf 90 02 00 00       	mov    edi,0x290
    5031:	e8 ea d4 ff ff       	call   2520 <malloc@plt>
    5036:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    503a:	8b 05 d8 bf 00 00    	mov    eax,DWORD PTR [rip+0xbfd8]        # 11018 <watchlist_num>
    5040:	83 c0 01             	add    eax,0x1
    5043:	89 05 cf bf 00 00    	mov    DWORD PTR [rip+0xbfcf],eax        # 11018 <watchlist_num>
    5049:	8b 05 c9 bf 00 00    	mov    eax,DWORD PTR [rip+0xbfc9]        # 11018 <watchlist_num>
    504f:	48 63 d0             	movsxd rdx,eax
    5052:	48 89 d0             	mov    rax,rdx
    5055:	48 c1 e0 02          	shl    rax,0x2
    5059:	48 01 d0             	add    rax,rdx
    505c:	48 c1 e0 03          	shl    rax,0x3
    5060:	48 01 d0             	add    rax,rdx
    5063:	48 c1 e0 04          	shl    rax,0x4
    5067:	48 89 c1             	mov    rcx,rax
    506a:	48 8d 05 af e4 0e 00 	lea    rax,[rip+0xee4af]        # f3520 <watchlist>
    5071:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    5075:	48 01 c8             	add    rax,rcx
    5078:	48 89 d6             	mov    rsi,rdx
    507b:	ba 52 00 00 00       	mov    edx,0x52
    5080:	48 89 c7             	mov    rdi,rax
    5083:	48 89 d1             	mov    rcx,rdx
    5086:	f3 48 a5             	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
    5089:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    508d:	48 83 c0 08          	add    rax,0x8
    5091:	ba 0f 00 00 00       	mov    edx,0xf
    5096:	be 00 00 00 00       	mov    esi,0x0
    509b:	48 89 c7             	mov    rdi,rax
    509e:	e8 cd d3 ff ff       	call   2470 <memset@plt>
    50a3:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    50a7:	48 8d 48 08          	lea    rcx,[rax+0x8]
    50ab:	8b 05 67 bf 00 00    	mov    eax,DWORD PTR [rip+0xbf67]        # 11018 <watchlist_num>
    50b1:	48 63 d0             	movsxd rdx,eax
    50b4:	48 89 d0             	mov    rax,rdx
    50b7:	48 c1 e0 02          	shl    rax,0x2
    50bb:	48 01 d0             	add    rax,rdx
    50be:	48 c1 e0 03          	shl    rax,0x3
    50c2:	48 01 d0             	add    rax,rdx
    50c5:	48 c1 e0 04          	shl    rax,0x4
    50c9:	48 8d 15 50 e4 0e 00 	lea    rdx,[rip+0xee450]        # f3520 <watchlist>
    50d0:	48 01 d0             	add    rax,rdx
    50d3:	48 83 c0 08          	add    rax,0x8
    50d7:	48 89 ce             	mov    rsi,rcx
    50da:	48 89 c7             	mov    rdi,rax
    50dd:	e8 4e d6 ff ff       	call   2730 <strcpy@plt>
    50e2:	8b 05 30 bf 00 00    	mov    eax,DWORD PTR [rip+0xbf30]        # 11018 <watchlist_num>
    50e8:	48 63 d0             	movsxd rdx,eax
    50eb:	48 89 d0             	mov    rax,rdx
    50ee:	48 c1 e0 02          	shl    rax,0x2
    50f2:	48 01 d0             	add    rax,rdx
    50f5:	48 c1 e0 03          	shl    rax,0x3
    50f9:	48 01 d0             	add    rax,rdx
    50fc:	48 c1 e0 04          	shl    rax,0x4
    5100:	48 8d 15 19 e4 0e 00 	lea    rdx,[rip+0xee419]        # f3520 <watchlist>
    5107:	48 01 d0             	add    rax,rdx
    510a:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    510e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5112:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5115:	84 c0                	test   al,al
    5117:	74 36                	je     514f <verify_ip_addr+0x21f>
    5119:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    511d:	8b 80 80 02 00 00    	mov    eax,DWORD PTR [rax+0x280]
    5123:	8d 50 01             	lea    edx,[rax+0x1]
    5126:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    512a:	89 90 80 02 00 00    	mov    DWORD PTR [rax+0x280],edx
    5130:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5134:	8b 90 88 02 00 00    	mov    edx,DWORD PTR [rax+0x288]
    513a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    513e:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    5141:	01 c2                	add    edx,eax
    5143:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5147:	89 90 88 02 00 00    	mov    DWORD PTR [rax+0x288],edx
    514d:	eb 34                	jmp    5183 <verify_ip_addr+0x253>
    514f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5153:	8b 80 7c 02 00 00    	mov    eax,DWORD PTR [rax+0x27c]
    5159:	8d 50 01             	lea    edx,[rax+0x1]
    515c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5160:	89 90 7c 02 00 00    	mov    DWORD PTR [rax+0x27c],edx
    5166:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    516a:	8b 90 84 02 00 00    	mov    edx,DWORD PTR [rax+0x284]
    5170:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5174:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    5177:	01 c2                	add    edx,eax
    5179:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    517d:	89 90 84 02 00 00    	mov    DWORD PTR [rax+0x284],edx
    5183:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5187:	8b 90 8c 02 00 00    	mov    edx,DWORD PTR [rax+0x28c]
    518d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5191:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    5194:	01 c2                	add    edx,eax
    5196:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    519a:	89 90 8c 02 00 00    	mov    DWORD PTR [rax+0x28c],edx
    51a0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    51a4:	8b 80 7c 02 00 00    	mov    eax,DWORD PTR [rax+0x27c]
    51aa:	8d 14 00             	lea    edx,[rax+rax*1]
    51ad:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    51b1:	89 90 58 02 00 00    	mov    DWORD PTR [rax+0x258],edx
    51b7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    51bb:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    51be:	83 f8 5e             	cmp    eax,0x5e
    51c1:	0f 84 9b 00 00 00    	je     5262 <verify_ip_addr+0x332>
    51c7:	83 f8 5e             	cmp    eax,0x5e
    51ca:	0f 8f cf 00 00 00    	jg     529f <verify_ip_addr+0x36f>
    51d0:	83 f8 5c             	cmp    eax,0x5c
    51d3:	74 0a                	je     51df <verify_ip_addr+0x2af>
    51d5:	83 f8 5d             	cmp    eax,0x5d
    51d8:	74 48                	je     5222 <verify_ip_addr+0x2f2>
    51da:	e9 c0 00 00 00       	jmp    529f <verify_ip_addr+0x36f>
    51df:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    51e3:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    51e6:	84 c0                	test   al,al
    51e8:	74 1c                	je     5206 <verify_ip_addr+0x2d6>
    51ea:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    51ee:	8b 80 5c 02 00 00    	mov    eax,DWORD PTR [rax+0x25c]
    51f4:	8d 50 01             	lea    edx,[rax+0x1]
    51f7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    51fb:	89 90 5c 02 00 00    	mov    DWORD PTR [rax+0x25c],edx
    5201:	e9 d5 00 00 00       	jmp    52db <verify_ip_addr+0x3ab>
    5206:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    520a:	8b 80 68 02 00 00    	mov    eax,DWORD PTR [rax+0x268]
    5210:	8d 50 01             	lea    edx,[rax+0x1]
    5213:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5217:	89 90 68 02 00 00    	mov    DWORD PTR [rax+0x268],edx
    521d:	e9 b9 00 00 00       	jmp    52db <verify_ip_addr+0x3ab>
    5222:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5226:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5229:	84 c0                	test   al,al
    522b:	74 1c                	je     5249 <verify_ip_addr+0x319>
    522d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5231:	8b 80 60 02 00 00    	mov    eax,DWORD PTR [rax+0x260]
    5237:	8d 50 01             	lea    edx,[rax+0x1]
    523a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    523e:	89 90 60 02 00 00    	mov    DWORD PTR [rax+0x260],edx
    5244:	e9 92 00 00 00       	jmp    52db <verify_ip_addr+0x3ab>
    5249:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    524d:	8b 80 6c 02 00 00    	mov    eax,DWORD PTR [rax+0x26c]
    5253:	8d 50 01             	lea    edx,[rax+0x1]
    5256:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    525a:	89 90 6c 02 00 00    	mov    DWORD PTR [rax+0x26c],edx
    5260:	eb 79                	jmp    52db <verify_ip_addr+0x3ab>
    5262:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5266:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5269:	84 c0                	test   al,al
    526b:	74 19                	je     5286 <verify_ip_addr+0x356>
    526d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5271:	8b 80 64 02 00 00    	mov    eax,DWORD PTR [rax+0x264]
    5277:	8d 50 01             	lea    edx,[rax+0x1]
    527a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    527e:	89 90 64 02 00 00    	mov    DWORD PTR [rax+0x264],edx
    5284:	eb 55                	jmp    52db <verify_ip_addr+0x3ab>
    5286:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    528a:	8b 80 70 02 00 00    	mov    eax,DWORD PTR [rax+0x270]
    5290:	8d 50 01             	lea    edx,[rax+0x1]
    5293:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5297:	89 90 70 02 00 00    	mov    DWORD PTR [rax+0x270],edx
    529d:	eb 3c                	jmp    52db <verify_ip_addr+0x3ab>
    529f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    52a3:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    52a6:	84 c0                	test   al,al
    52a8:	74 19                	je     52c3 <verify_ip_addr+0x393>
    52aa:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52ae:	8b 80 74 02 00 00    	mov    eax,DWORD PTR [rax+0x274]
    52b4:	8d 50 01             	lea    edx,[rax+0x1]
    52b7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52bb:	89 90 74 02 00 00    	mov    DWORD PTR [rax+0x274],edx
    52c1:	eb 17                	jmp    52da <verify_ip_addr+0x3aa>
    52c3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52c7:	8b 80 78 02 00 00    	mov    eax,DWORD PTR [rax+0x278]
    52cd:	8d 50 01             	lea    edx,[rax+0x1]
    52d0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52d4:	89 90 78 02 00 00    	mov    DWORD PTR [rax+0x278],edx
    52da:	90                   	nop
    52db:	b8 01 00 00 00       	mov    eax,0x1
    52e0:	c9                   	leave  
    52e1:	c3                   	ret    

00000000000052e2 <ascii_hexdump>:
    52e2:	f3 0f 1e fa          	endbr64 
    52e6:	55                   	push   rbp
    52e7:	48 89 e5             	mov    rbp,rsp
    52ea:	48 83 ec 20          	sub    rsp,0x20
    52ee:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    52f2:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    52f5:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    52fc:	eb 52                	jmp    5350 <ascii_hexdump+0x6e>
    52fe:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5301:	48 63 d0             	movsxd rdx,eax
    5304:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5308:	48 01 d0             	add    rax,rdx
    530b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    530e:	3c 20                	cmp    al,0x20
    5310:	76 30                	jbe    5342 <ascii_hexdump+0x60>
    5312:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5315:	48 63 d0             	movsxd rdx,eax
    5318:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    531c:	48 01 d0             	add    rax,rdx
    531f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5322:	3c 7e                	cmp    al,0x7e
    5324:	77 1c                	ja     5342 <ascii_hexdump+0x60>
    5326:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5329:	48 63 d0             	movsxd rdx,eax
    532c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5330:	48 01 d0             	add    rax,rdx
    5333:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5336:	0f b6 c0             	movzx  eax,al
    5339:	89 c7                	mov    edi,eax
    533b:	e8 a0 d1 ff ff       	call   24e0 <putchar@plt>
    5340:	eb 0a                	jmp    534c <ascii_hexdump+0x6a>
    5342:	bf 2e 00 00 00       	mov    edi,0x2e
    5347:	e8 94 d1 ff ff       	call   24e0 <putchar@plt>
    534c:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    5350:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5353:	3b 45 e4             	cmp    eax,DWORD PTR [rbp-0x1c]
    5356:	7c a6                	jl     52fe <ascii_hexdump+0x1c>
    5358:	bf 0a 00 00 00       	mov    edi,0xa
    535d:	e8 7e d1 ff ff       	call   24e0 <putchar@plt>
    5362:	90                   	nop
    5363:	c9                   	leave  
    5364:	c3                   	ret    

0000000000005365 <stdout_alert>:
    5365:	f3 0f 1e fa          	endbr64 
    5369:	55                   	push   rbp
    536a:	48 89 e5             	mov    rbp,rsp
    536d:	53                   	push   rbx
    536e:	48 81 ec c8 01 00 00 	sub    rsp,0x1c8
    5375:	48 89 bd 48 fe ff ff 	mov    QWORD PTR [rbp-0x1b8],rdi
    537c:	48 89 b5 40 fe ff ff 	mov    QWORD PTR [rbp-0x1c0],rsi
    5383:	89 95 3c fe ff ff    	mov    DWORD PTR [rbp-0x1c4],edx
    5389:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    5390:	00 00 
    5392:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    5396:	31 c0                	xor    eax,eax
    5398:	bf 00 00 00 00       	mov    edi,0x0
    539d:	e8 8e d4 ff ff       	call   2830 <time@plt>
    53a2:	48 89 85 50 fe ff ff 	mov    QWORD PTR [rbp-0x1b0],rax
    53a9:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
    53b0:	48 89 c7             	mov    rdi,rax
    53b3:	e8 38 d4 ff ff       	call   27f0 <localtime@plt>
    53b8:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    53bb:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    53bf:	48 89 8d 60 fe ff ff 	mov    QWORD PTR [rbp-0x1a0],rcx
    53c6:	48 89 9d 68 fe ff ff 	mov    QWORD PTR [rbp-0x198],rbx
    53cd:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    53d1:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    53d5:	48 89 8d 70 fe ff ff 	mov    QWORD PTR [rbp-0x190],rcx
    53dc:	48 89 9d 78 fe ff ff 	mov    QWORD PTR [rbp-0x188],rbx
    53e3:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    53e7:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    53eb:	48 89 8d 80 fe ff ff 	mov    QWORD PTR [rbp-0x180],rcx
    53f2:	48 89 9d 88 fe ff ff 	mov    QWORD PTR [rbp-0x178],rbx
    53f9:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    53fd:	48 89 85 90 fe ff ff 	mov    QWORD PTR [rbp-0x170],rax
    5404:	8b bd 60 fe ff ff    	mov    edi,DWORD PTR [rbp-0x1a0]
    540a:	8b b5 64 fe ff ff    	mov    esi,DWORD PTR [rbp-0x19c]
    5410:	44 8b 8d 68 fe ff ff 	mov    r9d,DWORD PTR [rbp-0x198]
    5417:	44 8b 85 6c fe ff ff 	mov    r8d,DWORD PTR [rbp-0x194]
    541e:	8b 85 70 fe ff ff    	mov    eax,DWORD PTR [rbp-0x190]
    5424:	8d 48 01             	lea    ecx,[rax+0x1]
    5427:	8b 85 74 fe ff ff    	mov    eax,DWORD PTR [rbp-0x18c]
    542d:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    5433:	48 8d 85 a0 fe ff ff 	lea    rax,[rbp-0x160]
    543a:	57                   	push   rdi
    543b:	56                   	push   rsi
    543c:	48 8d 35 83 76 00 00 	lea    rsi,[rip+0x7683]        # cac6 <_IO_stdin_used+0xac6>
    5443:	48 89 c7             	mov    rdi,rax
    5446:	b8 00 00 00 00       	mov    eax,0x0
    544b:	e8 90 d1 ff ff       	call   25e0 <sprintf@plt>
    5450:	48 83 c4 10          	add    rsp,0x10
    5454:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    545b:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    545e:	3d 80 00 00 00       	cmp    eax,0x80
    5463:	75 4e                	jne    54b3 <stdout_alert+0x14e>
    5465:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    546c:	48 8b 78 10          	mov    rdi,QWORD PTR [rax+0x10]
    5470:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    5477:	48 8b 70 08          	mov    rsi,QWORD PTR [rax+0x8]
    547b:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
    5482:	48 8d 88 4c 01 00 00 	lea    rcx,[rax+0x14c]
    5489:	48 8d 95 a0 fe ff ff 	lea    rdx,[rbp-0x160]
    5490:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    5497:	49 89 f9             	mov    r9,rdi
    549a:	49 89 f0             	mov    r8,rsi
    549d:	48 8d 35 3e 76 00 00 	lea    rsi,[rip+0x763e]        # cae2 <_IO_stdin_used+0xae2>
    54a4:	48 89 c7             	mov    rdi,rax
    54a7:	b8 00 00 00 00       	mov    eax,0x0
    54ac:	e8 2f d1 ff ff       	call   25e0 <sprintf@plt>
    54b1:	eb 61                	jmp    5514 <stdout_alert+0x1af>
    54b3:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    54ba:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    54bd:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    54c4:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    54c8:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    54cf:	44 8b 48 24          	mov    r9d,DWORD PTR [rax+0x24]
    54d3:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    54da:	4c 8b 40 08          	mov    r8,QWORD PTR [rax+0x8]
    54de:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
    54e5:	48 8d 88 4c 01 00 00 	lea    rcx,[rax+0x14c]
    54ec:	48 8d 95 a0 fe ff ff 	lea    rdx,[rbp-0x160]
    54f3:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    54fa:	57                   	push   rdi
    54fb:	56                   	push   rsi
    54fc:	48 8d 35 ef 75 00 00 	lea    rsi,[rip+0x75ef]        # caf2 <_IO_stdin_used+0xaf2>
    5503:	48 89 c7             	mov    rdi,rax
    5506:	b8 00 00 00 00       	mov    eax,0x0
    550b:	e8 d0 d0 ff ff       	call   25e0 <sprintf@plt>
    5510:	48 83 c4 10          	add    rsp,0x10
    5514:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    551b:	48 89 c6             	mov    rsi,rax
    551e:	48 8d 3d e3 75 00 00 	lea    rdi,[rip+0x75e3]        # cb08 <_IO_stdin_used+0xb08>
    5525:	b8 00 00 00 00       	mov    eax,0x0
    552a:	e8 31 cf ff ff       	call   2460 <printf@plt>
    552f:	48 8b 05 fa ba 00 00 	mov    rax,QWORD PTR [rip+0xbafa]        # 11030 <def_log_file>
    5536:	48 8d 35 ce 75 00 00 	lea    rsi,[rip+0x75ce]        # cb0b <_IO_stdin_used+0xb0b>
    553d:	48 89 c7             	mov    rdi,rax
    5540:	e8 eb cf ff ff       	call   2530 <fopen@plt>
    5545:	48 89 85 58 fe ff ff 	mov    QWORD PTR [rbp-0x1a8],rax
    554c:	48 8b 95 58 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1a8]
    5553:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    555a:	48 89 d6             	mov    rsi,rdx
    555d:	48 89 c7             	mov    rdi,rax
    5560:	e8 eb d0 ff ff       	call   2650 <fputs@plt>
    5565:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    556c:	48 89 c7             	mov    rdi,rax
    556f:	e8 fc d1 ff ff       	call   2770 <fclose@plt>
    5574:	90                   	nop
    5575:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5579:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    5580:	00 00 
    5582:	74 05                	je     5589 <stdout_alert+0x224>
    5584:	e8 77 d1 ff ff       	call   2700 <__stack_chk_fail@plt>
    5589:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    558d:	c9                   	leave  
    558e:	c3                   	ret    

000000000000558f <str_match_parser>:
    558f:	f3 0f 1e fa          	endbr64 
    5593:	55                   	push   rbp
    5594:	48 89 e5             	mov    rbp,rsp
    5597:	53                   	push   rbx
    5598:	48 83 ec 48          	sub    rsp,0x48
    559c:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    55a0:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
    55a4:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    55ab:	00 00 
    55ad:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    55b1:	31 c0                	xor    eax,eax
    55b3:	48 89 e0             	mov    rax,rsp
    55b6:	48 89 c3             	mov    rbx,rax
    55b9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    55bd:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    55c0:	85 c0                	test   eax,eax
    55c2:	75 0a                	jne    55ce <str_match_parser+0x3f>
    55c4:	b8 00 00 00 00       	mov    eax,0x0
    55c9:	e9 e1 01 00 00       	jmp    57af <str_match_parser+0x220>
    55ce:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    55d2:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    55d5:	83 c0 01             	add    eax,0x1
    55d8:	01 c0                	add    eax,eax
    55da:	48 98                	cdqe   
    55dc:	48 83 e8 01          	sub    rax,0x1
    55e0:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    55e4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    55e8:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    55eb:	83 c0 01             	add    eax,0x1
    55ee:	01 c0                	add    eax,eax
    55f0:	48 98                	cdqe   
    55f2:	49 89 c2             	mov    r10,rax
    55f5:	41 bb 00 00 00 00    	mov    r11d,0x0
    55fb:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    55ff:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5602:	83 c0 01             	add    eax,0x1
    5605:	01 c0                	add    eax,eax
    5607:	48 98                	cdqe   
    5609:	49 89 c0             	mov    r8,rax
    560c:	41 b9 00 00 00 00    	mov    r9d,0x0
    5612:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5616:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5619:	83 c0 01             	add    eax,0x1
    561c:	01 c0                	add    eax,eax
    561e:	48 98                	cdqe   
    5620:	ba 10 00 00 00       	mov    edx,0x10
    5625:	48 83 ea 01          	sub    rdx,0x1
    5629:	48 01 d0             	add    rax,rdx
    562c:	be 10 00 00 00       	mov    esi,0x10
    5631:	ba 00 00 00 00       	mov    edx,0x0
    5636:	48 f7 f6             	div    rsi
    5639:	48 6b c0 10          	imul   rax,rax,0x10
    563d:	48 89 c1             	mov    rcx,rax
    5640:	48 81 e1 00 f0 ff ff 	and    rcx,0xfffffffffffff000
    5647:	48 89 e2             	mov    rdx,rsp
    564a:	48 29 ca             	sub    rdx,rcx
    564d:	48 39 d4             	cmp    rsp,rdx
    5650:	74 12                	je     5664 <str_match_parser+0xd5>
    5652:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    5659:	48 83 8c 24 f8 0f 00 	or     QWORD PTR [rsp+0xff8],0x0
    5660:	00 00 
    5662:	eb e9                	jmp    564d <str_match_parser+0xbe>
    5664:	48 89 c2             	mov    rdx,rax
    5667:	81 e2 ff 0f 00 00    	and    edx,0xfff
    566d:	48 29 d4             	sub    rsp,rdx
    5670:	48 89 c2             	mov    rdx,rax
    5673:	81 e2 ff 0f 00 00    	and    edx,0xfff
    5679:	48 85 d2             	test   rdx,rdx
    567c:	74 10                	je     568e <str_match_parser+0xff>
    567e:	25 ff 0f 00 00       	and    eax,0xfff
    5683:	48 83 e8 08          	sub    rax,0x8
    5687:	48 01 e0             	add    rax,rsp
    568a:	48 83 08 00          	or     QWORD PTR [rax],0x0
    568e:	48 89 e0             	mov    rax,rsp
    5691:	48 83 c0 00          	add    rax,0x0
    5695:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    5699:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    569d:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    56a0:	83 c0 01             	add    eax,0x1
    56a3:	01 c0                	add    eax,eax
    56a5:	48 63 d0             	movsxd rdx,eax
    56a8:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    56ac:	be 00 00 00 00       	mov    esi,0x0
    56b1:	48 89 c7             	mov    rdi,rax
    56b4:	e8 b7 cd ff ff       	call   2470 <memset@plt>
    56b9:	c7 45 d4 00 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x0
    56c0:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    56c4:	8b 80 4c 03 00 00    	mov    eax,DWORD PTR [rax+0x34c]
    56ca:	85 c0                	test   eax,eax
    56cc:	74 5f                	je     572d <str_match_parser+0x19e>
    56ce:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    56d2:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    56d5:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
    56d8:	eb 42                	jmp    571c <str_match_parser+0x18d>
    56da:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    56de:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    56e1:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
    56e4:	48 98                	cdqe   
    56e6:	48 01 d0             	add    rax,rdx
    56e9:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    56ec:	0f b6 d0             	movzx  edx,al
    56ef:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    56f2:	8d 48 01             	lea    ecx,[rax+0x1]
    56f5:	89 4d d4             	mov    DWORD PTR [rbp-0x2c],ecx
    56f8:	01 c0                	add    eax,eax
    56fa:	48 63 c8             	movsxd rcx,eax
    56fd:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    5701:	48 01 c8             	add    rax,rcx
    5704:	48 8d 35 02 74 00 00 	lea    rsi,[rip+0x7402]        # cb0d <_IO_stdin_used+0xb0d>
    570b:	48 89 c7             	mov    rdi,rax
    570e:	b8 00 00 00 00       	mov    eax,0x0
    5713:	e8 c8 ce ff ff       	call   25e0 <sprintf@plt>
    5718:	83 45 d0 01          	add    DWORD PTR [rbp-0x30],0x1
    571c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5720:	8b 80 4c 03 00 00    	mov    eax,DWORD PTR [rax+0x34c]
    5726:	39 45 d0             	cmp    DWORD PTR [rbp-0x30],eax
    5729:	7c af                	jl     56da <str_match_parser+0x14b>
    572b:	eb 5a                	jmp    5787 <str_match_parser+0x1f8>
    572d:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5731:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    5734:	89 45 cc             	mov    DWORD PTR [rbp-0x34],eax
    5737:	eb 42                	jmp    577b <str_match_parser+0x1ec>
    5739:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    573d:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    5740:	8b 45 cc             	mov    eax,DWORD PTR [rbp-0x34]
    5743:	48 98                	cdqe   
    5745:	48 01 d0             	add    rax,rdx
    5748:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    574b:	0f b6 d0             	movzx  edx,al
    574e:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    5751:	8d 48 01             	lea    ecx,[rax+0x1]
    5754:	89 4d d4             	mov    DWORD PTR [rbp-0x2c],ecx
    5757:	01 c0                	add    eax,eax
    5759:	48 63 c8             	movsxd rcx,eax
    575c:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    5760:	48 01 c8             	add    rax,rcx
    5763:	48 8d 35 a3 73 00 00 	lea    rsi,[rip+0x73a3]        # cb0d <_IO_stdin_used+0xb0d>
    576a:	48 89 c7             	mov    rdi,rax
    576d:	b8 00 00 00 00       	mov    eax,0x0
    5772:	e8 69 ce ff ff       	call   25e0 <sprintf@plt>
    5777:	83 45 cc 01          	add    DWORD PTR [rbp-0x34],0x1
    577b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    577f:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5782:	39 45 cc             	cmp    DWORD PTR [rbp-0x34],eax
    5785:	7c b2                	jl     5739 <str_match_parser+0x1aa>
    5787:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    578b:	48 8d 50 40          	lea    rdx,[rax+0x40]
    578f:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    5793:	48 89 d6             	mov    rsi,rdx
    5796:	48 89 c7             	mov    rdi,rax
    5799:	e8 92 ce ff ff       	call   2630 <strstr@plt>
    579e:	48 85 c0             	test   rax,rax
    57a1:	74 07                	je     57aa <str_match_parser+0x21b>
    57a3:	b8 01 00 00 00       	mov    eax,0x1
    57a8:	eb 05                	jmp    57af <str_match_parser+0x220>
    57aa:	b8 00 00 00 00       	mov    eax,0x0
    57af:	48 89 dc             	mov    rsp,rbx
    57b2:	48 8b 5d e8          	mov    rbx,QWORD PTR [rbp-0x18]
    57b6:	64 48 2b 1c 25 28 00 	sub    rbx,QWORD PTR fs:0x28
    57bd:	00 00 
    57bf:	74 05                	je     57c6 <str_match_parser+0x237>
    57c1:	e8 3a cf ff ff       	call   2700 <__stack_chk_fail@plt>
    57c6:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    57ca:	c9                   	leave  
    57cb:	c3                   	ret    

00000000000057cc <is_blocked_ipv4>:
    57cc:	f3 0f 1e fa          	endbr64 
    57d0:	55                   	push   rbp
    57d1:	48 89 e5             	mov    rbp,rsp
    57d4:	48 83 ec 20          	sub    rsp,0x20
    57d8:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    57dc:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    57e3:	eb 3b                	jmp    5820 <is_blocked_ipv4+0x54>
    57e5:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    57e8:	48 63 d0             	movsxd rdx,eax
    57eb:	48 89 d0             	mov    rax,rdx
    57ee:	48 c1 e0 03          	shl    rax,0x3
    57f2:	48 01 d0             	add    rax,rdx
    57f5:	48 01 c0             	add    rax,rax
    57f8:	48 8d 15 e1 da 0e 00 	lea    rdx,[rip+0xedae1]        # f32e0 <blocked_ipv4_addrs>
    57ff:	48 01 c2             	add    rdx,rax
    5802:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5806:	48 89 d6             	mov    rsi,rdx
    5809:	48 89 c7             	mov    rdi,rax
    580c:	e8 ff ce ff ff       	call   2710 <strcmp@plt>
    5811:	85 c0                	test   eax,eax
    5813:	75 07                	jne    581c <is_blocked_ipv4+0x50>
    5815:	b8 01 00 00 00       	mov    eax,0x1
    581a:	eb 14                	jmp    5830 <is_blocked_ipv4+0x64>
    581c:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    5820:	8b 05 ea b7 00 00    	mov    eax,DWORD PTR [rip+0xb7ea]        # 11010 <blk_ipv4_len>
    5826:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    5829:	7e ba                	jle    57e5 <is_blocked_ipv4+0x19>
    582b:	b8 00 00 00 00       	mov    eax,0x0
    5830:	c9                   	leave  
    5831:	c3                   	ret    

0000000000005832 <none>:
    5832:	f3 0f 1e fa          	endbr64 
    5836:	55                   	push   rbp
    5837:	48 89 e5             	mov    rbp,rsp
    583a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    583e:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    5842:	b8 01 00 00 00       	mov    eax,0x1
    5847:	5d                   	pop    rbp
    5848:	c3                   	ret    

0000000000005849 <pcre_match>:
    5849:	f3 0f 1e fa          	endbr64 
    584d:	55                   	push   rbp
    584e:	48 89 e5             	mov    rbp,rsp
    5851:	48 83 ec 10          	sub    rsp,0x10
    5855:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5859:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    585d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5861:	48 8b 00             	mov    rax,QWORD PTR [rax]
    5864:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    5868:	48 8d ba d0 01 00 00 	lea    rdi,[rdx+0x1d0]
    586f:	41 b8 00 00 00 00    	mov    r8d,0x0
    5875:	b9 00 00 00 00       	mov    ecx,0x0
    587a:	ba 00 00 00 00       	mov    edx,0x0
    587f:	48 89 c6             	mov    rsi,rax
    5882:	e8 b9 cc ff ff       	call   2540 <regexec@plt>
    5887:	83 f8 01             	cmp    eax,0x1
    588a:	75 07                	jne    5893 <pcre_match+0x4a>
    588c:	b8 00 00 00 00       	mov    eax,0x0
    5891:	eb 05                	jmp    5898 <pcre_match+0x4f>
    5893:	b8 01 00 00 00       	mov    eax,0x1
    5898:	c9                   	leave  
    5899:	c3                   	ret    

000000000000589a <rule_library_parser>:
    589a:	f3 0f 1e fa          	endbr64 
    589e:	55                   	push   rbp
    589f:	48 89 e5             	mov    rbp,rsp
    58a2:	53                   	push   rbx
    58a3:	48 83 ec 48          	sub    rsp,0x48
    58a7:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    58ab:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    58b2:	00 00 
    58b4:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    58b8:	31 c0                	xor    eax,eax
    58ba:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    58be:	48 8d 35 53 72 00 00 	lea    rsi,[rip+0x7253]        # cb18 <_IO_stdin_used+0xb18>
    58c5:	48 89 c7             	mov    rdi,rax
    58c8:	e8 63 cc ff ff       	call   2530 <fopen@plt>
    58cd:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    58d1:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    58d6:	75 22                	jne    58fa <rule_library_parser+0x60>
    58d8:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    58dc:	48 89 c6             	mov    rsi,rax
    58df:	48 8d 3d 3a 72 00 00 	lea    rdi,[rip+0x723a]        # cb20 <_IO_stdin_used+0xb20>
    58e6:	b8 00 00 00 00       	mov    eax,0x0
    58eb:	e8 70 cb ff ff       	call   2460 <printf@plt>
    58f0:	bf 01 00 00 00       	mov    edi,0x1
    58f5:	e8 d6 cb ff ff       	call   24d0 <exit@plt>
    58fa:	48 c7 45 c8 00 00 00 	mov    QWORD PTR [rbp-0x38],0x0
    5901:	00 
    5902:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    5909:	00 
    590a:	e9 70 05 00 00       	jmp    5e7f <rule_library_parser+0x5e5>
    590f:	48 8b 5d d0          	mov    rbx,QWORD PTR [rbp-0x30]
    5913:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5917:	48 8d 35 28 72 00 00 	lea    rsi,[rip+0x7228]        # cb46 <_IO_stdin_used+0xb46>
    591e:	48 89 c7             	mov    rdi,rax
    5921:	e8 6a ce ff ff       	call   2790 <strcspn@plt>
    5926:	48 01 d8             	add    rax,rbx
    5929:	c6 00 00             	mov    BYTE PTR [rax],0x0
    592c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5930:	48 89 c7             	mov    rdi,rax
    5933:	e8 b9 05 00 00       	call   5ef1 <is_comment>
    5938:	84 c0                	test   al,al
    593a:	74 05                	je     5941 <rule_library_parser+0xa7>
    593c:	e9 3e 05 00 00       	jmp    5e7f <rule_library_parser+0x5e5>
    5941:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5945:	ba 1a 00 00 00       	mov    edx,0x1a
    594a:	48 8d 35 f7 71 00 00 	lea    rsi,[rip+0x71f7]        # cb48 <_IO_stdin_used+0xb48>
    5951:	48 89 c7             	mov    rdi,rax
    5954:	e8 b7 cb ff ff       	call   2510 <strncmp@plt>
    5959:	85 c0                	test   eax,eax
    595b:	75 39                	jne    5996 <rule_library_parser+0xfc>
    595d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5961:	48 83 c0 1a          	add    rax,0x1a
    5965:	48 8d 35 f7 71 00 00 	lea    rsi,[rip+0x71f7]        # cb63 <_IO_stdin_used+0xb63>
    596c:	48 89 c7             	mov    rdi,rax
    596f:	e8 9c cd ff ff       	call   2710 <strcmp@plt>
    5974:	85 c0                	test   eax,eax
    5976:	75 0f                	jne    5987 <rule_library_parser+0xed>
    5978:	c7 05 02 b7 00 00 01 	mov    DWORD PTR [rip+0xb702],0x1        # 11084 <strict_icmp_timestamp_req>
    597f:	00 00 00 
    5982:	e9 e2 04 00 00       	jmp    5e69 <rule_library_parser+0x5cf>
    5987:	c7 05 f3 b6 00 00 00 	mov    DWORD PTR [rip+0xb6f3],0x0        # 11084 <strict_icmp_timestamp_req>
    598e:	00 00 00 
    5991:	e9 d3 04 00 00       	jmp    5e69 <rule_library_parser+0x5cf>
    5996:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    599a:	ba 1d 00 00 00       	mov    edx,0x1d
    599f:	48 8d 35 c1 71 00 00 	lea    rsi,[rip+0x71c1]        # cb67 <_IO_stdin_used+0xb67>
    59a6:	48 89 c7             	mov    rdi,rax
    59a9:	e8 62 cb ff ff       	call   2510 <strncmp@plt>
    59ae:	85 c0                	test   eax,eax
    59b0:	75 39                	jne    59eb <rule_library_parser+0x151>
    59b2:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    59b6:	48 83 c0 1d          	add    rax,0x1d
    59ba:	48 8d 35 a2 71 00 00 	lea    rsi,[rip+0x71a2]        # cb63 <_IO_stdin_used+0xb63>
    59c1:	48 89 c7             	mov    rdi,rax
    59c4:	e8 47 cd ff ff       	call   2710 <strcmp@plt>
    59c9:	85 c0                	test   eax,eax
    59cb:	75 0f                	jne    59dc <rule_library_parser+0x142>
    59cd:	c7 05 b1 b6 00 00 01 	mov    DWORD PTR [rip+0xb6b1],0x1        # 11088 <strict_nmap_host_alive_check>
    59d4:	00 00 00 
    59d7:	e9 8d 04 00 00       	jmp    5e69 <rule_library_parser+0x5cf>
    59dc:	c7 05 a2 b6 00 00 00 	mov    DWORD PTR [rip+0xb6a2],0x0        # 11088 <strict_nmap_host_alive_check>
    59e3:	00 00 00 
    59e6:	e9 7e 04 00 00       	jmp    5e69 <rule_library_parser+0x5cf>
    59eb:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    59ef:	ba 17 00 00 00       	mov    edx,0x17
    59f4:	48 8d 35 8a 71 00 00 	lea    rsi,[rip+0x718a]        # cb85 <_IO_stdin_used+0xb85>
    59fb:	48 89 c7             	mov    rdi,rax
    59fe:	e8 0d cb ff ff       	call   2510 <strncmp@plt>
    5a03:	85 c0                	test   eax,eax
    5a05:	75 43                	jne    5a4a <rule_library_parser+0x1b0>
    5a07:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a0b:	48 89 c7             	mov    rdi,rax
    5a0e:	e8 ad cb ff ff       	call   25c0 <strlen@plt>
    5a13:	48 83 f8 17          	cmp    rax,0x17
    5a17:	77 16                	ja     5a2f <rule_library_parser+0x195>
    5a19:	48 8d 3d 7d 71 00 00 	lea    rdi,[rip+0x717d]        # cb9d <_IO_stdin_used+0xb9d>
    5a20:	e8 8b ca ff ff       	call   24b0 <puts@plt>
    5a25:	bf 01 00 00 00       	mov    edi,0x1
    5a2a:	e8 a1 ca ff ff       	call   24d0 <exit@plt>
    5a2f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a33:	48 83 c0 17          	add    rax,0x17
    5a37:	48 89 c7             	mov    rdi,rax
    5a3a:	e8 41 cc ff ff       	call   2680 <atoi@plt>
    5a3f:	89 05 1b 45 10 00    	mov    DWORD PTR [rip+0x10451b],eax        # 109f60 <clean_delay_pkts>
    5a45:	e9 1f 04 00 00       	jmp    5e69 <rule_library_parser+0x5cf>
    5a4a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a4e:	ba 18 00 00 00       	mov    edx,0x18
    5a53:	48 8d 35 5d 71 00 00 	lea    rsi,[rip+0x715d]        # cbb7 <_IO_stdin_used+0xbb7>
    5a5a:	48 89 c7             	mov    rdi,rax
    5a5d:	e8 ae ca ff ff       	call   2510 <strncmp@plt>
    5a62:	85 c0                	test   eax,eax
    5a64:	75 46                	jne    5aac <rule_library_parser+0x212>
    5a66:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a6a:	48 89 c7             	mov    rdi,rax
    5a6d:	e8 4e cb ff ff       	call   25c0 <strlen@plt>
    5a72:	48 83 f8 18          	cmp    rax,0x18
    5a76:	75 16                	jne    5a8e <rule_library_parser+0x1f4>
    5a78:	48 8d 3d 1e 71 00 00 	lea    rdi,[rip+0x711e]        # cb9d <_IO_stdin_used+0xb9d>
    5a7f:	e8 2c ca ff ff       	call   24b0 <puts@plt>
    5a84:	bf 01 00 00 00       	mov    edi,0x1
    5a89:	e8 42 ca ff ff       	call   24d0 <exit@plt>
    5a8e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a92:	48 83 c0 18          	add    rax,0x18
    5a96:	48 89 c7             	mov    rdi,rax
    5a99:	e8 e2 cb ff ff       	call   2680 <atoi@plt>
    5a9e:	48 98                	cdqe   
    5aa0:	48 89 05 11 b8 00 00 	mov    QWORD PTR [rip+0xb811],rax        # 112b8 <clean_delay>
    5aa7:	e9 bd 03 00 00       	jmp    5e69 <rule_library_parser+0x5cf>
    5aac:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ab0:	ba 0b 00 00 00       	mov    edx,0xb
    5ab5:	48 8d 35 14 71 00 00 	lea    rsi,[rip+0x7114]        # cbd0 <_IO_stdin_used+0xbd0>
    5abc:	48 89 c7             	mov    rdi,rax
    5abf:	e8 4c ca ff ff       	call   2510 <strncmp@plt>
    5ac4:	85 c0                	test   eax,eax
    5ac6:	75 33                	jne    5afb <rule_library_parser+0x261>
    5ac8:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5acc:	48 83 c0 0b          	add    rax,0xb
    5ad0:	48 8d 35 8c 70 00 00 	lea    rsi,[rip+0x708c]        # cb63 <_IO_stdin_used+0xb63>
    5ad7:	48 89 c7             	mov    rdi,rax
    5ada:	e8 31 cc ff ff       	call   2710 <strcmp@plt>
    5adf:	85 c0                	test   eax,eax
    5ae1:	75 0c                	jne    5aef <rule_library_parser+0x255>
    5ae3:	c6 05 37 44 10 00 01 	mov    BYTE PTR [rip+0x104437],0x1        # 109f21 <use_sqlite>
    5aea:	e9 7a 03 00 00       	jmp    5e69 <rule_library_parser+0x5cf>
    5aef:	c6 05 2b 44 10 00 00 	mov    BYTE PTR [rip+0x10442b],0x0        # 109f21 <use_sqlite>
    5af6:	e9 6e 03 00 00       	jmp    5e69 <rule_library_parser+0x5cf>
    5afb:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5aff:	ba 15 00 00 00       	mov    edx,0x15
    5b04:	48 8d 35 d1 70 00 00 	lea    rsi,[rip+0x70d1]        # cbdc <_IO_stdin_used+0xbdc>
    5b0b:	48 89 c7             	mov    rdi,rax
    5b0e:	e8 fd c9 ff ff       	call   2510 <strncmp@plt>
    5b13:	85 c0                	test   eax,eax
    5b15:	75 34                	jne    5b4b <rule_library_parser+0x2b1>
    5b17:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b1b:	48 83 c0 15          	add    rax,0x15
    5b1f:	48 89 c6             	mov    rsi,rax
    5b22:	48 8d 3d 17 44 10 00 	lea    rdi,[rip+0x104417]        # 109f40 <sqlite_db_path>
    5b29:	e8 02 cc ff ff       	call   2730 <strcpy@plt>
    5b2e:	48 8d 35 0b 44 10 00 	lea    rsi,[rip+0x10440b]        # 109f40 <sqlite_db_path>
    5b35:	48 8d 3d b6 70 00 00 	lea    rdi,[rip+0x70b6]        # cbf2 <_IO_stdin_used+0xbf2>
    5b3c:	b8 00 00 00 00       	mov    eax,0x0
    5b41:	e8 e0 28 00 00       	call   8426 <livedebug>
    5b46:	e9 1e 03 00 00       	jmp    5e69 <rule_library_parser+0x5cf>
    5b4b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b4f:	ba 0b 00 00 00       	mov    edx,0xb
    5b54:	48 8d 35 b0 70 00 00 	lea    rsi,[rip+0x70b0]        # cc0b <_IO_stdin_used+0xc0b>
    5b5b:	48 89 c7             	mov    rdi,rax
    5b5e:	e8 ad c9 ff ff       	call   2510 <strncmp@plt>
    5b63:	85 c0                	test   eax,eax
    5b65:	75 34                	jne    5b9b <rule_library_parser+0x301>
    5b67:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b6b:	48 83 c0 0b          	add    rax,0xb
    5b6f:	48 89 c6             	mov    rsi,rax
    5b72:	48 8d 3d f7 43 10 00 	lea    rdi,[rip+0x1043f7]        # 109f70 <input_adapter>
    5b79:	e8 b2 cb ff ff       	call   2730 <strcpy@plt>
    5b7e:	48 8d 35 eb 43 10 00 	lea    rsi,[rip+0x1043eb]        # 109f70 <input_adapter>
    5b85:	48 8d 3d 8c 70 00 00 	lea    rdi,[rip+0x708c]        # cc18 <_IO_stdin_used+0xc18>
    5b8c:	b8 00 00 00 00       	mov    eax,0x0
    5b91:	e8 90 28 00 00       	call   8426 <livedebug>
    5b96:	e9 ce 02 00 00       	jmp    5e69 <rule_library_parser+0x5cf>
    5b9b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b9f:	ba 0c 00 00 00       	mov    edx,0xc
    5ba4:	48 8d 35 a0 70 00 00 	lea    rsi,[rip+0x70a0]        # cc4b <_IO_stdin_used+0xc4b>
    5bab:	48 89 c7             	mov    rdi,rax
    5bae:	e8 5d c9 ff ff       	call   2510 <strncmp@plt>
    5bb3:	85 c0                	test   eax,eax
    5bb5:	75 34                	jne    5beb <rule_library_parser+0x351>
    5bb7:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5bbb:	48 83 c0 0c          	add    rax,0xc
    5bbf:	48 89 c6             	mov    rsi,rax
    5bc2:	48 8d 3d b7 43 10 00 	lea    rdi,[rip+0x1043b7]        # 109f80 <output_adapter>
    5bc9:	e8 62 cb ff ff       	call   2730 <strcpy@plt>
    5bce:	48 8d 35 ab 43 10 00 	lea    rsi,[rip+0x1043ab]        # 109f80 <output_adapter>
    5bd5:	48 8d 3d 7c 70 00 00 	lea    rdi,[rip+0x707c]        # cc58 <_IO_stdin_used+0xc58>
    5bdc:	b8 00 00 00 00       	mov    eax,0x0
    5be1:	e8 40 28 00 00       	call   8426 <livedebug>
    5be6:	e9 7e 02 00 00       	jmp    5e69 <rule_library_parser+0x5cf>
    5beb:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5bef:	ba 05 00 00 00       	mov    edx,0x5
    5bf4:	48 8d 35 91 70 00 00 	lea    rsi,[rip+0x7091]        # cc8c <_IO_stdin_used+0xc8c>
    5bfb:	48 89 c7             	mov    rdi,rax
    5bfe:	e8 0d c9 ff ff       	call   2510 <strncmp@plt>
    5c03:	85 c0                	test   eax,eax
    5c05:	0f 85 81 00 00 00    	jne    5c8c <rule_library_parser+0x3f2>
    5c0b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c0f:	48 83 c0 05          	add    rax,0x5
    5c13:	48 89 c6             	mov    rsi,rax
    5c16:	48 8d 3d 75 70 00 00 	lea    rdi,[rip+0x7075]        # cc92 <_IO_stdin_used+0xc92>
    5c1d:	b8 00 00 00 00       	mov    eax,0x0
    5c22:	e8 ff 27 00 00       	call   8426 <livedebug>
    5c27:	48 8d 3d 6d 70 00 00 	lea    rdi,[rip+0x706d]        # cc9b <_IO_stdin_used+0xc9b>
    5c2e:	b8 00 00 00 00       	mov    eax,0x0
    5c33:	e8 28 c8 ff ff       	call   2460 <printf@plt>
    5c38:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c3c:	48 83 c0 05          	add    rax,0x5
    5c40:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5c43:	0f b6 15 5d 70 00 00 	movzx  edx,BYTE PTR [rip+0x705d]        # cca7 <_IO_stdin_used+0xca7>
    5c4a:	0f b6 c0             	movzx  eax,al
    5c4d:	0f b6 d2             	movzx  edx,dl
    5c50:	29 d0                	sub    eax,edx
    5c52:	85 c0                	test   eax,eax
    5c54:	75 1b                	jne    5c71 <rule_library_parser+0x3d7>
    5c56:	c7 05 c4 b3 00 00 02 	mov    DWORD PTR [rip+0xb3c4],0x2        # 11024 <VIGIL_MODE>
    5c5d:	00 00 00 
    5c60:	48 8d 3d 42 70 00 00 	lea    rdi,[rip+0x7042]        # cca9 <_IO_stdin_used+0xca9>
    5c67:	e8 44 c8 ff ff       	call   24b0 <puts@plt>
    5c6c:	e9 f8 01 00 00       	jmp    5e69 <rule_library_parser+0x5cf>
    5c71:	c7 05 a9 b3 00 00 01 	mov    DWORD PTR [rip+0xb3a9],0x1        # 11024 <VIGIL_MODE>
    5c78:	00 00 00 
    5c7b:	48 8d 3d 3e 70 00 00 	lea    rdi,[rip+0x703e]        # ccc0 <_IO_stdin_used+0xcc0>
    5c82:	e8 29 c8 ff ff       	call   24b0 <puts@plt>
    5c87:	e9 dd 01 00 00       	jmp    5e69 <rule_library_parser+0x5cf>
    5c8c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c90:	ba 08 00 00 00       	mov    edx,0x8
    5c95:	48 8d 35 3b 70 00 00 	lea    rsi,[rip+0x703b]        # ccd7 <_IO_stdin_used+0xcd7>
    5c9c:	48 89 c7             	mov    rdi,rax
    5c9f:	e8 6c c8 ff ff       	call   2510 <strncmp@plt>
    5ca4:	85 c0                	test   eax,eax
    5ca6:	75 34                	jne    5cdc <rule_library_parser+0x442>
    5ca8:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5cac:	48 83 c0 08          	add    rax,0x8
    5cb0:	48 89 c6             	mov    rsi,rax
    5cb3:	48 8d 3d d6 42 10 00 	lea    rdi,[rip+0x1042d6]        # 109f90 <local_ip>
    5cba:	e8 71 ca ff ff       	call   2730 <strcpy@plt>
    5cbf:	48 8d 35 ca 42 10 00 	lea    rsi,[rip+0x1042ca]        # 109f90 <local_ip>
    5cc6:	48 8d 3d 13 70 00 00 	lea    rdi,[rip+0x7013]        # cce0 <_IO_stdin_used+0xce0>
    5ccd:	b8 00 00 00 00       	mov    eax,0x0
    5cd2:	e8 4f 27 00 00       	call   8426 <livedebug>
    5cd7:	e9 8d 01 00 00       	jmp    5e69 <rule_library_parser+0x5cf>
    5cdc:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ce0:	ba 06 00 00 00       	mov    edx,0x6
    5ce5:	48 8d 35 0f 70 00 00 	lea    rsi,[rip+0x700f]        # ccfb <_IO_stdin_used+0xcfb>
    5cec:	48 89 c7             	mov    rdi,rax
    5cef:	e8 1c c8 ff ff       	call   2510 <strncmp@plt>
    5cf4:	85 c0                	test   eax,eax
    5cf6:	75 1c                	jne    5d14 <rule_library_parser+0x47a>
    5cf8:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5cfc:	48 83 c0 06          	add    rax,0x6
    5d00:	48 89 c6             	mov    rsi,rax
    5d03:	48 8d 3d a6 42 10 00 	lea    rdi,[rip+0x1042a6]        # 109fb0 <def_gw>
    5d0a:	e8 21 ca ff ff       	call   2730 <strcpy@plt>
    5d0f:	e9 55 01 00 00       	jmp    5e69 <rule_library_parser+0x5cf>
    5d14:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d18:	ba 08 00 00 00       	mov    edx,0x8
    5d1d:	48 8d 35 de 6f 00 00 	lea    rsi,[rip+0x6fde]        # cd02 <_IO_stdin_used+0xd02>
    5d24:	48 89 c7             	mov    rdi,rax
    5d27:	e8 e4 c7 ff ff       	call   2510 <strncmp@plt>
    5d2c:	85 c0                	test   eax,eax
    5d2e:	75 3f                	jne    5d6f <rule_library_parser+0x4d5>
    5d30:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d34:	48 83 c0 08          	add    rax,0x8
    5d38:	48 8d 35 24 6e 00 00 	lea    rsi,[rip+0x6e24]        # cb63 <_IO_stdin_used+0xb63>
    5d3f:	48 89 c7             	mov    rdi,rax
    5d42:	e8 c9 c9 ff ff       	call   2710 <strcmp@plt>
    5d47:	85 c0                	test   eax,eax
    5d49:	75 18                	jne    5d63 <rule_library_parser+0x4c9>
    5d4b:	c6 05 70 42 10 00 01 	mov    BYTE PTR [rip+0x104270],0x1        # 109fc2 <use_spi>
    5d52:	48 8d 3d b2 6f 00 00 	lea    rdi,[rip+0x6fb2]        # cd0b <_IO_stdin_used+0xd0b>
    5d59:	e8 52 c7 ff ff       	call   24b0 <puts@plt>
    5d5e:	e9 06 01 00 00       	jmp    5e69 <rule_library_parser+0x5cf>
    5d63:	c6 05 58 42 10 00 00 	mov    BYTE PTR [rip+0x104258],0x0        # 109fc2 <use_spi>
    5d6a:	e9 fa 00 00 00       	jmp    5e69 <rule_library_parser+0x5cf>
    5d6f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d73:	ba 09 00 00 00       	mov    edx,0x9
    5d78:	48 8d 35 a5 6f 00 00 	lea    rsi,[rip+0x6fa5]        # cd24 <_IO_stdin_used+0xd24>
    5d7f:	48 89 c7             	mov    rdi,rax
    5d82:	e8 89 c7 ff ff       	call   2510 <strncmp@plt>
    5d87:	85 c0                	test   eax,eax
    5d89:	75 27                	jne    5db2 <rule_library_parser+0x518>
    5d8b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d8f:	48 89 c7             	mov    rdi,rax
    5d92:	e8 83 01 00 00       	call   5f1a <rstrip>
    5d97:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d9b:	48 83 c0 09          	add    rax,0x9
    5d9f:	48 89 c7             	mov    rdi,rax
    5da2:	e8 eb 4b 00 00       	call   a992 <homenet_toi>
    5da7:	89 05 17 42 10 00    	mov    DWORD PTR [rip+0x104217],eax        # 109fc4 <homenet>
    5dad:	e9 b7 00 00 00       	jmp    5e69 <rule_library_parser+0x5cf>
    5db2:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5db6:	ba 0e 00 00 00       	mov    edx,0xe
    5dbb:	48 8d 35 6c 6f 00 00 	lea    rsi,[rip+0x6f6c]        # cd2e <_IO_stdin_used+0xd2e>
    5dc2:	48 89 c7             	mov    rdi,rax
    5dc5:	e8 46 c7 ff ff       	call   2510 <strncmp@plt>
    5dca:	85 c0                	test   eax,eax
    5dcc:	75 24                	jne    5df2 <rule_library_parser+0x558>
    5dce:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5dd2:	48 89 c7             	mov    rdi,rax
    5dd5:	e8 40 01 00 00       	call   5f1a <rstrip>
    5dda:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5dde:	48 83 c0 0e          	add    rax,0xe
    5de2:	48 89 c7             	mov    rdi,rax
    5de5:	e8 a8 4b 00 00       	call   a992 <homenet_toi>
    5dea:	89 05 d8 41 10 00    	mov    DWORD PTR [rip+0x1041d8],eax        # 109fc8 <homenetmask>
    5df0:	eb 77                	jmp    5e69 <rule_library_parser+0x5cf>
    5df2:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5df6:	ba 09 00 00 00       	mov    edx,0x9
    5dfb:	48 8d 35 3b 6f 00 00 	lea    rsi,[rip+0x6f3b]        # cd3d <_IO_stdin_used+0xd3d>
    5e02:	48 89 c7             	mov    rdi,rax
    5e05:	e8 06 c7 ff ff       	call   2510 <strncmp@plt>
    5e0a:	85 c0                	test   eax,eax
    5e0c:	75 3f                	jne    5e4d <rule_library_parser+0x5b3>
    5e0e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e12:	48 89 c7             	mov    rdi,rax
    5e15:	e8 00 01 00 00       	call   5f1a <rstrip>
    5e1a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e1e:	48 83 c0 09          	add    rax,0x9
    5e22:	48 8d 35 1e 6f 00 00 	lea    rsi,[rip+0x6f1e]        # cd47 <_IO_stdin_used+0xd47>
    5e29:	48 89 c7             	mov    rdi,rax
    5e2c:	e8 df c8 ff ff       	call   2710 <strcmp@plt>
    5e31:	85 c0                	test   eax,eax
    5e33:	75 0c                	jne    5e41 <rule_library_parser+0x5a7>
    5e35:	c7 05 29 41 10 00 04 	mov    DWORD PTR [rip+0x104129],0x4        # 109f68 <vigil_location>
    5e3c:	00 00 00 
    5e3f:	eb 28                	jmp    5e69 <rule_library_parser+0x5cf>
    5e41:	c7 05 1d 41 10 00 03 	mov    DWORD PTR [rip+0x10411d],0x3        # 109f68 <vigil_location>
    5e48:	00 00 00 
    5e4b:	eb 1c                	jmp    5e69 <rule_library_parser+0x5cf>
    5e4d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e51:	48 89 c7             	mov    rdi,rax
    5e54:	e8 7e 00 00 00       	call   5ed7 <is_rule>
    5e59:	84 c0                	test   al,al
    5e5b:	74 0c                	je     5e69 <rule_library_parser+0x5cf>
    5e5d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e61:	48 89 c7             	mov    rdi,rax
    5e64:	e8 18 01 00 00       	call   5f81 <rule_parser>
    5e69:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e6d:	ba 08 00 00 00       	mov    edx,0x8
    5e72:	be 00 00 00 00       	mov    esi,0x0
    5e77:	48 89 c7             	mov    rdi,rax
    5e7a:	e8 f1 c5 ff ff       	call   2470 <memset@plt>
    5e7f:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    5e83:	48 8d 4d c8          	lea    rcx,[rbp-0x38]
    5e87:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    5e8b:	48 89 ce             	mov    rsi,rcx
    5e8e:	48 89 c7             	mov    rdi,rax
    5e91:	e8 8a c8 ff ff       	call   2720 <getline@plt>
    5e96:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    5e9a:	48 83 7d e0 ff       	cmp    QWORD PTR [rbp-0x20],0xffffffffffffffff
    5e9f:	0f 85 6a fa ff ff    	jne    590f <rule_library_parser+0x75>
    5ea5:	8b 05 79 b1 00 00    	mov    eax,DWORD PTR [rip+0xb179]        # 11024 <VIGIL_MODE>
    5eab:	3d ff ff 00 00       	cmp    eax,0xffff
    5eb0:	75 0a                	jne    5ebc <rule_library_parser+0x622>
    5eb2:	c7 05 68 b1 00 00 01 	mov    DWORD PTR [rip+0xb168],0x1        # 11024 <VIGIL_MODE>
    5eb9:	00 00 00 
    5ebc:	90                   	nop
    5ebd:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5ec1:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    5ec8:	00 00 
    5eca:	74 05                	je     5ed1 <rule_library_parser+0x637>
    5ecc:	e8 2f c8 ff ff       	call   2700 <__stack_chk_fail@plt>
    5ed1:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    5ed5:	c9                   	leave  
    5ed6:	c3                   	ret    

0000000000005ed7 <is_rule>:
    5ed7:	f3 0f 1e fa          	endbr64 
    5edb:	55                   	push   rbp
    5edc:	48 89 e5             	mov    rbp,rsp
    5edf:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5ee3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5ee7:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5eea:	3c 24                	cmp    al,0x24
    5eec:	0f 94 c0             	sete   al
    5eef:	5d                   	pop    rbp
    5ef0:	c3                   	ret    

0000000000005ef1 <is_comment>:
    5ef1:	f3 0f 1e fa          	endbr64 
    5ef5:	55                   	push   rbp
    5ef6:	48 89 e5             	mov    rbp,rsp
    5ef9:	48 83 ec 10          	sub    rsp,0x10
    5efd:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5f01:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5f05:	be 23 00 00 00       	mov    esi,0x23
    5f0a:	48 89 c7             	mov    rdi,rax
    5f0d:	e8 9e c7 ff ff       	call   26b0 <strchr@plt>
    5f12:	48 85 c0             	test   rax,rax
    5f15:	0f 95 c0             	setne  al
    5f18:	c9                   	leave  
    5f19:	c3                   	ret    

0000000000005f1a <rstrip>:
    5f1a:	f3 0f 1e fa          	endbr64 
    5f1e:	55                   	push   rbp
    5f1f:	48 89 e5             	mov    rbp,rsp
    5f22:	48 83 ec 10          	sub    rsp,0x10
    5f26:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5f2a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5f2e:	48 8d 35 11 6c 00 00 	lea    rsi,[rip+0x6c11]        # cb46 <_IO_stdin_used+0xb46>
    5f35:	48 89 c7             	mov    rdi,rax
    5f38:	e8 53 c8 ff ff       	call   2790 <strcspn@plt>
    5f3d:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    5f41:	48 01 d0             	add    rax,rdx
    5f44:	c6 00 00             	mov    BYTE PTR [rax],0x0
    5f47:	90                   	nop
    5f48:	c9                   	leave  
    5f49:	c3                   	ret    

0000000000005f4a <syntax_error>:
    5f4a:	f3 0f 1e fa          	endbr64 
    5f4e:	55                   	push   rbp
    5f4f:	48 89 e5             	mov    rbp,rsp
    5f52:	48 83 ec 10          	sub    rsp,0x10
    5f56:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5f5a:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
    5f5d:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    5f61:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    5f64:	89 c6                	mov    esi,eax
    5f66:	48 8d 3d e3 6d 00 00 	lea    rdi,[rip+0x6de3]        # cd50 <_IO_stdin_used+0xd50>
    5f6d:	b8 00 00 00 00       	mov    eax,0x0
    5f72:	e8 e9 c4 ff ff       	call   2460 <printf@plt>
    5f77:	bf 01 00 00 00       	mov    edi,0x1
    5f7c:	e8 4f c5 ff ff       	call   24d0 <exit@plt>

0000000000005f81 <rule_parser>:
    5f81:	f3 0f 1e fa          	endbr64 
    5f85:	55                   	push   rbp
    5f86:	48 89 e5             	mov    rbp,rsp
    5f89:	48 83 ec 40          	sub    rsp,0x40
    5f8d:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    5f91:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    5f98:	00 00 
    5f9a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    5f9e:	31 c0                	xor    eax,eax
    5fa0:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    5fa4:	48 83 c0 01          	add    rax,0x1
    5fa8:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    5fac:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    5fb0:	48 8d 35 61 6b 00 00 	lea    rsi,[rip+0x6b61]        # cb18 <_IO_stdin_used+0xb18>
    5fb7:	48 89 c7             	mov    rdi,rax
    5fba:	e8 71 c5 ff ff       	call   2530 <fopen@plt>
    5fbf:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    5fc3:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
    5fc8:	75 22                	jne    5fec <rule_parser+0x6b>
    5fca:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    5fce:	48 89 c6             	mov    rsi,rax
    5fd1:	48 8d 3d 98 6d 00 00 	lea    rdi,[rip+0x6d98]        # cd70 <_IO_stdin_used+0xd70>
    5fd8:	b8 00 00 00 00       	mov    eax,0x0
    5fdd:	e8 7e c4 ff ff       	call   2460 <printf@plt>
    5fe2:	bf 01 00 00 00       	mov    edi,0x1
    5fe7:	e8 e4 c4 ff ff       	call   24d0 <exit@plt>
    5fec:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    5ff0:	48 89 c6             	mov    rsi,rax
    5ff3:	48 8d 3d a9 6d 00 00 	lea    rdi,[rip+0x6da9]        # cda3 <_IO_stdin_used+0xda3>
    5ffa:	b8 00 00 00 00       	mov    eax,0x0
    5fff:	e8 5c c4 ff ff       	call   2460 <printf@plt>
    6004:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    600b:	00 
    600c:	48 c7 45 d8 00 00 00 	mov    QWORD PTR [rbp-0x28],0x0
    6013:	00 
    6014:	eb 54                	jmp    606a <rule_parser+0xe9>
    6016:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    601a:	48 89 c7             	mov    rdi,rax
    601d:	e8 cf fe ff ff       	call   5ef1 <is_comment>
    6022:	84 c0                	test   al,al
    6024:	74 02                	je     6028 <rule_parser+0xa7>
    6026:	eb 42                	jmp    606a <rule_parser+0xe9>
    6028:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    602c:	48 89 c7             	mov    rdi,rax
    602f:	e8 e6 fe ff ff       	call   5f1a <rstrip>
    6034:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    6038:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    603b:	0f b6 c0             	movzx  eax,al
    603e:	f7 d8                	neg    eax
    6040:	85 c0                	test   eax,eax
    6042:	75 02                	jne    6046 <rule_parser+0xc5>
    6044:	eb 24                	jmp    606a <rule_parser+0xe9>
    6046:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    604a:	48 8d 35 63 6d 00 00 	lea    rsi,[rip+0x6d63]        # cdb4 <_IO_stdin_used+0xdb4>
    6051:	48 89 c7             	mov    rdi,rax
    6054:	e8 d7 c5 ff ff       	call   2630 <strstr@plt>
    6059:	48 85 c0             	test   rax,rax
    605c:	74 0c                	je     606a <rule_parser+0xe9>
    605e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    6062:	48 89 c7             	mov    rdi,rax
    6065:	e8 e4 34 00 00       	call   954e <line_parser>
    606a:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    606e:	48 8d 4d d0          	lea    rcx,[rbp-0x30]
    6072:	48 8d 45 d8          	lea    rax,[rbp-0x28]
    6076:	48 89 ce             	mov    rsi,rcx
    6079:	48 89 c7             	mov    rdi,rax
    607c:	e8 9f c6 ff ff       	call   2720 <getline@plt>
    6081:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    6085:	48 83 7d f0 ff       	cmp    QWORD PTR [rbp-0x10],0xffffffffffffffff
    608a:	75 8a                	jne    6016 <rule_parser+0x95>
    608c:	0f b6 05 8d 3e 10 00 	movzx  eax,BYTE PTR [rip+0x103e8d]        # 109f20 <debug_mode>
    6093:	84 c0                	test   al,al
    6095:	74 18                	je     60af <rule_parser+0x12e>
    6097:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    609b:	48 89 c6             	mov    rsi,rax
    609e:	48 8d 3d 15 6d 00 00 	lea    rdi,[rip+0x6d15]        # cdba <_IO_stdin_used+0xdba>
    60a5:	b8 00 00 00 00       	mov    eax,0x0
    60aa:	e8 b1 c3 ff ff       	call   2460 <printf@plt>
    60af:	90                   	nop
    60b0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    60b4:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    60bb:	00 00 
    60bd:	74 05                	je     60c4 <rule_parser+0x143>
    60bf:	e8 3c c6 ff ff       	call   2700 <__stack_chk_fail@plt>
    60c4:	c9                   	leave  
    60c5:	c3                   	ret    

00000000000060c6 <deny_conf_parser>:
    60c6:	f3 0f 1e fa          	endbr64 
    60ca:	55                   	push   rbp
    60cb:	48 89 e5             	mov    rbp,rsp
    60ce:	48 83 ec 50          	sub    rsp,0x50
    60d2:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    60d6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    60dd:	00 00 
    60df:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    60e3:	31 c0                	xor    eax,eax
    60e5:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    60e9:	48 8d 35 28 6a 00 00 	lea    rsi,[rip+0x6a28]        # cb18 <_IO_stdin_used+0xb18>
    60f0:	48 89 c7             	mov    rdi,rax
    60f3:	e8 38 c4 ff ff       	call   2530 <fopen@plt>
    60f8:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    60fc:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    6101:	75 22                	jne    6125 <deny_conf_parser+0x5f>
    6103:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    6107:	48 89 c6             	mov    rsi,rax
    610a:	48 8d 3d bf 6c 00 00 	lea    rdi,[rip+0x6cbf]        # cdd0 <_IO_stdin_used+0xdd0>
    6111:	b8 00 00 00 00       	mov    eax,0x0
    6116:	e8 45 c3 ff ff       	call   2460 <printf@plt>
    611b:	bf 01 00 00 00       	mov    edi,0x1
    6120:	e8 ab c3 ff ff       	call   24d0 <exit@plt>
    6125:	48 c7 45 c8 00 00 00 	mov    QWORD PTR [rbp-0x38],0x0
    612c:	00 
    612d:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    6134:	00 
    6135:	e9 9a 00 00 00       	jmp    61d4 <deny_conf_parser+0x10e>
    613a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    613e:	48 89 c7             	mov    rdi,rax
    6141:	e8 d4 fd ff ff       	call   5f1a <rstrip>
    6146:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    614a:	48 89 c7             	mov    rdi,rax
    614d:	e8 9f fd ff ff       	call   5ef1 <is_comment>
    6152:	84 c0                	test   al,al
    6154:	74 02                	je     6158 <deny_conf_parser+0x92>
    6156:	eb 7c                	jmp    61d4 <deny_conf_parser+0x10e>
    6158:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    615c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    615f:	0f b6 c0             	movzx  eax,al
    6162:	f7 d8                	neg    eax
    6164:	85 c0                	test   eax,eax
    6166:	75 02                	jne    616a <deny_conf_parser+0xa4>
    6168:	eb 6a                	jmp    61d4 <deny_conf_parser+0x10e>
    616a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    616e:	48 8d 35 8c 6c 00 00 	lea    rsi,[rip+0x6c8c]        # ce01 <_IO_stdin_used+0xe01>
    6175:	48 89 c7             	mov    rdi,rax
    6178:	e8 b3 c4 ff ff       	call   2630 <strstr@plt>
    617d:	48 85 c0             	test   rax,rax
    6180:	74 52                	je     61d4 <deny_conf_parser+0x10e>
    6182:	8b 05 88 ae 00 00    	mov    eax,DWORD PTR [rip+0xae88]        # 11010 <blk_ipv4_len>
    6188:	83 c0 01             	add    eax,0x1
    618b:	89 05 7f ae 00 00    	mov    DWORD PTR [rip+0xae7f],eax        # 11010 <blk_ipv4_len>
    6191:	8b 05 79 ae 00 00    	mov    eax,DWORD PTR [rip+0xae79]        # 11010 <blk_ipv4_len>
    6197:	48 63 d0             	movsxd rdx,eax
    619a:	48 89 d0             	mov    rax,rdx
    619d:	48 c1 e0 03          	shl    rax,0x3
    61a1:	48 01 d0             	add    rax,rdx
    61a4:	48 01 c0             	add    rax,rax
    61a7:	48 8d 15 32 d1 0e 00 	lea    rdx,[rip+0xed132]        # f32e0 <blocked_ipv4_addrs>
    61ae:	48 01 d0             	add    rax,rdx
    61b1:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    61b5:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    61b9:	48 83 c0 05          	add    rax,0x5
    61bd:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    61c1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    61c5:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    61c9:	48 89 d6             	mov    rsi,rdx
    61cc:	48 89 c7             	mov    rdi,rax
    61cf:	e8 5c c5 ff ff       	call   2730 <strcpy@plt>
    61d4:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    61d8:	48 8d 4d d0          	lea    rcx,[rbp-0x30]
    61dc:	48 8d 45 c8          	lea    rax,[rbp-0x38]
    61e0:	48 89 ce             	mov    rsi,rcx
    61e3:	48 89 c7             	mov    rdi,rax
    61e6:	e8 35 c5 ff ff       	call   2720 <getline@plt>
    61eb:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    61ef:	48 83 7d e0 ff       	cmp    QWORD PTR [rbp-0x20],0xffffffffffffffff
    61f4:	0f 85 40 ff ff ff    	jne    613a <deny_conf_parser+0x74>
    61fa:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    61fe:	48 85 c0             	test   rax,rax
    6201:	74 0c                	je     620f <deny_conf_parser+0x149>
    6203:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6207:	48 89 c7             	mov    rdi,rax
    620a:	e8 a1 c3 ff ff       	call   25b0 <free@plt>
    620f:	90                   	nop
    6210:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6214:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    621b:	00 00 
    621d:	74 05                	je     6224 <deny_conf_parser+0x15e>
    621f:	e8 dc c4 ff ff       	call   2700 <__stack_chk_fail@plt>
    6224:	c9                   	leave  
    6225:	c3                   	ret    

0000000000006226 <host_mon_parser>:
    6226:	f3 0f 1e fa          	endbr64 
    622a:	55                   	push   rbp
    622b:	48 89 e5             	mov    rbp,rsp
    622e:	48 83 ec 10          	sub    rsp,0x10
    6232:	48 8b 05 ff ad 00 00 	mov    rax,QWORD PTR [rip+0xadff]        # 11038 <default_host_conf>
    6239:	48 8d 35 d8 68 00 00 	lea    rsi,[rip+0x68d8]        # cb18 <_IO_stdin_used+0xb18>
    6240:	48 89 c7             	mov    rdi,rax
    6243:	e8 e8 c2 ff ff       	call   2530 <fopen@plt>
    6248:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    624c:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    6251:	75 25                	jne    6278 <host_mon_parser+0x52>
    6253:	48 8b 05 de ad 00 00 	mov    rax,QWORD PTR [rip+0xadde]        # 11038 <default_host_conf>
    625a:	48 89 c6             	mov    rsi,rax
    625d:	48 8d 3d a2 6b 00 00 	lea    rdi,[rip+0x6ba2]        # ce06 <_IO_stdin_used+0xe06>
    6264:	b8 00 00 00 00       	mov    eax,0x0
    6269:	e8 f2 c1 ff ff       	call   2460 <printf@plt>
    626e:	bf 01 00 00 00       	mov    edi,0x1
    6273:	e8 58 c2 ff ff       	call   24d0 <exit@plt>
    6278:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    627c:	48 89 c7             	mov    rdi,rax
    627f:	e8 ec c4 ff ff       	call   2770 <fclose@plt>
    6284:	90                   	nop
    6285:	c9                   	leave  
    6286:	c3                   	ret    

0000000000006287 <rule_app>:
    6287:	f3 0f 1e fa          	endbr64 
    628b:	55                   	push   rbp
    628c:	48 89 e5             	mov    rbp,rsp
    628f:	48 83 ec 20          	sub    rsp,0x20
    6293:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    6297:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    629b:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    629f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    62a3:	48 89 d6             	mov    rsi,rdx
    62a6:	48 89 c7             	mov    rdi,rax
    62a9:	e8 e9 02 00 00       	call   6597 <r_engine>
    62ae:	88 45 fd             	mov    BYTE PTR [rbp-0x3],al
    62b1:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    62b5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    62b9:	48 89 d6             	mov    rsi,rdx
    62bc:	48 89 c7             	mov    rdi,rax
    62bf:	e8 bc 45 00 00       	call   a880 <d_engine>
    62c4:	88 45 fe             	mov    BYTE PTR [rbp-0x2],al
    62c7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    62cb:	48 8b 88 78 03 00 00 	mov    rcx,QWORD PTR [rax+0x378]
    62d2:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    62d6:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    62da:	48 89 d6             	mov    rsi,rdx
    62dd:	48 89 c7             	mov    rdi,rax
    62e0:	ff d1                	call   rcx
    62e2:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
    62e5:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
    62e9:	74 40                	je     632b <rule_app+0xa4>
    62eb:	80 7d fd 00          	cmp    BYTE PTR [rbp-0x3],0x0
    62ef:	74 3a                	je     632b <rule_app+0xa4>
    62f1:	80 7d fe 00          	cmp    BYTE PTR [rbp-0x2],0x0
    62f5:	74 34                	je     632b <rule_app+0xa4>
    62f7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    62fb:	4c 8b 80 80 03 00 00 	mov    r8,QWORD PTR [rax+0x380]
    6302:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    6306:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    630a:	ba 00 00 00 00       	mov    edx,0x0
    630f:	48 89 ce             	mov    rsi,rcx
    6312:	48 89 c7             	mov    rdi,rax
    6315:	41 ff d0             	call   r8
    6318:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    631c:	8b 40 3c             	mov    eax,DWORD PTR [rax+0x3c]
    631f:	8d 50 01             	lea    edx,[rax+0x1]
    6322:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6326:	89 50 3c             	mov    DWORD PTR [rax+0x3c],edx
    6329:	eb 17                	jmp    6342 <rule_app+0xbb>
    632b:	8b 05 f3 ac 00 00    	mov    eax,DWORD PTR [rip+0xacf3]        # 11024 <VIGIL_MODE>
    6331:	83 f8 02             	cmp    eax,0x2
    6334:	75 0c                	jne    6342 <rule_app+0xbb>
    6336:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    633a:	48 89 c7             	mov    rdi,rax
    633d:	e8 c3 21 00 00       	call   8505 <forward_packet>
    6342:	90                   	nop
    6343:	c9                   	leave  
    6344:	c3                   	ret    

0000000000006345 <rulemgr>:
    6345:	f3 0f 1e fa          	endbr64 
    6349:	55                   	push   rbp
    634a:	48 89 e5             	mov    rbp,rsp
    634d:	48 83 ec 20          	sub    rsp,0x20
    6351:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    6355:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    635c:	e9 23 02 00 00       	jmp    6584 <rulemgr+0x23f>
    6361:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    6364:	8d 50 01             	lea    edx,[rax+0x1]
    6367:	89 55 f4             	mov    DWORD PTR [rbp-0xc],edx
    636a:	48 98                	cdqe   
    636c:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    6373:	48 8d 15 66 af 00 00 	lea    rdx,[rip+0xaf66]        # 112e0 <rules>
    637a:	48 01 d0             	add    rax,rdx
    637d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    6381:	0f b6 05 44 3c 10 00 	movzx  eax,BYTE PTR [rip+0x103c44]        # 109fcc <in_test_mode>
    6388:	84 c0                	test   al,al
    638a:	74 30                	je     63bc <rulemgr+0x77>
    638c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6390:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    6393:	83 f8 46             	cmp    eax,0x46
    6396:	75 0d                	jne    63a5 <rulemgr+0x60>
    6398:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    639c:	c7 40 10 45 00 00 00 	mov    DWORD PTR [rax+0x10],0x45
    63a3:	eb 17                	jmp    63bc <rulemgr+0x77>
    63a5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    63a9:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    63ac:	83 f8 45             	cmp    eax,0x45
    63af:	75 0b                	jne    63bc <rulemgr+0x77>
    63b1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    63b5:	c7 40 10 46 00 00 00 	mov    DWORD PTR [rax+0x10],0x46
    63bc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    63c0:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    63c6:	83 f8 ff             	cmp    eax,0xffffffff
    63c9:	74 19                	je     63e4 <rulemgr+0x9f>
    63cb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    63cf:	8b 50 2c             	mov    edx,DWORD PTR [rax+0x2c]
    63d2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    63d6:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    63dc:	39 c2                	cmp    edx,eax
    63de:	0f 85 a0 01 00 00    	jne    6584 <rulemgr+0x23f>
    63e4:	0f b6 05 95 ac 00 00 	movzx  eax,BYTE PTR [rip+0xac95]        # 11080 <demo_mode>
    63eb:	84 c0                	test   al,al
    63ed:	75 0b                	jne    63fa <rulemgr+0xb5>
    63ef:	8b 05 73 3b 10 00    	mov    eax,DWORD PTR [rip+0x103b73]        # 109f68 <vigil_location>
    63f5:	83 f8 03             	cmp    eax,0x3
    63f8:	75 6b                	jne    6465 <rulemgr+0x120>
    63fa:	8b 05 68 3b 10 00    	mov    eax,DWORD PTR [rip+0x103b68]        # 109f68 <vigil_location>
    6400:	83 f8 03             	cmp    eax,0x3
    6403:	0f 85 7b 01 00 00    	jne    6584 <rulemgr+0x23f>
    6409:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    640d:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    6410:	83 f8 ff             	cmp    eax,0xffffffff
    6413:	74 16                	je     642b <rulemgr+0xe6>
    6415:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6419:	8b 50 0c             	mov    edx,DWORD PTR [rax+0xc]
    641c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6420:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    6423:	39 c2                	cmp    edx,eax
    6425:	0f 85 59 01 00 00    	jne    6584 <rulemgr+0x23f>
    642b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    642f:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    6432:	83 f8 ff             	cmp    eax,0xffffffff
    6435:	74 16                	je     644d <rulemgr+0x108>
    6437:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    643b:	8b 50 08             	mov    edx,DWORD PTR [rax+0x8]
    643e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6442:	8b 40 28             	mov    eax,DWORD PTR [rax+0x28]
    6445:	39 c2                	cmp    edx,eax
    6447:	0f 85 37 01 00 00    	jne    6584 <rulemgr+0x23f>
    644d:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6451:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6455:	48 89 d6             	mov    rsi,rdx
    6458:	48 89 c7             	mov    rdi,rax
    645b:	e8 27 fe ff ff       	call   6287 <rule_app>
    6460:	e9 1f 01 00 00       	jmp    6584 <rulemgr+0x23f>
    6465:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6469:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    646c:	83 f8 47             	cmp    eax,0x47
    646f:	74 16                	je     6487 <rulemgr+0x142>
    6471:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6475:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    6478:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    647c:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    647f:	39 c2                	cmp    edx,eax
    6481:	0f 85 fd 00 00 00    	jne    6584 <rulemgr+0x23f>
    6487:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    648b:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    6491:	3d 80 00 00 00       	cmp    eax,0x80
    6496:	75 18                	jne    64b0 <rulemgr+0x16b>
    6498:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    649c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64a0:	48 89 d6             	mov    rsi,rdx
    64a3:	48 89 c7             	mov    rdi,rax
    64a6:	e8 dc fd ff ff       	call   6287 <rule_app>
    64ab:	e9 d4 00 00 00       	jmp    6584 <rulemgr+0x23f>
    64b0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64b4:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    64b7:	83 f8 47             	cmp    eax,0x47
    64ba:	75 79                	jne    6535 <rulemgr+0x1f0>
    64bc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64c0:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    64c3:	83 f8 ff             	cmp    eax,0xffffffff
    64c6:	74 28                	je     64f0 <rulemgr+0x1ab>
    64c8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    64cc:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    64cf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64d3:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    64d6:	39 c2                	cmp    edx,eax
    64d8:	74 16                	je     64f0 <rulemgr+0x1ab>
    64da:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    64de:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    64e1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64e5:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    64e8:	39 c2                	cmp    edx,eax
    64ea:	0f 85 94 00 00 00    	jne    6584 <rulemgr+0x23f>
    64f0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64f4:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    64f7:	83 f8 ff             	cmp    eax,0xffffffff
    64fa:	74 24                	je     6520 <rulemgr+0x1db>
    64fc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6500:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    6503:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6507:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    650a:	39 c2                	cmp    edx,eax
    650c:	74 12                	je     6520 <rulemgr+0x1db>
    650e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6512:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    6515:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6519:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    651c:	39 c2                	cmp    edx,eax
    651e:	75 64                	jne    6584 <rulemgr+0x23f>
    6520:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6524:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6528:	48 89 d6             	mov    rsi,rdx
    652b:	48 89 c7             	mov    rdi,rax
    652e:	e8 54 fd ff ff       	call   6287 <rule_app>
    6533:	eb 4f                	jmp    6584 <rulemgr+0x23f>
    6535:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6539:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    653c:	83 f8 ff             	cmp    eax,0xffffffff
    653f:	74 12                	je     6553 <rulemgr+0x20e>
    6541:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6545:	8b 50 0c             	mov    edx,DWORD PTR [rax+0xc]
    6548:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    654c:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    654f:	39 c2                	cmp    edx,eax
    6551:	75 31                	jne    6584 <rulemgr+0x23f>
    6553:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6557:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    655a:	83 f8 ff             	cmp    eax,0xffffffff
    655d:	74 12                	je     6571 <rulemgr+0x22c>
    655f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6563:	8b 50 08             	mov    edx,DWORD PTR [rax+0x8]
    6566:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    656a:	8b 40 28             	mov    eax,DWORD PTR [rax+0x28]
    656d:	39 c2                	cmp    edx,eax
    656f:	75 13                	jne    6584 <rulemgr+0x23f>
    6571:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6575:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6579:	48 89 d6             	mov    rsi,rdx
    657c:	48 89 c7             	mov    rdi,rax
    657f:	e8 03 fd ff ff       	call   6287 <rule_app>
    6584:	8b 05 8a aa 00 00    	mov    eax,DWORD PTR [rip+0xaa8a]        # 11014 <num_rules>
    658a:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    658d:	0f 8e ce fd ff ff    	jle    6361 <rulemgr+0x1c>
    6593:	90                   	nop
    6594:	90                   	nop
    6595:	c9                   	leave  
    6596:	c3                   	ret    

0000000000006597 <r_engine>:
    6597:	f3 0f 1e fa          	endbr64 
    659b:	55                   	push   rbp
    659c:	48 89 e5             	mov    rbp,rsp
    659f:	48 83 ec 10          	sub    rsp,0x10
    65a3:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    65a7:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    65ab:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    65af:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    65b2:	3d 80 00 00 00       	cmp    eax,0x80
    65b7:	0f 85 d9 00 00 00    	jne    6696 <r_engine+0xff>
    65bd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65c1:	0f b6 80 6f 03 00 00 	movzx  eax,BYTE PTR [rax+0x36f]
    65c8:	84 c0                	test   al,al
    65ca:	74 25                	je     65f1 <r_engine+0x5a>
    65cc:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    65d0:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    65d4:	0f b6 50 01          	movzx  edx,BYTE PTR [rax+0x1]
    65d8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65dc:	0f b6 80 73 03 00 00 	movzx  eax,BYTE PTR [rax+0x373]
    65e3:	38 c2                	cmp    dl,al
    65e5:	74 0a                	je     65f1 <r_engine+0x5a>
    65e7:	b8 00 00 00 00       	mov    eax,0x0
    65ec:	e9 9c 01 00 00       	jmp    678d <r_engine+0x1f6>
    65f1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65f5:	0f b6 80 71 03 00 00 	movzx  eax,BYTE PTR [rax+0x371]
    65fc:	84 c0                	test   al,al
    65fe:	74 26                	je     6626 <r_engine+0x8f>
    6600:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6604:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    6608:	0f b7 50 04          	movzx  edx,WORD PTR [rax+0x4]
    660c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6610:	0f b7 80 76 03 00 00 	movzx  eax,WORD PTR [rax+0x376]
    6617:	66 39 c2             	cmp    dx,ax
    661a:	74 0a                	je     6626 <r_engine+0x8f>
    661c:	b8 00 00 00 00       	mov    eax,0x0
    6621:	e9 67 01 00 00       	jmp    678d <r_engine+0x1f6>
    6626:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    662a:	0f b6 80 70 03 00 00 	movzx  eax,BYTE PTR [rax+0x370]
    6631:	84 c0                	test   al,al
    6633:	74 26                	je     665b <r_engine+0xc4>
    6635:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6639:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    663d:	0f b7 50 06          	movzx  edx,WORD PTR [rax+0x6]
    6641:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6645:	0f b7 80 74 03 00 00 	movzx  eax,WORD PTR [rax+0x374]
    664c:	66 39 c2             	cmp    dx,ax
    664f:	74 0a                	je     665b <r_engine+0xc4>
    6651:	b8 00 00 00 00       	mov    eax,0x0
    6656:	e9 32 01 00 00       	jmp    678d <r_engine+0x1f6>
    665b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    665f:	0f b6 80 6e 03 00 00 	movzx  eax,BYTE PTR [rax+0x36e]
    6666:	84 c0                	test   al,al
    6668:	0f 84 dc 00 00 00    	je     674a <r_engine+0x1b3>
    666e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6672:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    6676:	0f b6 10             	movzx  edx,BYTE PTR [rax]
    6679:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    667d:	0f b6 80 72 03 00 00 	movzx  eax,BYTE PTR [rax+0x372]
    6684:	38 c2                	cmp    dl,al
    6686:	0f 84 be 00 00 00    	je     674a <r_engine+0x1b3>
    668c:	b8 00 00 00 00       	mov    eax,0x0
    6691:	e9 f7 00 00 00       	jmp    678d <r_engine+0x1f6>
    6696:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    669a:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    669d:	83 f8 7e             	cmp    eax,0x7e
    66a0:	0f 85 a4 00 00 00    	jne    674a <r_engine+0x1b3>
    66a6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66aa:	0f b6 80 51 03 00 00 	movzx  eax,BYTE PTR [rax+0x351]
    66b1:	84 c0                	test   al,al
    66b3:	74 2e                	je     66e3 <r_engine+0x14c>
    66b5:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    66b9:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    66bd:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    66c0:	89 c7                	mov    edi,eax
    66c2:	e8 39 bf ff ff       	call   2600 <ntohl@plt>
    66c7:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    66cb:	0f b7 92 5c 03 00 00 	movzx  edx,WORD PTR [rdx+0x35c]
    66d2:	0f b7 d2             	movzx  edx,dx
    66d5:	39 d0                	cmp    eax,edx
    66d7:	74 0a                	je     66e3 <r_engine+0x14c>
    66d9:	b8 00 00 00 00       	mov    eax,0x0
    66de:	e9 aa 00 00 00       	jmp    678d <r_engine+0x1f6>
    66e3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66e7:	0f b6 80 50 03 00 00 	movzx  eax,BYTE PTR [rax+0x350]
    66ee:	84 c0                	test   al,al
    66f0:	74 29                	je     671b <r_engine+0x184>
    66f2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66f6:	48 8d 90 53 03 00 00 	lea    rdx,[rax+0x353]
    66fd:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6701:	48 83 c0 60          	add    rax,0x60
    6705:	48 89 d6             	mov    rsi,rdx
    6708:	48 89 c7             	mov    rdi,rax
    670b:	e8 00 c0 ff ff       	call   2710 <strcmp@plt>
    6710:	85 c0                	test   eax,eax
    6712:	74 07                	je     671b <r_engine+0x184>
    6714:	b8 00 00 00 00       	mov    eax,0x0
    6719:	eb 72                	jmp    678d <r_engine+0x1f6>
    671b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    671f:	0f b6 80 52 03 00 00 	movzx  eax,BYTE PTR [rax+0x352]
    6726:	84 c0                	test   al,al
    6728:	74 20                	je     674a <r_engine+0x1b3>
    672a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    672e:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    6732:	8b 50 04             	mov    edx,DWORD PTR [rax+0x4]
    6735:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6739:	8b 80 60 03 00 00    	mov    eax,DWORD PTR [rax+0x360]
    673f:	39 c2                	cmp    edx,eax
    6741:	74 07                	je     674a <r_engine+0x1b3>
    6743:	b8 00 00 00 00       	mov    eax,0x0
    6748:	eb 43                	jmp    678d <r_engine+0x1f6>
    674a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    674e:	48 8b 40 48          	mov    rax,QWORD PTR [rax+0x48]
    6752:	48 85 c0             	test   rax,rax
    6755:	74 31                	je     6788 <r_engine+0x1f1>
    6757:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    675b:	0f b6 80 69 03 00 00 	movzx  eax,BYTE PTR [rax+0x369]
    6762:	84 c0                	test   al,al
    6764:	74 22                	je     6788 <r_engine+0x1f1>
    6766:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    676a:	48 8b 40 48          	mov    rax,QWORD PTR [rax+0x48]
    676e:	0f b6 50 08          	movzx  edx,BYTE PTR [rax+0x8]
    6772:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6776:	0f b6 80 6c 03 00 00 	movzx  eax,BYTE PTR [rax+0x36c]
    677d:	38 c2                	cmp    dl,al
    677f:	74 07                	je     6788 <r_engine+0x1f1>
    6781:	b8 00 00 00 00       	mov    eax,0x0
    6786:	eb 05                	jmp    678d <r_engine+0x1f6>
    6788:	b8 01 00 00 00       	mov    eax,0x1
    678d:	c9                   	leave  
    678e:	c3                   	ret    

000000000000678f <test_tcp_session_status>:
    678f:	f3 0f 1e fa          	endbr64 
    6793:	55                   	push   rbp
    6794:	48 89 e5             	mov    rbp,rsp
    6797:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    679b:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    679f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67a3:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    67a9:	83 f8 7e             	cmp    eax,0x7e
    67ac:	75 34                	jne    67e2 <test_tcp_session_status+0x53>
    67ae:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    67b2:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    67b5:	83 f8 7e             	cmp    eax,0x7e
    67b8:	75 28                	jne    67e2 <test_tcp_session_status+0x53>
    67ba:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67be:	8b 80 48 03 00 00    	mov    eax,DWORD PTR [rax+0x348]
    67c4:	83 f8 01             	cmp    eax,0x1
    67c7:	75 12                	jne    67db <test_tcp_session_status+0x4c>
    67c9:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    67cd:	8b 40 68             	mov    eax,DWORD PTR [rax+0x68]
    67d0:	85 c0                	test   eax,eax
    67d2:	75 07                	jne    67db <test_tcp_session_status+0x4c>
    67d4:	b8 00 00 00 00       	mov    eax,0x0
    67d9:	eb 0c                	jmp    67e7 <test_tcp_session_status+0x58>
    67db:	b8 01 00 00 00       	mov    eax,0x1
    67e0:	eb 05                	jmp    67e7 <test_tcp_session_status+0x58>
    67e2:	b8 01 00 00 00       	mov    eax,0x1
    67e7:	5d                   	pop    rbp
    67e8:	c3                   	ret    

00000000000067e9 <main>:
    67e9:	f3 0f 1e fa          	endbr64 
    67ed:	55                   	push   rbp
    67ee:	48 89 e5             	mov    rbp,rsp
    67f1:	48 81 ec 40 08 00 00 	sub    rsp,0x840
    67f8:	89 bd cc f7 ff ff    	mov    DWORD PTR [rbp-0x834],edi
    67fe:	48 89 b5 c0 f7 ff ff 	mov    QWORD PTR [rbp-0x840],rsi
    6805:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    680c:	00 00 
    680e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    6812:	31 c0                	xor    eax,eax
    6814:	b8 00 00 00 00       	mov    eax,0x0
    6819:	e8 7c 4a 00 00       	call   b29a <load_fn_mem_map>
    681e:	48 8d 35 d3 02 00 00 	lea    rsi,[rip+0x2d3]        # 6af8 <sigint_processor>
    6825:	bf 02 00 00 00       	mov    edi,0x2
    682a:	e8 71 be ff ff       	call   26a0 <signal@plt>
    682f:	48 8d 05 8e 46 00 00 	lea    rax,[rip+0x468e]        # aec4 <crash_handler>
    6836:	48 89 c6             	mov    rsi,rax
    6839:	bf 0b 00 00 00       	mov    edi,0xb
    683e:	e8 5d be ff ff       	call   26a0 <signal@plt>
    6843:	b8 00 00 00 00       	mov    eax,0x0
    6848:	e8 d8 08 00 00       	call   7125 <print_logo>
    684d:	b8 00 00 00 00       	mov    eax,0x0
    6852:	e8 1c 07 00 00       	call   6f73 <print_cpu_info>
    6857:	c7 05 47 aa 00 00 01 	mov    DWORD PTR [rip+0xaa47],0x1        # 112a8 <is_running>
    685e:	00 00 00 
    6861:	bf 00 00 00 00       	mov    edi,0x0
    6866:	e8 c5 bf ff ff       	call   2830 <time@plt>
    686b:	48 89 05 3e aa 00 00 	mov    QWORD PTR [rip+0xaa3e],rax        # 112b0 <last_clean_time>
    6872:	83 bd cc f7 ff ff 01 	cmp    DWORD PTR [rbp-0x834],0x1
    6879:	0f 85 e3 00 00 00    	jne    6962 <main+0x179>
    687f:	b8 00 00 00 00       	mov    eax,0x0
    6884:	e8 c0 06 00 00       	call   6f49 <print_help_and_exit>
    6889:	e9 d4 00 00 00       	jmp    6962 <main+0x179>
    688e:	8b 85 dc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x824]
    6894:	83 e8 64             	sub    eax,0x64
    6897:	83 f8 10             	cmp    eax,0x10
    689a:	0f 87 9e 00 00 00    	ja     693e <main+0x155>
    68a0:	89 c0                	mov    eax,eax
    68a2:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    68a9:	00 
    68aa:	48 8d 05 4b 67 00 00 	lea    rax,[rip+0x674b]        # cffc <_IO_stdin_used+0xffc>
    68b1:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    68b4:	48 98                	cdqe   
    68b6:	48 8d 15 3f 67 00 00 	lea    rdx,[rip+0x673f]        # cffc <_IO_stdin_used+0xffc>
    68bd:	48 01 d0             	add    rax,rdx
    68c0:	3e ff e0             	notrack jmp rax
    68c3:	c6 05 56 36 10 00 01 	mov    BYTE PTR [rip+0x103656],0x1        # 109f20 <debug_mode>
    68ca:	e9 93 00 00 00       	jmp    6962 <main+0x179>
    68cf:	b8 00 00 00 00       	mov    eax,0x0
    68d4:	e8 70 06 00 00       	call   6f49 <print_help_and_exit>
    68d9:	e9 84 00 00 00       	jmp    6962 <main+0x179>
    68de:	48 8b 05 7b a7 00 00 	mov    rax,QWORD PTR [rip+0xa77b]        # 11060 <optarg@@GLIBC_2.2.5>
    68e5:	48 89 85 e0 f7 ff ff 	mov    QWORD PTR [rbp-0x820],rax
    68ec:	eb 74                	jmp    6962 <main+0x179>
    68ee:	c6 05 6f 36 10 00 01 	mov    BYTE PTR [rip+0x10366f],0x1        # 109f64 <packet_print>
    68f5:	eb 6b                	jmp    6962 <main+0x179>
    68f7:	c6 05 67 36 10 00 01 	mov    BYTE PTR [rip+0x103667],0x1        # 109f65 <quiet_exit>
    68fe:	eb 62                	jmp    6962 <main+0x179>
    6900:	48 8d 3d 19 65 00 00 	lea    rdi,[rip+0x6519]        # ce20 <_IO_stdin_used+0xe20>
    6907:	e8 a4 bb ff ff       	call   24b0 <puts@plt>
    690c:	bf 0a 00 00 00       	mov    edi,0xa
    6911:	e8 fa bc ff ff       	call   2610 <sleep@plt>
    6916:	c6 05 63 a7 00 00 01 	mov    BYTE PTR [rip+0xa763],0x1        # 11080 <demo_mode>
    691d:	eb 43                	jmp    6962 <main+0x179>
    691f:	48 8d 3d 3a 65 00 00 	lea    rdi,[rip+0x653a]        # ce60 <_IO_stdin_used+0xe60>
    6926:	e8 85 bb ff ff       	call   24b0 <puts@plt>
    692b:	bf 0a 00 00 00       	mov    edi,0xa
    6930:	e8 db bc ff ff       	call   2610 <sleep@plt>
    6935:	c6 05 90 36 10 00 01 	mov    BYTE PTR [rip+0x103690],0x1        # 109fcc <in_test_mode>
    693c:	eb 24                	jmp    6962 <main+0x179>
    693e:	8b 85 dc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x824]
    6944:	89 c6                	mov    esi,eax
    6946:	48 8d 3d 47 65 00 00 	lea    rdi,[rip+0x6547]        # ce94 <_IO_stdin_used+0xe94>
    694d:	b8 00 00 00 00       	mov    eax,0x0
    6952:	e8 09 bb ff ff       	call   2460 <printf@plt>
    6957:	b8 00 00 00 00       	mov    eax,0x0
    695c:	e8 e8 05 00 00       	call   6f49 <print_help_and_exit>
    6961:	90                   	nop
    6962:	48 8b 8d c0 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x840]
    6969:	8b 85 cc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x834]
    696f:	48 8d 15 34 65 00 00 	lea    rdx,[rip+0x6534]        # ceaa <_IO_stdin_used+0xeaa>
    6976:	48 89 ce             	mov    rsi,rcx
    6979:	89 c7                	mov    edi,eax
    697b:	e8 80 bb ff ff       	call   2500 <getopt@plt>
    6980:	89 85 dc f7 ff ff    	mov    DWORD PTR [rbp-0x824],eax
    6986:	83 bd dc f7 ff ff ff 	cmp    DWORD PTR [rbp-0x824],0xffffffff
    698d:	0f 85 fb fe ff ff    	jne    688e <main+0xa5>
    6993:	48 8d 3d 19 65 00 00 	lea    rdi,[rip+0x6519]        # ceb3 <_IO_stdin_used+0xeb3>
    699a:	e8 27 f7 ff ff       	call   60c6 <deny_conf_parser>
    699f:	48 8d 3d 22 65 00 00 	lea    rdi,[rip+0x6522]        # cec8 <_IO_stdin_used+0xec8>
    69a6:	e8 05 bb ff ff       	call   24b0 <puts@plt>
    69ab:	b8 00 00 00 00       	mov    eax,0x0
    69b0:	e8 cf 12 00 00       	call   7c84 <load_csv_arp_cache>
    69b5:	83 f8 ff             	cmp    eax,0xffffffff
    69b8:	74 0e                	je     69c8 <main+0x1df>
    69ba:	48 8d 3d 47 65 00 00 	lea    rdi,[rip+0x6547]        # cf08 <_IO_stdin_used+0xf08>
    69c1:	e8 ea ba ff ff       	call   24b0 <puts@plt>
    69c6:	eb 0c                	jmp    69d4 <main+0x1eb>
    69c8:	48 8d 3d 59 65 00 00 	lea    rdi,[rip+0x6559]        # cf28 <_IO_stdin_used+0xf28>
    69cf:	e8 dc ba ff ff       	call   24b0 <puts@plt>
    69d4:	48 8d 3d 7e 65 00 00 	lea    rdi,[rip+0x657e]        # cf59 <_IO_stdin_used+0xf59>
    69db:	e8 ba ee ff ff       	call   589a <rule_library_parser>
    69e0:	48 8d 3d 88 65 00 00 	lea    rdi,[rip+0x6588]        # cf6f <_IO_stdin_used+0xf6f>
    69e7:	e8 c4 ba ff ff       	call   24b0 <puts@plt>
    69ec:	b8 00 00 00 00       	mov    eax,0x0
    69f1:	e8 64 3a 00 00       	call   a45a <rule_processor>
    69f6:	48 8b 85 e0 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x820]
    69fd:	48 89 c6             	mov    rsi,rax
    6a00:	48 8d 3d 81 65 00 00 	lea    rdi,[rip+0x6581]        # cf88 <_IO_stdin_used+0xf88>
    6a07:	b8 00 00 00 00       	mov    eax,0x0
    6a0c:	e8 4f ba ff ff       	call   2460 <printf@plt>
    6a11:	48 c7 85 f0 f7 ff ff 	mov    QWORD PTR [rbp-0x810],0x0
    6a18:	00 00 00 00 
    6a1c:	48 c7 85 f8 f7 ff ff 	mov    QWORD PTR [rbp-0x808],0x0
    6a23:	00 00 00 00 
    6a27:	48 8d 95 00 f8 ff ff 	lea    rdx,[rbp-0x800]
    6a2e:	b8 00 00 00 00       	mov    eax,0x0
    6a33:	b9 fd 00 00 00       	mov    ecx,0xfd
    6a38:	48 89 d7             	mov    rdi,rdx
    6a3b:	f3 48 ab             	rep stos QWORD PTR es:[rdi],rax
    6a3e:	48 89 fa             	mov    rdx,rdi
    6a41:	89 02                	mov    DWORD PTR [rdx],eax
    6a43:	48 83 c2 04          	add    rdx,0x4
    6a47:	66 89 02             	mov    WORD PTR [rdx],ax
    6a4a:	48 83 c2 02          	add    rdx,0x2
    6a4e:	48 8d 95 f0 f7 ff ff 	lea    rdx,[rbp-0x810]
    6a55:	48 8b 85 e0 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x820]
    6a5c:	49 89 d0             	mov    r8,rdx
    6a5f:	b9 64 00 00 00       	mov    ecx,0x64
    6a64:	ba 01 00 00 00       	mov    edx,0x1
    6a69:	be 00 04 00 00       	mov    esi,0x400
    6a6e:	48 89 c7             	mov    rdi,rax
    6a71:	e8 da ba ff ff       	call   2550 <pcap_open_live@plt>
    6a76:	48 89 85 e8 f7 ff ff 	mov    QWORD PTR [rbp-0x818],rax
    6a7d:	48 83 bd e8 f7 ff ff 	cmp    QWORD PTR [rbp-0x818],0x0
    6a84:	00 
    6a85:	75 16                	jne    6a9d <main+0x2b4>
    6a87:	48 8d 3d 1b 65 00 00 	lea    rdi,[rip+0x651b]        # cfa9 <_IO_stdin_used+0xfa9>
    6a8e:	e8 3d bd ff ff       	call   27d0 <perror@plt>
    6a93:	bf 01 00 00 00       	mov    edi,0x1
    6a98:	e8 33 ba ff ff       	call   24d0 <exit@plt>
    6a9d:	b8 00 00 00 00       	mov    eax,0x0
    6aa2:	e8 e7 41 00 00       	call   ac8e <collect_scripts>
    6aa7:	b8 00 00 00 00       	mov    eax,0x0
    6aac:	e8 8b 06 00 00       	call   713c <start_nsh_server>
    6ab1:	48 8d 3d 10 65 00 00 	lea    rdi,[rip+0x6510]        # cfc8 <_IO_stdin_used+0xfc8>
    6ab8:	e8 f3 b9 ff ff       	call   24b0 <puts@plt>
    6abd:	48 8b 85 e8 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x818]
    6ac4:	b9 00 00 00 00       	mov    ecx,0x0
    6ac9:	48 8d 15 93 be ff ff 	lea    rdx,[rip+0xffffffffffffbe93]        # 2963 <pktmgr>
    6ad0:	be ff ff ff ff       	mov    esi,0xffffffff
    6ad5:	48 89 c7             	mov    rdi,rax
    6ad8:	e8 d3 bc ff ff       	call   27b0 <pcap_loop@plt>
    6add:	b8 00 00 00 00       	mov    eax,0x0
    6ae2:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    6ae6:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    6aed:	00 00 
    6aef:	74 05                	je     6af6 <main+0x30d>
    6af1:	e8 0a bc ff ff       	call   2700 <__stack_chk_fail@plt>
    6af6:	c9                   	leave  
    6af7:	c3                   	ret    

0000000000006af8 <sigint_processor>:
    6af8:	f3 0f 1e fa          	endbr64 
    6afc:	55                   	push   rbp
    6afd:	48 89 e5             	mov    rbp,rsp
    6b00:	41 54                	push   r12
    6b02:	53                   	push   rbx
    6b03:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    6b0a:	89 bd bc fe ff ff    	mov    DWORD PTR [rbp-0x144],edi
    6b10:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6b17:	00 00 
    6b19:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    6b1d:	31 c0                	xor    eax,eax
    6b1f:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    6b26:	00 00 00 
    6b29:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    6b30:	48 89 c7             	mov    rdi,rax
    6b33:	e8 9b c8 ff ff       	call   33d3 <cb_get_formatted_time>
    6b38:	48 8d 95 e0 fe ff ff 	lea    rdx,[rbp-0x120]
    6b3f:	8b 85 bc fe ff ff    	mov    eax,DWORD PTR [rbp-0x144]
    6b45:	89 c6                	mov    esi,eax
    6b47:	48 8d 3d f2 64 00 00 	lea    rdi,[rip+0x64f2]        # d040 <_IO_stdin_used+0x1040>
    6b4e:	b8 00 00 00 00       	mov    eax,0x0
    6b53:	e8 08 b9 ff ff       	call   2460 <printf@plt>
    6b58:	48 8d 3d 06 65 00 00 	lea    rdi,[rip+0x6506]        # d065 <_IO_stdin_used+0x1065>
    6b5f:	e8 6c bc ff ff       	call   27d0 <perror@plt>
    6b64:	0f b6 05 fa 33 10 00 	movzx  eax,BYTE PTR [rip+0x1033fa]        # 109f65 <quiet_exit>
    6b6b:	83 f0 01             	xor    eax,0x1
    6b6e:	84 c0                	test   al,al
    6b70:	0f 84 2e 02 00 00    	je     6da4 <sigint_processor+0x2ac>
    6b76:	8b 05 28 a7 00 00    	mov    eax,DWORD PTR [rip+0xa728]        # 112a4 <total_pkt_captured>
    6b7c:	89 c6                	mov    esi,eax
    6b7e:	48 8d 3d e1 64 00 00 	lea    rdi,[rip+0x64e1]        # d066 <_IO_stdin_used+0x1066>
    6b85:	b8 00 00 00 00       	mov    eax,0x0
    6b8a:	e8 d1 b8 ff ff       	call   2460 <printf@plt>
    6b8f:	48 8d 3d ea 64 00 00 	lea    rdi,[rip+0x64ea]        # d080 <_IO_stdin_used+0x1080>
    6b96:	e8 15 b9 ff ff       	call   24b0 <puts@plt>
    6b9b:	c7 85 c4 fe ff ff 00 	mov    DWORD PTR [rbp-0x13c],0x0
    6ba2:	00 00 00 
    6ba5:	e9 e8 01 00 00       	jmp    6d92 <sigint_processor+0x29a>
    6baa:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6bb0:	48 63 d0             	movsxd rdx,eax
    6bb3:	48 89 d0             	mov    rax,rdx
    6bb6:	48 c1 e0 02          	shl    rax,0x2
    6bba:	48 01 d0             	add    rax,rdx
    6bbd:	48 c1 e0 03          	shl    rax,0x3
    6bc1:	48 01 d0             	add    rax,rdx
    6bc4:	48 c1 e0 04          	shl    rax,0x4
    6bc8:	48 89 c2             	mov    rdx,rax
    6bcb:	48 8d 05 be cb 0e 00 	lea    rax,[rip+0xecbbe]        # f3790 <watchlist+0x270>
    6bd2:	44 8b 1c 02          	mov    r11d,DWORD PTR [rdx+rax*1]
    6bd6:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6bdc:	48 63 d0             	movsxd rdx,eax
    6bdf:	48 89 d0             	mov    rax,rdx
    6be2:	48 c1 e0 02          	shl    rax,0x2
    6be6:	48 01 d0             	add    rax,rdx
    6be9:	48 c1 e0 03          	shl    rax,0x3
    6bed:	48 01 d0             	add    rax,rdx
    6bf0:	48 c1 e0 04          	shl    rax,0x4
    6bf4:	48 89 c2             	mov    rdx,rax
    6bf7:	48 8d 05 86 cb 0e 00 	lea    rax,[rip+0xecb86]        # f3784 <watchlist+0x264>
    6bfe:	44 8b 14 02          	mov    r10d,DWORD PTR [rdx+rax*1]
    6c02:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6c08:	48 63 d0             	movsxd rdx,eax
    6c0b:	48 89 d0             	mov    rax,rdx
    6c0e:	48 c1 e0 02          	shl    rax,0x2
    6c12:	48 01 d0             	add    rax,rdx
    6c15:	48 c1 e0 03          	shl    rax,0x3
    6c19:	48 01 d0             	add    rax,rdx
    6c1c:	48 c1 e0 04          	shl    rax,0x4
    6c20:	48 89 c2             	mov    rdx,rax
    6c23:	48 8d 05 62 cb 0e 00 	lea    rax,[rip+0xecb62]        # f378c <watchlist+0x26c>
    6c2a:	44 8b 0c 02          	mov    r9d,DWORD PTR [rdx+rax*1]
    6c2e:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6c34:	48 63 d0             	movsxd rdx,eax
    6c37:	48 89 d0             	mov    rax,rdx
    6c3a:	48 c1 e0 02          	shl    rax,0x2
    6c3e:	48 01 d0             	add    rax,rdx
    6c41:	48 c1 e0 03          	shl    rax,0x3
    6c45:	48 01 d0             	add    rax,rdx
    6c48:	48 c1 e0 04          	shl    rax,0x4
    6c4c:	48 89 c2             	mov    rdx,rax
    6c4f:	48 8d 05 2a cb 0e 00 	lea    rax,[rip+0xecb2a]        # f3780 <watchlist+0x260>
    6c56:	44 8b 04 02          	mov    r8d,DWORD PTR [rdx+rax*1]
    6c5a:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6c60:	48 63 d0             	movsxd rdx,eax
    6c63:	48 89 d0             	mov    rax,rdx
    6c66:	48 c1 e0 02          	shl    rax,0x2
    6c6a:	48 01 d0             	add    rax,rdx
    6c6d:	48 c1 e0 03          	shl    rax,0x3
    6c71:	48 01 d0             	add    rax,rdx
    6c74:	48 c1 e0 04          	shl    rax,0x4
    6c78:	48 89 c2             	mov    rdx,rax
    6c7b:	48 8d 05 06 cb 0e 00 	lea    rax,[rip+0xecb06]        # f3788 <watchlist+0x268>
    6c82:	8b 3c 02             	mov    edi,DWORD PTR [rdx+rax*1]
    6c85:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6c8b:	48 63 d0             	movsxd rdx,eax
    6c8e:	48 89 d0             	mov    rax,rdx
    6c91:	48 c1 e0 02          	shl    rax,0x2
    6c95:	48 01 d0             	add    rax,rdx
    6c98:	48 c1 e0 03          	shl    rax,0x3
    6c9c:	48 01 d0             	add    rax,rdx
    6c9f:	48 c1 e0 04          	shl    rax,0x4
    6ca3:	48 89 c2             	mov    rdx,rax
    6ca6:	48 8d 05 cf ca 0e 00 	lea    rax,[rip+0xecacf]        # f377c <watchlist+0x25c>
    6cad:	44 8b 24 02          	mov    r12d,DWORD PTR [rdx+rax*1]
    6cb1:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6cb7:	48 63 d0             	movsxd rdx,eax
    6cba:	48 89 d0             	mov    rax,rdx
    6cbd:	48 c1 e0 02          	shl    rax,0x2
    6cc1:	48 01 d0             	add    rax,rdx
    6cc4:	48 c1 e0 03          	shl    rax,0x3
    6cc8:	48 01 d0             	add    rax,rdx
    6ccb:	48 c1 e0 04          	shl    rax,0x4
    6ccf:	48 89 c2             	mov    rdx,rax
    6cd2:	48 8d 05 c3 ca 0e 00 	lea    rax,[rip+0xecac3]        # f379c <watchlist+0x27c>
    6cd9:	8b 1c 02             	mov    ebx,DWORD PTR [rdx+rax*1]
    6cdc:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6ce2:	48 63 d0             	movsxd rdx,eax
    6ce5:	48 89 d0             	mov    rax,rdx
    6ce8:	48 c1 e0 02          	shl    rax,0x2
    6cec:	48 01 d0             	add    rax,rdx
    6cef:	48 c1 e0 03          	shl    rax,0x3
    6cf3:	48 01 d0             	add    rax,rdx
    6cf6:	48 c1 e0 04          	shl    rax,0x4
    6cfa:	48 89 c2             	mov    rdx,rax
    6cfd:	48 8d 05 9c ca 0e 00 	lea    rax,[rip+0xeca9c]        # f37a0 <watchlist+0x280>
    6d04:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
    6d07:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6d0d:	48 63 d0             	movsxd rdx,eax
    6d10:	48 89 d0             	mov    rax,rdx
    6d13:	48 c1 e0 02          	shl    rax,0x2
    6d17:	48 01 d0             	add    rax,rdx
    6d1a:	48 c1 e0 03          	shl    rax,0x3
    6d1e:	48 01 d0             	add    rax,rdx
    6d21:	48 c1 e0 04          	shl    rax,0x4
    6d25:	48 89 c2             	mov    rdx,rax
    6d28:	48 8d 05 49 ca 0e 00 	lea    rax,[rip+0xeca49]        # f3778 <watchlist+0x258>
    6d2f:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
    6d32:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6d38:	48 63 d0             	movsxd rdx,eax
    6d3b:	48 89 d0             	mov    rax,rdx
    6d3e:	48 c1 e0 02          	shl    rax,0x2
    6d42:	48 01 d0             	add    rax,rdx
    6d45:	48 c1 e0 03          	shl    rax,0x3
    6d49:	48 01 d0             	add    rax,rdx
    6d4c:	48 c1 e0 04          	shl    rax,0x4
    6d50:	48 8d 15 c9 c7 0e 00 	lea    rdx,[rip+0xec7c9]        # f3520 <watchlist>
    6d57:	48 01 d0             	add    rax,rdx
    6d5a:	48 83 c0 08          	add    rax,0x8
    6d5e:	48 83 ec 08          	sub    rsp,0x8
    6d62:	41 53                	push   r11
    6d64:	41 52                	push   r10
    6d66:	41 51                	push   r9
    6d68:	41 50                	push   r8
    6d6a:	57                   	push   rdi
    6d6b:	45 89 e1             	mov    r9d,r12d
    6d6e:	41 89 d8             	mov    r8d,ebx
    6d71:	89 f2                	mov    edx,esi
    6d73:	48 89 c6             	mov    rsi,rax
    6d76:	48 8d 3d 3b 63 00 00 	lea    rdi,[rip+0x633b]        # d0b8 <_IO_stdin_used+0x10b8>
    6d7d:	b8 00 00 00 00       	mov    eax,0x0
    6d82:	e8 d9 b6 ff ff       	call   2460 <printf@plt>
    6d87:	48 83 c4 30          	add    rsp,0x30
    6d8b:	83 85 c4 fe ff ff 01 	add    DWORD PTR [rbp-0x13c],0x1
    6d92:	8b 05 80 a2 00 00    	mov    eax,DWORD PTR [rip+0xa280]        # 11018 <watchlist_num>
    6d98:	39 85 c4 fe ff ff    	cmp    DWORD PTR [rbp-0x13c],eax
    6d9e:	0f 8e 06 fe ff ff    	jle    6baa <sigint_processor+0xb2>
    6da4:	48 8d 35 ad 63 00 00 	lea    rsi,[rip+0x63ad]        # d158 <_IO_stdin_used+0x1158>
    6dab:	48 8d 3d a8 63 00 00 	lea    rdi,[rip+0x63a8]        # d15a <_IO_stdin_used+0x115a>
    6db2:	e8 79 b7 ff ff       	call   2530 <fopen@plt>
    6db7:	48 89 85 d8 fe ff ff 	mov    QWORD PTR [rbp-0x128],rax
    6dbe:	48 83 bd d8 fe ff ff 	cmp    QWORD PTR [rbp-0x128],0x0
    6dc5:	00 
    6dc6:	0f 85 99 00 00 00    	jne    6e65 <sigint_processor+0x36d>
    6dcc:	48 8d 3d a5 63 00 00 	lea    rdi,[rip+0x63a5]        # d178 <_IO_stdin_used+0x1178>
    6dd3:	e8 d8 b6 ff ff       	call   24b0 <puts@plt>
    6dd8:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    6ddf:	48 89 c7             	mov    rdi,rax
    6de2:	e8 89 b9 ff ff       	call   2770 <fclose@plt>
    6de7:	c7 85 c8 fe ff ff 00 	mov    DWORD PTR [rbp-0x138],0x0
    6dee:	00 00 00 
    6df1:	eb 5f                	jmp    6e52 <sigint_processor+0x35a>
    6df3:	8b 85 c8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x138]
    6df9:	48 63 d0             	movsxd rdx,eax
    6dfc:	48 89 d0             	mov    rax,rdx
    6dff:	48 c1 e0 04          	shl    rax,0x4
    6e03:	48 01 d0             	add    rax,rdx
    6e06:	48 01 c0             	add    rax,rax
    6e09:	48 8d 50 10          	lea    rdx,[rax+0x10]
    6e0d:	48 8d 05 0c 0f 10 00 	lea    rax,[rip+0x100f0c]        # 107d20 <arpcache>
    6e14:	48 01 c2             	add    rdx,rax
    6e17:	8b 85 c8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x138]
    6e1d:	48 63 c8             	movsxd rcx,eax
    6e20:	48 89 c8             	mov    rax,rcx
    6e23:	48 c1 e0 04          	shl    rax,0x4
    6e27:	48 01 c8             	add    rax,rcx
    6e2a:	48 01 c0             	add    rax,rax
    6e2d:	48 8d 0d ec 0e 10 00 	lea    rcx,[rip+0x100eec]        # 107d20 <arpcache>
    6e34:	48 01 c8             	add    rax,rcx
    6e37:	48 89 c6             	mov    rsi,rax
    6e3a:	48 8d 3d 7e 63 00 00 	lea    rdi,[rip+0x637e]        # d1bf <_IO_stdin_used+0x11bf>
    6e41:	b8 00 00 00 00       	mov    eax,0x0
    6e46:	e8 15 b6 ff ff       	call   2460 <printf@plt>
    6e4b:	83 85 c8 fe ff ff 01 	add    DWORD PTR [rbp-0x138],0x1
    6e52:	8b 05 c4 a1 00 00    	mov    eax,DWORD PTR [rip+0xa1c4]        # 1101c <arp_entries>
    6e58:	39 85 c8 fe ff ff    	cmp    DWORD PTR [rbp-0x138],eax
    6e5e:	7e 93                	jle    6df3 <sigint_processor+0x2fb>
    6e60:	e9 da 00 00 00       	jmp    6f3f <sigint_processor+0x447>
    6e65:	c7 85 cc fe ff ff 00 	mov    DWORD PTR [rbp-0x134],0x0
    6e6c:	00 00 00 
    6e6f:	eb 67                	jmp    6ed8 <sigint_processor+0x3e0>
    6e71:	8b 85 cc fe ff ff    	mov    eax,DWORD PTR [rbp-0x134]
    6e77:	48 63 d0             	movsxd rdx,eax
    6e7a:	48 89 d0             	mov    rax,rdx
    6e7d:	48 c1 e0 04          	shl    rax,0x4
    6e81:	48 01 d0             	add    rax,rdx
    6e84:	48 01 c0             	add    rax,rax
    6e87:	48 8d 50 10          	lea    rdx,[rax+0x10]
    6e8b:	48 8d 05 8e 0e 10 00 	lea    rax,[rip+0x100e8e]        # 107d20 <arpcache>
    6e92:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    6e96:	8b 85 cc fe ff ff    	mov    eax,DWORD PTR [rbp-0x134]
    6e9c:	48 63 d0             	movsxd rdx,eax
    6e9f:	48 89 d0             	mov    rax,rdx
    6ea2:	48 c1 e0 04          	shl    rax,0x4
    6ea6:	48 01 d0             	add    rax,rdx
    6ea9:	48 01 c0             	add    rax,rax
    6eac:	48 8d 15 6d 0e 10 00 	lea    rdx,[rip+0x100e6d]        # 107d20 <arpcache>
    6eb3:	48 01 c2             	add    rdx,rax
    6eb6:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    6ebd:	48 8d 35 05 63 00 00 	lea    rsi,[rip+0x6305]        # d1c9 <_IO_stdin_used+0x11c9>
    6ec4:	48 89 c7             	mov    rdi,rax
    6ec7:	b8 00 00 00 00       	mov    eax,0x0
    6ecc:	e8 0f b9 ff ff       	call   27e0 <fprintf@plt>
    6ed1:	83 85 cc fe ff ff 01 	add    DWORD PTR [rbp-0x134],0x1
    6ed8:	8b 05 3e a1 00 00    	mov    eax,DWORD PTR [rip+0xa13e]        # 1101c <arp_entries>
    6ede:	39 85 cc fe ff ff    	cmp    DWORD PTR [rbp-0x134],eax
    6ee4:	7e 8b                	jle    6e71 <sigint_processor+0x379>
    6ee6:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    6eed:	48 89 c7             	mov    rdi,rax
    6ef0:	e8 7b b8 ff ff       	call   2770 <fclose@plt>
    6ef5:	c7 85 d0 fe ff ff 00 	mov    DWORD PTR [rbp-0x130],0x0
    6efc:	00 00 00 
    6eff:	eb 2f                	jmp    6f30 <sigint_processor+0x438>
    6f01:	8b 85 d0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x130]
    6f07:	48 98                	cdqe   
    6f09:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    6f10:	00 
    6f11:	48 8d 05 88 a1 00 00 	lea    rax,[rip+0xa188]        # 110a0 <threads>
    6f18:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    6f1c:	be 00 00 00 00       	mov    esi,0x0
    6f21:	48 89 c7             	mov    rdi,rax
    6f24:	e8 27 b5 ff ff       	call   2450 <pthread_join@plt>
    6f29:	83 85 d0 fe ff ff 01 	add    DWORD PTR [rbp-0x130],0x1
    6f30:	8b 05 6a a3 00 00    	mov    eax,DWORD PTR [rip+0xa36a]        # 112a0 <thread_count>
    6f36:	39 85 d0 fe ff ff    	cmp    DWORD PTR [rbp-0x130],eax
    6f3c:	7c c3                	jl     6f01 <sigint_processor+0x409>
    6f3e:	90                   	nop
    6f3f:	bf 00 00 00 00       	mov    edi,0x0
    6f44:	e8 87 b5 ff ff       	call   24d0 <exit@plt>

0000000000006f49 <print_help_and_exit>:
    6f49:	f3 0f 1e fa          	endbr64 
    6f4d:	55                   	push   rbp
    6f4e:	48 89 e5             	mov    rbp,rsp
    6f51:	48 8d 35 78 62 00 00 	lea    rsi,[rip+0x6278]        # d1d0 <_IO_stdin_used+0x11d0>
    6f58:	48 8d 3d 79 62 00 00 	lea    rdi,[rip+0x6279]        # d1d8 <_IO_stdin_used+0x11d8>
    6f5f:	b8 00 00 00 00       	mov    eax,0x0
    6f64:	e8 f7 b4 ff ff       	call   2460 <printf@plt>
    6f69:	bf 00 00 00 00       	mov    edi,0x0
    6f6e:	e8 5d b5 ff ff       	call   24d0 <exit@plt>

0000000000006f73 <print_cpu_info>:
    6f73:	f3 0f 1e fa          	endbr64 
    6f77:	55                   	push   rbp
    6f78:	48 89 e5             	mov    rbp,rsp
    6f7b:	53                   	push   rbx
    6f7c:	48 81 ec 48 02 00 00 	sub    rsp,0x248
    6f83:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6f8a:	00 00 
    6f8c:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    6f90:	31 c0                	xor    eax,eax
    6f92:	48 8d 35 c6 62 00 00 	lea    rsi,[rip+0x62c6]        # d25f <_IO_stdin_used+0x125f>
    6f99:	48 8d 3d c2 62 00 00 	lea    rdi,[rip+0x62c2]        # d262 <_IO_stdin_used+0x1262>
    6fa0:	e8 8b b5 ff ff       	call   2530 <fopen@plt>
    6fa5:	48 89 85 d8 fd ff ff 	mov    QWORD PTR [rbp-0x228],rax
    6fac:	48 c7 85 c8 fd ff ff 	mov    QWORD PTR [rbp-0x238],0x0
    6fb3:	00 00 00 00 
    6fb7:	48 c7 85 d0 fd ff ff 	mov    QWORD PTR [rbp-0x230],0x0
    6fbe:	00 00 00 00 
    6fc2:	c7 85 bc fd ff ff 00 	mov    DWORD PTR [rbp-0x244],0x0
    6fc9:	00 00 00 
    6fcc:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    6fd3:	ba 00 02 00 00       	mov    edx,0x200
    6fd8:	be 00 00 00 00       	mov    esi,0x0
    6fdd:	48 89 c7             	mov    rdi,rax
    6fe0:	e8 8b b4 ff ff       	call   2470 <memset@plt>
    6fe5:	e9 b3 00 00 00       	jmp    709d <print_cpu_info+0x12a>
    6fea:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    6ff1:	ba 0a 00 00 00       	mov    edx,0xa
    6ff6:	48 89 c6             	mov    rsi,rax
    6ff9:	48 8d 3d 70 62 00 00 	lea    rdi,[rip+0x6270]        # d270 <_IO_stdin_used+0x1270>
    7000:	e8 0b b5 ff ff       	call   2510 <strncmp@plt>
    7005:	85 c0                	test   eax,eax
    7007:	0f 85 90 00 00 00    	jne    709d <print_cpu_info+0x12a>
    700d:	c7 85 c0 fd ff ff 00 	mov    DWORD PTR [rbp-0x240],0x0
    7014:	00 00 00 
    7017:	c7 85 c4 fd ff ff 00 	mov    DWORD PTR [rbp-0x23c],0x0
    701e:	00 00 00 
    7021:	eb 2e                	jmp    7051 <print_cpu_info+0xde>
    7023:	48 8b 95 c8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x238]
    702a:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    7030:	48 98                	cdqe   
    7032:	48 01 d0             	add    rax,rdx
    7035:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    7038:	3c 3a                	cmp    al,0x3a
    703a:	75 0e                	jne    704a <print_cpu_info+0xd7>
    703c:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    7042:	89 85 c0 fd ff ff    	mov    DWORD PTR [rbp-0x240],eax
    7048:	eb 24                	jmp    706e <print_cpu_info+0xfb>
    704a:	83 85 c4 fd ff ff 01 	add    DWORD PTR [rbp-0x23c],0x1
    7051:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    7057:	48 63 d8             	movsxd rbx,eax
    705a:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    7061:	48 89 c7             	mov    rdi,rax
    7064:	e8 57 b5 ff ff       	call   25c0 <strlen@plt>
    7069:	48 39 c3             	cmp    rbx,rax
    706c:	72 b5                	jb     7023 <print_cpu_info+0xb0>
    706e:	83 85 bc fd ff ff 01 	add    DWORD PTR [rbp-0x244],0x1
    7075:	48 8b 95 c8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x238]
    707c:	8b 85 c0 fd ff ff    	mov    eax,DWORD PTR [rbp-0x240]
    7082:	48 98                	cdqe   
    7084:	48 83 c0 02          	add    rax,0x2
    7088:	48 01 c2             	add    rdx,rax
    708b:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    7092:	48 89 d6             	mov    rsi,rdx
    7095:	48 89 c7             	mov    rdi,rax
    7098:	e8 a3 b5 ff ff       	call   2640 <strcat@plt>
    709d:	48 8b 95 d8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x228]
    70a4:	48 8d b5 d0 fd ff ff 	lea    rsi,[rbp-0x230]
    70ab:	48 8d 85 c8 fd ff ff 	lea    rax,[rbp-0x238]
    70b2:	48 89 d1             	mov    rcx,rdx
    70b5:	ba 0a 00 00 00       	mov    edx,0xa
    70ba:	48 89 c7             	mov    rdi,rax
    70bd:	e8 3e b7 ff ff       	call   2800 <getdelim@plt>
    70c2:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
    70c6:	0f 85 1e ff ff ff    	jne    6fea <print_cpu_info+0x77>
    70cc:	48 8d 95 e0 fd ff ff 	lea    rdx,[rbp-0x220]
    70d3:	8b 85 bc fd ff ff    	mov    eax,DWORD PTR [rbp-0x244]
    70d9:	89 c6                	mov    esi,eax
    70db:	48 8d 3d 99 61 00 00 	lea    rdi,[rip+0x6199]        # d27b <_IO_stdin_used+0x127b>
    70e2:	b8 00 00 00 00       	mov    eax,0x0
    70e7:	e8 74 b3 ff ff       	call   2460 <printf@plt>
    70ec:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    70f3:	48 89 c7             	mov    rdi,rax
    70f6:	e8 b5 b4 ff ff       	call   25b0 <free@plt>
    70fb:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    7102:	48 89 c7             	mov    rdi,rax
    7105:	e8 66 b6 ff ff       	call   2770 <fclose@plt>
    710a:	90                   	nop
    710b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    710f:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    7116:	00 00 
    7118:	74 05                	je     711f <print_cpu_info+0x1ac>
    711a:	e8 e1 b5 ff ff       	call   2700 <__stack_chk_fail@plt>
    711f:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    7123:	c9                   	leave  
    7124:	c3                   	ret    

0000000000007125 <print_logo>:
    7125:	f3 0f 1e fa          	endbr64 
    7129:	55                   	push   rbp
    712a:	48 89 e5             	mov    rbp,rsp
    712d:	48 8d 3d 5c 61 00 00 	lea    rdi,[rip+0x615c]        # d290 <_IO_stdin_used+0x1290>
    7134:	e8 77 b3 ff ff       	call   24b0 <puts@plt>
    7139:	90                   	nop
    713a:	5d                   	pop    rbp
    713b:	c3                   	ret    

000000000000713c <start_nsh_server>:
    713c:	f3 0f 1e fa          	endbr64 
    7140:	55                   	push   rbp
    7141:	48 89 e5             	mov    rbp,rsp
    7144:	48 83 ec 10          	sub    rsp,0x10
    7148:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    714f:	00 00 
    7151:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7155:	31 c0                	xor    eax,eax
    7157:	48 8d 45 f0          	lea    rax,[rbp-0x10]
    715b:	b9 00 00 00 00       	mov    ecx,0x0
    7160:	48 8d 15 71 00 00 00 	lea    rdx,[rip+0x71]        # 71d8 <actually_start_nsh_server>
    7167:	be 00 00 00 00       	mov    esi,0x0
    716c:	48 89 c7             	mov    rdi,rax
    716f:	e8 1c b4 ff ff       	call   2590 <pthread_create@plt>
    7174:	90                   	nop
    7175:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7179:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    7180:	00 00 
    7182:	74 05                	je     7189 <start_nsh_server+0x4d>
    7184:	e8 77 b5 ff ff       	call   2700 <__stack_chk_fail@plt>
    7189:	c9                   	leave  
    718a:	c3                   	ret    

000000000000718b <rnstrip>:
    718b:	f3 0f 1e fa          	endbr64 
    718f:	55                   	push   rbp
    7190:	48 89 e5             	mov    rbp,rsp
    7193:	48 83 ec 10          	sub    rsp,0x10
    7197:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    719b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    719f:	48 8d 35 62 62 00 00 	lea    rsi,[rip+0x6262]        # d408 <_IO_stdin_used+0x1408>
    71a6:	48 89 c7             	mov    rdi,rax
    71a9:	e8 e2 b5 ff ff       	call   2790 <strcspn@plt>
    71ae:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    71b2:	48 01 d0             	add    rax,rdx
    71b5:	c6 00 00             	mov    BYTE PTR [rax],0x0
    71b8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    71bc:	48 8d 35 47 62 00 00 	lea    rsi,[rip+0x6247]        # d40a <_IO_stdin_used+0x140a>
    71c3:	48 89 c7             	mov    rdi,rax
    71c6:	e8 c5 b5 ff ff       	call   2790 <strcspn@plt>
    71cb:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    71cf:	48 01 d0             	add    rax,rdx
    71d2:	c6 00 00             	mov    BYTE PTR [rax],0x0
    71d5:	90                   	nop
    71d6:	c9                   	leave  
    71d7:	c3                   	ret    

00000000000071d8 <actually_start_nsh_server>:
    71d8:	f3 0f 1e fa          	endbr64 
    71dc:	55                   	push   rbp
    71dd:	48 89 e5             	mov    rbp,rsp
    71e0:	48 83 ec 50          	sub    rsp,0x50
    71e4:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    71eb:	00 00 
    71ed:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    71f1:	31 c0                	xor    eax,eax
    71f3:	c7 45 bc 10 00 00 00 	mov    DWORD PTR [rbp-0x44],0x10
    71fa:	ba 00 00 00 00       	mov    edx,0x0
    71ff:	be 01 00 00 00       	mov    esi,0x1
    7204:	bf 02 00 00 00       	mov    edi,0x2
    7209:	e8 d2 b4 ff ff       	call   26e0 <socket@plt>
    720e:	89 45 c0             	mov    DWORD PTR [rbp-0x40],eax
    7211:	83 7d c0 00          	cmp    DWORD PTR [rbp-0x40],0x0
    7215:	75 16                	jne    722d <actually_start_nsh_server+0x55>
    7217:	48 8d 3d f2 61 00 00 	lea    rdi,[rip+0x61f2]        # d410 <_IO_stdin_used+0x1410>
    721e:	e8 8d b2 ff ff       	call   24b0 <puts@plt>
    7223:	bf 01 00 00 00       	mov    edi,0x1
    7228:	e8 a3 b2 ff ff       	call   24d0 <exit@plt>
    722d:	48 8d 55 bc          	lea    rdx,[rbp-0x44]
    7231:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    7234:	41 b8 04 00 00 00    	mov    r8d,0x4
    723a:	48 89 d1             	mov    rcx,rdx
    723d:	ba 02 00 00 00       	mov    edx,0x2
    7242:	be 01 00 00 00       	mov    esi,0x1
    7247:	89 c7                	mov    edi,eax
    7249:	e8 12 b3 ff ff       	call   2560 <setsockopt@plt>
    724e:	85 c0                	test   eax,eax
    7250:	74 16                	je     7268 <actually_start_nsh_server+0x90>
    7252:	48 8d 3d df 61 00 00 	lea    rdi,[rip+0x61df]        # d438 <_IO_stdin_used+0x1438>
    7259:	e8 52 b2 ff ff       	call   24b0 <puts@plt>
    725e:	bf 01 00 00 00       	mov    edi,0x1
    7263:	e8 68 b2 ff ff       	call   24d0 <exit@plt>
    7268:	66 c7 45 e0 02 00    	mov    WORD PTR [rbp-0x20],0x2
    726e:	bf 00 00 00 00       	mov    edi,0x0
    7273:	e8 48 b5 ff ff       	call   27c0 <htonl@plt>
    7278:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
    727b:	bf 17 00 00 00       	mov    edi,0x17
    7280:	e8 3b b2 ff ff       	call   24c0 <htons@plt>
    7285:	66 89 45 e2          	mov    WORD PTR [rbp-0x1e],ax
    7289:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
    728d:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    7290:	ba 10 00 00 00       	mov    edx,0x10
    7295:	48 89 ce             	mov    rsi,rcx
    7298:	89 c7                	mov    edi,eax
    729a:	e8 01 b5 ff ff       	call   27a0 <bind@plt>
    729f:	85 c0                	test   eax,eax
    72a1:	79 16                	jns    72b9 <actually_start_nsh_server+0xe1>
    72a3:	48 8d 3d b6 61 00 00 	lea    rdi,[rip+0x61b6]        # d460 <_IO_stdin_used+0x1460>
    72aa:	e8 01 b2 ff ff       	call   24b0 <puts@plt>
    72af:	bf 01 00 00 00       	mov    edi,0x1
    72b4:	e8 17 b2 ff ff       	call   24d0 <exit@plt>
    72b9:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    72bc:	be 05 00 00 00       	mov    esi,0x5
    72c1:	89 c7                	mov    edi,eax
    72c3:	e8 08 b3 ff ff       	call   25d0 <listen@plt>
    72c8:	85 c0                	test   eax,eax
    72ca:	79 16                	jns    72e2 <actually_start_nsh_server+0x10a>
    72cc:	48 8d 3d c5 61 00 00 	lea    rdi,[rip+0x61c5]        # d498 <_IO_stdin_used+0x1498>
    72d3:	e8 d8 b1 ff ff       	call   24b0 <puts@plt>
    72d8:	bf 01 00 00 00       	mov    edi,0x1
    72dd:	e8 ee b1 ff ff       	call   24d0 <exit@plt>
    72e2:	48 8d 55 bc          	lea    rdx,[rbp-0x44]
    72e6:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
    72ea:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    72ed:	48 89 ce             	mov    rsi,rcx
    72f0:	89 c7                	mov    edi,eax
    72f2:	e8 19 b5 ff ff       	call   2810 <accept@plt>
    72f7:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    72fa:	83 7d c4 00          	cmp    DWORD PTR [rbp-0x3c],0x0
    72fe:	79 20                	jns    7320 <actually_start_nsh_server+0x148>
    7300:	b8 00 00 00 00       	mov    eax,0x0
    7305:	e8 f5 bf ff ff       	call   32ff <get_formated_time>
    730a:	48 89 c6             	mov    rsi,rax
    730d:	48 8d 3d b4 61 00 00 	lea    rdi,[rip+0x61b4]        # d4c8 <_IO_stdin_used+0x14c8>
    7314:	b8 00 00 00 00       	mov    eax,0x0
    7319:	e8 42 b1 ff ff       	call   2460 <printf@plt>
    731e:	eb c2                	jmp    72e2 <actually_start_nsh_server+0x10a>
    7320:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    7323:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
    7326:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    732a:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    732e:	48 8d 55 d0          	lea    rdx,[rbp-0x30]
    7332:	48 8d 45 c8          	lea    rax,[rbp-0x38]
    7336:	48 89 d1             	mov    rcx,rdx
    7339:	48 8d 15 0f 00 00 00 	lea    rdx,[rip+0xf]        # 734f <accept_cmd>
    7340:	be 00 00 00 00       	mov    esi,0x0
    7345:	48 89 c7             	mov    rdi,rax
    7348:	e8 43 b2 ff ff       	call   2590 <pthread_create@plt>
    734d:	eb 93                	jmp    72e2 <actually_start_nsh_server+0x10a>

000000000000734f <accept_cmd>:
    734f:	f3 0f 1e fa          	endbr64 
    7353:	55                   	push   rbp
    7354:	48 89 e5             	mov    rbp,rsp
    7357:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    735b:	90                   	nop
    735c:	5d                   	pop    rbp
    735d:	c3                   	ret    

000000000000735e <tcp_rst_portscan_detect>:
    735e:	f3 0f 1e fa          	endbr64 
    7362:	55                   	push   rbp
    7363:	48 89 e5             	mov    rbp,rsp
    7366:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    736d:	48 89 bd c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rdi
    7374:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    737b:	00 00 
    737d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7381:	31 c0                	xor    eax,eax
    7383:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    738a:	00 00 00 
    738d:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7394:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    739a:	83 f8 1e             	cmp    eax,0x1e
    739d:	74 0a                	je     73a9 <tcp_rst_portscan_detect+0x4b>
    739f:	b8 00 00 00 00       	mov    eax,0x0
    73a4:	e9 8d 01 00 00       	jmp    7536 <tcp_rst_portscan_detect+0x1d8>
    73a9:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    73b0:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    73b6:	83 e8 01             	sub    eax,0x1
    73b9:	89 85 d8 fe ff ff    	mov    DWORD PTR [rbp-0x128],eax
    73bf:	eb 6c                	jmp    742d <tcp_rst_portscan_detect+0xcf>
    73c1:	8b 85 d8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x128]
    73c7:	89 85 e4 fe ff ff    	mov    DWORD PTR [rbp-0x11c],eax
    73cd:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    73d4:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    73da:	48 63 d2             	movsxd rdx,edx
    73dd:	48 83 c2 28          	add    rdx,0x28
    73e1:	48 8b 44 d0 10       	mov    rax,QWORD PTR [rax+rdx*8+0x10]
    73e6:	89 c1                	mov    ecx,eax
    73e8:	83 ad d8 fe ff ff 01 	sub    DWORD PTR [rbp-0x128],0x1
    73ef:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    73f6:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    73fc:	48 63 d2             	movsxd rdx,edx
    73ff:	48 83 c2 28          	add    rdx,0x28
    7403:	48 8b 44 d0 10       	mov    rax,QWORD PTR [rax+rdx*8+0x10]
    7408:	29 c1                	sub    ecx,eax
    740a:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
    7410:	8d 50 01             	lea    edx,[rax+0x1]
    7413:	89 95 d4 fe ff ff    	mov    DWORD PTR [rbp-0x12c],edx
    7419:	89 ca                	mov    edx,ecx
    741b:	48 98                	cdqe   
    741d:	89 94 85 f0 fe ff ff 	mov    DWORD PTR [rbp+rax*4-0x110],edx
    7424:	83 bd e4 fe ff ff 01 	cmp    DWORD PTR [rbp-0x11c],0x1
    742b:	74 0b                	je     7438 <tcp_rst_portscan_detect+0xda>
    742d:	83 bd d8 fe ff ff 00 	cmp    DWORD PTR [rbp-0x128],0x0
    7434:	75 8b                	jne    73c1 <tcp_rst_portscan_detect+0x63>
    7436:	eb 01                	jmp    7439 <tcp_rst_portscan_detect+0xdb>
    7438:	90                   	nop
    7439:	c7 85 dc fe ff ff 00 	mov    DWORD PTR [rbp-0x124],0x0
    7440:	00 00 00 
    7443:	c7 85 e0 fe ff ff 00 	mov    DWORD PTR [rbp-0x120],0x0
    744a:	00 00 00 
    744d:	eb 24                	jmp    7473 <tcp_rst_portscan_detect+0x115>
    744f:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    7455:	48 98                	cdqe   
    7457:	8b 84 85 f0 fe ff ff 	mov    eax,DWORD PTR [rbp+rax*4-0x110]
    745e:	3d b3 b7 b4 00       	cmp    eax,0xb4b7b3
    7463:	7f 07                	jg     746c <tcp_rst_portscan_detect+0x10e>
    7465:	83 85 dc fe ff ff 01 	add    DWORD PTR [rbp-0x124],0x1
    746c:	83 85 e0 fe ff ff 01 	add    DWORD PTR [rbp-0x120],0x1
    7473:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    7479:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    747f:	7c ce                	jl     744f <tcp_rst_portscan_detect+0xf1>
    7481:	8b 85 dc fe ff ff    	mov    eax,DWORD PTR [rbp-0x124]
    7487:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    748d:	0f 85 9e 00 00 00    	jne    7531 <tcp_rst_portscan_detect+0x1d3>
    7493:	48 8b 05 96 9b 00 00 	mov    rax,QWORD PTR [rip+0x9b96]        # 11030 <def_log_file>
    749a:	48 8d 35 4f 60 00 00 	lea    rsi,[rip+0x604f]        # d4f0 <_IO_stdin_used+0x14f0>
    74a1:	48 89 c7             	mov    rdi,rax
    74a4:	e8 87 b0 ff ff       	call   2530 <fopen@plt>
    74a9:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
    74b0:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    74b7:	48 83 c0 08          	add    rax,0x8
    74bb:	48 89 c6             	mov    rsi,rax
    74be:	48 8d 3d 33 60 00 00 	lea    rdi,[rip+0x6033]        # d4f8 <_IO_stdin_used+0x14f8>
    74c5:	b8 00 00 00 00       	mov    eax,0x0
    74ca:	e8 91 af ff ff       	call   2460 <printf@plt>
    74cf:	b8 00 00 00 00       	mov    eax,0x0
    74d4:	e8 26 be ff ff       	call   32ff <get_formated_time>
    74d9:	48 89 c1             	mov    rcx,rax
    74dc:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    74e3:	48 8d 50 08          	lea    rdx,[rax+0x8]
    74e7:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    74ee:	48 8d 35 33 60 00 00 	lea    rsi,[rip+0x6033]        # d528 <_IO_stdin_used+0x1528>
    74f5:	48 89 c7             	mov    rdi,rax
    74f8:	b8 00 00 00 00       	mov    eax,0x0
    74fd:	e8 de b0 ff ff       	call   25e0 <sprintf@plt>
    7502:	48 8b 95 e8 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x118]
    7509:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    7510:	48 89 d6             	mov    rsi,rdx
    7513:	48 89 c7             	mov    rdi,rax
    7516:	e8 35 b1 ff ff       	call   2650 <fputs@plt>
    751b:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    7522:	48 89 c7             	mov    rdi,rax
    7525:	e8 46 b2 ff ff       	call   2770 <fclose@plt>
    752a:	b8 01 00 00 00       	mov    eax,0x1
    752f:	eb 05                	jmp    7536 <tcp_rst_portscan_detect+0x1d8>
    7531:	b8 00 00 00 00       	mov    eax,0x0
    7536:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    753a:	64 48 2b 34 25 28 00 	sub    rsi,QWORD PTR fs:0x28
    7541:	00 00 
    7543:	74 05                	je     754a <tcp_rst_portscan_detect+0x1ec>
    7545:	e8 b6 b1 ff ff       	call   2700 <__stack_chk_fail@plt>
    754a:	c9                   	leave  
    754b:	c3                   	ret    

000000000000754c <fin_rst_portscan_detect>:
    754c:	f3 0f 1e fa          	endbr64 
    7550:	55                   	push   rbp
    7551:	48 89 e5             	mov    rbp,rsp
    7554:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    755b:	48 89 bd c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rdi
    7562:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7569:	00 00 
    756b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    756f:	31 c0                	xor    eax,eax
    7571:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    7578:	00 00 00 
    757b:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7582:	8b 40 50             	mov    eax,DWORD PTR [rax+0x50]
    7585:	83 f8 1e             	cmp    eax,0x1e
    7588:	74 0a                	je     7594 <fin_rst_portscan_detect+0x48>
    758a:	b8 00 00 00 00       	mov    eax,0x0
    758f:	e9 8a 01 00 00       	jmp    771e <fin_rst_portscan_detect+0x1d2>
    7594:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    759b:	8b 40 50             	mov    eax,DWORD PTR [rax+0x50]
    759e:	83 e8 01             	sub    eax,0x1
    75a1:	89 85 d8 fe ff ff    	mov    DWORD PTR [rbp-0x128],eax
    75a7:	eb 6c                	jmp    7615 <fin_rst_portscan_detect+0xc9>
    75a9:	8b 85 d8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x128]
    75af:	89 85 e4 fe ff ff    	mov    DWORD PTR [rbp-0x11c],eax
    75b5:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    75bc:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    75c2:	48 63 d2             	movsxd rdx,edx
    75c5:	48 83 c2 0a          	add    rdx,0xa
    75c9:	48 8b 44 d0 08       	mov    rax,QWORD PTR [rax+rdx*8+0x8]
    75ce:	89 c1                	mov    ecx,eax
    75d0:	83 ad d8 fe ff ff 01 	sub    DWORD PTR [rbp-0x128],0x1
    75d7:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    75de:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    75e4:	48 63 d2             	movsxd rdx,edx
    75e7:	48 83 c2 0a          	add    rdx,0xa
    75eb:	48 8b 44 d0 08       	mov    rax,QWORD PTR [rax+rdx*8+0x8]
    75f0:	29 c1                	sub    ecx,eax
    75f2:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
    75f8:	8d 50 01             	lea    edx,[rax+0x1]
    75fb:	89 95 d4 fe ff ff    	mov    DWORD PTR [rbp-0x12c],edx
    7601:	89 ca                	mov    edx,ecx
    7603:	48 98                	cdqe   
    7605:	89 94 85 f0 fe ff ff 	mov    DWORD PTR [rbp+rax*4-0x110],edx
    760c:	83 bd e4 fe ff ff 01 	cmp    DWORD PTR [rbp-0x11c],0x1
    7613:	74 0b                	je     7620 <fin_rst_portscan_detect+0xd4>
    7615:	83 bd d8 fe ff ff 00 	cmp    DWORD PTR [rbp-0x128],0x0
    761c:	75 8b                	jne    75a9 <fin_rst_portscan_detect+0x5d>
    761e:	eb 01                	jmp    7621 <fin_rst_portscan_detect+0xd5>
    7620:	90                   	nop
    7621:	c7 85 dc fe ff ff 00 	mov    DWORD PTR [rbp-0x124],0x0
    7628:	00 00 00 
    762b:	c7 85 e0 fe ff ff 00 	mov    DWORD PTR [rbp-0x120],0x0
    7632:	00 00 00 
    7635:	eb 24                	jmp    765b <fin_rst_portscan_detect+0x10f>
    7637:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    763d:	48 98                	cdqe   
    763f:	8b 84 85 f0 fe ff ff 	mov    eax,DWORD PTR [rbp+rax*4-0x110]
    7646:	3d 73 7e e2 00       	cmp    eax,0xe27e73
    764b:	7f 07                	jg     7654 <fin_rst_portscan_detect+0x108>
    764d:	83 85 dc fe ff ff 01 	add    DWORD PTR [rbp-0x124],0x1
    7654:	83 85 e0 fe ff ff 01 	add    DWORD PTR [rbp-0x120],0x1
    765b:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    7661:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    7667:	7c ce                	jl     7637 <fin_rst_portscan_detect+0xeb>
    7669:	8b 85 dc fe ff ff    	mov    eax,DWORD PTR [rbp-0x124]
    766f:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    7675:	0f 85 9e 00 00 00    	jne    7719 <fin_rst_portscan_detect+0x1cd>
    767b:	48 8b 05 ae 99 00 00 	mov    rax,QWORD PTR [rip+0x99ae]        # 11030 <def_log_file>
    7682:	48 8d 35 67 5e 00 00 	lea    rsi,[rip+0x5e67]        # d4f0 <_IO_stdin_used+0x14f0>
    7689:	48 89 c7             	mov    rdi,rax
    768c:	e8 9f ae ff ff       	call   2530 <fopen@plt>
    7691:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
    7698:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    769f:	48 83 c0 08          	add    rax,0x8
    76a3:	48 89 c6             	mov    rsi,rax
    76a6:	48 8d 3d a3 5e 00 00 	lea    rdi,[rip+0x5ea3]        # d550 <_IO_stdin_used+0x1550>
    76ad:	b8 00 00 00 00       	mov    eax,0x0
    76b2:	e8 a9 ad ff ff       	call   2460 <printf@plt>
    76b7:	b8 00 00 00 00       	mov    eax,0x0
    76bc:	e8 3e bc ff ff       	call   32ff <get_formated_time>
    76c1:	48 89 c1             	mov    rcx,rax
    76c4:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    76cb:	48 8d 50 08          	lea    rdx,[rax+0x8]
    76cf:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    76d6:	48 8d 35 a3 5e 00 00 	lea    rsi,[rip+0x5ea3]        # d580 <_IO_stdin_used+0x1580>
    76dd:	48 89 c7             	mov    rdi,rax
    76e0:	b8 00 00 00 00       	mov    eax,0x0
    76e5:	e8 f6 ae ff ff       	call   25e0 <sprintf@plt>
    76ea:	48 8b 95 e8 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x118]
    76f1:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    76f8:	48 89 d6             	mov    rsi,rdx
    76fb:	48 89 c7             	mov    rdi,rax
    76fe:	e8 4d af ff ff       	call   2650 <fputs@plt>
    7703:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    770a:	48 89 c7             	mov    rdi,rax
    770d:	e8 5e b0 ff ff       	call   2770 <fclose@plt>
    7712:	b8 01 00 00 00       	mov    eax,0x1
    7717:	eb 05                	jmp    771e <fin_rst_portscan_detect+0x1d2>
    7719:	b8 00 00 00 00       	mov    eax,0x0
    771e:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    7722:	64 48 2b 34 25 28 00 	sub    rsi,QWORD PTR fs:0x28
    7729:	00 00 
    772b:	74 05                	je     7732 <fin_rst_portscan_detect+0x1e6>
    772d:	e8 ce af ff ff       	call   2700 <__stack_chk_fail@plt>
    7732:	c9                   	leave  
    7733:	c3                   	ret    

0000000000007734 <member_ready_for_scan>:
    7734:	f3 0f 1e fa          	endbr64 
    7738:	55                   	push   rbp
    7739:	48 89 e5             	mov    rbp,rsp
    773c:	48 83 ec 10          	sub    rsp,0x10
    7740:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    7747:	eb 48                	jmp    7791 <member_ready_for_scan+0x5d>
    7749:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    774c:	48 63 d0             	movsxd rdx,eax
    774f:	48 89 d0             	mov    rax,rdx
    7752:	48 c1 e0 02          	shl    rax,0x2
    7756:	48 01 d0             	add    rax,rdx
    7759:	48 c1 e0 03          	shl    rax,0x3
    775d:	48 01 d0             	add    rax,rdx
    7760:	48 c1 e0 04          	shl    rax,0x4
    7764:	48 8d 15 b5 bd 0e 00 	lea    rdx,[rip+0xebdb5]        # f3520 <watchlist>
    776b:	48 01 d0             	add    rax,rdx
    776e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7772:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7776:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    777c:	83 f8 1d             	cmp    eax,0x1d
    777f:	76 0c                	jbe    778d <member_ready_for_scan+0x59>
    7781:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7785:	48 89 c7             	mov    rdi,rax
    7788:	e8 d1 fb ff ff       	call   735e <tcp_rst_portscan_detect>
    778d:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    7791:	8b 05 81 98 00 00    	mov    eax,DWORD PTR [rip+0x9881]        # 11018 <watchlist_num>
    7797:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    779a:	7e ad                	jle    7749 <member_ready_for_scan+0x15>
    779c:	90                   	nop
    779d:	90                   	nop
    779e:	c9                   	leave  
    779f:	c3                   	ret    

00000000000077a0 <member_exists>:
    77a0:	f3 0f 1e fa          	endbr64 
    77a4:	55                   	push   rbp
    77a5:	48 89 e5             	mov    rbp,rsp
    77a8:	48 83 ec 20          	sub    rsp,0x20
    77ac:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    77b0:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    77b7:	eb 47                	jmp    7800 <member_exists+0x60>
    77b9:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    77bc:	8d 50 01             	lea    edx,[rax+0x1]
    77bf:	89 55 fc             	mov    DWORD PTR [rbp-0x4],edx
    77c2:	48 63 d0             	movsxd rdx,eax
    77c5:	48 89 d0             	mov    rax,rdx
    77c8:	48 c1 e0 02          	shl    rax,0x2
    77cc:	48 01 d0             	add    rax,rdx
    77cf:	48 c1 e0 03          	shl    rax,0x3
    77d3:	48 01 d0             	add    rax,rdx
    77d6:	48 c1 e0 04          	shl    rax,0x4
    77da:	48 8d 15 3f bd 0e 00 	lea    rdx,[rip+0xebd3f]        # f3520 <watchlist>
    77e1:	48 01 d0             	add    rax,rdx
    77e4:	48 8d 50 08          	lea    rdx,[rax+0x8]
    77e8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    77ec:	48 89 c6             	mov    rsi,rax
    77ef:	48 89 d7             	mov    rdi,rdx
    77f2:	e8 19 af ff ff       	call   2710 <strcmp@plt>
    77f7:	85 c0                	test   eax,eax
    77f9:	75 05                	jne    7800 <member_exists+0x60>
    77fb:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    77fe:	eb 10                	jmp    7810 <member_exists+0x70>
    7800:	8b 05 12 98 00 00    	mov    eax,DWORD PTR [rip+0x9812]        # 11018 <watchlist_num>
    7806:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7809:	7e ae                	jle    77b9 <member_exists+0x19>
    780b:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7810:	c9                   	leave  
    7811:	c3                   	ret    

0000000000007812 <init_member>:
    7812:	f3 0f 1e fa          	endbr64 
    7816:	55                   	push   rbp
    7817:	48 89 e5             	mov    rbp,rsp
    781a:	48 83 ec 20          	sub    rsp,0x20
    781e:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7822:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7826:	48 89 c7             	mov    rdi,rax
    7829:	e8 72 ff ff ff       	call   77a0 <member_exists>
    782e:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    7831:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    7835:	74 42                	je     7879 <init_member+0x67>
    7837:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    783a:	48 63 d0             	movsxd rdx,eax
    783d:	48 89 d0             	mov    rax,rdx
    7840:	48 c1 e0 02          	shl    rax,0x2
    7844:	48 01 d0             	add    rax,rdx
    7847:	48 c1 e0 03          	shl    rax,0x3
    784b:	48 01 d0             	add    rax,rdx
    784e:	48 c1 e0 04          	shl    rax,0x4
    7852:	48 8d 15 c7 bc 0e 00 	lea    rdx,[rip+0xebcc7]        # f3520 <watchlist>
    7859:	48 01 d0             	add    rax,rdx
    785c:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7860:	bf 00 00 00 00       	mov    edi,0x0
    7865:	e8 c6 af ff ff       	call   2830 <time@plt>
    786a:	48 89 c2             	mov    rdx,rax
    786d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7871:	48 89 10             	mov    QWORD PTR [rax],rdx
    7874:	e9 a8 00 00 00       	jmp    7921 <init_member+0x10f>
    7879:	48 8d 3d 25 5d 00 00 	lea    rdi,[rip+0x5d25]        # d5a5 <_IO_stdin_used+0x15a5>
    7880:	e8 1b ff ff ff       	call   77a0 <member_exists>
    7885:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    7888:	83 7d f4 00          	cmp    DWORD PTR [rbp-0xc],0x0
    788c:	74 2b                	je     78b9 <init_member+0xa7>
    788e:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    7891:	48 63 d0             	movsxd rdx,eax
    7894:	48 89 d0             	mov    rax,rdx
    7897:	48 c1 e0 02          	shl    rax,0x2
    789b:	48 01 d0             	add    rax,rdx
    789e:	48 c1 e0 03          	shl    rax,0x3
    78a2:	48 01 d0             	add    rax,rdx
    78a5:	48 c1 e0 04          	shl    rax,0x4
    78a9:	48 8d 15 70 bc 0e 00 	lea    rdx,[rip+0xebc70]        # f3520 <watchlist>
    78b0:	48 01 d0             	add    rax,rdx
    78b3:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    78b7:	eb 3b                	jmp    78f4 <init_member+0xe2>
    78b9:	8b 05 59 97 00 00    	mov    eax,DWORD PTR [rip+0x9759]        # 11018 <watchlist_num>
    78bf:	83 c0 01             	add    eax,0x1
    78c2:	89 05 50 97 00 00    	mov    DWORD PTR [rip+0x9750],eax        # 11018 <watchlist_num>
    78c8:	8b 05 4a 97 00 00    	mov    eax,DWORD PTR [rip+0x974a]        # 11018 <watchlist_num>
    78ce:	48 63 d0             	movsxd rdx,eax
    78d1:	48 89 d0             	mov    rax,rdx
    78d4:	48 c1 e0 02          	shl    rax,0x2
    78d8:	48 01 d0             	add    rax,rdx
    78db:	48 c1 e0 03          	shl    rax,0x3
    78df:	48 01 d0             	add    rax,rdx
    78e2:	48 c1 e0 04          	shl    rax,0x4
    78e6:	48 8d 15 33 bc 0e 00 	lea    rdx,[rip+0xebc33]        # f3520 <watchlist>
    78ed:	48 01 d0             	add    rax,rdx
    78f0:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    78f4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    78f8:	ba 08 00 00 00       	mov    edx,0x8
    78fd:	be 00 00 00 00       	mov    esi,0x0
    7902:	48 89 c7             	mov    rdi,rax
    7905:	e8 66 ab ff ff       	call   2470 <memset@plt>
    790a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    790e:	48 8d 50 08          	lea    rdx,[rax+0x8]
    7912:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7916:	48 89 c6             	mov    rsi,rax
    7919:	48 89 d7             	mov    rdi,rdx
    791c:	e8 0f ae ff ff       	call   2730 <strcpy@plt>
    7921:	c9                   	leave  
    7922:	c3                   	ret    

0000000000007923 <ready_for_clean>:
    7923:	f3 0f 1e fa          	endbr64 
    7927:	55                   	push   rbp
    7928:	48 89 e5             	mov    rbp,rsp
    792b:	48 83 ec 10          	sub    rsp,0x10
    792f:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7933:	bf 00 00 00 00       	mov    edi,0x0
    7938:	e8 f3 ae ff ff       	call   2830 <time@plt>
    793d:	48 89 c2             	mov    rdx,rax
    7940:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7944:	48 8b 00             	mov    rax,QWORD PTR [rax]
    7947:	48 29 c2             	sub    rdx,rax
    794a:	48 8b 05 67 99 00 00 	mov    rax,QWORD PTR [rip+0x9967]        # 112b8 <clean_delay>
    7951:	48 39 c2             	cmp    rdx,rax
    7954:	72 22                	jb     7978 <ready_for_clean+0x55>
    7956:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    795a:	48 83 c0 08          	add    rax,0x8
    795e:	48 8d 35 48 5c 00 00 	lea    rsi,[rip+0x5c48]        # d5ad <_IO_stdin_used+0x15ad>
    7965:	48 89 c7             	mov    rdi,rax
    7968:	e8 a3 ad ff ff       	call   2710 <strcmp@plt>
    796d:	85 c0                	test   eax,eax
    796f:	74 07                	je     7978 <ready_for_clean+0x55>
    7971:	b8 01 00 00 00       	mov    eax,0x1
    7976:	eb 05                	jmp    797d <ready_for_clean+0x5a>
    7978:	b8 ff ff ff ff       	mov    eax,0xffffffff
    797d:	c9                   	leave  
    797e:	c3                   	ret    

000000000000797f <clean>:
    797f:	f3 0f 1e fa          	endbr64 
    7983:	55                   	push   rbp
    7984:	48 89 e5             	mov    rbp,rsp
    7987:	48 83 ec 10          	sub    rsp,0x10
    798b:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    798f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7993:	ba 08 00 00 00       	mov    edx,0x8
    7998:	be 00 00 00 00       	mov    esi,0x0
    799d:	48 89 c7             	mov    rdi,rax
    79a0:	e8 cb aa ff ff       	call   2470 <memset@plt>
    79a5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    79a9:	48 83 c0 08          	add    rax,0x8
    79ad:	48 b9 30 2e 30 2e 30 	movabs rcx,0x312e302e302e30
    79b4:	2e 31 00 
    79b7:	48 89 08             	mov    QWORD PTR [rax],rcx
    79ba:	90                   	nop
    79bb:	c9                   	leave  
    79bc:	c3                   	ret    

00000000000079bd <scan_for_clean>:
    79bd:	f3 0f 1e fa          	endbr64 
    79c1:	55                   	push   rbp
    79c2:	48 89 e5             	mov    rbp,rsp
    79c5:	48 83 ec 10          	sub    rsp,0x10
    79c9:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    79d0:	eb 62                	jmp    7a34 <scan_for_clean+0x77>
    79d2:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    79d5:	48 63 d0             	movsxd rdx,eax
    79d8:	48 89 d0             	mov    rax,rdx
    79db:	48 c1 e0 02          	shl    rax,0x2
    79df:	48 01 d0             	add    rax,rdx
    79e2:	48 c1 e0 03          	shl    rax,0x3
    79e6:	48 01 d0             	add    rax,rdx
    79e9:	48 c1 e0 04          	shl    rax,0x4
    79ed:	48 8d 15 2c bb 0e 00 	lea    rdx,[rip+0xebb2c]        # f3520 <watchlist>
    79f4:	48 01 d0             	add    rax,rdx
    79f7:	48 89 c7             	mov    rdi,rax
    79fa:	e8 24 ff ff ff       	call   7923 <ready_for_clean>
    79ff:	85 c0                	test   eax,eax
    7a01:	7e 2d                	jle    7a30 <scan_for_clean+0x73>
    7a03:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7a06:	48 63 d0             	movsxd rdx,eax
    7a09:	48 89 d0             	mov    rax,rdx
    7a0c:	48 c1 e0 02          	shl    rax,0x2
    7a10:	48 01 d0             	add    rax,rdx
    7a13:	48 c1 e0 03          	shl    rax,0x3
    7a17:	48 01 d0             	add    rax,rdx
    7a1a:	48 c1 e0 04          	shl    rax,0x4
    7a1e:	48 8d 15 fb ba 0e 00 	lea    rdx,[rip+0xebafb]        # f3520 <watchlist>
    7a25:	48 01 d0             	add    rax,rdx
    7a28:	48 89 c7             	mov    rdi,rax
    7a2b:	e8 4f ff ff ff       	call   797f <clean>
    7a30:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    7a34:	8b 05 de 95 00 00    	mov    eax,DWORD PTR [rip+0x95de]        # 11018 <watchlist_num>
    7a3a:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7a3d:	7e 93                	jle    79d2 <scan_for_clean+0x15>
    7a3f:	90                   	nop
    7a40:	90                   	nop
    7a41:	c9                   	leave  
    7a42:	c3                   	ret    

0000000000007a43 <compare_entries>:
    7a43:	f3 0f 1e fa          	endbr64 
    7a47:	55                   	push   rbp
    7a48:	48 89 e5             	mov    rbp,rsp
    7a4b:	48 83 ec 20          	sub    rsp,0x20
    7a4f:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7a53:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7a57:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7a5e:	e9 ac 00 00 00       	jmp    7b0f <compare_entries+0xcc>
    7a63:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7a66:	48 63 d0             	movsxd rdx,eax
    7a69:	48 89 d0             	mov    rax,rdx
    7a6c:	48 c1 e0 04          	shl    rax,0x4
    7a70:	48 01 d0             	add    rax,rdx
    7a73:	48 01 c0             	add    rax,rax
    7a76:	48 8d 15 a3 02 10 00 	lea    rdx,[rip+0x1002a3]        # 107d20 <arpcache>
    7a7d:	48 01 c2             	add    rdx,rax
    7a80:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7a84:	48 89 c6             	mov    rsi,rax
    7a87:	48 89 d7             	mov    rdi,rdx
    7a8a:	e8 a3 01 00 00       	call   7c32 <compare_ip_entry>
    7a8f:	85 c0                	test   eax,eax
    7a91:	74 78                	je     7b0b <compare_entries+0xc8>
    7a93:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7a96:	48 63 d0             	movsxd rdx,eax
    7a99:	48 89 d0             	mov    rax,rdx
    7a9c:	48 c1 e0 04          	shl    rax,0x4
    7aa0:	48 01 d0             	add    rax,rdx
    7aa3:	48 01 c0             	add    rax,rax
    7aa6:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7aaa:	48 8d 05 6f 02 10 00 	lea    rax,[rip+0x10026f]        # 107d20 <arpcache>
    7ab1:	48 01 c2             	add    rdx,rax
    7ab4:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7ab8:	48 89 c6             	mov    rsi,rax
    7abb:	48 89 d7             	mov    rdi,rdx
    7abe:	e8 98 01 00 00       	call   7c5b <compare_mac_entry>
    7ac3:	85 c0                	test   eax,eax
    7ac5:	75 44                	jne    7b0b <compare_entries+0xc8>
    7ac7:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7aca:	48 63 d0             	movsxd rdx,eax
    7acd:	48 89 d0             	mov    rax,rdx
    7ad0:	48 c1 e0 04          	shl    rax,0x4
    7ad4:	48 01 d0             	add    rax,rdx
    7ad7:	48 01 c0             	add    rax,rax
    7ada:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7ade:	48 8d 05 3b 02 10 00 	lea    rax,[rip+0x10023b]        # 107d20 <arpcache>
    7ae5:	48 8d 34 02          	lea    rsi,[rdx+rax*1]
    7ae9:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    7aed:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7af1:	48 89 d1             	mov    rcx,rdx
    7af4:	48 89 f2             	mov    rdx,rsi
    7af7:	48 89 c6             	mov    rsi,rax
    7afa:	48 8d 3d b7 5a 00 00 	lea    rdi,[rip+0x5ab7]        # d5b8 <_IO_stdin_used+0x15b8>
    7b01:	b8 00 00 00 00       	mov    eax,0x0
    7b06:	e8 55 a9 ff ff       	call   2460 <printf@plt>
    7b0b:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    7b0f:	8b 05 07 95 00 00    	mov    eax,DWORD PTR [rip+0x9507]        # 1101c <arp_entries>
    7b15:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7b18:	0f 8e 45 ff ff ff    	jle    7a63 <compare_entries+0x20>
    7b1e:	90                   	nop
    7b1f:	90                   	nop
    7b20:	c9                   	leave  
    7b21:	c3                   	ret    

0000000000007b22 <add_entry>:
    7b22:	f3 0f 1e fa          	endbr64 
    7b26:	55                   	push   rbp
    7b27:	48 89 e5             	mov    rbp,rsp
    7b2a:	48 83 ec 20          	sub    rsp,0x20
    7b2e:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7b32:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7b36:	8b 05 e0 94 00 00    	mov    eax,DWORD PTR [rip+0x94e0]        # 1101c <arp_entries>
    7b3c:	83 c0 01             	add    eax,0x1
    7b3f:	89 05 d7 94 00 00    	mov    DWORD PTR [rip+0x94d7],eax        # 1101c <arp_entries>
    7b45:	8b 05 d1 94 00 00    	mov    eax,DWORD PTR [rip+0x94d1]        # 1101c <arp_entries>
    7b4b:	48 63 d0             	movsxd rdx,eax
    7b4e:	48 89 d0             	mov    rax,rdx
    7b51:	48 c1 e0 04          	shl    rax,0x4
    7b55:	48 01 d0             	add    rax,rdx
    7b58:	48 01 c0             	add    rax,rax
    7b5b:	48 8d 15 be 01 10 00 	lea    rdx,[rip+0x1001be]        # 107d20 <arpcache>
    7b62:	48 01 d0             	add    rax,rdx
    7b65:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7b69:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7b6d:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    7b71:	48 89 d6             	mov    rsi,rdx
    7b74:	48 89 c7             	mov    rdi,rax
    7b77:	e8 b4 ab ff ff       	call   2730 <strcpy@plt>
    7b7c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7b80:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7b84:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7b88:	48 89 c6             	mov    rsi,rax
    7b8b:	48 89 d7             	mov    rdi,rdx
    7b8e:	e8 9d ab ff ff       	call   2730 <strcpy@plt>
    7b93:	90                   	nop
    7b94:	c9                   	leave  
    7b95:	c3                   	ret    

0000000000007b96 <entry_exists>:
    7b96:	f3 0f 1e fa          	endbr64 
    7b9a:	55                   	push   rbp
    7b9b:	48 89 e5             	mov    rbp,rsp
    7b9e:	48 83 ec 20          	sub    rsp,0x20
    7ba2:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7ba6:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7baa:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7bb1:	eb 6d                	jmp    7c20 <entry_exists+0x8a>
    7bb3:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7bb6:	48 63 d0             	movsxd rdx,eax
    7bb9:	48 89 d0             	mov    rax,rdx
    7bbc:	48 c1 e0 04          	shl    rax,0x4
    7bc0:	48 01 d0             	add    rax,rdx
    7bc3:	48 01 c0             	add    rax,rax
    7bc6:	48 8d 15 53 01 10 00 	lea    rdx,[rip+0x100153]        # 107d20 <arpcache>
    7bcd:	48 01 c2             	add    rdx,rax
    7bd0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7bd4:	48 89 c6             	mov    rsi,rax
    7bd7:	48 89 d7             	mov    rdi,rdx
    7bda:	e8 53 00 00 00       	call   7c32 <compare_ip_entry>
    7bdf:	85 c0                	test   eax,eax
    7be1:	75 39                	jne    7c1c <entry_exists+0x86>
    7be3:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7be6:	48 63 d0             	movsxd rdx,eax
    7be9:	48 89 d0             	mov    rax,rdx
    7bec:	48 c1 e0 04          	shl    rax,0x4
    7bf0:	48 01 d0             	add    rax,rdx
    7bf3:	48 01 c0             	add    rax,rax
    7bf6:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7bfa:	48 8d 05 1f 01 10 00 	lea    rax,[rip+0x10011f]        # 107d20 <arpcache>
    7c01:	48 01 c2             	add    rdx,rax
    7c04:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7c08:	48 89 c6             	mov    rsi,rax
    7c0b:	48 89 d7             	mov    rdi,rdx
    7c0e:	e8 48 00 00 00       	call   7c5b <compare_mac_entry>
    7c13:	85 c0                	test   eax,eax
    7c15:	75 05                	jne    7c1c <entry_exists+0x86>
    7c17:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7c1a:	eb 14                	jmp    7c30 <entry_exists+0x9a>
    7c1c:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    7c20:	8b 05 f6 93 00 00    	mov    eax,DWORD PTR [rip+0x93f6]        # 1101c <arp_entries>
    7c26:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7c29:	7e 88                	jle    7bb3 <entry_exists+0x1d>
    7c2b:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7c30:	c9                   	leave  
    7c31:	c3                   	ret    

0000000000007c32 <compare_ip_entry>:
    7c32:	f3 0f 1e fa          	endbr64 
    7c36:	55                   	push   rbp
    7c37:	48 89 e5             	mov    rbp,rsp
    7c3a:	48 83 ec 10          	sub    rsp,0x10
    7c3e:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7c42:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7c46:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    7c4a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7c4e:	48 89 d6             	mov    rsi,rdx
    7c51:	48 89 c7             	mov    rdi,rax
    7c54:	e8 b7 aa ff ff       	call   2710 <strcmp@plt>
    7c59:	c9                   	leave  
    7c5a:	c3                   	ret    

0000000000007c5b <compare_mac_entry>:
    7c5b:	f3 0f 1e fa          	endbr64 
    7c5f:	55                   	push   rbp
    7c60:	48 89 e5             	mov    rbp,rsp
    7c63:	48 83 ec 10          	sub    rsp,0x10
    7c67:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7c6b:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7c6f:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    7c73:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7c77:	48 89 d6             	mov    rsi,rdx
    7c7a:	48 89 c7             	mov    rdi,rax
    7c7d:	e8 8e aa ff ff       	call   2710 <strcmp@plt>
    7c82:	c9                   	leave  
    7c83:	c3                   	ret    

0000000000007c84 <load_csv_arp_cache>:
    7c84:	f3 0f 1e fa          	endbr64 
    7c88:	55                   	push   rbp
    7c89:	48 89 e5             	mov    rbp,rsp
    7c8c:	53                   	push   rbx
    7c8d:	48 83 ec 68          	sub    rsp,0x68
    7c91:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7c98:	00 00 
    7c9a:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    7c9e:	31 c0                	xor    eax,eax
    7ca0:	48 8d 35 47 59 00 00 	lea    rsi,[rip+0x5947]        # d5ee <_IO_stdin_used+0x15ee>
    7ca7:	48 8d 3d 42 59 00 00 	lea    rdi,[rip+0x5942]        # d5f0 <_IO_stdin_used+0x15f0>
    7cae:	e8 7d a8 ff ff       	call   2530 <fopen@plt>
    7cb3:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    7cb7:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
    7cbc:	75 22                	jne    7ce0 <load_csv_arp_cache+0x5c>
    7cbe:	48 8d 3d 4b 59 00 00 	lea    rdi,[rip+0x594b]        # d610 <_IO_stdin_used+0x1610>
    7cc5:	e8 e6 a7 ff ff       	call   24b0 <puts@plt>
    7cca:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    7cce:	48 89 c7             	mov    rdi,rax
    7cd1:	e8 9a aa ff ff       	call   2770 <fclose@plt>
    7cd6:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7cdb:	e9 dd 00 00 00       	jmp    7dbd <load_csv_arp_cache+0x139>
    7ce0:	48 c7 45 98 00 00 00 	mov    QWORD PTR [rbp-0x68],0x0
    7ce7:	00 
    7ce8:	48 c7 45 a0 00 00 00 	mov    QWORD PTR [rbp-0x60],0x0
    7cef:	00 
    7cf0:	eb 7c                	jmp    7d6e <load_csv_arp_cache+0xea>
    7cf2:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7cf6:	48 85 c0             	test   rax,rax
    7cf9:	0f 84 97 00 00 00    	je     7d96 <load_csv_arp_cache+0x112>
    7cff:	48 8b 5d 98          	mov    rbx,QWORD PTR [rbp-0x68]
    7d03:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7d07:	48 8d 35 3b 59 00 00 	lea    rsi,[rip+0x593b]        # d649 <_IO_stdin_used+0x1649>
    7d0e:	48 89 c7             	mov    rdi,rax
    7d11:	e8 7a aa ff ff       	call   2790 <strcspn@plt>
    7d16:	48 01 d8             	add    rax,rbx
    7d19:	c6 00 00             	mov    BYTE PTR [rax],0x0
    7d1c:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7d20:	48 8d 35 24 59 00 00 	lea    rsi,[rip+0x5924]        # d64b <_IO_stdin_used+0x164b>
    7d27:	48 89 c7             	mov    rdi,rax
    7d2a:	e8 11 aa ff ff       	call   2740 <strtok@plt>
    7d2f:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    7d33:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    7d37:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    7d3b:	48 89 d6             	mov    rsi,rdx
    7d3e:	48 89 c7             	mov    rdi,rax
    7d41:	e8 ea a9 ff ff       	call   2730 <strcpy@plt>
    7d46:	48 8d 35 fe 58 00 00 	lea    rsi,[rip+0x58fe]        # d64b <_IO_stdin_used+0x164b>
    7d4d:	bf 00 00 00 00       	mov    edi,0x0
    7d52:	e8 e9 a9 ff ff       	call   2740 <strtok@plt>
    7d57:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    7d5b:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    7d5f:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    7d63:	48 89 d6             	mov    rsi,rdx
    7d66:	48 89 c7             	mov    rdi,rax
    7d69:	e8 c2 a9 ff ff       	call   2730 <strcpy@plt>
    7d6e:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    7d72:	48 8d 4d a0          	lea    rcx,[rbp-0x60]
    7d76:	48 8d 45 98          	lea    rax,[rbp-0x68]
    7d7a:	48 89 ce             	mov    rsi,rcx
    7d7d:	48 89 c7             	mov    rdi,rax
    7d80:	e8 9b a9 ff ff       	call   2720 <getline@plt>
    7d85:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    7d89:	48 83 7d b0 ff       	cmp    QWORD PTR [rbp-0x50],0xffffffffffffffff
    7d8e:	0f 85 5e ff ff ff    	jne    7cf2 <load_csv_arp_cache+0x6e>
    7d94:	eb 01                	jmp    7d97 <load_csv_arp_cache+0x113>
    7d96:	90                   	nop
    7d97:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7d9b:	48 85 c0             	test   rax,rax
    7d9e:	74 0c                	je     7dac <load_csv_arp_cache+0x128>
    7da0:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7da4:	48 89 c7             	mov    rdi,rax
    7da7:	e8 04 a8 ff ff       	call   25b0 <free@plt>
    7dac:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    7db0:	48 89 c7             	mov    rdi,rax
    7db3:	e8 b8 a9 ff ff       	call   2770 <fclose@plt>
    7db8:	b8 01 00 00 00       	mov    eax,0x1
    7dbd:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    7dc1:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    7dc8:	00 00 
    7dca:	74 05                	je     7dd1 <load_csv_arp_cache+0x14d>
    7dcc:	e8 2f a9 ff ff       	call   2700 <__stack_chk_fail@plt>
    7dd1:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    7dd5:	c9                   	leave  
    7dd6:	c3                   	ret    

0000000000007dd7 <callback>:
    7dd7:	f3 0f 1e fa          	endbr64 
    7ddb:	55                   	push   rbp
    7ddc:	48 89 e5             	mov    rbp,rsp
    7ddf:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7de3:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
    7de6:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    7dea:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    7dee:	b8 00 00 00 00       	mov    eax,0x0
    7df3:	5d                   	pop    rbp
    7df4:	c3                   	ret    

0000000000007df5 <update_db>:
    7df5:	f3 0f 1e fa          	endbr64 
    7df9:	55                   	push   rbp
    7dfa:	48 89 e5             	mov    rbp,rsp
    7dfd:	48 81 ec 40 02 00 00 	sub    rsp,0x240
    7e04:	48 89 bd c8 fd ff ff 	mov    QWORD PTR [rbp-0x238],rdi
    7e0b:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7e12:	00 00 
    7e14:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7e18:	31 c0                	xor    eax,eax
    7e1a:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    7e21:	48 89 85 e8 fd ff ff 	mov    QWORD PTR [rbp-0x218],rax
    7e28:	48 8d 3d 21 58 00 00 	lea    rdi,[rip+0x5821]        # d650 <_IO_stdin_used+0x1650>
    7e2f:	e8 7c a6 ff ff       	call   24b0 <puts@plt>
    7e34:	48 c7 85 d8 fd ff ff 	mov    QWORD PTR [rbp-0x228],0x0
    7e3b:	00 00 00 00 
    7e3f:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    7e46:	48 89 c6             	mov    rsi,rax
    7e49:	48 8d 3d f0 20 10 00 	lea    rdi,[rip+0x1020f0]        # 109f40 <sqlite_db_path>
    7e50:	e8 cb a9 ff ff       	call   2820 <sqlite3_open@plt>
    7e55:	89 85 d4 fd ff ff    	mov    DWORD PTR [rbp-0x22c],eax
    7e5b:	83 bd d4 fd ff ff 00 	cmp    DWORD PTR [rbp-0x22c],0x0
    7e62:	74 28                	je     7e8c <update_db+0x97>
    7e64:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    7e6b:	48 89 c7             	mov    rdi,rax
    7e6e:	e8 ed a8 ff ff       	call   2760 <sqlite3_errmsg@plt>
    7e73:	48 89 c6             	mov    rsi,rax
    7e76:	48 8d 3d df 57 00 00 	lea    rdi,[rip+0x57df]        # d65c <_IO_stdin_used+0x165c>
    7e7d:	b8 00 00 00 00       	mov    eax,0x0
    7e82:	e8 d9 a5 ff ff       	call   2460 <printf@plt>
    7e87:	e9 a2 00 00 00       	jmp    7f2e <update_db+0x139>
    7e8c:	48 8b 85 e8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x218]
    7e93:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    7e96:	85 c0                	test   eax,eax
    7e98:	75 2e                	jne    7ec8 <update_db+0xd3>
    7e9a:	48 8b 85 e8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x218]
    7ea1:	48 8d 48 10          	lea    rcx,[rax+0x10]
    7ea5:	48 8b 95 e8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x218]
    7eac:	48 8d 85 f0 fd ff ff 	lea    rax,[rbp-0x210]
    7eb3:	48 8d 35 b6 57 00 00 	lea    rsi,[rip+0x57b6]        # d670 <_IO_stdin_used+0x1670>
    7eba:	48 89 c7             	mov    rdi,rax
    7ebd:	b8 00 00 00 00       	mov    eax,0x0
    7ec2:	e8 19 a7 ff ff       	call   25e0 <sprintf@plt>
    7ec7:	90                   	nop
    7ec8:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    7ecf:	48 8d 95 d8 fd ff ff 	lea    rdx,[rbp-0x228]
    7ed6:	48 8d b5 f0 fd ff ff 	lea    rsi,[rbp-0x210]
    7edd:	49 89 d0             	mov    r8,rdx
    7ee0:	b9 00 00 00 00       	mov    ecx,0x0
    7ee5:	ba 00 00 00 00       	mov    edx,0x0
    7eea:	48 89 c7             	mov    rdi,rax
    7eed:	e8 fe a5 ff ff       	call   24f0 <sqlite3_exec@plt>
    7ef2:	89 85 d4 fd ff ff    	mov    DWORD PTR [rbp-0x22c],eax
    7ef8:	83 bd d4 fd ff ff 00 	cmp    DWORD PTR [rbp-0x22c],0x0
    7eff:	74 2c                	je     7f2d <update_db+0x138>
    7f01:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    7f08:	48 89 c6             	mov    rsi,rax
    7f0b:	48 8d 3d a3 57 00 00 	lea    rdi,[rip+0x57a3]        # d6b5 <_IO_stdin_used+0x16b5>
    7f12:	b8 00 00 00 00       	mov    eax,0x0
    7f17:	e8 44 a5 ff ff       	call   2460 <printf@plt>
    7f1c:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    7f23:	48 89 c7             	mov    rdi,rax
    7f26:	e8 45 a6 ff ff       	call   2570 <sqlite3_free@plt>
    7f2b:	eb 01                	jmp    7f2e <update_db+0x139>
    7f2d:	90                   	nop
    7f2e:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    7f35:	48 89 c7             	mov    rdi,rax
    7f38:	e8 03 a5 ff ff       	call   2440 <sqlite3_close@plt>
    7f3d:	b8 01 00 00 00       	mov    eax,0x1
    7f42:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    7f46:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    7f4d:	00 00 
    7f4f:	74 05                	je     7f56 <update_db+0x161>
    7f51:	e8 aa a7 ff ff       	call   2700 <__stack_chk_fail@plt>
    7f56:	c9                   	leave  
    7f57:	c3                   	ret    

0000000000007f58 <update_spi_db>:
    7f58:	f3 0f 1e fa          	endbr64 
    7f5c:	55                   	push   rbp
    7f5d:	48 89 e5             	mov    rbp,rsp
    7f60:	41 57                	push   r15
    7f62:	41 56                	push   r14
    7f64:	41 55                	push   r13
    7f66:	41 54                	push   r12
    7f68:	53                   	push   rbx
    7f69:	48 81 ec 48 04 00 00 	sub    rsp,0x448
    7f70:	48 89 bd 98 fb ff ff 	mov    QWORD PTR [rbp-0x468],rdi
    7f77:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7f7e:	00 00 
    7f80:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    7f84:	31 c0                	xor    eax,eax
    7f86:	48 8b 85 98 fb ff ff 	mov    rax,QWORD PTR [rbp-0x468]
    7f8d:	48 89 85 b0 fb ff ff 	mov    QWORD PTR [rbp-0x450],rax
    7f94:	48 8d 85 a0 fb ff ff 	lea    rax,[rbp-0x460]
    7f9b:	48 89 c6             	mov    rsi,rax
    7f9e:	48 8d 3d 2e 57 00 00 	lea    rdi,[rip+0x572e]        # d6d3 <_IO_stdin_used+0x16d3>
    7fa5:	e8 76 a8 ff ff       	call   2820 <sqlite3_open@plt>
    7faa:	85 c0                	test   eax,eax
    7fac:	74 3c                	je     7fea <update_spi_db+0x92>
    7fae:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    7fb5:	48 89 c7             	mov    rdi,rax
    7fb8:	e8 a3 a7 ff ff       	call   2760 <sqlite3_errmsg@plt>
    7fbd:	48 89 c6             	mov    rsi,rax
    7fc0:	48 8d 3d 24 57 00 00 	lea    rdi,[rip+0x5724]        # d6eb <_IO_stdin_used+0x16eb>
    7fc7:	b8 00 00 00 00       	mov    eax,0x0
    7fcc:	e8 8f a4 ff ff       	call   2460 <printf@plt>
    7fd1:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    7fd8:	48 89 c7             	mov    rdi,rax
    7fdb:	e8 60 a4 ff ff       	call   2440 <sqlite3_close@plt>
    7fe0:	b8 00 00 00 00       	mov    eax,0x0
    7fe5:	e9 59 01 00 00       	jmp    8143 <update_spi_db+0x1eb>
    7fea:	48 8d 05 0f 57 00 00 	lea    rax,[rip+0x570f]        # d700 <_IO_stdin_used+0x1700>
    7ff1:	48 89 85 b8 fb ff ff 	mov    QWORD PTR [rbp-0x448],rax
    7ff8:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    7fff:	8b 50 7c             	mov    edx,DWORD PTR [rax+0x7c]
    8002:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8009:	44 8b 78 78          	mov    r15d,DWORD PTR [rax+0x78]
    800d:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8014:	4c 8b b0 98 00 00 00 	mov    r14,QWORD PTR [rax+0x98]
    801b:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8022:	4c 8b a8 90 00 00 00 	mov    r13,QWORD PTR [rax+0x90]
    8029:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8030:	44 8b a0 a8 00 00 00 	mov    r12d,DWORD PTR [rax+0xa8]
    8037:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    803e:	8b 98 a4 00 00 00    	mov    ebx,DWORD PTR [rax+0xa4]
    8044:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    804b:	48 8b 40 70          	mov    rax,QWORD PTR [rax+0x70]
    804f:	44 8b 18             	mov    r11d,DWORD PTR [rax]
    8052:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8059:	44 8b 50 60          	mov    r10d,DWORD PTR [rax+0x60]
    805d:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8064:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
    8068:	44 8b 08             	mov    r9d,DWORD PTR [rax]
    806b:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8072:	44 8b 40 5c          	mov    r8d,DWORD PTR [rax+0x5c]
    8076:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    807d:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    8080:	89 85 94 fb ff ff    	mov    DWORD PTR [rbp-0x46c],eax
    8086:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    808d:	8b 48 54             	mov    ecx,DWORD PTR [rax+0x54]
    8090:	89 8d 90 fb ff ff    	mov    DWORD PTR [rbp-0x470],ecx
    8096:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    809d:	48 8d 48 29          	lea    rcx,[rax+0x29]
    80a1:	48 8b bd b0 fb ff ff 	mov    rdi,QWORD PTR [rbp-0x450]
    80a8:	48 8b b5 b8 fb ff ff 	mov    rsi,QWORD PTR [rbp-0x448]
    80af:	48 8d 85 c0 fb ff ff 	lea    rax,[rbp-0x440]
    80b6:	52                   	push   rdx
    80b7:	41 57                	push   r15
    80b9:	41 56                	push   r14
    80bb:	41 55                	push   r13
    80bd:	41 54                	push   r12
    80bf:	53                   	push   rbx
    80c0:	41 53                	push   r11
    80c2:	41 52                	push   r10
    80c4:	41 51                	push   r9
    80c6:	41 50                	push   r8
    80c8:	44 8b 8d 94 fb ff ff 	mov    r9d,DWORD PTR [rbp-0x46c]
    80cf:	44 8b 85 90 fb ff ff 	mov    r8d,DWORD PTR [rbp-0x470]
    80d6:	48 89 fa             	mov    rdx,rdi
    80d9:	48 89 c7             	mov    rdi,rax
    80dc:	b8 00 00 00 00       	mov    eax,0x0
    80e1:	e8 fa a4 ff ff       	call   25e0 <sprintf@plt>
    80e6:	48 83 c4 50          	add    rsp,0x50
    80ea:	48 c7 85 a8 fb ff ff 	mov    QWORD PTR [rbp-0x458],0x0
    80f1:	00 00 00 00 
    80f5:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    80fc:	48 8d 95 a8 fb ff ff 	lea    rdx,[rbp-0x458]
    8103:	48 8d b5 c0 fb ff ff 	lea    rsi,[rbp-0x440]
    810a:	49 89 d0             	mov    r8,rdx
    810d:	b9 00 00 00 00       	mov    ecx,0x0
    8112:	ba 00 00 00 00       	mov    edx,0x0
    8117:	48 89 c7             	mov    rdi,rax
    811a:	e8 d1 a3 ff ff       	call   24f0 <sqlite3_exec@plt>
    811f:	85 c0                	test   eax,eax
    8121:	74 1b                	je     813e <update_spi_db+0x1e6>
    8123:	48 8b 85 a8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x458]
    812a:	48 89 c6             	mov    rsi,rax
    812d:	48 8d 3d b9 56 00 00 	lea    rdi,[rip+0x56b9]        # d7ed <_IO_stdin_used+0x17ed>
    8134:	b8 00 00 00 00       	mov    eax,0x0
    8139:	e8 22 a3 ff ff       	call   2460 <printf@plt>
    813e:	b8 00 00 00 00       	mov    eax,0x0
    8143:	48 8b 5d c8          	mov    rbx,QWORD PTR [rbp-0x38]
    8147:	64 48 2b 1c 25 28 00 	sub    rbx,QWORD PTR fs:0x28
    814e:	00 00 
    8150:	74 05                	je     8157 <update_spi_db+0x1ff>
    8152:	e8 a9 a5 ff ff       	call   2700 <__stack_chk_fail@plt>
    8157:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    815b:	5b                   	pop    rbx
    815c:	41 5c                	pop    r12
    815e:	41 5d                	pop    r13
    8160:	41 5e                	pop    r14
    8162:	41 5f                	pop    r15
    8164:	5d                   	pop    rbp
    8165:	c3                   	ret    

0000000000008166 <http_disect>:
    8166:	f3 0f 1e fa          	endbr64 
    816a:	55                   	push   rbp
    816b:	48 89 e5             	mov    rbp,rsp
    816e:	48 81 ec 30 04 00 00 	sub    rsp,0x430
    8175:	48 89 bd d8 fb ff ff 	mov    QWORD PTR [rbp-0x428],rdi
    817c:	48 89 b5 d0 fb ff ff 	mov    QWORD PTR [rbp-0x430],rsi
    8183:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    818a:	00 00 
    818c:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8190:	31 c0                	xor    eax,eax
    8192:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    8199:	be 0d 00 00 00       	mov    esi,0xd
    819e:	48 89 c7             	mov    rdi,rax
    81a1:	e8 f4 b2 ff ff       	call   349a <strloc>
    81a6:	89 85 ec fb ff ff    	mov    DWORD PTR [rbp-0x414],eax
    81ac:	48 8d 3d 58 56 00 00 	lea    rdi,[rip+0x5658]        # d80b <_IO_stdin_used+0x180b>
    81b3:	e8 f8 a2 ff ff       	call   24b0 <puts@plt>
    81b8:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    81bf:	48 89 c7             	mov    rdi,rax
    81c2:	e8 7a b3 ff ff       	call   3541 <test_string_arr_print>
    81c7:	83 f0 01             	xor    eax,0x1
    81ca:	84 c0                	test   al,al
    81cc:	75 33                	jne    8201 <http_disect+0x9b>
    81ce:	8b 85 ec fb ff ff    	mov    eax,DWORD PTR [rbp-0x414]
    81d4:	48 63 d0             	movsxd rdx,eax
    81d7:	48 8b 8d d8 fb ff ff 	mov    rcx,QWORD PTR [rbp-0x428]
    81de:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    81e5:	48 89 ce             	mov    rsi,rcx
    81e8:	48 89 c7             	mov    rdi,rax
    81eb:	e8 90 a5 ff ff       	call   2780 <strncpy@plt>
    81f0:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    81f7:	48 89 c7             	mov    rdi,rax
    81fa:	e8 b1 a2 ff ff       	call   24b0 <puts@plt>
    81ff:	eb 01                	jmp    8202 <http_disect+0x9c>
    8201:	90                   	nop
    8202:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8206:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    820d:	00 00 
    820f:	74 05                	je     8216 <http_disect+0xb0>
    8211:	e8 ea a4 ff ff       	call   2700 <__stack_chk_fail@plt>
    8216:	c9                   	leave  
    8217:	c3                   	ret    

0000000000008218 <dns_disect>:
    8218:	f3 0f 1e fa          	endbr64 
    821c:	55                   	push   rbp
    821d:	48 89 e5             	mov    rbp,rsp
    8220:	48 83 ec 30          	sub    rsp,0x30
    8224:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    8228:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    822c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8230:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    8234:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8238:	48 83 c0 0c          	add    rax,0xc
    823c:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    8240:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8244:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    8248:	66 85 c0             	test   ax,ax
    824b:	75 6d                	jne    82ba <dns_disect+0xa2>
    824d:	bf 00 04 00 00       	mov    edi,0x400
    8252:	e8 c9 a2 ff ff       	call   2520 <malloc@plt>
    8257:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    825b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    825f:	ba 08 00 00 00       	mov    edx,0x8
    8264:	be 00 00 00 00       	mov    esi,0x0
    8269:	48 89 c7             	mov    rdi,rax
    826c:	e8 ff a1 ff ff       	call   2470 <memset@plt>
    8271:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8275:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8279:	48 89 d6             	mov    rsi,rdx
    827c:	48 89 c7             	mov    rdi,rax
    827f:	e8 39 00 00 00       	call   82bd <get_dns_name>
    8284:	0f b6 05 d9 1c 10 00 	movzx  eax,BYTE PTR [rip+0x101cd9]        # 109f64 <packet_print>
    828b:	84 c0                	test   al,al
    828d:	74 18                	je     82a7 <dns_disect+0x8f>
    828f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8293:	48 89 c6             	mov    rsi,rax
    8296:	48 8d 3d 80 55 00 00 	lea    rdi,[rip+0x5580]        # d81d <_IO_stdin_used+0x181d>
    829d:	b8 00 00 00 00       	mov    eax,0x0
    82a2:	e8 b9 a1 ff ff       	call   2460 <printf@plt>
    82a7:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    82ac:	74 0c                	je     82ba <dns_disect+0xa2>
    82ae:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    82b2:	48 89 c7             	mov    rdi,rax
    82b5:	e8 f6 a2 ff ff       	call   25b0 <free@plt>
    82ba:	90                   	nop
    82bb:	c9                   	leave  
    82bc:	c3                   	ret    

00000000000082bd <get_dns_name>:
    82bd:	f3 0f 1e fa          	endbr64 
    82c1:	55                   	push   rbp
    82c2:	48 89 e5             	mov    rbp,rsp
    82c5:	53                   	push   rbx
    82c6:	48 83 ec 28          	sub    rsp,0x28
    82ca:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    82ce:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    82d2:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    82d9:	eb 57                	jmp    8332 <get_dns_name+0x75>
    82db:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    82de:	48 63 d0             	movsxd rdx,eax
    82e1:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    82e5:	48 01 d0             	add    rax,rdx
    82e8:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    82eb:	3c 20                	cmp    al,0x20
    82ed:	7e 24                	jle    8313 <get_dns_name+0x56>
    82ef:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    82f2:	48 63 d0             	movsxd rdx,eax
    82f5:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    82f9:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    82fd:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    8301:	ba 01 00 00 00       	mov    edx,0x1
    8306:	48 89 ce             	mov    rsi,rcx
    8309:	48 89 c7             	mov    rdi,rax
    830c:	e8 8f a1 ff ff       	call   24a0 <strncat@plt>
    8311:	eb 1b                	jmp    832e <get_dns_name+0x71>
    8313:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    8317:	48 89 c7             	mov    rdi,rax
    831a:	e8 a1 a2 ff ff       	call   25c0 <strlen@plt>
    831f:	48 89 c2             	mov    rdx,rax
    8322:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    8326:	48 01 d0             	add    rax,rdx
    8329:	66 c7 00 2e 00       	mov    WORD PTR [rax],0x2e
    832e:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    8332:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    8335:	48 63 d8             	movsxd rbx,eax
    8338:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    833c:	48 89 c7             	mov    rdi,rax
    833f:	e8 7c a2 ff ff       	call   25c0 <strlen@plt>
    8344:	48 39 c3             	cmp    rbx,rax
    8347:	72 92                	jb     82db <get_dns_name+0x1e>
    8349:	90                   	nop
    834a:	90                   	nop
    834b:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    834f:	c9                   	leave  
    8350:	c3                   	ret    

0000000000008351 <ftp_disect>:
    8351:	f3 0f 1e fa          	endbr64 
    8355:	55                   	push   rbp
    8356:	48 89 e5             	mov    rbp,rsp
    8359:	48 83 ec 20          	sub    rsp,0x20
    835d:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8361:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    8365:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8369:	48 8d 35 b8 54 00 00 	lea    rsi,[rip+0x54b8]        # d828 <_IO_stdin_used+0x1828>
    8370:	48 89 c7             	mov    rdi,rax
    8373:	e8 b8 a2 ff ff       	call   2630 <strstr@plt>
    8378:	48 85 c0             	test   rax,rax
    837b:	75 1c                	jne    8399 <ftp_disect+0x48>
    837d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8381:	48 8d 35 b0 54 00 00 	lea    rsi,[rip+0x54b0]        # d838 <_IO_stdin_used+0x1838>
    8388:	48 89 c7             	mov    rdi,rax
    838b:	e8 a0 a2 ff ff       	call   2630 <strstr@plt>
    8390:	48 85 c0             	test   rax,rax
    8393:	0f 84 8a 00 00 00    	je     8423 <ftp_disect+0xd2>
    8399:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    839d:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    83a1:	48 89 c7             	mov    rdi,rax
    83a4:	e8 f7 f3 ff ff       	call   77a0 <member_exists>
    83a9:	48 63 d0             	movsxd rdx,eax
    83ac:	48 89 d0             	mov    rax,rdx
    83af:	48 c1 e0 02          	shl    rax,0x2
    83b3:	48 01 d0             	add    rax,rdx
    83b6:	48 c1 e0 03          	shl    rax,0x3
    83ba:	48 01 d0             	add    rax,rdx
    83bd:	48 c1 e0 04          	shl    rax,0x4
    83c1:	48 8d 15 58 b1 0e 00 	lea    rdx,[rip+0xeb158]        # f3520 <watchlist>
    83c8:	48 01 d0             	add    rax,rdx
    83cb:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    83cf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    83d3:	8b 80 40 02 00 00    	mov    eax,DWORD PTR [rax+0x240]
    83d9:	8d 50 01             	lea    edx,[rax+0x1]
    83dc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    83e0:	89 90 40 02 00 00    	mov    DWORD PTR [rax+0x240],edx
    83e6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    83ea:	8b 80 40 02 00 00    	mov    eax,DWORD PTR [rax+0x240]
    83f0:	83 f8 04             	cmp    eax,0x4
    83f3:	7e 2e                	jle    8423 <ftp_disect+0xd2>
    83f5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    83f9:	8b 88 40 02 00 00    	mov    ecx,DWORD PTR [rax+0x240]
    83ff:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8403:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    8407:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    840b:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    840f:	48 89 c6             	mov    rsi,rax
    8412:	48 8d 3d 2f 54 00 00 	lea    rdi,[rip+0x542f]        # d848 <_IO_stdin_used+0x1848>
    8419:	b8 00 00 00 00       	mov    eax,0x0
    841e:	e8 3d a0 ff ff       	call   2460 <printf@plt>
    8423:	90                   	nop
    8424:	c9                   	leave  
    8425:	c3                   	ret    

0000000000008426 <livedebug>:
    8426:	f3 0f 1e fa          	endbr64 
    842a:	55                   	push   rbp
    842b:	48 89 e5             	mov    rbp,rsp
    842e:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
    8435:	48 89 bd 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rdi
    843c:	48 89 b5 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rsi
    8443:	48 89 95 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdx
    844a:	48 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rcx
    8451:	4c 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r8
    8458:	4c 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r9
    845f:	84 c0                	test   al,al
    8461:	74 20                	je     8483 <livedebug+0x5d>
    8463:	0f 29 45 80          	movaps XMMWORD PTR [rbp-0x80],xmm0
    8467:	0f 29 4d 90          	movaps XMMWORD PTR [rbp-0x70],xmm1
    846b:	0f 29 55 a0          	movaps XMMWORD PTR [rbp-0x60],xmm2
    846f:	0f 29 5d b0          	movaps XMMWORD PTR [rbp-0x50],xmm3
    8473:	0f 29 65 c0          	movaps XMMWORD PTR [rbp-0x40],xmm4
    8477:	0f 29 6d d0          	movaps XMMWORD PTR [rbp-0x30],xmm5
    847b:	0f 29 75 e0          	movaps XMMWORD PTR [rbp-0x20],xmm6
    847f:	0f 29 7d f0          	movaps XMMWORD PTR [rbp-0x10],xmm7
    8483:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    848a:	00 00 
    848c:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    8493:	31 c0                	xor    eax,eax
    8495:	0f b6 05 84 1a 10 00 	movzx  eax,BYTE PTR [rip+0x101a84]        # 109f20 <debug_mode>
    849c:	84 c0                	test   al,al
    849e:	74 4b                	je     84eb <livedebug+0xc5>
    84a0:	c7 85 30 ff ff ff 08 	mov    DWORD PTR [rbp-0xd0],0x8
    84a7:	00 00 00 
    84aa:	c7 85 34 ff ff ff 30 	mov    DWORD PTR [rbp-0xcc],0x30
    84b1:	00 00 00 
    84b4:	48 8d 45 10          	lea    rax,[rbp+0x10]
    84b8:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    84bf:	48 8d 85 50 ff ff ff 	lea    rax,[rbp-0xb0]
    84c6:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    84cd:	48 8d 95 30 ff ff ff 	lea    rdx,[rbp-0xd0]
    84d4:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    84db:	48 89 d6             	mov    rsi,rdx
    84de:	48 89 c7             	mov    rdi,rax
    84e1:	b8 00 00 00 00       	mov    eax,0x0
    84e6:	e8 75 9f ff ff       	call   2460 <printf@plt>
    84eb:	90                   	nop
    84ec:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    84f3:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    84fa:	00 00 
    84fc:	74 05                	je     8503 <livedebug+0xdd>
    84fe:	e8 fd a1 ff ff       	call   2700 <__stack_chk_fail@plt>
    8503:	c9                   	leave  
    8504:	c3                   	ret    

0000000000008505 <forward_packet>:
    8505:	f3 0f 1e fa          	endbr64 
    8509:	55                   	push   rbp
    850a:	48 89 e5             	mov    rbp,rsp
    850d:	48 83 ec 20          	sub    rsp,0x20
    8511:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8515:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8519:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    851d:	48 8d 35 6c 1a 10 00 	lea    rsi,[rip+0x101a6c]        # 109f90 <local_ip>
    8524:	48 89 c7             	mov    rdi,rax
    8527:	e8 e4 a1 ff ff       	call   2710 <strcmp@plt>
    852c:	85 c0                	test   eax,eax
    852e:	74 4f                	je     857f <forward_packet+0x7a>
    8530:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8534:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    8538:	48 8d 35 51 1a 10 00 	lea    rsi,[rip+0x101a51]        # 109f90 <local_ip>
    853f:	48 89 c7             	mov    rdi,rax
    8542:	e8 c9 a1 ff ff       	call   2710 <strcmp@plt>
    8547:	85 c0                	test   eax,eax
    8549:	74 34                	je     857f <forward_packet+0x7a>
    854b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    854f:	48 8b 00             	mov    rax,QWORD PTR [rax]
    8552:	48 8d 50 0e          	lea    rdx,[rax+0xe]
    8556:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    855a:	48 89 d6             	mov    rsi,rdx
    855d:	48 89 c7             	mov    rdi,rax
    8560:	e8 cb a1 ff ff       	call   2730 <strcpy@plt>
    8565:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8569:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    856c:	83 e8 0e             	sub    eax,0xe
    856f:	89 c2                	mov    edx,eax
    8571:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8575:	89 d6                	mov    esi,edx
    8577:	48 89 c7             	mov    rdi,rax
    857a:	e8 63 cd ff ff       	call   52e2 <ascii_hexdump>
    857f:	90                   	nop
    8580:	c9                   	leave  
    8581:	c3                   	ret    

0000000000008582 <conversation_exists>:
    8582:	f3 0f 1e fa          	endbr64 
    8586:	55                   	push   rbp
    8587:	48 89 e5             	mov    rbp,rsp
    858a:	48 83 ec 20          	sub    rsp,0x20
    858e:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8592:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    8599:	e9 ff 00 00 00       	jmp    869d <conversation_exists+0x11b>
    859e:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    85a1:	48 98                	cdqe   
    85a3:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    85aa:	48 8d 15 2f 1a 10 00 	lea    rdx,[rip+0x101a2f]        # 109fe0 <spi_table>
    85b1:	48 01 d0             	add    rax,rdx
    85b4:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    85b8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    85bc:	0f b6 80 b0 00 00 00 	movzx  eax,BYTE PTR [rax+0xb0]
    85c3:	84 c0                	test   al,al
    85c5:	0f 84 ce 00 00 00    	je     8699 <conversation_exists+0x117>
    85cb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    85cf:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    85d2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    85d6:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    85d9:	39 c2                	cmp    edx,eax
    85db:	75 58                	jne    8635 <conversation_exists+0xb3>
    85dd:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    85e1:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    85e4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    85e8:	8b 40 54             	mov    eax,DWORD PTR [rax+0x54]
    85eb:	39 c2                	cmp    edx,eax
    85ed:	75 46                	jne    8635 <conversation_exists+0xb3>
    85ef:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    85f3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    85f7:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    85fb:	48 89 d6             	mov    rsi,rdx
    85fe:	48 89 c7             	mov    rdi,rax
    8601:	e8 0a a1 ff ff       	call   2710 <strcmp@plt>
    8606:	85 c0                	test   eax,eax
    8608:	0f 85 8a 00 00 00    	jne    8698 <conversation_exists+0x116>
    860e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8612:	48 8d 50 29          	lea    rdx,[rax+0x29]
    8616:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    861a:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    861e:	48 89 d6             	mov    rsi,rdx
    8621:	48 89 c7             	mov    rdi,rax
    8624:	e8 e7 a0 ff ff       	call   2710 <strcmp@plt>
    8629:	85 c0                	test   eax,eax
    862b:	75 6b                	jne    8698 <conversation_exists+0x116>
    862d:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8630:	e9 81 00 00 00       	jmp    86b6 <conversation_exists+0x134>
    8635:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8639:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    863c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8640:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    8643:	39 c2                	cmp    edx,eax
    8645:	75 52                	jne    8699 <conversation_exists+0x117>
    8647:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    864b:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    864e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8652:	8b 40 54             	mov    eax,DWORD PTR [rax+0x54]
    8655:	39 c2                	cmp    edx,eax
    8657:	75 40                	jne    8699 <conversation_exists+0x117>
    8659:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    865d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8661:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    8665:	48 89 d6             	mov    rsi,rdx
    8668:	48 89 c7             	mov    rdi,rax
    866b:	e8 a0 a0 ff ff       	call   2710 <strcmp@plt>
    8670:	85 c0                	test   eax,eax
    8672:	75 25                	jne    8699 <conversation_exists+0x117>
    8674:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8678:	48 8d 50 29          	lea    rdx,[rax+0x29]
    867c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8680:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8684:	48 89 d6             	mov    rsi,rdx
    8687:	48 89 c7             	mov    rdi,rax
    868a:	e8 81 a0 ff ff       	call   2710 <strcmp@plt>
    868f:	85 c0                	test   eax,eax
    8691:	75 06                	jne    8699 <conversation_exists+0x117>
    8693:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8696:	eb 1e                	jmp    86b6 <conversation_exists+0x134>
    8698:	90                   	nop
    8699:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    869d:	8b 05 9d 89 00 00    	mov    eax,DWORD PTR [rip+0x899d]        # 11040 <total_conversations>
    86a3:	8d 50 01             	lea    edx,[rax+0x1]
    86a6:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    86a9:	39 c2                	cmp    edx,eax
    86ab:	0f 87 ed fe ff ff    	ja     859e <conversation_exists+0x1c>
    86b1:	b8 ff ff ff ff       	mov    eax,0xffffffff
    86b6:	c9                   	leave  
    86b7:	c3                   	ret    

00000000000086b8 <get_new_spi_location>:
    86b8:	f3 0f 1e fa          	endbr64 
    86bc:	55                   	push   rbp
    86bd:	48 89 e5             	mov    rbp,rsp
    86c0:	8b 05 7a 89 00 00    	mov    eax,DWORD PTR [rip+0x897a]        # 11040 <total_conversations>
    86c6:	83 f8 ff             	cmp    eax,0xffffffff
    86c9:	75 17                	jne    86e2 <get_new_spi_location+0x2a>
    86cb:	8b 05 6f 89 00 00    	mov    eax,DWORD PTR [rip+0x896f]        # 11040 <total_conversations>
    86d1:	83 c0 01             	add    eax,0x1
    86d4:	89 05 66 89 00 00    	mov    DWORD PTR [rip+0x8966],eax        # 11040 <total_conversations>
    86da:	8b 05 60 89 00 00    	mov    eax,DWORD PTR [rip+0x8960]        # 11040 <total_conversations>
    86e0:	eb 52                	jmp    8734 <get_new_spi_location+0x7c>
    86e2:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    86e9:	eb 27                	jmp    8712 <get_new_spi_location+0x5a>
    86eb:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    86ee:	48 98                	cdqe   
    86f0:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    86f7:	48 8d 15 92 19 10 00 	lea    rdx,[rip+0x101992]        # 10a090 <spi_table+0xb0>
    86fe:	0f b6 04 10          	movzx  eax,BYTE PTR [rax+rdx*1]
    8702:	83 f0 01             	xor    eax,0x1
    8705:	84 c0                	test   al,al
    8707:	74 05                	je     870e <get_new_spi_location+0x56>
    8709:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    870c:	eb 26                	jmp    8734 <get_new_spi_location+0x7c>
    870e:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    8712:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
    8715:	8b 05 25 89 00 00    	mov    eax,DWORD PTR [rip+0x8925]        # 11040 <total_conversations>
    871b:	39 c2                	cmp    edx,eax
    871d:	72 cc                	jb     86eb <get_new_spi_location+0x33>
    871f:	8b 05 1b 89 00 00    	mov    eax,DWORD PTR [rip+0x891b]        # 11040 <total_conversations>
    8725:	83 c0 01             	add    eax,0x1
    8728:	89 05 12 89 00 00    	mov    DWORD PTR [rip+0x8912],eax        # 11040 <total_conversations>
    872e:	8b 05 0c 89 00 00    	mov    eax,DWORD PTR [rip+0x890c]        # 11040 <total_conversations>
    8734:	5d                   	pop    rbp
    8735:	c3                   	ret    

0000000000008736 <add_new_conversation>:
    8736:	f3 0f 1e fa          	endbr64 
    873a:	55                   	push   rbp
    873b:	48 89 e5             	mov    rbp,rsp
    873e:	48 83 ec 20          	sub    rsp,0x20
    8742:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8746:	0f b6 05 75 18 10 00 	movzx  eax,BYTE PTR [rip+0x101875]        # 109fc2 <use_spi>
    874d:	84 c0                	test   al,al
    874f:	0f 84 08 02 00 00    	je     895d <add_new_conversation+0x227>
    8755:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8759:	48 89 c7             	mov    rdi,rax
    875c:	e8 21 fe ff ff       	call   8582 <conversation_exists>
    8761:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    8764:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    8768:	0f 84 82 00 00 00    	je     87f0 <add_new_conversation+0xba>
    876e:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8771:	48 98                	cdqe   
    8773:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    877a:	48 8d 15 5f 18 10 00 	lea    rdx,[rip+0x10185f]        # 109fe0 <spi_table>
    8781:	48 01 d0             	add    rax,rdx
    8784:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8788:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    878c:	8b 80 ac 00 00 00    	mov    eax,DWORD PTR [rax+0xac]
    8792:	8d 50 01             	lea    edx,[rax+0x1]
    8795:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8799:	89 90 ac 00 00 00    	mov    DWORD PTR [rax+0xac],edx
    879f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    87a3:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    87a6:	8d 50 01             	lea    edx,[rax+0x1]
    87a9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    87ad:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    87b0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    87b4:	8b 78 54             	mov    edi,DWORD PTR [rax+0x54]
    87b7:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    87bb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    87bf:	8b 50 58             	mov    edx,DWORD PTR [rax+0x58]
    87c2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    87c6:	48 8d 70 29          	lea    rsi,[rax+0x29]
    87ca:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    87cd:	41 89 f9             	mov    r9d,edi
    87d0:	49 89 c8             	mov    r8,rcx
    87d3:	89 d1                	mov    ecx,edx
    87d5:	48 89 f2             	mov    rdx,rsi
    87d8:	89 c6                	mov    esi,eax
    87da:	48 8d 3d af 50 00 00 	lea    rdi,[rip+0x50af]        # d890 <_IO_stdin_used+0x1890>
    87e1:	b8 00 00 00 00       	mov    eax,0x0
    87e6:	e8 75 9c ff ff       	call   2460 <printf@plt>
    87eb:	e9 6d 01 00 00       	jmp    895d <add_new_conversation+0x227>
    87f0:	b8 00 00 00 00       	mov    eax,0x0
    87f5:	e8 be fe ff ff       	call   86b8 <get_new_spi_location>
    87fa:	48 98                	cdqe   
    87fc:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8803:	48 8d 15 d6 17 10 00 	lea    rdx,[rip+0x1017d6]        # 109fe0 <spi_table>
    880a:	48 01 d0             	add    rax,rdx
    880d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8811:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8815:	ba 08 00 00 00       	mov    edx,0x8
    881a:	be 00 00 00 00       	mov    esi,0x0
    881f:	48 89 c7             	mov    rdi,rax
    8822:	e8 49 9c ff ff       	call   2470 <memset@plt>
    8827:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    882b:	c6 80 b0 00 00 00 01 	mov    BYTE PTR [rax+0xb0],0x1
    8832:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8836:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    883a:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    883e:	48 83 c2 29          	add    rdx,0x29
    8842:	48 89 c6             	mov    rsi,rax
    8845:	48 89 d7             	mov    rdi,rdx
    8848:	e8 e3 9e ff ff       	call   2730 <strcpy@plt>
    884d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8851:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
    8855:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8859:	48 89 d6             	mov    rsi,rdx
    885c:	48 89 c7             	mov    rdi,rax
    885f:	e8 cc 9e ff ff       	call   2730 <strcpy@plt>
    8864:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8868:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    886b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    886f:	89 50 58             	mov    DWORD PTR [rax+0x58],edx
    8872:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8876:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    8879:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    887d:	89 50 54             	mov    DWORD PTR [rax+0x54],edx
    8880:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8884:	c7 40 78 00 00 00 00 	mov    DWORD PTR [rax+0x78],0x0
    888b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    888f:	48 8d 50 5c          	lea    rdx,[rax+0x5c]
    8893:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8897:	48 89 50 70          	mov    QWORD PTR [rax+0x70],rdx
    889b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    889f:	48 8d 50 60          	lea    rdx,[rax+0x60]
    88a3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    88a7:	48 89 50 68          	mov    QWORD PTR [rax+0x68],rdx
    88ab:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    88af:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    88b3:	48 89 d6             	mov    rsi,rdx
    88b6:	48 89 c7             	mov    rdi,rax
    88b9:	e8 73 04 00 00       	call   8d31 <increment_stats>
    88be:	bf 00 00 00 00       	mov    edi,0x0
    88c3:	e8 68 9f ff ff       	call   2830 <time@plt>
    88c8:	48 89 c2             	mov    rdx,rax
    88cb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    88cf:	48 89 90 90 00 00 00 	mov    QWORD PTR [rax+0x90],rdx
    88d6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    88da:	c7 40 7c 00 00 00 00 	mov    DWORD PTR [rax+0x7c],0x0
    88e1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    88e5:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    88e8:	8d 50 01             	lea    edx,[rax+0x1]
    88eb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    88ef:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    88f2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    88f6:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    88f9:	89 c2                	mov    edx,eax
    88fb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    88ff:	89 90 a4 00 00 00    	mov    DWORD PTR [rax+0xa4],edx
    8905:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8909:	8b 78 54             	mov    edi,DWORD PTR [rax+0x54]
    890c:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    8910:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8914:	8b 50 58             	mov    edx,DWORD PTR [rax+0x58]
    8917:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    891b:	48 8d 70 29          	lea    rsi,[rax+0x29]
    891f:	8b 05 1b 87 00 00    	mov    eax,DWORD PTR [rip+0x871b]        # 11040 <total_conversations>
    8925:	41 89 f9             	mov    r9d,edi
    8928:	49 89 c8             	mov    r8,rcx
    892b:	89 d1                	mov    ecx,edx
    892d:	48 89 f2             	mov    rdx,rsi
    8930:	89 c6                	mov    esi,eax
    8932:	48 8d 3d 7f 4f 00 00 	lea    rdi,[rip+0x4f7f]        # d8b8 <_IO_stdin_used+0x18b8>
    8939:	b8 00 00 00 00       	mov    eax,0x0
    893e:	e8 1d 9b ff ff       	call   2460 <printf@plt>
    8943:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8947:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    894a:	83 f8 7e             	cmp    eax,0x7e
    894d:	75 0e                	jne    895d <add_new_conversation+0x227>
    894f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8953:	c7 80 88 00 00 00 f3 	mov    DWORD PTR [rax+0x88],0xf3
    895a:	00 00 00 
    895d:	90                   	nop
    895e:	c9                   	leave  
    895f:	c3                   	ret    

0000000000008960 <spi_ud_thw>:
    8960:	f3 0f 1e fa          	endbr64 
    8964:	55                   	push   rbp
    8965:	48 89 e5             	mov    rbp,rsp
    8968:	48 83 ec 20          	sub    rsp,0x20
    896c:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8970:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8974:	48 89 c7             	mov    rdi,rax
    8977:	e8 06 fc ff ff       	call   8582 <conversation_exists>
    897c:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    897f:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    8983:	0f 84 97 00 00 00    	je     8a20 <spi_ud_thw+0xc0>
    8989:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    898c:	48 98                	cdqe   
    898e:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8995:	48 8d 15 44 16 10 00 	lea    rdx,[rip+0x101644]        # 109fe0 <spi_table>
    899c:	48 01 d0             	add    rax,rdx
    899f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    89a3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    89a7:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    89aa:	8d 50 01             	lea    edx,[rax+0x1]
    89ad:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    89b1:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    89b4:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    89b8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    89bc:	48 89 d6             	mov    rsi,rdx
    89bf:	48 89 c7             	mov    rdi,rax
    89c2:	e8 6a 03 00 00       	call   8d31 <increment_stats>
    89c7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    89cb:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    89ce:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    89d2:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    89d6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    89da:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    89dd:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    89e1:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    89e5:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    89e8:	41 89 f9             	mov    r9d,edi
    89eb:	49 89 f0             	mov    r8,rsi
    89ee:	89 c6                	mov    esi,eax
    89f0:	48 8d 3d e9 4e 00 00 	lea    rdi,[rip+0x4ee9]        # d8e0 <_IO_stdin_used+0x18e0>
    89f7:	b8 00 00 00 00       	mov    eax,0x0
    89fc:	e8 5f 9a ff ff       	call   2460 <printf@plt>
    8a01:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8a05:	8b 80 88 00 00 00    	mov    eax,DWORD PTR [rax+0x88]
    8a0b:	3d f3 00 00 00       	cmp    eax,0xf3
    8a10:	75 0e                	jne    8a20 <spi_ud_thw+0xc0>
    8a12:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8a16:	c7 80 88 00 00 00 f4 	mov    DWORD PTR [rax+0x88],0xf4
    8a1d:	00 00 00 
    8a20:	90                   	nop
    8a21:	c9                   	leave  
    8a22:	c3                   	ret    

0000000000008a23 <update_table>:
    8a23:	f3 0f 1e fa          	endbr64 
    8a27:	55                   	push   rbp
    8a28:	48 89 e5             	mov    rbp,rsp
    8a2b:	48 83 ec 30          	sub    rsp,0x30
    8a2f:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    8a33:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8a3a:	00 00 
    8a3c:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8a40:	31 c0                	xor    eax,eax
    8a42:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8a46:	48 89 c7             	mov    rdi,rax
    8a49:	e8 34 fb ff ff       	call   8582 <conversation_exists>
    8a4e:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
    8a51:	83 7d e4 ff          	cmp    DWORD PTR [rbp-0x1c],0xffffffff
    8a55:	0f 84 4c 01 00 00    	je     8ba7 <update_table+0x184>
    8a5b:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    8a5e:	48 98                	cdqe   
    8a60:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8a67:	48 8d 15 72 15 10 00 	lea    rdx,[rip+0x101572]        # 109fe0 <spi_table>
    8a6e:	48 01 d0             	add    rax,rdx
    8a71:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    8a75:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8a79:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    8a7c:	8d 50 01             	lea    edx,[rax+0x1]
    8a7f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8a83:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    8a86:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    8a8a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8a8e:	48 89 d6             	mov    rsi,rdx
    8a91:	48 89 c7             	mov    rdi,rax
    8a94:	e8 98 02 00 00       	call   8d31 <increment_stats>
    8a99:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8a9d:	8b 80 88 00 00 00    	mov    eax,DWORD PTR [rax+0x88]
    8aa3:	3d f4 00 00 00       	cmp    eax,0xf4
    8aa8:	75 4d                	jne    8af7 <update_table+0xd4>
    8aaa:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8aae:	c7 80 88 00 00 00 f1 	mov    DWORD PTR [rax+0x88],0xf1
    8ab5:	00 00 00 
    8ab8:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8abc:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    8abf:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8ac3:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    8ac7:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8acb:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    8ace:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8ad2:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    8ad6:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    8ad9:	41 89 f9             	mov    r9d,edi
    8adc:	49 89 f0             	mov    r8,rsi
    8adf:	89 c6                	mov    esi,eax
    8ae1:	48 8d 3d 20 4e 00 00 	lea    rdi,[rip+0x4e20]        # d908 <_IO_stdin_used+0x1908>
    8ae8:	b8 00 00 00 00       	mov    eax,0x0
    8aed:	e8 6e 99 ff ff       	call   2460 <printf@plt>
    8af2:	e9 b0 00 00 00       	jmp    8ba7 <update_table+0x184>
    8af7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8afb:	8b 80 88 00 00 00    	mov    eax,DWORD PTR [rax+0x88]
    8b01:	3d f6 00 00 00       	cmp    eax,0xf6
    8b06:	0f 85 9b 00 00 00    	jne    8ba7 <update_table+0x184>
    8b0c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8b10:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    8b13:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8b17:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    8b1b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8b1f:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    8b22:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8b26:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    8b2a:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    8b2d:	41 89 f9             	mov    r9d,edi
    8b30:	49 89 f0             	mov    r8,rsi
    8b33:	89 c6                	mov    esi,eax
    8b35:	48 8d 3d fc 4d 00 00 	lea    rdi,[rip+0x4dfc]        # d938 <_IO_stdin_used+0x1938>
    8b3c:	b8 00 00 00 00       	mov    eax,0x0
    8b41:	e8 1a 99 ff ff       	call   2460 <printf@plt>
    8b46:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8b4a:	c7 80 88 00 00 00 fa 	mov    DWORD PTR [rax+0x88],0xfa
    8b51:	00 00 00 
    8b54:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8b58:	c6 80 b0 00 00 00 00 	mov    BYTE PTR [rax+0xb0],0x0
    8b5f:	bf 00 00 00 00       	mov    edi,0x0
    8b64:	e8 c7 9c ff ff       	call   2830 <time@plt>
    8b69:	48 89 c2             	mov    rdx,rax
    8b6c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8b70:	48 89 90 98 00 00 00 	mov    QWORD PTR [rax+0x98],rdx
    8b77:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    8b7b:	48 8d 45 e8          	lea    rax,[rbp-0x18]
    8b7f:	48 89 d1             	mov    rcx,rdx
    8b82:	48 8d 15 cf f3 ff ff 	lea    rdx,[rip+0xfffffffffffff3cf]        # 7f58 <update_spi_db>
    8b89:	be 00 00 00 00       	mov    esi,0x0
    8b8e:	48 89 c7             	mov    rdi,rax
    8b91:	e8 fa 99 ff ff       	call   2590 <pthread_create@plt>
    8b96:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b9a:	be 00 00 00 00       	mov    esi,0x0
    8b9f:	48 89 c7             	mov    rdi,rax
    8ba2:	e8 a9 98 ff ff       	call   2450 <pthread_join@plt>
    8ba7:	90                   	nop
    8ba8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8bac:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    8bb3:	00 00 
    8bb5:	74 05                	je     8bbc <update_table+0x199>
    8bb7:	e8 44 9b ff ff       	call   2700 <__stack_chk_fail@plt>
    8bbc:	c9                   	leave  
    8bbd:	c3                   	ret    

0000000000008bbe <polite_end>:
    8bbe:	f3 0f 1e fa          	endbr64 
    8bc2:	55                   	push   rbp
    8bc3:	48 89 e5             	mov    rbp,rsp
    8bc6:	48 83 ec 20          	sub    rsp,0x20
    8bca:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8bce:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8bd2:	48 89 c7             	mov    rdi,rax
    8bd5:	e8 a8 f9 ff ff       	call   8582 <conversation_exists>
    8bda:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    8bdd:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    8be1:	0f 84 e1 00 00 00    	je     8cc8 <polite_end+0x10a>
    8be7:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8bea:	48 98                	cdqe   
    8bec:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8bf3:	48 8d 15 e6 13 10 00 	lea    rdx,[rip+0x1013e6]        # 109fe0 <spi_table>
    8bfa:	48 01 d0             	add    rax,rdx
    8bfd:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8c01:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c05:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    8c08:	8d 50 01             	lea    edx,[rax+0x1]
    8c0b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c0f:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    8c12:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c16:	8b 80 88 00 00 00    	mov    eax,DWORD PTR [rax+0x88]
    8c1c:	3d f5 00 00 00       	cmp    eax,0xf5
    8c21:	75 4a                	jne    8c6d <polite_end+0xaf>
    8c23:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8c27:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    8c2a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8c2e:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    8c32:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8c36:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    8c39:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8c3d:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    8c41:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8c44:	41 89 f9             	mov    r9d,edi
    8c47:	49 89 f0             	mov    r8,rsi
    8c4a:	89 c6                	mov    esi,eax
    8c4c:	48 8d 3d 1d 4d 00 00 	lea    rdi,[rip+0x4d1d]        # d970 <_IO_stdin_used+0x1970>
    8c53:	b8 00 00 00 00       	mov    eax,0x0
    8c58:	e8 03 98 ff ff       	call   2460 <printf@plt>
    8c5d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c61:	c7 80 88 00 00 00 f6 	mov    DWORD PTR [rax+0x88],0xf6
    8c68:	00 00 00 
    8c6b:	eb 48                	jmp    8cb5 <polite_end+0xf7>
    8c6d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8c71:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    8c74:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8c78:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    8c7c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8c80:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    8c83:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8c87:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    8c8b:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8c8e:	41 89 f9             	mov    r9d,edi
    8c91:	49 89 f0             	mov    r8,rsi
    8c94:	89 c6                	mov    esi,eax
    8c96:	48 8d 3d 0b 4d 00 00 	lea    rdi,[rip+0x4d0b]        # d9a8 <_IO_stdin_used+0x19a8>
    8c9d:	b8 00 00 00 00       	mov    eax,0x0
    8ca2:	e8 b9 97 ff ff       	call   2460 <printf@plt>
    8ca7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8cab:	c7 80 88 00 00 00 f5 	mov    DWORD PTR [rax+0x88],0xf5
    8cb2:	00 00 00 
    8cb5:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8cb9:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8cbd:	48 89 d6             	mov    rsi,rdx
    8cc0:	48 89 c7             	mov    rdi,rax
    8cc3:	e8 69 00 00 00       	call   8d31 <increment_stats>
    8cc8:	90                   	nop
    8cc9:	c9                   	leave  
    8cca:	c3                   	ret    

0000000000008ccb <handle_data_pkt>:
    8ccb:	f3 0f 1e fa          	endbr64 
    8ccf:	55                   	push   rbp
    8cd0:	48 89 e5             	mov    rbp,rsp
    8cd3:	48 83 ec 20          	sub    rsp,0x20
    8cd7:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8cdb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8cdf:	48 89 c7             	mov    rdi,rax
    8ce2:	e8 9b f8 ff ff       	call   8582 <conversation_exists>
    8ce7:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    8cea:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    8cee:	74 3e                	je     8d2e <handle_data_pkt+0x63>
    8cf0:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8cf3:	48 98                	cdqe   
    8cf5:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8cfc:	48 8d 15 dd 12 10 00 	lea    rdx,[rip+0x1012dd]        # 109fe0 <spi_table>
    8d03:	48 01 d0             	add    rax,rdx
    8d06:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8d0a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d0e:	8b 40 78             	mov    eax,DWORD PTR [rax+0x78]
    8d11:	8d 50 01             	lea    edx,[rax+0x1]
    8d14:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d18:	89 50 78             	mov    DWORD PTR [rax+0x78],edx
    8d1b:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8d1f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d23:	48 89 d6             	mov    rsi,rdx
    8d26:	48 89 c7             	mov    rdi,rax
    8d29:	e8 03 00 00 00       	call   8d31 <increment_stats>
    8d2e:	90                   	nop
    8d2f:	c9                   	leave  
    8d30:	c3                   	ret    

0000000000008d31 <increment_stats>:
    8d31:	f3 0f 1e fa          	endbr64 
    8d35:	55                   	push   rbp
    8d36:	48 89 e5             	mov    rbp,rsp
    8d39:	48 83 ec 10          	sub    rsp,0x10
    8d3d:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    8d41:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    8d45:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8d49:	48 8d 50 29          	lea    rdx,[rax+0x29]
    8d4d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d51:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8d55:	48 89 d6             	mov    rsi,rdx
    8d58:	48 89 c7             	mov    rdi,rax
    8d5b:	e8 b0 99 ff ff       	call   2710 <strcmp@plt>
    8d60:	85 c0                	test   eax,eax
    8d62:	75 13                	jne    8d77 <increment_stats+0x46>
    8d64:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8d68:	8b 40 60             	mov    eax,DWORD PTR [rax+0x60]
    8d6b:	8d 50 01             	lea    edx,[rax+0x1]
    8d6e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8d72:	89 50 60             	mov    DWORD PTR [rax+0x60],edx
    8d75:	eb 2c                	jmp    8da3 <increment_stats+0x72>
    8d77:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    8d7b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d7f:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8d83:	48 89 d6             	mov    rsi,rdx
    8d86:	48 89 c7             	mov    rdi,rax
    8d89:	e8 82 99 ff ff       	call   2710 <strcmp@plt>
    8d8e:	85 c0                	test   eax,eax
    8d90:	75 11                	jne    8da3 <increment_stats+0x72>
    8d92:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8d96:	8b 40 5c             	mov    eax,DWORD PTR [rax+0x5c]
    8d99:	8d 50 01             	lea    edx,[rax+0x1]
    8d9c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8da0:	89 50 5c             	mov    DWORD PTR [rax+0x5c],edx
    8da3:	90                   	nop
    8da4:	c9                   	leave  
    8da5:	c3                   	ret    

0000000000008da6 <lprintf>:
    8da6:	f3 0f 1e fa          	endbr64 
    8daa:	55                   	push   rbp
    8dab:	48 89 e5             	mov    rbp,rsp
    8dae:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
    8db5:	48 89 bd 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rdi
    8dbc:	48 89 b5 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rsi
    8dc3:	48 89 95 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdx
    8dca:	48 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rcx
    8dd1:	4c 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r8
    8dd8:	4c 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r9
    8ddf:	84 c0                	test   al,al
    8de1:	74 20                	je     8e03 <lprintf+0x5d>
    8de3:	0f 29 45 80          	movaps XMMWORD PTR [rbp-0x80],xmm0
    8de7:	0f 29 4d 90          	movaps XMMWORD PTR [rbp-0x70],xmm1
    8deb:	0f 29 55 a0          	movaps XMMWORD PTR [rbp-0x60],xmm2
    8def:	0f 29 5d b0          	movaps XMMWORD PTR [rbp-0x50],xmm3
    8df3:	0f 29 65 c0          	movaps XMMWORD PTR [rbp-0x40],xmm4
    8df7:	0f 29 6d d0          	movaps XMMWORD PTR [rbp-0x30],xmm5
    8dfb:	0f 29 75 e0          	movaps XMMWORD PTR [rbp-0x20],xmm6
    8dff:	0f 29 7d f0          	movaps XMMWORD PTR [rbp-0x10],xmm7
    8e03:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8e0a:	00 00 
    8e0c:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    8e13:	31 c0                	xor    eax,eax
    8e15:	c7 85 30 ff ff ff 10 	mov    DWORD PTR [rbp-0xd0],0x10
    8e1c:	00 00 00 
    8e1f:	c7 85 34 ff ff ff 30 	mov    DWORD PTR [rbp-0xcc],0x30
    8e26:	00 00 00 
    8e29:	48 8d 45 10          	lea    rax,[rbp+0x10]
    8e2d:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    8e34:	48 8d 85 50 ff ff ff 	lea    rax,[rbp-0xb0]
    8e3b:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    8e42:	48 8d 95 30 ff ff ff 	lea    rdx,[rbp-0xd0]
    8e49:	48 8b 8d 20 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xe0]
    8e50:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    8e57:	48 89 ce             	mov    rsi,rcx
    8e5a:	48 89 c7             	mov    rdi,rax
    8e5d:	b8 00 00 00 00       	mov    eax,0x0
    8e62:	e8 79 99 ff ff       	call   27e0 <fprintf@plt>
    8e67:	90                   	nop
    8e68:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    8e6f:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    8e76:	00 00 
    8e78:	74 05                	je     8e7f <lprintf+0xd9>
    8e7a:	e8 81 98 ff ff       	call   2700 <__stack_chk_fail@plt>
    8e7f:	c9                   	leave  
    8e80:	c3                   	ret    

0000000000008e81 <lfprintf>:
    8e81:	f3 0f 1e fa          	endbr64 
    8e85:	55                   	push   rbp
    8e86:	48 89 e5             	mov    rbp,rsp
    8e89:	48 81 ec 90 08 00 00 	sub    rsp,0x890
    8e90:	48 89 bd 98 f7 ff ff 	mov    QWORD PTR [rbp-0x868],rdi
    8e97:	48 89 b5 90 f7 ff ff 	mov    QWORD PTR [rbp-0x870],rsi
    8e9e:	48 89 95 88 f7 ff ff 	mov    QWORD PTR [rbp-0x878],rdx
    8ea5:	48 89 8d 80 f7 ff ff 	mov    QWORD PTR [rbp-0x880],rcx
    8eac:	44 89 85 7c f7 ff ff 	mov    DWORD PTR [rbp-0x884],r8d
    8eb3:	44 89 8d 78 f7 ff ff 	mov    DWORD PTR [rbp-0x888],r9d
    8eba:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8ec1:	00 00 
    8ec3:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8ec7:	31 c0                	xor    eax,eax
    8ec9:	48 8b 85 98 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x868]
    8ed0:	48 8d 35 09 4b 00 00 	lea    rsi,[rip+0x4b09]        # d9e0 <_IO_stdin_used+0x19e0>
    8ed7:	48 89 c7             	mov    rdi,rax
    8eda:	e8 51 96 ff ff       	call   2530 <fopen@plt>
    8edf:	48 89 85 a8 f7 ff ff 	mov    QWORD PTR [rbp-0x858],rax
    8ee6:	48 83 bd a8 f7 ff ff 	cmp    QWORD PTR [rbp-0x858],0x0
    8eed:	00 
    8eee:	75 20                	jne    8f10 <lfprintf+0x8f>
    8ef0:	48 8b 85 90 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x870]
    8ef7:	48 89 c6             	mov    rsi,rax
    8efa:	48 8d 3d e7 4a 00 00 	lea    rdi,[rip+0x4ae7]        # d9e8 <_IO_stdin_used+0x19e8>
    8f01:	b8 00 00 00 00       	mov    eax,0x0
    8f06:	e8 55 95 ff ff       	call   2460 <printf@plt>
    8f0b:	e9 cd 00 00 00       	jmp    8fdd <lfprintf+0x15c>
    8f10:	48 8d 85 b0 f7 ff ff 	lea    rax,[rbp-0x850]
    8f17:	48 89 c7             	mov    rdi,rax
    8f1a:	e8 b4 a4 ff ff       	call   33d3 <cb_get_formatted_time>
    8f1f:	83 bd 7c f7 ff ff ff 	cmp    DWORD PTR [rbp-0x884],0xffffffff
    8f26:	75 3f                	jne    8f67 <lfprintf+0xe6>
    8f28:	48 8b bd 80 f7 ff ff 	mov    rdi,QWORD PTR [rbp-0x880]
    8f2f:	48 8b b5 88 f7 ff ff 	mov    rsi,QWORD PTR [rbp-0x878]
    8f36:	48 8b 8d 90 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x870]
    8f3d:	48 8d 95 b0 f7 ff ff 	lea    rdx,[rbp-0x850]
    8f44:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    8f4b:	49 89 f9             	mov    r9,rdi
    8f4e:	49 89 f0             	mov    r8,rsi
    8f51:	48 8d 35 be 4a 00 00 	lea    rsi,[rip+0x4abe]        # da16 <_IO_stdin_used+0x1a16>
    8f58:	48 89 c7             	mov    rdi,rax
    8f5b:	b8 00 00 00 00       	mov    eax,0x0
    8f60:	e8 7b 96 ff ff       	call   25e0 <sprintf@plt>
    8f65:	eb 4e                	jmp    8fb5 <lfprintf+0x134>
    8f67:	44 8b 85 7c f7 ff ff 	mov    r8d,DWORD PTR [rbp-0x884]
    8f6e:	48 8b bd 88 f7 ff ff 	mov    rdi,QWORD PTR [rbp-0x878]
    8f75:	48 8b 8d 90 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x870]
    8f7c:	48 8d 95 b0 f7 ff ff 	lea    rdx,[rbp-0x850]
    8f83:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    8f8a:	8b b5 78 f7 ff ff    	mov    esi,DWORD PTR [rbp-0x888]
    8f90:	56                   	push   rsi
    8f91:	ff b5 80 f7 ff ff    	push   QWORD PTR [rbp-0x880]
    8f97:	45 89 c1             	mov    r9d,r8d
    8f9a:	49 89 f8             	mov    r8,rdi
    8f9d:	48 8d 35 82 4a 00 00 	lea    rsi,[rip+0x4a82]        # da26 <_IO_stdin_used+0x1a26>
    8fa4:	48 89 c7             	mov    rdi,rax
    8fa7:	b8 00 00 00 00       	mov    eax,0x0
    8fac:	e8 2f 96 ff ff       	call   25e0 <sprintf@plt>
    8fb1:	48 83 c4 10          	add    rsp,0x10
    8fb5:	48 8b 95 a8 f7 ff ff 	mov    rdx,QWORD PTR [rbp-0x858]
    8fbc:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    8fc3:	48 89 d6             	mov    rsi,rdx
    8fc6:	48 89 c7             	mov    rdi,rax
    8fc9:	e8 82 96 ff ff       	call   2650 <fputs@plt>
    8fce:	48 8b 85 a8 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x858]
    8fd5:	48 89 c7             	mov    rdi,rax
    8fd8:	e8 93 97 ff ff       	call   2770 <fclose@plt>
    8fdd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8fe1:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    8fe8:	00 00 
    8fea:	74 05                	je     8ff1 <lfprintf+0x170>
    8fec:	e8 0f 97 ff ff       	call   2700 <__stack_chk_fail@plt>
    8ff1:	c9                   	leave  
    8ff2:	c3                   	ret    

0000000000008ff3 <saprintf>:
    8ff3:	f3 0f 1e fa          	endbr64 
    8ff7:	55                   	push   rbp
    8ff8:	48 89 e5             	mov    rbp,rsp
    8ffb:	48 83 ec 20          	sub    rsp,0x20
    8fff:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    9003:	48 8b 05 26 80 00 00 	mov    rax,QWORD PTR [rip+0x8026]        # 11030 <def_log_file>
    900a:	48 8d 35 cf 49 00 00 	lea    rsi,[rip+0x49cf]        # d9e0 <_IO_stdin_used+0x19e0>
    9011:	48 89 c7             	mov    rdi,rax
    9014:	e8 17 95 ff ff       	call   2530 <fopen@plt>
    9019:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    901d:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    9022:	75 1a                	jne    903e <saprintf+0x4b>
    9024:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9028:	48 89 c6             	mov    rsi,rax
    902b:	48 8d 3d b6 49 00 00 	lea    rdi,[rip+0x49b6]        # d9e8 <_IO_stdin_used+0x19e8>
    9032:	b8 00 00 00 00       	mov    eax,0x0
    9037:	e8 24 94 ff ff       	call   2460 <printf@plt>
    903c:	eb 1f                	jmp    905d <saprintf+0x6a>
    903e:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    9042:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9046:	48 89 d6             	mov    rsi,rdx
    9049:	48 89 c7             	mov    rdi,rax
    904c:	e8 ff 95 ff ff       	call   2650 <fputs@plt>
    9051:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9055:	48 89 c7             	mov    rdi,rax
    9058:	e8 13 97 ff ff       	call   2770 <fclose@plt>
    905d:	c9                   	leave  
    905e:	c3                   	ret    

000000000000905f <substr>:
    905f:	f3 0f 1e fa          	endbr64 
    9063:	55                   	push   rbp
    9064:	48 89 e5             	mov    rbp,rsp
    9067:	48 83 ec 20          	sub    rsp,0x20
    906b:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    906f:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    9072:	89 55 e0             	mov    DWORD PTR [rbp-0x20],edx
    9075:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
    9078:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    907b:	83 c0 02             	add    eax,0x2
    907e:	48 98                	cdqe   
    9080:	48 89 c7             	mov    rdi,rax
    9083:	e8 98 94 ff ff       	call   2520 <malloc@plt>
    9088:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    908c:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    908f:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    9092:	eb 27                	jmp    90bb <substr+0x5c>
    9094:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    9097:	48 63 d0             	movsxd rdx,eax
    909a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    909e:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    90a2:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    90a5:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    90a8:	48 63 d0             	movsxd rdx,eax
    90ab:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    90af:	48 01 c2             	add    rdx,rax
    90b2:	0f b6 01             	movzx  eax,BYTE PTR [rcx]
    90b5:	88 02                	mov    BYTE PTR [rdx],al
    90b7:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    90bb:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    90be:	3b 45 e0             	cmp    eax,DWORD PTR [rbp-0x20]
    90c1:	7e d1                	jle    9094 <substr+0x35>
    90c3:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
    90c6:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    90c9:	48 98                	cdqe   
    90cb:	48 8d 50 01          	lea    rdx,[rax+0x1]
    90cf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    90d3:	48 01 d0             	add    rax,rdx
    90d6:	c6 00 00             	mov    BYTE PTR [rax],0x0
    90d9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    90dd:	c9                   	leave  
    90de:	c3                   	ret    

00000000000090df <delimit>:
    90df:	f3 0f 1e fa          	endbr64 
    90e3:	55                   	push   rbp
    90e4:	48 89 e5             	mov    rbp,rsp
    90e7:	89 f8                	mov    eax,edi
    90e9:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
    90ec:	80 7d fc 20          	cmp    BYTE PTR [rbp-0x4],0x20
    90f0:	0f 94 c0             	sete   al
    90f3:	5d                   	pop    rbp
    90f4:	c3                   	ret    

00000000000090f5 <isdigit>:
    90f5:	f3 0f 1e fa          	endbr64 
    90f9:	55                   	push   rbp
    90fa:	48 89 e5             	mov    rbp,rsp
    90fd:	53                   	push   rbx
    90fe:	48 83 ec 28          	sub    rsp,0x28
    9102:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    9106:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    910d:	e9 f7 00 00 00       	jmp    9209 <isdigit+0x114>
    9112:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9115:	48 63 d0             	movsxd rdx,eax
    9118:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    911c:	48 01 d0             	add    rax,rdx
    911f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9122:	3c 30                	cmp    al,0x30
    9124:	0f 84 db 00 00 00    	je     9205 <isdigit+0x110>
    912a:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    912d:	48 63 d0             	movsxd rdx,eax
    9130:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9134:	48 01 d0             	add    rax,rdx
    9137:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    913a:	3c 31                	cmp    al,0x31
    913c:	0f 84 c3 00 00 00    	je     9205 <isdigit+0x110>
    9142:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9145:	48 63 d0             	movsxd rdx,eax
    9148:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    914c:	48 01 d0             	add    rax,rdx
    914f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9152:	3c 32                	cmp    al,0x32
    9154:	0f 84 ab 00 00 00    	je     9205 <isdigit+0x110>
    915a:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    915d:	48 63 d0             	movsxd rdx,eax
    9160:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9164:	48 01 d0             	add    rax,rdx
    9167:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    916a:	3c 33                	cmp    al,0x33
    916c:	0f 84 93 00 00 00    	je     9205 <isdigit+0x110>
    9172:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9175:	48 63 d0             	movsxd rdx,eax
    9178:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    917c:	48 01 d0             	add    rax,rdx
    917f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9182:	3c 34                	cmp    al,0x34
    9184:	74 7f                	je     9205 <isdigit+0x110>
    9186:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9189:	48 63 d0             	movsxd rdx,eax
    918c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9190:	48 01 d0             	add    rax,rdx
    9193:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9196:	3c 34                	cmp    al,0x34
    9198:	74 6b                	je     9205 <isdigit+0x110>
    919a:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    919d:	48 63 d0             	movsxd rdx,eax
    91a0:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    91a4:	48 01 d0             	add    rax,rdx
    91a7:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    91aa:	3c 35                	cmp    al,0x35
    91ac:	74 57                	je     9205 <isdigit+0x110>
    91ae:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    91b1:	48 63 d0             	movsxd rdx,eax
    91b4:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    91b8:	48 01 d0             	add    rax,rdx
    91bb:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    91be:	3c 36                	cmp    al,0x36
    91c0:	74 43                	je     9205 <isdigit+0x110>
    91c2:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    91c5:	48 63 d0             	movsxd rdx,eax
    91c8:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    91cc:	48 01 d0             	add    rax,rdx
    91cf:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    91d2:	3c 37                	cmp    al,0x37
    91d4:	74 2f                	je     9205 <isdigit+0x110>
    91d6:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    91d9:	48 63 d0             	movsxd rdx,eax
    91dc:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    91e0:	48 01 d0             	add    rax,rdx
    91e3:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    91e6:	3c 38                	cmp    al,0x38
    91e8:	74 1b                	je     9205 <isdigit+0x110>
    91ea:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    91ed:	48 63 d0             	movsxd rdx,eax
    91f0:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    91f4:	48 01 d0             	add    rax,rdx
    91f7:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    91fa:	3c 39                	cmp    al,0x39
    91fc:	74 07                	je     9205 <isdigit+0x110>
    91fe:	b8 00 00 00 00       	mov    eax,0x0
    9203:	eb 24                	jmp    9229 <isdigit+0x134>
    9205:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    9209:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    920c:	48 63 d8             	movsxd rbx,eax
    920f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9213:	48 89 c7             	mov    rdi,rax
    9216:	e8 a5 93 ff ff       	call   25c0 <strlen@plt>
    921b:	48 39 c3             	cmp    rbx,rax
    921e:	0f 82 ee fe ff ff    	jb     9112 <isdigit+0x1d>
    9224:	b8 01 00 00 00       	mov    eax,0x1
    9229:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    922d:	c9                   	leave  
    922e:	c3                   	ret    

000000000000922f <assign_port_number>:
    922f:	f3 0f 1e fa          	endbr64 
    9233:	55                   	push   rbp
    9234:	48 89 e5             	mov    rbp,rsp
    9237:	48 83 ec 10          	sub    rsp,0x10
    923b:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    923f:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    9243:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9247:	48 89 c7             	mov    rdi,rax
    924a:	e8 a6 fe ff ff       	call   90f5 <isdigit>
    924f:	84 c0                	test   al,al
    9251:	74 18                	je     926b <assign_port_number+0x3c>
    9253:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9257:	48 89 c7             	mov    rdi,rax
    925a:	e8 21 94 ff ff       	call   2680 <atoi@plt>
    925f:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    9263:	89 82 44 01 00 00    	mov    DWORD PTR [rdx+0x144],eax
    9269:	eb 25                	jmp    9290 <assign_port_number+0x61>
    926b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    926f:	48 8d 35 ca 47 00 00 	lea    rsi,[rip+0x47ca]        # da40 <_IO_stdin_used+0x1a40>
    9276:	48 89 c7             	mov    rdi,rax
    9279:	e8 92 94 ff ff       	call   2710 <strcmp@plt>
    927e:	85 c0                	test   eax,eax
    9280:	75 0e                	jne    9290 <assign_port_number+0x61>
    9282:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9286:	c7 80 44 01 00 00 ff 	mov    DWORD PTR [rax+0x144],0xffffffff
    928d:	ff ff ff 
    9290:	90                   	nop
    9291:	c9                   	leave  
    9292:	c3                   	ret    

0000000000009293 <check_port_number>:
    9293:	f3 0f 1e fa          	endbr64 
    9297:	55                   	push   rbp
    9298:	48 89 e5             	mov    rbp,rsp
    929b:	48 83 ec 10          	sub    rsp,0x10
    929f:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    92a3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    92a7:	48 89 c7             	mov    rdi,rax
    92aa:	e8 46 fe ff ff       	call   90f5 <isdigit>
    92af:	84 c0                	test   al,al
    92b1:	74 0e                	je     92c1 <check_port_number+0x2e>
    92b3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    92b7:	48 89 c7             	mov    rdi,rax
    92ba:	e8 c1 93 ff ff       	call   2680 <atoi@plt>
    92bf:	eb 23                	jmp    92e4 <check_port_number+0x51>
    92c1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    92c5:	48 8d 35 74 47 00 00 	lea    rsi,[rip+0x4774]        # da40 <_IO_stdin_used+0x1a40>
    92cc:	48 89 c7             	mov    rdi,rax
    92cf:	e8 3c 94 ff ff       	call   2710 <strcmp@plt>
    92d4:	85 c0                	test   eax,eax
    92d6:	75 07                	jne    92df <check_port_number+0x4c>
    92d8:	b8 ff ff ff ff       	mov    eax,0xffffffff
    92dd:	eb 05                	jmp    92e4 <check_port_number+0x51>
    92df:	b8 ff ff ff ff       	mov    eax,0xffffffff
    92e4:	c9                   	leave  
    92e5:	c3                   	ret    

00000000000092e6 <assign_protocol>:
    92e6:	f3 0f 1e fa          	endbr64 
    92ea:	55                   	push   rbp
    92eb:	48 89 e5             	mov    rbp,rsp
    92ee:	48 83 ec 10          	sub    rsp,0x10
    92f2:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    92f6:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    92fa:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    92fe:	48 8d 35 3f 47 00 00 	lea    rsi,[rip+0x473f]        # da44 <_IO_stdin_used+0x1a44>
    9305:	48 89 c7             	mov    rdi,rax
    9308:	e8 03 94 ff ff       	call   2710 <strcmp@plt>
    930d:	85 c0                	test   eax,eax
    930f:	75 10                	jne    9321 <assign_protocol+0x3b>
    9311:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9315:	c7 80 40 01 00 00 ff 	mov    DWORD PTR [rax+0x140],0xffffffff
    931c:	ff ff ff 
    931f:	eb 73                	jmp    9394 <assign_protocol+0xae>
    9321:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9325:	48 8d 35 1c 47 00 00 	lea    rsi,[rip+0x471c]        # da48 <_IO_stdin_used+0x1a48>
    932c:	48 89 c7             	mov    rdi,rax
    932f:	e8 dc 93 ff ff       	call   2710 <strcmp@plt>
    9334:	85 c0                	test   eax,eax
    9336:	75 10                	jne    9348 <assign_protocol+0x62>
    9338:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    933c:	c7 80 40 01 00 00 80 	mov    DWORD PTR [rax+0x140],0x80
    9343:	00 00 00 
    9346:	eb 4c                	jmp    9394 <assign_protocol+0xae>
    9348:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    934c:	48 8d 35 fa 46 00 00 	lea    rsi,[rip+0x46fa]        # da4d <_IO_stdin_used+0x1a4d>
    9353:	48 89 c7             	mov    rdi,rax
    9356:	e8 b5 93 ff ff       	call   2710 <strcmp@plt>
    935b:	85 c0                	test   eax,eax
    935d:	75 10                	jne    936f <assign_protocol+0x89>
    935f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9363:	c7 80 40 01 00 00 7e 	mov    DWORD PTR [rax+0x140],0x7e
    936a:	00 00 00 
    936d:	eb 25                	jmp    9394 <assign_protocol+0xae>
    936f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9373:	48 8d 35 d7 46 00 00 	lea    rsi,[rip+0x46d7]        # da51 <_IO_stdin_used+0x1a51>
    937a:	48 89 c7             	mov    rdi,rax
    937d:	e8 8e 93 ff ff       	call   2710 <strcmp@plt>
    9382:	85 c0                	test   eax,eax
    9384:	75 0e                	jne    9394 <assign_protocol+0xae>
    9386:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    938a:	c7 80 40 01 00 00 7f 	mov    DWORD PTR [rax+0x140],0x7f
    9391:	00 00 00 
    9394:	90                   	nop
    9395:	c9                   	leave  
    9396:	c3                   	ret    

0000000000009397 <get_ruletype>:
    9397:	f3 0f 1e fa          	endbr64 
    939b:	55                   	push   rbp
    939c:	48 89 e5             	mov    rbp,rsp
    939f:	48 83 ec 10          	sub    rsp,0x10
    93a3:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    93a7:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    93ab:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    93af:	ba 09 00 00 00       	mov    edx,0x9
    93b4:	48 8d 35 9a 46 00 00 	lea    rsi,[rip+0x469a]        # da55 <_IO_stdin_used+0x1a55>
    93bb:	48 89 c7             	mov    rdi,rax
    93be:	e8 4d 91 ff ff       	call   2510 <strncmp@plt>
    93c3:	85 c0                	test   eax,eax
    93c5:	75 17                	jne    93de <get_ruletype+0x47>
    93c7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    93cb:	48 8d 15 bd c1 ff ff 	lea    rdx,[rip+0xffffffffffffc1bd]        # 558f <str_match_parser>
    93d2:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    93d9:	e9 82 00 00 00       	jmp    9460 <get_ruletype+0xc9>
    93de:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    93e2:	ba 04 00 00 00       	mov    edx,0x4
    93e7:	48 8d 35 71 46 00 00 	lea    rsi,[rip+0x4671]        # da5f <_IO_stdin_used+0x1a5f>
    93ee:	48 89 c7             	mov    rdi,rax
    93f1:	e8 1a 91 ff ff       	call   2510 <strncmp@plt>
    93f6:	85 c0                	test   eax,eax
    93f8:	75 14                	jne    940e <get_ruletype+0x77>
    93fa:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    93fe:	48 8d 15 2d c4 ff ff 	lea    rdx,[rip+0xffffffffffffc42d]        # 5832 <none>
    9405:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    940c:	eb 52                	jmp    9460 <get_ruletype+0xc9>
    940e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9412:	ba 04 00 00 00       	mov    edx,0x4
    9417:	48 8d 35 46 46 00 00 	lea    rsi,[rip+0x4646]        # da64 <_IO_stdin_used+0x1a64>
    941e:	48 89 c7             	mov    rdi,rax
    9421:	e8 ea 90 ff ff       	call   2510 <strncmp@plt>
    9426:	85 c0                	test   eax,eax
    9428:	75 14                	jne    943e <get_ruletype+0xa7>
    942a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    942e:	48 8d 15 14 c4 ff ff 	lea    rdx,[rip+0xffffffffffffc414]        # 5849 <pcre_match>
    9435:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    943c:	eb 22                	jmp    9460 <get_ruletype+0xc9>
    943e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9442:	48 89 c6             	mov    rsi,rax
    9445:	48 8d 3d 1d 46 00 00 	lea    rdi,[rip+0x461d]        # da69 <_IO_stdin_used+0x1a69>
    944c:	b8 00 00 00 00       	mov    eax,0x0
    9451:	e8 0a 90 ff ff       	call   2460 <printf@plt>
    9456:	bf 01 00 00 00       	mov    edi,0x1
    945b:	e8 70 90 ff ff       	call   24d0 <exit@plt>
    9460:	c9                   	leave  
    9461:	c3                   	ret    

0000000000009462 <numeric_check>:
    9462:	f3 0f 1e fa          	endbr64 
    9466:	55                   	push   rbp
    9467:	48 89 e5             	mov    rbp,rsp
    946a:	48 83 ec 30          	sub    rsp,0x30
    946e:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    9472:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    9475:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    9479:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    947d:	48 89 c7             	mov    rdi,rax
    9480:	e8 70 fc ff ff       	call   90f5 <isdigit>
    9485:	84 c0                	test   al,al
    9487:	74 27                	je     94b0 <numeric_check+0x4e>
    9489:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    948d:	48 89 c7             	mov    rdi,rax
    9490:	e8 eb 91 ff ff       	call   2680 <atoi@plt>
    9495:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
    9498:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    949b:	39 45 e4             	cmp    DWORD PTR [rbp-0x1c],eax
    949e:	77 10                	ja     94b0 <numeric_check+0x4e>
    94a0:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    94a3:	48 98                	cdqe   
    94a5:	48 39 45 d8          	cmp    QWORD PTR [rbp-0x28],rax
    94a9:	72 05                	jb     94b0 <numeric_check+0x4e>
    94ab:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    94ae:	eb 05                	jmp    94b5 <numeric_check+0x53>
    94b0:	b8 ff ff ff ff       	mov    eax,0xffffffff
    94b5:	c9                   	leave  
    94b6:	c3                   	ret    

00000000000094b7 <sc_strip>:
    94b7:	f3 0f 1e fa          	endbr64 
    94bb:	55                   	push   rbp
    94bc:	48 89 e5             	mov    rbp,rsp
    94bf:	48 83 ec 10          	sub    rsp,0x10
    94c3:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    94c7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    94cb:	48 8d 35 ae 45 00 00 	lea    rsi,[rip+0x45ae]        # da80 <_IO_stdin_used+0x1a80>
    94d2:	48 89 c7             	mov    rdi,rax
    94d5:	e8 b6 92 ff ff       	call   2790 <strcspn@plt>
    94da:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    94de:	48 01 d0             	add    rax,rdx
    94e1:	c6 00 00             	mov    BYTE PTR [rax],0x0
    94e4:	90                   	nop
    94e5:	c9                   	leave  
    94e6:	c3                   	ret    

00000000000094e7 <void_rule>:
    94e7:	f3 0f 1e fa          	endbr64 
    94eb:	55                   	push   rbp
    94ec:	48 89 e5             	mov    rbp,rsp
    94ef:	48 83 ec 10          	sub    rsp,0x10
    94f3:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    94f7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    94fb:	48 05 6e 03 00 00    	add    rax,0x36e
    9501:	ba 0a 00 00 00       	mov    edx,0xa
    9506:	be 00 00 00 00       	mov    esi,0x0
    950b:	48 89 c7             	mov    rdi,rax
    950e:	e8 5d 8f ff ff       	call   2470 <memset@plt>
    9513:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9517:	48 05 68 03 00 00    	add    rax,0x368
    951d:	ba 06 00 00 00       	mov    edx,0x6
    9522:	be 00 00 00 00       	mov    esi,0x0
    9527:	48 89 c7             	mov    rdi,rax
    952a:	e8 41 8f ff ff       	call   2470 <memset@plt>
    952f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9533:	48 05 50 03 00 00    	add    rax,0x350
    9539:	ba 18 00 00 00       	mov    edx,0x18
    953e:	be 00 00 00 00       	mov    esi,0x0
    9543:	48 89 c7             	mov    rdi,rax
    9546:	e8 25 8f ff ff       	call   2470 <memset@plt>
    954b:	90                   	nop
    954c:	c9                   	leave  
    954d:	c3                   	ret    

000000000000954e <line_parser>:
    954e:	f3 0f 1e fa          	endbr64 
    9552:	55                   	push   rbp
    9553:	48 89 e5             	mov    rbp,rsp
    9556:	53                   	push   rbx
    9557:	48 81 ec 98 00 00 00 	sub    rsp,0x98
    955e:	48 89 bd 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rdi
    9565:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    956c:	00 00 
    956e:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    9572:	31 c0                	xor    eax,eax
    9574:	8b 05 9a 7a 00 00    	mov    eax,DWORD PTR [rip+0x7a9a]        # 11014 <num_rules>
    957a:	83 c0 01             	add    eax,0x1
    957d:	89 05 91 7a 00 00    	mov    DWORD PTR [rip+0x7a91],eax        # 11014 <num_rules>
    9583:	8b 05 8b 7a 00 00    	mov    eax,DWORD PTR [rip+0x7a8b]        # 11014 <num_rules>
    9589:	48 98                	cdqe   
    958b:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    9592:	48 8d 15 47 7d 00 00 	lea    rdx,[rip+0x7d47]        # 112e0 <rules>
    9599:	48 01 d0             	add    rax,rdx
    959c:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    95a0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    95a4:	ba 08 00 00 00       	mov    edx,0x8
    95a9:	be 00 00 00 00       	mov    esi,0x0
    95ae:	48 89 c7             	mov    rdi,rax
    95b1:	e8 ba 8e ff ff       	call   2470 <memset@plt>
    95b6:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    95ba:	c7 80 44 01 00 00 ff 	mov    DWORD PTR [rax+0x144],0xffffffff
    95c1:	ff ff ff 
    95c4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    95c8:	c7 80 40 01 00 00 ff 	mov    DWORD PTR [rax+0x140],0xffffffff
    95cf:	ff ff ff 
    95d2:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    95d6:	c7 40 1c ff ff ff ff 	mov    DWORD PTR [rax+0x1c],0xffffffff
    95dd:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    95e1:	c7 40 18 ff ff ff ff 	mov    DWORD PTR [rax+0x18],0xffffffff
    95e8:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    95ec:	c7 40 10 ff ff ff ff 	mov    DWORD PTR [rax+0x10],0xffffffff
    95f3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    95f7:	c7 80 4c 03 00 00 00 	mov    DWORD PTR [rax+0x34c],0x0
    95fe:	00 00 00 
    9601:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9605:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
    960b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    960f:	c7 40 04 00 00 00 00 	mov    DWORD PTR [rax+0x4],0x0
    9616:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    961a:	48 89 c7             	mov    rdi,rax
    961d:	e8 c5 fe ff ff       	call   94e7 <void_rule>
    9622:	c7 45 88 00 00 00 00 	mov    DWORD PTR [rbp-0x78],0x0
    9629:	c6 85 7c ff ff ff 00 	mov    BYTE PTR [rbp-0x84],0x0
    9630:	c7 45 80 00 00 00 00 	mov    DWORD PTR [rbp-0x80],0x0
    9637:	c7 45 84 00 00 00 00 	mov    DWORD PTR [rbp-0x7c],0x0
    963e:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9645:	48 89 c7             	mov    rdi,rax
    9648:	e8 73 8f ff ff       	call   25c0 <strlen@plt>
    964d:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    9650:	c6 85 7d ff ff ff 00 	mov    BYTE PTR [rbp-0x83],0x0
    9657:	c6 85 7e ff ff ff 00 	mov    BYTE PTR [rbp-0x82],0x0
    965e:	c6 85 7f ff ff ff 00 	mov    BYTE PTR [rbp-0x81],0x0
    9665:	e9 98 0d 00 00       	jmp    a402 <line_parser+0xeb4>
    966a:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    966d:	48 63 d0             	movsxd rdx,eax
    9670:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9677:	48 01 d0             	add    rax,rdx
    967a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    967d:	0f be c0             	movsx  eax,al
    9680:	89 c7                	mov    edi,eax
    9682:	e8 58 fa ff ff       	call   90df <delimit>
    9687:	83 f0 01             	xor    eax,0x1
    968a:	84 c0                	test   al,al
    968c:	74 04                	je     9692 <line_parser+0x144>
    968e:	83 45 84 01          	add    DWORD PTR [rbp-0x7c],0x1
    9692:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9695:	48 63 d0             	movsxd rdx,eax
    9698:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    969f:	48 01 d0             	add    rax,rdx
    96a2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    96a5:	0f be c0             	movsx  eax,al
    96a8:	89 c7                	mov    edi,eax
    96aa:	e8 30 fa ff ff       	call   90df <delimit>
    96af:	84 c0                	test   al,al
    96b1:	74 3f                	je     96f2 <line_parser+0x1a4>
    96b3:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    96b6:	3b 45 80             	cmp    eax,DWORD PTR [rbp-0x80]
    96b9:	75 37                	jne    96f2 <line_parser+0x1a4>
    96bb:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    96be:	48 63 d0             	movsxd rdx,eax
    96c1:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    96c8:	48 01 d0             	add    rax,rdx
    96cb:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    96ce:	3c 3a                	cmp    al,0x3a
    96d0:	75 11                	jne    96e3 <line_parser+0x195>
    96d2:	48 8d 3d a9 43 00 00 	lea    rdi,[rip+0x43a9]        # da82 <_IO_stdin_used+0x1a82>
    96d9:	b8 00 00 00 00       	mov    eax,0x0
    96de:	e8 7d 8d ff ff       	call   2460 <printf@plt>
    96e3:	83 45 84 01          	add    DWORD PTR [rbp-0x7c],0x1
    96e7:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    96ea:	89 45 80             	mov    DWORD PTR [rbp-0x80],eax
    96ed:	e9 10 0d 00 00       	jmp    a402 <line_parser+0xeb4>
    96f2:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    96f5:	48 63 d0             	movsxd rdx,eax
    96f8:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    96ff:	48 01 d0             	add    rax,rdx
    9702:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9705:	0f be c0             	movsx  eax,al
    9708:	89 c7                	mov    edi,eax
    970a:	e8 d0 f9 ff ff       	call   90df <delimit>
    970f:	84 c0                	test   al,al
    9711:	74 08                	je     971b <line_parser+0x1cd>
    9713:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
    9716:	3b 45 84             	cmp    eax,DWORD PTR [rbp-0x7c]
    9719:	75 18                	jne    9733 <line_parser+0x1e5>
    971b:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    971e:	3b 45 8c             	cmp    eax,DWORD PTR [rbp-0x74]
    9721:	0f 85 db 0c 00 00    	jne    a402 <line_parser+0xeb4>
    9727:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
    972a:	3b 45 84             	cmp    eax,DWORD PTR [rbp-0x7c]
    972d:	0f 84 cf 0c 00 00    	je     a402 <line_parser+0xeb4>
    9733:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9736:	8d 50 ff             	lea    edx,[rax-0x1]
    9739:	8b 4d 80             	mov    ecx,DWORD PTR [rbp-0x80]
    973c:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9743:	89 ce                	mov    esi,ecx
    9745:	48 89 c7             	mov    rdi,rax
    9748:	e8 12 f9 ff ff       	call   905f <substr>
    974d:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    9751:	0f b6 85 7c ff ff ff 	movzx  eax,BYTE PTR [rbp-0x84]
    9758:	83 f0 01             	xor    eax,0x1
    975b:	84 c0                	test   al,al
    975d:	0f 84 ea 02 00 00    	je     9a4d <line_parser+0x4ff>
    9763:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9767:	48 8d 35 23 43 00 00 	lea    rsi,[rip+0x4323]        # da91 <_IO_stdin_used+0x1a91>
    976e:	48 89 c7             	mov    rdi,rax
    9771:	e8 9a 8f ff ff       	call   2710 <strcmp@plt>
    9776:	85 c0                	test   eax,eax
    9778:	75 33                	jne    97ad <line_parser+0x25f>
    977a:	0f b6 85 7d ff ff ff 	movzx  eax,BYTE PTR [rbp-0x83]
    9781:	83 f0 01             	xor    eax,0x1
    9784:	84 c0                	test   al,al
    9786:	74 25                	je     97ad <line_parser+0x25f>
    9788:	0f b6 85 7e ff ff ff 	movzx  eax,BYTE PTR [rbp-0x82]
    978f:	83 f0 01             	xor    eax,0x1
    9792:	84 c0                	test   al,al
    9794:	74 17                	je     97ad <line_parser+0x25f>
    9796:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    979a:	48 8d 15 c4 bb ff ff 	lea    rdx,[rip+0xffffffffffffbbc4]        # 5365 <stdout_alert>
    97a1:	48 89 90 80 03 00 00 	mov    QWORD PTR [rax+0x380],rdx
    97a8:	e9 31 0c 00 00       	jmp    a3de <line_parser+0xe90>
    97ad:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    97b1:	48 8d 35 90 42 00 00 	lea    rsi,[rip+0x4290]        # da48 <_IO_stdin_used+0x1a48>
    97b8:	48 89 c7             	mov    rdi,rax
    97bb:	e8 50 8f ff ff       	call   2710 <strcmp@plt>
    97c0:	85 c0                	test   eax,eax
    97c2:	74 45                	je     9809 <line_parser+0x2bb>
    97c4:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    97c8:	48 8d 35 75 42 00 00 	lea    rsi,[rip+0x4275]        # da44 <_IO_stdin_used+0x1a44>
    97cf:	48 89 c7             	mov    rdi,rax
    97d2:	e8 39 8f ff ff       	call   2710 <strcmp@plt>
    97d7:	85 c0                	test   eax,eax
    97d9:	74 2e                	je     9809 <line_parser+0x2bb>
    97db:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    97df:	48 8d 35 67 42 00 00 	lea    rsi,[rip+0x4267]        # da4d <_IO_stdin_used+0x1a4d>
    97e6:	48 89 c7             	mov    rdi,rax
    97e9:	e8 22 8f ff ff       	call   2710 <strcmp@plt>
    97ee:	85 c0                	test   eax,eax
    97f0:	74 17                	je     9809 <line_parser+0x2bb>
    97f2:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    97f6:	48 8d 35 54 42 00 00 	lea    rsi,[rip+0x4254]        # da51 <_IO_stdin_used+0x1a51>
    97fd:	48 89 c7             	mov    rdi,rax
    9800:	e8 0b 8f ff ff       	call   2710 <strcmp@plt>
    9805:	85 c0                	test   eax,eax
    9807:	75 34                	jne    983d <line_parser+0x2ef>
    9809:	0f b6 85 7e ff ff ff 	movzx  eax,BYTE PTR [rbp-0x82]
    9810:	83 f0 01             	xor    eax,0x1
    9813:	84 c0                	test   al,al
    9815:	74 26                	je     983d <line_parser+0x2ef>
    9817:	0f b6 85 7d ff ff ff 	movzx  eax,BYTE PTR [rbp-0x83]
    981e:	83 f0 01             	xor    eax,0x1
    9821:	84 c0                	test   al,al
    9823:	74 18                	je     983d <line_parser+0x2ef>
    9825:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9829:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    982d:	48 89 d6             	mov    rsi,rdx
    9830:	48 89 c7             	mov    rdi,rax
    9833:	e8 ae fa ff ff       	call   92e6 <assign_protocol>
    9838:	e9 a1 0b 00 00       	jmp    a3de <line_parser+0xe90>
    983d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9841:	48 89 c7             	mov    rdi,rax
    9844:	e8 ac f8 ff ff       	call   90f5 <isdigit>
    9849:	84 c0                	test   al,al
    984b:	75 17                	jne    9864 <line_parser+0x316>
    984d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9851:	48 8d 35 e8 41 00 00 	lea    rsi,[rip+0x41e8]        # da40 <_IO_stdin_used+0x1a40>
    9858:	48 89 c7             	mov    rdi,rax
    985b:	e8 b0 8e ff ff       	call   2710 <strcmp@plt>
    9860:	85 c0                	test   eax,eax
    9862:	75 34                	jne    9898 <line_parser+0x34a>
    9864:	0f b6 85 7d ff ff ff 	movzx  eax,BYTE PTR [rbp-0x83]
    986b:	83 f0 01             	xor    eax,0x1
    986e:	84 c0                	test   al,al
    9870:	74 26                	je     9898 <line_parser+0x34a>
    9872:	0f b6 85 7e ff ff ff 	movzx  eax,BYTE PTR [rbp-0x82]
    9879:	83 f0 01             	xor    eax,0x1
    987c:	84 c0                	test   al,al
    987e:	74 18                	je     9898 <line_parser+0x34a>
    9880:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9884:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9888:	48 89 d6             	mov    rsi,rdx
    988b:	48 89 c7             	mov    rdi,rax
    988e:	e8 9c f9 ff ff       	call   922f <assign_port_number>
    9893:	e9 46 0b 00 00       	jmp    a3de <line_parser+0xe90>
    9898:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    989c:	ba 08 00 00 00       	mov    edx,0x8
    98a1:	48 8d 35 ef 41 00 00 	lea    rsi,[rip+0x41ef]        # da97 <_IO_stdin_used+0x1a97>
    98a8:	48 89 c7             	mov    rdi,rax
    98ab:	e8 60 8c ff ff       	call   2510 <strncmp@plt>
    98b0:	85 c0                	test   eax,eax
    98b2:	75 75                	jne    9929 <line_parser+0x3db>
    98b4:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    98b8:	48 8d 50 09          	lea    rdx,[rax+0x9]
    98bc:	48 8d 45 de          	lea    rax,[rbp-0x22]
    98c0:	48 89 d6             	mov    rsi,rdx
    98c3:	48 89 c7             	mov    rdi,rax
    98c6:	e8 65 8e ff ff       	call   2730 <strcpy@plt>
    98cb:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    98cf:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    98d2:	85 c0                	test   eax,eax
    98d4:	75 2e                	jne    9904 <line_parser+0x3b6>
    98d6:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    98da:	8b 00                	mov    eax,DWORD PTR [rax]
    98dc:	85 c0                	test   eax,eax
    98de:	75 24                	jne    9904 <line_parser+0x3b6>
    98e0:	8b 15 de 06 10 00    	mov    edx,DWORD PTR [rip+0x1006de]        # 109fc4 <homenet>
    98e6:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    98ea:	89 10                	mov    DWORD PTR [rax],edx
    98ec:	48 8d 45 de          	lea    rax,[rbp-0x22]
    98f0:	48 89 c7             	mov    rdi,rax
    98f3:	e8 9b f9 ff ff       	call   9293 <check_port_number>
    98f8:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    98fc:	89 42 0c             	mov    DWORD PTR [rdx+0xc],eax
    98ff:	e9 da 0a 00 00       	jmp    a3de <line_parser+0xe90>
    9904:	8b 15 ba 06 10 00    	mov    edx,DWORD PTR [rip+0x1006ba]        # 109fc4 <homenet>
    990a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    990e:	89 50 04             	mov    DWORD PTR [rax+0x4],edx
    9911:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9915:	48 89 c7             	mov    rdi,rax
    9918:	e8 76 f9 ff ff       	call   9293 <check_port_number>
    991d:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9921:	89 42 08             	mov    DWORD PTR [rdx+0x8],eax
    9924:	e9 b5 0a 00 00       	jmp    a3de <line_parser+0xe90>
    9929:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    992d:	48 8d 35 6c 41 00 00 	lea    rsi,[rip+0x416c]        # daa0 <_IO_stdin_used+0x1aa0>
    9934:	48 89 c7             	mov    rdi,rax
    9937:	e8 d4 8d ff ff       	call   2710 <strcmp@plt>
    993c:	85 c0                	test   eax,eax
    993e:	75 30                	jne    9970 <line_parser+0x422>
    9940:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9944:	8b 10                	mov    edx,DWORD PTR [rax]
    9946:	8b 05 78 06 10 00    	mov    eax,DWORD PTR [rip+0x100678]        # 109fc4 <homenet>
    994c:	39 c2                	cmp    edx,eax
    994e:	75 10                	jne    9960 <line_parser+0x412>
    9950:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9954:	c7 40 10 45 00 00 00 	mov    DWORD PTR [rax+0x10],0x45
    995b:	e9 7e 0a 00 00       	jmp    a3de <line_parser+0xe90>
    9960:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9964:	c7 40 10 46 00 00 00 	mov    DWORD PTR [rax+0x10],0x46
    996b:	e9 6e 0a 00 00       	jmp    a3de <line_parser+0xe90>
    9970:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9974:	48 8d 35 28 41 00 00 	lea    rsi,[rip+0x4128]        # daa3 <_IO_stdin_used+0x1aa3>
    997b:	48 89 c7             	mov    rdi,rax
    997e:	e8 8d 8d ff ff       	call   2710 <strcmp@plt>
    9983:	85 c0                	test   eax,eax
    9985:	75 10                	jne    9997 <line_parser+0x449>
    9987:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    998b:	c7 40 10 47 00 00 00 	mov    DWORD PTR [rax+0x10],0x47
    9992:	e9 47 0a 00 00       	jmp    a3de <line_parser+0xe90>
    9997:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    999b:	ba 0c 00 00 00       	mov    edx,0xc
    99a0:	48 8d 35 ff 40 00 00 	lea    rsi,[rip+0x40ff]        # daa6 <_IO_stdin_used+0x1aa6>
    99a7:	48 89 c7             	mov    rdi,rax
    99aa:	e8 61 8b ff ff       	call   2510 <strncmp@plt>
    99af:	85 c0                	test   eax,eax
    99b1:	75 7f                	jne    9a32 <line_parser+0x4e4>
    99b3:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    99b7:	48 8d 50 0c          	lea    rdx,[rax+0xc]
    99bb:	48 8d 45 de          	lea    rax,[rbp-0x22]
    99bf:	48 89 d6             	mov    rsi,rdx
    99c2:	48 89 c7             	mov    rdi,rax
    99c5:	e8 66 8d ff ff       	call   2730 <strcpy@plt>
    99ca:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    99ce:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    99d1:	85 c0                	test   eax,eax
    99d3:	75 37                	jne    9a0c <line_parser+0x4be>
    99d5:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    99d9:	8b 10                	mov    edx,DWORD PTR [rax]
    99db:	8b 05 e3 05 10 00    	mov    eax,DWORD PTR [rip+0x1005e3]        # 109fc4 <homenet>
    99e1:	39 c2                	cmp    edx,eax
    99e3:	75 27                	jne    9a0c <line_parser+0x4be>
    99e5:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    99e9:	c7 40 04 ff ff ff ff 	mov    DWORD PTR [rax+0x4],0xffffffff
    99f0:	48 8d 45 de          	lea    rax,[rbp-0x22]
    99f4:	48 83 c0 01          	add    rax,0x1
    99f8:	48 89 c7             	mov    rdi,rax
    99fb:	e8 93 f8 ff ff       	call   9293 <check_port_number>
    9a00:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9a04:	89 42 08             	mov    DWORD PTR [rdx+0x8],eax
    9a07:	e9 d2 09 00 00       	jmp    a3de <line_parser+0xe90>
    9a0c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9a10:	c7 00 ff ff ff ff    	mov    DWORD PTR [rax],0xffffffff
    9a16:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9a1a:	48 83 c0 01          	add    rax,0x1
    9a1e:	48 89 c7             	mov    rdi,rax
    9a21:	e8 6d f8 ff ff       	call   9293 <check_port_number>
    9a26:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9a2a:	89 42 0c             	mov    DWORD PTR [rdx+0xc],eax
    9a2d:	e9 ac 09 00 00       	jmp    a3de <line_parser+0xe90>
    9a32:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9a36:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9a39:	3c 28                	cmp    al,0x28
    9a3b:	0f 85 9d 09 00 00    	jne    a3de <line_parser+0xe90>
    9a41:	c6 85 7c ff ff ff 01 	mov    BYTE PTR [rbp-0x84],0x1
    9a48:	e9 b5 09 00 00       	jmp    a402 <line_parser+0xeb4>
    9a4d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9a51:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9a54:	3c 28                	cmp    al,0x28
    9a56:	75 0e                	jne    9a66 <line_parser+0x518>
    9a58:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9a5c:	48 83 c0 01          	add    rax,0x1
    9a60:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    9a64:	eb 08                	jmp    9a6e <line_parser+0x520>
    9a66:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9a6a:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    9a6e:	80 bd 7d ff ff ff 00 	cmp    BYTE PTR [rbp-0x83],0x0
    9a75:	0f 84 8e 00 00 00    	je     9b09 <line_parser+0x5bb>
    9a7b:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9a7f:	48 89 c7             	mov    rdi,rax
    9a82:	e8 39 8b ff ff       	call   25c0 <strlen@plt>
    9a87:	48 8d 50 ff          	lea    rdx,[rax-0x1]
    9a8b:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9a8f:	48 01 d0             	add    rax,rdx
    9a92:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9a95:	3c 3b                	cmp    al,0x3b
    9a97:	75 36                	jne    9acf <line_parser+0x581>
    9a99:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9a9d:	48 89 c7             	mov    rdi,rax
    9aa0:	e8 1b 8b ff ff       	call   25c0 <strlen@plt>
    9aa5:	48 8d 50 fe          	lea    rdx,[rax-0x2]
    9aa9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9aad:	48 8d 88 4c 01 00 00 	lea    rcx,[rax+0x14c]
    9ab4:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9ab8:	48 89 c6             	mov    rsi,rax
    9abb:	48 89 cf             	mov    rdi,rcx
    9abe:	e8 dd 89 ff ff       	call   24a0 <strncat@plt>
    9ac3:	c6 85 7d ff ff ff 00 	mov    BYTE PTR [rbp-0x83],0x0
    9aca:	e9 33 09 00 00       	jmp    a402 <line_parser+0xeb4>
    9acf:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9ad3:	48 8d 90 4c 01 00 00 	lea    rdx,[rax+0x14c]
    9ada:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9ade:	48 89 c6             	mov    rsi,rax
    9ae1:	48 89 d7             	mov    rdi,rdx
    9ae4:	e8 57 8b ff ff       	call   2640 <strcat@plt>
    9ae9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9aed:	48 8d 98 4c 01 00 00 	lea    rbx,[rax+0x14c]
    9af4:	48 89 df             	mov    rdi,rbx
    9af7:	e8 c4 8a ff ff       	call   25c0 <strlen@plt>
    9afc:	48 01 d8             	add    rax,rbx
    9aff:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    9b04:	e9 d5 08 00 00       	jmp    a3de <line_parser+0xe90>
    9b09:	80 bd 7e ff ff ff 00 	cmp    BYTE PTR [rbp-0x82],0x0
    9b10:	74 7f                	je     9b91 <line_parser+0x643>
    9b12:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9b16:	48 8d 35 96 3f 00 00 	lea    rsi,[rip+0x3f96]        # dab3 <_IO_stdin_used+0x1ab3>
    9b1d:	48 89 c7             	mov    rdi,rax
    9b20:	e8 0b 8b ff ff       	call   2630 <strstr@plt>
    9b25:	48 85 c0             	test   rax,rax
    9b28:	74 33                	je     9b5d <line_parser+0x60f>
    9b2a:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9b2e:	48 89 c7             	mov    rdi,rax
    9b31:	e8 8a 8a ff ff       	call   25c0 <strlen@plt>
    9b36:	48 8d 50 fd          	lea    rdx,[rax-0x3]
    9b3a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9b3e:	48 8d 48 40          	lea    rcx,[rax+0x40]
    9b42:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9b46:	48 89 c6             	mov    rsi,rax
    9b49:	48 89 cf             	mov    rdi,rcx
    9b4c:	e8 4f 89 ff ff       	call   24a0 <strncat@plt>
    9b51:	c6 85 7e ff ff ff 00 	mov    BYTE PTR [rbp-0x82],0x0
    9b58:	e9 a5 08 00 00       	jmp    a402 <line_parser+0xeb4>
    9b5d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9b61:	48 8d 50 40          	lea    rdx,[rax+0x40]
    9b65:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9b69:	48 89 c6             	mov    rsi,rax
    9b6c:	48 89 d7             	mov    rdi,rdx
    9b6f:	e8 cc 8a ff ff       	call   2640 <strcat@plt>
    9b74:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9b78:	48 8d 58 40          	lea    rbx,[rax+0x40]
    9b7c:	48 89 df             	mov    rdi,rbx
    9b7f:	e8 3c 8a ff ff       	call   25c0 <strlen@plt>
    9b84:	48 01 d8             	add    rax,rbx
    9b87:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    9b8c:	e9 4d 08 00 00       	jmp    a3de <line_parser+0xe90>
    9b91:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9b95:	ba 06 00 00 00       	mov    edx,0x6
    9b9a:	48 8d 35 15 3f 00 00 	lea    rsi,[rip+0x3f15]        # dab6 <_IO_stdin_used+0x1ab6>
    9ba1:	48 89 c7             	mov    rdi,rax
    9ba4:	e8 67 89 ff ff       	call   2510 <strncmp@plt>
    9ba9:	85 c0                	test   eax,eax
    9bab:	75 37                	jne    9be4 <line_parser+0x696>
    9bad:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9bb1:	48 89 c7             	mov    rdi,rax
    9bb4:	e8 07 8a ff ff       	call   25c0 <strlen@plt>
    9bb9:	48 8d 50 f8          	lea    rdx,[rax-0x8]
    9bbd:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9bc1:	48 8d 48 06          	lea    rcx,[rax+0x6]
    9bc5:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9bc9:	48 83 c0 20          	add    rax,0x20
    9bcd:	48 89 ce             	mov    rsi,rcx
    9bd0:	48 89 c7             	mov    rdi,rax
    9bd3:	e8 a8 8b ff ff       	call   2780 <strncpy@plt>
    9bd8:	c6 85 7f ff ff ff 01 	mov    BYTE PTR [rbp-0x81],0x1
    9bdf:	e9 fa 07 00 00       	jmp    a3de <line_parser+0xe90>
    9be4:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9be8:	ba 05 00 00 00       	mov    edx,0x5
    9bed:	48 8d 35 c9 3e 00 00 	lea    rsi,[rip+0x3ec9]        # dabd <_IO_stdin_used+0x1abd>
    9bf4:	48 89 c7             	mov    rdi,rax
    9bf7:	e8 14 89 ff ff       	call   2510 <strncmp@plt>
    9bfc:	85 c0                	test   eax,eax
    9bfe:	75 4d                	jne    9c4d <line_parser+0x6ff>
    9c00:	c6 85 7d ff ff ff 01 	mov    BYTE PTR [rbp-0x83],0x1
    9c07:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9c0b:	48 83 c0 05          	add    rax,0x5
    9c0f:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    9c13:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9c17:	48 8d 90 4c 01 00 00 	lea    rdx,[rax+0x14c]
    9c1e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9c22:	48 89 c6             	mov    rsi,rax
    9c25:	48 89 d7             	mov    rdi,rdx
    9c28:	e8 13 8a ff ff       	call   2640 <strcat@plt>
    9c2d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9c31:	48 8d 98 4c 01 00 00 	lea    rbx,[rax+0x14c]
    9c38:	48 89 df             	mov    rdi,rbx
    9c3b:	e8 80 89 ff ff       	call   25c0 <strlen@plt>
    9c40:	48 01 d8             	add    rax,rbx
    9c43:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    9c48:	e9 91 07 00 00       	jmp    a3de <line_parser+0xe90>
    9c4d:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9c51:	ba 06 00 00 00       	mov    edx,0x6
    9c56:	48 8d 35 66 3e 00 00 	lea    rsi,[rip+0x3e66]        # dac3 <_IO_stdin_used+0x1ac3>
    9c5d:	48 89 c7             	mov    rdi,rax
    9c60:	e8 ab 88 ff ff       	call   2510 <strncmp@plt>
    9c65:	85 c0                	test   eax,eax
    9c67:	75 31                	jne    9c9a <line_parser+0x74c>
    9c69:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9c6d:	48 89 c7             	mov    rdi,rax
    9c70:	e8 42 f8 ff ff       	call   94b7 <sc_strip>
    9c75:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9c79:	48 83 c0 06          	add    rax,0x6
    9c7d:	48 89 c7             	mov    rdi,rax
    9c80:	e8 fb 89 ff ff       	call   2680 <atoi@plt>
    9c85:	89 45 ac             	mov    DWORD PTR [rbp-0x54],eax
    9c88:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9c8c:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    9c8f:	89 90 4c 03 00 00    	mov    DWORD PTR [rax+0x34c],edx
    9c95:	e9 44 07 00 00       	jmp    a3de <line_parser+0xe90>
    9c9a:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9c9e:	ba 05 00 00 00       	mov    edx,0x5
    9ca3:	48 8d 35 20 3e 00 00 	lea    rsi,[rip+0x3e20]        # daca <_IO_stdin_used+0x1aca>
    9caa:	48 89 c7             	mov    rdi,rax
    9cad:	e8 5e 88 ff ff       	call   2510 <strncmp@plt>
    9cb2:	85 c0                	test   eax,eax
    9cb4:	75 3f                	jne    9cf5 <line_parser+0x7a7>
    9cb6:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9cba:	48 89 c7             	mov    rdi,rax
    9cbd:	e8 fe 88 ff ff       	call   25c0 <strlen@plt>
    9cc2:	48 8d 50 fa          	lea    rdx,[rax-0x6]
    9cc6:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9cca:	48 8d 48 05          	lea    rcx,[rax+0x5]
    9cce:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9cd2:	48 89 ce             	mov    rsi,rcx
    9cd5:	48 89 c7             	mov    rdi,rax
    9cd8:	e8 a3 8a ff ff       	call   2780 <strncpy@plt>
    9cdd:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9ce1:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9ce5:	48 89 d6             	mov    rsi,rdx
    9ce8:	48 89 c7             	mov    rdi,rax
    9ceb:	e8 a7 f6 ff ff       	call   9397 <get_ruletype>
    9cf0:	e9 e9 06 00 00       	jmp    a3de <line_parser+0xe90>
    9cf5:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9cf9:	ba 08 00 00 00       	mov    edx,0x8
    9cfe:	48 8d 35 cb 3d 00 00 	lea    rsi,[rip+0x3dcb]        # dad0 <_IO_stdin_used+0x1ad0>
    9d05:	48 89 c7             	mov    rdi,rax
    9d08:	e8 03 88 ff ff       	call   2510 <strncmp@plt>
    9d0d:	85 c0                	test   eax,eax
    9d0f:	0f 85 8f 00 00 00    	jne    9da4 <line_parser+0x856>
    9d15:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9d19:	48 83 c0 08          	add    rax,0x8
    9d1d:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    9d21:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9d25:	48 8d 35 87 3d 00 00 	lea    rsi,[rip+0x3d87]        # dab3 <_IO_stdin_used+0x1ab3>
    9d2c:	48 89 c7             	mov    rdi,rax
    9d2f:	e8 fc 88 ff ff       	call   2630 <strstr@plt>
    9d34:	48 85 c0             	test   rax,rax
    9d37:	74 30                	je     9d69 <line_parser+0x81b>
    9d39:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9d3d:	48 89 c7             	mov    rdi,rax
    9d40:	e8 7b 88 ff ff       	call   25c0 <strlen@plt>
    9d45:	48 8d 50 f5          	lea    rdx,[rax-0xb]
    9d49:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9d4d:	48 8d 48 08          	lea    rcx,[rax+0x8]
    9d51:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9d55:	48 83 c0 40          	add    rax,0x40
    9d59:	48 89 ce             	mov    rsi,rcx
    9d5c:	48 89 c7             	mov    rdi,rax
    9d5f:	e8 1c 8a ff ff       	call   2780 <strncpy@plt>
    9d64:	e9 75 06 00 00       	jmp    a3de <line_parser+0xe90>
    9d69:	c6 85 7e ff ff ff 01 	mov    BYTE PTR [rbp-0x82],0x1
    9d70:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9d74:	48 8d 50 40          	lea    rdx,[rax+0x40]
    9d78:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9d7c:	48 89 c6             	mov    rsi,rax
    9d7f:	48 89 d7             	mov    rdi,rdx
    9d82:	e8 b9 88 ff ff       	call   2640 <strcat@plt>
    9d87:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9d8b:	48 8d 58 40          	lea    rbx,[rax+0x40]
    9d8f:	48 89 df             	mov    rdi,rbx
    9d92:	e8 29 88 ff ff       	call   25c0 <strlen@plt>
    9d97:	48 01 d8             	add    rax,rbx
    9d9a:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    9d9f:	e9 3a 06 00 00       	jmp    a3de <line_parser+0xe90>
    9da4:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9da8:	ba 04 00 00 00       	mov    edx,0x4
    9dad:	48 8d 35 25 3d 00 00 	lea    rsi,[rip+0x3d25]        # dad9 <_IO_stdin_used+0x1ad9>
    9db4:	48 89 c7             	mov    rdi,rax
    9db7:	e8 54 87 ff ff       	call   2510 <strncmp@plt>
    9dbc:	85 c0                	test   eax,eax
    9dbe:	0f 85 8e 00 00 00    	jne    9e52 <line_parser+0x904>
    9dc4:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9dc8:	48 8d 35 b1 3c 00 00 	lea    rsi,[rip+0x3cb1]        # da80 <_IO_stdin_used+0x1a80>
    9dcf:	48 89 c7             	mov    rdi,rax
    9dd2:	e8 b9 89 ff ff       	call   2790 <strcspn@plt>
    9dd7:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
    9ddb:	48 01 d0             	add    rax,rdx
    9dde:	c6 00 00             	mov    BYTE PTR [rax],0x0
    9de1:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9de5:	48 83 c0 04          	add    rax,0x4
    9de9:	48 89 c7             	mov    rdi,rax
    9dec:	e8 04 f3 ff ff       	call   90f5 <isdigit>
    9df1:	84 c0                	test   al,al
    9df3:	74 47                	je     9e3c <line_parser+0x8ee>
    9df5:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9df9:	48 83 c0 04          	add    rax,0x4
    9dfd:	48 89 c7             	mov    rdi,rax
    9e00:	e8 7b 88 ff ff       	call   2680 <atoi@plt>
    9e05:	89 45 a8             	mov    DWORD PTR [rbp-0x58],eax
    9e08:	83 7d a8 00          	cmp    DWORD PTR [rbp-0x58],0x0
    9e0c:	7e 18                	jle    9e26 <line_parser+0x8d8>
    9e0e:	83 7d a8 0a          	cmp    DWORD PTR [rbp-0x58],0xa
    9e12:	7f 12                	jg     9e26 <line_parser+0x8d8>
    9e14:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9e18:	8b 55 a8             	mov    edx,DWORD PTR [rbp-0x58]
    9e1b:	89 90 48 01 00 00    	mov    DWORD PTR [rax+0x148],edx
    9e21:	e9 b8 05 00 00       	jmp    a3de <line_parser+0xe90>
    9e26:	48 8d 3d b3 3c 00 00 	lea    rdi,[rip+0x3cb3]        # dae0 <_IO_stdin_used+0x1ae0>
    9e2d:	e8 7e 86 ff ff       	call   24b0 <puts@plt>
    9e32:	bf ff ff ff ff       	mov    edi,0xffffffff
    9e37:	e8 94 86 ff ff       	call   24d0 <exit@plt>
    9e3c:	48 8d 3d c5 3c 00 00 	lea    rdi,[rip+0x3cc5]        # db08 <_IO_stdin_used+0x1b08>
    9e43:	e8 68 86 ff ff       	call   24b0 <puts@plt>
    9e48:	bf ff ff ff ff       	mov    edi,0xffffffff
    9e4d:	e8 7e 86 ff ff       	call   24d0 <exit@plt>
    9e52:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9e56:	ba 06 00 00 00       	mov    edx,0x6
    9e5b:	48 8d 35 ce 3c 00 00 	lea    rsi,[rip+0x3cce]        # db30 <_IO_stdin_used+0x1b30>
    9e62:	48 89 c7             	mov    rdi,rax
    9e65:	e8 a6 86 ff ff       	call   2510 <strncmp@plt>
    9e6a:	85 c0                	test   eax,eax
    9e6c:	0f 85 9b 00 00 00    	jne    9f0d <line_parser+0x9bf>
    9e72:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9e76:	48 89 c7             	mov    rdi,rax
    9e79:	e8 39 f6 ff ff       	call   94b7 <sc_strip>
    9e7e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9e82:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    9e88:	3d 80 00 00 00       	cmp    eax,0x80
    9e8d:	75 58                	jne    9ee7 <line_parser+0x999>
    9e8f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9e93:	48 83 c0 06          	add    rax,0x6
    9e97:	ba ff 00 00 00       	mov    edx,0xff
    9e9c:	be 00 00 00 00       	mov    esi,0x0
    9ea1:	48 89 c7             	mov    rdi,rax
    9ea4:	e8 b9 f5 ff ff       	call   9462 <numeric_check>
    9ea9:	89 45 a4             	mov    DWORD PTR [rbp-0x5c],eax
    9eac:	83 7d a4 ff          	cmp    DWORD PTR [rbp-0x5c],0xffffffff
    9eb0:	75 16                	jne    9ec8 <line_parser+0x97a>
    9eb2:	48 8d 3d 7e 3c 00 00 	lea    rdi,[rip+0x3c7e]        # db37 <_IO_stdin_used+0x1b37>
    9eb9:	e8 f2 85 ff ff       	call   24b0 <puts@plt>
    9ebe:	bf ff ff ff ff       	mov    edi,0xffffffff
    9ec3:	e8 08 86 ff ff       	call   24d0 <exit@plt>
    9ec8:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
    9ecb:	89 c2                	mov    edx,eax
    9ecd:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9ed1:	88 90 72 03 00 00    	mov    BYTE PTR [rax+0x372],dl
    9ed7:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9edb:	c6 80 6e 03 00 00 01 	mov    BYTE PTR [rax+0x36e],0x1
    9ee2:	e9 f7 04 00 00       	jmp    a3de <line_parser+0xe90>
    9ee7:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9eeb:	48 83 c0 20          	add    rax,0x20
    9eef:	48 89 c6             	mov    rsi,rax
    9ef2:	48 8d 3d 57 3c 00 00 	lea    rdi,[rip+0x3c57]        # db50 <_IO_stdin_used+0x1b50>
    9ef9:	b8 00 00 00 00       	mov    eax,0x0
    9efe:	e8 5d 85 ff ff       	call   2460 <printf@plt>
    9f03:	bf ff ff ff ff       	mov    edi,0xffffffff
    9f08:	e8 c3 85 ff ff       	call   24d0 <exit@plt>
    9f0d:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9f11:	ba 06 00 00 00       	mov    edx,0x6
    9f16:	48 8d 35 6a 3c 00 00 	lea    rsi,[rip+0x3c6a]        # db87 <_IO_stdin_used+0x1b87>
    9f1d:	48 89 c7             	mov    rdi,rax
    9f20:	e8 eb 85 ff ff       	call   2510 <strncmp@plt>
    9f25:	85 c0                	test   eax,eax
    9f27:	0f 85 86 00 00 00    	jne    9fb3 <line_parser+0xa65>
    9f2d:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9f31:	48 89 c7             	mov    rdi,rax
    9f34:	e8 7e f5 ff ff       	call   94b7 <sc_strip>
    9f39:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9f3d:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    9f43:	3d 80 00 00 00       	cmp    eax,0x80
    9f48:	75 58                	jne    9fa2 <line_parser+0xa54>
    9f4a:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9f4e:	48 83 c0 06          	add    rax,0x6
    9f52:	ba ff 00 00 00       	mov    edx,0xff
    9f57:	be 00 00 00 00       	mov    esi,0x0
    9f5c:	48 89 c7             	mov    rdi,rax
    9f5f:	e8 fe f4 ff ff       	call   9462 <numeric_check>
    9f64:	89 45 a0             	mov    DWORD PTR [rbp-0x60],eax
    9f67:	83 7d a0 ff          	cmp    DWORD PTR [rbp-0x60],0xffffffff
    9f6b:	75 16                	jne    9f83 <line_parser+0xa35>
    9f6d:	48 8d 3d 1a 3c 00 00 	lea    rdi,[rip+0x3c1a]        # db8e <_IO_stdin_used+0x1b8e>
    9f74:	e8 37 85 ff ff       	call   24b0 <puts@plt>
    9f79:	bf ff ff ff ff       	mov    edi,0xffffffff
    9f7e:	e8 4d 85 ff ff       	call   24d0 <exit@plt>
    9f83:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    9f86:	89 c2                	mov    edx,eax
    9f88:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9f8c:	88 90 73 03 00 00    	mov    BYTE PTR [rax+0x373],dl
    9f92:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9f96:	c6 80 6f 03 00 00 01 	mov    BYTE PTR [rax+0x36f],0x1
    9f9d:	e9 3c 04 00 00       	jmp    a3de <line_parser+0xe90>
    9fa2:	48 8d 3d ff 3b 00 00 	lea    rdi,[rip+0x3bff]        # dba8 <_IO_stdin_used+0x1ba8>
    9fa9:	e8 02 85 ff ff       	call   24b0 <puts@plt>
    9fae:	e9 2b 04 00 00       	jmp    a3de <line_parser+0xe90>
    9fb3:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9fb7:	ba 08 00 00 00       	mov    edx,0x8
    9fbc:	48 8d 35 17 3c 00 00 	lea    rsi,[rip+0x3c17]        # dbda <_IO_stdin_used+0x1bda>
    9fc3:	48 89 c7             	mov    rdi,rax
    9fc6:	e8 45 85 ff ff       	call   2510 <strncmp@plt>
    9fcb:	85 c0                	test   eax,eax
    9fcd:	0f 85 8c 00 00 00    	jne    a05f <line_parser+0xb11>
    9fd3:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9fd7:	48 89 c7             	mov    rdi,rax
    9fda:	e8 d8 f4 ff ff       	call   94b7 <sc_strip>
    9fdf:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9fe3:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    9fe9:	3d 80 00 00 00       	cmp    eax,0x80
    9fee:	75 59                	jne    a049 <line_parser+0xafb>
    9ff0:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9ff4:	48 83 c0 08          	add    rax,0x8
    9ff8:	ba ff ff 00 00       	mov    edx,0xffff
    9ffd:	be 00 00 00 00       	mov    esi,0x0
    a002:	48 89 c7             	mov    rdi,rax
    a005:	e8 58 f4 ff ff       	call   9462 <numeric_check>
    a00a:	89 45 9c             	mov    DWORD PTR [rbp-0x64],eax
    a00d:	83 7d 9c ff          	cmp    DWORD PTR [rbp-0x64],0xffffffff
    a011:	75 16                	jne    a029 <line_parser+0xadb>
    a013:	48 8d 3d c9 3b 00 00 	lea    rdi,[rip+0x3bc9]        # dbe3 <_IO_stdin_used+0x1be3>
    a01a:	e8 91 84 ff ff       	call   24b0 <puts@plt>
    a01f:	bf ff ff ff ff       	mov    edi,0xffffffff
    a024:	e8 a7 84 ff ff       	call   24d0 <exit@plt>
    a029:	8b 45 9c             	mov    eax,DWORD PTR [rbp-0x64]
    a02c:	89 c2                	mov    edx,eax
    a02e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a032:	66 89 90 76 03 00 00 	mov    WORD PTR [rax+0x376],dx
    a039:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a03d:	c6 80 71 03 00 00 01 	mov    BYTE PTR [rax+0x371],0x1
    a044:	e9 95 03 00 00       	jmp    a3de <line_parser+0xe90>
    a049:	48 8d 3d b0 3b 00 00 	lea    rdi,[rip+0x3bb0]        # dc00 <_IO_stdin_used+0x1c00>
    a050:	e8 5b 84 ff ff       	call   24b0 <puts@plt>
    a055:	bf ff ff ff ff       	mov    edi,0xffffffff
    a05a:	e8 71 84 ff ff       	call   24d0 <exit@plt>
    a05f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a063:	ba 09 00 00 00       	mov    edx,0x9
    a068:	48 8d 35 c5 3b 00 00 	lea    rsi,[rip+0x3bc5]        # dc34 <_IO_stdin_used+0x1c34>
    a06f:	48 89 c7             	mov    rdi,rax
    a072:	e8 99 84 ff ff       	call   2510 <strncmp@plt>
    a077:	85 c0                	test   eax,eax
    a079:	75 7a                	jne    a0f5 <line_parser+0xba7>
    a07b:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a07f:	48 89 c7             	mov    rdi,rax
    a082:	e8 30 f4 ff ff       	call   94b7 <sc_strip>
    a087:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a08b:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a091:	3d 80 00 00 00       	cmp    eax,0x80
    a096:	0f 85 42 03 00 00    	jne    a3de <line_parser+0xe90>
    a09c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a0a0:	48 83 c0 09          	add    rax,0x9
    a0a4:	ba ff ff 00 00       	mov    edx,0xffff
    a0a9:	be 00 00 00 00       	mov    esi,0x0
    a0ae:	48 89 c7             	mov    rdi,rax
    a0b1:	e8 ac f3 ff ff       	call   9462 <numeric_check>
    a0b6:	89 45 98             	mov    DWORD PTR [rbp-0x68],eax
    a0b9:	83 7d 98 ff          	cmp    DWORD PTR [rbp-0x68],0xffffffff
    a0bd:	75 16                	jne    a0d5 <line_parser+0xb87>
    a0bf:	48 8d 3d 78 3b 00 00 	lea    rdi,[rip+0x3b78]        # dc3e <_IO_stdin_used+0x1c3e>
    a0c6:	e8 e5 83 ff ff       	call   24b0 <puts@plt>
    a0cb:	bf ff ff ff ff       	mov    edi,0xffffffff
    a0d0:	e8 fb 83 ff ff       	call   24d0 <exit@plt>
    a0d5:	8b 45 98             	mov    eax,DWORD PTR [rbp-0x68]
    a0d8:	89 c2                	mov    edx,eax
    a0da:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a0de:	66 89 90 74 03 00 00 	mov    WORD PTR [rax+0x374],dx
    a0e5:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a0e9:	c6 80 70 03 00 00 01 	mov    BYTE PTR [rax+0x370],0x1
    a0f0:	e9 e9 02 00 00       	jmp    a3de <line_parser+0xe90>
    a0f5:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a0f9:	ba 04 00 00 00       	mov    edx,0x4
    a0fe:	48 8d 35 55 3b 00 00 	lea    rsi,[rip+0x3b55]        # dc5a <_IO_stdin_used+0x1c5a>
    a105:	48 89 c7             	mov    rdi,rax
    a108:	e8 03 84 ff ff       	call   2510 <strncmp@plt>
    a10d:	85 c0                	test   eax,eax
    a10f:	75 64                	jne    a175 <line_parser+0xc27>
    a111:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a115:	48 89 c7             	mov    rdi,rax
    a118:	e8 9a f3 ff ff       	call   94b7 <sc_strip>
    a11d:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a121:	48 83 c0 04          	add    rax,0x4
    a125:	ba ff 00 00 00       	mov    edx,0xff
    a12a:	be 00 00 00 00       	mov    esi,0x0
    a12f:	48 89 c7             	mov    rdi,rax
    a132:	e8 2b f3 ff ff       	call   9462 <numeric_check>
    a137:	89 45 94             	mov    DWORD PTR [rbp-0x6c],eax
    a13a:	83 7d 94 ff          	cmp    DWORD PTR [rbp-0x6c],0xffffffff
    a13e:	75 16                	jne    a156 <line_parser+0xc08>
    a140:	48 8d 3d 18 3b 00 00 	lea    rdi,[rip+0x3b18]        # dc5f <_IO_stdin_used+0x1c5f>
    a147:	e8 64 83 ff ff       	call   24b0 <puts@plt>
    a14c:	bf ff ff ff ff       	mov    edi,0xffffffff
    a151:	e8 7a 83 ff ff       	call   24d0 <exit@plt>
    a156:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    a159:	89 c2                	mov    edx,eax
    a15b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a15f:	88 90 6c 03 00 00    	mov    BYTE PTR [rax+0x36c],dl
    a165:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a169:	c6 80 69 03 00 00 01 	mov    BYTE PTR [rax+0x369],0x1
    a170:	e9 69 02 00 00       	jmp    a3de <line_parser+0xe90>
    a175:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a179:	ba 07 00 00 00       	mov    edx,0x7
    a17e:	48 8d 35 ec 3a 00 00 	lea    rsi,[rip+0x3aec]        # dc71 <_IO_stdin_used+0x1c71>
    a185:	48 89 c7             	mov    rdi,rax
    a188:	e8 83 83 ff ff       	call   2510 <strncmp@plt>
    a18d:	85 c0                	test   eax,eax
    a18f:	75 6e                	jne    a1ff <line_parser+0xcb1>
    a191:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a195:	48 89 c7             	mov    rdi,rax
    a198:	e8 1a f3 ff ff       	call   94b7 <sc_strip>
    a19d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a1a1:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a1a7:	83 f8 7e             	cmp    eax,0x7e
    a1aa:	75 3d                	jne    a1e9 <line_parser+0xc9b>
    a1ac:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a1b0:	48 89 c7             	mov    rdi,rax
    a1b3:	e8 08 84 ff ff       	call   25c0 <strlen@plt>
    a1b8:	48 8d 50 f8          	lea    rdx,[rax-0x8]
    a1bc:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a1c0:	48 8d 48 07          	lea    rcx,[rax+0x7]
    a1c4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a1c8:	48 05 53 03 00 00    	add    rax,0x353
    a1ce:	48 89 ce             	mov    rsi,rcx
    a1d1:	48 89 c7             	mov    rdi,rax
    a1d4:	e8 a7 85 ff ff       	call   2780 <strncpy@plt>
    a1d9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a1dd:	c6 80 50 03 00 00 01 	mov    BYTE PTR [rax+0x350],0x1
    a1e4:	e9 f5 01 00 00       	jmp    a3de <line_parser+0xe90>
    a1e9:	48 8d 3d 90 3a 00 00 	lea    rdi,[rip+0x3a90]        # dc80 <_IO_stdin_used+0x1c80>
    a1f0:	e8 bb 82 ff ff       	call   24b0 <puts@plt>
    a1f5:	bf ff ff ff ff       	mov    edi,0xffffffff
    a1fa:	e8 d1 82 ff ff       	call   24d0 <exit@plt>
    a1ff:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a203:	ba 04 00 00 00       	mov    edx,0x4
    a208:	48 8d 35 a2 3a 00 00 	lea    rsi,[rip+0x3aa2]        # dcb1 <_IO_stdin_used+0x1cb1>
    a20f:	48 89 c7             	mov    rdi,rax
    a212:	e8 f9 82 ff ff       	call   2510 <strncmp@plt>
    a217:	85 c0                	test   eax,eax
    a219:	75 78                	jne    a293 <line_parser+0xd45>
    a21b:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a21f:	48 89 c7             	mov    rdi,rax
    a222:	e8 90 f2 ff ff       	call   94b7 <sc_strip>
    a227:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a22b:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a231:	83 f8 7e             	cmp    eax,0x7e
    a234:	0f 85 a4 01 00 00    	jne    a3de <line_parser+0xe90>
    a23a:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a23e:	48 83 c0 04          	add    rax,0x4
    a242:	ba ff ff ff ff       	mov    edx,0xffffffff
    a247:	be 00 00 00 00       	mov    esi,0x0
    a24c:	48 89 c7             	mov    rdi,rax
    a24f:	e8 0e f2 ff ff       	call   9462 <numeric_check>
    a254:	89 45 90             	mov    DWORD PTR [rbp-0x70],eax
    a257:	83 7d 90 ff          	cmp    DWORD PTR [rbp-0x70],0xffffffff
    a25b:	75 16                	jne    a273 <line_parser+0xd25>
    a25d:	48 8d 3d 52 3a 00 00 	lea    rdi,[rip+0x3a52]        # dcb6 <_IO_stdin_used+0x1cb6>
    a264:	e8 47 82 ff ff       	call   24b0 <puts@plt>
    a269:	bf ff ff ff ff       	mov    edi,0xffffffff
    a26e:	e8 5d 82 ff ff       	call   24d0 <exit@plt>
    a273:	8b 45 90             	mov    eax,DWORD PTR [rbp-0x70]
    a276:	89 c2                	mov    edx,eax
    a278:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a27c:	66 89 90 5c 03 00 00 	mov    WORD PTR [rax+0x35c],dx
    a283:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a287:	c6 80 51 03 00 00 01 	mov    BYTE PTR [rax+0x351],0x1
    a28e:	e9 4b 01 00 00       	jmp    a3de <line_parser+0xe90>
    a293:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a297:	ba 06 00 00 00       	mov    edx,0x6
    a29c:	48 8d 35 25 3a 00 00 	lea    rsi,[rip+0x3a25]        # dcc8 <_IO_stdin_used+0x1cc8>
    a2a3:	48 89 c7             	mov    rdi,rax
    a2a6:	e8 65 82 ff ff       	call   2510 <strncmp@plt>
    a2ab:	85 c0                	test   eax,eax
    a2ad:	75 7c                	jne    a32b <line_parser+0xddd>
    a2af:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a2b3:	48 89 c7             	mov    rdi,rax
    a2b6:	e8 05 83 ff ff       	call   25c0 <strlen@plt>
    a2bb:	48 8d 50 f7          	lea    rdx,[rax-0x9]
    a2bf:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a2c3:	48 8d 48 06          	lea    rcx,[rax+0x6]
    a2c7:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a2cb:	48 05 10 02 00 00    	add    rax,0x210
    a2d1:	48 89 ce             	mov    rsi,rcx
    a2d4:	48 89 c7             	mov    rdi,rax
    a2d7:	e8 a4 84 ff ff       	call   2780 <strncpy@plt>
    a2dc:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a2e0:	48 8d 88 10 02 00 00 	lea    rcx,[rax+0x210]
    a2e7:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a2eb:	48 05 d0 01 00 00    	add    rax,0x1d0
    a2f1:	ba 00 00 00 00       	mov    edx,0x0
    a2f6:	48 89 ce             	mov    rsi,rcx
    a2f9:	48 89 c7             	mov    rdi,rax
    a2fc:	e8 8f 83 ff ff       	call   2690 <regcomp@plt>
    a301:	85 c0                	test   eax,eax
    a303:	74 16                	je     a31b <line_parser+0xdcd>
    a305:	48 8d 3d c4 39 00 00 	lea    rdi,[rip+0x39c4]        # dcd0 <_IO_stdin_used+0x1cd0>
    a30c:	e8 9f 81 ff ff       	call   24b0 <puts@plt>
    a311:	bf ff ff ff ff       	mov    edi,0xffffffff
    a316:	e8 b5 81 ff ff       	call   24d0 <exit@plt>
    a31b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a31f:	c6 80 90 02 00 00 01 	mov    BYTE PTR [rax+0x290],0x1
    a326:	e9 b3 00 00 00       	jmp    a3de <line_parser+0xe90>
    a32b:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a32f:	ba 06 00 00 00       	mov    edx,0x6
    a334:	48 8d 35 ba 39 00 00 	lea    rsi,[rip+0x39ba]        # dcf5 <_IO_stdin_used+0x1cf5>
    a33b:	48 89 c7             	mov    rdi,rax
    a33e:	e8 cd 81 ff ff       	call   2510 <strncmp@plt>
    a343:	85 c0                	test   eax,eax
    a345:	75 2a                	jne    a371 <line_parser+0xe23>
    a347:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a34b:	48 89 c7             	mov    rdi,rax
    a34e:	e8 64 f1 ff ff       	call   94b7 <sc_strip>
    a353:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a357:	48 8d 48 06          	lea    rcx,[rax+0x6]
    a35b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a35f:	ba 01 00 00 00       	mov    edx,0x1
    a364:	48 89 ce             	mov    rsi,rcx
    a367:	48 89 c7             	mov    rdi,rax
    a36a:	e8 6c 03 00 00       	call   a6db <d_op_parser>
    a36f:	eb 6d                	jmp    a3de <line_parser+0xe90>
    a371:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a375:	ba 07 00 00 00       	mov    edx,0x7
    a37a:	48 8d 35 7b 39 00 00 	lea    rsi,[rip+0x397b]        # dcfc <_IO_stdin_used+0x1cfc>
    a381:	48 89 c7             	mov    rdi,rax
    a384:	e8 87 81 ff ff       	call   2510 <strncmp@plt>
    a389:	85 c0                	test   eax,eax
    a38b:	75 27                	jne    a3b4 <line_parser+0xe66>
    a38d:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a391:	48 89 c7             	mov    rdi,rax
    a394:	e8 1e f1 ff ff       	call   94b7 <sc_strip>
    a399:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a39d:	48 83 c0 07          	add    rax,0x7
    a3a1:	48 89 c7             	mov    rdi,rax
    a3a4:	e8 d7 82 ff ff       	call   2680 <atoi@plt>
    a3a9:	89 c2                	mov    edx,eax
    a3ab:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a3af:	89 50 14             	mov    DWORD PTR [rax+0x14],edx
    a3b2:	eb 2a                	jmp    a3de <line_parser+0xe90>
    a3b4:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a3b8:	ba 0b 00 00 00       	mov    edx,0xb
    a3bd:	48 8d 35 40 39 00 00 	lea    rsi,[rip+0x3940]        # dd04 <_IO_stdin_used+0x1d04>
    a3c4:	48 89 c7             	mov    rdi,rax
    a3c7:	e8 44 81 ff ff       	call   2510 <strncmp@plt>
    a3cc:	85 c0                	test   eax,eax
    a3ce:	75 0e                	jne    a3de <line_parser+0xe90>
    a3d0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a3d4:	c7 80 48 03 00 00 01 	mov    DWORD PTR [rax+0x348],0x1
    a3db:	00 00 00 
    a3de:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    a3e1:	89 45 80             	mov    DWORD PTR [rbp-0x80],eax
    a3e4:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a3e8:	48 89 c7             	mov    rdi,rax
    a3eb:	e8 d0 81 ff ff       	call   25c0 <strlen@plt>
    a3f0:	48 8d 50 ff          	lea    rdx,[rax-0x1]
    a3f4:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a3f8:	48 01 d0             	add    rax,rdx
    a3fb:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    a3fe:	3c 29                	cmp    al,0x29
    a400:	74 3d                	je     a43f <line_parser+0xef1>
    a402:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    a405:	3b 45 8c             	cmp    eax,DWORD PTR [rbp-0x74]
    a408:	7f 0c                	jg     a416 <line_parser+0xec8>
    a40a:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
    a40d:	3b 45 84             	cmp    eax,DWORD PTR [rbp-0x7c]
    a410:	0f 8e 54 f2 ff ff    	jle    966a <line_parser+0x11c>
    a416:	0f b6 85 7f ff ff ff 	movzx  eax,BYTE PTR [rbp-0x81]
    a41d:	83 f0 01             	xor    eax,0x1
    a420:	84 c0                	test   al,al
    a422:	74 1c                	je     a440 <line_parser+0xef2>
    a424:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a428:	48 83 c0 20          	add    rax,0x20
    a42c:	48 bb 55 6e 74 69 74 	movabs rbx,0x64656c7469746e55
    a433:	6c 65 64 
    a436:	48 89 18             	mov    QWORD PTR [rax],rbx
    a439:	c6 40 08 00          	mov    BYTE PTR [rax+0x8],0x0
    a43d:	eb 01                	jmp    a440 <line_parser+0xef2>
    a43f:	90                   	nop
    a440:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a444:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    a44b:	00 00 
    a44d:	74 05                	je     a454 <line_parser+0xf06>
    a44f:	e8 ac 82 ff ff       	call   2700 <__stack_chk_fail@plt>
    a454:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    a458:	c9                   	leave  
    a459:	c3                   	ret    

000000000000a45a <rule_processor>:
    a45a:	f3 0f 1e fa          	endbr64 
    a45e:	55                   	push   rbp
    a45f:	48 89 e5             	mov    rbp,rsp
    a462:	48 83 ec 10          	sub    rsp,0x10
    a466:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    a46d:	eb 22                	jmp    a491 <rule_processor+0x37>
    a46f:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    a472:	48 98                	cdqe   
    a474:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    a47b:	48 8d 15 5e 6e 00 00 	lea    rdx,[rip+0x6e5e]        # 112e0 <rules>
    a482:	48 01 d0             	add    rax,rdx
    a485:	48 89 c7             	mov    rdi,rax
    a488:	e8 13 00 00 00       	call   a4a0 <process_rule>
    a48d:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    a491:	8b 05 7d 6b 00 00    	mov    eax,DWORD PTR [rip+0x6b7d]        # 11014 <num_rules>
    a497:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    a49a:	7e d3                	jle    a46f <rule_processor+0x15>
    a49c:	90                   	nop
    a49d:	90                   	nop
    a49e:	c9                   	leave  
    a49f:	c3                   	ret    

000000000000a4a0 <process_rule>:
    a4a0:	f3 0f 1e fa          	endbr64 
    a4a4:	55                   	push   rbp
    a4a5:	48 89 e5             	mov    rbp,rsp
    a4a8:	41 57                	push   r15
    a4aa:	41 56                	push   r14
    a4ac:	41 54                	push   r12
    a4ae:	53                   	push   rbx
    a4af:	48 83 ec 40          	sub    rsp,0x40
    a4b3:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    a4b7:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a4be:	00 00 
    a4c0:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    a4c4:	31 c0                	xor    eax,eax
    a4c6:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a4ca:	0f b6 80 90 02 00 00 	movzx  eax,BYTE PTR [rax+0x290]
    a4d1:	83 f0 01             	xor    eax,0x1
    a4d4:	84 c0                	test   al,al
    a4d6:	0f 84 dd 01 00 00    	je     a6b9 <process_rule+0x219>
    a4dc:	48 89 e0             	mov    rax,rsp
    a4df:	49 89 c4             	mov    r12,rax
    a4e2:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a4e6:	48 83 c0 40          	add    rax,0x40
    a4ea:	48 89 c7             	mov    rdi,rax
    a4ed:	e8 ce 80 ff ff       	call   25c0 <strlen@plt>
    a4f2:	48 83 c0 01          	add    rax,0x1
    a4f6:	48 01 c0             	add    rax,rax
    a4f9:	48 89 c2             	mov    rdx,rax
    a4fc:	48 83 ea 01          	sub    rdx,0x1
    a500:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    a504:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    a508:	48 c7 45 a8 00 00 00 	mov    QWORD PTR [rbp-0x58],0x0
    a50f:	00 
    a510:	49 89 c6             	mov    r14,rax
    a513:	41 bf 00 00 00 00    	mov    r15d,0x0
    a519:	ba 10 00 00 00       	mov    edx,0x10
    a51e:	48 83 ea 01          	sub    rdx,0x1
    a522:	48 01 d0             	add    rax,rdx
    a525:	bb 10 00 00 00       	mov    ebx,0x10
    a52a:	ba 00 00 00 00       	mov    edx,0x0
    a52f:	48 f7 f3             	div    rbx
    a532:	48 6b c0 10          	imul   rax,rax,0x10
    a536:	48 89 c1             	mov    rcx,rax
    a539:	48 81 e1 00 f0 ff ff 	and    rcx,0xfffffffffffff000
    a540:	48 89 e2             	mov    rdx,rsp
    a543:	48 29 ca             	sub    rdx,rcx
    a546:	48 39 d4             	cmp    rsp,rdx
    a549:	74 12                	je     a55d <process_rule+0xbd>
    a54b:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    a552:	48 83 8c 24 f8 0f 00 	or     QWORD PTR [rsp+0xff8],0x0
    a559:	00 00 
    a55b:	eb e9                	jmp    a546 <process_rule+0xa6>
    a55d:	48 89 c2             	mov    rdx,rax
    a560:	81 e2 ff 0f 00 00    	and    edx,0xfff
    a566:	48 29 d4             	sub    rsp,rdx
    a569:	48 89 c2             	mov    rdx,rax
    a56c:	81 e2 ff 0f 00 00    	and    edx,0xfff
    a572:	48 85 d2             	test   rdx,rdx
    a575:	74 10                	je     a587 <process_rule+0xe7>
    a577:	25 ff 0f 00 00       	and    eax,0xfff
    a57c:	48 83 e8 08          	sub    rax,0x8
    a580:	48 01 e0             	add    rax,rsp
    a583:	48 83 08 00          	or     QWORD PTR [rax],0x0
    a587:	48 89 e0             	mov    rax,rsp
    a58a:	48 83 c0 00          	add    rax,0x0
    a58e:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    a592:	c7 45 c0 00 00 00 00 	mov    DWORD PTR [rbp-0x40],0x0
    a599:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a59d:	48 8d 50 40          	lea    rdx,[rax+0x40]
    a5a1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a5a5:	48 05 c8 02 00 00    	add    rax,0x2c8
    a5ab:	48 89 d6             	mov    rsi,rdx
    a5ae:	48 89 c7             	mov    rdi,rax
    a5b1:	e8 7a 81 ff ff       	call   2730 <strcpy@plt>
    a5b6:	c7 45 c4 00 00 00 00 	mov    DWORD PTR [rbp-0x3c],0x0
    a5bd:	e9 a4 00 00 00       	jmp    a666 <process_rule+0x1c6>
    a5c2:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    a5c6:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    a5c9:	48 98                	cdqe   
    a5cb:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    a5d0:	3c 7c                	cmp    al,0x7c
    a5d2:	75 18                	jne    a5ec <process_rule+0x14c>
    a5d4:	83 7d c0 00          	cmp    DWORD PTR [rbp-0x40],0x0
    a5d8:	74 09                	je     a5e3 <process_rule+0x143>
    a5da:	c7 45 c0 00 00 00 00 	mov    DWORD PTR [rbp-0x40],0x0
    a5e1:	eb 7f                	jmp    a662 <process_rule+0x1c2>
    a5e3:	c7 45 c0 01 00 00 00 	mov    DWORD PTR [rbp-0x40],0x1
    a5ea:	eb 76                	jmp    a662 <process_rule+0x1c2>
    a5ec:	83 7d c0 01          	cmp    DWORD PTR [rbp-0x40],0x1
    a5f0:	75 3a                	jne    a62c <process_rule+0x18c>
    a5f2:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    a5f6:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    a5f9:	48 98                	cdqe   
    a5fb:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    a600:	0f be c0             	movsx  eax,al
    a603:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
    a606:	48 63 d2             	movsxd rdx,edx
    a609:	48 8d 4a ff          	lea    rcx,[rdx-0x1]
    a60d:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    a611:	48 01 d1             	add    rcx,rdx
    a614:	89 c2                	mov    edx,eax
    a616:	48 8d 35 f3 36 00 00 	lea    rsi,[rip+0x36f3]        # dd10 <_IO_stdin_used+0x1d10>
    a61d:	48 89 cf             	mov    rdi,rcx
    a620:	b8 00 00 00 00       	mov    eax,0x0
    a625:	e8 b6 7f ff ff       	call   25e0 <sprintf@plt>
    a62a:	eb 36                	jmp    a662 <process_rule+0x1c2>
    a62c:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    a630:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    a633:	48 98                	cdqe   
    a635:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    a63a:	0f be c0             	movsx  eax,al
    a63d:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
    a640:	01 d2                	add    edx,edx
    a642:	48 63 ca             	movsxd rcx,edx
    a645:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    a649:	48 01 d1             	add    rcx,rdx
    a64c:	89 c2                	mov    edx,eax
    a64e:	48 8d 35 be 36 00 00 	lea    rsi,[rip+0x36be]        # dd13 <_IO_stdin_used+0x1d13>
    a655:	48 89 cf             	mov    rdi,rcx
    a658:	b8 00 00 00 00       	mov    eax,0x0
    a65d:	e8 7e 7f ff ff       	call   25e0 <sprintf@plt>
    a662:	83 45 c4 01          	add    DWORD PTR [rbp-0x3c],0x1
    a666:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    a669:	48 63 d8             	movsxd rbx,eax
    a66c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a670:	48 83 c0 40          	add    rax,0x40
    a674:	48 89 c7             	mov    rdi,rax
    a677:	e8 44 7f ff ff       	call   25c0 <strlen@plt>
    a67c:	48 39 c3             	cmp    rbx,rax
    a67f:	0f 82 3d ff ff ff    	jb     a5c2 <process_rule+0x122>
    a685:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a689:	48 83 c0 40          	add    rax,0x40
    a68d:	ba ff 00 00 00       	mov    edx,0xff
    a692:	be 00 00 00 00       	mov    esi,0x0
    a697:	48 89 c7             	mov    rdi,rax
    a69a:	e8 d1 7d ff ff       	call   2470 <memset@plt>
    a69f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a6a3:	48 8d 50 40          	lea    rdx,[rax+0x40]
    a6a7:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    a6ab:	48 89 c6             	mov    rsi,rax
    a6ae:	48 89 d7             	mov    rdi,rdx
    a6b1:	e8 7a 80 ff ff       	call   2730 <strcpy@plt>
    a6b6:	4c 89 e4             	mov    rsp,r12
    a6b9:	90                   	nop
    a6ba:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a6be:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    a6c5:	00 00 
    a6c7:	74 05                	je     a6ce <process_rule+0x22e>
    a6c9:	e8 32 80 ff ff       	call   2700 <__stack_chk_fail@plt>
    a6ce:	48 8d 65 e0          	lea    rsp,[rbp-0x20]
    a6d2:	5b                   	pop    rbx
    a6d3:	41 5c                	pop    r12
    a6d5:	41 5e                	pop    r14
    a6d7:	41 5f                	pop    r15
    a6d9:	5d                   	pop    rbp
    a6da:	c3                   	ret    

000000000000a6db <d_op_parser>:
    a6db:	f3 0f 1e fa          	endbr64 
    a6df:	55                   	push   rbp
    a6e0:	48 89 e5             	mov    rbp,rsp
    a6e3:	48 83 ec 20          	sub    rsp,0x20
    a6e7:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    a6eb:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    a6ef:	89 55 ec             	mov    DWORD PTR [rbp-0x14],edx
    a6f2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a6f6:	48 89 c7             	mov    rdi,rax
    a6f9:	e8 f7 e9 ff ff       	call   90f5 <isdigit>
    a6fe:	84 c0                	test   al,al
    a700:	74 23                	je     a725 <d_op_parser+0x4a>
    a702:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a706:	c7 40 1c a1 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa1
    a70d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a711:	48 89 c7             	mov    rdi,rax
    a714:	e8 67 7f ff ff       	call   2680 <atoi@plt>
    a719:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a71d:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    a720:	e9 59 01 00 00       	jmp    a87e <d_op_parser+0x1a3>
    a725:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a729:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    a72c:	0f b6 15 e5 35 00 00 	movzx  edx,BYTE PTR [rip+0x35e5]        # dd18 <_IO_stdin_used+0x1d18>
    a733:	0f b6 c0             	movzx  eax,al
    a736:	0f b6 d2             	movzx  edx,dl
    a739:	29 d0                	sub    eax,edx
    a73b:	85 c0                	test   eax,eax
    a73d:	75 27                	jne    a766 <d_op_parser+0x8b>
    a73f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a743:	c7 40 1c a4 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa4
    a74a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a74e:	48 83 c0 01          	add    rax,0x1
    a752:	48 89 c7             	mov    rdi,rax
    a755:	e8 26 7f ff ff       	call   2680 <atoi@plt>
    a75a:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a75e:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    a761:	e9 18 01 00 00       	jmp    a87e <d_op_parser+0x1a3>
    a766:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a76a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    a76d:	0f b6 15 a6 35 00 00 	movzx  edx,BYTE PTR [rip+0x35a6]        # dd1a <_IO_stdin_used+0x1d1a>
    a774:	0f b6 c0             	movzx  eax,al
    a777:	0f b6 d2             	movzx  edx,dl
    a77a:	29 d0                	sub    eax,edx
    a77c:	85 c0                	test   eax,eax
    a77e:	75 27                	jne    a7a7 <d_op_parser+0xcc>
    a780:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a784:	c7 40 1c a2 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa2
    a78b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a78f:	48 83 c0 01          	add    rax,0x1
    a793:	48 89 c7             	mov    rdi,rax
    a796:	e8 e5 7e ff ff       	call   2680 <atoi@plt>
    a79b:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a79f:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    a7a2:	e9 d7 00 00 00       	jmp    a87e <d_op_parser+0x1a3>
    a7a7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a7ab:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    a7ae:	0f b6 15 67 35 00 00 	movzx  edx,BYTE PTR [rip+0x3567]        # dd1c <_IO_stdin_used+0x1d1c>
    a7b5:	0f b6 c0             	movzx  eax,al
    a7b8:	0f b6 d2             	movzx  edx,dl
    a7bb:	29 d0                	sub    eax,edx
    a7bd:	85 c0                	test   eax,eax
    a7bf:	75 27                	jne    a7e8 <d_op_parser+0x10d>
    a7c1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a7c5:	c7 40 1c a6 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa6
    a7cc:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a7d0:	48 83 c0 01          	add    rax,0x1
    a7d4:	48 89 c7             	mov    rdi,rax
    a7d7:	e8 a4 7e ff ff       	call   2680 <atoi@plt>
    a7dc:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a7e0:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    a7e3:	e9 96 00 00 00       	jmp    a87e <d_op_parser+0x1a3>
    a7e8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a7ec:	ba 02 00 00 00       	mov    edx,0x2
    a7f1:	48 8d 35 26 35 00 00 	lea    rsi,[rip+0x3526]        # dd1e <_IO_stdin_used+0x1d1e>
    a7f8:	48 89 c7             	mov    rdi,rax
    a7fb:	e8 10 7d ff ff       	call   2510 <strncmp@plt>
    a800:	85 c0                	test   eax,eax
    a802:	75 24                	jne    a828 <d_op_parser+0x14d>
    a804:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a808:	c7 40 1c a3 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa3
    a80f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a813:	48 83 c0 02          	add    rax,0x2
    a817:	48 89 c7             	mov    rdi,rax
    a81a:	e8 61 7e ff ff       	call   2680 <atoi@plt>
    a81f:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a823:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    a826:	eb 56                	jmp    a87e <d_op_parser+0x1a3>
    a828:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a82c:	ba 02 00 00 00       	mov    edx,0x2
    a831:	48 8d 35 e9 34 00 00 	lea    rsi,[rip+0x34e9]        # dd21 <_IO_stdin_used+0x1d21>
    a838:	48 89 c7             	mov    rdi,rax
    a83b:	e8 d0 7c ff ff       	call   2510 <strncmp@plt>
    a840:	85 c0                	test   eax,eax
    a842:	75 24                	jne    a868 <d_op_parser+0x18d>
    a844:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a848:	c7 40 1c a5 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa5
    a84f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a853:	48 83 c0 02          	add    rax,0x2
    a857:	48 89 c7             	mov    rdi,rax
    a85a:	e8 21 7e ff ff       	call   2680 <atoi@plt>
    a85f:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a863:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    a866:	eb 16                	jmp    a87e <d_op_parser+0x1a3>
    a868:	48 8d 3d b5 34 00 00 	lea    rdi,[rip+0x34b5]        # dd24 <_IO_stdin_used+0x1d24>
    a86f:	e8 3c 7c ff ff       	call   24b0 <puts@plt>
    a874:	bf ff ff ff ff       	mov    edi,0xffffffff
    a879:	e8 52 7c ff ff       	call   24d0 <exit@plt>
    a87e:	c9                   	leave  
    a87f:	c3                   	ret    

000000000000a880 <d_engine>:
    a880:	f3 0f 1e fa          	endbr64 
    a884:	55                   	push   rbp
    a885:	48 89 e5             	mov    rbp,rsp
    a888:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    a88c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    a890:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a894:	8b 40 1c             	mov    eax,DWORD PTR [rax+0x1c]
    a897:	83 f8 ff             	cmp    eax,0xffffffff
    a89a:	75 0a                	jne    a8a6 <d_engine+0x26>
    a89c:	b8 01 00 00 00       	mov    eax,0x1
    a8a1:	e9 ea 00 00 00       	jmp    a990 <d_engine+0x110>
    a8a6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a8aa:	8b 40 1c             	mov    eax,DWORD PTR [rax+0x1c]
    a8ad:	2d a1 00 00 00       	sub    eax,0xa1
    a8b2:	83 f8 05             	cmp    eax,0x5
    a8b5:	0f 87 d0 00 00 00    	ja     a98b <d_engine+0x10b>
    a8bb:	89 c0                	mov    eax,eax
    a8bd:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    a8c4:	00 
    a8c5:	48 8d 05 70 34 00 00 	lea    rax,[rip+0x3470]        # dd3c <_IO_stdin_used+0x1d3c>
    a8cc:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    a8cf:	48 98                	cdqe   
    a8d1:	48 8d 15 64 34 00 00 	lea    rdx,[rip+0x3464]        # dd3c <_IO_stdin_used+0x1d3c>
    a8d8:	48 01 d0             	add    rax,rdx
    a8db:	3e ff e0             	notrack jmp rax
    a8de:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a8e2:	8b 50 18             	mov    edx,DWORD PTR [rax+0x18]
    a8e5:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a8e9:	8b 40 34             	mov    eax,DWORD PTR [rax+0x34]
    a8ec:	39 c2                	cmp    edx,eax
    a8ee:	0f 85 87 00 00 00    	jne    a97b <d_engine+0xfb>
    a8f4:	b8 01 00 00 00       	mov    eax,0x1
    a8f9:	e9 92 00 00 00       	jmp    a990 <d_engine+0x110>
    a8fe:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a902:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    a905:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a909:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    a90c:	39 c2                	cmp    edx,eax
    a90e:	76 6e                	jbe    a97e <d_engine+0xfe>
    a910:	b8 01 00 00 00       	mov    eax,0x1
    a915:	eb 79                	jmp    a990 <d_engine+0x110>
    a917:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a91b:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    a91e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a922:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    a925:	39 c2                	cmp    edx,eax
    a927:	72 58                	jb     a981 <d_engine+0x101>
    a929:	b8 01 00 00 00       	mov    eax,0x1
    a92e:	eb 60                	jmp    a990 <d_engine+0x110>
    a930:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a934:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    a937:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a93b:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    a93e:	39 c2                	cmp    edx,eax
    a940:	73 42                	jae    a984 <d_engine+0x104>
    a942:	b8 01 00 00 00       	mov    eax,0x1
    a947:	eb 47                	jmp    a990 <d_engine+0x110>
    a949:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a94d:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    a950:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a954:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    a957:	39 c2                	cmp    edx,eax
    a959:	77 2c                	ja     a987 <d_engine+0x107>
    a95b:	b8 01 00 00 00       	mov    eax,0x1
    a960:	eb 2e                	jmp    a990 <d_engine+0x110>
    a962:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a966:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    a969:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a96d:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    a970:	39 c2                	cmp    edx,eax
    a972:	74 16                	je     a98a <d_engine+0x10a>
    a974:	b8 01 00 00 00       	mov    eax,0x1
    a979:	eb 15                	jmp    a990 <d_engine+0x110>
    a97b:	90                   	nop
    a97c:	eb 0d                	jmp    a98b <d_engine+0x10b>
    a97e:	90                   	nop
    a97f:	eb 0a                	jmp    a98b <d_engine+0x10b>
    a981:	90                   	nop
    a982:	eb 07                	jmp    a98b <d_engine+0x10b>
    a984:	90                   	nop
    a985:	eb 04                	jmp    a98b <d_engine+0x10b>
    a987:	90                   	nop
    a988:	eb 01                	jmp    a98b <d_engine+0x10b>
    a98a:	90                   	nop
    a98b:	b8 00 00 00 00       	mov    eax,0x0
    a990:	5d                   	pop    rbp
    a991:	c3                   	ret    

000000000000a992 <homenet_toi>:
    a992:	f3 0f 1e fa          	endbr64 
    a996:	55                   	push   rbp
    a997:	48 89 e5             	mov    rbp,rsp
    a99a:	53                   	push   rbx
    a99b:	48 83 ec 38          	sub    rsp,0x38
    a99f:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    a9a3:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a9aa:	00 00 
    a9ac:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    a9b0:	31 c0                	xor    eax,eax
    a9b2:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a9b6:	48 8d 35 97 33 00 00 	lea    rsi,[rip+0x3397]        # dd54 <_IO_stdin_used+0x1d54>
    a9bd:	48 89 c7             	mov    rdi,rax
    a9c0:	e8 7b 7d ff ff       	call   2740 <strtok@plt>
    a9c5:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    a9c9:	eb 4c                	jmp    aa17 <homenet_toi+0x85>
    a9cb:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    a9cf:	48 89 c7             	mov    rdi,rax
    a9d2:	e8 a9 7c ff ff       	call   2680 <atoi@plt>
    a9d7:	89 c3                	mov    ebx,eax
    a9d9:	48 8d 45 df          	lea    rax,[rbp-0x21]
    a9dd:	48 89 c7             	mov    rdi,rax
    a9e0:	e8 db 7b ff ff       	call   25c0 <strlen@plt>
    a9e5:	48 8d 55 df          	lea    rdx,[rbp-0x21]
    a9e9:	48 01 d0             	add    rax,rdx
    a9ec:	89 da                	mov    edx,ebx
    a9ee:	48 8d 35 61 33 00 00 	lea    rsi,[rip+0x3361]        # dd56 <_IO_stdin_used+0x1d56>
    a9f5:	48 89 c7             	mov    rdi,rax
    a9f8:	b8 00 00 00 00       	mov    eax,0x0
    a9fd:	e8 de 7b ff ff       	call   25e0 <sprintf@plt>
    aa02:	48 8d 35 4b 33 00 00 	lea    rsi,[rip+0x334b]        # dd54 <_IO_stdin_used+0x1d54>
    aa09:	bf 00 00 00 00       	mov    edi,0x0
    aa0e:	e8 2d 7d ff ff       	call   2740 <strtok@plt>
    aa13:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    aa17:	48 83 7d d0 00       	cmp    QWORD PTR [rbp-0x30],0x0
    aa1c:	75 ad                	jne    a9cb <homenet_toi+0x39>
    aa1e:	48 8d 45 df          	lea    rax,[rbp-0x21]
    aa22:	ba 10 00 00 00       	mov    edx,0x10
    aa27:	be 00 00 00 00       	mov    esi,0x0
    aa2c:	48 89 c7             	mov    rdi,rax
    aa2f:	e8 2c 7c ff ff       	call   2660 <strtol@plt>
    aa34:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    aa38:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    aa3f:	00 00 
    aa41:	74 05                	je     aa48 <homenet_toi+0xb6>
    aa43:	e8 b8 7c ff ff       	call   2700 <__stack_chk_fail@plt>
    aa48:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    aa4c:	c9                   	leave  
    aa4d:	c3                   	ret    

000000000000aa4e <tcp_check_sum_passed>:
    aa4e:	f3 0f 1e fa          	endbr64 
    aa52:	55                   	push   rbp
    aa53:	48 89 e5             	mov    rbp,rsp
    aa56:	41 54                	push   r12
    aa58:	53                   	push   rbx
    aa59:	48 83 ec 30          	sub    rsp,0x30
    aa5d:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    aa61:	48 89 75 c0          	mov    QWORD PTR [rbp-0x40],rsi
    aa65:	bb 00 00 00 00       	mov    ebx,0x0
    aa6a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    aa6e:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    aa72:	0f b7 c0             	movzx  eax,ax
    aa75:	89 c7                	mov    edi,eax
    aa77:	e8 74 7b ff ff       	call   25f0 <ntohs@plt>
    aa7c:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    aa80:	0f b6 12             	movzx  edx,BYTE PTR [rdx]
    aa83:	83 e2 0f             	and    edx,0xf
    aa86:	0f b6 d2             	movzx  edx,dl
    aa89:	c1 e2 02             	shl    edx,0x2
    aa8c:	29 d0                	sub    eax,edx
    aa8e:	66 89 45 de          	mov    WORD PTR [rbp-0x22],ax
    aa92:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    aa96:	0f b7 40 10          	movzx  eax,WORD PTR [rax+0x10]
    aa9a:	0f b7 c0             	movzx  eax,ax
    aa9d:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    aaa1:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    aaa5:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    aaa9:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    aaad:	66 c7 40 10 00 00    	mov    WORD PTR [rax+0x10],0x0
    aab3:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    aab7:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    aaba:	c1 e8 10             	shr    eax,0x10
    aabd:	89 c0                	mov    eax,eax
    aabf:	0f b7 c0             	movzx  eax,ax
    aac2:	48 01 c3             	add    rbx,rax
    aac5:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    aac9:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    aacc:	89 c0                	mov    eax,eax
    aace:	0f b7 c0             	movzx  eax,ax
    aad1:	48 01 c3             	add    rbx,rax
    aad4:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    aad8:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    aadb:	c1 e8 10             	shr    eax,0x10
    aade:	89 c0                	mov    eax,eax
    aae0:	0f b7 c0             	movzx  eax,ax
    aae3:	48 01 c3             	add    rbx,rax
    aae6:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    aaea:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    aaed:	89 c0                	mov    eax,eax
    aaef:	0f b7 c0             	movzx  eax,ax
    aaf2:	48 01 c3             	add    rbx,rax
    aaf5:	bf 06 00 00 00       	mov    edi,0x6
    aafa:	e8 c1 79 ff ff       	call   24c0 <htons@plt>
    aaff:	0f b7 c0             	movzx  eax,ax
    ab02:	48 01 c3             	add    rbx,rax
    ab05:	0f b7 45 de          	movzx  eax,WORD PTR [rbp-0x22]
    ab09:	89 c7                	mov    edi,eax
    ab0b:	e8 b0 79 ff ff       	call   24c0 <htons@plt>
    ab10:	0f b7 c0             	movzx  eax,ax
    ab13:	48 01 c3             	add    rbx,rax
    ab16:	eb 1a                	jmp    ab32 <tcp_check_sum_passed+0xe4>
    ab18:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    ab1c:	48 8d 50 14          	lea    rdx,[rax+0x14]
    ab20:	48 89 55 c0          	mov    QWORD PTR [rbp-0x40],rdx
    ab24:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    ab27:	0f b6 c0             	movzx  eax,al
    ab2a:	48 01 c3             	add    rbx,rax
    ab2d:	66 83 6d de 02       	sub    WORD PTR [rbp-0x22],0x2
    ab32:	66 83 7d de 01       	cmp    WORD PTR [rbp-0x22],0x1
    ab37:	77 df                	ja     ab18 <tcp_check_sum_passed+0xca>
    ab39:	66 83 7d de 00       	cmp    WORD PTR [rbp-0x22],0x0
    ab3e:	74 1d                	je     ab5d <tcp_check_sum_passed+0x10f>
    ab40:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    ab44:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    ab47:	0f b6 c0             	movzx  eax,al
    ab4a:	48 01 c3             	add    rbx,rax
    ab4d:	eb 0e                	jmp    ab5d <tcp_check_sum_passed+0x10f>
    ab4f:	0f b7 c3             	movzx  eax,bx
    ab52:	48 c1 eb 10          	shr    rbx,0x10
    ab56:	48 89 da             	mov    rdx,rbx
    ab59:	48 8d 1c 10          	lea    rbx,[rax+rdx*1]
    ab5d:	48 89 d8             	mov    rax,rbx
    ab60:	48 c1 e8 10          	shr    rax,0x10
    ab64:	48 85 c0             	test   rax,rax
    ab67:	75 e6                	jne    ab4f <tcp_check_sum_passed+0x101>
    ab69:	48 f7 d3             	not    rbx
    ab6c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    ab70:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    ab74:	66 89 50 10          	mov    WORD PTR [rax+0x10],dx
    ab78:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    ab7c:	0f b7 40 10          	movzx  eax,WORD PTR [rax+0x10]
    ab80:	0f b7 c0             	movzx  eax,ax
    ab83:	89 c7                	mov    edi,eax
    ab85:	e8 66 7a ff ff       	call   25f0 <ntohs@plt>
    ab8a:	44 0f b7 e0          	movzx  r12d,ax
    ab8e:	89 d8                	mov    eax,ebx
    ab90:	0f b7 c0             	movzx  eax,ax
    ab93:	89 c7                	mov    edi,eax
    ab95:	e8 56 7a ff ff       	call   25f0 <ntohs@plt>
    ab9a:	0f b7 c0             	movzx  eax,ax
    ab9d:	44 89 e2             	mov    edx,r12d
    aba0:	89 c6                	mov    esi,eax
    aba2:	48 8d 3d b2 31 00 00 	lea    rdi,[rip+0x31b2]        # dd5b <_IO_stdin_used+0x1d5b>
    aba9:	b8 00 00 00 00       	mov    eax,0x0
    abae:	e8 ad 78 ff ff       	call   2460 <printf@plt>
    abb3:	89 d8                	mov    eax,ebx
    abb5:	0f b7 c0             	movzx  eax,ax
    abb8:	89 c7                	mov    edi,eax
    abba:	e8 31 7a ff ff       	call   25f0 <ntohs@plt>
    abbf:	89 c3                	mov    ebx,eax
    abc1:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    abc5:	0f b7 c0             	movzx  eax,ax
    abc8:	89 c7                	mov    edi,eax
    abca:	e8 21 7a ff ff       	call   25f0 <ntohs@plt>
    abcf:	66 39 c3             	cmp    bx,ax
    abd2:	75 07                	jne    abdb <tcp_check_sum_passed+0x18d>
    abd4:	b8 01 00 00 00       	mov    eax,0x1
    abd9:	eb 05                	jmp    abe0 <tcp_check_sum_passed+0x192>
    abdb:	b8 00 00 00 00       	mov    eax,0x0
    abe0:	48 83 c4 30          	add    rsp,0x30
    abe4:	5b                   	pop    rbx
    abe5:	41 5c                	pop    r12
    abe7:	5d                   	pop    rbp
    abe8:	c3                   	ret    

000000000000abe9 <run_hello_script>:
    abe9:	f3 0f 1e fa          	endbr64 
    abed:	55                   	push   rbp
    abee:	48 89 e5             	mov    rbp,rsp
    abf1:	48 83 ec 10          	sub    rsp,0x10
    abf5:	e8 d6 7a ff ff       	call   26d0 <luaL_newstate@plt>
    abfa:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    abfe:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ac02:	48 89 c7             	mov    rdi,rax
    ac05:	e8 e6 7a ff ff       	call   26f0 <luaL_openlibs@plt>
    ac0a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ac0e:	ba 00 00 00 00       	mov    edx,0x0
    ac13:	48 8d 35 56 31 00 00 	lea    rsi,[rip+0x3156]        # dd70 <_IO_stdin_used+0x1d70>
    ac1a:	48 89 c7             	mov    rdi,rax
    ac1d:	e8 4e 7a ff ff       	call   2670 <luaL_loadfilex@plt>
    ac22:	85 c0                	test   eax,eax
    ac24:	75 2b                	jne    ac51 <run_hello_script+0x68>
    ac26:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ac2a:	41 b9 00 00 00 00    	mov    r9d,0x0
    ac30:	41 b8 00 00 00 00    	mov    r8d,0x0
    ac36:	b9 00 00 00 00       	mov    ecx,0x0
    ac3b:	ba ff ff ff ff       	mov    edx,0xffffffff
    ac40:	be 00 00 00 00       	mov    esi,0x0
    ac45:	48 89 c7             	mov    rdi,rax
    ac48:	e8 d3 79 ff ff       	call   2620 <lua_pcallk@plt>
    ac4d:	85 c0                	test   eax,eax
    ac4f:	74 07                	je     ac58 <run_hello_script+0x6f>
    ac51:	b8 01 00 00 00       	mov    eax,0x1
    ac56:	eb 05                	jmp    ac5d <run_hello_script+0x74>
    ac58:	b8 00 00 00 00       	mov    eax,0x0
    ac5d:	85 c0                	test   eax,eax
    ac5f:	75 1e                	jne    ac7f <run_hello_script+0x96>
    ac61:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ac65:	48 89 c7             	mov    rdi,rax
    ac68:	e8 53 7a ff ff       	call   26c0 <lua_gettop@plt>
    ac6d:	f7 d0                	not    eax
    ac6f:	89 c2                	mov    edx,eax
    ac71:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ac75:	89 d6                	mov    esi,edx
    ac77:	48 89 c7             	mov    rdi,rax
    ac7a:	e8 01 79 ff ff       	call   2580 <lua_settop@plt>
    ac7f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ac83:	48 89 c7             	mov    rdi,rax
    ac86:	e8 c5 7a ff ff       	call   2750 <lua_close@plt>
    ac8b:	90                   	nop
    ac8c:	c9                   	leave  
    ac8d:	c3                   	ret    

000000000000ac8e <collect_scripts>:
    ac8e:	f3 0f 1e fa          	endbr64 
    ac92:	55                   	push   rbp
    ac93:	48 89 e5             	mov    rbp,rsp
    ac96:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    ac9d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    aca4:	00 00 
    aca6:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    acaa:	31 c0                	xor    eax,eax
    acac:	48 8d 35 db 30 00 00 	lea    rsi,[rip+0x30db]        # dd8e <_IO_stdin_used+0x1d8e>
    acb3:	48 8d 3d d6 30 00 00 	lea    rdi,[rip+0x30d6]        # dd90 <_IO_stdin_used+0x1d90>
    acba:	e8 71 78 ff ff       	call   2530 <fopen@plt>
    acbf:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
    acc3:	48 83 7d 80 00       	cmp    QWORD PTR [rbp-0x80],0x0
    acc8:	75 16                	jne    ace0 <collect_scripts+0x52>
    acca:	48 8d 3d d7 30 00 00 	lea    rdi,[rip+0x30d7]        # dda8 <_IO_stdin_used+0x1da8>
    acd1:	e8 da 77 ff ff       	call   24b0 <puts@plt>
    acd6:	bf ff ff ff ff       	mov    edi,0xffffffff
    acdb:	e8 f0 77 ff ff       	call   24d0 <exit@plt>
    ace0:	48 c7 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],0x0
    ace7:	00 00 00 00 
    aceb:	48 8d 45 90          	lea    rax,[rbp-0x70]
    acef:	ba 00 00 00 00       	mov    edx,0x0
    acf4:	48 8d 35 ef 30 00 00 	lea    rsi,[rip+0x30ef]        # ddea <_IO_stdin_used+0x1dea>
    acfb:	48 89 c7             	mov    rdi,rax
    acfe:	e8 8d 79 ff ff       	call   2690 <regcomp@plt>
    ad03:	e9 86 00 00 00       	jmp    ad8e <collect_scripts+0x100>
    ad08:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    ad0f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    ad12:	3c 23                	cmp    al,0x23
    ad14:	75 02                	jne    ad18 <collect_scripts+0x8a>
    ad16:	eb 76                	jmp    ad8e <collect_scripts+0x100>
    ad18:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    ad1f:	ba 0e 00 00 00       	mov    edx,0xe
    ad24:	48 8d 35 c9 30 00 00 	lea    rsi,[rip+0x30c9]        # ddf4 <_IO_stdin_used+0x1df4>
    ad2b:	48 89 c7             	mov    rdi,rax
    ad2e:	e8 dd 77 ff ff       	call   2510 <strncmp@plt>
    ad33:	85 c0                	test   eax,eax
    ad35:	75 34                	jne    ad6b <collect_scripts+0xdd>
    ad37:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    ad3e:	48 8d 50 0e          	lea    rdx,[rax+0xe]
    ad42:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    ad46:	48 89 d6             	mov    rsi,rdx
    ad49:	48 89 c7             	mov    rdi,rax
    ad4c:	e8 df 79 ff ff       	call   2730 <strcpy@plt>
    ad51:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    ad55:	48 8d 35 a7 30 00 00 	lea    rsi,[rip+0x30a7]        # de03 <_IO_stdin_used+0x1e03>
    ad5c:	48 89 c7             	mov    rdi,rax
    ad5f:	e8 2c 7a ff ff       	call   2790 <strcspn@plt>
    ad64:	c6 44 05 d0 00       	mov    BYTE PTR [rbp+rax*1-0x30],0x0
    ad69:	eb 23                	jmp    ad8e <collect_scripts+0x100>
    ad6b:	48 8b b5 78 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x88]
    ad72:	48 8d 45 90          	lea    rax,[rbp-0x70]
    ad76:	41 b8 00 00 00 00    	mov    r8d,0x0
    ad7c:	b9 00 00 00 00       	mov    ecx,0x0
    ad81:	ba 00 00 00 00       	mov    edx,0x0
    ad86:	48 89 c7             	mov    rdi,rax
    ad89:	e8 b2 77 ff ff       	call   2540 <regexec@plt>
    ad8e:	48 8b 55 80          	mov    rdx,QWORD PTR [rbp-0x80]
    ad92:	48 8d 8d 70 ff ff ff 	lea    rcx,[rbp-0x90]
    ad99:	48 8d 85 78 ff ff ff 	lea    rax,[rbp-0x88]
    ada0:	48 89 ce             	mov    rsi,rcx
    ada3:	48 89 c7             	mov    rdi,rax
    ada6:	e8 75 79 ff ff       	call   2720 <getline@plt>
    adab:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    adaf:	48 83 7d 88 ff       	cmp    QWORD PTR [rbp-0x78],0xffffffffffffffff
    adb4:	0f 85 4e ff ff ff    	jne    ad08 <collect_scripts+0x7a>
    adba:	90                   	nop
    adbb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    adbf:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    adc6:	00 00 
    adc8:	74 05                	je     adcf <collect_scripts+0x141>
    adca:	e8 31 79 ff ff       	call   2700 <__stack_chk_fail@plt>
    adcf:	c9                   	leave  
    add0:	c3                   	ret    

000000000000add1 <ip6decode>:
    add1:	f3 0f 1e fa          	endbr64 
    add5:	55                   	push   rbp
    add6:	48 89 e5             	mov    rbp,rsp
    add9:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    ade0:	48 89 bd 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdi
    ade7:	48 89 b5 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rsi
    adee:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    adf5:	00 00 
    adf7:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    adfb:	31 c0                	xor    eax,eax
    adfd:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    ae04:	48 83 c0 0e          	add    rax,0xe
    ae08:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    ae0c:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    ae10:	48 83 c0 08          	add    rax,0x8
    ae14:	48 89 c7             	mov    rdi,rax
    ae17:	e8 17 83 ff ff       	call   3133 <inet6_ntoa>
    ae1c:	48 89 c1             	mov    rcx,rax
    ae1f:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    ae23:	ba 29 00 00 00       	mov    edx,0x29
    ae28:	48 89 ce             	mov    rsi,rcx
    ae2b:	48 89 c7             	mov    rdi,rax
    ae2e:	e8 4d 79 ff ff       	call   2780 <strncpy@plt>
    ae33:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    ae37:	48 83 c0 18          	add    rax,0x18
    ae3b:	48 89 c7             	mov    rdi,rax
    ae3e:	e8 f0 82 ff ff       	call   3133 <inet6_ntoa>
    ae43:	48 89 c1             	mov    rcx,rax
    ae46:	48 8d 45 90          	lea    rax,[rbp-0x70]
    ae4a:	ba 29 00 00 00       	mov    edx,0x29
    ae4f:	48 89 ce             	mov    rsi,rcx
    ae52:	48 89 c7             	mov    rdi,rax
    ae55:	e8 26 79 ff ff       	call   2780 <strncpy@plt>
    ae5a:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    ae5e:	0f b6 40 06          	movzx  eax,BYTE PTR [rax+0x6]
    ae62:	0f b6 c0             	movzx  eax,al
    ae65:	85 c0                	test   eax,eax
    ae67:	75 1c                	jne    ae85 <ip6decode+0xb4>
    ae69:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    ae6d:	48 8d 4d c0          	lea    rcx,[rbp-0x40]
    ae71:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    ae78:	48 89 ce             	mov    rsi,rcx
    ae7b:	48 89 c7             	mov    rdi,rax
    ae7e:	e8 4b 8b ff ff       	call   39ce <ip6_icmp_decode>
    ae83:	eb 28                	jmp    aead <ip6decode+0xdc>
    ae85:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    ae89:	0f b6 40 06          	movzx  eax,BYTE PTR [rax+0x6]
    ae8d:	0f b6 c8             	movzx  ecx,al
    ae90:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    ae94:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    ae98:	48 89 c6             	mov    rsi,rax
    ae9b:	48 8d 3d 66 2f 00 00 	lea    rdi,[rip+0x2f66]        # de08 <_IO_stdin_used+0x1e08>
    aea2:	b8 00 00 00 00       	mov    eax,0x0
    aea7:	e8 b4 75 ff ff       	call   2460 <printf@plt>
    aeac:	90                   	nop
    aead:	90                   	nop
    aeae:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aeb2:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    aeb9:	00 00 
    aebb:	74 05                	je     aec2 <ip6decode+0xf1>
    aebd:	e8 3e 78 ff ff       	call   2700 <__stack_chk_fail@plt>
    aec2:	c9                   	leave  
    aec3:	c3                   	ret    

000000000000aec4 <crash_handler>:
    aec4:	f3 0f 1e fa          	endbr64 
    aec8:	55                   	push   rbp
    aec9:	48 89 e5             	mov    rbp,rsp
    aecc:	41 54                	push   r12
    aece:	53                   	push   rbx
    aecf:	48 81 ec f0 00 00 00 	sub    rsp,0xf0
    aed6:	89 bd 0c ff ff ff    	mov    DWORD PTR [rbp-0xf4],edi
    aedc:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    aee3:	00 00 
    aee5:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    aee9:	31 c0                	xor    eax,eax
    aeeb:	48 8d 85 30 ff ff ff 	lea    rax,[rbp-0xd0]
    aef2:	be 14 00 00 00       	mov    esi,0x14
    aef7:	48 89 c7             	mov    rdi,rax
    aefa:	e8 91 75 ff ff       	call   2490 <backtrace@plt>
    aeff:	89 85 18 ff ff ff    	mov    DWORD PTR [rbp-0xe8],eax
    af05:	8b 95 18 ff ff ff    	mov    edx,DWORD PTR [rbp-0xe8]
    af0b:	48 8d 85 30 ff ff ff 	lea    rax,[rbp-0xd0]
    af12:	89 d6                	mov    esi,edx
    af14:	48 89 c7             	mov    rdi,rax
    af17:	e8 84 76 ff ff       	call   25a0 <backtrace_symbols@plt>
    af1c:	48 89 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rax
    af23:	b8 00 00 00 00       	mov    eax,0x0
    af28:	e8 d2 83 ff ff       	call   32ff <get_formated_time>
    af2d:	48 89 c6             	mov    rsi,rax
    af30:	48 8d 3d f9 2e 00 00 	lea    rdi,[rip+0x2ef9]        # de30 <_IO_stdin_used+0x1e30>
    af37:	b8 00 00 00 00       	mov    eax,0x0
    af3c:	e8 1f 75 ff ff       	call   2460 <printf@plt>
    af41:	48 8d 3d 17 2f 00 00 	lea    rdi,[rip+0x2f17]        # de5f <_IO_stdin_used+0x1e5f>
    af48:	e8 63 75 ff ff       	call   24b0 <puts@plt>
    af4d:	48 83 bd 20 ff ff ff 	cmp    QWORD PTR [rbp-0xe0],0x0
    af54:	00 
    af55:	0f 84 56 01 00 00    	je     b0b1 <crash_handler+0x1ed>
    af5b:	c7 85 14 ff ff ff 00 	mov    DWORD PTR [rbp-0xec],0x0
    af62:	00 00 00 
    af65:	e9 35 01 00 00       	jmp    b09f <crash_handler+0x1db>
    af6a:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    af70:	48 98                	cdqe   
    af72:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    af79:	00 
    af7a:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    af81:	48 01 d0             	add    rax,rdx
    af84:	48 8b 00             	mov    rax,QWORD PTR [rax]
    af87:	48 8d 35 e5 2e 00 00 	lea    rsi,[rip+0x2ee5]        # de73 <_IO_stdin_used+0x1e73>
    af8e:	48 89 c7             	mov    rdi,rax
    af91:	e8 9a 76 ff ff       	call   2630 <strstr@plt>
    af96:	48 85 c0             	test   rax,rax
    af99:	0f 85 f8 00 00 00    	jne    b097 <crash_handler+0x1d3>
    af9f:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    afa5:	48 98                	cdqe   
    afa7:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    afae:	00 
    afaf:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    afb6:	48 01 d0             	add    rax,rdx
    afb9:	4c 8b 20             	mov    r12,QWORD PTR [rax]
    afbc:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    afc2:	48 98                	cdqe   
    afc4:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    afcb:	00 
    afcc:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    afd3:	48 01 d0             	add    rax,rdx
    afd6:	48 8b 00             	mov    rax,QWORD PTR [rax]
    afd9:	be 2b 00 00 00       	mov    esi,0x2b
    afde:	48 89 c7             	mov    rdi,rax
    afe1:	e8 b4 84 ff ff       	call   349a <strloc>
    afe6:	48 98                	cdqe   
    afe8:	48 83 c0 01          	add    rax,0x1
    afec:	49 8d 14 04          	lea    rdx,[r12+rax*1]
    aff0:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    aff4:	48 8d 35 7c 2e 00 00 	lea    rsi,[rip+0x2e7c]        # de77 <_IO_stdin_used+0x1e77>
    affb:	48 89 c7             	mov    rdi,rax
    affe:	b8 00 00 00 00       	mov    eax,0x0
    b003:	e8 d8 75 ff ff       	call   25e0 <sprintf@plt>
    b008:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b00c:	be 29 00 00 00       	mov    esi,0x29
    b011:	48 89 c7             	mov    rdi,rax
    b014:	e8 81 84 ff ff       	call   349a <strloc>
    b019:	48 98                	cdqe   
    b01b:	c6 44 05 d0 00       	mov    BYTE PTR [rbp+rax*1-0x30],0x0
    b020:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b024:	ba 10 00 00 00       	mov    edx,0x10
    b029:	be 00 00 00 00       	mov    esi,0x0
    b02e:	48 89 c7             	mov    rdi,rax
    b031:	e8 2a 76 ff ff       	call   2660 <strtol@plt>
    b036:	89 85 1c ff ff ff    	mov    DWORD PTR [rbp-0xe4],eax
    b03c:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [rbp-0xe4]
    b042:	89 c7                	mov    edi,eax
    b044:	e8 09 01 00 00       	call   b152 <offset_search>
    b049:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
    b050:	83 bd 1c ff ff ff 00 	cmp    DWORD PTR [rbp-0xe4],0x0
    b057:	74 23                	je     b07c <crash_handler+0x1b8>
    b059:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    b060:	8b 95 1c ff ff ff    	mov    edx,DWORD PTR [rbp-0xe4]
    b066:	48 89 c6             	mov    rsi,rax
    b069:	48 8d 3d 0b 2e 00 00 	lea    rdi,[rip+0x2e0b]        # de7b <_IO_stdin_used+0x1e7b>
    b070:	b8 00 00 00 00       	mov    eax,0x0
    b075:	e8 e6 73 ff ff       	call   2460 <printf@plt>
    b07a:	eb 1c                	jmp    b098 <crash_handler+0x1d4>
    b07c:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [rbp-0xe4]
    b082:	89 c6                	mov    esi,eax
    b084:	48 8d 3d 0d 2e 00 00 	lea    rdi,[rip+0x2e0d]        # de98 <_IO_stdin_used+0x1e98>
    b08b:	b8 00 00 00 00       	mov    eax,0x0
    b090:	e8 cb 73 ff ff       	call   2460 <printf@plt>
    b095:	eb 01                	jmp    b098 <crash_handler+0x1d4>
    b097:	90                   	nop
    b098:	83 85 14 ff ff ff 01 	add    DWORD PTR [rbp-0xec],0x1
    b09f:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b0a5:	3b 85 18 ff ff ff    	cmp    eax,DWORD PTR [rbp-0xe8]
    b0ab:	0f 8c b9 fe ff ff    	jl     af6a <crash_handler+0xa6>
    b0b1:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b0b8:	48 89 c7             	mov    rdi,rax
    b0bb:	e8 f0 74 ff ff       	call   25b0 <free@plt>
    b0c0:	48 8d 3d fb 2d 00 00 	lea    rdi,[rip+0x2dfb]        # dec2 <_IO_stdin_used+0x1ec2>
    b0c7:	e8 e4 73 ff ff       	call   24b0 <puts@plt>
    b0cc:	89 c6                	mov    esi,eax
    b0ce:	48 8d 3d fc 2d 00 00 	lea    rdi,[rip+0x2dfc]        # ded1 <_IO_stdin_used+0x1ed1>
    b0d5:	b8 00 00 00 00       	mov    eax,0x0
    b0da:	e8 81 73 ff ff       	call   2460 <printf@plt>
    b0df:	89 d8                	mov    eax,ebx
    b0e1:	89 c6                	mov    esi,eax
    b0e3:	48 8d 3d f7 2d 00 00 	lea    rdi,[rip+0x2df7]        # dee1 <_IO_stdin_used+0x1ee1>
    b0ea:	b8 00 00 00 00       	mov    eax,0x0
    b0ef:	e8 6c 73 ff ff       	call   2460 <printf@plt>
    b0f4:	89 d8                	mov    eax,ebx
    b0f6:	89 c6                	mov    esi,eax
    b0f8:	48 8d 3d f2 2d 00 00 	lea    rdi,[rip+0x2df2]        # def1 <_IO_stdin_used+0x1ef1>
    b0ff:	b8 00 00 00 00       	mov    eax,0x0
    b104:	e8 57 73 ff ff       	call   2460 <printf@plt>
    b109:	89 c8                	mov    eax,ecx
    b10b:	89 c6                	mov    esi,eax
    b10d:	48 8d 3d ed 2d 00 00 	lea    rdi,[rip+0x2ded]        # df01 <_IO_stdin_used+0x1f01>
    b114:	b8 00 00 00 00       	mov    eax,0x0
    b119:	e8 42 73 ff ff       	call   2460 <printf@plt>
    b11e:	89 e0                	mov    eax,esp
    b120:	89 c6                	mov    esi,eax
    b122:	48 8d 3d e8 2d 00 00 	lea    rdi,[rip+0x2de8]        # df11 <_IO_stdin_used+0x1f11>
    b129:	b8 00 00 00 00       	mov    eax,0x0
    b12e:	e8 2d 73 ff ff       	call   2460 <printf@plt>
    b133:	89 e8                	mov    eax,ebp
    b135:	89 c6                	mov    esi,eax
    b137:	48 8d 3d e3 2d 00 00 	lea    rdi,[rip+0x2de3]        # df21 <_IO_stdin_used+0x1f21>
    b13e:	b8 00 00 00 00       	mov    eax,0x0
    b143:	e8 18 73 ff ff       	call   2460 <printf@plt>
    b148:	bf 01 00 00 00       	mov    edi,0x1
    b14d:	e8 7e 73 ff ff       	call   24d0 <exit@plt>

000000000000b152 <offset_search>:
    b152:	f3 0f 1e fa          	endbr64 
    b156:	55                   	push   rbp
    b157:	48 89 e5             	mov    rbp,rsp
    b15a:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    b15d:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    b164:	eb 44                	jmp    b1aa <offset_search+0x58>
    b166:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    b169:	48 63 d0             	movsxd rdx,eax
    b16c:	48 89 d0             	mov    rax,rdx
    b16f:	48 c1 e0 02          	shl    rax,0x2
    b173:	48 01 d0             	add    rax,rdx
    b176:	48 c1 e0 03          	shl    rax,0x3
    b17a:	48 8d 15 7f d6 12 00 	lea    rdx,[rip+0x12d67f]        # 138800 <fn_mem_map>
    b181:	48 01 d0             	add    rax,rdx
    b184:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b188:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b18c:	8b 40 20             	mov    eax,DWORD PTR [rax+0x20]
    b18f:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    b192:	76 12                	jbe    b1a6 <offset_search+0x54>
    b194:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b198:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    b19b:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    b19e:	73 06                	jae    b1a6 <offset_search+0x54>
    b1a0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b1a4:	eb 14                	jmp    b1ba <offset_search+0x68>
    b1a6:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    b1aa:	8b 05 50 fe 12 00    	mov    eax,DWORD PTR [rip+0x12fe50]        # 13b000 <fn_num>
    b1b0:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    b1b3:	7c b1                	jl     b166 <offset_search+0x14>
    b1b5:	b8 00 00 00 00       	mov    eax,0x0
    b1ba:	5d                   	pop    rbp
    b1bb:	c3                   	ret    

000000000000b1bc <add_fn>:
    b1bc:	f3 0f 1e fa          	endbr64 
    b1c0:	55                   	push   rbp
    b1c1:	48 89 e5             	mov    rbp,rsp
    b1c4:	48 83 ec 20          	sub    rsp,0x20
    b1c8:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    b1cc:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    b1cf:	89 55 e0             	mov    DWORD PTR [rbp-0x20],edx
    b1d2:	8b 05 28 fe 12 00    	mov    eax,DWORD PTR [rip+0x12fe28]        # 13b000 <fn_num>
    b1d8:	8d 50 01             	lea    edx,[rax+0x1]
    b1db:	89 15 1f fe 12 00    	mov    DWORD PTR [rip+0x12fe1f],edx        # 13b000 <fn_num>
    b1e1:	48 63 d0             	movsxd rdx,eax
    b1e4:	48 89 d0             	mov    rax,rdx
    b1e7:	48 c1 e0 02          	shl    rax,0x2
    b1eb:	48 01 d0             	add    rax,rdx
    b1ee:	48 c1 e0 03          	shl    rax,0x3
    b1f2:	48 8d 15 07 d6 12 00 	lea    rdx,[rip+0x12d607]        # 138800 <fn_mem_map>
    b1f9:	48 01 d0             	add    rax,rdx
    b1fc:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b200:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b204:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    b208:	48 89 d6             	mov    rsi,rdx
    b20b:	48 89 c7             	mov    rdi,rax
    b20e:	e8 1d 75 ff ff       	call   2730 <strcpy@plt>
    b213:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b217:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    b21a:	89 50 20             	mov    DWORD PTR [rax+0x20],edx
    b21d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b221:	8b 55 e0             	mov    edx,DWORD PTR [rbp-0x20]
    b224:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    b227:	90                   	nop
    b228:	c9                   	leave  
    b229:	c3                   	ret    

000000000000b22a <print_mem_map>:
    b22a:	f3 0f 1e fa          	endbr64 
    b22e:	55                   	push   rbp
    b22f:	48 89 e5             	mov    rbp,rsp
    b232:	48 83 ec 10          	sub    rsp,0x10
    b236:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    b23d:	eb 4c                	jmp    b28b <print_mem_map+0x61>
    b23f:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    b242:	48 63 d0             	movsxd rdx,eax
    b245:	48 89 d0             	mov    rax,rdx
    b248:	48 c1 e0 02          	shl    rax,0x2
    b24c:	48 01 d0             	add    rax,rdx
    b24f:	48 c1 e0 03          	shl    rax,0x3
    b253:	48 8d 15 a6 d5 12 00 	lea    rdx,[rip+0x12d5a6]        # 138800 <fn_mem_map>
    b25a:	48 01 d0             	add    rax,rdx
    b25d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b261:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b265:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    b268:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b26c:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    b26f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b273:	48 89 c6             	mov    rsi,rax
    b276:	48 8d 3d bb 2c 00 00 	lea    rdi,[rip+0x2cbb]        # df38 <_IO_stdin_used+0x1f38>
    b27d:	b8 00 00 00 00       	mov    eax,0x0
    b282:	e8 d9 71 ff ff       	call   2460 <printf@plt>
    b287:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    b28b:	8b 05 6f fd 12 00    	mov    eax,DWORD PTR [rip+0x12fd6f]        # 13b000 <fn_num>
    b291:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    b294:	7c a9                	jl     b23f <print_mem_map+0x15>
    b296:	90                   	nop
    b297:	90                   	nop
    b298:	c9                   	leave  
    b299:	c3                   	ret    

000000000000b29a <load_fn_mem_map>:
    b29a:	f3 0f 1e fa          	endbr64 
    b29e:	55                   	push   rbp
    b29f:	48 89 e5             	mov    rbp,rsp
    b2a2:	53                   	push   rbx
    b2a3:	48 83 ec 78          	sub    rsp,0x78
    b2a7:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b2ae:	00 00 
    b2b0:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    b2b4:	31 c0                	xor    eax,eax
    b2b6:	48 8d 35 93 2c 00 00 	lea    rsi,[rip+0x2c93]        # df50 <_IO_stdin_used+0x1f50>
    b2bd:	48 8d 3d 8e 2c 00 00 	lea    rdi,[rip+0x2c8e]        # df52 <_IO_stdin_used+0x1f52>
    b2c4:	e8 67 72 ff ff       	call   2530 <fopen@plt>
    b2c9:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    b2cd:	48 83 7d b0 00       	cmp    QWORD PTR [rbp-0x50],0x0
    b2d2:	75 16                	jne    b2ea <load_fn_mem_map+0x50>
    b2d4:	48 8d 3d 95 2c 00 00 	lea    rdi,[rip+0x2c95]        # df70 <_IO_stdin_used+0x1f70>
    b2db:	e8 d0 71 ff ff       	call   24b0 <puts@plt>
    b2e0:	bf ff ff ff ff       	mov    edi,0xffffffff
    b2e5:	e8 e6 71 ff ff       	call   24d0 <exit@plt>
    b2ea:	48 c7 45 98 00 00 00 	mov    QWORD PTR [rbp-0x68],0x0
    b2f1:	00 
    b2f2:	48 c7 45 a0 00 00 00 	mov    QWORD PTR [rbp-0x60],0x0
    b2f9:	00 
    b2fa:	e9 db 00 00 00       	jmp    b3da <load_fn_mem_map+0x140>
    b2ff:	48 8b 5d 98          	mov    rbx,QWORD PTR [rbp-0x68]
    b303:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    b307:	48 8d 35 c9 2c 00 00 	lea    rsi,[rip+0x2cc9]        # dfd7 <_IO_stdin_used+0x1fd7>
    b30e:	48 89 c7             	mov    rdi,rax
    b311:	e8 7a 74 ff ff       	call   2790 <strcspn@plt>
    b316:	48 01 d8             	add    rax,rbx
    b319:	c6 00 00             	mov    BYTE PTR [rax],0x0
    b31c:	c7 45 94 00 00 00 00 	mov    DWORD PTR [rbp-0x6c],0x0
    b323:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    b327:	48 8d 35 ab 2c 00 00 	lea    rsi,[rip+0x2cab]        # dfd9 <_IO_stdin_used+0x1fd9>
    b32e:	48 89 c7             	mov    rdi,rax
    b331:	e8 0a 74 ff ff       	call   2740 <strtok@plt>
    b336:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    b33a:	eb 7f                	jmp    b3bb <load_fn_mem_map+0x121>
    b33c:	83 7d 94 02          	cmp    DWORD PTR [rbp-0x6c],0x2
    b340:	74 44                	je     b386 <load_fn_mem_map+0xec>
    b342:	83 7d 94 02          	cmp    DWORD PTR [rbp-0x6c],0x2
    b346:	7f 59                	jg     b3a1 <load_fn_mem_map+0x107>
    b348:	83 7d 94 00          	cmp    DWORD PTR [rbp-0x6c],0x0
    b34c:	74 08                	je     b356 <load_fn_mem_map+0xbc>
    b34e:	83 7d 94 01          	cmp    DWORD PTR [rbp-0x6c],0x1
    b352:	74 17                	je     b36b <load_fn_mem_map+0xd1>
    b354:	eb 4b                	jmp    b3a1 <load_fn_mem_map+0x107>
    b356:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    b35a:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b35e:	48 89 d6             	mov    rsi,rdx
    b361:	48 89 c7             	mov    rdi,rax
    b364:	e8 c7 73 ff ff       	call   2730 <strcpy@plt>
    b369:	eb 37                	jmp    b3a2 <load_fn_mem_map+0x108>
    b36b:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    b36f:	ba 10 00 00 00       	mov    edx,0x10
    b374:	be 00 00 00 00       	mov    esi,0x0
    b379:	48 89 c7             	mov    rdi,rax
    b37c:	e8 df 72 ff ff       	call   2660 <strtol@plt>
    b381:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    b384:	eb 1c                	jmp    b3a2 <load_fn_mem_map+0x108>
    b386:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    b38a:	ba 10 00 00 00       	mov    edx,0x10
    b38f:	be 00 00 00 00       	mov    esi,0x0
    b394:	48 89 c7             	mov    rdi,rax
    b397:	e8 c4 72 ff ff       	call   2660 <strtol@plt>
    b39c:	89 45 90             	mov    DWORD PTR [rbp-0x70],eax
    b39f:	eb 01                	jmp    b3a2 <load_fn_mem_map+0x108>
    b3a1:	90                   	nop
    b3a2:	48 8d 35 30 2c 00 00 	lea    rsi,[rip+0x2c30]        # dfd9 <_IO_stdin_used+0x1fd9>
    b3a9:	bf 00 00 00 00       	mov    edi,0x0
    b3ae:	e8 8d 73 ff ff       	call   2740 <strtok@plt>
    b3b3:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    b3b7:	83 45 94 01          	add    DWORD PTR [rbp-0x6c],0x1
    b3bb:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
    b3c0:	0f 85 76 ff ff ff    	jne    b33c <load_fn_mem_map+0xa2>
    b3c6:	8b 55 90             	mov    edx,DWORD PTR [rbp-0x70]
    b3c9:	8b 4d 8c             	mov    ecx,DWORD PTR [rbp-0x74]
    b3cc:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b3d0:	89 ce                	mov    esi,ecx
    b3d2:	48 89 c7             	mov    rdi,rax
    b3d5:	e8 e2 fd ff ff       	call   b1bc <add_fn>
    b3da:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
    b3de:	48 8d 4d a0          	lea    rcx,[rbp-0x60]
    b3e2:	48 8d 45 98          	lea    rax,[rbp-0x68]
    b3e6:	48 89 ce             	mov    rsi,rcx
    b3e9:	48 89 c7             	mov    rdi,rax
    b3ec:	e8 2f 73 ff ff       	call   2720 <getline@plt>
    b3f1:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    b3f5:	48 83 7d b8 ff       	cmp    QWORD PTR [rbp-0x48],0xffffffffffffffff
    b3fa:	0f 85 ff fe ff ff    	jne    b2ff <load_fn_mem_map+0x65>
    b400:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b404:	48 89 c7             	mov    rdi,rax
    b407:	e8 64 73 ff ff       	call   2770 <fclose@plt>
    b40c:	90                   	nop
    b40d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    b411:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    b418:	00 00 
    b41a:	74 05                	je     b421 <load_fn_mem_map+0x187>
    b41c:	e8 df 72 ff ff       	call   2700 <__stack_chk_fail@plt>
    b421:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    b425:	c9                   	leave  
    b426:	c3                   	ret    

Disassembly of section .fini:

000000000000b428 <_fini>:
    b428:	f3 0f 1e fa          	endbr64 
    b42c:	48 83 ec 08          	sub    rsp,0x8
    b430:	48 83 c4 08          	add    rsp,0x8
    b434:	c3                   	ret    

Disassembly of section .rodata:

000000000000c000 <_IO_stdin_used>:
    c000:	01 00                	add    DWORD PTR [rax],eax
    c002:	02 00                	add    al,BYTE PTR [rax]
    c004:	2f                   	(bad)  
    c005:	65 74 63             	gs je  c06b <_IO_stdin_used+0x6b>
    c008:	2f                   	(bad)  
    c009:	76 69                	jbe    c074 <_IO_stdin_used+0x74>
    c00b:	67 69 6c 2f 76 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x76],0x6c696769
    c012:	69 6c 
    c014:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    c018:	66 00 2f             	data16 add BYTE PTR [rdi],ch
    c01b:	76 61                	jbe    c07e <_IO_stdin_used+0x7e>
    c01d:	72 2f                	jb     c04e <_IO_stdin_used+0x4e>
    c01f:	6c                   	ins    BYTE PTR es:[rdi],dx
    c020:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c021:	67 2f                	addr32 (bad) 
    c023:	76 69                	jbe    c08e <_IO_stdin_used+0x8e>
    c025:	67 69 6c 2f 73 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x6f6c6769
    c02c:	6c 6f 
    c02e:	67 2e 6c             	cs ins BYTE PTR es:[edi],dx
    c031:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c032:	67 00 2f             	add    BYTE PTR [edi],ch
    c035:	65 74 63             	gs je  c09b <_IO_stdin_used+0x9b>
    c038:	2f                   	(bad)  
    c039:	76 69                	jbe    c0a4 <_IO_stdin_used+0xa4>
    c03b:	67 69 6c 2f 68 6f 73 	imul   ebp,DWORD PTR [edi+ebp*1+0x68],0x7374736f
    c042:	74 73 
    c044:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    c048:	66 00 00             	data16 add BYTE PTR [rax],al
    c04b:	00 00                	add    BYTE PTR [rax],al
    c04d:	00 00                	add    BYTE PTR [rax],al
    c04f:	00 1b                	add    BYTE PTR [rbx],bl
    c051:	5b                   	pop    rbx
    c052:	39 30                	cmp    DWORD PTR [rax],esi
    c054:	6d                   	ins    DWORD PTR es:[rdi],dx
    c055:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c05a:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c05f:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c064:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c069:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c06e:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c073:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c078:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c07d:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c082:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c087:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c08c:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c091:	2d 1b 5b 6d 00       	sub    eax,0x6d5b1b
    c096:	00 00                	add    BYTE PTR [rax],al
    c098:	42                   	rex.X
    c099:	41                   	rex.B
    c09a:	44 2d 54 52 41 46    	rex.R sub eax,0x46415254
    c0a0:	46                   	rex.RX
    c0a1:	49                   	rex.WB
    c0a2:	43 20 55 6e          	rex.XB and BYTE PTR [r13+0x6e],dl
    c0a6:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c0aa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c0ab:	20 45 74             	and    BYTE PTR [rbp+0x74],al
    c0ae:	68 65 72 6e 74       	push   0x746e7265
    c0b3:	20 46 72             	and    BYTE PTR [rsi+0x72],al
    c0b6:	61                   	(bad)  
    c0b7:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0b8:	65 20 50 72          	and    BYTE PTR gs:[rax+0x72],dl
    c0bc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c0bd:	74 6f                	je     c12e <_IO_stdin_used+0x12e>
    c0bf:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    c0c2:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    c0c5:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0c6:	62                   	(bad)  
    c0c7:	65 72 00             	gs jb  c0ca <_IO_stdin_used+0xca>
    c0ca:	2f                   	(bad)  
    c0cb:	76 61                	jbe    c12e <_IO_stdin_used+0x12e>
    c0cd:	72 2f                	jb     c0fe <_IO_stdin_used+0xfe>
    c0cf:	6c                   	ins    BYTE PTR es:[rdi],dx
    c0d0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c0d1:	67 2f                	addr32 (bad) 
    c0d3:	76 69                	jbe    c13e <_IO_stdin_used+0x13e>
    c0d5:	67 69 6c 2f 73 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x6f6c6769
    c0dc:	6c 6f 
    c0de:	67 2e 6c             	cs ins BYTE PTR es:[edi],dx
    c0e1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c0e2:	67 00 00             	add    BYTE PTR [eax],al
    c0e5:	00 00                	add    BYTE PTR [rax],al
    c0e7:	00 1b                	add    BYTE PTR [rbx],bl
    c0e9:	5b                   	pop    rbx
    c0ea:	33 3b                	xor    edi,DWORD PTR [rbx]
    c0ec:	33 33                	xor    esi,DWORD PTR [rbx]
    c0ee:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0ef:	00 25 73 00 30 2e    	add    BYTE PTR [rip+0x2e300073],ah        # 2e30c168 <_end+0x2e1d1160>
    c0f5:	30 2e                	xor    BYTE PTR [rsi],ch
    c0f7:	30 2e                	xor    BYTE PTR [rsi],ch
    c0f9:	30 00                	xor    BYTE PTR [rax],al
    c0fb:	00 00                	add    BYTE PTR [rax],al
    c0fd:	00 00                	add    BYTE PTR [rax],al
    c0ff:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    c102:	4f 54                	rex.WRXB push r12
    c104:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    c108:	50                   	push   rax
    c109:	3a 20                	cmp    ah,BYTE PTR [rax]
    c10b:	50                   	push   rax
    c10c:	52                   	push   rdx
    c10d:	4f                   	rex.WRXB
    c10e:	42                   	rex.X
    c10f:	45 3a 20             	cmp    r12b,BYTE PTR [r8]
    c112:	57                   	push   rdi
    c113:	68 6f 20 68 61       	push   0x6168206f
    c118:	73 20                	jae    c13a <_IO_stdin_used+0x13a>
    c11a:	25 73 3f 0a 00       	and    eax,0xa3f73
    c11f:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    c122:	4f 54                	rex.WRXB push r12
    c124:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    c128:	50                   	push   rax
    c129:	3a 20                	cmp    ah,BYTE PTR [rax]
    c12b:	57                   	push   rdi
    c12c:	68 6f 20 69 73       	push   0x7369206f
    c131:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    c134:	20 25 73 3f 20 54    	and    BYTE PTR [rip+0x54203f73],ah        # 542100ad <_end+0x540d50a5>
    c13a:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    c13c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c13d:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # cbb6 <_IO_stdin_used+0xbb6>
    c143:	00 00                	add    BYTE PTR [rax],al
    c145:	00 00                	add    BYTE PTR [rax],al
    c147:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    c14a:	4f 54                	rex.WRXB push r12
    c14c:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    c150:	50                   	push   rax
    c151:	3a 20                	cmp    ah,BYTE PTR [rax]
    c153:	52                   	push   rdx
    c154:	45 50                	rex.RB push r8
    c156:	4c 59                	rex.WR pop rcx
    c158:	3a 20                	cmp    ah,BYTE PTR [rax]
    c15a:	25 73 20 69 73       	and    eax,0x73692073
    c15f:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    c162:	20 25 73 0a 00 55    	and    BYTE PTR [rip+0x55000a73],ah        # 5500cbdb <_end+0x54ed1bd3>
    c168:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c169:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c16d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c16e:	20 41 52             	and    BYTE PTR [rcx+0x52],al
    c171:	50                   	push   rax
    c172:	20 6f 70             	and    BYTE PTR [rdi+0x70],ch
    c175:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
    c178:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    c17b:	25 64 0a 00 1b       	and    eax,0x1b000a64
    c180:	5b                   	pop    rbx
    c181:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    c184:	4c                   	rex.WR
    c185:	4f                   	rex.WRXB
    c186:	4f 50                	rex.WRXB push r8
    c188:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de201 <_end+0x3e1a31f9>
    c18e:	20 25 73 00 20 52    	and    BYTE PTR [rip+0x52200073],ah        # 5220c207 <_end+0x520d11ff>
    c194:	45 50                	rex.RB push r8
    c196:	4c 59                	rex.WR pop rcx
    c198:	20 00                	and    BYTE PTR [rax],al
    c19a:	20 55 4e             	and    BYTE PTR [rbp+0x4e],dl
    c19d:	4b                   	rex.WXB
    c19e:	4e                   	rex.WRX
    c19f:	4f 57                	rex.WRXB push r15
    c1a1:	4e 20 4c 4f 4f       	rex.WRX and BYTE PTR [rdi+r9*2+0x4f],r9b
    c1a6:	50                   	push   rax
    c1a7:	20 46 55             	and    BYTE PTR [rsi+0x55],al
    c1aa:	4e                   	rex.WRX
    c1ab:	43 54                	rex.XB push r12
    c1ad:	49                   	rex.WB
    c1ae:	4f                   	rex.WRXB
    c1af:	4e 3a 25 64 20 0a 00 	rex.WRX cmp r12b,BYTE PTR [rip+0xa2064]        # ae21a <rules+0x9cf3a>
    c1b6:	00 00                	add    BYTE PTR [rax],al
    c1b8:	25 30 32 78 3a       	and    eax,0x3a783230
    c1bd:	25 30 32 78 3a       	and    eax,0x3a783230
    c1c2:	25 30 32 78 3a       	and    eax,0x3a783230
    c1c7:	25 30 32 78 3a       	and    eax,0x3a783230
    c1cc:	25 30 32 78 3a       	and    eax,0x3a783230
    c1d1:	25 30 32 78 00       	and    eax,0x783230
    c1d6:	25 64 2e 25 64       	and    eax,0x64252e64
    c1db:	2e 25 64 2e 25 64    	cs and eax,0x64252e64
    c1e1:	00 00                	add    BYTE PTR [rax],al
    c1e3:	00 00                	add    BYTE PTR [rax],al
    c1e5:	00 00                	add    BYTE PTR [rax],al
    c1e7:	00 25 30 32 78 25    	add    BYTE PTR [rip+0x25783230],ah        # 2578f41d <_end+0x25654415>
    c1ed:	30 32                	xor    BYTE PTR [rdx],dh
    c1ef:	78 3a                	js     c22b <_IO_stdin_used+0x22b>
    c1f1:	25 30 32 78 25       	and    eax,0x25783230
    c1f6:	30 32                	xor    BYTE PTR [rdx],dh
    c1f8:	78 3a                	js     c234 <_IO_stdin_used+0x234>
    c1fa:	25 30 32 78 25       	and    eax,0x25783230
    c1ff:	30 32                	xor    BYTE PTR [rdx],dh
    c201:	78 3a                	js     c23d <_IO_stdin_used+0x23d>
    c203:	25 30 32 78 25       	and    eax,0x25783230
    c208:	30 32                	xor    BYTE PTR [rdx],dh
    c20a:	78 3a                	js     c246 <_IO_stdin_used+0x246>
    c20c:	25 30 32 78 25       	and    eax,0x25783230
    c211:	30 32                	xor    BYTE PTR [rdx],dh
    c213:	78 3a                	js     c24f <_IO_stdin_used+0x24f>
    c215:	25 30 32 78 25       	and    eax,0x25783230
    c21a:	30 32                	xor    BYTE PTR [rdx],dh
    c21c:	78 3a                	js     c258 <_IO_stdin_used+0x258>
    c21e:	25 30 32 78 25       	and    eax,0x25783230
    c223:	30 32                	xor    BYTE PTR [rdx],dh
    c225:	78 3a                	js     c261 <_IO_stdin_used+0x261>
    c227:	25 30 32 78 25       	and    eax,0x25783230
    c22c:	30 32                	xor    BYTE PTR [rdx],dh
    c22e:	78 00                	js     c230 <_IO_stdin_used+0x230>
    c230:	25 64 2d 25 30       	and    eax,0x30252d64
    c235:	32 64 2d 25          	xor    ah,BYTE PTR [rbp+rbp*1+0x25]
    c239:	30 32                	xor    BYTE PTR [rdx],dh
    c23b:	64 20 25 30 32 64 3a 	and    BYTE PTR fs:[rip+0x3a643230],ah        # 3a64f472 <_end+0x3a51446a>
    c242:	25 30 32 64 3a       	and    eax,0x3a643230
    c247:	25 30 32 64 00       	and    eax,0x643230
    c24c:	25 73 3a 20 25       	and    eax,0x25203a73
    c251:	73 0a                	jae    c25d <_IO_stdin_used+0x25d>
    c253:	00 00                	add    BYTE PTR [rax],al
    c255:	00 00                	add    BYTE PTR [rax],al
    c257:	00 25 73 20 46 6f    	add    BYTE PTR [rip+0x6f462073],ah        # 6f46e2d0 <_end+0x6f3332c8>
    c25d:	75 6e                	jne    c2cd <_IO_stdin_used+0x2cd>
    c25f:	64 20 62 6c          	and    BYTE PTR fs:[rdx+0x6c],ah
    c263:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c264:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    c267:	64 20 69 70          	and    BYTE PTR fs:[rcx+0x70],ch
    c26b:	76 34                	jbe    c2a1 <_IO_stdin_used+0x2a1>
    c26d:	20 61 64             	and    BYTE PTR [rcx+0x64],ah
    c270:	64 72 65             	fs jb  c2d8 <_IO_stdin_used+0x2d8>
    c273:	73 73                	jae    c2e8 <_IO_stdin_used+0x2e8>
    c275:	28 64 65 73          	sub    BYTE PTR [rbp+riz*2+0x73],ah
    c279:	74 29                	je     c2a4 <_IO_stdin_used+0x2a4>
    c27b:	3a 20                	cmp    ah,BYTE PTR [rax]
    c27d:	25 73 0a 00 00       	and    eax,0xa73
    c282:	00 00                	add    BYTE PTR [rax],al
    c284:	00 00                	add    BYTE PTR [rax],al
    c286:	00 00                	add    BYTE PTR [rax],al
    c288:	25 73 20 46 6f       	and    eax,0x6f462073
    c28d:	75 6e                	jne    c2fd <_IO_stdin_used+0x2fd>
    c28f:	64 20 62 6c          	and    BYTE PTR fs:[rdx+0x6c],ah
    c293:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c294:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    c297:	64 20 69 70          	and    BYTE PTR fs:[rcx+0x70],ch
    c29b:	76 34                	jbe    c2d1 <_IO_stdin_used+0x2d1>
    c29d:	20 61 64             	and    BYTE PTR [rcx+0x64],ah
    c2a0:	64 72 65             	fs jb  c308 <_IO_stdin_used+0x308>
    c2a3:	73 73                	jae    c318 <_IO_stdin_used+0x318>
    c2a5:	28 73 72             	sub    BYTE PTR [rbx+0x72],dh
    c2a8:	63 29                	movsxd ebp,DWORD PTR [rcx]
    c2aa:	3a 20                	cmp    ah,BYTE PTR [rax]
    c2ac:	25 73 0a 00 1b       	and    eax,0x1b000a73
    c2b1:	5b                   	pop    rbx
    c2b2:	34 6d                	xor    al,0x6d
    c2b4:	00 25 73 46 72 61    	add    BYTE PTR [rip+0x61724673],ah        # 6173092d <_end+0x615f5925>
    c2ba:	67 6d                	ins    DWORD PTR es:[edi],dx
    c2bc:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c2be:	74 65                	je     c325 <_IO_stdin_used+0x325>
    c2c0:	64 20 00             	and    BYTE PTR fs:[rax],al
    c2c3:	1b 5b 30             	sbb    ebx,DWORD PTR [rbx+0x30]
    c2c6:	6d                   	ins    DWORD PTR es:[rdi],dx
    c2c7:	00 25 73 00 20 25    	add    BYTE PTR [rip+0x25200073],ah        # 2520c340 <_end+0x250d1338>
    c2cd:	73 20                	jae    c2ef <_IO_stdin_used+0x2ef>
    c2cf:	2d 3e 20 25 73       	sub    eax,0x7325203e
    c2d4:	25 73 0a 00 49       	and    eax,0x49000a73
    c2d9:	50                   	push   rax
    c2da:	76 34                	jbe    c310 <_IO_stdin_used+0x310>
    c2dc:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de355 <_end+0x3e1a334d>
    c2e2:	20 25 73 20 50 72    	and    BYTE PTR [rip+0x72502073],ah        # 7250e35b <_end+0x723d3353>
    c2e8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c2e9:	74 6f                	je     c35a <_IO_stdin_used+0x35a>
    c2eb:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    c2ee:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    c2f1:	6d                   	ins    DWORD PTR es:[rdi],dx
    c2f2:	62                   	(bad)  
    c2f3:	65 72 20             	gs jb  c316 <_IO_stdin_used+0x316>
    c2f6:	3d 20 25 64 0a       	cmp    eax,0xa642520
    c2fb:	00 00                	add    BYTE PTR [rax],al
    c2fd:	00 00                	add    BYTE PTR [rax],al
    c2ff:	00 1b                	add    BYTE PTR [rbx],bl
    c301:	5b                   	pop    rbx
    c302:	33 35 6d 00 25 73    	xor    esi,DWORD PTR [rip+0x7325006d]        # 7325c375 <_end+0x7312136d>
    c308:	00 49 50             	add    BYTE PTR [rcx+0x50],cl
    c30b:	76 36                	jbe    c343 <_IO_stdin_used+0x343>
    c30d:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de386 <_end+0x3e1a337e>
    c313:	20 25 73 0a 00 09    	and    BYTE PTR [rip+0x9000a73],ah        # 900cd8c <_end+0x8ed1d84>
    c319:	49                   	rex.WB
    c31a:	43                   	rex.XB
    c31b:	4d 50                	rex.WRB push r8
    c31d:	76 36                	jbe    c355 <_IO_stdin_used+0x355>
    c31f:	20 00                	and    BYTE PTR [rax],al
    c321:	20 52 6f             	and    BYTE PTR [rdx+0x6f],dl
    c324:	75 74                	jne    c39a <_IO_stdin_used+0x39a>
    c326:	65 72 20             	gs jb  c349 <_IO_stdin_used+0x349>
    c329:	53                   	push   rbx
    c32a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c32b:	6c                   	ins    BYTE PTR es:[rdi],dx
    c32c:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    c333:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c334:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c335:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    c338:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c339:	6d                   	ins    DWORD PTR es:[rdi],dx
    c33a:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # cdb3 <_IO_stdin_used+0xdb3>
    c340:	4d 75 6c             	rex.WRB jne c3af <_IO_stdin_used+0x3af>
    c343:	74 69                	je     c3ae <_IO_stdin_used+0x3ae>
    c345:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    c348:	74 20                	je     c36a <_IO_stdin_used+0x36a>
    c34a:	4c 69 73 74 65 6e 65 	imul   r14,QWORD PTR [rbx+0x74],0x72656e65
    c351:	72 
    c352:	20 52 65             	and    BYTE PTR [rdx+0x65],dl
    c355:	70 6f                	jo     c3c6 <_IO_stdin_used+0x3c6>
    c357:	72 74                	jb     c3cd <_IO_stdin_used+0x3cd>
    c359:	20 4d 65             	and    BYTE PTR [rbp+0x65],cl
    c35c:	73 73                	jae    c3d1 <_IO_stdin_used+0x3d1>
    c35e:	61                   	(bad)  
    c35f:	67 65 20 76 32       	and    BYTE PTR gs:[esi+0x32],dh
    c364:	00 4d 75             	add    BYTE PTR [rbp+0x75],cl
    c367:	6c                   	ins    BYTE PTR es:[rdi],dx
    c368:	74 69                	je     c3d3 <_IO_stdin_used+0x3d3>
    c36a:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    c36d:	74 20                	je     c38f <_IO_stdin_used+0x38f>
    c36f:	20 4c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],cl
    c373:	74 65                	je     c3da <_IO_stdin_used+0x3da>
    c375:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c376:	65 72 20             	gs jb  c399 <_IO_stdin_used+0x399>
    c379:	51                   	push   rcx
    c37a:	75 65                	jne    c3e1 <_IO_stdin_used+0x3e1>
    c37c:	72 79                	jb     c3f7 <_IO_stdin_used+0x3f7>
    c37e:	00 4e 65             	add    BYTE PTR [rsi+0x65],cl
    c381:	69 67 68 62 6f 72 20 	imul   esp,DWORD PTR [rdi+0x68],0x20726f62
    c388:	53                   	push   rbx
    c389:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c38a:	6c                   	ins    BYTE PTR es:[rdi],dx
    c38b:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    c392:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c393:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c394:	00 1b                	add    BYTE PTR [rbx],bl
    c396:	5b                   	pop    rbx
    c397:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    c39a:	00 00                	add    BYTE PTR [rax],al
    c39c:	00 00                	add    BYTE PTR [rax],al
    c39e:	00 00                	add    BYTE PTR [rax],al
    c3a0:	54                   	push   rsp
    c3a1:	69 6d 65 20 73 74 61 	imul   ebp,DWORD PTR [rbp+0x65],0x61747320
    c3a8:	6d                   	ins    DWORD PTR es:[rdi],dx
    c3a9:	70 20                	jo     c3cb <_IO_stdin_used+0x3cb>
    c3ab:	72 65                	jb     c412 <_IO_stdin_used+0x412>
    c3ad:	71 75                	jno    c424 <_IO_stdin_used+0x424>
    c3af:	65 73 74             	gs jae c426 <_IO_stdin_used+0x426>
    c3b2:	3a 20                	cmp    ah,BYTE PTR [rax]
    c3b4:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    c3b9:	20 25 73 28 63 6f    	and    BYTE PTR [rip+0x6f632873],ah        # 6f63ec32 <_end+0x6f503c2a>
    c3bf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c3c0:	66 69 67 20 73 70    	imul   sp,WORD PTR [rdi+0x20],0x7073
    c3c6:	65 63 69 66          	movsxd ebp,DWORD PTR gs:[rcx+0x66]
    c3ca:	69 65 73 20 73 74 72 	imul   esp,DWORD PTR [rbp+0x73],0x72747320
    c3d1:	69 63 74 20 74 69 6d 	imul   esp,DWORD PTR [rbx+0x74],0x6d697420
    c3d8:	65 73 74             	gs jae c44f <_IO_stdin_used+0x44f>
    c3db:	61                   	(bad)  
    c3dc:	6d                   	ins    DWORD PTR es:[rdi],dx
    c3dd:	70 20                	jo     c3ff <_IO_stdin_used+0x3ff>
    c3df:	61                   	(bad)  
    c3e0:	6c                   	ins    BYTE PTR es:[rdi],dx
    c3e1:	65 72 74             	gs jb  c458 <_IO_stdin_used+0x458>
    c3e4:	73 29                	jae    c40f <_IO_stdin_used+0x40f>
    c3e6:	0a 00                	or     al,BYTE PTR [rax]
    c3e8:	50                   	push   rax
    c3e9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c3ea:	73 73                	jae    c45f <_IO_stdin_used+0x45f>
    c3ec:	69 62 6c 65 20 6e 6d 	imul   esp,DWORD PTR [rdx+0x6c],0x6d6e2065
    c3f3:	61                   	(bad)  
    c3f4:	70 20                	jo     c416 <_IO_stdin_used+0x416>
    c3f6:	68 6f 73 74 20       	push   0x2074736f
    c3fb:	61                   	(bad)  
    c3fc:	6c                   	ins    BYTE PTR es:[rdi],dx
    c3fd:	69 76 65 20 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x65686320
    c404:	63 6b 20             	movsxd ebp,DWORD PTR [rbx+0x20]
    c407:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    c40c:	20 25 73 3b 20 6d    	and    BYTE PTR [rip+0x6d203b73],ah        # 6d20ff85 <_end+0x6d0d4f7d>
    c412:	61                   	(bad)  
    c413:	74 63                	je     c478 <_IO_stdin_used+0x478>
    c415:	68 65 64 20 49       	push   0x49206465
    c41a:	43                   	rex.XB
    c41b:	4d 50                	rex.WRB push r8
    c41d:	20 45 63             	and    BYTE PTR [rbp+0x63],al
    c420:	68 6f 2c 20 54       	push   0x54202c6f
    c425:	43 50                	rex.XB push r8
    c427:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    c42a:	4e 2c 20             	rex.WRX sub al,0x20
    c42d:	54                   	push   rsp
    c42e:	43 50                	rex.XB push r8
    c430:	20 41 43             	and    BYTE PTR [rcx+0x43],al
    c433:	4b 2c 20             	rex.WXB sub al,0x20
    c436:	61                   	(bad)  
    c437:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c438:	64 20 49 43          	and    BYTE PTR fs:[rcx+0x43],cl
    c43c:	4d 50                	rex.WRB push r8
    c43e:	20 54 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dl
    c442:	65 73 74             	gs jae c4b9 <_IO_stdin_used+0x4b9>
    c445:	61                   	(bad)  
    c446:	6d                   	ins    DWORD PTR es:[rdi],dx
    c447:	70 20                	jo     c469 <_IO_stdin_used+0x469>
    c449:	72 65                	jb     c4b0 <_IO_stdin_used+0x4b0>
    c44b:	71 75                	jno    c4c2 <_IO_stdin_used+0x4c2>
    c44d:	65 73 74             	gs jae c4c4 <_IO_stdin_used+0x4c4>
    c450:	0a 00                	or     al,BYTE PTR [rax]
    c452:	61                   	(bad)  
    c453:	00 00                	add    BYTE PTR [rax],al
    c455:	00 00                	add    BYTE PTR [rax],al
    c457:	00 50 6f             	add    BYTE PTR [rax+0x6f],dl
    c45a:	73 73                	jae    c4cf <_IO_stdin_used+0x4cf>
    c45c:	69 62 6c 65 20 6e 6d 	imul   esp,DWORD PTR [rdx+0x6c],0x6d6e2065
    c463:	61                   	(bad)  
    c464:	70 20                	jo     c486 <_IO_stdin_used+0x486>
    c466:	68 6f 73 74 20       	push   0x2074736f
    c46b:	61                   	(bad)  
    c46c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c46d:	69 76 65 20 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x65686320
    c474:	63 6b 20             	movsxd ebp,DWORD PTR [rbx+0x20]
    c477:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    c47c:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461e4f5 <_end+0x744e34ed>
    c482:	20 25 73 3b 20 6d    	and    BYTE PTR [rip+0x6d203b73],ah        # 6d20fffb <_end+0x6d0d4ff3>
    c488:	61                   	(bad)  
    c489:	74 63                	je     c4ee <_IO_stdin_used+0x4ee>
    c48b:	68 65 64 20 49       	push   0x49206465
    c490:	43                   	rex.XB
    c491:	4d 50                	rex.WRB push r8
    c493:	20 45 63             	and    BYTE PTR [rbp+0x63],al
    c496:	68 6f 2c 20 54       	push   0x54202c6f
    c49b:	43 50                	rex.XB push r8
    c49d:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    c4a0:	4e 2c 20             	rex.WRX sub al,0x20
    c4a3:	54                   	push   rsp
    c4a4:	43 50                	rex.XB push r8
    c4a6:	20 41 43             	and    BYTE PTR [rcx+0x43],al
    c4a9:	4b 2c 20             	rex.WXB sub al,0x20
    c4ac:	61                   	(bad)  
    c4ad:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c4ae:	64 20 49 43          	and    BYTE PTR fs:[rcx+0x43],cl
    c4b2:	4d 50                	rex.WRB push r8
    c4b4:	20 54 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dl
    c4b8:	65 73 74             	gs jae c52f <_IO_stdin_used+0x52f>
    c4bb:	61                   	(bad)  
    c4bc:	6d                   	ins    DWORD PTR es:[rdi],dx
    c4bd:	70 20                	jo     c4df <_IO_stdin_used+0x4df>
    c4bf:	72 65                	jb     c526 <_IO_stdin_used+0x526>
    c4c1:	71 75                	jno    c538 <_IO_stdin_used+0x538>
    c4c3:	65 73 74             	gs jae c53a <_IO_stdin_used+0x53a>
    c4c6:	0a 00                	or     al,BYTE PTR [rax]
    c4c8:	49 50                	rex.WB push r8
    c4ca:	76 34                	jbe    c500 <_IO_stdin_used+0x500>
    c4cc:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de545 <_end+0x3e1a353d>
    c4d2:	20 25 73 0a 00 09    	and    BYTE PTR [rip+0x9000a73],ah        # 900cf4b <_end+0x8ed1f43>
    c4d8:	49                   	rex.WB
    c4d9:	43                   	rex.XB
    c4da:	4d 50                	rex.WRB push r8
    c4dc:	20 00                	and    BYTE PTR [rax],al
    c4de:	20 65 63             	and    BYTE PTR [rbp+0x63],ah
    c4e1:	68 6f 20 72 65       	push   0x6572206f
    c4e6:	70 6c                	jo     c554 <_IO_stdin_used+0x554>
    c4e8:	79 00                	jns    c4ea <_IO_stdin_used+0x4ea>
    c4ea:	20 64 65 73          	and    BYTE PTR [rbp+riz*2+0x73],ah
    c4ee:	74 69                	je     c559 <_IO_stdin_used+0x559>
    c4f0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c4f1:	61                   	(bad)  
    c4f2:	74 69                	je     c55d <_IO_stdin_used+0x55d>
    c4f4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c4f5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c4f6:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    c4f9:	72 65                	jb     c560 <_IO_stdin_used+0x560>
    c4fb:	61                   	(bad)  
    c4fc:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c4ff:	62                   	(bad)  
    c500:	6c                   	ins    BYTE PTR es:[rdi],dx
    c501:	65 28 00             	sub    BYTE PTR gs:[rax],al
    c504:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    c507:	74 77                	je     c580 <_IO_stdin_used+0x580>
    c509:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c50a:	72 6b                	jb     c577 <_IO_stdin_used+0x577>
    c50c:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c50f:	72 65                	jb     c576 <_IO_stdin_used+0x576>
    c511:	61                   	(bad)  
    c512:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c515:	62                   	(bad)  
    c516:	6c                   	ins    BYTE PTR es:[rdi],dx
    c517:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c51a:	00 20                	add    BYTE PTR [rax],ah
    c51c:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c51e:	73 74                	jae    c594 <_IO_stdin_used+0x594>
    c520:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c523:	72 65                	jb     c58a <_IO_stdin_used+0x58a>
    c525:	61                   	(bad)  
    c526:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c529:	62                   	(bad)  
    c52a:	6c                   	ins    BYTE PTR es:[rdi],dx
    c52b:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c52e:	00 20                	add    BYTE PTR [rax],ah
    c530:	50                   	push   rax
    c531:	72 6f                	jb     c5a2 <_IO_stdin_used+0x5a2>
    c533:	74 6f                	je     c5a4 <_IO_stdin_used+0x5a4>
    c535:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    c538:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c53b:	72 65                	jb     c5a2 <_IO_stdin_used+0x5a2>
    c53d:	61                   	(bad)  
    c53e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c541:	62                   	(bad)  
    c542:	6c                   	ins    BYTE PTR es:[rdi],dx
    c543:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c546:	00 20                	add    BYTE PTR [rax],ah
    c548:	50                   	push   rax
    c549:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c54a:	72 74                	jb     c5c0 <_IO_stdin_used+0x5c0>
    c54c:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c54f:	72 65                	jb     c5b6 <_IO_stdin_used+0x5b6>
    c551:	61                   	(bad)  
    c552:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c555:	62                   	(bad)  
    c556:	6c                   	ins    BYTE PTR es:[rdi],dx
    c557:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c55a:	00 20                	add    BYTE PTR [rax],ah
    c55c:	46 72 61             	rex.RX jb c5c0 <_IO_stdin_used+0x5c0>
    c55f:	67 6d                	ins    DWORD PTR es:[edi],dx
    c561:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c563:	74 61                	je     c5c6 <_IO_stdin_used+0x5c6>
    c565:	74 69                	je     c5d0 <_IO_stdin_used+0x5d0>
    c567:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c568:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c569:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    c56c:	65 64 65 64 20 29    	gs fs gs and BYTE PTR fs:[rcx],ch
    c572:	00 20                	add    BYTE PTR [rax],ah
    c574:	53                   	push   rbx
    c575:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c576:	75 72                	jne    c5ea <_IO_stdin_used+0x5ea>
    c578:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c57b:	52                   	push   rdx
    c57c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c57d:	75 74                	jne    c5f3 <_IO_stdin_used+0x5f3>
    c57f:	65 20 46 61          	and    BYTE PTR gs:[rsi+0x61],al
    c583:	69 6c 65 64 20 29 00 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x2920
    c58a:	00 
    c58b:	00 00                	add    BYTE PTR [rax],al
    c58d:	00 00                	add    BYTE PTR [rax],al
    c58f:	00 20                	add    BYTE PTR [rax],ah
    c591:	44                   	rex.R
    c592:	65 73 74             	gs jae c609 <_IO_stdin_used+0x609>
    c595:	69 6e 61 74 69 6f 6e 	imul   ebp,DWORD PTR [rsi+0x61],0x6e6f6974
    c59c:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    c59f:	74 77                	je     c618 <_IO_stdin_used+0x618>
    c5a1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5a2:	72 6b                	jb     c60f <_IO_stdin_used+0x60f>
    c5a4:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c5a7:	72 65                	jb     c60e <_IO_stdin_used+0x60e>
    c5a9:	61                   	(bad)  
    c5aa:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c5ad:	62                   	(bad)  
    c5ae:	6c                   	ins    BYTE PTR es:[rdi],dx
    c5af:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c5b2:	00 00                	add    BYTE PTR [rax],al
    c5b4:	00 00                	add    BYTE PTR [rax],al
    c5b6:	00 00                	add    BYTE PTR [rax],al
    c5b8:	20 44 65 73          	and    BYTE PTR [rbp+riz*2+0x73],al
    c5bc:	74 69                	je     c627 <_IO_stdin_used+0x627>
    c5be:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c5bf:	61                   	(bad)  
    c5c0:	74 69                	je     c62b <_IO_stdin_used+0x62b>
    c5c2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5c3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c5c4:	20 48 6f             	and    BYTE PTR [rax+0x6f],cl
    c5c7:	73 74                	jae    c63d <_IO_stdin_used+0x63d>
    c5c9:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c5cc:	72 65                	jb     c633 <_IO_stdin_used+0x633>
    c5ce:	61                   	(bad)  
    c5cf:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c5d2:	62                   	(bad)  
    c5d3:	6c                   	ins    BYTE PTR es:[rdi],dx
    c5d4:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c5d7:	00 20                	add    BYTE PTR [rax],ah
    c5d9:	53                   	push   rbx
    c5da:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5db:	75 72                	jne    c64f <_IO_stdin_used+0x64f>
    c5dd:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c5e0:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c5e2:	73 74                	jae    c658 <_IO_stdin_used+0x658>
    c5e4:	20 49 73             	and    BYTE PTR [rcx+0x73],cl
    c5e7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5e8:	6c                   	ins    BYTE PTR es:[rdi],dx
    c5e9:	61                   	(bad)  
    c5ea:	74 65                	je     c651 <_IO_stdin_used+0x651>
    c5ec:	64 20 29             	and    BYTE PTR fs:[rcx],ch
    c5ef:	00 20                	add    BYTE PTR [rax],ah
    c5f1:	4e                   	rex.WRX
    c5f2:	65 74 77             	gs je  c66c <_IO_stdin_used+0x66c>
    c5f5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5f6:	72 6b                	jb     c663 <_IO_stdin_used+0x663>
    c5f8:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    c5fb:	6d                   	ins    DWORD PTR es:[rdi],dx
    c5fc:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    c603:	74 69                	je     c66e <_IO_stdin_used+0x66e>
    c605:	76 65                	jbe    c66c <_IO_stdin_used+0x66c>
    c607:	6c                   	ins    BYTE PTR es:[rdi],dx
    c608:	79 20                	jns    c62a <_IO_stdin_used+0x62a>
    c60a:	50                   	push   rax
    c60b:	72 6f                	jb     c67c <_IO_stdin_used+0x67c>
    c60d:	68 69 62 69 74       	push   0x74696269
    c612:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    c616:	00 00                	add    BYTE PTR [rax],al
    c618:	20 48 6f             	and    BYTE PTR [rax+0x6f],cl
    c61b:	73 74                	jae    c691 <_IO_stdin_used+0x691>
    c61d:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    c620:	6d                   	ins    DWORD PTR es:[rdi],dx
    c621:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    c628:	74 69                	je     c693 <_IO_stdin_used+0x693>
    c62a:	76 65                	jbe    c691 <_IO_stdin_used+0x691>
    c62c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c62d:	79 20                	jns    c64f <_IO_stdin_used+0x64f>
    c62f:	50                   	push   rax
    c630:	72 6f                	jb     c6a1 <_IO_stdin_used+0x6a1>
    c632:	68 69 62 69 74       	push   0x74696269
    c637:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    c63b:	00 00                	add    BYTE PTR [rax],al
    c63d:	00 00                	add    BYTE PTR [rax],al
    c63f:	00 20                	add    BYTE PTR [rax],ah
    c641:	4e                   	rex.WRX
    c642:	65 74 77             	gs je  c6bc <_IO_stdin_used+0x6bc>
    c645:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c646:	72 6b                	jb     c6b3 <_IO_stdin_used+0x6b3>
    c648:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c64b:	72 65                	jb     c6b2 <_IO_stdin_used+0x6b2>
    c64d:	61                   	(bad)  
    c64e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c651:	62                   	(bad)  
    c652:	6c                   	ins    BYTE PTR es:[rdi],dx
    c653:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    c657:	72 20                	jb     c679 <_IO_stdin_used+0x679>
    c659:	54                   	push   rsp
    c65a:	4f 53                	rex.WRXB push r11
    c65c:	20 29                	and    BYTE PTR [rcx],ch
    c65e:	00 20                	add    BYTE PTR [rax],ah
    c660:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c662:	73 74                	jae    c6d8 <_IO_stdin_used+0x6d8>
    c664:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c667:	72 65                	jb     c6ce <_IO_stdin_used+0x6ce>
    c669:	61                   	(bad)  
    c66a:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c66d:	62                   	(bad)  
    c66e:	6c                   	ins    BYTE PTR es:[rdi],dx
    c66f:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    c673:	72 20                	jb     c695 <_IO_stdin_used+0x695>
    c675:	54                   	push   rsp
    c676:	4f 53                	rex.WRXB push r11
    c678:	20 29                	and    BYTE PTR [rcx],ch
    c67a:	00 00                	add    BYTE PTR [rax],al
    c67c:	00 00                	add    BYTE PTR [rax],al
    c67e:	00 00                	add    BYTE PTR [rax],al
    c680:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c683:	6d                   	ins    DWORD PTR es:[rdi],dx
    c684:	6d                   	ins    DWORD PTR es:[rdi],dx
    c685:	75 6e                	jne    c6f5 <_IO_stdin_used+0x6f5>
    c687:	69 63 61 74 69 6f 6e 	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
    c68e:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    c691:	6d                   	ins    DWORD PTR es:[rdi],dx
    c692:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    c699:	74 69                	je     c704 <_IO_stdin_used+0x704>
    c69b:	76 65                	jbe    c702 <_IO_stdin_used+0x702>
    c69d:	6c                   	ins    BYTE PTR es:[rdi],dx
    c69e:	79 20                	jns    c6c0 <_IO_stdin_used+0x6c0>
    c6a0:	50                   	push   rax
    c6a1:	72 6f                	jb     c712 <_IO_stdin_used+0x712>
    c6a3:	68 69 62 69 74       	push   0x74696269
    c6a8:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    c6ac:	00 20                	add    BYTE PTR [rax],ah
    c6ae:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c6b0:	73 74                	jae    c726 <_IO_stdin_used+0x726>
    c6b2:	20 50 72             	and    BYTE PTR [rax+0x72],dl
    c6b5:	65 63 65 64          	movsxd esp,DWORD PTR gs:[rbp+0x64]
    c6b9:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c6bb:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c6be:	56                   	push   rsi
    c6bf:	69 6f 6c 61 74 69 6f 	imul   ebp,DWORD PTR [rdi+0x6c],0x6f697461
    c6c6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c6c7:	20 29                	and    BYTE PTR [rcx],ch
    c6c9:	00 00                	add    BYTE PTR [rax],al
    c6cb:	00 00                	add    BYTE PTR [rax],al
    c6cd:	00 00                	add    BYTE PTR [rax],al
    c6cf:	00 20                	add    BYTE PTR [rax],ah
    c6d1:	50                   	push   rax
    c6d2:	72 65                	jb     c739 <_IO_stdin_used+0x739>
    c6d4:	63 65 64             	movsxd esp,DWORD PTR [rbp+0x64]
    c6d7:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c6d9:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c6dc:	43 75 74             	rex.XB jne c753 <_IO_stdin_used+0x753>
    c6df:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c6e0:	66 66 20 69 6e       	data16 data16 and BYTE PTR [rcx+0x6e],ch
    c6e5:	20 45 66             	and    BYTE PTR [rbp+0x66],al
    c6e8:	66 65 63 74 20 29    	movsxd si,DWORD PTR gs:[rax+riz*1+0x29]
    c6ee:	00 20                	add    BYTE PTR [rax],ah
    c6f0:	55                   	push   rbp
    c6f1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c6f2:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c6f6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c6f7:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c6fa:	64 65 3d 25 64 20 29 	fs gs cmp eax,0x29206425
    c701:	0a 00                	or     al,BYTE PTR [rax]
    c703:	00 00                	add    BYTE PTR [rax],al
    c705:	00 00                	add    BYTE PTR [rax],al
    c707:	00 20                	add    BYTE PTR [rax],ah
    c709:	53                   	push   rbx
    c70a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c70b:	75 72                	jne    c77f <_IO_stdin_used+0x77f>
    c70d:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c710:	51                   	push   rcx
    c711:	75 65                	jne    c778 <_IO_stdin_used+0x778>
    c713:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c714:	63 68 28             	movsxd ebp,DWORD PTR [rax+0x28]
    c717:	20 66 6c             	and    BYTE PTR [rsi+0x6c],ah
    c71a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c71b:	77 20                	ja     c73d <_IO_stdin_used+0x73d>
    c71d:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    c720:	74 72                	je     c794 <_IO_stdin_used+0x794>
    c722:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c723:	6c                   	ins    BYTE PTR es:[rdi],dx
    c724:	20 29                	and    BYTE PTR [rcx],ch
    c726:	00 20                	add    BYTE PTR [rax],ah
    c728:	52                   	push   rdx
    c729:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x28207463
    c730:	20 28 
    c732:	00 20                	add    BYTE PTR [rax],ah
    c734:	52                   	push   rdx
    c735:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c73c:	20 66 
    c73e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c73f:	72 20                	jb     c761 <_IO_stdin_used+0x761>
    c741:	4e                   	rex.WRX
    c742:	65 74 77             	gs je  c7bc <_IO_stdin_used+0x7bc>
    c745:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c746:	72 6b                	jb     c7b3 <_IO_stdin_used+0x7b3>
    c748:	20 29                	and    BYTE PTR [rcx],ch
    c74a:	00 20                	add    BYTE PTR [rax],ah
    c74c:	52                   	push   rdx
    c74d:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c754:	20 66 
    c756:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c757:	72 20                	jb     c779 <_IO_stdin_used+0x779>
    c759:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c75b:	73 74                	jae    c7d1 <_IO_stdin_used+0x7d1>
    c75d:	20 29                	and    BYTE PTR [rcx],ch
    c75f:	00 20                	add    BYTE PTR [rax],ah
    c761:	52                   	push   rdx
    c762:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c769:	20 66 
    c76b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c76c:	72 20                	jb     c78e <_IO_stdin_used+0x78e>
    c76e:	54                   	push   rsp
    c76f:	4f 53                	rex.WRXB push r11
    c771:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    c774:	64 20 4e 65          	and    BYTE PTR fs:[rsi+0x65],cl
    c778:	74 77                	je     c7f1 <_IO_stdin_used+0x7f1>
    c77a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c77b:	72 6b                	jb     c7e8 <_IO_stdin_used+0x7e8>
    c77d:	20 29                	and    BYTE PTR [rcx],ch
    c77f:	00 20                	add    BYTE PTR [rax],ah
    c781:	52                   	push   rdx
    c782:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c789:	20 66 
    c78b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c78c:	72 20                	jb     c7ae <_IO_stdin_used+0x7ae>
    c78e:	54                   	push   rsp
    c78f:	4f 53                	rex.WRXB push r11
    c791:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    c794:	64 20 48 6f          	and    BYTE PTR fs:[rax+0x6f],cl
    c798:	73 74                	jae    c80e <_IO_stdin_used+0x80e>
    c79a:	20 29                	and    BYTE PTR [rcx],ch
    c79c:	00 20                	add    BYTE PTR [rax],ah
    c79e:	65 63 68 6f          	movsxd ebp,DWORD PTR gs:[rax+0x6f]
    c7a2:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    c7a5:	71 75                	jno    c81c <_IO_stdin_used+0x81c>
    c7a7:	65 73 74             	gs jae c81e <_IO_stdin_used+0x81e>
    c7aa:	00 00                	add    BYTE PTR [rax],al
    c7ac:	00 00                	add    BYTE PTR [rax],al
    c7ae:	00 00                	add    BYTE PTR [rax],al
    c7b0:	20 4d 6f             	and    BYTE PTR [rbp+0x6f],cl
    c7b3:	62                   	(bad)  
    c7b4:	69 6c 65 20 49 50 20 	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x41205049
    c7bb:	41 
    c7bc:	64 76 65             	fs jbe c824 <_IO_stdin_used+0x824>
    c7bf:	72 74                	jb     c835 <_IO_stdin_used+0x835>
    c7c1:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    c7c8:	20 28                	and    BYTE PTR [rax],ch
    c7ca:	4e 6f                	rex.WRX outs dx,DWORD PTR ds:[rsi]
    c7cc:	72 6d                	jb     c83b <_IO_stdin_used+0x83b>
    c7ce:	61                   	(bad)  
    c7cf:	6c                   	ins    BYTE PTR es:[rdi],dx
    c7d0:	20 52 6f             	and    BYTE PTR [rdx+0x6f],dl
    c7d3:	75 74                	jne    c849 <_IO_stdin_used+0x849>
    c7d5:	65 72 20             	gs jb  c7f8 <_IO_stdin_used+0x7f8>
    c7d8:	41                   	rex.B
    c7d9:	64 76 65             	fs jbe c841 <_IO_stdin_used+0x841>
    c7dc:	72 74                	jb     c852 <_IO_stdin_used+0x852>
    c7de:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    c7e5:	20 29                	and    BYTE PTR [rcx],ch
    c7e7:	20 29                	and    BYTE PTR [rcx],ch
    c7e9:	0a 20                	or     ah,BYTE PTR [rax]
    c7eb:	00 00                	add    BYTE PTR [rax],al
    c7ed:	00 00                	add    BYTE PTR [rax],al
    c7ef:	00 20                	add    BYTE PTR [rax],ah
    c7f1:	52                   	push   rdx
    c7f2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c7f3:	75 74                	jne    c869 <_IO_stdin_used+0x869>
    c7f5:	65 72 20             	gs jb  c818 <_IO_stdin_used+0x818>
    c7f8:	41                   	rex.B
    c7f9:	64 76 65             	fs jbe c861 <_IO_stdin_used+0x861>
    c7fc:	72 74                	jb     c872 <_IO_stdin_used+0x872>
    c7fe:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    c805:	20 28                	and    BYTE PTR [rax],ch
    c807:	55                   	push   rbp
    c808:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c809:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c80d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c80e:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c811:	64 65 3a 20          	fs cmp ah,BYTE PTR gs:[rax]
    c815:	25 64 20 29 20       	and    eax,0x20292064
    c81a:	29 0a                	sub    DWORD PTR [rdx],ecx
    c81c:	00 20                	add    BYTE PTR [rax],ah
    c81e:	52                   	push   rdx
    c81f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c820:	75 74                	jne    c896 <_IO_stdin_used+0x896>
    c822:	65 72 20             	gs jb  c845 <_IO_stdin_used+0x845>
    c825:	53                   	push   rbx
    c826:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c827:	6c                   	ins    BYTE PTR es:[rdi],dx
    c828:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    c82f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c830:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c831:	20 29                	and    BYTE PTR [rcx],ch
    c833:	00 20                	add    BYTE PTR [rax],ah
    c835:	54                   	push   rsp
    c836:	69 6d 65 20 54 6f 20 	imul   ebp,DWORD PTR [rbp+0x65],0x206f5420
    c83d:	4c 69 76 65 20 65 78 	imul   r14,QWORD PTR [rsi+0x65],0x63786520
    c844:	63 
    c845:	65 65 64 65 64 00 20 	gs gs fs gs add BYTE PTR fs:[rax],ah
    c84c:	28 20                	sub    BYTE PTR [rax],ah
    c84e:	74 74                	je     c8c4 <_IO_stdin_used+0x8c4>
    c850:	6c                   	ins    BYTE PTR es:[rdi],dx
    c851:	20 65 78             	and    BYTE PTR [rbp+0x78],ah
    c854:	63 65 65             	movsxd esp,DWORD PTR [rbp+0x65]
    c857:	64 65 64 20 69 6e    	fs gs and BYTE PTR fs:[rcx+0x6e],ch
    c85d:	20 74 72 61          	and    BYTE PTR [rdx+rsi*2+0x61],dh
    c861:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c862:	73 69                	jae    c8cd <_IO_stdin_used+0x8cd>
    c864:	74 20                	je     c886 <_IO_stdin_used+0x886>
    c866:	29 00                	sub    DWORD PTR [rax],eax
    c868:	20 28                	and    BYTE PTR [rax],ch
    c86a:	20 46 72             	and    BYTE PTR [rsi+0x72],al
    c86d:	61                   	(bad)  
    c86e:	67 6d                	ins    DWORD PTR es:[edi],dx
    c870:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c872:	74 20                	je     c894 <_IO_stdin_used+0x894>
    c874:	52                   	push   rdx
    c875:	65 61                	gs (bad) 
    c877:	73 73                	jae    c8ec <_IO_stdin_used+0x8ec>
    c879:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    c87b:	62                   	(bad)  
    c87c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c87d:	79 20                	jns    c89f <_IO_stdin_used+0x89f>
    c87f:	74 69                	je     c8ea <_IO_stdin_used+0x8ea>
    c881:	6d                   	ins    DWORD PTR es:[rdi],dx
    c882:	65 20 65 78          	and    BYTE PTR gs:[rbp+0x78],ah
    c886:	63 65 65             	movsxd esp,DWORD PTR [rbp+0x65]
    c889:	64 65 64 20 29       	fs gs and BYTE PTR fs:[rcx],ch
    c88e:	00 20                	add    BYTE PTR [rax],ah
    c890:	28 20                	sub    BYTE PTR [rax],ah
    c892:	55                   	push   rbp
    c893:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c894:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c898:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c899:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c89c:	64 65 3a 20          	fs cmp ah,BYTE PTR gs:[rax]
    c8a0:	25 64 29 0a 00       	and    eax,0xa2964
    c8a5:	20 74 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dh
    c8a9:	65 73 74             	gs jae c920 <_IO_stdin_used+0x920>
    c8ac:	61                   	(bad)  
    c8ad:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8ae:	70 20                	jo     c8d0 <_IO_stdin_used+0x8d0>
    c8b0:	72 65                	jb     c917 <_IO_stdin_used+0x917>
    c8b2:	71 75                	jno    c929 <_IO_stdin_used+0x929>
    c8b4:	65 73 74             	gs jae c92b <_IO_stdin_used+0x92b>
    c8b7:	00 20                	add    BYTE PTR [rax],ah
    c8b9:	74 69                	je     c924 <_IO_stdin_used+0x924>
    c8bb:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8bc:	65 73 74             	gs jae c933 <_IO_stdin_used+0x933>
    c8bf:	61                   	(bad)  
    c8c0:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8c1:	70 20                	jo     c8e3 <_IO_stdin_used+0x8e3>
    c8c3:	72 65                	jb     c92a <_IO_stdin_used+0x92a>
    c8c5:	70 6c                	jo     c933 <_IO_stdin_used+0x933>
    c8c7:	79 00                	jns    c8c9 <_IO_stdin_used+0x8c9>
    c8c9:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    c8cc:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c8d0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c8d1:	20 69 63             	and    BYTE PTR [rcx+0x63],ch
    c8d4:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8d5:	70 20                	jo     c8f7 <_IO_stdin_used+0x8f7>
    c8d7:	74 79                	je     c952 <_IO_stdin_used+0x952>
    c8d9:	70 65                	jo     c940 <_IO_stdin_used+0x940>
    c8db:	3d 25 64 00 00       	cmp    eax,0x6425
    c8e0:	1c 77                	sbb    al,0x77
    c8e2:	ff                   	(bad)  
    c8e3:	ff                   	(bad)  
    c8e4:	3f                   	(bad)  
    c8e5:	7a ff                	jp     c8e6 <_IO_stdin_used+0x8e6>
    c8e7:	ff                   	(bad)  
    c8e8:	3f                   	(bad)  
    c8e9:	7a ff                	jp     c8ea <_IO_stdin_used+0x8ea>
    c8eb:	ff 2d 77 ff ff 9a    	jmp    FWORD PTR [rip+0xffffffff9affff77]        # ffffffff9b00c868 <_end+0xffffffff9aed1860>
    c8f1:	78 ff                	js     c8f2 <_IO_stdin_used+0x8f2>
    c8f3:	ff ab 78 ff ff 3f    	jmp    FWORD PTR [rbx+0x3fffff78]
    c8f9:	7a ff                	jp     c8fa <_IO_stdin_used+0x8fa>
    c8fb:	ff                   	(bad)  
    c8fc:	3f                   	(bad)  
    c8fd:	7a ff                	jp     c8fe <_IO_stdin_used+0x8fe>
    c8ff:	ff 48 79             	dec    DWORD PTR [rax+0x79]
    c902:	ff                   	(bad)  
    c903:	ff 59 79             	call   FWORD PTR [rcx+0x79]
    c906:	ff                   	(bad)  
    c907:	ff a4 79 ff ff b5 79 	jmp    QWORD PTR [rcx+rdi*2+0x79b5ffff]
    c90e:	ff                   	(bad)  
    c90f:	ff                   	(bad)  
    c910:	3f                   	(bad)  
    c911:	7a ff                	jp     c912 <_IO_stdin_used+0x912>
    c913:	ff 23                	jmp    QWORD PTR [rbx]
    c915:	7a ff                	jp     c916 <_IO_stdin_used+0x916>
    c917:	ff 31                	push   QWORD PTR [rcx]
    c919:	7a ff                	jp     c91a <_IO_stdin_used+0x91a>
    c91b:	ff                   	(bad)  
    c91c:	3c 77                	cmp    al,0x77
    c91e:	ff                   	(bad)  
    c91f:	ff 4d 77             	dec    DWORD PTR [rbp+0x77]
    c922:	ff                   	(bad)  
    c923:	ff 5e 77             	call   FWORD PTR [rsi+0x77]
    c926:	ff                   	(bad)  
    c927:	ff 6f 77             	jmp    FWORD PTR [rdi+0x77]
    c92a:	ff                   	(bad)  
    c92b:	ff 80 77 ff ff 91    	inc    DWORD PTR [rax-0x6e000089]
    c931:	77 ff                	ja     c932 <_IO_stdin_used+0x932>
    c933:	ff a2 77 ff ff b3    	jmp    QWORD PTR [rdx-0x4c000089]
    c939:	77 ff                	ja     c93a <_IO_stdin_used+0x93a>
    c93b:	ff c4                	inc    esp
    c93d:	77 ff                	ja     c93e <_IO_stdin_used+0x93e>
    c93f:	ff d5                	call   rbp
    c941:	77 ff                	ja     c942 <_IO_stdin_used+0x942>
    c943:	ff e3                	jmp    rbx
    c945:	77 ff                	ja     c946 <_IO_stdin_used+0x946>
    c947:	ff f1                	push   rcx
    c949:	77 ff                	ja     c94a <_IO_stdin_used+0x94a>
    c94b:	ff                   	(bad)  
    c94c:	ff 77 ff             	push   QWORD PTR [rdi-0x1]
    c94f:	ff 0d 78 ff ff 1b    	dec    DWORD PTR [rip+0x1bffff78]        # 1c00c8cd <_end+0x1bed18c5>
    c955:	78 ff                	js     c956 <_IO_stdin_used+0x956>
    c957:	ff 29                	jmp    FWORD PTR [rcx]
    c959:	78 ff                	js     c95a <_IO_stdin_used+0x95a>
    c95b:	ff 00                	inc    DWORD PTR [rax]
    c95d:	00 00                	add    BYTE PTR [rax],al
    c95f:	00 1b                	add    BYTE PTR [rbx],bl
    c961:	5b                   	pop    rbx
    c962:	33 32                	xor    esi,DWORD PTR [rdx]
    c964:	6d                   	ins    DWORD PTR es:[rdi],dx
    c965:	00 25 73 00 49 50    	add    BYTE PTR [rip+0x50490073],ah        # 5049c9de <_end+0x503619d6>
    c96b:	76 34                	jbe    c9a1 <_IO_stdin_used+0x9a1>
    c96d:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642603e6 <_end+0x641253de>
    c973:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325e9b7 <_end+0x731239af>
    c979:	3a 25 64 0a 00 09    	cmp    ah,BYTE PTR [rip+0x9000a64]        # 900d3e3 <_end+0x8ed23db>
    c97f:	54                   	push   rsp
    c980:	43 50                	rex.XB push r8
    c982:	20 5b 00             	and    BYTE PTR [rbx+0x0],bl
    c985:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c988:	33 6d 00             	xor    ebp,DWORD PTR [rbp+0x0]
    c98b:	25 73 20 41 43       	and    eax,0x43412073
    c990:	4b 20 00             	rex.WXB and BYTE PTR [r8],al
    c993:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c996:	37                   	(bad)  
    c997:	6d                   	ins    DWORD PTR es:[rdi],dx
    c998:	00 25 73 20 46 49    	add    BYTE PTR [rip+0x49462073],ah        # 4946ea11 <_end+0x49333a09>
    c99e:	4e 20 00             	rex.WRX and BYTE PTR [rax],r8b
    c9a1:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9a4:	34 6d                	xor    al,0x6d
    c9a6:	00 25 73 20 50 53    	add    BYTE PTR [rip+0x53502073],ah        # 5350ea1f <_end+0x533d3a17>
    c9ac:	48 20 00             	rex.W and BYTE PTR [rax],al
    c9af:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9b2:	31 6d 00             	xor    DWORD PTR [rbp+0x0],ebp
    c9b5:	25 73 20 52 53       	and    eax,0x53522073
    c9ba:	54                   	push   rsp
    c9bb:	20 00                	and    BYTE PTR [rax],al
    c9bd:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9c0:	35 6d 00 25 73       	xor    eax,0x7325006d
    c9c5:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    c9c8:	4e 20 00             	rex.WRX and BYTE PTR [rax],r8b
    c9cb:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9ce:	36 6d                	ss ins DWORD PTR es:[rdi],dx
    c9d0:	00 25 73 20 55 52    	add    BYTE PTR [rip+0x52552073],ah        # 5255ea49 <_end+0x52423a41>
    c9d6:	47 20 00             	rex.RXB and BYTE PTR [r8],r8b
    c9d9:	5d                   	pop    rbp
    c9da:	00 1b                	add    BYTE PTR [rbx],bl
    c9dc:	5b                   	pop    rbx
    c9dd:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    c9e0:	25 73 53 75 73       	and    eax,0x73755373
    c9e5:	70 69                	jo     ca50 <_IO_stdin_used+0xa50>
    c9e7:	63 69 6f             	movsxd ebp,DWORD PTR [rcx+0x6f]
    c9ea:	75 73                	jne    ca5f <_IO_stdin_used+0xa5f>
    c9ec:	20 54 43 50          	and    BYTE PTR [rbx+rax*2+0x50],dl
    c9f0:	20 50 61             	and    BYTE PTR [rax+0x61],dl
    c9f3:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    c9f6:	74 20                	je     ca18 <_IO_stdin_used+0xa18>
    c9f8:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c9fa:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    c9fd:	74 65                	je     ca64 <_IO_stdin_used+0xa64>
    c9ff:	72 65                	jb     ca66 <_IO_stdin_used+0xa66>
    ca01:	64 3a 20             	cmp    ah,BYTE PTR fs:[rax]
    ca04:	25 73 3a 25 64       	and    eax,0x64253a73
    ca09:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325ea4d <_end+0x73123a45>
    ca0f:	3a 25 64 2c 20 25    	cmp    ah,BYTE PTR [rip+0x25202c64]        # 2520f679 <_end+0x250d4671>
    ca15:	64 20 66 6c          	and    BYTE PTR fs:[rsi+0x6c],ah
    ca19:	61                   	(bad)  
    ca1a:	67 73 25             	addr32 jae ca42 <_IO_stdin_used+0xa42>
    ca1d:	73 0a                	jae    ca29 <_IO_stdin_used+0xa29>
    ca1f:	00 1b                	add    BYTE PTR [rbx],bl
    ca21:	5b                   	pop    rbx
    ca22:	39 36                	cmp    DWORD PTR [rsi],esi
    ca24:	6d                   	ins    DWORD PTR es:[rdi],dx
    ca25:	00 25 73 00 49 50    	add    BYTE PTR [rip+0x50490073],ah        # 5049ca9e <_end+0x50361a96>
    ca2b:	76 34                	jbe    ca61 <_IO_stdin_used+0xa61>
    ca2d:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642604a6 <_end+0x6412549e>
    ca33:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325ea77 <_end+0x73123a6f>
    ca39:	3a 25 64 20 55 44    	cmp    ah,BYTE PTR [rip+0x44552064]        # 4455eaa3 <_end+0x44423a9b>
    ca3f:	50                   	push   rax
    ca40:	0a 00                	or     al,BYTE PTR [rax]
    ca42:	1b 5b 30             	sbb    ebx,DWORD PTR [rbx+0x30]
    ca45:	6d                   	ins    DWORD PTR es:[rdi],dx
    ca46:	00 00                	add    BYTE PTR [rax],al
    ca48:	49 50                	rex.WB push r8
    ca4a:	76 34                	jbe    ca80 <_IO_stdin_used+0xa80>
    ca4c:	20 49 47             	and    BYTE PTR [rcx+0x47],cl
    ca4f:	4d 50                	rex.WRB push r8
    ca51:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2deaca <_end+0x3e1a3ac2>
    ca57:	20 25 73 20 5b 00    	and    BYTE PTR [rip+0x5b2073],ah        # 5bead0 <_end+0x483ac8>
    ca5d:	20 4d 65             	and    BYTE PTR [rbp+0x65],cl
    ca60:	6d                   	ins    DWORD PTR es:[rdi],dx
    ca61:	62                   	(bad)  
    ca62:	65 72 73             	gs jb  cad8 <_IO_stdin_used+0xad8>
    ca65:	68 69 70 20 51       	push   0x51207069
    ca6a:	75 65                	jne    cad1 <_IO_stdin_used+0xad1>
    ca6c:	72 79                	jb     cae7 <_IO_stdin_used+0xae7>
    ca6e:	20 5d 00             	and    BYTE PTR [rbp+0x0],bl
    ca71:	00 00                	add    BYTE PTR [rax],al
    ca73:	00 00                	add    BYTE PTR [rax],al
    ca75:	00 00                	add    BYTE PTR [rax],al
    ca77:	00 20                	add    BYTE PTR [rax],ah
    ca79:	4d                   	rex.WRB
    ca7a:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    ca7c:	62                   	(bad)  
    ca7d:	65 72 73             	gs jb  caf3 <_IO_stdin_used+0xaf3>
    ca80:	68 69 70 20 52       	push   0x52207069
    ca85:	65 70 6f             	gs jo  caf7 <_IO_stdin_used+0xaf7>
    ca88:	72 74                	jb     cafe <_IO_stdin_used+0xafe>
    ca8a:	20 2f                	and    BYTE PTR [rdi],ch
    ca8c:	20 4a 6f             	and    BYTE PTR [rdx+0x6f],cl
    ca8f:	69 6e 20 67 72 6f 75 	imul   ebp,DWORD PTR [rsi+0x20],0x756f7267
    ca96:	70 20                	jo     cab8 <_IO_stdin_used+0xab8>
    ca98:	25 73 20 66 6f       	and    eax,0x6f662073
    ca9d:	72 20                	jb     cabf <_IO_stdin_used+0xabf>
    ca9f:	61                   	(bad)  
    caa0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    caa1:	79 20                	jns    cac3 <_IO_stdin_used+0xac3>
    caa3:	73 6f                	jae    cb14 <_IO_stdin_used+0xb14>
    caa5:	75 72                	jne    cb19 <_IO_stdin_used+0xb19>
    caa7:	63 65 73             	movsxd esp,DWORD PTR [rbp+0x73]
    caaa:	20 5d 0a             	and    BYTE PTR [rbp+0xa],bl
    caad:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    cab0:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    cab4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cab5:	20 49 47             	and    BYTE PTR [rcx+0x47],cl
    cab8:	4d 50                	rex.WRB push r8
    caba:	20 54 79 70          	and    BYTE PTR [rcx+rdi*2+0x70],dl
    cabe:	65 3d 25 64 20 5d    	gs cmp eax,0x5d206425
    cac4:	0a 00                	or     al,BYTE PTR [rax]
    cac6:	25 64 2d 25 30       	and    eax,0x30252d64
    cacb:	32 64 2d 25          	xor    ah,BYTE PTR [rbp+rbp*1+0x25]
    cacf:	30 32                	xor    BYTE PTR [rdx],dh
    cad1:	64 20 25 30 32 64 3a 	and    BYTE PTR fs:[rip+0x3a643230],ah        # 3a64fd08 <_end+0x3a514d00>
    cad8:	25 30 32 64 3a       	and    eax,0x3a643230
    cadd:	25 30 32 64 00       	and    eax,0x643230
    cae2:	25 73 20 25 73       	and    eax,0x73252073
    cae7:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2deb60 <_end+0x3e1a3b58>
    caed:	20 25 73 0a 00 25    	and    BYTE PTR [rip+0x25000a73],ah        # 2500d566 <_end+0x24ed255e>
    caf3:	73 20                	jae    cb15 <_IO_stdin_used+0xb15>
    caf5:	25 73 20 25 73       	and    eax,0x73252073
    cafa:	3a 25 64 20 2d 3e    	cmp    ah,BYTE PTR [rip+0x3e2d2064]        # 3e2deb64 <_end+0x3e1a3b5c>
    cb00:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64260579 <_end+0x64125571>
    cb06:	0a 00                	or     al,BYTE PTR [rax]
    cb08:	25 73 00 61 00       	and    eax,0x610073
    cb0d:	25 30 32 78 00       	and    eax,0x783230
    cb12:	00 00                	add    BYTE PTR [rax],al
    cb14:	00 00                	add    BYTE PTR [rax],al
    cb16:	00 00                	add    BYTE PTR [rax],al
    cb18:	72 00                	jb     cb1a <_IO_stdin_used+0xb1a>
    cb1a:	00 00                	add    BYTE PTR [rax],al
    cb1c:	00 00                	add    BYTE PTR [rax],al
    cb1e:	00 00                	add    BYTE PTR [rax],al
    cb20:	45 72 72             	rex.RB jb cb95 <_IO_stdin_used+0xb95>
    cb23:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb24:	72 20                	jb     cb46 <_IO_stdin_used+0xb46>
    cb26:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb27:	70 65                	jo     cb8e <_IO_stdin_used+0xb8e>
    cb29:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cb2a:	69 6e 67 20 63 6f 6e 	imul   ebp,DWORD PTR [rsi+0x67],0x6e6f6320
    cb31:	66 69 67 75 72 61    	imul   sp,WORD PTR [rdi+0x75],0x6172
    cb37:	74 69                	je     cba2 <_IO_stdin_used+0xba2>
    cb39:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb3a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cb3b:	20 66 69             	and    BYTE PTR [rsi+0x69],ah
    cb3e:	6c                   	ins    BYTE PTR es:[rdi],dx
    cb3f:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    cb42:	25 73 0a 00 0a       	and    eax,0xa000a73
    cb47:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    cb4a:	72 69                	jb     cbb5 <_IO_stdin_used+0xbb5>
    cb4c:	63 74 5f 69          	movsxd esi,DWORD PTR [rdi+rbx*2+0x69]
    cb50:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
    cb53:	5f                   	pop    rdi
    cb54:	74 69                	je     cbbf <_IO_stdin_used+0xbbf>
    cb56:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb57:	65 73 74             	gs jae cbce <_IO_stdin_used+0xbce>
    cb5a:	61                   	(bad)  
    cb5b:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb5c:	70 5f                	jo     cbbd <_IO_stdin_used+0xbbd>
    cb5e:	72 65                	jb     cbc5 <_IO_stdin_used+0xbc5>
    cb60:	71 3d                	jno    cb9f <_IO_stdin_used+0xb9f>
    cb62:	00 59 45             	add    BYTE PTR [rcx+0x45],bl
    cb65:	53                   	push   rbx
    cb66:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    cb69:	72 69                	jb     cbd4 <_IO_stdin_used+0xbd4>
    cb6b:	63 74 5f 6e          	movsxd esi,DWORD PTR [rdi+rbx*2+0x6e]
    cb6f:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb70:	61                   	(bad)  
    cb71:	70 5f                	jo     cbd2 <_IO_stdin_used+0xbd2>
    cb73:	68 6f 73 74 5f       	push   0x5f74736f
    cb78:	61                   	(bad)  
    cb79:	6c                   	ins    BYTE PTR es:[rdi],dx
    cb7a:	69 76 65 5f 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x6568635f
    cb81:	63 6b 3d             	movsxd ebp,DWORD PTR [rbx+0x3d]
    cb84:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
    cb87:	65 61                	gs (bad) 
    cb89:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cb8a:	5f                   	pop    rdi
    cb8b:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    cb8e:	61                   	(bad)  
    cb8f:	79 5f                	jns    cbf0 <_IO_stdin_used+0xbf0>
    cb91:	69 6e 5f 70 61 63 6b 	imul   ebp,DWORD PTR [rsi+0x5f],0x6b636170
    cb98:	65 74 73             	gs je  cc0e <_IO_stdin_used+0xc0e>
    cb9b:	3d 00 43 6c 65       	cmp    eax,0x656c4300
    cba0:	61                   	(bad)  
    cba1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cba2:	20 64 65 6c          	and    BYTE PTR [rbp+riz*2+0x6c],ah
    cba6:	61                   	(bad)  
    cba7:	79 20                	jns    cbc9 <_IO_stdin_used+0xbc9>
    cba9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbaa:	65 65 64 73 20       	gs gs fs jae cbcf <_IO_stdin_used+0xbcf>
    cbaf:	61                   	(bad)  
    cbb0:	20 76 61             	and    BYTE PTR [rsi+0x61],dh
    cbb3:	6c                   	ins    BYTE PTR es:[rdi],dx
    cbb4:	75 65                	jne    cc1b <_IO_stdin_used+0xc1b>
    cbb6:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
    cbb9:	65 61                	gs (bad) 
    cbbb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbbc:	5f                   	pop    rdi
    cbbd:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    cbc0:	61                   	(bad)  
    cbc1:	79 5f                	jns    cc22 <_IO_stdin_used+0xc22>
    cbc3:	69 6e 5f 6d 73 65 63 	imul   ebp,DWORD PTR [rsi+0x5f],0x6365736d
    cbca:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cbcb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbcc:	64 73 3d             	fs jae cc0c <_IO_stdin_used+0xc0c>
    cbcf:	00 75 73             	add    BYTE PTR [rbp+0x73],dh
    cbd2:	65 5f                	gs pop rdi
    cbd4:	73 71                	jae    cc47 <_IO_stdin_used+0xc47>
    cbd6:	6c                   	ins    BYTE PTR es:[rdi],dx
    cbd7:	69 74 65 3d 00 73 71 	imul   esi,DWORD PTR [rbp+riz*2+0x3d],0x6c717300
    cbde:	6c 
    cbdf:	69 74 65 5f 64 61 74 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x61746164
    cbe6:	61 
    cbe7:	62 61                	(bad)  
    cbe9:	73 65                	jae    cc50 <_IO_stdin_used+0xc50>
    cbeb:	5f                   	pop    rdi
    cbec:	70 61                	jo     cc4f <_IO_stdin_used+0xc4f>
    cbee:	74 68                	je     cc58 <_IO_stdin_used+0xc58>
    cbf0:	3d 00 73 71 6c       	cmp    eax,0x6c717300
    cbf5:	69 74 65 5f 64 61 74 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x61746164
    cbfc:	61 
    cbfd:	62 61                	(bad)  
    cbff:	73 65                	jae    cc66 <_IO_stdin_used+0xc66>
    cc01:	5f                   	pop    rdi
    cc02:	70 61                	jo     cc65 <_IO_stdin_used+0xc65>
    cc04:	74 68                	je     cc6e <_IO_stdin_used+0xc6e>
    cc06:	3a 20                	cmp    ah,BYTE PTR [rax]
    cc08:	25 73 00 69 6e       	and    eax,0x6e690073
    cc0d:	5f                   	pop    rdi
    cc0e:	61                   	(bad)  
    cc0f:	64 61                	fs (bad) 
    cc11:	70 74                	jo     cc87 <_IO_stdin_used+0xc87>
    cc13:	65 72 3d             	gs jb  cc53 <_IO_stdin_used+0xc53>
    cc16:	00 00                	add    BYTE PTR [rax],al
    cc18:	72 75                	jb     cc8f <_IO_stdin_used+0xc8f>
    cc1a:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc1b:	65 5f                	gs pop rdi
    cc1d:	70 61                	jo     cc80 <_IO_stdin_used+0xc80>
    cc1f:	72 73                	jb     cc94 <_IO_stdin_used+0xc94>
    cc21:	65 72 2e             	gs jb  cc52 <_IO_stdin_used+0xc52>
    cc24:	63 3a                	movsxd edi,DWORD PTR [rdx]
    cc26:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    cc29:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc2a:	65 5f                	gs pop rdi
    cc2c:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc2d:	69 62 72 61 72 79 5f 	imul   esp,DWORD PTR [rdx+0x72],0x5f797261
    cc34:	70 61                	jo     cc97 <_IO_stdin_used+0xc97>
    cc36:	72 73                	jb     ccab <_IO_stdin_used+0xcab>
    cc38:	65 72 3a             	gs jb  cc75 <_IO_stdin_used+0xc75>
    cc3b:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    cc3e:	5f                   	pop    rdi
    cc3f:	61                   	(bad)  
    cc40:	64 61                	fs (bad) 
    cc42:	70 74                	jo     ccb8 <_IO_stdin_used+0xcb8>
    cc44:	65 72 3a             	gs jb  cc81 <_IO_stdin_used+0xc81>
    cc47:	20 25 73 00 6f 75    	and    BYTE PTR [rip+0x756f0073],ah        # 756fccc0 <_end+0x755c1cb8>
    cc4d:	74 5f                	je     ccae <_IO_stdin_used+0xcae>
    cc4f:	61                   	(bad)  
    cc50:	64 61                	fs (bad) 
    cc52:	70 74                	jo     ccc8 <_IO_stdin_used+0xcc8>
    cc54:	65 72 3d             	gs jb  cc94 <_IO_stdin_used+0xc94>
    cc57:	00 72 75             	add    BYTE PTR [rdx+0x75],dh
    cc5a:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc5b:	65 5f                	gs pop rdi
    cc5d:	70 61                	jo     ccc0 <_IO_stdin_used+0xcc0>
    cc5f:	72 73                	jb     ccd4 <_IO_stdin_used+0xcd4>
    cc61:	65 72 2e             	gs jb  cc92 <_IO_stdin_used+0xc92>
    cc64:	63 3a                	movsxd edi,DWORD PTR [rdx]
    cc66:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    cc69:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc6a:	65 5f                	gs pop rdi
    cc6c:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc6d:	69 62 72 61 72 79 5f 	imul   esp,DWORD PTR [rdx+0x72],0x5f797261
    cc74:	70 61                	jo     ccd7 <_IO_stdin_used+0xcd7>
    cc76:	72 73                	jb     cceb <_IO_stdin_used+0xceb>
    cc78:	65 72 3a             	gs jb  ccb5 <_IO_stdin_used+0xcb5>
    cc7b:	20 6f 75             	and    BYTE PTR [rdi+0x75],ch
    cc7e:	74 5f                	je     ccdf <_IO_stdin_used+0xcdf>
    cc80:	61                   	(bad)  
    cc81:	64 61                	fs (bad) 
    cc83:	70 74                	jo     ccf9 <_IO_stdin_used+0xcf9>
    cc85:	65 72 3a             	gs jb  ccc2 <_IO_stdin_used+0xcc2>
    cc88:	20 25 73 00 6d 6f    	and    BYTE PTR [rip+0x6f6d0073],ah        # 6f6dcd01 <_end+0x6f5a1cf9>
    cc8e:	64 65 3d 00 6d 6f 64 	fs gs cmp eax,0x646f6d00
    cc95:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    cc98:	25 73 00 52 75       	and    eax,0x75520073
    cc9d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cc9e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cc9f:	69 6e 67 20 69 6e 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206e6920
    cca6:	00 32                	add    BYTE PTR [rdx],dh
    cca8:	00 49 50             	add    BYTE PTR [rcx+0x50],cl
    ccab:	53                   	push   rbx
    ccac:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    ccaf:	64 65 20 61 73       	fs and BYTE PTR gs:[rcx+0x73],ah
    ccb4:	20 70 65             	and    BYTE PTR [rax+0x65],dh
    ccb7:	72 20                	jb     ccd9 <_IO_stdin_used+0xcd9>
    ccb9:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    ccbc:	66 69 67 00 49 44    	imul   sp,WORD PTR [rdi+0x0],0x4449
    ccc2:	53                   	push   rbx
    ccc3:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    ccc6:	64 65 20 61 73       	fs and BYTE PTR gs:[rcx+0x73],ah
    cccb:	20 70 65             	and    BYTE PTR [rax+0x65],dh
    ccce:	72 20                	jb     ccf0 <_IO_stdin_used+0xcf0>
    ccd0:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    ccd3:	66 69 67 00 6c 6f    	imul   sp,WORD PTR [rdi+0x0],0x6f6c
    ccd9:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
    ccdc:	69 70 3d 00 6c 6f 63 	imul   esi,DWORD PTR [rax+0x3d],0x636f6c00
    cce3:	61                   	(bad)  
    cce4:	6c                   	ins    BYTE PTR es:[rdi],dx
    cce5:	5f                   	pop    rdi
    cce6:	69 70 20 61 73 20 70 	imul   esi,DWORD PTR [rax+0x20],0x70207361
    cced:	65 72 20             	gs jb  cd10 <_IO_stdin_used+0xd10>
    ccf0:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    ccf3:	66 69 67 3a 20 25    	imul   sp,WORD PTR [rdi+0x3a],0x2520
    ccf9:	73 00                	jae    ccfb <_IO_stdin_used+0xcfb>
    ccfb:	64 65 66 67 77 3d    	fs gs data16 addr32 ja cd3e <_IO_stdin_used+0xd3e>
    cd01:	00 75 73             	add    BYTE PTR [rbp+0x73],dh
    cd04:	65 5f                	gs pop rdi
    cd06:	73 70                	jae    cd78 <_IO_stdin_used+0xd78>
    cd08:	69 3d 00 56 49 47 49 	imul   edi,DWORD PTR [rip+0x47495600],0x53204c49        # 474a2312 <_end+0x4736730a>
    cd0f:	4c 20 53 
    cd12:	50                   	push   rax
    cd13:	49 20 73 65          	rex.WB and BYTE PTR [r11+0x65],sil
    cd17:	72 76                	jb     cd8f <_IO_stdin_used+0xd8f>
    cd19:	69 63 65 20 61 63 74 	imul   esp,DWORD PTR [rbx+0x65],0x74636120
    cd20:	69 76 65 00 48 4f 4d 	imul   esi,DWORD PTR [rsi+0x65],0x4d4f4800
    cd27:	45 5f                	rex.RB pop r15
    cd29:	4e                   	rex.WRX
    cd2a:	45 54                	rex.RB push r12
    cd2c:	3d 00 48 4f 4d       	cmp    eax,0x4d4f4800
    cd31:	45 5f                	rex.RB pop r15
    cd33:	4e                   	rex.WRX
    cd34:	45 54                	rex.RB push r12
    cd36:	5f                   	pop    rdi
    cd37:	4d                   	rex.WRB
    cd38:	41 53                	push   r11
    cd3a:	4b 3d 00 6c 6f 63    	rex.WXB cmp rax,0x636f6c00
    cd40:	61                   	(bad)  
    cd41:	74 69                	je     cdac <_IO_stdin_used+0xdac>
    cd43:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd44:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd45:	3d 00 65 78 74       	cmp    eax,0x74786500
    cd4a:	65 72 6e             	gs jb  cdbb <_IO_stdin_used+0xdbb>
    cd4d:	61                   	(bad)  
    cd4e:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd4f:	00 53 79             	add    BYTE PTR [rbx+0x79],dl
    cd52:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd53:	74 61                	je     cdb6 <_IO_stdin_used+0xdb6>
    cd55:	78 20                	js     cd77 <_IO_stdin_used+0xd77>
    cd57:	65 72 72             	gs jb  cdcc <_IO_stdin_used+0xdcc>
    cd5a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd5b:	72 20                	jb     cd7d <_IO_stdin_used+0xd7d>
    cd5d:	61                   	(bad)  
    cd5e:	74 20                	je     cd80 <_IO_stdin_used+0xd80>
    cd60:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd61:	69 6e 65 20 25 64 3a 	imul   ebp,DWORD PTR [rsi+0x65],0x3a642520
    cd68:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # d7e1 <_IO_stdin_used+0x17e1>
    cd6e:	00 00                	add    BYTE PTR [rax],al
    cd70:	45 72 72             	rex.RB jb cde5 <_IO_stdin_used+0xde5>
    cd73:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd74:	72 20                	jb     cd96 <_IO_stdin_used+0xd96>
    cd76:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd77:	70 65                	jo     cdde <_IO_stdin_used+0xdde>
    cd79:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd7a:	69 6e 67 20 72 75 6c 	imul   ebp,DWORD PTR [rsi+0x67],0x6c757220
    cd81:	65 20 66 69          	and    BYTE PTR gs:[rsi+0x69],ah
    cd85:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd86:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    cd89:	25 73 2e 20 52       	and    eax,0x52202e73
    cd8e:	65 66 75 73          	gs data16 jne ce05 <_IO_stdin_used+0xe05>
    cd92:	69 6e 67 20 74 6f 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
    cd99:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    cd9c:	74 69                	je     ce07 <_IO_stdin_used+0xe07>
    cd9e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd9f:	75 65                	jne    ce06 <_IO_stdin_used+0xe06>
    cda1:	0a 00                	or     al,BYTE PTR [rax]
    cda3:	50                   	push   rax
    cda4:	61                   	(bad)  
    cda5:	72 73                	jb     ce1a <_IO_stdin_used+0xe1a>
    cda7:	69 6e 67 20 66 69 6c 	imul   ebp,DWORD PTR [rsi+0x67],0x6c696620
    cdae:	65 20 25 73 0a 00 61 	and    BYTE PTR gs:[rip+0x61000a73],ah        # 6100d828 <_end+0x60ed2820>
    cdb5:	6c                   	ins    BYTE PTR es:[rdi],dx
    cdb6:	65 72 74             	gs jb  ce2d <_IO_stdin_used+0xe2d>
    cdb9:	00 46 69             	add    BYTE PTR [rsi+0x69],al
    cdbc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cdbd:	69 73 68 65 64 20 70 	imul   esi,DWORD PTR [rbx+0x68],0x70206465
    cdc4:	61                   	(bad)  
    cdc5:	72 73                	jb     ce3a <_IO_stdin_used+0xe3a>
    cdc7:	69 6e 67 20 25 73 0a 	imul   ebp,DWORD PTR [rsi+0x67],0xa732520
    cdce:	00 00                	add    BYTE PTR [rax],al
    cdd0:	45 72 72             	rex.RB jb ce45 <_IO_stdin_used+0xe45>
    cdd3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cdd4:	72 20                	jb     cdf6 <_IO_stdin_used+0xdf6>
    cdd6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cdd7:	70 65                	jo     ce3e <_IO_stdin_used+0xe3e>
    cdd9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cdda:	69 6e 67 20 25 73 20 	imul   ebp,DWORD PTR [rsi+0x67],0x20732520
    cde1:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    cde3:	72 20                	jb     ce05 <_IO_stdin_used+0xe05>
    cde5:	65 78 70             	gs js  ce58 <_IO_stdin_used+0xe58>
    cde8:	6c                   	ins    BYTE PTR es:[rdi],dx
    cde9:	2f                   	(bad)  
    cdea:	69 6d 70 6c 69 63 69 	imul   ebp,DWORD PTR [rbp+0x70],0x6963696c
    cdf1:	74 20                	je     ce13 <_IO_stdin_used+0xe13>
    cdf3:	64 65 6e             	fs outs dx,BYTE PTR gs:[rsi]
    cdf6:	79 20                	jns    ce18 <_IO_stdin_used+0xe18>
    cdf8:	70 61                	jo     ce5b <_IO_stdin_used+0xe5b>
    cdfa:	72 73                	jb     ce6f <_IO_stdin_used+0xe6f>
    cdfc:	69 6e 67 0a 00 69 70 	imul   ebp,DWORD PTR [rsi+0x67],0x7069000a
    ce03:	76 34                	jbe    ce39 <_IO_stdin_used+0xe39>
    ce05:	00 46 61             	add    BYTE PTR [rsi+0x61],al
    ce08:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    ce0f:	20 
    ce10:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ce11:	70 65                	jo     ce78 <_IO_stdin_used+0xe78>
    ce13:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ce14:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # d88d <_IO_stdin_used+0x188d>
    ce1a:	00 00                	add    BYTE PTR [rax],al
    ce1c:	00 00                	add    BYTE PTR [rax],al
    ce1e:	00 00                	add    BYTE PTR [rax],al
    ce20:	52                   	push   rdx
    ce21:	55                   	push   rbp
    ce22:	4e                   	rex.WRX
    ce23:	4e                   	rex.WRX
    ce24:	49                   	rex.WB
    ce25:	4e                   	rex.WRX
    ce26:	47 20 49 4e          	rex.RXB and BYTE PTR [r9+0x4e],r9b
    ce2a:	20 44 45 4d          	and    BYTE PTR [rbp+rax*2+0x4d],al
    ce2e:	4f                   	rex.WRXB
    ce2f:	4e 53                	rex.WRX push rbx
    ce31:	54                   	push   rsp
    ce32:	52                   	push   rdx
    ce33:	41 54                	push   r12
    ce35:	49                   	rex.WB
    ce36:	4f                   	rex.WRXB
    ce37:	4e 20 4d 4f          	rex.WRX and BYTE PTR [rbp+0x4f],r9b
    ce3b:	44                   	rex.R
    ce3c:	45                   	rex.RB
    ce3d:	2e 20 59 4f          	cs and BYTE PTR [rcx+0x4f],bl
    ce41:	55                   	push   rbp
    ce42:	20 48 41             	and    BYTE PTR [rax+0x41],cl
    ce45:	56                   	push   rsi
    ce46:	45 20 31             	and    BYTE PTR [r9],r14b
    ce49:	30 20                	xor    BYTE PTR [rax],ah
    ce4b:	53                   	push   rbx
    ce4c:	45                   	rex.RB
    ce4d:	43                   	rex.XB
    ce4e:	4f                   	rex.WRXB
    ce4f:	4e                   	rex.WRX
    ce50:	44 53                	rex.R push rbx
    ce52:	20 54 4f 20          	and    BYTE PTR [rdi+rcx*2+0x20],dl
    ce56:	41                   	rex.B
    ce57:	42                   	rex.X
    ce58:	4f 52                	rex.WRXB push r10
    ce5a:	54                   	push   rsp
    ce5b:	2e 00 00             	cs add BYTE PTR [rax],al
    ce5e:	00 00                	add    BYTE PTR [rax],al
    ce60:	52                   	push   rdx
    ce61:	55                   	push   rbp
    ce62:	4e                   	rex.WRX
    ce63:	4e                   	rex.WRX
    ce64:	49                   	rex.WB
    ce65:	4e                   	rex.WRX
    ce66:	47 20 49 4e          	rex.RXB and BYTE PTR [r9+0x4e],r9b
    ce6a:	20 54 45 53          	and    BYTE PTR [rbp+rax*2+0x53],dl
    ce6e:	54                   	push   rsp
    ce6f:	20 4d 4f             	and    BYTE PTR [rbp+0x4f],cl
    ce72:	44                   	rex.R
    ce73:	45                   	rex.RB
    ce74:	2e 20 59 4f          	cs and BYTE PTR [rcx+0x4f],bl
    ce78:	55                   	push   rbp
    ce79:	20 48 41             	and    BYTE PTR [rax+0x41],cl
    ce7c:	56                   	push   rsi
    ce7d:	45 20 31             	and    BYTE PTR [r9],r14b
    ce80:	30 20                	xor    BYTE PTR [rax],ah
    ce82:	53                   	push   rbx
    ce83:	45                   	rex.RB
    ce84:	43                   	rex.XB
    ce85:	4f                   	rex.WRXB
    ce86:	4e                   	rex.WRX
    ce87:	44 53                	rex.R push rbx
    ce89:	20 54 4f 20          	and    BYTE PTR [rdi+rcx*2+0x20],dl
    ce8d:	41                   	rex.B
    ce8e:	42                   	rex.X
    ce8f:	4f 52                	rex.WRXB push r10
    ce91:	54                   	push   rsp
    ce92:	2e 00 55 6e          	cs add BYTE PTR [rbp+0x6e],dl
    ce96:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    ce9a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ce9b:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    ce9e:	67 75 6d             	addr32 jne cf0e <_IO_stdin_used+0xf0e>
    cea1:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    cea3:	74 20                	je     cec5 <_IO_stdin_used+0xec5>
    cea5:	2d 25 63 0a 00       	sub    eax,0xa6325
    ceaa:	70 64                	jo     cf10 <_IO_stdin_used+0xf10>
    ceac:	71 68                	jno    cf16 <_IO_stdin_used+0xf16>
    ceae:	74 65                	je     cf15 <_IO_stdin_used+0xf15>
    ceb0:	69 3a 00 2f 65 74    	imul   edi,DWORD PTR [rdx],0x74652f00
    ceb6:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    ceb8:	76 69                	jbe    cf23 <_IO_stdin_used+0xf23>
    ceba:	67 69 6c 2f 64 65 6e 	imul   ebp,DWORD PTR [edi+ebp*1+0x64],0x2e796e65
    cec1:	79 2e 
    cec3:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    cec6:	66 00 46 69          	data16 add BYTE PTR [rsi+0x69],al
    ceca:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cecb:	73 69                	jae    cf36 <_IO_stdin_used+0xf36>
    cecd:	73 68                	jae    cf37 <_IO_stdin_used+0xf37>
    cecf:	65 64 20 6c 6f 61    	gs and BYTE PTR fs:[rdi+rbp*2+0x61],ch
    ced5:	64 69 6e 67 20 65 78 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x70786520
    cedc:	70 
    cedd:	6c                   	ins    BYTE PTR es:[rdi],dx
    cede:	69 63 69 74 20 64 65 	imul   esp,DWORD PTR [rbx+0x69],0x65642074
    cee5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cee6:	79 20                	jns    cf08 <_IO_stdin_used+0xf08>
    cee8:	66 69 6c 65 28 2f 65 	imul   bp,WORD PTR [rbp+riz*2+0x28],0x652f
    ceef:	74 63                	je     cf54 <_IO_stdin_used+0xf54>
    cef1:	2f                   	(bad)  
    cef2:	76 69                	jbe    cf5d <_IO_stdin_used+0xf5d>
    cef4:	67 69 6c 2f 64 65 6e 	imul   ebp,DWORD PTR [edi+ebp*1+0x64],0x2e796e65
    cefb:	79 2e 
    cefd:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    cf00:	66 29 00             	sub    WORD PTR [rax],ax
    cf03:	00 00                	add    BYTE PTR [rax],al
    cf05:	00 00                	add    BYTE PTR [rax],al
    cf07:	00 46 69             	add    BYTE PTR [rsi+0x69],al
    cf0a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cf0b:	69 73 68 65 64 20 6c 	imul   esi,DWORD PTR [rbx+0x68],0x6c206465
    cf12:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cf13:	61                   	(bad)  
    cf14:	64 69 6e 67 20 43 53 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x56534320
    cf1b:	56 
    cf1c:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    cf1f:	70 20                	jo     cf41 <_IO_stdin_used+0xf41>
    cf21:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    cf24:	68 65 00 00 46       	push   0x46000065
    cf29:	61                   	(bad)  
    cf2a:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    cf31:	20 
    cf32:	6c                   	ins    BYTE PTR es:[rdi],dx
    cf33:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cf34:	61                   	(bad)  
    cf35:	64 20 43 53          	and    BYTE PTR fs:[rbx+0x53],al
    cf39:	56                   	push   rsi
    cf3a:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    cf3d:	70 20                	jo     cf5f <_IO_stdin_used+0xf5f>
    cf3f:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    cf42:	68 65 28 6e 6f       	push   0x6f6e2865
    cf47:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cf48:	20 63 72             	and    BYTE PTR [rbx+0x72],ah
    cf4b:	69 74 69 63 61 6c 20 	imul   esi,DWORD PTR [rcx+rbp*2+0x63],0x65206c61
    cf52:	65 
    cf53:	72 72                	jb     cfc7 <_IO_stdin_used+0xfc7>
    cf55:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cf56:	72 29                	jb     cf81 <_IO_stdin_used+0xf81>
    cf58:	00 2f                	add    BYTE PTR [rdi],ch
    cf5a:	65 74 63             	gs je  cfc0 <_IO_stdin_used+0xfc0>
    cf5d:	2f                   	(bad)  
    cf5e:	76 69                	jbe    cfc9 <_IO_stdin_used+0xfc9>
    cf60:	67 69 6c 2f 76 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x76],0x6c696769
    cf67:	69 6c 
    cf69:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    cf6d:	66 00 50 61          	data16 add BYTE PTR [rax+0x61],dl
    cf71:	72 73                	jb     cfe6 <_IO_stdin_used+0xfe6>
    cf73:	65 64 20 72 75       	gs and BYTE PTR fs:[rdx+0x75],dh
    cf78:	6c                   	ins    BYTE PTR es:[rdi],dx
    cf79:	65 20 66 69          	and    BYTE PTR gs:[rsi+0x69],ah
    cf7d:	6c                   	ins    BYTE PTR es:[rdi],dx
    cf7e:	65 73 00             	gs jae cf81 <_IO_stdin_used+0xf81>
    cf81:	00 00                	add    BYTE PTR [rax],al
    cf83:	00 00                	add    BYTE PTR [rax],al
    cf85:	00 00                	add    BYTE PTR [rax],al
    cf87:	00 56 49             	add    BYTE PTR [rsi+0x49],dl
    cf8a:	47                   	rex.RXB
    cf8b:	49                   	rex.WB
    cf8c:	4c 20 6c 69 73       	rex.WR and BYTE PTR [rcx+rbp*2+0x73],r13b
    cf91:	74 65                	je     cff8 <_IO_stdin_used+0xff8>
    cf93:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cf94:	69 6e 67 20 6f 6e 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206e6f20
    cf9b:	69 6e 74 65 72 66 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61667265
    cfa2:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    cfa5:	25 73 0a 00 70       	and    eax,0x70000a73
    cfaa:	63 61 70             	movsxd esp,DWORD PTR [rcx+0x70]
    cfad:	5f                   	pop    rdi
    cfae:	6d                   	ins    DWORD PTR es:[rdi],dx
    cfaf:	67 72 20             	addr32 jb cfd2 <_IO_stdin_used+0xfd2>
    cfb2:	69 6e 20 70 63 61 70 	imul   ebp,DWORD PTR [rsi+0x20],0x70616370
    cfb9:	5f                   	pop    rdi
    cfba:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cfbb:	70 65                	jo     d022 <_IO_stdin_used+0x1022>
    cfbd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cfbe:	5f                   	pop    rdi
    cfbf:	6c                   	ins    BYTE PTR es:[rdi],dx
    cfc0:	69 76 65 00 00 00 00 	imul   esi,DWORD PTR [rsi+0x65],0x0
    cfc7:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    cfca:	65 63 72 79          	movsxd esi,DWORD PTR gs:[rdx+0x79]
    cfce:	70 74                	jo     d044 <_IO_stdin_used+0x1044>
    cfd0:	65 64 20 4e 53       	gs and BYTE PTR fs:[rsi+0x53],cl
    cfd5:	48 20 63 6f          	rex.W and BYTE PTR [rbx+0x6f],spl
    cfd9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cfda:	66 69 67 20 73 65    	imul   sp,WORD PTR [rdi+0x20],0x6573
    cfe0:	72 76                	jb     d058 <_IO_stdin_used+0x1058>
    cfe2:	65 72 20             	gs jb  d005 <_IO_stdin_used+0x1005>
    cfe5:	73 74                	jae    d05b <_IO_stdin_used+0x105b>
    cfe7:	61                   	(bad)  
    cfe8:	72 74                	jb     d05e <_IO_stdin_used+0x105e>
    cfea:	65 64 3a 20          	gs cmp ah,BYTE PTR fs:[rax]
    cfee:	31 32                	xor    DWORD PTR [rdx],esi
    cff0:	37                   	(bad)  
    cff1:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
    cff4:	30 2e                	xor    BYTE PTR [rsi],ch
    cff6:	31 3a                	xor    DWORD PTR [rdx],edi
    cff8:	32 33                	xor    dh,BYTE PTR [rbx]
    cffa:	00 00                	add    BYTE PTR [rax],al
    cffc:	c7                   	(bad)  
    cffd:	98                   	cwde   
    cffe:	ff                   	(bad)  
    cfff:	ff 04 99             	inc    DWORD PTR [rcx+rbx*4]
    d002:	ff                   	(bad)  
    d003:	ff 42 99             	inc    DWORD PTR [rdx-0x67]
    d006:	ff                   	(bad)  
    d007:	ff 42 99             	inc    DWORD PTR [rdx-0x67]
    d00a:	ff                   	(bad)  
    d00b:	ff d3                	call   rbx
    d00d:	98                   	cwde   
    d00e:	ff                   	(bad)  
    d00f:	ff e2                	jmp    rdx
    d011:	98                   	cwde   
    d012:	ff                   	(bad)  
    d013:	ff 42 99             	inc    DWORD PTR [rdx-0x67]
    d016:	ff                   	(bad)  
    d017:	ff 42 99             	inc    DWORD PTR [rdx-0x67]
    d01a:	ff                   	(bad)  
    d01b:	ff 42 99             	inc    DWORD PTR [rdx-0x67]
    d01e:	ff                   	(bad)  
    d01f:	ff 42 99             	inc    DWORD PTR [rdx-0x67]
    d022:	ff                   	(bad)  
    d023:	ff 42 99             	inc    DWORD PTR [rdx-0x67]
    d026:	ff                   	(bad)  
    d027:	ff 42 99             	inc    DWORD PTR [rdx-0x67]
    d02a:	ff                   	(bad)  
    d02b:	ff f2                	push   rdx
    d02d:	98                   	cwde   
    d02e:	ff                   	(bad)  
    d02f:	ff                   	(bad)  
    d030:	fb                   	sti    
    d031:	98                   	cwde   
    d032:	ff                   	(bad)  
    d033:	ff 42 99             	inc    DWORD PTR [rdx-0x67]
    d036:	ff                   	(bad)  
    d037:	ff 42 99             	inc    DWORD PTR [rdx-0x67]
    d03a:	ff                   	(bad)  
    d03b:	ff 23                	jmp    QWORD PTR [rbx]
    d03d:	99                   	cdq    
    d03e:	ff                   	(bad)  
    d03f:	ff 0a                	dec    DWORD PTR [rdx]
    d041:	43 61                	rex.XB (bad) 
    d043:	75 67                	jne    d0ac <_IO_stdin_used+0x10ac>
    d045:	68 74 20 73 69       	push   0x69732074
    d04a:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    d04c:	61                   	(bad)  
    d04d:	6c                   	ins    BYTE PTR es:[rdi],dx
    d04e:	20 25 64 20 61 74    	and    BYTE PTR [rip+0x74612064],ah        # 7461f0b8 <_end+0x744e40b0>
    d054:	20 25 73 2c 20 65    	and    BYTE PTR [rip+0x65202c73],ah        # 6520fccd <_end+0x650d4cc5>
    d05a:	78 69                	js     d0c5 <_IO_stdin_used+0x10c5>
    d05c:	74 69                	je     d0c7 <_IO_stdin_used+0x10c7>
    d05e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d05f:	67 2e 2e 2e 0a 00    	cs cs cs or al,BYTE PTR [eax]
    d065:	00 54 6f 74          	add    BYTE PTR [rdi+rbp*2+0x74],dl
    d069:	61                   	(bad)  
    d06a:	6c                   	ins    BYTE PTR es:[rdi],dx
    d06b:	20 50 61             	and    BYTE PTR [rax+0x61],dl
    d06e:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d071:	74 73                	je     d0e6 <_IO_stdin_used+0x10e6>
    d073:	20 43 61             	and    BYTE PTR [rbx+0x61],al
    d076:	75 67                	jne    d0df <_IO_stdin_used+0x10df>
    d078:	68 74 3a 20 25       	push   0x25203a74
    d07d:	64 0a 00             	or     al,BYTE PTR fs:[rax]
    d080:	53                   	push   rbx
    d081:	74 61                	je     d0e4 <_IO_stdin_used+0x10e4>
    d083:	74 69                	je     d0ee <_IO_stdin_used+0x10ee>
    d085:	73 74                	jae    d0fb <_IO_stdin_used+0x10fb>
    d087:	69 63 73 0a 49 70 20 	imul   esp,DWORD PTR [rbx+0x73],0x2070490a
    d08e:	61                   	(bad)  
    d08f:	64 64 72 65          	fs fs jb d0f8 <_IO_stdin_used+0x10f8>
    d093:	73 73                	jae    d108 <_IO_stdin_used+0x1108>
    d095:	20 20                	and    BYTE PTR [rax],ah
    d097:	20 20                	and    BYTE PTR [rax],ah
    d099:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    d09b:	75 6e                	jne    d10b <_IO_stdin_used+0x110b>
    d09d:	74 0a                	je     d0a9 <_IO_stdin_used+0x10a9>
    d09f:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    d0a4:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    d0a9:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    d0ae:	2d 2d 00 00 00       	sub    eax,0x2d
    d0b3:	00 00                	add    BYTE PTR [rax],al
    d0b5:	00 00                	add    BYTE PTR [rax],al
    d0b7:	00 25 73 0a 09 09    	add    BYTE PTR [rip+0x9090a73],ah        # 909db30 <_end+0x8f62b28>
    d0bd:	74 6f                	je     d12e <_IO_stdin_used+0x112e>
    d0bf:	74 61                	je     d122 <_IO_stdin_used+0x1122>
    d0c1:	6c                   	ins    BYTE PTR es:[rdi],dx
    d0c2:	20 70 61             	and    BYTE PTR [rax+0x61],dh
    d0c5:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d0c8:	74 73                	je     d13d <_IO_stdin_used+0x113d>
    d0ca:	20 3d 20 25 64 0a    	and    BYTE PTR [rip+0xa642520],bh        # a64f5f0 <_end+0xa5145e8>
    d0d0:	09 09                	or     DWORD PTR [rcx],ecx
    d0d2:	74 6f                	je     d143 <_IO_stdin_used+0x1143>
    d0d4:	74 61                	je     d137 <_IO_stdin_used+0x1137>
    d0d6:	6c                   	ins    BYTE PTR es:[rdi],dx
    d0d7:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d0da:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d0db:	74 20                	je     d0fd <_IO_stdin_used+0x10fd>
    d0dd:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0e2:	09 09                	or     DWORD PTR [rcx],ecx
    d0e4:	74 6f                	je     d155 <_IO_stdin_used+0x1155>
    d0e6:	74 61                	je     d149 <_IO_stdin_used+0x1149>
    d0e8:	6c                   	ins    BYTE PTR es:[rdi],dx
    d0e9:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d0ec:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d0ef:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0f4:	09 09                	or     DWORD PTR [rcx],ecx
    d0f6:	54                   	push   rsp
    d0f7:	43 50                	rex.XB push r8
    d0f9:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d0fc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d0fd:	74 20                	je     d11f <_IO_stdin_used+0x111f>
    d0ff:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d104:	09 09                	or     DWORD PTR [rcx],ecx
    d106:	54                   	push   rsp
    d107:	43 50                	rex.XB push r8
    d109:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d10c:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d10f:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d114:	09 09                	or     DWORD PTR [rcx],ecx
    d116:	55                   	push   rbp
    d117:	44 50                	rex.R push rax
    d119:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d11c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d11d:	74 20                	je     d13f <_IO_stdin_used+0x113f>
    d11f:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d124:	09 09                	or     DWORD PTR [rcx],ecx
    d126:	55                   	push   rbp
    d127:	44 50                	rex.R push rax
    d129:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d12c:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d12f:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d134:	09 09                	or     DWORD PTR [rcx],ecx
    d136:	49                   	rex.WB
    d137:	43                   	rex.XB
    d138:	4d 50                	rex.WRB push r8
    d13a:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d13d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d13e:	74 20                	je     d160 <_IO_stdin_used+0x1160>
    d140:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d145:	09 09                	or     DWORD PTR [rcx],ecx
    d147:	49                   	rex.WB
    d148:	43                   	rex.XB
    d149:	4d 50                	rex.WRB push r8
    d14b:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d14e:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d151:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d156:	0a 00                	or     al,BYTE PTR [rax]
    d158:	77 00                	ja     d15a <_IO_stdin_used+0x115a>
    d15a:	2f                   	(bad)  
    d15b:	75 73                	jne    d1d0 <_IO_stdin_used+0x11d0>
    d15d:	72 2f                	jb     d18e <_IO_stdin_used+0x118e>
    d15f:	73 68                	jae    d1c9 <_IO_stdin_used+0x11c9>
    d161:	61                   	(bad)  
    d162:	72 65                	jb     d1c9 <_IO_stdin_used+0x11c9>
    d164:	2f                   	(bad)  
    d165:	76 69                	jbe    d1d0 <_IO_stdin_used+0x11d0>
    d167:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    d16e:	63 61 
    d170:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    d173:	2e 63 73 76          	cs movsxd esi,DWORD PTR [rbx+0x76]
    d177:	00 43 61             	add    BYTE PTR [rbx+0x61],al
    d17a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d17b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d17c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d17d:	74 20                	je     d19f <_IO_stdin_used+0x119f>
    d17f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d180:	70 65                	jo     d1e7 <_IO_stdin_used+0x11e7>
    d182:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d183:	20 2f                	and    BYTE PTR [rdi],ch
    d185:	75 73                	jne    d1fa <_IO_stdin_used+0x11fa>
    d187:	72 2f                	jb     d1b8 <_IO_stdin_used+0x11b8>
    d189:	73 68                	jae    d1f3 <_IO_stdin_used+0x11f3>
    d18b:	61                   	(bad)  
    d18c:	72 65                	jb     d1f3 <_IO_stdin_used+0x11f3>
    d18e:	2f                   	(bad)  
    d18f:	76 69                	jbe    d1fa <_IO_stdin_used+0x11fa>
    d191:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    d198:	63 61 
    d19a:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    d19d:	2e 63 73 76          	cs movsxd esi,DWORD PTR [rbx+0x76]
    d1a1:	3a 20                	cmp    ah,BYTE PTR [rax]
    d1a3:	70 72                	jo     d217 <_IO_stdin_used+0x1217>
    d1a5:	69 6e 74 69 6e 67 20 	imul   ebp,DWORD PTR [rsi+0x74],0x20676e69
    d1ac:	61                   	(bad)  
    d1ad:	72 70                	jb     d21f <_IO_stdin_used+0x121f>
    d1af:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    d1b2:	68 65 20 74 6f       	push   0x6f742065
    d1b7:	20 73 63             	and    BYTE PTR [rbx+0x63],dh
    d1ba:	72 65                	jb     d221 <_IO_stdin_used+0x1221>
    d1bc:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d1be:	00 25 73 20 2d 3e    	add    BYTE PTR [rip+0x3e2d2073],ah        # 3e2df237 <_end+0x3e1a422f>
    d1c4:	20 25 73 0a 00 25    	and    BYTE PTR [rip+0x25000a73],ah        # 2500dc3d <_end+0x24ed2c35>
    d1ca:	73 2c                	jae    d1f8 <_IO_stdin_used+0x11f8>
    d1cc:	25 73 0a 00 31       	and    eax,0x31000a73
    d1d1:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
    d1d4:	30 00                	xor    BYTE PTR [rax],al
    d1d6:	00 00                	add    BYTE PTR [rax],al
    d1d8:	56                   	push   rsi
    d1d9:	49                   	rex.WB
    d1da:	47                   	rex.RXB
    d1db:	49                   	rex.WB
    d1dc:	4c 20 55 54          	rex.WR and BYTE PTR [rbp+0x54],r10b
    d1e0:	4d 20 25 73 0a 09 2d 	rex.WRB and BYTE PTR [rip+0x2d090a73],r12b        # 2d09dc5a <_end+0x2cf62c52>
    d1e7:	64 3a 20             	cmp    ah,BYTE PTR fs:[rax]
    d1ea:	64 65 62             	fs gs (bad) 
    d1ed:	75 67                	jne    d256 <_IO_stdin_used+0x1256>
    d1ef:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    d1f2:	64 65 0a 09          	fs or  cl,BYTE PTR gs:[rcx]
    d1f6:	2d 68 3a 20 64       	sub    eax,0x64203a68
    d1fb:	69 73 70 6c 61 79 20 	imul   esi,DWORD PTR [rbx+0x70],0x2079616c
    d202:	74 68                	je     d26c <_IO_stdin_used+0x126c>
    d204:	69 73 20 6d 65 73 73 	imul   esi,DWORD PTR [rbx+0x20],0x7373656d
    d20b:	61                   	(bad)  
    d20c:	67 65 0a 09          	or     cl,BYTE PTR gs:[ecx]
    d210:	2d 69 20 3c 69       	sub    eax,0x693c2069
    d215:	66 61                	data16 (bad) 
    d217:	63 65 3e             	movsxd esp,DWORD PTR [rbp+0x3e]
    d21a:	3a 20                	cmp    ah,BYTE PTR [rax]
    d21c:	73 65                	jae    d283 <_IO_stdin_used+0x1283>
    d21e:	74 20                	je     d240 <_IO_stdin_used+0x1240>
    d220:	74 68                	je     d28a <_IO_stdin_used+0x128a>
    d222:	65 20 69 6e          	and    BYTE PTR gs:[rcx+0x6e],ch
    d226:	74 65                	je     d28d <_IO_stdin_used+0x128d>
    d228:	72 66                	jb     d290 <_IO_stdin_used+0x1290>
    d22a:	61                   	(bad)  
    d22b:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    d22e:	74 6f                	je     d29f <_IO_stdin_used+0x129f>
    d230:	20 6c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],ch
    d234:	74 65                	je     d29b <_IO_stdin_used+0x129b>
    d236:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d237:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    d23a:	0a 09                	or     cl,BYTE PTR [rcx]
    d23c:	2d 70 20 70 72       	sub    eax,0x72702070
    d241:	69 6e 74 20 70 61 63 	imul   ebp,DWORD PTR [rsi+0x74],0x63617020
    d248:	6b 65 74 73          	imul   esp,DWORD PTR [rbp+0x74],0x73
    d24c:	0a 09                	or     cl,BYTE PTR [rcx]
    d24e:	2d 71 20 65 78       	sub    eax,0x78652071
    d253:	69 74 20 71 75 69 65 	imul   esi,DWORD PTR [rax+riz*1+0x71],0x74656975
    d25a:	74 
    d25b:	6c                   	ins    BYTE PTR es:[rdi],dx
    d25c:	79 0a                	jns    d268 <_IO_stdin_used+0x1268>
    d25e:	00 72 62             	add    BYTE PTR [rdx+0x62],dh
    d261:	00 2f                	add    BYTE PTR [rdi],ch
    d263:	70 72                	jo     d2d7 <_IO_stdin_used+0x12d7>
    d265:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d266:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    d268:	63 70 75             	movsxd esi,DWORD PTR [rax+0x75]
    d26b:	69 6e 66 6f 00 6d 6f 	imul   ebp,DWORD PTR [rsi+0x66],0x6f6d006f
    d272:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    d275:	20 6e 61             	and    BYTE PTR [rsi+0x61],ch
    d278:	6d                   	ins    DWORD PTR es:[rdi],dx
    d279:	65 00 46 6f          	add    BYTE PTR gs:[rsi+0x6f],al
    d27d:	75 6e                	jne    d2ed <_IO_stdin_used+0x12ed>
    d27f:	64 20 25 64 20 63 70 	and    BYTE PTR fs:[rip+0x70632064],ah        # 7063f2ea <_end+0x705042e2>
    d286:	75 73                	jne    d2fb <_IO_stdin_used+0x12fb>
    d288:	3a 0a                	cmp    cl,BYTE PTR [rdx]
    d28a:	25 73 00 00 00       	and    eax,0x73
    d28f:	00 e2                	add    dl,ah
    d291:	96                   	xchg   esi,eax
    d292:	88 e2                	mov    dl,ah
    d294:	96                   	xchg   esi,eax
    d295:	88 e2                	mov    dl,ah
    d297:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d29e:	88 e2                	mov    dl,ah
    d2a0:	96                   	xchg   esi,eax
    d2a1:	88 e2                	mov    dl,ah
    d2a3:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2aa:	88 e2                	mov    dl,ah
    d2ac:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    d2b3:	96                   	xchg   esi,eax
    d2b4:	88 e2                	mov    dl,ah
    d2b6:	96                   	xchg   esi,eax
    d2b7:	88 e2                	mov    dl,ah
    d2b9:	96                   	xchg   esi,eax
    d2ba:	88 e2                	mov    dl,ah
    d2bc:	96                   	xchg   esi,eax
    d2bd:	88 e2                	mov    dl,ah
    d2bf:	96                   	xchg   esi,eax
    d2c0:	88 e2                	mov    dl,ah
    d2c2:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    d2c9:	96                   	xchg   esi,eax
    d2ca:	88 e2                	mov    dl,ah
    d2cc:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2d3:	88 0a                	mov    BYTE PTR [rdx],cl
    d2d5:	e2 96                	loop   d26d <_IO_stdin_used+0x126d>
    d2d7:	88 e2                	mov    dl,ah
    d2d9:	96                   	xchg   esi,eax
    d2da:	88 e2                	mov    dl,ah
    d2dc:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d2e3:	88 e2                	mov    dl,ah
    d2e5:	96                   	xchg   esi,eax
    d2e6:	88 e2                	mov    dl,ah
    d2e8:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2ef:	88 e2                	mov    dl,ah
    d2f1:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2f8:	88 e2                	mov    dl,ah
    d2fa:	80 81 e2 80 81 e2 80 	add    BYTE PTR [rcx-0x1d7e7f1e],0x80
    d301:	81 e2 80 81 e2 80    	and    edx,0x80e28180
    d307:	81 e2 80 81 20 e2    	and    edx,0xe2208180
    d30d:	96                   	xchg   esi,eax
    d30e:	88 e2                	mov    dl,ah
    d310:	96                   	xchg   esi,eax
    d311:	88 e2                	mov    dl,ah
    d313:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d31a:	88 0a                	mov    BYTE PTR [rdx],cl
    d31c:	e2 96                	loop   d2b4 <_IO_stdin_used+0x12b4>
    d31e:	88 e2                	mov    dl,ah
    d320:	96                   	xchg   esi,eax
    d321:	88 e2                	mov    dl,ah
    d323:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d32a:	88 e2                	mov    dl,ah
    d32c:	96                   	xchg   esi,eax
    d32d:	88 e2                	mov    dl,ah
    d32f:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d336:	88 e2                	mov    dl,ah
    d338:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d33f:	88 e2                	mov    dl,ah
    d341:	80 81 20 20 e2 96 88 	add    BYTE PTR [rcx-0x691ddfe0],0x88
    d348:	e2 96                	loop   d2e0 <_IO_stdin_used+0x12e0>
    d34a:	88 e2                	mov    dl,ah
    d34c:	96                   	xchg   esi,eax
    d34d:	88 e2                	mov    dl,ah
    d34f:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d356:	88 e2                	mov    dl,ah
    d358:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d35f:	88 0a                	mov    BYTE PTR [rdx],cl
    d361:	e2 80                	loop   d2e3 <_IO_stdin_used+0x12e3>
    d363:	81 e2 96 88 e2 96    	and    edx,0x96e28896
    d369:	88 e2                	mov    dl,ah
    d36b:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    d372:	96                   	xchg   esi,eax
    d373:	88 e2                	mov    dl,ah
    d375:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    d37c:	88 e2                	mov    dl,ah
    d37e:	96                   	xchg   esi,eax
    d37f:	88 e2                	mov    dl,ah
    d381:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d388:	88 e2                	mov    dl,ah
    d38a:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d391:	88 e2                	mov    dl,ah
    d393:	96                   	xchg   esi,eax
    d394:	88 e2                	mov    dl,ah
    d396:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d39d:	88 e2                	mov    dl,ah
    d39f:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d3a6:	88 0a                	mov    BYTE PTR [rdx],cl
    d3a8:	20 e2                	and    dl,ah
    d3aa:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d3b1:	88 e2                	mov    dl,ah
    d3b3:	96                   	xchg   esi,eax
    d3b4:	88 e2                	mov    dl,ah
    d3b6:	96                   	xchg   esi,eax
    d3b7:	88 e2                	mov    dl,ah
    d3b9:	80 81 e2 80 81 20 e2 	add    BYTE PTR [rcx+0x208180e2],0xe2
    d3c0:	96                   	xchg   esi,eax
    d3c1:	88 e2                	mov    dl,ah
    d3c3:	96                   	xchg   esi,eax
    d3c4:	88 e2                	mov    dl,ah
    d3c6:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    d3cd:	88 e2                	mov    dl,ah
    d3cf:	96                   	xchg   esi,eax
    d3d0:	88 e2                	mov    dl,ah
    d3d2:	96                   	xchg   esi,eax
    d3d3:	88 e2                	mov    dl,ah
    d3d5:	96                   	xchg   esi,eax
    d3d6:	88 e2                	mov    dl,ah
    d3d8:	96                   	xchg   esi,eax
    d3d9:	88 e2                	mov    dl,ah
    d3db:	96                   	xchg   esi,eax
    d3dc:	88 e2                	mov    dl,ah
    d3de:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    d3e5:	88 e2                	mov    dl,ah
    d3e7:	96                   	xchg   esi,eax
    d3e8:	88 e2                	mov    dl,ah
    d3ea:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d3f1:	88 e2                	mov    dl,ah
    d3f3:	96                   	xchg   esi,eax
    d3f4:	88 e2                	mov    dl,ah
    d3f6:	96                   	xchg   esi,eax
    d3f7:	88 e2                	mov    dl,ah
    d3f9:	96                   	xchg   esi,eax
    d3fa:	88 e2                	mov    dl,ah
    d3fc:	96                   	xchg   esi,eax
    d3fd:	88 e2                	mov    dl,ah
    d3ff:	96                   	xchg   esi,eax
    d400:	88 00                	mov    BYTE PTR [rax],al
    d402:	00 00                	add    BYTE PTR [rax],al
    d404:	00 00                	add    BYTE PTR [rax],al
    d406:	00 00                	add    BYTE PTR [rax],al
    d408:	0a 00                	or     al,BYTE PTR [rax]
    d40a:	0d 00 00 00 00       	or     eax,0x0
    d40f:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    d412:	68 5f 73 65 72       	push   0x7265735f
    d417:	76 65                	jbe    d47e <_IO_stdin_used+0x147e>
    d419:	72 2e                	jb     d449 <_IO_stdin_used+0x1449>
    d41b:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d41d:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    d420:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    d427:	20 
    d428:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
    d42b:	61                   	(bad)  
    d42c:	74 65                	je     d493 <_IO_stdin_used+0x1493>
    d42e:	20 73 6f             	and    BYTE PTR [rbx+0x6f],dh
    d431:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d434:	74 00                	je     d436 <_IO_stdin_used+0x1436>
    d436:	00 00                	add    BYTE PTR [rax],al
    d438:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d439:	73 68                	jae    d4a3 <_IO_stdin_used+0x14a3>
    d43b:	5f                   	pop    rdi
    d43c:	73 65                	jae    d4a3 <_IO_stdin_used+0x14a3>
    d43e:	72 76                	jb     d4b6 <_IO_stdin_used+0x14b6>
    d440:	65 72 2e             	gs jb  d471 <_IO_stdin_used+0x1471>
    d443:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d445:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    d448:	69 6c 75 72 65 20 69 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6e692065
    d44f:	6e 
    d450:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d453:	74 73                	je     d4c8 <_IO_stdin_used+0x14c8>
    d455:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d456:	63 6b 6f             	movsxd ebp,DWORD PTR [rbx+0x6f]
    d459:	70 74                	jo     d4cf <_IO_stdin_used+0x14cf>
    d45b:	00 00                	add    BYTE PTR [rax],al
    d45d:	00 00                	add    BYTE PTR [rax],al
    d45f:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    d462:	68 5f 73 65 72       	push   0x7265735f
    d467:	76 65                	jbe    d4ce <_IO_stdin_used+0x14ce>
    d469:	72 2e                	jb     d499 <_IO_stdin_used+0x1499>
    d46b:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d46d:	20 62 69             	and    BYTE PTR [rdx+0x69],ah
    d470:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d471:	64 69 6e 67 20 6f 66 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x20666f20
    d478:	20 
    d479:	73 6f                	jae    d4ea <_IO_stdin_used+0x14ea>
    d47b:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d47e:	74 20                	je     d4a0 <_IO_stdin_used+0x14a0>
    d480:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    d482:	72 20                	jb     d4a4 <_IO_stdin_used+0x14a4>
    d484:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d485:	73 68                	jae    d4ef <_IO_stdin_used+0x14ef>
    d487:	5f                   	pop    rdi
    d488:	66 64 20 66 61       	data16 and BYTE PTR fs:[rsi+0x61],ah
    d48d:	69 6c 65 64 00 00 00 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
    d494:	00 
    d495:	00 00                	add    BYTE PTR [rax],al
    d497:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    d49a:	68 5f 73 65 72       	push   0x7265735f
    d49f:	76 65                	jbe    d506 <_IO_stdin_used+0x1506>
    d4a1:	72 2e                	jb     d4d1 <_IO_stdin_used+0x14d1>
    d4a3:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d4a5:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    d4a8:	69 6c 75 72 65 20 6f 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6e6f2065
    d4af:	6e 
    d4b0:	20 6c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],ch
    d4b4:	74 65                	je     d51b <_IO_stdin_used+0x151b>
    d4b6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d4b7:	69 6e 67 20 66 6f 72 	imul   ebp,DWORD PTR [rsi+0x67],0x726f6620
    d4be:	20 6e 73             	and    BYTE PTR [rsi+0x73],ch
    d4c1:	68 5f 66 64 00       	push   0x64665f
    d4c6:	00 00                	add    BYTE PTR [rax],al
    d4c8:	46 61                	rex.RX (bad) 
    d4ca:	69 6c 75 72 65 20 74 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f742065
    d4d1:	6f 
    d4d2:	20 61 63             	and    BYTE PTR [rcx+0x63],ah
    d4d5:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    d4d8:	74 20                	je     d4fa <_IO_stdin_used+0x14fa>
    d4da:	61                   	(bad)  
    d4db:	20 63 6c             	and    BYTE PTR [rbx+0x6c],ah
    d4de:	69 65 6e 74 20 61 74 	imul   esp,DWORD PTR [rbp+0x6e],0x74612074
    d4e5:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # df5e <_IO_stdin_used+0x1f5e>
    d4eb:	00 00                	add    BYTE PTR [rax],al
    d4ed:	00 00                	add    BYTE PTR [rax],al
    d4ef:	00 61 00             	add    BYTE PTR [rcx+0x0],ah
    d4f2:	00 00                	add    BYTE PTR [rax],al
    d4f4:	00 00                	add    BYTE PTR [rax],al
    d4f6:	00 00                	add    BYTE PTR [rax],al
    d4f8:	42 61                	rex.X (bad) 
    d4fa:	73 69                	jae    d565 <_IO_stdin_used+0x1565>
    d4fc:	63 20                	movsxd esp,DWORD PTR [rax]
    d4fe:	70 6f                	jo     d56f <_IO_stdin_used+0x156f>
    d500:	72 74                	jb     d576 <_IO_stdin_used+0x1576>
    d502:	73 63                	jae    d567 <_IO_stdin_used+0x1567>
    d504:	61                   	(bad)  
    d505:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d506:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d50a:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d50f:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d512:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d513:	6d                   	ins    DWORD PTR es:[rdi],dx
    d514:	20 49 50             	and    BYTE PTR [rcx+0x50],cl
    d517:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    d51a:	64 72 65             	fs jb  d582 <_IO_stdin_used+0x1582>
    d51d:	73 73                	jae    d592 <_IO_stdin_used+0x1592>
    d51f:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # df98 <_IO_stdin_used+0x1f98>
    d525:	00 00                	add    BYTE PTR [rax],al
    d527:	00 50 6f             	add    BYTE PTR [rax+0x6f],dl
    d52a:	72 74                	jb     d5a0 <_IO_stdin_used+0x15a0>
    d52c:	73 63                	jae    d591 <_IO_stdin_used+0x1591>
    d52e:	61                   	(bad)  
    d52f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d530:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d534:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d539:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d53c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d53d:	6d                   	ins    DWORD PTR es:[rdi],dx
    d53e:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461f5b7 <_end+0x744e45af>
    d544:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # dfbd <_IO_stdin_used+0x1fbd>
    d54a:	00 00                	add    BYTE PTR [rax],al
    d54c:	00 00                	add    BYTE PTR [rax],al
    d54e:	00 00                	add    BYTE PTR [rax],al
    d550:	46                   	rex.RX
    d551:	49                   	rex.WB
    d552:	4e 20 70 6f          	rex.WRX and BYTE PTR [rax+0x6f],r14b
    d556:	72 74                	jb     d5cc <_IO_stdin_used+0x15cc>
    d558:	73 63                	jae    d5bd <_IO_stdin_used+0x15bd>
    d55a:	61                   	(bad)  
    d55b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d55c:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d560:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d565:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d568:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d569:	6d                   	ins    DWORD PTR es:[rdi],dx
    d56a:	20 49 50             	and    BYTE PTR [rcx+0x50],cl
    d56d:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    d570:	64 72 65             	fs jb  d5d8 <_IO_stdin_used+0x15d8>
    d573:	73 73                	jae    d5e8 <_IO_stdin_used+0x15e8>
    d575:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # dfee <__GNU_EH_FRAME_HDR+0x12>
    d57b:	00 00                	add    BYTE PTR [rax],al
    d57d:	00 00                	add    BYTE PTR [rax],al
    d57f:	00 46 49             	add    BYTE PTR [rsi+0x49],al
    d582:	4e 20 70 6f          	rex.WRX and BYTE PTR [rax+0x6f],r14b
    d586:	72 74                	jb     d5fc <_IO_stdin_used+0x15fc>
    d588:	73 63                	jae    d5ed <_IO_stdin_used+0x15ed>
    d58a:	61                   	(bad)  
    d58b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d58c:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d590:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d595:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d598:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d599:	6d                   	ins    DWORD PTR es:[rdi],dx
    d59a:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461f613 <_end+0x744e460b>
    d5a0:	20 25 73 0a 00 30    	and    BYTE PTR [rip+0x30000a73],ah        # 3000e019 <_end+0x2fed3011>
    d5a6:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
    d5a9:	30 2e                	xor    BYTE PTR [rsi],ch
    d5ab:	31 00                	xor    DWORD PTR [rax],eax
    d5ad:	30 2e                	xor    BYTE PTR [rsi],ch
    d5af:	30 2e                	xor    BYTE PTR [rsi],ch
    d5b1:	30 2e                	xor    BYTE PTR [rsi],ch
    d5b3:	31 00                	xor    DWORD PTR [rax],eax
    d5b5:	00 00                	add    BYTE PTR [rax],al
    d5b7:	00 41 72             	add    BYTE PTR [rcx+0x72],al
    d5ba:	70 20                	jo     d5dc <_IO_stdin_used+0x15dc>
    d5bc:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d5be:	74 72                	je     d632 <_IO_stdin_used+0x1632>
    d5c0:	79 20                	jns    d5e2 <_IO_stdin_used+0x15e2>
    d5c2:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    d5c5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d5c6:	67 65 64 20 66 6f    	gs and BYTE PTR fs:[esi+0x6f],ah
    d5cc:	72 20                	jb     d5ee <_IO_stdin_used+0x15ee>
    d5ce:	69 70 20 61 64 64 72 	imul   esi,DWORD PTR [rax+0x20],0x72646461
    d5d5:	65 73 73             	gs jae d64b <_IO_stdin_used+0x164b>
    d5d8:	20 25 73 3a 20 77    	and    BYTE PTR [rip+0x77203a73],ah        # 77211051 <_end+0x770d6049>
    d5de:	61                   	(bad)  
    d5df:	73 20                	jae    d601 <_IO_stdin_used+0x1601>
    d5e1:	25 73 20 69 73       	and    eax,0x73692073
    d5e6:	20 6e 6f             	and    BYTE PTR [rsi+0x6f],ch
    d5e9:	77 20                	ja     d60b <_IO_stdin_used+0x160b>
    d5eb:	25 73 00 72 00       	and    eax,0x720073
    d5f0:	2f                   	(bad)  
    d5f1:	75 73                	jne    d666 <_IO_stdin_used+0x1666>
    d5f3:	72 2f                	jb     d624 <_IO_stdin_used+0x1624>
    d5f5:	73 68                	jae    d65f <_IO_stdin_used+0x165f>
    d5f7:	61                   	(bad)  
    d5f8:	72 65                	jb     d65f <_IO_stdin_used+0x165f>
    d5fa:	2f                   	(bad)  
    d5fb:	76 69                	jbe    d666 <_IO_stdin_used+0x1666>
    d5fd:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    d604:	63 61 
    d606:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    d609:	2e 63 73 76          	cs movsxd esi,DWORD PTR [rbx+0x76]
    d60d:	00 00                	add    BYTE PTR [rax],al
    d60f:	00 43 6f             	add    BYTE PTR [rbx+0x6f],al
    d612:	75 6c                	jne    d680 <_IO_stdin_used+0x1680>
    d614:	64 20 6e 6f          	and    BYTE PTR fs:[rsi+0x6f],ch
    d618:	74 20                	je     d63a <_IO_stdin_used+0x163a>
    d61a:	6c                   	ins    BYTE PTR es:[rdi],dx
    d61b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d61c:	61                   	(bad)  
    d61d:	64 20 61 72          	and    BYTE PTR fs:[rcx+0x72],ah
    d621:	70 20                	jo     d643 <_IO_stdin_used+0x1643>
    d623:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    d626:	68 65 20 66 72       	push   0x72662065
    d62b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d62c:	6d                   	ins    DWORD PTR es:[rdi],dx
    d62d:	20 64 61 74          	and    BYTE PTR [rcx+riz*2+0x74],ah
    d631:	61                   	(bad)  
    d632:	62 61                	(bad)  
    d634:	73 65                	jae    d69b <_IO_stdin_used+0x169b>
    d636:	2c 20                	sub    al,0x20
    d638:	66 69 6c 65 20 6e 6f 	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f6e
    d63f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d640:	65 78 69             	gs js  d6ac <_IO_stdin_used+0x16ac>
    d643:	73 74                	jae    d6b9 <_IO_stdin_used+0x16b9>
    d645:	61                   	(bad)  
    d646:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d647:	74 00                	je     d649 <_IO_stdin_used+0x1649>
    d649:	0a 00                	or     al,BYTE PTR [rax]
    d64b:	2c 00                	sub    al,0x0
    d64d:	00 00                	add    BYTE PTR [rax],al
    d64f:	00 55 70             	add    BYTE PTR [rbp+0x70],dl
    d652:	64 61                	fs (bad) 
    d654:	74 69                	je     d6bf <_IO_stdin_used+0x16bf>
    d656:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d657:	67 20 64 62 00       	and    BYTE PTR [edx+eiz*2+0x0],ah
    d65c:	53                   	push   rbx
    d65d:	51                   	push   rcx
    d65e:	6c                   	ins    BYTE PTR es:[rdi],dx
    d65f:	69 74 65 20 65 72 72 	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x6f727265
    d666:	6f 
    d667:	72 3a                	jb     d6a3 <_IO_stdin_used+0x16a3>
    d669:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # e0e2 <__GNU_EH_FRAME_HDR+0x106>
    d66f:	00 49 4e             	add    BYTE PTR [rcx+0x4e],cl
    d672:	53                   	push   rbx
    d673:	45 52                	rex.RB push r10
    d675:	54                   	push   rsp
    d676:	20 49 4e             	and    BYTE PTR [rcx+0x4e],cl
    d679:	54                   	push   rsp
    d67a:	4f 20 61 72          	rex.WRXB and BYTE PTR [r9+0x72],r12b
    d67e:	70 5f                	jo     d6df <_IO_stdin_used+0x16df>
    d680:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    d683:	68 65 20 28 69       	push   0x69282065
    d688:	70 5f                	jo     d6e9 <_IO_stdin_used+0x16e9>
    d68a:	61                   	(bad)  
    d68b:	64 64 72 65          	fs fs jb d6f4 <_IO_stdin_used+0x16f4>
    d68f:	73 73                	jae    d704 <_IO_stdin_used+0x1704>
    d691:	2c 20                	sub    al,0x20
    d693:	6d                   	ins    DWORD PTR es:[rdi],dx
    d694:	61                   	(bad)  
    d695:	63 5f 61             	movsxd ebx,DWORD PTR [rdi+0x61]
    d698:	64 64 72 65          	fs fs jb d701 <_IO_stdin_used+0x1701>
    d69c:	73 73                	jae    d711 <_IO_stdin_used+0x1711>
    d69e:	29 20                	sub    DWORD PTR [rax],esp
    d6a0:	56                   	push   rsi
    d6a1:	41                   	rex.B
    d6a2:	4c 55                	rex.WR push rbp
    d6a4:	45 53                	rex.RB push r11
    d6a6:	20 28                	and    BYTE PTR [rax],ch
    d6a8:	22 25 73 22 2c 20    	and    ah,BYTE PTR [rip+0x202c2273]        # 202cf921 <_end+0x20194919>
    d6ae:	22 25 73 22 29 3b    	and    ah,BYTE PTR [rip+0x3b292273]        # 3b29f927 <_end+0x3b16491f>
    d6b4:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    d6b7:	4c 69 74 65 20 65 6e 	imul   r14,QWORD PTR [rbp+riz*2+0x20],0x6f636e65
    d6be:	63 6f 
    d6c0:	75 6e                	jne    d730 <_IO_stdin_used+0x1730>
    d6c2:	74 65                	je     d729 <_IO_stdin_used+0x1729>
    d6c4:	72 65                	jb     d72b <_IO_stdin_used+0x172b>
    d6c6:	64 20 65 72          	and    BYTE PTR fs:[rbp+0x72],ah
    d6ca:	72 6f                	jb     d73b <_IO_stdin_used+0x173b>
    d6cc:	72 3a                	jb     d708 <_IO_stdin_used+0x1708>
    d6ce:	20 25 73 0a 00 2f    	and    BYTE PTR [rip+0x2f000a73],ah        # 2f00e147 <_end+0x2eed313f>
    d6d4:	75 73                	jne    d749 <_IO_stdin_used+0x1749>
    d6d6:	72 2f                	jb     d707 <_IO_stdin_used+0x1707>
    d6d8:	73 68                	jae    d742 <_IO_stdin_used+0x1742>
    d6da:	61                   	(bad)  
    d6db:	72 65                	jb     d742 <_IO_stdin_used+0x1742>
    d6dd:	2f                   	(bad)  
    d6de:	76 69                	jbe    d749 <_IO_stdin_used+0x1749>
    d6e0:	67 69 6c 2f 73 70 69 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x642e6970
    d6e7:	2e 64 
    d6e9:	62                   	(bad)  
    d6ea:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    d6ed:	4c 69 74 65 20 65 72 	imul   r14,QWORD PTR [rbp+riz*2+0x20],0x6f727265
    d6f4:	72 6f 
    d6f6:	72 20                	jb     d718 <_IO_stdin_used+0x1718>
    d6f8:	25 73 0a 00 00       	and    eax,0xa73
    d6fd:	00 00                	add    BYTE PTR [rax],al
    d6ff:	00 49 4e             	add    BYTE PTR [rcx+0x4e],cl
    d702:	53                   	push   rbx
    d703:	45 52                	rex.RB push r10
    d705:	54                   	push   rsp
    d706:	20 49 4e             	and    BYTE PTR [rcx+0x4e],cl
    d709:	54                   	push   rsp
    d70a:	4f 20 73 70          	rex.WRXB and BYTE PTR [r11+0x70],r14b
    d70e:	69 5f 74 61 62 6c 65 	imul   ebx,DWORD PTR [rdi+0x74],0x656c6261
    d715:	20 28                	and    BYTE PTR [rax],ch
    d717:	73 65                	jae    d77e <_IO_stdin_used+0x177e>
    d719:	72 76                	jb     d791 <_IO_stdin_used+0x1791>
    d71b:	5f                   	pop    rdi
    d71c:	61                   	(bad)  
    d71d:	64 64 72 2c          	fs fs jb d74d <_IO_stdin_used+0x174d>
    d721:	20 63 6c             	and    BYTE PTR [rbx+0x6c],ah
    d724:	69 5f 61 64 64 72 2c 	imul   ebx,DWORD PTR [rdi+0x61],0x2c726464
    d72b:	73 65                	jae    d792 <_IO_stdin_used+0x1792>
    d72d:	72 76                	jb     d7a5 <_IO_stdin_used+0x17a5>
    d72f:	5f                   	pop    rdi
    d730:	70 6f                	jo     d7a1 <_IO_stdin_used+0x17a1>
    d732:	72 74                	jb     d7a8 <_IO_stdin_used+0x17a8>
    d734:	2c 63                	sub    al,0x63
    d736:	6c                   	ins    BYTE PTR es:[rdi],dx
    d737:	69 5f 70 6f 72 74 2c 	imul   ebx,DWORD PTR [rdi+0x70],0x2c74726f
    d73e:	73 65                	jae    d7a5 <_IO_stdin_used+0x17a5>
    d740:	72 76                	jb     d7b8 <_IO_stdin_used+0x17b8>
    d742:	5f                   	pop    rdi
    d743:	70 6b                	jo     d7b0 <_IO_stdin_used+0x17b0>
    d745:	74 5f                	je     d7a6 <_IO_stdin_used+0x17a6>
    d747:	73 65                	jae    d7ae <_IO_stdin_used+0x17ae>
    d749:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d74a:	74 2c                	je     d778 <_IO_stdin_used+0x1778>
    d74c:	63 6c 69 5f          	movsxd ebp,DWORD PTR [rcx+rbp*2+0x5f]
    d750:	70 6b                	jo     d7bd <_IO_stdin_used+0x17bd>
    d752:	74 5f                	je     d7b3 <_IO_stdin_used+0x17b3>
    d754:	73 65                	jae    d7bb <_IO_stdin_used+0x17bb>
    d756:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d757:	74 2c                	je     d785 <_IO_stdin_used+0x1785>
    d759:	73 65                	jae    d7c0 <_IO_stdin_used+0x17c0>
    d75b:	72 76                	jb     d7d3 <_IO_stdin_used+0x17d3>
    d75d:	5f                   	pop    rdi
    d75e:	70 6b                	jo     d7cb <_IO_stdin_used+0x17cb>
    d760:	74 5f                	je     d7c1 <_IO_stdin_used+0x17c1>
    d762:	72 65                	jb     d7c9 <_IO_stdin_used+0x17c9>
    d764:	63 76 2c             	movsxd esi,DWORD PTR [rsi+0x2c]
    d767:	63 6c 69 5f          	movsxd ebp,DWORD PTR [rcx+rbp*2+0x5f]
    d76b:	70 6b                	jo     d7d8 <_IO_stdin_used+0x17d8>
    d76d:	74 5f                	je     d7ce <_IO_stdin_used+0x17ce>
    d76f:	72 65                	jb     d7d6 <_IO_stdin_used+0x17d6>
    d771:	63 76 2c             	movsxd esi,DWORD PTR [rsi+0x2c]
    d774:	70 72                	jo     d7e8 <_IO_stdin_used+0x17e8>
    d776:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d777:	74 6f                	je     d7e8 <_IO_stdin_used+0x17e8>
    d779:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    d77c:	2c 61                	sub    al,0x61
    d77e:	76 67                	jbe    d7e7 <_IO_stdin_used+0x17e7>
    d780:	5f                   	pop    rdi
    d781:	70 70                	jo     d7f3 <_IO_stdin_used+0x17f3>
    d783:	73 2c                	jae    d7b1 <_IO_stdin_used+0x17b1>
    d785:	73 74                	jae    d7fb <_IO_stdin_used+0x17fb>
    d787:	61                   	(bad)  
    d788:	72 74                	jb     d7fe <_IO_stdin_used+0x17fe>
    d78a:	5f                   	pop    rdi
    d78b:	74 69                	je     d7f6 <_IO_stdin_used+0x17f6>
    d78d:	6d                   	ins    DWORD PTR es:[rdi],dx
    d78e:	65 2c 65             	gs sub al,0x65
    d791:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d792:	64 5f                	fs pop rdi
    d794:	74 69                	je     d7ff <_IO_stdin_used+0x17ff>
    d796:	6d                   	ins    DWORD PTR es:[rdi],dx
    d797:	65 2c 64             	gs sub al,0x64
    d79a:	61                   	(bad)  
    d79b:	74 61                	je     d7fe <_IO_stdin_used+0x17fe>
    d79d:	5f                   	pop    rdi
    d79e:	70 6b                	jo     d80b <_IO_stdin_used+0x180b>
    d7a0:	74 73                	je     d815 <_IO_stdin_used+0x1815>
    d7a2:	2c 63                	sub    al,0x63
    d7a4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d7a5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d7a6:	74 72                	je     d81a <_IO_stdin_used+0x181a>
    d7a8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d7a9:	6c                   	ins    BYTE PTR es:[rdi],dx
    d7aa:	5f                   	pop    rdi
    d7ab:	70 6b                	jo     d818 <_IO_stdin_used+0x1818>
    d7ad:	74 73                	je     d822 <_IO_stdin_used+0x1822>
    d7af:	29 20                	sub    DWORD PTR [rax],esp
    d7b1:	56                   	push   rsi
    d7b2:	41                   	rex.B
    d7b3:	4c 55                	rex.WR push rbp
    d7b5:	45 53                	rex.RB push r11
    d7b7:	20 28                	and    BYTE PTR [rax],ch
    d7b9:	22 25 73 22 2c 22    	and    ah,BYTE PTR [rip+0x222c2273]        # 222cfa32 <_end+0x22194a2a>
    d7bf:	25 73 22 2c 25       	and    eax,0x252c2273
    d7c4:	6c                   	ins    BYTE PTR es:[rdi],dx
    d7c5:	64 2c 25             	fs sub al,0x25
    d7c8:	6c                   	ins    BYTE PTR es:[rdi],dx
    d7c9:	64 2c 25             	fs sub al,0x25
    d7cc:	64 2c 25             	fs sub al,0x25
    d7cf:	64 2c 25             	fs sub al,0x25
    d7d2:	64 2c 25             	fs sub al,0x25
    d7d5:	64 2c 25             	fs sub al,0x25
    d7d8:	64 2c 25             	fs sub al,0x25
    d7db:	64 2c 25             	fs sub al,0x25
    d7de:	6c                   	ins    BYTE PTR es:[rdi],dx
    d7df:	64 2c 25             	fs sub al,0x25
    d7e2:	6c                   	ins    BYTE PTR es:[rdi],dx
    d7e3:	64 2c 25             	fs sub al,0x25
    d7e6:	64 2c 25             	fs sub al,0x25
    d7e9:	64 29 3b             	sub    DWORD PTR fs:[rbx],edi
    d7ec:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    d7ef:	4c                   	rex.WR
    d7f0:	49 54                	rex.WB push r12
    d7f2:	45 20 45 6e          	and    BYTE PTR [r13+0x6e],r8b
    d7f6:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    d7f9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d7fa:	74 65                	je     d861 <_IO_stdin_used+0x1861>
    d7fc:	72 65                	jb     d863 <_IO_stdin_used+0x1863>
    d7fe:	64 20 65 72          	and    BYTE PTR fs:[rbp+0x72],ah
    d802:	72 6f                	jb     d873 <_IO_stdin_used+0x1873>
    d804:	72 3a                	jb     d840 <_IO_stdin_used+0x1840>
    d806:	20 25 73 0a 00 53    	and    BYTE PTR [rip+0x53000a73],ah        # 5300e27f <_end+0x52ed3277>
    d80c:	74 72                	je     d880 <_IO_stdin_used+0x1880>
    d80e:	6c                   	ins    BYTE PTR es:[rdi],dx
    d80f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d810:	63 20                	movsxd esp,DWORD PTR [rax]
    d812:	73 75                	jae    d889 <_IO_stdin_used+0x1889>
    d814:	63 63 65             	movsxd esp,DWORD PTR [rbx+0x65]
    d817:	73 73                	jae    d88c <_IO_stdin_used+0x188c>
    d819:	66 75 6c             	data16 jne d888 <_IO_stdin_used+0x1888>
    d81c:	00 51 75             	add    BYTE PTR [rcx+0x75],dl
    d81f:	65 72 79             	gs jb  d89b <_IO_stdin_used+0x189b>
    d822:	3a 20                	cmp    ah,BYTE PTR [rax]
    d824:	25 73 0a 00 4c       	and    eax,0x4c000a73
    d829:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d82a:	67 69 6e 20 69 6e 63 	imul   ebp,DWORD PTR [esi+0x20],0x6f636e69
    d831:	6f 
    d832:	72 72                	jb     d8a6 <_IO_stdin_used+0x18a6>
    d834:	65 63 74 00 6c       	movsxd esi,DWORD PTR gs:[rax+rax*1+0x6c]
    d839:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d83a:	67 69 6e 20 69 6e 63 	imul   ebp,DWORD PTR [esi+0x20],0x6f636e69
    d841:	6f 
    d842:	72 72                	jb     d8b6 <_IO_stdin_used+0x18b6>
    d844:	65 63 74 00 50       	movsxd esi,DWORD PTR gs:[rax+rax*1+0x50]
    d849:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d84a:	73 73                	jae    d8bf <_IO_stdin_used+0x18bf>
    d84c:	69 62 6c 65 20 46 54 	imul   esp,DWORD PTR [rdx+0x6c],0x54462065
    d853:	50                   	push   rax
    d854:	20 62 72             	and    BYTE PTR [rdx+0x72],ah
    d857:	75 74                	jne    d8cd <_IO_stdin_used+0x18cd>
    d859:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    d85d:	72 63                	jb     d8c2 <_IO_stdin_used+0x18c2>
    d85f:	65 20 61 74          	and    BYTE PTR gs:[rcx+0x74],ah
    d863:	74 65                	je     d8ca <_IO_stdin_used+0x18ca>
    d865:	6d                   	ins    DWORD PTR es:[rdi],dx
    d866:	70 74                	jo     d8dc <_IO_stdin_used+0x18dc>
    d868:	3a 20                	cmp    ah,BYTE PTR [rax]
    d86a:	25 73 28 73 75       	and    eax,0x75732873
    d86f:	73 70                	jae    d8e1 <_IO_stdin_used+0x18e1>
    d871:	65 63 74 29 20       	movsxd esi,DWORD PTR gs:[rcx+rbp*1+0x20]
    d876:	2d 3e 20 25 73       	sub    eax,0x7325203e
    d87b:	2e 20 25 64 20 66 61 	cs and BYTE PTR [rip+0x61662064],ah        # 6166f8e6 <_end+0x615348de>
    d882:	69 6c 65 64 20 6c 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x676f6c20
    d889:	67 
    d88a:	69 6e 73 0a 00 00 53 	imul   ebp,DWORD PTR [rsi+0x73],0x5300000a
    d891:	50                   	push   rax
    d892:	49 20 54 41 42       	rex.WB and BYTE PTR [r9+rax*2+0x42],dl
    d897:	4c                   	rex.WR
    d898:	45 20 52 45          	and    BYTE PTR [r10+0x45],r10b
    d89c:	54                   	push   rsp
    d89d:	52                   	push   rdx
    d89e:	41                   	rex.B
    d89f:	4e 53                	rex.WRX push rbx
    d8a1:	3a 20                	cmp    ah,BYTE PTR [rax]
    d8a3:	25 64 3a 20 25       	and    eax,0x25203a64
    d8a8:	73 3a                	jae    d8e4 <_IO_stdin_used+0x18e4>
    d8aa:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    d8af:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64261328 <_end+0x64126320>
    d8b5:	0a 00                	or     al,BYTE PTR [rax]
    d8b7:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d8ba:	49 20 4e 45          	rex.WB and BYTE PTR [r14+0x45],cl
    d8be:	57                   	push   rdi
    d8bf:	20 43 4f             	and    BYTE PTR [rbx+0x4f],al
    d8c2:	4e 56                	rex.WRX push rsi
    d8c4:	3a 20                	cmp    ah,BYTE PTR [rax]
    d8c6:	25 64 3a 20 25       	and    eax,0x25203a64
    d8cb:	73 3a                	jae    d907 <_IO_stdin_used+0x1907>
    d8cd:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    d8d2:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 6426134b <_end+0x64126343>
    d8d8:	0a 00                	or     al,BYTE PTR [rax]
    d8da:	00 00                	add    BYTE PTR [rax],al
    d8dc:	00 00                	add    BYTE PTR [rax],al
    d8de:	00 00                	add    BYTE PTR [rax],al
    d8e0:	53                   	push   rbx
    d8e1:	50                   	push   rax
    d8e2:	49 20 54 57 48       	rex.WB and BYTE PTR [r15+rdx*2+0x48],dl
    d8e7:	20 32                	and    BYTE PTR [rdx],dh
    d8e9:	2f                   	(bad)  
    d8ea:	33 3a                	xor    edi,DWORD PTR [rdx]
    d8ec:	20 25 64 3a 20 25    	and    BYTE PTR [rip+0x25203a64],ah        # 25211356 <_end+0x250d634e>
    d8f2:	73 3a                	jae    d92e <_IO_stdin_used+0x192e>
    d8f4:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    d8f9:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64261372 <_end+0x6412636a>
    d8ff:	0a 00                	or     al,BYTE PTR [rax]
    d901:	00 00                	add    BYTE PTR [rax],al
    d903:	00 00                	add    BYTE PTR [rax],al
    d905:	00 00                	add    BYTE PTR [rax],al
    d907:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d90a:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d90e:	54                   	push   rsp
    d90f:	52                   	push   rdx
    d910:	59                   	pop    rcx
    d911:	3a 20                	cmp    ah,BYTE PTR [rax]
    d913:	25 64 3a 20 53       	and    eax,0x53203a64
    d918:	45 53                	rex.RB push r11
    d91a:	53                   	push   rbx
    d91b:	49                   	rex.WB
    d91c:	4f                   	rex.WRXB
    d91d:	4e 20 45 53          	rex.WRX and BYTE PTR [rbp+0x53],r8b
    d921:	54                   	push   rsp
    d922:	3a 20                	cmp    ah,BYTE PTR [rax]
    d924:	25 73 3a 25 64       	and    eax,0x64253a73
    d929:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325f96d <_end+0x73124965>
    d92f:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e399 <__GNU_EH_FRAME_HDR+0x3bd>
    d935:	00 00                	add    BYTE PTR [rax],al
    d937:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d93a:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d93e:	54                   	push   rsp
    d93f:	52                   	push   rdx
    d940:	59                   	pop    rcx
    d941:	3a 20                	cmp    ah,BYTE PTR [rax]
    d943:	25 64 3a 20 50       	and    eax,0x50203a64
    d948:	4f                   	rex.WRXB
    d949:	4c                   	rex.WR
    d94a:	49 54                	rex.WB push r12
    d94c:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    d950:	4e 56                	rex.WRX push rsi
    d952:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    d955:	44 20 33             	and    BYTE PTR [rbx],r14b
    d958:	2f                   	(bad)  
    d959:	33 3a                	xor    edi,DWORD PTR [rdx]
    d95b:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642613d4 <_end+0x641263cc>
    d961:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325f9a5 <_end+0x7312499d>
    d967:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e3d1 <__GNU_EH_FRAME_HDR+0x3f5>
    d96d:	00 00                	add    BYTE PTR [rax],al
    d96f:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d972:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d976:	54                   	push   rsp
    d977:	52                   	push   rdx
    d978:	59                   	pop    rcx
    d979:	3a 20                	cmp    ah,BYTE PTR [rax]
    d97b:	25 64 3a 20 50       	and    eax,0x50203a64
    d980:	4f                   	rex.WRXB
    d981:	4c                   	rex.WR
    d982:	49 54                	rex.WB push r12
    d984:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    d988:	4e 56                	rex.WRX push rsi
    d98a:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    d98d:	44 20 32             	and    BYTE PTR [rdx],r14b
    d990:	2f                   	(bad)  
    d991:	33 3a                	xor    edi,DWORD PTR [rdx]
    d993:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 6426140c <_end+0x64126404>
    d999:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325f9dd <_end+0x731249d5>
    d99f:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e409 <__GNU_EH_FRAME_HDR+0x42d>
    d9a5:	00 00                	add    BYTE PTR [rax],al
    d9a7:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d9aa:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d9ae:	54                   	push   rsp
    d9af:	52                   	push   rdx
    d9b0:	59                   	pop    rcx
    d9b1:	3a 20                	cmp    ah,BYTE PTR [rax]
    d9b3:	25 64 3a 20 50       	and    eax,0x50203a64
    d9b8:	4f                   	rex.WRXB
    d9b9:	4c                   	rex.WR
    d9ba:	49 54                	rex.WB push r12
    d9bc:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    d9c0:	4e 56                	rex.WRX push rsi
    d9c2:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    d9c5:	44 20 31             	and    BYTE PTR [rcx],r14b
    d9c8:	2f                   	(bad)  
    d9c9:	33 3a                	xor    edi,DWORD PTR [rdx]
    d9cb:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64261444 <_end+0x6412643c>
    d9d1:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fa15 <_end+0x73124a0d>
    d9d7:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e441 <__GNU_EH_FRAME_HDR+0x465>
    d9dd:	00 00                	add    BYTE PTR [rax],al
    d9df:	00 61 00             	add    BYTE PTR [rcx+0x0],ah
    d9e2:	00 00                	add    BYTE PTR [rax],al
    d9e4:	00 00                	add    BYTE PTR [rax],al
    d9e6:	00 00                	add    BYTE PTR [rax],al
    d9e8:	43 52                	rex.XB push r10
    d9ea:	49 54                	rex.WB push r12
    d9ec:	49                   	rex.WB
    d9ed:	43                   	rex.XB
    d9ee:	41                   	rex.B
    d9ef:	4c 20 46 41          	rex.WR and BYTE PTR [rsi+0x41],r8b
    d9f3:	49                   	rex.WB
    d9f4:	4c                   	rex.WR
    d9f5:	45                   	rex.RB
    d9f6:	44 20 54 4f 20       	and    BYTE PTR [rdi+rcx*2+0x20],r10b
    d9fb:	4f 50                	rex.WRXB push r8
    d9fd:	45                   	rex.RB
    d9fe:	4e 20 46 49          	rex.WRX and BYTE PTR [rsi+0x49],r8b
    da02:	4c                   	rex.WR
    da03:	45 20 46 4f          	and    BYTE PTR [r14+0x4f],r8b
    da07:	52                   	push   rdx
    da08:	20 4c 4f 47          	and    BYTE PTR [rdi+rcx*2+0x47],cl
    da0c:	47                   	rex.RXB
    da0d:	49                   	rex.WB
    da0e:	4e                   	rex.WRX
    da0f:	47 3a 20             	rex.RXB cmp r12b,BYTE PTR [r8]
    da12:	25 73 0a 00 25       	and    eax,0x25000a73
    da17:	73 20                	jae    da39 <_IO_stdin_used+0x1a39>
    da19:	25 73 20 25 73       	and    eax,0x73252073
    da1e:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fa62 <_end+0x73124a5a>
    da24:	0a 00                	or     al,BYTE PTR [rax]
    da26:	25 73 20 25 73       	and    eax,0x73252073
    da2b:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642614a4 <_end+0x6412649c>
    da31:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fa75 <_end+0x73124a6d>
    da37:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e4a1 <__GNU_EH_FRAME_HDR+0x4c5>
    da3d:	00 00                	add    BYTE PTR [rax],al
    da3f:	00 61 6e             	add    BYTE PTR [rcx+0x6e],ah
    da42:	79 00                	jns    da44 <_IO_stdin_used+0x1a44>
    da44:	41                   	rex.B
    da45:	4e 59                	rex.WRX pop rcx
    da47:	00 49 43             	add    BYTE PTR [rcx+0x43],cl
    da4a:	4d 50                	rex.WRB push r8
    da4c:	00 54 43 50          	add    BYTE PTR [rbx+rax*2+0x50],dl
    da50:	00 55 44             	add    BYTE PTR [rbp+0x44],dl
    da53:	50                   	push   rax
    da54:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    da57:	72 5f                	jb     dab8 <_IO_stdin_used+0x1ab8>
    da59:	6d                   	ins    DWORD PTR es:[rdi],dx
    da5a:	61                   	(bad)  
    da5b:	74 63                	je     dac0 <_IO_stdin_used+0x1ac0>
    da5d:	68 00 6e 6f 6e       	push   0x6e6f6e00
    da62:	65 00 70 63          	add    BYTE PTR gs:[rax+0x63],dh
    da66:	72 65                	jb     dacd <_IO_stdin_used+0x1acd>
    da68:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    da6b:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    da6f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    da70:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    da73:	6c                   	ins    BYTE PTR es:[rdi],dx
    da74:	65 20 74 79 70       	and    BYTE PTR gs:[rcx+rdi*2+0x70],dh
    da79:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    da7c:	25 73 0a 00 3b       	and    eax,0x3b000a73
    da81:	00 46 6f             	add    BYTE PTR [rsi+0x6f],al
    da84:	75 6e                	jne    daf4 <_IO_stdin_used+0x1af4>
    da86:	64 20 6f 70          	and    BYTE PTR fs:[rdi+0x70],ch
    da8a:	65 72 61             	gs jb  daee <_IO_stdin_used+0x1aee>
    da8d:	74 6f                	je     dafe <_IO_stdin_used+0x1afe>
    da8f:	72 00                	jb     da91 <_IO_stdin_used+0x1a91>
    da91:	61                   	(bad)  
    da92:	6c                   	ins    BYTE PTR es:[rdi],dx
    da93:	65 72 74             	gs jb  db0a <_IO_stdin_used+0x1b0a>
    da96:	00 24 68             	add    BYTE PTR [rax+rbp*2],ah
    da99:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    da9a:	6d                   	ins    DWORD PTR es:[rdi],dx
    da9b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    da9d:	65 74 00             	gs je  daa0 <_IO_stdin_used+0x1aa0>
    daa0:	2d 3e 00 3c 3e       	sub    eax,0x3e3c003e
    daa5:	00 24 65 78 74 65 72 	add    BYTE PTR [riz*2+0x72657478],ah
    daac:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    daad:	61                   	(bad)  
    daae:	6c                   	ins    BYTE PTR es:[rdi],dx
    daaf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dab0:	65 74 00             	gs je  dab3 <_IO_stdin_used+0x1ab3>
    dab3:	22 3b                	and    bh,BYTE PTR [rbx]
    dab5:	00 6e 61             	add    BYTE PTR [rsi+0x61],ch
    dab8:	6d                   	ins    DWORD PTR es:[rdi],dx
    dab9:	65 3a 22             	cmp    ah,BYTE PTR gs:[rdx]
    dabc:	00 6d 73             	add    BYTE PTR [rbp+0x73],ch
    dabf:	67 3a 22             	cmp    ah,BYTE PTR [edx]
    dac2:	00 64 65 70          	add    BYTE PTR [rbp+riz*2+0x70],ah
    dac6:	74 68                	je     db30 <_IO_stdin_used+0x1b30>
    dac8:	3a 00                	cmp    al,BYTE PTR [rax]
    daca:	74 79                	je     db45 <_IO_stdin_used+0x1b45>
    dacc:	70 65                	jo     db33 <_IO_stdin_used+0x1b33>
    dace:	3a 00                	cmp    al,BYTE PTR [rax]
    dad0:	74 61                	je     db33 <_IO_stdin_used+0x1b33>
    dad2:	72 67                	jb     db3b <_IO_stdin_used+0x1b3b>
    dad4:	65 74 3a             	gs je  db11 <_IO_stdin_used+0x1b11>
    dad7:	22 00                	and    al,BYTE PTR [rax]
    dad9:	73 65                	jae    db40 <_IO_stdin_used+0x1b40>
    dadb:	76 3a                	jbe    db17 <_IO_stdin_used+0x1b17>
    dadd:	00 00                	add    BYTE PTR [rax],al
    dadf:	00 52 75             	add    BYTE PTR [rdx+0x75],dl
    dae2:	6c                   	ins    BYTE PTR es:[rdi],dx
    dae3:	65 20 73 65          	and    BYTE PTR gs:[rbx+0x65],dh
    dae7:	76 65                	jbe    db4e <_IO_stdin_used+0x1b4e>
    dae9:	72 69                	jb     db54 <_IO_stdin_used+0x1b54>
    daeb:	74 79                	je     db66 <_IO_stdin_used+0x1b66>
    daed:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    daf0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    daf1:	75 6c                	jne    db5f <_IO_stdin_used+0x1b5f>
    daf3:	64 20 62 65          	and    BYTE PTR fs:[rdx+0x65],ah
    daf7:	20 3e                	and    BYTE PTR [rsi],bh
    daf9:	20 30                	and    BYTE PTR [rax],dh
    dafb:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    dafe:	64 20 3c 3d 20 31 30 	and    BYTE PTR fs:[rdi*1+0x303120],bh
    db05:	00 
    db06:	00 00                	add    BYTE PTR [rax],al
    db08:	52                   	push   rdx
    db09:	75 6c                	jne    db77 <_IO_stdin_used+0x1b77>
    db0b:	65 20 73 65          	and    BYTE PTR gs:[rbx+0x65],dh
    db0f:	76 65                	jbe    db76 <_IO_stdin_used+0x1b76>
    db11:	72 69                	jb     db7c <_IO_stdin_used+0x1b7c>
    db13:	74 79                	je     db8e <_IO_stdin_used+0x1b8e>
    db15:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    db18:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    db19:	75 6c                	jne    db87 <_IO_stdin_used+0x1b87>
    db1b:	64 20 62 65          	and    BYTE PTR fs:[rdx+0x65],ah
    db1f:	20 61 20             	and    BYTE PTR [rcx+0x20],ah
    db22:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db23:	75 6d                	jne    db92 <_IO_stdin_used+0x1b92>
    db25:	65 72 69             	gs jb  db91 <_IO_stdin_used+0x1b91>
    db28:	63 20                	movsxd esp,DWORD PTR [rax]
    db2a:	76 61                	jbe    db8d <_IO_stdin_used+0x1b8d>
    db2c:	6c                   	ins    BYTE PTR es:[rdi],dx
    db2d:	75 65                	jne    db94 <_IO_stdin_used+0x1b94>
    db2f:	00 69 74             	add    BYTE PTR [rcx+0x74],ch
    db32:	79 70                	jns    dba4 <_IO_stdin_used+0x1ba4>
    db34:	65 3a 00             	cmp    al,BYTE PTR gs:[rax]
    db37:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    db39:	76 61                	jbe    db9c <_IO_stdin_used+0x1b9c>
    db3b:	6c                   	ins    BYTE PTR es:[rdi],dx
    db3c:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    db43:	20 
    db44:	74 79                	je     dbbf <_IO_stdin_used+0x1bbf>
    db46:	70 65                	jo     dbad <_IO_stdin_used+0x1bad>
    db48:	20 76 61             	and    BYTE PTR [rsi+0x61],dh
    db4b:	6c                   	ins    BYTE PTR es:[rdi],dx
    db4c:	75 65                	jne    dbb3 <_IO_stdin_used+0x1bb3>
    db4e:	00 00                	add    BYTE PTR [rax],al
    db50:	25 73 3a 20 69       	and    eax,0x69203a73
    db55:	74 79                	je     dbd0 <_IO_stdin_used+0x1bd0>
    db57:	70 65                	jo     dbbe <_IO_stdin_used+0x1bbe>
    db59:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    db5c:	6c                   	ins    BYTE PTR es:[rdi],dx
    db5d:	79 20                	jns    db7f <_IO_stdin_used+0x1b7f>
    db5f:	61                   	(bad)  
    db60:	70 70                	jo     dbd2 <_IO_stdin_used+0x1bd2>
    db62:	6c                   	ins    BYTE PTR es:[rdi],dx
    db63:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    db6a:	72 75                	jb     dbe1 <_IO_stdin_used+0x1be1>
    db6c:	6c                   	ins    BYTE PTR es:[rdi],dx
    db6d:	65 73 20             	gs jae db90 <_IO_stdin_used+0x1b90>
    db70:	77 69                	ja     dbdb <_IO_stdin_used+0x1bdb>
    db72:	74 68                	je     dbdc <_IO_stdin_used+0x1bdc>
    db74:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    db77:	4d 50                	rex.WRB push r8
    db79:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    db7c:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    db7f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    db80:	74 6f                	je     dbf1 <_IO_stdin_used+0x1bf1>
    db82:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    db85:	0a 00                	or     al,BYTE PTR [rax]
    db87:	69 63 6f 64 65 3a 00 	imul   esp,DWORD PTR [rbx+0x6f],0x3a6564
    db8e:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    db90:	76 61                	jbe    dbf3 <_IO_stdin_used+0x1bf3>
    db92:	6c                   	ins    BYTE PTR es:[rdi],dx
    db93:	69 64 65 20 69 63 6d 	imul   esp,DWORD PTR [rbp+riz*2+0x20],0x706d6369
    db9a:	70 
    db9b:	20 63 6f             	and    BYTE PTR [rbx+0x6f],ah
    db9e:	64 65 20 76 61       	fs and BYTE PTR gs:[rsi+0x61],dh
    dba3:	6c                   	ins    BYTE PTR es:[rdi],dx
    dba4:	75 65                	jne    dc0b <_IO_stdin_used+0x1c0b>
    dba6:	00 00                	add    BYTE PTR [rax],al
    dba8:	69 63 6f 64 65 20 6f 	imul   esp,DWORD PTR [rbx+0x6f],0x6f206564
    dbaf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dbb0:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbb1:	79 20                	jns    dbd3 <_IO_stdin_used+0x1bd3>
    dbb3:	61                   	(bad)  
    dbb4:	70 70                	jo     dc26 <_IO_stdin_used+0x1c26>
    dbb6:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbb7:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dbbe:	72 75                	jb     dc35 <_IO_stdin_used+0x1c35>
    dbc0:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbc1:	65 73 20             	gs jae dbe4 <_IO_stdin_used+0x1be4>
    dbc4:	77 69                	ja     dc2f <_IO_stdin_used+0x1c2f>
    dbc6:	74 68                	je     dc30 <_IO_stdin_used+0x1c30>
    dbc8:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    dbcb:	4d 50                	rex.WRB push r8
    dbcd:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dbd0:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dbd3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dbd4:	74 6f                	je     dc45 <_IO_stdin_used+0x1c45>
    dbd6:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dbd9:	00 69 63             	add    BYTE PTR [rcx+0x63],ch
    dbdc:	6d                   	ins    DWORD PTR es:[rdi],dx
    dbdd:	70 5f                	jo     dc3e <_IO_stdin_used+0x1c3e>
    dbdf:	69 64 3a 00 49 6e 76 	imul   esp,DWORD PTR [rdx+rdi*1+0x0],0x61766e49
    dbe6:	61 
    dbe7:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbe8:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    dbef:	20 
    dbf0:	69 64 20 76 61 6c 75 	imul   esp,DWORD PTR [rax+riz*1+0x76],0x65756c61
    dbf7:	65 
	...
    dc00:	49                   	rex.WB
    dc01:	43                   	rex.XB
    dc02:	4d 50                	rex.WRB push r8
    dc04:	20 49 44             	and    BYTE PTR [rcx+0x44],cl
    dc07:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    dc0a:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc0b:	79 20                	jns    dc2d <_IO_stdin_used+0x1c2d>
    dc0d:	61                   	(bad)  
    dc0e:	70 70                	jo     dc80 <_IO_stdin_used+0x1c80>
    dc10:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc11:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dc18:	72 75                	jb     dc8f <_IO_stdin_used+0x1c8f>
    dc1a:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc1b:	65 73 20             	gs jae dc3e <_IO_stdin_used+0x1c3e>
    dc1e:	77 69                	ja     dc89 <_IO_stdin_used+0x1c89>
    dc20:	74 68                	je     dc8a <_IO_stdin_used+0x1c8a>
    dc22:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    dc25:	4d 50                	rex.WRB push r8
    dc27:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dc2a:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dc2d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dc2e:	74 6f                	je     dc9f <_IO_stdin_used+0x1c9f>
    dc30:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dc33:	00 69 63             	add    BYTE PTR [rcx+0x63],ch
    dc36:	6d                   	ins    DWORD PTR es:[rdi],dx
    dc37:	70 5f                	jo     dc98 <_IO_stdin_used+0x1c98>
    dc39:	73 65                	jae    dca0 <_IO_stdin_used+0x1ca0>
    dc3b:	71 3a                	jno    dc77 <_IO_stdin_used+0x1c77>
    dc3d:	00 49 6e             	add    BYTE PTR [rcx+0x6e],cl
    dc40:	76 61                	jbe    dca3 <_IO_stdin_used+0x1ca3>
    dc42:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc43:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    dc4a:	20 
    dc4b:	73 65                	jae    dcb2 <_IO_stdin_used+0x1cb2>
    dc4d:	71 75                	jno    dcc4 <_IO_stdin_used+0x1cc4>
    dc4f:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    dc51:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    dc54:	76 61                	jbe    dcb7 <_IO_stdin_used+0x1cb7>
    dc56:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc57:	75 65                	jne    dcbe <_IO_stdin_used+0x1cbe>
    dc59:	00 74 74 6c          	add    BYTE PTR [rsp+rsi*2+0x6c],dh
    dc5d:	3a 00                	cmp    al,BYTE PTR [rax]
    dc5f:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    dc61:	76 61                	jbe    dcc4 <_IO_stdin_used+0x1cc4>
    dc63:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc64:	69 64 20 74 74 6c 20 	imul   esp,DWORD PTR [rax+riz*1+0x74],0x76206c74
    dc6b:	76 
    dc6c:	61                   	(bad)  
    dc6d:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc6e:	75 65                	jne    dcd5 <_IO_stdin_used+0x1cd5>
    dc70:	00 66 6c             	add    BYTE PTR [rsi+0x6c],ah
    dc73:	61                   	(bad)  
    dc74:	67 73 3a             	addr32 jae dcb1 <_IO_stdin_used+0x1cb1>
    dc77:	22 00                	and    al,BYTE PTR [rax]
    dc79:	00 00                	add    BYTE PTR [rax],al
    dc7b:	00 00                	add    BYTE PTR [rax],al
    dc7d:	00 00                	add    BYTE PTR [rax],al
    dc7f:	00 66 6c             	add    BYTE PTR [rsi+0x6c],ah
    dc82:	61                   	(bad)  
    dc83:	67 73 20             	addr32 jae dca6 <_IO_stdin_used+0x1ca6>
    dc86:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dc87:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dc88:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc89:	79 20                	jns    dcab <_IO_stdin_used+0x1cab>
    dc8b:	61                   	(bad)  
    dc8c:	70 70                	jo     dcfe <_IO_stdin_used+0x1cfe>
    dc8e:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc8f:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dc96:	72 75                	jb     dd0d <_IO_stdin_used+0x1d0d>
    dc98:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc99:	65 73 20             	gs jae dcbc <_IO_stdin_used+0x1cbc>
    dc9c:	77 69                	ja     dd07 <_IO_stdin_used+0x1d07>
    dc9e:	74 68                	je     dd08 <_IO_stdin_used+0x1d08>
    dca0:	20 74 63 70          	and    BYTE PTR [rbx+riz*2+0x70],dh
    dca4:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dca7:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dcaa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dcab:	74 6f                	je     dd1c <_IO_stdin_used+0x1d1c>
    dcad:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dcb0:	00 61 63             	add    BYTE PTR [rcx+0x63],ah
    dcb3:	6b 3a 00             	imul   edi,DWORD PTR [rdx],0x0
    dcb6:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    dcb8:	76 61                	jbe    dd1b <_IO_stdin_used+0x1d1b>
    dcba:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcbb:	69 64 20 61 63 6b 20 	imul   esp,DWORD PTR [rax+riz*1+0x61],0x76206b63
    dcc2:	76 
    dcc3:	61                   	(bad)  
    dcc4:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcc5:	75 65                	jne    dd2c <_IO_stdin_used+0x1d2c>
    dcc7:	00 70 63             	add    BYTE PTR [rax+0x63],dh
    dcca:	72 65                	jb     dd31 <_IO_stdin_used+0x1d31>
    dccc:	3a 22                	cmp    ah,BYTE PTR [rdx]
    dcce:	00 00                	add    BYTE PTR [rax],al
    dcd0:	46 61                	rex.RX (bad) 
    dcd2:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    dcd9:	20 
    dcda:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    dcdd:	70 69                	jo     dd48 <_IO_stdin_used+0x1d48>
    dcdf:	6c                   	ins    BYTE PTR es:[rdi],dx
    dce0:	65 20 72 65          	and    BYTE PTR gs:[rdx+0x65],dh
    dce4:	67 75 6c             	addr32 jne dd53 <_IO_stdin_used+0x1d53>
    dce7:	61                   	(bad)  
    dce8:	72 20                	jb     dd0a <_IO_stdin_used+0x1d0a>
    dcea:	65 78 70             	gs js  dd5d <_IO_stdin_used+0x1d5d>
    dced:	72 65                	jb     dd54 <_IO_stdin_used+0x1d54>
    dcef:	73 73                	jae    dd64 <_IO_stdin_used+0x1d64>
    dcf1:	69 6f 6e 00 64 73 69 	imul   ebp,DWORD PTR [rdi+0x6e],0x69736400
    dcf8:	7a 65                	jp     dd5f <_IO_stdin_used+0x1d5f>
    dcfa:	3a 00                	cmp    al,BYTE PTR [rax]
    dcfc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dcfd:	66 66 73 65          	data16 data16 jae dd66 <_IO_stdin_used+0x1d66>
    dd01:	74 3a                	je     dd3d <_IO_stdin_used+0x1d3d>
    dd03:	00 65 73             	add    BYTE PTR [rbp+0x73],ah
    dd06:	74 61                	je     dd69 <_IO_stdin_used+0x1d69>
    dd08:	62                   	(bad)  
    dd09:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd0a:	69 73 68 65 64 00 25 	imul   esi,DWORD PTR [rbx+0x68],0x25006465
    dd11:	63 00                	movsxd eax,DWORD PTR [rax]
    dd13:	25 30 32 78 00       	and    eax,0x783230
    dd18:	3e 00 3c 00          	ds add BYTE PTR [rax+rax*1],bh
    dd1c:	21 00                	and    DWORD PTR [rax],eax
    dd1e:	3c 3d                	cmp    al,0x3d
    dd20:	00 3e                	add    BYTE PTR [rsi],bh
    dd22:	3d 00 55 6e 73       	cmp    eax,0x736e5500
    dd27:	75 70                	jne    dd99 <_IO_stdin_used+0x1d99>
    dd29:	70 6f                	jo     dd9a <_IO_stdin_used+0x1d9a>
    dd2b:	72 74                	jb     dda1 <_IO_stdin_used+0x1da1>
    dd2d:	65 64 20 6f 70       	gs and BYTE PTR fs:[rdi+0x70],ch
    dd32:	65 72 61             	gs jb  dd96 <_IO_stdin_used+0x1d96>
    dd35:	74 6f                	je     dda6 <_IO_stdin_used+0x1da6>
    dd37:	72 00                	jb     dd39 <_IO_stdin_used+0x1d39>
    dd39:	00 00                	add    BYTE PTR [rax],al
    dd3b:	00 a2 cb ff ff f4    	add    BYTE PTR [rdx-0xb000035],ah
    dd41:	cb                   	retf   
    dd42:	ff                   	(bad)  
    dd43:	ff 0d cc ff ff c2    	dec    DWORD PTR [rip+0xffffffffc2ffffcc]        # ffffffffc300dd15 <_end+0xffffffffc2ed2d0d>
    dd49:	cb                   	retf   
    dd4a:	ff                   	(bad)  
    dd4b:	ff                   	(bad)  
    dd4c:	db cb                	fcmovne st,st(3)
    dd4e:	ff                   	(bad)  
    dd4f:	ff 26                	jmp    QWORD PTR [rsi]
    dd51:	cc                   	int3   
    dd52:	ff                   	(bad)  
    dd53:	ff 2e                	jmp    FWORD PTR [rsi]
    dd55:	00 25 30 32 78 00    	add    BYTE PTR [rip+0x783230],ah        # 790f8b <_end+0x655f83>
    dd5b:	25 30 32 78 20       	and    eax,0x20783230
    dd60:	2d 2d 20 25 30       	sub    eax,0x3025202d
    dd65:	32 78 0a             	xor    bh,BYTE PTR [rax+0xa]
	...
    dd70:	73 72                	jae    dde4 <_IO_stdin_used+0x1de4>
    dd72:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    dd74:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd75:	75 61                	jne    ddd8 <_IO_stdin_used+0x1dd8>
    dd77:	2f                   	(bad)  
    dd78:	73 63                	jae    dddd <_IO_stdin_used+0x1ddd>
    dd7a:	72 69                	jb     dde5 <_IO_stdin_used+0x1de5>
    dd7c:	70 74                	jo     ddf2 <_IO_stdin_used+0x1df2>
    dd7e:	73 2f                	jae    ddaf <_IO_stdin_used+0x1daf>
    dd80:	68 65 6c 6c 6f       	push   0x6f6c6c65
    dd85:	74 65                	je     ddec <_IO_stdin_used+0x1dec>
    dd87:	73 74                	jae    ddfd <_IO_stdin_used+0x1dfd>
    dd89:	2e 6c                	cs ins BYTE PTR es:[rdi],dx
    dd8b:	75 61                	jne    ddee <_IO_stdin_used+0x1dee>
    dd8d:	00 72 00             	add    BYTE PTR [rdx+0x0],dh
    dd90:	2f                   	(bad)  
    dd91:	65 74 63             	gs je  ddf7 <_IO_stdin_used+0x1df7>
    dd94:	2f                   	(bad)  
    dd95:	76 69                	jbe    de00 <_IO_stdin_used+0x1e00>
    dd97:	67 69 6c 2f 6c 73 63 	imul   ebp,DWORD PTR [edi+ebp*1+0x6c],0x69726373
    dd9e:	72 69 
    dda0:	70 74                	jo     de16 <_IO_stdin_used+0x1e16>
    dda2:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    dda6:	66 00 46 61          	data16 add BYTE PTR [rsi+0x61],al
    ddaa:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    ddb1:	20 
    ddb2:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    ddb5:	6c                   	ins    BYTE PTR es:[rdi],dx
    ddb6:	65 63 74 20 4c       	movsxd esi,DWORD PTR gs:[rax+riz*1+0x4c]
    ddbb:	75 61                	jne    de1e <_IO_stdin_used+0x1e1e>
    ddbd:	20 73 63             	and    BYTE PTR [rbx+0x63],dh
    ddc0:	72 69                	jb     de2b <_IO_stdin_used+0x1e2b>
    ddc2:	70 74                	jo     de38 <_IO_stdin_used+0x1e38>
    ddc4:	73 3a                	jae    de00 <_IO_stdin_used+0x1e00>
    ddc6:	20 2f                	and    BYTE PTR [rdi],ch
    ddc8:	65 74 63             	gs je  de2e <_IO_stdin_used+0x1e2e>
    ddcb:	2f                   	(bad)  
    ddcc:	76 69                	jbe    de37 <_IO_stdin_used+0x1e37>
    ddce:	67 69 6c 2f 6c 73 63 	imul   ebp,DWORD PTR [edi+ebp*1+0x6c],0x69726373
    ddd5:	72 69 
    ddd7:	70 74                	jo     de4d <_IO_stdin_used+0x1e4d>
    ddd9:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    dddd:	66 20 6e 6f          	data16 and BYTE PTR [rsi+0x6f],ch
    dde1:	74 20                	je     de03 <_IO_stdin_used+0x1e03>
    dde3:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    dde5:	75 6e                	jne    de55 <_IO_stdin_used+0x1e55>
    dde7:	64 2e 00 2e          	fs add BYTE PTR fs:[rsi],ch
    ddeb:	2a 2e                	sub    ch,BYTE PTR [rsi]
    dded:	6c                   	ins    BYTE PTR es:[rdi],dx
    ddee:	75 61                	jne    de51 <_IO_stdin_used+0x1e51>
    ddf0:	3a 2e                	cmp    ch,BYTE PTR [rsi]
    ddf2:	2a 00                	sub    al,BYTE PTR [rax]
    ddf4:	6c                   	ins    BYTE PTR es:[rdi],dx
    ddf5:	5f                   	pop    rdi
    ddf6:	73 63                	jae    de5b <_IO_stdin_used+0x1e5b>
    ddf8:	72 69                	jb     de63 <_IO_stdin_used+0x1e63>
    ddfa:	70 74                	jo     de70 <_IO_stdin_used+0x1e70>
    ddfc:	5f                   	pop    rdi
    ddfd:	72 6f                	jb     de6e <_IO_stdin_used+0x1e6e>
    ddff:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    de00:	74 3d                	je     de3f <_IO_stdin_used+0x1e3f>
    de02:	00 0a                	add    BYTE PTR [rdx],cl
    de04:	00 00                	add    BYTE PTR [rax],al
    de06:	00 00                	add    BYTE PTR [rax],al
    de08:	49 50                	rex.WB push r8
    de0a:	76 36                	jbe    de42 <_IO_stdin_used+0x1e42>
    de0c:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2dfe85 <_end+0x3e1a4e7d>
    de12:	20 25 73 20 50 72    	and    BYTE PTR [rip+0x72502073],ah        # 7250fe8b <_end+0x723d4e83>
    de18:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    de19:	74 6f                	je     de8a <_IO_stdin_used+0x1e8a>
    de1b:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    de1e:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    de21:	6d                   	ins    DWORD PTR es:[rdi],dx
    de22:	62                   	(bad)  
    de23:	65 72 20             	gs jb  de46 <_IO_stdin_used+0x1e46>
    de26:	3d 20 25 64 0a       	cmp    eax,0xa642520
    de2b:	00 00                	add    BYTE PTR [rax],al
    de2d:	00 00                	add    BYTE PTR [rax],al
    de2f:	00 53 65             	add    BYTE PTR [rbx+0x65],dl
    de32:	67 6d                	ins    DWORD PTR es:[edi],dx
    de34:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    de36:	74 61                	je     de99 <_IO_stdin_used+0x1e99>
    de38:	74 69                	je     dea3 <_IO_stdin_used+0x1ea3>
    de3a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    de3b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    de3c:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    de3f:	75 6c                	jne    dead <_IO_stdin_used+0x1ead>
    de41:	74 20                	je     de63 <_IO_stdin_used+0x1e63>
    de43:	61                   	(bad)  
    de44:	74 20                	je     de66 <_IO_stdin_used+0x1e66>
    de46:	25 73 3a 20 61       	and    eax,0x61203a73
    de4b:	70 70                	jo     debd <_IO_stdin_used+0x1ebd>
    de4d:	6c                   	ins    BYTE PTR es:[rdi],dx
    de4e:	69 63 61 74 69 6f 6e 	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
    de55:	20 63 72             	and    BYTE PTR [rbx+0x72],ah
    de58:	61                   	(bad)  
    de59:	73 68                	jae    dec3 <_IO_stdin_used+0x1ec3>
    de5b:	65 64 0a 00          	gs or  al,BYTE PTR fs:[rax]
    de5f:	46 75 6e             	rex.RX jne ded0 <_IO_stdin_used+0x1ed0>
    de62:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    de66:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    de67:	20 62 61             	and    BYTE PTR [rdx+0x61],ah
    de6a:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
    de6d:	72 61                	jb     ded0 <_IO_stdin_used+0x1ed0>
    de6f:	63 65 3a             	movsxd esp,DWORD PTR [rbp+0x3a]
    de72:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
    de76:	00 25 73 0a 00 25    	add    BYTE PTR [rip+0x25000a73],ah        # 2500e8ef <_end+0x24ed38e7>
    de7c:	73 28                	jae    dea6 <_IO_stdin_used+0x1ea6>
    de7e:	2e 2f                	cs (bad) 
    de80:	76 69                	jbe    deeb <_IO_stdin_used+0x1eeb>
    de82:	67 69 6c 2e 65 78 65 	imul   ebp,DWORD PTR [esi+ebp*1+0x65],0x2b286578
    de89:	28 2b 
    de8b:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    de8e:	30 32                	xor    BYTE PTR [rdx],dh
    de90:	78 29                	js     debb <_IO_stdin_used+0x1ebb>
    de92:	29 0a                	sub    DWORD PTR [rdx],ecx
    de94:	00 00                	add    BYTE PTR [rax],al
    de96:	00 00                	add    BYTE PTR [rax],al
    de98:	55                   	push   rbp
    de99:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    de9a:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    de9e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    de9f:	20 66 75             	and    BYTE PTR [rsi+0x75],ah
    dea2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dea3:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    dea7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dea8:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    deab:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
    deae:	6d                   	ins    DWORD PTR es:[rdi],dx
    deaf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    deb0:	72 79                	jb     df2b <_IO_stdin_used+0x1f2b>
    deb2:	20 6f 66             	and    BYTE PTR [rdi+0x66],ch
    deb5:	66 73 65             	data16 jae df1d <_IO_stdin_used+0x1f1d>
    deb8:	74 20                	je     deda <_IO_stdin_used+0x1eda>
    deba:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    debd:	30 32                	xor    BYTE PTR [rdx],dh
    debf:	78 0a                	js     decb <_IO_stdin_used+0x1ecb>
    dec1:	00 52 65             	add    BYTE PTR [rdx+0x65],dl
    dec4:	67 69 73 74 65 72 20 	imul   esi,DWORD PTR [ebx+0x74],0x44207265
    decb:	44 
    decc:	75 6d                	jne    df3b <_IO_stdin_used+0x1f3b>
    dece:	70 3a                	jo     df0a <_IO_stdin_used+0x1f0a>
    ded0:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    ded3:	41 58                	pop    r8
    ded5:	5d                   	pop    rbp
    ded6:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790efc <_end+0x25655ef4>
    dedc:	30 32                	xor    BYTE PTR [rdx],dh
    dede:	78 0a                	js     deea <_IO_stdin_used+0x1eea>
    dee0:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    dee3:	42 58                	rex.X pop rax
    dee5:	5d                   	pop    rbp
    dee6:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790f0c <_end+0x25655f04>
    deec:	30 32                	xor    BYTE PTR [rdx],dh
    deee:	78 0a                	js     defa <_IO_stdin_used+0x1efa>
    def0:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    def3:	43 58                	rex.XB pop r8
    def5:	5d                   	pop    rbp
    def6:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790f1c <_end+0x25655f14>
    defc:	30 32                	xor    BYTE PTR [rdx],dh
    defe:	78 0a                	js     df0a <_IO_stdin_used+0x1f0a>
    df00:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    df03:	44 58                	rex.R pop rax
    df05:	5d                   	pop    rbp
    df06:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790f2c <_end+0x25655f24>
    df0c:	30 32                	xor    BYTE PTR [rdx],dh
    df0e:	78 0a                	js     df1a <_IO_stdin_used+0x1f1a>
    df10:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    df13:	53                   	push   rbx
    df14:	50                   	push   rax
    df15:	5d                   	pop    rbp
    df16:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790f3c <_end+0x25655f34>
    df1c:	30 32                	xor    BYTE PTR [rdx],dh
    df1e:	78 0a                	js     df2a <_IO_stdin_used+0x1f2a>
    df20:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    df23:	42 50                	rex.X push rax
    df25:	5d                   	pop    rbp
    df26:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790f4c <_end+0x25655f44>
    df2c:	30 32                	xor    BYTE PTR [rdx],dh
    df2e:	78 0a                	js     df3a <_IO_stdin_used+0x1f3a>
	...
    df38:	25 73 20 5b 73       	and    eax,0x735b2073
    df3d:	74 61                	je     dfa0 <_IO_stdin_used+0x1fa0>
    df3f:	72 74                	jb     dfb5 <_IO_stdin_used+0x1fb5>
    df41:	20 25 64 5d 20 5b    	and    BYTE PTR [rip+0x5b205d64],ah        # 5b213cab <_end+0x5b0d8ca3>
    df47:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    df49:	64 20 25 64 5d 0a 00 	and    BYTE PTR fs:[rip+0xa5d64],ah        # b3cb4 <rules+0xa29d4>
    df50:	72 00                	jb     df52 <_IO_stdin_used+0x1f52>
    df52:	2f                   	(bad)  
    df53:	75 73                	jne    dfc8 <_IO_stdin_used+0x1fc8>
    df55:	72 2f                	jb     df86 <_IO_stdin_used+0x1f86>
    df57:	73 68                	jae    dfc1 <_IO_stdin_used+0x1fc1>
    df59:	61                   	(bad)  
    df5a:	72 65                	jb     dfc1 <_IO_stdin_used+0x1fc1>
    df5c:	2f                   	(bad)  
    df5d:	76 69                	jbe    dfc8 <_IO_stdin_used+0x1fc8>
    df5f:	67 69 6c 2f 6d 65 6d 	imul   ebp,DWORD PTR [edi+ebp*1+0x6d],0x616d6d65
    df66:	6d 61 
    df68:	70 2e                	jo     df98 <_IO_stdin_used+0x1f98>
    df6a:	74 78                	je     dfe4 <__GNU_EH_FRAME_HDR+0x8>
    df6c:	74 00                	je     df6e <_IO_stdin_used+0x1f6e>
    df6e:	00 00                	add    BYTE PTR [rax],al
    df70:	46                   	rex.RX
    df71:	41 54                	push   r12
    df73:	41                   	rex.B
    df74:	4c 20 45 52          	rex.WR and BYTE PTR [rbp+0x52],r8b
    df78:	52                   	push   rdx
    df79:	4f 52                	rex.WRXB push r10
    df7b:	3a 20                	cmp    ah,BYTE PTR [rax]
    df7d:	6d                   	ins    DWORD PTR es:[rdi],dx
    df7e:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    df80:	6d                   	ins    DWORD PTR es:[rdi],dx
    df81:	61                   	(bad)  
    df82:	70 2e                	jo     dfb2 <_IO_stdin_used+0x1fb2>
    df84:	74 78                	je     dffe <__GNU_EH_FRAME_HDR+0x22>
    df86:	74 20                	je     dfa8 <_IO_stdin_used+0x1fa8>
    df88:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df89:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    df8a:	74 20                	je     dfac <_IO_stdin_used+0x1fac>
    df8c:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    df8e:	75 6e                	jne    dffe <__GNU_EH_FRAME_HDR+0x22>
    df90:	64 2e 50             	fs cs push rax
    df93:	6c                   	ins    BYTE PTR es:[rdi],dx
    df94:	65 61                	gs (bad) 
    df96:	73 65                	jae    dffd <__GNU_EH_FRAME_HDR+0x21>
    df98:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    df9b:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    df9e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df9f:	20 67 65             	and    BYTE PTR [rdi+0x65],ah
    dfa2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dfa3:	5f                   	pop    rdi
    dfa4:	6d                   	ins    DWORD PTR es:[rdi],dx
    dfa5:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    dfa7:	5f                   	pop    rdi
    dfa8:	6d                   	ins    DWORD PTR es:[rdi],dx
    dfa9:	61                   	(bad)  
    dfaa:	70 2e                	jo     dfda <_IO_stdin_used+0x1fda>
    dfac:	70 79                	jo     e027 <__GNU_EH_FRAME_HDR+0x4b>
    dfae:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    dfb1:	64 20 63 6f          	and    BYTE PTR fs:[rbx+0x6f],ah
    dfb5:	70 79                	jo     e030 <__GNU_EH_FRAME_HDR+0x54>
    dfb7:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
    dfba:	6d                   	ins    DWORD PTR es:[rdi],dx
    dfbb:	6d                   	ins    DWORD PTR es:[rdi],dx
    dfbc:	61                   	(bad)  
    dfbd:	70 2e                	jo     dfed <__GNU_EH_FRAME_HDR+0x11>
    dfbf:	74 78                	je     e039 <__GNU_EH_FRAME_HDR+0x5d>
    dfc1:	74 20                	je     dfe3 <__GNU_EH_FRAME_HDR+0x7>
    dfc3:	74 6f                	je     e034 <__GNU_EH_FRAME_HDR+0x58>
    dfc5:	20 2f                	and    BYTE PTR [rdi],ch
    dfc7:	75 73                	jne    e03c <__GNU_EH_FRAME_HDR+0x60>
    dfc9:	72 2f                	jb     dffa <__GNU_EH_FRAME_HDR+0x1e>
    dfcb:	73 68                	jae    e035 <__GNU_EH_FRAME_HDR+0x59>
    dfcd:	61                   	(bad)  
    dfce:	72 65                	jb     e035 <__GNU_EH_FRAME_HDR+0x59>
    dfd0:	2f                   	(bad)  
    dfd1:	76 69                	jbe    e03c <__GNU_EH_FRAME_HDR+0x60>
    dfd3:	67                   	addr32
    dfd4:	69                   	.byte 0x69
    dfd5:	6c                   	ins    BYTE PTR es:[rdi],dx
    dfd6:	00 0a                	add    BYTE PTR [rdx],cl
    dfd8:	00 20                	add    BYTE PTR [rax],ah
	...

Disassembly of section .eh_frame_hdr:

000000000000dfdc <__GNU_EH_FRAME_HDR>:
    dfdc:	01 1b                	add    DWORD PTR [rbx],ebx
    dfde:	03 3b                	add    edi,DWORD PTR [rbx]
    dfe0:	90                   	nop
    dfe1:	03 00                	add    eax,DWORD PTR [rax]
    dfe3:	00 71 00             	add    BYTE PTR [rcx+0x0],dh
    dfe6:	00 00                	add    BYTE PTR [rax],al
    dfe8:	44                   	rex.R
    dfe9:	40 ff                	rex (bad) 
    dfeb:	ff c4                	inc    esp
    dfed:	03 00                	add    eax,DWORD PTR [rax]
    dfef:	00 54 44 ff          	add    BYTE PTR [rsp+rax*2-0x1],dl
    dff3:	ff                   	(bad)  
    dff4:	ec                   	in     al,dx
    dff5:	03 00                	add    eax,DWORD PTR [rax]
    dff7:	00 64 44 ff          	add    BYTE PTR [rsp+rax*2-0x1],ah
    dffb:	ff 04 04             	inc    DWORD PTR [rsp+rax*1]
    dffe:	00 00                	add    BYTE PTR [rax],al
    e000:	64 48 ff             	fs rex.W (bad) 
    e003:	ff ac 03 00 00 4d 49 	jmp    FWORD PTR [rbx+rax*1+0x494d0000]
    e00a:	ff                   	(bad)  
    e00b:	ff 1c 04             	call   FWORD PTR [rsp+rax*1]
    e00e:	00 00                	add    BYTE PTR [rax],al
    e010:	87 49 ff             	xchg   DWORD PTR [rcx-0x1],ecx
    e013:	ff                   	(bad)  
    e014:	3c 04                	cmp    al,0x4
    e016:	00 00                	add    BYTE PTR [rax],al
    e018:	d3 4a ff             	ror    DWORD PTR [rdx-0x1],cl
    e01b:	ff 64 04 00          	jmp    QWORD PTR [rsp+rax*1+0x0]
    e01f:	00 c7                	add    bh,al
    e021:	4d ff                	rex.WRB (bad) 
    e023:	ff 84 04 00 00 da 4e 	inc    DWORD PTR [rsp+rax*1+0x4eda0000]
    e02a:	ff                   	(bad)  
    e02b:	ff a4 04 00 00 88 4f 	jmp    QWORD PTR [rsp+rax*1+0x4f880000]
    e032:	ff                   	(bad)  
    e033:	ff c4                	inc    esp
    e035:	04 00                	add    al,0x0
    e037:	00 2e                	add    BYTE PTR [rsi],ch
    e039:	50                   	push   rax
    e03a:	ff                   	(bad)  
    e03b:	ff e4                	jmp    rsp
    e03d:	04 00                	add    al,0x0
    e03f:	00 c3                	add    bl,al
    e041:	50                   	push   rax
    e042:	ff                   	(bad)  
    e043:	ff 04 05 00 00 57 51 	inc    DWORD PTR [rax*1+0x51570000]
    e04a:	ff                   	(bad)  
    e04b:	ff 24 05 00 00 23 53 	jmp    QWORD PTR [rax*1+0x53230000]
    e052:	ff                   	(bad)  
    e053:	ff 50 05             	call   QWORD PTR [rax+0x5]
    e056:	00 00                	add    BYTE PTR [rax],al
    e058:	f7 53 ff             	not    DWORD PTR [rbx-0x1]
    e05b:	ff 74 05 00          	push   QWORD PTR [rbp+rax*1+0x0]
    e05f:	00 be 54 ff ff 98    	add    BYTE PTR [rsi-0x670000ac],bh
    e065:	05 00 00 11 55       	add    eax,0x55110000
    e06a:	ff                   	(bad)  
    e06b:	ff                   	(bad)  
    e06c:	b8 05 00 00 44       	mov    eax,0x44000005
    e071:	55                   	push   rbp
    e072:	ff                   	(bad)  
    e073:	ff                   	(bad)  
    e074:	d8 05 00 00 65 55    	fadd   DWORD PTR [rip+0x55650000]        # 5565e07a <_end+0x55523072>
    e07a:	ff                   	(bad)  
    e07b:	ff                   	(bad)  
    e07c:	f8                   	clc    
    e07d:	05 00 00 cd 55       	add    eax,0x55cd0000
    e082:	ff                   	(bad)  
    e083:	ff 1c 06             	call   FWORD PTR [rsi+rax*1]
    e086:	00 00                	add    BYTE PTR [rax],al
    e088:	f2 59                	repnz pop rcx
    e08a:	ff                   	(bad)  
    e08b:	ff                   	(bad)  
    e08c:	3c 06                	cmp    al,0x6
    e08e:	00 00                	add    BYTE PTR [rax],al
    e090:	4f 5b                	rex.WRXB pop r11
    e092:	ff                   	(bad)  
    e093:	ff 5c 06 00          	call   FWORD PTR [rsi+rax*1+0x0]
    e097:	00 93 63 ff ff 7c    	add    BYTE PTR [rbx+0x7cffff63],dl
    e09d:	06                   	(bad)  
    e09e:	00 00                	add    BYTE PTR [rax],al
    e0a0:	14 6c                	adc    al,0x6c
    e0a2:	ff                   	(bad)  
    e0a3:	ff a4 06 00 00 69 6d 	jmp    QWORD PTR [rsi+rax*1+0x6d690000]
    e0aa:	ff                   	(bad)  
    e0ab:	ff c4                	inc    esp
    e0ad:	06                   	(bad)  
    e0ae:	00 00                	add    BYTE PTR [rax],al
    e0b0:	68 6e ff ff e4       	push   0xffffffffe4ffff6e
    e0b5:	06                   	(bad)  
    e0b6:	00 00                	add    BYTE PTR [rax],al
    e0b8:	54                   	push   rsp
    e0b9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e0ba:	ff                   	(bad)  
    e0bb:	ff 04 07             	inc    DWORD PTR [rdi+rax*1]
    e0be:	00 00                	add    BYTE PTR [rax],al
    e0c0:	06                   	(bad)  
    e0c1:	73 ff                	jae    e0c2 <__GNU_EH_FRAME_HDR+0xe6>
    e0c3:	ff 24 07             	jmp    QWORD PTR [rdi+rax*1]
    e0c6:	00 00                	add    BYTE PTR [rax],al
    e0c8:	89 73 ff             	mov    DWORD PTR [rbx-0x1],esi
    e0cb:	ff 44 07 00          	inc    DWORD PTR [rdi+rax*1+0x0]
    e0cf:	00 b3 75 ff ff 6c    	add    BYTE PTR [rbx+0x6cffff75],dh
    e0d5:	07                   	(bad)  
    e0d6:	00 00                	add    BYTE PTR [rax],al
    e0d8:	f0 77 ff             	lock ja e0da <__GNU_EH_FRAME_HDR+0xfe>
    e0db:	ff 90 07 00 00 56    	call   QWORD PTR [rax+0x56000007]
    e0e1:	78 ff                	js     e0e2 <__GNU_EH_FRAME_HDR+0x106>
    e0e3:	ff b0 07 00 00 6d    	push   QWORD PTR [rax+0x6d000007]
    e0e9:	78 ff                	js     e0ea <__GNU_EH_FRAME_HDR+0x10e>
    e0eb:	ff d0                	call   rax
    e0ed:	07                   	(bad)  
    e0ee:	00 00                	add    BYTE PTR [rax],al
    e0f0:	be 78 ff ff f4       	mov    esi,0xf4ffff78
    e0f5:	07                   	(bad)  
    e0f6:	00 00                	add    BYTE PTR [rax],al
    e0f8:	fb                   	sti    
    e0f9:	7e ff                	jle    e0fa <__GNU_EH_FRAME_HDR+0x11e>
    e0fb:	ff 18                	call   FWORD PTR [rax]
    e0fd:	08 00                	or     BYTE PTR [rax],al
    e0ff:	00 15 7f ff ff 38    	add    BYTE PTR [rip+0x38ffff7f],dl        # 3900e084 <_end+0x38ed307c>
    e105:	08 00                	or     BYTE PTR [rax],al
    e107:	00 3e                	add    BYTE PTR [rsi],bh
    e109:	7f ff                	jg     e10a <__GNU_EH_FRAME_HDR+0x12e>
    e10b:	ff 58 08             	call   FWORD PTR [rax+0x8]
    e10e:	00 00                	add    BYTE PTR [rax],al
    e110:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e111:	7f ff                	jg     e112 <__GNU_EH_FRAME_HDR+0x136>
    e113:	ff                   	(bad)  
    e114:	78 08                	js     e11e <__GNU_EH_FRAME_HDR+0x142>
    e116:	00 00                	add    BYTE PTR [rax],al
    e118:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    e119:	7f ff                	jg     e11a <__GNU_EH_FRAME_HDR+0x13e>
    e11b:	ff 94 08 00 00 ea 80 	call   QWORD PTR [rax+rcx*1-0x7f160000]
    e122:	ff                   	(bad)  
    e123:	ff b4 08 00 00 4a 82 	push   QWORD PTR [rax+rcx*1-0x7db60000]
    e12a:	ff                   	(bad)  
    e12b:	ff d4                	call   rsp
    e12d:	08 00                	or     BYTE PTR [rax],al
    e12f:	00 ab 82 ff ff f4    	add    BYTE PTR [rbx-0xb00007e],ch
    e135:	08 00                	or     BYTE PTR [rax],al
    e137:	00 69 83             	add    BYTE PTR [rcx-0x7d],ch
    e13a:	ff                   	(bad)  
    e13b:	ff 14 09             	call   QWORD PTR [rcx+rcx*1]
    e13e:	00 00                	add    BYTE PTR [rax],al
    e140:	bb 85 ff ff 34       	mov    ebx,0x34ffff85
    e145:	09 00                	or     DWORD PTR [rax],eax
    e147:	00 b3 87 ff ff 54    	add    BYTE PTR [rbx+0x54ffff87],dh
    e14d:	09 00                	or     DWORD PTR [rax],eax
    e14f:	00 0d 88 ff ff 74    	add    BYTE PTR [rip+0x74ffff88],cl        # 7500e0dd <_end+0x74ed30d5>
    e155:	09 00                	or     DWORD PTR [rax],eax
    e157:	00 1c 8b             	add    BYTE PTR [rbx+rcx*4],bl
    e15a:	ff                   	(bad)  
    e15b:	ff 94 09 00 00 6d 8f 	call   QWORD PTR [rcx+rcx*1-0x70930000]
    e162:	ff                   	(bad)  
    e163:	ff b4 09 00 00 97 8f 	push   QWORD PTR [rcx+rcx*1-0x70690000]
    e16a:	ff                   	(bad)  
    e16b:	ff d0                	call   rax
    e16d:	09 00                	or     DWORD PTR [rax],eax
    e16f:	00 49 91             	add    BYTE PTR [rcx-0x6f],cl
    e172:	ff                   	(bad)  
    e173:	ff f4                	push   rsp
    e175:	09 00                	or     DWORD PTR [rax],eax
    e177:	00 60 91             	add    BYTE PTR [rax-0x6f],ah
    e17a:	ff                   	(bad)  
    e17b:	ff 14 0a             	call   QWORD PTR [rdx+rcx*1]
    e17e:	00 00                	add    BYTE PTR [rax],al
    e180:	af                   	scas   eax,DWORD PTR es:[rdi]
    e181:	91                   	xchg   ecx,eax
    e182:	ff                   	(bad)  
    e183:	ff 34 0a             	push   QWORD PTR [rdx+rcx*1]
    e186:	00 00                	add    BYTE PTR [rax],al
    e188:	fc                   	cld    
    e189:	91                   	xchg   ecx,eax
    e18a:	ff                   	(bad)  
    e18b:	ff 54 0a 00          	call   QWORD PTR [rdx+rcx*1+0x0]
    e18f:	00 73 93             	add    BYTE PTR [rbx-0x6d],dh
    e192:	ff                   	(bad)  
    e193:	ff 70 0a             	push   QWORD PTR [rax+0xa]
    e196:	00 00                	add    BYTE PTR [rax],al
    e198:	82                   	(bad)  
    e199:	93                   	xchg   ebx,eax
    e19a:	ff                   	(bad)  
    e19b:	ff 94 0a 00 00 70 95 	call   QWORD PTR [rdx+rcx*1-0x6a900000]
    e1a2:	ff                   	(bad)  
    e1a3:	ff b4 0a 00 00 58 97 	push   QWORD PTR [rdx+rcx*1-0x68a80000]
    e1aa:	ff                   	(bad)  
    e1ab:	ff d4                	call   rsp
    e1ad:	0a 00                	or     al,BYTE PTR [rax]
    e1af:	00 c4                	add    ah,al
    e1b1:	97                   	xchg   edi,eax
    e1b2:	ff                   	(bad)  
    e1b3:	ff f4                	push   rsp
    e1b5:	0a 00                	or     al,BYTE PTR [rax]
    e1b7:	00 36                	add    BYTE PTR [rsi],dh
    e1b9:	98                   	cwde   
    e1ba:	ff                   	(bad)  
    e1bb:	ff 14 0b             	call   QWORD PTR [rbx+rcx*1]
    e1be:	00 00                	add    BYTE PTR [rax],al
    e1c0:	47 99                	rex.RXB cdq 
    e1c2:	ff                   	(bad)  
    e1c3:	ff 34 0b             	push   QWORD PTR [rbx+rcx*1]
    e1c6:	00 00                	add    BYTE PTR [rax],al
    e1c8:	a3 99 ff ff 54 0b 00 	movabs ds:0xe100000b54ffff99,eax
    e1cf:	00 e1 
    e1d1:	99                   	cdq    
    e1d2:	ff                   	(bad)  
    e1d3:	ff 74 0b 00          	push   QWORD PTR [rbx+rcx*1+0x0]
    e1d7:	00 67 9a             	add    BYTE PTR [rdi-0x66],ah
    e1da:	ff                   	(bad)  
    e1db:	ff 94 0b 00 00 46 9b 	call   QWORD PTR [rbx+rcx*1-0x64ba0000]
    e1e2:	ff                   	(bad)  
    e1e3:	ff b4 0b 00 00 ba 9b 	push   QWORD PTR [rbx+rcx*1-0x64460000]
    e1ea:	ff                   	(bad)  
    e1eb:	ff d4                	call   rsp
    e1ed:	0b 00                	or     eax,DWORD PTR [rax]
    e1ef:	00 56 9c             	add    BYTE PTR [rsi-0x64],dl
    e1f2:	ff                   	(bad)  
    e1f3:	ff f4                	push   rsp
    e1f5:	0b 00                	or     eax,DWORD PTR [rax]
    e1f7:	00 7f 9c             	add    BYTE PTR [rdi-0x64],bh
    e1fa:	ff                   	(bad)  
    e1fb:	ff 14 0c             	call   QWORD PTR [rsp+rcx*1]
    e1fe:	00 00                	add    BYTE PTR [rax],al
    e200:	a8 9c                	test   al,0x9c
    e202:	ff                   	(bad)  
    e203:	ff 34 0c             	push   QWORD PTR [rsp+rcx*1]
    e206:	00 00                	add    BYTE PTR [rax],al
    e208:	fb                   	sti    
    e209:	9d                   	popf   
    e20a:	ff                   	(bad)  
    e20b:	ff 5c 0c 00          	call   FWORD PTR [rsp+rcx*1+0x0]
    e20f:	00 19                	add    BYTE PTR [rcx],bl
    e211:	9e                   	sahf   
    e212:	ff                   	(bad)  
    e213:	ff                   	(bad)  
    e214:	7c 0c                	jl     e222 <__GNU_EH_FRAME_HDR+0x246>
    e216:	00 00                	add    BYTE PTR [rax],al
    e218:	7c 9f                	jl     e1b9 <__GNU_EH_FRAME_HDR+0x1dd>
    e21a:	ff                   	(bad)  
    e21b:	ff 9c 0c 00 00 8a a1 	call   FWORD PTR [rsp+rcx*1-0x5e760000]
    e222:	ff                   	(bad)  
    e223:	ff cc                	dec    esp
    e225:	0c 00                	or     al,0x0
    e227:	00 3c a2             	add    BYTE PTR [rdx+riz*4],bh
    e22a:	ff                   	(bad)  
    e22b:	ff                   	(bad)  
    e22c:	ec                   	in     al,dx
    e22d:	0c 00                	or     al,0x0
    e22f:	00 e1                	add    cl,ah
    e231:	a2 ff ff 0c 0d 00 00 	movabs ds:0xa37500000d0cffff,al
    e238:	75 a3 
    e23a:	ff                   	(bad)  
    e23b:	ff 34 0d 00 00 4a a4 	push   QWORD PTR [rcx*1-0x5bb60000]
    e242:	ff                   	(bad)  
    e243:	ff 54 0d 00          	call   QWORD PTR [rbp+rcx*1+0x0]
    e247:	00 29                	add    BYTE PTR [rcx],ch
    e249:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    e24a:	ff                   	(bad)  
    e24b:	ff 74 0d 00          	push   QWORD PTR [rbp+rcx*1+0x0]
    e24f:	00 a6 a5 ff ff 94    	add    BYTE PTR [rsi-0x6b00005b],ah
    e255:	0d 00 00 dc a6       	or     eax,0xa6dc0000
    e25a:	ff                   	(bad)  
    e25b:	ff b4 0d 00 00 5a a7 	push   QWORD PTR [rbp+rcx*1-0x58a60000]
    e262:	ff                   	(bad)  
    e263:	ff d4                	call   rsp
    e265:	0d 00 00 84 a9       	or     eax,0xa9840000
    e26a:	ff                   	(bad)  
    e26b:	ff f4                	push   rsp
    e26d:	0d 00 00 47 aa       	or     eax,0xaa470000
    e272:	ff                   	(bad)  
    e273:	ff 14 0e             	call   QWORD PTR [rsi+rcx*1]
    e276:	00 00                	add    BYTE PTR [rax],al
    e278:	e2 ab                	loop   e225 <__GNU_EH_FRAME_HDR+0x249>
    e27a:	ff                   	(bad)  
    e27b:	ff 34 0e             	push   QWORD PTR [rsi+rcx*1]
    e27e:	00 00                	add    BYTE PTR [rax],al
    e280:	ef                   	out    dx,eax
    e281:	ac                   	lods   al,BYTE PTR ds:[rsi]
    e282:	ff                   	(bad)  
    e283:	ff 54 0e 00          	call   QWORD PTR [rsi+rcx*1+0x0]
    e287:	00 55 ad             	add    BYTE PTR [rbp-0x53],dl
    e28a:	ff                   	(bad)  
    e28b:	ff 74 0e 00          	push   QWORD PTR [rsi+rcx*1+0x0]
    e28f:	00 ca                	add    dl,cl
    e291:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    e292:	ff                   	(bad)  
    e293:	ff 94 0e 00 00 a5 ae 	call   QWORD PTR [rsi+rcx*1-0x515b0000]
    e29a:	ff                   	(bad)  
    e29b:	ff b4 0e 00 00 17 b0 	push   QWORD PTR [rsi+rcx*1-0x4fe90000]
    e2a2:	ff                   	(bad)  
    e2a3:	ff d4                	call   rsp
    e2a5:	0e                   	(bad)  
    e2a6:	00 00                	add    BYTE PTR [rax],al
    e2a8:	83 b0 ff ff f4 0e 00 	xor    DWORD PTR [rax+0xef4ffff],0x0
    e2af:	00 03                	add    BYTE PTR [rbx],al
    e2b1:	b1 ff                	mov    cl,0xff
    e2b3:	ff 14 0f             	call   QWORD PTR [rdi+rcx*1]
    e2b6:	00 00                	add    BYTE PTR [rax],al
    e2b8:	19 b1 ff ff 34 0f    	sbb    DWORD PTR [rcx+0xf34ffff],esi
    e2be:	00 00                	add    BYTE PTR [rax],al
    e2c0:	53                   	push   rbx
    e2c1:	b2 ff                	mov    dl,0xff
    e2c3:	ff 58 0f             	call   FWORD PTR [rax+0xf]
    e2c6:	00 00                	add    BYTE PTR [rax],al
    e2c8:	b7 b2                	mov    bh,0xb2
    e2ca:	ff                   	(bad)  
    e2cb:	ff                   	(bad)  
    e2cc:	78 0f                	js     e2dd <__GNU_EH_FRAME_HDR+0x301>
    e2ce:	00 00                	add    BYTE PTR [rax],al
    e2d0:	0a b3 ff ff 98 0f    	or     dh,BYTE PTR [rbx+0xf98ffff]
    e2d6:	00 00                	add    BYTE PTR [rax],al
    e2d8:	bb b3 ff ff b8       	mov    ebx,0xb8ffffb3
    e2dd:	0f 00 00             	sldt   WORD PTR [rax]
    e2e0:	86 b4 ff ff d8 0f 00 	xchg   BYTE PTR [rdi+rdi*8+0xfd8ff],dh
    e2e7:	00 db                	add    bl,bl
    e2e9:	b4 ff                	mov    ah,0xff
    e2eb:	ff                   	(bad)  
    e2ec:	f8                   	clc    
    e2ed:	0f 00 00             	sldt   WORD PTR [rax]
    e2f0:	0b b5 ff ff 18 10    	or     esi,DWORD PTR [rbp+0x1018ffff]
    e2f6:	00 00                	add    BYTE PTR [rax],al
    e2f8:	72 b5                	jb     e2af <__GNU_EH_FRAME_HDR+0x2d3>
    e2fa:	ff                   	(bad)  
    e2fb:	ff                   	(bad)  
    e2fc:	38 10                	cmp    BYTE PTR [rax],dl
    e2fe:	00 00                	add    BYTE PTR [rax],al
    e300:	7e c4                	jle    e2c6 <__GNU_EH_FRAME_HDR+0x2ea>
    e302:	ff                   	(bad)  
    e303:	ff 5c 10 00          	call   FWORD PTR [rax+rdx*1+0x0]
    e307:	00 c4                	add    ah,al
    e309:	c4                   	(bad)  
    e30a:	ff                   	(bad)  
    e30b:	ff                   	(bad)  
    e30c:	7c 10                	jl     e31e <__GNU_EH_FRAME_HDR+0x342>
    e30e:	00 00                	add    BYTE PTR [rax],al
    e310:	ff c6                	inc    esi
    e312:	ff                   	(bad)  
    e313:	ff a4 10 00 00 a4 c8 	jmp    QWORD PTR [rax+rdx*1-0x375c0000]
    e31a:	ff                   	(bad)  
    e31b:	ff c4                	inc    esp
    e31d:	10 00                	adc    BYTE PTR [rax],al
    e31f:	00 b6 c9 ff ff e4    	add    BYTE PTR [rsi-0x1b000037],dh
    e325:	10 00                	adc    BYTE PTR [rax],al
    e327:	00 72 ca             	add    BYTE PTR [rdx-0x36],dh
    e32a:	ff                   	(bad)  
    e32b:	ff 0c 11             	dec    DWORD PTR [rcx+rdx*1]
    e32e:	00 00                	add    BYTE PTR [rax],al
    e330:	0d cc ff ff 34       	or     eax,0x34ffffcc
    e335:	11 00                	adc    DWORD PTR [rax],eax
    e337:	00 b2 cc ff ff 54    	add    BYTE PTR [rdx+0x54ffffcc],dh
    e33d:	11 00                	adc    DWORD PTR [rax],eax
    e33f:	00 f5                	add    ch,dh
    e341:	cd ff                	int    0xff
    e343:	ff 74 11 00          	push   QWORD PTR [rcx+rdx*1+0x0]
    e347:	00 e8                	add    al,ch
    e349:	ce                   	(bad)  
    e34a:	ff                   	(bad)  
    e34b:	ff 94 11 00 00 76 d1 	call   QWORD PTR [rcx+rdx*1-0x2e8a0000]
    e352:	ff                   	(bad)  
    e353:	ff b4 11 00 00 e0 d1 	push   QWORD PTR [rcx+rdx*1-0x2e200000]
    e35a:	ff                   	(bad)  
    e35b:	ff d4                	call   rsp
    e35d:	11 00                	adc    DWORD PTR [rax],eax
    e35f:	00 4e d2             	add    BYTE PTR [rsi-0x2e],cl
    e362:	ff                   	(bad)  
    e363:	ff f4                	push   rsp
    e365:	11 00                	adc    DWORD PTR [rax],eax
    e367:	00 be d2 ff ff 14    	add    BYTE PTR [rsi+0x14ffffd2],bh
    e36d:	12 00                	adc    al,BYTE PTR [rax]
	...

Disassembly of section .eh_frame:

000000000000e370 <__FRAME_END__-0xea4>:
    e370:	14 00                	adc    al,0x0
    e372:	00 00                	add    BYTE PTR [rax],al
    e374:	00 00                	add    BYTE PTR [rax],al
    e376:	00 00                	add    BYTE PTR [rax],al
    e378:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    e37b:	00 01                	add    BYTE PTR [rcx],al
    e37d:	78 10                	js     e38f <__GNU_EH_FRAME_HDR+0x3b3>
    e37f:	01 1b                	add    DWORD PTR [rbx],ebx
    e381:	0c 07                	or     al,0x7
    e383:	08 90 01 00 00 14    	or     BYTE PTR [rax+0x14000001],dl
    e389:	00 00                	add    BYTE PTR [rax],al
    e38b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e38e:	00 00                	add    BYTE PTR [rax],al
    e390:	b0 44                	mov    al,0x44
    e392:	ff                   	(bad)  
    e393:	ff 26                	jmp    QWORD PTR [rsi]
    e395:	00 00                	add    BYTE PTR [rax],al
    e397:	00 00                	add    BYTE PTR [rax],al
    e399:	44 07                	rex.R (bad) 
    e39b:	10 00                	adc    BYTE PTR [rax],al
    e39d:	00 00                	add    BYTE PTR [rax],al
    e39f:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    e3a2:	00 00                	add    BYTE PTR [rax],al
    e3a4:	34 00                	xor    al,0x0
    e3a6:	00 00                	add    BYTE PTR [rax],al
    e3a8:	78 3c                	js     e3e6 <__GNU_EH_FRAME_HDR+0x40a>
    e3aa:	ff                   	(bad)  
    e3ab:	ff 10                	call   QWORD PTR [rax]
    e3ad:	04 00                	add    al,0x0
    e3af:	00 00                	add    BYTE PTR [rax],al
    e3b1:	0e                   	(bad)  
    e3b2:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
    e3b5:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
    e3b8:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
    e3bb:	80 00 3f             	add    BYTE PTR [rax],0x3f
    e3be:	1a 3a                	sbb    bh,BYTE PTR [rdx]
    e3c0:	2a 33                	sub    dh,BYTE PTR [rbx]
    e3c2:	24 22                	and    al,0x22
    e3c4:	00 00                	add    BYTE PTR [rax],al
    e3c6:	00 00                	add    BYTE PTR [rax],al
    e3c8:	14 00                	adc    al,0x0
    e3ca:	00 00                	add    BYTE PTR [rax],al
    e3cc:	5c                   	pop    rsp
    e3cd:	00 00                	add    BYTE PTR [rax],al
    e3cf:	00 60 40             	add    BYTE PTR [rax+0x40],ah
    e3d2:	ff                   	(bad)  
    e3d3:	ff 10                	call   QWORD PTR [rax]
	...
    e3dd:	00 00                	add    BYTE PTR [rax],al
    e3df:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    e3e2:	00 00                	add    BYTE PTR [rax],al
    e3e4:	74 00                	je     e3e6 <__GNU_EH_FRAME_HDR+0x40a>
    e3e6:	00 00                	add    BYTE PTR [rax],al
    e3e8:	58                   	pop    rax
    e3e9:	40 ff                	rex (bad) 
    e3eb:	ff 00                	inc    DWORD PTR [rax]
    e3ed:	04 00                	add    al,0x0
	...
    e3f7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e3fa:	00 00                	add    BYTE PTR [rax],al
    e3fc:	8c 00                	mov    WORD PTR [rax],es
    e3fe:	00 00                	add    BYTE PTR [rax],al
    e400:	29 45 ff             	sub    DWORD PTR [rbp-0x1],eax
    e403:	ff                   	(bad)  
    e404:	3a 00                	cmp    al,BYTE PTR [rax]
    e406:	00 00                	add    BYTE PTR [rax],al
    e408:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e40b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e411:	71 0c                	jno    e41f <__GNU_EH_FRAME_HDR+0x443>
    e413:	07                   	(bad)  
    e414:	08 00                	or     BYTE PTR [rax],al
    e416:	00 00                	add    BYTE PTR [rax],al
    e418:	24 00                	and    al,0x0
    e41a:	00 00                	add    BYTE PTR [rax],al
    e41c:	ac                   	lods   al,BYTE PTR ds:[rsi]
    e41d:	00 00                	add    BYTE PTR [rax],al
    e41f:	00 43 45             	add    BYTE PTR [rbx+0x45],al
    e422:	ff                   	(bad)  
    e423:	ff 4c 01 00          	dec    DWORD PTR [rcx+rax*1+0x0]
    e427:	00 00                	add    BYTE PTR [rax],al
    e429:	45 0e                	rex.RB (bad) 
    e42b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e431:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    e435:	3e 01 0c 07          	ds add DWORD PTR [rdi+rax*1],ecx
    e439:	08 00                	or     BYTE PTR [rax],al
    e43b:	00 00                	add    BYTE PTR [rax],al
    e43d:	00 00                	add    BYTE PTR [rax],al
    e43f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e442:	00 00                	add    BYTE PTR [rax],al
    e444:	d4                   	(bad)  
    e445:	00 00                	add    BYTE PTR [rax],al
    e447:	00 67 46             	add    BYTE PTR [rdi+0x46],ah
    e44a:	ff                   	(bad)  
    e44b:	ff f4                	push   rsp
    e44d:	02 00                	add    al,BYTE PTR [rax]
    e44f:	00 00                	add    BYTE PTR [rax],al
    e451:	45 0e                	rex.RB (bad) 
    e453:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e459:	03 eb                	add    ebp,ebx
    e45b:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    e45e:	08 00                	or     BYTE PTR [rax],al
    e460:	1c 00                	sbb    al,0x0
    e462:	00 00                	add    BYTE PTR [rax],al
    e464:	f4                   	hlt    
    e465:	00 00                	add    BYTE PTR [rax],al
    e467:	00 3b                	add    BYTE PTR [rbx],bh
    e469:	49 ff                	rex.WB (bad) 
    e46b:	ff 13                	call   QWORD PTR [rbx]
    e46d:	01 00                	add    DWORD PTR [rax],eax
    e46f:	00 00                	add    BYTE PTR [rax],al
    e471:	45 0e                	rex.RB (bad) 
    e473:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e479:	03 0a                	add    ecx,DWORD PTR [rdx]
    e47b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    e47e:	08 00                	or     BYTE PTR [rax],al
    e480:	1c 00                	sbb    al,0x0
    e482:	00 00                	add    BYTE PTR [rax],al
    e484:	14 01                	adc    al,0x1
    e486:	00 00                	add    BYTE PTR [rax],al
    e488:	2e 4a ff             	cs rex.WX (bad) 
    e48b:	ff ae 00 00 00 00    	jmp    FWORD PTR [rsi+0x0]
    e491:	45 0e                	rex.RB (bad) 
    e493:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e499:	02 a5 0c 07 08 00    	add    ah,BYTE PTR [rbp+0x8070c]
    e49f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e4a2:	00 00                	add    BYTE PTR [rax],al
    e4a4:	34 01                	xor    al,0x1
    e4a6:	00 00                	add    BYTE PTR [rax],al
    e4a8:	bc 4a ff ff a6       	mov    esp,0xa6ffff4a
    e4ad:	00 00                	add    BYTE PTR [rax],al
    e4af:	00 00                	add    BYTE PTR [rax],al
    e4b1:	45 0e                	rex.RB (bad) 
    e4b3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e4b9:	02 9d 0c 07 08 00    	add    bl,BYTE PTR [rbp+0x8070c]
    e4bf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e4c2:	00 00                	add    BYTE PTR [rax],al
    e4c4:	54                   	push   rsp
    e4c5:	01 00                	add    DWORD PTR [rax],eax
    e4c7:	00 42 4b             	add    BYTE PTR [rdx+0x4b],al
    e4ca:	ff                   	(bad)  
    e4cb:	ff 95 00 00 00 00    	call   QWORD PTR [rbp+0x0]
    e4d1:	45 0e                	rex.RB (bad) 
    e4d3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e4d9:	02 8c 0c 07 08 00 00 	add    cl,BYTE PTR [rsp+rcx*1+0x807]
    e4e0:	1c 00                	sbb    al,0x0
    e4e2:	00 00                	add    BYTE PTR [rax],al
    e4e4:	74 01                	je     e4e7 <__GNU_EH_FRAME_HDR+0x50b>
    e4e6:	00 00                	add    BYTE PTR [rax],al
    e4e8:	b7 4b                	mov    bh,0x4b
    e4ea:	ff                   	(bad)  
    e4eb:	ff 94 00 00 00 00 45 	call   QWORD PTR [rax+rax*1+0x45000000]
    e4f2:	0e                   	(bad)  
    e4f3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e4f9:	02 8b 0c 07 08 00    	add    cl,BYTE PTR [rbx+0x8070c]
    e4ff:	00 28                	add    BYTE PTR [rax],ch
    e501:	00 00                	add    BYTE PTR [rax],al
    e503:	00 94 01 00 00 2b 4c 	add    BYTE PTR [rcx+rax*1+0x4c2b0000],dl
    e50a:	ff                   	(bad)  
    e50b:	ff cc                	dec    esp
    e50d:	01 00                	add    DWORD PTR [rax],eax
    e50f:	00 00                	add    BYTE PTR [rax],al
    e511:	45 0e                	rex.RB (bad) 
    e513:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e519:	4d 8f 03             	rex.WRB pop QWORD PTR [r11]
    e51c:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
    e523:	07                   	(bad)  
    e524:	03 b6 01 0c 07 08    	add    esi,DWORD PTR [rsi+0x8070c01]
    e52a:	00 00                	add    BYTE PTR [rax],al
    e52c:	20 00                	and    BYTE PTR [rax],al
    e52e:	00 00                	add    BYTE PTR [rax],al
    e530:	c0 01 00             	rol    BYTE PTR [rcx],0x0
    e533:	00 cb                	add    bl,cl
    e535:	4d ff                	rex.WRB (bad) 
    e537:	ff d4                	call   rsp
    e539:	00 00                	add    BYTE PTR [rax],al
    e53b:	00 00                	add    BYTE PTR [rax],al
    e53d:	45 0e                	rex.RB (bad) 
    e53f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e545:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    e549:	c6                   	(bad)  
    e54a:	0c 07                	or     al,0x7
    e54c:	08 00                	or     BYTE PTR [rax],al
    e54e:	00 00                	add    BYTE PTR [rax],al
    e550:	20 00                	and    BYTE PTR [rax],al
    e552:	00 00                	add    BYTE PTR [rax],al
    e554:	e4 01                	in     al,0x1
    e556:	00 00                	add    BYTE PTR [rax],al
    e558:	7b 4e                	jnp    e5a8 <__GNU_EH_FRAME_HDR+0x5cc>
    e55a:	ff                   	(bad)  
    e55b:	ff c7                	inc    edi
    e55d:	00 00                	add    BYTE PTR [rax],al
    e55f:	00 00                	add    BYTE PTR [rax],al
    e561:	45 0e                	rex.RB (bad) 
    e563:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e569:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    e56d:	b9 0c 07 08 00       	mov    ecx,0x8070c
    e572:	00 00                	add    BYTE PTR [rax],al
    e574:	1c 00                	sbb    al,0x0
    e576:	00 00                	add    BYTE PTR [rax],al
    e578:	08 02                	or     BYTE PTR [rdx],al
    e57a:	00 00                	add    BYTE PTR [rax],al
    e57c:	1e                   	(bad)  
    e57d:	4f ff                	rex.WRXB (bad) 
    e57f:	ff 53 00             	call   QWORD PTR [rbx+0x0]
    e582:	00 00                	add    BYTE PTR [rax],al
    e584:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e587:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e58d:	02 4a 0c             	add    cl,BYTE PTR [rdx+0xc]
    e590:	07                   	(bad)  
    e591:	08 00                	or     BYTE PTR [rax],al
    e593:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e596:	00 00                	add    BYTE PTR [rax],al
    e598:	28 02                	sub    BYTE PTR [rdx],al
    e59a:	00 00                	add    BYTE PTR [rax],al
    e59c:	51                   	push   rcx
    e59d:	4f ff                	rex.WRXB (bad) 
    e59f:	ff 33                	push   QWORD PTR [rbx]
    e5a1:	00 00                	add    BYTE PTR [rax],al
    e5a3:	00 00                	add    BYTE PTR [rax],al
    e5a5:	45 0e                	rex.RB (bad) 
    e5a7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e5ad:	6a 0c                	push   0xc
    e5af:	07                   	(bad)  
    e5b0:	08 00                	or     BYTE PTR [rax],al
    e5b2:	00 00                	add    BYTE PTR [rax],al
    e5b4:	1c 00                	sbb    al,0x0
    e5b6:	00 00                	add    BYTE PTR [rax],al
    e5b8:	48 02 00             	rex.W add al,BYTE PTR [rax]
    e5bb:	00 64 4f ff          	add    BYTE PTR [rdi+rcx*2-0x1],ah
    e5bf:	ff 21                	jmp    QWORD PTR [rcx]
    e5c1:	00 00                	add    BYTE PTR [rax],al
    e5c3:	00 00                	add    BYTE PTR [rax],al
    e5c5:	45 0e                	rex.RB (bad) 
    e5c7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e5cd:	58                   	pop    rax
    e5ce:	0c 07                	or     al,0x7
    e5d0:	08 00                	or     BYTE PTR [rax],al
    e5d2:	00 00                	add    BYTE PTR [rax],al
    e5d4:	20 00                	and    BYTE PTR [rax],al
    e5d6:	00 00                	add    BYTE PTR [rax],al
    e5d8:	68 02 00 00 65       	push   0x65000002
    e5dd:	4f ff                	rex.WRXB (bad) 
    e5df:	ff 68 00             	jmp    FWORD PTR [rax+0x0]
    e5e2:	00 00                	add    BYTE PTR [rax],al
    e5e4:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e5e7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e5ed:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    e5f1:	5a                   	pop    rdx
    e5f2:	0c 07                	or     al,0x7
    e5f4:	08 00                	or     BYTE PTR [rax],al
    e5f6:	00 00                	add    BYTE PTR [rax],al
    e5f8:	1c 00                	sbb    al,0x0
    e5fa:	00 00                	add    BYTE PTR [rax],al
    e5fc:	8c 02                	mov    WORD PTR [rdx],es
    e5fe:	00 00                	add    BYTE PTR [rax],al
    e600:	a9 4f ff ff 25       	test   eax,0x25ffff4f
    e605:	04 00                	add    al,0x0
    e607:	00 00                	add    BYTE PTR [rax],al
    e609:	45 0e                	rex.RB (bad) 
    e60b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e611:	03 1c 04             	add    ebx,DWORD PTR [rsp+rax*1]
    e614:	0c 07                	or     al,0x7
    e616:	08 00                	or     BYTE PTR [rax],al
    e618:	1c 00                	sbb    al,0x0
    e61a:	00 00                	add    BYTE PTR [rax],al
    e61c:	ac                   	lods   al,BYTE PTR ds:[rsi]
    e61d:	02 00                	add    al,BYTE PTR [rax]
    e61f:	00 ae 53 ff ff 5d    	add    BYTE PTR [rsi+0x5dffff53],ch
    e625:	01 00                	add    DWORD PTR [rax],eax
    e627:	00 00                	add    BYTE PTR [rax],al
    e629:	45 0e                	rex.RB (bad) 
    e62b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e631:	03 54 01 0c          	add    edx,DWORD PTR [rcx+rax*1+0xc]
    e635:	07                   	(bad)  
    e636:	08 00                	or     BYTE PTR [rax],al
    e638:	1c 00                	sbb    al,0x0
    e63a:	00 00                	add    BYTE PTR [rax],al
    e63c:	cc                   	int3   
    e63d:	02 00                	add    al,BYTE PTR [rax]
    e63f:	00 eb                	add    bl,ch
    e641:	54                   	push   rsp
    e642:	ff                   	(bad)  
    e643:	ff 44 08 00          	inc    DWORD PTR [rax+rcx*1+0x0]
    e647:	00 00                	add    BYTE PTR [rax],al
    e649:	45 0e                	rex.RB (bad) 
    e64b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e651:	03 3b                	add    edi,DWORD PTR [rbx]
    e653:	08 0c 07             	or     BYTE PTR [rdi+rax*1],cl
    e656:	08 00                	or     BYTE PTR [rax],al
    e658:	24 00                	and    al,0x0
    e65a:	00 00                	add    BYTE PTR [rax],al
    e65c:	ec                   	in     al,dx
    e65d:	02 00                	add    al,BYTE PTR [rax]
    e65f:	00 0f                	add    BYTE PTR [rdi],cl
    e661:	5d                   	pop    rbp
    e662:	ff                   	(bad)  
    e663:	ff 81 08 00 00 00    	inc    DWORD PTR [rcx+0x8]
    e669:	45 0e                	rex.RB (bad) 
    e66b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e671:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    e675:	70 08                	jo     e67f <__GNU_EH_FRAME_HDR+0x6a3>
    e677:	0c 07                	or     al,0x7
    e679:	08 00                	or     BYTE PTR [rax],al
    e67b:	00 00                	add    BYTE PTR [rax],al
    e67d:	00 00                	add    BYTE PTR [rax],al
    e67f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e682:	00 00                	add    BYTE PTR [rax],al
    e684:	14 03                	adc    al,0x3
    e686:	00 00                	add    BYTE PTR [rax],al
    e688:	68 65 ff ff 55       	push   0x55ffff65
    e68d:	01 00                	add    DWORD PTR [rax],eax
    e68f:	00 00                	add    BYTE PTR [rax],al
    e691:	45 0e                	rex.RB (bad) 
    e693:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e699:	03 4c 01 0c          	add    ecx,DWORD PTR [rcx+rax*1+0xc]
    e69d:	07                   	(bad)  
    e69e:	08 00                	or     BYTE PTR [rax],al
    e6a0:	1c 00                	sbb    al,0x0
    e6a2:	00 00                	add    BYTE PTR [rax],al
    e6a4:	34 03                	xor    al,0x3
    e6a6:	00 00                	add    BYTE PTR [rax],al
    e6a8:	9d                   	popf   
    e6a9:	66 ff                	data16 (bad) 
    e6ab:	ff                   	(bad)  
    e6ac:	ff 00                	inc    DWORD PTR [rax]
    e6ae:	00 00                	add    BYTE PTR [rax],al
    e6b0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e6b3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e6b9:	02 f6                	add    dh,dh
    e6bb:	0c 07                	or     al,0x7
    e6bd:	08 00                	or     BYTE PTR [rax],al
    e6bf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e6c2:	00 00                	add    BYTE PTR [rax],al
    e6c4:	54                   	push   rsp
    e6c5:	03 00                	add    eax,DWORD PTR [rax]
    e6c7:	00 7c 67 ff          	add    BYTE PTR [rdi+riz*2-0x1],bh
    e6cb:	ff                   	(bad)  
    e6cc:	ec                   	in     al,dx
    e6cd:	00 00                	add    BYTE PTR [rax],al
    e6cf:	00 00                	add    BYTE PTR [rax],al
    e6d1:	45 0e                	rex.RB (bad) 
    e6d3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e6d9:	02 e3                	add    ah,bl
    e6db:	0c 07                	or     al,0x7
    e6dd:	08 00                	or     BYTE PTR [rax],al
    e6df:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e6e2:	00 00                	add    BYTE PTR [rax],al
    e6e4:	74 03                	je     e6e9 <__GNU_EH_FRAME_HDR+0x70d>
    e6e6:	00 00                	add    BYTE PTR [rax],al
    e6e8:	48 68 ff ff b2 03    	rex.W push 0x3b2ffff
    e6ee:	00 00                	add    BYTE PTR [rax],al
    e6f0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e6f3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e6f9:	03 a9 03 0c 07 08    	add    ebp,DWORD PTR [rcx+0x8070c03]
    e6ff:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e702:	00 00                	add    BYTE PTR [rax],al
    e704:	94                   	xchg   esp,eax
    e705:	03 00                	add    eax,DWORD PTR [rax]
    e707:	00 da                	add    dl,bl
    e709:	6b ff ff             	imul   edi,edi,0xffffffff
    e70c:	83 00 00             	add    DWORD PTR [rax],0x0
    e70f:	00 00                	add    BYTE PTR [rax],al
    e711:	45 0e                	rex.RB (bad) 
    e713:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e719:	02 7a 0c             	add    bh,BYTE PTR [rdx+0xc]
    e71c:	07                   	(bad)  
    e71d:	08 00                	or     BYTE PTR [rax],al
    e71f:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    e722:	00 00                	add    BYTE PTR [rax],al
    e724:	b4 03                	mov    ah,0x3
    e726:	00 00                	add    BYTE PTR [rax],al
    e728:	3d 6c ff ff 2a       	cmp    eax,0x2affff6c
    e72d:	02 00                	add    al,BYTE PTR [rax]
    e72f:	00 00                	add    BYTE PTR [rax],al
    e731:	45 0e                	rex.RB (bad) 
    e733:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e739:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    e73d:	19 02                	sbb    DWORD PTR [rdx],eax
    e73f:	0c 07                	or     al,0x7
    e741:	08 00                	or     BYTE PTR [rax],al
    e743:	00 00                	add    BYTE PTR [rax],al
    e745:	00 00                	add    BYTE PTR [rax],al
    e747:	00 20                	add    BYTE PTR [rax],ah
    e749:	00 00                	add    BYTE PTR [rax],al
    e74b:	00 dc                	add    ah,bl
    e74d:	03 00                	add    eax,DWORD PTR [rax]
    e74f:	00 3f                	add    BYTE PTR [rdi],bh
    e751:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e752:	ff                   	(bad)  
    e753:	ff                   	(bad)  
    e754:	3d 02 00 00 00       	cmp    eax,0x2
    e759:	45 0e                	rex.RB (bad) 
    e75b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e761:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    e765:	2f                   	(bad)  
    e766:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    e769:	08 00                	or     BYTE PTR [rax],al
    e76b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e76e:	00 00                	add    BYTE PTR [rax],al
    e770:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    e773:	00 58 70             	add    BYTE PTR [rax+0x70],bl
    e776:	ff                   	(bad)  
    e777:	ff 66 00             	jmp    QWORD PTR [rsi+0x0]
    e77a:	00 00                	add    BYTE PTR [rax],al
    e77c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e77f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e785:	02 5d 0c             	add    bl,BYTE PTR [rbp+0xc]
    e788:	07                   	(bad)  
    e789:	08 00                	or     BYTE PTR [rax],al
    e78b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e78e:	00 00                	add    BYTE PTR [rax],al
    e790:	20 04 00             	and    BYTE PTR [rax+rax*1],al
    e793:	00 9e 70 ff ff 17    	add    BYTE PTR [rsi+0x17ffff70],bl
    e799:	00 00                	add    BYTE PTR [rax],al
    e79b:	00 00                	add    BYTE PTR [rax],al
    e79d:	45 0e                	rex.RB (bad) 
    e79f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e7a5:	4e 0c 07             	rex.WRX or al,0x7
    e7a8:	08 00                	or     BYTE PTR [rax],al
    e7aa:	00 00                	add    BYTE PTR [rax],al
    e7ac:	20 00                	and    BYTE PTR [rax],al
    e7ae:	00 00                	add    BYTE PTR [rax],al
    e7b0:	40 04 00             	rex add al,0x0
    e7b3:	00 95 70 ff ff 51    	add    BYTE PTR [rbp+0x51ffff70],dl
    e7b9:	00 00                	add    BYTE PTR [rax],al
    e7bb:	00 00                	add    BYTE PTR [rax],al
    e7bd:	45 0e                	rex.RB (bad) 
    e7bf:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e7c5:	02 48 0c             	add    cl,BYTE PTR [rax+0xc]
    e7c8:	07                   	(bad)  
    e7c9:	08 00                	or     BYTE PTR [rax],al
    e7cb:	00 00                	add    BYTE PTR [rax],al
    e7cd:	00 00                	add    BYTE PTR [rax],al
    e7cf:	00 20                	add    BYTE PTR [rax],ah
    e7d1:	00 00                	add    BYTE PTR [rax],al
    e7d3:	00 64 04 00          	add    BYTE PTR [rsp+rax*1+0x0],ah
    e7d7:	00 c2                	add    dl,al
    e7d9:	70 ff                	jo     e7da <__GNU_EH_FRAME_HDR+0x7fe>
    e7db:	ff                   	(bad)  
    e7dc:	3d 06 00 00 00       	cmp    eax,0x6
    e7e1:	45 0e                	rex.RB (bad) 
    e7e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e7e9:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    e7ed:	2f                   	(bad)  
    e7ee:	06                   	(bad)  
    e7ef:	0c 07                	or     al,0x7
    e7f1:	08 00                	or     BYTE PTR [rax],al
    e7f3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e7f6:	00 00                	add    BYTE PTR [rax],al
    e7f8:	88 04 00             	mov    BYTE PTR [rax+rax*1],al
    e7fb:	00 db                	add    bl,bl
    e7fd:	76 ff                	jbe    e7fe <__GNU_EH_FRAME_HDR+0x822>
    e7ff:	ff 1a                	call   FWORD PTR [rdx]
    e801:	00 00                	add    BYTE PTR [rax],al
    e803:	00 00                	add    BYTE PTR [rax],al
    e805:	45 0e                	rex.RB (bad) 
    e807:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e80d:	51                   	push   rcx
    e80e:	0c 07                	or     al,0x7
    e810:	08 00                	or     BYTE PTR [rax],al
    e812:	00 00                	add    BYTE PTR [rax],al
    e814:	1c 00                	sbb    al,0x0
    e816:	00 00                	add    BYTE PTR [rax],al
    e818:	a8 04                	test   al,0x4
    e81a:	00 00                	add    BYTE PTR [rax],al
    e81c:	d5                   	(bad)  
    e81d:	76 ff                	jbe    e81e <__GNU_EH_FRAME_HDR+0x842>
    e81f:	ff 29                	jmp    FWORD PTR [rcx]
    e821:	00 00                	add    BYTE PTR [rax],al
    e823:	00 00                	add    BYTE PTR [rax],al
    e825:	45 0e                	rex.RB (bad) 
    e827:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e82d:	60                   	(bad)  
    e82e:	0c 07                	or     al,0x7
    e830:	08 00                	or     BYTE PTR [rax],al
    e832:	00 00                	add    BYTE PTR [rax],al
    e834:	1c 00                	sbb    al,0x0
    e836:	00 00                	add    BYTE PTR [rax],al
    e838:	c8 04 00 00          	enter  0x4,0x0
    e83c:	de 76 ff             	fidiv  WORD PTR [rsi-0x1]
    e83f:	ff 30                	push   QWORD PTR [rax]
    e841:	00 00                	add    BYTE PTR [rax],al
    e843:	00 00                	add    BYTE PTR [rax],al
    e845:	45 0e                	rex.RB (bad) 
    e847:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e84d:	67 0c 07             	addr32 or al,0x7
    e850:	08 00                	or     BYTE PTR [rax],al
    e852:	00 00                	add    BYTE PTR [rax],al
    e854:	18 00                	sbb    BYTE PTR [rax],al
    e856:	00 00                	add    BYTE PTR [rax],al
    e858:	e8 04 00 00 ee       	call   ffffffffee00e861 <_end+0xffffffffeded3859>
    e85d:	76 ff                	jbe    e85e <__GNU_EH_FRAME_HDR+0x882>
    e85f:	ff 37                	push   QWORD PTR [rdi]
    e861:	00 00                	add    BYTE PTR [rax],al
    e863:	00 00                	add    BYTE PTR [rax],al
    e865:	45 0e                	rex.RB (bad) 
    e867:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e86d:	00 00                	add    BYTE PTR [rax],al
    e86f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e872:	00 00                	add    BYTE PTR [rax],al
    e874:	04 05                	add    al,0x5
    e876:	00 00                	add    BYTE PTR [rax],al
    e878:	09 77 ff             	or     DWORD PTR [rdi-0x1],esi
    e87b:	ff 45 01             	inc    DWORD PTR [rbp+0x1]
    e87e:	00 00                	add    BYTE PTR [rax],al
    e880:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e883:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e889:	03 3c 01             	add    edi,DWORD PTR [rcx+rax*1]
    e88c:	0c 07                	or     al,0x7
    e88e:	08 00                	or     BYTE PTR [rax],al
    e890:	1c 00                	sbb    al,0x0
    e892:	00 00                	add    BYTE PTR [rax],al
    e894:	24 05                	and    al,0x5
    e896:	00 00                	add    BYTE PTR [rax],al
    e898:	2e 78 ff             	cs js  e89a <__GNU_EH_FRAME_HDR+0x8be>
    e89b:	ff 60 01             	jmp    QWORD PTR [rax+0x1]
    e89e:	00 00                	add    BYTE PTR [rax],al
    e8a0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e8a3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e8a9:	03 57 01             	add    edx,DWORD PTR [rdi+0x1]
    e8ac:	0c 07                	or     al,0x7
    e8ae:	08 00                	or     BYTE PTR [rax],al
    e8b0:	1c 00                	sbb    al,0x0
    e8b2:	00 00                	add    BYTE PTR [rax],al
    e8b4:	44 05 00 00 6e 79    	rex.R add eax,0x796e0000
    e8ba:	ff                   	(bad)  
    e8bb:	ff 61 00             	jmp    QWORD PTR [rcx+0x0]
    e8be:	00 00                	add    BYTE PTR [rax],al
    e8c0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e8c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e8c9:	02 58 0c             	add    bl,BYTE PTR [rax+0xc]
    e8cc:	07                   	(bad)  
    e8cd:	08 00                	or     BYTE PTR [rax],al
    e8cf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e8d2:	00 00                	add    BYTE PTR [rax],al
    e8d4:	64 05 00 00 af 79    	fs add eax,0x79af0000
    e8da:	ff                   	(bad)  
    e8db:	ff                   	(bad)  
    e8dc:	be 00 00 00 00       	mov    esi,0x0
    e8e1:	45 0e                	rex.RB (bad) 
    e8e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e8e9:	02 b5 0c 07 08 00    	add    dh,BYTE PTR [rbp+0x8070c]
    e8ef:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e8f2:	00 00                	add    BYTE PTR [rax],al
    e8f4:	84 05 00 00 4d 7a    	test   BYTE PTR [rip+0x7a4d0000],al        # 7a4de8fa <_end+0x7a3a38f2>
    e8fa:	ff                   	(bad)  
    e8fb:	ff 52 02             	call   QWORD PTR [rdx+0x2]
    e8fe:	00 00                	add    BYTE PTR [rax],al
    e900:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e903:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e909:	03 49 02             	add    ecx,DWORD PTR [rcx+0x2]
    e90c:	0c 07                	or     al,0x7
    e90e:	08 00                	or     BYTE PTR [rax],al
    e910:	1c 00                	sbb    al,0x0
    e912:	00 00                	add    BYTE PTR [rax],al
    e914:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    e915:	05 00 00 7f 7c       	add    eax,0x7c7f0000
    e91a:	ff                   	(bad)  
    e91b:	ff                   	(bad)  
    e91c:	f8                   	clc    
    e91d:	01 00                	add    DWORD PTR [rax],eax
    e91f:	00 00                	add    BYTE PTR [rax],al
    e921:	45 0e                	rex.RB (bad) 
    e923:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e929:	03 ef                	add    ebp,edi
    e92b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    e92e:	08 00                	or     BYTE PTR [rax],al
    e930:	1c 00                	sbb    al,0x0
    e932:	00 00                	add    BYTE PTR [rax],al
    e934:	c4                   	(bad)  
    e935:	05 00 00 57 7e       	add    eax,0x7e570000
    e93a:	ff                   	(bad)  
    e93b:	ff 5a 00             	call   FWORD PTR [rdx+0x0]
    e93e:	00 00                	add    BYTE PTR [rax],al
    e940:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e943:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e949:	02 51 0c             	add    dl,BYTE PTR [rcx+0xc]
    e94c:	07                   	(bad)  
    e94d:	08 00                	or     BYTE PTR [rax],al
    e94f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e952:	00 00                	add    BYTE PTR [rax],al
    e954:	e4 05                	in     al,0x5
    e956:	00 00                	add    BYTE PTR [rax],al
    e958:	91                   	xchg   ecx,eax
    e959:	7e ff                	jle    e95a <__GNU_EH_FRAME_HDR+0x97e>
    e95b:	ff 0f                	dec    DWORD PTR [rdi]
    e95d:	03 00                	add    eax,DWORD PTR [rax]
    e95f:	00 00                	add    BYTE PTR [rax],al
    e961:	45 0e                	rex.RB (bad) 
    e963:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e969:	03 06                	add    eax,DWORD PTR [rsi]
    e96b:	03 0c 07             	add    ecx,DWORD PTR [rdi+rax*1]
    e96e:	08 00                	or     BYTE PTR [rax],al
    e970:	1c 00                	sbb    al,0x0
    e972:	00 00                	add    BYTE PTR [rax],al
    e974:	04 06                	add    al,0x6
    e976:	00 00                	add    BYTE PTR [rax],al
    e978:	80 81 ff ff 51 04 00 	add    BYTE PTR [rcx+0x451ffff],0x0
    e97f:	00 00                	add    BYTE PTR [rax],al
    e981:	45 0e                	rex.RB (bad) 
    e983:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e989:	4a 8c 03             	rex.WX mov WORD PTR [rbx],es
    e98c:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
    e990:	18 00                	sbb    BYTE PTR [rax],al
    e992:	00 00                	add    BYTE PTR [rax],al
    e994:	24 06                	and    al,0x6
    e996:	00 00                	add    BYTE PTR [rax],al
    e998:	b1 85                	mov    cl,0x85
    e99a:	ff                   	(bad)  
    e99b:	ff 2a                	jmp    FWORD PTR [rdx]
    e99d:	00 00                	add    BYTE PTR [rax],al
    e99f:	00 00                	add    BYTE PTR [rax],al
    e9a1:	45 0e                	rex.RB (bad) 
    e9a3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e9a9:	00 00                	add    BYTE PTR [rax],al
    e9ab:	00 20                	add    BYTE PTR [rax],ah
    e9ad:	00 00                	add    BYTE PTR [rax],al
    e9af:	00 40 06             	add    BYTE PTR [rax+0x6],al
    e9b2:	00 00                	add    BYTE PTR [rax],al
    e9b4:	bf 85 ff ff b2       	mov    edi,0xb2ffff85
    e9b9:	01 00                	add    DWORD PTR [rax],eax
    e9bb:	00 00                	add    BYTE PTR [rax],al
    e9bd:	45 0e                	rex.RB (bad) 
    e9bf:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e9c5:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    e9c9:	a1 01 0c 07 08 00 00 	movabs eax,ds:0x1c000008070c01
    e9d0:	1c 00 
    e9d2:	00 00                	add    BYTE PTR [rax],al
    e9d4:	64 06                	fs (bad) 
    e9d6:	00 00                	add    BYTE PTR [rax],al
    e9d8:	4d 87 ff             	xchg   r15,r15
    e9db:	ff 17                	call   QWORD PTR [rdi]
    e9dd:	00 00                	add    BYTE PTR [rax],al
    e9df:	00 00                	add    BYTE PTR [rax],al
    e9e1:	45 0e                	rex.RB (bad) 
    e9e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e9e9:	4e 0c 07             	rex.WRX or al,0x7
    e9ec:	08 00                	or     BYTE PTR [rax],al
    e9ee:	00 00                	add    BYTE PTR [rax],al
    e9f0:	1c 00                	sbb    al,0x0
    e9f2:	00 00                	add    BYTE PTR [rax],al
    e9f4:	84 06                	test   BYTE PTR [rsi],al
    e9f6:	00 00                	add    BYTE PTR [rax],al
    e9f8:	44 87 ff             	xchg   edi,r15d
    e9fb:	ff 4f 00             	dec    DWORD PTR [rdi+0x0]
    e9fe:	00 00                	add    BYTE PTR [rax],al
    ea00:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ea03:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea09:	02 46 0c             	add    al,BYTE PTR [rsi+0xc]
    ea0c:	07                   	(bad)  
    ea0d:	08 00                	or     BYTE PTR [rax],al
    ea0f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ea12:	00 00                	add    BYTE PTR [rax],al
    ea14:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    ea15:	06                   	(bad)  
    ea16:	00 00                	add    BYTE PTR [rax],al
    ea18:	73 87                	jae    e9a1 <__GNU_EH_FRAME_HDR+0x9c5>
    ea1a:	ff                   	(bad)  
    ea1b:	ff 4d 00             	dec    DWORD PTR [rbp+0x0]
    ea1e:	00 00                	add    BYTE PTR [rax],al
    ea20:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ea23:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea29:	02 44 0c 07          	add    al,BYTE PTR [rsp+rcx*1+0x7]
    ea2d:	08 00                	or     BYTE PTR [rax],al
    ea2f:	00 18                	add    BYTE PTR [rax],bl
    ea31:	00 00                	add    BYTE PTR [rax],al
    ea33:	00 c4                	add    ah,al
    ea35:	06                   	(bad)  
    ea36:	00 00                	add    BYTE PTR [rax],al
    ea38:	a0 87 ff ff 77 01 00 	movabs al,ds:0x177ffff87
    ea3f:	00 00 
    ea41:	45 0e                	rex.RB (bad) 
    ea43:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea49:	00 00                	add    BYTE PTR [rax],al
    ea4b:	00 20                	add    BYTE PTR [rax],ah
    ea4d:	00 00                	add    BYTE PTR [rax],al
    ea4f:	00 e0                	add    al,ah
    ea51:	06                   	(bad)  
    ea52:	00 00                	add    BYTE PTR [rax],al
    ea54:	fb                   	sti    
    ea55:	88 ff                	mov    bh,bh
    ea57:	ff 0f                	dec    DWORD PTR [rdi]
    ea59:	00 00                	add    BYTE PTR [rax],al
    ea5b:	00 00                	add    BYTE PTR [rax],al
    ea5d:	45 0e                	rex.RB (bad) 
    ea5f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea65:	46 0c 07             	rex.RX or al,0x7
    ea68:	08 00                	or     BYTE PTR [rax],al
    ea6a:	00 00                	add    BYTE PTR [rax],al
    ea6c:	00 00                	add    BYTE PTR [rax],al
    ea6e:	00 00                	add    BYTE PTR [rax],al
    ea70:	1c 00                	sbb    al,0x0
    ea72:	00 00                	add    BYTE PTR [rax],al
    ea74:	04 07                	add    al,0x7
    ea76:	00 00                	add    BYTE PTR [rax],al
    ea78:	e6 88                	out    0x88,al
    ea7a:	ff                   	(bad)  
    ea7b:	ff                   	(bad)  
    ea7c:	ee                   	out    dx,al
    ea7d:	01 00                	add    DWORD PTR [rax],eax
    ea7f:	00 00                	add    BYTE PTR [rax],al
    ea81:	45 0e                	rex.RB (bad) 
    ea83:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea89:	03 e5                	add    esp,ebp
    ea8b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ea8e:	08 00                	or     BYTE PTR [rax],al
    ea90:	1c 00                	sbb    al,0x0
    ea92:	00 00                	add    BYTE PTR [rax],al
    ea94:	24 07                	and    al,0x7
    ea96:	00 00                	add    BYTE PTR [rax],al
    ea98:	b4 8a                	mov    ah,0x8a
    ea9a:	ff                   	(bad)  
    ea9b:	ff                   	(bad)  
    ea9c:	e8 01 00 00 00       	call   eaa2 <__GNU_EH_FRAME_HDR+0xac6>
    eaa1:	45 0e                	rex.RB (bad) 
    eaa3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eaa9:	03 df                	add    ebx,edi
    eaab:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    eaae:	08 00                	or     BYTE PTR [rax],al
    eab0:	1c 00                	sbb    al,0x0
    eab2:	00 00                	add    BYTE PTR [rax],al
    eab4:	44 07                	rex.R (bad) 
    eab6:	00 00                	add    BYTE PTR [rax],al
    eab8:	7c 8c                	jl     ea46 <__GNU_EH_FRAME_HDR+0xa6a>
    eaba:	ff                   	(bad)  
    eabb:	ff 6c 00 00          	jmp    FWORD PTR [rax+rax*1+0x0]
    eabf:	00 00                	add    BYTE PTR [rax],al
    eac1:	45 0e                	rex.RB (bad) 
    eac3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eac9:	02 63 0c             	add    ah,BYTE PTR [rbx+0xc]
    eacc:	07                   	(bad)  
    eacd:	08 00                	or     BYTE PTR [rax],al
    eacf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ead2:	00 00                	add    BYTE PTR [rax],al
    ead4:	64 07                	fs (bad) 
    ead6:	00 00                	add    BYTE PTR [rax],al
    ead8:	c8 8c ff ff          	enter  0xff8c,0xff
    eadc:	72 00                	jb     eade <__GNU_EH_FRAME_HDR+0xb02>
    eade:	00 00                	add    BYTE PTR [rax],al
    eae0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eae3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eae9:	02 69 0c             	add    ch,BYTE PTR [rcx+0xc]
    eaec:	07                   	(bad)  
    eaed:	08 00                	or     BYTE PTR [rax],al
    eaef:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eaf2:	00 00                	add    BYTE PTR [rax],al
    eaf4:	84 07                	test   BYTE PTR [rdi],al
    eaf6:	00 00                	add    BYTE PTR [rax],al
    eaf8:	1a 8d ff ff 11 01    	sbb    cl,BYTE PTR [rbp+0x111ffff]
    eafe:	00 00                	add    BYTE PTR [rax],al
    eb00:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eb03:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb09:	03 08                	add    ecx,DWORD PTR [rax]
    eb0b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    eb0e:	08 00                	or     BYTE PTR [rax],al
    eb10:	1c 00                	sbb    al,0x0
    eb12:	00 00                	add    BYTE PTR [rax],al
    eb14:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    eb15:	07                   	(bad)  
    eb16:	00 00                	add    BYTE PTR [rax],al
    eb18:	0b 8e ff ff 5c 00    	or     ecx,DWORD PTR [rsi+0x5cffff]
    eb1e:	00 00                	add    BYTE PTR [rax],al
    eb20:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eb23:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb29:	02 53 0c             	add    dl,BYTE PTR [rbx+0xc]
    eb2c:	07                   	(bad)  
    eb2d:	08 00                	or     BYTE PTR [rax],al
    eb2f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eb32:	00 00                	add    BYTE PTR [rax],al
    eb34:	c4                   	(bad)  
    eb35:	07                   	(bad)  
    eb36:	00 00                	add    BYTE PTR [rax],al
    eb38:	47 8e ff             	rex.RXB mov ?,r15d
    eb3b:	ff                   	(bad)  
    eb3c:	3e 00 00             	ds add BYTE PTR [rax],al
    eb3f:	00 00                	add    BYTE PTR [rax],al
    eb41:	45 0e                	rex.RB (bad) 
    eb43:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb49:	75 0c                	jne    eb57 <__GNU_EH_FRAME_HDR+0xb7b>
    eb4b:	07                   	(bad)  
    eb4c:	08 00                	or     BYTE PTR [rax],al
    eb4e:	00 00                	add    BYTE PTR [rax],al
    eb50:	1c 00                	sbb    al,0x0
    eb52:	00 00                	add    BYTE PTR [rax],al
    eb54:	e4 07                	in     al,0x7
    eb56:	00 00                	add    BYTE PTR [rax],al
    eb58:	65 8e ff             	gs mov ?,edi
    eb5b:	ff 86 00 00 00 00    	inc    DWORD PTR [rsi+0x0]
    eb61:	45 0e                	rex.RB (bad) 
    eb63:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb69:	02 7d 0c             	add    bh,BYTE PTR [rbp+0xc]
    eb6c:	07                   	(bad)  
    eb6d:	08 00                	or     BYTE PTR [rax],al
    eb6f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eb72:	00 00                	add    BYTE PTR [rax],al
    eb74:	04 08                	add    al,0x8
    eb76:	00 00                	add    BYTE PTR [rax],al
    eb78:	cb                   	retf   
    eb79:	8e ff                	mov    ?,edi
    eb7b:	ff                   	(bad)  
    eb7c:	df 00                	fild   WORD PTR [rax]
    eb7e:	00 00                	add    BYTE PTR [rax],al
    eb80:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eb83:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb89:	02 d6                	add    dl,dh
    eb8b:	0c 07                	or     al,0x7
    eb8d:	08 00                	or     BYTE PTR [rax],al
    eb8f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eb92:	00 00                	add    BYTE PTR [rax],al
    eb94:	24 08                	and    al,0x8
    eb96:	00 00                	add    BYTE PTR [rax],al
    eb98:	8a 8f ff ff 74 00    	mov    cl,BYTE PTR [rdi+0x74ffff]
    eb9e:	00 00                	add    BYTE PTR [rax],al
    eba0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eba3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eba9:	02 6b 0c             	add    ch,BYTE PTR [rbx+0xc]
    ebac:	07                   	(bad)  
    ebad:	08 00                	or     BYTE PTR [rax],al
    ebaf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ebb2:	00 00                	add    BYTE PTR [rax],al
    ebb4:	44 08 00             	or     BYTE PTR [rax],r8b
    ebb7:	00 de                	add    dh,bl
    ebb9:	8f                   	(bad)  
    ebba:	ff                   	(bad)  
    ebbb:	ff 9c 00 00 00 00 45 	call   FWORD PTR [rax+rax*1+0x45000000]
    ebc2:	0e                   	(bad)  
    ebc3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ebc9:	02 93 0c 07 08 00    	add    dl,BYTE PTR [rbx+0x8070c]
    ebcf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ebd2:	00 00                	add    BYTE PTR [rax],al
    ebd4:	64 08 00             	or     BYTE PTR fs:[rax],al
    ebd7:	00 5a 90             	add    BYTE PTR [rdx-0x70],bl
    ebda:	ff                   	(bad)  
    ebdb:	ff 29                	jmp    FWORD PTR [rcx]
    ebdd:	00 00                	add    BYTE PTR [rax],al
    ebdf:	00 00                	add    BYTE PTR [rax],al
    ebe1:	45 0e                	rex.RB (bad) 
    ebe3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ebe9:	60                   	(bad)  
    ebea:	0c 07                	or     al,0x7
    ebec:	08 00                	or     BYTE PTR [rax],al
    ebee:	00 00                	add    BYTE PTR [rax],al
    ebf0:	1c 00                	sbb    al,0x0
    ebf2:	00 00                	add    BYTE PTR [rax],al
    ebf4:	84 08                	test   BYTE PTR [rax],cl
    ebf6:	00 00                	add    BYTE PTR [rax],al
    ebf8:	63 90 ff ff 29 00    	movsxd edx,DWORD PTR [rax+0x29ffff]
    ebfe:	00 00                	add    BYTE PTR [rax],al
    ec00:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ec03:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec09:	60                   	(bad)  
    ec0a:	0c 07                	or     al,0x7
    ec0c:	08 00                	or     BYTE PTR [rax],al
    ec0e:	00 00                	add    BYTE PTR [rax],al
    ec10:	24 00                	and    al,0x0
    ec12:	00 00                	add    BYTE PTR [rax],al
    ec14:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    ec15:	08 00                	or     BYTE PTR [rax],al
    ec17:	00 6c 90 ff          	add    BYTE PTR [rax+rdx*4-0x1],ch
    ec1b:	ff 53 01             	call   QWORD PTR [rbx+0x1]
    ec1e:	00 00                	add    BYTE PTR [rax],al
    ec20:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ec23:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec29:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    ec2d:	45 01 0c 07          	add    DWORD PTR [r15+rax*1],r9d
    ec31:	08 00                	or     BYTE PTR [rax],al
    ec33:	00 00                	add    BYTE PTR [rax],al
    ec35:	00 00                	add    BYTE PTR [rax],al
    ec37:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ec3a:	00 00                	add    BYTE PTR [rax],al
    ec3c:	cc                   	int3   
    ec3d:	08 00                	or     BYTE PTR [rax],al
    ec3f:	00 97 91 ff ff 1e    	add    BYTE PTR [rdi+0x1effff91],dl
    ec45:	00 00                	add    BYTE PTR [rax],al
    ec47:	00 00                	add    BYTE PTR [rax],al
    ec49:	45 0e                	rex.RB (bad) 
    ec4b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec51:	55                   	push   rbp
    ec52:	0c 07                	or     al,0x7
    ec54:	08 00                	or     BYTE PTR [rax],al
    ec56:	00 00                	add    BYTE PTR [rax],al
    ec58:	1c 00                	sbb    al,0x0
    ec5a:	00 00                	add    BYTE PTR [rax],al
    ec5c:	ec                   	in     al,dx
    ec5d:	08 00                	or     BYTE PTR [rax],al
    ec5f:	00 95 91 ff ff 63    	add    BYTE PTR [rbp+0x63ffff91],dl
    ec65:	01 00                	add    DWORD PTR [rax],eax
    ec67:	00 00                	add    BYTE PTR [rax],al
    ec69:	45 0e                	rex.RB (bad) 
    ec6b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec71:	03 5a 01             	add    ebx,DWORD PTR [rdx+0x1]
    ec74:	0c 07                	or     al,0x7
    ec76:	08 00                	or     BYTE PTR [rax],al
    ec78:	2c 00                	sub    al,0x0
    ec7a:	00 00                	add    BYTE PTR [rax],al
    ec7c:	0c 09                	or     al,0x9
    ec7e:	00 00                	add    BYTE PTR [rax],al
    ec80:	d8 92 ff ff 0e 02    	fcom   DWORD PTR [rdx+0x20effff]
    ec86:	00 00                	add    BYTE PTR [rax],al
    ec88:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ec8b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec91:	50                   	push   rax
    ec92:	8f 03                	pop    QWORD PTR [rbx]
    ec94:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
    ec9b:	07                   	(bad)  
    ec9c:	03 f5                	add    esi,ebp
    ec9e:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    eca1:	08 00                	or     BYTE PTR [rax],al
    eca3:	00 00                	add    BYTE PTR [rax],al
    eca5:	00 00                	add    BYTE PTR [rax],al
    eca7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ecaa:	00 00                	add    BYTE PTR [rax],al
    ecac:	3c 09                	cmp    al,0x9
    ecae:	00 00                	add    BYTE PTR [rax],al
    ecb0:	b6 94                	mov    dh,0x94
    ecb2:	ff                   	(bad)  
    ecb3:	ff b2 00 00 00 00    	push   QWORD PTR [rdx+0x0]
    ecb9:	45 0e                	rex.RB (bad) 
    ecbb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ecc1:	02 a9 0c 07 08 00    	add    ch,BYTE PTR [rcx+0x8070c]
    ecc7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ecca:	00 00                	add    BYTE PTR [rax],al
    eccc:	5c                   	pop    rsp
    eccd:	09 00                	or     DWORD PTR [rax],eax
    eccf:	00 48 95             	add    BYTE PTR [rax-0x6b],cl
    ecd2:	ff                   	(bad)  
    ecd3:	ff a5 00 00 00 00    	jmp    QWORD PTR [rbp+0x0]
    ecd9:	45 0e                	rex.RB (bad) 
    ecdb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ece1:	02 9c 0c 07 08 00 00 	add    bl,BYTE PTR [rsp+rcx*1+0x807]
    ece8:	24 00                	and    al,0x0
    ecea:	00 00                	add    BYTE PTR [rax],al
    ecec:	7c 09                	jl     ecf7 <__GNU_EH_FRAME_HDR+0xd1b>
    ecee:	00 00                	add    BYTE PTR [rax],al
    ecf0:	cd 95                	int    0x95
    ecf2:	ff                   	(bad)  
    ecf3:	ff 94 00 00 00 00 45 	call   QWORD PTR [rax+rax*1+0x45000000]
    ecfa:	0e                   	(bad)  
    ecfb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed01:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    ed05:	86 0c 07             	xchg   BYTE PTR [rdi+rax*1],cl
    ed08:	08 00                	or     BYTE PTR [rax],al
    ed0a:	00 00                	add    BYTE PTR [rax],al
    ed0c:	00 00                	add    BYTE PTR [rax],al
    ed0e:	00 00                	add    BYTE PTR [rax],al
    ed10:	1c 00                	sbb    al,0x0
    ed12:	00 00                	add    BYTE PTR [rax],al
    ed14:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    ed15:	09 00                	or     DWORD PTR [rax],eax
    ed17:	00 39                	add    BYTE PTR [rcx],bh
    ed19:	96                   	xchg   esi,eax
    ed1a:	ff                   	(bad)  
    ed1b:	ff d5                	call   rbp
    ed1d:	00 00                	add    BYTE PTR [rax],al
    ed1f:	00 00                	add    BYTE PTR [rax],al
    ed21:	45 0e                	rex.RB (bad) 
    ed23:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed29:	02 cc                	add    cl,ah
    ed2b:	0c 07                	or     al,0x7
    ed2d:	08 00                	or     BYTE PTR [rax],al
    ed2f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ed32:	00 00                	add    BYTE PTR [rax],al
    ed34:	c4                   	(bad)  
    ed35:	09 00                	or     DWORD PTR [rax],eax
    ed37:	00 ee                	add    dh,ch
    ed39:	96                   	xchg   esi,eax
    ed3a:	ff                   	(bad)  
    ed3b:	ff                   	(bad)  
    ed3c:	df 00                	fild   WORD PTR [rax]
    ed3e:	00 00                	add    BYTE PTR [rax],al
    ed40:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ed43:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed49:	02 d6                	add    dl,dh
    ed4b:	0c 07                	or     al,0x7
    ed4d:	08 00                	or     BYTE PTR [rax],al
    ed4f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ed52:	00 00                	add    BYTE PTR [rax],al
    ed54:	e4 09                	in     al,0x9
    ed56:	00 00                	add    BYTE PTR [rax],al
    ed58:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    ed59:	97                   	xchg   edi,eax
    ed5a:	ff                   	(bad)  
    ed5b:	ff                   	(bad)  
    ed5c:	7d 00                	jge    ed5e <__GNU_EH_FRAME_HDR+0xd82>
    ed5e:	00 00                	add    BYTE PTR [rax],al
    ed60:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ed63:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed69:	02 74 0c 07          	add    dh,BYTE PTR [rsp+rcx*1+0x7]
    ed6d:	08 00                	or     BYTE PTR [rax],al
    ed6f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ed72:	00 00                	add    BYTE PTR [rax],al
    ed74:	04 0a                	add    al,0xa
    ed76:	00 00                	add    BYTE PTR [rax],al
    ed78:	0a 98 ff ff 36 01    	or     bl,BYTE PTR [rax+0x136ffff]
    ed7e:	00 00                	add    BYTE PTR [rax],al
    ed80:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ed83:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed89:	03 2d 01 0c 07 08    	add    ebp,DWORD PTR [rip+0x8070c01]        # 807f990 <_end+0x7f44988>
    ed8f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ed92:	00 00                	add    BYTE PTR [rax],al
    ed94:	24 0a                	and    al,0xa
    ed96:	00 00                	add    BYTE PTR [rax],al
    ed98:	20 99 ff ff 7e 00    	and    BYTE PTR [rcx+0x7effff],bl
    ed9e:	00 00                	add    BYTE PTR [rax],al
    eda0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eda3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eda9:	02 75 0c             	add    dh,BYTE PTR [rbp+0xc]
    edac:	07                   	(bad)  
    edad:	08 00                	or     BYTE PTR [rax],al
    edaf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    edb2:	00 00                	add    BYTE PTR [rax],al
    edb4:	44 0a 00             	or     r8b,BYTE PTR [rax]
    edb7:	00 7e 99             	add    BYTE PTR [rsi-0x67],bh
    edba:	ff                   	(bad)  
    edbb:	ff 2a                	jmp    FWORD PTR [rdx]
    edbd:	02 00                	add    al,BYTE PTR [rax]
    edbf:	00 00                	add    BYTE PTR [rax],al
    edc1:	45 0e                	rex.RB (bad) 
    edc3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    edc9:	03 21                	add    esp,DWORD PTR [rcx]
    edcb:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    edce:	08 00                	or     BYTE PTR [rax],al
    edd0:	1c 00                	sbb    al,0x0
    edd2:	00 00                	add    BYTE PTR [rax],al
    edd4:	64 0a 00             	or     al,BYTE PTR fs:[rax]
    edd7:	00 88 9b ff ff c3    	add    BYTE PTR [rax-0x3c000065],cl
    eddd:	00 00                	add    BYTE PTR [rax],al
    eddf:	00 00                	add    BYTE PTR [rax],al
    ede1:	45 0e                	rex.RB (bad) 
    ede3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ede9:	02 ba 0c 07 08 00    	add    bh,BYTE PTR [rdx+0x8070c]
    edef:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    edf2:	00 00                	add    BYTE PTR [rax],al
    edf4:	84 0a                	test   BYTE PTR [rdx],cl
    edf6:	00 00                	add    BYTE PTR [rax],al
    edf8:	2b 9c ff ff 9b 01 00 	sub    ebx,DWORD PTR [rdi+rdi*8+0x19bff]
    edff:	00 00                	add    BYTE PTR [rax],al
    ee01:	45 0e                	rex.RB (bad) 
    ee03:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee09:	03 92 01 0c 07 08    	add    edx,DWORD PTR [rdx+0x8070c01]
    ee0f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ee12:	00 00                	add    BYTE PTR [rax],al
    ee14:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    ee15:	0a 00                	or     al,BYTE PTR [rax]
    ee17:	00 a6 9d ff ff 0d    	add    BYTE PTR [rsi+0xdffff9d],ah
    ee1d:	01 00                	add    DWORD PTR [rax],eax
    ee1f:	00 00                	add    BYTE PTR [rax],al
    ee21:	45 0e                	rex.RB (bad) 
    ee23:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee29:	03 04 01             	add    eax,DWORD PTR [rcx+rax*1]
    ee2c:	0c 07                	or     al,0x7
    ee2e:	08 00                	or     BYTE PTR [rax],al
    ee30:	1c 00                	sbb    al,0x0
    ee32:	00 00                	add    BYTE PTR [rax],al
    ee34:	c4                   	(bad)  
    ee35:	0a 00                	or     al,BYTE PTR [rax]
    ee37:	00 93 9e ff ff 66    	add    BYTE PTR [rbx+0x66ffff9e],dl
    ee3d:	00 00                	add    BYTE PTR [rax],al
    ee3f:	00 00                	add    BYTE PTR [rax],al
    ee41:	45 0e                	rex.RB (bad) 
    ee43:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee49:	02 5d 0c             	add    bl,BYTE PTR [rbp+0xc]
    ee4c:	07                   	(bad)  
    ee4d:	08 00                	or     BYTE PTR [rax],al
    ee4f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ee52:	00 00                	add    BYTE PTR [rax],al
    ee54:	e4 0a                	in     al,0xa
    ee56:	00 00                	add    BYTE PTR [rax],al
    ee58:	d9 9e ff ff 75 00    	fstp   DWORD PTR [rsi+0x75ffff]
    ee5e:	00 00                	add    BYTE PTR [rax],al
    ee60:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ee63:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee69:	02 6c 0c 07          	add    ch,BYTE PTR [rsp+rcx*1+0x7]
    ee6d:	08 00                	or     BYTE PTR [rax],al
    ee6f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ee72:	00 00                	add    BYTE PTR [rax],al
    ee74:	04 0b                	add    al,0xb
    ee76:	00 00                	add    BYTE PTR [rax],al
    ee78:	2e 9f                	cs lahf 
    ee7a:	ff                   	(bad)  
    ee7b:	ff                   	(bad)  
    ee7c:	db 00                	fild   DWORD PTR [rax]
    ee7e:	00 00                	add    BYTE PTR [rax],al
    ee80:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ee83:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee89:	02 d2                	add    dl,dl
    ee8b:	0c 07                	or     al,0x7
    ee8d:	08 00                	or     BYTE PTR [rax],al
    ee8f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ee92:	00 00                	add    BYTE PTR [rax],al
    ee94:	24 0b                	and    al,0xb
    ee96:	00 00                	add    BYTE PTR [rax],al
    ee98:	e9 9f ff ff 72       	jmp    7300ee3c <_end+0x72ed3e34>
    ee9d:	01 00                	add    DWORD PTR [rax],eax
    ee9f:	00 00                	add    BYTE PTR [rax],al
    eea1:	45 0e                	rex.RB (bad) 
    eea3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eea9:	03 69 01             	add    ebp,DWORD PTR [rcx+0x1]
    eeac:	0c 07                	or     al,0x7
    eeae:	08 00                	or     BYTE PTR [rax],al
    eeb0:	1c 00                	sbb    al,0x0
    eeb2:	00 00                	add    BYTE PTR [rax],al
    eeb4:	44 0b 00             	or     r8d,DWORD PTR [rax]
    eeb7:	00 3b                	add    BYTE PTR [rbx],bh
    eeb9:	a1 ff ff 6c 00 00 00 	movabs eax,ds:0x45000000006cffff
    eec0:	00 45 
    eec2:	0e                   	(bad)  
    eec3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eec9:	02 63 0c             	add    ah,BYTE PTR [rbx+0xc]
    eecc:	07                   	(bad)  
    eecd:	08 00                	or     BYTE PTR [rax],al
    eecf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eed2:	00 00                	add    BYTE PTR [rax],al
    eed4:	64 0b 00             	or     eax,DWORD PTR fs:[rax]
    eed7:	00 87 a1 ff ff 80    	add    BYTE PTR [rdi-0x7f00005f],al
    eedd:	00 00                	add    BYTE PTR [rax],al
    eedf:	00 00                	add    BYTE PTR [rax],al
    eee1:	45 0e                	rex.RB (bad) 
    eee3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eee9:	02 77 0c             	add    dh,BYTE PTR [rdi+0xc]
    eeec:	07                   	(bad)  
    eeed:	08 00                	or     BYTE PTR [rax],al
    eeef:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eef2:	00 00                	add    BYTE PTR [rax],al
    eef4:	84 0b                	test   BYTE PTR [rbx],cl
    eef6:	00 00                	add    BYTE PTR [rax],al
    eef8:	e7 a1                	out    0xa1,eax
    eefa:	ff                   	(bad)  
    eefb:	ff 16                	call   QWORD PTR [rsi]
    eefd:	00 00                	add    BYTE PTR [rax],al
    eeff:	00 00                	add    BYTE PTR [rax],al
    ef01:	45 0e                	rex.RB (bad) 
    ef03:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef09:	4d 0c 07             	rex.WRB or al,0x7
    ef0c:	08 00                	or     BYTE PTR [rax],al
    ef0e:	00 00                	add    BYTE PTR [rax],al
    ef10:	20 00                	and    BYTE PTR [rax],al
    ef12:	00 00                	add    BYTE PTR [rax],al
    ef14:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    ef15:	0b 00                	or     eax,DWORD PTR [rax]
    ef17:	00 dd                	add    ch,bl
    ef19:	a1 ff ff 3a 01 00 00 	movabs eax,ds:0x45000000013affff
    ef20:	00 45 
    ef22:	0e                   	(bad)  
    ef23:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef29:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    ef2d:	2c 01                	sub    al,0x1
    ef2f:	0c 07                	or     al,0x7
    ef31:	08 00                	or     BYTE PTR [rax],al
    ef33:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef36:	00 00                	add    BYTE PTR [rax],al
    ef38:	c8 0b 00 00          	enter  0xb,0x0
    ef3c:	f3 a2 ff ff 64 00 00 	repz movabs ds:0x450000000064ffff,al
    ef43:	00 00 45 
    ef46:	0e                   	(bad)  
    ef47:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef4d:	02 5b 0c             	add    bl,BYTE PTR [rbx+0xc]
    ef50:	07                   	(bad)  
    ef51:	08 00                	or     BYTE PTR [rax],al
    ef53:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef56:	00 00                	add    BYTE PTR [rax],al
    ef58:	e8 0b 00 00 37       	call   3700ef68 <_end+0x36ed3f60>
    ef5d:	a3 ff ff 53 00 00 00 	movabs ds:0x450000000053ffff,eax
    ef64:	00 45 
    ef66:	0e                   	(bad)  
    ef67:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef6d:	02 4a 0c             	add    cl,BYTE PTR [rdx+0xc]
    ef70:	07                   	(bad)  
    ef71:	08 00                	or     BYTE PTR [rax],al
    ef73:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef76:	00 00                	add    BYTE PTR [rax],al
    ef78:	08 0c 00             	or     BYTE PTR [rax+rax*1],cl
    ef7b:	00 6a a3             	add    BYTE PTR [rdx-0x5d],ch
    ef7e:	ff                   	(bad)  
    ef7f:	ff b1 00 00 00 00    	push   QWORD PTR [rcx+0x0]
    ef85:	45 0e                	rex.RB (bad) 
    ef87:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef8d:	02 a8 0c 07 08 00    	add    ch,BYTE PTR [rax+0x8070c]
    ef93:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef96:	00 00                	add    BYTE PTR [rax],al
    ef98:	28 0c 00             	sub    BYTE PTR [rax+rax*1],cl
    ef9b:	00 fb                	add    bl,bh
    ef9d:	a3 ff ff cb 00 00 00 	movabs ds:0x4500000000cbffff,eax
    efa4:	00 45 
    efa6:	0e                   	(bad)  
    efa7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    efad:	02 c2                	add    al,dl
    efaf:	0c 07                	or     al,0x7
    efb1:	08 00                	or     BYTE PTR [rax],al
    efb3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    efb6:	00 00                	add    BYTE PTR [rax],al
    efb8:	48 0c 00             	rex.W or al,0x0
    efbb:	00 a6 a4 ff ff 55    	add    BYTE PTR [rsi+0x55ffffa4],ah
    efc1:	00 00                	add    BYTE PTR [rax],al
    efc3:	00 00                	add    BYTE PTR [rax],al
    efc5:	45 0e                	rex.RB (bad) 
    efc7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    efcd:	02 4c 0c 07          	add    cl,BYTE PTR [rsp+rcx*1+0x7]
    efd1:	08 00                	or     BYTE PTR [rax],al
    efd3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    efd6:	00 00                	add    BYTE PTR [rax],al
    efd8:	68 0c 00 00 db       	push   0xffffffffdb00000c
    efdd:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    efde:	ff                   	(bad)  
    efdf:	ff 30                	push   QWORD PTR [rax]
    efe1:	00 00                	add    BYTE PTR [rax],al
    efe3:	00 00                	add    BYTE PTR [rax],al
    efe5:	45 0e                	rex.RB (bad) 
    efe7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    efed:	67 0c 07             	addr32 or al,0x7
    eff0:	08 00                	or     BYTE PTR [rax],al
    eff2:	00 00                	add    BYTE PTR [rax],al
    eff4:	1c 00                	sbb    al,0x0
    eff6:	00 00                	add    BYTE PTR [rax],al
    eff8:	88 0c 00             	mov    BYTE PTR [rax+rax*1],cl
    effb:	00 eb                	add    bl,ch
    effd:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    effe:	ff                   	(bad)  
    efff:	ff 67 00             	jmp    QWORD PTR [rdi+0x0]
    f002:	00 00                	add    BYTE PTR [rax],al
    f004:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f007:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f00d:	02 5e 0c             	add    bl,BYTE PTR [rsi+0xc]
    f010:	07                   	(bad)  
    f011:	08 00                	or     BYTE PTR [rax],al
    f013:	00 20                	add    BYTE PTR [rax],ah
    f015:	00 00                	add    BYTE PTR [rax],al
    f017:	00 a8 0c 00 00 32    	add    BYTE PTR [rax+0x3200000c],ch
    f01d:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    f01e:	ff                   	(bad)  
    f01f:	ff 0c 0f             	dec    DWORD PTR [rdi+rcx*1]
    f022:	00 00                	add    BYTE PTR [rax],al
    f024:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f027:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f02d:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    f031:	fb                   	sti    
    f032:	0e                   	(bad)  
    f033:	0c 07                	or     al,0x7
    f035:	08 00                	or     BYTE PTR [rax],al
    f037:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f03a:	00 00                	add    BYTE PTR [rax],al
    f03c:	cc                   	int3   
    f03d:	0c 00                	or     al,0x0
    f03f:	00 1a                	add    BYTE PTR [rdx],bl
    f041:	b4 ff                	mov    ah,0xff
    f043:	ff 46 00             	inc    DWORD PTR [rsi+0x0]
    f046:	00 00                	add    BYTE PTR [rax],al
    f048:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f04b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f051:	7d 0c                	jge    f05f <__GNU_EH_FRAME_HDR+0x1083>
    f053:	07                   	(bad)  
    f054:	08 00                	or     BYTE PTR [rax],al
    f056:	00 00                	add    BYTE PTR [rax],al
    f058:	24 00                	and    al,0x0
    f05a:	00 00                	add    BYTE PTR [rax],al
    f05c:	ec                   	in     al,dx
    f05d:	0c 00                	or     al,0x0
    f05f:	00 40 b4             	add    BYTE PTR [rax-0x4c],al
    f062:	ff                   	(bad)  
    f063:	ff                   	(bad)  
    f064:	3b 02                	cmp    eax,DWORD PTR [rdx]
    f066:	00 00                	add    BYTE PTR [rax],al
    f068:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f06b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f071:	4b 8f 03             	rex.WXB pop QWORD PTR [r11]
    f074:	8e 04 8c             	mov    es,WORD PTR [rsp+rcx*4]
    f077:	05 83 06 03 27       	add    eax,0x27030683
    f07c:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    f07f:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
    f082:	00 00                	add    BYTE PTR [rax],al
    f084:	14 0d                	adc    al,0xd
    f086:	00 00                	add    BYTE PTR [rax],al
    f088:	53                   	push   rbx
    f089:	b6 ff                	mov    dh,0xff
    f08b:	ff a5 01 00 00 00    	jmp    QWORD PTR [rbp+0x1]
    f091:	45 0e                	rex.RB (bad) 
    f093:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f099:	03 9c 01 0c 07 08 00 	add    ebx,DWORD PTR [rcx+rax*1+0x8070c]
    f0a0:	1c 00                	sbb    al,0x0
    f0a2:	00 00                	add    BYTE PTR [rax],al
    f0a4:	34 0d                	xor    al,0xd
    f0a6:	00 00                	add    BYTE PTR [rax],al
    f0a8:	d8 b7 ff ff 12 01    	fdiv   DWORD PTR [rdi+0x112ffff]
    f0ae:	00 00                	add    BYTE PTR [rax],al
    f0b0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f0b3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f0b9:	03 09                	add    ecx,DWORD PTR [rcx]
    f0bb:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f0be:	08 00                	or     BYTE PTR [rax],al
    f0c0:	24 00                	and    al,0x0
    f0c2:	00 00                	add    BYTE PTR [rax],al
    f0c4:	54                   	push   rsp
    f0c5:	0d 00 00 ca b8       	or     eax,0xb8ca0000
    f0ca:	ff                   	(bad)  
    f0cb:	ff                   	(bad)  
    f0cc:	bc 00 00 00 00       	mov    esp,0x0
    f0d1:	45 0e                	rex.RB (bad) 
    f0d3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f0d9:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    f0dd:	ae                   	scas   al,BYTE PTR es:[rdi]
    f0de:	0c 07                	or     al,0x7
    f0e0:	08 00                	or     BYTE PTR [rax],al
    f0e2:	00 00                	add    BYTE PTR [rax],al
    f0e4:	00 00                	add    BYTE PTR [rax],al
    f0e6:	00 00                	add    BYTE PTR [rax],al
    f0e8:	24 00                	and    al,0x0
    f0ea:	00 00                	add    BYTE PTR [rax],al
    f0ec:	7c 0d                	jl     f0fb <__GNU_EH_FRAME_HDR+0x111f>
    f0ee:	00 00                	add    BYTE PTR [rax],al
    f0f0:	5e                   	pop    rsi
    f0f1:	b9 ff ff 9b 01       	mov    ecx,0x19bffff
    f0f6:	00 00                	add    BYTE PTR [rax],al
    f0f8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f0fb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f101:	47 8c 03             	rex.RXB mov WORD PTR [r11],es
    f104:	83 04 03 8b          	add    DWORD PTR [rbx+rax*1],0xffffff8b
    f108:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f10b:	08 00                	or     BYTE PTR [rax],al
    f10d:	00 00                	add    BYTE PTR [rax],al
    f10f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f112:	00 00                	add    BYTE PTR [rax],al
    f114:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    f115:	0d 00 00 d1 ba       	or     eax,0xbad10000
    f11a:	ff                   	(bad)  
    f11b:	ff a5 00 00 00 00    	jmp    QWORD PTR [rbp+0x0]
    f121:	45 0e                	rex.RB (bad) 
    f123:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f129:	02 9c 0c 07 08 00 00 	add    bl,BYTE PTR [rsp+rcx*1+0x807]
    f130:	1c 00                	sbb    al,0x0
    f132:	00 00                	add    BYTE PTR [rax],al
    f134:	c4                   	(bad)  
    f135:	0d 00 00 56 bb       	or     eax,0xbb560000
    f13a:	ff                   	(bad)  
    f13b:	ff 43 01             	inc    DWORD PTR [rbx+0x1]
    f13e:	00 00                	add    BYTE PTR [rax],al
    f140:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f143:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f149:	03 3a                	add    edi,DWORD PTR [rdx]
    f14b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f14e:	08 00                	or     BYTE PTR [rax],al
    f150:	1c 00                	sbb    al,0x0
    f152:	00 00                	add    BYTE PTR [rax],al
    f154:	e4 0d                	in     al,0xd
    f156:	00 00                	add    BYTE PTR [rax],al
    f158:	79 bc                	jns    f116 <__GNU_EH_FRAME_HDR+0x113a>
    f15a:	ff                   	(bad)  
    f15b:	ff f3                	push   rbx
    f15d:	00 00                	add    BYTE PTR [rax],al
    f15f:	00 00                	add    BYTE PTR [rax],al
    f161:	45 0e                	rex.RB (bad) 
    f163:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f169:	02 ea                	add    ch,dl
    f16b:	0c 07                	or     al,0x7
    f16d:	08 00                	or     BYTE PTR [rax],al
    f16f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f172:	00 00                	add    BYTE PTR [rax],al
    f174:	04 0e                	add    al,0xe
    f176:	00 00                	add    BYTE PTR [rax],al
    f178:	4c bd ff ff 8e 02 00 	rex.WR movabs rbp,0x45000000028effff
    f17f:	00 00 45 
    f182:	0e                   	(bad)  
    f183:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f189:	4a 8c 03             	rex.WX mov WORD PTR [rbx],es
    f18c:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
    f190:	1c 00                	sbb    al,0x0
    f192:	00 00                	add    BYTE PTR [rax],al
    f194:	24 0e                	and    al,0xe
    f196:	00 00                	add    BYTE PTR [rax],al
    f198:	ba bf ff ff 6a       	mov    edx,0x6affffbf
    f19d:	00 00                	add    BYTE PTR [rax],al
    f19f:	00 00                	add    BYTE PTR [rax],al
    f1a1:	45 0e                	rex.RB (bad) 
    f1a3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f1a9:	02 61 0c             	add    ah,BYTE PTR [rcx+0xc]
    f1ac:	07                   	(bad)  
    f1ad:	08 00                	or     BYTE PTR [rax],al
    f1af:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f1b2:	00 00                	add    BYTE PTR [rax],al
    f1b4:	44 0e                	rex.R (bad) 
    f1b6:	00 00                	add    BYTE PTR [rax],al
    f1b8:	04 c0                	add    al,0xc0
    f1ba:	ff                   	(bad)  
    f1bb:	ff 6e 00             	jmp    FWORD PTR [rsi+0x0]
    f1be:	00 00                	add    BYTE PTR [rax],al
    f1c0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f1c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f1c9:	02 65 0c             	add    ah,BYTE PTR [rbp+0xc]
    f1cc:	07                   	(bad)  
    f1cd:	08 00                	or     BYTE PTR [rax],al
    f1cf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f1d2:	00 00                	add    BYTE PTR [rax],al
    f1d4:	64 0e                	fs (bad) 
    f1d6:	00 00                	add    BYTE PTR [rax],al
    f1d8:	52                   	push   rdx
    f1d9:	c0 ff ff             	sar    bh,0xff
    f1dc:	70 00                	jo     f1de <__GNU_EH_FRAME_HDR+0x1202>
    f1de:	00 00                	add    BYTE PTR [rax],al
    f1e0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f1e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f1e9:	02 67 0c             	add    ah,BYTE PTR [rdi+0xc]
    f1ec:	07                   	(bad)  
    f1ed:	08 00                	or     BYTE PTR [rax],al
    f1ef:	00 20                	add    BYTE PTR [rax],ah
    f1f1:	00 00                	add    BYTE PTR [rax],al
    f1f3:	00 84 0e 00 00 a2 c0 	add    BYTE PTR [rsi+rcx*1-0x3f5e0000],al
    f1fa:	ff                   	(bad)  
    f1fb:	ff 8d 01 00 00 00    	dec    DWORD PTR [rbp+0x1]
    f201:	45 0e                	rex.RB (bad) 
    f203:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f209:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    f20d:	7f 01                	jg     f210 <__GNU_EH_FRAME_HDR+0x1234>
    f20f:	0c 07                	or     al,0x7
    f211:	08 00                	or     BYTE PTR [rax],al
	...

000000000000f214 <__FRAME_END__>:
    f214:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .tbss:

0000000000010b90 <buffer+0x10b90>:
	...

Disassembly of section .init_array:

0000000000010b90 <__frame_dummy_init_array_entry>:
   10b90:	20 29                	and    BYTE PTR [rcx],ch
   10b92:	00 00                	add    BYTE PTR [rax],al
   10b94:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000010b98 <__do_global_dtors_aux_fini_array_entry>:
   10b98:	e0 28                	loopne 10bc2 <_DYNAMIC+0x22>
   10b9a:	00 00                	add    BYTE PTR [rax],al
   10b9c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000010ba0 <_DYNAMIC>:
   10ba0:	01 00                	add    DWORD PTR [rax],eax
   10ba2:	00 00                	add    BYTE PTR [rax],al
   10ba4:	00 00                	add    BYTE PTR [rax],al
   10ba6:	00 00                	add    BYTE PTR [rax],al
   10ba8:	99                   	cdq    
   10ba9:	02 00                	add    al,BYTE PTR [rax]
   10bab:	00 00                	add    BYTE PTR [rax],al
   10bad:	00 00                	add    BYTE PTR [rax],al
   10baf:	00 01                	add    BYTE PTR [rcx],al
   10bb1:	00 00                	add    BYTE PTR [rax],al
   10bb3:	00 00                	add    BYTE PTR [rax],al
   10bb5:	00 00                	add    BYTE PTR [rax],al
   10bb7:	00 a8 02 00 00 00    	add    BYTE PTR [rax+0x2],ch
   10bbd:	00 00                	add    BYTE PTR [rax],al
   10bbf:	00 01                	add    BYTE PTR [rcx],al
   10bc1:	00 00                	add    BYTE PTR [rax],al
   10bc3:	00 00                	add    BYTE PTR [rax],al
   10bc5:	00 00                	add    BYTE PTR [rax],al
   10bc7:	00 b8 02 00 00 00    	add    BYTE PTR [rax+0x2],bh
   10bcd:	00 00                	add    BYTE PTR [rax],al
   10bcf:	00 01                	add    BYTE PTR [rcx],al
   10bd1:	00 00                	add    BYTE PTR [rax],al
   10bd3:	00 00                	add    BYTE PTR [rax],al
   10bd5:	00 00                	add    BYTE PTR [rax],al
   10bd7:	00 c7                	add    bh,al
   10bd9:	02 00                	add    al,BYTE PTR [rax]
   10bdb:	00 00                	add    BYTE PTR [rax],al
   10bdd:	00 00                	add    BYTE PTR [rax],al
   10bdf:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
   10be2:	00 00                	add    BYTE PTR [rax],al
   10be4:	00 00                	add    BYTE PTR [rax],al
   10be6:	00 00                	add    BYTE PTR [rax],al
   10be8:	00 20                	add    BYTE PTR [rax],ah
   10bea:	00 00                	add    BYTE PTR [rax],al
   10bec:	00 00                	add    BYTE PTR [rax],al
   10bee:	00 00                	add    BYTE PTR [rax],al
   10bf0:	0d 00 00 00 00       	or     eax,0x0
   10bf5:	00 00                	add    BYTE PTR [rax],al
   10bf7:	00 28                	add    BYTE PTR [rax],ch
   10bf9:	b4 00                	mov    ah,0x0
   10bfb:	00 00                	add    BYTE PTR [rax],al
   10bfd:	00 00                	add    BYTE PTR [rax],al
   10bff:	00 19                	add    BYTE PTR [rcx],bl
   10c01:	00 00                	add    BYTE PTR [rax],al
   10c03:	00 00                	add    BYTE PTR [rax],al
   10c05:	00 00                	add    BYTE PTR [rax],al
   10c07:	00 90 0b 01 00 00    	add    BYTE PTR [rax+0x10b],dl
   10c0d:	00 00                	add    BYTE PTR [rax],al
   10c0f:	00 1b                	add    BYTE PTR [rbx],bl
   10c11:	00 00                	add    BYTE PTR [rax],al
   10c13:	00 00                	add    BYTE PTR [rax],al
   10c15:	00 00                	add    BYTE PTR [rax],al
   10c17:	00 08                	add    BYTE PTR [rax],cl
   10c19:	00 00                	add    BYTE PTR [rax],al
   10c1b:	00 00                	add    BYTE PTR [rax],al
   10c1d:	00 00                	add    BYTE PTR [rax],al
   10c1f:	00 1a                	add    BYTE PTR [rdx],bl
   10c21:	00 00                	add    BYTE PTR [rax],al
   10c23:	00 00                	add    BYTE PTR [rax],al
   10c25:	00 00                	add    BYTE PTR [rax],al
   10c27:	00 98 0b 01 00 00    	add    BYTE PTR [rax+0x10b],bl
   10c2d:	00 00                	add    BYTE PTR [rax],al
   10c2f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   10c32:	00 00                	add    BYTE PTR [rax],al
   10c34:	00 00                	add    BYTE PTR [rax],al
   10c36:	00 00                	add    BYTE PTR [rax],al
   10c38:	08 00                	or     BYTE PTR [rax],al
   10c3a:	00 00                	add    BYTE PTR [rax],al
   10c3c:	00 00                	add    BYTE PTR [rax],al
   10c3e:	00 00                	add    BYTE PTR [rax],al
   10c40:	f5                   	cmc    
   10c41:	fe                   	(bad)  
   10c42:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10c45:	00 00                	add    BYTE PTR [rax],al
   10c47:	00 e8                	add    al,ch
   10c49:	03 00                	add    eax,DWORD PTR [rax]
   10c4b:	00 00                	add    BYTE PTR [rax],al
   10c4d:	00 00                	add    BYTE PTR [rax],al
   10c4f:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 10c55 <_DYNAMIC+0xb5>
   10c55:	00 00                	add    BYTE PTR [rax],al
   10c57:	00 d8                	add    al,bl
   10c59:	0a 00                	or     al,BYTE PTR [rax]
   10c5b:	00 00                	add    BYTE PTR [rax],al
   10c5d:	00 00                	add    BYTE PTR [rax],al
   10c5f:	00 06                	add    BYTE PTR [rsi],al
   10c61:	00 00                	add    BYTE PTR [rax],al
   10c63:	00 00                	add    BYTE PTR [rax],al
   10c65:	00 00                	add    BYTE PTR [rax],al
   10c67:	00 18                	add    BYTE PTR [rax],bl
   10c69:	04 00                	add    al,0x0
   10c6b:	00 00                	add    BYTE PTR [rax],al
   10c6d:	00 00                	add    BYTE PTR [rax],al
   10c6f:	00 0a                	add    BYTE PTR [rdx],cl
   10c71:	00 00                	add    BYTE PTR [rax],al
   10c73:	00 00                	add    BYTE PTR [rax],al
   10c75:	00 00                	add    BYTE PTR [rax],al
   10c77:	00 06                	add    BYTE PTR [rsi],al
   10c79:	03 00                	add    eax,DWORD PTR [rax]
   10c7b:	00 00                	add    BYTE PTR [rax],al
   10c7d:	00 00                	add    BYTE PTR [rax],al
   10c7f:	00 0b                	add    BYTE PTR [rbx],cl
   10c81:	00 00                	add    BYTE PTR [rax],al
   10c83:	00 00                	add    BYTE PTR [rax],al
   10c85:	00 00                	add    BYTE PTR [rax],al
   10c87:	00 18                	add    BYTE PTR [rax],bl
   10c89:	00 00                	add    BYTE PTR [rax],al
   10c8b:	00 00                	add    BYTE PTR [rax],al
   10c8d:	00 00                	add    BYTE PTR [rax],al
   10c8f:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 10c95 <_DYNAMIC+0xf5>
	...
   10c9d:	00 00                	add    BYTE PTR [rax],al
   10c9f:	00 03                	add    BYTE PTR [rbx],al
   10ca1:	00 00                	add    BYTE PTR [rax],al
   10ca3:	00 00                	add    BYTE PTR [rax],al
   10ca5:	00 00                	add    BYTE PTR [rax],al
   10ca7:	00 c0                	add    al,al
   10ca9:	0d 01 00 00 00       	or     eax,0x1
   10cae:	00 00                	add    BYTE PTR [rax],al
   10cb0:	02 00                	add    al,BYTE PTR [rax]
   10cb2:	00 00                	add    BYTE PTR [rax],al
   10cb4:	00 00                	add    BYTE PTR [rax],al
   10cb6:	00 00                	add    BYTE PTR [rax],al
   10cb8:	00 06                	add    BYTE PTR [rsi],al
   10cba:	00 00                	add    BYTE PTR [rax],al
   10cbc:	00 00                	add    BYTE PTR [rax],al
   10cbe:	00 00                	add    BYTE PTR [rax],al
   10cc0:	14 00                	adc    al,0x0
   10cc2:	00 00                	add    BYTE PTR [rax],al
   10cc4:	00 00                	add    BYTE PTR [rax],al
   10cc6:	00 00                	add    BYTE PTR [rax],al
   10cc8:	07                   	(bad)  
   10cc9:	00 00                	add    BYTE PTR [rax],al
   10ccb:	00 00                	add    BYTE PTR [rax],al
   10ccd:	00 00                	add    BYTE PTR [rax],al
   10ccf:	00 17                	add    BYTE PTR [rdi],dl
	...
   10cd9:	10 00                	adc    BYTE PTR [rax],al
   10cdb:	00 00                	add    BYTE PTR [rax],al
   10cdd:	00 00                	add    BYTE PTR [rax],al
   10cdf:	00 07                	add    BYTE PTR [rdi],al
   10ce1:	00 00                	add    BYTE PTR [rax],al
   10ce3:	00 00                	add    BYTE PTR [rax],al
   10ce5:	00 00                	add    BYTE PTR [rax],al
   10ce7:	00 e0                	add    al,ah
   10ce9:	0e                   	(bad)  
   10cea:	00 00                	add    BYTE PTR [rax],al
   10cec:	00 00                	add    BYTE PTR [rax],al
   10cee:	00 00                	add    BYTE PTR [rax],al
   10cf0:	08 00                	or     BYTE PTR [rax],al
   10cf2:	00 00                	add    BYTE PTR [rax],al
   10cf4:	00 00                	add    BYTE PTR [rax],al
   10cf6:	00 00                	add    BYTE PTR [rax],al
   10cf8:	20 01                	and    BYTE PTR [rcx],al
   10cfa:	00 00                	add    BYTE PTR [rax],al
   10cfc:	00 00                	add    BYTE PTR [rax],al
   10cfe:	00 00                	add    BYTE PTR [rax],al
   10d00:	09 00                	or     DWORD PTR [rax],eax
   10d02:	00 00                	add    BYTE PTR [rax],al
   10d04:	00 00                	add    BYTE PTR [rax],al
   10d06:	00 00                	add    BYTE PTR [rax],al
   10d08:	18 00                	sbb    BYTE PTR [rax],al
   10d0a:	00 00                	add    BYTE PTR [rax],al
   10d0c:	00 00                	add    BYTE PTR [rax],al
   10d0e:	00 00                	add    BYTE PTR [rax],al
   10d10:	1e                   	(bad)  
   10d11:	00 00                	add    BYTE PTR [rax],al
   10d13:	00 00                	add    BYTE PTR [rax],al
   10d15:	00 00                	add    BYTE PTR [rax],al
   10d17:	00 08                	add    BYTE PTR [rax],cl
   10d19:	00 00                	add    BYTE PTR [rax],al
   10d1b:	00 00                	add    BYTE PTR [rax],al
   10d1d:	00 00                	add    BYTE PTR [rax],al
   10d1f:	00 fb                	add    bl,bh
   10d21:	ff                   	(bad)  
   10d22:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d25:	00 00                	add    BYTE PTR [rax],al
   10d27:	00 01                	add    BYTE PTR [rcx],al
   10d29:	00 00                	add    BYTE PTR [rax],al
   10d2b:	08 00                	or     BYTE PTR [rax],al
   10d2d:	00 00                	add    BYTE PTR [rax],al
   10d2f:	00 fe                	add    dh,bh
   10d31:	ff                   	(bad)  
   10d32:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d35:	00 00                	add    BYTE PTR [rax],al
   10d37:	00 70 0e             	add    BYTE PTR [rax+0xe],dh
   10d3a:	00 00                	add    BYTE PTR [rax],al
   10d3c:	00 00                	add    BYTE PTR [rax],al
   10d3e:	00 00                	add    BYTE PTR [rax],al
   10d40:	ff                   	(bad)  
   10d41:	ff                   	(bad)  
   10d42:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d45:	00 00                	add    BYTE PTR [rax],al
   10d47:	00 02                	add    BYTE PTR [rdx],al
   10d49:	00 00                	add    BYTE PTR [rax],al
   10d4b:	00 00                	add    BYTE PTR [rax],al
   10d4d:	00 00                	add    BYTE PTR [rax],al
   10d4f:	00 f0                	add    al,dh
   10d51:	ff                   	(bad)  
   10d52:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d55:	00 00                	add    BYTE PTR [rax],al
   10d57:	00 de                	add    dh,bl
   10d59:	0d 00 00 00 00       	or     eax,0x0
   10d5e:	00 00                	add    BYTE PTR [rax],al
   10d60:	f9                   	stc    
   10d61:	ff                   	(bad)  
   10d62:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d65:	00 00                	add    BYTE PTR [rax],al
   10d67:	00 06                	add    BYTE PTR [rsi],al
	...

Disassembly of section .got:

0000000000010dc0 <_GLOBAL_OFFSET_TABLE_>:
   10dc0:	a0 0b 01 00 00 00 00 	movabs al,ds:0x10b
   10dc7:	00 00 
	...
   10dd5:	00 00                	add    BYTE PTR [rax],al
   10dd7:	00 30                	add    BYTE PTR [rax],dh
   10dd9:	20 00                	and    BYTE PTR [rax],al
   10ddb:	00 00                	add    BYTE PTR [rax],al
   10ddd:	00 00                	add    BYTE PTR [rax],al
   10ddf:	00 40 20             	add    BYTE PTR [rax+0x20],al
   10de2:	00 00                	add    BYTE PTR [rax],al
   10de4:	00 00                	add    BYTE PTR [rax],al
   10de6:	00 00                	add    BYTE PTR [rax],al
   10de8:	50                   	push   rax
   10de9:	20 00                	and    BYTE PTR [rax],al
   10deb:	00 00                	add    BYTE PTR [rax],al
   10ded:	00 00                	add    BYTE PTR [rax],al
   10def:	00 60 20             	add    BYTE PTR [rax+0x20],ah
   10df2:	00 00                	add    BYTE PTR [rax],al
   10df4:	00 00                	add    BYTE PTR [rax],al
   10df6:	00 00                	add    BYTE PTR [rax],al
   10df8:	70 20                	jo     10e1a <_GLOBAL_OFFSET_TABLE_+0x5a>
   10dfa:	00 00                	add    BYTE PTR [rax],al
   10dfc:	00 00                	add    BYTE PTR [rax],al
   10dfe:	00 00                	add    BYTE PTR [rax],al
   10e00:	80 20 00             	and    BYTE PTR [rax],0x0
   10e03:	00 00                	add    BYTE PTR [rax],al
   10e05:	00 00                	add    BYTE PTR [rax],al
   10e07:	00 90 20 00 00 00    	add    BYTE PTR [rax+0x20],dl
   10e0d:	00 00                	add    BYTE PTR [rax],al
   10e0f:	00 a0 20 00 00 00    	add    BYTE PTR [rax+0x20],ah
   10e15:	00 00                	add    BYTE PTR [rax],al
   10e17:	00 b0 20 00 00 00    	add    BYTE PTR [rax+0x20],dh
   10e1d:	00 00                	add    BYTE PTR [rax],al
   10e1f:	00 c0                	add    al,al
   10e21:	20 00                	and    BYTE PTR [rax],al
   10e23:	00 00                	add    BYTE PTR [rax],al
   10e25:	00 00                	add    BYTE PTR [rax],al
   10e27:	00 d0                	add    al,dl
   10e29:	20 00                	and    BYTE PTR [rax],al
   10e2b:	00 00                	add    BYTE PTR [rax],al
   10e2d:	00 00                	add    BYTE PTR [rax],al
   10e2f:	00 e0                	add    al,ah
   10e31:	20 00                	and    BYTE PTR [rax],al
   10e33:	00 00                	add    BYTE PTR [rax],al
   10e35:	00 00                	add    BYTE PTR [rax],al
   10e37:	00 f0                	add    al,dh
   10e39:	20 00                	and    BYTE PTR [rax],al
   10e3b:	00 00                	add    BYTE PTR [rax],al
   10e3d:	00 00                	add    BYTE PTR [rax],al
   10e3f:	00 00                	add    BYTE PTR [rax],al
   10e41:	21 00                	and    DWORD PTR [rax],eax
   10e43:	00 00                	add    BYTE PTR [rax],al
   10e45:	00 00                	add    BYTE PTR [rax],al
   10e47:	00 10                	add    BYTE PTR [rax],dl
   10e49:	21 00                	and    DWORD PTR [rax],eax
   10e4b:	00 00                	add    BYTE PTR [rax],al
   10e4d:	00 00                	add    BYTE PTR [rax],al
   10e4f:	00 20                	add    BYTE PTR [rax],ah
   10e51:	21 00                	and    DWORD PTR [rax],eax
   10e53:	00 00                	add    BYTE PTR [rax],al
   10e55:	00 00                	add    BYTE PTR [rax],al
   10e57:	00 30                	add    BYTE PTR [rax],dh
   10e59:	21 00                	and    DWORD PTR [rax],eax
   10e5b:	00 00                	add    BYTE PTR [rax],al
   10e5d:	00 00                	add    BYTE PTR [rax],al
   10e5f:	00 40 21             	add    BYTE PTR [rax+0x21],al
   10e62:	00 00                	add    BYTE PTR [rax],al
   10e64:	00 00                	add    BYTE PTR [rax],al
   10e66:	00 00                	add    BYTE PTR [rax],al
   10e68:	50                   	push   rax
   10e69:	21 00                	and    DWORD PTR [rax],eax
   10e6b:	00 00                	add    BYTE PTR [rax],al
   10e6d:	00 00                	add    BYTE PTR [rax],al
   10e6f:	00 60 21             	add    BYTE PTR [rax+0x21],ah
   10e72:	00 00                	add    BYTE PTR [rax],al
   10e74:	00 00                	add    BYTE PTR [rax],al
   10e76:	00 00                	add    BYTE PTR [rax],al
   10e78:	70 21                	jo     10e9b <_GLOBAL_OFFSET_TABLE_+0xdb>
   10e7a:	00 00                	add    BYTE PTR [rax],al
   10e7c:	00 00                	add    BYTE PTR [rax],al
   10e7e:	00 00                	add    BYTE PTR [rax],al
   10e80:	80 21 00             	and    BYTE PTR [rcx],0x0
   10e83:	00 00                	add    BYTE PTR [rax],al
   10e85:	00 00                	add    BYTE PTR [rax],al
   10e87:	00 90 21 00 00 00    	add    BYTE PTR [rax+0x21],dl
   10e8d:	00 00                	add    BYTE PTR [rax],al
   10e8f:	00 a0 21 00 00 00    	add    BYTE PTR [rax+0x21],ah
   10e95:	00 00                	add    BYTE PTR [rax],al
   10e97:	00 b0 21 00 00 00    	add    BYTE PTR [rax+0x21],dh
   10e9d:	00 00                	add    BYTE PTR [rax],al
   10e9f:	00 c0                	add    al,al
   10ea1:	21 00                	and    DWORD PTR [rax],eax
   10ea3:	00 00                	add    BYTE PTR [rax],al
   10ea5:	00 00                	add    BYTE PTR [rax],al
   10ea7:	00 d0                	add    al,dl
   10ea9:	21 00                	and    DWORD PTR [rax],eax
   10eab:	00 00                	add    BYTE PTR [rax],al
   10ead:	00 00                	add    BYTE PTR [rax],al
   10eaf:	00 e0                	add    al,ah
   10eb1:	21 00                	and    DWORD PTR [rax],eax
   10eb3:	00 00                	add    BYTE PTR [rax],al
   10eb5:	00 00                	add    BYTE PTR [rax],al
   10eb7:	00 f0                	add    al,dh
   10eb9:	21 00                	and    DWORD PTR [rax],eax
   10ebb:	00 00                	add    BYTE PTR [rax],al
   10ebd:	00 00                	add    BYTE PTR [rax],al
   10ebf:	00 00                	add    BYTE PTR [rax],al
   10ec1:	22 00                	and    al,BYTE PTR [rax]
   10ec3:	00 00                	add    BYTE PTR [rax],al
   10ec5:	00 00                	add    BYTE PTR [rax],al
   10ec7:	00 10                	add    BYTE PTR [rax],dl
   10ec9:	22 00                	and    al,BYTE PTR [rax]
   10ecb:	00 00                	add    BYTE PTR [rax],al
   10ecd:	00 00                	add    BYTE PTR [rax],al
   10ecf:	00 20                	add    BYTE PTR [rax],ah
   10ed1:	22 00                	and    al,BYTE PTR [rax]
   10ed3:	00 00                	add    BYTE PTR [rax],al
   10ed5:	00 00                	add    BYTE PTR [rax],al
   10ed7:	00 30                	add    BYTE PTR [rax],dh
   10ed9:	22 00                	and    al,BYTE PTR [rax]
   10edb:	00 00                	add    BYTE PTR [rax],al
   10edd:	00 00                	add    BYTE PTR [rax],al
   10edf:	00 40 22             	add    BYTE PTR [rax+0x22],al
   10ee2:	00 00                	add    BYTE PTR [rax],al
   10ee4:	00 00                	add    BYTE PTR [rax],al
   10ee6:	00 00                	add    BYTE PTR [rax],al
   10ee8:	50                   	push   rax
   10ee9:	22 00                	and    al,BYTE PTR [rax]
   10eeb:	00 00                	add    BYTE PTR [rax],al
   10eed:	00 00                	add    BYTE PTR [rax],al
   10eef:	00 60 22             	add    BYTE PTR [rax+0x22],ah
   10ef2:	00 00                	add    BYTE PTR [rax],al
   10ef4:	00 00                	add    BYTE PTR [rax],al
   10ef6:	00 00                	add    BYTE PTR [rax],al
   10ef8:	70 22                	jo     10f1c <_GLOBAL_OFFSET_TABLE_+0x15c>
   10efa:	00 00                	add    BYTE PTR [rax],al
   10efc:	00 00                	add    BYTE PTR [rax],al
   10efe:	00 00                	add    BYTE PTR [rax],al
   10f00:	80 22 00             	and    BYTE PTR [rdx],0x0
   10f03:	00 00                	add    BYTE PTR [rax],al
   10f05:	00 00                	add    BYTE PTR [rax],al
   10f07:	00 90 22 00 00 00    	add    BYTE PTR [rax+0x22],dl
   10f0d:	00 00                	add    BYTE PTR [rax],al
   10f0f:	00 a0 22 00 00 00    	add    BYTE PTR [rax+0x22],ah
   10f15:	00 00                	add    BYTE PTR [rax],al
   10f17:	00 b0 22 00 00 00    	add    BYTE PTR [rax+0x22],dh
   10f1d:	00 00                	add    BYTE PTR [rax],al
   10f1f:	00 c0                	add    al,al
   10f21:	22 00                	and    al,BYTE PTR [rax]
   10f23:	00 00                	add    BYTE PTR [rax],al
   10f25:	00 00                	add    BYTE PTR [rax],al
   10f27:	00 d0                	add    al,dl
   10f29:	22 00                	and    al,BYTE PTR [rax]
   10f2b:	00 00                	add    BYTE PTR [rax],al
   10f2d:	00 00                	add    BYTE PTR [rax],al
   10f2f:	00 e0                	add    al,ah
   10f31:	22 00                	and    al,BYTE PTR [rax]
   10f33:	00 00                	add    BYTE PTR [rax],al
   10f35:	00 00                	add    BYTE PTR [rax],al
   10f37:	00 f0                	add    al,dh
   10f39:	22 00                	and    al,BYTE PTR [rax]
   10f3b:	00 00                	add    BYTE PTR [rax],al
   10f3d:	00 00                	add    BYTE PTR [rax],al
   10f3f:	00 00                	add    BYTE PTR [rax],al
   10f41:	23 00                	and    eax,DWORD PTR [rax]
   10f43:	00 00                	add    BYTE PTR [rax],al
   10f45:	00 00                	add    BYTE PTR [rax],al
   10f47:	00 10                	add    BYTE PTR [rax],dl
   10f49:	23 00                	and    eax,DWORD PTR [rax]
   10f4b:	00 00                	add    BYTE PTR [rax],al
   10f4d:	00 00                	add    BYTE PTR [rax],al
   10f4f:	00 20                	add    BYTE PTR [rax],ah
   10f51:	23 00                	and    eax,DWORD PTR [rax]
   10f53:	00 00                	add    BYTE PTR [rax],al
   10f55:	00 00                	add    BYTE PTR [rax],al
   10f57:	00 30                	add    BYTE PTR [rax],dh
   10f59:	23 00                	and    eax,DWORD PTR [rax]
   10f5b:	00 00                	add    BYTE PTR [rax],al
   10f5d:	00 00                	add    BYTE PTR [rax],al
   10f5f:	00 40 23             	add    BYTE PTR [rax+0x23],al
   10f62:	00 00                	add    BYTE PTR [rax],al
   10f64:	00 00                	add    BYTE PTR [rax],al
   10f66:	00 00                	add    BYTE PTR [rax],al
   10f68:	50                   	push   rax
   10f69:	23 00                	and    eax,DWORD PTR [rax]
   10f6b:	00 00                	add    BYTE PTR [rax],al
   10f6d:	00 00                	add    BYTE PTR [rax],al
   10f6f:	00 60 23             	add    BYTE PTR [rax+0x23],ah
   10f72:	00 00                	add    BYTE PTR [rax],al
   10f74:	00 00                	add    BYTE PTR [rax],al
   10f76:	00 00                	add    BYTE PTR [rax],al
   10f78:	70 23                	jo     10f9d <_GLOBAL_OFFSET_TABLE_+0x1dd>
   10f7a:	00 00                	add    BYTE PTR [rax],al
   10f7c:	00 00                	add    BYTE PTR [rax],al
   10f7e:	00 00                	add    BYTE PTR [rax],al
   10f80:	80 23 00             	and    BYTE PTR [rbx],0x0
   10f83:	00 00                	add    BYTE PTR [rax],al
   10f85:	00 00                	add    BYTE PTR [rax],al
   10f87:	00 90 23 00 00 00    	add    BYTE PTR [rax+0x23],dl
   10f8d:	00 00                	add    BYTE PTR [rax],al
   10f8f:	00 a0 23 00 00 00    	add    BYTE PTR [rax+0x23],ah
   10f95:	00 00                	add    BYTE PTR [rax],al
   10f97:	00 b0 23 00 00 00    	add    BYTE PTR [rax+0x23],dh
   10f9d:	00 00                	add    BYTE PTR [rax],al
   10f9f:	00 c0                	add    al,al
   10fa1:	23 00                	and    eax,DWORD PTR [rax]
   10fa3:	00 00                	add    BYTE PTR [rax],al
   10fa5:	00 00                	add    BYTE PTR [rax],al
   10fa7:	00 d0                	add    al,dl
   10fa9:	23 00                	and    eax,DWORD PTR [rax]
   10fab:	00 00                	add    BYTE PTR [rax],al
   10fad:	00 00                	add    BYTE PTR [rax],al
   10faf:	00 e0                	add    al,ah
   10fb1:	23 00                	and    eax,DWORD PTR [rax]
   10fb3:	00 00                	add    BYTE PTR [rax],al
   10fb5:	00 00                	add    BYTE PTR [rax],al
   10fb7:	00 f0                	add    al,dh
   10fb9:	23 00                	and    eax,DWORD PTR [rax]
   10fbb:	00 00                	add    BYTE PTR [rax],al
   10fbd:	00 00                	add    BYTE PTR [rax],al
   10fbf:	00 00                	add    BYTE PTR [rax],al
   10fc1:	24 00                	and    al,0x0
   10fc3:	00 00                	add    BYTE PTR [rax],al
   10fc5:	00 00                	add    BYTE PTR [rax],al
   10fc7:	00 10                	add    BYTE PTR [rax],dl
   10fc9:	24 00                	and    al,0x0
   10fcb:	00 00                	add    BYTE PTR [rax],al
   10fcd:	00 00                	add    BYTE PTR [rax],al
   10fcf:	00 20                	add    BYTE PTR [rax],ah
   10fd1:	24 00                	and    al,0x0
	...

Disassembly of section .data:

0000000000011000 <__data_start>:
	...

0000000000011008 <__dso_handle>:
   11008:	08 10                	or     BYTE PTR [rax],dl
   1100a:	01 00                	add    DWORD PTR [rax],eax
   1100c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011010 <blk_ipv4_len>:
   11010:	ff                   	(bad)  
   11011:	ff                   	(bad)  
   11012:	ff                   	(bad)  
   11013:	ff                   	(bad)  

0000000000011014 <num_rules>:
   11014:	ff                   	(bad)  
   11015:	ff                   	(bad)  
   11016:	ff                   	(bad)  
   11017:	ff                   	(bad)  

0000000000011018 <watchlist_num>:
   11018:	ff                   	(bad)  
   11019:	ff                   	(bad)  
   1101a:	ff                   	(bad)  
   1101b:	ff                   	(bad)  

000000000001101c <arp_entries>:
   1101c:	ff                   	(bad)  
   1101d:	ff                   	(bad)  
   1101e:	ff                   	(bad)  
   1101f:	ff                 	dec    eax

0000000000011020 <spi_max>:
   11020:	c8 00 00 00          	enter  0x0,0x0

0000000000011024 <VIGIL_MODE>:
   11024:	ff                   	(bad)  
   11025:	ff 00                	inc    DWORD PTR [rax]
	...

0000000000011028 <default_config>:
   11028:	04 c0                	add    al,0xc0
   1102a:	00 00                	add    BYTE PTR [rax],al
   1102c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011030 <def_log_file>:
   11030:	1a c0                	sbb    al,al
   11032:	00 00                	add    BYTE PTR [rax],al
   11034:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011038 <default_host_conf>:
   11038:	34 c0                	xor    al,0xc0
   1103a:	00 00                	add    BYTE PTR [rax],al
   1103c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011040 <total_conversations>:
   11040:	ff                   	(bad)  
   11041:	ff                   	(bad)  
   11042:	ff                   	(bad)  
   11043:	ff                   	.byte 0xff

Disassembly of section .bss:

0000000000011060 <optarg@GLIBC_2.2.5>:
	...

0000000000011068 <completed.0>:
	...

0000000000011080 <demo_mode>:
   11080:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011084 <strict_icmp_timestamp_req>:
   11084:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011088 <strict_nmap_host_alive_check>:
	...

00000000000110a0 <threads>:
	...

00000000000112a0 <thread_count>:
   112a0:	00 00                	add    BYTE PTR [rax],al
	...

00000000000112a4 <total_pkt_captured>:
   112a4:	00 00                	add    BYTE PTR [rax],al
	...

00000000000112a8 <is_running>:
	...

00000000000112b0 <last_clean_time>:
	...

00000000000112b8 <clean_delay>:
	...

00000000000112c0 <pkt_counter>:
	...

00000000000112e0 <rules>:
	...

00000000000f32e0 <blocked_ipv4_addrs>:
	...

00000000000f3520 <watchlist>:
	...

0000000000107d20 <arpcache>:
	...

0000000000109f00 <ip_addr>:
	...

0000000000109f20 <debug_mode>:
	...

0000000000109f21 <use_sqlite>:
	...

0000000000109f40 <sqlite_db_path>:
	...

0000000000109f60 <clean_delay_pkts>:
  109f60:	00 00                	add    BYTE PTR [rax],al
	...

0000000000109f64 <packet_print>:
	...

0000000000109f65 <quiet_exit>:
  109f65:	00 00                	add    BYTE PTR [rax],al
	...

0000000000109f68 <vigil_location>:
	...

0000000000109f70 <input_adapter>:
	...

0000000000109f80 <output_adapter>:
	...

0000000000109f90 <local_ip>:
	...

0000000000109fb0 <def_gw>:
	...

0000000000109fc2 <use_spi>:
	...

0000000000109fc4 <homenet>:
  109fc4:	00 00                	add    BYTE PTR [rax],al
	...

0000000000109fc8 <homenetmask>:
  109fc8:	00 00                	add    BYTE PTR [rax],al
	...

0000000000109fcc <in_test_mode>:
	...

0000000000109fe0 <spi_table>:
	...

0000000000137fe0 <lua_scripts>:
	...

0000000000138800 <fn_mem_map>:
	...

000000000013b000 <fn_num>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <buffer+0x78>
   a:	74 75                	je     81 <buffer+0x81>
   c:	20 31                	and    BYTE PTR [rcx],dh
   e:	30 2e                	xor    BYTE PTR [rsi],ch
  10:	33 2e                	xor    ebp,DWORD PTR [rsi]
  12:	30 2d 31 75 62 75    	xor    BYTE PTR [rip+0x75627531],ch        # 75627549 <_end+0x754ec541>
  18:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  19:	74 75                	je     90 <buffer+0x90>
  1b:	31 29                	xor    DWORD PTR [rcx],ebp
  1d:	20 31                	and    BYTE PTR [rcx],dh
  1f:	30 2e                	xor    BYTE PTR [rsi],ch
  21:	33 2e                	xor    ebp,DWORD PTR [rsi]
  23:	30 00                	xor    BYTE PTR [rax],al
