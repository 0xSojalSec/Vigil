
vigil.exe:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000350 <.interp>:
 350:	2f                   	(bad)  
 351:	6c                   	ins    BYTE PTR es:[rdi],dx
 352:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 359:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 35e:	78 2d                	js     38d <buffer.0+0x30d>
 360:	78 38                	js     39a <buffer.0+0x31a>
 362:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 368:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 369:	2e 32 00             	cs xor al,BYTE PTR [rax]

Disassembly of section .note.gnu.property:

0000000000000370 <.note.gnu.property>:
 370:	04 00                	add    al,0x0
 372:	00 00                	add    BYTE PTR [rax],al
 374:	20 00                	and    BYTE PTR [rax],al
 376:	00 00                	add    BYTE PTR [rax],al
 378:	05 00 00 00 47       	add    eax,0x47000000
 37d:	4e 55                	rex.WRX push rbp
 37f:	00 02                	add    BYTE PTR [rdx],al
 381:	00 00                	add    BYTE PTR [rax],al
 383:	c0 04 00 00          	rol    BYTE PTR [rax+rax*1],0x0
 387:	00 03                	add    BYTE PTR [rbx],al
 389:	00 00                	add    BYTE PTR [rax],al
 38b:	00 00                	add    BYTE PTR [rax],al
 38d:	00 00                	add    BYTE PTR [rax],al
 38f:	00 02                	add    BYTE PTR [rdx],al
 391:	80 00 c0             	add    BYTE PTR [rax],0xc0
 394:	04 00                	add    al,0x0
 396:	00 00                	add    BYTE PTR [rax],al
 398:	01 00                	add    DWORD PTR [rax],eax
 39a:	00 00                	add    BYTE PTR [rax],al
 39c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

00000000000003a0 <.note.gnu.build-id>:
 3a0:	04 00                	add    al,0x0
 3a2:	00 00                	add    BYTE PTR [rax],al
 3a4:	14 00                	adc    al,0x0
 3a6:	00 00                	add    BYTE PTR [rax],al
 3a8:	03 00                	add    eax,DWORD PTR [rax]
 3aa:	00 00                	add    BYTE PTR [rax],al
 3ac:	47                   	rex.RXB
 3ad:	4e 55                	rex.WRX push rbp
 3af:	00 90 74 66 27 4e    	add    BYTE PTR [rax+0x4e276674],dl
 3b5:	53                   	push   rbx
 3b6:	51                   	push   rcx
 3b7:	64 e7 10             	fs out 0x10,eax
 3ba:	0d 29 33 89 f8       	or     eax,0xf8893329
 3bf:	85                   	.byte 0x85
 3c0:	bc                   	.byte 0xbc
 3c1:	be                   	.byte 0xbe
 3c2:	4b                   	rex.WXB
 3c3:	29                   	.byte 0x29

Disassembly of section .note.ABI-tag:

00000000000003c4 <__abi_tag>:
 3c4:	04 00                	add    al,0x0
 3c6:	00 00                	add    BYTE PTR [rax],al
 3c8:	10 00                	adc    BYTE PTR [rax],al
 3ca:	00 00                	add    BYTE PTR [rax],al
 3cc:	01 00                	add    DWORD PTR [rax],eax
 3ce:	00 00                	add    BYTE PTR [rax],al
 3d0:	47                   	rex.RXB
 3d1:	4e 55                	rex.WRX push rbp
 3d3:	00 00                	add    BYTE PTR [rax],al
 3d5:	00 00                	add    BYTE PTR [rax],al
 3d7:	00 03                	add    BYTE PTR [rbx],al
 3d9:	00 00                	add    BYTE PTR [rax],al
 3db:	00 02                	add    BYTE PTR [rdx],al
 3dd:	00 00                	add    BYTE PTR [rax],al
 3df:	00 00                	add    BYTE PTR [rax],al
 3e1:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .gnu.hash:

00000000000003e8 <.gnu.hash>:
 3e8:	03 00                	add    eax,DWORD PTR [rax]
 3ea:	00 00                	add    BYTE PTR [rax],al
 3ec:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
 3ef:	00 01                	add    BYTE PTR [rcx],al
 3f1:	00 00                	add    BYTE PTR [rax],al
 3f3:	00 06                	add    BYTE PTR [rsi],al
 3f5:	00 00                	add    BYTE PTR [rax],al
 3f7:	00 00                	add    BYTE PTR [rax],al
 3f9:	14 81                	adc    al,0x81
 3fb:	00 00                	add    BYTE PTR [rax],al
 3fd:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 400:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
 403:	00 00                	add    BYTE PTR [rax],al
 405:	00 00                	add    BYTE PTR [rax],al
 407:	00 4e 00             	add    BYTE PTR [rsi+0x0],cl
 40a:	00 00                	add    BYTE PTR [rax],al
 40c:	d1 65 ce             	shl    DWORD PTR [rbp-0x32],1
 40f:	6d                   	ins    DWORD PTR es:[rdi],dx
 410:	32 b3 f0 a9 b3 a2    	xor    dh,BYTE PTR [rbx-0x5d4c5610]
 416:	f7 12                	not    DWORD PTR [rdx]

Disassembly of section .dynsym:

0000000000000418 <.dynsym>:
	...
 430:	88 00                	mov    BYTE PTR [rax],al
 432:	00 00                	add    BYTE PTR [rax],al
 434:	12 00                	adc    al,BYTE PTR [rax]
	...
 446:	00 00                	add    BYTE PTR [rax],al
 448:	47 01 00             	rex.RXB add DWORD PTR [r8],r8d
 44b:	00 12                	add    BYTE PTR [rdx],dl
	...
 45d:	00 00                	add    BYTE PTR [rax],al
 45f:	00 97 01 00 00 12    	add    BYTE PTR [rdi+0x12000001],dl
	...
 475:	00 00                	add    BYTE PTR [rax],al
 477:	00 ea                	add    dl,ch
 479:	01 00                	add    DWORD PTR [rax],eax
 47b:	00 12                	add    BYTE PTR [rdx],dl
	...
 48d:	00 00                	add    BYTE PTR [rax],al
 48f:	00 63 02             	add    BYTE PTR [rbx+0x2],ah
 492:	00 00                	add    BYTE PTR [rax],al
 494:	12 00                	adc    al,BYTE PTR [rax]
	...
 4a6:	00 00                	add    BYTE PTR [rax],al
 4a8:	d2 01                	rol    BYTE PTR [rcx],cl
 4aa:	00 00                	add    BYTE PTR [rax],al
 4ac:	12 00                	adc    al,BYTE PTR [rax]
	...
 4be:	00 00                	add    BYTE PTR [rax],al
 4c0:	90                   	nop
 4c1:	00 00                	add    BYTE PTR [rax],al
 4c3:	00 12                	add    BYTE PTR [rdx],dl
	...
 4d5:	00 00                	add    BYTE PTR [rax],al
 4d7:	00 07                	add    BYTE PTR [rdi],al
 4d9:	01 00                	add    DWORD PTR [rax],eax
 4db:	00 12                	add    BYTE PTR [rdx],dl
	...
 4ed:	00 00                	add    BYTE PTR [rax],al
 4ef:	00 1d 00 00 00 20    	add    BYTE PTR [rip+0x20000000],bl        # 200004f5 <_end+0x1fec34b5>
	...
 505:	00 00                	add    BYTE PTR [rax],al
 507:	00 9f 01 00 00 12    	add    BYTE PTR [rdi+0x12000001],bl
	...
 51d:	00 00                	add    BYTE PTR [rax],al
 51f:	00 5d 02             	add    BYTE PTR [rbp+0x2],bl
 522:	00 00                	add    BYTE PTR [rax],al
 524:	12 00                	adc    al,BYTE PTR [rax]
	...
 536:	00 00                	add    BYTE PTR [rax],al
 538:	a0 02 00 00 12 00 00 	movabs al,ds:0x12000002
 53f:	00 00 
	...
 54d:	00 00                	add    BYTE PTR [rax],al
 54f:	00 98 02 00 00 12    	add    BYTE PTR [rax+0x12000002],bl
	...
 565:	00 00                	add    BYTE PTR [rax],al
 567:	00 7b 00             	add    BYTE PTR [rbx+0x0],bh
 56a:	00 00                	add    BYTE PTR [rax],al
 56c:	12 00                	adc    al,BYTE PTR [rax]
	...
 57e:	00 00                	add    BYTE PTR [rax],al
 580:	bd 01 00 00 12       	mov    ebp,0x12000001
	...
 595:	00 00                	add    BYTE PTR [rax],al
 597:	00 2a                	add    BYTE PTR [rdx],ch
 599:	01 00                	add    DWORD PTR [rax],eax
 59b:	00 12                	add    BYTE PTR [rdx],dl
	...
 5ad:	00 00                	add    BYTE PTR [rax],al
 5af:	00 f8                	add    al,bh
 5b1:	01 00                	add    DWORD PTR [rax],eax
 5b3:	00 12                	add    BYTE PTR [rdx],dl
	...
 5c5:	00 00                	add    BYTE PTR [rax],al
 5c7:	00 40 01             	add    BYTE PTR [rax+0x1],al
 5ca:	00 00                	add    BYTE PTR [rax],al
 5cc:	12 00                	adc    al,BYTE PTR [rax]
	...
 5de:	00 00                	add    BYTE PTR [rax],al
 5e0:	b7 01                	mov    bh,0x1
 5e2:	00 00                	add    BYTE PTR [rax],al
 5e4:	12 00                	adc    al,BYTE PTR [rax]
	...
 5f6:	00 00                	add    BYTE PTR [rax],al
 5f8:	6c                   	ins    BYTE PTR es:[rdi],dx
 5f9:	02 00                	add    al,BYTE PTR [rax]
 5fb:	00 12                	add    BYTE PTR [rdx],dl
	...
 60d:	00 00                	add    BYTE PTR [rax],al
 60f:	00 50 00             	add    BYTE PTR [rax+0x0],dl
 612:	00 00                	add    BYTE PTR [rax],al
 614:	12 00                	adc    al,BYTE PTR [rax]
	...
 626:	00 00                	add    BYTE PTR [rax],al
 628:	be 02 00 00 12       	mov    esi,0x12000002
	...
 63d:	00 00                	add    BYTE PTR [rax],al
 63f:	00 6e 00             	add    BYTE PTR [rsi+0x0],ch
 642:	00 00                	add    BYTE PTR [rax],al
 644:	12 00                	adc    al,BYTE PTR [rax]
	...
 656:	00 00                	add    BYTE PTR [rax],al
 658:	54                   	push   rsp
 659:	01 00                	add    DWORD PTR [rax],eax
 65b:	00 12                	add    BYTE PTR [rdx],dl
	...
 66d:	00 00                	add    BYTE PTR [rax],al
 66f:	00 a3 00 00 00 12    	add    BYTE PTR [rbx+0x12000000],ah
	...
 685:	00 00                	add    BYTE PTR [rax],al
 687:	00 01                	add    BYTE PTR [rcx],al
 689:	00 00                	add    BYTE PTR [rax],al
 68b:	00 20                	add    BYTE PTR [rax],ah
	...
 69d:	00 00                	add    BYTE PTR [rax],al
 69f:	00 18                	add    BYTE PTR [rax],bl
 6a1:	02 00                	add    al,BYTE PTR [rax]
 6a3:	00 12                	add    BYTE PTR [rdx],dl
	...
 6b5:	00 00                	add    BYTE PTR [rax],al
 6b7:	00 63 01             	add    BYTE PTR [rbx+0x1],ah
 6ba:	00 00                	add    BYTE PTR [rax],al
 6bc:	12 00                	adc    al,BYTE PTR [rax]
	...
 6ce:	00 00                	add    BYTE PTR [rax],al
 6d0:	76 00                	jbe    6d2 <__abi_tag+0x30e>
 6d2:	00 00                	add    BYTE PTR [rax],al
 6d4:	12 00                	adc    al,BYTE PTR [rax]
	...
 6e6:	00 00                	add    BYTE PTR [rax],al
 6e8:	2f                   	(bad)  
 6e9:	02 00                	add    al,BYTE PTR [rax]
 6eb:	00 12                	add    BYTE PTR [rdx],dl
	...
 6fd:	00 00                	add    BYTE PTR [rax],al
 6ff:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 702:	00 00                	add    BYTE PTR [rax],al
 704:	20 00                	and    BYTE PTR [rax],al
	...
 716:	00 00                	add    BYTE PTR [rax],al
 718:	7b 02                	jnp    71c <__abi_tag+0x358>
 71a:	00 00                	add    BYTE PTR [rax],al
 71c:	12 00                	adc    al,BYTE PTR [rax]
	...
 72e:	00 00                	add    BYTE PTR [rax],al
 730:	74 02                	je     734 <__abi_tag+0x370>
 732:	00 00                	add    BYTE PTR [rax],al
 734:	12 00                	adc    al,BYTE PTR [rax]
	...
 746:	00 00                	add    BYTE PTR [rax],al
 748:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
 749:	02 00                	add    al,BYTE PTR [rax]
 74b:	00 12                	add    BYTE PTR [rdx],dl
	...
 75d:	00 00                	add    BYTE PTR [rax],al
 75f:	00 4a 02             	add    BYTE PTR [rdx+0x2],cl
 762:	00 00                	add    BYTE PTR [rax],al
 764:	12 00                	adc    al,BYTE PTR [rax]
	...
 776:	00 00                	add    BYTE PTR [rax],al
 778:	24 01                	and    al,0x1
 77a:	00 00                	add    BYTE PTR [rax],al
 77c:	12 00                	adc    al,BYTE PTR [rax]
	...
 78e:	00 00                	add    BYTE PTR [rax],al
 790:	01 01                	add    DWORD PTR [rcx],eax
 792:	00 00                	add    BYTE PTR [rax],al
 794:	12 00                	adc    al,BYTE PTR [rax]
	...
 7a6:	00 00                	add    BYTE PTR [rax],al
 7a8:	1e                   	(bad)  
 7a9:	01 00                	add    DWORD PTR [rax],eax
 7ab:	00 12                	add    BYTE PTR [rdx],dl
	...
 7bd:	00 00                	add    BYTE PTR [rax],al
 7bf:	00 36                	add    BYTE PTR [rsi],dh
 7c1:	02 00                	add    al,BYTE PTR [rax]
 7c3:	00 12                	add    BYTE PTR [rdx],dl
	...
 7d5:	00 00                	add    BYTE PTR [rax],al
 7d7:	00 d5                	add    ch,dl
 7d9:	00 00                	add    BYTE PTR [rax],al
 7db:	00 12                	add    BYTE PTR [rdx],dl
	...
 7ed:	00 00                	add    BYTE PTR [rax],al
 7ef:	00 11                	add    BYTE PTR [rcx],dl
 7f1:	02 00                	add    al,BYTE PTR [rax]
 7f3:	00 12                	add    BYTE PTR [rdx],dl
	...
 805:	00 00                	add    BYTE PTR [rax],al
 807:	00 8a 02 00 00 12    	add    BYTE PTR [rdx+0x12000002],cl
	...
 81d:	00 00                	add    BYTE PTR [rax],al
 81f:	00 9e 01 00 00 12    	add    BYTE PTR [rsi+0x12000001],bl
	...
 835:	00 00                	add    BYTE PTR [rax],al
 837:	00 e3                	add    bl,ah
 839:	01 00                	add    DWORD PTR [rax],eax
 83b:	00 12                	add    BYTE PTR [rdx],dl
	...
 84d:	00 00                	add    BYTE PTR [rax],al
 84f:	00 ae 00 00 00 12    	add    BYTE PTR [rsi+0x12000000],ch
	...
 865:	00 00                	add    BYTE PTR [rax],al
 867:	00 b2 01 00 00 12    	add    BYTE PTR [rdx+0x12000001],dh
	...
 87d:	00 00                	add    BYTE PTR [rax],al
 87f:	00 75 01             	add    BYTE PTR [rbp+0x1],dh
 882:	00 00                	add    BYTE PTR [rax],al
 884:	12 00                	adc    al,BYTE PTR [rax]
	...
 896:	00 00                	add    BYTE PTR [rax],al
 898:	ab                   	stos   DWORD PTR es:[rdi],eax
 899:	01 00                	add    DWORD PTR [rax],eax
 89b:	00 12                	add    BYTE PTR [rdx],dl
	...
 8ad:	00 00                	add    BYTE PTR [rax],al
 8af:	00 2f                	add    BYTE PTR [rdi],ch
 8b1:	01 00                	add    DWORD PTR [rax],eax
 8b3:	00 12                	add    BYTE PTR [rdx],dl
	...
 8c5:	00 00                	add    BYTE PTR [rax],al
 8c7:	00 e0                	add    al,ah
 8c9:	00 00                	add    BYTE PTR [rax],al
 8cb:	00 12                	add    BYTE PTR [rdx],dl
	...
 8dd:	00 00                	add    BYTE PTR [rax],al
 8df:	00 bd 00 00 00 12    	add    BYTE PTR [rbp+0x12000000],bh
	...
 8f5:	00 00                	add    BYTE PTR [rax],al
 8f7:	00 a4 01 00 00 12 00 	add    BYTE PTR [rcx+rax*1+0x120000],ah
	...
 90e:	00 00                	add    BYTE PTR [rax],al
 910:	eb 00                	jmp    912 <__abi_tag+0x54e>
 912:	00 00                	add    BYTE PTR [rax],al
 914:	12 00                	adc    al,BYTE PTR [rax]
	...
 926:	00 00                	add    BYTE PTR [rax],al
 928:	ad                   	lods   eax,DWORD PTR ds:[rsi]
 929:	02 00                	add    al,BYTE PTR [rax]
 92b:	00 12                	add    BYTE PTR [rdx],dl
	...
 93d:	00 00                	add    BYTE PTR [rax],al
 93f:	00 8f 01 00 00 12    	add    BYTE PTR [rdi+0x12000001],cl
	...
 955:	00 00                	add    BYTE PTR [rax],al
 957:	00 45 02             	add    BYTE PTR [rbp+0x2],al
 95a:	00 00                	add    BYTE PTR [rax],al
 95c:	12 00                	adc    al,BYTE PTR [rax]
	...
 96e:	00 00                	add    BYTE PTR [rax],al
 970:	f9                   	stc    
 971:	00 00                	add    BYTE PTR [rax],al
 973:	00 12                	add    BYTE PTR [rdx],dl
	...
 985:	00 00                	add    BYTE PTR [rax],al
 987:	00 cb                	add    bl,cl
 989:	01 00                	add    DWORD PTR [rax],eax
 98b:	00 12                	add    BYTE PTR [rdx],dl
	...
 99d:	00 00                	add    BYTE PTR [rax],al
 99f:	00 dc                	add    ah,bl
 9a1:	01 00                	add    DWORD PTR [rax],eax
 9a3:	00 12                	add    BYTE PTR [rdx],dl
	...
 9b5:	00 00                	add    BYTE PTR [rax],al
 9b7:	00 cb                	add    bl,cl
 9b9:	00 00                	add    BYTE PTR [rax],al
 9bb:	00 12                	add    BYTE PTR [rdx],dl
	...
 9cd:	00 00                	add    BYTE PTR [rax],al
 9cf:	00 5f 00             	add    BYTE PTR [rdi+0x0],bl
 9d2:	00 00                	add    BYTE PTR [rax],al
 9d4:	12 00                	adc    al,BYTE PTR [rax]
	...
 9e6:	00 00                	add    BYTE PTR [rax],al
 9e8:	c4 01 00 00          	(bad)
 9ec:	12 00                	adc    al,BYTE PTR [rax]
	...
 9fe:	00 00                	add    BYTE PTR [rax],al
 a00:	27                   	(bad)  
 a01:	02 00                	add    al,BYTE PTR [rax]
 a03:	00 12                	add    BYTE PTR [rdx],dl
	...
 a19:	02 00                	add    al,BYTE PTR [rax]
 a1b:	00 12                	add    BYTE PTR [rdx],dl
	...
 a2d:	00 00                	add    BYTE PTR [rax],al
 a2f:	00 5b 01             	add    BYTE PTR [rbx+0x1],bl
 a32:	00 00                	add    BYTE PTR [rax],al
 a34:	12 00                	adc    al,BYTE PTR [rax]
	...
 a46:	00 00                	add    BYTE PTR [rax],al
 a48:	52                   	push   rdx
 a49:	02 00                	add    al,BYTE PTR [rax]
 a4b:	00 12                	add    BYTE PTR [rdx],dl
	...
 a5d:	00 00                	add    BYTE PTR [rax],al
 a5f:	00 46 00             	add    BYTE PTR [rsi+0x0],al
 a62:	00 00                	add    BYTE PTR [rax],al
 a64:	12 00                	adc    al,BYTE PTR [rax]
	...
 a76:	00 00                	add    BYTE PTR [rax],al
 a78:	57                   	push   rdi
 a79:	02 00                	add    al,BYTE PTR [rax]
 a7b:	00 12                	add    BYTE PTR [rdx],dl
	...
 a8d:	00 00                	add    BYTE PTR [rax],al
 a8f:	00 83 02 00 00 12    	add    BYTE PTR [rbx+0x12000002],al
	...
 aa5:	00 00                	add    BYTE PTR [rax],al
 aa7:	00 96 01 00 00 12    	add    BYTE PTR [rsi+0x12000001],dl
	...
 abd:	00 00                	add    BYTE PTR [rax],al
 abf:	00 36                	add    BYTE PTR [rsi],dh
 ac1:	01 00                	add    DWORD PTR [rax],eax
 ac3:	00 12                	add    BYTE PTR [rdx],dl
	...
 ad5:	00 00                	add    BYTE PTR [rax],al
 ad7:	00 3c 02             	add    BYTE PTR [rdx+rax*1],bh
 ada:	00 00                	add    BYTE PTR [rax],al
 adc:	12 00                	adc    al,BYTE PTR [rax]
	...
 aee:	00 00                	add    BYTE PTR [rax],al
 af0:	7d 01                	jge    af3 <__abi_tag+0x72f>
 af2:	00 00                	add    BYTE PTR [rax],al
 af4:	12 00                	adc    al,BYTE PTR [rax]
	...
 b06:	00 00                	add    BYTE PTR [rax],al
 b08:	91                   	xchg   ecx,eax
 b09:	02 00                	add    al,BYTE PTR [rax]
 b0b:	00 12                	add    BYTE PTR [rdx],dl
	...
 b1d:	00 00                	add    BYTE PTR [rax],al
 b1f:	00 96 00 00 00 12    	add    BYTE PTR [rsi+0x12000000],dl
	...
 b35:	00 00                	add    BYTE PTR [rax],al
 b37:	00 3b                	add    BYTE PTR [rbx],bh
 b39:	01 00                	add    DWORD PTR [rax],eax
 b3b:	00 12                	add    BYTE PTR [rdx],dl
	...
 b4d:	00 00                	add    BYTE PTR [rax],al
 b4f:	00 0f                	add    BYTE PTR [rdi],cl
 b51:	01 00                	add    DWORD PTR [rax],eax
 b53:	00 22                	add    BYTE PTR [rdx],ah
	...
 b65:	00 00                	add    BYTE PTR [rax],al
 b67:	00 09                	add    BYTE PTR [rcx],cl
 b69:	02 00                	add    al,BYTE PTR [rax]
 b6b:	00 12                	add    BYTE PTR [rdx],dl
 b6d:	00 10                	add    BYTE PTR [rax],dl
 b6f:	00 6b 96             	add    BYTE PTR [rbx-0x6a],ch
 b72:	00 00                	add    BYTE PTR [rax],al
 b74:	00 00                	add    BYTE PTR [rax],al
 b76:	00 00                	add    BYTE PTR [rax],al
 b78:	3a 01                	cmp    al,BYTE PTR [rcx]
 b7a:	00 00                	add    BYTE PTR [rax],al
 b7c:	00 00                	add    BYTE PTR [rax],al
 b7e:	00 00                	add    BYTE PTR [rax],al
 b80:	f1                   	icebp  
 b81:	01 00                	add    DWORD PTR [rax],eax
 b83:	00 11                	add    BYTE PTR [rcx],dl
 b85:	00 1b                	add    BYTE PTR [rbx],bl
 b87:	00 60 10             	add    BYTE PTR [rax+0x10],ah
 b8a:	01 00                	add    DWORD PTR [rax],eax
 b8c:	00 00                	add    BYTE PTR [rax],al
 b8e:	00 00                	add    BYTE PTR [rax],al
 b90:	08 00                	or     BYTE PTR [rax],al
 b92:	00 00                	add    BYTE PTR [rax],al
 b94:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynstr:

0000000000000b98 <.dynstr>:
 b98:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 b9b:	54                   	push   rsp
 b9c:	4d 5f                	rex.WRB pop r15
 b9e:	64 65 72 65          	fs gs jb c07 <__abi_tag+0x843>
 ba2:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 ba9:	4d 
 baa:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 bac:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bad:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 bae:	65 54                	gs push rsp
 bb0:	61                   	(bad)  
 bb1:	62                   	(bad)  
 bb2:	6c                   	ins    BYTE PTR es:[rdi],dx
 bb3:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
 bb7:	67 6d                	ins    DWORD PTR es:[edi],dx
 bb9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bba:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 bbb:	5f                   	pop    rdi
 bbc:	73 74                	jae    c32 <__abi_tag+0x86e>
 bbe:	61                   	(bad)  
 bbf:	72 74                	jb     c35 <__abi_tag+0x871>
 bc1:	5f                   	pop    rdi
 bc2:	5f                   	pop    rdi
 bc3:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 bc6:	54                   	push   rsp
 bc7:	4d 5f                	rex.WRB pop r15
 bc9:	72 65                	jb     c30 <__abi_tag+0x86c>
 bcb:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 bd2:	4d 
 bd3:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 bd5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bd6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 bd7:	65 54                	gs push rsp
 bd9:	61                   	(bad)  
 bda:	62                   	(bad)  
 bdb:	6c                   	ins    BYTE PTR es:[rdi],dx
 bdc:	65 00 70 63          	add    BYTE PTR gs:[rax+0x63],dh
 be0:	61                   	(bad)  
 be1:	70 5f                	jo     c42 <__abi_tag+0x87e>
 be3:	6c                   	ins    BYTE PTR es:[rdi],dx
 be4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 be5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 be6:	70 00                	jo     be8 <__abi_tag+0x824>
 be8:	70 63                	jo     c4d <__abi_tag+0x889>
 bea:	61                   	(bad)  
 beb:	70 5f                	jo     c4c <__abi_tag+0x888>
 bed:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bee:	70 65                	jo     c55 <__abi_tag+0x891>
 bf0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 bf1:	5f                   	pop    rdi
 bf2:	6c                   	ins    BYTE PTR es:[rdi],dx
 bf3:	69 76 65 00 73 71 6c 	imul   esi,DWORD PTR [rsi+0x65],0x6c717300
 bfa:	69 74 65 33 5f 65 72 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x7272655f
 c01:	72 
 c02:	6d                   	ins    DWORD PTR es:[rdi],dx
 c03:	73 67                	jae    c6c <__abi_tag+0x8a8>
 c05:	00 73 71             	add    BYTE PTR [rbx+0x71],dh
 c08:	6c                   	ins    BYTE PTR es:[rdi],dx
 c09:	69 74 65 33 5f 66 72 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6572665f
 c10:	65 
 c11:	65 00 73 71          	add    BYTE PTR gs:[rbx+0x71],dh
 c15:	6c                   	ins    BYTE PTR es:[rdi],dx
 c16:	69 74 65 33 5f 65 78 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6578655f
 c1d:	65 
 c1e:	63 00                	movsxd eax,DWORD PTR [rax]
 c20:	73 71                	jae    c93 <__abi_tag+0x8cf>
 c22:	6c                   	ins    BYTE PTR es:[rdi],dx
 c23:	69 74 65 33 5f 63 6c 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6f6c635f
 c2a:	6f 
 c2b:	73 65                	jae    c92 <__abi_tag+0x8ce>
 c2d:	00 73 71             	add    BYTE PTR [rbx+0x71],dh
 c30:	6c                   	ins    BYTE PTR es:[rdi],dx
 c31:	69 74 65 33 5f 6f 70 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x65706f5f
 c38:	65 
 c39:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c3a:	00 6c 75 61          	add    BYTE PTR [rbp+rsi*2+0x61],ch
 c3e:	5f                   	pop    rdi
 c3f:	73 65                	jae    ca6 <__abi_tag+0x8e2>
 c41:	74 74                	je     cb7 <__abi_tag+0x8f3>
 c43:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c44:	70 00                	jo     c46 <__abi_tag+0x882>
 c46:	6c                   	ins    BYTE PTR es:[rdi],dx
 c47:	75 61                	jne    caa <__abi_tag+0x8e6>
 c49:	4c 5f                	rex.WR pop rdi
 c4b:	6c                   	ins    BYTE PTR es:[rdi],dx
 c4c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c4d:	61                   	(bad)  
 c4e:	64 66 69 6c 65 78 00 	imul   bp,WORD PTR fs:[rbp+riz*2+0x78],0x6c00
 c55:	6c 
 c56:	75 61                	jne    cb9 <__abi_tag+0x8f5>
 c58:	4c 5f                	rex.WR pop rdi
 c5a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c5b:	65 77 73             	gs ja  cd1 <__abi_tag+0x90d>
 c5e:	74 61                	je     cc1 <__abi_tag+0x8fd>
 c60:	74 65                	je     cc7 <__abi_tag+0x903>
 c62:	00 6c 75 61          	add    BYTE PTR [rbp+rsi*2+0x61],ch
 c66:	5f                   	pop    rdi
 c67:	63 6c 6f 73          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
 c6b:	65 00 6c 75 61       	add    BYTE PTR gs:[rbp+rsi*2+0x61],ch
 c70:	5f                   	pop    rdi
 c71:	70 63                	jo     cd6 <__abi_tag+0x912>
 c73:	61                   	(bad)  
 c74:	6c                   	ins    BYTE PTR es:[rdi],dx
 c75:	6c                   	ins    BYTE PTR es:[rdi],dx
 c76:	6b 00 6c             	imul   eax,DWORD PTR [rax],0x6c
 c79:	75 61                	jne    cdc <__abi_tag+0x918>
 c7b:	5f                   	pop    rdi
 c7c:	67 65 74 74          	addr32 gs je cf4 <__abi_tag+0x930>
 c80:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c81:	70 00                	jo     c83 <__abi_tag+0x8bf>
 c83:	6c                   	ins    BYTE PTR es:[rdi],dx
 c84:	75 61                	jne    ce7 <__abi_tag+0x923>
 c86:	4c 5f                	rex.WR pop rdi
 c88:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c89:	70 65                	jo     cf0 <__abi_tag+0x92c>
 c8b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c8c:	6c                   	ins    BYTE PTR es:[rdi],dx
 c8d:	69 62 73 00 67 65 74 	imul   esp,DWORD PTR [rdx+0x73],0x74656700
 c94:	6c                   	ins    BYTE PTR es:[rdi],dx
 c95:	69 6e 65 00 66 67 65 	imul   ebp,DWORD PTR [rsi+0x65],0x65676600
 c9c:	74 63                	je     d01 <__abi_tag+0x93d>
 c9e:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 ca1:	72 6e                	jb     d11 <__abi_tag+0x94d>
 ca3:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
 ca6:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 ca9:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
 cac:	5f                   	pop    rdi
 cad:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 cb3:	7a 65                	jp     d1a <__abi_tag+0x956>
 cb5:	00 6e 74             	add    BYTE PTR [rsi+0x74],ch
 cb8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 cb9:	68 6c 00 6e 74       	push   0x746e006c
 cbe:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 cbf:	68 73 00 72 65       	push   0x65720073
 cc4:	61                   	(bad)  
 cc5:	64 00 73 74          	add    BYTE PTR fs:[rbx+0x74],dh
 cc9:	72 63                	jb     d2e <__abi_tag+0x96a>
 ccb:	68 72 00 6c 6f       	push   0x6f6c0072
 cd0:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
 cd3:	74 69                	je     d3e <__abi_tag+0x97a>
 cd5:	6d                   	ins    DWORD PTR es:[rdi],dx
 cd6:	65 00 6d 61          	add    BYTE PTR gs:[rbp+0x61],ch
 cda:	6c                   	ins    BYTE PTR es:[rdi],dx
 cdb:	6c                   	ins    BYTE PTR es:[rdi],dx
 cdc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 cdd:	63 00                	movsxd eax,DWORD PTR [rax]
 cdf:	70 74                	jo     d55 <__abi_tag+0x991>
 ce1:	68 72 65 61 64       	push   0x64616572
 ce6:	5f                   	pop    rdi
 ce7:	6a 6f                	push   0x6f
 ce9:	69 6e 00 67 65 74 70 	imul   ebp,DWORD PTR [rsi+0x0],0x70746567
 cf0:	69 64 00 73 74 72 63 	imul   esp,DWORD PTR [rax+rax*1+0x73],0x73637274
 cf7:	73 
 cf8:	70 6e                	jo     d68 <__abi_tag+0x9a4>
 cfa:	00 62 61             	add    BYTE PTR [rdx+0x61],ah
 cfd:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
 d00:	72 61                	jb     d63 <__abi_tag+0x99f>
 d02:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
 d05:	73 79                	jae    d80 <__abi_tag+0x9bc>
 d07:	6d                   	ins    DWORD PTR es:[rdi],dx
 d08:	62                   	(bad)  
 d09:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d0a:	6c                   	ins    BYTE PTR es:[rdi],dx
 d0b:	73 00                	jae    d0d <__abi_tag+0x949>
 d0d:	72 65                	jb     d74 <__abi_tag+0x9b0>
 d0f:	67 63 6f 6d          	movsxd ebp,DWORD PTR [edi+0x6d]
 d13:	70 00                	jo     d15 <__abi_tag+0x951>
 d15:	5f                   	pop    rdi
 d16:	5f                   	pop    rdi
 d17:	6c                   	ins    BYTE PTR es:[rdi],dx
 d18:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 d1f:	72 74                	jb     d95 <__abi_tag+0x9d1>
 d21:	5f                   	pop    rdi
 d22:	6d                   	ins    DWORD PTR es:[rdi],dx
 d23:	61                   	(bad)  
 d24:	69 6e 00 73 74 72 63 	imul   ebp,DWORD PTR [rsi+0x0],0x63727473
 d2b:	6d                   	ins    DWORD PTR es:[rdi],dx
 d2c:	70 00                	jo     d2e <__abi_tag+0x96a>
 d2e:	66 70 72             	data16 jo da3 <__abi_tag+0x9df>
 d31:	69 6e 74 66 00 66 70 	imul   ebp,DWORD PTR [rsi+0x74],0x70660066
 d38:	75 74                	jne    dae <__abi_tag+0x9ea>
 d3a:	73 00                	jae    d3c <__abi_tag+0x978>
 d3c:	73 6f                	jae    dad <__abi_tag+0x9e9>
 d3e:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
 d41:	74 00                	je     d43 <__abi_tag+0x97f>
 d43:	73 69                	jae    dae <__abi_tag+0x9ea>
 d45:	67 6e                	outs   dx,BYTE PTR ds:[esi]
 d47:	61                   	(bad)  
 d48:	6c                   	ins    BYTE PTR es:[rdi],dx
 d49:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
 d4c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d4d:	69 00 66 6f 70 65    	imul   eax,DWORD PTR [rax],0x65706f66
 d53:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d54:	00 67 65             	add    BYTE PTR [rdi+0x65],ah
 d57:	74 6f                	je     dc8 <__abi_tag+0xa04>
 d59:	70 74                	jo     dcf <__abi_tag+0xa0b>
 d5b:	00 66 63             	add    BYTE PTR [rsi+0x63],ah
 d5e:	6c                   	ins    BYTE PTR es:[rdi],dx
 d5f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d60:	73 65                	jae    dc7 <__abi_tag+0xa03>
 d62:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 d65:	72 63                	jb     dca <__abi_tag+0xa06>
 d67:	70 79                	jo     de2 <__abi_tag+0xa1e>
 d69:	00 62 61             	add    BYTE PTR [rdx+0x61],ah
 d6c:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
 d6f:	72 61                	jb     dd2 <__abi_tag+0xa0e>
 d71:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
 d74:	73 74                	jae    dea <__abi_tag+0xa26>
 d76:	72 74                	jb     dec <__abi_tag+0xa28>
 d78:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d79:	6b 00 73             	imul   eax,DWORD PTR [rax],0x73
 d7c:	74 72                	je     df0 <__abi_tag+0xa2c>
 d7e:	74 6f                	je     def <__abi_tag+0xa2b>
 d80:	6c                   	ins    BYTE PTR es:[rdi],dx
 d81:	00 6d 65             	add    BYTE PTR [rbp+0x65],ch
 d84:	6d                   	ins    DWORD PTR es:[rdi],dx
 d85:	73 65                	jae    dec <__abi_tag+0xa28>
 d87:	74 00                	je     d89 <__abi_tag+0x9c5>
 d89:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d8a:	70 74                	jo     e00 <__abi_tag+0xa3c>
 d8c:	61                   	(bad)  
 d8d:	72 67                	jb     df6 <__abi_tag+0xa32>
 d8f:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 d92:	72 6e                	jb     e02 <__abi_tag+0xa3e>
 d94:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
 d97:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
 d9a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d9b:	73 65                	jae    e02 <__abi_tag+0xa3e>
 d9d:	64 69 72 00 69 73 64 	imul   esi,DWORD PTR fs:[rdx+0x0],0x69647369
 da4:	69 
 da5:	67 69 74 00 73 74 72 	imul   esi,DWORD PTR [eax+eax*1+0x73],0x74737274
 dac:	73 74 
 dae:	72 00                	jb     db0 <__abi_tag+0x9ec>
 db0:	70 74                	jo     e26 <__abi_tag+0xa62>
 db2:	68 72 65 61 64       	push   0x64616572
 db7:	5f                   	pop    rdi
 db8:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
 dbb:	61                   	(bad)  
 dbc:	74 65                	je     e23 <__abi_tag+0xa5f>
 dbe:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 dc1:	72 6e                	jb     e31 <__abi_tag+0xa6d>
 dc3:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
 dc6:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 dc9:	72 6c                	jb     e37 <__abi_tag+0xa73>
 dcb:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 dcd:	00 73 6c             	add    BYTE PTR [rbx+0x6c],dh
 dd0:	65 65 70 00          	gs gs jo dd4 <__abi_tag+0xa10>
 dd4:	67 65 74 64          	addr32 gs je e3c <__abi_tag+0xa78>
 dd8:	65 6c                	gs ins BYTE PTR es:[rdi],dx
 dda:	69 6d 00 73 65 6e 64 	imul   ebp,DWORD PTR [rbp+0x0],0x646e6573
 de1:	00 73 70             	add    BYTE PTR [rbx+0x70],dh
 de4:	72 69                	jb     e4f <__abi_tag+0xa8b>
 de6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 de7:	74 66                	je     e4f <__abi_tag+0xa8b>
 de9:	00 62 69             	add    BYTE PTR [rdx+0x69],ah
 dec:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 ded:	64 00 68 74          	add    BYTE PTR fs:[rax+0x74],ch
 df1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 df2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 df3:	6c                   	ins    BYTE PTR es:[rdi],dx
 df4:	00 68 74             	add    BYTE PTR [rax+0x74],ch
 df7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 df8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 df9:	73 00                	jae    dfb <__abi_tag+0xa37>
 dfb:	73 6e                	jae    e6b <__abi_tag+0xaa7>
 dfd:	70 72                	jo     e71 <__abi_tag+0xaad>
 dff:	69 6e 74 66 00 72 65 	imul   ebp,DWORD PTR [rsi+0x74],0x65720066
 e06:	67 65 78 65          	addr32 gs js e6f <__abi_tag+0xaab>
 e0a:	63 00                	movsxd eax,DWORD PTR [rax]
 e0c:	6c                   	ins    BYTE PTR es:[rdi],dx
 e0d:	69 73 74 65 6e 00 6f 	imul   esi,DWORD PTR [rbx+0x74],0x6f006e65
 e14:	70 65                	jo     e7b <__abi_tag+0xab7>
 e16:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 e17:	64 69 72 00 70 65 72 	imul   esi,DWORD PTR fs:[rdx+0x0],0x72726570
 e1e:	72 
 e1f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 e20:	72 00                	jb     e22 <__abi_tag+0xa5e>
 e22:	73 74                	jae    e98 <__abi_tag+0xad4>
 e24:	72 63                	jb     e89 <__abi_tag+0xac5>
 e26:	61                   	(bad)  
 e27:	74 00                	je     e29 <__abi_tag+0xa65>
 e29:	61                   	(bad)  
 e2a:	63 63 65             	movsxd esp,DWORD PTR [rbx+0x65]
 e2d:	70 74                	jo     ea3 <__abi_tag+0xadf>
 e2f:	00 70 75             	add    BYTE PTR [rax+0x75],dh
 e32:	74 63                	je     e97 <__abi_tag+0xad3>
 e34:	68 61 72 00 65       	push   0x65007261
 e39:	78 69                	js     ea4 <__abi_tag+0xae0>
 e3b:	74 00                	je     e3d <__abi_tag+0xa79>
 e3d:	72 65                	jb     ea4 <__abi_tag+0xae0>
 e3f:	61                   	(bad)  
 e40:	64 64 69 72 00 5f 5f 	fs imul esi,DWORD PTR fs:[rdx+0x0],0x74735f5f
 e47:	73 74 
 e49:	61                   	(bad)  
 e4a:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 e4d:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 e50:	5f                   	pop    rdi
 e51:	66 61                	data16 (bad) 
 e53:	69 6c 00 73 65 74 73 	imul   ebp,DWORD PTR [rax+rax*1+0x73],0x6f737465
 e5a:	6f 
 e5b:	63 6b 6f             	movsxd ebp,DWORD PTR [rbx+0x6f]
 e5e:	70 74                	jo     ed4 <__abi_tag+0xb10>
 e60:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 e64:	70 63                	jo     ec9 <__abi_tag+0xb05>
 e66:	61                   	(bad)  
 e67:	70 2e                	jo     e97 <__abi_tag+0xad3>
 e69:	73 6f                	jae    eda <__abi_tag+0xb16>
 e6b:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
 e6e:	38 00                	cmp    BYTE PTR [rax],al
 e70:	6c                   	ins    BYTE PTR es:[rdi],dx
 e71:	69 62 73 71 6c 69 74 	imul   esp,DWORD PTR [rdx+0x73],0x74696c71
 e78:	65 33 2e             	xor    ebp,DWORD PTR gs:[rsi]
 e7b:	73 6f                	jae    eec <__abi_tag+0xb28>
 e7d:	2e 30 00             	cs xor BYTE PTR [rax],al
 e80:	6c                   	ins    BYTE PTR es:[rdi],dx
 e81:	69 62 6c 75 61 35 2e 	imul   esp,DWORD PTR [rdx+0x6c],0x2e356175
 e88:	33 2e                	xor    ebp,DWORD PTR [rsi]
 e8a:	73 6f                	jae    efb <__abi_tag+0xb37>
 e8c:	2e 30 00             	cs xor BYTE PTR [rax],al
 e8f:	6c                   	ins    BYTE PTR es:[rdi],dx
 e90:	69 62 63 2e 73 6f 2e 	imul   esp,DWORD PTR [rdx+0x63],0x2e6f732e
 e97:	36 00 4c 55 41       	ss add BYTE PTR [rbp+rdx*2+0x41],cl
 e9c:	5f                   	pop    rdi
 e9d:	35 2e 33 00 47       	xor    eax,0x4700332e
 ea2:	4c                   	rex.WR
 ea3:	49                   	rex.WB
 ea4:	42                   	rex.X
 ea5:	43 5f                	rex.XB pop r15
 ea7:	32 2e                	xor    ch,BYTE PTR [rsi]
 ea9:	34 00                	xor    al,0x0
 eab:	47                   	rex.RXB
 eac:	4c                   	rex.WR
 ead:	49                   	rex.WB
 eae:	42                   	rex.X
 eaf:	43 5f                	rex.XB pop r15
 eb1:	32 2e                	xor    ch,BYTE PTR [rsi]
 eb3:	33 2e                	xor    ebp,DWORD PTR [rsi]
 eb5:	34 00                	xor    al,0x0
 eb7:	47                   	rex.RXB
 eb8:	4c                   	rex.WR
 eb9:	49                   	rex.WB
 eba:	42                   	rex.X
 ebb:	43 5f                	rex.XB pop r15
 ebd:	32 2e                	xor    ch,BYTE PTR [rsi]
 ebf:	32 2e                	xor    ch,BYTE PTR [rsi]
 ec1:	35 00 47 4c 49       	xor    eax,0x494c4700
 ec6:	42                   	rex.X
 ec7:	43 5f                	rex.XB pop r15
 ec9:	32 2e                	xor    ch,BYTE PTR [rsi]
 ecb:	33 34 00             	xor    esi,DWORD PTR [rax+rax*1]

Disassembly of section .gnu.version:

0000000000000ece <.gnu.version>:
 ece:	00 00                	add    BYTE PTR [rax],al
 ed0:	00 00                	add    BYTE PTR [rax],al
 ed2:	02 00                	add    al,BYTE PTR [rax]
 ed4:	03 00                	add    eax,DWORD PTR [rax]
 ed6:	03 00                	add    eax,DWORD PTR [rax]
 ed8:	03 00                	add    eax,DWORD PTR [rax]
 eda:	03 00                	add    eax,DWORD PTR [rax]
 edc:	03 00                	add    eax,DWORD PTR [rax]
 ede:	03 00                	add    eax,DWORD PTR [rax]
 ee0:	00 00                	add    BYTE PTR [rax],al
 ee2:	03 00                	add    eax,DWORD PTR [rax]
 ee4:	03 00                	add    eax,DWORD PTR [rax]
 ee6:	03 00                	add    eax,DWORD PTR [rax]
 ee8:	03 00                	add    eax,DWORD PTR [rax]
 eea:	00 00                	add    BYTE PTR [rax],al
 eec:	03 00                	add    eax,DWORD PTR [rax]
 eee:	03 00                	add    eax,DWORD PTR [rax]
 ef0:	03 00                	add    eax,DWORD PTR [rax]
 ef2:	03 00                	add    eax,DWORD PTR [rax]
 ef4:	03 00                	add    eax,DWORD PTR [rax]
 ef6:	04 00                	add    al,0x0
 ef8:	00 00                	add    BYTE PTR [rax],al
 efa:	03 00                	add    eax,DWORD PTR [rax]
 efc:	00 00                	add    BYTE PTR [rax],al
 efe:	03 00                	add    eax,DWORD PTR [rax]
 f00:	05 00 00 00 02       	add    eax,0x2000000
 f05:	00 03                	add    BYTE PTR [rbx],al
 f07:	00 03                	add    BYTE PTR [rbx],al
 f09:	00 03                	add    BYTE PTR [rbx],al
 f0b:	00 00                	add    BYTE PTR [rax],al
 f0d:	00 03                	add    BYTE PTR [rbx],al
 f0f:	00 03                	add    BYTE PTR [rbx],al
 f11:	00 03                	add    BYTE PTR [rbx],al
 f13:	00 03                	add    BYTE PTR [rbx],al
 f15:	00 03                	add    BYTE PTR [rbx],al
 f17:	00 03                	add    BYTE PTR [rbx],al
 f19:	00 03                	add    BYTE PTR [rbx],al
 f1b:	00 03                	add    BYTE PTR [rbx],al
 f1d:	00 05 00 03 00 03    	add    BYTE PTR [rip+0x3000300],al        # 3001223 <_end+0x2ec41e3>
 f23:	00 03                	add    BYTE PTR [rbx],al
 f25:	00 03                	add    BYTE PTR [rbx],al
 f27:	00 05 00 03 00 03    	add    BYTE PTR [rip+0x3000300],al        # 300122d <_end+0x2ec41ed>
 f2d:	00 03                	add    BYTE PTR [rbx],al
 f2f:	00 03                	add    BYTE PTR [rbx],al
 f31:	00 05 00 05 00 03    	add    BYTE PTR [rip+0x3000500],al        # 3001437 <_end+0x2ec43f7>
 f37:	00 05 00 06 00 03    	add    BYTE PTR [rip+0x3000600],al        # 300153d <_end+0x2ec44fd>
 f3d:	00 03                	add    BYTE PTR [rbx],al
 f3f:	00 03                	add    BYTE PTR [rbx],al
 f41:	00 03                	add    BYTE PTR [rbx],al
 f43:	00 03                	add    BYTE PTR [rbx],al
 f45:	00 05 00 00 00 03    	add    BYTE PTR [rip+0x3000000],al        # 3000f4b <_end+0x2ec3f0b>
 f4b:	00 03                	add    BYTE PTR [rbx],al
 f4d:	00 03                	add    BYTE PTR [rbx],al
 f4f:	00 03                	add    BYTE PTR [rbx],al
 f51:	00 03                	add    BYTE PTR [rbx],al
 f53:	00 00                	add    BYTE PTR [rax],al
 f55:	00 03                	add    BYTE PTR [rbx],al
 f57:	00 03                	add    BYTE PTR [rbx],al
 f59:	00 03                	add    BYTE PTR [rbx],al
 f5b:	00 03                	add    BYTE PTR [rbx],al
 f5d:	00 03                	add    BYTE PTR [rbx],al
 f5f:	00 02                	add    BYTE PTR [rdx],al
 f61:	00 03                	add    BYTE PTR [rbx],al
 f63:	00 00                	add    BYTE PTR [rax],al
 f65:	00 03                	add    BYTE PTR [rbx],al
 f67:	00 03                	add    BYTE PTR [rbx],al
 f69:	00 01                	add    BYTE PTR [rcx],al
 f6b:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .gnu.version_r:

0000000000000f70 <.gnu.version_r>:
 f70:	01 00                	add    DWORD PTR [rax],eax
 f72:	01 00                	add    DWORD PTR [rax],eax
 f74:	e8 02 00 00 10       	call   10000f7b <_end+0xfec3f3b>
 f79:	00 00                	add    BYTE PTR [rax],al
 f7b:	00 20                	add    BYTE PTR [rax],ah
 f7d:	00 00                	add    BYTE PTR [rax],al
 f7f:	00 43 28             	add    BYTE PTR [rbx+0x28],al
 f82:	97                   	xchg   edi,eax
 f83:	01 00                	add    DWORD PTR [rax],eax
 f85:	00 05 00 01 03 00    	add    BYTE PTR [rip+0x30100],al        # 3108b <rules+0x1fdab>
 f8b:	00 00                	add    BYTE PTR [rax],al
 f8d:	00 00                	add    BYTE PTR [rax],al
 f8f:	00 01                	add    BYTE PTR [rcx],al
 f91:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 f94:	f7 02 00 00 10 00    	test   DWORD PTR [rdx],0x100000
 f9a:	00 00                	add    BYTE PTR [rax],al
 f9c:	00 00                	add    BYTE PTR [rax],al
 f9e:	00 00                	add    BYTE PTR [rax],al
 fa0:	14 69                	adc    al,0x69
 fa2:	69 0d 00 00 06 00 09 	imul   ecx,DWORD PTR [rip+0x60000],0x309        # 60fac <rules+0x4fccc>
 fa9:	03 00 00 
 fac:	10 00                	adc    BYTE PTR [rax],al
 fae:	00 00                	add    BYTE PTR [rax],al
 fb0:	74 19                	je     fcb <__abi_tag+0xc07>
 fb2:	69 09 00 00 04 00    	imul   ecx,DWORD PTR [rcx],0x40000
 fb8:	13 03                	adc    eax,DWORD PTR [rbx]
 fba:	00 00                	add    BYTE PTR [rax],al
 fbc:	10 00                	adc    BYTE PTR [rax],al
 fbe:	00 00                	add    BYTE PTR [rax],al
 fc0:	75 1a                	jne    fdc <__abi_tag+0xc18>
 fc2:	69 09 00 00 03 00    	imul   ecx,DWORD PTR [rcx],0x30000
 fc8:	1f                   	(bad)  
 fc9:	03 00                	add    eax,DWORD PTR [rax]
 fcb:	00 10                	add    BYTE PTR [rax],dl
 fcd:	00 00                	add    BYTE PTR [rax],al
 fcf:	00 b4 91 96 06 00 00 	add    BYTE PTR [rcx+rdx*4+0x696],dh
 fd6:	02 00                	add    al,BYTE PTR [rax]
 fd8:	2b 03                	sub    eax,DWORD PTR [rbx]
 fda:	00 00                	add    BYTE PTR [rax],al
 fdc:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000000fe0 <.rela.dyn>:
     fe0:	50                   	push   rax
     fe1:	0b 01                	or     eax,DWORD PTR [rcx]
     fe3:	00 00                	add    BYTE PTR [rax],al
     fe5:	00 00                	add    BYTE PTR [rax],al
     fe7:	00 08                	add    BYTE PTR [rax],cl
     fe9:	00 00                	add    BYTE PTR [rax],al
     feb:	00 00                	add    BYTE PTR [rax],al
     fed:	00 00                	add    BYTE PTR [rax],al
     fef:	00 20                	add    BYTE PTR [rax],ah
     ff1:	2a 00                	sub    al,BYTE PTR [rax]
     ff3:	00 00                	add    BYTE PTR [rax],al
     ff5:	00 00                	add    BYTE PTR [rax],al
     ff7:	00 58 0b             	add    BYTE PTR [rax+0xb],bl
     ffa:	01 00                	add    DWORD PTR [rax],eax
     ffc:	00 00                	add    BYTE PTR [rax],al
     ffe:	00 00                	add    BYTE PTR [rax],al
    1000:	08 00                	or     BYTE PTR [rax],al
    1002:	00 00                	add    BYTE PTR [rax],al
    1004:	00 00                	add    BYTE PTR [rax],al
    1006:	00 00                	add    BYTE PTR [rax],al
    1008:	e0 29                	loopne 1033 <__abi_tag+0xc6f>
    100a:	00 00                	add    BYTE PTR [rax],al
    100c:	00 00                	add    BYTE PTR [rax],al
    100e:	00 00                	add    BYTE PTR [rax],al
    1010:	08 10                	or     BYTE PTR [rax],dl
    1012:	01 00                	add    DWORD PTR [rax],eax
    1014:	00 00                	add    BYTE PTR [rax],al
    1016:	00 00                	add    BYTE PTR [rax],al
    1018:	08 00                	or     BYTE PTR [rax],al
    101a:	00 00                	add    BYTE PTR [rax],al
    101c:	00 00                	add    BYTE PTR [rax],al
    101e:	00 00                	add    BYTE PTR [rax],al
    1020:	08 10                	or     BYTE PTR [rax],dl
    1022:	01 00                	add    DWORD PTR [rax],eax
    1024:	00 00                	add    BYTE PTR [rax],al
    1026:	00 00                	add    BYTE PTR [rax],al
    1028:	28 10                	sub    BYTE PTR [rax],dl
    102a:	01 00                	add    DWORD PTR [rax],eax
    102c:	00 00                	add    BYTE PTR [rax],al
    102e:	00 00                	add    BYTE PTR [rax],al
    1030:	08 00                	or     BYTE PTR [rax],al
    1032:	00 00                	add    BYTE PTR [rax],al
    1034:	00 00                	add    BYTE PTR [rax],al
    1036:	00 00                	add    BYTE PTR [rax],al
    1038:	04 c0                	add    al,0xc0
    103a:	00 00                	add    BYTE PTR [rax],al
    103c:	00 00                	add    BYTE PTR [rax],al
    103e:	00 00                	add    BYTE PTR [rax],al
    1040:	30 10                	xor    BYTE PTR [rax],dl
    1042:	01 00                	add    DWORD PTR [rax],eax
    1044:	00 00                	add    BYTE PTR [rax],al
    1046:	00 00                	add    BYTE PTR [rax],al
    1048:	08 00                	or     BYTE PTR [rax],al
    104a:	00 00                	add    BYTE PTR [rax],al
    104c:	00 00                	add    BYTE PTR [rax],al
    104e:	00 00                	add    BYTE PTR [rax],al
    1050:	1a c0                	sbb    al,al
    1052:	00 00                	add    BYTE PTR [rax],al
    1054:	00 00                	add    BYTE PTR [rax],al
    1056:	00 00                	add    BYTE PTR [rax],al
    1058:	38 10                	cmp    BYTE PTR [rax],dl
    105a:	01 00                	add    DWORD PTR [rax],eax
    105c:	00 00                	add    BYTE PTR [rax],al
    105e:	00 00                	add    BYTE PTR [rax],al
    1060:	08 00                	or     BYTE PTR [rax],al
    1062:	00 00                	add    BYTE PTR [rax],al
    1064:	00 00                	add    BYTE PTR [rax],al
    1066:	00 00                	add    BYTE PTR [rax],al
    1068:	34 c0                	xor    al,0xc0
    106a:	00 00                	add    BYTE PTR [rax],al
    106c:	00 00                	add    BYTE PTR [rax],al
    106e:	00 00                	add    BYTE PTR [rax],al
    1070:	d8 0f                	fmul   DWORD PTR [rdi]
    1072:	01 00                	add    DWORD PTR [rax],eax
    1074:	00 00                	add    BYTE PTR [rax],al
    1076:	00 00                	add    BYTE PTR [rax],al
    1078:	06                   	(bad)  
    1079:	00 00                	add    BYTE PTR [rax],al
    107b:	00 09                	add    BYTE PTR [rcx],cl
	...
    1085:	00 00                	add    BYTE PTR [rax],al
    1087:	00 e0                	add    al,ah
    1089:	0f 01 00             	sgdt   [rax]
    108c:	00 00                	add    BYTE PTR [rax],al
    108e:	00 00                	add    BYTE PTR [rax],al
    1090:	06                   	(bad)  
    1091:	00 00                	add    BYTE PTR [rax],al
    1093:	00 1a                	add    BYTE PTR [rdx],bl
	...
    109d:	00 00                	add    BYTE PTR [rax],al
    109f:	00 e8                	add    al,ch
    10a1:	0f 01 00             	sgdt   [rax]
    10a4:	00 00                	add    BYTE PTR [rax],al
    10a6:	00 00                	add    BYTE PTR [rax],al
    10a8:	06                   	(bad)  
    10a9:	00 00                	add    BYTE PTR [rax],al
    10ab:	00 1f                	add    BYTE PTR [rdi],bl
	...
    10b5:	00 00                	add    BYTE PTR [rax],al
    10b7:	00 f0                	add    al,dh
    10b9:	0f 01 00             	sgdt   [rax]
    10bc:	00 00                	add    BYTE PTR [rax],al
    10be:	00 00                	add    BYTE PTR [rax],al
    10c0:	06                   	(bad)  
    10c1:	00 00                	add    BYTE PTR [rax],al
    10c3:	00 4d 00             	add    BYTE PTR [rbp+0x0],cl
	...
    10ce:	00 00                	add    BYTE PTR [rax],al
    10d0:	f8                   	clc    
    10d1:	0f 01 00             	sgdt   [rax]
    10d4:	00 00                	add    BYTE PTR [rax],al
    10d6:	00 00                	add    BYTE PTR [rax],al
    10d8:	06                   	(bad)  
    10d9:	00 00                	add    BYTE PTR [rax],al
    10db:	00 49 00             	add    BYTE PTR [rcx+0x0],cl
	...
    10e6:	00 00                	add    BYTE PTR [rax],al
    10e8:	60                   	(bad)  
    10e9:	10 01                	adc    BYTE PTR [rcx],al
    10eb:	00 00                	add    BYTE PTR [rax],al
    10ed:	00 00                	add    BYTE PTR [rax],al
    10ef:	00 05 00 00 00 4f    	add    BYTE PTR [rip+0x4f000000],al        # 4f0010f5 <_end+0x4eec40b5>
	...

Disassembly of section .rela.plt:

0000000000001100 <.rela.plt>:
    1100:	98                   	cwde   
    1101:	0d 01 00 00 00       	or     eax,0x1
    1106:	00 00                	add    BYTE PTR [rax],al
    1108:	07                   	(bad)  
    1109:	00 00                	add    BYTE PTR [rax],al
    110b:	00 01                	add    BYTE PTR [rcx],al
	...
    1115:	00 00                	add    BYTE PTR [rax],al
    1117:	00 a0 0d 01 00 00    	add    BYTE PTR [rax+0x10d],ah
    111d:	00 00                	add    BYTE PTR [rax],al
    111f:	00 07                	add    BYTE PTR [rdi],al
    1121:	00 00                	add    BYTE PTR [rax],al
    1123:	00 02                	add    BYTE PTR [rdx],al
	...
    112d:	00 00                	add    BYTE PTR [rax],al
    112f:	00 a8 0d 01 00 00    	add    BYTE PTR [rax+0x10d],ch
    1135:	00 00                	add    BYTE PTR [rax],al
    1137:	00 07                	add    BYTE PTR [rdi],al
    1139:	00 00                	add    BYTE PTR [rax],al
    113b:	00 03                	add    BYTE PTR [rbx],al
	...
    1145:	00 00                	add    BYTE PTR [rax],al
    1147:	00 b0 0d 01 00 00    	add    BYTE PTR [rax+0x10d],dh
    114d:	00 00                	add    BYTE PTR [rax],al
    114f:	00 07                	add    BYTE PTR [rdi],al
    1151:	00 00                	add    BYTE PTR [rax],al
    1153:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
    115e:	00 00                	add    BYTE PTR [rax],al
    1160:	b8 0d 01 00 00       	mov    eax,0x10d
    1165:	00 00                	add    BYTE PTR [rax],al
    1167:	00 07                	add    BYTE PTR [rdi],al
    1169:	00 00                	add    BYTE PTR [rax],al
    116b:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 1171 <__abi_tag+0xdad>
    1171:	00 00                	add    BYTE PTR [rax],al
    1173:	00 00                	add    BYTE PTR [rax],al
    1175:	00 00                	add    BYTE PTR [rax],al
    1177:	00 c0                	add    al,al
    1179:	0d 01 00 00 00       	or     eax,0x1
    117e:	00 00                	add    BYTE PTR [rax],al
    1180:	07                   	(bad)  
    1181:	00 00                	add    BYTE PTR [rax],al
    1183:	00 06                	add    BYTE PTR [rsi],al
	...
    118d:	00 00                	add    BYTE PTR [rax],al
    118f:	00 c8                	add    al,cl
    1191:	0d 01 00 00 00       	or     eax,0x1
    1196:	00 00                	add    BYTE PTR [rax],al
    1198:	07                   	(bad)  
    1199:	00 00                	add    BYTE PTR [rax],al
    119b:	00 07                	add    BYTE PTR [rdi],al
	...
    11a5:	00 00                	add    BYTE PTR [rax],al
    11a7:	00 d0                	add    al,dl
    11a9:	0d 01 00 00 00       	or     eax,0x1
    11ae:	00 00                	add    BYTE PTR [rax],al
    11b0:	07                   	(bad)  
    11b1:	00 00                	add    BYTE PTR [rax],al
    11b3:	00 08                	add    BYTE PTR [rax],cl
	...
    11bd:	00 00                	add    BYTE PTR [rax],al
    11bf:	00 d8                	add    al,bl
    11c1:	0d 01 00 00 00       	or     eax,0x1
    11c6:	00 00                	add    BYTE PTR [rax],al
    11c8:	07                   	(bad)  
    11c9:	00 00                	add    BYTE PTR [rax],al
    11cb:	00 0a                	add    BYTE PTR [rdx],cl
	...
    11d5:	00 00                	add    BYTE PTR [rax],al
    11d7:	00 e0                	add    al,ah
    11d9:	0d 01 00 00 00       	or     eax,0x1
    11de:	00 00                	add    BYTE PTR [rax],al
    11e0:	07                   	(bad)  
    11e1:	00 00                	add    BYTE PTR [rax],al
    11e3:	00 0b                	add    BYTE PTR [rbx],cl
	...
    11ed:	00 00                	add    BYTE PTR [rax],al
    11ef:	00 e8                	add    al,ch
    11f1:	0d 01 00 00 00       	or     eax,0x1
    11f6:	00 00                	add    BYTE PTR [rax],al
    11f8:	07                   	(bad)  
    11f9:	00 00                	add    BYTE PTR [rax],al
    11fb:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
	...
    1206:	00 00                	add    BYTE PTR [rax],al
    1208:	f0 0d 01 00 00 00    	lock or eax,0x1
    120e:	00 00                	add    BYTE PTR [rax],al
    1210:	07                   	(bad)  
    1211:	00 00                	add    BYTE PTR [rax],al
    1213:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 1219 <__abi_tag+0xe55>
    1219:	00 00                	add    BYTE PTR [rax],al
    121b:	00 00                	add    BYTE PTR [rax],al
    121d:	00 00                	add    BYTE PTR [rax],al
    121f:	00 f8                	add    al,bh
    1221:	0d 01 00 00 00       	or     eax,0x1
    1226:	00 00                	add    BYTE PTR [rax],al
    1228:	07                   	(bad)  
    1229:	00 00                	add    BYTE PTR [rax],al
    122b:	00 0e                	add    BYTE PTR [rsi],cl
	...
    1239:	0e                   	(bad)  
    123a:	01 00                	add    DWORD PTR [rax],eax
    123c:	00 00                	add    BYTE PTR [rax],al
    123e:	00 00                	add    BYTE PTR [rax],al
    1240:	07                   	(bad)  
    1241:	00 00                	add    BYTE PTR [rax],al
    1243:	00 0f                	add    BYTE PTR [rdi],cl
	...
    124d:	00 00                	add    BYTE PTR [rax],al
    124f:	00 08                	add    BYTE PTR [rax],cl
    1251:	0e                   	(bad)  
    1252:	01 00                	add    DWORD PTR [rax],eax
    1254:	00 00                	add    BYTE PTR [rax],al
    1256:	00 00                	add    BYTE PTR [rax],al
    1258:	07                   	(bad)  
    1259:	00 00                	add    BYTE PTR [rax],al
    125b:	00 10                	add    BYTE PTR [rax],dl
	...
    1265:	00 00                	add    BYTE PTR [rax],al
    1267:	00 10                	add    BYTE PTR [rax],dl
    1269:	0e                   	(bad)  
    126a:	01 00                	add    DWORD PTR [rax],eax
    126c:	00 00                	add    BYTE PTR [rax],al
    126e:	00 00                	add    BYTE PTR [rax],al
    1270:	07                   	(bad)  
    1271:	00 00                	add    BYTE PTR [rax],al
    1273:	00 11                	add    BYTE PTR [rcx],dl
	...
    127d:	00 00                	add    BYTE PTR [rax],al
    127f:	00 18                	add    BYTE PTR [rax],bl
    1281:	0e                   	(bad)  
    1282:	01 00                	add    DWORD PTR [rax],eax
    1284:	00 00                	add    BYTE PTR [rax],al
    1286:	00 00                	add    BYTE PTR [rax],al
    1288:	07                   	(bad)  
    1289:	00 00                	add    BYTE PTR [rax],al
    128b:	00 12                	add    BYTE PTR [rdx],dl
	...
    1295:	00 00                	add    BYTE PTR [rax],al
    1297:	00 20                	add    BYTE PTR [rax],ah
    1299:	0e                   	(bad)  
    129a:	01 00                	add    DWORD PTR [rax],eax
    129c:	00 00                	add    BYTE PTR [rax],al
    129e:	00 00                	add    BYTE PTR [rax],al
    12a0:	07                   	(bad)  
    12a1:	00 00                	add    BYTE PTR [rax],al
    12a3:	00 13                	add    BYTE PTR [rbx],dl
	...
    12ad:	00 00                	add    BYTE PTR [rax],al
    12af:	00 28                	add    BYTE PTR [rax],ch
    12b1:	0e                   	(bad)  
    12b2:	01 00                	add    DWORD PTR [rax],eax
    12b4:	00 00                	add    BYTE PTR [rax],al
    12b6:	00 00                	add    BYTE PTR [rax],al
    12b8:	07                   	(bad)  
    12b9:	00 00                	add    BYTE PTR [rax],al
    12bb:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
	...
    12c6:	00 00                	add    BYTE PTR [rax],al
    12c8:	30 0e                	xor    BYTE PTR [rsi],cl
    12ca:	01 00                	add    DWORD PTR [rax],eax
    12cc:	00 00                	add    BYTE PTR [rax],al
    12ce:	00 00                	add    BYTE PTR [rax],al
    12d0:	07                   	(bad)  
    12d1:	00 00                	add    BYTE PTR [rax],al
    12d3:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 12d9 <__abi_tag+0xf15>
    12d9:	00 00                	add    BYTE PTR [rax],al
    12db:	00 00                	add    BYTE PTR [rax],al
    12dd:	00 00                	add    BYTE PTR [rax],al
    12df:	00 38                	add    BYTE PTR [rax],bh
    12e1:	0e                   	(bad)  
    12e2:	01 00                	add    DWORD PTR [rax],eax
    12e4:	00 00                	add    BYTE PTR [rax],al
    12e6:	00 00                	add    BYTE PTR [rax],al
    12e8:	07                   	(bad)  
    12e9:	00 00                	add    BYTE PTR [rax],al
    12eb:	00 16                	add    BYTE PTR [rsi],dl
	...
    12f5:	00 00                	add    BYTE PTR [rax],al
    12f7:	00 40 0e             	add    BYTE PTR [rax+0xe],al
    12fa:	01 00                	add    DWORD PTR [rax],eax
    12fc:	00 00                	add    BYTE PTR [rax],al
    12fe:	00 00                	add    BYTE PTR [rax],al
    1300:	07                   	(bad)  
    1301:	00 00                	add    BYTE PTR [rax],al
    1303:	00 17                	add    BYTE PTR [rdi],dl
	...
    130d:	00 00                	add    BYTE PTR [rax],al
    130f:	00 48 0e             	add    BYTE PTR [rax+0xe],cl
    1312:	01 00                	add    DWORD PTR [rax],eax
    1314:	00 00                	add    BYTE PTR [rax],al
    1316:	00 00                	add    BYTE PTR [rax],al
    1318:	07                   	(bad)  
    1319:	00 00                	add    BYTE PTR [rax],al
    131b:	00 18                	add    BYTE PTR [rax],bl
	...
    1325:	00 00                	add    BYTE PTR [rax],al
    1327:	00 50 0e             	add    BYTE PTR [rax+0xe],dl
    132a:	01 00                	add    DWORD PTR [rax],eax
    132c:	00 00                	add    BYTE PTR [rax],al
    132e:	00 00                	add    BYTE PTR [rax],al
    1330:	07                   	(bad)  
    1331:	00 00                	add    BYTE PTR [rax],al
    1333:	00 19                	add    BYTE PTR [rcx],bl
	...
    133d:	00 00                	add    BYTE PTR [rax],al
    133f:	00 58 0e             	add    BYTE PTR [rax+0xe],bl
    1342:	01 00                	add    DWORD PTR [rax],eax
    1344:	00 00                	add    BYTE PTR [rax],al
    1346:	00 00                	add    BYTE PTR [rax],al
    1348:	07                   	(bad)  
    1349:	00 00                	add    BYTE PTR [rax],al
    134b:	00 1b                	add    BYTE PTR [rbx],bl
	...
    1355:	00 00                	add    BYTE PTR [rax],al
    1357:	00 60 0e             	add    BYTE PTR [rax+0xe],ah
    135a:	01 00                	add    DWORD PTR [rax],eax
    135c:	00 00                	add    BYTE PTR [rax],al
    135e:	00 00                	add    BYTE PTR [rax],al
    1360:	07                   	(bad)  
    1361:	00 00                	add    BYTE PTR [rax],al
    1363:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
	...
    136e:	00 00                	add    BYTE PTR [rax],al
    1370:	68 0e 01 00 00       	push   0x10e
    1375:	00 00                	add    BYTE PTR [rax],al
    1377:	00 07                	add    BYTE PTR [rdi],al
    1379:	00 00                	add    BYTE PTR [rax],al
    137b:	00 1d 00 00 00 00    	add    BYTE PTR [rip+0x0],bl        # 1381 <__abi_tag+0xfbd>
    1381:	00 00                	add    BYTE PTR [rax],al
    1383:	00 00                	add    BYTE PTR [rax],al
    1385:	00 00                	add    BYTE PTR [rax],al
    1387:	00 70 0e             	add    BYTE PTR [rax+0xe],dh
    138a:	01 00                	add    DWORD PTR [rax],eax
    138c:	00 00                	add    BYTE PTR [rax],al
    138e:	00 00                	add    BYTE PTR [rax],al
    1390:	07                   	(bad)  
    1391:	00 00                	add    BYTE PTR [rax],al
    1393:	00 1e                	add    BYTE PTR [rsi],bl
	...
    139d:	00 00                	add    BYTE PTR [rax],al
    139f:	00 78 0e             	add    BYTE PTR [rax+0xe],bh
    13a2:	01 00                	add    DWORD PTR [rax],eax
    13a4:	00 00                	add    BYTE PTR [rax],al
    13a6:	00 00                	add    BYTE PTR [rax],al
    13a8:	07                   	(bad)  
    13a9:	00 00                	add    BYTE PTR [rax],al
    13ab:	00 20                	add    BYTE PTR [rax],ah
	...
    13b5:	00 00                	add    BYTE PTR [rax],al
    13b7:	00 80 0e 01 00 00    	add    BYTE PTR [rax+0x10e],al
    13bd:	00 00                	add    BYTE PTR [rax],al
    13bf:	00 07                	add    BYTE PTR [rdi],al
    13c1:	00 00                	add    BYTE PTR [rax],al
    13c3:	00 21                	add    BYTE PTR [rcx],ah
	...
    13cd:	00 00                	add    BYTE PTR [rax],al
    13cf:	00 88 0e 01 00 00    	add    BYTE PTR [rax+0x10e],cl
    13d5:	00 00                	add    BYTE PTR [rax],al
    13d7:	00 07                	add    BYTE PTR [rdi],al
    13d9:	00 00                	add    BYTE PTR [rax],al
    13db:	00 22                	add    BYTE PTR [rdx],ah
	...
    13e5:	00 00                	add    BYTE PTR [rax],al
    13e7:	00 90 0e 01 00 00    	add    BYTE PTR [rax+0x10e],dl
    13ed:	00 00                	add    BYTE PTR [rax],al
    13ef:	00 07                	add    BYTE PTR [rdi],al
    13f1:	00 00                	add    BYTE PTR [rax],al
    13f3:	00 23                	add    BYTE PTR [rbx],ah
	...
    13fd:	00 00                	add    BYTE PTR [rax],al
    13ff:	00 98 0e 01 00 00    	add    BYTE PTR [rax+0x10e],bl
    1405:	00 00                	add    BYTE PTR [rax],al
    1407:	00 07                	add    BYTE PTR [rdi],al
    1409:	00 00                	add    BYTE PTR [rax],al
    140b:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
	...
    1416:	00 00                	add    BYTE PTR [rax],al
    1418:	a0 0e 01 00 00 00 00 	movabs al,ds:0x70000000000010e
    141f:	00 07 
    1421:	00 00                	add    BYTE PTR [rax],al
    1423:	00 25 00 00 00 00    	add    BYTE PTR [rip+0x0],ah        # 1429 <__abi_tag+0x1065>
    1429:	00 00                	add    BYTE PTR [rax],al
    142b:	00 00                	add    BYTE PTR [rax],al
    142d:	00 00                	add    BYTE PTR [rax],al
    142f:	00 a8 0e 01 00 00    	add    BYTE PTR [rax+0x10e],ch
    1435:	00 00                	add    BYTE PTR [rax],al
    1437:	00 07                	add    BYTE PTR [rdi],al
    1439:	00 00                	add    BYTE PTR [rax],al
    143b:	00 26                	add    BYTE PTR [rsi],ah
	...
    1445:	00 00                	add    BYTE PTR [rax],al
    1447:	00 b0 0e 01 00 00    	add    BYTE PTR [rax+0x10e],dh
    144d:	00 00                	add    BYTE PTR [rax],al
    144f:	00 07                	add    BYTE PTR [rdi],al
    1451:	00 00                	add    BYTE PTR [rax],al
    1453:	00 27                	add    BYTE PTR [rdi],ah
	...
    145d:	00 00                	add    BYTE PTR [rax],al
    145f:	00 b8 0e 01 00 00    	add    BYTE PTR [rax+0x10e],bh
    1465:	00 00                	add    BYTE PTR [rax],al
    1467:	00 07                	add    BYTE PTR [rdi],al
    1469:	00 00                	add    BYTE PTR [rax],al
    146b:	00 28                	add    BYTE PTR [rax],ch
	...
    1475:	00 00                	add    BYTE PTR [rax],al
    1477:	00 c0                	add    al,al
    1479:	0e                   	(bad)  
    147a:	01 00                	add    DWORD PTR [rax],eax
    147c:	00 00                	add    BYTE PTR [rax],al
    147e:	00 00                	add    BYTE PTR [rax],al
    1480:	07                   	(bad)  
    1481:	00 00                	add    BYTE PTR [rax],al
    1483:	00 29                	add    BYTE PTR [rcx],ch
	...
    148d:	00 00                	add    BYTE PTR [rax],al
    148f:	00 c8                	add    al,cl
    1491:	0e                   	(bad)  
    1492:	01 00                	add    DWORD PTR [rax],eax
    1494:	00 00                	add    BYTE PTR [rax],al
    1496:	00 00                	add    BYTE PTR [rax],al
    1498:	07                   	(bad)  
    1499:	00 00                	add    BYTE PTR [rax],al
    149b:	00 2a                	add    BYTE PTR [rdx],ch
	...
    14a5:	00 00                	add    BYTE PTR [rax],al
    14a7:	00 d0                	add    al,dl
    14a9:	0e                   	(bad)  
    14aa:	01 00                	add    DWORD PTR [rax],eax
    14ac:	00 00                	add    BYTE PTR [rax],al
    14ae:	00 00                	add    BYTE PTR [rax],al
    14b0:	07                   	(bad)  
    14b1:	00 00                	add    BYTE PTR [rax],al
    14b3:	00 2b                	add    BYTE PTR [rbx],ch
	...
    14bd:	00 00                	add    BYTE PTR [rax],al
    14bf:	00 d8                	add    al,bl
    14c1:	0e                   	(bad)  
    14c2:	01 00                	add    DWORD PTR [rax],eax
    14c4:	00 00                	add    BYTE PTR [rax],al
    14c6:	00 00                	add    BYTE PTR [rax],al
    14c8:	07                   	(bad)  
    14c9:	00 00                	add    BYTE PTR [rax],al
    14cb:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
	...
    14d6:	00 00                	add    BYTE PTR [rax],al
    14d8:	e0 0e                	loopne 14e8 <__abi_tag+0x1124>
    14da:	01 00                	add    DWORD PTR [rax],eax
    14dc:	00 00                	add    BYTE PTR [rax],al
    14de:	00 00                	add    BYTE PTR [rax],al
    14e0:	07                   	(bad)  
    14e1:	00 00                	add    BYTE PTR [rax],al
    14e3:	00 2d 00 00 00 00    	add    BYTE PTR [rip+0x0],ch        # 14e9 <__abi_tag+0x1125>
    14e9:	00 00                	add    BYTE PTR [rax],al
    14eb:	00 00                	add    BYTE PTR [rax],al
    14ed:	00 00                	add    BYTE PTR [rax],al
    14ef:	00 e8                	add    al,ch
    14f1:	0e                   	(bad)  
    14f2:	01 00                	add    DWORD PTR [rax],eax
    14f4:	00 00                	add    BYTE PTR [rax],al
    14f6:	00 00                	add    BYTE PTR [rax],al
    14f8:	07                   	(bad)  
    14f9:	00 00                	add    BYTE PTR [rax],al
    14fb:	00 2e                	add    BYTE PTR [rsi],ch
	...
    1505:	00 00                	add    BYTE PTR [rax],al
    1507:	00 f0                	add    al,dh
    1509:	0e                   	(bad)  
    150a:	01 00                	add    DWORD PTR [rax],eax
    150c:	00 00                	add    BYTE PTR [rax],al
    150e:	00 00                	add    BYTE PTR [rax],al
    1510:	07                   	(bad)  
    1511:	00 00                	add    BYTE PTR [rax],al
    1513:	00 2f                	add    BYTE PTR [rdi],ch
	...
    151d:	00 00                	add    BYTE PTR [rax],al
    151f:	00 f8                	add    al,bh
    1521:	0e                   	(bad)  
    1522:	01 00                	add    DWORD PTR [rax],eax
    1524:	00 00                	add    BYTE PTR [rax],al
    1526:	00 00                	add    BYTE PTR [rax],al
    1528:	07                   	(bad)  
    1529:	00 00                	add    BYTE PTR [rax],al
    152b:	00 30                	add    BYTE PTR [rax],dh
	...
    1539:	0f 01 00             	sgdt   [rax]
    153c:	00 00                	add    BYTE PTR [rax],al
    153e:	00 00                	add    BYTE PTR [rax],al
    1540:	07                   	(bad)  
    1541:	00 00                	add    BYTE PTR [rax],al
    1543:	00 31                	add    BYTE PTR [rcx],dh
	...
    154d:	00 00                	add    BYTE PTR [rax],al
    154f:	00 08                	add    BYTE PTR [rax],cl
    1551:	0f 01 00             	sgdt   [rax]
    1554:	00 00                	add    BYTE PTR [rax],al
    1556:	00 00                	add    BYTE PTR [rax],al
    1558:	07                   	(bad)  
    1559:	00 00                	add    BYTE PTR [rax],al
    155b:	00 32                	add    BYTE PTR [rdx],dh
	...
    1565:	00 00                	add    BYTE PTR [rax],al
    1567:	00 10                	add    BYTE PTR [rax],dl
    1569:	0f 01 00             	sgdt   [rax]
    156c:	00 00                	add    BYTE PTR [rax],al
    156e:	00 00                	add    BYTE PTR [rax],al
    1570:	07                   	(bad)  
    1571:	00 00                	add    BYTE PTR [rax],al
    1573:	00 33                	add    BYTE PTR [rbx],dh
	...
    157d:	00 00                	add    BYTE PTR [rax],al
    157f:	00 18                	add    BYTE PTR [rax],bl
    1581:	0f 01 00             	sgdt   [rax]
    1584:	00 00                	add    BYTE PTR [rax],al
    1586:	00 00                	add    BYTE PTR [rax],al
    1588:	07                   	(bad)  
    1589:	00 00                	add    BYTE PTR [rax],al
    158b:	00 34 00             	add    BYTE PTR [rax+rax*1],dh
	...
    1596:	00 00                	add    BYTE PTR [rax],al
    1598:	20 0f                	and    BYTE PTR [rdi],cl
    159a:	01 00                	add    DWORD PTR [rax],eax
    159c:	00 00                	add    BYTE PTR [rax],al
    159e:	00 00                	add    BYTE PTR [rax],al
    15a0:	07                   	(bad)  
    15a1:	00 00                	add    BYTE PTR [rax],al
    15a3:	00 35 00 00 00 00    	add    BYTE PTR [rip+0x0],dh        # 15a9 <__abi_tag+0x11e5>
    15a9:	00 00                	add    BYTE PTR [rax],al
    15ab:	00 00                	add    BYTE PTR [rax],al
    15ad:	00 00                	add    BYTE PTR [rax],al
    15af:	00 28                	add    BYTE PTR [rax],ch
    15b1:	0f 01 00             	sgdt   [rax]
    15b4:	00 00                	add    BYTE PTR [rax],al
    15b6:	00 00                	add    BYTE PTR [rax],al
    15b8:	07                   	(bad)  
    15b9:	00 00                	add    BYTE PTR [rax],al
    15bb:	00 36                	add    BYTE PTR [rsi],dh
	...
    15c5:	00 00                	add    BYTE PTR [rax],al
    15c7:	00 30                	add    BYTE PTR [rax],dh
    15c9:	0f 01 00             	sgdt   [rax]
    15cc:	00 00                	add    BYTE PTR [rax],al
    15ce:	00 00                	add    BYTE PTR [rax],al
    15d0:	07                   	(bad)  
    15d1:	00 00                	add    BYTE PTR [rax],al
    15d3:	00 37                	add    BYTE PTR [rdi],dh
	...
    15dd:	00 00                	add    BYTE PTR [rax],al
    15df:	00 38                	add    BYTE PTR [rax],bh
    15e1:	0f 01 00             	sgdt   [rax]
    15e4:	00 00                	add    BYTE PTR [rax],al
    15e6:	00 00                	add    BYTE PTR [rax],al
    15e8:	07                   	(bad)  
    15e9:	00 00                	add    BYTE PTR [rax],al
    15eb:	00 38                	add    BYTE PTR [rax],bh
	...
    15f5:	00 00                	add    BYTE PTR [rax],al
    15f7:	00 40 0f             	add    BYTE PTR [rax+0xf],al
    15fa:	01 00                	add    DWORD PTR [rax],eax
    15fc:	00 00                	add    BYTE PTR [rax],al
    15fe:	00 00                	add    BYTE PTR [rax],al
    1600:	07                   	(bad)  
    1601:	00 00                	add    BYTE PTR [rax],al
    1603:	00 39                	add    BYTE PTR [rcx],bh
	...
    160d:	00 00                	add    BYTE PTR [rax],al
    160f:	00 48 0f             	add    BYTE PTR [rax+0xf],cl
    1612:	01 00                	add    DWORD PTR [rax],eax
    1614:	00 00                	add    BYTE PTR [rax],al
    1616:	00 00                	add    BYTE PTR [rax],al
    1618:	07                   	(bad)  
    1619:	00 00                	add    BYTE PTR [rax],al
    161b:	00 3a                	add    BYTE PTR [rdx],bh
	...
    1625:	00 00                	add    BYTE PTR [rax],al
    1627:	00 50 0f             	add    BYTE PTR [rax+0xf],dl
    162a:	01 00                	add    DWORD PTR [rax],eax
    162c:	00 00                	add    BYTE PTR [rax],al
    162e:	00 00                	add    BYTE PTR [rax],al
    1630:	07                   	(bad)  
    1631:	00 00                	add    BYTE PTR [rax],al
    1633:	00 3b                	add    BYTE PTR [rbx],bh
	...
    163d:	00 00                	add    BYTE PTR [rax],al
    163f:	00 58 0f             	add    BYTE PTR [rax+0xf],bl
    1642:	01 00                	add    DWORD PTR [rax],eax
    1644:	00 00                	add    BYTE PTR [rax],al
    1646:	00 00                	add    BYTE PTR [rax],al
    1648:	07                   	(bad)  
    1649:	00 00                	add    BYTE PTR [rax],al
    164b:	00 3c 00             	add    BYTE PTR [rax+rax*1],bh
	...
    1656:	00 00                	add    BYTE PTR [rax],al
    1658:	60                   	(bad)  
    1659:	0f 01 00             	sgdt   [rax]
    165c:	00 00                	add    BYTE PTR [rax],al
    165e:	00 00                	add    BYTE PTR [rax],al
    1660:	07                   	(bad)  
    1661:	00 00                	add    BYTE PTR [rax],al
    1663:	00 3d 00 00 00 00    	add    BYTE PTR [rip+0x0],bh        # 1669 <__abi_tag+0x12a5>
    1669:	00 00                	add    BYTE PTR [rax],al
    166b:	00 00                	add    BYTE PTR [rax],al
    166d:	00 00                	add    BYTE PTR [rax],al
    166f:	00 68 0f             	add    BYTE PTR [rax+0xf],ch
    1672:	01 00                	add    DWORD PTR [rax],eax
    1674:	00 00                	add    BYTE PTR [rax],al
    1676:	00 00                	add    BYTE PTR [rax],al
    1678:	07                   	(bad)  
    1679:	00 00                	add    BYTE PTR [rax],al
    167b:	00 3e                	add    BYTE PTR [rsi],bh
	...
    1685:	00 00                	add    BYTE PTR [rax],al
    1687:	00 70 0f             	add    BYTE PTR [rax+0xf],dh
    168a:	01 00                	add    DWORD PTR [rax],eax
    168c:	00 00                	add    BYTE PTR [rax],al
    168e:	00 00                	add    BYTE PTR [rax],al
    1690:	07                   	(bad)  
    1691:	00 00                	add    BYTE PTR [rax],al
    1693:	00 3f                	add    BYTE PTR [rdi],bh
	...
    169d:	00 00                	add    BYTE PTR [rax],al
    169f:	00 78 0f             	add    BYTE PTR [rax+0xf],bh
    16a2:	01 00                	add    DWORD PTR [rax],eax
    16a4:	00 00                	add    BYTE PTR [rax],al
    16a6:	00 00                	add    BYTE PTR [rax],al
    16a8:	07                   	(bad)  
    16a9:	00 00                	add    BYTE PTR [rax],al
    16ab:	00 40 00             	add    BYTE PTR [rax+0x0],al
	...
    16b6:	00 00                	add    BYTE PTR [rax],al
    16b8:	80 0f 01             	or     BYTE PTR [rdi],0x1
    16bb:	00 00                	add    BYTE PTR [rax],al
    16bd:	00 00                	add    BYTE PTR [rax],al
    16bf:	00 07                	add    BYTE PTR [rdi],al
    16c1:	00 00                	add    BYTE PTR [rax],al
    16c3:	00 41 00             	add    BYTE PTR [rcx+0x0],al
	...
    16ce:	00 00                	add    BYTE PTR [rax],al
    16d0:	88 0f                	mov    BYTE PTR [rdi],cl
    16d2:	01 00                	add    DWORD PTR [rax],eax
    16d4:	00 00                	add    BYTE PTR [rax],al
    16d6:	00 00                	add    BYTE PTR [rax],al
    16d8:	07                   	(bad)  
    16d9:	00 00                	add    BYTE PTR [rax],al
    16db:	00 42 00             	add    BYTE PTR [rdx+0x0],al
	...
    16e6:	00 00                	add    BYTE PTR [rax],al
    16e8:	90                   	nop
    16e9:	0f 01 00             	sgdt   [rax]
    16ec:	00 00                	add    BYTE PTR [rax],al
    16ee:	00 00                	add    BYTE PTR [rax],al
    16f0:	07                   	(bad)  
    16f1:	00 00                	add    BYTE PTR [rax],al
    16f3:	00 43 00             	add    BYTE PTR [rbx+0x0],al
	...
    16fe:	00 00                	add    BYTE PTR [rax],al
    1700:	98                   	cwde   
    1701:	0f 01 00             	sgdt   [rax]
    1704:	00 00                	add    BYTE PTR [rax],al
    1706:	00 00                	add    BYTE PTR [rax],al
    1708:	07                   	(bad)  
    1709:	00 00                	add    BYTE PTR [rax],al
    170b:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
	...
    1717:	00 a0 0f 01 00 00    	add    BYTE PTR [rax+0x10f],ah
    171d:	00 00                	add    BYTE PTR [rax],al
    171f:	00 07                	add    BYTE PTR [rdi],al
    1721:	00 00                	add    BYTE PTR [rax],al
    1723:	00 45 00             	add    BYTE PTR [rbp+0x0],al
	...
    172e:	00 00                	add    BYTE PTR [rax],al
    1730:	a8 0f                	test   al,0xf
    1732:	01 00                	add    DWORD PTR [rax],eax
    1734:	00 00                	add    BYTE PTR [rax],al
    1736:	00 00                	add    BYTE PTR [rax],al
    1738:	07                   	(bad)  
    1739:	00 00                	add    BYTE PTR [rax],al
    173b:	00 46 00             	add    BYTE PTR [rsi+0x0],al
	...
    1746:	00 00                	add    BYTE PTR [rax],al
    1748:	b0 0f                	mov    al,0xf
    174a:	01 00                	add    DWORD PTR [rax],eax
    174c:	00 00                	add    BYTE PTR [rax],al
    174e:	00 00                	add    BYTE PTR [rax],al
    1750:	07                   	(bad)  
    1751:	00 00                	add    BYTE PTR [rax],al
    1753:	00 47 00             	add    BYTE PTR [rdi+0x0],al
	...
    175e:	00 00                	add    BYTE PTR [rax],al
    1760:	b8 0f 01 00 00       	mov    eax,0x10f
    1765:	00 00                	add    BYTE PTR [rax],al
    1767:	00 07                	add    BYTE PTR [rdi],al
    1769:	00 00                	add    BYTE PTR [rax],al
    176b:	00 48 00             	add    BYTE PTR [rax+0x0],cl
	...
    1776:	00 00                	add    BYTE PTR [rax],al
    1778:	c0 0f 01             	ror    BYTE PTR [rdi],0x1
    177b:	00 00                	add    BYTE PTR [rax],al
    177d:	00 00                	add    BYTE PTR [rax],al
    177f:	00 07                	add    BYTE PTR [rdi],al
    1781:	00 00                	add    BYTE PTR [rax],al
    1783:	00 4a 00             	add    BYTE PTR [rdx+0x0],cl
	...
    178e:	00 00                	add    BYTE PTR [rax],al
    1790:	c8 0f 01 00          	enter  0x10f,0x0
    1794:	00 00                	add    BYTE PTR [rax],al
    1796:	00 00                	add    BYTE PTR [rax],al
    1798:	07                   	(bad)  
    1799:	00 00                	add    BYTE PTR [rax],al
    179b:	00 4b 00             	add    BYTE PTR [rbx+0x0],cl
	...
    17a6:	00 00                	add    BYTE PTR [rax],al
    17a8:	d0 0f                	ror    BYTE PTR [rdi],1
    17aa:	01 00                	add    DWORD PTR [rax],eax
    17ac:	00 00                	add    BYTE PTR [rax],al
    17ae:	00 00                	add    BYTE PTR [rax],al
    17b0:	07                   	(bad)  
    17b1:	00 00                	add    BYTE PTR [rax],al
    17b3:	00 4c 00 00          	add    BYTE PTR [rax+rax*1+0x0],cl
	...

Disassembly of section .init:

0000000000002000 <_init>:
    2000:	f3 0f 1e fa          	endbr64 
    2004:	48 83 ec 08          	sub    rsp,0x8
    2008:	48 8b 05 c9 ef 00 00 	mov    rax,QWORD PTR [rip+0xefc9]        # 10fd8 <__gmon_start__>
    200f:	48 85 c0             	test   rax,rax
    2012:	74 02                	je     2016 <_init+0x16>
    2014:	ff d0                	call   rax
    2016:	48 83 c4 08          	add    rsp,0x8
    201a:	c3                   	ret    

Disassembly of section .plt:

0000000000002020 <.plt>:
    2020:	ff 35 62 ed 00 00    	push   QWORD PTR [rip+0xed62]        # 10d88 <_GLOBAL_OFFSET_TABLE_+0x8>
    2026:	f2 ff 25 63 ed 00 00 	bnd jmp QWORD PTR [rip+0xed63]        # 10d90 <_GLOBAL_OFFSET_TABLE_+0x10>
    202d:	0f 1f 00             	nop    DWORD PTR [rax]
    2030:	f3 0f 1e fa          	endbr64 
    2034:	68 00 00 00 00       	push   0x0
    2039:	f2 e9 e1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    203f:	90                   	nop
    2040:	f3 0f 1e fa          	endbr64 
    2044:	68 01 00 00 00       	push   0x1
    2049:	f2 e9 d1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    204f:	90                   	nop
    2050:	f3 0f 1e fa          	endbr64 
    2054:	68 02 00 00 00       	push   0x2
    2059:	f2 e9 c1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    205f:	90                   	nop
    2060:	f3 0f 1e fa          	endbr64 
    2064:	68 03 00 00 00       	push   0x3
    2069:	f2 e9 b1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    206f:	90                   	nop
    2070:	f3 0f 1e fa          	endbr64 
    2074:	68 04 00 00 00       	push   0x4
    2079:	f2 e9 a1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    207f:	90                   	nop
    2080:	f3 0f 1e fa          	endbr64 
    2084:	68 05 00 00 00       	push   0x5
    2089:	f2 e9 91 ff ff ff    	bnd jmp 2020 <_init+0x20>
    208f:	90                   	nop
    2090:	f3 0f 1e fa          	endbr64 
    2094:	68 06 00 00 00       	push   0x6
    2099:	f2 e9 81 ff ff ff    	bnd jmp 2020 <_init+0x20>
    209f:	90                   	nop
    20a0:	f3 0f 1e fa          	endbr64 
    20a4:	68 07 00 00 00       	push   0x7
    20a9:	f2 e9 71 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20af:	90                   	nop
    20b0:	f3 0f 1e fa          	endbr64 
    20b4:	68 08 00 00 00       	push   0x8
    20b9:	f2 e9 61 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20bf:	90                   	nop
    20c0:	f3 0f 1e fa          	endbr64 
    20c4:	68 09 00 00 00       	push   0x9
    20c9:	f2 e9 51 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20cf:	90                   	nop
    20d0:	f3 0f 1e fa          	endbr64 
    20d4:	68 0a 00 00 00       	push   0xa
    20d9:	f2 e9 41 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20df:	90                   	nop
    20e0:	f3 0f 1e fa          	endbr64 
    20e4:	68 0b 00 00 00       	push   0xb
    20e9:	f2 e9 31 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20ef:	90                   	nop
    20f0:	f3 0f 1e fa          	endbr64 
    20f4:	68 0c 00 00 00       	push   0xc
    20f9:	f2 e9 21 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20ff:	90                   	nop
    2100:	f3 0f 1e fa          	endbr64 
    2104:	68 0d 00 00 00       	push   0xd
    2109:	f2 e9 11 ff ff ff    	bnd jmp 2020 <_init+0x20>
    210f:	90                   	nop
    2110:	f3 0f 1e fa          	endbr64 
    2114:	68 0e 00 00 00       	push   0xe
    2119:	f2 e9 01 ff ff ff    	bnd jmp 2020 <_init+0x20>
    211f:	90                   	nop
    2120:	f3 0f 1e fa          	endbr64 
    2124:	68 0f 00 00 00       	push   0xf
    2129:	f2 e9 f1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    212f:	90                   	nop
    2130:	f3 0f 1e fa          	endbr64 
    2134:	68 10 00 00 00       	push   0x10
    2139:	f2 e9 e1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    213f:	90                   	nop
    2140:	f3 0f 1e fa          	endbr64 
    2144:	68 11 00 00 00       	push   0x11
    2149:	f2 e9 d1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    214f:	90                   	nop
    2150:	f3 0f 1e fa          	endbr64 
    2154:	68 12 00 00 00       	push   0x12
    2159:	f2 e9 c1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    215f:	90                   	nop
    2160:	f3 0f 1e fa          	endbr64 
    2164:	68 13 00 00 00       	push   0x13
    2169:	f2 e9 b1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    216f:	90                   	nop
    2170:	f3 0f 1e fa          	endbr64 
    2174:	68 14 00 00 00       	push   0x14
    2179:	f2 e9 a1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    217f:	90                   	nop
    2180:	f3 0f 1e fa          	endbr64 
    2184:	68 15 00 00 00       	push   0x15
    2189:	f2 e9 91 fe ff ff    	bnd jmp 2020 <_init+0x20>
    218f:	90                   	nop
    2190:	f3 0f 1e fa          	endbr64 
    2194:	68 16 00 00 00       	push   0x16
    2199:	f2 e9 81 fe ff ff    	bnd jmp 2020 <_init+0x20>
    219f:	90                   	nop
    21a0:	f3 0f 1e fa          	endbr64 
    21a4:	68 17 00 00 00       	push   0x17
    21a9:	f2 e9 71 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21af:	90                   	nop
    21b0:	f3 0f 1e fa          	endbr64 
    21b4:	68 18 00 00 00       	push   0x18
    21b9:	f2 e9 61 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21bf:	90                   	nop
    21c0:	f3 0f 1e fa          	endbr64 
    21c4:	68 19 00 00 00       	push   0x19
    21c9:	f2 e9 51 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21cf:	90                   	nop
    21d0:	f3 0f 1e fa          	endbr64 
    21d4:	68 1a 00 00 00       	push   0x1a
    21d9:	f2 e9 41 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21df:	90                   	nop
    21e0:	f3 0f 1e fa          	endbr64 
    21e4:	68 1b 00 00 00       	push   0x1b
    21e9:	f2 e9 31 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21ef:	90                   	nop
    21f0:	f3 0f 1e fa          	endbr64 
    21f4:	68 1c 00 00 00       	push   0x1c
    21f9:	f2 e9 21 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21ff:	90                   	nop
    2200:	f3 0f 1e fa          	endbr64 
    2204:	68 1d 00 00 00       	push   0x1d
    2209:	f2 e9 11 fe ff ff    	bnd jmp 2020 <_init+0x20>
    220f:	90                   	nop
    2210:	f3 0f 1e fa          	endbr64 
    2214:	68 1e 00 00 00       	push   0x1e
    2219:	f2 e9 01 fe ff ff    	bnd jmp 2020 <_init+0x20>
    221f:	90                   	nop
    2220:	f3 0f 1e fa          	endbr64 
    2224:	68 1f 00 00 00       	push   0x1f
    2229:	f2 e9 f1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    222f:	90                   	nop
    2230:	f3 0f 1e fa          	endbr64 
    2234:	68 20 00 00 00       	push   0x20
    2239:	f2 e9 e1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    223f:	90                   	nop
    2240:	f3 0f 1e fa          	endbr64 
    2244:	68 21 00 00 00       	push   0x21
    2249:	f2 e9 d1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    224f:	90                   	nop
    2250:	f3 0f 1e fa          	endbr64 
    2254:	68 22 00 00 00       	push   0x22
    2259:	f2 e9 c1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    225f:	90                   	nop
    2260:	f3 0f 1e fa          	endbr64 
    2264:	68 23 00 00 00       	push   0x23
    2269:	f2 e9 b1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    226f:	90                   	nop
    2270:	f3 0f 1e fa          	endbr64 
    2274:	68 24 00 00 00       	push   0x24
    2279:	f2 e9 a1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    227f:	90                   	nop
    2280:	f3 0f 1e fa          	endbr64 
    2284:	68 25 00 00 00       	push   0x25
    2289:	f2 e9 91 fd ff ff    	bnd jmp 2020 <_init+0x20>
    228f:	90                   	nop
    2290:	f3 0f 1e fa          	endbr64 
    2294:	68 26 00 00 00       	push   0x26
    2299:	f2 e9 81 fd ff ff    	bnd jmp 2020 <_init+0x20>
    229f:	90                   	nop
    22a0:	f3 0f 1e fa          	endbr64 
    22a4:	68 27 00 00 00       	push   0x27
    22a9:	f2 e9 71 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22af:	90                   	nop
    22b0:	f3 0f 1e fa          	endbr64 
    22b4:	68 28 00 00 00       	push   0x28
    22b9:	f2 e9 61 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22bf:	90                   	nop
    22c0:	f3 0f 1e fa          	endbr64 
    22c4:	68 29 00 00 00       	push   0x29
    22c9:	f2 e9 51 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22cf:	90                   	nop
    22d0:	f3 0f 1e fa          	endbr64 
    22d4:	68 2a 00 00 00       	push   0x2a
    22d9:	f2 e9 41 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22df:	90                   	nop
    22e0:	f3 0f 1e fa          	endbr64 
    22e4:	68 2b 00 00 00       	push   0x2b
    22e9:	f2 e9 31 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22ef:	90                   	nop
    22f0:	f3 0f 1e fa          	endbr64 
    22f4:	68 2c 00 00 00       	push   0x2c
    22f9:	f2 e9 21 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22ff:	90                   	nop
    2300:	f3 0f 1e fa          	endbr64 
    2304:	68 2d 00 00 00       	push   0x2d
    2309:	f2 e9 11 fd ff ff    	bnd jmp 2020 <_init+0x20>
    230f:	90                   	nop
    2310:	f3 0f 1e fa          	endbr64 
    2314:	68 2e 00 00 00       	push   0x2e
    2319:	f2 e9 01 fd ff ff    	bnd jmp 2020 <_init+0x20>
    231f:	90                   	nop
    2320:	f3 0f 1e fa          	endbr64 
    2324:	68 2f 00 00 00       	push   0x2f
    2329:	f2 e9 f1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    232f:	90                   	nop
    2330:	f3 0f 1e fa          	endbr64 
    2334:	68 30 00 00 00       	push   0x30
    2339:	f2 e9 e1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    233f:	90                   	nop
    2340:	f3 0f 1e fa          	endbr64 
    2344:	68 31 00 00 00       	push   0x31
    2349:	f2 e9 d1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    234f:	90                   	nop
    2350:	f3 0f 1e fa          	endbr64 
    2354:	68 32 00 00 00       	push   0x32
    2359:	f2 e9 c1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    235f:	90                   	nop
    2360:	f3 0f 1e fa          	endbr64 
    2364:	68 33 00 00 00       	push   0x33
    2369:	f2 e9 b1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    236f:	90                   	nop
    2370:	f3 0f 1e fa          	endbr64 
    2374:	68 34 00 00 00       	push   0x34
    2379:	f2 e9 a1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    237f:	90                   	nop
    2380:	f3 0f 1e fa          	endbr64 
    2384:	68 35 00 00 00       	push   0x35
    2389:	f2 e9 91 fc ff ff    	bnd jmp 2020 <_init+0x20>
    238f:	90                   	nop
    2390:	f3 0f 1e fa          	endbr64 
    2394:	68 36 00 00 00       	push   0x36
    2399:	f2 e9 81 fc ff ff    	bnd jmp 2020 <_init+0x20>
    239f:	90                   	nop
    23a0:	f3 0f 1e fa          	endbr64 
    23a4:	68 37 00 00 00       	push   0x37
    23a9:	f2 e9 71 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23af:	90                   	nop
    23b0:	f3 0f 1e fa          	endbr64 
    23b4:	68 38 00 00 00       	push   0x38
    23b9:	f2 e9 61 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23bf:	90                   	nop
    23c0:	f3 0f 1e fa          	endbr64 
    23c4:	68 39 00 00 00       	push   0x39
    23c9:	f2 e9 51 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23cf:	90                   	nop
    23d0:	f3 0f 1e fa          	endbr64 
    23d4:	68 3a 00 00 00       	push   0x3a
    23d9:	f2 e9 41 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23df:	90                   	nop
    23e0:	f3 0f 1e fa          	endbr64 
    23e4:	68 3b 00 00 00       	push   0x3b
    23e9:	f2 e9 31 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23ef:	90                   	nop
    23f0:	f3 0f 1e fa          	endbr64 
    23f4:	68 3c 00 00 00       	push   0x3c
    23f9:	f2 e9 21 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23ff:	90                   	nop
    2400:	f3 0f 1e fa          	endbr64 
    2404:	68 3d 00 00 00       	push   0x3d
    2409:	f2 e9 11 fc ff ff    	bnd jmp 2020 <_init+0x20>
    240f:	90                   	nop
    2410:	f3 0f 1e fa          	endbr64 
    2414:	68 3e 00 00 00       	push   0x3e
    2419:	f2 e9 01 fc ff ff    	bnd jmp 2020 <_init+0x20>
    241f:	90                   	nop
    2420:	f3 0f 1e fa          	endbr64 
    2424:	68 3f 00 00 00       	push   0x3f
    2429:	f2 e9 f1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    242f:	90                   	nop
    2430:	f3 0f 1e fa          	endbr64 
    2434:	68 40 00 00 00       	push   0x40
    2439:	f2 e9 e1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    243f:	90                   	nop
    2440:	f3 0f 1e fa          	endbr64 
    2444:	68 41 00 00 00       	push   0x41
    2449:	f2 e9 d1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    244f:	90                   	nop
    2450:	f3 0f 1e fa          	endbr64 
    2454:	68 42 00 00 00       	push   0x42
    2459:	f2 e9 c1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    245f:	90                   	nop
    2460:	f3 0f 1e fa          	endbr64 
    2464:	68 43 00 00 00       	push   0x43
    2469:	f2 e9 b1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    246f:	90                   	nop
    2470:	f3 0f 1e fa          	endbr64 
    2474:	68 44 00 00 00       	push   0x44
    2479:	f2 e9 a1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    247f:	90                   	nop
    2480:	f3 0f 1e fa          	endbr64 
    2484:	68 45 00 00 00       	push   0x45
    2489:	f2 e9 91 fb ff ff    	bnd jmp 2020 <_init+0x20>
    248f:	90                   	nop
    2490:	f3 0f 1e fa          	endbr64 
    2494:	68 46 00 00 00       	push   0x46
    2499:	f2 e9 81 fb ff ff    	bnd jmp 2020 <_init+0x20>
    249f:	90                   	nop
    24a0:	f3 0f 1e fa          	endbr64 
    24a4:	68 47 00 00 00       	push   0x47
    24a9:	f2 e9 71 fb ff ff    	bnd jmp 2020 <_init+0x20>
    24af:	90                   	nop

Disassembly of section .plt.got:

00000000000024b0 <__cxa_finalize@plt>:
    24b0:	f3 0f 1e fa          	endbr64 
    24b4:	f2 ff 25 35 eb 00 00 	bnd jmp QWORD PTR [rip+0xeb35]        # 10ff0 <__cxa_finalize@GLIBC_2.2.5>
    24bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

00000000000024c0 <sqlite3_close@plt>:
    24c0:	f3 0f 1e fa          	endbr64 
    24c4:	f2 ff 25 cd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8cd]        # 10d98 <sqlite3_close>
    24cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024d0 <pthread_join@plt>:
    24d0:	f3 0f 1e fa          	endbr64 
    24d4:	f2 ff 25 c5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8c5]        # 10da0 <pthread_join@GLIBC_2.34>
    24db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024e0 <printf@plt>:
    24e0:	f3 0f 1e fa          	endbr64 
    24e4:	f2 ff 25 bd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8bd]        # 10da8 <printf@GLIBC_2.2.5>
    24eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024f0 <memset@plt>:
    24f0:	f3 0f 1e fa          	endbr64 
    24f4:	f2 ff 25 b5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8b5]        # 10db0 <memset@GLIBC_2.2.5>
    24fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002500 <snprintf@plt>:
    2500:	f3 0f 1e fa          	endbr64 
    2504:	f2 ff 25 ad e8 00 00 	bnd jmp QWORD PTR [rip+0xe8ad]        # 10db8 <snprintf@GLIBC_2.2.5>
    250b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002510 <backtrace@plt>:
    2510:	f3 0f 1e fa          	endbr64 
    2514:	f2 ff 25 a5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8a5]        # 10dc0 <backtrace@GLIBC_2.2.5>
    251b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002520 <close@plt>:
    2520:	f3 0f 1e fa          	endbr64 
    2524:	f2 ff 25 9d e8 00 00 	bnd jmp QWORD PTR [rip+0xe89d]        # 10dc8 <close@GLIBC_2.2.5>
    252b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002530 <strncat@plt>:
    2530:	f3 0f 1e fa          	endbr64 
    2534:	f2 ff 25 95 e8 00 00 	bnd jmp QWORD PTR [rip+0xe895]        # 10dd0 <strncat@GLIBC_2.2.5>
    253b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002540 <puts@plt>:
    2540:	f3 0f 1e fa          	endbr64 
    2544:	f2 ff 25 8d e8 00 00 	bnd jmp QWORD PTR [rip+0xe88d]        # 10dd8 <puts@GLIBC_2.2.5>
    254b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002550 <htons@plt>:
    2550:	f3 0f 1e fa          	endbr64 
    2554:	f2 ff 25 85 e8 00 00 	bnd jmp QWORD PTR [rip+0xe885]        # 10de0 <htons@GLIBC_2.2.5>
    255b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002560 <exit@plt>:
    2560:	f3 0f 1e fa          	endbr64 
    2564:	f2 ff 25 7d e8 00 00 	bnd jmp QWORD PTR [rip+0xe87d]        # 10de8 <exit@GLIBC_2.2.5>
    256b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002570 <putchar@plt>:
    2570:	f3 0f 1e fa          	endbr64 
    2574:	f2 ff 25 75 e8 00 00 	bnd jmp QWORD PTR [rip+0xe875]        # 10df0 <putchar@GLIBC_2.2.5>
    257b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002580 <sqlite3_exec@plt>:
    2580:	f3 0f 1e fa          	endbr64 
    2584:	f2 ff 25 6d e8 00 00 	bnd jmp QWORD PTR [rip+0xe86d]        # 10df8 <sqlite3_exec>
    258b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002590 <getopt@plt>:
    2590:	f3 0f 1e fa          	endbr64 
    2594:	f2 ff 25 65 e8 00 00 	bnd jmp QWORD PTR [rip+0xe865]        # 10e00 <getopt@GLIBC_2.2.5>
    259b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025a0 <read@plt>:
    25a0:	f3 0f 1e fa          	endbr64 
    25a4:	f2 ff 25 5d e8 00 00 	bnd jmp QWORD PTR [rip+0xe85d]        # 10e08 <read@GLIBC_2.2.5>
    25ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025b0 <strncmp@plt>:
    25b0:	f3 0f 1e fa          	endbr64 
    25b4:	f2 ff 25 55 e8 00 00 	bnd jmp QWORD PTR [rip+0xe855]        # 10e10 <strncmp@GLIBC_2.2.5>
    25bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025c0 <malloc@plt>:
    25c0:	f3 0f 1e fa          	endbr64 
    25c4:	f2 ff 25 4d e8 00 00 	bnd jmp QWORD PTR [rip+0xe84d]        # 10e18 <malloc@GLIBC_2.2.5>
    25cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025d0 <fopen@plt>:
    25d0:	f3 0f 1e fa          	endbr64 
    25d4:	f2 ff 25 45 e8 00 00 	bnd jmp QWORD PTR [rip+0xe845]        # 10e20 <fopen@GLIBC_2.2.5>
    25db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025e0 <regexec@plt>:
    25e0:	f3 0f 1e fa          	endbr64 
    25e4:	f2 ff 25 3d e8 00 00 	bnd jmp QWORD PTR [rip+0xe83d]        # 10e28 <regexec@GLIBC_2.3.4>
    25eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025f0 <pcap_open_live@plt>:
    25f0:	f3 0f 1e fa          	endbr64 
    25f4:	f2 ff 25 35 e8 00 00 	bnd jmp QWORD PTR [rip+0xe835]        # 10e30 <pcap_open_live>
    25fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002600 <setsockopt@plt>:
    2600:	f3 0f 1e fa          	endbr64 
    2604:	f2 ff 25 2d e8 00 00 	bnd jmp QWORD PTR [rip+0xe82d]        # 10e38 <setsockopt@GLIBC_2.2.5>
    260b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002610 <sqlite3_free@plt>:
    2610:	f3 0f 1e fa          	endbr64 
    2614:	f2 ff 25 25 e8 00 00 	bnd jmp QWORD PTR [rip+0xe825]        # 10e40 <sqlite3_free>
    261b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002620 <getpid@plt>:
    2620:	f3 0f 1e fa          	endbr64 
    2624:	f2 ff 25 1d e8 00 00 	bnd jmp QWORD PTR [rip+0xe81d]        # 10e48 <getpid@GLIBC_2.2.5>
    262b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002630 <lua_settop@plt>:
    2630:	f3 0f 1e fa          	endbr64 
    2634:	f2 ff 25 15 e8 00 00 	bnd jmp QWORD PTR [rip+0xe815]        # 10e50 <lua_settop@LUA_5.3>
    263b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002640 <pthread_create@plt>:
    2640:	f3 0f 1e fa          	endbr64 
    2644:	f2 ff 25 0d e8 00 00 	bnd jmp QWORD PTR [rip+0xe80d]        # 10e58 <pthread_create@GLIBC_2.34>
    264b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002650 <backtrace_symbols@plt>:
    2650:	f3 0f 1e fa          	endbr64 
    2654:	f2 ff 25 05 e8 00 00 	bnd jmp QWORD PTR [rip+0xe805]        # 10e60 <backtrace_symbols@GLIBC_2.2.5>
    265b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002660 <free@plt>:
    2660:	f3 0f 1e fa          	endbr64 
    2664:	f2 ff 25 fd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7fd]        # 10e68 <free@GLIBC_2.2.5>
    266b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002670 <strlen@plt>:
    2670:	f3 0f 1e fa          	endbr64 
    2674:	f2 ff 25 f5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7f5]        # 10e70 <strlen@GLIBC_2.2.5>
    267b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002680 <opendir@plt>:
    2680:	f3 0f 1e fa          	endbr64 
    2684:	f2 ff 25 ed e7 00 00 	bnd jmp QWORD PTR [rip+0xe7ed]        # 10e78 <opendir@GLIBC_2.2.5>
    268b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002690 <listen@plt>:
    2690:	f3 0f 1e fa          	endbr64 
    2694:	f2 ff 25 e5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7e5]        # 10e80 <listen@GLIBC_2.2.5>
    269b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026a0 <readdir@plt>:
    26a0:	f3 0f 1e fa          	endbr64 
    26a4:	f2 ff 25 dd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7dd]        # 10e88 <readdir@GLIBC_2.2.5>
    26ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026b0 <sprintf@plt>:
    26b0:	f3 0f 1e fa          	endbr64 
    26b4:	f2 ff 25 d5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7d5]        # 10e90 <sprintf@GLIBC_2.2.5>
    26bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026c0 <ntohs@plt>:
    26c0:	f3 0f 1e fa          	endbr64 
    26c4:	f2 ff 25 cd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7cd]        # 10e98 <ntohs@GLIBC_2.2.5>
    26cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026d0 <fgetc@plt>:
    26d0:	f3 0f 1e fa          	endbr64 
    26d4:	f2 ff 25 c5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7c5]        # 10ea0 <fgetc@GLIBC_2.2.5>
    26db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026e0 <ntohl@plt>:
    26e0:	f3 0f 1e fa          	endbr64 
    26e4:	f2 ff 25 bd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7bd]        # 10ea8 <ntohl@GLIBC_2.2.5>
    26eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026f0 <sleep@plt>:
    26f0:	f3 0f 1e fa          	endbr64 
    26f4:	f2 ff 25 b5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7b5]        # 10eb0 <sleep@GLIBC_2.2.5>
    26fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002700 <lua_pcallk@plt>:
    2700:	f3 0f 1e fa          	endbr64 
    2704:	f2 ff 25 ad e7 00 00 	bnd jmp QWORD PTR [rip+0xe7ad]        # 10eb8 <lua_pcallk@LUA_5.3>
    270b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002710 <strstr@plt>:
    2710:	f3 0f 1e fa          	endbr64 
    2714:	f2 ff 25 a5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7a5]        # 10ec0 <strstr@GLIBC_2.2.5>
    271b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002720 <strcat@plt>:
    2720:	f3 0f 1e fa          	endbr64 
    2724:	f2 ff 25 9d e7 00 00 	bnd jmp QWORD PTR [rip+0xe79d]        # 10ec8 <strcat@GLIBC_2.2.5>
    272b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002730 <fputs@plt>:
    2730:	f3 0f 1e fa          	endbr64 
    2734:	f2 ff 25 95 e7 00 00 	bnd jmp QWORD PTR [rip+0xe795]        # 10ed0 <fputs@GLIBC_2.2.5>
    273b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002740 <strtol@plt>:
    2740:	f3 0f 1e fa          	endbr64 
    2744:	f2 ff 25 8d e7 00 00 	bnd jmp QWORD PTR [rip+0xe78d]        # 10ed8 <strtol@GLIBC_2.2.5>
    274b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002750 <luaL_loadfilex@plt>:
    2750:	f3 0f 1e fa          	endbr64 
    2754:	f2 ff 25 85 e7 00 00 	bnd jmp QWORD PTR [rip+0xe785]        # 10ee0 <luaL_loadfilex@LUA_5.3>
    275b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002760 <atoi@plt>:
    2760:	f3 0f 1e fa          	endbr64 
    2764:	f2 ff 25 7d e7 00 00 	bnd jmp QWORD PTR [rip+0xe77d]        # 10ee8 <atoi@GLIBC_2.2.5>
    276b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002770 <regcomp@plt>:
    2770:	f3 0f 1e fa          	endbr64 
    2774:	f2 ff 25 75 e7 00 00 	bnd jmp QWORD PTR [rip+0xe775]        # 10ef0 <regcomp@GLIBC_2.2.5>
    277b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002780 <signal@plt>:
    2780:	f3 0f 1e fa          	endbr64 
    2784:	f2 ff 25 6d e7 00 00 	bnd jmp QWORD PTR [rip+0xe76d]        # 10ef8 <signal@GLIBC_2.2.5>
    278b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002790 <strchr@plt>:
    2790:	f3 0f 1e fa          	endbr64 
    2794:	f2 ff 25 65 e7 00 00 	bnd jmp QWORD PTR [rip+0xe765]        # 10f00 <strchr@GLIBC_2.2.5>
    279b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027a0 <lua_gettop@plt>:
    27a0:	f3 0f 1e fa          	endbr64 
    27a4:	f2 ff 25 5d e7 00 00 	bnd jmp QWORD PTR [rip+0xe75d]        # 10f08 <lua_gettop@LUA_5.3>
    27ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027b0 <luaL_newstate@plt>:
    27b0:	f3 0f 1e fa          	endbr64 
    27b4:	f2 ff 25 55 e7 00 00 	bnd jmp QWORD PTR [rip+0xe755]        # 10f10 <luaL_newstate@LUA_5.3>
    27bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027c0 <socket@plt>:
    27c0:	f3 0f 1e fa          	endbr64 
    27c4:	f2 ff 25 4d e7 00 00 	bnd jmp QWORD PTR [rip+0xe74d]        # 10f18 <socket@GLIBC_2.2.5>
    27cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027d0 <luaL_openlibs@plt>:
    27d0:	f3 0f 1e fa          	endbr64 
    27d4:	f2 ff 25 45 e7 00 00 	bnd jmp QWORD PTR [rip+0xe745]        # 10f20 <luaL_openlibs@LUA_5.3>
    27db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027e0 <__stack_chk_fail@plt>:
    27e0:	f3 0f 1e fa          	endbr64 
    27e4:	f2 ff 25 3d e7 00 00 	bnd jmp QWORD PTR [rip+0xe73d]        # 10f28 <__stack_chk_fail@GLIBC_2.4>
    27eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027f0 <strcmp@plt>:
    27f0:	f3 0f 1e fa          	endbr64 
    27f4:	f2 ff 25 35 e7 00 00 	bnd jmp QWORD PTR [rip+0xe735]        # 10f30 <strcmp@GLIBC_2.2.5>
    27fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002800 <send@plt>:
    2800:	f3 0f 1e fa          	endbr64 
    2804:	f2 ff 25 2d e7 00 00 	bnd jmp QWORD PTR [rip+0xe72d]        # 10f38 <send@GLIBC_2.2.5>
    280b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002810 <getline@plt>:
    2810:	f3 0f 1e fa          	endbr64 
    2814:	f2 ff 25 25 e7 00 00 	bnd jmp QWORD PTR [rip+0xe725]        # 10f40 <getline@GLIBC_2.2.5>
    281b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002820 <strcpy@plt>:
    2820:	f3 0f 1e fa          	endbr64 
    2824:	f2 ff 25 1d e7 00 00 	bnd jmp QWORD PTR [rip+0xe71d]        # 10f48 <strcpy@GLIBC_2.2.5>
    282b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002830 <strtok@plt>:
    2830:	f3 0f 1e fa          	endbr64 
    2834:	f2 ff 25 15 e7 00 00 	bnd jmp QWORD PTR [rip+0xe715]        # 10f50 <strtok@GLIBC_2.2.5>
    283b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002840 <lua_close@plt>:
    2840:	f3 0f 1e fa          	endbr64 
    2844:	f2 ff 25 0d e7 00 00 	bnd jmp QWORD PTR [rip+0xe70d]        # 10f58 <lua_close@LUA_5.3>
    284b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002850 <sqlite3_errmsg@plt>:
    2850:	f3 0f 1e fa          	endbr64 
    2854:	f2 ff 25 05 e7 00 00 	bnd jmp QWORD PTR [rip+0xe705]        # 10f60 <sqlite3_errmsg>
    285b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002860 <fclose@plt>:
    2860:	f3 0f 1e fa          	endbr64 
    2864:	f2 ff 25 fd e6 00 00 	bnd jmp QWORD PTR [rip+0xe6fd]        # 10f68 <fclose@GLIBC_2.2.5>
    286b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002870 <strncpy@plt>:
    2870:	f3 0f 1e fa          	endbr64 
    2874:	f2 ff 25 f5 e6 00 00 	bnd jmp QWORD PTR [rip+0xe6f5]        # 10f70 <strncpy@GLIBC_2.2.5>
    287b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002880 <closedir@plt>:
    2880:	f3 0f 1e fa          	endbr64 
    2884:	f2 ff 25 ed e6 00 00 	bnd jmp QWORD PTR [rip+0xe6ed]        # 10f78 <closedir@GLIBC_2.2.5>
    288b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002890 <strcspn@plt>:
    2890:	f3 0f 1e fa          	endbr64 
    2894:	f2 ff 25 e5 e6 00 00 	bnd jmp QWORD PTR [rip+0xe6e5]        # 10f80 <strcspn@GLIBC_2.2.5>
    289b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028a0 <bind@plt>:
    28a0:	f3 0f 1e fa          	endbr64 
    28a4:	f2 ff 25 dd e6 00 00 	bnd jmp QWORD PTR [rip+0xe6dd]        # 10f88 <bind@GLIBC_2.2.5>
    28ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028b0 <pcap_loop@plt>:
    28b0:	f3 0f 1e fa          	endbr64 
    28b4:	f2 ff 25 d5 e6 00 00 	bnd jmp QWORD PTR [rip+0xe6d5]        # 10f90 <pcap_loop>
    28bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028c0 <htonl@plt>:
    28c0:	f3 0f 1e fa          	endbr64 
    28c4:	f2 ff 25 cd e6 00 00 	bnd jmp QWORD PTR [rip+0xe6cd]        # 10f98 <htonl@GLIBC_2.2.5>
    28cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028d0 <perror@plt>:
    28d0:	f3 0f 1e fa          	endbr64 
    28d4:	f2 ff 25 c5 e6 00 00 	bnd jmp QWORD PTR [rip+0xe6c5]        # 10fa0 <perror@GLIBC_2.2.5>
    28db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028e0 <fprintf@plt>:
    28e0:	f3 0f 1e fa          	endbr64 
    28e4:	f2 ff 25 bd e6 00 00 	bnd jmp QWORD PTR [rip+0xe6bd]        # 10fa8 <fprintf@GLIBC_2.2.5>
    28eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028f0 <localtime@plt>:
    28f0:	f3 0f 1e fa          	endbr64 
    28f4:	f2 ff 25 b5 e6 00 00 	bnd jmp QWORD PTR [rip+0xe6b5]        # 10fb0 <localtime@GLIBC_2.2.5>
    28fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002900 <getdelim@plt>:
    2900:	f3 0f 1e fa          	endbr64 
    2904:	f2 ff 25 ad e6 00 00 	bnd jmp QWORD PTR [rip+0xe6ad]        # 10fb8 <getdelim@GLIBC_2.2.5>
    290b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002910 <accept@plt>:
    2910:	f3 0f 1e fa          	endbr64 
    2914:	f2 ff 25 a5 e6 00 00 	bnd jmp QWORD PTR [rip+0xe6a5]        # 10fc0 <accept@GLIBC_2.2.5>
    291b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002920 <sqlite3_open@plt>:
    2920:	f3 0f 1e fa          	endbr64 
    2924:	f2 ff 25 9d e6 00 00 	bnd jmp QWORD PTR [rip+0xe69d]        # 10fc8 <sqlite3_open>
    292b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002930 <time@plt>:
    2930:	f3 0f 1e fa          	endbr64 
    2934:	f2 ff 25 95 e6 00 00 	bnd jmp QWORD PTR [rip+0xe695]        # 10fd0 <time@GLIBC_2.2.5>
    293b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000002940 <_start>:
    2940:	f3 0f 1e fa          	endbr64 
    2944:	31 ed                	xor    ebp,ebp
    2946:	49 89 d1             	mov    r9,rdx
    2949:	5e                   	pop    rsi
    294a:	48 89 e2             	mov    rdx,rsp
    294d:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    2951:	50                   	push   rax
    2952:	54                   	push   rsp
    2953:	45 31 c0             	xor    r8d,r8d
    2956:	31 c9                	xor    ecx,ecx
    2958:	48 8d 3d 80 40 00 00 	lea    rdi,[rip+0x4080]        # 69df <main>
    295f:	ff 15 93 e6 00 00    	call   QWORD PTR [rip+0xe693]        # 10ff8 <__libc_start_main@GLIBC_2.34>
    2965:	f4                   	hlt    
    2966:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    296d:	00 00 00 

0000000000002970 <deregister_tm_clones>:
    2970:	48 8d 3d d1 e6 00 00 	lea    rdi,[rip+0xe6d1]        # 11048 <__TMC_END__>
    2977:	48 8d 05 ca e6 00 00 	lea    rax,[rip+0xe6ca]        # 11048 <__TMC_END__>
    297e:	48 39 f8             	cmp    rax,rdi
    2981:	74 15                	je     2998 <deregister_tm_clones+0x28>
    2983:	48 8b 05 56 e6 00 00 	mov    rax,QWORD PTR [rip+0xe656]        # 10fe0 <_ITM_deregisterTMCloneTable>
    298a:	48 85 c0             	test   rax,rax
    298d:	74 09                	je     2998 <deregister_tm_clones+0x28>
    298f:	ff e0                	jmp    rax
    2991:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    2998:	c3                   	ret    
    2999:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000029a0 <register_tm_clones>:
    29a0:	48 8d 3d a1 e6 00 00 	lea    rdi,[rip+0xe6a1]        # 11048 <__TMC_END__>
    29a7:	48 8d 35 9a e6 00 00 	lea    rsi,[rip+0xe69a]        # 11048 <__TMC_END__>
    29ae:	48 29 fe             	sub    rsi,rdi
    29b1:	48 89 f0             	mov    rax,rsi
    29b4:	48 c1 ee 3f          	shr    rsi,0x3f
    29b8:	48 c1 f8 03          	sar    rax,0x3
    29bc:	48 01 c6             	add    rsi,rax
    29bf:	48 d1 fe             	sar    rsi,1
    29c2:	74 14                	je     29d8 <register_tm_clones+0x38>
    29c4:	48 8b 05 1d e6 00 00 	mov    rax,QWORD PTR [rip+0xe61d]        # 10fe8 <_ITM_registerTMCloneTable>
    29cb:	48 85 c0             	test   rax,rax
    29ce:	74 08                	je     29d8 <register_tm_clones+0x38>
    29d0:	ff e0                	jmp    rax
    29d2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    29d8:	c3                   	ret    
    29d9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000029e0 <__do_global_dtors_aux>:
    29e0:	f3 0f 1e fa          	endbr64 
    29e4:	80 3d 7d e6 00 00 00 	cmp    BYTE PTR [rip+0xe67d],0x0        # 11068 <completed.0>
    29eb:	75 2b                	jne    2a18 <__do_global_dtors_aux+0x38>
    29ed:	55                   	push   rbp
    29ee:	48 83 3d fa e5 00 00 	cmp    QWORD PTR [rip+0xe5fa],0x0        # 10ff0 <__cxa_finalize@GLIBC_2.2.5>
    29f5:	00 
    29f6:	48 89 e5             	mov    rbp,rsp
    29f9:	74 0c                	je     2a07 <__do_global_dtors_aux+0x27>
    29fb:	48 8b 3d 06 e6 00 00 	mov    rdi,QWORD PTR [rip+0xe606]        # 11008 <__dso_handle>
    2a02:	e8 a9 fa ff ff       	call   24b0 <__cxa_finalize@plt>
    2a07:	e8 64 ff ff ff       	call   2970 <deregister_tm_clones>
    2a0c:	c6 05 55 e6 00 00 01 	mov    BYTE PTR [rip+0xe655],0x1        # 11068 <completed.0>
    2a13:	5d                   	pop    rbp
    2a14:	c3                   	ret    
    2a15:	0f 1f 00             	nop    DWORD PTR [rax]
    2a18:	c3                   	ret    
    2a19:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002a20 <frame_dummy>:
    2a20:	f3 0f 1e fa          	endbr64 
    2a24:	e9 77 ff ff ff       	jmp    29a0 <register_tm_clones>

0000000000002a29 <add_thread>:
    2a29:	f3 0f 1e fa          	endbr64 
    2a2d:	55                   	push   rbp
    2a2e:	48 89 e5             	mov    rbp,rsp
    2a31:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    2a35:	8b 05 65 e8 00 00    	mov    eax,DWORD PTR [rip+0xe865]        # 112a0 <thread_count>
    2a3b:	8d 50 01             	lea    edx,[rax+0x1]
    2a3e:	89 15 5c e8 00 00    	mov    DWORD PTR [rip+0xe85c],edx        # 112a0 <thread_count>
    2a44:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    2a48:	48 8b 12             	mov    rdx,QWORD PTR [rdx]
    2a4b:	48 98                	cdqe   
    2a4d:	48 8d 0c c5 00 00 00 	lea    rcx,[rax*8+0x0]
    2a54:	00 
    2a55:	48 8d 05 44 e6 00 00 	lea    rax,[rip+0xe644]        # 110a0 <threads>
    2a5c:	48 89 14 01          	mov    QWORD PTR [rcx+rax*1],rdx
    2a60:	90                   	nop
    2a61:	5d                   	pop    rbp
    2a62:	c3                   	ret    

0000000000002a63 <pktmgr>:
    2a63:	f3 0f 1e fa          	endbr64 
    2a67:	55                   	push   rbp
    2a68:	48 89 e5             	mov    rbp,rsp
    2a6b:	53                   	push   rbx
    2a6c:	48 83 ec 38          	sub    rsp,0x38
    2a70:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    2a74:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    2a78:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    2a7c:	b8 00 00 00 00       	mov    eax,0x0
    2a81:	e8 5a 8f 00 00       	call   b9e0 <pps_monitor>
    2a86:	0f b6 05 d7 74 10 00 	movzx  eax,BYTE PTR [rip+0x1074d7]        # 109f64 <packet_print>
    2a8d:	84 c0                	test   al,al
    2a8f:	74 0c                	je     2a9d <pktmgr+0x3a>
    2a91:	48 8d 3d b8 95 00 00 	lea    rdi,[rip+0x95b8]        # c050 <_IO_stdin_used+0x50>
    2a98:	e8 a3 fa ff ff       	call   2540 <puts@plt>
    2a9d:	8b 05 01 e8 00 00    	mov    eax,DWORD PTR [rip+0xe801]        # 112a4 <total_pkt_captured>
    2aa3:	83 c0 01             	add    eax,0x1
    2aa6:	89 05 f8 e7 00 00    	mov    DWORD PTR [rip+0xe7f8],eax        # 112a4 <total_pkt_captured>
    2aac:	8b 05 0e e8 00 00    	mov    eax,DWORD PTR [rip+0xe80e]        # 112c0 <pkt_counter>
    2ab2:	83 c0 01             	add    eax,0x1
    2ab5:	89 05 05 e8 00 00    	mov    DWORD PTR [rip+0xe805],eax        # 112c0 <pkt_counter>
    2abb:	8b 15 ff e7 00 00    	mov    edx,DWORD PTR [rip+0xe7ff]        # 112c0 <pkt_counter>
    2ac1:	8b 05 99 74 10 00    	mov    eax,DWORD PTR [rip+0x107499]        # 109f60 <clean_delay_pkts>
    2ac7:	39 c2                	cmp    edx,eax
    2ac9:	72 0a                	jb     2ad5 <pktmgr+0x72>
    2acb:	c7 05 eb e7 00 00 00 	mov    DWORD PTR [rip+0xe7eb],0x0        # 112c0 <pkt_counter>
    2ad2:	00 00 00 
    2ad5:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2ad9:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    2add:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2ae1:	0f b7 40 0c          	movzx  eax,WORD PTR [rax+0xc]
    2ae5:	0f b7 c0             	movzx  eax,ax
    2ae8:	3d 86 dd 00 00       	cmp    eax,0xdd86
    2aed:	74 46                	je     2b35 <pktmgr+0xd2>
    2aef:	3d 86 dd 00 00       	cmp    eax,0xdd86
    2af4:	7f 77                	jg     2b6d <pktmgr+0x10a>
    2af6:	3d 80 35 00 00       	cmp    eax,0x3580
    2afb:	74 23                	je     2b20 <pktmgr+0xbd>
    2afd:	3d 80 35 00 00       	cmp    eax,0x3580
    2b02:	7f 69                	jg     2b6d <pktmgr+0x10a>
    2b04:	3d 08 06 00 00       	cmp    eax,0x608
    2b09:	74 15                	je     2b20 <pktmgr+0xbd>
    2b0b:	3d 08 06 00 00       	cmp    eax,0x608
    2b10:	7f 5b                	jg     2b6d <pktmgr+0x10a>
    2b12:	83 f8 08             	cmp    eax,0x8
    2b15:	74 33                	je     2b4a <pktmgr+0xe7>
    2b17:	3d 90 00 00 00       	cmp    eax,0x90
    2b1c:	74 41                	je     2b5f <pktmgr+0xfc>
    2b1e:	eb 4d                	jmp    2b6d <pktmgr+0x10a>
    2b20:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2b24:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2b28:	48 89 d6             	mov    rsi,rdx
    2b2b:	48 89 c7             	mov    rdi,rax
    2b2e:	e8 86 00 00 00       	call   2bb9 <arpdecode>
    2b33:	eb 7d                	jmp    2bb2 <pktmgr+0x14f>
    2b35:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2b39:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2b3d:	48 89 d6             	mov    rsi,rdx
    2b40:	48 89 c7             	mov    rdi,rax
    2b43:	e8 2b 88 00 00       	call   b373 <ip6decode>
    2b48:	eb 68                	jmp    2bb2 <pktmgr+0x14f>
    2b4a:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2b4e:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2b52:	48 89 d6             	mov    rsi,rdx
    2b55:	48 89 c7             	mov    rdi,rax
    2b58:	e8 56 0b 00 00       	call   36b3 <ipv4pktmgr>
    2b5d:	eb 53                	jmp    2bb2 <pktmgr+0x14f>
    2b5f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2b63:	48 89 c7             	mov    rdi,rax
    2b66:	e8 42 03 00 00       	call   2ead <loopback_ctp_decode>
    2b6b:	eb 45                	jmp    2bb2 <pktmgr+0x14f>
    2b6d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2b71:	48 89 c7             	mov    rdi,rax
    2b74:	e8 f5 04 00 00       	call   306e <uc_mac_ntoa>
    2b79:	48 89 c3             	mov    rbx,rax
    2b7c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2b80:	48 83 c0 06          	add    rax,0x6
    2b84:	48 89 c7             	mov    rdi,rax
    2b87:	e8 e2 04 00 00       	call   306e <uc_mac_ntoa>
    2b8c:	41 b9 ff ff ff ff    	mov    r9d,0xffffffff
    2b92:	41 b8 ff ff ff ff    	mov    r8d,0xffffffff
    2b98:	48 89 d9             	mov    rcx,rbx
    2b9b:	48 89 c2             	mov    rdx,rax
    2b9e:	48 8d 35 f3 94 00 00 	lea    rsi,[rip+0x94f3]        # c098 <_IO_stdin_used+0x98>
    2ba5:	48 8d 3d 1e 95 00 00 	lea    rdi,[rip+0x951e]        # c0ca <_IO_stdin_used+0xca>
    2bac:	e8 46 68 00 00       	call   93f7 <lfprintf>
    2bb1:	90                   	nop
    2bb2:	90                   	nop
    2bb3:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    2bb7:	c9                   	leave  
    2bb8:	c3                   	ret    

0000000000002bb9 <arpdecode>:
    2bb9:	f3 0f 1e fa          	endbr64 
    2bbd:	55                   	push   rbp
    2bbe:	48 89 e5             	mov    rbp,rsp
    2bc1:	48 81 ec 50 03 00 00 	sub    rsp,0x350
    2bc8:	48 89 bd b8 fc ff ff 	mov    QWORD PTR [rbp-0x348],rdi
    2bcf:	48 89 b5 b0 fc ff ff 	mov    QWORD PTR [rbp-0x350],rsi
    2bd6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2bdd:	00 00 
    2bdf:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2be3:	31 c0                	xor    eax,eax
    2be5:	0f b6 05 78 73 10 00 	movzx  eax,BYTE PTR [rip+0x107378]        # 109f64 <packet_print>
    2bec:	84 c0                	test   al,al
    2bee:	74 18                	je     2c08 <arpdecode+0x4f>
    2bf0:	48 8d 35 f1 94 00 00 	lea    rsi,[rip+0x94f1]        # c0e8 <_IO_stdin_used+0xe8>
    2bf7:	48 8d 3d f2 94 00 00 	lea    rdi,[rip+0x94f2]        # c0f0 <_IO_stdin_used+0xf0>
    2bfe:	b8 00 00 00 00       	mov    eax,0x0
    2c03:	e8 d8 f8 ff ff       	call   24e0 <printf@plt>
    2c08:	48 8b 85 b8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x348]
    2c0f:	48 83 c0 0e          	add    rax,0xe
    2c13:	48 89 85 c8 fc ff ff 	mov    QWORD PTR [rbp-0x338],rax
    2c1a:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2c21:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    2c25:	0f b7 c0             	movzx  eax,ax
    2c28:	3d 00 18 00 00       	cmp    eax,0x1800
    2c2d:	74 35                	je     2c64 <arpdecode+0xab>
    2c2f:	3d 00 18 00 00       	cmp    eax,0x1800
    2c34:	0f 8f 1d 02 00 00    	jg     2e57 <arpdecode+0x29e>
    2c3a:	3d 00 02 00 00       	cmp    eax,0x200
    2c3f:	0f 84 eb 00 00 00    	je     2d30 <arpdecode+0x177>
    2c45:	3d 00 02 00 00       	cmp    eax,0x200
    2c4a:	0f 8f 07 02 00 00    	jg     2e57 <arpdecode+0x29e>
    2c50:	83 f8 02             	cmp    eax,0x2
    2c53:	0f 84 d7 00 00 00    	je     2d30 <arpdecode+0x177>
    2c59:	3d 00 01 00 00       	cmp    eax,0x100
    2c5e:	0f 85 f3 01 00 00    	jne    2e57 <arpdecode+0x29e>
    2c64:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2c6b:	48 83 c0 18          	add    rax,0x18
    2c6f:	48 89 c7             	mov    rdi,rax
    2c72:	e8 9d 04 00 00       	call   3114 <u8_ipv4_ntoa>
    2c77:	48 89 c1             	mov    rcx,rax
    2c7a:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2c7e:	ba 20 00 00 00       	mov    edx,0x20
    2c83:	48 89 ce             	mov    rsi,rcx
    2c86:	48 89 c7             	mov    rdi,rax
    2c89:	e8 e2 fb ff ff       	call   2870 <strncpy@plt>
    2c8e:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2c95:	48 83 c0 0e          	add    rax,0xe
    2c99:	48 89 c7             	mov    rdi,rax
    2c9c:	e8 73 04 00 00       	call   3114 <u8_ipv4_ntoa>
    2ca1:	48 89 c1             	mov    rcx,rax
    2ca4:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2ca8:	ba 20 00 00 00       	mov    edx,0x20
    2cad:	48 89 ce             	mov    rsi,rcx
    2cb0:	48 89 c7             	mov    rdi,rax
    2cb3:	e8 b8 fb ff ff       	call   2870 <strncpy@plt>
    2cb8:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2cbc:	ba 05 00 00 00       	mov    edx,0x5
    2cc1:	48 8d 35 2b 94 00 00 	lea    rsi,[rip+0x942b]        # c0f3 <_IO_stdin_used+0xf3>
    2cc8:	48 89 c7             	mov    rdi,rax
    2ccb:	e8 e0 f8 ff ff       	call   25b0 <strncmp@plt>
    2cd0:	85 c0                	test   eax,eax
    2cd2:	75 2c                	jne    2d00 <arpdecode+0x147>
    2cd4:	0f b6 05 89 72 10 00 	movzx  eax,BYTE PTR [rip+0x107289]        # 109f64 <packet_print>
    2cdb:	84 c0                	test   al,al
    2cdd:	0f 84 97 01 00 00    	je     2e7a <arpdecode+0x2c1>
    2ce3:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2ce7:	48 89 c6             	mov    rsi,rax
    2cea:	48 8d 3d 0f 94 00 00 	lea    rdi,[rip+0x940f]        # c100 <_IO_stdin_used+0x100>
    2cf1:	b8 00 00 00 00       	mov    eax,0x0
    2cf6:	e8 e5 f7 ff ff       	call   24e0 <printf@plt>
    2cfb:	e9 7a 01 00 00       	jmp    2e7a <arpdecode+0x2c1>
    2d00:	0f b6 05 5d 72 10 00 	movzx  eax,BYTE PTR [rip+0x10725d]        # 109f64 <packet_print>
    2d07:	84 c0                	test   al,al
    2d09:	0f 84 6b 01 00 00    	je     2e7a <arpdecode+0x2c1>
    2d0f:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2d13:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d17:	48 89 c6             	mov    rsi,rax
    2d1a:	48 8d 3d ff 93 00 00 	lea    rdi,[rip+0x93ff]        # c120 <_IO_stdin_used+0x120>
    2d21:	b8 00 00 00 00       	mov    eax,0x0
    2d26:	e8 b5 f7 ff ff       	call   24e0 <printf@plt>
    2d2b:	e9 4a 01 00 00       	jmp    2e7a <arpdecode+0x2c1>
    2d30:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2d37:	48 83 c0 08          	add    rax,0x8
    2d3b:	48 89 c7             	mov    rdi,rax
    2d3e:	e8 7d 02 00 00       	call   2fc0 <mac_ntoa>
    2d43:	48 89 c1             	mov    rcx,rax
    2d46:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2d4a:	ba 40 00 00 00       	mov    edx,0x40
    2d4f:	48 89 ce             	mov    rsi,rcx
    2d52:	48 89 c7             	mov    rdi,rax
    2d55:	e8 16 fb ff ff       	call   2870 <strncpy@plt>
    2d5a:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2d61:	48 83 c0 0e          	add    rax,0xe
    2d65:	48 89 c7             	mov    rdi,rax
    2d68:	e8 a7 03 00 00       	call   3114 <u8_ipv4_ntoa>
    2d6d:	48 89 c1             	mov    rcx,rax
    2d70:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d74:	ba 20 00 00 00       	mov    edx,0x20
    2d79:	48 89 ce             	mov    rsi,rcx
    2d7c:	48 89 c7             	mov    rdi,rax
    2d7f:	e8 ec fa ff ff       	call   2870 <strncpy@plt>
    2d84:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2d88:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d8c:	48 89 d6             	mov    rsi,rdx
    2d8f:	48 89 c7             	mov    rdi,rax
    2d92:	e8 a3 50 00 00       	call   7e3a <entry_exists>
    2d97:	83 f8 ff             	cmp    eax,0xffffffff
    2d9a:	74 15                	je     2db1 <arpdecode+0x1f8>
    2d9c:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2da0:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2da4:	48 89 d6             	mov    rsi,rdx
    2da7:	48 89 c7             	mov    rdi,rax
    2daa:	e8 38 4f 00 00       	call   7ce7 <compare_entries>
    2daf:	eb 7d                	jmp    2e2e <arpdecode+0x275>
    2db1:	0f b6 05 69 71 10 00 	movzx  eax,BYTE PTR [rip+0x107169]        # 109f21 <use_sqlite>
    2db8:	84 c0                	test   al,al
    2dba:	74 5f                	je     2e1b <arpdecode+0x262>
    2dbc:	c7 85 f4 fc ff ff 00 	mov    DWORD PTR [rbp-0x30c],0x0
    2dc3:	00 00 00 
    2dc6:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    2dca:	48 8d 85 d0 fc ff ff 	lea    rax,[rbp-0x330]
    2dd1:	48 89 d6             	mov    rsi,rdx
    2dd4:	48 89 c7             	mov    rdi,rax
    2dd7:	e8 44 fa ff ff       	call   2820 <strcpy@plt>
    2ddc:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2de0:	48 8d 95 d0 fc ff ff 	lea    rdx,[rbp-0x330]
    2de7:	48 83 c2 10          	add    rdx,0x10
    2deb:	48 89 c6             	mov    rsi,rax
    2dee:	48 89 d7             	mov    rdi,rdx
    2df1:	e8 2a fa ff ff       	call   2820 <strcpy@plt>
    2df6:	48 8d 95 d0 fc ff ff 	lea    rdx,[rbp-0x330]
    2dfd:	48 8d 85 c0 fc ff ff 	lea    rax,[rbp-0x340]
    2e04:	48 89 d1             	mov    rcx,rdx
    2e07:	48 8d 15 39 55 00 00 	lea    rdx,[rip+0x5539]        # 8347 <update_db>
    2e0e:	be 00 00 00 00       	mov    esi,0x0
    2e13:	48 89 c7             	mov    rdi,rax
    2e16:	e8 25 f8 ff ff       	call   2640 <pthread_create@plt>
    2e1b:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2e1f:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2e23:	48 89 d6             	mov    rsi,rdx
    2e26:	48 89 c7             	mov    rdi,rax
    2e29:	e8 98 4f 00 00       	call   7dc6 <add_entry>
    2e2e:	0f b6 05 2f 71 10 00 	movzx  eax,BYTE PTR [rip+0x10712f]        # 109f64 <packet_print>
    2e35:	84 c0                	test   al,al
    2e37:	74 44                	je     2e7d <arpdecode+0x2c4>
    2e39:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2e3d:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2e41:	48 89 c6             	mov    rsi,rax
    2e44:	48 8d 3d fd 92 00 00 	lea    rdi,[rip+0x92fd]        # c148 <_IO_stdin_used+0x148>
    2e4b:	b8 00 00 00 00       	mov    eax,0x0
    2e50:	e8 8b f6 ff ff       	call   24e0 <printf@plt>
    2e55:	eb 26                	jmp    2e7d <arpdecode+0x2c4>
    2e57:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2e5e:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    2e62:	0f b7 c0             	movzx  eax,ax
    2e65:	89 c6                	mov    esi,eax
    2e67:	48 8d 3d f9 92 00 00 	lea    rdi,[rip+0x92f9]        # c167 <_IO_stdin_used+0x167>
    2e6e:	b8 00 00 00 00       	mov    eax,0x0
    2e73:	e8 68 f6 ff ff       	call   24e0 <printf@plt>
    2e78:	eb 04                	jmp    2e7e <arpdecode+0x2c5>
    2e7a:	90                   	nop
    2e7b:	eb 01                	jmp    2e7e <arpdecode+0x2c5>
    2e7d:	90                   	nop
    2e7e:	48 8d 35 fa 92 00 00 	lea    rsi,[rip+0x92fa]        # c17f <_IO_stdin_used+0x17f>
    2e85:	48 8d 3d 64 92 00 00 	lea    rdi,[rip+0x9264]        # c0f0 <_IO_stdin_used+0xf0>
    2e8c:	b8 00 00 00 00       	mov    eax,0x0
    2e91:	e8 4a f6 ff ff       	call   24e0 <printf@plt>
    2e96:	90                   	nop
    2e97:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2e9b:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    2ea2:	00 00 
    2ea4:	74 05                	je     2eab <arpdecode+0x2f2>
    2ea6:	e8 35 f9 ff ff       	call   27e0 <__stack_chk_fail@plt>
    2eab:	c9                   	leave  
    2eac:	c3                   	ret    

0000000000002ead <loopback_ctp_decode>:
    2ead:	f3 0f 1e fa          	endbr64 
    2eb1:	55                   	push   rbp
    2eb2:	48 89 e5             	mov    rbp,rsp
    2eb5:	48 83 ec 60          	sub    rsp,0x60
    2eb9:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    2ebd:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2ec4:	00 00 
    2ec6:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2eca:	31 c0                	xor    eax,eax
    2ecc:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    2ed0:	48 83 c0 0e          	add    rax,0xe
    2ed4:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    2ed8:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    2edc:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    2ee0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    2ee4:	48 83 c0 06          	add    rax,0x6
    2ee8:	48 89 c7             	mov    rdi,rax
    2eeb:	e8 7e 01 00 00       	call   306e <uc_mac_ntoa>
    2ef0:	48 89 c1             	mov    rcx,rax
    2ef3:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    2ef7:	ba 18 00 00 00       	mov    edx,0x18
    2efc:	48 89 ce             	mov    rsi,rcx
    2eff:	48 89 c7             	mov    rdi,rax
    2f02:	e8 69 f9 ff ff       	call   2870 <strncpy@plt>
    2f07:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    2f0b:	48 89 c7             	mov    rdi,rax
    2f0e:	e8 5b 01 00 00       	call   306e <uc_mac_ntoa>
    2f13:	48 89 c1             	mov    rcx,rax
    2f16:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    2f1a:	ba 18 00 00 00       	mov    edx,0x18
    2f1f:	48 89 ce             	mov    rsi,rcx
    2f22:	48 89 c7             	mov    rdi,rax
    2f25:	e8 46 f9 ff ff       	call   2870 <strncpy@plt>
    2f2a:	0f b6 05 33 70 10 00 	movzx  eax,BYTE PTR [rip+0x107033]        # 109f64 <packet_print>
    2f31:	84 c0                	test   al,al
    2f33:	74 1c                	je     2f51 <loopback_ctp_decode+0xa4>
    2f35:	48 8d 55 e0          	lea    rdx,[rbp-0x20]
    2f39:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    2f3d:	48 89 c6             	mov    rsi,rax
    2f40:	48 8d 3d 3d 92 00 00 	lea    rdi,[rip+0x923d]        # c184 <_IO_stdin_used+0x184>
    2f47:	b8 00 00 00 00       	mov    eax,0x0
    2f4c:	e8 8f f5 ff ff       	call   24e0 <printf@plt>
    2f51:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    2f55:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    2f59:	0f b7 c0             	movzx  eax,ax
    2f5c:	83 f8 01             	cmp    eax,0x1
    2f5f:	75 19                	jne    2f7a <loopback_ctp_decode+0xcd>
    2f61:	0f b6 05 fc 6f 10 00 	movzx  eax,BYTE PTR [rip+0x106ffc]        # 109f64 <packet_print>
    2f68:	84 c0                	test   al,al
    2f6a:	74 39                	je     2fa5 <loopback_ctp_decode+0xf8>
    2f6c:	48 8d 3d 1f 92 00 00 	lea    rdi,[rip+0x921f]        # c192 <_IO_stdin_used+0x192>
    2f73:	e8 c8 f5 ff ff       	call   2540 <puts@plt>
    2f78:	eb 2b                	jmp    2fa5 <loopback_ctp_decode+0xf8>
    2f7a:	0f b6 05 e3 6f 10 00 	movzx  eax,BYTE PTR [rip+0x106fe3]        # 109f64 <packet_print>
    2f81:	84 c0                	test   al,al
    2f83:	74 23                	je     2fa8 <loopback_ctp_decode+0xfb>
    2f85:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    2f89:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    2f8d:	0f b7 c0             	movzx  eax,ax
    2f90:	89 c6                	mov    esi,eax
    2f92:	48 8d 3d 01 92 00 00 	lea    rdi,[rip+0x9201]        # c19a <_IO_stdin_used+0x19a>
    2f99:	b8 00 00 00 00       	mov    eax,0x0
    2f9e:	e8 3d f5 ff ff       	call   24e0 <printf@plt>
    2fa3:	eb 03                	jmp    2fa8 <loopback_ctp_decode+0xfb>
    2fa5:	90                   	nop
    2fa6:	eb 01                	jmp    2fa9 <loopback_ctp_decode+0xfc>
    2fa8:	90                   	nop
    2fa9:	90                   	nop
    2faa:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fae:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    2fb5:	00 00 
    2fb7:	74 05                	je     2fbe <loopback_ctp_decode+0x111>
    2fb9:	e8 22 f8 ff ff       	call   27e0 <__stack_chk_fail@plt>
    2fbe:	c9                   	leave  
    2fbf:	c3                   	ret    

0000000000002fc0 <mac_ntoa>:
    2fc0:	f3 0f 1e fa          	endbr64 
    2fc4:	55                   	push   rbp
    2fc5:	48 89 e5             	mov    rbp,rsp
    2fc8:	48 83 ec 20          	sub    rsp,0x20
    2fcc:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    2fd0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2fd4:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2fd8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fdc:	48 83 c0 05          	add    rax,0x5
    2fe0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fe3:	0f b6 f0             	movzx  esi,al
    2fe6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fea:	48 83 c0 04          	add    rax,0x4
    2fee:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2ff1:	0f b6 c8             	movzx  ecx,al
    2ff4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2ff8:	48 83 c0 03          	add    rax,0x3
    2ffc:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fff:	0f b6 d0             	movzx  edx,al
    3002:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3006:	48 83 c0 02          	add    rax,0x2
    300a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    300d:	44 0f b6 c8          	movzx  r9d,al
    3011:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3015:	48 83 c0 01          	add    rax,0x1
    3019:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    301c:	44 0f b6 c0          	movzx  r8d,al
    3020:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3024:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3027:	0f b6 c0             	movzx  eax,al
    302a:	64 48 8b 3c 25 00 00 	mov    rdi,QWORD PTR fs:0x0
    3031:	00 00 
    3033:	48 81 c7 80 fb ff ff 	add    rdi,0xfffffffffffffb80
    303a:	48 83 ec 08          	sub    rsp,0x8
    303e:	56                   	push   rsi
    303f:	51                   	push   rcx
    3040:	52                   	push   rdx
    3041:	89 c1                	mov    ecx,eax
    3043:	48 8d 15 6e 91 00 00 	lea    rdx,[rip+0x916e]        # c1b8 <_IO_stdin_used+0x1b8>
    304a:	be 80 00 00 00       	mov    esi,0x80
    304f:	b8 00 00 00 00       	mov    eax,0x0
    3054:	e8 a7 f4 ff ff       	call   2500 <snprintf@plt>
    3059:	48 83 c4 20          	add    rsp,0x20
    305d:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3064:	00 00 
    3066:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    306c:	c9                   	leave  
    306d:	c3                   	ret    

000000000000306e <uc_mac_ntoa>:
    306e:	f3 0f 1e fa          	endbr64 
    3072:	55                   	push   rbp
    3073:	48 89 e5             	mov    rbp,rsp
    3076:	48 83 ec 10          	sub    rsp,0x10
    307a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    307e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3082:	48 83 c0 05          	add    rax,0x5
    3086:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3089:	0f b6 f0             	movzx  esi,al
    308c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3090:	48 83 c0 04          	add    rax,0x4
    3094:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3097:	0f b6 c8             	movzx  ecx,al
    309a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    309e:	48 83 c0 03          	add    rax,0x3
    30a2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    30a5:	0f b6 d0             	movzx  edx,al
    30a8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    30ac:	48 83 c0 02          	add    rax,0x2
    30b0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    30b3:	44 0f b6 c8          	movzx  r9d,al
    30b7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    30bb:	48 83 c0 01          	add    rax,0x1
    30bf:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    30c2:	44 0f b6 c0          	movzx  r8d,al
    30c6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    30ca:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    30cd:	0f b6 c0             	movzx  eax,al
    30d0:	64 48 8b 3c 25 00 00 	mov    rdi,QWORD PTR fs:0x0
    30d7:	00 00 
    30d9:	48 81 c7 80 fb ff ff 	add    rdi,0xfffffffffffffb80
    30e0:	48 83 ec 08          	sub    rsp,0x8
    30e4:	56                   	push   rsi
    30e5:	51                   	push   rcx
    30e6:	52                   	push   rdx
    30e7:	89 c1                	mov    ecx,eax
    30e9:	48 8d 15 c8 90 00 00 	lea    rdx,[rip+0x90c8]        # c1b8 <_IO_stdin_used+0x1b8>
    30f0:	be 80 00 00 00       	mov    esi,0x80
    30f5:	b8 00 00 00 00       	mov    eax,0x0
    30fa:	e8 01 f4 ff ff       	call   2500 <snprintf@plt>
    30ff:	48 83 c4 20          	add    rsp,0x20
    3103:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    310a:	00 00 
    310c:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    3112:	c9                   	leave  
    3113:	c3                   	ret    

0000000000003114 <u8_ipv4_ntoa>:
    3114:	f3 0f 1e fa          	endbr64 
    3118:	55                   	push   rbp
    3119:	48 89 e5             	mov    rbp,rsp
    311c:	48 83 ec 20          	sub    rsp,0x20
    3120:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    3124:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    3128:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    312c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3130:	48 83 c0 03          	add    rax,0x3
    3134:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3137:	0f b6 d0             	movzx  edx,al
    313a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    313e:	48 83 c0 02          	add    rax,0x2
    3142:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3145:	44 0f b6 c0          	movzx  r8d,al
    3149:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    314d:	48 83 c0 01          	add    rax,0x1
    3151:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3154:	0f b6 f0             	movzx  esi,al
    3157:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    315b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    315e:	0f b6 c0             	movzx  eax,al
    3161:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    3168:	00 00 
    316a:	48 8d b9 80 fb ff ff 	lea    rdi,[rcx-0x480]
    3171:	48 83 ec 08          	sub    rsp,0x8
    3175:	52                   	push   rdx
    3176:	45 89 c1             	mov    r9d,r8d
    3179:	41 89 f0             	mov    r8d,esi
    317c:	89 c1                	mov    ecx,eax
    317e:	48 8d 15 51 90 00 00 	lea    rdx,[rip+0x9051]        # c1d6 <_IO_stdin_used+0x1d6>
    3185:	be 80 00 00 00       	mov    esi,0x80
    318a:	b8 00 00 00 00       	mov    eax,0x0
    318f:	e8 6c f3 ff ff       	call   2500 <snprintf@plt>
    3194:	48 83 c4 10          	add    rsp,0x10
    3198:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    319f:	00 00 
    31a1:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    31a7:	c9                   	leave  
    31a8:	c3                   	ret    

00000000000031a9 <ipv4_ntoa>:
    31a9:	f3 0f 1e fa          	endbr64 
    31ad:	55                   	push   rbp
    31ae:	48 89 e5             	mov    rbp,rsp
    31b1:	48 83 ec 20          	sub    rsp,0x20
    31b5:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    31b8:	48 8d 45 ec          	lea    rax,[rbp-0x14]
    31bc:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    31c0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    31c4:	48 83 c0 03          	add    rax,0x3
    31c8:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31cb:	0f b6 d0             	movzx  edx,al
    31ce:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    31d2:	48 83 c0 02          	add    rax,0x2
    31d6:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31d9:	44 0f b6 c0          	movzx  r8d,al
    31dd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    31e1:	48 83 c0 01          	add    rax,0x1
    31e5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31e8:	0f b6 f0             	movzx  esi,al
    31eb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    31ef:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31f2:	0f b6 c0             	movzx  eax,al
    31f5:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    31fc:	00 00 
    31fe:	48 8d b9 80 fb ff ff 	lea    rdi,[rcx-0x480]
    3205:	48 83 ec 08          	sub    rsp,0x8
    3209:	52                   	push   rdx
    320a:	45 89 c1             	mov    r9d,r8d
    320d:	41 89 f0             	mov    r8d,esi
    3210:	89 c1                	mov    ecx,eax
    3212:	48 8d 15 bd 8f 00 00 	lea    rdx,[rip+0x8fbd]        # c1d6 <_IO_stdin_used+0x1d6>
    3219:	be 80 00 00 00       	mov    esi,0x80
    321e:	b8 00 00 00 00       	mov    eax,0x0
    3223:	e8 d8 f2 ff ff       	call   2500 <snprintf@plt>
    3228:	48 83 c4 10          	add    rsp,0x10
    322c:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3233:	00 00 
    3235:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    323b:	c9                   	leave  
    323c:	c3                   	ret    

000000000000323d <inet6_ntoa>:
    323d:	f3 0f 1e fa          	endbr64 
    3241:	55                   	push   rbp
    3242:	48 89 e5             	mov    rbp,rsp
    3245:	41 57                	push   r15
    3247:	41 56                	push   r14
    3249:	41 55                	push   r13
    324b:	41 54                	push   r12
    324d:	53                   	push   rbx
    324e:	48 83 ec 38          	sub    rsp,0x38
    3252:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    3256:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    325d:	00 00 
    325f:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    3263:	31 c0                	xor    eax,eax
    3265:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    326c:	00 00 
    326e:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    3274:	ba 80 00 00 00       	mov    edx,0x80
    3279:	be 00 00 00 00       	mov    esi,0x0
    327e:	48 89 c7             	mov    rdi,rax
    3281:	e8 6a f2 ff ff       	call   24f0 <memset@plt>
    3286:	48 c7 45 c0 00 00 00 	mov    QWORD PTR [rbp-0x40],0x0
    328d:	00 
    328e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3292:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    3296:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    329a:	48 83 c0 0f          	add    rax,0xf
    329e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32a1:	0f b6 c8             	movzx  ecx,al
    32a4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32a8:	48 83 c0 0e          	add    rax,0xe
    32ac:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32af:	0f b6 f8             	movzx  edi,al
    32b2:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32b6:	48 83 c0 0d          	add    rax,0xd
    32ba:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32bd:	0f b6 c0             	movzx  eax,al
    32c0:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
    32c3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32c7:	48 83 c0 0c          	add    rax,0xc
    32cb:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32ce:	0f b6 d8             	movzx  ebx,al
    32d1:	89 5d b0             	mov    DWORD PTR [rbp-0x50],ebx
    32d4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32d8:	48 83 c0 0b          	add    rax,0xb
    32dc:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32df:	44 0f b6 f8          	movzx  r15d,al
    32e3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32e7:	48 83 c0 0a          	add    rax,0xa
    32eb:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32ee:	44 0f b6 f0          	movzx  r14d,al
    32f2:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32f6:	48 83 c0 09          	add    rax,0x9
    32fa:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32fd:	44 0f b6 e8          	movzx  r13d,al
    3301:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3305:	48 83 c0 08          	add    rax,0x8
    3309:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    330c:	44 0f b6 e0          	movzx  r12d,al
    3310:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3314:	48 83 c0 07          	add    rax,0x7
    3318:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    331b:	0f b6 d8             	movzx  ebx,al
    331e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3322:	48 83 c0 06          	add    rax,0x6
    3326:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3329:	44 0f b6 d8          	movzx  r11d,al
    332d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3331:	48 83 c0 05          	add    rax,0x5
    3335:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3338:	44 0f b6 d0          	movzx  r10d,al
    333c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3340:	48 83 c0 04          	add    rax,0x4
    3344:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3347:	44 0f b6 c8          	movzx  r9d,al
    334b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    334f:	48 83 c0 03          	add    rax,0x3
    3353:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3356:	44 0f b6 c0          	movzx  r8d,al
    335a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    335e:	48 83 c0 02          	add    rax,0x2
    3362:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3365:	0f b6 d0             	movzx  edx,al
    3368:	89 55 ac             	mov    DWORD PTR [rbp-0x54],edx
    336b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    336f:	48 83 c0 01          	add    rax,0x1
    3373:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3376:	0f b6 f0             	movzx  esi,al
    3379:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    337d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3380:	0f b6 d0             	movzx  edx,al
    3383:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    338a:	00 00 
    338c:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    3392:	48 83 ec 08          	sub    rsp,0x8
    3396:	51                   	push   rcx
    3397:	57                   	push   rdi
    3398:	8b 4d b4             	mov    ecx,DWORD PTR [rbp-0x4c]
    339b:	51                   	push   rcx
    339c:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
    339f:	51                   	push   rcx
    33a0:	41 57                	push   r15
    33a2:	41 56                	push   r14
    33a4:	41 55                	push   r13
    33a6:	41 54                	push   r12
    33a8:	53                   	push   rbx
    33a9:	41 53                	push   r11
    33ab:	41 52                	push   r10
    33ad:	41 51                	push   r9
    33af:	41 50                	push   r8
    33b1:	44 8b 4d ac          	mov    r9d,DWORD PTR [rbp-0x54]
    33b5:	41 89 f0             	mov    r8d,esi
    33b8:	89 d1                	mov    ecx,edx
    33ba:	48 8d 15 27 8e 00 00 	lea    rdx,[rip+0x8e27]        # c1e8 <_IO_stdin_used+0x1e8>
    33c1:	be 80 00 00 00       	mov    esi,0x80
    33c6:	48 89 c7             	mov    rdi,rax
    33c9:	b8 00 00 00 00       	mov    eax,0x0
    33ce:	e8 2d f1 ff ff       	call   2500 <snprintf@plt>
    33d3:	48 83 c4 70          	add    rsp,0x70
    33d7:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    33de:	00 00 
    33e0:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    33e6:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    33ea:	64 48 2b 34 25 28 00 	sub    rsi,QWORD PTR fs:0x28
    33f1:	00 00 
    33f3:	74 05                	je     33fa <inet6_ntoa+0x1bd>
    33f5:	e8 e6 f3 ff ff       	call   27e0 <__stack_chk_fail@plt>
    33fa:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    33fe:	5b                   	pop    rbx
    33ff:	41 5c                	pop    r12
    3401:	41 5d                	pop    r13
    3403:	41 5e                	pop    r14
    3405:	41 5f                	pop    r15
    3407:	5d                   	pop    rbp
    3408:	c3                   	ret    

0000000000003409 <get_formated_time>:
    3409:	f3 0f 1e fa          	endbr64 
    340d:	55                   	push   rbp
    340e:	48 89 e5             	mov    rbp,rsp
    3411:	53                   	push   rbx
    3412:	48 83 ec 58          	sub    rsp,0x58
    3416:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    341d:	00 00 
    341f:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    3423:	31 c0                	xor    eax,eax
    3425:	bf ff 00 00 00       	mov    edi,0xff
    342a:	e8 91 f1 ff ff       	call   25c0 <malloc@plt>
    342f:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    3433:	bf 00 00 00 00       	mov    edi,0x0
    3438:	e8 f3 f4 ff ff       	call   2930 <time@plt>
    343d:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    3441:	48 8d 45 a0          	lea    rax,[rbp-0x60]
    3445:	48 89 c7             	mov    rdi,rax
    3448:	e8 a3 f4 ff ff       	call   28f0 <localtime@plt>
    344d:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    3450:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    3454:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
    3458:	48 89 5d b8          	mov    QWORD PTR [rbp-0x48],rbx
    345c:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    3460:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    3464:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    3468:	48 89 5d c8          	mov    QWORD PTR [rbp-0x38],rbx
    346c:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    3470:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    3474:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    3478:	48 89 5d d8          	mov    QWORD PTR [rbp-0x28],rbx
    347c:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    3480:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    3484:	8b 7d b0             	mov    edi,DWORD PTR [rbp-0x50]
    3487:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
    348a:	44 8b 4d b8          	mov    r9d,DWORD PTR [rbp-0x48]
    348e:	44 8b 45 bc          	mov    r8d,DWORD PTR [rbp-0x44]
    3492:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    3495:	8d 48 01             	lea    ecx,[rax+0x1]
    3498:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    349b:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    34a1:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    34a5:	57                   	push   rdi
    34a6:	56                   	push   rsi
    34a7:	48 8d 35 82 8d 00 00 	lea    rsi,[rip+0x8d82]        # c230 <_IO_stdin_used+0x230>
    34ae:	48 89 c7             	mov    rdi,rax
    34b1:	b8 00 00 00 00       	mov    eax,0x0
    34b6:	e8 f5 f1 ff ff       	call   26b0 <sprintf@plt>
    34bb:	48 83 c4 10          	add    rsp,0x10
    34bf:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    34c3:	48 8b 5d e8          	mov    rbx,QWORD PTR [rbp-0x18]
    34c7:	64 48 2b 1c 25 28 00 	sub    rbx,QWORD PTR fs:0x28
    34ce:	00 00 
    34d0:	74 05                	je     34d7 <get_formated_time+0xce>
    34d2:	e8 09 f3 ff ff       	call   27e0 <__stack_chk_fail@plt>
    34d7:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    34db:	c9                   	leave  
    34dc:	c3                   	ret    

00000000000034dd <cb_get_formatted_time>:
    34dd:	f3 0f 1e fa          	endbr64 
    34e1:	55                   	push   rbp
    34e2:	48 89 e5             	mov    rbp,rsp
    34e5:	53                   	push   rbx
    34e6:	48 83 ec 68          	sub    rsp,0x68
    34ea:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    34ee:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    34f5:	00 00 
    34f7:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    34fb:	31 c0                	xor    eax,eax
    34fd:	bf 00 00 00 00       	mov    edi,0x0
    3502:	e8 29 f4 ff ff       	call   2930 <time@plt>
    3507:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    350b:	48 8d 45 a8          	lea    rax,[rbp-0x58]
    350f:	48 89 c7             	mov    rdi,rax
    3512:	e8 d9 f3 ff ff       	call   28f0 <localtime@plt>
    3517:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    351a:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    351e:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
    3522:	48 89 5d b8          	mov    QWORD PTR [rbp-0x48],rbx
    3526:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    352a:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    352e:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    3532:	48 89 5d c8          	mov    QWORD PTR [rbp-0x38],rbx
    3536:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    353a:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    353e:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    3542:	48 89 5d d8          	mov    QWORD PTR [rbp-0x28],rbx
    3546:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    354a:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    354e:	8b 7d b0             	mov    edi,DWORD PTR [rbp-0x50]
    3551:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
    3554:	44 8b 4d b8          	mov    r9d,DWORD PTR [rbp-0x48]
    3558:	44 8b 45 bc          	mov    r8d,DWORD PTR [rbp-0x44]
    355c:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    355f:	8d 48 01             	lea    ecx,[rax+0x1]
    3562:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    3565:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    356b:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    356f:	57                   	push   rdi
    3570:	56                   	push   rsi
    3571:	48 8d 35 b8 8c 00 00 	lea    rsi,[rip+0x8cb8]        # c230 <_IO_stdin_used+0x230>
    3578:	48 89 c7             	mov    rdi,rax
    357b:	b8 00 00 00 00       	mov    eax,0x0
    3580:	e8 2b f1 ff ff       	call   26b0 <sprintf@plt>
    3585:	48 83 c4 10          	add    rsp,0x10
    3589:	90                   	nop
    358a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    358e:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    3595:	00 00 
    3597:	74 05                	je     359e <cb_get_formatted_time+0xc1>
    3599:	e8 42 f2 ff ff       	call   27e0 <__stack_chk_fail@plt>
    359e:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    35a2:	c9                   	leave  
    35a3:	c3                   	ret    

00000000000035a4 <strloc>:
    35a4:	f3 0f 1e fa          	endbr64 
    35a8:	55                   	push   rbp
    35a9:	48 89 e5             	mov    rbp,rsp
    35ac:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    35b0:	89 f0                	mov    eax,esi
    35b2:	88 45 e4             	mov    BYTE PTR [rbp-0x1c],al
    35b5:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    35bc:	eb 1e                	jmp    35dc <strloc+0x38>
    35be:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    35c1:	48 63 d0             	movsxd rdx,eax
    35c4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    35c8:	48 01 d0             	add    rax,rdx
    35cb:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    35ce:	38 45 e4             	cmp    BYTE PTR [rbp-0x1c],al
    35d1:	75 05                	jne    35d8 <strloc+0x34>
    35d3:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    35d6:	eb 1d                	jmp    35f5 <strloc+0x51>
    35d8:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    35dc:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    35df:	48 63 d0             	movsxd rdx,eax
    35e2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    35e6:	48 01 d0             	add    rax,rdx
    35e9:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    35ec:	84 c0                	test   al,al
    35ee:	75 ce                	jne    35be <strloc+0x1a>
    35f0:	b8 ff ff ff ff       	mov    eax,0xffffffff
    35f5:	5d                   	pop    rbp
    35f6:	c3                   	ret    

00000000000035f7 <fail>:
    35f7:	f3 0f 1e fa          	endbr64 
    35fb:	55                   	push   rbp
    35fc:	48 89 e5             	mov    rbp,rsp
    35ff:	48 83 ec 10          	sub    rsp,0x10
    3603:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    3607:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    360b:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    360f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3613:	48 89 c6             	mov    rsi,rax
    3616:	48 8d 3d 2f 8c 00 00 	lea    rdi,[rip+0x8c2f]        # c24c <_IO_stdin_used+0x24c>
    361d:	b8 00 00 00 00       	mov    eax,0x0
    3622:	e8 b9 ee ff ff       	call   24e0 <printf@plt>
    3627:	90                   	nop
    3628:	c9                   	leave  
    3629:	c3                   	ret    

000000000000362a <char_is_printable>:
    362a:	f3 0f 1e fa          	endbr64 
    362e:	55                   	push   rbp
    362f:	48 89 e5             	mov    rbp,rsp
    3632:	89 f8                	mov    eax,edi
    3634:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
    3637:	80 7d fc 1f          	cmp    BYTE PTR [rbp-0x4],0x1f
    363b:	7f 07                	jg     3644 <char_is_printable+0x1a>
    363d:	b8 00 00 00 00       	mov    eax,0x0
    3642:	eb 05                	jmp    3649 <char_is_printable+0x1f>
    3644:	b8 01 00 00 00       	mov    eax,0x1
    3649:	5d                   	pop    rbp
    364a:	c3                   	ret    

000000000000364b <test_string_arr_print>:
    364b:	f3 0f 1e fa          	endbr64 
    364f:	55                   	push   rbp
    3650:	48 89 e5             	mov    rbp,rsp
    3653:	53                   	push   rbx
    3654:	48 83 ec 28          	sub    rsp,0x28
    3658:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    365c:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    3663:	eb 2c                	jmp    3691 <test_string_arr_print+0x46>
    3665:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    3668:	48 63 d0             	movsxd rdx,eax
    366b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    366f:	48 01 d0             	add    rax,rdx
    3672:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3675:	0f be c0             	movsx  eax,al
    3678:	89 c7                	mov    edi,eax
    367a:	e8 ab ff ff ff       	call   362a <char_is_printable>
    367f:	83 f0 01             	xor    eax,0x1
    3682:	84 c0                	test   al,al
    3684:	74 07                	je     368d <test_string_arr_print+0x42>
    3686:	b8 00 00 00 00       	mov    eax,0x0
    368b:	eb 20                	jmp    36ad <test_string_arr_print+0x62>
    368d:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    3691:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    3694:	48 63 d8             	movsxd rbx,eax
    3697:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    369b:	48 89 c7             	mov    rdi,rax
    369e:	e8 cd ef ff ff       	call   2670 <strlen@plt>
    36a3:	48 39 c3             	cmp    rbx,rax
    36a6:	72 bd                	jb     3665 <test_string_arr_print+0x1a>
    36a8:	b8 01 00 00 00       	mov    eax,0x1
    36ad:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    36b1:	c9                   	leave  
    36b2:	c3                   	ret    

00000000000036b3 <ipv4pktmgr>:
    36b3:	f3 0f 1e fa          	endbr64 
    36b7:	55                   	push   rbp
    36b8:	48 89 e5             	mov    rbp,rsp
    36bb:	48 81 ec e0 04 00 00 	sub    rsp,0x4e0
    36c2:	48 89 bd 28 fb ff ff 	mov    QWORD PTR [rbp-0x4d8],rdi
    36c9:	48 89 b5 20 fb ff ff 	mov    QWORD PTR [rbp-0x4e0],rsi
    36d0:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    36d7:	00 00 
    36d9:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    36dd:	31 c0                	xor    eax,eax
    36df:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    36e6:	48 83 c0 0e          	add    rax,0xe
    36ea:	48 89 85 48 fb ff ff 	mov    QWORD PTR [rbp-0x4b8],rax
    36f1:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    36f8:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    36fb:	89 c7                	mov    edi,eax
    36fd:	e8 de ef ff ff       	call   26e0 <ntohl@plt>
    3702:	89 85 6c fb ff ff    	mov    DWORD PTR [rbp-0x494],eax
    3708:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    370f:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    3712:	89 c7                	mov    edi,eax
    3714:	e8 c7 ef ff ff       	call   26e0 <ntohl@plt>
    3719:	89 85 68 fb ff ff    	mov    DWORD PTR [rbp-0x498],eax
    371f:	8b 95 68 fb ff ff    	mov    edx,DWORD PTR [rbp-0x498]
    3725:	8b 05 9d 68 10 00    	mov    eax,DWORD PTR [rip+0x10689d]        # 109fc8 <homenetmask>
    372b:	21 d0                	and    eax,edx
    372d:	89 85 3c fb ff ff    	mov    DWORD PTR [rbp-0x4c4],eax
    3733:	8b 95 6c fb ff ff    	mov    edx,DWORD PTR [rbp-0x494]
    3739:	8b 05 89 68 10 00    	mov    eax,DWORD PTR [rip+0x106889]        # 109fc8 <homenetmask>
    373f:	21 d0                	and    eax,edx
    3741:	89 85 40 fb ff ff    	mov    DWORD PTR [rbp-0x4c0],eax
    3747:	8b 05 77 68 10 00    	mov    eax,DWORD PTR [rip+0x106877]        # 109fc4 <homenet>
    374d:	39 85 3c fb ff ff    	cmp    DWORD PTR [rbp-0x4c4],eax
    3753:	75 0c                	jne    3761 <ipv4pktmgr+0xae>
    3755:	c7 85 70 fb ff ff 45 	mov    DWORD PTR [rbp-0x490],0x45
    375c:	00 00 00 
    375f:	eb 24                	jmp    3785 <ipv4pktmgr+0xd2>
    3761:	8b 05 5d 68 10 00    	mov    eax,DWORD PTR [rip+0x10685d]        # 109fc4 <homenet>
    3767:	39 85 40 fb ff ff    	cmp    DWORD PTR [rbp-0x4c0],eax
    376d:	75 0c                	jne    377b <ipv4pktmgr+0xc8>
    376f:	c7 85 70 fb ff ff 46 	mov    DWORD PTR [rbp-0x490],0x46
    3776:	00 00 00 
    3779:	eb 0a                	jmp    3785 <ipv4pktmgr+0xd2>
    377b:	c7 85 70 fb ff ff 47 	mov    DWORD PTR [rbp-0x490],0x47
    3782:	00 00 00 
    3785:	48 8b 85 20 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4e0]
    378c:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    378f:	89 85 80 fb ff ff    	mov    DWORD PTR [rbp-0x480],eax
    3795:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    379c:	48 89 85 a0 fb ff ff 	mov    QWORD PTR [rbp-0x460],rax
    37a3:	48 8b 85 20 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4e0]
    37aa:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    37ad:	48 8b 95 28 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4d8]
    37b4:	48 83 c2 0e          	add    rdx,0xe
    37b8:	0f b6 12             	movzx  edx,BYTE PTR [rdx]
    37bb:	83 e2 0f             	and    edx,0xf
    37be:	0f b6 d2             	movzx  edx,dl
    37c1:	c1 e2 02             	shl    edx,0x2
    37c4:	29 d0                	sub    eax,edx
    37c6:	83 e8 0e             	sub    eax,0xe
    37c9:	89 85 44 fb ff ff    	mov    DWORD PTR [rbp-0x4bc],eax
    37cf:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    37d6:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    37d9:	89 c7                	mov    edi,eax
    37db:	e8 c9 f9 ff ff       	call   31a9 <ipv4_ntoa>
    37e0:	48 89 c1             	mov    rcx,rax
    37e3:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    37ea:	ba 10 00 00 00       	mov    edx,0x10
    37ef:	48 89 ce             	mov    rsi,rcx
    37f2:	48 89 c7             	mov    rdi,rax
    37f5:	e8 76 f0 ff ff       	call   2870 <strncpy@plt>
    37fa:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    3801:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    3804:	89 c7                	mov    edi,eax
    3806:	e8 9e f9 ff ff       	call   31a9 <ipv4_ntoa>
    380b:	48 89 c1             	mov    rcx,rax
    380e:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    3815:	ba 10 00 00 00       	mov    edx,0x10
    381a:	48 89 ce             	mov    rsi,rcx
    381d:	48 89 c7             	mov    rdi,rax
    3820:	e8 4b f0 ff ff       	call   2870 <strncpy@plt>
    3825:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    382c:	48 89 c7             	mov    rdi,rax
    382f:	e8 82 42 00 00       	call   7ab6 <init_member>
    3834:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    383b:	48 89 c7             	mov    rdi,rax
    383e:	e8 73 42 00 00       	call   7ab6 <init_member>
    3843:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    384a:	48 89 c7             	mov    rdi,rax
    384d:	e8 bf 20 00 00       	call   5911 <is_blocked_ipv4>
    3852:	84 c0                	test   al,al
    3854:	74 44                	je     389a <ipv4pktmgr+0x1e7>
    3856:	b8 00 00 00 00       	mov    eax,0x0
    385b:	e8 a9 fb ff ff       	call   3409 <get_formated_time>
    3860:	48 89 c6             	mov    rsi,rax
    3863:	48 8d 95 e0 fb ff ff 	lea    rdx,[rbp-0x420]
    386a:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    3871:	48 89 d1             	mov    rcx,rdx
    3874:	48 89 f2             	mov    rdx,rsi
    3877:	48 8d 35 da 89 00 00 	lea    rsi,[rip+0x89da]        # c258 <_IO_stdin_used+0x258>
    387e:	48 89 c7             	mov    rdi,rax
    3881:	b8 00 00 00 00       	mov    eax,0x0
    3886:	e8 25 ee ff ff       	call   26b0 <sprintf@plt>
    388b:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    3892:	48 89 c7             	mov    rdi,rax
    3895:	e8 cf 5c 00 00       	call   9569 <saprintf>
    389a:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    38a1:	48 89 c7             	mov    rdi,rax
    38a4:	e8 68 20 00 00       	call   5911 <is_blocked_ipv4>
    38a9:	84 c0                	test   al,al
    38ab:	74 44                	je     38f1 <ipv4pktmgr+0x23e>
    38ad:	b8 00 00 00 00       	mov    eax,0x0
    38b2:	e8 52 fb ff ff       	call   3409 <get_formated_time>
    38b7:	48 89 c6             	mov    rsi,rax
    38ba:	48 8d 95 d0 fb ff ff 	lea    rdx,[rbp-0x430]
    38c1:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    38c8:	48 89 d1             	mov    rcx,rdx
    38cb:	48 89 f2             	mov    rdx,rsi
    38ce:	48 8d 35 b3 89 00 00 	lea    rsi,[rip+0x89b3]        # c288 <_IO_stdin_used+0x288>
    38d5:	48 89 c7             	mov    rdi,rax
    38d8:	b8 00 00 00 00       	mov    eax,0x0
    38dd:	e8 ce ed ff ff       	call   26b0 <sprintf@plt>
    38e2:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    38e9:	48 89 c7             	mov    rdi,rax
    38ec:	e8 78 5c 00 00       	call   9569 <saprintf>
    38f1:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    38f8:	48 89 85 58 fb ff ff 	mov    QWORD PTR [rbp-0x4a8],rax
    38ff:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    3906:	48 89 85 60 fb ff ff 	mov    QWORD PTR [rbp-0x4a0],rax
    390d:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    3914:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    3918:	66 83 f8 20          	cmp    ax,0x20
    391c:	74 11                	je     392f <ipv4pktmgr+0x27c>
    391e:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    3925:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    3929:	66 3d 02 01          	cmp    ax,0x102
    392d:	75 66                	jne    3995 <ipv4pktmgr+0x2e2>
    392f:	48 8d 35 7a 89 00 00 	lea    rsi,[rip+0x897a]        # c2b0 <_IO_stdin_used+0x2b0>
    3936:	48 8d 3d 78 89 00 00 	lea    rdi,[rip+0x8978]        # c2b5 <_IO_stdin_used+0x2b5>
    393d:	b8 00 00 00 00       	mov    eax,0x0
    3942:	e8 99 eb ff ff       	call   24e0 <printf@plt>
    3947:	0f b6 05 16 66 10 00 	movzx  eax,BYTE PTR [rip+0x106616]        # 109f64 <packet_print>
    394e:	84 c0                	test   al,al
    3950:	74 1a                	je     396c <ipv4pktmgr+0x2b9>
    3952:	48 8d 35 6a 89 00 00 	lea    rsi,[rip+0x896a]        # c2c3 <_IO_stdin_used+0x2c3>
    3959:	48 8d 3d 68 89 00 00 	lea    rdi,[rip+0x8968]        # c2c8 <_IO_stdin_used+0x2c8>
    3960:	b8 00 00 00 00       	mov    eax,0x0
    3965:	e8 76 eb ff ff       	call   24e0 <printf@plt>
    396a:	eb 29                	jmp    3995 <ipv4pktmgr+0x2e2>
    396c:	48 8d 95 e0 fb ff ff 	lea    rdx,[rbp-0x420]
    3973:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    397a:	48 8d 0d 42 89 00 00 	lea    rcx,[rip+0x8942]        # c2c3 <_IO_stdin_used+0x2c3>
    3981:	48 89 c6             	mov    rsi,rax
    3984:	48 8d 3d 40 89 00 00 	lea    rdi,[rip+0x8940]        # c2cb <_IO_stdin_used+0x2cb>
    398b:	b8 00 00 00 00       	mov    eax,0x0
    3990:	e8 4b eb ff ff       	call   24e0 <printf@plt>
    3995:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    399c:	0f b6 40 09          	movzx  eax,BYTE PTR [rax+0x9]
    39a0:	0f b6 c0             	movzx  eax,al
    39a3:	83 f8 11             	cmp    eax,0x11
    39a6:	0f 84 b8 00 00 00    	je     3a64 <ipv4pktmgr+0x3b1>
    39ac:	83 f8 11             	cmp    eax,0x11
    39af:	0f 8f db 00 00 00    	jg     3a90 <ipv4pktmgr+0x3dd>
    39b5:	83 f8 06             	cmp    eax,0x6
    39b8:	74 7e                	je     3a38 <ipv4pktmgr+0x385>
    39ba:	83 f8 06             	cmp    eax,0x6
    39bd:	0f 8f cd 00 00 00    	jg     3a90 <ipv4pktmgr+0x3dd>
    39c3:	83 f8 01             	cmp    eax,0x1
    39c6:	74 0a                	je     39d2 <ipv4pktmgr+0x31f>
    39c8:	83 f8 02             	cmp    eax,0x2
    39cb:	74 2d                	je     39fa <ipv4pktmgr+0x347>
    39cd:	e9 be 00 00 00       	jmp    3a90 <ipv4pktmgr+0x3dd>
    39d2:	c7 85 7c fb ff ff 80 	mov    DWORD PTR [rbp-0x484],0x80
    39d9:	00 00 00 
    39dc:	48 8d 95 50 fb ff ff 	lea    rdx,[rbp-0x4b0]
    39e3:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    39ea:	48 89 d6             	mov    rsi,rdx
    39ed:	48 89 c7             	mov    rdi,rax
    39f0:	e8 40 02 00 00       	call   3c35 <ip4_icmp_decode>
    39f5:	e9 c7 00 00 00       	jmp    3ac1 <ipv4pktmgr+0x40e>
    39fa:	c7 85 7c fb ff ff ff 	mov    DWORD PTR [rbp-0x484],0xffffffff
    3a01:	ff ff ff 
    3a04:	8b 05 36 d6 00 00    	mov    eax,DWORD PTR [rip+0xd636]        # 11040 <total_conversations>
    3a0a:	83 e8 01             	sub    eax,0x1
    3a0d:	89 05 2d d6 00 00    	mov    DWORD PTR [rip+0xd62d],eax        # 11040 <total_conversations>
    3a13:	48 8b 95 60 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4a0]
    3a1a:	48 8b 8d 58 fb ff ff 	mov    rcx,QWORD PTR [rbp-0x4a8]
    3a21:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    3a28:	48 89 ce             	mov    rsi,rcx
    3a2b:	48 89 c7             	mov    rdi,rax
    3a2e:	e8 57 14 00 00       	call   4e8a <ip4_igmp_decode>
    3a33:	e9 89 00 00 00       	jmp    3ac1 <ipv4pktmgr+0x40e>
    3a38:	c7 85 7c fb ff ff 7e 	mov    DWORD PTR [rbp-0x484],0x7e
    3a3f:	00 00 00 
    3a42:	48 8b 95 20 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4e0]
    3a49:	48 8d 8d 50 fb ff ff 	lea    rcx,[rbp-0x4b0]
    3a50:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    3a57:	48 89 ce             	mov    rsi,rcx
    3a5a:	48 89 c7             	mov    rdi,rax
    3a5d:	e8 17 0a 00 00       	call   4479 <ip4_tcp_decode>
    3a62:	eb 5d                	jmp    3ac1 <ipv4pktmgr+0x40e>
    3a64:	c7 85 7c fb ff ff 7f 	mov    DWORD PTR [rbp-0x484],0x7f
    3a6b:	00 00 00 
    3a6e:	48 8b 95 20 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4e0]
    3a75:	48 8d 8d 50 fb ff ff 	lea    rcx,[rbp-0x4b0]
    3a7c:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    3a83:	48 89 ce             	mov    rsi,rcx
    3a86:	48 89 c7             	mov    rdi,rax
    3a89:	e8 a7 12 00 00       	call   4d35 <ip4_udp_decode>
    3a8e:	eb 31                	jmp    3ac1 <ipv4pktmgr+0x40e>
    3a90:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    3a97:	0f b6 40 09          	movzx  eax,BYTE PTR [rax+0x9]
    3a9b:	0f b6 c8             	movzx  ecx,al
    3a9e:	48 8b 95 60 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4a0]
    3aa5:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    3aac:	48 89 c6             	mov    rsi,rax
    3aaf:	48 8d 3d 22 88 00 00 	lea    rdi,[rip+0x8822]        # c2d8 <_IO_stdin_used+0x2d8>
    3ab6:	b8 00 00 00 00       	mov    eax,0x0
    3abb:	e8 20 ea ff ff       	call   24e0 <printf@plt>
    3ac0:	90                   	nop
    3ac1:	90                   	nop
    3ac2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3ac6:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    3acd:	00 00 
    3acf:	74 05                	je     3ad6 <ipv4pktmgr+0x423>
    3ad1:	e8 0a ed ff ff       	call   27e0 <__stack_chk_fail@plt>
    3ad6:	c9                   	leave  
    3ad7:	c3                   	ret    

0000000000003ad8 <ip6_icmp_decode>:
    3ad8:	f3 0f 1e fa          	endbr64 
    3adc:	55                   	push   rbp
    3add:	48 89 e5             	mov    rbp,rsp
    3ae0:	48 83 c4 80          	add    rsp,0xffffffffffffff80
    3ae4:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    3ae8:	48 89 75 90          	mov    QWORD PTR [rbp-0x70],rsi
    3aec:	48 89 55 88          	mov    QWORD PTR [rbp-0x78],rdx
    3af0:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3af7:	00 00 
    3af9:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3afd:	31 c0                	xor    eax,eax
    3aff:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    3b03:	48 83 c0 36          	add    rax,0x36
    3b07:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    3b0b:	0f b6 05 52 64 10 00 	movzx  eax,BYTE PTR [rip+0x106452]        # 109f64 <packet_print>
    3b12:	84 c0                	test   al,al
    3b14:	0f 84 04 01 00 00    	je     3c1e <ip6_icmp_decode+0x146>
    3b1a:	48 8d 35 df 87 00 00 	lea    rsi,[rip+0x87df]        # c300 <_IO_stdin_used+0x300>
    3b21:	48 8d 3d de 87 00 00 	lea    rdi,[rip+0x87de]        # c306 <_IO_stdin_used+0x306>
    3b28:	b8 00 00 00 00       	mov    eax,0x0
    3b2d:	e8 ae e9 ff ff       	call   24e0 <printf@plt>
    3b32:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
    3b36:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    3b3a:	48 89 c6             	mov    rsi,rax
    3b3d:	48 8d 3d c5 87 00 00 	lea    rdi,[rip+0x87c5]        # c309 <_IO_stdin_used+0x309>
    3b44:	b8 00 00 00 00       	mov    eax,0x0
    3b49:	e8 92 e9 ff ff       	call   24e0 <printf@plt>
    3b4e:	48 8d 3d c3 87 00 00 	lea    rdi,[rip+0x87c3]        # c318 <_IO_stdin_used+0x318>
    3b55:	b8 00 00 00 00       	mov    eax,0x0
    3b5a:	e8 81 e9 ff ff       	call   24e0 <printf@plt>
    3b5f:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3b63:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3b66:	0f b6 c0             	movzx  eax,al
    3b69:	3d 8f 00 00 00       	cmp    eax,0x8f
    3b6e:	74 68                	je     3bd8 <ip6_icmp_decode+0x100>
    3b70:	3d 8f 00 00 00       	cmp    eax,0x8f
    3b75:	0f 8f 8b 00 00 00    	jg     3c06 <ip6_icmp_decode+0x12e>
    3b7b:	3d 87 00 00 00       	cmp    eax,0x87
    3b80:	74 77                	je     3bf9 <ip6_icmp_decode+0x121>
    3b82:	3d 87 00 00 00       	cmp    eax,0x87
    3b87:	7f 7d                	jg     3c06 <ip6_icmp_decode+0x12e>
    3b89:	3d 82 00 00 00       	cmp    eax,0x82
    3b8e:	74 56                	je     3be6 <ip6_icmp_decode+0x10e>
    3b90:	3d 85 00 00 00       	cmp    eax,0x85
    3b95:	75 6f                	jne    3c06 <ip6_icmp_decode+0x12e>
    3b97:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3b9b:	48 83 c0 0a          	add    rax,0xa
    3b9f:	48 89 c7             	mov    rdi,rax
    3ba2:	e8 19 f4 ff ff       	call   2fc0 <mac_ntoa>
    3ba7:	48 89 c1             	mov    rcx,rax
    3baa:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    3bae:	ba 40 00 00 00       	mov    edx,0x40
    3bb3:	48 89 ce             	mov    rsi,rcx
    3bb6:	48 89 c7             	mov    rdi,rax
    3bb9:	e8 b2 ec ff ff       	call   2870 <strncpy@plt>
    3bbe:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    3bc2:	48 89 c6             	mov    rsi,rax
    3bc5:	48 8d 3d 55 87 00 00 	lea    rdi,[rip+0x8755]        # c321 <_IO_stdin_used+0x321>
    3bcc:	b8 00 00 00 00       	mov    eax,0x0
    3bd1:	e8 0a e9 ff ff       	call   24e0 <printf@plt>
    3bd6:	eb 2e                	jmp    3c06 <ip6_icmp_decode+0x12e>
    3bd8:	48 8d 3d 61 87 00 00 	lea    rdi,[rip+0x8761]        # c340 <_IO_stdin_used+0x340>
    3bdf:	e8 5c e9 ff ff       	call   2540 <puts@plt>
    3be4:	eb 20                	jmp    3c06 <ip6_icmp_decode+0x12e>
    3be6:	48 8d 3d 78 87 00 00 	lea    rdi,[rip+0x8778]        # c365 <_IO_stdin_used+0x365>
    3bed:	b8 00 00 00 00       	mov    eax,0x0
    3bf2:	e8 e9 e8 ff ff       	call   24e0 <printf@plt>
    3bf7:	eb 0d                	jmp    3c06 <ip6_icmp_decode+0x12e>
    3bf9:	48 8d 3d 7f 87 00 00 	lea    rdi,[rip+0x877f]        # c37f <_IO_stdin_used+0x37f>
    3c00:	e8 3b e9 ff ff       	call   2540 <puts@plt>
    3c05:	90                   	nop
    3c06:	48 8d 35 88 87 00 00 	lea    rsi,[rip+0x8788]        # c395 <_IO_stdin_used+0x395>
    3c0d:	48 8d 3d f2 86 00 00 	lea    rdi,[rip+0x86f2]        # c306 <_IO_stdin_used+0x306>
    3c14:	b8 00 00 00 00       	mov    eax,0x0
    3c19:	e8 c2 e8 ff ff       	call   24e0 <printf@plt>
    3c1e:	90                   	nop
    3c1f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3c23:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    3c2a:	00 00 
    3c2c:	74 05                	je     3c33 <ip6_icmp_decode+0x15b>
    3c2e:	e8 ad eb ff ff       	call   27e0 <__stack_chk_fail@plt>
    3c33:	c9                   	leave  
    3c34:	c3                   	ret    

0000000000003c35 <ip4_icmp_decode>:
    3c35:	f3 0f 1e fa          	endbr64 
    3c39:	55                   	push   rbp
    3c3a:	48 89 e5             	mov    rbp,rsp
    3c3d:	48 81 ec 20 01 00 00 	sub    rsp,0x120
    3c44:	48 89 bd e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rdi
    3c4b:	48 89 b5 e0 fe ff ff 	mov    QWORD PTR [rbp-0x120],rsi
    3c52:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3c59:	00 00 
    3c5b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3c5f:	31 c0                	xor    eax,eax
    3c61:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c68:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3c6c:	ba 5e 00 00 00       	mov    edx,0x5e
    3c71:	be 01 00 00 00       	mov    esi,0x1
    3c76:	48 89 c7             	mov    rdi,rax
    3c79:	e8 0b 13 00 00       	call   4f89 <add_ip_addr_or_inc_counter>
    3c7e:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c85:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    3c89:	ba 5e 00 00 00       	mov    edx,0x5e
    3c8e:	be 00 00 00 00       	mov    esi,0x0
    3c93:	48 89 c7             	mov    rdi,rax
    3c96:	e8 ee 12 00 00       	call   4f89 <add_ip_addr_or_inc_counter>
    3c9b:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3ca2:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3ca6:	48 89 85 08 ff ff ff 	mov    QWORD PTR [rbp-0xf8],rax
    3cad:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3cb4:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    3cb8:	48 89 85 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],rax
    3cbf:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    3cc6:	48 83 c0 22          	add    rax,0x22
    3cca:	48 89 85 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rax
    3cd1:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    3cd8:	48 8d 50 22          	lea    rdx,[rax+0x22]
    3cdc:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3ce3:	48 89 10             	mov    QWORD PTR [rax],rdx
    3ce6:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3ced:	48 8b 95 18 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xe8]
    3cf4:	48 89 50 60          	mov    QWORD PTR [rax+0x60],rdx
    3cf8:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3cff:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    3d02:	89 85 fc fe ff ff    	mov    DWORD PTR [rbp-0x104],eax
    3d08:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3d0f:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    3d12:	8d 50 d6             	lea    edx,[rax-0x2a]
    3d15:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3d1c:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    3d1f:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    3d26:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3d29:	3c 08                	cmp    al,0x8
    3d2b:	0f 85 55 01 00 00    	jne    3e86 <ip4_icmp_decode+0x251>
    3d31:	8b 05 51 d3 00 00    	mov    eax,DWORD PTR [rip+0xd351]        # 11088 <strict_nmap_host_alive_check>
    3d37:	83 f8 01             	cmp    eax,0x1
    3d3a:	0f 85 46 01 00 00    	jne    3e86 <ip4_icmp_decode+0x251>
    3d40:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3d47:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3d4b:	48 89 c7             	mov    rdi,rax
    3d4e:	e8 f1 3c 00 00       	call   7a44 <member_exists>
    3d53:	89 85 00 ff ff ff    	mov    DWORD PTR [rbp-0x100],eax
    3d59:	83 bd 00 ff ff ff ff 	cmp    DWORD PTR [rbp-0x100],0xffffffff
    3d60:	0f 84 83 00 00 00    	je     3de9 <ip4_icmp_decode+0x1b4>
    3d66:	8b 85 00 ff ff ff    	mov    eax,DWORD PTR [rbp-0x100]
    3d6c:	48 63 d0             	movsxd rdx,eax
    3d6f:	48 89 d0             	mov    rax,rdx
    3d72:	48 c1 e0 02          	shl    rax,0x2
    3d76:	48 01 d0             	add    rax,rdx
    3d79:	48 c1 e0 03          	shl    rax,0x3
    3d7d:	48 01 d0             	add    rax,rdx
    3d80:	48 c1 e0 04          	shl    rax,0x4
    3d84:	48 8d 15 95 f7 0e 00 	lea    rdx,[rip+0xef795]        # f3520 <watchlist>
    3d8b:	48 01 d0             	add    rax,rdx
    3d8e:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
    3d95:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d9c:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3d9f:	85 c0                	test   eax,eax
    3da1:	0f 85 a8 02 00 00    	jne    404f <ip4_icmp_decode+0x41a>
    3da7:	bf 00 00 00 00       	mov    edi,0x0
    3dac:	e8 7f eb ff ff       	call   2930 <time@plt>
    3db1:	48 89 c2             	mov    rdx,rax
    3db4:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3dbb:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    3dbf:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3dc6:	c7 40 30 01 00 00 00 	mov    DWORD PTR [rax+0x30],0x1
    3dcd:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3dd4:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3dd7:	8d 50 01             	lea    edx,[rax+0x1]
    3dda:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3de1:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    3de4:	e9 66 02 00 00       	jmp    404f <ip4_icmp_decode+0x41a>
    3de9:	8b 05 29 d2 00 00    	mov    eax,DWORD PTR [rip+0xd229]        # 11018 <watchlist_num>
    3def:	83 c0 01             	add    eax,0x1
    3df2:	89 05 20 d2 00 00    	mov    DWORD PTR [rip+0xd220],eax        # 11018 <watchlist_num>
    3df8:	8b 05 1a d2 00 00    	mov    eax,DWORD PTR [rip+0xd21a]        # 11018 <watchlist_num>
    3dfe:	48 63 d0             	movsxd rdx,eax
    3e01:	48 89 d0             	mov    rax,rdx
    3e04:	48 c1 e0 02          	shl    rax,0x2
    3e08:	48 01 d0             	add    rax,rdx
    3e0b:	48 c1 e0 03          	shl    rax,0x3
    3e0f:	48 01 d0             	add    rax,rdx
    3e12:	48 c1 e0 04          	shl    rax,0x4
    3e16:	48 8d 15 03 f7 0e 00 	lea    rdx,[rip+0xef703]        # f3520 <watchlist>
    3e1d:	48 01 d0             	add    rax,rdx
    3e20:	48 89 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rax
    3e27:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3e2e:	48 8d 50 08          	lea    rdx,[rax+0x8]
    3e32:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3e39:	48 89 c6             	mov    rsi,rax
    3e3c:	48 89 d7             	mov    rdi,rdx
    3e3f:	e8 dc e9 ff ff       	call   2820 <strcpy@plt>
    3e44:	bf 00 00 00 00       	mov    edi,0x0
    3e49:	e8 e2 ea ff ff       	call   2930 <time@plt>
    3e4e:	48 89 c2             	mov    rdx,rax
    3e51:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3e58:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    3e5c:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3e63:	c7 40 30 01 00 00 00 	mov    DWORD PTR [rax+0x30],0x1
    3e6a:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3e71:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3e74:	8d 50 01             	lea    edx,[rax+0x1]
    3e77:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3e7e:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    3e81:	e9 c9 01 00 00       	jmp    404f <ip4_icmp_decode+0x41a>
    3e86:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    3e8d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3e90:	3c 0d                	cmp    al,0xd
    3e92:	0f 85 ba 01 00 00    	jne    4052 <ip4_icmp_decode+0x41d>
    3e98:	8b 05 e6 d1 00 00    	mov    eax,DWORD PTR [rip+0xd1e6]        # 11084 <strict_icmp_timestamp_req>
    3e9e:	83 f8 01             	cmp    eax,0x1
    3ea1:	74 0f                	je     3eb2 <ip4_icmp_decode+0x27d>
    3ea3:	8b 05 df d1 00 00    	mov    eax,DWORD PTR [rip+0xd1df]        # 11088 <strict_nmap_host_alive_check>
    3ea9:	83 f8 01             	cmp    eax,0x1
    3eac:	0f 85 a0 01 00 00    	jne    4052 <ip4_icmp_decode+0x41d>
    3eb2:	8b 05 cc d1 00 00    	mov    eax,DWORD PTR [rip+0xd1cc]        # 11084 <strict_icmp_timestamp_req>
    3eb8:	85 c0                	test   eax,eax
    3eba:	74 22                	je     3ede <ip4_icmp_decode+0x2a9>
    3ebc:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    3ec3:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3eca:	48 89 c6             	mov    rsi,rax
    3ecd:	48 8d 3d cc 84 00 00 	lea    rdi,[rip+0x84cc]        # c3a0 <_IO_stdin_used+0x3a0>
    3ed4:	b8 00 00 00 00       	mov    eax,0x0
    3ed9:	e8 02 e6 ff ff       	call   24e0 <printf@plt>
    3ede:	8b 05 a4 d1 00 00    	mov    eax,DWORD PTR [rip+0xd1a4]        # 11088 <strict_nmap_host_alive_check>
    3ee4:	85 c0                	test   eax,eax
    3ee6:	0f 84 66 01 00 00    	je     4052 <ip4_icmp_decode+0x41d>
    3eec:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3ef3:	48 89 c7             	mov    rdi,rax
    3ef6:	e8 49 3b 00 00       	call   7a44 <member_exists>
    3efb:	89 85 04 ff ff ff    	mov    DWORD PTR [rbp-0xfc],eax
    3f01:	83 bd 04 ff ff ff ff 	cmp    DWORD PTR [rbp-0xfc],0xffffffff
    3f08:	0f 84 44 01 00 00    	je     4052 <ip4_icmp_decode+0x41d>
    3f0e:	8b 85 04 ff ff ff    	mov    eax,DWORD PTR [rbp-0xfc]
    3f14:	48 63 d0             	movsxd rdx,eax
    3f17:	48 89 d0             	mov    rax,rdx
    3f1a:	48 c1 e0 02          	shl    rax,0x2
    3f1e:	48 01 d0             	add    rax,rdx
    3f21:	48 c1 e0 03          	shl    rax,0x3
    3f25:	48 01 d0             	add    rax,rdx
    3f28:	48 c1 e0 04          	shl    rax,0x4
    3f2c:	48 8d 15 ed f5 0e 00 	lea    rdx,[rip+0xef5ed]        # f3520 <watchlist>
    3f33:	48 01 d0             	add    rax,rdx
    3f36:	48 89 85 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rax
    3f3d:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3f44:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3f47:	83 f8 03             	cmp    eax,0x3
    3f4a:	0f 85 05 01 00 00    	jne    4055 <ip4_icmp_decode+0x420>
    3f50:	bf 00 00 00 00       	mov    edi,0x0
    3f55:	e8 d6 e9 ff ff       	call   2930 <time@plt>
    3f5a:	48 89 c2             	mov    rdx,rax
    3f5d:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3f64:	48 89 50 48          	mov    QWORD PTR [rax+0x48],rdx
    3f68:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3f6f:	48 8b 50 48          	mov    rdx,QWORD PTR [rax+0x48]
    3f73:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3f7a:	48 8b 48 28          	mov    rcx,QWORD PTR [rax+0x28]
    3f7e:	48 89 d0             	mov    rax,rdx
    3f81:	48 29 c8             	sub    rax,rcx
    3f84:	48 3d e2 b4 04 00    	cmp    rax,0x4b4e2
    3f8a:	0f 87 c2 00 00 00    	ja     4052 <ip4_icmp_decode+0x41d>
    3f90:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    3f97:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3f9e:	48 89 c6             	mov    rsi,rax
    3fa1:	48 8d 3d 40 84 00 00 	lea    rdi,[rip+0x8440]        # c3e8 <_IO_stdin_used+0x3e8>
    3fa8:	b8 00 00 00 00       	mov    eax,0x0
    3fad:	e8 2e e5 ff ff       	call   24e0 <printf@plt>
    3fb2:	48 8b 05 77 d0 00 00 	mov    rax,QWORD PTR [rip+0xd077]        # 11030 <def_log_file>
    3fb9:	48 8d 35 92 84 00 00 	lea    rsi,[rip+0x8492]        # c452 <_IO_stdin_used+0x452>
    3fc0:	48 89 c7             	mov    rdi,rax
    3fc3:	e8 08 e6 ff ff       	call   25d0 <fopen@plt>
    3fc8:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    3fcf:	b8 00 00 00 00       	mov    eax,0x0
    3fd4:	e8 30 f4 ff ff       	call   3409 <get_formated_time>
    3fd9:	48 89 c6             	mov    rsi,rax
    3fdc:	48 8b 8d 10 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xf0]
    3fe3:	48 8b 95 08 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf8]
    3fea:	48 8d 85 40 ff ff ff 	lea    rax,[rbp-0xc0]
    3ff1:	49 89 f0             	mov    r8,rsi
    3ff4:	48 8d 35 5d 84 00 00 	lea    rsi,[rip+0x845d]        # c458 <_IO_stdin_used+0x458>
    3ffb:	48 89 c7             	mov    rdi,rax
    3ffe:	b8 00 00 00 00       	mov    eax,0x0
    4003:	e8 a8 e6 ff ff       	call   26b0 <sprintf@plt>
    4008:	48 8b 95 38 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xc8]
    400f:	48 8d 85 40 ff ff ff 	lea    rax,[rbp-0xc0]
    4016:	48 89 d6             	mov    rsi,rdx
    4019:	48 89 c7             	mov    rdi,rax
    401c:	e8 0f e7 ff ff       	call   2730 <fputs@plt>
    4021:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
    4028:	48 89 c7             	mov    rdi,rax
    402b:	e8 30 e8 ff ff       	call   2860 <fclose@plt>
    4030:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    4037:	48 83 c0 28          	add    rax,0x28
    403b:	ba 28 00 00 00       	mov    edx,0x28
    4040:	be 00 00 00 00       	mov    esi,0x0
    4045:	48 89 c7             	mov    rdi,rax
    4048:	e8 a3 e4 ff ff       	call   24f0 <memset@plt>
    404d:	eb 07                	jmp    4056 <ip4_icmp_decode+0x421>
    404f:	90                   	nop
    4050:	eb 04                	jmp    4056 <ip4_icmp_decode+0x421>
    4052:	90                   	nop
    4053:	eb 01                	jmp    4056 <ip4_icmp_decode+0x421>
    4055:	90                   	nop
    4056:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    405d:	c7 40 2c 80 00 00 00 	mov    DWORD PTR [rax+0x2c],0x80
    4064:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    406b:	48 89 c7             	mov    rdi,rax
    406e:	e8 5c 24 00 00       	call   64cf <rulemgr>
    4073:	0f b6 05 ea 5e 10 00 	movzx  eax,BYTE PTR [rip+0x105eea]        # 109f64 <packet_print>
    407a:	84 c0                	test   al,al
    407c:	0f 84 e0 03 00 00    	je     4462 <ip4_icmp_decode+0x82d>
    4082:	48 8d 35 77 82 00 00 	lea    rsi,[rip+0x8277]        # c300 <_IO_stdin_used+0x300>
    4089:	48 8d 3d 76 82 00 00 	lea    rdi,[rip+0x8276]        # c306 <_IO_stdin_used+0x306>
    4090:	b8 00 00 00 00       	mov    eax,0x0
    4095:	e8 46 e4 ff ff       	call   24e0 <printf@plt>
    409a:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    40a1:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    40a8:	48 89 c6             	mov    rsi,rax
    40ab:	48 8d 3d 16 84 00 00 	lea    rdi,[rip+0x8416]        # c4c8 <_IO_stdin_used+0x4c8>
    40b2:	b8 00 00 00 00       	mov    eax,0x0
    40b7:	e8 24 e4 ff ff       	call   24e0 <printf@plt>
    40bc:	48 8d 3d 14 84 00 00 	lea    rdi,[rip+0x8414]        # c4d7 <_IO_stdin_used+0x4d7>
    40c3:	b8 00 00 00 00       	mov    eax,0x0
    40c8:	e8 13 e4 ff ff       	call   24e0 <printf@plt>
    40cd:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    40d4:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    40d7:	0f b6 c0             	movzx  eax,al
    40da:	83 f8 0e             	cmp    eax,0xe
    40dd:	0f 87 46 03 00 00    	ja     4429 <ip4_icmp_decode+0x7f4>
    40e3:	89 c0                	mov    eax,eax
    40e5:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    40ec:	00 
    40ed:	48 8d 05 ec 87 00 00 	lea    rax,[rip+0x87ec]        # c8e0 <_IO_stdin_used+0x8e0>
    40f4:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    40f7:	48 98                	cdqe   
    40f9:	48 8d 15 e0 87 00 00 	lea    rdx,[rip+0x87e0]        # c8e0 <_IO_stdin_used+0x8e0>
    4100:	48 01 d0             	add    rax,rdx
    4103:	3e ff e0             	notrack jmp rax
    4106:	48 8d 3d d1 83 00 00 	lea    rdi,[rip+0x83d1]        # c4de <_IO_stdin_used+0x4de>
    410d:	e8 2e e4 ff ff       	call   2540 <puts@plt>
    4112:	e9 33 03 00 00       	jmp    444a <ip4_icmp_decode+0x815>
    4117:	48 8d 3d cc 83 00 00 	lea    rdi,[rip+0x83cc]        # c4ea <_IO_stdin_used+0x4ea>
    411e:	b8 00 00 00 00       	mov    eax,0x0
    4123:	e8 b8 e3 ff ff       	call   24e0 <printf@plt>
    4128:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    412f:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4133:	0f b6 c0             	movzx  eax,al
    4136:	83 f8 0f             	cmp    eax,0xf
    4139:	0f 87 1e 01 00 00    	ja     425d <ip4_icmp_decode+0x628>
    413f:	89 c0                	mov    eax,eax
    4141:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    4148:	00 
    4149:	48 8d 05 cc 87 00 00 	lea    rax,[rip+0x87cc]        # c91c <_IO_stdin_used+0x91c>
    4150:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    4153:	48 98                	cdqe   
    4155:	48 8d 15 c0 87 00 00 	lea    rdx,[rip+0x87c0]        # c91c <_IO_stdin_used+0x91c>
    415c:	48 01 d0             	add    rax,rdx
    415f:	3e ff e0             	notrack jmp rax
    4162:	48 8d 3d 9b 83 00 00 	lea    rdi,[rip+0x839b]        # c504 <_IO_stdin_used+0x504>
    4169:	e8 d2 e3 ff ff       	call   2540 <puts@plt>
    416e:	e9 0c 01 00 00       	jmp    427f <ip4_icmp_decode+0x64a>
    4173:	48 8d 3d a1 83 00 00 	lea    rdi,[rip+0x83a1]        # c51b <_IO_stdin_used+0x51b>
    417a:	e8 c1 e3 ff ff       	call   2540 <puts@plt>
    417f:	e9 fb 00 00 00       	jmp    427f <ip4_icmp_decode+0x64a>
    4184:	48 8d 3d a4 83 00 00 	lea    rdi,[rip+0x83a4]        # c52f <_IO_stdin_used+0x52f>
    418b:	e8 b0 e3 ff ff       	call   2540 <puts@plt>
    4190:	e9 ea 00 00 00       	jmp    427f <ip4_icmp_decode+0x64a>
    4195:	48 8d 3d ab 83 00 00 	lea    rdi,[rip+0x83ab]        # c547 <_IO_stdin_used+0x547>
    419c:	e8 9f e3 ff ff       	call   2540 <puts@plt>
    41a1:	e9 d9 00 00 00       	jmp    427f <ip4_icmp_decode+0x64a>
    41a6:	48 8d 3d ae 83 00 00 	lea    rdi,[rip+0x83ae]        # c55b <_IO_stdin_used+0x55b>
    41ad:	e8 8e e3 ff ff       	call   2540 <puts@plt>
    41b2:	e9 c8 00 00 00       	jmp    427f <ip4_icmp_decode+0x64a>
    41b7:	48 8d 3d b5 83 00 00 	lea    rdi,[rip+0x83b5]        # c573 <_IO_stdin_used+0x573>
    41be:	e8 7d e3 ff ff       	call   2540 <puts@plt>
    41c3:	e9 b7 00 00 00       	jmp    427f <ip4_icmp_decode+0x64a>
    41c8:	48 8d 3d c1 83 00 00 	lea    rdi,[rip+0x83c1]        # c590 <_IO_stdin_used+0x590>
    41cf:	e8 6c e3 ff ff       	call   2540 <puts@plt>
    41d4:	e9 a6 00 00 00       	jmp    427f <ip4_icmp_decode+0x64a>
    41d9:	48 8d 3d d8 83 00 00 	lea    rdi,[rip+0x83d8]        # c5b8 <_IO_stdin_used+0x5b8>
    41e0:	e8 5b e3 ff ff       	call   2540 <puts@plt>
    41e5:	e9 95 00 00 00       	jmp    427f <ip4_icmp_decode+0x64a>
    41ea:	48 8d 3d e7 83 00 00 	lea    rdi,[rip+0x83e7]        # c5d8 <_IO_stdin_used+0x5d8>
    41f1:	e8 4a e3 ff ff       	call   2540 <puts@plt>
    41f6:	e9 84 00 00 00       	jmp    427f <ip4_icmp_decode+0x64a>
    41fb:	48 8d 3d ee 83 00 00 	lea    rdi,[rip+0x83ee]        # c5f0 <_IO_stdin_used+0x5f0>
    4202:	e8 39 e3 ff ff       	call   2540 <puts@plt>
    4207:	eb 76                	jmp    427f <ip4_icmp_decode+0x64a>
    4209:	48 8d 3d 08 84 00 00 	lea    rdi,[rip+0x8408]        # c618 <_IO_stdin_used+0x618>
    4210:	e8 2b e3 ff ff       	call   2540 <puts@plt>
    4215:	eb 68                	jmp    427f <ip4_icmp_decode+0x64a>
    4217:	48 8d 3d 22 84 00 00 	lea    rdi,[rip+0x8422]        # c640 <_IO_stdin_used+0x640>
    421e:	e8 1d e3 ff ff       	call   2540 <puts@plt>
    4223:	eb 5a                	jmp    427f <ip4_icmp_decode+0x64a>
    4225:	48 8d 3d 33 84 00 00 	lea    rdi,[rip+0x8433]        # c65f <_IO_stdin_used+0x65f>
    422c:	e8 0f e3 ff ff       	call   2540 <puts@plt>
    4231:	eb 4c                	jmp    427f <ip4_icmp_decode+0x64a>
    4233:	48 8d 3d 46 84 00 00 	lea    rdi,[rip+0x8446]        # c680 <_IO_stdin_used+0x680>
    423a:	e8 01 e3 ff ff       	call   2540 <puts@plt>
    423f:	eb 3e                	jmp    427f <ip4_icmp_decode+0x64a>
    4241:	48 8d 3d 65 84 00 00 	lea    rdi,[rip+0x8465]        # c6ad <_IO_stdin_used+0x6ad>
    4248:	e8 f3 e2 ff ff       	call   2540 <puts@plt>
    424d:	eb 30                	jmp    427f <ip4_icmp_decode+0x64a>
    424f:	48 8d 3d 7a 84 00 00 	lea    rdi,[rip+0x847a]        # c6d0 <_IO_stdin_used+0x6d0>
    4256:	e8 e5 e2 ff ff       	call   2540 <puts@plt>
    425b:	eb 22                	jmp    427f <ip4_icmp_decode+0x64a>
    425d:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4264:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4268:	0f b6 c0             	movzx  eax,al
    426b:	89 c6                	mov    esi,eax
    426d:	48 8d 3d 7b 84 00 00 	lea    rdi,[rip+0x847b]        # c6ef <_IO_stdin_used+0x6ef>
    4274:	b8 00 00 00 00       	mov    eax,0x0
    4279:	e8 62 e2 ff ff       	call   24e0 <printf@plt>
    427e:	90                   	nop
    427f:	e9 c6 01 00 00       	jmp    444a <ip4_icmp_decode+0x815>
    4284:	48 8d 3d 7d 84 00 00 	lea    rdi,[rip+0x847d]        # c708 <_IO_stdin_used+0x708>
    428b:	e8 b0 e2 ff ff       	call   2540 <puts@plt>
    4290:	e9 b5 01 00 00       	jmp    444a <ip4_icmp_decode+0x815>
    4295:	48 8d 3d 8b 84 00 00 	lea    rdi,[rip+0x848b]        # c727 <_IO_stdin_used+0x727>
    429c:	b8 00 00 00 00       	mov    eax,0x0
    42a1:	e8 3a e2 ff ff       	call   24e0 <printf@plt>
    42a6:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    42ad:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    42b1:	0f b6 c0             	movzx  eax,al
    42b4:	83 f8 03             	cmp    eax,0x3
    42b7:	74 44                	je     42fd <ip4_icmp_decode+0x6c8>
    42b9:	83 f8 03             	cmp    eax,0x3
    42bc:	7f 4d                	jg     430b <ip4_icmp_decode+0x6d6>
    42be:	83 f8 02             	cmp    eax,0x2
    42c1:	74 2c                	je     42ef <ip4_icmp_decode+0x6ba>
    42c3:	83 f8 02             	cmp    eax,0x2
    42c6:	7f 43                	jg     430b <ip4_icmp_decode+0x6d6>
    42c8:	85 c0                	test   eax,eax
    42ca:	74 07                	je     42d3 <ip4_icmp_decode+0x69e>
    42cc:	83 f8 01             	cmp    eax,0x1
    42cf:	74 10                	je     42e1 <ip4_icmp_decode+0x6ac>
    42d1:	eb 38                	jmp    430b <ip4_icmp_decode+0x6d6>
    42d3:	48 8d 3d 59 84 00 00 	lea    rdi,[rip+0x8459]        # c733 <_IO_stdin_used+0x733>
    42da:	e8 61 e2 ff ff       	call   2540 <puts@plt>
    42df:	eb 4c                	jmp    432d <ip4_icmp_decode+0x6f8>
    42e1:	48 8d 3d 63 84 00 00 	lea    rdi,[rip+0x8463]        # c74b <_IO_stdin_used+0x74b>
    42e8:	e8 53 e2 ff ff       	call   2540 <puts@plt>
    42ed:	eb 3e                	jmp    432d <ip4_icmp_decode+0x6f8>
    42ef:	48 8d 3d 6a 84 00 00 	lea    rdi,[rip+0x846a]        # c760 <_IO_stdin_used+0x760>
    42f6:	e8 45 e2 ff ff       	call   2540 <puts@plt>
    42fb:	eb 30                	jmp    432d <ip4_icmp_decode+0x6f8>
    42fd:	48 8d 3d 7c 84 00 00 	lea    rdi,[rip+0x847c]        # c780 <_IO_stdin_used+0x780>
    4304:	e8 37 e2 ff ff       	call   2540 <puts@plt>
    4309:	eb 22                	jmp    432d <ip4_icmp_decode+0x6f8>
    430b:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4312:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4316:	0f b6 c0             	movzx  eax,al
    4319:	89 c6                	mov    esi,eax
    431b:	48 8d 3d cd 83 00 00 	lea    rdi,[rip+0x83cd]        # c6ef <_IO_stdin_used+0x6ef>
    4322:	b8 00 00 00 00       	mov    eax,0x0
    4327:	e8 b4 e1 ff ff       	call   24e0 <printf@plt>
    432c:	90                   	nop
    432d:	e9 18 01 00 00       	jmp    444a <ip4_icmp_decode+0x815>
    4332:	48 8d 3d 64 84 00 00 	lea    rdi,[rip+0x8464]        # c79d <_IO_stdin_used+0x79d>
    4339:	e8 02 e2 ff ff       	call   2540 <puts@plt>
    433e:	e9 07 01 00 00       	jmp    444a <ip4_icmp_decode+0x815>
    4343:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    434a:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    434e:	84 c0                	test   al,al
    4350:	75 16                	jne    4368 <ip4_icmp_decode+0x733>
    4352:	48 8d 3d 57 84 00 00 	lea    rdi,[rip+0x8457]        # c7b0 <_IO_stdin_used+0x7b0>
    4359:	b8 00 00 00 00       	mov    eax,0x0
    435e:	e8 7d e1 ff ff       	call   24e0 <printf@plt>
    4363:	e9 e2 00 00 00       	jmp    444a <ip4_icmp_decode+0x815>
    4368:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    436f:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4373:	0f b6 c0             	movzx  eax,al
    4376:	89 c6                	mov    esi,eax
    4378:	48 8d 3d 71 84 00 00 	lea    rdi,[rip+0x8471]        # c7f0 <_IO_stdin_used+0x7f0>
    437f:	b8 00 00 00 00       	mov    eax,0x0
    4384:	e8 57 e1 ff ff       	call   24e0 <printf@plt>
    4389:	e9 bc 00 00 00       	jmp    444a <ip4_icmp_decode+0x815>
    438e:	48 8d 3d 88 84 00 00 	lea    rdi,[rip+0x8488]        # c81d <_IO_stdin_used+0x81d>
    4395:	e8 a6 e1 ff ff       	call   2540 <puts@plt>
    439a:	e9 ab 00 00 00       	jmp    444a <ip4_icmp_decode+0x815>
    439f:	48 8d 3d 8e 84 00 00 	lea    rdi,[rip+0x848e]        # c834 <_IO_stdin_used+0x834>
    43a6:	b8 00 00 00 00       	mov    eax,0x0
    43ab:	e8 30 e1 ff ff       	call   24e0 <printf@plt>
    43b0:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    43b7:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    43bb:	84 c0                	test   al,al
    43bd:	75 0e                	jne    43cd <ip4_icmp_decode+0x798>
    43bf:	48 8d 3d 85 84 00 00 	lea    rdi,[rip+0x8485]        # c84b <_IO_stdin_used+0x84b>
    43c6:	e8 75 e1 ff ff       	call   2540 <puts@plt>
    43cb:	eb 7d                	jmp    444a <ip4_icmp_decode+0x815>
    43cd:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    43d4:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    43d8:	3c 01                	cmp    al,0x1
    43da:	75 0e                	jne    43ea <ip4_icmp_decode+0x7b5>
    43dc:	48 8d 3d 85 84 00 00 	lea    rdi,[rip+0x8485]        # c868 <_IO_stdin_used+0x868>
    43e3:	e8 58 e1 ff ff       	call   2540 <puts@plt>
    43e8:	eb 60                	jmp    444a <ip4_icmp_decode+0x815>
    43ea:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    43f1:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    43f5:	0f b6 c0             	movzx  eax,al
    43f8:	89 c6                	mov    esi,eax
    43fa:	48 8d 3d 8e 84 00 00 	lea    rdi,[rip+0x848e]        # c88f <_IO_stdin_used+0x88f>
    4401:	b8 00 00 00 00       	mov    eax,0x0
    4406:	e8 d5 e0 ff ff       	call   24e0 <printf@plt>
    440b:	eb 3d                	jmp    444a <ip4_icmp_decode+0x815>
    440d:	48 8d 3d 91 84 00 00 	lea    rdi,[rip+0x8491]        # c8a5 <_IO_stdin_used+0x8a5>
    4414:	e8 27 e1 ff ff       	call   2540 <puts@plt>
    4419:	eb 2f                	jmp    444a <ip4_icmp_decode+0x815>
    441b:	48 8d 3d 96 84 00 00 	lea    rdi,[rip+0x8496]        # c8b8 <_IO_stdin_used+0x8b8>
    4422:	e8 19 e1 ff ff       	call   2540 <puts@plt>
    4427:	eb 21                	jmp    444a <ip4_icmp_decode+0x815>
    4429:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4430:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4433:	0f b6 c0             	movzx  eax,al
    4436:	89 c6                	mov    esi,eax
    4438:	48 8d 3d 8a 84 00 00 	lea    rdi,[rip+0x848a]        # c8c9 <_IO_stdin_used+0x8c9>
    443f:	b8 00 00 00 00       	mov    eax,0x0
    4444:	e8 97 e0 ff ff       	call   24e0 <printf@plt>
    4449:	90                   	nop
    444a:	48 8d 35 44 7f 00 00 	lea    rsi,[rip+0x7f44]        # c395 <_IO_stdin_used+0x395>
    4451:	48 8d 3d ae 7e 00 00 	lea    rdi,[rip+0x7eae]        # c306 <_IO_stdin_used+0x306>
    4458:	b8 00 00 00 00       	mov    eax,0x0
    445d:	e8 7e e0 ff ff       	call   24e0 <printf@plt>
    4462:	90                   	nop
    4463:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4467:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    446e:	00 00 
    4470:	74 05                	je     4477 <ip4_icmp_decode+0x842>
    4472:	e8 69 e3 ff ff       	call   27e0 <__stack_chk_fail@plt>
    4477:	c9                   	leave  
    4478:	c3                   	ret    

0000000000004479 <ip4_tcp_decode>:
    4479:	f3 0f 1e fa          	endbr64 
    447d:	55                   	push   rbp
    447e:	48 89 e5             	mov    rbp,rsp
    4481:	53                   	push   rbx
    4482:	48 81 ec 88 00 00 00 	sub    rsp,0x88
    4489:	48 89 7d 88          	mov    QWORD PTR [rbp-0x78],rdi
    448d:	48 89 75 80          	mov    QWORD PTR [rbp-0x80],rsi
    4491:	48 89 95 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdx
    4498:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    449c:	48 83 c0 22          	add    rax,0x22
    44a0:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    44a4:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    44a8:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    44ac:	c0 e8 04             	shr    al,0x4
    44af:	0f b6 c0             	movzx  eax,al
    44b2:	c1 e0 02             	shl    eax,0x2
    44b5:	48 98                	cdqe   
    44b7:	48 8d 50 22          	lea    rdx,[rax+0x22]
    44bb:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    44bf:	48 01 c2             	add    rdx,rax
    44c2:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    44c6:	48 89 10             	mov    QWORD PTR [rax],rdx
    44c9:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    44cd:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    44d0:	89 c2                	mov    edx,eax
    44d2:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    44d6:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    44da:	c0 e8 04             	shr    al,0x4
    44dd:	0f b6 c0             	movzx  eax,al
    44e0:	c1 e0 02             	shl    eax,0x2
    44e3:	89 c1                	mov    ecx,eax
    44e5:	89 d0                	mov    eax,edx
    44e7:	29 c8                	sub    eax,ecx
    44e9:	83 e8 22             	sub    eax,0x22
    44ec:	89 c2                	mov    edx,eax
    44ee:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    44f2:	89 50 30             	mov    DWORD PTR [rax+0x30],edx
    44f5:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    44f9:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    44fd:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    4501:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4505:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4509:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    450d:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4511:	ba 5c 00 00 00       	mov    edx,0x5c
    4516:	be 01 00 00 00       	mov    esi,0x1
    451b:	48 89 c7             	mov    rdi,rax
    451e:	e8 66 0a 00 00       	call   4f89 <add_ip_addr_or_inc_counter>
    4523:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4527:	ba 5c 00 00 00       	mov    edx,0x5c
    452c:	be 00 00 00 00       	mov    esi,0x0
    4531:	48 89 c7             	mov    rdi,rax
    4534:	e8 50 0a 00 00       	call   4f89 <add_ip_addr_or_inc_counter>
    4539:	c7 45 a4 00 00 00 00 	mov    DWORD PTR [rbp-0x5c],0x0
    4540:	c6 45 9f 00          	mov    BYTE PTR [rbp-0x61],0x0
    4544:	c6 45 a0 00          	mov    BYTE PTR [rbp-0x60],0x0
    4548:	c6 45 a1 00          	mov    BYTE PTR [rbp-0x5f],0x0
    454c:	c6 45 a2 00          	mov    BYTE PTR [rbp-0x5e],0x0
    4550:	c6 45 a3 00          	mov    BYTE PTR [rbp-0x5d],0x0
    4554:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4558:	48 83 c0 68          	add    rax,0x68
    455c:	ba 08 00 00 00       	mov    edx,0x8
    4561:	be 00 00 00 00       	mov    esi,0x0
    4566:	48 89 c7             	mov    rdi,rax
    4569:	e8 82 df ff ff       	call   24f0 <memset@plt>
    456e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4572:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    4576:	0f b7 c0             	movzx  eax,ax
    4579:	89 c7                	mov    edi,eax
    457b:	e8 40 e1 ff ff       	call   26c0 <ntohs@plt>
    4580:	0f b7 c0             	movzx  eax,ax
    4583:	89 45 a8             	mov    DWORD PTR [rbp-0x58],eax
    4586:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    458a:	0f b7 00             	movzx  eax,WORD PTR [rax]
    458d:	0f b7 c0             	movzx  eax,ax
    4590:	89 c7                	mov    edi,eax
    4592:	e8 29 e1 ff ff       	call   26c0 <ntohs@plt>
    4597:	0f b7 c0             	movzx  eax,ax
    459a:	89 45 ac             	mov    DWORD PTR [rbp-0x54],eax
    459d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    45a1:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    45a5:	0f b7 c0             	movzx  eax,ax
    45a8:	89 c7                	mov    edi,eax
    45aa:	e8 11 e1 ff ff       	call   26c0 <ntohs@plt>
    45af:	0f b7 d0             	movzx  edx,ax
    45b2:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    45b6:	89 50 28             	mov    DWORD PTR [rax+0x28],edx
    45b9:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    45bd:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    45c0:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    45c3:	0f b6 05 9a 59 10 00 	movzx  eax,BYTE PTR [rip+0x10599a]        # 109f64 <packet_print>
    45ca:	84 c0                	test   al,al
    45cc:	74 4e                	je     461c <ip4_tcp_decode+0x1a3>
    45ce:	48 8d 35 8b 83 00 00 	lea    rsi,[rip+0x838b]        # c960 <_IO_stdin_used+0x960>
    45d5:	48 8d 3d 8a 83 00 00 	lea    rdi,[rip+0x838a]        # c966 <_IO_stdin_used+0x966>
    45dc:	b8 00 00 00 00       	mov    eax,0x0
    45e1:	e8 fa de ff ff       	call   24e0 <printf@plt>
    45e6:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
    45e9:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
    45ed:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    45f0:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    45f4:	41 89 f0             	mov    r8d,esi
    45f7:	48 89 c6             	mov    rsi,rax
    45fa:	48 8d 3d 68 83 00 00 	lea    rdi,[rip+0x8368]        # c969 <_IO_stdin_used+0x969>
    4601:	b8 00 00 00 00       	mov    eax,0x0
    4606:	e8 d5 de ff ff       	call   24e0 <printf@plt>
    460b:	48 8d 3d 6c 83 00 00 	lea    rdi,[rip+0x836c]        # c97e <_IO_stdin_used+0x97e>
    4612:	b8 00 00 00 00       	mov    eax,0x0
    4617:	e8 c4 de ff ff       	call   24e0 <printf@plt>
    461c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4620:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4624:	c0 e8 04             	shr    al,0x4
    4627:	83 e0 01             	and    eax,0x1
    462a:	0f b6 c0             	movzx  eax,al
    462d:	89 c7                	mov    edi,eax
    462f:	e8 8c e0 ff ff       	call   26c0 <ntohs@plt>
    4634:	66 85 c0             	test   ax,ax
    4637:	74 43                	je     467c <ip4_tcp_decode+0x203>
    4639:	0f b6 05 24 59 10 00 	movzx  eax,BYTE PTR [rip+0x105924]        # 109f64 <packet_print>
    4640:	84 c0                	test   al,al
    4642:	74 18                	je     465c <ip4_tcp_decode+0x1e3>
    4644:	48 8d 35 3a 83 00 00 	lea    rsi,[rip+0x833a]        # c985 <_IO_stdin_used+0x985>
    464b:	48 8d 3d 39 83 00 00 	lea    rdi,[rip+0x8339]        # c98b <_IO_stdin_used+0x98b>
    4652:	b8 00 00 00 00       	mov    eax,0x0
    4657:	e8 84 de ff ff       	call   24e0 <printf@plt>
    465c:	c6 45 a0 01          	mov    BYTE PTR [rbp-0x60],0x1
    4660:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4664:	48 8d 58 68          	lea    rbx,[rax+0x68]
    4668:	48 89 df             	mov    rdi,rbx
    466b:	e8 00 e0 ff ff       	call   2670 <strlen@plt>
    4670:	48 01 d8             	add    rax,rbx
    4673:	66 c7 00 41 00       	mov    WORD PTR [rax],0x41
    4678:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    467c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4680:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4684:	83 e0 01             	and    eax,0x1
    4687:	0f b6 c0             	movzx  eax,al
    468a:	89 c7                	mov    edi,eax
    468c:	e8 2f e0 ff ff       	call   26c0 <ntohs@plt>
    4691:	66 85 c0             	test   ax,ax
    4694:	74 43                	je     46d9 <ip4_tcp_decode+0x260>
    4696:	0f b6 05 c7 58 10 00 	movzx  eax,BYTE PTR [rip+0x1058c7]        # 109f64 <packet_print>
    469d:	84 c0                	test   al,al
    469f:	74 18                	je     46b9 <ip4_tcp_decode+0x240>
    46a1:	48 8d 35 eb 82 00 00 	lea    rsi,[rip+0x82eb]        # c993 <_IO_stdin_used+0x993>
    46a8:	48 8d 3d ea 82 00 00 	lea    rdi,[rip+0x82ea]        # c999 <_IO_stdin_used+0x999>
    46af:	b8 00 00 00 00       	mov    eax,0x0
    46b4:	e8 27 de ff ff       	call   24e0 <printf@plt>
    46b9:	c6 45 a2 01          	mov    BYTE PTR [rbp-0x5e],0x1
    46bd:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    46c1:	48 8d 58 68          	lea    rbx,[rax+0x68]
    46c5:	48 89 df             	mov    rdi,rbx
    46c8:	e8 a3 df ff ff       	call   2670 <strlen@plt>
    46cd:	48 01 d8             	add    rax,rbx
    46d0:	66 c7 00 46 00       	mov    WORD PTR [rax],0x46
    46d5:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    46d9:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    46dd:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    46e1:	c0 e8 03             	shr    al,0x3
    46e4:	83 e0 01             	and    eax,0x1
    46e7:	0f b6 c0             	movzx  eax,al
    46ea:	89 c7                	mov    edi,eax
    46ec:	e8 cf df ff ff       	call   26c0 <ntohs@plt>
    46f1:	66 85 c0             	test   ax,ax
    46f4:	74 43                	je     4739 <ip4_tcp_decode+0x2c0>
    46f6:	0f b6 05 67 58 10 00 	movzx  eax,BYTE PTR [rip+0x105867]        # 109f64 <packet_print>
    46fd:	84 c0                	test   al,al
    46ff:	74 18                	je     4719 <ip4_tcp_decode+0x2a0>
    4701:	48 8d 35 99 82 00 00 	lea    rsi,[rip+0x8299]        # c9a1 <_IO_stdin_used+0x9a1>
    4708:	48 8d 3d 98 82 00 00 	lea    rdi,[rip+0x8298]        # c9a7 <_IO_stdin_used+0x9a7>
    470f:	b8 00 00 00 00       	mov    eax,0x0
    4714:	e8 c7 dd ff ff       	call   24e0 <printf@plt>
    4719:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    471d:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4721:	48 8d 58 68          	lea    rbx,[rax+0x68]
    4725:	48 89 df             	mov    rdi,rbx
    4728:	e8 43 df ff ff       	call   2670 <strlen@plt>
    472d:	48 01 d8             	add    rax,rbx
    4730:	66 c7 00 50 00       	mov    WORD PTR [rax],0x50
    4735:	c6 45 a3 01          	mov    BYTE PTR [rbp-0x5d],0x1
    4739:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    473d:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4741:	c0 e8 02             	shr    al,0x2
    4744:	83 e0 01             	and    eax,0x1
    4747:	0f b6 c0             	movzx  eax,al
    474a:	89 c7                	mov    edi,eax
    474c:	e8 6f df ff ff       	call   26c0 <ntohs@plt>
    4751:	66 85 c0             	test   ax,ax
    4754:	74 43                	je     4799 <ip4_tcp_decode+0x320>
    4756:	0f b6 05 07 58 10 00 	movzx  eax,BYTE PTR [rip+0x105807]        # 109f64 <packet_print>
    475d:	84 c0                	test   al,al
    475f:	74 18                	je     4779 <ip4_tcp_decode+0x300>
    4761:	48 8d 35 47 82 00 00 	lea    rsi,[rip+0x8247]        # c9af <_IO_stdin_used+0x9af>
    4768:	48 8d 3d 46 82 00 00 	lea    rdi,[rip+0x8246]        # c9b5 <_IO_stdin_used+0x9b5>
    476f:	b8 00 00 00 00       	mov    eax,0x0
    4774:	e8 67 dd ff ff       	call   24e0 <printf@plt>
    4779:	c6 45 9f 01          	mov    BYTE PTR [rbp-0x61],0x1
    477d:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4781:	48 8d 58 68          	lea    rbx,[rax+0x68]
    4785:	48 89 df             	mov    rdi,rbx
    4788:	e8 e3 de ff ff       	call   2670 <strlen@plt>
    478d:	48 01 d8             	add    rax,rbx
    4790:	66 c7 00 52 00       	mov    WORD PTR [rax],0x52
    4795:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    4799:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    479d:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    47a1:	d0 e8                	shr    al,1
    47a3:	83 e0 01             	and    eax,0x1
    47a6:	0f b6 c0             	movzx  eax,al
    47a9:	89 c7                	mov    edi,eax
    47ab:	e8 10 df ff ff       	call   26c0 <ntohs@plt>
    47b0:	66 85 c0             	test   ax,ax
    47b3:	74 43                	je     47f8 <ip4_tcp_decode+0x37f>
    47b5:	0f b6 05 a8 57 10 00 	movzx  eax,BYTE PTR [rip+0x1057a8]        # 109f64 <packet_print>
    47bc:	84 c0                	test   al,al
    47be:	74 18                	je     47d8 <ip4_tcp_decode+0x35f>
    47c0:	48 8d 35 f6 81 00 00 	lea    rsi,[rip+0x81f6]        # c9bd <_IO_stdin_used+0x9bd>
    47c7:	48 8d 3d f5 81 00 00 	lea    rdi,[rip+0x81f5]        # c9c3 <_IO_stdin_used+0x9c3>
    47ce:	b8 00 00 00 00       	mov    eax,0x0
    47d3:	e8 08 dd ff ff       	call   24e0 <printf@plt>
    47d8:	c6 45 a1 01          	mov    BYTE PTR [rbp-0x5f],0x1
    47dc:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    47e0:	48 8d 58 68          	lea    rbx,[rax+0x68]
    47e4:	48 89 df             	mov    rdi,rbx
    47e7:	e8 84 de ff ff       	call   2670 <strlen@plt>
    47ec:	48 01 d8             	add    rax,rbx
    47ef:	66 c7 00 53 00       	mov    WORD PTR [rax],0x53
    47f4:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    47f8:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    47fc:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4800:	c0 e8 05             	shr    al,0x5
    4803:	83 e0 01             	and    eax,0x1
    4806:	0f b6 c0             	movzx  eax,al
    4809:	89 c7                	mov    edi,eax
    480b:	e8 b0 de ff ff       	call   26c0 <ntohs@plt>
    4810:	66 85 c0             	test   ax,ax
    4813:	74 3f                	je     4854 <ip4_tcp_decode+0x3db>
    4815:	0f b6 05 48 57 10 00 	movzx  eax,BYTE PTR [rip+0x105748]        # 109f64 <packet_print>
    481c:	84 c0                	test   al,al
    481e:	74 18                	je     4838 <ip4_tcp_decode+0x3bf>
    4820:	48 8d 35 a4 81 00 00 	lea    rsi,[rip+0x81a4]        # c9cb <_IO_stdin_used+0x9cb>
    4827:	48 8d 3d a3 81 00 00 	lea    rdi,[rip+0x81a3]        # c9d1 <_IO_stdin_used+0x9d1>
    482e:	b8 00 00 00 00       	mov    eax,0x0
    4833:	e8 a8 dc ff ff       	call   24e0 <printf@plt>
    4838:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    483c:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4840:	48 8d 58 68          	lea    rbx,[rax+0x68]
    4844:	48 89 df             	mov    rdi,rbx
    4847:	e8 24 de ff ff       	call   2670 <strlen@plt>
    484c:	48 01 d8             	add    rax,rbx
    484f:	66 c7 00 55 00       	mov    WORD PTR [rax],0x55
    4854:	0f b6 05 09 57 10 00 	movzx  eax,BYTE PTR [rip+0x105709]        # 109f64 <packet_print>
    485b:	84 c0                	test   al,al
    485d:	74 3c                	je     489b <ip4_tcp_decode+0x422>
    485f:	48 8d 35 fa 80 00 00 	lea    rsi,[rip+0x80fa]        # c960 <_IO_stdin_used+0x960>
    4866:	48 8d 3d f9 80 00 00 	lea    rdi,[rip+0x80f9]        # c966 <_IO_stdin_used+0x966>
    486d:	b8 00 00 00 00       	mov    eax,0x0
    4872:	e8 69 dc ff ff       	call   24e0 <printf@plt>
    4877:	48 8d 3d 5b 81 00 00 	lea    rdi,[rip+0x815b]        # c9d9 <_IO_stdin_used+0x9d9>
    487e:	e8 bd dc ff ff       	call   2540 <puts@plt>
    4883:	48 8d 35 51 81 00 00 	lea    rsi,[rip+0x8151]        # c9db <_IO_stdin_used+0x9db>
    488a:	48 8d 3d d5 80 00 00 	lea    rdi,[rip+0x80d5]        # c966 <_IO_stdin_used+0x966>
    4891:	b8 00 00 00 00       	mov    eax,0x0
    4896:	e8 45 dc ff ff       	call   24e0 <printf@plt>
    489b:	83 7d a4 03          	cmp    DWORD PTR [rbp-0x5c],0x3
    489f:	7f 06                	jg     48a7 <ip4_tcp_decode+0x42e>
    48a1:	83 7d a4 00          	cmp    DWORD PTR [rbp-0x5c],0x0
    48a5:	75 41                	jne    48e8 <ip4_tcp_decode+0x46f>
    48a7:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
    48aa:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
    48ae:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    48b1:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    48b5:	48 8d 0d 1f 81 00 00 	lea    rcx,[rip+0x811f]        # c9db <_IO_stdin_used+0x9db>
    48bc:	51                   	push   rcx
    48bd:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
    48c0:	51                   	push   rcx
    48c1:	41 89 f9             	mov    r9d,edi
    48c4:	49 89 f0             	mov    r8,rsi
    48c7:	89 d1                	mov    ecx,edx
    48c9:	48 89 c2             	mov    rdx,rax
    48cc:	48 8d 35 dc 80 00 00 	lea    rsi,[rip+0x80dc]        # c9af <_IO_stdin_used+0x9af>
    48d3:	48 8d 3d 06 81 00 00 	lea    rdi,[rip+0x8106]        # c9e0 <_IO_stdin_used+0x9e0>
    48da:	b8 00 00 00 00       	mov    eax,0x0
    48df:	e8 fc db ff ff       	call   24e0 <printf@plt>
    48e4:	48 83 c4 10          	add    rsp,0x10
    48e8:	0f b6 05 d3 56 10 00 	movzx  eax,BYTE PTR [rip+0x1056d3]        # 109fc2 <use_spi>
    48ef:	84 c0                	test   al,al
    48f1:	0f 84 8c 00 00 00    	je     4983 <ip4_tcp_decode+0x50a>
    48f7:	80 7d a3 00          	cmp    BYTE PTR [rbp-0x5d],0x0
    48fb:	74 1a                	je     4917 <ip4_tcp_decode+0x49e>
    48fd:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4901:	74 14                	je     4917 <ip4_tcp_decode+0x49e>
    4903:	83 7d a4 02          	cmp    DWORD PTR [rbp-0x5c],0x2
    4907:	75 0e                	jne    4917 <ip4_tcp_decode+0x49e>
    4909:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    490d:	48 89 c7             	mov    rdi,rax
    4910:	e8 2c 49 00 00       	call   9241 <handle_data_pkt>
    4915:	eb 6c                	jmp    4983 <ip4_tcp_decode+0x50a>
    4917:	80 7d a2 00          	cmp    BYTE PTR [rbp-0x5e],0x0
    491b:	74 14                	je     4931 <ip4_tcp_decode+0x4b8>
    491d:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4921:	74 0e                	je     4931 <ip4_tcp_decode+0x4b8>
    4923:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4927:	48 89 c7             	mov    rdi,rax
    492a:	e8 ff 47 00 00       	call   912e <polite_end>
    492f:	eb 52                	jmp    4983 <ip4_tcp_decode+0x50a>
    4931:	80 7d a1 00          	cmp    BYTE PTR [rbp-0x5f],0x0
    4935:	74 14                	je     494b <ip4_tcp_decode+0x4d2>
    4937:	83 7d a4 01          	cmp    DWORD PTR [rbp-0x5c],0x1
    493b:	75 0e                	jne    494b <ip4_tcp_decode+0x4d2>
    493d:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4941:	48 89 c7             	mov    rdi,rax
    4944:	e8 42 43 00 00       	call   8c8b <add_new_conversation>
    4949:	eb 38                	jmp    4983 <ip4_tcp_decode+0x50a>
    494b:	80 7d a1 00          	cmp    BYTE PTR [rbp-0x5f],0x0
    494f:	74 1a                	je     496b <ip4_tcp_decode+0x4f2>
    4951:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4955:	74 14                	je     496b <ip4_tcp_decode+0x4f2>
    4957:	83 7d a4 02          	cmp    DWORD PTR [rbp-0x5c],0x2
    495b:	75 0e                	jne    496b <ip4_tcp_decode+0x4f2>
    495d:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4961:	48 89 c7             	mov    rdi,rax
    4964:	e8 5b 45 00 00       	call   8ec4 <spi_ud_thw>
    4969:	eb 18                	jmp    4983 <ip4_tcp_decode+0x50a>
    496b:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    496f:	74 12                	je     4983 <ip4_tcp_decode+0x50a>
    4971:	83 7d a4 01          	cmp    DWORD PTR [rbp-0x5c],0x1
    4975:	75 0c                	jne    4983 <ip4_tcp_decode+0x50a>
    4977:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    497b:	48 89 c7             	mov    rdi,rax
    497e:	e8 0a 46 00 00       	call   8f8d <update_table>
    4983:	80 7d a3 00          	cmp    BYTE PTR [rbp-0x5d],0x0
    4987:	74 17                	je     49a0 <ip4_tcp_decode+0x527>
    4989:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    498d:	74 11                	je     49a0 <ip4_tcp_decode+0x527>
    498f:	83 7d a4 02          	cmp    DWORD PTR [rbp-0x5c],0x2
    4993:	75 0b                	jne    49a0 <ip4_tcp_decode+0x527>
    4995:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4999:	c7 40 70 01 00 00 00 	mov    DWORD PTR [rax+0x70],0x1
    49a0:	80 7d 9f 00          	cmp    BYTE PTR [rbp-0x61],0x0
    49a4:	0f 84 8f 01 00 00    	je     4b39 <ip4_tcp_decode+0x6c0>
    49aa:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    49ae:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    49b2:	48 89 c7             	mov    rdi,rax
    49b5:	e8 8a 30 00 00       	call   7a44 <member_exists>
    49ba:	89 45 b0             	mov    DWORD PTR [rbp-0x50],eax
    49bd:	83 7d b0 ff          	cmp    DWORD PTR [rbp-0x50],0xffffffff
    49c1:	0f 84 db 00 00 00    	je     4aa2 <ip4_tcp_decode+0x629>
    49c7:	8b 45 b0             	mov    eax,DWORD PTR [rbp-0x50]
    49ca:	48 63 d0             	movsxd rdx,eax
    49cd:	48 89 d0             	mov    rax,rdx
    49d0:	48 c1 e0 02          	shl    rax,0x2
    49d4:	48 01 d0             	add    rax,rdx
    49d7:	48 c1 e0 03          	shl    rax,0x3
    49db:	48 01 d0             	add    rax,rdx
    49de:	48 c1 e0 04          	shl    rax,0x4
    49e2:	48 8d 15 37 eb 0e 00 	lea    rdx,[rip+0xeeb37]        # f3520 <watchlist>
    49e9:	48 01 d0             	add    rax,rdx
    49ec:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    49f0:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    49f4:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    49f8:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    49fc:	48 83 c2 08          	add    rdx,0x8
    4a00:	48 89 c6             	mov    rsi,rax
    4a03:	48 89 d7             	mov    rdi,rdx
    4a06:	e8 15 de ff ff       	call   2820 <strcpy@plt>
    4a0b:	bf 00 00 00 00       	mov    edi,0x0
    4a10:	e8 1b df ff ff       	call   2930 <time@plt>
    4a15:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    4a19:	8b 92 48 01 00 00    	mov    edx,DWORD PTR [rdx+0x148]
    4a1f:	8d 72 01             	lea    esi,[rdx+0x1]
    4a22:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    4a26:	89 b1 48 01 00 00    	mov    DWORD PTR [rcx+0x148],esi
    4a2c:	48 89 c1             	mov    rcx,rax
    4a2f:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4a33:	89 d2                	mov    edx,edx
    4a35:	48 83 c2 28          	add    rdx,0x28
    4a39:	48 89 4c d0 10       	mov    QWORD PTR [rax+rdx*8+0x10],rcx
    4a3e:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4a42:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    4a48:	83 f8 1d             	cmp    eax,0x1d
    4a4b:	0f 86 e8 00 00 00    	jbe    4b39 <ip4_tcp_decode+0x6c0>
    4a51:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4a55:	c7 80 48 01 00 00 1e 	mov    DWORD PTR [rax+0x148],0x1e
    4a5c:	00 00 00 
    4a5f:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4a63:	48 89 c7             	mov    rdi,rax
    4a66:	e8 97 2b 00 00       	call   7602 <tcp_rst_portscan_detect>
    4a6b:	84 c0                	test   al,al
    4a6d:	0f 84 c6 00 00 00    	je     4b39 <ip4_tcp_decode+0x6c0>
    4a73:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4a77:	c7 80 48 01 00 00 00 	mov    DWORD PTR [rax+0x148],0x0
    4a7e:	00 00 00 
    4a81:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4a85:	48 05 50 01 00 00    	add    rax,0x150
    4a8b:	ba f0 00 00 00       	mov    edx,0xf0
    4a90:	be 00 00 00 00       	mov    esi,0x0
    4a95:	48 89 c7             	mov    rdi,rax
    4a98:	e8 53 da ff ff       	call   24f0 <memset@plt>
    4a9d:	e9 97 00 00 00       	jmp    4b39 <ip4_tcp_decode+0x6c0>
    4aa2:	8b 05 70 c5 00 00    	mov    eax,DWORD PTR [rip+0xc570]        # 11018 <watchlist_num>
    4aa8:	83 c0 01             	add    eax,0x1
    4aab:	89 05 67 c5 00 00    	mov    DWORD PTR [rip+0xc567],eax        # 11018 <watchlist_num>
    4ab1:	8b 05 61 c5 00 00    	mov    eax,DWORD PTR [rip+0xc561]        # 11018 <watchlist_num>
    4ab7:	48 63 d0             	movsxd rdx,eax
    4aba:	48 89 d0             	mov    rax,rdx
    4abd:	48 c1 e0 02          	shl    rax,0x2
    4ac1:	48 01 d0             	add    rax,rdx
    4ac4:	48 c1 e0 03          	shl    rax,0x3
    4ac8:	48 01 d0             	add    rax,rdx
    4acb:	48 c1 e0 04          	shl    rax,0x4
    4acf:	48 8d 15 4a ea 0e 00 	lea    rdx,[rip+0xeea4a]        # f3520 <watchlist>
    4ad6:	48 01 d0             	add    rax,rdx
    4ad9:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    4add:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4ae1:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4ae5:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    4ae9:	48 83 c2 08          	add    rdx,0x8
    4aed:	48 89 c6             	mov    rsi,rax
    4af0:	48 89 d7             	mov    rdi,rdx
    4af3:	e8 28 dd ff ff       	call   2820 <strcpy@plt>
    4af8:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4afc:	c7 80 48 01 00 00 00 	mov    DWORD PTR [rax+0x148],0x0
    4b03:	00 00 00 
    4b06:	bf 00 00 00 00       	mov    edi,0x0
    4b0b:	e8 20 de ff ff       	call   2930 <time@plt>
    4b10:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    4b14:	8b 92 48 01 00 00    	mov    edx,DWORD PTR [rdx+0x148]
    4b1a:	8d 72 01             	lea    esi,[rdx+0x1]
    4b1d:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    4b21:	89 b1 48 01 00 00    	mov    DWORD PTR [rcx+0x148],esi
    4b27:	48 89 c1             	mov    rcx,rax
    4b2a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4b2e:	89 d2                	mov    edx,edx
    4b30:	48 83 c2 28          	add    rdx,0x28
    4b34:	48 89 4c d0 10       	mov    QWORD PTR [rax+rdx*8+0x10],rcx
    4b39:	8b 05 49 c5 00 00    	mov    eax,DWORD PTR [rip+0xc549]        # 11088 <strict_nmap_host_alive_check>
    4b3f:	83 f8 01             	cmp    eax,0x1
    4b42:	0f 85 f6 00 00 00    	jne    4c3e <ip4_tcp_decode+0x7c5>
    4b48:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4b4c:	74 0c                	je     4b5a <ip4_tcp_decode+0x6e1>
    4b4e:	83 7d a8 50          	cmp    DWORD PTR [rbp-0x58],0x50
    4b52:	74 26                	je     4b7a <ip4_tcp_decode+0x701>
    4b54:	83 7d ac 50          	cmp    DWORD PTR [rbp-0x54],0x50
    4b58:	74 20                	je     4b7a <ip4_tcp_decode+0x701>
    4b5a:	80 7d a1 00          	cmp    BYTE PTR [rbp-0x5f],0x0
    4b5e:	0f 84 da 00 00 00    	je     4c3e <ip4_tcp_decode+0x7c5>
    4b64:	81 7d a8 bb 01 00 00 	cmp    DWORD PTR [rbp-0x58],0x1bb
    4b6b:	74 0d                	je     4b7a <ip4_tcp_decode+0x701>
    4b6d:	81 7d ac bb 01 00 00 	cmp    DWORD PTR [rbp-0x54],0x1bb
    4b74:	0f 85 c4 00 00 00    	jne    4c3e <ip4_tcp_decode+0x7c5>
    4b7a:	8b 45 a8             	mov    eax,DWORD PTR [rbp-0x58]
    4b7d:	3b 45 ac             	cmp    eax,DWORD PTR [rbp-0x54]
    4b80:	76 0a                	jbe    4b8c <ip4_tcp_decode+0x713>
    4b82:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4b86:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    4b8a:	eb 08                	jmp    4b94 <ip4_tcp_decode+0x71b>
    4b8c:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4b90:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    4b94:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4b98:	48 89 c7             	mov    rdi,rax
    4b9b:	e8 a4 2e 00 00       	call   7a44 <member_exists>
    4ba0:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
    4ba3:	83 7d b4 ff          	cmp    DWORD PTR [rbp-0x4c],0xffffffff
    4ba7:	0f 84 91 00 00 00    	je     4c3e <ip4_tcp_decode+0x7c5>
    4bad:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    4bb0:	48 63 d0             	movsxd rdx,eax
    4bb3:	48 89 d0             	mov    rax,rdx
    4bb6:	48 c1 e0 02          	shl    rax,0x2
    4bba:	48 01 d0             	add    rax,rdx
    4bbd:	48 c1 e0 03          	shl    rax,0x3
    4bc1:	48 01 d0             	add    rax,rdx
    4bc4:	48 c1 e0 04          	shl    rax,0x4
    4bc8:	48 8d 15 51 e9 0e 00 	lea    rdx,[rip+0xee951]        # f3520 <watchlist>
    4bcf:	48 01 d0             	add    rax,rdx
    4bd2:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    4bd6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4bda:	8b 40 34             	mov    eax,DWORD PTR [rax+0x34]
    4bdd:	85 c0                	test   eax,eax
    4bdf:	75 2a                	jne    4c0b <ip4_tcp_decode+0x792>
    4be1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4be5:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4be8:	83 f8 01             	cmp    eax,0x1
    4beb:	75 1e                	jne    4c0b <ip4_tcp_decode+0x792>
    4bed:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4bf1:	c7 40 34 01 00 00 00 	mov    DWORD PTR [rax+0x34],0x1
    4bf8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4bfc:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4bff:	8d 50 01             	lea    edx,[rax+0x1]
    4c02:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4c06:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    4c09:	eb 33                	jmp    4c3e <ip4_tcp_decode+0x7c5>
    4c0b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4c0f:	8b 40 38             	mov    eax,DWORD PTR [rax+0x38]
    4c12:	85 c0                	test   eax,eax
    4c14:	75 28                	jne    4c3e <ip4_tcp_decode+0x7c5>
    4c16:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4c1a:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4c1d:	83 f8 02             	cmp    eax,0x2
    4c20:	75 1c                	jne    4c3e <ip4_tcp_decode+0x7c5>
    4c22:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4c26:	c7 40 38 01 00 00 00 	mov    DWORD PTR [rax+0x38],0x1
    4c2d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4c31:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4c34:	8d 50 01             	lea    edx,[rax+0x1]
    4c37:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4c3b:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    4c3e:	0f b6 05 1f 53 10 00 	movzx  eax,BYTE PTR [rip+0x10531f]        # 109f64 <packet_print>
    4c45:	84 c0                	test   al,al
    4c47:	74 3a                	je     4c83 <ip4_tcp_decode+0x80a>
    4c49:	80 7d a3 00          	cmp    BYTE PTR [rbp-0x5d],0x0
    4c4d:	74 34                	je     4c83 <ip4_tcp_decode+0x80a>
    4c4f:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4c53:	74 2e                	je     4c83 <ip4_tcp_decode+0x80a>
    4c55:	0f b6 45 a2          	movzx  eax,BYTE PTR [rbp-0x5e]
    4c59:	83 f0 01             	xor    eax,0x1
    4c5c:	84 c0                	test   al,al
    4c5e:	74 23                	je     4c83 <ip4_tcp_decode+0x80a>
    4c60:	83 7d a8 50          	cmp    DWORD PTR [rbp-0x58],0x50
    4c64:	74 06                	je     4c6c <ip4_tcp_decode+0x7f3>
    4c66:	83 7d ac 50          	cmp    DWORD PTR [rbp-0x54],0x50
    4c6a:	75 17                	jne    4c83 <ip4_tcp_decode+0x80a>
    4c6c:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    4c70:	48 8d 50 42          	lea    rdx,[rax+0x42]
    4c74:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4c78:	48 89 c6             	mov    rsi,rax
    4c7b:	48 89 d7             	mov    rdi,rdx
    4c7e:	e8 38 3a 00 00       	call   86bb <http_disect>
    4c83:	83 7d a8 15          	cmp    DWORD PTR [rbp-0x58],0x15
    4c87:	74 06                	je     4c8f <ip4_tcp_decode+0x816>
    4c89:	83 7d ac 15          	cmp    DWORD PTR [rbp-0x54],0x15
    4c8d:	75 2d                	jne    4cbc <ip4_tcp_decode+0x843>
    4c8f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4c93:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    4c97:	c0 e8 04             	shr    al,0x4
    4c9a:	0f b6 c0             	movzx  eax,al
    4c9d:	c1 e0 02             	shl    eax,0x2
    4ca0:	48 98                	cdqe   
    4ca2:	48 8d 50 22          	lea    rdx,[rax+0x22]
    4ca6:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    4caa:	48 01 c2             	add    rdx,rax
    4cad:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4cb1:	48 89 c6             	mov    rsi,rax
    4cb4:	48 89 d7             	mov    rdi,rdx
    4cb7:	e8 ea 3b 00 00       	call   88a6 <ftp_disect>
    4cbc:	81 7d a8 bb 01 00 00 	cmp    DWORD PTR [rbp-0x58],0x1bb
    4cc3:	74 09                	je     4cce <ip4_tcp_decode+0x855>
    4cc5:	81 7d ac bb 01 00 00 	cmp    DWORD PTR [rbp-0x54],0x1bb
    4ccc:	75 29                	jne    4cf7 <ip4_tcp_decode+0x87e>
    4cce:	80 7d a3 00          	cmp    BYTE PTR [rbp-0x5d],0x0
    4cd2:	74 23                	je     4cf7 <ip4_tcp_decode+0x87e>
    4cd4:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4cd8:	74 1d                	je     4cf7 <ip4_tcp_decode+0x87e>
    4cda:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4cde:	48 8b 00             	mov    rax,QWORD PTR [rax]
    4ce1:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
    4ce8:	48 8b 4d 80          	mov    rcx,QWORD PTR [rbp-0x80]
    4cec:	48 89 ce             	mov    rsi,rcx
    4cef:	48 89 c7             	mov    rdi,rax
    4cf2:	e8 84 33 00 00       	call   807b <tls_decode>
    4cf7:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    4cfe:	8b 50 14             	mov    edx,DWORD PTR [rax+0x14]
    4d01:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4d05:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    4d09:	c0 e8 04             	shr    al,0x4
    4d0c:	0f b6 c0             	movzx  eax,al
    4d0f:	c1 e0 02             	shl    eax,0x2
    4d12:	89 c1                	mov    ecx,eax
    4d14:	89 d0                	mov    eax,edx
    4d16:	29 c8                	sub    eax,ecx
    4d18:	8d 50 de             	lea    edx,[rax-0x22]
    4d1b:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4d1f:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    4d22:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4d26:	48 89 c7             	mov    rdi,rax
    4d29:	e8 a1 17 00 00       	call   64cf <rulemgr>
    4d2e:	90                   	nop
    4d2f:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    4d33:	c9                   	leave  
    4d34:	c3                   	ret    

0000000000004d35 <ip4_udp_decode>:
    4d35:	f3 0f 1e fa          	endbr64 
    4d39:	55                   	push   rbp
    4d3a:	48 89 e5             	mov    rbp,rsp
    4d3d:	48 83 ec 30          	sub    rsp,0x30
    4d41:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    4d45:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    4d49:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    4d4d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4d51:	48 83 c0 22          	add    rax,0x22
    4d55:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4d59:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4d5d:	48 8d 50 2a          	lea    rdx,[rax+0x2a]
    4d61:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d65:	48 89 10             	mov    QWORD PTR [rax],rdx
    4d68:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d6c:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    4d70:	ba 5d 00 00 00       	mov    edx,0x5d
    4d75:	be 01 00 00 00       	mov    esi,0x1
    4d7a:	48 89 c7             	mov    rdi,rax
    4d7d:	e8 07 02 00 00       	call   4f89 <add_ip_addr_or_inc_counter>
    4d82:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d86:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4d8a:	ba 5d 00 00 00       	mov    edx,0x5d
    4d8f:	be 00 00 00 00       	mov    esi,0x0
    4d94:	48 89 c7             	mov    rdi,rax
    4d97:	e8 ed 01 00 00       	call   4f89 <add_ip_addr_or_inc_counter>
    4d9c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4da0:	0f b7 00             	movzx  eax,WORD PTR [rax]
    4da3:	0f b7 c0             	movzx  eax,ax
    4da6:	89 c7                	mov    edi,eax
    4da8:	e8 13 d9 ff ff       	call   26c0 <ntohs@plt>
    4dad:	0f b7 c0             	movzx  eax,ax
    4db0:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
    4db3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4db7:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    4dbb:	0f b7 c0             	movzx  eax,ax
    4dbe:	89 c7                	mov    edi,eax
    4dc0:	e8 fb d8 ff ff       	call   26c0 <ntohs@plt>
    4dc5:	0f b7 c0             	movzx  eax,ax
    4dc8:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    4dcb:	0f b6 05 92 51 10 00 	movzx  eax,BYTE PTR [rip+0x105192]        # 109f64 <packet_print>
    4dd2:	84 c0                	test   al,al
    4dd4:	74 5d                	je     4e33 <ip4_udp_decode+0xfe>
    4dd6:	48 8d 35 43 7c 00 00 	lea    rsi,[rip+0x7c43]        # ca20 <_IO_stdin_used+0xa20>
    4ddd:	48 8d 3d 42 7c 00 00 	lea    rdi,[rip+0x7c42]        # ca26 <_IO_stdin_used+0xa26>
    4de4:	b8 00 00 00 00       	mov    eax,0x0
    4de9:	e8 f2 d6 ff ff       	call   24e0 <printf@plt>
    4dee:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4df2:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    4df6:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4dfa:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    4dfe:	8b 75 f4             	mov    esi,DWORD PTR [rbp-0xc]
    4e01:	8b 55 f0             	mov    edx,DWORD PTR [rbp-0x10]
    4e04:	41 89 f0             	mov    r8d,esi
    4e07:	48 89 c6             	mov    rsi,rax
    4e0a:	48 8d 3d 18 7c 00 00 	lea    rdi,[rip+0x7c18]        # ca29 <_IO_stdin_used+0xa29>
    4e11:	b8 00 00 00 00       	mov    eax,0x0
    4e16:	e8 c5 d6 ff ff       	call   24e0 <printf@plt>
    4e1b:	48 8d 35 20 7c 00 00 	lea    rsi,[rip+0x7c20]        # ca42 <_IO_stdin_used+0xa42>
    4e22:	48 8d 3d fd 7b 00 00 	lea    rdi,[rip+0x7bfd]        # ca26 <_IO_stdin_used+0xa26>
    4e29:	b8 00 00 00 00       	mov    eax,0x0
    4e2e:	e8 ad d6 ff ff       	call   24e0 <printf@plt>
    4e33:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e37:	8b 55 f0             	mov    edx,DWORD PTR [rbp-0x10]
    4e3a:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    4e3d:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e41:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
    4e44:	89 50 28             	mov    DWORD PTR [rax+0x28],edx
    4e47:	83 7d f0 35          	cmp    DWORD PTR [rbp-0x10],0x35
    4e4b:	74 06                	je     4e53 <ip4_udp_decode+0x11e>
    4e4d:	83 7d f4 35          	cmp    DWORD PTR [rbp-0xc],0x35
    4e51:	75 17                	jne    4e6a <ip4_udp_decode+0x135>
    4e53:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4e57:	48 8d 50 2b          	lea    rdx,[rax+0x2b]
    4e5b:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e5f:	48 89 c6             	mov    rsi,rax
    4e62:	48 89 d7             	mov    rdi,rdx
    4e65:	e8 03 39 00 00       	call   876d <dns_disect>
    4e6a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4e6e:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    4e71:	8d 50 d6             	lea    edx,[rax-0x2a]
    4e74:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e78:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    4e7b:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e7f:	48 89 c7             	mov    rdi,rax
    4e82:	e8 48 16 00 00       	call   64cf <rulemgr>
    4e87:	90                   	nop
    4e88:	c9                   	leave  
    4e89:	c3                   	ret    

0000000000004e8a <ip4_igmp_decode>:
    4e8a:	f3 0f 1e fa          	endbr64 
    4e8e:	55                   	push   rbp
    4e8f:	48 89 e5             	mov    rbp,rsp
    4e92:	48 83 ec 60          	sub    rsp,0x60
    4e96:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    4e9a:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
    4e9e:	48 89 55 a8          	mov    QWORD PTR [rbp-0x58],rdx
    4ea2:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4ea9:	00 00 
    4eab:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4eaf:	31 c0                	xor    eax,eax
    4eb1:	0f b6 05 ac 50 10 00 	movzx  eax,BYTE PTR [rip+0x1050ac]        # 109f64 <packet_print>
    4eb8:	84 c0                	test   al,al
    4eba:	0f 84 b1 00 00 00    	je     4f71 <ip4_igmp_decode+0xe7>
    4ec0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4ec4:	48 83 c0 26          	add    rax,0x26
    4ec8:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    4ecc:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    4ed0:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    4ed4:	48 89 c6             	mov    rsi,rax
    4ed7:	48 8d 3d 6a 7b 00 00 	lea    rdi,[rip+0x7b6a]        # ca48 <_IO_stdin_used+0xa48>
    4ede:	b8 00 00 00 00       	mov    eax,0x0
    4ee3:	e8 f8 d5 ff ff       	call   24e0 <printf@plt>
    4ee8:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4eec:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4eef:	0f b6 c0             	movzx  eax,al
    4ef2:	83 f8 11             	cmp    eax,0x11
    4ef5:	74 07                	je     4efe <ip4_igmp_decode+0x74>
    4ef7:	83 f8 22             	cmp    eax,0x22
    4efa:	74 10                	je     4f0c <ip4_igmp_decode+0x82>
    4efc:	eb 54                	jmp    4f52 <ip4_igmp_decode+0xc8>
    4efe:	48 8d 3d 58 7b 00 00 	lea    rdi,[rip+0x7b58]        # ca5d <_IO_stdin_used+0xa5d>
    4f05:	e8 36 d6 ff ff       	call   2540 <puts@plt>
    4f0a:	eb 66                	jmp    4f72 <ip4_igmp_decode+0xe8>
    4f0c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4f10:	48 83 c0 26          	add    rax,0x26
    4f14:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    4f18:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4f1c:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    4f1f:	89 c7                	mov    edi,eax
    4f21:	e8 83 e2 ff ff       	call   31a9 <ipv4_ntoa>
    4f26:	48 89 c2             	mov    rdx,rax
    4f29:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    4f2d:	48 89 d6             	mov    rsi,rdx
    4f30:	48 89 c7             	mov    rdi,rax
    4f33:	e8 e8 d8 ff ff       	call   2820 <strcpy@plt>
    4f38:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    4f3c:	48 89 c6             	mov    rsi,rax
    4f3f:	48 8d 3d 32 7b 00 00 	lea    rdi,[rip+0x7b32]        # ca78 <_IO_stdin_used+0xa78>
    4f46:	b8 00 00 00 00       	mov    eax,0x0
    4f4b:	e8 90 d5 ff ff       	call   24e0 <printf@plt>
    4f50:	eb 20                	jmp    4f72 <ip4_igmp_decode+0xe8>
    4f52:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4f56:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4f59:	0f b6 c0             	movzx  eax,al
    4f5c:	89 c6                	mov    esi,eax
    4f5e:	48 8d 3d 49 7b 00 00 	lea    rdi,[rip+0x7b49]        # caae <_IO_stdin_used+0xaae>
    4f65:	b8 00 00 00 00       	mov    eax,0x0
    4f6a:	e8 71 d5 ff ff       	call   24e0 <printf@plt>
    4f6f:	eb 01                	jmp    4f72 <ip4_igmp_decode+0xe8>
    4f71:	90                   	nop
    4f72:	90                   	nop
    4f73:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4f77:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    4f7e:	00 00 
    4f80:	74 05                	je     4f87 <ip4_igmp_decode+0xfd>
    4f82:	e8 59 d8 ff ff       	call   27e0 <__stack_chk_fail@plt>
    4f87:	c9                   	leave  
    4f88:	c3                   	ret    

0000000000004f89 <add_ip_addr_or_inc_counter>:
    4f89:	f3 0f 1e fa          	endbr64 
    4f8d:	55                   	push   rbp
    4f8e:	48 89 e5             	mov    rbp,rsp
    4f91:	48 83 ec 60          	sub    rsp,0x60
    4f95:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    4f99:	89 f0                	mov    eax,esi
    4f9b:	89 55 a0             	mov    DWORD PTR [rbp-0x60],edx
    4f9e:	88 45 a4             	mov    BYTE PTR [rbp-0x5c],al
    4fa1:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4fa8:	00 00 
    4faa:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4fae:	31 c0                	xor    eax,eax
    4fb0:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4fb4:	ba 08 00 00 00       	mov    edx,0x8
    4fb9:	be 00 00 00 00       	mov    esi,0x0
    4fbe:	48 89 c7             	mov    rdi,rax
    4fc1:	e8 2a d5 ff ff       	call   24f0 <memset@plt>
    4fc6:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    4fca:	ba 1c 00 00 00       	mov    edx,0x1c
    4fcf:	be 00 00 00 00       	mov    esi,0x0
    4fd4:	48 89 c7             	mov    rdi,rax
    4fd7:	e8 14 d5 ff ff       	call   24f0 <memset@plt>
    4fdc:	48 8b 4d a8          	mov    rcx,QWORD PTR [rbp-0x58]
    4fe0:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4fe4:	ba 18 00 00 00       	mov    edx,0x18
    4fe9:	48 89 ce             	mov    rsi,rcx
    4fec:	48 89 c7             	mov    rdi,rax
    4fef:	e8 7c d8 ff ff       	call   2870 <strncpy@plt>
    4ff4:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    4ff8:	ba 1c 00 00 00       	mov    edx,0x1c
    4ffd:	be 00 00 00 00       	mov    esi,0x0
    5002:	48 89 c7             	mov    rdi,rax
    5005:	e8 e6 d4 ff ff       	call   24f0 <memset@plt>
    500a:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    500e:	48 8d 55 c0          	lea    rdx,[rbp-0x40]
    5012:	48 83 c2 08          	add    rdx,0x8
    5016:	48 89 c6             	mov    rsi,rax
    5019:	48 89 d7             	mov    rdi,rdx
    501c:	e8 ff d7 ff ff       	call   2820 <strcpy@plt>
    5021:	0f b6 45 a4          	movzx  eax,BYTE PTR [rbp-0x5c]
    5025:	88 45 c0             	mov    BYTE PTR [rbp-0x40],al
    5028:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    502b:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    502e:	48 8d 55 c0          	lea    rdx,[rbp-0x40]
    5032:	48 8d 45 b8          	lea    rax,[rbp-0x48]
    5036:	48 89 d1             	mov    rcx,rdx
    5039:	48 8d 15 35 00 00 00 	lea    rdx,[rip+0x35]        # 5075 <verify_ip_addr>
    5040:	be 00 00 00 00       	mov    esi,0x0
    5045:	48 89 c7             	mov    rdi,rax
    5048:	e8 f3 d5 ff ff       	call   2640 <pthread_create@plt>
    504d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5051:	be 00 00 00 00       	mov    esi,0x0
    5056:	48 89 c7             	mov    rdi,rax
    5059:	e8 72 d4 ff ff       	call   24d0 <pthread_join@plt>
    505e:	90                   	nop
    505f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5063:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    506a:	00 00 
    506c:	74 05                	je     5073 <add_ip_addr_or_inc_counter+0xea>
    506e:	e8 6d d7 ff ff       	call   27e0 <__stack_chk_fail@plt>
    5073:	c9                   	leave  
    5074:	c3                   	ret    

0000000000005075 <verify_ip_addr>:
    5075:	f3 0f 1e fa          	endbr64 
    5079:	55                   	push   rbp
    507a:	48 89 e5             	mov    rbp,rsp
    507d:	48 83 ec 30          	sub    rsp,0x30
    5081:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    5085:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    5089:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    508d:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
    5094:	e9 c9 00 00 00       	jmp    5162 <verify_ip_addr+0xed>
    5099:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    509c:	48 63 d0             	movsxd rdx,eax
    509f:	48 89 d0             	mov    rax,rdx
    50a2:	48 c1 e0 02          	shl    rax,0x2
    50a6:	48 01 d0             	add    rax,rdx
    50a9:	48 c1 e0 03          	shl    rax,0x3
    50ad:	48 01 d0             	add    rax,rdx
    50b0:	48 c1 e0 04          	shl    rax,0x4
    50b4:	48 8d 15 65 e4 0e 00 	lea    rdx,[rip+0xee465]        # f3520 <watchlist>
    50bb:	48 01 d0             	add    rax,rdx
    50be:	48 8d 50 08          	lea    rdx,[rax+0x8]
    50c2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    50c6:	48 83 c0 08          	add    rax,0x8
    50ca:	48 89 d6             	mov    rsi,rdx
    50cd:	48 89 c7             	mov    rdi,rax
    50d0:	e8 1b d7 ff ff       	call   27f0 <strcmp@plt>
    50d5:	85 c0                	test   eax,eax
    50d7:	0f 85 81 00 00 00    	jne    515e <verify_ip_addr+0xe9>
    50dd:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    50e0:	48 63 d0             	movsxd rdx,eax
    50e3:	48 89 d0             	mov    rax,rdx
    50e6:	48 c1 e0 02          	shl    rax,0x2
    50ea:	48 01 d0             	add    rax,rdx
    50ed:	48 c1 e0 03          	shl    rax,0x3
    50f1:	48 01 d0             	add    rax,rdx
    50f4:	48 c1 e0 04          	shl    rax,0x4
    50f8:	48 89 c2             	mov    rdx,rax
    50fb:	48 8d 05 76 e6 0e 00 	lea    rax,[rip+0xee676]        # f3778 <watchlist+0x258>
    5102:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    5105:	8d 48 01             	lea    ecx,[rax+0x1]
    5108:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    510b:	48 63 d0             	movsxd rdx,eax
    510e:	48 89 d0             	mov    rax,rdx
    5111:	48 c1 e0 02          	shl    rax,0x2
    5115:	48 01 d0             	add    rax,rdx
    5118:	48 c1 e0 03          	shl    rax,0x3
    511c:	48 01 d0             	add    rax,rdx
    511f:	48 c1 e0 04          	shl    rax,0x4
    5123:	48 89 c2             	mov    rdx,rax
    5126:	48 8d 05 4b e6 0e 00 	lea    rax,[rip+0xee64b]        # f3778 <watchlist+0x258>
    512d:	89 0c 02             	mov    DWORD PTR [rdx+rax*1],ecx
    5130:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    5133:	48 63 d0             	movsxd rdx,eax
    5136:	48 89 d0             	mov    rax,rdx
    5139:	48 c1 e0 02          	shl    rax,0x2
    513d:	48 01 d0             	add    rax,rdx
    5140:	48 c1 e0 03          	shl    rax,0x3
    5144:	48 01 d0             	add    rax,rdx
    5147:	48 c1 e0 04          	shl    rax,0x4
    514b:	48 8d 15 ce e3 0e 00 	lea    rdx,[rip+0xee3ce]        # f3520 <watchlist>
    5152:	48 01 d0             	add    rax,rdx
    5155:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    5159:	e9 f5 00 00 00       	jmp    5253 <verify_ip_addr+0x1de>
    515e:	83 45 e4 01          	add    DWORD PTR [rbp-0x1c],0x1
    5162:	8b 05 b0 be 00 00    	mov    eax,DWORD PTR [rip+0xbeb0]        # 11018 <watchlist_num>
    5168:	39 45 e4             	cmp    DWORD PTR [rbp-0x1c],eax
    516b:	0f 8e 28 ff ff ff    	jle    5099 <verify_ip_addr+0x24>
    5171:	bf 90 02 00 00       	mov    edi,0x290
    5176:	e8 45 d4 ff ff       	call   25c0 <malloc@plt>
    517b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    517f:	8b 05 93 be 00 00    	mov    eax,DWORD PTR [rip+0xbe93]        # 11018 <watchlist_num>
    5185:	83 c0 01             	add    eax,0x1
    5188:	89 05 8a be 00 00    	mov    DWORD PTR [rip+0xbe8a],eax        # 11018 <watchlist_num>
    518e:	8b 05 84 be 00 00    	mov    eax,DWORD PTR [rip+0xbe84]        # 11018 <watchlist_num>
    5194:	48 63 d0             	movsxd rdx,eax
    5197:	48 89 d0             	mov    rax,rdx
    519a:	48 c1 e0 02          	shl    rax,0x2
    519e:	48 01 d0             	add    rax,rdx
    51a1:	48 c1 e0 03          	shl    rax,0x3
    51a5:	48 01 d0             	add    rax,rdx
    51a8:	48 c1 e0 04          	shl    rax,0x4
    51ac:	48 89 c1             	mov    rcx,rax
    51af:	48 8d 05 6a e3 0e 00 	lea    rax,[rip+0xee36a]        # f3520 <watchlist>
    51b6:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    51ba:	48 01 c8             	add    rax,rcx
    51bd:	48 89 d6             	mov    rsi,rdx
    51c0:	ba 52 00 00 00       	mov    edx,0x52
    51c5:	48 89 c7             	mov    rdi,rax
    51c8:	48 89 d1             	mov    rcx,rdx
    51cb:	f3 48 a5             	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
    51ce:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    51d2:	48 83 c0 08          	add    rax,0x8
    51d6:	ba 0f 00 00 00       	mov    edx,0xf
    51db:	be 00 00 00 00       	mov    esi,0x0
    51e0:	48 89 c7             	mov    rdi,rax
    51e3:	e8 08 d3 ff ff       	call   24f0 <memset@plt>
    51e8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    51ec:	48 8d 48 08          	lea    rcx,[rax+0x8]
    51f0:	8b 05 22 be 00 00    	mov    eax,DWORD PTR [rip+0xbe22]        # 11018 <watchlist_num>
    51f6:	48 63 d0             	movsxd rdx,eax
    51f9:	48 89 d0             	mov    rax,rdx
    51fc:	48 c1 e0 02          	shl    rax,0x2
    5200:	48 01 d0             	add    rax,rdx
    5203:	48 c1 e0 03          	shl    rax,0x3
    5207:	48 01 d0             	add    rax,rdx
    520a:	48 c1 e0 04          	shl    rax,0x4
    520e:	48 8d 15 0b e3 0e 00 	lea    rdx,[rip+0xee30b]        # f3520 <watchlist>
    5215:	48 01 d0             	add    rax,rdx
    5218:	48 83 c0 08          	add    rax,0x8
    521c:	48 89 ce             	mov    rsi,rcx
    521f:	48 89 c7             	mov    rdi,rax
    5222:	e8 f9 d5 ff ff       	call   2820 <strcpy@plt>
    5227:	8b 05 eb bd 00 00    	mov    eax,DWORD PTR [rip+0xbdeb]        # 11018 <watchlist_num>
    522d:	48 63 d0             	movsxd rdx,eax
    5230:	48 89 d0             	mov    rax,rdx
    5233:	48 c1 e0 02          	shl    rax,0x2
    5237:	48 01 d0             	add    rax,rdx
    523a:	48 c1 e0 03          	shl    rax,0x3
    523e:	48 01 d0             	add    rax,rdx
    5241:	48 c1 e0 04          	shl    rax,0x4
    5245:	48 8d 15 d4 e2 0e 00 	lea    rdx,[rip+0xee2d4]        # f3520 <watchlist>
    524c:	48 01 d0             	add    rax,rdx
    524f:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    5253:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5257:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    525a:	84 c0                	test   al,al
    525c:	74 36                	je     5294 <verify_ip_addr+0x21f>
    525e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5262:	8b 80 80 02 00 00    	mov    eax,DWORD PTR [rax+0x280]
    5268:	8d 50 01             	lea    edx,[rax+0x1]
    526b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    526f:	89 90 80 02 00 00    	mov    DWORD PTR [rax+0x280],edx
    5275:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5279:	8b 90 88 02 00 00    	mov    edx,DWORD PTR [rax+0x288]
    527f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5283:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    5286:	01 c2                	add    edx,eax
    5288:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    528c:	89 90 88 02 00 00    	mov    DWORD PTR [rax+0x288],edx
    5292:	eb 34                	jmp    52c8 <verify_ip_addr+0x253>
    5294:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5298:	8b 80 7c 02 00 00    	mov    eax,DWORD PTR [rax+0x27c]
    529e:	8d 50 01             	lea    edx,[rax+0x1]
    52a1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52a5:	89 90 7c 02 00 00    	mov    DWORD PTR [rax+0x27c],edx
    52ab:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52af:	8b 90 84 02 00 00    	mov    edx,DWORD PTR [rax+0x284]
    52b5:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    52b9:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    52bc:	01 c2                	add    edx,eax
    52be:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52c2:	89 90 84 02 00 00    	mov    DWORD PTR [rax+0x284],edx
    52c8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52cc:	8b 90 8c 02 00 00    	mov    edx,DWORD PTR [rax+0x28c]
    52d2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    52d6:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    52d9:	01 c2                	add    edx,eax
    52db:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52df:	89 90 8c 02 00 00    	mov    DWORD PTR [rax+0x28c],edx
    52e5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52e9:	8b 80 7c 02 00 00    	mov    eax,DWORD PTR [rax+0x27c]
    52ef:	8d 14 00             	lea    edx,[rax+rax*1]
    52f2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52f6:	89 90 58 02 00 00    	mov    DWORD PTR [rax+0x258],edx
    52fc:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5300:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    5303:	83 f8 5e             	cmp    eax,0x5e
    5306:	0f 84 9b 00 00 00    	je     53a7 <verify_ip_addr+0x332>
    530c:	83 f8 5e             	cmp    eax,0x5e
    530f:	0f 8f cf 00 00 00    	jg     53e4 <verify_ip_addr+0x36f>
    5315:	83 f8 5c             	cmp    eax,0x5c
    5318:	74 0a                	je     5324 <verify_ip_addr+0x2af>
    531a:	83 f8 5d             	cmp    eax,0x5d
    531d:	74 48                	je     5367 <verify_ip_addr+0x2f2>
    531f:	e9 c0 00 00 00       	jmp    53e4 <verify_ip_addr+0x36f>
    5324:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5328:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    532b:	84 c0                	test   al,al
    532d:	74 1c                	je     534b <verify_ip_addr+0x2d6>
    532f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5333:	8b 80 5c 02 00 00    	mov    eax,DWORD PTR [rax+0x25c]
    5339:	8d 50 01             	lea    edx,[rax+0x1]
    533c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5340:	89 90 5c 02 00 00    	mov    DWORD PTR [rax+0x25c],edx
    5346:	e9 d5 00 00 00       	jmp    5420 <verify_ip_addr+0x3ab>
    534b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    534f:	8b 80 68 02 00 00    	mov    eax,DWORD PTR [rax+0x268]
    5355:	8d 50 01             	lea    edx,[rax+0x1]
    5358:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    535c:	89 90 68 02 00 00    	mov    DWORD PTR [rax+0x268],edx
    5362:	e9 b9 00 00 00       	jmp    5420 <verify_ip_addr+0x3ab>
    5367:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    536b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    536e:	84 c0                	test   al,al
    5370:	74 1c                	je     538e <verify_ip_addr+0x319>
    5372:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5376:	8b 80 60 02 00 00    	mov    eax,DWORD PTR [rax+0x260]
    537c:	8d 50 01             	lea    edx,[rax+0x1]
    537f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5383:	89 90 60 02 00 00    	mov    DWORD PTR [rax+0x260],edx
    5389:	e9 92 00 00 00       	jmp    5420 <verify_ip_addr+0x3ab>
    538e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5392:	8b 80 6c 02 00 00    	mov    eax,DWORD PTR [rax+0x26c]
    5398:	8d 50 01             	lea    edx,[rax+0x1]
    539b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    539f:	89 90 6c 02 00 00    	mov    DWORD PTR [rax+0x26c],edx
    53a5:	eb 79                	jmp    5420 <verify_ip_addr+0x3ab>
    53a7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    53ab:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    53ae:	84 c0                	test   al,al
    53b0:	74 19                	je     53cb <verify_ip_addr+0x356>
    53b2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53b6:	8b 80 64 02 00 00    	mov    eax,DWORD PTR [rax+0x264]
    53bc:	8d 50 01             	lea    edx,[rax+0x1]
    53bf:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53c3:	89 90 64 02 00 00    	mov    DWORD PTR [rax+0x264],edx
    53c9:	eb 55                	jmp    5420 <verify_ip_addr+0x3ab>
    53cb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53cf:	8b 80 70 02 00 00    	mov    eax,DWORD PTR [rax+0x270]
    53d5:	8d 50 01             	lea    edx,[rax+0x1]
    53d8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53dc:	89 90 70 02 00 00    	mov    DWORD PTR [rax+0x270],edx
    53e2:	eb 3c                	jmp    5420 <verify_ip_addr+0x3ab>
    53e4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    53e8:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    53eb:	84 c0                	test   al,al
    53ed:	74 19                	je     5408 <verify_ip_addr+0x393>
    53ef:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53f3:	8b 80 74 02 00 00    	mov    eax,DWORD PTR [rax+0x274]
    53f9:	8d 50 01             	lea    edx,[rax+0x1]
    53fc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5400:	89 90 74 02 00 00    	mov    DWORD PTR [rax+0x274],edx
    5406:	eb 17                	jmp    541f <verify_ip_addr+0x3aa>
    5408:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    540c:	8b 80 78 02 00 00    	mov    eax,DWORD PTR [rax+0x278]
    5412:	8d 50 01             	lea    edx,[rax+0x1]
    5415:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5419:	89 90 78 02 00 00    	mov    DWORD PTR [rax+0x278],edx
    541f:	90                   	nop
    5420:	b8 01 00 00 00       	mov    eax,0x1
    5425:	c9                   	leave  
    5426:	c3                   	ret    

0000000000005427 <ascii_hexdump>:
    5427:	f3 0f 1e fa          	endbr64 
    542b:	55                   	push   rbp
    542c:	48 89 e5             	mov    rbp,rsp
    542f:	48 83 ec 20          	sub    rsp,0x20
    5433:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    5437:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    543a:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    5441:	eb 52                	jmp    5495 <ascii_hexdump+0x6e>
    5443:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5446:	48 63 d0             	movsxd rdx,eax
    5449:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    544d:	48 01 d0             	add    rax,rdx
    5450:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5453:	3c 20                	cmp    al,0x20
    5455:	76 30                	jbe    5487 <ascii_hexdump+0x60>
    5457:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    545a:	48 63 d0             	movsxd rdx,eax
    545d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5461:	48 01 d0             	add    rax,rdx
    5464:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5467:	3c 7e                	cmp    al,0x7e
    5469:	77 1c                	ja     5487 <ascii_hexdump+0x60>
    546b:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    546e:	48 63 d0             	movsxd rdx,eax
    5471:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5475:	48 01 d0             	add    rax,rdx
    5478:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    547b:	0f b6 c0             	movzx  eax,al
    547e:	89 c7                	mov    edi,eax
    5480:	e8 eb d0 ff ff       	call   2570 <putchar@plt>
    5485:	eb 0a                	jmp    5491 <ascii_hexdump+0x6a>
    5487:	bf 2e 00 00 00       	mov    edi,0x2e
    548c:	e8 df d0 ff ff       	call   2570 <putchar@plt>
    5491:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    5495:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5498:	3b 45 e4             	cmp    eax,DWORD PTR [rbp-0x1c]
    549b:	7c a6                	jl     5443 <ascii_hexdump+0x1c>
    549d:	bf 0a 00 00 00       	mov    edi,0xa
    54a2:	e8 c9 d0 ff ff       	call   2570 <putchar@plt>
    54a7:	90                   	nop
    54a8:	c9                   	leave  
    54a9:	c3                   	ret    

00000000000054aa <stdout_alert>:
    54aa:	f3 0f 1e fa          	endbr64 
    54ae:	55                   	push   rbp
    54af:	48 89 e5             	mov    rbp,rsp
    54b2:	53                   	push   rbx
    54b3:	48 81 ec c8 01 00 00 	sub    rsp,0x1c8
    54ba:	48 89 bd 48 fe ff ff 	mov    QWORD PTR [rbp-0x1b8],rdi
    54c1:	48 89 b5 40 fe ff ff 	mov    QWORD PTR [rbp-0x1c0],rsi
    54c8:	89 95 3c fe ff ff    	mov    DWORD PTR [rbp-0x1c4],edx
    54ce:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    54d5:	00 00 
    54d7:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    54db:	31 c0                	xor    eax,eax
    54dd:	bf 00 00 00 00       	mov    edi,0x0
    54e2:	e8 49 d4 ff ff       	call   2930 <time@plt>
    54e7:	48 89 85 50 fe ff ff 	mov    QWORD PTR [rbp-0x1b0],rax
    54ee:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
    54f5:	48 89 c7             	mov    rdi,rax
    54f8:	e8 f3 d3 ff ff       	call   28f0 <localtime@plt>
    54fd:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    5500:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    5504:	48 89 8d 60 fe ff ff 	mov    QWORD PTR [rbp-0x1a0],rcx
    550b:	48 89 9d 68 fe ff ff 	mov    QWORD PTR [rbp-0x198],rbx
    5512:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    5516:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    551a:	48 89 8d 70 fe ff ff 	mov    QWORD PTR [rbp-0x190],rcx
    5521:	48 89 9d 78 fe ff ff 	mov    QWORD PTR [rbp-0x188],rbx
    5528:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    552c:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    5530:	48 89 8d 80 fe ff ff 	mov    QWORD PTR [rbp-0x180],rcx
    5537:	48 89 9d 88 fe ff ff 	mov    QWORD PTR [rbp-0x178],rbx
    553e:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    5542:	48 89 85 90 fe ff ff 	mov    QWORD PTR [rbp-0x170],rax
    5549:	8b bd 60 fe ff ff    	mov    edi,DWORD PTR [rbp-0x1a0]
    554f:	8b b5 64 fe ff ff    	mov    esi,DWORD PTR [rbp-0x19c]
    5555:	44 8b 8d 68 fe ff ff 	mov    r9d,DWORD PTR [rbp-0x198]
    555c:	44 8b 85 6c fe ff ff 	mov    r8d,DWORD PTR [rbp-0x194]
    5563:	8b 85 70 fe ff ff    	mov    eax,DWORD PTR [rbp-0x190]
    5569:	8d 48 01             	lea    ecx,[rax+0x1]
    556c:	8b 85 74 fe ff ff    	mov    eax,DWORD PTR [rbp-0x18c]
    5572:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    5578:	48 8d 85 a0 fe ff ff 	lea    rax,[rbp-0x160]
    557f:	57                   	push   rdi
    5580:	56                   	push   rsi
    5581:	48 8d 35 3e 75 00 00 	lea    rsi,[rip+0x753e]        # cac6 <_IO_stdin_used+0xac6>
    5588:	48 89 c7             	mov    rdi,rax
    558b:	b8 00 00 00 00       	mov    eax,0x0
    5590:	e8 1b d1 ff ff       	call   26b0 <sprintf@plt>
    5595:	48 83 c4 10          	add    rsp,0x10
    5599:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    55a0:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    55a3:	3d 80 00 00 00       	cmp    eax,0x80
    55a8:	75 4e                	jne    55f8 <stdout_alert+0x14e>
    55aa:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    55b1:	48 8b 78 10          	mov    rdi,QWORD PTR [rax+0x10]
    55b5:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    55bc:	48 8b 70 08          	mov    rsi,QWORD PTR [rax+0x8]
    55c0:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
    55c7:	48 8d 88 50 01 00 00 	lea    rcx,[rax+0x150]
    55ce:	48 8d 95 a0 fe ff ff 	lea    rdx,[rbp-0x160]
    55d5:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    55dc:	49 89 f9             	mov    r9,rdi
    55df:	49 89 f0             	mov    r8,rsi
    55e2:	48 8d 35 f9 74 00 00 	lea    rsi,[rip+0x74f9]        # cae2 <_IO_stdin_used+0xae2>
    55e9:	48 89 c7             	mov    rdi,rax
    55ec:	b8 00 00 00 00       	mov    eax,0x0
    55f1:	e8 ba d0 ff ff       	call   26b0 <sprintf@plt>
    55f6:	eb 61                	jmp    5659 <stdout_alert+0x1af>
    55f8:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    55ff:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    5602:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    5609:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    560d:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    5614:	44 8b 48 24          	mov    r9d,DWORD PTR [rax+0x24]
    5618:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    561f:	4c 8b 40 08          	mov    r8,QWORD PTR [rax+0x8]
    5623:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
    562a:	48 8d 88 50 01 00 00 	lea    rcx,[rax+0x150]
    5631:	48 8d 95 a0 fe ff ff 	lea    rdx,[rbp-0x160]
    5638:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    563f:	57                   	push   rdi
    5640:	56                   	push   rsi
    5641:	48 8d 35 aa 74 00 00 	lea    rsi,[rip+0x74aa]        # caf2 <_IO_stdin_used+0xaf2>
    5648:	48 89 c7             	mov    rdi,rax
    564b:	b8 00 00 00 00       	mov    eax,0x0
    5650:	e8 5b d0 ff ff       	call   26b0 <sprintf@plt>
    5655:	48 83 c4 10          	add    rsp,0x10
    5659:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    5660:	48 89 c6             	mov    rsi,rax
    5663:	48 8d 3d 9e 74 00 00 	lea    rdi,[rip+0x749e]        # cb08 <_IO_stdin_used+0xb08>
    566a:	b8 00 00 00 00       	mov    eax,0x0
    566f:	e8 6c ce ff ff       	call   24e0 <printf@plt>
    5674:	48 8b 05 b5 b9 00 00 	mov    rax,QWORD PTR [rip+0xb9b5]        # 11030 <def_log_file>
    567b:	48 8d 35 89 74 00 00 	lea    rsi,[rip+0x7489]        # cb0b <_IO_stdin_used+0xb0b>
    5682:	48 89 c7             	mov    rdi,rax
    5685:	e8 46 cf ff ff       	call   25d0 <fopen@plt>
    568a:	48 89 85 58 fe ff ff 	mov    QWORD PTR [rbp-0x1a8],rax
    5691:	48 8b 95 58 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1a8]
    5698:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    569f:	48 89 d6             	mov    rsi,rdx
    56a2:	48 89 c7             	mov    rdi,rax
    56a5:	e8 86 d0 ff ff       	call   2730 <fputs@plt>
    56aa:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    56b1:	48 89 c7             	mov    rdi,rax
    56b4:	e8 a7 d1 ff ff       	call   2860 <fclose@plt>
    56b9:	90                   	nop
    56ba:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    56be:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    56c5:	00 00 
    56c7:	74 05                	je     56ce <stdout_alert+0x224>
    56c9:	e8 12 d1 ff ff       	call   27e0 <__stack_chk_fail@plt>
    56ce:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    56d2:	c9                   	leave  
    56d3:	c3                   	ret    

00000000000056d4 <str_match_parser>:
    56d4:	f3 0f 1e fa          	endbr64 
    56d8:	55                   	push   rbp
    56d9:	48 89 e5             	mov    rbp,rsp
    56dc:	53                   	push   rbx
    56dd:	48 83 ec 48          	sub    rsp,0x48
    56e1:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    56e5:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
    56e9:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    56f0:	00 00 
    56f2:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    56f6:	31 c0                	xor    eax,eax
    56f8:	48 89 e0             	mov    rax,rsp
    56fb:	48 89 c3             	mov    rbx,rax
    56fe:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5702:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5705:	85 c0                	test   eax,eax
    5707:	75 0a                	jne    5713 <str_match_parser+0x3f>
    5709:	b8 00 00 00 00       	mov    eax,0x0
    570e:	e9 e1 01 00 00       	jmp    58f4 <str_match_parser+0x220>
    5713:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5717:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    571a:	83 c0 01             	add    eax,0x1
    571d:	01 c0                	add    eax,eax
    571f:	48 98                	cdqe   
    5721:	48 83 e8 01          	sub    rax,0x1
    5725:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    5729:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    572d:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5730:	83 c0 01             	add    eax,0x1
    5733:	01 c0                	add    eax,eax
    5735:	48 98                	cdqe   
    5737:	49 89 c2             	mov    r10,rax
    573a:	41 bb 00 00 00 00    	mov    r11d,0x0
    5740:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5744:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5747:	83 c0 01             	add    eax,0x1
    574a:	01 c0                	add    eax,eax
    574c:	48 98                	cdqe   
    574e:	49 89 c0             	mov    r8,rax
    5751:	41 b9 00 00 00 00    	mov    r9d,0x0
    5757:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    575b:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    575e:	83 c0 01             	add    eax,0x1
    5761:	01 c0                	add    eax,eax
    5763:	48 98                	cdqe   
    5765:	ba 10 00 00 00       	mov    edx,0x10
    576a:	48 83 ea 01          	sub    rdx,0x1
    576e:	48 01 d0             	add    rax,rdx
    5771:	be 10 00 00 00       	mov    esi,0x10
    5776:	ba 00 00 00 00       	mov    edx,0x0
    577b:	48 f7 f6             	div    rsi
    577e:	48 6b c0 10          	imul   rax,rax,0x10
    5782:	48 89 c1             	mov    rcx,rax
    5785:	48 81 e1 00 f0 ff ff 	and    rcx,0xfffffffffffff000
    578c:	48 89 e2             	mov    rdx,rsp
    578f:	48 29 ca             	sub    rdx,rcx
    5792:	48 39 d4             	cmp    rsp,rdx
    5795:	74 12                	je     57a9 <str_match_parser+0xd5>
    5797:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    579e:	48 83 8c 24 f8 0f 00 	or     QWORD PTR [rsp+0xff8],0x0
    57a5:	00 00 
    57a7:	eb e9                	jmp    5792 <str_match_parser+0xbe>
    57a9:	48 89 c2             	mov    rdx,rax
    57ac:	81 e2 ff 0f 00 00    	and    edx,0xfff
    57b2:	48 29 d4             	sub    rsp,rdx
    57b5:	48 89 c2             	mov    rdx,rax
    57b8:	81 e2 ff 0f 00 00    	and    edx,0xfff
    57be:	48 85 d2             	test   rdx,rdx
    57c1:	74 10                	je     57d3 <str_match_parser+0xff>
    57c3:	25 ff 0f 00 00       	and    eax,0xfff
    57c8:	48 83 e8 08          	sub    rax,0x8
    57cc:	48 01 e0             	add    rax,rsp
    57cf:	48 83 08 00          	or     QWORD PTR [rax],0x0
    57d3:	48 89 e0             	mov    rax,rsp
    57d6:	48 83 c0 00          	add    rax,0x0
    57da:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    57de:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    57e2:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    57e5:	83 c0 01             	add    eax,0x1
    57e8:	01 c0                	add    eax,eax
    57ea:	48 63 d0             	movsxd rdx,eax
    57ed:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    57f1:	be 00 00 00 00       	mov    esi,0x0
    57f6:	48 89 c7             	mov    rdi,rax
    57f9:	e8 f2 cc ff ff       	call   24f0 <memset@plt>
    57fe:	c7 45 d4 00 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x0
    5805:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5809:	8b 80 4c 03 00 00    	mov    eax,DWORD PTR [rax+0x34c]
    580f:	85 c0                	test   eax,eax
    5811:	74 5f                	je     5872 <str_match_parser+0x19e>
    5813:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5817:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    581a:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
    581d:	eb 42                	jmp    5861 <str_match_parser+0x18d>
    581f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5823:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    5826:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
    5829:	48 98                	cdqe   
    582b:	48 01 d0             	add    rax,rdx
    582e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5831:	0f b6 d0             	movzx  edx,al
    5834:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    5837:	8d 48 01             	lea    ecx,[rax+0x1]
    583a:	89 4d d4             	mov    DWORD PTR [rbp-0x2c],ecx
    583d:	01 c0                	add    eax,eax
    583f:	48 63 c8             	movsxd rcx,eax
    5842:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    5846:	48 01 c8             	add    rax,rcx
    5849:	48 8d 35 bd 72 00 00 	lea    rsi,[rip+0x72bd]        # cb0d <_IO_stdin_used+0xb0d>
    5850:	48 89 c7             	mov    rdi,rax
    5853:	b8 00 00 00 00       	mov    eax,0x0
    5858:	e8 53 ce ff ff       	call   26b0 <sprintf@plt>
    585d:	83 45 d0 01          	add    DWORD PTR [rbp-0x30],0x1
    5861:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5865:	8b 80 4c 03 00 00    	mov    eax,DWORD PTR [rax+0x34c]
    586b:	39 45 d0             	cmp    DWORD PTR [rbp-0x30],eax
    586e:	7c af                	jl     581f <str_match_parser+0x14b>
    5870:	eb 5a                	jmp    58cc <str_match_parser+0x1f8>
    5872:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5876:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    5879:	89 45 cc             	mov    DWORD PTR [rbp-0x34],eax
    587c:	eb 42                	jmp    58c0 <str_match_parser+0x1ec>
    587e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5882:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    5885:	8b 45 cc             	mov    eax,DWORD PTR [rbp-0x34]
    5888:	48 98                	cdqe   
    588a:	48 01 d0             	add    rax,rdx
    588d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5890:	0f b6 d0             	movzx  edx,al
    5893:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    5896:	8d 48 01             	lea    ecx,[rax+0x1]
    5899:	89 4d d4             	mov    DWORD PTR [rbp-0x2c],ecx
    589c:	01 c0                	add    eax,eax
    589e:	48 63 c8             	movsxd rcx,eax
    58a1:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    58a5:	48 01 c8             	add    rax,rcx
    58a8:	48 8d 35 5e 72 00 00 	lea    rsi,[rip+0x725e]        # cb0d <_IO_stdin_used+0xb0d>
    58af:	48 89 c7             	mov    rdi,rax
    58b2:	b8 00 00 00 00       	mov    eax,0x0
    58b7:	e8 f4 cd ff ff       	call   26b0 <sprintf@plt>
    58bc:	83 45 cc 01          	add    DWORD PTR [rbp-0x34],0x1
    58c0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    58c4:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    58c7:	39 45 cc             	cmp    DWORD PTR [rbp-0x34],eax
    58ca:	7c b2                	jl     587e <str_match_parser+0x1aa>
    58cc:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    58d0:	48 8d 50 40          	lea    rdx,[rax+0x40]
    58d4:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    58d8:	48 89 d6             	mov    rsi,rdx
    58db:	48 89 c7             	mov    rdi,rax
    58de:	e8 2d ce ff ff       	call   2710 <strstr@plt>
    58e3:	48 85 c0             	test   rax,rax
    58e6:	74 07                	je     58ef <str_match_parser+0x21b>
    58e8:	b8 01 00 00 00       	mov    eax,0x1
    58ed:	eb 05                	jmp    58f4 <str_match_parser+0x220>
    58ef:	b8 00 00 00 00       	mov    eax,0x0
    58f4:	48 89 dc             	mov    rsp,rbx
    58f7:	48 8b 5d e8          	mov    rbx,QWORD PTR [rbp-0x18]
    58fb:	64 48 2b 1c 25 28 00 	sub    rbx,QWORD PTR fs:0x28
    5902:	00 00 
    5904:	74 05                	je     590b <str_match_parser+0x237>
    5906:	e8 d5 ce ff ff       	call   27e0 <__stack_chk_fail@plt>
    590b:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    590f:	c9                   	leave  
    5910:	c3                   	ret    

0000000000005911 <is_blocked_ipv4>:
    5911:	f3 0f 1e fa          	endbr64 
    5915:	55                   	push   rbp
    5916:	48 89 e5             	mov    rbp,rsp
    5919:	48 83 ec 20          	sub    rsp,0x20
    591d:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    5921:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    5928:	eb 3b                	jmp    5965 <is_blocked_ipv4+0x54>
    592a:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    592d:	48 63 d0             	movsxd rdx,eax
    5930:	48 89 d0             	mov    rax,rdx
    5933:	48 c1 e0 03          	shl    rax,0x3
    5937:	48 01 d0             	add    rax,rdx
    593a:	48 01 c0             	add    rax,rax
    593d:	48 8d 15 9c d9 0e 00 	lea    rdx,[rip+0xed99c]        # f32e0 <blocked_ipv4_addrs>
    5944:	48 01 c2             	add    rdx,rax
    5947:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    594b:	48 89 d6             	mov    rsi,rdx
    594e:	48 89 c7             	mov    rdi,rax
    5951:	e8 9a ce ff ff       	call   27f0 <strcmp@plt>
    5956:	85 c0                	test   eax,eax
    5958:	75 07                	jne    5961 <is_blocked_ipv4+0x50>
    595a:	b8 01 00 00 00       	mov    eax,0x1
    595f:	eb 14                	jmp    5975 <is_blocked_ipv4+0x64>
    5961:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    5965:	8b 05 a5 b6 00 00    	mov    eax,DWORD PTR [rip+0xb6a5]        # 11010 <blk_ipv4_len>
    596b:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    596e:	7e ba                	jle    592a <is_blocked_ipv4+0x19>
    5970:	b8 00 00 00 00       	mov    eax,0x0
    5975:	c9                   	leave  
    5976:	c3                   	ret    

0000000000005977 <none>:
    5977:	f3 0f 1e fa          	endbr64 
    597b:	55                   	push   rbp
    597c:	48 89 e5             	mov    rbp,rsp
    597f:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5983:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    5987:	b8 01 00 00 00       	mov    eax,0x1
    598c:	5d                   	pop    rbp
    598d:	c3                   	ret    

000000000000598e <pcre_match>:
    598e:	f3 0f 1e fa          	endbr64 
    5992:	55                   	push   rbp
    5993:	48 89 e5             	mov    rbp,rsp
    5996:	48 83 ec 10          	sub    rsp,0x10
    599a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    599e:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    59a2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    59a6:	48 8b 00             	mov    rax,QWORD PTR [rax]
    59a9:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    59ad:	48 8d ba d0 01 00 00 	lea    rdi,[rdx+0x1d0]
    59b4:	41 b8 00 00 00 00    	mov    r8d,0x0
    59ba:	b9 00 00 00 00       	mov    ecx,0x0
    59bf:	ba 00 00 00 00       	mov    edx,0x0
    59c4:	48 89 c6             	mov    rsi,rax
    59c7:	e8 14 cc ff ff       	call   25e0 <regexec@plt>
    59cc:	83 f8 01             	cmp    eax,0x1
    59cf:	75 07                	jne    59d8 <pcre_match+0x4a>
    59d1:	b8 00 00 00 00       	mov    eax,0x0
    59d6:	eb 05                	jmp    59dd <pcre_match+0x4f>
    59d8:	b8 01 00 00 00       	mov    eax,0x1
    59dd:	c9                   	leave  
    59de:	c3                   	ret    

00000000000059df <rule_library_parser>:
    59df:	f3 0f 1e fa          	endbr64 
    59e3:	55                   	push   rbp
    59e4:	48 89 e5             	mov    rbp,rsp
    59e7:	53                   	push   rbx
    59e8:	48 83 ec 48          	sub    rsp,0x48
    59ec:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    59f0:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    59f7:	00 00 
    59f9:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    59fd:	31 c0                	xor    eax,eax
    59ff:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5a03:	48 8d 35 0e 71 00 00 	lea    rsi,[rip+0x710e]        # cb18 <_IO_stdin_used+0xb18>
    5a0a:	48 89 c7             	mov    rdi,rax
    5a0d:	e8 be cb ff ff       	call   25d0 <fopen@plt>
    5a12:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    5a16:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    5a1b:	75 22                	jne    5a3f <rule_library_parser+0x60>
    5a1d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5a21:	48 89 c6             	mov    rsi,rax
    5a24:	48 8d 3d f5 70 00 00 	lea    rdi,[rip+0x70f5]        # cb20 <_IO_stdin_used+0xb20>
    5a2b:	b8 00 00 00 00       	mov    eax,0x0
    5a30:	e8 ab ca ff ff       	call   24e0 <printf@plt>
    5a35:	bf 01 00 00 00       	mov    edi,0x1
    5a3a:	e8 21 cb ff ff       	call   2560 <exit@plt>
    5a3f:	48 c7 45 c8 00 00 00 	mov    QWORD PTR [rbp-0x38],0x0
    5a46:	00 
    5a47:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    5a4e:	00 
    5a4f:	e9 70 05 00 00       	jmp    5fc4 <rule_library_parser+0x5e5>
    5a54:	48 8b 5d d0          	mov    rbx,QWORD PTR [rbp-0x30]
    5a58:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a5c:	48 8d 35 e3 70 00 00 	lea    rsi,[rip+0x70e3]        # cb46 <_IO_stdin_used+0xb46>
    5a63:	48 89 c7             	mov    rdi,rax
    5a66:	e8 25 ce ff ff       	call   2890 <strcspn@plt>
    5a6b:	48 01 d8             	add    rax,rbx
    5a6e:	c6 00 00             	mov    BYTE PTR [rax],0x0
    5a71:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a75:	48 89 c7             	mov    rdi,rax
    5a78:	e8 b9 05 00 00       	call   6036 <is_comment>
    5a7d:	84 c0                	test   al,al
    5a7f:	74 05                	je     5a86 <rule_library_parser+0xa7>
    5a81:	e9 3e 05 00 00       	jmp    5fc4 <rule_library_parser+0x5e5>
    5a86:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a8a:	ba 1a 00 00 00       	mov    edx,0x1a
    5a8f:	48 8d 35 b2 70 00 00 	lea    rsi,[rip+0x70b2]        # cb48 <_IO_stdin_used+0xb48>
    5a96:	48 89 c7             	mov    rdi,rax
    5a99:	e8 12 cb ff ff       	call   25b0 <strncmp@plt>
    5a9e:	85 c0                	test   eax,eax
    5aa0:	75 39                	jne    5adb <rule_library_parser+0xfc>
    5aa2:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5aa6:	48 83 c0 1a          	add    rax,0x1a
    5aaa:	48 8d 35 b2 70 00 00 	lea    rsi,[rip+0x70b2]        # cb63 <_IO_stdin_used+0xb63>
    5ab1:	48 89 c7             	mov    rdi,rax
    5ab4:	e8 37 cd ff ff       	call   27f0 <strcmp@plt>
    5ab9:	85 c0                	test   eax,eax
    5abb:	75 0f                	jne    5acc <rule_library_parser+0xed>
    5abd:	c7 05 bd b5 00 00 01 	mov    DWORD PTR [rip+0xb5bd],0x1        # 11084 <strict_icmp_timestamp_req>
    5ac4:	00 00 00 
    5ac7:	e9 e2 04 00 00       	jmp    5fae <rule_library_parser+0x5cf>
    5acc:	c7 05 ae b5 00 00 00 	mov    DWORD PTR [rip+0xb5ae],0x0        # 11084 <strict_icmp_timestamp_req>
    5ad3:	00 00 00 
    5ad6:	e9 d3 04 00 00       	jmp    5fae <rule_library_parser+0x5cf>
    5adb:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5adf:	ba 1d 00 00 00       	mov    edx,0x1d
    5ae4:	48 8d 35 7c 70 00 00 	lea    rsi,[rip+0x707c]        # cb67 <_IO_stdin_used+0xb67>
    5aeb:	48 89 c7             	mov    rdi,rax
    5aee:	e8 bd ca ff ff       	call   25b0 <strncmp@plt>
    5af3:	85 c0                	test   eax,eax
    5af5:	75 39                	jne    5b30 <rule_library_parser+0x151>
    5af7:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5afb:	48 83 c0 1d          	add    rax,0x1d
    5aff:	48 8d 35 5d 70 00 00 	lea    rsi,[rip+0x705d]        # cb63 <_IO_stdin_used+0xb63>
    5b06:	48 89 c7             	mov    rdi,rax
    5b09:	e8 e2 cc ff ff       	call   27f0 <strcmp@plt>
    5b0e:	85 c0                	test   eax,eax
    5b10:	75 0f                	jne    5b21 <rule_library_parser+0x142>
    5b12:	c7 05 6c b5 00 00 01 	mov    DWORD PTR [rip+0xb56c],0x1        # 11088 <strict_nmap_host_alive_check>
    5b19:	00 00 00 
    5b1c:	e9 8d 04 00 00       	jmp    5fae <rule_library_parser+0x5cf>
    5b21:	c7 05 5d b5 00 00 00 	mov    DWORD PTR [rip+0xb55d],0x0        # 11088 <strict_nmap_host_alive_check>
    5b28:	00 00 00 
    5b2b:	e9 7e 04 00 00       	jmp    5fae <rule_library_parser+0x5cf>
    5b30:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b34:	ba 17 00 00 00       	mov    edx,0x17
    5b39:	48 8d 35 45 70 00 00 	lea    rsi,[rip+0x7045]        # cb85 <_IO_stdin_used+0xb85>
    5b40:	48 89 c7             	mov    rdi,rax
    5b43:	e8 68 ca ff ff       	call   25b0 <strncmp@plt>
    5b48:	85 c0                	test   eax,eax
    5b4a:	75 43                	jne    5b8f <rule_library_parser+0x1b0>
    5b4c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b50:	48 89 c7             	mov    rdi,rax
    5b53:	e8 18 cb ff ff       	call   2670 <strlen@plt>
    5b58:	48 83 f8 17          	cmp    rax,0x17
    5b5c:	77 16                	ja     5b74 <rule_library_parser+0x195>
    5b5e:	48 8d 3d 38 70 00 00 	lea    rdi,[rip+0x7038]        # cb9d <_IO_stdin_used+0xb9d>
    5b65:	e8 d6 c9 ff ff       	call   2540 <puts@plt>
    5b6a:	bf 01 00 00 00       	mov    edi,0x1
    5b6f:	e8 ec c9 ff ff       	call   2560 <exit@plt>
    5b74:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b78:	48 83 c0 17          	add    rax,0x17
    5b7c:	48 89 c7             	mov    rdi,rax
    5b7f:	e8 dc cb ff ff       	call   2760 <atoi@plt>
    5b84:	89 05 d6 43 10 00    	mov    DWORD PTR [rip+0x1043d6],eax        # 109f60 <clean_delay_pkts>
    5b8a:	e9 1f 04 00 00       	jmp    5fae <rule_library_parser+0x5cf>
    5b8f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b93:	ba 18 00 00 00       	mov    edx,0x18
    5b98:	48 8d 35 18 70 00 00 	lea    rsi,[rip+0x7018]        # cbb7 <_IO_stdin_used+0xbb7>
    5b9f:	48 89 c7             	mov    rdi,rax
    5ba2:	e8 09 ca ff ff       	call   25b0 <strncmp@plt>
    5ba7:	85 c0                	test   eax,eax
    5ba9:	75 46                	jne    5bf1 <rule_library_parser+0x212>
    5bab:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5baf:	48 89 c7             	mov    rdi,rax
    5bb2:	e8 b9 ca ff ff       	call   2670 <strlen@plt>
    5bb7:	48 83 f8 18          	cmp    rax,0x18
    5bbb:	75 16                	jne    5bd3 <rule_library_parser+0x1f4>
    5bbd:	48 8d 3d d9 6f 00 00 	lea    rdi,[rip+0x6fd9]        # cb9d <_IO_stdin_used+0xb9d>
    5bc4:	e8 77 c9 ff ff       	call   2540 <puts@plt>
    5bc9:	bf 01 00 00 00       	mov    edi,0x1
    5bce:	e8 8d c9 ff ff       	call   2560 <exit@plt>
    5bd3:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5bd7:	48 83 c0 18          	add    rax,0x18
    5bdb:	48 89 c7             	mov    rdi,rax
    5bde:	e8 7d cb ff ff       	call   2760 <atoi@plt>
    5be3:	48 98                	cdqe   
    5be5:	48 89 05 cc b6 00 00 	mov    QWORD PTR [rip+0xb6cc],rax        # 112b8 <clean_delay>
    5bec:	e9 bd 03 00 00       	jmp    5fae <rule_library_parser+0x5cf>
    5bf1:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5bf5:	ba 0b 00 00 00       	mov    edx,0xb
    5bfa:	48 8d 35 cf 6f 00 00 	lea    rsi,[rip+0x6fcf]        # cbd0 <_IO_stdin_used+0xbd0>
    5c01:	48 89 c7             	mov    rdi,rax
    5c04:	e8 a7 c9 ff ff       	call   25b0 <strncmp@plt>
    5c09:	85 c0                	test   eax,eax
    5c0b:	75 33                	jne    5c40 <rule_library_parser+0x261>
    5c0d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c11:	48 83 c0 0b          	add    rax,0xb
    5c15:	48 8d 35 47 6f 00 00 	lea    rsi,[rip+0x6f47]        # cb63 <_IO_stdin_used+0xb63>
    5c1c:	48 89 c7             	mov    rdi,rax
    5c1f:	e8 cc cb ff ff       	call   27f0 <strcmp@plt>
    5c24:	85 c0                	test   eax,eax
    5c26:	75 0c                	jne    5c34 <rule_library_parser+0x255>
    5c28:	c6 05 f2 42 10 00 01 	mov    BYTE PTR [rip+0x1042f2],0x1        # 109f21 <use_sqlite>
    5c2f:	e9 7a 03 00 00       	jmp    5fae <rule_library_parser+0x5cf>
    5c34:	c6 05 e6 42 10 00 00 	mov    BYTE PTR [rip+0x1042e6],0x0        # 109f21 <use_sqlite>
    5c3b:	e9 6e 03 00 00       	jmp    5fae <rule_library_parser+0x5cf>
    5c40:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c44:	ba 15 00 00 00       	mov    edx,0x15
    5c49:	48 8d 35 8c 6f 00 00 	lea    rsi,[rip+0x6f8c]        # cbdc <_IO_stdin_used+0xbdc>
    5c50:	48 89 c7             	mov    rdi,rax
    5c53:	e8 58 c9 ff ff       	call   25b0 <strncmp@plt>
    5c58:	85 c0                	test   eax,eax
    5c5a:	75 34                	jne    5c90 <rule_library_parser+0x2b1>
    5c5c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c60:	48 83 c0 15          	add    rax,0x15
    5c64:	48 89 c6             	mov    rsi,rax
    5c67:	48 8d 3d d2 42 10 00 	lea    rdi,[rip+0x1042d2]        # 109f40 <sqlite_db_path>
    5c6e:	e8 ad cb ff ff       	call   2820 <strcpy@plt>
    5c73:	48 8d 35 c6 42 10 00 	lea    rsi,[rip+0x1042c6]        # 109f40 <sqlite_db_path>
    5c7a:	48 8d 3d 71 6f 00 00 	lea    rdi,[rip+0x6f71]        # cbf2 <_IO_stdin_used+0xbf2>
    5c81:	b8 00 00 00 00       	mov    eax,0x0
    5c86:	e8 f0 2c 00 00       	call   897b <livedebug>
    5c8b:	e9 1e 03 00 00       	jmp    5fae <rule_library_parser+0x5cf>
    5c90:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c94:	ba 0b 00 00 00       	mov    edx,0xb
    5c99:	48 8d 35 6b 6f 00 00 	lea    rsi,[rip+0x6f6b]        # cc0b <_IO_stdin_used+0xc0b>
    5ca0:	48 89 c7             	mov    rdi,rax
    5ca3:	e8 08 c9 ff ff       	call   25b0 <strncmp@plt>
    5ca8:	85 c0                	test   eax,eax
    5caa:	75 34                	jne    5ce0 <rule_library_parser+0x301>
    5cac:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5cb0:	48 83 c0 0b          	add    rax,0xb
    5cb4:	48 89 c6             	mov    rsi,rax
    5cb7:	48 8d 3d b2 42 10 00 	lea    rdi,[rip+0x1042b2]        # 109f70 <input_adapter>
    5cbe:	e8 5d cb ff ff       	call   2820 <strcpy@plt>
    5cc3:	48 8d 35 a6 42 10 00 	lea    rsi,[rip+0x1042a6]        # 109f70 <input_adapter>
    5cca:	48 8d 3d 47 6f 00 00 	lea    rdi,[rip+0x6f47]        # cc18 <_IO_stdin_used+0xc18>
    5cd1:	b8 00 00 00 00       	mov    eax,0x0
    5cd6:	e8 a0 2c 00 00       	call   897b <livedebug>
    5cdb:	e9 ce 02 00 00       	jmp    5fae <rule_library_parser+0x5cf>
    5ce0:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ce4:	ba 0c 00 00 00       	mov    edx,0xc
    5ce9:	48 8d 35 5b 6f 00 00 	lea    rsi,[rip+0x6f5b]        # cc4b <_IO_stdin_used+0xc4b>
    5cf0:	48 89 c7             	mov    rdi,rax
    5cf3:	e8 b8 c8 ff ff       	call   25b0 <strncmp@plt>
    5cf8:	85 c0                	test   eax,eax
    5cfa:	75 34                	jne    5d30 <rule_library_parser+0x351>
    5cfc:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d00:	48 83 c0 0c          	add    rax,0xc
    5d04:	48 89 c6             	mov    rsi,rax
    5d07:	48 8d 3d 72 42 10 00 	lea    rdi,[rip+0x104272]        # 109f80 <output_adapter>
    5d0e:	e8 0d cb ff ff       	call   2820 <strcpy@plt>
    5d13:	48 8d 35 66 42 10 00 	lea    rsi,[rip+0x104266]        # 109f80 <output_adapter>
    5d1a:	48 8d 3d 37 6f 00 00 	lea    rdi,[rip+0x6f37]        # cc58 <_IO_stdin_used+0xc58>
    5d21:	b8 00 00 00 00       	mov    eax,0x0
    5d26:	e8 50 2c 00 00       	call   897b <livedebug>
    5d2b:	e9 7e 02 00 00       	jmp    5fae <rule_library_parser+0x5cf>
    5d30:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d34:	ba 05 00 00 00       	mov    edx,0x5
    5d39:	48 8d 35 4c 6f 00 00 	lea    rsi,[rip+0x6f4c]        # cc8c <_IO_stdin_used+0xc8c>
    5d40:	48 89 c7             	mov    rdi,rax
    5d43:	e8 68 c8 ff ff       	call   25b0 <strncmp@plt>
    5d48:	85 c0                	test   eax,eax
    5d4a:	0f 85 81 00 00 00    	jne    5dd1 <rule_library_parser+0x3f2>
    5d50:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d54:	48 83 c0 05          	add    rax,0x5
    5d58:	48 89 c6             	mov    rsi,rax
    5d5b:	48 8d 3d 30 6f 00 00 	lea    rdi,[rip+0x6f30]        # cc92 <_IO_stdin_used+0xc92>
    5d62:	b8 00 00 00 00       	mov    eax,0x0
    5d67:	e8 0f 2c 00 00       	call   897b <livedebug>
    5d6c:	48 8d 3d 28 6f 00 00 	lea    rdi,[rip+0x6f28]        # cc9b <_IO_stdin_used+0xc9b>
    5d73:	b8 00 00 00 00       	mov    eax,0x0
    5d78:	e8 63 c7 ff ff       	call   24e0 <printf@plt>
    5d7d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d81:	48 83 c0 05          	add    rax,0x5
    5d85:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5d88:	0f b6 15 18 6f 00 00 	movzx  edx,BYTE PTR [rip+0x6f18]        # cca7 <_IO_stdin_used+0xca7>
    5d8f:	0f b6 c0             	movzx  eax,al
    5d92:	0f b6 d2             	movzx  edx,dl
    5d95:	29 d0                	sub    eax,edx
    5d97:	85 c0                	test   eax,eax
    5d99:	75 1b                	jne    5db6 <rule_library_parser+0x3d7>
    5d9b:	c7 05 7f b2 00 00 02 	mov    DWORD PTR [rip+0xb27f],0x2        # 11024 <VIGIL_MODE>
    5da2:	00 00 00 
    5da5:	48 8d 3d fd 6e 00 00 	lea    rdi,[rip+0x6efd]        # cca9 <_IO_stdin_used+0xca9>
    5dac:	e8 8f c7 ff ff       	call   2540 <puts@plt>
    5db1:	e9 f8 01 00 00       	jmp    5fae <rule_library_parser+0x5cf>
    5db6:	c7 05 64 b2 00 00 01 	mov    DWORD PTR [rip+0xb264],0x1        # 11024 <VIGIL_MODE>
    5dbd:	00 00 00 
    5dc0:	48 8d 3d f9 6e 00 00 	lea    rdi,[rip+0x6ef9]        # ccc0 <_IO_stdin_used+0xcc0>
    5dc7:	e8 74 c7 ff ff       	call   2540 <puts@plt>
    5dcc:	e9 dd 01 00 00       	jmp    5fae <rule_library_parser+0x5cf>
    5dd1:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5dd5:	ba 08 00 00 00       	mov    edx,0x8
    5dda:	48 8d 35 f6 6e 00 00 	lea    rsi,[rip+0x6ef6]        # ccd7 <_IO_stdin_used+0xcd7>
    5de1:	48 89 c7             	mov    rdi,rax
    5de4:	e8 c7 c7 ff ff       	call   25b0 <strncmp@plt>
    5de9:	85 c0                	test   eax,eax
    5deb:	75 34                	jne    5e21 <rule_library_parser+0x442>
    5ded:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5df1:	48 83 c0 08          	add    rax,0x8
    5df5:	48 89 c6             	mov    rsi,rax
    5df8:	48 8d 3d 91 41 10 00 	lea    rdi,[rip+0x104191]        # 109f90 <local_ip>
    5dff:	e8 1c ca ff ff       	call   2820 <strcpy@plt>
    5e04:	48 8d 35 85 41 10 00 	lea    rsi,[rip+0x104185]        # 109f90 <local_ip>
    5e0b:	48 8d 3d ce 6e 00 00 	lea    rdi,[rip+0x6ece]        # cce0 <_IO_stdin_used+0xce0>
    5e12:	b8 00 00 00 00       	mov    eax,0x0
    5e17:	e8 5f 2b 00 00       	call   897b <livedebug>
    5e1c:	e9 8d 01 00 00       	jmp    5fae <rule_library_parser+0x5cf>
    5e21:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e25:	ba 06 00 00 00       	mov    edx,0x6
    5e2a:	48 8d 35 ca 6e 00 00 	lea    rsi,[rip+0x6eca]        # ccfb <_IO_stdin_used+0xcfb>
    5e31:	48 89 c7             	mov    rdi,rax
    5e34:	e8 77 c7 ff ff       	call   25b0 <strncmp@plt>
    5e39:	85 c0                	test   eax,eax
    5e3b:	75 1c                	jne    5e59 <rule_library_parser+0x47a>
    5e3d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e41:	48 83 c0 06          	add    rax,0x6
    5e45:	48 89 c6             	mov    rsi,rax
    5e48:	48 8d 3d 61 41 10 00 	lea    rdi,[rip+0x104161]        # 109fb0 <def_gw>
    5e4f:	e8 cc c9 ff ff       	call   2820 <strcpy@plt>
    5e54:	e9 55 01 00 00       	jmp    5fae <rule_library_parser+0x5cf>
    5e59:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e5d:	ba 08 00 00 00       	mov    edx,0x8
    5e62:	48 8d 35 99 6e 00 00 	lea    rsi,[rip+0x6e99]        # cd02 <_IO_stdin_used+0xd02>
    5e69:	48 89 c7             	mov    rdi,rax
    5e6c:	e8 3f c7 ff ff       	call   25b0 <strncmp@plt>
    5e71:	85 c0                	test   eax,eax
    5e73:	75 3f                	jne    5eb4 <rule_library_parser+0x4d5>
    5e75:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e79:	48 83 c0 08          	add    rax,0x8
    5e7d:	48 8d 35 df 6c 00 00 	lea    rsi,[rip+0x6cdf]        # cb63 <_IO_stdin_used+0xb63>
    5e84:	48 89 c7             	mov    rdi,rax
    5e87:	e8 64 c9 ff ff       	call   27f0 <strcmp@plt>
    5e8c:	85 c0                	test   eax,eax
    5e8e:	75 18                	jne    5ea8 <rule_library_parser+0x4c9>
    5e90:	c6 05 2b 41 10 00 01 	mov    BYTE PTR [rip+0x10412b],0x1        # 109fc2 <use_spi>
    5e97:	48 8d 3d 6d 6e 00 00 	lea    rdi,[rip+0x6e6d]        # cd0b <_IO_stdin_used+0xd0b>
    5e9e:	e8 9d c6 ff ff       	call   2540 <puts@plt>
    5ea3:	e9 06 01 00 00       	jmp    5fae <rule_library_parser+0x5cf>
    5ea8:	c6 05 13 41 10 00 00 	mov    BYTE PTR [rip+0x104113],0x0        # 109fc2 <use_spi>
    5eaf:	e9 fa 00 00 00       	jmp    5fae <rule_library_parser+0x5cf>
    5eb4:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5eb8:	ba 09 00 00 00       	mov    edx,0x9
    5ebd:	48 8d 35 60 6e 00 00 	lea    rsi,[rip+0x6e60]        # cd24 <_IO_stdin_used+0xd24>
    5ec4:	48 89 c7             	mov    rdi,rax
    5ec7:	e8 e4 c6 ff ff       	call   25b0 <strncmp@plt>
    5ecc:	85 c0                	test   eax,eax
    5ece:	75 27                	jne    5ef7 <rule_library_parser+0x518>
    5ed0:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ed4:	48 89 c7             	mov    rdi,rax
    5ed7:	e8 83 01 00 00       	call   605f <rstrip>
    5edc:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ee0:	48 83 c0 09          	add    rax,0x9
    5ee4:	48 89 c7             	mov    rdi,rax
    5ee7:	e8 48 50 00 00       	call   af34 <homenet_toi>
    5eec:	89 05 d2 40 10 00    	mov    DWORD PTR [rip+0x1040d2],eax        # 109fc4 <homenet>
    5ef2:	e9 b7 00 00 00       	jmp    5fae <rule_library_parser+0x5cf>
    5ef7:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5efb:	ba 0e 00 00 00       	mov    edx,0xe
    5f00:	48 8d 35 27 6e 00 00 	lea    rsi,[rip+0x6e27]        # cd2e <_IO_stdin_used+0xd2e>
    5f07:	48 89 c7             	mov    rdi,rax
    5f0a:	e8 a1 c6 ff ff       	call   25b0 <strncmp@plt>
    5f0f:	85 c0                	test   eax,eax
    5f11:	75 24                	jne    5f37 <rule_library_parser+0x558>
    5f13:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f17:	48 89 c7             	mov    rdi,rax
    5f1a:	e8 40 01 00 00       	call   605f <rstrip>
    5f1f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f23:	48 83 c0 0e          	add    rax,0xe
    5f27:	48 89 c7             	mov    rdi,rax
    5f2a:	e8 05 50 00 00       	call   af34 <homenet_toi>
    5f2f:	89 05 93 40 10 00    	mov    DWORD PTR [rip+0x104093],eax        # 109fc8 <homenetmask>
    5f35:	eb 77                	jmp    5fae <rule_library_parser+0x5cf>
    5f37:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f3b:	ba 09 00 00 00       	mov    edx,0x9
    5f40:	48 8d 35 f6 6d 00 00 	lea    rsi,[rip+0x6df6]        # cd3d <_IO_stdin_used+0xd3d>
    5f47:	48 89 c7             	mov    rdi,rax
    5f4a:	e8 61 c6 ff ff       	call   25b0 <strncmp@plt>
    5f4f:	85 c0                	test   eax,eax
    5f51:	75 3f                	jne    5f92 <rule_library_parser+0x5b3>
    5f53:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f57:	48 89 c7             	mov    rdi,rax
    5f5a:	e8 00 01 00 00       	call   605f <rstrip>
    5f5f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f63:	48 83 c0 09          	add    rax,0x9
    5f67:	48 8d 35 d9 6d 00 00 	lea    rsi,[rip+0x6dd9]        # cd47 <_IO_stdin_used+0xd47>
    5f6e:	48 89 c7             	mov    rdi,rax
    5f71:	e8 7a c8 ff ff       	call   27f0 <strcmp@plt>
    5f76:	85 c0                	test   eax,eax
    5f78:	75 0c                	jne    5f86 <rule_library_parser+0x5a7>
    5f7a:	c7 05 e4 3f 10 00 04 	mov    DWORD PTR [rip+0x103fe4],0x4        # 109f68 <vigil_location>
    5f81:	00 00 00 
    5f84:	eb 28                	jmp    5fae <rule_library_parser+0x5cf>
    5f86:	c7 05 d8 3f 10 00 03 	mov    DWORD PTR [rip+0x103fd8],0x3        # 109f68 <vigil_location>
    5f8d:	00 00 00 
    5f90:	eb 1c                	jmp    5fae <rule_library_parser+0x5cf>
    5f92:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f96:	48 89 c7             	mov    rdi,rax
    5f99:	e8 7e 00 00 00       	call   601c <is_rule>
    5f9e:	84 c0                	test   al,al
    5fa0:	74 0c                	je     5fae <rule_library_parser+0x5cf>
    5fa2:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5fa6:	48 89 c7             	mov    rdi,rax
    5fa9:	e8 18 01 00 00       	call   60c6 <rule_parser>
    5fae:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5fb2:	ba 08 00 00 00       	mov    edx,0x8
    5fb7:	be 00 00 00 00       	mov    esi,0x0
    5fbc:	48 89 c7             	mov    rdi,rax
    5fbf:	e8 2c c5 ff ff       	call   24f0 <memset@plt>
    5fc4:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    5fc8:	48 8d 4d c8          	lea    rcx,[rbp-0x38]
    5fcc:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    5fd0:	48 89 ce             	mov    rsi,rcx
    5fd3:	48 89 c7             	mov    rdi,rax
    5fd6:	e8 35 c8 ff ff       	call   2810 <getline@plt>
    5fdb:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    5fdf:	48 83 7d e0 ff       	cmp    QWORD PTR [rbp-0x20],0xffffffffffffffff
    5fe4:	0f 85 6a fa ff ff    	jne    5a54 <rule_library_parser+0x75>
    5fea:	8b 05 34 b0 00 00    	mov    eax,DWORD PTR [rip+0xb034]        # 11024 <VIGIL_MODE>
    5ff0:	3d ff ff 00 00       	cmp    eax,0xffff
    5ff5:	75 0a                	jne    6001 <rule_library_parser+0x622>
    5ff7:	c7 05 23 b0 00 00 01 	mov    DWORD PTR [rip+0xb023],0x1        # 11024 <VIGIL_MODE>
    5ffe:	00 00 00 
    6001:	90                   	nop
    6002:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6006:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    600d:	00 00 
    600f:	74 05                	je     6016 <rule_library_parser+0x637>
    6011:	e8 ca c7 ff ff       	call   27e0 <__stack_chk_fail@plt>
    6016:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    601a:	c9                   	leave  
    601b:	c3                   	ret    

000000000000601c <is_rule>:
    601c:	f3 0f 1e fa          	endbr64 
    6020:	55                   	push   rbp
    6021:	48 89 e5             	mov    rbp,rsp
    6024:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6028:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    602c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    602f:	3c 24                	cmp    al,0x24
    6031:	0f 94 c0             	sete   al
    6034:	5d                   	pop    rbp
    6035:	c3                   	ret    

0000000000006036 <is_comment>:
    6036:	f3 0f 1e fa          	endbr64 
    603a:	55                   	push   rbp
    603b:	48 89 e5             	mov    rbp,rsp
    603e:	48 83 ec 10          	sub    rsp,0x10
    6042:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6046:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    604a:	be 23 00 00 00       	mov    esi,0x23
    604f:	48 89 c7             	mov    rdi,rax
    6052:	e8 39 c7 ff ff       	call   2790 <strchr@plt>
    6057:	48 85 c0             	test   rax,rax
    605a:	0f 95 c0             	setne  al
    605d:	c9                   	leave  
    605e:	c3                   	ret    

000000000000605f <rstrip>:
    605f:	f3 0f 1e fa          	endbr64 
    6063:	55                   	push   rbp
    6064:	48 89 e5             	mov    rbp,rsp
    6067:	48 83 ec 10          	sub    rsp,0x10
    606b:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    606f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6073:	48 8d 35 cc 6a 00 00 	lea    rsi,[rip+0x6acc]        # cb46 <_IO_stdin_used+0xb46>
    607a:	48 89 c7             	mov    rdi,rax
    607d:	e8 0e c8 ff ff       	call   2890 <strcspn@plt>
    6082:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    6086:	48 01 d0             	add    rax,rdx
    6089:	c6 00 00             	mov    BYTE PTR [rax],0x0
    608c:	90                   	nop
    608d:	c9                   	leave  
    608e:	c3                   	ret    

000000000000608f <syntax_error>:
    608f:	f3 0f 1e fa          	endbr64 
    6093:	55                   	push   rbp
    6094:	48 89 e5             	mov    rbp,rsp
    6097:	48 83 ec 10          	sub    rsp,0x10
    609b:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    609f:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
    60a2:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    60a6:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    60a9:	89 c6                	mov    esi,eax
    60ab:	48 8d 3d 9e 6c 00 00 	lea    rdi,[rip+0x6c9e]        # cd50 <_IO_stdin_used+0xd50>
    60b2:	b8 00 00 00 00       	mov    eax,0x0
    60b7:	e8 24 c4 ff ff       	call   24e0 <printf@plt>
    60bc:	bf 01 00 00 00       	mov    edi,0x1
    60c1:	e8 9a c4 ff ff       	call   2560 <exit@plt>

00000000000060c6 <rule_parser>:
    60c6:	f3 0f 1e fa          	endbr64 
    60ca:	55                   	push   rbp
    60cb:	48 89 e5             	mov    rbp,rsp
    60ce:	48 83 ec 40          	sub    rsp,0x40
    60d2:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    60d6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    60dd:	00 00 
    60df:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    60e3:	31 c0                	xor    eax,eax
    60e5:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    60e9:	48 83 c0 01          	add    rax,0x1
    60ed:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    60f1:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    60f5:	48 8d 35 1c 6a 00 00 	lea    rsi,[rip+0x6a1c]        # cb18 <_IO_stdin_used+0xb18>
    60fc:	48 89 c7             	mov    rdi,rax
    60ff:	e8 cc c4 ff ff       	call   25d0 <fopen@plt>
    6104:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    6108:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
    610d:	75 22                	jne    6131 <rule_parser+0x6b>
    610f:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    6113:	48 89 c6             	mov    rsi,rax
    6116:	48 8d 3d 53 6c 00 00 	lea    rdi,[rip+0x6c53]        # cd70 <_IO_stdin_used+0xd70>
    611d:	b8 00 00 00 00       	mov    eax,0x0
    6122:	e8 b9 c3 ff ff       	call   24e0 <printf@plt>
    6127:	bf 01 00 00 00       	mov    edi,0x1
    612c:	e8 2f c4 ff ff       	call   2560 <exit@plt>
    6131:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    6135:	48 89 c6             	mov    rsi,rax
    6138:	48 8d 3d 64 6c 00 00 	lea    rdi,[rip+0x6c64]        # cda3 <_IO_stdin_used+0xda3>
    613f:	b8 00 00 00 00       	mov    eax,0x0
    6144:	e8 97 c3 ff ff       	call   24e0 <printf@plt>
    6149:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    6150:	00 
    6151:	48 c7 45 d8 00 00 00 	mov    QWORD PTR [rbp-0x28],0x0
    6158:	00 
    6159:	eb 54                	jmp    61af <rule_parser+0xe9>
    615b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    615f:	48 89 c7             	mov    rdi,rax
    6162:	e8 cf fe ff ff       	call   6036 <is_comment>
    6167:	84 c0                	test   al,al
    6169:	74 02                	je     616d <rule_parser+0xa7>
    616b:	eb 42                	jmp    61af <rule_parser+0xe9>
    616d:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    6171:	48 89 c7             	mov    rdi,rax
    6174:	e8 e6 fe ff ff       	call   605f <rstrip>
    6179:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    617d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    6180:	0f b6 c0             	movzx  eax,al
    6183:	f7 d8                	neg    eax
    6185:	85 c0                	test   eax,eax
    6187:	75 02                	jne    618b <rule_parser+0xc5>
    6189:	eb 24                	jmp    61af <rule_parser+0xe9>
    618b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    618f:	48 8d 35 1e 6c 00 00 	lea    rsi,[rip+0x6c1e]        # cdb4 <_IO_stdin_used+0xdb4>
    6196:	48 89 c7             	mov    rdi,rax
    6199:	e8 72 c5 ff ff       	call   2710 <strstr@plt>
    619e:	48 85 c0             	test   rax,rax
    61a1:	74 0c                	je     61af <rule_parser+0xe9>
    61a3:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    61a7:	48 89 c7             	mov    rdi,rax
    61aa:	e8 15 39 00 00       	call   9ac4 <line_parser>
    61af:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    61b3:	48 8d 4d d0          	lea    rcx,[rbp-0x30]
    61b7:	48 8d 45 d8          	lea    rax,[rbp-0x28]
    61bb:	48 89 ce             	mov    rsi,rcx
    61be:	48 89 c7             	mov    rdi,rax
    61c1:	e8 4a c6 ff ff       	call   2810 <getline@plt>
    61c6:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    61ca:	48 83 7d f0 ff       	cmp    QWORD PTR [rbp-0x10],0xffffffffffffffff
    61cf:	75 8a                	jne    615b <rule_parser+0x95>
    61d1:	0f b6 05 48 3d 10 00 	movzx  eax,BYTE PTR [rip+0x103d48]        # 109f20 <debug_mode>
    61d8:	84 c0                	test   al,al
    61da:	74 18                	je     61f4 <rule_parser+0x12e>
    61dc:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    61e0:	48 89 c6             	mov    rsi,rax
    61e3:	48 8d 3d d0 6b 00 00 	lea    rdi,[rip+0x6bd0]        # cdba <_IO_stdin_used+0xdba>
    61ea:	b8 00 00 00 00       	mov    eax,0x0
    61ef:	e8 ec c2 ff ff       	call   24e0 <printf@plt>
    61f4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    61f8:	48 89 c7             	mov    rdi,rax
    61fb:	e8 60 c6 ff ff       	call   2860 <fclose@plt>
    6200:	90                   	nop
    6201:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6205:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    620c:	00 00 
    620e:	74 05                	je     6215 <rule_parser+0x14f>
    6210:	e8 cb c5 ff ff       	call   27e0 <__stack_chk_fail@plt>
    6215:	c9                   	leave  
    6216:	c3                   	ret    

0000000000006217 <deny_conf_parser>:
    6217:	f3 0f 1e fa          	endbr64 
    621b:	55                   	push   rbp
    621c:	48 89 e5             	mov    rbp,rsp
    621f:	48 83 ec 50          	sub    rsp,0x50
    6223:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    6227:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    622e:	00 00 
    6230:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    6234:	31 c0                	xor    eax,eax
    6236:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    623a:	48 8d 35 d7 68 00 00 	lea    rsi,[rip+0x68d7]        # cb18 <_IO_stdin_used+0xb18>
    6241:	48 89 c7             	mov    rdi,rax
    6244:	e8 87 c3 ff ff       	call   25d0 <fopen@plt>
    6249:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    624d:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    6252:	75 22                	jne    6276 <deny_conf_parser+0x5f>
    6254:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    6258:	48 89 c6             	mov    rsi,rax
    625b:	48 8d 3d 6e 6b 00 00 	lea    rdi,[rip+0x6b6e]        # cdd0 <_IO_stdin_used+0xdd0>
    6262:	b8 00 00 00 00       	mov    eax,0x0
    6267:	e8 74 c2 ff ff       	call   24e0 <printf@plt>
    626c:	bf 01 00 00 00       	mov    edi,0x1
    6271:	e8 ea c2 ff ff       	call   2560 <exit@plt>
    6276:	48 c7 45 c8 00 00 00 	mov    QWORD PTR [rbp-0x38],0x0
    627d:	00 
    627e:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    6285:	00 
    6286:	e9 9a 00 00 00       	jmp    6325 <deny_conf_parser+0x10e>
    628b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    628f:	48 89 c7             	mov    rdi,rax
    6292:	e8 c8 fd ff ff       	call   605f <rstrip>
    6297:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    629b:	48 89 c7             	mov    rdi,rax
    629e:	e8 93 fd ff ff       	call   6036 <is_comment>
    62a3:	84 c0                	test   al,al
    62a5:	74 02                	je     62a9 <deny_conf_parser+0x92>
    62a7:	eb 7c                	jmp    6325 <deny_conf_parser+0x10e>
    62a9:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    62ad:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    62b0:	0f b6 c0             	movzx  eax,al
    62b3:	f7 d8                	neg    eax
    62b5:	85 c0                	test   eax,eax
    62b7:	75 02                	jne    62bb <deny_conf_parser+0xa4>
    62b9:	eb 6a                	jmp    6325 <deny_conf_parser+0x10e>
    62bb:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    62bf:	48 8d 35 3b 6b 00 00 	lea    rsi,[rip+0x6b3b]        # ce01 <_IO_stdin_used+0xe01>
    62c6:	48 89 c7             	mov    rdi,rax
    62c9:	e8 42 c4 ff ff       	call   2710 <strstr@plt>
    62ce:	48 85 c0             	test   rax,rax
    62d1:	74 52                	je     6325 <deny_conf_parser+0x10e>
    62d3:	8b 05 37 ad 00 00    	mov    eax,DWORD PTR [rip+0xad37]        # 11010 <blk_ipv4_len>
    62d9:	83 c0 01             	add    eax,0x1
    62dc:	89 05 2e ad 00 00    	mov    DWORD PTR [rip+0xad2e],eax        # 11010 <blk_ipv4_len>
    62e2:	8b 05 28 ad 00 00    	mov    eax,DWORD PTR [rip+0xad28]        # 11010 <blk_ipv4_len>
    62e8:	48 63 d0             	movsxd rdx,eax
    62eb:	48 89 d0             	mov    rax,rdx
    62ee:	48 c1 e0 03          	shl    rax,0x3
    62f2:	48 01 d0             	add    rax,rdx
    62f5:	48 01 c0             	add    rax,rax
    62f8:	48 8d 15 e1 cf 0e 00 	lea    rdx,[rip+0xecfe1]        # f32e0 <blocked_ipv4_addrs>
    62ff:	48 01 d0             	add    rax,rdx
    6302:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    6306:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    630a:	48 83 c0 05          	add    rax,0x5
    630e:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    6312:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6316:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    631a:	48 89 d6             	mov    rsi,rdx
    631d:	48 89 c7             	mov    rdi,rax
    6320:	e8 fb c4 ff ff       	call   2820 <strcpy@plt>
    6325:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    6329:	48 8d 4d d0          	lea    rcx,[rbp-0x30]
    632d:	48 8d 45 c8          	lea    rax,[rbp-0x38]
    6331:	48 89 ce             	mov    rsi,rcx
    6334:	48 89 c7             	mov    rdi,rax
    6337:	e8 d4 c4 ff ff       	call   2810 <getline@plt>
    633c:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    6340:	48 83 7d e0 ff       	cmp    QWORD PTR [rbp-0x20],0xffffffffffffffff
    6345:	0f 85 40 ff ff ff    	jne    628b <deny_conf_parser+0x74>
    634b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    634f:	48 85 c0             	test   rax,rax
    6352:	74 0c                	je     6360 <deny_conf_parser+0x149>
    6354:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6358:	48 89 c7             	mov    rdi,rax
    635b:	e8 00 c3 ff ff       	call   2660 <free@plt>
    6360:	90                   	nop
    6361:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6365:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    636c:	00 00 
    636e:	74 05                	je     6375 <deny_conf_parser+0x15e>
    6370:	e8 6b c4 ff ff       	call   27e0 <__stack_chk_fail@plt>
    6375:	c9                   	leave  
    6376:	c3                   	ret    

0000000000006377 <host_mon_parser>:
    6377:	f3 0f 1e fa          	endbr64 
    637b:	55                   	push   rbp
    637c:	48 89 e5             	mov    rbp,rsp
    637f:	48 83 ec 10          	sub    rsp,0x10
    6383:	48 8b 05 ae ac 00 00 	mov    rax,QWORD PTR [rip+0xacae]        # 11038 <default_host_conf>
    638a:	48 8d 35 87 67 00 00 	lea    rsi,[rip+0x6787]        # cb18 <_IO_stdin_used+0xb18>
    6391:	48 89 c7             	mov    rdi,rax
    6394:	e8 37 c2 ff ff       	call   25d0 <fopen@plt>
    6399:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    639d:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    63a2:	75 25                	jne    63c9 <host_mon_parser+0x52>
    63a4:	48 8b 05 8d ac 00 00 	mov    rax,QWORD PTR [rip+0xac8d]        # 11038 <default_host_conf>
    63ab:	48 89 c6             	mov    rsi,rax
    63ae:	48 8d 3d 51 6a 00 00 	lea    rdi,[rip+0x6a51]        # ce06 <_IO_stdin_used+0xe06>
    63b5:	b8 00 00 00 00       	mov    eax,0x0
    63ba:	e8 21 c1 ff ff       	call   24e0 <printf@plt>
    63bf:	bf 01 00 00 00       	mov    edi,0x1
    63c4:	e8 97 c1 ff ff       	call   2560 <exit@plt>
    63c9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    63cd:	48 89 c7             	mov    rdi,rax
    63d0:	e8 8b c4 ff ff       	call   2860 <fclose@plt>
    63d5:	90                   	nop
    63d6:	c9                   	leave  
    63d7:	c3                   	ret    

00000000000063d8 <test_encrypt>:
    63d8:	f3 0f 1e fa          	endbr64 
    63dc:	55                   	push   rbp
    63dd:	48 89 e5             	mov    rbp,rsp
    63e0:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    63e4:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    63e8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    63ec:	0f b6 80 48 01 00 00 	movzx  eax,BYTE PTR [rax+0x148]
    63f3:	84 c0                	test   al,al
    63f5:	74 13                	je     640a <test_encrypt+0x32>
    63f7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    63fb:	0f b6 40 38          	movzx  eax,BYTE PTR [rax+0x38]
    63ff:	84 c0                	test   al,al
    6401:	74 07                	je     640a <test_encrypt+0x32>
    6403:	b8 00 00 00 00       	mov    eax,0x0
    6408:	eb 05                	jmp    640f <test_encrypt+0x37>
    640a:	b8 01 00 00 00       	mov    eax,0x1
    640f:	5d                   	pop    rbp
    6410:	c3                   	ret    

0000000000006411 <rule_app>:
    6411:	f3 0f 1e fa          	endbr64 
    6415:	55                   	push   rbp
    6416:	48 89 e5             	mov    rbp,rsp
    6419:	48 83 ec 20          	sub    rsp,0x20
    641d:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    6421:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    6425:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    6429:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    642d:	48 89 d6             	mov    rsi,rdx
    6430:	48 89 c7             	mov    rdi,rax
    6433:	e8 55 03 00 00       	call   678d <r_engine>
    6438:	88 45 fd             	mov    BYTE PTR [rbp-0x3],al
    643b:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    643f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6443:	48 89 d6             	mov    rsi,rdx
    6446:	48 89 c7             	mov    rdi,rax
    6449:	e8 d4 49 00 00       	call   ae22 <d_engine>
    644e:	88 45 fe             	mov    BYTE PTR [rbp-0x2],al
    6451:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6455:	48 8b 88 78 03 00 00 	mov    rcx,QWORD PTR [rax+0x378]
    645c:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6460:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    6464:	48 89 d6             	mov    rsi,rdx
    6467:	48 89 c7             	mov    rdi,rax
    646a:	ff d1                	call   rcx
    646c:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
    646f:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
    6473:	74 40                	je     64b5 <rule_app+0xa4>
    6475:	80 7d fd 00          	cmp    BYTE PTR [rbp-0x3],0x0
    6479:	74 3a                	je     64b5 <rule_app+0xa4>
    647b:	80 7d fe 00          	cmp    BYTE PTR [rbp-0x2],0x0
    647f:	74 34                	je     64b5 <rule_app+0xa4>
    6481:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6485:	4c 8b 80 80 03 00 00 	mov    r8,QWORD PTR [rax+0x380]
    648c:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    6490:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    6494:	ba 00 00 00 00       	mov    edx,0x0
    6499:	48 89 ce             	mov    rsi,rcx
    649c:	48 89 c7             	mov    rdi,rax
    649f:	41 ff d0             	call   r8
    64a2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    64a6:	8b 40 3c             	mov    eax,DWORD PTR [rax+0x3c]
    64a9:	8d 50 01             	lea    edx,[rax+0x1]
    64ac:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    64b0:	89 50 3c             	mov    DWORD PTR [rax+0x3c],edx
    64b3:	eb 17                	jmp    64cc <rule_app+0xbb>
    64b5:	8b 05 69 ab 00 00    	mov    eax,DWORD PTR [rip+0xab69]        # 11024 <VIGIL_MODE>
    64bb:	83 f8 02             	cmp    eax,0x2
    64be:	75 0c                	jne    64cc <rule_app+0xbb>
    64c0:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    64c4:	48 89 c7             	mov    rdi,rax
    64c7:	e8 8e 25 00 00       	call   8a5a <forward_packet>
    64cc:	90                   	nop
    64cd:	c9                   	leave  
    64ce:	c3                   	ret    

00000000000064cf <rulemgr>:
    64cf:	f3 0f 1e fa          	endbr64 
    64d3:	55                   	push   rbp
    64d4:	48 89 e5             	mov    rbp,rsp
    64d7:	48 83 ec 20          	sub    rsp,0x20
    64db:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    64df:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    64e6:	e9 8f 02 00 00       	jmp    677a <rulemgr+0x2ab>
    64eb:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    64ee:	8d 50 01             	lea    edx,[rax+0x1]
    64f1:	89 55 f4             	mov    DWORD PTR [rbp-0xc],edx
    64f4:	48 98                	cdqe   
    64f6:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    64fd:	48 8d 15 dc ad 00 00 	lea    rdx,[rip+0xaddc]        # 112e0 <rules>
    6504:	48 01 d0             	add    rax,rdx
    6507:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    650b:	0f b6 05 ba 3a 10 00 	movzx  eax,BYTE PTR [rip+0x103aba]        # 109fcc <in_test_mode>
    6512:	84 c0                	test   al,al
    6514:	74 30                	je     6546 <rulemgr+0x77>
    6516:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    651a:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    651d:	83 f8 46             	cmp    eax,0x46
    6520:	75 0d                	jne    652f <rulemgr+0x60>
    6522:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6526:	c7 40 10 45 00 00 00 	mov    DWORD PTR [rax+0x10],0x45
    652d:	eb 17                	jmp    6546 <rulemgr+0x77>
    652f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6533:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    6536:	83 f8 45             	cmp    eax,0x45
    6539:	75 0b                	jne    6546 <rulemgr+0x77>
    653b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    653f:	c7 40 10 46 00 00 00 	mov    DWORD PTR [rax+0x10],0x46
    6546:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    654a:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    6550:	83 f8 ff             	cmp    eax,0xffffffff
    6553:	74 19                	je     656e <rulemgr+0x9f>
    6555:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6559:	8b 50 2c             	mov    edx,DWORD PTR [rax+0x2c]
    655c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6560:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    6566:	39 c2                	cmp    edx,eax
    6568:	0f 85 0c 02 00 00    	jne    677a <rulemgr+0x2ab>
    656e:	0f b6 05 0b ab 00 00 	movzx  eax,BYTE PTR [rip+0xab0b]        # 11080 <demo_mode>
    6575:	84 c0                	test   al,al
    6577:	75 0f                	jne    6588 <rulemgr+0xb9>
    6579:	8b 05 e9 39 10 00    	mov    eax,DWORD PTR [rip+0x1039e9]        # 109f68 <vigil_location>
    657f:	83 f8 03             	cmp    eax,0x3
    6582:	0f 85 a1 00 00 00    	jne    6629 <rulemgr+0x15a>
    6588:	8b 05 da 39 10 00    	mov    eax,DWORD PTR [rip+0x1039da]        # 109f68 <vigil_location>
    658e:	83 f8 03             	cmp    eax,0x3
    6591:	0f 85 e3 01 00 00    	jne    677a <rulemgr+0x2ab>
    6597:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    659b:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    659e:	83 f8 ff             	cmp    eax,0xffffffff
    65a1:	74 16                	je     65b9 <rulemgr+0xea>
    65a3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65a7:	8b 50 0c             	mov    edx,DWORD PTR [rax+0xc]
    65aa:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    65ae:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    65b1:	39 c2                	cmp    edx,eax
    65b3:	0f 85 c1 01 00 00    	jne    677a <rulemgr+0x2ab>
    65b9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65bd:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    65c0:	83 f8 ff             	cmp    eax,0xffffffff
    65c3:	74 16                	je     65db <rulemgr+0x10c>
    65c5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65c9:	8b 50 08             	mov    edx,DWORD PTR [rax+0x8]
    65cc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    65d0:	8b 40 28             	mov    eax,DWORD PTR [rax+0x28]
    65d3:	39 c2                	cmp    edx,eax
    65d5:	0f 85 9f 01 00 00    	jne    677a <rulemgr+0x2ab>
    65db:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    65df:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65e3:	48 89 d6             	mov    rsi,rdx
    65e6:	48 89 c7             	mov    rdi,rax
    65e9:	e8 97 03 00 00       	call   6985 <test_tcp_session_status>
    65ee:	84 c0                	test   al,al
    65f0:	0f 84 84 01 00 00    	je     677a <rulemgr+0x2ab>
    65f6:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    65fa:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65fe:	48 89 d6             	mov    rsi,rdx
    6601:	48 89 c7             	mov    rdi,rax
    6604:	e8 cf fd ff ff       	call   63d8 <test_encrypt>
    6609:	84 c0                	test   al,al
    660b:	0f 84 69 01 00 00    	je     677a <rulemgr+0x2ab>
    6611:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6615:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6619:	48 89 d6             	mov    rsi,rdx
    661c:	48 89 c7             	mov    rdi,rax
    661f:	e8 ed fd ff ff       	call   6411 <rule_app>
    6624:	e9 51 01 00 00       	jmp    677a <rulemgr+0x2ab>
    6629:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    662d:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    6630:	83 f8 47             	cmp    eax,0x47
    6633:	74 16                	je     664b <rulemgr+0x17c>
    6635:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6639:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    663c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6640:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    6643:	39 c2                	cmp    edx,eax
    6645:	0f 85 2f 01 00 00    	jne    677a <rulemgr+0x2ab>
    664b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    664f:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    6655:	3d 80 00 00 00       	cmp    eax,0x80
    665a:	75 18                	jne    6674 <rulemgr+0x1a5>
    665c:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6660:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6664:	48 89 d6             	mov    rsi,rdx
    6667:	48 89 c7             	mov    rdi,rax
    666a:	e8 a2 fd ff ff       	call   6411 <rule_app>
    666f:	e9 06 01 00 00       	jmp    677a <rulemgr+0x2ab>
    6674:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6678:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    667b:	83 f8 47             	cmp    eax,0x47
    667e:	75 7d                	jne    66fd <rulemgr+0x22e>
    6680:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6684:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    6687:	83 f8 ff             	cmp    eax,0xffffffff
    668a:	74 28                	je     66b4 <rulemgr+0x1e5>
    668c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6690:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    6693:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6697:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    669a:	39 c2                	cmp    edx,eax
    669c:	74 16                	je     66b4 <rulemgr+0x1e5>
    669e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    66a2:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    66a5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66a9:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    66ac:	39 c2                	cmp    edx,eax
    66ae:	0f 85 c6 00 00 00    	jne    677a <rulemgr+0x2ab>
    66b4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66b8:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    66bb:	83 f8 ff             	cmp    eax,0xffffffff
    66be:	74 28                	je     66e8 <rulemgr+0x219>
    66c0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    66c4:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    66c7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66cb:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    66ce:	39 c2                	cmp    edx,eax
    66d0:	74 16                	je     66e8 <rulemgr+0x219>
    66d2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    66d6:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    66d9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66dd:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    66e0:	39 c2                	cmp    edx,eax
    66e2:	0f 85 92 00 00 00    	jne    677a <rulemgr+0x2ab>
    66e8:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    66ec:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66f0:	48 89 d6             	mov    rsi,rdx
    66f3:	48 89 c7             	mov    rdi,rax
    66f6:	e8 16 fd ff ff       	call   6411 <rule_app>
    66fb:	eb 7d                	jmp    677a <rulemgr+0x2ab>
    66fd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6701:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    6704:	83 f8 ff             	cmp    eax,0xffffffff
    6707:	74 12                	je     671b <rulemgr+0x24c>
    6709:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    670d:	8b 50 0c             	mov    edx,DWORD PTR [rax+0xc]
    6710:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6714:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    6717:	39 c2                	cmp    edx,eax
    6719:	75 5f                	jne    677a <rulemgr+0x2ab>
    671b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    671f:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    6722:	83 f8 ff             	cmp    eax,0xffffffff
    6725:	74 12                	je     6739 <rulemgr+0x26a>
    6727:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    672b:	8b 50 08             	mov    edx,DWORD PTR [rax+0x8]
    672e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6732:	8b 40 28             	mov    eax,DWORD PTR [rax+0x28]
    6735:	39 c2                	cmp    edx,eax
    6737:	75 41                	jne    677a <rulemgr+0x2ab>
    6739:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    673d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6741:	48 89 d6             	mov    rsi,rdx
    6744:	48 89 c7             	mov    rdi,rax
    6747:	e8 39 02 00 00       	call   6985 <test_tcp_session_status>
    674c:	84 c0                	test   al,al
    674e:	74 2a                	je     677a <rulemgr+0x2ab>
    6750:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6754:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6758:	48 89 d6             	mov    rsi,rdx
    675b:	48 89 c7             	mov    rdi,rax
    675e:	e8 75 fc ff ff       	call   63d8 <test_encrypt>
    6763:	84 c0                	test   al,al
    6765:	74 13                	je     677a <rulemgr+0x2ab>
    6767:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    676b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    676f:	48 89 d6             	mov    rsi,rdx
    6772:	48 89 c7             	mov    rdi,rax
    6775:	e8 97 fc ff ff       	call   6411 <rule_app>
    677a:	8b 05 94 a8 00 00    	mov    eax,DWORD PTR [rip+0xa894]        # 11014 <num_rules>
    6780:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    6783:	0f 8e 62 fd ff ff    	jle    64eb <rulemgr+0x1c>
    6789:	90                   	nop
    678a:	90                   	nop
    678b:	c9                   	leave  
    678c:	c3                   	ret    

000000000000678d <r_engine>:
    678d:	f3 0f 1e fa          	endbr64 
    6791:	55                   	push   rbp
    6792:	48 89 e5             	mov    rbp,rsp
    6795:	48 83 ec 10          	sub    rsp,0x10
    6799:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    679d:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    67a1:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    67a5:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    67a8:	3d 80 00 00 00       	cmp    eax,0x80
    67ad:	0f 85 d9 00 00 00    	jne    688c <r_engine+0xff>
    67b3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67b7:	0f b6 80 6f 03 00 00 	movzx  eax,BYTE PTR [rax+0x36f]
    67be:	84 c0                	test   al,al
    67c0:	74 25                	je     67e7 <r_engine+0x5a>
    67c2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    67c6:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    67ca:	0f b6 50 01          	movzx  edx,BYTE PTR [rax+0x1]
    67ce:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67d2:	0f b6 80 73 03 00 00 	movzx  eax,BYTE PTR [rax+0x373]
    67d9:	38 c2                	cmp    dl,al
    67db:	74 0a                	je     67e7 <r_engine+0x5a>
    67dd:	b8 00 00 00 00       	mov    eax,0x0
    67e2:	e9 9c 01 00 00       	jmp    6983 <r_engine+0x1f6>
    67e7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67eb:	0f b6 80 71 03 00 00 	movzx  eax,BYTE PTR [rax+0x371]
    67f2:	84 c0                	test   al,al
    67f4:	74 26                	je     681c <r_engine+0x8f>
    67f6:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    67fa:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    67fe:	0f b7 50 04          	movzx  edx,WORD PTR [rax+0x4]
    6802:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6806:	0f b7 80 76 03 00 00 	movzx  eax,WORD PTR [rax+0x376]
    680d:	66 39 c2             	cmp    dx,ax
    6810:	74 0a                	je     681c <r_engine+0x8f>
    6812:	b8 00 00 00 00       	mov    eax,0x0
    6817:	e9 67 01 00 00       	jmp    6983 <r_engine+0x1f6>
    681c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6820:	0f b6 80 70 03 00 00 	movzx  eax,BYTE PTR [rax+0x370]
    6827:	84 c0                	test   al,al
    6829:	74 26                	je     6851 <r_engine+0xc4>
    682b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    682f:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    6833:	0f b7 50 06          	movzx  edx,WORD PTR [rax+0x6]
    6837:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    683b:	0f b7 80 74 03 00 00 	movzx  eax,WORD PTR [rax+0x374]
    6842:	66 39 c2             	cmp    dx,ax
    6845:	74 0a                	je     6851 <r_engine+0xc4>
    6847:	b8 00 00 00 00       	mov    eax,0x0
    684c:	e9 32 01 00 00       	jmp    6983 <r_engine+0x1f6>
    6851:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6855:	0f b6 80 6e 03 00 00 	movzx  eax,BYTE PTR [rax+0x36e]
    685c:	84 c0                	test   al,al
    685e:	0f 84 dc 00 00 00    	je     6940 <r_engine+0x1b3>
    6864:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6868:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    686c:	0f b6 10             	movzx  edx,BYTE PTR [rax]
    686f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6873:	0f b6 80 72 03 00 00 	movzx  eax,BYTE PTR [rax+0x372]
    687a:	38 c2                	cmp    dl,al
    687c:	0f 84 be 00 00 00    	je     6940 <r_engine+0x1b3>
    6882:	b8 00 00 00 00       	mov    eax,0x0
    6887:	e9 f7 00 00 00       	jmp    6983 <r_engine+0x1f6>
    688c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6890:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    6893:	83 f8 7e             	cmp    eax,0x7e
    6896:	0f 85 a4 00 00 00    	jne    6940 <r_engine+0x1b3>
    689c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    68a0:	0f b6 80 51 03 00 00 	movzx  eax,BYTE PTR [rax+0x351]
    68a7:	84 c0                	test   al,al
    68a9:	74 2e                	je     68d9 <r_engine+0x14c>
    68ab:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    68af:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    68b3:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    68b6:	89 c7                	mov    edi,eax
    68b8:	e8 23 be ff ff       	call   26e0 <ntohl@plt>
    68bd:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    68c1:	0f b7 92 5c 03 00 00 	movzx  edx,WORD PTR [rdx+0x35c]
    68c8:	0f b7 d2             	movzx  edx,dx
    68cb:	39 d0                	cmp    eax,edx
    68cd:	74 0a                	je     68d9 <r_engine+0x14c>
    68cf:	b8 00 00 00 00       	mov    eax,0x0
    68d4:	e9 aa 00 00 00       	jmp    6983 <r_engine+0x1f6>
    68d9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    68dd:	0f b6 80 50 03 00 00 	movzx  eax,BYTE PTR [rax+0x350]
    68e4:	84 c0                	test   al,al
    68e6:	74 29                	je     6911 <r_engine+0x184>
    68e8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    68ec:	48 8d 90 53 03 00 00 	lea    rdx,[rax+0x353]
    68f3:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    68f7:	48 83 c0 68          	add    rax,0x68
    68fb:	48 89 d6             	mov    rsi,rdx
    68fe:	48 89 c7             	mov    rdi,rax
    6901:	e8 ea be ff ff       	call   27f0 <strcmp@plt>
    6906:	85 c0                	test   eax,eax
    6908:	74 07                	je     6911 <r_engine+0x184>
    690a:	b8 00 00 00 00       	mov    eax,0x0
    690f:	eb 72                	jmp    6983 <r_engine+0x1f6>
    6911:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6915:	0f b6 80 52 03 00 00 	movzx  eax,BYTE PTR [rax+0x352]
    691c:	84 c0                	test   al,al
    691e:	74 20                	je     6940 <r_engine+0x1b3>
    6920:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6924:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    6928:	8b 50 04             	mov    edx,DWORD PTR [rax+0x4]
    692b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    692f:	8b 80 60 03 00 00    	mov    eax,DWORD PTR [rax+0x360]
    6935:	39 c2                	cmp    edx,eax
    6937:	74 07                	je     6940 <r_engine+0x1b3>
    6939:	b8 00 00 00 00       	mov    eax,0x0
    693e:	eb 43                	jmp    6983 <r_engine+0x1f6>
    6940:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6944:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    6948:	48 85 c0             	test   rax,rax
    694b:	74 31                	je     697e <r_engine+0x1f1>
    694d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6951:	0f b6 80 69 03 00 00 	movzx  eax,BYTE PTR [rax+0x369]
    6958:	84 c0                	test   al,al
    695a:	74 22                	je     697e <r_engine+0x1f1>
    695c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6960:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    6964:	0f b6 50 08          	movzx  edx,BYTE PTR [rax+0x8]
    6968:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    696c:	0f b6 80 6c 03 00 00 	movzx  eax,BYTE PTR [rax+0x36c]
    6973:	38 c2                	cmp    dl,al
    6975:	74 07                	je     697e <r_engine+0x1f1>
    6977:	b8 00 00 00 00       	mov    eax,0x0
    697c:	eb 05                	jmp    6983 <r_engine+0x1f6>
    697e:	b8 01 00 00 00       	mov    eax,0x1
    6983:	c9                   	leave  
    6984:	c3                   	ret    

0000000000006985 <test_tcp_session_status>:
    6985:	f3 0f 1e fa          	endbr64 
    6989:	55                   	push   rbp
    698a:	48 89 e5             	mov    rbp,rsp
    698d:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6991:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    6995:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6999:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    699f:	83 f8 7e             	cmp    eax,0x7e
    69a2:	75 34                	jne    69d8 <test_tcp_session_status+0x53>
    69a4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    69a8:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    69ab:	83 f8 7e             	cmp    eax,0x7e
    69ae:	75 28                	jne    69d8 <test_tcp_session_status+0x53>
    69b0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    69b4:	8b 80 48 03 00 00    	mov    eax,DWORD PTR [rax+0x348]
    69ba:	83 f8 01             	cmp    eax,0x1
    69bd:	75 12                	jne    69d1 <test_tcp_session_status+0x4c>
    69bf:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    69c3:	8b 40 70             	mov    eax,DWORD PTR [rax+0x70]
    69c6:	85 c0                	test   eax,eax
    69c8:	75 07                	jne    69d1 <test_tcp_session_status+0x4c>
    69ca:	b8 00 00 00 00       	mov    eax,0x0
    69cf:	eb 0c                	jmp    69dd <test_tcp_session_status+0x58>
    69d1:	b8 01 00 00 00       	mov    eax,0x1
    69d6:	eb 05                	jmp    69dd <test_tcp_session_status+0x58>
    69d8:	b8 01 00 00 00       	mov    eax,0x1
    69dd:	5d                   	pop    rbp
    69de:	c3                   	ret    

00000000000069df <main>:
    69df:	f3 0f 1e fa          	endbr64 
    69e3:	55                   	push   rbp
    69e4:	48 89 e5             	mov    rbp,rsp
    69e7:	48 81 ec 40 08 00 00 	sub    rsp,0x840
    69ee:	89 bd cc f7 ff ff    	mov    DWORD PTR [rbp-0x834],edi
    69f4:	48 89 b5 c0 f7 ff ff 	mov    QWORD PTR [rbp-0x840],rsi
    69fb:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6a02:	00 00 
    6a04:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    6a08:	31 c0                	xor    eax,eax
    6a0a:	b8 00 00 00 00       	mov    eax,0x0
    6a0f:	e8 3f 4e 00 00       	call   b853 <load_fn_mem_map>
    6a14:	48 8d 35 f4 02 00 00 	lea    rsi,[rip+0x2f4]        # 6d0f <sigint_processor>
    6a1b:	bf 02 00 00 00       	mov    edi,0x2
    6a20:	e8 5b bd ff ff       	call   2780 <signal@plt>
    6a25:	48 8d 05 aa 4a 00 00 	lea    rax,[rip+0x4aaa]        # b4d6 <crash_handler>
    6a2c:	48 89 c6             	mov    rsi,rax
    6a2f:	bf 0b 00 00 00       	mov    edi,0xb
    6a34:	e8 47 bd ff ff       	call   2780 <signal@plt>
    6a39:	48 8d 05 96 4a 00 00 	lea    rax,[rip+0x4a96]        # b4d6 <crash_handler>
    6a40:	48 89 c6             	mov    rsi,rax
    6a43:	bf 06 00 00 00       	mov    edi,0x6
    6a48:	e8 33 bd ff ff       	call   2780 <signal@plt>
    6a4d:	48 8d 05 82 4a 00 00 	lea    rax,[rip+0x4a82]        # b4d6 <crash_handler>
    6a54:	48 89 c6             	mov    rsi,rax
    6a57:	bf 0e 00 00 00       	mov    edi,0xe
    6a5c:	e8 1f bd ff ff       	call   2780 <signal@plt>
    6a61:	b8 00 00 00 00       	mov    eax,0x0
    6a66:	e8 d1 08 00 00       	call   733c <print_logo>
    6a6b:	b8 00 00 00 00       	mov    eax,0x0
    6a70:	e8 15 07 00 00       	call   718a <print_cpu_info>
    6a75:	e8 a6 bb ff ff       	call   2620 <getpid@plt>
    6a7a:	89 c6                	mov    esi,eax
    6a7c:	48 8d 3d 9d 63 00 00 	lea    rdi,[rip+0x639d]        # ce20 <_IO_stdin_used+0xe20>
    6a83:	b8 00 00 00 00       	mov    eax,0x0
    6a88:	e8 53 ba ff ff       	call   24e0 <printf@plt>
    6a8d:	c7 05 11 a8 00 00 01 	mov    DWORD PTR [rip+0xa811],0x1        # 112a8 <is_running>
    6a94:	00 00 00 
    6a97:	b8 00 00 00 00       	mov    eax,0x0
    6a9c:	e8 3f 4f 00 00       	call   b9e0 <pps_monitor>
    6aa1:	bf 00 00 00 00       	mov    edi,0x0
    6aa6:	e8 85 be ff ff       	call   2930 <time@plt>
    6aab:	48 89 05 fe a7 00 00 	mov    QWORD PTR [rip+0xa7fe],rax        # 112b0 <last_clean_time>
    6ab2:	83 bd cc f7 ff ff 01 	cmp    DWORD PTR [rbp-0x834],0x1
    6ab9:	0f 85 e3 00 00 00    	jne    6ba2 <main+0x1c3>
    6abf:	b8 00 00 00 00       	mov    eax,0x0
    6ac4:	e8 97 06 00 00       	call   7160 <print_help_and_exit>
    6ac9:	e9 d4 00 00 00       	jmp    6ba2 <main+0x1c3>
    6ace:	8b 85 dc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x824]
    6ad4:	83 e8 64             	sub    eax,0x64
    6ad7:	83 f8 10             	cmp    eax,0x10
    6ada:	0f 87 9e 00 00 00    	ja     6b7e <main+0x19f>
    6ae0:	89 c0                	mov    eax,eax
    6ae2:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    6ae9:	00 
    6aea:	48 8d 05 cb 64 00 00 	lea    rax,[rip+0x64cb]        # cfbc <_IO_stdin_used+0xfbc>
    6af1:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    6af4:	48 98                	cdqe   
    6af6:	48 8d 15 bf 64 00 00 	lea    rdx,[rip+0x64bf]        # cfbc <_IO_stdin_used+0xfbc>
    6afd:	48 01 d0             	add    rax,rdx
    6b00:	3e ff e0             	notrack jmp rax
    6b03:	c6 05 16 34 10 00 01 	mov    BYTE PTR [rip+0x103416],0x1        # 109f20 <debug_mode>
    6b0a:	e9 93 00 00 00       	jmp    6ba2 <main+0x1c3>
    6b0f:	b8 00 00 00 00       	mov    eax,0x0
    6b14:	e8 47 06 00 00       	call   7160 <print_help_and_exit>
    6b19:	e9 84 00 00 00       	jmp    6ba2 <main+0x1c3>
    6b1e:	48 8b 05 3b a5 00 00 	mov    rax,QWORD PTR [rip+0xa53b]        # 11060 <optarg@@GLIBC_2.2.5>
    6b25:	48 89 85 e0 f7 ff ff 	mov    QWORD PTR [rbp-0x820],rax
    6b2c:	eb 74                	jmp    6ba2 <main+0x1c3>
    6b2e:	c6 05 2f 34 10 00 01 	mov    BYTE PTR [rip+0x10342f],0x1        # 109f64 <packet_print>
    6b35:	eb 6b                	jmp    6ba2 <main+0x1c3>
    6b37:	c6 05 27 34 10 00 01 	mov    BYTE PTR [rip+0x103427],0x1        # 109f65 <quiet_exit>
    6b3e:	eb 62                	jmp    6ba2 <main+0x1c3>
    6b40:	48 8d 3d f1 62 00 00 	lea    rdi,[rip+0x62f1]        # ce38 <_IO_stdin_used+0xe38>
    6b47:	e8 f4 b9 ff ff       	call   2540 <puts@plt>
    6b4c:	bf 0a 00 00 00       	mov    edi,0xa
    6b51:	e8 9a bb ff ff       	call   26f0 <sleep@plt>
    6b56:	c6 05 23 a5 00 00 01 	mov    BYTE PTR [rip+0xa523],0x1        # 11080 <demo_mode>
    6b5d:	eb 43                	jmp    6ba2 <main+0x1c3>
    6b5f:	48 8d 3d 12 63 00 00 	lea    rdi,[rip+0x6312]        # ce78 <_IO_stdin_used+0xe78>
    6b66:	e8 d5 b9 ff ff       	call   2540 <puts@plt>
    6b6b:	bf 0a 00 00 00       	mov    edi,0xa
    6b70:	e8 7b bb ff ff       	call   26f0 <sleep@plt>
    6b75:	c6 05 50 34 10 00 01 	mov    BYTE PTR [rip+0x103450],0x1        # 109fcc <in_test_mode>
    6b7c:	eb 24                	jmp    6ba2 <main+0x1c3>
    6b7e:	8b 85 dc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x824]
    6b84:	89 c6                	mov    esi,eax
    6b86:	48 8d 3d 1f 63 00 00 	lea    rdi,[rip+0x631f]        # ceac <_IO_stdin_used+0xeac>
    6b8d:	b8 00 00 00 00       	mov    eax,0x0
    6b92:	e8 49 b9 ff ff       	call   24e0 <printf@plt>
    6b97:	b8 00 00 00 00       	mov    eax,0x0
    6b9c:	e8 bf 05 00 00       	call   7160 <print_help_and_exit>
    6ba1:	90                   	nop
    6ba2:	48 8b 8d c0 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x840]
    6ba9:	8b 85 cc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x834]
    6baf:	48 8d 15 0c 63 00 00 	lea    rdx,[rip+0x630c]        # cec2 <_IO_stdin_used+0xec2>
    6bb6:	48 89 ce             	mov    rsi,rcx
    6bb9:	89 c7                	mov    edi,eax
    6bbb:	e8 d0 b9 ff ff       	call   2590 <getopt@plt>
    6bc0:	89 85 dc f7 ff ff    	mov    DWORD PTR [rbp-0x824],eax
    6bc6:	83 bd dc f7 ff ff ff 	cmp    DWORD PTR [rbp-0x824],0xffffffff
    6bcd:	0f 85 fb fe ff ff    	jne    6ace <main+0xef>
    6bd3:	48 8d 3d f1 62 00 00 	lea    rdi,[rip+0x62f1]        # cecb <_IO_stdin_used+0xecb>
    6bda:	e8 38 f6 ff ff       	call   6217 <deny_conf_parser>
    6bdf:	48 8d 3d fa 62 00 00 	lea    rdi,[rip+0x62fa]        # cee0 <_IO_stdin_used+0xee0>
    6be6:	e8 55 b9 ff ff       	call   2540 <puts@plt>
    6beb:	48 8d 3d 29 63 00 00 	lea    rdi,[rip+0x6329]        # cf1b <_IO_stdin_used+0xf1b>
    6bf2:	e8 e8 ed ff ff       	call   59df <rule_library_parser>
    6bf7:	48 8d 3d 33 63 00 00 	lea    rdi,[rip+0x6333]        # cf31 <_IO_stdin_used+0xf31>
    6bfe:	e8 3d b9 ff ff       	call   2540 <puts@plt>
    6c03:	b8 00 00 00 00       	mov    eax,0x0
    6c08:	e8 ef 3d 00 00       	call   a9fc <rule_processor>
    6c0d:	48 8b 85 e0 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x820]
    6c14:	48 89 c6             	mov    rsi,rax
    6c17:	48 8d 3d 2a 63 00 00 	lea    rdi,[rip+0x632a]        # cf48 <_IO_stdin_used+0xf48>
    6c1e:	b8 00 00 00 00       	mov    eax,0x0
    6c23:	e8 b8 b8 ff ff       	call   24e0 <printf@plt>
    6c28:	48 c7 85 f0 f7 ff ff 	mov    QWORD PTR [rbp-0x810],0x0
    6c2f:	00 00 00 00 
    6c33:	48 c7 85 f8 f7 ff ff 	mov    QWORD PTR [rbp-0x808],0x0
    6c3a:	00 00 00 00 
    6c3e:	48 8d 95 00 f8 ff ff 	lea    rdx,[rbp-0x800]
    6c45:	b8 00 00 00 00       	mov    eax,0x0
    6c4a:	b9 fd 00 00 00       	mov    ecx,0xfd
    6c4f:	48 89 d7             	mov    rdi,rdx
    6c52:	f3 48 ab             	rep stos QWORD PTR es:[rdi],rax
    6c55:	48 89 fa             	mov    rdx,rdi
    6c58:	89 02                	mov    DWORD PTR [rdx],eax
    6c5a:	48 83 c2 04          	add    rdx,0x4
    6c5e:	66 89 02             	mov    WORD PTR [rdx],ax
    6c61:	48 83 c2 02          	add    rdx,0x2
    6c65:	48 8d 95 f0 f7 ff ff 	lea    rdx,[rbp-0x810]
    6c6c:	48 8b 85 e0 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x820]
    6c73:	49 89 d0             	mov    r8,rdx
    6c76:	b9 64 00 00 00       	mov    ecx,0x64
    6c7b:	ba 01 00 00 00       	mov    edx,0x1
    6c80:	be 00 04 00 00       	mov    esi,0x400
    6c85:	48 89 c7             	mov    rdi,rax
    6c88:	e8 63 b9 ff ff       	call   25f0 <pcap_open_live@plt>
    6c8d:	48 89 85 e8 f7 ff ff 	mov    QWORD PTR [rbp-0x818],rax
    6c94:	48 83 bd e8 f7 ff ff 	cmp    QWORD PTR [rbp-0x818],0x0
    6c9b:	00 
    6c9c:	75 16                	jne    6cb4 <main+0x2d5>
    6c9e:	48 8d 3d c4 62 00 00 	lea    rdi,[rip+0x62c4]        # cf69 <_IO_stdin_used+0xf69>
    6ca5:	e8 26 bc ff ff       	call   28d0 <perror@plt>
    6caa:	bf 01 00 00 00       	mov    edi,0x1
    6caf:	e8 ac b8 ff ff       	call   2560 <exit@plt>
    6cb4:	b8 00 00 00 00       	mov    eax,0x0
    6cb9:	e8 72 45 00 00       	call   b230 <collect_scripts>
    6cbe:	b8 00 00 00 00       	mov    eax,0x0
    6cc3:	e8 8b 06 00 00       	call   7353 <start_nsh_server>
    6cc8:	48 8d 3d b9 62 00 00 	lea    rdi,[rip+0x62b9]        # cf88 <_IO_stdin_used+0xf88>
    6ccf:	e8 6c b8 ff ff       	call   2540 <puts@plt>
    6cd4:	48 8b 85 e8 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x818]
    6cdb:	b9 00 00 00 00       	mov    ecx,0x0
    6ce0:	48 8d 15 7c bd ff ff 	lea    rdx,[rip+0xffffffffffffbd7c]        # 2a63 <pktmgr>
    6ce7:	be ff ff ff ff       	mov    esi,0xffffffff
    6cec:	48 89 c7             	mov    rdi,rax
    6cef:	e8 bc bb ff ff       	call   28b0 <pcap_loop@plt>
    6cf4:	b8 00 00 00 00       	mov    eax,0x0
    6cf9:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    6cfd:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    6d04:	00 00 
    6d06:	74 05                	je     6d0d <main+0x32e>
    6d08:	e8 d3 ba ff ff       	call   27e0 <__stack_chk_fail@plt>
    6d0d:	c9                   	leave  
    6d0e:	c3                   	ret    

0000000000006d0f <sigint_processor>:
    6d0f:	f3 0f 1e fa          	endbr64 
    6d13:	55                   	push   rbp
    6d14:	48 89 e5             	mov    rbp,rsp
    6d17:	41 54                	push   r12
    6d19:	53                   	push   rbx
    6d1a:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    6d21:	89 bd bc fe ff ff    	mov    DWORD PTR [rbp-0x144],edi
    6d27:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6d2e:	00 00 
    6d30:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    6d34:	31 c0                	xor    eax,eax
    6d36:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    6d3d:	00 00 00 
    6d40:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    6d47:	48 89 c7             	mov    rdi,rax
    6d4a:	e8 8e c7 ff ff       	call   34dd <cb_get_formatted_time>
    6d4f:	48 8d 95 e0 fe ff ff 	lea    rdx,[rbp-0x120]
    6d56:	8b 85 bc fe ff ff    	mov    eax,DWORD PTR [rbp-0x144]
    6d5c:	89 c6                	mov    esi,eax
    6d5e:	48 8d 3d 9b 62 00 00 	lea    rdi,[rip+0x629b]        # d000 <_IO_stdin_used+0x1000>
    6d65:	b8 00 00 00 00       	mov    eax,0x0
    6d6a:	e8 71 b7 ff ff       	call   24e0 <printf@plt>
    6d6f:	48 8d 3d af 62 00 00 	lea    rdi,[rip+0x62af]        # d025 <_IO_stdin_used+0x1025>
    6d76:	e8 55 bb ff ff       	call   28d0 <perror@plt>
    6d7b:	0f b6 05 e3 31 10 00 	movzx  eax,BYTE PTR [rip+0x1031e3]        # 109f65 <quiet_exit>
    6d82:	83 f0 01             	xor    eax,0x1
    6d85:	84 c0                	test   al,al
    6d87:	0f 84 2e 02 00 00    	je     6fbb <sigint_processor+0x2ac>
    6d8d:	8b 05 11 a5 00 00    	mov    eax,DWORD PTR [rip+0xa511]        # 112a4 <total_pkt_captured>
    6d93:	89 c6                	mov    esi,eax
    6d95:	48 8d 3d 8a 62 00 00 	lea    rdi,[rip+0x628a]        # d026 <_IO_stdin_used+0x1026>
    6d9c:	b8 00 00 00 00       	mov    eax,0x0
    6da1:	e8 3a b7 ff ff       	call   24e0 <printf@plt>
    6da6:	48 8d 3d 93 62 00 00 	lea    rdi,[rip+0x6293]        # d040 <_IO_stdin_used+0x1040>
    6dad:	e8 8e b7 ff ff       	call   2540 <puts@plt>
    6db2:	c7 85 c4 fe ff ff 00 	mov    DWORD PTR [rbp-0x13c],0x0
    6db9:	00 00 00 
    6dbc:	e9 e8 01 00 00       	jmp    6fa9 <sigint_processor+0x29a>
    6dc1:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6dc7:	48 63 d0             	movsxd rdx,eax
    6dca:	48 89 d0             	mov    rax,rdx
    6dcd:	48 c1 e0 02          	shl    rax,0x2
    6dd1:	48 01 d0             	add    rax,rdx
    6dd4:	48 c1 e0 03          	shl    rax,0x3
    6dd8:	48 01 d0             	add    rax,rdx
    6ddb:	48 c1 e0 04          	shl    rax,0x4
    6ddf:	48 89 c2             	mov    rdx,rax
    6de2:	48 8d 05 a7 c9 0e 00 	lea    rax,[rip+0xec9a7]        # f3790 <watchlist+0x270>
    6de9:	44 8b 1c 02          	mov    r11d,DWORD PTR [rdx+rax*1]
    6ded:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6df3:	48 63 d0             	movsxd rdx,eax
    6df6:	48 89 d0             	mov    rax,rdx
    6df9:	48 c1 e0 02          	shl    rax,0x2
    6dfd:	48 01 d0             	add    rax,rdx
    6e00:	48 c1 e0 03          	shl    rax,0x3
    6e04:	48 01 d0             	add    rax,rdx
    6e07:	48 c1 e0 04          	shl    rax,0x4
    6e0b:	48 89 c2             	mov    rdx,rax
    6e0e:	48 8d 05 6f c9 0e 00 	lea    rax,[rip+0xec96f]        # f3784 <watchlist+0x264>
    6e15:	44 8b 14 02          	mov    r10d,DWORD PTR [rdx+rax*1]
    6e19:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6e1f:	48 63 d0             	movsxd rdx,eax
    6e22:	48 89 d0             	mov    rax,rdx
    6e25:	48 c1 e0 02          	shl    rax,0x2
    6e29:	48 01 d0             	add    rax,rdx
    6e2c:	48 c1 e0 03          	shl    rax,0x3
    6e30:	48 01 d0             	add    rax,rdx
    6e33:	48 c1 e0 04          	shl    rax,0x4
    6e37:	48 89 c2             	mov    rdx,rax
    6e3a:	48 8d 05 4b c9 0e 00 	lea    rax,[rip+0xec94b]        # f378c <watchlist+0x26c>
    6e41:	44 8b 0c 02          	mov    r9d,DWORD PTR [rdx+rax*1]
    6e45:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6e4b:	48 63 d0             	movsxd rdx,eax
    6e4e:	48 89 d0             	mov    rax,rdx
    6e51:	48 c1 e0 02          	shl    rax,0x2
    6e55:	48 01 d0             	add    rax,rdx
    6e58:	48 c1 e0 03          	shl    rax,0x3
    6e5c:	48 01 d0             	add    rax,rdx
    6e5f:	48 c1 e0 04          	shl    rax,0x4
    6e63:	48 89 c2             	mov    rdx,rax
    6e66:	48 8d 05 13 c9 0e 00 	lea    rax,[rip+0xec913]        # f3780 <watchlist+0x260>
    6e6d:	44 8b 04 02          	mov    r8d,DWORD PTR [rdx+rax*1]
    6e71:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6e77:	48 63 d0             	movsxd rdx,eax
    6e7a:	48 89 d0             	mov    rax,rdx
    6e7d:	48 c1 e0 02          	shl    rax,0x2
    6e81:	48 01 d0             	add    rax,rdx
    6e84:	48 c1 e0 03          	shl    rax,0x3
    6e88:	48 01 d0             	add    rax,rdx
    6e8b:	48 c1 e0 04          	shl    rax,0x4
    6e8f:	48 89 c2             	mov    rdx,rax
    6e92:	48 8d 05 ef c8 0e 00 	lea    rax,[rip+0xec8ef]        # f3788 <watchlist+0x268>
    6e99:	8b 3c 02             	mov    edi,DWORD PTR [rdx+rax*1]
    6e9c:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6ea2:	48 63 d0             	movsxd rdx,eax
    6ea5:	48 89 d0             	mov    rax,rdx
    6ea8:	48 c1 e0 02          	shl    rax,0x2
    6eac:	48 01 d0             	add    rax,rdx
    6eaf:	48 c1 e0 03          	shl    rax,0x3
    6eb3:	48 01 d0             	add    rax,rdx
    6eb6:	48 c1 e0 04          	shl    rax,0x4
    6eba:	48 89 c2             	mov    rdx,rax
    6ebd:	48 8d 05 b8 c8 0e 00 	lea    rax,[rip+0xec8b8]        # f377c <watchlist+0x25c>
    6ec4:	44 8b 24 02          	mov    r12d,DWORD PTR [rdx+rax*1]
    6ec8:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6ece:	48 63 d0             	movsxd rdx,eax
    6ed1:	48 89 d0             	mov    rax,rdx
    6ed4:	48 c1 e0 02          	shl    rax,0x2
    6ed8:	48 01 d0             	add    rax,rdx
    6edb:	48 c1 e0 03          	shl    rax,0x3
    6edf:	48 01 d0             	add    rax,rdx
    6ee2:	48 c1 e0 04          	shl    rax,0x4
    6ee6:	48 89 c2             	mov    rdx,rax
    6ee9:	48 8d 05 ac c8 0e 00 	lea    rax,[rip+0xec8ac]        # f379c <watchlist+0x27c>
    6ef0:	8b 1c 02             	mov    ebx,DWORD PTR [rdx+rax*1]
    6ef3:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6ef9:	48 63 d0             	movsxd rdx,eax
    6efc:	48 89 d0             	mov    rax,rdx
    6eff:	48 c1 e0 02          	shl    rax,0x2
    6f03:	48 01 d0             	add    rax,rdx
    6f06:	48 c1 e0 03          	shl    rax,0x3
    6f0a:	48 01 d0             	add    rax,rdx
    6f0d:	48 c1 e0 04          	shl    rax,0x4
    6f11:	48 89 c2             	mov    rdx,rax
    6f14:	48 8d 05 85 c8 0e 00 	lea    rax,[rip+0xec885]        # f37a0 <watchlist+0x280>
    6f1b:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
    6f1e:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6f24:	48 63 d0             	movsxd rdx,eax
    6f27:	48 89 d0             	mov    rax,rdx
    6f2a:	48 c1 e0 02          	shl    rax,0x2
    6f2e:	48 01 d0             	add    rax,rdx
    6f31:	48 c1 e0 03          	shl    rax,0x3
    6f35:	48 01 d0             	add    rax,rdx
    6f38:	48 c1 e0 04          	shl    rax,0x4
    6f3c:	48 89 c2             	mov    rdx,rax
    6f3f:	48 8d 05 32 c8 0e 00 	lea    rax,[rip+0xec832]        # f3778 <watchlist+0x258>
    6f46:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
    6f49:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6f4f:	48 63 d0             	movsxd rdx,eax
    6f52:	48 89 d0             	mov    rax,rdx
    6f55:	48 c1 e0 02          	shl    rax,0x2
    6f59:	48 01 d0             	add    rax,rdx
    6f5c:	48 c1 e0 03          	shl    rax,0x3
    6f60:	48 01 d0             	add    rax,rdx
    6f63:	48 c1 e0 04          	shl    rax,0x4
    6f67:	48 8d 15 b2 c5 0e 00 	lea    rdx,[rip+0xec5b2]        # f3520 <watchlist>
    6f6e:	48 01 d0             	add    rax,rdx
    6f71:	48 83 c0 08          	add    rax,0x8
    6f75:	48 83 ec 08          	sub    rsp,0x8
    6f79:	41 53                	push   r11
    6f7b:	41 52                	push   r10
    6f7d:	41 51                	push   r9
    6f7f:	41 50                	push   r8
    6f81:	57                   	push   rdi
    6f82:	45 89 e1             	mov    r9d,r12d
    6f85:	41 89 d8             	mov    r8d,ebx
    6f88:	89 f2                	mov    edx,esi
    6f8a:	48 89 c6             	mov    rsi,rax
    6f8d:	48 8d 3d e4 60 00 00 	lea    rdi,[rip+0x60e4]        # d078 <_IO_stdin_used+0x1078>
    6f94:	b8 00 00 00 00       	mov    eax,0x0
    6f99:	e8 42 b5 ff ff       	call   24e0 <printf@plt>
    6f9e:	48 83 c4 30          	add    rsp,0x30
    6fa2:	83 85 c4 fe ff ff 01 	add    DWORD PTR [rbp-0x13c],0x1
    6fa9:	8b 05 69 a0 00 00    	mov    eax,DWORD PTR [rip+0xa069]        # 11018 <watchlist_num>
    6faf:	39 85 c4 fe ff ff    	cmp    DWORD PTR [rbp-0x13c],eax
    6fb5:	0f 8e 06 fe ff ff    	jle    6dc1 <sigint_processor+0xb2>
    6fbb:	48 8d 35 56 61 00 00 	lea    rsi,[rip+0x6156]        # d118 <_IO_stdin_used+0x1118>
    6fc2:	48 8d 3d 51 61 00 00 	lea    rdi,[rip+0x6151]        # d11a <_IO_stdin_used+0x111a>
    6fc9:	e8 02 b6 ff ff       	call   25d0 <fopen@plt>
    6fce:	48 89 85 d8 fe ff ff 	mov    QWORD PTR [rbp-0x128],rax
    6fd5:	48 83 bd d8 fe ff ff 	cmp    QWORD PTR [rbp-0x128],0x0
    6fdc:	00 
    6fdd:	0f 85 99 00 00 00    	jne    707c <sigint_processor+0x36d>
    6fe3:	48 8d 3d 4e 61 00 00 	lea    rdi,[rip+0x614e]        # d138 <_IO_stdin_used+0x1138>
    6fea:	e8 51 b5 ff ff       	call   2540 <puts@plt>
    6fef:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    6ff6:	48 89 c7             	mov    rdi,rax
    6ff9:	e8 62 b8 ff ff       	call   2860 <fclose@plt>
    6ffe:	c7 85 c8 fe ff ff 00 	mov    DWORD PTR [rbp-0x138],0x0
    7005:	00 00 00 
    7008:	eb 5f                	jmp    7069 <sigint_processor+0x35a>
    700a:	8b 85 c8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x138]
    7010:	48 63 d0             	movsxd rdx,eax
    7013:	48 89 d0             	mov    rax,rdx
    7016:	48 c1 e0 04          	shl    rax,0x4
    701a:	48 01 d0             	add    rax,rdx
    701d:	48 01 c0             	add    rax,rax
    7020:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7024:	48 8d 05 f5 0c 10 00 	lea    rax,[rip+0x100cf5]        # 107d20 <arpcache>
    702b:	48 01 c2             	add    rdx,rax
    702e:	8b 85 c8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x138]
    7034:	48 63 c8             	movsxd rcx,eax
    7037:	48 89 c8             	mov    rax,rcx
    703a:	48 c1 e0 04          	shl    rax,0x4
    703e:	48 01 c8             	add    rax,rcx
    7041:	48 01 c0             	add    rax,rax
    7044:	48 8d 0d d5 0c 10 00 	lea    rcx,[rip+0x100cd5]        # 107d20 <arpcache>
    704b:	48 01 c8             	add    rax,rcx
    704e:	48 89 c6             	mov    rsi,rax
    7051:	48 8d 3d 27 61 00 00 	lea    rdi,[rip+0x6127]        # d17f <_IO_stdin_used+0x117f>
    7058:	b8 00 00 00 00       	mov    eax,0x0
    705d:	e8 7e b4 ff ff       	call   24e0 <printf@plt>
    7062:	83 85 c8 fe ff ff 01 	add    DWORD PTR [rbp-0x138],0x1
    7069:	8b 05 ad 9f 00 00    	mov    eax,DWORD PTR [rip+0x9fad]        # 1101c <arp_entries>
    706f:	39 85 c8 fe ff ff    	cmp    DWORD PTR [rbp-0x138],eax
    7075:	7e 93                	jle    700a <sigint_processor+0x2fb>
    7077:	e9 da 00 00 00       	jmp    7156 <sigint_processor+0x447>
    707c:	c7 85 cc fe ff ff 00 	mov    DWORD PTR [rbp-0x134],0x0
    7083:	00 00 00 
    7086:	eb 67                	jmp    70ef <sigint_processor+0x3e0>
    7088:	8b 85 cc fe ff ff    	mov    eax,DWORD PTR [rbp-0x134]
    708e:	48 63 d0             	movsxd rdx,eax
    7091:	48 89 d0             	mov    rax,rdx
    7094:	48 c1 e0 04          	shl    rax,0x4
    7098:	48 01 d0             	add    rax,rdx
    709b:	48 01 c0             	add    rax,rax
    709e:	48 8d 50 10          	lea    rdx,[rax+0x10]
    70a2:	48 8d 05 77 0c 10 00 	lea    rax,[rip+0x100c77]        # 107d20 <arpcache>
    70a9:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    70ad:	8b 85 cc fe ff ff    	mov    eax,DWORD PTR [rbp-0x134]
    70b3:	48 63 d0             	movsxd rdx,eax
    70b6:	48 89 d0             	mov    rax,rdx
    70b9:	48 c1 e0 04          	shl    rax,0x4
    70bd:	48 01 d0             	add    rax,rdx
    70c0:	48 01 c0             	add    rax,rax
    70c3:	48 8d 15 56 0c 10 00 	lea    rdx,[rip+0x100c56]        # 107d20 <arpcache>
    70ca:	48 01 c2             	add    rdx,rax
    70cd:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    70d4:	48 8d 35 ae 60 00 00 	lea    rsi,[rip+0x60ae]        # d189 <_IO_stdin_used+0x1189>
    70db:	48 89 c7             	mov    rdi,rax
    70de:	b8 00 00 00 00       	mov    eax,0x0
    70e3:	e8 f8 b7 ff ff       	call   28e0 <fprintf@plt>
    70e8:	83 85 cc fe ff ff 01 	add    DWORD PTR [rbp-0x134],0x1
    70ef:	8b 05 27 9f 00 00    	mov    eax,DWORD PTR [rip+0x9f27]        # 1101c <arp_entries>
    70f5:	39 85 cc fe ff ff    	cmp    DWORD PTR [rbp-0x134],eax
    70fb:	7e 8b                	jle    7088 <sigint_processor+0x379>
    70fd:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    7104:	48 89 c7             	mov    rdi,rax
    7107:	e8 54 b7 ff ff       	call   2860 <fclose@plt>
    710c:	c7 85 d0 fe ff ff 00 	mov    DWORD PTR [rbp-0x130],0x0
    7113:	00 00 00 
    7116:	eb 2f                	jmp    7147 <sigint_processor+0x438>
    7118:	8b 85 d0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x130]
    711e:	48 98                	cdqe   
    7120:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    7127:	00 
    7128:	48 8d 05 71 9f 00 00 	lea    rax,[rip+0x9f71]        # 110a0 <threads>
    712f:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    7133:	be 00 00 00 00       	mov    esi,0x0
    7138:	48 89 c7             	mov    rdi,rax
    713b:	e8 90 b3 ff ff       	call   24d0 <pthread_join@plt>
    7140:	83 85 d0 fe ff ff 01 	add    DWORD PTR [rbp-0x130],0x1
    7147:	8b 05 53 a1 00 00    	mov    eax,DWORD PTR [rip+0xa153]        # 112a0 <thread_count>
    714d:	39 85 d0 fe ff ff    	cmp    DWORD PTR [rbp-0x130],eax
    7153:	7c c3                	jl     7118 <sigint_processor+0x409>
    7155:	90                   	nop
    7156:	bf 00 00 00 00       	mov    edi,0x0
    715b:	e8 00 b4 ff ff       	call   2560 <exit@plt>

0000000000007160 <print_help_and_exit>:
    7160:	f3 0f 1e fa          	endbr64 
    7164:	55                   	push   rbp
    7165:	48 89 e5             	mov    rbp,rsp
    7168:	48 8d 35 21 60 00 00 	lea    rsi,[rip+0x6021]        # d190 <_IO_stdin_used+0x1190>
    716f:	48 8d 3d 22 60 00 00 	lea    rdi,[rip+0x6022]        # d198 <_IO_stdin_used+0x1198>
    7176:	b8 00 00 00 00       	mov    eax,0x0
    717b:	e8 60 b3 ff ff       	call   24e0 <printf@plt>
    7180:	bf 00 00 00 00       	mov    edi,0x0
    7185:	e8 d6 b3 ff ff       	call   2560 <exit@plt>

000000000000718a <print_cpu_info>:
    718a:	f3 0f 1e fa          	endbr64 
    718e:	55                   	push   rbp
    718f:	48 89 e5             	mov    rbp,rsp
    7192:	53                   	push   rbx
    7193:	48 81 ec 48 02 00 00 	sub    rsp,0x248
    719a:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    71a1:	00 00 
    71a3:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    71a7:	31 c0                	xor    eax,eax
    71a9:	48 8d 35 6f 60 00 00 	lea    rsi,[rip+0x606f]        # d21f <_IO_stdin_used+0x121f>
    71b0:	48 8d 3d 6b 60 00 00 	lea    rdi,[rip+0x606b]        # d222 <_IO_stdin_used+0x1222>
    71b7:	e8 14 b4 ff ff       	call   25d0 <fopen@plt>
    71bc:	48 89 85 d8 fd ff ff 	mov    QWORD PTR [rbp-0x228],rax
    71c3:	48 c7 85 c8 fd ff ff 	mov    QWORD PTR [rbp-0x238],0x0
    71ca:	00 00 00 00 
    71ce:	48 c7 85 d0 fd ff ff 	mov    QWORD PTR [rbp-0x230],0x0
    71d5:	00 00 00 00 
    71d9:	c7 85 bc fd ff ff 00 	mov    DWORD PTR [rbp-0x244],0x0
    71e0:	00 00 00 
    71e3:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    71ea:	ba 00 02 00 00       	mov    edx,0x200
    71ef:	be 00 00 00 00       	mov    esi,0x0
    71f4:	48 89 c7             	mov    rdi,rax
    71f7:	e8 f4 b2 ff ff       	call   24f0 <memset@plt>
    71fc:	e9 b3 00 00 00       	jmp    72b4 <print_cpu_info+0x12a>
    7201:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    7208:	ba 0a 00 00 00       	mov    edx,0xa
    720d:	48 89 c6             	mov    rsi,rax
    7210:	48 8d 3d 19 60 00 00 	lea    rdi,[rip+0x6019]        # d230 <_IO_stdin_used+0x1230>
    7217:	e8 94 b3 ff ff       	call   25b0 <strncmp@plt>
    721c:	85 c0                	test   eax,eax
    721e:	0f 85 90 00 00 00    	jne    72b4 <print_cpu_info+0x12a>
    7224:	c7 85 c0 fd ff ff 00 	mov    DWORD PTR [rbp-0x240],0x0
    722b:	00 00 00 
    722e:	c7 85 c4 fd ff ff 00 	mov    DWORD PTR [rbp-0x23c],0x0
    7235:	00 00 00 
    7238:	eb 2e                	jmp    7268 <print_cpu_info+0xde>
    723a:	48 8b 95 c8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x238]
    7241:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    7247:	48 98                	cdqe   
    7249:	48 01 d0             	add    rax,rdx
    724c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    724f:	3c 3a                	cmp    al,0x3a
    7251:	75 0e                	jne    7261 <print_cpu_info+0xd7>
    7253:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    7259:	89 85 c0 fd ff ff    	mov    DWORD PTR [rbp-0x240],eax
    725f:	eb 24                	jmp    7285 <print_cpu_info+0xfb>
    7261:	83 85 c4 fd ff ff 01 	add    DWORD PTR [rbp-0x23c],0x1
    7268:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    726e:	48 63 d8             	movsxd rbx,eax
    7271:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    7278:	48 89 c7             	mov    rdi,rax
    727b:	e8 f0 b3 ff ff       	call   2670 <strlen@plt>
    7280:	48 39 c3             	cmp    rbx,rax
    7283:	72 b5                	jb     723a <print_cpu_info+0xb0>
    7285:	83 85 bc fd ff ff 01 	add    DWORD PTR [rbp-0x244],0x1
    728c:	48 8b 95 c8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x238]
    7293:	8b 85 c0 fd ff ff    	mov    eax,DWORD PTR [rbp-0x240]
    7299:	48 98                	cdqe   
    729b:	48 83 c0 02          	add    rax,0x2
    729f:	48 01 c2             	add    rdx,rax
    72a2:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    72a9:	48 89 d6             	mov    rsi,rdx
    72ac:	48 89 c7             	mov    rdi,rax
    72af:	e8 6c b4 ff ff       	call   2720 <strcat@plt>
    72b4:	48 8b 95 d8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x228]
    72bb:	48 8d b5 d0 fd ff ff 	lea    rsi,[rbp-0x230]
    72c2:	48 8d 85 c8 fd ff ff 	lea    rax,[rbp-0x238]
    72c9:	48 89 d1             	mov    rcx,rdx
    72cc:	ba 0a 00 00 00       	mov    edx,0xa
    72d1:	48 89 c7             	mov    rdi,rax
    72d4:	e8 27 b6 ff ff       	call   2900 <getdelim@plt>
    72d9:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
    72dd:	0f 85 1e ff ff ff    	jne    7201 <print_cpu_info+0x77>
    72e3:	48 8d 95 e0 fd ff ff 	lea    rdx,[rbp-0x220]
    72ea:	8b 85 bc fd ff ff    	mov    eax,DWORD PTR [rbp-0x244]
    72f0:	89 c6                	mov    esi,eax
    72f2:	48 8d 3d 42 5f 00 00 	lea    rdi,[rip+0x5f42]        # d23b <_IO_stdin_used+0x123b>
    72f9:	b8 00 00 00 00       	mov    eax,0x0
    72fe:	e8 dd b1 ff ff       	call   24e0 <printf@plt>
    7303:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    730a:	48 89 c7             	mov    rdi,rax
    730d:	e8 4e b3 ff ff       	call   2660 <free@plt>
    7312:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    7319:	48 89 c7             	mov    rdi,rax
    731c:	e8 3f b5 ff ff       	call   2860 <fclose@plt>
    7321:	90                   	nop
    7322:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7326:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    732d:	00 00 
    732f:	74 05                	je     7336 <print_cpu_info+0x1ac>
    7331:	e8 aa b4 ff ff       	call   27e0 <__stack_chk_fail@plt>
    7336:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    733a:	c9                   	leave  
    733b:	c3                   	ret    

000000000000733c <print_logo>:
    733c:	f3 0f 1e fa          	endbr64 
    7340:	55                   	push   rbp
    7341:	48 89 e5             	mov    rbp,rsp
    7344:	48 8d 3d 05 5f 00 00 	lea    rdi,[rip+0x5f05]        # d250 <_IO_stdin_used+0x1250>
    734b:	e8 f0 b1 ff ff       	call   2540 <puts@plt>
    7350:	90                   	nop
    7351:	5d                   	pop    rbp
    7352:	c3                   	ret    

0000000000007353 <start_nsh_server>:
    7353:	f3 0f 1e fa          	endbr64 
    7357:	55                   	push   rbp
    7358:	48 89 e5             	mov    rbp,rsp
    735b:	48 83 ec 10          	sub    rsp,0x10
    735f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7366:	00 00 
    7368:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    736c:	31 c0                	xor    eax,eax
    736e:	48 8d 45 f0          	lea    rax,[rbp-0x10]
    7372:	b9 00 00 00 00       	mov    ecx,0x0
    7377:	48 8d 15 71 00 00 00 	lea    rdx,[rip+0x71]        # 73ef <actually_start_nsh_server>
    737e:	be 00 00 00 00       	mov    esi,0x0
    7383:	48 89 c7             	mov    rdi,rax
    7386:	e8 b5 b2 ff ff       	call   2640 <pthread_create@plt>
    738b:	90                   	nop
    738c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7390:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    7397:	00 00 
    7399:	74 05                	je     73a0 <start_nsh_server+0x4d>
    739b:	e8 40 b4 ff ff       	call   27e0 <__stack_chk_fail@plt>
    73a0:	c9                   	leave  
    73a1:	c3                   	ret    

00000000000073a2 <rnstrip>:
    73a2:	f3 0f 1e fa          	endbr64 
    73a6:	55                   	push   rbp
    73a7:	48 89 e5             	mov    rbp,rsp
    73aa:	48 83 ec 10          	sub    rsp,0x10
    73ae:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    73b2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    73b6:	48 8d 35 0b 60 00 00 	lea    rsi,[rip+0x600b]        # d3c8 <_IO_stdin_used+0x13c8>
    73bd:	48 89 c7             	mov    rdi,rax
    73c0:	e8 cb b4 ff ff       	call   2890 <strcspn@plt>
    73c5:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    73c9:	48 01 d0             	add    rax,rdx
    73cc:	c6 00 00             	mov    BYTE PTR [rax],0x0
    73cf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    73d3:	48 8d 35 f0 5f 00 00 	lea    rsi,[rip+0x5ff0]        # d3ca <_IO_stdin_used+0x13ca>
    73da:	48 89 c7             	mov    rdi,rax
    73dd:	e8 ae b4 ff ff       	call   2890 <strcspn@plt>
    73e2:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    73e6:	48 01 d0             	add    rax,rdx
    73e9:	c6 00 00             	mov    BYTE PTR [rax],0x0
    73ec:	90                   	nop
    73ed:	c9                   	leave  
    73ee:	c3                   	ret    

00000000000073ef <actually_start_nsh_server>:
    73ef:	f3 0f 1e fa          	endbr64 
    73f3:	55                   	push   rbp
    73f4:	48 89 e5             	mov    rbp,rsp
    73f7:	48 83 ec 50          	sub    rsp,0x50
    73fb:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7402:	00 00 
    7404:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7408:	31 c0                	xor    eax,eax
    740a:	c7 45 bc 10 00 00 00 	mov    DWORD PTR [rbp-0x44],0x10
    7411:	ba 00 00 00 00       	mov    edx,0x0
    7416:	be 01 00 00 00       	mov    esi,0x1
    741b:	bf 02 00 00 00       	mov    edi,0x2
    7420:	e8 9b b3 ff ff       	call   27c0 <socket@plt>
    7425:	89 45 c0             	mov    DWORD PTR [rbp-0x40],eax
    7428:	83 7d c0 00          	cmp    DWORD PTR [rbp-0x40],0x0
    742c:	75 16                	jne    7444 <actually_start_nsh_server+0x55>
    742e:	48 8d 3d 9b 5f 00 00 	lea    rdi,[rip+0x5f9b]        # d3d0 <_IO_stdin_used+0x13d0>
    7435:	e8 06 b1 ff ff       	call   2540 <puts@plt>
    743a:	bf 01 00 00 00       	mov    edi,0x1
    743f:	e8 1c b1 ff ff       	call   2560 <exit@plt>
    7444:	48 8d 55 bc          	lea    rdx,[rbp-0x44]
    7448:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    744b:	41 b8 04 00 00 00    	mov    r8d,0x4
    7451:	48 89 d1             	mov    rcx,rdx
    7454:	ba 02 00 00 00       	mov    edx,0x2
    7459:	be 01 00 00 00       	mov    esi,0x1
    745e:	89 c7                	mov    edi,eax
    7460:	e8 9b b1 ff ff       	call   2600 <setsockopt@plt>
    7465:	85 c0                	test   eax,eax
    7467:	74 16                	je     747f <actually_start_nsh_server+0x90>
    7469:	48 8d 3d 88 5f 00 00 	lea    rdi,[rip+0x5f88]        # d3f8 <_IO_stdin_used+0x13f8>
    7470:	e8 cb b0 ff ff       	call   2540 <puts@plt>
    7475:	bf 01 00 00 00       	mov    edi,0x1
    747a:	e8 e1 b0 ff ff       	call   2560 <exit@plt>
    747f:	66 c7 45 e0 02 00    	mov    WORD PTR [rbp-0x20],0x2
    7485:	bf 00 00 00 00       	mov    edi,0x0
    748a:	e8 31 b4 ff ff       	call   28c0 <htonl@plt>
    748f:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
    7492:	bf 81 02 00 00       	mov    edi,0x281
    7497:	e8 b4 b0 ff ff       	call   2550 <htons@plt>
    749c:	66 89 45 e2          	mov    WORD PTR [rbp-0x1e],ax
    74a0:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
    74a4:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    74a7:	ba 10 00 00 00       	mov    edx,0x10
    74ac:	48 89 ce             	mov    rsi,rcx
    74af:	89 c7                	mov    edi,eax
    74b1:	e8 ea b3 ff ff       	call   28a0 <bind@plt>
    74b6:	85 c0                	test   eax,eax
    74b8:	79 16                	jns    74d0 <actually_start_nsh_server+0xe1>
    74ba:	48 8d 3d 5f 5f 00 00 	lea    rdi,[rip+0x5f5f]        # d420 <_IO_stdin_used+0x1420>
    74c1:	e8 7a b0 ff ff       	call   2540 <puts@plt>
    74c6:	bf 01 00 00 00       	mov    edi,0x1
    74cb:	e8 90 b0 ff ff       	call   2560 <exit@plt>
    74d0:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    74d3:	be 05 00 00 00       	mov    esi,0x5
    74d8:	89 c7                	mov    edi,eax
    74da:	e8 b1 b1 ff ff       	call   2690 <listen@plt>
    74df:	85 c0                	test   eax,eax
    74e1:	79 16                	jns    74f9 <actually_start_nsh_server+0x10a>
    74e3:	48 8d 3d 6e 5f 00 00 	lea    rdi,[rip+0x5f6e]        # d458 <_IO_stdin_used+0x1458>
    74ea:	e8 51 b0 ff ff       	call   2540 <puts@plt>
    74ef:	bf 01 00 00 00       	mov    edi,0x1
    74f4:	e8 67 b0 ff ff       	call   2560 <exit@plt>
    74f9:	48 8d 55 bc          	lea    rdx,[rbp-0x44]
    74fd:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
    7501:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    7504:	48 89 ce             	mov    rsi,rcx
    7507:	89 c7                	mov    edi,eax
    7509:	e8 02 b4 ff ff       	call   2910 <accept@plt>
    750e:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    7511:	83 7d c4 00          	cmp    DWORD PTR [rbp-0x3c],0x0
    7515:	79 20                	jns    7537 <actually_start_nsh_server+0x148>
    7517:	b8 00 00 00 00       	mov    eax,0x0
    751c:	e8 e8 be ff ff       	call   3409 <get_formated_time>
    7521:	48 89 c6             	mov    rsi,rax
    7524:	48 8d 3d 5d 5f 00 00 	lea    rdi,[rip+0x5f5d]        # d488 <_IO_stdin_used+0x1488>
    752b:	b8 00 00 00 00       	mov    eax,0x0
    7530:	e8 ab af ff ff       	call   24e0 <printf@plt>
    7535:	eb c2                	jmp    74f9 <actually_start_nsh_server+0x10a>
    7537:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    753a:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
    753d:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    7541:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    7545:	48 8d 55 d0          	lea    rdx,[rbp-0x30]
    7549:	48 8d 45 c8          	lea    rax,[rbp-0x38]
    754d:	48 89 d1             	mov    rcx,rdx
    7550:	48 8d 15 0f 00 00 00 	lea    rdx,[rip+0xf]        # 7566 <accept_cmd>
    7557:	be 00 00 00 00       	mov    esi,0x0
    755c:	48 89 c7             	mov    rdi,rax
    755f:	e8 dc b0 ff ff       	call   2640 <pthread_create@plt>
    7564:	eb 93                	jmp    74f9 <actually_start_nsh_server+0x10a>

0000000000007566 <accept_cmd>:
    7566:	f3 0f 1e fa          	endbr64 
    756a:	55                   	push   rbp
    756b:	48 89 e5             	mov    rbp,rsp
    756e:	48 83 ec 30          	sub    rsp,0x30
    7572:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    7576:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    757a:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    757e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    7582:	8b 00                	mov    eax,DWORD PTR [rax]
    7584:	64 48 8b 14 25 00 00 	mov    rdx,QWORD PTR fs:0x0
    758b:	00 00 
    758d:	48 8d 8a 00 fc ff ff 	lea    rcx,[rdx-0x400]
    7594:	ba 00 04 00 00       	mov    edx,0x400
    7599:	48 89 ce             	mov    rsi,rcx
    759c:	89 c7                	mov    edi,eax
    759e:	e8 fd af ff ff       	call   25a0 <read@plt>
    75a3:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
    75a6:	83 7d ec 00          	cmp    DWORD PTR [rbp-0x14],0x0
    75aa:	7e 45                	jle    75f1 <accept_cmd+0x8b>
    75ac:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    75b3:	00 00 
    75b5:	48 05 00 fc ff ff    	add    rax,0xfffffffffffffc00
    75bb:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    75bf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    75c3:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    75c6:	0f b6 c0             	movzx  eax,al
    75c9:	89 c6                	mov    esi,eax
    75cb:	48 8d 3d d8 5e 00 00 	lea    rdi,[rip+0x5ed8]        # d4aa <_IO_stdin_used+0x14aa>
    75d2:	b8 00 00 00 00       	mov    eax,0x0
    75d7:	e8 04 af ff ff       	call   24e0 <printf@plt>
    75dc:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    75e0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    75e4:	48 89 d6             	mov    rsi,rdx
    75e7:	48 89 c7             	mov    rdi,rax
    75ea:	e8 98 0c 00 00       	call   8287 <process_opcode>
    75ef:	eb 8d                	jmp    757e <accept_cmd+0x18>
    75f1:	90                   	nop
    75f2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    75f6:	8b 00                	mov    eax,DWORD PTR [rax]
    75f8:	89 c7                	mov    edi,eax
    75fa:	e8 21 af ff ff       	call   2520 <close@plt>
    75ff:	90                   	nop
    7600:	c9                   	leave  
    7601:	c3                   	ret    

0000000000007602 <tcp_rst_portscan_detect>:
    7602:	f3 0f 1e fa          	endbr64 
    7606:	55                   	push   rbp
    7607:	48 89 e5             	mov    rbp,rsp
    760a:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    7611:	48 89 bd c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rdi
    7618:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    761f:	00 00 
    7621:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7625:	31 c0                	xor    eax,eax
    7627:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    762e:	00 00 00 
    7631:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7638:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    763e:	83 f8 1e             	cmp    eax,0x1e
    7641:	74 0a                	je     764d <tcp_rst_portscan_detect+0x4b>
    7643:	b8 00 00 00 00       	mov    eax,0x0
    7648:	e9 8d 01 00 00       	jmp    77da <tcp_rst_portscan_detect+0x1d8>
    764d:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7654:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    765a:	83 e8 01             	sub    eax,0x1
    765d:	89 85 d8 fe ff ff    	mov    DWORD PTR [rbp-0x128],eax
    7663:	eb 6c                	jmp    76d1 <tcp_rst_portscan_detect+0xcf>
    7665:	8b 85 d8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x128]
    766b:	89 85 e4 fe ff ff    	mov    DWORD PTR [rbp-0x11c],eax
    7671:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7678:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    767e:	48 63 d2             	movsxd rdx,edx
    7681:	48 83 c2 28          	add    rdx,0x28
    7685:	48 8b 44 d0 10       	mov    rax,QWORD PTR [rax+rdx*8+0x10]
    768a:	89 c1                	mov    ecx,eax
    768c:	83 ad d8 fe ff ff 01 	sub    DWORD PTR [rbp-0x128],0x1
    7693:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    769a:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    76a0:	48 63 d2             	movsxd rdx,edx
    76a3:	48 83 c2 28          	add    rdx,0x28
    76a7:	48 8b 44 d0 10       	mov    rax,QWORD PTR [rax+rdx*8+0x10]
    76ac:	29 c1                	sub    ecx,eax
    76ae:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
    76b4:	8d 50 01             	lea    edx,[rax+0x1]
    76b7:	89 95 d4 fe ff ff    	mov    DWORD PTR [rbp-0x12c],edx
    76bd:	89 ca                	mov    edx,ecx
    76bf:	48 98                	cdqe   
    76c1:	89 94 85 f0 fe ff ff 	mov    DWORD PTR [rbp+rax*4-0x110],edx
    76c8:	83 bd e4 fe ff ff 01 	cmp    DWORD PTR [rbp-0x11c],0x1
    76cf:	74 0b                	je     76dc <tcp_rst_portscan_detect+0xda>
    76d1:	83 bd d8 fe ff ff 00 	cmp    DWORD PTR [rbp-0x128],0x0
    76d8:	75 8b                	jne    7665 <tcp_rst_portscan_detect+0x63>
    76da:	eb 01                	jmp    76dd <tcp_rst_portscan_detect+0xdb>
    76dc:	90                   	nop
    76dd:	c7 85 dc fe ff ff 00 	mov    DWORD PTR [rbp-0x124],0x0
    76e4:	00 00 00 
    76e7:	c7 85 e0 fe ff ff 00 	mov    DWORD PTR [rbp-0x120],0x0
    76ee:	00 00 00 
    76f1:	eb 24                	jmp    7717 <tcp_rst_portscan_detect+0x115>
    76f3:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    76f9:	48 98                	cdqe   
    76fb:	8b 84 85 f0 fe ff ff 	mov    eax,DWORD PTR [rbp+rax*4-0x110]
    7702:	3d b3 b7 b4 00       	cmp    eax,0xb4b7b3
    7707:	7f 07                	jg     7710 <tcp_rst_portscan_detect+0x10e>
    7709:	83 85 dc fe ff ff 01 	add    DWORD PTR [rbp-0x124],0x1
    7710:	83 85 e0 fe ff ff 01 	add    DWORD PTR [rbp-0x120],0x1
    7717:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    771d:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    7723:	7c ce                	jl     76f3 <tcp_rst_portscan_detect+0xf1>
    7725:	8b 85 dc fe ff ff    	mov    eax,DWORD PTR [rbp-0x124]
    772b:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    7731:	0f 85 9e 00 00 00    	jne    77d5 <tcp_rst_portscan_detect+0x1d3>
    7737:	48 8b 05 f2 98 00 00 	mov    rax,QWORD PTR [rip+0x98f2]        # 11030 <def_log_file>
    773e:	48 8d 35 73 5d 00 00 	lea    rsi,[rip+0x5d73]        # d4b8 <_IO_stdin_used+0x14b8>
    7745:	48 89 c7             	mov    rdi,rax
    7748:	e8 83 ae ff ff       	call   25d0 <fopen@plt>
    774d:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
    7754:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    775b:	48 83 c0 08          	add    rax,0x8
    775f:	48 89 c6             	mov    rsi,rax
    7762:	48 8d 3d 57 5d 00 00 	lea    rdi,[rip+0x5d57]        # d4c0 <_IO_stdin_used+0x14c0>
    7769:	b8 00 00 00 00       	mov    eax,0x0
    776e:	e8 6d ad ff ff       	call   24e0 <printf@plt>
    7773:	b8 00 00 00 00       	mov    eax,0x0
    7778:	e8 8c bc ff ff       	call   3409 <get_formated_time>
    777d:	48 89 c1             	mov    rcx,rax
    7780:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7787:	48 8d 50 08          	lea    rdx,[rax+0x8]
    778b:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    7792:	48 8d 35 57 5d 00 00 	lea    rsi,[rip+0x5d57]        # d4f0 <_IO_stdin_used+0x14f0>
    7799:	48 89 c7             	mov    rdi,rax
    779c:	b8 00 00 00 00       	mov    eax,0x0
    77a1:	e8 0a af ff ff       	call   26b0 <sprintf@plt>
    77a6:	48 8b 95 e8 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x118]
    77ad:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    77b4:	48 89 d6             	mov    rsi,rdx
    77b7:	48 89 c7             	mov    rdi,rax
    77ba:	e8 71 af ff ff       	call   2730 <fputs@plt>
    77bf:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    77c6:	48 89 c7             	mov    rdi,rax
    77c9:	e8 92 b0 ff ff       	call   2860 <fclose@plt>
    77ce:	b8 01 00 00 00       	mov    eax,0x1
    77d3:	eb 05                	jmp    77da <tcp_rst_portscan_detect+0x1d8>
    77d5:	b8 00 00 00 00       	mov    eax,0x0
    77da:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    77de:	64 48 2b 34 25 28 00 	sub    rsi,QWORD PTR fs:0x28
    77e5:	00 00 
    77e7:	74 05                	je     77ee <tcp_rst_portscan_detect+0x1ec>
    77e9:	e8 f2 af ff ff       	call   27e0 <__stack_chk_fail@plt>
    77ee:	c9                   	leave  
    77ef:	c3                   	ret    

00000000000077f0 <fin_rst_portscan_detect>:
    77f0:	f3 0f 1e fa          	endbr64 
    77f4:	55                   	push   rbp
    77f5:	48 89 e5             	mov    rbp,rsp
    77f8:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    77ff:	48 89 bd c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rdi
    7806:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    780d:	00 00 
    780f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7813:	31 c0                	xor    eax,eax
    7815:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    781c:	00 00 00 
    781f:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7826:	8b 40 50             	mov    eax,DWORD PTR [rax+0x50]
    7829:	83 f8 1e             	cmp    eax,0x1e
    782c:	74 0a                	je     7838 <fin_rst_portscan_detect+0x48>
    782e:	b8 00 00 00 00       	mov    eax,0x0
    7833:	e9 8a 01 00 00       	jmp    79c2 <fin_rst_portscan_detect+0x1d2>
    7838:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    783f:	8b 40 50             	mov    eax,DWORD PTR [rax+0x50]
    7842:	83 e8 01             	sub    eax,0x1
    7845:	89 85 d8 fe ff ff    	mov    DWORD PTR [rbp-0x128],eax
    784b:	eb 6c                	jmp    78b9 <fin_rst_portscan_detect+0xc9>
    784d:	8b 85 d8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x128]
    7853:	89 85 e4 fe ff ff    	mov    DWORD PTR [rbp-0x11c],eax
    7859:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7860:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    7866:	48 63 d2             	movsxd rdx,edx
    7869:	48 83 c2 0a          	add    rdx,0xa
    786d:	48 8b 44 d0 08       	mov    rax,QWORD PTR [rax+rdx*8+0x8]
    7872:	89 c1                	mov    ecx,eax
    7874:	83 ad d8 fe ff ff 01 	sub    DWORD PTR [rbp-0x128],0x1
    787b:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7882:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    7888:	48 63 d2             	movsxd rdx,edx
    788b:	48 83 c2 0a          	add    rdx,0xa
    788f:	48 8b 44 d0 08       	mov    rax,QWORD PTR [rax+rdx*8+0x8]
    7894:	29 c1                	sub    ecx,eax
    7896:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
    789c:	8d 50 01             	lea    edx,[rax+0x1]
    789f:	89 95 d4 fe ff ff    	mov    DWORD PTR [rbp-0x12c],edx
    78a5:	89 ca                	mov    edx,ecx
    78a7:	48 98                	cdqe   
    78a9:	89 94 85 f0 fe ff ff 	mov    DWORD PTR [rbp+rax*4-0x110],edx
    78b0:	83 bd e4 fe ff ff 01 	cmp    DWORD PTR [rbp-0x11c],0x1
    78b7:	74 0b                	je     78c4 <fin_rst_portscan_detect+0xd4>
    78b9:	83 bd d8 fe ff ff 00 	cmp    DWORD PTR [rbp-0x128],0x0
    78c0:	75 8b                	jne    784d <fin_rst_portscan_detect+0x5d>
    78c2:	eb 01                	jmp    78c5 <fin_rst_portscan_detect+0xd5>
    78c4:	90                   	nop
    78c5:	c7 85 dc fe ff ff 00 	mov    DWORD PTR [rbp-0x124],0x0
    78cc:	00 00 00 
    78cf:	c7 85 e0 fe ff ff 00 	mov    DWORD PTR [rbp-0x120],0x0
    78d6:	00 00 00 
    78d9:	eb 24                	jmp    78ff <fin_rst_portscan_detect+0x10f>
    78db:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    78e1:	48 98                	cdqe   
    78e3:	8b 84 85 f0 fe ff ff 	mov    eax,DWORD PTR [rbp+rax*4-0x110]
    78ea:	3d 73 7e e2 00       	cmp    eax,0xe27e73
    78ef:	7f 07                	jg     78f8 <fin_rst_portscan_detect+0x108>
    78f1:	83 85 dc fe ff ff 01 	add    DWORD PTR [rbp-0x124],0x1
    78f8:	83 85 e0 fe ff ff 01 	add    DWORD PTR [rbp-0x120],0x1
    78ff:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    7905:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    790b:	7c ce                	jl     78db <fin_rst_portscan_detect+0xeb>
    790d:	8b 85 dc fe ff ff    	mov    eax,DWORD PTR [rbp-0x124]
    7913:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    7919:	0f 85 9e 00 00 00    	jne    79bd <fin_rst_portscan_detect+0x1cd>
    791f:	48 8b 05 0a 97 00 00 	mov    rax,QWORD PTR [rip+0x970a]        # 11030 <def_log_file>
    7926:	48 8d 35 8b 5b 00 00 	lea    rsi,[rip+0x5b8b]        # d4b8 <_IO_stdin_used+0x14b8>
    792d:	48 89 c7             	mov    rdi,rax
    7930:	e8 9b ac ff ff       	call   25d0 <fopen@plt>
    7935:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
    793c:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7943:	48 83 c0 08          	add    rax,0x8
    7947:	48 89 c6             	mov    rsi,rax
    794a:	48 8d 3d c7 5b 00 00 	lea    rdi,[rip+0x5bc7]        # d518 <_IO_stdin_used+0x1518>
    7951:	b8 00 00 00 00       	mov    eax,0x0
    7956:	e8 85 ab ff ff       	call   24e0 <printf@plt>
    795b:	b8 00 00 00 00       	mov    eax,0x0
    7960:	e8 a4 ba ff ff       	call   3409 <get_formated_time>
    7965:	48 89 c1             	mov    rcx,rax
    7968:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    796f:	48 8d 50 08          	lea    rdx,[rax+0x8]
    7973:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    797a:	48 8d 35 c7 5b 00 00 	lea    rsi,[rip+0x5bc7]        # d548 <_IO_stdin_used+0x1548>
    7981:	48 89 c7             	mov    rdi,rax
    7984:	b8 00 00 00 00       	mov    eax,0x0
    7989:	e8 22 ad ff ff       	call   26b0 <sprintf@plt>
    798e:	48 8b 95 e8 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x118]
    7995:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    799c:	48 89 d6             	mov    rsi,rdx
    799f:	48 89 c7             	mov    rdi,rax
    79a2:	e8 89 ad ff ff       	call   2730 <fputs@plt>
    79a7:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    79ae:	48 89 c7             	mov    rdi,rax
    79b1:	e8 aa ae ff ff       	call   2860 <fclose@plt>
    79b6:	b8 01 00 00 00       	mov    eax,0x1
    79bb:	eb 05                	jmp    79c2 <fin_rst_portscan_detect+0x1d2>
    79bd:	b8 00 00 00 00       	mov    eax,0x0
    79c2:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    79c6:	64 48 2b 34 25 28 00 	sub    rsi,QWORD PTR fs:0x28
    79cd:	00 00 
    79cf:	74 05                	je     79d6 <fin_rst_portscan_detect+0x1e6>
    79d1:	e8 0a ae ff ff       	call   27e0 <__stack_chk_fail@plt>
    79d6:	c9                   	leave  
    79d7:	c3                   	ret    

00000000000079d8 <member_ready_for_scan>:
    79d8:	f3 0f 1e fa          	endbr64 
    79dc:	55                   	push   rbp
    79dd:	48 89 e5             	mov    rbp,rsp
    79e0:	48 83 ec 10          	sub    rsp,0x10
    79e4:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    79eb:	eb 48                	jmp    7a35 <member_ready_for_scan+0x5d>
    79ed:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    79f0:	48 63 d0             	movsxd rdx,eax
    79f3:	48 89 d0             	mov    rax,rdx
    79f6:	48 c1 e0 02          	shl    rax,0x2
    79fa:	48 01 d0             	add    rax,rdx
    79fd:	48 c1 e0 03          	shl    rax,0x3
    7a01:	48 01 d0             	add    rax,rdx
    7a04:	48 c1 e0 04          	shl    rax,0x4
    7a08:	48 8d 15 11 bb 0e 00 	lea    rdx,[rip+0xebb11]        # f3520 <watchlist>
    7a0f:	48 01 d0             	add    rax,rdx
    7a12:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7a16:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7a1a:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    7a20:	83 f8 1d             	cmp    eax,0x1d
    7a23:	76 0c                	jbe    7a31 <member_ready_for_scan+0x59>
    7a25:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7a29:	48 89 c7             	mov    rdi,rax
    7a2c:	e8 d1 fb ff ff       	call   7602 <tcp_rst_portscan_detect>
    7a31:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    7a35:	8b 05 dd 95 00 00    	mov    eax,DWORD PTR [rip+0x95dd]        # 11018 <watchlist_num>
    7a3b:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    7a3e:	7e ad                	jle    79ed <member_ready_for_scan+0x15>
    7a40:	90                   	nop
    7a41:	90                   	nop
    7a42:	c9                   	leave  
    7a43:	c3                   	ret    

0000000000007a44 <member_exists>:
    7a44:	f3 0f 1e fa          	endbr64 
    7a48:	55                   	push   rbp
    7a49:	48 89 e5             	mov    rbp,rsp
    7a4c:	48 83 ec 20          	sub    rsp,0x20
    7a50:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7a54:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7a5b:	eb 47                	jmp    7aa4 <member_exists+0x60>
    7a5d:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7a60:	8d 50 01             	lea    edx,[rax+0x1]
    7a63:	89 55 fc             	mov    DWORD PTR [rbp-0x4],edx
    7a66:	48 63 d0             	movsxd rdx,eax
    7a69:	48 89 d0             	mov    rax,rdx
    7a6c:	48 c1 e0 02          	shl    rax,0x2
    7a70:	48 01 d0             	add    rax,rdx
    7a73:	48 c1 e0 03          	shl    rax,0x3
    7a77:	48 01 d0             	add    rax,rdx
    7a7a:	48 c1 e0 04          	shl    rax,0x4
    7a7e:	48 8d 15 9b ba 0e 00 	lea    rdx,[rip+0xeba9b]        # f3520 <watchlist>
    7a85:	48 01 d0             	add    rax,rdx
    7a88:	48 8d 50 08          	lea    rdx,[rax+0x8]
    7a8c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7a90:	48 89 c6             	mov    rsi,rax
    7a93:	48 89 d7             	mov    rdi,rdx
    7a96:	e8 55 ad ff ff       	call   27f0 <strcmp@plt>
    7a9b:	85 c0                	test   eax,eax
    7a9d:	75 05                	jne    7aa4 <member_exists+0x60>
    7a9f:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7aa2:	eb 10                	jmp    7ab4 <member_exists+0x70>
    7aa4:	8b 05 6e 95 00 00    	mov    eax,DWORD PTR [rip+0x956e]        # 11018 <watchlist_num>
    7aaa:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7aad:	7e ae                	jle    7a5d <member_exists+0x19>
    7aaf:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7ab4:	c9                   	leave  
    7ab5:	c3                   	ret    

0000000000007ab6 <init_member>:
    7ab6:	f3 0f 1e fa          	endbr64 
    7aba:	55                   	push   rbp
    7abb:	48 89 e5             	mov    rbp,rsp
    7abe:	48 83 ec 20          	sub    rsp,0x20
    7ac2:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7ac6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7aca:	48 89 c7             	mov    rdi,rax
    7acd:	e8 72 ff ff ff       	call   7a44 <member_exists>
    7ad2:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    7ad5:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    7ad9:	74 42                	je     7b1d <init_member+0x67>
    7adb:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    7ade:	48 63 d0             	movsxd rdx,eax
    7ae1:	48 89 d0             	mov    rax,rdx
    7ae4:	48 c1 e0 02          	shl    rax,0x2
    7ae8:	48 01 d0             	add    rax,rdx
    7aeb:	48 c1 e0 03          	shl    rax,0x3
    7aef:	48 01 d0             	add    rax,rdx
    7af2:	48 c1 e0 04          	shl    rax,0x4
    7af6:	48 8d 15 23 ba 0e 00 	lea    rdx,[rip+0xeba23]        # f3520 <watchlist>
    7afd:	48 01 d0             	add    rax,rdx
    7b00:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7b04:	bf 00 00 00 00       	mov    edi,0x0
    7b09:	e8 22 ae ff ff       	call   2930 <time@plt>
    7b0e:	48 89 c2             	mov    rdx,rax
    7b11:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7b15:	48 89 10             	mov    QWORD PTR [rax],rdx
    7b18:	e9 a8 00 00 00       	jmp    7bc5 <init_member+0x10f>
    7b1d:	48 8d 3d 49 5a 00 00 	lea    rdi,[rip+0x5a49]        # d56d <_IO_stdin_used+0x156d>
    7b24:	e8 1b ff ff ff       	call   7a44 <member_exists>
    7b29:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    7b2c:	83 7d f4 00          	cmp    DWORD PTR [rbp-0xc],0x0
    7b30:	74 2b                	je     7b5d <init_member+0xa7>
    7b32:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    7b35:	48 63 d0             	movsxd rdx,eax
    7b38:	48 89 d0             	mov    rax,rdx
    7b3b:	48 c1 e0 02          	shl    rax,0x2
    7b3f:	48 01 d0             	add    rax,rdx
    7b42:	48 c1 e0 03          	shl    rax,0x3
    7b46:	48 01 d0             	add    rax,rdx
    7b49:	48 c1 e0 04          	shl    rax,0x4
    7b4d:	48 8d 15 cc b9 0e 00 	lea    rdx,[rip+0xeb9cc]        # f3520 <watchlist>
    7b54:	48 01 d0             	add    rax,rdx
    7b57:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7b5b:	eb 3b                	jmp    7b98 <init_member+0xe2>
    7b5d:	8b 05 b5 94 00 00    	mov    eax,DWORD PTR [rip+0x94b5]        # 11018 <watchlist_num>
    7b63:	83 c0 01             	add    eax,0x1
    7b66:	89 05 ac 94 00 00    	mov    DWORD PTR [rip+0x94ac],eax        # 11018 <watchlist_num>
    7b6c:	8b 05 a6 94 00 00    	mov    eax,DWORD PTR [rip+0x94a6]        # 11018 <watchlist_num>
    7b72:	48 63 d0             	movsxd rdx,eax
    7b75:	48 89 d0             	mov    rax,rdx
    7b78:	48 c1 e0 02          	shl    rax,0x2
    7b7c:	48 01 d0             	add    rax,rdx
    7b7f:	48 c1 e0 03          	shl    rax,0x3
    7b83:	48 01 d0             	add    rax,rdx
    7b86:	48 c1 e0 04          	shl    rax,0x4
    7b8a:	48 8d 15 8f b9 0e 00 	lea    rdx,[rip+0xeb98f]        # f3520 <watchlist>
    7b91:	48 01 d0             	add    rax,rdx
    7b94:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7b98:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7b9c:	ba 08 00 00 00       	mov    edx,0x8
    7ba1:	be 00 00 00 00       	mov    esi,0x0
    7ba6:	48 89 c7             	mov    rdi,rax
    7ba9:	e8 42 a9 ff ff       	call   24f0 <memset@plt>
    7bae:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7bb2:	48 8d 50 08          	lea    rdx,[rax+0x8]
    7bb6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7bba:	48 89 c6             	mov    rsi,rax
    7bbd:	48 89 d7             	mov    rdi,rdx
    7bc0:	e8 5b ac ff ff       	call   2820 <strcpy@plt>
    7bc5:	c9                   	leave  
    7bc6:	c3                   	ret    

0000000000007bc7 <ready_for_clean>:
    7bc7:	f3 0f 1e fa          	endbr64 
    7bcb:	55                   	push   rbp
    7bcc:	48 89 e5             	mov    rbp,rsp
    7bcf:	48 83 ec 10          	sub    rsp,0x10
    7bd3:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7bd7:	bf 00 00 00 00       	mov    edi,0x0
    7bdc:	e8 4f ad ff ff       	call   2930 <time@plt>
    7be1:	48 89 c2             	mov    rdx,rax
    7be4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7be8:	48 8b 00             	mov    rax,QWORD PTR [rax]
    7beb:	48 29 c2             	sub    rdx,rax
    7bee:	48 8b 05 c3 96 00 00 	mov    rax,QWORD PTR [rip+0x96c3]        # 112b8 <clean_delay>
    7bf5:	48 39 c2             	cmp    rdx,rax
    7bf8:	72 22                	jb     7c1c <ready_for_clean+0x55>
    7bfa:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7bfe:	48 83 c0 08          	add    rax,0x8
    7c02:	48 8d 35 6c 59 00 00 	lea    rsi,[rip+0x596c]        # d575 <_IO_stdin_used+0x1575>
    7c09:	48 89 c7             	mov    rdi,rax
    7c0c:	e8 df ab ff ff       	call   27f0 <strcmp@plt>
    7c11:	85 c0                	test   eax,eax
    7c13:	74 07                	je     7c1c <ready_for_clean+0x55>
    7c15:	b8 01 00 00 00       	mov    eax,0x1
    7c1a:	eb 05                	jmp    7c21 <ready_for_clean+0x5a>
    7c1c:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7c21:	c9                   	leave  
    7c22:	c3                   	ret    

0000000000007c23 <clean>:
    7c23:	f3 0f 1e fa          	endbr64 
    7c27:	55                   	push   rbp
    7c28:	48 89 e5             	mov    rbp,rsp
    7c2b:	48 83 ec 10          	sub    rsp,0x10
    7c2f:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7c33:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7c37:	ba 08 00 00 00       	mov    edx,0x8
    7c3c:	be 00 00 00 00       	mov    esi,0x0
    7c41:	48 89 c7             	mov    rdi,rax
    7c44:	e8 a7 a8 ff ff       	call   24f0 <memset@plt>
    7c49:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7c4d:	48 83 c0 08          	add    rax,0x8
    7c51:	48 b9 30 2e 30 2e 30 	movabs rcx,0x312e302e302e30
    7c58:	2e 31 00 
    7c5b:	48 89 08             	mov    QWORD PTR [rax],rcx
    7c5e:	90                   	nop
    7c5f:	c9                   	leave  
    7c60:	c3                   	ret    

0000000000007c61 <scan_for_clean>:
    7c61:	f3 0f 1e fa          	endbr64 
    7c65:	55                   	push   rbp
    7c66:	48 89 e5             	mov    rbp,rsp
    7c69:	48 83 ec 10          	sub    rsp,0x10
    7c6d:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7c74:	eb 62                	jmp    7cd8 <scan_for_clean+0x77>
    7c76:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7c79:	48 63 d0             	movsxd rdx,eax
    7c7c:	48 89 d0             	mov    rax,rdx
    7c7f:	48 c1 e0 02          	shl    rax,0x2
    7c83:	48 01 d0             	add    rax,rdx
    7c86:	48 c1 e0 03          	shl    rax,0x3
    7c8a:	48 01 d0             	add    rax,rdx
    7c8d:	48 c1 e0 04          	shl    rax,0x4
    7c91:	48 8d 15 88 b8 0e 00 	lea    rdx,[rip+0xeb888]        # f3520 <watchlist>
    7c98:	48 01 d0             	add    rax,rdx
    7c9b:	48 89 c7             	mov    rdi,rax
    7c9e:	e8 24 ff ff ff       	call   7bc7 <ready_for_clean>
    7ca3:	85 c0                	test   eax,eax
    7ca5:	7e 2d                	jle    7cd4 <scan_for_clean+0x73>
    7ca7:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7caa:	48 63 d0             	movsxd rdx,eax
    7cad:	48 89 d0             	mov    rax,rdx
    7cb0:	48 c1 e0 02          	shl    rax,0x2
    7cb4:	48 01 d0             	add    rax,rdx
    7cb7:	48 c1 e0 03          	shl    rax,0x3
    7cbb:	48 01 d0             	add    rax,rdx
    7cbe:	48 c1 e0 04          	shl    rax,0x4
    7cc2:	48 8d 15 57 b8 0e 00 	lea    rdx,[rip+0xeb857]        # f3520 <watchlist>
    7cc9:	48 01 d0             	add    rax,rdx
    7ccc:	48 89 c7             	mov    rdi,rax
    7ccf:	e8 4f ff ff ff       	call   7c23 <clean>
    7cd4:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    7cd8:	8b 05 3a 93 00 00    	mov    eax,DWORD PTR [rip+0x933a]        # 11018 <watchlist_num>
    7cde:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7ce1:	7e 93                	jle    7c76 <scan_for_clean+0x15>
    7ce3:	90                   	nop
    7ce4:	90                   	nop
    7ce5:	c9                   	leave  
    7ce6:	c3                   	ret    

0000000000007ce7 <compare_entries>:
    7ce7:	f3 0f 1e fa          	endbr64 
    7ceb:	55                   	push   rbp
    7cec:	48 89 e5             	mov    rbp,rsp
    7cef:	48 83 ec 20          	sub    rsp,0x20
    7cf3:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7cf7:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7cfb:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7d02:	e9 ac 00 00 00       	jmp    7db3 <compare_entries+0xcc>
    7d07:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7d0a:	48 63 d0             	movsxd rdx,eax
    7d0d:	48 89 d0             	mov    rax,rdx
    7d10:	48 c1 e0 04          	shl    rax,0x4
    7d14:	48 01 d0             	add    rax,rdx
    7d17:	48 01 c0             	add    rax,rax
    7d1a:	48 8d 15 ff ff 0f 00 	lea    rdx,[rip+0xfffff]        # 107d20 <arpcache>
    7d21:	48 01 c2             	add    rdx,rax
    7d24:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7d28:	48 89 c6             	mov    rsi,rax
    7d2b:	48 89 d7             	mov    rdi,rdx
    7d2e:	e8 a3 01 00 00       	call   7ed6 <compare_ip_entry>
    7d33:	85 c0                	test   eax,eax
    7d35:	74 78                	je     7daf <compare_entries+0xc8>
    7d37:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7d3a:	48 63 d0             	movsxd rdx,eax
    7d3d:	48 89 d0             	mov    rax,rdx
    7d40:	48 c1 e0 04          	shl    rax,0x4
    7d44:	48 01 d0             	add    rax,rdx
    7d47:	48 01 c0             	add    rax,rax
    7d4a:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7d4e:	48 8d 05 cb ff 0f 00 	lea    rax,[rip+0xfffcb]        # 107d20 <arpcache>
    7d55:	48 01 c2             	add    rdx,rax
    7d58:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7d5c:	48 89 c6             	mov    rsi,rax
    7d5f:	48 89 d7             	mov    rdi,rdx
    7d62:	e8 98 01 00 00       	call   7eff <compare_mac_entry>
    7d67:	85 c0                	test   eax,eax
    7d69:	75 44                	jne    7daf <compare_entries+0xc8>
    7d6b:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7d6e:	48 63 d0             	movsxd rdx,eax
    7d71:	48 89 d0             	mov    rax,rdx
    7d74:	48 c1 e0 04          	shl    rax,0x4
    7d78:	48 01 d0             	add    rax,rdx
    7d7b:	48 01 c0             	add    rax,rax
    7d7e:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7d82:	48 8d 05 97 ff 0f 00 	lea    rax,[rip+0xfff97]        # 107d20 <arpcache>
    7d89:	48 8d 34 02          	lea    rsi,[rdx+rax*1]
    7d8d:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    7d91:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7d95:	48 89 d1             	mov    rcx,rdx
    7d98:	48 89 f2             	mov    rdx,rsi
    7d9b:	48 89 c6             	mov    rsi,rax
    7d9e:	48 8d 3d db 57 00 00 	lea    rdi,[rip+0x57db]        # d580 <_IO_stdin_used+0x1580>
    7da5:	b8 00 00 00 00       	mov    eax,0x0
    7daa:	e8 31 a7 ff ff       	call   24e0 <printf@plt>
    7daf:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    7db3:	8b 05 63 92 00 00    	mov    eax,DWORD PTR [rip+0x9263]        # 1101c <arp_entries>
    7db9:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7dbc:	0f 8e 45 ff ff ff    	jle    7d07 <compare_entries+0x20>
    7dc2:	90                   	nop
    7dc3:	90                   	nop
    7dc4:	c9                   	leave  
    7dc5:	c3                   	ret    

0000000000007dc6 <add_entry>:
    7dc6:	f3 0f 1e fa          	endbr64 
    7dca:	55                   	push   rbp
    7dcb:	48 89 e5             	mov    rbp,rsp
    7dce:	48 83 ec 20          	sub    rsp,0x20
    7dd2:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7dd6:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7dda:	8b 05 3c 92 00 00    	mov    eax,DWORD PTR [rip+0x923c]        # 1101c <arp_entries>
    7de0:	83 c0 01             	add    eax,0x1
    7de3:	89 05 33 92 00 00    	mov    DWORD PTR [rip+0x9233],eax        # 1101c <arp_entries>
    7de9:	8b 05 2d 92 00 00    	mov    eax,DWORD PTR [rip+0x922d]        # 1101c <arp_entries>
    7def:	48 63 d0             	movsxd rdx,eax
    7df2:	48 89 d0             	mov    rax,rdx
    7df5:	48 c1 e0 04          	shl    rax,0x4
    7df9:	48 01 d0             	add    rax,rdx
    7dfc:	48 01 c0             	add    rax,rax
    7dff:	48 8d 15 1a ff 0f 00 	lea    rdx,[rip+0xfff1a]        # 107d20 <arpcache>
    7e06:	48 01 d0             	add    rax,rdx
    7e09:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7e0d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7e11:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    7e15:	48 89 d6             	mov    rsi,rdx
    7e18:	48 89 c7             	mov    rdi,rax
    7e1b:	e8 00 aa ff ff       	call   2820 <strcpy@plt>
    7e20:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7e24:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7e28:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7e2c:	48 89 c6             	mov    rsi,rax
    7e2f:	48 89 d7             	mov    rdi,rdx
    7e32:	e8 e9 a9 ff ff       	call   2820 <strcpy@plt>
    7e37:	90                   	nop
    7e38:	c9                   	leave  
    7e39:	c3                   	ret    

0000000000007e3a <entry_exists>:
    7e3a:	f3 0f 1e fa          	endbr64 
    7e3e:	55                   	push   rbp
    7e3f:	48 89 e5             	mov    rbp,rsp
    7e42:	48 83 ec 20          	sub    rsp,0x20
    7e46:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7e4a:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7e4e:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7e55:	eb 6d                	jmp    7ec4 <entry_exists+0x8a>
    7e57:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7e5a:	48 63 d0             	movsxd rdx,eax
    7e5d:	48 89 d0             	mov    rax,rdx
    7e60:	48 c1 e0 04          	shl    rax,0x4
    7e64:	48 01 d0             	add    rax,rdx
    7e67:	48 01 c0             	add    rax,rax
    7e6a:	48 8d 15 af fe 0f 00 	lea    rdx,[rip+0xffeaf]        # 107d20 <arpcache>
    7e71:	48 01 c2             	add    rdx,rax
    7e74:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7e78:	48 89 c6             	mov    rsi,rax
    7e7b:	48 89 d7             	mov    rdi,rdx
    7e7e:	e8 53 00 00 00       	call   7ed6 <compare_ip_entry>
    7e83:	85 c0                	test   eax,eax
    7e85:	75 39                	jne    7ec0 <entry_exists+0x86>
    7e87:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7e8a:	48 63 d0             	movsxd rdx,eax
    7e8d:	48 89 d0             	mov    rax,rdx
    7e90:	48 c1 e0 04          	shl    rax,0x4
    7e94:	48 01 d0             	add    rax,rdx
    7e97:	48 01 c0             	add    rax,rax
    7e9a:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7e9e:	48 8d 05 7b fe 0f 00 	lea    rax,[rip+0xffe7b]        # 107d20 <arpcache>
    7ea5:	48 01 c2             	add    rdx,rax
    7ea8:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7eac:	48 89 c6             	mov    rsi,rax
    7eaf:	48 89 d7             	mov    rdi,rdx
    7eb2:	e8 48 00 00 00       	call   7eff <compare_mac_entry>
    7eb7:	85 c0                	test   eax,eax
    7eb9:	75 05                	jne    7ec0 <entry_exists+0x86>
    7ebb:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7ebe:	eb 14                	jmp    7ed4 <entry_exists+0x9a>
    7ec0:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    7ec4:	8b 05 52 91 00 00    	mov    eax,DWORD PTR [rip+0x9152]        # 1101c <arp_entries>
    7eca:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7ecd:	7e 88                	jle    7e57 <entry_exists+0x1d>
    7ecf:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7ed4:	c9                   	leave  
    7ed5:	c3                   	ret    

0000000000007ed6 <compare_ip_entry>:
    7ed6:	f3 0f 1e fa          	endbr64 
    7eda:	55                   	push   rbp
    7edb:	48 89 e5             	mov    rbp,rsp
    7ede:	48 83 ec 10          	sub    rsp,0x10
    7ee2:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7ee6:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7eea:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    7eee:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7ef2:	48 89 d6             	mov    rsi,rdx
    7ef5:	48 89 c7             	mov    rdi,rax
    7ef8:	e8 f3 a8 ff ff       	call   27f0 <strcmp@plt>
    7efd:	c9                   	leave  
    7efe:	c3                   	ret    

0000000000007eff <compare_mac_entry>:
    7eff:	f3 0f 1e fa          	endbr64 
    7f03:	55                   	push   rbp
    7f04:	48 89 e5             	mov    rbp,rsp
    7f07:	48 83 ec 10          	sub    rsp,0x10
    7f0b:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7f0f:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7f13:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    7f17:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7f1b:	48 89 d6             	mov    rsi,rdx
    7f1e:	48 89 c7             	mov    rdi,rax
    7f21:	e8 ca a8 ff ff       	call   27f0 <strcmp@plt>
    7f26:	c9                   	leave  
    7f27:	c3                   	ret    

0000000000007f28 <load_csv_arp_cache>:
    7f28:	f3 0f 1e fa          	endbr64 
    7f2c:	55                   	push   rbp
    7f2d:	48 89 e5             	mov    rbp,rsp
    7f30:	53                   	push   rbx
    7f31:	48 83 ec 68          	sub    rsp,0x68
    7f35:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7f3c:	00 00 
    7f3e:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    7f42:	31 c0                	xor    eax,eax
    7f44:	48 8d 35 6b 56 00 00 	lea    rsi,[rip+0x566b]        # d5b6 <_IO_stdin_used+0x15b6>
    7f4b:	48 8d 3d 66 56 00 00 	lea    rdi,[rip+0x5666]        # d5b8 <_IO_stdin_used+0x15b8>
    7f52:	e8 79 a6 ff ff       	call   25d0 <fopen@plt>
    7f57:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    7f5b:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
    7f60:	75 22                	jne    7f84 <load_csv_arp_cache+0x5c>
    7f62:	48 8d 3d 6f 56 00 00 	lea    rdi,[rip+0x566f]        # d5d8 <_IO_stdin_used+0x15d8>
    7f69:	e8 d2 a5 ff ff       	call   2540 <puts@plt>
    7f6e:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    7f72:	48 89 c7             	mov    rdi,rax
    7f75:	e8 e6 a8 ff ff       	call   2860 <fclose@plt>
    7f7a:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7f7f:	e9 dd 00 00 00       	jmp    8061 <load_csv_arp_cache+0x139>
    7f84:	48 c7 45 98 00 00 00 	mov    QWORD PTR [rbp-0x68],0x0
    7f8b:	00 
    7f8c:	48 c7 45 a0 00 00 00 	mov    QWORD PTR [rbp-0x60],0x0
    7f93:	00 
    7f94:	eb 7c                	jmp    8012 <load_csv_arp_cache+0xea>
    7f96:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7f9a:	48 85 c0             	test   rax,rax
    7f9d:	0f 84 97 00 00 00    	je     803a <load_csv_arp_cache+0x112>
    7fa3:	48 8b 5d 98          	mov    rbx,QWORD PTR [rbp-0x68]
    7fa7:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7fab:	48 8d 35 5f 56 00 00 	lea    rsi,[rip+0x565f]        # d611 <_IO_stdin_used+0x1611>
    7fb2:	48 89 c7             	mov    rdi,rax
    7fb5:	e8 d6 a8 ff ff       	call   2890 <strcspn@plt>
    7fba:	48 01 d8             	add    rax,rbx
    7fbd:	c6 00 00             	mov    BYTE PTR [rax],0x0
    7fc0:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7fc4:	48 8d 35 48 56 00 00 	lea    rsi,[rip+0x5648]        # d613 <_IO_stdin_used+0x1613>
    7fcb:	48 89 c7             	mov    rdi,rax
    7fce:	e8 5d a8 ff ff       	call   2830 <strtok@plt>
    7fd3:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    7fd7:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    7fdb:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    7fdf:	48 89 d6             	mov    rsi,rdx
    7fe2:	48 89 c7             	mov    rdi,rax
    7fe5:	e8 36 a8 ff ff       	call   2820 <strcpy@plt>
    7fea:	48 8d 35 22 56 00 00 	lea    rsi,[rip+0x5622]        # d613 <_IO_stdin_used+0x1613>
    7ff1:	bf 00 00 00 00       	mov    edi,0x0
    7ff6:	e8 35 a8 ff ff       	call   2830 <strtok@plt>
    7ffb:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    7fff:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    8003:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    8007:	48 89 d6             	mov    rsi,rdx
    800a:	48 89 c7             	mov    rdi,rax
    800d:	e8 0e a8 ff ff       	call   2820 <strcpy@plt>
    8012:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    8016:	48 8d 4d a0          	lea    rcx,[rbp-0x60]
    801a:	48 8d 45 98          	lea    rax,[rbp-0x68]
    801e:	48 89 ce             	mov    rsi,rcx
    8021:	48 89 c7             	mov    rdi,rax
    8024:	e8 e7 a7 ff ff       	call   2810 <getline@plt>
    8029:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    802d:	48 83 7d b0 ff       	cmp    QWORD PTR [rbp-0x50],0xffffffffffffffff
    8032:	0f 85 5e ff ff ff    	jne    7f96 <load_csv_arp_cache+0x6e>
    8038:	eb 01                	jmp    803b <load_csv_arp_cache+0x113>
    803a:	90                   	nop
    803b:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    803f:	48 85 c0             	test   rax,rax
    8042:	74 0c                	je     8050 <load_csv_arp_cache+0x128>
    8044:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    8048:	48 89 c7             	mov    rdi,rax
    804b:	e8 10 a6 ff ff       	call   2660 <free@plt>
    8050:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    8054:	48 89 c7             	mov    rdi,rax
    8057:	e8 04 a8 ff ff       	call   2860 <fclose@plt>
    805c:	b8 01 00 00 00       	mov    eax,0x1
    8061:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    8065:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    806c:	00 00 
    806e:	74 05                	je     8075 <load_csv_arp_cache+0x14d>
    8070:	e8 6b a7 ff ff       	call   27e0 <__stack_chk_fail@plt>
    8075:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    8079:	c9                   	leave  
    807a:	c3                   	ret    

000000000000807b <tls_decode>:
    807b:	f3 0f 1e fa          	endbr64 
    807f:	55                   	push   rbp
    8080:	48 89 e5             	mov    rbp,rsp
    8083:	48 83 ec 30          	sub    rsp,0x30
    8087:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    808b:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    808f:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    8093:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8097:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    809b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    809f:	0f b7 40 01          	movzx  eax,WORD PTR [rax+0x1]
    80a3:	0f b7 c0             	movzx  eax,ax
    80a6:	3d 03 03 00 00       	cmp    eax,0x303
    80ab:	74 6a                	je     8117 <tls_decode+0x9c>
    80ad:	3d 03 03 00 00       	cmp    eax,0x303
    80b2:	0f 8f c7 00 00 00    	jg     817f <tls_decode+0x104>
    80b8:	3d 01 03 00 00       	cmp    eax,0x301
    80bd:	74 0c                	je     80cb <tls_decode+0x50>
    80bf:	3d 02 03 00 00       	cmp    eax,0x302
    80c4:	74 2b                	je     80f1 <tls_decode+0x76>
    80c6:	e9 b4 00 00 00       	jmp    817f <tls_decode+0x104>
    80cb:	0f b6 05 92 1e 10 00 	movzx  eax,BYTE PTR [rip+0x101e92]        # 109f64 <packet_print>
    80d2:	84 c0                	test   al,al
    80d4:	74 11                	je     80e7 <tls_decode+0x6c>
    80d6:	48 8d 3d 3b 55 00 00 	lea    rdi,[rip+0x553b]        # d618 <_IO_stdin_used+0x1618>
    80dd:	b8 00 00 00 00       	mov    eax,0x0
    80e2:	e8 f9 a3 ff ff       	call   24e0 <printf@plt>
    80e7:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    80eb:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    80ef:	eb 4b                	jmp    813c <tls_decode+0xc1>
    80f1:	0f b6 05 6c 1e 10 00 	movzx  eax,BYTE PTR [rip+0x101e6c]        # 109f64 <packet_print>
    80f8:	84 c0                	test   al,al
    80fa:	74 11                	je     810d <tls_decode+0x92>
    80fc:	48 8d 3d 24 55 00 00 	lea    rdi,[rip+0x5524]        # d627 <_IO_stdin_used+0x1627>
    8103:	b8 00 00 00 00       	mov    eax,0x0
    8108:	e8 d3 a3 ff ff       	call   24e0 <printf@plt>
    810d:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8111:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    8115:	eb 25                	jmp    813c <tls_decode+0xc1>
    8117:	0f b6 05 46 1e 10 00 	movzx  eax,BYTE PTR [rip+0x101e46]        # 109f64 <packet_print>
    811e:	84 c0                	test   al,al
    8120:	74 11                	je     8133 <tls_decode+0xb8>
    8122:	48 8d 3d 0d 55 00 00 	lea    rdi,[rip+0x550d]        # d636 <_IO_stdin_used+0x1636>
    8129:	b8 00 00 00 00       	mov    eax,0x0
    812e:	e8 ad a3 ff ff       	call   24e0 <printf@plt>
    8133:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8137:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    813b:	90                   	nop
    813c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8140:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    8143:	0f b6 c0             	movzx  eax,al
    8146:	83 f8 17             	cmp    eax,0x17
    8149:	74 37                	je     8182 <tls_decode+0x107>
    814b:	83 f8 17             	cmp    eax,0x17
    814e:	7f 35                	jg     8185 <tls_decode+0x10a>
    8150:	83 f8 16             	cmp    eax,0x16
    8153:	74 11                	je     8166 <tls_decode+0xeb>
    8155:	83 f8 16             	cmp    eax,0x16
    8158:	7f 2b                	jg     8185 <tls_decode+0x10a>
    815a:	83 f8 14             	cmp    eax,0x14
    815d:	74 29                	je     8188 <tls_decode+0x10d>
    815f:	83 f8 15             	cmp    eax,0x15
    8162:	74 27                	je     818b <tls_decode+0x110>
    8164:	eb 1f                	jmp    8185 <tls_decode+0x10a>
    8166:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    816a:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    816e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8172:	48 89 ce             	mov    rsi,rcx
    8175:	48 89 c7             	mov    rdi,rax
    8178:	e8 11 00 00 00       	call   818e <tlshandshake>
    817d:	eb 0d                	jmp    818c <tls_decode+0x111>
    817f:	90                   	nop
    8180:	eb 0a                	jmp    818c <tls_decode+0x111>
    8182:	90                   	nop
    8183:	eb 07                	jmp    818c <tls_decode+0x111>
    8185:	90                   	nop
    8186:	eb 04                	jmp    818c <tls_decode+0x111>
    8188:	90                   	nop
    8189:	eb 01                	jmp    818c <tls_decode+0x111>
    818b:	90                   	nop
    818c:	c9                   	leave  
    818d:	c3                   	ret    

000000000000818e <tlshandshake>:
    818e:	f3 0f 1e fa          	endbr64 
    8192:	55                   	push   rbp
    8193:	48 89 e5             	mov    rbp,rsp
    8196:	48 83 ec 30          	sub    rsp,0x30
    819a:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    819e:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    81a2:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    81a6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    81aa:	48 83 c0 08          	add    rax,0x8
    81ae:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    81b2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    81b6:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    81b9:	0f b6 c0             	movzx  eax,al
    81bc:	83 f8 0b             	cmp    eax,0xb
    81bf:	0f 87 bf 00 00 00    	ja     8284 <tlshandshake+0xf6>
    81c5:	89 c0                	mov    eax,eax
    81c7:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    81ce:	00 
    81cf:	48 8d 05 b6 54 00 00 	lea    rax,[rip+0x54b6]        # d68c <_IO_stdin_used+0x168c>
    81d6:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    81d9:	48 98                	cdqe   
    81db:	48 8d 15 aa 54 00 00 	lea    rdx,[rip+0x54aa]        # d68c <_IO_stdin_used+0x168c>
    81e2:	48 01 d0             	add    rax,rdx
    81e5:	3e ff e0             	notrack jmp rax
    81e8:	48 8d 3d 56 54 00 00 	lea    rdi,[rip+0x5456]        # d645 <_IO_stdin_used+0x1645>
    81ef:	e8 4c a3 ff ff       	call   2540 <puts@plt>
    81f4:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    81f8:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    81fc:	e9 83 00 00 00       	jmp    8284 <tlshandshake+0xf6>
    8201:	0f b6 05 5c 1d 10 00 	movzx  eax,BYTE PTR [rip+0x101d5c]        # 109f64 <packet_print>
    8208:	84 c0                	test   al,al
    820a:	74 0c                	je     8218 <tlshandshake+0x8a>
    820c:	48 8d 3d 3f 54 00 00 	lea    rdi,[rip+0x543f]        # d652 <_IO_stdin_used+0x1652>
    8213:	e8 28 a3 ff ff       	call   2540 <puts@plt>
    8218:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    821c:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    8220:	eb 62                	jmp    8284 <tlshandshake+0xf6>
    8222:	0f b6 05 3b 1d 10 00 	movzx  eax,BYTE PTR [rip+0x101d3b]        # 109f64 <packet_print>
    8229:	84 c0                	test   al,al
    822b:	74 0c                	je     8239 <tlshandshake+0xab>
    822d:	48 8d 3d 2b 54 00 00 	lea    rdi,[rip+0x542b]        # d65f <_IO_stdin_used+0x165f>
    8234:	e8 07 a3 ff ff       	call   2540 <puts@plt>
    8239:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    823d:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    8241:	eb 41                	jmp    8284 <tlshandshake+0xf6>
    8243:	0f b6 05 1a 1d 10 00 	movzx  eax,BYTE PTR [rip+0x101d1a]        # 109f64 <packet_print>
    824a:	84 c0                	test   al,al
    824c:	74 0c                	je     825a <tlshandshake+0xcc>
    824e:	48 8d 3d 1d 54 00 00 	lea    rdi,[rip+0x541d]        # d672 <_IO_stdin_used+0x1672>
    8255:	e8 e6 a2 ff ff       	call   2540 <puts@plt>
    825a:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    825e:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    8262:	eb 20                	jmp    8284 <tlshandshake+0xf6>
    8264:	0f b6 05 f9 1c 10 00 	movzx  eax,BYTE PTR [rip+0x101cf9]        # 109f64 <packet_print>
    826b:	84 c0                	test   al,al
    826d:	74 0c                	je     827b <tlshandshake+0xed>
    826f:	48 8d 3d 08 54 00 00 	lea    rdi,[rip+0x5408]        # d67e <_IO_stdin_used+0x167e>
    8276:	e8 c5 a2 ff ff       	call   2540 <puts@plt>
    827b:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    827f:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    8283:	90                   	nop
    8284:	90                   	nop
    8285:	c9                   	leave  
    8286:	c3                   	ret    

0000000000008287 <process_opcode>:
    8287:	f3 0f 1e fa          	endbr64 
    828b:	55                   	push   rbp
    828c:	48 89 e5             	mov    rbp,rsp
    828f:	48 81 ec 30 04 00 00 	sub    rsp,0x430
    8296:	48 89 bd d8 fb ff ff 	mov    QWORD PTR [rbp-0x428],rdi
    829d:	48 89 b5 d0 fb ff ff 	mov    QWORD PTR [rbp-0x430],rsi
    82a4:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    82ab:	00 00 
    82ad:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    82b1:	31 c0                	xor    eax,eax
    82b3:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    82ba:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    82bd:	0f b6 c0             	movzx  eax,al
    82c0:	3d db 00 00 00       	cmp    eax,0xdb
    82c5:	75 4b                	jne    8312 <process_opcode+0x8b>
    82c7:	c6 85 e4 fb ff ff db 	mov    BYTE PTR [rbp-0x41c],0xdb
    82ce:	8b 85 e4 fb ff ff    	mov    eax,DWORD PTR [rbp-0x41c]
    82d4:	0f b6 c0             	movzx  eax,al
    82d7:	0d 00 00 00 01       	or     eax,0x1000000
    82dc:	89 85 e4 fb ff ff    	mov    DWORD PTR [rbp-0x41c],eax
    82e2:	48 8d 85 e4 fb ff ff 	lea    rax,[rbp-0x41c]
    82e9:	48 89 85 e8 fb ff ff 	mov    QWORD PTR [rbp-0x418],rax
    82f0:	48 8b 85 d0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x430]
    82f7:	8b 00                	mov    eax,DWORD PTR [rax]
    82f9:	48 8b b5 e8 fb ff ff 	mov    rsi,QWORD PTR [rbp-0x418]
    8300:	b9 00 00 00 00       	mov    ecx,0x0
    8305:	ba 04 00 00 00       	mov    edx,0x4
    830a:	89 c7                	mov    edi,eax
    830c:	e8 ef a4 ff ff       	call   2800 <send@plt>
    8311:	90                   	nop
    8312:	90                   	nop
    8313:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8317:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    831e:	00 00 
    8320:	74 05                	je     8327 <process_opcode+0xa0>
    8322:	e8 b9 a4 ff ff       	call   27e0 <__stack_chk_fail@plt>
    8327:	c9                   	leave  
    8328:	c3                   	ret    

0000000000008329 <callback>:
    8329:	f3 0f 1e fa          	endbr64 
    832d:	55                   	push   rbp
    832e:	48 89 e5             	mov    rbp,rsp
    8331:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    8335:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
    8338:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    833c:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    8340:	b8 00 00 00 00       	mov    eax,0x0
    8345:	5d                   	pop    rbp
    8346:	c3                   	ret    

0000000000008347 <update_db>:
    8347:	f3 0f 1e fa          	endbr64 
    834b:	55                   	push   rbp
    834c:	48 89 e5             	mov    rbp,rsp
    834f:	48 81 ec 40 02 00 00 	sub    rsp,0x240
    8356:	48 89 bd c8 fd ff ff 	mov    QWORD PTR [rbp-0x238],rdi
    835d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8364:	00 00 
    8366:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    836a:	31 c0                	xor    eax,eax
    836c:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    8373:	48 89 85 e8 fd ff ff 	mov    QWORD PTR [rbp-0x218],rax
    837a:	48 8d 3d 3f 53 00 00 	lea    rdi,[rip+0x533f]        # d6c0 <_IO_stdin_used+0x16c0>
    8381:	e8 ba a1 ff ff       	call   2540 <puts@plt>
    8386:	48 c7 85 d8 fd ff ff 	mov    QWORD PTR [rbp-0x228],0x0
    838d:	00 00 00 00 
    8391:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    8398:	48 89 c6             	mov    rsi,rax
    839b:	48 8d 3d 9e 1b 10 00 	lea    rdi,[rip+0x101b9e]        # 109f40 <sqlite_db_path>
    83a2:	e8 79 a5 ff ff       	call   2920 <sqlite3_open@plt>
    83a7:	89 85 d4 fd ff ff    	mov    DWORD PTR [rbp-0x22c],eax
    83ad:	83 bd d4 fd ff ff 00 	cmp    DWORD PTR [rbp-0x22c],0x0
    83b4:	74 28                	je     83de <update_db+0x97>
    83b6:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    83bd:	48 89 c7             	mov    rdi,rax
    83c0:	e8 8b a4 ff ff       	call   2850 <sqlite3_errmsg@plt>
    83c5:	48 89 c6             	mov    rsi,rax
    83c8:	48 8d 3d fd 52 00 00 	lea    rdi,[rip+0x52fd]        # d6cc <_IO_stdin_used+0x16cc>
    83cf:	b8 00 00 00 00       	mov    eax,0x0
    83d4:	e8 07 a1 ff ff       	call   24e0 <printf@plt>
    83d9:	e9 a2 00 00 00       	jmp    8480 <update_db+0x139>
    83de:	48 8b 85 e8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x218]
    83e5:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    83e8:	85 c0                	test   eax,eax
    83ea:	75 2e                	jne    841a <update_db+0xd3>
    83ec:	48 8b 85 e8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x218]
    83f3:	48 8d 48 10          	lea    rcx,[rax+0x10]
    83f7:	48 8b 95 e8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x218]
    83fe:	48 8d 85 f0 fd ff ff 	lea    rax,[rbp-0x210]
    8405:	48 8d 35 d4 52 00 00 	lea    rsi,[rip+0x52d4]        # d6e0 <_IO_stdin_used+0x16e0>
    840c:	48 89 c7             	mov    rdi,rax
    840f:	b8 00 00 00 00       	mov    eax,0x0
    8414:	e8 97 a2 ff ff       	call   26b0 <sprintf@plt>
    8419:	90                   	nop
    841a:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    8421:	48 8d 95 d8 fd ff ff 	lea    rdx,[rbp-0x228]
    8428:	48 8d b5 f0 fd ff ff 	lea    rsi,[rbp-0x210]
    842f:	49 89 d0             	mov    r8,rdx
    8432:	b9 00 00 00 00       	mov    ecx,0x0
    8437:	ba 00 00 00 00       	mov    edx,0x0
    843c:	48 89 c7             	mov    rdi,rax
    843f:	e8 3c a1 ff ff       	call   2580 <sqlite3_exec@plt>
    8444:	89 85 d4 fd ff ff    	mov    DWORD PTR [rbp-0x22c],eax
    844a:	83 bd d4 fd ff ff 00 	cmp    DWORD PTR [rbp-0x22c],0x0
    8451:	74 2c                	je     847f <update_db+0x138>
    8453:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    845a:	48 89 c6             	mov    rsi,rax
    845d:	48 8d 3d c1 52 00 00 	lea    rdi,[rip+0x52c1]        # d725 <_IO_stdin_used+0x1725>
    8464:	b8 00 00 00 00       	mov    eax,0x0
    8469:	e8 72 a0 ff ff       	call   24e0 <printf@plt>
    846e:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    8475:	48 89 c7             	mov    rdi,rax
    8478:	e8 93 a1 ff ff       	call   2610 <sqlite3_free@plt>
    847d:	eb 01                	jmp    8480 <update_db+0x139>
    847f:	90                   	nop
    8480:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    8487:	48 89 c7             	mov    rdi,rax
    848a:	e8 31 a0 ff ff       	call   24c0 <sqlite3_close@plt>
    848f:	b8 01 00 00 00       	mov    eax,0x1
    8494:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    8498:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    849f:	00 00 
    84a1:	74 05                	je     84a8 <update_db+0x161>
    84a3:	e8 38 a3 ff ff       	call   27e0 <__stack_chk_fail@plt>
    84a8:	c9                   	leave  
    84a9:	c3                   	ret    

00000000000084aa <update_spi_db>:
    84aa:	f3 0f 1e fa          	endbr64 
    84ae:	55                   	push   rbp
    84af:	48 89 e5             	mov    rbp,rsp
    84b2:	41 57                	push   r15
    84b4:	41 56                	push   r14
    84b6:	41 55                	push   r13
    84b8:	41 54                	push   r12
    84ba:	53                   	push   rbx
    84bb:	48 81 ec 48 04 00 00 	sub    rsp,0x448
    84c2:	48 89 bd 98 fb ff ff 	mov    QWORD PTR [rbp-0x468],rdi
    84c9:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    84d0:	00 00 
    84d2:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    84d6:	31 c0                	xor    eax,eax
    84d8:	48 8b 85 98 fb ff ff 	mov    rax,QWORD PTR [rbp-0x468]
    84df:	48 89 85 b0 fb ff ff 	mov    QWORD PTR [rbp-0x450],rax
    84e6:	48 8d 85 a0 fb ff ff 	lea    rax,[rbp-0x460]
    84ed:	48 89 c6             	mov    rsi,rax
    84f0:	48 8d 3d 4c 52 00 00 	lea    rdi,[rip+0x524c]        # d743 <_IO_stdin_used+0x1743>
    84f7:	e8 24 a4 ff ff       	call   2920 <sqlite3_open@plt>
    84fc:	85 c0                	test   eax,eax
    84fe:	74 3c                	je     853c <update_spi_db+0x92>
    8500:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    8507:	48 89 c7             	mov    rdi,rax
    850a:	e8 41 a3 ff ff       	call   2850 <sqlite3_errmsg@plt>
    850f:	48 89 c6             	mov    rsi,rax
    8512:	48 8d 3d 42 52 00 00 	lea    rdi,[rip+0x5242]        # d75b <_IO_stdin_used+0x175b>
    8519:	b8 00 00 00 00       	mov    eax,0x0
    851e:	e8 bd 9f ff ff       	call   24e0 <printf@plt>
    8523:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    852a:	48 89 c7             	mov    rdi,rax
    852d:	e8 8e 9f ff ff       	call   24c0 <sqlite3_close@plt>
    8532:	b8 00 00 00 00       	mov    eax,0x0
    8537:	e9 5c 01 00 00       	jmp    8698 <update_spi_db+0x1ee>
    853c:	48 8d 05 2d 52 00 00 	lea    rax,[rip+0x522d]        # d770 <_IO_stdin_used+0x1770>
    8543:	48 89 85 b8 fb ff ff 	mov    QWORD PTR [rbp-0x448],rax
    854a:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8551:	8b 90 80 00 00 00    	mov    edx,DWORD PTR [rax+0x80]
    8557:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    855e:	44 8b 78 7c          	mov    r15d,DWORD PTR [rax+0x7c]
    8562:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8569:	4c 8b b0 98 00 00 00 	mov    r14,QWORD PTR [rax+0x98]
    8570:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8577:	4c 8b a8 90 00 00 00 	mov    r13,QWORD PTR [rax+0x90]
    857e:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8585:	44 8b a0 a8 00 00 00 	mov    r12d,DWORD PTR [rax+0xa8]
    858c:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8593:	8b 98 a4 00 00 00    	mov    ebx,DWORD PTR [rax+0xa4]
    8599:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    85a0:	48 8b 40 70          	mov    rax,QWORD PTR [rax+0x70]
    85a4:	44 8b 18             	mov    r11d,DWORD PTR [rax]
    85a7:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    85ae:	44 8b 50 60          	mov    r10d,DWORD PTR [rax+0x60]
    85b2:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    85b9:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
    85bd:	44 8b 08             	mov    r9d,DWORD PTR [rax]
    85c0:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    85c7:	44 8b 40 5c          	mov    r8d,DWORD PTR [rax+0x5c]
    85cb:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    85d2:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    85d5:	89 85 94 fb ff ff    	mov    DWORD PTR [rbp-0x46c],eax
    85db:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    85e2:	8b 48 54             	mov    ecx,DWORD PTR [rax+0x54]
    85e5:	89 8d 90 fb ff ff    	mov    DWORD PTR [rbp-0x470],ecx
    85eb:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    85f2:	48 8d 48 29          	lea    rcx,[rax+0x29]
    85f6:	48 8b bd b0 fb ff ff 	mov    rdi,QWORD PTR [rbp-0x450]
    85fd:	48 8b b5 b8 fb ff ff 	mov    rsi,QWORD PTR [rbp-0x448]
    8604:	48 8d 85 c0 fb ff ff 	lea    rax,[rbp-0x440]
    860b:	52                   	push   rdx
    860c:	41 57                	push   r15
    860e:	41 56                	push   r14
    8610:	41 55                	push   r13
    8612:	41 54                	push   r12
    8614:	53                   	push   rbx
    8615:	41 53                	push   r11
    8617:	41 52                	push   r10
    8619:	41 51                	push   r9
    861b:	41 50                	push   r8
    861d:	44 8b 8d 94 fb ff ff 	mov    r9d,DWORD PTR [rbp-0x46c]
    8624:	44 8b 85 90 fb ff ff 	mov    r8d,DWORD PTR [rbp-0x470]
    862b:	48 89 fa             	mov    rdx,rdi
    862e:	48 89 c7             	mov    rdi,rax
    8631:	b8 00 00 00 00       	mov    eax,0x0
    8636:	e8 75 a0 ff ff       	call   26b0 <sprintf@plt>
    863b:	48 83 c4 50          	add    rsp,0x50
    863f:	48 c7 85 a8 fb ff ff 	mov    QWORD PTR [rbp-0x458],0x0
    8646:	00 00 00 00 
    864a:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    8651:	48 8d 95 a8 fb ff ff 	lea    rdx,[rbp-0x458]
    8658:	48 8d b5 c0 fb ff ff 	lea    rsi,[rbp-0x440]
    865f:	49 89 d0             	mov    r8,rdx
    8662:	b9 00 00 00 00       	mov    ecx,0x0
    8667:	ba 00 00 00 00       	mov    edx,0x0
    866c:	48 89 c7             	mov    rdi,rax
    866f:	e8 0c 9f ff ff       	call   2580 <sqlite3_exec@plt>
    8674:	85 c0                	test   eax,eax
    8676:	74 1b                	je     8693 <update_spi_db+0x1e9>
    8678:	48 8b 85 a8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x458]
    867f:	48 89 c6             	mov    rsi,rax
    8682:	48 8d 3d d4 51 00 00 	lea    rdi,[rip+0x51d4]        # d85d <_IO_stdin_used+0x185d>
    8689:	b8 00 00 00 00       	mov    eax,0x0
    868e:	e8 4d 9e ff ff       	call   24e0 <printf@plt>
    8693:	b8 00 00 00 00       	mov    eax,0x0
    8698:	48 8b 5d c8          	mov    rbx,QWORD PTR [rbp-0x38]
    869c:	64 48 2b 1c 25 28 00 	sub    rbx,QWORD PTR fs:0x28
    86a3:	00 00 
    86a5:	74 05                	je     86ac <update_spi_db+0x202>
    86a7:	e8 34 a1 ff ff       	call   27e0 <__stack_chk_fail@plt>
    86ac:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    86b0:	5b                   	pop    rbx
    86b1:	41 5c                	pop    r12
    86b3:	41 5d                	pop    r13
    86b5:	41 5e                	pop    r14
    86b7:	41 5f                	pop    r15
    86b9:	5d                   	pop    rbp
    86ba:	c3                   	ret    

00000000000086bb <http_disect>:
    86bb:	f3 0f 1e fa          	endbr64 
    86bf:	55                   	push   rbp
    86c0:	48 89 e5             	mov    rbp,rsp
    86c3:	48 81 ec 30 04 00 00 	sub    rsp,0x430
    86ca:	48 89 bd d8 fb ff ff 	mov    QWORD PTR [rbp-0x428],rdi
    86d1:	48 89 b5 d0 fb ff ff 	mov    QWORD PTR [rbp-0x430],rsi
    86d8:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    86df:	00 00 
    86e1:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    86e5:	31 c0                	xor    eax,eax
    86e7:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    86ee:	be 0d 00 00 00       	mov    esi,0xd
    86f3:	48 89 c7             	mov    rdi,rax
    86f6:	e8 a9 ae ff ff       	call   35a4 <strloc>
    86fb:	89 85 ec fb ff ff    	mov    DWORD PTR [rbp-0x414],eax
    8701:	48 8d 3d 73 51 00 00 	lea    rdi,[rip+0x5173]        # d87b <_IO_stdin_used+0x187b>
    8708:	e8 33 9e ff ff       	call   2540 <puts@plt>
    870d:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    8714:	48 89 c7             	mov    rdi,rax
    8717:	e8 2f af ff ff       	call   364b <test_string_arr_print>
    871c:	83 f0 01             	xor    eax,0x1
    871f:	84 c0                	test   al,al
    8721:	75 33                	jne    8756 <http_disect+0x9b>
    8723:	8b 85 ec fb ff ff    	mov    eax,DWORD PTR [rbp-0x414]
    8729:	48 63 d0             	movsxd rdx,eax
    872c:	48 8b 8d d8 fb ff ff 	mov    rcx,QWORD PTR [rbp-0x428]
    8733:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    873a:	48 89 ce             	mov    rsi,rcx
    873d:	48 89 c7             	mov    rdi,rax
    8740:	e8 2b a1 ff ff       	call   2870 <strncpy@plt>
    8745:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    874c:	48 89 c7             	mov    rdi,rax
    874f:	e8 ec 9d ff ff       	call   2540 <puts@plt>
    8754:	eb 01                	jmp    8757 <http_disect+0x9c>
    8756:	90                   	nop
    8757:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    875b:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    8762:	00 00 
    8764:	74 05                	je     876b <http_disect+0xb0>
    8766:	e8 75 a0 ff ff       	call   27e0 <__stack_chk_fail@plt>
    876b:	c9                   	leave  
    876c:	c3                   	ret    

000000000000876d <dns_disect>:
    876d:	f3 0f 1e fa          	endbr64 
    8771:	55                   	push   rbp
    8772:	48 89 e5             	mov    rbp,rsp
    8775:	48 83 ec 30          	sub    rsp,0x30
    8779:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    877d:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    8781:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8785:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    8789:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    878d:	48 83 c0 0c          	add    rax,0xc
    8791:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    8795:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8799:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    879d:	66 85 c0             	test   ax,ax
    87a0:	75 6d                	jne    880f <dns_disect+0xa2>
    87a2:	bf 00 04 00 00       	mov    edi,0x400
    87a7:	e8 14 9e ff ff       	call   25c0 <malloc@plt>
    87ac:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    87b0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    87b4:	ba 08 00 00 00       	mov    edx,0x8
    87b9:	be 00 00 00 00       	mov    esi,0x0
    87be:	48 89 c7             	mov    rdi,rax
    87c1:	e8 2a 9d ff ff       	call   24f0 <memset@plt>
    87c6:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    87ca:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    87ce:	48 89 d6             	mov    rsi,rdx
    87d1:	48 89 c7             	mov    rdi,rax
    87d4:	e8 39 00 00 00       	call   8812 <get_dns_name>
    87d9:	0f b6 05 84 17 10 00 	movzx  eax,BYTE PTR [rip+0x101784]        # 109f64 <packet_print>
    87e0:	84 c0                	test   al,al
    87e2:	74 18                	je     87fc <dns_disect+0x8f>
    87e4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    87e8:	48 89 c6             	mov    rsi,rax
    87eb:	48 8d 3d 9b 50 00 00 	lea    rdi,[rip+0x509b]        # d88d <_IO_stdin_used+0x188d>
    87f2:	b8 00 00 00 00       	mov    eax,0x0
    87f7:	e8 e4 9c ff ff       	call   24e0 <printf@plt>
    87fc:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    8801:	74 0c                	je     880f <dns_disect+0xa2>
    8803:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8807:	48 89 c7             	mov    rdi,rax
    880a:	e8 51 9e ff ff       	call   2660 <free@plt>
    880f:	90                   	nop
    8810:	c9                   	leave  
    8811:	c3                   	ret    

0000000000008812 <get_dns_name>:
    8812:	f3 0f 1e fa          	endbr64 
    8816:	55                   	push   rbp
    8817:	48 89 e5             	mov    rbp,rsp
    881a:	53                   	push   rbx
    881b:	48 83 ec 28          	sub    rsp,0x28
    881f:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    8823:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    8827:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    882e:	eb 57                	jmp    8887 <get_dns_name+0x75>
    8830:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    8833:	48 63 d0             	movsxd rdx,eax
    8836:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    883a:	48 01 d0             	add    rax,rdx
    883d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    8840:	3c 20                	cmp    al,0x20
    8842:	7e 24                	jle    8868 <get_dns_name+0x56>
    8844:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    8847:	48 63 d0             	movsxd rdx,eax
    884a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    884e:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    8852:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    8856:	ba 01 00 00 00       	mov    edx,0x1
    885b:	48 89 ce             	mov    rsi,rcx
    885e:	48 89 c7             	mov    rdi,rax
    8861:	e8 ca 9c ff ff       	call   2530 <strncat@plt>
    8866:	eb 1b                	jmp    8883 <get_dns_name+0x71>
    8868:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    886c:	48 89 c7             	mov    rdi,rax
    886f:	e8 fc 9d ff ff       	call   2670 <strlen@plt>
    8874:	48 89 c2             	mov    rdx,rax
    8877:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    887b:	48 01 d0             	add    rax,rdx
    887e:	66 c7 00 2e 00       	mov    WORD PTR [rax],0x2e
    8883:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    8887:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    888a:	48 63 d8             	movsxd rbx,eax
    888d:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8891:	48 89 c7             	mov    rdi,rax
    8894:	e8 d7 9d ff ff       	call   2670 <strlen@plt>
    8899:	48 39 c3             	cmp    rbx,rax
    889c:	72 92                	jb     8830 <get_dns_name+0x1e>
    889e:	90                   	nop
    889f:	90                   	nop
    88a0:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    88a4:	c9                   	leave  
    88a5:	c3                   	ret    

00000000000088a6 <ftp_disect>:
    88a6:	f3 0f 1e fa          	endbr64 
    88aa:	55                   	push   rbp
    88ab:	48 89 e5             	mov    rbp,rsp
    88ae:	48 83 ec 20          	sub    rsp,0x20
    88b2:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    88b6:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    88ba:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    88be:	48 8d 35 d3 4f 00 00 	lea    rsi,[rip+0x4fd3]        # d898 <_IO_stdin_used+0x1898>
    88c5:	48 89 c7             	mov    rdi,rax
    88c8:	e8 43 9e ff ff       	call   2710 <strstr@plt>
    88cd:	48 85 c0             	test   rax,rax
    88d0:	75 1c                	jne    88ee <ftp_disect+0x48>
    88d2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    88d6:	48 8d 35 cb 4f 00 00 	lea    rsi,[rip+0x4fcb]        # d8a8 <_IO_stdin_used+0x18a8>
    88dd:	48 89 c7             	mov    rdi,rax
    88e0:	e8 2b 9e ff ff       	call   2710 <strstr@plt>
    88e5:	48 85 c0             	test   rax,rax
    88e8:	0f 84 8a 00 00 00    	je     8978 <ftp_disect+0xd2>
    88ee:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    88f2:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    88f6:	48 89 c7             	mov    rdi,rax
    88f9:	e8 46 f1 ff ff       	call   7a44 <member_exists>
    88fe:	48 63 d0             	movsxd rdx,eax
    8901:	48 89 d0             	mov    rax,rdx
    8904:	48 c1 e0 02          	shl    rax,0x2
    8908:	48 01 d0             	add    rax,rdx
    890b:	48 c1 e0 03          	shl    rax,0x3
    890f:	48 01 d0             	add    rax,rdx
    8912:	48 c1 e0 04          	shl    rax,0x4
    8916:	48 8d 15 03 ac 0e 00 	lea    rdx,[rip+0xeac03]        # f3520 <watchlist>
    891d:	48 01 d0             	add    rax,rdx
    8920:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8924:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8928:	8b 80 40 02 00 00    	mov    eax,DWORD PTR [rax+0x240]
    892e:	8d 50 01             	lea    edx,[rax+0x1]
    8931:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8935:	89 90 40 02 00 00    	mov    DWORD PTR [rax+0x240],edx
    893b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    893f:	8b 80 40 02 00 00    	mov    eax,DWORD PTR [rax+0x240]
    8945:	83 f8 04             	cmp    eax,0x4
    8948:	7e 2e                	jle    8978 <ftp_disect+0xd2>
    894a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    894e:	8b 88 40 02 00 00    	mov    ecx,DWORD PTR [rax+0x240]
    8954:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8958:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    895c:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8960:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    8964:	48 89 c6             	mov    rsi,rax
    8967:	48 8d 3d 4a 4f 00 00 	lea    rdi,[rip+0x4f4a]        # d8b8 <_IO_stdin_used+0x18b8>
    896e:	b8 00 00 00 00       	mov    eax,0x0
    8973:	e8 68 9b ff ff       	call   24e0 <printf@plt>
    8978:	90                   	nop
    8979:	c9                   	leave  
    897a:	c3                   	ret    

000000000000897b <livedebug>:
    897b:	f3 0f 1e fa          	endbr64 
    897f:	55                   	push   rbp
    8980:	48 89 e5             	mov    rbp,rsp
    8983:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
    898a:	48 89 bd 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rdi
    8991:	48 89 b5 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rsi
    8998:	48 89 95 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdx
    899f:	48 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rcx
    89a6:	4c 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r8
    89ad:	4c 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r9
    89b4:	84 c0                	test   al,al
    89b6:	74 20                	je     89d8 <livedebug+0x5d>
    89b8:	0f 29 45 80          	movaps XMMWORD PTR [rbp-0x80],xmm0
    89bc:	0f 29 4d 90          	movaps XMMWORD PTR [rbp-0x70],xmm1
    89c0:	0f 29 55 a0          	movaps XMMWORD PTR [rbp-0x60],xmm2
    89c4:	0f 29 5d b0          	movaps XMMWORD PTR [rbp-0x50],xmm3
    89c8:	0f 29 65 c0          	movaps XMMWORD PTR [rbp-0x40],xmm4
    89cc:	0f 29 6d d0          	movaps XMMWORD PTR [rbp-0x30],xmm5
    89d0:	0f 29 75 e0          	movaps XMMWORD PTR [rbp-0x20],xmm6
    89d4:	0f 29 7d f0          	movaps XMMWORD PTR [rbp-0x10],xmm7
    89d8:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    89df:	00 00 
    89e1:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    89e8:	31 c0                	xor    eax,eax
    89ea:	0f b6 05 2f 15 10 00 	movzx  eax,BYTE PTR [rip+0x10152f]        # 109f20 <debug_mode>
    89f1:	84 c0                	test   al,al
    89f3:	74 4b                	je     8a40 <livedebug+0xc5>
    89f5:	c7 85 30 ff ff ff 08 	mov    DWORD PTR [rbp-0xd0],0x8
    89fc:	00 00 00 
    89ff:	c7 85 34 ff ff ff 30 	mov    DWORD PTR [rbp-0xcc],0x30
    8a06:	00 00 00 
    8a09:	48 8d 45 10          	lea    rax,[rbp+0x10]
    8a0d:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    8a14:	48 8d 85 50 ff ff ff 	lea    rax,[rbp-0xb0]
    8a1b:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    8a22:	48 8d 95 30 ff ff ff 	lea    rdx,[rbp-0xd0]
    8a29:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    8a30:	48 89 d6             	mov    rsi,rdx
    8a33:	48 89 c7             	mov    rdi,rax
    8a36:	b8 00 00 00 00       	mov    eax,0x0
    8a3b:	e8 a0 9a ff ff       	call   24e0 <printf@plt>
    8a40:	90                   	nop
    8a41:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    8a48:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    8a4f:	00 00 
    8a51:	74 05                	je     8a58 <livedebug+0xdd>
    8a53:	e8 88 9d ff ff       	call   27e0 <__stack_chk_fail@plt>
    8a58:	c9                   	leave  
    8a59:	c3                   	ret    

0000000000008a5a <forward_packet>:
    8a5a:	f3 0f 1e fa          	endbr64 
    8a5e:	55                   	push   rbp
    8a5f:	48 89 e5             	mov    rbp,rsp
    8a62:	48 83 ec 20          	sub    rsp,0x20
    8a66:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8a6a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a6e:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8a72:	48 8d 35 17 15 10 00 	lea    rsi,[rip+0x101517]        # 109f90 <local_ip>
    8a79:	48 89 c7             	mov    rdi,rax
    8a7c:	e8 6f 9d ff ff       	call   27f0 <strcmp@plt>
    8a81:	85 c0                	test   eax,eax
    8a83:	74 4f                	je     8ad4 <forward_packet+0x7a>
    8a85:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a89:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    8a8d:	48 8d 35 fc 14 10 00 	lea    rsi,[rip+0x1014fc]        # 109f90 <local_ip>
    8a94:	48 89 c7             	mov    rdi,rax
    8a97:	e8 54 9d ff ff       	call   27f0 <strcmp@plt>
    8a9c:	85 c0                	test   eax,eax
    8a9e:	74 34                	je     8ad4 <forward_packet+0x7a>
    8aa0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8aa4:	48 8b 00             	mov    rax,QWORD PTR [rax]
    8aa7:	48 8d 50 0e          	lea    rdx,[rax+0xe]
    8aab:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8aaf:	48 89 d6             	mov    rsi,rdx
    8ab2:	48 89 c7             	mov    rdi,rax
    8ab5:	e8 66 9d ff ff       	call   2820 <strcpy@plt>
    8aba:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8abe:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    8ac1:	83 e8 0e             	sub    eax,0xe
    8ac4:	89 c2                	mov    edx,eax
    8ac6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8aca:	89 d6                	mov    esi,edx
    8acc:	48 89 c7             	mov    rdi,rax
    8acf:	e8 53 c9 ff ff       	call   5427 <ascii_hexdump>
    8ad4:	90                   	nop
    8ad5:	c9                   	leave  
    8ad6:	c3                   	ret    

0000000000008ad7 <conversation_exists>:
    8ad7:	f3 0f 1e fa          	endbr64 
    8adb:	55                   	push   rbp
    8adc:	48 89 e5             	mov    rbp,rsp
    8adf:	48 83 ec 20          	sub    rsp,0x20
    8ae3:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8ae7:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    8aee:	e9 ff 00 00 00       	jmp    8bf2 <conversation_exists+0x11b>
    8af3:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8af6:	48 98                	cdqe   
    8af8:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8aff:	48 8d 15 da 14 10 00 	lea    rdx,[rip+0x1014da]        # 109fe0 <spi_table>
    8b06:	48 01 d0             	add    rax,rdx
    8b09:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8b0d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b11:	0f b6 80 b0 00 00 00 	movzx  eax,BYTE PTR [rax+0xb0]
    8b18:	84 c0                	test   al,al
    8b1a:	0f 84 ce 00 00 00    	je     8bee <conversation_exists+0x117>
    8b20:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b24:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    8b27:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b2b:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    8b2e:	39 c2                	cmp    edx,eax
    8b30:	75 58                	jne    8b8a <conversation_exists+0xb3>
    8b32:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b36:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    8b39:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b3d:	8b 40 54             	mov    eax,DWORD PTR [rax+0x54]
    8b40:	39 c2                	cmp    edx,eax
    8b42:	75 46                	jne    8b8a <conversation_exists+0xb3>
    8b44:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8b48:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b4c:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8b50:	48 89 d6             	mov    rsi,rdx
    8b53:	48 89 c7             	mov    rdi,rax
    8b56:	e8 95 9c ff ff       	call   27f0 <strcmp@plt>
    8b5b:	85 c0                	test   eax,eax
    8b5d:	0f 85 8a 00 00 00    	jne    8bed <conversation_exists+0x116>
    8b63:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b67:	48 8d 50 29          	lea    rdx,[rax+0x29]
    8b6b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b6f:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    8b73:	48 89 d6             	mov    rsi,rdx
    8b76:	48 89 c7             	mov    rdi,rax
    8b79:	e8 72 9c ff ff       	call   27f0 <strcmp@plt>
    8b7e:	85 c0                	test   eax,eax
    8b80:	75 6b                	jne    8bed <conversation_exists+0x116>
    8b82:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8b85:	e9 81 00 00 00       	jmp    8c0b <conversation_exists+0x134>
    8b8a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b8e:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    8b91:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b95:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    8b98:	39 c2                	cmp    edx,eax
    8b9a:	75 52                	jne    8bee <conversation_exists+0x117>
    8b9c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8ba0:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    8ba3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8ba7:	8b 40 54             	mov    eax,DWORD PTR [rax+0x54]
    8baa:	39 c2                	cmp    edx,eax
    8bac:	75 40                	jne    8bee <conversation_exists+0x117>
    8bae:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8bb2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8bb6:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    8bba:	48 89 d6             	mov    rsi,rdx
    8bbd:	48 89 c7             	mov    rdi,rax
    8bc0:	e8 2b 9c ff ff       	call   27f0 <strcmp@plt>
    8bc5:	85 c0                	test   eax,eax
    8bc7:	75 25                	jne    8bee <conversation_exists+0x117>
    8bc9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8bcd:	48 8d 50 29          	lea    rdx,[rax+0x29]
    8bd1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8bd5:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8bd9:	48 89 d6             	mov    rsi,rdx
    8bdc:	48 89 c7             	mov    rdi,rax
    8bdf:	e8 0c 9c ff ff       	call   27f0 <strcmp@plt>
    8be4:	85 c0                	test   eax,eax
    8be6:	75 06                	jne    8bee <conversation_exists+0x117>
    8be8:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8beb:	eb 1e                	jmp    8c0b <conversation_exists+0x134>
    8bed:	90                   	nop
    8bee:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    8bf2:	8b 05 48 84 00 00    	mov    eax,DWORD PTR [rip+0x8448]        # 11040 <total_conversations>
    8bf8:	8d 50 01             	lea    edx,[rax+0x1]
    8bfb:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8bfe:	39 c2                	cmp    edx,eax
    8c00:	0f 87 ed fe ff ff    	ja     8af3 <conversation_exists+0x1c>
    8c06:	b8 ff ff ff ff       	mov    eax,0xffffffff
    8c0b:	c9                   	leave  
    8c0c:	c3                   	ret    

0000000000008c0d <get_new_spi_location>:
    8c0d:	f3 0f 1e fa          	endbr64 
    8c11:	55                   	push   rbp
    8c12:	48 89 e5             	mov    rbp,rsp
    8c15:	8b 05 25 84 00 00    	mov    eax,DWORD PTR [rip+0x8425]        # 11040 <total_conversations>
    8c1b:	83 f8 ff             	cmp    eax,0xffffffff
    8c1e:	75 17                	jne    8c37 <get_new_spi_location+0x2a>
    8c20:	8b 05 1a 84 00 00    	mov    eax,DWORD PTR [rip+0x841a]        # 11040 <total_conversations>
    8c26:	83 c0 01             	add    eax,0x1
    8c29:	89 05 11 84 00 00    	mov    DWORD PTR [rip+0x8411],eax        # 11040 <total_conversations>
    8c2f:	8b 05 0b 84 00 00    	mov    eax,DWORD PTR [rip+0x840b]        # 11040 <total_conversations>
    8c35:	eb 52                	jmp    8c89 <get_new_spi_location+0x7c>
    8c37:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    8c3e:	eb 27                	jmp    8c67 <get_new_spi_location+0x5a>
    8c40:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    8c43:	48 98                	cdqe   
    8c45:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8c4c:	48 8d 15 3d 14 10 00 	lea    rdx,[rip+0x10143d]        # 10a090 <spi_table+0xb0>
    8c53:	0f b6 04 10          	movzx  eax,BYTE PTR [rax+rdx*1]
    8c57:	83 f0 01             	xor    eax,0x1
    8c5a:	84 c0                	test   al,al
    8c5c:	74 05                	je     8c63 <get_new_spi_location+0x56>
    8c5e:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    8c61:	eb 26                	jmp    8c89 <get_new_spi_location+0x7c>
    8c63:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    8c67:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
    8c6a:	8b 05 d0 83 00 00    	mov    eax,DWORD PTR [rip+0x83d0]        # 11040 <total_conversations>
    8c70:	39 c2                	cmp    edx,eax
    8c72:	72 cc                	jb     8c40 <get_new_spi_location+0x33>
    8c74:	8b 05 c6 83 00 00    	mov    eax,DWORD PTR [rip+0x83c6]        # 11040 <total_conversations>
    8c7a:	83 c0 01             	add    eax,0x1
    8c7d:	89 05 bd 83 00 00    	mov    DWORD PTR [rip+0x83bd],eax        # 11040 <total_conversations>
    8c83:	8b 05 b7 83 00 00    	mov    eax,DWORD PTR [rip+0x83b7]        # 11040 <total_conversations>
    8c89:	5d                   	pop    rbp
    8c8a:	c3                   	ret    

0000000000008c8b <add_new_conversation>:
    8c8b:	f3 0f 1e fa          	endbr64 
    8c8f:	55                   	push   rbp
    8c90:	48 89 e5             	mov    rbp,rsp
    8c93:	48 83 ec 20          	sub    rsp,0x20
    8c97:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8c9b:	0f b6 05 20 13 10 00 	movzx  eax,BYTE PTR [rip+0x101320]        # 109fc2 <use_spi>
    8ca2:	84 c0                	test   al,al
    8ca4:	0f 84 17 02 00 00    	je     8ec1 <add_new_conversation+0x236>
    8caa:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8cae:	48 89 c7             	mov    rdi,rax
    8cb1:	e8 21 fe ff ff       	call   8ad7 <conversation_exists>
    8cb6:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    8cb9:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    8cbd:	0f 84 88 00 00 00    	je     8d4b <add_new_conversation+0xc0>
    8cc3:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8cc6:	48 98                	cdqe   
    8cc8:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8ccf:	48 8d 15 0a 13 10 00 	lea    rdx,[rip+0x10130a]        # 109fe0 <spi_table>
    8cd6:	48 01 d0             	add    rax,rdx
    8cd9:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8cdd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8ce1:	8b 80 ac 00 00 00    	mov    eax,DWORD PTR [rax+0xac]
    8ce7:	8d 50 01             	lea    edx,[rax+0x1]
    8cea:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8cee:	89 90 ac 00 00 00    	mov    DWORD PTR [rax+0xac],edx
    8cf4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8cf8:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    8cfe:	8d 50 01             	lea    edx,[rax+0x1]
    8d01:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d05:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    8d0b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d0f:	8b 78 54             	mov    edi,DWORD PTR [rax+0x54]
    8d12:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    8d16:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d1a:	8b 50 58             	mov    edx,DWORD PTR [rax+0x58]
    8d1d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d21:	48 8d 70 29          	lea    rsi,[rax+0x29]
    8d25:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8d28:	41 89 f9             	mov    r9d,edi
    8d2b:	49 89 c8             	mov    r8,rcx
    8d2e:	89 d1                	mov    ecx,edx
    8d30:	48 89 f2             	mov    rdx,rsi
    8d33:	89 c6                	mov    esi,eax
    8d35:	48 8d 3d c4 4b 00 00 	lea    rdi,[rip+0x4bc4]        # d900 <_IO_stdin_used+0x1900>
    8d3c:	b8 00 00 00 00       	mov    eax,0x0
    8d41:	e8 9a 97 ff ff       	call   24e0 <printf@plt>
    8d46:	e9 76 01 00 00       	jmp    8ec1 <add_new_conversation+0x236>
    8d4b:	b8 00 00 00 00       	mov    eax,0x0
    8d50:	e8 b8 fe ff ff       	call   8c0d <get_new_spi_location>
    8d55:	48 98                	cdqe   
    8d57:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8d5e:	48 8d 15 7b 12 10 00 	lea    rdx,[rip+0x10127b]        # 109fe0 <spi_table>
    8d65:	48 01 d0             	add    rax,rdx
    8d68:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8d6c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d70:	ba 08 00 00 00       	mov    edx,0x8
    8d75:	be 00 00 00 00       	mov    esi,0x0
    8d7a:	48 89 c7             	mov    rdi,rax
    8d7d:	e8 6e 97 ff ff       	call   24f0 <memset@plt>
    8d82:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d86:	c6 80 b0 00 00 00 01 	mov    BYTE PTR [rax+0xb0],0x1
    8d8d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d91:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8d95:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8d99:	48 83 c2 29          	add    rdx,0x29
    8d9d:	48 89 c6             	mov    rsi,rax
    8da0:	48 89 d7             	mov    rdi,rdx
    8da3:	e8 78 9a ff ff       	call   2820 <strcpy@plt>
    8da8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8dac:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
    8db0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8db4:	48 89 d6             	mov    rsi,rdx
    8db7:	48 89 c7             	mov    rdi,rax
    8dba:	e8 61 9a ff ff       	call   2820 <strcpy@plt>
    8dbf:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8dc3:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    8dc6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8dca:	89 50 58             	mov    DWORD PTR [rax+0x58],edx
    8dcd:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8dd1:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    8dd4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8dd8:	89 50 54             	mov    DWORD PTR [rax+0x54],edx
    8ddb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8ddf:	c7 40 7c 00 00 00 00 	mov    DWORD PTR [rax+0x7c],0x0
    8de6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8dea:	48 8d 50 5c          	lea    rdx,[rax+0x5c]
    8dee:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8df2:	48 89 50 70          	mov    QWORD PTR [rax+0x70],rdx
    8df6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8dfa:	48 8d 50 60          	lea    rdx,[rax+0x60]
    8dfe:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e02:	48 89 50 68          	mov    QWORD PTR [rax+0x68],rdx
    8e06:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8e0a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8e0e:	48 89 d6             	mov    rsi,rdx
    8e11:	48 89 c7             	mov    rdi,rax
    8e14:	e8 8e 04 00 00       	call   92a7 <increment_stats>
    8e19:	bf 00 00 00 00       	mov    edi,0x0
    8e1e:	e8 0d 9b ff ff       	call   2930 <time@plt>
    8e23:	48 89 c2             	mov    rdx,rax
    8e26:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e2a:	48 89 90 90 00 00 00 	mov    QWORD PTR [rax+0x90],rdx
    8e31:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e35:	c7 80 80 00 00 00 00 	mov    DWORD PTR [rax+0x80],0x0
    8e3c:	00 00 00 
    8e3f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e43:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    8e49:	8d 50 01             	lea    edx,[rax+0x1]
    8e4c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e50:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    8e56:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8e5a:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    8e5d:	89 c2                	mov    edx,eax
    8e5f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e63:	89 90 a4 00 00 00    	mov    DWORD PTR [rax+0xa4],edx
    8e69:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e6d:	8b 78 54             	mov    edi,DWORD PTR [rax+0x54]
    8e70:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    8e74:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e78:	8b 50 58             	mov    edx,DWORD PTR [rax+0x58]
    8e7b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e7f:	48 8d 70 29          	lea    rsi,[rax+0x29]
    8e83:	8b 05 b7 81 00 00    	mov    eax,DWORD PTR [rip+0x81b7]        # 11040 <total_conversations>
    8e89:	41 89 f9             	mov    r9d,edi
    8e8c:	49 89 c8             	mov    r8,rcx
    8e8f:	89 d1                	mov    ecx,edx
    8e91:	48 89 f2             	mov    rdx,rsi
    8e94:	89 c6                	mov    esi,eax
    8e96:	48 8d 3d 8b 4a 00 00 	lea    rdi,[rip+0x4a8b]        # d928 <_IO_stdin_used+0x1928>
    8e9d:	b8 00 00 00 00       	mov    eax,0x0
    8ea2:	e8 39 96 ff ff       	call   24e0 <printf@plt>
    8ea7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8eab:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    8eae:	83 f8 7e             	cmp    eax,0x7e
    8eb1:	75 0e                	jne    8ec1 <add_new_conversation+0x236>
    8eb3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8eb7:	c7 80 8c 00 00 00 f3 	mov    DWORD PTR [rax+0x8c],0xf3
    8ebe:	00 00 00 
    8ec1:	90                   	nop
    8ec2:	c9                   	leave  
    8ec3:	c3                   	ret    

0000000000008ec4 <spi_ud_thw>:
    8ec4:	f3 0f 1e fa          	endbr64 
    8ec8:	55                   	push   rbp
    8ec9:	48 89 e5             	mov    rbp,rsp
    8ecc:	48 83 ec 20          	sub    rsp,0x20
    8ed0:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8ed4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8ed8:	48 89 c7             	mov    rdi,rax
    8edb:	e8 f7 fb ff ff       	call   8ad7 <conversation_exists>
    8ee0:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    8ee3:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    8ee7:	0f 84 9d 00 00 00    	je     8f8a <spi_ud_thw+0xc6>
    8eed:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8ef0:	48 98                	cdqe   
    8ef2:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8ef9:	48 8d 15 e0 10 10 00 	lea    rdx,[rip+0x1010e0]        # 109fe0 <spi_table>
    8f00:	48 01 d0             	add    rax,rdx
    8f03:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8f07:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8f0b:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    8f11:	8d 50 01             	lea    edx,[rax+0x1]
    8f14:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8f18:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    8f1e:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8f22:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8f26:	48 89 d6             	mov    rsi,rdx
    8f29:	48 89 c7             	mov    rdi,rax
    8f2c:	e8 76 03 00 00       	call   92a7 <increment_stats>
    8f31:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8f35:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    8f38:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8f3c:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    8f40:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8f44:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    8f47:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8f4b:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    8f4f:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8f52:	41 89 f9             	mov    r9d,edi
    8f55:	49 89 f0             	mov    r8,rsi
    8f58:	89 c6                	mov    esi,eax
    8f5a:	48 8d 3d ef 49 00 00 	lea    rdi,[rip+0x49ef]        # d950 <_IO_stdin_used+0x1950>
    8f61:	b8 00 00 00 00       	mov    eax,0x0
    8f66:	e8 75 95 ff ff       	call   24e0 <printf@plt>
    8f6b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8f6f:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
    8f75:	3d f3 00 00 00       	cmp    eax,0xf3
    8f7a:	75 0e                	jne    8f8a <spi_ud_thw+0xc6>
    8f7c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8f80:	c7 80 8c 00 00 00 f4 	mov    DWORD PTR [rax+0x8c],0xf4
    8f87:	00 00 00 
    8f8a:	90                   	nop
    8f8b:	c9                   	leave  
    8f8c:	c3                   	ret    

0000000000008f8d <update_table>:
    8f8d:	f3 0f 1e fa          	endbr64 
    8f91:	55                   	push   rbp
    8f92:	48 89 e5             	mov    rbp,rsp
    8f95:	48 83 ec 30          	sub    rsp,0x30
    8f99:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    8f9d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8fa4:	00 00 
    8fa6:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8faa:	31 c0                	xor    eax,eax
    8fac:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8fb0:	48 89 c7             	mov    rdi,rax
    8fb3:	e8 1f fb ff ff       	call   8ad7 <conversation_exists>
    8fb8:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
    8fbb:	83 7d e4 ff          	cmp    DWORD PTR [rbp-0x1c],0xffffffff
    8fbf:	0f 84 52 01 00 00    	je     9117 <update_table+0x18a>
    8fc5:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    8fc8:	48 98                	cdqe   
    8fca:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8fd1:	48 8d 15 08 10 10 00 	lea    rdx,[rip+0x101008]        # 109fe0 <spi_table>
    8fd8:	48 01 d0             	add    rax,rdx
    8fdb:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    8fdf:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8fe3:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    8fe9:	8d 50 01             	lea    edx,[rax+0x1]
    8fec:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8ff0:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    8ff6:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    8ffa:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8ffe:	48 89 d6             	mov    rsi,rdx
    9001:	48 89 c7             	mov    rdi,rax
    9004:	e8 9e 02 00 00       	call   92a7 <increment_stats>
    9009:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    900d:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
    9013:	3d f4 00 00 00       	cmp    eax,0xf4
    9018:	75 4d                	jne    9067 <update_table+0xda>
    901a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    901e:	c7 80 8c 00 00 00 f1 	mov    DWORD PTR [rax+0x8c],0xf1
    9025:	00 00 00 
    9028:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    902c:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    902f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9033:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    9037:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    903b:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    903e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9042:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    9046:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    9049:	41 89 f9             	mov    r9d,edi
    904c:	49 89 f0             	mov    r8,rsi
    904f:	89 c6                	mov    esi,eax
    9051:	48 8d 3d 20 49 00 00 	lea    rdi,[rip+0x4920]        # d978 <_IO_stdin_used+0x1978>
    9058:	b8 00 00 00 00       	mov    eax,0x0
    905d:	e8 7e 94 ff ff       	call   24e0 <printf@plt>
    9062:	e9 b0 00 00 00       	jmp    9117 <update_table+0x18a>
    9067:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    906b:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
    9071:	3d f6 00 00 00       	cmp    eax,0xf6
    9076:	0f 85 9b 00 00 00    	jne    9117 <update_table+0x18a>
    907c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9080:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    9083:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9087:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    908b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    908f:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    9092:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9096:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    909a:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    909d:	41 89 f9             	mov    r9d,edi
    90a0:	49 89 f0             	mov    r8,rsi
    90a3:	89 c6                	mov    esi,eax
    90a5:	48 8d 3d fc 48 00 00 	lea    rdi,[rip+0x48fc]        # d9a8 <_IO_stdin_used+0x19a8>
    90ac:	b8 00 00 00 00       	mov    eax,0x0
    90b1:	e8 2a 94 ff ff       	call   24e0 <printf@plt>
    90b6:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    90ba:	c7 80 8c 00 00 00 fa 	mov    DWORD PTR [rax+0x8c],0xfa
    90c1:	00 00 00 
    90c4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    90c8:	c6 80 b0 00 00 00 00 	mov    BYTE PTR [rax+0xb0],0x0
    90cf:	bf 00 00 00 00       	mov    edi,0x0
    90d4:	e8 57 98 ff ff       	call   2930 <time@plt>
    90d9:	48 89 c2             	mov    rdx,rax
    90dc:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    90e0:	48 89 90 98 00 00 00 	mov    QWORD PTR [rax+0x98],rdx
    90e7:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    90eb:	48 8d 45 e8          	lea    rax,[rbp-0x18]
    90ef:	48 89 d1             	mov    rcx,rdx
    90f2:	48 8d 15 b1 f3 ff ff 	lea    rdx,[rip+0xfffffffffffff3b1]        # 84aa <update_spi_db>
    90f9:	be 00 00 00 00       	mov    esi,0x0
    90fe:	48 89 c7             	mov    rdi,rax
    9101:	e8 3a 95 ff ff       	call   2640 <pthread_create@plt>
    9106:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    910a:	be 00 00 00 00       	mov    esi,0x0
    910f:	48 89 c7             	mov    rdi,rax
    9112:	e8 b9 93 ff ff       	call   24d0 <pthread_join@plt>
    9117:	90                   	nop
    9118:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    911c:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    9123:	00 00 
    9125:	74 05                	je     912c <update_table+0x19f>
    9127:	e8 b4 96 ff ff       	call   27e0 <__stack_chk_fail@plt>
    912c:	c9                   	leave  
    912d:	c3                   	ret    

000000000000912e <polite_end>:
    912e:	f3 0f 1e fa          	endbr64 
    9132:	55                   	push   rbp
    9133:	48 89 e5             	mov    rbp,rsp
    9136:	48 83 ec 20          	sub    rsp,0x20
    913a:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    913e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9142:	48 89 c7             	mov    rdi,rax
    9145:	e8 8d f9 ff ff       	call   8ad7 <conversation_exists>
    914a:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    914d:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    9151:	0f 84 e7 00 00 00    	je     923e <polite_end+0x110>
    9157:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    915a:	48 98                	cdqe   
    915c:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    9163:	48 8d 15 76 0e 10 00 	lea    rdx,[rip+0x100e76]        # 109fe0 <spi_table>
    916a:	48 01 d0             	add    rax,rdx
    916d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9171:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9175:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    917b:	8d 50 01             	lea    edx,[rax+0x1]
    917e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9182:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    9188:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    918c:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
    9192:	3d f5 00 00 00       	cmp    eax,0xf5
    9197:	75 4a                	jne    91e3 <polite_end+0xb5>
    9199:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    919d:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    91a0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    91a4:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    91a8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    91ac:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    91af:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    91b3:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    91b7:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    91ba:	41 89 f9             	mov    r9d,edi
    91bd:	49 89 f0             	mov    r8,rsi
    91c0:	89 c6                	mov    esi,eax
    91c2:	48 8d 3d 17 48 00 00 	lea    rdi,[rip+0x4817]        # d9e0 <_IO_stdin_used+0x19e0>
    91c9:	b8 00 00 00 00       	mov    eax,0x0
    91ce:	e8 0d 93 ff ff       	call   24e0 <printf@plt>
    91d3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    91d7:	c7 80 8c 00 00 00 f6 	mov    DWORD PTR [rax+0x8c],0xf6
    91de:	00 00 00 
    91e1:	eb 48                	jmp    922b <polite_end+0xfd>
    91e3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    91e7:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    91ea:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    91ee:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    91f2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    91f6:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    91f9:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    91fd:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    9201:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    9204:	41 89 f9             	mov    r9d,edi
    9207:	49 89 f0             	mov    r8,rsi
    920a:	89 c6                	mov    esi,eax
    920c:	48 8d 3d 05 48 00 00 	lea    rdi,[rip+0x4805]        # da18 <_IO_stdin_used+0x1a18>
    9213:	b8 00 00 00 00       	mov    eax,0x0
    9218:	e8 c3 92 ff ff       	call   24e0 <printf@plt>
    921d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9221:	c7 80 8c 00 00 00 f5 	mov    DWORD PTR [rax+0x8c],0xf5
    9228:	00 00 00 
    922b:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    922f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9233:	48 89 d6             	mov    rsi,rdx
    9236:	48 89 c7             	mov    rdi,rax
    9239:	e8 69 00 00 00       	call   92a7 <increment_stats>
    923e:	90                   	nop
    923f:	c9                   	leave  
    9240:	c3                   	ret    

0000000000009241 <handle_data_pkt>:
    9241:	f3 0f 1e fa          	endbr64 
    9245:	55                   	push   rbp
    9246:	48 89 e5             	mov    rbp,rsp
    9249:	48 83 ec 20          	sub    rsp,0x20
    924d:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    9251:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9255:	48 89 c7             	mov    rdi,rax
    9258:	e8 7a f8 ff ff       	call   8ad7 <conversation_exists>
    925d:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    9260:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    9264:	74 3e                	je     92a4 <handle_data_pkt+0x63>
    9266:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    9269:	48 98                	cdqe   
    926b:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    9272:	48 8d 15 67 0d 10 00 	lea    rdx,[rip+0x100d67]        # 109fe0 <spi_table>
    9279:	48 01 d0             	add    rax,rdx
    927c:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9280:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9284:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    9287:	8d 50 01             	lea    edx,[rax+0x1]
    928a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    928e:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    9291:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    9295:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9299:	48 89 d6             	mov    rsi,rdx
    929c:	48 89 c7             	mov    rdi,rax
    929f:	e8 03 00 00 00       	call   92a7 <increment_stats>
    92a4:	90                   	nop
    92a5:	c9                   	leave  
    92a6:	c3                   	ret    

00000000000092a7 <increment_stats>:
    92a7:	f3 0f 1e fa          	endbr64 
    92ab:	55                   	push   rbp
    92ac:	48 89 e5             	mov    rbp,rsp
    92af:	48 83 ec 10          	sub    rsp,0x10
    92b3:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    92b7:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    92bb:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    92bf:	48 8d 50 29          	lea    rdx,[rax+0x29]
    92c3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    92c7:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    92cb:	48 89 d6             	mov    rsi,rdx
    92ce:	48 89 c7             	mov    rdi,rax
    92d1:	e8 1a 95 ff ff       	call   27f0 <strcmp@plt>
    92d6:	85 c0                	test   eax,eax
    92d8:	75 13                	jne    92ed <increment_stats+0x46>
    92da:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    92de:	8b 40 60             	mov    eax,DWORD PTR [rax+0x60]
    92e1:	8d 50 01             	lea    edx,[rax+0x1]
    92e4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    92e8:	89 50 60             	mov    DWORD PTR [rax+0x60],edx
    92eb:	eb 2c                	jmp    9319 <increment_stats+0x72>
    92ed:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    92f1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    92f5:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    92f9:	48 89 d6             	mov    rsi,rdx
    92fc:	48 89 c7             	mov    rdi,rax
    92ff:	e8 ec 94 ff ff       	call   27f0 <strcmp@plt>
    9304:	85 c0                	test   eax,eax
    9306:	75 11                	jne    9319 <increment_stats+0x72>
    9308:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    930c:	8b 40 5c             	mov    eax,DWORD PTR [rax+0x5c]
    930f:	8d 50 01             	lea    edx,[rax+0x1]
    9312:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9316:	89 50 5c             	mov    DWORD PTR [rax+0x5c],edx
    9319:	90                   	nop
    931a:	c9                   	leave  
    931b:	c3                   	ret    

000000000000931c <lprintf>:
    931c:	f3 0f 1e fa          	endbr64 
    9320:	55                   	push   rbp
    9321:	48 89 e5             	mov    rbp,rsp
    9324:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
    932b:	48 89 bd 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rdi
    9332:	48 89 b5 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rsi
    9339:	48 89 95 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdx
    9340:	48 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rcx
    9347:	4c 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r8
    934e:	4c 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r9
    9355:	84 c0                	test   al,al
    9357:	74 20                	je     9379 <lprintf+0x5d>
    9359:	0f 29 45 80          	movaps XMMWORD PTR [rbp-0x80],xmm0
    935d:	0f 29 4d 90          	movaps XMMWORD PTR [rbp-0x70],xmm1
    9361:	0f 29 55 a0          	movaps XMMWORD PTR [rbp-0x60],xmm2
    9365:	0f 29 5d b0          	movaps XMMWORD PTR [rbp-0x50],xmm3
    9369:	0f 29 65 c0          	movaps XMMWORD PTR [rbp-0x40],xmm4
    936d:	0f 29 6d d0          	movaps XMMWORD PTR [rbp-0x30],xmm5
    9371:	0f 29 75 e0          	movaps XMMWORD PTR [rbp-0x20],xmm6
    9375:	0f 29 7d f0          	movaps XMMWORD PTR [rbp-0x10],xmm7
    9379:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9380:	00 00 
    9382:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    9389:	31 c0                	xor    eax,eax
    938b:	c7 85 30 ff ff ff 10 	mov    DWORD PTR [rbp-0xd0],0x10
    9392:	00 00 00 
    9395:	c7 85 34 ff ff ff 30 	mov    DWORD PTR [rbp-0xcc],0x30
    939c:	00 00 00 
    939f:	48 8d 45 10          	lea    rax,[rbp+0x10]
    93a3:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    93aa:	48 8d 85 50 ff ff ff 	lea    rax,[rbp-0xb0]
    93b1:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    93b8:	48 8d 95 30 ff ff ff 	lea    rdx,[rbp-0xd0]
    93bf:	48 8b 8d 20 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xe0]
    93c6:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    93cd:	48 89 ce             	mov    rsi,rcx
    93d0:	48 89 c7             	mov    rdi,rax
    93d3:	b8 00 00 00 00       	mov    eax,0x0
    93d8:	e8 03 95 ff ff       	call   28e0 <fprintf@plt>
    93dd:	90                   	nop
    93de:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    93e5:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    93ec:	00 00 
    93ee:	74 05                	je     93f5 <lprintf+0xd9>
    93f0:	e8 eb 93 ff ff       	call   27e0 <__stack_chk_fail@plt>
    93f5:	c9                   	leave  
    93f6:	c3                   	ret    

00000000000093f7 <lfprintf>:
    93f7:	f3 0f 1e fa          	endbr64 
    93fb:	55                   	push   rbp
    93fc:	48 89 e5             	mov    rbp,rsp
    93ff:	48 81 ec 90 08 00 00 	sub    rsp,0x890
    9406:	48 89 bd 98 f7 ff ff 	mov    QWORD PTR [rbp-0x868],rdi
    940d:	48 89 b5 90 f7 ff ff 	mov    QWORD PTR [rbp-0x870],rsi
    9414:	48 89 95 88 f7 ff ff 	mov    QWORD PTR [rbp-0x878],rdx
    941b:	48 89 8d 80 f7 ff ff 	mov    QWORD PTR [rbp-0x880],rcx
    9422:	44 89 85 7c f7 ff ff 	mov    DWORD PTR [rbp-0x884],r8d
    9429:	44 89 8d 78 f7 ff ff 	mov    DWORD PTR [rbp-0x888],r9d
    9430:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9437:	00 00 
    9439:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    943d:	31 c0                	xor    eax,eax
    943f:	48 8b 85 98 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x868]
    9446:	48 8d 35 03 46 00 00 	lea    rsi,[rip+0x4603]        # da50 <_IO_stdin_used+0x1a50>
    944d:	48 89 c7             	mov    rdi,rax
    9450:	e8 7b 91 ff ff       	call   25d0 <fopen@plt>
    9455:	48 89 85 a8 f7 ff ff 	mov    QWORD PTR [rbp-0x858],rax
    945c:	48 83 bd a8 f7 ff ff 	cmp    QWORD PTR [rbp-0x858],0x0
    9463:	00 
    9464:	75 20                	jne    9486 <lfprintf+0x8f>
    9466:	48 8b 85 90 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x870]
    946d:	48 89 c6             	mov    rsi,rax
    9470:	48 8d 3d e1 45 00 00 	lea    rdi,[rip+0x45e1]        # da58 <_IO_stdin_used+0x1a58>
    9477:	b8 00 00 00 00       	mov    eax,0x0
    947c:	e8 5f 90 ff ff       	call   24e0 <printf@plt>
    9481:	e9 cd 00 00 00       	jmp    9553 <lfprintf+0x15c>
    9486:	48 8d 85 b0 f7 ff ff 	lea    rax,[rbp-0x850]
    948d:	48 89 c7             	mov    rdi,rax
    9490:	e8 48 a0 ff ff       	call   34dd <cb_get_formatted_time>
    9495:	83 bd 7c f7 ff ff ff 	cmp    DWORD PTR [rbp-0x884],0xffffffff
    949c:	75 3f                	jne    94dd <lfprintf+0xe6>
    949e:	48 8b bd 80 f7 ff ff 	mov    rdi,QWORD PTR [rbp-0x880]
    94a5:	48 8b b5 88 f7 ff ff 	mov    rsi,QWORD PTR [rbp-0x878]
    94ac:	48 8b 8d 90 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x870]
    94b3:	48 8d 95 b0 f7 ff ff 	lea    rdx,[rbp-0x850]
    94ba:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    94c1:	49 89 f9             	mov    r9,rdi
    94c4:	49 89 f0             	mov    r8,rsi
    94c7:	48 8d 35 b8 45 00 00 	lea    rsi,[rip+0x45b8]        # da86 <_IO_stdin_used+0x1a86>
    94ce:	48 89 c7             	mov    rdi,rax
    94d1:	b8 00 00 00 00       	mov    eax,0x0
    94d6:	e8 d5 91 ff ff       	call   26b0 <sprintf@plt>
    94db:	eb 4e                	jmp    952b <lfprintf+0x134>
    94dd:	44 8b 85 7c f7 ff ff 	mov    r8d,DWORD PTR [rbp-0x884]
    94e4:	48 8b bd 88 f7 ff ff 	mov    rdi,QWORD PTR [rbp-0x878]
    94eb:	48 8b 8d 90 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x870]
    94f2:	48 8d 95 b0 f7 ff ff 	lea    rdx,[rbp-0x850]
    94f9:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    9500:	8b b5 78 f7 ff ff    	mov    esi,DWORD PTR [rbp-0x888]
    9506:	56                   	push   rsi
    9507:	ff b5 80 f7 ff ff    	push   QWORD PTR [rbp-0x880]
    950d:	45 89 c1             	mov    r9d,r8d
    9510:	49 89 f8             	mov    r8,rdi
    9513:	48 8d 35 7c 45 00 00 	lea    rsi,[rip+0x457c]        # da96 <_IO_stdin_used+0x1a96>
    951a:	48 89 c7             	mov    rdi,rax
    951d:	b8 00 00 00 00       	mov    eax,0x0
    9522:	e8 89 91 ff ff       	call   26b0 <sprintf@plt>
    9527:	48 83 c4 10          	add    rsp,0x10
    952b:	48 8b 95 a8 f7 ff ff 	mov    rdx,QWORD PTR [rbp-0x858]
    9532:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    9539:	48 89 d6             	mov    rsi,rdx
    953c:	48 89 c7             	mov    rdi,rax
    953f:	e8 ec 91 ff ff       	call   2730 <fputs@plt>
    9544:	48 8b 85 a8 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x858]
    954b:	48 89 c7             	mov    rdi,rax
    954e:	e8 0d 93 ff ff       	call   2860 <fclose@plt>
    9553:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9557:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    955e:	00 00 
    9560:	74 05                	je     9567 <lfprintf+0x170>
    9562:	e8 79 92 ff ff       	call   27e0 <__stack_chk_fail@plt>
    9567:	c9                   	leave  
    9568:	c3                   	ret    

0000000000009569 <saprintf>:
    9569:	f3 0f 1e fa          	endbr64 
    956d:	55                   	push   rbp
    956e:	48 89 e5             	mov    rbp,rsp
    9571:	48 83 ec 20          	sub    rsp,0x20
    9575:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    9579:	48 8b 05 b0 7a 00 00 	mov    rax,QWORD PTR [rip+0x7ab0]        # 11030 <def_log_file>
    9580:	48 8d 35 c9 44 00 00 	lea    rsi,[rip+0x44c9]        # da50 <_IO_stdin_used+0x1a50>
    9587:	48 89 c7             	mov    rdi,rax
    958a:	e8 41 90 ff ff       	call   25d0 <fopen@plt>
    958f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9593:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    9598:	75 1a                	jne    95b4 <saprintf+0x4b>
    959a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    959e:	48 89 c6             	mov    rsi,rax
    95a1:	48 8d 3d b0 44 00 00 	lea    rdi,[rip+0x44b0]        # da58 <_IO_stdin_used+0x1a58>
    95a8:	b8 00 00 00 00       	mov    eax,0x0
    95ad:	e8 2e 8f ff ff       	call   24e0 <printf@plt>
    95b2:	eb 1f                	jmp    95d3 <saprintf+0x6a>
    95b4:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    95b8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    95bc:	48 89 d6             	mov    rsi,rdx
    95bf:	48 89 c7             	mov    rdi,rax
    95c2:	e8 69 91 ff ff       	call   2730 <fputs@plt>
    95c7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    95cb:	48 89 c7             	mov    rdi,rax
    95ce:	e8 8d 92 ff ff       	call   2860 <fclose@plt>
    95d3:	c9                   	leave  
    95d4:	c3                   	ret    

00000000000095d5 <substr>:
    95d5:	f3 0f 1e fa          	endbr64 
    95d9:	55                   	push   rbp
    95da:	48 89 e5             	mov    rbp,rsp
    95dd:	48 83 ec 20          	sub    rsp,0x20
    95e1:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    95e5:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    95e8:	89 55 e0             	mov    DWORD PTR [rbp-0x20],edx
    95eb:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
    95ee:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    95f1:	83 c0 02             	add    eax,0x2
    95f4:	48 98                	cdqe   
    95f6:	48 89 c7             	mov    rdi,rax
    95f9:	e8 c2 8f ff ff       	call   25c0 <malloc@plt>
    95fe:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9602:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    9605:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    9608:	eb 27                	jmp    9631 <substr+0x5c>
    960a:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    960d:	48 63 d0             	movsxd rdx,eax
    9610:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9614:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    9618:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    961b:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    961e:	48 63 d0             	movsxd rdx,eax
    9621:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9625:	48 01 c2             	add    rdx,rax
    9628:	0f b6 01             	movzx  eax,BYTE PTR [rcx]
    962b:	88 02                	mov    BYTE PTR [rdx],al
    962d:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    9631:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    9634:	3b 45 e0             	cmp    eax,DWORD PTR [rbp-0x20]
    9637:	7e d1                	jle    960a <substr+0x35>
    9639:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
    963c:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    963f:	48 98                	cdqe   
    9641:	48 8d 50 01          	lea    rdx,[rax+0x1]
    9645:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9649:	48 01 d0             	add    rax,rdx
    964c:	c6 00 00             	mov    BYTE PTR [rax],0x0
    964f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9653:	c9                   	leave  
    9654:	c3                   	ret    

0000000000009655 <delimit>:
    9655:	f3 0f 1e fa          	endbr64 
    9659:	55                   	push   rbp
    965a:	48 89 e5             	mov    rbp,rsp
    965d:	89 f8                	mov    eax,edi
    965f:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
    9662:	80 7d fc 20          	cmp    BYTE PTR [rbp-0x4],0x20
    9666:	0f 94 c0             	sete   al
    9669:	5d                   	pop    rbp
    966a:	c3                   	ret    

000000000000966b <isdigit>:
    966b:	f3 0f 1e fa          	endbr64 
    966f:	55                   	push   rbp
    9670:	48 89 e5             	mov    rbp,rsp
    9673:	53                   	push   rbx
    9674:	48 83 ec 28          	sub    rsp,0x28
    9678:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    967c:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    9683:	e9 f7 00 00 00       	jmp    977f <isdigit+0x114>
    9688:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    968b:	48 63 d0             	movsxd rdx,eax
    968e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9692:	48 01 d0             	add    rax,rdx
    9695:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9698:	3c 30                	cmp    al,0x30
    969a:	0f 84 db 00 00 00    	je     977b <isdigit+0x110>
    96a0:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    96a3:	48 63 d0             	movsxd rdx,eax
    96a6:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    96aa:	48 01 d0             	add    rax,rdx
    96ad:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    96b0:	3c 31                	cmp    al,0x31
    96b2:	0f 84 c3 00 00 00    	je     977b <isdigit+0x110>
    96b8:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    96bb:	48 63 d0             	movsxd rdx,eax
    96be:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    96c2:	48 01 d0             	add    rax,rdx
    96c5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    96c8:	3c 32                	cmp    al,0x32
    96ca:	0f 84 ab 00 00 00    	je     977b <isdigit+0x110>
    96d0:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    96d3:	48 63 d0             	movsxd rdx,eax
    96d6:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    96da:	48 01 d0             	add    rax,rdx
    96dd:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    96e0:	3c 33                	cmp    al,0x33
    96e2:	0f 84 93 00 00 00    	je     977b <isdigit+0x110>
    96e8:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    96eb:	48 63 d0             	movsxd rdx,eax
    96ee:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    96f2:	48 01 d0             	add    rax,rdx
    96f5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    96f8:	3c 34                	cmp    al,0x34
    96fa:	74 7f                	je     977b <isdigit+0x110>
    96fc:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    96ff:	48 63 d0             	movsxd rdx,eax
    9702:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9706:	48 01 d0             	add    rax,rdx
    9709:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    970c:	3c 34                	cmp    al,0x34
    970e:	74 6b                	je     977b <isdigit+0x110>
    9710:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9713:	48 63 d0             	movsxd rdx,eax
    9716:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    971a:	48 01 d0             	add    rax,rdx
    971d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9720:	3c 35                	cmp    al,0x35
    9722:	74 57                	je     977b <isdigit+0x110>
    9724:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9727:	48 63 d0             	movsxd rdx,eax
    972a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    972e:	48 01 d0             	add    rax,rdx
    9731:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9734:	3c 36                	cmp    al,0x36
    9736:	74 43                	je     977b <isdigit+0x110>
    9738:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    973b:	48 63 d0             	movsxd rdx,eax
    973e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9742:	48 01 d0             	add    rax,rdx
    9745:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9748:	3c 37                	cmp    al,0x37
    974a:	74 2f                	je     977b <isdigit+0x110>
    974c:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    974f:	48 63 d0             	movsxd rdx,eax
    9752:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9756:	48 01 d0             	add    rax,rdx
    9759:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    975c:	3c 38                	cmp    al,0x38
    975e:	74 1b                	je     977b <isdigit+0x110>
    9760:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9763:	48 63 d0             	movsxd rdx,eax
    9766:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    976a:	48 01 d0             	add    rax,rdx
    976d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9770:	3c 39                	cmp    al,0x39
    9772:	74 07                	je     977b <isdigit+0x110>
    9774:	b8 00 00 00 00       	mov    eax,0x0
    9779:	eb 24                	jmp    979f <isdigit+0x134>
    977b:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    977f:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9782:	48 63 d8             	movsxd rbx,eax
    9785:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9789:	48 89 c7             	mov    rdi,rax
    978c:	e8 df 8e ff ff       	call   2670 <strlen@plt>
    9791:	48 39 c3             	cmp    rbx,rax
    9794:	0f 82 ee fe ff ff    	jb     9688 <isdigit+0x1d>
    979a:	b8 01 00 00 00       	mov    eax,0x1
    979f:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    97a3:	c9                   	leave  
    97a4:	c3                   	ret    

00000000000097a5 <assign_port_number>:
    97a5:	f3 0f 1e fa          	endbr64 
    97a9:	55                   	push   rbp
    97aa:	48 89 e5             	mov    rbp,rsp
    97ad:	48 83 ec 10          	sub    rsp,0x10
    97b1:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    97b5:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    97b9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    97bd:	48 89 c7             	mov    rdi,rax
    97c0:	e8 a6 fe ff ff       	call   966b <isdigit>
    97c5:	84 c0                	test   al,al
    97c7:	74 18                	je     97e1 <assign_port_number+0x3c>
    97c9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    97cd:	48 89 c7             	mov    rdi,rax
    97d0:	e8 8b 8f ff ff       	call   2760 <atoi@plt>
    97d5:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    97d9:	89 82 44 01 00 00    	mov    DWORD PTR [rdx+0x144],eax
    97df:	eb 25                	jmp    9806 <assign_port_number+0x61>
    97e1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    97e5:	48 8d 35 c4 42 00 00 	lea    rsi,[rip+0x42c4]        # dab0 <_IO_stdin_used+0x1ab0>
    97ec:	48 89 c7             	mov    rdi,rax
    97ef:	e8 fc 8f ff ff       	call   27f0 <strcmp@plt>
    97f4:	85 c0                	test   eax,eax
    97f6:	75 0e                	jne    9806 <assign_port_number+0x61>
    97f8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    97fc:	c7 80 44 01 00 00 ff 	mov    DWORD PTR [rax+0x144],0xffffffff
    9803:	ff ff ff 
    9806:	90                   	nop
    9807:	c9                   	leave  
    9808:	c3                   	ret    

0000000000009809 <check_port_number>:
    9809:	f3 0f 1e fa          	endbr64 
    980d:	55                   	push   rbp
    980e:	48 89 e5             	mov    rbp,rsp
    9811:	48 83 ec 10          	sub    rsp,0x10
    9815:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9819:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    981d:	48 89 c7             	mov    rdi,rax
    9820:	e8 46 fe ff ff       	call   966b <isdigit>
    9825:	84 c0                	test   al,al
    9827:	74 0e                	je     9837 <check_port_number+0x2e>
    9829:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    982d:	48 89 c7             	mov    rdi,rax
    9830:	e8 2b 8f ff ff       	call   2760 <atoi@plt>
    9835:	eb 23                	jmp    985a <check_port_number+0x51>
    9837:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    983b:	48 8d 35 6e 42 00 00 	lea    rsi,[rip+0x426e]        # dab0 <_IO_stdin_used+0x1ab0>
    9842:	48 89 c7             	mov    rdi,rax
    9845:	e8 a6 8f ff ff       	call   27f0 <strcmp@plt>
    984a:	85 c0                	test   eax,eax
    984c:	75 07                	jne    9855 <check_port_number+0x4c>
    984e:	b8 ff ff ff ff       	mov    eax,0xffffffff
    9853:	eb 05                	jmp    985a <check_port_number+0x51>
    9855:	b8 ff ff ff ff       	mov    eax,0xffffffff
    985a:	c9                   	leave  
    985b:	c3                   	ret    

000000000000985c <assign_protocol>:
    985c:	f3 0f 1e fa          	endbr64 
    9860:	55                   	push   rbp
    9861:	48 89 e5             	mov    rbp,rsp
    9864:	48 83 ec 10          	sub    rsp,0x10
    9868:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    986c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    9870:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9874:	48 8d 35 39 42 00 00 	lea    rsi,[rip+0x4239]        # dab4 <_IO_stdin_used+0x1ab4>
    987b:	48 89 c7             	mov    rdi,rax
    987e:	e8 6d 8f ff ff       	call   27f0 <strcmp@plt>
    9883:	85 c0                	test   eax,eax
    9885:	75 10                	jne    9897 <assign_protocol+0x3b>
    9887:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    988b:	c7 80 40 01 00 00 ff 	mov    DWORD PTR [rax+0x140],0xffffffff
    9892:	ff ff ff 
    9895:	eb 73                	jmp    990a <assign_protocol+0xae>
    9897:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    989b:	48 8d 35 16 42 00 00 	lea    rsi,[rip+0x4216]        # dab8 <_IO_stdin_used+0x1ab8>
    98a2:	48 89 c7             	mov    rdi,rax
    98a5:	e8 46 8f ff ff       	call   27f0 <strcmp@plt>
    98aa:	85 c0                	test   eax,eax
    98ac:	75 10                	jne    98be <assign_protocol+0x62>
    98ae:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    98b2:	c7 80 40 01 00 00 80 	mov    DWORD PTR [rax+0x140],0x80
    98b9:	00 00 00 
    98bc:	eb 4c                	jmp    990a <assign_protocol+0xae>
    98be:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    98c2:	48 8d 35 f4 41 00 00 	lea    rsi,[rip+0x41f4]        # dabd <_IO_stdin_used+0x1abd>
    98c9:	48 89 c7             	mov    rdi,rax
    98cc:	e8 1f 8f ff ff       	call   27f0 <strcmp@plt>
    98d1:	85 c0                	test   eax,eax
    98d3:	75 10                	jne    98e5 <assign_protocol+0x89>
    98d5:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    98d9:	c7 80 40 01 00 00 7e 	mov    DWORD PTR [rax+0x140],0x7e
    98e0:	00 00 00 
    98e3:	eb 25                	jmp    990a <assign_protocol+0xae>
    98e5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    98e9:	48 8d 35 d1 41 00 00 	lea    rsi,[rip+0x41d1]        # dac1 <_IO_stdin_used+0x1ac1>
    98f0:	48 89 c7             	mov    rdi,rax
    98f3:	e8 f8 8e ff ff       	call   27f0 <strcmp@plt>
    98f8:	85 c0                	test   eax,eax
    98fa:	75 0e                	jne    990a <assign_protocol+0xae>
    98fc:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9900:	c7 80 40 01 00 00 7f 	mov    DWORD PTR [rax+0x140],0x7f
    9907:	00 00 00 
    990a:	90                   	nop
    990b:	c9                   	leave  
    990c:	c3                   	ret    

000000000000990d <get_ruletype>:
    990d:	f3 0f 1e fa          	endbr64 
    9911:	55                   	push   rbp
    9912:	48 89 e5             	mov    rbp,rsp
    9915:	48 83 ec 10          	sub    rsp,0x10
    9919:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    991d:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    9921:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9925:	ba 09 00 00 00       	mov    edx,0x9
    992a:	48 8d 35 94 41 00 00 	lea    rsi,[rip+0x4194]        # dac5 <_IO_stdin_used+0x1ac5>
    9931:	48 89 c7             	mov    rdi,rax
    9934:	e8 77 8c ff ff       	call   25b0 <strncmp@plt>
    9939:	85 c0                	test   eax,eax
    993b:	75 17                	jne    9954 <get_ruletype+0x47>
    993d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9941:	48 8d 15 8c bd ff ff 	lea    rdx,[rip+0xffffffffffffbd8c]        # 56d4 <str_match_parser>
    9948:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    994f:	e9 82 00 00 00       	jmp    99d6 <get_ruletype+0xc9>
    9954:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9958:	ba 04 00 00 00       	mov    edx,0x4
    995d:	48 8d 35 6b 41 00 00 	lea    rsi,[rip+0x416b]        # dacf <_IO_stdin_used+0x1acf>
    9964:	48 89 c7             	mov    rdi,rax
    9967:	e8 44 8c ff ff       	call   25b0 <strncmp@plt>
    996c:	85 c0                	test   eax,eax
    996e:	75 14                	jne    9984 <get_ruletype+0x77>
    9970:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9974:	48 8d 15 fc bf ff ff 	lea    rdx,[rip+0xffffffffffffbffc]        # 5977 <none>
    997b:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    9982:	eb 52                	jmp    99d6 <get_ruletype+0xc9>
    9984:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9988:	ba 04 00 00 00       	mov    edx,0x4
    998d:	48 8d 35 40 41 00 00 	lea    rsi,[rip+0x4140]        # dad4 <_IO_stdin_used+0x1ad4>
    9994:	48 89 c7             	mov    rdi,rax
    9997:	e8 14 8c ff ff       	call   25b0 <strncmp@plt>
    999c:	85 c0                	test   eax,eax
    999e:	75 14                	jne    99b4 <get_ruletype+0xa7>
    99a0:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    99a4:	48 8d 15 e3 bf ff ff 	lea    rdx,[rip+0xffffffffffffbfe3]        # 598e <pcre_match>
    99ab:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    99b2:	eb 22                	jmp    99d6 <get_ruletype+0xc9>
    99b4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    99b8:	48 89 c6             	mov    rsi,rax
    99bb:	48 8d 3d 17 41 00 00 	lea    rdi,[rip+0x4117]        # dad9 <_IO_stdin_used+0x1ad9>
    99c2:	b8 00 00 00 00       	mov    eax,0x0
    99c7:	e8 14 8b ff ff       	call   24e0 <printf@plt>
    99cc:	bf 01 00 00 00       	mov    edi,0x1
    99d1:	e8 8a 8b ff ff       	call   2560 <exit@plt>
    99d6:	c9                   	leave  
    99d7:	c3                   	ret    

00000000000099d8 <numeric_check>:
    99d8:	f3 0f 1e fa          	endbr64 
    99dc:	55                   	push   rbp
    99dd:	48 89 e5             	mov    rbp,rsp
    99e0:	48 83 ec 30          	sub    rsp,0x30
    99e4:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    99e8:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    99eb:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    99ef:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    99f3:	48 89 c7             	mov    rdi,rax
    99f6:	e8 70 fc ff ff       	call   966b <isdigit>
    99fb:	84 c0                	test   al,al
    99fd:	74 27                	je     9a26 <numeric_check+0x4e>
    99ff:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9a03:	48 89 c7             	mov    rdi,rax
    9a06:	e8 55 8d ff ff       	call   2760 <atoi@plt>
    9a0b:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
    9a0e:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    9a11:	39 45 e4             	cmp    DWORD PTR [rbp-0x1c],eax
    9a14:	77 10                	ja     9a26 <numeric_check+0x4e>
    9a16:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    9a19:	48 98                	cdqe   
    9a1b:	48 39 45 d8          	cmp    QWORD PTR [rbp-0x28],rax
    9a1f:	72 05                	jb     9a26 <numeric_check+0x4e>
    9a21:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    9a24:	eb 05                	jmp    9a2b <numeric_check+0x53>
    9a26:	b8 ff ff ff ff       	mov    eax,0xffffffff
    9a2b:	c9                   	leave  
    9a2c:	c3                   	ret    

0000000000009a2d <sc_strip>:
    9a2d:	f3 0f 1e fa          	endbr64 
    9a31:	55                   	push   rbp
    9a32:	48 89 e5             	mov    rbp,rsp
    9a35:	48 83 ec 10          	sub    rsp,0x10
    9a39:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9a3d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9a41:	48 8d 35 a8 40 00 00 	lea    rsi,[rip+0x40a8]        # daf0 <_IO_stdin_used+0x1af0>
    9a48:	48 89 c7             	mov    rdi,rax
    9a4b:	e8 40 8e ff ff       	call   2890 <strcspn@plt>
    9a50:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    9a54:	48 01 d0             	add    rax,rdx
    9a57:	c6 00 00             	mov    BYTE PTR [rax],0x0
    9a5a:	90                   	nop
    9a5b:	c9                   	leave  
    9a5c:	c3                   	ret    

0000000000009a5d <void_rule>:
    9a5d:	f3 0f 1e fa          	endbr64 
    9a61:	55                   	push   rbp
    9a62:	48 89 e5             	mov    rbp,rsp
    9a65:	48 83 ec 10          	sub    rsp,0x10
    9a69:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9a6d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9a71:	48 05 6e 03 00 00    	add    rax,0x36e
    9a77:	ba 0a 00 00 00       	mov    edx,0xa
    9a7c:	be 00 00 00 00       	mov    esi,0x0
    9a81:	48 89 c7             	mov    rdi,rax
    9a84:	e8 67 8a ff ff       	call   24f0 <memset@plt>
    9a89:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9a8d:	48 05 68 03 00 00    	add    rax,0x368
    9a93:	ba 06 00 00 00       	mov    edx,0x6
    9a98:	be 00 00 00 00       	mov    esi,0x0
    9a9d:	48 89 c7             	mov    rdi,rax
    9aa0:	e8 4b 8a ff ff       	call   24f0 <memset@plt>
    9aa5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9aa9:	48 05 50 03 00 00    	add    rax,0x350
    9aaf:	ba 18 00 00 00       	mov    edx,0x18
    9ab4:	be 00 00 00 00       	mov    esi,0x0
    9ab9:	48 89 c7             	mov    rdi,rax
    9abc:	e8 2f 8a ff ff       	call   24f0 <memset@plt>
    9ac1:	90                   	nop
    9ac2:	c9                   	leave  
    9ac3:	c3                   	ret    

0000000000009ac4 <line_parser>:
    9ac4:	f3 0f 1e fa          	endbr64 
    9ac8:	55                   	push   rbp
    9ac9:	48 89 e5             	mov    rbp,rsp
    9acc:	53                   	push   rbx
    9acd:	48 81 ec 98 00 00 00 	sub    rsp,0x98
    9ad4:	48 89 bd 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rdi
    9adb:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9ae2:	00 00 
    9ae4:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    9ae8:	31 c0                	xor    eax,eax
    9aea:	8b 05 24 75 00 00    	mov    eax,DWORD PTR [rip+0x7524]        # 11014 <num_rules>
    9af0:	83 c0 01             	add    eax,0x1
    9af3:	89 05 1b 75 00 00    	mov    DWORD PTR [rip+0x751b],eax        # 11014 <num_rules>
    9af9:	8b 05 15 75 00 00    	mov    eax,DWORD PTR [rip+0x7515]        # 11014 <num_rules>
    9aff:	48 98                	cdqe   
    9b01:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    9b08:	48 8d 15 d1 77 00 00 	lea    rdx,[rip+0x77d1]        # 112e0 <rules>
    9b0f:	48 01 d0             	add    rax,rdx
    9b12:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    9b16:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9b1a:	ba 08 00 00 00       	mov    edx,0x8
    9b1f:	be 00 00 00 00       	mov    esi,0x0
    9b24:	48 89 c7             	mov    rdi,rax
    9b27:	e8 c4 89 ff ff       	call   24f0 <memset@plt>
    9b2c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9b30:	c7 80 44 01 00 00 ff 	mov    DWORD PTR [rax+0x144],0xffffffff
    9b37:	ff ff ff 
    9b3a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9b3e:	c7 80 40 01 00 00 ff 	mov    DWORD PTR [rax+0x140],0xffffffff
    9b45:	ff ff ff 
    9b48:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9b4c:	c7 40 1c ff ff ff ff 	mov    DWORD PTR [rax+0x1c],0xffffffff
    9b53:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9b57:	c7 40 18 ff ff ff ff 	mov    DWORD PTR [rax+0x18],0xffffffff
    9b5e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9b62:	c7 40 10 ff ff ff ff 	mov    DWORD PTR [rax+0x10],0xffffffff
    9b69:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9b6d:	c7 80 4c 03 00 00 00 	mov    DWORD PTR [rax+0x34c],0x0
    9b74:	00 00 00 
    9b77:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9b7b:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
    9b81:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9b85:	c7 40 04 00 00 00 00 	mov    DWORD PTR [rax+0x4],0x0
    9b8c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9b90:	48 89 c7             	mov    rdi,rax
    9b93:	e8 c5 fe ff ff       	call   9a5d <void_rule>
    9b98:	c7 45 88 00 00 00 00 	mov    DWORD PTR [rbp-0x78],0x0
    9b9f:	c6 85 7c ff ff ff 00 	mov    BYTE PTR [rbp-0x84],0x0
    9ba6:	c7 45 80 00 00 00 00 	mov    DWORD PTR [rbp-0x80],0x0
    9bad:	c7 45 84 00 00 00 00 	mov    DWORD PTR [rbp-0x7c],0x0
    9bb4:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9bbb:	48 89 c7             	mov    rdi,rax
    9bbe:	e8 ad 8a ff ff       	call   2670 <strlen@plt>
    9bc3:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    9bc6:	c6 85 7d ff ff ff 00 	mov    BYTE PTR [rbp-0x83],0x0
    9bcd:	c6 85 7e ff ff ff 00 	mov    BYTE PTR [rbp-0x82],0x0
    9bd4:	c6 85 7f ff ff ff 00 	mov    BYTE PTR [rbp-0x81],0x0
    9bdb:	e9 c4 0d 00 00       	jmp    a9a4 <line_parser+0xee0>
    9be0:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9be3:	48 63 d0             	movsxd rdx,eax
    9be6:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9bed:	48 01 d0             	add    rax,rdx
    9bf0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9bf3:	0f be c0             	movsx  eax,al
    9bf6:	89 c7                	mov    edi,eax
    9bf8:	e8 58 fa ff ff       	call   9655 <delimit>
    9bfd:	83 f0 01             	xor    eax,0x1
    9c00:	84 c0                	test   al,al
    9c02:	74 04                	je     9c08 <line_parser+0x144>
    9c04:	83 45 84 01          	add    DWORD PTR [rbp-0x7c],0x1
    9c08:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9c0b:	48 63 d0             	movsxd rdx,eax
    9c0e:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9c15:	48 01 d0             	add    rax,rdx
    9c18:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9c1b:	0f be c0             	movsx  eax,al
    9c1e:	89 c7                	mov    edi,eax
    9c20:	e8 30 fa ff ff       	call   9655 <delimit>
    9c25:	84 c0                	test   al,al
    9c27:	74 3f                	je     9c68 <line_parser+0x1a4>
    9c29:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9c2c:	3b 45 80             	cmp    eax,DWORD PTR [rbp-0x80]
    9c2f:	75 37                	jne    9c68 <line_parser+0x1a4>
    9c31:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9c34:	48 63 d0             	movsxd rdx,eax
    9c37:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9c3e:	48 01 d0             	add    rax,rdx
    9c41:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9c44:	3c 3a                	cmp    al,0x3a
    9c46:	75 11                	jne    9c59 <line_parser+0x195>
    9c48:	48 8d 3d a3 3e 00 00 	lea    rdi,[rip+0x3ea3]        # daf2 <_IO_stdin_used+0x1af2>
    9c4f:	b8 00 00 00 00       	mov    eax,0x0
    9c54:	e8 87 88 ff ff       	call   24e0 <printf@plt>
    9c59:	83 45 84 01          	add    DWORD PTR [rbp-0x7c],0x1
    9c5d:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9c60:	89 45 80             	mov    DWORD PTR [rbp-0x80],eax
    9c63:	e9 3c 0d 00 00       	jmp    a9a4 <line_parser+0xee0>
    9c68:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9c6b:	48 63 d0             	movsxd rdx,eax
    9c6e:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9c75:	48 01 d0             	add    rax,rdx
    9c78:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9c7b:	0f be c0             	movsx  eax,al
    9c7e:	89 c7                	mov    edi,eax
    9c80:	e8 d0 f9 ff ff       	call   9655 <delimit>
    9c85:	84 c0                	test   al,al
    9c87:	74 08                	je     9c91 <line_parser+0x1cd>
    9c89:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
    9c8c:	3b 45 84             	cmp    eax,DWORD PTR [rbp-0x7c]
    9c8f:	75 18                	jne    9ca9 <line_parser+0x1e5>
    9c91:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9c94:	3b 45 8c             	cmp    eax,DWORD PTR [rbp-0x74]
    9c97:	0f 85 07 0d 00 00    	jne    a9a4 <line_parser+0xee0>
    9c9d:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
    9ca0:	3b 45 84             	cmp    eax,DWORD PTR [rbp-0x7c]
    9ca3:	0f 84 fb 0c 00 00    	je     a9a4 <line_parser+0xee0>
    9ca9:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9cac:	8d 50 ff             	lea    edx,[rax-0x1]
    9caf:	8b 4d 80             	mov    ecx,DWORD PTR [rbp-0x80]
    9cb2:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9cb9:	89 ce                	mov    esi,ecx
    9cbb:	48 89 c7             	mov    rdi,rax
    9cbe:	e8 12 f9 ff ff       	call   95d5 <substr>
    9cc3:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    9cc7:	0f b6 85 7c ff ff ff 	movzx  eax,BYTE PTR [rbp-0x84]
    9cce:	83 f0 01             	xor    eax,0x1
    9cd1:	84 c0                	test   al,al
    9cd3:	0f 84 ea 02 00 00    	je     9fc3 <line_parser+0x4ff>
    9cd9:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9cdd:	48 8d 35 1d 3e 00 00 	lea    rsi,[rip+0x3e1d]        # db01 <_IO_stdin_used+0x1b01>
    9ce4:	48 89 c7             	mov    rdi,rax
    9ce7:	e8 04 8b ff ff       	call   27f0 <strcmp@plt>
    9cec:	85 c0                	test   eax,eax
    9cee:	75 33                	jne    9d23 <line_parser+0x25f>
    9cf0:	0f b6 85 7d ff ff ff 	movzx  eax,BYTE PTR [rbp-0x83]
    9cf7:	83 f0 01             	xor    eax,0x1
    9cfa:	84 c0                	test   al,al
    9cfc:	74 25                	je     9d23 <line_parser+0x25f>
    9cfe:	0f b6 85 7e ff ff ff 	movzx  eax,BYTE PTR [rbp-0x82]
    9d05:	83 f0 01             	xor    eax,0x1
    9d08:	84 c0                	test   al,al
    9d0a:	74 17                	je     9d23 <line_parser+0x25f>
    9d0c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9d10:	48 8d 15 93 b7 ff ff 	lea    rdx,[rip+0xffffffffffffb793]        # 54aa <stdout_alert>
    9d17:	48 89 90 80 03 00 00 	mov    QWORD PTR [rax+0x380],rdx
    9d1e:	e9 5d 0c 00 00       	jmp    a980 <line_parser+0xebc>
    9d23:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9d27:	48 8d 35 8a 3d 00 00 	lea    rsi,[rip+0x3d8a]        # dab8 <_IO_stdin_used+0x1ab8>
    9d2e:	48 89 c7             	mov    rdi,rax
    9d31:	e8 ba 8a ff ff       	call   27f0 <strcmp@plt>
    9d36:	85 c0                	test   eax,eax
    9d38:	74 45                	je     9d7f <line_parser+0x2bb>
    9d3a:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9d3e:	48 8d 35 6f 3d 00 00 	lea    rsi,[rip+0x3d6f]        # dab4 <_IO_stdin_used+0x1ab4>
    9d45:	48 89 c7             	mov    rdi,rax
    9d48:	e8 a3 8a ff ff       	call   27f0 <strcmp@plt>
    9d4d:	85 c0                	test   eax,eax
    9d4f:	74 2e                	je     9d7f <line_parser+0x2bb>
    9d51:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9d55:	48 8d 35 61 3d 00 00 	lea    rsi,[rip+0x3d61]        # dabd <_IO_stdin_used+0x1abd>
    9d5c:	48 89 c7             	mov    rdi,rax
    9d5f:	e8 8c 8a ff ff       	call   27f0 <strcmp@plt>
    9d64:	85 c0                	test   eax,eax
    9d66:	74 17                	je     9d7f <line_parser+0x2bb>
    9d68:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9d6c:	48 8d 35 4e 3d 00 00 	lea    rsi,[rip+0x3d4e]        # dac1 <_IO_stdin_used+0x1ac1>
    9d73:	48 89 c7             	mov    rdi,rax
    9d76:	e8 75 8a ff ff       	call   27f0 <strcmp@plt>
    9d7b:	85 c0                	test   eax,eax
    9d7d:	75 34                	jne    9db3 <line_parser+0x2ef>
    9d7f:	0f b6 85 7e ff ff ff 	movzx  eax,BYTE PTR [rbp-0x82]
    9d86:	83 f0 01             	xor    eax,0x1
    9d89:	84 c0                	test   al,al
    9d8b:	74 26                	je     9db3 <line_parser+0x2ef>
    9d8d:	0f b6 85 7d ff ff ff 	movzx  eax,BYTE PTR [rbp-0x83]
    9d94:	83 f0 01             	xor    eax,0x1
    9d97:	84 c0                	test   al,al
    9d99:	74 18                	je     9db3 <line_parser+0x2ef>
    9d9b:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9d9f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9da3:	48 89 d6             	mov    rsi,rdx
    9da6:	48 89 c7             	mov    rdi,rax
    9da9:	e8 ae fa ff ff       	call   985c <assign_protocol>
    9dae:	e9 cd 0b 00 00       	jmp    a980 <line_parser+0xebc>
    9db3:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9db7:	48 89 c7             	mov    rdi,rax
    9dba:	e8 ac f8 ff ff       	call   966b <isdigit>
    9dbf:	84 c0                	test   al,al
    9dc1:	75 17                	jne    9dda <line_parser+0x316>
    9dc3:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9dc7:	48 8d 35 e2 3c 00 00 	lea    rsi,[rip+0x3ce2]        # dab0 <_IO_stdin_used+0x1ab0>
    9dce:	48 89 c7             	mov    rdi,rax
    9dd1:	e8 1a 8a ff ff       	call   27f0 <strcmp@plt>
    9dd6:	85 c0                	test   eax,eax
    9dd8:	75 34                	jne    9e0e <line_parser+0x34a>
    9dda:	0f b6 85 7d ff ff ff 	movzx  eax,BYTE PTR [rbp-0x83]
    9de1:	83 f0 01             	xor    eax,0x1
    9de4:	84 c0                	test   al,al
    9de6:	74 26                	je     9e0e <line_parser+0x34a>
    9de8:	0f b6 85 7e ff ff ff 	movzx  eax,BYTE PTR [rbp-0x82]
    9def:	83 f0 01             	xor    eax,0x1
    9df2:	84 c0                	test   al,al
    9df4:	74 18                	je     9e0e <line_parser+0x34a>
    9df6:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9dfa:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9dfe:	48 89 d6             	mov    rsi,rdx
    9e01:	48 89 c7             	mov    rdi,rax
    9e04:	e8 9c f9 ff ff       	call   97a5 <assign_port_number>
    9e09:	e9 72 0b 00 00       	jmp    a980 <line_parser+0xebc>
    9e0e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9e12:	ba 08 00 00 00       	mov    edx,0x8
    9e17:	48 8d 35 e9 3c 00 00 	lea    rsi,[rip+0x3ce9]        # db07 <_IO_stdin_used+0x1b07>
    9e1e:	48 89 c7             	mov    rdi,rax
    9e21:	e8 8a 87 ff ff       	call   25b0 <strncmp@plt>
    9e26:	85 c0                	test   eax,eax
    9e28:	75 75                	jne    9e9f <line_parser+0x3db>
    9e2a:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9e2e:	48 8d 50 09          	lea    rdx,[rax+0x9]
    9e32:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9e36:	48 89 d6             	mov    rsi,rdx
    9e39:	48 89 c7             	mov    rdi,rax
    9e3c:	e8 df 89 ff ff       	call   2820 <strcpy@plt>
    9e41:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9e45:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    9e48:	85 c0                	test   eax,eax
    9e4a:	75 2e                	jne    9e7a <line_parser+0x3b6>
    9e4c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9e50:	8b 00                	mov    eax,DWORD PTR [rax]
    9e52:	85 c0                	test   eax,eax
    9e54:	75 24                	jne    9e7a <line_parser+0x3b6>
    9e56:	8b 15 68 01 10 00    	mov    edx,DWORD PTR [rip+0x100168]        # 109fc4 <homenet>
    9e5c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9e60:	89 10                	mov    DWORD PTR [rax],edx
    9e62:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9e66:	48 89 c7             	mov    rdi,rax
    9e69:	e8 9b f9 ff ff       	call   9809 <check_port_number>
    9e6e:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9e72:	89 42 0c             	mov    DWORD PTR [rdx+0xc],eax
    9e75:	e9 06 0b 00 00       	jmp    a980 <line_parser+0xebc>
    9e7a:	8b 15 44 01 10 00    	mov    edx,DWORD PTR [rip+0x100144]        # 109fc4 <homenet>
    9e80:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9e84:	89 50 04             	mov    DWORD PTR [rax+0x4],edx
    9e87:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9e8b:	48 89 c7             	mov    rdi,rax
    9e8e:	e8 76 f9 ff ff       	call   9809 <check_port_number>
    9e93:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9e97:	89 42 08             	mov    DWORD PTR [rdx+0x8],eax
    9e9a:	e9 e1 0a 00 00       	jmp    a980 <line_parser+0xebc>
    9e9f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9ea3:	48 8d 35 66 3c 00 00 	lea    rsi,[rip+0x3c66]        # db10 <_IO_stdin_used+0x1b10>
    9eaa:	48 89 c7             	mov    rdi,rax
    9ead:	e8 3e 89 ff ff       	call   27f0 <strcmp@plt>
    9eb2:	85 c0                	test   eax,eax
    9eb4:	75 30                	jne    9ee6 <line_parser+0x422>
    9eb6:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9eba:	8b 10                	mov    edx,DWORD PTR [rax]
    9ebc:	8b 05 02 01 10 00    	mov    eax,DWORD PTR [rip+0x100102]        # 109fc4 <homenet>
    9ec2:	39 c2                	cmp    edx,eax
    9ec4:	75 10                	jne    9ed6 <line_parser+0x412>
    9ec6:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9eca:	c7 40 10 45 00 00 00 	mov    DWORD PTR [rax+0x10],0x45
    9ed1:	e9 aa 0a 00 00       	jmp    a980 <line_parser+0xebc>
    9ed6:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9eda:	c7 40 10 46 00 00 00 	mov    DWORD PTR [rax+0x10],0x46
    9ee1:	e9 9a 0a 00 00       	jmp    a980 <line_parser+0xebc>
    9ee6:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9eea:	48 8d 35 22 3c 00 00 	lea    rsi,[rip+0x3c22]        # db13 <_IO_stdin_used+0x1b13>
    9ef1:	48 89 c7             	mov    rdi,rax
    9ef4:	e8 f7 88 ff ff       	call   27f0 <strcmp@plt>
    9ef9:	85 c0                	test   eax,eax
    9efb:	75 10                	jne    9f0d <line_parser+0x449>
    9efd:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9f01:	c7 40 10 47 00 00 00 	mov    DWORD PTR [rax+0x10],0x47
    9f08:	e9 73 0a 00 00       	jmp    a980 <line_parser+0xebc>
    9f0d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9f11:	ba 0c 00 00 00       	mov    edx,0xc
    9f16:	48 8d 35 f9 3b 00 00 	lea    rsi,[rip+0x3bf9]        # db16 <_IO_stdin_used+0x1b16>
    9f1d:	48 89 c7             	mov    rdi,rax
    9f20:	e8 8b 86 ff ff       	call   25b0 <strncmp@plt>
    9f25:	85 c0                	test   eax,eax
    9f27:	75 7f                	jne    9fa8 <line_parser+0x4e4>
    9f29:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9f2d:	48 8d 50 0c          	lea    rdx,[rax+0xc]
    9f31:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9f35:	48 89 d6             	mov    rsi,rdx
    9f38:	48 89 c7             	mov    rdi,rax
    9f3b:	e8 e0 88 ff ff       	call   2820 <strcpy@plt>
    9f40:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9f44:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    9f47:	85 c0                	test   eax,eax
    9f49:	75 37                	jne    9f82 <line_parser+0x4be>
    9f4b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9f4f:	8b 10                	mov    edx,DWORD PTR [rax]
    9f51:	8b 05 6d 00 10 00    	mov    eax,DWORD PTR [rip+0x10006d]        # 109fc4 <homenet>
    9f57:	39 c2                	cmp    edx,eax
    9f59:	75 27                	jne    9f82 <line_parser+0x4be>
    9f5b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9f5f:	c7 40 04 ff ff ff ff 	mov    DWORD PTR [rax+0x4],0xffffffff
    9f66:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9f6a:	48 83 c0 01          	add    rax,0x1
    9f6e:	48 89 c7             	mov    rdi,rax
    9f71:	e8 93 f8 ff ff       	call   9809 <check_port_number>
    9f76:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9f7a:	89 42 08             	mov    DWORD PTR [rdx+0x8],eax
    9f7d:	e9 fe 09 00 00       	jmp    a980 <line_parser+0xebc>
    9f82:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9f86:	c7 00 ff ff ff ff    	mov    DWORD PTR [rax],0xffffffff
    9f8c:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9f90:	48 83 c0 01          	add    rax,0x1
    9f94:	48 89 c7             	mov    rdi,rax
    9f97:	e8 6d f8 ff ff       	call   9809 <check_port_number>
    9f9c:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9fa0:	89 42 0c             	mov    DWORD PTR [rdx+0xc],eax
    9fa3:	e9 d8 09 00 00       	jmp    a980 <line_parser+0xebc>
    9fa8:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9fac:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9faf:	3c 28                	cmp    al,0x28
    9fb1:	0f 85 c9 09 00 00    	jne    a980 <line_parser+0xebc>
    9fb7:	c6 85 7c ff ff ff 01 	mov    BYTE PTR [rbp-0x84],0x1
    9fbe:	e9 e1 09 00 00       	jmp    a9a4 <line_parser+0xee0>
    9fc3:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9fc7:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9fca:	3c 28                	cmp    al,0x28
    9fcc:	75 0e                	jne    9fdc <line_parser+0x518>
    9fce:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9fd2:	48 83 c0 01          	add    rax,0x1
    9fd6:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    9fda:	eb 08                	jmp    9fe4 <line_parser+0x520>
    9fdc:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9fe0:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    9fe4:	80 bd 7d ff ff ff 00 	cmp    BYTE PTR [rbp-0x83],0x0
    9feb:	0f 84 8e 00 00 00    	je     a07f <line_parser+0x5bb>
    9ff1:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9ff5:	48 89 c7             	mov    rdi,rax
    9ff8:	e8 73 86 ff ff       	call   2670 <strlen@plt>
    9ffd:	48 8d 50 ff          	lea    rdx,[rax-0x1]
    a001:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a005:	48 01 d0             	add    rax,rdx
    a008:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    a00b:	3c 3b                	cmp    al,0x3b
    a00d:	75 36                	jne    a045 <line_parser+0x581>
    a00f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a013:	48 89 c7             	mov    rdi,rax
    a016:	e8 55 86 ff ff       	call   2670 <strlen@plt>
    a01b:	48 8d 50 fe          	lea    rdx,[rax-0x2]
    a01f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a023:	48 8d 88 50 01 00 00 	lea    rcx,[rax+0x150]
    a02a:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a02e:	48 89 c6             	mov    rsi,rax
    a031:	48 89 cf             	mov    rdi,rcx
    a034:	e8 f7 84 ff ff       	call   2530 <strncat@plt>
    a039:	c6 85 7d ff ff ff 00 	mov    BYTE PTR [rbp-0x83],0x0
    a040:	e9 5f 09 00 00       	jmp    a9a4 <line_parser+0xee0>
    a045:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a049:	48 8d 90 50 01 00 00 	lea    rdx,[rax+0x150]
    a050:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a054:	48 89 c6             	mov    rsi,rax
    a057:	48 89 d7             	mov    rdi,rdx
    a05a:	e8 c1 86 ff ff       	call   2720 <strcat@plt>
    a05f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a063:	48 8d 98 50 01 00 00 	lea    rbx,[rax+0x150]
    a06a:	48 89 df             	mov    rdi,rbx
    a06d:	e8 fe 85 ff ff       	call   2670 <strlen@plt>
    a072:	48 01 d8             	add    rax,rbx
    a075:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    a07a:	e9 01 09 00 00       	jmp    a980 <line_parser+0xebc>
    a07f:	80 bd 7e ff ff ff 00 	cmp    BYTE PTR [rbp-0x82],0x0
    a086:	74 7f                	je     a107 <line_parser+0x643>
    a088:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a08c:	48 8d 35 90 3a 00 00 	lea    rsi,[rip+0x3a90]        # db23 <_IO_stdin_used+0x1b23>
    a093:	48 89 c7             	mov    rdi,rax
    a096:	e8 75 86 ff ff       	call   2710 <strstr@plt>
    a09b:	48 85 c0             	test   rax,rax
    a09e:	74 33                	je     a0d3 <line_parser+0x60f>
    a0a0:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a0a4:	48 89 c7             	mov    rdi,rax
    a0a7:	e8 c4 85 ff ff       	call   2670 <strlen@plt>
    a0ac:	48 8d 50 fd          	lea    rdx,[rax-0x3]
    a0b0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a0b4:	48 8d 48 40          	lea    rcx,[rax+0x40]
    a0b8:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a0bc:	48 89 c6             	mov    rsi,rax
    a0bf:	48 89 cf             	mov    rdi,rcx
    a0c2:	e8 69 84 ff ff       	call   2530 <strncat@plt>
    a0c7:	c6 85 7e ff ff ff 00 	mov    BYTE PTR [rbp-0x82],0x0
    a0ce:	e9 d1 08 00 00       	jmp    a9a4 <line_parser+0xee0>
    a0d3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a0d7:	48 8d 50 40          	lea    rdx,[rax+0x40]
    a0db:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a0df:	48 89 c6             	mov    rsi,rax
    a0e2:	48 89 d7             	mov    rdi,rdx
    a0e5:	e8 36 86 ff ff       	call   2720 <strcat@plt>
    a0ea:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a0ee:	48 8d 58 40          	lea    rbx,[rax+0x40]
    a0f2:	48 89 df             	mov    rdi,rbx
    a0f5:	e8 76 85 ff ff       	call   2670 <strlen@plt>
    a0fa:	48 01 d8             	add    rax,rbx
    a0fd:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    a102:	e9 79 08 00 00       	jmp    a980 <line_parser+0xebc>
    a107:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a10b:	ba 06 00 00 00       	mov    edx,0x6
    a110:	48 8d 35 0f 3a 00 00 	lea    rsi,[rip+0x3a0f]        # db26 <_IO_stdin_used+0x1b26>
    a117:	48 89 c7             	mov    rdi,rax
    a11a:	e8 91 84 ff ff       	call   25b0 <strncmp@plt>
    a11f:	85 c0                	test   eax,eax
    a121:	75 37                	jne    a15a <line_parser+0x696>
    a123:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a127:	48 89 c7             	mov    rdi,rax
    a12a:	e8 41 85 ff ff       	call   2670 <strlen@plt>
    a12f:	48 8d 50 f8          	lea    rdx,[rax-0x8]
    a133:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a137:	48 8d 48 06          	lea    rcx,[rax+0x6]
    a13b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a13f:	48 83 c0 20          	add    rax,0x20
    a143:	48 89 ce             	mov    rsi,rcx
    a146:	48 89 c7             	mov    rdi,rax
    a149:	e8 22 87 ff ff       	call   2870 <strncpy@plt>
    a14e:	c6 85 7f ff ff ff 01 	mov    BYTE PTR [rbp-0x81],0x1
    a155:	e9 26 08 00 00       	jmp    a980 <line_parser+0xebc>
    a15a:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a15e:	ba 05 00 00 00       	mov    edx,0x5
    a163:	48 8d 35 c3 39 00 00 	lea    rsi,[rip+0x39c3]        # db2d <_IO_stdin_used+0x1b2d>
    a16a:	48 89 c7             	mov    rdi,rax
    a16d:	e8 3e 84 ff ff       	call   25b0 <strncmp@plt>
    a172:	85 c0                	test   eax,eax
    a174:	75 4d                	jne    a1c3 <line_parser+0x6ff>
    a176:	c6 85 7d ff ff ff 01 	mov    BYTE PTR [rbp-0x83],0x1
    a17d:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a181:	48 83 c0 05          	add    rax,0x5
    a185:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    a189:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a18d:	48 8d 90 50 01 00 00 	lea    rdx,[rax+0x150]
    a194:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    a198:	48 89 c6             	mov    rsi,rax
    a19b:	48 89 d7             	mov    rdi,rdx
    a19e:	e8 7d 85 ff ff       	call   2720 <strcat@plt>
    a1a3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a1a7:	48 8d 98 50 01 00 00 	lea    rbx,[rax+0x150]
    a1ae:	48 89 df             	mov    rdi,rbx
    a1b1:	e8 ba 84 ff ff       	call   2670 <strlen@plt>
    a1b6:	48 01 d8             	add    rax,rbx
    a1b9:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    a1be:	e9 bd 07 00 00       	jmp    a980 <line_parser+0xebc>
    a1c3:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a1c7:	ba 06 00 00 00       	mov    edx,0x6
    a1cc:	48 8d 35 60 39 00 00 	lea    rsi,[rip+0x3960]        # db33 <_IO_stdin_used+0x1b33>
    a1d3:	48 89 c7             	mov    rdi,rax
    a1d6:	e8 d5 83 ff ff       	call   25b0 <strncmp@plt>
    a1db:	85 c0                	test   eax,eax
    a1dd:	75 31                	jne    a210 <line_parser+0x74c>
    a1df:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a1e3:	48 89 c7             	mov    rdi,rax
    a1e6:	e8 42 f8 ff ff       	call   9a2d <sc_strip>
    a1eb:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a1ef:	48 83 c0 06          	add    rax,0x6
    a1f3:	48 89 c7             	mov    rdi,rax
    a1f6:	e8 65 85 ff ff       	call   2760 <atoi@plt>
    a1fb:	89 45 ac             	mov    DWORD PTR [rbp-0x54],eax
    a1fe:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a202:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    a205:	89 90 4c 03 00 00    	mov    DWORD PTR [rax+0x34c],edx
    a20b:	e9 70 07 00 00       	jmp    a980 <line_parser+0xebc>
    a210:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a214:	ba 05 00 00 00       	mov    edx,0x5
    a219:	48 8d 35 1a 39 00 00 	lea    rsi,[rip+0x391a]        # db3a <_IO_stdin_used+0x1b3a>
    a220:	48 89 c7             	mov    rdi,rax
    a223:	e8 88 83 ff ff       	call   25b0 <strncmp@plt>
    a228:	85 c0                	test   eax,eax
    a22a:	75 3f                	jne    a26b <line_parser+0x7a7>
    a22c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a230:	48 89 c7             	mov    rdi,rax
    a233:	e8 38 84 ff ff       	call   2670 <strlen@plt>
    a238:	48 8d 50 fa          	lea    rdx,[rax-0x6]
    a23c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a240:	48 8d 48 05          	lea    rcx,[rax+0x5]
    a244:	48 8d 45 de          	lea    rax,[rbp-0x22]
    a248:	48 89 ce             	mov    rsi,rcx
    a24b:	48 89 c7             	mov    rdi,rax
    a24e:	e8 1d 86 ff ff       	call   2870 <strncpy@plt>
    a253:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    a257:	48 8d 45 de          	lea    rax,[rbp-0x22]
    a25b:	48 89 d6             	mov    rsi,rdx
    a25e:	48 89 c7             	mov    rdi,rax
    a261:	e8 a7 f6 ff ff       	call   990d <get_ruletype>
    a266:	e9 15 07 00 00       	jmp    a980 <line_parser+0xebc>
    a26b:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a26f:	ba 08 00 00 00       	mov    edx,0x8
    a274:	48 8d 35 c5 38 00 00 	lea    rsi,[rip+0x38c5]        # db40 <_IO_stdin_used+0x1b40>
    a27b:	48 89 c7             	mov    rdi,rax
    a27e:	e8 2d 83 ff ff       	call   25b0 <strncmp@plt>
    a283:	85 c0                	test   eax,eax
    a285:	0f 85 8f 00 00 00    	jne    a31a <line_parser+0x856>
    a28b:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a28f:	48 83 c0 08          	add    rax,0x8
    a293:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    a297:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a29b:	48 8d 35 81 38 00 00 	lea    rsi,[rip+0x3881]        # db23 <_IO_stdin_used+0x1b23>
    a2a2:	48 89 c7             	mov    rdi,rax
    a2a5:	e8 66 84 ff ff       	call   2710 <strstr@plt>
    a2aa:	48 85 c0             	test   rax,rax
    a2ad:	74 30                	je     a2df <line_parser+0x81b>
    a2af:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a2b3:	48 89 c7             	mov    rdi,rax
    a2b6:	e8 b5 83 ff ff       	call   2670 <strlen@plt>
    a2bb:	48 8d 50 f5          	lea    rdx,[rax-0xb]
    a2bf:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a2c3:	48 8d 48 08          	lea    rcx,[rax+0x8]
    a2c7:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a2cb:	48 83 c0 40          	add    rax,0x40
    a2cf:	48 89 ce             	mov    rsi,rcx
    a2d2:	48 89 c7             	mov    rdi,rax
    a2d5:	e8 96 85 ff ff       	call   2870 <strncpy@plt>
    a2da:	e9 a1 06 00 00       	jmp    a980 <line_parser+0xebc>
    a2df:	c6 85 7e ff ff ff 01 	mov    BYTE PTR [rbp-0x82],0x1
    a2e6:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a2ea:	48 8d 50 40          	lea    rdx,[rax+0x40]
    a2ee:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a2f2:	48 89 c6             	mov    rsi,rax
    a2f5:	48 89 d7             	mov    rdi,rdx
    a2f8:	e8 23 84 ff ff       	call   2720 <strcat@plt>
    a2fd:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a301:	48 8d 58 40          	lea    rbx,[rax+0x40]
    a305:	48 89 df             	mov    rdi,rbx
    a308:	e8 63 83 ff ff       	call   2670 <strlen@plt>
    a30d:	48 01 d8             	add    rax,rbx
    a310:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    a315:	e9 66 06 00 00       	jmp    a980 <line_parser+0xebc>
    a31a:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a31e:	ba 04 00 00 00       	mov    edx,0x4
    a323:	48 8d 35 1f 38 00 00 	lea    rsi,[rip+0x381f]        # db49 <_IO_stdin_used+0x1b49>
    a32a:	48 89 c7             	mov    rdi,rax
    a32d:	e8 7e 82 ff ff       	call   25b0 <strncmp@plt>
    a332:	85 c0                	test   eax,eax
    a334:	0f 85 8e 00 00 00    	jne    a3c8 <line_parser+0x904>
    a33a:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a33e:	48 8d 35 ab 37 00 00 	lea    rsi,[rip+0x37ab]        # daf0 <_IO_stdin_used+0x1af0>
    a345:	48 89 c7             	mov    rdi,rax
    a348:	e8 43 85 ff ff       	call   2890 <strcspn@plt>
    a34d:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
    a351:	48 01 d0             	add    rax,rdx
    a354:	c6 00 00             	mov    BYTE PTR [rax],0x0
    a357:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a35b:	48 83 c0 04          	add    rax,0x4
    a35f:	48 89 c7             	mov    rdi,rax
    a362:	e8 04 f3 ff ff       	call   966b <isdigit>
    a367:	84 c0                	test   al,al
    a369:	74 47                	je     a3b2 <line_parser+0x8ee>
    a36b:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a36f:	48 83 c0 04          	add    rax,0x4
    a373:	48 89 c7             	mov    rdi,rax
    a376:	e8 e5 83 ff ff       	call   2760 <atoi@plt>
    a37b:	89 45 a8             	mov    DWORD PTR [rbp-0x58],eax
    a37e:	83 7d a8 00          	cmp    DWORD PTR [rbp-0x58],0x0
    a382:	7e 18                	jle    a39c <line_parser+0x8d8>
    a384:	83 7d a8 0a          	cmp    DWORD PTR [rbp-0x58],0xa
    a388:	7f 12                	jg     a39c <line_parser+0x8d8>
    a38a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a38e:	8b 55 a8             	mov    edx,DWORD PTR [rbp-0x58]
    a391:	89 90 4c 01 00 00    	mov    DWORD PTR [rax+0x14c],edx
    a397:	e9 e4 05 00 00       	jmp    a980 <line_parser+0xebc>
    a39c:	48 8d 3d ad 37 00 00 	lea    rdi,[rip+0x37ad]        # db50 <_IO_stdin_used+0x1b50>
    a3a3:	e8 98 81 ff ff       	call   2540 <puts@plt>
    a3a8:	bf ff ff ff ff       	mov    edi,0xffffffff
    a3ad:	e8 ae 81 ff ff       	call   2560 <exit@plt>
    a3b2:	48 8d 3d bf 37 00 00 	lea    rdi,[rip+0x37bf]        # db78 <_IO_stdin_used+0x1b78>
    a3b9:	e8 82 81 ff ff       	call   2540 <puts@plt>
    a3be:	bf ff ff ff ff       	mov    edi,0xffffffff
    a3c3:	e8 98 81 ff ff       	call   2560 <exit@plt>
    a3c8:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a3cc:	ba 06 00 00 00       	mov    edx,0x6
    a3d1:	48 8d 35 c8 37 00 00 	lea    rsi,[rip+0x37c8]        # dba0 <_IO_stdin_used+0x1ba0>
    a3d8:	48 89 c7             	mov    rdi,rax
    a3db:	e8 d0 81 ff ff       	call   25b0 <strncmp@plt>
    a3e0:	85 c0                	test   eax,eax
    a3e2:	0f 85 9b 00 00 00    	jne    a483 <line_parser+0x9bf>
    a3e8:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a3ec:	48 89 c7             	mov    rdi,rax
    a3ef:	e8 39 f6 ff ff       	call   9a2d <sc_strip>
    a3f4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a3f8:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a3fe:	3d 80 00 00 00       	cmp    eax,0x80
    a403:	75 58                	jne    a45d <line_parser+0x999>
    a405:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a409:	48 83 c0 06          	add    rax,0x6
    a40d:	ba ff 00 00 00       	mov    edx,0xff
    a412:	be 00 00 00 00       	mov    esi,0x0
    a417:	48 89 c7             	mov    rdi,rax
    a41a:	e8 b9 f5 ff ff       	call   99d8 <numeric_check>
    a41f:	89 45 a4             	mov    DWORD PTR [rbp-0x5c],eax
    a422:	83 7d a4 ff          	cmp    DWORD PTR [rbp-0x5c],0xffffffff
    a426:	75 16                	jne    a43e <line_parser+0x97a>
    a428:	48 8d 3d 78 37 00 00 	lea    rdi,[rip+0x3778]        # dba7 <_IO_stdin_used+0x1ba7>
    a42f:	e8 0c 81 ff ff       	call   2540 <puts@plt>
    a434:	bf ff ff ff ff       	mov    edi,0xffffffff
    a439:	e8 22 81 ff ff       	call   2560 <exit@plt>
    a43e:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
    a441:	89 c2                	mov    edx,eax
    a443:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a447:	88 90 72 03 00 00    	mov    BYTE PTR [rax+0x372],dl
    a44d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a451:	c6 80 6e 03 00 00 01 	mov    BYTE PTR [rax+0x36e],0x1
    a458:	e9 23 05 00 00       	jmp    a980 <line_parser+0xebc>
    a45d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a461:	48 83 c0 20          	add    rax,0x20
    a465:	48 89 c6             	mov    rsi,rax
    a468:	48 8d 3d 51 37 00 00 	lea    rdi,[rip+0x3751]        # dbc0 <_IO_stdin_used+0x1bc0>
    a46f:	b8 00 00 00 00       	mov    eax,0x0
    a474:	e8 67 80 ff ff       	call   24e0 <printf@plt>
    a479:	bf ff ff ff ff       	mov    edi,0xffffffff
    a47e:	e8 dd 80 ff ff       	call   2560 <exit@plt>
    a483:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a487:	ba 06 00 00 00       	mov    edx,0x6
    a48c:	48 8d 35 64 37 00 00 	lea    rsi,[rip+0x3764]        # dbf7 <_IO_stdin_used+0x1bf7>
    a493:	48 89 c7             	mov    rdi,rax
    a496:	e8 15 81 ff ff       	call   25b0 <strncmp@plt>
    a49b:	85 c0                	test   eax,eax
    a49d:	0f 85 86 00 00 00    	jne    a529 <line_parser+0xa65>
    a4a3:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a4a7:	48 89 c7             	mov    rdi,rax
    a4aa:	e8 7e f5 ff ff       	call   9a2d <sc_strip>
    a4af:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a4b3:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a4b9:	3d 80 00 00 00       	cmp    eax,0x80
    a4be:	75 58                	jne    a518 <line_parser+0xa54>
    a4c0:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a4c4:	48 83 c0 06          	add    rax,0x6
    a4c8:	ba ff 00 00 00       	mov    edx,0xff
    a4cd:	be 00 00 00 00       	mov    esi,0x0
    a4d2:	48 89 c7             	mov    rdi,rax
    a4d5:	e8 fe f4 ff ff       	call   99d8 <numeric_check>
    a4da:	89 45 a0             	mov    DWORD PTR [rbp-0x60],eax
    a4dd:	83 7d a0 ff          	cmp    DWORD PTR [rbp-0x60],0xffffffff
    a4e1:	75 16                	jne    a4f9 <line_parser+0xa35>
    a4e3:	48 8d 3d 14 37 00 00 	lea    rdi,[rip+0x3714]        # dbfe <_IO_stdin_used+0x1bfe>
    a4ea:	e8 51 80 ff ff       	call   2540 <puts@plt>
    a4ef:	bf ff ff ff ff       	mov    edi,0xffffffff
    a4f4:	e8 67 80 ff ff       	call   2560 <exit@plt>
    a4f9:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    a4fc:	89 c2                	mov    edx,eax
    a4fe:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a502:	88 90 73 03 00 00    	mov    BYTE PTR [rax+0x373],dl
    a508:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a50c:	c6 80 6f 03 00 00 01 	mov    BYTE PTR [rax+0x36f],0x1
    a513:	e9 68 04 00 00       	jmp    a980 <line_parser+0xebc>
    a518:	48 8d 3d f9 36 00 00 	lea    rdi,[rip+0x36f9]        # dc18 <_IO_stdin_used+0x1c18>
    a51f:	e8 1c 80 ff ff       	call   2540 <puts@plt>
    a524:	e9 57 04 00 00       	jmp    a980 <line_parser+0xebc>
    a529:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a52d:	ba 08 00 00 00       	mov    edx,0x8
    a532:	48 8d 35 11 37 00 00 	lea    rsi,[rip+0x3711]        # dc4a <_IO_stdin_used+0x1c4a>
    a539:	48 89 c7             	mov    rdi,rax
    a53c:	e8 6f 80 ff ff       	call   25b0 <strncmp@plt>
    a541:	85 c0                	test   eax,eax
    a543:	0f 85 8c 00 00 00    	jne    a5d5 <line_parser+0xb11>
    a549:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a54d:	48 89 c7             	mov    rdi,rax
    a550:	e8 d8 f4 ff ff       	call   9a2d <sc_strip>
    a555:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a559:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a55f:	3d 80 00 00 00       	cmp    eax,0x80
    a564:	75 59                	jne    a5bf <line_parser+0xafb>
    a566:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a56a:	48 83 c0 08          	add    rax,0x8
    a56e:	ba ff ff 00 00       	mov    edx,0xffff
    a573:	be 00 00 00 00       	mov    esi,0x0
    a578:	48 89 c7             	mov    rdi,rax
    a57b:	e8 58 f4 ff ff       	call   99d8 <numeric_check>
    a580:	89 45 9c             	mov    DWORD PTR [rbp-0x64],eax
    a583:	83 7d 9c ff          	cmp    DWORD PTR [rbp-0x64],0xffffffff
    a587:	75 16                	jne    a59f <line_parser+0xadb>
    a589:	48 8d 3d c3 36 00 00 	lea    rdi,[rip+0x36c3]        # dc53 <_IO_stdin_used+0x1c53>
    a590:	e8 ab 7f ff ff       	call   2540 <puts@plt>
    a595:	bf ff ff ff ff       	mov    edi,0xffffffff
    a59a:	e8 c1 7f ff ff       	call   2560 <exit@plt>
    a59f:	8b 45 9c             	mov    eax,DWORD PTR [rbp-0x64]
    a5a2:	89 c2                	mov    edx,eax
    a5a4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a5a8:	66 89 90 76 03 00 00 	mov    WORD PTR [rax+0x376],dx
    a5af:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a5b3:	c6 80 71 03 00 00 01 	mov    BYTE PTR [rax+0x371],0x1
    a5ba:	e9 c1 03 00 00       	jmp    a980 <line_parser+0xebc>
    a5bf:	48 8d 3d aa 36 00 00 	lea    rdi,[rip+0x36aa]        # dc70 <_IO_stdin_used+0x1c70>
    a5c6:	e8 75 7f ff ff       	call   2540 <puts@plt>
    a5cb:	bf ff ff ff ff       	mov    edi,0xffffffff
    a5d0:	e8 8b 7f ff ff       	call   2560 <exit@plt>
    a5d5:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a5d9:	ba 09 00 00 00       	mov    edx,0x9
    a5de:	48 8d 35 bf 36 00 00 	lea    rsi,[rip+0x36bf]        # dca4 <_IO_stdin_used+0x1ca4>
    a5e5:	48 89 c7             	mov    rdi,rax
    a5e8:	e8 c3 7f ff ff       	call   25b0 <strncmp@plt>
    a5ed:	85 c0                	test   eax,eax
    a5ef:	75 7a                	jne    a66b <line_parser+0xba7>
    a5f1:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a5f5:	48 89 c7             	mov    rdi,rax
    a5f8:	e8 30 f4 ff ff       	call   9a2d <sc_strip>
    a5fd:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a601:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a607:	3d 80 00 00 00       	cmp    eax,0x80
    a60c:	0f 85 6e 03 00 00    	jne    a980 <line_parser+0xebc>
    a612:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a616:	48 83 c0 09          	add    rax,0x9
    a61a:	ba ff ff 00 00       	mov    edx,0xffff
    a61f:	be 00 00 00 00       	mov    esi,0x0
    a624:	48 89 c7             	mov    rdi,rax
    a627:	e8 ac f3 ff ff       	call   99d8 <numeric_check>
    a62c:	89 45 98             	mov    DWORD PTR [rbp-0x68],eax
    a62f:	83 7d 98 ff          	cmp    DWORD PTR [rbp-0x68],0xffffffff
    a633:	75 16                	jne    a64b <line_parser+0xb87>
    a635:	48 8d 3d 72 36 00 00 	lea    rdi,[rip+0x3672]        # dcae <_IO_stdin_used+0x1cae>
    a63c:	e8 ff 7e ff ff       	call   2540 <puts@plt>
    a641:	bf ff ff ff ff       	mov    edi,0xffffffff
    a646:	e8 15 7f ff ff       	call   2560 <exit@plt>
    a64b:	8b 45 98             	mov    eax,DWORD PTR [rbp-0x68]
    a64e:	89 c2                	mov    edx,eax
    a650:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a654:	66 89 90 74 03 00 00 	mov    WORD PTR [rax+0x374],dx
    a65b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a65f:	c6 80 70 03 00 00 01 	mov    BYTE PTR [rax+0x370],0x1
    a666:	e9 15 03 00 00       	jmp    a980 <line_parser+0xebc>
    a66b:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a66f:	ba 04 00 00 00       	mov    edx,0x4
    a674:	48 8d 35 4f 36 00 00 	lea    rsi,[rip+0x364f]        # dcca <_IO_stdin_used+0x1cca>
    a67b:	48 89 c7             	mov    rdi,rax
    a67e:	e8 2d 7f ff ff       	call   25b0 <strncmp@plt>
    a683:	85 c0                	test   eax,eax
    a685:	75 64                	jne    a6eb <line_parser+0xc27>
    a687:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a68b:	48 89 c7             	mov    rdi,rax
    a68e:	e8 9a f3 ff ff       	call   9a2d <sc_strip>
    a693:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a697:	48 83 c0 04          	add    rax,0x4
    a69b:	ba ff 00 00 00       	mov    edx,0xff
    a6a0:	be 00 00 00 00       	mov    esi,0x0
    a6a5:	48 89 c7             	mov    rdi,rax
    a6a8:	e8 2b f3 ff ff       	call   99d8 <numeric_check>
    a6ad:	89 45 94             	mov    DWORD PTR [rbp-0x6c],eax
    a6b0:	83 7d 94 ff          	cmp    DWORD PTR [rbp-0x6c],0xffffffff
    a6b4:	75 16                	jne    a6cc <line_parser+0xc08>
    a6b6:	48 8d 3d 12 36 00 00 	lea    rdi,[rip+0x3612]        # dccf <_IO_stdin_used+0x1ccf>
    a6bd:	e8 7e 7e ff ff       	call   2540 <puts@plt>
    a6c2:	bf ff ff ff ff       	mov    edi,0xffffffff
    a6c7:	e8 94 7e ff ff       	call   2560 <exit@plt>
    a6cc:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    a6cf:	89 c2                	mov    edx,eax
    a6d1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a6d5:	88 90 6c 03 00 00    	mov    BYTE PTR [rax+0x36c],dl
    a6db:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a6df:	c6 80 69 03 00 00 01 	mov    BYTE PTR [rax+0x369],0x1
    a6e6:	e9 95 02 00 00       	jmp    a980 <line_parser+0xebc>
    a6eb:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a6ef:	ba 07 00 00 00       	mov    edx,0x7
    a6f4:	48 8d 35 e6 35 00 00 	lea    rsi,[rip+0x35e6]        # dce1 <_IO_stdin_used+0x1ce1>
    a6fb:	48 89 c7             	mov    rdi,rax
    a6fe:	e8 ad 7e ff ff       	call   25b0 <strncmp@plt>
    a703:	85 c0                	test   eax,eax
    a705:	75 6e                	jne    a775 <line_parser+0xcb1>
    a707:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a70b:	48 89 c7             	mov    rdi,rax
    a70e:	e8 1a f3 ff ff       	call   9a2d <sc_strip>
    a713:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a717:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a71d:	83 f8 7e             	cmp    eax,0x7e
    a720:	75 3d                	jne    a75f <line_parser+0xc9b>
    a722:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a726:	48 89 c7             	mov    rdi,rax
    a729:	e8 42 7f ff ff       	call   2670 <strlen@plt>
    a72e:	48 8d 50 f8          	lea    rdx,[rax-0x8]
    a732:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a736:	48 8d 48 07          	lea    rcx,[rax+0x7]
    a73a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a73e:	48 05 53 03 00 00    	add    rax,0x353
    a744:	48 89 ce             	mov    rsi,rcx
    a747:	48 89 c7             	mov    rdi,rax
    a74a:	e8 21 81 ff ff       	call   2870 <strncpy@plt>
    a74f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a753:	c6 80 50 03 00 00 01 	mov    BYTE PTR [rax+0x350],0x1
    a75a:	e9 21 02 00 00       	jmp    a980 <line_parser+0xebc>
    a75f:	48 8d 3d 8a 35 00 00 	lea    rdi,[rip+0x358a]        # dcf0 <_IO_stdin_used+0x1cf0>
    a766:	e8 d5 7d ff ff       	call   2540 <puts@plt>
    a76b:	bf ff ff ff ff       	mov    edi,0xffffffff
    a770:	e8 eb 7d ff ff       	call   2560 <exit@plt>
    a775:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a779:	ba 04 00 00 00       	mov    edx,0x4
    a77e:	48 8d 35 9c 35 00 00 	lea    rsi,[rip+0x359c]        # dd21 <_IO_stdin_used+0x1d21>
    a785:	48 89 c7             	mov    rdi,rax
    a788:	e8 23 7e ff ff       	call   25b0 <strncmp@plt>
    a78d:	85 c0                	test   eax,eax
    a78f:	75 78                	jne    a809 <line_parser+0xd45>
    a791:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a795:	48 89 c7             	mov    rdi,rax
    a798:	e8 90 f2 ff ff       	call   9a2d <sc_strip>
    a79d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a7a1:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a7a7:	83 f8 7e             	cmp    eax,0x7e
    a7aa:	0f 85 d0 01 00 00    	jne    a980 <line_parser+0xebc>
    a7b0:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a7b4:	48 83 c0 04          	add    rax,0x4
    a7b8:	ba ff ff ff ff       	mov    edx,0xffffffff
    a7bd:	be 00 00 00 00       	mov    esi,0x0
    a7c2:	48 89 c7             	mov    rdi,rax
    a7c5:	e8 0e f2 ff ff       	call   99d8 <numeric_check>
    a7ca:	89 45 90             	mov    DWORD PTR [rbp-0x70],eax
    a7cd:	83 7d 90 ff          	cmp    DWORD PTR [rbp-0x70],0xffffffff
    a7d1:	75 16                	jne    a7e9 <line_parser+0xd25>
    a7d3:	48 8d 3d 4c 35 00 00 	lea    rdi,[rip+0x354c]        # dd26 <_IO_stdin_used+0x1d26>
    a7da:	e8 61 7d ff ff       	call   2540 <puts@plt>
    a7df:	bf ff ff ff ff       	mov    edi,0xffffffff
    a7e4:	e8 77 7d ff ff       	call   2560 <exit@plt>
    a7e9:	8b 45 90             	mov    eax,DWORD PTR [rbp-0x70]
    a7ec:	89 c2                	mov    edx,eax
    a7ee:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a7f2:	66 89 90 5c 03 00 00 	mov    WORD PTR [rax+0x35c],dx
    a7f9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a7fd:	c6 80 51 03 00 00 01 	mov    BYTE PTR [rax+0x351],0x1
    a804:	e9 77 01 00 00       	jmp    a980 <line_parser+0xebc>
    a809:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a80d:	ba 06 00 00 00       	mov    edx,0x6
    a812:	48 8d 35 1f 35 00 00 	lea    rsi,[rip+0x351f]        # dd38 <_IO_stdin_used+0x1d38>
    a819:	48 89 c7             	mov    rdi,rax
    a81c:	e8 8f 7d ff ff       	call   25b0 <strncmp@plt>
    a821:	85 c0                	test   eax,eax
    a823:	75 7c                	jne    a8a1 <line_parser+0xddd>
    a825:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a829:	48 89 c7             	mov    rdi,rax
    a82c:	e8 3f 7e ff ff       	call   2670 <strlen@plt>
    a831:	48 8d 50 f7          	lea    rdx,[rax-0x9]
    a835:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a839:	48 8d 48 06          	lea    rcx,[rax+0x6]
    a83d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a841:	48 05 10 02 00 00    	add    rax,0x210
    a847:	48 89 ce             	mov    rsi,rcx
    a84a:	48 89 c7             	mov    rdi,rax
    a84d:	e8 1e 80 ff ff       	call   2870 <strncpy@plt>
    a852:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a856:	48 8d 88 10 02 00 00 	lea    rcx,[rax+0x210]
    a85d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a861:	48 05 d0 01 00 00    	add    rax,0x1d0
    a867:	ba 00 00 00 00       	mov    edx,0x0
    a86c:	48 89 ce             	mov    rsi,rcx
    a86f:	48 89 c7             	mov    rdi,rax
    a872:	e8 f9 7e ff ff       	call   2770 <regcomp@plt>
    a877:	85 c0                	test   eax,eax
    a879:	74 16                	je     a891 <line_parser+0xdcd>
    a87b:	48 8d 3d be 34 00 00 	lea    rdi,[rip+0x34be]        # dd40 <_IO_stdin_used+0x1d40>
    a882:	e8 b9 7c ff ff       	call   2540 <puts@plt>
    a887:	bf ff ff ff ff       	mov    edi,0xffffffff
    a88c:	e8 cf 7c ff ff       	call   2560 <exit@plt>
    a891:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a895:	c6 80 90 02 00 00 01 	mov    BYTE PTR [rax+0x290],0x1
    a89c:	e9 df 00 00 00       	jmp    a980 <line_parser+0xebc>
    a8a1:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a8a5:	ba 06 00 00 00       	mov    edx,0x6
    a8aa:	48 8d 35 b4 34 00 00 	lea    rsi,[rip+0x34b4]        # dd65 <_IO_stdin_used+0x1d65>
    a8b1:	48 89 c7             	mov    rdi,rax
    a8b4:	e8 f7 7c ff ff       	call   25b0 <strncmp@plt>
    a8b9:	85 c0                	test   eax,eax
    a8bb:	75 2d                	jne    a8ea <line_parser+0xe26>
    a8bd:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a8c1:	48 89 c7             	mov    rdi,rax
    a8c4:	e8 64 f1 ff ff       	call   9a2d <sc_strip>
    a8c9:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a8cd:	48 8d 48 06          	lea    rcx,[rax+0x6]
    a8d1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a8d5:	ba 01 00 00 00       	mov    edx,0x1
    a8da:	48 89 ce             	mov    rsi,rcx
    a8dd:	48 89 c7             	mov    rdi,rax
    a8e0:	e8 98 03 00 00       	call   ac7d <d_op_parser>
    a8e5:	e9 96 00 00 00       	jmp    a980 <line_parser+0xebc>
    a8ea:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a8ee:	ba 07 00 00 00       	mov    edx,0x7
    a8f3:	48 8d 35 72 34 00 00 	lea    rsi,[rip+0x3472]        # dd6c <_IO_stdin_used+0x1d6c>
    a8fa:	48 89 c7             	mov    rdi,rax
    a8fd:	e8 ae 7c ff ff       	call   25b0 <strncmp@plt>
    a902:	85 c0                	test   eax,eax
    a904:	75 27                	jne    a92d <line_parser+0xe69>
    a906:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a90a:	48 89 c7             	mov    rdi,rax
    a90d:	e8 1b f1 ff ff       	call   9a2d <sc_strip>
    a912:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a916:	48 83 c0 07          	add    rax,0x7
    a91a:	48 89 c7             	mov    rdi,rax
    a91d:	e8 3e 7e ff ff       	call   2760 <atoi@plt>
    a922:	89 c2                	mov    edx,eax
    a924:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a928:	89 50 14             	mov    DWORD PTR [rax+0x14],edx
    a92b:	eb 53                	jmp    a980 <line_parser+0xebc>
    a92d:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a931:	ba 0b 00 00 00       	mov    edx,0xb
    a936:	48 8d 35 37 34 00 00 	lea    rsi,[rip+0x3437]        # dd74 <_IO_stdin_used+0x1d74>
    a93d:	48 89 c7             	mov    rdi,rax
    a940:	e8 6b 7c ff ff       	call   25b0 <strncmp@plt>
    a945:	85 c0                	test   eax,eax
    a947:	75 10                	jne    a959 <line_parser+0xe95>
    a949:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a94d:	c7 80 48 03 00 00 01 	mov    DWORD PTR [rax+0x348],0x1
    a954:	00 00 00 
    a957:	eb 27                	jmp    a980 <line_parser+0xebc>
    a959:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a95d:	ba 09 00 00 00       	mov    edx,0x9
    a962:	48 8d 35 17 34 00 00 	lea    rsi,[rip+0x3417]        # dd80 <_IO_stdin_used+0x1d80>
    a969:	48 89 c7             	mov    rdi,rax
    a96c:	e8 3f 7c ff ff       	call   25b0 <strncmp@plt>
    a971:	85 c0                	test   eax,eax
    a973:	75 0b                	jne    a980 <line_parser+0xebc>
    a975:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a979:	c6 80 48 01 00 00 01 	mov    BYTE PTR [rax+0x148],0x1
    a980:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    a983:	89 45 80             	mov    DWORD PTR [rbp-0x80],eax
    a986:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a98a:	48 89 c7             	mov    rdi,rax
    a98d:	e8 de 7c ff ff       	call   2670 <strlen@plt>
    a992:	48 8d 50 ff          	lea    rdx,[rax-0x1]
    a996:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a99a:	48 01 d0             	add    rax,rdx
    a99d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    a9a0:	3c 29                	cmp    al,0x29
    a9a2:	74 3d                	je     a9e1 <line_parser+0xf1d>
    a9a4:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    a9a7:	3b 45 8c             	cmp    eax,DWORD PTR [rbp-0x74]
    a9aa:	7f 0c                	jg     a9b8 <line_parser+0xef4>
    a9ac:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
    a9af:	3b 45 84             	cmp    eax,DWORD PTR [rbp-0x7c]
    a9b2:	0f 8e 28 f2 ff ff    	jle    9be0 <line_parser+0x11c>
    a9b8:	0f b6 85 7f ff ff ff 	movzx  eax,BYTE PTR [rbp-0x81]
    a9bf:	83 f0 01             	xor    eax,0x1
    a9c2:	84 c0                	test   al,al
    a9c4:	74 1c                	je     a9e2 <line_parser+0xf1e>
    a9c6:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a9ca:	48 83 c0 20          	add    rax,0x20
    a9ce:	48 bb 55 6e 74 69 74 	movabs rbx,0x64656c7469746e55
    a9d5:	6c 65 64 
    a9d8:	48 89 18             	mov    QWORD PTR [rax],rbx
    a9db:	c6 40 08 00          	mov    BYTE PTR [rax+0x8],0x0
    a9df:	eb 01                	jmp    a9e2 <line_parser+0xf1e>
    a9e1:	90                   	nop
    a9e2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a9e6:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    a9ed:	00 00 
    a9ef:	74 05                	je     a9f6 <line_parser+0xf32>
    a9f1:	e8 ea 7d ff ff       	call   27e0 <__stack_chk_fail@plt>
    a9f6:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    a9fa:	c9                   	leave  
    a9fb:	c3                   	ret    

000000000000a9fc <rule_processor>:
    a9fc:	f3 0f 1e fa          	endbr64 
    aa00:	55                   	push   rbp
    aa01:	48 89 e5             	mov    rbp,rsp
    aa04:	48 83 ec 10          	sub    rsp,0x10
    aa08:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    aa0f:	eb 22                	jmp    aa33 <rule_processor+0x37>
    aa11:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    aa14:	48 98                	cdqe   
    aa16:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    aa1d:	48 8d 15 bc 68 00 00 	lea    rdx,[rip+0x68bc]        # 112e0 <rules>
    aa24:	48 01 d0             	add    rax,rdx
    aa27:	48 89 c7             	mov    rdi,rax
    aa2a:	e8 13 00 00 00       	call   aa42 <process_rule>
    aa2f:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    aa33:	8b 05 db 65 00 00    	mov    eax,DWORD PTR [rip+0x65db]        # 11014 <num_rules>
    aa39:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    aa3c:	7e d3                	jle    aa11 <rule_processor+0x15>
    aa3e:	90                   	nop
    aa3f:	90                   	nop
    aa40:	c9                   	leave  
    aa41:	c3                   	ret    

000000000000aa42 <process_rule>:
    aa42:	f3 0f 1e fa          	endbr64 
    aa46:	55                   	push   rbp
    aa47:	48 89 e5             	mov    rbp,rsp
    aa4a:	41 57                	push   r15
    aa4c:	41 56                	push   r14
    aa4e:	41 54                	push   r12
    aa50:	53                   	push   rbx
    aa51:	48 83 ec 40          	sub    rsp,0x40
    aa55:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    aa59:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    aa60:	00 00 
    aa62:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    aa66:	31 c0                	xor    eax,eax
    aa68:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    aa6c:	0f b6 80 90 02 00 00 	movzx  eax,BYTE PTR [rax+0x290]
    aa73:	83 f0 01             	xor    eax,0x1
    aa76:	84 c0                	test   al,al
    aa78:	0f 84 dd 01 00 00    	je     ac5b <process_rule+0x219>
    aa7e:	48 89 e0             	mov    rax,rsp
    aa81:	49 89 c4             	mov    r12,rax
    aa84:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    aa88:	48 83 c0 40          	add    rax,0x40
    aa8c:	48 89 c7             	mov    rdi,rax
    aa8f:	e8 dc 7b ff ff       	call   2670 <strlen@plt>
    aa94:	48 83 c0 01          	add    rax,0x1
    aa98:	48 01 c0             	add    rax,rax
    aa9b:	48 89 c2             	mov    rdx,rax
    aa9e:	48 83 ea 01          	sub    rdx,0x1
    aaa2:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    aaa6:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    aaaa:	48 c7 45 a8 00 00 00 	mov    QWORD PTR [rbp-0x58],0x0
    aab1:	00 
    aab2:	49 89 c6             	mov    r14,rax
    aab5:	41 bf 00 00 00 00    	mov    r15d,0x0
    aabb:	ba 10 00 00 00       	mov    edx,0x10
    aac0:	48 83 ea 01          	sub    rdx,0x1
    aac4:	48 01 d0             	add    rax,rdx
    aac7:	bb 10 00 00 00       	mov    ebx,0x10
    aacc:	ba 00 00 00 00       	mov    edx,0x0
    aad1:	48 f7 f3             	div    rbx
    aad4:	48 6b c0 10          	imul   rax,rax,0x10
    aad8:	48 89 c1             	mov    rcx,rax
    aadb:	48 81 e1 00 f0 ff ff 	and    rcx,0xfffffffffffff000
    aae2:	48 89 e2             	mov    rdx,rsp
    aae5:	48 29 ca             	sub    rdx,rcx
    aae8:	48 39 d4             	cmp    rsp,rdx
    aaeb:	74 12                	je     aaff <process_rule+0xbd>
    aaed:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    aaf4:	48 83 8c 24 f8 0f 00 	or     QWORD PTR [rsp+0xff8],0x0
    aafb:	00 00 
    aafd:	eb e9                	jmp    aae8 <process_rule+0xa6>
    aaff:	48 89 c2             	mov    rdx,rax
    ab02:	81 e2 ff 0f 00 00    	and    edx,0xfff
    ab08:	48 29 d4             	sub    rsp,rdx
    ab0b:	48 89 c2             	mov    rdx,rax
    ab0e:	81 e2 ff 0f 00 00    	and    edx,0xfff
    ab14:	48 85 d2             	test   rdx,rdx
    ab17:	74 10                	je     ab29 <process_rule+0xe7>
    ab19:	25 ff 0f 00 00       	and    eax,0xfff
    ab1e:	48 83 e8 08          	sub    rax,0x8
    ab22:	48 01 e0             	add    rax,rsp
    ab25:	48 83 08 00          	or     QWORD PTR [rax],0x0
    ab29:	48 89 e0             	mov    rax,rsp
    ab2c:	48 83 c0 00          	add    rax,0x0
    ab30:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    ab34:	c7 45 c0 00 00 00 00 	mov    DWORD PTR [rbp-0x40],0x0
    ab3b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ab3f:	48 8d 50 40          	lea    rdx,[rax+0x40]
    ab43:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ab47:	48 05 c8 02 00 00    	add    rax,0x2c8
    ab4d:	48 89 d6             	mov    rsi,rdx
    ab50:	48 89 c7             	mov    rdi,rax
    ab53:	e8 c8 7c ff ff       	call   2820 <strcpy@plt>
    ab58:	c7 45 c4 00 00 00 00 	mov    DWORD PTR [rbp-0x3c],0x0
    ab5f:	e9 a4 00 00 00       	jmp    ac08 <process_rule+0x1c6>
    ab64:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    ab68:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    ab6b:	48 98                	cdqe   
    ab6d:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    ab72:	3c 7c                	cmp    al,0x7c
    ab74:	75 18                	jne    ab8e <process_rule+0x14c>
    ab76:	83 7d c0 00          	cmp    DWORD PTR [rbp-0x40],0x0
    ab7a:	74 09                	je     ab85 <process_rule+0x143>
    ab7c:	c7 45 c0 00 00 00 00 	mov    DWORD PTR [rbp-0x40],0x0
    ab83:	eb 7f                	jmp    ac04 <process_rule+0x1c2>
    ab85:	c7 45 c0 01 00 00 00 	mov    DWORD PTR [rbp-0x40],0x1
    ab8c:	eb 76                	jmp    ac04 <process_rule+0x1c2>
    ab8e:	83 7d c0 01          	cmp    DWORD PTR [rbp-0x40],0x1
    ab92:	75 3a                	jne    abce <process_rule+0x18c>
    ab94:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    ab98:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    ab9b:	48 98                	cdqe   
    ab9d:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    aba2:	0f be c0             	movsx  eax,al
    aba5:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
    aba8:	48 63 d2             	movsxd rdx,edx
    abab:	48 8d 4a ff          	lea    rcx,[rdx-0x1]
    abaf:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    abb3:	48 01 d1             	add    rcx,rdx
    abb6:	89 c2                	mov    edx,eax
    abb8:	48 8d 35 cb 31 00 00 	lea    rsi,[rip+0x31cb]        # dd8a <_IO_stdin_used+0x1d8a>
    abbf:	48 89 cf             	mov    rdi,rcx
    abc2:	b8 00 00 00 00       	mov    eax,0x0
    abc7:	e8 e4 7a ff ff       	call   26b0 <sprintf@plt>
    abcc:	eb 36                	jmp    ac04 <process_rule+0x1c2>
    abce:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    abd2:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    abd5:	48 98                	cdqe   
    abd7:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    abdc:	0f be c0             	movsx  eax,al
    abdf:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
    abe2:	01 d2                	add    edx,edx
    abe4:	48 63 ca             	movsxd rcx,edx
    abe7:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    abeb:	48 01 d1             	add    rcx,rdx
    abee:	89 c2                	mov    edx,eax
    abf0:	48 8d 35 96 31 00 00 	lea    rsi,[rip+0x3196]        # dd8d <_IO_stdin_used+0x1d8d>
    abf7:	48 89 cf             	mov    rdi,rcx
    abfa:	b8 00 00 00 00       	mov    eax,0x0
    abff:	e8 ac 7a ff ff       	call   26b0 <sprintf@plt>
    ac04:	83 45 c4 01          	add    DWORD PTR [rbp-0x3c],0x1
    ac08:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    ac0b:	48 63 d8             	movsxd rbx,eax
    ac0e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ac12:	48 83 c0 40          	add    rax,0x40
    ac16:	48 89 c7             	mov    rdi,rax
    ac19:	e8 52 7a ff ff       	call   2670 <strlen@plt>
    ac1e:	48 39 c3             	cmp    rbx,rax
    ac21:	0f 82 3d ff ff ff    	jb     ab64 <process_rule+0x122>
    ac27:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ac2b:	48 83 c0 40          	add    rax,0x40
    ac2f:	ba ff 00 00 00       	mov    edx,0xff
    ac34:	be 00 00 00 00       	mov    esi,0x0
    ac39:	48 89 c7             	mov    rdi,rax
    ac3c:	e8 af 78 ff ff       	call   24f0 <memset@plt>
    ac41:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ac45:	48 8d 50 40          	lea    rdx,[rax+0x40]
    ac49:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    ac4d:	48 89 c6             	mov    rsi,rax
    ac50:	48 89 d7             	mov    rdi,rdx
    ac53:	e8 c8 7b ff ff       	call   2820 <strcpy@plt>
    ac58:	4c 89 e4             	mov    rsp,r12
    ac5b:	90                   	nop
    ac5c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ac60:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    ac67:	00 00 
    ac69:	74 05                	je     ac70 <process_rule+0x22e>
    ac6b:	e8 70 7b ff ff       	call   27e0 <__stack_chk_fail@plt>
    ac70:	48 8d 65 e0          	lea    rsp,[rbp-0x20]
    ac74:	5b                   	pop    rbx
    ac75:	41 5c                	pop    r12
    ac77:	41 5e                	pop    r14
    ac79:	41 5f                	pop    r15
    ac7b:	5d                   	pop    rbp
    ac7c:	c3                   	ret    

000000000000ac7d <d_op_parser>:
    ac7d:	f3 0f 1e fa          	endbr64 
    ac81:	55                   	push   rbp
    ac82:	48 89 e5             	mov    rbp,rsp
    ac85:	48 83 ec 20          	sub    rsp,0x20
    ac89:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    ac8d:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    ac91:	89 55 ec             	mov    DWORD PTR [rbp-0x14],edx
    ac94:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ac98:	48 89 c7             	mov    rdi,rax
    ac9b:	e8 cb e9 ff ff       	call   966b <isdigit>
    aca0:	84 c0                	test   al,al
    aca2:	74 23                	je     acc7 <d_op_parser+0x4a>
    aca4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aca8:	c7 40 1c a1 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa1
    acaf:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    acb3:	48 89 c7             	mov    rdi,rax
    acb6:	e8 a5 7a ff ff       	call   2760 <atoi@plt>
    acbb:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    acbf:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    acc2:	e9 59 01 00 00       	jmp    ae20 <d_op_parser+0x1a3>
    acc7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    accb:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    acce:	0f b6 15 bf 30 00 00 	movzx  edx,BYTE PTR [rip+0x30bf]        # dd94 <_IO_stdin_used+0x1d94>
    acd5:	0f b6 c0             	movzx  eax,al
    acd8:	0f b6 d2             	movzx  edx,dl
    acdb:	29 d0                	sub    eax,edx
    acdd:	85 c0                	test   eax,eax
    acdf:	75 27                	jne    ad08 <d_op_parser+0x8b>
    ace1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ace5:	c7 40 1c a4 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa4
    acec:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    acf0:	48 83 c0 01          	add    rax,0x1
    acf4:	48 89 c7             	mov    rdi,rax
    acf7:	e8 64 7a ff ff       	call   2760 <atoi@plt>
    acfc:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ad00:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    ad03:	e9 18 01 00 00       	jmp    ae20 <d_op_parser+0x1a3>
    ad08:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad0c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    ad0f:	0f b6 15 80 30 00 00 	movzx  edx,BYTE PTR [rip+0x3080]        # dd96 <_IO_stdin_used+0x1d96>
    ad16:	0f b6 c0             	movzx  eax,al
    ad19:	0f b6 d2             	movzx  edx,dl
    ad1c:	29 d0                	sub    eax,edx
    ad1e:	85 c0                	test   eax,eax
    ad20:	75 27                	jne    ad49 <d_op_parser+0xcc>
    ad22:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad26:	c7 40 1c a2 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa2
    ad2d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad31:	48 83 c0 01          	add    rax,0x1
    ad35:	48 89 c7             	mov    rdi,rax
    ad38:	e8 23 7a ff ff       	call   2760 <atoi@plt>
    ad3d:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ad41:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    ad44:	e9 d7 00 00 00       	jmp    ae20 <d_op_parser+0x1a3>
    ad49:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad4d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    ad50:	0f b6 15 41 30 00 00 	movzx  edx,BYTE PTR [rip+0x3041]        # dd98 <_IO_stdin_used+0x1d98>
    ad57:	0f b6 c0             	movzx  eax,al
    ad5a:	0f b6 d2             	movzx  edx,dl
    ad5d:	29 d0                	sub    eax,edx
    ad5f:	85 c0                	test   eax,eax
    ad61:	75 27                	jne    ad8a <d_op_parser+0x10d>
    ad63:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad67:	c7 40 1c a6 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa6
    ad6e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad72:	48 83 c0 01          	add    rax,0x1
    ad76:	48 89 c7             	mov    rdi,rax
    ad79:	e8 e2 79 ff ff       	call   2760 <atoi@plt>
    ad7e:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ad82:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    ad85:	e9 96 00 00 00       	jmp    ae20 <d_op_parser+0x1a3>
    ad8a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad8e:	ba 02 00 00 00       	mov    edx,0x2
    ad93:	48 8d 35 00 30 00 00 	lea    rsi,[rip+0x3000]        # dd9a <_IO_stdin_used+0x1d9a>
    ad9a:	48 89 c7             	mov    rdi,rax
    ad9d:	e8 0e 78 ff ff       	call   25b0 <strncmp@plt>
    ada2:	85 c0                	test   eax,eax
    ada4:	75 24                	jne    adca <d_op_parser+0x14d>
    ada6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    adaa:	c7 40 1c a3 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa3
    adb1:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    adb5:	48 83 c0 02          	add    rax,0x2
    adb9:	48 89 c7             	mov    rdi,rax
    adbc:	e8 9f 79 ff ff       	call   2760 <atoi@plt>
    adc1:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    adc5:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    adc8:	eb 56                	jmp    ae20 <d_op_parser+0x1a3>
    adca:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    adce:	ba 02 00 00 00       	mov    edx,0x2
    add3:	48 8d 35 c3 2f 00 00 	lea    rsi,[rip+0x2fc3]        # dd9d <_IO_stdin_used+0x1d9d>
    adda:	48 89 c7             	mov    rdi,rax
    addd:	e8 ce 77 ff ff       	call   25b0 <strncmp@plt>
    ade2:	85 c0                	test   eax,eax
    ade4:	75 24                	jne    ae0a <d_op_parser+0x18d>
    ade6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    adea:	c7 40 1c a5 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa5
    adf1:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    adf5:	48 83 c0 02          	add    rax,0x2
    adf9:	48 89 c7             	mov    rdi,rax
    adfc:	e8 5f 79 ff ff       	call   2760 <atoi@plt>
    ae01:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ae05:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    ae08:	eb 16                	jmp    ae20 <d_op_parser+0x1a3>
    ae0a:	48 8d 3d 8f 2f 00 00 	lea    rdi,[rip+0x2f8f]        # dda0 <_IO_stdin_used+0x1da0>
    ae11:	e8 2a 77 ff ff       	call   2540 <puts@plt>
    ae16:	bf ff ff ff ff       	mov    edi,0xffffffff
    ae1b:	e8 40 77 ff ff       	call   2560 <exit@plt>
    ae20:	c9                   	leave  
    ae21:	c3                   	ret    

000000000000ae22 <d_engine>:
    ae22:	f3 0f 1e fa          	endbr64 
    ae26:	55                   	push   rbp
    ae27:	48 89 e5             	mov    rbp,rsp
    ae2a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    ae2e:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    ae32:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae36:	8b 40 1c             	mov    eax,DWORD PTR [rax+0x1c]
    ae39:	83 f8 ff             	cmp    eax,0xffffffff
    ae3c:	75 0a                	jne    ae48 <d_engine+0x26>
    ae3e:	b8 01 00 00 00       	mov    eax,0x1
    ae43:	e9 ea 00 00 00       	jmp    af32 <d_engine+0x110>
    ae48:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae4c:	8b 40 1c             	mov    eax,DWORD PTR [rax+0x1c]
    ae4f:	2d a1 00 00 00       	sub    eax,0xa1
    ae54:	83 f8 05             	cmp    eax,0x5
    ae57:	0f 87 d0 00 00 00    	ja     af2d <d_engine+0x10b>
    ae5d:	89 c0                	mov    eax,eax
    ae5f:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    ae66:	00 
    ae67:	48 8d 05 4a 2f 00 00 	lea    rax,[rip+0x2f4a]        # ddb8 <_IO_stdin_used+0x1db8>
    ae6e:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    ae71:	48 98                	cdqe   
    ae73:	48 8d 15 3e 2f 00 00 	lea    rdx,[rip+0x2f3e]        # ddb8 <_IO_stdin_used+0x1db8>
    ae7a:	48 01 d0             	add    rax,rdx
    ae7d:	3e ff e0             	notrack jmp rax
    ae80:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae84:	8b 50 18             	mov    edx,DWORD PTR [rax+0x18]
    ae87:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ae8b:	8b 40 34             	mov    eax,DWORD PTR [rax+0x34]
    ae8e:	39 c2                	cmp    edx,eax
    ae90:	0f 85 87 00 00 00    	jne    af1d <d_engine+0xfb>
    ae96:	b8 01 00 00 00       	mov    eax,0x1
    ae9b:	e9 92 00 00 00       	jmp    af32 <d_engine+0x110>
    aea0:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    aea4:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    aea7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aeab:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    aeae:	39 c2                	cmp    edx,eax
    aeb0:	76 6e                	jbe    af20 <d_engine+0xfe>
    aeb2:	b8 01 00 00 00       	mov    eax,0x1
    aeb7:	eb 79                	jmp    af32 <d_engine+0x110>
    aeb9:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    aebd:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    aec0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aec4:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    aec7:	39 c2                	cmp    edx,eax
    aec9:	72 58                	jb     af23 <d_engine+0x101>
    aecb:	b8 01 00 00 00       	mov    eax,0x1
    aed0:	eb 60                	jmp    af32 <d_engine+0x110>
    aed2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    aed6:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    aed9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aedd:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    aee0:	39 c2                	cmp    edx,eax
    aee2:	73 42                	jae    af26 <d_engine+0x104>
    aee4:	b8 01 00 00 00       	mov    eax,0x1
    aee9:	eb 47                	jmp    af32 <d_engine+0x110>
    aeeb:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    aeef:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    aef2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aef6:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    aef9:	39 c2                	cmp    edx,eax
    aefb:	77 2c                	ja     af29 <d_engine+0x107>
    aefd:	b8 01 00 00 00       	mov    eax,0x1
    af02:	eb 2e                	jmp    af32 <d_engine+0x110>
    af04:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    af08:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    af0b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    af0f:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    af12:	39 c2                	cmp    edx,eax
    af14:	74 16                	je     af2c <d_engine+0x10a>
    af16:	b8 01 00 00 00       	mov    eax,0x1
    af1b:	eb 15                	jmp    af32 <d_engine+0x110>
    af1d:	90                   	nop
    af1e:	eb 0d                	jmp    af2d <d_engine+0x10b>
    af20:	90                   	nop
    af21:	eb 0a                	jmp    af2d <d_engine+0x10b>
    af23:	90                   	nop
    af24:	eb 07                	jmp    af2d <d_engine+0x10b>
    af26:	90                   	nop
    af27:	eb 04                	jmp    af2d <d_engine+0x10b>
    af29:	90                   	nop
    af2a:	eb 01                	jmp    af2d <d_engine+0x10b>
    af2c:	90                   	nop
    af2d:	b8 00 00 00 00       	mov    eax,0x0
    af32:	5d                   	pop    rbp
    af33:	c3                   	ret    

000000000000af34 <homenet_toi>:
    af34:	f3 0f 1e fa          	endbr64 
    af38:	55                   	push   rbp
    af39:	48 89 e5             	mov    rbp,rsp
    af3c:	53                   	push   rbx
    af3d:	48 83 ec 38          	sub    rsp,0x38
    af41:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    af45:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    af4c:	00 00 
    af4e:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    af52:	31 c0                	xor    eax,eax
    af54:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    af58:	48 8d 35 71 2e 00 00 	lea    rsi,[rip+0x2e71]        # ddd0 <_IO_stdin_used+0x1dd0>
    af5f:	48 89 c7             	mov    rdi,rax
    af62:	e8 c9 78 ff ff       	call   2830 <strtok@plt>
    af67:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    af6b:	eb 4c                	jmp    afb9 <homenet_toi+0x85>
    af6d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    af71:	48 89 c7             	mov    rdi,rax
    af74:	e8 e7 77 ff ff       	call   2760 <atoi@plt>
    af79:	89 c3                	mov    ebx,eax
    af7b:	48 8d 45 df          	lea    rax,[rbp-0x21]
    af7f:	48 89 c7             	mov    rdi,rax
    af82:	e8 e9 76 ff ff       	call   2670 <strlen@plt>
    af87:	48 8d 55 df          	lea    rdx,[rbp-0x21]
    af8b:	48 01 d0             	add    rax,rdx
    af8e:	89 da                	mov    edx,ebx
    af90:	48 8d 35 3b 2e 00 00 	lea    rsi,[rip+0x2e3b]        # ddd2 <_IO_stdin_used+0x1dd2>
    af97:	48 89 c7             	mov    rdi,rax
    af9a:	b8 00 00 00 00       	mov    eax,0x0
    af9f:	e8 0c 77 ff ff       	call   26b0 <sprintf@plt>
    afa4:	48 8d 35 25 2e 00 00 	lea    rsi,[rip+0x2e25]        # ddd0 <_IO_stdin_used+0x1dd0>
    afab:	bf 00 00 00 00       	mov    edi,0x0
    afb0:	e8 7b 78 ff ff       	call   2830 <strtok@plt>
    afb5:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    afb9:	48 83 7d d0 00       	cmp    QWORD PTR [rbp-0x30],0x0
    afbe:	75 ad                	jne    af6d <homenet_toi+0x39>
    afc0:	48 8d 45 df          	lea    rax,[rbp-0x21]
    afc4:	ba 10 00 00 00       	mov    edx,0x10
    afc9:	be 00 00 00 00       	mov    esi,0x0
    afce:	48 89 c7             	mov    rdi,rax
    afd1:	e8 6a 77 ff ff       	call   2740 <strtol@plt>
    afd6:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    afda:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    afe1:	00 00 
    afe3:	74 05                	je     afea <homenet_toi+0xb6>
    afe5:	e8 f6 77 ff ff       	call   27e0 <__stack_chk_fail@plt>
    afea:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    afee:	c9                   	leave  
    afef:	c3                   	ret    

000000000000aff0 <tcp_check_sum_passed>:
    aff0:	f3 0f 1e fa          	endbr64 
    aff4:	55                   	push   rbp
    aff5:	48 89 e5             	mov    rbp,rsp
    aff8:	41 54                	push   r12
    affa:	53                   	push   rbx
    affb:	48 83 ec 30          	sub    rsp,0x30
    afff:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    b003:	48 89 75 c0          	mov    QWORD PTR [rbp-0x40],rsi
    b007:	bb 00 00 00 00       	mov    ebx,0x0
    b00c:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    b010:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    b014:	0f b7 c0             	movzx  eax,ax
    b017:	89 c7                	mov    edi,eax
    b019:	e8 a2 76 ff ff       	call   26c0 <ntohs@plt>
    b01e:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    b022:	0f b6 12             	movzx  edx,BYTE PTR [rdx]
    b025:	83 e2 0f             	and    edx,0xf
    b028:	0f b6 d2             	movzx  edx,dl
    b02b:	c1 e2 02             	shl    edx,0x2
    b02e:	29 d0                	sub    eax,edx
    b030:	66 89 45 de          	mov    WORD PTR [rbp-0x22],ax
    b034:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b038:	0f b7 40 10          	movzx  eax,WORD PTR [rax+0x10]
    b03c:	0f b7 c0             	movzx  eax,ax
    b03f:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    b043:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b047:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    b04b:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b04f:	66 c7 40 10 00 00    	mov    WORD PTR [rax+0x10],0x0
    b055:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    b059:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    b05c:	c1 e8 10             	shr    eax,0x10
    b05f:	89 c0                	mov    eax,eax
    b061:	0f b7 c0             	movzx  eax,ax
    b064:	48 01 c3             	add    rbx,rax
    b067:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    b06b:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    b06e:	89 c0                	mov    eax,eax
    b070:	0f b7 c0             	movzx  eax,ax
    b073:	48 01 c3             	add    rbx,rax
    b076:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    b07a:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    b07d:	c1 e8 10             	shr    eax,0x10
    b080:	89 c0                	mov    eax,eax
    b082:	0f b7 c0             	movzx  eax,ax
    b085:	48 01 c3             	add    rbx,rax
    b088:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    b08c:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    b08f:	89 c0                	mov    eax,eax
    b091:	0f b7 c0             	movzx  eax,ax
    b094:	48 01 c3             	add    rbx,rax
    b097:	bf 06 00 00 00       	mov    edi,0x6
    b09c:	e8 af 74 ff ff       	call   2550 <htons@plt>
    b0a1:	0f b7 c0             	movzx  eax,ax
    b0a4:	48 01 c3             	add    rbx,rax
    b0a7:	0f b7 45 de          	movzx  eax,WORD PTR [rbp-0x22]
    b0ab:	89 c7                	mov    edi,eax
    b0ad:	e8 9e 74 ff ff       	call   2550 <htons@plt>
    b0b2:	0f b7 c0             	movzx  eax,ax
    b0b5:	48 01 c3             	add    rbx,rax
    b0b8:	eb 1a                	jmp    b0d4 <tcp_check_sum_passed+0xe4>
    b0ba:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b0be:	48 8d 50 14          	lea    rdx,[rax+0x14]
    b0c2:	48 89 55 c0          	mov    QWORD PTR [rbp-0x40],rdx
    b0c6:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b0c9:	0f b6 c0             	movzx  eax,al
    b0cc:	48 01 c3             	add    rbx,rax
    b0cf:	66 83 6d de 02       	sub    WORD PTR [rbp-0x22],0x2
    b0d4:	66 83 7d de 01       	cmp    WORD PTR [rbp-0x22],0x1
    b0d9:	77 df                	ja     b0ba <tcp_check_sum_passed+0xca>
    b0db:	66 83 7d de 00       	cmp    WORD PTR [rbp-0x22],0x0
    b0e0:	74 1d                	je     b0ff <tcp_check_sum_passed+0x10f>
    b0e2:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b0e6:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b0e9:	0f b6 c0             	movzx  eax,al
    b0ec:	48 01 c3             	add    rbx,rax
    b0ef:	eb 0e                	jmp    b0ff <tcp_check_sum_passed+0x10f>
    b0f1:	0f b7 c3             	movzx  eax,bx
    b0f4:	48 c1 eb 10          	shr    rbx,0x10
    b0f8:	48 89 da             	mov    rdx,rbx
    b0fb:	48 8d 1c 10          	lea    rbx,[rax+rdx*1]
    b0ff:	48 89 d8             	mov    rax,rbx
    b102:	48 c1 e8 10          	shr    rax,0x10
    b106:	48 85 c0             	test   rax,rax
    b109:	75 e6                	jne    b0f1 <tcp_check_sum_passed+0x101>
    b10b:	48 f7 d3             	not    rbx
    b10e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b112:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    b116:	66 89 50 10          	mov    WORD PTR [rax+0x10],dx
    b11a:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b11e:	0f b7 40 10          	movzx  eax,WORD PTR [rax+0x10]
    b122:	0f b7 c0             	movzx  eax,ax
    b125:	89 c7                	mov    edi,eax
    b127:	e8 94 75 ff ff       	call   26c0 <ntohs@plt>
    b12c:	44 0f b7 e0          	movzx  r12d,ax
    b130:	89 d8                	mov    eax,ebx
    b132:	0f b7 c0             	movzx  eax,ax
    b135:	89 c7                	mov    edi,eax
    b137:	e8 84 75 ff ff       	call   26c0 <ntohs@plt>
    b13c:	0f b7 c0             	movzx  eax,ax
    b13f:	44 89 e2             	mov    edx,r12d
    b142:	89 c6                	mov    esi,eax
    b144:	48 8d 3d 8c 2c 00 00 	lea    rdi,[rip+0x2c8c]        # ddd7 <_IO_stdin_used+0x1dd7>
    b14b:	b8 00 00 00 00       	mov    eax,0x0
    b150:	e8 8b 73 ff ff       	call   24e0 <printf@plt>
    b155:	89 d8                	mov    eax,ebx
    b157:	0f b7 c0             	movzx  eax,ax
    b15a:	89 c7                	mov    edi,eax
    b15c:	e8 5f 75 ff ff       	call   26c0 <ntohs@plt>
    b161:	89 c3                	mov    ebx,eax
    b163:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    b167:	0f b7 c0             	movzx  eax,ax
    b16a:	89 c7                	mov    edi,eax
    b16c:	e8 4f 75 ff ff       	call   26c0 <ntohs@plt>
    b171:	66 39 c3             	cmp    bx,ax
    b174:	75 07                	jne    b17d <tcp_check_sum_passed+0x18d>
    b176:	b8 01 00 00 00       	mov    eax,0x1
    b17b:	eb 05                	jmp    b182 <tcp_check_sum_passed+0x192>
    b17d:	b8 00 00 00 00       	mov    eax,0x0
    b182:	48 83 c4 30          	add    rsp,0x30
    b186:	5b                   	pop    rbx
    b187:	41 5c                	pop    r12
    b189:	5d                   	pop    rbp
    b18a:	c3                   	ret    

000000000000b18b <run_hello_script>:
    b18b:	f3 0f 1e fa          	endbr64 
    b18f:	55                   	push   rbp
    b190:	48 89 e5             	mov    rbp,rsp
    b193:	48 83 ec 10          	sub    rsp,0x10
    b197:	e8 14 76 ff ff       	call   27b0 <luaL_newstate@plt>
    b19c:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b1a0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b1a4:	48 89 c7             	mov    rdi,rax
    b1a7:	e8 24 76 ff ff       	call   27d0 <luaL_openlibs@plt>
    b1ac:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b1b0:	ba 00 00 00 00       	mov    edx,0x0
    b1b5:	48 8d 35 2c 2c 00 00 	lea    rsi,[rip+0x2c2c]        # dde8 <_IO_stdin_used+0x1de8>
    b1bc:	48 89 c7             	mov    rdi,rax
    b1bf:	e8 8c 75 ff ff       	call   2750 <luaL_loadfilex@plt>
    b1c4:	85 c0                	test   eax,eax
    b1c6:	75 2b                	jne    b1f3 <run_hello_script+0x68>
    b1c8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b1cc:	41 b9 00 00 00 00    	mov    r9d,0x0
    b1d2:	41 b8 00 00 00 00    	mov    r8d,0x0
    b1d8:	b9 00 00 00 00       	mov    ecx,0x0
    b1dd:	ba ff ff ff ff       	mov    edx,0xffffffff
    b1e2:	be 00 00 00 00       	mov    esi,0x0
    b1e7:	48 89 c7             	mov    rdi,rax
    b1ea:	e8 11 75 ff ff       	call   2700 <lua_pcallk@plt>
    b1ef:	85 c0                	test   eax,eax
    b1f1:	74 07                	je     b1fa <run_hello_script+0x6f>
    b1f3:	b8 01 00 00 00       	mov    eax,0x1
    b1f8:	eb 05                	jmp    b1ff <run_hello_script+0x74>
    b1fa:	b8 00 00 00 00       	mov    eax,0x0
    b1ff:	85 c0                	test   eax,eax
    b201:	75 1e                	jne    b221 <run_hello_script+0x96>
    b203:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b207:	48 89 c7             	mov    rdi,rax
    b20a:	e8 91 75 ff ff       	call   27a0 <lua_gettop@plt>
    b20f:	f7 d0                	not    eax
    b211:	89 c2                	mov    edx,eax
    b213:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b217:	89 d6                	mov    esi,edx
    b219:	48 89 c7             	mov    rdi,rax
    b21c:	e8 0f 74 ff ff       	call   2630 <lua_settop@plt>
    b221:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b225:	48 89 c7             	mov    rdi,rax
    b228:	e8 13 76 ff ff       	call   2840 <lua_close@plt>
    b22d:	90                   	nop
    b22e:	c9                   	leave  
    b22f:	c3                   	ret    

000000000000b230 <collect_scripts>:
    b230:	f3 0f 1e fa          	endbr64 
    b234:	55                   	push   rbp
    b235:	48 89 e5             	mov    rbp,rsp
    b238:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    b23f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b246:	00 00 
    b248:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b24c:	31 c0                	xor    eax,eax
    b24e:	48 8d 35 b1 2b 00 00 	lea    rsi,[rip+0x2bb1]        # de06 <_IO_stdin_used+0x1e06>
    b255:	48 8d 3d ac 2b 00 00 	lea    rdi,[rip+0x2bac]        # de08 <_IO_stdin_used+0x1e08>
    b25c:	e8 6f 73 ff ff       	call   25d0 <fopen@plt>
    b261:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
    b265:	48 83 7d 80 00       	cmp    QWORD PTR [rbp-0x80],0x0
    b26a:	75 16                	jne    b282 <collect_scripts+0x52>
    b26c:	48 8d 3d ad 2b 00 00 	lea    rdi,[rip+0x2bad]        # de20 <_IO_stdin_used+0x1e20>
    b273:	e8 c8 72 ff ff       	call   2540 <puts@plt>
    b278:	bf ff ff ff ff       	mov    edi,0xffffffff
    b27d:	e8 de 72 ff ff       	call   2560 <exit@plt>
    b282:	48 c7 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],0x0
    b289:	00 00 00 00 
    b28d:	48 8d 45 90          	lea    rax,[rbp-0x70]
    b291:	ba 00 00 00 00       	mov    edx,0x0
    b296:	48 8d 35 c5 2b 00 00 	lea    rsi,[rip+0x2bc5]        # de62 <_IO_stdin_used+0x1e62>
    b29d:	48 89 c7             	mov    rdi,rax
    b2a0:	e8 cb 74 ff ff       	call   2770 <regcomp@plt>
    b2a5:	e9 86 00 00 00       	jmp    b330 <collect_scripts+0x100>
    b2aa:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b2b1:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b2b4:	3c 23                	cmp    al,0x23
    b2b6:	75 02                	jne    b2ba <collect_scripts+0x8a>
    b2b8:	eb 76                	jmp    b330 <collect_scripts+0x100>
    b2ba:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b2c1:	ba 0e 00 00 00       	mov    edx,0xe
    b2c6:	48 8d 35 9f 2b 00 00 	lea    rsi,[rip+0x2b9f]        # de6c <_IO_stdin_used+0x1e6c>
    b2cd:	48 89 c7             	mov    rdi,rax
    b2d0:	e8 db 72 ff ff       	call   25b0 <strncmp@plt>
    b2d5:	85 c0                	test   eax,eax
    b2d7:	75 34                	jne    b30d <collect_scripts+0xdd>
    b2d9:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b2e0:	48 8d 50 0e          	lea    rdx,[rax+0xe]
    b2e4:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b2e8:	48 89 d6             	mov    rsi,rdx
    b2eb:	48 89 c7             	mov    rdi,rax
    b2ee:	e8 2d 75 ff ff       	call   2820 <strcpy@plt>
    b2f3:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b2f7:	48 8d 35 7d 2b 00 00 	lea    rsi,[rip+0x2b7d]        # de7b <_IO_stdin_used+0x1e7b>
    b2fe:	48 89 c7             	mov    rdi,rax
    b301:	e8 8a 75 ff ff       	call   2890 <strcspn@plt>
    b306:	c6 44 05 d0 00       	mov    BYTE PTR [rbp+rax*1-0x30],0x0
    b30b:	eb 23                	jmp    b330 <collect_scripts+0x100>
    b30d:	48 8b b5 78 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x88]
    b314:	48 8d 45 90          	lea    rax,[rbp-0x70]
    b318:	41 b8 00 00 00 00    	mov    r8d,0x0
    b31e:	b9 00 00 00 00       	mov    ecx,0x0
    b323:	ba 00 00 00 00       	mov    edx,0x0
    b328:	48 89 c7             	mov    rdi,rax
    b32b:	e8 b0 72 ff ff       	call   25e0 <regexec@plt>
    b330:	48 8b 55 80          	mov    rdx,QWORD PTR [rbp-0x80]
    b334:	48 8d 8d 70 ff ff ff 	lea    rcx,[rbp-0x90]
    b33b:	48 8d 85 78 ff ff ff 	lea    rax,[rbp-0x88]
    b342:	48 89 ce             	mov    rsi,rcx
    b345:	48 89 c7             	mov    rdi,rax
    b348:	e8 c3 74 ff ff       	call   2810 <getline@plt>
    b34d:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    b351:	48 83 7d 88 ff       	cmp    QWORD PTR [rbp-0x78],0xffffffffffffffff
    b356:	0f 85 4e ff ff ff    	jne    b2aa <collect_scripts+0x7a>
    b35c:	90                   	nop
    b35d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b361:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    b368:	00 00 
    b36a:	74 05                	je     b371 <collect_scripts+0x141>
    b36c:	e8 6f 74 ff ff       	call   27e0 <__stack_chk_fail@plt>
    b371:	c9                   	leave  
    b372:	c3                   	ret    

000000000000b373 <ip6decode>:
    b373:	f3 0f 1e fa          	endbr64 
    b377:	55                   	push   rbp
    b378:	48 89 e5             	mov    rbp,rsp
    b37b:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    b382:	48 89 bd 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdi
    b389:	48 89 b5 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rsi
    b390:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b397:	00 00 
    b399:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b39d:	31 c0                	xor    eax,eax
    b39f:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b3a6:	48 83 c0 0e          	add    rax,0xe
    b3aa:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    b3ae:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    b3b2:	48 83 c0 08          	add    rax,0x8
    b3b6:	48 89 c7             	mov    rdi,rax
    b3b9:	e8 7f 7e ff ff       	call   323d <inet6_ntoa>
    b3be:	48 89 c1             	mov    rcx,rax
    b3c1:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b3c5:	ba 29 00 00 00       	mov    edx,0x29
    b3ca:	48 89 ce             	mov    rsi,rcx
    b3cd:	48 89 c7             	mov    rdi,rax
    b3d0:	e8 9b 74 ff ff       	call   2870 <strncpy@plt>
    b3d5:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    b3d9:	48 83 c0 18          	add    rax,0x18
    b3dd:	48 89 c7             	mov    rdi,rax
    b3e0:	e8 58 7e ff ff       	call   323d <inet6_ntoa>
    b3e5:	48 89 c1             	mov    rcx,rax
    b3e8:	48 8d 45 90          	lea    rax,[rbp-0x70]
    b3ec:	ba 29 00 00 00       	mov    edx,0x29
    b3f1:	48 89 ce             	mov    rsi,rcx
    b3f4:	48 89 c7             	mov    rdi,rax
    b3f7:	e8 74 74 ff ff       	call   2870 <strncpy@plt>
    b3fc:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    b400:	0f b6 40 06          	movzx  eax,BYTE PTR [rax+0x6]
    b404:	0f b6 c0             	movzx  eax,al
    b407:	85 c0                	test   eax,eax
    b409:	75 1c                	jne    b427 <ip6decode+0xb4>
    b40b:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    b40f:	48 8d 4d c0          	lea    rcx,[rbp-0x40]
    b413:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b41a:	48 89 ce             	mov    rsi,rcx
    b41d:	48 89 c7             	mov    rdi,rax
    b420:	e8 b3 86 ff ff       	call   3ad8 <ip6_icmp_decode>
    b425:	eb 28                	jmp    b44f <ip6decode+0xdc>
    b427:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    b42b:	0f b6 40 06          	movzx  eax,BYTE PTR [rax+0x6]
    b42f:	0f b6 c8             	movzx  ecx,al
    b432:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    b436:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b43a:	48 89 c6             	mov    rsi,rax
    b43d:	48 8d 3d 3c 2a 00 00 	lea    rdi,[rip+0x2a3c]        # de80 <_IO_stdin_used+0x1e80>
    b444:	b8 00 00 00 00       	mov    eax,0x0
    b449:	e8 92 70 ff ff       	call   24e0 <printf@plt>
    b44e:	90                   	nop
    b44f:	90                   	nop
    b450:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b454:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    b45b:	00 00 
    b45d:	74 05                	je     b464 <ip6decode+0xf1>
    b45f:	e8 7c 73 ff ff       	call   27e0 <__stack_chk_fail@plt>
    b464:	c9                   	leave  
    b465:	c3                   	ret    

000000000000b466 <print_mem_map>:
    b466:	f3 0f 1e fa          	endbr64 
    b46a:	55                   	push   rbp
    b46b:	48 89 e5             	mov    rbp,rsp
    b46e:	48 83 ec 10          	sub    rsp,0x10
    b472:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    b479:	eb 4c                	jmp    b4c7 <print_mem_map+0x61>
    b47b:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    b47e:	48 63 d0             	movsxd rdx,eax
    b481:	48 89 d0             	mov    rax,rdx
    b484:	48 c1 e0 02          	shl    rax,0x2
    b488:	48 01 d0             	add    rax,rdx
    b48b:	48 c1 e0 03          	shl    rax,0x3
    b48f:	48 8d 15 6a d3 12 00 	lea    rdx,[rip+0x12d36a]        # 138800 <fn_mem_map>
    b496:	48 01 d0             	add    rax,rdx
    b499:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b49d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b4a1:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    b4a4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b4a8:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    b4ab:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b4af:	48 89 c6             	mov    rsi,rax
    b4b2:	48 8d 3d ef 29 00 00 	lea    rdi,[rip+0x29ef]        # dea8 <_IO_stdin_used+0x1ea8>
    b4b9:	b8 00 00 00 00       	mov    eax,0x0
    b4be:	e8 1d 70 ff ff       	call   24e0 <printf@plt>
    b4c3:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    b4c7:	8b 05 33 fb 12 00    	mov    eax,DWORD PTR [rip+0x12fb33]        # 13b000 <fn_num>
    b4cd:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    b4d0:	7c a9                	jl     b47b <print_mem_map+0x15>
    b4d2:	90                   	nop
    b4d3:	90                   	nop
    b4d4:	c9                   	leave  
    b4d5:	c3                   	ret    

000000000000b4d6 <crash_handler>:
    b4d6:	f3 0f 1e fa          	endbr64 
    b4da:	55                   	push   rbp
    b4db:	48 89 e5             	mov    rbp,rsp
    b4de:	41 54                	push   r12
    b4e0:	53                   	push   rbx
    b4e1:	48 81 ec f0 00 00 00 	sub    rsp,0xf0
    b4e8:	89 bd 0c ff ff ff    	mov    DWORD PTR [rbp-0xf4],edi
    b4ee:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b4f5:	00 00 
    b4f7:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    b4fb:	31 c0                	xor    eax,eax
    b4fd:	48 8d 85 30 ff ff ff 	lea    rax,[rbp-0xd0]
    b504:	be 14 00 00 00       	mov    esi,0x14
    b509:	48 89 c7             	mov    rdi,rax
    b50c:	e8 ff 6f ff ff       	call   2510 <backtrace@plt>
    b511:	89 85 18 ff ff ff    	mov    DWORD PTR [rbp-0xe8],eax
    b517:	8b 95 18 ff ff ff    	mov    edx,DWORD PTR [rbp-0xe8]
    b51d:	48 8d 85 30 ff ff ff 	lea    rax,[rbp-0xd0]
    b524:	89 d6                	mov    esi,edx
    b526:	48 89 c7             	mov    rdi,rax
    b529:	e8 22 71 ff ff       	call   2650 <backtrace_symbols@plt>
    b52e:	48 89 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rax
    b535:	b8 00 00 00 00       	mov    eax,0x0
    b53a:	e8 ca 7e ff ff       	call   3409 <get_formated_time>
    b53f:	48 89 c6             	mov    rsi,rax
    b542:	48 8d 3d 7f 29 00 00 	lea    rdi,[rip+0x297f]        # dec8 <_IO_stdin_used+0x1ec8>
    b549:	b8 00 00 00 00       	mov    eax,0x0
    b54e:	e8 8d 6f ff ff       	call   24e0 <printf@plt>
    b553:	48 8d 3d 9d 29 00 00 	lea    rdi,[rip+0x299d]        # def7 <_IO_stdin_used+0x1ef7>
    b55a:	e8 e1 6f ff ff       	call   2540 <puts@plt>
    b55f:	48 83 bd 20 ff ff ff 	cmp    QWORD PTR [rbp-0xe0],0x0
    b566:	00 
    b567:	0f 84 6d 01 00 00    	je     b6da <crash_handler+0x204>
    b56d:	c7 85 14 ff ff ff 00 	mov    DWORD PTR [rbp-0xec],0x0
    b574:	00 00 00 
    b577:	e9 4c 01 00 00       	jmp    b6c8 <crash_handler+0x1f2>
    b57c:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b582:	48 98                	cdqe   
    b584:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    b58b:	00 
    b58c:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b593:	48 01 d0             	add    rax,rdx
    b596:	48 8b 00             	mov    rax,QWORD PTR [rax]
    b599:	48 8d 35 6b 29 00 00 	lea    rsi,[rip+0x296b]        # df0b <_IO_stdin_used+0x1f0b>
    b5a0:	48 89 c7             	mov    rdi,rax
    b5a3:	e8 68 71 ff ff       	call   2710 <strstr@plt>
    b5a8:	48 85 c0             	test   rax,rax
    b5ab:	0f 85 0f 01 00 00    	jne    b6c0 <crash_handler+0x1ea>
    b5b1:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b5b7:	48 98                	cdqe   
    b5b9:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    b5c0:	00 
    b5c1:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b5c8:	48 01 d0             	add    rax,rdx
    b5cb:	4c 8b 20             	mov    r12,QWORD PTR [rax]
    b5ce:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b5d4:	48 98                	cdqe   
    b5d6:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    b5dd:	00 
    b5de:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b5e5:	48 01 d0             	add    rax,rdx
    b5e8:	48 8b 00             	mov    rax,QWORD PTR [rax]
    b5eb:	be 2b 00 00 00       	mov    esi,0x2b
    b5f0:	48 89 c7             	mov    rdi,rax
    b5f3:	e8 ac 7f ff ff       	call   35a4 <strloc>
    b5f8:	48 98                	cdqe   
    b5fa:	48 83 c0 01          	add    rax,0x1
    b5fe:	49 8d 14 04          	lea    rdx,[r12+rax*1]
    b602:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b606:	48 8d 35 02 29 00 00 	lea    rsi,[rip+0x2902]        # df0f <_IO_stdin_used+0x1f0f>
    b60d:	48 89 c7             	mov    rdi,rax
    b610:	b8 00 00 00 00       	mov    eax,0x0
    b615:	e8 96 70 ff ff       	call   26b0 <sprintf@plt>
    b61a:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b61e:	be 29 00 00 00       	mov    esi,0x29
    b623:	48 89 c7             	mov    rdi,rax
    b626:	e8 79 7f ff ff       	call   35a4 <strloc>
    b62b:	48 98                	cdqe   
    b62d:	c6 44 05 d0 00       	mov    BYTE PTR [rbp+rax*1-0x30],0x0
    b632:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b636:	ba 10 00 00 00       	mov    edx,0x10
    b63b:	be 00 00 00 00       	mov    esi,0x0
    b640:	48 89 c7             	mov    rdi,rax
    b643:	e8 f8 70 ff ff       	call   2740 <strtol@plt>
    b648:	89 85 1c ff ff ff    	mov    DWORD PTR [rbp-0xe4],eax
    b64e:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [rbp-0xe4]
    b654:	89 c7                	mov    edi,eax
    b656:	e8 20 01 00 00       	call   b77b <offset_search>
    b65b:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
    b662:	83 bd 1c ff ff ff 00 	cmp    DWORD PTR [rbp-0xe4],0x0
    b669:	74 3a                	je     b6a5 <crash_handler+0x1cf>
    b66b:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    b672:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    b675:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    b67c:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    b67f:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    b686:	8b b5 1c ff ff ff    	mov    esi,DWORD PTR [rbp-0xe4]
    b68c:	41 89 f0             	mov    r8d,esi
    b68f:	48 89 c6             	mov    rsi,rax
    b692:	48 8d 3d 7f 28 00 00 	lea    rdi,[rip+0x287f]        # df18 <_IO_stdin_used+0x1f18>
    b699:	b8 00 00 00 00       	mov    eax,0x0
    b69e:	e8 3d 6e ff ff       	call   24e0 <printf@plt>
    b6a3:	eb 1c                	jmp    b6c1 <crash_handler+0x1eb>
    b6a5:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [rbp-0xe4]
    b6ab:	89 c6                	mov    esi,eax
    b6ad:	48 8d 3d 9c 28 00 00 	lea    rdi,[rip+0x289c]        # df50 <_IO_stdin_used+0x1f50>
    b6b4:	b8 00 00 00 00       	mov    eax,0x0
    b6b9:	e8 22 6e ff ff       	call   24e0 <printf@plt>
    b6be:	eb 01                	jmp    b6c1 <crash_handler+0x1eb>
    b6c0:	90                   	nop
    b6c1:	83 85 14 ff ff ff 01 	add    DWORD PTR [rbp-0xec],0x1
    b6c8:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b6ce:	3b 85 18 ff ff ff    	cmp    eax,DWORD PTR [rbp-0xe8]
    b6d4:	0f 8c a2 fe ff ff    	jl     b57c <crash_handler+0xa6>
    b6da:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b6e1:	48 89 c7             	mov    rdi,rax
    b6e4:	e8 77 6f ff ff       	call   2660 <free@plt>
    b6e9:	48 8d 3d 8a 28 00 00 	lea    rdi,[rip+0x288a]        # df7a <_IO_stdin_used+0x1f7a>
    b6f0:	e8 4b 6e ff ff       	call   2540 <puts@plt>
    b6f5:	89 c6                	mov    esi,eax
    b6f7:	48 8d 3d 8b 28 00 00 	lea    rdi,[rip+0x288b]        # df89 <_IO_stdin_used+0x1f89>
    b6fe:	b8 00 00 00 00       	mov    eax,0x0
    b703:	e8 d8 6d ff ff       	call   24e0 <printf@plt>
    b708:	89 d8                	mov    eax,ebx
    b70a:	89 c6                	mov    esi,eax
    b70c:	48 8d 3d 86 28 00 00 	lea    rdi,[rip+0x2886]        # df99 <_IO_stdin_used+0x1f99>
    b713:	b8 00 00 00 00       	mov    eax,0x0
    b718:	e8 c3 6d ff ff       	call   24e0 <printf@plt>
    b71d:	89 d8                	mov    eax,ebx
    b71f:	89 c6                	mov    esi,eax
    b721:	48 8d 3d 81 28 00 00 	lea    rdi,[rip+0x2881]        # dfa9 <_IO_stdin_used+0x1fa9>
    b728:	b8 00 00 00 00       	mov    eax,0x0
    b72d:	e8 ae 6d ff ff       	call   24e0 <printf@plt>
    b732:	89 c8                	mov    eax,ecx
    b734:	89 c6                	mov    esi,eax
    b736:	48 8d 3d 7c 28 00 00 	lea    rdi,[rip+0x287c]        # dfb9 <_IO_stdin_used+0x1fb9>
    b73d:	b8 00 00 00 00       	mov    eax,0x0
    b742:	e8 99 6d ff ff       	call   24e0 <printf@plt>
    b747:	89 e0                	mov    eax,esp
    b749:	89 c6                	mov    esi,eax
    b74b:	48 8d 3d 77 28 00 00 	lea    rdi,[rip+0x2877]        # dfc9 <_IO_stdin_used+0x1fc9>
    b752:	b8 00 00 00 00       	mov    eax,0x0
    b757:	e8 84 6d ff ff       	call   24e0 <printf@plt>
    b75c:	89 e8                	mov    eax,ebp
    b75e:	89 c6                	mov    esi,eax
    b760:	48 8d 3d 72 28 00 00 	lea    rdi,[rip+0x2872]        # dfd9 <_IO_stdin_used+0x1fd9>
    b767:	b8 00 00 00 00       	mov    eax,0x0
    b76c:	e8 6f 6d ff ff       	call   24e0 <printf@plt>
    b771:	bf 01 00 00 00       	mov    edi,0x1
    b776:	e8 e5 6d ff ff       	call   2560 <exit@plt>

000000000000b77b <offset_search>:
    b77b:	f3 0f 1e fa          	endbr64 
    b77f:	55                   	push   rbp
    b780:	48 89 e5             	mov    rbp,rsp
    b783:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    b786:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    b78d:	eb 44                	jmp    b7d3 <offset_search+0x58>
    b78f:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    b792:	48 63 d0             	movsxd rdx,eax
    b795:	48 89 d0             	mov    rax,rdx
    b798:	48 c1 e0 02          	shl    rax,0x2
    b79c:	48 01 d0             	add    rax,rdx
    b79f:	48 c1 e0 03          	shl    rax,0x3
    b7a3:	48 8d 15 56 d0 12 00 	lea    rdx,[rip+0x12d056]        # 138800 <fn_mem_map>
    b7aa:	48 01 d0             	add    rax,rdx
    b7ad:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b7b1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b7b5:	8b 40 20             	mov    eax,DWORD PTR [rax+0x20]
    b7b8:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    b7bb:	76 12                	jbe    b7cf <offset_search+0x54>
    b7bd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b7c1:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    b7c4:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    b7c7:	73 06                	jae    b7cf <offset_search+0x54>
    b7c9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b7cd:	eb 14                	jmp    b7e3 <offset_search+0x68>
    b7cf:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    b7d3:	8b 05 27 f8 12 00    	mov    eax,DWORD PTR [rip+0x12f827]        # 13b000 <fn_num>
    b7d9:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    b7dc:	7c b1                	jl     b78f <offset_search+0x14>
    b7de:	b8 00 00 00 00       	mov    eax,0x0
    b7e3:	5d                   	pop    rbp
    b7e4:	c3                   	ret    

000000000000b7e5 <add_fn>:
    b7e5:	f3 0f 1e fa          	endbr64 
    b7e9:	55                   	push   rbp
    b7ea:	48 89 e5             	mov    rbp,rsp
    b7ed:	48 83 ec 20          	sub    rsp,0x20
    b7f1:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    b7f5:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    b7f8:	89 55 e0             	mov    DWORD PTR [rbp-0x20],edx
    b7fb:	8b 05 ff f7 12 00    	mov    eax,DWORD PTR [rip+0x12f7ff]        # 13b000 <fn_num>
    b801:	8d 50 01             	lea    edx,[rax+0x1]
    b804:	89 15 f6 f7 12 00    	mov    DWORD PTR [rip+0x12f7f6],edx        # 13b000 <fn_num>
    b80a:	48 63 d0             	movsxd rdx,eax
    b80d:	48 89 d0             	mov    rax,rdx
    b810:	48 c1 e0 02          	shl    rax,0x2
    b814:	48 01 d0             	add    rax,rdx
    b817:	48 c1 e0 03          	shl    rax,0x3
    b81b:	48 8d 15 de cf 12 00 	lea    rdx,[rip+0x12cfde]        # 138800 <fn_mem_map>
    b822:	48 01 d0             	add    rax,rdx
    b825:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b829:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b82d:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    b831:	48 89 d6             	mov    rsi,rdx
    b834:	48 89 c7             	mov    rdi,rax
    b837:	e8 e4 6f ff ff       	call   2820 <strcpy@plt>
    b83c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b840:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    b843:	89 50 20             	mov    DWORD PTR [rax+0x20],edx
    b846:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b84a:	8b 55 e0             	mov    edx,DWORD PTR [rbp-0x20]
    b84d:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    b850:	90                   	nop
    b851:	c9                   	leave  
    b852:	c3                   	ret    

000000000000b853 <load_fn_mem_map>:
    b853:	f3 0f 1e fa          	endbr64 
    b857:	55                   	push   rbp
    b858:	48 89 e5             	mov    rbp,rsp
    b85b:	53                   	push   rbx
    b85c:	48 83 ec 78          	sub    rsp,0x78
    b860:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b867:	00 00 
    b869:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    b86d:	31 c0                	xor    eax,eax
    b86f:	48 8d 35 7a 27 00 00 	lea    rsi,[rip+0x277a]        # dff0 <_IO_stdin_used+0x1ff0>
    b876:	48 8d 3d 75 27 00 00 	lea    rdi,[rip+0x2775]        # dff2 <_IO_stdin_used+0x1ff2>
    b87d:	e8 4e 6d ff ff       	call   25d0 <fopen@plt>
    b882:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    b886:	48 83 7d b0 00       	cmp    QWORD PTR [rbp-0x50],0x0
    b88b:	75 16                	jne    b8a3 <load_fn_mem_map+0x50>
    b88d:	48 8d 3d 7c 27 00 00 	lea    rdi,[rip+0x277c]        # e010 <_IO_stdin_used+0x2010>
    b894:	e8 a7 6c ff ff       	call   2540 <puts@plt>
    b899:	bf ff ff ff ff       	mov    edi,0xffffffff
    b89e:	e8 bd 6c ff ff       	call   2560 <exit@plt>
    b8a3:	48 c7 45 98 00 00 00 	mov    QWORD PTR [rbp-0x68],0x0
    b8aa:	00 
    b8ab:	48 c7 45 a0 00 00 00 	mov    QWORD PTR [rbp-0x60],0x0
    b8b2:	00 
    b8b3:	e9 db 00 00 00       	jmp    b993 <load_fn_mem_map+0x140>
    b8b8:	48 8b 5d 98          	mov    rbx,QWORD PTR [rbp-0x68]
    b8bc:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    b8c0:	48 8d 35 b0 27 00 00 	lea    rsi,[rip+0x27b0]        # e077 <_IO_stdin_used+0x2077>
    b8c7:	48 89 c7             	mov    rdi,rax
    b8ca:	e8 c1 6f ff ff       	call   2890 <strcspn@plt>
    b8cf:	48 01 d8             	add    rax,rbx
    b8d2:	c6 00 00             	mov    BYTE PTR [rax],0x0
    b8d5:	c7 45 94 00 00 00 00 	mov    DWORD PTR [rbp-0x6c],0x0
    b8dc:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    b8e0:	48 8d 35 92 27 00 00 	lea    rsi,[rip+0x2792]        # e079 <_IO_stdin_used+0x2079>
    b8e7:	48 89 c7             	mov    rdi,rax
    b8ea:	e8 41 6f ff ff       	call   2830 <strtok@plt>
    b8ef:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    b8f3:	eb 7f                	jmp    b974 <load_fn_mem_map+0x121>
    b8f5:	83 7d 94 02          	cmp    DWORD PTR [rbp-0x6c],0x2
    b8f9:	74 44                	je     b93f <load_fn_mem_map+0xec>
    b8fb:	83 7d 94 02          	cmp    DWORD PTR [rbp-0x6c],0x2
    b8ff:	7f 59                	jg     b95a <load_fn_mem_map+0x107>
    b901:	83 7d 94 00          	cmp    DWORD PTR [rbp-0x6c],0x0
    b905:	74 08                	je     b90f <load_fn_mem_map+0xbc>
    b907:	83 7d 94 01          	cmp    DWORD PTR [rbp-0x6c],0x1
    b90b:	74 17                	je     b924 <load_fn_mem_map+0xd1>
    b90d:	eb 4b                	jmp    b95a <load_fn_mem_map+0x107>
    b90f:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    b913:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b917:	48 89 d6             	mov    rsi,rdx
    b91a:	48 89 c7             	mov    rdi,rax
    b91d:	e8 fe 6e ff ff       	call   2820 <strcpy@plt>
    b922:	eb 37                	jmp    b95b <load_fn_mem_map+0x108>
    b924:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    b928:	ba 10 00 00 00       	mov    edx,0x10
    b92d:	be 00 00 00 00       	mov    esi,0x0
    b932:	48 89 c7             	mov    rdi,rax
    b935:	e8 06 6e ff ff       	call   2740 <strtol@plt>
    b93a:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    b93d:	eb 1c                	jmp    b95b <load_fn_mem_map+0x108>
    b93f:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    b943:	ba 10 00 00 00       	mov    edx,0x10
    b948:	be 00 00 00 00       	mov    esi,0x0
    b94d:	48 89 c7             	mov    rdi,rax
    b950:	e8 eb 6d ff ff       	call   2740 <strtol@plt>
    b955:	89 45 90             	mov    DWORD PTR [rbp-0x70],eax
    b958:	eb 01                	jmp    b95b <load_fn_mem_map+0x108>
    b95a:	90                   	nop
    b95b:	48 8d 35 17 27 00 00 	lea    rsi,[rip+0x2717]        # e079 <_IO_stdin_used+0x2079>
    b962:	bf 00 00 00 00       	mov    edi,0x0
    b967:	e8 c4 6e ff ff       	call   2830 <strtok@plt>
    b96c:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    b970:	83 45 94 01          	add    DWORD PTR [rbp-0x6c],0x1
    b974:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
    b979:	0f 85 76 ff ff ff    	jne    b8f5 <load_fn_mem_map+0xa2>
    b97f:	8b 55 90             	mov    edx,DWORD PTR [rbp-0x70]
    b982:	8b 4d 8c             	mov    ecx,DWORD PTR [rbp-0x74]
    b985:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b989:	89 ce                	mov    esi,ecx
    b98b:	48 89 c7             	mov    rdi,rax
    b98e:	e8 52 fe ff ff       	call   b7e5 <add_fn>
    b993:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
    b997:	48 8d 4d a0          	lea    rcx,[rbp-0x60]
    b99b:	48 8d 45 98          	lea    rax,[rbp-0x68]
    b99f:	48 89 ce             	mov    rsi,rcx
    b9a2:	48 89 c7             	mov    rdi,rax
    b9a5:	e8 66 6e ff ff       	call   2810 <getline@plt>
    b9aa:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    b9ae:	48 83 7d b8 ff       	cmp    QWORD PTR [rbp-0x48],0xffffffffffffffff
    b9b3:	0f 85 ff fe ff ff    	jne    b8b8 <load_fn_mem_map+0x65>
    b9b9:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b9bd:	48 89 c7             	mov    rdi,rax
    b9c0:	e8 9b 6e ff ff       	call   2860 <fclose@plt>
    b9c5:	90                   	nop
    b9c6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    b9ca:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    b9d1:	00 00 
    b9d3:	74 05                	je     b9da <load_fn_mem_map+0x187>
    b9d5:	e8 06 6e ff ff       	call   27e0 <__stack_chk_fail@plt>
    b9da:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    b9de:	c9                   	leave  
    b9df:	c3                   	ret    

000000000000b9e0 <pps_monitor>:
    b9e0:	f3 0f 1e fa          	endbr64 
    b9e4:	55                   	push   rbp
    b9e5:	48 89 e5             	mov    rbp,rsp
    b9e8:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    b9ef:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b9f6:	00 00 
    b9f8:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b9fc:	31 c0                	xor    eax,eax
    b9fe:	8b 05 1c f6 12 00    	mov    eax,DWORD PTR [rip+0x12f61c]        # 13b020 <current_log_num.3>
    ba04:	85 c0                	test   eax,eax
    ba06:	0f 85 bd 00 00 00    	jne    bac9 <pps_monitor+0xe9>
    ba0c:	c7 05 0e f6 12 00 00 	mov    DWORD PTR [rip+0x12f60e],0x0        # 13b024 <lines_written.2>
    ba13:	00 00 00 
    ba16:	48 8d 3d 63 26 00 00 	lea    rdi,[rip+0x2663]        # e080 <_IO_stdin_used+0x2080>
    ba1d:	e8 1e 6b ff ff       	call   2540 <puts@plt>
    ba22:	48 8d 3d 7a 26 00 00 	lea    rdi,[rip+0x267a]        # e0a3 <_IO_stdin_used+0x20a3>
    ba29:	e8 52 6c ff ff       	call   2680 <opendir@plt>
    ba2e:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    ba32:	48 83 7d a0 00       	cmp    QWORD PTR [rbp-0x60],0x0
    ba37:	75 27                	jne    ba60 <pps_monitor+0x80>
    ba39:	48 8d 3d 7f 26 00 00 	lea    rdi,[rip+0x267f]        # e0bf <_IO_stdin_used+0x20bf>
    ba40:	e8 8b 6e ff ff       	call   28d0 <perror@plt>
    ba45:	c7 05 d1 f5 12 00 00 	mov    DWORD PTR [rip+0x12f5d1],0x0        # 13b020 <current_log_num.3>
    ba4c:	00 00 00 
    ba4f:	eb 35                	jmp    ba86 <pps_monitor+0xa6>
    ba51:	8b 05 c9 f5 12 00    	mov    eax,DWORD PTR [rip+0x12f5c9]        # 13b020 <current_log_num.3>
    ba57:	83 c0 01             	add    eax,0x1
    ba5a:	89 05 c0 f5 12 00    	mov    DWORD PTR [rip+0x12f5c0],eax        # 13b020 <current_log_num.3>
    ba60:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
    ba64:	48 89 c7             	mov    rdi,rax
    ba67:	e8 34 6c ff ff       	call   26a0 <readdir@plt>
    ba6c:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    ba70:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
    ba75:	75 da                	jne    ba51 <pps_monitor+0x71>
    ba77:	8b 05 a3 f5 12 00    	mov    eax,DWORD PTR [rip+0x12f5a3]        # 13b020 <current_log_num.3>
    ba7d:	83 e8 02             	sub    eax,0x2
    ba80:	89 05 9a f5 12 00    	mov    DWORD PTR [rip+0x12f59a],eax        # 13b020 <current_log_num.3>
    ba86:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
    ba8a:	48 89 c7             	mov    rdi,rax
    ba8d:	e8 ee 6d ff ff       	call   2880 <closedir@plt>
    ba92:	8b 05 88 f5 12 00    	mov    eax,DWORD PTR [rip+0x12f588]        # 13b020 <current_log_num.3>
    ba98:	89 c6                	mov    esi,eax
    ba9a:	48 8d 3d 25 26 00 00 	lea    rdi,[rip+0x2625]        # e0c6 <_IO_stdin_used+0x20c6>
    baa1:	b8 00 00 00 00       	mov    eax,0x0
    baa6:	e8 35 6a ff ff       	call   24e0 <printf@plt>
    baab:	8b 05 6f f5 12 00    	mov    eax,DWORD PTR [rip+0x12f56f]        # 13b020 <current_log_num.3>
    bab1:	83 c0 01             	add    eax,0x1
    bab4:	89 05 66 f5 12 00    	mov    DWORD PTR [rip+0x12f566],eax        # 13b020 <current_log_num.3>
    baba:	c7 05 64 f5 12 00 00 	mov    DWORD PTR [rip+0x12f564],0x0        # 13b028 <arr_num.1>
    bac1:	00 00 00 
    bac4:	e9 d0 02 00 00       	jmp    bd99 <pps_monitor+0x3b9>
    bac9:	8b 05 59 f5 12 00    	mov    eax,DWORD PTR [rip+0x12f559]        # 13b028 <arr_num.1>
    bacf:	3d 00 04 00 00       	cmp    eax,0x400
    bad4:	0f 85 8b 02 00 00    	jne    bd65 <pps_monitor+0x385>
    bada:	8b 05 44 f5 12 00    	mov    eax,DWORD PTR [rip+0x12f544]        # 13b024 <lines_written.2>
    bae0:	3d 57 02 00 00       	cmp    eax,0x257
    bae5:	7e 46                	jle    bb2d <pps_monitor+0x14d>
    bae7:	8b 05 33 f5 12 00    	mov    eax,DWORD PTR [rip+0x12f533]        # 13b020 <current_log_num.3>
    baed:	83 c0 01             	add    eax,0x1
    baf0:	89 05 2a f5 12 00    	mov    DWORD PTR [rip+0x12f52a],eax        # 13b020 <current_log_num.3>
    baf6:	8b 15 24 f5 12 00    	mov    edx,DWORD PTR [rip+0x12f524]        # 13b020 <current_log_num.3>
    bafc:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    bb00:	48 8d 35 d9 25 00 00 	lea    rsi,[rip+0x25d9]        # e0e0 <_IO_stdin_used+0x20e0>
    bb07:	48 89 c7             	mov    rdi,rax
    bb0a:	b8 00 00 00 00       	mov    eax,0x0
    bb0f:	e8 9c 6b ff ff       	call   26b0 <sprintf@plt>
    bb14:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    bb18:	48 8d 35 eb 25 00 00 	lea    rsi,[rip+0x25eb]        # e10a <_IO_stdin_used+0x210a>
    bb1f:	48 89 c7             	mov    rdi,rax
    bb22:	e8 a9 6a ff ff       	call   25d0 <fopen@plt>
    bb27:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
    bb2b:	eb 35                	jmp    bb62 <pps_monitor+0x182>
    bb2d:	8b 15 ed f4 12 00    	mov    edx,DWORD PTR [rip+0x12f4ed]        # 13b020 <current_log_num.3>
    bb33:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    bb37:	48 8d 35 a2 25 00 00 	lea    rsi,[rip+0x25a2]        # e0e0 <_IO_stdin_used+0x20e0>
    bb3e:	48 89 c7             	mov    rdi,rax
    bb41:	b8 00 00 00 00       	mov    eax,0x0
    bb46:	e8 65 6b ff ff       	call   26b0 <sprintf@plt>
    bb4b:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    bb4f:	48 8d 35 b6 25 00 00 	lea    rsi,[rip+0x25b6]        # e10c <_IO_stdin_used+0x210c>
    bb56:	48 89 c7             	mov    rdi,rax
    bb59:	e8 72 6a ff ff       	call   25d0 <fopen@plt>
    bb5e:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
    bb62:	bf 00 08 00 00       	mov    edi,0x800
    bb67:	e8 54 6a ff ff       	call   25c0 <malloc@plt>
    bb6c:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
    bb70:	bf 00 02 00 00       	mov    edi,0x200
    bb75:	e8 46 6a ff ff       	call   25c0 <malloc@plt>
    bb7a:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
    bb7e:	c7 85 74 ff ff ff ff 	mov    DWORD PTR [rbp-0x8c],0xffffffff
    bb85:	ff ff ff 
    bb88:	48 c7 45 88 00 00 00 	mov    QWORD PTR [rbp-0x78],0x0
    bb8f:	00 
    bb90:	c7 85 78 ff ff ff 00 	mov    DWORD PTR [rbp-0x88],0x0
    bb97:	00 00 00 
    bb9a:	e9 ca 00 00 00       	jmp    bc69 <pps_monitor+0x289>
    bb9f:	8b 85 78 ff ff ff    	mov    eax,DWORD PTR [rbp-0x88]
    bba5:	48 98                	cdqe   
    bba7:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    bbae:	00 
    bbaf:	48 8d 05 8a f4 12 00 	lea    rax,[rip+0x12f48a]        # 13b040 <pkt_times.0>
    bbb6:	48 8b 14 02          	mov    rdx,QWORD PTR [rdx+rax*1]
    bbba:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    bbbe:	48 39 c2             	cmp    rdx,rax
    bbc1:	75 20                	jne    bbe3 <pps_monitor+0x203>
    bbc3:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    bbc9:	48 98                	cdqe   
    bbcb:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    bbd2:	00 
    bbd3:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    bbd7:	48 01 d0             	add    rax,rdx
    bbda:	8b 10                	mov    edx,DWORD PTR [rax]
    bbdc:	83 c2 01             	add    edx,0x1
    bbdf:	89 10                	mov    DWORD PTR [rax],edx
    bbe1:	eb 7f                	jmp    bc62 <pps_monitor+0x282>
    bbe3:	8b 85 78 ff ff ff    	mov    eax,DWORD PTR [rbp-0x88]
    bbe9:	48 98                	cdqe   
    bbeb:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    bbf2:	00 
    bbf3:	48 8d 05 46 f4 12 00 	lea    rax,[rip+0x12f446]        # 13b040 <pkt_times.0>
    bbfa:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    bbfe:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    bc02:	83 85 74 ff ff ff 01 	add    DWORD PTR [rbp-0x8c],0x1
    bc09:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    bc0f:	48 98                	cdqe   
    bc11:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    bc18:	00 
    bc19:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    bc1d:	48 01 c2             	add    rdx,rax
    bc20:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    bc24:	48 89 02             	mov    QWORD PTR [rdx],rax
    bc27:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    bc2d:	48 98                	cdqe   
    bc2f:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    bc36:	00 
    bc37:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    bc3b:	48 01 d0             	add    rax,rdx
    bc3e:	c7 00 01 00 00 00    	mov    DWORD PTR [rax],0x1
    bc44:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    bc4a:	48 98                	cdqe   
    bc4c:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    bc53:	00 
    bc54:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    bc58:	48 01 d0             	add    rax,rdx
    bc5b:	8b 10                	mov    edx,DWORD PTR [rax]
    bc5d:	83 c2 01             	add    edx,0x1
    bc60:	89 10                	mov    DWORD PTR [rax],edx
    bc62:	83 85 78 ff ff ff 01 	add    DWORD PTR [rbp-0x88],0x1
    bc69:	81 bd 78 ff ff ff ff 	cmp    DWORD PTR [rbp-0x88],0x3ff
    bc70:	03 00 00 
    bc73:	0f 8e 26 ff ff ff    	jle    bb9f <pps_monitor+0x1bf>
    bc79:	c7 85 7c ff ff ff 00 	mov    DWORD PTR [rbp-0x84],0x0
    bc80:	00 00 00 
    bc83:	eb 52                	jmp    bcd7 <pps_monitor+0x2f7>
    bc85:	8b 85 7c ff ff ff    	mov    eax,DWORD PTR [rbp-0x84]
    bc8b:	48 98                	cdqe   
    bc8d:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    bc94:	00 
    bc95:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    bc99:	48 01 d0             	add    rax,rdx
    bc9c:	8b 08                	mov    ecx,DWORD PTR [rax]
    bc9e:	8b 85 7c ff ff ff    	mov    eax,DWORD PTR [rbp-0x84]
    bca4:	48 98                	cdqe   
    bca6:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    bcad:	00 
    bcae:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    bcb2:	48 01 d0             	add    rax,rdx
    bcb5:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    bcb8:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    bcbc:	48 8d 35 4b 24 00 00 	lea    rsi,[rip+0x244b]        # e10e <_IO_stdin_used+0x210e>
    bcc3:	48 89 c7             	mov    rdi,rax
    bcc6:	b8 00 00 00 00       	mov    eax,0x0
    bccb:	e8 10 6c ff ff       	call   28e0 <fprintf@plt>
    bcd0:	83 85 7c ff ff ff 01 	add    DWORD PTR [rbp-0x84],0x1
    bcd7:	8b 85 7c ff ff ff    	mov    eax,DWORD PTR [rbp-0x84]
    bcdd:	3b 85 74 ff ff ff    	cmp    eax,DWORD PTR [rbp-0x8c]
    bce3:	7c a0                	jl     bc85 <pps_monitor+0x2a5>
    bce5:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    bce9:	48 89 c7             	mov    rdi,rax
    bcec:	e8 6f 69 ff ff       	call   2660 <free@plt>
    bcf1:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    bcf5:	48 89 c7             	mov    rdi,rax
    bcf8:	e8 63 69 ff ff       	call   2660 <free@plt>
    bcfd:	ba 00 20 00 00       	mov    edx,0x2000
    bd02:	be 00 00 00 00       	mov    esi,0x0
    bd07:	48 8d 3d 32 f3 12 00 	lea    rdi,[rip+0x12f332]        # 13b040 <pkt_times.0>
    bd0e:	e8 dd 67 ff ff       	call   24f0 <memset@plt>
    bd13:	8b 05 0b f3 12 00    	mov    eax,DWORD PTR [rip+0x12f30b]        # 13b024 <lines_written.2>
    bd19:	3d 57 02 00 00       	cmp    eax,0x257
    bd1e:	7e 1b                	jle    bd3b <pps_monitor+0x35b>
    bd20:	c7 05 fa f2 12 00 00 	mov    DWORD PTR [rip+0x12f2fa],0x0        # 13b024 <lines_written.2>
    bd27:	00 00 00 
    bd2a:	8b 05 f0 f2 12 00    	mov    eax,DWORD PTR [rip+0x12f2f0]        # 13b020 <current_log_num.3>
    bd30:	83 c0 01             	add    eax,0x1
    bd33:	89 05 e7 f2 12 00    	mov    DWORD PTR [rip+0x12f2e7],eax        # 13b020 <current_log_num.3>
    bd39:	eb 14                	jmp    bd4f <pps_monitor+0x36f>
    bd3b:	8b 15 e3 f2 12 00    	mov    edx,DWORD PTR [rip+0x12f2e3]        # 13b024 <lines_written.2>
    bd41:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    bd47:	01 d0                	add    eax,edx
    bd49:	89 05 d5 f2 12 00    	mov    DWORD PTR [rip+0x12f2d5],eax        # 13b024 <lines_written.2>
    bd4f:	c7 05 cf f2 12 00 00 	mov    DWORD PTR [rip+0x12f2cf],0x0        # 13b028 <arr_num.1>
    bd56:	00 00 00 
    bd59:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    bd5d:	48 89 c7             	mov    rdi,rax
    bd60:	e8 fb 6a ff ff       	call   2860 <fclose@plt>
    bd65:	bf 00 00 00 00       	mov    edi,0x0
    bd6a:	e8 c1 6b ff ff       	call   2930 <time@plt>
    bd6f:	48 89 c2             	mov    rdx,rax
    bd72:	8b 05 b0 f2 12 00    	mov    eax,DWORD PTR [rip+0x12f2b0]        # 13b028 <arr_num.1>
    bd78:	8d 48 01             	lea    ecx,[rax+0x1]
    bd7b:	89 0d a7 f2 12 00    	mov    DWORD PTR [rip+0x12f2a7],ecx        # 13b028 <arr_num.1>
    bd81:	48 89 d1             	mov    rcx,rdx
    bd84:	89 c0                	mov    eax,eax
    bd86:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    bd8d:	00 
    bd8e:	48 8d 05 ab f2 12 00 	lea    rax,[rip+0x12f2ab]        # 13b040 <pkt_times.0>
    bd95:	48 89 0c 02          	mov    QWORD PTR [rdx+rax*1],rcx
    bd99:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    bd9d:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    bda4:	00 00 
    bda6:	74 05                	je     bdad <pps_monitor+0x3cd>
    bda8:	e8 33 6a ff ff       	call   27e0 <__stack_chk_fail@plt>
    bdad:	c9                   	leave  
    bdae:	c3                   	ret    

000000000000bdaf <get_line_num>:
    bdaf:	f3 0f 1e fa          	endbr64 
    bdb3:	55                   	push   rbp
    bdb4:	48 89 e5             	mov    rbp,rsp
    bdb7:	48 83 ec 20          	sub    rsp,0x20
    bdbb:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    bdbf:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    bdc6:	eb 0a                	jmp    bdd2 <get_line_num+0x23>
    bdc8:	80 7d fb 0a          	cmp    BYTE PTR [rbp-0x5],0xa
    bdcc:	75 04                	jne    bdd2 <get_line_num+0x23>
    bdce:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    bdd2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    bdd6:	48 89 c7             	mov    rdi,rax
    bdd9:	e8 f2 68 ff ff       	call   26d0 <fgetc@plt>
    bdde:	88 45 fb             	mov    BYTE PTR [rbp-0x5],al
    bde1:	80 7d fb ff          	cmp    BYTE PTR [rbp-0x5],0xff
    bde5:	75 e1                	jne    bdc8 <get_line_num+0x19>
    bde7:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    bdea:	c9                   	leave  
    bdeb:	c3                   	ret    

Disassembly of section .fini:

000000000000bdec <_fini>:
    bdec:	f3 0f 1e fa          	endbr64 
    bdf0:	48 83 ec 08          	sub    rsp,0x8
    bdf4:	48 83 c4 08          	add    rsp,0x8
    bdf8:	c3                   	ret    

Disassembly of section .rodata:

000000000000c000 <_IO_stdin_used>:
    c000:	01 00                	add    DWORD PTR [rax],eax
    c002:	02 00                	add    al,BYTE PTR [rax]
    c004:	2f                   	(bad)  
    c005:	65 74 63             	gs je  c06b <_IO_stdin_used+0x6b>
    c008:	2f                   	(bad)  
    c009:	76 69                	jbe    c074 <_IO_stdin_used+0x74>
    c00b:	67 69 6c 2f 76 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x76],0x6c696769
    c012:	69 6c 
    c014:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    c018:	66 00 2f             	data16 add BYTE PTR [rdi],ch
    c01b:	76 61                	jbe    c07e <_IO_stdin_used+0x7e>
    c01d:	72 2f                	jb     c04e <_IO_stdin_used+0x4e>
    c01f:	6c                   	ins    BYTE PTR es:[rdi],dx
    c020:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c021:	67 2f                	addr32 (bad) 
    c023:	76 69                	jbe    c08e <_IO_stdin_used+0x8e>
    c025:	67 69 6c 2f 73 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x6f6c6769
    c02c:	6c 6f 
    c02e:	67 2e 6c             	cs ins BYTE PTR es:[edi],dx
    c031:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c032:	67 00 2f             	add    BYTE PTR [edi],ch
    c035:	65 74 63             	gs je  c09b <_IO_stdin_used+0x9b>
    c038:	2f                   	(bad)  
    c039:	76 69                	jbe    c0a4 <_IO_stdin_used+0xa4>
    c03b:	67 69 6c 2f 68 6f 73 	imul   ebp,DWORD PTR [edi+ebp*1+0x68],0x7374736f
    c042:	74 73 
    c044:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    c048:	66 00 00             	data16 add BYTE PTR [rax],al
    c04b:	00 00                	add    BYTE PTR [rax],al
    c04d:	00 00                	add    BYTE PTR [rax],al
    c04f:	00 1b                	add    BYTE PTR [rbx],bl
    c051:	5b                   	pop    rbx
    c052:	39 30                	cmp    DWORD PTR [rax],esi
    c054:	6d                   	ins    DWORD PTR es:[rdi],dx
    c055:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c05a:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c05f:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c064:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c069:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c06e:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c073:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c078:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c07d:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c082:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c087:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c08c:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c091:	2d 1b 5b 6d 00       	sub    eax,0x6d5b1b
    c096:	00 00                	add    BYTE PTR [rax],al
    c098:	42                   	rex.X
    c099:	41                   	rex.B
    c09a:	44 2d 54 52 41 46    	rex.R sub eax,0x46415254
    c0a0:	46                   	rex.RX
    c0a1:	49                   	rex.WB
    c0a2:	43 20 55 6e          	rex.XB and BYTE PTR [r13+0x6e],dl
    c0a6:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c0aa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c0ab:	20 45 74             	and    BYTE PTR [rbp+0x74],al
    c0ae:	68 65 72 6e 74       	push   0x746e7265
    c0b3:	20 46 72             	and    BYTE PTR [rsi+0x72],al
    c0b6:	61                   	(bad)  
    c0b7:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0b8:	65 20 50 72          	and    BYTE PTR gs:[rax+0x72],dl
    c0bc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c0bd:	74 6f                	je     c12e <_IO_stdin_used+0x12e>
    c0bf:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    c0c2:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    c0c5:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0c6:	62                   	(bad)  
    c0c7:	65 72 00             	gs jb  c0ca <_IO_stdin_used+0xca>
    c0ca:	2f                   	(bad)  
    c0cb:	76 61                	jbe    c12e <_IO_stdin_used+0x12e>
    c0cd:	72 2f                	jb     c0fe <_IO_stdin_used+0xfe>
    c0cf:	6c                   	ins    BYTE PTR es:[rdi],dx
    c0d0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c0d1:	67 2f                	addr32 (bad) 
    c0d3:	76 69                	jbe    c13e <_IO_stdin_used+0x13e>
    c0d5:	67 69 6c 2f 73 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x6f6c6769
    c0dc:	6c 6f 
    c0de:	67 2e 6c             	cs ins BYTE PTR es:[edi],dx
    c0e1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c0e2:	67 00 00             	add    BYTE PTR [eax],al
    c0e5:	00 00                	add    BYTE PTR [rax],al
    c0e7:	00 1b                	add    BYTE PTR [rbx],bl
    c0e9:	5b                   	pop    rbx
    c0ea:	33 3b                	xor    edi,DWORD PTR [rbx]
    c0ec:	33 33                	xor    esi,DWORD PTR [rbx]
    c0ee:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0ef:	00 25 73 00 30 2e    	add    BYTE PTR [rip+0x2e300073],ah        # 2e30c168 <_end+0x2e1cf128>
    c0f5:	30 2e                	xor    BYTE PTR [rsi],ch
    c0f7:	30 2e                	xor    BYTE PTR [rsi],ch
    c0f9:	30 00                	xor    BYTE PTR [rax],al
    c0fb:	00 00                	add    BYTE PTR [rax],al
    c0fd:	00 00                	add    BYTE PTR [rax],al
    c0ff:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    c102:	4f 54                	rex.WRXB push r12
    c104:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    c108:	50                   	push   rax
    c109:	3a 20                	cmp    ah,BYTE PTR [rax]
    c10b:	50                   	push   rax
    c10c:	52                   	push   rdx
    c10d:	4f                   	rex.WRXB
    c10e:	42                   	rex.X
    c10f:	45 3a 20             	cmp    r12b,BYTE PTR [r8]
    c112:	57                   	push   rdi
    c113:	68 6f 20 68 61       	push   0x6168206f
    c118:	73 20                	jae    c13a <_IO_stdin_used+0x13a>
    c11a:	25 73 3f 0a 00       	and    eax,0xa3f73
    c11f:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    c122:	4f 54                	rex.WRXB push r12
    c124:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    c128:	50                   	push   rax
    c129:	3a 20                	cmp    ah,BYTE PTR [rax]
    c12b:	57                   	push   rdi
    c12c:	68 6f 20 69 73       	push   0x7369206f
    c131:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    c134:	20 25 73 3f 20 54    	and    BYTE PTR [rip+0x54203f73],ah        # 542100ad <_end+0x540d306d>
    c13a:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    c13c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c13d:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # cbb6 <_IO_stdin_used+0xbb6>
    c143:	00 00                	add    BYTE PTR [rax],al
    c145:	00 00                	add    BYTE PTR [rax],al
    c147:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    c14a:	4f 54                	rex.WRXB push r12
    c14c:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    c150:	50                   	push   rax
    c151:	3a 20                	cmp    ah,BYTE PTR [rax]
    c153:	52                   	push   rdx
    c154:	45 50                	rex.RB push r8
    c156:	4c 59                	rex.WR pop rcx
    c158:	3a 20                	cmp    ah,BYTE PTR [rax]
    c15a:	25 73 20 69 73       	and    eax,0x73692073
    c15f:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    c162:	20 25 73 0a 00 55    	and    BYTE PTR [rip+0x55000a73],ah        # 5500cbdb <_end+0x54ecfb9b>
    c168:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c169:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c16d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c16e:	20 41 52             	and    BYTE PTR [rcx+0x52],al
    c171:	50                   	push   rax
    c172:	20 6f 70             	and    BYTE PTR [rdi+0x70],ch
    c175:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
    c178:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    c17b:	25 64 0a 00 1b       	and    eax,0x1b000a64
    c180:	5b                   	pop    rbx
    c181:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    c184:	4c                   	rex.WR
    c185:	4f                   	rex.WRXB
    c186:	4f 50                	rex.WRXB push r8
    c188:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de201 <_end+0x3e1a11c1>
    c18e:	20 25 73 00 20 52    	and    BYTE PTR [rip+0x52200073],ah        # 5220c207 <_end+0x520cf1c7>
    c194:	45 50                	rex.RB push r8
    c196:	4c 59                	rex.WR pop rcx
    c198:	20 00                	and    BYTE PTR [rax],al
    c19a:	20 55 4e             	and    BYTE PTR [rbp+0x4e],dl
    c19d:	4b                   	rex.WXB
    c19e:	4e                   	rex.WRX
    c19f:	4f 57                	rex.WRXB push r15
    c1a1:	4e 20 4c 4f 4f       	rex.WRX and BYTE PTR [rdi+r9*2+0x4f],r9b
    c1a6:	50                   	push   rax
    c1a7:	20 46 55             	and    BYTE PTR [rsi+0x55],al
    c1aa:	4e                   	rex.WRX
    c1ab:	43 54                	rex.XB push r12
    c1ad:	49                   	rex.WB
    c1ae:	4f                   	rex.WRXB
    c1af:	4e 3a 25 64 20 0a 00 	rex.WRX cmp r12b,BYTE PTR [rip+0xa2064]        # ae21a <rules+0x9cf3a>
    c1b6:	00 00                	add    BYTE PTR [rax],al
    c1b8:	25 30 32 78 3a       	and    eax,0x3a783230
    c1bd:	25 30 32 78 3a       	and    eax,0x3a783230
    c1c2:	25 30 32 78 3a       	and    eax,0x3a783230
    c1c7:	25 30 32 78 3a       	and    eax,0x3a783230
    c1cc:	25 30 32 78 3a       	and    eax,0x3a783230
    c1d1:	25 30 32 78 00       	and    eax,0x783230
    c1d6:	25 64 2e 25 64       	and    eax,0x64252e64
    c1db:	2e 25 64 2e 25 64    	cs and eax,0x64252e64
    c1e1:	00 00                	add    BYTE PTR [rax],al
    c1e3:	00 00                	add    BYTE PTR [rax],al
    c1e5:	00 00                	add    BYTE PTR [rax],al
    c1e7:	00 25 30 32 78 25    	add    BYTE PTR [rip+0x25783230],ah        # 2578f41d <_end+0x256523dd>
    c1ed:	30 32                	xor    BYTE PTR [rdx],dh
    c1ef:	78 3a                	js     c22b <_IO_stdin_used+0x22b>
    c1f1:	25 30 32 78 25       	and    eax,0x25783230
    c1f6:	30 32                	xor    BYTE PTR [rdx],dh
    c1f8:	78 3a                	js     c234 <_IO_stdin_used+0x234>
    c1fa:	25 30 32 78 25       	and    eax,0x25783230
    c1ff:	30 32                	xor    BYTE PTR [rdx],dh
    c201:	78 3a                	js     c23d <_IO_stdin_used+0x23d>
    c203:	25 30 32 78 25       	and    eax,0x25783230
    c208:	30 32                	xor    BYTE PTR [rdx],dh
    c20a:	78 3a                	js     c246 <_IO_stdin_used+0x246>
    c20c:	25 30 32 78 25       	and    eax,0x25783230
    c211:	30 32                	xor    BYTE PTR [rdx],dh
    c213:	78 3a                	js     c24f <_IO_stdin_used+0x24f>
    c215:	25 30 32 78 25       	and    eax,0x25783230
    c21a:	30 32                	xor    BYTE PTR [rdx],dh
    c21c:	78 3a                	js     c258 <_IO_stdin_used+0x258>
    c21e:	25 30 32 78 25       	and    eax,0x25783230
    c223:	30 32                	xor    BYTE PTR [rdx],dh
    c225:	78 3a                	js     c261 <_IO_stdin_used+0x261>
    c227:	25 30 32 78 25       	and    eax,0x25783230
    c22c:	30 32                	xor    BYTE PTR [rdx],dh
    c22e:	78 00                	js     c230 <_IO_stdin_used+0x230>
    c230:	25 64 2d 25 30       	and    eax,0x30252d64
    c235:	32 64 2d 25          	xor    ah,BYTE PTR [rbp+rbp*1+0x25]
    c239:	30 32                	xor    BYTE PTR [rdx],dh
    c23b:	64 20 25 30 32 64 3a 	and    BYTE PTR fs:[rip+0x3a643230],ah        # 3a64f472 <_end+0x3a512432>
    c242:	25 30 32 64 3a       	and    eax,0x3a643230
    c247:	25 30 32 64 00       	and    eax,0x643230
    c24c:	25 73 3a 20 25       	and    eax,0x25203a73
    c251:	73 0a                	jae    c25d <_IO_stdin_used+0x25d>
    c253:	00 00                	add    BYTE PTR [rax],al
    c255:	00 00                	add    BYTE PTR [rax],al
    c257:	00 25 73 20 46 6f    	add    BYTE PTR [rip+0x6f462073],ah        # 6f46e2d0 <_end+0x6f331290>
    c25d:	75 6e                	jne    c2cd <_IO_stdin_used+0x2cd>
    c25f:	64 20 62 6c          	and    BYTE PTR fs:[rdx+0x6c],ah
    c263:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c264:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    c267:	64 20 69 70          	and    BYTE PTR fs:[rcx+0x70],ch
    c26b:	76 34                	jbe    c2a1 <_IO_stdin_used+0x2a1>
    c26d:	20 61 64             	and    BYTE PTR [rcx+0x64],ah
    c270:	64 72 65             	fs jb  c2d8 <_IO_stdin_used+0x2d8>
    c273:	73 73                	jae    c2e8 <_IO_stdin_used+0x2e8>
    c275:	28 64 65 73          	sub    BYTE PTR [rbp+riz*2+0x73],ah
    c279:	74 29                	je     c2a4 <_IO_stdin_used+0x2a4>
    c27b:	3a 20                	cmp    ah,BYTE PTR [rax]
    c27d:	25 73 0a 00 00       	and    eax,0xa73
    c282:	00 00                	add    BYTE PTR [rax],al
    c284:	00 00                	add    BYTE PTR [rax],al
    c286:	00 00                	add    BYTE PTR [rax],al
    c288:	25 73 20 46 6f       	and    eax,0x6f462073
    c28d:	75 6e                	jne    c2fd <_IO_stdin_used+0x2fd>
    c28f:	64 20 62 6c          	and    BYTE PTR fs:[rdx+0x6c],ah
    c293:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c294:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    c297:	64 20 69 70          	and    BYTE PTR fs:[rcx+0x70],ch
    c29b:	76 34                	jbe    c2d1 <_IO_stdin_used+0x2d1>
    c29d:	20 61 64             	and    BYTE PTR [rcx+0x64],ah
    c2a0:	64 72 65             	fs jb  c308 <_IO_stdin_used+0x308>
    c2a3:	73 73                	jae    c318 <_IO_stdin_used+0x318>
    c2a5:	28 73 72             	sub    BYTE PTR [rbx+0x72],dh
    c2a8:	63 29                	movsxd ebp,DWORD PTR [rcx]
    c2aa:	3a 20                	cmp    ah,BYTE PTR [rax]
    c2ac:	25 73 0a 00 1b       	and    eax,0x1b000a73
    c2b1:	5b                   	pop    rbx
    c2b2:	34 6d                	xor    al,0x6d
    c2b4:	00 25 73 46 72 61    	add    BYTE PTR [rip+0x61724673],ah        # 6173092d <_end+0x615f38ed>
    c2ba:	67 6d                	ins    DWORD PTR es:[edi],dx
    c2bc:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c2be:	74 65                	je     c325 <_IO_stdin_used+0x325>
    c2c0:	64 20 00             	and    BYTE PTR fs:[rax],al
    c2c3:	1b 5b 30             	sbb    ebx,DWORD PTR [rbx+0x30]
    c2c6:	6d                   	ins    DWORD PTR es:[rdi],dx
    c2c7:	00 25 73 00 20 25    	add    BYTE PTR [rip+0x25200073],ah        # 2520c340 <_end+0x250cf300>
    c2cd:	73 20                	jae    c2ef <_IO_stdin_used+0x2ef>
    c2cf:	2d 3e 20 25 73       	sub    eax,0x7325203e
    c2d4:	25 73 0a 00 49       	and    eax,0x49000a73
    c2d9:	50                   	push   rax
    c2da:	76 34                	jbe    c310 <_IO_stdin_used+0x310>
    c2dc:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de355 <_end+0x3e1a1315>
    c2e2:	20 25 73 20 50 72    	and    BYTE PTR [rip+0x72502073],ah        # 7250e35b <_end+0x723d131b>
    c2e8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c2e9:	74 6f                	je     c35a <_IO_stdin_used+0x35a>
    c2eb:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    c2ee:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    c2f1:	6d                   	ins    DWORD PTR es:[rdi],dx
    c2f2:	62                   	(bad)  
    c2f3:	65 72 20             	gs jb  c316 <_IO_stdin_used+0x316>
    c2f6:	3d 20 25 64 0a       	cmp    eax,0xa642520
    c2fb:	00 00                	add    BYTE PTR [rax],al
    c2fd:	00 00                	add    BYTE PTR [rax],al
    c2ff:	00 1b                	add    BYTE PTR [rbx],bl
    c301:	5b                   	pop    rbx
    c302:	33 35 6d 00 25 73    	xor    esi,DWORD PTR [rip+0x7325006d]        # 7325c375 <_end+0x7311f335>
    c308:	00 49 50             	add    BYTE PTR [rcx+0x50],cl
    c30b:	76 36                	jbe    c343 <_IO_stdin_used+0x343>
    c30d:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de386 <_end+0x3e1a1346>
    c313:	20 25 73 0a 00 09    	and    BYTE PTR [rip+0x9000a73],ah        # 900cd8c <_end+0x8ecfd4c>
    c319:	49                   	rex.WB
    c31a:	43                   	rex.XB
    c31b:	4d 50                	rex.WRB push r8
    c31d:	76 36                	jbe    c355 <_IO_stdin_used+0x355>
    c31f:	20 00                	and    BYTE PTR [rax],al
    c321:	20 52 6f             	and    BYTE PTR [rdx+0x6f],dl
    c324:	75 74                	jne    c39a <_IO_stdin_used+0x39a>
    c326:	65 72 20             	gs jb  c349 <_IO_stdin_used+0x349>
    c329:	53                   	push   rbx
    c32a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c32b:	6c                   	ins    BYTE PTR es:[rdi],dx
    c32c:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    c333:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c334:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c335:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    c338:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c339:	6d                   	ins    DWORD PTR es:[rdi],dx
    c33a:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # cdb3 <_IO_stdin_used+0xdb3>
    c340:	4d 75 6c             	rex.WRB jne c3af <_IO_stdin_used+0x3af>
    c343:	74 69                	je     c3ae <_IO_stdin_used+0x3ae>
    c345:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    c348:	74 20                	je     c36a <_IO_stdin_used+0x36a>
    c34a:	4c 69 73 74 65 6e 65 	imul   r14,QWORD PTR [rbx+0x74],0x72656e65
    c351:	72 
    c352:	20 52 65             	and    BYTE PTR [rdx+0x65],dl
    c355:	70 6f                	jo     c3c6 <_IO_stdin_used+0x3c6>
    c357:	72 74                	jb     c3cd <_IO_stdin_used+0x3cd>
    c359:	20 4d 65             	and    BYTE PTR [rbp+0x65],cl
    c35c:	73 73                	jae    c3d1 <_IO_stdin_used+0x3d1>
    c35e:	61                   	(bad)  
    c35f:	67 65 20 76 32       	and    BYTE PTR gs:[esi+0x32],dh
    c364:	00 4d 75             	add    BYTE PTR [rbp+0x75],cl
    c367:	6c                   	ins    BYTE PTR es:[rdi],dx
    c368:	74 69                	je     c3d3 <_IO_stdin_used+0x3d3>
    c36a:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    c36d:	74 20                	je     c38f <_IO_stdin_used+0x38f>
    c36f:	20 4c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],cl
    c373:	74 65                	je     c3da <_IO_stdin_used+0x3da>
    c375:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c376:	65 72 20             	gs jb  c399 <_IO_stdin_used+0x399>
    c379:	51                   	push   rcx
    c37a:	75 65                	jne    c3e1 <_IO_stdin_used+0x3e1>
    c37c:	72 79                	jb     c3f7 <_IO_stdin_used+0x3f7>
    c37e:	00 4e 65             	add    BYTE PTR [rsi+0x65],cl
    c381:	69 67 68 62 6f 72 20 	imul   esp,DWORD PTR [rdi+0x68],0x20726f62
    c388:	53                   	push   rbx
    c389:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c38a:	6c                   	ins    BYTE PTR es:[rdi],dx
    c38b:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    c392:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c393:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c394:	00 1b                	add    BYTE PTR [rbx],bl
    c396:	5b                   	pop    rbx
    c397:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    c39a:	00 00                	add    BYTE PTR [rax],al
    c39c:	00 00                	add    BYTE PTR [rax],al
    c39e:	00 00                	add    BYTE PTR [rax],al
    c3a0:	54                   	push   rsp
    c3a1:	69 6d 65 20 73 74 61 	imul   ebp,DWORD PTR [rbp+0x65],0x61747320
    c3a8:	6d                   	ins    DWORD PTR es:[rdi],dx
    c3a9:	70 20                	jo     c3cb <_IO_stdin_used+0x3cb>
    c3ab:	72 65                	jb     c412 <_IO_stdin_used+0x412>
    c3ad:	71 75                	jno    c424 <_IO_stdin_used+0x424>
    c3af:	65 73 74             	gs jae c426 <_IO_stdin_used+0x426>
    c3b2:	3a 20                	cmp    ah,BYTE PTR [rax]
    c3b4:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    c3b9:	20 25 73 28 63 6f    	and    BYTE PTR [rip+0x6f632873],ah        # 6f63ec32 <_end+0x6f501bf2>
    c3bf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c3c0:	66 69 67 20 73 70    	imul   sp,WORD PTR [rdi+0x20],0x7073
    c3c6:	65 63 69 66          	movsxd ebp,DWORD PTR gs:[rcx+0x66]
    c3ca:	69 65 73 20 73 74 72 	imul   esp,DWORD PTR [rbp+0x73],0x72747320
    c3d1:	69 63 74 20 74 69 6d 	imul   esp,DWORD PTR [rbx+0x74],0x6d697420
    c3d8:	65 73 74             	gs jae c44f <_IO_stdin_used+0x44f>
    c3db:	61                   	(bad)  
    c3dc:	6d                   	ins    DWORD PTR es:[rdi],dx
    c3dd:	70 20                	jo     c3ff <_IO_stdin_used+0x3ff>
    c3df:	61                   	(bad)  
    c3e0:	6c                   	ins    BYTE PTR es:[rdi],dx
    c3e1:	65 72 74             	gs jb  c458 <_IO_stdin_used+0x458>
    c3e4:	73 29                	jae    c40f <_IO_stdin_used+0x40f>
    c3e6:	0a 00                	or     al,BYTE PTR [rax]
    c3e8:	50                   	push   rax
    c3e9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c3ea:	73 73                	jae    c45f <_IO_stdin_used+0x45f>
    c3ec:	69 62 6c 65 20 6e 6d 	imul   esp,DWORD PTR [rdx+0x6c],0x6d6e2065
    c3f3:	61                   	(bad)  
    c3f4:	70 20                	jo     c416 <_IO_stdin_used+0x416>
    c3f6:	68 6f 73 74 20       	push   0x2074736f
    c3fb:	61                   	(bad)  
    c3fc:	6c                   	ins    BYTE PTR es:[rdi],dx
    c3fd:	69 76 65 20 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x65686320
    c404:	63 6b 20             	movsxd ebp,DWORD PTR [rbx+0x20]
    c407:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    c40c:	20 25 73 3b 20 6d    	and    BYTE PTR [rip+0x6d203b73],ah        # 6d20ff85 <_end+0x6d0d2f45>
    c412:	61                   	(bad)  
    c413:	74 63                	je     c478 <_IO_stdin_used+0x478>
    c415:	68 65 64 20 49       	push   0x49206465
    c41a:	43                   	rex.XB
    c41b:	4d 50                	rex.WRB push r8
    c41d:	20 45 63             	and    BYTE PTR [rbp+0x63],al
    c420:	68 6f 2c 20 54       	push   0x54202c6f
    c425:	43 50                	rex.XB push r8
    c427:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    c42a:	4e 2c 20             	rex.WRX sub al,0x20
    c42d:	54                   	push   rsp
    c42e:	43 50                	rex.XB push r8
    c430:	20 41 43             	and    BYTE PTR [rcx+0x43],al
    c433:	4b 2c 20             	rex.WXB sub al,0x20
    c436:	61                   	(bad)  
    c437:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c438:	64 20 49 43          	and    BYTE PTR fs:[rcx+0x43],cl
    c43c:	4d 50                	rex.WRB push r8
    c43e:	20 54 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dl
    c442:	65 73 74             	gs jae c4b9 <_IO_stdin_used+0x4b9>
    c445:	61                   	(bad)  
    c446:	6d                   	ins    DWORD PTR es:[rdi],dx
    c447:	70 20                	jo     c469 <_IO_stdin_used+0x469>
    c449:	72 65                	jb     c4b0 <_IO_stdin_used+0x4b0>
    c44b:	71 75                	jno    c4c2 <_IO_stdin_used+0x4c2>
    c44d:	65 73 74             	gs jae c4c4 <_IO_stdin_used+0x4c4>
    c450:	0a 00                	or     al,BYTE PTR [rax]
    c452:	61                   	(bad)  
    c453:	00 00                	add    BYTE PTR [rax],al
    c455:	00 00                	add    BYTE PTR [rax],al
    c457:	00 50 6f             	add    BYTE PTR [rax+0x6f],dl
    c45a:	73 73                	jae    c4cf <_IO_stdin_used+0x4cf>
    c45c:	69 62 6c 65 20 6e 6d 	imul   esp,DWORD PTR [rdx+0x6c],0x6d6e2065
    c463:	61                   	(bad)  
    c464:	70 20                	jo     c486 <_IO_stdin_used+0x486>
    c466:	68 6f 73 74 20       	push   0x2074736f
    c46b:	61                   	(bad)  
    c46c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c46d:	69 76 65 20 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x65686320
    c474:	63 6b 20             	movsxd ebp,DWORD PTR [rbx+0x20]
    c477:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    c47c:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461e4f5 <_end+0x744e14b5>
    c482:	20 25 73 3b 20 6d    	and    BYTE PTR [rip+0x6d203b73],ah        # 6d20fffb <_end+0x6d0d2fbb>
    c488:	61                   	(bad)  
    c489:	74 63                	je     c4ee <_IO_stdin_used+0x4ee>
    c48b:	68 65 64 20 49       	push   0x49206465
    c490:	43                   	rex.XB
    c491:	4d 50                	rex.WRB push r8
    c493:	20 45 63             	and    BYTE PTR [rbp+0x63],al
    c496:	68 6f 2c 20 54       	push   0x54202c6f
    c49b:	43 50                	rex.XB push r8
    c49d:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    c4a0:	4e 2c 20             	rex.WRX sub al,0x20
    c4a3:	54                   	push   rsp
    c4a4:	43 50                	rex.XB push r8
    c4a6:	20 41 43             	and    BYTE PTR [rcx+0x43],al
    c4a9:	4b 2c 20             	rex.WXB sub al,0x20
    c4ac:	61                   	(bad)  
    c4ad:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c4ae:	64 20 49 43          	and    BYTE PTR fs:[rcx+0x43],cl
    c4b2:	4d 50                	rex.WRB push r8
    c4b4:	20 54 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dl
    c4b8:	65 73 74             	gs jae c52f <_IO_stdin_used+0x52f>
    c4bb:	61                   	(bad)  
    c4bc:	6d                   	ins    DWORD PTR es:[rdi],dx
    c4bd:	70 20                	jo     c4df <_IO_stdin_used+0x4df>
    c4bf:	72 65                	jb     c526 <_IO_stdin_used+0x526>
    c4c1:	71 75                	jno    c538 <_IO_stdin_used+0x538>
    c4c3:	65 73 74             	gs jae c53a <_IO_stdin_used+0x53a>
    c4c6:	0a 00                	or     al,BYTE PTR [rax]
    c4c8:	49 50                	rex.WB push r8
    c4ca:	76 34                	jbe    c500 <_IO_stdin_used+0x500>
    c4cc:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de545 <_end+0x3e1a1505>
    c4d2:	20 25 73 0a 00 09    	and    BYTE PTR [rip+0x9000a73],ah        # 900cf4b <_end+0x8ecff0b>
    c4d8:	49                   	rex.WB
    c4d9:	43                   	rex.XB
    c4da:	4d 50                	rex.WRB push r8
    c4dc:	20 00                	and    BYTE PTR [rax],al
    c4de:	20 65 63             	and    BYTE PTR [rbp+0x63],ah
    c4e1:	68 6f 20 72 65       	push   0x6572206f
    c4e6:	70 6c                	jo     c554 <_IO_stdin_used+0x554>
    c4e8:	79 00                	jns    c4ea <_IO_stdin_used+0x4ea>
    c4ea:	20 64 65 73          	and    BYTE PTR [rbp+riz*2+0x73],ah
    c4ee:	74 69                	je     c559 <_IO_stdin_used+0x559>
    c4f0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c4f1:	61                   	(bad)  
    c4f2:	74 69                	je     c55d <_IO_stdin_used+0x55d>
    c4f4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c4f5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c4f6:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    c4f9:	72 65                	jb     c560 <_IO_stdin_used+0x560>
    c4fb:	61                   	(bad)  
    c4fc:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c4ff:	62                   	(bad)  
    c500:	6c                   	ins    BYTE PTR es:[rdi],dx
    c501:	65 28 00             	sub    BYTE PTR gs:[rax],al
    c504:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    c507:	74 77                	je     c580 <_IO_stdin_used+0x580>
    c509:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c50a:	72 6b                	jb     c577 <_IO_stdin_used+0x577>
    c50c:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c50f:	72 65                	jb     c576 <_IO_stdin_used+0x576>
    c511:	61                   	(bad)  
    c512:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c515:	62                   	(bad)  
    c516:	6c                   	ins    BYTE PTR es:[rdi],dx
    c517:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c51a:	00 20                	add    BYTE PTR [rax],ah
    c51c:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c51e:	73 74                	jae    c594 <_IO_stdin_used+0x594>
    c520:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c523:	72 65                	jb     c58a <_IO_stdin_used+0x58a>
    c525:	61                   	(bad)  
    c526:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c529:	62                   	(bad)  
    c52a:	6c                   	ins    BYTE PTR es:[rdi],dx
    c52b:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c52e:	00 20                	add    BYTE PTR [rax],ah
    c530:	50                   	push   rax
    c531:	72 6f                	jb     c5a2 <_IO_stdin_used+0x5a2>
    c533:	74 6f                	je     c5a4 <_IO_stdin_used+0x5a4>
    c535:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    c538:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c53b:	72 65                	jb     c5a2 <_IO_stdin_used+0x5a2>
    c53d:	61                   	(bad)  
    c53e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c541:	62                   	(bad)  
    c542:	6c                   	ins    BYTE PTR es:[rdi],dx
    c543:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c546:	00 20                	add    BYTE PTR [rax],ah
    c548:	50                   	push   rax
    c549:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c54a:	72 74                	jb     c5c0 <_IO_stdin_used+0x5c0>
    c54c:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c54f:	72 65                	jb     c5b6 <_IO_stdin_used+0x5b6>
    c551:	61                   	(bad)  
    c552:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c555:	62                   	(bad)  
    c556:	6c                   	ins    BYTE PTR es:[rdi],dx
    c557:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c55a:	00 20                	add    BYTE PTR [rax],ah
    c55c:	46 72 61             	rex.RX jb c5c0 <_IO_stdin_used+0x5c0>
    c55f:	67 6d                	ins    DWORD PTR es:[edi],dx
    c561:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c563:	74 61                	je     c5c6 <_IO_stdin_used+0x5c6>
    c565:	74 69                	je     c5d0 <_IO_stdin_used+0x5d0>
    c567:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c568:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c569:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    c56c:	65 64 65 64 20 29    	gs fs gs and BYTE PTR fs:[rcx],ch
    c572:	00 20                	add    BYTE PTR [rax],ah
    c574:	53                   	push   rbx
    c575:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c576:	75 72                	jne    c5ea <_IO_stdin_used+0x5ea>
    c578:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c57b:	52                   	push   rdx
    c57c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c57d:	75 74                	jne    c5f3 <_IO_stdin_used+0x5f3>
    c57f:	65 20 46 61          	and    BYTE PTR gs:[rsi+0x61],al
    c583:	69 6c 65 64 20 29 00 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x2920
    c58a:	00 
    c58b:	00 00                	add    BYTE PTR [rax],al
    c58d:	00 00                	add    BYTE PTR [rax],al
    c58f:	00 20                	add    BYTE PTR [rax],ah
    c591:	44                   	rex.R
    c592:	65 73 74             	gs jae c609 <_IO_stdin_used+0x609>
    c595:	69 6e 61 74 69 6f 6e 	imul   ebp,DWORD PTR [rsi+0x61],0x6e6f6974
    c59c:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    c59f:	74 77                	je     c618 <_IO_stdin_used+0x618>
    c5a1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5a2:	72 6b                	jb     c60f <_IO_stdin_used+0x60f>
    c5a4:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c5a7:	72 65                	jb     c60e <_IO_stdin_used+0x60e>
    c5a9:	61                   	(bad)  
    c5aa:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c5ad:	62                   	(bad)  
    c5ae:	6c                   	ins    BYTE PTR es:[rdi],dx
    c5af:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c5b2:	00 00                	add    BYTE PTR [rax],al
    c5b4:	00 00                	add    BYTE PTR [rax],al
    c5b6:	00 00                	add    BYTE PTR [rax],al
    c5b8:	20 44 65 73          	and    BYTE PTR [rbp+riz*2+0x73],al
    c5bc:	74 69                	je     c627 <_IO_stdin_used+0x627>
    c5be:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c5bf:	61                   	(bad)  
    c5c0:	74 69                	je     c62b <_IO_stdin_used+0x62b>
    c5c2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5c3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c5c4:	20 48 6f             	and    BYTE PTR [rax+0x6f],cl
    c5c7:	73 74                	jae    c63d <_IO_stdin_used+0x63d>
    c5c9:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c5cc:	72 65                	jb     c633 <_IO_stdin_used+0x633>
    c5ce:	61                   	(bad)  
    c5cf:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c5d2:	62                   	(bad)  
    c5d3:	6c                   	ins    BYTE PTR es:[rdi],dx
    c5d4:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c5d7:	00 20                	add    BYTE PTR [rax],ah
    c5d9:	53                   	push   rbx
    c5da:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5db:	75 72                	jne    c64f <_IO_stdin_used+0x64f>
    c5dd:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c5e0:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c5e2:	73 74                	jae    c658 <_IO_stdin_used+0x658>
    c5e4:	20 49 73             	and    BYTE PTR [rcx+0x73],cl
    c5e7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5e8:	6c                   	ins    BYTE PTR es:[rdi],dx
    c5e9:	61                   	(bad)  
    c5ea:	74 65                	je     c651 <_IO_stdin_used+0x651>
    c5ec:	64 20 29             	and    BYTE PTR fs:[rcx],ch
    c5ef:	00 20                	add    BYTE PTR [rax],ah
    c5f1:	4e                   	rex.WRX
    c5f2:	65 74 77             	gs je  c66c <_IO_stdin_used+0x66c>
    c5f5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5f6:	72 6b                	jb     c663 <_IO_stdin_used+0x663>
    c5f8:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    c5fb:	6d                   	ins    DWORD PTR es:[rdi],dx
    c5fc:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    c603:	74 69                	je     c66e <_IO_stdin_used+0x66e>
    c605:	76 65                	jbe    c66c <_IO_stdin_used+0x66c>
    c607:	6c                   	ins    BYTE PTR es:[rdi],dx
    c608:	79 20                	jns    c62a <_IO_stdin_used+0x62a>
    c60a:	50                   	push   rax
    c60b:	72 6f                	jb     c67c <_IO_stdin_used+0x67c>
    c60d:	68 69 62 69 74       	push   0x74696269
    c612:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    c616:	00 00                	add    BYTE PTR [rax],al
    c618:	20 48 6f             	and    BYTE PTR [rax+0x6f],cl
    c61b:	73 74                	jae    c691 <_IO_stdin_used+0x691>
    c61d:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    c620:	6d                   	ins    DWORD PTR es:[rdi],dx
    c621:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    c628:	74 69                	je     c693 <_IO_stdin_used+0x693>
    c62a:	76 65                	jbe    c691 <_IO_stdin_used+0x691>
    c62c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c62d:	79 20                	jns    c64f <_IO_stdin_used+0x64f>
    c62f:	50                   	push   rax
    c630:	72 6f                	jb     c6a1 <_IO_stdin_used+0x6a1>
    c632:	68 69 62 69 74       	push   0x74696269
    c637:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    c63b:	00 00                	add    BYTE PTR [rax],al
    c63d:	00 00                	add    BYTE PTR [rax],al
    c63f:	00 20                	add    BYTE PTR [rax],ah
    c641:	4e                   	rex.WRX
    c642:	65 74 77             	gs je  c6bc <_IO_stdin_used+0x6bc>
    c645:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c646:	72 6b                	jb     c6b3 <_IO_stdin_used+0x6b3>
    c648:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c64b:	72 65                	jb     c6b2 <_IO_stdin_used+0x6b2>
    c64d:	61                   	(bad)  
    c64e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c651:	62                   	(bad)  
    c652:	6c                   	ins    BYTE PTR es:[rdi],dx
    c653:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    c657:	72 20                	jb     c679 <_IO_stdin_used+0x679>
    c659:	54                   	push   rsp
    c65a:	4f 53                	rex.WRXB push r11
    c65c:	20 29                	and    BYTE PTR [rcx],ch
    c65e:	00 20                	add    BYTE PTR [rax],ah
    c660:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c662:	73 74                	jae    c6d8 <_IO_stdin_used+0x6d8>
    c664:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c667:	72 65                	jb     c6ce <_IO_stdin_used+0x6ce>
    c669:	61                   	(bad)  
    c66a:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c66d:	62                   	(bad)  
    c66e:	6c                   	ins    BYTE PTR es:[rdi],dx
    c66f:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    c673:	72 20                	jb     c695 <_IO_stdin_used+0x695>
    c675:	54                   	push   rsp
    c676:	4f 53                	rex.WRXB push r11
    c678:	20 29                	and    BYTE PTR [rcx],ch
    c67a:	00 00                	add    BYTE PTR [rax],al
    c67c:	00 00                	add    BYTE PTR [rax],al
    c67e:	00 00                	add    BYTE PTR [rax],al
    c680:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c683:	6d                   	ins    DWORD PTR es:[rdi],dx
    c684:	6d                   	ins    DWORD PTR es:[rdi],dx
    c685:	75 6e                	jne    c6f5 <_IO_stdin_used+0x6f5>
    c687:	69 63 61 74 69 6f 6e 	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
    c68e:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    c691:	6d                   	ins    DWORD PTR es:[rdi],dx
    c692:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    c699:	74 69                	je     c704 <_IO_stdin_used+0x704>
    c69b:	76 65                	jbe    c702 <_IO_stdin_used+0x702>
    c69d:	6c                   	ins    BYTE PTR es:[rdi],dx
    c69e:	79 20                	jns    c6c0 <_IO_stdin_used+0x6c0>
    c6a0:	50                   	push   rax
    c6a1:	72 6f                	jb     c712 <_IO_stdin_used+0x712>
    c6a3:	68 69 62 69 74       	push   0x74696269
    c6a8:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    c6ac:	00 20                	add    BYTE PTR [rax],ah
    c6ae:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c6b0:	73 74                	jae    c726 <_IO_stdin_used+0x726>
    c6b2:	20 50 72             	and    BYTE PTR [rax+0x72],dl
    c6b5:	65 63 65 64          	movsxd esp,DWORD PTR gs:[rbp+0x64]
    c6b9:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c6bb:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c6be:	56                   	push   rsi
    c6bf:	69 6f 6c 61 74 69 6f 	imul   ebp,DWORD PTR [rdi+0x6c],0x6f697461
    c6c6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c6c7:	20 29                	and    BYTE PTR [rcx],ch
    c6c9:	00 00                	add    BYTE PTR [rax],al
    c6cb:	00 00                	add    BYTE PTR [rax],al
    c6cd:	00 00                	add    BYTE PTR [rax],al
    c6cf:	00 20                	add    BYTE PTR [rax],ah
    c6d1:	50                   	push   rax
    c6d2:	72 65                	jb     c739 <_IO_stdin_used+0x739>
    c6d4:	63 65 64             	movsxd esp,DWORD PTR [rbp+0x64]
    c6d7:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c6d9:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c6dc:	43 75 74             	rex.XB jne c753 <_IO_stdin_used+0x753>
    c6df:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c6e0:	66 66 20 69 6e       	data16 data16 and BYTE PTR [rcx+0x6e],ch
    c6e5:	20 45 66             	and    BYTE PTR [rbp+0x66],al
    c6e8:	66 65 63 74 20 29    	movsxd si,DWORD PTR gs:[rax+riz*1+0x29]
    c6ee:	00 20                	add    BYTE PTR [rax],ah
    c6f0:	55                   	push   rbp
    c6f1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c6f2:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c6f6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c6f7:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c6fa:	64 65 3d 25 64 20 29 	fs gs cmp eax,0x29206425
    c701:	0a 00                	or     al,BYTE PTR [rax]
    c703:	00 00                	add    BYTE PTR [rax],al
    c705:	00 00                	add    BYTE PTR [rax],al
    c707:	00 20                	add    BYTE PTR [rax],ah
    c709:	53                   	push   rbx
    c70a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c70b:	75 72                	jne    c77f <_IO_stdin_used+0x77f>
    c70d:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c710:	51                   	push   rcx
    c711:	75 65                	jne    c778 <_IO_stdin_used+0x778>
    c713:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c714:	63 68 28             	movsxd ebp,DWORD PTR [rax+0x28]
    c717:	20 66 6c             	and    BYTE PTR [rsi+0x6c],ah
    c71a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c71b:	77 20                	ja     c73d <_IO_stdin_used+0x73d>
    c71d:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    c720:	74 72                	je     c794 <_IO_stdin_used+0x794>
    c722:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c723:	6c                   	ins    BYTE PTR es:[rdi],dx
    c724:	20 29                	and    BYTE PTR [rcx],ch
    c726:	00 20                	add    BYTE PTR [rax],ah
    c728:	52                   	push   rdx
    c729:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x28207463
    c730:	20 28 
    c732:	00 20                	add    BYTE PTR [rax],ah
    c734:	52                   	push   rdx
    c735:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c73c:	20 66 
    c73e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c73f:	72 20                	jb     c761 <_IO_stdin_used+0x761>
    c741:	4e                   	rex.WRX
    c742:	65 74 77             	gs je  c7bc <_IO_stdin_used+0x7bc>
    c745:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c746:	72 6b                	jb     c7b3 <_IO_stdin_used+0x7b3>
    c748:	20 29                	and    BYTE PTR [rcx],ch
    c74a:	00 20                	add    BYTE PTR [rax],ah
    c74c:	52                   	push   rdx
    c74d:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c754:	20 66 
    c756:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c757:	72 20                	jb     c779 <_IO_stdin_used+0x779>
    c759:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c75b:	73 74                	jae    c7d1 <_IO_stdin_used+0x7d1>
    c75d:	20 29                	and    BYTE PTR [rcx],ch
    c75f:	00 20                	add    BYTE PTR [rax],ah
    c761:	52                   	push   rdx
    c762:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c769:	20 66 
    c76b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c76c:	72 20                	jb     c78e <_IO_stdin_used+0x78e>
    c76e:	54                   	push   rsp
    c76f:	4f 53                	rex.WRXB push r11
    c771:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    c774:	64 20 4e 65          	and    BYTE PTR fs:[rsi+0x65],cl
    c778:	74 77                	je     c7f1 <_IO_stdin_used+0x7f1>
    c77a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c77b:	72 6b                	jb     c7e8 <_IO_stdin_used+0x7e8>
    c77d:	20 29                	and    BYTE PTR [rcx],ch
    c77f:	00 20                	add    BYTE PTR [rax],ah
    c781:	52                   	push   rdx
    c782:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c789:	20 66 
    c78b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c78c:	72 20                	jb     c7ae <_IO_stdin_used+0x7ae>
    c78e:	54                   	push   rsp
    c78f:	4f 53                	rex.WRXB push r11
    c791:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    c794:	64 20 48 6f          	and    BYTE PTR fs:[rax+0x6f],cl
    c798:	73 74                	jae    c80e <_IO_stdin_used+0x80e>
    c79a:	20 29                	and    BYTE PTR [rcx],ch
    c79c:	00 20                	add    BYTE PTR [rax],ah
    c79e:	65 63 68 6f          	movsxd ebp,DWORD PTR gs:[rax+0x6f]
    c7a2:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    c7a5:	71 75                	jno    c81c <_IO_stdin_used+0x81c>
    c7a7:	65 73 74             	gs jae c81e <_IO_stdin_used+0x81e>
    c7aa:	00 00                	add    BYTE PTR [rax],al
    c7ac:	00 00                	add    BYTE PTR [rax],al
    c7ae:	00 00                	add    BYTE PTR [rax],al
    c7b0:	20 4d 6f             	and    BYTE PTR [rbp+0x6f],cl
    c7b3:	62                   	(bad)  
    c7b4:	69 6c 65 20 49 50 20 	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x41205049
    c7bb:	41 
    c7bc:	64 76 65             	fs jbe c824 <_IO_stdin_used+0x824>
    c7bf:	72 74                	jb     c835 <_IO_stdin_used+0x835>
    c7c1:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    c7c8:	20 28                	and    BYTE PTR [rax],ch
    c7ca:	4e 6f                	rex.WRX outs dx,DWORD PTR ds:[rsi]
    c7cc:	72 6d                	jb     c83b <_IO_stdin_used+0x83b>
    c7ce:	61                   	(bad)  
    c7cf:	6c                   	ins    BYTE PTR es:[rdi],dx
    c7d0:	20 52 6f             	and    BYTE PTR [rdx+0x6f],dl
    c7d3:	75 74                	jne    c849 <_IO_stdin_used+0x849>
    c7d5:	65 72 20             	gs jb  c7f8 <_IO_stdin_used+0x7f8>
    c7d8:	41                   	rex.B
    c7d9:	64 76 65             	fs jbe c841 <_IO_stdin_used+0x841>
    c7dc:	72 74                	jb     c852 <_IO_stdin_used+0x852>
    c7de:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    c7e5:	20 29                	and    BYTE PTR [rcx],ch
    c7e7:	20 29                	and    BYTE PTR [rcx],ch
    c7e9:	0a 20                	or     ah,BYTE PTR [rax]
    c7eb:	00 00                	add    BYTE PTR [rax],al
    c7ed:	00 00                	add    BYTE PTR [rax],al
    c7ef:	00 20                	add    BYTE PTR [rax],ah
    c7f1:	52                   	push   rdx
    c7f2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c7f3:	75 74                	jne    c869 <_IO_stdin_used+0x869>
    c7f5:	65 72 20             	gs jb  c818 <_IO_stdin_used+0x818>
    c7f8:	41                   	rex.B
    c7f9:	64 76 65             	fs jbe c861 <_IO_stdin_used+0x861>
    c7fc:	72 74                	jb     c872 <_IO_stdin_used+0x872>
    c7fe:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    c805:	20 28                	and    BYTE PTR [rax],ch
    c807:	55                   	push   rbp
    c808:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c809:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c80d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c80e:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c811:	64 65 3a 20          	fs cmp ah,BYTE PTR gs:[rax]
    c815:	25 64 20 29 20       	and    eax,0x20292064
    c81a:	29 0a                	sub    DWORD PTR [rdx],ecx
    c81c:	00 20                	add    BYTE PTR [rax],ah
    c81e:	52                   	push   rdx
    c81f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c820:	75 74                	jne    c896 <_IO_stdin_used+0x896>
    c822:	65 72 20             	gs jb  c845 <_IO_stdin_used+0x845>
    c825:	53                   	push   rbx
    c826:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c827:	6c                   	ins    BYTE PTR es:[rdi],dx
    c828:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    c82f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c830:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c831:	20 29                	and    BYTE PTR [rcx],ch
    c833:	00 20                	add    BYTE PTR [rax],ah
    c835:	54                   	push   rsp
    c836:	69 6d 65 20 54 6f 20 	imul   ebp,DWORD PTR [rbp+0x65],0x206f5420
    c83d:	4c 69 76 65 20 65 78 	imul   r14,QWORD PTR [rsi+0x65],0x63786520
    c844:	63 
    c845:	65 65 64 65 64 00 20 	gs gs fs gs add BYTE PTR fs:[rax],ah
    c84c:	28 20                	sub    BYTE PTR [rax],ah
    c84e:	74 74                	je     c8c4 <_IO_stdin_used+0x8c4>
    c850:	6c                   	ins    BYTE PTR es:[rdi],dx
    c851:	20 65 78             	and    BYTE PTR [rbp+0x78],ah
    c854:	63 65 65             	movsxd esp,DWORD PTR [rbp+0x65]
    c857:	64 65 64 20 69 6e    	fs gs and BYTE PTR fs:[rcx+0x6e],ch
    c85d:	20 74 72 61          	and    BYTE PTR [rdx+rsi*2+0x61],dh
    c861:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c862:	73 69                	jae    c8cd <_IO_stdin_used+0x8cd>
    c864:	74 20                	je     c886 <_IO_stdin_used+0x886>
    c866:	29 00                	sub    DWORD PTR [rax],eax
    c868:	20 28                	and    BYTE PTR [rax],ch
    c86a:	20 46 72             	and    BYTE PTR [rsi+0x72],al
    c86d:	61                   	(bad)  
    c86e:	67 6d                	ins    DWORD PTR es:[edi],dx
    c870:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c872:	74 20                	je     c894 <_IO_stdin_used+0x894>
    c874:	52                   	push   rdx
    c875:	65 61                	gs (bad) 
    c877:	73 73                	jae    c8ec <_IO_stdin_used+0x8ec>
    c879:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    c87b:	62                   	(bad)  
    c87c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c87d:	79 20                	jns    c89f <_IO_stdin_used+0x89f>
    c87f:	74 69                	je     c8ea <_IO_stdin_used+0x8ea>
    c881:	6d                   	ins    DWORD PTR es:[rdi],dx
    c882:	65 20 65 78          	and    BYTE PTR gs:[rbp+0x78],ah
    c886:	63 65 65             	movsxd esp,DWORD PTR [rbp+0x65]
    c889:	64 65 64 20 29       	fs gs and BYTE PTR fs:[rcx],ch
    c88e:	00 20                	add    BYTE PTR [rax],ah
    c890:	28 20                	sub    BYTE PTR [rax],ah
    c892:	55                   	push   rbp
    c893:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c894:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c898:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c899:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c89c:	64 65 3a 20          	fs cmp ah,BYTE PTR gs:[rax]
    c8a0:	25 64 29 0a 00       	and    eax,0xa2964
    c8a5:	20 74 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dh
    c8a9:	65 73 74             	gs jae c920 <_IO_stdin_used+0x920>
    c8ac:	61                   	(bad)  
    c8ad:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8ae:	70 20                	jo     c8d0 <_IO_stdin_used+0x8d0>
    c8b0:	72 65                	jb     c917 <_IO_stdin_used+0x917>
    c8b2:	71 75                	jno    c929 <_IO_stdin_used+0x929>
    c8b4:	65 73 74             	gs jae c92b <_IO_stdin_used+0x92b>
    c8b7:	00 20                	add    BYTE PTR [rax],ah
    c8b9:	74 69                	je     c924 <_IO_stdin_used+0x924>
    c8bb:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8bc:	65 73 74             	gs jae c933 <_IO_stdin_used+0x933>
    c8bf:	61                   	(bad)  
    c8c0:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8c1:	70 20                	jo     c8e3 <_IO_stdin_used+0x8e3>
    c8c3:	72 65                	jb     c92a <_IO_stdin_used+0x92a>
    c8c5:	70 6c                	jo     c933 <_IO_stdin_used+0x933>
    c8c7:	79 00                	jns    c8c9 <_IO_stdin_used+0x8c9>
    c8c9:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    c8cc:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c8d0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c8d1:	20 69 63             	and    BYTE PTR [rcx+0x63],ch
    c8d4:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8d5:	70 20                	jo     c8f7 <_IO_stdin_used+0x8f7>
    c8d7:	74 79                	je     c952 <_IO_stdin_used+0x952>
    c8d9:	70 65                	jo     c940 <_IO_stdin_used+0x940>
    c8db:	3d 25 64 00 00       	cmp    eax,0x6425
    c8e0:	26 78 ff             	es js  c8e2 <_IO_stdin_used+0x8e2>
    c8e3:	ff 49 7b             	dec    DWORD PTR [rcx+0x7b]
    c8e6:	ff                   	(bad)  
    c8e7:	ff 49 7b             	dec    DWORD PTR [rcx+0x7b]
    c8ea:	ff                   	(bad)  
    c8eb:	ff 37                	push   QWORD PTR [rdi]
    c8ed:	78 ff                	js     c8ee <_IO_stdin_used+0x8ee>
    c8ef:	ff a4 79 ff ff b5 79 	jmp    QWORD PTR [rcx+rdi*2+0x79b5ffff]
    c8f6:	ff                   	(bad)  
    c8f7:	ff 49 7b             	dec    DWORD PTR [rcx+0x7b]
    c8fa:	ff                   	(bad)  
    c8fb:	ff 49 7b             	dec    DWORD PTR [rcx+0x7b]
    c8fe:	ff                   	(bad)  
    c8ff:	ff 52 7a             	call   QWORD PTR [rdx+0x7a]
    c902:	ff                   	(bad)  
    c903:	ff 63 7a             	jmp    QWORD PTR [rbx+0x7a]
    c906:	ff                   	(bad)  
    c907:	ff ae 7a ff ff bf    	jmp    FWORD PTR [rsi-0x40000086]
    c90d:	7a ff                	jp     c90e <_IO_stdin_used+0x90e>
    c90f:	ff 49 7b             	dec    DWORD PTR [rcx+0x7b]
    c912:	ff                   	(bad)  
    c913:	ff 2d 7b ff ff 3b    	jmp    FWORD PTR [rip+0x3bffff7b]        # 3c00c894 <_end+0x3becf854>
    c919:	7b ff                	jnp    c91a <_IO_stdin_used+0x91a>
    c91b:	ff 46 78             	inc    DWORD PTR [rsi+0x78]
    c91e:	ff                   	(bad)  
    c91f:	ff 57 78             	call   QWORD PTR [rdi+0x78]
    c922:	ff                   	(bad)  
    c923:	ff 68 78             	jmp    FWORD PTR [rax+0x78]
    c926:	ff                   	(bad)  
    c927:	ff                   	(bad)  
    c928:	79 78                	jns    c9a2 <_IO_stdin_used+0x9a2>
    c92a:	ff                   	(bad)  
    c92b:	ff 8a 78 ff ff 9b    	dec    DWORD PTR [rdx-0x64000088]
    c931:	78 ff                	js     c932 <_IO_stdin_used+0x932>
    c933:	ff ac 78 ff ff bd 78 	jmp    FWORD PTR [rax+rdi*2+0x78bdffff]
    c93a:	ff                   	(bad)  
    c93b:	ff ce                	dec    esi
    c93d:	78 ff                	js     c93e <_IO_stdin_used+0x93e>
    c93f:	ff                   	(bad)  
    c940:	df 78 ff             	fistp  QWORD PTR [rax-0x1]
    c943:	ff                   	(bad)  
    c944:	ed                   	in     eax,dx
    c945:	78 ff                	js     c946 <_IO_stdin_used+0x946>
    c947:	ff                   	(bad)  
    c948:	fb                   	sti    
    c949:	78 ff                	js     c94a <_IO_stdin_used+0x94a>
    c94b:	ff 09                	dec    DWORD PTR [rcx]
    c94d:	79 ff                	jns    c94e <_IO_stdin_used+0x94e>
    c94f:	ff 17                	call   QWORD PTR [rdi]
    c951:	79 ff                	jns    c952 <_IO_stdin_used+0x952>
    c953:	ff 25 79 ff ff 33    	jmp    QWORD PTR [rip+0x33ffff79]        # 3400c8d2 <_end+0x33ecf892>
    c959:	79 ff                	jns    c95a <_IO_stdin_used+0x95a>
    c95b:	ff 00                	inc    DWORD PTR [rax]
    c95d:	00 00                	add    BYTE PTR [rax],al
    c95f:	00 1b                	add    BYTE PTR [rbx],bl
    c961:	5b                   	pop    rbx
    c962:	33 32                	xor    esi,DWORD PTR [rdx]
    c964:	6d                   	ins    DWORD PTR es:[rdi],dx
    c965:	00 25 73 00 49 50    	add    BYTE PTR [rip+0x50490073],ah        # 5049c9de <_end+0x5035f99e>
    c96b:	76 34                	jbe    c9a1 <_IO_stdin_used+0x9a1>
    c96d:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642603e6 <_end+0x641233a6>
    c973:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325e9b7 <_end+0x73121977>
    c979:	3a 25 64 0a 00 09    	cmp    ah,BYTE PTR [rip+0x9000a64]        # 900d3e3 <_end+0x8ed03a3>
    c97f:	54                   	push   rsp
    c980:	43 50                	rex.XB push r8
    c982:	20 5b 00             	and    BYTE PTR [rbx+0x0],bl
    c985:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c988:	33 6d 00             	xor    ebp,DWORD PTR [rbp+0x0]
    c98b:	25 73 20 41 43       	and    eax,0x43412073
    c990:	4b 20 00             	rex.WXB and BYTE PTR [r8],al
    c993:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c996:	37                   	(bad)  
    c997:	6d                   	ins    DWORD PTR es:[rdi],dx
    c998:	00 25 73 20 46 49    	add    BYTE PTR [rip+0x49462073],ah        # 4946ea11 <_end+0x493319d1>
    c99e:	4e 20 00             	rex.WRX and BYTE PTR [rax],r8b
    c9a1:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9a4:	34 6d                	xor    al,0x6d
    c9a6:	00 25 73 20 50 53    	add    BYTE PTR [rip+0x53502073],ah        # 5350ea1f <_end+0x533d19df>
    c9ac:	48 20 00             	rex.W and BYTE PTR [rax],al
    c9af:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9b2:	31 6d 00             	xor    DWORD PTR [rbp+0x0],ebp
    c9b5:	25 73 20 52 53       	and    eax,0x53522073
    c9ba:	54                   	push   rsp
    c9bb:	20 00                	and    BYTE PTR [rax],al
    c9bd:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9c0:	35 6d 00 25 73       	xor    eax,0x7325006d
    c9c5:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    c9c8:	4e 20 00             	rex.WRX and BYTE PTR [rax],r8b
    c9cb:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9ce:	36 6d                	ss ins DWORD PTR es:[rdi],dx
    c9d0:	00 25 73 20 55 52    	add    BYTE PTR [rip+0x52552073],ah        # 5255ea49 <_end+0x52421a09>
    c9d6:	47 20 00             	rex.RXB and BYTE PTR [r8],r8b
    c9d9:	5d                   	pop    rbp
    c9da:	00 1b                	add    BYTE PTR [rbx],bl
    c9dc:	5b                   	pop    rbx
    c9dd:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    c9e0:	25 73 53 75 73       	and    eax,0x73755373
    c9e5:	70 69                	jo     ca50 <_IO_stdin_used+0xa50>
    c9e7:	63 69 6f             	movsxd ebp,DWORD PTR [rcx+0x6f]
    c9ea:	75 73                	jne    ca5f <_IO_stdin_used+0xa5f>
    c9ec:	20 54 43 50          	and    BYTE PTR [rbx+rax*2+0x50],dl
    c9f0:	20 50 61             	and    BYTE PTR [rax+0x61],dl
    c9f3:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    c9f6:	74 20                	je     ca18 <_IO_stdin_used+0xa18>
    c9f8:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c9fa:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    c9fd:	74 65                	je     ca64 <_IO_stdin_used+0xa64>
    c9ff:	72 65                	jb     ca66 <_IO_stdin_used+0xa66>
    ca01:	64 3a 20             	cmp    ah,BYTE PTR fs:[rax]
    ca04:	25 73 3a 25 64       	and    eax,0x64253a73
    ca09:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325ea4d <_end+0x73121a0d>
    ca0f:	3a 25 64 2c 20 25    	cmp    ah,BYTE PTR [rip+0x25202c64]        # 2520f679 <_end+0x250d2639>
    ca15:	64 20 66 6c          	and    BYTE PTR fs:[rsi+0x6c],ah
    ca19:	61                   	(bad)  
    ca1a:	67 73 25             	addr32 jae ca42 <_IO_stdin_used+0xa42>
    ca1d:	73 0a                	jae    ca29 <_IO_stdin_used+0xa29>
    ca1f:	00 1b                	add    BYTE PTR [rbx],bl
    ca21:	5b                   	pop    rbx
    ca22:	39 36                	cmp    DWORD PTR [rsi],esi
    ca24:	6d                   	ins    DWORD PTR es:[rdi],dx
    ca25:	00 25 73 00 49 50    	add    BYTE PTR [rip+0x50490073],ah        # 5049ca9e <_end+0x5035fa5e>
    ca2b:	76 34                	jbe    ca61 <_IO_stdin_used+0xa61>
    ca2d:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642604a6 <_end+0x64123466>
    ca33:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325ea77 <_end+0x73121a37>
    ca39:	3a 25 64 20 55 44    	cmp    ah,BYTE PTR [rip+0x44552064]        # 4455eaa3 <_end+0x44421a63>
    ca3f:	50                   	push   rax
    ca40:	0a 00                	or     al,BYTE PTR [rax]
    ca42:	1b 5b 30             	sbb    ebx,DWORD PTR [rbx+0x30]
    ca45:	6d                   	ins    DWORD PTR es:[rdi],dx
    ca46:	00 00                	add    BYTE PTR [rax],al
    ca48:	49 50                	rex.WB push r8
    ca4a:	76 34                	jbe    ca80 <_IO_stdin_used+0xa80>
    ca4c:	20 49 47             	and    BYTE PTR [rcx+0x47],cl
    ca4f:	4d 50                	rex.WRB push r8
    ca51:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2deaca <_end+0x3e1a1a8a>
    ca57:	20 25 73 20 5b 00    	and    BYTE PTR [rip+0x5b2073],ah        # 5bead0 <_end+0x481a90>
    ca5d:	20 4d 65             	and    BYTE PTR [rbp+0x65],cl
    ca60:	6d                   	ins    DWORD PTR es:[rdi],dx
    ca61:	62                   	(bad)  
    ca62:	65 72 73             	gs jb  cad8 <_IO_stdin_used+0xad8>
    ca65:	68 69 70 20 51       	push   0x51207069
    ca6a:	75 65                	jne    cad1 <_IO_stdin_used+0xad1>
    ca6c:	72 79                	jb     cae7 <_IO_stdin_used+0xae7>
    ca6e:	20 5d 00             	and    BYTE PTR [rbp+0x0],bl
    ca71:	00 00                	add    BYTE PTR [rax],al
    ca73:	00 00                	add    BYTE PTR [rax],al
    ca75:	00 00                	add    BYTE PTR [rax],al
    ca77:	00 20                	add    BYTE PTR [rax],ah
    ca79:	4d                   	rex.WRB
    ca7a:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    ca7c:	62                   	(bad)  
    ca7d:	65 72 73             	gs jb  caf3 <_IO_stdin_used+0xaf3>
    ca80:	68 69 70 20 52       	push   0x52207069
    ca85:	65 70 6f             	gs jo  caf7 <_IO_stdin_used+0xaf7>
    ca88:	72 74                	jb     cafe <_IO_stdin_used+0xafe>
    ca8a:	20 2f                	and    BYTE PTR [rdi],ch
    ca8c:	20 4a 6f             	and    BYTE PTR [rdx+0x6f],cl
    ca8f:	69 6e 20 67 72 6f 75 	imul   ebp,DWORD PTR [rsi+0x20],0x756f7267
    ca96:	70 20                	jo     cab8 <_IO_stdin_used+0xab8>
    ca98:	25 73 20 66 6f       	and    eax,0x6f662073
    ca9d:	72 20                	jb     cabf <_IO_stdin_used+0xabf>
    ca9f:	61                   	(bad)  
    caa0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    caa1:	79 20                	jns    cac3 <_IO_stdin_used+0xac3>
    caa3:	73 6f                	jae    cb14 <_IO_stdin_used+0xb14>
    caa5:	75 72                	jne    cb19 <_IO_stdin_used+0xb19>
    caa7:	63 65 73             	movsxd esp,DWORD PTR [rbp+0x73]
    caaa:	20 5d 0a             	and    BYTE PTR [rbp+0xa],bl
    caad:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    cab0:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    cab4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cab5:	20 49 47             	and    BYTE PTR [rcx+0x47],cl
    cab8:	4d 50                	rex.WRB push r8
    caba:	20 54 79 70          	and    BYTE PTR [rcx+rdi*2+0x70],dl
    cabe:	65 3d 25 64 20 5d    	gs cmp eax,0x5d206425
    cac4:	0a 00                	or     al,BYTE PTR [rax]
    cac6:	25 64 2d 25 30       	and    eax,0x30252d64
    cacb:	32 64 2d 25          	xor    ah,BYTE PTR [rbp+rbp*1+0x25]
    cacf:	30 32                	xor    BYTE PTR [rdx],dh
    cad1:	64 20 25 30 32 64 3a 	and    BYTE PTR fs:[rip+0x3a643230],ah        # 3a64fd08 <_end+0x3a512cc8>
    cad8:	25 30 32 64 3a       	and    eax,0x3a643230
    cadd:	25 30 32 64 00       	and    eax,0x643230
    cae2:	25 73 20 25 73       	and    eax,0x73252073
    cae7:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2deb60 <_end+0x3e1a1b20>
    caed:	20 25 73 0a 00 25    	and    BYTE PTR [rip+0x25000a73],ah        # 2500d566 <_end+0x24ed0526>
    caf3:	73 20                	jae    cb15 <_IO_stdin_used+0xb15>
    caf5:	25 73 20 25 73       	and    eax,0x73252073
    cafa:	3a 25 64 20 2d 3e    	cmp    ah,BYTE PTR [rip+0x3e2d2064]        # 3e2deb64 <_end+0x3e1a1b24>
    cb00:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64260579 <_end+0x64123539>
    cb06:	0a 00                	or     al,BYTE PTR [rax]
    cb08:	25 73 00 61 00       	and    eax,0x610073
    cb0d:	25 30 32 78 00       	and    eax,0x783230
    cb12:	00 00                	add    BYTE PTR [rax],al
    cb14:	00 00                	add    BYTE PTR [rax],al
    cb16:	00 00                	add    BYTE PTR [rax],al
    cb18:	72 00                	jb     cb1a <_IO_stdin_used+0xb1a>
    cb1a:	00 00                	add    BYTE PTR [rax],al
    cb1c:	00 00                	add    BYTE PTR [rax],al
    cb1e:	00 00                	add    BYTE PTR [rax],al
    cb20:	45 72 72             	rex.RB jb cb95 <_IO_stdin_used+0xb95>
    cb23:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb24:	72 20                	jb     cb46 <_IO_stdin_used+0xb46>
    cb26:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb27:	70 65                	jo     cb8e <_IO_stdin_used+0xb8e>
    cb29:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cb2a:	69 6e 67 20 63 6f 6e 	imul   ebp,DWORD PTR [rsi+0x67],0x6e6f6320
    cb31:	66 69 67 75 72 61    	imul   sp,WORD PTR [rdi+0x75],0x6172
    cb37:	74 69                	je     cba2 <_IO_stdin_used+0xba2>
    cb39:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb3a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cb3b:	20 66 69             	and    BYTE PTR [rsi+0x69],ah
    cb3e:	6c                   	ins    BYTE PTR es:[rdi],dx
    cb3f:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    cb42:	25 73 0a 00 0a       	and    eax,0xa000a73
    cb47:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    cb4a:	72 69                	jb     cbb5 <_IO_stdin_used+0xbb5>
    cb4c:	63 74 5f 69          	movsxd esi,DWORD PTR [rdi+rbx*2+0x69]
    cb50:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
    cb53:	5f                   	pop    rdi
    cb54:	74 69                	je     cbbf <_IO_stdin_used+0xbbf>
    cb56:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb57:	65 73 74             	gs jae cbce <_IO_stdin_used+0xbce>
    cb5a:	61                   	(bad)  
    cb5b:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb5c:	70 5f                	jo     cbbd <_IO_stdin_used+0xbbd>
    cb5e:	72 65                	jb     cbc5 <_IO_stdin_used+0xbc5>
    cb60:	71 3d                	jno    cb9f <_IO_stdin_used+0xb9f>
    cb62:	00 59 45             	add    BYTE PTR [rcx+0x45],bl
    cb65:	53                   	push   rbx
    cb66:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    cb69:	72 69                	jb     cbd4 <_IO_stdin_used+0xbd4>
    cb6b:	63 74 5f 6e          	movsxd esi,DWORD PTR [rdi+rbx*2+0x6e]
    cb6f:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb70:	61                   	(bad)  
    cb71:	70 5f                	jo     cbd2 <_IO_stdin_used+0xbd2>
    cb73:	68 6f 73 74 5f       	push   0x5f74736f
    cb78:	61                   	(bad)  
    cb79:	6c                   	ins    BYTE PTR es:[rdi],dx
    cb7a:	69 76 65 5f 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x6568635f
    cb81:	63 6b 3d             	movsxd ebp,DWORD PTR [rbx+0x3d]
    cb84:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
    cb87:	65 61                	gs (bad) 
    cb89:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cb8a:	5f                   	pop    rdi
    cb8b:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    cb8e:	61                   	(bad)  
    cb8f:	79 5f                	jns    cbf0 <_IO_stdin_used+0xbf0>
    cb91:	69 6e 5f 70 61 63 6b 	imul   ebp,DWORD PTR [rsi+0x5f],0x6b636170
    cb98:	65 74 73             	gs je  cc0e <_IO_stdin_used+0xc0e>
    cb9b:	3d 00 43 6c 65       	cmp    eax,0x656c4300
    cba0:	61                   	(bad)  
    cba1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cba2:	20 64 65 6c          	and    BYTE PTR [rbp+riz*2+0x6c],ah
    cba6:	61                   	(bad)  
    cba7:	79 20                	jns    cbc9 <_IO_stdin_used+0xbc9>
    cba9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbaa:	65 65 64 73 20       	gs gs fs jae cbcf <_IO_stdin_used+0xbcf>
    cbaf:	61                   	(bad)  
    cbb0:	20 76 61             	and    BYTE PTR [rsi+0x61],dh
    cbb3:	6c                   	ins    BYTE PTR es:[rdi],dx
    cbb4:	75 65                	jne    cc1b <_IO_stdin_used+0xc1b>
    cbb6:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
    cbb9:	65 61                	gs (bad) 
    cbbb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbbc:	5f                   	pop    rdi
    cbbd:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    cbc0:	61                   	(bad)  
    cbc1:	79 5f                	jns    cc22 <_IO_stdin_used+0xc22>
    cbc3:	69 6e 5f 6d 73 65 63 	imul   ebp,DWORD PTR [rsi+0x5f],0x6365736d
    cbca:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cbcb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbcc:	64 73 3d             	fs jae cc0c <_IO_stdin_used+0xc0c>
    cbcf:	00 75 73             	add    BYTE PTR [rbp+0x73],dh
    cbd2:	65 5f                	gs pop rdi
    cbd4:	73 71                	jae    cc47 <_IO_stdin_used+0xc47>
    cbd6:	6c                   	ins    BYTE PTR es:[rdi],dx
    cbd7:	69 74 65 3d 00 73 71 	imul   esi,DWORD PTR [rbp+riz*2+0x3d],0x6c717300
    cbde:	6c 
    cbdf:	69 74 65 5f 64 61 74 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x61746164
    cbe6:	61 
    cbe7:	62 61                	(bad)  
    cbe9:	73 65                	jae    cc50 <_IO_stdin_used+0xc50>
    cbeb:	5f                   	pop    rdi
    cbec:	70 61                	jo     cc4f <_IO_stdin_used+0xc4f>
    cbee:	74 68                	je     cc58 <_IO_stdin_used+0xc58>
    cbf0:	3d 00 73 71 6c       	cmp    eax,0x6c717300
    cbf5:	69 74 65 5f 64 61 74 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x61746164
    cbfc:	61 
    cbfd:	62 61                	(bad)  
    cbff:	73 65                	jae    cc66 <_IO_stdin_used+0xc66>
    cc01:	5f                   	pop    rdi
    cc02:	70 61                	jo     cc65 <_IO_stdin_used+0xc65>
    cc04:	74 68                	je     cc6e <_IO_stdin_used+0xc6e>
    cc06:	3a 20                	cmp    ah,BYTE PTR [rax]
    cc08:	25 73 00 69 6e       	and    eax,0x6e690073
    cc0d:	5f                   	pop    rdi
    cc0e:	61                   	(bad)  
    cc0f:	64 61                	fs (bad) 
    cc11:	70 74                	jo     cc87 <_IO_stdin_used+0xc87>
    cc13:	65 72 3d             	gs jb  cc53 <_IO_stdin_used+0xc53>
    cc16:	00 00                	add    BYTE PTR [rax],al
    cc18:	72 75                	jb     cc8f <_IO_stdin_used+0xc8f>
    cc1a:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc1b:	65 5f                	gs pop rdi
    cc1d:	70 61                	jo     cc80 <_IO_stdin_used+0xc80>
    cc1f:	72 73                	jb     cc94 <_IO_stdin_used+0xc94>
    cc21:	65 72 2e             	gs jb  cc52 <_IO_stdin_used+0xc52>
    cc24:	63 3a                	movsxd edi,DWORD PTR [rdx]
    cc26:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    cc29:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc2a:	65 5f                	gs pop rdi
    cc2c:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc2d:	69 62 72 61 72 79 5f 	imul   esp,DWORD PTR [rdx+0x72],0x5f797261
    cc34:	70 61                	jo     cc97 <_IO_stdin_used+0xc97>
    cc36:	72 73                	jb     ccab <_IO_stdin_used+0xcab>
    cc38:	65 72 3a             	gs jb  cc75 <_IO_stdin_used+0xc75>
    cc3b:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    cc3e:	5f                   	pop    rdi
    cc3f:	61                   	(bad)  
    cc40:	64 61                	fs (bad) 
    cc42:	70 74                	jo     ccb8 <_IO_stdin_used+0xcb8>
    cc44:	65 72 3a             	gs jb  cc81 <_IO_stdin_used+0xc81>
    cc47:	20 25 73 00 6f 75    	and    BYTE PTR [rip+0x756f0073],ah        # 756fccc0 <_end+0x755bfc80>
    cc4d:	74 5f                	je     ccae <_IO_stdin_used+0xcae>
    cc4f:	61                   	(bad)  
    cc50:	64 61                	fs (bad) 
    cc52:	70 74                	jo     ccc8 <_IO_stdin_used+0xcc8>
    cc54:	65 72 3d             	gs jb  cc94 <_IO_stdin_used+0xc94>
    cc57:	00 72 75             	add    BYTE PTR [rdx+0x75],dh
    cc5a:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc5b:	65 5f                	gs pop rdi
    cc5d:	70 61                	jo     ccc0 <_IO_stdin_used+0xcc0>
    cc5f:	72 73                	jb     ccd4 <_IO_stdin_used+0xcd4>
    cc61:	65 72 2e             	gs jb  cc92 <_IO_stdin_used+0xc92>
    cc64:	63 3a                	movsxd edi,DWORD PTR [rdx]
    cc66:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    cc69:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc6a:	65 5f                	gs pop rdi
    cc6c:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc6d:	69 62 72 61 72 79 5f 	imul   esp,DWORD PTR [rdx+0x72],0x5f797261
    cc74:	70 61                	jo     ccd7 <_IO_stdin_used+0xcd7>
    cc76:	72 73                	jb     cceb <_IO_stdin_used+0xceb>
    cc78:	65 72 3a             	gs jb  ccb5 <_IO_stdin_used+0xcb5>
    cc7b:	20 6f 75             	and    BYTE PTR [rdi+0x75],ch
    cc7e:	74 5f                	je     ccdf <_IO_stdin_used+0xcdf>
    cc80:	61                   	(bad)  
    cc81:	64 61                	fs (bad) 
    cc83:	70 74                	jo     ccf9 <_IO_stdin_used+0xcf9>
    cc85:	65 72 3a             	gs jb  ccc2 <_IO_stdin_used+0xcc2>
    cc88:	20 25 73 00 6d 6f    	and    BYTE PTR [rip+0x6f6d0073],ah        # 6f6dcd01 <_end+0x6f59fcc1>
    cc8e:	64 65 3d 00 6d 6f 64 	fs gs cmp eax,0x646f6d00
    cc95:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    cc98:	25 73 00 52 75       	and    eax,0x75520073
    cc9d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cc9e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cc9f:	69 6e 67 20 69 6e 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206e6920
    cca6:	00 32                	add    BYTE PTR [rdx],dh
    cca8:	00 49 50             	add    BYTE PTR [rcx+0x50],cl
    ccab:	53                   	push   rbx
    ccac:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    ccaf:	64 65 20 61 73       	fs and BYTE PTR gs:[rcx+0x73],ah
    ccb4:	20 70 65             	and    BYTE PTR [rax+0x65],dh
    ccb7:	72 20                	jb     ccd9 <_IO_stdin_used+0xcd9>
    ccb9:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    ccbc:	66 69 67 00 49 44    	imul   sp,WORD PTR [rdi+0x0],0x4449
    ccc2:	53                   	push   rbx
    ccc3:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    ccc6:	64 65 20 61 73       	fs and BYTE PTR gs:[rcx+0x73],ah
    cccb:	20 70 65             	and    BYTE PTR [rax+0x65],dh
    ccce:	72 20                	jb     ccf0 <_IO_stdin_used+0xcf0>
    ccd0:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    ccd3:	66 69 67 00 6c 6f    	imul   sp,WORD PTR [rdi+0x0],0x6f6c
    ccd9:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
    ccdc:	69 70 3d 00 6c 6f 63 	imul   esi,DWORD PTR [rax+0x3d],0x636f6c00
    cce3:	61                   	(bad)  
    cce4:	6c                   	ins    BYTE PTR es:[rdi],dx
    cce5:	5f                   	pop    rdi
    cce6:	69 70 20 61 73 20 70 	imul   esi,DWORD PTR [rax+0x20],0x70207361
    cced:	65 72 20             	gs jb  cd10 <_IO_stdin_used+0xd10>
    ccf0:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    ccf3:	66 69 67 3a 20 25    	imul   sp,WORD PTR [rdi+0x3a],0x2520
    ccf9:	73 00                	jae    ccfb <_IO_stdin_used+0xcfb>
    ccfb:	64 65 66 67 77 3d    	fs gs data16 addr32 ja cd3e <_IO_stdin_used+0xd3e>
    cd01:	00 75 73             	add    BYTE PTR [rbp+0x73],dh
    cd04:	65 5f                	gs pop rdi
    cd06:	73 70                	jae    cd78 <_IO_stdin_used+0xd78>
    cd08:	69 3d 00 56 49 47 49 	imul   edi,DWORD PTR [rip+0x47495600],0x53204c49        # 474a2312 <_end+0x473652d2>
    cd0f:	4c 20 53 
    cd12:	50                   	push   rax
    cd13:	49 20 73 65          	rex.WB and BYTE PTR [r11+0x65],sil
    cd17:	72 76                	jb     cd8f <_IO_stdin_used+0xd8f>
    cd19:	69 63 65 20 61 63 74 	imul   esp,DWORD PTR [rbx+0x65],0x74636120
    cd20:	69 76 65 00 48 4f 4d 	imul   esi,DWORD PTR [rsi+0x65],0x4d4f4800
    cd27:	45 5f                	rex.RB pop r15
    cd29:	4e                   	rex.WRX
    cd2a:	45 54                	rex.RB push r12
    cd2c:	3d 00 48 4f 4d       	cmp    eax,0x4d4f4800
    cd31:	45 5f                	rex.RB pop r15
    cd33:	4e                   	rex.WRX
    cd34:	45 54                	rex.RB push r12
    cd36:	5f                   	pop    rdi
    cd37:	4d                   	rex.WRB
    cd38:	41 53                	push   r11
    cd3a:	4b 3d 00 6c 6f 63    	rex.WXB cmp rax,0x636f6c00
    cd40:	61                   	(bad)  
    cd41:	74 69                	je     cdac <_IO_stdin_used+0xdac>
    cd43:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd44:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd45:	3d 00 65 78 74       	cmp    eax,0x74786500
    cd4a:	65 72 6e             	gs jb  cdbb <_IO_stdin_used+0xdbb>
    cd4d:	61                   	(bad)  
    cd4e:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd4f:	00 53 79             	add    BYTE PTR [rbx+0x79],dl
    cd52:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd53:	74 61                	je     cdb6 <_IO_stdin_used+0xdb6>
    cd55:	78 20                	js     cd77 <_IO_stdin_used+0xd77>
    cd57:	65 72 72             	gs jb  cdcc <_IO_stdin_used+0xdcc>
    cd5a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd5b:	72 20                	jb     cd7d <_IO_stdin_used+0xd7d>
    cd5d:	61                   	(bad)  
    cd5e:	74 20                	je     cd80 <_IO_stdin_used+0xd80>
    cd60:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd61:	69 6e 65 20 25 64 3a 	imul   ebp,DWORD PTR [rsi+0x65],0x3a642520
    cd68:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # d7e1 <_IO_stdin_used+0x17e1>
    cd6e:	00 00                	add    BYTE PTR [rax],al
    cd70:	45 72 72             	rex.RB jb cde5 <_IO_stdin_used+0xde5>
    cd73:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd74:	72 20                	jb     cd96 <_IO_stdin_used+0xd96>
    cd76:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd77:	70 65                	jo     cdde <_IO_stdin_used+0xdde>
    cd79:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd7a:	69 6e 67 20 72 75 6c 	imul   ebp,DWORD PTR [rsi+0x67],0x6c757220
    cd81:	65 20 66 69          	and    BYTE PTR gs:[rsi+0x69],ah
    cd85:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd86:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    cd89:	25 73 2e 20 52       	and    eax,0x52202e73
    cd8e:	65 66 75 73          	gs data16 jne ce05 <_IO_stdin_used+0xe05>
    cd92:	69 6e 67 20 74 6f 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
    cd99:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    cd9c:	74 69                	je     ce07 <_IO_stdin_used+0xe07>
    cd9e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd9f:	75 65                	jne    ce06 <_IO_stdin_used+0xe06>
    cda1:	0a 00                	or     al,BYTE PTR [rax]
    cda3:	50                   	push   rax
    cda4:	61                   	(bad)  
    cda5:	72 73                	jb     ce1a <_IO_stdin_used+0xe1a>
    cda7:	69 6e 67 20 66 69 6c 	imul   ebp,DWORD PTR [rsi+0x67],0x6c696620
    cdae:	65 20 25 73 0a 00 61 	and    BYTE PTR gs:[rip+0x61000a73],ah        # 6100d828 <_end+0x60ed07e8>
    cdb5:	6c                   	ins    BYTE PTR es:[rdi],dx
    cdb6:	65 72 74             	gs jb  ce2d <_IO_stdin_used+0xe2d>
    cdb9:	00 46 69             	add    BYTE PTR [rsi+0x69],al
    cdbc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cdbd:	69 73 68 65 64 20 70 	imul   esi,DWORD PTR [rbx+0x68],0x70206465
    cdc4:	61                   	(bad)  
    cdc5:	72 73                	jb     ce3a <_IO_stdin_used+0xe3a>
    cdc7:	69 6e 67 20 25 73 0a 	imul   ebp,DWORD PTR [rsi+0x67],0xa732520
    cdce:	00 00                	add    BYTE PTR [rax],al
    cdd0:	45 72 72             	rex.RB jb ce45 <_IO_stdin_used+0xe45>
    cdd3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cdd4:	72 20                	jb     cdf6 <_IO_stdin_used+0xdf6>
    cdd6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cdd7:	70 65                	jo     ce3e <_IO_stdin_used+0xe3e>
    cdd9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cdda:	69 6e 67 20 25 73 20 	imul   ebp,DWORD PTR [rsi+0x67],0x20732520
    cde1:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    cde3:	72 20                	jb     ce05 <_IO_stdin_used+0xe05>
    cde5:	65 78 70             	gs js  ce58 <_IO_stdin_used+0xe58>
    cde8:	6c                   	ins    BYTE PTR es:[rdi],dx
    cde9:	2f                   	(bad)  
    cdea:	69 6d 70 6c 69 63 69 	imul   ebp,DWORD PTR [rbp+0x70],0x6963696c
    cdf1:	74 20                	je     ce13 <_IO_stdin_used+0xe13>
    cdf3:	64 65 6e             	fs outs dx,BYTE PTR gs:[rsi]
    cdf6:	79 20                	jns    ce18 <_IO_stdin_used+0xe18>
    cdf8:	70 61                	jo     ce5b <_IO_stdin_used+0xe5b>
    cdfa:	72 73                	jb     ce6f <_IO_stdin_used+0xe6f>
    cdfc:	69 6e 67 0a 00 69 70 	imul   ebp,DWORD PTR [rsi+0x67],0x7069000a
    ce03:	76 34                	jbe    ce39 <_IO_stdin_used+0xe39>
    ce05:	00 46 61             	add    BYTE PTR [rsi+0x61],al
    ce08:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    ce0f:	20 
    ce10:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ce11:	70 65                	jo     ce78 <_IO_stdin_used+0xe78>
    ce13:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ce14:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # d88d <_IO_stdin_used+0x188d>
    ce1a:	00 00                	add    BYTE PTR [rax],al
    ce1c:	00 00                	add    BYTE PTR [rax],al
    ce1e:	00 00                	add    BYTE PTR [rax],al
    ce20:	52                   	push   rdx
    ce21:	75 6e                	jne    ce91 <_IO_stdin_used+0xe91>
    ce23:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ce24:	69 6e 67 20 61 73 20 	imul   ebp,DWORD PTR [rsi+0x67],0x20736120
    ce2b:	50                   	push   rax
    ce2c:	49                   	rex.WB
    ce2d:	44 20 25 64 0a 00 00 	and    BYTE PTR [rip+0xa64],r12b        # d898 <_IO_stdin_used+0x1898>
    ce34:	00 00                	add    BYTE PTR [rax],al
    ce36:	00 00                	add    BYTE PTR [rax],al
    ce38:	52                   	push   rdx
    ce39:	55                   	push   rbp
    ce3a:	4e                   	rex.WRX
    ce3b:	4e                   	rex.WRX
    ce3c:	49                   	rex.WB
    ce3d:	4e                   	rex.WRX
    ce3e:	47 20 49 4e          	rex.RXB and BYTE PTR [r9+0x4e],r9b
    ce42:	20 44 45 4d          	and    BYTE PTR [rbp+rax*2+0x4d],al
    ce46:	4f                   	rex.WRXB
    ce47:	4e 53                	rex.WRX push rbx
    ce49:	54                   	push   rsp
    ce4a:	52                   	push   rdx
    ce4b:	41 54                	push   r12
    ce4d:	49                   	rex.WB
    ce4e:	4f                   	rex.WRXB
    ce4f:	4e 20 4d 4f          	rex.WRX and BYTE PTR [rbp+0x4f],r9b
    ce53:	44                   	rex.R
    ce54:	45                   	rex.RB
    ce55:	2e 20 59 4f          	cs and BYTE PTR [rcx+0x4f],bl
    ce59:	55                   	push   rbp
    ce5a:	20 48 41             	and    BYTE PTR [rax+0x41],cl
    ce5d:	56                   	push   rsi
    ce5e:	45 20 31             	and    BYTE PTR [r9],r14b
    ce61:	30 20                	xor    BYTE PTR [rax],ah
    ce63:	53                   	push   rbx
    ce64:	45                   	rex.RB
    ce65:	43                   	rex.XB
    ce66:	4f                   	rex.WRXB
    ce67:	4e                   	rex.WRX
    ce68:	44 53                	rex.R push rbx
    ce6a:	20 54 4f 20          	and    BYTE PTR [rdi+rcx*2+0x20],dl
    ce6e:	41                   	rex.B
    ce6f:	42                   	rex.X
    ce70:	4f 52                	rex.WRXB push r10
    ce72:	54                   	push   rsp
    ce73:	2e 00 00             	cs add BYTE PTR [rax],al
    ce76:	00 00                	add    BYTE PTR [rax],al
    ce78:	52                   	push   rdx
    ce79:	55                   	push   rbp
    ce7a:	4e                   	rex.WRX
    ce7b:	4e                   	rex.WRX
    ce7c:	49                   	rex.WB
    ce7d:	4e                   	rex.WRX
    ce7e:	47 20 49 4e          	rex.RXB and BYTE PTR [r9+0x4e],r9b
    ce82:	20 54 45 53          	and    BYTE PTR [rbp+rax*2+0x53],dl
    ce86:	54                   	push   rsp
    ce87:	20 4d 4f             	and    BYTE PTR [rbp+0x4f],cl
    ce8a:	44                   	rex.R
    ce8b:	45                   	rex.RB
    ce8c:	2e 20 59 4f          	cs and BYTE PTR [rcx+0x4f],bl
    ce90:	55                   	push   rbp
    ce91:	20 48 41             	and    BYTE PTR [rax+0x41],cl
    ce94:	56                   	push   rsi
    ce95:	45 20 31             	and    BYTE PTR [r9],r14b
    ce98:	30 20                	xor    BYTE PTR [rax],ah
    ce9a:	53                   	push   rbx
    ce9b:	45                   	rex.RB
    ce9c:	43                   	rex.XB
    ce9d:	4f                   	rex.WRXB
    ce9e:	4e                   	rex.WRX
    ce9f:	44 53                	rex.R push rbx
    cea1:	20 54 4f 20          	and    BYTE PTR [rdi+rcx*2+0x20],dl
    cea5:	41                   	rex.B
    cea6:	42                   	rex.X
    cea7:	4f 52                	rex.WRXB push r10
    cea9:	54                   	push   rsp
    ceaa:	2e 00 55 6e          	cs add BYTE PTR [rbp+0x6e],dl
    ceae:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    ceb2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ceb3:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    ceb6:	67 75 6d             	addr32 jne cf26 <_IO_stdin_used+0xf26>
    ceb9:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    cebb:	74 20                	je     cedd <_IO_stdin_used+0xedd>
    cebd:	2d 25 63 0a 00       	sub    eax,0xa6325
    cec2:	70 64                	jo     cf28 <_IO_stdin_used+0xf28>
    cec4:	71 68                	jno    cf2e <_IO_stdin_used+0xf2e>
    cec6:	74 65                	je     cf2d <_IO_stdin_used+0xf2d>
    cec8:	69 3a 00 2f 65 74    	imul   edi,DWORD PTR [rdx],0x74652f00
    cece:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    ced0:	76 69                	jbe    cf3b <_IO_stdin_used+0xf3b>
    ced2:	67 69 6c 2f 64 65 6e 	imul   ebp,DWORD PTR [edi+ebp*1+0x64],0x2e796e65
    ced9:	79 2e 
    cedb:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    cede:	66 00 46 69          	data16 add BYTE PTR [rsi+0x69],al
    cee2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cee3:	73 69                	jae    cf4e <_IO_stdin_used+0xf4e>
    cee5:	73 68                	jae    cf4f <_IO_stdin_used+0xf4f>
    cee7:	65 64 20 6c 6f 61    	gs and BYTE PTR fs:[rdi+rbp*2+0x61],ch
    ceed:	64 69 6e 67 20 65 78 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x70786520
    cef4:	70 
    cef5:	6c                   	ins    BYTE PTR es:[rdi],dx
    cef6:	69 63 69 74 20 64 65 	imul   esp,DWORD PTR [rbx+0x69],0x65642074
    cefd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cefe:	79 20                	jns    cf20 <_IO_stdin_used+0xf20>
    cf00:	66 69 6c 65 28 2f 65 	imul   bp,WORD PTR [rbp+riz*2+0x28],0x652f
    cf07:	74 63                	je     cf6c <_IO_stdin_used+0xf6c>
    cf09:	2f                   	(bad)  
    cf0a:	76 69                	jbe    cf75 <_IO_stdin_used+0xf75>
    cf0c:	67 69 6c 2f 64 65 6e 	imul   ebp,DWORD PTR [edi+ebp*1+0x64],0x2e796e65
    cf13:	79 2e 
    cf15:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    cf18:	66 29 00             	sub    WORD PTR [rax],ax
    cf1b:	2f                   	(bad)  
    cf1c:	65 74 63             	gs je  cf82 <_IO_stdin_used+0xf82>
    cf1f:	2f                   	(bad)  
    cf20:	76 69                	jbe    cf8b <_IO_stdin_used+0xf8b>
    cf22:	67 69 6c 2f 76 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x76],0x6c696769
    cf29:	69 6c 
    cf2b:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    cf2f:	66 00 50 61          	data16 add BYTE PTR [rax+0x61],dl
    cf33:	72 73                	jb     cfa8 <_IO_stdin_used+0xfa8>
    cf35:	65 64 20 72 75       	gs and BYTE PTR fs:[rdx+0x75],dh
    cf3a:	6c                   	ins    BYTE PTR es:[rdi],dx
    cf3b:	65 20 66 69          	and    BYTE PTR gs:[rsi+0x69],ah
    cf3f:	6c                   	ins    BYTE PTR es:[rdi],dx
    cf40:	65 73 00             	gs jae cf43 <_IO_stdin_used+0xf43>
    cf43:	00 00                	add    BYTE PTR [rax],al
    cf45:	00 00                	add    BYTE PTR [rax],al
    cf47:	00 56 49             	add    BYTE PTR [rsi+0x49],dl
    cf4a:	47                   	rex.RXB
    cf4b:	49                   	rex.WB
    cf4c:	4c 20 6c 69 73       	rex.WR and BYTE PTR [rcx+rbp*2+0x73],r13b
    cf51:	74 65                	je     cfb8 <_IO_stdin_used+0xfb8>
    cf53:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cf54:	69 6e 67 20 6f 6e 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206e6f20
    cf5b:	69 6e 74 65 72 66 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61667265
    cf62:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    cf65:	25 73 0a 00 70       	and    eax,0x70000a73
    cf6a:	63 61 70             	movsxd esp,DWORD PTR [rcx+0x70]
    cf6d:	5f                   	pop    rdi
    cf6e:	6d                   	ins    DWORD PTR es:[rdi],dx
    cf6f:	67 72 20             	addr32 jb cf92 <_IO_stdin_used+0xf92>
    cf72:	69 6e 20 70 63 61 70 	imul   ebp,DWORD PTR [rsi+0x20],0x70616370
    cf79:	5f                   	pop    rdi
    cf7a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cf7b:	70 65                	jo     cfe2 <_IO_stdin_used+0xfe2>
    cf7d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cf7e:	5f                   	pop    rdi
    cf7f:	6c                   	ins    BYTE PTR es:[rdi],dx
    cf80:	69 76 65 00 00 00 00 	imul   esi,DWORD PTR [rsi+0x65],0x0
    cf87:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    cf8a:	65 63 72 79          	movsxd esi,DWORD PTR gs:[rdx+0x79]
    cf8e:	70 74                	jo     d004 <_IO_stdin_used+0x1004>
    cf90:	65 64 20 4e 53       	gs and BYTE PTR fs:[rsi+0x53],cl
    cf95:	48 20 63 6f          	rex.W and BYTE PTR [rbx+0x6f],spl
    cf99:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cf9a:	66 69 67 20 73 65    	imul   sp,WORD PTR [rdi+0x20],0x6573
    cfa0:	72 76                	jb     d018 <_IO_stdin_used+0x1018>
    cfa2:	65 72 20             	gs jb  cfc5 <_IO_stdin_used+0xfc5>
    cfa5:	73 74                	jae    d01b <_IO_stdin_used+0x101b>
    cfa7:	61                   	(bad)  
    cfa8:	72 74                	jb     d01e <_IO_stdin_used+0x101e>
    cfaa:	65 64 3a 20          	gs cmp ah,BYTE PTR fs:[rax]
    cfae:	31 32                	xor    DWORD PTR [rdx],esi
    cfb0:	37                   	(bad)  
    cfb1:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
    cfb4:	30 2e                	xor    BYTE PTR [rsi],ch
    cfb6:	31 3a                	xor    DWORD PTR [rdx],edi
    cfb8:	36 34 31             	ss xor al,0x31
    cfbb:	00 47 9b             	add    BYTE PTR [rdi-0x65],al
    cfbe:	ff                   	(bad)  
    cfbf:	ff 84 9b ff ff c2 9b 	inc    DWORD PTR [rbx+rbx*4-0x643d0001]
    cfc6:	ff                   	(bad)  
    cfc7:	ff c2                	inc    edx
    cfc9:	9b                   	fwait
    cfca:	ff                   	(bad)  
    cfcb:	ff 53 9b             	call   QWORD PTR [rbx-0x65]
    cfce:	ff                   	(bad)  
    cfcf:	ff 62 9b             	jmp    QWORD PTR [rdx-0x65]
    cfd2:	ff                   	(bad)  
    cfd3:	ff c2                	inc    edx
    cfd5:	9b                   	fwait
    cfd6:	ff                   	(bad)  
    cfd7:	ff c2                	inc    edx
    cfd9:	9b                   	fwait
    cfda:	ff                   	(bad)  
    cfdb:	ff c2                	inc    edx
    cfdd:	9b                   	fwait
    cfde:	ff                   	(bad)  
    cfdf:	ff c2                	inc    edx
    cfe1:	9b                   	fwait
    cfe2:	ff                   	(bad)  
    cfe3:	ff c2                	inc    edx
    cfe5:	9b                   	fwait
    cfe6:	ff                   	(bad)  
    cfe7:	ff c2                	inc    edx
    cfe9:	9b                   	fwait
    cfea:	ff                   	(bad)  
    cfeb:	ff 72 9b             	push   QWORD PTR [rdx-0x65]
    cfee:	ff                   	(bad)  
    cfef:	ff                   	(bad)  
    cff0:	7b 9b                	jnp    cf8d <_IO_stdin_used+0xf8d>
    cff2:	ff                   	(bad)  
    cff3:	ff c2                	inc    edx
    cff5:	9b                   	fwait
    cff6:	ff                   	(bad)  
    cff7:	ff c2                	inc    edx
    cff9:	9b                   	fwait
    cffa:	ff                   	(bad)  
    cffb:	ff a3 9b ff ff 0a    	jmp    QWORD PTR [rbx+0xaffff9b]
    d001:	43 61                	rex.XB (bad) 
    d003:	75 67                	jne    d06c <_IO_stdin_used+0x106c>
    d005:	68 74 20 73 69       	push   0x69732074
    d00a:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    d00c:	61                   	(bad)  
    d00d:	6c                   	ins    BYTE PTR es:[rdi],dx
    d00e:	20 25 64 20 61 74    	and    BYTE PTR [rip+0x74612064],ah        # 7461f078 <_end+0x744e2038>
    d014:	20 25 73 2c 20 65    	and    BYTE PTR [rip+0x65202c73],ah        # 6520fc8d <_end+0x650d2c4d>
    d01a:	78 69                	js     d085 <_IO_stdin_used+0x1085>
    d01c:	74 69                	je     d087 <_IO_stdin_used+0x1087>
    d01e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d01f:	67 2e 2e 2e 0a 00    	cs cs cs or al,BYTE PTR [eax]
    d025:	00 54 6f 74          	add    BYTE PTR [rdi+rbp*2+0x74],dl
    d029:	61                   	(bad)  
    d02a:	6c                   	ins    BYTE PTR es:[rdi],dx
    d02b:	20 50 61             	and    BYTE PTR [rax+0x61],dl
    d02e:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d031:	74 73                	je     d0a6 <_IO_stdin_used+0x10a6>
    d033:	20 43 61             	and    BYTE PTR [rbx+0x61],al
    d036:	75 67                	jne    d09f <_IO_stdin_used+0x109f>
    d038:	68 74 3a 20 25       	push   0x25203a74
    d03d:	64 0a 00             	or     al,BYTE PTR fs:[rax]
    d040:	53                   	push   rbx
    d041:	74 61                	je     d0a4 <_IO_stdin_used+0x10a4>
    d043:	74 69                	je     d0ae <_IO_stdin_used+0x10ae>
    d045:	73 74                	jae    d0bb <_IO_stdin_used+0x10bb>
    d047:	69 63 73 0a 49 70 20 	imul   esp,DWORD PTR [rbx+0x73],0x2070490a
    d04e:	61                   	(bad)  
    d04f:	64 64 72 65          	fs fs jb d0b8 <_IO_stdin_used+0x10b8>
    d053:	73 73                	jae    d0c8 <_IO_stdin_used+0x10c8>
    d055:	20 20                	and    BYTE PTR [rax],ah
    d057:	20 20                	and    BYTE PTR [rax],ah
    d059:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    d05b:	75 6e                	jne    d0cb <_IO_stdin_used+0x10cb>
    d05d:	74 0a                	je     d069 <_IO_stdin_used+0x1069>
    d05f:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    d064:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    d069:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    d06e:	2d 2d 00 00 00       	sub    eax,0x2d
    d073:	00 00                	add    BYTE PTR [rax],al
    d075:	00 00                	add    BYTE PTR [rax],al
    d077:	00 25 73 0a 09 09    	add    BYTE PTR [rip+0x9090a73],ah        # 909daf0 <_end+0x8f60ab0>
    d07d:	74 6f                	je     d0ee <_IO_stdin_used+0x10ee>
    d07f:	74 61                	je     d0e2 <_IO_stdin_used+0x10e2>
    d081:	6c                   	ins    BYTE PTR es:[rdi],dx
    d082:	20 70 61             	and    BYTE PTR [rax+0x61],dh
    d085:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d088:	74 73                	je     d0fd <_IO_stdin_used+0x10fd>
    d08a:	20 3d 20 25 64 0a    	and    BYTE PTR [rip+0xa642520],bh        # a64f5b0 <_end+0xa512570>
    d090:	09 09                	or     DWORD PTR [rcx],ecx
    d092:	74 6f                	je     d103 <_IO_stdin_used+0x1103>
    d094:	74 61                	je     d0f7 <_IO_stdin_used+0x10f7>
    d096:	6c                   	ins    BYTE PTR es:[rdi],dx
    d097:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d09a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d09b:	74 20                	je     d0bd <_IO_stdin_used+0x10bd>
    d09d:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0a2:	09 09                	or     DWORD PTR [rcx],ecx
    d0a4:	74 6f                	je     d115 <_IO_stdin_used+0x1115>
    d0a6:	74 61                	je     d109 <_IO_stdin_used+0x1109>
    d0a8:	6c                   	ins    BYTE PTR es:[rdi],dx
    d0a9:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d0ac:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d0af:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0b4:	09 09                	or     DWORD PTR [rcx],ecx
    d0b6:	54                   	push   rsp
    d0b7:	43 50                	rex.XB push r8
    d0b9:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d0bc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d0bd:	74 20                	je     d0df <_IO_stdin_used+0x10df>
    d0bf:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0c4:	09 09                	or     DWORD PTR [rcx],ecx
    d0c6:	54                   	push   rsp
    d0c7:	43 50                	rex.XB push r8
    d0c9:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d0cc:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d0cf:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0d4:	09 09                	or     DWORD PTR [rcx],ecx
    d0d6:	55                   	push   rbp
    d0d7:	44 50                	rex.R push rax
    d0d9:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d0dc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d0dd:	74 20                	je     d0ff <_IO_stdin_used+0x10ff>
    d0df:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0e4:	09 09                	or     DWORD PTR [rcx],ecx
    d0e6:	55                   	push   rbp
    d0e7:	44 50                	rex.R push rax
    d0e9:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d0ec:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d0ef:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0f4:	09 09                	or     DWORD PTR [rcx],ecx
    d0f6:	49                   	rex.WB
    d0f7:	43                   	rex.XB
    d0f8:	4d 50                	rex.WRB push r8
    d0fa:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d0fd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d0fe:	74 20                	je     d120 <_IO_stdin_used+0x1120>
    d100:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d105:	09 09                	or     DWORD PTR [rcx],ecx
    d107:	49                   	rex.WB
    d108:	43                   	rex.XB
    d109:	4d 50                	rex.WRB push r8
    d10b:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d10e:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d111:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d116:	0a 00                	or     al,BYTE PTR [rax]
    d118:	77 00                	ja     d11a <_IO_stdin_used+0x111a>
    d11a:	2f                   	(bad)  
    d11b:	75 73                	jne    d190 <_IO_stdin_used+0x1190>
    d11d:	72 2f                	jb     d14e <_IO_stdin_used+0x114e>
    d11f:	73 68                	jae    d189 <_IO_stdin_used+0x1189>
    d121:	61                   	(bad)  
    d122:	72 65                	jb     d189 <_IO_stdin_used+0x1189>
    d124:	2f                   	(bad)  
    d125:	76 69                	jbe    d190 <_IO_stdin_used+0x1190>
    d127:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    d12e:	63 61 
    d130:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    d133:	2e 63 73 76          	cs movsxd esi,DWORD PTR [rbx+0x76]
    d137:	00 43 61             	add    BYTE PTR [rbx+0x61],al
    d13a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d13b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d13c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d13d:	74 20                	je     d15f <_IO_stdin_used+0x115f>
    d13f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d140:	70 65                	jo     d1a7 <_IO_stdin_used+0x11a7>
    d142:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d143:	20 2f                	and    BYTE PTR [rdi],ch
    d145:	75 73                	jne    d1ba <_IO_stdin_used+0x11ba>
    d147:	72 2f                	jb     d178 <_IO_stdin_used+0x1178>
    d149:	73 68                	jae    d1b3 <_IO_stdin_used+0x11b3>
    d14b:	61                   	(bad)  
    d14c:	72 65                	jb     d1b3 <_IO_stdin_used+0x11b3>
    d14e:	2f                   	(bad)  
    d14f:	76 69                	jbe    d1ba <_IO_stdin_used+0x11ba>
    d151:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    d158:	63 61 
    d15a:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    d15d:	2e 63 73 76          	cs movsxd esi,DWORD PTR [rbx+0x76]
    d161:	3a 20                	cmp    ah,BYTE PTR [rax]
    d163:	70 72                	jo     d1d7 <_IO_stdin_used+0x11d7>
    d165:	69 6e 74 69 6e 67 20 	imul   ebp,DWORD PTR [rsi+0x74],0x20676e69
    d16c:	61                   	(bad)  
    d16d:	72 70                	jb     d1df <_IO_stdin_used+0x11df>
    d16f:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    d172:	68 65 20 74 6f       	push   0x6f742065
    d177:	20 73 63             	and    BYTE PTR [rbx+0x63],dh
    d17a:	72 65                	jb     d1e1 <_IO_stdin_used+0x11e1>
    d17c:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d17e:	00 25 73 20 2d 3e    	add    BYTE PTR [rip+0x3e2d2073],ah        # 3e2df1f7 <_end+0x3e1a21b7>
    d184:	20 25 73 0a 00 25    	and    BYTE PTR [rip+0x25000a73],ah        # 2500dbfd <_end+0x24ed0bbd>
    d18a:	73 2c                	jae    d1b8 <_IO_stdin_used+0x11b8>
    d18c:	25 73 0a 00 31       	and    eax,0x31000a73
    d191:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
    d194:	30 00                	xor    BYTE PTR [rax],al
    d196:	00 00                	add    BYTE PTR [rax],al
    d198:	56                   	push   rsi
    d199:	49                   	rex.WB
    d19a:	47                   	rex.RXB
    d19b:	49                   	rex.WB
    d19c:	4c 20 55 54          	rex.WR and BYTE PTR [rbp+0x54],r10b
    d1a0:	4d 20 25 73 0a 09 2d 	rex.WRB and BYTE PTR [rip+0x2d090a73],r12b        # 2d09dc1a <_end+0x2cf60bda>
    d1a7:	64 3a 20             	cmp    ah,BYTE PTR fs:[rax]
    d1aa:	64 65 62             	fs gs (bad) 
    d1ad:	75 67                	jne    d216 <_IO_stdin_used+0x1216>
    d1af:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    d1b2:	64 65 0a 09          	fs or  cl,BYTE PTR gs:[rcx]
    d1b6:	2d 68 3a 20 64       	sub    eax,0x64203a68
    d1bb:	69 73 70 6c 61 79 20 	imul   esi,DWORD PTR [rbx+0x70],0x2079616c
    d1c2:	74 68                	je     d22c <_IO_stdin_used+0x122c>
    d1c4:	69 73 20 6d 65 73 73 	imul   esi,DWORD PTR [rbx+0x20],0x7373656d
    d1cb:	61                   	(bad)  
    d1cc:	67 65 0a 09          	or     cl,BYTE PTR gs:[ecx]
    d1d0:	2d 69 20 3c 69       	sub    eax,0x693c2069
    d1d5:	66 61                	data16 (bad) 
    d1d7:	63 65 3e             	movsxd esp,DWORD PTR [rbp+0x3e]
    d1da:	3a 20                	cmp    ah,BYTE PTR [rax]
    d1dc:	73 65                	jae    d243 <_IO_stdin_used+0x1243>
    d1de:	74 20                	je     d200 <_IO_stdin_used+0x1200>
    d1e0:	74 68                	je     d24a <_IO_stdin_used+0x124a>
    d1e2:	65 20 69 6e          	and    BYTE PTR gs:[rcx+0x6e],ch
    d1e6:	74 65                	je     d24d <_IO_stdin_used+0x124d>
    d1e8:	72 66                	jb     d250 <_IO_stdin_used+0x1250>
    d1ea:	61                   	(bad)  
    d1eb:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    d1ee:	74 6f                	je     d25f <_IO_stdin_used+0x125f>
    d1f0:	20 6c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],ch
    d1f4:	74 65                	je     d25b <_IO_stdin_used+0x125b>
    d1f6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d1f7:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    d1fa:	0a 09                	or     cl,BYTE PTR [rcx]
    d1fc:	2d 70 20 70 72       	sub    eax,0x72702070
    d201:	69 6e 74 20 70 61 63 	imul   ebp,DWORD PTR [rsi+0x74],0x63617020
    d208:	6b 65 74 73          	imul   esp,DWORD PTR [rbp+0x74],0x73
    d20c:	0a 09                	or     cl,BYTE PTR [rcx]
    d20e:	2d 71 20 65 78       	sub    eax,0x78652071
    d213:	69 74 20 71 75 69 65 	imul   esi,DWORD PTR [rax+riz*1+0x71],0x74656975
    d21a:	74 
    d21b:	6c                   	ins    BYTE PTR es:[rdi],dx
    d21c:	79 0a                	jns    d228 <_IO_stdin_used+0x1228>
    d21e:	00 72 62             	add    BYTE PTR [rdx+0x62],dh
    d221:	00 2f                	add    BYTE PTR [rdi],ch
    d223:	70 72                	jo     d297 <_IO_stdin_used+0x1297>
    d225:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d226:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    d228:	63 70 75             	movsxd esi,DWORD PTR [rax+0x75]
    d22b:	69 6e 66 6f 00 6d 6f 	imul   ebp,DWORD PTR [rsi+0x66],0x6f6d006f
    d232:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    d235:	20 6e 61             	and    BYTE PTR [rsi+0x61],ch
    d238:	6d                   	ins    DWORD PTR es:[rdi],dx
    d239:	65 00 46 6f          	add    BYTE PTR gs:[rsi+0x6f],al
    d23d:	75 6e                	jne    d2ad <_IO_stdin_used+0x12ad>
    d23f:	64 20 25 64 20 63 70 	and    BYTE PTR fs:[rip+0x70632064],ah        # 7063f2aa <_end+0x7050226a>
    d246:	75 73                	jne    d2bb <_IO_stdin_used+0x12bb>
    d248:	3a 0a                	cmp    cl,BYTE PTR [rdx]
    d24a:	25 73 00 00 00       	and    eax,0x73
    d24f:	00 e2                	add    dl,ah
    d251:	96                   	xchg   esi,eax
    d252:	88 e2                	mov    dl,ah
    d254:	96                   	xchg   esi,eax
    d255:	88 e2                	mov    dl,ah
    d257:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d25e:	88 e2                	mov    dl,ah
    d260:	96                   	xchg   esi,eax
    d261:	88 e2                	mov    dl,ah
    d263:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d26a:	88 e2                	mov    dl,ah
    d26c:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    d273:	96                   	xchg   esi,eax
    d274:	88 e2                	mov    dl,ah
    d276:	96                   	xchg   esi,eax
    d277:	88 e2                	mov    dl,ah
    d279:	96                   	xchg   esi,eax
    d27a:	88 e2                	mov    dl,ah
    d27c:	96                   	xchg   esi,eax
    d27d:	88 e2                	mov    dl,ah
    d27f:	96                   	xchg   esi,eax
    d280:	88 e2                	mov    dl,ah
    d282:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    d289:	96                   	xchg   esi,eax
    d28a:	88 e2                	mov    dl,ah
    d28c:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d293:	88 0a                	mov    BYTE PTR [rdx],cl
    d295:	e2 96                	loop   d22d <_IO_stdin_used+0x122d>
    d297:	88 e2                	mov    dl,ah
    d299:	96                   	xchg   esi,eax
    d29a:	88 e2                	mov    dl,ah
    d29c:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d2a3:	88 e2                	mov    dl,ah
    d2a5:	96                   	xchg   esi,eax
    d2a6:	88 e2                	mov    dl,ah
    d2a8:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2af:	88 e2                	mov    dl,ah
    d2b1:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2b8:	88 e2                	mov    dl,ah
    d2ba:	80 81 e2 80 81 e2 80 	add    BYTE PTR [rcx-0x1d7e7f1e],0x80
    d2c1:	81 e2 80 81 e2 80    	and    edx,0x80e28180
    d2c7:	81 e2 80 81 20 e2    	and    edx,0xe2208180
    d2cd:	96                   	xchg   esi,eax
    d2ce:	88 e2                	mov    dl,ah
    d2d0:	96                   	xchg   esi,eax
    d2d1:	88 e2                	mov    dl,ah
    d2d3:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2da:	88 0a                	mov    BYTE PTR [rdx],cl
    d2dc:	e2 96                	loop   d274 <_IO_stdin_used+0x1274>
    d2de:	88 e2                	mov    dl,ah
    d2e0:	96                   	xchg   esi,eax
    d2e1:	88 e2                	mov    dl,ah
    d2e3:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d2ea:	88 e2                	mov    dl,ah
    d2ec:	96                   	xchg   esi,eax
    d2ed:	88 e2                	mov    dl,ah
    d2ef:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2f6:	88 e2                	mov    dl,ah
    d2f8:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2ff:	88 e2                	mov    dl,ah
    d301:	80 81 20 20 e2 96 88 	add    BYTE PTR [rcx-0x691ddfe0],0x88
    d308:	e2 96                	loop   d2a0 <_IO_stdin_used+0x12a0>
    d30a:	88 e2                	mov    dl,ah
    d30c:	96                   	xchg   esi,eax
    d30d:	88 e2                	mov    dl,ah
    d30f:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d316:	88 e2                	mov    dl,ah
    d318:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d31f:	88 0a                	mov    BYTE PTR [rdx],cl
    d321:	e2 80                	loop   d2a3 <_IO_stdin_used+0x12a3>
    d323:	81 e2 96 88 e2 96    	and    edx,0x96e28896
    d329:	88 e2                	mov    dl,ah
    d32b:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    d332:	96                   	xchg   esi,eax
    d333:	88 e2                	mov    dl,ah
    d335:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    d33c:	88 e2                	mov    dl,ah
    d33e:	96                   	xchg   esi,eax
    d33f:	88 e2                	mov    dl,ah
    d341:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d348:	88 e2                	mov    dl,ah
    d34a:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d351:	88 e2                	mov    dl,ah
    d353:	96                   	xchg   esi,eax
    d354:	88 e2                	mov    dl,ah
    d356:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d35d:	88 e2                	mov    dl,ah
    d35f:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d366:	88 0a                	mov    BYTE PTR [rdx],cl
    d368:	20 e2                	and    dl,ah
    d36a:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d371:	88 e2                	mov    dl,ah
    d373:	96                   	xchg   esi,eax
    d374:	88 e2                	mov    dl,ah
    d376:	96                   	xchg   esi,eax
    d377:	88 e2                	mov    dl,ah
    d379:	80 81 e2 80 81 20 e2 	add    BYTE PTR [rcx+0x208180e2],0xe2
    d380:	96                   	xchg   esi,eax
    d381:	88 e2                	mov    dl,ah
    d383:	96                   	xchg   esi,eax
    d384:	88 e2                	mov    dl,ah
    d386:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    d38d:	88 e2                	mov    dl,ah
    d38f:	96                   	xchg   esi,eax
    d390:	88 e2                	mov    dl,ah
    d392:	96                   	xchg   esi,eax
    d393:	88 e2                	mov    dl,ah
    d395:	96                   	xchg   esi,eax
    d396:	88 e2                	mov    dl,ah
    d398:	96                   	xchg   esi,eax
    d399:	88 e2                	mov    dl,ah
    d39b:	96                   	xchg   esi,eax
    d39c:	88 e2                	mov    dl,ah
    d39e:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    d3a5:	88 e2                	mov    dl,ah
    d3a7:	96                   	xchg   esi,eax
    d3a8:	88 e2                	mov    dl,ah
    d3aa:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d3b1:	88 e2                	mov    dl,ah
    d3b3:	96                   	xchg   esi,eax
    d3b4:	88 e2                	mov    dl,ah
    d3b6:	96                   	xchg   esi,eax
    d3b7:	88 e2                	mov    dl,ah
    d3b9:	96                   	xchg   esi,eax
    d3ba:	88 e2                	mov    dl,ah
    d3bc:	96                   	xchg   esi,eax
    d3bd:	88 e2                	mov    dl,ah
    d3bf:	96                   	xchg   esi,eax
    d3c0:	88 00                	mov    BYTE PTR [rax],al
    d3c2:	00 00                	add    BYTE PTR [rax],al
    d3c4:	00 00                	add    BYTE PTR [rax],al
    d3c6:	00 00                	add    BYTE PTR [rax],al
    d3c8:	0a 00                	or     al,BYTE PTR [rax]
    d3ca:	0d 00 00 00 00       	or     eax,0x0
    d3cf:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    d3d2:	68 5f 73 65 72       	push   0x7265735f
    d3d7:	76 65                	jbe    d43e <_IO_stdin_used+0x143e>
    d3d9:	72 2e                	jb     d409 <_IO_stdin_used+0x1409>
    d3db:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d3dd:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    d3e0:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    d3e7:	20 
    d3e8:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
    d3eb:	61                   	(bad)  
    d3ec:	74 65                	je     d453 <_IO_stdin_used+0x1453>
    d3ee:	20 73 6f             	and    BYTE PTR [rbx+0x6f],dh
    d3f1:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d3f4:	74 00                	je     d3f6 <_IO_stdin_used+0x13f6>
    d3f6:	00 00                	add    BYTE PTR [rax],al
    d3f8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d3f9:	73 68                	jae    d463 <_IO_stdin_used+0x1463>
    d3fb:	5f                   	pop    rdi
    d3fc:	73 65                	jae    d463 <_IO_stdin_used+0x1463>
    d3fe:	72 76                	jb     d476 <_IO_stdin_used+0x1476>
    d400:	65 72 2e             	gs jb  d431 <_IO_stdin_used+0x1431>
    d403:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d405:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    d408:	69 6c 75 72 65 20 69 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6e692065
    d40f:	6e 
    d410:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d413:	74 73                	je     d488 <_IO_stdin_used+0x1488>
    d415:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d416:	63 6b 6f             	movsxd ebp,DWORD PTR [rbx+0x6f]
    d419:	70 74                	jo     d48f <_IO_stdin_used+0x148f>
    d41b:	00 00                	add    BYTE PTR [rax],al
    d41d:	00 00                	add    BYTE PTR [rax],al
    d41f:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    d422:	68 5f 73 65 72       	push   0x7265735f
    d427:	76 65                	jbe    d48e <_IO_stdin_used+0x148e>
    d429:	72 2e                	jb     d459 <_IO_stdin_used+0x1459>
    d42b:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d42d:	20 62 69             	and    BYTE PTR [rdx+0x69],ah
    d430:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d431:	64 69 6e 67 20 6f 66 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x20666f20
    d438:	20 
    d439:	73 6f                	jae    d4aa <_IO_stdin_used+0x14aa>
    d43b:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d43e:	74 20                	je     d460 <_IO_stdin_used+0x1460>
    d440:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    d442:	72 20                	jb     d464 <_IO_stdin_used+0x1464>
    d444:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d445:	73 68                	jae    d4af <_IO_stdin_used+0x14af>
    d447:	5f                   	pop    rdi
    d448:	66 64 20 66 61       	data16 and BYTE PTR fs:[rsi+0x61],ah
    d44d:	69 6c 65 64 00 00 00 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
    d454:	00 
    d455:	00 00                	add    BYTE PTR [rax],al
    d457:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    d45a:	68 5f 73 65 72       	push   0x7265735f
    d45f:	76 65                	jbe    d4c6 <_IO_stdin_used+0x14c6>
    d461:	72 2e                	jb     d491 <_IO_stdin_used+0x1491>
    d463:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d465:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    d468:	69 6c 75 72 65 20 6f 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6e6f2065
    d46f:	6e 
    d470:	20 6c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],ch
    d474:	74 65                	je     d4db <_IO_stdin_used+0x14db>
    d476:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d477:	69 6e 67 20 66 6f 72 	imul   ebp,DWORD PTR [rsi+0x67],0x726f6620
    d47e:	20 6e 73             	and    BYTE PTR [rsi+0x73],ch
    d481:	68 5f 66 64 00       	push   0x64665f
    d486:	00 00                	add    BYTE PTR [rax],al
    d488:	46 61                	rex.RX (bad) 
    d48a:	69 6c 75 72 65 20 74 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f742065
    d491:	6f 
    d492:	20 61 63             	and    BYTE PTR [rcx+0x63],ah
    d495:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    d498:	74 20                	je     d4ba <_IO_stdin_used+0x14ba>
    d49a:	61                   	(bad)  
    d49b:	20 63 6c             	and    BYTE PTR [rbx+0x6c],ah
    d49e:	69 65 6e 74 20 61 74 	imul   esp,DWORD PTR [rbp+0x6e],0x74612074
    d4a5:	20 25 73 0a 00 30    	and    BYTE PTR [rip+0x30000a73],ah        # 3000df1e <_end+0x2fed0ede>
    d4ab:	78 25                	js     d4d2 <_IO_stdin_used+0x14d2>
    d4ad:	30 32                	xor    BYTE PTR [rdx],dh
    d4af:	78 0a                	js     d4bb <_IO_stdin_used+0x14bb>
    d4b1:	00 00                	add    BYTE PTR [rax],al
    d4b3:	00 00                	add    BYTE PTR [rax],al
    d4b5:	00 00                	add    BYTE PTR [rax],al
    d4b7:	00 61 00             	add    BYTE PTR [rcx+0x0],ah
    d4ba:	00 00                	add    BYTE PTR [rax],al
    d4bc:	00 00                	add    BYTE PTR [rax],al
    d4be:	00 00                	add    BYTE PTR [rax],al
    d4c0:	42 61                	rex.X (bad) 
    d4c2:	73 69                	jae    d52d <_IO_stdin_used+0x152d>
    d4c4:	63 20                	movsxd esp,DWORD PTR [rax]
    d4c6:	70 6f                	jo     d537 <_IO_stdin_used+0x1537>
    d4c8:	72 74                	jb     d53e <_IO_stdin_used+0x153e>
    d4ca:	73 63                	jae    d52f <_IO_stdin_used+0x152f>
    d4cc:	61                   	(bad)  
    d4cd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d4ce:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d4d2:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d4d7:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d4da:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d4db:	6d                   	ins    DWORD PTR es:[rdi],dx
    d4dc:	20 49 50             	and    BYTE PTR [rcx+0x50],cl
    d4df:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    d4e2:	64 72 65             	fs jb  d54a <_IO_stdin_used+0x154a>
    d4e5:	73 73                	jae    d55a <_IO_stdin_used+0x155a>
    d4e7:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # df60 <_IO_stdin_used+0x1f60>
    d4ed:	00 00                	add    BYTE PTR [rax],al
    d4ef:	00 50 6f             	add    BYTE PTR [rax+0x6f],dl
    d4f2:	72 74                	jb     d568 <_IO_stdin_used+0x1568>
    d4f4:	73 63                	jae    d559 <_IO_stdin_used+0x1559>
    d4f6:	61                   	(bad)  
    d4f7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d4f8:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d4fc:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d501:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d504:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d505:	6d                   	ins    DWORD PTR es:[rdi],dx
    d506:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461f57f <_end+0x744e253f>
    d50c:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # df85 <_IO_stdin_used+0x1f85>
    d512:	00 00                	add    BYTE PTR [rax],al
    d514:	00 00                	add    BYTE PTR [rax],al
    d516:	00 00                	add    BYTE PTR [rax],al
    d518:	46                   	rex.RX
    d519:	49                   	rex.WB
    d51a:	4e 20 70 6f          	rex.WRX and BYTE PTR [rax+0x6f],r14b
    d51e:	72 74                	jb     d594 <_IO_stdin_used+0x1594>
    d520:	73 63                	jae    d585 <_IO_stdin_used+0x1585>
    d522:	61                   	(bad)  
    d523:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d524:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d528:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d52d:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d530:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d531:	6d                   	ins    DWORD PTR es:[rdi],dx
    d532:	20 49 50             	and    BYTE PTR [rcx+0x50],cl
    d535:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    d538:	64 72 65             	fs jb  d5a0 <_IO_stdin_used+0x15a0>
    d53b:	73 73                	jae    d5b0 <_IO_stdin_used+0x15b0>
    d53d:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # dfb6 <_IO_stdin_used+0x1fb6>
    d543:	00 00                	add    BYTE PTR [rax],al
    d545:	00 00                	add    BYTE PTR [rax],al
    d547:	00 46 49             	add    BYTE PTR [rsi+0x49],al
    d54a:	4e 20 70 6f          	rex.WRX and BYTE PTR [rax+0x6f],r14b
    d54e:	72 74                	jb     d5c4 <_IO_stdin_used+0x15c4>
    d550:	73 63                	jae    d5b5 <_IO_stdin_used+0x15b5>
    d552:	61                   	(bad)  
    d553:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d554:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d558:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d55d:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d560:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d561:	6d                   	ins    DWORD PTR es:[rdi],dx
    d562:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461f5db <_end+0x744e259b>
    d568:	20 25 73 0a 00 30    	and    BYTE PTR [rip+0x30000a73],ah        # 3000dfe1 <_end+0x2fed0fa1>
    d56e:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
    d571:	30 2e                	xor    BYTE PTR [rsi],ch
    d573:	31 00                	xor    DWORD PTR [rax],eax
    d575:	30 2e                	xor    BYTE PTR [rsi],ch
    d577:	30 2e                	xor    BYTE PTR [rsi],ch
    d579:	30 2e                	xor    BYTE PTR [rsi],ch
    d57b:	31 00                	xor    DWORD PTR [rax],eax
    d57d:	00 00                	add    BYTE PTR [rax],al
    d57f:	00 41 72             	add    BYTE PTR [rcx+0x72],al
    d582:	70 20                	jo     d5a4 <_IO_stdin_used+0x15a4>
    d584:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d586:	74 72                	je     d5fa <_IO_stdin_used+0x15fa>
    d588:	79 20                	jns    d5aa <_IO_stdin_used+0x15aa>
    d58a:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    d58d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d58e:	67 65 64 20 66 6f    	gs and BYTE PTR fs:[esi+0x6f],ah
    d594:	72 20                	jb     d5b6 <_IO_stdin_used+0x15b6>
    d596:	69 70 20 61 64 64 72 	imul   esi,DWORD PTR [rax+0x20],0x72646461
    d59d:	65 73 73             	gs jae d613 <_IO_stdin_used+0x1613>
    d5a0:	20 25 73 3a 20 77    	and    BYTE PTR [rip+0x77203a73],ah        # 77211019 <_end+0x770d3fd9>
    d5a6:	61                   	(bad)  
    d5a7:	73 20                	jae    d5c9 <_IO_stdin_used+0x15c9>
    d5a9:	25 73 20 69 73       	and    eax,0x73692073
    d5ae:	20 6e 6f             	and    BYTE PTR [rsi+0x6f],ch
    d5b1:	77 20                	ja     d5d3 <_IO_stdin_used+0x15d3>
    d5b3:	25 73 00 72 00       	and    eax,0x720073
    d5b8:	2f                   	(bad)  
    d5b9:	75 73                	jne    d62e <_IO_stdin_used+0x162e>
    d5bb:	72 2f                	jb     d5ec <_IO_stdin_used+0x15ec>
    d5bd:	73 68                	jae    d627 <_IO_stdin_used+0x1627>
    d5bf:	61                   	(bad)  
    d5c0:	72 65                	jb     d627 <_IO_stdin_used+0x1627>
    d5c2:	2f                   	(bad)  
    d5c3:	76 69                	jbe    d62e <_IO_stdin_used+0x162e>
    d5c5:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    d5cc:	63 61 
    d5ce:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    d5d1:	2e 63 73 76          	cs movsxd esi,DWORD PTR [rbx+0x76]
    d5d5:	00 00                	add    BYTE PTR [rax],al
    d5d7:	00 43 6f             	add    BYTE PTR [rbx+0x6f],al
    d5da:	75 6c                	jne    d648 <_IO_stdin_used+0x1648>
    d5dc:	64 20 6e 6f          	and    BYTE PTR fs:[rsi+0x6f],ch
    d5e0:	74 20                	je     d602 <_IO_stdin_used+0x1602>
    d5e2:	6c                   	ins    BYTE PTR es:[rdi],dx
    d5e3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d5e4:	61                   	(bad)  
    d5e5:	64 20 61 72          	and    BYTE PTR fs:[rcx+0x72],ah
    d5e9:	70 20                	jo     d60b <_IO_stdin_used+0x160b>
    d5eb:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    d5ee:	68 65 20 66 72       	push   0x72662065
    d5f3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d5f4:	6d                   	ins    DWORD PTR es:[rdi],dx
    d5f5:	20 64 61 74          	and    BYTE PTR [rcx+riz*2+0x74],ah
    d5f9:	61                   	(bad)  
    d5fa:	62 61                	(bad)  
    d5fc:	73 65                	jae    d663 <_IO_stdin_used+0x1663>
    d5fe:	2c 20                	sub    al,0x20
    d600:	66 69 6c 65 20 6e 6f 	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f6e
    d607:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d608:	65 78 69             	gs js  d674 <_IO_stdin_used+0x1674>
    d60b:	73 74                	jae    d681 <_IO_stdin_used+0x1681>
    d60d:	61                   	(bad)  
    d60e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d60f:	74 00                	je     d611 <_IO_stdin_used+0x1611>
    d611:	0a 00                	or     al,BYTE PTR [rax]
    d613:	2c 00                	sub    al,0x0
    d615:	00 00                	add    BYTE PTR [rax],al
    d617:	00 54 4c 53          	add    BYTE PTR [rsp+rcx*2+0x53],dl
    d61b:	20 31                	and    BYTE PTR [rcx],dh
    d61d:	2e 30 20             	cs xor BYTE PTR [rax],ah
    d620:	44                   	rex.R
    d621:	41 54                	push   r12
    d623:	41 3a 20             	cmp    spl,BYTE PTR [r8]
    d626:	00 54 4c 53          	add    BYTE PTR [rsp+rcx*2+0x53],dl
    d62a:	20 31                	and    BYTE PTR [rcx],dh
    d62c:	2e 32 20             	cs xor ah,BYTE PTR [rax]
    d62f:	44                   	rex.R
    d630:	41 54                	push   r12
    d632:	41 3a 20             	cmp    spl,BYTE PTR [r8]
    d635:	00 54 4c 53          	add    BYTE PTR [rsp+rcx*2+0x53],dl
    d639:	20 31                	and    BYTE PTR [rcx],dh
    d63b:	2e 33 20             	cs xor esp,DWORD PTR [rax]
    d63e:	44                   	rex.R
    d63f:	41 54                	push   r12
    d641:	41 3a 20             	cmp    spl,BYTE PTR [r8]
    d644:	00 43 6c             	add    BYTE PTR [rbx+0x6c],al
    d647:	69 65 6e 74 20 48 65 	imul   esp,DWORD PTR [rbp+0x6e],0x65482074
    d64e:	6c                   	ins    BYTE PTR es:[rdi],dx
    d64f:	6c                   	ins    BYTE PTR es:[rdi],dx
    d650:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d651:	00 53 65             	add    BYTE PTR [rbx+0x65],dl
    d654:	72 76                	jb     d6cc <_IO_stdin_used+0x16cc>
    d656:	65 72 20             	gs jb  d679 <_IO_stdin_used+0x1679>
    d659:	48                   	rex.W
    d65a:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    d65c:	6c                   	ins    BYTE PTR es:[rdi],dx
    d65d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d65e:	00 4e 65             	add    BYTE PTR [rsi+0x65],cl
    d661:	77 20                	ja     d683 <_IO_stdin_used+0x1683>
    d663:	53                   	push   rbx
    d664:	65 73 73             	gs jae d6da <_IO_stdin_used+0x16da>
    d667:	69 6f 6e 20 54 69 63 	imul   ebp,DWORD PTR [rdi+0x6e],0x63695420
    d66e:	6b 65 74 00          	imul   esp,DWORD PTR [rbp+0x74],0x0
    d672:	43                   	rex.XB
    d673:	65 72 74             	gs jb  d6ea <_IO_stdin_used+0x16ea>
    d676:	69 66 69 63 61 74 65 	imul   esp,DWORD PTR [rsi+0x69],0x65746163
    d67d:	00 43 6c             	add    BYTE PTR [rbx+0x6c],al
    d680:	69 65 6e 74 20 4b 65 	imul   esp,DWORD PTR [rbp+0x6e],0x654b2074
    d687:	78 00                	js     d689 <_IO_stdin_used+0x1689>
    d689:	00 00                	add    BYTE PTR [rax],al
    d68b:	00 f8                	add    al,bh
    d68d:	ab                   	stos   DWORD PTR es:[rdi],eax
    d68e:	ff                   	(bad)  
    d68f:	ff 5c ab ff          	call   FWORD PTR [rbx+rbp*4-0x1]
    d693:	ff 75 ab             	push   QWORD PTR [rbp-0x55]
    d696:	ff                   	(bad)  
    d697:	ff                   	(bad)  
    d698:	f8                   	clc    
    d699:	ab                   	stos   DWORD PTR es:[rdi],eax
    d69a:	ff                   	(bad)  
    d69b:	ff 96 ab ff ff f8    	call   QWORD PTR [rsi-0x7000055]
    d6a1:	ab                   	stos   DWORD PTR es:[rdi],eax
    d6a2:	ff                   	(bad)  
    d6a3:	ff                   	(bad)  
    d6a4:	f8                   	clc    
    d6a5:	ab                   	stos   DWORD PTR es:[rdi],eax
    d6a6:	ff                   	(bad)  
    d6a7:	ff                   	(bad)  
    d6a8:	f8                   	clc    
    d6a9:	ab                   	stos   DWORD PTR es:[rdi],eax
    d6aa:	ff                   	(bad)  
    d6ab:	ff                   	(bad)  
    d6ac:	f8                   	clc    
    d6ad:	ab                   	stos   DWORD PTR es:[rdi],eax
    d6ae:	ff                   	(bad)  
    d6af:	ff                   	(bad)  
    d6b0:	f8                   	clc    
    d6b1:	ab                   	stos   DWORD PTR es:[rdi],eax
    d6b2:	ff                   	(bad)  
    d6b3:	ff                   	(bad)  
    d6b4:	d8 ab ff ff b7 ab    	fsubr  DWORD PTR [rbx-0x54480001]
    d6ba:	ff                   	(bad)  
    d6bb:	ff 00                	inc    DWORD PTR [rax]
    d6bd:	00 00                	add    BYTE PTR [rax],al
    d6bf:	00 55 70             	add    BYTE PTR [rbp+0x70],dl
    d6c2:	64 61                	fs (bad) 
    d6c4:	74 69                	je     d72f <_IO_stdin_used+0x172f>
    d6c6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d6c7:	67 20 64 62 00       	and    BYTE PTR [edx+eiz*2+0x0],ah
    d6cc:	53                   	push   rbx
    d6cd:	51                   	push   rcx
    d6ce:	6c                   	ins    BYTE PTR es:[rdi],dx
    d6cf:	69 74 65 20 65 72 72 	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x6f727265
    d6d6:	6f 
    d6d7:	72 3a                	jb     d713 <_IO_stdin_used+0x1713>
    d6d9:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # e152 <__GNU_EH_FRAME_HDR+0x3a>
    d6df:	00 49 4e             	add    BYTE PTR [rcx+0x4e],cl
    d6e2:	53                   	push   rbx
    d6e3:	45 52                	rex.RB push r10
    d6e5:	54                   	push   rsp
    d6e6:	20 49 4e             	and    BYTE PTR [rcx+0x4e],cl
    d6e9:	54                   	push   rsp
    d6ea:	4f 20 61 72          	rex.WRXB and BYTE PTR [r9+0x72],r12b
    d6ee:	70 5f                	jo     d74f <_IO_stdin_used+0x174f>
    d6f0:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    d6f3:	68 65 20 28 69       	push   0x69282065
    d6f8:	70 5f                	jo     d759 <_IO_stdin_used+0x1759>
    d6fa:	61                   	(bad)  
    d6fb:	64 64 72 65          	fs fs jb d764 <_IO_stdin_used+0x1764>
    d6ff:	73 73                	jae    d774 <_IO_stdin_used+0x1774>
    d701:	2c 20                	sub    al,0x20
    d703:	6d                   	ins    DWORD PTR es:[rdi],dx
    d704:	61                   	(bad)  
    d705:	63 5f 61             	movsxd ebx,DWORD PTR [rdi+0x61]
    d708:	64 64 72 65          	fs fs jb d771 <_IO_stdin_used+0x1771>
    d70c:	73 73                	jae    d781 <_IO_stdin_used+0x1781>
    d70e:	29 20                	sub    DWORD PTR [rax],esp
    d710:	56                   	push   rsi
    d711:	41                   	rex.B
    d712:	4c 55                	rex.WR push rbp
    d714:	45 53                	rex.RB push r11
    d716:	20 28                	and    BYTE PTR [rax],ch
    d718:	22 25 73 22 2c 20    	and    ah,BYTE PTR [rip+0x202c2273]        # 202cf991 <_end+0x20192951>
    d71e:	22 25 73 22 29 3b    	and    ah,BYTE PTR [rip+0x3b292273]        # 3b29f997 <_end+0x3b162957>
    d724:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    d727:	4c 69 74 65 20 65 6e 	imul   r14,QWORD PTR [rbp+riz*2+0x20],0x6f636e65
    d72e:	63 6f 
    d730:	75 6e                	jne    d7a0 <_IO_stdin_used+0x17a0>
    d732:	74 65                	je     d799 <_IO_stdin_used+0x1799>
    d734:	72 65                	jb     d79b <_IO_stdin_used+0x179b>
    d736:	64 20 65 72          	and    BYTE PTR fs:[rbp+0x72],ah
    d73a:	72 6f                	jb     d7ab <_IO_stdin_used+0x17ab>
    d73c:	72 3a                	jb     d778 <_IO_stdin_used+0x1778>
    d73e:	20 25 73 0a 00 2f    	and    BYTE PTR [rip+0x2f000a73],ah        # 2f00e1b7 <_end+0x2eed1177>
    d744:	75 73                	jne    d7b9 <_IO_stdin_used+0x17b9>
    d746:	72 2f                	jb     d777 <_IO_stdin_used+0x1777>
    d748:	73 68                	jae    d7b2 <_IO_stdin_used+0x17b2>
    d74a:	61                   	(bad)  
    d74b:	72 65                	jb     d7b2 <_IO_stdin_used+0x17b2>
    d74d:	2f                   	(bad)  
    d74e:	76 69                	jbe    d7b9 <_IO_stdin_used+0x17b9>
    d750:	67 69 6c 2f 73 70 69 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x642e6970
    d757:	2e 64 
    d759:	62                   	(bad)  
    d75a:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    d75d:	4c 69 74 65 20 65 72 	imul   r14,QWORD PTR [rbp+riz*2+0x20],0x6f727265
    d764:	72 6f 
    d766:	72 20                	jb     d788 <_IO_stdin_used+0x1788>
    d768:	25 73 0a 00 00       	and    eax,0xa73
    d76d:	00 00                	add    BYTE PTR [rax],al
    d76f:	00 49 4e             	add    BYTE PTR [rcx+0x4e],cl
    d772:	53                   	push   rbx
    d773:	45 52                	rex.RB push r10
    d775:	54                   	push   rsp
    d776:	20 49 4e             	and    BYTE PTR [rcx+0x4e],cl
    d779:	54                   	push   rsp
    d77a:	4f 20 73 70          	rex.WRXB and BYTE PTR [r11+0x70],r14b
    d77e:	69 5f 74 61 62 6c 65 	imul   ebx,DWORD PTR [rdi+0x74],0x656c6261
    d785:	20 28                	and    BYTE PTR [rax],ch
    d787:	73 65                	jae    d7ee <_IO_stdin_used+0x17ee>
    d789:	72 76                	jb     d801 <_IO_stdin_used+0x1801>
    d78b:	5f                   	pop    rdi
    d78c:	61                   	(bad)  
    d78d:	64 64 72 2c          	fs fs jb d7bd <_IO_stdin_used+0x17bd>
    d791:	20 63 6c             	and    BYTE PTR [rbx+0x6c],ah
    d794:	69 5f 61 64 64 72 2c 	imul   ebx,DWORD PTR [rdi+0x61],0x2c726464
    d79b:	73 65                	jae    d802 <_IO_stdin_used+0x1802>
    d79d:	72 76                	jb     d815 <_IO_stdin_used+0x1815>
    d79f:	5f                   	pop    rdi
    d7a0:	70 6f                	jo     d811 <_IO_stdin_used+0x1811>
    d7a2:	72 74                	jb     d818 <_IO_stdin_used+0x1818>
    d7a4:	2c 63                	sub    al,0x63
    d7a6:	6c                   	ins    BYTE PTR es:[rdi],dx
    d7a7:	69 5f 70 6f 72 74 2c 	imul   ebx,DWORD PTR [rdi+0x70],0x2c74726f
    d7ae:	73 65                	jae    d815 <_IO_stdin_used+0x1815>
    d7b0:	72 76                	jb     d828 <_IO_stdin_used+0x1828>
    d7b2:	5f                   	pop    rdi
    d7b3:	70 6b                	jo     d820 <_IO_stdin_used+0x1820>
    d7b5:	74 5f                	je     d816 <_IO_stdin_used+0x1816>
    d7b7:	73 65                	jae    d81e <_IO_stdin_used+0x181e>
    d7b9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d7ba:	74 2c                	je     d7e8 <_IO_stdin_used+0x17e8>
    d7bc:	63 6c 69 5f          	movsxd ebp,DWORD PTR [rcx+rbp*2+0x5f]
    d7c0:	70 6b                	jo     d82d <_IO_stdin_used+0x182d>
    d7c2:	74 5f                	je     d823 <_IO_stdin_used+0x1823>
    d7c4:	73 65                	jae    d82b <_IO_stdin_used+0x182b>
    d7c6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d7c7:	74 2c                	je     d7f5 <_IO_stdin_used+0x17f5>
    d7c9:	73 65                	jae    d830 <_IO_stdin_used+0x1830>
    d7cb:	72 76                	jb     d843 <_IO_stdin_used+0x1843>
    d7cd:	5f                   	pop    rdi
    d7ce:	70 6b                	jo     d83b <_IO_stdin_used+0x183b>
    d7d0:	74 5f                	je     d831 <_IO_stdin_used+0x1831>
    d7d2:	72 65                	jb     d839 <_IO_stdin_used+0x1839>
    d7d4:	63 76 2c             	movsxd esi,DWORD PTR [rsi+0x2c]
    d7d7:	63 6c 69 5f          	movsxd ebp,DWORD PTR [rcx+rbp*2+0x5f]
    d7db:	70 6b                	jo     d848 <_IO_stdin_used+0x1848>
    d7dd:	74 5f                	je     d83e <_IO_stdin_used+0x183e>
    d7df:	72 65                	jb     d846 <_IO_stdin_used+0x1846>
    d7e1:	63 76 2c             	movsxd esi,DWORD PTR [rsi+0x2c]
    d7e4:	70 72                	jo     d858 <_IO_stdin_used+0x1858>
    d7e6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d7e7:	74 6f                	je     d858 <_IO_stdin_used+0x1858>
    d7e9:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    d7ec:	2c 61                	sub    al,0x61
    d7ee:	76 67                	jbe    d857 <_IO_stdin_used+0x1857>
    d7f0:	5f                   	pop    rdi
    d7f1:	70 70                	jo     d863 <_IO_stdin_used+0x1863>
    d7f3:	73 2c                	jae    d821 <_IO_stdin_used+0x1821>
    d7f5:	73 74                	jae    d86b <_IO_stdin_used+0x186b>
    d7f7:	61                   	(bad)  
    d7f8:	72 74                	jb     d86e <_IO_stdin_used+0x186e>
    d7fa:	5f                   	pop    rdi
    d7fb:	74 69                	je     d866 <_IO_stdin_used+0x1866>
    d7fd:	6d                   	ins    DWORD PTR es:[rdi],dx
    d7fe:	65 2c 65             	gs sub al,0x65
    d801:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d802:	64 5f                	fs pop rdi
    d804:	74 69                	je     d86f <_IO_stdin_used+0x186f>
    d806:	6d                   	ins    DWORD PTR es:[rdi],dx
    d807:	65 2c 64             	gs sub al,0x64
    d80a:	61                   	(bad)  
    d80b:	74 61                	je     d86e <_IO_stdin_used+0x186e>
    d80d:	5f                   	pop    rdi
    d80e:	70 6b                	jo     d87b <_IO_stdin_used+0x187b>
    d810:	74 73                	je     d885 <_IO_stdin_used+0x1885>
    d812:	2c 63                	sub    al,0x63
    d814:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d815:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d816:	74 72                	je     d88a <_IO_stdin_used+0x188a>
    d818:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d819:	6c                   	ins    BYTE PTR es:[rdi],dx
    d81a:	5f                   	pop    rdi
    d81b:	70 6b                	jo     d888 <_IO_stdin_used+0x1888>
    d81d:	74 73                	je     d892 <_IO_stdin_used+0x1892>
    d81f:	29 20                	sub    DWORD PTR [rax],esp
    d821:	56                   	push   rsi
    d822:	41                   	rex.B
    d823:	4c 55                	rex.WR push rbp
    d825:	45 53                	rex.RB push r11
    d827:	20 28                	and    BYTE PTR [rax],ch
    d829:	22 25 73 22 2c 22    	and    ah,BYTE PTR [rip+0x222c2273]        # 222cfaa2 <_end+0x22192a62>
    d82f:	25 73 22 2c 25       	and    eax,0x252c2273
    d834:	6c                   	ins    BYTE PTR es:[rdi],dx
    d835:	64 2c 25             	fs sub al,0x25
    d838:	6c                   	ins    BYTE PTR es:[rdi],dx
    d839:	64 2c 25             	fs sub al,0x25
    d83c:	64 2c 25             	fs sub al,0x25
    d83f:	64 2c 25             	fs sub al,0x25
    d842:	64 2c 25             	fs sub al,0x25
    d845:	64 2c 25             	fs sub al,0x25
    d848:	64 2c 25             	fs sub al,0x25
    d84b:	64 2c 25             	fs sub al,0x25
    d84e:	6c                   	ins    BYTE PTR es:[rdi],dx
    d84f:	64 2c 25             	fs sub al,0x25
    d852:	6c                   	ins    BYTE PTR es:[rdi],dx
    d853:	64 2c 25             	fs sub al,0x25
    d856:	64 2c 25             	fs sub al,0x25
    d859:	64 29 3b             	sub    DWORD PTR fs:[rbx],edi
    d85c:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    d85f:	4c                   	rex.WR
    d860:	49 54                	rex.WB push r12
    d862:	45 20 45 6e          	and    BYTE PTR [r13+0x6e],r8b
    d866:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    d869:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d86a:	74 65                	je     d8d1 <_IO_stdin_used+0x18d1>
    d86c:	72 65                	jb     d8d3 <_IO_stdin_used+0x18d3>
    d86e:	64 20 65 72          	and    BYTE PTR fs:[rbp+0x72],ah
    d872:	72 6f                	jb     d8e3 <_IO_stdin_used+0x18e3>
    d874:	72 3a                	jb     d8b0 <_IO_stdin_used+0x18b0>
    d876:	20 25 73 0a 00 53    	and    BYTE PTR [rip+0x53000a73],ah        # 5300e2ef <_end+0x52ed12af>
    d87c:	74 72                	je     d8f0 <_IO_stdin_used+0x18f0>
    d87e:	6c                   	ins    BYTE PTR es:[rdi],dx
    d87f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d880:	63 20                	movsxd esp,DWORD PTR [rax]
    d882:	73 75                	jae    d8f9 <_IO_stdin_used+0x18f9>
    d884:	63 63 65             	movsxd esp,DWORD PTR [rbx+0x65]
    d887:	73 73                	jae    d8fc <_IO_stdin_used+0x18fc>
    d889:	66 75 6c             	data16 jne d8f8 <_IO_stdin_used+0x18f8>
    d88c:	00 51 75             	add    BYTE PTR [rcx+0x75],dl
    d88f:	65 72 79             	gs jb  d90b <_IO_stdin_used+0x190b>
    d892:	3a 20                	cmp    ah,BYTE PTR [rax]
    d894:	25 73 0a 00 4c       	and    eax,0x4c000a73
    d899:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d89a:	67 69 6e 20 69 6e 63 	imul   ebp,DWORD PTR [esi+0x20],0x6f636e69
    d8a1:	6f 
    d8a2:	72 72                	jb     d916 <_IO_stdin_used+0x1916>
    d8a4:	65 63 74 00 6c       	movsxd esi,DWORD PTR gs:[rax+rax*1+0x6c]
    d8a9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d8aa:	67 69 6e 20 69 6e 63 	imul   ebp,DWORD PTR [esi+0x20],0x6f636e69
    d8b1:	6f 
    d8b2:	72 72                	jb     d926 <_IO_stdin_used+0x1926>
    d8b4:	65 63 74 00 50       	movsxd esi,DWORD PTR gs:[rax+rax*1+0x50]
    d8b9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d8ba:	73 73                	jae    d92f <_IO_stdin_used+0x192f>
    d8bc:	69 62 6c 65 20 46 54 	imul   esp,DWORD PTR [rdx+0x6c],0x54462065
    d8c3:	50                   	push   rax
    d8c4:	20 62 72             	and    BYTE PTR [rdx+0x72],ah
    d8c7:	75 74                	jne    d93d <_IO_stdin_used+0x193d>
    d8c9:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    d8cd:	72 63                	jb     d932 <_IO_stdin_used+0x1932>
    d8cf:	65 20 61 74          	and    BYTE PTR gs:[rcx+0x74],ah
    d8d3:	74 65                	je     d93a <_IO_stdin_used+0x193a>
    d8d5:	6d                   	ins    DWORD PTR es:[rdi],dx
    d8d6:	70 74                	jo     d94c <_IO_stdin_used+0x194c>
    d8d8:	3a 20                	cmp    ah,BYTE PTR [rax]
    d8da:	25 73 28 73 75       	and    eax,0x75732873
    d8df:	73 70                	jae    d951 <_IO_stdin_used+0x1951>
    d8e1:	65 63 74 29 20       	movsxd esi,DWORD PTR gs:[rcx+rbp*1+0x20]
    d8e6:	2d 3e 20 25 73       	sub    eax,0x7325203e
    d8eb:	2e 20 25 64 20 66 61 	cs and BYTE PTR [rip+0x61662064],ah        # 6166f956 <_end+0x61532916>
    d8f2:	69 6c 65 64 20 6c 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x676f6c20
    d8f9:	67 
    d8fa:	69 6e 73 0a 00 00 53 	imul   ebp,DWORD PTR [rsi+0x73],0x5300000a
    d901:	50                   	push   rax
    d902:	49 20 54 41 42       	rex.WB and BYTE PTR [r9+rax*2+0x42],dl
    d907:	4c                   	rex.WR
    d908:	45 20 52 45          	and    BYTE PTR [r10+0x45],r10b
    d90c:	54                   	push   rsp
    d90d:	52                   	push   rdx
    d90e:	41                   	rex.B
    d90f:	4e 53                	rex.WRX push rbx
    d911:	3a 20                	cmp    ah,BYTE PTR [rax]
    d913:	25 64 3a 20 25       	and    eax,0x25203a64
    d918:	73 3a                	jae    d954 <_IO_stdin_used+0x1954>
    d91a:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    d91f:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64261398 <_end+0x64124358>
    d925:	0a 00                	or     al,BYTE PTR [rax]
    d927:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d92a:	49 20 4e 45          	rex.WB and BYTE PTR [r14+0x45],cl
    d92e:	57                   	push   rdi
    d92f:	20 43 4f             	and    BYTE PTR [rbx+0x4f],al
    d932:	4e 56                	rex.WRX push rsi
    d934:	3a 20                	cmp    ah,BYTE PTR [rax]
    d936:	25 64 3a 20 25       	and    eax,0x25203a64
    d93b:	73 3a                	jae    d977 <_IO_stdin_used+0x1977>
    d93d:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    d942:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642613bb <_end+0x6412437b>
    d948:	0a 00                	or     al,BYTE PTR [rax]
    d94a:	00 00                	add    BYTE PTR [rax],al
    d94c:	00 00                	add    BYTE PTR [rax],al
    d94e:	00 00                	add    BYTE PTR [rax],al
    d950:	53                   	push   rbx
    d951:	50                   	push   rax
    d952:	49 20 54 57 48       	rex.WB and BYTE PTR [r15+rdx*2+0x48],dl
    d957:	20 32                	and    BYTE PTR [rdx],dh
    d959:	2f                   	(bad)  
    d95a:	33 3a                	xor    edi,DWORD PTR [rdx]
    d95c:	20 25 64 3a 20 25    	and    BYTE PTR [rip+0x25203a64],ah        # 252113c6 <_end+0x250d4386>
    d962:	73 3a                	jae    d99e <_IO_stdin_used+0x199e>
    d964:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    d969:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642613e2 <_end+0x641243a2>
    d96f:	0a 00                	or     al,BYTE PTR [rax]
    d971:	00 00                	add    BYTE PTR [rax],al
    d973:	00 00                	add    BYTE PTR [rax],al
    d975:	00 00                	add    BYTE PTR [rax],al
    d977:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d97a:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d97e:	54                   	push   rsp
    d97f:	52                   	push   rdx
    d980:	59                   	pop    rcx
    d981:	3a 20                	cmp    ah,BYTE PTR [rax]
    d983:	25 64 3a 20 53       	and    eax,0x53203a64
    d988:	45 53                	rex.RB push r11
    d98a:	53                   	push   rbx
    d98b:	49                   	rex.WB
    d98c:	4f                   	rex.WRXB
    d98d:	4e 20 45 53          	rex.WRX and BYTE PTR [rbp+0x53],r8b
    d991:	54                   	push   rsp
    d992:	3a 20                	cmp    ah,BYTE PTR [rax]
    d994:	25 73 3a 25 64       	and    eax,0x64253a73
    d999:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325f9dd <_end+0x7312299d>
    d99f:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e409 <__GNU_EH_FRAME_HDR+0x2f1>
    d9a5:	00 00                	add    BYTE PTR [rax],al
    d9a7:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d9aa:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d9ae:	54                   	push   rsp
    d9af:	52                   	push   rdx
    d9b0:	59                   	pop    rcx
    d9b1:	3a 20                	cmp    ah,BYTE PTR [rax]
    d9b3:	25 64 3a 20 50       	and    eax,0x50203a64
    d9b8:	4f                   	rex.WRXB
    d9b9:	4c                   	rex.WR
    d9ba:	49 54                	rex.WB push r12
    d9bc:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    d9c0:	4e 56                	rex.WRX push rsi
    d9c2:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    d9c5:	44 20 33             	and    BYTE PTR [rbx],r14b
    d9c8:	2f                   	(bad)  
    d9c9:	33 3a                	xor    edi,DWORD PTR [rdx]
    d9cb:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64261444 <_end+0x64124404>
    d9d1:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fa15 <_end+0x731229d5>
    d9d7:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e441 <__GNU_EH_FRAME_HDR+0x329>
    d9dd:	00 00                	add    BYTE PTR [rax],al
    d9df:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d9e2:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d9e6:	54                   	push   rsp
    d9e7:	52                   	push   rdx
    d9e8:	59                   	pop    rcx
    d9e9:	3a 20                	cmp    ah,BYTE PTR [rax]
    d9eb:	25 64 3a 20 50       	and    eax,0x50203a64
    d9f0:	4f                   	rex.WRXB
    d9f1:	4c                   	rex.WR
    d9f2:	49 54                	rex.WB push r12
    d9f4:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    d9f8:	4e 56                	rex.WRX push rsi
    d9fa:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    d9fd:	44 20 32             	and    BYTE PTR [rdx],r14b
    da00:	2f                   	(bad)  
    da01:	33 3a                	xor    edi,DWORD PTR [rdx]
    da03:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 6426147c <_end+0x6412443c>
    da09:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fa4d <_end+0x73122a0d>
    da0f:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e479 <__GNU_EH_FRAME_HDR+0x361>
    da15:	00 00                	add    BYTE PTR [rax],al
    da17:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    da1a:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    da1e:	54                   	push   rsp
    da1f:	52                   	push   rdx
    da20:	59                   	pop    rcx
    da21:	3a 20                	cmp    ah,BYTE PTR [rax]
    da23:	25 64 3a 20 50       	and    eax,0x50203a64
    da28:	4f                   	rex.WRXB
    da29:	4c                   	rex.WR
    da2a:	49 54                	rex.WB push r12
    da2c:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    da30:	4e 56                	rex.WRX push rsi
    da32:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    da35:	44 20 31             	and    BYTE PTR [rcx],r14b
    da38:	2f                   	(bad)  
    da39:	33 3a                	xor    edi,DWORD PTR [rdx]
    da3b:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642614b4 <_end+0x64124474>
    da41:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fa85 <_end+0x73122a45>
    da47:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e4b1 <__GNU_EH_FRAME_HDR+0x399>
    da4d:	00 00                	add    BYTE PTR [rax],al
    da4f:	00 61 00             	add    BYTE PTR [rcx+0x0],ah
    da52:	00 00                	add    BYTE PTR [rax],al
    da54:	00 00                	add    BYTE PTR [rax],al
    da56:	00 00                	add    BYTE PTR [rax],al
    da58:	43 52                	rex.XB push r10
    da5a:	49 54                	rex.WB push r12
    da5c:	49                   	rex.WB
    da5d:	43                   	rex.XB
    da5e:	41                   	rex.B
    da5f:	4c 20 46 41          	rex.WR and BYTE PTR [rsi+0x41],r8b
    da63:	49                   	rex.WB
    da64:	4c                   	rex.WR
    da65:	45                   	rex.RB
    da66:	44 20 54 4f 20       	and    BYTE PTR [rdi+rcx*2+0x20],r10b
    da6b:	4f 50                	rex.WRXB push r8
    da6d:	45                   	rex.RB
    da6e:	4e 20 46 49          	rex.WRX and BYTE PTR [rsi+0x49],r8b
    da72:	4c                   	rex.WR
    da73:	45 20 46 4f          	and    BYTE PTR [r14+0x4f],r8b
    da77:	52                   	push   rdx
    da78:	20 4c 4f 47          	and    BYTE PTR [rdi+rcx*2+0x47],cl
    da7c:	47                   	rex.RXB
    da7d:	49                   	rex.WB
    da7e:	4e                   	rex.WRX
    da7f:	47 3a 20             	rex.RXB cmp r12b,BYTE PTR [r8]
    da82:	25 73 0a 00 25       	and    eax,0x25000a73
    da87:	73 20                	jae    daa9 <_IO_stdin_used+0x1aa9>
    da89:	25 73 20 25 73       	and    eax,0x73252073
    da8e:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fad2 <_end+0x73122a92>
    da94:	0a 00                	or     al,BYTE PTR [rax]
    da96:	25 73 20 25 73       	and    eax,0x73252073
    da9b:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64261514 <_end+0x641244d4>
    daa1:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fae5 <_end+0x73122aa5>
    daa7:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e511 <__GNU_EH_FRAME_HDR+0x3f9>
    daad:	00 00                	add    BYTE PTR [rax],al
    daaf:	00 61 6e             	add    BYTE PTR [rcx+0x6e],ah
    dab2:	79 00                	jns    dab4 <_IO_stdin_used+0x1ab4>
    dab4:	41                   	rex.B
    dab5:	4e 59                	rex.WRX pop rcx
    dab7:	00 49 43             	add    BYTE PTR [rcx+0x43],cl
    daba:	4d 50                	rex.WRB push r8
    dabc:	00 54 43 50          	add    BYTE PTR [rbx+rax*2+0x50],dl
    dac0:	00 55 44             	add    BYTE PTR [rbp+0x44],dl
    dac3:	50                   	push   rax
    dac4:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    dac7:	72 5f                	jb     db28 <_IO_stdin_used+0x1b28>
    dac9:	6d                   	ins    DWORD PTR es:[rdi],dx
    daca:	61                   	(bad)  
    dacb:	74 63                	je     db30 <_IO_stdin_used+0x1b30>
    dacd:	68 00 6e 6f 6e       	push   0x6e6f6e00
    dad2:	65 00 70 63          	add    BYTE PTR gs:[rax+0x63],dh
    dad6:	72 65                	jb     db3d <_IO_stdin_used+0x1b3d>
    dad8:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    dadb:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    dadf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dae0:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    dae3:	6c                   	ins    BYTE PTR es:[rdi],dx
    dae4:	65 20 74 79 70       	and    BYTE PTR gs:[rcx+rdi*2+0x70],dh
    dae9:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    daec:	25 73 0a 00 3b       	and    eax,0x3b000a73
    daf1:	00 46 6f             	add    BYTE PTR [rsi+0x6f],al
    daf4:	75 6e                	jne    db64 <_IO_stdin_used+0x1b64>
    daf6:	64 20 6f 70          	and    BYTE PTR fs:[rdi+0x70],ch
    dafa:	65 72 61             	gs jb  db5e <_IO_stdin_used+0x1b5e>
    dafd:	74 6f                	je     db6e <_IO_stdin_used+0x1b6e>
    daff:	72 00                	jb     db01 <_IO_stdin_used+0x1b01>
    db01:	61                   	(bad)  
    db02:	6c                   	ins    BYTE PTR es:[rdi],dx
    db03:	65 72 74             	gs jb  db7a <_IO_stdin_used+0x1b7a>
    db06:	00 24 68             	add    BYTE PTR [rax+rbp*2],ah
    db09:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    db0a:	6d                   	ins    DWORD PTR es:[rdi],dx
    db0b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    db0d:	65 74 00             	gs je  db10 <_IO_stdin_used+0x1b10>
    db10:	2d 3e 00 3c 3e       	sub    eax,0x3e3c003e
    db15:	00 24 65 78 74 65 72 	add    BYTE PTR [riz*2+0x72657478],ah
    db1c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db1d:	61                   	(bad)  
    db1e:	6c                   	ins    BYTE PTR es:[rdi],dx
    db1f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db20:	65 74 00             	gs je  db23 <_IO_stdin_used+0x1b23>
    db23:	22 3b                	and    bh,BYTE PTR [rbx]
    db25:	00 6e 61             	add    BYTE PTR [rsi+0x61],ch
    db28:	6d                   	ins    DWORD PTR es:[rdi],dx
    db29:	65 3a 22             	cmp    ah,BYTE PTR gs:[rdx]
    db2c:	00 6d 73             	add    BYTE PTR [rbp+0x73],ch
    db2f:	67 3a 22             	cmp    ah,BYTE PTR [edx]
    db32:	00 64 65 70          	add    BYTE PTR [rbp+riz*2+0x70],ah
    db36:	74 68                	je     dba0 <_IO_stdin_used+0x1ba0>
    db38:	3a 00                	cmp    al,BYTE PTR [rax]
    db3a:	74 79                	je     dbb5 <_IO_stdin_used+0x1bb5>
    db3c:	70 65                	jo     dba3 <_IO_stdin_used+0x1ba3>
    db3e:	3a 00                	cmp    al,BYTE PTR [rax]
    db40:	74 61                	je     dba3 <_IO_stdin_used+0x1ba3>
    db42:	72 67                	jb     dbab <_IO_stdin_used+0x1bab>
    db44:	65 74 3a             	gs je  db81 <_IO_stdin_used+0x1b81>
    db47:	22 00                	and    al,BYTE PTR [rax]
    db49:	73 65                	jae    dbb0 <_IO_stdin_used+0x1bb0>
    db4b:	76 3a                	jbe    db87 <_IO_stdin_used+0x1b87>
    db4d:	00 00                	add    BYTE PTR [rax],al
    db4f:	00 52 75             	add    BYTE PTR [rdx+0x75],dl
    db52:	6c                   	ins    BYTE PTR es:[rdi],dx
    db53:	65 20 73 65          	and    BYTE PTR gs:[rbx+0x65],dh
    db57:	76 65                	jbe    dbbe <_IO_stdin_used+0x1bbe>
    db59:	72 69                	jb     dbc4 <_IO_stdin_used+0x1bc4>
    db5b:	74 79                	je     dbd6 <_IO_stdin_used+0x1bd6>
    db5d:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    db60:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    db61:	75 6c                	jne    dbcf <_IO_stdin_used+0x1bcf>
    db63:	64 20 62 65          	and    BYTE PTR fs:[rdx+0x65],ah
    db67:	20 3e                	and    BYTE PTR [rsi],bh
    db69:	20 30                	and    BYTE PTR [rax],dh
    db6b:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    db6e:	64 20 3c 3d 20 31 30 	and    BYTE PTR fs:[rdi*1+0x303120],bh
    db75:	00 
    db76:	00 00                	add    BYTE PTR [rax],al
    db78:	52                   	push   rdx
    db79:	75 6c                	jne    dbe7 <_IO_stdin_used+0x1be7>
    db7b:	65 20 73 65          	and    BYTE PTR gs:[rbx+0x65],dh
    db7f:	76 65                	jbe    dbe6 <_IO_stdin_used+0x1be6>
    db81:	72 69                	jb     dbec <_IO_stdin_used+0x1bec>
    db83:	74 79                	je     dbfe <_IO_stdin_used+0x1bfe>
    db85:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    db88:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    db89:	75 6c                	jne    dbf7 <_IO_stdin_used+0x1bf7>
    db8b:	64 20 62 65          	and    BYTE PTR fs:[rdx+0x65],ah
    db8f:	20 61 20             	and    BYTE PTR [rcx+0x20],ah
    db92:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db93:	75 6d                	jne    dc02 <_IO_stdin_used+0x1c02>
    db95:	65 72 69             	gs jb  dc01 <_IO_stdin_used+0x1c01>
    db98:	63 20                	movsxd esp,DWORD PTR [rax]
    db9a:	76 61                	jbe    dbfd <_IO_stdin_used+0x1bfd>
    db9c:	6c                   	ins    BYTE PTR es:[rdi],dx
    db9d:	75 65                	jne    dc04 <_IO_stdin_used+0x1c04>
    db9f:	00 69 74             	add    BYTE PTR [rcx+0x74],ch
    dba2:	79 70                	jns    dc14 <_IO_stdin_used+0x1c14>
    dba4:	65 3a 00             	cmp    al,BYTE PTR gs:[rax]
    dba7:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    dba9:	76 61                	jbe    dc0c <_IO_stdin_used+0x1c0c>
    dbab:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbac:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    dbb3:	20 
    dbb4:	74 79                	je     dc2f <_IO_stdin_used+0x1c2f>
    dbb6:	70 65                	jo     dc1d <_IO_stdin_used+0x1c1d>
    dbb8:	20 76 61             	and    BYTE PTR [rsi+0x61],dh
    dbbb:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbbc:	75 65                	jne    dc23 <_IO_stdin_used+0x1c23>
    dbbe:	00 00                	add    BYTE PTR [rax],al
    dbc0:	25 73 3a 20 69       	and    eax,0x69203a73
    dbc5:	74 79                	je     dc40 <_IO_stdin_used+0x1c40>
    dbc7:	70 65                	jo     dc2e <_IO_stdin_used+0x1c2e>
    dbc9:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    dbcc:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbcd:	79 20                	jns    dbef <_IO_stdin_used+0x1bef>
    dbcf:	61                   	(bad)  
    dbd0:	70 70                	jo     dc42 <_IO_stdin_used+0x1c42>
    dbd2:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbd3:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dbda:	72 75                	jb     dc51 <_IO_stdin_used+0x1c51>
    dbdc:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbdd:	65 73 20             	gs jae dc00 <_IO_stdin_used+0x1c00>
    dbe0:	77 69                	ja     dc4b <_IO_stdin_used+0x1c4b>
    dbe2:	74 68                	je     dc4c <_IO_stdin_used+0x1c4c>
    dbe4:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    dbe7:	4d 50                	rex.WRB push r8
    dbe9:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dbec:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dbef:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dbf0:	74 6f                	je     dc61 <_IO_stdin_used+0x1c61>
    dbf2:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dbf5:	0a 00                	or     al,BYTE PTR [rax]
    dbf7:	69 63 6f 64 65 3a 00 	imul   esp,DWORD PTR [rbx+0x6f],0x3a6564
    dbfe:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    dc00:	76 61                	jbe    dc63 <_IO_stdin_used+0x1c63>
    dc02:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc03:	69 64 65 20 69 63 6d 	imul   esp,DWORD PTR [rbp+riz*2+0x20],0x706d6369
    dc0a:	70 
    dc0b:	20 63 6f             	and    BYTE PTR [rbx+0x6f],ah
    dc0e:	64 65 20 76 61       	fs and BYTE PTR gs:[rsi+0x61],dh
    dc13:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc14:	75 65                	jne    dc7b <_IO_stdin_used+0x1c7b>
    dc16:	00 00                	add    BYTE PTR [rax],al
    dc18:	69 63 6f 64 65 20 6f 	imul   esp,DWORD PTR [rbx+0x6f],0x6f206564
    dc1f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dc20:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc21:	79 20                	jns    dc43 <_IO_stdin_used+0x1c43>
    dc23:	61                   	(bad)  
    dc24:	70 70                	jo     dc96 <_IO_stdin_used+0x1c96>
    dc26:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc27:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dc2e:	72 75                	jb     dca5 <_IO_stdin_used+0x1ca5>
    dc30:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc31:	65 73 20             	gs jae dc54 <_IO_stdin_used+0x1c54>
    dc34:	77 69                	ja     dc9f <_IO_stdin_used+0x1c9f>
    dc36:	74 68                	je     dca0 <_IO_stdin_used+0x1ca0>
    dc38:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    dc3b:	4d 50                	rex.WRB push r8
    dc3d:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dc40:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dc43:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dc44:	74 6f                	je     dcb5 <_IO_stdin_used+0x1cb5>
    dc46:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dc49:	00 69 63             	add    BYTE PTR [rcx+0x63],ch
    dc4c:	6d                   	ins    DWORD PTR es:[rdi],dx
    dc4d:	70 5f                	jo     dcae <_IO_stdin_used+0x1cae>
    dc4f:	69 64 3a 00 49 6e 76 	imul   esp,DWORD PTR [rdx+rdi*1+0x0],0x61766e49
    dc56:	61 
    dc57:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc58:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    dc5f:	20 
    dc60:	69 64 20 76 61 6c 75 	imul   esp,DWORD PTR [rax+riz*1+0x76],0x65756c61
    dc67:	65 
	...
    dc70:	49                   	rex.WB
    dc71:	43                   	rex.XB
    dc72:	4d 50                	rex.WRB push r8
    dc74:	20 49 44             	and    BYTE PTR [rcx+0x44],cl
    dc77:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    dc7a:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc7b:	79 20                	jns    dc9d <_IO_stdin_used+0x1c9d>
    dc7d:	61                   	(bad)  
    dc7e:	70 70                	jo     dcf0 <_IO_stdin_used+0x1cf0>
    dc80:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc81:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dc88:	72 75                	jb     dcff <_IO_stdin_used+0x1cff>
    dc8a:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc8b:	65 73 20             	gs jae dcae <_IO_stdin_used+0x1cae>
    dc8e:	77 69                	ja     dcf9 <_IO_stdin_used+0x1cf9>
    dc90:	74 68                	je     dcfa <_IO_stdin_used+0x1cfa>
    dc92:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    dc95:	4d 50                	rex.WRB push r8
    dc97:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dc9a:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dc9d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dc9e:	74 6f                	je     dd0f <_IO_stdin_used+0x1d0f>
    dca0:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dca3:	00 69 63             	add    BYTE PTR [rcx+0x63],ch
    dca6:	6d                   	ins    DWORD PTR es:[rdi],dx
    dca7:	70 5f                	jo     dd08 <_IO_stdin_used+0x1d08>
    dca9:	73 65                	jae    dd10 <_IO_stdin_used+0x1d10>
    dcab:	71 3a                	jno    dce7 <_IO_stdin_used+0x1ce7>
    dcad:	00 49 6e             	add    BYTE PTR [rcx+0x6e],cl
    dcb0:	76 61                	jbe    dd13 <_IO_stdin_used+0x1d13>
    dcb2:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcb3:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    dcba:	20 
    dcbb:	73 65                	jae    dd22 <_IO_stdin_used+0x1d22>
    dcbd:	71 75                	jno    dd34 <_IO_stdin_used+0x1d34>
    dcbf:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    dcc1:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    dcc4:	76 61                	jbe    dd27 <_IO_stdin_used+0x1d27>
    dcc6:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcc7:	75 65                	jne    dd2e <_IO_stdin_used+0x1d2e>
    dcc9:	00 74 74 6c          	add    BYTE PTR [rsp+rsi*2+0x6c],dh
    dccd:	3a 00                	cmp    al,BYTE PTR [rax]
    dccf:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    dcd1:	76 61                	jbe    dd34 <_IO_stdin_used+0x1d34>
    dcd3:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcd4:	69 64 20 74 74 6c 20 	imul   esp,DWORD PTR [rax+riz*1+0x74],0x76206c74
    dcdb:	76 
    dcdc:	61                   	(bad)  
    dcdd:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcde:	75 65                	jne    dd45 <_IO_stdin_used+0x1d45>
    dce0:	00 66 6c             	add    BYTE PTR [rsi+0x6c],ah
    dce3:	61                   	(bad)  
    dce4:	67 73 3a             	addr32 jae dd21 <_IO_stdin_used+0x1d21>
    dce7:	22 00                	and    al,BYTE PTR [rax]
    dce9:	00 00                	add    BYTE PTR [rax],al
    dceb:	00 00                	add    BYTE PTR [rax],al
    dced:	00 00                	add    BYTE PTR [rax],al
    dcef:	00 66 6c             	add    BYTE PTR [rsi+0x6c],ah
    dcf2:	61                   	(bad)  
    dcf3:	67 73 20             	addr32 jae dd16 <_IO_stdin_used+0x1d16>
    dcf6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dcf7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dcf8:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcf9:	79 20                	jns    dd1b <_IO_stdin_used+0x1d1b>
    dcfb:	61                   	(bad)  
    dcfc:	70 70                	jo     dd6e <_IO_stdin_used+0x1d6e>
    dcfe:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcff:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dd06:	72 75                	jb     dd7d <_IO_stdin_used+0x1d7d>
    dd08:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd09:	65 73 20             	gs jae dd2c <_IO_stdin_used+0x1d2c>
    dd0c:	77 69                	ja     dd77 <_IO_stdin_used+0x1d77>
    dd0e:	74 68                	je     dd78 <_IO_stdin_used+0x1d78>
    dd10:	20 74 63 70          	and    BYTE PTR [rbx+riz*2+0x70],dh
    dd14:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dd17:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dd1a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd1b:	74 6f                	je     dd8c <_IO_stdin_used+0x1d8c>
    dd1d:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dd20:	00 61 63             	add    BYTE PTR [rcx+0x63],ah
    dd23:	6b 3a 00             	imul   edi,DWORD PTR [rdx],0x0
    dd26:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    dd28:	76 61                	jbe    dd8b <_IO_stdin_used+0x1d8b>
    dd2a:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd2b:	69 64 20 61 63 6b 20 	imul   esp,DWORD PTR [rax+riz*1+0x61],0x76206b63
    dd32:	76 
    dd33:	61                   	(bad)  
    dd34:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd35:	75 65                	jne    dd9c <_IO_stdin_used+0x1d9c>
    dd37:	00 70 63             	add    BYTE PTR [rax+0x63],dh
    dd3a:	72 65                	jb     dda1 <_IO_stdin_used+0x1da1>
    dd3c:	3a 22                	cmp    ah,BYTE PTR [rdx]
    dd3e:	00 00                	add    BYTE PTR [rax],al
    dd40:	46 61                	rex.RX (bad) 
    dd42:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    dd49:	20 
    dd4a:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    dd4d:	70 69                	jo     ddb8 <_IO_stdin_used+0x1db8>
    dd4f:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd50:	65 20 72 65          	and    BYTE PTR gs:[rdx+0x65],dh
    dd54:	67 75 6c             	addr32 jne ddc3 <_IO_stdin_used+0x1dc3>
    dd57:	61                   	(bad)  
    dd58:	72 20                	jb     dd7a <_IO_stdin_used+0x1d7a>
    dd5a:	65 78 70             	gs js  ddcd <_IO_stdin_used+0x1dcd>
    dd5d:	72 65                	jb     ddc4 <_IO_stdin_used+0x1dc4>
    dd5f:	73 73                	jae    ddd4 <_IO_stdin_used+0x1dd4>
    dd61:	69 6f 6e 00 64 73 69 	imul   ebp,DWORD PTR [rdi+0x6e],0x69736400
    dd68:	7a 65                	jp     ddcf <_IO_stdin_used+0x1dcf>
    dd6a:	3a 00                	cmp    al,BYTE PTR [rax]
    dd6c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd6d:	66 66 73 65          	data16 data16 jae ddd6 <_IO_stdin_used+0x1dd6>
    dd71:	74 3a                	je     ddad <_IO_stdin_used+0x1dad>
    dd73:	00 65 73             	add    BYTE PTR [rbp+0x73],ah
    dd76:	74 61                	je     ddd9 <_IO_stdin_used+0x1dd9>
    dd78:	62                   	(bad)  
    dd79:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd7a:	69 73 68 65 64 00 6e 	imul   esi,DWORD PTR [rbx+0x68],0x6e006465
    dd81:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd82:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    dd84:	63 72 79             	movsxd esi,DWORD PTR [rdx+0x79]
    dd87:	70 74                	jo     ddfd <_IO_stdin_used+0x1dfd>
    dd89:	00 25 63 00 25 30    	add    BYTE PTR [rip+0x30250063],ah        # 3025ddf2 <_end+0x30120db2>
    dd8f:	32 78 00             	xor    bh,BYTE PTR [rax+0x0]
    dd92:	00 00                	add    BYTE PTR [rax],al
    dd94:	3e 00 3c 00          	ds add BYTE PTR [rax+rax*1],bh
    dd98:	21 00                	and    DWORD PTR [rax],eax
    dd9a:	3c 3d                	cmp    al,0x3d
    dd9c:	00 3e                	add    BYTE PTR [rsi],bh
    dd9e:	3d 00 55 6e 73       	cmp    eax,0x736e5500
    dda3:	75 70                	jne    de15 <_IO_stdin_used+0x1e15>
    dda5:	70 6f                	jo     de16 <_IO_stdin_used+0x1e16>
    dda7:	72 74                	jb     de1d <_IO_stdin_used+0x1e1d>
    dda9:	65 64 20 6f 70       	gs and BYTE PTR fs:[rdi+0x70],ch
    ddae:	65 72 61             	gs jb  de12 <_IO_stdin_used+0x1e12>
    ddb1:	74 6f                	je     de22 <_IO_stdin_used+0x1e22>
    ddb3:	72 00                	jb     ddb5 <_IO_stdin_used+0x1db5>
    ddb5:	00 00                	add    BYTE PTR [rax],al
    ddb7:	00 c8                	add    al,cl
    ddb9:	d0 ff                	sar    bh,1
    ddbb:	ff 1a                	call   FWORD PTR [rdx]
    ddbd:	d1 ff                	sar    edi,1
    ddbf:	ff 33                	push   QWORD PTR [rbx]
    ddc1:	d1 ff                	sar    edi,1
    ddc3:	ff                   	(bad)  
    ddc4:	e8 d0 ff ff 01       	call   200dd99 <_end+0x1ed0d59>
    ddc9:	d1 ff                	sar    edi,1
    ddcb:	ff 4c d1 ff          	dec    DWORD PTR [rcx+rdx*8-0x1]
    ddcf:	ff 2e                	jmp    FWORD PTR [rsi]
    ddd1:	00 25 30 32 78 00    	add    BYTE PTR [rip+0x783230],ah        # 791007 <_end+0x653fc7>
    ddd7:	25 30 32 78 20       	and    eax,0x20783230
    dddc:	2d 2d 20 25 30       	sub    eax,0x3025202d
    dde1:	32 78 0a             	xor    bh,BYTE PTR [rax+0xa]
    dde4:	00 00                	add    BYTE PTR [rax],al
    dde6:	00 00                	add    BYTE PTR [rax],al
    dde8:	73 72                	jae    de5c <_IO_stdin_used+0x1e5c>
    ddea:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    ddec:	6c                   	ins    BYTE PTR es:[rdi],dx
    dded:	75 61                	jne    de50 <_IO_stdin_used+0x1e50>
    ddef:	2f                   	(bad)  
    ddf0:	73 63                	jae    de55 <_IO_stdin_used+0x1e55>
    ddf2:	72 69                	jb     de5d <_IO_stdin_used+0x1e5d>
    ddf4:	70 74                	jo     de6a <_IO_stdin_used+0x1e6a>
    ddf6:	73 2f                	jae    de27 <_IO_stdin_used+0x1e27>
    ddf8:	68 65 6c 6c 6f       	push   0x6f6c6c65
    ddfd:	74 65                	je     de64 <_IO_stdin_used+0x1e64>
    ddff:	73 74                	jae    de75 <_IO_stdin_used+0x1e75>
    de01:	2e 6c                	cs ins BYTE PTR es:[rdi],dx
    de03:	75 61                	jne    de66 <_IO_stdin_used+0x1e66>
    de05:	00 72 00             	add    BYTE PTR [rdx+0x0],dh
    de08:	2f                   	(bad)  
    de09:	65 74 63             	gs je  de6f <_IO_stdin_used+0x1e6f>
    de0c:	2f                   	(bad)  
    de0d:	76 69                	jbe    de78 <_IO_stdin_used+0x1e78>
    de0f:	67 69 6c 2f 6c 73 63 	imul   ebp,DWORD PTR [edi+ebp*1+0x6c],0x69726373
    de16:	72 69 
    de18:	70 74                	jo     de8e <_IO_stdin_used+0x1e8e>
    de1a:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    de1e:	66 00 46 61          	data16 add BYTE PTR [rsi+0x61],al
    de22:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    de29:	20 
    de2a:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    de2d:	6c                   	ins    BYTE PTR es:[rdi],dx
    de2e:	65 63 74 20 4c       	movsxd esi,DWORD PTR gs:[rax+riz*1+0x4c]
    de33:	75 61                	jne    de96 <_IO_stdin_used+0x1e96>
    de35:	20 73 63             	and    BYTE PTR [rbx+0x63],dh
    de38:	72 69                	jb     dea3 <_IO_stdin_used+0x1ea3>
    de3a:	70 74                	jo     deb0 <_IO_stdin_used+0x1eb0>
    de3c:	73 3a                	jae    de78 <_IO_stdin_used+0x1e78>
    de3e:	20 2f                	and    BYTE PTR [rdi],ch
    de40:	65 74 63             	gs je  dea6 <_IO_stdin_used+0x1ea6>
    de43:	2f                   	(bad)  
    de44:	76 69                	jbe    deaf <_IO_stdin_used+0x1eaf>
    de46:	67 69 6c 2f 6c 73 63 	imul   ebp,DWORD PTR [edi+ebp*1+0x6c],0x69726373
    de4d:	72 69 
    de4f:	70 74                	jo     dec5 <_IO_stdin_used+0x1ec5>
    de51:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    de55:	66 20 6e 6f          	data16 and BYTE PTR [rsi+0x6f],ch
    de59:	74 20                	je     de7b <_IO_stdin_used+0x1e7b>
    de5b:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    de5d:	75 6e                	jne    decd <_IO_stdin_used+0x1ecd>
    de5f:	64 2e 00 2e          	fs add BYTE PTR fs:[rsi],ch
    de63:	2a 2e                	sub    ch,BYTE PTR [rsi]
    de65:	6c                   	ins    BYTE PTR es:[rdi],dx
    de66:	75 61                	jne    dec9 <_IO_stdin_used+0x1ec9>
    de68:	3a 2e                	cmp    ch,BYTE PTR [rsi]
    de6a:	2a 00                	sub    al,BYTE PTR [rax]
    de6c:	6c                   	ins    BYTE PTR es:[rdi],dx
    de6d:	5f                   	pop    rdi
    de6e:	73 63                	jae    ded3 <_IO_stdin_used+0x1ed3>
    de70:	72 69                	jb     dedb <_IO_stdin_used+0x1edb>
    de72:	70 74                	jo     dee8 <_IO_stdin_used+0x1ee8>
    de74:	5f                   	pop    rdi
    de75:	72 6f                	jb     dee6 <_IO_stdin_used+0x1ee6>
    de77:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    de78:	74 3d                	je     deb7 <_IO_stdin_used+0x1eb7>
    de7a:	00 0a                	add    BYTE PTR [rdx],cl
    de7c:	00 00                	add    BYTE PTR [rax],al
    de7e:	00 00                	add    BYTE PTR [rax],al
    de80:	49 50                	rex.WB push r8
    de82:	76 36                	jbe    deba <_IO_stdin_used+0x1eba>
    de84:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2dfefd <_end+0x3e1a2ebd>
    de8a:	20 25 73 20 50 72    	and    BYTE PTR [rip+0x72502073],ah        # 7250ff03 <_end+0x723d2ec3>
    de90:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    de91:	74 6f                	je     df02 <_IO_stdin_used+0x1f02>
    de93:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    de96:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    de99:	6d                   	ins    DWORD PTR es:[rdi],dx
    de9a:	62                   	(bad)  
    de9b:	65 72 20             	gs jb  debe <_IO_stdin_used+0x1ebe>
    de9e:	3d 20 25 64 0a       	cmp    eax,0xa642520
    dea3:	00 00                	add    BYTE PTR [rax],al
    dea5:	00 00                	add    BYTE PTR [rax],al
    dea7:	00 5b 4e             	add    BYTE PTR [rbx+0x4e],bl
    deaa:	20 25 73 20 53 20    	and    BYTE PTR [rip+0x20532073],ah        # 2053ff23 <_end+0x20402ee3>
    deb0:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    deb3:	30 32                	xor    BYTE PTR [rdx],dh
    deb5:	78 20                	js     ded7 <_IO_stdin_used+0x1ed7>
    deb7:	45 20 30             	and    BYTE PTR [r8],r14b
    deba:	78 25                	js     dee1 <_IO_stdin_used+0x1ee1>
    debc:	30 32                	xor    BYTE PTR [rdx],dh
    debe:	78 5d                	js     df1d <_IO_stdin_used+0x1f1d>
    dec0:	0a 00                	or     al,BYTE PTR [rax]
    dec2:	00 00                	add    BYTE PTR [rax],al
    dec4:	00 00                	add    BYTE PTR [rax],al
    dec6:	00 00                	add    BYTE PTR [rax],al
    dec8:	53                   	push   rbx
    dec9:	65 67 6d             	gs ins DWORD PTR es:[edi],dx
    decc:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    dece:	74 61                	je     df31 <_IO_stdin_used+0x1f31>
    ded0:	74 69                	je     df3b <_IO_stdin_used+0x1f3b>
    ded2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ded3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ded4:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    ded7:	75 6c                	jne    df45 <_IO_stdin_used+0x1f45>
    ded9:	74 20                	je     defb <_IO_stdin_used+0x1efb>
    dedb:	61                   	(bad)  
    dedc:	74 20                	je     defe <_IO_stdin_used+0x1efe>
    dede:	25 73 3a 20 61       	and    eax,0x61203a73
    dee3:	70 70                	jo     df55 <_IO_stdin_used+0x1f55>
    dee5:	6c                   	ins    BYTE PTR es:[rdi],dx
    dee6:	69 63 61 74 69 6f 6e 	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
    deed:	20 63 72             	and    BYTE PTR [rbx+0x72],ah
    def0:	61                   	(bad)  
    def1:	73 68                	jae    df5b <_IO_stdin_used+0x1f5b>
    def3:	65 64 0a 00          	gs or  al,BYTE PTR fs:[rax]
    def7:	46 75 6e             	rex.RX jne df68 <_IO_stdin_used+0x1f68>
    defa:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    defe:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    deff:	20 62 61             	and    BYTE PTR [rdx+0x61],ah
    df02:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
    df05:	72 61                	jb     df68 <_IO_stdin_used+0x1f68>
    df07:	63 65 3a             	movsxd esp,DWORD PTR [rbp+0x3a]
    df0a:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
    df0e:	00 25 73 0a 00 00    	add    BYTE PTR [rip+0xa73],ah        # e987 <__GNU_EH_FRAME_HDR+0x86f>
    df14:	00 00                	add    BYTE PTR [rax],al
    df16:	00 00                	add    BYTE PTR [rax],al
    df18:	5b                   	pop    rbx
    df19:	4e 20 25 73 20 53 20 	rex.WRX and BYTE PTR [rip+0x20532073],r12b        # 2053ff93 <_end+0x20402f53>
    df20:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    df23:	30 32                	xor    BYTE PTR [rdx],dh
    df25:	78 20                	js     df47 <_IO_stdin_used+0x1f47>
    df27:	45 20 30             	and    BYTE PTR [r8],r14b
    df2a:	78 25                	js     df51 <_IO_stdin_used+0x1f51>
    df2c:	30 32                	xor    BYTE PTR [rdx],dh
    df2e:	78 20                	js     df50 <_IO_stdin_used+0x1f50>
    df30:	28 2e                	sub    BYTE PTR [rsi],ch
    df32:	2f                   	(bad)  
    df33:	76 69                	jbe    df9e <_IO_stdin_used+0x1f9e>
    df35:	67 69 6c 2e 65 78 65 	imul   ebp,DWORD PTR [esi+ebp*1+0x65],0x2b286578
    df3c:	28 2b 
    df3e:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    df41:	30 32                	xor    BYTE PTR [rdx],dh
    df43:	78 29                	js     df6e <_IO_stdin_used+0x1f6e>
    df45:	29 5d 0a             	sub    DWORD PTR [rbp+0xa],ebx
	...
    df50:	55                   	push   rbp
    df51:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df52:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    df56:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df57:	20 66 75             	and    BYTE PTR [rsi+0x75],ah
    df5a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df5b:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    df5f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df60:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    df63:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
    df66:	6d                   	ins    DWORD PTR es:[rdi],dx
    df67:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    df68:	72 79                	jb     dfe3 <_IO_stdin_used+0x1fe3>
    df6a:	20 6f 66             	and    BYTE PTR [rdi+0x66],ch
    df6d:	66 73 65             	data16 jae dfd5 <_IO_stdin_used+0x1fd5>
    df70:	74 20                	je     df92 <_IO_stdin_used+0x1f92>
    df72:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    df75:	30 32                	xor    BYTE PTR [rdx],dh
    df77:	78 0a                	js     df83 <_IO_stdin_used+0x1f83>
    df79:	00 52 65             	add    BYTE PTR [rdx+0x65],dl
    df7c:	67 69 73 74 65 72 20 	imul   esi,DWORD PTR [ebx+0x74],0x44207265
    df83:	44 
    df84:	75 6d                	jne    dff3 <_IO_stdin_used+0x1ff3>
    df86:	70 3a                	jo     dfc2 <_IO_stdin_used+0x1fc2>
    df88:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    df8b:	41 58                	pop    r8
    df8d:	5d                   	pop    rbp
    df8e:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790fb4 <_end+0x25653f74>
    df94:	30 32                	xor    BYTE PTR [rdx],dh
    df96:	78 0a                	js     dfa2 <_IO_stdin_used+0x1fa2>
    df98:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    df9b:	42 58                	rex.X pop rax
    df9d:	5d                   	pop    rbp
    df9e:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790fc4 <_end+0x25653f84>
    dfa4:	30 32                	xor    BYTE PTR [rdx],dh
    dfa6:	78 0a                	js     dfb2 <_IO_stdin_used+0x1fb2>
    dfa8:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    dfab:	43 58                	rex.XB pop r8
    dfad:	5d                   	pop    rbp
    dfae:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790fd4 <_end+0x25653f94>
    dfb4:	30 32                	xor    BYTE PTR [rdx],dh
    dfb6:	78 0a                	js     dfc2 <_IO_stdin_used+0x1fc2>
    dfb8:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    dfbb:	44 58                	rex.R pop rax
    dfbd:	5d                   	pop    rbp
    dfbe:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790fe4 <_end+0x25653fa4>
    dfc4:	30 32                	xor    BYTE PTR [rdx],dh
    dfc6:	78 0a                	js     dfd2 <_IO_stdin_used+0x1fd2>
    dfc8:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    dfcb:	53                   	push   rbx
    dfcc:	50                   	push   rax
    dfcd:	5d                   	pop    rbp
    dfce:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790ff4 <_end+0x25653fb4>
    dfd4:	30 32                	xor    BYTE PTR [rdx],dh
    dfd6:	78 0a                	js     dfe2 <_IO_stdin_used+0x1fe2>
    dfd8:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    dfdb:	42 50                	rex.X push rax
    dfdd:	5d                   	pop    rbp
    dfde:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25791004 <_end+0x25653fc4>
    dfe4:	30 32                	xor    BYTE PTR [rdx],dh
    dfe6:	78 0a                	js     dff2 <_IO_stdin_used+0x1ff2>
	...
    dff0:	72 00                	jb     dff2 <_IO_stdin_used+0x1ff2>
    dff2:	2f                   	(bad)  
    dff3:	75 73                	jne    e068 <_IO_stdin_used+0x2068>
    dff5:	72 2f                	jb     e026 <_IO_stdin_used+0x2026>
    dff7:	73 68                	jae    e061 <_IO_stdin_used+0x2061>
    dff9:	61                   	(bad)  
    dffa:	72 65                	jb     e061 <_IO_stdin_used+0x2061>
    dffc:	2f                   	(bad)  
    dffd:	76 69                	jbe    e068 <_IO_stdin_used+0x2068>
    dfff:	67 69 6c 2f 6d 65 6d 	imul   ebp,DWORD PTR [edi+ebp*1+0x6d],0x616d6d65
    e006:	6d 61 
    e008:	70 2e                	jo     e038 <_IO_stdin_used+0x2038>
    e00a:	74 78                	je     e084 <_IO_stdin_used+0x2084>
    e00c:	74 00                	je     e00e <_IO_stdin_used+0x200e>
    e00e:	00 00                	add    BYTE PTR [rax],al
    e010:	46                   	rex.RX
    e011:	41 54                	push   r12
    e013:	41                   	rex.B
    e014:	4c 20 45 52          	rex.WR and BYTE PTR [rbp+0x52],r8b
    e018:	52                   	push   rdx
    e019:	4f 52                	rex.WRXB push r10
    e01b:	3a 20                	cmp    ah,BYTE PTR [rax]
    e01d:	6d                   	ins    DWORD PTR es:[rdi],dx
    e01e:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    e020:	6d                   	ins    DWORD PTR es:[rdi],dx
    e021:	61                   	(bad)  
    e022:	70 2e                	jo     e052 <_IO_stdin_used+0x2052>
    e024:	74 78                	je     e09e <_IO_stdin_used+0x209e>
    e026:	74 20                	je     e048 <_IO_stdin_used+0x2048>
    e028:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e029:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e02a:	74 20                	je     e04c <_IO_stdin_used+0x204c>
    e02c:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    e02e:	75 6e                	jne    e09e <_IO_stdin_used+0x209e>
    e030:	64 2e 50             	fs cs push rax
    e033:	6c                   	ins    BYTE PTR es:[rdi],dx
    e034:	65 61                	gs (bad) 
    e036:	73 65                	jae    e09d <_IO_stdin_used+0x209d>
    e038:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    e03b:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    e03e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e03f:	20 67 65             	and    BYTE PTR [rdi+0x65],ah
    e042:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e043:	5f                   	pop    rdi
    e044:	6d                   	ins    DWORD PTR es:[rdi],dx
    e045:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    e047:	5f                   	pop    rdi
    e048:	6d                   	ins    DWORD PTR es:[rdi],dx
    e049:	61                   	(bad)  
    e04a:	70 2e                	jo     e07a <_IO_stdin_used+0x207a>
    e04c:	70 79                	jo     e0c7 <_IO_stdin_used+0x20c7>
    e04e:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    e051:	64 20 63 6f          	and    BYTE PTR fs:[rbx+0x6f],ah
    e055:	70 79                	jo     e0d0 <_IO_stdin_used+0x20d0>
    e057:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
    e05a:	6d                   	ins    DWORD PTR es:[rdi],dx
    e05b:	6d                   	ins    DWORD PTR es:[rdi],dx
    e05c:	61                   	(bad)  
    e05d:	70 2e                	jo     e08d <_IO_stdin_used+0x208d>
    e05f:	74 78                	je     e0d9 <_IO_stdin_used+0x20d9>
    e061:	74 20                	je     e083 <_IO_stdin_used+0x2083>
    e063:	74 6f                	je     e0d4 <_IO_stdin_used+0x20d4>
    e065:	20 2f                	and    BYTE PTR [rdi],ch
    e067:	75 73                	jne    e0dc <_IO_stdin_used+0x20dc>
    e069:	72 2f                	jb     e09a <_IO_stdin_used+0x209a>
    e06b:	73 68                	jae    e0d5 <_IO_stdin_used+0x20d5>
    e06d:	61                   	(bad)  
    e06e:	72 65                	jb     e0d5 <_IO_stdin_used+0x20d5>
    e070:	2f                   	(bad)  
    e071:	76 69                	jbe    e0dc <_IO_stdin_used+0x20dc>
    e073:	67 69 6c 00 0a 00 20 	imul   ebp,DWORD PTR [eax+eax*1+0xa],0x2000
    e07a:	00 00 
    e07c:	00 00                	add    BYTE PTR [rax],al
    e07e:	00 00                	add    BYTE PTR [rax],al
    e080:	53                   	push   rbx
    e081:	63 61 6e             	movsxd esp,DWORD PTR [rcx+0x6e]
    e084:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e085:	69 6e 67 20 66 6f 72 	imul   ebp,DWORD PTR [rsi+0x67],0x726f6620
    e08c:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    e08f:	65 76 69             	gs jbe e0fb <_IO_stdin_used+0x20fb>
    e092:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e093:	75 73                	jne    e108 <_IO_stdin_used+0x2108>
    e095:	20 6c 6f 67          	and    BYTE PTR [rdi+rbp*2+0x67],ch
    e099:	20 66 69             	and    BYTE PTR [rsi+0x69],ah
    e09c:	6c                   	ins    BYTE PTR es:[rdi],dx
    e09d:	65 73 2e             	gs jae e0ce <_IO_stdin_used+0x20ce>
    e0a0:	2e 2e 00 2f          	cs cs add BYTE PTR [rdi],ch
    e0a4:	75 73                	jne    e119 <__GNU_EH_FRAME_HDR+0x1>
    e0a6:	72 2f                	jb     e0d7 <_IO_stdin_used+0x20d7>
    e0a8:	73 68                	jae    e112 <_IO_stdin_used+0x2112>
    e0aa:	61                   	(bad)  
    e0ab:	72 65                	jb     e112 <_IO_stdin_used+0x2112>
    e0ad:	2f                   	(bad)  
    e0ae:	76 69                	jbe    e119 <__GNU_EH_FRAME_HDR+0x1>
    e0b0:	67 69 6c 2f 73 74 61 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x73746174
    e0b7:	74 73 
    e0b9:	2f                   	(bad)  
    e0ba:	70 70                	jo     e12c <__GNU_EH_FRAME_HDR+0x14>
    e0bc:	73 2f                	jae    e0ed <_IO_stdin_used+0x20ed>
    e0be:	00 46 61             	add    BYTE PTR [rsi+0x61],al
    e0c1:	69 6c 65 64 00 46 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x756f4600
    e0c8:	75 
    e0c9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e0ca:	64 20 25 64 20 6c 6f 	and    BYTE PTR fs:[rip+0x6f6c2064],ah        # 6f6d0135 <_end+0x6f5930f5>
    e0d1:	67 20 66 69          	and    BYTE PTR [esi+0x69],ah
    e0d5:	6c                   	ins    BYTE PTR es:[rdi],dx
    e0d6:	65 73 0a             	gs jae e0e3 <_IO_stdin_used+0x20e3>
    e0d9:	00 00                	add    BYTE PTR [rax],al
    e0db:	00 00                	add    BYTE PTR [rax],al
    e0dd:	00 00                	add    BYTE PTR [rax],al
    e0df:	00 2f                	add    BYTE PTR [rdi],ch
    e0e1:	75 73                	jne    e156 <__GNU_EH_FRAME_HDR+0x3e>
    e0e3:	72 2f                	jb     e114 <_IO_stdin_used+0x2114>
    e0e5:	73 68                	jae    e14f <__GNU_EH_FRAME_HDR+0x37>
    e0e7:	61                   	(bad)  
    e0e8:	72 65                	jb     e14f <__GNU_EH_FRAME_HDR+0x37>
    e0ea:	2f                   	(bad)  
    e0eb:	76 69                	jbe    e156 <__GNU_EH_FRAME_HDR+0x3e>
    e0ed:	67 69 6c 2f 73 74 61 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x73746174
    e0f4:	74 73 
    e0f6:	2f                   	(bad)  
    e0f7:	70 70                	jo     e169 <__GNU_EH_FRAME_HDR+0x51>
    e0f9:	73 2f                	jae    e12a <__GNU_EH_FRAME_HDR+0x12>
    e0fb:	70 70                	jo     e16d <__GNU_EH_FRAME_HDR+0x55>
    e0fd:	73 2e                	jae    e12d <__GNU_EH_FRAME_HDR+0x15>
    e0ff:	6c                   	ins    BYTE PTR es:[rdi],dx
    e100:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e101:	67 2e 25 64 2e 74 78 	addr32 cs and eax,0x78742e64
    e108:	74 00                	je     e10a <_IO_stdin_used+0x210a>
    e10a:	77 00                	ja     e10c <_IO_stdin_used+0x210c>
    e10c:	61                   	(bad)  
    e10d:	00 25 6c 75 2c 25    	add    BYTE PTR [rip+0x252c756c],ah        # 252d567f <_end+0x2519863f>
    e113:	64 0a 00             	or     al,BYTE PTR fs:[rax]

Disassembly of section .eh_frame_hdr:

000000000000e118 <__GNU_EH_FRAME_HDR>:
    e118:	01 1b                	add    DWORD PTR [rbx],ebx
    e11a:	03 3b                	add    edi,DWORD PTR [rbx]
    e11c:	c4 03 00 00          	(bad)
    e120:	77 00                	ja     e122 <__GNU_EH_FRAME_HDR+0xa>
    e122:	00 00                	add    BYTE PTR [rax],al
    e124:	08 3f                	or     BYTE PTR [rdi],bh
    e126:	ff                   	(bad)  
    e127:	ff                   	(bad)  
    e128:	f8                   	clc    
    e129:	03 00                	add    eax,DWORD PTR [rax]
    e12b:	00 98 43 ff ff 20    	add    BYTE PTR [rax+0x20ffff43],bl
    e131:	04 00                	add    al,0x0
    e133:	00 a8 43 ff ff 38    	add    BYTE PTR [rax+0x38ffff43],ch
    e139:	04 00                	add    al,0x0
    e13b:	00 28                	add    BYTE PTR [rax],ch
    e13d:	48 ff                	rex.W (bad) 
    e13f:	ff e0                	jmp    rax
    e141:	03 00                	add    eax,DWORD PTR [rax]
    e143:	00 11                	add    BYTE PTR [rcx],dl
    e145:	49 ff                	rex.WB (bad) 
    e147:	ff 50 04             	call   QWORD PTR [rax+0x4]
    e14a:	00 00                	add    BYTE PTR [rax],al
    e14c:	4b                   	rex.WXB
    e14d:	49 ff                	rex.WB (bad) 
    e14f:	ff 70 04             	push   QWORD PTR [rax+0x4]
    e152:	00 00                	add    BYTE PTR [rax],al
    e154:	a1 4a ff ff 98 04 00 	movabs eax,ds:0x9500000498ffff4a
    e15b:	00 95 
    e15d:	4d ff                	rex.WRB (bad) 
    e15f:	ff                   	(bad)  
    e160:	b8 04 00 00 a8       	mov    eax,0xa8000004
    e165:	4e ff                	rex.WRX (bad) 
    e167:	ff                   	(bad)  
    e168:	d8 04 00             	fadd   DWORD PTR [rax+rax*1]
    e16b:	00 56 4f             	add    BYTE PTR [rsi+0x4f],dl
    e16e:	ff                   	(bad)  
    e16f:	ff                   	(bad)  
    e170:	f8                   	clc    
    e171:	04 00                	add    al,0x0
    e173:	00 fc                	add    ah,bh
    e175:	4f ff                	rex.WRXB (bad) 
    e177:	ff 18                	call   FWORD PTR [rax]
    e179:	05 00 00 91 50       	add    eax,0x50910000
    e17e:	ff                   	(bad)  
    e17f:	ff                   	(bad)  
    e180:	38 05 00 00 25 51    	cmp    BYTE PTR [rip+0x51250000],al        # 5125e186 <_end+0x51121146>
    e186:	ff                   	(bad)  
    e187:	ff 58 05             	call   FWORD PTR [rax+0x5]
    e18a:	00 00                	add    BYTE PTR [rax],al
    e18c:	f1                   	icebp  
    e18d:	52                   	push   rdx
    e18e:	ff                   	(bad)  
    e18f:	ff 84 05 00 00 c5 53 	inc    DWORD PTR [rbp+rax*1+0x53c50000]
    e196:	ff                   	(bad)  
    e197:	ff a8 05 00 00 8c    	jmp    FWORD PTR [rax-0x73fffffb]
    e19d:	54                   	push   rsp
    e19e:	ff                   	(bad)  
    e19f:	ff cc                	dec    esp
    e1a1:	05 00 00 df 54       	add    eax,0x54df0000
    e1a6:	ff                   	(bad)  
    e1a7:	ff                   	(bad)  
    e1a8:	ec                   	in     al,dx
    e1a9:	05 00 00 12 55       	add    eax,0x55120000
    e1ae:	ff                   	(bad)  
    e1af:	ff 0c 06             	dec    DWORD PTR [rsi+rax*1]
    e1b2:	00 00                	add    BYTE PTR [rax],al
    e1b4:	33 55 ff             	xor    edx,DWORD PTR [rbp-0x1]
    e1b7:	ff 2c 06             	jmp    FWORD PTR [rsi+rax*1]
    e1ba:	00 00                	add    BYTE PTR [rax],al
    e1bc:	9b                   	fwait
    e1bd:	55                   	push   rbp
    e1be:	ff                   	(bad)  
    e1bf:	ff 50 06             	call   QWORD PTR [rax+0x6]
    e1c2:	00 00                	add    BYTE PTR [rax],al
    e1c4:	c0 59 ff ff          	rcr    BYTE PTR [rcx-0x1],0xff
    e1c8:	70 06                	jo     e1d0 <__GNU_EH_FRAME_HDR+0xb8>
    e1ca:	00 00                	add    BYTE PTR [rax],al
    e1cc:	1d 5b ff ff 90       	sbb    eax,0x90ffff5b
    e1d1:	06                   	(bad)  
    e1d2:	00 00                	add    BYTE PTR [rax],al
    e1d4:	61                   	(bad)  
    e1d5:	63 ff                	movsxd edi,edi
    e1d7:	ff b0 06 00 00 1d    	push   QWORD PTR [rax+0x1d000006]
    e1dd:	6c                   	ins    BYTE PTR es:[rdi],dx
    e1de:	ff                   	(bad)  
    e1df:	ff                   	(bad)  
    e1e0:	d8 06                	fadd   DWORD PTR [rsi]
    e1e2:	00 00                	add    BYTE PTR [rax],al
    e1e4:	72 6d                	jb     e253 <__GNU_EH_FRAME_HDR+0x13b>
    e1e6:	ff                   	(bad)  
    e1e7:	ff                   	(bad)  
    e1e8:	f8                   	clc    
    e1e9:	06                   	(bad)  
    e1ea:	00 00                	add    BYTE PTR [rax],al
    e1ec:	71 6e                	jno    e25c <__GNU_EH_FRAME_HDR+0x144>
    e1ee:	ff                   	(bad)  
    e1ef:	ff 18                	call   FWORD PTR [rax]
    e1f1:	07                   	(bad)  
    e1f2:	00 00                	add    BYTE PTR [rax],al
    e1f4:	5d                   	pop    rbp
    e1f5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e1f6:	ff                   	(bad)  
    e1f7:	ff                   	(bad)  
    e1f8:	38 07                	cmp    BYTE PTR [rdi],al
    e1fa:	00 00                	add    BYTE PTR [rax],al
    e1fc:	0f 73                	(bad)
    e1fe:	ff                   	(bad)  
    e1ff:	ff 58 07             	call   FWORD PTR [rax+0x7]
    e202:	00 00                	add    BYTE PTR [rax],al
    e204:	92                   	xchg   edx,eax
    e205:	73 ff                	jae    e206 <__GNU_EH_FRAME_HDR+0xee>
    e207:	ff                   	(bad)  
    e208:	78 07                	js     e211 <__GNU_EH_FRAME_HDR+0xf9>
    e20a:	00 00                	add    BYTE PTR [rax],al
    e20c:	bc 75 ff ff a0       	mov    esp,0xa0ffff75
    e211:	07                   	(bad)  
    e212:	00 00                	add    BYTE PTR [rax],al
    e214:	f9                   	stc    
    e215:	77 ff                	ja     e216 <__GNU_EH_FRAME_HDR+0xfe>
    e217:	ff c4                	inc    esp
    e219:	07                   	(bad)  
    e21a:	00 00                	add    BYTE PTR [rax],al
    e21c:	5f                   	pop    rdi
    e21d:	78 ff                	js     e21e <__GNU_EH_FRAME_HDR+0x106>
    e21f:	ff e4                	jmp    rsp
    e221:	07                   	(bad)  
    e222:	00 00                	add    BYTE PTR [rax],al
    e224:	76 78                	jbe    e29e <__GNU_EH_FRAME_HDR+0x186>
    e226:	ff                   	(bad)  
    e227:	ff 04 08             	inc    DWORD PTR [rax+rcx*1]
    e22a:	00 00                	add    BYTE PTR [rax],al
    e22c:	c7                   	(bad)  
    e22d:	78 ff                	js     e22e <__GNU_EH_FRAME_HDR+0x116>
    e22f:	ff 28                	jmp    FWORD PTR [rax]
    e231:	08 00                	or     BYTE PTR [rax],al
    e233:	00 04 7f             	add    BYTE PTR [rdi+rdi*2],al
    e236:	ff                   	(bad)  
    e237:	ff 4c 08 00          	dec    DWORD PTR [rax+rcx*1+0x0]
    e23b:	00 1e                	add    BYTE PTR [rsi],bl
    e23d:	7f ff                	jg     e23e <__GNU_EH_FRAME_HDR+0x126>
    e23f:	ff 6c 08 00          	jmp    FWORD PTR [rax+rcx*1+0x0]
    e243:	00 47 7f             	add    BYTE PTR [rdi+0x7f],al
    e246:	ff                   	(bad)  
    e247:	ff 8c 08 00 00 77 7f 	dec    DWORD PTR [rax+rcx*1+0x7f770000]
    e24e:	ff                   	(bad)  
    e24f:	ff ac 08 00 00 ae 7f 	jmp    FWORD PTR [rax+rcx*1+0x7fae0000]
    e256:	ff                   	(bad)  
    e257:	ff c8                	dec    eax
    e259:	08 00                	or     BYTE PTR [rax],al
    e25b:	00 ff                	add    bh,bh
    e25d:	80 ff ff             	cmp    bh,0xff
    e260:	e8 08 00 00 5f       	call   5f00e26d <_end+0x5eed122d>
    e265:	82                   	(bad)  
    e266:	ff                   	(bad)  
    e267:	ff 08                	dec    DWORD PTR [rax]
    e269:	09 00                	or     DWORD PTR [rax],eax
    e26b:	00 c0                	add    al,al
    e26d:	82                   	(bad)  
    e26e:	ff                   	(bad)  
    e26f:	ff 28                	jmp    FWORD PTR [rax]
    e271:	09 00                	or     DWORD PTR [rax],eax
    e273:	00 f9                	add    cl,bh
    e275:	82                   	(bad)  
    e276:	ff                   	(bad)  
    e277:	ff 48 09             	dec    DWORD PTR [rax+0x9]
    e27a:	00 00                	add    BYTE PTR [rax],al
    e27c:	b7 83                	mov    bh,0x83
    e27e:	ff                   	(bad)  
    e27f:	ff 68 09             	jmp    FWORD PTR [rax+0x9]
    e282:	00 00                	add    BYTE PTR [rax],al
    e284:	75 86                	jne    e20c <__GNU_EH_FRAME_HDR+0xf4>
    e286:	ff                   	(bad)  
    e287:	ff 88 09 00 00 6d    	dec    DWORD PTR [rax+0x6d000009]
    e28d:	88 ff                	mov    bh,bh
    e28f:	ff a8 09 00 00 c7    	jmp    FWORD PTR [rax-0x38fffff7]
    e295:	88 ff                	mov    bh,bh
    e297:	ff c8                	dec    eax
    e299:	09 00                	or     DWORD PTR [rax],eax
    e29b:	00 f7                	add    bh,dh
    e29d:	8b ff                	mov    edi,edi
    e29f:	ff                   	(bad)  
    e2a0:	e8 09 00 00 48       	call   4800e2ae <_end+0x47ed126e>
    e2a5:	90                   	nop
    e2a6:	ff                   	(bad)  
    e2a7:	ff 08                	dec    DWORD PTR [rax]
    e2a9:	0a 00                	or     al,BYTE PTR [rax]
    e2ab:	00 72 90             	add    BYTE PTR [rdx-0x70],dh
    e2ae:	ff                   	(bad)  
    e2af:	ff 24 0a             	jmp    QWORD PTR [rdx+rcx*1]
    e2b2:	00 00                	add    BYTE PTR [rax],al
    e2b4:	24 92                	and    al,0x92
    e2b6:	ff                   	(bad)  
    e2b7:	ff 48 0a             	dec    DWORD PTR [rax+0xa]
    e2ba:	00 00                	add    BYTE PTR [rax],al
    e2bc:	3b 92 ff ff 68 0a    	cmp    edx,DWORD PTR [rdx+0xa68ffff]
    e2c2:	00 00                	add    BYTE PTR [rax],al
    e2c4:	8a 92 ff ff 88 0a    	mov    dl,BYTE PTR [rdx+0xa88ffff]
    e2ca:	00 00                	add    BYTE PTR [rax],al
    e2cc:	d7                   	xlat   BYTE PTR ds:[rbx]
    e2cd:	92                   	xchg   edx,eax
    e2ce:	ff                   	(bad)  
    e2cf:	ff a8 0a 00 00 4e    	jmp    FWORD PTR [rax+0x4e00000a]
    e2d5:	94                   	xchg   esp,eax
    e2d6:	ff                   	(bad)  
    e2d7:	ff c4                	inc    esp
    e2d9:	0a 00                	or     al,BYTE PTR [rax]
    e2db:	00 ea                	add    dl,ch
    e2dd:	94                   	xchg   esp,eax
    e2de:	ff                   	(bad)  
    e2df:	ff                   	(bad)  
    e2e0:	e8 0a 00 00 d8       	call   ffffffffd800e2ef <_end+0xffffffffd7ed12af>
    e2e5:	96                   	xchg   esi,eax
    e2e6:	ff                   	(bad)  
    e2e7:	ff 08                	dec    DWORD PTR [rax]
    e2e9:	0b 00                	or     eax,DWORD PTR [rax]
    e2eb:	00 c0                	add    al,al
    e2ed:	98                   	cwde   
    e2ee:	ff                   	(bad)  
    e2ef:	ff 28                	jmp    FWORD PTR [rax]
    e2f1:	0b 00                	or     eax,DWORD PTR [rax]
    e2f3:	00 2c 99             	add    BYTE PTR [rcx+rbx*4],ch
    e2f6:	ff                   	(bad)  
    e2f7:	ff 48 0b             	dec    DWORD PTR [rax+0xb]
    e2fa:	00 00                	add    BYTE PTR [rax],al
    e2fc:	9e                   	sahf   
    e2fd:	99                   	cdq    
    e2fe:	ff                   	(bad)  
    e2ff:	ff 68 0b             	jmp    FWORD PTR [rax+0xb]
    e302:	00 00                	add    BYTE PTR [rax],al
    e304:	af                   	scas   eax,DWORD PTR es:[rdi]
    e305:	9a                   	(bad)  
    e306:	ff                   	(bad)  
    e307:	ff 88 0b 00 00 0b    	dec    DWORD PTR [rax+0xb00000b]
    e30d:	9b                   	fwait
    e30e:	ff                   	(bad)  
    e30f:	ff a8 0b 00 00 49    	jmp    FWORD PTR [rax+0x4900000b]
    e315:	9b                   	fwait
    e316:	ff                   	(bad)  
    e317:	ff c8                	dec    eax
    e319:	0b 00                	or     eax,DWORD PTR [rax]
    e31b:	00 cf                	add    bh,cl
    e31d:	9b                   	fwait
    e31e:	ff                   	(bad)  
    e31f:	ff                   	(bad)  
    e320:	e8 0b 00 00 ae       	call   ffffffffae00e330 <_end+0xffffffffaded12f0>
    e325:	9c                   	pushf  
    e326:	ff                   	(bad)  
    e327:	ff 08                	dec    DWORD PTR [rax]
    e329:	0c 00                	or     al,0x0
    e32b:	00 22                	add    BYTE PTR [rdx],ah
    e32d:	9d                   	popf   
    e32e:	ff                   	(bad)  
    e32f:	ff 28                	jmp    FWORD PTR [rax]
    e331:	0c 00                	or     al,0x0
    e333:	00 be 9d ff ff 48    	add    BYTE PTR [rsi+0x48ffff9d],bh
    e339:	0c 00                	or     al,0x0
    e33b:	00 e7                	add    bh,ah
    e33d:	9d                   	popf   
    e33e:	ff                   	(bad)  
    e33f:	ff 68 0c             	jmp    FWORD PTR [rax+0xc]
    e342:	00 00                	add    BYTE PTR [rax],al
    e344:	10 9e ff ff 88 0c    	adc    BYTE PTR [rsi+0xc88ffff],bl
    e34a:	00 00                	add    BYTE PTR [rax],al
    e34c:	63 9f ff ff b0 0c    	movsxd ebx,DWORD PTR [rdi+0xcb0ffff]
    e352:	00 00                	add    BYTE PTR [rax],al
    e354:	76 a0                	jbe    e2f6 <__GNU_EH_FRAME_HDR+0x1de>
    e356:	ff                   	(bad)  
    e357:	ff d0                	call   rax
    e359:	0c 00                	or     al,0x0
    e35b:	00 6f a1             	add    BYTE PTR [rdi-0x5f],ch
    e35e:	ff                   	(bad)  
    e35f:	ff f0                	push   rax
    e361:	0c 00                	or     al,0x0
    e363:	00 11                	add    BYTE PTR [rcx],dl
    e365:	a2 ff ff 10 0d 00 00 	movabs ds:0xa22f00000d10ffff,al
    e36c:	2f a2 
    e36e:	ff                   	(bad)  
    e36f:	ff 30                	push   QWORD PTR [rax]
    e371:	0d 00 00 92 a3       	or     eax,0xa3920000
    e376:	ff                   	(bad)  
    e377:	ff 50 0d             	call   QWORD PTR [rax+0xd]
    e37a:	00 00                	add    BYTE PTR [rax],al
    e37c:	a3 a5 ff ff 80 0d 00 	movabs ds:0x5500000d80ffffa5,eax
    e383:	00 55 
    e385:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    e386:	ff                   	(bad)  
    e387:	ff a0 0d 00 00 fa    	jmp    QWORD PTR [rax-0x5fffff3]
    e38d:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    e38e:	ff                   	(bad)  
    e38f:	ff c0                	inc    eax
    e391:	0d 00 00 8e a7       	or     eax,0xa78e0000
    e396:	ff                   	(bad)  
    e397:	ff                   	(bad)  
    e398:	e8 0d 00 00 63       	call   6300e3aa <_end+0x62ed136a>
    e39d:	a8 ff                	test   al,0xff
    e39f:	ff 08                	dec    DWORD PTR [rax]
    e3a1:	0e                   	(bad)  
    e3a2:	00 00                	add    BYTE PTR [rax],al
    e3a4:	42 a9 ff ff 28 0e    	rex.X test eax,0xe28ffff
    e3aa:	00 00                	add    BYTE PTR [rax],al
    e3ac:	bf a9 ff ff 48       	mov    edi,0x48ffffa9
    e3b1:	0e                   	(bad)  
    e3b2:	00 00                	add    BYTE PTR [rax],al
    e3b4:	f5                   	cmc    
    e3b5:	aa                   	stos   BYTE PTR es:[rdi],al
    e3b6:	ff                   	(bad)  
    e3b7:	ff 68 0e             	jmp    FWORD PTR [rax+0xe]
    e3ba:	00 00                	add    BYTE PTR [rax],al
    e3bc:	73 ab                	jae    e369 <__GNU_EH_FRAME_HDR+0x251>
    e3be:	ff                   	(bad)  
    e3bf:	ff 88 0e 00 00 ac    	dec    DWORD PTR [rax-0x53fffff2]
    e3c5:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    e3c6:	ff                   	(bad)  
    e3c7:	ff a8 0e 00 00 75    	jmp    FWORD PTR [rax+0x7500000e]
    e3cd:	ae                   	scas   al,BYTE PTR es:[rdi]
    e3ce:	ff                   	(bad)  
    e3cf:	ff c8                	dec    eax
    e3d1:	0e                   	(bad)  
    e3d2:	00 00                	add    BYTE PTR [rax],al
    e3d4:	16                   	(bad)  
    e3d5:	b0 ff                	mov    al,0xff
    e3d7:	ff                   	(bad)  
    e3d8:	e8 0e 00 00 29       	call   2900e3eb <_end+0x28ed13ab>
    e3dd:	b1 ff                	mov    cl,0xff
    e3df:	ff 08                	dec    DWORD PTR [rax]
    e3e1:	0f 00 00             	sldt   WORD PTR [rax]
    e3e4:	8f                   	(bad)  
    e3e5:	b1 ff                	mov    cl,0xff
    e3e7:	ff 28                	jmp    FWORD PTR [rax]
    e3e9:	0f 00 00             	sldt   WORD PTR [rax]
    e3ec:	04 b2                	add    al,0xb2
    e3ee:	ff                   	(bad)  
    e3ef:	ff 48 0f             	dec    DWORD PTR [rax+0xf]
    e3f2:	00 00                	add    BYTE PTR [rax],al
    e3f4:	df b2 ff ff 68 0f    	fbstp  TBYTE PTR [rdx+0xf68ffff]
    e3fa:	00 00                	add    BYTE PTR [rax],al
    e3fc:	51                   	push   rcx
    e3fd:	b4 ff                	mov    ah,0xff
    e3ff:	ff 88 0f 00 00 bd    	dec    DWORD PTR [rax-0x42fffff1]
    e405:	b4 ff                	mov    ah,0xff
    e407:	ff a8 0f 00 00 3d    	jmp    FWORD PTR [rax+0x3d00000f]
    e40d:	b5 ff                	mov    ch,0xff
    e40f:	ff c8                	dec    eax
    e411:	0f 00 00             	sldt   WORD PTR [rax]
    e414:	53                   	push   rbx
    e415:	b5 ff                	mov    ch,0xff
    e417:	ff                   	(bad)  
    e418:	e8 0f 00 00 8d       	call   ffffffff8d00e42c <_end+0xffffffff8ced13ec>
    e41d:	b6 ff                	mov    dh,0xff
    e41f:	ff 0c 10             	dec    DWORD PTR [rax+rdx*1]
    e422:	00 00                	add    BYTE PTR [rax],al
    e424:	f1                   	icebp  
    e425:	b6 ff                	mov    dh,0xff
    e427:	ff 2c 10             	jmp    FWORD PTR [rax+rdx*1]
    e42a:	00 00                	add    BYTE PTR [rax],al
    e42c:	44 b7 ff             	rex.R mov dil,0xff
    e42f:	ff 4c 10 00          	dec    DWORD PTR [rax+rdx*1+0x0]
    e433:	00 f5                	add    ch,dh
    e435:	b7 ff                	mov    bh,0xff
    e437:	ff 6c 10 00          	jmp    FWORD PTR [rax+rdx*1+0x0]
    e43b:	00 c0                	add    al,al
    e43d:	b8 ff ff 8c 10       	mov    eax,0x108cffff
    e442:	00 00                	add    BYTE PTR [rax],al
    e444:	15 b9 ff ff ac       	adc    eax,0xacffffb9
    e449:	10 00                	adc    BYTE PTR [rax],al
    e44b:	00 45 b9             	add    BYTE PTR [rbp-0x47],al
    e44e:	ff                   	(bad)  
    e44f:	ff cc                	dec    esp
    e451:	10 00                	adc    BYTE PTR [rax],al
    e453:	00 ac b9 ff ff ec 10 	add    BYTE PTR [rcx+rdi*4+0x10ecffff],ch
    e45a:	00 00                	add    BYTE PTR [rax],al
    e45c:	e4 c8                	in     al,0xc8
    e45e:	ff                   	(bad)  
    e45f:	ff 10                	call   QWORD PTR [rax]
    e461:	11 00                	adc    DWORD PTR [rax],eax
    e463:	00 2a                	add    BYTE PTR [rdx],ch
    e465:	c9                   	leave  
    e466:	ff                   	(bad)  
    e467:	ff 30                	push   QWORD PTR [rax]
    e469:	11 00                	adc    DWORD PTR [rax],eax
    e46b:	00 65 cb             	add    BYTE PTR [rbp-0x35],ah
    e46e:	ff                   	(bad)  
    e46f:	ff 58 11             	call   FWORD PTR [rax+0x11]
    e472:	00 00                	add    BYTE PTR [rax],al
    e474:	0a cd                	or     cl,ch
    e476:	ff                   	(bad)  
    e477:	ff                   	(bad)  
    e478:	78 11                	js     e48b <__GNU_EH_FRAME_HDR+0x373>
    e47a:	00 00                	add    BYTE PTR [rax],al
    e47c:	1c ce                	sbb    al,0xce
    e47e:	ff                   	(bad)  
    e47f:	ff 98 11 00 00 d8    	call   FWORD PTR [rax-0x27ffffef]
    e485:	ce                   	(bad)  
    e486:	ff                   	(bad)  
    e487:	ff c0                	inc    eax
    e489:	11 00                	adc    DWORD PTR [rax],eax
    e48b:	00 73 d0             	add    BYTE PTR [rbx-0x30],dh
    e48e:	ff                   	(bad)  
    e48f:	ff                   	(bad)  
    e490:	e8 11 00 00 18       	call   1800e4a6 <_end+0x17ed1466>
    e495:	d1 ff                	sar    edi,1
    e497:	ff 08                	dec    DWORD PTR [rax]
    e499:	12 00                	adc    al,BYTE PTR [rax]
    e49b:	00 5b d2             	add    BYTE PTR [rbx-0x2e],bl
    e49e:	ff                   	(bad)  
    e49f:	ff 28                	jmp    FWORD PTR [rax]
    e4a1:	12 00                	adc    al,BYTE PTR [rax]
    e4a3:	00 4e d3             	add    BYTE PTR [rsi-0x2d],cl
    e4a6:	ff                   	(bad)  
    e4a7:	ff 48 12             	dec    DWORD PTR [rax+0x12]
    e4aa:	00 00                	add    BYTE PTR [rax],al
    e4ac:	be d3 ff ff 68       	mov    esi,0x68ffffd3
    e4b1:	12 00                	adc    al,BYTE PTR [rax]
    e4b3:	00 63 d6             	add    BYTE PTR [rbx-0x2a],ah
    e4b6:	ff                   	(bad)  
    e4b7:	ff 88 12 00 00 cd    	dec    DWORD PTR [rax-0x32ffffee]
    e4bd:	d6                   	(bad)  
    e4be:	ff                   	(bad)  
    e4bf:	ff a8 12 00 00 3b    	jmp    FWORD PTR [rax+0x3b000012]
    e4c5:	d7                   	xlat   BYTE PTR ds:[rbx]
    e4c6:	ff                   	(bad)  
    e4c7:	ff c8                	dec    eax
    e4c9:	12 00                	adc    al,BYTE PTR [rax]
    e4cb:	00 c8                	add    al,cl
    e4cd:	d8 ff                	fdivr  st,st(7)
    e4cf:	ff f0                	push   rax
    e4d1:	12 00                	adc    al,BYTE PTR [rax]
    e4d3:	00 97 dc ff ff 10    	add    BYTE PTR [rdi+0x10ffffdc],dl
    e4d9:	13 00                	adc    eax,DWORD PTR [rax]
	...

Disassembly of section .eh_frame:

000000000000e4e0 <__FRAME_END__-0xf68>:
    e4e0:	14 00                	adc    al,0x0
    e4e2:	00 00                	add    BYTE PTR [rax],al
    e4e4:	00 00                	add    BYTE PTR [rax],al
    e4e6:	00 00                	add    BYTE PTR [rax],al
    e4e8:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    e4eb:	00 01                	add    BYTE PTR [rcx],al
    e4ed:	78 10                	js     e4ff <__GNU_EH_FRAME_HDR+0x3e7>
    e4ef:	01 1b                	add    DWORD PTR [rbx],ebx
    e4f1:	0c 07                	or     al,0x7
    e4f3:	08 90 01 00 00 14    	or     BYTE PTR [rax+0x14000001],dl
    e4f9:	00 00                	add    BYTE PTR [rax],al
    e4fb:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e4fe:	00 00                	add    BYTE PTR [rax],al
    e500:	40                   	rex
    e501:	44 ff                	rex.R (bad) 
    e503:	ff 26                	jmp    QWORD PTR [rsi]
    e505:	00 00                	add    BYTE PTR [rax],al
    e507:	00 00                	add    BYTE PTR [rax],al
    e509:	44 07                	rex.R (bad) 
    e50b:	10 00                	adc    BYTE PTR [rax],al
    e50d:	00 00                	add    BYTE PTR [rax],al
    e50f:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    e512:	00 00                	add    BYTE PTR [rax],al
    e514:	34 00                	xor    al,0x0
    e516:	00 00                	add    BYTE PTR [rax],al
    e518:	08 3b                	or     BYTE PTR [rbx],bh
    e51a:	ff                   	(bad)  
    e51b:	ff 90 04 00 00 00    	call   QWORD PTR [rax+0x4]
    e521:	0e                   	(bad)  
    e522:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
    e525:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
    e528:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
    e52b:	80 00 3f             	add    BYTE PTR [rax],0x3f
    e52e:	1a 3a                	sbb    bh,BYTE PTR [rdx]
    e530:	2a 33                	sub    dh,BYTE PTR [rbx]
    e532:	24 22                	and    al,0x22
    e534:	00 00                	add    BYTE PTR [rax],al
    e536:	00 00                	add    BYTE PTR [rax],al
    e538:	14 00                	adc    al,0x0
    e53a:	00 00                	add    BYTE PTR [rax],al
    e53c:	5c                   	pop    rsp
    e53d:	00 00                	add    BYTE PTR [rax],al
    e53f:	00 70 3f             	add    BYTE PTR [rax+0x3f],dh
    e542:	ff                   	(bad)  
    e543:	ff 10                	call   QWORD PTR [rax]
	...
    e54d:	00 00                	add    BYTE PTR [rax],al
    e54f:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    e552:	00 00                	add    BYTE PTR [rax],al
    e554:	74 00                	je     e556 <__GNU_EH_FRAME_HDR+0x43e>
    e556:	00 00                	add    BYTE PTR [rax],al
    e558:	68 3f ff ff 80       	push   0xffffffff80ffff3f
    e55d:	04 00                	add    al,0x0
	...
    e567:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e56a:	00 00                	add    BYTE PTR [rax],al
    e56c:	8c 00                	mov    WORD PTR [rax],es
    e56e:	00 00                	add    BYTE PTR [rax],al
    e570:	b9 44 ff ff 3a       	mov    ecx,0x3affff44
    e575:	00 00                	add    BYTE PTR [rax],al
    e577:	00 00                	add    BYTE PTR [rax],al
    e579:	45 0e                	rex.RB (bad) 
    e57b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e581:	71 0c                	jno    e58f <__GNU_EH_FRAME_HDR+0x477>
    e583:	07                   	(bad)  
    e584:	08 00                	or     BYTE PTR [rax],al
    e586:	00 00                	add    BYTE PTR [rax],al
    e588:	24 00                	and    al,0x0
    e58a:	00 00                	add    BYTE PTR [rax],al
    e58c:	ac                   	lods   al,BYTE PTR ds:[rsi]
    e58d:	00 00                	add    BYTE PTR [rax],al
    e58f:	00 d3                	add    bl,dl
    e591:	44 ff                	rex.R (bad) 
    e593:	ff 56 01             	call   QWORD PTR [rsi+0x1]
    e596:	00 00                	add    BYTE PTR [rax],al
    e598:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e59b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e5a1:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    e5a5:	48 01 0c 07          	add    QWORD PTR [rdi+rax*1],rcx
    e5a9:	08 00                	or     BYTE PTR [rax],al
    e5ab:	00 00                	add    BYTE PTR [rax],al
    e5ad:	00 00                	add    BYTE PTR [rax],al
    e5af:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e5b2:	00 00                	add    BYTE PTR [rax],al
    e5b4:	d4                   	(bad)  
    e5b5:	00 00                	add    BYTE PTR [rax],al
    e5b7:	00 01                	add    BYTE PTR [rcx],al
    e5b9:	46 ff                	rex.RX (bad) 
    e5bb:	ff f4                	push   rsp
    e5bd:	02 00                	add    al,BYTE PTR [rax]
    e5bf:	00 00                	add    BYTE PTR [rax],al
    e5c1:	45 0e                	rex.RB (bad) 
    e5c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e5c9:	03 eb                	add    ebp,ebx
    e5cb:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    e5ce:	08 00                	or     BYTE PTR [rax],al
    e5d0:	1c 00                	sbb    al,0x0
    e5d2:	00 00                	add    BYTE PTR [rax],al
    e5d4:	f4                   	hlt    
    e5d5:	00 00                	add    BYTE PTR [rax],al
    e5d7:	00 d5                	add    ch,dl
    e5d9:	48 ff                	rex.W (bad) 
    e5db:	ff 13                	call   QWORD PTR [rbx]
    e5dd:	01 00                	add    DWORD PTR [rax],eax
    e5df:	00 00                	add    BYTE PTR [rax],al
    e5e1:	45 0e                	rex.RB (bad) 
    e5e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e5e9:	03 0a                	add    ecx,DWORD PTR [rdx]
    e5eb:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    e5ee:	08 00                	or     BYTE PTR [rax],al
    e5f0:	1c 00                	sbb    al,0x0
    e5f2:	00 00                	add    BYTE PTR [rax],al
    e5f4:	14 01                	adc    al,0x1
    e5f6:	00 00                	add    BYTE PTR [rax],al
    e5f8:	c8 49 ff ff          	enter  0xff49,0xff
    e5fc:	ae                   	scas   al,BYTE PTR es:[rdi]
    e5fd:	00 00                	add    BYTE PTR [rax],al
    e5ff:	00 00                	add    BYTE PTR [rax],al
    e601:	45 0e                	rex.RB (bad) 
    e603:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e609:	02 a5 0c 07 08 00    	add    ah,BYTE PTR [rbp+0x8070c]
    e60f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e612:	00 00                	add    BYTE PTR [rax],al
    e614:	34 01                	xor    al,0x1
    e616:	00 00                	add    BYTE PTR [rax],al
    e618:	56                   	push   rsi
    e619:	4a ff                	rex.WX (bad) 
    e61b:	ff a6 00 00 00 00    	jmp    QWORD PTR [rsi+0x0]
    e621:	45 0e                	rex.RB (bad) 
    e623:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e629:	02 9d 0c 07 08 00    	add    bl,BYTE PTR [rbp+0x8070c]
    e62f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e632:	00 00                	add    BYTE PTR [rax],al
    e634:	54                   	push   rsp
    e635:	01 00                	add    DWORD PTR [rax],eax
    e637:	00 dc                	add    ah,bl
    e639:	4a ff                	rex.WX (bad) 
    e63b:	ff 95 00 00 00 00    	call   QWORD PTR [rbp+0x0]
    e641:	45 0e                	rex.RB (bad) 
    e643:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e649:	02 8c 0c 07 08 00 00 	add    cl,BYTE PTR [rsp+rcx*1+0x807]
    e650:	1c 00                	sbb    al,0x0
    e652:	00 00                	add    BYTE PTR [rax],al
    e654:	74 01                	je     e657 <__GNU_EH_FRAME_HDR+0x53f>
    e656:	00 00                	add    BYTE PTR [rax],al
    e658:	51                   	push   rcx
    e659:	4b ff                	rex.WXB (bad) 
    e65b:	ff 94 00 00 00 00 45 	call   QWORD PTR [rax+rax*1+0x45000000]
    e662:	0e                   	(bad)  
    e663:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e669:	02 8b 0c 07 08 00    	add    cl,BYTE PTR [rbx+0x8070c]
    e66f:	00 28                	add    BYTE PTR [rax],ch
    e671:	00 00                	add    BYTE PTR [rax],al
    e673:	00 94 01 00 00 c5 4b 	add    BYTE PTR [rcx+rax*1+0x4bc50000],dl
    e67a:	ff                   	(bad)  
    e67b:	ff cc                	dec    esp
    e67d:	01 00                	add    DWORD PTR [rax],eax
    e67f:	00 00                	add    BYTE PTR [rax],al
    e681:	45 0e                	rex.RB (bad) 
    e683:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e689:	4d 8f 03             	rex.WRB pop QWORD PTR [r11]
    e68c:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
    e693:	07                   	(bad)  
    e694:	03 b6 01 0c 07 08    	add    esi,DWORD PTR [rsi+0x8070c01]
    e69a:	00 00                	add    BYTE PTR [rax],al
    e69c:	20 00                	and    BYTE PTR [rax],al
    e69e:	00 00                	add    BYTE PTR [rax],al
    e6a0:	c0 01 00             	rol    BYTE PTR [rcx],0x0
    e6a3:	00 65 4d             	add    BYTE PTR [rbp+0x4d],ah
    e6a6:	ff                   	(bad)  
    e6a7:	ff d4                	call   rsp
    e6a9:	00 00                	add    BYTE PTR [rax],al
    e6ab:	00 00                	add    BYTE PTR [rax],al
    e6ad:	45 0e                	rex.RB (bad) 
    e6af:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e6b5:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    e6b9:	c6                   	(bad)  
    e6ba:	0c 07                	or     al,0x7
    e6bc:	08 00                	or     BYTE PTR [rax],al
    e6be:	00 00                	add    BYTE PTR [rax],al
    e6c0:	20 00                	and    BYTE PTR [rax],al
    e6c2:	00 00                	add    BYTE PTR [rax],al
    e6c4:	e4 01                	in     al,0x1
    e6c6:	00 00                	add    BYTE PTR [rax],al
    e6c8:	15 4e ff ff c7       	adc    eax,0xc7ffff4e
    e6cd:	00 00                	add    BYTE PTR [rax],al
    e6cf:	00 00                	add    BYTE PTR [rax],al
    e6d1:	45 0e                	rex.RB (bad) 
    e6d3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e6d9:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    e6dd:	b9 0c 07 08 00       	mov    ecx,0x8070c
    e6e2:	00 00                	add    BYTE PTR [rax],al
    e6e4:	1c 00                	sbb    al,0x0
    e6e6:	00 00                	add    BYTE PTR [rax],al
    e6e8:	08 02                	or     BYTE PTR [rdx],al
    e6ea:	00 00                	add    BYTE PTR [rax],al
    e6ec:	b8 4e ff ff 53       	mov    eax,0x53ffff4e
    e6f1:	00 00                	add    BYTE PTR [rax],al
    e6f3:	00 00                	add    BYTE PTR [rax],al
    e6f5:	45 0e                	rex.RB (bad) 
    e6f7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e6fd:	02 4a 0c             	add    cl,BYTE PTR [rdx+0xc]
    e700:	07                   	(bad)  
    e701:	08 00                	or     BYTE PTR [rax],al
    e703:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e706:	00 00                	add    BYTE PTR [rax],al
    e708:	28 02                	sub    BYTE PTR [rdx],al
    e70a:	00 00                	add    BYTE PTR [rax],al
    e70c:	eb 4e                	jmp    e75c <__GNU_EH_FRAME_HDR+0x644>
    e70e:	ff                   	(bad)  
    e70f:	ff 33                	push   QWORD PTR [rbx]
    e711:	00 00                	add    BYTE PTR [rax],al
    e713:	00 00                	add    BYTE PTR [rax],al
    e715:	45 0e                	rex.RB (bad) 
    e717:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e71d:	6a 0c                	push   0xc
    e71f:	07                   	(bad)  
    e720:	08 00                	or     BYTE PTR [rax],al
    e722:	00 00                	add    BYTE PTR [rax],al
    e724:	1c 00                	sbb    al,0x0
    e726:	00 00                	add    BYTE PTR [rax],al
    e728:	48 02 00             	rex.W add al,BYTE PTR [rax]
    e72b:	00 fe                	add    dh,bh
    e72d:	4e ff                	rex.WRX (bad) 
    e72f:	ff 21                	jmp    QWORD PTR [rcx]
    e731:	00 00                	add    BYTE PTR [rax],al
    e733:	00 00                	add    BYTE PTR [rax],al
    e735:	45 0e                	rex.RB (bad) 
    e737:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e73d:	58                   	pop    rax
    e73e:	0c 07                	or     al,0x7
    e740:	08 00                	or     BYTE PTR [rax],al
    e742:	00 00                	add    BYTE PTR [rax],al
    e744:	20 00                	and    BYTE PTR [rax],al
    e746:	00 00                	add    BYTE PTR [rax],al
    e748:	68 02 00 00 ff       	push   0xffffffffff000002
    e74d:	4e ff                	rex.WRX (bad) 
    e74f:	ff 68 00             	jmp    FWORD PTR [rax+0x0]
    e752:	00 00                	add    BYTE PTR [rax],al
    e754:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e757:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e75d:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    e761:	5a                   	pop    rdx
    e762:	0c 07                	or     al,0x7
    e764:	08 00                	or     BYTE PTR [rax],al
    e766:	00 00                	add    BYTE PTR [rax],al
    e768:	1c 00                	sbb    al,0x0
    e76a:	00 00                	add    BYTE PTR [rax],al
    e76c:	8c 02                	mov    WORD PTR [rdx],es
    e76e:	00 00                	add    BYTE PTR [rax],al
    e770:	43                   	rex.XB
    e771:	4f ff                	rex.WRXB (bad) 
    e773:	ff 25 04 00 00 00    	jmp    QWORD PTR [rip+0x4]        # e77d <__GNU_EH_FRAME_HDR+0x665>
    e779:	45 0e                	rex.RB (bad) 
    e77b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e781:	03 1c 04             	add    ebx,DWORD PTR [rsp+rax*1]
    e784:	0c 07                	or     al,0x7
    e786:	08 00                	or     BYTE PTR [rax],al
    e788:	1c 00                	sbb    al,0x0
    e78a:	00 00                	add    BYTE PTR [rax],al
    e78c:	ac                   	lods   al,BYTE PTR ds:[rsi]
    e78d:	02 00                	add    al,BYTE PTR [rax]
    e78f:	00 48 53             	add    BYTE PTR [rax+0x53],cl
    e792:	ff                   	(bad)  
    e793:	ff 5d 01             	call   FWORD PTR [rbp+0x1]
    e796:	00 00                	add    BYTE PTR [rax],al
    e798:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e79b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e7a1:	03 54 01 0c          	add    edx,DWORD PTR [rcx+rax*1+0xc]
    e7a5:	07                   	(bad)  
    e7a6:	08 00                	or     BYTE PTR [rax],al
    e7a8:	1c 00                	sbb    al,0x0
    e7aa:	00 00                	add    BYTE PTR [rax],al
    e7ac:	cc                   	int3   
    e7ad:	02 00                	add    al,BYTE PTR [rax]
    e7af:	00 85 54 ff ff 44    	add    BYTE PTR [rbp+0x44ffff54],al
    e7b5:	08 00                	or     BYTE PTR [rax],al
    e7b7:	00 00                	add    BYTE PTR [rax],al
    e7b9:	45 0e                	rex.RB (bad) 
    e7bb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e7c1:	03 3b                	add    edi,DWORD PTR [rbx]
    e7c3:	08 0c 07             	or     BYTE PTR [rdi+rax*1],cl
    e7c6:	08 00                	or     BYTE PTR [rax],al
    e7c8:	24 00                	and    al,0x0
    e7ca:	00 00                	add    BYTE PTR [rax],al
    e7cc:	ec                   	in     al,dx
    e7cd:	02 00                	add    al,BYTE PTR [rax]
    e7cf:	00 a9 5c ff ff bc    	add    BYTE PTR [rcx-0x430000a4],ch
    e7d5:	08 00                	or     BYTE PTR [rax],al
    e7d7:	00 00                	add    BYTE PTR [rax],al
    e7d9:	45 0e                	rex.RB (bad) 
    e7db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e7e1:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    e7e5:	ab                   	stos   DWORD PTR es:[rdi],eax
    e7e6:	08 0c 07             	or     BYTE PTR [rdi+rax*1],cl
    e7e9:	08 00                	or     BYTE PTR [rax],al
    e7eb:	00 00                	add    BYTE PTR [rax],al
    e7ed:	00 00                	add    BYTE PTR [rax],al
    e7ef:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e7f2:	00 00                	add    BYTE PTR [rax],al
    e7f4:	14 03                	adc    al,0x3
    e7f6:	00 00                	add    BYTE PTR [rax],al
    e7f8:	3d 65 ff ff 55       	cmp    eax,0x55ffff65
    e7fd:	01 00                	add    DWORD PTR [rax],eax
    e7ff:	00 00                	add    BYTE PTR [rax],al
    e801:	45 0e                	rex.RB (bad) 
    e803:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e809:	03 4c 01 0c          	add    ecx,DWORD PTR [rcx+rax*1+0xc]
    e80d:	07                   	(bad)  
    e80e:	08 00                	or     BYTE PTR [rax],al
    e810:	1c 00                	sbb    al,0x0
    e812:	00 00                	add    BYTE PTR [rax],al
    e814:	34 03                	xor    al,0x3
    e816:	00 00                	add    BYTE PTR [rax],al
    e818:	72 66                	jb     e880 <__GNU_EH_FRAME_HDR+0x768>
    e81a:	ff                   	(bad)  
    e81b:	ff                   	(bad)  
    e81c:	ff 00                	inc    DWORD PTR [rax]
    e81e:	00 00                	add    BYTE PTR [rax],al
    e820:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e823:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e829:	02 f6                	add    dh,dh
    e82b:	0c 07                	or     al,0x7
    e82d:	08 00                	or     BYTE PTR [rax],al
    e82f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e832:	00 00                	add    BYTE PTR [rax],al
    e834:	54                   	push   rsp
    e835:	03 00                	add    eax,DWORD PTR [rax]
    e837:	00 51 67             	add    BYTE PTR [rcx+0x67],dl
    e83a:	ff                   	(bad)  
    e83b:	ff                   	(bad)  
    e83c:	ec                   	in     al,dx
    e83d:	00 00                	add    BYTE PTR [rax],al
    e83f:	00 00                	add    BYTE PTR [rax],al
    e841:	45 0e                	rex.RB (bad) 
    e843:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e849:	02 e3                	add    ah,bl
    e84b:	0c 07                	or     al,0x7
    e84d:	08 00                	or     BYTE PTR [rax],al
    e84f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e852:	00 00                	add    BYTE PTR [rax],al
    e854:	74 03                	je     e859 <__GNU_EH_FRAME_HDR+0x741>
    e856:	00 00                	add    BYTE PTR [rax],al
    e858:	1d 68 ff ff b2       	sbb    eax,0xb2ffff68
    e85d:	03 00                	add    eax,DWORD PTR [rax]
    e85f:	00 00                	add    BYTE PTR [rax],al
    e861:	45 0e                	rex.RB (bad) 
    e863:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e869:	03 a9 03 0c 07 08    	add    ebp,DWORD PTR [rcx+0x8070c03]
    e86f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e872:	00 00                	add    BYTE PTR [rax],al
    e874:	94                   	xchg   esp,eax
    e875:	03 00                	add    eax,DWORD PTR [rax]
    e877:	00 af 6b ff ff 83    	add    BYTE PTR [rdi-0x7c000095],ch
    e87d:	00 00                	add    BYTE PTR [rax],al
    e87f:	00 00                	add    BYTE PTR [rax],al
    e881:	45 0e                	rex.RB (bad) 
    e883:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e889:	02 7a 0c             	add    bh,BYTE PTR [rdx+0xc]
    e88c:	07                   	(bad)  
    e88d:	08 00                	or     BYTE PTR [rax],al
    e88f:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    e892:	00 00                	add    BYTE PTR [rax],al
    e894:	b4 03                	mov    ah,0x3
    e896:	00 00                	add    BYTE PTR [rax],al
    e898:	12 6c ff ff          	adc    ch,BYTE PTR [rdi+rdi*8-0x1]
    e89c:	2a 02                	sub    al,BYTE PTR [rdx]
    e89e:	00 00                	add    BYTE PTR [rax],al
    e8a0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e8a3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e8a9:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    e8ad:	19 02                	sbb    DWORD PTR [rdx],eax
    e8af:	0c 07                	or     al,0x7
    e8b1:	08 00                	or     BYTE PTR [rax],al
    e8b3:	00 00                	add    BYTE PTR [rax],al
    e8b5:	00 00                	add    BYTE PTR [rax],al
    e8b7:	00 20                	add    BYTE PTR [rax],ah
    e8b9:	00 00                	add    BYTE PTR [rax],al
    e8bb:	00 dc                	add    ah,bl
    e8bd:	03 00                	add    eax,DWORD PTR [rax]
    e8bf:	00 14 6e             	add    BYTE PTR [rsi+rbp*2],dl
    e8c2:	ff                   	(bad)  
    e8c3:	ff                   	(bad)  
    e8c4:	3d 02 00 00 00       	cmp    eax,0x2
    e8c9:	45 0e                	rex.RB (bad) 
    e8cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e8d1:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    e8d5:	2f                   	(bad)  
    e8d6:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    e8d9:	08 00                	or     BYTE PTR [rax],al
    e8db:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e8de:	00 00                	add    BYTE PTR [rax],al
    e8e0:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    e8e3:	00 2d 70 ff ff 66    	add    BYTE PTR [rip+0x66ffff70],ch        # 6700e859 <_end+0x66ed1819>
    e8e9:	00 00                	add    BYTE PTR [rax],al
    e8eb:	00 00                	add    BYTE PTR [rax],al
    e8ed:	45 0e                	rex.RB (bad) 
    e8ef:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e8f5:	02 5d 0c             	add    bl,BYTE PTR [rbp+0xc]
    e8f8:	07                   	(bad)  
    e8f9:	08 00                	or     BYTE PTR [rax],al
    e8fb:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e8fe:	00 00                	add    BYTE PTR [rax],al
    e900:	20 04 00             	and    BYTE PTR [rax+rax*1],al
    e903:	00 73 70             	add    BYTE PTR [rbx+0x70],dh
    e906:	ff                   	(bad)  
    e907:	ff 17                	call   QWORD PTR [rdi]
    e909:	00 00                	add    BYTE PTR [rax],al
    e90b:	00 00                	add    BYTE PTR [rax],al
    e90d:	45 0e                	rex.RB (bad) 
    e90f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e915:	4e 0c 07             	rex.WRX or al,0x7
    e918:	08 00                	or     BYTE PTR [rax],al
    e91a:	00 00                	add    BYTE PTR [rax],al
    e91c:	20 00                	and    BYTE PTR [rax],al
    e91e:	00 00                	add    BYTE PTR [rax],al
    e920:	40 04 00             	rex add al,0x0
    e923:	00 6a 70             	add    BYTE PTR [rdx+0x70],ch
    e926:	ff                   	(bad)  
    e927:	ff 51 00             	call   QWORD PTR [rcx+0x0]
    e92a:	00 00                	add    BYTE PTR [rax],al
    e92c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e92f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e935:	02 48 0c             	add    cl,BYTE PTR [rax+0xc]
    e938:	07                   	(bad)  
    e939:	08 00                	or     BYTE PTR [rax],al
    e93b:	00 00                	add    BYTE PTR [rax],al
    e93d:	00 00                	add    BYTE PTR [rax],al
    e93f:	00 20                	add    BYTE PTR [rax],ah
    e941:	00 00                	add    BYTE PTR [rax],al
    e943:	00 64 04 00          	add    BYTE PTR [rsp+rax*1+0x0],ah
    e947:	00 97 70 ff ff 3d    	add    BYTE PTR [rdi+0x3dffff70],dl
    e94d:	06                   	(bad)  
    e94e:	00 00                	add    BYTE PTR [rax],al
    e950:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e953:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e959:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    e95d:	2f                   	(bad)  
    e95e:	06                   	(bad)  
    e95f:	0c 07                	or     al,0x7
    e961:	08 00                	or     BYTE PTR [rax],al
    e963:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e966:	00 00                	add    BYTE PTR [rax],al
    e968:	88 04 00             	mov    BYTE PTR [rax+rax*1],al
    e96b:	00 b0 76 ff ff 1a    	add    BYTE PTR [rax+0x1affff76],dh
    e971:	00 00                	add    BYTE PTR [rax],al
    e973:	00 00                	add    BYTE PTR [rax],al
    e975:	45 0e                	rex.RB (bad) 
    e977:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e97d:	51                   	push   rcx
    e97e:	0c 07                	or     al,0x7
    e980:	08 00                	or     BYTE PTR [rax],al
    e982:	00 00                	add    BYTE PTR [rax],al
    e984:	1c 00                	sbb    al,0x0
    e986:	00 00                	add    BYTE PTR [rax],al
    e988:	a8 04                	test   al,0x4
    e98a:	00 00                	add    BYTE PTR [rax],al
    e98c:	aa                   	stos   BYTE PTR es:[rdi],al
    e98d:	76 ff                	jbe    e98e <__GNU_EH_FRAME_HDR+0x876>
    e98f:	ff 29                	jmp    FWORD PTR [rcx]
    e991:	00 00                	add    BYTE PTR [rax],al
    e993:	00 00                	add    BYTE PTR [rax],al
    e995:	45 0e                	rex.RB (bad) 
    e997:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e99d:	60                   	(bad)  
    e99e:	0c 07                	or     al,0x7
    e9a0:	08 00                	or     BYTE PTR [rax],al
    e9a2:	00 00                	add    BYTE PTR [rax],al
    e9a4:	1c 00                	sbb    al,0x0
    e9a6:	00 00                	add    BYTE PTR [rax],al
    e9a8:	c8 04 00 00          	enter  0x4,0x0
    e9ac:	b3 76                	mov    bl,0x76
    e9ae:	ff                   	(bad)  
    e9af:	ff 30                	push   QWORD PTR [rax]
    e9b1:	00 00                	add    BYTE PTR [rax],al
    e9b3:	00 00                	add    BYTE PTR [rax],al
    e9b5:	45 0e                	rex.RB (bad) 
    e9b7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e9bd:	67 0c 07             	addr32 or al,0x7
    e9c0:	08 00                	or     BYTE PTR [rax],al
    e9c2:	00 00                	add    BYTE PTR [rax],al
    e9c4:	18 00                	sbb    BYTE PTR [rax],al
    e9c6:	00 00                	add    BYTE PTR [rax],al
    e9c8:	e8 04 00 00 c3       	call   ffffffffc300e9d1 <_end+0xffffffffc2ed1991>
    e9cd:	76 ff                	jbe    e9ce <__GNU_EH_FRAME_HDR+0x8b6>
    e9cf:	ff 37                	push   QWORD PTR [rdi]
    e9d1:	00 00                	add    BYTE PTR [rax],al
    e9d3:	00 00                	add    BYTE PTR [rax],al
    e9d5:	45 0e                	rex.RB (bad) 
    e9d7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e9dd:	00 00                	add    BYTE PTR [rax],al
    e9df:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e9e2:	00 00                	add    BYTE PTR [rax],al
    e9e4:	04 05                	add    al,0x5
    e9e6:	00 00                	add    BYTE PTR [rax],al
    e9e8:	de 76 ff             	fidiv  WORD PTR [rsi-0x1]
    e9eb:	ff 51 01             	call   QWORD PTR [rcx+0x1]
    e9ee:	00 00                	add    BYTE PTR [rax],al
    e9f0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e9f3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e9f9:	03 48 01             	add    ecx,DWORD PTR [rax+0x1]
    e9fc:	0c 07                	or     al,0x7
    e9fe:	08 00                	or     BYTE PTR [rax],al
    ea00:	1c 00                	sbb    al,0x0
    ea02:	00 00                	add    BYTE PTR [rax],al
    ea04:	24 05                	and    al,0x5
    ea06:	00 00                	add    BYTE PTR [rax],al
    ea08:	0f 78 ff             	vmread rdi,rdi
    ea0b:	ff 60 01             	jmp    QWORD PTR [rax+0x1]
    ea0e:	00 00                	add    BYTE PTR [rax],al
    ea10:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ea13:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea19:	03 57 01             	add    edx,DWORD PTR [rdi+0x1]
    ea1c:	0c 07                	or     al,0x7
    ea1e:	08 00                	or     BYTE PTR [rax],al
    ea20:	1c 00                	sbb    al,0x0
    ea22:	00 00                	add    BYTE PTR [rax],al
    ea24:	44 05 00 00 4f 79    	rex.R add eax,0x794f0000
    ea2a:	ff                   	(bad)  
    ea2b:	ff 61 00             	jmp    QWORD PTR [rcx+0x0]
    ea2e:	00 00                	add    BYTE PTR [rax],al
    ea30:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ea33:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea39:	02 58 0c             	add    bl,BYTE PTR [rax+0xc]
    ea3c:	07                   	(bad)  
    ea3d:	08 00                	or     BYTE PTR [rax],al
    ea3f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ea42:	00 00                	add    BYTE PTR [rax],al
    ea44:	64 05 00 00 90 79    	fs add eax,0x79900000
    ea4a:	ff                   	(bad)  
    ea4b:	ff                   	(bad)  
    ea4c:	39 00                	cmp    DWORD PTR [rax],eax
    ea4e:	00 00                	add    BYTE PTR [rax],al
    ea50:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ea53:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea59:	70 0c                	jo     ea67 <__GNU_EH_FRAME_HDR+0x94f>
    ea5b:	07                   	(bad)  
    ea5c:	08 00                	or     BYTE PTR [rax],al
    ea5e:	00 00                	add    BYTE PTR [rax],al
    ea60:	1c 00                	sbb    al,0x0
    ea62:	00 00                	add    BYTE PTR [rax],al
    ea64:	84 05 00 00 a9 79    	test   BYTE PTR [rip+0x79a90000],al        # 79a9ea6a <_end+0x79961a2a>
    ea6a:	ff                   	(bad)  
    ea6b:	ff                   	(bad)  
    ea6c:	be 00 00 00 00       	mov    esi,0x0
    ea71:	45 0e                	rex.RB (bad) 
    ea73:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea79:	02 b5 0c 07 08 00    	add    dh,BYTE PTR [rbp+0x8070c]
    ea7f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ea82:	00 00                	add    BYTE PTR [rax],al
    ea84:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    ea85:	05 00 00 47 7a       	add    eax,0x7a470000
    ea8a:	ff                   	(bad)  
    ea8b:	ff                   	(bad)  
    ea8c:	be 02 00 00 00       	mov    esi,0x2
    ea91:	45 0e                	rex.RB (bad) 
    ea93:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea99:	03 b5 02 0c 07 08    	add    esi,DWORD PTR [rbp+0x8070c02]
    ea9f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eaa2:	00 00                	add    BYTE PTR [rax],al
    eaa4:	c4                   	(bad)  
    eaa5:	05 00 00 e5 7c       	add    eax,0x7ce50000
    eaaa:	ff                   	(bad)  
    eaab:	ff                   	(bad)  
    eaac:	f8                   	clc    
    eaad:	01 00                	add    DWORD PTR [rax],eax
    eaaf:	00 00                	add    BYTE PTR [rax],al
    eab1:	45 0e                	rex.RB (bad) 
    eab3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eab9:	03 ef                	add    ebp,edi
    eabb:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    eabe:	08 00                	or     BYTE PTR [rax],al
    eac0:	1c 00                	sbb    al,0x0
    eac2:	00 00                	add    BYTE PTR [rax],al
    eac4:	e4 05                	in     al,0x5
    eac6:	00 00                	add    BYTE PTR [rax],al
    eac8:	bd 7e ff ff 5a       	mov    ebp,0x5affff7e
    eacd:	00 00                	add    BYTE PTR [rax],al
    eacf:	00 00                	add    BYTE PTR [rax],al
    ead1:	45 0e                	rex.RB (bad) 
    ead3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ead9:	02 51 0c             	add    dl,BYTE PTR [rcx+0xc]
    eadc:	07                   	(bad)  
    eadd:	08 00                	or     BYTE PTR [rax],al
    eadf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eae2:	00 00                	add    BYTE PTR [rax],al
    eae4:	04 06                	add    al,0x6
    eae6:	00 00                	add    BYTE PTR [rax],al
    eae8:	f7 7e ff             	idiv   DWORD PTR [rsi-0x1]
    eaeb:	ff 30                	push   QWORD PTR [rax]
    eaed:	03 00                	add    eax,DWORD PTR [rax]
    eaef:	00 00                	add    BYTE PTR [rax],al
    eaf1:	45 0e                	rex.RB (bad) 
    eaf3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eaf9:	03 27                	add    esp,DWORD PTR [rdi]
    eafb:	03 0c 07             	add    ecx,DWORD PTR [rdi+rax*1]
    eafe:	08 00                	or     BYTE PTR [rax],al
    eb00:	1c 00                	sbb    al,0x0
    eb02:	00 00                	add    BYTE PTR [rax],al
    eb04:	24 06                	and    al,0x6
    eb06:	00 00                	add    BYTE PTR [rax],al
    eb08:	07                   	(bad)  
    eb09:	82                   	(bad)  
    eb0a:	ff                   	(bad)  
    eb0b:	ff 51 04             	call   QWORD PTR [rcx+0x4]
    eb0e:	00 00                	add    BYTE PTR [rax],al
    eb10:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eb13:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb19:	4a 8c 03             	rex.WX mov WORD PTR [rbx],es
    eb1c:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
    eb20:	18 00                	sbb    BYTE PTR [rax],al
    eb22:	00 00                	add    BYTE PTR [rax],al
    eb24:	44 06                	rex.R (bad) 
    eb26:	00 00                	add    BYTE PTR [rax],al
    eb28:	38 86 ff ff 2a 00    	cmp    BYTE PTR [rsi+0x2affff],al
    eb2e:	00 00                	add    BYTE PTR [rax],al
    eb30:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eb33:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb39:	00 00                	add    BYTE PTR [rax],al
    eb3b:	00 20                	add    BYTE PTR [rax],ah
    eb3d:	00 00                	add    BYTE PTR [rax],al
    eb3f:	00 60 06             	add    BYTE PTR [rax+0x6],ah
    eb42:	00 00                	add    BYTE PTR [rax],al
    eb44:	46 86 ff             	rex.RX xchg dil,r15b
    eb47:	ff b2 01 00 00 00    	push   QWORD PTR [rdx+0x1]
    eb4d:	45 0e                	rex.RB (bad) 
    eb4f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb55:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    eb59:	a1 01 0c 07 08 00 00 	movabs eax,ds:0x1c000008070c01
    eb60:	1c 00 
    eb62:	00 00                	add    BYTE PTR [rax],al
    eb64:	84 06                	test   BYTE PTR [rsi],al
    eb66:	00 00                	add    BYTE PTR [rax],al
    eb68:	d4                   	(bad)  
    eb69:	87 ff                	xchg   edi,edi
    eb6b:	ff 17                	call   QWORD PTR [rdi]
    eb6d:	00 00                	add    BYTE PTR [rax],al
    eb6f:	00 00                	add    BYTE PTR [rax],al
    eb71:	45 0e                	rex.RB (bad) 
    eb73:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb79:	4e 0c 07             	rex.WRX or al,0x7
    eb7c:	08 00                	or     BYTE PTR [rax],al
    eb7e:	00 00                	add    BYTE PTR [rax],al
    eb80:	1c 00                	sbb    al,0x0
    eb82:	00 00                	add    BYTE PTR [rax],al
    eb84:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    eb85:	06                   	(bad)  
    eb86:	00 00                	add    BYTE PTR [rax],al
    eb88:	cb                   	retf   
    eb89:	87 ff                	xchg   edi,edi
    eb8b:	ff 4f 00             	dec    DWORD PTR [rdi+0x0]
    eb8e:	00 00                	add    BYTE PTR [rax],al
    eb90:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eb93:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb99:	02 46 0c             	add    al,BYTE PTR [rsi+0xc]
    eb9c:	07                   	(bad)  
    eb9d:	08 00                	or     BYTE PTR [rax],al
    eb9f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eba2:	00 00                	add    BYTE PTR [rax],al
    eba4:	c4                   	(bad)  
    eba5:	06                   	(bad)  
    eba6:	00 00                	add    BYTE PTR [rax],al
    eba8:	fa                   	cli    
    eba9:	87 ff                	xchg   edi,edi
    ebab:	ff 4d 00             	dec    DWORD PTR [rbp+0x0]
    ebae:	00 00                	add    BYTE PTR [rax],al
    ebb0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ebb3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ebb9:	02 44 0c 07          	add    al,BYTE PTR [rsp+rcx*1+0x7]
    ebbd:	08 00                	or     BYTE PTR [rax],al
    ebbf:	00 18                	add    BYTE PTR [rax],bl
    ebc1:	00 00                	add    BYTE PTR [rax],al
    ebc3:	00 e4                	add    ah,ah
    ebc5:	06                   	(bad)  
    ebc6:	00 00                	add    BYTE PTR [rax],al
    ebc8:	27                   	(bad)  
    ebc9:	88 ff                	mov    bh,bh
    ebcb:	ff 77 01             	push   QWORD PTR [rdi+0x1]
    ebce:	00 00                	add    BYTE PTR [rax],al
    ebd0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ebd3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ebd9:	00 00                	add    BYTE PTR [rax],al
    ebdb:	00 20                	add    BYTE PTR [rax],ah
    ebdd:	00 00                	add    BYTE PTR [rax],al
    ebdf:	00 00                	add    BYTE PTR [rax],al
    ebe1:	07                   	(bad)  
    ebe2:	00 00                	add    BYTE PTR [rax],al
    ebe4:	82                   	(bad)  
    ebe5:	89 ff                	mov    edi,edi
    ebe7:	ff 9c 00 00 00 00 45 	call   FWORD PTR [rax+rax*1+0x45000000]
    ebee:	0e                   	(bad)  
    ebef:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ebf5:	02 93 0c 07 08 00    	add    dl,BYTE PTR [rbx+0x8070c]
    ebfb:	00 00                	add    BYTE PTR [rax],al
    ebfd:	00 00                	add    BYTE PTR [rax],al
    ebff:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ec02:	00 00                	add    BYTE PTR [rax],al
    ec04:	24 07                	and    al,0x7
    ec06:	00 00                	add    BYTE PTR [rax],al
    ec08:	fa                   	cli    
    ec09:	89 ff                	mov    edi,edi
    ec0b:	ff                   	(bad)  
    ec0c:	ee                   	out    dx,al
    ec0d:	01 00                	add    DWORD PTR [rax],eax
    ec0f:	00 00                	add    BYTE PTR [rax],al
    ec11:	45 0e                	rex.RB (bad) 
    ec13:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec19:	03 e5                	add    esp,ebp
    ec1b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ec1e:	08 00                	or     BYTE PTR [rax],al
    ec20:	1c 00                	sbb    al,0x0
    ec22:	00 00                	add    BYTE PTR [rax],al
    ec24:	44 07                	rex.R (bad) 
    ec26:	00 00                	add    BYTE PTR [rax],al
    ec28:	c8 8b ff ff          	enter  0xff8b,0xff
    ec2c:	e8 01 00 00 00       	call   ec32 <__GNU_EH_FRAME_HDR+0xb1a>
    ec31:	45 0e                	rex.RB (bad) 
    ec33:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec39:	03 df                	add    ebx,edi
    ec3b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ec3e:	08 00                	or     BYTE PTR [rax],al
    ec40:	1c 00                	sbb    al,0x0
    ec42:	00 00                	add    BYTE PTR [rax],al
    ec44:	64 07                	fs (bad) 
    ec46:	00 00                	add    BYTE PTR [rax],al
    ec48:	90                   	nop
    ec49:	8d                   	(bad)  
    ec4a:	ff                   	(bad)  
    ec4b:	ff 6c 00 00          	jmp    FWORD PTR [rax+rax*1+0x0]
    ec4f:	00 00                	add    BYTE PTR [rax],al
    ec51:	45 0e                	rex.RB (bad) 
    ec53:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec59:	02 63 0c             	add    ah,BYTE PTR [rbx+0xc]
    ec5c:	07                   	(bad)  
    ec5d:	08 00                	or     BYTE PTR [rax],al
    ec5f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ec62:	00 00                	add    BYTE PTR [rax],al
    ec64:	84 07                	test   BYTE PTR [rdi],al
    ec66:	00 00                	add    BYTE PTR [rax],al
    ec68:	dc 8d ff ff 72 00    	fmul   QWORD PTR [rbp+0x72ffff]
    ec6e:	00 00                	add    BYTE PTR [rax],al
    ec70:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ec73:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec79:	02 69 0c             	add    ch,BYTE PTR [rcx+0xc]
    ec7c:	07                   	(bad)  
    ec7d:	08 00                	or     BYTE PTR [rax],al
    ec7f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ec82:	00 00                	add    BYTE PTR [rax],al
    ec84:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    ec85:	07                   	(bad)  
    ec86:	00 00                	add    BYTE PTR [rax],al
    ec88:	2e 8e ff             	cs mov ?,edi
    ec8b:	ff 11                	call   QWORD PTR [rcx]
    ec8d:	01 00                	add    DWORD PTR [rax],eax
    ec8f:	00 00                	add    BYTE PTR [rax],al
    ec91:	45 0e                	rex.RB (bad) 
    ec93:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec99:	03 08                	add    ecx,DWORD PTR [rax]
    ec9b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ec9e:	08 00                	or     BYTE PTR [rax],al
    eca0:	1c 00                	sbb    al,0x0
    eca2:	00 00                	add    BYTE PTR [rax],al
    eca4:	c4                   	(bad)  
    eca5:	07                   	(bad)  
    eca6:	00 00                	add    BYTE PTR [rax],al
    eca8:	1f                   	(bad)  
    eca9:	8f                   	(bad)  
    ecaa:	ff                   	(bad)  
    ecab:	ff 5c 00 00          	call   FWORD PTR [rax+rax*1+0x0]
    ecaf:	00 00                	add    BYTE PTR [rax],al
    ecb1:	45 0e                	rex.RB (bad) 
    ecb3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ecb9:	02 53 0c             	add    dl,BYTE PTR [rbx+0xc]
    ecbc:	07                   	(bad)  
    ecbd:	08 00                	or     BYTE PTR [rax],al
    ecbf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ecc2:	00 00                	add    BYTE PTR [rax],al
    ecc4:	e4 07                	in     al,0x7
    ecc6:	00 00                	add    BYTE PTR [rax],al
    ecc8:	5b                   	pop    rbx
    ecc9:	8f                   	(bad)  
    ecca:	ff                   	(bad)  
    eccb:	ff                   	(bad)  
    eccc:	3e 00 00             	ds add BYTE PTR [rax],al
    eccf:	00 00                	add    BYTE PTR [rax],al
    ecd1:	45 0e                	rex.RB (bad) 
    ecd3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ecd9:	75 0c                	jne    ece7 <__GNU_EH_FRAME_HDR+0xbcf>
    ecdb:	07                   	(bad)  
    ecdc:	08 00                	or     BYTE PTR [rax],al
    ecde:	00 00                	add    BYTE PTR [rax],al
    ece0:	1c 00                	sbb    al,0x0
    ece2:	00 00                	add    BYTE PTR [rax],al
    ece4:	04 08                	add    al,0x8
    ece6:	00 00                	add    BYTE PTR [rax],al
    ece8:	79 8f                	jns    ec79 <__GNU_EH_FRAME_HDR+0xb61>
    ecea:	ff                   	(bad)  
    eceb:	ff 86 00 00 00 00    	inc    DWORD PTR [rsi+0x0]
    ecf1:	45 0e                	rex.RB (bad) 
    ecf3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ecf9:	02 7d 0c             	add    bh,BYTE PTR [rbp+0xc]
    ecfc:	07                   	(bad)  
    ecfd:	08 00                	or     BYTE PTR [rax],al
    ecff:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ed02:	00 00                	add    BYTE PTR [rax],al
    ed04:	24 08                	and    al,0x8
    ed06:	00 00                	add    BYTE PTR [rax],al
    ed08:	df 8f ff ff df 00    	fisttp WORD PTR [rdi+0xdfffff]
    ed0e:	00 00                	add    BYTE PTR [rax],al
    ed10:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ed13:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed19:	02 d6                	add    dl,dh
    ed1b:	0c 07                	or     al,0x7
    ed1d:	08 00                	or     BYTE PTR [rax],al
    ed1f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ed22:	00 00                	add    BYTE PTR [rax],al
    ed24:	44 08 00             	or     BYTE PTR [rax],r8b
    ed27:	00 9e 90 ff ff 74    	add    BYTE PTR [rsi+0x74ffff90],bl
    ed2d:	00 00                	add    BYTE PTR [rax],al
    ed2f:	00 00                	add    BYTE PTR [rax],al
    ed31:	45 0e                	rex.RB (bad) 
    ed33:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed39:	02 6b 0c             	add    ch,BYTE PTR [rbx+0xc]
    ed3c:	07                   	(bad)  
    ed3d:	08 00                	or     BYTE PTR [rax],al
    ed3f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ed42:	00 00                	add    BYTE PTR [rax],al
    ed44:	64 08 00             	or     BYTE PTR fs:[rax],al
    ed47:	00 f2                	add    dl,dh
    ed49:	90                   	nop
    ed4a:	ff                   	(bad)  
    ed4b:	ff 9c 00 00 00 00 45 	call   FWORD PTR [rax+rax*1+0x45000000]
    ed52:	0e                   	(bad)  
    ed53:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed59:	02 93 0c 07 08 00    	add    dl,BYTE PTR [rbx+0x8070c]
    ed5f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ed62:	00 00                	add    BYTE PTR [rax],al
    ed64:	84 08                	test   BYTE PTR [rax],cl
    ed66:	00 00                	add    BYTE PTR [rax],al
    ed68:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ed69:	91                   	xchg   ecx,eax
    ed6a:	ff                   	(bad)  
    ed6b:	ff 29                	jmp    FWORD PTR [rcx]
    ed6d:	00 00                	add    BYTE PTR [rax],al
    ed6f:	00 00                	add    BYTE PTR [rax],al
    ed71:	45 0e                	rex.RB (bad) 
    ed73:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed79:	60                   	(bad)  
    ed7a:	0c 07                	or     al,0x7
    ed7c:	08 00                	or     BYTE PTR [rax],al
    ed7e:	00 00                	add    BYTE PTR [rax],al
    ed80:	1c 00                	sbb    al,0x0
    ed82:	00 00                	add    BYTE PTR [rax],al
    ed84:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    ed85:	08 00                	or     BYTE PTR [rax],al
    ed87:	00 77 91             	add    BYTE PTR [rdi-0x6f],dh
    ed8a:	ff                   	(bad)  
    ed8b:	ff 29                	jmp    FWORD PTR [rcx]
    ed8d:	00 00                	add    BYTE PTR [rax],al
    ed8f:	00 00                	add    BYTE PTR [rax],al
    ed91:	45 0e                	rex.RB (bad) 
    ed93:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed99:	60                   	(bad)  
    ed9a:	0c 07                	or     al,0x7
    ed9c:	08 00                	or     BYTE PTR [rax],al
    ed9e:	00 00                	add    BYTE PTR [rax],al
    eda0:	24 00                	and    al,0x0
    eda2:	00 00                	add    BYTE PTR [rax],al
    eda4:	c4                   	(bad)  
    eda5:	08 00                	or     BYTE PTR [rax],al
    eda7:	00 80 91 ff ff 53    	add    BYTE PTR [rax+0x53ffff91],al
    edad:	01 00                	add    DWORD PTR [rax],eax
    edaf:	00 00                	add    BYTE PTR [rax],al
    edb1:	45 0e                	rex.RB (bad) 
    edb3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    edb9:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    edbd:	45 01 0c 07          	add    DWORD PTR [r15+rax*1],r9d
    edc1:	08 00                	or     BYTE PTR [rax],al
    edc3:	00 00                	add    BYTE PTR [rax],al
    edc5:	00 00                	add    BYTE PTR [rax],al
    edc7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    edca:	00 00                	add    BYTE PTR [rax],al
    edcc:	ec                   	in     al,dx
    edcd:	08 00                	or     BYTE PTR [rax],al
    edcf:	00 ab 92 ff ff 13    	add    BYTE PTR [rbx+0x13ffff92],ch
    edd5:	01 00                	add    DWORD PTR [rax],eax
    edd7:	00 00                	add    BYTE PTR [rax],al
    edd9:	45 0e                	rex.RB (bad) 
    eddb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ede1:	03 0a                	add    ecx,DWORD PTR [rdx]
    ede3:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ede6:	08 00                	or     BYTE PTR [rax],al
    ede8:	1c 00                	sbb    al,0x0
    edea:	00 00                	add    BYTE PTR [rax],al
    edec:	0c 09                	or     al,0x9
    edee:	00 00                	add    BYTE PTR [rax],al
    edf0:	9e                   	sahf   
    edf1:	93                   	xchg   ebx,eax
    edf2:	ff                   	(bad)  
    edf3:	ff                   	(bad)  
    edf4:	f9                   	stc    
    edf5:	00 00                	add    BYTE PTR [rax],al
    edf7:	00 00                	add    BYTE PTR [rax],al
    edf9:	45 0e                	rex.RB (bad) 
    edfb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee01:	02 f0                	add    dh,al
    ee03:	0c 07                	or     al,0x7
    ee05:	08 00                	or     BYTE PTR [rax],al
    ee07:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ee0a:	00 00                	add    BYTE PTR [rax],al
    ee0c:	2c 09                	sub    al,0x9
    ee0e:	00 00                	add    BYTE PTR [rax],al
    ee10:	77 94                	ja     eda6 <__GNU_EH_FRAME_HDR+0xc8e>
    ee12:	ff                   	(bad)  
    ee13:	ff a2 00 00 00 00    	jmp    QWORD PTR [rdx+0x0]
    ee19:	45 0e                	rex.RB (bad) 
    ee1b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee21:	02 99 0c 07 08 00    	add    bl,BYTE PTR [rcx+0x8070c]
    ee27:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ee2a:	00 00                	add    BYTE PTR [rax],al
    ee2c:	4c 09 00             	or     QWORD PTR [rax],r8
    ee2f:	00 f9                	add    cl,bh
    ee31:	94                   	xchg   esp,eax
    ee32:	ff                   	(bad)  
    ee33:	ff 1e                	call   FWORD PTR [rsi]
    ee35:	00 00                	add    BYTE PTR [rax],al
    ee37:	00 00                	add    BYTE PTR [rax],al
    ee39:	45 0e                	rex.RB (bad) 
    ee3b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee41:	55                   	push   rbp
    ee42:	0c 07                	or     al,0x7
    ee44:	08 00                	or     BYTE PTR [rax],al
    ee46:	00 00                	add    BYTE PTR [rax],al
    ee48:	1c 00                	sbb    al,0x0
    ee4a:	00 00                	add    BYTE PTR [rax],al
    ee4c:	6c                   	ins    BYTE PTR es:[rdi],dx
    ee4d:	09 00                	or     DWORD PTR [rax],eax
    ee4f:	00 f7                	add    bh,dh
    ee51:	94                   	xchg   esp,eax
    ee52:	ff                   	(bad)  
    ee53:	ff 63 01             	jmp    QWORD PTR [rbx+0x1]
    ee56:	00 00                	add    BYTE PTR [rax],al
    ee58:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ee5b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee61:	03 5a 01             	add    ebx,DWORD PTR [rdx+0x1]
    ee64:	0c 07                	or     al,0x7
    ee66:	08 00                	or     BYTE PTR [rax],al
    ee68:	2c 00                	sub    al,0x0
    ee6a:	00 00                	add    BYTE PTR [rax],al
    ee6c:	8c 09                	mov    WORD PTR [rcx],cs
    ee6e:	00 00                	add    BYTE PTR [rax],al
    ee70:	3a 96 ff ff 11 02    	cmp    dl,BYTE PTR [rsi+0x211ffff]
    ee76:	00 00                	add    BYTE PTR [rax],al
    ee78:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ee7b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee81:	50                   	push   rax
    ee82:	8f 03                	pop    QWORD PTR [rbx]
    ee84:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
    ee8b:	07                   	(bad)  
    ee8c:	03 f8                	add    edi,eax
    ee8e:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ee91:	08 00                	or     BYTE PTR [rax],al
    ee93:	00 00                	add    BYTE PTR [rax],al
    ee95:	00 00                	add    BYTE PTR [rax],al
    ee97:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ee9a:	00 00                	add    BYTE PTR [rax],al
    ee9c:	bc 09 00 00 1b       	mov    esp,0x1b000009
    eea1:	98                   	cwde   
    eea2:	ff                   	(bad)  
    eea3:	ff b2 00 00 00 00    	push   QWORD PTR [rdx+0x0]
    eea9:	45 0e                	rex.RB (bad) 
    eeab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eeb1:	02 a9 0c 07 08 00    	add    ch,BYTE PTR [rcx+0x8070c]
    eeb7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eeba:	00 00                	add    BYTE PTR [rax],al
    eebc:	dc 09                	fmul   QWORD PTR [rcx]
    eebe:	00 00                	add    BYTE PTR [rax],al
    eec0:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    eec1:	98                   	cwde   
    eec2:	ff                   	(bad)  
    eec3:	ff a5 00 00 00 00    	jmp    QWORD PTR [rbp+0x0]
    eec9:	45 0e                	rex.RB (bad) 
    eecb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eed1:	02 9c 0c 07 08 00 00 	add    bl,BYTE PTR [rsp+rcx*1+0x807]
    eed8:	24 00                	and    al,0x0
    eeda:	00 00                	add    BYTE PTR [rax],al
    eedc:	fc                   	cld    
    eedd:	09 00                	or     DWORD PTR [rax],eax
    eedf:	00 32                	add    BYTE PTR [rdx],dh
    eee1:	99                   	cdq    
    eee2:	ff                   	(bad)  
    eee3:	ff 94 00 00 00 00 45 	call   QWORD PTR [rax+rax*1+0x45000000]
    eeea:	0e                   	(bad)  
    eeeb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eef1:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    eef5:	86 0c 07             	xchg   BYTE PTR [rdi+rax*1],cl
    eef8:	08 00                	or     BYTE PTR [rax],al
    eefa:	00 00                	add    BYTE PTR [rax],al
    eefc:	00 00                	add    BYTE PTR [rax],al
    eefe:	00 00                	add    BYTE PTR [rax],al
    ef00:	1c 00                	sbb    al,0x0
    ef02:	00 00                	add    BYTE PTR [rax],al
    ef04:	24 0a                	and    al,0xa
    ef06:	00 00                	add    BYTE PTR [rax],al
    ef08:	9e                   	sahf   
    ef09:	99                   	cdq    
    ef0a:	ff                   	(bad)  
    ef0b:	ff d5                	call   rbp
    ef0d:	00 00                	add    BYTE PTR [rax],al
    ef0f:	00 00                	add    BYTE PTR [rax],al
    ef11:	45 0e                	rex.RB (bad) 
    ef13:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef19:	02 cc                	add    cl,ah
    ef1b:	0c 07                	or     al,0x7
    ef1d:	08 00                	or     BYTE PTR [rax],al
    ef1f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef22:	00 00                	add    BYTE PTR [rax],al
    ef24:	44 0a 00             	or     r8b,BYTE PTR [rax]
    ef27:	00 53 9a             	add    BYTE PTR [rbx-0x66],dl
    ef2a:	ff                   	(bad)  
    ef2b:	ff                   	(bad)  
    ef2c:	df 00                	fild   WORD PTR [rax]
    ef2e:	00 00                	add    BYTE PTR [rax],al
    ef30:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ef33:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef39:	02 d6                	add    dl,dh
    ef3b:	0c 07                	or     al,0x7
    ef3d:	08 00                	or     BYTE PTR [rax],al
    ef3f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef42:	00 00                	add    BYTE PTR [rax],al
    ef44:	64 0a 00             	or     al,BYTE PTR fs:[rax]
    ef47:	00 12                	add    BYTE PTR [rdx],dl
    ef49:	9b                   	fwait
    ef4a:	ff                   	(bad)  
    ef4b:	ff                   	(bad)  
    ef4c:	7d 00                	jge    ef4e <__GNU_EH_FRAME_HDR+0xe36>
    ef4e:	00 00                	add    BYTE PTR [rax],al
    ef50:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ef53:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef59:	02 74 0c 07          	add    dh,BYTE PTR [rsp+rcx*1+0x7]
    ef5d:	08 00                	or     BYTE PTR [rax],al
    ef5f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef62:	00 00                	add    BYTE PTR [rax],al
    ef64:	84 0a                	test   BYTE PTR [rdx],cl
    ef66:	00 00                	add    BYTE PTR [rax],al
    ef68:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ef69:	9b                   	fwait
    ef6a:	ff                   	(bad)  
    ef6b:	ff 36                	push   QWORD PTR [rsi]
    ef6d:	01 00                	add    DWORD PTR [rax],eax
    ef6f:	00 00                	add    BYTE PTR [rax],al
    ef71:	45 0e                	rex.RB (bad) 
    ef73:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef79:	03 2d 01 0c 07 08    	add    ebp,DWORD PTR [rip+0x8070c01]        # 807fb80 <_end+0x7f42b40>
    ef7f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef82:	00 00                	add    BYTE PTR [rax],al
    ef84:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    ef85:	0a 00                	or     al,BYTE PTR [rax]
    ef87:	00 85 9c ff ff 7e    	add    BYTE PTR [rbp+0x7effff9c],al
    ef8d:	00 00                	add    BYTE PTR [rax],al
    ef8f:	00 00                	add    BYTE PTR [rax],al
    ef91:	45 0e                	rex.RB (bad) 
    ef93:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef99:	02 75 0c             	add    dh,BYTE PTR [rbp+0xc]
    ef9c:	07                   	(bad)  
    ef9d:	08 00                	or     BYTE PTR [rax],al
    ef9f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    efa2:	00 00                	add    BYTE PTR [rax],al
    efa4:	c4                   	(bad)  
    efa5:	0a 00                	or     al,BYTE PTR [rax]
    efa7:	00 e3                	add    bl,ah
    efa9:	9c                   	pushf  
    efaa:	ff                   	(bad)  
    efab:	ff                   	(bad)  
    efac:	39 02                	cmp    DWORD PTR [rdx],eax
    efae:	00 00                	add    BYTE PTR [rax],al
    efb0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    efb3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    efb9:	03 30                	add    esi,DWORD PTR [rax]
    efbb:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    efbe:	08 00                	or     BYTE PTR [rax],al
    efc0:	1c 00                	sbb    al,0x0
    efc2:	00 00                	add    BYTE PTR [rax],al
    efc4:	e4 0a                	in     al,0xa
    efc6:	00 00                	add    BYTE PTR [rax],al
    efc8:	fc                   	cld    
    efc9:	9e                   	sahf   
    efca:	ff                   	(bad)  
    efcb:	ff c9                	dec    ecx
    efcd:	00 00                	add    BYTE PTR [rax],al
    efcf:	00 00                	add    BYTE PTR [rax],al
    efd1:	45 0e                	rex.RB (bad) 
    efd3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    efd9:	02 c0                	add    al,al
    efdb:	0c 07                	or     al,0x7
    efdd:	08 00                	or     BYTE PTR [rax],al
    efdf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    efe2:	00 00                	add    BYTE PTR [rax],al
    efe4:	04 0b                	add    al,0xb
    efe6:	00 00                	add    BYTE PTR [rax],al
    efe8:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    efe9:	9f                   	lahf   
    efea:	ff                   	(bad)  
    efeb:	ff a1 01 00 00 00    	jmp    QWORD PTR [rcx+0x1]
    eff1:	45 0e                	rex.RB (bad) 
    eff3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eff9:	03 98 01 0c 07 08    	add    ebx,DWORD PTR [rax+0x8070c01]
    efff:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f002:	00 00                	add    BYTE PTR [rax],al
    f004:	24 0b                	and    al,0xb
    f006:	00 00                	add    BYTE PTR [rax],al
    f008:	26 a1 ff ff 13 01 00 	es movabs eax,ds:0x450000000113ffff
    f00f:	00 00 45 
    f012:	0e                   	(bad)  
    f013:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f019:	03 0a                	add    ecx,DWORD PTR [rdx]
    f01b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f01e:	08 00                	or     BYTE PTR [rax],al
    f020:	1c 00                	sbb    al,0x0
    f022:	00 00                	add    BYTE PTR [rax],al
    f024:	44 0b 00             	or     r8d,DWORD PTR [rax]
    f027:	00 19                	add    BYTE PTR [rcx],bl
    f029:	a2 ff ff 66 00 00 00 	movabs ds:0x450000000066ffff,al
    f030:	00 45 
    f032:	0e                   	(bad)  
    f033:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f039:	02 5d 0c             	add    bl,BYTE PTR [rbp+0xc]
    f03c:	07                   	(bad)  
    f03d:	08 00                	or     BYTE PTR [rax],al
    f03f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f042:	00 00                	add    BYTE PTR [rax],al
    f044:	64 0b 00             	or     eax,DWORD PTR fs:[rax]
    f047:	00 5f a2             	add    BYTE PTR [rdi-0x5e],bl
    f04a:	ff                   	(bad)  
    f04b:	ff 75 00             	push   QWORD PTR [rbp+0x0]
    f04e:	00 00                	add    BYTE PTR [rax],al
    f050:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f053:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f059:	02 6c 0c 07          	add    ch,BYTE PTR [rsp+rcx*1+0x7]
    f05d:	08 00                	or     BYTE PTR [rax],al
    f05f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f062:	00 00                	add    BYTE PTR [rax],al
    f064:	84 0b                	test   BYTE PTR [rbx],cl
    f066:	00 00                	add    BYTE PTR [rax],al
    f068:	b4 a2                	mov    ah,0xa2
    f06a:	ff                   	(bad)  
    f06b:	ff                   	(bad)  
    f06c:	db 00                	fild   DWORD PTR [rax]
    f06e:	00 00                	add    BYTE PTR [rax],al
    f070:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f073:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f079:	02 d2                	add    dl,dl
    f07b:	0c 07                	or     al,0x7
    f07d:	08 00                	or     BYTE PTR [rax],al
    f07f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f082:	00 00                	add    BYTE PTR [rax],al
    f084:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    f085:	0b 00                	or     eax,DWORD PTR [rax]
    f087:	00 6f a3             	add    BYTE PTR [rdi-0x5d],ch
    f08a:	ff                   	(bad)  
    f08b:	ff 72 01             	push   QWORD PTR [rdx+0x1]
    f08e:	00 00                	add    BYTE PTR [rax],al
    f090:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f093:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f099:	03 69 01             	add    ebp,DWORD PTR [rcx+0x1]
    f09c:	0c 07                	or     al,0x7
    f09e:	08 00                	or     BYTE PTR [rax],al
    f0a0:	1c 00                	sbb    al,0x0
    f0a2:	00 00                	add    BYTE PTR [rax],al
    f0a4:	c4                   	(bad)  
    f0a5:	0b 00                	or     eax,DWORD PTR [rax]
    f0a7:	00 c1                	add    cl,al
    f0a9:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    f0aa:	ff                   	(bad)  
    f0ab:	ff 6c 00 00          	jmp    FWORD PTR [rax+rax*1+0x0]
    f0af:	00 00                	add    BYTE PTR [rax],al
    f0b1:	45 0e                	rex.RB (bad) 
    f0b3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f0b9:	02 63 0c             	add    ah,BYTE PTR [rbx+0xc]
    f0bc:	07                   	(bad)  
    f0bd:	08 00                	or     BYTE PTR [rax],al
    f0bf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f0c2:	00 00                	add    BYTE PTR [rax],al
    f0c4:	e4 0b                	in     al,0xb
    f0c6:	00 00                	add    BYTE PTR [rax],al
    f0c8:	0d a5 ff ff 80       	or     eax,0x80ffffa5
    f0cd:	00 00                	add    BYTE PTR [rax],al
    f0cf:	00 00                	add    BYTE PTR [rax],al
    f0d1:	45 0e                	rex.RB (bad) 
    f0d3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f0d9:	02 77 0c             	add    dh,BYTE PTR [rdi+0xc]
    f0dc:	07                   	(bad)  
    f0dd:	08 00                	or     BYTE PTR [rax],al
    f0df:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f0e2:	00 00                	add    BYTE PTR [rax],al
    f0e4:	04 0c                	add    al,0xc
    f0e6:	00 00                	add    BYTE PTR [rax],al
    f0e8:	6d                   	ins    DWORD PTR es:[rdi],dx
    f0e9:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    f0ea:	ff                   	(bad)  
    f0eb:	ff 16                	call   QWORD PTR [rsi]
    f0ed:	00 00                	add    BYTE PTR [rax],al
    f0ef:	00 00                	add    BYTE PTR [rax],al
    f0f1:	45 0e                	rex.RB (bad) 
    f0f3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f0f9:	4d 0c 07             	rex.WRB or al,0x7
    f0fc:	08 00                	or     BYTE PTR [rax],al
    f0fe:	00 00                	add    BYTE PTR [rax],al
    f100:	20 00                	and    BYTE PTR [rax],al
    f102:	00 00                	add    BYTE PTR [rax],al
    f104:	24 0c                	and    al,0xc
    f106:	00 00                	add    BYTE PTR [rax],al
    f108:	63 a5 ff ff 3a 01    	movsxd esp,DWORD PTR [rbp+0x13affff]
    f10e:	00 00                	add    BYTE PTR [rax],al
    f110:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f113:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f119:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    f11d:	2c 01                	sub    al,0x1
    f11f:	0c 07                	or     al,0x7
    f121:	08 00                	or     BYTE PTR [rax],al
    f123:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f126:	00 00                	add    BYTE PTR [rax],al
    f128:	48 0c 00             	rex.W or al,0x0
    f12b:	00 79 a6             	add    BYTE PTR [rcx-0x5a],bh
    f12e:	ff                   	(bad)  
    f12f:	ff 64 00 00          	jmp    QWORD PTR [rax+rax*1+0x0]
    f133:	00 00                	add    BYTE PTR [rax],al
    f135:	45 0e                	rex.RB (bad) 
    f137:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f13d:	02 5b 0c             	add    bl,BYTE PTR [rbx+0xc]
    f140:	07                   	(bad)  
    f141:	08 00                	or     BYTE PTR [rax],al
    f143:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f146:	00 00                	add    BYTE PTR [rax],al
    f148:	68 0c 00 00 bd       	push   0xffffffffbd00000c
    f14d:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    f14e:	ff                   	(bad)  
    f14f:	ff 53 00             	call   QWORD PTR [rbx+0x0]
    f152:	00 00                	add    BYTE PTR [rax],al
    f154:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f157:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f15d:	02 4a 0c             	add    cl,BYTE PTR [rdx+0xc]
    f160:	07                   	(bad)  
    f161:	08 00                	or     BYTE PTR [rax],al
    f163:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f166:	00 00                	add    BYTE PTR [rax],al
    f168:	88 0c 00             	mov    BYTE PTR [rax+rax*1],cl
    f16b:	00 f0                	add    al,dh
    f16d:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    f16e:	ff                   	(bad)  
    f16f:	ff b1 00 00 00 00    	push   QWORD PTR [rcx+0x0]
    f175:	45 0e                	rex.RB (bad) 
    f177:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f17d:	02 a8 0c 07 08 00    	add    ch,BYTE PTR [rax+0x8070c]
    f183:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f186:	00 00                	add    BYTE PTR [rax],al
    f188:	a8 0c                	test   al,0xc
    f18a:	00 00                	add    BYTE PTR [rax],al
    f18c:	81 a7 ff ff cb 00 00 	and    DWORD PTR [rdi+0xcbffff],0x45000000
    f193:	00 00 45 
    f196:	0e                   	(bad)  
    f197:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f19d:	02 c2                	add    al,dl
    f19f:	0c 07                	or     al,0x7
    f1a1:	08 00                	or     BYTE PTR [rax],al
    f1a3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f1a6:	00 00                	add    BYTE PTR [rax],al
    f1a8:	c8 0c 00 00          	enter  0xc,0x0
    f1ac:	2c a8                	sub    al,0xa8
    f1ae:	ff                   	(bad)  
    f1af:	ff 55 00             	call   QWORD PTR [rbp+0x0]
    f1b2:	00 00                	add    BYTE PTR [rax],al
    f1b4:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f1b7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f1bd:	02 4c 0c 07          	add    cl,BYTE PTR [rsp+rcx*1+0x7]
    f1c1:	08 00                	or     BYTE PTR [rax],al
    f1c3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f1c6:	00 00                	add    BYTE PTR [rax],al
    f1c8:	e8 0c 00 00 61       	call   6100f1d9 <_end+0x60ed2199>
    f1cd:	a8 ff                	test   al,0xff
    f1cf:	ff 30                	push   QWORD PTR [rax]
    f1d1:	00 00                	add    BYTE PTR [rax],al
    f1d3:	00 00                	add    BYTE PTR [rax],al
    f1d5:	45 0e                	rex.RB (bad) 
    f1d7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f1dd:	67 0c 07             	addr32 or al,0x7
    f1e0:	08 00                	or     BYTE PTR [rax],al
    f1e2:	00 00                	add    BYTE PTR [rax],al
    f1e4:	1c 00                	sbb    al,0x0
    f1e6:	00 00                	add    BYTE PTR [rax],al
    f1e8:	08 0d 00 00 71 a8    	or     BYTE PTR [rip+0xffffffffa8710000],cl        # ffffffffa871f1ee <_end+0xffffffffa85e21ae>
    f1ee:	ff                   	(bad)  
    f1ef:	ff 67 00             	jmp    QWORD PTR [rdi+0x0]
    f1f2:	00 00                	add    BYTE PTR [rax],al
    f1f4:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f1f7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f1fd:	02 5e 0c             	add    bl,BYTE PTR [rsi+0xc]
    f200:	07                   	(bad)  
    f201:	08 00                	or     BYTE PTR [rax],al
    f203:	00 20                	add    BYTE PTR [rax],ah
    f205:	00 00                	add    BYTE PTR [rax],al
    f207:	00 28                	add    BYTE PTR [rax],ch
    f209:	0d 00 00 b8 a8       	or     eax,0xa8b80000
    f20e:	ff                   	(bad)  
    f20f:	ff                   	(bad)  
    f210:	38 0f                	cmp    BYTE PTR [rdi],cl
    f212:	00 00                	add    BYTE PTR [rax],al
    f214:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f217:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f21d:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    f221:	27                   	(bad)  
    f222:	0f 0c                	(bad)  
    f224:	07                   	(bad)  
    f225:	08 00                	or     BYTE PTR [rax],al
    f227:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f22a:	00 00                	add    BYTE PTR [rax],al
    f22c:	4c 0d 00 00 cc b7    	rex.WR or rax,0xffffffffb7cc0000
    f232:	ff                   	(bad)  
    f233:	ff 46 00             	inc    DWORD PTR [rsi+0x0]
    f236:	00 00                	add    BYTE PTR [rax],al
    f238:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f23b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f241:	7d 0c                	jge    f24f <__GNU_EH_FRAME_HDR+0x1137>
    f243:	07                   	(bad)  
    f244:	08 00                	or     BYTE PTR [rax],al
    f246:	00 00                	add    BYTE PTR [rax],al
    f248:	24 00                	and    al,0x0
    f24a:	00 00                	add    BYTE PTR [rax],al
    f24c:	6c                   	ins    BYTE PTR es:[rdi],dx
    f24d:	0d 00 00 f2 b7       	or     eax,0xb7f20000
    f252:	ff                   	(bad)  
    f253:	ff                   	(bad)  
    f254:	3b 02                	cmp    eax,DWORD PTR [rdx]
    f256:	00 00                	add    BYTE PTR [rax],al
    f258:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f25b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f261:	4b 8f 03             	rex.WXB pop QWORD PTR [r11]
    f264:	8e 04 8c             	mov    es,WORD PTR [rsp+rcx*4]
    f267:	05 83 06 03 27       	add    eax,0x27030683
    f26c:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    f26f:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
    f272:	00 00                	add    BYTE PTR [rax],al
    f274:	94                   	xchg   esp,eax
    f275:	0d 00 00 05 ba       	or     eax,0xba050000
    f27a:	ff                   	(bad)  
    f27b:	ff a5 01 00 00 00    	jmp    QWORD PTR [rbp+0x1]
    f281:	45 0e                	rex.RB (bad) 
    f283:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f289:	03 9c 01 0c 07 08 00 	add    ebx,DWORD PTR [rcx+rax*1+0x8070c]
    f290:	1c 00                	sbb    al,0x0
    f292:	00 00                	add    BYTE PTR [rax],al
    f294:	b4 0d                	mov    ah,0xd
    f296:	00 00                	add    BYTE PTR [rax],al
    f298:	8a bb ff ff 12 01    	mov    bh,BYTE PTR [rbx+0x112ffff]
    f29e:	00 00                	add    BYTE PTR [rax],al
    f2a0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f2a3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f2a9:	03 09                	add    ecx,DWORD PTR [rcx]
    f2ab:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f2ae:	08 00                	or     BYTE PTR [rax],al
    f2b0:	24 00                	and    al,0x0
    f2b2:	00 00                	add    BYTE PTR [rax],al
    f2b4:	d4                   	(bad)  
    f2b5:	0d 00 00 7c bc       	or     eax,0xbc7c0000
    f2ba:	ff                   	(bad)  
    f2bb:	ff                   	(bad)  
    f2bc:	bc 00 00 00 00       	mov    esp,0x0
    f2c1:	45 0e                	rex.RB (bad) 
    f2c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f2c9:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    f2cd:	ae                   	scas   al,BYTE PTR es:[rdi]
    f2ce:	0c 07                	or     al,0x7
    f2d0:	08 00                	or     BYTE PTR [rax],al
    f2d2:	00 00                	add    BYTE PTR [rax],al
    f2d4:	00 00                	add    BYTE PTR [rax],al
    f2d6:	00 00                	add    BYTE PTR [rax],al
    f2d8:	24 00                	and    al,0x0
    f2da:	00 00                	add    BYTE PTR [rax],al
    f2dc:	fc                   	cld    
    f2dd:	0d 00 00 10 bd       	or     eax,0xbd100000
    f2e2:	ff                   	(bad)  
    f2e3:	ff 9b 01 00 00 00    	call   FWORD PTR [rbx+0x1]
    f2e9:	45 0e                	rex.RB (bad) 
    f2eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f2f1:	47 8c 03             	rex.RXB mov WORD PTR [r11],es
    f2f4:	83 04 03 8b          	add    DWORD PTR [rbx+rax*1],0xffffff8b
    f2f8:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f2fb:	08 00                	or     BYTE PTR [rax],al
    f2fd:	00 00                	add    BYTE PTR [rax],al
    f2ff:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f302:	00 00                	add    BYTE PTR [rax],al
    f304:	24 0e                	and    al,0xe
    f306:	00 00                	add    BYTE PTR [rax],al
    f308:	83 be ff ff a5 00 00 	cmp    DWORD PTR [rsi+0xa5ffff],0x0
    f30f:	00 00                	add    BYTE PTR [rax],al
    f311:	45 0e                	rex.RB (bad) 
    f313:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f319:	02 9c 0c 07 08 00 00 	add    bl,BYTE PTR [rsp+rcx*1+0x807]
    f320:	1c 00                	sbb    al,0x0
    f322:	00 00                	add    BYTE PTR [rax],al
    f324:	44 0e                	rex.R (bad) 
    f326:	00 00                	add    BYTE PTR [rax],al
    f328:	08 bf ff ff 43 01    	or     BYTE PTR [rdi+0x143ffff],bh
    f32e:	00 00                	add    BYTE PTR [rax],al
    f330:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f333:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f339:	03 3a                	add    edi,DWORD PTR [rdx]
    f33b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f33e:	08 00                	or     BYTE PTR [rax],al
    f340:	1c 00                	sbb    al,0x0
    f342:	00 00                	add    BYTE PTR [rax],al
    f344:	64 0e                	fs (bad) 
    f346:	00 00                	add    BYTE PTR [rax],al
    f348:	2b c0                	sub    eax,eax
    f34a:	ff                   	(bad)  
    f34b:	ff f3                	push   rbx
    f34d:	00 00                	add    BYTE PTR [rax],al
    f34f:	00 00                	add    BYTE PTR [rax],al
    f351:	45 0e                	rex.RB (bad) 
    f353:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f359:	02 ea                	add    ch,dl
    f35b:	0c 07                	or     al,0x7
    f35d:	08 00                	or     BYTE PTR [rax],al
    f35f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f362:	00 00                	add    BYTE PTR [rax],al
    f364:	84 0e                	test   BYTE PTR [rsi],cl
    f366:	00 00                	add    BYTE PTR [rax],al
    f368:	fe c0                	inc    al
    f36a:	ff                   	(bad)  
    f36b:	ff 70 00             	push   QWORD PTR [rax+0x0]
    f36e:	00 00                	add    BYTE PTR [rax],al
    f370:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f373:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f379:	02 67 0c             	add    ah,BYTE PTR [rdi+0xc]
    f37c:	07                   	(bad)  
    f37d:	08 00                	or     BYTE PTR [rax],al
    f37f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f382:	00 00                	add    BYTE PTR [rax],al
    f384:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    f385:	0e                   	(bad)  
    f386:	00 00                	add    BYTE PTR [rax],al
    f388:	4e c1 ff ff          	rex.WRX sar rdi,0xff
    f38c:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    f38d:	02 00                	add    al,BYTE PTR [rax]
    f38f:	00 00                	add    BYTE PTR [rax],al
    f391:	45 0e                	rex.RB (bad) 
    f393:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f399:	4a 8c 03             	rex.WX mov WORD PTR [rbx],es
    f39c:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
    f3a0:	1c 00                	sbb    al,0x0
    f3a2:	00 00                	add    BYTE PTR [rax],al
    f3a4:	c4                   	(bad)  
    f3a5:	0e                   	(bad)  
    f3a6:	00 00                	add    BYTE PTR [rax],al
    f3a8:	d3 c3                	rol    ebx,cl
    f3aa:	ff                   	(bad)  
    f3ab:	ff 6a 00             	jmp    FWORD PTR [rdx+0x0]
    f3ae:	00 00                	add    BYTE PTR [rax],al
    f3b0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f3b3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f3b9:	02 61 0c             	add    ah,BYTE PTR [rcx+0xc]
    f3bc:	07                   	(bad)  
    f3bd:	08 00                	or     BYTE PTR [rax],al
    f3bf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f3c2:	00 00                	add    BYTE PTR [rax],al
    f3c4:	e4 0e                	in     al,0xe
    f3c6:	00 00                	add    BYTE PTR [rax],al
    f3c8:	1d c4 ff ff 6e       	sbb    eax,0x6effffc4
    f3cd:	00 00                	add    BYTE PTR [rax],al
    f3cf:	00 00                	add    BYTE PTR [rax],al
    f3d1:	45 0e                	rex.RB (bad) 
    f3d3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f3d9:	02 65 0c             	add    ah,BYTE PTR [rbp+0xc]
    f3dc:	07                   	(bad)  
    f3dd:	08 00                	or     BYTE PTR [rax],al
    f3df:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    f3e2:	00 00                	add    BYTE PTR [rax],al
    f3e4:	04 0f                	add    al,0xf
    f3e6:	00 00                	add    BYTE PTR [rax],al
    f3e8:	6b c4 ff             	imul   eax,esp,0xffffffff
    f3eb:	ff 8d 01 00 00 00    	dec    DWORD PTR [rbp+0x1]
    f3f1:	45 0e                	rex.RB (bad) 
    f3f3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f3f9:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    f3fd:	7f 01                	jg     f400 <__GNU_EH_FRAME_HDR+0x12e8>
    f3ff:	0c 07                	or     al,0x7
    f401:	08 00                	or     BYTE PTR [rax],al
    f403:	00 00                	add    BYTE PTR [rax],al
    f405:	00 00                	add    BYTE PTR [rax],al
    f407:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f40a:	00 00                	add    BYTE PTR [rax],al
    f40c:	2c 0f                	sub    al,0xf
    f40e:	00 00                	add    BYTE PTR [rax],al
    f410:	d0 c5                	rol    ch,1
    f412:	ff                   	(bad)  
    f413:	ff cf                	dec    edi
    f415:	03 00                	add    eax,DWORD PTR [rax]
    f417:	00 00                	add    BYTE PTR [rax],al
    f419:	45 0e                	rex.RB (bad) 
    f41b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f421:	03 c6                	add    eax,esi
    f423:	03 0c 07             	add    ecx,DWORD PTR [rdi+rax*1]
    f426:	08 00                	or     BYTE PTR [rax],al
    f428:	1c 00                	sbb    al,0x0
    f42a:	00 00                	add    BYTE PTR [rax],al
    f42c:	4c 0f 00 00          	rex.WR sldt WORD PTR [rax]
    f430:	7f c9                	jg     f3fb <__GNU_EH_FRAME_HDR+0x12e3>
    f432:	ff                   	(bad)  
    f433:	ff                   	(bad)  
    f434:	3d 00 00 00 00       	cmp    eax,0x0
    f439:	45 0e                	rex.RB (bad) 
    f43b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f441:	74 0c                	je     f44f <__FRAME_END__+0x7>
    f443:	07                   	(bad)  
    f444:	08 00                	or     BYTE PTR [rax],al
	...

000000000000f448 <__FRAME_END__>:
    f448:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .tbss:

0000000000010b50 <buffer.0+0x10ad0>:
	...

Disassembly of section .init_array:

0000000000010b50 <__frame_dummy_init_array_entry>:
   10b50:	20 2a                	and    BYTE PTR [rdx],ch
   10b52:	00 00                	add    BYTE PTR [rax],al
   10b54:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000010b58 <__do_global_dtors_aux_fini_array_entry>:
   10b58:	e0 29                	loopne 10b83 <_DYNAMIC+0x23>
   10b5a:	00 00                	add    BYTE PTR [rax],al
   10b5c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000010b60 <_DYNAMIC>:
   10b60:	01 00                	add    DWORD PTR [rax],eax
   10b62:	00 00                	add    BYTE PTR [rax],al
   10b64:	00 00                	add    BYTE PTR [rax],al
   10b66:	00 00                	add    BYTE PTR [rax],al
   10b68:	c9                   	leave  
   10b69:	02 00                	add    al,BYTE PTR [rax]
   10b6b:	00 00                	add    BYTE PTR [rax],al
   10b6d:	00 00                	add    BYTE PTR [rax],al
   10b6f:	00 01                	add    BYTE PTR [rcx],al
   10b71:	00 00                	add    BYTE PTR [rax],al
   10b73:	00 00                	add    BYTE PTR [rax],al
   10b75:	00 00                	add    BYTE PTR [rax],al
   10b77:	00 d8                	add    al,bl
   10b79:	02 00                	add    al,BYTE PTR [rax]
   10b7b:	00 00                	add    BYTE PTR [rax],al
   10b7d:	00 00                	add    BYTE PTR [rax],al
   10b7f:	00 01                	add    BYTE PTR [rcx],al
   10b81:	00 00                	add    BYTE PTR [rax],al
   10b83:	00 00                	add    BYTE PTR [rax],al
   10b85:	00 00                	add    BYTE PTR [rax],al
   10b87:	00 e8                	add    al,ch
   10b89:	02 00                	add    al,BYTE PTR [rax]
   10b8b:	00 00                	add    BYTE PTR [rax],al
   10b8d:	00 00                	add    BYTE PTR [rax],al
   10b8f:	00 01                	add    BYTE PTR [rcx],al
   10b91:	00 00                	add    BYTE PTR [rax],al
   10b93:	00 00                	add    BYTE PTR [rax],al
   10b95:	00 00                	add    BYTE PTR [rax],al
   10b97:	00 f7                	add    bh,dh
   10b99:	02 00                	add    al,BYTE PTR [rax]
   10b9b:	00 00                	add    BYTE PTR [rax],al
   10b9d:	00 00                	add    BYTE PTR [rax],al
   10b9f:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
   10ba2:	00 00                	add    BYTE PTR [rax],al
   10ba4:	00 00                	add    BYTE PTR [rax],al
   10ba6:	00 00                	add    BYTE PTR [rax],al
   10ba8:	00 20                	add    BYTE PTR [rax],ah
   10baa:	00 00                	add    BYTE PTR [rax],al
   10bac:	00 00                	add    BYTE PTR [rax],al
   10bae:	00 00                	add    BYTE PTR [rax],al
   10bb0:	0d 00 00 00 00       	or     eax,0x0
   10bb5:	00 00                	add    BYTE PTR [rax],al
   10bb7:	00 ec                	add    ah,ch
   10bb9:	bd 00 00 00 00       	mov    ebp,0x0
   10bbe:	00 00                	add    BYTE PTR [rax],al
   10bc0:	19 00                	sbb    DWORD PTR [rax],eax
   10bc2:	00 00                	add    BYTE PTR [rax],al
   10bc4:	00 00                	add    BYTE PTR [rax],al
   10bc6:	00 00                	add    BYTE PTR [rax],al
   10bc8:	50                   	push   rax
   10bc9:	0b 01                	or     eax,DWORD PTR [rcx]
   10bcb:	00 00                	add    BYTE PTR [rax],al
   10bcd:	00 00                	add    BYTE PTR [rax],al
   10bcf:	00 1b                	add    BYTE PTR [rbx],bl
   10bd1:	00 00                	add    BYTE PTR [rax],al
   10bd3:	00 00                	add    BYTE PTR [rax],al
   10bd5:	00 00                	add    BYTE PTR [rax],al
   10bd7:	00 08                	add    BYTE PTR [rax],cl
   10bd9:	00 00                	add    BYTE PTR [rax],al
   10bdb:	00 00                	add    BYTE PTR [rax],al
   10bdd:	00 00                	add    BYTE PTR [rax],al
   10bdf:	00 1a                	add    BYTE PTR [rdx],bl
   10be1:	00 00                	add    BYTE PTR [rax],al
   10be3:	00 00                	add    BYTE PTR [rax],al
   10be5:	00 00                	add    BYTE PTR [rax],al
   10be7:	00 58 0b             	add    BYTE PTR [rax+0xb],bl
   10bea:	01 00                	add    DWORD PTR [rax],eax
   10bec:	00 00                	add    BYTE PTR [rax],al
   10bee:	00 00                	add    BYTE PTR [rax],al
   10bf0:	1c 00                	sbb    al,0x0
   10bf2:	00 00                	add    BYTE PTR [rax],al
   10bf4:	00 00                	add    BYTE PTR [rax],al
   10bf6:	00 00                	add    BYTE PTR [rax],al
   10bf8:	08 00                	or     BYTE PTR [rax],al
   10bfa:	00 00                	add    BYTE PTR [rax],al
   10bfc:	00 00                	add    BYTE PTR [rax],al
   10bfe:	00 00                	add    BYTE PTR [rax],al
   10c00:	f5                   	cmc    
   10c01:	fe                   	(bad)  
   10c02:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10c05:	00 00                	add    BYTE PTR [rax],al
   10c07:	00 e8                	add    al,ch
   10c09:	03 00                	add    eax,DWORD PTR [rax]
   10c0b:	00 00                	add    BYTE PTR [rax],al
   10c0d:	00 00                	add    BYTE PTR [rax],al
   10c0f:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 10c15 <_DYNAMIC+0xb5>
   10c15:	00 00                	add    BYTE PTR [rax],al
   10c17:	00 98 0b 00 00 00    	add    BYTE PTR [rax+0xb],bl
   10c1d:	00 00                	add    BYTE PTR [rax],al
   10c1f:	00 06                	add    BYTE PTR [rsi],al
   10c21:	00 00                	add    BYTE PTR [rax],al
   10c23:	00 00                	add    BYTE PTR [rax],al
   10c25:	00 00                	add    BYTE PTR [rax],al
   10c27:	00 18                	add    BYTE PTR [rax],bl
   10c29:	04 00                	add    al,0x0
   10c2b:	00 00                	add    BYTE PTR [rax],al
   10c2d:	00 00                	add    BYTE PTR [rax],al
   10c2f:	00 0a                	add    BYTE PTR [rdx],cl
   10c31:	00 00                	add    BYTE PTR [rax],al
   10c33:	00 00                	add    BYTE PTR [rax],al
   10c35:	00 00                	add    BYTE PTR [rax],al
   10c37:	00 36                	add    BYTE PTR [rsi],dh
   10c39:	03 00                	add    eax,DWORD PTR [rax]
   10c3b:	00 00                	add    BYTE PTR [rax],al
   10c3d:	00 00                	add    BYTE PTR [rax],al
   10c3f:	00 0b                	add    BYTE PTR [rbx],cl
   10c41:	00 00                	add    BYTE PTR [rax],al
   10c43:	00 00                	add    BYTE PTR [rax],al
   10c45:	00 00                	add    BYTE PTR [rax],al
   10c47:	00 18                	add    BYTE PTR [rax],bl
   10c49:	00 00                	add    BYTE PTR [rax],al
   10c4b:	00 00                	add    BYTE PTR [rax],al
   10c4d:	00 00                	add    BYTE PTR [rax],al
   10c4f:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 10c55 <_DYNAMIC+0xf5>
	...
   10c5d:	00 00                	add    BYTE PTR [rax],al
   10c5f:	00 03                	add    BYTE PTR [rbx],al
   10c61:	00 00                	add    BYTE PTR [rax],al
   10c63:	00 00                	add    BYTE PTR [rax],al
   10c65:	00 00                	add    BYTE PTR [rax],al
   10c67:	00 80 0d 01 00 00    	add    BYTE PTR [rax+0x10d],al
   10c6d:	00 00                	add    BYTE PTR [rax],al
   10c6f:	00 02                	add    BYTE PTR [rdx],al
   10c71:	00 00                	add    BYTE PTR [rax],al
   10c73:	00 00                	add    BYTE PTR [rax],al
   10c75:	00 00                	add    BYTE PTR [rax],al
   10c77:	00 c0                	add    al,al
   10c79:	06                   	(bad)  
   10c7a:	00 00                	add    BYTE PTR [rax],al
   10c7c:	00 00                	add    BYTE PTR [rax],al
   10c7e:	00 00                	add    BYTE PTR [rax],al
   10c80:	14 00                	adc    al,0x0
   10c82:	00 00                	add    BYTE PTR [rax],al
   10c84:	00 00                	add    BYTE PTR [rax],al
   10c86:	00 00                	add    BYTE PTR [rax],al
   10c88:	07                   	(bad)  
   10c89:	00 00                	add    BYTE PTR [rax],al
   10c8b:	00 00                	add    BYTE PTR [rax],al
   10c8d:	00 00                	add    BYTE PTR [rax],al
   10c8f:	00 17                	add    BYTE PTR [rdi],dl
	...
   10c99:	11 00                	adc    DWORD PTR [rax],eax
   10c9b:	00 00                	add    BYTE PTR [rax],al
   10c9d:	00 00                	add    BYTE PTR [rax],al
   10c9f:	00 07                	add    BYTE PTR [rdi],al
   10ca1:	00 00                	add    BYTE PTR [rax],al
   10ca3:	00 00                	add    BYTE PTR [rax],al
   10ca5:	00 00                	add    BYTE PTR [rax],al
   10ca7:	00 e0                	add    al,ah
   10ca9:	0f 00 00             	sldt   WORD PTR [rax]
   10cac:	00 00                	add    BYTE PTR [rax],al
   10cae:	00 00                	add    BYTE PTR [rax],al
   10cb0:	08 00                	or     BYTE PTR [rax],al
   10cb2:	00 00                	add    BYTE PTR [rax],al
   10cb4:	00 00                	add    BYTE PTR [rax],al
   10cb6:	00 00                	add    BYTE PTR [rax],al
   10cb8:	20 01                	and    BYTE PTR [rcx],al
   10cba:	00 00                	add    BYTE PTR [rax],al
   10cbc:	00 00                	add    BYTE PTR [rax],al
   10cbe:	00 00                	add    BYTE PTR [rax],al
   10cc0:	09 00                	or     DWORD PTR [rax],eax
   10cc2:	00 00                	add    BYTE PTR [rax],al
   10cc4:	00 00                	add    BYTE PTR [rax],al
   10cc6:	00 00                	add    BYTE PTR [rax],al
   10cc8:	18 00                	sbb    BYTE PTR [rax],al
   10cca:	00 00                	add    BYTE PTR [rax],al
   10ccc:	00 00                	add    BYTE PTR [rax],al
   10cce:	00 00                	add    BYTE PTR [rax],al
   10cd0:	1e                   	(bad)  
   10cd1:	00 00                	add    BYTE PTR [rax],al
   10cd3:	00 00                	add    BYTE PTR [rax],al
   10cd5:	00 00                	add    BYTE PTR [rax],al
   10cd7:	00 08                	add    BYTE PTR [rax],cl
   10cd9:	00 00                	add    BYTE PTR [rax],al
   10cdb:	00 00                	add    BYTE PTR [rax],al
   10cdd:	00 00                	add    BYTE PTR [rax],al
   10cdf:	00 fb                	add    bl,bh
   10ce1:	ff                   	(bad)  
   10ce2:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10ce5:	00 00                	add    BYTE PTR [rax],al
   10ce7:	00 01                	add    BYTE PTR [rcx],al
   10ce9:	00 00                	add    BYTE PTR [rax],al
   10ceb:	08 00                	or     BYTE PTR [rax],al
   10ced:	00 00                	add    BYTE PTR [rax],al
   10cef:	00 fe                	add    dh,bh
   10cf1:	ff                   	(bad)  
   10cf2:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10cf5:	00 00                	add    BYTE PTR [rax],al
   10cf7:	00 70 0f             	add    BYTE PTR [rax+0xf],dh
   10cfa:	00 00                	add    BYTE PTR [rax],al
   10cfc:	00 00                	add    BYTE PTR [rax],al
   10cfe:	00 00                	add    BYTE PTR [rax],al
   10d00:	ff                   	(bad)  
   10d01:	ff                   	(bad)  
   10d02:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d05:	00 00                	add    BYTE PTR [rax],al
   10d07:	00 02                	add    BYTE PTR [rdx],al
   10d09:	00 00                	add    BYTE PTR [rax],al
   10d0b:	00 00                	add    BYTE PTR [rax],al
   10d0d:	00 00                	add    BYTE PTR [rax],al
   10d0f:	00 f0                	add    al,dh
   10d11:	ff                   	(bad)  
   10d12:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d15:	00 00                	add    BYTE PTR [rax],al
   10d17:	00 ce                	add    dh,cl
   10d19:	0e                   	(bad)  
   10d1a:	00 00                	add    BYTE PTR [rax],al
   10d1c:	00 00                	add    BYTE PTR [rax],al
   10d1e:	00 00                	add    BYTE PTR [rax],al
   10d20:	f9                   	stc    
   10d21:	ff                   	(bad)  
   10d22:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d25:	00 00                	add    BYTE PTR [rax],al
   10d27:	00 06                	add    BYTE PTR [rsi],al
	...

Disassembly of section .got:

0000000000010d80 <_GLOBAL_OFFSET_TABLE_>:
   10d80:	60                   	(bad)  
   10d81:	0b 01                	or     eax,DWORD PTR [rcx]
	...
   10d97:	00 30                	add    BYTE PTR [rax],dh
   10d99:	20 00                	and    BYTE PTR [rax],al
   10d9b:	00 00                	add    BYTE PTR [rax],al
   10d9d:	00 00                	add    BYTE PTR [rax],al
   10d9f:	00 40 20             	add    BYTE PTR [rax+0x20],al
   10da2:	00 00                	add    BYTE PTR [rax],al
   10da4:	00 00                	add    BYTE PTR [rax],al
   10da6:	00 00                	add    BYTE PTR [rax],al
   10da8:	50                   	push   rax
   10da9:	20 00                	and    BYTE PTR [rax],al
   10dab:	00 00                	add    BYTE PTR [rax],al
   10dad:	00 00                	add    BYTE PTR [rax],al
   10daf:	00 60 20             	add    BYTE PTR [rax+0x20],ah
   10db2:	00 00                	add    BYTE PTR [rax],al
   10db4:	00 00                	add    BYTE PTR [rax],al
   10db6:	00 00                	add    BYTE PTR [rax],al
   10db8:	70 20                	jo     10dda <_GLOBAL_OFFSET_TABLE_+0x5a>
   10dba:	00 00                	add    BYTE PTR [rax],al
   10dbc:	00 00                	add    BYTE PTR [rax],al
   10dbe:	00 00                	add    BYTE PTR [rax],al
   10dc0:	80 20 00             	and    BYTE PTR [rax],0x0
   10dc3:	00 00                	add    BYTE PTR [rax],al
   10dc5:	00 00                	add    BYTE PTR [rax],al
   10dc7:	00 90 20 00 00 00    	add    BYTE PTR [rax+0x20],dl
   10dcd:	00 00                	add    BYTE PTR [rax],al
   10dcf:	00 a0 20 00 00 00    	add    BYTE PTR [rax+0x20],ah
   10dd5:	00 00                	add    BYTE PTR [rax],al
   10dd7:	00 b0 20 00 00 00    	add    BYTE PTR [rax+0x20],dh
   10ddd:	00 00                	add    BYTE PTR [rax],al
   10ddf:	00 c0                	add    al,al
   10de1:	20 00                	and    BYTE PTR [rax],al
   10de3:	00 00                	add    BYTE PTR [rax],al
   10de5:	00 00                	add    BYTE PTR [rax],al
   10de7:	00 d0                	add    al,dl
   10de9:	20 00                	and    BYTE PTR [rax],al
   10deb:	00 00                	add    BYTE PTR [rax],al
   10ded:	00 00                	add    BYTE PTR [rax],al
   10def:	00 e0                	add    al,ah
   10df1:	20 00                	and    BYTE PTR [rax],al
   10df3:	00 00                	add    BYTE PTR [rax],al
   10df5:	00 00                	add    BYTE PTR [rax],al
   10df7:	00 f0                	add    al,dh
   10df9:	20 00                	and    BYTE PTR [rax],al
   10dfb:	00 00                	add    BYTE PTR [rax],al
   10dfd:	00 00                	add    BYTE PTR [rax],al
   10dff:	00 00                	add    BYTE PTR [rax],al
   10e01:	21 00                	and    DWORD PTR [rax],eax
   10e03:	00 00                	add    BYTE PTR [rax],al
   10e05:	00 00                	add    BYTE PTR [rax],al
   10e07:	00 10                	add    BYTE PTR [rax],dl
   10e09:	21 00                	and    DWORD PTR [rax],eax
   10e0b:	00 00                	add    BYTE PTR [rax],al
   10e0d:	00 00                	add    BYTE PTR [rax],al
   10e0f:	00 20                	add    BYTE PTR [rax],ah
   10e11:	21 00                	and    DWORD PTR [rax],eax
   10e13:	00 00                	add    BYTE PTR [rax],al
   10e15:	00 00                	add    BYTE PTR [rax],al
   10e17:	00 30                	add    BYTE PTR [rax],dh
   10e19:	21 00                	and    DWORD PTR [rax],eax
   10e1b:	00 00                	add    BYTE PTR [rax],al
   10e1d:	00 00                	add    BYTE PTR [rax],al
   10e1f:	00 40 21             	add    BYTE PTR [rax+0x21],al
   10e22:	00 00                	add    BYTE PTR [rax],al
   10e24:	00 00                	add    BYTE PTR [rax],al
   10e26:	00 00                	add    BYTE PTR [rax],al
   10e28:	50                   	push   rax
   10e29:	21 00                	and    DWORD PTR [rax],eax
   10e2b:	00 00                	add    BYTE PTR [rax],al
   10e2d:	00 00                	add    BYTE PTR [rax],al
   10e2f:	00 60 21             	add    BYTE PTR [rax+0x21],ah
   10e32:	00 00                	add    BYTE PTR [rax],al
   10e34:	00 00                	add    BYTE PTR [rax],al
   10e36:	00 00                	add    BYTE PTR [rax],al
   10e38:	70 21                	jo     10e5b <_GLOBAL_OFFSET_TABLE_+0xdb>
   10e3a:	00 00                	add    BYTE PTR [rax],al
   10e3c:	00 00                	add    BYTE PTR [rax],al
   10e3e:	00 00                	add    BYTE PTR [rax],al
   10e40:	80 21 00             	and    BYTE PTR [rcx],0x0
   10e43:	00 00                	add    BYTE PTR [rax],al
   10e45:	00 00                	add    BYTE PTR [rax],al
   10e47:	00 90 21 00 00 00    	add    BYTE PTR [rax+0x21],dl
   10e4d:	00 00                	add    BYTE PTR [rax],al
   10e4f:	00 a0 21 00 00 00    	add    BYTE PTR [rax+0x21],ah
   10e55:	00 00                	add    BYTE PTR [rax],al
   10e57:	00 b0 21 00 00 00    	add    BYTE PTR [rax+0x21],dh
   10e5d:	00 00                	add    BYTE PTR [rax],al
   10e5f:	00 c0                	add    al,al
   10e61:	21 00                	and    DWORD PTR [rax],eax
   10e63:	00 00                	add    BYTE PTR [rax],al
   10e65:	00 00                	add    BYTE PTR [rax],al
   10e67:	00 d0                	add    al,dl
   10e69:	21 00                	and    DWORD PTR [rax],eax
   10e6b:	00 00                	add    BYTE PTR [rax],al
   10e6d:	00 00                	add    BYTE PTR [rax],al
   10e6f:	00 e0                	add    al,ah
   10e71:	21 00                	and    DWORD PTR [rax],eax
   10e73:	00 00                	add    BYTE PTR [rax],al
   10e75:	00 00                	add    BYTE PTR [rax],al
   10e77:	00 f0                	add    al,dh
   10e79:	21 00                	and    DWORD PTR [rax],eax
   10e7b:	00 00                	add    BYTE PTR [rax],al
   10e7d:	00 00                	add    BYTE PTR [rax],al
   10e7f:	00 00                	add    BYTE PTR [rax],al
   10e81:	22 00                	and    al,BYTE PTR [rax]
   10e83:	00 00                	add    BYTE PTR [rax],al
   10e85:	00 00                	add    BYTE PTR [rax],al
   10e87:	00 10                	add    BYTE PTR [rax],dl
   10e89:	22 00                	and    al,BYTE PTR [rax]
   10e8b:	00 00                	add    BYTE PTR [rax],al
   10e8d:	00 00                	add    BYTE PTR [rax],al
   10e8f:	00 20                	add    BYTE PTR [rax],ah
   10e91:	22 00                	and    al,BYTE PTR [rax]
   10e93:	00 00                	add    BYTE PTR [rax],al
   10e95:	00 00                	add    BYTE PTR [rax],al
   10e97:	00 30                	add    BYTE PTR [rax],dh
   10e99:	22 00                	and    al,BYTE PTR [rax]
   10e9b:	00 00                	add    BYTE PTR [rax],al
   10e9d:	00 00                	add    BYTE PTR [rax],al
   10e9f:	00 40 22             	add    BYTE PTR [rax+0x22],al
   10ea2:	00 00                	add    BYTE PTR [rax],al
   10ea4:	00 00                	add    BYTE PTR [rax],al
   10ea6:	00 00                	add    BYTE PTR [rax],al
   10ea8:	50                   	push   rax
   10ea9:	22 00                	and    al,BYTE PTR [rax]
   10eab:	00 00                	add    BYTE PTR [rax],al
   10ead:	00 00                	add    BYTE PTR [rax],al
   10eaf:	00 60 22             	add    BYTE PTR [rax+0x22],ah
   10eb2:	00 00                	add    BYTE PTR [rax],al
   10eb4:	00 00                	add    BYTE PTR [rax],al
   10eb6:	00 00                	add    BYTE PTR [rax],al
   10eb8:	70 22                	jo     10edc <_GLOBAL_OFFSET_TABLE_+0x15c>
   10eba:	00 00                	add    BYTE PTR [rax],al
   10ebc:	00 00                	add    BYTE PTR [rax],al
   10ebe:	00 00                	add    BYTE PTR [rax],al
   10ec0:	80 22 00             	and    BYTE PTR [rdx],0x0
   10ec3:	00 00                	add    BYTE PTR [rax],al
   10ec5:	00 00                	add    BYTE PTR [rax],al
   10ec7:	00 90 22 00 00 00    	add    BYTE PTR [rax+0x22],dl
   10ecd:	00 00                	add    BYTE PTR [rax],al
   10ecf:	00 a0 22 00 00 00    	add    BYTE PTR [rax+0x22],ah
   10ed5:	00 00                	add    BYTE PTR [rax],al
   10ed7:	00 b0 22 00 00 00    	add    BYTE PTR [rax+0x22],dh
   10edd:	00 00                	add    BYTE PTR [rax],al
   10edf:	00 c0                	add    al,al
   10ee1:	22 00                	and    al,BYTE PTR [rax]
   10ee3:	00 00                	add    BYTE PTR [rax],al
   10ee5:	00 00                	add    BYTE PTR [rax],al
   10ee7:	00 d0                	add    al,dl
   10ee9:	22 00                	and    al,BYTE PTR [rax]
   10eeb:	00 00                	add    BYTE PTR [rax],al
   10eed:	00 00                	add    BYTE PTR [rax],al
   10eef:	00 e0                	add    al,ah
   10ef1:	22 00                	and    al,BYTE PTR [rax]
   10ef3:	00 00                	add    BYTE PTR [rax],al
   10ef5:	00 00                	add    BYTE PTR [rax],al
   10ef7:	00 f0                	add    al,dh
   10ef9:	22 00                	and    al,BYTE PTR [rax]
   10efb:	00 00                	add    BYTE PTR [rax],al
   10efd:	00 00                	add    BYTE PTR [rax],al
   10eff:	00 00                	add    BYTE PTR [rax],al
   10f01:	23 00                	and    eax,DWORD PTR [rax]
   10f03:	00 00                	add    BYTE PTR [rax],al
   10f05:	00 00                	add    BYTE PTR [rax],al
   10f07:	00 10                	add    BYTE PTR [rax],dl
   10f09:	23 00                	and    eax,DWORD PTR [rax]
   10f0b:	00 00                	add    BYTE PTR [rax],al
   10f0d:	00 00                	add    BYTE PTR [rax],al
   10f0f:	00 20                	add    BYTE PTR [rax],ah
   10f11:	23 00                	and    eax,DWORD PTR [rax]
   10f13:	00 00                	add    BYTE PTR [rax],al
   10f15:	00 00                	add    BYTE PTR [rax],al
   10f17:	00 30                	add    BYTE PTR [rax],dh
   10f19:	23 00                	and    eax,DWORD PTR [rax]
   10f1b:	00 00                	add    BYTE PTR [rax],al
   10f1d:	00 00                	add    BYTE PTR [rax],al
   10f1f:	00 40 23             	add    BYTE PTR [rax+0x23],al
   10f22:	00 00                	add    BYTE PTR [rax],al
   10f24:	00 00                	add    BYTE PTR [rax],al
   10f26:	00 00                	add    BYTE PTR [rax],al
   10f28:	50                   	push   rax
   10f29:	23 00                	and    eax,DWORD PTR [rax]
   10f2b:	00 00                	add    BYTE PTR [rax],al
   10f2d:	00 00                	add    BYTE PTR [rax],al
   10f2f:	00 60 23             	add    BYTE PTR [rax+0x23],ah
   10f32:	00 00                	add    BYTE PTR [rax],al
   10f34:	00 00                	add    BYTE PTR [rax],al
   10f36:	00 00                	add    BYTE PTR [rax],al
   10f38:	70 23                	jo     10f5d <_GLOBAL_OFFSET_TABLE_+0x1dd>
   10f3a:	00 00                	add    BYTE PTR [rax],al
   10f3c:	00 00                	add    BYTE PTR [rax],al
   10f3e:	00 00                	add    BYTE PTR [rax],al
   10f40:	80 23 00             	and    BYTE PTR [rbx],0x0
   10f43:	00 00                	add    BYTE PTR [rax],al
   10f45:	00 00                	add    BYTE PTR [rax],al
   10f47:	00 90 23 00 00 00    	add    BYTE PTR [rax+0x23],dl
   10f4d:	00 00                	add    BYTE PTR [rax],al
   10f4f:	00 a0 23 00 00 00    	add    BYTE PTR [rax+0x23],ah
   10f55:	00 00                	add    BYTE PTR [rax],al
   10f57:	00 b0 23 00 00 00    	add    BYTE PTR [rax+0x23],dh
   10f5d:	00 00                	add    BYTE PTR [rax],al
   10f5f:	00 c0                	add    al,al
   10f61:	23 00                	and    eax,DWORD PTR [rax]
   10f63:	00 00                	add    BYTE PTR [rax],al
   10f65:	00 00                	add    BYTE PTR [rax],al
   10f67:	00 d0                	add    al,dl
   10f69:	23 00                	and    eax,DWORD PTR [rax]
   10f6b:	00 00                	add    BYTE PTR [rax],al
   10f6d:	00 00                	add    BYTE PTR [rax],al
   10f6f:	00 e0                	add    al,ah
   10f71:	23 00                	and    eax,DWORD PTR [rax]
   10f73:	00 00                	add    BYTE PTR [rax],al
   10f75:	00 00                	add    BYTE PTR [rax],al
   10f77:	00 f0                	add    al,dh
   10f79:	23 00                	and    eax,DWORD PTR [rax]
   10f7b:	00 00                	add    BYTE PTR [rax],al
   10f7d:	00 00                	add    BYTE PTR [rax],al
   10f7f:	00 00                	add    BYTE PTR [rax],al
   10f81:	24 00                	and    al,0x0
   10f83:	00 00                	add    BYTE PTR [rax],al
   10f85:	00 00                	add    BYTE PTR [rax],al
   10f87:	00 10                	add    BYTE PTR [rax],dl
   10f89:	24 00                	and    al,0x0
   10f8b:	00 00                	add    BYTE PTR [rax],al
   10f8d:	00 00                	add    BYTE PTR [rax],al
   10f8f:	00 20                	add    BYTE PTR [rax],ah
   10f91:	24 00                	and    al,0x0
   10f93:	00 00                	add    BYTE PTR [rax],al
   10f95:	00 00                	add    BYTE PTR [rax],al
   10f97:	00 30                	add    BYTE PTR [rax],dh
   10f99:	24 00                	and    al,0x0
   10f9b:	00 00                	add    BYTE PTR [rax],al
   10f9d:	00 00                	add    BYTE PTR [rax],al
   10f9f:	00 40 24             	add    BYTE PTR [rax+0x24],al
   10fa2:	00 00                	add    BYTE PTR [rax],al
   10fa4:	00 00                	add    BYTE PTR [rax],al
   10fa6:	00 00                	add    BYTE PTR [rax],al
   10fa8:	50                   	push   rax
   10fa9:	24 00                	and    al,0x0
   10fab:	00 00                	add    BYTE PTR [rax],al
   10fad:	00 00                	add    BYTE PTR [rax],al
   10faf:	00 60 24             	add    BYTE PTR [rax+0x24],ah
   10fb2:	00 00                	add    BYTE PTR [rax],al
   10fb4:	00 00                	add    BYTE PTR [rax],al
   10fb6:	00 00                	add    BYTE PTR [rax],al
   10fb8:	70 24                	jo     10fde <_GLOBAL_OFFSET_TABLE_+0x25e>
   10fba:	00 00                	add    BYTE PTR [rax],al
   10fbc:	00 00                	add    BYTE PTR [rax],al
   10fbe:	00 00                	add    BYTE PTR [rax],al
   10fc0:	80 24 00 00          	and    BYTE PTR [rax+rax*1],0x0
   10fc4:	00 00                	add    BYTE PTR [rax],al
   10fc6:	00 00                	add    BYTE PTR [rax],al
   10fc8:	90                   	nop
   10fc9:	24 00                	and    al,0x0
   10fcb:	00 00                	add    BYTE PTR [rax],al
   10fcd:	00 00                	add    BYTE PTR [rax],al
   10fcf:	00 a0 24 00 00 00    	add    BYTE PTR [rax+0x24],ah
	...

Disassembly of section .data:

0000000000011000 <__data_start>:
	...

0000000000011008 <__dso_handle>:
   11008:	08 10                	or     BYTE PTR [rax],dl
   1100a:	01 00                	add    DWORD PTR [rax],eax
   1100c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011010 <blk_ipv4_len>:
   11010:	ff                   	(bad)  
   11011:	ff                   	(bad)  
   11012:	ff                   	(bad)  
   11013:	ff                   	(bad)  

0000000000011014 <num_rules>:
   11014:	ff                   	(bad)  
   11015:	ff                   	(bad)  
   11016:	ff                   	(bad)  
   11017:	ff                   	(bad)  

0000000000011018 <watchlist_num>:
   11018:	ff                   	(bad)  
   11019:	ff                   	(bad)  
   1101a:	ff                   	(bad)  
   1101b:	ff                   	(bad)  

000000000001101c <arp_entries>:
   1101c:	ff                   	(bad)  
   1101d:	ff                   	(bad)  
   1101e:	ff                   	(bad)  
   1101f:	ff                 	dec    eax

0000000000011020 <spi_max>:
   11020:	c8 00 00 00          	enter  0x0,0x0

0000000000011024 <VIGIL_MODE>:
   11024:	ff                   	(bad)  
   11025:	ff 00                	inc    DWORD PTR [rax]
	...

0000000000011028 <default_config>:
   11028:	04 c0                	add    al,0xc0
   1102a:	00 00                	add    BYTE PTR [rax],al
   1102c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011030 <def_log_file>:
   11030:	1a c0                	sbb    al,al
   11032:	00 00                	add    BYTE PTR [rax],al
   11034:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011038 <default_host_conf>:
   11038:	34 c0                	xor    al,0xc0
   1103a:	00 00                	add    BYTE PTR [rax],al
   1103c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011040 <total_conversations>:
   11040:	ff                   	(bad)  
   11041:	ff                   	(bad)  
   11042:	ff                   	(bad)  
   11043:	ff                   	.byte 0xff

Disassembly of section .bss:

0000000000011060 <optarg@GLIBC_2.2.5>:
	...

0000000000011068 <completed.0>:
	...

0000000000011080 <demo_mode>:
   11080:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011084 <strict_icmp_timestamp_req>:
   11084:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011088 <strict_nmap_host_alive_check>:
	...

00000000000110a0 <threads>:
	...

00000000000112a0 <thread_count>:
   112a0:	00 00                	add    BYTE PTR [rax],al
	...

00000000000112a4 <total_pkt_captured>:
   112a4:	00 00                	add    BYTE PTR [rax],al
	...

00000000000112a8 <is_running>:
	...

00000000000112b0 <last_clean_time>:
	...

00000000000112b8 <clean_delay>:
	...

00000000000112c0 <pkt_counter>:
	...

00000000000112e0 <rules>:
	...

00000000000f32e0 <blocked_ipv4_addrs>:
	...

00000000000f3520 <watchlist>:
	...

0000000000107d20 <arpcache>:
	...

0000000000109f00 <ip_addr>:
	...

0000000000109f20 <debug_mode>:
	...

0000000000109f21 <use_sqlite>:
	...

0000000000109f40 <sqlite_db_path>:
	...

0000000000109f60 <clean_delay_pkts>:
  109f60:	00 00                	add    BYTE PTR [rax],al
	...

0000000000109f64 <packet_print>:
	...

0000000000109f65 <quiet_exit>:
  109f65:	00 00                	add    BYTE PTR [rax],al
	...

0000000000109f68 <vigil_location>:
	...

0000000000109f70 <input_adapter>:
	...

0000000000109f80 <output_adapter>:
	...

0000000000109f90 <local_ip>:
	...

0000000000109fb0 <def_gw>:
	...

0000000000109fc2 <use_spi>:
	...

0000000000109fc4 <homenet>:
  109fc4:	00 00                	add    BYTE PTR [rax],al
	...

0000000000109fc8 <homenetmask>:
  109fc8:	00 00                	add    BYTE PTR [rax],al
	...

0000000000109fcc <in_test_mode>:
	...

0000000000109fe0 <spi_table>:
	...

0000000000137fe0 <lua_scripts>:
	...

0000000000138800 <fn_mem_map>:
	...

000000000013b000 <fn_num>:
	...

000000000013b020 <current_log_num.3>:
  13b020:	00 00                	add    BYTE PTR [rax],al
	...

000000000013b024 <lines_written.2>:
  13b024:	00 00                	add    BYTE PTR [rax],al
	...

000000000013b028 <arr_num.1>:
	...

000000000013b040 <pkt_times.0>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <buffer+0x78>
   a:	74 75                	je     81 <buffer.0+0x1>
   c:	20 31                	and    BYTE PTR [rcx],dh
   e:	30 2e                	xor    BYTE PTR [rsi],ch
  10:	33 2e                	xor    ebp,DWORD PTR [rsi]
  12:	30 2d 31 75 62 75    	xor    BYTE PTR [rip+0x75627531],ch        # 75627549 <_end+0x754ea509>
  18:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  19:	74 75                	je     90 <buffer.0+0x10>
  1b:	31 29                	xor    DWORD PTR [rcx],ebp
  1d:	20 31                	and    BYTE PTR [rcx],dh
  1f:	30 2e                	xor    BYTE PTR [rsi],ch
  21:	33 2e                	xor    ebp,DWORD PTR [rsi]
  23:	30 00                	xor    BYTE PTR [rax],al
