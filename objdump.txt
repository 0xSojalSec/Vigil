
vigil.exe:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000350 <.interp>:
 350:	2f                   	(bad)  
 351:	6c                   	ins    BYTE PTR es:[rdi],dx
 352:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 359:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 35e:	78 2d                	js     38d <buffer.0+0x30d>
 360:	78 38                	js     39a <buffer.0+0x31a>
 362:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 368:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 369:	2e 32 00             	cs xor al,BYTE PTR [rax]

Disassembly of section .note.gnu.property:

0000000000000370 <.note.gnu.property>:
 370:	04 00                	add    al,0x0
 372:	00 00                	add    BYTE PTR [rax],al
 374:	20 00                	and    BYTE PTR [rax],al
 376:	00 00                	add    BYTE PTR [rax],al
 378:	05 00 00 00 47       	add    eax,0x47000000
 37d:	4e 55                	rex.WRX push rbp
 37f:	00 02                	add    BYTE PTR [rdx],al
 381:	00 00                	add    BYTE PTR [rax],al
 383:	c0 04 00 00          	rol    BYTE PTR [rax+rax*1],0x0
 387:	00 03                	add    BYTE PTR [rbx],al
 389:	00 00                	add    BYTE PTR [rax],al
 38b:	00 00                	add    BYTE PTR [rax],al
 38d:	00 00                	add    BYTE PTR [rax],al
 38f:	00 02                	add    BYTE PTR [rdx],al
 391:	80 00 c0             	add    BYTE PTR [rax],0xc0
 394:	04 00                	add    al,0x0
 396:	00 00                	add    BYTE PTR [rax],al
 398:	01 00                	add    DWORD PTR [rax],eax
 39a:	00 00                	add    BYTE PTR [rax],al
 39c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

00000000000003a0 <.note.gnu.build-id>:
 3a0:	04 00                	add    al,0x0
 3a2:	00 00                	add    BYTE PTR [rax],al
 3a4:	14 00                	adc    al,0x0
 3a6:	00 00                	add    BYTE PTR [rax],al
 3a8:	03 00                	add    eax,DWORD PTR [rax]
 3aa:	00 00                	add    BYTE PTR [rax],al
 3ac:	47                   	rex.RXB
 3ad:	4e 55                	rex.WRX push rbp
 3af:	00 ef                	add    bh,ch
 3b1:	7c 4c                	jl     3ff <__abi_tag+0x3b>
 3b3:	cb                   	retf   
 3b4:	02 af 05 e2 b2 8f    	add    ch,BYTE PTR [rdi-0x704d1dfb]
 3ba:	88 4b 06             	mov    BYTE PTR [rbx+0x6],cl
 3bd:	02 8e 87 3f 1a bd    	add    cl,BYTE PTR [rsi-0x42e5c079]
 3c3:	66                   	data16

Disassembly of section .note.ABI-tag:

00000000000003c4 <__abi_tag>:
 3c4:	04 00                	add    al,0x0
 3c6:	00 00                	add    BYTE PTR [rax],al
 3c8:	10 00                	adc    BYTE PTR [rax],al
 3ca:	00 00                	add    BYTE PTR [rax],al
 3cc:	01 00                	add    DWORD PTR [rax],eax
 3ce:	00 00                	add    BYTE PTR [rax],al
 3d0:	47                   	rex.RXB
 3d1:	4e 55                	rex.WRX push rbp
 3d3:	00 00                	add    BYTE PTR [rax],al
 3d5:	00 00                	add    BYTE PTR [rax],al
 3d7:	00 03                	add    BYTE PTR [rbx],al
 3d9:	00 00                	add    BYTE PTR [rax],al
 3db:	00 02                	add    BYTE PTR [rdx],al
 3dd:	00 00                	add    BYTE PTR [rax],al
 3df:	00 00                	add    BYTE PTR [rax],al
 3e1:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .gnu.hash:

00000000000003e8 <.gnu.hash>:
 3e8:	03 00                	add    eax,DWORD PTR [rax]
 3ea:	00 00                	add    BYTE PTR [rax],al
 3ec:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
 3ef:	00 01                	add    BYTE PTR [rcx],al
 3f1:	00 00                	add    BYTE PTR [rax],al
 3f3:	00 06                	add    BYTE PTR [rsi],al
 3f5:	00 00                	add    BYTE PTR [rax],al
 3f7:	00 00                	add    BYTE PTR [rax],al
 3f9:	14 81                	adc    al,0x81
 3fb:	00 00                	add    BYTE PTR [rax],al
 3fd:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 400:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
 403:	00 00                	add    BYTE PTR [rax],al
 405:	00 00                	add    BYTE PTR [rax],al
 407:	00 4e 00             	add    BYTE PTR [rsi+0x0],cl
 40a:	00 00                	add    BYTE PTR [rax],al
 40c:	d1 65 ce             	shl    DWORD PTR [rbp-0x32],1
 40f:	6d                   	ins    DWORD PTR es:[rdi],dx
 410:	32 b3 f0 a9 b3 a2    	xor    dh,BYTE PTR [rbx-0x5d4c5610]
 416:	f7 12                	not    DWORD PTR [rdx]

Disassembly of section .dynsym:

0000000000000418 <.dynsym>:
	...
 430:	88 00                	mov    BYTE PTR [rax],al
 432:	00 00                	add    BYTE PTR [rax],al
 434:	12 00                	adc    al,BYTE PTR [rax]
	...
 446:	00 00                	add    BYTE PTR [rax],al
 448:	47 01 00             	rex.RXB add DWORD PTR [r8],r8d
 44b:	00 12                	add    BYTE PTR [rdx],dl
	...
 45d:	00 00                	add    BYTE PTR [rax],al
 45f:	00 97 01 00 00 12    	add    BYTE PTR [rdi+0x12000001],dl
	...
 475:	00 00                	add    BYTE PTR [rax],al
 477:	00 ea                	add    dl,ch
 479:	01 00                	add    DWORD PTR [rax],eax
 47b:	00 12                	add    BYTE PTR [rdx],dl
	...
 48d:	00 00                	add    BYTE PTR [rax],al
 48f:	00 63 02             	add    BYTE PTR [rbx+0x2],ah
 492:	00 00                	add    BYTE PTR [rax],al
 494:	12 00                	adc    al,BYTE PTR [rax]
	...
 4a6:	00 00                	add    BYTE PTR [rax],al
 4a8:	d2 01                	rol    BYTE PTR [rcx],cl
 4aa:	00 00                	add    BYTE PTR [rax],al
 4ac:	12 00                	adc    al,BYTE PTR [rax]
	...
 4be:	00 00                	add    BYTE PTR [rax],al
 4c0:	90                   	nop
 4c1:	00 00                	add    BYTE PTR [rax],al
 4c3:	00 12                	add    BYTE PTR [rdx],dl
	...
 4d5:	00 00                	add    BYTE PTR [rax],al
 4d7:	00 07                	add    BYTE PTR [rdi],al
 4d9:	01 00                	add    DWORD PTR [rax],eax
 4db:	00 12                	add    BYTE PTR [rdx],dl
	...
 4ed:	00 00                	add    BYTE PTR [rax],al
 4ef:	00 1d 00 00 00 20    	add    BYTE PTR [rip+0x20000000],bl        # 200004f5 <_end+0x1fec34b5>
	...
 505:	00 00                	add    BYTE PTR [rax],al
 507:	00 9f 01 00 00 12    	add    BYTE PTR [rdi+0x12000001],bl
	...
 51d:	00 00                	add    BYTE PTR [rax],al
 51f:	00 5d 02             	add    BYTE PTR [rbp+0x2],bl
 522:	00 00                	add    BYTE PTR [rax],al
 524:	12 00                	adc    al,BYTE PTR [rax]
	...
 536:	00 00                	add    BYTE PTR [rax],al
 538:	a0 02 00 00 12 00 00 	movabs al,ds:0x12000002
 53f:	00 00 
	...
 54d:	00 00                	add    BYTE PTR [rax],al
 54f:	00 98 02 00 00 12    	add    BYTE PTR [rax+0x12000002],bl
	...
 565:	00 00                	add    BYTE PTR [rax],al
 567:	00 7b 00             	add    BYTE PTR [rbx+0x0],bh
 56a:	00 00                	add    BYTE PTR [rax],al
 56c:	12 00                	adc    al,BYTE PTR [rax]
	...
 57e:	00 00                	add    BYTE PTR [rax],al
 580:	bd 01 00 00 12       	mov    ebp,0x12000001
	...
 595:	00 00                	add    BYTE PTR [rax],al
 597:	00 2a                	add    BYTE PTR [rdx],ch
 599:	01 00                	add    DWORD PTR [rax],eax
 59b:	00 12                	add    BYTE PTR [rdx],dl
	...
 5ad:	00 00                	add    BYTE PTR [rax],al
 5af:	00 f8                	add    al,bh
 5b1:	01 00                	add    DWORD PTR [rax],eax
 5b3:	00 12                	add    BYTE PTR [rdx],dl
	...
 5c5:	00 00                	add    BYTE PTR [rax],al
 5c7:	00 40 01             	add    BYTE PTR [rax+0x1],al
 5ca:	00 00                	add    BYTE PTR [rax],al
 5cc:	12 00                	adc    al,BYTE PTR [rax]
	...
 5de:	00 00                	add    BYTE PTR [rax],al
 5e0:	b7 01                	mov    bh,0x1
 5e2:	00 00                	add    BYTE PTR [rax],al
 5e4:	12 00                	adc    al,BYTE PTR [rax]
	...
 5f6:	00 00                	add    BYTE PTR [rax],al
 5f8:	6c                   	ins    BYTE PTR es:[rdi],dx
 5f9:	02 00                	add    al,BYTE PTR [rax]
 5fb:	00 12                	add    BYTE PTR [rdx],dl
	...
 60d:	00 00                	add    BYTE PTR [rax],al
 60f:	00 50 00             	add    BYTE PTR [rax+0x0],dl
 612:	00 00                	add    BYTE PTR [rax],al
 614:	12 00                	adc    al,BYTE PTR [rax]
	...
 626:	00 00                	add    BYTE PTR [rax],al
 628:	be 02 00 00 12       	mov    esi,0x12000002
	...
 63d:	00 00                	add    BYTE PTR [rax],al
 63f:	00 6e 00             	add    BYTE PTR [rsi+0x0],ch
 642:	00 00                	add    BYTE PTR [rax],al
 644:	12 00                	adc    al,BYTE PTR [rax]
	...
 656:	00 00                	add    BYTE PTR [rax],al
 658:	54                   	push   rsp
 659:	01 00                	add    DWORD PTR [rax],eax
 65b:	00 12                	add    BYTE PTR [rdx],dl
	...
 66d:	00 00                	add    BYTE PTR [rax],al
 66f:	00 a3 00 00 00 12    	add    BYTE PTR [rbx+0x12000000],ah
	...
 685:	00 00                	add    BYTE PTR [rax],al
 687:	00 01                	add    BYTE PTR [rcx],al
 689:	00 00                	add    BYTE PTR [rax],al
 68b:	00 20                	add    BYTE PTR [rax],ah
	...
 69d:	00 00                	add    BYTE PTR [rax],al
 69f:	00 18                	add    BYTE PTR [rax],bl
 6a1:	02 00                	add    al,BYTE PTR [rax]
 6a3:	00 12                	add    BYTE PTR [rdx],dl
	...
 6b5:	00 00                	add    BYTE PTR [rax],al
 6b7:	00 63 01             	add    BYTE PTR [rbx+0x1],ah
 6ba:	00 00                	add    BYTE PTR [rax],al
 6bc:	12 00                	adc    al,BYTE PTR [rax]
	...
 6ce:	00 00                	add    BYTE PTR [rax],al
 6d0:	76 00                	jbe    6d2 <__abi_tag+0x30e>
 6d2:	00 00                	add    BYTE PTR [rax],al
 6d4:	12 00                	adc    al,BYTE PTR [rax]
	...
 6e6:	00 00                	add    BYTE PTR [rax],al
 6e8:	2f                   	(bad)  
 6e9:	02 00                	add    al,BYTE PTR [rax]
 6eb:	00 12                	add    BYTE PTR [rdx],dl
	...
 6fd:	00 00                	add    BYTE PTR [rax],al
 6ff:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 702:	00 00                	add    BYTE PTR [rax],al
 704:	20 00                	and    BYTE PTR [rax],al
	...
 716:	00 00                	add    BYTE PTR [rax],al
 718:	7b 02                	jnp    71c <__abi_tag+0x358>
 71a:	00 00                	add    BYTE PTR [rax],al
 71c:	12 00                	adc    al,BYTE PTR [rax]
	...
 72e:	00 00                	add    BYTE PTR [rax],al
 730:	74 02                	je     734 <__abi_tag+0x370>
 732:	00 00                	add    BYTE PTR [rax],al
 734:	12 00                	adc    al,BYTE PTR [rax]
	...
 746:	00 00                	add    BYTE PTR [rax],al
 748:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
 749:	02 00                	add    al,BYTE PTR [rax]
 74b:	00 12                	add    BYTE PTR [rdx],dl
	...
 75d:	00 00                	add    BYTE PTR [rax],al
 75f:	00 4a 02             	add    BYTE PTR [rdx+0x2],cl
 762:	00 00                	add    BYTE PTR [rax],al
 764:	12 00                	adc    al,BYTE PTR [rax]
	...
 776:	00 00                	add    BYTE PTR [rax],al
 778:	24 01                	and    al,0x1
 77a:	00 00                	add    BYTE PTR [rax],al
 77c:	12 00                	adc    al,BYTE PTR [rax]
	...
 78e:	00 00                	add    BYTE PTR [rax],al
 790:	01 01                	add    DWORD PTR [rcx],eax
 792:	00 00                	add    BYTE PTR [rax],al
 794:	12 00                	adc    al,BYTE PTR [rax]
	...
 7a6:	00 00                	add    BYTE PTR [rax],al
 7a8:	1e                   	(bad)  
 7a9:	01 00                	add    DWORD PTR [rax],eax
 7ab:	00 12                	add    BYTE PTR [rdx],dl
	...
 7bd:	00 00                	add    BYTE PTR [rax],al
 7bf:	00 36                	add    BYTE PTR [rsi],dh
 7c1:	02 00                	add    al,BYTE PTR [rax]
 7c3:	00 12                	add    BYTE PTR [rdx],dl
	...
 7d5:	00 00                	add    BYTE PTR [rax],al
 7d7:	00 d5                	add    ch,dl
 7d9:	00 00                	add    BYTE PTR [rax],al
 7db:	00 12                	add    BYTE PTR [rdx],dl
	...
 7ed:	00 00                	add    BYTE PTR [rax],al
 7ef:	00 11                	add    BYTE PTR [rcx],dl
 7f1:	02 00                	add    al,BYTE PTR [rax]
 7f3:	00 12                	add    BYTE PTR [rdx],dl
	...
 805:	00 00                	add    BYTE PTR [rax],al
 807:	00 8a 02 00 00 12    	add    BYTE PTR [rdx+0x12000002],cl
	...
 81d:	00 00                	add    BYTE PTR [rax],al
 81f:	00 9e 01 00 00 12    	add    BYTE PTR [rsi+0x12000001],bl
	...
 835:	00 00                	add    BYTE PTR [rax],al
 837:	00 e3                	add    bl,ah
 839:	01 00                	add    DWORD PTR [rax],eax
 83b:	00 12                	add    BYTE PTR [rdx],dl
	...
 84d:	00 00                	add    BYTE PTR [rax],al
 84f:	00 ae 00 00 00 12    	add    BYTE PTR [rsi+0x12000000],ch
	...
 865:	00 00                	add    BYTE PTR [rax],al
 867:	00 b2 01 00 00 12    	add    BYTE PTR [rdx+0x12000001],dh
	...
 87d:	00 00                	add    BYTE PTR [rax],al
 87f:	00 75 01             	add    BYTE PTR [rbp+0x1],dh
 882:	00 00                	add    BYTE PTR [rax],al
 884:	12 00                	adc    al,BYTE PTR [rax]
	...
 896:	00 00                	add    BYTE PTR [rax],al
 898:	ab                   	stos   DWORD PTR es:[rdi],eax
 899:	01 00                	add    DWORD PTR [rax],eax
 89b:	00 12                	add    BYTE PTR [rdx],dl
	...
 8ad:	00 00                	add    BYTE PTR [rax],al
 8af:	00 2f                	add    BYTE PTR [rdi],ch
 8b1:	01 00                	add    DWORD PTR [rax],eax
 8b3:	00 12                	add    BYTE PTR [rdx],dl
	...
 8c5:	00 00                	add    BYTE PTR [rax],al
 8c7:	00 e0                	add    al,ah
 8c9:	00 00                	add    BYTE PTR [rax],al
 8cb:	00 12                	add    BYTE PTR [rdx],dl
	...
 8dd:	00 00                	add    BYTE PTR [rax],al
 8df:	00 bd 00 00 00 12    	add    BYTE PTR [rbp+0x12000000],bh
	...
 8f5:	00 00                	add    BYTE PTR [rax],al
 8f7:	00 a4 01 00 00 12 00 	add    BYTE PTR [rcx+rax*1+0x120000],ah
	...
 90e:	00 00                	add    BYTE PTR [rax],al
 910:	eb 00                	jmp    912 <__abi_tag+0x54e>
 912:	00 00                	add    BYTE PTR [rax],al
 914:	12 00                	adc    al,BYTE PTR [rax]
	...
 926:	00 00                	add    BYTE PTR [rax],al
 928:	ad                   	lods   eax,DWORD PTR ds:[rsi]
 929:	02 00                	add    al,BYTE PTR [rax]
 92b:	00 12                	add    BYTE PTR [rdx],dl
	...
 93d:	00 00                	add    BYTE PTR [rax],al
 93f:	00 8f 01 00 00 12    	add    BYTE PTR [rdi+0x12000001],cl
	...
 955:	00 00                	add    BYTE PTR [rax],al
 957:	00 45 02             	add    BYTE PTR [rbp+0x2],al
 95a:	00 00                	add    BYTE PTR [rax],al
 95c:	12 00                	adc    al,BYTE PTR [rax]
	...
 96e:	00 00                	add    BYTE PTR [rax],al
 970:	f9                   	stc    
 971:	00 00                	add    BYTE PTR [rax],al
 973:	00 12                	add    BYTE PTR [rdx],dl
	...
 985:	00 00                	add    BYTE PTR [rax],al
 987:	00 cb                	add    bl,cl
 989:	01 00                	add    DWORD PTR [rax],eax
 98b:	00 12                	add    BYTE PTR [rdx],dl
	...
 99d:	00 00                	add    BYTE PTR [rax],al
 99f:	00 dc                	add    ah,bl
 9a1:	01 00                	add    DWORD PTR [rax],eax
 9a3:	00 12                	add    BYTE PTR [rdx],dl
	...
 9b5:	00 00                	add    BYTE PTR [rax],al
 9b7:	00 cb                	add    bl,cl
 9b9:	00 00                	add    BYTE PTR [rax],al
 9bb:	00 12                	add    BYTE PTR [rdx],dl
	...
 9cd:	00 00                	add    BYTE PTR [rax],al
 9cf:	00 5f 00             	add    BYTE PTR [rdi+0x0],bl
 9d2:	00 00                	add    BYTE PTR [rax],al
 9d4:	12 00                	adc    al,BYTE PTR [rax]
	...
 9e6:	00 00                	add    BYTE PTR [rax],al
 9e8:	c4 01 00 00          	(bad)
 9ec:	12 00                	adc    al,BYTE PTR [rax]
	...
 9fe:	00 00                	add    BYTE PTR [rax],al
 a00:	27                   	(bad)  
 a01:	02 00                	add    al,BYTE PTR [rax]
 a03:	00 12                	add    BYTE PTR [rdx],dl
	...
 a19:	02 00                	add    al,BYTE PTR [rax]
 a1b:	00 12                	add    BYTE PTR [rdx],dl
	...
 a2d:	00 00                	add    BYTE PTR [rax],al
 a2f:	00 5b 01             	add    BYTE PTR [rbx+0x1],bl
 a32:	00 00                	add    BYTE PTR [rax],al
 a34:	12 00                	adc    al,BYTE PTR [rax]
	...
 a46:	00 00                	add    BYTE PTR [rax],al
 a48:	52                   	push   rdx
 a49:	02 00                	add    al,BYTE PTR [rax]
 a4b:	00 12                	add    BYTE PTR [rdx],dl
	...
 a5d:	00 00                	add    BYTE PTR [rax],al
 a5f:	00 46 00             	add    BYTE PTR [rsi+0x0],al
 a62:	00 00                	add    BYTE PTR [rax],al
 a64:	12 00                	adc    al,BYTE PTR [rax]
	...
 a76:	00 00                	add    BYTE PTR [rax],al
 a78:	57                   	push   rdi
 a79:	02 00                	add    al,BYTE PTR [rax]
 a7b:	00 12                	add    BYTE PTR [rdx],dl
	...
 a8d:	00 00                	add    BYTE PTR [rax],al
 a8f:	00 83 02 00 00 12    	add    BYTE PTR [rbx+0x12000002],al
	...
 aa5:	00 00                	add    BYTE PTR [rax],al
 aa7:	00 96 01 00 00 12    	add    BYTE PTR [rsi+0x12000001],dl
	...
 abd:	00 00                	add    BYTE PTR [rax],al
 abf:	00 36                	add    BYTE PTR [rsi],dh
 ac1:	01 00                	add    DWORD PTR [rax],eax
 ac3:	00 12                	add    BYTE PTR [rdx],dl
	...
 ad5:	00 00                	add    BYTE PTR [rax],al
 ad7:	00 3c 02             	add    BYTE PTR [rdx+rax*1],bh
 ada:	00 00                	add    BYTE PTR [rax],al
 adc:	12 00                	adc    al,BYTE PTR [rax]
	...
 aee:	00 00                	add    BYTE PTR [rax],al
 af0:	7d 01                	jge    af3 <__abi_tag+0x72f>
 af2:	00 00                	add    BYTE PTR [rax],al
 af4:	12 00                	adc    al,BYTE PTR [rax]
	...
 b06:	00 00                	add    BYTE PTR [rax],al
 b08:	91                   	xchg   ecx,eax
 b09:	02 00                	add    al,BYTE PTR [rax]
 b0b:	00 12                	add    BYTE PTR [rdx],dl
	...
 b1d:	00 00                	add    BYTE PTR [rax],al
 b1f:	00 96 00 00 00 12    	add    BYTE PTR [rsi+0x12000000],dl
	...
 b35:	00 00                	add    BYTE PTR [rax],al
 b37:	00 3b                	add    BYTE PTR [rbx],bh
 b39:	01 00                	add    DWORD PTR [rax],eax
 b3b:	00 12                	add    BYTE PTR [rdx],dl
	...
 b4d:	00 00                	add    BYTE PTR [rax],al
 b4f:	00 0f                	add    BYTE PTR [rdi],cl
 b51:	01 00                	add    DWORD PTR [rax],eax
 b53:	00 22                	add    BYTE PTR [rdx],ah
	...
 b65:	00 00                	add    BYTE PTR [rax],al
 b67:	00 09                	add    BYTE PTR [rcx],cl
 b69:	02 00                	add    al,BYTE PTR [rax]
 b6b:	00 12                	add    BYTE PTR [rdx],dl
 b6d:	00 10                	add    BYTE PTR [rax],dl
 b6f:	00 5f 96             	add    BYTE PTR [rdi-0x6a],bl
 b72:	00 00                	add    BYTE PTR [rax],al
 b74:	00 00                	add    BYTE PTR [rax],al
 b76:	00 00                	add    BYTE PTR [rax],al
 b78:	3a 01                	cmp    al,BYTE PTR [rcx]
 b7a:	00 00                	add    BYTE PTR [rax],al
 b7c:	00 00                	add    BYTE PTR [rax],al
 b7e:	00 00                	add    BYTE PTR [rax],al
 b80:	f1                   	icebp  
 b81:	01 00                	add    DWORD PTR [rax],eax
 b83:	00 11                	add    BYTE PTR [rcx],dl
 b85:	00 1b                	add    BYTE PTR [rbx],bl
 b87:	00 60 10             	add    BYTE PTR [rax+0x10],ah
 b8a:	01 00                	add    DWORD PTR [rax],eax
 b8c:	00 00                	add    BYTE PTR [rax],al
 b8e:	00 00                	add    BYTE PTR [rax],al
 b90:	08 00                	or     BYTE PTR [rax],al
 b92:	00 00                	add    BYTE PTR [rax],al
 b94:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynstr:

0000000000000b98 <.dynstr>:
 b98:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 b9b:	54                   	push   rsp
 b9c:	4d 5f                	rex.WRB pop r15
 b9e:	64 65 72 65          	fs gs jb c07 <__abi_tag+0x843>
 ba2:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 ba9:	4d 
 baa:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 bac:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bad:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 bae:	65 54                	gs push rsp
 bb0:	61                   	(bad)  
 bb1:	62                   	(bad)  
 bb2:	6c                   	ins    BYTE PTR es:[rdi],dx
 bb3:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
 bb7:	67 6d                	ins    DWORD PTR es:[edi],dx
 bb9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bba:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 bbb:	5f                   	pop    rdi
 bbc:	73 74                	jae    c32 <__abi_tag+0x86e>
 bbe:	61                   	(bad)  
 bbf:	72 74                	jb     c35 <__abi_tag+0x871>
 bc1:	5f                   	pop    rdi
 bc2:	5f                   	pop    rdi
 bc3:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 bc6:	54                   	push   rsp
 bc7:	4d 5f                	rex.WRB pop r15
 bc9:	72 65                	jb     c30 <__abi_tag+0x86c>
 bcb:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 bd2:	4d 
 bd3:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 bd5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bd6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 bd7:	65 54                	gs push rsp
 bd9:	61                   	(bad)  
 bda:	62                   	(bad)  
 bdb:	6c                   	ins    BYTE PTR es:[rdi],dx
 bdc:	65 00 70 63          	add    BYTE PTR gs:[rax+0x63],dh
 be0:	61                   	(bad)  
 be1:	70 5f                	jo     c42 <__abi_tag+0x87e>
 be3:	6c                   	ins    BYTE PTR es:[rdi],dx
 be4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 be5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 be6:	70 00                	jo     be8 <__abi_tag+0x824>
 be8:	70 63                	jo     c4d <__abi_tag+0x889>
 bea:	61                   	(bad)  
 beb:	70 5f                	jo     c4c <__abi_tag+0x888>
 bed:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bee:	70 65                	jo     c55 <__abi_tag+0x891>
 bf0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 bf1:	5f                   	pop    rdi
 bf2:	6c                   	ins    BYTE PTR es:[rdi],dx
 bf3:	69 76 65 00 73 71 6c 	imul   esi,DWORD PTR [rsi+0x65],0x6c717300
 bfa:	69 74 65 33 5f 65 72 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x7272655f
 c01:	72 
 c02:	6d                   	ins    DWORD PTR es:[rdi],dx
 c03:	73 67                	jae    c6c <__abi_tag+0x8a8>
 c05:	00 73 71             	add    BYTE PTR [rbx+0x71],dh
 c08:	6c                   	ins    BYTE PTR es:[rdi],dx
 c09:	69 74 65 33 5f 66 72 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6572665f
 c10:	65 
 c11:	65 00 73 71          	add    BYTE PTR gs:[rbx+0x71],dh
 c15:	6c                   	ins    BYTE PTR es:[rdi],dx
 c16:	69 74 65 33 5f 65 78 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6578655f
 c1d:	65 
 c1e:	63 00                	movsxd eax,DWORD PTR [rax]
 c20:	73 71                	jae    c93 <__abi_tag+0x8cf>
 c22:	6c                   	ins    BYTE PTR es:[rdi],dx
 c23:	69 74 65 33 5f 63 6c 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6f6c635f
 c2a:	6f 
 c2b:	73 65                	jae    c92 <__abi_tag+0x8ce>
 c2d:	00 73 71             	add    BYTE PTR [rbx+0x71],dh
 c30:	6c                   	ins    BYTE PTR es:[rdi],dx
 c31:	69 74 65 33 5f 6f 70 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x65706f5f
 c38:	65 
 c39:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c3a:	00 6c 75 61          	add    BYTE PTR [rbp+rsi*2+0x61],ch
 c3e:	5f                   	pop    rdi
 c3f:	73 65                	jae    ca6 <__abi_tag+0x8e2>
 c41:	74 74                	je     cb7 <__abi_tag+0x8f3>
 c43:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c44:	70 00                	jo     c46 <__abi_tag+0x882>
 c46:	6c                   	ins    BYTE PTR es:[rdi],dx
 c47:	75 61                	jne    caa <__abi_tag+0x8e6>
 c49:	4c 5f                	rex.WR pop rdi
 c4b:	6c                   	ins    BYTE PTR es:[rdi],dx
 c4c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c4d:	61                   	(bad)  
 c4e:	64 66 69 6c 65 78 00 	imul   bp,WORD PTR fs:[rbp+riz*2+0x78],0x6c00
 c55:	6c 
 c56:	75 61                	jne    cb9 <__abi_tag+0x8f5>
 c58:	4c 5f                	rex.WR pop rdi
 c5a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c5b:	65 77 73             	gs ja  cd1 <__abi_tag+0x90d>
 c5e:	74 61                	je     cc1 <__abi_tag+0x8fd>
 c60:	74 65                	je     cc7 <__abi_tag+0x903>
 c62:	00 6c 75 61          	add    BYTE PTR [rbp+rsi*2+0x61],ch
 c66:	5f                   	pop    rdi
 c67:	63 6c 6f 73          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
 c6b:	65 00 6c 75 61       	add    BYTE PTR gs:[rbp+rsi*2+0x61],ch
 c70:	5f                   	pop    rdi
 c71:	70 63                	jo     cd6 <__abi_tag+0x912>
 c73:	61                   	(bad)  
 c74:	6c                   	ins    BYTE PTR es:[rdi],dx
 c75:	6c                   	ins    BYTE PTR es:[rdi],dx
 c76:	6b 00 6c             	imul   eax,DWORD PTR [rax],0x6c
 c79:	75 61                	jne    cdc <__abi_tag+0x918>
 c7b:	5f                   	pop    rdi
 c7c:	67 65 74 74          	addr32 gs je cf4 <__abi_tag+0x930>
 c80:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c81:	70 00                	jo     c83 <__abi_tag+0x8bf>
 c83:	6c                   	ins    BYTE PTR es:[rdi],dx
 c84:	75 61                	jne    ce7 <__abi_tag+0x923>
 c86:	4c 5f                	rex.WR pop rdi
 c88:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c89:	70 65                	jo     cf0 <__abi_tag+0x92c>
 c8b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c8c:	6c                   	ins    BYTE PTR es:[rdi],dx
 c8d:	69 62 73 00 67 65 74 	imul   esp,DWORD PTR [rdx+0x73],0x74656700
 c94:	6c                   	ins    BYTE PTR es:[rdi],dx
 c95:	69 6e 65 00 66 67 65 	imul   ebp,DWORD PTR [rsi+0x65],0x65676600
 c9c:	74 63                	je     d01 <__abi_tag+0x93d>
 c9e:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 ca1:	72 6e                	jb     d11 <__abi_tag+0x94d>
 ca3:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
 ca6:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 ca9:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
 cac:	5f                   	pop    rdi
 cad:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 cb3:	7a 65                	jp     d1a <__abi_tag+0x956>
 cb5:	00 6e 74             	add    BYTE PTR [rsi+0x74],ch
 cb8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 cb9:	68 6c 00 6e 74       	push   0x746e006c
 cbe:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 cbf:	68 73 00 72 65       	push   0x65720073
 cc4:	61                   	(bad)  
 cc5:	64 00 73 74          	add    BYTE PTR fs:[rbx+0x74],dh
 cc9:	72 63                	jb     d2e <__abi_tag+0x96a>
 ccb:	68 72 00 6c 6f       	push   0x6f6c0072
 cd0:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
 cd3:	74 69                	je     d3e <__abi_tag+0x97a>
 cd5:	6d                   	ins    DWORD PTR es:[rdi],dx
 cd6:	65 00 6d 61          	add    BYTE PTR gs:[rbp+0x61],ch
 cda:	6c                   	ins    BYTE PTR es:[rdi],dx
 cdb:	6c                   	ins    BYTE PTR es:[rdi],dx
 cdc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 cdd:	63 00                	movsxd eax,DWORD PTR [rax]
 cdf:	70 74                	jo     d55 <__abi_tag+0x991>
 ce1:	68 72 65 61 64       	push   0x64616572
 ce6:	5f                   	pop    rdi
 ce7:	6a 6f                	push   0x6f
 ce9:	69 6e 00 67 65 74 70 	imul   ebp,DWORD PTR [rsi+0x0],0x70746567
 cf0:	69 64 00 73 74 72 63 	imul   esp,DWORD PTR [rax+rax*1+0x73],0x73637274
 cf7:	73 
 cf8:	70 6e                	jo     d68 <__abi_tag+0x9a4>
 cfa:	00 62 61             	add    BYTE PTR [rdx+0x61],ah
 cfd:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
 d00:	72 61                	jb     d63 <__abi_tag+0x99f>
 d02:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
 d05:	73 79                	jae    d80 <__abi_tag+0x9bc>
 d07:	6d                   	ins    DWORD PTR es:[rdi],dx
 d08:	62                   	(bad)  
 d09:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d0a:	6c                   	ins    BYTE PTR es:[rdi],dx
 d0b:	73 00                	jae    d0d <__abi_tag+0x949>
 d0d:	72 65                	jb     d74 <__abi_tag+0x9b0>
 d0f:	67 63 6f 6d          	movsxd ebp,DWORD PTR [edi+0x6d]
 d13:	70 00                	jo     d15 <__abi_tag+0x951>
 d15:	5f                   	pop    rdi
 d16:	5f                   	pop    rdi
 d17:	6c                   	ins    BYTE PTR es:[rdi],dx
 d18:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 d1f:	72 74                	jb     d95 <__abi_tag+0x9d1>
 d21:	5f                   	pop    rdi
 d22:	6d                   	ins    DWORD PTR es:[rdi],dx
 d23:	61                   	(bad)  
 d24:	69 6e 00 73 74 72 63 	imul   ebp,DWORD PTR [rsi+0x0],0x63727473
 d2b:	6d                   	ins    DWORD PTR es:[rdi],dx
 d2c:	70 00                	jo     d2e <__abi_tag+0x96a>
 d2e:	66 70 72             	data16 jo da3 <__abi_tag+0x9df>
 d31:	69 6e 74 66 00 66 70 	imul   ebp,DWORD PTR [rsi+0x74],0x70660066
 d38:	75 74                	jne    dae <__abi_tag+0x9ea>
 d3a:	73 00                	jae    d3c <__abi_tag+0x978>
 d3c:	73 6f                	jae    dad <__abi_tag+0x9e9>
 d3e:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
 d41:	74 00                	je     d43 <__abi_tag+0x97f>
 d43:	73 69                	jae    dae <__abi_tag+0x9ea>
 d45:	67 6e                	outs   dx,BYTE PTR ds:[esi]
 d47:	61                   	(bad)  
 d48:	6c                   	ins    BYTE PTR es:[rdi],dx
 d49:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
 d4c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d4d:	69 00 66 6f 70 65    	imul   eax,DWORD PTR [rax],0x65706f66
 d53:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d54:	00 67 65             	add    BYTE PTR [rdi+0x65],ah
 d57:	74 6f                	je     dc8 <__abi_tag+0xa04>
 d59:	70 74                	jo     dcf <__abi_tag+0xa0b>
 d5b:	00 66 63             	add    BYTE PTR [rsi+0x63],ah
 d5e:	6c                   	ins    BYTE PTR es:[rdi],dx
 d5f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d60:	73 65                	jae    dc7 <__abi_tag+0xa03>
 d62:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 d65:	72 63                	jb     dca <__abi_tag+0xa06>
 d67:	70 79                	jo     de2 <__abi_tag+0xa1e>
 d69:	00 62 61             	add    BYTE PTR [rdx+0x61],ah
 d6c:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
 d6f:	72 61                	jb     dd2 <__abi_tag+0xa0e>
 d71:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
 d74:	73 74                	jae    dea <__abi_tag+0xa26>
 d76:	72 74                	jb     dec <__abi_tag+0xa28>
 d78:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d79:	6b 00 73             	imul   eax,DWORD PTR [rax],0x73
 d7c:	74 72                	je     df0 <__abi_tag+0xa2c>
 d7e:	74 6f                	je     def <__abi_tag+0xa2b>
 d80:	6c                   	ins    BYTE PTR es:[rdi],dx
 d81:	00 6d 65             	add    BYTE PTR [rbp+0x65],ch
 d84:	6d                   	ins    DWORD PTR es:[rdi],dx
 d85:	73 65                	jae    dec <__abi_tag+0xa28>
 d87:	74 00                	je     d89 <__abi_tag+0x9c5>
 d89:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d8a:	70 74                	jo     e00 <__abi_tag+0xa3c>
 d8c:	61                   	(bad)  
 d8d:	72 67                	jb     df6 <__abi_tag+0xa32>
 d8f:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 d92:	72 6e                	jb     e02 <__abi_tag+0xa3e>
 d94:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
 d97:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
 d9a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d9b:	73 65                	jae    e02 <__abi_tag+0xa3e>
 d9d:	64 69 72 00 69 73 64 	imul   esi,DWORD PTR fs:[rdx+0x0],0x69647369
 da4:	69 
 da5:	67 69 74 00 73 74 72 	imul   esi,DWORD PTR [eax+eax*1+0x73],0x74737274
 dac:	73 74 
 dae:	72 00                	jb     db0 <__abi_tag+0x9ec>
 db0:	70 74                	jo     e26 <__abi_tag+0xa62>
 db2:	68 72 65 61 64       	push   0x64616572
 db7:	5f                   	pop    rdi
 db8:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
 dbb:	61                   	(bad)  
 dbc:	74 65                	je     e23 <__abi_tag+0xa5f>
 dbe:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 dc1:	72 6e                	jb     e31 <__abi_tag+0xa6d>
 dc3:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
 dc6:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 dc9:	72 6c                	jb     e37 <__abi_tag+0xa73>
 dcb:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 dcd:	00 73 6c             	add    BYTE PTR [rbx+0x6c],dh
 dd0:	65 65 70 00          	gs gs jo dd4 <__abi_tag+0xa10>
 dd4:	67 65 74 64          	addr32 gs je e3c <__abi_tag+0xa78>
 dd8:	65 6c                	gs ins BYTE PTR es:[rdi],dx
 dda:	69 6d 00 73 65 6e 64 	imul   ebp,DWORD PTR [rbp+0x0],0x646e6573
 de1:	00 73 70             	add    BYTE PTR [rbx+0x70],dh
 de4:	72 69                	jb     e4f <__abi_tag+0xa8b>
 de6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 de7:	74 66                	je     e4f <__abi_tag+0xa8b>
 de9:	00 62 69             	add    BYTE PTR [rdx+0x69],ah
 dec:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 ded:	64 00 68 74          	add    BYTE PTR fs:[rax+0x74],ch
 df1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 df2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 df3:	6c                   	ins    BYTE PTR es:[rdi],dx
 df4:	00 68 74             	add    BYTE PTR [rax+0x74],ch
 df7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 df8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 df9:	73 00                	jae    dfb <__abi_tag+0xa37>
 dfb:	73 6e                	jae    e6b <__abi_tag+0xaa7>
 dfd:	70 72                	jo     e71 <__abi_tag+0xaad>
 dff:	69 6e 74 66 00 72 65 	imul   ebp,DWORD PTR [rsi+0x74],0x65720066
 e06:	67 65 78 65          	addr32 gs js e6f <__abi_tag+0xaab>
 e0a:	63 00                	movsxd eax,DWORD PTR [rax]
 e0c:	6c                   	ins    BYTE PTR es:[rdi],dx
 e0d:	69 73 74 65 6e 00 6f 	imul   esi,DWORD PTR [rbx+0x74],0x6f006e65
 e14:	70 65                	jo     e7b <__abi_tag+0xab7>
 e16:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 e17:	64 69 72 00 70 65 72 	imul   esi,DWORD PTR fs:[rdx+0x0],0x72726570
 e1e:	72 
 e1f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 e20:	72 00                	jb     e22 <__abi_tag+0xa5e>
 e22:	73 74                	jae    e98 <__abi_tag+0xad4>
 e24:	72 63                	jb     e89 <__abi_tag+0xac5>
 e26:	61                   	(bad)  
 e27:	74 00                	je     e29 <__abi_tag+0xa65>
 e29:	61                   	(bad)  
 e2a:	63 63 65             	movsxd esp,DWORD PTR [rbx+0x65]
 e2d:	70 74                	jo     ea3 <__abi_tag+0xadf>
 e2f:	00 70 75             	add    BYTE PTR [rax+0x75],dh
 e32:	74 63                	je     e97 <__abi_tag+0xad3>
 e34:	68 61 72 00 65       	push   0x65007261
 e39:	78 69                	js     ea4 <__abi_tag+0xae0>
 e3b:	74 00                	je     e3d <__abi_tag+0xa79>
 e3d:	72 65                	jb     ea4 <__abi_tag+0xae0>
 e3f:	61                   	(bad)  
 e40:	64 64 69 72 00 5f 5f 	fs imul esi,DWORD PTR fs:[rdx+0x0],0x74735f5f
 e47:	73 74 
 e49:	61                   	(bad)  
 e4a:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 e4d:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 e50:	5f                   	pop    rdi
 e51:	66 61                	data16 (bad) 
 e53:	69 6c 00 73 65 74 73 	imul   ebp,DWORD PTR [rax+rax*1+0x73],0x6f737465
 e5a:	6f 
 e5b:	63 6b 6f             	movsxd ebp,DWORD PTR [rbx+0x6f]
 e5e:	70 74                	jo     ed4 <__abi_tag+0xb10>
 e60:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 e64:	70 63                	jo     ec9 <__abi_tag+0xb05>
 e66:	61                   	(bad)  
 e67:	70 2e                	jo     e97 <__abi_tag+0xad3>
 e69:	73 6f                	jae    eda <__abi_tag+0xb16>
 e6b:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
 e6e:	38 00                	cmp    BYTE PTR [rax],al
 e70:	6c                   	ins    BYTE PTR es:[rdi],dx
 e71:	69 62 73 71 6c 69 74 	imul   esp,DWORD PTR [rdx+0x73],0x74696c71
 e78:	65 33 2e             	xor    ebp,DWORD PTR gs:[rsi]
 e7b:	73 6f                	jae    eec <__abi_tag+0xb28>
 e7d:	2e 30 00             	cs xor BYTE PTR [rax],al
 e80:	6c                   	ins    BYTE PTR es:[rdi],dx
 e81:	69 62 6c 75 61 35 2e 	imul   esp,DWORD PTR [rdx+0x6c],0x2e356175
 e88:	33 2e                	xor    ebp,DWORD PTR [rsi]
 e8a:	73 6f                	jae    efb <__abi_tag+0xb37>
 e8c:	2e 30 00             	cs xor BYTE PTR [rax],al
 e8f:	6c                   	ins    BYTE PTR es:[rdi],dx
 e90:	69 62 63 2e 73 6f 2e 	imul   esp,DWORD PTR [rdx+0x63],0x2e6f732e
 e97:	36 00 4c 55 41       	ss add BYTE PTR [rbp+rdx*2+0x41],cl
 e9c:	5f                   	pop    rdi
 e9d:	35 2e 33 00 47       	xor    eax,0x4700332e
 ea2:	4c                   	rex.WR
 ea3:	49                   	rex.WB
 ea4:	42                   	rex.X
 ea5:	43 5f                	rex.XB pop r15
 ea7:	32 2e                	xor    ch,BYTE PTR [rsi]
 ea9:	34 00                	xor    al,0x0
 eab:	47                   	rex.RXB
 eac:	4c                   	rex.WR
 ead:	49                   	rex.WB
 eae:	42                   	rex.X
 eaf:	43 5f                	rex.XB pop r15
 eb1:	32 2e                	xor    ch,BYTE PTR [rsi]
 eb3:	33 2e                	xor    ebp,DWORD PTR [rsi]
 eb5:	34 00                	xor    al,0x0
 eb7:	47                   	rex.RXB
 eb8:	4c                   	rex.WR
 eb9:	49                   	rex.WB
 eba:	42                   	rex.X
 ebb:	43 5f                	rex.XB pop r15
 ebd:	32 2e                	xor    ch,BYTE PTR [rsi]
 ebf:	32 2e                	xor    ch,BYTE PTR [rsi]
 ec1:	35 00 47 4c 49       	xor    eax,0x494c4700
 ec6:	42                   	rex.X
 ec7:	43 5f                	rex.XB pop r15
 ec9:	32 2e                	xor    ch,BYTE PTR [rsi]
 ecb:	33 34 00             	xor    esi,DWORD PTR [rax+rax*1]

Disassembly of section .gnu.version:

0000000000000ece <.gnu.version>:
 ece:	00 00                	add    BYTE PTR [rax],al
 ed0:	00 00                	add    BYTE PTR [rax],al
 ed2:	02 00                	add    al,BYTE PTR [rax]
 ed4:	03 00                	add    eax,DWORD PTR [rax]
 ed6:	03 00                	add    eax,DWORD PTR [rax]
 ed8:	03 00                	add    eax,DWORD PTR [rax]
 eda:	03 00                	add    eax,DWORD PTR [rax]
 edc:	03 00                	add    eax,DWORD PTR [rax]
 ede:	03 00                	add    eax,DWORD PTR [rax]
 ee0:	00 00                	add    BYTE PTR [rax],al
 ee2:	03 00                	add    eax,DWORD PTR [rax]
 ee4:	03 00                	add    eax,DWORD PTR [rax]
 ee6:	03 00                	add    eax,DWORD PTR [rax]
 ee8:	03 00                	add    eax,DWORD PTR [rax]
 eea:	00 00                	add    BYTE PTR [rax],al
 eec:	03 00                	add    eax,DWORD PTR [rax]
 eee:	03 00                	add    eax,DWORD PTR [rax]
 ef0:	03 00                	add    eax,DWORD PTR [rax]
 ef2:	03 00                	add    eax,DWORD PTR [rax]
 ef4:	03 00                	add    eax,DWORD PTR [rax]
 ef6:	04 00                	add    al,0x0
 ef8:	00 00                	add    BYTE PTR [rax],al
 efa:	03 00                	add    eax,DWORD PTR [rax]
 efc:	00 00                	add    BYTE PTR [rax],al
 efe:	03 00                	add    eax,DWORD PTR [rax]
 f00:	05 00 00 00 02       	add    eax,0x2000000
 f05:	00 03                	add    BYTE PTR [rbx],al
 f07:	00 03                	add    BYTE PTR [rbx],al
 f09:	00 03                	add    BYTE PTR [rbx],al
 f0b:	00 00                	add    BYTE PTR [rax],al
 f0d:	00 03                	add    BYTE PTR [rbx],al
 f0f:	00 03                	add    BYTE PTR [rbx],al
 f11:	00 03                	add    BYTE PTR [rbx],al
 f13:	00 03                	add    BYTE PTR [rbx],al
 f15:	00 03                	add    BYTE PTR [rbx],al
 f17:	00 03                	add    BYTE PTR [rbx],al
 f19:	00 03                	add    BYTE PTR [rbx],al
 f1b:	00 03                	add    BYTE PTR [rbx],al
 f1d:	00 05 00 03 00 03    	add    BYTE PTR [rip+0x3000300],al        # 3001223 <_end+0x2ec41e3>
 f23:	00 03                	add    BYTE PTR [rbx],al
 f25:	00 03                	add    BYTE PTR [rbx],al
 f27:	00 05 00 03 00 03    	add    BYTE PTR [rip+0x3000300],al        # 300122d <_end+0x2ec41ed>
 f2d:	00 03                	add    BYTE PTR [rbx],al
 f2f:	00 03                	add    BYTE PTR [rbx],al
 f31:	00 05 00 05 00 03    	add    BYTE PTR [rip+0x3000500],al        # 3001437 <_end+0x2ec43f7>
 f37:	00 05 00 06 00 03    	add    BYTE PTR [rip+0x3000600],al        # 300153d <_end+0x2ec44fd>
 f3d:	00 03                	add    BYTE PTR [rbx],al
 f3f:	00 03                	add    BYTE PTR [rbx],al
 f41:	00 03                	add    BYTE PTR [rbx],al
 f43:	00 03                	add    BYTE PTR [rbx],al
 f45:	00 05 00 00 00 03    	add    BYTE PTR [rip+0x3000000],al        # 3000f4b <_end+0x2ec3f0b>
 f4b:	00 03                	add    BYTE PTR [rbx],al
 f4d:	00 03                	add    BYTE PTR [rbx],al
 f4f:	00 03                	add    BYTE PTR [rbx],al
 f51:	00 03                	add    BYTE PTR [rbx],al
 f53:	00 00                	add    BYTE PTR [rax],al
 f55:	00 03                	add    BYTE PTR [rbx],al
 f57:	00 03                	add    BYTE PTR [rbx],al
 f59:	00 03                	add    BYTE PTR [rbx],al
 f5b:	00 03                	add    BYTE PTR [rbx],al
 f5d:	00 03                	add    BYTE PTR [rbx],al
 f5f:	00 02                	add    BYTE PTR [rdx],al
 f61:	00 03                	add    BYTE PTR [rbx],al
 f63:	00 00                	add    BYTE PTR [rax],al
 f65:	00 03                	add    BYTE PTR [rbx],al
 f67:	00 03                	add    BYTE PTR [rbx],al
 f69:	00 01                	add    BYTE PTR [rcx],al
 f6b:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .gnu.version_r:

0000000000000f70 <.gnu.version_r>:
 f70:	01 00                	add    DWORD PTR [rax],eax
 f72:	01 00                	add    DWORD PTR [rax],eax
 f74:	e8 02 00 00 10       	call   10000f7b <_end+0xfec3f3b>
 f79:	00 00                	add    BYTE PTR [rax],al
 f7b:	00 20                	add    BYTE PTR [rax],ah
 f7d:	00 00                	add    BYTE PTR [rax],al
 f7f:	00 43 28             	add    BYTE PTR [rbx+0x28],al
 f82:	97                   	xchg   edi,eax
 f83:	01 00                	add    DWORD PTR [rax],eax
 f85:	00 05 00 01 03 00    	add    BYTE PTR [rip+0x30100],al        # 3108b <rules+0x1fdab>
 f8b:	00 00                	add    BYTE PTR [rax],al
 f8d:	00 00                	add    BYTE PTR [rax],al
 f8f:	00 01                	add    BYTE PTR [rcx],al
 f91:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 f94:	f7 02 00 00 10 00    	test   DWORD PTR [rdx],0x100000
 f9a:	00 00                	add    BYTE PTR [rax],al
 f9c:	00 00                	add    BYTE PTR [rax],al
 f9e:	00 00                	add    BYTE PTR [rax],al
 fa0:	14 69                	adc    al,0x69
 fa2:	69 0d 00 00 06 00 09 	imul   ecx,DWORD PTR [rip+0x60000],0x309        # 60fac <rules+0x4fccc>
 fa9:	03 00 00 
 fac:	10 00                	adc    BYTE PTR [rax],al
 fae:	00 00                	add    BYTE PTR [rax],al
 fb0:	74 19                	je     fcb <__abi_tag+0xc07>
 fb2:	69 09 00 00 04 00    	imul   ecx,DWORD PTR [rcx],0x40000
 fb8:	13 03                	adc    eax,DWORD PTR [rbx]
 fba:	00 00                	add    BYTE PTR [rax],al
 fbc:	10 00                	adc    BYTE PTR [rax],al
 fbe:	00 00                	add    BYTE PTR [rax],al
 fc0:	75 1a                	jne    fdc <__abi_tag+0xc18>
 fc2:	69 09 00 00 03 00    	imul   ecx,DWORD PTR [rcx],0x30000
 fc8:	1f                   	(bad)  
 fc9:	03 00                	add    eax,DWORD PTR [rax]
 fcb:	00 10                	add    BYTE PTR [rax],dl
 fcd:	00 00                	add    BYTE PTR [rax],al
 fcf:	00 b4 91 96 06 00 00 	add    BYTE PTR [rcx+rdx*4+0x696],dh
 fd6:	02 00                	add    al,BYTE PTR [rax]
 fd8:	2b 03                	sub    eax,DWORD PTR [rbx]
 fda:	00 00                	add    BYTE PTR [rax],al
 fdc:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000000fe0 <.rela.dyn>:
     fe0:	50                   	push   rax
     fe1:	0b 01                	or     eax,DWORD PTR [rcx]
     fe3:	00 00                	add    BYTE PTR [rax],al
     fe5:	00 00                	add    BYTE PTR [rax],al
     fe7:	00 08                	add    BYTE PTR [rax],cl
     fe9:	00 00                	add    BYTE PTR [rax],al
     feb:	00 00                	add    BYTE PTR [rax],al
     fed:	00 00                	add    BYTE PTR [rax],al
     fef:	00 20                	add    BYTE PTR [rax],ah
     ff1:	2a 00                	sub    al,BYTE PTR [rax]
     ff3:	00 00                	add    BYTE PTR [rax],al
     ff5:	00 00                	add    BYTE PTR [rax],al
     ff7:	00 58 0b             	add    BYTE PTR [rax+0xb],bl
     ffa:	01 00                	add    DWORD PTR [rax],eax
     ffc:	00 00                	add    BYTE PTR [rax],al
     ffe:	00 00                	add    BYTE PTR [rax],al
    1000:	08 00                	or     BYTE PTR [rax],al
    1002:	00 00                	add    BYTE PTR [rax],al
    1004:	00 00                	add    BYTE PTR [rax],al
    1006:	00 00                	add    BYTE PTR [rax],al
    1008:	e0 29                	loopne 1033 <__abi_tag+0xc6f>
    100a:	00 00                	add    BYTE PTR [rax],al
    100c:	00 00                	add    BYTE PTR [rax],al
    100e:	00 00                	add    BYTE PTR [rax],al
    1010:	08 10                	or     BYTE PTR [rax],dl
    1012:	01 00                	add    DWORD PTR [rax],eax
    1014:	00 00                	add    BYTE PTR [rax],al
    1016:	00 00                	add    BYTE PTR [rax],al
    1018:	08 00                	or     BYTE PTR [rax],al
    101a:	00 00                	add    BYTE PTR [rax],al
    101c:	00 00                	add    BYTE PTR [rax],al
    101e:	00 00                	add    BYTE PTR [rax],al
    1020:	08 10                	or     BYTE PTR [rax],dl
    1022:	01 00                	add    DWORD PTR [rax],eax
    1024:	00 00                	add    BYTE PTR [rax],al
    1026:	00 00                	add    BYTE PTR [rax],al
    1028:	28 10                	sub    BYTE PTR [rax],dl
    102a:	01 00                	add    DWORD PTR [rax],eax
    102c:	00 00                	add    BYTE PTR [rax],al
    102e:	00 00                	add    BYTE PTR [rax],al
    1030:	08 00                	or     BYTE PTR [rax],al
    1032:	00 00                	add    BYTE PTR [rax],al
    1034:	00 00                	add    BYTE PTR [rax],al
    1036:	00 00                	add    BYTE PTR [rax],al
    1038:	04 c0                	add    al,0xc0
    103a:	00 00                	add    BYTE PTR [rax],al
    103c:	00 00                	add    BYTE PTR [rax],al
    103e:	00 00                	add    BYTE PTR [rax],al
    1040:	30 10                	xor    BYTE PTR [rax],dl
    1042:	01 00                	add    DWORD PTR [rax],eax
    1044:	00 00                	add    BYTE PTR [rax],al
    1046:	00 00                	add    BYTE PTR [rax],al
    1048:	08 00                	or     BYTE PTR [rax],al
    104a:	00 00                	add    BYTE PTR [rax],al
    104c:	00 00                	add    BYTE PTR [rax],al
    104e:	00 00                	add    BYTE PTR [rax],al
    1050:	1a c0                	sbb    al,al
    1052:	00 00                	add    BYTE PTR [rax],al
    1054:	00 00                	add    BYTE PTR [rax],al
    1056:	00 00                	add    BYTE PTR [rax],al
    1058:	38 10                	cmp    BYTE PTR [rax],dl
    105a:	01 00                	add    DWORD PTR [rax],eax
    105c:	00 00                	add    BYTE PTR [rax],al
    105e:	00 00                	add    BYTE PTR [rax],al
    1060:	08 00                	or     BYTE PTR [rax],al
    1062:	00 00                	add    BYTE PTR [rax],al
    1064:	00 00                	add    BYTE PTR [rax],al
    1066:	00 00                	add    BYTE PTR [rax],al
    1068:	34 c0                	xor    al,0xc0
    106a:	00 00                	add    BYTE PTR [rax],al
    106c:	00 00                	add    BYTE PTR [rax],al
    106e:	00 00                	add    BYTE PTR [rax],al
    1070:	d8 0f                	fmul   DWORD PTR [rdi]
    1072:	01 00                	add    DWORD PTR [rax],eax
    1074:	00 00                	add    BYTE PTR [rax],al
    1076:	00 00                	add    BYTE PTR [rax],al
    1078:	06                   	(bad)  
    1079:	00 00                	add    BYTE PTR [rax],al
    107b:	00 09                	add    BYTE PTR [rcx],cl
	...
    1085:	00 00                	add    BYTE PTR [rax],al
    1087:	00 e0                	add    al,ah
    1089:	0f 01 00             	sgdt   [rax]
    108c:	00 00                	add    BYTE PTR [rax],al
    108e:	00 00                	add    BYTE PTR [rax],al
    1090:	06                   	(bad)  
    1091:	00 00                	add    BYTE PTR [rax],al
    1093:	00 1a                	add    BYTE PTR [rdx],bl
	...
    109d:	00 00                	add    BYTE PTR [rax],al
    109f:	00 e8                	add    al,ch
    10a1:	0f 01 00             	sgdt   [rax]
    10a4:	00 00                	add    BYTE PTR [rax],al
    10a6:	00 00                	add    BYTE PTR [rax],al
    10a8:	06                   	(bad)  
    10a9:	00 00                	add    BYTE PTR [rax],al
    10ab:	00 1f                	add    BYTE PTR [rdi],bl
	...
    10b5:	00 00                	add    BYTE PTR [rax],al
    10b7:	00 f0                	add    al,dh
    10b9:	0f 01 00             	sgdt   [rax]
    10bc:	00 00                	add    BYTE PTR [rax],al
    10be:	00 00                	add    BYTE PTR [rax],al
    10c0:	06                   	(bad)  
    10c1:	00 00                	add    BYTE PTR [rax],al
    10c3:	00 4d 00             	add    BYTE PTR [rbp+0x0],cl
	...
    10ce:	00 00                	add    BYTE PTR [rax],al
    10d0:	f8                   	clc    
    10d1:	0f 01 00             	sgdt   [rax]
    10d4:	00 00                	add    BYTE PTR [rax],al
    10d6:	00 00                	add    BYTE PTR [rax],al
    10d8:	06                   	(bad)  
    10d9:	00 00                	add    BYTE PTR [rax],al
    10db:	00 49 00             	add    BYTE PTR [rcx+0x0],cl
	...
    10e6:	00 00                	add    BYTE PTR [rax],al
    10e8:	60                   	(bad)  
    10e9:	10 01                	adc    BYTE PTR [rcx],al
    10eb:	00 00                	add    BYTE PTR [rax],al
    10ed:	00 00                	add    BYTE PTR [rax],al
    10ef:	00 05 00 00 00 4f    	add    BYTE PTR [rip+0x4f000000],al        # 4f0010f5 <_end+0x4eec40b5>
	...

Disassembly of section .rela.plt:

0000000000001100 <.rela.plt>:
    1100:	98                   	cwde   
    1101:	0d 01 00 00 00       	or     eax,0x1
    1106:	00 00                	add    BYTE PTR [rax],al
    1108:	07                   	(bad)  
    1109:	00 00                	add    BYTE PTR [rax],al
    110b:	00 01                	add    BYTE PTR [rcx],al
	...
    1115:	00 00                	add    BYTE PTR [rax],al
    1117:	00 a0 0d 01 00 00    	add    BYTE PTR [rax+0x10d],ah
    111d:	00 00                	add    BYTE PTR [rax],al
    111f:	00 07                	add    BYTE PTR [rdi],al
    1121:	00 00                	add    BYTE PTR [rax],al
    1123:	00 02                	add    BYTE PTR [rdx],al
	...
    112d:	00 00                	add    BYTE PTR [rax],al
    112f:	00 a8 0d 01 00 00    	add    BYTE PTR [rax+0x10d],ch
    1135:	00 00                	add    BYTE PTR [rax],al
    1137:	00 07                	add    BYTE PTR [rdi],al
    1139:	00 00                	add    BYTE PTR [rax],al
    113b:	00 03                	add    BYTE PTR [rbx],al
	...
    1145:	00 00                	add    BYTE PTR [rax],al
    1147:	00 b0 0d 01 00 00    	add    BYTE PTR [rax+0x10d],dh
    114d:	00 00                	add    BYTE PTR [rax],al
    114f:	00 07                	add    BYTE PTR [rdi],al
    1151:	00 00                	add    BYTE PTR [rax],al
    1153:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
    115e:	00 00                	add    BYTE PTR [rax],al
    1160:	b8 0d 01 00 00       	mov    eax,0x10d
    1165:	00 00                	add    BYTE PTR [rax],al
    1167:	00 07                	add    BYTE PTR [rdi],al
    1169:	00 00                	add    BYTE PTR [rax],al
    116b:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 1171 <__abi_tag+0xdad>
    1171:	00 00                	add    BYTE PTR [rax],al
    1173:	00 00                	add    BYTE PTR [rax],al
    1175:	00 00                	add    BYTE PTR [rax],al
    1177:	00 c0                	add    al,al
    1179:	0d 01 00 00 00       	or     eax,0x1
    117e:	00 00                	add    BYTE PTR [rax],al
    1180:	07                   	(bad)  
    1181:	00 00                	add    BYTE PTR [rax],al
    1183:	00 06                	add    BYTE PTR [rsi],al
	...
    118d:	00 00                	add    BYTE PTR [rax],al
    118f:	00 c8                	add    al,cl
    1191:	0d 01 00 00 00       	or     eax,0x1
    1196:	00 00                	add    BYTE PTR [rax],al
    1198:	07                   	(bad)  
    1199:	00 00                	add    BYTE PTR [rax],al
    119b:	00 07                	add    BYTE PTR [rdi],al
	...
    11a5:	00 00                	add    BYTE PTR [rax],al
    11a7:	00 d0                	add    al,dl
    11a9:	0d 01 00 00 00       	or     eax,0x1
    11ae:	00 00                	add    BYTE PTR [rax],al
    11b0:	07                   	(bad)  
    11b1:	00 00                	add    BYTE PTR [rax],al
    11b3:	00 08                	add    BYTE PTR [rax],cl
	...
    11bd:	00 00                	add    BYTE PTR [rax],al
    11bf:	00 d8                	add    al,bl
    11c1:	0d 01 00 00 00       	or     eax,0x1
    11c6:	00 00                	add    BYTE PTR [rax],al
    11c8:	07                   	(bad)  
    11c9:	00 00                	add    BYTE PTR [rax],al
    11cb:	00 0a                	add    BYTE PTR [rdx],cl
	...
    11d5:	00 00                	add    BYTE PTR [rax],al
    11d7:	00 e0                	add    al,ah
    11d9:	0d 01 00 00 00       	or     eax,0x1
    11de:	00 00                	add    BYTE PTR [rax],al
    11e0:	07                   	(bad)  
    11e1:	00 00                	add    BYTE PTR [rax],al
    11e3:	00 0b                	add    BYTE PTR [rbx],cl
	...
    11ed:	00 00                	add    BYTE PTR [rax],al
    11ef:	00 e8                	add    al,ch
    11f1:	0d 01 00 00 00       	or     eax,0x1
    11f6:	00 00                	add    BYTE PTR [rax],al
    11f8:	07                   	(bad)  
    11f9:	00 00                	add    BYTE PTR [rax],al
    11fb:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
	...
    1206:	00 00                	add    BYTE PTR [rax],al
    1208:	f0 0d 01 00 00 00    	lock or eax,0x1
    120e:	00 00                	add    BYTE PTR [rax],al
    1210:	07                   	(bad)  
    1211:	00 00                	add    BYTE PTR [rax],al
    1213:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 1219 <__abi_tag+0xe55>
    1219:	00 00                	add    BYTE PTR [rax],al
    121b:	00 00                	add    BYTE PTR [rax],al
    121d:	00 00                	add    BYTE PTR [rax],al
    121f:	00 f8                	add    al,bh
    1221:	0d 01 00 00 00       	or     eax,0x1
    1226:	00 00                	add    BYTE PTR [rax],al
    1228:	07                   	(bad)  
    1229:	00 00                	add    BYTE PTR [rax],al
    122b:	00 0e                	add    BYTE PTR [rsi],cl
	...
    1239:	0e                   	(bad)  
    123a:	01 00                	add    DWORD PTR [rax],eax
    123c:	00 00                	add    BYTE PTR [rax],al
    123e:	00 00                	add    BYTE PTR [rax],al
    1240:	07                   	(bad)  
    1241:	00 00                	add    BYTE PTR [rax],al
    1243:	00 0f                	add    BYTE PTR [rdi],cl
	...
    124d:	00 00                	add    BYTE PTR [rax],al
    124f:	00 08                	add    BYTE PTR [rax],cl
    1251:	0e                   	(bad)  
    1252:	01 00                	add    DWORD PTR [rax],eax
    1254:	00 00                	add    BYTE PTR [rax],al
    1256:	00 00                	add    BYTE PTR [rax],al
    1258:	07                   	(bad)  
    1259:	00 00                	add    BYTE PTR [rax],al
    125b:	00 10                	add    BYTE PTR [rax],dl
	...
    1265:	00 00                	add    BYTE PTR [rax],al
    1267:	00 10                	add    BYTE PTR [rax],dl
    1269:	0e                   	(bad)  
    126a:	01 00                	add    DWORD PTR [rax],eax
    126c:	00 00                	add    BYTE PTR [rax],al
    126e:	00 00                	add    BYTE PTR [rax],al
    1270:	07                   	(bad)  
    1271:	00 00                	add    BYTE PTR [rax],al
    1273:	00 11                	add    BYTE PTR [rcx],dl
	...
    127d:	00 00                	add    BYTE PTR [rax],al
    127f:	00 18                	add    BYTE PTR [rax],bl
    1281:	0e                   	(bad)  
    1282:	01 00                	add    DWORD PTR [rax],eax
    1284:	00 00                	add    BYTE PTR [rax],al
    1286:	00 00                	add    BYTE PTR [rax],al
    1288:	07                   	(bad)  
    1289:	00 00                	add    BYTE PTR [rax],al
    128b:	00 12                	add    BYTE PTR [rdx],dl
	...
    1295:	00 00                	add    BYTE PTR [rax],al
    1297:	00 20                	add    BYTE PTR [rax],ah
    1299:	0e                   	(bad)  
    129a:	01 00                	add    DWORD PTR [rax],eax
    129c:	00 00                	add    BYTE PTR [rax],al
    129e:	00 00                	add    BYTE PTR [rax],al
    12a0:	07                   	(bad)  
    12a1:	00 00                	add    BYTE PTR [rax],al
    12a3:	00 13                	add    BYTE PTR [rbx],dl
	...
    12ad:	00 00                	add    BYTE PTR [rax],al
    12af:	00 28                	add    BYTE PTR [rax],ch
    12b1:	0e                   	(bad)  
    12b2:	01 00                	add    DWORD PTR [rax],eax
    12b4:	00 00                	add    BYTE PTR [rax],al
    12b6:	00 00                	add    BYTE PTR [rax],al
    12b8:	07                   	(bad)  
    12b9:	00 00                	add    BYTE PTR [rax],al
    12bb:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
	...
    12c6:	00 00                	add    BYTE PTR [rax],al
    12c8:	30 0e                	xor    BYTE PTR [rsi],cl
    12ca:	01 00                	add    DWORD PTR [rax],eax
    12cc:	00 00                	add    BYTE PTR [rax],al
    12ce:	00 00                	add    BYTE PTR [rax],al
    12d0:	07                   	(bad)  
    12d1:	00 00                	add    BYTE PTR [rax],al
    12d3:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 12d9 <__abi_tag+0xf15>
    12d9:	00 00                	add    BYTE PTR [rax],al
    12db:	00 00                	add    BYTE PTR [rax],al
    12dd:	00 00                	add    BYTE PTR [rax],al
    12df:	00 38                	add    BYTE PTR [rax],bh
    12e1:	0e                   	(bad)  
    12e2:	01 00                	add    DWORD PTR [rax],eax
    12e4:	00 00                	add    BYTE PTR [rax],al
    12e6:	00 00                	add    BYTE PTR [rax],al
    12e8:	07                   	(bad)  
    12e9:	00 00                	add    BYTE PTR [rax],al
    12eb:	00 16                	add    BYTE PTR [rsi],dl
	...
    12f5:	00 00                	add    BYTE PTR [rax],al
    12f7:	00 40 0e             	add    BYTE PTR [rax+0xe],al
    12fa:	01 00                	add    DWORD PTR [rax],eax
    12fc:	00 00                	add    BYTE PTR [rax],al
    12fe:	00 00                	add    BYTE PTR [rax],al
    1300:	07                   	(bad)  
    1301:	00 00                	add    BYTE PTR [rax],al
    1303:	00 17                	add    BYTE PTR [rdi],dl
	...
    130d:	00 00                	add    BYTE PTR [rax],al
    130f:	00 48 0e             	add    BYTE PTR [rax+0xe],cl
    1312:	01 00                	add    DWORD PTR [rax],eax
    1314:	00 00                	add    BYTE PTR [rax],al
    1316:	00 00                	add    BYTE PTR [rax],al
    1318:	07                   	(bad)  
    1319:	00 00                	add    BYTE PTR [rax],al
    131b:	00 18                	add    BYTE PTR [rax],bl
	...
    1325:	00 00                	add    BYTE PTR [rax],al
    1327:	00 50 0e             	add    BYTE PTR [rax+0xe],dl
    132a:	01 00                	add    DWORD PTR [rax],eax
    132c:	00 00                	add    BYTE PTR [rax],al
    132e:	00 00                	add    BYTE PTR [rax],al
    1330:	07                   	(bad)  
    1331:	00 00                	add    BYTE PTR [rax],al
    1333:	00 19                	add    BYTE PTR [rcx],bl
	...
    133d:	00 00                	add    BYTE PTR [rax],al
    133f:	00 58 0e             	add    BYTE PTR [rax+0xe],bl
    1342:	01 00                	add    DWORD PTR [rax],eax
    1344:	00 00                	add    BYTE PTR [rax],al
    1346:	00 00                	add    BYTE PTR [rax],al
    1348:	07                   	(bad)  
    1349:	00 00                	add    BYTE PTR [rax],al
    134b:	00 1b                	add    BYTE PTR [rbx],bl
	...
    1355:	00 00                	add    BYTE PTR [rax],al
    1357:	00 60 0e             	add    BYTE PTR [rax+0xe],ah
    135a:	01 00                	add    DWORD PTR [rax],eax
    135c:	00 00                	add    BYTE PTR [rax],al
    135e:	00 00                	add    BYTE PTR [rax],al
    1360:	07                   	(bad)  
    1361:	00 00                	add    BYTE PTR [rax],al
    1363:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
	...
    136e:	00 00                	add    BYTE PTR [rax],al
    1370:	68 0e 01 00 00       	push   0x10e
    1375:	00 00                	add    BYTE PTR [rax],al
    1377:	00 07                	add    BYTE PTR [rdi],al
    1379:	00 00                	add    BYTE PTR [rax],al
    137b:	00 1d 00 00 00 00    	add    BYTE PTR [rip+0x0],bl        # 1381 <__abi_tag+0xfbd>
    1381:	00 00                	add    BYTE PTR [rax],al
    1383:	00 00                	add    BYTE PTR [rax],al
    1385:	00 00                	add    BYTE PTR [rax],al
    1387:	00 70 0e             	add    BYTE PTR [rax+0xe],dh
    138a:	01 00                	add    DWORD PTR [rax],eax
    138c:	00 00                	add    BYTE PTR [rax],al
    138e:	00 00                	add    BYTE PTR [rax],al
    1390:	07                   	(bad)  
    1391:	00 00                	add    BYTE PTR [rax],al
    1393:	00 1e                	add    BYTE PTR [rsi],bl
	...
    139d:	00 00                	add    BYTE PTR [rax],al
    139f:	00 78 0e             	add    BYTE PTR [rax+0xe],bh
    13a2:	01 00                	add    DWORD PTR [rax],eax
    13a4:	00 00                	add    BYTE PTR [rax],al
    13a6:	00 00                	add    BYTE PTR [rax],al
    13a8:	07                   	(bad)  
    13a9:	00 00                	add    BYTE PTR [rax],al
    13ab:	00 20                	add    BYTE PTR [rax],ah
	...
    13b5:	00 00                	add    BYTE PTR [rax],al
    13b7:	00 80 0e 01 00 00    	add    BYTE PTR [rax+0x10e],al
    13bd:	00 00                	add    BYTE PTR [rax],al
    13bf:	00 07                	add    BYTE PTR [rdi],al
    13c1:	00 00                	add    BYTE PTR [rax],al
    13c3:	00 21                	add    BYTE PTR [rcx],ah
	...
    13cd:	00 00                	add    BYTE PTR [rax],al
    13cf:	00 88 0e 01 00 00    	add    BYTE PTR [rax+0x10e],cl
    13d5:	00 00                	add    BYTE PTR [rax],al
    13d7:	00 07                	add    BYTE PTR [rdi],al
    13d9:	00 00                	add    BYTE PTR [rax],al
    13db:	00 22                	add    BYTE PTR [rdx],ah
	...
    13e5:	00 00                	add    BYTE PTR [rax],al
    13e7:	00 90 0e 01 00 00    	add    BYTE PTR [rax+0x10e],dl
    13ed:	00 00                	add    BYTE PTR [rax],al
    13ef:	00 07                	add    BYTE PTR [rdi],al
    13f1:	00 00                	add    BYTE PTR [rax],al
    13f3:	00 23                	add    BYTE PTR [rbx],ah
	...
    13fd:	00 00                	add    BYTE PTR [rax],al
    13ff:	00 98 0e 01 00 00    	add    BYTE PTR [rax+0x10e],bl
    1405:	00 00                	add    BYTE PTR [rax],al
    1407:	00 07                	add    BYTE PTR [rdi],al
    1409:	00 00                	add    BYTE PTR [rax],al
    140b:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
	...
    1416:	00 00                	add    BYTE PTR [rax],al
    1418:	a0 0e 01 00 00 00 00 	movabs al,ds:0x70000000000010e
    141f:	00 07 
    1421:	00 00                	add    BYTE PTR [rax],al
    1423:	00 25 00 00 00 00    	add    BYTE PTR [rip+0x0],ah        # 1429 <__abi_tag+0x1065>
    1429:	00 00                	add    BYTE PTR [rax],al
    142b:	00 00                	add    BYTE PTR [rax],al
    142d:	00 00                	add    BYTE PTR [rax],al
    142f:	00 a8 0e 01 00 00    	add    BYTE PTR [rax+0x10e],ch
    1435:	00 00                	add    BYTE PTR [rax],al
    1437:	00 07                	add    BYTE PTR [rdi],al
    1439:	00 00                	add    BYTE PTR [rax],al
    143b:	00 26                	add    BYTE PTR [rsi],ah
	...
    1445:	00 00                	add    BYTE PTR [rax],al
    1447:	00 b0 0e 01 00 00    	add    BYTE PTR [rax+0x10e],dh
    144d:	00 00                	add    BYTE PTR [rax],al
    144f:	00 07                	add    BYTE PTR [rdi],al
    1451:	00 00                	add    BYTE PTR [rax],al
    1453:	00 27                	add    BYTE PTR [rdi],ah
	...
    145d:	00 00                	add    BYTE PTR [rax],al
    145f:	00 b8 0e 01 00 00    	add    BYTE PTR [rax+0x10e],bh
    1465:	00 00                	add    BYTE PTR [rax],al
    1467:	00 07                	add    BYTE PTR [rdi],al
    1469:	00 00                	add    BYTE PTR [rax],al
    146b:	00 28                	add    BYTE PTR [rax],ch
	...
    1475:	00 00                	add    BYTE PTR [rax],al
    1477:	00 c0                	add    al,al
    1479:	0e                   	(bad)  
    147a:	01 00                	add    DWORD PTR [rax],eax
    147c:	00 00                	add    BYTE PTR [rax],al
    147e:	00 00                	add    BYTE PTR [rax],al
    1480:	07                   	(bad)  
    1481:	00 00                	add    BYTE PTR [rax],al
    1483:	00 29                	add    BYTE PTR [rcx],ch
	...
    148d:	00 00                	add    BYTE PTR [rax],al
    148f:	00 c8                	add    al,cl
    1491:	0e                   	(bad)  
    1492:	01 00                	add    DWORD PTR [rax],eax
    1494:	00 00                	add    BYTE PTR [rax],al
    1496:	00 00                	add    BYTE PTR [rax],al
    1498:	07                   	(bad)  
    1499:	00 00                	add    BYTE PTR [rax],al
    149b:	00 2a                	add    BYTE PTR [rdx],ch
	...
    14a5:	00 00                	add    BYTE PTR [rax],al
    14a7:	00 d0                	add    al,dl
    14a9:	0e                   	(bad)  
    14aa:	01 00                	add    DWORD PTR [rax],eax
    14ac:	00 00                	add    BYTE PTR [rax],al
    14ae:	00 00                	add    BYTE PTR [rax],al
    14b0:	07                   	(bad)  
    14b1:	00 00                	add    BYTE PTR [rax],al
    14b3:	00 2b                	add    BYTE PTR [rbx],ch
	...
    14bd:	00 00                	add    BYTE PTR [rax],al
    14bf:	00 d8                	add    al,bl
    14c1:	0e                   	(bad)  
    14c2:	01 00                	add    DWORD PTR [rax],eax
    14c4:	00 00                	add    BYTE PTR [rax],al
    14c6:	00 00                	add    BYTE PTR [rax],al
    14c8:	07                   	(bad)  
    14c9:	00 00                	add    BYTE PTR [rax],al
    14cb:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
	...
    14d6:	00 00                	add    BYTE PTR [rax],al
    14d8:	e0 0e                	loopne 14e8 <__abi_tag+0x1124>
    14da:	01 00                	add    DWORD PTR [rax],eax
    14dc:	00 00                	add    BYTE PTR [rax],al
    14de:	00 00                	add    BYTE PTR [rax],al
    14e0:	07                   	(bad)  
    14e1:	00 00                	add    BYTE PTR [rax],al
    14e3:	00 2d 00 00 00 00    	add    BYTE PTR [rip+0x0],ch        # 14e9 <__abi_tag+0x1125>
    14e9:	00 00                	add    BYTE PTR [rax],al
    14eb:	00 00                	add    BYTE PTR [rax],al
    14ed:	00 00                	add    BYTE PTR [rax],al
    14ef:	00 e8                	add    al,ch
    14f1:	0e                   	(bad)  
    14f2:	01 00                	add    DWORD PTR [rax],eax
    14f4:	00 00                	add    BYTE PTR [rax],al
    14f6:	00 00                	add    BYTE PTR [rax],al
    14f8:	07                   	(bad)  
    14f9:	00 00                	add    BYTE PTR [rax],al
    14fb:	00 2e                	add    BYTE PTR [rsi],ch
	...
    1505:	00 00                	add    BYTE PTR [rax],al
    1507:	00 f0                	add    al,dh
    1509:	0e                   	(bad)  
    150a:	01 00                	add    DWORD PTR [rax],eax
    150c:	00 00                	add    BYTE PTR [rax],al
    150e:	00 00                	add    BYTE PTR [rax],al
    1510:	07                   	(bad)  
    1511:	00 00                	add    BYTE PTR [rax],al
    1513:	00 2f                	add    BYTE PTR [rdi],ch
	...
    151d:	00 00                	add    BYTE PTR [rax],al
    151f:	00 f8                	add    al,bh
    1521:	0e                   	(bad)  
    1522:	01 00                	add    DWORD PTR [rax],eax
    1524:	00 00                	add    BYTE PTR [rax],al
    1526:	00 00                	add    BYTE PTR [rax],al
    1528:	07                   	(bad)  
    1529:	00 00                	add    BYTE PTR [rax],al
    152b:	00 30                	add    BYTE PTR [rax],dh
	...
    1539:	0f 01 00             	sgdt   [rax]
    153c:	00 00                	add    BYTE PTR [rax],al
    153e:	00 00                	add    BYTE PTR [rax],al
    1540:	07                   	(bad)  
    1541:	00 00                	add    BYTE PTR [rax],al
    1543:	00 31                	add    BYTE PTR [rcx],dh
	...
    154d:	00 00                	add    BYTE PTR [rax],al
    154f:	00 08                	add    BYTE PTR [rax],cl
    1551:	0f 01 00             	sgdt   [rax]
    1554:	00 00                	add    BYTE PTR [rax],al
    1556:	00 00                	add    BYTE PTR [rax],al
    1558:	07                   	(bad)  
    1559:	00 00                	add    BYTE PTR [rax],al
    155b:	00 32                	add    BYTE PTR [rdx],dh
	...
    1565:	00 00                	add    BYTE PTR [rax],al
    1567:	00 10                	add    BYTE PTR [rax],dl
    1569:	0f 01 00             	sgdt   [rax]
    156c:	00 00                	add    BYTE PTR [rax],al
    156e:	00 00                	add    BYTE PTR [rax],al
    1570:	07                   	(bad)  
    1571:	00 00                	add    BYTE PTR [rax],al
    1573:	00 33                	add    BYTE PTR [rbx],dh
	...
    157d:	00 00                	add    BYTE PTR [rax],al
    157f:	00 18                	add    BYTE PTR [rax],bl
    1581:	0f 01 00             	sgdt   [rax]
    1584:	00 00                	add    BYTE PTR [rax],al
    1586:	00 00                	add    BYTE PTR [rax],al
    1588:	07                   	(bad)  
    1589:	00 00                	add    BYTE PTR [rax],al
    158b:	00 34 00             	add    BYTE PTR [rax+rax*1],dh
	...
    1596:	00 00                	add    BYTE PTR [rax],al
    1598:	20 0f                	and    BYTE PTR [rdi],cl
    159a:	01 00                	add    DWORD PTR [rax],eax
    159c:	00 00                	add    BYTE PTR [rax],al
    159e:	00 00                	add    BYTE PTR [rax],al
    15a0:	07                   	(bad)  
    15a1:	00 00                	add    BYTE PTR [rax],al
    15a3:	00 35 00 00 00 00    	add    BYTE PTR [rip+0x0],dh        # 15a9 <__abi_tag+0x11e5>
    15a9:	00 00                	add    BYTE PTR [rax],al
    15ab:	00 00                	add    BYTE PTR [rax],al
    15ad:	00 00                	add    BYTE PTR [rax],al
    15af:	00 28                	add    BYTE PTR [rax],ch
    15b1:	0f 01 00             	sgdt   [rax]
    15b4:	00 00                	add    BYTE PTR [rax],al
    15b6:	00 00                	add    BYTE PTR [rax],al
    15b8:	07                   	(bad)  
    15b9:	00 00                	add    BYTE PTR [rax],al
    15bb:	00 36                	add    BYTE PTR [rsi],dh
	...
    15c5:	00 00                	add    BYTE PTR [rax],al
    15c7:	00 30                	add    BYTE PTR [rax],dh
    15c9:	0f 01 00             	sgdt   [rax]
    15cc:	00 00                	add    BYTE PTR [rax],al
    15ce:	00 00                	add    BYTE PTR [rax],al
    15d0:	07                   	(bad)  
    15d1:	00 00                	add    BYTE PTR [rax],al
    15d3:	00 37                	add    BYTE PTR [rdi],dh
	...
    15dd:	00 00                	add    BYTE PTR [rax],al
    15df:	00 38                	add    BYTE PTR [rax],bh
    15e1:	0f 01 00             	sgdt   [rax]
    15e4:	00 00                	add    BYTE PTR [rax],al
    15e6:	00 00                	add    BYTE PTR [rax],al
    15e8:	07                   	(bad)  
    15e9:	00 00                	add    BYTE PTR [rax],al
    15eb:	00 38                	add    BYTE PTR [rax],bh
	...
    15f5:	00 00                	add    BYTE PTR [rax],al
    15f7:	00 40 0f             	add    BYTE PTR [rax+0xf],al
    15fa:	01 00                	add    DWORD PTR [rax],eax
    15fc:	00 00                	add    BYTE PTR [rax],al
    15fe:	00 00                	add    BYTE PTR [rax],al
    1600:	07                   	(bad)  
    1601:	00 00                	add    BYTE PTR [rax],al
    1603:	00 39                	add    BYTE PTR [rcx],bh
	...
    160d:	00 00                	add    BYTE PTR [rax],al
    160f:	00 48 0f             	add    BYTE PTR [rax+0xf],cl
    1612:	01 00                	add    DWORD PTR [rax],eax
    1614:	00 00                	add    BYTE PTR [rax],al
    1616:	00 00                	add    BYTE PTR [rax],al
    1618:	07                   	(bad)  
    1619:	00 00                	add    BYTE PTR [rax],al
    161b:	00 3a                	add    BYTE PTR [rdx],bh
	...
    1625:	00 00                	add    BYTE PTR [rax],al
    1627:	00 50 0f             	add    BYTE PTR [rax+0xf],dl
    162a:	01 00                	add    DWORD PTR [rax],eax
    162c:	00 00                	add    BYTE PTR [rax],al
    162e:	00 00                	add    BYTE PTR [rax],al
    1630:	07                   	(bad)  
    1631:	00 00                	add    BYTE PTR [rax],al
    1633:	00 3b                	add    BYTE PTR [rbx],bh
	...
    163d:	00 00                	add    BYTE PTR [rax],al
    163f:	00 58 0f             	add    BYTE PTR [rax+0xf],bl
    1642:	01 00                	add    DWORD PTR [rax],eax
    1644:	00 00                	add    BYTE PTR [rax],al
    1646:	00 00                	add    BYTE PTR [rax],al
    1648:	07                   	(bad)  
    1649:	00 00                	add    BYTE PTR [rax],al
    164b:	00 3c 00             	add    BYTE PTR [rax+rax*1],bh
	...
    1656:	00 00                	add    BYTE PTR [rax],al
    1658:	60                   	(bad)  
    1659:	0f 01 00             	sgdt   [rax]
    165c:	00 00                	add    BYTE PTR [rax],al
    165e:	00 00                	add    BYTE PTR [rax],al
    1660:	07                   	(bad)  
    1661:	00 00                	add    BYTE PTR [rax],al
    1663:	00 3d 00 00 00 00    	add    BYTE PTR [rip+0x0],bh        # 1669 <__abi_tag+0x12a5>
    1669:	00 00                	add    BYTE PTR [rax],al
    166b:	00 00                	add    BYTE PTR [rax],al
    166d:	00 00                	add    BYTE PTR [rax],al
    166f:	00 68 0f             	add    BYTE PTR [rax+0xf],ch
    1672:	01 00                	add    DWORD PTR [rax],eax
    1674:	00 00                	add    BYTE PTR [rax],al
    1676:	00 00                	add    BYTE PTR [rax],al
    1678:	07                   	(bad)  
    1679:	00 00                	add    BYTE PTR [rax],al
    167b:	00 3e                	add    BYTE PTR [rsi],bh
	...
    1685:	00 00                	add    BYTE PTR [rax],al
    1687:	00 70 0f             	add    BYTE PTR [rax+0xf],dh
    168a:	01 00                	add    DWORD PTR [rax],eax
    168c:	00 00                	add    BYTE PTR [rax],al
    168e:	00 00                	add    BYTE PTR [rax],al
    1690:	07                   	(bad)  
    1691:	00 00                	add    BYTE PTR [rax],al
    1693:	00 3f                	add    BYTE PTR [rdi],bh
	...
    169d:	00 00                	add    BYTE PTR [rax],al
    169f:	00 78 0f             	add    BYTE PTR [rax+0xf],bh
    16a2:	01 00                	add    DWORD PTR [rax],eax
    16a4:	00 00                	add    BYTE PTR [rax],al
    16a6:	00 00                	add    BYTE PTR [rax],al
    16a8:	07                   	(bad)  
    16a9:	00 00                	add    BYTE PTR [rax],al
    16ab:	00 40 00             	add    BYTE PTR [rax+0x0],al
	...
    16b6:	00 00                	add    BYTE PTR [rax],al
    16b8:	80 0f 01             	or     BYTE PTR [rdi],0x1
    16bb:	00 00                	add    BYTE PTR [rax],al
    16bd:	00 00                	add    BYTE PTR [rax],al
    16bf:	00 07                	add    BYTE PTR [rdi],al
    16c1:	00 00                	add    BYTE PTR [rax],al
    16c3:	00 41 00             	add    BYTE PTR [rcx+0x0],al
	...
    16ce:	00 00                	add    BYTE PTR [rax],al
    16d0:	88 0f                	mov    BYTE PTR [rdi],cl
    16d2:	01 00                	add    DWORD PTR [rax],eax
    16d4:	00 00                	add    BYTE PTR [rax],al
    16d6:	00 00                	add    BYTE PTR [rax],al
    16d8:	07                   	(bad)  
    16d9:	00 00                	add    BYTE PTR [rax],al
    16db:	00 42 00             	add    BYTE PTR [rdx+0x0],al
	...
    16e6:	00 00                	add    BYTE PTR [rax],al
    16e8:	90                   	nop
    16e9:	0f 01 00             	sgdt   [rax]
    16ec:	00 00                	add    BYTE PTR [rax],al
    16ee:	00 00                	add    BYTE PTR [rax],al
    16f0:	07                   	(bad)  
    16f1:	00 00                	add    BYTE PTR [rax],al
    16f3:	00 43 00             	add    BYTE PTR [rbx+0x0],al
	...
    16fe:	00 00                	add    BYTE PTR [rax],al
    1700:	98                   	cwde   
    1701:	0f 01 00             	sgdt   [rax]
    1704:	00 00                	add    BYTE PTR [rax],al
    1706:	00 00                	add    BYTE PTR [rax],al
    1708:	07                   	(bad)  
    1709:	00 00                	add    BYTE PTR [rax],al
    170b:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
	...
    1717:	00 a0 0f 01 00 00    	add    BYTE PTR [rax+0x10f],ah
    171d:	00 00                	add    BYTE PTR [rax],al
    171f:	00 07                	add    BYTE PTR [rdi],al
    1721:	00 00                	add    BYTE PTR [rax],al
    1723:	00 45 00             	add    BYTE PTR [rbp+0x0],al
	...
    172e:	00 00                	add    BYTE PTR [rax],al
    1730:	a8 0f                	test   al,0xf
    1732:	01 00                	add    DWORD PTR [rax],eax
    1734:	00 00                	add    BYTE PTR [rax],al
    1736:	00 00                	add    BYTE PTR [rax],al
    1738:	07                   	(bad)  
    1739:	00 00                	add    BYTE PTR [rax],al
    173b:	00 46 00             	add    BYTE PTR [rsi+0x0],al
	...
    1746:	00 00                	add    BYTE PTR [rax],al
    1748:	b0 0f                	mov    al,0xf
    174a:	01 00                	add    DWORD PTR [rax],eax
    174c:	00 00                	add    BYTE PTR [rax],al
    174e:	00 00                	add    BYTE PTR [rax],al
    1750:	07                   	(bad)  
    1751:	00 00                	add    BYTE PTR [rax],al
    1753:	00 47 00             	add    BYTE PTR [rdi+0x0],al
	...
    175e:	00 00                	add    BYTE PTR [rax],al
    1760:	b8 0f 01 00 00       	mov    eax,0x10f
    1765:	00 00                	add    BYTE PTR [rax],al
    1767:	00 07                	add    BYTE PTR [rdi],al
    1769:	00 00                	add    BYTE PTR [rax],al
    176b:	00 48 00             	add    BYTE PTR [rax+0x0],cl
	...
    1776:	00 00                	add    BYTE PTR [rax],al
    1778:	c0 0f 01             	ror    BYTE PTR [rdi],0x1
    177b:	00 00                	add    BYTE PTR [rax],al
    177d:	00 00                	add    BYTE PTR [rax],al
    177f:	00 07                	add    BYTE PTR [rdi],al
    1781:	00 00                	add    BYTE PTR [rax],al
    1783:	00 4a 00             	add    BYTE PTR [rdx+0x0],cl
	...
    178e:	00 00                	add    BYTE PTR [rax],al
    1790:	c8 0f 01 00          	enter  0x10f,0x0
    1794:	00 00                	add    BYTE PTR [rax],al
    1796:	00 00                	add    BYTE PTR [rax],al
    1798:	07                   	(bad)  
    1799:	00 00                	add    BYTE PTR [rax],al
    179b:	00 4b 00             	add    BYTE PTR [rbx+0x0],cl
	...
    17a6:	00 00                	add    BYTE PTR [rax],al
    17a8:	d0 0f                	ror    BYTE PTR [rdi],1
    17aa:	01 00                	add    DWORD PTR [rax],eax
    17ac:	00 00                	add    BYTE PTR [rax],al
    17ae:	00 00                	add    BYTE PTR [rax],al
    17b0:	07                   	(bad)  
    17b1:	00 00                	add    BYTE PTR [rax],al
    17b3:	00 4c 00 00          	add    BYTE PTR [rax+rax*1+0x0],cl
	...

Disassembly of section .init:

0000000000002000 <_init>:
    2000:	f3 0f 1e fa          	endbr64 
    2004:	48 83 ec 08          	sub    rsp,0x8
    2008:	48 8b 05 c9 ef 00 00 	mov    rax,QWORD PTR [rip+0xefc9]        # 10fd8 <__gmon_start__>
    200f:	48 85 c0             	test   rax,rax
    2012:	74 02                	je     2016 <_init+0x16>
    2014:	ff d0                	call   rax
    2016:	48 83 c4 08          	add    rsp,0x8
    201a:	c3                   	ret    

Disassembly of section .plt:

0000000000002020 <.plt>:
    2020:	ff 35 62 ed 00 00    	push   QWORD PTR [rip+0xed62]        # 10d88 <_GLOBAL_OFFSET_TABLE_+0x8>
    2026:	f2 ff 25 63 ed 00 00 	bnd jmp QWORD PTR [rip+0xed63]        # 10d90 <_GLOBAL_OFFSET_TABLE_+0x10>
    202d:	0f 1f 00             	nop    DWORD PTR [rax]
    2030:	f3 0f 1e fa          	endbr64 
    2034:	68 00 00 00 00       	push   0x0
    2039:	f2 e9 e1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    203f:	90                   	nop
    2040:	f3 0f 1e fa          	endbr64 
    2044:	68 01 00 00 00       	push   0x1
    2049:	f2 e9 d1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    204f:	90                   	nop
    2050:	f3 0f 1e fa          	endbr64 
    2054:	68 02 00 00 00       	push   0x2
    2059:	f2 e9 c1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    205f:	90                   	nop
    2060:	f3 0f 1e fa          	endbr64 
    2064:	68 03 00 00 00       	push   0x3
    2069:	f2 e9 b1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    206f:	90                   	nop
    2070:	f3 0f 1e fa          	endbr64 
    2074:	68 04 00 00 00       	push   0x4
    2079:	f2 e9 a1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    207f:	90                   	nop
    2080:	f3 0f 1e fa          	endbr64 
    2084:	68 05 00 00 00       	push   0x5
    2089:	f2 e9 91 ff ff ff    	bnd jmp 2020 <_init+0x20>
    208f:	90                   	nop
    2090:	f3 0f 1e fa          	endbr64 
    2094:	68 06 00 00 00       	push   0x6
    2099:	f2 e9 81 ff ff ff    	bnd jmp 2020 <_init+0x20>
    209f:	90                   	nop
    20a0:	f3 0f 1e fa          	endbr64 
    20a4:	68 07 00 00 00       	push   0x7
    20a9:	f2 e9 71 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20af:	90                   	nop
    20b0:	f3 0f 1e fa          	endbr64 
    20b4:	68 08 00 00 00       	push   0x8
    20b9:	f2 e9 61 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20bf:	90                   	nop
    20c0:	f3 0f 1e fa          	endbr64 
    20c4:	68 09 00 00 00       	push   0x9
    20c9:	f2 e9 51 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20cf:	90                   	nop
    20d0:	f3 0f 1e fa          	endbr64 
    20d4:	68 0a 00 00 00       	push   0xa
    20d9:	f2 e9 41 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20df:	90                   	nop
    20e0:	f3 0f 1e fa          	endbr64 
    20e4:	68 0b 00 00 00       	push   0xb
    20e9:	f2 e9 31 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20ef:	90                   	nop
    20f0:	f3 0f 1e fa          	endbr64 
    20f4:	68 0c 00 00 00       	push   0xc
    20f9:	f2 e9 21 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20ff:	90                   	nop
    2100:	f3 0f 1e fa          	endbr64 
    2104:	68 0d 00 00 00       	push   0xd
    2109:	f2 e9 11 ff ff ff    	bnd jmp 2020 <_init+0x20>
    210f:	90                   	nop
    2110:	f3 0f 1e fa          	endbr64 
    2114:	68 0e 00 00 00       	push   0xe
    2119:	f2 e9 01 ff ff ff    	bnd jmp 2020 <_init+0x20>
    211f:	90                   	nop
    2120:	f3 0f 1e fa          	endbr64 
    2124:	68 0f 00 00 00       	push   0xf
    2129:	f2 e9 f1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    212f:	90                   	nop
    2130:	f3 0f 1e fa          	endbr64 
    2134:	68 10 00 00 00       	push   0x10
    2139:	f2 e9 e1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    213f:	90                   	nop
    2140:	f3 0f 1e fa          	endbr64 
    2144:	68 11 00 00 00       	push   0x11
    2149:	f2 e9 d1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    214f:	90                   	nop
    2150:	f3 0f 1e fa          	endbr64 
    2154:	68 12 00 00 00       	push   0x12
    2159:	f2 e9 c1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    215f:	90                   	nop
    2160:	f3 0f 1e fa          	endbr64 
    2164:	68 13 00 00 00       	push   0x13
    2169:	f2 e9 b1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    216f:	90                   	nop
    2170:	f3 0f 1e fa          	endbr64 
    2174:	68 14 00 00 00       	push   0x14
    2179:	f2 e9 a1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    217f:	90                   	nop
    2180:	f3 0f 1e fa          	endbr64 
    2184:	68 15 00 00 00       	push   0x15
    2189:	f2 e9 91 fe ff ff    	bnd jmp 2020 <_init+0x20>
    218f:	90                   	nop
    2190:	f3 0f 1e fa          	endbr64 
    2194:	68 16 00 00 00       	push   0x16
    2199:	f2 e9 81 fe ff ff    	bnd jmp 2020 <_init+0x20>
    219f:	90                   	nop
    21a0:	f3 0f 1e fa          	endbr64 
    21a4:	68 17 00 00 00       	push   0x17
    21a9:	f2 e9 71 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21af:	90                   	nop
    21b0:	f3 0f 1e fa          	endbr64 
    21b4:	68 18 00 00 00       	push   0x18
    21b9:	f2 e9 61 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21bf:	90                   	nop
    21c0:	f3 0f 1e fa          	endbr64 
    21c4:	68 19 00 00 00       	push   0x19
    21c9:	f2 e9 51 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21cf:	90                   	nop
    21d0:	f3 0f 1e fa          	endbr64 
    21d4:	68 1a 00 00 00       	push   0x1a
    21d9:	f2 e9 41 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21df:	90                   	nop
    21e0:	f3 0f 1e fa          	endbr64 
    21e4:	68 1b 00 00 00       	push   0x1b
    21e9:	f2 e9 31 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21ef:	90                   	nop
    21f0:	f3 0f 1e fa          	endbr64 
    21f4:	68 1c 00 00 00       	push   0x1c
    21f9:	f2 e9 21 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21ff:	90                   	nop
    2200:	f3 0f 1e fa          	endbr64 
    2204:	68 1d 00 00 00       	push   0x1d
    2209:	f2 e9 11 fe ff ff    	bnd jmp 2020 <_init+0x20>
    220f:	90                   	nop
    2210:	f3 0f 1e fa          	endbr64 
    2214:	68 1e 00 00 00       	push   0x1e
    2219:	f2 e9 01 fe ff ff    	bnd jmp 2020 <_init+0x20>
    221f:	90                   	nop
    2220:	f3 0f 1e fa          	endbr64 
    2224:	68 1f 00 00 00       	push   0x1f
    2229:	f2 e9 f1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    222f:	90                   	nop
    2230:	f3 0f 1e fa          	endbr64 
    2234:	68 20 00 00 00       	push   0x20
    2239:	f2 e9 e1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    223f:	90                   	nop
    2240:	f3 0f 1e fa          	endbr64 
    2244:	68 21 00 00 00       	push   0x21
    2249:	f2 e9 d1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    224f:	90                   	nop
    2250:	f3 0f 1e fa          	endbr64 
    2254:	68 22 00 00 00       	push   0x22
    2259:	f2 e9 c1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    225f:	90                   	nop
    2260:	f3 0f 1e fa          	endbr64 
    2264:	68 23 00 00 00       	push   0x23
    2269:	f2 e9 b1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    226f:	90                   	nop
    2270:	f3 0f 1e fa          	endbr64 
    2274:	68 24 00 00 00       	push   0x24
    2279:	f2 e9 a1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    227f:	90                   	nop
    2280:	f3 0f 1e fa          	endbr64 
    2284:	68 25 00 00 00       	push   0x25
    2289:	f2 e9 91 fd ff ff    	bnd jmp 2020 <_init+0x20>
    228f:	90                   	nop
    2290:	f3 0f 1e fa          	endbr64 
    2294:	68 26 00 00 00       	push   0x26
    2299:	f2 e9 81 fd ff ff    	bnd jmp 2020 <_init+0x20>
    229f:	90                   	nop
    22a0:	f3 0f 1e fa          	endbr64 
    22a4:	68 27 00 00 00       	push   0x27
    22a9:	f2 e9 71 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22af:	90                   	nop
    22b0:	f3 0f 1e fa          	endbr64 
    22b4:	68 28 00 00 00       	push   0x28
    22b9:	f2 e9 61 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22bf:	90                   	nop
    22c0:	f3 0f 1e fa          	endbr64 
    22c4:	68 29 00 00 00       	push   0x29
    22c9:	f2 e9 51 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22cf:	90                   	nop
    22d0:	f3 0f 1e fa          	endbr64 
    22d4:	68 2a 00 00 00       	push   0x2a
    22d9:	f2 e9 41 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22df:	90                   	nop
    22e0:	f3 0f 1e fa          	endbr64 
    22e4:	68 2b 00 00 00       	push   0x2b
    22e9:	f2 e9 31 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22ef:	90                   	nop
    22f0:	f3 0f 1e fa          	endbr64 
    22f4:	68 2c 00 00 00       	push   0x2c
    22f9:	f2 e9 21 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22ff:	90                   	nop
    2300:	f3 0f 1e fa          	endbr64 
    2304:	68 2d 00 00 00       	push   0x2d
    2309:	f2 e9 11 fd ff ff    	bnd jmp 2020 <_init+0x20>
    230f:	90                   	nop
    2310:	f3 0f 1e fa          	endbr64 
    2314:	68 2e 00 00 00       	push   0x2e
    2319:	f2 e9 01 fd ff ff    	bnd jmp 2020 <_init+0x20>
    231f:	90                   	nop
    2320:	f3 0f 1e fa          	endbr64 
    2324:	68 2f 00 00 00       	push   0x2f
    2329:	f2 e9 f1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    232f:	90                   	nop
    2330:	f3 0f 1e fa          	endbr64 
    2334:	68 30 00 00 00       	push   0x30
    2339:	f2 e9 e1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    233f:	90                   	nop
    2340:	f3 0f 1e fa          	endbr64 
    2344:	68 31 00 00 00       	push   0x31
    2349:	f2 e9 d1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    234f:	90                   	nop
    2350:	f3 0f 1e fa          	endbr64 
    2354:	68 32 00 00 00       	push   0x32
    2359:	f2 e9 c1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    235f:	90                   	nop
    2360:	f3 0f 1e fa          	endbr64 
    2364:	68 33 00 00 00       	push   0x33
    2369:	f2 e9 b1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    236f:	90                   	nop
    2370:	f3 0f 1e fa          	endbr64 
    2374:	68 34 00 00 00       	push   0x34
    2379:	f2 e9 a1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    237f:	90                   	nop
    2380:	f3 0f 1e fa          	endbr64 
    2384:	68 35 00 00 00       	push   0x35
    2389:	f2 e9 91 fc ff ff    	bnd jmp 2020 <_init+0x20>
    238f:	90                   	nop
    2390:	f3 0f 1e fa          	endbr64 
    2394:	68 36 00 00 00       	push   0x36
    2399:	f2 e9 81 fc ff ff    	bnd jmp 2020 <_init+0x20>
    239f:	90                   	nop
    23a0:	f3 0f 1e fa          	endbr64 
    23a4:	68 37 00 00 00       	push   0x37
    23a9:	f2 e9 71 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23af:	90                   	nop
    23b0:	f3 0f 1e fa          	endbr64 
    23b4:	68 38 00 00 00       	push   0x38
    23b9:	f2 e9 61 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23bf:	90                   	nop
    23c0:	f3 0f 1e fa          	endbr64 
    23c4:	68 39 00 00 00       	push   0x39
    23c9:	f2 e9 51 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23cf:	90                   	nop
    23d0:	f3 0f 1e fa          	endbr64 
    23d4:	68 3a 00 00 00       	push   0x3a
    23d9:	f2 e9 41 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23df:	90                   	nop
    23e0:	f3 0f 1e fa          	endbr64 
    23e4:	68 3b 00 00 00       	push   0x3b
    23e9:	f2 e9 31 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23ef:	90                   	nop
    23f0:	f3 0f 1e fa          	endbr64 
    23f4:	68 3c 00 00 00       	push   0x3c
    23f9:	f2 e9 21 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23ff:	90                   	nop
    2400:	f3 0f 1e fa          	endbr64 
    2404:	68 3d 00 00 00       	push   0x3d
    2409:	f2 e9 11 fc ff ff    	bnd jmp 2020 <_init+0x20>
    240f:	90                   	nop
    2410:	f3 0f 1e fa          	endbr64 
    2414:	68 3e 00 00 00       	push   0x3e
    2419:	f2 e9 01 fc ff ff    	bnd jmp 2020 <_init+0x20>
    241f:	90                   	nop
    2420:	f3 0f 1e fa          	endbr64 
    2424:	68 3f 00 00 00       	push   0x3f
    2429:	f2 e9 f1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    242f:	90                   	nop
    2430:	f3 0f 1e fa          	endbr64 
    2434:	68 40 00 00 00       	push   0x40
    2439:	f2 e9 e1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    243f:	90                   	nop
    2440:	f3 0f 1e fa          	endbr64 
    2444:	68 41 00 00 00       	push   0x41
    2449:	f2 e9 d1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    244f:	90                   	nop
    2450:	f3 0f 1e fa          	endbr64 
    2454:	68 42 00 00 00       	push   0x42
    2459:	f2 e9 c1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    245f:	90                   	nop
    2460:	f3 0f 1e fa          	endbr64 
    2464:	68 43 00 00 00       	push   0x43
    2469:	f2 e9 b1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    246f:	90                   	nop
    2470:	f3 0f 1e fa          	endbr64 
    2474:	68 44 00 00 00       	push   0x44
    2479:	f2 e9 a1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    247f:	90                   	nop
    2480:	f3 0f 1e fa          	endbr64 
    2484:	68 45 00 00 00       	push   0x45
    2489:	f2 e9 91 fb ff ff    	bnd jmp 2020 <_init+0x20>
    248f:	90                   	nop
    2490:	f3 0f 1e fa          	endbr64 
    2494:	68 46 00 00 00       	push   0x46
    2499:	f2 e9 81 fb ff ff    	bnd jmp 2020 <_init+0x20>
    249f:	90                   	nop
    24a0:	f3 0f 1e fa          	endbr64 
    24a4:	68 47 00 00 00       	push   0x47
    24a9:	f2 e9 71 fb ff ff    	bnd jmp 2020 <_init+0x20>
    24af:	90                   	nop

Disassembly of section .plt.got:

00000000000024b0 <__cxa_finalize@plt>:
    24b0:	f3 0f 1e fa          	endbr64 
    24b4:	f2 ff 25 35 eb 00 00 	bnd jmp QWORD PTR [rip+0xeb35]        # 10ff0 <__cxa_finalize@GLIBC_2.2.5>
    24bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

00000000000024c0 <sqlite3_close@plt>:
    24c0:	f3 0f 1e fa          	endbr64 
    24c4:	f2 ff 25 cd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8cd]        # 10d98 <sqlite3_close>
    24cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024d0 <pthread_join@plt>:
    24d0:	f3 0f 1e fa          	endbr64 
    24d4:	f2 ff 25 c5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8c5]        # 10da0 <pthread_join@GLIBC_2.34>
    24db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024e0 <printf@plt>:
    24e0:	f3 0f 1e fa          	endbr64 
    24e4:	f2 ff 25 bd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8bd]        # 10da8 <printf@GLIBC_2.2.5>
    24eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024f0 <memset@plt>:
    24f0:	f3 0f 1e fa          	endbr64 
    24f4:	f2 ff 25 b5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8b5]        # 10db0 <memset@GLIBC_2.2.5>
    24fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002500 <snprintf@plt>:
    2500:	f3 0f 1e fa          	endbr64 
    2504:	f2 ff 25 ad e8 00 00 	bnd jmp QWORD PTR [rip+0xe8ad]        # 10db8 <snprintf@GLIBC_2.2.5>
    250b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002510 <backtrace@plt>:
    2510:	f3 0f 1e fa          	endbr64 
    2514:	f2 ff 25 a5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8a5]        # 10dc0 <backtrace@GLIBC_2.2.5>
    251b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002520 <close@plt>:
    2520:	f3 0f 1e fa          	endbr64 
    2524:	f2 ff 25 9d e8 00 00 	bnd jmp QWORD PTR [rip+0xe89d]        # 10dc8 <close@GLIBC_2.2.5>
    252b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002530 <strncat@plt>:
    2530:	f3 0f 1e fa          	endbr64 
    2534:	f2 ff 25 95 e8 00 00 	bnd jmp QWORD PTR [rip+0xe895]        # 10dd0 <strncat@GLIBC_2.2.5>
    253b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002540 <puts@plt>:
    2540:	f3 0f 1e fa          	endbr64 
    2544:	f2 ff 25 8d e8 00 00 	bnd jmp QWORD PTR [rip+0xe88d]        # 10dd8 <puts@GLIBC_2.2.5>
    254b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002550 <htons@plt>:
    2550:	f3 0f 1e fa          	endbr64 
    2554:	f2 ff 25 85 e8 00 00 	bnd jmp QWORD PTR [rip+0xe885]        # 10de0 <htons@GLIBC_2.2.5>
    255b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002560 <exit@plt>:
    2560:	f3 0f 1e fa          	endbr64 
    2564:	f2 ff 25 7d e8 00 00 	bnd jmp QWORD PTR [rip+0xe87d]        # 10de8 <exit@GLIBC_2.2.5>
    256b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002570 <putchar@plt>:
    2570:	f3 0f 1e fa          	endbr64 
    2574:	f2 ff 25 75 e8 00 00 	bnd jmp QWORD PTR [rip+0xe875]        # 10df0 <putchar@GLIBC_2.2.5>
    257b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002580 <sqlite3_exec@plt>:
    2580:	f3 0f 1e fa          	endbr64 
    2584:	f2 ff 25 6d e8 00 00 	bnd jmp QWORD PTR [rip+0xe86d]        # 10df8 <sqlite3_exec>
    258b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002590 <getopt@plt>:
    2590:	f3 0f 1e fa          	endbr64 
    2594:	f2 ff 25 65 e8 00 00 	bnd jmp QWORD PTR [rip+0xe865]        # 10e00 <getopt@GLIBC_2.2.5>
    259b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025a0 <read@plt>:
    25a0:	f3 0f 1e fa          	endbr64 
    25a4:	f2 ff 25 5d e8 00 00 	bnd jmp QWORD PTR [rip+0xe85d]        # 10e08 <read@GLIBC_2.2.5>
    25ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025b0 <strncmp@plt>:
    25b0:	f3 0f 1e fa          	endbr64 
    25b4:	f2 ff 25 55 e8 00 00 	bnd jmp QWORD PTR [rip+0xe855]        # 10e10 <strncmp@GLIBC_2.2.5>
    25bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025c0 <malloc@plt>:
    25c0:	f3 0f 1e fa          	endbr64 
    25c4:	f2 ff 25 4d e8 00 00 	bnd jmp QWORD PTR [rip+0xe84d]        # 10e18 <malloc@GLIBC_2.2.5>
    25cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025d0 <fopen@plt>:
    25d0:	f3 0f 1e fa          	endbr64 
    25d4:	f2 ff 25 45 e8 00 00 	bnd jmp QWORD PTR [rip+0xe845]        # 10e20 <fopen@GLIBC_2.2.5>
    25db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025e0 <regexec@plt>:
    25e0:	f3 0f 1e fa          	endbr64 
    25e4:	f2 ff 25 3d e8 00 00 	bnd jmp QWORD PTR [rip+0xe83d]        # 10e28 <regexec@GLIBC_2.3.4>
    25eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025f0 <pcap_open_live@plt>:
    25f0:	f3 0f 1e fa          	endbr64 
    25f4:	f2 ff 25 35 e8 00 00 	bnd jmp QWORD PTR [rip+0xe835]        # 10e30 <pcap_open_live>
    25fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002600 <setsockopt@plt>:
    2600:	f3 0f 1e fa          	endbr64 
    2604:	f2 ff 25 2d e8 00 00 	bnd jmp QWORD PTR [rip+0xe82d]        # 10e38 <setsockopt@GLIBC_2.2.5>
    260b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002610 <sqlite3_free@plt>:
    2610:	f3 0f 1e fa          	endbr64 
    2614:	f2 ff 25 25 e8 00 00 	bnd jmp QWORD PTR [rip+0xe825]        # 10e40 <sqlite3_free>
    261b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002620 <getpid@plt>:
    2620:	f3 0f 1e fa          	endbr64 
    2624:	f2 ff 25 1d e8 00 00 	bnd jmp QWORD PTR [rip+0xe81d]        # 10e48 <getpid@GLIBC_2.2.5>
    262b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002630 <lua_settop@plt>:
    2630:	f3 0f 1e fa          	endbr64 
    2634:	f2 ff 25 15 e8 00 00 	bnd jmp QWORD PTR [rip+0xe815]        # 10e50 <lua_settop@LUA_5.3>
    263b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002640 <pthread_create@plt>:
    2640:	f3 0f 1e fa          	endbr64 
    2644:	f2 ff 25 0d e8 00 00 	bnd jmp QWORD PTR [rip+0xe80d]        # 10e58 <pthread_create@GLIBC_2.34>
    264b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002650 <backtrace_symbols@plt>:
    2650:	f3 0f 1e fa          	endbr64 
    2654:	f2 ff 25 05 e8 00 00 	bnd jmp QWORD PTR [rip+0xe805]        # 10e60 <backtrace_symbols@GLIBC_2.2.5>
    265b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002660 <free@plt>:
    2660:	f3 0f 1e fa          	endbr64 
    2664:	f2 ff 25 fd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7fd]        # 10e68 <free@GLIBC_2.2.5>
    266b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002670 <strlen@plt>:
    2670:	f3 0f 1e fa          	endbr64 
    2674:	f2 ff 25 f5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7f5]        # 10e70 <strlen@GLIBC_2.2.5>
    267b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002680 <opendir@plt>:
    2680:	f3 0f 1e fa          	endbr64 
    2684:	f2 ff 25 ed e7 00 00 	bnd jmp QWORD PTR [rip+0xe7ed]        # 10e78 <opendir@GLIBC_2.2.5>
    268b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002690 <listen@plt>:
    2690:	f3 0f 1e fa          	endbr64 
    2694:	f2 ff 25 e5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7e5]        # 10e80 <listen@GLIBC_2.2.5>
    269b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026a0 <readdir@plt>:
    26a0:	f3 0f 1e fa          	endbr64 
    26a4:	f2 ff 25 dd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7dd]        # 10e88 <readdir@GLIBC_2.2.5>
    26ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026b0 <sprintf@plt>:
    26b0:	f3 0f 1e fa          	endbr64 
    26b4:	f2 ff 25 d5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7d5]        # 10e90 <sprintf@GLIBC_2.2.5>
    26bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026c0 <ntohs@plt>:
    26c0:	f3 0f 1e fa          	endbr64 
    26c4:	f2 ff 25 cd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7cd]        # 10e98 <ntohs@GLIBC_2.2.5>
    26cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026d0 <fgetc@plt>:
    26d0:	f3 0f 1e fa          	endbr64 
    26d4:	f2 ff 25 c5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7c5]        # 10ea0 <fgetc@GLIBC_2.2.5>
    26db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026e0 <ntohl@plt>:
    26e0:	f3 0f 1e fa          	endbr64 
    26e4:	f2 ff 25 bd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7bd]        # 10ea8 <ntohl@GLIBC_2.2.5>
    26eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026f0 <sleep@plt>:
    26f0:	f3 0f 1e fa          	endbr64 
    26f4:	f2 ff 25 b5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7b5]        # 10eb0 <sleep@GLIBC_2.2.5>
    26fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002700 <lua_pcallk@plt>:
    2700:	f3 0f 1e fa          	endbr64 
    2704:	f2 ff 25 ad e7 00 00 	bnd jmp QWORD PTR [rip+0xe7ad]        # 10eb8 <lua_pcallk@LUA_5.3>
    270b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002710 <strstr@plt>:
    2710:	f3 0f 1e fa          	endbr64 
    2714:	f2 ff 25 a5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7a5]        # 10ec0 <strstr@GLIBC_2.2.5>
    271b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002720 <strcat@plt>:
    2720:	f3 0f 1e fa          	endbr64 
    2724:	f2 ff 25 9d e7 00 00 	bnd jmp QWORD PTR [rip+0xe79d]        # 10ec8 <strcat@GLIBC_2.2.5>
    272b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002730 <fputs@plt>:
    2730:	f3 0f 1e fa          	endbr64 
    2734:	f2 ff 25 95 e7 00 00 	bnd jmp QWORD PTR [rip+0xe795]        # 10ed0 <fputs@GLIBC_2.2.5>
    273b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002740 <strtol@plt>:
    2740:	f3 0f 1e fa          	endbr64 
    2744:	f2 ff 25 8d e7 00 00 	bnd jmp QWORD PTR [rip+0xe78d]        # 10ed8 <strtol@GLIBC_2.2.5>
    274b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002750 <luaL_loadfilex@plt>:
    2750:	f3 0f 1e fa          	endbr64 
    2754:	f2 ff 25 85 e7 00 00 	bnd jmp QWORD PTR [rip+0xe785]        # 10ee0 <luaL_loadfilex@LUA_5.3>
    275b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002760 <atoi@plt>:
    2760:	f3 0f 1e fa          	endbr64 
    2764:	f2 ff 25 7d e7 00 00 	bnd jmp QWORD PTR [rip+0xe77d]        # 10ee8 <atoi@GLIBC_2.2.5>
    276b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002770 <regcomp@plt>:
    2770:	f3 0f 1e fa          	endbr64 
    2774:	f2 ff 25 75 e7 00 00 	bnd jmp QWORD PTR [rip+0xe775]        # 10ef0 <regcomp@GLIBC_2.2.5>
    277b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002780 <signal@plt>:
    2780:	f3 0f 1e fa          	endbr64 
    2784:	f2 ff 25 6d e7 00 00 	bnd jmp QWORD PTR [rip+0xe76d]        # 10ef8 <signal@GLIBC_2.2.5>
    278b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002790 <strchr@plt>:
    2790:	f3 0f 1e fa          	endbr64 
    2794:	f2 ff 25 65 e7 00 00 	bnd jmp QWORD PTR [rip+0xe765]        # 10f00 <strchr@GLIBC_2.2.5>
    279b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027a0 <lua_gettop@plt>:
    27a0:	f3 0f 1e fa          	endbr64 
    27a4:	f2 ff 25 5d e7 00 00 	bnd jmp QWORD PTR [rip+0xe75d]        # 10f08 <lua_gettop@LUA_5.3>
    27ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027b0 <luaL_newstate@plt>:
    27b0:	f3 0f 1e fa          	endbr64 
    27b4:	f2 ff 25 55 e7 00 00 	bnd jmp QWORD PTR [rip+0xe755]        # 10f10 <luaL_newstate@LUA_5.3>
    27bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027c0 <socket@plt>:
    27c0:	f3 0f 1e fa          	endbr64 
    27c4:	f2 ff 25 4d e7 00 00 	bnd jmp QWORD PTR [rip+0xe74d]        # 10f18 <socket@GLIBC_2.2.5>
    27cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027d0 <luaL_openlibs@plt>:
    27d0:	f3 0f 1e fa          	endbr64 
    27d4:	f2 ff 25 45 e7 00 00 	bnd jmp QWORD PTR [rip+0xe745]        # 10f20 <luaL_openlibs@LUA_5.3>
    27db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027e0 <__stack_chk_fail@plt>:
    27e0:	f3 0f 1e fa          	endbr64 
    27e4:	f2 ff 25 3d e7 00 00 	bnd jmp QWORD PTR [rip+0xe73d]        # 10f28 <__stack_chk_fail@GLIBC_2.4>
    27eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027f0 <strcmp@plt>:
    27f0:	f3 0f 1e fa          	endbr64 
    27f4:	f2 ff 25 35 e7 00 00 	bnd jmp QWORD PTR [rip+0xe735]        # 10f30 <strcmp@GLIBC_2.2.5>
    27fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002800 <send@plt>:
    2800:	f3 0f 1e fa          	endbr64 
    2804:	f2 ff 25 2d e7 00 00 	bnd jmp QWORD PTR [rip+0xe72d]        # 10f38 <send@GLIBC_2.2.5>
    280b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002810 <getline@plt>:
    2810:	f3 0f 1e fa          	endbr64 
    2814:	f2 ff 25 25 e7 00 00 	bnd jmp QWORD PTR [rip+0xe725]        # 10f40 <getline@GLIBC_2.2.5>
    281b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002820 <strcpy@plt>:
    2820:	f3 0f 1e fa          	endbr64 
    2824:	f2 ff 25 1d e7 00 00 	bnd jmp QWORD PTR [rip+0xe71d]        # 10f48 <strcpy@GLIBC_2.2.5>
    282b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002830 <strtok@plt>:
    2830:	f3 0f 1e fa          	endbr64 
    2834:	f2 ff 25 15 e7 00 00 	bnd jmp QWORD PTR [rip+0xe715]        # 10f50 <strtok@GLIBC_2.2.5>
    283b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002840 <lua_close@plt>:
    2840:	f3 0f 1e fa          	endbr64 
    2844:	f2 ff 25 0d e7 00 00 	bnd jmp QWORD PTR [rip+0xe70d]        # 10f58 <lua_close@LUA_5.3>
    284b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002850 <sqlite3_errmsg@plt>:
    2850:	f3 0f 1e fa          	endbr64 
    2854:	f2 ff 25 05 e7 00 00 	bnd jmp QWORD PTR [rip+0xe705]        # 10f60 <sqlite3_errmsg>
    285b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002860 <fclose@plt>:
    2860:	f3 0f 1e fa          	endbr64 
    2864:	f2 ff 25 fd e6 00 00 	bnd jmp QWORD PTR [rip+0xe6fd]        # 10f68 <fclose@GLIBC_2.2.5>
    286b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002870 <strncpy@plt>:
    2870:	f3 0f 1e fa          	endbr64 
    2874:	f2 ff 25 f5 e6 00 00 	bnd jmp QWORD PTR [rip+0xe6f5]        # 10f70 <strncpy@GLIBC_2.2.5>
    287b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002880 <closedir@plt>:
    2880:	f3 0f 1e fa          	endbr64 
    2884:	f2 ff 25 ed e6 00 00 	bnd jmp QWORD PTR [rip+0xe6ed]        # 10f78 <closedir@GLIBC_2.2.5>
    288b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002890 <strcspn@plt>:
    2890:	f3 0f 1e fa          	endbr64 
    2894:	f2 ff 25 e5 e6 00 00 	bnd jmp QWORD PTR [rip+0xe6e5]        # 10f80 <strcspn@GLIBC_2.2.5>
    289b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028a0 <bind@plt>:
    28a0:	f3 0f 1e fa          	endbr64 
    28a4:	f2 ff 25 dd e6 00 00 	bnd jmp QWORD PTR [rip+0xe6dd]        # 10f88 <bind@GLIBC_2.2.5>
    28ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028b0 <pcap_loop@plt>:
    28b0:	f3 0f 1e fa          	endbr64 
    28b4:	f2 ff 25 d5 e6 00 00 	bnd jmp QWORD PTR [rip+0xe6d5]        # 10f90 <pcap_loop>
    28bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028c0 <htonl@plt>:
    28c0:	f3 0f 1e fa          	endbr64 
    28c4:	f2 ff 25 cd e6 00 00 	bnd jmp QWORD PTR [rip+0xe6cd]        # 10f98 <htonl@GLIBC_2.2.5>
    28cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028d0 <perror@plt>:
    28d0:	f3 0f 1e fa          	endbr64 
    28d4:	f2 ff 25 c5 e6 00 00 	bnd jmp QWORD PTR [rip+0xe6c5]        # 10fa0 <perror@GLIBC_2.2.5>
    28db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028e0 <fprintf@plt>:
    28e0:	f3 0f 1e fa          	endbr64 
    28e4:	f2 ff 25 bd e6 00 00 	bnd jmp QWORD PTR [rip+0xe6bd]        # 10fa8 <fprintf@GLIBC_2.2.5>
    28eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028f0 <localtime@plt>:
    28f0:	f3 0f 1e fa          	endbr64 
    28f4:	f2 ff 25 b5 e6 00 00 	bnd jmp QWORD PTR [rip+0xe6b5]        # 10fb0 <localtime@GLIBC_2.2.5>
    28fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002900 <getdelim@plt>:
    2900:	f3 0f 1e fa          	endbr64 
    2904:	f2 ff 25 ad e6 00 00 	bnd jmp QWORD PTR [rip+0xe6ad]        # 10fb8 <getdelim@GLIBC_2.2.5>
    290b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002910 <accept@plt>:
    2910:	f3 0f 1e fa          	endbr64 
    2914:	f2 ff 25 a5 e6 00 00 	bnd jmp QWORD PTR [rip+0xe6a5]        # 10fc0 <accept@GLIBC_2.2.5>
    291b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002920 <sqlite3_open@plt>:
    2920:	f3 0f 1e fa          	endbr64 
    2924:	f2 ff 25 9d e6 00 00 	bnd jmp QWORD PTR [rip+0xe69d]        # 10fc8 <sqlite3_open>
    292b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002930 <time@plt>:
    2930:	f3 0f 1e fa          	endbr64 
    2934:	f2 ff 25 95 e6 00 00 	bnd jmp QWORD PTR [rip+0xe695]        # 10fd0 <time@GLIBC_2.2.5>
    293b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000002940 <_start>:
    2940:	f3 0f 1e fa          	endbr64 
    2944:	31 ed                	xor    ebp,ebp
    2946:	49 89 d1             	mov    r9,rdx
    2949:	5e                   	pop    rsi
    294a:	48 89 e2             	mov    rdx,rsp
    294d:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    2951:	50                   	push   rax
    2952:	54                   	push   rsp
    2953:	45 31 c0             	xor    r8d,r8d
    2956:	31 c9                	xor    ecx,ecx
    2958:	48 8d 3d 74 40 00 00 	lea    rdi,[rip+0x4074]        # 69d3 <main>
    295f:	ff 15 93 e6 00 00    	call   QWORD PTR [rip+0xe693]        # 10ff8 <__libc_start_main@GLIBC_2.34>
    2965:	f4                   	hlt    
    2966:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    296d:	00 00 00 

0000000000002970 <deregister_tm_clones>:
    2970:	48 8d 3d d1 e6 00 00 	lea    rdi,[rip+0xe6d1]        # 11048 <__TMC_END__>
    2977:	48 8d 05 ca e6 00 00 	lea    rax,[rip+0xe6ca]        # 11048 <__TMC_END__>
    297e:	48 39 f8             	cmp    rax,rdi
    2981:	74 15                	je     2998 <deregister_tm_clones+0x28>
    2983:	48 8b 05 56 e6 00 00 	mov    rax,QWORD PTR [rip+0xe656]        # 10fe0 <_ITM_deregisterTMCloneTable>
    298a:	48 85 c0             	test   rax,rax
    298d:	74 09                	je     2998 <deregister_tm_clones+0x28>
    298f:	ff e0                	jmp    rax
    2991:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    2998:	c3                   	ret    
    2999:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000029a0 <register_tm_clones>:
    29a0:	48 8d 3d a1 e6 00 00 	lea    rdi,[rip+0xe6a1]        # 11048 <__TMC_END__>
    29a7:	48 8d 35 9a e6 00 00 	lea    rsi,[rip+0xe69a]        # 11048 <__TMC_END__>
    29ae:	48 29 fe             	sub    rsi,rdi
    29b1:	48 89 f0             	mov    rax,rsi
    29b4:	48 c1 ee 3f          	shr    rsi,0x3f
    29b8:	48 c1 f8 03          	sar    rax,0x3
    29bc:	48 01 c6             	add    rsi,rax
    29bf:	48 d1 fe             	sar    rsi,1
    29c2:	74 14                	je     29d8 <register_tm_clones+0x38>
    29c4:	48 8b 05 1d e6 00 00 	mov    rax,QWORD PTR [rip+0xe61d]        # 10fe8 <_ITM_registerTMCloneTable>
    29cb:	48 85 c0             	test   rax,rax
    29ce:	74 08                	je     29d8 <register_tm_clones+0x38>
    29d0:	ff e0                	jmp    rax
    29d2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    29d8:	c3                   	ret    
    29d9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000029e0 <__do_global_dtors_aux>:
    29e0:	f3 0f 1e fa          	endbr64 
    29e4:	80 3d 7d e6 00 00 00 	cmp    BYTE PTR [rip+0xe67d],0x0        # 11068 <completed.0>
    29eb:	75 2b                	jne    2a18 <__do_global_dtors_aux+0x38>
    29ed:	55                   	push   rbp
    29ee:	48 83 3d fa e5 00 00 	cmp    QWORD PTR [rip+0xe5fa],0x0        # 10ff0 <__cxa_finalize@GLIBC_2.2.5>
    29f5:	00 
    29f6:	48 89 e5             	mov    rbp,rsp
    29f9:	74 0c                	je     2a07 <__do_global_dtors_aux+0x27>
    29fb:	48 8b 3d 06 e6 00 00 	mov    rdi,QWORD PTR [rip+0xe606]        # 11008 <__dso_handle>
    2a02:	e8 a9 fa ff ff       	call   24b0 <__cxa_finalize@plt>
    2a07:	e8 64 ff ff ff       	call   2970 <deregister_tm_clones>
    2a0c:	c6 05 55 e6 00 00 01 	mov    BYTE PTR [rip+0xe655],0x1        # 11068 <completed.0>
    2a13:	5d                   	pop    rbp
    2a14:	c3                   	ret    
    2a15:	0f 1f 00             	nop    DWORD PTR [rax]
    2a18:	c3                   	ret    
    2a19:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002a20 <frame_dummy>:
    2a20:	f3 0f 1e fa          	endbr64 
    2a24:	e9 77 ff ff ff       	jmp    29a0 <register_tm_clones>

0000000000002a29 <add_thread>:
    2a29:	f3 0f 1e fa          	endbr64 
    2a2d:	55                   	push   rbp
    2a2e:	48 89 e5             	mov    rbp,rsp
    2a31:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    2a35:	8b 05 65 e8 00 00    	mov    eax,DWORD PTR [rip+0xe865]        # 112a0 <thread_count>
    2a3b:	8d 50 01             	lea    edx,[rax+0x1]
    2a3e:	89 15 5c e8 00 00    	mov    DWORD PTR [rip+0xe85c],edx        # 112a0 <thread_count>
    2a44:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    2a48:	48 8b 12             	mov    rdx,QWORD PTR [rdx]
    2a4b:	48 98                	cdqe   
    2a4d:	48 8d 0c c5 00 00 00 	lea    rcx,[rax*8+0x0]
    2a54:	00 
    2a55:	48 8d 05 44 e6 00 00 	lea    rax,[rip+0xe644]        # 110a0 <threads>
    2a5c:	48 89 14 01          	mov    QWORD PTR [rcx+rax*1],rdx
    2a60:	90                   	nop
    2a61:	5d                   	pop    rbp
    2a62:	c3                   	ret    

0000000000002a63 <pktmgr>:
    2a63:	f3 0f 1e fa          	endbr64 
    2a67:	55                   	push   rbp
    2a68:	48 89 e5             	mov    rbp,rsp
    2a6b:	53                   	push   rbx
    2a6c:	48 83 ec 38          	sub    rsp,0x38
    2a70:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    2a74:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    2a78:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    2a7c:	b8 00 00 00 00       	mov    eax,0x0
    2a81:	e8 4e 8f 00 00       	call   b9d4 <pps_monitor>
    2a86:	0f b6 05 d7 74 10 00 	movzx  eax,BYTE PTR [rip+0x1074d7]        # 109f64 <packet_print>
    2a8d:	84 c0                	test   al,al
    2a8f:	74 0c                	je     2a9d <pktmgr+0x3a>
    2a91:	48 8d 3d b8 95 00 00 	lea    rdi,[rip+0x95b8]        # c050 <_IO_stdin_used+0x50>
    2a98:	e8 a3 fa ff ff       	call   2540 <puts@plt>
    2a9d:	8b 05 01 e8 00 00    	mov    eax,DWORD PTR [rip+0xe801]        # 112a4 <total_pkt_captured>
    2aa3:	83 c0 01             	add    eax,0x1
    2aa6:	89 05 f8 e7 00 00    	mov    DWORD PTR [rip+0xe7f8],eax        # 112a4 <total_pkt_captured>
    2aac:	8b 05 0e e8 00 00    	mov    eax,DWORD PTR [rip+0xe80e]        # 112c0 <pkt_counter>
    2ab2:	83 c0 01             	add    eax,0x1
    2ab5:	89 05 05 e8 00 00    	mov    DWORD PTR [rip+0xe805],eax        # 112c0 <pkt_counter>
    2abb:	8b 15 ff e7 00 00    	mov    edx,DWORD PTR [rip+0xe7ff]        # 112c0 <pkt_counter>
    2ac1:	8b 05 99 74 10 00    	mov    eax,DWORD PTR [rip+0x107499]        # 109f60 <clean_delay_pkts>
    2ac7:	39 c2                	cmp    edx,eax
    2ac9:	72 0a                	jb     2ad5 <pktmgr+0x72>
    2acb:	c7 05 eb e7 00 00 00 	mov    DWORD PTR [rip+0xe7eb],0x0        # 112c0 <pkt_counter>
    2ad2:	00 00 00 
    2ad5:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2ad9:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    2add:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2ae1:	0f b7 40 0c          	movzx  eax,WORD PTR [rax+0xc]
    2ae5:	0f b7 c0             	movzx  eax,ax
    2ae8:	3d 86 dd 00 00       	cmp    eax,0xdd86
    2aed:	74 46                	je     2b35 <pktmgr+0xd2>
    2aef:	3d 86 dd 00 00       	cmp    eax,0xdd86
    2af4:	7f 77                	jg     2b6d <pktmgr+0x10a>
    2af6:	3d 80 35 00 00       	cmp    eax,0x3580
    2afb:	74 23                	je     2b20 <pktmgr+0xbd>
    2afd:	3d 80 35 00 00       	cmp    eax,0x3580
    2b02:	7f 69                	jg     2b6d <pktmgr+0x10a>
    2b04:	3d 08 06 00 00       	cmp    eax,0x608
    2b09:	74 15                	je     2b20 <pktmgr+0xbd>
    2b0b:	3d 08 06 00 00       	cmp    eax,0x608
    2b10:	7f 5b                	jg     2b6d <pktmgr+0x10a>
    2b12:	83 f8 08             	cmp    eax,0x8
    2b15:	74 33                	je     2b4a <pktmgr+0xe7>
    2b17:	3d 90 00 00 00       	cmp    eax,0x90
    2b1c:	74 41                	je     2b5f <pktmgr+0xfc>
    2b1e:	eb 4d                	jmp    2b6d <pktmgr+0x10a>
    2b20:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2b24:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2b28:	48 89 d6             	mov    rsi,rdx
    2b2b:	48 89 c7             	mov    rdi,rax
    2b2e:	e8 86 00 00 00       	call   2bb9 <arpdecode>
    2b33:	eb 7d                	jmp    2bb2 <pktmgr+0x14f>
    2b35:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2b39:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2b3d:	48 89 d6             	mov    rsi,rdx
    2b40:	48 89 c7             	mov    rdi,rax
    2b43:	e8 1f 88 00 00       	call   b367 <ip6decode>
    2b48:	eb 68                	jmp    2bb2 <pktmgr+0x14f>
    2b4a:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2b4e:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2b52:	48 89 d6             	mov    rsi,rdx
    2b55:	48 89 c7             	mov    rdi,rax
    2b58:	e8 56 0b 00 00       	call   36b3 <ipv4pktmgr>
    2b5d:	eb 53                	jmp    2bb2 <pktmgr+0x14f>
    2b5f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2b63:	48 89 c7             	mov    rdi,rax
    2b66:	e8 42 03 00 00       	call   2ead <loopback_ctp_decode>
    2b6b:	eb 45                	jmp    2bb2 <pktmgr+0x14f>
    2b6d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2b71:	48 89 c7             	mov    rdi,rax
    2b74:	e8 f5 04 00 00       	call   306e <uc_mac_ntoa>
    2b79:	48 89 c3             	mov    rbx,rax
    2b7c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2b80:	48 83 c0 06          	add    rax,0x6
    2b84:	48 89 c7             	mov    rdi,rax
    2b87:	e8 e2 04 00 00       	call   306e <uc_mac_ntoa>
    2b8c:	41 b9 ff ff ff ff    	mov    r9d,0xffffffff
    2b92:	41 b8 ff ff ff ff    	mov    r8d,0xffffffff
    2b98:	48 89 d9             	mov    rcx,rbx
    2b9b:	48 89 c2             	mov    rdx,rax
    2b9e:	48 8d 35 f3 94 00 00 	lea    rsi,[rip+0x94f3]        # c098 <_IO_stdin_used+0x98>
    2ba5:	48 8d 3d 1e 95 00 00 	lea    rdi,[rip+0x951e]        # c0ca <_IO_stdin_used+0xca>
    2bac:	e8 3a 68 00 00       	call   93eb <lfprintf>
    2bb1:	90                   	nop
    2bb2:	90                   	nop
    2bb3:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    2bb7:	c9                   	leave  
    2bb8:	c3                   	ret    

0000000000002bb9 <arpdecode>:
    2bb9:	f3 0f 1e fa          	endbr64 
    2bbd:	55                   	push   rbp
    2bbe:	48 89 e5             	mov    rbp,rsp
    2bc1:	48 81 ec 50 03 00 00 	sub    rsp,0x350
    2bc8:	48 89 bd b8 fc ff ff 	mov    QWORD PTR [rbp-0x348],rdi
    2bcf:	48 89 b5 b0 fc ff ff 	mov    QWORD PTR [rbp-0x350],rsi
    2bd6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2bdd:	00 00 
    2bdf:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2be3:	31 c0                	xor    eax,eax
    2be5:	0f b6 05 78 73 10 00 	movzx  eax,BYTE PTR [rip+0x107378]        # 109f64 <packet_print>
    2bec:	84 c0                	test   al,al
    2bee:	74 18                	je     2c08 <arpdecode+0x4f>
    2bf0:	48 8d 35 f1 94 00 00 	lea    rsi,[rip+0x94f1]        # c0e8 <_IO_stdin_used+0xe8>
    2bf7:	48 8d 3d f2 94 00 00 	lea    rdi,[rip+0x94f2]        # c0f0 <_IO_stdin_used+0xf0>
    2bfe:	b8 00 00 00 00       	mov    eax,0x0
    2c03:	e8 d8 f8 ff ff       	call   24e0 <printf@plt>
    2c08:	48 8b 85 b8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x348]
    2c0f:	48 83 c0 0e          	add    rax,0xe
    2c13:	48 89 85 c8 fc ff ff 	mov    QWORD PTR [rbp-0x338],rax
    2c1a:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2c21:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    2c25:	0f b7 c0             	movzx  eax,ax
    2c28:	3d 00 18 00 00       	cmp    eax,0x1800
    2c2d:	74 35                	je     2c64 <arpdecode+0xab>
    2c2f:	3d 00 18 00 00       	cmp    eax,0x1800
    2c34:	0f 8f 1d 02 00 00    	jg     2e57 <arpdecode+0x29e>
    2c3a:	3d 00 02 00 00       	cmp    eax,0x200
    2c3f:	0f 84 eb 00 00 00    	je     2d30 <arpdecode+0x177>
    2c45:	3d 00 02 00 00       	cmp    eax,0x200
    2c4a:	0f 8f 07 02 00 00    	jg     2e57 <arpdecode+0x29e>
    2c50:	83 f8 02             	cmp    eax,0x2
    2c53:	0f 84 d7 00 00 00    	je     2d30 <arpdecode+0x177>
    2c59:	3d 00 01 00 00       	cmp    eax,0x100
    2c5e:	0f 85 f3 01 00 00    	jne    2e57 <arpdecode+0x29e>
    2c64:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2c6b:	48 83 c0 18          	add    rax,0x18
    2c6f:	48 89 c7             	mov    rdi,rax
    2c72:	e8 9d 04 00 00       	call   3114 <u8_ipv4_ntoa>
    2c77:	48 89 c1             	mov    rcx,rax
    2c7a:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2c7e:	ba 20 00 00 00       	mov    edx,0x20
    2c83:	48 89 ce             	mov    rsi,rcx
    2c86:	48 89 c7             	mov    rdi,rax
    2c89:	e8 e2 fb ff ff       	call   2870 <strncpy@plt>
    2c8e:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2c95:	48 83 c0 0e          	add    rax,0xe
    2c99:	48 89 c7             	mov    rdi,rax
    2c9c:	e8 73 04 00 00       	call   3114 <u8_ipv4_ntoa>
    2ca1:	48 89 c1             	mov    rcx,rax
    2ca4:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2ca8:	ba 20 00 00 00       	mov    edx,0x20
    2cad:	48 89 ce             	mov    rsi,rcx
    2cb0:	48 89 c7             	mov    rdi,rax
    2cb3:	e8 b8 fb ff ff       	call   2870 <strncpy@plt>
    2cb8:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2cbc:	ba 05 00 00 00       	mov    edx,0x5
    2cc1:	48 8d 35 2b 94 00 00 	lea    rsi,[rip+0x942b]        # c0f3 <_IO_stdin_used+0xf3>
    2cc8:	48 89 c7             	mov    rdi,rax
    2ccb:	e8 e0 f8 ff ff       	call   25b0 <strncmp@plt>
    2cd0:	85 c0                	test   eax,eax
    2cd2:	75 2c                	jne    2d00 <arpdecode+0x147>
    2cd4:	0f b6 05 89 72 10 00 	movzx  eax,BYTE PTR [rip+0x107289]        # 109f64 <packet_print>
    2cdb:	84 c0                	test   al,al
    2cdd:	0f 84 97 01 00 00    	je     2e7a <arpdecode+0x2c1>
    2ce3:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2ce7:	48 89 c6             	mov    rsi,rax
    2cea:	48 8d 3d 0f 94 00 00 	lea    rdi,[rip+0x940f]        # c100 <_IO_stdin_used+0x100>
    2cf1:	b8 00 00 00 00       	mov    eax,0x0
    2cf6:	e8 e5 f7 ff ff       	call   24e0 <printf@plt>
    2cfb:	e9 7a 01 00 00       	jmp    2e7a <arpdecode+0x2c1>
    2d00:	0f b6 05 5d 72 10 00 	movzx  eax,BYTE PTR [rip+0x10725d]        # 109f64 <packet_print>
    2d07:	84 c0                	test   al,al
    2d09:	0f 84 6b 01 00 00    	je     2e7a <arpdecode+0x2c1>
    2d0f:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2d13:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d17:	48 89 c6             	mov    rsi,rax
    2d1a:	48 8d 3d ff 93 00 00 	lea    rdi,[rip+0x93ff]        # c120 <_IO_stdin_used+0x120>
    2d21:	b8 00 00 00 00       	mov    eax,0x0
    2d26:	e8 b5 f7 ff ff       	call   24e0 <printf@plt>
    2d2b:	e9 4a 01 00 00       	jmp    2e7a <arpdecode+0x2c1>
    2d30:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2d37:	48 83 c0 08          	add    rax,0x8
    2d3b:	48 89 c7             	mov    rdi,rax
    2d3e:	e8 7d 02 00 00       	call   2fc0 <mac_ntoa>
    2d43:	48 89 c1             	mov    rcx,rax
    2d46:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2d4a:	ba 40 00 00 00       	mov    edx,0x40
    2d4f:	48 89 ce             	mov    rsi,rcx
    2d52:	48 89 c7             	mov    rdi,rax
    2d55:	e8 16 fb ff ff       	call   2870 <strncpy@plt>
    2d5a:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2d61:	48 83 c0 0e          	add    rax,0xe
    2d65:	48 89 c7             	mov    rdi,rax
    2d68:	e8 a7 03 00 00       	call   3114 <u8_ipv4_ntoa>
    2d6d:	48 89 c1             	mov    rcx,rax
    2d70:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d74:	ba 20 00 00 00       	mov    edx,0x20
    2d79:	48 89 ce             	mov    rsi,rcx
    2d7c:	48 89 c7             	mov    rdi,rax
    2d7f:	e8 ec fa ff ff       	call   2870 <strncpy@plt>
    2d84:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2d88:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d8c:	48 89 d6             	mov    rsi,rdx
    2d8f:	48 89 c7             	mov    rdi,rax
    2d92:	e8 97 50 00 00       	call   7e2e <entry_exists>
    2d97:	83 f8 ff             	cmp    eax,0xffffffff
    2d9a:	74 15                	je     2db1 <arpdecode+0x1f8>
    2d9c:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2da0:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2da4:	48 89 d6             	mov    rsi,rdx
    2da7:	48 89 c7             	mov    rdi,rax
    2daa:	e8 2c 4f 00 00       	call   7cdb <compare_entries>
    2daf:	eb 7d                	jmp    2e2e <arpdecode+0x275>
    2db1:	0f b6 05 69 71 10 00 	movzx  eax,BYTE PTR [rip+0x107169]        # 109f21 <use_sqlite>
    2db8:	84 c0                	test   al,al
    2dba:	74 5f                	je     2e1b <arpdecode+0x262>
    2dbc:	c7 85 f4 fc ff ff 00 	mov    DWORD PTR [rbp-0x30c],0x0
    2dc3:	00 00 00 
    2dc6:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    2dca:	48 8d 85 d0 fc ff ff 	lea    rax,[rbp-0x330]
    2dd1:	48 89 d6             	mov    rsi,rdx
    2dd4:	48 89 c7             	mov    rdi,rax
    2dd7:	e8 44 fa ff ff       	call   2820 <strcpy@plt>
    2ddc:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2de0:	48 8d 95 d0 fc ff ff 	lea    rdx,[rbp-0x330]
    2de7:	48 83 c2 10          	add    rdx,0x10
    2deb:	48 89 c6             	mov    rsi,rax
    2dee:	48 89 d7             	mov    rdi,rdx
    2df1:	e8 2a fa ff ff       	call   2820 <strcpy@plt>
    2df6:	48 8d 95 d0 fc ff ff 	lea    rdx,[rbp-0x330]
    2dfd:	48 8d 85 c0 fc ff ff 	lea    rax,[rbp-0x340]
    2e04:	48 89 d1             	mov    rcx,rdx
    2e07:	48 8d 15 2d 55 00 00 	lea    rdx,[rip+0x552d]        # 833b <update_db>
    2e0e:	be 00 00 00 00       	mov    esi,0x0
    2e13:	48 89 c7             	mov    rdi,rax
    2e16:	e8 25 f8 ff ff       	call   2640 <pthread_create@plt>
    2e1b:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2e1f:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2e23:	48 89 d6             	mov    rsi,rdx
    2e26:	48 89 c7             	mov    rdi,rax
    2e29:	e8 8c 4f 00 00       	call   7dba <add_entry>
    2e2e:	0f b6 05 2f 71 10 00 	movzx  eax,BYTE PTR [rip+0x10712f]        # 109f64 <packet_print>
    2e35:	84 c0                	test   al,al
    2e37:	74 44                	je     2e7d <arpdecode+0x2c4>
    2e39:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2e3d:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2e41:	48 89 c6             	mov    rsi,rax
    2e44:	48 8d 3d fd 92 00 00 	lea    rdi,[rip+0x92fd]        # c148 <_IO_stdin_used+0x148>
    2e4b:	b8 00 00 00 00       	mov    eax,0x0
    2e50:	e8 8b f6 ff ff       	call   24e0 <printf@plt>
    2e55:	eb 26                	jmp    2e7d <arpdecode+0x2c4>
    2e57:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2e5e:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    2e62:	0f b7 c0             	movzx  eax,ax
    2e65:	89 c6                	mov    esi,eax
    2e67:	48 8d 3d f9 92 00 00 	lea    rdi,[rip+0x92f9]        # c167 <_IO_stdin_used+0x167>
    2e6e:	b8 00 00 00 00       	mov    eax,0x0
    2e73:	e8 68 f6 ff ff       	call   24e0 <printf@plt>
    2e78:	eb 04                	jmp    2e7e <arpdecode+0x2c5>
    2e7a:	90                   	nop
    2e7b:	eb 01                	jmp    2e7e <arpdecode+0x2c5>
    2e7d:	90                   	nop
    2e7e:	48 8d 35 fa 92 00 00 	lea    rsi,[rip+0x92fa]        # c17f <_IO_stdin_used+0x17f>
    2e85:	48 8d 3d 64 92 00 00 	lea    rdi,[rip+0x9264]        # c0f0 <_IO_stdin_used+0xf0>
    2e8c:	b8 00 00 00 00       	mov    eax,0x0
    2e91:	e8 4a f6 ff ff       	call   24e0 <printf@plt>
    2e96:	90                   	nop
    2e97:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2e9b:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    2ea2:	00 00 
    2ea4:	74 05                	je     2eab <arpdecode+0x2f2>
    2ea6:	e8 35 f9 ff ff       	call   27e0 <__stack_chk_fail@plt>
    2eab:	c9                   	leave  
    2eac:	c3                   	ret    

0000000000002ead <loopback_ctp_decode>:
    2ead:	f3 0f 1e fa          	endbr64 
    2eb1:	55                   	push   rbp
    2eb2:	48 89 e5             	mov    rbp,rsp
    2eb5:	48 83 ec 60          	sub    rsp,0x60
    2eb9:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    2ebd:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2ec4:	00 00 
    2ec6:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2eca:	31 c0                	xor    eax,eax
    2ecc:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    2ed0:	48 83 c0 0e          	add    rax,0xe
    2ed4:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    2ed8:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    2edc:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    2ee0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    2ee4:	48 83 c0 06          	add    rax,0x6
    2ee8:	48 89 c7             	mov    rdi,rax
    2eeb:	e8 7e 01 00 00       	call   306e <uc_mac_ntoa>
    2ef0:	48 89 c1             	mov    rcx,rax
    2ef3:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    2ef7:	ba 18 00 00 00       	mov    edx,0x18
    2efc:	48 89 ce             	mov    rsi,rcx
    2eff:	48 89 c7             	mov    rdi,rax
    2f02:	e8 69 f9 ff ff       	call   2870 <strncpy@plt>
    2f07:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    2f0b:	48 89 c7             	mov    rdi,rax
    2f0e:	e8 5b 01 00 00       	call   306e <uc_mac_ntoa>
    2f13:	48 89 c1             	mov    rcx,rax
    2f16:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    2f1a:	ba 18 00 00 00       	mov    edx,0x18
    2f1f:	48 89 ce             	mov    rsi,rcx
    2f22:	48 89 c7             	mov    rdi,rax
    2f25:	e8 46 f9 ff ff       	call   2870 <strncpy@plt>
    2f2a:	0f b6 05 33 70 10 00 	movzx  eax,BYTE PTR [rip+0x107033]        # 109f64 <packet_print>
    2f31:	84 c0                	test   al,al
    2f33:	74 1c                	je     2f51 <loopback_ctp_decode+0xa4>
    2f35:	48 8d 55 e0          	lea    rdx,[rbp-0x20]
    2f39:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    2f3d:	48 89 c6             	mov    rsi,rax
    2f40:	48 8d 3d 3d 92 00 00 	lea    rdi,[rip+0x923d]        # c184 <_IO_stdin_used+0x184>
    2f47:	b8 00 00 00 00       	mov    eax,0x0
    2f4c:	e8 8f f5 ff ff       	call   24e0 <printf@plt>
    2f51:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    2f55:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    2f59:	0f b7 c0             	movzx  eax,ax
    2f5c:	83 f8 01             	cmp    eax,0x1
    2f5f:	75 19                	jne    2f7a <loopback_ctp_decode+0xcd>
    2f61:	0f b6 05 fc 6f 10 00 	movzx  eax,BYTE PTR [rip+0x106ffc]        # 109f64 <packet_print>
    2f68:	84 c0                	test   al,al
    2f6a:	74 39                	je     2fa5 <loopback_ctp_decode+0xf8>
    2f6c:	48 8d 3d 1f 92 00 00 	lea    rdi,[rip+0x921f]        # c192 <_IO_stdin_used+0x192>
    2f73:	e8 c8 f5 ff ff       	call   2540 <puts@plt>
    2f78:	eb 2b                	jmp    2fa5 <loopback_ctp_decode+0xf8>
    2f7a:	0f b6 05 e3 6f 10 00 	movzx  eax,BYTE PTR [rip+0x106fe3]        # 109f64 <packet_print>
    2f81:	84 c0                	test   al,al
    2f83:	74 23                	je     2fa8 <loopback_ctp_decode+0xfb>
    2f85:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    2f89:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    2f8d:	0f b7 c0             	movzx  eax,ax
    2f90:	89 c6                	mov    esi,eax
    2f92:	48 8d 3d 01 92 00 00 	lea    rdi,[rip+0x9201]        # c19a <_IO_stdin_used+0x19a>
    2f99:	b8 00 00 00 00       	mov    eax,0x0
    2f9e:	e8 3d f5 ff ff       	call   24e0 <printf@plt>
    2fa3:	eb 03                	jmp    2fa8 <loopback_ctp_decode+0xfb>
    2fa5:	90                   	nop
    2fa6:	eb 01                	jmp    2fa9 <loopback_ctp_decode+0xfc>
    2fa8:	90                   	nop
    2fa9:	90                   	nop
    2faa:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fae:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    2fb5:	00 00 
    2fb7:	74 05                	je     2fbe <loopback_ctp_decode+0x111>
    2fb9:	e8 22 f8 ff ff       	call   27e0 <__stack_chk_fail@plt>
    2fbe:	c9                   	leave  
    2fbf:	c3                   	ret    

0000000000002fc0 <mac_ntoa>:
    2fc0:	f3 0f 1e fa          	endbr64 
    2fc4:	55                   	push   rbp
    2fc5:	48 89 e5             	mov    rbp,rsp
    2fc8:	48 83 ec 20          	sub    rsp,0x20
    2fcc:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    2fd0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2fd4:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2fd8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fdc:	48 83 c0 05          	add    rax,0x5
    2fe0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fe3:	0f b6 f0             	movzx  esi,al
    2fe6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fea:	48 83 c0 04          	add    rax,0x4
    2fee:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2ff1:	0f b6 c8             	movzx  ecx,al
    2ff4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2ff8:	48 83 c0 03          	add    rax,0x3
    2ffc:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fff:	0f b6 d0             	movzx  edx,al
    3002:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3006:	48 83 c0 02          	add    rax,0x2
    300a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    300d:	44 0f b6 c8          	movzx  r9d,al
    3011:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3015:	48 83 c0 01          	add    rax,0x1
    3019:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    301c:	44 0f b6 c0          	movzx  r8d,al
    3020:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3024:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3027:	0f b6 c0             	movzx  eax,al
    302a:	64 48 8b 3c 25 00 00 	mov    rdi,QWORD PTR fs:0x0
    3031:	00 00 
    3033:	48 81 c7 80 fb ff ff 	add    rdi,0xfffffffffffffb80
    303a:	48 83 ec 08          	sub    rsp,0x8
    303e:	56                   	push   rsi
    303f:	51                   	push   rcx
    3040:	52                   	push   rdx
    3041:	89 c1                	mov    ecx,eax
    3043:	48 8d 15 6e 91 00 00 	lea    rdx,[rip+0x916e]        # c1b8 <_IO_stdin_used+0x1b8>
    304a:	be 80 00 00 00       	mov    esi,0x80
    304f:	b8 00 00 00 00       	mov    eax,0x0
    3054:	e8 a7 f4 ff ff       	call   2500 <snprintf@plt>
    3059:	48 83 c4 20          	add    rsp,0x20
    305d:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3064:	00 00 
    3066:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    306c:	c9                   	leave  
    306d:	c3                   	ret    

000000000000306e <uc_mac_ntoa>:
    306e:	f3 0f 1e fa          	endbr64 
    3072:	55                   	push   rbp
    3073:	48 89 e5             	mov    rbp,rsp
    3076:	48 83 ec 10          	sub    rsp,0x10
    307a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    307e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3082:	48 83 c0 05          	add    rax,0x5
    3086:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3089:	0f b6 f0             	movzx  esi,al
    308c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3090:	48 83 c0 04          	add    rax,0x4
    3094:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3097:	0f b6 c8             	movzx  ecx,al
    309a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    309e:	48 83 c0 03          	add    rax,0x3
    30a2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    30a5:	0f b6 d0             	movzx  edx,al
    30a8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    30ac:	48 83 c0 02          	add    rax,0x2
    30b0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    30b3:	44 0f b6 c8          	movzx  r9d,al
    30b7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    30bb:	48 83 c0 01          	add    rax,0x1
    30bf:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    30c2:	44 0f b6 c0          	movzx  r8d,al
    30c6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    30ca:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    30cd:	0f b6 c0             	movzx  eax,al
    30d0:	64 48 8b 3c 25 00 00 	mov    rdi,QWORD PTR fs:0x0
    30d7:	00 00 
    30d9:	48 81 c7 80 fb ff ff 	add    rdi,0xfffffffffffffb80
    30e0:	48 83 ec 08          	sub    rsp,0x8
    30e4:	56                   	push   rsi
    30e5:	51                   	push   rcx
    30e6:	52                   	push   rdx
    30e7:	89 c1                	mov    ecx,eax
    30e9:	48 8d 15 c8 90 00 00 	lea    rdx,[rip+0x90c8]        # c1b8 <_IO_stdin_used+0x1b8>
    30f0:	be 80 00 00 00       	mov    esi,0x80
    30f5:	b8 00 00 00 00       	mov    eax,0x0
    30fa:	e8 01 f4 ff ff       	call   2500 <snprintf@plt>
    30ff:	48 83 c4 20          	add    rsp,0x20
    3103:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    310a:	00 00 
    310c:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    3112:	c9                   	leave  
    3113:	c3                   	ret    

0000000000003114 <u8_ipv4_ntoa>:
    3114:	f3 0f 1e fa          	endbr64 
    3118:	55                   	push   rbp
    3119:	48 89 e5             	mov    rbp,rsp
    311c:	48 83 ec 20          	sub    rsp,0x20
    3120:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    3124:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    3128:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    312c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3130:	48 83 c0 03          	add    rax,0x3
    3134:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3137:	0f b6 d0             	movzx  edx,al
    313a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    313e:	48 83 c0 02          	add    rax,0x2
    3142:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3145:	44 0f b6 c0          	movzx  r8d,al
    3149:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    314d:	48 83 c0 01          	add    rax,0x1
    3151:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3154:	0f b6 f0             	movzx  esi,al
    3157:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    315b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    315e:	0f b6 c0             	movzx  eax,al
    3161:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    3168:	00 00 
    316a:	48 8d b9 80 fb ff ff 	lea    rdi,[rcx-0x480]
    3171:	48 83 ec 08          	sub    rsp,0x8
    3175:	52                   	push   rdx
    3176:	45 89 c1             	mov    r9d,r8d
    3179:	41 89 f0             	mov    r8d,esi
    317c:	89 c1                	mov    ecx,eax
    317e:	48 8d 15 51 90 00 00 	lea    rdx,[rip+0x9051]        # c1d6 <_IO_stdin_used+0x1d6>
    3185:	be 80 00 00 00       	mov    esi,0x80
    318a:	b8 00 00 00 00       	mov    eax,0x0
    318f:	e8 6c f3 ff ff       	call   2500 <snprintf@plt>
    3194:	48 83 c4 10          	add    rsp,0x10
    3198:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    319f:	00 00 
    31a1:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    31a7:	c9                   	leave  
    31a8:	c3                   	ret    

00000000000031a9 <ipv4_ntoa>:
    31a9:	f3 0f 1e fa          	endbr64 
    31ad:	55                   	push   rbp
    31ae:	48 89 e5             	mov    rbp,rsp
    31b1:	48 83 ec 20          	sub    rsp,0x20
    31b5:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    31b8:	48 8d 45 ec          	lea    rax,[rbp-0x14]
    31bc:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    31c0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    31c4:	48 83 c0 03          	add    rax,0x3
    31c8:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31cb:	0f b6 d0             	movzx  edx,al
    31ce:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    31d2:	48 83 c0 02          	add    rax,0x2
    31d6:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31d9:	44 0f b6 c0          	movzx  r8d,al
    31dd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    31e1:	48 83 c0 01          	add    rax,0x1
    31e5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31e8:	0f b6 f0             	movzx  esi,al
    31eb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    31ef:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31f2:	0f b6 c0             	movzx  eax,al
    31f5:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    31fc:	00 00 
    31fe:	48 8d b9 80 fb ff ff 	lea    rdi,[rcx-0x480]
    3205:	48 83 ec 08          	sub    rsp,0x8
    3209:	52                   	push   rdx
    320a:	45 89 c1             	mov    r9d,r8d
    320d:	41 89 f0             	mov    r8d,esi
    3210:	89 c1                	mov    ecx,eax
    3212:	48 8d 15 bd 8f 00 00 	lea    rdx,[rip+0x8fbd]        # c1d6 <_IO_stdin_used+0x1d6>
    3219:	be 80 00 00 00       	mov    esi,0x80
    321e:	b8 00 00 00 00       	mov    eax,0x0
    3223:	e8 d8 f2 ff ff       	call   2500 <snprintf@plt>
    3228:	48 83 c4 10          	add    rsp,0x10
    322c:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3233:	00 00 
    3235:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    323b:	c9                   	leave  
    323c:	c3                   	ret    

000000000000323d <inet6_ntoa>:
    323d:	f3 0f 1e fa          	endbr64 
    3241:	55                   	push   rbp
    3242:	48 89 e5             	mov    rbp,rsp
    3245:	41 57                	push   r15
    3247:	41 56                	push   r14
    3249:	41 55                	push   r13
    324b:	41 54                	push   r12
    324d:	53                   	push   rbx
    324e:	48 83 ec 38          	sub    rsp,0x38
    3252:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    3256:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    325d:	00 00 
    325f:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    3263:	31 c0                	xor    eax,eax
    3265:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    326c:	00 00 
    326e:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    3274:	ba 80 00 00 00       	mov    edx,0x80
    3279:	be 00 00 00 00       	mov    esi,0x0
    327e:	48 89 c7             	mov    rdi,rax
    3281:	e8 6a f2 ff ff       	call   24f0 <memset@plt>
    3286:	48 c7 45 c0 00 00 00 	mov    QWORD PTR [rbp-0x40],0x0
    328d:	00 
    328e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3292:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    3296:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    329a:	48 83 c0 0f          	add    rax,0xf
    329e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32a1:	0f b6 c8             	movzx  ecx,al
    32a4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32a8:	48 83 c0 0e          	add    rax,0xe
    32ac:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32af:	0f b6 f8             	movzx  edi,al
    32b2:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32b6:	48 83 c0 0d          	add    rax,0xd
    32ba:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32bd:	0f b6 c0             	movzx  eax,al
    32c0:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
    32c3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32c7:	48 83 c0 0c          	add    rax,0xc
    32cb:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32ce:	0f b6 d8             	movzx  ebx,al
    32d1:	89 5d b0             	mov    DWORD PTR [rbp-0x50],ebx
    32d4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32d8:	48 83 c0 0b          	add    rax,0xb
    32dc:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32df:	44 0f b6 f8          	movzx  r15d,al
    32e3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32e7:	48 83 c0 0a          	add    rax,0xa
    32eb:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32ee:	44 0f b6 f0          	movzx  r14d,al
    32f2:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32f6:	48 83 c0 09          	add    rax,0x9
    32fa:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32fd:	44 0f b6 e8          	movzx  r13d,al
    3301:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3305:	48 83 c0 08          	add    rax,0x8
    3309:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    330c:	44 0f b6 e0          	movzx  r12d,al
    3310:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3314:	48 83 c0 07          	add    rax,0x7
    3318:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    331b:	0f b6 d8             	movzx  ebx,al
    331e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3322:	48 83 c0 06          	add    rax,0x6
    3326:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3329:	44 0f b6 d8          	movzx  r11d,al
    332d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3331:	48 83 c0 05          	add    rax,0x5
    3335:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3338:	44 0f b6 d0          	movzx  r10d,al
    333c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3340:	48 83 c0 04          	add    rax,0x4
    3344:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3347:	44 0f b6 c8          	movzx  r9d,al
    334b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    334f:	48 83 c0 03          	add    rax,0x3
    3353:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3356:	44 0f b6 c0          	movzx  r8d,al
    335a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    335e:	48 83 c0 02          	add    rax,0x2
    3362:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3365:	0f b6 d0             	movzx  edx,al
    3368:	89 55 ac             	mov    DWORD PTR [rbp-0x54],edx
    336b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    336f:	48 83 c0 01          	add    rax,0x1
    3373:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3376:	0f b6 f0             	movzx  esi,al
    3379:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    337d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3380:	0f b6 d0             	movzx  edx,al
    3383:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    338a:	00 00 
    338c:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    3392:	48 83 ec 08          	sub    rsp,0x8
    3396:	51                   	push   rcx
    3397:	57                   	push   rdi
    3398:	8b 4d b4             	mov    ecx,DWORD PTR [rbp-0x4c]
    339b:	51                   	push   rcx
    339c:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
    339f:	51                   	push   rcx
    33a0:	41 57                	push   r15
    33a2:	41 56                	push   r14
    33a4:	41 55                	push   r13
    33a6:	41 54                	push   r12
    33a8:	53                   	push   rbx
    33a9:	41 53                	push   r11
    33ab:	41 52                	push   r10
    33ad:	41 51                	push   r9
    33af:	41 50                	push   r8
    33b1:	44 8b 4d ac          	mov    r9d,DWORD PTR [rbp-0x54]
    33b5:	41 89 f0             	mov    r8d,esi
    33b8:	89 d1                	mov    ecx,edx
    33ba:	48 8d 15 27 8e 00 00 	lea    rdx,[rip+0x8e27]        # c1e8 <_IO_stdin_used+0x1e8>
    33c1:	be 80 00 00 00       	mov    esi,0x80
    33c6:	48 89 c7             	mov    rdi,rax
    33c9:	b8 00 00 00 00       	mov    eax,0x0
    33ce:	e8 2d f1 ff ff       	call   2500 <snprintf@plt>
    33d3:	48 83 c4 70          	add    rsp,0x70
    33d7:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    33de:	00 00 
    33e0:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    33e6:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    33ea:	64 48 2b 34 25 28 00 	sub    rsi,QWORD PTR fs:0x28
    33f1:	00 00 
    33f3:	74 05                	je     33fa <inet6_ntoa+0x1bd>
    33f5:	e8 e6 f3 ff ff       	call   27e0 <__stack_chk_fail@plt>
    33fa:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    33fe:	5b                   	pop    rbx
    33ff:	41 5c                	pop    r12
    3401:	41 5d                	pop    r13
    3403:	41 5e                	pop    r14
    3405:	41 5f                	pop    r15
    3407:	5d                   	pop    rbp
    3408:	c3                   	ret    

0000000000003409 <get_formated_time>:
    3409:	f3 0f 1e fa          	endbr64 
    340d:	55                   	push   rbp
    340e:	48 89 e5             	mov    rbp,rsp
    3411:	53                   	push   rbx
    3412:	48 83 ec 58          	sub    rsp,0x58
    3416:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    341d:	00 00 
    341f:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    3423:	31 c0                	xor    eax,eax
    3425:	bf ff 00 00 00       	mov    edi,0xff
    342a:	e8 91 f1 ff ff       	call   25c0 <malloc@plt>
    342f:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    3433:	bf 00 00 00 00       	mov    edi,0x0
    3438:	e8 f3 f4 ff ff       	call   2930 <time@plt>
    343d:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    3441:	48 8d 45 a0          	lea    rax,[rbp-0x60]
    3445:	48 89 c7             	mov    rdi,rax
    3448:	e8 a3 f4 ff ff       	call   28f0 <localtime@plt>
    344d:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    3450:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    3454:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
    3458:	48 89 5d b8          	mov    QWORD PTR [rbp-0x48],rbx
    345c:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    3460:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    3464:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    3468:	48 89 5d c8          	mov    QWORD PTR [rbp-0x38],rbx
    346c:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    3470:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    3474:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    3478:	48 89 5d d8          	mov    QWORD PTR [rbp-0x28],rbx
    347c:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    3480:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    3484:	8b 7d b0             	mov    edi,DWORD PTR [rbp-0x50]
    3487:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
    348a:	44 8b 4d b8          	mov    r9d,DWORD PTR [rbp-0x48]
    348e:	44 8b 45 bc          	mov    r8d,DWORD PTR [rbp-0x44]
    3492:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    3495:	8d 48 01             	lea    ecx,[rax+0x1]
    3498:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    349b:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    34a1:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    34a5:	57                   	push   rdi
    34a6:	56                   	push   rsi
    34a7:	48 8d 35 82 8d 00 00 	lea    rsi,[rip+0x8d82]        # c230 <_IO_stdin_used+0x230>
    34ae:	48 89 c7             	mov    rdi,rax
    34b1:	b8 00 00 00 00       	mov    eax,0x0
    34b6:	e8 f5 f1 ff ff       	call   26b0 <sprintf@plt>
    34bb:	48 83 c4 10          	add    rsp,0x10
    34bf:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    34c3:	48 8b 5d e8          	mov    rbx,QWORD PTR [rbp-0x18]
    34c7:	64 48 2b 1c 25 28 00 	sub    rbx,QWORD PTR fs:0x28
    34ce:	00 00 
    34d0:	74 05                	je     34d7 <get_formated_time+0xce>
    34d2:	e8 09 f3 ff ff       	call   27e0 <__stack_chk_fail@plt>
    34d7:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    34db:	c9                   	leave  
    34dc:	c3                   	ret    

00000000000034dd <cb_get_formatted_time>:
    34dd:	f3 0f 1e fa          	endbr64 
    34e1:	55                   	push   rbp
    34e2:	48 89 e5             	mov    rbp,rsp
    34e5:	53                   	push   rbx
    34e6:	48 83 ec 68          	sub    rsp,0x68
    34ea:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    34ee:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    34f5:	00 00 
    34f7:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    34fb:	31 c0                	xor    eax,eax
    34fd:	bf 00 00 00 00       	mov    edi,0x0
    3502:	e8 29 f4 ff ff       	call   2930 <time@plt>
    3507:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    350b:	48 8d 45 a8          	lea    rax,[rbp-0x58]
    350f:	48 89 c7             	mov    rdi,rax
    3512:	e8 d9 f3 ff ff       	call   28f0 <localtime@plt>
    3517:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    351a:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    351e:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
    3522:	48 89 5d b8          	mov    QWORD PTR [rbp-0x48],rbx
    3526:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    352a:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    352e:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    3532:	48 89 5d c8          	mov    QWORD PTR [rbp-0x38],rbx
    3536:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    353a:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    353e:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    3542:	48 89 5d d8          	mov    QWORD PTR [rbp-0x28],rbx
    3546:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    354a:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    354e:	8b 7d b0             	mov    edi,DWORD PTR [rbp-0x50]
    3551:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
    3554:	44 8b 4d b8          	mov    r9d,DWORD PTR [rbp-0x48]
    3558:	44 8b 45 bc          	mov    r8d,DWORD PTR [rbp-0x44]
    355c:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    355f:	8d 48 01             	lea    ecx,[rax+0x1]
    3562:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    3565:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    356b:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    356f:	57                   	push   rdi
    3570:	56                   	push   rsi
    3571:	48 8d 35 b8 8c 00 00 	lea    rsi,[rip+0x8cb8]        # c230 <_IO_stdin_used+0x230>
    3578:	48 89 c7             	mov    rdi,rax
    357b:	b8 00 00 00 00       	mov    eax,0x0
    3580:	e8 2b f1 ff ff       	call   26b0 <sprintf@plt>
    3585:	48 83 c4 10          	add    rsp,0x10
    3589:	90                   	nop
    358a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    358e:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    3595:	00 00 
    3597:	74 05                	je     359e <cb_get_formatted_time+0xc1>
    3599:	e8 42 f2 ff ff       	call   27e0 <__stack_chk_fail@plt>
    359e:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    35a2:	c9                   	leave  
    35a3:	c3                   	ret    

00000000000035a4 <strloc>:
    35a4:	f3 0f 1e fa          	endbr64 
    35a8:	55                   	push   rbp
    35a9:	48 89 e5             	mov    rbp,rsp
    35ac:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    35b0:	89 f0                	mov    eax,esi
    35b2:	88 45 e4             	mov    BYTE PTR [rbp-0x1c],al
    35b5:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    35bc:	eb 1e                	jmp    35dc <strloc+0x38>
    35be:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    35c1:	48 63 d0             	movsxd rdx,eax
    35c4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    35c8:	48 01 d0             	add    rax,rdx
    35cb:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    35ce:	38 45 e4             	cmp    BYTE PTR [rbp-0x1c],al
    35d1:	75 05                	jne    35d8 <strloc+0x34>
    35d3:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    35d6:	eb 1d                	jmp    35f5 <strloc+0x51>
    35d8:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    35dc:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    35df:	48 63 d0             	movsxd rdx,eax
    35e2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    35e6:	48 01 d0             	add    rax,rdx
    35e9:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    35ec:	84 c0                	test   al,al
    35ee:	75 ce                	jne    35be <strloc+0x1a>
    35f0:	b8 ff ff ff ff       	mov    eax,0xffffffff
    35f5:	5d                   	pop    rbp
    35f6:	c3                   	ret    

00000000000035f7 <fail>:
    35f7:	f3 0f 1e fa          	endbr64 
    35fb:	55                   	push   rbp
    35fc:	48 89 e5             	mov    rbp,rsp
    35ff:	48 83 ec 10          	sub    rsp,0x10
    3603:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    3607:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    360b:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    360f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3613:	48 89 c6             	mov    rsi,rax
    3616:	48 8d 3d 2f 8c 00 00 	lea    rdi,[rip+0x8c2f]        # c24c <_IO_stdin_used+0x24c>
    361d:	b8 00 00 00 00       	mov    eax,0x0
    3622:	e8 b9 ee ff ff       	call   24e0 <printf@plt>
    3627:	90                   	nop
    3628:	c9                   	leave  
    3629:	c3                   	ret    

000000000000362a <char_is_printable>:
    362a:	f3 0f 1e fa          	endbr64 
    362e:	55                   	push   rbp
    362f:	48 89 e5             	mov    rbp,rsp
    3632:	89 f8                	mov    eax,edi
    3634:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
    3637:	80 7d fc 1f          	cmp    BYTE PTR [rbp-0x4],0x1f
    363b:	7f 07                	jg     3644 <char_is_printable+0x1a>
    363d:	b8 00 00 00 00       	mov    eax,0x0
    3642:	eb 05                	jmp    3649 <char_is_printable+0x1f>
    3644:	b8 01 00 00 00       	mov    eax,0x1
    3649:	5d                   	pop    rbp
    364a:	c3                   	ret    

000000000000364b <test_string_arr_print>:
    364b:	f3 0f 1e fa          	endbr64 
    364f:	55                   	push   rbp
    3650:	48 89 e5             	mov    rbp,rsp
    3653:	53                   	push   rbx
    3654:	48 83 ec 28          	sub    rsp,0x28
    3658:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    365c:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    3663:	eb 2c                	jmp    3691 <test_string_arr_print+0x46>
    3665:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    3668:	48 63 d0             	movsxd rdx,eax
    366b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    366f:	48 01 d0             	add    rax,rdx
    3672:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3675:	0f be c0             	movsx  eax,al
    3678:	89 c7                	mov    edi,eax
    367a:	e8 ab ff ff ff       	call   362a <char_is_printable>
    367f:	83 f0 01             	xor    eax,0x1
    3682:	84 c0                	test   al,al
    3684:	74 07                	je     368d <test_string_arr_print+0x42>
    3686:	b8 00 00 00 00       	mov    eax,0x0
    368b:	eb 20                	jmp    36ad <test_string_arr_print+0x62>
    368d:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    3691:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    3694:	48 63 d8             	movsxd rbx,eax
    3697:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    369b:	48 89 c7             	mov    rdi,rax
    369e:	e8 cd ef ff ff       	call   2670 <strlen@plt>
    36a3:	48 39 c3             	cmp    rbx,rax
    36a6:	72 bd                	jb     3665 <test_string_arr_print+0x1a>
    36a8:	b8 01 00 00 00       	mov    eax,0x1
    36ad:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    36b1:	c9                   	leave  
    36b2:	c3                   	ret    

00000000000036b3 <ipv4pktmgr>:
    36b3:	f3 0f 1e fa          	endbr64 
    36b7:	55                   	push   rbp
    36b8:	48 89 e5             	mov    rbp,rsp
    36bb:	48 81 ec e0 04 00 00 	sub    rsp,0x4e0
    36c2:	48 89 bd 28 fb ff ff 	mov    QWORD PTR [rbp-0x4d8],rdi
    36c9:	48 89 b5 20 fb ff ff 	mov    QWORD PTR [rbp-0x4e0],rsi
    36d0:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    36d7:	00 00 
    36d9:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    36dd:	31 c0                	xor    eax,eax
    36df:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    36e6:	48 83 c0 0e          	add    rax,0xe
    36ea:	48 89 85 48 fb ff ff 	mov    QWORD PTR [rbp-0x4b8],rax
    36f1:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    36f8:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    36fb:	89 c7                	mov    edi,eax
    36fd:	e8 de ef ff ff       	call   26e0 <ntohl@plt>
    3702:	89 85 6c fb ff ff    	mov    DWORD PTR [rbp-0x494],eax
    3708:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    370f:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    3712:	89 c7                	mov    edi,eax
    3714:	e8 c7 ef ff ff       	call   26e0 <ntohl@plt>
    3719:	89 85 68 fb ff ff    	mov    DWORD PTR [rbp-0x498],eax
    371f:	8b 95 68 fb ff ff    	mov    edx,DWORD PTR [rbp-0x498]
    3725:	8b 05 9d 68 10 00    	mov    eax,DWORD PTR [rip+0x10689d]        # 109fc8 <homenetmask>
    372b:	21 d0                	and    eax,edx
    372d:	89 85 3c fb ff ff    	mov    DWORD PTR [rbp-0x4c4],eax
    3733:	8b 95 6c fb ff ff    	mov    edx,DWORD PTR [rbp-0x494]
    3739:	8b 05 89 68 10 00    	mov    eax,DWORD PTR [rip+0x106889]        # 109fc8 <homenetmask>
    373f:	21 d0                	and    eax,edx
    3741:	89 85 40 fb ff ff    	mov    DWORD PTR [rbp-0x4c0],eax
    3747:	8b 05 77 68 10 00    	mov    eax,DWORD PTR [rip+0x106877]        # 109fc4 <homenet>
    374d:	39 85 3c fb ff ff    	cmp    DWORD PTR [rbp-0x4c4],eax
    3753:	75 0c                	jne    3761 <ipv4pktmgr+0xae>
    3755:	c7 85 70 fb ff ff 45 	mov    DWORD PTR [rbp-0x490],0x45
    375c:	00 00 00 
    375f:	eb 24                	jmp    3785 <ipv4pktmgr+0xd2>
    3761:	8b 05 5d 68 10 00    	mov    eax,DWORD PTR [rip+0x10685d]        # 109fc4 <homenet>
    3767:	39 85 40 fb ff ff    	cmp    DWORD PTR [rbp-0x4c0],eax
    376d:	75 0c                	jne    377b <ipv4pktmgr+0xc8>
    376f:	c7 85 70 fb ff ff 46 	mov    DWORD PTR [rbp-0x490],0x46
    3776:	00 00 00 
    3779:	eb 0a                	jmp    3785 <ipv4pktmgr+0xd2>
    377b:	c7 85 70 fb ff ff 47 	mov    DWORD PTR [rbp-0x490],0x47
    3782:	00 00 00 
    3785:	48 8b 85 20 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4e0]
    378c:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    378f:	89 85 80 fb ff ff    	mov    DWORD PTR [rbp-0x480],eax
    3795:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    379c:	48 89 85 a0 fb ff ff 	mov    QWORD PTR [rbp-0x460],rax
    37a3:	48 8b 85 20 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4e0]
    37aa:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    37ad:	48 8b 95 28 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4d8]
    37b4:	48 83 c2 0e          	add    rdx,0xe
    37b8:	0f b6 12             	movzx  edx,BYTE PTR [rdx]
    37bb:	83 e2 0f             	and    edx,0xf
    37be:	0f b6 d2             	movzx  edx,dl
    37c1:	c1 e2 02             	shl    edx,0x2
    37c4:	29 d0                	sub    eax,edx
    37c6:	83 e8 0e             	sub    eax,0xe
    37c9:	89 85 44 fb ff ff    	mov    DWORD PTR [rbp-0x4bc],eax
    37cf:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    37d6:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    37d9:	89 c7                	mov    edi,eax
    37db:	e8 c9 f9 ff ff       	call   31a9 <ipv4_ntoa>
    37e0:	48 89 c1             	mov    rcx,rax
    37e3:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    37ea:	ba 10 00 00 00       	mov    edx,0x10
    37ef:	48 89 ce             	mov    rsi,rcx
    37f2:	48 89 c7             	mov    rdi,rax
    37f5:	e8 76 f0 ff ff       	call   2870 <strncpy@plt>
    37fa:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    3801:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    3804:	89 c7                	mov    edi,eax
    3806:	e8 9e f9 ff ff       	call   31a9 <ipv4_ntoa>
    380b:	48 89 c1             	mov    rcx,rax
    380e:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    3815:	ba 10 00 00 00       	mov    edx,0x10
    381a:	48 89 ce             	mov    rsi,rcx
    381d:	48 89 c7             	mov    rdi,rax
    3820:	e8 4b f0 ff ff       	call   2870 <strncpy@plt>
    3825:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    382c:	48 89 c7             	mov    rdi,rax
    382f:	e8 76 42 00 00       	call   7aaa <init_member>
    3834:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    383b:	48 89 c7             	mov    rdi,rax
    383e:	e8 67 42 00 00       	call   7aaa <init_member>
    3843:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    384a:	48 89 c7             	mov    rdi,rax
    384d:	e8 bf 20 00 00       	call   5911 <is_blocked_ipv4>
    3852:	84 c0                	test   al,al
    3854:	74 44                	je     389a <ipv4pktmgr+0x1e7>
    3856:	b8 00 00 00 00       	mov    eax,0x0
    385b:	e8 a9 fb ff ff       	call   3409 <get_formated_time>
    3860:	48 89 c6             	mov    rsi,rax
    3863:	48 8d 95 e0 fb ff ff 	lea    rdx,[rbp-0x420]
    386a:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    3871:	48 89 d1             	mov    rcx,rdx
    3874:	48 89 f2             	mov    rdx,rsi
    3877:	48 8d 35 da 89 00 00 	lea    rsi,[rip+0x89da]        # c258 <_IO_stdin_used+0x258>
    387e:	48 89 c7             	mov    rdi,rax
    3881:	b8 00 00 00 00       	mov    eax,0x0
    3886:	e8 25 ee ff ff       	call   26b0 <sprintf@plt>
    388b:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    3892:	48 89 c7             	mov    rdi,rax
    3895:	e8 c3 5c 00 00       	call   955d <saprintf>
    389a:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    38a1:	48 89 c7             	mov    rdi,rax
    38a4:	e8 68 20 00 00       	call   5911 <is_blocked_ipv4>
    38a9:	84 c0                	test   al,al
    38ab:	74 44                	je     38f1 <ipv4pktmgr+0x23e>
    38ad:	b8 00 00 00 00       	mov    eax,0x0
    38b2:	e8 52 fb ff ff       	call   3409 <get_formated_time>
    38b7:	48 89 c6             	mov    rsi,rax
    38ba:	48 8d 95 d0 fb ff ff 	lea    rdx,[rbp-0x430]
    38c1:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    38c8:	48 89 d1             	mov    rcx,rdx
    38cb:	48 89 f2             	mov    rdx,rsi
    38ce:	48 8d 35 b3 89 00 00 	lea    rsi,[rip+0x89b3]        # c288 <_IO_stdin_used+0x288>
    38d5:	48 89 c7             	mov    rdi,rax
    38d8:	b8 00 00 00 00       	mov    eax,0x0
    38dd:	e8 ce ed ff ff       	call   26b0 <sprintf@plt>
    38e2:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    38e9:	48 89 c7             	mov    rdi,rax
    38ec:	e8 6c 5c 00 00       	call   955d <saprintf>
    38f1:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    38f8:	48 89 85 58 fb ff ff 	mov    QWORD PTR [rbp-0x4a8],rax
    38ff:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    3906:	48 89 85 60 fb ff ff 	mov    QWORD PTR [rbp-0x4a0],rax
    390d:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    3914:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    3918:	66 83 f8 20          	cmp    ax,0x20
    391c:	74 11                	je     392f <ipv4pktmgr+0x27c>
    391e:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    3925:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    3929:	66 3d 02 01          	cmp    ax,0x102
    392d:	75 66                	jne    3995 <ipv4pktmgr+0x2e2>
    392f:	48 8d 35 7a 89 00 00 	lea    rsi,[rip+0x897a]        # c2b0 <_IO_stdin_used+0x2b0>
    3936:	48 8d 3d 78 89 00 00 	lea    rdi,[rip+0x8978]        # c2b5 <_IO_stdin_used+0x2b5>
    393d:	b8 00 00 00 00       	mov    eax,0x0
    3942:	e8 99 eb ff ff       	call   24e0 <printf@plt>
    3947:	0f b6 05 16 66 10 00 	movzx  eax,BYTE PTR [rip+0x106616]        # 109f64 <packet_print>
    394e:	84 c0                	test   al,al
    3950:	74 1a                	je     396c <ipv4pktmgr+0x2b9>
    3952:	48 8d 35 6a 89 00 00 	lea    rsi,[rip+0x896a]        # c2c3 <_IO_stdin_used+0x2c3>
    3959:	48 8d 3d 68 89 00 00 	lea    rdi,[rip+0x8968]        # c2c8 <_IO_stdin_used+0x2c8>
    3960:	b8 00 00 00 00       	mov    eax,0x0
    3965:	e8 76 eb ff ff       	call   24e0 <printf@plt>
    396a:	eb 29                	jmp    3995 <ipv4pktmgr+0x2e2>
    396c:	48 8d 95 e0 fb ff ff 	lea    rdx,[rbp-0x420]
    3973:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    397a:	48 8d 0d 42 89 00 00 	lea    rcx,[rip+0x8942]        # c2c3 <_IO_stdin_used+0x2c3>
    3981:	48 89 c6             	mov    rsi,rax
    3984:	48 8d 3d 40 89 00 00 	lea    rdi,[rip+0x8940]        # c2cb <_IO_stdin_used+0x2cb>
    398b:	b8 00 00 00 00       	mov    eax,0x0
    3990:	e8 4b eb ff ff       	call   24e0 <printf@plt>
    3995:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    399c:	0f b6 40 09          	movzx  eax,BYTE PTR [rax+0x9]
    39a0:	0f b6 c0             	movzx  eax,al
    39a3:	83 f8 11             	cmp    eax,0x11
    39a6:	0f 84 b8 00 00 00    	je     3a64 <ipv4pktmgr+0x3b1>
    39ac:	83 f8 11             	cmp    eax,0x11
    39af:	0f 8f db 00 00 00    	jg     3a90 <ipv4pktmgr+0x3dd>
    39b5:	83 f8 06             	cmp    eax,0x6
    39b8:	74 7e                	je     3a38 <ipv4pktmgr+0x385>
    39ba:	83 f8 06             	cmp    eax,0x6
    39bd:	0f 8f cd 00 00 00    	jg     3a90 <ipv4pktmgr+0x3dd>
    39c3:	83 f8 01             	cmp    eax,0x1
    39c6:	74 0a                	je     39d2 <ipv4pktmgr+0x31f>
    39c8:	83 f8 02             	cmp    eax,0x2
    39cb:	74 2d                	je     39fa <ipv4pktmgr+0x347>
    39cd:	e9 be 00 00 00       	jmp    3a90 <ipv4pktmgr+0x3dd>
    39d2:	c7 85 7c fb ff ff 80 	mov    DWORD PTR [rbp-0x484],0x80
    39d9:	00 00 00 
    39dc:	48 8d 95 50 fb ff ff 	lea    rdx,[rbp-0x4b0]
    39e3:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    39ea:	48 89 d6             	mov    rsi,rdx
    39ed:	48 89 c7             	mov    rdi,rax
    39f0:	e8 40 02 00 00       	call   3c35 <ip4_icmp_decode>
    39f5:	e9 c7 00 00 00       	jmp    3ac1 <ipv4pktmgr+0x40e>
    39fa:	c7 85 7c fb ff ff ff 	mov    DWORD PTR [rbp-0x484],0xffffffff
    3a01:	ff ff ff 
    3a04:	8b 05 36 d6 00 00    	mov    eax,DWORD PTR [rip+0xd636]        # 11040 <total_conversations>
    3a0a:	83 e8 01             	sub    eax,0x1
    3a0d:	89 05 2d d6 00 00    	mov    DWORD PTR [rip+0xd62d],eax        # 11040 <total_conversations>
    3a13:	48 8b 95 60 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4a0]
    3a1a:	48 8b 8d 58 fb ff ff 	mov    rcx,QWORD PTR [rbp-0x4a8]
    3a21:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    3a28:	48 89 ce             	mov    rsi,rcx
    3a2b:	48 89 c7             	mov    rdi,rax
    3a2e:	e8 57 14 00 00       	call   4e8a <ip4_igmp_decode>
    3a33:	e9 89 00 00 00       	jmp    3ac1 <ipv4pktmgr+0x40e>
    3a38:	c7 85 7c fb ff ff 7e 	mov    DWORD PTR [rbp-0x484],0x7e
    3a3f:	00 00 00 
    3a42:	48 8b 95 20 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4e0]
    3a49:	48 8d 8d 50 fb ff ff 	lea    rcx,[rbp-0x4b0]
    3a50:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    3a57:	48 89 ce             	mov    rsi,rcx
    3a5a:	48 89 c7             	mov    rdi,rax
    3a5d:	e8 17 0a 00 00       	call   4479 <ip4_tcp_decode>
    3a62:	eb 5d                	jmp    3ac1 <ipv4pktmgr+0x40e>
    3a64:	c7 85 7c fb ff ff 7f 	mov    DWORD PTR [rbp-0x484],0x7f
    3a6b:	00 00 00 
    3a6e:	48 8b 95 20 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4e0]
    3a75:	48 8d 8d 50 fb ff ff 	lea    rcx,[rbp-0x4b0]
    3a7c:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    3a83:	48 89 ce             	mov    rsi,rcx
    3a86:	48 89 c7             	mov    rdi,rax
    3a89:	e8 a7 12 00 00       	call   4d35 <ip4_udp_decode>
    3a8e:	eb 31                	jmp    3ac1 <ipv4pktmgr+0x40e>
    3a90:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    3a97:	0f b6 40 09          	movzx  eax,BYTE PTR [rax+0x9]
    3a9b:	0f b6 c8             	movzx  ecx,al
    3a9e:	48 8b 95 60 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4a0]
    3aa5:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    3aac:	48 89 c6             	mov    rsi,rax
    3aaf:	48 8d 3d 22 88 00 00 	lea    rdi,[rip+0x8822]        # c2d8 <_IO_stdin_used+0x2d8>
    3ab6:	b8 00 00 00 00       	mov    eax,0x0
    3abb:	e8 20 ea ff ff       	call   24e0 <printf@plt>
    3ac0:	90                   	nop
    3ac1:	90                   	nop
    3ac2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3ac6:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    3acd:	00 00 
    3acf:	74 05                	je     3ad6 <ipv4pktmgr+0x423>
    3ad1:	e8 0a ed ff ff       	call   27e0 <__stack_chk_fail@plt>
    3ad6:	c9                   	leave  
    3ad7:	c3                   	ret    

0000000000003ad8 <ip6_icmp_decode>:
    3ad8:	f3 0f 1e fa          	endbr64 
    3adc:	55                   	push   rbp
    3add:	48 89 e5             	mov    rbp,rsp
    3ae0:	48 83 c4 80          	add    rsp,0xffffffffffffff80
    3ae4:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    3ae8:	48 89 75 90          	mov    QWORD PTR [rbp-0x70],rsi
    3aec:	48 89 55 88          	mov    QWORD PTR [rbp-0x78],rdx
    3af0:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3af7:	00 00 
    3af9:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3afd:	31 c0                	xor    eax,eax
    3aff:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    3b03:	48 83 c0 36          	add    rax,0x36
    3b07:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    3b0b:	0f b6 05 52 64 10 00 	movzx  eax,BYTE PTR [rip+0x106452]        # 109f64 <packet_print>
    3b12:	84 c0                	test   al,al
    3b14:	0f 84 04 01 00 00    	je     3c1e <ip6_icmp_decode+0x146>
    3b1a:	48 8d 35 df 87 00 00 	lea    rsi,[rip+0x87df]        # c300 <_IO_stdin_used+0x300>
    3b21:	48 8d 3d de 87 00 00 	lea    rdi,[rip+0x87de]        # c306 <_IO_stdin_used+0x306>
    3b28:	b8 00 00 00 00       	mov    eax,0x0
    3b2d:	e8 ae e9 ff ff       	call   24e0 <printf@plt>
    3b32:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
    3b36:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    3b3a:	48 89 c6             	mov    rsi,rax
    3b3d:	48 8d 3d c5 87 00 00 	lea    rdi,[rip+0x87c5]        # c309 <_IO_stdin_used+0x309>
    3b44:	b8 00 00 00 00       	mov    eax,0x0
    3b49:	e8 92 e9 ff ff       	call   24e0 <printf@plt>
    3b4e:	48 8d 3d c3 87 00 00 	lea    rdi,[rip+0x87c3]        # c318 <_IO_stdin_used+0x318>
    3b55:	b8 00 00 00 00       	mov    eax,0x0
    3b5a:	e8 81 e9 ff ff       	call   24e0 <printf@plt>
    3b5f:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3b63:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3b66:	0f b6 c0             	movzx  eax,al
    3b69:	3d 8f 00 00 00       	cmp    eax,0x8f
    3b6e:	74 68                	je     3bd8 <ip6_icmp_decode+0x100>
    3b70:	3d 8f 00 00 00       	cmp    eax,0x8f
    3b75:	0f 8f 8b 00 00 00    	jg     3c06 <ip6_icmp_decode+0x12e>
    3b7b:	3d 87 00 00 00       	cmp    eax,0x87
    3b80:	74 77                	je     3bf9 <ip6_icmp_decode+0x121>
    3b82:	3d 87 00 00 00       	cmp    eax,0x87
    3b87:	7f 7d                	jg     3c06 <ip6_icmp_decode+0x12e>
    3b89:	3d 82 00 00 00       	cmp    eax,0x82
    3b8e:	74 56                	je     3be6 <ip6_icmp_decode+0x10e>
    3b90:	3d 85 00 00 00       	cmp    eax,0x85
    3b95:	75 6f                	jne    3c06 <ip6_icmp_decode+0x12e>
    3b97:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3b9b:	48 83 c0 0a          	add    rax,0xa
    3b9f:	48 89 c7             	mov    rdi,rax
    3ba2:	e8 19 f4 ff ff       	call   2fc0 <mac_ntoa>
    3ba7:	48 89 c1             	mov    rcx,rax
    3baa:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    3bae:	ba 40 00 00 00       	mov    edx,0x40
    3bb3:	48 89 ce             	mov    rsi,rcx
    3bb6:	48 89 c7             	mov    rdi,rax
    3bb9:	e8 b2 ec ff ff       	call   2870 <strncpy@plt>
    3bbe:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    3bc2:	48 89 c6             	mov    rsi,rax
    3bc5:	48 8d 3d 55 87 00 00 	lea    rdi,[rip+0x8755]        # c321 <_IO_stdin_used+0x321>
    3bcc:	b8 00 00 00 00       	mov    eax,0x0
    3bd1:	e8 0a e9 ff ff       	call   24e0 <printf@plt>
    3bd6:	eb 2e                	jmp    3c06 <ip6_icmp_decode+0x12e>
    3bd8:	48 8d 3d 61 87 00 00 	lea    rdi,[rip+0x8761]        # c340 <_IO_stdin_used+0x340>
    3bdf:	e8 5c e9 ff ff       	call   2540 <puts@plt>
    3be4:	eb 20                	jmp    3c06 <ip6_icmp_decode+0x12e>
    3be6:	48 8d 3d 78 87 00 00 	lea    rdi,[rip+0x8778]        # c365 <_IO_stdin_used+0x365>
    3bed:	b8 00 00 00 00       	mov    eax,0x0
    3bf2:	e8 e9 e8 ff ff       	call   24e0 <printf@plt>
    3bf7:	eb 0d                	jmp    3c06 <ip6_icmp_decode+0x12e>
    3bf9:	48 8d 3d 7f 87 00 00 	lea    rdi,[rip+0x877f]        # c37f <_IO_stdin_used+0x37f>
    3c00:	e8 3b e9 ff ff       	call   2540 <puts@plt>
    3c05:	90                   	nop
    3c06:	48 8d 35 88 87 00 00 	lea    rsi,[rip+0x8788]        # c395 <_IO_stdin_used+0x395>
    3c0d:	48 8d 3d f2 86 00 00 	lea    rdi,[rip+0x86f2]        # c306 <_IO_stdin_used+0x306>
    3c14:	b8 00 00 00 00       	mov    eax,0x0
    3c19:	e8 c2 e8 ff ff       	call   24e0 <printf@plt>
    3c1e:	90                   	nop
    3c1f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3c23:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    3c2a:	00 00 
    3c2c:	74 05                	je     3c33 <ip6_icmp_decode+0x15b>
    3c2e:	e8 ad eb ff ff       	call   27e0 <__stack_chk_fail@plt>
    3c33:	c9                   	leave  
    3c34:	c3                   	ret    

0000000000003c35 <ip4_icmp_decode>:
    3c35:	f3 0f 1e fa          	endbr64 
    3c39:	55                   	push   rbp
    3c3a:	48 89 e5             	mov    rbp,rsp
    3c3d:	48 81 ec 20 01 00 00 	sub    rsp,0x120
    3c44:	48 89 bd e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rdi
    3c4b:	48 89 b5 e0 fe ff ff 	mov    QWORD PTR [rbp-0x120],rsi
    3c52:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3c59:	00 00 
    3c5b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3c5f:	31 c0                	xor    eax,eax
    3c61:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c68:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3c6c:	ba 5e 00 00 00       	mov    edx,0x5e
    3c71:	be 01 00 00 00       	mov    esi,0x1
    3c76:	48 89 c7             	mov    rdi,rax
    3c79:	e8 0b 13 00 00       	call   4f89 <add_ip_addr_or_inc_counter>
    3c7e:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c85:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    3c89:	ba 5e 00 00 00       	mov    edx,0x5e
    3c8e:	be 00 00 00 00       	mov    esi,0x0
    3c93:	48 89 c7             	mov    rdi,rax
    3c96:	e8 ee 12 00 00       	call   4f89 <add_ip_addr_or_inc_counter>
    3c9b:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3ca2:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3ca6:	48 89 85 08 ff ff ff 	mov    QWORD PTR [rbp-0xf8],rax
    3cad:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3cb4:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    3cb8:	48 89 85 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],rax
    3cbf:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    3cc6:	48 83 c0 22          	add    rax,0x22
    3cca:	48 89 85 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rax
    3cd1:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    3cd8:	48 8d 50 22          	lea    rdx,[rax+0x22]
    3cdc:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3ce3:	48 89 10             	mov    QWORD PTR [rax],rdx
    3ce6:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3ced:	48 8b 95 18 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xe8]
    3cf4:	48 89 50 60          	mov    QWORD PTR [rax+0x60],rdx
    3cf8:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3cff:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    3d02:	89 85 fc fe ff ff    	mov    DWORD PTR [rbp-0x104],eax
    3d08:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3d0f:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    3d12:	8d 50 d6             	lea    edx,[rax-0x2a]
    3d15:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3d1c:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    3d1f:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    3d26:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3d29:	3c 08                	cmp    al,0x8
    3d2b:	0f 85 55 01 00 00    	jne    3e86 <ip4_icmp_decode+0x251>
    3d31:	8b 05 51 d3 00 00    	mov    eax,DWORD PTR [rip+0xd351]        # 11088 <strict_nmap_host_alive_check>
    3d37:	83 f8 01             	cmp    eax,0x1
    3d3a:	0f 85 46 01 00 00    	jne    3e86 <ip4_icmp_decode+0x251>
    3d40:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3d47:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3d4b:	48 89 c7             	mov    rdi,rax
    3d4e:	e8 e5 3c 00 00       	call   7a38 <member_exists>
    3d53:	89 85 00 ff ff ff    	mov    DWORD PTR [rbp-0x100],eax
    3d59:	83 bd 00 ff ff ff ff 	cmp    DWORD PTR [rbp-0x100],0xffffffff
    3d60:	0f 84 83 00 00 00    	je     3de9 <ip4_icmp_decode+0x1b4>
    3d66:	8b 85 00 ff ff ff    	mov    eax,DWORD PTR [rbp-0x100]
    3d6c:	48 63 d0             	movsxd rdx,eax
    3d6f:	48 89 d0             	mov    rax,rdx
    3d72:	48 c1 e0 02          	shl    rax,0x2
    3d76:	48 01 d0             	add    rax,rdx
    3d79:	48 c1 e0 03          	shl    rax,0x3
    3d7d:	48 01 d0             	add    rax,rdx
    3d80:	48 c1 e0 04          	shl    rax,0x4
    3d84:	48 8d 15 95 f7 0e 00 	lea    rdx,[rip+0xef795]        # f3520 <watchlist>
    3d8b:	48 01 d0             	add    rax,rdx
    3d8e:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
    3d95:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d9c:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3d9f:	85 c0                	test   eax,eax
    3da1:	0f 85 a8 02 00 00    	jne    404f <ip4_icmp_decode+0x41a>
    3da7:	bf 00 00 00 00       	mov    edi,0x0
    3dac:	e8 7f eb ff ff       	call   2930 <time@plt>
    3db1:	48 89 c2             	mov    rdx,rax
    3db4:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3dbb:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    3dbf:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3dc6:	c7 40 30 01 00 00 00 	mov    DWORD PTR [rax+0x30],0x1
    3dcd:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3dd4:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3dd7:	8d 50 01             	lea    edx,[rax+0x1]
    3dda:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3de1:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    3de4:	e9 66 02 00 00       	jmp    404f <ip4_icmp_decode+0x41a>
    3de9:	8b 05 29 d2 00 00    	mov    eax,DWORD PTR [rip+0xd229]        # 11018 <watchlist_num>
    3def:	83 c0 01             	add    eax,0x1
    3df2:	89 05 20 d2 00 00    	mov    DWORD PTR [rip+0xd220],eax        # 11018 <watchlist_num>
    3df8:	8b 05 1a d2 00 00    	mov    eax,DWORD PTR [rip+0xd21a]        # 11018 <watchlist_num>
    3dfe:	48 63 d0             	movsxd rdx,eax
    3e01:	48 89 d0             	mov    rax,rdx
    3e04:	48 c1 e0 02          	shl    rax,0x2
    3e08:	48 01 d0             	add    rax,rdx
    3e0b:	48 c1 e0 03          	shl    rax,0x3
    3e0f:	48 01 d0             	add    rax,rdx
    3e12:	48 c1 e0 04          	shl    rax,0x4
    3e16:	48 8d 15 03 f7 0e 00 	lea    rdx,[rip+0xef703]        # f3520 <watchlist>
    3e1d:	48 01 d0             	add    rax,rdx
    3e20:	48 89 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rax
    3e27:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3e2e:	48 8d 50 08          	lea    rdx,[rax+0x8]
    3e32:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3e39:	48 89 c6             	mov    rsi,rax
    3e3c:	48 89 d7             	mov    rdi,rdx
    3e3f:	e8 dc e9 ff ff       	call   2820 <strcpy@plt>
    3e44:	bf 00 00 00 00       	mov    edi,0x0
    3e49:	e8 e2 ea ff ff       	call   2930 <time@plt>
    3e4e:	48 89 c2             	mov    rdx,rax
    3e51:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3e58:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    3e5c:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3e63:	c7 40 30 01 00 00 00 	mov    DWORD PTR [rax+0x30],0x1
    3e6a:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3e71:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3e74:	8d 50 01             	lea    edx,[rax+0x1]
    3e77:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3e7e:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    3e81:	e9 c9 01 00 00       	jmp    404f <ip4_icmp_decode+0x41a>
    3e86:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    3e8d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3e90:	3c 0d                	cmp    al,0xd
    3e92:	0f 85 ba 01 00 00    	jne    4052 <ip4_icmp_decode+0x41d>
    3e98:	8b 05 e6 d1 00 00    	mov    eax,DWORD PTR [rip+0xd1e6]        # 11084 <strict_icmp_timestamp_req>
    3e9e:	83 f8 01             	cmp    eax,0x1
    3ea1:	74 0f                	je     3eb2 <ip4_icmp_decode+0x27d>
    3ea3:	8b 05 df d1 00 00    	mov    eax,DWORD PTR [rip+0xd1df]        # 11088 <strict_nmap_host_alive_check>
    3ea9:	83 f8 01             	cmp    eax,0x1
    3eac:	0f 85 a0 01 00 00    	jne    4052 <ip4_icmp_decode+0x41d>
    3eb2:	8b 05 cc d1 00 00    	mov    eax,DWORD PTR [rip+0xd1cc]        # 11084 <strict_icmp_timestamp_req>
    3eb8:	85 c0                	test   eax,eax
    3eba:	74 22                	je     3ede <ip4_icmp_decode+0x2a9>
    3ebc:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    3ec3:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3eca:	48 89 c6             	mov    rsi,rax
    3ecd:	48 8d 3d cc 84 00 00 	lea    rdi,[rip+0x84cc]        # c3a0 <_IO_stdin_used+0x3a0>
    3ed4:	b8 00 00 00 00       	mov    eax,0x0
    3ed9:	e8 02 e6 ff ff       	call   24e0 <printf@plt>
    3ede:	8b 05 a4 d1 00 00    	mov    eax,DWORD PTR [rip+0xd1a4]        # 11088 <strict_nmap_host_alive_check>
    3ee4:	85 c0                	test   eax,eax
    3ee6:	0f 84 66 01 00 00    	je     4052 <ip4_icmp_decode+0x41d>
    3eec:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3ef3:	48 89 c7             	mov    rdi,rax
    3ef6:	e8 3d 3b 00 00       	call   7a38 <member_exists>
    3efb:	89 85 04 ff ff ff    	mov    DWORD PTR [rbp-0xfc],eax
    3f01:	83 bd 04 ff ff ff ff 	cmp    DWORD PTR [rbp-0xfc],0xffffffff
    3f08:	0f 84 44 01 00 00    	je     4052 <ip4_icmp_decode+0x41d>
    3f0e:	8b 85 04 ff ff ff    	mov    eax,DWORD PTR [rbp-0xfc]
    3f14:	48 63 d0             	movsxd rdx,eax
    3f17:	48 89 d0             	mov    rax,rdx
    3f1a:	48 c1 e0 02          	shl    rax,0x2
    3f1e:	48 01 d0             	add    rax,rdx
    3f21:	48 c1 e0 03          	shl    rax,0x3
    3f25:	48 01 d0             	add    rax,rdx
    3f28:	48 c1 e0 04          	shl    rax,0x4
    3f2c:	48 8d 15 ed f5 0e 00 	lea    rdx,[rip+0xef5ed]        # f3520 <watchlist>
    3f33:	48 01 d0             	add    rax,rdx
    3f36:	48 89 85 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rax
    3f3d:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3f44:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3f47:	83 f8 03             	cmp    eax,0x3
    3f4a:	0f 85 05 01 00 00    	jne    4055 <ip4_icmp_decode+0x420>
    3f50:	bf 00 00 00 00       	mov    edi,0x0
    3f55:	e8 d6 e9 ff ff       	call   2930 <time@plt>
    3f5a:	48 89 c2             	mov    rdx,rax
    3f5d:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3f64:	48 89 50 48          	mov    QWORD PTR [rax+0x48],rdx
    3f68:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3f6f:	48 8b 50 48          	mov    rdx,QWORD PTR [rax+0x48]
    3f73:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3f7a:	48 8b 48 28          	mov    rcx,QWORD PTR [rax+0x28]
    3f7e:	48 89 d0             	mov    rax,rdx
    3f81:	48 29 c8             	sub    rax,rcx
    3f84:	48 3d e2 b4 04 00    	cmp    rax,0x4b4e2
    3f8a:	0f 87 c2 00 00 00    	ja     4052 <ip4_icmp_decode+0x41d>
    3f90:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    3f97:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3f9e:	48 89 c6             	mov    rsi,rax
    3fa1:	48 8d 3d 40 84 00 00 	lea    rdi,[rip+0x8440]        # c3e8 <_IO_stdin_used+0x3e8>
    3fa8:	b8 00 00 00 00       	mov    eax,0x0
    3fad:	e8 2e e5 ff ff       	call   24e0 <printf@plt>
    3fb2:	48 8b 05 77 d0 00 00 	mov    rax,QWORD PTR [rip+0xd077]        # 11030 <def_log_file>
    3fb9:	48 8d 35 92 84 00 00 	lea    rsi,[rip+0x8492]        # c452 <_IO_stdin_used+0x452>
    3fc0:	48 89 c7             	mov    rdi,rax
    3fc3:	e8 08 e6 ff ff       	call   25d0 <fopen@plt>
    3fc8:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    3fcf:	b8 00 00 00 00       	mov    eax,0x0
    3fd4:	e8 30 f4 ff ff       	call   3409 <get_formated_time>
    3fd9:	48 89 c6             	mov    rsi,rax
    3fdc:	48 8b 8d 10 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xf0]
    3fe3:	48 8b 95 08 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf8]
    3fea:	48 8d 85 40 ff ff ff 	lea    rax,[rbp-0xc0]
    3ff1:	49 89 f0             	mov    r8,rsi
    3ff4:	48 8d 35 5d 84 00 00 	lea    rsi,[rip+0x845d]        # c458 <_IO_stdin_used+0x458>
    3ffb:	48 89 c7             	mov    rdi,rax
    3ffe:	b8 00 00 00 00       	mov    eax,0x0
    4003:	e8 a8 e6 ff ff       	call   26b0 <sprintf@plt>
    4008:	48 8b 95 38 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xc8]
    400f:	48 8d 85 40 ff ff ff 	lea    rax,[rbp-0xc0]
    4016:	48 89 d6             	mov    rsi,rdx
    4019:	48 89 c7             	mov    rdi,rax
    401c:	e8 0f e7 ff ff       	call   2730 <fputs@plt>
    4021:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
    4028:	48 89 c7             	mov    rdi,rax
    402b:	e8 30 e8 ff ff       	call   2860 <fclose@plt>
    4030:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    4037:	48 83 c0 28          	add    rax,0x28
    403b:	ba 28 00 00 00       	mov    edx,0x28
    4040:	be 00 00 00 00       	mov    esi,0x0
    4045:	48 89 c7             	mov    rdi,rax
    4048:	e8 a3 e4 ff ff       	call   24f0 <memset@plt>
    404d:	eb 07                	jmp    4056 <ip4_icmp_decode+0x421>
    404f:	90                   	nop
    4050:	eb 04                	jmp    4056 <ip4_icmp_decode+0x421>
    4052:	90                   	nop
    4053:	eb 01                	jmp    4056 <ip4_icmp_decode+0x421>
    4055:	90                   	nop
    4056:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    405d:	c7 40 2c 80 00 00 00 	mov    DWORD PTR [rax+0x2c],0x80
    4064:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    406b:	48 89 c7             	mov    rdi,rax
    406e:	e8 50 24 00 00       	call   64c3 <rulemgr>
    4073:	0f b6 05 ea 5e 10 00 	movzx  eax,BYTE PTR [rip+0x105eea]        # 109f64 <packet_print>
    407a:	84 c0                	test   al,al
    407c:	0f 84 e0 03 00 00    	je     4462 <ip4_icmp_decode+0x82d>
    4082:	48 8d 35 77 82 00 00 	lea    rsi,[rip+0x8277]        # c300 <_IO_stdin_used+0x300>
    4089:	48 8d 3d 76 82 00 00 	lea    rdi,[rip+0x8276]        # c306 <_IO_stdin_used+0x306>
    4090:	b8 00 00 00 00       	mov    eax,0x0
    4095:	e8 46 e4 ff ff       	call   24e0 <printf@plt>
    409a:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    40a1:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    40a8:	48 89 c6             	mov    rsi,rax
    40ab:	48 8d 3d 16 84 00 00 	lea    rdi,[rip+0x8416]        # c4c8 <_IO_stdin_used+0x4c8>
    40b2:	b8 00 00 00 00       	mov    eax,0x0
    40b7:	e8 24 e4 ff ff       	call   24e0 <printf@plt>
    40bc:	48 8d 3d 14 84 00 00 	lea    rdi,[rip+0x8414]        # c4d7 <_IO_stdin_used+0x4d7>
    40c3:	b8 00 00 00 00       	mov    eax,0x0
    40c8:	e8 13 e4 ff ff       	call   24e0 <printf@plt>
    40cd:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    40d4:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    40d7:	0f b6 c0             	movzx  eax,al
    40da:	83 f8 0e             	cmp    eax,0xe
    40dd:	0f 87 46 03 00 00    	ja     4429 <ip4_icmp_decode+0x7f4>
    40e3:	89 c0                	mov    eax,eax
    40e5:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    40ec:	00 
    40ed:	48 8d 05 ec 87 00 00 	lea    rax,[rip+0x87ec]        # c8e0 <_IO_stdin_used+0x8e0>
    40f4:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    40f7:	48 98                	cdqe   
    40f9:	48 8d 15 e0 87 00 00 	lea    rdx,[rip+0x87e0]        # c8e0 <_IO_stdin_used+0x8e0>
    4100:	48 01 d0             	add    rax,rdx
    4103:	3e ff e0             	notrack jmp rax
    4106:	48 8d 3d d1 83 00 00 	lea    rdi,[rip+0x83d1]        # c4de <_IO_stdin_used+0x4de>
    410d:	e8 2e e4 ff ff       	call   2540 <puts@plt>
    4112:	e9 33 03 00 00       	jmp    444a <ip4_icmp_decode+0x815>
    4117:	48 8d 3d cc 83 00 00 	lea    rdi,[rip+0x83cc]        # c4ea <_IO_stdin_used+0x4ea>
    411e:	b8 00 00 00 00       	mov    eax,0x0
    4123:	e8 b8 e3 ff ff       	call   24e0 <printf@plt>
    4128:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    412f:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4133:	0f b6 c0             	movzx  eax,al
    4136:	83 f8 0f             	cmp    eax,0xf
    4139:	0f 87 1e 01 00 00    	ja     425d <ip4_icmp_decode+0x628>
    413f:	89 c0                	mov    eax,eax
    4141:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    4148:	00 
    4149:	48 8d 05 cc 87 00 00 	lea    rax,[rip+0x87cc]        # c91c <_IO_stdin_used+0x91c>
    4150:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    4153:	48 98                	cdqe   
    4155:	48 8d 15 c0 87 00 00 	lea    rdx,[rip+0x87c0]        # c91c <_IO_stdin_used+0x91c>
    415c:	48 01 d0             	add    rax,rdx
    415f:	3e ff e0             	notrack jmp rax
    4162:	48 8d 3d 9b 83 00 00 	lea    rdi,[rip+0x839b]        # c504 <_IO_stdin_used+0x504>
    4169:	e8 d2 e3 ff ff       	call   2540 <puts@plt>
    416e:	e9 0c 01 00 00       	jmp    427f <ip4_icmp_decode+0x64a>
    4173:	48 8d 3d a1 83 00 00 	lea    rdi,[rip+0x83a1]        # c51b <_IO_stdin_used+0x51b>
    417a:	e8 c1 e3 ff ff       	call   2540 <puts@plt>
    417f:	e9 fb 00 00 00       	jmp    427f <ip4_icmp_decode+0x64a>
    4184:	48 8d 3d a4 83 00 00 	lea    rdi,[rip+0x83a4]        # c52f <_IO_stdin_used+0x52f>
    418b:	e8 b0 e3 ff ff       	call   2540 <puts@plt>
    4190:	e9 ea 00 00 00       	jmp    427f <ip4_icmp_decode+0x64a>
    4195:	48 8d 3d ab 83 00 00 	lea    rdi,[rip+0x83ab]        # c547 <_IO_stdin_used+0x547>
    419c:	e8 9f e3 ff ff       	call   2540 <puts@plt>
    41a1:	e9 d9 00 00 00       	jmp    427f <ip4_icmp_decode+0x64a>
    41a6:	48 8d 3d ae 83 00 00 	lea    rdi,[rip+0x83ae]        # c55b <_IO_stdin_used+0x55b>
    41ad:	e8 8e e3 ff ff       	call   2540 <puts@plt>
    41b2:	e9 c8 00 00 00       	jmp    427f <ip4_icmp_decode+0x64a>
    41b7:	48 8d 3d b5 83 00 00 	lea    rdi,[rip+0x83b5]        # c573 <_IO_stdin_used+0x573>
    41be:	e8 7d e3 ff ff       	call   2540 <puts@plt>
    41c3:	e9 b7 00 00 00       	jmp    427f <ip4_icmp_decode+0x64a>
    41c8:	48 8d 3d c1 83 00 00 	lea    rdi,[rip+0x83c1]        # c590 <_IO_stdin_used+0x590>
    41cf:	e8 6c e3 ff ff       	call   2540 <puts@plt>
    41d4:	e9 a6 00 00 00       	jmp    427f <ip4_icmp_decode+0x64a>
    41d9:	48 8d 3d d8 83 00 00 	lea    rdi,[rip+0x83d8]        # c5b8 <_IO_stdin_used+0x5b8>
    41e0:	e8 5b e3 ff ff       	call   2540 <puts@plt>
    41e5:	e9 95 00 00 00       	jmp    427f <ip4_icmp_decode+0x64a>
    41ea:	48 8d 3d e7 83 00 00 	lea    rdi,[rip+0x83e7]        # c5d8 <_IO_stdin_used+0x5d8>
    41f1:	e8 4a e3 ff ff       	call   2540 <puts@plt>
    41f6:	e9 84 00 00 00       	jmp    427f <ip4_icmp_decode+0x64a>
    41fb:	48 8d 3d ee 83 00 00 	lea    rdi,[rip+0x83ee]        # c5f0 <_IO_stdin_used+0x5f0>
    4202:	e8 39 e3 ff ff       	call   2540 <puts@plt>
    4207:	eb 76                	jmp    427f <ip4_icmp_decode+0x64a>
    4209:	48 8d 3d 08 84 00 00 	lea    rdi,[rip+0x8408]        # c618 <_IO_stdin_used+0x618>
    4210:	e8 2b e3 ff ff       	call   2540 <puts@plt>
    4215:	eb 68                	jmp    427f <ip4_icmp_decode+0x64a>
    4217:	48 8d 3d 22 84 00 00 	lea    rdi,[rip+0x8422]        # c640 <_IO_stdin_used+0x640>
    421e:	e8 1d e3 ff ff       	call   2540 <puts@plt>
    4223:	eb 5a                	jmp    427f <ip4_icmp_decode+0x64a>
    4225:	48 8d 3d 33 84 00 00 	lea    rdi,[rip+0x8433]        # c65f <_IO_stdin_used+0x65f>
    422c:	e8 0f e3 ff ff       	call   2540 <puts@plt>
    4231:	eb 4c                	jmp    427f <ip4_icmp_decode+0x64a>
    4233:	48 8d 3d 46 84 00 00 	lea    rdi,[rip+0x8446]        # c680 <_IO_stdin_used+0x680>
    423a:	e8 01 e3 ff ff       	call   2540 <puts@plt>
    423f:	eb 3e                	jmp    427f <ip4_icmp_decode+0x64a>
    4241:	48 8d 3d 65 84 00 00 	lea    rdi,[rip+0x8465]        # c6ad <_IO_stdin_used+0x6ad>
    4248:	e8 f3 e2 ff ff       	call   2540 <puts@plt>
    424d:	eb 30                	jmp    427f <ip4_icmp_decode+0x64a>
    424f:	48 8d 3d 7a 84 00 00 	lea    rdi,[rip+0x847a]        # c6d0 <_IO_stdin_used+0x6d0>
    4256:	e8 e5 e2 ff ff       	call   2540 <puts@plt>
    425b:	eb 22                	jmp    427f <ip4_icmp_decode+0x64a>
    425d:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4264:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4268:	0f b6 c0             	movzx  eax,al
    426b:	89 c6                	mov    esi,eax
    426d:	48 8d 3d 7b 84 00 00 	lea    rdi,[rip+0x847b]        # c6ef <_IO_stdin_used+0x6ef>
    4274:	b8 00 00 00 00       	mov    eax,0x0
    4279:	e8 62 e2 ff ff       	call   24e0 <printf@plt>
    427e:	90                   	nop
    427f:	e9 c6 01 00 00       	jmp    444a <ip4_icmp_decode+0x815>
    4284:	48 8d 3d 7d 84 00 00 	lea    rdi,[rip+0x847d]        # c708 <_IO_stdin_used+0x708>
    428b:	e8 b0 e2 ff ff       	call   2540 <puts@plt>
    4290:	e9 b5 01 00 00       	jmp    444a <ip4_icmp_decode+0x815>
    4295:	48 8d 3d 8b 84 00 00 	lea    rdi,[rip+0x848b]        # c727 <_IO_stdin_used+0x727>
    429c:	b8 00 00 00 00       	mov    eax,0x0
    42a1:	e8 3a e2 ff ff       	call   24e0 <printf@plt>
    42a6:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    42ad:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    42b1:	0f b6 c0             	movzx  eax,al
    42b4:	83 f8 03             	cmp    eax,0x3
    42b7:	74 44                	je     42fd <ip4_icmp_decode+0x6c8>
    42b9:	83 f8 03             	cmp    eax,0x3
    42bc:	7f 4d                	jg     430b <ip4_icmp_decode+0x6d6>
    42be:	83 f8 02             	cmp    eax,0x2
    42c1:	74 2c                	je     42ef <ip4_icmp_decode+0x6ba>
    42c3:	83 f8 02             	cmp    eax,0x2
    42c6:	7f 43                	jg     430b <ip4_icmp_decode+0x6d6>
    42c8:	85 c0                	test   eax,eax
    42ca:	74 07                	je     42d3 <ip4_icmp_decode+0x69e>
    42cc:	83 f8 01             	cmp    eax,0x1
    42cf:	74 10                	je     42e1 <ip4_icmp_decode+0x6ac>
    42d1:	eb 38                	jmp    430b <ip4_icmp_decode+0x6d6>
    42d3:	48 8d 3d 59 84 00 00 	lea    rdi,[rip+0x8459]        # c733 <_IO_stdin_used+0x733>
    42da:	e8 61 e2 ff ff       	call   2540 <puts@plt>
    42df:	eb 4c                	jmp    432d <ip4_icmp_decode+0x6f8>
    42e1:	48 8d 3d 63 84 00 00 	lea    rdi,[rip+0x8463]        # c74b <_IO_stdin_used+0x74b>
    42e8:	e8 53 e2 ff ff       	call   2540 <puts@plt>
    42ed:	eb 3e                	jmp    432d <ip4_icmp_decode+0x6f8>
    42ef:	48 8d 3d 6a 84 00 00 	lea    rdi,[rip+0x846a]        # c760 <_IO_stdin_used+0x760>
    42f6:	e8 45 e2 ff ff       	call   2540 <puts@plt>
    42fb:	eb 30                	jmp    432d <ip4_icmp_decode+0x6f8>
    42fd:	48 8d 3d 7c 84 00 00 	lea    rdi,[rip+0x847c]        # c780 <_IO_stdin_used+0x780>
    4304:	e8 37 e2 ff ff       	call   2540 <puts@plt>
    4309:	eb 22                	jmp    432d <ip4_icmp_decode+0x6f8>
    430b:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4312:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4316:	0f b6 c0             	movzx  eax,al
    4319:	89 c6                	mov    esi,eax
    431b:	48 8d 3d cd 83 00 00 	lea    rdi,[rip+0x83cd]        # c6ef <_IO_stdin_used+0x6ef>
    4322:	b8 00 00 00 00       	mov    eax,0x0
    4327:	e8 b4 e1 ff ff       	call   24e0 <printf@plt>
    432c:	90                   	nop
    432d:	e9 18 01 00 00       	jmp    444a <ip4_icmp_decode+0x815>
    4332:	48 8d 3d 64 84 00 00 	lea    rdi,[rip+0x8464]        # c79d <_IO_stdin_used+0x79d>
    4339:	e8 02 e2 ff ff       	call   2540 <puts@plt>
    433e:	e9 07 01 00 00       	jmp    444a <ip4_icmp_decode+0x815>
    4343:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    434a:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    434e:	84 c0                	test   al,al
    4350:	75 16                	jne    4368 <ip4_icmp_decode+0x733>
    4352:	48 8d 3d 57 84 00 00 	lea    rdi,[rip+0x8457]        # c7b0 <_IO_stdin_used+0x7b0>
    4359:	b8 00 00 00 00       	mov    eax,0x0
    435e:	e8 7d e1 ff ff       	call   24e0 <printf@plt>
    4363:	e9 e2 00 00 00       	jmp    444a <ip4_icmp_decode+0x815>
    4368:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    436f:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4373:	0f b6 c0             	movzx  eax,al
    4376:	89 c6                	mov    esi,eax
    4378:	48 8d 3d 71 84 00 00 	lea    rdi,[rip+0x8471]        # c7f0 <_IO_stdin_used+0x7f0>
    437f:	b8 00 00 00 00       	mov    eax,0x0
    4384:	e8 57 e1 ff ff       	call   24e0 <printf@plt>
    4389:	e9 bc 00 00 00       	jmp    444a <ip4_icmp_decode+0x815>
    438e:	48 8d 3d 88 84 00 00 	lea    rdi,[rip+0x8488]        # c81d <_IO_stdin_used+0x81d>
    4395:	e8 a6 e1 ff ff       	call   2540 <puts@plt>
    439a:	e9 ab 00 00 00       	jmp    444a <ip4_icmp_decode+0x815>
    439f:	48 8d 3d 8e 84 00 00 	lea    rdi,[rip+0x848e]        # c834 <_IO_stdin_used+0x834>
    43a6:	b8 00 00 00 00       	mov    eax,0x0
    43ab:	e8 30 e1 ff ff       	call   24e0 <printf@plt>
    43b0:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    43b7:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    43bb:	84 c0                	test   al,al
    43bd:	75 0e                	jne    43cd <ip4_icmp_decode+0x798>
    43bf:	48 8d 3d 85 84 00 00 	lea    rdi,[rip+0x8485]        # c84b <_IO_stdin_used+0x84b>
    43c6:	e8 75 e1 ff ff       	call   2540 <puts@plt>
    43cb:	eb 7d                	jmp    444a <ip4_icmp_decode+0x815>
    43cd:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    43d4:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    43d8:	3c 01                	cmp    al,0x1
    43da:	75 0e                	jne    43ea <ip4_icmp_decode+0x7b5>
    43dc:	48 8d 3d 85 84 00 00 	lea    rdi,[rip+0x8485]        # c868 <_IO_stdin_used+0x868>
    43e3:	e8 58 e1 ff ff       	call   2540 <puts@plt>
    43e8:	eb 60                	jmp    444a <ip4_icmp_decode+0x815>
    43ea:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    43f1:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    43f5:	0f b6 c0             	movzx  eax,al
    43f8:	89 c6                	mov    esi,eax
    43fa:	48 8d 3d 8e 84 00 00 	lea    rdi,[rip+0x848e]        # c88f <_IO_stdin_used+0x88f>
    4401:	b8 00 00 00 00       	mov    eax,0x0
    4406:	e8 d5 e0 ff ff       	call   24e0 <printf@plt>
    440b:	eb 3d                	jmp    444a <ip4_icmp_decode+0x815>
    440d:	48 8d 3d 91 84 00 00 	lea    rdi,[rip+0x8491]        # c8a5 <_IO_stdin_used+0x8a5>
    4414:	e8 27 e1 ff ff       	call   2540 <puts@plt>
    4419:	eb 2f                	jmp    444a <ip4_icmp_decode+0x815>
    441b:	48 8d 3d 96 84 00 00 	lea    rdi,[rip+0x8496]        # c8b8 <_IO_stdin_used+0x8b8>
    4422:	e8 19 e1 ff ff       	call   2540 <puts@plt>
    4427:	eb 21                	jmp    444a <ip4_icmp_decode+0x815>
    4429:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4430:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4433:	0f b6 c0             	movzx  eax,al
    4436:	89 c6                	mov    esi,eax
    4438:	48 8d 3d 8a 84 00 00 	lea    rdi,[rip+0x848a]        # c8c9 <_IO_stdin_used+0x8c9>
    443f:	b8 00 00 00 00       	mov    eax,0x0
    4444:	e8 97 e0 ff ff       	call   24e0 <printf@plt>
    4449:	90                   	nop
    444a:	48 8d 35 44 7f 00 00 	lea    rsi,[rip+0x7f44]        # c395 <_IO_stdin_used+0x395>
    4451:	48 8d 3d ae 7e 00 00 	lea    rdi,[rip+0x7eae]        # c306 <_IO_stdin_used+0x306>
    4458:	b8 00 00 00 00       	mov    eax,0x0
    445d:	e8 7e e0 ff ff       	call   24e0 <printf@plt>
    4462:	90                   	nop
    4463:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4467:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    446e:	00 00 
    4470:	74 05                	je     4477 <ip4_icmp_decode+0x842>
    4472:	e8 69 e3 ff ff       	call   27e0 <__stack_chk_fail@plt>
    4477:	c9                   	leave  
    4478:	c3                   	ret    

0000000000004479 <ip4_tcp_decode>:
    4479:	f3 0f 1e fa          	endbr64 
    447d:	55                   	push   rbp
    447e:	48 89 e5             	mov    rbp,rsp
    4481:	53                   	push   rbx
    4482:	48 81 ec 88 00 00 00 	sub    rsp,0x88
    4489:	48 89 7d 88          	mov    QWORD PTR [rbp-0x78],rdi
    448d:	48 89 75 80          	mov    QWORD PTR [rbp-0x80],rsi
    4491:	48 89 95 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdx
    4498:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    449c:	48 83 c0 22          	add    rax,0x22
    44a0:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    44a4:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    44a8:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    44ac:	c0 e8 04             	shr    al,0x4
    44af:	0f b6 c0             	movzx  eax,al
    44b2:	c1 e0 02             	shl    eax,0x2
    44b5:	48 98                	cdqe   
    44b7:	48 8d 50 22          	lea    rdx,[rax+0x22]
    44bb:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    44bf:	48 01 c2             	add    rdx,rax
    44c2:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    44c6:	48 89 10             	mov    QWORD PTR [rax],rdx
    44c9:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    44cd:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    44d0:	89 c2                	mov    edx,eax
    44d2:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    44d6:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    44da:	c0 e8 04             	shr    al,0x4
    44dd:	0f b6 c0             	movzx  eax,al
    44e0:	c1 e0 02             	shl    eax,0x2
    44e3:	89 c1                	mov    ecx,eax
    44e5:	89 d0                	mov    eax,edx
    44e7:	29 c8                	sub    eax,ecx
    44e9:	83 e8 22             	sub    eax,0x22
    44ec:	89 c2                	mov    edx,eax
    44ee:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    44f2:	89 50 30             	mov    DWORD PTR [rax+0x30],edx
    44f5:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    44f9:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    44fd:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    4501:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4505:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4509:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    450d:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4511:	ba 5c 00 00 00       	mov    edx,0x5c
    4516:	be 01 00 00 00       	mov    esi,0x1
    451b:	48 89 c7             	mov    rdi,rax
    451e:	e8 66 0a 00 00       	call   4f89 <add_ip_addr_or_inc_counter>
    4523:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4527:	ba 5c 00 00 00       	mov    edx,0x5c
    452c:	be 00 00 00 00       	mov    esi,0x0
    4531:	48 89 c7             	mov    rdi,rax
    4534:	e8 50 0a 00 00       	call   4f89 <add_ip_addr_or_inc_counter>
    4539:	c7 45 a4 00 00 00 00 	mov    DWORD PTR [rbp-0x5c],0x0
    4540:	c6 45 9f 00          	mov    BYTE PTR [rbp-0x61],0x0
    4544:	c6 45 a0 00          	mov    BYTE PTR [rbp-0x60],0x0
    4548:	c6 45 a1 00          	mov    BYTE PTR [rbp-0x5f],0x0
    454c:	c6 45 a2 00          	mov    BYTE PTR [rbp-0x5e],0x0
    4550:	c6 45 a3 00          	mov    BYTE PTR [rbp-0x5d],0x0
    4554:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4558:	48 83 c0 68          	add    rax,0x68
    455c:	ba 08 00 00 00       	mov    edx,0x8
    4561:	be 00 00 00 00       	mov    esi,0x0
    4566:	48 89 c7             	mov    rdi,rax
    4569:	e8 82 df ff ff       	call   24f0 <memset@plt>
    456e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4572:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    4576:	0f b7 c0             	movzx  eax,ax
    4579:	89 c7                	mov    edi,eax
    457b:	e8 40 e1 ff ff       	call   26c0 <ntohs@plt>
    4580:	0f b7 c0             	movzx  eax,ax
    4583:	89 45 a8             	mov    DWORD PTR [rbp-0x58],eax
    4586:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    458a:	0f b7 00             	movzx  eax,WORD PTR [rax]
    458d:	0f b7 c0             	movzx  eax,ax
    4590:	89 c7                	mov    edi,eax
    4592:	e8 29 e1 ff ff       	call   26c0 <ntohs@plt>
    4597:	0f b7 c0             	movzx  eax,ax
    459a:	89 45 ac             	mov    DWORD PTR [rbp-0x54],eax
    459d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    45a1:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    45a5:	0f b7 c0             	movzx  eax,ax
    45a8:	89 c7                	mov    edi,eax
    45aa:	e8 11 e1 ff ff       	call   26c0 <ntohs@plt>
    45af:	0f b7 d0             	movzx  edx,ax
    45b2:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    45b6:	89 50 28             	mov    DWORD PTR [rax+0x28],edx
    45b9:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    45bd:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    45c0:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    45c3:	0f b6 05 9a 59 10 00 	movzx  eax,BYTE PTR [rip+0x10599a]        # 109f64 <packet_print>
    45ca:	84 c0                	test   al,al
    45cc:	74 4e                	je     461c <ip4_tcp_decode+0x1a3>
    45ce:	48 8d 35 8b 83 00 00 	lea    rsi,[rip+0x838b]        # c960 <_IO_stdin_used+0x960>
    45d5:	48 8d 3d 8a 83 00 00 	lea    rdi,[rip+0x838a]        # c966 <_IO_stdin_used+0x966>
    45dc:	b8 00 00 00 00       	mov    eax,0x0
    45e1:	e8 fa de ff ff       	call   24e0 <printf@plt>
    45e6:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
    45e9:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
    45ed:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    45f0:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    45f4:	41 89 f0             	mov    r8d,esi
    45f7:	48 89 c6             	mov    rsi,rax
    45fa:	48 8d 3d 68 83 00 00 	lea    rdi,[rip+0x8368]        # c969 <_IO_stdin_used+0x969>
    4601:	b8 00 00 00 00       	mov    eax,0x0
    4606:	e8 d5 de ff ff       	call   24e0 <printf@plt>
    460b:	48 8d 3d 6c 83 00 00 	lea    rdi,[rip+0x836c]        # c97e <_IO_stdin_used+0x97e>
    4612:	b8 00 00 00 00       	mov    eax,0x0
    4617:	e8 c4 de ff ff       	call   24e0 <printf@plt>
    461c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4620:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4624:	c0 e8 04             	shr    al,0x4
    4627:	83 e0 01             	and    eax,0x1
    462a:	0f b6 c0             	movzx  eax,al
    462d:	89 c7                	mov    edi,eax
    462f:	e8 8c e0 ff ff       	call   26c0 <ntohs@plt>
    4634:	66 85 c0             	test   ax,ax
    4637:	74 43                	je     467c <ip4_tcp_decode+0x203>
    4639:	0f b6 05 24 59 10 00 	movzx  eax,BYTE PTR [rip+0x105924]        # 109f64 <packet_print>
    4640:	84 c0                	test   al,al
    4642:	74 18                	je     465c <ip4_tcp_decode+0x1e3>
    4644:	48 8d 35 3a 83 00 00 	lea    rsi,[rip+0x833a]        # c985 <_IO_stdin_used+0x985>
    464b:	48 8d 3d 39 83 00 00 	lea    rdi,[rip+0x8339]        # c98b <_IO_stdin_used+0x98b>
    4652:	b8 00 00 00 00       	mov    eax,0x0
    4657:	e8 84 de ff ff       	call   24e0 <printf@plt>
    465c:	c6 45 a0 01          	mov    BYTE PTR [rbp-0x60],0x1
    4660:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4664:	48 8d 58 68          	lea    rbx,[rax+0x68]
    4668:	48 89 df             	mov    rdi,rbx
    466b:	e8 00 e0 ff ff       	call   2670 <strlen@plt>
    4670:	48 01 d8             	add    rax,rbx
    4673:	66 c7 00 41 00       	mov    WORD PTR [rax],0x41
    4678:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    467c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4680:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4684:	83 e0 01             	and    eax,0x1
    4687:	0f b6 c0             	movzx  eax,al
    468a:	89 c7                	mov    edi,eax
    468c:	e8 2f e0 ff ff       	call   26c0 <ntohs@plt>
    4691:	66 85 c0             	test   ax,ax
    4694:	74 43                	je     46d9 <ip4_tcp_decode+0x260>
    4696:	0f b6 05 c7 58 10 00 	movzx  eax,BYTE PTR [rip+0x1058c7]        # 109f64 <packet_print>
    469d:	84 c0                	test   al,al
    469f:	74 18                	je     46b9 <ip4_tcp_decode+0x240>
    46a1:	48 8d 35 eb 82 00 00 	lea    rsi,[rip+0x82eb]        # c993 <_IO_stdin_used+0x993>
    46a8:	48 8d 3d ea 82 00 00 	lea    rdi,[rip+0x82ea]        # c999 <_IO_stdin_used+0x999>
    46af:	b8 00 00 00 00       	mov    eax,0x0
    46b4:	e8 27 de ff ff       	call   24e0 <printf@plt>
    46b9:	c6 45 a2 01          	mov    BYTE PTR [rbp-0x5e],0x1
    46bd:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    46c1:	48 8d 58 68          	lea    rbx,[rax+0x68]
    46c5:	48 89 df             	mov    rdi,rbx
    46c8:	e8 a3 df ff ff       	call   2670 <strlen@plt>
    46cd:	48 01 d8             	add    rax,rbx
    46d0:	66 c7 00 46 00       	mov    WORD PTR [rax],0x46
    46d5:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    46d9:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    46dd:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    46e1:	c0 e8 03             	shr    al,0x3
    46e4:	83 e0 01             	and    eax,0x1
    46e7:	0f b6 c0             	movzx  eax,al
    46ea:	89 c7                	mov    edi,eax
    46ec:	e8 cf df ff ff       	call   26c0 <ntohs@plt>
    46f1:	66 85 c0             	test   ax,ax
    46f4:	74 43                	je     4739 <ip4_tcp_decode+0x2c0>
    46f6:	0f b6 05 67 58 10 00 	movzx  eax,BYTE PTR [rip+0x105867]        # 109f64 <packet_print>
    46fd:	84 c0                	test   al,al
    46ff:	74 18                	je     4719 <ip4_tcp_decode+0x2a0>
    4701:	48 8d 35 99 82 00 00 	lea    rsi,[rip+0x8299]        # c9a1 <_IO_stdin_used+0x9a1>
    4708:	48 8d 3d 98 82 00 00 	lea    rdi,[rip+0x8298]        # c9a7 <_IO_stdin_used+0x9a7>
    470f:	b8 00 00 00 00       	mov    eax,0x0
    4714:	e8 c7 dd ff ff       	call   24e0 <printf@plt>
    4719:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    471d:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4721:	48 8d 58 68          	lea    rbx,[rax+0x68]
    4725:	48 89 df             	mov    rdi,rbx
    4728:	e8 43 df ff ff       	call   2670 <strlen@plt>
    472d:	48 01 d8             	add    rax,rbx
    4730:	66 c7 00 50 00       	mov    WORD PTR [rax],0x50
    4735:	c6 45 a3 01          	mov    BYTE PTR [rbp-0x5d],0x1
    4739:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    473d:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4741:	c0 e8 02             	shr    al,0x2
    4744:	83 e0 01             	and    eax,0x1
    4747:	0f b6 c0             	movzx  eax,al
    474a:	89 c7                	mov    edi,eax
    474c:	e8 6f df ff ff       	call   26c0 <ntohs@plt>
    4751:	66 85 c0             	test   ax,ax
    4754:	74 43                	je     4799 <ip4_tcp_decode+0x320>
    4756:	0f b6 05 07 58 10 00 	movzx  eax,BYTE PTR [rip+0x105807]        # 109f64 <packet_print>
    475d:	84 c0                	test   al,al
    475f:	74 18                	je     4779 <ip4_tcp_decode+0x300>
    4761:	48 8d 35 47 82 00 00 	lea    rsi,[rip+0x8247]        # c9af <_IO_stdin_used+0x9af>
    4768:	48 8d 3d 46 82 00 00 	lea    rdi,[rip+0x8246]        # c9b5 <_IO_stdin_used+0x9b5>
    476f:	b8 00 00 00 00       	mov    eax,0x0
    4774:	e8 67 dd ff ff       	call   24e0 <printf@plt>
    4779:	c6 45 9f 01          	mov    BYTE PTR [rbp-0x61],0x1
    477d:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4781:	48 8d 58 68          	lea    rbx,[rax+0x68]
    4785:	48 89 df             	mov    rdi,rbx
    4788:	e8 e3 de ff ff       	call   2670 <strlen@plt>
    478d:	48 01 d8             	add    rax,rbx
    4790:	66 c7 00 52 00       	mov    WORD PTR [rax],0x52
    4795:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    4799:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    479d:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    47a1:	d0 e8                	shr    al,1
    47a3:	83 e0 01             	and    eax,0x1
    47a6:	0f b6 c0             	movzx  eax,al
    47a9:	89 c7                	mov    edi,eax
    47ab:	e8 10 df ff ff       	call   26c0 <ntohs@plt>
    47b0:	66 85 c0             	test   ax,ax
    47b3:	74 43                	je     47f8 <ip4_tcp_decode+0x37f>
    47b5:	0f b6 05 a8 57 10 00 	movzx  eax,BYTE PTR [rip+0x1057a8]        # 109f64 <packet_print>
    47bc:	84 c0                	test   al,al
    47be:	74 18                	je     47d8 <ip4_tcp_decode+0x35f>
    47c0:	48 8d 35 f6 81 00 00 	lea    rsi,[rip+0x81f6]        # c9bd <_IO_stdin_used+0x9bd>
    47c7:	48 8d 3d f5 81 00 00 	lea    rdi,[rip+0x81f5]        # c9c3 <_IO_stdin_used+0x9c3>
    47ce:	b8 00 00 00 00       	mov    eax,0x0
    47d3:	e8 08 dd ff ff       	call   24e0 <printf@plt>
    47d8:	c6 45 a1 01          	mov    BYTE PTR [rbp-0x5f],0x1
    47dc:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    47e0:	48 8d 58 68          	lea    rbx,[rax+0x68]
    47e4:	48 89 df             	mov    rdi,rbx
    47e7:	e8 84 de ff ff       	call   2670 <strlen@plt>
    47ec:	48 01 d8             	add    rax,rbx
    47ef:	66 c7 00 53 00       	mov    WORD PTR [rax],0x53
    47f4:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    47f8:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    47fc:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4800:	c0 e8 05             	shr    al,0x5
    4803:	83 e0 01             	and    eax,0x1
    4806:	0f b6 c0             	movzx  eax,al
    4809:	89 c7                	mov    edi,eax
    480b:	e8 b0 de ff ff       	call   26c0 <ntohs@plt>
    4810:	66 85 c0             	test   ax,ax
    4813:	74 3f                	je     4854 <ip4_tcp_decode+0x3db>
    4815:	0f b6 05 48 57 10 00 	movzx  eax,BYTE PTR [rip+0x105748]        # 109f64 <packet_print>
    481c:	84 c0                	test   al,al
    481e:	74 18                	je     4838 <ip4_tcp_decode+0x3bf>
    4820:	48 8d 35 a4 81 00 00 	lea    rsi,[rip+0x81a4]        # c9cb <_IO_stdin_used+0x9cb>
    4827:	48 8d 3d a3 81 00 00 	lea    rdi,[rip+0x81a3]        # c9d1 <_IO_stdin_used+0x9d1>
    482e:	b8 00 00 00 00       	mov    eax,0x0
    4833:	e8 a8 dc ff ff       	call   24e0 <printf@plt>
    4838:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    483c:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4840:	48 8d 58 68          	lea    rbx,[rax+0x68]
    4844:	48 89 df             	mov    rdi,rbx
    4847:	e8 24 de ff ff       	call   2670 <strlen@plt>
    484c:	48 01 d8             	add    rax,rbx
    484f:	66 c7 00 55 00       	mov    WORD PTR [rax],0x55
    4854:	0f b6 05 09 57 10 00 	movzx  eax,BYTE PTR [rip+0x105709]        # 109f64 <packet_print>
    485b:	84 c0                	test   al,al
    485d:	74 3c                	je     489b <ip4_tcp_decode+0x422>
    485f:	48 8d 35 fa 80 00 00 	lea    rsi,[rip+0x80fa]        # c960 <_IO_stdin_used+0x960>
    4866:	48 8d 3d f9 80 00 00 	lea    rdi,[rip+0x80f9]        # c966 <_IO_stdin_used+0x966>
    486d:	b8 00 00 00 00       	mov    eax,0x0
    4872:	e8 69 dc ff ff       	call   24e0 <printf@plt>
    4877:	48 8d 3d 5b 81 00 00 	lea    rdi,[rip+0x815b]        # c9d9 <_IO_stdin_used+0x9d9>
    487e:	e8 bd dc ff ff       	call   2540 <puts@plt>
    4883:	48 8d 35 51 81 00 00 	lea    rsi,[rip+0x8151]        # c9db <_IO_stdin_used+0x9db>
    488a:	48 8d 3d d5 80 00 00 	lea    rdi,[rip+0x80d5]        # c966 <_IO_stdin_used+0x966>
    4891:	b8 00 00 00 00       	mov    eax,0x0
    4896:	e8 45 dc ff ff       	call   24e0 <printf@plt>
    489b:	83 7d a4 03          	cmp    DWORD PTR [rbp-0x5c],0x3
    489f:	7f 06                	jg     48a7 <ip4_tcp_decode+0x42e>
    48a1:	83 7d a4 00          	cmp    DWORD PTR [rbp-0x5c],0x0
    48a5:	75 41                	jne    48e8 <ip4_tcp_decode+0x46f>
    48a7:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
    48aa:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
    48ae:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    48b1:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    48b5:	48 8d 0d 1f 81 00 00 	lea    rcx,[rip+0x811f]        # c9db <_IO_stdin_used+0x9db>
    48bc:	51                   	push   rcx
    48bd:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
    48c0:	51                   	push   rcx
    48c1:	41 89 f9             	mov    r9d,edi
    48c4:	49 89 f0             	mov    r8,rsi
    48c7:	89 d1                	mov    ecx,edx
    48c9:	48 89 c2             	mov    rdx,rax
    48cc:	48 8d 35 dc 80 00 00 	lea    rsi,[rip+0x80dc]        # c9af <_IO_stdin_used+0x9af>
    48d3:	48 8d 3d 06 81 00 00 	lea    rdi,[rip+0x8106]        # c9e0 <_IO_stdin_used+0x9e0>
    48da:	b8 00 00 00 00       	mov    eax,0x0
    48df:	e8 fc db ff ff       	call   24e0 <printf@plt>
    48e4:	48 83 c4 10          	add    rsp,0x10
    48e8:	0f b6 05 d3 56 10 00 	movzx  eax,BYTE PTR [rip+0x1056d3]        # 109fc2 <use_spi>
    48ef:	84 c0                	test   al,al
    48f1:	0f 84 8c 00 00 00    	je     4983 <ip4_tcp_decode+0x50a>
    48f7:	80 7d a3 00          	cmp    BYTE PTR [rbp-0x5d],0x0
    48fb:	74 1a                	je     4917 <ip4_tcp_decode+0x49e>
    48fd:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4901:	74 14                	je     4917 <ip4_tcp_decode+0x49e>
    4903:	83 7d a4 02          	cmp    DWORD PTR [rbp-0x5c],0x2
    4907:	75 0e                	jne    4917 <ip4_tcp_decode+0x49e>
    4909:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    490d:	48 89 c7             	mov    rdi,rax
    4910:	e8 20 49 00 00       	call   9235 <handle_data_pkt>
    4915:	eb 6c                	jmp    4983 <ip4_tcp_decode+0x50a>
    4917:	80 7d a2 00          	cmp    BYTE PTR [rbp-0x5e],0x0
    491b:	74 14                	je     4931 <ip4_tcp_decode+0x4b8>
    491d:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4921:	74 0e                	je     4931 <ip4_tcp_decode+0x4b8>
    4923:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4927:	48 89 c7             	mov    rdi,rax
    492a:	e8 f3 47 00 00       	call   9122 <polite_end>
    492f:	eb 52                	jmp    4983 <ip4_tcp_decode+0x50a>
    4931:	80 7d a1 00          	cmp    BYTE PTR [rbp-0x5f],0x0
    4935:	74 14                	je     494b <ip4_tcp_decode+0x4d2>
    4937:	83 7d a4 01          	cmp    DWORD PTR [rbp-0x5c],0x1
    493b:	75 0e                	jne    494b <ip4_tcp_decode+0x4d2>
    493d:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4941:	48 89 c7             	mov    rdi,rax
    4944:	e8 36 43 00 00       	call   8c7f <add_new_conversation>
    4949:	eb 38                	jmp    4983 <ip4_tcp_decode+0x50a>
    494b:	80 7d a1 00          	cmp    BYTE PTR [rbp-0x5f],0x0
    494f:	74 1a                	je     496b <ip4_tcp_decode+0x4f2>
    4951:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4955:	74 14                	je     496b <ip4_tcp_decode+0x4f2>
    4957:	83 7d a4 02          	cmp    DWORD PTR [rbp-0x5c],0x2
    495b:	75 0e                	jne    496b <ip4_tcp_decode+0x4f2>
    495d:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4961:	48 89 c7             	mov    rdi,rax
    4964:	e8 4f 45 00 00       	call   8eb8 <spi_ud_thw>
    4969:	eb 18                	jmp    4983 <ip4_tcp_decode+0x50a>
    496b:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    496f:	74 12                	je     4983 <ip4_tcp_decode+0x50a>
    4971:	83 7d a4 01          	cmp    DWORD PTR [rbp-0x5c],0x1
    4975:	75 0c                	jne    4983 <ip4_tcp_decode+0x50a>
    4977:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    497b:	48 89 c7             	mov    rdi,rax
    497e:	e8 fe 45 00 00       	call   8f81 <update_table>
    4983:	80 7d a3 00          	cmp    BYTE PTR [rbp-0x5d],0x0
    4987:	74 17                	je     49a0 <ip4_tcp_decode+0x527>
    4989:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    498d:	74 11                	je     49a0 <ip4_tcp_decode+0x527>
    498f:	83 7d a4 02          	cmp    DWORD PTR [rbp-0x5c],0x2
    4993:	75 0b                	jne    49a0 <ip4_tcp_decode+0x527>
    4995:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4999:	c7 40 70 01 00 00 00 	mov    DWORD PTR [rax+0x70],0x1
    49a0:	80 7d 9f 00          	cmp    BYTE PTR [rbp-0x61],0x0
    49a4:	0f 84 8f 01 00 00    	je     4b39 <ip4_tcp_decode+0x6c0>
    49aa:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    49ae:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    49b2:	48 89 c7             	mov    rdi,rax
    49b5:	e8 7e 30 00 00       	call   7a38 <member_exists>
    49ba:	89 45 b0             	mov    DWORD PTR [rbp-0x50],eax
    49bd:	83 7d b0 ff          	cmp    DWORD PTR [rbp-0x50],0xffffffff
    49c1:	0f 84 db 00 00 00    	je     4aa2 <ip4_tcp_decode+0x629>
    49c7:	8b 45 b0             	mov    eax,DWORD PTR [rbp-0x50]
    49ca:	48 63 d0             	movsxd rdx,eax
    49cd:	48 89 d0             	mov    rax,rdx
    49d0:	48 c1 e0 02          	shl    rax,0x2
    49d4:	48 01 d0             	add    rax,rdx
    49d7:	48 c1 e0 03          	shl    rax,0x3
    49db:	48 01 d0             	add    rax,rdx
    49de:	48 c1 e0 04          	shl    rax,0x4
    49e2:	48 8d 15 37 eb 0e 00 	lea    rdx,[rip+0xeeb37]        # f3520 <watchlist>
    49e9:	48 01 d0             	add    rax,rdx
    49ec:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    49f0:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    49f4:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    49f8:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    49fc:	48 83 c2 08          	add    rdx,0x8
    4a00:	48 89 c6             	mov    rsi,rax
    4a03:	48 89 d7             	mov    rdi,rdx
    4a06:	e8 15 de ff ff       	call   2820 <strcpy@plt>
    4a0b:	bf 00 00 00 00       	mov    edi,0x0
    4a10:	e8 1b df ff ff       	call   2930 <time@plt>
    4a15:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    4a19:	8b 92 48 01 00 00    	mov    edx,DWORD PTR [rdx+0x148]
    4a1f:	8d 72 01             	lea    esi,[rdx+0x1]
    4a22:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    4a26:	89 b1 48 01 00 00    	mov    DWORD PTR [rcx+0x148],esi
    4a2c:	48 89 c1             	mov    rcx,rax
    4a2f:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4a33:	89 d2                	mov    edx,edx
    4a35:	48 83 c2 28          	add    rdx,0x28
    4a39:	48 89 4c d0 10       	mov    QWORD PTR [rax+rdx*8+0x10],rcx
    4a3e:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4a42:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    4a48:	83 f8 1d             	cmp    eax,0x1d
    4a4b:	0f 86 e8 00 00 00    	jbe    4b39 <ip4_tcp_decode+0x6c0>
    4a51:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4a55:	c7 80 48 01 00 00 1e 	mov    DWORD PTR [rax+0x148],0x1e
    4a5c:	00 00 00 
    4a5f:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4a63:	48 89 c7             	mov    rdi,rax
    4a66:	e8 8b 2b 00 00       	call   75f6 <tcp_rst_portscan_detect>
    4a6b:	84 c0                	test   al,al
    4a6d:	0f 84 c6 00 00 00    	je     4b39 <ip4_tcp_decode+0x6c0>
    4a73:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4a77:	c7 80 48 01 00 00 00 	mov    DWORD PTR [rax+0x148],0x0
    4a7e:	00 00 00 
    4a81:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4a85:	48 05 50 01 00 00    	add    rax,0x150
    4a8b:	ba f0 00 00 00       	mov    edx,0xf0
    4a90:	be 00 00 00 00       	mov    esi,0x0
    4a95:	48 89 c7             	mov    rdi,rax
    4a98:	e8 53 da ff ff       	call   24f0 <memset@plt>
    4a9d:	e9 97 00 00 00       	jmp    4b39 <ip4_tcp_decode+0x6c0>
    4aa2:	8b 05 70 c5 00 00    	mov    eax,DWORD PTR [rip+0xc570]        # 11018 <watchlist_num>
    4aa8:	83 c0 01             	add    eax,0x1
    4aab:	89 05 67 c5 00 00    	mov    DWORD PTR [rip+0xc567],eax        # 11018 <watchlist_num>
    4ab1:	8b 05 61 c5 00 00    	mov    eax,DWORD PTR [rip+0xc561]        # 11018 <watchlist_num>
    4ab7:	48 63 d0             	movsxd rdx,eax
    4aba:	48 89 d0             	mov    rax,rdx
    4abd:	48 c1 e0 02          	shl    rax,0x2
    4ac1:	48 01 d0             	add    rax,rdx
    4ac4:	48 c1 e0 03          	shl    rax,0x3
    4ac8:	48 01 d0             	add    rax,rdx
    4acb:	48 c1 e0 04          	shl    rax,0x4
    4acf:	48 8d 15 4a ea 0e 00 	lea    rdx,[rip+0xeea4a]        # f3520 <watchlist>
    4ad6:	48 01 d0             	add    rax,rdx
    4ad9:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    4add:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4ae1:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4ae5:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    4ae9:	48 83 c2 08          	add    rdx,0x8
    4aed:	48 89 c6             	mov    rsi,rax
    4af0:	48 89 d7             	mov    rdi,rdx
    4af3:	e8 28 dd ff ff       	call   2820 <strcpy@plt>
    4af8:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4afc:	c7 80 48 01 00 00 00 	mov    DWORD PTR [rax+0x148],0x0
    4b03:	00 00 00 
    4b06:	bf 00 00 00 00       	mov    edi,0x0
    4b0b:	e8 20 de ff ff       	call   2930 <time@plt>
    4b10:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    4b14:	8b 92 48 01 00 00    	mov    edx,DWORD PTR [rdx+0x148]
    4b1a:	8d 72 01             	lea    esi,[rdx+0x1]
    4b1d:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    4b21:	89 b1 48 01 00 00    	mov    DWORD PTR [rcx+0x148],esi
    4b27:	48 89 c1             	mov    rcx,rax
    4b2a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4b2e:	89 d2                	mov    edx,edx
    4b30:	48 83 c2 28          	add    rdx,0x28
    4b34:	48 89 4c d0 10       	mov    QWORD PTR [rax+rdx*8+0x10],rcx
    4b39:	8b 05 49 c5 00 00    	mov    eax,DWORD PTR [rip+0xc549]        # 11088 <strict_nmap_host_alive_check>
    4b3f:	83 f8 01             	cmp    eax,0x1
    4b42:	0f 85 f6 00 00 00    	jne    4c3e <ip4_tcp_decode+0x7c5>
    4b48:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4b4c:	74 0c                	je     4b5a <ip4_tcp_decode+0x6e1>
    4b4e:	83 7d a8 50          	cmp    DWORD PTR [rbp-0x58],0x50
    4b52:	74 26                	je     4b7a <ip4_tcp_decode+0x701>
    4b54:	83 7d ac 50          	cmp    DWORD PTR [rbp-0x54],0x50
    4b58:	74 20                	je     4b7a <ip4_tcp_decode+0x701>
    4b5a:	80 7d a1 00          	cmp    BYTE PTR [rbp-0x5f],0x0
    4b5e:	0f 84 da 00 00 00    	je     4c3e <ip4_tcp_decode+0x7c5>
    4b64:	81 7d a8 bb 01 00 00 	cmp    DWORD PTR [rbp-0x58],0x1bb
    4b6b:	74 0d                	je     4b7a <ip4_tcp_decode+0x701>
    4b6d:	81 7d ac bb 01 00 00 	cmp    DWORD PTR [rbp-0x54],0x1bb
    4b74:	0f 85 c4 00 00 00    	jne    4c3e <ip4_tcp_decode+0x7c5>
    4b7a:	8b 45 a8             	mov    eax,DWORD PTR [rbp-0x58]
    4b7d:	3b 45 ac             	cmp    eax,DWORD PTR [rbp-0x54]
    4b80:	76 0a                	jbe    4b8c <ip4_tcp_decode+0x713>
    4b82:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4b86:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    4b8a:	eb 08                	jmp    4b94 <ip4_tcp_decode+0x71b>
    4b8c:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4b90:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    4b94:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4b98:	48 89 c7             	mov    rdi,rax
    4b9b:	e8 98 2e 00 00       	call   7a38 <member_exists>
    4ba0:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
    4ba3:	83 7d b4 ff          	cmp    DWORD PTR [rbp-0x4c],0xffffffff
    4ba7:	0f 84 91 00 00 00    	je     4c3e <ip4_tcp_decode+0x7c5>
    4bad:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    4bb0:	48 63 d0             	movsxd rdx,eax
    4bb3:	48 89 d0             	mov    rax,rdx
    4bb6:	48 c1 e0 02          	shl    rax,0x2
    4bba:	48 01 d0             	add    rax,rdx
    4bbd:	48 c1 e0 03          	shl    rax,0x3
    4bc1:	48 01 d0             	add    rax,rdx
    4bc4:	48 c1 e0 04          	shl    rax,0x4
    4bc8:	48 8d 15 51 e9 0e 00 	lea    rdx,[rip+0xee951]        # f3520 <watchlist>
    4bcf:	48 01 d0             	add    rax,rdx
    4bd2:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    4bd6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4bda:	8b 40 34             	mov    eax,DWORD PTR [rax+0x34]
    4bdd:	85 c0                	test   eax,eax
    4bdf:	75 2a                	jne    4c0b <ip4_tcp_decode+0x792>
    4be1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4be5:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4be8:	83 f8 01             	cmp    eax,0x1
    4beb:	75 1e                	jne    4c0b <ip4_tcp_decode+0x792>
    4bed:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4bf1:	c7 40 34 01 00 00 00 	mov    DWORD PTR [rax+0x34],0x1
    4bf8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4bfc:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4bff:	8d 50 01             	lea    edx,[rax+0x1]
    4c02:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4c06:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    4c09:	eb 33                	jmp    4c3e <ip4_tcp_decode+0x7c5>
    4c0b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4c0f:	8b 40 38             	mov    eax,DWORD PTR [rax+0x38]
    4c12:	85 c0                	test   eax,eax
    4c14:	75 28                	jne    4c3e <ip4_tcp_decode+0x7c5>
    4c16:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4c1a:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4c1d:	83 f8 02             	cmp    eax,0x2
    4c20:	75 1c                	jne    4c3e <ip4_tcp_decode+0x7c5>
    4c22:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4c26:	c7 40 38 01 00 00 00 	mov    DWORD PTR [rax+0x38],0x1
    4c2d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4c31:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4c34:	8d 50 01             	lea    edx,[rax+0x1]
    4c37:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4c3b:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    4c3e:	0f b6 05 1f 53 10 00 	movzx  eax,BYTE PTR [rip+0x10531f]        # 109f64 <packet_print>
    4c45:	84 c0                	test   al,al
    4c47:	74 3a                	je     4c83 <ip4_tcp_decode+0x80a>
    4c49:	80 7d a3 00          	cmp    BYTE PTR [rbp-0x5d],0x0
    4c4d:	74 34                	je     4c83 <ip4_tcp_decode+0x80a>
    4c4f:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4c53:	74 2e                	je     4c83 <ip4_tcp_decode+0x80a>
    4c55:	0f b6 45 a2          	movzx  eax,BYTE PTR [rbp-0x5e]
    4c59:	83 f0 01             	xor    eax,0x1
    4c5c:	84 c0                	test   al,al
    4c5e:	74 23                	je     4c83 <ip4_tcp_decode+0x80a>
    4c60:	83 7d a8 50          	cmp    DWORD PTR [rbp-0x58],0x50
    4c64:	74 06                	je     4c6c <ip4_tcp_decode+0x7f3>
    4c66:	83 7d ac 50          	cmp    DWORD PTR [rbp-0x54],0x50
    4c6a:	75 17                	jne    4c83 <ip4_tcp_decode+0x80a>
    4c6c:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    4c70:	48 8d 50 42          	lea    rdx,[rax+0x42]
    4c74:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4c78:	48 89 c6             	mov    rsi,rax
    4c7b:	48 89 d7             	mov    rdi,rdx
    4c7e:	e8 2c 3a 00 00       	call   86af <http_disect>
    4c83:	83 7d a8 15          	cmp    DWORD PTR [rbp-0x58],0x15
    4c87:	74 06                	je     4c8f <ip4_tcp_decode+0x816>
    4c89:	83 7d ac 15          	cmp    DWORD PTR [rbp-0x54],0x15
    4c8d:	75 2d                	jne    4cbc <ip4_tcp_decode+0x843>
    4c8f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4c93:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    4c97:	c0 e8 04             	shr    al,0x4
    4c9a:	0f b6 c0             	movzx  eax,al
    4c9d:	c1 e0 02             	shl    eax,0x2
    4ca0:	48 98                	cdqe   
    4ca2:	48 8d 50 22          	lea    rdx,[rax+0x22]
    4ca6:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    4caa:	48 01 c2             	add    rdx,rax
    4cad:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4cb1:	48 89 c6             	mov    rsi,rax
    4cb4:	48 89 d7             	mov    rdi,rdx
    4cb7:	e8 de 3b 00 00       	call   889a <ftp_disect>
    4cbc:	81 7d a8 bb 01 00 00 	cmp    DWORD PTR [rbp-0x58],0x1bb
    4cc3:	74 09                	je     4cce <ip4_tcp_decode+0x855>
    4cc5:	81 7d ac bb 01 00 00 	cmp    DWORD PTR [rbp-0x54],0x1bb
    4ccc:	75 29                	jne    4cf7 <ip4_tcp_decode+0x87e>
    4cce:	80 7d a3 00          	cmp    BYTE PTR [rbp-0x5d],0x0
    4cd2:	74 23                	je     4cf7 <ip4_tcp_decode+0x87e>
    4cd4:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4cd8:	74 1d                	je     4cf7 <ip4_tcp_decode+0x87e>
    4cda:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4cde:	48 8b 00             	mov    rax,QWORD PTR [rax]
    4ce1:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
    4ce8:	48 8b 4d 80          	mov    rcx,QWORD PTR [rbp-0x80]
    4cec:	48 89 ce             	mov    rsi,rcx
    4cef:	48 89 c7             	mov    rdi,rax
    4cf2:	e8 78 33 00 00       	call   806f <tls_decode>
    4cf7:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    4cfe:	8b 50 14             	mov    edx,DWORD PTR [rax+0x14]
    4d01:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4d05:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    4d09:	c0 e8 04             	shr    al,0x4
    4d0c:	0f b6 c0             	movzx  eax,al
    4d0f:	c1 e0 02             	shl    eax,0x2
    4d12:	89 c1                	mov    ecx,eax
    4d14:	89 d0                	mov    eax,edx
    4d16:	29 c8                	sub    eax,ecx
    4d18:	8d 50 de             	lea    edx,[rax-0x22]
    4d1b:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4d1f:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    4d22:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4d26:	48 89 c7             	mov    rdi,rax
    4d29:	e8 95 17 00 00       	call   64c3 <rulemgr>
    4d2e:	90                   	nop
    4d2f:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    4d33:	c9                   	leave  
    4d34:	c3                   	ret    

0000000000004d35 <ip4_udp_decode>:
    4d35:	f3 0f 1e fa          	endbr64 
    4d39:	55                   	push   rbp
    4d3a:	48 89 e5             	mov    rbp,rsp
    4d3d:	48 83 ec 30          	sub    rsp,0x30
    4d41:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    4d45:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    4d49:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    4d4d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4d51:	48 83 c0 22          	add    rax,0x22
    4d55:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4d59:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4d5d:	48 8d 50 2a          	lea    rdx,[rax+0x2a]
    4d61:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d65:	48 89 10             	mov    QWORD PTR [rax],rdx
    4d68:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d6c:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    4d70:	ba 5d 00 00 00       	mov    edx,0x5d
    4d75:	be 01 00 00 00       	mov    esi,0x1
    4d7a:	48 89 c7             	mov    rdi,rax
    4d7d:	e8 07 02 00 00       	call   4f89 <add_ip_addr_or_inc_counter>
    4d82:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d86:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4d8a:	ba 5d 00 00 00       	mov    edx,0x5d
    4d8f:	be 00 00 00 00       	mov    esi,0x0
    4d94:	48 89 c7             	mov    rdi,rax
    4d97:	e8 ed 01 00 00       	call   4f89 <add_ip_addr_or_inc_counter>
    4d9c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4da0:	0f b7 00             	movzx  eax,WORD PTR [rax]
    4da3:	0f b7 c0             	movzx  eax,ax
    4da6:	89 c7                	mov    edi,eax
    4da8:	e8 13 d9 ff ff       	call   26c0 <ntohs@plt>
    4dad:	0f b7 c0             	movzx  eax,ax
    4db0:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
    4db3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4db7:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    4dbb:	0f b7 c0             	movzx  eax,ax
    4dbe:	89 c7                	mov    edi,eax
    4dc0:	e8 fb d8 ff ff       	call   26c0 <ntohs@plt>
    4dc5:	0f b7 c0             	movzx  eax,ax
    4dc8:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    4dcb:	0f b6 05 92 51 10 00 	movzx  eax,BYTE PTR [rip+0x105192]        # 109f64 <packet_print>
    4dd2:	84 c0                	test   al,al
    4dd4:	74 5d                	je     4e33 <ip4_udp_decode+0xfe>
    4dd6:	48 8d 35 43 7c 00 00 	lea    rsi,[rip+0x7c43]        # ca20 <_IO_stdin_used+0xa20>
    4ddd:	48 8d 3d 42 7c 00 00 	lea    rdi,[rip+0x7c42]        # ca26 <_IO_stdin_used+0xa26>
    4de4:	b8 00 00 00 00       	mov    eax,0x0
    4de9:	e8 f2 d6 ff ff       	call   24e0 <printf@plt>
    4dee:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4df2:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    4df6:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4dfa:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    4dfe:	8b 75 f4             	mov    esi,DWORD PTR [rbp-0xc]
    4e01:	8b 55 f0             	mov    edx,DWORD PTR [rbp-0x10]
    4e04:	41 89 f0             	mov    r8d,esi
    4e07:	48 89 c6             	mov    rsi,rax
    4e0a:	48 8d 3d 18 7c 00 00 	lea    rdi,[rip+0x7c18]        # ca29 <_IO_stdin_used+0xa29>
    4e11:	b8 00 00 00 00       	mov    eax,0x0
    4e16:	e8 c5 d6 ff ff       	call   24e0 <printf@plt>
    4e1b:	48 8d 35 20 7c 00 00 	lea    rsi,[rip+0x7c20]        # ca42 <_IO_stdin_used+0xa42>
    4e22:	48 8d 3d fd 7b 00 00 	lea    rdi,[rip+0x7bfd]        # ca26 <_IO_stdin_used+0xa26>
    4e29:	b8 00 00 00 00       	mov    eax,0x0
    4e2e:	e8 ad d6 ff ff       	call   24e0 <printf@plt>
    4e33:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e37:	8b 55 f0             	mov    edx,DWORD PTR [rbp-0x10]
    4e3a:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    4e3d:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e41:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
    4e44:	89 50 28             	mov    DWORD PTR [rax+0x28],edx
    4e47:	83 7d f0 35          	cmp    DWORD PTR [rbp-0x10],0x35
    4e4b:	74 06                	je     4e53 <ip4_udp_decode+0x11e>
    4e4d:	83 7d f4 35          	cmp    DWORD PTR [rbp-0xc],0x35
    4e51:	75 17                	jne    4e6a <ip4_udp_decode+0x135>
    4e53:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4e57:	48 8d 50 2b          	lea    rdx,[rax+0x2b]
    4e5b:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e5f:	48 89 c6             	mov    rsi,rax
    4e62:	48 89 d7             	mov    rdi,rdx
    4e65:	e8 f7 38 00 00       	call   8761 <dns_disect>
    4e6a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4e6e:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    4e71:	8d 50 d6             	lea    edx,[rax-0x2a]
    4e74:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e78:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    4e7b:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e7f:	48 89 c7             	mov    rdi,rax
    4e82:	e8 3c 16 00 00       	call   64c3 <rulemgr>
    4e87:	90                   	nop
    4e88:	c9                   	leave  
    4e89:	c3                   	ret    

0000000000004e8a <ip4_igmp_decode>:
    4e8a:	f3 0f 1e fa          	endbr64 
    4e8e:	55                   	push   rbp
    4e8f:	48 89 e5             	mov    rbp,rsp
    4e92:	48 83 ec 60          	sub    rsp,0x60
    4e96:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    4e9a:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
    4e9e:	48 89 55 a8          	mov    QWORD PTR [rbp-0x58],rdx
    4ea2:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4ea9:	00 00 
    4eab:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4eaf:	31 c0                	xor    eax,eax
    4eb1:	0f b6 05 ac 50 10 00 	movzx  eax,BYTE PTR [rip+0x1050ac]        # 109f64 <packet_print>
    4eb8:	84 c0                	test   al,al
    4eba:	0f 84 b1 00 00 00    	je     4f71 <ip4_igmp_decode+0xe7>
    4ec0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4ec4:	48 83 c0 26          	add    rax,0x26
    4ec8:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    4ecc:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    4ed0:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    4ed4:	48 89 c6             	mov    rsi,rax
    4ed7:	48 8d 3d 6a 7b 00 00 	lea    rdi,[rip+0x7b6a]        # ca48 <_IO_stdin_used+0xa48>
    4ede:	b8 00 00 00 00       	mov    eax,0x0
    4ee3:	e8 f8 d5 ff ff       	call   24e0 <printf@plt>
    4ee8:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4eec:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4eef:	0f b6 c0             	movzx  eax,al
    4ef2:	83 f8 11             	cmp    eax,0x11
    4ef5:	74 07                	je     4efe <ip4_igmp_decode+0x74>
    4ef7:	83 f8 22             	cmp    eax,0x22
    4efa:	74 10                	je     4f0c <ip4_igmp_decode+0x82>
    4efc:	eb 54                	jmp    4f52 <ip4_igmp_decode+0xc8>
    4efe:	48 8d 3d 58 7b 00 00 	lea    rdi,[rip+0x7b58]        # ca5d <_IO_stdin_used+0xa5d>
    4f05:	e8 36 d6 ff ff       	call   2540 <puts@plt>
    4f0a:	eb 66                	jmp    4f72 <ip4_igmp_decode+0xe8>
    4f0c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4f10:	48 83 c0 26          	add    rax,0x26
    4f14:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    4f18:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4f1c:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    4f1f:	89 c7                	mov    edi,eax
    4f21:	e8 83 e2 ff ff       	call   31a9 <ipv4_ntoa>
    4f26:	48 89 c2             	mov    rdx,rax
    4f29:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    4f2d:	48 89 d6             	mov    rsi,rdx
    4f30:	48 89 c7             	mov    rdi,rax
    4f33:	e8 e8 d8 ff ff       	call   2820 <strcpy@plt>
    4f38:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    4f3c:	48 89 c6             	mov    rsi,rax
    4f3f:	48 8d 3d 32 7b 00 00 	lea    rdi,[rip+0x7b32]        # ca78 <_IO_stdin_used+0xa78>
    4f46:	b8 00 00 00 00       	mov    eax,0x0
    4f4b:	e8 90 d5 ff ff       	call   24e0 <printf@plt>
    4f50:	eb 20                	jmp    4f72 <ip4_igmp_decode+0xe8>
    4f52:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4f56:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4f59:	0f b6 c0             	movzx  eax,al
    4f5c:	89 c6                	mov    esi,eax
    4f5e:	48 8d 3d 49 7b 00 00 	lea    rdi,[rip+0x7b49]        # caae <_IO_stdin_used+0xaae>
    4f65:	b8 00 00 00 00       	mov    eax,0x0
    4f6a:	e8 71 d5 ff ff       	call   24e0 <printf@plt>
    4f6f:	eb 01                	jmp    4f72 <ip4_igmp_decode+0xe8>
    4f71:	90                   	nop
    4f72:	90                   	nop
    4f73:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4f77:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    4f7e:	00 00 
    4f80:	74 05                	je     4f87 <ip4_igmp_decode+0xfd>
    4f82:	e8 59 d8 ff ff       	call   27e0 <__stack_chk_fail@plt>
    4f87:	c9                   	leave  
    4f88:	c3                   	ret    

0000000000004f89 <add_ip_addr_or_inc_counter>:
    4f89:	f3 0f 1e fa          	endbr64 
    4f8d:	55                   	push   rbp
    4f8e:	48 89 e5             	mov    rbp,rsp
    4f91:	48 83 ec 60          	sub    rsp,0x60
    4f95:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    4f99:	89 f0                	mov    eax,esi
    4f9b:	89 55 a0             	mov    DWORD PTR [rbp-0x60],edx
    4f9e:	88 45 a4             	mov    BYTE PTR [rbp-0x5c],al
    4fa1:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4fa8:	00 00 
    4faa:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4fae:	31 c0                	xor    eax,eax
    4fb0:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4fb4:	ba 08 00 00 00       	mov    edx,0x8
    4fb9:	be 00 00 00 00       	mov    esi,0x0
    4fbe:	48 89 c7             	mov    rdi,rax
    4fc1:	e8 2a d5 ff ff       	call   24f0 <memset@plt>
    4fc6:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    4fca:	ba 1c 00 00 00       	mov    edx,0x1c
    4fcf:	be 00 00 00 00       	mov    esi,0x0
    4fd4:	48 89 c7             	mov    rdi,rax
    4fd7:	e8 14 d5 ff ff       	call   24f0 <memset@plt>
    4fdc:	48 8b 4d a8          	mov    rcx,QWORD PTR [rbp-0x58]
    4fe0:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4fe4:	ba 18 00 00 00       	mov    edx,0x18
    4fe9:	48 89 ce             	mov    rsi,rcx
    4fec:	48 89 c7             	mov    rdi,rax
    4fef:	e8 7c d8 ff ff       	call   2870 <strncpy@plt>
    4ff4:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    4ff8:	ba 1c 00 00 00       	mov    edx,0x1c
    4ffd:	be 00 00 00 00       	mov    esi,0x0
    5002:	48 89 c7             	mov    rdi,rax
    5005:	e8 e6 d4 ff ff       	call   24f0 <memset@plt>
    500a:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    500e:	48 8d 55 c0          	lea    rdx,[rbp-0x40]
    5012:	48 83 c2 08          	add    rdx,0x8
    5016:	48 89 c6             	mov    rsi,rax
    5019:	48 89 d7             	mov    rdi,rdx
    501c:	e8 ff d7 ff ff       	call   2820 <strcpy@plt>
    5021:	0f b6 45 a4          	movzx  eax,BYTE PTR [rbp-0x5c]
    5025:	88 45 c0             	mov    BYTE PTR [rbp-0x40],al
    5028:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    502b:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    502e:	48 8d 55 c0          	lea    rdx,[rbp-0x40]
    5032:	48 8d 45 b8          	lea    rax,[rbp-0x48]
    5036:	48 89 d1             	mov    rcx,rdx
    5039:	48 8d 15 35 00 00 00 	lea    rdx,[rip+0x35]        # 5075 <verify_ip_addr>
    5040:	be 00 00 00 00       	mov    esi,0x0
    5045:	48 89 c7             	mov    rdi,rax
    5048:	e8 f3 d5 ff ff       	call   2640 <pthread_create@plt>
    504d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5051:	be 00 00 00 00       	mov    esi,0x0
    5056:	48 89 c7             	mov    rdi,rax
    5059:	e8 72 d4 ff ff       	call   24d0 <pthread_join@plt>
    505e:	90                   	nop
    505f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5063:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    506a:	00 00 
    506c:	74 05                	je     5073 <add_ip_addr_or_inc_counter+0xea>
    506e:	e8 6d d7 ff ff       	call   27e0 <__stack_chk_fail@plt>
    5073:	c9                   	leave  
    5074:	c3                   	ret    

0000000000005075 <verify_ip_addr>:
    5075:	f3 0f 1e fa          	endbr64 
    5079:	55                   	push   rbp
    507a:	48 89 e5             	mov    rbp,rsp
    507d:	48 83 ec 30          	sub    rsp,0x30
    5081:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    5085:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    5089:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    508d:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
    5094:	e9 c9 00 00 00       	jmp    5162 <verify_ip_addr+0xed>
    5099:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    509c:	48 63 d0             	movsxd rdx,eax
    509f:	48 89 d0             	mov    rax,rdx
    50a2:	48 c1 e0 02          	shl    rax,0x2
    50a6:	48 01 d0             	add    rax,rdx
    50a9:	48 c1 e0 03          	shl    rax,0x3
    50ad:	48 01 d0             	add    rax,rdx
    50b0:	48 c1 e0 04          	shl    rax,0x4
    50b4:	48 8d 15 65 e4 0e 00 	lea    rdx,[rip+0xee465]        # f3520 <watchlist>
    50bb:	48 01 d0             	add    rax,rdx
    50be:	48 8d 50 08          	lea    rdx,[rax+0x8]
    50c2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    50c6:	48 83 c0 08          	add    rax,0x8
    50ca:	48 89 d6             	mov    rsi,rdx
    50cd:	48 89 c7             	mov    rdi,rax
    50d0:	e8 1b d7 ff ff       	call   27f0 <strcmp@plt>
    50d5:	85 c0                	test   eax,eax
    50d7:	0f 85 81 00 00 00    	jne    515e <verify_ip_addr+0xe9>
    50dd:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    50e0:	48 63 d0             	movsxd rdx,eax
    50e3:	48 89 d0             	mov    rax,rdx
    50e6:	48 c1 e0 02          	shl    rax,0x2
    50ea:	48 01 d0             	add    rax,rdx
    50ed:	48 c1 e0 03          	shl    rax,0x3
    50f1:	48 01 d0             	add    rax,rdx
    50f4:	48 c1 e0 04          	shl    rax,0x4
    50f8:	48 89 c2             	mov    rdx,rax
    50fb:	48 8d 05 76 e6 0e 00 	lea    rax,[rip+0xee676]        # f3778 <watchlist+0x258>
    5102:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    5105:	8d 48 01             	lea    ecx,[rax+0x1]
    5108:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    510b:	48 63 d0             	movsxd rdx,eax
    510e:	48 89 d0             	mov    rax,rdx
    5111:	48 c1 e0 02          	shl    rax,0x2
    5115:	48 01 d0             	add    rax,rdx
    5118:	48 c1 e0 03          	shl    rax,0x3
    511c:	48 01 d0             	add    rax,rdx
    511f:	48 c1 e0 04          	shl    rax,0x4
    5123:	48 89 c2             	mov    rdx,rax
    5126:	48 8d 05 4b e6 0e 00 	lea    rax,[rip+0xee64b]        # f3778 <watchlist+0x258>
    512d:	89 0c 02             	mov    DWORD PTR [rdx+rax*1],ecx
    5130:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    5133:	48 63 d0             	movsxd rdx,eax
    5136:	48 89 d0             	mov    rax,rdx
    5139:	48 c1 e0 02          	shl    rax,0x2
    513d:	48 01 d0             	add    rax,rdx
    5140:	48 c1 e0 03          	shl    rax,0x3
    5144:	48 01 d0             	add    rax,rdx
    5147:	48 c1 e0 04          	shl    rax,0x4
    514b:	48 8d 15 ce e3 0e 00 	lea    rdx,[rip+0xee3ce]        # f3520 <watchlist>
    5152:	48 01 d0             	add    rax,rdx
    5155:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    5159:	e9 f5 00 00 00       	jmp    5253 <verify_ip_addr+0x1de>
    515e:	83 45 e4 01          	add    DWORD PTR [rbp-0x1c],0x1
    5162:	8b 05 b0 be 00 00    	mov    eax,DWORD PTR [rip+0xbeb0]        # 11018 <watchlist_num>
    5168:	39 45 e4             	cmp    DWORD PTR [rbp-0x1c],eax
    516b:	0f 8e 28 ff ff ff    	jle    5099 <verify_ip_addr+0x24>
    5171:	bf 90 02 00 00       	mov    edi,0x290
    5176:	e8 45 d4 ff ff       	call   25c0 <malloc@plt>
    517b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    517f:	8b 05 93 be 00 00    	mov    eax,DWORD PTR [rip+0xbe93]        # 11018 <watchlist_num>
    5185:	83 c0 01             	add    eax,0x1
    5188:	89 05 8a be 00 00    	mov    DWORD PTR [rip+0xbe8a],eax        # 11018 <watchlist_num>
    518e:	8b 05 84 be 00 00    	mov    eax,DWORD PTR [rip+0xbe84]        # 11018 <watchlist_num>
    5194:	48 63 d0             	movsxd rdx,eax
    5197:	48 89 d0             	mov    rax,rdx
    519a:	48 c1 e0 02          	shl    rax,0x2
    519e:	48 01 d0             	add    rax,rdx
    51a1:	48 c1 e0 03          	shl    rax,0x3
    51a5:	48 01 d0             	add    rax,rdx
    51a8:	48 c1 e0 04          	shl    rax,0x4
    51ac:	48 89 c1             	mov    rcx,rax
    51af:	48 8d 05 6a e3 0e 00 	lea    rax,[rip+0xee36a]        # f3520 <watchlist>
    51b6:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    51ba:	48 01 c8             	add    rax,rcx
    51bd:	48 89 d6             	mov    rsi,rdx
    51c0:	ba 52 00 00 00       	mov    edx,0x52
    51c5:	48 89 c7             	mov    rdi,rax
    51c8:	48 89 d1             	mov    rcx,rdx
    51cb:	f3 48 a5             	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
    51ce:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    51d2:	48 83 c0 08          	add    rax,0x8
    51d6:	ba 0f 00 00 00       	mov    edx,0xf
    51db:	be 00 00 00 00       	mov    esi,0x0
    51e0:	48 89 c7             	mov    rdi,rax
    51e3:	e8 08 d3 ff ff       	call   24f0 <memset@plt>
    51e8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    51ec:	48 8d 48 08          	lea    rcx,[rax+0x8]
    51f0:	8b 05 22 be 00 00    	mov    eax,DWORD PTR [rip+0xbe22]        # 11018 <watchlist_num>
    51f6:	48 63 d0             	movsxd rdx,eax
    51f9:	48 89 d0             	mov    rax,rdx
    51fc:	48 c1 e0 02          	shl    rax,0x2
    5200:	48 01 d0             	add    rax,rdx
    5203:	48 c1 e0 03          	shl    rax,0x3
    5207:	48 01 d0             	add    rax,rdx
    520a:	48 c1 e0 04          	shl    rax,0x4
    520e:	48 8d 15 0b e3 0e 00 	lea    rdx,[rip+0xee30b]        # f3520 <watchlist>
    5215:	48 01 d0             	add    rax,rdx
    5218:	48 83 c0 08          	add    rax,0x8
    521c:	48 89 ce             	mov    rsi,rcx
    521f:	48 89 c7             	mov    rdi,rax
    5222:	e8 f9 d5 ff ff       	call   2820 <strcpy@plt>
    5227:	8b 05 eb bd 00 00    	mov    eax,DWORD PTR [rip+0xbdeb]        # 11018 <watchlist_num>
    522d:	48 63 d0             	movsxd rdx,eax
    5230:	48 89 d0             	mov    rax,rdx
    5233:	48 c1 e0 02          	shl    rax,0x2
    5237:	48 01 d0             	add    rax,rdx
    523a:	48 c1 e0 03          	shl    rax,0x3
    523e:	48 01 d0             	add    rax,rdx
    5241:	48 c1 e0 04          	shl    rax,0x4
    5245:	48 8d 15 d4 e2 0e 00 	lea    rdx,[rip+0xee2d4]        # f3520 <watchlist>
    524c:	48 01 d0             	add    rax,rdx
    524f:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    5253:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5257:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    525a:	84 c0                	test   al,al
    525c:	74 36                	je     5294 <verify_ip_addr+0x21f>
    525e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5262:	8b 80 80 02 00 00    	mov    eax,DWORD PTR [rax+0x280]
    5268:	8d 50 01             	lea    edx,[rax+0x1]
    526b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    526f:	89 90 80 02 00 00    	mov    DWORD PTR [rax+0x280],edx
    5275:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5279:	8b 90 88 02 00 00    	mov    edx,DWORD PTR [rax+0x288]
    527f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5283:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    5286:	01 c2                	add    edx,eax
    5288:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    528c:	89 90 88 02 00 00    	mov    DWORD PTR [rax+0x288],edx
    5292:	eb 34                	jmp    52c8 <verify_ip_addr+0x253>
    5294:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5298:	8b 80 7c 02 00 00    	mov    eax,DWORD PTR [rax+0x27c]
    529e:	8d 50 01             	lea    edx,[rax+0x1]
    52a1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52a5:	89 90 7c 02 00 00    	mov    DWORD PTR [rax+0x27c],edx
    52ab:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52af:	8b 90 84 02 00 00    	mov    edx,DWORD PTR [rax+0x284]
    52b5:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    52b9:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    52bc:	01 c2                	add    edx,eax
    52be:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52c2:	89 90 84 02 00 00    	mov    DWORD PTR [rax+0x284],edx
    52c8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52cc:	8b 90 8c 02 00 00    	mov    edx,DWORD PTR [rax+0x28c]
    52d2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    52d6:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    52d9:	01 c2                	add    edx,eax
    52db:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52df:	89 90 8c 02 00 00    	mov    DWORD PTR [rax+0x28c],edx
    52e5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52e9:	8b 80 7c 02 00 00    	mov    eax,DWORD PTR [rax+0x27c]
    52ef:	8d 14 00             	lea    edx,[rax+rax*1]
    52f2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52f6:	89 90 58 02 00 00    	mov    DWORD PTR [rax+0x258],edx
    52fc:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5300:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    5303:	83 f8 5e             	cmp    eax,0x5e
    5306:	0f 84 9b 00 00 00    	je     53a7 <verify_ip_addr+0x332>
    530c:	83 f8 5e             	cmp    eax,0x5e
    530f:	0f 8f cf 00 00 00    	jg     53e4 <verify_ip_addr+0x36f>
    5315:	83 f8 5c             	cmp    eax,0x5c
    5318:	74 0a                	je     5324 <verify_ip_addr+0x2af>
    531a:	83 f8 5d             	cmp    eax,0x5d
    531d:	74 48                	je     5367 <verify_ip_addr+0x2f2>
    531f:	e9 c0 00 00 00       	jmp    53e4 <verify_ip_addr+0x36f>
    5324:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5328:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    532b:	84 c0                	test   al,al
    532d:	74 1c                	je     534b <verify_ip_addr+0x2d6>
    532f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5333:	8b 80 5c 02 00 00    	mov    eax,DWORD PTR [rax+0x25c]
    5339:	8d 50 01             	lea    edx,[rax+0x1]
    533c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5340:	89 90 5c 02 00 00    	mov    DWORD PTR [rax+0x25c],edx
    5346:	e9 d5 00 00 00       	jmp    5420 <verify_ip_addr+0x3ab>
    534b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    534f:	8b 80 68 02 00 00    	mov    eax,DWORD PTR [rax+0x268]
    5355:	8d 50 01             	lea    edx,[rax+0x1]
    5358:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    535c:	89 90 68 02 00 00    	mov    DWORD PTR [rax+0x268],edx
    5362:	e9 b9 00 00 00       	jmp    5420 <verify_ip_addr+0x3ab>
    5367:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    536b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    536e:	84 c0                	test   al,al
    5370:	74 1c                	je     538e <verify_ip_addr+0x319>
    5372:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5376:	8b 80 60 02 00 00    	mov    eax,DWORD PTR [rax+0x260]
    537c:	8d 50 01             	lea    edx,[rax+0x1]
    537f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5383:	89 90 60 02 00 00    	mov    DWORD PTR [rax+0x260],edx
    5389:	e9 92 00 00 00       	jmp    5420 <verify_ip_addr+0x3ab>
    538e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5392:	8b 80 6c 02 00 00    	mov    eax,DWORD PTR [rax+0x26c]
    5398:	8d 50 01             	lea    edx,[rax+0x1]
    539b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    539f:	89 90 6c 02 00 00    	mov    DWORD PTR [rax+0x26c],edx
    53a5:	eb 79                	jmp    5420 <verify_ip_addr+0x3ab>
    53a7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    53ab:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    53ae:	84 c0                	test   al,al
    53b0:	74 19                	je     53cb <verify_ip_addr+0x356>
    53b2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53b6:	8b 80 64 02 00 00    	mov    eax,DWORD PTR [rax+0x264]
    53bc:	8d 50 01             	lea    edx,[rax+0x1]
    53bf:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53c3:	89 90 64 02 00 00    	mov    DWORD PTR [rax+0x264],edx
    53c9:	eb 55                	jmp    5420 <verify_ip_addr+0x3ab>
    53cb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53cf:	8b 80 70 02 00 00    	mov    eax,DWORD PTR [rax+0x270]
    53d5:	8d 50 01             	lea    edx,[rax+0x1]
    53d8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53dc:	89 90 70 02 00 00    	mov    DWORD PTR [rax+0x270],edx
    53e2:	eb 3c                	jmp    5420 <verify_ip_addr+0x3ab>
    53e4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    53e8:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    53eb:	84 c0                	test   al,al
    53ed:	74 19                	je     5408 <verify_ip_addr+0x393>
    53ef:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53f3:	8b 80 74 02 00 00    	mov    eax,DWORD PTR [rax+0x274]
    53f9:	8d 50 01             	lea    edx,[rax+0x1]
    53fc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5400:	89 90 74 02 00 00    	mov    DWORD PTR [rax+0x274],edx
    5406:	eb 17                	jmp    541f <verify_ip_addr+0x3aa>
    5408:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    540c:	8b 80 78 02 00 00    	mov    eax,DWORD PTR [rax+0x278]
    5412:	8d 50 01             	lea    edx,[rax+0x1]
    5415:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5419:	89 90 78 02 00 00    	mov    DWORD PTR [rax+0x278],edx
    541f:	90                   	nop
    5420:	b8 01 00 00 00       	mov    eax,0x1
    5425:	c9                   	leave  
    5426:	c3                   	ret    

0000000000005427 <ascii_hexdump>:
    5427:	f3 0f 1e fa          	endbr64 
    542b:	55                   	push   rbp
    542c:	48 89 e5             	mov    rbp,rsp
    542f:	48 83 ec 20          	sub    rsp,0x20
    5433:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    5437:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    543a:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    5441:	eb 52                	jmp    5495 <ascii_hexdump+0x6e>
    5443:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5446:	48 63 d0             	movsxd rdx,eax
    5449:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    544d:	48 01 d0             	add    rax,rdx
    5450:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5453:	3c 20                	cmp    al,0x20
    5455:	76 30                	jbe    5487 <ascii_hexdump+0x60>
    5457:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    545a:	48 63 d0             	movsxd rdx,eax
    545d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5461:	48 01 d0             	add    rax,rdx
    5464:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5467:	3c 7e                	cmp    al,0x7e
    5469:	77 1c                	ja     5487 <ascii_hexdump+0x60>
    546b:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    546e:	48 63 d0             	movsxd rdx,eax
    5471:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5475:	48 01 d0             	add    rax,rdx
    5478:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    547b:	0f b6 c0             	movzx  eax,al
    547e:	89 c7                	mov    edi,eax
    5480:	e8 eb d0 ff ff       	call   2570 <putchar@plt>
    5485:	eb 0a                	jmp    5491 <ascii_hexdump+0x6a>
    5487:	bf 2e 00 00 00       	mov    edi,0x2e
    548c:	e8 df d0 ff ff       	call   2570 <putchar@plt>
    5491:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    5495:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5498:	3b 45 e4             	cmp    eax,DWORD PTR [rbp-0x1c]
    549b:	7c a6                	jl     5443 <ascii_hexdump+0x1c>
    549d:	bf 0a 00 00 00       	mov    edi,0xa
    54a2:	e8 c9 d0 ff ff       	call   2570 <putchar@plt>
    54a7:	90                   	nop
    54a8:	c9                   	leave  
    54a9:	c3                   	ret    

00000000000054aa <stdout_alert>:
    54aa:	f3 0f 1e fa          	endbr64 
    54ae:	55                   	push   rbp
    54af:	48 89 e5             	mov    rbp,rsp
    54b2:	53                   	push   rbx
    54b3:	48 81 ec c8 01 00 00 	sub    rsp,0x1c8
    54ba:	48 89 bd 48 fe ff ff 	mov    QWORD PTR [rbp-0x1b8],rdi
    54c1:	48 89 b5 40 fe ff ff 	mov    QWORD PTR [rbp-0x1c0],rsi
    54c8:	89 95 3c fe ff ff    	mov    DWORD PTR [rbp-0x1c4],edx
    54ce:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    54d5:	00 00 
    54d7:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    54db:	31 c0                	xor    eax,eax
    54dd:	bf 00 00 00 00       	mov    edi,0x0
    54e2:	e8 49 d4 ff ff       	call   2930 <time@plt>
    54e7:	48 89 85 50 fe ff ff 	mov    QWORD PTR [rbp-0x1b0],rax
    54ee:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
    54f5:	48 89 c7             	mov    rdi,rax
    54f8:	e8 f3 d3 ff ff       	call   28f0 <localtime@plt>
    54fd:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    5500:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    5504:	48 89 8d 60 fe ff ff 	mov    QWORD PTR [rbp-0x1a0],rcx
    550b:	48 89 9d 68 fe ff ff 	mov    QWORD PTR [rbp-0x198],rbx
    5512:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    5516:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    551a:	48 89 8d 70 fe ff ff 	mov    QWORD PTR [rbp-0x190],rcx
    5521:	48 89 9d 78 fe ff ff 	mov    QWORD PTR [rbp-0x188],rbx
    5528:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    552c:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    5530:	48 89 8d 80 fe ff ff 	mov    QWORD PTR [rbp-0x180],rcx
    5537:	48 89 9d 88 fe ff ff 	mov    QWORD PTR [rbp-0x178],rbx
    553e:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    5542:	48 89 85 90 fe ff ff 	mov    QWORD PTR [rbp-0x170],rax
    5549:	8b bd 60 fe ff ff    	mov    edi,DWORD PTR [rbp-0x1a0]
    554f:	8b b5 64 fe ff ff    	mov    esi,DWORD PTR [rbp-0x19c]
    5555:	44 8b 8d 68 fe ff ff 	mov    r9d,DWORD PTR [rbp-0x198]
    555c:	44 8b 85 6c fe ff ff 	mov    r8d,DWORD PTR [rbp-0x194]
    5563:	8b 85 70 fe ff ff    	mov    eax,DWORD PTR [rbp-0x190]
    5569:	8d 48 01             	lea    ecx,[rax+0x1]
    556c:	8b 85 74 fe ff ff    	mov    eax,DWORD PTR [rbp-0x18c]
    5572:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    5578:	48 8d 85 a0 fe ff ff 	lea    rax,[rbp-0x160]
    557f:	57                   	push   rdi
    5580:	56                   	push   rsi
    5581:	48 8d 35 3e 75 00 00 	lea    rsi,[rip+0x753e]        # cac6 <_IO_stdin_used+0xac6>
    5588:	48 89 c7             	mov    rdi,rax
    558b:	b8 00 00 00 00       	mov    eax,0x0
    5590:	e8 1b d1 ff ff       	call   26b0 <sprintf@plt>
    5595:	48 83 c4 10          	add    rsp,0x10
    5599:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    55a0:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    55a3:	3d 80 00 00 00       	cmp    eax,0x80
    55a8:	75 4e                	jne    55f8 <stdout_alert+0x14e>
    55aa:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    55b1:	48 8b 78 10          	mov    rdi,QWORD PTR [rax+0x10]
    55b5:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    55bc:	48 8b 70 08          	mov    rsi,QWORD PTR [rax+0x8]
    55c0:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
    55c7:	48 8d 88 50 01 00 00 	lea    rcx,[rax+0x150]
    55ce:	48 8d 95 a0 fe ff ff 	lea    rdx,[rbp-0x160]
    55d5:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    55dc:	49 89 f9             	mov    r9,rdi
    55df:	49 89 f0             	mov    r8,rsi
    55e2:	48 8d 35 f9 74 00 00 	lea    rsi,[rip+0x74f9]        # cae2 <_IO_stdin_used+0xae2>
    55e9:	48 89 c7             	mov    rdi,rax
    55ec:	b8 00 00 00 00       	mov    eax,0x0
    55f1:	e8 ba d0 ff ff       	call   26b0 <sprintf@plt>
    55f6:	eb 61                	jmp    5659 <stdout_alert+0x1af>
    55f8:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    55ff:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    5602:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    5609:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    560d:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    5614:	44 8b 48 24          	mov    r9d,DWORD PTR [rax+0x24]
    5618:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    561f:	4c 8b 40 08          	mov    r8,QWORD PTR [rax+0x8]
    5623:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
    562a:	48 8d 88 50 01 00 00 	lea    rcx,[rax+0x150]
    5631:	48 8d 95 a0 fe ff ff 	lea    rdx,[rbp-0x160]
    5638:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    563f:	57                   	push   rdi
    5640:	56                   	push   rsi
    5641:	48 8d 35 aa 74 00 00 	lea    rsi,[rip+0x74aa]        # caf2 <_IO_stdin_used+0xaf2>
    5648:	48 89 c7             	mov    rdi,rax
    564b:	b8 00 00 00 00       	mov    eax,0x0
    5650:	e8 5b d0 ff ff       	call   26b0 <sprintf@plt>
    5655:	48 83 c4 10          	add    rsp,0x10
    5659:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    5660:	48 89 c6             	mov    rsi,rax
    5663:	48 8d 3d 9e 74 00 00 	lea    rdi,[rip+0x749e]        # cb08 <_IO_stdin_used+0xb08>
    566a:	b8 00 00 00 00       	mov    eax,0x0
    566f:	e8 6c ce ff ff       	call   24e0 <printf@plt>
    5674:	48 8b 05 b5 b9 00 00 	mov    rax,QWORD PTR [rip+0xb9b5]        # 11030 <def_log_file>
    567b:	48 8d 35 89 74 00 00 	lea    rsi,[rip+0x7489]        # cb0b <_IO_stdin_used+0xb0b>
    5682:	48 89 c7             	mov    rdi,rax
    5685:	e8 46 cf ff ff       	call   25d0 <fopen@plt>
    568a:	48 89 85 58 fe ff ff 	mov    QWORD PTR [rbp-0x1a8],rax
    5691:	48 8b 95 58 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1a8]
    5698:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    569f:	48 89 d6             	mov    rsi,rdx
    56a2:	48 89 c7             	mov    rdi,rax
    56a5:	e8 86 d0 ff ff       	call   2730 <fputs@plt>
    56aa:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    56b1:	48 89 c7             	mov    rdi,rax
    56b4:	e8 a7 d1 ff ff       	call   2860 <fclose@plt>
    56b9:	90                   	nop
    56ba:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    56be:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    56c5:	00 00 
    56c7:	74 05                	je     56ce <stdout_alert+0x224>
    56c9:	e8 12 d1 ff ff       	call   27e0 <__stack_chk_fail@plt>
    56ce:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    56d2:	c9                   	leave  
    56d3:	c3                   	ret    

00000000000056d4 <str_match_parser>:
    56d4:	f3 0f 1e fa          	endbr64 
    56d8:	55                   	push   rbp
    56d9:	48 89 e5             	mov    rbp,rsp
    56dc:	53                   	push   rbx
    56dd:	48 83 ec 48          	sub    rsp,0x48
    56e1:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    56e5:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
    56e9:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    56f0:	00 00 
    56f2:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    56f6:	31 c0                	xor    eax,eax
    56f8:	48 89 e0             	mov    rax,rsp
    56fb:	48 89 c3             	mov    rbx,rax
    56fe:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5702:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5705:	85 c0                	test   eax,eax
    5707:	75 0a                	jne    5713 <str_match_parser+0x3f>
    5709:	b8 00 00 00 00       	mov    eax,0x0
    570e:	e9 e1 01 00 00       	jmp    58f4 <str_match_parser+0x220>
    5713:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5717:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    571a:	83 c0 01             	add    eax,0x1
    571d:	01 c0                	add    eax,eax
    571f:	48 98                	cdqe   
    5721:	48 83 e8 01          	sub    rax,0x1
    5725:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    5729:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    572d:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5730:	83 c0 01             	add    eax,0x1
    5733:	01 c0                	add    eax,eax
    5735:	48 98                	cdqe   
    5737:	49 89 c2             	mov    r10,rax
    573a:	41 bb 00 00 00 00    	mov    r11d,0x0
    5740:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5744:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5747:	83 c0 01             	add    eax,0x1
    574a:	01 c0                	add    eax,eax
    574c:	48 98                	cdqe   
    574e:	49 89 c0             	mov    r8,rax
    5751:	41 b9 00 00 00 00    	mov    r9d,0x0
    5757:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    575b:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    575e:	83 c0 01             	add    eax,0x1
    5761:	01 c0                	add    eax,eax
    5763:	48 98                	cdqe   
    5765:	ba 10 00 00 00       	mov    edx,0x10
    576a:	48 83 ea 01          	sub    rdx,0x1
    576e:	48 01 d0             	add    rax,rdx
    5771:	be 10 00 00 00       	mov    esi,0x10
    5776:	ba 00 00 00 00       	mov    edx,0x0
    577b:	48 f7 f6             	div    rsi
    577e:	48 6b c0 10          	imul   rax,rax,0x10
    5782:	48 89 c1             	mov    rcx,rax
    5785:	48 81 e1 00 f0 ff ff 	and    rcx,0xfffffffffffff000
    578c:	48 89 e2             	mov    rdx,rsp
    578f:	48 29 ca             	sub    rdx,rcx
    5792:	48 39 d4             	cmp    rsp,rdx
    5795:	74 12                	je     57a9 <str_match_parser+0xd5>
    5797:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    579e:	48 83 8c 24 f8 0f 00 	or     QWORD PTR [rsp+0xff8],0x0
    57a5:	00 00 
    57a7:	eb e9                	jmp    5792 <str_match_parser+0xbe>
    57a9:	48 89 c2             	mov    rdx,rax
    57ac:	81 e2 ff 0f 00 00    	and    edx,0xfff
    57b2:	48 29 d4             	sub    rsp,rdx
    57b5:	48 89 c2             	mov    rdx,rax
    57b8:	81 e2 ff 0f 00 00    	and    edx,0xfff
    57be:	48 85 d2             	test   rdx,rdx
    57c1:	74 10                	je     57d3 <str_match_parser+0xff>
    57c3:	25 ff 0f 00 00       	and    eax,0xfff
    57c8:	48 83 e8 08          	sub    rax,0x8
    57cc:	48 01 e0             	add    rax,rsp
    57cf:	48 83 08 00          	or     QWORD PTR [rax],0x0
    57d3:	48 89 e0             	mov    rax,rsp
    57d6:	48 83 c0 00          	add    rax,0x0
    57da:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    57de:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    57e2:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    57e5:	83 c0 01             	add    eax,0x1
    57e8:	01 c0                	add    eax,eax
    57ea:	48 63 d0             	movsxd rdx,eax
    57ed:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    57f1:	be 00 00 00 00       	mov    esi,0x0
    57f6:	48 89 c7             	mov    rdi,rax
    57f9:	e8 f2 cc ff ff       	call   24f0 <memset@plt>
    57fe:	c7 45 d4 00 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x0
    5805:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5809:	8b 80 4c 03 00 00    	mov    eax,DWORD PTR [rax+0x34c]
    580f:	85 c0                	test   eax,eax
    5811:	74 5f                	je     5872 <str_match_parser+0x19e>
    5813:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5817:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    581a:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
    581d:	eb 42                	jmp    5861 <str_match_parser+0x18d>
    581f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5823:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    5826:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
    5829:	48 98                	cdqe   
    582b:	48 01 d0             	add    rax,rdx
    582e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5831:	0f b6 d0             	movzx  edx,al
    5834:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    5837:	8d 48 01             	lea    ecx,[rax+0x1]
    583a:	89 4d d4             	mov    DWORD PTR [rbp-0x2c],ecx
    583d:	01 c0                	add    eax,eax
    583f:	48 63 c8             	movsxd rcx,eax
    5842:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    5846:	48 01 c8             	add    rax,rcx
    5849:	48 8d 35 bd 72 00 00 	lea    rsi,[rip+0x72bd]        # cb0d <_IO_stdin_used+0xb0d>
    5850:	48 89 c7             	mov    rdi,rax
    5853:	b8 00 00 00 00       	mov    eax,0x0
    5858:	e8 53 ce ff ff       	call   26b0 <sprintf@plt>
    585d:	83 45 d0 01          	add    DWORD PTR [rbp-0x30],0x1
    5861:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5865:	8b 80 4c 03 00 00    	mov    eax,DWORD PTR [rax+0x34c]
    586b:	39 45 d0             	cmp    DWORD PTR [rbp-0x30],eax
    586e:	7c af                	jl     581f <str_match_parser+0x14b>
    5870:	eb 5a                	jmp    58cc <str_match_parser+0x1f8>
    5872:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5876:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    5879:	89 45 cc             	mov    DWORD PTR [rbp-0x34],eax
    587c:	eb 42                	jmp    58c0 <str_match_parser+0x1ec>
    587e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5882:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    5885:	8b 45 cc             	mov    eax,DWORD PTR [rbp-0x34]
    5888:	48 98                	cdqe   
    588a:	48 01 d0             	add    rax,rdx
    588d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5890:	0f b6 d0             	movzx  edx,al
    5893:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    5896:	8d 48 01             	lea    ecx,[rax+0x1]
    5899:	89 4d d4             	mov    DWORD PTR [rbp-0x2c],ecx
    589c:	01 c0                	add    eax,eax
    589e:	48 63 c8             	movsxd rcx,eax
    58a1:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    58a5:	48 01 c8             	add    rax,rcx
    58a8:	48 8d 35 5e 72 00 00 	lea    rsi,[rip+0x725e]        # cb0d <_IO_stdin_used+0xb0d>
    58af:	48 89 c7             	mov    rdi,rax
    58b2:	b8 00 00 00 00       	mov    eax,0x0
    58b7:	e8 f4 cd ff ff       	call   26b0 <sprintf@plt>
    58bc:	83 45 cc 01          	add    DWORD PTR [rbp-0x34],0x1
    58c0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    58c4:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    58c7:	39 45 cc             	cmp    DWORD PTR [rbp-0x34],eax
    58ca:	7c b2                	jl     587e <str_match_parser+0x1aa>
    58cc:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    58d0:	48 8d 50 40          	lea    rdx,[rax+0x40]
    58d4:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    58d8:	48 89 d6             	mov    rsi,rdx
    58db:	48 89 c7             	mov    rdi,rax
    58de:	e8 2d ce ff ff       	call   2710 <strstr@plt>
    58e3:	48 85 c0             	test   rax,rax
    58e6:	74 07                	je     58ef <str_match_parser+0x21b>
    58e8:	b8 01 00 00 00       	mov    eax,0x1
    58ed:	eb 05                	jmp    58f4 <str_match_parser+0x220>
    58ef:	b8 00 00 00 00       	mov    eax,0x0
    58f4:	48 89 dc             	mov    rsp,rbx
    58f7:	48 8b 5d e8          	mov    rbx,QWORD PTR [rbp-0x18]
    58fb:	64 48 2b 1c 25 28 00 	sub    rbx,QWORD PTR fs:0x28
    5902:	00 00 
    5904:	74 05                	je     590b <str_match_parser+0x237>
    5906:	e8 d5 ce ff ff       	call   27e0 <__stack_chk_fail@plt>
    590b:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    590f:	c9                   	leave  
    5910:	c3                   	ret    

0000000000005911 <is_blocked_ipv4>:
    5911:	f3 0f 1e fa          	endbr64 
    5915:	55                   	push   rbp
    5916:	48 89 e5             	mov    rbp,rsp
    5919:	48 83 ec 20          	sub    rsp,0x20
    591d:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    5921:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    5928:	eb 3b                	jmp    5965 <is_blocked_ipv4+0x54>
    592a:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    592d:	48 63 d0             	movsxd rdx,eax
    5930:	48 89 d0             	mov    rax,rdx
    5933:	48 c1 e0 03          	shl    rax,0x3
    5937:	48 01 d0             	add    rax,rdx
    593a:	48 01 c0             	add    rax,rax
    593d:	48 8d 15 9c d9 0e 00 	lea    rdx,[rip+0xed99c]        # f32e0 <blocked_ipv4_addrs>
    5944:	48 01 c2             	add    rdx,rax
    5947:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    594b:	48 89 d6             	mov    rsi,rdx
    594e:	48 89 c7             	mov    rdi,rax
    5951:	e8 9a ce ff ff       	call   27f0 <strcmp@plt>
    5956:	85 c0                	test   eax,eax
    5958:	75 07                	jne    5961 <is_blocked_ipv4+0x50>
    595a:	b8 01 00 00 00       	mov    eax,0x1
    595f:	eb 14                	jmp    5975 <is_blocked_ipv4+0x64>
    5961:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    5965:	8b 05 a5 b6 00 00    	mov    eax,DWORD PTR [rip+0xb6a5]        # 11010 <blk_ipv4_len>
    596b:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    596e:	7e ba                	jle    592a <is_blocked_ipv4+0x19>
    5970:	b8 00 00 00 00       	mov    eax,0x0
    5975:	c9                   	leave  
    5976:	c3                   	ret    

0000000000005977 <none>:
    5977:	f3 0f 1e fa          	endbr64 
    597b:	55                   	push   rbp
    597c:	48 89 e5             	mov    rbp,rsp
    597f:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5983:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    5987:	b8 01 00 00 00       	mov    eax,0x1
    598c:	5d                   	pop    rbp
    598d:	c3                   	ret    

000000000000598e <pcre_match>:
    598e:	f3 0f 1e fa          	endbr64 
    5992:	55                   	push   rbp
    5993:	48 89 e5             	mov    rbp,rsp
    5996:	48 83 ec 10          	sub    rsp,0x10
    599a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    599e:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    59a2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    59a6:	48 8b 00             	mov    rax,QWORD PTR [rax]
    59a9:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    59ad:	48 8d ba d0 01 00 00 	lea    rdi,[rdx+0x1d0]
    59b4:	41 b8 00 00 00 00    	mov    r8d,0x0
    59ba:	b9 00 00 00 00       	mov    ecx,0x0
    59bf:	ba 00 00 00 00       	mov    edx,0x0
    59c4:	48 89 c6             	mov    rsi,rax
    59c7:	e8 14 cc ff ff       	call   25e0 <regexec@plt>
    59cc:	83 f8 01             	cmp    eax,0x1
    59cf:	75 07                	jne    59d8 <pcre_match+0x4a>
    59d1:	b8 00 00 00 00       	mov    eax,0x0
    59d6:	eb 05                	jmp    59dd <pcre_match+0x4f>
    59d8:	b8 01 00 00 00       	mov    eax,0x1
    59dd:	c9                   	leave  
    59de:	c3                   	ret    

00000000000059df <rule_library_parser>:
    59df:	f3 0f 1e fa          	endbr64 
    59e3:	55                   	push   rbp
    59e4:	48 89 e5             	mov    rbp,rsp
    59e7:	53                   	push   rbx
    59e8:	48 83 ec 48          	sub    rsp,0x48
    59ec:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    59f0:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    59f7:	00 00 
    59f9:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    59fd:	31 c0                	xor    eax,eax
    59ff:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5a03:	48 8d 35 0e 71 00 00 	lea    rsi,[rip+0x710e]        # cb18 <_IO_stdin_used+0xb18>
    5a0a:	48 89 c7             	mov    rdi,rax
    5a0d:	e8 be cb ff ff       	call   25d0 <fopen@plt>
    5a12:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    5a16:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    5a1b:	75 22                	jne    5a3f <rule_library_parser+0x60>
    5a1d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5a21:	48 89 c6             	mov    rsi,rax
    5a24:	48 8d 3d f5 70 00 00 	lea    rdi,[rip+0x70f5]        # cb20 <_IO_stdin_used+0xb20>
    5a2b:	b8 00 00 00 00       	mov    eax,0x0
    5a30:	e8 ab ca ff ff       	call   24e0 <printf@plt>
    5a35:	bf 01 00 00 00       	mov    edi,0x1
    5a3a:	e8 21 cb ff ff       	call   2560 <exit@plt>
    5a3f:	48 c7 45 c8 00 00 00 	mov    QWORD PTR [rbp-0x38],0x0
    5a46:	00 
    5a47:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    5a4e:	00 
    5a4f:	e9 70 05 00 00       	jmp    5fc4 <rule_library_parser+0x5e5>
    5a54:	48 8b 5d d0          	mov    rbx,QWORD PTR [rbp-0x30]
    5a58:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a5c:	48 8d 35 e3 70 00 00 	lea    rsi,[rip+0x70e3]        # cb46 <_IO_stdin_used+0xb46>
    5a63:	48 89 c7             	mov    rdi,rax
    5a66:	e8 25 ce ff ff       	call   2890 <strcspn@plt>
    5a6b:	48 01 d8             	add    rax,rbx
    5a6e:	c6 00 00             	mov    BYTE PTR [rax],0x0
    5a71:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a75:	48 89 c7             	mov    rdi,rax
    5a78:	e8 b9 05 00 00       	call   6036 <is_comment>
    5a7d:	84 c0                	test   al,al
    5a7f:	74 05                	je     5a86 <rule_library_parser+0xa7>
    5a81:	e9 3e 05 00 00       	jmp    5fc4 <rule_library_parser+0x5e5>
    5a86:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a8a:	ba 1a 00 00 00       	mov    edx,0x1a
    5a8f:	48 8d 35 b2 70 00 00 	lea    rsi,[rip+0x70b2]        # cb48 <_IO_stdin_used+0xb48>
    5a96:	48 89 c7             	mov    rdi,rax
    5a99:	e8 12 cb ff ff       	call   25b0 <strncmp@plt>
    5a9e:	85 c0                	test   eax,eax
    5aa0:	75 39                	jne    5adb <rule_library_parser+0xfc>
    5aa2:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5aa6:	48 83 c0 1a          	add    rax,0x1a
    5aaa:	48 8d 35 b2 70 00 00 	lea    rsi,[rip+0x70b2]        # cb63 <_IO_stdin_used+0xb63>
    5ab1:	48 89 c7             	mov    rdi,rax
    5ab4:	e8 37 cd ff ff       	call   27f0 <strcmp@plt>
    5ab9:	85 c0                	test   eax,eax
    5abb:	75 0f                	jne    5acc <rule_library_parser+0xed>
    5abd:	c7 05 bd b5 00 00 01 	mov    DWORD PTR [rip+0xb5bd],0x1        # 11084 <strict_icmp_timestamp_req>
    5ac4:	00 00 00 
    5ac7:	e9 e2 04 00 00       	jmp    5fae <rule_library_parser+0x5cf>
    5acc:	c7 05 ae b5 00 00 00 	mov    DWORD PTR [rip+0xb5ae],0x0        # 11084 <strict_icmp_timestamp_req>
    5ad3:	00 00 00 
    5ad6:	e9 d3 04 00 00       	jmp    5fae <rule_library_parser+0x5cf>
    5adb:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5adf:	ba 1d 00 00 00       	mov    edx,0x1d
    5ae4:	48 8d 35 7c 70 00 00 	lea    rsi,[rip+0x707c]        # cb67 <_IO_stdin_used+0xb67>
    5aeb:	48 89 c7             	mov    rdi,rax
    5aee:	e8 bd ca ff ff       	call   25b0 <strncmp@plt>
    5af3:	85 c0                	test   eax,eax
    5af5:	75 39                	jne    5b30 <rule_library_parser+0x151>
    5af7:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5afb:	48 83 c0 1d          	add    rax,0x1d
    5aff:	48 8d 35 5d 70 00 00 	lea    rsi,[rip+0x705d]        # cb63 <_IO_stdin_used+0xb63>
    5b06:	48 89 c7             	mov    rdi,rax
    5b09:	e8 e2 cc ff ff       	call   27f0 <strcmp@plt>
    5b0e:	85 c0                	test   eax,eax
    5b10:	75 0f                	jne    5b21 <rule_library_parser+0x142>
    5b12:	c7 05 6c b5 00 00 01 	mov    DWORD PTR [rip+0xb56c],0x1        # 11088 <strict_nmap_host_alive_check>
    5b19:	00 00 00 
    5b1c:	e9 8d 04 00 00       	jmp    5fae <rule_library_parser+0x5cf>
    5b21:	c7 05 5d b5 00 00 00 	mov    DWORD PTR [rip+0xb55d],0x0        # 11088 <strict_nmap_host_alive_check>
    5b28:	00 00 00 
    5b2b:	e9 7e 04 00 00       	jmp    5fae <rule_library_parser+0x5cf>
    5b30:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b34:	ba 17 00 00 00       	mov    edx,0x17
    5b39:	48 8d 35 45 70 00 00 	lea    rsi,[rip+0x7045]        # cb85 <_IO_stdin_used+0xb85>
    5b40:	48 89 c7             	mov    rdi,rax
    5b43:	e8 68 ca ff ff       	call   25b0 <strncmp@plt>
    5b48:	85 c0                	test   eax,eax
    5b4a:	75 43                	jne    5b8f <rule_library_parser+0x1b0>
    5b4c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b50:	48 89 c7             	mov    rdi,rax
    5b53:	e8 18 cb ff ff       	call   2670 <strlen@plt>
    5b58:	48 83 f8 17          	cmp    rax,0x17
    5b5c:	77 16                	ja     5b74 <rule_library_parser+0x195>
    5b5e:	48 8d 3d 38 70 00 00 	lea    rdi,[rip+0x7038]        # cb9d <_IO_stdin_used+0xb9d>
    5b65:	e8 d6 c9 ff ff       	call   2540 <puts@plt>
    5b6a:	bf 01 00 00 00       	mov    edi,0x1
    5b6f:	e8 ec c9 ff ff       	call   2560 <exit@plt>
    5b74:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b78:	48 83 c0 17          	add    rax,0x17
    5b7c:	48 89 c7             	mov    rdi,rax
    5b7f:	e8 dc cb ff ff       	call   2760 <atoi@plt>
    5b84:	89 05 d6 43 10 00    	mov    DWORD PTR [rip+0x1043d6],eax        # 109f60 <clean_delay_pkts>
    5b8a:	e9 1f 04 00 00       	jmp    5fae <rule_library_parser+0x5cf>
    5b8f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b93:	ba 18 00 00 00       	mov    edx,0x18
    5b98:	48 8d 35 18 70 00 00 	lea    rsi,[rip+0x7018]        # cbb7 <_IO_stdin_used+0xbb7>
    5b9f:	48 89 c7             	mov    rdi,rax
    5ba2:	e8 09 ca ff ff       	call   25b0 <strncmp@plt>
    5ba7:	85 c0                	test   eax,eax
    5ba9:	75 46                	jne    5bf1 <rule_library_parser+0x212>
    5bab:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5baf:	48 89 c7             	mov    rdi,rax
    5bb2:	e8 b9 ca ff ff       	call   2670 <strlen@plt>
    5bb7:	48 83 f8 18          	cmp    rax,0x18
    5bbb:	75 16                	jne    5bd3 <rule_library_parser+0x1f4>
    5bbd:	48 8d 3d d9 6f 00 00 	lea    rdi,[rip+0x6fd9]        # cb9d <_IO_stdin_used+0xb9d>
    5bc4:	e8 77 c9 ff ff       	call   2540 <puts@plt>
    5bc9:	bf 01 00 00 00       	mov    edi,0x1
    5bce:	e8 8d c9 ff ff       	call   2560 <exit@plt>
    5bd3:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5bd7:	48 83 c0 18          	add    rax,0x18
    5bdb:	48 89 c7             	mov    rdi,rax
    5bde:	e8 7d cb ff ff       	call   2760 <atoi@plt>
    5be3:	48 98                	cdqe   
    5be5:	48 89 05 cc b6 00 00 	mov    QWORD PTR [rip+0xb6cc],rax        # 112b8 <clean_delay>
    5bec:	e9 bd 03 00 00       	jmp    5fae <rule_library_parser+0x5cf>
    5bf1:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5bf5:	ba 0b 00 00 00       	mov    edx,0xb
    5bfa:	48 8d 35 cf 6f 00 00 	lea    rsi,[rip+0x6fcf]        # cbd0 <_IO_stdin_used+0xbd0>
    5c01:	48 89 c7             	mov    rdi,rax
    5c04:	e8 a7 c9 ff ff       	call   25b0 <strncmp@plt>
    5c09:	85 c0                	test   eax,eax
    5c0b:	75 33                	jne    5c40 <rule_library_parser+0x261>
    5c0d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c11:	48 83 c0 0b          	add    rax,0xb
    5c15:	48 8d 35 47 6f 00 00 	lea    rsi,[rip+0x6f47]        # cb63 <_IO_stdin_used+0xb63>
    5c1c:	48 89 c7             	mov    rdi,rax
    5c1f:	e8 cc cb ff ff       	call   27f0 <strcmp@plt>
    5c24:	85 c0                	test   eax,eax
    5c26:	75 0c                	jne    5c34 <rule_library_parser+0x255>
    5c28:	c6 05 f2 42 10 00 01 	mov    BYTE PTR [rip+0x1042f2],0x1        # 109f21 <use_sqlite>
    5c2f:	e9 7a 03 00 00       	jmp    5fae <rule_library_parser+0x5cf>
    5c34:	c6 05 e6 42 10 00 00 	mov    BYTE PTR [rip+0x1042e6],0x0        # 109f21 <use_sqlite>
    5c3b:	e9 6e 03 00 00       	jmp    5fae <rule_library_parser+0x5cf>
    5c40:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c44:	ba 15 00 00 00       	mov    edx,0x15
    5c49:	48 8d 35 8c 6f 00 00 	lea    rsi,[rip+0x6f8c]        # cbdc <_IO_stdin_used+0xbdc>
    5c50:	48 89 c7             	mov    rdi,rax
    5c53:	e8 58 c9 ff ff       	call   25b0 <strncmp@plt>
    5c58:	85 c0                	test   eax,eax
    5c5a:	75 34                	jne    5c90 <rule_library_parser+0x2b1>
    5c5c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c60:	48 83 c0 15          	add    rax,0x15
    5c64:	48 89 c6             	mov    rsi,rax
    5c67:	48 8d 3d d2 42 10 00 	lea    rdi,[rip+0x1042d2]        # 109f40 <sqlite_db_path>
    5c6e:	e8 ad cb ff ff       	call   2820 <strcpy@plt>
    5c73:	48 8d 35 c6 42 10 00 	lea    rsi,[rip+0x1042c6]        # 109f40 <sqlite_db_path>
    5c7a:	48 8d 3d 71 6f 00 00 	lea    rdi,[rip+0x6f71]        # cbf2 <_IO_stdin_used+0xbf2>
    5c81:	b8 00 00 00 00       	mov    eax,0x0
    5c86:	e8 e4 2c 00 00       	call   896f <livedebug>
    5c8b:	e9 1e 03 00 00       	jmp    5fae <rule_library_parser+0x5cf>
    5c90:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c94:	ba 0b 00 00 00       	mov    edx,0xb
    5c99:	48 8d 35 6b 6f 00 00 	lea    rsi,[rip+0x6f6b]        # cc0b <_IO_stdin_used+0xc0b>
    5ca0:	48 89 c7             	mov    rdi,rax
    5ca3:	e8 08 c9 ff ff       	call   25b0 <strncmp@plt>
    5ca8:	85 c0                	test   eax,eax
    5caa:	75 34                	jne    5ce0 <rule_library_parser+0x301>
    5cac:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5cb0:	48 83 c0 0b          	add    rax,0xb
    5cb4:	48 89 c6             	mov    rsi,rax
    5cb7:	48 8d 3d b2 42 10 00 	lea    rdi,[rip+0x1042b2]        # 109f70 <input_adapter>
    5cbe:	e8 5d cb ff ff       	call   2820 <strcpy@plt>
    5cc3:	48 8d 35 a6 42 10 00 	lea    rsi,[rip+0x1042a6]        # 109f70 <input_adapter>
    5cca:	48 8d 3d 47 6f 00 00 	lea    rdi,[rip+0x6f47]        # cc18 <_IO_stdin_used+0xc18>
    5cd1:	b8 00 00 00 00       	mov    eax,0x0
    5cd6:	e8 94 2c 00 00       	call   896f <livedebug>
    5cdb:	e9 ce 02 00 00       	jmp    5fae <rule_library_parser+0x5cf>
    5ce0:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ce4:	ba 0c 00 00 00       	mov    edx,0xc
    5ce9:	48 8d 35 5b 6f 00 00 	lea    rsi,[rip+0x6f5b]        # cc4b <_IO_stdin_used+0xc4b>
    5cf0:	48 89 c7             	mov    rdi,rax
    5cf3:	e8 b8 c8 ff ff       	call   25b0 <strncmp@plt>
    5cf8:	85 c0                	test   eax,eax
    5cfa:	75 34                	jne    5d30 <rule_library_parser+0x351>
    5cfc:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d00:	48 83 c0 0c          	add    rax,0xc
    5d04:	48 89 c6             	mov    rsi,rax
    5d07:	48 8d 3d 72 42 10 00 	lea    rdi,[rip+0x104272]        # 109f80 <output_adapter>
    5d0e:	e8 0d cb ff ff       	call   2820 <strcpy@plt>
    5d13:	48 8d 35 66 42 10 00 	lea    rsi,[rip+0x104266]        # 109f80 <output_adapter>
    5d1a:	48 8d 3d 37 6f 00 00 	lea    rdi,[rip+0x6f37]        # cc58 <_IO_stdin_used+0xc58>
    5d21:	b8 00 00 00 00       	mov    eax,0x0
    5d26:	e8 44 2c 00 00       	call   896f <livedebug>
    5d2b:	e9 7e 02 00 00       	jmp    5fae <rule_library_parser+0x5cf>
    5d30:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d34:	ba 05 00 00 00       	mov    edx,0x5
    5d39:	48 8d 35 4c 6f 00 00 	lea    rsi,[rip+0x6f4c]        # cc8c <_IO_stdin_used+0xc8c>
    5d40:	48 89 c7             	mov    rdi,rax
    5d43:	e8 68 c8 ff ff       	call   25b0 <strncmp@plt>
    5d48:	85 c0                	test   eax,eax
    5d4a:	0f 85 81 00 00 00    	jne    5dd1 <rule_library_parser+0x3f2>
    5d50:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d54:	48 83 c0 05          	add    rax,0x5
    5d58:	48 89 c6             	mov    rsi,rax
    5d5b:	48 8d 3d 30 6f 00 00 	lea    rdi,[rip+0x6f30]        # cc92 <_IO_stdin_used+0xc92>
    5d62:	b8 00 00 00 00       	mov    eax,0x0
    5d67:	e8 03 2c 00 00       	call   896f <livedebug>
    5d6c:	48 8d 3d 28 6f 00 00 	lea    rdi,[rip+0x6f28]        # cc9b <_IO_stdin_used+0xc9b>
    5d73:	b8 00 00 00 00       	mov    eax,0x0
    5d78:	e8 63 c7 ff ff       	call   24e0 <printf@plt>
    5d7d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d81:	48 83 c0 05          	add    rax,0x5
    5d85:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5d88:	0f b6 15 18 6f 00 00 	movzx  edx,BYTE PTR [rip+0x6f18]        # cca7 <_IO_stdin_used+0xca7>
    5d8f:	0f b6 c0             	movzx  eax,al
    5d92:	0f b6 d2             	movzx  edx,dl
    5d95:	29 d0                	sub    eax,edx
    5d97:	85 c0                	test   eax,eax
    5d99:	75 1b                	jne    5db6 <rule_library_parser+0x3d7>
    5d9b:	c7 05 7f b2 00 00 02 	mov    DWORD PTR [rip+0xb27f],0x2        # 11024 <VIGIL_MODE>
    5da2:	00 00 00 
    5da5:	48 8d 3d fd 6e 00 00 	lea    rdi,[rip+0x6efd]        # cca9 <_IO_stdin_used+0xca9>
    5dac:	e8 8f c7 ff ff       	call   2540 <puts@plt>
    5db1:	e9 f8 01 00 00       	jmp    5fae <rule_library_parser+0x5cf>
    5db6:	c7 05 64 b2 00 00 01 	mov    DWORD PTR [rip+0xb264],0x1        # 11024 <VIGIL_MODE>
    5dbd:	00 00 00 
    5dc0:	48 8d 3d f9 6e 00 00 	lea    rdi,[rip+0x6ef9]        # ccc0 <_IO_stdin_used+0xcc0>
    5dc7:	e8 74 c7 ff ff       	call   2540 <puts@plt>
    5dcc:	e9 dd 01 00 00       	jmp    5fae <rule_library_parser+0x5cf>
    5dd1:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5dd5:	ba 08 00 00 00       	mov    edx,0x8
    5dda:	48 8d 35 f6 6e 00 00 	lea    rsi,[rip+0x6ef6]        # ccd7 <_IO_stdin_used+0xcd7>
    5de1:	48 89 c7             	mov    rdi,rax
    5de4:	e8 c7 c7 ff ff       	call   25b0 <strncmp@plt>
    5de9:	85 c0                	test   eax,eax
    5deb:	75 34                	jne    5e21 <rule_library_parser+0x442>
    5ded:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5df1:	48 83 c0 08          	add    rax,0x8
    5df5:	48 89 c6             	mov    rsi,rax
    5df8:	48 8d 3d 91 41 10 00 	lea    rdi,[rip+0x104191]        # 109f90 <local_ip>
    5dff:	e8 1c ca ff ff       	call   2820 <strcpy@plt>
    5e04:	48 8d 35 85 41 10 00 	lea    rsi,[rip+0x104185]        # 109f90 <local_ip>
    5e0b:	48 8d 3d ce 6e 00 00 	lea    rdi,[rip+0x6ece]        # cce0 <_IO_stdin_used+0xce0>
    5e12:	b8 00 00 00 00       	mov    eax,0x0
    5e17:	e8 53 2b 00 00       	call   896f <livedebug>
    5e1c:	e9 8d 01 00 00       	jmp    5fae <rule_library_parser+0x5cf>
    5e21:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e25:	ba 06 00 00 00       	mov    edx,0x6
    5e2a:	48 8d 35 ca 6e 00 00 	lea    rsi,[rip+0x6eca]        # ccfb <_IO_stdin_used+0xcfb>
    5e31:	48 89 c7             	mov    rdi,rax
    5e34:	e8 77 c7 ff ff       	call   25b0 <strncmp@plt>
    5e39:	85 c0                	test   eax,eax
    5e3b:	75 1c                	jne    5e59 <rule_library_parser+0x47a>
    5e3d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e41:	48 83 c0 06          	add    rax,0x6
    5e45:	48 89 c6             	mov    rsi,rax
    5e48:	48 8d 3d 61 41 10 00 	lea    rdi,[rip+0x104161]        # 109fb0 <def_gw>
    5e4f:	e8 cc c9 ff ff       	call   2820 <strcpy@plt>
    5e54:	e9 55 01 00 00       	jmp    5fae <rule_library_parser+0x5cf>
    5e59:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e5d:	ba 08 00 00 00       	mov    edx,0x8
    5e62:	48 8d 35 99 6e 00 00 	lea    rsi,[rip+0x6e99]        # cd02 <_IO_stdin_used+0xd02>
    5e69:	48 89 c7             	mov    rdi,rax
    5e6c:	e8 3f c7 ff ff       	call   25b0 <strncmp@plt>
    5e71:	85 c0                	test   eax,eax
    5e73:	75 3f                	jne    5eb4 <rule_library_parser+0x4d5>
    5e75:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e79:	48 83 c0 08          	add    rax,0x8
    5e7d:	48 8d 35 df 6c 00 00 	lea    rsi,[rip+0x6cdf]        # cb63 <_IO_stdin_used+0xb63>
    5e84:	48 89 c7             	mov    rdi,rax
    5e87:	e8 64 c9 ff ff       	call   27f0 <strcmp@plt>
    5e8c:	85 c0                	test   eax,eax
    5e8e:	75 18                	jne    5ea8 <rule_library_parser+0x4c9>
    5e90:	c6 05 2b 41 10 00 01 	mov    BYTE PTR [rip+0x10412b],0x1        # 109fc2 <use_spi>
    5e97:	48 8d 3d 6d 6e 00 00 	lea    rdi,[rip+0x6e6d]        # cd0b <_IO_stdin_used+0xd0b>
    5e9e:	e8 9d c6 ff ff       	call   2540 <puts@plt>
    5ea3:	e9 06 01 00 00       	jmp    5fae <rule_library_parser+0x5cf>
    5ea8:	c6 05 13 41 10 00 00 	mov    BYTE PTR [rip+0x104113],0x0        # 109fc2 <use_spi>
    5eaf:	e9 fa 00 00 00       	jmp    5fae <rule_library_parser+0x5cf>
    5eb4:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5eb8:	ba 09 00 00 00       	mov    edx,0x9
    5ebd:	48 8d 35 60 6e 00 00 	lea    rsi,[rip+0x6e60]        # cd24 <_IO_stdin_used+0xd24>
    5ec4:	48 89 c7             	mov    rdi,rax
    5ec7:	e8 e4 c6 ff ff       	call   25b0 <strncmp@plt>
    5ecc:	85 c0                	test   eax,eax
    5ece:	75 27                	jne    5ef7 <rule_library_parser+0x518>
    5ed0:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ed4:	48 89 c7             	mov    rdi,rax
    5ed7:	e8 83 01 00 00       	call   605f <rstrip>
    5edc:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ee0:	48 83 c0 09          	add    rax,0x9
    5ee4:	48 89 c7             	mov    rdi,rax
    5ee7:	e8 3c 50 00 00       	call   af28 <homenet_toi>
    5eec:	89 05 d2 40 10 00    	mov    DWORD PTR [rip+0x1040d2],eax        # 109fc4 <homenet>
    5ef2:	e9 b7 00 00 00       	jmp    5fae <rule_library_parser+0x5cf>
    5ef7:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5efb:	ba 0e 00 00 00       	mov    edx,0xe
    5f00:	48 8d 35 27 6e 00 00 	lea    rsi,[rip+0x6e27]        # cd2e <_IO_stdin_used+0xd2e>
    5f07:	48 89 c7             	mov    rdi,rax
    5f0a:	e8 a1 c6 ff ff       	call   25b0 <strncmp@plt>
    5f0f:	85 c0                	test   eax,eax
    5f11:	75 24                	jne    5f37 <rule_library_parser+0x558>
    5f13:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f17:	48 89 c7             	mov    rdi,rax
    5f1a:	e8 40 01 00 00       	call   605f <rstrip>
    5f1f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f23:	48 83 c0 0e          	add    rax,0xe
    5f27:	48 89 c7             	mov    rdi,rax
    5f2a:	e8 f9 4f 00 00       	call   af28 <homenet_toi>
    5f2f:	89 05 93 40 10 00    	mov    DWORD PTR [rip+0x104093],eax        # 109fc8 <homenetmask>
    5f35:	eb 77                	jmp    5fae <rule_library_parser+0x5cf>
    5f37:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f3b:	ba 09 00 00 00       	mov    edx,0x9
    5f40:	48 8d 35 f6 6d 00 00 	lea    rsi,[rip+0x6df6]        # cd3d <_IO_stdin_used+0xd3d>
    5f47:	48 89 c7             	mov    rdi,rax
    5f4a:	e8 61 c6 ff ff       	call   25b0 <strncmp@plt>
    5f4f:	85 c0                	test   eax,eax
    5f51:	75 3f                	jne    5f92 <rule_library_parser+0x5b3>
    5f53:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f57:	48 89 c7             	mov    rdi,rax
    5f5a:	e8 00 01 00 00       	call   605f <rstrip>
    5f5f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f63:	48 83 c0 09          	add    rax,0x9
    5f67:	48 8d 35 d9 6d 00 00 	lea    rsi,[rip+0x6dd9]        # cd47 <_IO_stdin_used+0xd47>
    5f6e:	48 89 c7             	mov    rdi,rax
    5f71:	e8 7a c8 ff ff       	call   27f0 <strcmp@plt>
    5f76:	85 c0                	test   eax,eax
    5f78:	75 0c                	jne    5f86 <rule_library_parser+0x5a7>
    5f7a:	c7 05 e4 3f 10 00 04 	mov    DWORD PTR [rip+0x103fe4],0x4        # 109f68 <vigil_location>
    5f81:	00 00 00 
    5f84:	eb 28                	jmp    5fae <rule_library_parser+0x5cf>
    5f86:	c7 05 d8 3f 10 00 03 	mov    DWORD PTR [rip+0x103fd8],0x3        # 109f68 <vigil_location>
    5f8d:	00 00 00 
    5f90:	eb 1c                	jmp    5fae <rule_library_parser+0x5cf>
    5f92:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f96:	48 89 c7             	mov    rdi,rax
    5f99:	e8 7e 00 00 00       	call   601c <is_rule>
    5f9e:	84 c0                	test   al,al
    5fa0:	74 0c                	je     5fae <rule_library_parser+0x5cf>
    5fa2:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5fa6:	48 89 c7             	mov    rdi,rax
    5fa9:	e8 18 01 00 00       	call   60c6 <rule_parser>
    5fae:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5fb2:	ba 08 00 00 00       	mov    edx,0x8
    5fb7:	be 00 00 00 00       	mov    esi,0x0
    5fbc:	48 89 c7             	mov    rdi,rax
    5fbf:	e8 2c c5 ff ff       	call   24f0 <memset@plt>
    5fc4:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    5fc8:	48 8d 4d c8          	lea    rcx,[rbp-0x38]
    5fcc:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    5fd0:	48 89 ce             	mov    rsi,rcx
    5fd3:	48 89 c7             	mov    rdi,rax
    5fd6:	e8 35 c8 ff ff       	call   2810 <getline@plt>
    5fdb:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    5fdf:	48 83 7d e0 ff       	cmp    QWORD PTR [rbp-0x20],0xffffffffffffffff
    5fe4:	0f 85 6a fa ff ff    	jne    5a54 <rule_library_parser+0x75>
    5fea:	8b 05 34 b0 00 00    	mov    eax,DWORD PTR [rip+0xb034]        # 11024 <VIGIL_MODE>
    5ff0:	3d ff ff 00 00       	cmp    eax,0xffff
    5ff5:	75 0a                	jne    6001 <rule_library_parser+0x622>
    5ff7:	c7 05 23 b0 00 00 01 	mov    DWORD PTR [rip+0xb023],0x1        # 11024 <VIGIL_MODE>
    5ffe:	00 00 00 
    6001:	90                   	nop
    6002:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6006:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    600d:	00 00 
    600f:	74 05                	je     6016 <rule_library_parser+0x637>
    6011:	e8 ca c7 ff ff       	call   27e0 <__stack_chk_fail@plt>
    6016:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    601a:	c9                   	leave  
    601b:	c3                   	ret    

000000000000601c <is_rule>:
    601c:	f3 0f 1e fa          	endbr64 
    6020:	55                   	push   rbp
    6021:	48 89 e5             	mov    rbp,rsp
    6024:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6028:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    602c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    602f:	3c 24                	cmp    al,0x24
    6031:	0f 94 c0             	sete   al
    6034:	5d                   	pop    rbp
    6035:	c3                   	ret    

0000000000006036 <is_comment>:
    6036:	f3 0f 1e fa          	endbr64 
    603a:	55                   	push   rbp
    603b:	48 89 e5             	mov    rbp,rsp
    603e:	48 83 ec 10          	sub    rsp,0x10
    6042:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6046:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    604a:	be 23 00 00 00       	mov    esi,0x23
    604f:	48 89 c7             	mov    rdi,rax
    6052:	e8 39 c7 ff ff       	call   2790 <strchr@plt>
    6057:	48 85 c0             	test   rax,rax
    605a:	0f 95 c0             	setne  al
    605d:	c9                   	leave  
    605e:	c3                   	ret    

000000000000605f <rstrip>:
    605f:	f3 0f 1e fa          	endbr64 
    6063:	55                   	push   rbp
    6064:	48 89 e5             	mov    rbp,rsp
    6067:	48 83 ec 10          	sub    rsp,0x10
    606b:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    606f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6073:	48 8d 35 cc 6a 00 00 	lea    rsi,[rip+0x6acc]        # cb46 <_IO_stdin_used+0xb46>
    607a:	48 89 c7             	mov    rdi,rax
    607d:	e8 0e c8 ff ff       	call   2890 <strcspn@plt>
    6082:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    6086:	48 01 d0             	add    rax,rdx
    6089:	c6 00 00             	mov    BYTE PTR [rax],0x0
    608c:	90                   	nop
    608d:	c9                   	leave  
    608e:	c3                   	ret    

000000000000608f <syntax_error>:
    608f:	f3 0f 1e fa          	endbr64 
    6093:	55                   	push   rbp
    6094:	48 89 e5             	mov    rbp,rsp
    6097:	48 83 ec 10          	sub    rsp,0x10
    609b:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    609f:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
    60a2:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    60a6:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    60a9:	89 c6                	mov    esi,eax
    60ab:	48 8d 3d 9e 6c 00 00 	lea    rdi,[rip+0x6c9e]        # cd50 <_IO_stdin_used+0xd50>
    60b2:	b8 00 00 00 00       	mov    eax,0x0
    60b7:	e8 24 c4 ff ff       	call   24e0 <printf@plt>
    60bc:	bf 01 00 00 00       	mov    edi,0x1
    60c1:	e8 9a c4 ff ff       	call   2560 <exit@plt>

00000000000060c6 <rule_parser>:
    60c6:	f3 0f 1e fa          	endbr64 
    60ca:	55                   	push   rbp
    60cb:	48 89 e5             	mov    rbp,rsp
    60ce:	48 83 ec 40          	sub    rsp,0x40
    60d2:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    60d6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    60dd:	00 00 
    60df:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    60e3:	31 c0                	xor    eax,eax
    60e5:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    60e9:	48 83 c0 01          	add    rax,0x1
    60ed:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    60f1:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    60f5:	48 8d 35 1c 6a 00 00 	lea    rsi,[rip+0x6a1c]        # cb18 <_IO_stdin_used+0xb18>
    60fc:	48 89 c7             	mov    rdi,rax
    60ff:	e8 cc c4 ff ff       	call   25d0 <fopen@plt>
    6104:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    6108:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
    610d:	75 22                	jne    6131 <rule_parser+0x6b>
    610f:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    6113:	48 89 c6             	mov    rsi,rax
    6116:	48 8d 3d 53 6c 00 00 	lea    rdi,[rip+0x6c53]        # cd70 <_IO_stdin_used+0xd70>
    611d:	b8 00 00 00 00       	mov    eax,0x0
    6122:	e8 b9 c3 ff ff       	call   24e0 <printf@plt>
    6127:	bf 01 00 00 00       	mov    edi,0x1
    612c:	e8 2f c4 ff ff       	call   2560 <exit@plt>
    6131:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    6135:	48 89 c6             	mov    rsi,rax
    6138:	48 8d 3d 64 6c 00 00 	lea    rdi,[rip+0x6c64]        # cda3 <_IO_stdin_used+0xda3>
    613f:	b8 00 00 00 00       	mov    eax,0x0
    6144:	e8 97 c3 ff ff       	call   24e0 <printf@plt>
    6149:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    6150:	00 
    6151:	48 c7 45 d8 00 00 00 	mov    QWORD PTR [rbp-0x28],0x0
    6158:	00 
    6159:	eb 54                	jmp    61af <rule_parser+0xe9>
    615b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    615f:	48 89 c7             	mov    rdi,rax
    6162:	e8 cf fe ff ff       	call   6036 <is_comment>
    6167:	84 c0                	test   al,al
    6169:	74 02                	je     616d <rule_parser+0xa7>
    616b:	eb 42                	jmp    61af <rule_parser+0xe9>
    616d:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    6171:	48 89 c7             	mov    rdi,rax
    6174:	e8 e6 fe ff ff       	call   605f <rstrip>
    6179:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    617d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    6180:	0f b6 c0             	movzx  eax,al
    6183:	f7 d8                	neg    eax
    6185:	85 c0                	test   eax,eax
    6187:	75 02                	jne    618b <rule_parser+0xc5>
    6189:	eb 24                	jmp    61af <rule_parser+0xe9>
    618b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    618f:	48 8d 35 1e 6c 00 00 	lea    rsi,[rip+0x6c1e]        # cdb4 <_IO_stdin_used+0xdb4>
    6196:	48 89 c7             	mov    rdi,rax
    6199:	e8 72 c5 ff ff       	call   2710 <strstr@plt>
    619e:	48 85 c0             	test   rax,rax
    61a1:	74 0c                	je     61af <rule_parser+0xe9>
    61a3:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    61a7:	48 89 c7             	mov    rdi,rax
    61aa:	e8 09 39 00 00       	call   9ab8 <line_parser>
    61af:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    61b3:	48 8d 4d d0          	lea    rcx,[rbp-0x30]
    61b7:	48 8d 45 d8          	lea    rax,[rbp-0x28]
    61bb:	48 89 ce             	mov    rsi,rcx
    61be:	48 89 c7             	mov    rdi,rax
    61c1:	e8 4a c6 ff ff       	call   2810 <getline@plt>
    61c6:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    61ca:	48 83 7d f0 ff       	cmp    QWORD PTR [rbp-0x10],0xffffffffffffffff
    61cf:	75 8a                	jne    615b <rule_parser+0x95>
    61d1:	0f b6 05 48 3d 10 00 	movzx  eax,BYTE PTR [rip+0x103d48]        # 109f20 <debug_mode>
    61d8:	84 c0                	test   al,al
    61da:	74 18                	je     61f4 <rule_parser+0x12e>
    61dc:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    61e0:	48 89 c6             	mov    rsi,rax
    61e3:	48 8d 3d d0 6b 00 00 	lea    rdi,[rip+0x6bd0]        # cdba <_IO_stdin_used+0xdba>
    61ea:	b8 00 00 00 00       	mov    eax,0x0
    61ef:	e8 ec c2 ff ff       	call   24e0 <printf@plt>
    61f4:	90                   	nop
    61f5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    61f9:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    6200:	00 00 
    6202:	74 05                	je     6209 <rule_parser+0x143>
    6204:	e8 d7 c5 ff ff       	call   27e0 <__stack_chk_fail@plt>
    6209:	c9                   	leave  
    620a:	c3                   	ret    

000000000000620b <deny_conf_parser>:
    620b:	f3 0f 1e fa          	endbr64 
    620f:	55                   	push   rbp
    6210:	48 89 e5             	mov    rbp,rsp
    6213:	48 83 ec 50          	sub    rsp,0x50
    6217:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    621b:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6222:	00 00 
    6224:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    6228:	31 c0                	xor    eax,eax
    622a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    622e:	48 8d 35 e3 68 00 00 	lea    rsi,[rip+0x68e3]        # cb18 <_IO_stdin_used+0xb18>
    6235:	48 89 c7             	mov    rdi,rax
    6238:	e8 93 c3 ff ff       	call   25d0 <fopen@plt>
    623d:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    6241:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    6246:	75 22                	jne    626a <deny_conf_parser+0x5f>
    6248:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    624c:	48 89 c6             	mov    rsi,rax
    624f:	48 8d 3d 7a 6b 00 00 	lea    rdi,[rip+0x6b7a]        # cdd0 <_IO_stdin_used+0xdd0>
    6256:	b8 00 00 00 00       	mov    eax,0x0
    625b:	e8 80 c2 ff ff       	call   24e0 <printf@plt>
    6260:	bf 01 00 00 00       	mov    edi,0x1
    6265:	e8 f6 c2 ff ff       	call   2560 <exit@plt>
    626a:	48 c7 45 c8 00 00 00 	mov    QWORD PTR [rbp-0x38],0x0
    6271:	00 
    6272:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    6279:	00 
    627a:	e9 9a 00 00 00       	jmp    6319 <deny_conf_parser+0x10e>
    627f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6283:	48 89 c7             	mov    rdi,rax
    6286:	e8 d4 fd ff ff       	call   605f <rstrip>
    628b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    628f:	48 89 c7             	mov    rdi,rax
    6292:	e8 9f fd ff ff       	call   6036 <is_comment>
    6297:	84 c0                	test   al,al
    6299:	74 02                	je     629d <deny_conf_parser+0x92>
    629b:	eb 7c                	jmp    6319 <deny_conf_parser+0x10e>
    629d:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    62a1:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    62a4:	0f b6 c0             	movzx  eax,al
    62a7:	f7 d8                	neg    eax
    62a9:	85 c0                	test   eax,eax
    62ab:	75 02                	jne    62af <deny_conf_parser+0xa4>
    62ad:	eb 6a                	jmp    6319 <deny_conf_parser+0x10e>
    62af:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    62b3:	48 8d 35 47 6b 00 00 	lea    rsi,[rip+0x6b47]        # ce01 <_IO_stdin_used+0xe01>
    62ba:	48 89 c7             	mov    rdi,rax
    62bd:	e8 4e c4 ff ff       	call   2710 <strstr@plt>
    62c2:	48 85 c0             	test   rax,rax
    62c5:	74 52                	je     6319 <deny_conf_parser+0x10e>
    62c7:	8b 05 43 ad 00 00    	mov    eax,DWORD PTR [rip+0xad43]        # 11010 <blk_ipv4_len>
    62cd:	83 c0 01             	add    eax,0x1
    62d0:	89 05 3a ad 00 00    	mov    DWORD PTR [rip+0xad3a],eax        # 11010 <blk_ipv4_len>
    62d6:	8b 05 34 ad 00 00    	mov    eax,DWORD PTR [rip+0xad34]        # 11010 <blk_ipv4_len>
    62dc:	48 63 d0             	movsxd rdx,eax
    62df:	48 89 d0             	mov    rax,rdx
    62e2:	48 c1 e0 03          	shl    rax,0x3
    62e6:	48 01 d0             	add    rax,rdx
    62e9:	48 01 c0             	add    rax,rax
    62ec:	48 8d 15 ed cf 0e 00 	lea    rdx,[rip+0xecfed]        # f32e0 <blocked_ipv4_addrs>
    62f3:	48 01 d0             	add    rax,rdx
    62f6:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    62fa:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    62fe:	48 83 c0 05          	add    rax,0x5
    6302:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    6306:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    630a:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    630e:	48 89 d6             	mov    rsi,rdx
    6311:	48 89 c7             	mov    rdi,rax
    6314:	e8 07 c5 ff ff       	call   2820 <strcpy@plt>
    6319:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    631d:	48 8d 4d d0          	lea    rcx,[rbp-0x30]
    6321:	48 8d 45 c8          	lea    rax,[rbp-0x38]
    6325:	48 89 ce             	mov    rsi,rcx
    6328:	48 89 c7             	mov    rdi,rax
    632b:	e8 e0 c4 ff ff       	call   2810 <getline@plt>
    6330:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    6334:	48 83 7d e0 ff       	cmp    QWORD PTR [rbp-0x20],0xffffffffffffffff
    6339:	0f 85 40 ff ff ff    	jne    627f <deny_conf_parser+0x74>
    633f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6343:	48 85 c0             	test   rax,rax
    6346:	74 0c                	je     6354 <deny_conf_parser+0x149>
    6348:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    634c:	48 89 c7             	mov    rdi,rax
    634f:	e8 0c c3 ff ff       	call   2660 <free@plt>
    6354:	90                   	nop
    6355:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6359:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    6360:	00 00 
    6362:	74 05                	je     6369 <deny_conf_parser+0x15e>
    6364:	e8 77 c4 ff ff       	call   27e0 <__stack_chk_fail@plt>
    6369:	c9                   	leave  
    636a:	c3                   	ret    

000000000000636b <host_mon_parser>:
    636b:	f3 0f 1e fa          	endbr64 
    636f:	55                   	push   rbp
    6370:	48 89 e5             	mov    rbp,rsp
    6373:	48 83 ec 10          	sub    rsp,0x10
    6377:	48 8b 05 ba ac 00 00 	mov    rax,QWORD PTR [rip+0xacba]        # 11038 <default_host_conf>
    637e:	48 8d 35 93 67 00 00 	lea    rsi,[rip+0x6793]        # cb18 <_IO_stdin_used+0xb18>
    6385:	48 89 c7             	mov    rdi,rax
    6388:	e8 43 c2 ff ff       	call   25d0 <fopen@plt>
    638d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    6391:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    6396:	75 25                	jne    63bd <host_mon_parser+0x52>
    6398:	48 8b 05 99 ac 00 00 	mov    rax,QWORD PTR [rip+0xac99]        # 11038 <default_host_conf>
    639f:	48 89 c6             	mov    rsi,rax
    63a2:	48 8d 3d 5d 6a 00 00 	lea    rdi,[rip+0x6a5d]        # ce06 <_IO_stdin_used+0xe06>
    63a9:	b8 00 00 00 00       	mov    eax,0x0
    63ae:	e8 2d c1 ff ff       	call   24e0 <printf@plt>
    63b3:	bf 01 00 00 00       	mov    edi,0x1
    63b8:	e8 a3 c1 ff ff       	call   2560 <exit@plt>
    63bd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    63c1:	48 89 c7             	mov    rdi,rax
    63c4:	e8 97 c4 ff ff       	call   2860 <fclose@plt>
    63c9:	90                   	nop
    63ca:	c9                   	leave  
    63cb:	c3                   	ret    

00000000000063cc <test_encrypt>:
    63cc:	f3 0f 1e fa          	endbr64 
    63d0:	55                   	push   rbp
    63d1:	48 89 e5             	mov    rbp,rsp
    63d4:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    63d8:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    63dc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    63e0:	0f b6 80 48 01 00 00 	movzx  eax,BYTE PTR [rax+0x148]
    63e7:	84 c0                	test   al,al
    63e9:	74 13                	je     63fe <test_encrypt+0x32>
    63eb:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    63ef:	0f b6 40 38          	movzx  eax,BYTE PTR [rax+0x38]
    63f3:	84 c0                	test   al,al
    63f5:	74 07                	je     63fe <test_encrypt+0x32>
    63f7:	b8 00 00 00 00       	mov    eax,0x0
    63fc:	eb 05                	jmp    6403 <test_encrypt+0x37>
    63fe:	b8 01 00 00 00       	mov    eax,0x1
    6403:	5d                   	pop    rbp
    6404:	c3                   	ret    

0000000000006405 <rule_app>:
    6405:	f3 0f 1e fa          	endbr64 
    6409:	55                   	push   rbp
    640a:	48 89 e5             	mov    rbp,rsp
    640d:	48 83 ec 20          	sub    rsp,0x20
    6411:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    6415:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    6419:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    641d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6421:	48 89 d6             	mov    rsi,rdx
    6424:	48 89 c7             	mov    rdi,rax
    6427:	e8 55 03 00 00       	call   6781 <r_engine>
    642c:	88 45 fd             	mov    BYTE PTR [rbp-0x3],al
    642f:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    6433:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6437:	48 89 d6             	mov    rsi,rdx
    643a:	48 89 c7             	mov    rdi,rax
    643d:	e8 d4 49 00 00       	call   ae16 <d_engine>
    6442:	88 45 fe             	mov    BYTE PTR [rbp-0x2],al
    6445:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6449:	48 8b 88 78 03 00 00 	mov    rcx,QWORD PTR [rax+0x378]
    6450:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6454:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    6458:	48 89 d6             	mov    rsi,rdx
    645b:	48 89 c7             	mov    rdi,rax
    645e:	ff d1                	call   rcx
    6460:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
    6463:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
    6467:	74 40                	je     64a9 <rule_app+0xa4>
    6469:	80 7d fd 00          	cmp    BYTE PTR [rbp-0x3],0x0
    646d:	74 3a                	je     64a9 <rule_app+0xa4>
    646f:	80 7d fe 00          	cmp    BYTE PTR [rbp-0x2],0x0
    6473:	74 34                	je     64a9 <rule_app+0xa4>
    6475:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6479:	4c 8b 80 80 03 00 00 	mov    r8,QWORD PTR [rax+0x380]
    6480:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    6484:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    6488:	ba 00 00 00 00       	mov    edx,0x0
    648d:	48 89 ce             	mov    rsi,rcx
    6490:	48 89 c7             	mov    rdi,rax
    6493:	41 ff d0             	call   r8
    6496:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    649a:	8b 40 3c             	mov    eax,DWORD PTR [rax+0x3c]
    649d:	8d 50 01             	lea    edx,[rax+0x1]
    64a0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    64a4:	89 50 3c             	mov    DWORD PTR [rax+0x3c],edx
    64a7:	eb 17                	jmp    64c0 <rule_app+0xbb>
    64a9:	8b 05 75 ab 00 00    	mov    eax,DWORD PTR [rip+0xab75]        # 11024 <VIGIL_MODE>
    64af:	83 f8 02             	cmp    eax,0x2
    64b2:	75 0c                	jne    64c0 <rule_app+0xbb>
    64b4:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    64b8:	48 89 c7             	mov    rdi,rax
    64bb:	e8 8e 25 00 00       	call   8a4e <forward_packet>
    64c0:	90                   	nop
    64c1:	c9                   	leave  
    64c2:	c3                   	ret    

00000000000064c3 <rulemgr>:
    64c3:	f3 0f 1e fa          	endbr64 
    64c7:	55                   	push   rbp
    64c8:	48 89 e5             	mov    rbp,rsp
    64cb:	48 83 ec 20          	sub    rsp,0x20
    64cf:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    64d3:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    64da:	e9 8f 02 00 00       	jmp    676e <rulemgr+0x2ab>
    64df:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    64e2:	8d 50 01             	lea    edx,[rax+0x1]
    64e5:	89 55 f4             	mov    DWORD PTR [rbp-0xc],edx
    64e8:	48 98                	cdqe   
    64ea:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    64f1:	48 8d 15 e8 ad 00 00 	lea    rdx,[rip+0xade8]        # 112e0 <rules>
    64f8:	48 01 d0             	add    rax,rdx
    64fb:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    64ff:	0f b6 05 c6 3a 10 00 	movzx  eax,BYTE PTR [rip+0x103ac6]        # 109fcc <in_test_mode>
    6506:	84 c0                	test   al,al
    6508:	74 30                	je     653a <rulemgr+0x77>
    650a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    650e:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    6511:	83 f8 46             	cmp    eax,0x46
    6514:	75 0d                	jne    6523 <rulemgr+0x60>
    6516:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    651a:	c7 40 10 45 00 00 00 	mov    DWORD PTR [rax+0x10],0x45
    6521:	eb 17                	jmp    653a <rulemgr+0x77>
    6523:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6527:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    652a:	83 f8 45             	cmp    eax,0x45
    652d:	75 0b                	jne    653a <rulemgr+0x77>
    652f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6533:	c7 40 10 46 00 00 00 	mov    DWORD PTR [rax+0x10],0x46
    653a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    653e:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    6544:	83 f8 ff             	cmp    eax,0xffffffff
    6547:	74 19                	je     6562 <rulemgr+0x9f>
    6549:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    654d:	8b 50 2c             	mov    edx,DWORD PTR [rax+0x2c]
    6550:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6554:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    655a:	39 c2                	cmp    edx,eax
    655c:	0f 85 0c 02 00 00    	jne    676e <rulemgr+0x2ab>
    6562:	0f b6 05 17 ab 00 00 	movzx  eax,BYTE PTR [rip+0xab17]        # 11080 <demo_mode>
    6569:	84 c0                	test   al,al
    656b:	75 0f                	jne    657c <rulemgr+0xb9>
    656d:	8b 05 f5 39 10 00    	mov    eax,DWORD PTR [rip+0x1039f5]        # 109f68 <vigil_location>
    6573:	83 f8 03             	cmp    eax,0x3
    6576:	0f 85 a1 00 00 00    	jne    661d <rulemgr+0x15a>
    657c:	8b 05 e6 39 10 00    	mov    eax,DWORD PTR [rip+0x1039e6]        # 109f68 <vigil_location>
    6582:	83 f8 03             	cmp    eax,0x3
    6585:	0f 85 e3 01 00 00    	jne    676e <rulemgr+0x2ab>
    658b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    658f:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    6592:	83 f8 ff             	cmp    eax,0xffffffff
    6595:	74 16                	je     65ad <rulemgr+0xea>
    6597:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    659b:	8b 50 0c             	mov    edx,DWORD PTR [rax+0xc]
    659e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    65a2:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    65a5:	39 c2                	cmp    edx,eax
    65a7:	0f 85 c1 01 00 00    	jne    676e <rulemgr+0x2ab>
    65ad:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65b1:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    65b4:	83 f8 ff             	cmp    eax,0xffffffff
    65b7:	74 16                	je     65cf <rulemgr+0x10c>
    65b9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65bd:	8b 50 08             	mov    edx,DWORD PTR [rax+0x8]
    65c0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    65c4:	8b 40 28             	mov    eax,DWORD PTR [rax+0x28]
    65c7:	39 c2                	cmp    edx,eax
    65c9:	0f 85 9f 01 00 00    	jne    676e <rulemgr+0x2ab>
    65cf:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    65d3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65d7:	48 89 d6             	mov    rsi,rdx
    65da:	48 89 c7             	mov    rdi,rax
    65dd:	e8 97 03 00 00       	call   6979 <test_tcp_session_status>
    65e2:	84 c0                	test   al,al
    65e4:	0f 84 84 01 00 00    	je     676e <rulemgr+0x2ab>
    65ea:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    65ee:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65f2:	48 89 d6             	mov    rsi,rdx
    65f5:	48 89 c7             	mov    rdi,rax
    65f8:	e8 cf fd ff ff       	call   63cc <test_encrypt>
    65fd:	84 c0                	test   al,al
    65ff:	0f 84 69 01 00 00    	je     676e <rulemgr+0x2ab>
    6605:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6609:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    660d:	48 89 d6             	mov    rsi,rdx
    6610:	48 89 c7             	mov    rdi,rax
    6613:	e8 ed fd ff ff       	call   6405 <rule_app>
    6618:	e9 51 01 00 00       	jmp    676e <rulemgr+0x2ab>
    661d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6621:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    6624:	83 f8 47             	cmp    eax,0x47
    6627:	74 16                	je     663f <rulemgr+0x17c>
    6629:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    662d:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    6630:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6634:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    6637:	39 c2                	cmp    edx,eax
    6639:	0f 85 2f 01 00 00    	jne    676e <rulemgr+0x2ab>
    663f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6643:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    6649:	3d 80 00 00 00       	cmp    eax,0x80
    664e:	75 18                	jne    6668 <rulemgr+0x1a5>
    6650:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6654:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6658:	48 89 d6             	mov    rsi,rdx
    665b:	48 89 c7             	mov    rdi,rax
    665e:	e8 a2 fd ff ff       	call   6405 <rule_app>
    6663:	e9 06 01 00 00       	jmp    676e <rulemgr+0x2ab>
    6668:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    666c:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    666f:	83 f8 47             	cmp    eax,0x47
    6672:	75 7d                	jne    66f1 <rulemgr+0x22e>
    6674:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6678:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    667b:	83 f8 ff             	cmp    eax,0xffffffff
    667e:	74 28                	je     66a8 <rulemgr+0x1e5>
    6680:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6684:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    6687:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    668b:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    668e:	39 c2                	cmp    edx,eax
    6690:	74 16                	je     66a8 <rulemgr+0x1e5>
    6692:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6696:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    6699:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    669d:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    66a0:	39 c2                	cmp    edx,eax
    66a2:	0f 85 c6 00 00 00    	jne    676e <rulemgr+0x2ab>
    66a8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66ac:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    66af:	83 f8 ff             	cmp    eax,0xffffffff
    66b2:	74 28                	je     66dc <rulemgr+0x219>
    66b4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    66b8:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    66bb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66bf:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    66c2:	39 c2                	cmp    edx,eax
    66c4:	74 16                	je     66dc <rulemgr+0x219>
    66c6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    66ca:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    66cd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66d1:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    66d4:	39 c2                	cmp    edx,eax
    66d6:	0f 85 92 00 00 00    	jne    676e <rulemgr+0x2ab>
    66dc:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    66e0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66e4:	48 89 d6             	mov    rsi,rdx
    66e7:	48 89 c7             	mov    rdi,rax
    66ea:	e8 16 fd ff ff       	call   6405 <rule_app>
    66ef:	eb 7d                	jmp    676e <rulemgr+0x2ab>
    66f1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66f5:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    66f8:	83 f8 ff             	cmp    eax,0xffffffff
    66fb:	74 12                	je     670f <rulemgr+0x24c>
    66fd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6701:	8b 50 0c             	mov    edx,DWORD PTR [rax+0xc]
    6704:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6708:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    670b:	39 c2                	cmp    edx,eax
    670d:	75 5f                	jne    676e <rulemgr+0x2ab>
    670f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6713:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    6716:	83 f8 ff             	cmp    eax,0xffffffff
    6719:	74 12                	je     672d <rulemgr+0x26a>
    671b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    671f:	8b 50 08             	mov    edx,DWORD PTR [rax+0x8]
    6722:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6726:	8b 40 28             	mov    eax,DWORD PTR [rax+0x28]
    6729:	39 c2                	cmp    edx,eax
    672b:	75 41                	jne    676e <rulemgr+0x2ab>
    672d:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6731:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6735:	48 89 d6             	mov    rsi,rdx
    6738:	48 89 c7             	mov    rdi,rax
    673b:	e8 39 02 00 00       	call   6979 <test_tcp_session_status>
    6740:	84 c0                	test   al,al
    6742:	74 2a                	je     676e <rulemgr+0x2ab>
    6744:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6748:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    674c:	48 89 d6             	mov    rsi,rdx
    674f:	48 89 c7             	mov    rdi,rax
    6752:	e8 75 fc ff ff       	call   63cc <test_encrypt>
    6757:	84 c0                	test   al,al
    6759:	74 13                	je     676e <rulemgr+0x2ab>
    675b:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    675f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6763:	48 89 d6             	mov    rsi,rdx
    6766:	48 89 c7             	mov    rdi,rax
    6769:	e8 97 fc ff ff       	call   6405 <rule_app>
    676e:	8b 05 a0 a8 00 00    	mov    eax,DWORD PTR [rip+0xa8a0]        # 11014 <num_rules>
    6774:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    6777:	0f 8e 62 fd ff ff    	jle    64df <rulemgr+0x1c>
    677d:	90                   	nop
    677e:	90                   	nop
    677f:	c9                   	leave  
    6780:	c3                   	ret    

0000000000006781 <r_engine>:
    6781:	f3 0f 1e fa          	endbr64 
    6785:	55                   	push   rbp
    6786:	48 89 e5             	mov    rbp,rsp
    6789:	48 83 ec 10          	sub    rsp,0x10
    678d:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6791:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    6795:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6799:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    679c:	3d 80 00 00 00       	cmp    eax,0x80
    67a1:	0f 85 d9 00 00 00    	jne    6880 <r_engine+0xff>
    67a7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67ab:	0f b6 80 6f 03 00 00 	movzx  eax,BYTE PTR [rax+0x36f]
    67b2:	84 c0                	test   al,al
    67b4:	74 25                	je     67db <r_engine+0x5a>
    67b6:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    67ba:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    67be:	0f b6 50 01          	movzx  edx,BYTE PTR [rax+0x1]
    67c2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67c6:	0f b6 80 73 03 00 00 	movzx  eax,BYTE PTR [rax+0x373]
    67cd:	38 c2                	cmp    dl,al
    67cf:	74 0a                	je     67db <r_engine+0x5a>
    67d1:	b8 00 00 00 00       	mov    eax,0x0
    67d6:	e9 9c 01 00 00       	jmp    6977 <r_engine+0x1f6>
    67db:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67df:	0f b6 80 71 03 00 00 	movzx  eax,BYTE PTR [rax+0x371]
    67e6:	84 c0                	test   al,al
    67e8:	74 26                	je     6810 <r_engine+0x8f>
    67ea:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    67ee:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    67f2:	0f b7 50 04          	movzx  edx,WORD PTR [rax+0x4]
    67f6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67fa:	0f b7 80 76 03 00 00 	movzx  eax,WORD PTR [rax+0x376]
    6801:	66 39 c2             	cmp    dx,ax
    6804:	74 0a                	je     6810 <r_engine+0x8f>
    6806:	b8 00 00 00 00       	mov    eax,0x0
    680b:	e9 67 01 00 00       	jmp    6977 <r_engine+0x1f6>
    6810:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6814:	0f b6 80 70 03 00 00 	movzx  eax,BYTE PTR [rax+0x370]
    681b:	84 c0                	test   al,al
    681d:	74 26                	je     6845 <r_engine+0xc4>
    681f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6823:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    6827:	0f b7 50 06          	movzx  edx,WORD PTR [rax+0x6]
    682b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    682f:	0f b7 80 74 03 00 00 	movzx  eax,WORD PTR [rax+0x374]
    6836:	66 39 c2             	cmp    dx,ax
    6839:	74 0a                	je     6845 <r_engine+0xc4>
    683b:	b8 00 00 00 00       	mov    eax,0x0
    6840:	e9 32 01 00 00       	jmp    6977 <r_engine+0x1f6>
    6845:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6849:	0f b6 80 6e 03 00 00 	movzx  eax,BYTE PTR [rax+0x36e]
    6850:	84 c0                	test   al,al
    6852:	0f 84 dc 00 00 00    	je     6934 <r_engine+0x1b3>
    6858:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    685c:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    6860:	0f b6 10             	movzx  edx,BYTE PTR [rax]
    6863:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6867:	0f b6 80 72 03 00 00 	movzx  eax,BYTE PTR [rax+0x372]
    686e:	38 c2                	cmp    dl,al
    6870:	0f 84 be 00 00 00    	je     6934 <r_engine+0x1b3>
    6876:	b8 00 00 00 00       	mov    eax,0x0
    687b:	e9 f7 00 00 00       	jmp    6977 <r_engine+0x1f6>
    6880:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6884:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    6887:	83 f8 7e             	cmp    eax,0x7e
    688a:	0f 85 a4 00 00 00    	jne    6934 <r_engine+0x1b3>
    6890:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6894:	0f b6 80 51 03 00 00 	movzx  eax,BYTE PTR [rax+0x351]
    689b:	84 c0                	test   al,al
    689d:	74 2e                	je     68cd <r_engine+0x14c>
    689f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    68a3:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    68a7:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    68aa:	89 c7                	mov    edi,eax
    68ac:	e8 2f be ff ff       	call   26e0 <ntohl@plt>
    68b1:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    68b5:	0f b7 92 5c 03 00 00 	movzx  edx,WORD PTR [rdx+0x35c]
    68bc:	0f b7 d2             	movzx  edx,dx
    68bf:	39 d0                	cmp    eax,edx
    68c1:	74 0a                	je     68cd <r_engine+0x14c>
    68c3:	b8 00 00 00 00       	mov    eax,0x0
    68c8:	e9 aa 00 00 00       	jmp    6977 <r_engine+0x1f6>
    68cd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    68d1:	0f b6 80 50 03 00 00 	movzx  eax,BYTE PTR [rax+0x350]
    68d8:	84 c0                	test   al,al
    68da:	74 29                	je     6905 <r_engine+0x184>
    68dc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    68e0:	48 8d 90 53 03 00 00 	lea    rdx,[rax+0x353]
    68e7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    68eb:	48 83 c0 68          	add    rax,0x68
    68ef:	48 89 d6             	mov    rsi,rdx
    68f2:	48 89 c7             	mov    rdi,rax
    68f5:	e8 f6 be ff ff       	call   27f0 <strcmp@plt>
    68fa:	85 c0                	test   eax,eax
    68fc:	74 07                	je     6905 <r_engine+0x184>
    68fe:	b8 00 00 00 00       	mov    eax,0x0
    6903:	eb 72                	jmp    6977 <r_engine+0x1f6>
    6905:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6909:	0f b6 80 52 03 00 00 	movzx  eax,BYTE PTR [rax+0x352]
    6910:	84 c0                	test   al,al
    6912:	74 20                	je     6934 <r_engine+0x1b3>
    6914:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6918:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    691c:	8b 50 04             	mov    edx,DWORD PTR [rax+0x4]
    691f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6923:	8b 80 60 03 00 00    	mov    eax,DWORD PTR [rax+0x360]
    6929:	39 c2                	cmp    edx,eax
    692b:	74 07                	je     6934 <r_engine+0x1b3>
    692d:	b8 00 00 00 00       	mov    eax,0x0
    6932:	eb 43                	jmp    6977 <r_engine+0x1f6>
    6934:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6938:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    693c:	48 85 c0             	test   rax,rax
    693f:	74 31                	je     6972 <r_engine+0x1f1>
    6941:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6945:	0f b6 80 69 03 00 00 	movzx  eax,BYTE PTR [rax+0x369]
    694c:	84 c0                	test   al,al
    694e:	74 22                	je     6972 <r_engine+0x1f1>
    6950:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6954:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    6958:	0f b6 50 08          	movzx  edx,BYTE PTR [rax+0x8]
    695c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6960:	0f b6 80 6c 03 00 00 	movzx  eax,BYTE PTR [rax+0x36c]
    6967:	38 c2                	cmp    dl,al
    6969:	74 07                	je     6972 <r_engine+0x1f1>
    696b:	b8 00 00 00 00       	mov    eax,0x0
    6970:	eb 05                	jmp    6977 <r_engine+0x1f6>
    6972:	b8 01 00 00 00       	mov    eax,0x1
    6977:	c9                   	leave  
    6978:	c3                   	ret    

0000000000006979 <test_tcp_session_status>:
    6979:	f3 0f 1e fa          	endbr64 
    697d:	55                   	push   rbp
    697e:	48 89 e5             	mov    rbp,rsp
    6981:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6985:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    6989:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    698d:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    6993:	83 f8 7e             	cmp    eax,0x7e
    6996:	75 34                	jne    69cc <test_tcp_session_status+0x53>
    6998:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    699c:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    699f:	83 f8 7e             	cmp    eax,0x7e
    69a2:	75 28                	jne    69cc <test_tcp_session_status+0x53>
    69a4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    69a8:	8b 80 48 03 00 00    	mov    eax,DWORD PTR [rax+0x348]
    69ae:	83 f8 01             	cmp    eax,0x1
    69b1:	75 12                	jne    69c5 <test_tcp_session_status+0x4c>
    69b3:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    69b7:	8b 40 70             	mov    eax,DWORD PTR [rax+0x70]
    69ba:	85 c0                	test   eax,eax
    69bc:	75 07                	jne    69c5 <test_tcp_session_status+0x4c>
    69be:	b8 00 00 00 00       	mov    eax,0x0
    69c3:	eb 0c                	jmp    69d1 <test_tcp_session_status+0x58>
    69c5:	b8 01 00 00 00       	mov    eax,0x1
    69ca:	eb 05                	jmp    69d1 <test_tcp_session_status+0x58>
    69cc:	b8 01 00 00 00       	mov    eax,0x1
    69d1:	5d                   	pop    rbp
    69d2:	c3                   	ret    

00000000000069d3 <main>:
    69d3:	f3 0f 1e fa          	endbr64 
    69d7:	55                   	push   rbp
    69d8:	48 89 e5             	mov    rbp,rsp
    69db:	48 81 ec 40 08 00 00 	sub    rsp,0x840
    69e2:	89 bd cc f7 ff ff    	mov    DWORD PTR [rbp-0x834],edi
    69e8:	48 89 b5 c0 f7 ff ff 	mov    QWORD PTR [rbp-0x840],rsi
    69ef:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    69f6:	00 00 
    69f8:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    69fc:	31 c0                	xor    eax,eax
    69fe:	b8 00 00 00 00       	mov    eax,0x0
    6a03:	e8 3f 4e 00 00       	call   b847 <load_fn_mem_map>
    6a08:	48 8d 35 f4 02 00 00 	lea    rsi,[rip+0x2f4]        # 6d03 <sigint_processor>
    6a0f:	bf 02 00 00 00       	mov    edi,0x2
    6a14:	e8 67 bd ff ff       	call   2780 <signal@plt>
    6a19:	48 8d 05 aa 4a 00 00 	lea    rax,[rip+0x4aaa]        # b4ca <crash_handler>
    6a20:	48 89 c6             	mov    rsi,rax
    6a23:	bf 0b 00 00 00       	mov    edi,0xb
    6a28:	e8 53 bd ff ff       	call   2780 <signal@plt>
    6a2d:	48 8d 05 96 4a 00 00 	lea    rax,[rip+0x4a96]        # b4ca <crash_handler>
    6a34:	48 89 c6             	mov    rsi,rax
    6a37:	bf 06 00 00 00       	mov    edi,0x6
    6a3c:	e8 3f bd ff ff       	call   2780 <signal@plt>
    6a41:	48 8d 05 82 4a 00 00 	lea    rax,[rip+0x4a82]        # b4ca <crash_handler>
    6a48:	48 89 c6             	mov    rsi,rax
    6a4b:	bf 0e 00 00 00       	mov    edi,0xe
    6a50:	e8 2b bd ff ff       	call   2780 <signal@plt>
    6a55:	b8 00 00 00 00       	mov    eax,0x0
    6a5a:	e8 d1 08 00 00       	call   7330 <print_logo>
    6a5f:	b8 00 00 00 00       	mov    eax,0x0
    6a64:	e8 15 07 00 00       	call   717e <print_cpu_info>
    6a69:	e8 b2 bb ff ff       	call   2620 <getpid@plt>
    6a6e:	89 c6                	mov    esi,eax
    6a70:	48 8d 3d a9 63 00 00 	lea    rdi,[rip+0x63a9]        # ce20 <_IO_stdin_used+0xe20>
    6a77:	b8 00 00 00 00       	mov    eax,0x0
    6a7c:	e8 5f ba ff ff       	call   24e0 <printf@plt>
    6a81:	c7 05 1d a8 00 00 01 	mov    DWORD PTR [rip+0xa81d],0x1        # 112a8 <is_running>
    6a88:	00 00 00 
    6a8b:	b8 00 00 00 00       	mov    eax,0x0
    6a90:	e8 3f 4f 00 00       	call   b9d4 <pps_monitor>
    6a95:	bf 00 00 00 00       	mov    edi,0x0
    6a9a:	e8 91 be ff ff       	call   2930 <time@plt>
    6a9f:	48 89 05 0a a8 00 00 	mov    QWORD PTR [rip+0xa80a],rax        # 112b0 <last_clean_time>
    6aa6:	83 bd cc f7 ff ff 01 	cmp    DWORD PTR [rbp-0x834],0x1
    6aad:	0f 85 e3 00 00 00    	jne    6b96 <main+0x1c3>
    6ab3:	b8 00 00 00 00       	mov    eax,0x0
    6ab8:	e8 97 06 00 00       	call   7154 <print_help_and_exit>
    6abd:	e9 d4 00 00 00       	jmp    6b96 <main+0x1c3>
    6ac2:	8b 85 dc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x824]
    6ac8:	83 e8 64             	sub    eax,0x64
    6acb:	83 f8 10             	cmp    eax,0x10
    6ace:	0f 87 9e 00 00 00    	ja     6b72 <main+0x19f>
    6ad4:	89 c0                	mov    eax,eax
    6ad6:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    6add:	00 
    6ade:	48 8d 05 d7 64 00 00 	lea    rax,[rip+0x64d7]        # cfbc <_IO_stdin_used+0xfbc>
    6ae5:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    6ae8:	48 98                	cdqe   
    6aea:	48 8d 15 cb 64 00 00 	lea    rdx,[rip+0x64cb]        # cfbc <_IO_stdin_used+0xfbc>
    6af1:	48 01 d0             	add    rax,rdx
    6af4:	3e ff e0             	notrack jmp rax
    6af7:	c6 05 22 34 10 00 01 	mov    BYTE PTR [rip+0x103422],0x1        # 109f20 <debug_mode>
    6afe:	e9 93 00 00 00       	jmp    6b96 <main+0x1c3>
    6b03:	b8 00 00 00 00       	mov    eax,0x0
    6b08:	e8 47 06 00 00       	call   7154 <print_help_and_exit>
    6b0d:	e9 84 00 00 00       	jmp    6b96 <main+0x1c3>
    6b12:	48 8b 05 47 a5 00 00 	mov    rax,QWORD PTR [rip+0xa547]        # 11060 <optarg@@GLIBC_2.2.5>
    6b19:	48 89 85 e0 f7 ff ff 	mov    QWORD PTR [rbp-0x820],rax
    6b20:	eb 74                	jmp    6b96 <main+0x1c3>
    6b22:	c6 05 3b 34 10 00 01 	mov    BYTE PTR [rip+0x10343b],0x1        # 109f64 <packet_print>
    6b29:	eb 6b                	jmp    6b96 <main+0x1c3>
    6b2b:	c6 05 33 34 10 00 01 	mov    BYTE PTR [rip+0x103433],0x1        # 109f65 <quiet_exit>
    6b32:	eb 62                	jmp    6b96 <main+0x1c3>
    6b34:	48 8d 3d fd 62 00 00 	lea    rdi,[rip+0x62fd]        # ce38 <_IO_stdin_used+0xe38>
    6b3b:	e8 00 ba ff ff       	call   2540 <puts@plt>
    6b40:	bf 0a 00 00 00       	mov    edi,0xa
    6b45:	e8 a6 bb ff ff       	call   26f0 <sleep@plt>
    6b4a:	c6 05 2f a5 00 00 01 	mov    BYTE PTR [rip+0xa52f],0x1        # 11080 <demo_mode>
    6b51:	eb 43                	jmp    6b96 <main+0x1c3>
    6b53:	48 8d 3d 1e 63 00 00 	lea    rdi,[rip+0x631e]        # ce78 <_IO_stdin_used+0xe78>
    6b5a:	e8 e1 b9 ff ff       	call   2540 <puts@plt>
    6b5f:	bf 0a 00 00 00       	mov    edi,0xa
    6b64:	e8 87 bb ff ff       	call   26f0 <sleep@plt>
    6b69:	c6 05 5c 34 10 00 01 	mov    BYTE PTR [rip+0x10345c],0x1        # 109fcc <in_test_mode>
    6b70:	eb 24                	jmp    6b96 <main+0x1c3>
    6b72:	8b 85 dc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x824]
    6b78:	89 c6                	mov    esi,eax
    6b7a:	48 8d 3d 2b 63 00 00 	lea    rdi,[rip+0x632b]        # ceac <_IO_stdin_used+0xeac>
    6b81:	b8 00 00 00 00       	mov    eax,0x0
    6b86:	e8 55 b9 ff ff       	call   24e0 <printf@plt>
    6b8b:	b8 00 00 00 00       	mov    eax,0x0
    6b90:	e8 bf 05 00 00       	call   7154 <print_help_and_exit>
    6b95:	90                   	nop
    6b96:	48 8b 8d c0 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x840]
    6b9d:	8b 85 cc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x834]
    6ba3:	48 8d 15 18 63 00 00 	lea    rdx,[rip+0x6318]        # cec2 <_IO_stdin_used+0xec2>
    6baa:	48 89 ce             	mov    rsi,rcx
    6bad:	89 c7                	mov    edi,eax
    6baf:	e8 dc b9 ff ff       	call   2590 <getopt@plt>
    6bb4:	89 85 dc f7 ff ff    	mov    DWORD PTR [rbp-0x824],eax
    6bba:	83 bd dc f7 ff ff ff 	cmp    DWORD PTR [rbp-0x824],0xffffffff
    6bc1:	0f 85 fb fe ff ff    	jne    6ac2 <main+0xef>
    6bc7:	48 8d 3d fd 62 00 00 	lea    rdi,[rip+0x62fd]        # cecb <_IO_stdin_used+0xecb>
    6bce:	e8 38 f6 ff ff       	call   620b <deny_conf_parser>
    6bd3:	48 8d 3d 06 63 00 00 	lea    rdi,[rip+0x6306]        # cee0 <_IO_stdin_used+0xee0>
    6bda:	e8 61 b9 ff ff       	call   2540 <puts@plt>
    6bdf:	48 8d 3d 35 63 00 00 	lea    rdi,[rip+0x6335]        # cf1b <_IO_stdin_used+0xf1b>
    6be6:	e8 f4 ed ff ff       	call   59df <rule_library_parser>
    6beb:	48 8d 3d 3f 63 00 00 	lea    rdi,[rip+0x633f]        # cf31 <_IO_stdin_used+0xf31>
    6bf2:	e8 49 b9 ff ff       	call   2540 <puts@plt>
    6bf7:	b8 00 00 00 00       	mov    eax,0x0
    6bfc:	e8 ef 3d 00 00       	call   a9f0 <rule_processor>
    6c01:	48 8b 85 e0 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x820]
    6c08:	48 89 c6             	mov    rsi,rax
    6c0b:	48 8d 3d 36 63 00 00 	lea    rdi,[rip+0x6336]        # cf48 <_IO_stdin_used+0xf48>
    6c12:	b8 00 00 00 00       	mov    eax,0x0
    6c17:	e8 c4 b8 ff ff       	call   24e0 <printf@plt>
    6c1c:	48 c7 85 f0 f7 ff ff 	mov    QWORD PTR [rbp-0x810],0x0
    6c23:	00 00 00 00 
    6c27:	48 c7 85 f8 f7 ff ff 	mov    QWORD PTR [rbp-0x808],0x0
    6c2e:	00 00 00 00 
    6c32:	48 8d 95 00 f8 ff ff 	lea    rdx,[rbp-0x800]
    6c39:	b8 00 00 00 00       	mov    eax,0x0
    6c3e:	b9 fd 00 00 00       	mov    ecx,0xfd
    6c43:	48 89 d7             	mov    rdi,rdx
    6c46:	f3 48 ab             	rep stos QWORD PTR es:[rdi],rax
    6c49:	48 89 fa             	mov    rdx,rdi
    6c4c:	89 02                	mov    DWORD PTR [rdx],eax
    6c4e:	48 83 c2 04          	add    rdx,0x4
    6c52:	66 89 02             	mov    WORD PTR [rdx],ax
    6c55:	48 83 c2 02          	add    rdx,0x2
    6c59:	48 8d 95 f0 f7 ff ff 	lea    rdx,[rbp-0x810]
    6c60:	48 8b 85 e0 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x820]
    6c67:	49 89 d0             	mov    r8,rdx
    6c6a:	b9 64 00 00 00       	mov    ecx,0x64
    6c6f:	ba 01 00 00 00       	mov    edx,0x1
    6c74:	be 00 04 00 00       	mov    esi,0x400
    6c79:	48 89 c7             	mov    rdi,rax
    6c7c:	e8 6f b9 ff ff       	call   25f0 <pcap_open_live@plt>
    6c81:	48 89 85 e8 f7 ff ff 	mov    QWORD PTR [rbp-0x818],rax
    6c88:	48 83 bd e8 f7 ff ff 	cmp    QWORD PTR [rbp-0x818],0x0
    6c8f:	00 
    6c90:	75 16                	jne    6ca8 <main+0x2d5>
    6c92:	48 8d 3d d0 62 00 00 	lea    rdi,[rip+0x62d0]        # cf69 <_IO_stdin_used+0xf69>
    6c99:	e8 32 bc ff ff       	call   28d0 <perror@plt>
    6c9e:	bf 01 00 00 00       	mov    edi,0x1
    6ca3:	e8 b8 b8 ff ff       	call   2560 <exit@plt>
    6ca8:	b8 00 00 00 00       	mov    eax,0x0
    6cad:	e8 72 45 00 00       	call   b224 <collect_scripts>
    6cb2:	b8 00 00 00 00       	mov    eax,0x0
    6cb7:	e8 8b 06 00 00       	call   7347 <start_nsh_server>
    6cbc:	48 8d 3d c5 62 00 00 	lea    rdi,[rip+0x62c5]        # cf88 <_IO_stdin_used+0xf88>
    6cc3:	e8 78 b8 ff ff       	call   2540 <puts@plt>
    6cc8:	48 8b 85 e8 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x818]
    6ccf:	b9 00 00 00 00       	mov    ecx,0x0
    6cd4:	48 8d 15 88 bd ff ff 	lea    rdx,[rip+0xffffffffffffbd88]        # 2a63 <pktmgr>
    6cdb:	be ff ff ff ff       	mov    esi,0xffffffff
    6ce0:	48 89 c7             	mov    rdi,rax
    6ce3:	e8 c8 bb ff ff       	call   28b0 <pcap_loop@plt>
    6ce8:	b8 00 00 00 00       	mov    eax,0x0
    6ced:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    6cf1:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    6cf8:	00 00 
    6cfa:	74 05                	je     6d01 <main+0x32e>
    6cfc:	e8 df ba ff ff       	call   27e0 <__stack_chk_fail@plt>
    6d01:	c9                   	leave  
    6d02:	c3                   	ret    

0000000000006d03 <sigint_processor>:
    6d03:	f3 0f 1e fa          	endbr64 
    6d07:	55                   	push   rbp
    6d08:	48 89 e5             	mov    rbp,rsp
    6d0b:	41 54                	push   r12
    6d0d:	53                   	push   rbx
    6d0e:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    6d15:	89 bd bc fe ff ff    	mov    DWORD PTR [rbp-0x144],edi
    6d1b:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6d22:	00 00 
    6d24:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    6d28:	31 c0                	xor    eax,eax
    6d2a:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    6d31:	00 00 00 
    6d34:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    6d3b:	48 89 c7             	mov    rdi,rax
    6d3e:	e8 9a c7 ff ff       	call   34dd <cb_get_formatted_time>
    6d43:	48 8d 95 e0 fe ff ff 	lea    rdx,[rbp-0x120]
    6d4a:	8b 85 bc fe ff ff    	mov    eax,DWORD PTR [rbp-0x144]
    6d50:	89 c6                	mov    esi,eax
    6d52:	48 8d 3d a7 62 00 00 	lea    rdi,[rip+0x62a7]        # d000 <_IO_stdin_used+0x1000>
    6d59:	b8 00 00 00 00       	mov    eax,0x0
    6d5e:	e8 7d b7 ff ff       	call   24e0 <printf@plt>
    6d63:	48 8d 3d bb 62 00 00 	lea    rdi,[rip+0x62bb]        # d025 <_IO_stdin_used+0x1025>
    6d6a:	e8 61 bb ff ff       	call   28d0 <perror@plt>
    6d6f:	0f b6 05 ef 31 10 00 	movzx  eax,BYTE PTR [rip+0x1031ef]        # 109f65 <quiet_exit>
    6d76:	83 f0 01             	xor    eax,0x1
    6d79:	84 c0                	test   al,al
    6d7b:	0f 84 2e 02 00 00    	je     6faf <sigint_processor+0x2ac>
    6d81:	8b 05 1d a5 00 00    	mov    eax,DWORD PTR [rip+0xa51d]        # 112a4 <total_pkt_captured>
    6d87:	89 c6                	mov    esi,eax
    6d89:	48 8d 3d 96 62 00 00 	lea    rdi,[rip+0x6296]        # d026 <_IO_stdin_used+0x1026>
    6d90:	b8 00 00 00 00       	mov    eax,0x0
    6d95:	e8 46 b7 ff ff       	call   24e0 <printf@plt>
    6d9a:	48 8d 3d 9f 62 00 00 	lea    rdi,[rip+0x629f]        # d040 <_IO_stdin_used+0x1040>
    6da1:	e8 9a b7 ff ff       	call   2540 <puts@plt>
    6da6:	c7 85 c4 fe ff ff 00 	mov    DWORD PTR [rbp-0x13c],0x0
    6dad:	00 00 00 
    6db0:	e9 e8 01 00 00       	jmp    6f9d <sigint_processor+0x29a>
    6db5:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6dbb:	48 63 d0             	movsxd rdx,eax
    6dbe:	48 89 d0             	mov    rax,rdx
    6dc1:	48 c1 e0 02          	shl    rax,0x2
    6dc5:	48 01 d0             	add    rax,rdx
    6dc8:	48 c1 e0 03          	shl    rax,0x3
    6dcc:	48 01 d0             	add    rax,rdx
    6dcf:	48 c1 e0 04          	shl    rax,0x4
    6dd3:	48 89 c2             	mov    rdx,rax
    6dd6:	48 8d 05 b3 c9 0e 00 	lea    rax,[rip+0xec9b3]        # f3790 <watchlist+0x270>
    6ddd:	44 8b 1c 02          	mov    r11d,DWORD PTR [rdx+rax*1]
    6de1:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6de7:	48 63 d0             	movsxd rdx,eax
    6dea:	48 89 d0             	mov    rax,rdx
    6ded:	48 c1 e0 02          	shl    rax,0x2
    6df1:	48 01 d0             	add    rax,rdx
    6df4:	48 c1 e0 03          	shl    rax,0x3
    6df8:	48 01 d0             	add    rax,rdx
    6dfb:	48 c1 e0 04          	shl    rax,0x4
    6dff:	48 89 c2             	mov    rdx,rax
    6e02:	48 8d 05 7b c9 0e 00 	lea    rax,[rip+0xec97b]        # f3784 <watchlist+0x264>
    6e09:	44 8b 14 02          	mov    r10d,DWORD PTR [rdx+rax*1]
    6e0d:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6e13:	48 63 d0             	movsxd rdx,eax
    6e16:	48 89 d0             	mov    rax,rdx
    6e19:	48 c1 e0 02          	shl    rax,0x2
    6e1d:	48 01 d0             	add    rax,rdx
    6e20:	48 c1 e0 03          	shl    rax,0x3
    6e24:	48 01 d0             	add    rax,rdx
    6e27:	48 c1 e0 04          	shl    rax,0x4
    6e2b:	48 89 c2             	mov    rdx,rax
    6e2e:	48 8d 05 57 c9 0e 00 	lea    rax,[rip+0xec957]        # f378c <watchlist+0x26c>
    6e35:	44 8b 0c 02          	mov    r9d,DWORD PTR [rdx+rax*1]
    6e39:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6e3f:	48 63 d0             	movsxd rdx,eax
    6e42:	48 89 d0             	mov    rax,rdx
    6e45:	48 c1 e0 02          	shl    rax,0x2
    6e49:	48 01 d0             	add    rax,rdx
    6e4c:	48 c1 e0 03          	shl    rax,0x3
    6e50:	48 01 d0             	add    rax,rdx
    6e53:	48 c1 e0 04          	shl    rax,0x4
    6e57:	48 89 c2             	mov    rdx,rax
    6e5a:	48 8d 05 1f c9 0e 00 	lea    rax,[rip+0xec91f]        # f3780 <watchlist+0x260>
    6e61:	44 8b 04 02          	mov    r8d,DWORD PTR [rdx+rax*1]
    6e65:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6e6b:	48 63 d0             	movsxd rdx,eax
    6e6e:	48 89 d0             	mov    rax,rdx
    6e71:	48 c1 e0 02          	shl    rax,0x2
    6e75:	48 01 d0             	add    rax,rdx
    6e78:	48 c1 e0 03          	shl    rax,0x3
    6e7c:	48 01 d0             	add    rax,rdx
    6e7f:	48 c1 e0 04          	shl    rax,0x4
    6e83:	48 89 c2             	mov    rdx,rax
    6e86:	48 8d 05 fb c8 0e 00 	lea    rax,[rip+0xec8fb]        # f3788 <watchlist+0x268>
    6e8d:	8b 3c 02             	mov    edi,DWORD PTR [rdx+rax*1]
    6e90:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6e96:	48 63 d0             	movsxd rdx,eax
    6e99:	48 89 d0             	mov    rax,rdx
    6e9c:	48 c1 e0 02          	shl    rax,0x2
    6ea0:	48 01 d0             	add    rax,rdx
    6ea3:	48 c1 e0 03          	shl    rax,0x3
    6ea7:	48 01 d0             	add    rax,rdx
    6eaa:	48 c1 e0 04          	shl    rax,0x4
    6eae:	48 89 c2             	mov    rdx,rax
    6eb1:	48 8d 05 c4 c8 0e 00 	lea    rax,[rip+0xec8c4]        # f377c <watchlist+0x25c>
    6eb8:	44 8b 24 02          	mov    r12d,DWORD PTR [rdx+rax*1]
    6ebc:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6ec2:	48 63 d0             	movsxd rdx,eax
    6ec5:	48 89 d0             	mov    rax,rdx
    6ec8:	48 c1 e0 02          	shl    rax,0x2
    6ecc:	48 01 d0             	add    rax,rdx
    6ecf:	48 c1 e0 03          	shl    rax,0x3
    6ed3:	48 01 d0             	add    rax,rdx
    6ed6:	48 c1 e0 04          	shl    rax,0x4
    6eda:	48 89 c2             	mov    rdx,rax
    6edd:	48 8d 05 b8 c8 0e 00 	lea    rax,[rip+0xec8b8]        # f379c <watchlist+0x27c>
    6ee4:	8b 1c 02             	mov    ebx,DWORD PTR [rdx+rax*1]
    6ee7:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6eed:	48 63 d0             	movsxd rdx,eax
    6ef0:	48 89 d0             	mov    rax,rdx
    6ef3:	48 c1 e0 02          	shl    rax,0x2
    6ef7:	48 01 d0             	add    rax,rdx
    6efa:	48 c1 e0 03          	shl    rax,0x3
    6efe:	48 01 d0             	add    rax,rdx
    6f01:	48 c1 e0 04          	shl    rax,0x4
    6f05:	48 89 c2             	mov    rdx,rax
    6f08:	48 8d 05 91 c8 0e 00 	lea    rax,[rip+0xec891]        # f37a0 <watchlist+0x280>
    6f0f:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
    6f12:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6f18:	48 63 d0             	movsxd rdx,eax
    6f1b:	48 89 d0             	mov    rax,rdx
    6f1e:	48 c1 e0 02          	shl    rax,0x2
    6f22:	48 01 d0             	add    rax,rdx
    6f25:	48 c1 e0 03          	shl    rax,0x3
    6f29:	48 01 d0             	add    rax,rdx
    6f2c:	48 c1 e0 04          	shl    rax,0x4
    6f30:	48 89 c2             	mov    rdx,rax
    6f33:	48 8d 05 3e c8 0e 00 	lea    rax,[rip+0xec83e]        # f3778 <watchlist+0x258>
    6f3a:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
    6f3d:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6f43:	48 63 d0             	movsxd rdx,eax
    6f46:	48 89 d0             	mov    rax,rdx
    6f49:	48 c1 e0 02          	shl    rax,0x2
    6f4d:	48 01 d0             	add    rax,rdx
    6f50:	48 c1 e0 03          	shl    rax,0x3
    6f54:	48 01 d0             	add    rax,rdx
    6f57:	48 c1 e0 04          	shl    rax,0x4
    6f5b:	48 8d 15 be c5 0e 00 	lea    rdx,[rip+0xec5be]        # f3520 <watchlist>
    6f62:	48 01 d0             	add    rax,rdx
    6f65:	48 83 c0 08          	add    rax,0x8
    6f69:	48 83 ec 08          	sub    rsp,0x8
    6f6d:	41 53                	push   r11
    6f6f:	41 52                	push   r10
    6f71:	41 51                	push   r9
    6f73:	41 50                	push   r8
    6f75:	57                   	push   rdi
    6f76:	45 89 e1             	mov    r9d,r12d
    6f79:	41 89 d8             	mov    r8d,ebx
    6f7c:	89 f2                	mov    edx,esi
    6f7e:	48 89 c6             	mov    rsi,rax
    6f81:	48 8d 3d f0 60 00 00 	lea    rdi,[rip+0x60f0]        # d078 <_IO_stdin_used+0x1078>
    6f88:	b8 00 00 00 00       	mov    eax,0x0
    6f8d:	e8 4e b5 ff ff       	call   24e0 <printf@plt>
    6f92:	48 83 c4 30          	add    rsp,0x30
    6f96:	83 85 c4 fe ff ff 01 	add    DWORD PTR [rbp-0x13c],0x1
    6f9d:	8b 05 75 a0 00 00    	mov    eax,DWORD PTR [rip+0xa075]        # 11018 <watchlist_num>
    6fa3:	39 85 c4 fe ff ff    	cmp    DWORD PTR [rbp-0x13c],eax
    6fa9:	0f 8e 06 fe ff ff    	jle    6db5 <sigint_processor+0xb2>
    6faf:	48 8d 35 62 61 00 00 	lea    rsi,[rip+0x6162]        # d118 <_IO_stdin_used+0x1118>
    6fb6:	48 8d 3d 5d 61 00 00 	lea    rdi,[rip+0x615d]        # d11a <_IO_stdin_used+0x111a>
    6fbd:	e8 0e b6 ff ff       	call   25d0 <fopen@plt>
    6fc2:	48 89 85 d8 fe ff ff 	mov    QWORD PTR [rbp-0x128],rax
    6fc9:	48 83 bd d8 fe ff ff 	cmp    QWORD PTR [rbp-0x128],0x0
    6fd0:	00 
    6fd1:	0f 85 99 00 00 00    	jne    7070 <sigint_processor+0x36d>
    6fd7:	48 8d 3d 5a 61 00 00 	lea    rdi,[rip+0x615a]        # d138 <_IO_stdin_used+0x1138>
    6fde:	e8 5d b5 ff ff       	call   2540 <puts@plt>
    6fe3:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    6fea:	48 89 c7             	mov    rdi,rax
    6fed:	e8 6e b8 ff ff       	call   2860 <fclose@plt>
    6ff2:	c7 85 c8 fe ff ff 00 	mov    DWORD PTR [rbp-0x138],0x0
    6ff9:	00 00 00 
    6ffc:	eb 5f                	jmp    705d <sigint_processor+0x35a>
    6ffe:	8b 85 c8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x138]
    7004:	48 63 d0             	movsxd rdx,eax
    7007:	48 89 d0             	mov    rax,rdx
    700a:	48 c1 e0 04          	shl    rax,0x4
    700e:	48 01 d0             	add    rax,rdx
    7011:	48 01 c0             	add    rax,rax
    7014:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7018:	48 8d 05 01 0d 10 00 	lea    rax,[rip+0x100d01]        # 107d20 <arpcache>
    701f:	48 01 c2             	add    rdx,rax
    7022:	8b 85 c8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x138]
    7028:	48 63 c8             	movsxd rcx,eax
    702b:	48 89 c8             	mov    rax,rcx
    702e:	48 c1 e0 04          	shl    rax,0x4
    7032:	48 01 c8             	add    rax,rcx
    7035:	48 01 c0             	add    rax,rax
    7038:	48 8d 0d e1 0c 10 00 	lea    rcx,[rip+0x100ce1]        # 107d20 <arpcache>
    703f:	48 01 c8             	add    rax,rcx
    7042:	48 89 c6             	mov    rsi,rax
    7045:	48 8d 3d 33 61 00 00 	lea    rdi,[rip+0x6133]        # d17f <_IO_stdin_used+0x117f>
    704c:	b8 00 00 00 00       	mov    eax,0x0
    7051:	e8 8a b4 ff ff       	call   24e0 <printf@plt>
    7056:	83 85 c8 fe ff ff 01 	add    DWORD PTR [rbp-0x138],0x1
    705d:	8b 05 b9 9f 00 00    	mov    eax,DWORD PTR [rip+0x9fb9]        # 1101c <arp_entries>
    7063:	39 85 c8 fe ff ff    	cmp    DWORD PTR [rbp-0x138],eax
    7069:	7e 93                	jle    6ffe <sigint_processor+0x2fb>
    706b:	e9 da 00 00 00       	jmp    714a <sigint_processor+0x447>
    7070:	c7 85 cc fe ff ff 00 	mov    DWORD PTR [rbp-0x134],0x0
    7077:	00 00 00 
    707a:	eb 67                	jmp    70e3 <sigint_processor+0x3e0>
    707c:	8b 85 cc fe ff ff    	mov    eax,DWORD PTR [rbp-0x134]
    7082:	48 63 d0             	movsxd rdx,eax
    7085:	48 89 d0             	mov    rax,rdx
    7088:	48 c1 e0 04          	shl    rax,0x4
    708c:	48 01 d0             	add    rax,rdx
    708f:	48 01 c0             	add    rax,rax
    7092:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7096:	48 8d 05 83 0c 10 00 	lea    rax,[rip+0x100c83]        # 107d20 <arpcache>
    709d:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    70a1:	8b 85 cc fe ff ff    	mov    eax,DWORD PTR [rbp-0x134]
    70a7:	48 63 d0             	movsxd rdx,eax
    70aa:	48 89 d0             	mov    rax,rdx
    70ad:	48 c1 e0 04          	shl    rax,0x4
    70b1:	48 01 d0             	add    rax,rdx
    70b4:	48 01 c0             	add    rax,rax
    70b7:	48 8d 15 62 0c 10 00 	lea    rdx,[rip+0x100c62]        # 107d20 <arpcache>
    70be:	48 01 c2             	add    rdx,rax
    70c1:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    70c8:	48 8d 35 ba 60 00 00 	lea    rsi,[rip+0x60ba]        # d189 <_IO_stdin_used+0x1189>
    70cf:	48 89 c7             	mov    rdi,rax
    70d2:	b8 00 00 00 00       	mov    eax,0x0
    70d7:	e8 04 b8 ff ff       	call   28e0 <fprintf@plt>
    70dc:	83 85 cc fe ff ff 01 	add    DWORD PTR [rbp-0x134],0x1
    70e3:	8b 05 33 9f 00 00    	mov    eax,DWORD PTR [rip+0x9f33]        # 1101c <arp_entries>
    70e9:	39 85 cc fe ff ff    	cmp    DWORD PTR [rbp-0x134],eax
    70ef:	7e 8b                	jle    707c <sigint_processor+0x379>
    70f1:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    70f8:	48 89 c7             	mov    rdi,rax
    70fb:	e8 60 b7 ff ff       	call   2860 <fclose@plt>
    7100:	c7 85 d0 fe ff ff 00 	mov    DWORD PTR [rbp-0x130],0x0
    7107:	00 00 00 
    710a:	eb 2f                	jmp    713b <sigint_processor+0x438>
    710c:	8b 85 d0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x130]
    7112:	48 98                	cdqe   
    7114:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    711b:	00 
    711c:	48 8d 05 7d 9f 00 00 	lea    rax,[rip+0x9f7d]        # 110a0 <threads>
    7123:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    7127:	be 00 00 00 00       	mov    esi,0x0
    712c:	48 89 c7             	mov    rdi,rax
    712f:	e8 9c b3 ff ff       	call   24d0 <pthread_join@plt>
    7134:	83 85 d0 fe ff ff 01 	add    DWORD PTR [rbp-0x130],0x1
    713b:	8b 05 5f a1 00 00    	mov    eax,DWORD PTR [rip+0xa15f]        # 112a0 <thread_count>
    7141:	39 85 d0 fe ff ff    	cmp    DWORD PTR [rbp-0x130],eax
    7147:	7c c3                	jl     710c <sigint_processor+0x409>
    7149:	90                   	nop
    714a:	bf 00 00 00 00       	mov    edi,0x0
    714f:	e8 0c b4 ff ff       	call   2560 <exit@plt>

0000000000007154 <print_help_and_exit>:
    7154:	f3 0f 1e fa          	endbr64 
    7158:	55                   	push   rbp
    7159:	48 89 e5             	mov    rbp,rsp
    715c:	48 8d 35 2d 60 00 00 	lea    rsi,[rip+0x602d]        # d190 <_IO_stdin_used+0x1190>
    7163:	48 8d 3d 2e 60 00 00 	lea    rdi,[rip+0x602e]        # d198 <_IO_stdin_used+0x1198>
    716a:	b8 00 00 00 00       	mov    eax,0x0
    716f:	e8 6c b3 ff ff       	call   24e0 <printf@plt>
    7174:	bf 00 00 00 00       	mov    edi,0x0
    7179:	e8 e2 b3 ff ff       	call   2560 <exit@plt>

000000000000717e <print_cpu_info>:
    717e:	f3 0f 1e fa          	endbr64 
    7182:	55                   	push   rbp
    7183:	48 89 e5             	mov    rbp,rsp
    7186:	53                   	push   rbx
    7187:	48 81 ec 48 02 00 00 	sub    rsp,0x248
    718e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7195:	00 00 
    7197:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    719b:	31 c0                	xor    eax,eax
    719d:	48 8d 35 7b 60 00 00 	lea    rsi,[rip+0x607b]        # d21f <_IO_stdin_used+0x121f>
    71a4:	48 8d 3d 77 60 00 00 	lea    rdi,[rip+0x6077]        # d222 <_IO_stdin_used+0x1222>
    71ab:	e8 20 b4 ff ff       	call   25d0 <fopen@plt>
    71b0:	48 89 85 d8 fd ff ff 	mov    QWORD PTR [rbp-0x228],rax
    71b7:	48 c7 85 c8 fd ff ff 	mov    QWORD PTR [rbp-0x238],0x0
    71be:	00 00 00 00 
    71c2:	48 c7 85 d0 fd ff ff 	mov    QWORD PTR [rbp-0x230],0x0
    71c9:	00 00 00 00 
    71cd:	c7 85 bc fd ff ff 00 	mov    DWORD PTR [rbp-0x244],0x0
    71d4:	00 00 00 
    71d7:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    71de:	ba 00 02 00 00       	mov    edx,0x200
    71e3:	be 00 00 00 00       	mov    esi,0x0
    71e8:	48 89 c7             	mov    rdi,rax
    71eb:	e8 00 b3 ff ff       	call   24f0 <memset@plt>
    71f0:	e9 b3 00 00 00       	jmp    72a8 <print_cpu_info+0x12a>
    71f5:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    71fc:	ba 0a 00 00 00       	mov    edx,0xa
    7201:	48 89 c6             	mov    rsi,rax
    7204:	48 8d 3d 25 60 00 00 	lea    rdi,[rip+0x6025]        # d230 <_IO_stdin_used+0x1230>
    720b:	e8 a0 b3 ff ff       	call   25b0 <strncmp@plt>
    7210:	85 c0                	test   eax,eax
    7212:	0f 85 90 00 00 00    	jne    72a8 <print_cpu_info+0x12a>
    7218:	c7 85 c0 fd ff ff 00 	mov    DWORD PTR [rbp-0x240],0x0
    721f:	00 00 00 
    7222:	c7 85 c4 fd ff ff 00 	mov    DWORD PTR [rbp-0x23c],0x0
    7229:	00 00 00 
    722c:	eb 2e                	jmp    725c <print_cpu_info+0xde>
    722e:	48 8b 95 c8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x238]
    7235:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    723b:	48 98                	cdqe   
    723d:	48 01 d0             	add    rax,rdx
    7240:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    7243:	3c 3a                	cmp    al,0x3a
    7245:	75 0e                	jne    7255 <print_cpu_info+0xd7>
    7247:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    724d:	89 85 c0 fd ff ff    	mov    DWORD PTR [rbp-0x240],eax
    7253:	eb 24                	jmp    7279 <print_cpu_info+0xfb>
    7255:	83 85 c4 fd ff ff 01 	add    DWORD PTR [rbp-0x23c],0x1
    725c:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    7262:	48 63 d8             	movsxd rbx,eax
    7265:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    726c:	48 89 c7             	mov    rdi,rax
    726f:	e8 fc b3 ff ff       	call   2670 <strlen@plt>
    7274:	48 39 c3             	cmp    rbx,rax
    7277:	72 b5                	jb     722e <print_cpu_info+0xb0>
    7279:	83 85 bc fd ff ff 01 	add    DWORD PTR [rbp-0x244],0x1
    7280:	48 8b 95 c8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x238]
    7287:	8b 85 c0 fd ff ff    	mov    eax,DWORD PTR [rbp-0x240]
    728d:	48 98                	cdqe   
    728f:	48 83 c0 02          	add    rax,0x2
    7293:	48 01 c2             	add    rdx,rax
    7296:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    729d:	48 89 d6             	mov    rsi,rdx
    72a0:	48 89 c7             	mov    rdi,rax
    72a3:	e8 78 b4 ff ff       	call   2720 <strcat@plt>
    72a8:	48 8b 95 d8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x228]
    72af:	48 8d b5 d0 fd ff ff 	lea    rsi,[rbp-0x230]
    72b6:	48 8d 85 c8 fd ff ff 	lea    rax,[rbp-0x238]
    72bd:	48 89 d1             	mov    rcx,rdx
    72c0:	ba 0a 00 00 00       	mov    edx,0xa
    72c5:	48 89 c7             	mov    rdi,rax
    72c8:	e8 33 b6 ff ff       	call   2900 <getdelim@plt>
    72cd:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
    72d1:	0f 85 1e ff ff ff    	jne    71f5 <print_cpu_info+0x77>
    72d7:	48 8d 95 e0 fd ff ff 	lea    rdx,[rbp-0x220]
    72de:	8b 85 bc fd ff ff    	mov    eax,DWORD PTR [rbp-0x244]
    72e4:	89 c6                	mov    esi,eax
    72e6:	48 8d 3d 4e 5f 00 00 	lea    rdi,[rip+0x5f4e]        # d23b <_IO_stdin_used+0x123b>
    72ed:	b8 00 00 00 00       	mov    eax,0x0
    72f2:	e8 e9 b1 ff ff       	call   24e0 <printf@plt>
    72f7:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    72fe:	48 89 c7             	mov    rdi,rax
    7301:	e8 5a b3 ff ff       	call   2660 <free@plt>
    7306:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    730d:	48 89 c7             	mov    rdi,rax
    7310:	e8 4b b5 ff ff       	call   2860 <fclose@plt>
    7315:	90                   	nop
    7316:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    731a:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    7321:	00 00 
    7323:	74 05                	je     732a <print_cpu_info+0x1ac>
    7325:	e8 b6 b4 ff ff       	call   27e0 <__stack_chk_fail@plt>
    732a:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    732e:	c9                   	leave  
    732f:	c3                   	ret    

0000000000007330 <print_logo>:
    7330:	f3 0f 1e fa          	endbr64 
    7334:	55                   	push   rbp
    7335:	48 89 e5             	mov    rbp,rsp
    7338:	48 8d 3d 11 5f 00 00 	lea    rdi,[rip+0x5f11]        # d250 <_IO_stdin_used+0x1250>
    733f:	e8 fc b1 ff ff       	call   2540 <puts@plt>
    7344:	90                   	nop
    7345:	5d                   	pop    rbp
    7346:	c3                   	ret    

0000000000007347 <start_nsh_server>:
    7347:	f3 0f 1e fa          	endbr64 
    734b:	55                   	push   rbp
    734c:	48 89 e5             	mov    rbp,rsp
    734f:	48 83 ec 10          	sub    rsp,0x10
    7353:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    735a:	00 00 
    735c:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7360:	31 c0                	xor    eax,eax
    7362:	48 8d 45 f0          	lea    rax,[rbp-0x10]
    7366:	b9 00 00 00 00       	mov    ecx,0x0
    736b:	48 8d 15 71 00 00 00 	lea    rdx,[rip+0x71]        # 73e3 <actually_start_nsh_server>
    7372:	be 00 00 00 00       	mov    esi,0x0
    7377:	48 89 c7             	mov    rdi,rax
    737a:	e8 c1 b2 ff ff       	call   2640 <pthread_create@plt>
    737f:	90                   	nop
    7380:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7384:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    738b:	00 00 
    738d:	74 05                	je     7394 <start_nsh_server+0x4d>
    738f:	e8 4c b4 ff ff       	call   27e0 <__stack_chk_fail@plt>
    7394:	c9                   	leave  
    7395:	c3                   	ret    

0000000000007396 <rnstrip>:
    7396:	f3 0f 1e fa          	endbr64 
    739a:	55                   	push   rbp
    739b:	48 89 e5             	mov    rbp,rsp
    739e:	48 83 ec 10          	sub    rsp,0x10
    73a2:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    73a6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    73aa:	48 8d 35 17 60 00 00 	lea    rsi,[rip+0x6017]        # d3c8 <_IO_stdin_used+0x13c8>
    73b1:	48 89 c7             	mov    rdi,rax
    73b4:	e8 d7 b4 ff ff       	call   2890 <strcspn@plt>
    73b9:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    73bd:	48 01 d0             	add    rax,rdx
    73c0:	c6 00 00             	mov    BYTE PTR [rax],0x0
    73c3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    73c7:	48 8d 35 fc 5f 00 00 	lea    rsi,[rip+0x5ffc]        # d3ca <_IO_stdin_used+0x13ca>
    73ce:	48 89 c7             	mov    rdi,rax
    73d1:	e8 ba b4 ff ff       	call   2890 <strcspn@plt>
    73d6:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    73da:	48 01 d0             	add    rax,rdx
    73dd:	c6 00 00             	mov    BYTE PTR [rax],0x0
    73e0:	90                   	nop
    73e1:	c9                   	leave  
    73e2:	c3                   	ret    

00000000000073e3 <actually_start_nsh_server>:
    73e3:	f3 0f 1e fa          	endbr64 
    73e7:	55                   	push   rbp
    73e8:	48 89 e5             	mov    rbp,rsp
    73eb:	48 83 ec 50          	sub    rsp,0x50
    73ef:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    73f6:	00 00 
    73f8:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    73fc:	31 c0                	xor    eax,eax
    73fe:	c7 45 bc 10 00 00 00 	mov    DWORD PTR [rbp-0x44],0x10
    7405:	ba 00 00 00 00       	mov    edx,0x0
    740a:	be 01 00 00 00       	mov    esi,0x1
    740f:	bf 02 00 00 00       	mov    edi,0x2
    7414:	e8 a7 b3 ff ff       	call   27c0 <socket@plt>
    7419:	89 45 c0             	mov    DWORD PTR [rbp-0x40],eax
    741c:	83 7d c0 00          	cmp    DWORD PTR [rbp-0x40],0x0
    7420:	75 16                	jne    7438 <actually_start_nsh_server+0x55>
    7422:	48 8d 3d a7 5f 00 00 	lea    rdi,[rip+0x5fa7]        # d3d0 <_IO_stdin_used+0x13d0>
    7429:	e8 12 b1 ff ff       	call   2540 <puts@plt>
    742e:	bf 01 00 00 00       	mov    edi,0x1
    7433:	e8 28 b1 ff ff       	call   2560 <exit@plt>
    7438:	48 8d 55 bc          	lea    rdx,[rbp-0x44]
    743c:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    743f:	41 b8 04 00 00 00    	mov    r8d,0x4
    7445:	48 89 d1             	mov    rcx,rdx
    7448:	ba 02 00 00 00       	mov    edx,0x2
    744d:	be 01 00 00 00       	mov    esi,0x1
    7452:	89 c7                	mov    edi,eax
    7454:	e8 a7 b1 ff ff       	call   2600 <setsockopt@plt>
    7459:	85 c0                	test   eax,eax
    745b:	74 16                	je     7473 <actually_start_nsh_server+0x90>
    745d:	48 8d 3d 94 5f 00 00 	lea    rdi,[rip+0x5f94]        # d3f8 <_IO_stdin_used+0x13f8>
    7464:	e8 d7 b0 ff ff       	call   2540 <puts@plt>
    7469:	bf 01 00 00 00       	mov    edi,0x1
    746e:	e8 ed b0 ff ff       	call   2560 <exit@plt>
    7473:	66 c7 45 e0 02 00    	mov    WORD PTR [rbp-0x20],0x2
    7479:	bf 00 00 00 00       	mov    edi,0x0
    747e:	e8 3d b4 ff ff       	call   28c0 <htonl@plt>
    7483:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
    7486:	bf 81 02 00 00       	mov    edi,0x281
    748b:	e8 c0 b0 ff ff       	call   2550 <htons@plt>
    7490:	66 89 45 e2          	mov    WORD PTR [rbp-0x1e],ax
    7494:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
    7498:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    749b:	ba 10 00 00 00       	mov    edx,0x10
    74a0:	48 89 ce             	mov    rsi,rcx
    74a3:	89 c7                	mov    edi,eax
    74a5:	e8 f6 b3 ff ff       	call   28a0 <bind@plt>
    74aa:	85 c0                	test   eax,eax
    74ac:	79 16                	jns    74c4 <actually_start_nsh_server+0xe1>
    74ae:	48 8d 3d 6b 5f 00 00 	lea    rdi,[rip+0x5f6b]        # d420 <_IO_stdin_used+0x1420>
    74b5:	e8 86 b0 ff ff       	call   2540 <puts@plt>
    74ba:	bf 01 00 00 00       	mov    edi,0x1
    74bf:	e8 9c b0 ff ff       	call   2560 <exit@plt>
    74c4:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    74c7:	be 05 00 00 00       	mov    esi,0x5
    74cc:	89 c7                	mov    edi,eax
    74ce:	e8 bd b1 ff ff       	call   2690 <listen@plt>
    74d3:	85 c0                	test   eax,eax
    74d5:	79 16                	jns    74ed <actually_start_nsh_server+0x10a>
    74d7:	48 8d 3d 7a 5f 00 00 	lea    rdi,[rip+0x5f7a]        # d458 <_IO_stdin_used+0x1458>
    74de:	e8 5d b0 ff ff       	call   2540 <puts@plt>
    74e3:	bf 01 00 00 00       	mov    edi,0x1
    74e8:	e8 73 b0 ff ff       	call   2560 <exit@plt>
    74ed:	48 8d 55 bc          	lea    rdx,[rbp-0x44]
    74f1:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
    74f5:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    74f8:	48 89 ce             	mov    rsi,rcx
    74fb:	89 c7                	mov    edi,eax
    74fd:	e8 0e b4 ff ff       	call   2910 <accept@plt>
    7502:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    7505:	83 7d c4 00          	cmp    DWORD PTR [rbp-0x3c],0x0
    7509:	79 20                	jns    752b <actually_start_nsh_server+0x148>
    750b:	b8 00 00 00 00       	mov    eax,0x0
    7510:	e8 f4 be ff ff       	call   3409 <get_formated_time>
    7515:	48 89 c6             	mov    rsi,rax
    7518:	48 8d 3d 69 5f 00 00 	lea    rdi,[rip+0x5f69]        # d488 <_IO_stdin_used+0x1488>
    751f:	b8 00 00 00 00       	mov    eax,0x0
    7524:	e8 b7 af ff ff       	call   24e0 <printf@plt>
    7529:	eb c2                	jmp    74ed <actually_start_nsh_server+0x10a>
    752b:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    752e:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
    7531:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    7535:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    7539:	48 8d 55 d0          	lea    rdx,[rbp-0x30]
    753d:	48 8d 45 c8          	lea    rax,[rbp-0x38]
    7541:	48 89 d1             	mov    rcx,rdx
    7544:	48 8d 15 0f 00 00 00 	lea    rdx,[rip+0xf]        # 755a <accept_cmd>
    754b:	be 00 00 00 00       	mov    esi,0x0
    7550:	48 89 c7             	mov    rdi,rax
    7553:	e8 e8 b0 ff ff       	call   2640 <pthread_create@plt>
    7558:	eb 93                	jmp    74ed <actually_start_nsh_server+0x10a>

000000000000755a <accept_cmd>:
    755a:	f3 0f 1e fa          	endbr64 
    755e:	55                   	push   rbp
    755f:	48 89 e5             	mov    rbp,rsp
    7562:	48 83 ec 30          	sub    rsp,0x30
    7566:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    756a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    756e:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    7572:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    7576:	8b 00                	mov    eax,DWORD PTR [rax]
    7578:	64 48 8b 14 25 00 00 	mov    rdx,QWORD PTR fs:0x0
    757f:	00 00 
    7581:	48 8d 8a 00 fc ff ff 	lea    rcx,[rdx-0x400]
    7588:	ba 00 04 00 00       	mov    edx,0x400
    758d:	48 89 ce             	mov    rsi,rcx
    7590:	89 c7                	mov    edi,eax
    7592:	e8 09 b0 ff ff       	call   25a0 <read@plt>
    7597:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
    759a:	83 7d ec 00          	cmp    DWORD PTR [rbp-0x14],0x0
    759e:	7e 45                	jle    75e5 <accept_cmd+0x8b>
    75a0:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    75a7:	00 00 
    75a9:	48 05 00 fc ff ff    	add    rax,0xfffffffffffffc00
    75af:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    75b3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    75b7:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    75ba:	0f b6 c0             	movzx  eax,al
    75bd:	89 c6                	mov    esi,eax
    75bf:	48 8d 3d e4 5e 00 00 	lea    rdi,[rip+0x5ee4]        # d4aa <_IO_stdin_used+0x14aa>
    75c6:	b8 00 00 00 00       	mov    eax,0x0
    75cb:	e8 10 af ff ff       	call   24e0 <printf@plt>
    75d0:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    75d4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    75d8:	48 89 d6             	mov    rsi,rdx
    75db:	48 89 c7             	mov    rdi,rax
    75de:	e8 98 0c 00 00       	call   827b <process_opcode>
    75e3:	eb 8d                	jmp    7572 <accept_cmd+0x18>
    75e5:	90                   	nop
    75e6:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    75ea:	8b 00                	mov    eax,DWORD PTR [rax]
    75ec:	89 c7                	mov    edi,eax
    75ee:	e8 2d af ff ff       	call   2520 <close@plt>
    75f3:	90                   	nop
    75f4:	c9                   	leave  
    75f5:	c3                   	ret    

00000000000075f6 <tcp_rst_portscan_detect>:
    75f6:	f3 0f 1e fa          	endbr64 
    75fa:	55                   	push   rbp
    75fb:	48 89 e5             	mov    rbp,rsp
    75fe:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    7605:	48 89 bd c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rdi
    760c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7613:	00 00 
    7615:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7619:	31 c0                	xor    eax,eax
    761b:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    7622:	00 00 00 
    7625:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    762c:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    7632:	83 f8 1e             	cmp    eax,0x1e
    7635:	74 0a                	je     7641 <tcp_rst_portscan_detect+0x4b>
    7637:	b8 00 00 00 00       	mov    eax,0x0
    763c:	e9 8d 01 00 00       	jmp    77ce <tcp_rst_portscan_detect+0x1d8>
    7641:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7648:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    764e:	83 e8 01             	sub    eax,0x1
    7651:	89 85 d8 fe ff ff    	mov    DWORD PTR [rbp-0x128],eax
    7657:	eb 6c                	jmp    76c5 <tcp_rst_portscan_detect+0xcf>
    7659:	8b 85 d8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x128]
    765f:	89 85 e4 fe ff ff    	mov    DWORD PTR [rbp-0x11c],eax
    7665:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    766c:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    7672:	48 63 d2             	movsxd rdx,edx
    7675:	48 83 c2 28          	add    rdx,0x28
    7679:	48 8b 44 d0 10       	mov    rax,QWORD PTR [rax+rdx*8+0x10]
    767e:	89 c1                	mov    ecx,eax
    7680:	83 ad d8 fe ff ff 01 	sub    DWORD PTR [rbp-0x128],0x1
    7687:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    768e:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    7694:	48 63 d2             	movsxd rdx,edx
    7697:	48 83 c2 28          	add    rdx,0x28
    769b:	48 8b 44 d0 10       	mov    rax,QWORD PTR [rax+rdx*8+0x10]
    76a0:	29 c1                	sub    ecx,eax
    76a2:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
    76a8:	8d 50 01             	lea    edx,[rax+0x1]
    76ab:	89 95 d4 fe ff ff    	mov    DWORD PTR [rbp-0x12c],edx
    76b1:	89 ca                	mov    edx,ecx
    76b3:	48 98                	cdqe   
    76b5:	89 94 85 f0 fe ff ff 	mov    DWORD PTR [rbp+rax*4-0x110],edx
    76bc:	83 bd e4 fe ff ff 01 	cmp    DWORD PTR [rbp-0x11c],0x1
    76c3:	74 0b                	je     76d0 <tcp_rst_portscan_detect+0xda>
    76c5:	83 bd d8 fe ff ff 00 	cmp    DWORD PTR [rbp-0x128],0x0
    76cc:	75 8b                	jne    7659 <tcp_rst_portscan_detect+0x63>
    76ce:	eb 01                	jmp    76d1 <tcp_rst_portscan_detect+0xdb>
    76d0:	90                   	nop
    76d1:	c7 85 dc fe ff ff 00 	mov    DWORD PTR [rbp-0x124],0x0
    76d8:	00 00 00 
    76db:	c7 85 e0 fe ff ff 00 	mov    DWORD PTR [rbp-0x120],0x0
    76e2:	00 00 00 
    76e5:	eb 24                	jmp    770b <tcp_rst_portscan_detect+0x115>
    76e7:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    76ed:	48 98                	cdqe   
    76ef:	8b 84 85 f0 fe ff ff 	mov    eax,DWORD PTR [rbp+rax*4-0x110]
    76f6:	3d b3 b7 b4 00       	cmp    eax,0xb4b7b3
    76fb:	7f 07                	jg     7704 <tcp_rst_portscan_detect+0x10e>
    76fd:	83 85 dc fe ff ff 01 	add    DWORD PTR [rbp-0x124],0x1
    7704:	83 85 e0 fe ff ff 01 	add    DWORD PTR [rbp-0x120],0x1
    770b:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    7711:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    7717:	7c ce                	jl     76e7 <tcp_rst_portscan_detect+0xf1>
    7719:	8b 85 dc fe ff ff    	mov    eax,DWORD PTR [rbp-0x124]
    771f:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    7725:	0f 85 9e 00 00 00    	jne    77c9 <tcp_rst_portscan_detect+0x1d3>
    772b:	48 8b 05 fe 98 00 00 	mov    rax,QWORD PTR [rip+0x98fe]        # 11030 <def_log_file>
    7732:	48 8d 35 7f 5d 00 00 	lea    rsi,[rip+0x5d7f]        # d4b8 <_IO_stdin_used+0x14b8>
    7739:	48 89 c7             	mov    rdi,rax
    773c:	e8 8f ae ff ff       	call   25d0 <fopen@plt>
    7741:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
    7748:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    774f:	48 83 c0 08          	add    rax,0x8
    7753:	48 89 c6             	mov    rsi,rax
    7756:	48 8d 3d 63 5d 00 00 	lea    rdi,[rip+0x5d63]        # d4c0 <_IO_stdin_used+0x14c0>
    775d:	b8 00 00 00 00       	mov    eax,0x0
    7762:	e8 79 ad ff ff       	call   24e0 <printf@plt>
    7767:	b8 00 00 00 00       	mov    eax,0x0
    776c:	e8 98 bc ff ff       	call   3409 <get_formated_time>
    7771:	48 89 c1             	mov    rcx,rax
    7774:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    777b:	48 8d 50 08          	lea    rdx,[rax+0x8]
    777f:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    7786:	48 8d 35 63 5d 00 00 	lea    rsi,[rip+0x5d63]        # d4f0 <_IO_stdin_used+0x14f0>
    778d:	48 89 c7             	mov    rdi,rax
    7790:	b8 00 00 00 00       	mov    eax,0x0
    7795:	e8 16 af ff ff       	call   26b0 <sprintf@plt>
    779a:	48 8b 95 e8 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x118]
    77a1:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    77a8:	48 89 d6             	mov    rsi,rdx
    77ab:	48 89 c7             	mov    rdi,rax
    77ae:	e8 7d af ff ff       	call   2730 <fputs@plt>
    77b3:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    77ba:	48 89 c7             	mov    rdi,rax
    77bd:	e8 9e b0 ff ff       	call   2860 <fclose@plt>
    77c2:	b8 01 00 00 00       	mov    eax,0x1
    77c7:	eb 05                	jmp    77ce <tcp_rst_portscan_detect+0x1d8>
    77c9:	b8 00 00 00 00       	mov    eax,0x0
    77ce:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    77d2:	64 48 2b 34 25 28 00 	sub    rsi,QWORD PTR fs:0x28
    77d9:	00 00 
    77db:	74 05                	je     77e2 <tcp_rst_portscan_detect+0x1ec>
    77dd:	e8 fe af ff ff       	call   27e0 <__stack_chk_fail@plt>
    77e2:	c9                   	leave  
    77e3:	c3                   	ret    

00000000000077e4 <fin_rst_portscan_detect>:
    77e4:	f3 0f 1e fa          	endbr64 
    77e8:	55                   	push   rbp
    77e9:	48 89 e5             	mov    rbp,rsp
    77ec:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    77f3:	48 89 bd c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rdi
    77fa:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7801:	00 00 
    7803:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7807:	31 c0                	xor    eax,eax
    7809:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    7810:	00 00 00 
    7813:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    781a:	8b 40 50             	mov    eax,DWORD PTR [rax+0x50]
    781d:	83 f8 1e             	cmp    eax,0x1e
    7820:	74 0a                	je     782c <fin_rst_portscan_detect+0x48>
    7822:	b8 00 00 00 00       	mov    eax,0x0
    7827:	e9 8a 01 00 00       	jmp    79b6 <fin_rst_portscan_detect+0x1d2>
    782c:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7833:	8b 40 50             	mov    eax,DWORD PTR [rax+0x50]
    7836:	83 e8 01             	sub    eax,0x1
    7839:	89 85 d8 fe ff ff    	mov    DWORD PTR [rbp-0x128],eax
    783f:	eb 6c                	jmp    78ad <fin_rst_portscan_detect+0xc9>
    7841:	8b 85 d8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x128]
    7847:	89 85 e4 fe ff ff    	mov    DWORD PTR [rbp-0x11c],eax
    784d:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7854:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    785a:	48 63 d2             	movsxd rdx,edx
    785d:	48 83 c2 0a          	add    rdx,0xa
    7861:	48 8b 44 d0 08       	mov    rax,QWORD PTR [rax+rdx*8+0x8]
    7866:	89 c1                	mov    ecx,eax
    7868:	83 ad d8 fe ff ff 01 	sub    DWORD PTR [rbp-0x128],0x1
    786f:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7876:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    787c:	48 63 d2             	movsxd rdx,edx
    787f:	48 83 c2 0a          	add    rdx,0xa
    7883:	48 8b 44 d0 08       	mov    rax,QWORD PTR [rax+rdx*8+0x8]
    7888:	29 c1                	sub    ecx,eax
    788a:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
    7890:	8d 50 01             	lea    edx,[rax+0x1]
    7893:	89 95 d4 fe ff ff    	mov    DWORD PTR [rbp-0x12c],edx
    7899:	89 ca                	mov    edx,ecx
    789b:	48 98                	cdqe   
    789d:	89 94 85 f0 fe ff ff 	mov    DWORD PTR [rbp+rax*4-0x110],edx
    78a4:	83 bd e4 fe ff ff 01 	cmp    DWORD PTR [rbp-0x11c],0x1
    78ab:	74 0b                	je     78b8 <fin_rst_portscan_detect+0xd4>
    78ad:	83 bd d8 fe ff ff 00 	cmp    DWORD PTR [rbp-0x128],0x0
    78b4:	75 8b                	jne    7841 <fin_rst_portscan_detect+0x5d>
    78b6:	eb 01                	jmp    78b9 <fin_rst_portscan_detect+0xd5>
    78b8:	90                   	nop
    78b9:	c7 85 dc fe ff ff 00 	mov    DWORD PTR [rbp-0x124],0x0
    78c0:	00 00 00 
    78c3:	c7 85 e0 fe ff ff 00 	mov    DWORD PTR [rbp-0x120],0x0
    78ca:	00 00 00 
    78cd:	eb 24                	jmp    78f3 <fin_rst_portscan_detect+0x10f>
    78cf:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    78d5:	48 98                	cdqe   
    78d7:	8b 84 85 f0 fe ff ff 	mov    eax,DWORD PTR [rbp+rax*4-0x110]
    78de:	3d 73 7e e2 00       	cmp    eax,0xe27e73
    78e3:	7f 07                	jg     78ec <fin_rst_portscan_detect+0x108>
    78e5:	83 85 dc fe ff ff 01 	add    DWORD PTR [rbp-0x124],0x1
    78ec:	83 85 e0 fe ff ff 01 	add    DWORD PTR [rbp-0x120],0x1
    78f3:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    78f9:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    78ff:	7c ce                	jl     78cf <fin_rst_portscan_detect+0xeb>
    7901:	8b 85 dc fe ff ff    	mov    eax,DWORD PTR [rbp-0x124]
    7907:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    790d:	0f 85 9e 00 00 00    	jne    79b1 <fin_rst_portscan_detect+0x1cd>
    7913:	48 8b 05 16 97 00 00 	mov    rax,QWORD PTR [rip+0x9716]        # 11030 <def_log_file>
    791a:	48 8d 35 97 5b 00 00 	lea    rsi,[rip+0x5b97]        # d4b8 <_IO_stdin_used+0x14b8>
    7921:	48 89 c7             	mov    rdi,rax
    7924:	e8 a7 ac ff ff       	call   25d0 <fopen@plt>
    7929:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
    7930:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7937:	48 83 c0 08          	add    rax,0x8
    793b:	48 89 c6             	mov    rsi,rax
    793e:	48 8d 3d d3 5b 00 00 	lea    rdi,[rip+0x5bd3]        # d518 <_IO_stdin_used+0x1518>
    7945:	b8 00 00 00 00       	mov    eax,0x0
    794a:	e8 91 ab ff ff       	call   24e0 <printf@plt>
    794f:	b8 00 00 00 00       	mov    eax,0x0
    7954:	e8 b0 ba ff ff       	call   3409 <get_formated_time>
    7959:	48 89 c1             	mov    rcx,rax
    795c:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7963:	48 8d 50 08          	lea    rdx,[rax+0x8]
    7967:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    796e:	48 8d 35 d3 5b 00 00 	lea    rsi,[rip+0x5bd3]        # d548 <_IO_stdin_used+0x1548>
    7975:	48 89 c7             	mov    rdi,rax
    7978:	b8 00 00 00 00       	mov    eax,0x0
    797d:	e8 2e ad ff ff       	call   26b0 <sprintf@plt>
    7982:	48 8b 95 e8 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x118]
    7989:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    7990:	48 89 d6             	mov    rsi,rdx
    7993:	48 89 c7             	mov    rdi,rax
    7996:	e8 95 ad ff ff       	call   2730 <fputs@plt>
    799b:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    79a2:	48 89 c7             	mov    rdi,rax
    79a5:	e8 b6 ae ff ff       	call   2860 <fclose@plt>
    79aa:	b8 01 00 00 00       	mov    eax,0x1
    79af:	eb 05                	jmp    79b6 <fin_rst_portscan_detect+0x1d2>
    79b1:	b8 00 00 00 00       	mov    eax,0x0
    79b6:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    79ba:	64 48 2b 34 25 28 00 	sub    rsi,QWORD PTR fs:0x28
    79c1:	00 00 
    79c3:	74 05                	je     79ca <fin_rst_portscan_detect+0x1e6>
    79c5:	e8 16 ae ff ff       	call   27e0 <__stack_chk_fail@plt>
    79ca:	c9                   	leave  
    79cb:	c3                   	ret    

00000000000079cc <member_ready_for_scan>:
    79cc:	f3 0f 1e fa          	endbr64 
    79d0:	55                   	push   rbp
    79d1:	48 89 e5             	mov    rbp,rsp
    79d4:	48 83 ec 10          	sub    rsp,0x10
    79d8:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    79df:	eb 48                	jmp    7a29 <member_ready_for_scan+0x5d>
    79e1:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    79e4:	48 63 d0             	movsxd rdx,eax
    79e7:	48 89 d0             	mov    rax,rdx
    79ea:	48 c1 e0 02          	shl    rax,0x2
    79ee:	48 01 d0             	add    rax,rdx
    79f1:	48 c1 e0 03          	shl    rax,0x3
    79f5:	48 01 d0             	add    rax,rdx
    79f8:	48 c1 e0 04          	shl    rax,0x4
    79fc:	48 8d 15 1d bb 0e 00 	lea    rdx,[rip+0xebb1d]        # f3520 <watchlist>
    7a03:	48 01 d0             	add    rax,rdx
    7a06:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7a0a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7a0e:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    7a14:	83 f8 1d             	cmp    eax,0x1d
    7a17:	76 0c                	jbe    7a25 <member_ready_for_scan+0x59>
    7a19:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7a1d:	48 89 c7             	mov    rdi,rax
    7a20:	e8 d1 fb ff ff       	call   75f6 <tcp_rst_portscan_detect>
    7a25:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    7a29:	8b 05 e9 95 00 00    	mov    eax,DWORD PTR [rip+0x95e9]        # 11018 <watchlist_num>
    7a2f:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    7a32:	7e ad                	jle    79e1 <member_ready_for_scan+0x15>
    7a34:	90                   	nop
    7a35:	90                   	nop
    7a36:	c9                   	leave  
    7a37:	c3                   	ret    

0000000000007a38 <member_exists>:
    7a38:	f3 0f 1e fa          	endbr64 
    7a3c:	55                   	push   rbp
    7a3d:	48 89 e5             	mov    rbp,rsp
    7a40:	48 83 ec 20          	sub    rsp,0x20
    7a44:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7a48:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7a4f:	eb 47                	jmp    7a98 <member_exists+0x60>
    7a51:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7a54:	8d 50 01             	lea    edx,[rax+0x1]
    7a57:	89 55 fc             	mov    DWORD PTR [rbp-0x4],edx
    7a5a:	48 63 d0             	movsxd rdx,eax
    7a5d:	48 89 d0             	mov    rax,rdx
    7a60:	48 c1 e0 02          	shl    rax,0x2
    7a64:	48 01 d0             	add    rax,rdx
    7a67:	48 c1 e0 03          	shl    rax,0x3
    7a6b:	48 01 d0             	add    rax,rdx
    7a6e:	48 c1 e0 04          	shl    rax,0x4
    7a72:	48 8d 15 a7 ba 0e 00 	lea    rdx,[rip+0xebaa7]        # f3520 <watchlist>
    7a79:	48 01 d0             	add    rax,rdx
    7a7c:	48 8d 50 08          	lea    rdx,[rax+0x8]
    7a80:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7a84:	48 89 c6             	mov    rsi,rax
    7a87:	48 89 d7             	mov    rdi,rdx
    7a8a:	e8 61 ad ff ff       	call   27f0 <strcmp@plt>
    7a8f:	85 c0                	test   eax,eax
    7a91:	75 05                	jne    7a98 <member_exists+0x60>
    7a93:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7a96:	eb 10                	jmp    7aa8 <member_exists+0x70>
    7a98:	8b 05 7a 95 00 00    	mov    eax,DWORD PTR [rip+0x957a]        # 11018 <watchlist_num>
    7a9e:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7aa1:	7e ae                	jle    7a51 <member_exists+0x19>
    7aa3:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7aa8:	c9                   	leave  
    7aa9:	c3                   	ret    

0000000000007aaa <init_member>:
    7aaa:	f3 0f 1e fa          	endbr64 
    7aae:	55                   	push   rbp
    7aaf:	48 89 e5             	mov    rbp,rsp
    7ab2:	48 83 ec 20          	sub    rsp,0x20
    7ab6:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7aba:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7abe:	48 89 c7             	mov    rdi,rax
    7ac1:	e8 72 ff ff ff       	call   7a38 <member_exists>
    7ac6:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    7ac9:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    7acd:	74 42                	je     7b11 <init_member+0x67>
    7acf:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    7ad2:	48 63 d0             	movsxd rdx,eax
    7ad5:	48 89 d0             	mov    rax,rdx
    7ad8:	48 c1 e0 02          	shl    rax,0x2
    7adc:	48 01 d0             	add    rax,rdx
    7adf:	48 c1 e0 03          	shl    rax,0x3
    7ae3:	48 01 d0             	add    rax,rdx
    7ae6:	48 c1 e0 04          	shl    rax,0x4
    7aea:	48 8d 15 2f ba 0e 00 	lea    rdx,[rip+0xeba2f]        # f3520 <watchlist>
    7af1:	48 01 d0             	add    rax,rdx
    7af4:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7af8:	bf 00 00 00 00       	mov    edi,0x0
    7afd:	e8 2e ae ff ff       	call   2930 <time@plt>
    7b02:	48 89 c2             	mov    rdx,rax
    7b05:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7b09:	48 89 10             	mov    QWORD PTR [rax],rdx
    7b0c:	e9 a8 00 00 00       	jmp    7bb9 <init_member+0x10f>
    7b11:	48 8d 3d 55 5a 00 00 	lea    rdi,[rip+0x5a55]        # d56d <_IO_stdin_used+0x156d>
    7b18:	e8 1b ff ff ff       	call   7a38 <member_exists>
    7b1d:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    7b20:	83 7d f4 00          	cmp    DWORD PTR [rbp-0xc],0x0
    7b24:	74 2b                	je     7b51 <init_member+0xa7>
    7b26:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    7b29:	48 63 d0             	movsxd rdx,eax
    7b2c:	48 89 d0             	mov    rax,rdx
    7b2f:	48 c1 e0 02          	shl    rax,0x2
    7b33:	48 01 d0             	add    rax,rdx
    7b36:	48 c1 e0 03          	shl    rax,0x3
    7b3a:	48 01 d0             	add    rax,rdx
    7b3d:	48 c1 e0 04          	shl    rax,0x4
    7b41:	48 8d 15 d8 b9 0e 00 	lea    rdx,[rip+0xeb9d8]        # f3520 <watchlist>
    7b48:	48 01 d0             	add    rax,rdx
    7b4b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7b4f:	eb 3b                	jmp    7b8c <init_member+0xe2>
    7b51:	8b 05 c1 94 00 00    	mov    eax,DWORD PTR [rip+0x94c1]        # 11018 <watchlist_num>
    7b57:	83 c0 01             	add    eax,0x1
    7b5a:	89 05 b8 94 00 00    	mov    DWORD PTR [rip+0x94b8],eax        # 11018 <watchlist_num>
    7b60:	8b 05 b2 94 00 00    	mov    eax,DWORD PTR [rip+0x94b2]        # 11018 <watchlist_num>
    7b66:	48 63 d0             	movsxd rdx,eax
    7b69:	48 89 d0             	mov    rax,rdx
    7b6c:	48 c1 e0 02          	shl    rax,0x2
    7b70:	48 01 d0             	add    rax,rdx
    7b73:	48 c1 e0 03          	shl    rax,0x3
    7b77:	48 01 d0             	add    rax,rdx
    7b7a:	48 c1 e0 04          	shl    rax,0x4
    7b7e:	48 8d 15 9b b9 0e 00 	lea    rdx,[rip+0xeb99b]        # f3520 <watchlist>
    7b85:	48 01 d0             	add    rax,rdx
    7b88:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7b8c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7b90:	ba 08 00 00 00       	mov    edx,0x8
    7b95:	be 00 00 00 00       	mov    esi,0x0
    7b9a:	48 89 c7             	mov    rdi,rax
    7b9d:	e8 4e a9 ff ff       	call   24f0 <memset@plt>
    7ba2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7ba6:	48 8d 50 08          	lea    rdx,[rax+0x8]
    7baa:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7bae:	48 89 c6             	mov    rsi,rax
    7bb1:	48 89 d7             	mov    rdi,rdx
    7bb4:	e8 67 ac ff ff       	call   2820 <strcpy@plt>
    7bb9:	c9                   	leave  
    7bba:	c3                   	ret    

0000000000007bbb <ready_for_clean>:
    7bbb:	f3 0f 1e fa          	endbr64 
    7bbf:	55                   	push   rbp
    7bc0:	48 89 e5             	mov    rbp,rsp
    7bc3:	48 83 ec 10          	sub    rsp,0x10
    7bc7:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7bcb:	bf 00 00 00 00       	mov    edi,0x0
    7bd0:	e8 5b ad ff ff       	call   2930 <time@plt>
    7bd5:	48 89 c2             	mov    rdx,rax
    7bd8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7bdc:	48 8b 00             	mov    rax,QWORD PTR [rax]
    7bdf:	48 29 c2             	sub    rdx,rax
    7be2:	48 8b 05 cf 96 00 00 	mov    rax,QWORD PTR [rip+0x96cf]        # 112b8 <clean_delay>
    7be9:	48 39 c2             	cmp    rdx,rax
    7bec:	72 22                	jb     7c10 <ready_for_clean+0x55>
    7bee:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7bf2:	48 83 c0 08          	add    rax,0x8
    7bf6:	48 8d 35 78 59 00 00 	lea    rsi,[rip+0x5978]        # d575 <_IO_stdin_used+0x1575>
    7bfd:	48 89 c7             	mov    rdi,rax
    7c00:	e8 eb ab ff ff       	call   27f0 <strcmp@plt>
    7c05:	85 c0                	test   eax,eax
    7c07:	74 07                	je     7c10 <ready_for_clean+0x55>
    7c09:	b8 01 00 00 00       	mov    eax,0x1
    7c0e:	eb 05                	jmp    7c15 <ready_for_clean+0x5a>
    7c10:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7c15:	c9                   	leave  
    7c16:	c3                   	ret    

0000000000007c17 <clean>:
    7c17:	f3 0f 1e fa          	endbr64 
    7c1b:	55                   	push   rbp
    7c1c:	48 89 e5             	mov    rbp,rsp
    7c1f:	48 83 ec 10          	sub    rsp,0x10
    7c23:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7c27:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7c2b:	ba 08 00 00 00       	mov    edx,0x8
    7c30:	be 00 00 00 00       	mov    esi,0x0
    7c35:	48 89 c7             	mov    rdi,rax
    7c38:	e8 b3 a8 ff ff       	call   24f0 <memset@plt>
    7c3d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7c41:	48 83 c0 08          	add    rax,0x8
    7c45:	48 b9 30 2e 30 2e 30 	movabs rcx,0x312e302e302e30
    7c4c:	2e 31 00 
    7c4f:	48 89 08             	mov    QWORD PTR [rax],rcx
    7c52:	90                   	nop
    7c53:	c9                   	leave  
    7c54:	c3                   	ret    

0000000000007c55 <scan_for_clean>:
    7c55:	f3 0f 1e fa          	endbr64 
    7c59:	55                   	push   rbp
    7c5a:	48 89 e5             	mov    rbp,rsp
    7c5d:	48 83 ec 10          	sub    rsp,0x10
    7c61:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7c68:	eb 62                	jmp    7ccc <scan_for_clean+0x77>
    7c6a:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7c6d:	48 63 d0             	movsxd rdx,eax
    7c70:	48 89 d0             	mov    rax,rdx
    7c73:	48 c1 e0 02          	shl    rax,0x2
    7c77:	48 01 d0             	add    rax,rdx
    7c7a:	48 c1 e0 03          	shl    rax,0x3
    7c7e:	48 01 d0             	add    rax,rdx
    7c81:	48 c1 e0 04          	shl    rax,0x4
    7c85:	48 8d 15 94 b8 0e 00 	lea    rdx,[rip+0xeb894]        # f3520 <watchlist>
    7c8c:	48 01 d0             	add    rax,rdx
    7c8f:	48 89 c7             	mov    rdi,rax
    7c92:	e8 24 ff ff ff       	call   7bbb <ready_for_clean>
    7c97:	85 c0                	test   eax,eax
    7c99:	7e 2d                	jle    7cc8 <scan_for_clean+0x73>
    7c9b:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7c9e:	48 63 d0             	movsxd rdx,eax
    7ca1:	48 89 d0             	mov    rax,rdx
    7ca4:	48 c1 e0 02          	shl    rax,0x2
    7ca8:	48 01 d0             	add    rax,rdx
    7cab:	48 c1 e0 03          	shl    rax,0x3
    7caf:	48 01 d0             	add    rax,rdx
    7cb2:	48 c1 e0 04          	shl    rax,0x4
    7cb6:	48 8d 15 63 b8 0e 00 	lea    rdx,[rip+0xeb863]        # f3520 <watchlist>
    7cbd:	48 01 d0             	add    rax,rdx
    7cc0:	48 89 c7             	mov    rdi,rax
    7cc3:	e8 4f ff ff ff       	call   7c17 <clean>
    7cc8:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    7ccc:	8b 05 46 93 00 00    	mov    eax,DWORD PTR [rip+0x9346]        # 11018 <watchlist_num>
    7cd2:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7cd5:	7e 93                	jle    7c6a <scan_for_clean+0x15>
    7cd7:	90                   	nop
    7cd8:	90                   	nop
    7cd9:	c9                   	leave  
    7cda:	c3                   	ret    

0000000000007cdb <compare_entries>:
    7cdb:	f3 0f 1e fa          	endbr64 
    7cdf:	55                   	push   rbp
    7ce0:	48 89 e5             	mov    rbp,rsp
    7ce3:	48 83 ec 20          	sub    rsp,0x20
    7ce7:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7ceb:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7cef:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7cf6:	e9 ac 00 00 00       	jmp    7da7 <compare_entries+0xcc>
    7cfb:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7cfe:	48 63 d0             	movsxd rdx,eax
    7d01:	48 89 d0             	mov    rax,rdx
    7d04:	48 c1 e0 04          	shl    rax,0x4
    7d08:	48 01 d0             	add    rax,rdx
    7d0b:	48 01 c0             	add    rax,rax
    7d0e:	48 8d 15 0b 00 10 00 	lea    rdx,[rip+0x10000b]        # 107d20 <arpcache>
    7d15:	48 01 c2             	add    rdx,rax
    7d18:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7d1c:	48 89 c6             	mov    rsi,rax
    7d1f:	48 89 d7             	mov    rdi,rdx
    7d22:	e8 a3 01 00 00       	call   7eca <compare_ip_entry>
    7d27:	85 c0                	test   eax,eax
    7d29:	74 78                	je     7da3 <compare_entries+0xc8>
    7d2b:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7d2e:	48 63 d0             	movsxd rdx,eax
    7d31:	48 89 d0             	mov    rax,rdx
    7d34:	48 c1 e0 04          	shl    rax,0x4
    7d38:	48 01 d0             	add    rax,rdx
    7d3b:	48 01 c0             	add    rax,rax
    7d3e:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7d42:	48 8d 05 d7 ff 0f 00 	lea    rax,[rip+0xfffd7]        # 107d20 <arpcache>
    7d49:	48 01 c2             	add    rdx,rax
    7d4c:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7d50:	48 89 c6             	mov    rsi,rax
    7d53:	48 89 d7             	mov    rdi,rdx
    7d56:	e8 98 01 00 00       	call   7ef3 <compare_mac_entry>
    7d5b:	85 c0                	test   eax,eax
    7d5d:	75 44                	jne    7da3 <compare_entries+0xc8>
    7d5f:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7d62:	48 63 d0             	movsxd rdx,eax
    7d65:	48 89 d0             	mov    rax,rdx
    7d68:	48 c1 e0 04          	shl    rax,0x4
    7d6c:	48 01 d0             	add    rax,rdx
    7d6f:	48 01 c0             	add    rax,rax
    7d72:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7d76:	48 8d 05 a3 ff 0f 00 	lea    rax,[rip+0xfffa3]        # 107d20 <arpcache>
    7d7d:	48 8d 34 02          	lea    rsi,[rdx+rax*1]
    7d81:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    7d85:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7d89:	48 89 d1             	mov    rcx,rdx
    7d8c:	48 89 f2             	mov    rdx,rsi
    7d8f:	48 89 c6             	mov    rsi,rax
    7d92:	48 8d 3d e7 57 00 00 	lea    rdi,[rip+0x57e7]        # d580 <_IO_stdin_used+0x1580>
    7d99:	b8 00 00 00 00       	mov    eax,0x0
    7d9e:	e8 3d a7 ff ff       	call   24e0 <printf@plt>
    7da3:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    7da7:	8b 05 6f 92 00 00    	mov    eax,DWORD PTR [rip+0x926f]        # 1101c <arp_entries>
    7dad:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7db0:	0f 8e 45 ff ff ff    	jle    7cfb <compare_entries+0x20>
    7db6:	90                   	nop
    7db7:	90                   	nop
    7db8:	c9                   	leave  
    7db9:	c3                   	ret    

0000000000007dba <add_entry>:
    7dba:	f3 0f 1e fa          	endbr64 
    7dbe:	55                   	push   rbp
    7dbf:	48 89 e5             	mov    rbp,rsp
    7dc2:	48 83 ec 20          	sub    rsp,0x20
    7dc6:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7dca:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7dce:	8b 05 48 92 00 00    	mov    eax,DWORD PTR [rip+0x9248]        # 1101c <arp_entries>
    7dd4:	83 c0 01             	add    eax,0x1
    7dd7:	89 05 3f 92 00 00    	mov    DWORD PTR [rip+0x923f],eax        # 1101c <arp_entries>
    7ddd:	8b 05 39 92 00 00    	mov    eax,DWORD PTR [rip+0x9239]        # 1101c <arp_entries>
    7de3:	48 63 d0             	movsxd rdx,eax
    7de6:	48 89 d0             	mov    rax,rdx
    7de9:	48 c1 e0 04          	shl    rax,0x4
    7ded:	48 01 d0             	add    rax,rdx
    7df0:	48 01 c0             	add    rax,rax
    7df3:	48 8d 15 26 ff 0f 00 	lea    rdx,[rip+0xfff26]        # 107d20 <arpcache>
    7dfa:	48 01 d0             	add    rax,rdx
    7dfd:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7e01:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7e05:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    7e09:	48 89 d6             	mov    rsi,rdx
    7e0c:	48 89 c7             	mov    rdi,rax
    7e0f:	e8 0c aa ff ff       	call   2820 <strcpy@plt>
    7e14:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7e18:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7e1c:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7e20:	48 89 c6             	mov    rsi,rax
    7e23:	48 89 d7             	mov    rdi,rdx
    7e26:	e8 f5 a9 ff ff       	call   2820 <strcpy@plt>
    7e2b:	90                   	nop
    7e2c:	c9                   	leave  
    7e2d:	c3                   	ret    

0000000000007e2e <entry_exists>:
    7e2e:	f3 0f 1e fa          	endbr64 
    7e32:	55                   	push   rbp
    7e33:	48 89 e5             	mov    rbp,rsp
    7e36:	48 83 ec 20          	sub    rsp,0x20
    7e3a:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7e3e:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7e42:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7e49:	eb 6d                	jmp    7eb8 <entry_exists+0x8a>
    7e4b:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7e4e:	48 63 d0             	movsxd rdx,eax
    7e51:	48 89 d0             	mov    rax,rdx
    7e54:	48 c1 e0 04          	shl    rax,0x4
    7e58:	48 01 d0             	add    rax,rdx
    7e5b:	48 01 c0             	add    rax,rax
    7e5e:	48 8d 15 bb fe 0f 00 	lea    rdx,[rip+0xffebb]        # 107d20 <arpcache>
    7e65:	48 01 c2             	add    rdx,rax
    7e68:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7e6c:	48 89 c6             	mov    rsi,rax
    7e6f:	48 89 d7             	mov    rdi,rdx
    7e72:	e8 53 00 00 00       	call   7eca <compare_ip_entry>
    7e77:	85 c0                	test   eax,eax
    7e79:	75 39                	jne    7eb4 <entry_exists+0x86>
    7e7b:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7e7e:	48 63 d0             	movsxd rdx,eax
    7e81:	48 89 d0             	mov    rax,rdx
    7e84:	48 c1 e0 04          	shl    rax,0x4
    7e88:	48 01 d0             	add    rax,rdx
    7e8b:	48 01 c0             	add    rax,rax
    7e8e:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7e92:	48 8d 05 87 fe 0f 00 	lea    rax,[rip+0xffe87]        # 107d20 <arpcache>
    7e99:	48 01 c2             	add    rdx,rax
    7e9c:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7ea0:	48 89 c6             	mov    rsi,rax
    7ea3:	48 89 d7             	mov    rdi,rdx
    7ea6:	e8 48 00 00 00       	call   7ef3 <compare_mac_entry>
    7eab:	85 c0                	test   eax,eax
    7ead:	75 05                	jne    7eb4 <entry_exists+0x86>
    7eaf:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7eb2:	eb 14                	jmp    7ec8 <entry_exists+0x9a>
    7eb4:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    7eb8:	8b 05 5e 91 00 00    	mov    eax,DWORD PTR [rip+0x915e]        # 1101c <arp_entries>
    7ebe:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7ec1:	7e 88                	jle    7e4b <entry_exists+0x1d>
    7ec3:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7ec8:	c9                   	leave  
    7ec9:	c3                   	ret    

0000000000007eca <compare_ip_entry>:
    7eca:	f3 0f 1e fa          	endbr64 
    7ece:	55                   	push   rbp
    7ecf:	48 89 e5             	mov    rbp,rsp
    7ed2:	48 83 ec 10          	sub    rsp,0x10
    7ed6:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7eda:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7ede:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    7ee2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7ee6:	48 89 d6             	mov    rsi,rdx
    7ee9:	48 89 c7             	mov    rdi,rax
    7eec:	e8 ff a8 ff ff       	call   27f0 <strcmp@plt>
    7ef1:	c9                   	leave  
    7ef2:	c3                   	ret    

0000000000007ef3 <compare_mac_entry>:
    7ef3:	f3 0f 1e fa          	endbr64 
    7ef7:	55                   	push   rbp
    7ef8:	48 89 e5             	mov    rbp,rsp
    7efb:	48 83 ec 10          	sub    rsp,0x10
    7eff:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7f03:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7f07:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    7f0b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7f0f:	48 89 d6             	mov    rsi,rdx
    7f12:	48 89 c7             	mov    rdi,rax
    7f15:	e8 d6 a8 ff ff       	call   27f0 <strcmp@plt>
    7f1a:	c9                   	leave  
    7f1b:	c3                   	ret    

0000000000007f1c <load_csv_arp_cache>:
    7f1c:	f3 0f 1e fa          	endbr64 
    7f20:	55                   	push   rbp
    7f21:	48 89 e5             	mov    rbp,rsp
    7f24:	53                   	push   rbx
    7f25:	48 83 ec 68          	sub    rsp,0x68
    7f29:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7f30:	00 00 
    7f32:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    7f36:	31 c0                	xor    eax,eax
    7f38:	48 8d 35 77 56 00 00 	lea    rsi,[rip+0x5677]        # d5b6 <_IO_stdin_used+0x15b6>
    7f3f:	48 8d 3d 72 56 00 00 	lea    rdi,[rip+0x5672]        # d5b8 <_IO_stdin_used+0x15b8>
    7f46:	e8 85 a6 ff ff       	call   25d0 <fopen@plt>
    7f4b:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    7f4f:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
    7f54:	75 22                	jne    7f78 <load_csv_arp_cache+0x5c>
    7f56:	48 8d 3d 7b 56 00 00 	lea    rdi,[rip+0x567b]        # d5d8 <_IO_stdin_used+0x15d8>
    7f5d:	e8 de a5 ff ff       	call   2540 <puts@plt>
    7f62:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    7f66:	48 89 c7             	mov    rdi,rax
    7f69:	e8 f2 a8 ff ff       	call   2860 <fclose@plt>
    7f6e:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7f73:	e9 dd 00 00 00       	jmp    8055 <load_csv_arp_cache+0x139>
    7f78:	48 c7 45 98 00 00 00 	mov    QWORD PTR [rbp-0x68],0x0
    7f7f:	00 
    7f80:	48 c7 45 a0 00 00 00 	mov    QWORD PTR [rbp-0x60],0x0
    7f87:	00 
    7f88:	eb 7c                	jmp    8006 <load_csv_arp_cache+0xea>
    7f8a:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7f8e:	48 85 c0             	test   rax,rax
    7f91:	0f 84 97 00 00 00    	je     802e <load_csv_arp_cache+0x112>
    7f97:	48 8b 5d 98          	mov    rbx,QWORD PTR [rbp-0x68]
    7f9b:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7f9f:	48 8d 35 6b 56 00 00 	lea    rsi,[rip+0x566b]        # d611 <_IO_stdin_used+0x1611>
    7fa6:	48 89 c7             	mov    rdi,rax
    7fa9:	e8 e2 a8 ff ff       	call   2890 <strcspn@plt>
    7fae:	48 01 d8             	add    rax,rbx
    7fb1:	c6 00 00             	mov    BYTE PTR [rax],0x0
    7fb4:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7fb8:	48 8d 35 54 56 00 00 	lea    rsi,[rip+0x5654]        # d613 <_IO_stdin_used+0x1613>
    7fbf:	48 89 c7             	mov    rdi,rax
    7fc2:	e8 69 a8 ff ff       	call   2830 <strtok@plt>
    7fc7:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    7fcb:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    7fcf:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    7fd3:	48 89 d6             	mov    rsi,rdx
    7fd6:	48 89 c7             	mov    rdi,rax
    7fd9:	e8 42 a8 ff ff       	call   2820 <strcpy@plt>
    7fde:	48 8d 35 2e 56 00 00 	lea    rsi,[rip+0x562e]        # d613 <_IO_stdin_used+0x1613>
    7fe5:	bf 00 00 00 00       	mov    edi,0x0
    7fea:	e8 41 a8 ff ff       	call   2830 <strtok@plt>
    7fef:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    7ff3:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    7ff7:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    7ffb:	48 89 d6             	mov    rsi,rdx
    7ffe:	48 89 c7             	mov    rdi,rax
    8001:	e8 1a a8 ff ff       	call   2820 <strcpy@plt>
    8006:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    800a:	48 8d 4d a0          	lea    rcx,[rbp-0x60]
    800e:	48 8d 45 98          	lea    rax,[rbp-0x68]
    8012:	48 89 ce             	mov    rsi,rcx
    8015:	48 89 c7             	mov    rdi,rax
    8018:	e8 f3 a7 ff ff       	call   2810 <getline@plt>
    801d:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    8021:	48 83 7d b0 ff       	cmp    QWORD PTR [rbp-0x50],0xffffffffffffffff
    8026:	0f 85 5e ff ff ff    	jne    7f8a <load_csv_arp_cache+0x6e>
    802c:	eb 01                	jmp    802f <load_csv_arp_cache+0x113>
    802e:	90                   	nop
    802f:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    8033:	48 85 c0             	test   rax,rax
    8036:	74 0c                	je     8044 <load_csv_arp_cache+0x128>
    8038:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    803c:	48 89 c7             	mov    rdi,rax
    803f:	e8 1c a6 ff ff       	call   2660 <free@plt>
    8044:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    8048:	48 89 c7             	mov    rdi,rax
    804b:	e8 10 a8 ff ff       	call   2860 <fclose@plt>
    8050:	b8 01 00 00 00       	mov    eax,0x1
    8055:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    8059:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    8060:	00 00 
    8062:	74 05                	je     8069 <load_csv_arp_cache+0x14d>
    8064:	e8 77 a7 ff ff       	call   27e0 <__stack_chk_fail@plt>
    8069:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    806d:	c9                   	leave  
    806e:	c3                   	ret    

000000000000806f <tls_decode>:
    806f:	f3 0f 1e fa          	endbr64 
    8073:	55                   	push   rbp
    8074:	48 89 e5             	mov    rbp,rsp
    8077:	48 83 ec 30          	sub    rsp,0x30
    807b:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    807f:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    8083:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    8087:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    808b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    808f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8093:	0f b7 40 01          	movzx  eax,WORD PTR [rax+0x1]
    8097:	0f b7 c0             	movzx  eax,ax
    809a:	3d 03 03 00 00       	cmp    eax,0x303
    809f:	74 6a                	je     810b <tls_decode+0x9c>
    80a1:	3d 03 03 00 00       	cmp    eax,0x303
    80a6:	0f 8f c7 00 00 00    	jg     8173 <tls_decode+0x104>
    80ac:	3d 01 03 00 00       	cmp    eax,0x301
    80b1:	74 0c                	je     80bf <tls_decode+0x50>
    80b3:	3d 02 03 00 00       	cmp    eax,0x302
    80b8:	74 2b                	je     80e5 <tls_decode+0x76>
    80ba:	e9 b4 00 00 00       	jmp    8173 <tls_decode+0x104>
    80bf:	0f b6 05 9e 1e 10 00 	movzx  eax,BYTE PTR [rip+0x101e9e]        # 109f64 <packet_print>
    80c6:	84 c0                	test   al,al
    80c8:	74 11                	je     80db <tls_decode+0x6c>
    80ca:	48 8d 3d 47 55 00 00 	lea    rdi,[rip+0x5547]        # d618 <_IO_stdin_used+0x1618>
    80d1:	b8 00 00 00 00       	mov    eax,0x0
    80d6:	e8 05 a4 ff ff       	call   24e0 <printf@plt>
    80db:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    80df:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    80e3:	eb 4b                	jmp    8130 <tls_decode+0xc1>
    80e5:	0f b6 05 78 1e 10 00 	movzx  eax,BYTE PTR [rip+0x101e78]        # 109f64 <packet_print>
    80ec:	84 c0                	test   al,al
    80ee:	74 11                	je     8101 <tls_decode+0x92>
    80f0:	48 8d 3d 30 55 00 00 	lea    rdi,[rip+0x5530]        # d627 <_IO_stdin_used+0x1627>
    80f7:	b8 00 00 00 00       	mov    eax,0x0
    80fc:	e8 df a3 ff ff       	call   24e0 <printf@plt>
    8101:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8105:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    8109:	eb 25                	jmp    8130 <tls_decode+0xc1>
    810b:	0f b6 05 52 1e 10 00 	movzx  eax,BYTE PTR [rip+0x101e52]        # 109f64 <packet_print>
    8112:	84 c0                	test   al,al
    8114:	74 11                	je     8127 <tls_decode+0xb8>
    8116:	48 8d 3d 19 55 00 00 	lea    rdi,[rip+0x5519]        # d636 <_IO_stdin_used+0x1636>
    811d:	b8 00 00 00 00       	mov    eax,0x0
    8122:	e8 b9 a3 ff ff       	call   24e0 <printf@plt>
    8127:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    812b:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    812f:	90                   	nop
    8130:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8134:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    8137:	0f b6 c0             	movzx  eax,al
    813a:	83 f8 17             	cmp    eax,0x17
    813d:	74 37                	je     8176 <tls_decode+0x107>
    813f:	83 f8 17             	cmp    eax,0x17
    8142:	7f 35                	jg     8179 <tls_decode+0x10a>
    8144:	83 f8 16             	cmp    eax,0x16
    8147:	74 11                	je     815a <tls_decode+0xeb>
    8149:	83 f8 16             	cmp    eax,0x16
    814c:	7f 2b                	jg     8179 <tls_decode+0x10a>
    814e:	83 f8 14             	cmp    eax,0x14
    8151:	74 29                	je     817c <tls_decode+0x10d>
    8153:	83 f8 15             	cmp    eax,0x15
    8156:	74 27                	je     817f <tls_decode+0x110>
    8158:	eb 1f                	jmp    8179 <tls_decode+0x10a>
    815a:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    815e:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    8162:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8166:	48 89 ce             	mov    rsi,rcx
    8169:	48 89 c7             	mov    rdi,rax
    816c:	e8 11 00 00 00       	call   8182 <tlshandshake>
    8171:	eb 0d                	jmp    8180 <tls_decode+0x111>
    8173:	90                   	nop
    8174:	eb 0a                	jmp    8180 <tls_decode+0x111>
    8176:	90                   	nop
    8177:	eb 07                	jmp    8180 <tls_decode+0x111>
    8179:	90                   	nop
    817a:	eb 04                	jmp    8180 <tls_decode+0x111>
    817c:	90                   	nop
    817d:	eb 01                	jmp    8180 <tls_decode+0x111>
    817f:	90                   	nop
    8180:	c9                   	leave  
    8181:	c3                   	ret    

0000000000008182 <tlshandshake>:
    8182:	f3 0f 1e fa          	endbr64 
    8186:	55                   	push   rbp
    8187:	48 89 e5             	mov    rbp,rsp
    818a:	48 83 ec 30          	sub    rsp,0x30
    818e:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8192:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    8196:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    819a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    819e:	48 83 c0 08          	add    rax,0x8
    81a2:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    81a6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    81aa:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    81ad:	0f b6 c0             	movzx  eax,al
    81b0:	83 f8 0b             	cmp    eax,0xb
    81b3:	0f 87 bf 00 00 00    	ja     8278 <tlshandshake+0xf6>
    81b9:	89 c0                	mov    eax,eax
    81bb:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    81c2:	00 
    81c3:	48 8d 05 c2 54 00 00 	lea    rax,[rip+0x54c2]        # d68c <_IO_stdin_used+0x168c>
    81ca:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    81cd:	48 98                	cdqe   
    81cf:	48 8d 15 b6 54 00 00 	lea    rdx,[rip+0x54b6]        # d68c <_IO_stdin_used+0x168c>
    81d6:	48 01 d0             	add    rax,rdx
    81d9:	3e ff e0             	notrack jmp rax
    81dc:	48 8d 3d 62 54 00 00 	lea    rdi,[rip+0x5462]        # d645 <_IO_stdin_used+0x1645>
    81e3:	e8 58 a3 ff ff       	call   2540 <puts@plt>
    81e8:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    81ec:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    81f0:	e9 83 00 00 00       	jmp    8278 <tlshandshake+0xf6>
    81f5:	0f b6 05 68 1d 10 00 	movzx  eax,BYTE PTR [rip+0x101d68]        # 109f64 <packet_print>
    81fc:	84 c0                	test   al,al
    81fe:	74 0c                	je     820c <tlshandshake+0x8a>
    8200:	48 8d 3d 4b 54 00 00 	lea    rdi,[rip+0x544b]        # d652 <_IO_stdin_used+0x1652>
    8207:	e8 34 a3 ff ff       	call   2540 <puts@plt>
    820c:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8210:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    8214:	eb 62                	jmp    8278 <tlshandshake+0xf6>
    8216:	0f b6 05 47 1d 10 00 	movzx  eax,BYTE PTR [rip+0x101d47]        # 109f64 <packet_print>
    821d:	84 c0                	test   al,al
    821f:	74 0c                	je     822d <tlshandshake+0xab>
    8221:	48 8d 3d 37 54 00 00 	lea    rdi,[rip+0x5437]        # d65f <_IO_stdin_used+0x165f>
    8228:	e8 13 a3 ff ff       	call   2540 <puts@plt>
    822d:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8231:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    8235:	eb 41                	jmp    8278 <tlshandshake+0xf6>
    8237:	0f b6 05 26 1d 10 00 	movzx  eax,BYTE PTR [rip+0x101d26]        # 109f64 <packet_print>
    823e:	84 c0                	test   al,al
    8240:	74 0c                	je     824e <tlshandshake+0xcc>
    8242:	48 8d 3d 29 54 00 00 	lea    rdi,[rip+0x5429]        # d672 <_IO_stdin_used+0x1672>
    8249:	e8 f2 a2 ff ff       	call   2540 <puts@plt>
    824e:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8252:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    8256:	eb 20                	jmp    8278 <tlshandshake+0xf6>
    8258:	0f b6 05 05 1d 10 00 	movzx  eax,BYTE PTR [rip+0x101d05]        # 109f64 <packet_print>
    825f:	84 c0                	test   al,al
    8261:	74 0c                	je     826f <tlshandshake+0xed>
    8263:	48 8d 3d 14 54 00 00 	lea    rdi,[rip+0x5414]        # d67e <_IO_stdin_used+0x167e>
    826a:	e8 d1 a2 ff ff       	call   2540 <puts@plt>
    826f:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8273:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    8277:	90                   	nop
    8278:	90                   	nop
    8279:	c9                   	leave  
    827a:	c3                   	ret    

000000000000827b <process_opcode>:
    827b:	f3 0f 1e fa          	endbr64 
    827f:	55                   	push   rbp
    8280:	48 89 e5             	mov    rbp,rsp
    8283:	48 81 ec 30 04 00 00 	sub    rsp,0x430
    828a:	48 89 bd d8 fb ff ff 	mov    QWORD PTR [rbp-0x428],rdi
    8291:	48 89 b5 d0 fb ff ff 	mov    QWORD PTR [rbp-0x430],rsi
    8298:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    829f:	00 00 
    82a1:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    82a5:	31 c0                	xor    eax,eax
    82a7:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    82ae:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    82b1:	0f b6 c0             	movzx  eax,al
    82b4:	3d db 00 00 00       	cmp    eax,0xdb
    82b9:	75 4b                	jne    8306 <process_opcode+0x8b>
    82bb:	c6 85 e4 fb ff ff db 	mov    BYTE PTR [rbp-0x41c],0xdb
    82c2:	8b 85 e4 fb ff ff    	mov    eax,DWORD PTR [rbp-0x41c]
    82c8:	0f b6 c0             	movzx  eax,al
    82cb:	0d 00 00 00 01       	or     eax,0x1000000
    82d0:	89 85 e4 fb ff ff    	mov    DWORD PTR [rbp-0x41c],eax
    82d6:	48 8d 85 e4 fb ff ff 	lea    rax,[rbp-0x41c]
    82dd:	48 89 85 e8 fb ff ff 	mov    QWORD PTR [rbp-0x418],rax
    82e4:	48 8b 85 d0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x430]
    82eb:	8b 00                	mov    eax,DWORD PTR [rax]
    82ed:	48 8b b5 e8 fb ff ff 	mov    rsi,QWORD PTR [rbp-0x418]
    82f4:	b9 00 00 00 00       	mov    ecx,0x0
    82f9:	ba 04 00 00 00       	mov    edx,0x4
    82fe:	89 c7                	mov    edi,eax
    8300:	e8 fb a4 ff ff       	call   2800 <send@plt>
    8305:	90                   	nop
    8306:	90                   	nop
    8307:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    830b:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    8312:	00 00 
    8314:	74 05                	je     831b <process_opcode+0xa0>
    8316:	e8 c5 a4 ff ff       	call   27e0 <__stack_chk_fail@plt>
    831b:	c9                   	leave  
    831c:	c3                   	ret    

000000000000831d <callback>:
    831d:	f3 0f 1e fa          	endbr64 
    8321:	55                   	push   rbp
    8322:	48 89 e5             	mov    rbp,rsp
    8325:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    8329:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
    832c:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    8330:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    8334:	b8 00 00 00 00       	mov    eax,0x0
    8339:	5d                   	pop    rbp
    833a:	c3                   	ret    

000000000000833b <update_db>:
    833b:	f3 0f 1e fa          	endbr64 
    833f:	55                   	push   rbp
    8340:	48 89 e5             	mov    rbp,rsp
    8343:	48 81 ec 40 02 00 00 	sub    rsp,0x240
    834a:	48 89 bd c8 fd ff ff 	mov    QWORD PTR [rbp-0x238],rdi
    8351:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8358:	00 00 
    835a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    835e:	31 c0                	xor    eax,eax
    8360:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    8367:	48 89 85 e8 fd ff ff 	mov    QWORD PTR [rbp-0x218],rax
    836e:	48 8d 3d 4b 53 00 00 	lea    rdi,[rip+0x534b]        # d6c0 <_IO_stdin_used+0x16c0>
    8375:	e8 c6 a1 ff ff       	call   2540 <puts@plt>
    837a:	48 c7 85 d8 fd ff ff 	mov    QWORD PTR [rbp-0x228],0x0
    8381:	00 00 00 00 
    8385:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    838c:	48 89 c6             	mov    rsi,rax
    838f:	48 8d 3d aa 1b 10 00 	lea    rdi,[rip+0x101baa]        # 109f40 <sqlite_db_path>
    8396:	e8 85 a5 ff ff       	call   2920 <sqlite3_open@plt>
    839b:	89 85 d4 fd ff ff    	mov    DWORD PTR [rbp-0x22c],eax
    83a1:	83 bd d4 fd ff ff 00 	cmp    DWORD PTR [rbp-0x22c],0x0
    83a8:	74 28                	je     83d2 <update_db+0x97>
    83aa:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    83b1:	48 89 c7             	mov    rdi,rax
    83b4:	e8 97 a4 ff ff       	call   2850 <sqlite3_errmsg@plt>
    83b9:	48 89 c6             	mov    rsi,rax
    83bc:	48 8d 3d 09 53 00 00 	lea    rdi,[rip+0x5309]        # d6cc <_IO_stdin_used+0x16cc>
    83c3:	b8 00 00 00 00       	mov    eax,0x0
    83c8:	e8 13 a1 ff ff       	call   24e0 <printf@plt>
    83cd:	e9 a2 00 00 00       	jmp    8474 <update_db+0x139>
    83d2:	48 8b 85 e8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x218]
    83d9:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    83dc:	85 c0                	test   eax,eax
    83de:	75 2e                	jne    840e <update_db+0xd3>
    83e0:	48 8b 85 e8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x218]
    83e7:	48 8d 48 10          	lea    rcx,[rax+0x10]
    83eb:	48 8b 95 e8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x218]
    83f2:	48 8d 85 f0 fd ff ff 	lea    rax,[rbp-0x210]
    83f9:	48 8d 35 e0 52 00 00 	lea    rsi,[rip+0x52e0]        # d6e0 <_IO_stdin_used+0x16e0>
    8400:	48 89 c7             	mov    rdi,rax
    8403:	b8 00 00 00 00       	mov    eax,0x0
    8408:	e8 a3 a2 ff ff       	call   26b0 <sprintf@plt>
    840d:	90                   	nop
    840e:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    8415:	48 8d 95 d8 fd ff ff 	lea    rdx,[rbp-0x228]
    841c:	48 8d b5 f0 fd ff ff 	lea    rsi,[rbp-0x210]
    8423:	49 89 d0             	mov    r8,rdx
    8426:	b9 00 00 00 00       	mov    ecx,0x0
    842b:	ba 00 00 00 00       	mov    edx,0x0
    8430:	48 89 c7             	mov    rdi,rax
    8433:	e8 48 a1 ff ff       	call   2580 <sqlite3_exec@plt>
    8438:	89 85 d4 fd ff ff    	mov    DWORD PTR [rbp-0x22c],eax
    843e:	83 bd d4 fd ff ff 00 	cmp    DWORD PTR [rbp-0x22c],0x0
    8445:	74 2c                	je     8473 <update_db+0x138>
    8447:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    844e:	48 89 c6             	mov    rsi,rax
    8451:	48 8d 3d cd 52 00 00 	lea    rdi,[rip+0x52cd]        # d725 <_IO_stdin_used+0x1725>
    8458:	b8 00 00 00 00       	mov    eax,0x0
    845d:	e8 7e a0 ff ff       	call   24e0 <printf@plt>
    8462:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    8469:	48 89 c7             	mov    rdi,rax
    846c:	e8 9f a1 ff ff       	call   2610 <sqlite3_free@plt>
    8471:	eb 01                	jmp    8474 <update_db+0x139>
    8473:	90                   	nop
    8474:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    847b:	48 89 c7             	mov    rdi,rax
    847e:	e8 3d a0 ff ff       	call   24c0 <sqlite3_close@plt>
    8483:	b8 01 00 00 00       	mov    eax,0x1
    8488:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    848c:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    8493:	00 00 
    8495:	74 05                	je     849c <update_db+0x161>
    8497:	e8 44 a3 ff ff       	call   27e0 <__stack_chk_fail@plt>
    849c:	c9                   	leave  
    849d:	c3                   	ret    

000000000000849e <update_spi_db>:
    849e:	f3 0f 1e fa          	endbr64 
    84a2:	55                   	push   rbp
    84a3:	48 89 e5             	mov    rbp,rsp
    84a6:	41 57                	push   r15
    84a8:	41 56                	push   r14
    84aa:	41 55                	push   r13
    84ac:	41 54                	push   r12
    84ae:	53                   	push   rbx
    84af:	48 81 ec 48 04 00 00 	sub    rsp,0x448
    84b6:	48 89 bd 98 fb ff ff 	mov    QWORD PTR [rbp-0x468],rdi
    84bd:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    84c4:	00 00 
    84c6:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    84ca:	31 c0                	xor    eax,eax
    84cc:	48 8b 85 98 fb ff ff 	mov    rax,QWORD PTR [rbp-0x468]
    84d3:	48 89 85 b0 fb ff ff 	mov    QWORD PTR [rbp-0x450],rax
    84da:	48 8d 85 a0 fb ff ff 	lea    rax,[rbp-0x460]
    84e1:	48 89 c6             	mov    rsi,rax
    84e4:	48 8d 3d 58 52 00 00 	lea    rdi,[rip+0x5258]        # d743 <_IO_stdin_used+0x1743>
    84eb:	e8 30 a4 ff ff       	call   2920 <sqlite3_open@plt>
    84f0:	85 c0                	test   eax,eax
    84f2:	74 3c                	je     8530 <update_spi_db+0x92>
    84f4:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    84fb:	48 89 c7             	mov    rdi,rax
    84fe:	e8 4d a3 ff ff       	call   2850 <sqlite3_errmsg@plt>
    8503:	48 89 c6             	mov    rsi,rax
    8506:	48 8d 3d 4e 52 00 00 	lea    rdi,[rip+0x524e]        # d75b <_IO_stdin_used+0x175b>
    850d:	b8 00 00 00 00       	mov    eax,0x0
    8512:	e8 c9 9f ff ff       	call   24e0 <printf@plt>
    8517:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    851e:	48 89 c7             	mov    rdi,rax
    8521:	e8 9a 9f ff ff       	call   24c0 <sqlite3_close@plt>
    8526:	b8 00 00 00 00       	mov    eax,0x0
    852b:	e9 5c 01 00 00       	jmp    868c <update_spi_db+0x1ee>
    8530:	48 8d 05 39 52 00 00 	lea    rax,[rip+0x5239]        # d770 <_IO_stdin_used+0x1770>
    8537:	48 89 85 b8 fb ff ff 	mov    QWORD PTR [rbp-0x448],rax
    853e:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8545:	8b 90 80 00 00 00    	mov    edx,DWORD PTR [rax+0x80]
    854b:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8552:	44 8b 78 7c          	mov    r15d,DWORD PTR [rax+0x7c]
    8556:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    855d:	4c 8b b0 98 00 00 00 	mov    r14,QWORD PTR [rax+0x98]
    8564:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    856b:	4c 8b a8 90 00 00 00 	mov    r13,QWORD PTR [rax+0x90]
    8572:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8579:	44 8b a0 a8 00 00 00 	mov    r12d,DWORD PTR [rax+0xa8]
    8580:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8587:	8b 98 a4 00 00 00    	mov    ebx,DWORD PTR [rax+0xa4]
    858d:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8594:	48 8b 40 70          	mov    rax,QWORD PTR [rax+0x70]
    8598:	44 8b 18             	mov    r11d,DWORD PTR [rax]
    859b:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    85a2:	44 8b 50 60          	mov    r10d,DWORD PTR [rax+0x60]
    85a6:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    85ad:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
    85b1:	44 8b 08             	mov    r9d,DWORD PTR [rax]
    85b4:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    85bb:	44 8b 40 5c          	mov    r8d,DWORD PTR [rax+0x5c]
    85bf:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    85c6:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    85c9:	89 85 94 fb ff ff    	mov    DWORD PTR [rbp-0x46c],eax
    85cf:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    85d6:	8b 48 54             	mov    ecx,DWORD PTR [rax+0x54]
    85d9:	89 8d 90 fb ff ff    	mov    DWORD PTR [rbp-0x470],ecx
    85df:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    85e6:	48 8d 48 29          	lea    rcx,[rax+0x29]
    85ea:	48 8b bd b0 fb ff ff 	mov    rdi,QWORD PTR [rbp-0x450]
    85f1:	48 8b b5 b8 fb ff ff 	mov    rsi,QWORD PTR [rbp-0x448]
    85f8:	48 8d 85 c0 fb ff ff 	lea    rax,[rbp-0x440]
    85ff:	52                   	push   rdx
    8600:	41 57                	push   r15
    8602:	41 56                	push   r14
    8604:	41 55                	push   r13
    8606:	41 54                	push   r12
    8608:	53                   	push   rbx
    8609:	41 53                	push   r11
    860b:	41 52                	push   r10
    860d:	41 51                	push   r9
    860f:	41 50                	push   r8
    8611:	44 8b 8d 94 fb ff ff 	mov    r9d,DWORD PTR [rbp-0x46c]
    8618:	44 8b 85 90 fb ff ff 	mov    r8d,DWORD PTR [rbp-0x470]
    861f:	48 89 fa             	mov    rdx,rdi
    8622:	48 89 c7             	mov    rdi,rax
    8625:	b8 00 00 00 00       	mov    eax,0x0
    862a:	e8 81 a0 ff ff       	call   26b0 <sprintf@plt>
    862f:	48 83 c4 50          	add    rsp,0x50
    8633:	48 c7 85 a8 fb ff ff 	mov    QWORD PTR [rbp-0x458],0x0
    863a:	00 00 00 00 
    863e:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    8645:	48 8d 95 a8 fb ff ff 	lea    rdx,[rbp-0x458]
    864c:	48 8d b5 c0 fb ff ff 	lea    rsi,[rbp-0x440]
    8653:	49 89 d0             	mov    r8,rdx
    8656:	b9 00 00 00 00       	mov    ecx,0x0
    865b:	ba 00 00 00 00       	mov    edx,0x0
    8660:	48 89 c7             	mov    rdi,rax
    8663:	e8 18 9f ff ff       	call   2580 <sqlite3_exec@plt>
    8668:	85 c0                	test   eax,eax
    866a:	74 1b                	je     8687 <update_spi_db+0x1e9>
    866c:	48 8b 85 a8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x458]
    8673:	48 89 c6             	mov    rsi,rax
    8676:	48 8d 3d e0 51 00 00 	lea    rdi,[rip+0x51e0]        # d85d <_IO_stdin_used+0x185d>
    867d:	b8 00 00 00 00       	mov    eax,0x0
    8682:	e8 59 9e ff ff       	call   24e0 <printf@plt>
    8687:	b8 00 00 00 00       	mov    eax,0x0
    868c:	48 8b 5d c8          	mov    rbx,QWORD PTR [rbp-0x38]
    8690:	64 48 2b 1c 25 28 00 	sub    rbx,QWORD PTR fs:0x28
    8697:	00 00 
    8699:	74 05                	je     86a0 <update_spi_db+0x202>
    869b:	e8 40 a1 ff ff       	call   27e0 <__stack_chk_fail@plt>
    86a0:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    86a4:	5b                   	pop    rbx
    86a5:	41 5c                	pop    r12
    86a7:	41 5d                	pop    r13
    86a9:	41 5e                	pop    r14
    86ab:	41 5f                	pop    r15
    86ad:	5d                   	pop    rbp
    86ae:	c3                   	ret    

00000000000086af <http_disect>:
    86af:	f3 0f 1e fa          	endbr64 
    86b3:	55                   	push   rbp
    86b4:	48 89 e5             	mov    rbp,rsp
    86b7:	48 81 ec 30 04 00 00 	sub    rsp,0x430
    86be:	48 89 bd d8 fb ff ff 	mov    QWORD PTR [rbp-0x428],rdi
    86c5:	48 89 b5 d0 fb ff ff 	mov    QWORD PTR [rbp-0x430],rsi
    86cc:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    86d3:	00 00 
    86d5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    86d9:	31 c0                	xor    eax,eax
    86db:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    86e2:	be 0d 00 00 00       	mov    esi,0xd
    86e7:	48 89 c7             	mov    rdi,rax
    86ea:	e8 b5 ae ff ff       	call   35a4 <strloc>
    86ef:	89 85 ec fb ff ff    	mov    DWORD PTR [rbp-0x414],eax
    86f5:	48 8d 3d 7f 51 00 00 	lea    rdi,[rip+0x517f]        # d87b <_IO_stdin_used+0x187b>
    86fc:	e8 3f 9e ff ff       	call   2540 <puts@plt>
    8701:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    8708:	48 89 c7             	mov    rdi,rax
    870b:	e8 3b af ff ff       	call   364b <test_string_arr_print>
    8710:	83 f0 01             	xor    eax,0x1
    8713:	84 c0                	test   al,al
    8715:	75 33                	jne    874a <http_disect+0x9b>
    8717:	8b 85 ec fb ff ff    	mov    eax,DWORD PTR [rbp-0x414]
    871d:	48 63 d0             	movsxd rdx,eax
    8720:	48 8b 8d d8 fb ff ff 	mov    rcx,QWORD PTR [rbp-0x428]
    8727:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    872e:	48 89 ce             	mov    rsi,rcx
    8731:	48 89 c7             	mov    rdi,rax
    8734:	e8 37 a1 ff ff       	call   2870 <strncpy@plt>
    8739:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    8740:	48 89 c7             	mov    rdi,rax
    8743:	e8 f8 9d ff ff       	call   2540 <puts@plt>
    8748:	eb 01                	jmp    874b <http_disect+0x9c>
    874a:	90                   	nop
    874b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    874f:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    8756:	00 00 
    8758:	74 05                	je     875f <http_disect+0xb0>
    875a:	e8 81 a0 ff ff       	call   27e0 <__stack_chk_fail@plt>
    875f:	c9                   	leave  
    8760:	c3                   	ret    

0000000000008761 <dns_disect>:
    8761:	f3 0f 1e fa          	endbr64 
    8765:	55                   	push   rbp
    8766:	48 89 e5             	mov    rbp,rsp
    8769:	48 83 ec 30          	sub    rsp,0x30
    876d:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    8771:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    8775:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8779:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    877d:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8781:	48 83 c0 0c          	add    rax,0xc
    8785:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    8789:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    878d:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    8791:	66 85 c0             	test   ax,ax
    8794:	75 6d                	jne    8803 <dns_disect+0xa2>
    8796:	bf 00 04 00 00       	mov    edi,0x400
    879b:	e8 20 9e ff ff       	call   25c0 <malloc@plt>
    87a0:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    87a4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    87a8:	ba 08 00 00 00       	mov    edx,0x8
    87ad:	be 00 00 00 00       	mov    esi,0x0
    87b2:	48 89 c7             	mov    rdi,rax
    87b5:	e8 36 9d ff ff       	call   24f0 <memset@plt>
    87ba:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    87be:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    87c2:	48 89 d6             	mov    rsi,rdx
    87c5:	48 89 c7             	mov    rdi,rax
    87c8:	e8 39 00 00 00       	call   8806 <get_dns_name>
    87cd:	0f b6 05 90 17 10 00 	movzx  eax,BYTE PTR [rip+0x101790]        # 109f64 <packet_print>
    87d4:	84 c0                	test   al,al
    87d6:	74 18                	je     87f0 <dns_disect+0x8f>
    87d8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    87dc:	48 89 c6             	mov    rsi,rax
    87df:	48 8d 3d a7 50 00 00 	lea    rdi,[rip+0x50a7]        # d88d <_IO_stdin_used+0x188d>
    87e6:	b8 00 00 00 00       	mov    eax,0x0
    87eb:	e8 f0 9c ff ff       	call   24e0 <printf@plt>
    87f0:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    87f5:	74 0c                	je     8803 <dns_disect+0xa2>
    87f7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    87fb:	48 89 c7             	mov    rdi,rax
    87fe:	e8 5d 9e ff ff       	call   2660 <free@plt>
    8803:	90                   	nop
    8804:	c9                   	leave  
    8805:	c3                   	ret    

0000000000008806 <get_dns_name>:
    8806:	f3 0f 1e fa          	endbr64 
    880a:	55                   	push   rbp
    880b:	48 89 e5             	mov    rbp,rsp
    880e:	53                   	push   rbx
    880f:	48 83 ec 28          	sub    rsp,0x28
    8813:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    8817:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    881b:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    8822:	eb 57                	jmp    887b <get_dns_name+0x75>
    8824:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    8827:	48 63 d0             	movsxd rdx,eax
    882a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    882e:	48 01 d0             	add    rax,rdx
    8831:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    8834:	3c 20                	cmp    al,0x20
    8836:	7e 24                	jle    885c <get_dns_name+0x56>
    8838:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    883b:	48 63 d0             	movsxd rdx,eax
    883e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8842:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    8846:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    884a:	ba 01 00 00 00       	mov    edx,0x1
    884f:	48 89 ce             	mov    rsi,rcx
    8852:	48 89 c7             	mov    rdi,rax
    8855:	e8 d6 9c ff ff       	call   2530 <strncat@plt>
    885a:	eb 1b                	jmp    8877 <get_dns_name+0x71>
    885c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    8860:	48 89 c7             	mov    rdi,rax
    8863:	e8 08 9e ff ff       	call   2670 <strlen@plt>
    8868:	48 89 c2             	mov    rdx,rax
    886b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    886f:	48 01 d0             	add    rax,rdx
    8872:	66 c7 00 2e 00       	mov    WORD PTR [rax],0x2e
    8877:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    887b:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    887e:	48 63 d8             	movsxd rbx,eax
    8881:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8885:	48 89 c7             	mov    rdi,rax
    8888:	e8 e3 9d ff ff       	call   2670 <strlen@plt>
    888d:	48 39 c3             	cmp    rbx,rax
    8890:	72 92                	jb     8824 <get_dns_name+0x1e>
    8892:	90                   	nop
    8893:	90                   	nop
    8894:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    8898:	c9                   	leave  
    8899:	c3                   	ret    

000000000000889a <ftp_disect>:
    889a:	f3 0f 1e fa          	endbr64 
    889e:	55                   	push   rbp
    889f:	48 89 e5             	mov    rbp,rsp
    88a2:	48 83 ec 20          	sub    rsp,0x20
    88a6:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    88aa:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    88ae:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    88b2:	48 8d 35 df 4f 00 00 	lea    rsi,[rip+0x4fdf]        # d898 <_IO_stdin_used+0x1898>
    88b9:	48 89 c7             	mov    rdi,rax
    88bc:	e8 4f 9e ff ff       	call   2710 <strstr@plt>
    88c1:	48 85 c0             	test   rax,rax
    88c4:	75 1c                	jne    88e2 <ftp_disect+0x48>
    88c6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    88ca:	48 8d 35 d7 4f 00 00 	lea    rsi,[rip+0x4fd7]        # d8a8 <_IO_stdin_used+0x18a8>
    88d1:	48 89 c7             	mov    rdi,rax
    88d4:	e8 37 9e ff ff       	call   2710 <strstr@plt>
    88d9:	48 85 c0             	test   rax,rax
    88dc:	0f 84 8a 00 00 00    	je     896c <ftp_disect+0xd2>
    88e2:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    88e6:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    88ea:	48 89 c7             	mov    rdi,rax
    88ed:	e8 46 f1 ff ff       	call   7a38 <member_exists>
    88f2:	48 63 d0             	movsxd rdx,eax
    88f5:	48 89 d0             	mov    rax,rdx
    88f8:	48 c1 e0 02          	shl    rax,0x2
    88fc:	48 01 d0             	add    rax,rdx
    88ff:	48 c1 e0 03          	shl    rax,0x3
    8903:	48 01 d0             	add    rax,rdx
    8906:	48 c1 e0 04          	shl    rax,0x4
    890a:	48 8d 15 0f ac 0e 00 	lea    rdx,[rip+0xeac0f]        # f3520 <watchlist>
    8911:	48 01 d0             	add    rax,rdx
    8914:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8918:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    891c:	8b 80 40 02 00 00    	mov    eax,DWORD PTR [rax+0x240]
    8922:	8d 50 01             	lea    edx,[rax+0x1]
    8925:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8929:	89 90 40 02 00 00    	mov    DWORD PTR [rax+0x240],edx
    892f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8933:	8b 80 40 02 00 00    	mov    eax,DWORD PTR [rax+0x240]
    8939:	83 f8 04             	cmp    eax,0x4
    893c:	7e 2e                	jle    896c <ftp_disect+0xd2>
    893e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8942:	8b 88 40 02 00 00    	mov    ecx,DWORD PTR [rax+0x240]
    8948:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    894c:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    8950:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8954:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    8958:	48 89 c6             	mov    rsi,rax
    895b:	48 8d 3d 56 4f 00 00 	lea    rdi,[rip+0x4f56]        # d8b8 <_IO_stdin_used+0x18b8>
    8962:	b8 00 00 00 00       	mov    eax,0x0
    8967:	e8 74 9b ff ff       	call   24e0 <printf@plt>
    896c:	90                   	nop
    896d:	c9                   	leave  
    896e:	c3                   	ret    

000000000000896f <livedebug>:
    896f:	f3 0f 1e fa          	endbr64 
    8973:	55                   	push   rbp
    8974:	48 89 e5             	mov    rbp,rsp
    8977:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
    897e:	48 89 bd 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rdi
    8985:	48 89 b5 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rsi
    898c:	48 89 95 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdx
    8993:	48 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rcx
    899a:	4c 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r8
    89a1:	4c 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r9
    89a8:	84 c0                	test   al,al
    89aa:	74 20                	je     89cc <livedebug+0x5d>
    89ac:	0f 29 45 80          	movaps XMMWORD PTR [rbp-0x80],xmm0
    89b0:	0f 29 4d 90          	movaps XMMWORD PTR [rbp-0x70],xmm1
    89b4:	0f 29 55 a0          	movaps XMMWORD PTR [rbp-0x60],xmm2
    89b8:	0f 29 5d b0          	movaps XMMWORD PTR [rbp-0x50],xmm3
    89bc:	0f 29 65 c0          	movaps XMMWORD PTR [rbp-0x40],xmm4
    89c0:	0f 29 6d d0          	movaps XMMWORD PTR [rbp-0x30],xmm5
    89c4:	0f 29 75 e0          	movaps XMMWORD PTR [rbp-0x20],xmm6
    89c8:	0f 29 7d f0          	movaps XMMWORD PTR [rbp-0x10],xmm7
    89cc:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    89d3:	00 00 
    89d5:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    89dc:	31 c0                	xor    eax,eax
    89de:	0f b6 05 3b 15 10 00 	movzx  eax,BYTE PTR [rip+0x10153b]        # 109f20 <debug_mode>
    89e5:	84 c0                	test   al,al
    89e7:	74 4b                	je     8a34 <livedebug+0xc5>
    89e9:	c7 85 30 ff ff ff 08 	mov    DWORD PTR [rbp-0xd0],0x8
    89f0:	00 00 00 
    89f3:	c7 85 34 ff ff ff 30 	mov    DWORD PTR [rbp-0xcc],0x30
    89fa:	00 00 00 
    89fd:	48 8d 45 10          	lea    rax,[rbp+0x10]
    8a01:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    8a08:	48 8d 85 50 ff ff ff 	lea    rax,[rbp-0xb0]
    8a0f:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    8a16:	48 8d 95 30 ff ff ff 	lea    rdx,[rbp-0xd0]
    8a1d:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    8a24:	48 89 d6             	mov    rsi,rdx
    8a27:	48 89 c7             	mov    rdi,rax
    8a2a:	b8 00 00 00 00       	mov    eax,0x0
    8a2f:	e8 ac 9a ff ff       	call   24e0 <printf@plt>
    8a34:	90                   	nop
    8a35:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    8a3c:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    8a43:	00 00 
    8a45:	74 05                	je     8a4c <livedebug+0xdd>
    8a47:	e8 94 9d ff ff       	call   27e0 <__stack_chk_fail@plt>
    8a4c:	c9                   	leave  
    8a4d:	c3                   	ret    

0000000000008a4e <forward_packet>:
    8a4e:	f3 0f 1e fa          	endbr64 
    8a52:	55                   	push   rbp
    8a53:	48 89 e5             	mov    rbp,rsp
    8a56:	48 83 ec 20          	sub    rsp,0x20
    8a5a:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8a5e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a62:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8a66:	48 8d 35 23 15 10 00 	lea    rsi,[rip+0x101523]        # 109f90 <local_ip>
    8a6d:	48 89 c7             	mov    rdi,rax
    8a70:	e8 7b 9d ff ff       	call   27f0 <strcmp@plt>
    8a75:	85 c0                	test   eax,eax
    8a77:	74 4f                	je     8ac8 <forward_packet+0x7a>
    8a79:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a7d:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    8a81:	48 8d 35 08 15 10 00 	lea    rsi,[rip+0x101508]        # 109f90 <local_ip>
    8a88:	48 89 c7             	mov    rdi,rax
    8a8b:	e8 60 9d ff ff       	call   27f0 <strcmp@plt>
    8a90:	85 c0                	test   eax,eax
    8a92:	74 34                	je     8ac8 <forward_packet+0x7a>
    8a94:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a98:	48 8b 00             	mov    rax,QWORD PTR [rax]
    8a9b:	48 8d 50 0e          	lea    rdx,[rax+0xe]
    8a9f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8aa3:	48 89 d6             	mov    rsi,rdx
    8aa6:	48 89 c7             	mov    rdi,rax
    8aa9:	e8 72 9d ff ff       	call   2820 <strcpy@plt>
    8aae:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8ab2:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    8ab5:	83 e8 0e             	sub    eax,0xe
    8ab8:	89 c2                	mov    edx,eax
    8aba:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8abe:	89 d6                	mov    esi,edx
    8ac0:	48 89 c7             	mov    rdi,rax
    8ac3:	e8 5f c9 ff ff       	call   5427 <ascii_hexdump>
    8ac8:	90                   	nop
    8ac9:	c9                   	leave  
    8aca:	c3                   	ret    

0000000000008acb <conversation_exists>:
    8acb:	f3 0f 1e fa          	endbr64 
    8acf:	55                   	push   rbp
    8ad0:	48 89 e5             	mov    rbp,rsp
    8ad3:	48 83 ec 20          	sub    rsp,0x20
    8ad7:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8adb:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    8ae2:	e9 ff 00 00 00       	jmp    8be6 <conversation_exists+0x11b>
    8ae7:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8aea:	48 98                	cdqe   
    8aec:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8af3:	48 8d 15 e6 14 10 00 	lea    rdx,[rip+0x1014e6]        # 109fe0 <spi_table>
    8afa:	48 01 d0             	add    rax,rdx
    8afd:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8b01:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b05:	0f b6 80 b0 00 00 00 	movzx  eax,BYTE PTR [rax+0xb0]
    8b0c:	84 c0                	test   al,al
    8b0e:	0f 84 ce 00 00 00    	je     8be2 <conversation_exists+0x117>
    8b14:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b18:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    8b1b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b1f:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    8b22:	39 c2                	cmp    edx,eax
    8b24:	75 58                	jne    8b7e <conversation_exists+0xb3>
    8b26:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b2a:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    8b2d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b31:	8b 40 54             	mov    eax,DWORD PTR [rax+0x54]
    8b34:	39 c2                	cmp    edx,eax
    8b36:	75 46                	jne    8b7e <conversation_exists+0xb3>
    8b38:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8b3c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b40:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8b44:	48 89 d6             	mov    rsi,rdx
    8b47:	48 89 c7             	mov    rdi,rax
    8b4a:	e8 a1 9c ff ff       	call   27f0 <strcmp@plt>
    8b4f:	85 c0                	test   eax,eax
    8b51:	0f 85 8a 00 00 00    	jne    8be1 <conversation_exists+0x116>
    8b57:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b5b:	48 8d 50 29          	lea    rdx,[rax+0x29]
    8b5f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b63:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    8b67:	48 89 d6             	mov    rsi,rdx
    8b6a:	48 89 c7             	mov    rdi,rax
    8b6d:	e8 7e 9c ff ff       	call   27f0 <strcmp@plt>
    8b72:	85 c0                	test   eax,eax
    8b74:	75 6b                	jne    8be1 <conversation_exists+0x116>
    8b76:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8b79:	e9 81 00 00 00       	jmp    8bff <conversation_exists+0x134>
    8b7e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b82:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    8b85:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b89:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    8b8c:	39 c2                	cmp    edx,eax
    8b8e:	75 52                	jne    8be2 <conversation_exists+0x117>
    8b90:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b94:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    8b97:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b9b:	8b 40 54             	mov    eax,DWORD PTR [rax+0x54]
    8b9e:	39 c2                	cmp    edx,eax
    8ba0:	75 40                	jne    8be2 <conversation_exists+0x117>
    8ba2:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8ba6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8baa:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    8bae:	48 89 d6             	mov    rsi,rdx
    8bb1:	48 89 c7             	mov    rdi,rax
    8bb4:	e8 37 9c ff ff       	call   27f0 <strcmp@plt>
    8bb9:	85 c0                	test   eax,eax
    8bbb:	75 25                	jne    8be2 <conversation_exists+0x117>
    8bbd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8bc1:	48 8d 50 29          	lea    rdx,[rax+0x29]
    8bc5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8bc9:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8bcd:	48 89 d6             	mov    rsi,rdx
    8bd0:	48 89 c7             	mov    rdi,rax
    8bd3:	e8 18 9c ff ff       	call   27f0 <strcmp@plt>
    8bd8:	85 c0                	test   eax,eax
    8bda:	75 06                	jne    8be2 <conversation_exists+0x117>
    8bdc:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8bdf:	eb 1e                	jmp    8bff <conversation_exists+0x134>
    8be1:	90                   	nop
    8be2:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    8be6:	8b 05 54 84 00 00    	mov    eax,DWORD PTR [rip+0x8454]        # 11040 <total_conversations>
    8bec:	8d 50 01             	lea    edx,[rax+0x1]
    8bef:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8bf2:	39 c2                	cmp    edx,eax
    8bf4:	0f 87 ed fe ff ff    	ja     8ae7 <conversation_exists+0x1c>
    8bfa:	b8 ff ff ff ff       	mov    eax,0xffffffff
    8bff:	c9                   	leave  
    8c00:	c3                   	ret    

0000000000008c01 <get_new_spi_location>:
    8c01:	f3 0f 1e fa          	endbr64 
    8c05:	55                   	push   rbp
    8c06:	48 89 e5             	mov    rbp,rsp
    8c09:	8b 05 31 84 00 00    	mov    eax,DWORD PTR [rip+0x8431]        # 11040 <total_conversations>
    8c0f:	83 f8 ff             	cmp    eax,0xffffffff
    8c12:	75 17                	jne    8c2b <get_new_spi_location+0x2a>
    8c14:	8b 05 26 84 00 00    	mov    eax,DWORD PTR [rip+0x8426]        # 11040 <total_conversations>
    8c1a:	83 c0 01             	add    eax,0x1
    8c1d:	89 05 1d 84 00 00    	mov    DWORD PTR [rip+0x841d],eax        # 11040 <total_conversations>
    8c23:	8b 05 17 84 00 00    	mov    eax,DWORD PTR [rip+0x8417]        # 11040 <total_conversations>
    8c29:	eb 52                	jmp    8c7d <get_new_spi_location+0x7c>
    8c2b:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    8c32:	eb 27                	jmp    8c5b <get_new_spi_location+0x5a>
    8c34:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    8c37:	48 98                	cdqe   
    8c39:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8c40:	48 8d 15 49 14 10 00 	lea    rdx,[rip+0x101449]        # 10a090 <spi_table+0xb0>
    8c47:	0f b6 04 10          	movzx  eax,BYTE PTR [rax+rdx*1]
    8c4b:	83 f0 01             	xor    eax,0x1
    8c4e:	84 c0                	test   al,al
    8c50:	74 05                	je     8c57 <get_new_spi_location+0x56>
    8c52:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    8c55:	eb 26                	jmp    8c7d <get_new_spi_location+0x7c>
    8c57:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    8c5b:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
    8c5e:	8b 05 dc 83 00 00    	mov    eax,DWORD PTR [rip+0x83dc]        # 11040 <total_conversations>
    8c64:	39 c2                	cmp    edx,eax
    8c66:	72 cc                	jb     8c34 <get_new_spi_location+0x33>
    8c68:	8b 05 d2 83 00 00    	mov    eax,DWORD PTR [rip+0x83d2]        # 11040 <total_conversations>
    8c6e:	83 c0 01             	add    eax,0x1
    8c71:	89 05 c9 83 00 00    	mov    DWORD PTR [rip+0x83c9],eax        # 11040 <total_conversations>
    8c77:	8b 05 c3 83 00 00    	mov    eax,DWORD PTR [rip+0x83c3]        # 11040 <total_conversations>
    8c7d:	5d                   	pop    rbp
    8c7e:	c3                   	ret    

0000000000008c7f <add_new_conversation>:
    8c7f:	f3 0f 1e fa          	endbr64 
    8c83:	55                   	push   rbp
    8c84:	48 89 e5             	mov    rbp,rsp
    8c87:	48 83 ec 20          	sub    rsp,0x20
    8c8b:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8c8f:	0f b6 05 2c 13 10 00 	movzx  eax,BYTE PTR [rip+0x10132c]        # 109fc2 <use_spi>
    8c96:	84 c0                	test   al,al
    8c98:	0f 84 17 02 00 00    	je     8eb5 <add_new_conversation+0x236>
    8c9e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8ca2:	48 89 c7             	mov    rdi,rax
    8ca5:	e8 21 fe ff ff       	call   8acb <conversation_exists>
    8caa:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    8cad:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    8cb1:	0f 84 88 00 00 00    	je     8d3f <add_new_conversation+0xc0>
    8cb7:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8cba:	48 98                	cdqe   
    8cbc:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8cc3:	48 8d 15 16 13 10 00 	lea    rdx,[rip+0x101316]        # 109fe0 <spi_table>
    8cca:	48 01 d0             	add    rax,rdx
    8ccd:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8cd1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8cd5:	8b 80 ac 00 00 00    	mov    eax,DWORD PTR [rax+0xac]
    8cdb:	8d 50 01             	lea    edx,[rax+0x1]
    8cde:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8ce2:	89 90 ac 00 00 00    	mov    DWORD PTR [rax+0xac],edx
    8ce8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8cec:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    8cf2:	8d 50 01             	lea    edx,[rax+0x1]
    8cf5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8cf9:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    8cff:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d03:	8b 78 54             	mov    edi,DWORD PTR [rax+0x54]
    8d06:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    8d0a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d0e:	8b 50 58             	mov    edx,DWORD PTR [rax+0x58]
    8d11:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d15:	48 8d 70 29          	lea    rsi,[rax+0x29]
    8d19:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8d1c:	41 89 f9             	mov    r9d,edi
    8d1f:	49 89 c8             	mov    r8,rcx
    8d22:	89 d1                	mov    ecx,edx
    8d24:	48 89 f2             	mov    rdx,rsi
    8d27:	89 c6                	mov    esi,eax
    8d29:	48 8d 3d d0 4b 00 00 	lea    rdi,[rip+0x4bd0]        # d900 <_IO_stdin_used+0x1900>
    8d30:	b8 00 00 00 00       	mov    eax,0x0
    8d35:	e8 a6 97 ff ff       	call   24e0 <printf@plt>
    8d3a:	e9 76 01 00 00       	jmp    8eb5 <add_new_conversation+0x236>
    8d3f:	b8 00 00 00 00       	mov    eax,0x0
    8d44:	e8 b8 fe ff ff       	call   8c01 <get_new_spi_location>
    8d49:	48 98                	cdqe   
    8d4b:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8d52:	48 8d 15 87 12 10 00 	lea    rdx,[rip+0x101287]        # 109fe0 <spi_table>
    8d59:	48 01 d0             	add    rax,rdx
    8d5c:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8d60:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d64:	ba 08 00 00 00       	mov    edx,0x8
    8d69:	be 00 00 00 00       	mov    esi,0x0
    8d6e:	48 89 c7             	mov    rdi,rax
    8d71:	e8 7a 97 ff ff       	call   24f0 <memset@plt>
    8d76:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d7a:	c6 80 b0 00 00 00 01 	mov    BYTE PTR [rax+0xb0],0x1
    8d81:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d85:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8d89:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8d8d:	48 83 c2 29          	add    rdx,0x29
    8d91:	48 89 c6             	mov    rsi,rax
    8d94:	48 89 d7             	mov    rdi,rdx
    8d97:	e8 84 9a ff ff       	call   2820 <strcpy@plt>
    8d9c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8da0:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
    8da4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8da8:	48 89 d6             	mov    rsi,rdx
    8dab:	48 89 c7             	mov    rdi,rax
    8dae:	e8 6d 9a ff ff       	call   2820 <strcpy@plt>
    8db3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8db7:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    8dba:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8dbe:	89 50 58             	mov    DWORD PTR [rax+0x58],edx
    8dc1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8dc5:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    8dc8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8dcc:	89 50 54             	mov    DWORD PTR [rax+0x54],edx
    8dcf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8dd3:	c7 40 7c 00 00 00 00 	mov    DWORD PTR [rax+0x7c],0x0
    8dda:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8dde:	48 8d 50 5c          	lea    rdx,[rax+0x5c]
    8de2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8de6:	48 89 50 70          	mov    QWORD PTR [rax+0x70],rdx
    8dea:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8dee:	48 8d 50 60          	lea    rdx,[rax+0x60]
    8df2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8df6:	48 89 50 68          	mov    QWORD PTR [rax+0x68],rdx
    8dfa:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8dfe:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8e02:	48 89 d6             	mov    rsi,rdx
    8e05:	48 89 c7             	mov    rdi,rax
    8e08:	e8 8e 04 00 00       	call   929b <increment_stats>
    8e0d:	bf 00 00 00 00       	mov    edi,0x0
    8e12:	e8 19 9b ff ff       	call   2930 <time@plt>
    8e17:	48 89 c2             	mov    rdx,rax
    8e1a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e1e:	48 89 90 90 00 00 00 	mov    QWORD PTR [rax+0x90],rdx
    8e25:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e29:	c7 80 80 00 00 00 00 	mov    DWORD PTR [rax+0x80],0x0
    8e30:	00 00 00 
    8e33:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e37:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    8e3d:	8d 50 01             	lea    edx,[rax+0x1]
    8e40:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e44:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    8e4a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8e4e:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    8e51:	89 c2                	mov    edx,eax
    8e53:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e57:	89 90 a4 00 00 00    	mov    DWORD PTR [rax+0xa4],edx
    8e5d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e61:	8b 78 54             	mov    edi,DWORD PTR [rax+0x54]
    8e64:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    8e68:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e6c:	8b 50 58             	mov    edx,DWORD PTR [rax+0x58]
    8e6f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e73:	48 8d 70 29          	lea    rsi,[rax+0x29]
    8e77:	8b 05 c3 81 00 00    	mov    eax,DWORD PTR [rip+0x81c3]        # 11040 <total_conversations>
    8e7d:	41 89 f9             	mov    r9d,edi
    8e80:	49 89 c8             	mov    r8,rcx
    8e83:	89 d1                	mov    ecx,edx
    8e85:	48 89 f2             	mov    rdx,rsi
    8e88:	89 c6                	mov    esi,eax
    8e8a:	48 8d 3d 97 4a 00 00 	lea    rdi,[rip+0x4a97]        # d928 <_IO_stdin_used+0x1928>
    8e91:	b8 00 00 00 00       	mov    eax,0x0
    8e96:	e8 45 96 ff ff       	call   24e0 <printf@plt>
    8e9b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8e9f:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    8ea2:	83 f8 7e             	cmp    eax,0x7e
    8ea5:	75 0e                	jne    8eb5 <add_new_conversation+0x236>
    8ea7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8eab:	c7 80 8c 00 00 00 f3 	mov    DWORD PTR [rax+0x8c],0xf3
    8eb2:	00 00 00 
    8eb5:	90                   	nop
    8eb6:	c9                   	leave  
    8eb7:	c3                   	ret    

0000000000008eb8 <spi_ud_thw>:
    8eb8:	f3 0f 1e fa          	endbr64 
    8ebc:	55                   	push   rbp
    8ebd:	48 89 e5             	mov    rbp,rsp
    8ec0:	48 83 ec 20          	sub    rsp,0x20
    8ec4:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8ec8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8ecc:	48 89 c7             	mov    rdi,rax
    8ecf:	e8 f7 fb ff ff       	call   8acb <conversation_exists>
    8ed4:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    8ed7:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    8edb:	0f 84 9d 00 00 00    	je     8f7e <spi_ud_thw+0xc6>
    8ee1:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8ee4:	48 98                	cdqe   
    8ee6:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8eed:	48 8d 15 ec 10 10 00 	lea    rdx,[rip+0x1010ec]        # 109fe0 <spi_table>
    8ef4:	48 01 d0             	add    rax,rdx
    8ef7:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8efb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8eff:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    8f05:	8d 50 01             	lea    edx,[rax+0x1]
    8f08:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8f0c:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    8f12:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8f16:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8f1a:	48 89 d6             	mov    rsi,rdx
    8f1d:	48 89 c7             	mov    rdi,rax
    8f20:	e8 76 03 00 00       	call   929b <increment_stats>
    8f25:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8f29:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    8f2c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8f30:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    8f34:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8f38:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    8f3b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8f3f:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    8f43:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8f46:	41 89 f9             	mov    r9d,edi
    8f49:	49 89 f0             	mov    r8,rsi
    8f4c:	89 c6                	mov    esi,eax
    8f4e:	48 8d 3d fb 49 00 00 	lea    rdi,[rip+0x49fb]        # d950 <_IO_stdin_used+0x1950>
    8f55:	b8 00 00 00 00       	mov    eax,0x0
    8f5a:	e8 81 95 ff ff       	call   24e0 <printf@plt>
    8f5f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8f63:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
    8f69:	3d f3 00 00 00       	cmp    eax,0xf3
    8f6e:	75 0e                	jne    8f7e <spi_ud_thw+0xc6>
    8f70:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8f74:	c7 80 8c 00 00 00 f4 	mov    DWORD PTR [rax+0x8c],0xf4
    8f7b:	00 00 00 
    8f7e:	90                   	nop
    8f7f:	c9                   	leave  
    8f80:	c3                   	ret    

0000000000008f81 <update_table>:
    8f81:	f3 0f 1e fa          	endbr64 
    8f85:	55                   	push   rbp
    8f86:	48 89 e5             	mov    rbp,rsp
    8f89:	48 83 ec 30          	sub    rsp,0x30
    8f8d:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    8f91:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8f98:	00 00 
    8f9a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8f9e:	31 c0                	xor    eax,eax
    8fa0:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8fa4:	48 89 c7             	mov    rdi,rax
    8fa7:	e8 1f fb ff ff       	call   8acb <conversation_exists>
    8fac:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
    8faf:	83 7d e4 ff          	cmp    DWORD PTR [rbp-0x1c],0xffffffff
    8fb3:	0f 84 52 01 00 00    	je     910b <update_table+0x18a>
    8fb9:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    8fbc:	48 98                	cdqe   
    8fbe:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8fc5:	48 8d 15 14 10 10 00 	lea    rdx,[rip+0x101014]        # 109fe0 <spi_table>
    8fcc:	48 01 d0             	add    rax,rdx
    8fcf:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    8fd3:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8fd7:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    8fdd:	8d 50 01             	lea    edx,[rax+0x1]
    8fe0:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8fe4:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    8fea:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    8fee:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8ff2:	48 89 d6             	mov    rsi,rdx
    8ff5:	48 89 c7             	mov    rdi,rax
    8ff8:	e8 9e 02 00 00       	call   929b <increment_stats>
    8ffd:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9001:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
    9007:	3d f4 00 00 00       	cmp    eax,0xf4
    900c:	75 4d                	jne    905b <update_table+0xda>
    900e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9012:	c7 80 8c 00 00 00 f1 	mov    DWORD PTR [rax+0x8c],0xf1
    9019:	00 00 00 
    901c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9020:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    9023:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9027:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    902b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    902f:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    9032:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9036:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    903a:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    903d:	41 89 f9             	mov    r9d,edi
    9040:	49 89 f0             	mov    r8,rsi
    9043:	89 c6                	mov    esi,eax
    9045:	48 8d 3d 2c 49 00 00 	lea    rdi,[rip+0x492c]        # d978 <_IO_stdin_used+0x1978>
    904c:	b8 00 00 00 00       	mov    eax,0x0
    9051:	e8 8a 94 ff ff       	call   24e0 <printf@plt>
    9056:	e9 b0 00 00 00       	jmp    910b <update_table+0x18a>
    905b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    905f:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
    9065:	3d f6 00 00 00       	cmp    eax,0xf6
    906a:	0f 85 9b 00 00 00    	jne    910b <update_table+0x18a>
    9070:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9074:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    9077:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    907b:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    907f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9083:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    9086:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    908a:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    908e:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    9091:	41 89 f9             	mov    r9d,edi
    9094:	49 89 f0             	mov    r8,rsi
    9097:	89 c6                	mov    esi,eax
    9099:	48 8d 3d 08 49 00 00 	lea    rdi,[rip+0x4908]        # d9a8 <_IO_stdin_used+0x19a8>
    90a0:	b8 00 00 00 00       	mov    eax,0x0
    90a5:	e8 36 94 ff ff       	call   24e0 <printf@plt>
    90aa:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    90ae:	c7 80 8c 00 00 00 fa 	mov    DWORD PTR [rax+0x8c],0xfa
    90b5:	00 00 00 
    90b8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    90bc:	c6 80 b0 00 00 00 00 	mov    BYTE PTR [rax+0xb0],0x0
    90c3:	bf 00 00 00 00       	mov    edi,0x0
    90c8:	e8 63 98 ff ff       	call   2930 <time@plt>
    90cd:	48 89 c2             	mov    rdx,rax
    90d0:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    90d4:	48 89 90 98 00 00 00 	mov    QWORD PTR [rax+0x98],rdx
    90db:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    90df:	48 8d 45 e8          	lea    rax,[rbp-0x18]
    90e3:	48 89 d1             	mov    rcx,rdx
    90e6:	48 8d 15 b1 f3 ff ff 	lea    rdx,[rip+0xfffffffffffff3b1]        # 849e <update_spi_db>
    90ed:	be 00 00 00 00       	mov    esi,0x0
    90f2:	48 89 c7             	mov    rdi,rax
    90f5:	e8 46 95 ff ff       	call   2640 <pthread_create@plt>
    90fa:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    90fe:	be 00 00 00 00       	mov    esi,0x0
    9103:	48 89 c7             	mov    rdi,rax
    9106:	e8 c5 93 ff ff       	call   24d0 <pthread_join@plt>
    910b:	90                   	nop
    910c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9110:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    9117:	00 00 
    9119:	74 05                	je     9120 <update_table+0x19f>
    911b:	e8 c0 96 ff ff       	call   27e0 <__stack_chk_fail@plt>
    9120:	c9                   	leave  
    9121:	c3                   	ret    

0000000000009122 <polite_end>:
    9122:	f3 0f 1e fa          	endbr64 
    9126:	55                   	push   rbp
    9127:	48 89 e5             	mov    rbp,rsp
    912a:	48 83 ec 20          	sub    rsp,0x20
    912e:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    9132:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9136:	48 89 c7             	mov    rdi,rax
    9139:	e8 8d f9 ff ff       	call   8acb <conversation_exists>
    913e:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    9141:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    9145:	0f 84 e7 00 00 00    	je     9232 <polite_end+0x110>
    914b:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    914e:	48 98                	cdqe   
    9150:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    9157:	48 8d 15 82 0e 10 00 	lea    rdx,[rip+0x100e82]        # 109fe0 <spi_table>
    915e:	48 01 d0             	add    rax,rdx
    9161:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9165:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9169:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    916f:	8d 50 01             	lea    edx,[rax+0x1]
    9172:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9176:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    917c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9180:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
    9186:	3d f5 00 00 00       	cmp    eax,0xf5
    918b:	75 4a                	jne    91d7 <polite_end+0xb5>
    918d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9191:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    9194:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9198:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    919c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    91a0:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    91a3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    91a7:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    91ab:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    91ae:	41 89 f9             	mov    r9d,edi
    91b1:	49 89 f0             	mov    r8,rsi
    91b4:	89 c6                	mov    esi,eax
    91b6:	48 8d 3d 23 48 00 00 	lea    rdi,[rip+0x4823]        # d9e0 <_IO_stdin_used+0x19e0>
    91bd:	b8 00 00 00 00       	mov    eax,0x0
    91c2:	e8 19 93 ff ff       	call   24e0 <printf@plt>
    91c7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    91cb:	c7 80 8c 00 00 00 f6 	mov    DWORD PTR [rax+0x8c],0xf6
    91d2:	00 00 00 
    91d5:	eb 48                	jmp    921f <polite_end+0xfd>
    91d7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    91db:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    91de:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    91e2:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    91e6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    91ea:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    91ed:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    91f1:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    91f5:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    91f8:	41 89 f9             	mov    r9d,edi
    91fb:	49 89 f0             	mov    r8,rsi
    91fe:	89 c6                	mov    esi,eax
    9200:	48 8d 3d 11 48 00 00 	lea    rdi,[rip+0x4811]        # da18 <_IO_stdin_used+0x1a18>
    9207:	b8 00 00 00 00       	mov    eax,0x0
    920c:	e8 cf 92 ff ff       	call   24e0 <printf@plt>
    9211:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9215:	c7 80 8c 00 00 00 f5 	mov    DWORD PTR [rax+0x8c],0xf5
    921c:	00 00 00 
    921f:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    9223:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9227:	48 89 d6             	mov    rsi,rdx
    922a:	48 89 c7             	mov    rdi,rax
    922d:	e8 69 00 00 00       	call   929b <increment_stats>
    9232:	90                   	nop
    9233:	c9                   	leave  
    9234:	c3                   	ret    

0000000000009235 <handle_data_pkt>:
    9235:	f3 0f 1e fa          	endbr64 
    9239:	55                   	push   rbp
    923a:	48 89 e5             	mov    rbp,rsp
    923d:	48 83 ec 20          	sub    rsp,0x20
    9241:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    9245:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9249:	48 89 c7             	mov    rdi,rax
    924c:	e8 7a f8 ff ff       	call   8acb <conversation_exists>
    9251:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    9254:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    9258:	74 3e                	je     9298 <handle_data_pkt+0x63>
    925a:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    925d:	48 98                	cdqe   
    925f:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    9266:	48 8d 15 73 0d 10 00 	lea    rdx,[rip+0x100d73]        # 109fe0 <spi_table>
    926d:	48 01 d0             	add    rax,rdx
    9270:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9274:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9278:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    927b:	8d 50 01             	lea    edx,[rax+0x1]
    927e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9282:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    9285:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    9289:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    928d:	48 89 d6             	mov    rsi,rdx
    9290:	48 89 c7             	mov    rdi,rax
    9293:	e8 03 00 00 00       	call   929b <increment_stats>
    9298:	90                   	nop
    9299:	c9                   	leave  
    929a:	c3                   	ret    

000000000000929b <increment_stats>:
    929b:	f3 0f 1e fa          	endbr64 
    929f:	55                   	push   rbp
    92a0:	48 89 e5             	mov    rbp,rsp
    92a3:	48 83 ec 10          	sub    rsp,0x10
    92a7:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    92ab:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    92af:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    92b3:	48 8d 50 29          	lea    rdx,[rax+0x29]
    92b7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    92bb:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    92bf:	48 89 d6             	mov    rsi,rdx
    92c2:	48 89 c7             	mov    rdi,rax
    92c5:	e8 26 95 ff ff       	call   27f0 <strcmp@plt>
    92ca:	85 c0                	test   eax,eax
    92cc:	75 13                	jne    92e1 <increment_stats+0x46>
    92ce:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    92d2:	8b 40 60             	mov    eax,DWORD PTR [rax+0x60]
    92d5:	8d 50 01             	lea    edx,[rax+0x1]
    92d8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    92dc:	89 50 60             	mov    DWORD PTR [rax+0x60],edx
    92df:	eb 2c                	jmp    930d <increment_stats+0x72>
    92e1:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    92e5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    92e9:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    92ed:	48 89 d6             	mov    rsi,rdx
    92f0:	48 89 c7             	mov    rdi,rax
    92f3:	e8 f8 94 ff ff       	call   27f0 <strcmp@plt>
    92f8:	85 c0                	test   eax,eax
    92fa:	75 11                	jne    930d <increment_stats+0x72>
    92fc:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9300:	8b 40 5c             	mov    eax,DWORD PTR [rax+0x5c]
    9303:	8d 50 01             	lea    edx,[rax+0x1]
    9306:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    930a:	89 50 5c             	mov    DWORD PTR [rax+0x5c],edx
    930d:	90                   	nop
    930e:	c9                   	leave  
    930f:	c3                   	ret    

0000000000009310 <lprintf>:
    9310:	f3 0f 1e fa          	endbr64 
    9314:	55                   	push   rbp
    9315:	48 89 e5             	mov    rbp,rsp
    9318:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
    931f:	48 89 bd 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rdi
    9326:	48 89 b5 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rsi
    932d:	48 89 95 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdx
    9334:	48 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rcx
    933b:	4c 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r8
    9342:	4c 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r9
    9349:	84 c0                	test   al,al
    934b:	74 20                	je     936d <lprintf+0x5d>
    934d:	0f 29 45 80          	movaps XMMWORD PTR [rbp-0x80],xmm0
    9351:	0f 29 4d 90          	movaps XMMWORD PTR [rbp-0x70],xmm1
    9355:	0f 29 55 a0          	movaps XMMWORD PTR [rbp-0x60],xmm2
    9359:	0f 29 5d b0          	movaps XMMWORD PTR [rbp-0x50],xmm3
    935d:	0f 29 65 c0          	movaps XMMWORD PTR [rbp-0x40],xmm4
    9361:	0f 29 6d d0          	movaps XMMWORD PTR [rbp-0x30],xmm5
    9365:	0f 29 75 e0          	movaps XMMWORD PTR [rbp-0x20],xmm6
    9369:	0f 29 7d f0          	movaps XMMWORD PTR [rbp-0x10],xmm7
    936d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9374:	00 00 
    9376:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    937d:	31 c0                	xor    eax,eax
    937f:	c7 85 30 ff ff ff 10 	mov    DWORD PTR [rbp-0xd0],0x10
    9386:	00 00 00 
    9389:	c7 85 34 ff ff ff 30 	mov    DWORD PTR [rbp-0xcc],0x30
    9390:	00 00 00 
    9393:	48 8d 45 10          	lea    rax,[rbp+0x10]
    9397:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    939e:	48 8d 85 50 ff ff ff 	lea    rax,[rbp-0xb0]
    93a5:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    93ac:	48 8d 95 30 ff ff ff 	lea    rdx,[rbp-0xd0]
    93b3:	48 8b 8d 20 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xe0]
    93ba:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    93c1:	48 89 ce             	mov    rsi,rcx
    93c4:	48 89 c7             	mov    rdi,rax
    93c7:	b8 00 00 00 00       	mov    eax,0x0
    93cc:	e8 0f 95 ff ff       	call   28e0 <fprintf@plt>
    93d1:	90                   	nop
    93d2:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    93d9:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    93e0:	00 00 
    93e2:	74 05                	je     93e9 <lprintf+0xd9>
    93e4:	e8 f7 93 ff ff       	call   27e0 <__stack_chk_fail@plt>
    93e9:	c9                   	leave  
    93ea:	c3                   	ret    

00000000000093eb <lfprintf>:
    93eb:	f3 0f 1e fa          	endbr64 
    93ef:	55                   	push   rbp
    93f0:	48 89 e5             	mov    rbp,rsp
    93f3:	48 81 ec 90 08 00 00 	sub    rsp,0x890
    93fa:	48 89 bd 98 f7 ff ff 	mov    QWORD PTR [rbp-0x868],rdi
    9401:	48 89 b5 90 f7 ff ff 	mov    QWORD PTR [rbp-0x870],rsi
    9408:	48 89 95 88 f7 ff ff 	mov    QWORD PTR [rbp-0x878],rdx
    940f:	48 89 8d 80 f7 ff ff 	mov    QWORD PTR [rbp-0x880],rcx
    9416:	44 89 85 7c f7 ff ff 	mov    DWORD PTR [rbp-0x884],r8d
    941d:	44 89 8d 78 f7 ff ff 	mov    DWORD PTR [rbp-0x888],r9d
    9424:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    942b:	00 00 
    942d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9431:	31 c0                	xor    eax,eax
    9433:	48 8b 85 98 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x868]
    943a:	48 8d 35 0f 46 00 00 	lea    rsi,[rip+0x460f]        # da50 <_IO_stdin_used+0x1a50>
    9441:	48 89 c7             	mov    rdi,rax
    9444:	e8 87 91 ff ff       	call   25d0 <fopen@plt>
    9449:	48 89 85 a8 f7 ff ff 	mov    QWORD PTR [rbp-0x858],rax
    9450:	48 83 bd a8 f7 ff ff 	cmp    QWORD PTR [rbp-0x858],0x0
    9457:	00 
    9458:	75 20                	jne    947a <lfprintf+0x8f>
    945a:	48 8b 85 90 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x870]
    9461:	48 89 c6             	mov    rsi,rax
    9464:	48 8d 3d ed 45 00 00 	lea    rdi,[rip+0x45ed]        # da58 <_IO_stdin_used+0x1a58>
    946b:	b8 00 00 00 00       	mov    eax,0x0
    9470:	e8 6b 90 ff ff       	call   24e0 <printf@plt>
    9475:	e9 cd 00 00 00       	jmp    9547 <lfprintf+0x15c>
    947a:	48 8d 85 b0 f7 ff ff 	lea    rax,[rbp-0x850]
    9481:	48 89 c7             	mov    rdi,rax
    9484:	e8 54 a0 ff ff       	call   34dd <cb_get_formatted_time>
    9489:	83 bd 7c f7 ff ff ff 	cmp    DWORD PTR [rbp-0x884],0xffffffff
    9490:	75 3f                	jne    94d1 <lfprintf+0xe6>
    9492:	48 8b bd 80 f7 ff ff 	mov    rdi,QWORD PTR [rbp-0x880]
    9499:	48 8b b5 88 f7 ff ff 	mov    rsi,QWORD PTR [rbp-0x878]
    94a0:	48 8b 8d 90 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x870]
    94a7:	48 8d 95 b0 f7 ff ff 	lea    rdx,[rbp-0x850]
    94ae:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    94b5:	49 89 f9             	mov    r9,rdi
    94b8:	49 89 f0             	mov    r8,rsi
    94bb:	48 8d 35 c4 45 00 00 	lea    rsi,[rip+0x45c4]        # da86 <_IO_stdin_used+0x1a86>
    94c2:	48 89 c7             	mov    rdi,rax
    94c5:	b8 00 00 00 00       	mov    eax,0x0
    94ca:	e8 e1 91 ff ff       	call   26b0 <sprintf@plt>
    94cf:	eb 4e                	jmp    951f <lfprintf+0x134>
    94d1:	44 8b 85 7c f7 ff ff 	mov    r8d,DWORD PTR [rbp-0x884]
    94d8:	48 8b bd 88 f7 ff ff 	mov    rdi,QWORD PTR [rbp-0x878]
    94df:	48 8b 8d 90 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x870]
    94e6:	48 8d 95 b0 f7 ff ff 	lea    rdx,[rbp-0x850]
    94ed:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    94f4:	8b b5 78 f7 ff ff    	mov    esi,DWORD PTR [rbp-0x888]
    94fa:	56                   	push   rsi
    94fb:	ff b5 80 f7 ff ff    	push   QWORD PTR [rbp-0x880]
    9501:	45 89 c1             	mov    r9d,r8d
    9504:	49 89 f8             	mov    r8,rdi
    9507:	48 8d 35 88 45 00 00 	lea    rsi,[rip+0x4588]        # da96 <_IO_stdin_used+0x1a96>
    950e:	48 89 c7             	mov    rdi,rax
    9511:	b8 00 00 00 00       	mov    eax,0x0
    9516:	e8 95 91 ff ff       	call   26b0 <sprintf@plt>
    951b:	48 83 c4 10          	add    rsp,0x10
    951f:	48 8b 95 a8 f7 ff ff 	mov    rdx,QWORD PTR [rbp-0x858]
    9526:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    952d:	48 89 d6             	mov    rsi,rdx
    9530:	48 89 c7             	mov    rdi,rax
    9533:	e8 f8 91 ff ff       	call   2730 <fputs@plt>
    9538:	48 8b 85 a8 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x858]
    953f:	48 89 c7             	mov    rdi,rax
    9542:	e8 19 93 ff ff       	call   2860 <fclose@plt>
    9547:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    954b:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    9552:	00 00 
    9554:	74 05                	je     955b <lfprintf+0x170>
    9556:	e8 85 92 ff ff       	call   27e0 <__stack_chk_fail@plt>
    955b:	c9                   	leave  
    955c:	c3                   	ret    

000000000000955d <saprintf>:
    955d:	f3 0f 1e fa          	endbr64 
    9561:	55                   	push   rbp
    9562:	48 89 e5             	mov    rbp,rsp
    9565:	48 83 ec 20          	sub    rsp,0x20
    9569:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    956d:	48 8b 05 bc 7a 00 00 	mov    rax,QWORD PTR [rip+0x7abc]        # 11030 <def_log_file>
    9574:	48 8d 35 d5 44 00 00 	lea    rsi,[rip+0x44d5]        # da50 <_IO_stdin_used+0x1a50>
    957b:	48 89 c7             	mov    rdi,rax
    957e:	e8 4d 90 ff ff       	call   25d0 <fopen@plt>
    9583:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9587:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    958c:	75 1a                	jne    95a8 <saprintf+0x4b>
    958e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9592:	48 89 c6             	mov    rsi,rax
    9595:	48 8d 3d bc 44 00 00 	lea    rdi,[rip+0x44bc]        # da58 <_IO_stdin_used+0x1a58>
    959c:	b8 00 00 00 00       	mov    eax,0x0
    95a1:	e8 3a 8f ff ff       	call   24e0 <printf@plt>
    95a6:	eb 1f                	jmp    95c7 <saprintf+0x6a>
    95a8:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    95ac:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    95b0:	48 89 d6             	mov    rsi,rdx
    95b3:	48 89 c7             	mov    rdi,rax
    95b6:	e8 75 91 ff ff       	call   2730 <fputs@plt>
    95bb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    95bf:	48 89 c7             	mov    rdi,rax
    95c2:	e8 99 92 ff ff       	call   2860 <fclose@plt>
    95c7:	c9                   	leave  
    95c8:	c3                   	ret    

00000000000095c9 <substr>:
    95c9:	f3 0f 1e fa          	endbr64 
    95cd:	55                   	push   rbp
    95ce:	48 89 e5             	mov    rbp,rsp
    95d1:	48 83 ec 20          	sub    rsp,0x20
    95d5:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    95d9:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    95dc:	89 55 e0             	mov    DWORD PTR [rbp-0x20],edx
    95df:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
    95e2:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    95e5:	83 c0 02             	add    eax,0x2
    95e8:	48 98                	cdqe   
    95ea:	48 89 c7             	mov    rdi,rax
    95ed:	e8 ce 8f ff ff       	call   25c0 <malloc@plt>
    95f2:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    95f6:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    95f9:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    95fc:	eb 27                	jmp    9625 <substr+0x5c>
    95fe:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    9601:	48 63 d0             	movsxd rdx,eax
    9604:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9608:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    960c:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    960f:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    9612:	48 63 d0             	movsxd rdx,eax
    9615:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9619:	48 01 c2             	add    rdx,rax
    961c:	0f b6 01             	movzx  eax,BYTE PTR [rcx]
    961f:	88 02                	mov    BYTE PTR [rdx],al
    9621:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    9625:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    9628:	3b 45 e0             	cmp    eax,DWORD PTR [rbp-0x20]
    962b:	7e d1                	jle    95fe <substr+0x35>
    962d:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
    9630:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    9633:	48 98                	cdqe   
    9635:	48 8d 50 01          	lea    rdx,[rax+0x1]
    9639:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    963d:	48 01 d0             	add    rax,rdx
    9640:	c6 00 00             	mov    BYTE PTR [rax],0x0
    9643:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9647:	c9                   	leave  
    9648:	c3                   	ret    

0000000000009649 <delimit>:
    9649:	f3 0f 1e fa          	endbr64 
    964d:	55                   	push   rbp
    964e:	48 89 e5             	mov    rbp,rsp
    9651:	89 f8                	mov    eax,edi
    9653:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
    9656:	80 7d fc 20          	cmp    BYTE PTR [rbp-0x4],0x20
    965a:	0f 94 c0             	sete   al
    965d:	5d                   	pop    rbp
    965e:	c3                   	ret    

000000000000965f <isdigit>:
    965f:	f3 0f 1e fa          	endbr64 
    9663:	55                   	push   rbp
    9664:	48 89 e5             	mov    rbp,rsp
    9667:	53                   	push   rbx
    9668:	48 83 ec 28          	sub    rsp,0x28
    966c:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    9670:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    9677:	e9 f7 00 00 00       	jmp    9773 <isdigit+0x114>
    967c:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    967f:	48 63 d0             	movsxd rdx,eax
    9682:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9686:	48 01 d0             	add    rax,rdx
    9689:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    968c:	3c 30                	cmp    al,0x30
    968e:	0f 84 db 00 00 00    	je     976f <isdigit+0x110>
    9694:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9697:	48 63 d0             	movsxd rdx,eax
    969a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    969e:	48 01 d0             	add    rax,rdx
    96a1:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    96a4:	3c 31                	cmp    al,0x31
    96a6:	0f 84 c3 00 00 00    	je     976f <isdigit+0x110>
    96ac:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    96af:	48 63 d0             	movsxd rdx,eax
    96b2:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    96b6:	48 01 d0             	add    rax,rdx
    96b9:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    96bc:	3c 32                	cmp    al,0x32
    96be:	0f 84 ab 00 00 00    	je     976f <isdigit+0x110>
    96c4:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    96c7:	48 63 d0             	movsxd rdx,eax
    96ca:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    96ce:	48 01 d0             	add    rax,rdx
    96d1:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    96d4:	3c 33                	cmp    al,0x33
    96d6:	0f 84 93 00 00 00    	je     976f <isdigit+0x110>
    96dc:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    96df:	48 63 d0             	movsxd rdx,eax
    96e2:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    96e6:	48 01 d0             	add    rax,rdx
    96e9:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    96ec:	3c 34                	cmp    al,0x34
    96ee:	74 7f                	je     976f <isdigit+0x110>
    96f0:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    96f3:	48 63 d0             	movsxd rdx,eax
    96f6:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    96fa:	48 01 d0             	add    rax,rdx
    96fd:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9700:	3c 34                	cmp    al,0x34
    9702:	74 6b                	je     976f <isdigit+0x110>
    9704:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9707:	48 63 d0             	movsxd rdx,eax
    970a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    970e:	48 01 d0             	add    rax,rdx
    9711:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9714:	3c 35                	cmp    al,0x35
    9716:	74 57                	je     976f <isdigit+0x110>
    9718:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    971b:	48 63 d0             	movsxd rdx,eax
    971e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9722:	48 01 d0             	add    rax,rdx
    9725:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9728:	3c 36                	cmp    al,0x36
    972a:	74 43                	je     976f <isdigit+0x110>
    972c:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    972f:	48 63 d0             	movsxd rdx,eax
    9732:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9736:	48 01 d0             	add    rax,rdx
    9739:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    973c:	3c 37                	cmp    al,0x37
    973e:	74 2f                	je     976f <isdigit+0x110>
    9740:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9743:	48 63 d0             	movsxd rdx,eax
    9746:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    974a:	48 01 d0             	add    rax,rdx
    974d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9750:	3c 38                	cmp    al,0x38
    9752:	74 1b                	je     976f <isdigit+0x110>
    9754:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9757:	48 63 d0             	movsxd rdx,eax
    975a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    975e:	48 01 d0             	add    rax,rdx
    9761:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9764:	3c 39                	cmp    al,0x39
    9766:	74 07                	je     976f <isdigit+0x110>
    9768:	b8 00 00 00 00       	mov    eax,0x0
    976d:	eb 24                	jmp    9793 <isdigit+0x134>
    976f:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    9773:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9776:	48 63 d8             	movsxd rbx,eax
    9779:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    977d:	48 89 c7             	mov    rdi,rax
    9780:	e8 eb 8e ff ff       	call   2670 <strlen@plt>
    9785:	48 39 c3             	cmp    rbx,rax
    9788:	0f 82 ee fe ff ff    	jb     967c <isdigit+0x1d>
    978e:	b8 01 00 00 00       	mov    eax,0x1
    9793:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    9797:	c9                   	leave  
    9798:	c3                   	ret    

0000000000009799 <assign_port_number>:
    9799:	f3 0f 1e fa          	endbr64 
    979d:	55                   	push   rbp
    979e:	48 89 e5             	mov    rbp,rsp
    97a1:	48 83 ec 10          	sub    rsp,0x10
    97a5:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    97a9:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    97ad:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    97b1:	48 89 c7             	mov    rdi,rax
    97b4:	e8 a6 fe ff ff       	call   965f <isdigit>
    97b9:	84 c0                	test   al,al
    97bb:	74 18                	je     97d5 <assign_port_number+0x3c>
    97bd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    97c1:	48 89 c7             	mov    rdi,rax
    97c4:	e8 97 8f ff ff       	call   2760 <atoi@plt>
    97c9:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    97cd:	89 82 44 01 00 00    	mov    DWORD PTR [rdx+0x144],eax
    97d3:	eb 25                	jmp    97fa <assign_port_number+0x61>
    97d5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    97d9:	48 8d 35 d0 42 00 00 	lea    rsi,[rip+0x42d0]        # dab0 <_IO_stdin_used+0x1ab0>
    97e0:	48 89 c7             	mov    rdi,rax
    97e3:	e8 08 90 ff ff       	call   27f0 <strcmp@plt>
    97e8:	85 c0                	test   eax,eax
    97ea:	75 0e                	jne    97fa <assign_port_number+0x61>
    97ec:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    97f0:	c7 80 44 01 00 00 ff 	mov    DWORD PTR [rax+0x144],0xffffffff
    97f7:	ff ff ff 
    97fa:	90                   	nop
    97fb:	c9                   	leave  
    97fc:	c3                   	ret    

00000000000097fd <check_port_number>:
    97fd:	f3 0f 1e fa          	endbr64 
    9801:	55                   	push   rbp
    9802:	48 89 e5             	mov    rbp,rsp
    9805:	48 83 ec 10          	sub    rsp,0x10
    9809:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    980d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9811:	48 89 c7             	mov    rdi,rax
    9814:	e8 46 fe ff ff       	call   965f <isdigit>
    9819:	84 c0                	test   al,al
    981b:	74 0e                	je     982b <check_port_number+0x2e>
    981d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9821:	48 89 c7             	mov    rdi,rax
    9824:	e8 37 8f ff ff       	call   2760 <atoi@plt>
    9829:	eb 23                	jmp    984e <check_port_number+0x51>
    982b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    982f:	48 8d 35 7a 42 00 00 	lea    rsi,[rip+0x427a]        # dab0 <_IO_stdin_used+0x1ab0>
    9836:	48 89 c7             	mov    rdi,rax
    9839:	e8 b2 8f ff ff       	call   27f0 <strcmp@plt>
    983e:	85 c0                	test   eax,eax
    9840:	75 07                	jne    9849 <check_port_number+0x4c>
    9842:	b8 ff ff ff ff       	mov    eax,0xffffffff
    9847:	eb 05                	jmp    984e <check_port_number+0x51>
    9849:	b8 ff ff ff ff       	mov    eax,0xffffffff
    984e:	c9                   	leave  
    984f:	c3                   	ret    

0000000000009850 <assign_protocol>:
    9850:	f3 0f 1e fa          	endbr64 
    9854:	55                   	push   rbp
    9855:	48 89 e5             	mov    rbp,rsp
    9858:	48 83 ec 10          	sub    rsp,0x10
    985c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9860:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    9864:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9868:	48 8d 35 45 42 00 00 	lea    rsi,[rip+0x4245]        # dab4 <_IO_stdin_used+0x1ab4>
    986f:	48 89 c7             	mov    rdi,rax
    9872:	e8 79 8f ff ff       	call   27f0 <strcmp@plt>
    9877:	85 c0                	test   eax,eax
    9879:	75 10                	jne    988b <assign_protocol+0x3b>
    987b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    987f:	c7 80 40 01 00 00 ff 	mov    DWORD PTR [rax+0x140],0xffffffff
    9886:	ff ff ff 
    9889:	eb 73                	jmp    98fe <assign_protocol+0xae>
    988b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    988f:	48 8d 35 22 42 00 00 	lea    rsi,[rip+0x4222]        # dab8 <_IO_stdin_used+0x1ab8>
    9896:	48 89 c7             	mov    rdi,rax
    9899:	e8 52 8f ff ff       	call   27f0 <strcmp@plt>
    989e:	85 c0                	test   eax,eax
    98a0:	75 10                	jne    98b2 <assign_protocol+0x62>
    98a2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    98a6:	c7 80 40 01 00 00 80 	mov    DWORD PTR [rax+0x140],0x80
    98ad:	00 00 00 
    98b0:	eb 4c                	jmp    98fe <assign_protocol+0xae>
    98b2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    98b6:	48 8d 35 00 42 00 00 	lea    rsi,[rip+0x4200]        # dabd <_IO_stdin_used+0x1abd>
    98bd:	48 89 c7             	mov    rdi,rax
    98c0:	e8 2b 8f ff ff       	call   27f0 <strcmp@plt>
    98c5:	85 c0                	test   eax,eax
    98c7:	75 10                	jne    98d9 <assign_protocol+0x89>
    98c9:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    98cd:	c7 80 40 01 00 00 7e 	mov    DWORD PTR [rax+0x140],0x7e
    98d4:	00 00 00 
    98d7:	eb 25                	jmp    98fe <assign_protocol+0xae>
    98d9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    98dd:	48 8d 35 dd 41 00 00 	lea    rsi,[rip+0x41dd]        # dac1 <_IO_stdin_used+0x1ac1>
    98e4:	48 89 c7             	mov    rdi,rax
    98e7:	e8 04 8f ff ff       	call   27f0 <strcmp@plt>
    98ec:	85 c0                	test   eax,eax
    98ee:	75 0e                	jne    98fe <assign_protocol+0xae>
    98f0:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    98f4:	c7 80 40 01 00 00 7f 	mov    DWORD PTR [rax+0x140],0x7f
    98fb:	00 00 00 
    98fe:	90                   	nop
    98ff:	c9                   	leave  
    9900:	c3                   	ret    

0000000000009901 <get_ruletype>:
    9901:	f3 0f 1e fa          	endbr64 
    9905:	55                   	push   rbp
    9906:	48 89 e5             	mov    rbp,rsp
    9909:	48 83 ec 10          	sub    rsp,0x10
    990d:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9911:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    9915:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9919:	ba 09 00 00 00       	mov    edx,0x9
    991e:	48 8d 35 a0 41 00 00 	lea    rsi,[rip+0x41a0]        # dac5 <_IO_stdin_used+0x1ac5>
    9925:	48 89 c7             	mov    rdi,rax
    9928:	e8 83 8c ff ff       	call   25b0 <strncmp@plt>
    992d:	85 c0                	test   eax,eax
    992f:	75 17                	jne    9948 <get_ruletype+0x47>
    9931:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9935:	48 8d 15 98 bd ff ff 	lea    rdx,[rip+0xffffffffffffbd98]        # 56d4 <str_match_parser>
    993c:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    9943:	e9 82 00 00 00       	jmp    99ca <get_ruletype+0xc9>
    9948:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    994c:	ba 04 00 00 00       	mov    edx,0x4
    9951:	48 8d 35 77 41 00 00 	lea    rsi,[rip+0x4177]        # dacf <_IO_stdin_used+0x1acf>
    9958:	48 89 c7             	mov    rdi,rax
    995b:	e8 50 8c ff ff       	call   25b0 <strncmp@plt>
    9960:	85 c0                	test   eax,eax
    9962:	75 14                	jne    9978 <get_ruletype+0x77>
    9964:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9968:	48 8d 15 08 c0 ff ff 	lea    rdx,[rip+0xffffffffffffc008]        # 5977 <none>
    996f:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    9976:	eb 52                	jmp    99ca <get_ruletype+0xc9>
    9978:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    997c:	ba 04 00 00 00       	mov    edx,0x4
    9981:	48 8d 35 4c 41 00 00 	lea    rsi,[rip+0x414c]        # dad4 <_IO_stdin_used+0x1ad4>
    9988:	48 89 c7             	mov    rdi,rax
    998b:	e8 20 8c ff ff       	call   25b0 <strncmp@plt>
    9990:	85 c0                	test   eax,eax
    9992:	75 14                	jne    99a8 <get_ruletype+0xa7>
    9994:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9998:	48 8d 15 ef bf ff ff 	lea    rdx,[rip+0xffffffffffffbfef]        # 598e <pcre_match>
    999f:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    99a6:	eb 22                	jmp    99ca <get_ruletype+0xc9>
    99a8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    99ac:	48 89 c6             	mov    rsi,rax
    99af:	48 8d 3d 23 41 00 00 	lea    rdi,[rip+0x4123]        # dad9 <_IO_stdin_used+0x1ad9>
    99b6:	b8 00 00 00 00       	mov    eax,0x0
    99bb:	e8 20 8b ff ff       	call   24e0 <printf@plt>
    99c0:	bf 01 00 00 00       	mov    edi,0x1
    99c5:	e8 96 8b ff ff       	call   2560 <exit@plt>
    99ca:	c9                   	leave  
    99cb:	c3                   	ret    

00000000000099cc <numeric_check>:
    99cc:	f3 0f 1e fa          	endbr64 
    99d0:	55                   	push   rbp
    99d1:	48 89 e5             	mov    rbp,rsp
    99d4:	48 83 ec 30          	sub    rsp,0x30
    99d8:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    99dc:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    99df:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    99e3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    99e7:	48 89 c7             	mov    rdi,rax
    99ea:	e8 70 fc ff ff       	call   965f <isdigit>
    99ef:	84 c0                	test   al,al
    99f1:	74 27                	je     9a1a <numeric_check+0x4e>
    99f3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    99f7:	48 89 c7             	mov    rdi,rax
    99fa:	e8 61 8d ff ff       	call   2760 <atoi@plt>
    99ff:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
    9a02:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    9a05:	39 45 e4             	cmp    DWORD PTR [rbp-0x1c],eax
    9a08:	77 10                	ja     9a1a <numeric_check+0x4e>
    9a0a:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    9a0d:	48 98                	cdqe   
    9a0f:	48 39 45 d8          	cmp    QWORD PTR [rbp-0x28],rax
    9a13:	72 05                	jb     9a1a <numeric_check+0x4e>
    9a15:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    9a18:	eb 05                	jmp    9a1f <numeric_check+0x53>
    9a1a:	b8 ff ff ff ff       	mov    eax,0xffffffff
    9a1f:	c9                   	leave  
    9a20:	c3                   	ret    

0000000000009a21 <sc_strip>:
    9a21:	f3 0f 1e fa          	endbr64 
    9a25:	55                   	push   rbp
    9a26:	48 89 e5             	mov    rbp,rsp
    9a29:	48 83 ec 10          	sub    rsp,0x10
    9a2d:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9a31:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9a35:	48 8d 35 b4 40 00 00 	lea    rsi,[rip+0x40b4]        # daf0 <_IO_stdin_used+0x1af0>
    9a3c:	48 89 c7             	mov    rdi,rax
    9a3f:	e8 4c 8e ff ff       	call   2890 <strcspn@plt>
    9a44:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    9a48:	48 01 d0             	add    rax,rdx
    9a4b:	c6 00 00             	mov    BYTE PTR [rax],0x0
    9a4e:	90                   	nop
    9a4f:	c9                   	leave  
    9a50:	c3                   	ret    

0000000000009a51 <void_rule>:
    9a51:	f3 0f 1e fa          	endbr64 
    9a55:	55                   	push   rbp
    9a56:	48 89 e5             	mov    rbp,rsp
    9a59:	48 83 ec 10          	sub    rsp,0x10
    9a5d:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9a61:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9a65:	48 05 6e 03 00 00    	add    rax,0x36e
    9a6b:	ba 0a 00 00 00       	mov    edx,0xa
    9a70:	be 00 00 00 00       	mov    esi,0x0
    9a75:	48 89 c7             	mov    rdi,rax
    9a78:	e8 73 8a ff ff       	call   24f0 <memset@plt>
    9a7d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9a81:	48 05 68 03 00 00    	add    rax,0x368
    9a87:	ba 06 00 00 00       	mov    edx,0x6
    9a8c:	be 00 00 00 00       	mov    esi,0x0
    9a91:	48 89 c7             	mov    rdi,rax
    9a94:	e8 57 8a ff ff       	call   24f0 <memset@plt>
    9a99:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9a9d:	48 05 50 03 00 00    	add    rax,0x350
    9aa3:	ba 18 00 00 00       	mov    edx,0x18
    9aa8:	be 00 00 00 00       	mov    esi,0x0
    9aad:	48 89 c7             	mov    rdi,rax
    9ab0:	e8 3b 8a ff ff       	call   24f0 <memset@plt>
    9ab5:	90                   	nop
    9ab6:	c9                   	leave  
    9ab7:	c3                   	ret    

0000000000009ab8 <line_parser>:
    9ab8:	f3 0f 1e fa          	endbr64 
    9abc:	55                   	push   rbp
    9abd:	48 89 e5             	mov    rbp,rsp
    9ac0:	53                   	push   rbx
    9ac1:	48 81 ec 98 00 00 00 	sub    rsp,0x98
    9ac8:	48 89 bd 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rdi
    9acf:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9ad6:	00 00 
    9ad8:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    9adc:	31 c0                	xor    eax,eax
    9ade:	8b 05 30 75 00 00    	mov    eax,DWORD PTR [rip+0x7530]        # 11014 <num_rules>
    9ae4:	83 c0 01             	add    eax,0x1
    9ae7:	89 05 27 75 00 00    	mov    DWORD PTR [rip+0x7527],eax        # 11014 <num_rules>
    9aed:	8b 05 21 75 00 00    	mov    eax,DWORD PTR [rip+0x7521]        # 11014 <num_rules>
    9af3:	48 98                	cdqe   
    9af5:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    9afc:	48 8d 15 dd 77 00 00 	lea    rdx,[rip+0x77dd]        # 112e0 <rules>
    9b03:	48 01 d0             	add    rax,rdx
    9b06:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    9b0a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9b0e:	ba 08 00 00 00       	mov    edx,0x8
    9b13:	be 00 00 00 00       	mov    esi,0x0
    9b18:	48 89 c7             	mov    rdi,rax
    9b1b:	e8 d0 89 ff ff       	call   24f0 <memset@plt>
    9b20:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9b24:	c7 80 44 01 00 00 ff 	mov    DWORD PTR [rax+0x144],0xffffffff
    9b2b:	ff ff ff 
    9b2e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9b32:	c7 80 40 01 00 00 ff 	mov    DWORD PTR [rax+0x140],0xffffffff
    9b39:	ff ff ff 
    9b3c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9b40:	c7 40 1c ff ff ff ff 	mov    DWORD PTR [rax+0x1c],0xffffffff
    9b47:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9b4b:	c7 40 18 ff ff ff ff 	mov    DWORD PTR [rax+0x18],0xffffffff
    9b52:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9b56:	c7 40 10 ff ff ff ff 	mov    DWORD PTR [rax+0x10],0xffffffff
    9b5d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9b61:	c7 80 4c 03 00 00 00 	mov    DWORD PTR [rax+0x34c],0x0
    9b68:	00 00 00 
    9b6b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9b6f:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
    9b75:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9b79:	c7 40 04 00 00 00 00 	mov    DWORD PTR [rax+0x4],0x0
    9b80:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9b84:	48 89 c7             	mov    rdi,rax
    9b87:	e8 c5 fe ff ff       	call   9a51 <void_rule>
    9b8c:	c7 45 88 00 00 00 00 	mov    DWORD PTR [rbp-0x78],0x0
    9b93:	c6 85 7c ff ff ff 00 	mov    BYTE PTR [rbp-0x84],0x0
    9b9a:	c7 45 80 00 00 00 00 	mov    DWORD PTR [rbp-0x80],0x0
    9ba1:	c7 45 84 00 00 00 00 	mov    DWORD PTR [rbp-0x7c],0x0
    9ba8:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9baf:	48 89 c7             	mov    rdi,rax
    9bb2:	e8 b9 8a ff ff       	call   2670 <strlen@plt>
    9bb7:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    9bba:	c6 85 7d ff ff ff 00 	mov    BYTE PTR [rbp-0x83],0x0
    9bc1:	c6 85 7e ff ff ff 00 	mov    BYTE PTR [rbp-0x82],0x0
    9bc8:	c6 85 7f ff ff ff 00 	mov    BYTE PTR [rbp-0x81],0x0
    9bcf:	e9 c4 0d 00 00       	jmp    a998 <line_parser+0xee0>
    9bd4:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9bd7:	48 63 d0             	movsxd rdx,eax
    9bda:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9be1:	48 01 d0             	add    rax,rdx
    9be4:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9be7:	0f be c0             	movsx  eax,al
    9bea:	89 c7                	mov    edi,eax
    9bec:	e8 58 fa ff ff       	call   9649 <delimit>
    9bf1:	83 f0 01             	xor    eax,0x1
    9bf4:	84 c0                	test   al,al
    9bf6:	74 04                	je     9bfc <line_parser+0x144>
    9bf8:	83 45 84 01          	add    DWORD PTR [rbp-0x7c],0x1
    9bfc:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9bff:	48 63 d0             	movsxd rdx,eax
    9c02:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9c09:	48 01 d0             	add    rax,rdx
    9c0c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9c0f:	0f be c0             	movsx  eax,al
    9c12:	89 c7                	mov    edi,eax
    9c14:	e8 30 fa ff ff       	call   9649 <delimit>
    9c19:	84 c0                	test   al,al
    9c1b:	74 3f                	je     9c5c <line_parser+0x1a4>
    9c1d:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9c20:	3b 45 80             	cmp    eax,DWORD PTR [rbp-0x80]
    9c23:	75 37                	jne    9c5c <line_parser+0x1a4>
    9c25:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9c28:	48 63 d0             	movsxd rdx,eax
    9c2b:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9c32:	48 01 d0             	add    rax,rdx
    9c35:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9c38:	3c 3a                	cmp    al,0x3a
    9c3a:	75 11                	jne    9c4d <line_parser+0x195>
    9c3c:	48 8d 3d af 3e 00 00 	lea    rdi,[rip+0x3eaf]        # daf2 <_IO_stdin_used+0x1af2>
    9c43:	b8 00 00 00 00       	mov    eax,0x0
    9c48:	e8 93 88 ff ff       	call   24e0 <printf@plt>
    9c4d:	83 45 84 01          	add    DWORD PTR [rbp-0x7c],0x1
    9c51:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9c54:	89 45 80             	mov    DWORD PTR [rbp-0x80],eax
    9c57:	e9 3c 0d 00 00       	jmp    a998 <line_parser+0xee0>
    9c5c:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9c5f:	48 63 d0             	movsxd rdx,eax
    9c62:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9c69:	48 01 d0             	add    rax,rdx
    9c6c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9c6f:	0f be c0             	movsx  eax,al
    9c72:	89 c7                	mov    edi,eax
    9c74:	e8 d0 f9 ff ff       	call   9649 <delimit>
    9c79:	84 c0                	test   al,al
    9c7b:	74 08                	je     9c85 <line_parser+0x1cd>
    9c7d:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
    9c80:	3b 45 84             	cmp    eax,DWORD PTR [rbp-0x7c]
    9c83:	75 18                	jne    9c9d <line_parser+0x1e5>
    9c85:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9c88:	3b 45 8c             	cmp    eax,DWORD PTR [rbp-0x74]
    9c8b:	0f 85 07 0d 00 00    	jne    a998 <line_parser+0xee0>
    9c91:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
    9c94:	3b 45 84             	cmp    eax,DWORD PTR [rbp-0x7c]
    9c97:	0f 84 fb 0c 00 00    	je     a998 <line_parser+0xee0>
    9c9d:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9ca0:	8d 50 ff             	lea    edx,[rax-0x1]
    9ca3:	8b 4d 80             	mov    ecx,DWORD PTR [rbp-0x80]
    9ca6:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9cad:	89 ce                	mov    esi,ecx
    9caf:	48 89 c7             	mov    rdi,rax
    9cb2:	e8 12 f9 ff ff       	call   95c9 <substr>
    9cb7:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    9cbb:	0f b6 85 7c ff ff ff 	movzx  eax,BYTE PTR [rbp-0x84]
    9cc2:	83 f0 01             	xor    eax,0x1
    9cc5:	84 c0                	test   al,al
    9cc7:	0f 84 ea 02 00 00    	je     9fb7 <line_parser+0x4ff>
    9ccd:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9cd1:	48 8d 35 29 3e 00 00 	lea    rsi,[rip+0x3e29]        # db01 <_IO_stdin_used+0x1b01>
    9cd8:	48 89 c7             	mov    rdi,rax
    9cdb:	e8 10 8b ff ff       	call   27f0 <strcmp@plt>
    9ce0:	85 c0                	test   eax,eax
    9ce2:	75 33                	jne    9d17 <line_parser+0x25f>
    9ce4:	0f b6 85 7d ff ff ff 	movzx  eax,BYTE PTR [rbp-0x83]
    9ceb:	83 f0 01             	xor    eax,0x1
    9cee:	84 c0                	test   al,al
    9cf0:	74 25                	je     9d17 <line_parser+0x25f>
    9cf2:	0f b6 85 7e ff ff ff 	movzx  eax,BYTE PTR [rbp-0x82]
    9cf9:	83 f0 01             	xor    eax,0x1
    9cfc:	84 c0                	test   al,al
    9cfe:	74 17                	je     9d17 <line_parser+0x25f>
    9d00:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9d04:	48 8d 15 9f b7 ff ff 	lea    rdx,[rip+0xffffffffffffb79f]        # 54aa <stdout_alert>
    9d0b:	48 89 90 80 03 00 00 	mov    QWORD PTR [rax+0x380],rdx
    9d12:	e9 5d 0c 00 00       	jmp    a974 <line_parser+0xebc>
    9d17:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9d1b:	48 8d 35 96 3d 00 00 	lea    rsi,[rip+0x3d96]        # dab8 <_IO_stdin_used+0x1ab8>
    9d22:	48 89 c7             	mov    rdi,rax
    9d25:	e8 c6 8a ff ff       	call   27f0 <strcmp@plt>
    9d2a:	85 c0                	test   eax,eax
    9d2c:	74 45                	je     9d73 <line_parser+0x2bb>
    9d2e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9d32:	48 8d 35 7b 3d 00 00 	lea    rsi,[rip+0x3d7b]        # dab4 <_IO_stdin_used+0x1ab4>
    9d39:	48 89 c7             	mov    rdi,rax
    9d3c:	e8 af 8a ff ff       	call   27f0 <strcmp@plt>
    9d41:	85 c0                	test   eax,eax
    9d43:	74 2e                	je     9d73 <line_parser+0x2bb>
    9d45:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9d49:	48 8d 35 6d 3d 00 00 	lea    rsi,[rip+0x3d6d]        # dabd <_IO_stdin_used+0x1abd>
    9d50:	48 89 c7             	mov    rdi,rax
    9d53:	e8 98 8a ff ff       	call   27f0 <strcmp@plt>
    9d58:	85 c0                	test   eax,eax
    9d5a:	74 17                	je     9d73 <line_parser+0x2bb>
    9d5c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9d60:	48 8d 35 5a 3d 00 00 	lea    rsi,[rip+0x3d5a]        # dac1 <_IO_stdin_used+0x1ac1>
    9d67:	48 89 c7             	mov    rdi,rax
    9d6a:	e8 81 8a ff ff       	call   27f0 <strcmp@plt>
    9d6f:	85 c0                	test   eax,eax
    9d71:	75 34                	jne    9da7 <line_parser+0x2ef>
    9d73:	0f b6 85 7e ff ff ff 	movzx  eax,BYTE PTR [rbp-0x82]
    9d7a:	83 f0 01             	xor    eax,0x1
    9d7d:	84 c0                	test   al,al
    9d7f:	74 26                	je     9da7 <line_parser+0x2ef>
    9d81:	0f b6 85 7d ff ff ff 	movzx  eax,BYTE PTR [rbp-0x83]
    9d88:	83 f0 01             	xor    eax,0x1
    9d8b:	84 c0                	test   al,al
    9d8d:	74 18                	je     9da7 <line_parser+0x2ef>
    9d8f:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9d93:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9d97:	48 89 d6             	mov    rsi,rdx
    9d9a:	48 89 c7             	mov    rdi,rax
    9d9d:	e8 ae fa ff ff       	call   9850 <assign_protocol>
    9da2:	e9 cd 0b 00 00       	jmp    a974 <line_parser+0xebc>
    9da7:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9dab:	48 89 c7             	mov    rdi,rax
    9dae:	e8 ac f8 ff ff       	call   965f <isdigit>
    9db3:	84 c0                	test   al,al
    9db5:	75 17                	jne    9dce <line_parser+0x316>
    9db7:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9dbb:	48 8d 35 ee 3c 00 00 	lea    rsi,[rip+0x3cee]        # dab0 <_IO_stdin_used+0x1ab0>
    9dc2:	48 89 c7             	mov    rdi,rax
    9dc5:	e8 26 8a ff ff       	call   27f0 <strcmp@plt>
    9dca:	85 c0                	test   eax,eax
    9dcc:	75 34                	jne    9e02 <line_parser+0x34a>
    9dce:	0f b6 85 7d ff ff ff 	movzx  eax,BYTE PTR [rbp-0x83]
    9dd5:	83 f0 01             	xor    eax,0x1
    9dd8:	84 c0                	test   al,al
    9dda:	74 26                	je     9e02 <line_parser+0x34a>
    9ddc:	0f b6 85 7e ff ff ff 	movzx  eax,BYTE PTR [rbp-0x82]
    9de3:	83 f0 01             	xor    eax,0x1
    9de6:	84 c0                	test   al,al
    9de8:	74 18                	je     9e02 <line_parser+0x34a>
    9dea:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9dee:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9df2:	48 89 d6             	mov    rsi,rdx
    9df5:	48 89 c7             	mov    rdi,rax
    9df8:	e8 9c f9 ff ff       	call   9799 <assign_port_number>
    9dfd:	e9 72 0b 00 00       	jmp    a974 <line_parser+0xebc>
    9e02:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9e06:	ba 08 00 00 00       	mov    edx,0x8
    9e0b:	48 8d 35 f5 3c 00 00 	lea    rsi,[rip+0x3cf5]        # db07 <_IO_stdin_used+0x1b07>
    9e12:	48 89 c7             	mov    rdi,rax
    9e15:	e8 96 87 ff ff       	call   25b0 <strncmp@plt>
    9e1a:	85 c0                	test   eax,eax
    9e1c:	75 75                	jne    9e93 <line_parser+0x3db>
    9e1e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9e22:	48 8d 50 09          	lea    rdx,[rax+0x9]
    9e26:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9e2a:	48 89 d6             	mov    rsi,rdx
    9e2d:	48 89 c7             	mov    rdi,rax
    9e30:	e8 eb 89 ff ff       	call   2820 <strcpy@plt>
    9e35:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9e39:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    9e3c:	85 c0                	test   eax,eax
    9e3e:	75 2e                	jne    9e6e <line_parser+0x3b6>
    9e40:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9e44:	8b 00                	mov    eax,DWORD PTR [rax]
    9e46:	85 c0                	test   eax,eax
    9e48:	75 24                	jne    9e6e <line_parser+0x3b6>
    9e4a:	8b 15 74 01 10 00    	mov    edx,DWORD PTR [rip+0x100174]        # 109fc4 <homenet>
    9e50:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9e54:	89 10                	mov    DWORD PTR [rax],edx
    9e56:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9e5a:	48 89 c7             	mov    rdi,rax
    9e5d:	e8 9b f9 ff ff       	call   97fd <check_port_number>
    9e62:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9e66:	89 42 0c             	mov    DWORD PTR [rdx+0xc],eax
    9e69:	e9 06 0b 00 00       	jmp    a974 <line_parser+0xebc>
    9e6e:	8b 15 50 01 10 00    	mov    edx,DWORD PTR [rip+0x100150]        # 109fc4 <homenet>
    9e74:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9e78:	89 50 04             	mov    DWORD PTR [rax+0x4],edx
    9e7b:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9e7f:	48 89 c7             	mov    rdi,rax
    9e82:	e8 76 f9 ff ff       	call   97fd <check_port_number>
    9e87:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9e8b:	89 42 08             	mov    DWORD PTR [rdx+0x8],eax
    9e8e:	e9 e1 0a 00 00       	jmp    a974 <line_parser+0xebc>
    9e93:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9e97:	48 8d 35 72 3c 00 00 	lea    rsi,[rip+0x3c72]        # db10 <_IO_stdin_used+0x1b10>
    9e9e:	48 89 c7             	mov    rdi,rax
    9ea1:	e8 4a 89 ff ff       	call   27f0 <strcmp@plt>
    9ea6:	85 c0                	test   eax,eax
    9ea8:	75 30                	jne    9eda <line_parser+0x422>
    9eaa:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9eae:	8b 10                	mov    edx,DWORD PTR [rax]
    9eb0:	8b 05 0e 01 10 00    	mov    eax,DWORD PTR [rip+0x10010e]        # 109fc4 <homenet>
    9eb6:	39 c2                	cmp    edx,eax
    9eb8:	75 10                	jne    9eca <line_parser+0x412>
    9eba:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9ebe:	c7 40 10 45 00 00 00 	mov    DWORD PTR [rax+0x10],0x45
    9ec5:	e9 aa 0a 00 00       	jmp    a974 <line_parser+0xebc>
    9eca:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9ece:	c7 40 10 46 00 00 00 	mov    DWORD PTR [rax+0x10],0x46
    9ed5:	e9 9a 0a 00 00       	jmp    a974 <line_parser+0xebc>
    9eda:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9ede:	48 8d 35 2e 3c 00 00 	lea    rsi,[rip+0x3c2e]        # db13 <_IO_stdin_used+0x1b13>
    9ee5:	48 89 c7             	mov    rdi,rax
    9ee8:	e8 03 89 ff ff       	call   27f0 <strcmp@plt>
    9eed:	85 c0                	test   eax,eax
    9eef:	75 10                	jne    9f01 <line_parser+0x449>
    9ef1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9ef5:	c7 40 10 47 00 00 00 	mov    DWORD PTR [rax+0x10],0x47
    9efc:	e9 73 0a 00 00       	jmp    a974 <line_parser+0xebc>
    9f01:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9f05:	ba 0c 00 00 00       	mov    edx,0xc
    9f0a:	48 8d 35 05 3c 00 00 	lea    rsi,[rip+0x3c05]        # db16 <_IO_stdin_used+0x1b16>
    9f11:	48 89 c7             	mov    rdi,rax
    9f14:	e8 97 86 ff ff       	call   25b0 <strncmp@plt>
    9f19:	85 c0                	test   eax,eax
    9f1b:	75 7f                	jne    9f9c <line_parser+0x4e4>
    9f1d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9f21:	48 8d 50 0c          	lea    rdx,[rax+0xc]
    9f25:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9f29:	48 89 d6             	mov    rsi,rdx
    9f2c:	48 89 c7             	mov    rdi,rax
    9f2f:	e8 ec 88 ff ff       	call   2820 <strcpy@plt>
    9f34:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9f38:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    9f3b:	85 c0                	test   eax,eax
    9f3d:	75 37                	jne    9f76 <line_parser+0x4be>
    9f3f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9f43:	8b 10                	mov    edx,DWORD PTR [rax]
    9f45:	8b 05 79 00 10 00    	mov    eax,DWORD PTR [rip+0x100079]        # 109fc4 <homenet>
    9f4b:	39 c2                	cmp    edx,eax
    9f4d:	75 27                	jne    9f76 <line_parser+0x4be>
    9f4f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9f53:	c7 40 04 ff ff ff ff 	mov    DWORD PTR [rax+0x4],0xffffffff
    9f5a:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9f5e:	48 83 c0 01          	add    rax,0x1
    9f62:	48 89 c7             	mov    rdi,rax
    9f65:	e8 93 f8 ff ff       	call   97fd <check_port_number>
    9f6a:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9f6e:	89 42 08             	mov    DWORD PTR [rdx+0x8],eax
    9f71:	e9 fe 09 00 00       	jmp    a974 <line_parser+0xebc>
    9f76:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9f7a:	c7 00 ff ff ff ff    	mov    DWORD PTR [rax],0xffffffff
    9f80:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9f84:	48 83 c0 01          	add    rax,0x1
    9f88:	48 89 c7             	mov    rdi,rax
    9f8b:	e8 6d f8 ff ff       	call   97fd <check_port_number>
    9f90:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9f94:	89 42 0c             	mov    DWORD PTR [rdx+0xc],eax
    9f97:	e9 d8 09 00 00       	jmp    a974 <line_parser+0xebc>
    9f9c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9fa0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9fa3:	3c 28                	cmp    al,0x28
    9fa5:	0f 85 c9 09 00 00    	jne    a974 <line_parser+0xebc>
    9fab:	c6 85 7c ff ff ff 01 	mov    BYTE PTR [rbp-0x84],0x1
    9fb2:	e9 e1 09 00 00       	jmp    a998 <line_parser+0xee0>
    9fb7:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9fbb:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9fbe:	3c 28                	cmp    al,0x28
    9fc0:	75 0e                	jne    9fd0 <line_parser+0x518>
    9fc2:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9fc6:	48 83 c0 01          	add    rax,0x1
    9fca:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    9fce:	eb 08                	jmp    9fd8 <line_parser+0x520>
    9fd0:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9fd4:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    9fd8:	80 bd 7d ff ff ff 00 	cmp    BYTE PTR [rbp-0x83],0x0
    9fdf:	0f 84 8e 00 00 00    	je     a073 <line_parser+0x5bb>
    9fe5:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9fe9:	48 89 c7             	mov    rdi,rax
    9fec:	e8 7f 86 ff ff       	call   2670 <strlen@plt>
    9ff1:	48 8d 50 ff          	lea    rdx,[rax-0x1]
    9ff5:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9ff9:	48 01 d0             	add    rax,rdx
    9ffc:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9fff:	3c 3b                	cmp    al,0x3b
    a001:	75 36                	jne    a039 <line_parser+0x581>
    a003:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a007:	48 89 c7             	mov    rdi,rax
    a00a:	e8 61 86 ff ff       	call   2670 <strlen@plt>
    a00f:	48 8d 50 fe          	lea    rdx,[rax-0x2]
    a013:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a017:	48 8d 88 50 01 00 00 	lea    rcx,[rax+0x150]
    a01e:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a022:	48 89 c6             	mov    rsi,rax
    a025:	48 89 cf             	mov    rdi,rcx
    a028:	e8 03 85 ff ff       	call   2530 <strncat@plt>
    a02d:	c6 85 7d ff ff ff 00 	mov    BYTE PTR [rbp-0x83],0x0
    a034:	e9 5f 09 00 00       	jmp    a998 <line_parser+0xee0>
    a039:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a03d:	48 8d 90 50 01 00 00 	lea    rdx,[rax+0x150]
    a044:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a048:	48 89 c6             	mov    rsi,rax
    a04b:	48 89 d7             	mov    rdi,rdx
    a04e:	e8 cd 86 ff ff       	call   2720 <strcat@plt>
    a053:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a057:	48 8d 98 50 01 00 00 	lea    rbx,[rax+0x150]
    a05e:	48 89 df             	mov    rdi,rbx
    a061:	e8 0a 86 ff ff       	call   2670 <strlen@plt>
    a066:	48 01 d8             	add    rax,rbx
    a069:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    a06e:	e9 01 09 00 00       	jmp    a974 <line_parser+0xebc>
    a073:	80 bd 7e ff ff ff 00 	cmp    BYTE PTR [rbp-0x82],0x0
    a07a:	74 7f                	je     a0fb <line_parser+0x643>
    a07c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a080:	48 8d 35 9c 3a 00 00 	lea    rsi,[rip+0x3a9c]        # db23 <_IO_stdin_used+0x1b23>
    a087:	48 89 c7             	mov    rdi,rax
    a08a:	e8 81 86 ff ff       	call   2710 <strstr@plt>
    a08f:	48 85 c0             	test   rax,rax
    a092:	74 33                	je     a0c7 <line_parser+0x60f>
    a094:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a098:	48 89 c7             	mov    rdi,rax
    a09b:	e8 d0 85 ff ff       	call   2670 <strlen@plt>
    a0a0:	48 8d 50 fd          	lea    rdx,[rax-0x3]
    a0a4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a0a8:	48 8d 48 40          	lea    rcx,[rax+0x40]
    a0ac:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a0b0:	48 89 c6             	mov    rsi,rax
    a0b3:	48 89 cf             	mov    rdi,rcx
    a0b6:	e8 75 84 ff ff       	call   2530 <strncat@plt>
    a0bb:	c6 85 7e ff ff ff 00 	mov    BYTE PTR [rbp-0x82],0x0
    a0c2:	e9 d1 08 00 00       	jmp    a998 <line_parser+0xee0>
    a0c7:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a0cb:	48 8d 50 40          	lea    rdx,[rax+0x40]
    a0cf:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a0d3:	48 89 c6             	mov    rsi,rax
    a0d6:	48 89 d7             	mov    rdi,rdx
    a0d9:	e8 42 86 ff ff       	call   2720 <strcat@plt>
    a0de:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a0e2:	48 8d 58 40          	lea    rbx,[rax+0x40]
    a0e6:	48 89 df             	mov    rdi,rbx
    a0e9:	e8 82 85 ff ff       	call   2670 <strlen@plt>
    a0ee:	48 01 d8             	add    rax,rbx
    a0f1:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    a0f6:	e9 79 08 00 00       	jmp    a974 <line_parser+0xebc>
    a0fb:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a0ff:	ba 06 00 00 00       	mov    edx,0x6
    a104:	48 8d 35 1b 3a 00 00 	lea    rsi,[rip+0x3a1b]        # db26 <_IO_stdin_used+0x1b26>
    a10b:	48 89 c7             	mov    rdi,rax
    a10e:	e8 9d 84 ff ff       	call   25b0 <strncmp@plt>
    a113:	85 c0                	test   eax,eax
    a115:	75 37                	jne    a14e <line_parser+0x696>
    a117:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a11b:	48 89 c7             	mov    rdi,rax
    a11e:	e8 4d 85 ff ff       	call   2670 <strlen@plt>
    a123:	48 8d 50 f8          	lea    rdx,[rax-0x8]
    a127:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a12b:	48 8d 48 06          	lea    rcx,[rax+0x6]
    a12f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a133:	48 83 c0 20          	add    rax,0x20
    a137:	48 89 ce             	mov    rsi,rcx
    a13a:	48 89 c7             	mov    rdi,rax
    a13d:	e8 2e 87 ff ff       	call   2870 <strncpy@plt>
    a142:	c6 85 7f ff ff ff 01 	mov    BYTE PTR [rbp-0x81],0x1
    a149:	e9 26 08 00 00       	jmp    a974 <line_parser+0xebc>
    a14e:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a152:	ba 05 00 00 00       	mov    edx,0x5
    a157:	48 8d 35 cf 39 00 00 	lea    rsi,[rip+0x39cf]        # db2d <_IO_stdin_used+0x1b2d>
    a15e:	48 89 c7             	mov    rdi,rax
    a161:	e8 4a 84 ff ff       	call   25b0 <strncmp@plt>
    a166:	85 c0                	test   eax,eax
    a168:	75 4d                	jne    a1b7 <line_parser+0x6ff>
    a16a:	c6 85 7d ff ff ff 01 	mov    BYTE PTR [rbp-0x83],0x1
    a171:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a175:	48 83 c0 05          	add    rax,0x5
    a179:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    a17d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a181:	48 8d 90 50 01 00 00 	lea    rdx,[rax+0x150]
    a188:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    a18c:	48 89 c6             	mov    rsi,rax
    a18f:	48 89 d7             	mov    rdi,rdx
    a192:	e8 89 85 ff ff       	call   2720 <strcat@plt>
    a197:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a19b:	48 8d 98 50 01 00 00 	lea    rbx,[rax+0x150]
    a1a2:	48 89 df             	mov    rdi,rbx
    a1a5:	e8 c6 84 ff ff       	call   2670 <strlen@plt>
    a1aa:	48 01 d8             	add    rax,rbx
    a1ad:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    a1b2:	e9 bd 07 00 00       	jmp    a974 <line_parser+0xebc>
    a1b7:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a1bb:	ba 06 00 00 00       	mov    edx,0x6
    a1c0:	48 8d 35 6c 39 00 00 	lea    rsi,[rip+0x396c]        # db33 <_IO_stdin_used+0x1b33>
    a1c7:	48 89 c7             	mov    rdi,rax
    a1ca:	e8 e1 83 ff ff       	call   25b0 <strncmp@plt>
    a1cf:	85 c0                	test   eax,eax
    a1d1:	75 31                	jne    a204 <line_parser+0x74c>
    a1d3:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a1d7:	48 89 c7             	mov    rdi,rax
    a1da:	e8 42 f8 ff ff       	call   9a21 <sc_strip>
    a1df:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a1e3:	48 83 c0 06          	add    rax,0x6
    a1e7:	48 89 c7             	mov    rdi,rax
    a1ea:	e8 71 85 ff ff       	call   2760 <atoi@plt>
    a1ef:	89 45 ac             	mov    DWORD PTR [rbp-0x54],eax
    a1f2:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a1f6:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    a1f9:	89 90 4c 03 00 00    	mov    DWORD PTR [rax+0x34c],edx
    a1ff:	e9 70 07 00 00       	jmp    a974 <line_parser+0xebc>
    a204:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a208:	ba 05 00 00 00       	mov    edx,0x5
    a20d:	48 8d 35 26 39 00 00 	lea    rsi,[rip+0x3926]        # db3a <_IO_stdin_used+0x1b3a>
    a214:	48 89 c7             	mov    rdi,rax
    a217:	e8 94 83 ff ff       	call   25b0 <strncmp@plt>
    a21c:	85 c0                	test   eax,eax
    a21e:	75 3f                	jne    a25f <line_parser+0x7a7>
    a220:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a224:	48 89 c7             	mov    rdi,rax
    a227:	e8 44 84 ff ff       	call   2670 <strlen@plt>
    a22c:	48 8d 50 fa          	lea    rdx,[rax-0x6]
    a230:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a234:	48 8d 48 05          	lea    rcx,[rax+0x5]
    a238:	48 8d 45 de          	lea    rax,[rbp-0x22]
    a23c:	48 89 ce             	mov    rsi,rcx
    a23f:	48 89 c7             	mov    rdi,rax
    a242:	e8 29 86 ff ff       	call   2870 <strncpy@plt>
    a247:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    a24b:	48 8d 45 de          	lea    rax,[rbp-0x22]
    a24f:	48 89 d6             	mov    rsi,rdx
    a252:	48 89 c7             	mov    rdi,rax
    a255:	e8 a7 f6 ff ff       	call   9901 <get_ruletype>
    a25a:	e9 15 07 00 00       	jmp    a974 <line_parser+0xebc>
    a25f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a263:	ba 08 00 00 00       	mov    edx,0x8
    a268:	48 8d 35 d1 38 00 00 	lea    rsi,[rip+0x38d1]        # db40 <_IO_stdin_used+0x1b40>
    a26f:	48 89 c7             	mov    rdi,rax
    a272:	e8 39 83 ff ff       	call   25b0 <strncmp@plt>
    a277:	85 c0                	test   eax,eax
    a279:	0f 85 8f 00 00 00    	jne    a30e <line_parser+0x856>
    a27f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a283:	48 83 c0 08          	add    rax,0x8
    a287:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    a28b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a28f:	48 8d 35 8d 38 00 00 	lea    rsi,[rip+0x388d]        # db23 <_IO_stdin_used+0x1b23>
    a296:	48 89 c7             	mov    rdi,rax
    a299:	e8 72 84 ff ff       	call   2710 <strstr@plt>
    a29e:	48 85 c0             	test   rax,rax
    a2a1:	74 30                	je     a2d3 <line_parser+0x81b>
    a2a3:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a2a7:	48 89 c7             	mov    rdi,rax
    a2aa:	e8 c1 83 ff ff       	call   2670 <strlen@plt>
    a2af:	48 8d 50 f5          	lea    rdx,[rax-0xb]
    a2b3:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a2b7:	48 8d 48 08          	lea    rcx,[rax+0x8]
    a2bb:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a2bf:	48 83 c0 40          	add    rax,0x40
    a2c3:	48 89 ce             	mov    rsi,rcx
    a2c6:	48 89 c7             	mov    rdi,rax
    a2c9:	e8 a2 85 ff ff       	call   2870 <strncpy@plt>
    a2ce:	e9 a1 06 00 00       	jmp    a974 <line_parser+0xebc>
    a2d3:	c6 85 7e ff ff ff 01 	mov    BYTE PTR [rbp-0x82],0x1
    a2da:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a2de:	48 8d 50 40          	lea    rdx,[rax+0x40]
    a2e2:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a2e6:	48 89 c6             	mov    rsi,rax
    a2e9:	48 89 d7             	mov    rdi,rdx
    a2ec:	e8 2f 84 ff ff       	call   2720 <strcat@plt>
    a2f1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a2f5:	48 8d 58 40          	lea    rbx,[rax+0x40]
    a2f9:	48 89 df             	mov    rdi,rbx
    a2fc:	e8 6f 83 ff ff       	call   2670 <strlen@plt>
    a301:	48 01 d8             	add    rax,rbx
    a304:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    a309:	e9 66 06 00 00       	jmp    a974 <line_parser+0xebc>
    a30e:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a312:	ba 04 00 00 00       	mov    edx,0x4
    a317:	48 8d 35 2b 38 00 00 	lea    rsi,[rip+0x382b]        # db49 <_IO_stdin_used+0x1b49>
    a31e:	48 89 c7             	mov    rdi,rax
    a321:	e8 8a 82 ff ff       	call   25b0 <strncmp@plt>
    a326:	85 c0                	test   eax,eax
    a328:	0f 85 8e 00 00 00    	jne    a3bc <line_parser+0x904>
    a32e:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a332:	48 8d 35 b7 37 00 00 	lea    rsi,[rip+0x37b7]        # daf0 <_IO_stdin_used+0x1af0>
    a339:	48 89 c7             	mov    rdi,rax
    a33c:	e8 4f 85 ff ff       	call   2890 <strcspn@plt>
    a341:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
    a345:	48 01 d0             	add    rax,rdx
    a348:	c6 00 00             	mov    BYTE PTR [rax],0x0
    a34b:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a34f:	48 83 c0 04          	add    rax,0x4
    a353:	48 89 c7             	mov    rdi,rax
    a356:	e8 04 f3 ff ff       	call   965f <isdigit>
    a35b:	84 c0                	test   al,al
    a35d:	74 47                	je     a3a6 <line_parser+0x8ee>
    a35f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a363:	48 83 c0 04          	add    rax,0x4
    a367:	48 89 c7             	mov    rdi,rax
    a36a:	e8 f1 83 ff ff       	call   2760 <atoi@plt>
    a36f:	89 45 a8             	mov    DWORD PTR [rbp-0x58],eax
    a372:	83 7d a8 00          	cmp    DWORD PTR [rbp-0x58],0x0
    a376:	7e 18                	jle    a390 <line_parser+0x8d8>
    a378:	83 7d a8 0a          	cmp    DWORD PTR [rbp-0x58],0xa
    a37c:	7f 12                	jg     a390 <line_parser+0x8d8>
    a37e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a382:	8b 55 a8             	mov    edx,DWORD PTR [rbp-0x58]
    a385:	89 90 4c 01 00 00    	mov    DWORD PTR [rax+0x14c],edx
    a38b:	e9 e4 05 00 00       	jmp    a974 <line_parser+0xebc>
    a390:	48 8d 3d b9 37 00 00 	lea    rdi,[rip+0x37b9]        # db50 <_IO_stdin_used+0x1b50>
    a397:	e8 a4 81 ff ff       	call   2540 <puts@plt>
    a39c:	bf ff ff ff ff       	mov    edi,0xffffffff
    a3a1:	e8 ba 81 ff ff       	call   2560 <exit@plt>
    a3a6:	48 8d 3d cb 37 00 00 	lea    rdi,[rip+0x37cb]        # db78 <_IO_stdin_used+0x1b78>
    a3ad:	e8 8e 81 ff ff       	call   2540 <puts@plt>
    a3b2:	bf ff ff ff ff       	mov    edi,0xffffffff
    a3b7:	e8 a4 81 ff ff       	call   2560 <exit@plt>
    a3bc:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a3c0:	ba 06 00 00 00       	mov    edx,0x6
    a3c5:	48 8d 35 d4 37 00 00 	lea    rsi,[rip+0x37d4]        # dba0 <_IO_stdin_used+0x1ba0>
    a3cc:	48 89 c7             	mov    rdi,rax
    a3cf:	e8 dc 81 ff ff       	call   25b0 <strncmp@plt>
    a3d4:	85 c0                	test   eax,eax
    a3d6:	0f 85 9b 00 00 00    	jne    a477 <line_parser+0x9bf>
    a3dc:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a3e0:	48 89 c7             	mov    rdi,rax
    a3e3:	e8 39 f6 ff ff       	call   9a21 <sc_strip>
    a3e8:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a3ec:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a3f2:	3d 80 00 00 00       	cmp    eax,0x80
    a3f7:	75 58                	jne    a451 <line_parser+0x999>
    a3f9:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a3fd:	48 83 c0 06          	add    rax,0x6
    a401:	ba ff 00 00 00       	mov    edx,0xff
    a406:	be 00 00 00 00       	mov    esi,0x0
    a40b:	48 89 c7             	mov    rdi,rax
    a40e:	e8 b9 f5 ff ff       	call   99cc <numeric_check>
    a413:	89 45 a4             	mov    DWORD PTR [rbp-0x5c],eax
    a416:	83 7d a4 ff          	cmp    DWORD PTR [rbp-0x5c],0xffffffff
    a41a:	75 16                	jne    a432 <line_parser+0x97a>
    a41c:	48 8d 3d 84 37 00 00 	lea    rdi,[rip+0x3784]        # dba7 <_IO_stdin_used+0x1ba7>
    a423:	e8 18 81 ff ff       	call   2540 <puts@plt>
    a428:	bf ff ff ff ff       	mov    edi,0xffffffff
    a42d:	e8 2e 81 ff ff       	call   2560 <exit@plt>
    a432:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
    a435:	89 c2                	mov    edx,eax
    a437:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a43b:	88 90 72 03 00 00    	mov    BYTE PTR [rax+0x372],dl
    a441:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a445:	c6 80 6e 03 00 00 01 	mov    BYTE PTR [rax+0x36e],0x1
    a44c:	e9 23 05 00 00       	jmp    a974 <line_parser+0xebc>
    a451:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a455:	48 83 c0 20          	add    rax,0x20
    a459:	48 89 c6             	mov    rsi,rax
    a45c:	48 8d 3d 5d 37 00 00 	lea    rdi,[rip+0x375d]        # dbc0 <_IO_stdin_used+0x1bc0>
    a463:	b8 00 00 00 00       	mov    eax,0x0
    a468:	e8 73 80 ff ff       	call   24e0 <printf@plt>
    a46d:	bf ff ff ff ff       	mov    edi,0xffffffff
    a472:	e8 e9 80 ff ff       	call   2560 <exit@plt>
    a477:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a47b:	ba 06 00 00 00       	mov    edx,0x6
    a480:	48 8d 35 70 37 00 00 	lea    rsi,[rip+0x3770]        # dbf7 <_IO_stdin_used+0x1bf7>
    a487:	48 89 c7             	mov    rdi,rax
    a48a:	e8 21 81 ff ff       	call   25b0 <strncmp@plt>
    a48f:	85 c0                	test   eax,eax
    a491:	0f 85 86 00 00 00    	jne    a51d <line_parser+0xa65>
    a497:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a49b:	48 89 c7             	mov    rdi,rax
    a49e:	e8 7e f5 ff ff       	call   9a21 <sc_strip>
    a4a3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a4a7:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a4ad:	3d 80 00 00 00       	cmp    eax,0x80
    a4b2:	75 58                	jne    a50c <line_parser+0xa54>
    a4b4:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a4b8:	48 83 c0 06          	add    rax,0x6
    a4bc:	ba ff 00 00 00       	mov    edx,0xff
    a4c1:	be 00 00 00 00       	mov    esi,0x0
    a4c6:	48 89 c7             	mov    rdi,rax
    a4c9:	e8 fe f4 ff ff       	call   99cc <numeric_check>
    a4ce:	89 45 a0             	mov    DWORD PTR [rbp-0x60],eax
    a4d1:	83 7d a0 ff          	cmp    DWORD PTR [rbp-0x60],0xffffffff
    a4d5:	75 16                	jne    a4ed <line_parser+0xa35>
    a4d7:	48 8d 3d 20 37 00 00 	lea    rdi,[rip+0x3720]        # dbfe <_IO_stdin_used+0x1bfe>
    a4de:	e8 5d 80 ff ff       	call   2540 <puts@plt>
    a4e3:	bf ff ff ff ff       	mov    edi,0xffffffff
    a4e8:	e8 73 80 ff ff       	call   2560 <exit@plt>
    a4ed:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    a4f0:	89 c2                	mov    edx,eax
    a4f2:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a4f6:	88 90 73 03 00 00    	mov    BYTE PTR [rax+0x373],dl
    a4fc:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a500:	c6 80 6f 03 00 00 01 	mov    BYTE PTR [rax+0x36f],0x1
    a507:	e9 68 04 00 00       	jmp    a974 <line_parser+0xebc>
    a50c:	48 8d 3d 05 37 00 00 	lea    rdi,[rip+0x3705]        # dc18 <_IO_stdin_used+0x1c18>
    a513:	e8 28 80 ff ff       	call   2540 <puts@plt>
    a518:	e9 57 04 00 00       	jmp    a974 <line_parser+0xebc>
    a51d:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a521:	ba 08 00 00 00       	mov    edx,0x8
    a526:	48 8d 35 1d 37 00 00 	lea    rsi,[rip+0x371d]        # dc4a <_IO_stdin_used+0x1c4a>
    a52d:	48 89 c7             	mov    rdi,rax
    a530:	e8 7b 80 ff ff       	call   25b0 <strncmp@plt>
    a535:	85 c0                	test   eax,eax
    a537:	0f 85 8c 00 00 00    	jne    a5c9 <line_parser+0xb11>
    a53d:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a541:	48 89 c7             	mov    rdi,rax
    a544:	e8 d8 f4 ff ff       	call   9a21 <sc_strip>
    a549:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a54d:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a553:	3d 80 00 00 00       	cmp    eax,0x80
    a558:	75 59                	jne    a5b3 <line_parser+0xafb>
    a55a:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a55e:	48 83 c0 08          	add    rax,0x8
    a562:	ba ff ff 00 00       	mov    edx,0xffff
    a567:	be 00 00 00 00       	mov    esi,0x0
    a56c:	48 89 c7             	mov    rdi,rax
    a56f:	e8 58 f4 ff ff       	call   99cc <numeric_check>
    a574:	89 45 9c             	mov    DWORD PTR [rbp-0x64],eax
    a577:	83 7d 9c ff          	cmp    DWORD PTR [rbp-0x64],0xffffffff
    a57b:	75 16                	jne    a593 <line_parser+0xadb>
    a57d:	48 8d 3d cf 36 00 00 	lea    rdi,[rip+0x36cf]        # dc53 <_IO_stdin_used+0x1c53>
    a584:	e8 b7 7f ff ff       	call   2540 <puts@plt>
    a589:	bf ff ff ff ff       	mov    edi,0xffffffff
    a58e:	e8 cd 7f ff ff       	call   2560 <exit@plt>
    a593:	8b 45 9c             	mov    eax,DWORD PTR [rbp-0x64]
    a596:	89 c2                	mov    edx,eax
    a598:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a59c:	66 89 90 76 03 00 00 	mov    WORD PTR [rax+0x376],dx
    a5a3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a5a7:	c6 80 71 03 00 00 01 	mov    BYTE PTR [rax+0x371],0x1
    a5ae:	e9 c1 03 00 00       	jmp    a974 <line_parser+0xebc>
    a5b3:	48 8d 3d b6 36 00 00 	lea    rdi,[rip+0x36b6]        # dc70 <_IO_stdin_used+0x1c70>
    a5ba:	e8 81 7f ff ff       	call   2540 <puts@plt>
    a5bf:	bf ff ff ff ff       	mov    edi,0xffffffff
    a5c4:	e8 97 7f ff ff       	call   2560 <exit@plt>
    a5c9:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a5cd:	ba 09 00 00 00       	mov    edx,0x9
    a5d2:	48 8d 35 cb 36 00 00 	lea    rsi,[rip+0x36cb]        # dca4 <_IO_stdin_used+0x1ca4>
    a5d9:	48 89 c7             	mov    rdi,rax
    a5dc:	e8 cf 7f ff ff       	call   25b0 <strncmp@plt>
    a5e1:	85 c0                	test   eax,eax
    a5e3:	75 7a                	jne    a65f <line_parser+0xba7>
    a5e5:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a5e9:	48 89 c7             	mov    rdi,rax
    a5ec:	e8 30 f4 ff ff       	call   9a21 <sc_strip>
    a5f1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a5f5:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a5fb:	3d 80 00 00 00       	cmp    eax,0x80
    a600:	0f 85 6e 03 00 00    	jne    a974 <line_parser+0xebc>
    a606:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a60a:	48 83 c0 09          	add    rax,0x9
    a60e:	ba ff ff 00 00       	mov    edx,0xffff
    a613:	be 00 00 00 00       	mov    esi,0x0
    a618:	48 89 c7             	mov    rdi,rax
    a61b:	e8 ac f3 ff ff       	call   99cc <numeric_check>
    a620:	89 45 98             	mov    DWORD PTR [rbp-0x68],eax
    a623:	83 7d 98 ff          	cmp    DWORD PTR [rbp-0x68],0xffffffff
    a627:	75 16                	jne    a63f <line_parser+0xb87>
    a629:	48 8d 3d 7e 36 00 00 	lea    rdi,[rip+0x367e]        # dcae <_IO_stdin_used+0x1cae>
    a630:	e8 0b 7f ff ff       	call   2540 <puts@plt>
    a635:	bf ff ff ff ff       	mov    edi,0xffffffff
    a63a:	e8 21 7f ff ff       	call   2560 <exit@plt>
    a63f:	8b 45 98             	mov    eax,DWORD PTR [rbp-0x68]
    a642:	89 c2                	mov    edx,eax
    a644:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a648:	66 89 90 74 03 00 00 	mov    WORD PTR [rax+0x374],dx
    a64f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a653:	c6 80 70 03 00 00 01 	mov    BYTE PTR [rax+0x370],0x1
    a65a:	e9 15 03 00 00       	jmp    a974 <line_parser+0xebc>
    a65f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a663:	ba 04 00 00 00       	mov    edx,0x4
    a668:	48 8d 35 5b 36 00 00 	lea    rsi,[rip+0x365b]        # dcca <_IO_stdin_used+0x1cca>
    a66f:	48 89 c7             	mov    rdi,rax
    a672:	e8 39 7f ff ff       	call   25b0 <strncmp@plt>
    a677:	85 c0                	test   eax,eax
    a679:	75 64                	jne    a6df <line_parser+0xc27>
    a67b:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a67f:	48 89 c7             	mov    rdi,rax
    a682:	e8 9a f3 ff ff       	call   9a21 <sc_strip>
    a687:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a68b:	48 83 c0 04          	add    rax,0x4
    a68f:	ba ff 00 00 00       	mov    edx,0xff
    a694:	be 00 00 00 00       	mov    esi,0x0
    a699:	48 89 c7             	mov    rdi,rax
    a69c:	e8 2b f3 ff ff       	call   99cc <numeric_check>
    a6a1:	89 45 94             	mov    DWORD PTR [rbp-0x6c],eax
    a6a4:	83 7d 94 ff          	cmp    DWORD PTR [rbp-0x6c],0xffffffff
    a6a8:	75 16                	jne    a6c0 <line_parser+0xc08>
    a6aa:	48 8d 3d 1e 36 00 00 	lea    rdi,[rip+0x361e]        # dccf <_IO_stdin_used+0x1ccf>
    a6b1:	e8 8a 7e ff ff       	call   2540 <puts@plt>
    a6b6:	bf ff ff ff ff       	mov    edi,0xffffffff
    a6bb:	e8 a0 7e ff ff       	call   2560 <exit@plt>
    a6c0:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    a6c3:	89 c2                	mov    edx,eax
    a6c5:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a6c9:	88 90 6c 03 00 00    	mov    BYTE PTR [rax+0x36c],dl
    a6cf:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a6d3:	c6 80 69 03 00 00 01 	mov    BYTE PTR [rax+0x369],0x1
    a6da:	e9 95 02 00 00       	jmp    a974 <line_parser+0xebc>
    a6df:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a6e3:	ba 07 00 00 00       	mov    edx,0x7
    a6e8:	48 8d 35 f2 35 00 00 	lea    rsi,[rip+0x35f2]        # dce1 <_IO_stdin_used+0x1ce1>
    a6ef:	48 89 c7             	mov    rdi,rax
    a6f2:	e8 b9 7e ff ff       	call   25b0 <strncmp@plt>
    a6f7:	85 c0                	test   eax,eax
    a6f9:	75 6e                	jne    a769 <line_parser+0xcb1>
    a6fb:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a6ff:	48 89 c7             	mov    rdi,rax
    a702:	e8 1a f3 ff ff       	call   9a21 <sc_strip>
    a707:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a70b:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a711:	83 f8 7e             	cmp    eax,0x7e
    a714:	75 3d                	jne    a753 <line_parser+0xc9b>
    a716:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a71a:	48 89 c7             	mov    rdi,rax
    a71d:	e8 4e 7f ff ff       	call   2670 <strlen@plt>
    a722:	48 8d 50 f8          	lea    rdx,[rax-0x8]
    a726:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a72a:	48 8d 48 07          	lea    rcx,[rax+0x7]
    a72e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a732:	48 05 53 03 00 00    	add    rax,0x353
    a738:	48 89 ce             	mov    rsi,rcx
    a73b:	48 89 c7             	mov    rdi,rax
    a73e:	e8 2d 81 ff ff       	call   2870 <strncpy@plt>
    a743:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a747:	c6 80 50 03 00 00 01 	mov    BYTE PTR [rax+0x350],0x1
    a74e:	e9 21 02 00 00       	jmp    a974 <line_parser+0xebc>
    a753:	48 8d 3d 96 35 00 00 	lea    rdi,[rip+0x3596]        # dcf0 <_IO_stdin_used+0x1cf0>
    a75a:	e8 e1 7d ff ff       	call   2540 <puts@plt>
    a75f:	bf ff ff ff ff       	mov    edi,0xffffffff
    a764:	e8 f7 7d ff ff       	call   2560 <exit@plt>
    a769:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a76d:	ba 04 00 00 00       	mov    edx,0x4
    a772:	48 8d 35 a8 35 00 00 	lea    rsi,[rip+0x35a8]        # dd21 <_IO_stdin_used+0x1d21>
    a779:	48 89 c7             	mov    rdi,rax
    a77c:	e8 2f 7e ff ff       	call   25b0 <strncmp@plt>
    a781:	85 c0                	test   eax,eax
    a783:	75 78                	jne    a7fd <line_parser+0xd45>
    a785:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a789:	48 89 c7             	mov    rdi,rax
    a78c:	e8 90 f2 ff ff       	call   9a21 <sc_strip>
    a791:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a795:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a79b:	83 f8 7e             	cmp    eax,0x7e
    a79e:	0f 85 d0 01 00 00    	jne    a974 <line_parser+0xebc>
    a7a4:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a7a8:	48 83 c0 04          	add    rax,0x4
    a7ac:	ba ff ff ff ff       	mov    edx,0xffffffff
    a7b1:	be 00 00 00 00       	mov    esi,0x0
    a7b6:	48 89 c7             	mov    rdi,rax
    a7b9:	e8 0e f2 ff ff       	call   99cc <numeric_check>
    a7be:	89 45 90             	mov    DWORD PTR [rbp-0x70],eax
    a7c1:	83 7d 90 ff          	cmp    DWORD PTR [rbp-0x70],0xffffffff
    a7c5:	75 16                	jne    a7dd <line_parser+0xd25>
    a7c7:	48 8d 3d 58 35 00 00 	lea    rdi,[rip+0x3558]        # dd26 <_IO_stdin_used+0x1d26>
    a7ce:	e8 6d 7d ff ff       	call   2540 <puts@plt>
    a7d3:	bf ff ff ff ff       	mov    edi,0xffffffff
    a7d8:	e8 83 7d ff ff       	call   2560 <exit@plt>
    a7dd:	8b 45 90             	mov    eax,DWORD PTR [rbp-0x70]
    a7e0:	89 c2                	mov    edx,eax
    a7e2:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a7e6:	66 89 90 5c 03 00 00 	mov    WORD PTR [rax+0x35c],dx
    a7ed:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a7f1:	c6 80 51 03 00 00 01 	mov    BYTE PTR [rax+0x351],0x1
    a7f8:	e9 77 01 00 00       	jmp    a974 <line_parser+0xebc>
    a7fd:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a801:	ba 06 00 00 00       	mov    edx,0x6
    a806:	48 8d 35 2b 35 00 00 	lea    rsi,[rip+0x352b]        # dd38 <_IO_stdin_used+0x1d38>
    a80d:	48 89 c7             	mov    rdi,rax
    a810:	e8 9b 7d ff ff       	call   25b0 <strncmp@plt>
    a815:	85 c0                	test   eax,eax
    a817:	75 7c                	jne    a895 <line_parser+0xddd>
    a819:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a81d:	48 89 c7             	mov    rdi,rax
    a820:	e8 4b 7e ff ff       	call   2670 <strlen@plt>
    a825:	48 8d 50 f7          	lea    rdx,[rax-0x9]
    a829:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a82d:	48 8d 48 06          	lea    rcx,[rax+0x6]
    a831:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a835:	48 05 10 02 00 00    	add    rax,0x210
    a83b:	48 89 ce             	mov    rsi,rcx
    a83e:	48 89 c7             	mov    rdi,rax
    a841:	e8 2a 80 ff ff       	call   2870 <strncpy@plt>
    a846:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a84a:	48 8d 88 10 02 00 00 	lea    rcx,[rax+0x210]
    a851:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a855:	48 05 d0 01 00 00    	add    rax,0x1d0
    a85b:	ba 00 00 00 00       	mov    edx,0x0
    a860:	48 89 ce             	mov    rsi,rcx
    a863:	48 89 c7             	mov    rdi,rax
    a866:	e8 05 7f ff ff       	call   2770 <regcomp@plt>
    a86b:	85 c0                	test   eax,eax
    a86d:	74 16                	je     a885 <line_parser+0xdcd>
    a86f:	48 8d 3d ca 34 00 00 	lea    rdi,[rip+0x34ca]        # dd40 <_IO_stdin_used+0x1d40>
    a876:	e8 c5 7c ff ff       	call   2540 <puts@plt>
    a87b:	bf ff ff ff ff       	mov    edi,0xffffffff
    a880:	e8 db 7c ff ff       	call   2560 <exit@plt>
    a885:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a889:	c6 80 90 02 00 00 01 	mov    BYTE PTR [rax+0x290],0x1
    a890:	e9 df 00 00 00       	jmp    a974 <line_parser+0xebc>
    a895:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a899:	ba 06 00 00 00       	mov    edx,0x6
    a89e:	48 8d 35 c0 34 00 00 	lea    rsi,[rip+0x34c0]        # dd65 <_IO_stdin_used+0x1d65>
    a8a5:	48 89 c7             	mov    rdi,rax
    a8a8:	e8 03 7d ff ff       	call   25b0 <strncmp@plt>
    a8ad:	85 c0                	test   eax,eax
    a8af:	75 2d                	jne    a8de <line_parser+0xe26>
    a8b1:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a8b5:	48 89 c7             	mov    rdi,rax
    a8b8:	e8 64 f1 ff ff       	call   9a21 <sc_strip>
    a8bd:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a8c1:	48 8d 48 06          	lea    rcx,[rax+0x6]
    a8c5:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a8c9:	ba 01 00 00 00       	mov    edx,0x1
    a8ce:	48 89 ce             	mov    rsi,rcx
    a8d1:	48 89 c7             	mov    rdi,rax
    a8d4:	e8 98 03 00 00       	call   ac71 <d_op_parser>
    a8d9:	e9 96 00 00 00       	jmp    a974 <line_parser+0xebc>
    a8de:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a8e2:	ba 07 00 00 00       	mov    edx,0x7
    a8e7:	48 8d 35 7e 34 00 00 	lea    rsi,[rip+0x347e]        # dd6c <_IO_stdin_used+0x1d6c>
    a8ee:	48 89 c7             	mov    rdi,rax
    a8f1:	e8 ba 7c ff ff       	call   25b0 <strncmp@plt>
    a8f6:	85 c0                	test   eax,eax
    a8f8:	75 27                	jne    a921 <line_parser+0xe69>
    a8fa:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a8fe:	48 89 c7             	mov    rdi,rax
    a901:	e8 1b f1 ff ff       	call   9a21 <sc_strip>
    a906:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a90a:	48 83 c0 07          	add    rax,0x7
    a90e:	48 89 c7             	mov    rdi,rax
    a911:	e8 4a 7e ff ff       	call   2760 <atoi@plt>
    a916:	89 c2                	mov    edx,eax
    a918:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a91c:	89 50 14             	mov    DWORD PTR [rax+0x14],edx
    a91f:	eb 53                	jmp    a974 <line_parser+0xebc>
    a921:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a925:	ba 0b 00 00 00       	mov    edx,0xb
    a92a:	48 8d 35 43 34 00 00 	lea    rsi,[rip+0x3443]        # dd74 <_IO_stdin_used+0x1d74>
    a931:	48 89 c7             	mov    rdi,rax
    a934:	e8 77 7c ff ff       	call   25b0 <strncmp@plt>
    a939:	85 c0                	test   eax,eax
    a93b:	75 10                	jne    a94d <line_parser+0xe95>
    a93d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a941:	c7 80 48 03 00 00 01 	mov    DWORD PTR [rax+0x348],0x1
    a948:	00 00 00 
    a94b:	eb 27                	jmp    a974 <line_parser+0xebc>
    a94d:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a951:	ba 09 00 00 00       	mov    edx,0x9
    a956:	48 8d 35 23 34 00 00 	lea    rsi,[rip+0x3423]        # dd80 <_IO_stdin_used+0x1d80>
    a95d:	48 89 c7             	mov    rdi,rax
    a960:	e8 4b 7c ff ff       	call   25b0 <strncmp@plt>
    a965:	85 c0                	test   eax,eax
    a967:	75 0b                	jne    a974 <line_parser+0xebc>
    a969:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a96d:	c6 80 48 01 00 00 01 	mov    BYTE PTR [rax+0x148],0x1
    a974:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    a977:	89 45 80             	mov    DWORD PTR [rbp-0x80],eax
    a97a:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a97e:	48 89 c7             	mov    rdi,rax
    a981:	e8 ea 7c ff ff       	call   2670 <strlen@plt>
    a986:	48 8d 50 ff          	lea    rdx,[rax-0x1]
    a98a:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a98e:	48 01 d0             	add    rax,rdx
    a991:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    a994:	3c 29                	cmp    al,0x29
    a996:	74 3d                	je     a9d5 <line_parser+0xf1d>
    a998:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    a99b:	3b 45 8c             	cmp    eax,DWORD PTR [rbp-0x74]
    a99e:	7f 0c                	jg     a9ac <line_parser+0xef4>
    a9a0:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
    a9a3:	3b 45 84             	cmp    eax,DWORD PTR [rbp-0x7c]
    a9a6:	0f 8e 28 f2 ff ff    	jle    9bd4 <line_parser+0x11c>
    a9ac:	0f b6 85 7f ff ff ff 	movzx  eax,BYTE PTR [rbp-0x81]
    a9b3:	83 f0 01             	xor    eax,0x1
    a9b6:	84 c0                	test   al,al
    a9b8:	74 1c                	je     a9d6 <line_parser+0xf1e>
    a9ba:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a9be:	48 83 c0 20          	add    rax,0x20
    a9c2:	48 bb 55 6e 74 69 74 	movabs rbx,0x64656c7469746e55
    a9c9:	6c 65 64 
    a9cc:	48 89 18             	mov    QWORD PTR [rax],rbx
    a9cf:	c6 40 08 00          	mov    BYTE PTR [rax+0x8],0x0
    a9d3:	eb 01                	jmp    a9d6 <line_parser+0xf1e>
    a9d5:	90                   	nop
    a9d6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a9da:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    a9e1:	00 00 
    a9e3:	74 05                	je     a9ea <line_parser+0xf32>
    a9e5:	e8 f6 7d ff ff       	call   27e0 <__stack_chk_fail@plt>
    a9ea:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    a9ee:	c9                   	leave  
    a9ef:	c3                   	ret    

000000000000a9f0 <rule_processor>:
    a9f0:	f3 0f 1e fa          	endbr64 
    a9f4:	55                   	push   rbp
    a9f5:	48 89 e5             	mov    rbp,rsp
    a9f8:	48 83 ec 10          	sub    rsp,0x10
    a9fc:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    aa03:	eb 22                	jmp    aa27 <rule_processor+0x37>
    aa05:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    aa08:	48 98                	cdqe   
    aa0a:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    aa11:	48 8d 15 c8 68 00 00 	lea    rdx,[rip+0x68c8]        # 112e0 <rules>
    aa18:	48 01 d0             	add    rax,rdx
    aa1b:	48 89 c7             	mov    rdi,rax
    aa1e:	e8 13 00 00 00       	call   aa36 <process_rule>
    aa23:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    aa27:	8b 05 e7 65 00 00    	mov    eax,DWORD PTR [rip+0x65e7]        # 11014 <num_rules>
    aa2d:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    aa30:	7e d3                	jle    aa05 <rule_processor+0x15>
    aa32:	90                   	nop
    aa33:	90                   	nop
    aa34:	c9                   	leave  
    aa35:	c3                   	ret    

000000000000aa36 <process_rule>:
    aa36:	f3 0f 1e fa          	endbr64 
    aa3a:	55                   	push   rbp
    aa3b:	48 89 e5             	mov    rbp,rsp
    aa3e:	41 57                	push   r15
    aa40:	41 56                	push   r14
    aa42:	41 54                	push   r12
    aa44:	53                   	push   rbx
    aa45:	48 83 ec 40          	sub    rsp,0x40
    aa49:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    aa4d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    aa54:	00 00 
    aa56:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    aa5a:	31 c0                	xor    eax,eax
    aa5c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    aa60:	0f b6 80 90 02 00 00 	movzx  eax,BYTE PTR [rax+0x290]
    aa67:	83 f0 01             	xor    eax,0x1
    aa6a:	84 c0                	test   al,al
    aa6c:	0f 84 dd 01 00 00    	je     ac4f <process_rule+0x219>
    aa72:	48 89 e0             	mov    rax,rsp
    aa75:	49 89 c4             	mov    r12,rax
    aa78:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    aa7c:	48 83 c0 40          	add    rax,0x40
    aa80:	48 89 c7             	mov    rdi,rax
    aa83:	e8 e8 7b ff ff       	call   2670 <strlen@plt>
    aa88:	48 83 c0 01          	add    rax,0x1
    aa8c:	48 01 c0             	add    rax,rax
    aa8f:	48 89 c2             	mov    rdx,rax
    aa92:	48 83 ea 01          	sub    rdx,0x1
    aa96:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    aa9a:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    aa9e:	48 c7 45 a8 00 00 00 	mov    QWORD PTR [rbp-0x58],0x0
    aaa5:	00 
    aaa6:	49 89 c6             	mov    r14,rax
    aaa9:	41 bf 00 00 00 00    	mov    r15d,0x0
    aaaf:	ba 10 00 00 00       	mov    edx,0x10
    aab4:	48 83 ea 01          	sub    rdx,0x1
    aab8:	48 01 d0             	add    rax,rdx
    aabb:	bb 10 00 00 00       	mov    ebx,0x10
    aac0:	ba 00 00 00 00       	mov    edx,0x0
    aac5:	48 f7 f3             	div    rbx
    aac8:	48 6b c0 10          	imul   rax,rax,0x10
    aacc:	48 89 c1             	mov    rcx,rax
    aacf:	48 81 e1 00 f0 ff ff 	and    rcx,0xfffffffffffff000
    aad6:	48 89 e2             	mov    rdx,rsp
    aad9:	48 29 ca             	sub    rdx,rcx
    aadc:	48 39 d4             	cmp    rsp,rdx
    aadf:	74 12                	je     aaf3 <process_rule+0xbd>
    aae1:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    aae8:	48 83 8c 24 f8 0f 00 	or     QWORD PTR [rsp+0xff8],0x0
    aaef:	00 00 
    aaf1:	eb e9                	jmp    aadc <process_rule+0xa6>
    aaf3:	48 89 c2             	mov    rdx,rax
    aaf6:	81 e2 ff 0f 00 00    	and    edx,0xfff
    aafc:	48 29 d4             	sub    rsp,rdx
    aaff:	48 89 c2             	mov    rdx,rax
    ab02:	81 e2 ff 0f 00 00    	and    edx,0xfff
    ab08:	48 85 d2             	test   rdx,rdx
    ab0b:	74 10                	je     ab1d <process_rule+0xe7>
    ab0d:	25 ff 0f 00 00       	and    eax,0xfff
    ab12:	48 83 e8 08          	sub    rax,0x8
    ab16:	48 01 e0             	add    rax,rsp
    ab19:	48 83 08 00          	or     QWORD PTR [rax],0x0
    ab1d:	48 89 e0             	mov    rax,rsp
    ab20:	48 83 c0 00          	add    rax,0x0
    ab24:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    ab28:	c7 45 c0 00 00 00 00 	mov    DWORD PTR [rbp-0x40],0x0
    ab2f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ab33:	48 8d 50 40          	lea    rdx,[rax+0x40]
    ab37:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ab3b:	48 05 c8 02 00 00    	add    rax,0x2c8
    ab41:	48 89 d6             	mov    rsi,rdx
    ab44:	48 89 c7             	mov    rdi,rax
    ab47:	e8 d4 7c ff ff       	call   2820 <strcpy@plt>
    ab4c:	c7 45 c4 00 00 00 00 	mov    DWORD PTR [rbp-0x3c],0x0
    ab53:	e9 a4 00 00 00       	jmp    abfc <process_rule+0x1c6>
    ab58:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    ab5c:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    ab5f:	48 98                	cdqe   
    ab61:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    ab66:	3c 7c                	cmp    al,0x7c
    ab68:	75 18                	jne    ab82 <process_rule+0x14c>
    ab6a:	83 7d c0 00          	cmp    DWORD PTR [rbp-0x40],0x0
    ab6e:	74 09                	je     ab79 <process_rule+0x143>
    ab70:	c7 45 c0 00 00 00 00 	mov    DWORD PTR [rbp-0x40],0x0
    ab77:	eb 7f                	jmp    abf8 <process_rule+0x1c2>
    ab79:	c7 45 c0 01 00 00 00 	mov    DWORD PTR [rbp-0x40],0x1
    ab80:	eb 76                	jmp    abf8 <process_rule+0x1c2>
    ab82:	83 7d c0 01          	cmp    DWORD PTR [rbp-0x40],0x1
    ab86:	75 3a                	jne    abc2 <process_rule+0x18c>
    ab88:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    ab8c:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    ab8f:	48 98                	cdqe   
    ab91:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    ab96:	0f be c0             	movsx  eax,al
    ab99:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
    ab9c:	48 63 d2             	movsxd rdx,edx
    ab9f:	48 8d 4a ff          	lea    rcx,[rdx-0x1]
    aba3:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    aba7:	48 01 d1             	add    rcx,rdx
    abaa:	89 c2                	mov    edx,eax
    abac:	48 8d 35 d7 31 00 00 	lea    rsi,[rip+0x31d7]        # dd8a <_IO_stdin_used+0x1d8a>
    abb3:	48 89 cf             	mov    rdi,rcx
    abb6:	b8 00 00 00 00       	mov    eax,0x0
    abbb:	e8 f0 7a ff ff       	call   26b0 <sprintf@plt>
    abc0:	eb 36                	jmp    abf8 <process_rule+0x1c2>
    abc2:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    abc6:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    abc9:	48 98                	cdqe   
    abcb:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    abd0:	0f be c0             	movsx  eax,al
    abd3:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
    abd6:	01 d2                	add    edx,edx
    abd8:	48 63 ca             	movsxd rcx,edx
    abdb:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    abdf:	48 01 d1             	add    rcx,rdx
    abe2:	89 c2                	mov    edx,eax
    abe4:	48 8d 35 a2 31 00 00 	lea    rsi,[rip+0x31a2]        # dd8d <_IO_stdin_used+0x1d8d>
    abeb:	48 89 cf             	mov    rdi,rcx
    abee:	b8 00 00 00 00       	mov    eax,0x0
    abf3:	e8 b8 7a ff ff       	call   26b0 <sprintf@plt>
    abf8:	83 45 c4 01          	add    DWORD PTR [rbp-0x3c],0x1
    abfc:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    abff:	48 63 d8             	movsxd rbx,eax
    ac02:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ac06:	48 83 c0 40          	add    rax,0x40
    ac0a:	48 89 c7             	mov    rdi,rax
    ac0d:	e8 5e 7a ff ff       	call   2670 <strlen@plt>
    ac12:	48 39 c3             	cmp    rbx,rax
    ac15:	0f 82 3d ff ff ff    	jb     ab58 <process_rule+0x122>
    ac1b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ac1f:	48 83 c0 40          	add    rax,0x40
    ac23:	ba ff 00 00 00       	mov    edx,0xff
    ac28:	be 00 00 00 00       	mov    esi,0x0
    ac2d:	48 89 c7             	mov    rdi,rax
    ac30:	e8 bb 78 ff ff       	call   24f0 <memset@plt>
    ac35:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ac39:	48 8d 50 40          	lea    rdx,[rax+0x40]
    ac3d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    ac41:	48 89 c6             	mov    rsi,rax
    ac44:	48 89 d7             	mov    rdi,rdx
    ac47:	e8 d4 7b ff ff       	call   2820 <strcpy@plt>
    ac4c:	4c 89 e4             	mov    rsp,r12
    ac4f:	90                   	nop
    ac50:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ac54:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    ac5b:	00 00 
    ac5d:	74 05                	je     ac64 <process_rule+0x22e>
    ac5f:	e8 7c 7b ff ff       	call   27e0 <__stack_chk_fail@plt>
    ac64:	48 8d 65 e0          	lea    rsp,[rbp-0x20]
    ac68:	5b                   	pop    rbx
    ac69:	41 5c                	pop    r12
    ac6b:	41 5e                	pop    r14
    ac6d:	41 5f                	pop    r15
    ac6f:	5d                   	pop    rbp
    ac70:	c3                   	ret    

000000000000ac71 <d_op_parser>:
    ac71:	f3 0f 1e fa          	endbr64 
    ac75:	55                   	push   rbp
    ac76:	48 89 e5             	mov    rbp,rsp
    ac79:	48 83 ec 20          	sub    rsp,0x20
    ac7d:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    ac81:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    ac85:	89 55 ec             	mov    DWORD PTR [rbp-0x14],edx
    ac88:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ac8c:	48 89 c7             	mov    rdi,rax
    ac8f:	e8 cb e9 ff ff       	call   965f <isdigit>
    ac94:	84 c0                	test   al,al
    ac96:	74 23                	je     acbb <d_op_parser+0x4a>
    ac98:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ac9c:	c7 40 1c a1 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa1
    aca3:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    aca7:	48 89 c7             	mov    rdi,rax
    acaa:	e8 b1 7a ff ff       	call   2760 <atoi@plt>
    acaf:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    acb3:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    acb6:	e9 59 01 00 00       	jmp    ae14 <d_op_parser+0x1a3>
    acbb:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    acbf:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    acc2:	0f b6 15 cb 30 00 00 	movzx  edx,BYTE PTR [rip+0x30cb]        # dd94 <_IO_stdin_used+0x1d94>
    acc9:	0f b6 c0             	movzx  eax,al
    accc:	0f b6 d2             	movzx  edx,dl
    accf:	29 d0                	sub    eax,edx
    acd1:	85 c0                	test   eax,eax
    acd3:	75 27                	jne    acfc <d_op_parser+0x8b>
    acd5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    acd9:	c7 40 1c a4 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa4
    ace0:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ace4:	48 83 c0 01          	add    rax,0x1
    ace8:	48 89 c7             	mov    rdi,rax
    aceb:	e8 70 7a ff ff       	call   2760 <atoi@plt>
    acf0:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    acf4:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    acf7:	e9 18 01 00 00       	jmp    ae14 <d_op_parser+0x1a3>
    acfc:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad00:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    ad03:	0f b6 15 8c 30 00 00 	movzx  edx,BYTE PTR [rip+0x308c]        # dd96 <_IO_stdin_used+0x1d96>
    ad0a:	0f b6 c0             	movzx  eax,al
    ad0d:	0f b6 d2             	movzx  edx,dl
    ad10:	29 d0                	sub    eax,edx
    ad12:	85 c0                	test   eax,eax
    ad14:	75 27                	jne    ad3d <d_op_parser+0xcc>
    ad16:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad1a:	c7 40 1c a2 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa2
    ad21:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad25:	48 83 c0 01          	add    rax,0x1
    ad29:	48 89 c7             	mov    rdi,rax
    ad2c:	e8 2f 7a ff ff       	call   2760 <atoi@plt>
    ad31:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ad35:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    ad38:	e9 d7 00 00 00       	jmp    ae14 <d_op_parser+0x1a3>
    ad3d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad41:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    ad44:	0f b6 15 4d 30 00 00 	movzx  edx,BYTE PTR [rip+0x304d]        # dd98 <_IO_stdin_used+0x1d98>
    ad4b:	0f b6 c0             	movzx  eax,al
    ad4e:	0f b6 d2             	movzx  edx,dl
    ad51:	29 d0                	sub    eax,edx
    ad53:	85 c0                	test   eax,eax
    ad55:	75 27                	jne    ad7e <d_op_parser+0x10d>
    ad57:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad5b:	c7 40 1c a6 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa6
    ad62:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad66:	48 83 c0 01          	add    rax,0x1
    ad6a:	48 89 c7             	mov    rdi,rax
    ad6d:	e8 ee 79 ff ff       	call   2760 <atoi@plt>
    ad72:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ad76:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    ad79:	e9 96 00 00 00       	jmp    ae14 <d_op_parser+0x1a3>
    ad7e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad82:	ba 02 00 00 00       	mov    edx,0x2
    ad87:	48 8d 35 0c 30 00 00 	lea    rsi,[rip+0x300c]        # dd9a <_IO_stdin_used+0x1d9a>
    ad8e:	48 89 c7             	mov    rdi,rax
    ad91:	e8 1a 78 ff ff       	call   25b0 <strncmp@plt>
    ad96:	85 c0                	test   eax,eax
    ad98:	75 24                	jne    adbe <d_op_parser+0x14d>
    ad9a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad9e:	c7 40 1c a3 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa3
    ada5:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ada9:	48 83 c0 02          	add    rax,0x2
    adad:	48 89 c7             	mov    rdi,rax
    adb0:	e8 ab 79 ff ff       	call   2760 <atoi@plt>
    adb5:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    adb9:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    adbc:	eb 56                	jmp    ae14 <d_op_parser+0x1a3>
    adbe:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    adc2:	ba 02 00 00 00       	mov    edx,0x2
    adc7:	48 8d 35 cf 2f 00 00 	lea    rsi,[rip+0x2fcf]        # dd9d <_IO_stdin_used+0x1d9d>
    adce:	48 89 c7             	mov    rdi,rax
    add1:	e8 da 77 ff ff       	call   25b0 <strncmp@plt>
    add6:	85 c0                	test   eax,eax
    add8:	75 24                	jne    adfe <d_op_parser+0x18d>
    adda:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    adde:	c7 40 1c a5 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa5
    ade5:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ade9:	48 83 c0 02          	add    rax,0x2
    aded:	48 89 c7             	mov    rdi,rax
    adf0:	e8 6b 79 ff ff       	call   2760 <atoi@plt>
    adf5:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    adf9:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    adfc:	eb 16                	jmp    ae14 <d_op_parser+0x1a3>
    adfe:	48 8d 3d 9b 2f 00 00 	lea    rdi,[rip+0x2f9b]        # dda0 <_IO_stdin_used+0x1da0>
    ae05:	e8 36 77 ff ff       	call   2540 <puts@plt>
    ae0a:	bf ff ff ff ff       	mov    edi,0xffffffff
    ae0f:	e8 4c 77 ff ff       	call   2560 <exit@plt>
    ae14:	c9                   	leave  
    ae15:	c3                   	ret    

000000000000ae16 <d_engine>:
    ae16:	f3 0f 1e fa          	endbr64 
    ae1a:	55                   	push   rbp
    ae1b:	48 89 e5             	mov    rbp,rsp
    ae1e:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    ae22:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    ae26:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae2a:	8b 40 1c             	mov    eax,DWORD PTR [rax+0x1c]
    ae2d:	83 f8 ff             	cmp    eax,0xffffffff
    ae30:	75 0a                	jne    ae3c <d_engine+0x26>
    ae32:	b8 01 00 00 00       	mov    eax,0x1
    ae37:	e9 ea 00 00 00       	jmp    af26 <d_engine+0x110>
    ae3c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae40:	8b 40 1c             	mov    eax,DWORD PTR [rax+0x1c]
    ae43:	2d a1 00 00 00       	sub    eax,0xa1
    ae48:	83 f8 05             	cmp    eax,0x5
    ae4b:	0f 87 d0 00 00 00    	ja     af21 <d_engine+0x10b>
    ae51:	89 c0                	mov    eax,eax
    ae53:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    ae5a:	00 
    ae5b:	48 8d 05 56 2f 00 00 	lea    rax,[rip+0x2f56]        # ddb8 <_IO_stdin_used+0x1db8>
    ae62:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    ae65:	48 98                	cdqe   
    ae67:	48 8d 15 4a 2f 00 00 	lea    rdx,[rip+0x2f4a]        # ddb8 <_IO_stdin_used+0x1db8>
    ae6e:	48 01 d0             	add    rax,rdx
    ae71:	3e ff e0             	notrack jmp rax
    ae74:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae78:	8b 50 18             	mov    edx,DWORD PTR [rax+0x18]
    ae7b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ae7f:	8b 40 34             	mov    eax,DWORD PTR [rax+0x34]
    ae82:	39 c2                	cmp    edx,eax
    ae84:	0f 85 87 00 00 00    	jne    af11 <d_engine+0xfb>
    ae8a:	b8 01 00 00 00       	mov    eax,0x1
    ae8f:	e9 92 00 00 00       	jmp    af26 <d_engine+0x110>
    ae94:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ae98:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    ae9b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae9f:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    aea2:	39 c2                	cmp    edx,eax
    aea4:	76 6e                	jbe    af14 <d_engine+0xfe>
    aea6:	b8 01 00 00 00       	mov    eax,0x1
    aeab:	eb 79                	jmp    af26 <d_engine+0x110>
    aead:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    aeb1:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    aeb4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aeb8:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    aebb:	39 c2                	cmp    edx,eax
    aebd:	72 58                	jb     af17 <d_engine+0x101>
    aebf:	b8 01 00 00 00       	mov    eax,0x1
    aec4:	eb 60                	jmp    af26 <d_engine+0x110>
    aec6:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    aeca:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    aecd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aed1:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    aed4:	39 c2                	cmp    edx,eax
    aed6:	73 42                	jae    af1a <d_engine+0x104>
    aed8:	b8 01 00 00 00       	mov    eax,0x1
    aedd:	eb 47                	jmp    af26 <d_engine+0x110>
    aedf:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    aee3:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    aee6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aeea:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    aeed:	39 c2                	cmp    edx,eax
    aeef:	77 2c                	ja     af1d <d_engine+0x107>
    aef1:	b8 01 00 00 00       	mov    eax,0x1
    aef6:	eb 2e                	jmp    af26 <d_engine+0x110>
    aef8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    aefc:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    aeff:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    af03:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    af06:	39 c2                	cmp    edx,eax
    af08:	74 16                	je     af20 <d_engine+0x10a>
    af0a:	b8 01 00 00 00       	mov    eax,0x1
    af0f:	eb 15                	jmp    af26 <d_engine+0x110>
    af11:	90                   	nop
    af12:	eb 0d                	jmp    af21 <d_engine+0x10b>
    af14:	90                   	nop
    af15:	eb 0a                	jmp    af21 <d_engine+0x10b>
    af17:	90                   	nop
    af18:	eb 07                	jmp    af21 <d_engine+0x10b>
    af1a:	90                   	nop
    af1b:	eb 04                	jmp    af21 <d_engine+0x10b>
    af1d:	90                   	nop
    af1e:	eb 01                	jmp    af21 <d_engine+0x10b>
    af20:	90                   	nop
    af21:	b8 00 00 00 00       	mov    eax,0x0
    af26:	5d                   	pop    rbp
    af27:	c3                   	ret    

000000000000af28 <homenet_toi>:
    af28:	f3 0f 1e fa          	endbr64 
    af2c:	55                   	push   rbp
    af2d:	48 89 e5             	mov    rbp,rsp
    af30:	53                   	push   rbx
    af31:	48 83 ec 38          	sub    rsp,0x38
    af35:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    af39:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    af40:	00 00 
    af42:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    af46:	31 c0                	xor    eax,eax
    af48:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    af4c:	48 8d 35 7d 2e 00 00 	lea    rsi,[rip+0x2e7d]        # ddd0 <_IO_stdin_used+0x1dd0>
    af53:	48 89 c7             	mov    rdi,rax
    af56:	e8 d5 78 ff ff       	call   2830 <strtok@plt>
    af5b:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    af5f:	eb 4c                	jmp    afad <homenet_toi+0x85>
    af61:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    af65:	48 89 c7             	mov    rdi,rax
    af68:	e8 f3 77 ff ff       	call   2760 <atoi@plt>
    af6d:	89 c3                	mov    ebx,eax
    af6f:	48 8d 45 df          	lea    rax,[rbp-0x21]
    af73:	48 89 c7             	mov    rdi,rax
    af76:	e8 f5 76 ff ff       	call   2670 <strlen@plt>
    af7b:	48 8d 55 df          	lea    rdx,[rbp-0x21]
    af7f:	48 01 d0             	add    rax,rdx
    af82:	89 da                	mov    edx,ebx
    af84:	48 8d 35 47 2e 00 00 	lea    rsi,[rip+0x2e47]        # ddd2 <_IO_stdin_used+0x1dd2>
    af8b:	48 89 c7             	mov    rdi,rax
    af8e:	b8 00 00 00 00       	mov    eax,0x0
    af93:	e8 18 77 ff ff       	call   26b0 <sprintf@plt>
    af98:	48 8d 35 31 2e 00 00 	lea    rsi,[rip+0x2e31]        # ddd0 <_IO_stdin_used+0x1dd0>
    af9f:	bf 00 00 00 00       	mov    edi,0x0
    afa4:	e8 87 78 ff ff       	call   2830 <strtok@plt>
    afa9:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    afad:	48 83 7d d0 00       	cmp    QWORD PTR [rbp-0x30],0x0
    afb2:	75 ad                	jne    af61 <homenet_toi+0x39>
    afb4:	48 8d 45 df          	lea    rax,[rbp-0x21]
    afb8:	ba 10 00 00 00       	mov    edx,0x10
    afbd:	be 00 00 00 00       	mov    esi,0x0
    afc2:	48 89 c7             	mov    rdi,rax
    afc5:	e8 76 77 ff ff       	call   2740 <strtol@plt>
    afca:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    afce:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    afd5:	00 00 
    afd7:	74 05                	je     afde <homenet_toi+0xb6>
    afd9:	e8 02 78 ff ff       	call   27e0 <__stack_chk_fail@plt>
    afde:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    afe2:	c9                   	leave  
    afe3:	c3                   	ret    

000000000000afe4 <tcp_check_sum_passed>:
    afe4:	f3 0f 1e fa          	endbr64 
    afe8:	55                   	push   rbp
    afe9:	48 89 e5             	mov    rbp,rsp
    afec:	41 54                	push   r12
    afee:	53                   	push   rbx
    afef:	48 83 ec 30          	sub    rsp,0x30
    aff3:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    aff7:	48 89 75 c0          	mov    QWORD PTR [rbp-0x40],rsi
    affb:	bb 00 00 00 00       	mov    ebx,0x0
    b000:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    b004:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    b008:	0f b7 c0             	movzx  eax,ax
    b00b:	89 c7                	mov    edi,eax
    b00d:	e8 ae 76 ff ff       	call   26c0 <ntohs@plt>
    b012:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    b016:	0f b6 12             	movzx  edx,BYTE PTR [rdx]
    b019:	83 e2 0f             	and    edx,0xf
    b01c:	0f b6 d2             	movzx  edx,dl
    b01f:	c1 e2 02             	shl    edx,0x2
    b022:	29 d0                	sub    eax,edx
    b024:	66 89 45 de          	mov    WORD PTR [rbp-0x22],ax
    b028:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b02c:	0f b7 40 10          	movzx  eax,WORD PTR [rax+0x10]
    b030:	0f b7 c0             	movzx  eax,ax
    b033:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    b037:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b03b:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    b03f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b043:	66 c7 40 10 00 00    	mov    WORD PTR [rax+0x10],0x0
    b049:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    b04d:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    b050:	c1 e8 10             	shr    eax,0x10
    b053:	89 c0                	mov    eax,eax
    b055:	0f b7 c0             	movzx  eax,ax
    b058:	48 01 c3             	add    rbx,rax
    b05b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    b05f:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    b062:	89 c0                	mov    eax,eax
    b064:	0f b7 c0             	movzx  eax,ax
    b067:	48 01 c3             	add    rbx,rax
    b06a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    b06e:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    b071:	c1 e8 10             	shr    eax,0x10
    b074:	89 c0                	mov    eax,eax
    b076:	0f b7 c0             	movzx  eax,ax
    b079:	48 01 c3             	add    rbx,rax
    b07c:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    b080:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    b083:	89 c0                	mov    eax,eax
    b085:	0f b7 c0             	movzx  eax,ax
    b088:	48 01 c3             	add    rbx,rax
    b08b:	bf 06 00 00 00       	mov    edi,0x6
    b090:	e8 bb 74 ff ff       	call   2550 <htons@plt>
    b095:	0f b7 c0             	movzx  eax,ax
    b098:	48 01 c3             	add    rbx,rax
    b09b:	0f b7 45 de          	movzx  eax,WORD PTR [rbp-0x22]
    b09f:	89 c7                	mov    edi,eax
    b0a1:	e8 aa 74 ff ff       	call   2550 <htons@plt>
    b0a6:	0f b7 c0             	movzx  eax,ax
    b0a9:	48 01 c3             	add    rbx,rax
    b0ac:	eb 1a                	jmp    b0c8 <tcp_check_sum_passed+0xe4>
    b0ae:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b0b2:	48 8d 50 14          	lea    rdx,[rax+0x14]
    b0b6:	48 89 55 c0          	mov    QWORD PTR [rbp-0x40],rdx
    b0ba:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b0bd:	0f b6 c0             	movzx  eax,al
    b0c0:	48 01 c3             	add    rbx,rax
    b0c3:	66 83 6d de 02       	sub    WORD PTR [rbp-0x22],0x2
    b0c8:	66 83 7d de 01       	cmp    WORD PTR [rbp-0x22],0x1
    b0cd:	77 df                	ja     b0ae <tcp_check_sum_passed+0xca>
    b0cf:	66 83 7d de 00       	cmp    WORD PTR [rbp-0x22],0x0
    b0d4:	74 1d                	je     b0f3 <tcp_check_sum_passed+0x10f>
    b0d6:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b0da:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b0dd:	0f b6 c0             	movzx  eax,al
    b0e0:	48 01 c3             	add    rbx,rax
    b0e3:	eb 0e                	jmp    b0f3 <tcp_check_sum_passed+0x10f>
    b0e5:	0f b7 c3             	movzx  eax,bx
    b0e8:	48 c1 eb 10          	shr    rbx,0x10
    b0ec:	48 89 da             	mov    rdx,rbx
    b0ef:	48 8d 1c 10          	lea    rbx,[rax+rdx*1]
    b0f3:	48 89 d8             	mov    rax,rbx
    b0f6:	48 c1 e8 10          	shr    rax,0x10
    b0fa:	48 85 c0             	test   rax,rax
    b0fd:	75 e6                	jne    b0e5 <tcp_check_sum_passed+0x101>
    b0ff:	48 f7 d3             	not    rbx
    b102:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b106:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    b10a:	66 89 50 10          	mov    WORD PTR [rax+0x10],dx
    b10e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b112:	0f b7 40 10          	movzx  eax,WORD PTR [rax+0x10]
    b116:	0f b7 c0             	movzx  eax,ax
    b119:	89 c7                	mov    edi,eax
    b11b:	e8 a0 75 ff ff       	call   26c0 <ntohs@plt>
    b120:	44 0f b7 e0          	movzx  r12d,ax
    b124:	89 d8                	mov    eax,ebx
    b126:	0f b7 c0             	movzx  eax,ax
    b129:	89 c7                	mov    edi,eax
    b12b:	e8 90 75 ff ff       	call   26c0 <ntohs@plt>
    b130:	0f b7 c0             	movzx  eax,ax
    b133:	44 89 e2             	mov    edx,r12d
    b136:	89 c6                	mov    esi,eax
    b138:	48 8d 3d 98 2c 00 00 	lea    rdi,[rip+0x2c98]        # ddd7 <_IO_stdin_used+0x1dd7>
    b13f:	b8 00 00 00 00       	mov    eax,0x0
    b144:	e8 97 73 ff ff       	call   24e0 <printf@plt>
    b149:	89 d8                	mov    eax,ebx
    b14b:	0f b7 c0             	movzx  eax,ax
    b14e:	89 c7                	mov    edi,eax
    b150:	e8 6b 75 ff ff       	call   26c0 <ntohs@plt>
    b155:	89 c3                	mov    ebx,eax
    b157:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    b15b:	0f b7 c0             	movzx  eax,ax
    b15e:	89 c7                	mov    edi,eax
    b160:	e8 5b 75 ff ff       	call   26c0 <ntohs@plt>
    b165:	66 39 c3             	cmp    bx,ax
    b168:	75 07                	jne    b171 <tcp_check_sum_passed+0x18d>
    b16a:	b8 01 00 00 00       	mov    eax,0x1
    b16f:	eb 05                	jmp    b176 <tcp_check_sum_passed+0x192>
    b171:	b8 00 00 00 00       	mov    eax,0x0
    b176:	48 83 c4 30          	add    rsp,0x30
    b17a:	5b                   	pop    rbx
    b17b:	41 5c                	pop    r12
    b17d:	5d                   	pop    rbp
    b17e:	c3                   	ret    

000000000000b17f <run_hello_script>:
    b17f:	f3 0f 1e fa          	endbr64 
    b183:	55                   	push   rbp
    b184:	48 89 e5             	mov    rbp,rsp
    b187:	48 83 ec 10          	sub    rsp,0x10
    b18b:	e8 20 76 ff ff       	call   27b0 <luaL_newstate@plt>
    b190:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b194:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b198:	48 89 c7             	mov    rdi,rax
    b19b:	e8 30 76 ff ff       	call   27d0 <luaL_openlibs@plt>
    b1a0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b1a4:	ba 00 00 00 00       	mov    edx,0x0
    b1a9:	48 8d 35 38 2c 00 00 	lea    rsi,[rip+0x2c38]        # dde8 <_IO_stdin_used+0x1de8>
    b1b0:	48 89 c7             	mov    rdi,rax
    b1b3:	e8 98 75 ff ff       	call   2750 <luaL_loadfilex@plt>
    b1b8:	85 c0                	test   eax,eax
    b1ba:	75 2b                	jne    b1e7 <run_hello_script+0x68>
    b1bc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b1c0:	41 b9 00 00 00 00    	mov    r9d,0x0
    b1c6:	41 b8 00 00 00 00    	mov    r8d,0x0
    b1cc:	b9 00 00 00 00       	mov    ecx,0x0
    b1d1:	ba ff ff ff ff       	mov    edx,0xffffffff
    b1d6:	be 00 00 00 00       	mov    esi,0x0
    b1db:	48 89 c7             	mov    rdi,rax
    b1de:	e8 1d 75 ff ff       	call   2700 <lua_pcallk@plt>
    b1e3:	85 c0                	test   eax,eax
    b1e5:	74 07                	je     b1ee <run_hello_script+0x6f>
    b1e7:	b8 01 00 00 00       	mov    eax,0x1
    b1ec:	eb 05                	jmp    b1f3 <run_hello_script+0x74>
    b1ee:	b8 00 00 00 00       	mov    eax,0x0
    b1f3:	85 c0                	test   eax,eax
    b1f5:	75 1e                	jne    b215 <run_hello_script+0x96>
    b1f7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b1fb:	48 89 c7             	mov    rdi,rax
    b1fe:	e8 9d 75 ff ff       	call   27a0 <lua_gettop@plt>
    b203:	f7 d0                	not    eax
    b205:	89 c2                	mov    edx,eax
    b207:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b20b:	89 d6                	mov    esi,edx
    b20d:	48 89 c7             	mov    rdi,rax
    b210:	e8 1b 74 ff ff       	call   2630 <lua_settop@plt>
    b215:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b219:	48 89 c7             	mov    rdi,rax
    b21c:	e8 1f 76 ff ff       	call   2840 <lua_close@plt>
    b221:	90                   	nop
    b222:	c9                   	leave  
    b223:	c3                   	ret    

000000000000b224 <collect_scripts>:
    b224:	f3 0f 1e fa          	endbr64 
    b228:	55                   	push   rbp
    b229:	48 89 e5             	mov    rbp,rsp
    b22c:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    b233:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b23a:	00 00 
    b23c:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b240:	31 c0                	xor    eax,eax
    b242:	48 8d 35 bd 2b 00 00 	lea    rsi,[rip+0x2bbd]        # de06 <_IO_stdin_used+0x1e06>
    b249:	48 8d 3d b8 2b 00 00 	lea    rdi,[rip+0x2bb8]        # de08 <_IO_stdin_used+0x1e08>
    b250:	e8 7b 73 ff ff       	call   25d0 <fopen@plt>
    b255:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
    b259:	48 83 7d 80 00       	cmp    QWORD PTR [rbp-0x80],0x0
    b25e:	75 16                	jne    b276 <collect_scripts+0x52>
    b260:	48 8d 3d b9 2b 00 00 	lea    rdi,[rip+0x2bb9]        # de20 <_IO_stdin_used+0x1e20>
    b267:	e8 d4 72 ff ff       	call   2540 <puts@plt>
    b26c:	bf ff ff ff ff       	mov    edi,0xffffffff
    b271:	e8 ea 72 ff ff       	call   2560 <exit@plt>
    b276:	48 c7 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],0x0
    b27d:	00 00 00 00 
    b281:	48 8d 45 90          	lea    rax,[rbp-0x70]
    b285:	ba 00 00 00 00       	mov    edx,0x0
    b28a:	48 8d 35 d1 2b 00 00 	lea    rsi,[rip+0x2bd1]        # de62 <_IO_stdin_used+0x1e62>
    b291:	48 89 c7             	mov    rdi,rax
    b294:	e8 d7 74 ff ff       	call   2770 <regcomp@plt>
    b299:	e9 86 00 00 00       	jmp    b324 <collect_scripts+0x100>
    b29e:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b2a5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b2a8:	3c 23                	cmp    al,0x23
    b2aa:	75 02                	jne    b2ae <collect_scripts+0x8a>
    b2ac:	eb 76                	jmp    b324 <collect_scripts+0x100>
    b2ae:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b2b5:	ba 0e 00 00 00       	mov    edx,0xe
    b2ba:	48 8d 35 ab 2b 00 00 	lea    rsi,[rip+0x2bab]        # de6c <_IO_stdin_used+0x1e6c>
    b2c1:	48 89 c7             	mov    rdi,rax
    b2c4:	e8 e7 72 ff ff       	call   25b0 <strncmp@plt>
    b2c9:	85 c0                	test   eax,eax
    b2cb:	75 34                	jne    b301 <collect_scripts+0xdd>
    b2cd:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b2d4:	48 8d 50 0e          	lea    rdx,[rax+0xe]
    b2d8:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b2dc:	48 89 d6             	mov    rsi,rdx
    b2df:	48 89 c7             	mov    rdi,rax
    b2e2:	e8 39 75 ff ff       	call   2820 <strcpy@plt>
    b2e7:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b2eb:	48 8d 35 89 2b 00 00 	lea    rsi,[rip+0x2b89]        # de7b <_IO_stdin_used+0x1e7b>
    b2f2:	48 89 c7             	mov    rdi,rax
    b2f5:	e8 96 75 ff ff       	call   2890 <strcspn@plt>
    b2fa:	c6 44 05 d0 00       	mov    BYTE PTR [rbp+rax*1-0x30],0x0
    b2ff:	eb 23                	jmp    b324 <collect_scripts+0x100>
    b301:	48 8b b5 78 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x88]
    b308:	48 8d 45 90          	lea    rax,[rbp-0x70]
    b30c:	41 b8 00 00 00 00    	mov    r8d,0x0
    b312:	b9 00 00 00 00       	mov    ecx,0x0
    b317:	ba 00 00 00 00       	mov    edx,0x0
    b31c:	48 89 c7             	mov    rdi,rax
    b31f:	e8 bc 72 ff ff       	call   25e0 <regexec@plt>
    b324:	48 8b 55 80          	mov    rdx,QWORD PTR [rbp-0x80]
    b328:	48 8d 8d 70 ff ff ff 	lea    rcx,[rbp-0x90]
    b32f:	48 8d 85 78 ff ff ff 	lea    rax,[rbp-0x88]
    b336:	48 89 ce             	mov    rsi,rcx
    b339:	48 89 c7             	mov    rdi,rax
    b33c:	e8 cf 74 ff ff       	call   2810 <getline@plt>
    b341:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    b345:	48 83 7d 88 ff       	cmp    QWORD PTR [rbp-0x78],0xffffffffffffffff
    b34a:	0f 85 4e ff ff ff    	jne    b29e <collect_scripts+0x7a>
    b350:	90                   	nop
    b351:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b355:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    b35c:	00 00 
    b35e:	74 05                	je     b365 <collect_scripts+0x141>
    b360:	e8 7b 74 ff ff       	call   27e0 <__stack_chk_fail@plt>
    b365:	c9                   	leave  
    b366:	c3                   	ret    

000000000000b367 <ip6decode>:
    b367:	f3 0f 1e fa          	endbr64 
    b36b:	55                   	push   rbp
    b36c:	48 89 e5             	mov    rbp,rsp
    b36f:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    b376:	48 89 bd 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdi
    b37d:	48 89 b5 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rsi
    b384:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b38b:	00 00 
    b38d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b391:	31 c0                	xor    eax,eax
    b393:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b39a:	48 83 c0 0e          	add    rax,0xe
    b39e:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    b3a2:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    b3a6:	48 83 c0 08          	add    rax,0x8
    b3aa:	48 89 c7             	mov    rdi,rax
    b3ad:	e8 8b 7e ff ff       	call   323d <inet6_ntoa>
    b3b2:	48 89 c1             	mov    rcx,rax
    b3b5:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b3b9:	ba 29 00 00 00       	mov    edx,0x29
    b3be:	48 89 ce             	mov    rsi,rcx
    b3c1:	48 89 c7             	mov    rdi,rax
    b3c4:	e8 a7 74 ff ff       	call   2870 <strncpy@plt>
    b3c9:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    b3cd:	48 83 c0 18          	add    rax,0x18
    b3d1:	48 89 c7             	mov    rdi,rax
    b3d4:	e8 64 7e ff ff       	call   323d <inet6_ntoa>
    b3d9:	48 89 c1             	mov    rcx,rax
    b3dc:	48 8d 45 90          	lea    rax,[rbp-0x70]
    b3e0:	ba 29 00 00 00       	mov    edx,0x29
    b3e5:	48 89 ce             	mov    rsi,rcx
    b3e8:	48 89 c7             	mov    rdi,rax
    b3eb:	e8 80 74 ff ff       	call   2870 <strncpy@plt>
    b3f0:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    b3f4:	0f b6 40 06          	movzx  eax,BYTE PTR [rax+0x6]
    b3f8:	0f b6 c0             	movzx  eax,al
    b3fb:	85 c0                	test   eax,eax
    b3fd:	75 1c                	jne    b41b <ip6decode+0xb4>
    b3ff:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    b403:	48 8d 4d c0          	lea    rcx,[rbp-0x40]
    b407:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b40e:	48 89 ce             	mov    rsi,rcx
    b411:	48 89 c7             	mov    rdi,rax
    b414:	e8 bf 86 ff ff       	call   3ad8 <ip6_icmp_decode>
    b419:	eb 28                	jmp    b443 <ip6decode+0xdc>
    b41b:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    b41f:	0f b6 40 06          	movzx  eax,BYTE PTR [rax+0x6]
    b423:	0f b6 c8             	movzx  ecx,al
    b426:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    b42a:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b42e:	48 89 c6             	mov    rsi,rax
    b431:	48 8d 3d 48 2a 00 00 	lea    rdi,[rip+0x2a48]        # de80 <_IO_stdin_used+0x1e80>
    b438:	b8 00 00 00 00       	mov    eax,0x0
    b43d:	e8 9e 70 ff ff       	call   24e0 <printf@plt>
    b442:	90                   	nop
    b443:	90                   	nop
    b444:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b448:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    b44f:	00 00 
    b451:	74 05                	je     b458 <ip6decode+0xf1>
    b453:	e8 88 73 ff ff       	call   27e0 <__stack_chk_fail@plt>
    b458:	c9                   	leave  
    b459:	c3                   	ret    

000000000000b45a <print_mem_map>:
    b45a:	f3 0f 1e fa          	endbr64 
    b45e:	55                   	push   rbp
    b45f:	48 89 e5             	mov    rbp,rsp
    b462:	48 83 ec 10          	sub    rsp,0x10
    b466:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    b46d:	eb 4c                	jmp    b4bb <print_mem_map+0x61>
    b46f:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    b472:	48 63 d0             	movsxd rdx,eax
    b475:	48 89 d0             	mov    rax,rdx
    b478:	48 c1 e0 02          	shl    rax,0x2
    b47c:	48 01 d0             	add    rax,rdx
    b47f:	48 c1 e0 03          	shl    rax,0x3
    b483:	48 8d 15 76 d3 12 00 	lea    rdx,[rip+0x12d376]        # 138800 <fn_mem_map>
    b48a:	48 01 d0             	add    rax,rdx
    b48d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b491:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b495:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    b498:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b49c:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    b49f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b4a3:	48 89 c6             	mov    rsi,rax
    b4a6:	48 8d 3d fb 29 00 00 	lea    rdi,[rip+0x29fb]        # dea8 <_IO_stdin_used+0x1ea8>
    b4ad:	b8 00 00 00 00       	mov    eax,0x0
    b4b2:	e8 29 70 ff ff       	call   24e0 <printf@plt>
    b4b7:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    b4bb:	8b 05 3f fb 12 00    	mov    eax,DWORD PTR [rip+0x12fb3f]        # 13b000 <fn_num>
    b4c1:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    b4c4:	7c a9                	jl     b46f <print_mem_map+0x15>
    b4c6:	90                   	nop
    b4c7:	90                   	nop
    b4c8:	c9                   	leave  
    b4c9:	c3                   	ret    

000000000000b4ca <crash_handler>:
    b4ca:	f3 0f 1e fa          	endbr64 
    b4ce:	55                   	push   rbp
    b4cf:	48 89 e5             	mov    rbp,rsp
    b4d2:	41 54                	push   r12
    b4d4:	53                   	push   rbx
    b4d5:	48 81 ec f0 00 00 00 	sub    rsp,0xf0
    b4dc:	89 bd 0c ff ff ff    	mov    DWORD PTR [rbp-0xf4],edi
    b4e2:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b4e9:	00 00 
    b4eb:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    b4ef:	31 c0                	xor    eax,eax
    b4f1:	48 8d 85 30 ff ff ff 	lea    rax,[rbp-0xd0]
    b4f8:	be 14 00 00 00       	mov    esi,0x14
    b4fd:	48 89 c7             	mov    rdi,rax
    b500:	e8 0b 70 ff ff       	call   2510 <backtrace@plt>
    b505:	89 85 18 ff ff ff    	mov    DWORD PTR [rbp-0xe8],eax
    b50b:	8b 95 18 ff ff ff    	mov    edx,DWORD PTR [rbp-0xe8]
    b511:	48 8d 85 30 ff ff ff 	lea    rax,[rbp-0xd0]
    b518:	89 d6                	mov    esi,edx
    b51a:	48 89 c7             	mov    rdi,rax
    b51d:	e8 2e 71 ff ff       	call   2650 <backtrace_symbols@plt>
    b522:	48 89 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rax
    b529:	b8 00 00 00 00       	mov    eax,0x0
    b52e:	e8 d6 7e ff ff       	call   3409 <get_formated_time>
    b533:	48 89 c6             	mov    rsi,rax
    b536:	48 8d 3d 8b 29 00 00 	lea    rdi,[rip+0x298b]        # dec8 <_IO_stdin_used+0x1ec8>
    b53d:	b8 00 00 00 00       	mov    eax,0x0
    b542:	e8 99 6f ff ff       	call   24e0 <printf@plt>
    b547:	48 8d 3d a9 29 00 00 	lea    rdi,[rip+0x29a9]        # def7 <_IO_stdin_used+0x1ef7>
    b54e:	e8 ed 6f ff ff       	call   2540 <puts@plt>
    b553:	48 83 bd 20 ff ff ff 	cmp    QWORD PTR [rbp-0xe0],0x0
    b55a:	00 
    b55b:	0f 84 6d 01 00 00    	je     b6ce <crash_handler+0x204>
    b561:	c7 85 14 ff ff ff 00 	mov    DWORD PTR [rbp-0xec],0x0
    b568:	00 00 00 
    b56b:	e9 4c 01 00 00       	jmp    b6bc <crash_handler+0x1f2>
    b570:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b576:	48 98                	cdqe   
    b578:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    b57f:	00 
    b580:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b587:	48 01 d0             	add    rax,rdx
    b58a:	48 8b 00             	mov    rax,QWORD PTR [rax]
    b58d:	48 8d 35 77 29 00 00 	lea    rsi,[rip+0x2977]        # df0b <_IO_stdin_used+0x1f0b>
    b594:	48 89 c7             	mov    rdi,rax
    b597:	e8 74 71 ff ff       	call   2710 <strstr@plt>
    b59c:	48 85 c0             	test   rax,rax
    b59f:	0f 85 0f 01 00 00    	jne    b6b4 <crash_handler+0x1ea>
    b5a5:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b5ab:	48 98                	cdqe   
    b5ad:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    b5b4:	00 
    b5b5:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b5bc:	48 01 d0             	add    rax,rdx
    b5bf:	4c 8b 20             	mov    r12,QWORD PTR [rax]
    b5c2:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b5c8:	48 98                	cdqe   
    b5ca:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    b5d1:	00 
    b5d2:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b5d9:	48 01 d0             	add    rax,rdx
    b5dc:	48 8b 00             	mov    rax,QWORD PTR [rax]
    b5df:	be 2b 00 00 00       	mov    esi,0x2b
    b5e4:	48 89 c7             	mov    rdi,rax
    b5e7:	e8 b8 7f ff ff       	call   35a4 <strloc>
    b5ec:	48 98                	cdqe   
    b5ee:	48 83 c0 01          	add    rax,0x1
    b5f2:	49 8d 14 04          	lea    rdx,[r12+rax*1]
    b5f6:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b5fa:	48 8d 35 0e 29 00 00 	lea    rsi,[rip+0x290e]        # df0f <_IO_stdin_used+0x1f0f>
    b601:	48 89 c7             	mov    rdi,rax
    b604:	b8 00 00 00 00       	mov    eax,0x0
    b609:	e8 a2 70 ff ff       	call   26b0 <sprintf@plt>
    b60e:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b612:	be 29 00 00 00       	mov    esi,0x29
    b617:	48 89 c7             	mov    rdi,rax
    b61a:	e8 85 7f ff ff       	call   35a4 <strloc>
    b61f:	48 98                	cdqe   
    b621:	c6 44 05 d0 00       	mov    BYTE PTR [rbp+rax*1-0x30],0x0
    b626:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b62a:	ba 10 00 00 00       	mov    edx,0x10
    b62f:	be 00 00 00 00       	mov    esi,0x0
    b634:	48 89 c7             	mov    rdi,rax
    b637:	e8 04 71 ff ff       	call   2740 <strtol@plt>
    b63c:	89 85 1c ff ff ff    	mov    DWORD PTR [rbp-0xe4],eax
    b642:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [rbp-0xe4]
    b648:	89 c7                	mov    edi,eax
    b64a:	e8 20 01 00 00       	call   b76f <offset_search>
    b64f:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
    b656:	83 bd 1c ff ff ff 00 	cmp    DWORD PTR [rbp-0xe4],0x0
    b65d:	74 3a                	je     b699 <crash_handler+0x1cf>
    b65f:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    b666:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    b669:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    b670:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    b673:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    b67a:	8b b5 1c ff ff ff    	mov    esi,DWORD PTR [rbp-0xe4]
    b680:	41 89 f0             	mov    r8d,esi
    b683:	48 89 c6             	mov    rsi,rax
    b686:	48 8d 3d 8b 28 00 00 	lea    rdi,[rip+0x288b]        # df18 <_IO_stdin_used+0x1f18>
    b68d:	b8 00 00 00 00       	mov    eax,0x0
    b692:	e8 49 6e ff ff       	call   24e0 <printf@plt>
    b697:	eb 1c                	jmp    b6b5 <crash_handler+0x1eb>
    b699:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [rbp-0xe4]
    b69f:	89 c6                	mov    esi,eax
    b6a1:	48 8d 3d a8 28 00 00 	lea    rdi,[rip+0x28a8]        # df50 <_IO_stdin_used+0x1f50>
    b6a8:	b8 00 00 00 00       	mov    eax,0x0
    b6ad:	e8 2e 6e ff ff       	call   24e0 <printf@plt>
    b6b2:	eb 01                	jmp    b6b5 <crash_handler+0x1eb>
    b6b4:	90                   	nop
    b6b5:	83 85 14 ff ff ff 01 	add    DWORD PTR [rbp-0xec],0x1
    b6bc:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b6c2:	3b 85 18 ff ff ff    	cmp    eax,DWORD PTR [rbp-0xe8]
    b6c8:	0f 8c a2 fe ff ff    	jl     b570 <crash_handler+0xa6>
    b6ce:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b6d5:	48 89 c7             	mov    rdi,rax
    b6d8:	e8 83 6f ff ff       	call   2660 <free@plt>
    b6dd:	48 8d 3d 96 28 00 00 	lea    rdi,[rip+0x2896]        # df7a <_IO_stdin_used+0x1f7a>
    b6e4:	e8 57 6e ff ff       	call   2540 <puts@plt>
    b6e9:	89 c6                	mov    esi,eax
    b6eb:	48 8d 3d 97 28 00 00 	lea    rdi,[rip+0x2897]        # df89 <_IO_stdin_used+0x1f89>
    b6f2:	b8 00 00 00 00       	mov    eax,0x0
    b6f7:	e8 e4 6d ff ff       	call   24e0 <printf@plt>
    b6fc:	89 d8                	mov    eax,ebx
    b6fe:	89 c6                	mov    esi,eax
    b700:	48 8d 3d 92 28 00 00 	lea    rdi,[rip+0x2892]        # df99 <_IO_stdin_used+0x1f99>
    b707:	b8 00 00 00 00       	mov    eax,0x0
    b70c:	e8 cf 6d ff ff       	call   24e0 <printf@plt>
    b711:	89 d8                	mov    eax,ebx
    b713:	89 c6                	mov    esi,eax
    b715:	48 8d 3d 8d 28 00 00 	lea    rdi,[rip+0x288d]        # dfa9 <_IO_stdin_used+0x1fa9>
    b71c:	b8 00 00 00 00       	mov    eax,0x0
    b721:	e8 ba 6d ff ff       	call   24e0 <printf@plt>
    b726:	89 c8                	mov    eax,ecx
    b728:	89 c6                	mov    esi,eax
    b72a:	48 8d 3d 88 28 00 00 	lea    rdi,[rip+0x2888]        # dfb9 <_IO_stdin_used+0x1fb9>
    b731:	b8 00 00 00 00       	mov    eax,0x0
    b736:	e8 a5 6d ff ff       	call   24e0 <printf@plt>
    b73b:	89 e0                	mov    eax,esp
    b73d:	89 c6                	mov    esi,eax
    b73f:	48 8d 3d 83 28 00 00 	lea    rdi,[rip+0x2883]        # dfc9 <_IO_stdin_used+0x1fc9>
    b746:	b8 00 00 00 00       	mov    eax,0x0
    b74b:	e8 90 6d ff ff       	call   24e0 <printf@plt>
    b750:	89 e8                	mov    eax,ebp
    b752:	89 c6                	mov    esi,eax
    b754:	48 8d 3d 7e 28 00 00 	lea    rdi,[rip+0x287e]        # dfd9 <_IO_stdin_used+0x1fd9>
    b75b:	b8 00 00 00 00       	mov    eax,0x0
    b760:	e8 7b 6d ff ff       	call   24e0 <printf@plt>
    b765:	bf 01 00 00 00       	mov    edi,0x1
    b76a:	e8 f1 6d ff ff       	call   2560 <exit@plt>

000000000000b76f <offset_search>:
    b76f:	f3 0f 1e fa          	endbr64 
    b773:	55                   	push   rbp
    b774:	48 89 e5             	mov    rbp,rsp
    b777:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    b77a:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    b781:	eb 44                	jmp    b7c7 <offset_search+0x58>
    b783:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    b786:	48 63 d0             	movsxd rdx,eax
    b789:	48 89 d0             	mov    rax,rdx
    b78c:	48 c1 e0 02          	shl    rax,0x2
    b790:	48 01 d0             	add    rax,rdx
    b793:	48 c1 e0 03          	shl    rax,0x3
    b797:	48 8d 15 62 d0 12 00 	lea    rdx,[rip+0x12d062]        # 138800 <fn_mem_map>
    b79e:	48 01 d0             	add    rax,rdx
    b7a1:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b7a5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b7a9:	8b 40 20             	mov    eax,DWORD PTR [rax+0x20]
    b7ac:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    b7af:	76 12                	jbe    b7c3 <offset_search+0x54>
    b7b1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b7b5:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    b7b8:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    b7bb:	73 06                	jae    b7c3 <offset_search+0x54>
    b7bd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b7c1:	eb 14                	jmp    b7d7 <offset_search+0x68>
    b7c3:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    b7c7:	8b 05 33 f8 12 00    	mov    eax,DWORD PTR [rip+0x12f833]        # 13b000 <fn_num>
    b7cd:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    b7d0:	7c b1                	jl     b783 <offset_search+0x14>
    b7d2:	b8 00 00 00 00       	mov    eax,0x0
    b7d7:	5d                   	pop    rbp
    b7d8:	c3                   	ret    

000000000000b7d9 <add_fn>:
    b7d9:	f3 0f 1e fa          	endbr64 
    b7dd:	55                   	push   rbp
    b7de:	48 89 e5             	mov    rbp,rsp
    b7e1:	48 83 ec 20          	sub    rsp,0x20
    b7e5:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    b7e9:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    b7ec:	89 55 e0             	mov    DWORD PTR [rbp-0x20],edx
    b7ef:	8b 05 0b f8 12 00    	mov    eax,DWORD PTR [rip+0x12f80b]        # 13b000 <fn_num>
    b7f5:	8d 50 01             	lea    edx,[rax+0x1]
    b7f8:	89 15 02 f8 12 00    	mov    DWORD PTR [rip+0x12f802],edx        # 13b000 <fn_num>
    b7fe:	48 63 d0             	movsxd rdx,eax
    b801:	48 89 d0             	mov    rax,rdx
    b804:	48 c1 e0 02          	shl    rax,0x2
    b808:	48 01 d0             	add    rax,rdx
    b80b:	48 c1 e0 03          	shl    rax,0x3
    b80f:	48 8d 15 ea cf 12 00 	lea    rdx,[rip+0x12cfea]        # 138800 <fn_mem_map>
    b816:	48 01 d0             	add    rax,rdx
    b819:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b81d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b821:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    b825:	48 89 d6             	mov    rsi,rdx
    b828:	48 89 c7             	mov    rdi,rax
    b82b:	e8 f0 6f ff ff       	call   2820 <strcpy@plt>
    b830:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b834:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    b837:	89 50 20             	mov    DWORD PTR [rax+0x20],edx
    b83a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b83e:	8b 55 e0             	mov    edx,DWORD PTR [rbp-0x20]
    b841:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    b844:	90                   	nop
    b845:	c9                   	leave  
    b846:	c3                   	ret    

000000000000b847 <load_fn_mem_map>:
    b847:	f3 0f 1e fa          	endbr64 
    b84b:	55                   	push   rbp
    b84c:	48 89 e5             	mov    rbp,rsp
    b84f:	53                   	push   rbx
    b850:	48 83 ec 78          	sub    rsp,0x78
    b854:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b85b:	00 00 
    b85d:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    b861:	31 c0                	xor    eax,eax
    b863:	48 8d 35 86 27 00 00 	lea    rsi,[rip+0x2786]        # dff0 <_IO_stdin_used+0x1ff0>
    b86a:	48 8d 3d 81 27 00 00 	lea    rdi,[rip+0x2781]        # dff2 <_IO_stdin_used+0x1ff2>
    b871:	e8 5a 6d ff ff       	call   25d0 <fopen@plt>
    b876:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    b87a:	48 83 7d b0 00       	cmp    QWORD PTR [rbp-0x50],0x0
    b87f:	75 16                	jne    b897 <load_fn_mem_map+0x50>
    b881:	48 8d 3d 88 27 00 00 	lea    rdi,[rip+0x2788]        # e010 <_IO_stdin_used+0x2010>
    b888:	e8 b3 6c ff ff       	call   2540 <puts@plt>
    b88d:	bf ff ff ff ff       	mov    edi,0xffffffff
    b892:	e8 c9 6c ff ff       	call   2560 <exit@plt>
    b897:	48 c7 45 98 00 00 00 	mov    QWORD PTR [rbp-0x68],0x0
    b89e:	00 
    b89f:	48 c7 45 a0 00 00 00 	mov    QWORD PTR [rbp-0x60],0x0
    b8a6:	00 
    b8a7:	e9 db 00 00 00       	jmp    b987 <load_fn_mem_map+0x140>
    b8ac:	48 8b 5d 98          	mov    rbx,QWORD PTR [rbp-0x68]
    b8b0:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    b8b4:	48 8d 35 bc 27 00 00 	lea    rsi,[rip+0x27bc]        # e077 <_IO_stdin_used+0x2077>
    b8bb:	48 89 c7             	mov    rdi,rax
    b8be:	e8 cd 6f ff ff       	call   2890 <strcspn@plt>
    b8c3:	48 01 d8             	add    rax,rbx
    b8c6:	c6 00 00             	mov    BYTE PTR [rax],0x0
    b8c9:	c7 45 94 00 00 00 00 	mov    DWORD PTR [rbp-0x6c],0x0
    b8d0:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    b8d4:	48 8d 35 9e 27 00 00 	lea    rsi,[rip+0x279e]        # e079 <_IO_stdin_used+0x2079>
    b8db:	48 89 c7             	mov    rdi,rax
    b8de:	e8 4d 6f ff ff       	call   2830 <strtok@plt>
    b8e3:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    b8e7:	eb 7f                	jmp    b968 <load_fn_mem_map+0x121>
    b8e9:	83 7d 94 02          	cmp    DWORD PTR [rbp-0x6c],0x2
    b8ed:	74 44                	je     b933 <load_fn_mem_map+0xec>
    b8ef:	83 7d 94 02          	cmp    DWORD PTR [rbp-0x6c],0x2
    b8f3:	7f 59                	jg     b94e <load_fn_mem_map+0x107>
    b8f5:	83 7d 94 00          	cmp    DWORD PTR [rbp-0x6c],0x0
    b8f9:	74 08                	je     b903 <load_fn_mem_map+0xbc>
    b8fb:	83 7d 94 01          	cmp    DWORD PTR [rbp-0x6c],0x1
    b8ff:	74 17                	je     b918 <load_fn_mem_map+0xd1>
    b901:	eb 4b                	jmp    b94e <load_fn_mem_map+0x107>
    b903:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    b907:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b90b:	48 89 d6             	mov    rsi,rdx
    b90e:	48 89 c7             	mov    rdi,rax
    b911:	e8 0a 6f ff ff       	call   2820 <strcpy@plt>
    b916:	eb 37                	jmp    b94f <load_fn_mem_map+0x108>
    b918:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    b91c:	ba 10 00 00 00       	mov    edx,0x10
    b921:	be 00 00 00 00       	mov    esi,0x0
    b926:	48 89 c7             	mov    rdi,rax
    b929:	e8 12 6e ff ff       	call   2740 <strtol@plt>
    b92e:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    b931:	eb 1c                	jmp    b94f <load_fn_mem_map+0x108>
    b933:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    b937:	ba 10 00 00 00       	mov    edx,0x10
    b93c:	be 00 00 00 00       	mov    esi,0x0
    b941:	48 89 c7             	mov    rdi,rax
    b944:	e8 f7 6d ff ff       	call   2740 <strtol@plt>
    b949:	89 45 90             	mov    DWORD PTR [rbp-0x70],eax
    b94c:	eb 01                	jmp    b94f <load_fn_mem_map+0x108>
    b94e:	90                   	nop
    b94f:	48 8d 35 23 27 00 00 	lea    rsi,[rip+0x2723]        # e079 <_IO_stdin_used+0x2079>
    b956:	bf 00 00 00 00       	mov    edi,0x0
    b95b:	e8 d0 6e ff ff       	call   2830 <strtok@plt>
    b960:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    b964:	83 45 94 01          	add    DWORD PTR [rbp-0x6c],0x1
    b968:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
    b96d:	0f 85 76 ff ff ff    	jne    b8e9 <load_fn_mem_map+0xa2>
    b973:	8b 55 90             	mov    edx,DWORD PTR [rbp-0x70]
    b976:	8b 4d 8c             	mov    ecx,DWORD PTR [rbp-0x74]
    b979:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b97d:	89 ce                	mov    esi,ecx
    b97f:	48 89 c7             	mov    rdi,rax
    b982:	e8 52 fe ff ff       	call   b7d9 <add_fn>
    b987:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
    b98b:	48 8d 4d a0          	lea    rcx,[rbp-0x60]
    b98f:	48 8d 45 98          	lea    rax,[rbp-0x68]
    b993:	48 89 ce             	mov    rsi,rcx
    b996:	48 89 c7             	mov    rdi,rax
    b999:	e8 72 6e ff ff       	call   2810 <getline@plt>
    b99e:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    b9a2:	48 83 7d b8 ff       	cmp    QWORD PTR [rbp-0x48],0xffffffffffffffff
    b9a7:	0f 85 ff fe ff ff    	jne    b8ac <load_fn_mem_map+0x65>
    b9ad:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b9b1:	48 89 c7             	mov    rdi,rax
    b9b4:	e8 a7 6e ff ff       	call   2860 <fclose@plt>
    b9b9:	90                   	nop
    b9ba:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    b9be:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    b9c5:	00 00 
    b9c7:	74 05                	je     b9ce <load_fn_mem_map+0x187>
    b9c9:	e8 12 6e ff ff       	call   27e0 <__stack_chk_fail@plt>
    b9ce:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    b9d2:	c9                   	leave  
    b9d3:	c3                   	ret    

000000000000b9d4 <pps_monitor>:
    b9d4:	f3 0f 1e fa          	endbr64 
    b9d8:	55                   	push   rbp
    b9d9:	48 89 e5             	mov    rbp,rsp
    b9dc:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    b9e3:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b9ea:	00 00 
    b9ec:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b9f0:	31 c0                	xor    eax,eax
    b9f2:	8b 05 28 f6 12 00    	mov    eax,DWORD PTR [rip+0x12f628]        # 13b020 <current_log_num.3>
    b9f8:	85 c0                	test   eax,eax
    b9fa:	0f 85 bd 00 00 00    	jne    babd <pps_monitor+0xe9>
    ba00:	c7 05 1a f6 12 00 00 	mov    DWORD PTR [rip+0x12f61a],0x0        # 13b024 <lines_written.2>
    ba07:	00 00 00 
    ba0a:	48 8d 3d 6f 26 00 00 	lea    rdi,[rip+0x266f]        # e080 <_IO_stdin_used+0x2080>
    ba11:	e8 2a 6b ff ff       	call   2540 <puts@plt>
    ba16:	48 8d 3d 86 26 00 00 	lea    rdi,[rip+0x2686]        # e0a3 <_IO_stdin_used+0x20a3>
    ba1d:	e8 5e 6c ff ff       	call   2680 <opendir@plt>
    ba22:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    ba26:	48 83 7d a0 00       	cmp    QWORD PTR [rbp-0x60],0x0
    ba2b:	75 27                	jne    ba54 <pps_monitor+0x80>
    ba2d:	48 8d 3d 8b 26 00 00 	lea    rdi,[rip+0x268b]        # e0bf <_IO_stdin_used+0x20bf>
    ba34:	e8 97 6e ff ff       	call   28d0 <perror@plt>
    ba39:	c7 05 dd f5 12 00 00 	mov    DWORD PTR [rip+0x12f5dd],0x0        # 13b020 <current_log_num.3>
    ba40:	00 00 00 
    ba43:	eb 35                	jmp    ba7a <pps_monitor+0xa6>
    ba45:	8b 05 d5 f5 12 00    	mov    eax,DWORD PTR [rip+0x12f5d5]        # 13b020 <current_log_num.3>
    ba4b:	83 c0 01             	add    eax,0x1
    ba4e:	89 05 cc f5 12 00    	mov    DWORD PTR [rip+0x12f5cc],eax        # 13b020 <current_log_num.3>
    ba54:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
    ba58:	48 89 c7             	mov    rdi,rax
    ba5b:	e8 40 6c ff ff       	call   26a0 <readdir@plt>
    ba60:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    ba64:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
    ba69:	75 da                	jne    ba45 <pps_monitor+0x71>
    ba6b:	8b 05 af f5 12 00    	mov    eax,DWORD PTR [rip+0x12f5af]        # 13b020 <current_log_num.3>
    ba71:	83 e8 02             	sub    eax,0x2
    ba74:	89 05 a6 f5 12 00    	mov    DWORD PTR [rip+0x12f5a6],eax        # 13b020 <current_log_num.3>
    ba7a:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
    ba7e:	48 89 c7             	mov    rdi,rax
    ba81:	e8 fa 6d ff ff       	call   2880 <closedir@plt>
    ba86:	8b 05 94 f5 12 00    	mov    eax,DWORD PTR [rip+0x12f594]        # 13b020 <current_log_num.3>
    ba8c:	89 c6                	mov    esi,eax
    ba8e:	48 8d 3d 31 26 00 00 	lea    rdi,[rip+0x2631]        # e0c6 <_IO_stdin_used+0x20c6>
    ba95:	b8 00 00 00 00       	mov    eax,0x0
    ba9a:	e8 41 6a ff ff       	call   24e0 <printf@plt>
    ba9f:	8b 05 7b f5 12 00    	mov    eax,DWORD PTR [rip+0x12f57b]        # 13b020 <current_log_num.3>
    baa5:	83 c0 01             	add    eax,0x1
    baa8:	89 05 72 f5 12 00    	mov    DWORD PTR [rip+0x12f572],eax        # 13b020 <current_log_num.3>
    baae:	c7 05 70 f5 12 00 00 	mov    DWORD PTR [rip+0x12f570],0x0        # 13b028 <arr_num.1>
    bab5:	00 00 00 
    bab8:	e9 e8 02 00 00       	jmp    bda5 <pps_monitor+0x3d1>
    babd:	bf 00 00 00 00       	mov    edi,0x0
    bac2:	e8 69 6e ff ff       	call   2930 <time@plt>
    bac7:	48 89 c2             	mov    rdx,rax
    baca:	8b 05 58 f5 12 00    	mov    eax,DWORD PTR [rip+0x12f558]        # 13b028 <arr_num.1>
    bad0:	8d 48 01             	lea    ecx,[rax+0x1]
    bad3:	89 0d 4f f5 12 00    	mov    DWORD PTR [rip+0x12f54f],ecx        # 13b028 <arr_num.1>
    bad9:	48 89 d1             	mov    rcx,rdx
    badc:	89 c0                	mov    eax,eax
    bade:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    bae5:	00 
    bae6:	48 8d 05 53 f5 12 00 	lea    rax,[rip+0x12f553]        # 13b040 <pkt_times.0>
    baed:	48 89 0c 02          	mov    QWORD PTR [rdx+rax*1],rcx
    baf1:	8b 05 31 f5 12 00    	mov    eax,DWORD PTR [rip+0x12f531]        # 13b028 <arr_num.1>
    baf7:	3d 00 04 00 00       	cmp    eax,0x400
    bafc:	0f 85 a3 02 00 00    	jne    bda5 <pps_monitor+0x3d1>
    bb02:	8b 05 1c f5 12 00    	mov    eax,DWORD PTR [rip+0x12f51c]        # 13b024 <lines_written.2>
    bb08:	3d 57 02 00 00       	cmp    eax,0x257
    bb0d:	7e 46                	jle    bb55 <pps_monitor+0x181>
    bb0f:	8b 05 0b f5 12 00    	mov    eax,DWORD PTR [rip+0x12f50b]        # 13b020 <current_log_num.3>
    bb15:	83 c0 01             	add    eax,0x1
    bb18:	89 05 02 f5 12 00    	mov    DWORD PTR [rip+0x12f502],eax        # 13b020 <current_log_num.3>
    bb1e:	8b 15 fc f4 12 00    	mov    edx,DWORD PTR [rip+0x12f4fc]        # 13b020 <current_log_num.3>
    bb24:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    bb28:	48 8d 35 b1 25 00 00 	lea    rsi,[rip+0x25b1]        # e0e0 <_IO_stdin_used+0x20e0>
    bb2f:	48 89 c7             	mov    rdi,rax
    bb32:	b8 00 00 00 00       	mov    eax,0x0
    bb37:	e8 74 6b ff ff       	call   26b0 <sprintf@plt>
    bb3c:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    bb40:	48 8d 35 c3 25 00 00 	lea    rsi,[rip+0x25c3]        # e10a <_IO_stdin_used+0x210a>
    bb47:	48 89 c7             	mov    rdi,rax
    bb4a:	e8 81 6a ff ff       	call   25d0 <fopen@plt>
    bb4f:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
    bb53:	eb 35                	jmp    bb8a <pps_monitor+0x1b6>
    bb55:	8b 15 c5 f4 12 00    	mov    edx,DWORD PTR [rip+0x12f4c5]        # 13b020 <current_log_num.3>
    bb5b:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    bb5f:	48 8d 35 7a 25 00 00 	lea    rsi,[rip+0x257a]        # e0e0 <_IO_stdin_used+0x20e0>
    bb66:	48 89 c7             	mov    rdi,rax
    bb69:	b8 00 00 00 00       	mov    eax,0x0
    bb6e:	e8 3d 6b ff ff       	call   26b0 <sprintf@plt>
    bb73:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    bb77:	48 8d 35 8e 25 00 00 	lea    rsi,[rip+0x258e]        # e10c <_IO_stdin_used+0x210c>
    bb7e:	48 89 c7             	mov    rdi,rax
    bb81:	e8 4a 6a ff ff       	call   25d0 <fopen@plt>
    bb86:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
    bb8a:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    bb8e:	48 89 c6             	mov    rsi,rax
    bb91:	48 8d 3d 76 25 00 00 	lea    rdi,[rip+0x2576]        # e10e <_IO_stdin_used+0x210e>
    bb98:	b8 00 00 00 00       	mov    eax,0x0
    bb9d:	e8 3e 69 ff ff       	call   24e0 <printf@plt>
    bba2:	bf 00 04 00 00       	mov    edi,0x400
    bba7:	e8 14 6a ff ff       	call   25c0 <malloc@plt>
    bbac:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
    bbb0:	bf 00 02 00 00       	mov    edi,0x200
    bbb5:	e8 06 6a ff ff       	call   25c0 <malloc@plt>
    bbba:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
    bbbe:	c7 85 74 ff ff ff ff 	mov    DWORD PTR [rbp-0x8c],0xffffffff
    bbc5:	ff ff ff 
    bbc8:	48 c7 45 88 00 00 00 	mov    QWORD PTR [rbp-0x78],0x0
    bbcf:	00 
    bbd0:	c7 85 78 ff ff ff 00 	mov    DWORD PTR [rbp-0x88],0x0
    bbd7:	00 00 00 
    bbda:	e9 ca 00 00 00       	jmp    bca9 <pps_monitor+0x2d5>
    bbdf:	8b 85 78 ff ff ff    	mov    eax,DWORD PTR [rbp-0x88]
    bbe5:	48 98                	cdqe   
    bbe7:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    bbee:	00 
    bbef:	48 8d 05 4a f4 12 00 	lea    rax,[rip+0x12f44a]        # 13b040 <pkt_times.0>
    bbf6:	48 8b 14 02          	mov    rdx,QWORD PTR [rdx+rax*1]
    bbfa:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    bbfe:	48 39 c2             	cmp    rdx,rax
    bc01:	75 20                	jne    bc23 <pps_monitor+0x24f>
    bc03:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    bc09:	48 98                	cdqe   
    bc0b:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    bc12:	00 
    bc13:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    bc17:	48 01 d0             	add    rax,rdx
    bc1a:	8b 10                	mov    edx,DWORD PTR [rax]
    bc1c:	83 c2 01             	add    edx,0x1
    bc1f:	89 10                	mov    DWORD PTR [rax],edx
    bc21:	eb 7f                	jmp    bca2 <pps_monitor+0x2ce>
    bc23:	8b 85 78 ff ff ff    	mov    eax,DWORD PTR [rbp-0x88]
    bc29:	48 98                	cdqe   
    bc2b:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    bc32:	00 
    bc33:	48 8d 05 06 f4 12 00 	lea    rax,[rip+0x12f406]        # 13b040 <pkt_times.0>
    bc3a:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    bc3e:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    bc42:	83 85 74 ff ff ff 01 	add    DWORD PTR [rbp-0x8c],0x1
    bc49:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    bc4f:	48 98                	cdqe   
    bc51:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    bc58:	00 
    bc59:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    bc5d:	48 01 c2             	add    rdx,rax
    bc60:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    bc64:	48 89 02             	mov    QWORD PTR [rdx],rax
    bc67:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    bc6d:	48 98                	cdqe   
    bc6f:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    bc76:	00 
    bc77:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    bc7b:	48 01 d0             	add    rax,rdx
    bc7e:	c7 00 01 00 00 00    	mov    DWORD PTR [rax],0x1
    bc84:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    bc8a:	48 98                	cdqe   
    bc8c:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    bc93:	00 
    bc94:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    bc98:	48 01 d0             	add    rax,rdx
    bc9b:	8b 10                	mov    edx,DWORD PTR [rax]
    bc9d:	83 c2 01             	add    edx,0x1
    bca0:	89 10                	mov    DWORD PTR [rax],edx
    bca2:	83 85 78 ff ff ff 01 	add    DWORD PTR [rbp-0x88],0x1
    bca9:	81 bd 78 ff ff ff ff 	cmp    DWORD PTR [rbp-0x88],0x3ff
    bcb0:	03 00 00 
    bcb3:	0f 8e 26 ff ff ff    	jle    bbdf <pps_monitor+0x20b>
    bcb9:	c7 85 7c ff ff ff 00 	mov    DWORD PTR [rbp-0x84],0x0
    bcc0:	00 00 00 
    bcc3:	eb 52                	jmp    bd17 <pps_monitor+0x343>
    bcc5:	8b 85 7c ff ff ff    	mov    eax,DWORD PTR [rbp-0x84]
    bccb:	48 98                	cdqe   
    bccd:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    bcd4:	00 
    bcd5:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    bcd9:	48 01 d0             	add    rax,rdx
    bcdc:	8b 08                	mov    ecx,DWORD PTR [rax]
    bcde:	8b 85 7c ff ff ff    	mov    eax,DWORD PTR [rbp-0x84]
    bce4:	48 98                	cdqe   
    bce6:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    bced:	00 
    bcee:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    bcf2:	48 01 d0             	add    rax,rdx
    bcf5:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    bcf8:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    bcfc:	48 8d 35 1a 24 00 00 	lea    rsi,[rip+0x241a]        # e11d <_IO_stdin_used+0x211d>
    bd03:	48 89 c7             	mov    rdi,rax
    bd06:	b8 00 00 00 00       	mov    eax,0x0
    bd0b:	e8 d0 6b ff ff       	call   28e0 <fprintf@plt>
    bd10:	83 85 7c ff ff ff 01 	add    DWORD PTR [rbp-0x84],0x1
    bd17:	8b 85 7c ff ff ff    	mov    eax,DWORD PTR [rbp-0x84]
    bd1d:	3b 85 74 ff ff ff    	cmp    eax,DWORD PTR [rbp-0x8c]
    bd23:	7c a0                	jl     bcc5 <pps_monitor+0x2f1>
    bd25:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    bd29:	48 89 c7             	mov    rdi,rax
    bd2c:	e8 2f 69 ff ff       	call   2660 <free@plt>
    bd31:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    bd35:	48 89 c7             	mov    rdi,rax
    bd38:	e8 23 69 ff ff       	call   2660 <free@plt>
    bd3d:	ba 00 20 00 00       	mov    edx,0x2000
    bd42:	be 00 00 00 00       	mov    esi,0x0
    bd47:	48 8d 3d f2 f2 12 00 	lea    rdi,[rip+0x12f2f2]        # 13b040 <pkt_times.0>
    bd4e:	e8 9d 67 ff ff       	call   24f0 <memset@plt>
    bd53:	8b 05 cb f2 12 00    	mov    eax,DWORD PTR [rip+0x12f2cb]        # 13b024 <lines_written.2>
    bd59:	3d 57 02 00 00       	cmp    eax,0x257
    bd5e:	7e 1b                	jle    bd7b <pps_monitor+0x3a7>
    bd60:	c7 05 ba f2 12 00 00 	mov    DWORD PTR [rip+0x12f2ba],0x0        # 13b024 <lines_written.2>
    bd67:	00 00 00 
    bd6a:	8b 05 b0 f2 12 00    	mov    eax,DWORD PTR [rip+0x12f2b0]        # 13b020 <current_log_num.3>
    bd70:	83 c0 01             	add    eax,0x1
    bd73:	89 05 a7 f2 12 00    	mov    DWORD PTR [rip+0x12f2a7],eax        # 13b020 <current_log_num.3>
    bd79:	eb 14                	jmp    bd8f <pps_monitor+0x3bb>
    bd7b:	8b 15 a3 f2 12 00    	mov    edx,DWORD PTR [rip+0x12f2a3]        # 13b024 <lines_written.2>
    bd81:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    bd87:	01 d0                	add    eax,edx
    bd89:	89 05 95 f2 12 00    	mov    DWORD PTR [rip+0x12f295],eax        # 13b024 <lines_written.2>
    bd8f:	c7 05 8f f2 12 00 00 	mov    DWORD PTR [rip+0x12f28f],0x0        # 13b028 <arr_num.1>
    bd96:	00 00 00 
    bd99:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    bd9d:	48 89 c7             	mov    rdi,rax
    bda0:	e8 bb 6a ff ff       	call   2860 <fclose@plt>
    bda5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    bda9:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    bdb0:	00 00 
    bdb2:	74 05                	je     bdb9 <pps_monitor+0x3e5>
    bdb4:	e8 27 6a ff ff       	call   27e0 <__stack_chk_fail@plt>
    bdb9:	c9                   	leave  
    bdba:	c3                   	ret    

000000000000bdbb <get_line_num>:
    bdbb:	f3 0f 1e fa          	endbr64 
    bdbf:	55                   	push   rbp
    bdc0:	48 89 e5             	mov    rbp,rsp
    bdc3:	48 83 ec 20          	sub    rsp,0x20
    bdc7:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    bdcb:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    bdd2:	eb 0a                	jmp    bdde <get_line_num+0x23>
    bdd4:	80 7d fb 0a          	cmp    BYTE PTR [rbp-0x5],0xa
    bdd8:	75 04                	jne    bdde <get_line_num+0x23>
    bdda:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    bdde:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    bde2:	48 89 c7             	mov    rdi,rax
    bde5:	e8 e6 68 ff ff       	call   26d0 <fgetc@plt>
    bdea:	88 45 fb             	mov    BYTE PTR [rbp-0x5],al
    bded:	80 7d fb ff          	cmp    BYTE PTR [rbp-0x5],0xff
    bdf1:	75 e1                	jne    bdd4 <get_line_num+0x19>
    bdf3:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    bdf6:	c9                   	leave  
    bdf7:	c3                   	ret    

Disassembly of section .fini:

000000000000bdf8 <_fini>:
    bdf8:	f3 0f 1e fa          	endbr64 
    bdfc:	48 83 ec 08          	sub    rsp,0x8
    be00:	48 83 c4 08          	add    rsp,0x8
    be04:	c3                   	ret    

Disassembly of section .rodata:

000000000000c000 <_IO_stdin_used>:
    c000:	01 00                	add    DWORD PTR [rax],eax
    c002:	02 00                	add    al,BYTE PTR [rax]
    c004:	2f                   	(bad)  
    c005:	65 74 63             	gs je  c06b <_IO_stdin_used+0x6b>
    c008:	2f                   	(bad)  
    c009:	76 69                	jbe    c074 <_IO_stdin_used+0x74>
    c00b:	67 69 6c 2f 76 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x76],0x6c696769
    c012:	69 6c 
    c014:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    c018:	66 00 2f             	data16 add BYTE PTR [rdi],ch
    c01b:	76 61                	jbe    c07e <_IO_stdin_used+0x7e>
    c01d:	72 2f                	jb     c04e <_IO_stdin_used+0x4e>
    c01f:	6c                   	ins    BYTE PTR es:[rdi],dx
    c020:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c021:	67 2f                	addr32 (bad) 
    c023:	76 69                	jbe    c08e <_IO_stdin_used+0x8e>
    c025:	67 69 6c 2f 73 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x6f6c6769
    c02c:	6c 6f 
    c02e:	67 2e 6c             	cs ins BYTE PTR es:[edi],dx
    c031:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c032:	67 00 2f             	add    BYTE PTR [edi],ch
    c035:	65 74 63             	gs je  c09b <_IO_stdin_used+0x9b>
    c038:	2f                   	(bad)  
    c039:	76 69                	jbe    c0a4 <_IO_stdin_used+0xa4>
    c03b:	67 69 6c 2f 68 6f 73 	imul   ebp,DWORD PTR [edi+ebp*1+0x68],0x7374736f
    c042:	74 73 
    c044:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    c048:	66 00 00             	data16 add BYTE PTR [rax],al
    c04b:	00 00                	add    BYTE PTR [rax],al
    c04d:	00 00                	add    BYTE PTR [rax],al
    c04f:	00 1b                	add    BYTE PTR [rbx],bl
    c051:	5b                   	pop    rbx
    c052:	39 30                	cmp    DWORD PTR [rax],esi
    c054:	6d                   	ins    DWORD PTR es:[rdi],dx
    c055:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c05a:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c05f:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c064:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c069:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c06e:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c073:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c078:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c07d:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c082:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c087:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c08c:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c091:	2d 1b 5b 6d 00       	sub    eax,0x6d5b1b
    c096:	00 00                	add    BYTE PTR [rax],al
    c098:	42                   	rex.X
    c099:	41                   	rex.B
    c09a:	44 2d 54 52 41 46    	rex.R sub eax,0x46415254
    c0a0:	46                   	rex.RX
    c0a1:	49                   	rex.WB
    c0a2:	43 20 55 6e          	rex.XB and BYTE PTR [r13+0x6e],dl
    c0a6:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c0aa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c0ab:	20 45 74             	and    BYTE PTR [rbp+0x74],al
    c0ae:	68 65 72 6e 74       	push   0x746e7265
    c0b3:	20 46 72             	and    BYTE PTR [rsi+0x72],al
    c0b6:	61                   	(bad)  
    c0b7:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0b8:	65 20 50 72          	and    BYTE PTR gs:[rax+0x72],dl
    c0bc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c0bd:	74 6f                	je     c12e <_IO_stdin_used+0x12e>
    c0bf:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    c0c2:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    c0c5:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0c6:	62                   	(bad)  
    c0c7:	65 72 00             	gs jb  c0ca <_IO_stdin_used+0xca>
    c0ca:	2f                   	(bad)  
    c0cb:	76 61                	jbe    c12e <_IO_stdin_used+0x12e>
    c0cd:	72 2f                	jb     c0fe <_IO_stdin_used+0xfe>
    c0cf:	6c                   	ins    BYTE PTR es:[rdi],dx
    c0d0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c0d1:	67 2f                	addr32 (bad) 
    c0d3:	76 69                	jbe    c13e <_IO_stdin_used+0x13e>
    c0d5:	67 69 6c 2f 73 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x6f6c6769
    c0dc:	6c 6f 
    c0de:	67 2e 6c             	cs ins BYTE PTR es:[edi],dx
    c0e1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c0e2:	67 00 00             	add    BYTE PTR [eax],al
    c0e5:	00 00                	add    BYTE PTR [rax],al
    c0e7:	00 1b                	add    BYTE PTR [rbx],bl
    c0e9:	5b                   	pop    rbx
    c0ea:	33 3b                	xor    edi,DWORD PTR [rbx]
    c0ec:	33 33                	xor    esi,DWORD PTR [rbx]
    c0ee:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0ef:	00 25 73 00 30 2e    	add    BYTE PTR [rip+0x2e300073],ah        # 2e30c168 <_end+0x2e1cf128>
    c0f5:	30 2e                	xor    BYTE PTR [rsi],ch
    c0f7:	30 2e                	xor    BYTE PTR [rsi],ch
    c0f9:	30 00                	xor    BYTE PTR [rax],al
    c0fb:	00 00                	add    BYTE PTR [rax],al
    c0fd:	00 00                	add    BYTE PTR [rax],al
    c0ff:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    c102:	4f 54                	rex.WRXB push r12
    c104:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    c108:	50                   	push   rax
    c109:	3a 20                	cmp    ah,BYTE PTR [rax]
    c10b:	50                   	push   rax
    c10c:	52                   	push   rdx
    c10d:	4f                   	rex.WRXB
    c10e:	42                   	rex.X
    c10f:	45 3a 20             	cmp    r12b,BYTE PTR [r8]
    c112:	57                   	push   rdi
    c113:	68 6f 20 68 61       	push   0x6168206f
    c118:	73 20                	jae    c13a <_IO_stdin_used+0x13a>
    c11a:	25 73 3f 0a 00       	and    eax,0xa3f73
    c11f:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    c122:	4f 54                	rex.WRXB push r12
    c124:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    c128:	50                   	push   rax
    c129:	3a 20                	cmp    ah,BYTE PTR [rax]
    c12b:	57                   	push   rdi
    c12c:	68 6f 20 69 73       	push   0x7369206f
    c131:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    c134:	20 25 73 3f 20 54    	and    BYTE PTR [rip+0x54203f73],ah        # 542100ad <_end+0x540d306d>
    c13a:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    c13c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c13d:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # cbb6 <_IO_stdin_used+0xbb6>
    c143:	00 00                	add    BYTE PTR [rax],al
    c145:	00 00                	add    BYTE PTR [rax],al
    c147:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    c14a:	4f 54                	rex.WRXB push r12
    c14c:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    c150:	50                   	push   rax
    c151:	3a 20                	cmp    ah,BYTE PTR [rax]
    c153:	52                   	push   rdx
    c154:	45 50                	rex.RB push r8
    c156:	4c 59                	rex.WR pop rcx
    c158:	3a 20                	cmp    ah,BYTE PTR [rax]
    c15a:	25 73 20 69 73       	and    eax,0x73692073
    c15f:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    c162:	20 25 73 0a 00 55    	and    BYTE PTR [rip+0x55000a73],ah        # 5500cbdb <_end+0x54ecfb9b>
    c168:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c169:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c16d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c16e:	20 41 52             	and    BYTE PTR [rcx+0x52],al
    c171:	50                   	push   rax
    c172:	20 6f 70             	and    BYTE PTR [rdi+0x70],ch
    c175:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
    c178:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    c17b:	25 64 0a 00 1b       	and    eax,0x1b000a64
    c180:	5b                   	pop    rbx
    c181:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    c184:	4c                   	rex.WR
    c185:	4f                   	rex.WRXB
    c186:	4f 50                	rex.WRXB push r8
    c188:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de201 <_end+0x3e1a11c1>
    c18e:	20 25 73 00 20 52    	and    BYTE PTR [rip+0x52200073],ah        # 5220c207 <_end+0x520cf1c7>
    c194:	45 50                	rex.RB push r8
    c196:	4c 59                	rex.WR pop rcx
    c198:	20 00                	and    BYTE PTR [rax],al
    c19a:	20 55 4e             	and    BYTE PTR [rbp+0x4e],dl
    c19d:	4b                   	rex.WXB
    c19e:	4e                   	rex.WRX
    c19f:	4f 57                	rex.WRXB push r15
    c1a1:	4e 20 4c 4f 4f       	rex.WRX and BYTE PTR [rdi+r9*2+0x4f],r9b
    c1a6:	50                   	push   rax
    c1a7:	20 46 55             	and    BYTE PTR [rsi+0x55],al
    c1aa:	4e                   	rex.WRX
    c1ab:	43 54                	rex.XB push r12
    c1ad:	49                   	rex.WB
    c1ae:	4f                   	rex.WRXB
    c1af:	4e 3a 25 64 20 0a 00 	rex.WRX cmp r12b,BYTE PTR [rip+0xa2064]        # ae21a <rules+0x9cf3a>
    c1b6:	00 00                	add    BYTE PTR [rax],al
    c1b8:	25 30 32 78 3a       	and    eax,0x3a783230
    c1bd:	25 30 32 78 3a       	and    eax,0x3a783230
    c1c2:	25 30 32 78 3a       	and    eax,0x3a783230
    c1c7:	25 30 32 78 3a       	and    eax,0x3a783230
    c1cc:	25 30 32 78 3a       	and    eax,0x3a783230
    c1d1:	25 30 32 78 00       	and    eax,0x783230
    c1d6:	25 64 2e 25 64       	and    eax,0x64252e64
    c1db:	2e 25 64 2e 25 64    	cs and eax,0x64252e64
    c1e1:	00 00                	add    BYTE PTR [rax],al
    c1e3:	00 00                	add    BYTE PTR [rax],al
    c1e5:	00 00                	add    BYTE PTR [rax],al
    c1e7:	00 25 30 32 78 25    	add    BYTE PTR [rip+0x25783230],ah        # 2578f41d <_end+0x256523dd>
    c1ed:	30 32                	xor    BYTE PTR [rdx],dh
    c1ef:	78 3a                	js     c22b <_IO_stdin_used+0x22b>
    c1f1:	25 30 32 78 25       	and    eax,0x25783230
    c1f6:	30 32                	xor    BYTE PTR [rdx],dh
    c1f8:	78 3a                	js     c234 <_IO_stdin_used+0x234>
    c1fa:	25 30 32 78 25       	and    eax,0x25783230
    c1ff:	30 32                	xor    BYTE PTR [rdx],dh
    c201:	78 3a                	js     c23d <_IO_stdin_used+0x23d>
    c203:	25 30 32 78 25       	and    eax,0x25783230
    c208:	30 32                	xor    BYTE PTR [rdx],dh
    c20a:	78 3a                	js     c246 <_IO_stdin_used+0x246>
    c20c:	25 30 32 78 25       	and    eax,0x25783230
    c211:	30 32                	xor    BYTE PTR [rdx],dh
    c213:	78 3a                	js     c24f <_IO_stdin_used+0x24f>
    c215:	25 30 32 78 25       	and    eax,0x25783230
    c21a:	30 32                	xor    BYTE PTR [rdx],dh
    c21c:	78 3a                	js     c258 <_IO_stdin_used+0x258>
    c21e:	25 30 32 78 25       	and    eax,0x25783230
    c223:	30 32                	xor    BYTE PTR [rdx],dh
    c225:	78 3a                	js     c261 <_IO_stdin_used+0x261>
    c227:	25 30 32 78 25       	and    eax,0x25783230
    c22c:	30 32                	xor    BYTE PTR [rdx],dh
    c22e:	78 00                	js     c230 <_IO_stdin_used+0x230>
    c230:	25 64 2d 25 30       	and    eax,0x30252d64
    c235:	32 64 2d 25          	xor    ah,BYTE PTR [rbp+rbp*1+0x25]
    c239:	30 32                	xor    BYTE PTR [rdx],dh
    c23b:	64 20 25 30 32 64 3a 	and    BYTE PTR fs:[rip+0x3a643230],ah        # 3a64f472 <_end+0x3a512432>
    c242:	25 30 32 64 3a       	and    eax,0x3a643230
    c247:	25 30 32 64 00       	and    eax,0x643230
    c24c:	25 73 3a 20 25       	and    eax,0x25203a73
    c251:	73 0a                	jae    c25d <_IO_stdin_used+0x25d>
    c253:	00 00                	add    BYTE PTR [rax],al
    c255:	00 00                	add    BYTE PTR [rax],al
    c257:	00 25 73 20 46 6f    	add    BYTE PTR [rip+0x6f462073],ah        # 6f46e2d0 <_end+0x6f331290>
    c25d:	75 6e                	jne    c2cd <_IO_stdin_used+0x2cd>
    c25f:	64 20 62 6c          	and    BYTE PTR fs:[rdx+0x6c],ah
    c263:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c264:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    c267:	64 20 69 70          	and    BYTE PTR fs:[rcx+0x70],ch
    c26b:	76 34                	jbe    c2a1 <_IO_stdin_used+0x2a1>
    c26d:	20 61 64             	and    BYTE PTR [rcx+0x64],ah
    c270:	64 72 65             	fs jb  c2d8 <_IO_stdin_used+0x2d8>
    c273:	73 73                	jae    c2e8 <_IO_stdin_used+0x2e8>
    c275:	28 64 65 73          	sub    BYTE PTR [rbp+riz*2+0x73],ah
    c279:	74 29                	je     c2a4 <_IO_stdin_used+0x2a4>
    c27b:	3a 20                	cmp    ah,BYTE PTR [rax]
    c27d:	25 73 0a 00 00       	and    eax,0xa73
    c282:	00 00                	add    BYTE PTR [rax],al
    c284:	00 00                	add    BYTE PTR [rax],al
    c286:	00 00                	add    BYTE PTR [rax],al
    c288:	25 73 20 46 6f       	and    eax,0x6f462073
    c28d:	75 6e                	jne    c2fd <_IO_stdin_used+0x2fd>
    c28f:	64 20 62 6c          	and    BYTE PTR fs:[rdx+0x6c],ah
    c293:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c294:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    c297:	64 20 69 70          	and    BYTE PTR fs:[rcx+0x70],ch
    c29b:	76 34                	jbe    c2d1 <_IO_stdin_used+0x2d1>
    c29d:	20 61 64             	and    BYTE PTR [rcx+0x64],ah
    c2a0:	64 72 65             	fs jb  c308 <_IO_stdin_used+0x308>
    c2a3:	73 73                	jae    c318 <_IO_stdin_used+0x318>
    c2a5:	28 73 72             	sub    BYTE PTR [rbx+0x72],dh
    c2a8:	63 29                	movsxd ebp,DWORD PTR [rcx]
    c2aa:	3a 20                	cmp    ah,BYTE PTR [rax]
    c2ac:	25 73 0a 00 1b       	and    eax,0x1b000a73
    c2b1:	5b                   	pop    rbx
    c2b2:	34 6d                	xor    al,0x6d
    c2b4:	00 25 73 46 72 61    	add    BYTE PTR [rip+0x61724673],ah        # 6173092d <_end+0x615f38ed>
    c2ba:	67 6d                	ins    DWORD PTR es:[edi],dx
    c2bc:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c2be:	74 65                	je     c325 <_IO_stdin_used+0x325>
    c2c0:	64 20 00             	and    BYTE PTR fs:[rax],al
    c2c3:	1b 5b 30             	sbb    ebx,DWORD PTR [rbx+0x30]
    c2c6:	6d                   	ins    DWORD PTR es:[rdi],dx
    c2c7:	00 25 73 00 20 25    	add    BYTE PTR [rip+0x25200073],ah        # 2520c340 <_end+0x250cf300>
    c2cd:	73 20                	jae    c2ef <_IO_stdin_used+0x2ef>
    c2cf:	2d 3e 20 25 73       	sub    eax,0x7325203e
    c2d4:	25 73 0a 00 49       	and    eax,0x49000a73
    c2d9:	50                   	push   rax
    c2da:	76 34                	jbe    c310 <_IO_stdin_used+0x310>
    c2dc:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de355 <_end+0x3e1a1315>
    c2e2:	20 25 73 20 50 72    	and    BYTE PTR [rip+0x72502073],ah        # 7250e35b <_end+0x723d131b>
    c2e8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c2e9:	74 6f                	je     c35a <_IO_stdin_used+0x35a>
    c2eb:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    c2ee:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    c2f1:	6d                   	ins    DWORD PTR es:[rdi],dx
    c2f2:	62                   	(bad)  
    c2f3:	65 72 20             	gs jb  c316 <_IO_stdin_used+0x316>
    c2f6:	3d 20 25 64 0a       	cmp    eax,0xa642520
    c2fb:	00 00                	add    BYTE PTR [rax],al
    c2fd:	00 00                	add    BYTE PTR [rax],al
    c2ff:	00 1b                	add    BYTE PTR [rbx],bl
    c301:	5b                   	pop    rbx
    c302:	33 35 6d 00 25 73    	xor    esi,DWORD PTR [rip+0x7325006d]        # 7325c375 <_end+0x7311f335>
    c308:	00 49 50             	add    BYTE PTR [rcx+0x50],cl
    c30b:	76 36                	jbe    c343 <_IO_stdin_used+0x343>
    c30d:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de386 <_end+0x3e1a1346>
    c313:	20 25 73 0a 00 09    	and    BYTE PTR [rip+0x9000a73],ah        # 900cd8c <_end+0x8ecfd4c>
    c319:	49                   	rex.WB
    c31a:	43                   	rex.XB
    c31b:	4d 50                	rex.WRB push r8
    c31d:	76 36                	jbe    c355 <_IO_stdin_used+0x355>
    c31f:	20 00                	and    BYTE PTR [rax],al
    c321:	20 52 6f             	and    BYTE PTR [rdx+0x6f],dl
    c324:	75 74                	jne    c39a <_IO_stdin_used+0x39a>
    c326:	65 72 20             	gs jb  c349 <_IO_stdin_used+0x349>
    c329:	53                   	push   rbx
    c32a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c32b:	6c                   	ins    BYTE PTR es:[rdi],dx
    c32c:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    c333:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c334:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c335:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    c338:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c339:	6d                   	ins    DWORD PTR es:[rdi],dx
    c33a:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # cdb3 <_IO_stdin_used+0xdb3>
    c340:	4d 75 6c             	rex.WRB jne c3af <_IO_stdin_used+0x3af>
    c343:	74 69                	je     c3ae <_IO_stdin_used+0x3ae>
    c345:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    c348:	74 20                	je     c36a <_IO_stdin_used+0x36a>
    c34a:	4c 69 73 74 65 6e 65 	imul   r14,QWORD PTR [rbx+0x74],0x72656e65
    c351:	72 
    c352:	20 52 65             	and    BYTE PTR [rdx+0x65],dl
    c355:	70 6f                	jo     c3c6 <_IO_stdin_used+0x3c6>
    c357:	72 74                	jb     c3cd <_IO_stdin_used+0x3cd>
    c359:	20 4d 65             	and    BYTE PTR [rbp+0x65],cl
    c35c:	73 73                	jae    c3d1 <_IO_stdin_used+0x3d1>
    c35e:	61                   	(bad)  
    c35f:	67 65 20 76 32       	and    BYTE PTR gs:[esi+0x32],dh
    c364:	00 4d 75             	add    BYTE PTR [rbp+0x75],cl
    c367:	6c                   	ins    BYTE PTR es:[rdi],dx
    c368:	74 69                	je     c3d3 <_IO_stdin_used+0x3d3>
    c36a:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    c36d:	74 20                	je     c38f <_IO_stdin_used+0x38f>
    c36f:	20 4c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],cl
    c373:	74 65                	je     c3da <_IO_stdin_used+0x3da>
    c375:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c376:	65 72 20             	gs jb  c399 <_IO_stdin_used+0x399>
    c379:	51                   	push   rcx
    c37a:	75 65                	jne    c3e1 <_IO_stdin_used+0x3e1>
    c37c:	72 79                	jb     c3f7 <_IO_stdin_used+0x3f7>
    c37e:	00 4e 65             	add    BYTE PTR [rsi+0x65],cl
    c381:	69 67 68 62 6f 72 20 	imul   esp,DWORD PTR [rdi+0x68],0x20726f62
    c388:	53                   	push   rbx
    c389:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c38a:	6c                   	ins    BYTE PTR es:[rdi],dx
    c38b:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    c392:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c393:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c394:	00 1b                	add    BYTE PTR [rbx],bl
    c396:	5b                   	pop    rbx
    c397:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    c39a:	00 00                	add    BYTE PTR [rax],al
    c39c:	00 00                	add    BYTE PTR [rax],al
    c39e:	00 00                	add    BYTE PTR [rax],al
    c3a0:	54                   	push   rsp
    c3a1:	69 6d 65 20 73 74 61 	imul   ebp,DWORD PTR [rbp+0x65],0x61747320
    c3a8:	6d                   	ins    DWORD PTR es:[rdi],dx
    c3a9:	70 20                	jo     c3cb <_IO_stdin_used+0x3cb>
    c3ab:	72 65                	jb     c412 <_IO_stdin_used+0x412>
    c3ad:	71 75                	jno    c424 <_IO_stdin_used+0x424>
    c3af:	65 73 74             	gs jae c426 <_IO_stdin_used+0x426>
    c3b2:	3a 20                	cmp    ah,BYTE PTR [rax]
    c3b4:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    c3b9:	20 25 73 28 63 6f    	and    BYTE PTR [rip+0x6f632873],ah        # 6f63ec32 <_end+0x6f501bf2>
    c3bf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c3c0:	66 69 67 20 73 70    	imul   sp,WORD PTR [rdi+0x20],0x7073
    c3c6:	65 63 69 66          	movsxd ebp,DWORD PTR gs:[rcx+0x66]
    c3ca:	69 65 73 20 73 74 72 	imul   esp,DWORD PTR [rbp+0x73],0x72747320
    c3d1:	69 63 74 20 74 69 6d 	imul   esp,DWORD PTR [rbx+0x74],0x6d697420
    c3d8:	65 73 74             	gs jae c44f <_IO_stdin_used+0x44f>
    c3db:	61                   	(bad)  
    c3dc:	6d                   	ins    DWORD PTR es:[rdi],dx
    c3dd:	70 20                	jo     c3ff <_IO_stdin_used+0x3ff>
    c3df:	61                   	(bad)  
    c3e0:	6c                   	ins    BYTE PTR es:[rdi],dx
    c3e1:	65 72 74             	gs jb  c458 <_IO_stdin_used+0x458>
    c3e4:	73 29                	jae    c40f <_IO_stdin_used+0x40f>
    c3e6:	0a 00                	or     al,BYTE PTR [rax]
    c3e8:	50                   	push   rax
    c3e9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c3ea:	73 73                	jae    c45f <_IO_stdin_used+0x45f>
    c3ec:	69 62 6c 65 20 6e 6d 	imul   esp,DWORD PTR [rdx+0x6c],0x6d6e2065
    c3f3:	61                   	(bad)  
    c3f4:	70 20                	jo     c416 <_IO_stdin_used+0x416>
    c3f6:	68 6f 73 74 20       	push   0x2074736f
    c3fb:	61                   	(bad)  
    c3fc:	6c                   	ins    BYTE PTR es:[rdi],dx
    c3fd:	69 76 65 20 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x65686320
    c404:	63 6b 20             	movsxd ebp,DWORD PTR [rbx+0x20]
    c407:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    c40c:	20 25 73 3b 20 6d    	and    BYTE PTR [rip+0x6d203b73],ah        # 6d20ff85 <_end+0x6d0d2f45>
    c412:	61                   	(bad)  
    c413:	74 63                	je     c478 <_IO_stdin_used+0x478>
    c415:	68 65 64 20 49       	push   0x49206465
    c41a:	43                   	rex.XB
    c41b:	4d 50                	rex.WRB push r8
    c41d:	20 45 63             	and    BYTE PTR [rbp+0x63],al
    c420:	68 6f 2c 20 54       	push   0x54202c6f
    c425:	43 50                	rex.XB push r8
    c427:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    c42a:	4e 2c 20             	rex.WRX sub al,0x20
    c42d:	54                   	push   rsp
    c42e:	43 50                	rex.XB push r8
    c430:	20 41 43             	and    BYTE PTR [rcx+0x43],al
    c433:	4b 2c 20             	rex.WXB sub al,0x20
    c436:	61                   	(bad)  
    c437:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c438:	64 20 49 43          	and    BYTE PTR fs:[rcx+0x43],cl
    c43c:	4d 50                	rex.WRB push r8
    c43e:	20 54 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dl
    c442:	65 73 74             	gs jae c4b9 <_IO_stdin_used+0x4b9>
    c445:	61                   	(bad)  
    c446:	6d                   	ins    DWORD PTR es:[rdi],dx
    c447:	70 20                	jo     c469 <_IO_stdin_used+0x469>
    c449:	72 65                	jb     c4b0 <_IO_stdin_used+0x4b0>
    c44b:	71 75                	jno    c4c2 <_IO_stdin_used+0x4c2>
    c44d:	65 73 74             	gs jae c4c4 <_IO_stdin_used+0x4c4>
    c450:	0a 00                	or     al,BYTE PTR [rax]
    c452:	61                   	(bad)  
    c453:	00 00                	add    BYTE PTR [rax],al
    c455:	00 00                	add    BYTE PTR [rax],al
    c457:	00 50 6f             	add    BYTE PTR [rax+0x6f],dl
    c45a:	73 73                	jae    c4cf <_IO_stdin_used+0x4cf>
    c45c:	69 62 6c 65 20 6e 6d 	imul   esp,DWORD PTR [rdx+0x6c],0x6d6e2065
    c463:	61                   	(bad)  
    c464:	70 20                	jo     c486 <_IO_stdin_used+0x486>
    c466:	68 6f 73 74 20       	push   0x2074736f
    c46b:	61                   	(bad)  
    c46c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c46d:	69 76 65 20 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x65686320
    c474:	63 6b 20             	movsxd ebp,DWORD PTR [rbx+0x20]
    c477:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    c47c:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461e4f5 <_end+0x744e14b5>
    c482:	20 25 73 3b 20 6d    	and    BYTE PTR [rip+0x6d203b73],ah        # 6d20fffb <_end+0x6d0d2fbb>
    c488:	61                   	(bad)  
    c489:	74 63                	je     c4ee <_IO_stdin_used+0x4ee>
    c48b:	68 65 64 20 49       	push   0x49206465
    c490:	43                   	rex.XB
    c491:	4d 50                	rex.WRB push r8
    c493:	20 45 63             	and    BYTE PTR [rbp+0x63],al
    c496:	68 6f 2c 20 54       	push   0x54202c6f
    c49b:	43 50                	rex.XB push r8
    c49d:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    c4a0:	4e 2c 20             	rex.WRX sub al,0x20
    c4a3:	54                   	push   rsp
    c4a4:	43 50                	rex.XB push r8
    c4a6:	20 41 43             	and    BYTE PTR [rcx+0x43],al
    c4a9:	4b 2c 20             	rex.WXB sub al,0x20
    c4ac:	61                   	(bad)  
    c4ad:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c4ae:	64 20 49 43          	and    BYTE PTR fs:[rcx+0x43],cl
    c4b2:	4d 50                	rex.WRB push r8
    c4b4:	20 54 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dl
    c4b8:	65 73 74             	gs jae c52f <_IO_stdin_used+0x52f>
    c4bb:	61                   	(bad)  
    c4bc:	6d                   	ins    DWORD PTR es:[rdi],dx
    c4bd:	70 20                	jo     c4df <_IO_stdin_used+0x4df>
    c4bf:	72 65                	jb     c526 <_IO_stdin_used+0x526>
    c4c1:	71 75                	jno    c538 <_IO_stdin_used+0x538>
    c4c3:	65 73 74             	gs jae c53a <_IO_stdin_used+0x53a>
    c4c6:	0a 00                	or     al,BYTE PTR [rax]
    c4c8:	49 50                	rex.WB push r8
    c4ca:	76 34                	jbe    c500 <_IO_stdin_used+0x500>
    c4cc:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de545 <_end+0x3e1a1505>
    c4d2:	20 25 73 0a 00 09    	and    BYTE PTR [rip+0x9000a73],ah        # 900cf4b <_end+0x8ecff0b>
    c4d8:	49                   	rex.WB
    c4d9:	43                   	rex.XB
    c4da:	4d 50                	rex.WRB push r8
    c4dc:	20 00                	and    BYTE PTR [rax],al
    c4de:	20 65 63             	and    BYTE PTR [rbp+0x63],ah
    c4e1:	68 6f 20 72 65       	push   0x6572206f
    c4e6:	70 6c                	jo     c554 <_IO_stdin_used+0x554>
    c4e8:	79 00                	jns    c4ea <_IO_stdin_used+0x4ea>
    c4ea:	20 64 65 73          	and    BYTE PTR [rbp+riz*2+0x73],ah
    c4ee:	74 69                	je     c559 <_IO_stdin_used+0x559>
    c4f0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c4f1:	61                   	(bad)  
    c4f2:	74 69                	je     c55d <_IO_stdin_used+0x55d>
    c4f4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c4f5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c4f6:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    c4f9:	72 65                	jb     c560 <_IO_stdin_used+0x560>
    c4fb:	61                   	(bad)  
    c4fc:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c4ff:	62                   	(bad)  
    c500:	6c                   	ins    BYTE PTR es:[rdi],dx
    c501:	65 28 00             	sub    BYTE PTR gs:[rax],al
    c504:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    c507:	74 77                	je     c580 <_IO_stdin_used+0x580>
    c509:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c50a:	72 6b                	jb     c577 <_IO_stdin_used+0x577>
    c50c:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c50f:	72 65                	jb     c576 <_IO_stdin_used+0x576>
    c511:	61                   	(bad)  
    c512:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c515:	62                   	(bad)  
    c516:	6c                   	ins    BYTE PTR es:[rdi],dx
    c517:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c51a:	00 20                	add    BYTE PTR [rax],ah
    c51c:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c51e:	73 74                	jae    c594 <_IO_stdin_used+0x594>
    c520:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c523:	72 65                	jb     c58a <_IO_stdin_used+0x58a>
    c525:	61                   	(bad)  
    c526:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c529:	62                   	(bad)  
    c52a:	6c                   	ins    BYTE PTR es:[rdi],dx
    c52b:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c52e:	00 20                	add    BYTE PTR [rax],ah
    c530:	50                   	push   rax
    c531:	72 6f                	jb     c5a2 <_IO_stdin_used+0x5a2>
    c533:	74 6f                	je     c5a4 <_IO_stdin_used+0x5a4>
    c535:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    c538:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c53b:	72 65                	jb     c5a2 <_IO_stdin_used+0x5a2>
    c53d:	61                   	(bad)  
    c53e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c541:	62                   	(bad)  
    c542:	6c                   	ins    BYTE PTR es:[rdi],dx
    c543:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c546:	00 20                	add    BYTE PTR [rax],ah
    c548:	50                   	push   rax
    c549:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c54a:	72 74                	jb     c5c0 <_IO_stdin_used+0x5c0>
    c54c:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c54f:	72 65                	jb     c5b6 <_IO_stdin_used+0x5b6>
    c551:	61                   	(bad)  
    c552:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c555:	62                   	(bad)  
    c556:	6c                   	ins    BYTE PTR es:[rdi],dx
    c557:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c55a:	00 20                	add    BYTE PTR [rax],ah
    c55c:	46 72 61             	rex.RX jb c5c0 <_IO_stdin_used+0x5c0>
    c55f:	67 6d                	ins    DWORD PTR es:[edi],dx
    c561:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c563:	74 61                	je     c5c6 <_IO_stdin_used+0x5c6>
    c565:	74 69                	je     c5d0 <_IO_stdin_used+0x5d0>
    c567:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c568:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c569:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    c56c:	65 64 65 64 20 29    	gs fs gs and BYTE PTR fs:[rcx],ch
    c572:	00 20                	add    BYTE PTR [rax],ah
    c574:	53                   	push   rbx
    c575:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c576:	75 72                	jne    c5ea <_IO_stdin_used+0x5ea>
    c578:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c57b:	52                   	push   rdx
    c57c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c57d:	75 74                	jne    c5f3 <_IO_stdin_used+0x5f3>
    c57f:	65 20 46 61          	and    BYTE PTR gs:[rsi+0x61],al
    c583:	69 6c 65 64 20 29 00 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x2920
    c58a:	00 
    c58b:	00 00                	add    BYTE PTR [rax],al
    c58d:	00 00                	add    BYTE PTR [rax],al
    c58f:	00 20                	add    BYTE PTR [rax],ah
    c591:	44                   	rex.R
    c592:	65 73 74             	gs jae c609 <_IO_stdin_used+0x609>
    c595:	69 6e 61 74 69 6f 6e 	imul   ebp,DWORD PTR [rsi+0x61],0x6e6f6974
    c59c:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    c59f:	74 77                	je     c618 <_IO_stdin_used+0x618>
    c5a1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5a2:	72 6b                	jb     c60f <_IO_stdin_used+0x60f>
    c5a4:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c5a7:	72 65                	jb     c60e <_IO_stdin_used+0x60e>
    c5a9:	61                   	(bad)  
    c5aa:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c5ad:	62                   	(bad)  
    c5ae:	6c                   	ins    BYTE PTR es:[rdi],dx
    c5af:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c5b2:	00 00                	add    BYTE PTR [rax],al
    c5b4:	00 00                	add    BYTE PTR [rax],al
    c5b6:	00 00                	add    BYTE PTR [rax],al
    c5b8:	20 44 65 73          	and    BYTE PTR [rbp+riz*2+0x73],al
    c5bc:	74 69                	je     c627 <_IO_stdin_used+0x627>
    c5be:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c5bf:	61                   	(bad)  
    c5c0:	74 69                	je     c62b <_IO_stdin_used+0x62b>
    c5c2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5c3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c5c4:	20 48 6f             	and    BYTE PTR [rax+0x6f],cl
    c5c7:	73 74                	jae    c63d <_IO_stdin_used+0x63d>
    c5c9:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c5cc:	72 65                	jb     c633 <_IO_stdin_used+0x633>
    c5ce:	61                   	(bad)  
    c5cf:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c5d2:	62                   	(bad)  
    c5d3:	6c                   	ins    BYTE PTR es:[rdi],dx
    c5d4:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c5d7:	00 20                	add    BYTE PTR [rax],ah
    c5d9:	53                   	push   rbx
    c5da:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5db:	75 72                	jne    c64f <_IO_stdin_used+0x64f>
    c5dd:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c5e0:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c5e2:	73 74                	jae    c658 <_IO_stdin_used+0x658>
    c5e4:	20 49 73             	and    BYTE PTR [rcx+0x73],cl
    c5e7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5e8:	6c                   	ins    BYTE PTR es:[rdi],dx
    c5e9:	61                   	(bad)  
    c5ea:	74 65                	je     c651 <_IO_stdin_used+0x651>
    c5ec:	64 20 29             	and    BYTE PTR fs:[rcx],ch
    c5ef:	00 20                	add    BYTE PTR [rax],ah
    c5f1:	4e                   	rex.WRX
    c5f2:	65 74 77             	gs je  c66c <_IO_stdin_used+0x66c>
    c5f5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5f6:	72 6b                	jb     c663 <_IO_stdin_used+0x663>
    c5f8:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    c5fb:	6d                   	ins    DWORD PTR es:[rdi],dx
    c5fc:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    c603:	74 69                	je     c66e <_IO_stdin_used+0x66e>
    c605:	76 65                	jbe    c66c <_IO_stdin_used+0x66c>
    c607:	6c                   	ins    BYTE PTR es:[rdi],dx
    c608:	79 20                	jns    c62a <_IO_stdin_used+0x62a>
    c60a:	50                   	push   rax
    c60b:	72 6f                	jb     c67c <_IO_stdin_used+0x67c>
    c60d:	68 69 62 69 74       	push   0x74696269
    c612:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    c616:	00 00                	add    BYTE PTR [rax],al
    c618:	20 48 6f             	and    BYTE PTR [rax+0x6f],cl
    c61b:	73 74                	jae    c691 <_IO_stdin_used+0x691>
    c61d:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    c620:	6d                   	ins    DWORD PTR es:[rdi],dx
    c621:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    c628:	74 69                	je     c693 <_IO_stdin_used+0x693>
    c62a:	76 65                	jbe    c691 <_IO_stdin_used+0x691>
    c62c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c62d:	79 20                	jns    c64f <_IO_stdin_used+0x64f>
    c62f:	50                   	push   rax
    c630:	72 6f                	jb     c6a1 <_IO_stdin_used+0x6a1>
    c632:	68 69 62 69 74       	push   0x74696269
    c637:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    c63b:	00 00                	add    BYTE PTR [rax],al
    c63d:	00 00                	add    BYTE PTR [rax],al
    c63f:	00 20                	add    BYTE PTR [rax],ah
    c641:	4e                   	rex.WRX
    c642:	65 74 77             	gs je  c6bc <_IO_stdin_used+0x6bc>
    c645:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c646:	72 6b                	jb     c6b3 <_IO_stdin_used+0x6b3>
    c648:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c64b:	72 65                	jb     c6b2 <_IO_stdin_used+0x6b2>
    c64d:	61                   	(bad)  
    c64e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c651:	62                   	(bad)  
    c652:	6c                   	ins    BYTE PTR es:[rdi],dx
    c653:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    c657:	72 20                	jb     c679 <_IO_stdin_used+0x679>
    c659:	54                   	push   rsp
    c65a:	4f 53                	rex.WRXB push r11
    c65c:	20 29                	and    BYTE PTR [rcx],ch
    c65e:	00 20                	add    BYTE PTR [rax],ah
    c660:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c662:	73 74                	jae    c6d8 <_IO_stdin_used+0x6d8>
    c664:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c667:	72 65                	jb     c6ce <_IO_stdin_used+0x6ce>
    c669:	61                   	(bad)  
    c66a:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c66d:	62                   	(bad)  
    c66e:	6c                   	ins    BYTE PTR es:[rdi],dx
    c66f:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    c673:	72 20                	jb     c695 <_IO_stdin_used+0x695>
    c675:	54                   	push   rsp
    c676:	4f 53                	rex.WRXB push r11
    c678:	20 29                	and    BYTE PTR [rcx],ch
    c67a:	00 00                	add    BYTE PTR [rax],al
    c67c:	00 00                	add    BYTE PTR [rax],al
    c67e:	00 00                	add    BYTE PTR [rax],al
    c680:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c683:	6d                   	ins    DWORD PTR es:[rdi],dx
    c684:	6d                   	ins    DWORD PTR es:[rdi],dx
    c685:	75 6e                	jne    c6f5 <_IO_stdin_used+0x6f5>
    c687:	69 63 61 74 69 6f 6e 	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
    c68e:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    c691:	6d                   	ins    DWORD PTR es:[rdi],dx
    c692:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    c699:	74 69                	je     c704 <_IO_stdin_used+0x704>
    c69b:	76 65                	jbe    c702 <_IO_stdin_used+0x702>
    c69d:	6c                   	ins    BYTE PTR es:[rdi],dx
    c69e:	79 20                	jns    c6c0 <_IO_stdin_used+0x6c0>
    c6a0:	50                   	push   rax
    c6a1:	72 6f                	jb     c712 <_IO_stdin_used+0x712>
    c6a3:	68 69 62 69 74       	push   0x74696269
    c6a8:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    c6ac:	00 20                	add    BYTE PTR [rax],ah
    c6ae:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c6b0:	73 74                	jae    c726 <_IO_stdin_used+0x726>
    c6b2:	20 50 72             	and    BYTE PTR [rax+0x72],dl
    c6b5:	65 63 65 64          	movsxd esp,DWORD PTR gs:[rbp+0x64]
    c6b9:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c6bb:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c6be:	56                   	push   rsi
    c6bf:	69 6f 6c 61 74 69 6f 	imul   ebp,DWORD PTR [rdi+0x6c],0x6f697461
    c6c6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c6c7:	20 29                	and    BYTE PTR [rcx],ch
    c6c9:	00 00                	add    BYTE PTR [rax],al
    c6cb:	00 00                	add    BYTE PTR [rax],al
    c6cd:	00 00                	add    BYTE PTR [rax],al
    c6cf:	00 20                	add    BYTE PTR [rax],ah
    c6d1:	50                   	push   rax
    c6d2:	72 65                	jb     c739 <_IO_stdin_used+0x739>
    c6d4:	63 65 64             	movsxd esp,DWORD PTR [rbp+0x64]
    c6d7:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c6d9:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c6dc:	43 75 74             	rex.XB jne c753 <_IO_stdin_used+0x753>
    c6df:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c6e0:	66 66 20 69 6e       	data16 data16 and BYTE PTR [rcx+0x6e],ch
    c6e5:	20 45 66             	and    BYTE PTR [rbp+0x66],al
    c6e8:	66 65 63 74 20 29    	movsxd si,DWORD PTR gs:[rax+riz*1+0x29]
    c6ee:	00 20                	add    BYTE PTR [rax],ah
    c6f0:	55                   	push   rbp
    c6f1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c6f2:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c6f6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c6f7:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c6fa:	64 65 3d 25 64 20 29 	fs gs cmp eax,0x29206425
    c701:	0a 00                	or     al,BYTE PTR [rax]
    c703:	00 00                	add    BYTE PTR [rax],al
    c705:	00 00                	add    BYTE PTR [rax],al
    c707:	00 20                	add    BYTE PTR [rax],ah
    c709:	53                   	push   rbx
    c70a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c70b:	75 72                	jne    c77f <_IO_stdin_used+0x77f>
    c70d:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c710:	51                   	push   rcx
    c711:	75 65                	jne    c778 <_IO_stdin_used+0x778>
    c713:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c714:	63 68 28             	movsxd ebp,DWORD PTR [rax+0x28]
    c717:	20 66 6c             	and    BYTE PTR [rsi+0x6c],ah
    c71a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c71b:	77 20                	ja     c73d <_IO_stdin_used+0x73d>
    c71d:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    c720:	74 72                	je     c794 <_IO_stdin_used+0x794>
    c722:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c723:	6c                   	ins    BYTE PTR es:[rdi],dx
    c724:	20 29                	and    BYTE PTR [rcx],ch
    c726:	00 20                	add    BYTE PTR [rax],ah
    c728:	52                   	push   rdx
    c729:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x28207463
    c730:	20 28 
    c732:	00 20                	add    BYTE PTR [rax],ah
    c734:	52                   	push   rdx
    c735:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c73c:	20 66 
    c73e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c73f:	72 20                	jb     c761 <_IO_stdin_used+0x761>
    c741:	4e                   	rex.WRX
    c742:	65 74 77             	gs je  c7bc <_IO_stdin_used+0x7bc>
    c745:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c746:	72 6b                	jb     c7b3 <_IO_stdin_used+0x7b3>
    c748:	20 29                	and    BYTE PTR [rcx],ch
    c74a:	00 20                	add    BYTE PTR [rax],ah
    c74c:	52                   	push   rdx
    c74d:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c754:	20 66 
    c756:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c757:	72 20                	jb     c779 <_IO_stdin_used+0x779>
    c759:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c75b:	73 74                	jae    c7d1 <_IO_stdin_used+0x7d1>
    c75d:	20 29                	and    BYTE PTR [rcx],ch
    c75f:	00 20                	add    BYTE PTR [rax],ah
    c761:	52                   	push   rdx
    c762:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c769:	20 66 
    c76b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c76c:	72 20                	jb     c78e <_IO_stdin_used+0x78e>
    c76e:	54                   	push   rsp
    c76f:	4f 53                	rex.WRXB push r11
    c771:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    c774:	64 20 4e 65          	and    BYTE PTR fs:[rsi+0x65],cl
    c778:	74 77                	je     c7f1 <_IO_stdin_used+0x7f1>
    c77a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c77b:	72 6b                	jb     c7e8 <_IO_stdin_used+0x7e8>
    c77d:	20 29                	and    BYTE PTR [rcx],ch
    c77f:	00 20                	add    BYTE PTR [rax],ah
    c781:	52                   	push   rdx
    c782:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c789:	20 66 
    c78b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c78c:	72 20                	jb     c7ae <_IO_stdin_used+0x7ae>
    c78e:	54                   	push   rsp
    c78f:	4f 53                	rex.WRXB push r11
    c791:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    c794:	64 20 48 6f          	and    BYTE PTR fs:[rax+0x6f],cl
    c798:	73 74                	jae    c80e <_IO_stdin_used+0x80e>
    c79a:	20 29                	and    BYTE PTR [rcx],ch
    c79c:	00 20                	add    BYTE PTR [rax],ah
    c79e:	65 63 68 6f          	movsxd ebp,DWORD PTR gs:[rax+0x6f]
    c7a2:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    c7a5:	71 75                	jno    c81c <_IO_stdin_used+0x81c>
    c7a7:	65 73 74             	gs jae c81e <_IO_stdin_used+0x81e>
    c7aa:	00 00                	add    BYTE PTR [rax],al
    c7ac:	00 00                	add    BYTE PTR [rax],al
    c7ae:	00 00                	add    BYTE PTR [rax],al
    c7b0:	20 4d 6f             	and    BYTE PTR [rbp+0x6f],cl
    c7b3:	62                   	(bad)  
    c7b4:	69 6c 65 20 49 50 20 	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x41205049
    c7bb:	41 
    c7bc:	64 76 65             	fs jbe c824 <_IO_stdin_used+0x824>
    c7bf:	72 74                	jb     c835 <_IO_stdin_used+0x835>
    c7c1:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    c7c8:	20 28                	and    BYTE PTR [rax],ch
    c7ca:	4e 6f                	rex.WRX outs dx,DWORD PTR ds:[rsi]
    c7cc:	72 6d                	jb     c83b <_IO_stdin_used+0x83b>
    c7ce:	61                   	(bad)  
    c7cf:	6c                   	ins    BYTE PTR es:[rdi],dx
    c7d0:	20 52 6f             	and    BYTE PTR [rdx+0x6f],dl
    c7d3:	75 74                	jne    c849 <_IO_stdin_used+0x849>
    c7d5:	65 72 20             	gs jb  c7f8 <_IO_stdin_used+0x7f8>
    c7d8:	41                   	rex.B
    c7d9:	64 76 65             	fs jbe c841 <_IO_stdin_used+0x841>
    c7dc:	72 74                	jb     c852 <_IO_stdin_used+0x852>
    c7de:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    c7e5:	20 29                	and    BYTE PTR [rcx],ch
    c7e7:	20 29                	and    BYTE PTR [rcx],ch
    c7e9:	0a 20                	or     ah,BYTE PTR [rax]
    c7eb:	00 00                	add    BYTE PTR [rax],al
    c7ed:	00 00                	add    BYTE PTR [rax],al
    c7ef:	00 20                	add    BYTE PTR [rax],ah
    c7f1:	52                   	push   rdx
    c7f2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c7f3:	75 74                	jne    c869 <_IO_stdin_used+0x869>
    c7f5:	65 72 20             	gs jb  c818 <_IO_stdin_used+0x818>
    c7f8:	41                   	rex.B
    c7f9:	64 76 65             	fs jbe c861 <_IO_stdin_used+0x861>
    c7fc:	72 74                	jb     c872 <_IO_stdin_used+0x872>
    c7fe:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    c805:	20 28                	and    BYTE PTR [rax],ch
    c807:	55                   	push   rbp
    c808:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c809:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c80d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c80e:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c811:	64 65 3a 20          	fs cmp ah,BYTE PTR gs:[rax]
    c815:	25 64 20 29 20       	and    eax,0x20292064
    c81a:	29 0a                	sub    DWORD PTR [rdx],ecx
    c81c:	00 20                	add    BYTE PTR [rax],ah
    c81e:	52                   	push   rdx
    c81f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c820:	75 74                	jne    c896 <_IO_stdin_used+0x896>
    c822:	65 72 20             	gs jb  c845 <_IO_stdin_used+0x845>
    c825:	53                   	push   rbx
    c826:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c827:	6c                   	ins    BYTE PTR es:[rdi],dx
    c828:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    c82f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c830:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c831:	20 29                	and    BYTE PTR [rcx],ch
    c833:	00 20                	add    BYTE PTR [rax],ah
    c835:	54                   	push   rsp
    c836:	69 6d 65 20 54 6f 20 	imul   ebp,DWORD PTR [rbp+0x65],0x206f5420
    c83d:	4c 69 76 65 20 65 78 	imul   r14,QWORD PTR [rsi+0x65],0x63786520
    c844:	63 
    c845:	65 65 64 65 64 00 20 	gs gs fs gs add BYTE PTR fs:[rax],ah
    c84c:	28 20                	sub    BYTE PTR [rax],ah
    c84e:	74 74                	je     c8c4 <_IO_stdin_used+0x8c4>
    c850:	6c                   	ins    BYTE PTR es:[rdi],dx
    c851:	20 65 78             	and    BYTE PTR [rbp+0x78],ah
    c854:	63 65 65             	movsxd esp,DWORD PTR [rbp+0x65]
    c857:	64 65 64 20 69 6e    	fs gs and BYTE PTR fs:[rcx+0x6e],ch
    c85d:	20 74 72 61          	and    BYTE PTR [rdx+rsi*2+0x61],dh
    c861:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c862:	73 69                	jae    c8cd <_IO_stdin_used+0x8cd>
    c864:	74 20                	je     c886 <_IO_stdin_used+0x886>
    c866:	29 00                	sub    DWORD PTR [rax],eax
    c868:	20 28                	and    BYTE PTR [rax],ch
    c86a:	20 46 72             	and    BYTE PTR [rsi+0x72],al
    c86d:	61                   	(bad)  
    c86e:	67 6d                	ins    DWORD PTR es:[edi],dx
    c870:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c872:	74 20                	je     c894 <_IO_stdin_used+0x894>
    c874:	52                   	push   rdx
    c875:	65 61                	gs (bad) 
    c877:	73 73                	jae    c8ec <_IO_stdin_used+0x8ec>
    c879:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    c87b:	62                   	(bad)  
    c87c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c87d:	79 20                	jns    c89f <_IO_stdin_used+0x89f>
    c87f:	74 69                	je     c8ea <_IO_stdin_used+0x8ea>
    c881:	6d                   	ins    DWORD PTR es:[rdi],dx
    c882:	65 20 65 78          	and    BYTE PTR gs:[rbp+0x78],ah
    c886:	63 65 65             	movsxd esp,DWORD PTR [rbp+0x65]
    c889:	64 65 64 20 29       	fs gs and BYTE PTR fs:[rcx],ch
    c88e:	00 20                	add    BYTE PTR [rax],ah
    c890:	28 20                	sub    BYTE PTR [rax],ah
    c892:	55                   	push   rbp
    c893:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c894:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c898:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c899:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c89c:	64 65 3a 20          	fs cmp ah,BYTE PTR gs:[rax]
    c8a0:	25 64 29 0a 00       	and    eax,0xa2964
    c8a5:	20 74 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dh
    c8a9:	65 73 74             	gs jae c920 <_IO_stdin_used+0x920>
    c8ac:	61                   	(bad)  
    c8ad:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8ae:	70 20                	jo     c8d0 <_IO_stdin_used+0x8d0>
    c8b0:	72 65                	jb     c917 <_IO_stdin_used+0x917>
    c8b2:	71 75                	jno    c929 <_IO_stdin_used+0x929>
    c8b4:	65 73 74             	gs jae c92b <_IO_stdin_used+0x92b>
    c8b7:	00 20                	add    BYTE PTR [rax],ah
    c8b9:	74 69                	je     c924 <_IO_stdin_used+0x924>
    c8bb:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8bc:	65 73 74             	gs jae c933 <_IO_stdin_used+0x933>
    c8bf:	61                   	(bad)  
    c8c0:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8c1:	70 20                	jo     c8e3 <_IO_stdin_used+0x8e3>
    c8c3:	72 65                	jb     c92a <_IO_stdin_used+0x92a>
    c8c5:	70 6c                	jo     c933 <_IO_stdin_used+0x933>
    c8c7:	79 00                	jns    c8c9 <_IO_stdin_used+0x8c9>
    c8c9:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    c8cc:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c8d0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c8d1:	20 69 63             	and    BYTE PTR [rcx+0x63],ch
    c8d4:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8d5:	70 20                	jo     c8f7 <_IO_stdin_used+0x8f7>
    c8d7:	74 79                	je     c952 <_IO_stdin_used+0x952>
    c8d9:	70 65                	jo     c940 <_IO_stdin_used+0x940>
    c8db:	3d 25 64 00 00       	cmp    eax,0x6425
    c8e0:	26 78 ff             	es js  c8e2 <_IO_stdin_used+0x8e2>
    c8e3:	ff 49 7b             	dec    DWORD PTR [rcx+0x7b]
    c8e6:	ff                   	(bad)  
    c8e7:	ff 49 7b             	dec    DWORD PTR [rcx+0x7b]
    c8ea:	ff                   	(bad)  
    c8eb:	ff 37                	push   QWORD PTR [rdi]
    c8ed:	78 ff                	js     c8ee <_IO_stdin_used+0x8ee>
    c8ef:	ff a4 79 ff ff b5 79 	jmp    QWORD PTR [rcx+rdi*2+0x79b5ffff]
    c8f6:	ff                   	(bad)  
    c8f7:	ff 49 7b             	dec    DWORD PTR [rcx+0x7b]
    c8fa:	ff                   	(bad)  
    c8fb:	ff 49 7b             	dec    DWORD PTR [rcx+0x7b]
    c8fe:	ff                   	(bad)  
    c8ff:	ff 52 7a             	call   QWORD PTR [rdx+0x7a]
    c902:	ff                   	(bad)  
    c903:	ff 63 7a             	jmp    QWORD PTR [rbx+0x7a]
    c906:	ff                   	(bad)  
    c907:	ff ae 7a ff ff bf    	jmp    FWORD PTR [rsi-0x40000086]
    c90d:	7a ff                	jp     c90e <_IO_stdin_used+0x90e>
    c90f:	ff 49 7b             	dec    DWORD PTR [rcx+0x7b]
    c912:	ff                   	(bad)  
    c913:	ff 2d 7b ff ff 3b    	jmp    FWORD PTR [rip+0x3bffff7b]        # 3c00c894 <_end+0x3becf854>
    c919:	7b ff                	jnp    c91a <_IO_stdin_used+0x91a>
    c91b:	ff 46 78             	inc    DWORD PTR [rsi+0x78]
    c91e:	ff                   	(bad)  
    c91f:	ff 57 78             	call   QWORD PTR [rdi+0x78]
    c922:	ff                   	(bad)  
    c923:	ff 68 78             	jmp    FWORD PTR [rax+0x78]
    c926:	ff                   	(bad)  
    c927:	ff                   	(bad)  
    c928:	79 78                	jns    c9a2 <_IO_stdin_used+0x9a2>
    c92a:	ff                   	(bad)  
    c92b:	ff 8a 78 ff ff 9b    	dec    DWORD PTR [rdx-0x64000088]
    c931:	78 ff                	js     c932 <_IO_stdin_used+0x932>
    c933:	ff ac 78 ff ff bd 78 	jmp    FWORD PTR [rax+rdi*2+0x78bdffff]
    c93a:	ff                   	(bad)  
    c93b:	ff ce                	dec    esi
    c93d:	78 ff                	js     c93e <_IO_stdin_used+0x93e>
    c93f:	ff                   	(bad)  
    c940:	df 78 ff             	fistp  QWORD PTR [rax-0x1]
    c943:	ff                   	(bad)  
    c944:	ed                   	in     eax,dx
    c945:	78 ff                	js     c946 <_IO_stdin_used+0x946>
    c947:	ff                   	(bad)  
    c948:	fb                   	sti    
    c949:	78 ff                	js     c94a <_IO_stdin_used+0x94a>
    c94b:	ff 09                	dec    DWORD PTR [rcx]
    c94d:	79 ff                	jns    c94e <_IO_stdin_used+0x94e>
    c94f:	ff 17                	call   QWORD PTR [rdi]
    c951:	79 ff                	jns    c952 <_IO_stdin_used+0x952>
    c953:	ff 25 79 ff ff 33    	jmp    QWORD PTR [rip+0x33ffff79]        # 3400c8d2 <_end+0x33ecf892>
    c959:	79 ff                	jns    c95a <_IO_stdin_used+0x95a>
    c95b:	ff 00                	inc    DWORD PTR [rax]
    c95d:	00 00                	add    BYTE PTR [rax],al
    c95f:	00 1b                	add    BYTE PTR [rbx],bl
    c961:	5b                   	pop    rbx
    c962:	33 32                	xor    esi,DWORD PTR [rdx]
    c964:	6d                   	ins    DWORD PTR es:[rdi],dx
    c965:	00 25 73 00 49 50    	add    BYTE PTR [rip+0x50490073],ah        # 5049c9de <_end+0x5035f99e>
    c96b:	76 34                	jbe    c9a1 <_IO_stdin_used+0x9a1>
    c96d:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642603e6 <_end+0x641233a6>
    c973:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325e9b7 <_end+0x73121977>
    c979:	3a 25 64 0a 00 09    	cmp    ah,BYTE PTR [rip+0x9000a64]        # 900d3e3 <_end+0x8ed03a3>
    c97f:	54                   	push   rsp
    c980:	43 50                	rex.XB push r8
    c982:	20 5b 00             	and    BYTE PTR [rbx+0x0],bl
    c985:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c988:	33 6d 00             	xor    ebp,DWORD PTR [rbp+0x0]
    c98b:	25 73 20 41 43       	and    eax,0x43412073
    c990:	4b 20 00             	rex.WXB and BYTE PTR [r8],al
    c993:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c996:	37                   	(bad)  
    c997:	6d                   	ins    DWORD PTR es:[rdi],dx
    c998:	00 25 73 20 46 49    	add    BYTE PTR [rip+0x49462073],ah        # 4946ea11 <_end+0x493319d1>
    c99e:	4e 20 00             	rex.WRX and BYTE PTR [rax],r8b
    c9a1:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9a4:	34 6d                	xor    al,0x6d
    c9a6:	00 25 73 20 50 53    	add    BYTE PTR [rip+0x53502073],ah        # 5350ea1f <_end+0x533d19df>
    c9ac:	48 20 00             	rex.W and BYTE PTR [rax],al
    c9af:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9b2:	31 6d 00             	xor    DWORD PTR [rbp+0x0],ebp
    c9b5:	25 73 20 52 53       	and    eax,0x53522073
    c9ba:	54                   	push   rsp
    c9bb:	20 00                	and    BYTE PTR [rax],al
    c9bd:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9c0:	35 6d 00 25 73       	xor    eax,0x7325006d
    c9c5:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    c9c8:	4e 20 00             	rex.WRX and BYTE PTR [rax],r8b
    c9cb:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9ce:	36 6d                	ss ins DWORD PTR es:[rdi],dx
    c9d0:	00 25 73 20 55 52    	add    BYTE PTR [rip+0x52552073],ah        # 5255ea49 <_end+0x52421a09>
    c9d6:	47 20 00             	rex.RXB and BYTE PTR [r8],r8b
    c9d9:	5d                   	pop    rbp
    c9da:	00 1b                	add    BYTE PTR [rbx],bl
    c9dc:	5b                   	pop    rbx
    c9dd:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    c9e0:	25 73 53 75 73       	and    eax,0x73755373
    c9e5:	70 69                	jo     ca50 <_IO_stdin_used+0xa50>
    c9e7:	63 69 6f             	movsxd ebp,DWORD PTR [rcx+0x6f]
    c9ea:	75 73                	jne    ca5f <_IO_stdin_used+0xa5f>
    c9ec:	20 54 43 50          	and    BYTE PTR [rbx+rax*2+0x50],dl
    c9f0:	20 50 61             	and    BYTE PTR [rax+0x61],dl
    c9f3:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    c9f6:	74 20                	je     ca18 <_IO_stdin_used+0xa18>
    c9f8:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c9fa:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    c9fd:	74 65                	je     ca64 <_IO_stdin_used+0xa64>
    c9ff:	72 65                	jb     ca66 <_IO_stdin_used+0xa66>
    ca01:	64 3a 20             	cmp    ah,BYTE PTR fs:[rax]
    ca04:	25 73 3a 25 64       	and    eax,0x64253a73
    ca09:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325ea4d <_end+0x73121a0d>
    ca0f:	3a 25 64 2c 20 25    	cmp    ah,BYTE PTR [rip+0x25202c64]        # 2520f679 <_end+0x250d2639>
    ca15:	64 20 66 6c          	and    BYTE PTR fs:[rsi+0x6c],ah
    ca19:	61                   	(bad)  
    ca1a:	67 73 25             	addr32 jae ca42 <_IO_stdin_used+0xa42>
    ca1d:	73 0a                	jae    ca29 <_IO_stdin_used+0xa29>
    ca1f:	00 1b                	add    BYTE PTR [rbx],bl
    ca21:	5b                   	pop    rbx
    ca22:	39 36                	cmp    DWORD PTR [rsi],esi
    ca24:	6d                   	ins    DWORD PTR es:[rdi],dx
    ca25:	00 25 73 00 49 50    	add    BYTE PTR [rip+0x50490073],ah        # 5049ca9e <_end+0x5035fa5e>
    ca2b:	76 34                	jbe    ca61 <_IO_stdin_used+0xa61>
    ca2d:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642604a6 <_end+0x64123466>
    ca33:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325ea77 <_end+0x73121a37>
    ca39:	3a 25 64 20 55 44    	cmp    ah,BYTE PTR [rip+0x44552064]        # 4455eaa3 <_end+0x44421a63>
    ca3f:	50                   	push   rax
    ca40:	0a 00                	or     al,BYTE PTR [rax]
    ca42:	1b 5b 30             	sbb    ebx,DWORD PTR [rbx+0x30]
    ca45:	6d                   	ins    DWORD PTR es:[rdi],dx
    ca46:	00 00                	add    BYTE PTR [rax],al
    ca48:	49 50                	rex.WB push r8
    ca4a:	76 34                	jbe    ca80 <_IO_stdin_used+0xa80>
    ca4c:	20 49 47             	and    BYTE PTR [rcx+0x47],cl
    ca4f:	4d 50                	rex.WRB push r8
    ca51:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2deaca <_end+0x3e1a1a8a>
    ca57:	20 25 73 20 5b 00    	and    BYTE PTR [rip+0x5b2073],ah        # 5bead0 <_end+0x481a90>
    ca5d:	20 4d 65             	and    BYTE PTR [rbp+0x65],cl
    ca60:	6d                   	ins    DWORD PTR es:[rdi],dx
    ca61:	62                   	(bad)  
    ca62:	65 72 73             	gs jb  cad8 <_IO_stdin_used+0xad8>
    ca65:	68 69 70 20 51       	push   0x51207069
    ca6a:	75 65                	jne    cad1 <_IO_stdin_used+0xad1>
    ca6c:	72 79                	jb     cae7 <_IO_stdin_used+0xae7>
    ca6e:	20 5d 00             	and    BYTE PTR [rbp+0x0],bl
    ca71:	00 00                	add    BYTE PTR [rax],al
    ca73:	00 00                	add    BYTE PTR [rax],al
    ca75:	00 00                	add    BYTE PTR [rax],al
    ca77:	00 20                	add    BYTE PTR [rax],ah
    ca79:	4d                   	rex.WRB
    ca7a:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    ca7c:	62                   	(bad)  
    ca7d:	65 72 73             	gs jb  caf3 <_IO_stdin_used+0xaf3>
    ca80:	68 69 70 20 52       	push   0x52207069
    ca85:	65 70 6f             	gs jo  caf7 <_IO_stdin_used+0xaf7>
    ca88:	72 74                	jb     cafe <_IO_stdin_used+0xafe>
    ca8a:	20 2f                	and    BYTE PTR [rdi],ch
    ca8c:	20 4a 6f             	and    BYTE PTR [rdx+0x6f],cl
    ca8f:	69 6e 20 67 72 6f 75 	imul   ebp,DWORD PTR [rsi+0x20],0x756f7267
    ca96:	70 20                	jo     cab8 <_IO_stdin_used+0xab8>
    ca98:	25 73 20 66 6f       	and    eax,0x6f662073
    ca9d:	72 20                	jb     cabf <_IO_stdin_used+0xabf>
    ca9f:	61                   	(bad)  
    caa0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    caa1:	79 20                	jns    cac3 <_IO_stdin_used+0xac3>
    caa3:	73 6f                	jae    cb14 <_IO_stdin_used+0xb14>
    caa5:	75 72                	jne    cb19 <_IO_stdin_used+0xb19>
    caa7:	63 65 73             	movsxd esp,DWORD PTR [rbp+0x73]
    caaa:	20 5d 0a             	and    BYTE PTR [rbp+0xa],bl
    caad:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    cab0:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    cab4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cab5:	20 49 47             	and    BYTE PTR [rcx+0x47],cl
    cab8:	4d 50                	rex.WRB push r8
    caba:	20 54 79 70          	and    BYTE PTR [rcx+rdi*2+0x70],dl
    cabe:	65 3d 25 64 20 5d    	gs cmp eax,0x5d206425
    cac4:	0a 00                	or     al,BYTE PTR [rax]
    cac6:	25 64 2d 25 30       	and    eax,0x30252d64
    cacb:	32 64 2d 25          	xor    ah,BYTE PTR [rbp+rbp*1+0x25]
    cacf:	30 32                	xor    BYTE PTR [rdx],dh
    cad1:	64 20 25 30 32 64 3a 	and    BYTE PTR fs:[rip+0x3a643230],ah        # 3a64fd08 <_end+0x3a512cc8>
    cad8:	25 30 32 64 3a       	and    eax,0x3a643230
    cadd:	25 30 32 64 00       	and    eax,0x643230
    cae2:	25 73 20 25 73       	and    eax,0x73252073
    cae7:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2deb60 <_end+0x3e1a1b20>
    caed:	20 25 73 0a 00 25    	and    BYTE PTR [rip+0x25000a73],ah        # 2500d566 <_end+0x24ed0526>
    caf3:	73 20                	jae    cb15 <_IO_stdin_used+0xb15>
    caf5:	25 73 20 25 73       	and    eax,0x73252073
    cafa:	3a 25 64 20 2d 3e    	cmp    ah,BYTE PTR [rip+0x3e2d2064]        # 3e2deb64 <_end+0x3e1a1b24>
    cb00:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64260579 <_end+0x64123539>
    cb06:	0a 00                	or     al,BYTE PTR [rax]
    cb08:	25 73 00 61 00       	and    eax,0x610073
    cb0d:	25 30 32 78 00       	and    eax,0x783230
    cb12:	00 00                	add    BYTE PTR [rax],al
    cb14:	00 00                	add    BYTE PTR [rax],al
    cb16:	00 00                	add    BYTE PTR [rax],al
    cb18:	72 00                	jb     cb1a <_IO_stdin_used+0xb1a>
    cb1a:	00 00                	add    BYTE PTR [rax],al
    cb1c:	00 00                	add    BYTE PTR [rax],al
    cb1e:	00 00                	add    BYTE PTR [rax],al
    cb20:	45 72 72             	rex.RB jb cb95 <_IO_stdin_used+0xb95>
    cb23:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb24:	72 20                	jb     cb46 <_IO_stdin_used+0xb46>
    cb26:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb27:	70 65                	jo     cb8e <_IO_stdin_used+0xb8e>
    cb29:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cb2a:	69 6e 67 20 63 6f 6e 	imul   ebp,DWORD PTR [rsi+0x67],0x6e6f6320
    cb31:	66 69 67 75 72 61    	imul   sp,WORD PTR [rdi+0x75],0x6172
    cb37:	74 69                	je     cba2 <_IO_stdin_used+0xba2>
    cb39:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb3a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cb3b:	20 66 69             	and    BYTE PTR [rsi+0x69],ah
    cb3e:	6c                   	ins    BYTE PTR es:[rdi],dx
    cb3f:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    cb42:	25 73 0a 00 0a       	and    eax,0xa000a73
    cb47:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    cb4a:	72 69                	jb     cbb5 <_IO_stdin_used+0xbb5>
    cb4c:	63 74 5f 69          	movsxd esi,DWORD PTR [rdi+rbx*2+0x69]
    cb50:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
    cb53:	5f                   	pop    rdi
    cb54:	74 69                	je     cbbf <_IO_stdin_used+0xbbf>
    cb56:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb57:	65 73 74             	gs jae cbce <_IO_stdin_used+0xbce>
    cb5a:	61                   	(bad)  
    cb5b:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb5c:	70 5f                	jo     cbbd <_IO_stdin_used+0xbbd>
    cb5e:	72 65                	jb     cbc5 <_IO_stdin_used+0xbc5>
    cb60:	71 3d                	jno    cb9f <_IO_stdin_used+0xb9f>
    cb62:	00 59 45             	add    BYTE PTR [rcx+0x45],bl
    cb65:	53                   	push   rbx
    cb66:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    cb69:	72 69                	jb     cbd4 <_IO_stdin_used+0xbd4>
    cb6b:	63 74 5f 6e          	movsxd esi,DWORD PTR [rdi+rbx*2+0x6e]
    cb6f:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb70:	61                   	(bad)  
    cb71:	70 5f                	jo     cbd2 <_IO_stdin_used+0xbd2>
    cb73:	68 6f 73 74 5f       	push   0x5f74736f
    cb78:	61                   	(bad)  
    cb79:	6c                   	ins    BYTE PTR es:[rdi],dx
    cb7a:	69 76 65 5f 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x6568635f
    cb81:	63 6b 3d             	movsxd ebp,DWORD PTR [rbx+0x3d]
    cb84:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
    cb87:	65 61                	gs (bad) 
    cb89:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cb8a:	5f                   	pop    rdi
    cb8b:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    cb8e:	61                   	(bad)  
    cb8f:	79 5f                	jns    cbf0 <_IO_stdin_used+0xbf0>
    cb91:	69 6e 5f 70 61 63 6b 	imul   ebp,DWORD PTR [rsi+0x5f],0x6b636170
    cb98:	65 74 73             	gs je  cc0e <_IO_stdin_used+0xc0e>
    cb9b:	3d 00 43 6c 65       	cmp    eax,0x656c4300
    cba0:	61                   	(bad)  
    cba1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cba2:	20 64 65 6c          	and    BYTE PTR [rbp+riz*2+0x6c],ah
    cba6:	61                   	(bad)  
    cba7:	79 20                	jns    cbc9 <_IO_stdin_used+0xbc9>
    cba9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbaa:	65 65 64 73 20       	gs gs fs jae cbcf <_IO_stdin_used+0xbcf>
    cbaf:	61                   	(bad)  
    cbb0:	20 76 61             	and    BYTE PTR [rsi+0x61],dh
    cbb3:	6c                   	ins    BYTE PTR es:[rdi],dx
    cbb4:	75 65                	jne    cc1b <_IO_stdin_used+0xc1b>
    cbb6:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
    cbb9:	65 61                	gs (bad) 
    cbbb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbbc:	5f                   	pop    rdi
    cbbd:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    cbc0:	61                   	(bad)  
    cbc1:	79 5f                	jns    cc22 <_IO_stdin_used+0xc22>
    cbc3:	69 6e 5f 6d 73 65 63 	imul   ebp,DWORD PTR [rsi+0x5f],0x6365736d
    cbca:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cbcb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbcc:	64 73 3d             	fs jae cc0c <_IO_stdin_used+0xc0c>
    cbcf:	00 75 73             	add    BYTE PTR [rbp+0x73],dh
    cbd2:	65 5f                	gs pop rdi
    cbd4:	73 71                	jae    cc47 <_IO_stdin_used+0xc47>
    cbd6:	6c                   	ins    BYTE PTR es:[rdi],dx
    cbd7:	69 74 65 3d 00 73 71 	imul   esi,DWORD PTR [rbp+riz*2+0x3d],0x6c717300
    cbde:	6c 
    cbdf:	69 74 65 5f 64 61 74 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x61746164
    cbe6:	61 
    cbe7:	62 61                	(bad)  
    cbe9:	73 65                	jae    cc50 <_IO_stdin_used+0xc50>
    cbeb:	5f                   	pop    rdi
    cbec:	70 61                	jo     cc4f <_IO_stdin_used+0xc4f>
    cbee:	74 68                	je     cc58 <_IO_stdin_used+0xc58>
    cbf0:	3d 00 73 71 6c       	cmp    eax,0x6c717300
    cbf5:	69 74 65 5f 64 61 74 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x61746164
    cbfc:	61 
    cbfd:	62 61                	(bad)  
    cbff:	73 65                	jae    cc66 <_IO_stdin_used+0xc66>
    cc01:	5f                   	pop    rdi
    cc02:	70 61                	jo     cc65 <_IO_stdin_used+0xc65>
    cc04:	74 68                	je     cc6e <_IO_stdin_used+0xc6e>
    cc06:	3a 20                	cmp    ah,BYTE PTR [rax]
    cc08:	25 73 00 69 6e       	and    eax,0x6e690073
    cc0d:	5f                   	pop    rdi
    cc0e:	61                   	(bad)  
    cc0f:	64 61                	fs (bad) 
    cc11:	70 74                	jo     cc87 <_IO_stdin_used+0xc87>
    cc13:	65 72 3d             	gs jb  cc53 <_IO_stdin_used+0xc53>
    cc16:	00 00                	add    BYTE PTR [rax],al
    cc18:	72 75                	jb     cc8f <_IO_stdin_used+0xc8f>
    cc1a:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc1b:	65 5f                	gs pop rdi
    cc1d:	70 61                	jo     cc80 <_IO_stdin_used+0xc80>
    cc1f:	72 73                	jb     cc94 <_IO_stdin_used+0xc94>
    cc21:	65 72 2e             	gs jb  cc52 <_IO_stdin_used+0xc52>
    cc24:	63 3a                	movsxd edi,DWORD PTR [rdx]
    cc26:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    cc29:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc2a:	65 5f                	gs pop rdi
    cc2c:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc2d:	69 62 72 61 72 79 5f 	imul   esp,DWORD PTR [rdx+0x72],0x5f797261
    cc34:	70 61                	jo     cc97 <_IO_stdin_used+0xc97>
    cc36:	72 73                	jb     ccab <_IO_stdin_used+0xcab>
    cc38:	65 72 3a             	gs jb  cc75 <_IO_stdin_used+0xc75>
    cc3b:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    cc3e:	5f                   	pop    rdi
    cc3f:	61                   	(bad)  
    cc40:	64 61                	fs (bad) 
    cc42:	70 74                	jo     ccb8 <_IO_stdin_used+0xcb8>
    cc44:	65 72 3a             	gs jb  cc81 <_IO_stdin_used+0xc81>
    cc47:	20 25 73 00 6f 75    	and    BYTE PTR [rip+0x756f0073],ah        # 756fccc0 <_end+0x755bfc80>
    cc4d:	74 5f                	je     ccae <_IO_stdin_used+0xcae>
    cc4f:	61                   	(bad)  
    cc50:	64 61                	fs (bad) 
    cc52:	70 74                	jo     ccc8 <_IO_stdin_used+0xcc8>
    cc54:	65 72 3d             	gs jb  cc94 <_IO_stdin_used+0xc94>
    cc57:	00 72 75             	add    BYTE PTR [rdx+0x75],dh
    cc5a:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc5b:	65 5f                	gs pop rdi
    cc5d:	70 61                	jo     ccc0 <_IO_stdin_used+0xcc0>
    cc5f:	72 73                	jb     ccd4 <_IO_stdin_used+0xcd4>
    cc61:	65 72 2e             	gs jb  cc92 <_IO_stdin_used+0xc92>
    cc64:	63 3a                	movsxd edi,DWORD PTR [rdx]
    cc66:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    cc69:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc6a:	65 5f                	gs pop rdi
    cc6c:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc6d:	69 62 72 61 72 79 5f 	imul   esp,DWORD PTR [rdx+0x72],0x5f797261
    cc74:	70 61                	jo     ccd7 <_IO_stdin_used+0xcd7>
    cc76:	72 73                	jb     cceb <_IO_stdin_used+0xceb>
    cc78:	65 72 3a             	gs jb  ccb5 <_IO_stdin_used+0xcb5>
    cc7b:	20 6f 75             	and    BYTE PTR [rdi+0x75],ch
    cc7e:	74 5f                	je     ccdf <_IO_stdin_used+0xcdf>
    cc80:	61                   	(bad)  
    cc81:	64 61                	fs (bad) 
    cc83:	70 74                	jo     ccf9 <_IO_stdin_used+0xcf9>
    cc85:	65 72 3a             	gs jb  ccc2 <_IO_stdin_used+0xcc2>
    cc88:	20 25 73 00 6d 6f    	and    BYTE PTR [rip+0x6f6d0073],ah        # 6f6dcd01 <_end+0x6f59fcc1>
    cc8e:	64 65 3d 00 6d 6f 64 	fs gs cmp eax,0x646f6d00
    cc95:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    cc98:	25 73 00 52 75       	and    eax,0x75520073
    cc9d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cc9e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cc9f:	69 6e 67 20 69 6e 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206e6920
    cca6:	00 32                	add    BYTE PTR [rdx],dh
    cca8:	00 49 50             	add    BYTE PTR [rcx+0x50],cl
    ccab:	53                   	push   rbx
    ccac:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    ccaf:	64 65 20 61 73       	fs and BYTE PTR gs:[rcx+0x73],ah
    ccb4:	20 70 65             	and    BYTE PTR [rax+0x65],dh
    ccb7:	72 20                	jb     ccd9 <_IO_stdin_used+0xcd9>
    ccb9:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    ccbc:	66 69 67 00 49 44    	imul   sp,WORD PTR [rdi+0x0],0x4449
    ccc2:	53                   	push   rbx
    ccc3:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    ccc6:	64 65 20 61 73       	fs and BYTE PTR gs:[rcx+0x73],ah
    cccb:	20 70 65             	and    BYTE PTR [rax+0x65],dh
    ccce:	72 20                	jb     ccf0 <_IO_stdin_used+0xcf0>
    ccd0:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    ccd3:	66 69 67 00 6c 6f    	imul   sp,WORD PTR [rdi+0x0],0x6f6c
    ccd9:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
    ccdc:	69 70 3d 00 6c 6f 63 	imul   esi,DWORD PTR [rax+0x3d],0x636f6c00
    cce3:	61                   	(bad)  
    cce4:	6c                   	ins    BYTE PTR es:[rdi],dx
    cce5:	5f                   	pop    rdi
    cce6:	69 70 20 61 73 20 70 	imul   esi,DWORD PTR [rax+0x20],0x70207361
    cced:	65 72 20             	gs jb  cd10 <_IO_stdin_used+0xd10>
    ccf0:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    ccf3:	66 69 67 3a 20 25    	imul   sp,WORD PTR [rdi+0x3a],0x2520
    ccf9:	73 00                	jae    ccfb <_IO_stdin_used+0xcfb>
    ccfb:	64 65 66 67 77 3d    	fs gs data16 addr32 ja cd3e <_IO_stdin_used+0xd3e>
    cd01:	00 75 73             	add    BYTE PTR [rbp+0x73],dh
    cd04:	65 5f                	gs pop rdi
    cd06:	73 70                	jae    cd78 <_IO_stdin_used+0xd78>
    cd08:	69 3d 00 56 49 47 49 	imul   edi,DWORD PTR [rip+0x47495600],0x53204c49        # 474a2312 <_end+0x473652d2>
    cd0f:	4c 20 53 
    cd12:	50                   	push   rax
    cd13:	49 20 73 65          	rex.WB and BYTE PTR [r11+0x65],sil
    cd17:	72 76                	jb     cd8f <_IO_stdin_used+0xd8f>
    cd19:	69 63 65 20 61 63 74 	imul   esp,DWORD PTR [rbx+0x65],0x74636120
    cd20:	69 76 65 00 48 4f 4d 	imul   esi,DWORD PTR [rsi+0x65],0x4d4f4800
    cd27:	45 5f                	rex.RB pop r15
    cd29:	4e                   	rex.WRX
    cd2a:	45 54                	rex.RB push r12
    cd2c:	3d 00 48 4f 4d       	cmp    eax,0x4d4f4800
    cd31:	45 5f                	rex.RB pop r15
    cd33:	4e                   	rex.WRX
    cd34:	45 54                	rex.RB push r12
    cd36:	5f                   	pop    rdi
    cd37:	4d                   	rex.WRB
    cd38:	41 53                	push   r11
    cd3a:	4b 3d 00 6c 6f 63    	rex.WXB cmp rax,0x636f6c00
    cd40:	61                   	(bad)  
    cd41:	74 69                	je     cdac <_IO_stdin_used+0xdac>
    cd43:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd44:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd45:	3d 00 65 78 74       	cmp    eax,0x74786500
    cd4a:	65 72 6e             	gs jb  cdbb <_IO_stdin_used+0xdbb>
    cd4d:	61                   	(bad)  
    cd4e:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd4f:	00 53 79             	add    BYTE PTR [rbx+0x79],dl
    cd52:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd53:	74 61                	je     cdb6 <_IO_stdin_used+0xdb6>
    cd55:	78 20                	js     cd77 <_IO_stdin_used+0xd77>
    cd57:	65 72 72             	gs jb  cdcc <_IO_stdin_used+0xdcc>
    cd5a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd5b:	72 20                	jb     cd7d <_IO_stdin_used+0xd7d>
    cd5d:	61                   	(bad)  
    cd5e:	74 20                	je     cd80 <_IO_stdin_used+0xd80>
    cd60:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd61:	69 6e 65 20 25 64 3a 	imul   ebp,DWORD PTR [rsi+0x65],0x3a642520
    cd68:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # d7e1 <_IO_stdin_used+0x17e1>
    cd6e:	00 00                	add    BYTE PTR [rax],al
    cd70:	45 72 72             	rex.RB jb cde5 <_IO_stdin_used+0xde5>
    cd73:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd74:	72 20                	jb     cd96 <_IO_stdin_used+0xd96>
    cd76:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd77:	70 65                	jo     cdde <_IO_stdin_used+0xdde>
    cd79:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd7a:	69 6e 67 20 72 75 6c 	imul   ebp,DWORD PTR [rsi+0x67],0x6c757220
    cd81:	65 20 66 69          	and    BYTE PTR gs:[rsi+0x69],ah
    cd85:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd86:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    cd89:	25 73 2e 20 52       	and    eax,0x52202e73
    cd8e:	65 66 75 73          	gs data16 jne ce05 <_IO_stdin_used+0xe05>
    cd92:	69 6e 67 20 74 6f 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
    cd99:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    cd9c:	74 69                	je     ce07 <_IO_stdin_used+0xe07>
    cd9e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd9f:	75 65                	jne    ce06 <_IO_stdin_used+0xe06>
    cda1:	0a 00                	or     al,BYTE PTR [rax]
    cda3:	50                   	push   rax
    cda4:	61                   	(bad)  
    cda5:	72 73                	jb     ce1a <_IO_stdin_used+0xe1a>
    cda7:	69 6e 67 20 66 69 6c 	imul   ebp,DWORD PTR [rsi+0x67],0x6c696620
    cdae:	65 20 25 73 0a 00 61 	and    BYTE PTR gs:[rip+0x61000a73],ah        # 6100d828 <_end+0x60ed07e8>
    cdb5:	6c                   	ins    BYTE PTR es:[rdi],dx
    cdb6:	65 72 74             	gs jb  ce2d <_IO_stdin_used+0xe2d>
    cdb9:	00 46 69             	add    BYTE PTR [rsi+0x69],al
    cdbc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cdbd:	69 73 68 65 64 20 70 	imul   esi,DWORD PTR [rbx+0x68],0x70206465
    cdc4:	61                   	(bad)  
    cdc5:	72 73                	jb     ce3a <_IO_stdin_used+0xe3a>
    cdc7:	69 6e 67 20 25 73 0a 	imul   ebp,DWORD PTR [rsi+0x67],0xa732520
    cdce:	00 00                	add    BYTE PTR [rax],al
    cdd0:	45 72 72             	rex.RB jb ce45 <_IO_stdin_used+0xe45>
    cdd3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cdd4:	72 20                	jb     cdf6 <_IO_stdin_used+0xdf6>
    cdd6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cdd7:	70 65                	jo     ce3e <_IO_stdin_used+0xe3e>
    cdd9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cdda:	69 6e 67 20 25 73 20 	imul   ebp,DWORD PTR [rsi+0x67],0x20732520
    cde1:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    cde3:	72 20                	jb     ce05 <_IO_stdin_used+0xe05>
    cde5:	65 78 70             	gs js  ce58 <_IO_stdin_used+0xe58>
    cde8:	6c                   	ins    BYTE PTR es:[rdi],dx
    cde9:	2f                   	(bad)  
    cdea:	69 6d 70 6c 69 63 69 	imul   ebp,DWORD PTR [rbp+0x70],0x6963696c
    cdf1:	74 20                	je     ce13 <_IO_stdin_used+0xe13>
    cdf3:	64 65 6e             	fs outs dx,BYTE PTR gs:[rsi]
    cdf6:	79 20                	jns    ce18 <_IO_stdin_used+0xe18>
    cdf8:	70 61                	jo     ce5b <_IO_stdin_used+0xe5b>
    cdfa:	72 73                	jb     ce6f <_IO_stdin_used+0xe6f>
    cdfc:	69 6e 67 0a 00 69 70 	imul   ebp,DWORD PTR [rsi+0x67],0x7069000a
    ce03:	76 34                	jbe    ce39 <_IO_stdin_used+0xe39>
    ce05:	00 46 61             	add    BYTE PTR [rsi+0x61],al
    ce08:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    ce0f:	20 
    ce10:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ce11:	70 65                	jo     ce78 <_IO_stdin_used+0xe78>
    ce13:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ce14:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # d88d <_IO_stdin_used+0x188d>
    ce1a:	00 00                	add    BYTE PTR [rax],al
    ce1c:	00 00                	add    BYTE PTR [rax],al
    ce1e:	00 00                	add    BYTE PTR [rax],al
    ce20:	52                   	push   rdx
    ce21:	75 6e                	jne    ce91 <_IO_stdin_used+0xe91>
    ce23:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ce24:	69 6e 67 20 61 73 20 	imul   ebp,DWORD PTR [rsi+0x67],0x20736120
    ce2b:	50                   	push   rax
    ce2c:	49                   	rex.WB
    ce2d:	44 20 25 64 0a 00 00 	and    BYTE PTR [rip+0xa64],r12b        # d898 <_IO_stdin_used+0x1898>
    ce34:	00 00                	add    BYTE PTR [rax],al
    ce36:	00 00                	add    BYTE PTR [rax],al
    ce38:	52                   	push   rdx
    ce39:	55                   	push   rbp
    ce3a:	4e                   	rex.WRX
    ce3b:	4e                   	rex.WRX
    ce3c:	49                   	rex.WB
    ce3d:	4e                   	rex.WRX
    ce3e:	47 20 49 4e          	rex.RXB and BYTE PTR [r9+0x4e],r9b
    ce42:	20 44 45 4d          	and    BYTE PTR [rbp+rax*2+0x4d],al
    ce46:	4f                   	rex.WRXB
    ce47:	4e 53                	rex.WRX push rbx
    ce49:	54                   	push   rsp
    ce4a:	52                   	push   rdx
    ce4b:	41 54                	push   r12
    ce4d:	49                   	rex.WB
    ce4e:	4f                   	rex.WRXB
    ce4f:	4e 20 4d 4f          	rex.WRX and BYTE PTR [rbp+0x4f],r9b
    ce53:	44                   	rex.R
    ce54:	45                   	rex.RB
    ce55:	2e 20 59 4f          	cs and BYTE PTR [rcx+0x4f],bl
    ce59:	55                   	push   rbp
    ce5a:	20 48 41             	and    BYTE PTR [rax+0x41],cl
    ce5d:	56                   	push   rsi
    ce5e:	45 20 31             	and    BYTE PTR [r9],r14b
    ce61:	30 20                	xor    BYTE PTR [rax],ah
    ce63:	53                   	push   rbx
    ce64:	45                   	rex.RB
    ce65:	43                   	rex.XB
    ce66:	4f                   	rex.WRXB
    ce67:	4e                   	rex.WRX
    ce68:	44 53                	rex.R push rbx
    ce6a:	20 54 4f 20          	and    BYTE PTR [rdi+rcx*2+0x20],dl
    ce6e:	41                   	rex.B
    ce6f:	42                   	rex.X
    ce70:	4f 52                	rex.WRXB push r10
    ce72:	54                   	push   rsp
    ce73:	2e 00 00             	cs add BYTE PTR [rax],al
    ce76:	00 00                	add    BYTE PTR [rax],al
    ce78:	52                   	push   rdx
    ce79:	55                   	push   rbp
    ce7a:	4e                   	rex.WRX
    ce7b:	4e                   	rex.WRX
    ce7c:	49                   	rex.WB
    ce7d:	4e                   	rex.WRX
    ce7e:	47 20 49 4e          	rex.RXB and BYTE PTR [r9+0x4e],r9b
    ce82:	20 54 45 53          	and    BYTE PTR [rbp+rax*2+0x53],dl
    ce86:	54                   	push   rsp
    ce87:	20 4d 4f             	and    BYTE PTR [rbp+0x4f],cl
    ce8a:	44                   	rex.R
    ce8b:	45                   	rex.RB
    ce8c:	2e 20 59 4f          	cs and BYTE PTR [rcx+0x4f],bl
    ce90:	55                   	push   rbp
    ce91:	20 48 41             	and    BYTE PTR [rax+0x41],cl
    ce94:	56                   	push   rsi
    ce95:	45 20 31             	and    BYTE PTR [r9],r14b
    ce98:	30 20                	xor    BYTE PTR [rax],ah
    ce9a:	53                   	push   rbx
    ce9b:	45                   	rex.RB
    ce9c:	43                   	rex.XB
    ce9d:	4f                   	rex.WRXB
    ce9e:	4e                   	rex.WRX
    ce9f:	44 53                	rex.R push rbx
    cea1:	20 54 4f 20          	and    BYTE PTR [rdi+rcx*2+0x20],dl
    cea5:	41                   	rex.B
    cea6:	42                   	rex.X
    cea7:	4f 52                	rex.WRXB push r10
    cea9:	54                   	push   rsp
    ceaa:	2e 00 55 6e          	cs add BYTE PTR [rbp+0x6e],dl
    ceae:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    ceb2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ceb3:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    ceb6:	67 75 6d             	addr32 jne cf26 <_IO_stdin_used+0xf26>
    ceb9:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    cebb:	74 20                	je     cedd <_IO_stdin_used+0xedd>
    cebd:	2d 25 63 0a 00       	sub    eax,0xa6325
    cec2:	70 64                	jo     cf28 <_IO_stdin_used+0xf28>
    cec4:	71 68                	jno    cf2e <_IO_stdin_used+0xf2e>
    cec6:	74 65                	je     cf2d <_IO_stdin_used+0xf2d>
    cec8:	69 3a 00 2f 65 74    	imul   edi,DWORD PTR [rdx],0x74652f00
    cece:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    ced0:	76 69                	jbe    cf3b <_IO_stdin_used+0xf3b>
    ced2:	67 69 6c 2f 64 65 6e 	imul   ebp,DWORD PTR [edi+ebp*1+0x64],0x2e796e65
    ced9:	79 2e 
    cedb:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    cede:	66 00 46 69          	data16 add BYTE PTR [rsi+0x69],al
    cee2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cee3:	73 69                	jae    cf4e <_IO_stdin_used+0xf4e>
    cee5:	73 68                	jae    cf4f <_IO_stdin_used+0xf4f>
    cee7:	65 64 20 6c 6f 61    	gs and BYTE PTR fs:[rdi+rbp*2+0x61],ch
    ceed:	64 69 6e 67 20 65 78 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x70786520
    cef4:	70 
    cef5:	6c                   	ins    BYTE PTR es:[rdi],dx
    cef6:	69 63 69 74 20 64 65 	imul   esp,DWORD PTR [rbx+0x69],0x65642074
    cefd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cefe:	79 20                	jns    cf20 <_IO_stdin_used+0xf20>
    cf00:	66 69 6c 65 28 2f 65 	imul   bp,WORD PTR [rbp+riz*2+0x28],0x652f
    cf07:	74 63                	je     cf6c <_IO_stdin_used+0xf6c>
    cf09:	2f                   	(bad)  
    cf0a:	76 69                	jbe    cf75 <_IO_stdin_used+0xf75>
    cf0c:	67 69 6c 2f 64 65 6e 	imul   ebp,DWORD PTR [edi+ebp*1+0x64],0x2e796e65
    cf13:	79 2e 
    cf15:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    cf18:	66 29 00             	sub    WORD PTR [rax],ax
    cf1b:	2f                   	(bad)  
    cf1c:	65 74 63             	gs je  cf82 <_IO_stdin_used+0xf82>
    cf1f:	2f                   	(bad)  
    cf20:	76 69                	jbe    cf8b <_IO_stdin_used+0xf8b>
    cf22:	67 69 6c 2f 76 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x76],0x6c696769
    cf29:	69 6c 
    cf2b:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    cf2f:	66 00 50 61          	data16 add BYTE PTR [rax+0x61],dl
    cf33:	72 73                	jb     cfa8 <_IO_stdin_used+0xfa8>
    cf35:	65 64 20 72 75       	gs and BYTE PTR fs:[rdx+0x75],dh
    cf3a:	6c                   	ins    BYTE PTR es:[rdi],dx
    cf3b:	65 20 66 69          	and    BYTE PTR gs:[rsi+0x69],ah
    cf3f:	6c                   	ins    BYTE PTR es:[rdi],dx
    cf40:	65 73 00             	gs jae cf43 <_IO_stdin_used+0xf43>
    cf43:	00 00                	add    BYTE PTR [rax],al
    cf45:	00 00                	add    BYTE PTR [rax],al
    cf47:	00 56 49             	add    BYTE PTR [rsi+0x49],dl
    cf4a:	47                   	rex.RXB
    cf4b:	49                   	rex.WB
    cf4c:	4c 20 6c 69 73       	rex.WR and BYTE PTR [rcx+rbp*2+0x73],r13b
    cf51:	74 65                	je     cfb8 <_IO_stdin_used+0xfb8>
    cf53:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cf54:	69 6e 67 20 6f 6e 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206e6f20
    cf5b:	69 6e 74 65 72 66 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61667265
    cf62:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    cf65:	25 73 0a 00 70       	and    eax,0x70000a73
    cf6a:	63 61 70             	movsxd esp,DWORD PTR [rcx+0x70]
    cf6d:	5f                   	pop    rdi
    cf6e:	6d                   	ins    DWORD PTR es:[rdi],dx
    cf6f:	67 72 20             	addr32 jb cf92 <_IO_stdin_used+0xf92>
    cf72:	69 6e 20 70 63 61 70 	imul   ebp,DWORD PTR [rsi+0x20],0x70616370
    cf79:	5f                   	pop    rdi
    cf7a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cf7b:	70 65                	jo     cfe2 <_IO_stdin_used+0xfe2>
    cf7d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cf7e:	5f                   	pop    rdi
    cf7f:	6c                   	ins    BYTE PTR es:[rdi],dx
    cf80:	69 76 65 00 00 00 00 	imul   esi,DWORD PTR [rsi+0x65],0x0
    cf87:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    cf8a:	65 63 72 79          	movsxd esi,DWORD PTR gs:[rdx+0x79]
    cf8e:	70 74                	jo     d004 <_IO_stdin_used+0x1004>
    cf90:	65 64 20 4e 53       	gs and BYTE PTR fs:[rsi+0x53],cl
    cf95:	48 20 63 6f          	rex.W and BYTE PTR [rbx+0x6f],spl
    cf99:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cf9a:	66 69 67 20 73 65    	imul   sp,WORD PTR [rdi+0x20],0x6573
    cfa0:	72 76                	jb     d018 <_IO_stdin_used+0x1018>
    cfa2:	65 72 20             	gs jb  cfc5 <_IO_stdin_used+0xfc5>
    cfa5:	73 74                	jae    d01b <_IO_stdin_used+0x101b>
    cfa7:	61                   	(bad)  
    cfa8:	72 74                	jb     d01e <_IO_stdin_used+0x101e>
    cfaa:	65 64 3a 20          	gs cmp ah,BYTE PTR fs:[rax]
    cfae:	31 32                	xor    DWORD PTR [rdx],esi
    cfb0:	37                   	(bad)  
    cfb1:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
    cfb4:	30 2e                	xor    BYTE PTR [rsi],ch
    cfb6:	31 3a                	xor    DWORD PTR [rdx],edi
    cfb8:	36 34 31             	ss xor al,0x31
    cfbb:	00 3b                	add    BYTE PTR [rbx],bh
    cfbd:	9b                   	fwait
    cfbe:	ff                   	(bad)  
    cfbf:	ff                   	(bad)  
    cfc0:	78 9b                	js     cf5d <_IO_stdin_used+0xf5d>
    cfc2:	ff                   	(bad)  
    cfc3:	ff b6 9b ff ff b6    	push   QWORD PTR [rsi-0x49000065]
    cfc9:	9b                   	fwait
    cfca:	ff                   	(bad)  
    cfcb:	ff 47 9b             	inc    DWORD PTR [rdi-0x65]
    cfce:	ff                   	(bad)  
    cfcf:	ff 56 9b             	call   QWORD PTR [rsi-0x65]
    cfd2:	ff                   	(bad)  
    cfd3:	ff b6 9b ff ff b6    	push   QWORD PTR [rsi-0x49000065]
    cfd9:	9b                   	fwait
    cfda:	ff                   	(bad)  
    cfdb:	ff b6 9b ff ff b6    	push   QWORD PTR [rsi-0x49000065]
    cfe1:	9b                   	fwait
    cfe2:	ff                   	(bad)  
    cfe3:	ff b6 9b ff ff b6    	push   QWORD PTR [rsi-0x49000065]
    cfe9:	9b                   	fwait
    cfea:	ff                   	(bad)  
    cfeb:	ff 66 9b             	jmp    QWORD PTR [rsi-0x65]
    cfee:	ff                   	(bad)  
    cfef:	ff 6f 9b             	jmp    FWORD PTR [rdi-0x65]
    cff2:	ff                   	(bad)  
    cff3:	ff b6 9b ff ff b6    	push   QWORD PTR [rsi-0x49000065]
    cff9:	9b                   	fwait
    cffa:	ff                   	(bad)  
    cffb:	ff 97 9b ff ff 0a    	call   QWORD PTR [rdi+0xaffff9b]
    d001:	43 61                	rex.XB (bad) 
    d003:	75 67                	jne    d06c <_IO_stdin_used+0x106c>
    d005:	68 74 20 73 69       	push   0x69732074
    d00a:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    d00c:	61                   	(bad)  
    d00d:	6c                   	ins    BYTE PTR es:[rdi],dx
    d00e:	20 25 64 20 61 74    	and    BYTE PTR [rip+0x74612064],ah        # 7461f078 <_end+0x744e2038>
    d014:	20 25 73 2c 20 65    	and    BYTE PTR [rip+0x65202c73],ah        # 6520fc8d <_end+0x650d2c4d>
    d01a:	78 69                	js     d085 <_IO_stdin_used+0x1085>
    d01c:	74 69                	je     d087 <_IO_stdin_used+0x1087>
    d01e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d01f:	67 2e 2e 2e 0a 00    	cs cs cs or al,BYTE PTR [eax]
    d025:	00 54 6f 74          	add    BYTE PTR [rdi+rbp*2+0x74],dl
    d029:	61                   	(bad)  
    d02a:	6c                   	ins    BYTE PTR es:[rdi],dx
    d02b:	20 50 61             	and    BYTE PTR [rax+0x61],dl
    d02e:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d031:	74 73                	je     d0a6 <_IO_stdin_used+0x10a6>
    d033:	20 43 61             	and    BYTE PTR [rbx+0x61],al
    d036:	75 67                	jne    d09f <_IO_stdin_used+0x109f>
    d038:	68 74 3a 20 25       	push   0x25203a74
    d03d:	64 0a 00             	or     al,BYTE PTR fs:[rax]
    d040:	53                   	push   rbx
    d041:	74 61                	je     d0a4 <_IO_stdin_used+0x10a4>
    d043:	74 69                	je     d0ae <_IO_stdin_used+0x10ae>
    d045:	73 74                	jae    d0bb <_IO_stdin_used+0x10bb>
    d047:	69 63 73 0a 49 70 20 	imul   esp,DWORD PTR [rbx+0x73],0x2070490a
    d04e:	61                   	(bad)  
    d04f:	64 64 72 65          	fs fs jb d0b8 <_IO_stdin_used+0x10b8>
    d053:	73 73                	jae    d0c8 <_IO_stdin_used+0x10c8>
    d055:	20 20                	and    BYTE PTR [rax],ah
    d057:	20 20                	and    BYTE PTR [rax],ah
    d059:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    d05b:	75 6e                	jne    d0cb <_IO_stdin_used+0x10cb>
    d05d:	74 0a                	je     d069 <_IO_stdin_used+0x1069>
    d05f:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    d064:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    d069:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    d06e:	2d 2d 00 00 00       	sub    eax,0x2d
    d073:	00 00                	add    BYTE PTR [rax],al
    d075:	00 00                	add    BYTE PTR [rax],al
    d077:	00 25 73 0a 09 09    	add    BYTE PTR [rip+0x9090a73],ah        # 909daf0 <_end+0x8f60ab0>
    d07d:	74 6f                	je     d0ee <_IO_stdin_used+0x10ee>
    d07f:	74 61                	je     d0e2 <_IO_stdin_used+0x10e2>
    d081:	6c                   	ins    BYTE PTR es:[rdi],dx
    d082:	20 70 61             	and    BYTE PTR [rax+0x61],dh
    d085:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d088:	74 73                	je     d0fd <_IO_stdin_used+0x10fd>
    d08a:	20 3d 20 25 64 0a    	and    BYTE PTR [rip+0xa642520],bh        # a64f5b0 <_end+0xa512570>
    d090:	09 09                	or     DWORD PTR [rcx],ecx
    d092:	74 6f                	je     d103 <_IO_stdin_used+0x1103>
    d094:	74 61                	je     d0f7 <_IO_stdin_used+0x10f7>
    d096:	6c                   	ins    BYTE PTR es:[rdi],dx
    d097:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d09a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d09b:	74 20                	je     d0bd <_IO_stdin_used+0x10bd>
    d09d:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0a2:	09 09                	or     DWORD PTR [rcx],ecx
    d0a4:	74 6f                	je     d115 <_IO_stdin_used+0x1115>
    d0a6:	74 61                	je     d109 <_IO_stdin_used+0x1109>
    d0a8:	6c                   	ins    BYTE PTR es:[rdi],dx
    d0a9:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d0ac:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d0af:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0b4:	09 09                	or     DWORD PTR [rcx],ecx
    d0b6:	54                   	push   rsp
    d0b7:	43 50                	rex.XB push r8
    d0b9:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d0bc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d0bd:	74 20                	je     d0df <_IO_stdin_used+0x10df>
    d0bf:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0c4:	09 09                	or     DWORD PTR [rcx],ecx
    d0c6:	54                   	push   rsp
    d0c7:	43 50                	rex.XB push r8
    d0c9:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d0cc:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d0cf:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0d4:	09 09                	or     DWORD PTR [rcx],ecx
    d0d6:	55                   	push   rbp
    d0d7:	44 50                	rex.R push rax
    d0d9:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d0dc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d0dd:	74 20                	je     d0ff <_IO_stdin_used+0x10ff>
    d0df:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0e4:	09 09                	or     DWORD PTR [rcx],ecx
    d0e6:	55                   	push   rbp
    d0e7:	44 50                	rex.R push rax
    d0e9:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d0ec:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d0ef:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0f4:	09 09                	or     DWORD PTR [rcx],ecx
    d0f6:	49                   	rex.WB
    d0f7:	43                   	rex.XB
    d0f8:	4d 50                	rex.WRB push r8
    d0fa:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d0fd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d0fe:	74 20                	je     d120 <_IO_stdin_used+0x1120>
    d100:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d105:	09 09                	or     DWORD PTR [rcx],ecx
    d107:	49                   	rex.WB
    d108:	43                   	rex.XB
    d109:	4d 50                	rex.WRB push r8
    d10b:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d10e:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d111:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d116:	0a 00                	or     al,BYTE PTR [rax]
    d118:	77 00                	ja     d11a <_IO_stdin_used+0x111a>
    d11a:	2f                   	(bad)  
    d11b:	75 73                	jne    d190 <_IO_stdin_used+0x1190>
    d11d:	72 2f                	jb     d14e <_IO_stdin_used+0x114e>
    d11f:	73 68                	jae    d189 <_IO_stdin_used+0x1189>
    d121:	61                   	(bad)  
    d122:	72 65                	jb     d189 <_IO_stdin_used+0x1189>
    d124:	2f                   	(bad)  
    d125:	76 69                	jbe    d190 <_IO_stdin_used+0x1190>
    d127:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    d12e:	63 61 
    d130:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    d133:	2e 63 73 76          	cs movsxd esi,DWORD PTR [rbx+0x76]
    d137:	00 43 61             	add    BYTE PTR [rbx+0x61],al
    d13a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d13b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d13c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d13d:	74 20                	je     d15f <_IO_stdin_used+0x115f>
    d13f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d140:	70 65                	jo     d1a7 <_IO_stdin_used+0x11a7>
    d142:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d143:	20 2f                	and    BYTE PTR [rdi],ch
    d145:	75 73                	jne    d1ba <_IO_stdin_used+0x11ba>
    d147:	72 2f                	jb     d178 <_IO_stdin_used+0x1178>
    d149:	73 68                	jae    d1b3 <_IO_stdin_used+0x11b3>
    d14b:	61                   	(bad)  
    d14c:	72 65                	jb     d1b3 <_IO_stdin_used+0x11b3>
    d14e:	2f                   	(bad)  
    d14f:	76 69                	jbe    d1ba <_IO_stdin_used+0x11ba>
    d151:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    d158:	63 61 
    d15a:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    d15d:	2e 63 73 76          	cs movsxd esi,DWORD PTR [rbx+0x76]
    d161:	3a 20                	cmp    ah,BYTE PTR [rax]
    d163:	70 72                	jo     d1d7 <_IO_stdin_used+0x11d7>
    d165:	69 6e 74 69 6e 67 20 	imul   ebp,DWORD PTR [rsi+0x74],0x20676e69
    d16c:	61                   	(bad)  
    d16d:	72 70                	jb     d1df <_IO_stdin_used+0x11df>
    d16f:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    d172:	68 65 20 74 6f       	push   0x6f742065
    d177:	20 73 63             	and    BYTE PTR [rbx+0x63],dh
    d17a:	72 65                	jb     d1e1 <_IO_stdin_used+0x11e1>
    d17c:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d17e:	00 25 73 20 2d 3e    	add    BYTE PTR [rip+0x3e2d2073],ah        # 3e2df1f7 <_end+0x3e1a21b7>
    d184:	20 25 73 0a 00 25    	and    BYTE PTR [rip+0x25000a73],ah        # 2500dbfd <_end+0x24ed0bbd>
    d18a:	73 2c                	jae    d1b8 <_IO_stdin_used+0x11b8>
    d18c:	25 73 0a 00 31       	and    eax,0x31000a73
    d191:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
    d194:	30 00                	xor    BYTE PTR [rax],al
    d196:	00 00                	add    BYTE PTR [rax],al
    d198:	56                   	push   rsi
    d199:	49                   	rex.WB
    d19a:	47                   	rex.RXB
    d19b:	49                   	rex.WB
    d19c:	4c 20 55 54          	rex.WR and BYTE PTR [rbp+0x54],r10b
    d1a0:	4d 20 25 73 0a 09 2d 	rex.WRB and BYTE PTR [rip+0x2d090a73],r12b        # 2d09dc1a <_end+0x2cf60bda>
    d1a7:	64 3a 20             	cmp    ah,BYTE PTR fs:[rax]
    d1aa:	64 65 62             	fs gs (bad) 
    d1ad:	75 67                	jne    d216 <_IO_stdin_used+0x1216>
    d1af:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    d1b2:	64 65 0a 09          	fs or  cl,BYTE PTR gs:[rcx]
    d1b6:	2d 68 3a 20 64       	sub    eax,0x64203a68
    d1bb:	69 73 70 6c 61 79 20 	imul   esi,DWORD PTR [rbx+0x70],0x2079616c
    d1c2:	74 68                	je     d22c <_IO_stdin_used+0x122c>
    d1c4:	69 73 20 6d 65 73 73 	imul   esi,DWORD PTR [rbx+0x20],0x7373656d
    d1cb:	61                   	(bad)  
    d1cc:	67 65 0a 09          	or     cl,BYTE PTR gs:[ecx]
    d1d0:	2d 69 20 3c 69       	sub    eax,0x693c2069
    d1d5:	66 61                	data16 (bad) 
    d1d7:	63 65 3e             	movsxd esp,DWORD PTR [rbp+0x3e]
    d1da:	3a 20                	cmp    ah,BYTE PTR [rax]
    d1dc:	73 65                	jae    d243 <_IO_stdin_used+0x1243>
    d1de:	74 20                	je     d200 <_IO_stdin_used+0x1200>
    d1e0:	74 68                	je     d24a <_IO_stdin_used+0x124a>
    d1e2:	65 20 69 6e          	and    BYTE PTR gs:[rcx+0x6e],ch
    d1e6:	74 65                	je     d24d <_IO_stdin_used+0x124d>
    d1e8:	72 66                	jb     d250 <_IO_stdin_used+0x1250>
    d1ea:	61                   	(bad)  
    d1eb:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    d1ee:	74 6f                	je     d25f <_IO_stdin_used+0x125f>
    d1f0:	20 6c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],ch
    d1f4:	74 65                	je     d25b <_IO_stdin_used+0x125b>
    d1f6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d1f7:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    d1fa:	0a 09                	or     cl,BYTE PTR [rcx]
    d1fc:	2d 70 20 70 72       	sub    eax,0x72702070
    d201:	69 6e 74 20 70 61 63 	imul   ebp,DWORD PTR [rsi+0x74],0x63617020
    d208:	6b 65 74 73          	imul   esp,DWORD PTR [rbp+0x74],0x73
    d20c:	0a 09                	or     cl,BYTE PTR [rcx]
    d20e:	2d 71 20 65 78       	sub    eax,0x78652071
    d213:	69 74 20 71 75 69 65 	imul   esi,DWORD PTR [rax+riz*1+0x71],0x74656975
    d21a:	74 
    d21b:	6c                   	ins    BYTE PTR es:[rdi],dx
    d21c:	79 0a                	jns    d228 <_IO_stdin_used+0x1228>
    d21e:	00 72 62             	add    BYTE PTR [rdx+0x62],dh
    d221:	00 2f                	add    BYTE PTR [rdi],ch
    d223:	70 72                	jo     d297 <_IO_stdin_used+0x1297>
    d225:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d226:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    d228:	63 70 75             	movsxd esi,DWORD PTR [rax+0x75]
    d22b:	69 6e 66 6f 00 6d 6f 	imul   ebp,DWORD PTR [rsi+0x66],0x6f6d006f
    d232:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    d235:	20 6e 61             	and    BYTE PTR [rsi+0x61],ch
    d238:	6d                   	ins    DWORD PTR es:[rdi],dx
    d239:	65 00 46 6f          	add    BYTE PTR gs:[rsi+0x6f],al
    d23d:	75 6e                	jne    d2ad <_IO_stdin_used+0x12ad>
    d23f:	64 20 25 64 20 63 70 	and    BYTE PTR fs:[rip+0x70632064],ah        # 7063f2aa <_end+0x7050226a>
    d246:	75 73                	jne    d2bb <_IO_stdin_used+0x12bb>
    d248:	3a 0a                	cmp    cl,BYTE PTR [rdx]
    d24a:	25 73 00 00 00       	and    eax,0x73
    d24f:	00 e2                	add    dl,ah
    d251:	96                   	xchg   esi,eax
    d252:	88 e2                	mov    dl,ah
    d254:	96                   	xchg   esi,eax
    d255:	88 e2                	mov    dl,ah
    d257:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d25e:	88 e2                	mov    dl,ah
    d260:	96                   	xchg   esi,eax
    d261:	88 e2                	mov    dl,ah
    d263:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d26a:	88 e2                	mov    dl,ah
    d26c:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    d273:	96                   	xchg   esi,eax
    d274:	88 e2                	mov    dl,ah
    d276:	96                   	xchg   esi,eax
    d277:	88 e2                	mov    dl,ah
    d279:	96                   	xchg   esi,eax
    d27a:	88 e2                	mov    dl,ah
    d27c:	96                   	xchg   esi,eax
    d27d:	88 e2                	mov    dl,ah
    d27f:	96                   	xchg   esi,eax
    d280:	88 e2                	mov    dl,ah
    d282:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    d289:	96                   	xchg   esi,eax
    d28a:	88 e2                	mov    dl,ah
    d28c:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d293:	88 0a                	mov    BYTE PTR [rdx],cl
    d295:	e2 96                	loop   d22d <_IO_stdin_used+0x122d>
    d297:	88 e2                	mov    dl,ah
    d299:	96                   	xchg   esi,eax
    d29a:	88 e2                	mov    dl,ah
    d29c:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d2a3:	88 e2                	mov    dl,ah
    d2a5:	96                   	xchg   esi,eax
    d2a6:	88 e2                	mov    dl,ah
    d2a8:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2af:	88 e2                	mov    dl,ah
    d2b1:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2b8:	88 e2                	mov    dl,ah
    d2ba:	80 81 e2 80 81 e2 80 	add    BYTE PTR [rcx-0x1d7e7f1e],0x80
    d2c1:	81 e2 80 81 e2 80    	and    edx,0x80e28180
    d2c7:	81 e2 80 81 20 e2    	and    edx,0xe2208180
    d2cd:	96                   	xchg   esi,eax
    d2ce:	88 e2                	mov    dl,ah
    d2d0:	96                   	xchg   esi,eax
    d2d1:	88 e2                	mov    dl,ah
    d2d3:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2da:	88 0a                	mov    BYTE PTR [rdx],cl
    d2dc:	e2 96                	loop   d274 <_IO_stdin_used+0x1274>
    d2de:	88 e2                	mov    dl,ah
    d2e0:	96                   	xchg   esi,eax
    d2e1:	88 e2                	mov    dl,ah
    d2e3:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d2ea:	88 e2                	mov    dl,ah
    d2ec:	96                   	xchg   esi,eax
    d2ed:	88 e2                	mov    dl,ah
    d2ef:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2f6:	88 e2                	mov    dl,ah
    d2f8:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2ff:	88 e2                	mov    dl,ah
    d301:	80 81 20 20 e2 96 88 	add    BYTE PTR [rcx-0x691ddfe0],0x88
    d308:	e2 96                	loop   d2a0 <_IO_stdin_used+0x12a0>
    d30a:	88 e2                	mov    dl,ah
    d30c:	96                   	xchg   esi,eax
    d30d:	88 e2                	mov    dl,ah
    d30f:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d316:	88 e2                	mov    dl,ah
    d318:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d31f:	88 0a                	mov    BYTE PTR [rdx],cl
    d321:	e2 80                	loop   d2a3 <_IO_stdin_used+0x12a3>
    d323:	81 e2 96 88 e2 96    	and    edx,0x96e28896
    d329:	88 e2                	mov    dl,ah
    d32b:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    d332:	96                   	xchg   esi,eax
    d333:	88 e2                	mov    dl,ah
    d335:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    d33c:	88 e2                	mov    dl,ah
    d33e:	96                   	xchg   esi,eax
    d33f:	88 e2                	mov    dl,ah
    d341:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d348:	88 e2                	mov    dl,ah
    d34a:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d351:	88 e2                	mov    dl,ah
    d353:	96                   	xchg   esi,eax
    d354:	88 e2                	mov    dl,ah
    d356:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d35d:	88 e2                	mov    dl,ah
    d35f:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d366:	88 0a                	mov    BYTE PTR [rdx],cl
    d368:	20 e2                	and    dl,ah
    d36a:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d371:	88 e2                	mov    dl,ah
    d373:	96                   	xchg   esi,eax
    d374:	88 e2                	mov    dl,ah
    d376:	96                   	xchg   esi,eax
    d377:	88 e2                	mov    dl,ah
    d379:	80 81 e2 80 81 20 e2 	add    BYTE PTR [rcx+0x208180e2],0xe2
    d380:	96                   	xchg   esi,eax
    d381:	88 e2                	mov    dl,ah
    d383:	96                   	xchg   esi,eax
    d384:	88 e2                	mov    dl,ah
    d386:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    d38d:	88 e2                	mov    dl,ah
    d38f:	96                   	xchg   esi,eax
    d390:	88 e2                	mov    dl,ah
    d392:	96                   	xchg   esi,eax
    d393:	88 e2                	mov    dl,ah
    d395:	96                   	xchg   esi,eax
    d396:	88 e2                	mov    dl,ah
    d398:	96                   	xchg   esi,eax
    d399:	88 e2                	mov    dl,ah
    d39b:	96                   	xchg   esi,eax
    d39c:	88 e2                	mov    dl,ah
    d39e:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    d3a5:	88 e2                	mov    dl,ah
    d3a7:	96                   	xchg   esi,eax
    d3a8:	88 e2                	mov    dl,ah
    d3aa:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d3b1:	88 e2                	mov    dl,ah
    d3b3:	96                   	xchg   esi,eax
    d3b4:	88 e2                	mov    dl,ah
    d3b6:	96                   	xchg   esi,eax
    d3b7:	88 e2                	mov    dl,ah
    d3b9:	96                   	xchg   esi,eax
    d3ba:	88 e2                	mov    dl,ah
    d3bc:	96                   	xchg   esi,eax
    d3bd:	88 e2                	mov    dl,ah
    d3bf:	96                   	xchg   esi,eax
    d3c0:	88 00                	mov    BYTE PTR [rax],al
    d3c2:	00 00                	add    BYTE PTR [rax],al
    d3c4:	00 00                	add    BYTE PTR [rax],al
    d3c6:	00 00                	add    BYTE PTR [rax],al
    d3c8:	0a 00                	or     al,BYTE PTR [rax]
    d3ca:	0d 00 00 00 00       	or     eax,0x0
    d3cf:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    d3d2:	68 5f 73 65 72       	push   0x7265735f
    d3d7:	76 65                	jbe    d43e <_IO_stdin_used+0x143e>
    d3d9:	72 2e                	jb     d409 <_IO_stdin_used+0x1409>
    d3db:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d3dd:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    d3e0:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    d3e7:	20 
    d3e8:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
    d3eb:	61                   	(bad)  
    d3ec:	74 65                	je     d453 <_IO_stdin_used+0x1453>
    d3ee:	20 73 6f             	and    BYTE PTR [rbx+0x6f],dh
    d3f1:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d3f4:	74 00                	je     d3f6 <_IO_stdin_used+0x13f6>
    d3f6:	00 00                	add    BYTE PTR [rax],al
    d3f8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d3f9:	73 68                	jae    d463 <_IO_stdin_used+0x1463>
    d3fb:	5f                   	pop    rdi
    d3fc:	73 65                	jae    d463 <_IO_stdin_used+0x1463>
    d3fe:	72 76                	jb     d476 <_IO_stdin_used+0x1476>
    d400:	65 72 2e             	gs jb  d431 <_IO_stdin_used+0x1431>
    d403:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d405:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    d408:	69 6c 75 72 65 20 69 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6e692065
    d40f:	6e 
    d410:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d413:	74 73                	je     d488 <_IO_stdin_used+0x1488>
    d415:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d416:	63 6b 6f             	movsxd ebp,DWORD PTR [rbx+0x6f]
    d419:	70 74                	jo     d48f <_IO_stdin_used+0x148f>
    d41b:	00 00                	add    BYTE PTR [rax],al
    d41d:	00 00                	add    BYTE PTR [rax],al
    d41f:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    d422:	68 5f 73 65 72       	push   0x7265735f
    d427:	76 65                	jbe    d48e <_IO_stdin_used+0x148e>
    d429:	72 2e                	jb     d459 <_IO_stdin_used+0x1459>
    d42b:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d42d:	20 62 69             	and    BYTE PTR [rdx+0x69],ah
    d430:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d431:	64 69 6e 67 20 6f 66 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x20666f20
    d438:	20 
    d439:	73 6f                	jae    d4aa <_IO_stdin_used+0x14aa>
    d43b:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d43e:	74 20                	je     d460 <_IO_stdin_used+0x1460>
    d440:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    d442:	72 20                	jb     d464 <_IO_stdin_used+0x1464>
    d444:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d445:	73 68                	jae    d4af <_IO_stdin_used+0x14af>
    d447:	5f                   	pop    rdi
    d448:	66 64 20 66 61       	data16 and BYTE PTR fs:[rsi+0x61],ah
    d44d:	69 6c 65 64 00 00 00 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
    d454:	00 
    d455:	00 00                	add    BYTE PTR [rax],al
    d457:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    d45a:	68 5f 73 65 72       	push   0x7265735f
    d45f:	76 65                	jbe    d4c6 <_IO_stdin_used+0x14c6>
    d461:	72 2e                	jb     d491 <_IO_stdin_used+0x1491>
    d463:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d465:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    d468:	69 6c 75 72 65 20 6f 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6e6f2065
    d46f:	6e 
    d470:	20 6c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],ch
    d474:	74 65                	je     d4db <_IO_stdin_used+0x14db>
    d476:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d477:	69 6e 67 20 66 6f 72 	imul   ebp,DWORD PTR [rsi+0x67],0x726f6620
    d47e:	20 6e 73             	and    BYTE PTR [rsi+0x73],ch
    d481:	68 5f 66 64 00       	push   0x64665f
    d486:	00 00                	add    BYTE PTR [rax],al
    d488:	46 61                	rex.RX (bad) 
    d48a:	69 6c 75 72 65 20 74 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f742065
    d491:	6f 
    d492:	20 61 63             	and    BYTE PTR [rcx+0x63],ah
    d495:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    d498:	74 20                	je     d4ba <_IO_stdin_used+0x14ba>
    d49a:	61                   	(bad)  
    d49b:	20 63 6c             	and    BYTE PTR [rbx+0x6c],ah
    d49e:	69 65 6e 74 20 61 74 	imul   esp,DWORD PTR [rbp+0x6e],0x74612074
    d4a5:	20 25 73 0a 00 30    	and    BYTE PTR [rip+0x30000a73],ah        # 3000df1e <_end+0x2fed0ede>
    d4ab:	78 25                	js     d4d2 <_IO_stdin_used+0x14d2>
    d4ad:	30 32                	xor    BYTE PTR [rdx],dh
    d4af:	78 0a                	js     d4bb <_IO_stdin_used+0x14bb>
    d4b1:	00 00                	add    BYTE PTR [rax],al
    d4b3:	00 00                	add    BYTE PTR [rax],al
    d4b5:	00 00                	add    BYTE PTR [rax],al
    d4b7:	00 61 00             	add    BYTE PTR [rcx+0x0],ah
    d4ba:	00 00                	add    BYTE PTR [rax],al
    d4bc:	00 00                	add    BYTE PTR [rax],al
    d4be:	00 00                	add    BYTE PTR [rax],al
    d4c0:	42 61                	rex.X (bad) 
    d4c2:	73 69                	jae    d52d <_IO_stdin_used+0x152d>
    d4c4:	63 20                	movsxd esp,DWORD PTR [rax]
    d4c6:	70 6f                	jo     d537 <_IO_stdin_used+0x1537>
    d4c8:	72 74                	jb     d53e <_IO_stdin_used+0x153e>
    d4ca:	73 63                	jae    d52f <_IO_stdin_used+0x152f>
    d4cc:	61                   	(bad)  
    d4cd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d4ce:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d4d2:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d4d7:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d4da:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d4db:	6d                   	ins    DWORD PTR es:[rdi],dx
    d4dc:	20 49 50             	and    BYTE PTR [rcx+0x50],cl
    d4df:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    d4e2:	64 72 65             	fs jb  d54a <_IO_stdin_used+0x154a>
    d4e5:	73 73                	jae    d55a <_IO_stdin_used+0x155a>
    d4e7:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # df60 <_IO_stdin_used+0x1f60>
    d4ed:	00 00                	add    BYTE PTR [rax],al
    d4ef:	00 50 6f             	add    BYTE PTR [rax+0x6f],dl
    d4f2:	72 74                	jb     d568 <_IO_stdin_used+0x1568>
    d4f4:	73 63                	jae    d559 <_IO_stdin_used+0x1559>
    d4f6:	61                   	(bad)  
    d4f7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d4f8:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d4fc:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d501:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d504:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d505:	6d                   	ins    DWORD PTR es:[rdi],dx
    d506:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461f57f <_end+0x744e253f>
    d50c:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # df85 <_IO_stdin_used+0x1f85>
    d512:	00 00                	add    BYTE PTR [rax],al
    d514:	00 00                	add    BYTE PTR [rax],al
    d516:	00 00                	add    BYTE PTR [rax],al
    d518:	46                   	rex.RX
    d519:	49                   	rex.WB
    d51a:	4e 20 70 6f          	rex.WRX and BYTE PTR [rax+0x6f],r14b
    d51e:	72 74                	jb     d594 <_IO_stdin_used+0x1594>
    d520:	73 63                	jae    d585 <_IO_stdin_used+0x1585>
    d522:	61                   	(bad)  
    d523:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d524:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d528:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d52d:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d530:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d531:	6d                   	ins    DWORD PTR es:[rdi],dx
    d532:	20 49 50             	and    BYTE PTR [rcx+0x50],cl
    d535:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    d538:	64 72 65             	fs jb  d5a0 <_IO_stdin_used+0x15a0>
    d53b:	73 73                	jae    d5b0 <_IO_stdin_used+0x15b0>
    d53d:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # dfb6 <_IO_stdin_used+0x1fb6>
    d543:	00 00                	add    BYTE PTR [rax],al
    d545:	00 00                	add    BYTE PTR [rax],al
    d547:	00 46 49             	add    BYTE PTR [rsi+0x49],al
    d54a:	4e 20 70 6f          	rex.WRX and BYTE PTR [rax+0x6f],r14b
    d54e:	72 74                	jb     d5c4 <_IO_stdin_used+0x15c4>
    d550:	73 63                	jae    d5b5 <_IO_stdin_used+0x15b5>
    d552:	61                   	(bad)  
    d553:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d554:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d558:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d55d:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d560:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d561:	6d                   	ins    DWORD PTR es:[rdi],dx
    d562:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461f5db <_end+0x744e259b>
    d568:	20 25 73 0a 00 30    	and    BYTE PTR [rip+0x30000a73],ah        # 3000dfe1 <_end+0x2fed0fa1>
    d56e:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
    d571:	30 2e                	xor    BYTE PTR [rsi],ch
    d573:	31 00                	xor    DWORD PTR [rax],eax
    d575:	30 2e                	xor    BYTE PTR [rsi],ch
    d577:	30 2e                	xor    BYTE PTR [rsi],ch
    d579:	30 2e                	xor    BYTE PTR [rsi],ch
    d57b:	31 00                	xor    DWORD PTR [rax],eax
    d57d:	00 00                	add    BYTE PTR [rax],al
    d57f:	00 41 72             	add    BYTE PTR [rcx+0x72],al
    d582:	70 20                	jo     d5a4 <_IO_stdin_used+0x15a4>
    d584:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d586:	74 72                	je     d5fa <_IO_stdin_used+0x15fa>
    d588:	79 20                	jns    d5aa <_IO_stdin_used+0x15aa>
    d58a:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    d58d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d58e:	67 65 64 20 66 6f    	gs and BYTE PTR fs:[esi+0x6f],ah
    d594:	72 20                	jb     d5b6 <_IO_stdin_used+0x15b6>
    d596:	69 70 20 61 64 64 72 	imul   esi,DWORD PTR [rax+0x20],0x72646461
    d59d:	65 73 73             	gs jae d613 <_IO_stdin_used+0x1613>
    d5a0:	20 25 73 3a 20 77    	and    BYTE PTR [rip+0x77203a73],ah        # 77211019 <_end+0x770d3fd9>
    d5a6:	61                   	(bad)  
    d5a7:	73 20                	jae    d5c9 <_IO_stdin_used+0x15c9>
    d5a9:	25 73 20 69 73       	and    eax,0x73692073
    d5ae:	20 6e 6f             	and    BYTE PTR [rsi+0x6f],ch
    d5b1:	77 20                	ja     d5d3 <_IO_stdin_used+0x15d3>
    d5b3:	25 73 00 72 00       	and    eax,0x720073
    d5b8:	2f                   	(bad)  
    d5b9:	75 73                	jne    d62e <_IO_stdin_used+0x162e>
    d5bb:	72 2f                	jb     d5ec <_IO_stdin_used+0x15ec>
    d5bd:	73 68                	jae    d627 <_IO_stdin_used+0x1627>
    d5bf:	61                   	(bad)  
    d5c0:	72 65                	jb     d627 <_IO_stdin_used+0x1627>
    d5c2:	2f                   	(bad)  
    d5c3:	76 69                	jbe    d62e <_IO_stdin_used+0x162e>
    d5c5:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    d5cc:	63 61 
    d5ce:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    d5d1:	2e 63 73 76          	cs movsxd esi,DWORD PTR [rbx+0x76]
    d5d5:	00 00                	add    BYTE PTR [rax],al
    d5d7:	00 43 6f             	add    BYTE PTR [rbx+0x6f],al
    d5da:	75 6c                	jne    d648 <_IO_stdin_used+0x1648>
    d5dc:	64 20 6e 6f          	and    BYTE PTR fs:[rsi+0x6f],ch
    d5e0:	74 20                	je     d602 <_IO_stdin_used+0x1602>
    d5e2:	6c                   	ins    BYTE PTR es:[rdi],dx
    d5e3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d5e4:	61                   	(bad)  
    d5e5:	64 20 61 72          	and    BYTE PTR fs:[rcx+0x72],ah
    d5e9:	70 20                	jo     d60b <_IO_stdin_used+0x160b>
    d5eb:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    d5ee:	68 65 20 66 72       	push   0x72662065
    d5f3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d5f4:	6d                   	ins    DWORD PTR es:[rdi],dx
    d5f5:	20 64 61 74          	and    BYTE PTR [rcx+riz*2+0x74],ah
    d5f9:	61                   	(bad)  
    d5fa:	62 61                	(bad)  
    d5fc:	73 65                	jae    d663 <_IO_stdin_used+0x1663>
    d5fe:	2c 20                	sub    al,0x20
    d600:	66 69 6c 65 20 6e 6f 	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f6e
    d607:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d608:	65 78 69             	gs js  d674 <_IO_stdin_used+0x1674>
    d60b:	73 74                	jae    d681 <_IO_stdin_used+0x1681>
    d60d:	61                   	(bad)  
    d60e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d60f:	74 00                	je     d611 <_IO_stdin_used+0x1611>
    d611:	0a 00                	or     al,BYTE PTR [rax]
    d613:	2c 00                	sub    al,0x0
    d615:	00 00                	add    BYTE PTR [rax],al
    d617:	00 54 4c 53          	add    BYTE PTR [rsp+rcx*2+0x53],dl
    d61b:	20 31                	and    BYTE PTR [rcx],dh
    d61d:	2e 30 20             	cs xor BYTE PTR [rax],ah
    d620:	44                   	rex.R
    d621:	41 54                	push   r12
    d623:	41 3a 20             	cmp    spl,BYTE PTR [r8]
    d626:	00 54 4c 53          	add    BYTE PTR [rsp+rcx*2+0x53],dl
    d62a:	20 31                	and    BYTE PTR [rcx],dh
    d62c:	2e 32 20             	cs xor ah,BYTE PTR [rax]
    d62f:	44                   	rex.R
    d630:	41 54                	push   r12
    d632:	41 3a 20             	cmp    spl,BYTE PTR [r8]
    d635:	00 54 4c 53          	add    BYTE PTR [rsp+rcx*2+0x53],dl
    d639:	20 31                	and    BYTE PTR [rcx],dh
    d63b:	2e 33 20             	cs xor esp,DWORD PTR [rax]
    d63e:	44                   	rex.R
    d63f:	41 54                	push   r12
    d641:	41 3a 20             	cmp    spl,BYTE PTR [r8]
    d644:	00 43 6c             	add    BYTE PTR [rbx+0x6c],al
    d647:	69 65 6e 74 20 48 65 	imul   esp,DWORD PTR [rbp+0x6e],0x65482074
    d64e:	6c                   	ins    BYTE PTR es:[rdi],dx
    d64f:	6c                   	ins    BYTE PTR es:[rdi],dx
    d650:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d651:	00 53 65             	add    BYTE PTR [rbx+0x65],dl
    d654:	72 76                	jb     d6cc <_IO_stdin_used+0x16cc>
    d656:	65 72 20             	gs jb  d679 <_IO_stdin_used+0x1679>
    d659:	48                   	rex.W
    d65a:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    d65c:	6c                   	ins    BYTE PTR es:[rdi],dx
    d65d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d65e:	00 4e 65             	add    BYTE PTR [rsi+0x65],cl
    d661:	77 20                	ja     d683 <_IO_stdin_used+0x1683>
    d663:	53                   	push   rbx
    d664:	65 73 73             	gs jae d6da <_IO_stdin_used+0x16da>
    d667:	69 6f 6e 20 54 69 63 	imul   ebp,DWORD PTR [rdi+0x6e],0x63695420
    d66e:	6b 65 74 00          	imul   esp,DWORD PTR [rbp+0x74],0x0
    d672:	43                   	rex.XB
    d673:	65 72 74             	gs jb  d6ea <_IO_stdin_used+0x16ea>
    d676:	69 66 69 63 61 74 65 	imul   esp,DWORD PTR [rsi+0x69],0x65746163
    d67d:	00 43 6c             	add    BYTE PTR [rbx+0x6c],al
    d680:	69 65 6e 74 20 4b 65 	imul   esp,DWORD PTR [rbp+0x6e],0x654b2074
    d687:	78 00                	js     d689 <_IO_stdin_used+0x1689>
    d689:	00 00                	add    BYTE PTR [rax],al
    d68b:	00 ec                	add    ah,ch
    d68d:	ab                   	stos   DWORD PTR es:[rdi],eax
    d68e:	ff                   	(bad)  
    d68f:	ff 50 ab             	call   QWORD PTR [rax-0x55]
    d692:	ff                   	(bad)  
    d693:	ff 69 ab             	jmp    FWORD PTR [rcx-0x55]
    d696:	ff                   	(bad)  
    d697:	ff                   	(bad)  
    d698:	ec                   	in     al,dx
    d699:	ab                   	stos   DWORD PTR es:[rdi],eax
    d69a:	ff                   	(bad)  
    d69b:	ff 8a ab ff ff ec    	dec    DWORD PTR [rdx-0x13000055]
    d6a1:	ab                   	stos   DWORD PTR es:[rdi],eax
    d6a2:	ff                   	(bad)  
    d6a3:	ff                   	(bad)  
    d6a4:	ec                   	in     al,dx
    d6a5:	ab                   	stos   DWORD PTR es:[rdi],eax
    d6a6:	ff                   	(bad)  
    d6a7:	ff                   	(bad)  
    d6a8:	ec                   	in     al,dx
    d6a9:	ab                   	stos   DWORD PTR es:[rdi],eax
    d6aa:	ff                   	(bad)  
    d6ab:	ff                   	(bad)  
    d6ac:	ec                   	in     al,dx
    d6ad:	ab                   	stos   DWORD PTR es:[rdi],eax
    d6ae:	ff                   	(bad)  
    d6af:	ff                   	(bad)  
    d6b0:	ec                   	in     al,dx
    d6b1:	ab                   	stos   DWORD PTR es:[rdi],eax
    d6b2:	ff                   	(bad)  
    d6b3:	ff cc                	dec    esp
    d6b5:	ab                   	stos   DWORD PTR es:[rdi],eax
    d6b6:	ff                   	(bad)  
    d6b7:	ff ab ab ff ff 00    	jmp    FWORD PTR [rbx+0xffffab]
    d6bd:	00 00                	add    BYTE PTR [rax],al
    d6bf:	00 55 70             	add    BYTE PTR [rbp+0x70],dl
    d6c2:	64 61                	fs (bad) 
    d6c4:	74 69                	je     d72f <_IO_stdin_used+0x172f>
    d6c6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d6c7:	67 20 64 62 00       	and    BYTE PTR [edx+eiz*2+0x0],ah
    d6cc:	53                   	push   rbx
    d6cd:	51                   	push   rcx
    d6ce:	6c                   	ins    BYTE PTR es:[rdi],dx
    d6cf:	69 74 65 20 65 72 72 	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x6f727265
    d6d6:	6f 
    d6d7:	72 3a                	jb     d713 <_IO_stdin_used+0x1713>
    d6d9:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # e152 <__GNU_EH_FRAME_HDR+0x2a>
    d6df:	00 49 4e             	add    BYTE PTR [rcx+0x4e],cl
    d6e2:	53                   	push   rbx
    d6e3:	45 52                	rex.RB push r10
    d6e5:	54                   	push   rsp
    d6e6:	20 49 4e             	and    BYTE PTR [rcx+0x4e],cl
    d6e9:	54                   	push   rsp
    d6ea:	4f 20 61 72          	rex.WRXB and BYTE PTR [r9+0x72],r12b
    d6ee:	70 5f                	jo     d74f <_IO_stdin_used+0x174f>
    d6f0:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    d6f3:	68 65 20 28 69       	push   0x69282065
    d6f8:	70 5f                	jo     d759 <_IO_stdin_used+0x1759>
    d6fa:	61                   	(bad)  
    d6fb:	64 64 72 65          	fs fs jb d764 <_IO_stdin_used+0x1764>
    d6ff:	73 73                	jae    d774 <_IO_stdin_used+0x1774>
    d701:	2c 20                	sub    al,0x20
    d703:	6d                   	ins    DWORD PTR es:[rdi],dx
    d704:	61                   	(bad)  
    d705:	63 5f 61             	movsxd ebx,DWORD PTR [rdi+0x61]
    d708:	64 64 72 65          	fs fs jb d771 <_IO_stdin_used+0x1771>
    d70c:	73 73                	jae    d781 <_IO_stdin_used+0x1781>
    d70e:	29 20                	sub    DWORD PTR [rax],esp
    d710:	56                   	push   rsi
    d711:	41                   	rex.B
    d712:	4c 55                	rex.WR push rbp
    d714:	45 53                	rex.RB push r11
    d716:	20 28                	and    BYTE PTR [rax],ch
    d718:	22 25 73 22 2c 20    	and    ah,BYTE PTR [rip+0x202c2273]        # 202cf991 <_end+0x20192951>
    d71e:	22 25 73 22 29 3b    	and    ah,BYTE PTR [rip+0x3b292273]        # 3b29f997 <_end+0x3b162957>
    d724:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    d727:	4c 69 74 65 20 65 6e 	imul   r14,QWORD PTR [rbp+riz*2+0x20],0x6f636e65
    d72e:	63 6f 
    d730:	75 6e                	jne    d7a0 <_IO_stdin_used+0x17a0>
    d732:	74 65                	je     d799 <_IO_stdin_used+0x1799>
    d734:	72 65                	jb     d79b <_IO_stdin_used+0x179b>
    d736:	64 20 65 72          	and    BYTE PTR fs:[rbp+0x72],ah
    d73a:	72 6f                	jb     d7ab <_IO_stdin_used+0x17ab>
    d73c:	72 3a                	jb     d778 <_IO_stdin_used+0x1778>
    d73e:	20 25 73 0a 00 2f    	and    BYTE PTR [rip+0x2f000a73],ah        # 2f00e1b7 <_end+0x2eed1177>
    d744:	75 73                	jne    d7b9 <_IO_stdin_used+0x17b9>
    d746:	72 2f                	jb     d777 <_IO_stdin_used+0x1777>
    d748:	73 68                	jae    d7b2 <_IO_stdin_used+0x17b2>
    d74a:	61                   	(bad)  
    d74b:	72 65                	jb     d7b2 <_IO_stdin_used+0x17b2>
    d74d:	2f                   	(bad)  
    d74e:	76 69                	jbe    d7b9 <_IO_stdin_used+0x17b9>
    d750:	67 69 6c 2f 73 70 69 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x642e6970
    d757:	2e 64 
    d759:	62                   	(bad)  
    d75a:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    d75d:	4c 69 74 65 20 65 72 	imul   r14,QWORD PTR [rbp+riz*2+0x20],0x6f727265
    d764:	72 6f 
    d766:	72 20                	jb     d788 <_IO_stdin_used+0x1788>
    d768:	25 73 0a 00 00       	and    eax,0xa73
    d76d:	00 00                	add    BYTE PTR [rax],al
    d76f:	00 49 4e             	add    BYTE PTR [rcx+0x4e],cl
    d772:	53                   	push   rbx
    d773:	45 52                	rex.RB push r10
    d775:	54                   	push   rsp
    d776:	20 49 4e             	and    BYTE PTR [rcx+0x4e],cl
    d779:	54                   	push   rsp
    d77a:	4f 20 73 70          	rex.WRXB and BYTE PTR [r11+0x70],r14b
    d77e:	69 5f 74 61 62 6c 65 	imul   ebx,DWORD PTR [rdi+0x74],0x656c6261
    d785:	20 28                	and    BYTE PTR [rax],ch
    d787:	73 65                	jae    d7ee <_IO_stdin_used+0x17ee>
    d789:	72 76                	jb     d801 <_IO_stdin_used+0x1801>
    d78b:	5f                   	pop    rdi
    d78c:	61                   	(bad)  
    d78d:	64 64 72 2c          	fs fs jb d7bd <_IO_stdin_used+0x17bd>
    d791:	20 63 6c             	and    BYTE PTR [rbx+0x6c],ah
    d794:	69 5f 61 64 64 72 2c 	imul   ebx,DWORD PTR [rdi+0x61],0x2c726464
    d79b:	73 65                	jae    d802 <_IO_stdin_used+0x1802>
    d79d:	72 76                	jb     d815 <_IO_stdin_used+0x1815>
    d79f:	5f                   	pop    rdi
    d7a0:	70 6f                	jo     d811 <_IO_stdin_used+0x1811>
    d7a2:	72 74                	jb     d818 <_IO_stdin_used+0x1818>
    d7a4:	2c 63                	sub    al,0x63
    d7a6:	6c                   	ins    BYTE PTR es:[rdi],dx
    d7a7:	69 5f 70 6f 72 74 2c 	imul   ebx,DWORD PTR [rdi+0x70],0x2c74726f
    d7ae:	73 65                	jae    d815 <_IO_stdin_used+0x1815>
    d7b0:	72 76                	jb     d828 <_IO_stdin_used+0x1828>
    d7b2:	5f                   	pop    rdi
    d7b3:	70 6b                	jo     d820 <_IO_stdin_used+0x1820>
    d7b5:	74 5f                	je     d816 <_IO_stdin_used+0x1816>
    d7b7:	73 65                	jae    d81e <_IO_stdin_used+0x181e>
    d7b9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d7ba:	74 2c                	je     d7e8 <_IO_stdin_used+0x17e8>
    d7bc:	63 6c 69 5f          	movsxd ebp,DWORD PTR [rcx+rbp*2+0x5f]
    d7c0:	70 6b                	jo     d82d <_IO_stdin_used+0x182d>
    d7c2:	74 5f                	je     d823 <_IO_stdin_used+0x1823>
    d7c4:	73 65                	jae    d82b <_IO_stdin_used+0x182b>
    d7c6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d7c7:	74 2c                	je     d7f5 <_IO_stdin_used+0x17f5>
    d7c9:	73 65                	jae    d830 <_IO_stdin_used+0x1830>
    d7cb:	72 76                	jb     d843 <_IO_stdin_used+0x1843>
    d7cd:	5f                   	pop    rdi
    d7ce:	70 6b                	jo     d83b <_IO_stdin_used+0x183b>
    d7d0:	74 5f                	je     d831 <_IO_stdin_used+0x1831>
    d7d2:	72 65                	jb     d839 <_IO_stdin_used+0x1839>
    d7d4:	63 76 2c             	movsxd esi,DWORD PTR [rsi+0x2c]
    d7d7:	63 6c 69 5f          	movsxd ebp,DWORD PTR [rcx+rbp*2+0x5f]
    d7db:	70 6b                	jo     d848 <_IO_stdin_used+0x1848>
    d7dd:	74 5f                	je     d83e <_IO_stdin_used+0x183e>
    d7df:	72 65                	jb     d846 <_IO_stdin_used+0x1846>
    d7e1:	63 76 2c             	movsxd esi,DWORD PTR [rsi+0x2c]
    d7e4:	70 72                	jo     d858 <_IO_stdin_used+0x1858>
    d7e6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d7e7:	74 6f                	je     d858 <_IO_stdin_used+0x1858>
    d7e9:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    d7ec:	2c 61                	sub    al,0x61
    d7ee:	76 67                	jbe    d857 <_IO_stdin_used+0x1857>
    d7f0:	5f                   	pop    rdi
    d7f1:	70 70                	jo     d863 <_IO_stdin_used+0x1863>
    d7f3:	73 2c                	jae    d821 <_IO_stdin_used+0x1821>
    d7f5:	73 74                	jae    d86b <_IO_stdin_used+0x186b>
    d7f7:	61                   	(bad)  
    d7f8:	72 74                	jb     d86e <_IO_stdin_used+0x186e>
    d7fa:	5f                   	pop    rdi
    d7fb:	74 69                	je     d866 <_IO_stdin_used+0x1866>
    d7fd:	6d                   	ins    DWORD PTR es:[rdi],dx
    d7fe:	65 2c 65             	gs sub al,0x65
    d801:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d802:	64 5f                	fs pop rdi
    d804:	74 69                	je     d86f <_IO_stdin_used+0x186f>
    d806:	6d                   	ins    DWORD PTR es:[rdi],dx
    d807:	65 2c 64             	gs sub al,0x64
    d80a:	61                   	(bad)  
    d80b:	74 61                	je     d86e <_IO_stdin_used+0x186e>
    d80d:	5f                   	pop    rdi
    d80e:	70 6b                	jo     d87b <_IO_stdin_used+0x187b>
    d810:	74 73                	je     d885 <_IO_stdin_used+0x1885>
    d812:	2c 63                	sub    al,0x63
    d814:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d815:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d816:	74 72                	je     d88a <_IO_stdin_used+0x188a>
    d818:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d819:	6c                   	ins    BYTE PTR es:[rdi],dx
    d81a:	5f                   	pop    rdi
    d81b:	70 6b                	jo     d888 <_IO_stdin_used+0x1888>
    d81d:	74 73                	je     d892 <_IO_stdin_used+0x1892>
    d81f:	29 20                	sub    DWORD PTR [rax],esp
    d821:	56                   	push   rsi
    d822:	41                   	rex.B
    d823:	4c 55                	rex.WR push rbp
    d825:	45 53                	rex.RB push r11
    d827:	20 28                	and    BYTE PTR [rax],ch
    d829:	22 25 73 22 2c 22    	and    ah,BYTE PTR [rip+0x222c2273]        # 222cfaa2 <_end+0x22192a62>
    d82f:	25 73 22 2c 25       	and    eax,0x252c2273
    d834:	6c                   	ins    BYTE PTR es:[rdi],dx
    d835:	64 2c 25             	fs sub al,0x25
    d838:	6c                   	ins    BYTE PTR es:[rdi],dx
    d839:	64 2c 25             	fs sub al,0x25
    d83c:	64 2c 25             	fs sub al,0x25
    d83f:	64 2c 25             	fs sub al,0x25
    d842:	64 2c 25             	fs sub al,0x25
    d845:	64 2c 25             	fs sub al,0x25
    d848:	64 2c 25             	fs sub al,0x25
    d84b:	64 2c 25             	fs sub al,0x25
    d84e:	6c                   	ins    BYTE PTR es:[rdi],dx
    d84f:	64 2c 25             	fs sub al,0x25
    d852:	6c                   	ins    BYTE PTR es:[rdi],dx
    d853:	64 2c 25             	fs sub al,0x25
    d856:	64 2c 25             	fs sub al,0x25
    d859:	64 29 3b             	sub    DWORD PTR fs:[rbx],edi
    d85c:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    d85f:	4c                   	rex.WR
    d860:	49 54                	rex.WB push r12
    d862:	45 20 45 6e          	and    BYTE PTR [r13+0x6e],r8b
    d866:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    d869:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d86a:	74 65                	je     d8d1 <_IO_stdin_used+0x18d1>
    d86c:	72 65                	jb     d8d3 <_IO_stdin_used+0x18d3>
    d86e:	64 20 65 72          	and    BYTE PTR fs:[rbp+0x72],ah
    d872:	72 6f                	jb     d8e3 <_IO_stdin_used+0x18e3>
    d874:	72 3a                	jb     d8b0 <_IO_stdin_used+0x18b0>
    d876:	20 25 73 0a 00 53    	and    BYTE PTR [rip+0x53000a73],ah        # 5300e2ef <_end+0x52ed12af>
    d87c:	74 72                	je     d8f0 <_IO_stdin_used+0x18f0>
    d87e:	6c                   	ins    BYTE PTR es:[rdi],dx
    d87f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d880:	63 20                	movsxd esp,DWORD PTR [rax]
    d882:	73 75                	jae    d8f9 <_IO_stdin_used+0x18f9>
    d884:	63 63 65             	movsxd esp,DWORD PTR [rbx+0x65]
    d887:	73 73                	jae    d8fc <_IO_stdin_used+0x18fc>
    d889:	66 75 6c             	data16 jne d8f8 <_IO_stdin_used+0x18f8>
    d88c:	00 51 75             	add    BYTE PTR [rcx+0x75],dl
    d88f:	65 72 79             	gs jb  d90b <_IO_stdin_used+0x190b>
    d892:	3a 20                	cmp    ah,BYTE PTR [rax]
    d894:	25 73 0a 00 4c       	and    eax,0x4c000a73
    d899:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d89a:	67 69 6e 20 69 6e 63 	imul   ebp,DWORD PTR [esi+0x20],0x6f636e69
    d8a1:	6f 
    d8a2:	72 72                	jb     d916 <_IO_stdin_used+0x1916>
    d8a4:	65 63 74 00 6c       	movsxd esi,DWORD PTR gs:[rax+rax*1+0x6c]
    d8a9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d8aa:	67 69 6e 20 69 6e 63 	imul   ebp,DWORD PTR [esi+0x20],0x6f636e69
    d8b1:	6f 
    d8b2:	72 72                	jb     d926 <_IO_stdin_used+0x1926>
    d8b4:	65 63 74 00 50       	movsxd esi,DWORD PTR gs:[rax+rax*1+0x50]
    d8b9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d8ba:	73 73                	jae    d92f <_IO_stdin_used+0x192f>
    d8bc:	69 62 6c 65 20 46 54 	imul   esp,DWORD PTR [rdx+0x6c],0x54462065
    d8c3:	50                   	push   rax
    d8c4:	20 62 72             	and    BYTE PTR [rdx+0x72],ah
    d8c7:	75 74                	jne    d93d <_IO_stdin_used+0x193d>
    d8c9:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    d8cd:	72 63                	jb     d932 <_IO_stdin_used+0x1932>
    d8cf:	65 20 61 74          	and    BYTE PTR gs:[rcx+0x74],ah
    d8d3:	74 65                	je     d93a <_IO_stdin_used+0x193a>
    d8d5:	6d                   	ins    DWORD PTR es:[rdi],dx
    d8d6:	70 74                	jo     d94c <_IO_stdin_used+0x194c>
    d8d8:	3a 20                	cmp    ah,BYTE PTR [rax]
    d8da:	25 73 28 73 75       	and    eax,0x75732873
    d8df:	73 70                	jae    d951 <_IO_stdin_used+0x1951>
    d8e1:	65 63 74 29 20       	movsxd esi,DWORD PTR gs:[rcx+rbp*1+0x20]
    d8e6:	2d 3e 20 25 73       	sub    eax,0x7325203e
    d8eb:	2e 20 25 64 20 66 61 	cs and BYTE PTR [rip+0x61662064],ah        # 6166f956 <_end+0x61532916>
    d8f2:	69 6c 65 64 20 6c 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x676f6c20
    d8f9:	67 
    d8fa:	69 6e 73 0a 00 00 53 	imul   ebp,DWORD PTR [rsi+0x73],0x5300000a
    d901:	50                   	push   rax
    d902:	49 20 54 41 42       	rex.WB and BYTE PTR [r9+rax*2+0x42],dl
    d907:	4c                   	rex.WR
    d908:	45 20 52 45          	and    BYTE PTR [r10+0x45],r10b
    d90c:	54                   	push   rsp
    d90d:	52                   	push   rdx
    d90e:	41                   	rex.B
    d90f:	4e 53                	rex.WRX push rbx
    d911:	3a 20                	cmp    ah,BYTE PTR [rax]
    d913:	25 64 3a 20 25       	and    eax,0x25203a64
    d918:	73 3a                	jae    d954 <_IO_stdin_used+0x1954>
    d91a:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    d91f:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64261398 <_end+0x64124358>
    d925:	0a 00                	or     al,BYTE PTR [rax]
    d927:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d92a:	49 20 4e 45          	rex.WB and BYTE PTR [r14+0x45],cl
    d92e:	57                   	push   rdi
    d92f:	20 43 4f             	and    BYTE PTR [rbx+0x4f],al
    d932:	4e 56                	rex.WRX push rsi
    d934:	3a 20                	cmp    ah,BYTE PTR [rax]
    d936:	25 64 3a 20 25       	and    eax,0x25203a64
    d93b:	73 3a                	jae    d977 <_IO_stdin_used+0x1977>
    d93d:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    d942:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642613bb <_end+0x6412437b>
    d948:	0a 00                	or     al,BYTE PTR [rax]
    d94a:	00 00                	add    BYTE PTR [rax],al
    d94c:	00 00                	add    BYTE PTR [rax],al
    d94e:	00 00                	add    BYTE PTR [rax],al
    d950:	53                   	push   rbx
    d951:	50                   	push   rax
    d952:	49 20 54 57 48       	rex.WB and BYTE PTR [r15+rdx*2+0x48],dl
    d957:	20 32                	and    BYTE PTR [rdx],dh
    d959:	2f                   	(bad)  
    d95a:	33 3a                	xor    edi,DWORD PTR [rdx]
    d95c:	20 25 64 3a 20 25    	and    BYTE PTR [rip+0x25203a64],ah        # 252113c6 <_end+0x250d4386>
    d962:	73 3a                	jae    d99e <_IO_stdin_used+0x199e>
    d964:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    d969:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642613e2 <_end+0x641243a2>
    d96f:	0a 00                	or     al,BYTE PTR [rax]
    d971:	00 00                	add    BYTE PTR [rax],al
    d973:	00 00                	add    BYTE PTR [rax],al
    d975:	00 00                	add    BYTE PTR [rax],al
    d977:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d97a:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d97e:	54                   	push   rsp
    d97f:	52                   	push   rdx
    d980:	59                   	pop    rcx
    d981:	3a 20                	cmp    ah,BYTE PTR [rax]
    d983:	25 64 3a 20 53       	and    eax,0x53203a64
    d988:	45 53                	rex.RB push r11
    d98a:	53                   	push   rbx
    d98b:	49                   	rex.WB
    d98c:	4f                   	rex.WRXB
    d98d:	4e 20 45 53          	rex.WRX and BYTE PTR [rbp+0x53],r8b
    d991:	54                   	push   rsp
    d992:	3a 20                	cmp    ah,BYTE PTR [rax]
    d994:	25 73 3a 25 64       	and    eax,0x64253a73
    d999:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325f9dd <_end+0x7312299d>
    d99f:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e409 <__GNU_EH_FRAME_HDR+0x2e1>
    d9a5:	00 00                	add    BYTE PTR [rax],al
    d9a7:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d9aa:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d9ae:	54                   	push   rsp
    d9af:	52                   	push   rdx
    d9b0:	59                   	pop    rcx
    d9b1:	3a 20                	cmp    ah,BYTE PTR [rax]
    d9b3:	25 64 3a 20 50       	and    eax,0x50203a64
    d9b8:	4f                   	rex.WRXB
    d9b9:	4c                   	rex.WR
    d9ba:	49 54                	rex.WB push r12
    d9bc:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    d9c0:	4e 56                	rex.WRX push rsi
    d9c2:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    d9c5:	44 20 33             	and    BYTE PTR [rbx],r14b
    d9c8:	2f                   	(bad)  
    d9c9:	33 3a                	xor    edi,DWORD PTR [rdx]
    d9cb:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64261444 <_end+0x64124404>
    d9d1:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fa15 <_end+0x731229d5>
    d9d7:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e441 <__GNU_EH_FRAME_HDR+0x319>
    d9dd:	00 00                	add    BYTE PTR [rax],al
    d9df:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d9e2:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d9e6:	54                   	push   rsp
    d9e7:	52                   	push   rdx
    d9e8:	59                   	pop    rcx
    d9e9:	3a 20                	cmp    ah,BYTE PTR [rax]
    d9eb:	25 64 3a 20 50       	and    eax,0x50203a64
    d9f0:	4f                   	rex.WRXB
    d9f1:	4c                   	rex.WR
    d9f2:	49 54                	rex.WB push r12
    d9f4:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    d9f8:	4e 56                	rex.WRX push rsi
    d9fa:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    d9fd:	44 20 32             	and    BYTE PTR [rdx],r14b
    da00:	2f                   	(bad)  
    da01:	33 3a                	xor    edi,DWORD PTR [rdx]
    da03:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 6426147c <_end+0x6412443c>
    da09:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fa4d <_end+0x73122a0d>
    da0f:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e479 <__GNU_EH_FRAME_HDR+0x351>
    da15:	00 00                	add    BYTE PTR [rax],al
    da17:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    da1a:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    da1e:	54                   	push   rsp
    da1f:	52                   	push   rdx
    da20:	59                   	pop    rcx
    da21:	3a 20                	cmp    ah,BYTE PTR [rax]
    da23:	25 64 3a 20 50       	and    eax,0x50203a64
    da28:	4f                   	rex.WRXB
    da29:	4c                   	rex.WR
    da2a:	49 54                	rex.WB push r12
    da2c:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    da30:	4e 56                	rex.WRX push rsi
    da32:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    da35:	44 20 31             	and    BYTE PTR [rcx],r14b
    da38:	2f                   	(bad)  
    da39:	33 3a                	xor    edi,DWORD PTR [rdx]
    da3b:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642614b4 <_end+0x64124474>
    da41:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fa85 <_end+0x73122a45>
    da47:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e4b1 <__GNU_EH_FRAME_HDR+0x389>
    da4d:	00 00                	add    BYTE PTR [rax],al
    da4f:	00 61 00             	add    BYTE PTR [rcx+0x0],ah
    da52:	00 00                	add    BYTE PTR [rax],al
    da54:	00 00                	add    BYTE PTR [rax],al
    da56:	00 00                	add    BYTE PTR [rax],al
    da58:	43 52                	rex.XB push r10
    da5a:	49 54                	rex.WB push r12
    da5c:	49                   	rex.WB
    da5d:	43                   	rex.XB
    da5e:	41                   	rex.B
    da5f:	4c 20 46 41          	rex.WR and BYTE PTR [rsi+0x41],r8b
    da63:	49                   	rex.WB
    da64:	4c                   	rex.WR
    da65:	45                   	rex.RB
    da66:	44 20 54 4f 20       	and    BYTE PTR [rdi+rcx*2+0x20],r10b
    da6b:	4f 50                	rex.WRXB push r8
    da6d:	45                   	rex.RB
    da6e:	4e 20 46 49          	rex.WRX and BYTE PTR [rsi+0x49],r8b
    da72:	4c                   	rex.WR
    da73:	45 20 46 4f          	and    BYTE PTR [r14+0x4f],r8b
    da77:	52                   	push   rdx
    da78:	20 4c 4f 47          	and    BYTE PTR [rdi+rcx*2+0x47],cl
    da7c:	47                   	rex.RXB
    da7d:	49                   	rex.WB
    da7e:	4e                   	rex.WRX
    da7f:	47 3a 20             	rex.RXB cmp r12b,BYTE PTR [r8]
    da82:	25 73 0a 00 25       	and    eax,0x25000a73
    da87:	73 20                	jae    daa9 <_IO_stdin_used+0x1aa9>
    da89:	25 73 20 25 73       	and    eax,0x73252073
    da8e:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fad2 <_end+0x73122a92>
    da94:	0a 00                	or     al,BYTE PTR [rax]
    da96:	25 73 20 25 73       	and    eax,0x73252073
    da9b:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64261514 <_end+0x641244d4>
    daa1:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fae5 <_end+0x73122aa5>
    daa7:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e511 <__GNU_EH_FRAME_HDR+0x3e9>
    daad:	00 00                	add    BYTE PTR [rax],al
    daaf:	00 61 6e             	add    BYTE PTR [rcx+0x6e],ah
    dab2:	79 00                	jns    dab4 <_IO_stdin_used+0x1ab4>
    dab4:	41                   	rex.B
    dab5:	4e 59                	rex.WRX pop rcx
    dab7:	00 49 43             	add    BYTE PTR [rcx+0x43],cl
    daba:	4d 50                	rex.WRB push r8
    dabc:	00 54 43 50          	add    BYTE PTR [rbx+rax*2+0x50],dl
    dac0:	00 55 44             	add    BYTE PTR [rbp+0x44],dl
    dac3:	50                   	push   rax
    dac4:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    dac7:	72 5f                	jb     db28 <_IO_stdin_used+0x1b28>
    dac9:	6d                   	ins    DWORD PTR es:[rdi],dx
    daca:	61                   	(bad)  
    dacb:	74 63                	je     db30 <_IO_stdin_used+0x1b30>
    dacd:	68 00 6e 6f 6e       	push   0x6e6f6e00
    dad2:	65 00 70 63          	add    BYTE PTR gs:[rax+0x63],dh
    dad6:	72 65                	jb     db3d <_IO_stdin_used+0x1b3d>
    dad8:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    dadb:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    dadf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dae0:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    dae3:	6c                   	ins    BYTE PTR es:[rdi],dx
    dae4:	65 20 74 79 70       	and    BYTE PTR gs:[rcx+rdi*2+0x70],dh
    dae9:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    daec:	25 73 0a 00 3b       	and    eax,0x3b000a73
    daf1:	00 46 6f             	add    BYTE PTR [rsi+0x6f],al
    daf4:	75 6e                	jne    db64 <_IO_stdin_used+0x1b64>
    daf6:	64 20 6f 70          	and    BYTE PTR fs:[rdi+0x70],ch
    dafa:	65 72 61             	gs jb  db5e <_IO_stdin_used+0x1b5e>
    dafd:	74 6f                	je     db6e <_IO_stdin_used+0x1b6e>
    daff:	72 00                	jb     db01 <_IO_stdin_used+0x1b01>
    db01:	61                   	(bad)  
    db02:	6c                   	ins    BYTE PTR es:[rdi],dx
    db03:	65 72 74             	gs jb  db7a <_IO_stdin_used+0x1b7a>
    db06:	00 24 68             	add    BYTE PTR [rax+rbp*2],ah
    db09:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    db0a:	6d                   	ins    DWORD PTR es:[rdi],dx
    db0b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    db0d:	65 74 00             	gs je  db10 <_IO_stdin_used+0x1b10>
    db10:	2d 3e 00 3c 3e       	sub    eax,0x3e3c003e
    db15:	00 24 65 78 74 65 72 	add    BYTE PTR [riz*2+0x72657478],ah
    db1c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db1d:	61                   	(bad)  
    db1e:	6c                   	ins    BYTE PTR es:[rdi],dx
    db1f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db20:	65 74 00             	gs je  db23 <_IO_stdin_used+0x1b23>
    db23:	22 3b                	and    bh,BYTE PTR [rbx]
    db25:	00 6e 61             	add    BYTE PTR [rsi+0x61],ch
    db28:	6d                   	ins    DWORD PTR es:[rdi],dx
    db29:	65 3a 22             	cmp    ah,BYTE PTR gs:[rdx]
    db2c:	00 6d 73             	add    BYTE PTR [rbp+0x73],ch
    db2f:	67 3a 22             	cmp    ah,BYTE PTR [edx]
    db32:	00 64 65 70          	add    BYTE PTR [rbp+riz*2+0x70],ah
    db36:	74 68                	je     dba0 <_IO_stdin_used+0x1ba0>
    db38:	3a 00                	cmp    al,BYTE PTR [rax]
    db3a:	74 79                	je     dbb5 <_IO_stdin_used+0x1bb5>
    db3c:	70 65                	jo     dba3 <_IO_stdin_used+0x1ba3>
    db3e:	3a 00                	cmp    al,BYTE PTR [rax]
    db40:	74 61                	je     dba3 <_IO_stdin_used+0x1ba3>
    db42:	72 67                	jb     dbab <_IO_stdin_used+0x1bab>
    db44:	65 74 3a             	gs je  db81 <_IO_stdin_used+0x1b81>
    db47:	22 00                	and    al,BYTE PTR [rax]
    db49:	73 65                	jae    dbb0 <_IO_stdin_used+0x1bb0>
    db4b:	76 3a                	jbe    db87 <_IO_stdin_used+0x1b87>
    db4d:	00 00                	add    BYTE PTR [rax],al
    db4f:	00 52 75             	add    BYTE PTR [rdx+0x75],dl
    db52:	6c                   	ins    BYTE PTR es:[rdi],dx
    db53:	65 20 73 65          	and    BYTE PTR gs:[rbx+0x65],dh
    db57:	76 65                	jbe    dbbe <_IO_stdin_used+0x1bbe>
    db59:	72 69                	jb     dbc4 <_IO_stdin_used+0x1bc4>
    db5b:	74 79                	je     dbd6 <_IO_stdin_used+0x1bd6>
    db5d:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    db60:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    db61:	75 6c                	jne    dbcf <_IO_stdin_used+0x1bcf>
    db63:	64 20 62 65          	and    BYTE PTR fs:[rdx+0x65],ah
    db67:	20 3e                	and    BYTE PTR [rsi],bh
    db69:	20 30                	and    BYTE PTR [rax],dh
    db6b:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    db6e:	64 20 3c 3d 20 31 30 	and    BYTE PTR fs:[rdi*1+0x303120],bh
    db75:	00 
    db76:	00 00                	add    BYTE PTR [rax],al
    db78:	52                   	push   rdx
    db79:	75 6c                	jne    dbe7 <_IO_stdin_used+0x1be7>
    db7b:	65 20 73 65          	and    BYTE PTR gs:[rbx+0x65],dh
    db7f:	76 65                	jbe    dbe6 <_IO_stdin_used+0x1be6>
    db81:	72 69                	jb     dbec <_IO_stdin_used+0x1bec>
    db83:	74 79                	je     dbfe <_IO_stdin_used+0x1bfe>
    db85:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    db88:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    db89:	75 6c                	jne    dbf7 <_IO_stdin_used+0x1bf7>
    db8b:	64 20 62 65          	and    BYTE PTR fs:[rdx+0x65],ah
    db8f:	20 61 20             	and    BYTE PTR [rcx+0x20],ah
    db92:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db93:	75 6d                	jne    dc02 <_IO_stdin_used+0x1c02>
    db95:	65 72 69             	gs jb  dc01 <_IO_stdin_used+0x1c01>
    db98:	63 20                	movsxd esp,DWORD PTR [rax]
    db9a:	76 61                	jbe    dbfd <_IO_stdin_used+0x1bfd>
    db9c:	6c                   	ins    BYTE PTR es:[rdi],dx
    db9d:	75 65                	jne    dc04 <_IO_stdin_used+0x1c04>
    db9f:	00 69 74             	add    BYTE PTR [rcx+0x74],ch
    dba2:	79 70                	jns    dc14 <_IO_stdin_used+0x1c14>
    dba4:	65 3a 00             	cmp    al,BYTE PTR gs:[rax]
    dba7:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    dba9:	76 61                	jbe    dc0c <_IO_stdin_used+0x1c0c>
    dbab:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbac:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    dbb3:	20 
    dbb4:	74 79                	je     dc2f <_IO_stdin_used+0x1c2f>
    dbb6:	70 65                	jo     dc1d <_IO_stdin_used+0x1c1d>
    dbb8:	20 76 61             	and    BYTE PTR [rsi+0x61],dh
    dbbb:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbbc:	75 65                	jne    dc23 <_IO_stdin_used+0x1c23>
    dbbe:	00 00                	add    BYTE PTR [rax],al
    dbc0:	25 73 3a 20 69       	and    eax,0x69203a73
    dbc5:	74 79                	je     dc40 <_IO_stdin_used+0x1c40>
    dbc7:	70 65                	jo     dc2e <_IO_stdin_used+0x1c2e>
    dbc9:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    dbcc:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbcd:	79 20                	jns    dbef <_IO_stdin_used+0x1bef>
    dbcf:	61                   	(bad)  
    dbd0:	70 70                	jo     dc42 <_IO_stdin_used+0x1c42>
    dbd2:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbd3:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dbda:	72 75                	jb     dc51 <_IO_stdin_used+0x1c51>
    dbdc:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbdd:	65 73 20             	gs jae dc00 <_IO_stdin_used+0x1c00>
    dbe0:	77 69                	ja     dc4b <_IO_stdin_used+0x1c4b>
    dbe2:	74 68                	je     dc4c <_IO_stdin_used+0x1c4c>
    dbe4:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    dbe7:	4d 50                	rex.WRB push r8
    dbe9:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dbec:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dbef:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dbf0:	74 6f                	je     dc61 <_IO_stdin_used+0x1c61>
    dbf2:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dbf5:	0a 00                	or     al,BYTE PTR [rax]
    dbf7:	69 63 6f 64 65 3a 00 	imul   esp,DWORD PTR [rbx+0x6f],0x3a6564
    dbfe:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    dc00:	76 61                	jbe    dc63 <_IO_stdin_used+0x1c63>
    dc02:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc03:	69 64 65 20 69 63 6d 	imul   esp,DWORD PTR [rbp+riz*2+0x20],0x706d6369
    dc0a:	70 
    dc0b:	20 63 6f             	and    BYTE PTR [rbx+0x6f],ah
    dc0e:	64 65 20 76 61       	fs and BYTE PTR gs:[rsi+0x61],dh
    dc13:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc14:	75 65                	jne    dc7b <_IO_stdin_used+0x1c7b>
    dc16:	00 00                	add    BYTE PTR [rax],al
    dc18:	69 63 6f 64 65 20 6f 	imul   esp,DWORD PTR [rbx+0x6f],0x6f206564
    dc1f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dc20:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc21:	79 20                	jns    dc43 <_IO_stdin_used+0x1c43>
    dc23:	61                   	(bad)  
    dc24:	70 70                	jo     dc96 <_IO_stdin_used+0x1c96>
    dc26:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc27:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dc2e:	72 75                	jb     dca5 <_IO_stdin_used+0x1ca5>
    dc30:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc31:	65 73 20             	gs jae dc54 <_IO_stdin_used+0x1c54>
    dc34:	77 69                	ja     dc9f <_IO_stdin_used+0x1c9f>
    dc36:	74 68                	je     dca0 <_IO_stdin_used+0x1ca0>
    dc38:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    dc3b:	4d 50                	rex.WRB push r8
    dc3d:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dc40:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dc43:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dc44:	74 6f                	je     dcb5 <_IO_stdin_used+0x1cb5>
    dc46:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dc49:	00 69 63             	add    BYTE PTR [rcx+0x63],ch
    dc4c:	6d                   	ins    DWORD PTR es:[rdi],dx
    dc4d:	70 5f                	jo     dcae <_IO_stdin_used+0x1cae>
    dc4f:	69 64 3a 00 49 6e 76 	imul   esp,DWORD PTR [rdx+rdi*1+0x0],0x61766e49
    dc56:	61 
    dc57:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc58:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    dc5f:	20 
    dc60:	69 64 20 76 61 6c 75 	imul   esp,DWORD PTR [rax+riz*1+0x76],0x65756c61
    dc67:	65 
	...
    dc70:	49                   	rex.WB
    dc71:	43                   	rex.XB
    dc72:	4d 50                	rex.WRB push r8
    dc74:	20 49 44             	and    BYTE PTR [rcx+0x44],cl
    dc77:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    dc7a:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc7b:	79 20                	jns    dc9d <_IO_stdin_used+0x1c9d>
    dc7d:	61                   	(bad)  
    dc7e:	70 70                	jo     dcf0 <_IO_stdin_used+0x1cf0>
    dc80:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc81:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dc88:	72 75                	jb     dcff <_IO_stdin_used+0x1cff>
    dc8a:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc8b:	65 73 20             	gs jae dcae <_IO_stdin_used+0x1cae>
    dc8e:	77 69                	ja     dcf9 <_IO_stdin_used+0x1cf9>
    dc90:	74 68                	je     dcfa <_IO_stdin_used+0x1cfa>
    dc92:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    dc95:	4d 50                	rex.WRB push r8
    dc97:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dc9a:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dc9d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dc9e:	74 6f                	je     dd0f <_IO_stdin_used+0x1d0f>
    dca0:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dca3:	00 69 63             	add    BYTE PTR [rcx+0x63],ch
    dca6:	6d                   	ins    DWORD PTR es:[rdi],dx
    dca7:	70 5f                	jo     dd08 <_IO_stdin_used+0x1d08>
    dca9:	73 65                	jae    dd10 <_IO_stdin_used+0x1d10>
    dcab:	71 3a                	jno    dce7 <_IO_stdin_used+0x1ce7>
    dcad:	00 49 6e             	add    BYTE PTR [rcx+0x6e],cl
    dcb0:	76 61                	jbe    dd13 <_IO_stdin_used+0x1d13>
    dcb2:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcb3:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    dcba:	20 
    dcbb:	73 65                	jae    dd22 <_IO_stdin_used+0x1d22>
    dcbd:	71 75                	jno    dd34 <_IO_stdin_used+0x1d34>
    dcbf:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    dcc1:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    dcc4:	76 61                	jbe    dd27 <_IO_stdin_used+0x1d27>
    dcc6:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcc7:	75 65                	jne    dd2e <_IO_stdin_used+0x1d2e>
    dcc9:	00 74 74 6c          	add    BYTE PTR [rsp+rsi*2+0x6c],dh
    dccd:	3a 00                	cmp    al,BYTE PTR [rax]
    dccf:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    dcd1:	76 61                	jbe    dd34 <_IO_stdin_used+0x1d34>
    dcd3:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcd4:	69 64 20 74 74 6c 20 	imul   esp,DWORD PTR [rax+riz*1+0x74],0x76206c74
    dcdb:	76 
    dcdc:	61                   	(bad)  
    dcdd:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcde:	75 65                	jne    dd45 <_IO_stdin_used+0x1d45>
    dce0:	00 66 6c             	add    BYTE PTR [rsi+0x6c],ah
    dce3:	61                   	(bad)  
    dce4:	67 73 3a             	addr32 jae dd21 <_IO_stdin_used+0x1d21>
    dce7:	22 00                	and    al,BYTE PTR [rax]
    dce9:	00 00                	add    BYTE PTR [rax],al
    dceb:	00 00                	add    BYTE PTR [rax],al
    dced:	00 00                	add    BYTE PTR [rax],al
    dcef:	00 66 6c             	add    BYTE PTR [rsi+0x6c],ah
    dcf2:	61                   	(bad)  
    dcf3:	67 73 20             	addr32 jae dd16 <_IO_stdin_used+0x1d16>
    dcf6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dcf7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dcf8:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcf9:	79 20                	jns    dd1b <_IO_stdin_used+0x1d1b>
    dcfb:	61                   	(bad)  
    dcfc:	70 70                	jo     dd6e <_IO_stdin_used+0x1d6e>
    dcfe:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcff:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dd06:	72 75                	jb     dd7d <_IO_stdin_used+0x1d7d>
    dd08:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd09:	65 73 20             	gs jae dd2c <_IO_stdin_used+0x1d2c>
    dd0c:	77 69                	ja     dd77 <_IO_stdin_used+0x1d77>
    dd0e:	74 68                	je     dd78 <_IO_stdin_used+0x1d78>
    dd10:	20 74 63 70          	and    BYTE PTR [rbx+riz*2+0x70],dh
    dd14:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dd17:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dd1a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd1b:	74 6f                	je     dd8c <_IO_stdin_used+0x1d8c>
    dd1d:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dd20:	00 61 63             	add    BYTE PTR [rcx+0x63],ah
    dd23:	6b 3a 00             	imul   edi,DWORD PTR [rdx],0x0
    dd26:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    dd28:	76 61                	jbe    dd8b <_IO_stdin_used+0x1d8b>
    dd2a:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd2b:	69 64 20 61 63 6b 20 	imul   esp,DWORD PTR [rax+riz*1+0x61],0x76206b63
    dd32:	76 
    dd33:	61                   	(bad)  
    dd34:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd35:	75 65                	jne    dd9c <_IO_stdin_used+0x1d9c>
    dd37:	00 70 63             	add    BYTE PTR [rax+0x63],dh
    dd3a:	72 65                	jb     dda1 <_IO_stdin_used+0x1da1>
    dd3c:	3a 22                	cmp    ah,BYTE PTR [rdx]
    dd3e:	00 00                	add    BYTE PTR [rax],al
    dd40:	46 61                	rex.RX (bad) 
    dd42:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    dd49:	20 
    dd4a:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    dd4d:	70 69                	jo     ddb8 <_IO_stdin_used+0x1db8>
    dd4f:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd50:	65 20 72 65          	and    BYTE PTR gs:[rdx+0x65],dh
    dd54:	67 75 6c             	addr32 jne ddc3 <_IO_stdin_used+0x1dc3>
    dd57:	61                   	(bad)  
    dd58:	72 20                	jb     dd7a <_IO_stdin_used+0x1d7a>
    dd5a:	65 78 70             	gs js  ddcd <_IO_stdin_used+0x1dcd>
    dd5d:	72 65                	jb     ddc4 <_IO_stdin_used+0x1dc4>
    dd5f:	73 73                	jae    ddd4 <_IO_stdin_used+0x1dd4>
    dd61:	69 6f 6e 00 64 73 69 	imul   ebp,DWORD PTR [rdi+0x6e],0x69736400
    dd68:	7a 65                	jp     ddcf <_IO_stdin_used+0x1dcf>
    dd6a:	3a 00                	cmp    al,BYTE PTR [rax]
    dd6c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd6d:	66 66 73 65          	data16 data16 jae ddd6 <_IO_stdin_used+0x1dd6>
    dd71:	74 3a                	je     ddad <_IO_stdin_used+0x1dad>
    dd73:	00 65 73             	add    BYTE PTR [rbp+0x73],ah
    dd76:	74 61                	je     ddd9 <_IO_stdin_used+0x1dd9>
    dd78:	62                   	(bad)  
    dd79:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd7a:	69 73 68 65 64 00 6e 	imul   esi,DWORD PTR [rbx+0x68],0x6e006465
    dd81:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd82:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    dd84:	63 72 79             	movsxd esi,DWORD PTR [rdx+0x79]
    dd87:	70 74                	jo     ddfd <_IO_stdin_used+0x1dfd>
    dd89:	00 25 63 00 25 30    	add    BYTE PTR [rip+0x30250063],ah        # 3025ddf2 <_end+0x30120db2>
    dd8f:	32 78 00             	xor    bh,BYTE PTR [rax+0x0]
    dd92:	00 00                	add    BYTE PTR [rax],al
    dd94:	3e 00 3c 00          	ds add BYTE PTR [rax+rax*1],bh
    dd98:	21 00                	and    DWORD PTR [rax],eax
    dd9a:	3c 3d                	cmp    al,0x3d
    dd9c:	00 3e                	add    BYTE PTR [rsi],bh
    dd9e:	3d 00 55 6e 73       	cmp    eax,0x736e5500
    dda3:	75 70                	jne    de15 <_IO_stdin_used+0x1e15>
    dda5:	70 6f                	jo     de16 <_IO_stdin_used+0x1e16>
    dda7:	72 74                	jb     de1d <_IO_stdin_used+0x1e1d>
    dda9:	65 64 20 6f 70       	gs and BYTE PTR fs:[rdi+0x70],ch
    ddae:	65 72 61             	gs jb  de12 <_IO_stdin_used+0x1e12>
    ddb1:	74 6f                	je     de22 <_IO_stdin_used+0x1e22>
    ddb3:	72 00                	jb     ddb5 <_IO_stdin_used+0x1db5>
    ddb5:	00 00                	add    BYTE PTR [rax],al
    ddb7:	00 bc d0 ff ff 0e d1 	add    BYTE PTR [rax+rdx*8-0x2ef10001],bh
    ddbe:	ff                   	(bad)  
    ddbf:	ff 27                	jmp    QWORD PTR [rdi]
    ddc1:	d1 ff                	sar    edi,1
    ddc3:	ff                   	(bad)  
    ddc4:	dc d0                	(bad)  
    ddc6:	ff                   	(bad)  
    ddc7:	ff f5                	push   rbp
    ddc9:	d0 ff                	sar    bh,1
    ddcb:	ff 40 d1             	inc    DWORD PTR [rax-0x2f]
    ddce:	ff                   	(bad)  
    ddcf:	ff 2e                	jmp    FWORD PTR [rsi]
    ddd1:	00 25 30 32 78 00    	add    BYTE PTR [rip+0x783230],ah        # 791007 <_end+0x653fc7>
    ddd7:	25 30 32 78 20       	and    eax,0x20783230
    dddc:	2d 2d 20 25 30       	sub    eax,0x3025202d
    dde1:	32 78 0a             	xor    bh,BYTE PTR [rax+0xa]
    dde4:	00 00                	add    BYTE PTR [rax],al
    dde6:	00 00                	add    BYTE PTR [rax],al
    dde8:	73 72                	jae    de5c <_IO_stdin_used+0x1e5c>
    ddea:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    ddec:	6c                   	ins    BYTE PTR es:[rdi],dx
    dded:	75 61                	jne    de50 <_IO_stdin_used+0x1e50>
    ddef:	2f                   	(bad)  
    ddf0:	73 63                	jae    de55 <_IO_stdin_used+0x1e55>
    ddf2:	72 69                	jb     de5d <_IO_stdin_used+0x1e5d>
    ddf4:	70 74                	jo     de6a <_IO_stdin_used+0x1e6a>
    ddf6:	73 2f                	jae    de27 <_IO_stdin_used+0x1e27>
    ddf8:	68 65 6c 6c 6f       	push   0x6f6c6c65
    ddfd:	74 65                	je     de64 <_IO_stdin_used+0x1e64>
    ddff:	73 74                	jae    de75 <_IO_stdin_used+0x1e75>
    de01:	2e 6c                	cs ins BYTE PTR es:[rdi],dx
    de03:	75 61                	jne    de66 <_IO_stdin_used+0x1e66>
    de05:	00 72 00             	add    BYTE PTR [rdx+0x0],dh
    de08:	2f                   	(bad)  
    de09:	65 74 63             	gs je  de6f <_IO_stdin_used+0x1e6f>
    de0c:	2f                   	(bad)  
    de0d:	76 69                	jbe    de78 <_IO_stdin_used+0x1e78>
    de0f:	67 69 6c 2f 6c 73 63 	imul   ebp,DWORD PTR [edi+ebp*1+0x6c],0x69726373
    de16:	72 69 
    de18:	70 74                	jo     de8e <_IO_stdin_used+0x1e8e>
    de1a:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    de1e:	66 00 46 61          	data16 add BYTE PTR [rsi+0x61],al
    de22:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    de29:	20 
    de2a:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    de2d:	6c                   	ins    BYTE PTR es:[rdi],dx
    de2e:	65 63 74 20 4c       	movsxd esi,DWORD PTR gs:[rax+riz*1+0x4c]
    de33:	75 61                	jne    de96 <_IO_stdin_used+0x1e96>
    de35:	20 73 63             	and    BYTE PTR [rbx+0x63],dh
    de38:	72 69                	jb     dea3 <_IO_stdin_used+0x1ea3>
    de3a:	70 74                	jo     deb0 <_IO_stdin_used+0x1eb0>
    de3c:	73 3a                	jae    de78 <_IO_stdin_used+0x1e78>
    de3e:	20 2f                	and    BYTE PTR [rdi],ch
    de40:	65 74 63             	gs je  dea6 <_IO_stdin_used+0x1ea6>
    de43:	2f                   	(bad)  
    de44:	76 69                	jbe    deaf <_IO_stdin_used+0x1eaf>
    de46:	67 69 6c 2f 6c 73 63 	imul   ebp,DWORD PTR [edi+ebp*1+0x6c],0x69726373
    de4d:	72 69 
    de4f:	70 74                	jo     dec5 <_IO_stdin_used+0x1ec5>
    de51:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    de55:	66 20 6e 6f          	data16 and BYTE PTR [rsi+0x6f],ch
    de59:	74 20                	je     de7b <_IO_stdin_used+0x1e7b>
    de5b:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    de5d:	75 6e                	jne    decd <_IO_stdin_used+0x1ecd>
    de5f:	64 2e 00 2e          	fs add BYTE PTR fs:[rsi],ch
    de63:	2a 2e                	sub    ch,BYTE PTR [rsi]
    de65:	6c                   	ins    BYTE PTR es:[rdi],dx
    de66:	75 61                	jne    dec9 <_IO_stdin_used+0x1ec9>
    de68:	3a 2e                	cmp    ch,BYTE PTR [rsi]
    de6a:	2a 00                	sub    al,BYTE PTR [rax]
    de6c:	6c                   	ins    BYTE PTR es:[rdi],dx
    de6d:	5f                   	pop    rdi
    de6e:	73 63                	jae    ded3 <_IO_stdin_used+0x1ed3>
    de70:	72 69                	jb     dedb <_IO_stdin_used+0x1edb>
    de72:	70 74                	jo     dee8 <_IO_stdin_used+0x1ee8>
    de74:	5f                   	pop    rdi
    de75:	72 6f                	jb     dee6 <_IO_stdin_used+0x1ee6>
    de77:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    de78:	74 3d                	je     deb7 <_IO_stdin_used+0x1eb7>
    de7a:	00 0a                	add    BYTE PTR [rdx],cl
    de7c:	00 00                	add    BYTE PTR [rax],al
    de7e:	00 00                	add    BYTE PTR [rax],al
    de80:	49 50                	rex.WB push r8
    de82:	76 36                	jbe    deba <_IO_stdin_used+0x1eba>
    de84:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2dfefd <_end+0x3e1a2ebd>
    de8a:	20 25 73 20 50 72    	and    BYTE PTR [rip+0x72502073],ah        # 7250ff03 <_end+0x723d2ec3>
    de90:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    de91:	74 6f                	je     df02 <_IO_stdin_used+0x1f02>
    de93:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    de96:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    de99:	6d                   	ins    DWORD PTR es:[rdi],dx
    de9a:	62                   	(bad)  
    de9b:	65 72 20             	gs jb  debe <_IO_stdin_used+0x1ebe>
    de9e:	3d 20 25 64 0a       	cmp    eax,0xa642520
    dea3:	00 00                	add    BYTE PTR [rax],al
    dea5:	00 00                	add    BYTE PTR [rax],al
    dea7:	00 5b 4e             	add    BYTE PTR [rbx+0x4e],bl
    deaa:	20 25 73 20 53 20    	and    BYTE PTR [rip+0x20532073],ah        # 2053ff23 <_end+0x20402ee3>
    deb0:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    deb3:	30 32                	xor    BYTE PTR [rdx],dh
    deb5:	78 20                	js     ded7 <_IO_stdin_used+0x1ed7>
    deb7:	45 20 30             	and    BYTE PTR [r8],r14b
    deba:	78 25                	js     dee1 <_IO_stdin_used+0x1ee1>
    debc:	30 32                	xor    BYTE PTR [rdx],dh
    debe:	78 5d                	js     df1d <_IO_stdin_used+0x1f1d>
    dec0:	0a 00                	or     al,BYTE PTR [rax]
    dec2:	00 00                	add    BYTE PTR [rax],al
    dec4:	00 00                	add    BYTE PTR [rax],al
    dec6:	00 00                	add    BYTE PTR [rax],al
    dec8:	53                   	push   rbx
    dec9:	65 67 6d             	gs ins DWORD PTR es:[edi],dx
    decc:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    dece:	74 61                	je     df31 <_IO_stdin_used+0x1f31>
    ded0:	74 69                	je     df3b <_IO_stdin_used+0x1f3b>
    ded2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ded3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ded4:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    ded7:	75 6c                	jne    df45 <_IO_stdin_used+0x1f45>
    ded9:	74 20                	je     defb <_IO_stdin_used+0x1efb>
    dedb:	61                   	(bad)  
    dedc:	74 20                	je     defe <_IO_stdin_used+0x1efe>
    dede:	25 73 3a 20 61       	and    eax,0x61203a73
    dee3:	70 70                	jo     df55 <_IO_stdin_used+0x1f55>
    dee5:	6c                   	ins    BYTE PTR es:[rdi],dx
    dee6:	69 63 61 74 69 6f 6e 	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
    deed:	20 63 72             	and    BYTE PTR [rbx+0x72],ah
    def0:	61                   	(bad)  
    def1:	73 68                	jae    df5b <_IO_stdin_used+0x1f5b>
    def3:	65 64 0a 00          	gs or  al,BYTE PTR fs:[rax]
    def7:	46 75 6e             	rex.RX jne df68 <_IO_stdin_used+0x1f68>
    defa:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    defe:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    deff:	20 62 61             	and    BYTE PTR [rdx+0x61],ah
    df02:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
    df05:	72 61                	jb     df68 <_IO_stdin_used+0x1f68>
    df07:	63 65 3a             	movsxd esp,DWORD PTR [rbp+0x3a]
    df0a:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
    df0e:	00 25 73 0a 00 00    	add    BYTE PTR [rip+0xa73],ah        # e987 <__GNU_EH_FRAME_HDR+0x85f>
    df14:	00 00                	add    BYTE PTR [rax],al
    df16:	00 00                	add    BYTE PTR [rax],al
    df18:	5b                   	pop    rbx
    df19:	4e 20 25 73 20 53 20 	rex.WRX and BYTE PTR [rip+0x20532073],r12b        # 2053ff93 <_end+0x20402f53>
    df20:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    df23:	30 32                	xor    BYTE PTR [rdx],dh
    df25:	78 20                	js     df47 <_IO_stdin_used+0x1f47>
    df27:	45 20 30             	and    BYTE PTR [r8],r14b
    df2a:	78 25                	js     df51 <_IO_stdin_used+0x1f51>
    df2c:	30 32                	xor    BYTE PTR [rdx],dh
    df2e:	78 20                	js     df50 <_IO_stdin_used+0x1f50>
    df30:	28 2e                	sub    BYTE PTR [rsi],ch
    df32:	2f                   	(bad)  
    df33:	76 69                	jbe    df9e <_IO_stdin_used+0x1f9e>
    df35:	67 69 6c 2e 65 78 65 	imul   ebp,DWORD PTR [esi+ebp*1+0x65],0x2b286578
    df3c:	28 2b 
    df3e:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    df41:	30 32                	xor    BYTE PTR [rdx],dh
    df43:	78 29                	js     df6e <_IO_stdin_used+0x1f6e>
    df45:	29 5d 0a             	sub    DWORD PTR [rbp+0xa],ebx
	...
    df50:	55                   	push   rbp
    df51:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df52:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    df56:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df57:	20 66 75             	and    BYTE PTR [rsi+0x75],ah
    df5a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df5b:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    df5f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df60:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    df63:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
    df66:	6d                   	ins    DWORD PTR es:[rdi],dx
    df67:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    df68:	72 79                	jb     dfe3 <_IO_stdin_used+0x1fe3>
    df6a:	20 6f 66             	and    BYTE PTR [rdi+0x66],ch
    df6d:	66 73 65             	data16 jae dfd5 <_IO_stdin_used+0x1fd5>
    df70:	74 20                	je     df92 <_IO_stdin_used+0x1f92>
    df72:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    df75:	30 32                	xor    BYTE PTR [rdx],dh
    df77:	78 0a                	js     df83 <_IO_stdin_used+0x1f83>
    df79:	00 52 65             	add    BYTE PTR [rdx+0x65],dl
    df7c:	67 69 73 74 65 72 20 	imul   esi,DWORD PTR [ebx+0x74],0x44207265
    df83:	44 
    df84:	75 6d                	jne    dff3 <_IO_stdin_used+0x1ff3>
    df86:	70 3a                	jo     dfc2 <_IO_stdin_used+0x1fc2>
    df88:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    df8b:	41 58                	pop    r8
    df8d:	5d                   	pop    rbp
    df8e:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790fb4 <_end+0x25653f74>
    df94:	30 32                	xor    BYTE PTR [rdx],dh
    df96:	78 0a                	js     dfa2 <_IO_stdin_used+0x1fa2>
    df98:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    df9b:	42 58                	rex.X pop rax
    df9d:	5d                   	pop    rbp
    df9e:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790fc4 <_end+0x25653f84>
    dfa4:	30 32                	xor    BYTE PTR [rdx],dh
    dfa6:	78 0a                	js     dfb2 <_IO_stdin_used+0x1fb2>
    dfa8:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    dfab:	43 58                	rex.XB pop r8
    dfad:	5d                   	pop    rbp
    dfae:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790fd4 <_end+0x25653f94>
    dfb4:	30 32                	xor    BYTE PTR [rdx],dh
    dfb6:	78 0a                	js     dfc2 <_IO_stdin_used+0x1fc2>
    dfb8:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    dfbb:	44 58                	rex.R pop rax
    dfbd:	5d                   	pop    rbp
    dfbe:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790fe4 <_end+0x25653fa4>
    dfc4:	30 32                	xor    BYTE PTR [rdx],dh
    dfc6:	78 0a                	js     dfd2 <_IO_stdin_used+0x1fd2>
    dfc8:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    dfcb:	53                   	push   rbx
    dfcc:	50                   	push   rax
    dfcd:	5d                   	pop    rbp
    dfce:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790ff4 <_end+0x25653fb4>
    dfd4:	30 32                	xor    BYTE PTR [rdx],dh
    dfd6:	78 0a                	js     dfe2 <_IO_stdin_used+0x1fe2>
    dfd8:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    dfdb:	42 50                	rex.X push rax
    dfdd:	5d                   	pop    rbp
    dfde:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25791004 <_end+0x25653fc4>
    dfe4:	30 32                	xor    BYTE PTR [rdx],dh
    dfe6:	78 0a                	js     dff2 <_IO_stdin_used+0x1ff2>
	...
    dff0:	72 00                	jb     dff2 <_IO_stdin_used+0x1ff2>
    dff2:	2f                   	(bad)  
    dff3:	75 73                	jne    e068 <_IO_stdin_used+0x2068>
    dff5:	72 2f                	jb     e026 <_IO_stdin_used+0x2026>
    dff7:	73 68                	jae    e061 <_IO_stdin_used+0x2061>
    dff9:	61                   	(bad)  
    dffa:	72 65                	jb     e061 <_IO_stdin_used+0x2061>
    dffc:	2f                   	(bad)  
    dffd:	76 69                	jbe    e068 <_IO_stdin_used+0x2068>
    dfff:	67 69 6c 2f 6d 65 6d 	imul   ebp,DWORD PTR [edi+ebp*1+0x6d],0x616d6d65
    e006:	6d 61 
    e008:	70 2e                	jo     e038 <_IO_stdin_used+0x2038>
    e00a:	74 78                	je     e084 <_IO_stdin_used+0x2084>
    e00c:	74 00                	je     e00e <_IO_stdin_used+0x200e>
    e00e:	00 00                	add    BYTE PTR [rax],al
    e010:	46                   	rex.RX
    e011:	41 54                	push   r12
    e013:	41                   	rex.B
    e014:	4c 20 45 52          	rex.WR and BYTE PTR [rbp+0x52],r8b
    e018:	52                   	push   rdx
    e019:	4f 52                	rex.WRXB push r10
    e01b:	3a 20                	cmp    ah,BYTE PTR [rax]
    e01d:	6d                   	ins    DWORD PTR es:[rdi],dx
    e01e:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    e020:	6d                   	ins    DWORD PTR es:[rdi],dx
    e021:	61                   	(bad)  
    e022:	70 2e                	jo     e052 <_IO_stdin_used+0x2052>
    e024:	74 78                	je     e09e <_IO_stdin_used+0x209e>
    e026:	74 20                	je     e048 <_IO_stdin_used+0x2048>
    e028:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e029:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e02a:	74 20                	je     e04c <_IO_stdin_used+0x204c>
    e02c:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    e02e:	75 6e                	jne    e09e <_IO_stdin_used+0x209e>
    e030:	64 2e 50             	fs cs push rax
    e033:	6c                   	ins    BYTE PTR es:[rdi],dx
    e034:	65 61                	gs (bad) 
    e036:	73 65                	jae    e09d <_IO_stdin_used+0x209d>
    e038:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    e03b:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    e03e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e03f:	20 67 65             	and    BYTE PTR [rdi+0x65],ah
    e042:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e043:	5f                   	pop    rdi
    e044:	6d                   	ins    DWORD PTR es:[rdi],dx
    e045:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    e047:	5f                   	pop    rdi
    e048:	6d                   	ins    DWORD PTR es:[rdi],dx
    e049:	61                   	(bad)  
    e04a:	70 2e                	jo     e07a <_IO_stdin_used+0x207a>
    e04c:	70 79                	jo     e0c7 <_IO_stdin_used+0x20c7>
    e04e:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    e051:	64 20 63 6f          	and    BYTE PTR fs:[rbx+0x6f],ah
    e055:	70 79                	jo     e0d0 <_IO_stdin_used+0x20d0>
    e057:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
    e05a:	6d                   	ins    DWORD PTR es:[rdi],dx
    e05b:	6d                   	ins    DWORD PTR es:[rdi],dx
    e05c:	61                   	(bad)  
    e05d:	70 2e                	jo     e08d <_IO_stdin_used+0x208d>
    e05f:	74 78                	je     e0d9 <_IO_stdin_used+0x20d9>
    e061:	74 20                	je     e083 <_IO_stdin_used+0x2083>
    e063:	74 6f                	je     e0d4 <_IO_stdin_used+0x20d4>
    e065:	20 2f                	and    BYTE PTR [rdi],ch
    e067:	75 73                	jne    e0dc <_IO_stdin_used+0x20dc>
    e069:	72 2f                	jb     e09a <_IO_stdin_used+0x209a>
    e06b:	73 68                	jae    e0d5 <_IO_stdin_used+0x20d5>
    e06d:	61                   	(bad)  
    e06e:	72 65                	jb     e0d5 <_IO_stdin_used+0x20d5>
    e070:	2f                   	(bad)  
    e071:	76 69                	jbe    e0dc <_IO_stdin_used+0x20dc>
    e073:	67 69 6c 00 0a 00 20 	imul   ebp,DWORD PTR [eax+eax*1+0xa],0x2000
    e07a:	00 00 
    e07c:	00 00                	add    BYTE PTR [rax],al
    e07e:	00 00                	add    BYTE PTR [rax],al
    e080:	53                   	push   rbx
    e081:	63 61 6e             	movsxd esp,DWORD PTR [rcx+0x6e]
    e084:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e085:	69 6e 67 20 66 6f 72 	imul   ebp,DWORD PTR [rsi+0x67],0x726f6620
    e08c:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    e08f:	65 76 69             	gs jbe e0fb <_IO_stdin_used+0x20fb>
    e092:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e093:	75 73                	jne    e108 <_IO_stdin_used+0x2108>
    e095:	20 6c 6f 67          	and    BYTE PTR [rdi+rbp*2+0x67],ch
    e099:	20 66 69             	and    BYTE PTR [rsi+0x69],ah
    e09c:	6c                   	ins    BYTE PTR es:[rdi],dx
    e09d:	65 73 2e             	gs jae e0ce <_IO_stdin_used+0x20ce>
    e0a0:	2e 2e 00 2f          	cs cs add BYTE PTR [rdi],ch
    e0a4:	75 73                	jne    e119 <_IO_stdin_used+0x2119>
    e0a6:	72 2f                	jb     e0d7 <_IO_stdin_used+0x20d7>
    e0a8:	73 68                	jae    e112 <_IO_stdin_used+0x2112>
    e0aa:	61                   	(bad)  
    e0ab:	72 65                	jb     e112 <_IO_stdin_used+0x2112>
    e0ad:	2f                   	(bad)  
    e0ae:	76 69                	jbe    e119 <_IO_stdin_used+0x2119>
    e0b0:	67 69 6c 2f 73 74 61 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x73746174
    e0b7:	74 73 
    e0b9:	2f                   	(bad)  
    e0ba:	70 70                	jo     e12c <__GNU_EH_FRAME_HDR+0x4>
    e0bc:	73 2f                	jae    e0ed <_IO_stdin_used+0x20ed>
    e0be:	00 46 61             	add    BYTE PTR [rsi+0x61],al
    e0c1:	69 6c 65 64 00 46 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x756f4600
    e0c8:	75 
    e0c9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e0ca:	64 20 25 64 20 6c 6f 	and    BYTE PTR fs:[rip+0x6f6c2064],ah        # 6f6d0135 <_end+0x6f5930f5>
    e0d1:	67 20 66 69          	and    BYTE PTR [esi+0x69],ah
    e0d5:	6c                   	ins    BYTE PTR es:[rdi],dx
    e0d6:	65 73 0a             	gs jae e0e3 <_IO_stdin_used+0x20e3>
    e0d9:	00 00                	add    BYTE PTR [rax],al
    e0db:	00 00                	add    BYTE PTR [rax],al
    e0dd:	00 00                	add    BYTE PTR [rax],al
    e0df:	00 2f                	add    BYTE PTR [rdi],ch
    e0e1:	75 73                	jne    e156 <__GNU_EH_FRAME_HDR+0x2e>
    e0e3:	72 2f                	jb     e114 <_IO_stdin_used+0x2114>
    e0e5:	73 68                	jae    e14f <__GNU_EH_FRAME_HDR+0x27>
    e0e7:	61                   	(bad)  
    e0e8:	72 65                	jb     e14f <__GNU_EH_FRAME_HDR+0x27>
    e0ea:	2f                   	(bad)  
    e0eb:	76 69                	jbe    e156 <__GNU_EH_FRAME_HDR+0x2e>
    e0ed:	67 69 6c 2f 73 74 61 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x73746174
    e0f4:	74 73 
    e0f6:	2f                   	(bad)  
    e0f7:	70 70                	jo     e169 <__GNU_EH_FRAME_HDR+0x41>
    e0f9:	73 2f                	jae    e12a <__GNU_EH_FRAME_HDR+0x2>
    e0fb:	70 70                	jo     e16d <__GNU_EH_FRAME_HDR+0x45>
    e0fd:	73 2e                	jae    e12d <__GNU_EH_FRAME_HDR+0x5>
    e0ff:	6c                   	ins    BYTE PTR es:[rdi],dx
    e100:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e101:	67 2e 25 64 2e 74 78 	addr32 cs and eax,0x78742e64
    e108:	74 00                	je     e10a <_IO_stdin_used+0x210a>
    e10a:	77 00                	ja     e10c <_IO_stdin_used+0x210c>
    e10c:	61                   	(bad)  
    e10d:	00 44 75 6d          	add    BYTE PTR [rbp+rsi*2+0x6d],al
    e111:	70 69                	jo     e17c <__GNU_EH_FRAME_HDR+0x54>
    e113:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e114:	67 20 74 6f 20       	and    BYTE PTR [edi+ebp*2+0x20],dh
    e119:	25 73 0a 00 25       	and    eax,0x25000a73
    e11e:	6c                   	ins    BYTE PTR es:[rdi],dx
    e11f:	75 2c                	jne    e14d <__GNU_EH_FRAME_HDR+0x25>
    e121:	25                   	.byte 0x25
    e122:	64 0a 00             	or     al,BYTE PTR fs:[rax]

Disassembly of section .eh_frame_hdr:

000000000000e128 <__GNU_EH_FRAME_HDR>:
    e128:	01 1b                	add    DWORD PTR [rbx],ebx
    e12a:	03 3b                	add    edi,DWORD PTR [rbx]
    e12c:	c4 03 00 00          	(bad)
    e130:	77 00                	ja     e132 <__GNU_EH_FRAME_HDR+0xa>
    e132:	00 00                	add    BYTE PTR [rax],al
    e134:	f8                   	clc    
    e135:	3e ff                	ds (bad) 
    e137:	ff                   	(bad)  
    e138:	f8                   	clc    
    e139:	03 00                	add    eax,DWORD PTR [rax]
    e13b:	00 88 43 ff ff 20    	add    BYTE PTR [rax+0x20ffff43],cl
    e141:	04 00                	add    al,0x0
    e143:	00 98 43 ff ff 38    	add    BYTE PTR [rax+0x38ffff43],bl
    e149:	04 00                	add    al,0x0
    e14b:	00 18                	add    BYTE PTR [rax],bl
    e14d:	48 ff                	rex.W (bad) 
    e14f:	ff e0                	jmp    rax
    e151:	03 00                	add    eax,DWORD PTR [rax]
    e153:	00 01                	add    BYTE PTR [rcx],al
    e155:	49 ff                	rex.WB (bad) 
    e157:	ff 50 04             	call   QWORD PTR [rax+0x4]
    e15a:	00 00                	add    BYTE PTR [rax],al
    e15c:	3b 49 ff             	cmp    ecx,DWORD PTR [rcx-0x1]
    e15f:	ff 70 04             	push   QWORD PTR [rax+0x4]
    e162:	00 00                	add    BYTE PTR [rax],al
    e164:	91                   	xchg   ecx,eax
    e165:	4a ff                	rex.WX (bad) 
    e167:	ff 98 04 00 00 85    	call   FWORD PTR [rax-0x7afffffc]
    e16d:	4d ff                	rex.WRB (bad) 
    e16f:	ff                   	(bad)  
    e170:	b8 04 00 00 98       	mov    eax,0x98000004
    e175:	4e ff                	rex.WRX (bad) 
    e177:	ff                   	(bad)  
    e178:	d8 04 00             	fadd   DWORD PTR [rax+rax*1]
    e17b:	00 46 4f             	add    BYTE PTR [rsi+0x4f],al
    e17e:	ff                   	(bad)  
    e17f:	ff                   	(bad)  
    e180:	f8                   	clc    
    e181:	04 00                	add    al,0x0
    e183:	00 ec                	add    ah,ch
    e185:	4f ff                	rex.WRXB (bad) 
    e187:	ff 18                	call   FWORD PTR [rax]
    e189:	05 00 00 81 50       	add    eax,0x50810000
    e18e:	ff                   	(bad)  
    e18f:	ff                   	(bad)  
    e190:	38 05 00 00 15 51    	cmp    BYTE PTR [rip+0x51150000],al        # 5115e196 <_end+0x51021156>
    e196:	ff                   	(bad)  
    e197:	ff 58 05             	call   FWORD PTR [rax+0x5]
    e19a:	00 00                	add    BYTE PTR [rax],al
    e19c:	e1 52                	loope  e1f0 <__GNU_EH_FRAME_HDR+0xc8>
    e19e:	ff                   	(bad)  
    e19f:	ff 84 05 00 00 b5 53 	inc    DWORD PTR [rbp+rax*1+0x53b50000]
    e1a6:	ff                   	(bad)  
    e1a7:	ff a8 05 00 00 7c    	jmp    FWORD PTR [rax+0x7c000005]
    e1ad:	54                   	push   rsp
    e1ae:	ff                   	(bad)  
    e1af:	ff cc                	dec    esp
    e1b1:	05 00 00 cf 54       	add    eax,0x54cf0000
    e1b6:	ff                   	(bad)  
    e1b7:	ff                   	(bad)  
    e1b8:	ec                   	in     al,dx
    e1b9:	05 00 00 02 55       	add    eax,0x55020000
    e1be:	ff                   	(bad)  
    e1bf:	ff 0c 06             	dec    DWORD PTR [rsi+rax*1]
    e1c2:	00 00                	add    BYTE PTR [rax],al
    e1c4:	23 55 ff             	and    edx,DWORD PTR [rbp-0x1]
    e1c7:	ff 2c 06             	jmp    FWORD PTR [rsi+rax*1]
    e1ca:	00 00                	add    BYTE PTR [rax],al
    e1cc:	8b 55 ff             	mov    edx,DWORD PTR [rbp-0x1]
    e1cf:	ff 50 06             	call   QWORD PTR [rax+0x6]
    e1d2:	00 00                	add    BYTE PTR [rax],al
    e1d4:	b0 59                	mov    al,0x59
    e1d6:	ff                   	(bad)  
    e1d7:	ff 70 06             	push   QWORD PTR [rax+0x6]
    e1da:	00 00                	add    BYTE PTR [rax],al
    e1dc:	0d 5b ff ff 90       	or     eax,0x90ffff5b
    e1e1:	06                   	(bad)  
    e1e2:	00 00                	add    BYTE PTR [rax],al
    e1e4:	51                   	push   rcx
    e1e5:	63 ff                	movsxd edi,edi
    e1e7:	ff b0 06 00 00 0d    	push   QWORD PTR [rax+0xd000006]
    e1ed:	6c                   	ins    BYTE PTR es:[rdi],dx
    e1ee:	ff                   	(bad)  
    e1ef:	ff                   	(bad)  
    e1f0:	d8 06                	fadd   DWORD PTR [rsi]
    e1f2:	00 00                	add    BYTE PTR [rax],al
    e1f4:	62                   	(bad)  
    e1f5:	6d                   	ins    DWORD PTR es:[rdi],dx
    e1f6:	ff                   	(bad)  
    e1f7:	ff                   	(bad)  
    e1f8:	f8                   	clc    
    e1f9:	06                   	(bad)  
    e1fa:	00 00                	add    BYTE PTR [rax],al
    e1fc:	61                   	(bad)  
    e1fd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e1fe:	ff                   	(bad)  
    e1ff:	ff 18                	call   FWORD PTR [rax]
    e201:	07                   	(bad)  
    e202:	00 00                	add    BYTE PTR [rax],al
    e204:	4d 6f                	rex.WRB outs dx,DWORD PTR ds:[rsi]
    e206:	ff                   	(bad)  
    e207:	ff                   	(bad)  
    e208:	38 07                	cmp    BYTE PTR [rdi],al
    e20a:	00 00                	add    BYTE PTR [rax],al
    e20c:	ff 72 ff             	push   QWORD PTR [rdx-0x1]
    e20f:	ff 58 07             	call   FWORD PTR [rax+0x7]
    e212:	00 00                	add    BYTE PTR [rax],al
    e214:	82                   	(bad)  
    e215:	73 ff                	jae    e216 <__GNU_EH_FRAME_HDR+0xee>
    e217:	ff                   	(bad)  
    e218:	78 07                	js     e221 <__GNU_EH_FRAME_HDR+0xf9>
    e21a:	00 00                	add    BYTE PTR [rax],al
    e21c:	ac                   	lods   al,BYTE PTR ds:[rsi]
    e21d:	75 ff                	jne    e21e <__GNU_EH_FRAME_HDR+0xf6>
    e21f:	ff a0 07 00 00 e9    	jmp    QWORD PTR [rax-0x16fffff9]
    e225:	77 ff                	ja     e226 <__GNU_EH_FRAME_HDR+0xfe>
    e227:	ff c4                	inc    esp
    e229:	07                   	(bad)  
    e22a:	00 00                	add    BYTE PTR [rax],al
    e22c:	4f 78 ff             	rex.WRXB js e22e <__GNU_EH_FRAME_HDR+0x106>
    e22f:	ff e4                	jmp    rsp
    e231:	07                   	(bad)  
    e232:	00 00                	add    BYTE PTR [rax],al
    e234:	66 78 ff             	data16 js e236 <__GNU_EH_FRAME_HDR+0x10e>
    e237:	ff 04 08             	inc    DWORD PTR [rax+rcx*1]
    e23a:	00 00                	add    BYTE PTR [rax],al
    e23c:	b7 78                	mov    bh,0x78
    e23e:	ff                   	(bad)  
    e23f:	ff 28                	jmp    FWORD PTR [rax]
    e241:	08 00                	or     BYTE PTR [rax],al
    e243:	00 f4                	add    ah,dh
    e245:	7e ff                	jle    e246 <__GNU_EH_FRAME_HDR+0x11e>
    e247:	ff 4c 08 00          	dec    DWORD PTR [rax+rcx*1+0x0]
    e24b:	00 0e                	add    BYTE PTR [rsi],cl
    e24d:	7f ff                	jg     e24e <__GNU_EH_FRAME_HDR+0x126>
    e24f:	ff 6c 08 00          	jmp    FWORD PTR [rax+rcx*1+0x0]
    e253:	00 37                	add    BYTE PTR [rdi],dh
    e255:	7f ff                	jg     e256 <__GNU_EH_FRAME_HDR+0x12e>
    e257:	ff 8c 08 00 00 67 7f 	dec    DWORD PTR [rax+rcx*1+0x7f670000]
    e25e:	ff                   	(bad)  
    e25f:	ff ac 08 00 00 9e 7f 	jmp    FWORD PTR [rax+rcx*1+0x7f9e0000]
    e266:	ff                   	(bad)  
    e267:	ff c8                	dec    eax
    e269:	08 00                	or     BYTE PTR [rax],al
    e26b:	00 e3                	add    bl,ah
    e26d:	80 ff ff             	cmp    bh,0xff
    e270:	e8 08 00 00 43       	call   4300e27d <_end+0x42ed123d>
    e275:	82                   	(bad)  
    e276:	ff                   	(bad)  
    e277:	ff 08                	dec    DWORD PTR [rax]
    e279:	09 00                	or     DWORD PTR [rax],eax
    e27b:	00 a4 82 ff ff 28 09 	add    BYTE PTR [rdx+rax*4+0x928ffff],ah
    e282:	00 00                	add    BYTE PTR [rax],al
    e284:	dd 82 ff ff 48 09    	fld    QWORD PTR [rdx+0x948ffff]
    e28a:	00 00                	add    BYTE PTR [rax],al
    e28c:	9b                   	fwait
    e28d:	83 ff ff             	cmp    edi,0xffffffff
    e290:	68 09 00 00 59       	push   0x59000009
    e295:	86 ff                	xchg   bh,bh
    e297:	ff 88 09 00 00 51    	dec    DWORD PTR [rax+0x51000009]
    e29d:	88 ff                	mov    bh,bh
    e29f:	ff a8 09 00 00 ab    	jmp    FWORD PTR [rax-0x54fffff7]
    e2a5:	88 ff                	mov    bh,bh
    e2a7:	ff c8                	dec    eax
    e2a9:	09 00                	or     DWORD PTR [rax],eax
    e2ab:	00 db                	add    bl,bl
    e2ad:	8b ff                	mov    edi,edi
    e2af:	ff                   	(bad)  
    e2b0:	e8 09 00 00 2c       	call   2c00e2be <_end+0x2bed127e>
    e2b5:	90                   	nop
    e2b6:	ff                   	(bad)  
    e2b7:	ff 08                	dec    DWORD PTR [rax]
    e2b9:	0a 00                	or     al,BYTE PTR [rax]
    e2bb:	00 56 90             	add    BYTE PTR [rsi-0x70],dl
    e2be:	ff                   	(bad)  
    e2bf:	ff 24 0a             	jmp    QWORD PTR [rdx+rcx*1]
    e2c2:	00 00                	add    BYTE PTR [rax],al
    e2c4:	08 92 ff ff 48 0a    	or     BYTE PTR [rdx+0xa48ffff],dl
    e2ca:	00 00                	add    BYTE PTR [rax],al
    e2cc:	1f                   	(bad)  
    e2cd:	92                   	xchg   edx,eax
    e2ce:	ff                   	(bad)  
    e2cf:	ff 68 0a             	jmp    FWORD PTR [rax+0xa]
    e2d2:	00 00                	add    BYTE PTR [rax],al
    e2d4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e2d5:	92                   	xchg   edx,eax
    e2d6:	ff                   	(bad)  
    e2d7:	ff 88 0a 00 00 bb    	dec    DWORD PTR [rax-0x44fffff6]
    e2dd:	92                   	xchg   edx,eax
    e2de:	ff                   	(bad)  
    e2df:	ff a8 0a 00 00 32    	jmp    FWORD PTR [rax+0x3200000a]
    e2e5:	94                   	xchg   esp,eax
    e2e6:	ff                   	(bad)  
    e2e7:	ff c4                	inc    esp
    e2e9:	0a 00                	or     al,BYTE PTR [rax]
    e2eb:	00 ce                	add    dh,cl
    e2ed:	94                   	xchg   esp,eax
    e2ee:	ff                   	(bad)  
    e2ef:	ff                   	(bad)  
    e2f0:	e8 0a 00 00 bc       	call   ffffffffbc00e2ff <_end+0xffffffffbbed12bf>
    e2f5:	96                   	xchg   esi,eax
    e2f6:	ff                   	(bad)  
    e2f7:	ff 08                	dec    DWORD PTR [rax]
    e2f9:	0b 00                	or     eax,DWORD PTR [rax]
    e2fb:	00 a4 98 ff ff 28 0b 	add    BYTE PTR [rax+rbx*4+0xb28ffff],ah
    e302:	00 00                	add    BYTE PTR [rax],al
    e304:	10 99 ff ff 48 0b    	adc    BYTE PTR [rcx+0xb48ffff],bl
    e30a:	00 00                	add    BYTE PTR [rax],al
    e30c:	82                   	(bad)  
    e30d:	99                   	cdq    
    e30e:	ff                   	(bad)  
    e30f:	ff 68 0b             	jmp    FWORD PTR [rax+0xb]
    e312:	00 00                	add    BYTE PTR [rax],al
    e314:	93                   	xchg   ebx,eax
    e315:	9a                   	(bad)  
    e316:	ff                   	(bad)  
    e317:	ff 88 0b 00 00 ef    	dec    DWORD PTR [rax-0x10fffff5]
    e31d:	9a                   	(bad)  
    e31e:	ff                   	(bad)  
    e31f:	ff a8 0b 00 00 2d    	jmp    FWORD PTR [rax+0x2d00000b]
    e325:	9b                   	fwait
    e326:	ff                   	(bad)  
    e327:	ff c8                	dec    eax
    e329:	0b 00                	or     eax,DWORD PTR [rax]
    e32b:	00 b3 9b ff ff e8    	add    BYTE PTR [rbx-0x17000065],dh
    e331:	0b 00                	or     eax,DWORD PTR [rax]
    e333:	00 92 9c ff ff 08    	add    BYTE PTR [rdx+0x8ffff9c],dl
    e339:	0c 00                	or     al,0x0
    e33b:	00 06                	add    BYTE PTR [rsi],al
    e33d:	9d                   	popf   
    e33e:	ff                   	(bad)  
    e33f:	ff 28                	jmp    FWORD PTR [rax]
    e341:	0c 00                	or     al,0x0
    e343:	00 a2 9d ff ff 48    	add    BYTE PTR [rdx+0x48ffff9d],ah
    e349:	0c 00                	or     al,0x0
    e34b:	00 cb                	add    bl,cl
    e34d:	9d                   	popf   
    e34e:	ff                   	(bad)  
    e34f:	ff 68 0c             	jmp    FWORD PTR [rax+0xc]
    e352:	00 00                	add    BYTE PTR [rax],al
    e354:	f4                   	hlt    
    e355:	9d                   	popf   
    e356:	ff                   	(bad)  
    e357:	ff 88 0c 00 00 47    	dec    DWORD PTR [rax+0x4700000c]
    e35d:	9f                   	lahf   
    e35e:	ff                   	(bad)  
    e35f:	ff b0 0c 00 00 5a    	push   QWORD PTR [rax+0x5a00000c]
    e365:	a0 ff ff d0 0c 00 00 	movabs al,ds:0xa15300000cd0ffff
    e36c:	53 a1 
    e36e:	ff                   	(bad)  
    e36f:	ff f0                	push   rax
    e371:	0c 00                	or     al,0x0
    e373:	00 f5                	add    ch,dh
    e375:	a1 ff ff 10 0d 00 00 	movabs eax,ds:0xa21300000d10ffff
    e37c:	13 a2 
    e37e:	ff                   	(bad)  
    e37f:	ff 30                	push   QWORD PTR [rax]
    e381:	0d 00 00 76 a3       	or     eax,0xa3760000
    e386:	ff                   	(bad)  
    e387:	ff 50 0d             	call   QWORD PTR [rax+0xd]
    e38a:	00 00                	add    BYTE PTR [rax],al
    e38c:	87 a5 ff ff 80 0d    	xchg   DWORD PTR [rbp+0xd80ffff],esp
    e392:	00 00                	add    BYTE PTR [rax],al
    e394:	39 a6 ff ff a0 0d    	cmp    DWORD PTR [rsi+0xda0ffff],esp
    e39a:	00 00                	add    BYTE PTR [rax],al
    e39c:	de a6 ff ff c0 0d    	fisub  WORD PTR [rsi+0xdc0ffff]
    e3a2:	00 00                	add    BYTE PTR [rax],al
    e3a4:	72 a7                	jb     e34d <__GNU_EH_FRAME_HDR+0x225>
    e3a6:	ff                   	(bad)  
    e3a7:	ff                   	(bad)  
    e3a8:	e8 0d 00 00 47       	call   4700e3ba <_end+0x46ed137a>
    e3ad:	a8 ff                	test   al,0xff
    e3af:	ff 08                	dec    DWORD PTR [rax]
    e3b1:	0e                   	(bad)  
    e3b2:	00 00                	add    BYTE PTR [rax],al
    e3b4:	26 a9 ff ff 28 0e    	es test eax,0xe28ffff
    e3ba:	00 00                	add    BYTE PTR [rax],al
    e3bc:	a3 a9 ff ff 48 0e 00 	movabs ds:0xd900000e48ffffa9,eax
    e3c3:	00 d9 
    e3c5:	aa                   	stos   BYTE PTR es:[rdi],al
    e3c6:	ff                   	(bad)  
    e3c7:	ff 68 0e             	jmp    FWORD PTR [rax+0xe]
    e3ca:	00 00                	add    BYTE PTR [rax],al
    e3cc:	57                   	push   rdi
    e3cd:	ab                   	stos   DWORD PTR es:[rdi],eax
    e3ce:	ff                   	(bad)  
    e3cf:	ff 88 0e 00 00 90    	dec    DWORD PTR [rax-0x6ffffff2]
    e3d5:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    e3d6:	ff                   	(bad)  
    e3d7:	ff a8 0e 00 00 59    	jmp    FWORD PTR [rax+0x5900000e]
    e3dd:	ae                   	scas   al,BYTE PTR es:[rdi]
    e3de:	ff                   	(bad)  
    e3df:	ff c8                	dec    eax
    e3e1:	0e                   	(bad)  
    e3e2:	00 00                	add    BYTE PTR [rax],al
    e3e4:	fa                   	cli    
    e3e5:	af                   	scas   eax,DWORD PTR es:[rdi]
    e3e6:	ff                   	(bad)  
    e3e7:	ff                   	(bad)  
    e3e8:	e8 0e 00 00 0d       	call   d00e3fb <_end+0xced13bb>
    e3ed:	b1 ff                	mov    cl,0xff
    e3ef:	ff 08                	dec    DWORD PTR [rax]
    e3f1:	0f 00 00             	sldt   WORD PTR [rax]
    e3f4:	73 b1                	jae    e3a7 <__GNU_EH_FRAME_HDR+0x27f>
    e3f6:	ff                   	(bad)  
    e3f7:	ff 28                	jmp    FWORD PTR [rax]
    e3f9:	0f 00 00             	sldt   WORD PTR [rax]
    e3fc:	e8 b1 ff ff 48       	call   4900e3b2 <_end+0x48ed1372>
    e401:	0f 00 00             	sldt   WORD PTR [rax]
    e404:	c3                   	ret    
    e405:	b2 ff                	mov    dl,0xff
    e407:	ff 68 0f             	jmp    FWORD PTR [rax+0xf]
    e40a:	00 00                	add    BYTE PTR [rax],al
    e40c:	35 b4 ff ff 88       	xor    eax,0x88ffffb4
    e411:	0f 00 00             	sldt   WORD PTR [rax]
    e414:	a1 b4 ff ff a8 0f 00 	movabs eax,ds:0x2100000fa8ffffb4
    e41b:	00 21 
    e41d:	b5 ff                	mov    ch,0xff
    e41f:	ff c8                	dec    eax
    e421:	0f 00 00             	sldt   WORD PTR [rax]
    e424:	37                   	(bad)  
    e425:	b5 ff                	mov    ch,0xff
    e427:	ff                   	(bad)  
    e428:	e8 0f 00 00 71       	call   7100e43c <_end+0x70ed13fc>
    e42d:	b6 ff                	mov    dh,0xff
    e42f:	ff 0c 10             	dec    DWORD PTR [rax+rdx*1]
    e432:	00 00                	add    BYTE PTR [rax],al
    e434:	d5                   	(bad)  
    e435:	b6 ff                	mov    dh,0xff
    e437:	ff 2c 10             	jmp    FWORD PTR [rax+rdx*1]
    e43a:	00 00                	add    BYTE PTR [rax],al
    e43c:	28 b7 ff ff 4c 10    	sub    BYTE PTR [rdi+0x104cffff],dh
    e442:	00 00                	add    BYTE PTR [rax],al
    e444:	d9 b7 ff ff 6c 10    	fnstenv [rdi+0x106cffff]
    e44a:	00 00                	add    BYTE PTR [rax],al
    e44c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    e44d:	b8 ff ff 8c 10       	mov    eax,0x108cffff
    e452:	00 00                	add    BYTE PTR [rax],al
    e454:	f9                   	stc    
    e455:	b8 ff ff ac 10       	mov    eax,0x10acffff
    e45a:	00 00                	add    BYTE PTR [rax],al
    e45c:	29 b9 ff ff cc 10    	sub    DWORD PTR [rcx+0x10ccffff],edi
    e462:	00 00                	add    BYTE PTR [rax],al
    e464:	90                   	nop
    e465:	b9 ff ff ec 10       	mov    ecx,0x10ecffff
    e46a:	00 00                	add    BYTE PTR [rax],al
    e46c:	c8 c8 ff ff          	enter  0xffc8,0xff
    e470:	10 11                	adc    BYTE PTR [rcx],dl
    e472:	00 00                	add    BYTE PTR [rax],al
    e474:	0e                   	(bad)  
    e475:	c9                   	leave  
    e476:	ff                   	(bad)  
    e477:	ff 30                	push   QWORD PTR [rax]
    e479:	11 00                	adc    DWORD PTR [rax],eax
    e47b:	00 49 cb             	add    BYTE PTR [rcx-0x35],cl
    e47e:	ff                   	(bad)  
    e47f:	ff 58 11             	call   FWORD PTR [rax+0x11]
    e482:	00 00                	add    BYTE PTR [rax],al
    e484:	ee                   	out    dx,al
    e485:	cc                   	int3   
    e486:	ff                   	(bad)  
    e487:	ff                   	(bad)  
    e488:	78 11                	js     e49b <__GNU_EH_FRAME_HDR+0x373>
    e48a:	00 00                	add    BYTE PTR [rax],al
    e48c:	00 ce                	add    dh,cl
    e48e:	ff                   	(bad)  
    e48f:	ff 98 11 00 00 bc    	call   FWORD PTR [rax-0x43ffffef]
    e495:	ce                   	(bad)  
    e496:	ff                   	(bad)  
    e497:	ff c0                	inc    eax
    e499:	11 00                	adc    DWORD PTR [rax],eax
    e49b:	00 57 d0             	add    BYTE PTR [rdi-0x30],dl
    e49e:	ff                   	(bad)  
    e49f:	ff                   	(bad)  
    e4a0:	e8 11 00 00 fc       	call   fffffffffc00e4b6 <_end+0xfffffffffbed1476>
    e4a5:	d0 ff                	sar    bh,1
    e4a7:	ff 08                	dec    DWORD PTR [rax]
    e4a9:	12 00                	adc    al,BYTE PTR [rax]
    e4ab:	00 3f                	add    BYTE PTR [rdi],bh
    e4ad:	d2 ff                	sar    bh,cl
    e4af:	ff 28                	jmp    FWORD PTR [rax]
    e4b1:	12 00                	adc    al,BYTE PTR [rax]
    e4b3:	00 32                	add    BYTE PTR [rdx],dh
    e4b5:	d3 ff                	sar    edi,cl
    e4b7:	ff 48 12             	dec    DWORD PTR [rax+0x12]
    e4ba:	00 00                	add    BYTE PTR [rax],al
    e4bc:	a2 d3 ff ff 68 12 00 	movabs ds:0x4700001268ffffd3,al
    e4c3:	00 47 
    e4c5:	d6                   	(bad)  
    e4c6:	ff                   	(bad)  
    e4c7:	ff 88 12 00 00 b1    	dec    DWORD PTR [rax-0x4effffee]
    e4cd:	d6                   	(bad)  
    e4ce:	ff                   	(bad)  
    e4cf:	ff a8 12 00 00 1f    	jmp    FWORD PTR [rax+0x1f000012]
    e4d5:	d7                   	xlat   BYTE PTR ds:[rbx]
    e4d6:	ff                   	(bad)  
    e4d7:	ff c8                	dec    eax
    e4d9:	12 00                	adc    al,BYTE PTR [rax]
    e4db:	00 ac d8 ff ff f0 12 	add    BYTE PTR [rax+rbx*8+0x12f0ffff],ch
    e4e2:	00 00                	add    BYTE PTR [rax],al
    e4e4:	93                   	xchg   ebx,eax
    e4e5:	dc ff                	fdiv   st(7),st
    e4e7:	ff 10                	call   QWORD PTR [rax]
    e4e9:	13 00                	adc    eax,DWORD PTR [rax]
	...

Disassembly of section .eh_frame:

000000000000e4f0 <__FRAME_END__-0xf68>:
    e4f0:	14 00                	adc    al,0x0
    e4f2:	00 00                	add    BYTE PTR [rax],al
    e4f4:	00 00                	add    BYTE PTR [rax],al
    e4f6:	00 00                	add    BYTE PTR [rax],al
    e4f8:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    e4fb:	00 01                	add    BYTE PTR [rcx],al
    e4fd:	78 10                	js     e50f <__GNU_EH_FRAME_HDR+0x3e7>
    e4ff:	01 1b                	add    DWORD PTR [rbx],ebx
    e501:	0c 07                	or     al,0x7
    e503:	08 90 01 00 00 14    	or     BYTE PTR [rax+0x14000001],dl
    e509:	00 00                	add    BYTE PTR [rax],al
    e50b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e50e:	00 00                	add    BYTE PTR [rax],al
    e510:	30 44 ff ff          	xor    BYTE PTR [rdi+rdi*8-0x1],al
    e514:	26 00 00             	es add BYTE PTR [rax],al
    e517:	00 00                	add    BYTE PTR [rax],al
    e519:	44 07                	rex.R (bad) 
    e51b:	10 00                	adc    BYTE PTR [rax],al
    e51d:	00 00                	add    BYTE PTR [rax],al
    e51f:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    e522:	00 00                	add    BYTE PTR [rax],al
    e524:	34 00                	xor    al,0x0
    e526:	00 00                	add    BYTE PTR [rax],al
    e528:	f8                   	clc    
    e529:	3a ff                	cmp    bh,bh
    e52b:	ff 90 04 00 00 00    	call   QWORD PTR [rax+0x4]
    e531:	0e                   	(bad)  
    e532:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
    e535:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
    e538:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
    e53b:	80 00 3f             	add    BYTE PTR [rax],0x3f
    e53e:	1a 3a                	sbb    bh,BYTE PTR [rdx]
    e540:	2a 33                	sub    dh,BYTE PTR [rbx]
    e542:	24 22                	and    al,0x22
    e544:	00 00                	add    BYTE PTR [rax],al
    e546:	00 00                	add    BYTE PTR [rax],al
    e548:	14 00                	adc    al,0x0
    e54a:	00 00                	add    BYTE PTR [rax],al
    e54c:	5c                   	pop    rsp
    e54d:	00 00                	add    BYTE PTR [rax],al
    e54f:	00 60 3f             	add    BYTE PTR [rax+0x3f],ah
    e552:	ff                   	(bad)  
    e553:	ff 10                	call   QWORD PTR [rax]
	...
    e55d:	00 00                	add    BYTE PTR [rax],al
    e55f:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    e562:	00 00                	add    BYTE PTR [rax],al
    e564:	74 00                	je     e566 <__GNU_EH_FRAME_HDR+0x43e>
    e566:	00 00                	add    BYTE PTR [rax],al
    e568:	58                   	pop    rax
    e569:	3f                   	(bad)  
    e56a:	ff                   	(bad)  
    e56b:	ff 80 04 00 00 00    	inc    DWORD PTR [rax+0x4]
    e571:	00 00                	add    BYTE PTR [rax],al
    e573:	00 00                	add    BYTE PTR [rax],al
    e575:	00 00                	add    BYTE PTR [rax],al
    e577:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e57a:	00 00                	add    BYTE PTR [rax],al
    e57c:	8c 00                	mov    WORD PTR [rax],es
    e57e:	00 00                	add    BYTE PTR [rax],al
    e580:	a9 44 ff ff 3a       	test   eax,0x3affff44
    e585:	00 00                	add    BYTE PTR [rax],al
    e587:	00 00                	add    BYTE PTR [rax],al
    e589:	45 0e                	rex.RB (bad) 
    e58b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e591:	71 0c                	jno    e59f <__GNU_EH_FRAME_HDR+0x477>
    e593:	07                   	(bad)  
    e594:	08 00                	or     BYTE PTR [rax],al
    e596:	00 00                	add    BYTE PTR [rax],al
    e598:	24 00                	and    al,0x0
    e59a:	00 00                	add    BYTE PTR [rax],al
    e59c:	ac                   	lods   al,BYTE PTR ds:[rsi]
    e59d:	00 00                	add    BYTE PTR [rax],al
    e59f:	00 c3                	add    bl,al
    e5a1:	44 ff                	rex.R (bad) 
    e5a3:	ff 56 01             	call   QWORD PTR [rsi+0x1]
    e5a6:	00 00                	add    BYTE PTR [rax],al
    e5a8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e5ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e5b1:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    e5b5:	48 01 0c 07          	add    QWORD PTR [rdi+rax*1],rcx
    e5b9:	08 00                	or     BYTE PTR [rax],al
    e5bb:	00 00                	add    BYTE PTR [rax],al
    e5bd:	00 00                	add    BYTE PTR [rax],al
    e5bf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e5c2:	00 00                	add    BYTE PTR [rax],al
    e5c4:	d4                   	(bad)  
    e5c5:	00 00                	add    BYTE PTR [rax],al
    e5c7:	00 f1                	add    cl,dh
    e5c9:	45 ff                	rex.RB (bad) 
    e5cb:	ff f4                	push   rsp
    e5cd:	02 00                	add    al,BYTE PTR [rax]
    e5cf:	00 00                	add    BYTE PTR [rax],al
    e5d1:	45 0e                	rex.RB (bad) 
    e5d3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e5d9:	03 eb                	add    ebp,ebx
    e5db:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    e5de:	08 00                	or     BYTE PTR [rax],al
    e5e0:	1c 00                	sbb    al,0x0
    e5e2:	00 00                	add    BYTE PTR [rax],al
    e5e4:	f4                   	hlt    
    e5e5:	00 00                	add    BYTE PTR [rax],al
    e5e7:	00 c5                	add    ch,al
    e5e9:	48 ff                	rex.W (bad) 
    e5eb:	ff 13                	call   QWORD PTR [rbx]
    e5ed:	01 00                	add    DWORD PTR [rax],eax
    e5ef:	00 00                	add    BYTE PTR [rax],al
    e5f1:	45 0e                	rex.RB (bad) 
    e5f3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e5f9:	03 0a                	add    ecx,DWORD PTR [rdx]
    e5fb:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    e5fe:	08 00                	or     BYTE PTR [rax],al
    e600:	1c 00                	sbb    al,0x0
    e602:	00 00                	add    BYTE PTR [rax],al
    e604:	14 01                	adc    al,0x1
    e606:	00 00                	add    BYTE PTR [rax],al
    e608:	b8 49 ff ff ae       	mov    eax,0xaeffff49
    e60d:	00 00                	add    BYTE PTR [rax],al
    e60f:	00 00                	add    BYTE PTR [rax],al
    e611:	45 0e                	rex.RB (bad) 
    e613:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e619:	02 a5 0c 07 08 00    	add    ah,BYTE PTR [rbp+0x8070c]
    e61f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e622:	00 00                	add    BYTE PTR [rax],al
    e624:	34 01                	xor    al,0x1
    e626:	00 00                	add    BYTE PTR [rax],al
    e628:	46                   	rex.RX
    e629:	4a ff                	rex.WX (bad) 
    e62b:	ff a6 00 00 00 00    	jmp    QWORD PTR [rsi+0x0]
    e631:	45 0e                	rex.RB (bad) 
    e633:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e639:	02 9d 0c 07 08 00    	add    bl,BYTE PTR [rbp+0x8070c]
    e63f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e642:	00 00                	add    BYTE PTR [rax],al
    e644:	54                   	push   rsp
    e645:	01 00                	add    DWORD PTR [rax],eax
    e647:	00 cc                	add    ah,cl
    e649:	4a ff                	rex.WX (bad) 
    e64b:	ff 95 00 00 00 00    	call   QWORD PTR [rbp+0x0]
    e651:	45 0e                	rex.RB (bad) 
    e653:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e659:	02 8c 0c 07 08 00 00 	add    cl,BYTE PTR [rsp+rcx*1+0x807]
    e660:	1c 00                	sbb    al,0x0
    e662:	00 00                	add    BYTE PTR [rax],al
    e664:	74 01                	je     e667 <__GNU_EH_FRAME_HDR+0x53f>
    e666:	00 00                	add    BYTE PTR [rax],al
    e668:	41                   	rex.B
    e669:	4b ff                	rex.WXB (bad) 
    e66b:	ff 94 00 00 00 00 45 	call   QWORD PTR [rax+rax*1+0x45000000]
    e672:	0e                   	(bad)  
    e673:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e679:	02 8b 0c 07 08 00    	add    cl,BYTE PTR [rbx+0x8070c]
    e67f:	00 28                	add    BYTE PTR [rax],ch
    e681:	00 00                	add    BYTE PTR [rax],al
    e683:	00 94 01 00 00 b5 4b 	add    BYTE PTR [rcx+rax*1+0x4bb50000],dl
    e68a:	ff                   	(bad)  
    e68b:	ff cc                	dec    esp
    e68d:	01 00                	add    DWORD PTR [rax],eax
    e68f:	00 00                	add    BYTE PTR [rax],al
    e691:	45 0e                	rex.RB (bad) 
    e693:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e699:	4d 8f 03             	rex.WRB pop QWORD PTR [r11]
    e69c:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
    e6a3:	07                   	(bad)  
    e6a4:	03 b6 01 0c 07 08    	add    esi,DWORD PTR [rsi+0x8070c01]
    e6aa:	00 00                	add    BYTE PTR [rax],al
    e6ac:	20 00                	and    BYTE PTR [rax],al
    e6ae:	00 00                	add    BYTE PTR [rax],al
    e6b0:	c0 01 00             	rol    BYTE PTR [rcx],0x0
    e6b3:	00 55 4d             	add    BYTE PTR [rbp+0x4d],dl
    e6b6:	ff                   	(bad)  
    e6b7:	ff d4                	call   rsp
    e6b9:	00 00                	add    BYTE PTR [rax],al
    e6bb:	00 00                	add    BYTE PTR [rax],al
    e6bd:	45 0e                	rex.RB (bad) 
    e6bf:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e6c5:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    e6c9:	c6                   	(bad)  
    e6ca:	0c 07                	or     al,0x7
    e6cc:	08 00                	or     BYTE PTR [rax],al
    e6ce:	00 00                	add    BYTE PTR [rax],al
    e6d0:	20 00                	and    BYTE PTR [rax],al
    e6d2:	00 00                	add    BYTE PTR [rax],al
    e6d4:	e4 01                	in     al,0x1
    e6d6:	00 00                	add    BYTE PTR [rax],al
    e6d8:	05 4e ff ff c7       	add    eax,0xc7ffff4e
    e6dd:	00 00                	add    BYTE PTR [rax],al
    e6df:	00 00                	add    BYTE PTR [rax],al
    e6e1:	45 0e                	rex.RB (bad) 
    e6e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e6e9:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    e6ed:	b9 0c 07 08 00       	mov    ecx,0x8070c
    e6f2:	00 00                	add    BYTE PTR [rax],al
    e6f4:	1c 00                	sbb    al,0x0
    e6f6:	00 00                	add    BYTE PTR [rax],al
    e6f8:	08 02                	or     BYTE PTR [rdx],al
    e6fa:	00 00                	add    BYTE PTR [rax],al
    e6fc:	a8 4e                	test   al,0x4e
    e6fe:	ff                   	(bad)  
    e6ff:	ff 53 00             	call   QWORD PTR [rbx+0x0]
    e702:	00 00                	add    BYTE PTR [rax],al
    e704:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e707:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e70d:	02 4a 0c             	add    cl,BYTE PTR [rdx+0xc]
    e710:	07                   	(bad)  
    e711:	08 00                	or     BYTE PTR [rax],al
    e713:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e716:	00 00                	add    BYTE PTR [rax],al
    e718:	28 02                	sub    BYTE PTR [rdx],al
    e71a:	00 00                	add    BYTE PTR [rax],al
    e71c:	db 4e ff             	fisttp DWORD PTR [rsi-0x1]
    e71f:	ff 33                	push   QWORD PTR [rbx]
    e721:	00 00                	add    BYTE PTR [rax],al
    e723:	00 00                	add    BYTE PTR [rax],al
    e725:	45 0e                	rex.RB (bad) 
    e727:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e72d:	6a 0c                	push   0xc
    e72f:	07                   	(bad)  
    e730:	08 00                	or     BYTE PTR [rax],al
    e732:	00 00                	add    BYTE PTR [rax],al
    e734:	1c 00                	sbb    al,0x0
    e736:	00 00                	add    BYTE PTR [rax],al
    e738:	48 02 00             	rex.W add al,BYTE PTR [rax]
    e73b:	00 ee                	add    dh,ch
    e73d:	4e ff                	rex.WRX (bad) 
    e73f:	ff 21                	jmp    QWORD PTR [rcx]
    e741:	00 00                	add    BYTE PTR [rax],al
    e743:	00 00                	add    BYTE PTR [rax],al
    e745:	45 0e                	rex.RB (bad) 
    e747:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e74d:	58                   	pop    rax
    e74e:	0c 07                	or     al,0x7
    e750:	08 00                	or     BYTE PTR [rax],al
    e752:	00 00                	add    BYTE PTR [rax],al
    e754:	20 00                	and    BYTE PTR [rax],al
    e756:	00 00                	add    BYTE PTR [rax],al
    e758:	68 02 00 00 ef       	push   0xffffffffef000002
    e75d:	4e ff                	rex.WRX (bad) 
    e75f:	ff 68 00             	jmp    FWORD PTR [rax+0x0]
    e762:	00 00                	add    BYTE PTR [rax],al
    e764:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e767:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e76d:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    e771:	5a                   	pop    rdx
    e772:	0c 07                	or     al,0x7
    e774:	08 00                	or     BYTE PTR [rax],al
    e776:	00 00                	add    BYTE PTR [rax],al
    e778:	1c 00                	sbb    al,0x0
    e77a:	00 00                	add    BYTE PTR [rax],al
    e77c:	8c 02                	mov    WORD PTR [rdx],es
    e77e:	00 00                	add    BYTE PTR [rax],al
    e780:	33 4f ff             	xor    ecx,DWORD PTR [rdi-0x1]
    e783:	ff 25 04 00 00 00    	jmp    QWORD PTR [rip+0x4]        # e78d <__GNU_EH_FRAME_HDR+0x665>
    e789:	45 0e                	rex.RB (bad) 
    e78b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e791:	03 1c 04             	add    ebx,DWORD PTR [rsp+rax*1]
    e794:	0c 07                	or     al,0x7
    e796:	08 00                	or     BYTE PTR [rax],al
    e798:	1c 00                	sbb    al,0x0
    e79a:	00 00                	add    BYTE PTR [rax],al
    e79c:	ac                   	lods   al,BYTE PTR ds:[rsi]
    e79d:	02 00                	add    al,BYTE PTR [rax]
    e79f:	00 38                	add    BYTE PTR [rax],bh
    e7a1:	53                   	push   rbx
    e7a2:	ff                   	(bad)  
    e7a3:	ff 5d 01             	call   FWORD PTR [rbp+0x1]
    e7a6:	00 00                	add    BYTE PTR [rax],al
    e7a8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e7ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e7b1:	03 54 01 0c          	add    edx,DWORD PTR [rcx+rax*1+0xc]
    e7b5:	07                   	(bad)  
    e7b6:	08 00                	or     BYTE PTR [rax],al
    e7b8:	1c 00                	sbb    al,0x0
    e7ba:	00 00                	add    BYTE PTR [rax],al
    e7bc:	cc                   	int3   
    e7bd:	02 00                	add    al,BYTE PTR [rax]
    e7bf:	00 75 54             	add    BYTE PTR [rbp+0x54],dh
    e7c2:	ff                   	(bad)  
    e7c3:	ff 44 08 00          	inc    DWORD PTR [rax+rcx*1+0x0]
    e7c7:	00 00                	add    BYTE PTR [rax],al
    e7c9:	45 0e                	rex.RB (bad) 
    e7cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e7d1:	03 3b                	add    edi,DWORD PTR [rbx]
    e7d3:	08 0c 07             	or     BYTE PTR [rdi+rax*1],cl
    e7d6:	08 00                	or     BYTE PTR [rax],al
    e7d8:	24 00                	and    al,0x0
    e7da:	00 00                	add    BYTE PTR [rax],al
    e7dc:	ec                   	in     al,dx
    e7dd:	02 00                	add    al,BYTE PTR [rax]
    e7df:	00 99 5c ff ff bc    	add    BYTE PTR [rcx-0x430000a4],bl
    e7e5:	08 00                	or     BYTE PTR [rax],al
    e7e7:	00 00                	add    BYTE PTR [rax],al
    e7e9:	45 0e                	rex.RB (bad) 
    e7eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e7f1:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    e7f5:	ab                   	stos   DWORD PTR es:[rdi],eax
    e7f6:	08 0c 07             	or     BYTE PTR [rdi+rax*1],cl
    e7f9:	08 00                	or     BYTE PTR [rax],al
    e7fb:	00 00                	add    BYTE PTR [rax],al
    e7fd:	00 00                	add    BYTE PTR [rax],al
    e7ff:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e802:	00 00                	add    BYTE PTR [rax],al
    e804:	14 03                	adc    al,0x3
    e806:	00 00                	add    BYTE PTR [rax],al
    e808:	2d 65 ff ff 55       	sub    eax,0x55ffff65
    e80d:	01 00                	add    DWORD PTR [rax],eax
    e80f:	00 00                	add    BYTE PTR [rax],al
    e811:	45 0e                	rex.RB (bad) 
    e813:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e819:	03 4c 01 0c          	add    ecx,DWORD PTR [rcx+rax*1+0xc]
    e81d:	07                   	(bad)  
    e81e:	08 00                	or     BYTE PTR [rax],al
    e820:	1c 00                	sbb    al,0x0
    e822:	00 00                	add    BYTE PTR [rax],al
    e824:	34 03                	xor    al,0x3
    e826:	00 00                	add    BYTE PTR [rax],al
    e828:	62                   	(bad)  
    e829:	66 ff                	data16 (bad) 
    e82b:	ff                   	(bad)  
    e82c:	ff 00                	inc    DWORD PTR [rax]
    e82e:	00 00                	add    BYTE PTR [rax],al
    e830:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e833:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e839:	02 f6                	add    dh,dh
    e83b:	0c 07                	or     al,0x7
    e83d:	08 00                	or     BYTE PTR [rax],al
    e83f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e842:	00 00                	add    BYTE PTR [rax],al
    e844:	54                   	push   rsp
    e845:	03 00                	add    eax,DWORD PTR [rax]
    e847:	00 41 67             	add    BYTE PTR [rcx+0x67],al
    e84a:	ff                   	(bad)  
    e84b:	ff                   	(bad)  
    e84c:	ec                   	in     al,dx
    e84d:	00 00                	add    BYTE PTR [rax],al
    e84f:	00 00                	add    BYTE PTR [rax],al
    e851:	45 0e                	rex.RB (bad) 
    e853:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e859:	02 e3                	add    ah,bl
    e85b:	0c 07                	or     al,0x7
    e85d:	08 00                	or     BYTE PTR [rax],al
    e85f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e862:	00 00                	add    BYTE PTR [rax],al
    e864:	74 03                	je     e869 <__GNU_EH_FRAME_HDR+0x741>
    e866:	00 00                	add    BYTE PTR [rax],al
    e868:	0d 68 ff ff b2       	or     eax,0xb2ffff68
    e86d:	03 00                	add    eax,DWORD PTR [rax]
    e86f:	00 00                	add    BYTE PTR [rax],al
    e871:	45 0e                	rex.RB (bad) 
    e873:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e879:	03 a9 03 0c 07 08    	add    ebp,DWORD PTR [rcx+0x8070c03]
    e87f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e882:	00 00                	add    BYTE PTR [rax],al
    e884:	94                   	xchg   esp,eax
    e885:	03 00                	add    eax,DWORD PTR [rax]
    e887:	00 9f 6b ff ff 83    	add    BYTE PTR [rdi-0x7c000095],bl
    e88d:	00 00                	add    BYTE PTR [rax],al
    e88f:	00 00                	add    BYTE PTR [rax],al
    e891:	45 0e                	rex.RB (bad) 
    e893:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e899:	02 7a 0c             	add    bh,BYTE PTR [rdx+0xc]
    e89c:	07                   	(bad)  
    e89d:	08 00                	or     BYTE PTR [rax],al
    e89f:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    e8a2:	00 00                	add    BYTE PTR [rax],al
    e8a4:	b4 03                	mov    ah,0x3
    e8a6:	00 00                	add    BYTE PTR [rax],al
    e8a8:	02 6c ff ff          	add    ch,BYTE PTR [rdi+rdi*8-0x1]
    e8ac:	2a 02                	sub    al,BYTE PTR [rdx]
    e8ae:	00 00                	add    BYTE PTR [rax],al
    e8b0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e8b3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e8b9:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    e8bd:	19 02                	sbb    DWORD PTR [rdx],eax
    e8bf:	0c 07                	or     al,0x7
    e8c1:	08 00                	or     BYTE PTR [rax],al
    e8c3:	00 00                	add    BYTE PTR [rax],al
    e8c5:	00 00                	add    BYTE PTR [rax],al
    e8c7:	00 20                	add    BYTE PTR [rax],ah
    e8c9:	00 00                	add    BYTE PTR [rax],al
    e8cb:	00 dc                	add    ah,bl
    e8cd:	03 00                	add    eax,DWORD PTR [rax]
    e8cf:	00 04 6e             	add    BYTE PTR [rsi+rbp*2],al
    e8d2:	ff                   	(bad)  
    e8d3:	ff                   	(bad)  
    e8d4:	3d 02 00 00 00       	cmp    eax,0x2
    e8d9:	45 0e                	rex.RB (bad) 
    e8db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e8e1:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    e8e5:	2f                   	(bad)  
    e8e6:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    e8e9:	08 00                	or     BYTE PTR [rax],al
    e8eb:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e8ee:	00 00                	add    BYTE PTR [rax],al
    e8f0:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    e8f3:	00 1d 70 ff ff 66    	add    BYTE PTR [rip+0x66ffff70],bl        # 6700e869 <_end+0x66ed1829>
    e8f9:	00 00                	add    BYTE PTR [rax],al
    e8fb:	00 00                	add    BYTE PTR [rax],al
    e8fd:	45 0e                	rex.RB (bad) 
    e8ff:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e905:	02 5d 0c             	add    bl,BYTE PTR [rbp+0xc]
    e908:	07                   	(bad)  
    e909:	08 00                	or     BYTE PTR [rax],al
    e90b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e90e:	00 00                	add    BYTE PTR [rax],al
    e910:	20 04 00             	and    BYTE PTR [rax+rax*1],al
    e913:	00 63 70             	add    BYTE PTR [rbx+0x70],ah
    e916:	ff                   	(bad)  
    e917:	ff 17                	call   QWORD PTR [rdi]
    e919:	00 00                	add    BYTE PTR [rax],al
    e91b:	00 00                	add    BYTE PTR [rax],al
    e91d:	45 0e                	rex.RB (bad) 
    e91f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e925:	4e 0c 07             	rex.WRX or al,0x7
    e928:	08 00                	or     BYTE PTR [rax],al
    e92a:	00 00                	add    BYTE PTR [rax],al
    e92c:	20 00                	and    BYTE PTR [rax],al
    e92e:	00 00                	add    BYTE PTR [rax],al
    e930:	40 04 00             	rex add al,0x0
    e933:	00 5a 70             	add    BYTE PTR [rdx+0x70],bl
    e936:	ff                   	(bad)  
    e937:	ff 51 00             	call   QWORD PTR [rcx+0x0]
    e93a:	00 00                	add    BYTE PTR [rax],al
    e93c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e93f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e945:	02 48 0c             	add    cl,BYTE PTR [rax+0xc]
    e948:	07                   	(bad)  
    e949:	08 00                	or     BYTE PTR [rax],al
    e94b:	00 00                	add    BYTE PTR [rax],al
    e94d:	00 00                	add    BYTE PTR [rax],al
    e94f:	00 20                	add    BYTE PTR [rax],ah
    e951:	00 00                	add    BYTE PTR [rax],al
    e953:	00 64 04 00          	add    BYTE PTR [rsp+rax*1+0x0],ah
    e957:	00 87 70 ff ff 3d    	add    BYTE PTR [rdi+0x3dffff70],al
    e95d:	06                   	(bad)  
    e95e:	00 00                	add    BYTE PTR [rax],al
    e960:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e963:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e969:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    e96d:	2f                   	(bad)  
    e96e:	06                   	(bad)  
    e96f:	0c 07                	or     al,0x7
    e971:	08 00                	or     BYTE PTR [rax],al
    e973:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e976:	00 00                	add    BYTE PTR [rax],al
    e978:	88 04 00             	mov    BYTE PTR [rax+rax*1],al
    e97b:	00 a0 76 ff ff 1a    	add    BYTE PTR [rax+0x1affff76],ah
    e981:	00 00                	add    BYTE PTR [rax],al
    e983:	00 00                	add    BYTE PTR [rax],al
    e985:	45 0e                	rex.RB (bad) 
    e987:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e98d:	51                   	push   rcx
    e98e:	0c 07                	or     al,0x7
    e990:	08 00                	or     BYTE PTR [rax],al
    e992:	00 00                	add    BYTE PTR [rax],al
    e994:	1c 00                	sbb    al,0x0
    e996:	00 00                	add    BYTE PTR [rax],al
    e998:	a8 04                	test   al,0x4
    e99a:	00 00                	add    BYTE PTR [rax],al
    e99c:	9a                   	(bad)  
    e99d:	76 ff                	jbe    e99e <__GNU_EH_FRAME_HDR+0x876>
    e99f:	ff 29                	jmp    FWORD PTR [rcx]
    e9a1:	00 00                	add    BYTE PTR [rax],al
    e9a3:	00 00                	add    BYTE PTR [rax],al
    e9a5:	45 0e                	rex.RB (bad) 
    e9a7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e9ad:	60                   	(bad)  
    e9ae:	0c 07                	or     al,0x7
    e9b0:	08 00                	or     BYTE PTR [rax],al
    e9b2:	00 00                	add    BYTE PTR [rax],al
    e9b4:	1c 00                	sbb    al,0x0
    e9b6:	00 00                	add    BYTE PTR [rax],al
    e9b8:	c8 04 00 00          	enter  0x4,0x0
    e9bc:	a3 76 ff ff 30 00 00 	movabs ds:0x30ffff76,eax
    e9c3:	00 00 
    e9c5:	45 0e                	rex.RB (bad) 
    e9c7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e9cd:	67 0c 07             	addr32 or al,0x7
    e9d0:	08 00                	or     BYTE PTR [rax],al
    e9d2:	00 00                	add    BYTE PTR [rax],al
    e9d4:	18 00                	sbb    BYTE PTR [rax],al
    e9d6:	00 00                	add    BYTE PTR [rax],al
    e9d8:	e8 04 00 00 b3       	call   ffffffffb300e9e1 <_end+0xffffffffb2ed19a1>
    e9dd:	76 ff                	jbe    e9de <__GNU_EH_FRAME_HDR+0x8b6>
    e9df:	ff 37                	push   QWORD PTR [rdi]
    e9e1:	00 00                	add    BYTE PTR [rax],al
    e9e3:	00 00                	add    BYTE PTR [rax],al
    e9e5:	45 0e                	rex.RB (bad) 
    e9e7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e9ed:	00 00                	add    BYTE PTR [rax],al
    e9ef:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e9f2:	00 00                	add    BYTE PTR [rax],al
    e9f4:	04 05                	add    al,0x5
    e9f6:	00 00                	add    BYTE PTR [rax],al
    e9f8:	ce                   	(bad)  
    e9f9:	76 ff                	jbe    e9fa <__GNU_EH_FRAME_HDR+0x8d2>
    e9fb:	ff 45 01             	inc    DWORD PTR [rbp+0x1]
    e9fe:	00 00                	add    BYTE PTR [rax],al
    ea00:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ea03:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea09:	03 3c 01             	add    edi,DWORD PTR [rcx+rax*1]
    ea0c:	0c 07                	or     al,0x7
    ea0e:	08 00                	or     BYTE PTR [rax],al
    ea10:	1c 00                	sbb    al,0x0
    ea12:	00 00                	add    BYTE PTR [rax],al
    ea14:	24 05                	and    al,0x5
    ea16:	00 00                	add    BYTE PTR [rax],al
    ea18:	f3 77 ff             	repz ja ea1a <__GNU_EH_FRAME_HDR+0x8f2>
    ea1b:	ff 60 01             	jmp    QWORD PTR [rax+0x1]
    ea1e:	00 00                	add    BYTE PTR [rax],al
    ea20:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ea23:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea29:	03 57 01             	add    edx,DWORD PTR [rdi+0x1]
    ea2c:	0c 07                	or     al,0x7
    ea2e:	08 00                	or     BYTE PTR [rax],al
    ea30:	1c 00                	sbb    al,0x0
    ea32:	00 00                	add    BYTE PTR [rax],al
    ea34:	44 05 00 00 33 79    	rex.R add eax,0x79330000
    ea3a:	ff                   	(bad)  
    ea3b:	ff 61 00             	jmp    QWORD PTR [rcx+0x0]
    ea3e:	00 00                	add    BYTE PTR [rax],al
    ea40:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ea43:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea49:	02 58 0c             	add    bl,BYTE PTR [rax+0xc]
    ea4c:	07                   	(bad)  
    ea4d:	08 00                	or     BYTE PTR [rax],al
    ea4f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ea52:	00 00                	add    BYTE PTR [rax],al
    ea54:	64 05 00 00 74 79    	fs add eax,0x79740000
    ea5a:	ff                   	(bad)  
    ea5b:	ff                   	(bad)  
    ea5c:	39 00                	cmp    DWORD PTR [rax],eax
    ea5e:	00 00                	add    BYTE PTR [rax],al
    ea60:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ea63:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea69:	70 0c                	jo     ea77 <__GNU_EH_FRAME_HDR+0x94f>
    ea6b:	07                   	(bad)  
    ea6c:	08 00                	or     BYTE PTR [rax],al
    ea6e:	00 00                	add    BYTE PTR [rax],al
    ea70:	1c 00                	sbb    al,0x0
    ea72:	00 00                	add    BYTE PTR [rax],al
    ea74:	84 05 00 00 8d 79    	test   BYTE PTR [rip+0x798d0000],al        # 798dea7a <_end+0x797a1a3a>
    ea7a:	ff                   	(bad)  
    ea7b:	ff                   	(bad)  
    ea7c:	be 00 00 00 00       	mov    esi,0x0
    ea81:	45 0e                	rex.RB (bad) 
    ea83:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea89:	02 b5 0c 07 08 00    	add    dh,BYTE PTR [rbp+0x8070c]
    ea8f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ea92:	00 00                	add    BYTE PTR [rax],al
    ea94:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    ea95:	05 00 00 2b 7a       	add    eax,0x7a2b0000
    ea9a:	ff                   	(bad)  
    ea9b:	ff                   	(bad)  
    ea9c:	be 02 00 00 00       	mov    esi,0x2
    eaa1:	45 0e                	rex.RB (bad) 
    eaa3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eaa9:	03 b5 02 0c 07 08    	add    esi,DWORD PTR [rbp+0x8070c02]
    eaaf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eab2:	00 00                	add    BYTE PTR [rax],al
    eab4:	c4                   	(bad)  
    eab5:	05 00 00 c9 7c       	add    eax,0x7cc90000
    eaba:	ff                   	(bad)  
    eabb:	ff                   	(bad)  
    eabc:	f8                   	clc    
    eabd:	01 00                	add    DWORD PTR [rax],eax
    eabf:	00 00                	add    BYTE PTR [rax],al
    eac1:	45 0e                	rex.RB (bad) 
    eac3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eac9:	03 ef                	add    ebp,edi
    eacb:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    eace:	08 00                	or     BYTE PTR [rax],al
    ead0:	1c 00                	sbb    al,0x0
    ead2:	00 00                	add    BYTE PTR [rax],al
    ead4:	e4 05                	in     al,0x5
    ead6:	00 00                	add    BYTE PTR [rax],al
    ead8:	a1 7e ff ff 5a 00 00 	movabs eax,ds:0x5affff7e
    eadf:	00 00 
    eae1:	45 0e                	rex.RB (bad) 
    eae3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eae9:	02 51 0c             	add    dl,BYTE PTR [rcx+0xc]
    eaec:	07                   	(bad)  
    eaed:	08 00                	or     BYTE PTR [rax],al
    eaef:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eaf2:	00 00                	add    BYTE PTR [rax],al
    eaf4:	04 06                	add    al,0x6
    eaf6:	00 00                	add    BYTE PTR [rax],al
    eaf8:	db 7e ff             	fstp   TBYTE PTR [rsi-0x1]
    eafb:	ff 30                	push   QWORD PTR [rax]
    eafd:	03 00                	add    eax,DWORD PTR [rax]
    eaff:	00 00                	add    BYTE PTR [rax],al
    eb01:	45 0e                	rex.RB (bad) 
    eb03:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb09:	03 27                	add    esp,DWORD PTR [rdi]
    eb0b:	03 0c 07             	add    ecx,DWORD PTR [rdi+rax*1]
    eb0e:	08 00                	or     BYTE PTR [rax],al
    eb10:	1c 00                	sbb    al,0x0
    eb12:	00 00                	add    BYTE PTR [rax],al
    eb14:	24 06                	and    al,0x6
    eb16:	00 00                	add    BYTE PTR [rax],al
    eb18:	eb 81                	jmp    ea9b <__GNU_EH_FRAME_HDR+0x973>
    eb1a:	ff                   	(bad)  
    eb1b:	ff 51 04             	call   QWORD PTR [rcx+0x4]
    eb1e:	00 00                	add    BYTE PTR [rax],al
    eb20:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eb23:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb29:	4a 8c 03             	rex.WX mov WORD PTR [rbx],es
    eb2c:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
    eb30:	18 00                	sbb    BYTE PTR [rax],al
    eb32:	00 00                	add    BYTE PTR [rax],al
    eb34:	44 06                	rex.R (bad) 
    eb36:	00 00                	add    BYTE PTR [rax],al
    eb38:	1c 86                	sbb    al,0x86
    eb3a:	ff                   	(bad)  
    eb3b:	ff 2a                	jmp    FWORD PTR [rdx]
    eb3d:	00 00                	add    BYTE PTR [rax],al
    eb3f:	00 00                	add    BYTE PTR [rax],al
    eb41:	45 0e                	rex.RB (bad) 
    eb43:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb49:	00 00                	add    BYTE PTR [rax],al
    eb4b:	00 20                	add    BYTE PTR [rax],ah
    eb4d:	00 00                	add    BYTE PTR [rax],al
    eb4f:	00 60 06             	add    BYTE PTR [rax+0x6],ah
    eb52:	00 00                	add    BYTE PTR [rax],al
    eb54:	2a 86 ff ff b2 01    	sub    al,BYTE PTR [rsi+0x1b2ffff]
    eb5a:	00 00                	add    BYTE PTR [rax],al
    eb5c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eb5f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb65:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    eb69:	a1 01 0c 07 08 00 00 	movabs eax,ds:0x1c000008070c01
    eb70:	1c 00 
    eb72:	00 00                	add    BYTE PTR [rax],al
    eb74:	84 06                	test   BYTE PTR [rsi],al
    eb76:	00 00                	add    BYTE PTR [rax],al
    eb78:	b8 87 ff ff 17       	mov    eax,0x17ffff87
    eb7d:	00 00                	add    BYTE PTR [rax],al
    eb7f:	00 00                	add    BYTE PTR [rax],al
    eb81:	45 0e                	rex.RB (bad) 
    eb83:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb89:	4e 0c 07             	rex.WRX or al,0x7
    eb8c:	08 00                	or     BYTE PTR [rax],al
    eb8e:	00 00                	add    BYTE PTR [rax],al
    eb90:	1c 00                	sbb    al,0x0
    eb92:	00 00                	add    BYTE PTR [rax],al
    eb94:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    eb95:	06                   	(bad)  
    eb96:	00 00                	add    BYTE PTR [rax],al
    eb98:	af                   	scas   eax,DWORD PTR es:[rdi]
    eb99:	87 ff                	xchg   edi,edi
    eb9b:	ff 4f 00             	dec    DWORD PTR [rdi+0x0]
    eb9e:	00 00                	add    BYTE PTR [rax],al
    eba0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eba3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eba9:	02 46 0c             	add    al,BYTE PTR [rsi+0xc]
    ebac:	07                   	(bad)  
    ebad:	08 00                	or     BYTE PTR [rax],al
    ebaf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ebb2:	00 00                	add    BYTE PTR [rax],al
    ebb4:	c4                   	(bad)  
    ebb5:	06                   	(bad)  
    ebb6:	00 00                	add    BYTE PTR [rax],al
    ebb8:	de 87 ff ff 4d 00    	fiadd  WORD PTR [rdi+0x4dffff]
    ebbe:	00 00                	add    BYTE PTR [rax],al
    ebc0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ebc3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ebc9:	02 44 0c 07          	add    al,BYTE PTR [rsp+rcx*1+0x7]
    ebcd:	08 00                	or     BYTE PTR [rax],al
    ebcf:	00 18                	add    BYTE PTR [rax],bl
    ebd1:	00 00                	add    BYTE PTR [rax],al
    ebd3:	00 e4                	add    ah,ah
    ebd5:	06                   	(bad)  
    ebd6:	00 00                	add    BYTE PTR [rax],al
    ebd8:	0b 88 ff ff 77 01    	or     ecx,DWORD PTR [rax+0x177ffff]
    ebde:	00 00                	add    BYTE PTR [rax],al
    ebe0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ebe3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ebe9:	00 00                	add    BYTE PTR [rax],al
    ebeb:	00 20                	add    BYTE PTR [rax],ah
    ebed:	00 00                	add    BYTE PTR [rax],al
    ebef:	00 00                	add    BYTE PTR [rax],al
    ebf1:	07                   	(bad)  
    ebf2:	00 00                	add    BYTE PTR [rax],al
    ebf4:	66 89 ff             	mov    di,di
    ebf7:	ff 9c 00 00 00 00 45 	call   FWORD PTR [rax+rax*1+0x45000000]
    ebfe:	0e                   	(bad)  
    ebff:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec05:	02 93 0c 07 08 00    	add    dl,BYTE PTR [rbx+0x8070c]
    ec0b:	00 00                	add    BYTE PTR [rax],al
    ec0d:	00 00                	add    BYTE PTR [rax],al
    ec0f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ec12:	00 00                	add    BYTE PTR [rax],al
    ec14:	24 07                	and    al,0x7
    ec16:	00 00                	add    BYTE PTR [rax],al
    ec18:	de 89 ff ff ee 01    	fimul  WORD PTR [rcx+0x1eeffff]
    ec1e:	00 00                	add    BYTE PTR [rax],al
    ec20:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ec23:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec29:	03 e5                	add    esp,ebp
    ec2b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ec2e:	08 00                	or     BYTE PTR [rax],al
    ec30:	1c 00                	sbb    al,0x0
    ec32:	00 00                	add    BYTE PTR [rax],al
    ec34:	44 07                	rex.R (bad) 
    ec36:	00 00                	add    BYTE PTR [rax],al
    ec38:	ac                   	lods   al,BYTE PTR ds:[rsi]
    ec39:	8b ff                	mov    edi,edi
    ec3b:	ff                   	(bad)  
    ec3c:	e8 01 00 00 00       	call   ec42 <__GNU_EH_FRAME_HDR+0xb1a>
    ec41:	45 0e                	rex.RB (bad) 
    ec43:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec49:	03 df                	add    ebx,edi
    ec4b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ec4e:	08 00                	or     BYTE PTR [rax],al
    ec50:	1c 00                	sbb    al,0x0
    ec52:	00 00                	add    BYTE PTR [rax],al
    ec54:	64 07                	fs (bad) 
    ec56:	00 00                	add    BYTE PTR [rax],al
    ec58:	74 8d                	je     ebe7 <__GNU_EH_FRAME_HDR+0xabf>
    ec5a:	ff                   	(bad)  
    ec5b:	ff 6c 00 00          	jmp    FWORD PTR [rax+rax*1+0x0]
    ec5f:	00 00                	add    BYTE PTR [rax],al
    ec61:	45 0e                	rex.RB (bad) 
    ec63:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec69:	02 63 0c             	add    ah,BYTE PTR [rbx+0xc]
    ec6c:	07                   	(bad)  
    ec6d:	08 00                	or     BYTE PTR [rax],al
    ec6f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ec72:	00 00                	add    BYTE PTR [rax],al
    ec74:	84 07                	test   BYTE PTR [rdi],al
    ec76:	00 00                	add    BYTE PTR [rax],al
    ec78:	c0 8d ff ff 72 00 00 	ror    BYTE PTR [rbp+0x72ffff],0x0
    ec7f:	00 00                	add    BYTE PTR [rax],al
    ec81:	45 0e                	rex.RB (bad) 
    ec83:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec89:	02 69 0c             	add    ch,BYTE PTR [rcx+0xc]
    ec8c:	07                   	(bad)  
    ec8d:	08 00                	or     BYTE PTR [rax],al
    ec8f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ec92:	00 00                	add    BYTE PTR [rax],al
    ec94:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    ec95:	07                   	(bad)  
    ec96:	00 00                	add    BYTE PTR [rax],al
    ec98:	12 8e ff ff 11 01    	adc    cl,BYTE PTR [rsi+0x111ffff]
    ec9e:	00 00                	add    BYTE PTR [rax],al
    eca0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eca3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eca9:	03 08                	add    ecx,DWORD PTR [rax]
    ecab:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ecae:	08 00                	or     BYTE PTR [rax],al
    ecb0:	1c 00                	sbb    al,0x0
    ecb2:	00 00                	add    BYTE PTR [rax],al
    ecb4:	c4                   	(bad)  
    ecb5:	07                   	(bad)  
    ecb6:	00 00                	add    BYTE PTR [rax],al
    ecb8:	03 8f ff ff 5c 00    	add    ecx,DWORD PTR [rdi+0x5cffff]
    ecbe:	00 00                	add    BYTE PTR [rax],al
    ecc0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ecc3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ecc9:	02 53 0c             	add    dl,BYTE PTR [rbx+0xc]
    eccc:	07                   	(bad)  
    eccd:	08 00                	or     BYTE PTR [rax],al
    eccf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ecd2:	00 00                	add    BYTE PTR [rax],al
    ecd4:	e4 07                	in     al,0x7
    ecd6:	00 00                	add    BYTE PTR [rax],al
    ecd8:	3f                   	(bad)  
    ecd9:	8f                   	(bad)  
    ecda:	ff                   	(bad)  
    ecdb:	ff                   	(bad)  
    ecdc:	3e 00 00             	ds add BYTE PTR [rax],al
    ecdf:	00 00                	add    BYTE PTR [rax],al
    ece1:	45 0e                	rex.RB (bad) 
    ece3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ece9:	75 0c                	jne    ecf7 <__GNU_EH_FRAME_HDR+0xbcf>
    eceb:	07                   	(bad)  
    ecec:	08 00                	or     BYTE PTR [rax],al
    ecee:	00 00                	add    BYTE PTR [rax],al
    ecf0:	1c 00                	sbb    al,0x0
    ecf2:	00 00                	add    BYTE PTR [rax],al
    ecf4:	04 08                	add    al,0x8
    ecf6:	00 00                	add    BYTE PTR [rax],al
    ecf8:	5d                   	pop    rbp
    ecf9:	8f                   	(bad)  
    ecfa:	ff                   	(bad)  
    ecfb:	ff 86 00 00 00 00    	inc    DWORD PTR [rsi+0x0]
    ed01:	45 0e                	rex.RB (bad) 
    ed03:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed09:	02 7d 0c             	add    bh,BYTE PTR [rbp+0xc]
    ed0c:	07                   	(bad)  
    ed0d:	08 00                	or     BYTE PTR [rax],al
    ed0f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ed12:	00 00                	add    BYTE PTR [rax],al
    ed14:	24 08                	and    al,0x8
    ed16:	00 00                	add    BYTE PTR [rax],al
    ed18:	c3                   	ret    
    ed19:	8f                   	(bad)  
    ed1a:	ff                   	(bad)  
    ed1b:	ff                   	(bad)  
    ed1c:	df 00                	fild   WORD PTR [rax]
    ed1e:	00 00                	add    BYTE PTR [rax],al
    ed20:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ed23:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed29:	02 d6                	add    dl,dh
    ed2b:	0c 07                	or     al,0x7
    ed2d:	08 00                	or     BYTE PTR [rax],al
    ed2f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ed32:	00 00                	add    BYTE PTR [rax],al
    ed34:	44 08 00             	or     BYTE PTR [rax],r8b
    ed37:	00 82 90 ff ff 74    	add    BYTE PTR [rdx+0x74ffff90],al
    ed3d:	00 00                	add    BYTE PTR [rax],al
    ed3f:	00 00                	add    BYTE PTR [rax],al
    ed41:	45 0e                	rex.RB (bad) 
    ed43:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed49:	02 6b 0c             	add    ch,BYTE PTR [rbx+0xc]
    ed4c:	07                   	(bad)  
    ed4d:	08 00                	or     BYTE PTR [rax],al
    ed4f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ed52:	00 00                	add    BYTE PTR [rax],al
    ed54:	64 08 00             	or     BYTE PTR fs:[rax],al
    ed57:	00 d6                	add    dh,dl
    ed59:	90                   	nop
    ed5a:	ff                   	(bad)  
    ed5b:	ff 9c 00 00 00 00 45 	call   FWORD PTR [rax+rax*1+0x45000000]
    ed62:	0e                   	(bad)  
    ed63:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed69:	02 93 0c 07 08 00    	add    dl,BYTE PTR [rbx+0x8070c]
    ed6f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ed72:	00 00                	add    BYTE PTR [rax],al
    ed74:	84 08                	test   BYTE PTR [rax],cl
    ed76:	00 00                	add    BYTE PTR [rax],al
    ed78:	52                   	push   rdx
    ed79:	91                   	xchg   ecx,eax
    ed7a:	ff                   	(bad)  
    ed7b:	ff 29                	jmp    FWORD PTR [rcx]
    ed7d:	00 00                	add    BYTE PTR [rax],al
    ed7f:	00 00                	add    BYTE PTR [rax],al
    ed81:	45 0e                	rex.RB (bad) 
    ed83:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed89:	60                   	(bad)  
    ed8a:	0c 07                	or     al,0x7
    ed8c:	08 00                	or     BYTE PTR [rax],al
    ed8e:	00 00                	add    BYTE PTR [rax],al
    ed90:	1c 00                	sbb    al,0x0
    ed92:	00 00                	add    BYTE PTR [rax],al
    ed94:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    ed95:	08 00                	or     BYTE PTR [rax],al
    ed97:	00 5b 91             	add    BYTE PTR [rbx-0x6f],bl
    ed9a:	ff                   	(bad)  
    ed9b:	ff 29                	jmp    FWORD PTR [rcx]
    ed9d:	00 00                	add    BYTE PTR [rax],al
    ed9f:	00 00                	add    BYTE PTR [rax],al
    eda1:	45 0e                	rex.RB (bad) 
    eda3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eda9:	60                   	(bad)  
    edaa:	0c 07                	or     al,0x7
    edac:	08 00                	or     BYTE PTR [rax],al
    edae:	00 00                	add    BYTE PTR [rax],al
    edb0:	24 00                	and    al,0x0
    edb2:	00 00                	add    BYTE PTR [rax],al
    edb4:	c4                   	(bad)  
    edb5:	08 00                	or     BYTE PTR [rax],al
    edb7:	00 64 91 ff          	add    BYTE PTR [rcx+rdx*4-0x1],ah
    edbb:	ff 53 01             	call   QWORD PTR [rbx+0x1]
    edbe:	00 00                	add    BYTE PTR [rax],al
    edc0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    edc3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    edc9:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    edcd:	45 01 0c 07          	add    DWORD PTR [r15+rax*1],r9d
    edd1:	08 00                	or     BYTE PTR [rax],al
    edd3:	00 00                	add    BYTE PTR [rax],al
    edd5:	00 00                	add    BYTE PTR [rax],al
    edd7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    edda:	00 00                	add    BYTE PTR [rax],al
    eddc:	ec                   	in     al,dx
    eddd:	08 00                	or     BYTE PTR [rax],al
    eddf:	00 8f 92 ff ff 13    	add    BYTE PTR [rdi+0x13ffff92],cl
    ede5:	01 00                	add    DWORD PTR [rax],eax
    ede7:	00 00                	add    BYTE PTR [rax],al
    ede9:	45 0e                	rex.RB (bad) 
    edeb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    edf1:	03 0a                	add    ecx,DWORD PTR [rdx]
    edf3:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    edf6:	08 00                	or     BYTE PTR [rax],al
    edf8:	1c 00                	sbb    al,0x0
    edfa:	00 00                	add    BYTE PTR [rax],al
    edfc:	0c 09                	or     al,0x9
    edfe:	00 00                	add    BYTE PTR [rax],al
    ee00:	82                   	(bad)  
    ee01:	93                   	xchg   ebx,eax
    ee02:	ff                   	(bad)  
    ee03:	ff                   	(bad)  
    ee04:	f9                   	stc    
    ee05:	00 00                	add    BYTE PTR [rax],al
    ee07:	00 00                	add    BYTE PTR [rax],al
    ee09:	45 0e                	rex.RB (bad) 
    ee0b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee11:	02 f0                	add    dh,al
    ee13:	0c 07                	or     al,0x7
    ee15:	08 00                	or     BYTE PTR [rax],al
    ee17:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ee1a:	00 00                	add    BYTE PTR [rax],al
    ee1c:	2c 09                	sub    al,0x9
    ee1e:	00 00                	add    BYTE PTR [rax],al
    ee20:	5b                   	pop    rbx
    ee21:	94                   	xchg   esp,eax
    ee22:	ff                   	(bad)  
    ee23:	ff a2 00 00 00 00    	jmp    QWORD PTR [rdx+0x0]
    ee29:	45 0e                	rex.RB (bad) 
    ee2b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee31:	02 99 0c 07 08 00    	add    bl,BYTE PTR [rcx+0x8070c]
    ee37:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ee3a:	00 00                	add    BYTE PTR [rax],al
    ee3c:	4c 09 00             	or     QWORD PTR [rax],r8
    ee3f:	00 dd                	add    ch,bl
    ee41:	94                   	xchg   esp,eax
    ee42:	ff                   	(bad)  
    ee43:	ff 1e                	call   FWORD PTR [rsi]
    ee45:	00 00                	add    BYTE PTR [rax],al
    ee47:	00 00                	add    BYTE PTR [rax],al
    ee49:	45 0e                	rex.RB (bad) 
    ee4b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee51:	55                   	push   rbp
    ee52:	0c 07                	or     al,0x7
    ee54:	08 00                	or     BYTE PTR [rax],al
    ee56:	00 00                	add    BYTE PTR [rax],al
    ee58:	1c 00                	sbb    al,0x0
    ee5a:	00 00                	add    BYTE PTR [rax],al
    ee5c:	6c                   	ins    BYTE PTR es:[rdi],dx
    ee5d:	09 00                	or     DWORD PTR [rax],eax
    ee5f:	00 db                	add    bl,bl
    ee61:	94                   	xchg   esp,eax
    ee62:	ff                   	(bad)  
    ee63:	ff 63 01             	jmp    QWORD PTR [rbx+0x1]
    ee66:	00 00                	add    BYTE PTR [rax],al
    ee68:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ee6b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee71:	03 5a 01             	add    ebx,DWORD PTR [rdx+0x1]
    ee74:	0c 07                	or     al,0x7
    ee76:	08 00                	or     BYTE PTR [rax],al
    ee78:	2c 00                	sub    al,0x0
    ee7a:	00 00                	add    BYTE PTR [rax],al
    ee7c:	8c 09                	mov    WORD PTR [rcx],cs
    ee7e:	00 00                	add    BYTE PTR [rax],al
    ee80:	1e                   	(bad)  
    ee81:	96                   	xchg   esi,eax
    ee82:	ff                   	(bad)  
    ee83:	ff 11                	call   QWORD PTR [rcx]
    ee85:	02 00                	add    al,BYTE PTR [rax]
    ee87:	00 00                	add    BYTE PTR [rax],al
    ee89:	45 0e                	rex.RB (bad) 
    ee8b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee91:	50                   	push   rax
    ee92:	8f 03                	pop    QWORD PTR [rbx]
    ee94:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
    ee9b:	07                   	(bad)  
    ee9c:	03 f8                	add    edi,eax
    ee9e:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    eea1:	08 00                	or     BYTE PTR [rax],al
    eea3:	00 00                	add    BYTE PTR [rax],al
    eea5:	00 00                	add    BYTE PTR [rax],al
    eea7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eeaa:	00 00                	add    BYTE PTR [rax],al
    eeac:	bc 09 00 00 ff       	mov    esp,0xff000009
    eeb1:	97                   	xchg   edi,eax
    eeb2:	ff                   	(bad)  
    eeb3:	ff b2 00 00 00 00    	push   QWORD PTR [rdx+0x0]
    eeb9:	45 0e                	rex.RB (bad) 
    eebb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eec1:	02 a9 0c 07 08 00    	add    ch,BYTE PTR [rcx+0x8070c]
    eec7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eeca:	00 00                	add    BYTE PTR [rax],al
    eecc:	dc 09                	fmul   QWORD PTR [rcx]
    eece:	00 00                	add    BYTE PTR [rax],al
    eed0:	91                   	xchg   ecx,eax
    eed1:	98                   	cwde   
    eed2:	ff                   	(bad)  
    eed3:	ff a5 00 00 00 00    	jmp    QWORD PTR [rbp+0x0]
    eed9:	45 0e                	rex.RB (bad) 
    eedb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eee1:	02 9c 0c 07 08 00 00 	add    bl,BYTE PTR [rsp+rcx*1+0x807]
    eee8:	24 00                	and    al,0x0
    eeea:	00 00                	add    BYTE PTR [rax],al
    eeec:	fc                   	cld    
    eeed:	09 00                	or     DWORD PTR [rax],eax
    eeef:	00 16                	add    BYTE PTR [rsi],dl
    eef1:	99                   	cdq    
    eef2:	ff                   	(bad)  
    eef3:	ff 94 00 00 00 00 45 	call   QWORD PTR [rax+rax*1+0x45000000]
    eefa:	0e                   	(bad)  
    eefb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef01:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    ef05:	86 0c 07             	xchg   BYTE PTR [rdi+rax*1],cl
    ef08:	08 00                	or     BYTE PTR [rax],al
    ef0a:	00 00                	add    BYTE PTR [rax],al
    ef0c:	00 00                	add    BYTE PTR [rax],al
    ef0e:	00 00                	add    BYTE PTR [rax],al
    ef10:	1c 00                	sbb    al,0x0
    ef12:	00 00                	add    BYTE PTR [rax],al
    ef14:	24 0a                	and    al,0xa
    ef16:	00 00                	add    BYTE PTR [rax],al
    ef18:	82                   	(bad)  
    ef19:	99                   	cdq    
    ef1a:	ff                   	(bad)  
    ef1b:	ff d5                	call   rbp
    ef1d:	00 00                	add    BYTE PTR [rax],al
    ef1f:	00 00                	add    BYTE PTR [rax],al
    ef21:	45 0e                	rex.RB (bad) 
    ef23:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef29:	02 cc                	add    cl,ah
    ef2b:	0c 07                	or     al,0x7
    ef2d:	08 00                	or     BYTE PTR [rax],al
    ef2f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef32:	00 00                	add    BYTE PTR [rax],al
    ef34:	44 0a 00             	or     r8b,BYTE PTR [rax]
    ef37:	00 37                	add    BYTE PTR [rdi],dh
    ef39:	9a                   	(bad)  
    ef3a:	ff                   	(bad)  
    ef3b:	ff                   	(bad)  
    ef3c:	df 00                	fild   WORD PTR [rax]
    ef3e:	00 00                	add    BYTE PTR [rax],al
    ef40:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ef43:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef49:	02 d6                	add    dl,dh
    ef4b:	0c 07                	or     al,0x7
    ef4d:	08 00                	or     BYTE PTR [rax],al
    ef4f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef52:	00 00                	add    BYTE PTR [rax],al
    ef54:	64 0a 00             	or     al,BYTE PTR fs:[rax]
    ef57:	00 f6                	add    dh,dh
    ef59:	9a                   	(bad)  
    ef5a:	ff                   	(bad)  
    ef5b:	ff                   	(bad)  
    ef5c:	7d 00                	jge    ef5e <__GNU_EH_FRAME_HDR+0xe36>
    ef5e:	00 00                	add    BYTE PTR [rax],al
    ef60:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ef63:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef69:	02 74 0c 07          	add    dh,BYTE PTR [rsp+rcx*1+0x7]
    ef6d:	08 00                	or     BYTE PTR [rax],al
    ef6f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef72:	00 00                	add    BYTE PTR [rax],al
    ef74:	84 0a                	test   BYTE PTR [rdx],cl
    ef76:	00 00                	add    BYTE PTR [rax],al
    ef78:	53                   	push   rbx
    ef79:	9b                   	fwait
    ef7a:	ff                   	(bad)  
    ef7b:	ff 36                	push   QWORD PTR [rsi]
    ef7d:	01 00                	add    DWORD PTR [rax],eax
    ef7f:	00 00                	add    BYTE PTR [rax],al
    ef81:	45 0e                	rex.RB (bad) 
    ef83:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef89:	03 2d 01 0c 07 08    	add    ebp,DWORD PTR [rip+0x8070c01]        # 807fb90 <_end+0x7f42b50>
    ef8f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef92:	00 00                	add    BYTE PTR [rax],al
    ef94:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    ef95:	0a 00                	or     al,BYTE PTR [rax]
    ef97:	00 69 9c             	add    BYTE PTR [rcx-0x64],ch
    ef9a:	ff                   	(bad)  
    ef9b:	ff                   	(bad)  
    ef9c:	7e 00                	jle    ef9e <__GNU_EH_FRAME_HDR+0xe76>
    ef9e:	00 00                	add    BYTE PTR [rax],al
    efa0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    efa3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    efa9:	02 75 0c             	add    dh,BYTE PTR [rbp+0xc]
    efac:	07                   	(bad)  
    efad:	08 00                	or     BYTE PTR [rax],al
    efaf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    efb2:	00 00                	add    BYTE PTR [rax],al
    efb4:	c4                   	(bad)  
    efb5:	0a 00                	or     al,BYTE PTR [rax]
    efb7:	00 c7                	add    bh,al
    efb9:	9c                   	pushf  
    efba:	ff                   	(bad)  
    efbb:	ff                   	(bad)  
    efbc:	39 02                	cmp    DWORD PTR [rdx],eax
    efbe:	00 00                	add    BYTE PTR [rax],al
    efc0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    efc3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    efc9:	03 30                	add    esi,DWORD PTR [rax]
    efcb:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    efce:	08 00                	or     BYTE PTR [rax],al
    efd0:	1c 00                	sbb    al,0x0
    efd2:	00 00                	add    BYTE PTR [rax],al
    efd4:	e4 0a                	in     al,0xa
    efd6:	00 00                	add    BYTE PTR [rax],al
    efd8:	e0 9e                	loopne ef78 <__GNU_EH_FRAME_HDR+0xe50>
    efda:	ff                   	(bad)  
    efdb:	ff c9                	dec    ecx
    efdd:	00 00                	add    BYTE PTR [rax],al
    efdf:	00 00                	add    BYTE PTR [rax],al
    efe1:	45 0e                	rex.RB (bad) 
    efe3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    efe9:	02 c0                	add    al,al
    efeb:	0c 07                	or     al,0x7
    efed:	08 00                	or     BYTE PTR [rax],al
    efef:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eff2:	00 00                	add    BYTE PTR [rax],al
    eff4:	04 0b                	add    al,0xb
    eff6:	00 00                	add    BYTE PTR [rax],al
    eff8:	89 9f ff ff a1 01    	mov    DWORD PTR [rdi+0x1a1ffff],ebx
    effe:	00 00                	add    BYTE PTR [rax],al
    f000:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f003:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f009:	03 98 01 0c 07 08    	add    ebx,DWORD PTR [rax+0x8070c01]
    f00f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f012:	00 00                	add    BYTE PTR [rax],al
    f014:	24 0b                	and    al,0xb
    f016:	00 00                	add    BYTE PTR [rax],al
    f018:	0a a1 ff ff 13 01    	or     ah,BYTE PTR [rcx+0x113ffff]
    f01e:	00 00                	add    BYTE PTR [rax],al
    f020:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f023:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f029:	03 0a                	add    ecx,DWORD PTR [rdx]
    f02b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f02e:	08 00                	or     BYTE PTR [rax],al
    f030:	1c 00                	sbb    al,0x0
    f032:	00 00                	add    BYTE PTR [rax],al
    f034:	44 0b 00             	or     r8d,DWORD PTR [rax]
    f037:	00 fd                	add    ch,bh
    f039:	a1 ff ff 66 00 00 00 	movabs eax,ds:0x450000000066ffff
    f040:	00 45 
    f042:	0e                   	(bad)  
    f043:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f049:	02 5d 0c             	add    bl,BYTE PTR [rbp+0xc]
    f04c:	07                   	(bad)  
    f04d:	08 00                	or     BYTE PTR [rax],al
    f04f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f052:	00 00                	add    BYTE PTR [rax],al
    f054:	64 0b 00             	or     eax,DWORD PTR fs:[rax]
    f057:	00 43 a2             	add    BYTE PTR [rbx-0x5e],al
    f05a:	ff                   	(bad)  
    f05b:	ff 75 00             	push   QWORD PTR [rbp+0x0]
    f05e:	00 00                	add    BYTE PTR [rax],al
    f060:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f063:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f069:	02 6c 0c 07          	add    ch,BYTE PTR [rsp+rcx*1+0x7]
    f06d:	08 00                	or     BYTE PTR [rax],al
    f06f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f072:	00 00                	add    BYTE PTR [rax],al
    f074:	84 0b                	test   BYTE PTR [rbx],cl
    f076:	00 00                	add    BYTE PTR [rax],al
    f078:	98                   	cwde   
    f079:	a2 ff ff db 00 00 00 	movabs ds:0x4500000000dbffff,al
    f080:	00 45 
    f082:	0e                   	(bad)  
    f083:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f089:	02 d2                	add    dl,dl
    f08b:	0c 07                	or     al,0x7
    f08d:	08 00                	or     BYTE PTR [rax],al
    f08f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f092:	00 00                	add    BYTE PTR [rax],al
    f094:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    f095:	0b 00                	or     eax,DWORD PTR [rax]
    f097:	00 53 a3             	add    BYTE PTR [rbx-0x5d],dl
    f09a:	ff                   	(bad)  
    f09b:	ff 72 01             	push   QWORD PTR [rdx+0x1]
    f09e:	00 00                	add    BYTE PTR [rax],al
    f0a0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f0a3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f0a9:	03 69 01             	add    ebp,DWORD PTR [rcx+0x1]
    f0ac:	0c 07                	or     al,0x7
    f0ae:	08 00                	or     BYTE PTR [rax],al
    f0b0:	1c 00                	sbb    al,0x0
    f0b2:	00 00                	add    BYTE PTR [rax],al
    f0b4:	c4                   	(bad)  
    f0b5:	0b 00                	or     eax,DWORD PTR [rax]
    f0b7:	00 a5 a4 ff ff 6c    	add    BYTE PTR [rbp+0x6cffffa4],ah
    f0bd:	00 00                	add    BYTE PTR [rax],al
    f0bf:	00 00                	add    BYTE PTR [rax],al
    f0c1:	45 0e                	rex.RB (bad) 
    f0c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f0c9:	02 63 0c             	add    ah,BYTE PTR [rbx+0xc]
    f0cc:	07                   	(bad)  
    f0cd:	08 00                	or     BYTE PTR [rax],al
    f0cf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f0d2:	00 00                	add    BYTE PTR [rax],al
    f0d4:	e4 0b                	in     al,0xb
    f0d6:	00 00                	add    BYTE PTR [rax],al
    f0d8:	f1                   	icebp  
    f0d9:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    f0da:	ff                   	(bad)  
    f0db:	ff 80 00 00 00 00    	inc    DWORD PTR [rax+0x0]
    f0e1:	45 0e                	rex.RB (bad) 
    f0e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f0e9:	02 77 0c             	add    dh,BYTE PTR [rdi+0xc]
    f0ec:	07                   	(bad)  
    f0ed:	08 00                	or     BYTE PTR [rax],al
    f0ef:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f0f2:	00 00                	add    BYTE PTR [rax],al
    f0f4:	04 0c                	add    al,0xc
    f0f6:	00 00                	add    BYTE PTR [rax],al
    f0f8:	51                   	push   rcx
    f0f9:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    f0fa:	ff                   	(bad)  
    f0fb:	ff 16                	call   QWORD PTR [rsi]
    f0fd:	00 00                	add    BYTE PTR [rax],al
    f0ff:	00 00                	add    BYTE PTR [rax],al
    f101:	45 0e                	rex.RB (bad) 
    f103:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f109:	4d 0c 07             	rex.WRB or al,0x7
    f10c:	08 00                	or     BYTE PTR [rax],al
    f10e:	00 00                	add    BYTE PTR [rax],al
    f110:	20 00                	and    BYTE PTR [rax],al
    f112:	00 00                	add    BYTE PTR [rax],al
    f114:	24 0c                	and    al,0xc
    f116:	00 00                	add    BYTE PTR [rax],al
    f118:	47 a5                	rex.RXB movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    f11a:	ff                   	(bad)  
    f11b:	ff                   	(bad)  
    f11c:	3a 01                	cmp    al,BYTE PTR [rcx]
    f11e:	00 00                	add    BYTE PTR [rax],al
    f120:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f123:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f129:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    f12d:	2c 01                	sub    al,0x1
    f12f:	0c 07                	or     al,0x7
    f131:	08 00                	or     BYTE PTR [rax],al
    f133:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f136:	00 00                	add    BYTE PTR [rax],al
    f138:	48 0c 00             	rex.W or al,0x0
    f13b:	00 5d a6             	add    BYTE PTR [rbp-0x5a],bl
    f13e:	ff                   	(bad)  
    f13f:	ff 64 00 00          	jmp    QWORD PTR [rax+rax*1+0x0]
    f143:	00 00                	add    BYTE PTR [rax],al
    f145:	45 0e                	rex.RB (bad) 
    f147:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f14d:	02 5b 0c             	add    bl,BYTE PTR [rbx+0xc]
    f150:	07                   	(bad)  
    f151:	08 00                	or     BYTE PTR [rax],al
    f153:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f156:	00 00                	add    BYTE PTR [rax],al
    f158:	68 0c 00 00 a1       	push   0xffffffffa100000c
    f15d:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    f15e:	ff                   	(bad)  
    f15f:	ff 53 00             	call   QWORD PTR [rbx+0x0]
    f162:	00 00                	add    BYTE PTR [rax],al
    f164:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f167:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f16d:	02 4a 0c             	add    cl,BYTE PTR [rdx+0xc]
    f170:	07                   	(bad)  
    f171:	08 00                	or     BYTE PTR [rax],al
    f173:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f176:	00 00                	add    BYTE PTR [rax],al
    f178:	88 0c 00             	mov    BYTE PTR [rax+rax*1],cl
    f17b:	00 d4                	add    ah,dl
    f17d:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    f17e:	ff                   	(bad)  
    f17f:	ff b1 00 00 00 00    	push   QWORD PTR [rcx+0x0]
    f185:	45 0e                	rex.RB (bad) 
    f187:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f18d:	02 a8 0c 07 08 00    	add    ch,BYTE PTR [rax+0x8070c]
    f193:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f196:	00 00                	add    BYTE PTR [rax],al
    f198:	a8 0c                	test   al,0xc
    f19a:	00 00                	add    BYTE PTR [rax],al
    f19c:	65 a7                	cmps   DWORD PTR gs:[rsi],DWORD PTR es:[rdi]
    f19e:	ff                   	(bad)  
    f19f:	ff cb                	dec    ebx
    f1a1:	00 00                	add    BYTE PTR [rax],al
    f1a3:	00 00                	add    BYTE PTR [rax],al
    f1a5:	45 0e                	rex.RB (bad) 
    f1a7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f1ad:	02 c2                	add    al,dl
    f1af:	0c 07                	or     al,0x7
    f1b1:	08 00                	or     BYTE PTR [rax],al
    f1b3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f1b6:	00 00                	add    BYTE PTR [rax],al
    f1b8:	c8 0c 00 00          	enter  0xc,0x0
    f1bc:	10 a8 ff ff 55 00    	adc    BYTE PTR [rax+0x55ffff],ch
    f1c2:	00 00                	add    BYTE PTR [rax],al
    f1c4:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f1c7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f1cd:	02 4c 0c 07          	add    cl,BYTE PTR [rsp+rcx*1+0x7]
    f1d1:	08 00                	or     BYTE PTR [rax],al
    f1d3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f1d6:	00 00                	add    BYTE PTR [rax],al
    f1d8:	e8 0c 00 00 45       	call   4500f1e9 <_end+0x44ed21a9>
    f1dd:	a8 ff                	test   al,0xff
    f1df:	ff 30                	push   QWORD PTR [rax]
    f1e1:	00 00                	add    BYTE PTR [rax],al
    f1e3:	00 00                	add    BYTE PTR [rax],al
    f1e5:	45 0e                	rex.RB (bad) 
    f1e7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f1ed:	67 0c 07             	addr32 or al,0x7
    f1f0:	08 00                	or     BYTE PTR [rax],al
    f1f2:	00 00                	add    BYTE PTR [rax],al
    f1f4:	1c 00                	sbb    al,0x0
    f1f6:	00 00                	add    BYTE PTR [rax],al
    f1f8:	08 0d 00 00 55 a8    	or     BYTE PTR [rip+0xffffffffa8550000],cl        # ffffffffa855f1fe <_end+0xffffffffa84221be>
    f1fe:	ff                   	(bad)  
    f1ff:	ff 67 00             	jmp    QWORD PTR [rdi+0x0]
    f202:	00 00                	add    BYTE PTR [rax],al
    f204:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f207:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f20d:	02 5e 0c             	add    bl,BYTE PTR [rsi+0xc]
    f210:	07                   	(bad)  
    f211:	08 00                	or     BYTE PTR [rax],al
    f213:	00 20                	add    BYTE PTR [rax],ah
    f215:	00 00                	add    BYTE PTR [rax],al
    f217:	00 28                	add    BYTE PTR [rax],ch
    f219:	0d 00 00 9c a8       	or     eax,0xa89c0000
    f21e:	ff                   	(bad)  
    f21f:	ff                   	(bad)  
    f220:	38 0f                	cmp    BYTE PTR [rdi],cl
    f222:	00 00                	add    BYTE PTR [rax],al
    f224:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f227:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f22d:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    f231:	27                   	(bad)  
    f232:	0f 0c                	(bad)  
    f234:	07                   	(bad)  
    f235:	08 00                	or     BYTE PTR [rax],al
    f237:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f23a:	00 00                	add    BYTE PTR [rax],al
    f23c:	4c 0d 00 00 b0 b7    	rex.WR or rax,0xffffffffb7b00000
    f242:	ff                   	(bad)  
    f243:	ff 46 00             	inc    DWORD PTR [rsi+0x0]
    f246:	00 00                	add    BYTE PTR [rax],al
    f248:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f24b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f251:	7d 0c                	jge    f25f <__GNU_EH_FRAME_HDR+0x1137>
    f253:	07                   	(bad)  
    f254:	08 00                	or     BYTE PTR [rax],al
    f256:	00 00                	add    BYTE PTR [rax],al
    f258:	24 00                	and    al,0x0
    f25a:	00 00                	add    BYTE PTR [rax],al
    f25c:	6c                   	ins    BYTE PTR es:[rdi],dx
    f25d:	0d 00 00 d6 b7       	or     eax,0xb7d60000
    f262:	ff                   	(bad)  
    f263:	ff                   	(bad)  
    f264:	3b 02                	cmp    eax,DWORD PTR [rdx]
    f266:	00 00                	add    BYTE PTR [rax],al
    f268:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f26b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f271:	4b 8f 03             	rex.WXB pop QWORD PTR [r11]
    f274:	8e 04 8c             	mov    es,WORD PTR [rsp+rcx*4]
    f277:	05 83 06 03 27       	add    eax,0x27030683
    f27c:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    f27f:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
    f282:	00 00                	add    BYTE PTR [rax],al
    f284:	94                   	xchg   esp,eax
    f285:	0d 00 00 e9 b9       	or     eax,0xb9e90000
    f28a:	ff                   	(bad)  
    f28b:	ff a5 01 00 00 00    	jmp    QWORD PTR [rbp+0x1]
    f291:	45 0e                	rex.RB (bad) 
    f293:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f299:	03 9c 01 0c 07 08 00 	add    ebx,DWORD PTR [rcx+rax*1+0x8070c]
    f2a0:	1c 00                	sbb    al,0x0
    f2a2:	00 00                	add    BYTE PTR [rax],al
    f2a4:	b4 0d                	mov    ah,0xd
    f2a6:	00 00                	add    BYTE PTR [rax],al
    f2a8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    f2a9:	bb ff ff 12 01       	mov    ebx,0x112ffff
    f2ae:	00 00                	add    BYTE PTR [rax],al
    f2b0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f2b3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f2b9:	03 09                	add    ecx,DWORD PTR [rcx]
    f2bb:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f2be:	08 00                	or     BYTE PTR [rax],al
    f2c0:	24 00                	and    al,0x0
    f2c2:	00 00                	add    BYTE PTR [rax],al
    f2c4:	d4                   	(bad)  
    f2c5:	0d 00 00 60 bc       	or     eax,0xbc600000
    f2ca:	ff                   	(bad)  
    f2cb:	ff                   	(bad)  
    f2cc:	bc 00 00 00 00       	mov    esp,0x0
    f2d1:	45 0e                	rex.RB (bad) 
    f2d3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f2d9:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    f2dd:	ae                   	scas   al,BYTE PTR es:[rdi]
    f2de:	0c 07                	or     al,0x7
    f2e0:	08 00                	or     BYTE PTR [rax],al
    f2e2:	00 00                	add    BYTE PTR [rax],al
    f2e4:	00 00                	add    BYTE PTR [rax],al
    f2e6:	00 00                	add    BYTE PTR [rax],al
    f2e8:	24 00                	and    al,0x0
    f2ea:	00 00                	add    BYTE PTR [rax],al
    f2ec:	fc                   	cld    
    f2ed:	0d 00 00 f4 bc       	or     eax,0xbcf40000
    f2f2:	ff                   	(bad)  
    f2f3:	ff 9b 01 00 00 00    	call   FWORD PTR [rbx+0x1]
    f2f9:	45 0e                	rex.RB (bad) 
    f2fb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f301:	47 8c 03             	rex.RXB mov WORD PTR [r11],es
    f304:	83 04 03 8b          	add    DWORD PTR [rbx+rax*1],0xffffff8b
    f308:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f30b:	08 00                	or     BYTE PTR [rax],al
    f30d:	00 00                	add    BYTE PTR [rax],al
    f30f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f312:	00 00                	add    BYTE PTR [rax],al
    f314:	24 0e                	and    al,0xe
    f316:	00 00                	add    BYTE PTR [rax],al
    f318:	67 be ff ff a5 00    	addr32 mov esi,0xa5ffff
    f31e:	00 00                	add    BYTE PTR [rax],al
    f320:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f323:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f329:	02 9c 0c 07 08 00 00 	add    bl,BYTE PTR [rsp+rcx*1+0x807]
    f330:	1c 00                	sbb    al,0x0
    f332:	00 00                	add    BYTE PTR [rax],al
    f334:	44 0e                	rex.R (bad) 
    f336:	00 00                	add    BYTE PTR [rax],al
    f338:	ec                   	in     al,dx
    f339:	be ff ff 43 01       	mov    esi,0x143ffff
    f33e:	00 00                	add    BYTE PTR [rax],al
    f340:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f343:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f349:	03 3a                	add    edi,DWORD PTR [rdx]
    f34b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f34e:	08 00                	or     BYTE PTR [rax],al
    f350:	1c 00                	sbb    al,0x0
    f352:	00 00                	add    BYTE PTR [rax],al
    f354:	64 0e                	fs (bad) 
    f356:	00 00                	add    BYTE PTR [rax],al
    f358:	0f c0 ff             	xadd   bh,bh
    f35b:	ff f3                	push   rbx
    f35d:	00 00                	add    BYTE PTR [rax],al
    f35f:	00 00                	add    BYTE PTR [rax],al
    f361:	45 0e                	rex.RB (bad) 
    f363:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f369:	02 ea                	add    ch,dl
    f36b:	0c 07                	or     al,0x7
    f36d:	08 00                	or     BYTE PTR [rax],al
    f36f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f372:	00 00                	add    BYTE PTR [rax],al
    f374:	84 0e                	test   BYTE PTR [rsi],cl
    f376:	00 00                	add    BYTE PTR [rax],al
    f378:	e2 c0                	loop   f33a <__GNU_EH_FRAME_HDR+0x1212>
    f37a:	ff                   	(bad)  
    f37b:	ff 70 00             	push   QWORD PTR [rax+0x0]
    f37e:	00 00                	add    BYTE PTR [rax],al
    f380:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f383:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f389:	02 67 0c             	add    ah,BYTE PTR [rdi+0xc]
    f38c:	07                   	(bad)  
    f38d:	08 00                	or     BYTE PTR [rax],al
    f38f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f392:	00 00                	add    BYTE PTR [rax],al
    f394:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    f395:	0e                   	(bad)  
    f396:	00 00                	add    BYTE PTR [rax],al
    f398:	32 c1                	xor    al,cl
    f39a:	ff                   	(bad)  
    f39b:	ff a5 02 00 00 00    	jmp    QWORD PTR [rbp+0x2]
    f3a1:	45 0e                	rex.RB (bad) 
    f3a3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f3a9:	4a 8c 03             	rex.WX mov WORD PTR [rbx],es
    f3ac:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
    f3b0:	1c 00                	sbb    al,0x0
    f3b2:	00 00                	add    BYTE PTR [rax],al
    f3b4:	c4                   	(bad)  
    f3b5:	0e                   	(bad)  
    f3b6:	00 00                	add    BYTE PTR [rax],al
    f3b8:	b7 c3                	mov    bh,0xc3
    f3ba:	ff                   	(bad)  
    f3bb:	ff 6a 00             	jmp    FWORD PTR [rdx+0x0]
    f3be:	00 00                	add    BYTE PTR [rax],al
    f3c0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f3c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f3c9:	02 61 0c             	add    ah,BYTE PTR [rcx+0xc]
    f3cc:	07                   	(bad)  
    f3cd:	08 00                	or     BYTE PTR [rax],al
    f3cf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f3d2:	00 00                	add    BYTE PTR [rax],al
    f3d4:	e4 0e                	in     al,0xe
    f3d6:	00 00                	add    BYTE PTR [rax],al
    f3d8:	01 c4                	add    esp,eax
    f3da:	ff                   	(bad)  
    f3db:	ff 6e 00             	jmp    FWORD PTR [rsi+0x0]
    f3de:	00 00                	add    BYTE PTR [rax],al
    f3e0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f3e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f3e9:	02 65 0c             	add    ah,BYTE PTR [rbp+0xc]
    f3ec:	07                   	(bad)  
    f3ed:	08 00                	or     BYTE PTR [rax],al
    f3ef:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    f3f2:	00 00                	add    BYTE PTR [rax],al
    f3f4:	04 0f                	add    al,0xf
    f3f6:	00 00                	add    BYTE PTR [rax],al
    f3f8:	4f c4                	(bad)  
    f3fa:	ff                   	(bad)  
    f3fb:	ff 8d 01 00 00 00    	dec    DWORD PTR [rbp+0x1]
    f401:	45 0e                	rex.RB (bad) 
    f403:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f409:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    f40d:	7f 01                	jg     f410 <__GNU_EH_FRAME_HDR+0x12e8>
    f40f:	0c 07                	or     al,0x7
    f411:	08 00                	or     BYTE PTR [rax],al
    f413:	00 00                	add    BYTE PTR [rax],al
    f415:	00 00                	add    BYTE PTR [rax],al
    f417:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f41a:	00 00                	add    BYTE PTR [rax],al
    f41c:	2c 0f                	sub    al,0xf
    f41e:	00 00                	add    BYTE PTR [rax],al
    f420:	b4 c5                	mov    ah,0xc5
    f422:	ff                   	(bad)  
    f423:	ff e7                	jmp    rdi
    f425:	03 00                	add    eax,DWORD PTR [rax]
    f427:	00 00                	add    BYTE PTR [rax],al
    f429:	45 0e                	rex.RB (bad) 
    f42b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f431:	03 de                	add    ebx,esi
    f433:	03 0c 07             	add    ecx,DWORD PTR [rdi+rax*1]
    f436:	08 00                	or     BYTE PTR [rax],al
    f438:	1c 00                	sbb    al,0x0
    f43a:	00 00                	add    BYTE PTR [rax],al
    f43c:	4c 0f 00 00          	rex.WR sldt WORD PTR [rax]
    f440:	7b c9                	jnp    f40b <__GNU_EH_FRAME_HDR+0x12e3>
    f442:	ff                   	(bad)  
    f443:	ff                   	(bad)  
    f444:	3d 00 00 00 00       	cmp    eax,0x0
    f449:	45 0e                	rex.RB (bad) 
    f44b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f451:	74 0c                	je     f45f <__FRAME_END__+0x7>
    f453:	07                   	(bad)  
    f454:	08 00                	or     BYTE PTR [rax],al
	...

000000000000f458 <__FRAME_END__>:
    f458:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .tbss:

0000000000010b50 <buffer.0+0x10ad0>:
	...

Disassembly of section .init_array:

0000000000010b50 <__frame_dummy_init_array_entry>:
   10b50:	20 2a                	and    BYTE PTR [rdx],ch
   10b52:	00 00                	add    BYTE PTR [rax],al
   10b54:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000010b58 <__do_global_dtors_aux_fini_array_entry>:
   10b58:	e0 29                	loopne 10b83 <_DYNAMIC+0x23>
   10b5a:	00 00                	add    BYTE PTR [rax],al
   10b5c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000010b60 <_DYNAMIC>:
   10b60:	01 00                	add    DWORD PTR [rax],eax
   10b62:	00 00                	add    BYTE PTR [rax],al
   10b64:	00 00                	add    BYTE PTR [rax],al
   10b66:	00 00                	add    BYTE PTR [rax],al
   10b68:	c9                   	leave  
   10b69:	02 00                	add    al,BYTE PTR [rax]
   10b6b:	00 00                	add    BYTE PTR [rax],al
   10b6d:	00 00                	add    BYTE PTR [rax],al
   10b6f:	00 01                	add    BYTE PTR [rcx],al
   10b71:	00 00                	add    BYTE PTR [rax],al
   10b73:	00 00                	add    BYTE PTR [rax],al
   10b75:	00 00                	add    BYTE PTR [rax],al
   10b77:	00 d8                	add    al,bl
   10b79:	02 00                	add    al,BYTE PTR [rax]
   10b7b:	00 00                	add    BYTE PTR [rax],al
   10b7d:	00 00                	add    BYTE PTR [rax],al
   10b7f:	00 01                	add    BYTE PTR [rcx],al
   10b81:	00 00                	add    BYTE PTR [rax],al
   10b83:	00 00                	add    BYTE PTR [rax],al
   10b85:	00 00                	add    BYTE PTR [rax],al
   10b87:	00 e8                	add    al,ch
   10b89:	02 00                	add    al,BYTE PTR [rax]
   10b8b:	00 00                	add    BYTE PTR [rax],al
   10b8d:	00 00                	add    BYTE PTR [rax],al
   10b8f:	00 01                	add    BYTE PTR [rcx],al
   10b91:	00 00                	add    BYTE PTR [rax],al
   10b93:	00 00                	add    BYTE PTR [rax],al
   10b95:	00 00                	add    BYTE PTR [rax],al
   10b97:	00 f7                	add    bh,dh
   10b99:	02 00                	add    al,BYTE PTR [rax]
   10b9b:	00 00                	add    BYTE PTR [rax],al
   10b9d:	00 00                	add    BYTE PTR [rax],al
   10b9f:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
   10ba2:	00 00                	add    BYTE PTR [rax],al
   10ba4:	00 00                	add    BYTE PTR [rax],al
   10ba6:	00 00                	add    BYTE PTR [rax],al
   10ba8:	00 20                	add    BYTE PTR [rax],ah
   10baa:	00 00                	add    BYTE PTR [rax],al
   10bac:	00 00                	add    BYTE PTR [rax],al
   10bae:	00 00                	add    BYTE PTR [rax],al
   10bb0:	0d 00 00 00 00       	or     eax,0x0
   10bb5:	00 00                	add    BYTE PTR [rax],al
   10bb7:	00 f8                	add    al,bh
   10bb9:	bd 00 00 00 00       	mov    ebp,0x0
   10bbe:	00 00                	add    BYTE PTR [rax],al
   10bc0:	19 00                	sbb    DWORD PTR [rax],eax
   10bc2:	00 00                	add    BYTE PTR [rax],al
   10bc4:	00 00                	add    BYTE PTR [rax],al
   10bc6:	00 00                	add    BYTE PTR [rax],al
   10bc8:	50                   	push   rax
   10bc9:	0b 01                	or     eax,DWORD PTR [rcx]
   10bcb:	00 00                	add    BYTE PTR [rax],al
   10bcd:	00 00                	add    BYTE PTR [rax],al
   10bcf:	00 1b                	add    BYTE PTR [rbx],bl
   10bd1:	00 00                	add    BYTE PTR [rax],al
   10bd3:	00 00                	add    BYTE PTR [rax],al
   10bd5:	00 00                	add    BYTE PTR [rax],al
   10bd7:	00 08                	add    BYTE PTR [rax],cl
   10bd9:	00 00                	add    BYTE PTR [rax],al
   10bdb:	00 00                	add    BYTE PTR [rax],al
   10bdd:	00 00                	add    BYTE PTR [rax],al
   10bdf:	00 1a                	add    BYTE PTR [rdx],bl
   10be1:	00 00                	add    BYTE PTR [rax],al
   10be3:	00 00                	add    BYTE PTR [rax],al
   10be5:	00 00                	add    BYTE PTR [rax],al
   10be7:	00 58 0b             	add    BYTE PTR [rax+0xb],bl
   10bea:	01 00                	add    DWORD PTR [rax],eax
   10bec:	00 00                	add    BYTE PTR [rax],al
   10bee:	00 00                	add    BYTE PTR [rax],al
   10bf0:	1c 00                	sbb    al,0x0
   10bf2:	00 00                	add    BYTE PTR [rax],al
   10bf4:	00 00                	add    BYTE PTR [rax],al
   10bf6:	00 00                	add    BYTE PTR [rax],al
   10bf8:	08 00                	or     BYTE PTR [rax],al
   10bfa:	00 00                	add    BYTE PTR [rax],al
   10bfc:	00 00                	add    BYTE PTR [rax],al
   10bfe:	00 00                	add    BYTE PTR [rax],al
   10c00:	f5                   	cmc    
   10c01:	fe                   	(bad)  
   10c02:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10c05:	00 00                	add    BYTE PTR [rax],al
   10c07:	00 e8                	add    al,ch
   10c09:	03 00                	add    eax,DWORD PTR [rax]
   10c0b:	00 00                	add    BYTE PTR [rax],al
   10c0d:	00 00                	add    BYTE PTR [rax],al
   10c0f:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 10c15 <_DYNAMIC+0xb5>
   10c15:	00 00                	add    BYTE PTR [rax],al
   10c17:	00 98 0b 00 00 00    	add    BYTE PTR [rax+0xb],bl
   10c1d:	00 00                	add    BYTE PTR [rax],al
   10c1f:	00 06                	add    BYTE PTR [rsi],al
   10c21:	00 00                	add    BYTE PTR [rax],al
   10c23:	00 00                	add    BYTE PTR [rax],al
   10c25:	00 00                	add    BYTE PTR [rax],al
   10c27:	00 18                	add    BYTE PTR [rax],bl
   10c29:	04 00                	add    al,0x0
   10c2b:	00 00                	add    BYTE PTR [rax],al
   10c2d:	00 00                	add    BYTE PTR [rax],al
   10c2f:	00 0a                	add    BYTE PTR [rdx],cl
   10c31:	00 00                	add    BYTE PTR [rax],al
   10c33:	00 00                	add    BYTE PTR [rax],al
   10c35:	00 00                	add    BYTE PTR [rax],al
   10c37:	00 36                	add    BYTE PTR [rsi],dh
   10c39:	03 00                	add    eax,DWORD PTR [rax]
   10c3b:	00 00                	add    BYTE PTR [rax],al
   10c3d:	00 00                	add    BYTE PTR [rax],al
   10c3f:	00 0b                	add    BYTE PTR [rbx],cl
   10c41:	00 00                	add    BYTE PTR [rax],al
   10c43:	00 00                	add    BYTE PTR [rax],al
   10c45:	00 00                	add    BYTE PTR [rax],al
   10c47:	00 18                	add    BYTE PTR [rax],bl
   10c49:	00 00                	add    BYTE PTR [rax],al
   10c4b:	00 00                	add    BYTE PTR [rax],al
   10c4d:	00 00                	add    BYTE PTR [rax],al
   10c4f:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 10c55 <_DYNAMIC+0xf5>
	...
   10c5d:	00 00                	add    BYTE PTR [rax],al
   10c5f:	00 03                	add    BYTE PTR [rbx],al
   10c61:	00 00                	add    BYTE PTR [rax],al
   10c63:	00 00                	add    BYTE PTR [rax],al
   10c65:	00 00                	add    BYTE PTR [rax],al
   10c67:	00 80 0d 01 00 00    	add    BYTE PTR [rax+0x10d],al
   10c6d:	00 00                	add    BYTE PTR [rax],al
   10c6f:	00 02                	add    BYTE PTR [rdx],al
   10c71:	00 00                	add    BYTE PTR [rax],al
   10c73:	00 00                	add    BYTE PTR [rax],al
   10c75:	00 00                	add    BYTE PTR [rax],al
   10c77:	00 c0                	add    al,al
   10c79:	06                   	(bad)  
   10c7a:	00 00                	add    BYTE PTR [rax],al
   10c7c:	00 00                	add    BYTE PTR [rax],al
   10c7e:	00 00                	add    BYTE PTR [rax],al
   10c80:	14 00                	adc    al,0x0
   10c82:	00 00                	add    BYTE PTR [rax],al
   10c84:	00 00                	add    BYTE PTR [rax],al
   10c86:	00 00                	add    BYTE PTR [rax],al
   10c88:	07                   	(bad)  
   10c89:	00 00                	add    BYTE PTR [rax],al
   10c8b:	00 00                	add    BYTE PTR [rax],al
   10c8d:	00 00                	add    BYTE PTR [rax],al
   10c8f:	00 17                	add    BYTE PTR [rdi],dl
	...
   10c99:	11 00                	adc    DWORD PTR [rax],eax
   10c9b:	00 00                	add    BYTE PTR [rax],al
   10c9d:	00 00                	add    BYTE PTR [rax],al
   10c9f:	00 07                	add    BYTE PTR [rdi],al
   10ca1:	00 00                	add    BYTE PTR [rax],al
   10ca3:	00 00                	add    BYTE PTR [rax],al
   10ca5:	00 00                	add    BYTE PTR [rax],al
   10ca7:	00 e0                	add    al,ah
   10ca9:	0f 00 00             	sldt   WORD PTR [rax]
   10cac:	00 00                	add    BYTE PTR [rax],al
   10cae:	00 00                	add    BYTE PTR [rax],al
   10cb0:	08 00                	or     BYTE PTR [rax],al
   10cb2:	00 00                	add    BYTE PTR [rax],al
   10cb4:	00 00                	add    BYTE PTR [rax],al
   10cb6:	00 00                	add    BYTE PTR [rax],al
   10cb8:	20 01                	and    BYTE PTR [rcx],al
   10cba:	00 00                	add    BYTE PTR [rax],al
   10cbc:	00 00                	add    BYTE PTR [rax],al
   10cbe:	00 00                	add    BYTE PTR [rax],al
   10cc0:	09 00                	or     DWORD PTR [rax],eax
   10cc2:	00 00                	add    BYTE PTR [rax],al
   10cc4:	00 00                	add    BYTE PTR [rax],al
   10cc6:	00 00                	add    BYTE PTR [rax],al
   10cc8:	18 00                	sbb    BYTE PTR [rax],al
   10cca:	00 00                	add    BYTE PTR [rax],al
   10ccc:	00 00                	add    BYTE PTR [rax],al
   10cce:	00 00                	add    BYTE PTR [rax],al
   10cd0:	1e                   	(bad)  
   10cd1:	00 00                	add    BYTE PTR [rax],al
   10cd3:	00 00                	add    BYTE PTR [rax],al
   10cd5:	00 00                	add    BYTE PTR [rax],al
   10cd7:	00 08                	add    BYTE PTR [rax],cl
   10cd9:	00 00                	add    BYTE PTR [rax],al
   10cdb:	00 00                	add    BYTE PTR [rax],al
   10cdd:	00 00                	add    BYTE PTR [rax],al
   10cdf:	00 fb                	add    bl,bh
   10ce1:	ff                   	(bad)  
   10ce2:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10ce5:	00 00                	add    BYTE PTR [rax],al
   10ce7:	00 01                	add    BYTE PTR [rcx],al
   10ce9:	00 00                	add    BYTE PTR [rax],al
   10ceb:	08 00                	or     BYTE PTR [rax],al
   10ced:	00 00                	add    BYTE PTR [rax],al
   10cef:	00 fe                	add    dh,bh
   10cf1:	ff                   	(bad)  
   10cf2:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10cf5:	00 00                	add    BYTE PTR [rax],al
   10cf7:	00 70 0f             	add    BYTE PTR [rax+0xf],dh
   10cfa:	00 00                	add    BYTE PTR [rax],al
   10cfc:	00 00                	add    BYTE PTR [rax],al
   10cfe:	00 00                	add    BYTE PTR [rax],al
   10d00:	ff                   	(bad)  
   10d01:	ff                   	(bad)  
   10d02:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d05:	00 00                	add    BYTE PTR [rax],al
   10d07:	00 02                	add    BYTE PTR [rdx],al
   10d09:	00 00                	add    BYTE PTR [rax],al
   10d0b:	00 00                	add    BYTE PTR [rax],al
   10d0d:	00 00                	add    BYTE PTR [rax],al
   10d0f:	00 f0                	add    al,dh
   10d11:	ff                   	(bad)  
   10d12:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d15:	00 00                	add    BYTE PTR [rax],al
   10d17:	00 ce                	add    dh,cl
   10d19:	0e                   	(bad)  
   10d1a:	00 00                	add    BYTE PTR [rax],al
   10d1c:	00 00                	add    BYTE PTR [rax],al
   10d1e:	00 00                	add    BYTE PTR [rax],al
   10d20:	f9                   	stc    
   10d21:	ff                   	(bad)  
   10d22:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d25:	00 00                	add    BYTE PTR [rax],al
   10d27:	00 06                	add    BYTE PTR [rsi],al
	...

Disassembly of section .got:

0000000000010d80 <_GLOBAL_OFFSET_TABLE_>:
   10d80:	60                   	(bad)  
   10d81:	0b 01                	or     eax,DWORD PTR [rcx]
	...
   10d97:	00 30                	add    BYTE PTR [rax],dh
   10d99:	20 00                	and    BYTE PTR [rax],al
   10d9b:	00 00                	add    BYTE PTR [rax],al
   10d9d:	00 00                	add    BYTE PTR [rax],al
   10d9f:	00 40 20             	add    BYTE PTR [rax+0x20],al
   10da2:	00 00                	add    BYTE PTR [rax],al
   10da4:	00 00                	add    BYTE PTR [rax],al
   10da6:	00 00                	add    BYTE PTR [rax],al
   10da8:	50                   	push   rax
   10da9:	20 00                	and    BYTE PTR [rax],al
   10dab:	00 00                	add    BYTE PTR [rax],al
   10dad:	00 00                	add    BYTE PTR [rax],al
   10daf:	00 60 20             	add    BYTE PTR [rax+0x20],ah
   10db2:	00 00                	add    BYTE PTR [rax],al
   10db4:	00 00                	add    BYTE PTR [rax],al
   10db6:	00 00                	add    BYTE PTR [rax],al
   10db8:	70 20                	jo     10dda <_GLOBAL_OFFSET_TABLE_+0x5a>
   10dba:	00 00                	add    BYTE PTR [rax],al
   10dbc:	00 00                	add    BYTE PTR [rax],al
   10dbe:	00 00                	add    BYTE PTR [rax],al
   10dc0:	80 20 00             	and    BYTE PTR [rax],0x0
   10dc3:	00 00                	add    BYTE PTR [rax],al
   10dc5:	00 00                	add    BYTE PTR [rax],al
   10dc7:	00 90 20 00 00 00    	add    BYTE PTR [rax+0x20],dl
   10dcd:	00 00                	add    BYTE PTR [rax],al
   10dcf:	00 a0 20 00 00 00    	add    BYTE PTR [rax+0x20],ah
   10dd5:	00 00                	add    BYTE PTR [rax],al
   10dd7:	00 b0 20 00 00 00    	add    BYTE PTR [rax+0x20],dh
   10ddd:	00 00                	add    BYTE PTR [rax],al
   10ddf:	00 c0                	add    al,al
   10de1:	20 00                	and    BYTE PTR [rax],al
   10de3:	00 00                	add    BYTE PTR [rax],al
   10de5:	00 00                	add    BYTE PTR [rax],al
   10de7:	00 d0                	add    al,dl
   10de9:	20 00                	and    BYTE PTR [rax],al
   10deb:	00 00                	add    BYTE PTR [rax],al
   10ded:	00 00                	add    BYTE PTR [rax],al
   10def:	00 e0                	add    al,ah
   10df1:	20 00                	and    BYTE PTR [rax],al
   10df3:	00 00                	add    BYTE PTR [rax],al
   10df5:	00 00                	add    BYTE PTR [rax],al
   10df7:	00 f0                	add    al,dh
   10df9:	20 00                	and    BYTE PTR [rax],al
   10dfb:	00 00                	add    BYTE PTR [rax],al
   10dfd:	00 00                	add    BYTE PTR [rax],al
   10dff:	00 00                	add    BYTE PTR [rax],al
   10e01:	21 00                	and    DWORD PTR [rax],eax
   10e03:	00 00                	add    BYTE PTR [rax],al
   10e05:	00 00                	add    BYTE PTR [rax],al
   10e07:	00 10                	add    BYTE PTR [rax],dl
   10e09:	21 00                	and    DWORD PTR [rax],eax
   10e0b:	00 00                	add    BYTE PTR [rax],al
   10e0d:	00 00                	add    BYTE PTR [rax],al
   10e0f:	00 20                	add    BYTE PTR [rax],ah
   10e11:	21 00                	and    DWORD PTR [rax],eax
   10e13:	00 00                	add    BYTE PTR [rax],al
   10e15:	00 00                	add    BYTE PTR [rax],al
   10e17:	00 30                	add    BYTE PTR [rax],dh
   10e19:	21 00                	and    DWORD PTR [rax],eax
   10e1b:	00 00                	add    BYTE PTR [rax],al
   10e1d:	00 00                	add    BYTE PTR [rax],al
   10e1f:	00 40 21             	add    BYTE PTR [rax+0x21],al
   10e22:	00 00                	add    BYTE PTR [rax],al
   10e24:	00 00                	add    BYTE PTR [rax],al
   10e26:	00 00                	add    BYTE PTR [rax],al
   10e28:	50                   	push   rax
   10e29:	21 00                	and    DWORD PTR [rax],eax
   10e2b:	00 00                	add    BYTE PTR [rax],al
   10e2d:	00 00                	add    BYTE PTR [rax],al
   10e2f:	00 60 21             	add    BYTE PTR [rax+0x21],ah
   10e32:	00 00                	add    BYTE PTR [rax],al
   10e34:	00 00                	add    BYTE PTR [rax],al
   10e36:	00 00                	add    BYTE PTR [rax],al
   10e38:	70 21                	jo     10e5b <_GLOBAL_OFFSET_TABLE_+0xdb>
   10e3a:	00 00                	add    BYTE PTR [rax],al
   10e3c:	00 00                	add    BYTE PTR [rax],al
   10e3e:	00 00                	add    BYTE PTR [rax],al
   10e40:	80 21 00             	and    BYTE PTR [rcx],0x0
   10e43:	00 00                	add    BYTE PTR [rax],al
   10e45:	00 00                	add    BYTE PTR [rax],al
   10e47:	00 90 21 00 00 00    	add    BYTE PTR [rax+0x21],dl
   10e4d:	00 00                	add    BYTE PTR [rax],al
   10e4f:	00 a0 21 00 00 00    	add    BYTE PTR [rax+0x21],ah
   10e55:	00 00                	add    BYTE PTR [rax],al
   10e57:	00 b0 21 00 00 00    	add    BYTE PTR [rax+0x21],dh
   10e5d:	00 00                	add    BYTE PTR [rax],al
   10e5f:	00 c0                	add    al,al
   10e61:	21 00                	and    DWORD PTR [rax],eax
   10e63:	00 00                	add    BYTE PTR [rax],al
   10e65:	00 00                	add    BYTE PTR [rax],al
   10e67:	00 d0                	add    al,dl
   10e69:	21 00                	and    DWORD PTR [rax],eax
   10e6b:	00 00                	add    BYTE PTR [rax],al
   10e6d:	00 00                	add    BYTE PTR [rax],al
   10e6f:	00 e0                	add    al,ah
   10e71:	21 00                	and    DWORD PTR [rax],eax
   10e73:	00 00                	add    BYTE PTR [rax],al
   10e75:	00 00                	add    BYTE PTR [rax],al
   10e77:	00 f0                	add    al,dh
   10e79:	21 00                	and    DWORD PTR [rax],eax
   10e7b:	00 00                	add    BYTE PTR [rax],al
   10e7d:	00 00                	add    BYTE PTR [rax],al
   10e7f:	00 00                	add    BYTE PTR [rax],al
   10e81:	22 00                	and    al,BYTE PTR [rax]
   10e83:	00 00                	add    BYTE PTR [rax],al
   10e85:	00 00                	add    BYTE PTR [rax],al
   10e87:	00 10                	add    BYTE PTR [rax],dl
   10e89:	22 00                	and    al,BYTE PTR [rax]
   10e8b:	00 00                	add    BYTE PTR [rax],al
   10e8d:	00 00                	add    BYTE PTR [rax],al
   10e8f:	00 20                	add    BYTE PTR [rax],ah
   10e91:	22 00                	and    al,BYTE PTR [rax]
   10e93:	00 00                	add    BYTE PTR [rax],al
   10e95:	00 00                	add    BYTE PTR [rax],al
   10e97:	00 30                	add    BYTE PTR [rax],dh
   10e99:	22 00                	and    al,BYTE PTR [rax]
   10e9b:	00 00                	add    BYTE PTR [rax],al
   10e9d:	00 00                	add    BYTE PTR [rax],al
   10e9f:	00 40 22             	add    BYTE PTR [rax+0x22],al
   10ea2:	00 00                	add    BYTE PTR [rax],al
   10ea4:	00 00                	add    BYTE PTR [rax],al
   10ea6:	00 00                	add    BYTE PTR [rax],al
   10ea8:	50                   	push   rax
   10ea9:	22 00                	and    al,BYTE PTR [rax]
   10eab:	00 00                	add    BYTE PTR [rax],al
   10ead:	00 00                	add    BYTE PTR [rax],al
   10eaf:	00 60 22             	add    BYTE PTR [rax+0x22],ah
   10eb2:	00 00                	add    BYTE PTR [rax],al
   10eb4:	00 00                	add    BYTE PTR [rax],al
   10eb6:	00 00                	add    BYTE PTR [rax],al
   10eb8:	70 22                	jo     10edc <_GLOBAL_OFFSET_TABLE_+0x15c>
   10eba:	00 00                	add    BYTE PTR [rax],al
   10ebc:	00 00                	add    BYTE PTR [rax],al
   10ebe:	00 00                	add    BYTE PTR [rax],al
   10ec0:	80 22 00             	and    BYTE PTR [rdx],0x0
   10ec3:	00 00                	add    BYTE PTR [rax],al
   10ec5:	00 00                	add    BYTE PTR [rax],al
   10ec7:	00 90 22 00 00 00    	add    BYTE PTR [rax+0x22],dl
   10ecd:	00 00                	add    BYTE PTR [rax],al
   10ecf:	00 a0 22 00 00 00    	add    BYTE PTR [rax+0x22],ah
   10ed5:	00 00                	add    BYTE PTR [rax],al
   10ed7:	00 b0 22 00 00 00    	add    BYTE PTR [rax+0x22],dh
   10edd:	00 00                	add    BYTE PTR [rax],al
   10edf:	00 c0                	add    al,al
   10ee1:	22 00                	and    al,BYTE PTR [rax]
   10ee3:	00 00                	add    BYTE PTR [rax],al
   10ee5:	00 00                	add    BYTE PTR [rax],al
   10ee7:	00 d0                	add    al,dl
   10ee9:	22 00                	and    al,BYTE PTR [rax]
   10eeb:	00 00                	add    BYTE PTR [rax],al
   10eed:	00 00                	add    BYTE PTR [rax],al
   10eef:	00 e0                	add    al,ah
   10ef1:	22 00                	and    al,BYTE PTR [rax]
   10ef3:	00 00                	add    BYTE PTR [rax],al
   10ef5:	00 00                	add    BYTE PTR [rax],al
   10ef7:	00 f0                	add    al,dh
   10ef9:	22 00                	and    al,BYTE PTR [rax]
   10efb:	00 00                	add    BYTE PTR [rax],al
   10efd:	00 00                	add    BYTE PTR [rax],al
   10eff:	00 00                	add    BYTE PTR [rax],al
   10f01:	23 00                	and    eax,DWORD PTR [rax]
   10f03:	00 00                	add    BYTE PTR [rax],al
   10f05:	00 00                	add    BYTE PTR [rax],al
   10f07:	00 10                	add    BYTE PTR [rax],dl
   10f09:	23 00                	and    eax,DWORD PTR [rax]
   10f0b:	00 00                	add    BYTE PTR [rax],al
   10f0d:	00 00                	add    BYTE PTR [rax],al
   10f0f:	00 20                	add    BYTE PTR [rax],ah
   10f11:	23 00                	and    eax,DWORD PTR [rax]
   10f13:	00 00                	add    BYTE PTR [rax],al
   10f15:	00 00                	add    BYTE PTR [rax],al
   10f17:	00 30                	add    BYTE PTR [rax],dh
   10f19:	23 00                	and    eax,DWORD PTR [rax]
   10f1b:	00 00                	add    BYTE PTR [rax],al
   10f1d:	00 00                	add    BYTE PTR [rax],al
   10f1f:	00 40 23             	add    BYTE PTR [rax+0x23],al
   10f22:	00 00                	add    BYTE PTR [rax],al
   10f24:	00 00                	add    BYTE PTR [rax],al
   10f26:	00 00                	add    BYTE PTR [rax],al
   10f28:	50                   	push   rax
   10f29:	23 00                	and    eax,DWORD PTR [rax]
   10f2b:	00 00                	add    BYTE PTR [rax],al
   10f2d:	00 00                	add    BYTE PTR [rax],al
   10f2f:	00 60 23             	add    BYTE PTR [rax+0x23],ah
   10f32:	00 00                	add    BYTE PTR [rax],al
   10f34:	00 00                	add    BYTE PTR [rax],al
   10f36:	00 00                	add    BYTE PTR [rax],al
   10f38:	70 23                	jo     10f5d <_GLOBAL_OFFSET_TABLE_+0x1dd>
   10f3a:	00 00                	add    BYTE PTR [rax],al
   10f3c:	00 00                	add    BYTE PTR [rax],al
   10f3e:	00 00                	add    BYTE PTR [rax],al
   10f40:	80 23 00             	and    BYTE PTR [rbx],0x0
   10f43:	00 00                	add    BYTE PTR [rax],al
   10f45:	00 00                	add    BYTE PTR [rax],al
   10f47:	00 90 23 00 00 00    	add    BYTE PTR [rax+0x23],dl
   10f4d:	00 00                	add    BYTE PTR [rax],al
   10f4f:	00 a0 23 00 00 00    	add    BYTE PTR [rax+0x23],ah
   10f55:	00 00                	add    BYTE PTR [rax],al
   10f57:	00 b0 23 00 00 00    	add    BYTE PTR [rax+0x23],dh
   10f5d:	00 00                	add    BYTE PTR [rax],al
   10f5f:	00 c0                	add    al,al
   10f61:	23 00                	and    eax,DWORD PTR [rax]
   10f63:	00 00                	add    BYTE PTR [rax],al
   10f65:	00 00                	add    BYTE PTR [rax],al
   10f67:	00 d0                	add    al,dl
   10f69:	23 00                	and    eax,DWORD PTR [rax]
   10f6b:	00 00                	add    BYTE PTR [rax],al
   10f6d:	00 00                	add    BYTE PTR [rax],al
   10f6f:	00 e0                	add    al,ah
   10f71:	23 00                	and    eax,DWORD PTR [rax]
   10f73:	00 00                	add    BYTE PTR [rax],al
   10f75:	00 00                	add    BYTE PTR [rax],al
   10f77:	00 f0                	add    al,dh
   10f79:	23 00                	and    eax,DWORD PTR [rax]
   10f7b:	00 00                	add    BYTE PTR [rax],al
   10f7d:	00 00                	add    BYTE PTR [rax],al
   10f7f:	00 00                	add    BYTE PTR [rax],al
   10f81:	24 00                	and    al,0x0
   10f83:	00 00                	add    BYTE PTR [rax],al
   10f85:	00 00                	add    BYTE PTR [rax],al
   10f87:	00 10                	add    BYTE PTR [rax],dl
   10f89:	24 00                	and    al,0x0
   10f8b:	00 00                	add    BYTE PTR [rax],al
   10f8d:	00 00                	add    BYTE PTR [rax],al
   10f8f:	00 20                	add    BYTE PTR [rax],ah
   10f91:	24 00                	and    al,0x0
   10f93:	00 00                	add    BYTE PTR [rax],al
   10f95:	00 00                	add    BYTE PTR [rax],al
   10f97:	00 30                	add    BYTE PTR [rax],dh
   10f99:	24 00                	and    al,0x0
   10f9b:	00 00                	add    BYTE PTR [rax],al
   10f9d:	00 00                	add    BYTE PTR [rax],al
   10f9f:	00 40 24             	add    BYTE PTR [rax+0x24],al
   10fa2:	00 00                	add    BYTE PTR [rax],al
   10fa4:	00 00                	add    BYTE PTR [rax],al
   10fa6:	00 00                	add    BYTE PTR [rax],al
   10fa8:	50                   	push   rax
   10fa9:	24 00                	and    al,0x0
   10fab:	00 00                	add    BYTE PTR [rax],al
   10fad:	00 00                	add    BYTE PTR [rax],al
   10faf:	00 60 24             	add    BYTE PTR [rax+0x24],ah
   10fb2:	00 00                	add    BYTE PTR [rax],al
   10fb4:	00 00                	add    BYTE PTR [rax],al
   10fb6:	00 00                	add    BYTE PTR [rax],al
   10fb8:	70 24                	jo     10fde <_GLOBAL_OFFSET_TABLE_+0x25e>
   10fba:	00 00                	add    BYTE PTR [rax],al
   10fbc:	00 00                	add    BYTE PTR [rax],al
   10fbe:	00 00                	add    BYTE PTR [rax],al
   10fc0:	80 24 00 00          	and    BYTE PTR [rax+rax*1],0x0
   10fc4:	00 00                	add    BYTE PTR [rax],al
   10fc6:	00 00                	add    BYTE PTR [rax],al
   10fc8:	90                   	nop
   10fc9:	24 00                	and    al,0x0
   10fcb:	00 00                	add    BYTE PTR [rax],al
   10fcd:	00 00                	add    BYTE PTR [rax],al
   10fcf:	00 a0 24 00 00 00    	add    BYTE PTR [rax+0x24],ah
	...

Disassembly of section .data:

0000000000011000 <__data_start>:
	...

0000000000011008 <__dso_handle>:
   11008:	08 10                	or     BYTE PTR [rax],dl
   1100a:	01 00                	add    DWORD PTR [rax],eax
   1100c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011010 <blk_ipv4_len>:
   11010:	ff                   	(bad)  
   11011:	ff                   	(bad)  
   11012:	ff                   	(bad)  
   11013:	ff                   	(bad)  

0000000000011014 <num_rules>:
   11014:	ff                   	(bad)  
   11015:	ff                   	(bad)  
   11016:	ff                   	(bad)  
   11017:	ff                   	(bad)  

0000000000011018 <watchlist_num>:
   11018:	ff                   	(bad)  
   11019:	ff                   	(bad)  
   1101a:	ff                   	(bad)  
   1101b:	ff                   	(bad)  

000000000001101c <arp_entries>:
   1101c:	ff                   	(bad)  
   1101d:	ff                   	(bad)  
   1101e:	ff                   	(bad)  
   1101f:	ff                 	dec    eax

0000000000011020 <spi_max>:
   11020:	c8 00 00 00          	enter  0x0,0x0

0000000000011024 <VIGIL_MODE>:
   11024:	ff                   	(bad)  
   11025:	ff 00                	inc    DWORD PTR [rax]
	...

0000000000011028 <default_config>:
   11028:	04 c0                	add    al,0xc0
   1102a:	00 00                	add    BYTE PTR [rax],al
   1102c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011030 <def_log_file>:
   11030:	1a c0                	sbb    al,al
   11032:	00 00                	add    BYTE PTR [rax],al
   11034:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011038 <default_host_conf>:
   11038:	34 c0                	xor    al,0xc0
   1103a:	00 00                	add    BYTE PTR [rax],al
   1103c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011040 <total_conversations>:
   11040:	ff                   	(bad)  
   11041:	ff                   	(bad)  
   11042:	ff                   	(bad)  
   11043:	ff                   	.byte 0xff

Disassembly of section .bss:

0000000000011060 <optarg@GLIBC_2.2.5>:
	...

0000000000011068 <completed.0>:
	...

0000000000011080 <demo_mode>:
   11080:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011084 <strict_icmp_timestamp_req>:
   11084:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011088 <strict_nmap_host_alive_check>:
	...

00000000000110a0 <threads>:
	...

00000000000112a0 <thread_count>:
   112a0:	00 00                	add    BYTE PTR [rax],al
	...

00000000000112a4 <total_pkt_captured>:
   112a4:	00 00                	add    BYTE PTR [rax],al
	...

00000000000112a8 <is_running>:
	...

00000000000112b0 <last_clean_time>:
	...

00000000000112b8 <clean_delay>:
	...

00000000000112c0 <pkt_counter>:
	...

00000000000112e0 <rules>:
	...

00000000000f32e0 <blocked_ipv4_addrs>:
	...

00000000000f3520 <watchlist>:
	...

0000000000107d20 <arpcache>:
	...

0000000000109f00 <ip_addr>:
	...

0000000000109f20 <debug_mode>:
	...

0000000000109f21 <use_sqlite>:
	...

0000000000109f40 <sqlite_db_path>:
	...

0000000000109f60 <clean_delay_pkts>:
  109f60:	00 00                	add    BYTE PTR [rax],al
	...

0000000000109f64 <packet_print>:
	...

0000000000109f65 <quiet_exit>:
  109f65:	00 00                	add    BYTE PTR [rax],al
	...

0000000000109f68 <vigil_location>:
	...

0000000000109f70 <input_adapter>:
	...

0000000000109f80 <output_adapter>:
	...

0000000000109f90 <local_ip>:
	...

0000000000109fb0 <def_gw>:
	...

0000000000109fc2 <use_spi>:
	...

0000000000109fc4 <homenet>:
  109fc4:	00 00                	add    BYTE PTR [rax],al
	...

0000000000109fc8 <homenetmask>:
  109fc8:	00 00                	add    BYTE PTR [rax],al
	...

0000000000109fcc <in_test_mode>:
	...

0000000000109fe0 <spi_table>:
	...

0000000000137fe0 <lua_scripts>:
	...

0000000000138800 <fn_mem_map>:
	...

000000000013b000 <fn_num>:
	...

000000000013b020 <current_log_num.3>:
  13b020:	00 00                	add    BYTE PTR [rax],al
	...

000000000013b024 <lines_written.2>:
  13b024:	00 00                	add    BYTE PTR [rax],al
	...

000000000013b028 <arr_num.1>:
	...

000000000013b040 <pkt_times.0>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <buffer+0x78>
   a:	74 75                	je     81 <buffer.0+0x1>
   c:	20 31                	and    BYTE PTR [rcx],dh
   e:	30 2e                	xor    BYTE PTR [rsi],ch
  10:	33 2e                	xor    ebp,DWORD PTR [rsi]
  12:	30 2d 31 75 62 75    	xor    BYTE PTR [rip+0x75627531],ch        # 75627549 <_end+0x754ea509>
  18:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  19:	74 75                	je     90 <buffer.0+0x10>
  1b:	31 29                	xor    DWORD PTR [rcx],ebp
  1d:	20 31                	and    BYTE PTR [rcx],dh
  1f:	30 2e                	xor    BYTE PTR [rsi],ch
  21:	33 2e                	xor    ebp,DWORD PTR [rsi]
  23:	30 00                	xor    BYTE PTR [rax],al
