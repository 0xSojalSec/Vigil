
vigil.exe:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000350 <.interp>:
 350:	2f                   	(bad)  
 351:	6c                   	ins    BYTE PTR es:[rdi],dx
 352:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 359:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 35e:	78 2d                	js     38d <buffer.4704+0x30d>
 360:	78 38                	js     39a <buffer.4704+0x31a>
 362:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 368:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 369:	2e 32 00             	xor    al,BYTE PTR cs:[rax]

Disassembly of section .note.gnu.property:

0000000000000370 <.note.gnu.property>:
 370:	04 00                	add    al,0x0
 372:	00 00                	add    BYTE PTR [rax],al
 374:	10 00                	adc    BYTE PTR [rax],al
 376:	00 00                	add    BYTE PTR [rax],al
 378:	05 00 00 00 47       	add    eax,0x47000000
 37d:	4e 55                	rex.WRX push rbp
 37f:	00 02                	add    BYTE PTR [rdx],al
 381:	00 00                	add    BYTE PTR [rax],al
 383:	c0 04 00 00          	rol    BYTE PTR [rax+rax*1],0x0
 387:	00 03                	add    BYTE PTR [rbx],al
 389:	00 00                	add    BYTE PTR [rax],al
 38b:	00 00                	add    BYTE PTR [rax],al
 38d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000000390 <.note.gnu.build-id>:
 390:	04 00                	add    al,0x0
 392:	00 00                	add    BYTE PTR [rax],al
 394:	14 00                	adc    al,0x0
 396:	00 00                	add    BYTE PTR [rax],al
 398:	03 00                	add    eax,DWORD PTR [rax]
 39a:	00 00                	add    BYTE PTR [rax],al
 39c:	47                   	rex.RXB
 39d:	4e 55                	rex.WRX push rbp
 39f:	00 2c 1a             	add    BYTE PTR [rdx+rbx*1],ch
 3a2:	0f 27                	(bad)  
 3a4:	31 0e                	xor    DWORD PTR [rsi],ecx
 3a6:	7f 9e                	jg     346 <buffer.4704+0x2c6>
 3a8:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
 3a9:	38 24 79             	cmp    BYTE PTR [rcx+rdi*2],ah
 3ac:	ee                   	out    dx,al
 3ad:	87 7a 12             	xchg   DWORD PTR [rdx+0x12],edi
 3b0:	bc                   	.byte 0xbc
 3b1:	27                   	(bad)  
 3b2:	82                   	(bad)  
 3b3:	c0                   	.byte 0xc0

Disassembly of section .note.ABI-tag:

00000000000003b4 <.note.ABI-tag>:
 3b4:	04 00                	add    al,0x0
 3b6:	00 00                	add    BYTE PTR [rax],al
 3b8:	10 00                	adc    BYTE PTR [rax],al
 3ba:	00 00                	add    BYTE PTR [rax],al
 3bc:	01 00                	add    DWORD PTR [rax],eax
 3be:	00 00                	add    BYTE PTR [rax],al
 3c0:	47                   	rex.RXB
 3c1:	4e 55                	rex.WRX push rbp
 3c3:	00 00                	add    BYTE PTR [rax],al
 3c5:	00 00                	add    BYTE PTR [rax],al
 3c7:	00 03                	add    BYTE PTR [rbx],al
 3c9:	00 00                	add    BYTE PTR [rax],al
 3cb:	00 02                	add    BYTE PTR [rdx],al
 3cd:	00 00                	add    BYTE PTR [rax],al
 3cf:	00 00                	add    BYTE PTR [rax],al
 3d1:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .gnu.hash:

00000000000003d8 <.gnu.hash>:
 3d8:	03 00                	add    eax,DWORD PTR [rax]
 3da:	00 00                	add    BYTE PTR [rax],al
 3dc:	4a 00 00             	rex.WX add BYTE PTR [rax],al
 3df:	00 01                	add    BYTE PTR [rcx],al
 3e1:	00 00                	add    BYTE PTR [rax],al
 3e3:	00 06                	add    BYTE PTR [rsi],al
 3e5:	00 00                	add    BYTE PTR [rax],al
 3e7:	00 00                	add    BYTE PTR [rax],al
 3e9:	14 81                	adc    al,0x81
 3eb:	00 00                	add    BYTE PTR [rax],al
 3ed:	01 14 00             	add    DWORD PTR [rax+rax*1],edx
 3f0:	4a 00 00             	rex.WX add BYTE PTR [rax],al
 3f3:	00 00                	add    BYTE PTR [rax],al
 3f5:	00 00                	add    BYTE PTR [rax],al
 3f7:	00 4c 00 00          	add    BYTE PTR [rax+rax*1+0x0],cl
 3fb:	00 28                	add    BYTE PTR [rax],ch
 3fd:	1d 8c 1c d1 65       	sbb    eax,0x65d11c8c
 402:	ce                   	(bad)  
 403:	6d                   	ins    DWORD PTR es:[rdi],dx
 404:	b2 a2                	mov    dl,0xa2
 406:	f7 12                	not    DWORD PTR [rdx]
 408:	33                   	.byte 0x33
 409:	b3 f0                	mov    bl,0xf0
 40b:	a9                   	.byte 0xa9

Disassembly of section .dynsym:

0000000000000410 <.dynsym>:
	...
 428:	d2 00                	rol    BYTE PTR [rax],cl
 42a:	00 00                	add    BYTE PTR [rax],al
 42c:	12 00                	adc    al,BYTE PTR [rax]
	...
 43e:	00 00                	add    BYTE PTR [rax],al
 440:	da 01                	fiadd  DWORD PTR [rcx]
 442:	00 00                	add    BYTE PTR [rax],al
 444:	12 00                	adc    al,BYTE PTR [rax]
	...
 456:	00 00                	add    BYTE PTR [rax],al
 458:	97                   	xchg   edi,eax
 459:	00 00                	add    BYTE PTR [rax],al
 45b:	00 12                	add    BYTE PTR [rdx],dl
	...
 46d:	00 00                	add    BYTE PTR [rax],al
 46f:	00 84 02 00 00 12 00 	add    BYTE PTR [rdx+rax*1+0x120000],al
	...
 486:	00 00                	add    BYTE PTR [rax],al
 488:	c1 01 00             	rol    DWORD PTR [rcx],0x0
 48b:	00 12                	add    BYTE PTR [rdx],dl
	...
 49d:	00 00                	add    BYTE PTR [rax],al
 49f:	00 a3 01 00 00 12    	add    BYTE PTR [rbx+0x12000001],ah
	...
 4b5:	00 00                	add    BYTE PTR [rax],al
 4b7:	00 10                	add    BYTE PTR [rax],dl
 4b9:	00 00                	add    BYTE PTR [rax],al
 4bb:	00 20                	add    BYTE PTR [rax],ah
	...
 4cd:	00 00                	add    BYTE PTR [rax],al
 4cf:	00 75 01             	add    BYTE PTR [rbp+0x1],dh
 4d2:	00 00                	add    BYTE PTR [rax],al
 4d4:	12 00                	adc    al,BYTE PTR [rax]
	...
 4e6:	00 00                	add    BYTE PTR [rax],al
 4e8:	0e                   	(bad)  
 4e9:	01 00                	add    DWORD PTR [rax],eax
 4eb:	00 12                	add    BYTE PTR [rdx],dl
	...
 4fd:	00 00                	add    BYTE PTR [rax],al
 4ff:	00 4b 01             	add    BYTE PTR [rbx+0x1],cl
 502:	00 00                	add    BYTE PTR [rax],al
 504:	12 00                	adc    al,BYTE PTR [rax]
	...
 516:	00 00                	add    BYTE PTR [rax],al
 518:	31 02                	xor    DWORD PTR [rdx],eax
 51a:	00 00                	add    BYTE PTR [rax],al
 51c:	12 00                	adc    al,BYTE PTR [rax]
	...
 52e:	00 00                	add    BYTE PTR [rax],al
 530:	3d 02 00 00 12       	cmp    eax,0x12000002
	...
 545:	00 00                	add    BYTE PTR [rax],al
 547:	00 c2                	add    dl,al
 549:	02 00                	add    al,BYTE PTR [rax]
 54b:	00 12                	add    BYTE PTR [rdx],dl
	...
 55d:	00 00                	add    BYTE PTR [rax],al
 55f:	00 d7                	add    bh,dl
 561:	00 00                	add    BYTE PTR [rax],al
 563:	00 12                	add    BYTE PTR [rdx],dl
	...
 575:	00 00                	add    BYTE PTR [rax],al
 577:	00 f2                	add    dl,dh
 579:	00 00                	add    BYTE PTR [rax],al
 57b:	00 12                	add    BYTE PTR [rdx],dl
	...
 58d:	00 00                	add    BYTE PTR [rax],al
 58f:	00 36                	add    BYTE PTR [rsi],dh
 591:	02 00                	add    al,BYTE PTR [rax]
 593:	00 12                	add    BYTE PTR [rdx],dl
	...
 5a5:	00 00                	add    BYTE PTR [rax],al
 5a7:	00 56 02             	add    BYTE PTR [rsi+0x2],dl
 5aa:	00 00                	add    BYTE PTR [rax],al
 5ac:	12 00                	adc    al,BYTE PTR [rax]
	...
 5be:	00 00                	add    BYTE PTR [rax],al
 5c0:	f7 01 00 00 12 00    	test   DWORD PTR [rcx],0x120000
	...
 5d6:	00 00                	add    BYTE PTR [rax],al
 5d8:	7a 02                	jp     5dc <buffer.4704+0x55c>
 5da:	00 00                	add    BYTE PTR [rax],al
 5dc:	12 00                	adc    al,BYTE PTR [rax]
	...
 5ee:	00 00                	add    BYTE PTR [rax],al
 5f0:	c9                   	leave  
 5f1:	01 00                	add    DWORD PTR [rax],eax
 5f3:	00 12                	add    BYTE PTR [rdx],dl
	...
 605:	00 00                	add    BYTE PTR [rax],al
 607:	00 8f 01 00 00 12    	add    BYTE PTR [rdi+0x12000001],cl
	...
 61d:	00 00                	add    BYTE PTR [rax],al
 61f:	00 7e 00             	add    BYTE PTR [rsi+0x0],bh
 622:	00 00                	add    BYTE PTR [rax],al
 624:	12 00                	adc    al,BYTE PTR [rax]
	...
 636:	00 00                	add    BYTE PTR [rax],al
 638:	8e 02                	mov    es,WORD PTR [rdx]
 63a:	00 00                	add    BYTE PTR [rax],al
 63c:	12 00                	adc    al,BYTE PTR [rax]
	...
 64e:	00 00                	add    BYTE PTR [rax],al
 650:	96                   	xchg   esi,eax
 651:	02 00                	add    al,BYTE PTR [rax]
 653:	00 12                	add    BYTE PTR [rdx],dl
	...
 665:	00 00                	add    BYTE PTR [rax],al
 667:	00 f9                	add    cl,bh
 669:	02 00                	add    al,BYTE PTR [rax]
 66b:	00 12                	add    BYTE PTR [rdx],dl
	...
 67d:	00 00                	add    BYTE PTR [rax],al
 67f:	00 30                	add    BYTE PTR [rax],dh
 681:	02 00                	add    al,BYTE PTR [rax]
 683:	00 12                	add    BYTE PTR [rdx],dl
	...
 695:	00 00                	add    BYTE PTR [rax],al
 697:	00 81 01 00 00 12    	add    BYTE PTR [rcx+0x12000001],al
	...
 6ad:	00 00                	add    BYTE PTR [rax],al
 6af:	00 fe                	add    dh,bh
 6b1:	01 00                	add    DWORD PTR [rax],eax
 6b3:	00 12                	add    BYTE PTR [rdx],dl
	...
 6c5:	00 00                	add    BYTE PTR [rax],al
 6c7:	00 6d 02             	add    BYTE PTR [rbp+0x2],ch
 6ca:	00 00                	add    BYTE PTR [rax],al
 6cc:	12 00                	adc    al,BYTE PTR [rax]
	...
 6de:	00 00                	add    BYTE PTR [rax],al
 6e0:	ec                   	in     al,dx
 6e1:	00 00                	add    BYTE PTR [rax],al
 6e3:	00 12                	add    BYTE PTR [rdx],dl
	...
 6f5:	00 00                	add    BYTE PTR [rax],al
 6f7:	00 5e 02             	add    BYTE PTR [rsi+0x2],bl
 6fa:	00 00                	add    BYTE PTR [rax],al
 6fc:	12 00                	adc    al,BYTE PTR [rax]
	...
 70e:	00 00                	add    BYTE PTR [rax],al
 710:	0c 02                	or     al,0x2
 712:	00 00                	add    BYTE PTR [rax],al
 714:	12 00                	adc    al,BYTE PTR [rax]
	...
 726:	00 00                	add    BYTE PTR [rax],al
 728:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
 729:	00 00                	add    BYTE PTR [rax],al
 72b:	00 12                	add    BYTE PTR [rdx],dl
	...
 73d:	00 00                	add    BYTE PTR [rax],al
 73f:	00 db                	add    bl,bl
 741:	02 00                	add    al,BYTE PTR [rax]
 743:	00 12                	add    BYTE PTR [rdx],dl
	...
 755:	00 00                	add    BYTE PTR [rax],al
 757:	00 36                	add    BYTE PTR [rsi],dh
 759:	01 00                	add    DWORD PTR [rax],eax
 75b:	00 12                	add    BYTE PTR [rdx],dl
	...
 76d:	00 00                	add    BYTE PTR [rax],al
 76f:	00 bb 00 00 00 12    	add    BYTE PTR [rbx+0x12000000],bh
	...
 785:	00 00                	add    BYTE PTR [rax],al
 787:	00 d4                	add    ah,dl
 789:	02 00                	add    al,BYTE PTR [rax]
 78b:	00 12                	add    BYTE PTR [rdx],dl
	...
 79d:	00 00                	add    BYTE PTR [rax],al
 79f:	00 ba 01 00 00 12    	add    BYTE PTR [rdx+0x12000001],bh
	...
 7b5:	00 00                	add    BYTE PTR [rax],al
 7b7:	00 95 02 00 00 12    	add    BYTE PTR [rbp+0x12000002],dl
	...
 7cd:	00 00                	add    BYTE PTR [rax],al
 7cf:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 7d2:	00 00                	add    BYTE PTR [rax],al
 7d4:	20 00                	and    BYTE PTR [rax],al
	...
 7e6:	00 00                	add    BYTE PTR [rax],al
 7e8:	f0 01 00             	lock add DWORD PTR [rax],eax
 7eb:	00 12                	add    BYTE PTR [rdx],dl
	...
 7fd:	00 00                	add    BYTE PTR [rax],al
 7ff:	00 e4                	add    ah,ah
 801:	00 00                	add    BYTE PTR [rax],al
 803:	00 12                	add    BYTE PTR [rdx],dl
	...
 815:	00 00                	add    BYTE PTR [rax],al
 817:	00 89 02 00 00 12    	add    BYTE PTR [rcx+0x12000002],cl
	...
 82d:	00 00                	add    BYTE PTR [rax],al
 82f:	00 87 01 00 00 12    	add    BYTE PTR [rdi+0x12000001],al
	...
 845:	00 00                	add    BYTE PTR [rax],al
 847:	00 28                	add    BYTE PTR [rax],ch
 849:	01 00                	add    DWORD PTR [rax],eax
 84b:	00 12                	add    BYTE PTR [rdx],dl
	...
 85d:	00 00                	add    BYTE PTR [rax],al
 85f:	00 55 00             	add    BYTE PTR [rbp+0x0],dl
 862:	00 00                	add    BYTE PTR [rax],al
 864:	12 00                	adc    al,BYTE PTR [rax]
	...
 876:	00 00                	add    BYTE PTR [rax],al
 878:	48 02 00             	rex.W add al,BYTE PTR [rax]
 87b:	00 12                	add    BYTE PTR [rdx],dl
	...
 88d:	00 00                	add    BYTE PTR [rax],al
 88f:	00 e2                	add    dl,ah
 891:	01 00                	add    DWORD PTR [rax],eax
 893:	00 12                	add    BYTE PTR [rdx],dl
	...
 8a5:	00 00                	add    BYTE PTR [rax],al
 8a7:	00 40 01             	add    BYTE PTR [rax+0x1],al
 8aa:	00 00                	add    BYTE PTR [rax],al
 8ac:	12 00                	adc    al,BYTE PTR [rax]
	...
 8be:	00 00                	add    BYTE PTR [rax],al
 8c0:	ab                   	stos   DWORD PTR es:[rdi],eax
 8c1:	01 00                	add    DWORD PTR [rax],eax
 8c3:	00 12                	add    BYTE PTR [rdx],dl
	...
 8d5:	00 00                	add    BYTE PTR [rax],al
 8d7:	00 f3                	add    bl,dh
 8d9:	02 00                	add    al,BYTE PTR [rax]
 8db:	00 12                	add    BYTE PTR [rdx],dl
	...
 8ed:	00 00                	add    BYTE PTR [rax],al
 8ef:	00 19                	add    BYTE PTR [rcx],bl
 8f1:	01 00                	add    DWORD PTR [rax],eax
 8f3:	00 12                	add    BYTE PTR [rdx],dl
	...
 905:	00 00                	add    BYTE PTR [rax],al
 907:	00 14 02             	add    BYTE PTR [rdx+rax*1],dl
 90a:	00 00                	add    BYTE PTR [rax],al
 90c:	12 00                	adc    al,BYTE PTR [rax]
	...
 91e:	00 00                	add    BYTE PTR [rax],al
 920:	9d                   	popf   
 921:	01 00                	add    DWORD PTR [rax],eax
 923:	00 12                	add    BYTE PTR [rdx],dl
	...
 935:	00 00                	add    BYTE PTR [rax],al
 937:	00 b3 01 00 00 12    	add    BYTE PTR [rbx+0x12000001],dh
	...
 94d:	00 00                	add    BYTE PTR [rax],al
 94f:	00 e9                	add    cl,ch
 951:	01 00                	add    DWORD PTR [rax],eax
 953:	00 12                	add    BYTE PTR [rdx],dl
	...
 965:	00 00                	add    BYTE PTR [rax],al
 967:	00 8a 00 00 00 12    	add    BYTE PTR [rdx+0x12000000],cl
	...
 97d:	00 00                	add    BYTE PTR [rax],al
 97f:	00 56 01             	add    BYTE PTR [rsi+0x1],dl
 982:	00 00                	add    BYTE PTR [rax],al
 984:	12 00                	adc    al,BYTE PTR [rax]
	...
 996:	00 00                	add    BYTE PTR [rax],al
 998:	22 02                	and    al,BYTE PTR [rdx]
 99a:	00 00                	add    BYTE PTR [rax],al
 99c:	12 00                	adc    al,BYTE PTR [rax]
	...
 9ae:	00 00                	add    BYTE PTR [rax],al
 9b0:	83 00 00             	add    DWORD PTR [rax],0x0
 9b3:	00 12                	add    BYTE PTR [rdx],dl
	...
 9c5:	00 00                	add    BYTE PTR [rax],al
 9c7:	00 75 02             	add    BYTE PTR [rbp+0x2],dh
 9ca:	00 00                	add    BYTE PTR [rax],al
 9cc:	12 00                	adc    al,BYTE PTR [rax]
	...
 9de:	00 00                	add    BYTE PTR [rax],al
 9e0:	9d                   	popf   
 9e1:	02 00                	add    al,BYTE PTR [rax]
 9e3:	00 12                	add    BYTE PTR [rdx],dl
	...
 9f5:	00 00                	add    BYTE PTR [rax],al
 9f7:	00 4f 02             	add    BYTE PTR [rdi+0x2],cl
 9fa:	00 00                	add    BYTE PTR [rax],al
 9fc:	12 00                	adc    al,BYTE PTR [rax]
	...
 a0e:	00 00                	add    BYTE PTR [rax],al
 a10:	5f                   	pop    rdi
 a11:	00 00                	add    BYTE PTR [rax],al
 a13:	00 12                	add    BYTE PTR [rdx],dl
	...
 a25:	00 00                	add    BYTE PTR [rax],al
 a27:	00 ca                	add    dl,cl
 a29:	00 00                	add    BYTE PTR [rax],al
 a2b:	00 12                	add    BYTE PTR [rdx],dl
	...
 a3d:	00 00                	add    BYTE PTR [rax],al
 a3f:	00 95 01 00 00 12    	add    BYTE PTR [rbp+0x12000001],dl
	...
 a55:	00 00                	add    BYTE PTR [rax],al
 a57:	00 7c 01 00          	add    BYTE PTR [rcx+rax*1+0x0],bh
 a5b:	00 12                	add    BYTE PTR [rdx],dl
	...
 a6d:	00 00                	add    BYTE PTR [rax],al
 a6f:	00 3b                	add    BYTE PTR [rbx],bh
 a71:	00 00                	add    BYTE PTR [rax],al
 a73:	00 20                	add    BYTE PTR [rax],ah
	...
 a85:	00 00                	add    BYTE PTR [rax],al
 a87:	00 ed                	add    ch,ch
 a89:	02 00                	add    al,BYTE PTR [rax]
 a8b:	00 12                	add    BYTE PTR [rdx],dl
	...
 a9d:	00 00                	add    BYTE PTR [rax],al
 a9f:	00 a5 02 00 00 12    	add    BYTE PTR [rbp+0x12000002],ah
	...
 ab5:	00 00                	add    BYTE PTR [rax],al
 ab7:	00 19                	add    BYTE PTR [rcx],bl
 ab9:	02 00                	add    al,BYTE PTR [rax]
 abb:	00 12                	add    BYTE PTR [rdx],dl
	...
 acd:	00 00                	add    BYTE PTR [rax],al
 acf:	00 05 02 00 00 12    	add    BYTE PTR [rip+0x12000002],al        # 12000ad7 <_end+0x11ec5697>
	...
 ae5:	00 00                	add    BYTE PTR [rax],al
 ae7:	00 6e 01             	add    BYTE PTR [rsi+0x1],ch
 aea:	00 00                	add    BYTE PTR [rax],al
 aec:	12 00                	adc    al,BYTE PTR [rax]
	...
 afe:	00 00                	add    BYTE PTR [rax],al
 b00:	29 02                	sub    DWORD PTR [rdx],eax
 b02:	00 00                	add    BYTE PTR [rax],al
 b04:	11 00                	adc    DWORD PTR [rax],eax
 b06:	1b 00                	sbb    eax,DWORD PTR [rax]
 b08:	60                   	(bad)  
 b09:	10 01                	adc    BYTE PTR [rcx],al
 b0b:	00 00                	add    BYTE PTR [rax],al
 b0d:	00 00                	add    BYTE PTR [rax],al
 b0f:	00 08                	add    BYTE PTR [rax],cl
 b11:	00 00                	add    BYTE PTR [rax],al
 b13:	00 00                	add    BYTE PTR [rax],al
 b15:	00 00                	add    BYTE PTR [rax],al
 b17:	00 ab 02 00 00 22    	add    BYTE PTR [rbx+0x22000002],ch
	...
 b2d:	00 00                	add    BYTE PTR [rax],al
 b2f:	00 66 02             	add    BYTE PTR [rsi+0x2],ah
 b32:	00 00                	add    BYTE PTR [rax],al
 b34:	11 00                	adc    DWORD PTR [rax],eax
 b36:	1b 00                	sbb    eax,DWORD PTR [rax]
 b38:	68 10 01 00 00       	push   0x110
 b3d:	00 00                	add    BYTE PTR [rax],al
 b3f:	00 08                	add    BYTE PTR [rax],cl
 b41:	00 00                	add    BYTE PTR [rax],al
 b43:	00 00                	add    BYTE PTR [rax],al
 b45:	00 00                	add    BYTE PTR [rax],al
 b47:	00 ba 02 00 00 12    	add    BYTE PTR [rdx+0x12000002],bh
 b4d:	00 10                	add    BYTE PTR [rax],dl
 b4f:	00 66 96             	add    BYTE PTR [rsi-0x6a],ah
 b52:	00 00                	add    BYTE PTR [rax],al
 b54:	00 00                	add    BYTE PTR [rax],al
 b56:	00 00                	add    BYTE PTR [rax],al
 b58:	3b 01                	cmp    eax,DWORD PTR [rcx]
 b5a:	00 00                	add    BYTE PTR [rax],al
 b5c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynstr:

0000000000000b60 <.dynstr>:
 b60:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 b64:	70 63                	jo     bc9 <buffer.4704+0xb49>
 b66:	61                   	(bad)  
 b67:	70 2e                	jo     b97 <buffer.4704+0xb17>
 b69:	73 6f                	jae    bda <buffer.4704+0xb5a>
 b6b:	2e 30 2e             	xor    BYTE PTR cs:[rsi],ch
 b6e:	38 00                	cmp    BYTE PTR [rax],al
 b70:	5f                   	pop    rdi
 b71:	49 54                	rex.WB push r12
 b73:	4d 5f                	rex.WRB pop r15
 b75:	64 65 72 65          	fs gs jb bde <buffer.4704+0xb5e>
 b79:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 b80:	4d 
 b81:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 b83:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b84:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b85:	65 54                	gs push rsp
 b87:	61                   	(bad)  
 b88:	62                   	(bad)  
 b89:	6c                   	ins    BYTE PTR es:[rdi],dx
 b8a:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
 b8e:	67 6d                	ins    DWORD PTR es:[edi],dx
 b90:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b91:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b92:	5f                   	pop    rdi
 b93:	73 74                	jae    c09 <buffer.4704+0xb89>
 b95:	61                   	(bad)  
 b96:	72 74                	jb     c0c <buffer.4704+0xb8c>
 b98:	5f                   	pop    rdi
 b99:	5f                   	pop    rdi
 b9a:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 b9d:	54                   	push   rsp
 b9e:	4d 5f                	rex.WRB pop r15
 ba0:	72 65                	jb     c07 <buffer.4704+0xb87>
 ba2:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 ba9:	4d 
 baa:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 bac:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bad:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 bae:	65 54                	gs push rsp
 bb0:	61                   	(bad)  
 bb1:	62                   	(bad)  
 bb2:	6c                   	ins    BYTE PTR es:[rdi],dx
 bb3:	65 00 70 63          	add    BYTE PTR gs:[rax+0x63],dh
 bb7:	61                   	(bad)  
 bb8:	70 5f                	jo     c19 <buffer.4704+0xb99>
 bba:	6c                   	ins    BYTE PTR es:[rdi],dx
 bbb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bbc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bbd:	70 00                	jo     bbf <buffer.4704+0xb3f>
 bbf:	70 63                	jo     c24 <buffer.4704+0xba4>
 bc1:	61                   	(bad)  
 bc2:	70 5f                	jo     c23 <buffer.4704+0xba3>
 bc4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bc5:	70 65                	jo     c2c <buffer.4704+0xbac>
 bc7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 bc8:	5f                   	pop    rdi
 bc9:	6c                   	ins    BYTE PTR es:[rdi],dx
 bca:	69 76 65 00 6c 69 62 	imul   esi,DWORD PTR [rsi+0x65],0x62696c00
 bd1:	70 74                	jo     c47 <buffer.4704+0xbc7>
 bd3:	68 72 65 61 64       	push   0x64616572
 bd8:	2e 73 6f             	cs jae c4a <buffer.4704+0xbca>
 bdb:	2e 30 00             	xor    BYTE PTR cs:[rax],al
 bde:	73 65                	jae    c45 <buffer.4704+0xbc5>
 be0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 be1:	64 00 61 63          	add    BYTE PTR fs:[rcx+0x63],ah
 be5:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
 be8:	74 00                	je     bea <buffer.4704+0xb6a>
 bea:	70 74                	jo     c60 <buffer.4704+0xbe0>
 bec:	68 72 65 61 64       	push   0x64616572
 bf1:	5f                   	pop    rdi
 bf2:	6a 6f                	push   0x6f
 bf4:	69 6e 00 70 74 68 72 	imul   ebp,DWORD PTR [rsi+0x0],0x72687470
 bfb:	65 61                	gs (bad) 
 bfd:	64 5f                	fs pop rdi
 bff:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
 c02:	61                   	(bad)  
 c03:	74 65                	je     c6a <buffer.4704+0xbea>
 c05:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
 c08:	61                   	(bad)  
 c09:	64 00 6c 69 62       	add    BYTE PTR fs:[rcx+rbp*2+0x62],ch
 c0e:	73 71                	jae    c81 <buffer.4704+0xc01>
 c10:	6c                   	ins    BYTE PTR es:[rdi],dx
 c11:	69 74 65 33 2e 73 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x2e6f732e
 c18:	2e 
 c19:	30 00                	xor    BYTE PTR [rax],al
 c1b:	73 71                	jae    c8e <buffer.4704+0xc0e>
 c1d:	6c                   	ins    BYTE PTR es:[rdi],dx
 c1e:	69 74 65 33 5f 65 72 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x7272655f
 c25:	72 
 c26:	6d                   	ins    DWORD PTR es:[rdi],dx
 c27:	73 67                	jae    c90 <buffer.4704+0xc10>
 c29:	00 73 71             	add    BYTE PTR [rbx+0x71],dh
 c2c:	6c                   	ins    BYTE PTR es:[rdi],dx
 c2d:	69 74 65 33 5f 66 72 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6572665f
 c34:	65 
 c35:	65 00 73 71          	add    BYTE PTR gs:[rbx+0x71],dh
 c39:	6c                   	ins    BYTE PTR es:[rdi],dx
 c3a:	69 74 65 33 5f 65 78 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6578655f
 c41:	65 
 c42:	63 00                	movsxd eax,DWORD PTR [rax]
 c44:	73 71                	jae    cb7 <buffer.4704+0xc37>
 c46:	6c                   	ins    BYTE PTR es:[rdi],dx
 c47:	69 74 65 33 5f 63 6c 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6f6c635f
 c4e:	6f 
 c4f:	73 65                	jae    cb6 <buffer.4704+0xc36>
 c51:	00 73 71             	add    BYTE PTR [rbx+0x71],dh
 c54:	6c                   	ins    BYTE PTR es:[rdi],dx
 c55:	69 74 65 33 5f 6f 70 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x65706f5f
 c5c:	65 
 c5d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c5e:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 c62:	6c                   	ins    BYTE PTR es:[rdi],dx
 c63:	75 61                	jne    cc6 <buffer.4704+0xc46>
 c65:	35 2e 33 2e 73       	xor    eax,0x732e332e
 c6a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c6b:	2e 30 00             	xor    BYTE PTR cs:[rax],al
 c6e:	6c                   	ins    BYTE PTR es:[rdi],dx
 c6f:	75 61                	jne    cd2 <buffer.4704+0xc52>
 c71:	5f                   	pop    rdi
 c72:	73 65                	jae    cd9 <buffer.4704+0xc59>
 c74:	74 74                	je     cea <buffer.4704+0xc6a>
 c76:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c77:	70 00                	jo     c79 <buffer.4704+0xbf9>
 c79:	6c                   	ins    BYTE PTR es:[rdi],dx
 c7a:	75 61                	jne    cdd <buffer.4704+0xc5d>
 c7c:	4c 5f                	rex.WR pop rdi
 c7e:	6c                   	ins    BYTE PTR es:[rdi],dx
 c7f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c80:	61                   	(bad)  
 c81:	64 66 69 6c 65 78 00 	imul   bp,WORD PTR fs:[rbp+riz*2+0x78],0x6c00
 c88:	6c 
 c89:	75 61                	jne    cec <buffer.4704+0xc6c>
 c8b:	4c 5f                	rex.WR pop rdi
 c8d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c8e:	65 77 73             	gs ja  d04 <buffer.4704+0xc84>
 c91:	74 61                	je     cf4 <buffer.4704+0xc74>
 c93:	74 65                	je     cfa <buffer.4704+0xc7a>
 c95:	00 6c 75 61          	add    BYTE PTR [rbp+rsi*2+0x61],ch
 c99:	5f                   	pop    rdi
 c9a:	63 6c 6f 73          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
 c9e:	65 00 6c 75 61       	add    BYTE PTR gs:[rbp+rsi*2+0x61],ch
 ca3:	5f                   	pop    rdi
 ca4:	70 63                	jo     d09 <buffer.4704+0xc89>
 ca6:	61                   	(bad)  
 ca7:	6c                   	ins    BYTE PTR es:[rdi],dx
 ca8:	6c                   	ins    BYTE PTR es:[rdi],dx
 ca9:	6b 00 6c             	imul   eax,DWORD PTR [rax],0x6c
 cac:	75 61                	jne    d0f <buffer.4704+0xc8f>
 cae:	5f                   	pop    rdi
 caf:	67 65 74 74          	addr32 gs je d27 <buffer.4704+0xca7>
 cb3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 cb4:	70 00                	jo     cb6 <buffer.4704+0xc36>
 cb6:	6c                   	ins    BYTE PTR es:[rdi],dx
 cb7:	75 61                	jne    d1a <buffer.4704+0xc9a>
 cb9:	4c 5f                	rex.WR pop rdi
 cbb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 cbc:	70 65                	jo     d23 <buffer.4704+0xca3>
 cbe:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 cbf:	6c                   	ins    BYTE PTR es:[rdi],dx
 cc0:	69 62 73 00 6c 69 62 	imul   esp,DWORD PTR [rdx+0x73],0x62696c00
 cc7:	63 2e                	movsxd ebp,DWORD PTR [rsi]
 cc9:	73 6f                	jae    d3a <buffer.4704+0xcba>
 ccb:	2e 36 00 73 6f       	cs add BYTE PTR ss:[rbx+0x6f],dh
 cd0:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
 cd3:	74 00                	je     cd5 <buffer.4704+0xc55>
 cd5:	73 74                	jae    d4b <buffer.4704+0xccb>
 cd7:	72 63                	jb     d3c <buffer.4704+0xcbc>
 cd9:	70 79                	jo     d54 <buffer.4704+0xcd4>
 cdb:	00 65 78             	add    BYTE PTR [rbp+0x78],ah
 cde:	69 74 00 68 74 6f 6e 	imul   esi,DWORD PTR [rax+rax*1+0x68],0x6c6e6f74
 ce5:	6c 
 ce6:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
 ce9:	61                   	(bad)  
 cea:	64 64 69 72 00 68 74 	fs imul esi,DWORD PTR fs:[rdx+0x0],0x6e6f7468
 cf1:	6f 6e 
 cf3:	73 00                	jae    cf5 <buffer.4704+0xc75>
 cf5:	73 70                	jae    d67 <buffer.4704+0xce7>
 cf7:	72 69                	jb     d62 <buffer.4704+0xce2>
 cf9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 cfa:	74 66                	je     d62 <buffer.4704+0xce2>
 cfc:	00 66 6f             	add    BYTE PTR [rsi+0x6f],ah
 cff:	70 65                	jo     d66 <buffer.4704+0xce6>
 d01:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d02:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 d05:	72 6e                	jb     d75 <buffer.4704+0xcf5>
 d07:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
 d0a:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
 d0d:	67 65 78 65          	addr32 gs js d76 <buffer.4704+0xcf6>
 d11:	63 00                	movsxd eax,DWORD PTR [rax]
 d13:	70 65                	jo     d7a <buffer.4704+0xcfa>
 d15:	72 72                	jb     d89 <buffer.4704+0xd09>
 d17:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d18:	72 00                	jb     d1a <buffer.4704+0xc9a>
 d1a:	73 69                	jae    d85 <buffer.4704+0xd05>
 d1c:	67 6e                	outs   dx,BYTE PTR ds:[esi]
 d1e:	61                   	(bad)  
 d1f:	6c                   	ins    BYTE PTR es:[rdi],dx
 d20:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 d23:	72 6e                	jb     d93 <buffer.4704+0xd13>
 d25:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
 d28:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 d2b:	73 74                	jae    da1 <buffer.4704+0xd21>
 d2d:	61                   	(bad)  
 d2e:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 d31:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 d34:	5f                   	pop    rdi
 d35:	66 61                	data16 (bad) 
 d37:	69 6c 00 70 75 74 63 	imul   ebp,DWORD PTR [rax+rax*1+0x70],0x68637475
 d3e:	68 
 d3f:	61                   	(bad)  
 d40:	72 00                	jb     d42 <buffer.4704+0xcc2>
 d42:	6c                   	ins    BYTE PTR es:[rdi],dx
 d43:	69 73 74 65 6e 00 73 	imul   esi,DWORD PTR [rbx+0x74],0x73006e65
 d4a:	74 72                	je     dbe <buffer.4704+0xd3e>
 d4c:	74 6f                	je     dbd <buffer.4704+0xd3d>
 d4e:	6b 00 73             	imul   eax,DWORD PTR [rax],0x73
 d51:	74 72                	je     dc5 <buffer.4704+0xd45>
 d53:	74 6f                	je     dc4 <buffer.4704+0xd44>
 d55:	6c                   	ins    BYTE PTR es:[rdi],dx
 d56:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 d59:	72 6c                	jb     dc7 <buffer.4704+0xd47>
 d5b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 d5d:	00 6d 65             	add    BYTE PTR [rbp+0x65],ch
 d60:	6d                   	ins    DWORD PTR es:[rdi],dx
 d61:	73 65                	jae    dc8 <buffer.4704+0xd48>
 d63:	74 00                	je     d65 <buffer.4704+0xce5>
 d65:	73 74                	jae    ddb <buffer.4704+0xd5b>
 d67:	72 73                	jb     ddc <buffer.4704+0xd5c>
 d69:	74 72                	je     ddd <buffer.4704+0xd5d>
 d6b:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 d6e:	72 63                	jb     dd3 <buffer.4704+0xd53>
 d70:	73 70                	jae    de2 <buffer.4704+0xd62>
 d72:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d73:	00 62 69             	add    BYTE PTR [rdx+0x69],ah
 d76:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d77:	64 00 67 65          	add    BYTE PTR fs:[rdi+0x65],ah
 d7b:	74 64                	je     de1 <buffer.4704+0xd61>
 d7d:	65 6c                	gs ins BYTE PTR es:[rdi],dx
 d7f:	69 6d 00 67 65 74 6f 	imul   ebp,DWORD PTR [rbp+0x0],0x6f746567
 d86:	70 74                	jo     dfc <buffer.4704+0xd7c>
 d88:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 d8b:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
 d8d:	75 74                	jne    e03 <buffer.4704+0xd83>
 d8f:	00 66 70             	add    BYTE PTR [rsi+0x70],ah
 d92:	75 74                	jne    e08 <buffer.4704+0xd88>
 d94:	73 00                	jae    d96 <buffer.4704+0xd16>
 d96:	66 63 6c 6f 73       	movsxd bp,DWORD PTR [rdi+rbp*2+0x73]
 d9b:	65 00 73 65          	add    BYTE PTR gs:[rbx+0x65],dh
 d9f:	74 73                	je     e14 <buffer.4704+0xd94>
 da1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 da2:	63 6b 6f             	movsxd ebp,DWORD PTR [rbx+0x6f]
 da5:	70 74                	jo     e1b <buffer.4704+0xd9b>
 da7:	00 6d 61             	add    BYTE PTR [rbp+0x61],ch
 daa:	6c                   	ins    BYTE PTR es:[rdi],dx
 dab:	6c                   	ins    BYTE PTR es:[rdi],dx
 dac:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 dad:	63 00                	movsxd eax,DWORD PTR [rax]
 daf:	73 74                	jae    e25 <buffer.4704+0xda5>
 db1:	72 63                	jb     e16 <buffer.4704+0xd96>
 db3:	61                   	(bad)  
 db4:	74 00                	je     db6 <buffer.4704+0xd36>
 db6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 db7:	70 65                	jo     e1e <buffer.4704+0xd9e>
 db9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 dba:	64 69 72 00 72 65 67 	imul   esi,DWORD PTR fs:[rdx+0x0],0x63676572
 dc1:	63 
 dc2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 dc3:	6d                   	ins    DWORD PTR es:[rdi],dx
 dc4:	70 00                	jo     dc6 <buffer.4704+0xd46>
 dc6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 dc7:	70 74                	jo     e3d <buffer.4704+0xdbd>
 dc9:	61                   	(bad)  
 dca:	72 67                	jb     e33 <buffer.4704+0xdb3>
 dcc:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 dcf:	72 6e                	jb     e3f <buffer.4704+0xdbf>
 dd1:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
 dd4:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
 dd7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 dd8:	69 00 62 61 63 6b    	imul   eax,DWORD PTR [rax],0x6b636162
 dde:	74 72                	je     e52 <buffer.4704+0xdd2>
 de0:	61                   	(bad)  
 de1:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
 de4:	6c                   	ins    BYTE PTR es:[rdi],dx
 de5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 de6:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
 de9:	74 69                	je     e54 <buffer.4704+0xdd4>
 deb:	6d                   	ins    DWORD PTR es:[rdi],dx
 dec:	65 00 73 74          	add    BYTE PTR gs:[rbx+0x74],dh
 df0:	72 63                	jb     e55 <buffer.4704+0xdd5>
 df2:	68 72 00 66 70       	push   0x70660072
 df7:	72 69                	jb     e62 <buffer.4704+0xde2>
 df9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 dfa:	74 66                	je     e62 <buffer.4704+0xde2>
 dfc:	00 67 65             	add    BYTE PTR [rdi+0x65],ah
 dff:	74 6c                	je     e6d <buffer.4704+0xded>
 e01:	69 6e 65 00 73 6c 65 	imul   ebp,DWORD PTR [rsi+0x65],0x656c7300
 e08:	65 70 00             	gs jo  e0b <buffer.4704+0xd8b>
 e0b:	5f                   	pop    rdi
 e0c:	5f                   	pop    rdi
 e0d:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
 e10:	5f                   	pop    rdi
 e11:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 e17:	7a 65                	jp     e7e <buffer.4704+0xdfe>
 e19:	00 69 73             	add    BYTE PTR [rcx+0x73],ch
 e1c:	64 69 67 69 74 00 62 	imul   esp,DWORD PTR fs:[rdi+0x69],0x61620074
 e23:	61 
 e24:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
 e27:	72 61                	jb     e8a <buffer.4704+0xe0a>
 e29:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
 e2c:	73 79                	jae    ea7 <buffer.4704+0xe27>
 e2e:	6d                   	ins    DWORD PTR es:[rdi],dx
 e2f:	62                   	(bad)  
 e30:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 e31:	6c                   	ins    BYTE PTR es:[rdi],dx
 e32:	73 00                	jae    e34 <buffer.4704+0xdb4>
 e34:	73 74                	jae    eaa <buffer.4704+0xe2a>
 e36:	72 63                	jb     e9b <buffer.4704+0xe1b>
 e38:	6d                   	ins    DWORD PTR es:[rdi],dx
 e39:	70 00                	jo     e3b <buffer.4704+0xdbb>
 e3b:	5f                   	pop    rdi
 e3c:	5f                   	pop    rdi
 e3d:	6c                   	ins    BYTE PTR es:[rdi],dx
 e3e:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 e45:	72 74                	jb     ebb <buffer.4704+0xe3b>
 e47:	5f                   	pop    rdi
 e48:	6d                   	ins    DWORD PTR es:[rdi],dx
 e49:	61                   	(bad)  
 e4a:	69 6e 00 6e 74 6f 68 	imul   ebp,DWORD PTR [rsi+0x0],0x686f746e
 e51:	6c                   	ins    BYTE PTR es:[rdi],dx
 e52:	00 6e 74             	add    BYTE PTR [rsi+0x74],ch
 e55:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 e56:	68 73 00 73 6e       	push   0x6e730073
 e5b:	70 72                	jo     ecf <buffer.4704+0xe4f>
 e5d:	69 6e 74 66 00 4c 55 	imul   ebp,DWORD PTR [rsi+0x74],0x554c0066
 e64:	41 5f                	pop    r15
 e66:	35 2e 33 00 47       	xor    eax,0x4700332e
 e6b:	4c                   	rex.WR
 e6c:	49                   	rex.WB
 e6d:	42                   	rex.X
 e6e:	43 5f                	rex.XB pop r15
 e70:	32 2e                	xor    ch,BYTE PTR [rsi]
 e72:	32 2e                	xor    ch,BYTE PTR [rsi]
 e74:	35 00 47 4c 49       	xor    eax,0x494c4700
 e79:	42                   	rex.X
 e7a:	43 5f                	rex.XB pop r15
 e7c:	32 2e                	xor    ch,BYTE PTR [rsi]
 e7e:	33 2e                	xor    ebp,DWORD PTR [rsi]
 e80:	34 00                	xor    al,0x0
 e82:	47                   	rex.RXB
 e83:	4c                   	rex.WR
 e84:	49                   	rex.WB
 e85:	42                   	rex.X
 e86:	43 5f                	rex.XB pop r15
 e88:	32 2e                	xor    ch,BYTE PTR [rsi]
 e8a:	34 00                	xor    al,0x0

Disassembly of section .gnu.version:

0000000000000e8c <.gnu.version>:
 e8c:	00 00                	add    BYTE PTR [rax],al
 e8e:	02 00                	add    al,BYTE PTR [rax]
 e90:	02 00                	add    al,BYTE PTR [rax]
 e92:	03 00                	add    eax,DWORD PTR [rax]
 e94:	02 00                	add    al,BYTE PTR [rax]
 e96:	02 00                	add    al,BYTE PTR [rax]
 e98:	02 00                	add    al,BYTE PTR [rax]
 e9a:	00 00                	add    BYTE PTR [rax],al
 e9c:	02 00                	add    al,BYTE PTR [rax]
 e9e:	04 00                	add    al,0x0
 ea0:	04 00                	add    al,0x0
 ea2:	02 00                	add    al,BYTE PTR [rax]
 ea4:	02 00                	add    al,BYTE PTR [rax]
 ea6:	02 00                	add    al,BYTE PTR [rax]
 ea8:	00 00                	add    BYTE PTR [rax],al
 eaa:	00 00                	add    BYTE PTR [rax],al
 eac:	02 00                	add    al,BYTE PTR [rax]
 eae:	02 00                	add    al,BYTE PTR [rax]
 eb0:	02 00                	add    al,BYTE PTR [rax]
 eb2:	02 00                	add    al,BYTE PTR [rax]
 eb4:	05 00 02 00 03       	add    eax,0x3000200
 eb9:	00 02                	add    BYTE PTR [rdx],al
 ebb:	00 02                	add    BYTE PTR [rdx],al
 ebd:	00 02                	add    BYTE PTR [rdx],al
 ebf:	00 02                	add    BYTE PTR [rdx],al
 ec1:	00 02                	add    BYTE PTR [rdx],al
 ec3:	00 02                	add    BYTE PTR [rdx],al
 ec5:	00 02                	add    BYTE PTR [rdx],al
 ec7:	00 03                	add    BYTE PTR [rbx],al
 ec9:	00 02                	add    BYTE PTR [rdx],al
 ecb:	00 02                	add    BYTE PTR [rdx],al
 ecd:	00 03                	add    BYTE PTR [rbx],al
 ecf:	00 02                	add    BYTE PTR [rdx],al
 ed1:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 ed4:	00 00                	add    BYTE PTR [rax],al
 ed6:	02 00                	add    al,BYTE PTR [rax]
 ed8:	02 00                	add    al,BYTE PTR [rax]
 eda:	02 00                	add    al,BYTE PTR [rax]
 edc:	00 00                	add    BYTE PTR [rax],al
 ede:	02 00                	add    al,BYTE PTR [rax]
 ee0:	00 00                	add    BYTE PTR [rax],al
 ee2:	02 00                	add    al,BYTE PTR [rax]
 ee4:	02 00                	add    al,BYTE PTR [rax]
 ee6:	04 00                	add    al,0x0
 ee8:	00 00                	add    BYTE PTR [rax],al
 eea:	02 00                	add    al,BYTE PTR [rax]
 eec:	02 00                	add    al,BYTE PTR [rax]
 eee:	04 00                	add    al,0x0
 ef0:	06                   	(bad)  
 ef1:	00 02                	add    BYTE PTR [rdx],al
 ef3:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 ef6:	02 00                	add    al,BYTE PTR [rax]
 ef8:	02 00                	add    al,BYTE PTR [rax]
 efa:	02 00                	add    al,BYTE PTR [rax]
 efc:	02 00                	add    al,BYTE PTR [rax]
 efe:	03 00                	add    eax,DWORD PTR [rax]
 f00:	04 00                	add    al,0x0
 f02:	02 00                	add    al,BYTE PTR [rax]
 f04:	03 00                	add    eax,DWORD PTR [rax]
 f06:	02 00                	add    al,BYTE PTR [rax]
 f08:	02 00                	add    al,BYTE PTR [rax]
 f0a:	02 00                	add    al,BYTE PTR [rax]
 f0c:	00 00                	add    BYTE PTR [rax],al
 f0e:	00 00                	add    BYTE PTR [rax],al
 f10:	02 00                	add    al,BYTE PTR [rax]
 f12:	02 00                	add    al,BYTE PTR [rax]
 f14:	00 00                	add    BYTE PTR [rax],al
 f16:	02 00                	add    al,BYTE PTR [rax]
 f18:	02 00                	add    al,BYTE PTR [rax]
 f1a:	02 00                	add    al,BYTE PTR [rax]
 f1c:	02 00                	add    al,BYTE PTR [rax]
 f1e:	02 00                	add    al,BYTE PTR [rax]
 f20:	02 00                	add    al,BYTE PTR [rax]
 f22:	02 00                	add    al,BYTE PTR [rax]
 f24:	02 00                	add    al,BYTE PTR [rax]
 f26:	01 00                	add    DWORD PTR [rax],eax

Disassembly of section .gnu.version_r:

0000000000000f28 <.gnu.version_r>:
 f28:	01 00                	add    DWORD PTR [rax],eax
 f2a:	01 00                	add    DWORD PTR [rax],eax
 f2c:	ff 00                	inc    DWORD PTR [rax]
 f2e:	00 00                	add    BYTE PTR [rax],al
 f30:	10 00                	adc    BYTE PTR [rax],al
 f32:	00 00                	add    BYTE PTR [rax],al
 f34:	20 00                	and    BYTE PTR [rax],al
 f36:	00 00                	add    BYTE PTR [rax],al
 f38:	43 28 97 01 00 00 04 	rex.XB sub BYTE PTR [r15+0x4000001],dl
 f3f:	00 02                	add    BYTE PTR [rdx],al
 f41:	03 00                	add    eax,DWORD PTR [rax]
 f43:	00 00                	add    BYTE PTR [rax],al
 f45:	00 00                	add    BYTE PTR [rax],al
 f47:	00 01                	add    BYTE PTR [rcx],al
 f49:	00 01                	add    BYTE PTR [rcx],al
 f4b:	00 6e 00             	add    BYTE PTR [rsi+0x0],ch
 f4e:	00 00                	add    BYTE PTR [rax],al
 f50:	10 00                	adc    BYTE PTR [rax],al
 f52:	00 00                	add    BYTE PTR [rax],al
 f54:	20 00                	and    BYTE PTR [rax],al
 f56:	00 00                	add    BYTE PTR [rax],al
 f58:	75 1a                	jne    f74 <buffer.4704+0xef4>
 f5a:	69 09 00 00 03 00    	imul   ecx,DWORD PTR [rcx],0x30000
 f60:	0a 03                	or     al,BYTE PTR [rbx]
 f62:	00 00                	add    BYTE PTR [rax],al
 f64:	00 00                	add    BYTE PTR [rax],al
 f66:	00 00                	add    BYTE PTR [rax],al
 f68:	01 00                	add    DWORD PTR [rax],eax
 f6a:	03 00                	add    eax,DWORD PTR [rax]
 f6c:	64 01 00             	add    DWORD PTR fs:[rax],eax
 f6f:	00 10                	add    BYTE PTR [rax],dl
 f71:	00 00                	add    BYTE PTR [rax],al
 f73:	00 00                	add    BYTE PTR [rax],al
 f75:	00 00                	add    BYTE PTR [rax],al
 f77:	00 74 19 69          	add    BYTE PTR [rcx+rbx*1+0x69],dh
 f7b:	09 00                	or     DWORD PTR [rax],eax
 f7d:	00 06                	add    BYTE PTR [rsi],al
 f7f:	00 16                	add    BYTE PTR [rsi],dl
 f81:	03 00                	add    eax,DWORD PTR [rax]
 f83:	00 10                	add    BYTE PTR [rax],dl
 f85:	00 00                	add    BYTE PTR [rax],al
 f87:	00 14 69             	add    BYTE PTR [rcx+rbp*2],dl
 f8a:	69 0d 00 00 05 00 22 	imul   ecx,DWORD PTR [rip+0x50000],0x322        # 50f94 <rules+0x3fef4>
 f91:	03 00 00 
 f94:	10 00                	adc    BYTE PTR [rax],al
 f96:	00 00                	add    BYTE PTR [rax],al
 f98:	75 1a                	jne    fb4 <buffer.4704+0xf34>
 f9a:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
 fa0:	0a 03                	or     al,BYTE PTR [rbx]
 fa2:	00 00                	add    BYTE PTR [rax],al
 fa4:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000000fa8 <.rela.dyn>:
     fa8:	58                   	pop    rax
     fa9:	0b 01                	or     eax,DWORD PTR [rcx]
     fab:	00 00                	add    BYTE PTR [rax],al
     fad:	00 00                	add    BYTE PTR [rax],al
     faf:	00 08                	add    BYTE PTR [rax],cl
     fb1:	00 00                	add    BYTE PTR [rax],al
     fb3:	00 00                	add    BYTE PTR [rax],al
     fb5:	00 00                	add    BYTE PTR [rax],al
     fb7:	00 c0                	add    al,al
     fb9:	29 00                	sub    DWORD PTR [rax],eax
     fbb:	00 00                	add    BYTE PTR [rax],al
     fbd:	00 00                	add    BYTE PTR [rax],al
     fbf:	00 60 0b             	add    BYTE PTR [rax+0xb],ah
     fc2:	01 00                	add    DWORD PTR [rax],eax
     fc4:	00 00                	add    BYTE PTR [rax],al
     fc6:	00 00                	add    BYTE PTR [rax],al
     fc8:	08 00                	or     BYTE PTR [rax],al
     fca:	00 00                	add    BYTE PTR [rax],al
     fcc:	00 00                	add    BYTE PTR [rax],al
     fce:	00 00                	add    BYTE PTR [rax],al
     fd0:	80 29 00             	sub    BYTE PTR [rcx],0x0
     fd3:	00 00                	add    BYTE PTR [rax],al
     fd5:	00 00                	add    BYTE PTR [rax],al
     fd7:	00 08                	add    BYTE PTR [rax],cl
     fd9:	10 01                	adc    BYTE PTR [rcx],al
     fdb:	00 00                	add    BYTE PTR [rax],al
     fdd:	00 00                	add    BYTE PTR [rax],al
     fdf:	00 08                	add    BYTE PTR [rax],cl
     fe1:	00 00                	add    BYTE PTR [rax],al
     fe3:	00 00                	add    BYTE PTR [rax],al
     fe5:	00 00                	add    BYTE PTR [rax],al
     fe7:	00 08                	add    BYTE PTR [rax],cl
     fe9:	10 01                	adc    BYTE PTR [rcx],al
     feb:	00 00                	add    BYTE PTR [rax],al
     fed:	00 00                	add    BYTE PTR [rax],al
     fef:	00 28                	add    BYTE PTR [rax],ch
     ff1:	10 01                	adc    BYTE PTR [rcx],al
     ff3:	00 00                	add    BYTE PTR [rax],al
     ff5:	00 00                	add    BYTE PTR [rax],al
     ff7:	00 08                	add    BYTE PTR [rax],cl
     ff9:	00 00                	add    BYTE PTR [rax],al
     ffb:	00 00                	add    BYTE PTR [rax],al
     ffd:	00 00                	add    BYTE PTR [rax],al
     fff:	00 04 c0             	add    BYTE PTR [rax+rax*8],al
    1002:	00 00                	add    BYTE PTR [rax],al
    1004:	00 00                	add    BYTE PTR [rax],al
    1006:	00 00                	add    BYTE PTR [rax],al
    1008:	30 10                	xor    BYTE PTR [rax],dl
    100a:	01 00                	add    DWORD PTR [rax],eax
    100c:	00 00                	add    BYTE PTR [rax],al
    100e:	00 00                	add    BYTE PTR [rax],al
    1010:	08 00                	or     BYTE PTR [rax],al
    1012:	00 00                	add    BYTE PTR [rax],al
    1014:	00 00                	add    BYTE PTR [rax],al
    1016:	00 00                	add    BYTE PTR [rax],al
    1018:	1a c0                	sbb    al,al
    101a:	00 00                	add    BYTE PTR [rax],al
    101c:	00 00                	add    BYTE PTR [rax],al
    101e:	00 00                	add    BYTE PTR [rax],al
    1020:	38 10                	cmp    BYTE PTR [rax],dl
    1022:	01 00                	add    DWORD PTR [rax],eax
    1024:	00 00                	add    BYTE PTR [rax],al
    1026:	00 00                	add    BYTE PTR [rax],al
    1028:	08 00                	or     BYTE PTR [rax],al
    102a:	00 00                	add    BYTE PTR [rax],al
    102c:	00 00                	add    BYTE PTR [rax],al
    102e:	00 00                	add    BYTE PTR [rax],al
    1030:	34 c0                	xor    al,0xc0
    1032:	00 00                	add    BYTE PTR [rax],al
    1034:	00 00                	add    BYTE PTR [rax],al
    1036:	00 00                	add    BYTE PTR [rax],al
    1038:	d8 0f                	fmul   DWORD PTR [rdi]
    103a:	01 00                	add    DWORD PTR [rax],eax
    103c:	00 00                	add    BYTE PTR [rax],al
    103e:	00 00                	add    BYTE PTR [rax],al
    1040:	06                   	(bad)  
    1041:	00 00                	add    BYTE PTR [rax],al
    1043:	00 07                	add    BYTE PTR [rdi],al
	...
    104d:	00 00                	add    BYTE PTR [rax],al
    104f:	00 e0                	add    al,ah
    1051:	0f 01 00             	sgdt   [rax]
    1054:	00 00                	add    BYTE PTR [rax],al
    1056:	00 00                	add    BYTE PTR [rax],al
    1058:	06                   	(bad)  
    1059:	00 00                	add    BYTE PTR [rax],al
    105b:	00 22                	add    BYTE PTR [rdx],ah
	...
    1065:	00 00                	add    BYTE PTR [rax],al
    1067:	00 e8                	add    al,ch
    1069:	0f 01 00             	sgdt   [rax]
    106c:	00 00                	add    BYTE PTR [rax],al
    106e:	00 00                	add    BYTE PTR [rax],al
    1070:	06                   	(bad)  
    1071:	00 00                	add    BYTE PTR [rax],al
    1073:	00 28                	add    BYTE PTR [rax],ch
	...
    107d:	00 00                	add    BYTE PTR [rax],al
    107f:	00 f0                	add    al,dh
    1081:	0f 01 00             	sgdt   [rax]
    1084:	00 00                	add    BYTE PTR [rax],al
    1086:	00 00                	add    BYTE PTR [rax],al
    1088:	06                   	(bad)  
    1089:	00 00                	add    BYTE PTR [rax],al
    108b:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
	...
    1097:	00 f8                	add    al,bh
    1099:	0f 01 00             	sgdt   [rax]
    109c:	00 00                	add    BYTE PTR [rax],al
    109e:	00 00                	add    BYTE PTR [rax],al
    10a0:	06                   	(bad)  
    10a1:	00 00                	add    BYTE PTR [rax],al
    10a3:	00 4b 00             	add    BYTE PTR [rbx+0x0],cl
	...
    10ae:	00 00                	add    BYTE PTR [rax],al
    10b0:	60                   	(bad)  
    10b1:	10 01                	adc    BYTE PTR [rcx],al
    10b3:	00 00                	add    BYTE PTR [rax],al
    10b5:	00 00                	add    BYTE PTR [rax],al
    10b7:	00 05 00 00 00 4a    	add    BYTE PTR [rip+0x4a000000],al        # 4a0010bd <_end+0x49ec5c7d>
	...
    10c5:	00 00                	add    BYTE PTR [rax],al
    10c7:	00 68 10             	add    BYTE PTR [rax+0x10],ch
    10ca:	01 00                	add    DWORD PTR [rax],eax
    10cc:	00 00                	add    BYTE PTR [rax],al
    10ce:	00 00                	add    BYTE PTR [rax],al
    10d0:	05 00 00 00 4c       	add    eax,0x4c000000
	...

Disassembly of section .rela.plt:

00000000000010e0 <.rela.plt>:
    10e0:	b0 0d                	mov    al,0xd
    10e2:	01 00                	add    DWORD PTR [rax],eax
    10e4:	00 00                	add    BYTE PTR [rax],al
    10e6:	00 00                	add    BYTE PTR [rax],al
    10e8:	07                   	(bad)  
    10e9:	00 00                	add    BYTE PTR [rax],al
    10eb:	00 01                	add    BYTE PTR [rcx],al
	...
    10f5:	00 00                	add    BYTE PTR [rax],al
    10f7:	00 b8 0d 01 00 00    	add    BYTE PTR [rax+0x10d],bh
    10fd:	00 00                	add    BYTE PTR [rax],al
    10ff:	00 07                	add    BYTE PTR [rdi],al
    1101:	00 00                	add    BYTE PTR [rax],al
    1103:	00 02                	add    BYTE PTR [rdx],al
	...
    110d:	00 00                	add    BYTE PTR [rax],al
    110f:	00 c0                	add    al,al
    1111:	0d 01 00 00 00       	or     eax,0x1
    1116:	00 00                	add    BYTE PTR [rax],al
    1118:	07                   	(bad)  
    1119:	00 00                	add    BYTE PTR [rax],al
    111b:	00 03                	add    BYTE PTR [rbx],al
	...
    1125:	00 00                	add    BYTE PTR [rax],al
    1127:	00 c8                	add    al,cl
    1129:	0d 01 00 00 00       	or     eax,0x1
    112e:	00 00                	add    BYTE PTR [rax],al
    1130:	07                   	(bad)  
    1131:	00 00                	add    BYTE PTR [rax],al
    1133:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
    113e:	00 00                	add    BYTE PTR [rax],al
    1140:	d0 0d 01 00 00 00    	ror    BYTE PTR [rip+0x1],1        # 1147 <buffer.4704+0x10c7>
    1146:	00 00                	add    BYTE PTR [rax],al
    1148:	07                   	(bad)  
    1149:	00 00                	add    BYTE PTR [rax],al
    114b:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 1151 <buffer.4704+0x10d1>
    1151:	00 00                	add    BYTE PTR [rax],al
    1153:	00 00                	add    BYTE PTR [rax],al
    1155:	00 00                	add    BYTE PTR [rax],al
    1157:	00 d8                	add    al,bl
    1159:	0d 01 00 00 00       	or     eax,0x1
    115e:	00 00                	add    BYTE PTR [rax],al
    1160:	07                   	(bad)  
    1161:	00 00                	add    BYTE PTR [rax],al
    1163:	00 06                	add    BYTE PTR [rsi],al
	...
    116d:	00 00                	add    BYTE PTR [rax],al
    116f:	00 e0                	add    al,ah
    1171:	0d 01 00 00 00       	or     eax,0x1
    1176:	00 00                	add    BYTE PTR [rax],al
    1178:	07                   	(bad)  
    1179:	00 00                	add    BYTE PTR [rax],al
    117b:	00 08                	add    BYTE PTR [rax],cl
	...
    1185:	00 00                	add    BYTE PTR [rax],al
    1187:	00 e8                	add    al,ch
    1189:	0d 01 00 00 00       	or     eax,0x1
    118e:	00 00                	add    BYTE PTR [rax],al
    1190:	07                   	(bad)  
    1191:	00 00                	add    BYTE PTR [rax],al
    1193:	00 09                	add    BYTE PTR [rcx],cl
	...
    119d:	00 00                	add    BYTE PTR [rax],al
    119f:	00 f0                	add    al,dh
    11a1:	0d 01 00 00 00       	or     eax,0x1
    11a6:	00 00                	add    BYTE PTR [rax],al
    11a8:	07                   	(bad)  
    11a9:	00 00                	add    BYTE PTR [rax],al
    11ab:	00 0a                	add    BYTE PTR [rdx],cl
	...
    11b5:	00 00                	add    BYTE PTR [rax],al
    11b7:	00 f8                	add    al,bh
    11b9:	0d 01 00 00 00       	or     eax,0x1
    11be:	00 00                	add    BYTE PTR [rax],al
    11c0:	07                   	(bad)  
    11c1:	00 00                	add    BYTE PTR [rax],al
    11c3:	00 0b                	add    BYTE PTR [rbx],cl
	...
    11d1:	0e                   	(bad)  
    11d2:	01 00                	add    DWORD PTR [rax],eax
    11d4:	00 00                	add    BYTE PTR [rax],al
    11d6:	00 00                	add    BYTE PTR [rax],al
    11d8:	07                   	(bad)  
    11d9:	00 00                	add    BYTE PTR [rax],al
    11db:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
	...
    11e6:	00 00                	add    BYTE PTR [rax],al
    11e8:	08 0e                	or     BYTE PTR [rsi],cl
    11ea:	01 00                	add    DWORD PTR [rax],eax
    11ec:	00 00                	add    BYTE PTR [rax],al
    11ee:	00 00                	add    BYTE PTR [rax],al
    11f0:	07                   	(bad)  
    11f1:	00 00                	add    BYTE PTR [rax],al
    11f3:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 11f9 <buffer.4704+0x1179>
    11f9:	00 00                	add    BYTE PTR [rax],al
    11fb:	00 00                	add    BYTE PTR [rax],al
    11fd:	00 00                	add    BYTE PTR [rax],al
    11ff:	00 10                	add    BYTE PTR [rax],dl
    1201:	0e                   	(bad)  
    1202:	01 00                	add    DWORD PTR [rax],eax
    1204:	00 00                	add    BYTE PTR [rax],al
    1206:	00 00                	add    BYTE PTR [rax],al
    1208:	07                   	(bad)  
    1209:	00 00                	add    BYTE PTR [rax],al
    120b:	00 0e                	add    BYTE PTR [rsi],cl
	...
    1215:	00 00                	add    BYTE PTR [rax],al
    1217:	00 18                	add    BYTE PTR [rax],bl
    1219:	0e                   	(bad)  
    121a:	01 00                	add    DWORD PTR [rax],eax
    121c:	00 00                	add    BYTE PTR [rax],al
    121e:	00 00                	add    BYTE PTR [rax],al
    1220:	07                   	(bad)  
    1221:	00 00                	add    BYTE PTR [rax],al
    1223:	00 0f                	add    BYTE PTR [rdi],cl
	...
    122d:	00 00                	add    BYTE PTR [rax],al
    122f:	00 20                	add    BYTE PTR [rax],ah
    1231:	0e                   	(bad)  
    1232:	01 00                	add    DWORD PTR [rax],eax
    1234:	00 00                	add    BYTE PTR [rax],al
    1236:	00 00                	add    BYTE PTR [rax],al
    1238:	07                   	(bad)  
    1239:	00 00                	add    BYTE PTR [rax],al
    123b:	00 10                	add    BYTE PTR [rax],dl
	...
    1245:	00 00                	add    BYTE PTR [rax],al
    1247:	00 28                	add    BYTE PTR [rax],ch
    1249:	0e                   	(bad)  
    124a:	01 00                	add    DWORD PTR [rax],eax
    124c:	00 00                	add    BYTE PTR [rax],al
    124e:	00 00                	add    BYTE PTR [rax],al
    1250:	07                   	(bad)  
    1251:	00 00                	add    BYTE PTR [rax],al
    1253:	00 11                	add    BYTE PTR [rcx],dl
	...
    125d:	00 00                	add    BYTE PTR [rax],al
    125f:	00 30                	add    BYTE PTR [rax],dh
    1261:	0e                   	(bad)  
    1262:	01 00                	add    DWORD PTR [rax],eax
    1264:	00 00                	add    BYTE PTR [rax],al
    1266:	00 00                	add    BYTE PTR [rax],al
    1268:	07                   	(bad)  
    1269:	00 00                	add    BYTE PTR [rax],al
    126b:	00 12                	add    BYTE PTR [rdx],dl
	...
    1275:	00 00                	add    BYTE PTR [rax],al
    1277:	00 38                	add    BYTE PTR [rax],bh
    1279:	0e                   	(bad)  
    127a:	01 00                	add    DWORD PTR [rax],eax
    127c:	00 00                	add    BYTE PTR [rax],al
    127e:	00 00                	add    BYTE PTR [rax],al
    1280:	07                   	(bad)  
    1281:	00 00                	add    BYTE PTR [rax],al
    1283:	00 13                	add    BYTE PTR [rbx],dl
	...
    128d:	00 00                	add    BYTE PTR [rax],al
    128f:	00 40 0e             	add    BYTE PTR [rax+0xe],al
    1292:	01 00                	add    DWORD PTR [rax],eax
    1294:	00 00                	add    BYTE PTR [rax],al
    1296:	00 00                	add    BYTE PTR [rax],al
    1298:	07                   	(bad)  
    1299:	00 00                	add    BYTE PTR [rax],al
    129b:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
	...
    12a6:	00 00                	add    BYTE PTR [rax],al
    12a8:	48 0e                	rex.W (bad) 
    12aa:	01 00                	add    DWORD PTR [rax],eax
    12ac:	00 00                	add    BYTE PTR [rax],al
    12ae:	00 00                	add    BYTE PTR [rax],al
    12b0:	07                   	(bad)  
    12b1:	00 00                	add    BYTE PTR [rax],al
    12b3:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 12b9 <buffer.4704+0x1239>
    12b9:	00 00                	add    BYTE PTR [rax],al
    12bb:	00 00                	add    BYTE PTR [rax],al
    12bd:	00 00                	add    BYTE PTR [rax],al
    12bf:	00 50 0e             	add    BYTE PTR [rax+0xe],dl
    12c2:	01 00                	add    DWORD PTR [rax],eax
    12c4:	00 00                	add    BYTE PTR [rax],al
    12c6:	00 00                	add    BYTE PTR [rax],al
    12c8:	07                   	(bad)  
    12c9:	00 00                	add    BYTE PTR [rax],al
    12cb:	00 16                	add    BYTE PTR [rsi],dl
	...
    12d5:	00 00                	add    BYTE PTR [rax],al
    12d7:	00 58 0e             	add    BYTE PTR [rax+0xe],bl
    12da:	01 00                	add    DWORD PTR [rax],eax
    12dc:	00 00                	add    BYTE PTR [rax],al
    12de:	00 00                	add    BYTE PTR [rax],al
    12e0:	07                   	(bad)  
    12e1:	00 00                	add    BYTE PTR [rax],al
    12e3:	00 17                	add    BYTE PTR [rdi],dl
	...
    12ed:	00 00                	add    BYTE PTR [rax],al
    12ef:	00 60 0e             	add    BYTE PTR [rax+0xe],ah
    12f2:	01 00                	add    DWORD PTR [rax],eax
    12f4:	00 00                	add    BYTE PTR [rax],al
    12f6:	00 00                	add    BYTE PTR [rax],al
    12f8:	07                   	(bad)  
    12f9:	00 00                	add    BYTE PTR [rax],al
    12fb:	00 18                	add    BYTE PTR [rax],bl
	...
    1305:	00 00                	add    BYTE PTR [rax],al
    1307:	00 68 0e             	add    BYTE PTR [rax+0xe],ch
    130a:	01 00                	add    DWORD PTR [rax],eax
    130c:	00 00                	add    BYTE PTR [rax],al
    130e:	00 00                	add    BYTE PTR [rax],al
    1310:	07                   	(bad)  
    1311:	00 00                	add    BYTE PTR [rax],al
    1313:	00 19                	add    BYTE PTR [rcx],bl
	...
    131d:	00 00                	add    BYTE PTR [rax],al
    131f:	00 70 0e             	add    BYTE PTR [rax+0xe],dh
    1322:	01 00                	add    DWORD PTR [rax],eax
    1324:	00 00                	add    BYTE PTR [rax],al
    1326:	00 00                	add    BYTE PTR [rax],al
    1328:	07                   	(bad)  
    1329:	00 00                	add    BYTE PTR [rax],al
    132b:	00 1a                	add    BYTE PTR [rdx],bl
	...
    1335:	00 00                	add    BYTE PTR [rax],al
    1337:	00 78 0e             	add    BYTE PTR [rax+0xe],bh
    133a:	01 00                	add    DWORD PTR [rax],eax
    133c:	00 00                	add    BYTE PTR [rax],al
    133e:	00 00                	add    BYTE PTR [rax],al
    1340:	07                   	(bad)  
    1341:	00 00                	add    BYTE PTR [rax],al
    1343:	00 1b                	add    BYTE PTR [rbx],bl
	...
    134d:	00 00                	add    BYTE PTR [rax],al
    134f:	00 80 0e 01 00 00    	add    BYTE PTR [rax+0x10e],al
    1355:	00 00                	add    BYTE PTR [rax],al
    1357:	00 07                	add    BYTE PTR [rdi],al
    1359:	00 00                	add    BYTE PTR [rax],al
    135b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
	...
    1366:	00 00                	add    BYTE PTR [rax],al
    1368:	88 0e                	mov    BYTE PTR [rsi],cl
    136a:	01 00                	add    DWORD PTR [rax],eax
    136c:	00 00                	add    BYTE PTR [rax],al
    136e:	00 00                	add    BYTE PTR [rax],al
    1370:	07                   	(bad)  
    1371:	00 00                	add    BYTE PTR [rax],al
    1373:	00 1d 00 00 00 00    	add    BYTE PTR [rip+0x0],bl        # 1379 <buffer.4704+0x12f9>
    1379:	00 00                	add    BYTE PTR [rax],al
    137b:	00 00                	add    BYTE PTR [rax],al
    137d:	00 00                	add    BYTE PTR [rax],al
    137f:	00 90 0e 01 00 00    	add    BYTE PTR [rax+0x10e],dl
    1385:	00 00                	add    BYTE PTR [rax],al
    1387:	00 07                	add    BYTE PTR [rdi],al
    1389:	00 00                	add    BYTE PTR [rax],al
    138b:	00 1e                	add    BYTE PTR [rsi],bl
	...
    1395:	00 00                	add    BYTE PTR [rax],al
    1397:	00 98 0e 01 00 00    	add    BYTE PTR [rax+0x10e],bl
    139d:	00 00                	add    BYTE PTR [rax],al
    139f:	00 07                	add    BYTE PTR [rdi],al
    13a1:	00 00                	add    BYTE PTR [rax],al
    13a3:	00 1f                	add    BYTE PTR [rdi],bl
	...
    13ad:	00 00                	add    BYTE PTR [rax],al
    13af:	00 a0 0e 01 00 00    	add    BYTE PTR [rax+0x10e],ah
    13b5:	00 00                	add    BYTE PTR [rax],al
    13b7:	00 07                	add    BYTE PTR [rdi],al
    13b9:	00 00                	add    BYTE PTR [rax],al
    13bb:	00 20                	add    BYTE PTR [rax],ah
	...
    13c5:	00 00                	add    BYTE PTR [rax],al
    13c7:	00 a8 0e 01 00 00    	add    BYTE PTR [rax+0x10e],ch
    13cd:	00 00                	add    BYTE PTR [rax],al
    13cf:	00 07                	add    BYTE PTR [rdi],al
    13d1:	00 00                	add    BYTE PTR [rax],al
    13d3:	00 21                	add    BYTE PTR [rcx],ah
	...
    13dd:	00 00                	add    BYTE PTR [rax],al
    13df:	00 b0 0e 01 00 00    	add    BYTE PTR [rax+0x10e],dh
    13e5:	00 00                	add    BYTE PTR [rax],al
    13e7:	00 07                	add    BYTE PTR [rdi],al
    13e9:	00 00                	add    BYTE PTR [rax],al
    13eb:	00 23                	add    BYTE PTR [rbx],ah
	...
    13f5:	00 00                	add    BYTE PTR [rax],al
    13f7:	00 b8 0e 01 00 00    	add    BYTE PTR [rax+0x10e],bh
    13fd:	00 00                	add    BYTE PTR [rax],al
    13ff:	00 07                	add    BYTE PTR [rdi],al
    1401:	00 00                	add    BYTE PTR [rax],al
    1403:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
	...
    140e:	00 00                	add    BYTE PTR [rax],al
    1410:	c0 0e 01             	ror    BYTE PTR [rsi],0x1
    1413:	00 00                	add    BYTE PTR [rax],al
    1415:	00 00                	add    BYTE PTR [rax],al
    1417:	00 07                	add    BYTE PTR [rdi],al
    1419:	00 00                	add    BYTE PTR [rax],al
    141b:	00 25 00 00 00 00    	add    BYTE PTR [rip+0x0],ah        # 1421 <buffer.4704+0x13a1>
    1421:	00 00                	add    BYTE PTR [rax],al
    1423:	00 00                	add    BYTE PTR [rax],al
    1425:	00 00                	add    BYTE PTR [rax],al
    1427:	00 c8                	add    al,cl
    1429:	0e                   	(bad)  
    142a:	01 00                	add    DWORD PTR [rax],eax
    142c:	00 00                	add    BYTE PTR [rax],al
    142e:	00 00                	add    BYTE PTR [rax],al
    1430:	07                   	(bad)  
    1431:	00 00                	add    BYTE PTR [rax],al
    1433:	00 26                	add    BYTE PTR [rsi],ah
	...
    143d:	00 00                	add    BYTE PTR [rax],al
    143f:	00 d0                	add    al,dl
    1441:	0e                   	(bad)  
    1442:	01 00                	add    DWORD PTR [rax],eax
    1444:	00 00                	add    BYTE PTR [rax],al
    1446:	00 00                	add    BYTE PTR [rax],al
    1448:	07                   	(bad)  
    1449:	00 00                	add    BYTE PTR [rax],al
    144b:	00 27                	add    BYTE PTR [rdi],ah
	...
    1455:	00 00                	add    BYTE PTR [rax],al
    1457:	00 d8                	add    al,bl
    1459:	0e                   	(bad)  
    145a:	01 00                	add    DWORD PTR [rax],eax
    145c:	00 00                	add    BYTE PTR [rax],al
    145e:	00 00                	add    BYTE PTR [rax],al
    1460:	07                   	(bad)  
    1461:	00 00                	add    BYTE PTR [rax],al
    1463:	00 29                	add    BYTE PTR [rcx],ch
	...
    146d:	00 00                	add    BYTE PTR [rax],al
    146f:	00 e0                	add    al,ah
    1471:	0e                   	(bad)  
    1472:	01 00                	add    DWORD PTR [rax],eax
    1474:	00 00                	add    BYTE PTR [rax],al
    1476:	00 00                	add    BYTE PTR [rax],al
    1478:	07                   	(bad)  
    1479:	00 00                	add    BYTE PTR [rax],al
    147b:	00 2a                	add    BYTE PTR [rdx],ch
	...
    1485:	00 00                	add    BYTE PTR [rax],al
    1487:	00 e8                	add    al,ch
    1489:	0e                   	(bad)  
    148a:	01 00                	add    DWORD PTR [rax],eax
    148c:	00 00                	add    BYTE PTR [rax],al
    148e:	00 00                	add    BYTE PTR [rax],al
    1490:	07                   	(bad)  
    1491:	00 00                	add    BYTE PTR [rax],al
    1493:	00 2b                	add    BYTE PTR [rbx],ch
	...
    149d:	00 00                	add    BYTE PTR [rax],al
    149f:	00 f0                	add    al,dh
    14a1:	0e                   	(bad)  
    14a2:	01 00                	add    DWORD PTR [rax],eax
    14a4:	00 00                	add    BYTE PTR [rax],al
    14a6:	00 00                	add    BYTE PTR [rax],al
    14a8:	07                   	(bad)  
    14a9:	00 00                	add    BYTE PTR [rax],al
    14ab:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
	...
    14b6:	00 00                	add    BYTE PTR [rax],al
    14b8:	f8                   	clc    
    14b9:	0e                   	(bad)  
    14ba:	01 00                	add    DWORD PTR [rax],eax
    14bc:	00 00                	add    BYTE PTR [rax],al
    14be:	00 00                	add    BYTE PTR [rax],al
    14c0:	07                   	(bad)  
    14c1:	00 00                	add    BYTE PTR [rax],al
    14c3:	00 2d 00 00 00 00    	add    BYTE PTR [rip+0x0],ch        # 14c9 <buffer.4704+0x1449>
	...
    14d1:	0f 01 00             	sgdt   [rax]
    14d4:	00 00                	add    BYTE PTR [rax],al
    14d6:	00 00                	add    BYTE PTR [rax],al
    14d8:	07                   	(bad)  
    14d9:	00 00                	add    BYTE PTR [rax],al
    14db:	00 2e                	add    BYTE PTR [rsi],ch
	...
    14e5:	00 00                	add    BYTE PTR [rax],al
    14e7:	00 08                	add    BYTE PTR [rax],cl
    14e9:	0f 01 00             	sgdt   [rax]
    14ec:	00 00                	add    BYTE PTR [rax],al
    14ee:	00 00                	add    BYTE PTR [rax],al
    14f0:	07                   	(bad)  
    14f1:	00 00                	add    BYTE PTR [rax],al
    14f3:	00 2f                	add    BYTE PTR [rdi],ch
	...
    14fd:	00 00                	add    BYTE PTR [rax],al
    14ff:	00 10                	add    BYTE PTR [rax],dl
    1501:	0f 01 00             	sgdt   [rax]
    1504:	00 00                	add    BYTE PTR [rax],al
    1506:	00 00                	add    BYTE PTR [rax],al
    1508:	07                   	(bad)  
    1509:	00 00                	add    BYTE PTR [rax],al
    150b:	00 30                	add    BYTE PTR [rax],dh
	...
    1515:	00 00                	add    BYTE PTR [rax],al
    1517:	00 18                	add    BYTE PTR [rax],bl
    1519:	0f 01 00             	sgdt   [rax]
    151c:	00 00                	add    BYTE PTR [rax],al
    151e:	00 00                	add    BYTE PTR [rax],al
    1520:	07                   	(bad)  
    1521:	00 00                	add    BYTE PTR [rax],al
    1523:	00 31                	add    BYTE PTR [rcx],dh
	...
    152d:	00 00                	add    BYTE PTR [rax],al
    152f:	00 20                	add    BYTE PTR [rax],ah
    1531:	0f 01 00             	sgdt   [rax]
    1534:	00 00                	add    BYTE PTR [rax],al
    1536:	00 00                	add    BYTE PTR [rax],al
    1538:	07                   	(bad)  
    1539:	00 00                	add    BYTE PTR [rax],al
    153b:	00 32                	add    BYTE PTR [rdx],dh
	...
    1545:	00 00                	add    BYTE PTR [rax],al
    1547:	00 28                	add    BYTE PTR [rax],ch
    1549:	0f 01 00             	sgdt   [rax]
    154c:	00 00                	add    BYTE PTR [rax],al
    154e:	00 00                	add    BYTE PTR [rax],al
    1550:	07                   	(bad)  
    1551:	00 00                	add    BYTE PTR [rax],al
    1553:	00 33                	add    BYTE PTR [rbx],dh
	...
    155d:	00 00                	add    BYTE PTR [rax],al
    155f:	00 30                	add    BYTE PTR [rax],dh
    1561:	0f 01 00             	sgdt   [rax]
    1564:	00 00                	add    BYTE PTR [rax],al
    1566:	00 00                	add    BYTE PTR [rax],al
    1568:	07                   	(bad)  
    1569:	00 00                	add    BYTE PTR [rax],al
    156b:	00 34 00             	add    BYTE PTR [rax+rax*1],dh
	...
    1576:	00 00                	add    BYTE PTR [rax],al
    1578:	38 0f                	cmp    BYTE PTR [rdi],cl
    157a:	01 00                	add    DWORD PTR [rax],eax
    157c:	00 00                	add    BYTE PTR [rax],al
    157e:	00 00                	add    BYTE PTR [rax],al
    1580:	07                   	(bad)  
    1581:	00 00                	add    BYTE PTR [rax],al
    1583:	00 35 00 00 00 00    	add    BYTE PTR [rip+0x0],dh        # 1589 <buffer.4704+0x1509>
    1589:	00 00                	add    BYTE PTR [rax],al
    158b:	00 00                	add    BYTE PTR [rax],al
    158d:	00 00                	add    BYTE PTR [rax],al
    158f:	00 40 0f             	add    BYTE PTR [rax+0xf],al
    1592:	01 00                	add    DWORD PTR [rax],eax
    1594:	00 00                	add    BYTE PTR [rax],al
    1596:	00 00                	add    BYTE PTR [rax],al
    1598:	07                   	(bad)  
    1599:	00 00                	add    BYTE PTR [rax],al
    159b:	00 36                	add    BYTE PTR [rsi],dh
	...
    15a5:	00 00                	add    BYTE PTR [rax],al
    15a7:	00 48 0f             	add    BYTE PTR [rax+0xf],cl
    15aa:	01 00                	add    DWORD PTR [rax],eax
    15ac:	00 00                	add    BYTE PTR [rax],al
    15ae:	00 00                	add    BYTE PTR [rax],al
    15b0:	07                   	(bad)  
    15b1:	00 00                	add    BYTE PTR [rax],al
    15b3:	00 37                	add    BYTE PTR [rdi],dh
	...
    15bd:	00 00                	add    BYTE PTR [rax],al
    15bf:	00 50 0f             	add    BYTE PTR [rax+0xf],dl
    15c2:	01 00                	add    DWORD PTR [rax],eax
    15c4:	00 00                	add    BYTE PTR [rax],al
    15c6:	00 00                	add    BYTE PTR [rax],al
    15c8:	07                   	(bad)  
    15c9:	00 00                	add    BYTE PTR [rax],al
    15cb:	00 38                	add    BYTE PTR [rax],bh
	...
    15d5:	00 00                	add    BYTE PTR [rax],al
    15d7:	00 58 0f             	add    BYTE PTR [rax+0xf],bl
    15da:	01 00                	add    DWORD PTR [rax],eax
    15dc:	00 00                	add    BYTE PTR [rax],al
    15de:	00 00                	add    BYTE PTR [rax],al
    15e0:	07                   	(bad)  
    15e1:	00 00                	add    BYTE PTR [rax],al
    15e3:	00 39                	add    BYTE PTR [rcx],bh
	...
    15ed:	00 00                	add    BYTE PTR [rax],al
    15ef:	00 60 0f             	add    BYTE PTR [rax+0xf],ah
    15f2:	01 00                	add    DWORD PTR [rax],eax
    15f4:	00 00                	add    BYTE PTR [rax],al
    15f6:	00 00                	add    BYTE PTR [rax],al
    15f8:	07                   	(bad)  
    15f9:	00 00                	add    BYTE PTR [rax],al
    15fb:	00 3a                	add    BYTE PTR [rdx],bh
	...
    1605:	00 00                	add    BYTE PTR [rax],al
    1607:	00 68 0f             	add    BYTE PTR [rax+0xf],ch
    160a:	01 00                	add    DWORD PTR [rax],eax
    160c:	00 00                	add    BYTE PTR [rax],al
    160e:	00 00                	add    BYTE PTR [rax],al
    1610:	07                   	(bad)  
    1611:	00 00                	add    BYTE PTR [rax],al
    1613:	00 3b                	add    BYTE PTR [rbx],bh
	...
    161d:	00 00                	add    BYTE PTR [rax],al
    161f:	00 70 0f             	add    BYTE PTR [rax+0xf],dh
    1622:	01 00                	add    DWORD PTR [rax],eax
    1624:	00 00                	add    BYTE PTR [rax],al
    1626:	00 00                	add    BYTE PTR [rax],al
    1628:	07                   	(bad)  
    1629:	00 00                	add    BYTE PTR [rax],al
    162b:	00 3c 00             	add    BYTE PTR [rax+rax*1],bh
	...
    1636:	00 00                	add    BYTE PTR [rax],al
    1638:	78 0f                	js     1649 <buffer.4704+0x15c9>
    163a:	01 00                	add    DWORD PTR [rax],eax
    163c:	00 00                	add    BYTE PTR [rax],al
    163e:	00 00                	add    BYTE PTR [rax],al
    1640:	07                   	(bad)  
    1641:	00 00                	add    BYTE PTR [rax],al
    1643:	00 3d 00 00 00 00    	add    BYTE PTR [rip+0x0],bh        # 1649 <buffer.4704+0x15c9>
    1649:	00 00                	add    BYTE PTR [rax],al
    164b:	00 00                	add    BYTE PTR [rax],al
    164d:	00 00                	add    BYTE PTR [rax],al
    164f:	00 80 0f 01 00 00    	add    BYTE PTR [rax+0x10f],al
    1655:	00 00                	add    BYTE PTR [rax],al
    1657:	00 07                	add    BYTE PTR [rdi],al
    1659:	00 00                	add    BYTE PTR [rax],al
    165b:	00 3e                	add    BYTE PTR [rsi],bh
	...
    1665:	00 00                	add    BYTE PTR [rax],al
    1667:	00 88 0f 01 00 00    	add    BYTE PTR [rax+0x10f],cl
    166d:	00 00                	add    BYTE PTR [rax],al
    166f:	00 07                	add    BYTE PTR [rdi],al
    1671:	00 00                	add    BYTE PTR [rax],al
    1673:	00 3f                	add    BYTE PTR [rdi],bh
	...
    167d:	00 00                	add    BYTE PTR [rax],al
    167f:	00 90 0f 01 00 00    	add    BYTE PTR [rax+0x10f],dl
    1685:	00 00                	add    BYTE PTR [rax],al
    1687:	00 07                	add    BYTE PTR [rdi],al
    1689:	00 00                	add    BYTE PTR [rax],al
    168b:	00 40 00             	add    BYTE PTR [rax+0x0],al
	...
    1696:	00 00                	add    BYTE PTR [rax],al
    1698:	98                   	cwde   
    1699:	0f 01 00             	sgdt   [rax]
    169c:	00 00                	add    BYTE PTR [rax],al
    169e:	00 00                	add    BYTE PTR [rax],al
    16a0:	07                   	(bad)  
    16a1:	00 00                	add    BYTE PTR [rax],al
    16a3:	00 41 00             	add    BYTE PTR [rcx+0x0],al
	...
    16ae:	00 00                	add    BYTE PTR [rax],al
    16b0:	a0 0f 01 00 00 00 00 	movabs al,ds:0x70000000000010f
    16b7:	00 07 
    16b9:	00 00                	add    BYTE PTR [rax],al
    16bb:	00 42 00             	add    BYTE PTR [rdx+0x0],al
	...
    16c6:	00 00                	add    BYTE PTR [rax],al
    16c8:	a8 0f                	test   al,0xf
    16ca:	01 00                	add    DWORD PTR [rax],eax
    16cc:	00 00                	add    BYTE PTR [rax],al
    16ce:	00 00                	add    BYTE PTR [rax],al
    16d0:	07                   	(bad)  
    16d1:	00 00                	add    BYTE PTR [rax],al
    16d3:	00 43 00             	add    BYTE PTR [rbx+0x0],al
	...
    16de:	00 00                	add    BYTE PTR [rax],al
    16e0:	b0 0f                	mov    al,0xf
    16e2:	01 00                	add    DWORD PTR [rax],eax
    16e4:	00 00                	add    BYTE PTR [rax],al
    16e6:	00 00                	add    BYTE PTR [rax],al
    16e8:	07                   	(bad)  
    16e9:	00 00                	add    BYTE PTR [rax],al
    16eb:	00 45 00             	add    BYTE PTR [rbp+0x0],al
	...
    16f6:	00 00                	add    BYTE PTR [rax],al
    16f8:	b8 0f 01 00 00       	mov    eax,0x10f
    16fd:	00 00                	add    BYTE PTR [rax],al
    16ff:	00 07                	add    BYTE PTR [rdi],al
    1701:	00 00                	add    BYTE PTR [rax],al
    1703:	00 46 00             	add    BYTE PTR [rsi+0x0],al
	...
    170e:	00 00                	add    BYTE PTR [rax],al
    1710:	c0 0f 01             	ror    BYTE PTR [rdi],0x1
    1713:	00 00                	add    BYTE PTR [rax],al
    1715:	00 00                	add    BYTE PTR [rax],al
    1717:	00 07                	add    BYTE PTR [rdi],al
    1719:	00 00                	add    BYTE PTR [rax],al
    171b:	00 47 00             	add    BYTE PTR [rdi+0x0],al
	...
    1726:	00 00                	add    BYTE PTR [rax],al
    1728:	c8 0f 01 00          	enter  0x10f,0x0
    172c:	00 00                	add    BYTE PTR [rax],al
    172e:	00 00                	add    BYTE PTR [rax],al
    1730:	07                   	(bad)  
    1731:	00 00                	add    BYTE PTR [rax],al
    1733:	00 48 00             	add    BYTE PTR [rax+0x0],cl
	...
    173e:	00 00                	add    BYTE PTR [rax],al
    1740:	d0 0f                	ror    BYTE PTR [rdi],1
    1742:	01 00                	add    DWORD PTR [rax],eax
    1744:	00 00                	add    BYTE PTR [rax],al
    1746:	00 00                	add    BYTE PTR [rax],al
    1748:	07                   	(bad)  
    1749:	00 00                	add    BYTE PTR [rax],al
    174b:	00 49 00             	add    BYTE PTR [rcx+0x0],cl
	...

Disassembly of section .init:

0000000000002000 <_init>:
    2000:	f3 0f 1e fa          	endbr64 
    2004:	48 83 ec 08          	sub    rsp,0x8
    2008:	48 8b 05 d9 ef 00 00 	mov    rax,QWORD PTR [rip+0xefd9]        # 10fe8 <__gmon_start__>
    200f:	48 85 c0             	test   rax,rax
    2012:	74 02                	je     2016 <_init+0x16>
    2014:	ff d0                	call   rax
    2016:	48 83 c4 08          	add    rsp,0x8
    201a:	c3                   	ret    

Disassembly of section .plt:

0000000000002020 <.plt>:
    2020:	ff 35 7a ed 00 00    	push   QWORD PTR [rip+0xed7a]        # 10da0 <_GLOBAL_OFFSET_TABLE_+0x8>
    2026:	f2 ff 25 7b ed 00 00 	bnd jmp QWORD PTR [rip+0xed7b]        # 10da8 <_GLOBAL_OFFSET_TABLE_+0x10>
    202d:	0f 1f 00             	nop    DWORD PTR [rax]
    2030:	f3 0f 1e fa          	endbr64 
    2034:	68 00 00 00 00       	push   0x0
    2039:	f2 e9 e1 ff ff ff    	bnd jmp 2020 <.plt>
    203f:	90                   	nop
    2040:	f3 0f 1e fa          	endbr64 
    2044:	68 01 00 00 00       	push   0x1
    2049:	f2 e9 d1 ff ff ff    	bnd jmp 2020 <.plt>
    204f:	90                   	nop
    2050:	f3 0f 1e fa          	endbr64 
    2054:	68 02 00 00 00       	push   0x2
    2059:	f2 e9 c1 ff ff ff    	bnd jmp 2020 <.plt>
    205f:	90                   	nop
    2060:	f3 0f 1e fa          	endbr64 
    2064:	68 03 00 00 00       	push   0x3
    2069:	f2 e9 b1 ff ff ff    	bnd jmp 2020 <.plt>
    206f:	90                   	nop
    2070:	f3 0f 1e fa          	endbr64 
    2074:	68 04 00 00 00       	push   0x4
    2079:	f2 e9 a1 ff ff ff    	bnd jmp 2020 <.plt>
    207f:	90                   	nop
    2080:	f3 0f 1e fa          	endbr64 
    2084:	68 05 00 00 00       	push   0x5
    2089:	f2 e9 91 ff ff ff    	bnd jmp 2020 <.plt>
    208f:	90                   	nop
    2090:	f3 0f 1e fa          	endbr64 
    2094:	68 06 00 00 00       	push   0x6
    2099:	f2 e9 81 ff ff ff    	bnd jmp 2020 <.plt>
    209f:	90                   	nop
    20a0:	f3 0f 1e fa          	endbr64 
    20a4:	68 07 00 00 00       	push   0x7
    20a9:	f2 e9 71 ff ff ff    	bnd jmp 2020 <.plt>
    20af:	90                   	nop
    20b0:	f3 0f 1e fa          	endbr64 
    20b4:	68 08 00 00 00       	push   0x8
    20b9:	f2 e9 61 ff ff ff    	bnd jmp 2020 <.plt>
    20bf:	90                   	nop
    20c0:	f3 0f 1e fa          	endbr64 
    20c4:	68 09 00 00 00       	push   0x9
    20c9:	f2 e9 51 ff ff ff    	bnd jmp 2020 <.plt>
    20cf:	90                   	nop
    20d0:	f3 0f 1e fa          	endbr64 
    20d4:	68 0a 00 00 00       	push   0xa
    20d9:	f2 e9 41 ff ff ff    	bnd jmp 2020 <.plt>
    20df:	90                   	nop
    20e0:	f3 0f 1e fa          	endbr64 
    20e4:	68 0b 00 00 00       	push   0xb
    20e9:	f2 e9 31 ff ff ff    	bnd jmp 2020 <.plt>
    20ef:	90                   	nop
    20f0:	f3 0f 1e fa          	endbr64 
    20f4:	68 0c 00 00 00       	push   0xc
    20f9:	f2 e9 21 ff ff ff    	bnd jmp 2020 <.plt>
    20ff:	90                   	nop
    2100:	f3 0f 1e fa          	endbr64 
    2104:	68 0d 00 00 00       	push   0xd
    2109:	f2 e9 11 ff ff ff    	bnd jmp 2020 <.plt>
    210f:	90                   	nop
    2110:	f3 0f 1e fa          	endbr64 
    2114:	68 0e 00 00 00       	push   0xe
    2119:	f2 e9 01 ff ff ff    	bnd jmp 2020 <.plt>
    211f:	90                   	nop
    2120:	f3 0f 1e fa          	endbr64 
    2124:	68 0f 00 00 00       	push   0xf
    2129:	f2 e9 f1 fe ff ff    	bnd jmp 2020 <.plt>
    212f:	90                   	nop
    2130:	f3 0f 1e fa          	endbr64 
    2134:	68 10 00 00 00       	push   0x10
    2139:	f2 e9 e1 fe ff ff    	bnd jmp 2020 <.plt>
    213f:	90                   	nop
    2140:	f3 0f 1e fa          	endbr64 
    2144:	68 11 00 00 00       	push   0x11
    2149:	f2 e9 d1 fe ff ff    	bnd jmp 2020 <.plt>
    214f:	90                   	nop
    2150:	f3 0f 1e fa          	endbr64 
    2154:	68 12 00 00 00       	push   0x12
    2159:	f2 e9 c1 fe ff ff    	bnd jmp 2020 <.plt>
    215f:	90                   	nop
    2160:	f3 0f 1e fa          	endbr64 
    2164:	68 13 00 00 00       	push   0x13
    2169:	f2 e9 b1 fe ff ff    	bnd jmp 2020 <.plt>
    216f:	90                   	nop
    2170:	f3 0f 1e fa          	endbr64 
    2174:	68 14 00 00 00       	push   0x14
    2179:	f2 e9 a1 fe ff ff    	bnd jmp 2020 <.plt>
    217f:	90                   	nop
    2180:	f3 0f 1e fa          	endbr64 
    2184:	68 15 00 00 00       	push   0x15
    2189:	f2 e9 91 fe ff ff    	bnd jmp 2020 <.plt>
    218f:	90                   	nop
    2190:	f3 0f 1e fa          	endbr64 
    2194:	68 16 00 00 00       	push   0x16
    2199:	f2 e9 81 fe ff ff    	bnd jmp 2020 <.plt>
    219f:	90                   	nop
    21a0:	f3 0f 1e fa          	endbr64 
    21a4:	68 17 00 00 00       	push   0x17
    21a9:	f2 e9 71 fe ff ff    	bnd jmp 2020 <.plt>
    21af:	90                   	nop
    21b0:	f3 0f 1e fa          	endbr64 
    21b4:	68 18 00 00 00       	push   0x18
    21b9:	f2 e9 61 fe ff ff    	bnd jmp 2020 <.plt>
    21bf:	90                   	nop
    21c0:	f3 0f 1e fa          	endbr64 
    21c4:	68 19 00 00 00       	push   0x19
    21c9:	f2 e9 51 fe ff ff    	bnd jmp 2020 <.plt>
    21cf:	90                   	nop
    21d0:	f3 0f 1e fa          	endbr64 
    21d4:	68 1a 00 00 00       	push   0x1a
    21d9:	f2 e9 41 fe ff ff    	bnd jmp 2020 <.plt>
    21df:	90                   	nop
    21e0:	f3 0f 1e fa          	endbr64 
    21e4:	68 1b 00 00 00       	push   0x1b
    21e9:	f2 e9 31 fe ff ff    	bnd jmp 2020 <.plt>
    21ef:	90                   	nop
    21f0:	f3 0f 1e fa          	endbr64 
    21f4:	68 1c 00 00 00       	push   0x1c
    21f9:	f2 e9 21 fe ff ff    	bnd jmp 2020 <.plt>
    21ff:	90                   	nop
    2200:	f3 0f 1e fa          	endbr64 
    2204:	68 1d 00 00 00       	push   0x1d
    2209:	f2 e9 11 fe ff ff    	bnd jmp 2020 <.plt>
    220f:	90                   	nop
    2210:	f3 0f 1e fa          	endbr64 
    2214:	68 1e 00 00 00       	push   0x1e
    2219:	f2 e9 01 fe ff ff    	bnd jmp 2020 <.plt>
    221f:	90                   	nop
    2220:	f3 0f 1e fa          	endbr64 
    2224:	68 1f 00 00 00       	push   0x1f
    2229:	f2 e9 f1 fd ff ff    	bnd jmp 2020 <.plt>
    222f:	90                   	nop
    2230:	f3 0f 1e fa          	endbr64 
    2234:	68 20 00 00 00       	push   0x20
    2239:	f2 e9 e1 fd ff ff    	bnd jmp 2020 <.plt>
    223f:	90                   	nop
    2240:	f3 0f 1e fa          	endbr64 
    2244:	68 21 00 00 00       	push   0x21
    2249:	f2 e9 d1 fd ff ff    	bnd jmp 2020 <.plt>
    224f:	90                   	nop
    2250:	f3 0f 1e fa          	endbr64 
    2254:	68 22 00 00 00       	push   0x22
    2259:	f2 e9 c1 fd ff ff    	bnd jmp 2020 <.plt>
    225f:	90                   	nop
    2260:	f3 0f 1e fa          	endbr64 
    2264:	68 23 00 00 00       	push   0x23
    2269:	f2 e9 b1 fd ff ff    	bnd jmp 2020 <.plt>
    226f:	90                   	nop
    2270:	f3 0f 1e fa          	endbr64 
    2274:	68 24 00 00 00       	push   0x24
    2279:	f2 e9 a1 fd ff ff    	bnd jmp 2020 <.plt>
    227f:	90                   	nop
    2280:	f3 0f 1e fa          	endbr64 
    2284:	68 25 00 00 00       	push   0x25
    2289:	f2 e9 91 fd ff ff    	bnd jmp 2020 <.plt>
    228f:	90                   	nop
    2290:	f3 0f 1e fa          	endbr64 
    2294:	68 26 00 00 00       	push   0x26
    2299:	f2 e9 81 fd ff ff    	bnd jmp 2020 <.plt>
    229f:	90                   	nop
    22a0:	f3 0f 1e fa          	endbr64 
    22a4:	68 27 00 00 00       	push   0x27
    22a9:	f2 e9 71 fd ff ff    	bnd jmp 2020 <.plt>
    22af:	90                   	nop
    22b0:	f3 0f 1e fa          	endbr64 
    22b4:	68 28 00 00 00       	push   0x28
    22b9:	f2 e9 61 fd ff ff    	bnd jmp 2020 <.plt>
    22bf:	90                   	nop
    22c0:	f3 0f 1e fa          	endbr64 
    22c4:	68 29 00 00 00       	push   0x29
    22c9:	f2 e9 51 fd ff ff    	bnd jmp 2020 <.plt>
    22cf:	90                   	nop
    22d0:	f3 0f 1e fa          	endbr64 
    22d4:	68 2a 00 00 00       	push   0x2a
    22d9:	f2 e9 41 fd ff ff    	bnd jmp 2020 <.plt>
    22df:	90                   	nop
    22e0:	f3 0f 1e fa          	endbr64 
    22e4:	68 2b 00 00 00       	push   0x2b
    22e9:	f2 e9 31 fd ff ff    	bnd jmp 2020 <.plt>
    22ef:	90                   	nop
    22f0:	f3 0f 1e fa          	endbr64 
    22f4:	68 2c 00 00 00       	push   0x2c
    22f9:	f2 e9 21 fd ff ff    	bnd jmp 2020 <.plt>
    22ff:	90                   	nop
    2300:	f3 0f 1e fa          	endbr64 
    2304:	68 2d 00 00 00       	push   0x2d
    2309:	f2 e9 11 fd ff ff    	bnd jmp 2020 <.plt>
    230f:	90                   	nop
    2310:	f3 0f 1e fa          	endbr64 
    2314:	68 2e 00 00 00       	push   0x2e
    2319:	f2 e9 01 fd ff ff    	bnd jmp 2020 <.plt>
    231f:	90                   	nop
    2320:	f3 0f 1e fa          	endbr64 
    2324:	68 2f 00 00 00       	push   0x2f
    2329:	f2 e9 f1 fc ff ff    	bnd jmp 2020 <.plt>
    232f:	90                   	nop
    2330:	f3 0f 1e fa          	endbr64 
    2334:	68 30 00 00 00       	push   0x30
    2339:	f2 e9 e1 fc ff ff    	bnd jmp 2020 <.plt>
    233f:	90                   	nop
    2340:	f3 0f 1e fa          	endbr64 
    2344:	68 31 00 00 00       	push   0x31
    2349:	f2 e9 d1 fc ff ff    	bnd jmp 2020 <.plt>
    234f:	90                   	nop
    2350:	f3 0f 1e fa          	endbr64 
    2354:	68 32 00 00 00       	push   0x32
    2359:	f2 e9 c1 fc ff ff    	bnd jmp 2020 <.plt>
    235f:	90                   	nop
    2360:	f3 0f 1e fa          	endbr64 
    2364:	68 33 00 00 00       	push   0x33
    2369:	f2 e9 b1 fc ff ff    	bnd jmp 2020 <.plt>
    236f:	90                   	nop
    2370:	f3 0f 1e fa          	endbr64 
    2374:	68 34 00 00 00       	push   0x34
    2379:	f2 e9 a1 fc ff ff    	bnd jmp 2020 <.plt>
    237f:	90                   	nop
    2380:	f3 0f 1e fa          	endbr64 
    2384:	68 35 00 00 00       	push   0x35
    2389:	f2 e9 91 fc ff ff    	bnd jmp 2020 <.plt>
    238f:	90                   	nop
    2390:	f3 0f 1e fa          	endbr64 
    2394:	68 36 00 00 00       	push   0x36
    2399:	f2 e9 81 fc ff ff    	bnd jmp 2020 <.plt>
    239f:	90                   	nop
    23a0:	f3 0f 1e fa          	endbr64 
    23a4:	68 37 00 00 00       	push   0x37
    23a9:	f2 e9 71 fc ff ff    	bnd jmp 2020 <.plt>
    23af:	90                   	nop
    23b0:	f3 0f 1e fa          	endbr64 
    23b4:	68 38 00 00 00       	push   0x38
    23b9:	f2 e9 61 fc ff ff    	bnd jmp 2020 <.plt>
    23bf:	90                   	nop
    23c0:	f3 0f 1e fa          	endbr64 
    23c4:	68 39 00 00 00       	push   0x39
    23c9:	f2 e9 51 fc ff ff    	bnd jmp 2020 <.plt>
    23cf:	90                   	nop
    23d0:	f3 0f 1e fa          	endbr64 
    23d4:	68 3a 00 00 00       	push   0x3a
    23d9:	f2 e9 41 fc ff ff    	bnd jmp 2020 <.plt>
    23df:	90                   	nop
    23e0:	f3 0f 1e fa          	endbr64 
    23e4:	68 3b 00 00 00       	push   0x3b
    23e9:	f2 e9 31 fc ff ff    	bnd jmp 2020 <.plt>
    23ef:	90                   	nop
    23f0:	f3 0f 1e fa          	endbr64 
    23f4:	68 3c 00 00 00       	push   0x3c
    23f9:	f2 e9 21 fc ff ff    	bnd jmp 2020 <.plt>
    23ff:	90                   	nop
    2400:	f3 0f 1e fa          	endbr64 
    2404:	68 3d 00 00 00       	push   0x3d
    2409:	f2 e9 11 fc ff ff    	bnd jmp 2020 <.plt>
    240f:	90                   	nop
    2410:	f3 0f 1e fa          	endbr64 
    2414:	68 3e 00 00 00       	push   0x3e
    2419:	f2 e9 01 fc ff ff    	bnd jmp 2020 <.plt>
    241f:	90                   	nop
    2420:	f3 0f 1e fa          	endbr64 
    2424:	68 3f 00 00 00       	push   0x3f
    2429:	f2 e9 f1 fb ff ff    	bnd jmp 2020 <.plt>
    242f:	90                   	nop
    2430:	f3 0f 1e fa          	endbr64 
    2434:	68 40 00 00 00       	push   0x40
    2439:	f2 e9 e1 fb ff ff    	bnd jmp 2020 <.plt>
    243f:	90                   	nop
    2440:	f3 0f 1e fa          	endbr64 
    2444:	68 41 00 00 00       	push   0x41
    2449:	f2 e9 d1 fb ff ff    	bnd jmp 2020 <.plt>
    244f:	90                   	nop
    2450:	f3 0f 1e fa          	endbr64 
    2454:	68 42 00 00 00       	push   0x42
    2459:	f2 e9 c1 fb ff ff    	bnd jmp 2020 <.plt>
    245f:	90                   	nop
    2460:	f3 0f 1e fa          	endbr64 
    2464:	68 43 00 00 00       	push   0x43
    2469:	f2 e9 b1 fb ff ff    	bnd jmp 2020 <.plt>
    246f:	90                   	nop
    2470:	f3 0f 1e fa          	endbr64 
    2474:	68 44 00 00 00       	push   0x44
    2479:	f2 e9 a1 fb ff ff    	bnd jmp 2020 <.plt>
    247f:	90                   	nop

Disassembly of section .plt.got:

0000000000002480 <__cxa_finalize@plt>:
    2480:	f3 0f 1e fa          	endbr64 
    2484:	f2 ff 25 6d eb 00 00 	bnd jmp QWORD PTR [rip+0xeb6d]        # 10ff8 <__cxa_finalize@GLIBC_2.2.5>
    248b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

0000000000002490 <free@plt>:
    2490:	f3 0f 1e fa          	endbr64 
    2494:	f2 ff 25 15 e9 00 00 	bnd jmp QWORD PTR [rip+0xe915]        # 10db0 <free@GLIBC_2.2.5>
    249b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024a0 <putchar@plt>:
    24a0:	f3 0f 1e fa          	endbr64 
    24a4:	f2 ff 25 0d e9 00 00 	bnd jmp QWORD PTR [rip+0xe90d]        # 10db8 <putchar@GLIBC_2.2.5>
    24ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024b0 <pthread_create@plt>:
    24b0:	f3 0f 1e fa          	endbr64 
    24b4:	f2 ff 25 05 e9 00 00 	bnd jmp QWORD PTR [rip+0xe905]        # 10dc0 <pthread_create@GLIBC_2.2.5>
    24bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024c0 <localtime@plt>:
    24c0:	f3 0f 1e fa          	endbr64 
    24c4:	f2 ff 25 fd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8fd]        # 10dc8 <localtime@GLIBC_2.2.5>
    24cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024d0 <strncpy@plt>:
    24d0:	f3 0f 1e fa          	endbr64 
    24d4:	f2 ff 25 f5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8f5]        # 10dd0 <strncpy@GLIBC_2.2.5>
    24db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024e0 <strncmp@plt>:
    24e0:	f3 0f 1e fa          	endbr64 
    24e4:	f2 ff 25 ed e8 00 00 	bnd jmp QWORD PTR [rip+0xe8ed]        # 10dd8 <strncmp@GLIBC_2.2.5>
    24eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024f0 <strcpy@plt>:
    24f0:	f3 0f 1e fa          	endbr64 
    24f4:	f2 ff 25 e5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8e5]        # 10de0 <strcpy@GLIBC_2.2.5>
    24fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002500 <lua_settop@plt>:
    2500:	f3 0f 1e fa          	endbr64 
    2504:	f2 ff 25 dd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8dd]        # 10de8 <lua_settop@LUA_5.3>
    250b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002510 <lua_gettop@plt>:
    2510:	f3 0f 1e fa          	endbr64 
    2514:	f2 ff 25 d5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8d5]        # 10df0 <lua_gettop@LUA_5.3>
    251b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002520 <puts@plt>:
    2520:	f3 0f 1e fa          	endbr64 
    2524:	f2 ff 25 cd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8cd]        # 10df8 <puts@GLIBC_2.2.5>
    252b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002530 <setsockopt@plt>:
    2530:	f3 0f 1e fa          	endbr64 
    2534:	f2 ff 25 c5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8c5]        # 10e00 <setsockopt@GLIBC_2.2.5>
    253b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002540 <backtrace_symbols@plt>:
    2540:	f3 0f 1e fa          	endbr64 
    2544:	f2 ff 25 bd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8bd]        # 10e08 <backtrace_symbols@GLIBC_2.2.5>
    254b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002550 <sqlite3_exec@plt>:
    2550:	f3 0f 1e fa          	endbr64 
    2554:	f2 ff 25 b5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8b5]        # 10e10 <sqlite3_exec>
    255b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002560 <sqlite3_open@plt>:
    2560:	f3 0f 1e fa          	endbr64 
    2564:	f2 ff 25 ad e8 00 00 	bnd jmp QWORD PTR [rip+0xe8ad]        # 10e18 <sqlite3_open>
    256b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002570 <fclose@plt>:
    2570:	f3 0f 1e fa          	endbr64 
    2574:	f2 ff 25 a5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8a5]        # 10e20 <fclose@GLIBC_2.2.5>
    257b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002580 <opendir@plt>:
    2580:	f3 0f 1e fa          	endbr64 
    2584:	f2 ff 25 9d e8 00 00 	bnd jmp QWORD PTR [rip+0xe89d]        # 10e28 <opendir@GLIBC_2.2.5>
    258b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002590 <strlen@plt>:
    2590:	f3 0f 1e fa          	endbr64 
    2594:	f2 ff 25 95 e8 00 00 	bnd jmp QWORD PTR [rip+0xe895]        # 10e30 <strlen@GLIBC_2.2.5>
    259b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025a0 <backtrace@plt>:
    25a0:	f3 0f 1e fa          	endbr64 
    25a4:	f2 ff 25 8d e8 00 00 	bnd jmp QWORD PTR [rip+0xe88d]        # 10e38 <backtrace@GLIBC_2.2.5>
    25ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025b0 <__stack_chk_fail@plt>:
    25b0:	f3 0f 1e fa          	endbr64 
    25b4:	f2 ff 25 85 e8 00 00 	bnd jmp QWORD PTR [rip+0xe885]        # 10e40 <__stack_chk_fail@GLIBC_2.4>
    25bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025c0 <htons@plt>:
    25c0:	f3 0f 1e fa          	endbr64 
    25c4:	f2 ff 25 7d e8 00 00 	bnd jmp QWORD PTR [rip+0xe87d]        # 10e48 <htons@GLIBC_2.2.5>
    25cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025d0 <send@plt>:
    25d0:	f3 0f 1e fa          	endbr64 
    25d4:	f2 ff 25 75 e8 00 00 	bnd jmp QWORD PTR [rip+0xe875]        # 10e50 <send@GLIBC_2.2.5>
    25db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025e0 <strchr@plt>:
    25e0:	f3 0f 1e fa          	endbr64 
    25e4:	f2 ff 25 6d e8 00 00 	bnd jmp QWORD PTR [rip+0xe86d]        # 10e58 <strchr@GLIBC_2.2.5>
    25eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025f0 <printf@plt>:
    25f0:	f3 0f 1e fa          	endbr64 
    25f4:	f2 ff 25 65 e8 00 00 	bnd jmp QWORD PTR [rip+0xe865]        # 10e60 <printf@GLIBC_2.2.5>
    25fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002600 <snprintf@plt>:
    2600:	f3 0f 1e fa          	endbr64 
    2604:	f2 ff 25 5d e8 00 00 	bnd jmp QWORD PTR [rip+0xe85d]        # 10e68 <snprintf@GLIBC_2.2.5>
    260b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002610 <fputs@plt>:
    2610:	f3 0f 1e fa          	endbr64 
    2614:	f2 ff 25 55 e8 00 00 	bnd jmp QWORD PTR [rip+0xe855]        # 10e70 <fputs@GLIBC_2.2.5>
    261b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002620 <htonl@plt>:
    2620:	f3 0f 1e fa          	endbr64 
    2624:	f2 ff 25 4d e8 00 00 	bnd jmp QWORD PTR [rip+0xe84d]        # 10e78 <htonl@GLIBC_2.2.5>
    262b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002630 <memset@plt>:
    2630:	f3 0f 1e fa          	endbr64 
    2634:	f2 ff 25 45 e8 00 00 	bnd jmp QWORD PTR [rip+0xe845]        # 10e80 <memset@GLIBC_2.2.5>
    263b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002640 <strncat@plt>:
    2640:	f3 0f 1e fa          	endbr64 
    2644:	f2 ff 25 3d e8 00 00 	bnd jmp QWORD PTR [rip+0xe83d]        # 10e88 <strncat@GLIBC_2.2.5>
    264b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002650 <close@plt>:
    2650:	f3 0f 1e fa          	endbr64 
    2654:	f2 ff 25 35 e8 00 00 	bnd jmp QWORD PTR [rip+0xe835]        # 10e90 <close@GLIBC_2.2.5>
    265b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002660 <regcomp@plt>:
    2660:	f3 0f 1e fa          	endbr64 
    2664:	f2 ff 25 2d e8 00 00 	bnd jmp QWORD PTR [rip+0xe82d]        # 10e98 <regcomp@GLIBC_2.2.5>
    266b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002670 <strcspn@plt>:
    2670:	f3 0f 1e fa          	endbr64 
    2674:	f2 ff 25 25 e8 00 00 	bnd jmp QWORD PTR [rip+0xe825]        # 10ea0 <strcspn@GLIBC_2.2.5>
    267b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002680 <read@plt>:
    2680:	f3 0f 1e fa          	endbr64 
    2684:	f2 ff 25 1d e8 00 00 	bnd jmp QWORD PTR [rip+0xe81d]        # 10ea8 <read@GLIBC_2.2.5>
    268b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002690 <lua_close@plt>:
    2690:	f3 0f 1e fa          	endbr64 
    2694:	f2 ff 25 15 e8 00 00 	bnd jmp QWORD PTR [rip+0xe815]        # 10eb0 <lua_close@LUA_5.3>
    269b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026a0 <sqlite3_errmsg@plt>:
    26a0:	f3 0f 1e fa          	endbr64 
    26a4:	f2 ff 25 0d e8 00 00 	bnd jmp QWORD PTR [rip+0xe80d]        # 10eb8 <sqlite3_errmsg>
    26ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026b0 <strcmp@plt>:
    26b0:	f3 0f 1e fa          	endbr64 
    26b4:	f2 ff 25 05 e8 00 00 	bnd jmp QWORD PTR [rip+0xe805]        # 10ec0 <strcmp@GLIBC_2.2.5>
    26bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026c0 <signal@plt>:
    26c0:	f3 0f 1e fa          	endbr64 
    26c4:	f2 ff 25 fd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7fd]        # 10ec8 <signal@GLIBC_2.2.5>
    26cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026d0 <fprintf@plt>:
    26d0:	f3 0f 1e fa          	endbr64 
    26d4:	f2 ff 25 f5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7f5]        # 10ed0 <fprintf@GLIBC_2.2.5>
    26db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026e0 <strtol@plt>:
    26e0:	f3 0f 1e fa          	endbr64 
    26e4:	f2 ff 25 ed e7 00 00 	bnd jmp QWORD PTR [rip+0xe7ed]        # 10ed8 <strtol@GLIBC_2.2.5>
    26eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026f0 <sqlite3_close@plt>:
    26f0:	f3 0f 1e fa          	endbr64 
    26f4:	f2 ff 25 e5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7e5]        # 10ee0 <sqlite3_close>
    26fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002700 <time@plt>:
    2700:	f3 0f 1e fa          	endbr64 
    2704:	f2 ff 25 dd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7dd]        # 10ee8 <time@GLIBC_2.2.5>
    270b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002710 <readdir@plt>:
    2710:	f3 0f 1e fa          	endbr64 
    2714:	f2 ff 25 d5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7d5]        # 10ef0 <readdir@GLIBC_2.2.5>
    271b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002720 <luaL_newstate@plt>:
    2720:	f3 0f 1e fa          	endbr64 
    2724:	f2 ff 25 cd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7cd]        # 10ef8 <luaL_newstate@LUA_5.3>
    272b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002730 <pcap_loop@plt>:
    2730:	f3 0f 1e fa          	endbr64 
    2734:	f2 ff 25 c5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7c5]        # 10f00 <pcap_loop>
    273b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002740 <malloc@plt>:
    2740:	f3 0f 1e fa          	endbr64 
    2744:	f2 ff 25 bd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7bd]        # 10f08 <malloc@GLIBC_2.2.5>
    274b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002750 <listen@plt>:
    2750:	f3 0f 1e fa          	endbr64 
    2754:	f2 ff 25 b5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7b5]        # 10f10 <listen@GLIBC_2.2.5>
    275b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002760 <lua_pcallk@plt>:
    2760:	f3 0f 1e fa          	endbr64 
    2764:	f2 ff 25 ad e7 00 00 	bnd jmp QWORD PTR [rip+0xe7ad]        # 10f18 <lua_pcallk@LUA_5.3>
    276b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002770 <regexec@plt>:
    2770:	f3 0f 1e fa          	endbr64 
    2774:	f2 ff 25 a5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7a5]        # 10f20 <regexec@GLIBC_2.3.4>
    277b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002780 <ntohs@plt>:
    2780:	f3 0f 1e fa          	endbr64 
    2784:	f2 ff 25 9d e7 00 00 	bnd jmp QWORD PTR [rip+0xe79d]        # 10f28 <ntohs@GLIBC_2.2.5>
    278b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002790 <luaL_loadfilex@plt>:
    2790:	f3 0f 1e fa          	endbr64 
    2794:	f2 ff 25 95 e7 00 00 	bnd jmp QWORD PTR [rip+0xe795]        # 10f30 <luaL_loadfilex@LUA_5.3>
    279b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027a0 <bind@plt>:
    27a0:	f3 0f 1e fa          	endbr64 
    27a4:	f2 ff 25 8d e7 00 00 	bnd jmp QWORD PTR [rip+0xe78d]        # 10f38 <bind@GLIBC_2.2.5>
    27ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027b0 <fopen@plt>:
    27b0:	f3 0f 1e fa          	endbr64 
    27b4:	f2 ff 25 85 e7 00 00 	bnd jmp QWORD PTR [rip+0xe785]        # 10f40 <fopen@GLIBC_2.2.5>
    27bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027c0 <perror@plt>:
    27c0:	f3 0f 1e fa          	endbr64 
    27c4:	f2 ff 25 7d e7 00 00 	bnd jmp QWORD PTR [rip+0xe77d]        # 10f48 <perror@GLIBC_2.2.5>
    27cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027d0 <strtok@plt>:
    27d0:	f3 0f 1e fa          	endbr64 
    27d4:	f2 ff 25 75 e7 00 00 	bnd jmp QWORD PTR [rip+0xe775]        # 10f50 <strtok@GLIBC_2.2.5>
    27db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027e0 <pthread_join@plt>:
    27e0:	f3 0f 1e fa          	endbr64 
    27e4:	f2 ff 25 6d e7 00 00 	bnd jmp QWORD PTR [rip+0xe76d]        # 10f58 <pthread_join@GLIBC_2.2.5>
    27eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027f0 <luaL_openlibs@plt>:
    27f0:	f3 0f 1e fa          	endbr64 
    27f4:	f2 ff 25 65 e7 00 00 	bnd jmp QWORD PTR [rip+0xe765]        # 10f60 <luaL_openlibs@LUA_5.3>
    27fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002800 <getopt@plt>:
    2800:	f3 0f 1e fa          	endbr64 
    2804:	f2 ff 25 5d e7 00 00 	bnd jmp QWORD PTR [rip+0xe75d]        # 10f68 <getopt@GLIBC_2.2.5>
    280b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002810 <accept@plt>:
    2810:	f3 0f 1e fa          	endbr64 
    2814:	f2 ff 25 55 e7 00 00 	bnd jmp QWORD PTR [rip+0xe755]        # 10f70 <accept@GLIBC_2.2.5>
    281b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002820 <atoi@plt>:
    2820:	f3 0f 1e fa          	endbr64 
    2824:	f2 ff 25 4d e7 00 00 	bnd jmp QWORD PTR [rip+0xe74d]        # 10f78 <atoi@GLIBC_2.2.5>
    282b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002830 <getline@plt>:
    2830:	f3 0f 1e fa          	endbr64 
    2834:	f2 ff 25 45 e7 00 00 	bnd jmp QWORD PTR [rip+0xe745]        # 10f80 <getline@GLIBC_2.2.5>
    283b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002840 <strcat@plt>:
    2840:	f3 0f 1e fa          	endbr64 
    2844:	f2 ff 25 3d e7 00 00 	bnd jmp QWORD PTR [rip+0xe73d]        # 10f88 <strcat@GLIBC_2.2.5>
    284b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002850 <pcap_open_live@plt>:
    2850:	f3 0f 1e fa          	endbr64 
    2854:	f2 ff 25 35 e7 00 00 	bnd jmp QWORD PTR [rip+0xe735]        # 10f90 <pcap_open_live>
    285b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002860 <sqlite3_free@plt>:
    2860:	f3 0f 1e fa          	endbr64 
    2864:	f2 ff 25 2d e7 00 00 	bnd jmp QWORD PTR [rip+0xe72d]        # 10f98 <sqlite3_free>
    286b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002870 <sprintf@plt>:
    2870:	f3 0f 1e fa          	endbr64 
    2874:	f2 ff 25 25 e7 00 00 	bnd jmp QWORD PTR [rip+0xe725]        # 10fa0 <sprintf@GLIBC_2.2.5>
    287b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002880 <exit@plt>:
    2880:	f3 0f 1e fa          	endbr64 
    2884:	f2 ff 25 1d e7 00 00 	bnd jmp QWORD PTR [rip+0xe71d]        # 10fa8 <exit@GLIBC_2.2.5>
    288b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002890 <ntohl@plt>:
    2890:	f3 0f 1e fa          	endbr64 
    2894:	f2 ff 25 15 e7 00 00 	bnd jmp QWORD PTR [rip+0xe715]        # 10fb0 <ntohl@GLIBC_2.2.5>
    289b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028a0 <sleep@plt>:
    28a0:	f3 0f 1e fa          	endbr64 
    28a4:	f2 ff 25 0d e7 00 00 	bnd jmp QWORD PTR [rip+0xe70d]        # 10fb8 <sleep@GLIBC_2.2.5>
    28ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028b0 <getdelim@plt>:
    28b0:	f3 0f 1e fa          	endbr64 
    28b4:	f2 ff 25 05 e7 00 00 	bnd jmp QWORD PTR [rip+0xe705]        # 10fc0 <getdelim@GLIBC_2.2.5>
    28bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028c0 <strstr@plt>:
    28c0:	f3 0f 1e fa          	endbr64 
    28c4:	f2 ff 25 fd e6 00 00 	bnd jmp QWORD PTR [rip+0xe6fd]        # 10fc8 <strstr@GLIBC_2.2.5>
    28cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028d0 <socket@plt>:
    28d0:	f3 0f 1e fa          	endbr64 
    28d4:	f2 ff 25 f5 e6 00 00 	bnd jmp QWORD PTR [rip+0xe6f5]        # 10fd0 <socket@GLIBC_2.2.5>
    28db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000000028e0 <_start>:
    28e0:	f3 0f 1e fa          	endbr64 
    28e4:	31 ed                	xor    ebp,ebp
    28e6:	49 89 d1             	mov    r9,rdx
    28e9:	5e                   	pop    rsi
    28ea:	48 89 e2             	mov    rdx,rsp
    28ed:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    28f1:	50                   	push   rax
    28f2:	54                   	push   rsp
    28f3:	4c 8d 05 36 94 00 00 	lea    r8,[rip+0x9436]        # bd30 <__libc_csu_fini>
    28fa:	48 8d 0d bf 93 00 00 	lea    rcx,[rip+0x93bf]        # bcc0 <__libc_csu_init>
    2901:	48 8d 3d fa 40 00 00 	lea    rdi,[rip+0x40fa]        # 6a02 <main>
    2908:	ff 15 d2 e6 00 00    	call   QWORD PTR [rip+0xe6d2]        # 10fe0 <__libc_start_main@GLIBC_2.2.5>
    290e:	f4                   	hlt    
    290f:	90                   	nop

0000000000002910 <deregister_tm_clones>:
    2910:	48 8d 3d 31 e7 00 00 	lea    rdi,[rip+0xe731]        # 11048 <__TMC_END__>
    2917:	48 8d 05 2a e7 00 00 	lea    rax,[rip+0xe72a]        # 11048 <__TMC_END__>
    291e:	48 39 f8             	cmp    rax,rdi
    2921:	74 15                	je     2938 <deregister_tm_clones+0x28>
    2923:	48 8b 05 ae e6 00 00 	mov    rax,QWORD PTR [rip+0xe6ae]        # 10fd8 <_ITM_deregisterTMCloneTable>
    292a:	48 85 c0             	test   rax,rax
    292d:	74 09                	je     2938 <deregister_tm_clones+0x28>
    292f:	ff e0                	jmp    rax
    2931:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    2938:	c3                   	ret    
    2939:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002940 <register_tm_clones>:
    2940:	48 8d 3d 01 e7 00 00 	lea    rdi,[rip+0xe701]        # 11048 <__TMC_END__>
    2947:	48 8d 35 fa e6 00 00 	lea    rsi,[rip+0xe6fa]        # 11048 <__TMC_END__>
    294e:	48 29 fe             	sub    rsi,rdi
    2951:	48 89 f0             	mov    rax,rsi
    2954:	48 c1 ee 3f          	shr    rsi,0x3f
    2958:	48 c1 f8 03          	sar    rax,0x3
    295c:	48 01 c6             	add    rsi,rax
    295f:	48 d1 fe             	sar    rsi,1
    2962:	74 14                	je     2978 <register_tm_clones+0x38>
    2964:	48 8b 05 85 e6 00 00 	mov    rax,QWORD PTR [rip+0xe685]        # 10ff0 <_ITM_registerTMCloneTable>
    296b:	48 85 c0             	test   rax,rax
    296e:	74 08                	je     2978 <register_tm_clones+0x38>
    2970:	ff e0                	jmp    rax
    2972:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    2978:	c3                   	ret    
    2979:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002980 <__do_global_dtors_aux>:
    2980:	f3 0f 1e fa          	endbr64 
    2984:	80 3d e5 e6 00 00 00 	cmp    BYTE PTR [rip+0xe6e5],0x0        # 11070 <completed.8061>
    298b:	75 2b                	jne    29b8 <__do_global_dtors_aux+0x38>
    298d:	55                   	push   rbp
    298e:	48 83 3d 62 e6 00 00 	cmp    QWORD PTR [rip+0xe662],0x0        # 10ff8 <__cxa_finalize@GLIBC_2.2.5>
    2995:	00 
    2996:	48 89 e5             	mov    rbp,rsp
    2999:	74 0c                	je     29a7 <__do_global_dtors_aux+0x27>
    299b:	48 8b 3d 66 e6 00 00 	mov    rdi,QWORD PTR [rip+0xe666]        # 11008 <__dso_handle>
    29a2:	e8 d9 fa ff ff       	call   2480 <__cxa_finalize@plt>
    29a7:	e8 64 ff ff ff       	call   2910 <deregister_tm_clones>
    29ac:	c6 05 bd e6 00 00 01 	mov    BYTE PTR [rip+0xe6bd],0x1        # 11070 <completed.8061>
    29b3:	5d                   	pop    rbp
    29b4:	c3                   	ret    
    29b5:	0f 1f 00             	nop    DWORD PTR [rax]
    29b8:	c3                   	ret    
    29b9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000029c0 <frame_dummy>:
    29c0:	f3 0f 1e fa          	endbr64 
    29c4:	e9 77 ff ff ff       	jmp    2940 <register_tm_clones>

00000000000029c9 <add_thread>:
    29c9:	f3 0f 1e fa          	endbr64 
    29cd:	55                   	push   rbp
    29ce:	48 89 e5             	mov    rbp,rsp
    29d1:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    29d5:	8b 05 a5 e6 00 00    	mov    eax,DWORD PTR [rip+0xe6a5]        # 11080 <thread_count>
    29db:	8d 50 01             	lea    edx,[rax+0x1]
    29de:	89 15 9c e6 00 00    	mov    DWORD PTR [rip+0xe69c],edx        # 11080 <thread_count>
    29e4:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    29e8:	48 8b 12             	mov    rdx,QWORD PTR [rdx]
    29eb:	48 98                	cdqe   
    29ed:	48 8d 0c c5 00 00 00 	lea    rcx,[rax*8+0x0]
    29f4:	00 
    29f5:	48 8d 05 64 53 10 00 	lea    rax,[rip+0x105364]        # 107d60 <threads>
    29fc:	48 89 14 01          	mov    QWORD PTR [rcx+rax*1],rdx
    2a00:	90                   	nop
    2a01:	5d                   	pop    rbp
    2a02:	c3                   	ret    

0000000000002a03 <pktmgr>:
    2a03:	f3 0f 1e fa          	endbr64 
    2a07:	55                   	push   rbp
    2a08:	48 89 e5             	mov    rbp,rsp
    2a0b:	53                   	push   rbx
    2a0c:	48 83 ec 38          	sub    rsp,0x38
    2a10:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    2a14:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    2a18:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    2a1c:	b8 00 00 00 00       	mov    eax,0x0
    2a21:	e8 ec 8f 00 00       	call   ba12 <pps_monitor>
    2a26:	0f b6 05 2c 53 10 00 	movzx  eax,BYTE PTR [rip+0x10532c]        # 107d59 <packet_print>
    2a2d:	84 c0                	test   al,al
    2a2f:	74 0c                	je     2a3d <pktmgr+0x3a>
    2a31:	48 8d 3d 18 96 00 00 	lea    rdi,[rip+0x9618]        # c050 <_IO_stdin_used+0x50>
    2a38:	e8 e3 fa ff ff       	call   2520 <puts@plt>
    2a3d:	8b 05 41 e6 00 00    	mov    eax,DWORD PTR [rip+0xe641]        # 11084 <total_pkt_captured>
    2a43:	83 c0 01             	add    eax,0x1
    2a46:	89 05 38 e6 00 00    	mov    DWORD PTR [rip+0xe638],eax        # 11084 <total_pkt_captured>
    2a4c:	8b 05 0e 55 10 00    	mov    eax,DWORD PTR [rip+0x10550e]        # 107f60 <pkt_counter>
    2a52:	83 c0 01             	add    eax,0x1
    2a55:	89 05 05 55 10 00    	mov    DWORD PTR [rip+0x105505],eax        # 107f60 <pkt_counter>
    2a5b:	8b 15 ff 54 10 00    	mov    edx,DWORD PTR [rip+0x1054ff]        # 107f60 <pkt_counter>
    2a61:	8b 05 39 4e 10 00    	mov    eax,DWORD PTR [rip+0x104e39]        # 1078a0 <clean_delay_pkts>
    2a67:	39 c2                	cmp    edx,eax
    2a69:	72 0a                	jb     2a75 <pktmgr+0x72>
    2a6b:	c7 05 eb 54 10 00 00 	mov    DWORD PTR [rip+0x1054eb],0x0        # 107f60 <pkt_counter>
    2a72:	00 00 00 
    2a75:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2a79:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    2a7d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2a81:	0f b7 40 0c          	movzx  eax,WORD PTR [rax+0xc]
    2a85:	0f b7 c0             	movzx  eax,ax
    2a88:	3d 86 dd 00 00       	cmp    eax,0xdd86
    2a8d:	74 46                	je     2ad5 <pktmgr+0xd2>
    2a8f:	3d 86 dd 00 00       	cmp    eax,0xdd86
    2a94:	7f 77                	jg     2b0d <pktmgr+0x10a>
    2a96:	3d 80 35 00 00       	cmp    eax,0x3580
    2a9b:	74 23                	je     2ac0 <pktmgr+0xbd>
    2a9d:	3d 80 35 00 00       	cmp    eax,0x3580
    2aa2:	7f 69                	jg     2b0d <pktmgr+0x10a>
    2aa4:	3d 08 06 00 00       	cmp    eax,0x608
    2aa9:	74 15                	je     2ac0 <pktmgr+0xbd>
    2aab:	3d 08 06 00 00       	cmp    eax,0x608
    2ab0:	7f 5b                	jg     2b0d <pktmgr+0x10a>
    2ab2:	83 f8 08             	cmp    eax,0x8
    2ab5:	74 33                	je     2aea <pktmgr+0xe7>
    2ab7:	3d 90 00 00 00       	cmp    eax,0x90
    2abc:	74 41                	je     2aff <pktmgr+0xfc>
    2abe:	eb 4d                	jmp    2b0d <pktmgr+0x10a>
    2ac0:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2ac4:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2ac8:	48 89 d6             	mov    rsi,rdx
    2acb:	48 89 c7             	mov    rdi,rax
    2ace:	e8 87 00 00 00       	call   2b5a <arpdecode>
    2ad3:	eb 7d                	jmp    2b52 <pktmgr+0x14f>
    2ad5:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2ad9:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2add:	48 89 d6             	mov    rsi,rdx
    2ae0:	48 89 c7             	mov    rdi,rax
    2ae3:	e8 bc 88 00 00       	call   b3a4 <ip6decode>
    2ae8:	eb 68                	jmp    2b52 <pktmgr+0x14f>
    2aea:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2aee:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2af2:	48 89 d6             	mov    rsi,rdx
    2af5:	48 89 c7             	mov    rdi,rax
    2af8:	e8 58 0b 00 00       	call   3655 <ipv4pktmgr>
    2afd:	eb 53                	jmp    2b52 <pktmgr+0x14f>
    2aff:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2b03:	48 89 c7             	mov    rdi,rax
    2b06:	e8 43 03 00 00       	call   2e4e <loopback_ctp_decode>
    2b0b:	eb 45                	jmp    2b52 <pktmgr+0x14f>
    2b0d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2b11:	48 89 c7             	mov    rdi,rax
    2b14:	e8 f6 04 00 00       	call   300f <uc_mac_ntoa>
    2b19:	48 89 c3             	mov    rbx,rax
    2b1c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2b20:	48 83 c0 06          	add    rax,0x6
    2b24:	48 89 c7             	mov    rdi,rax
    2b27:	e8 e3 04 00 00       	call   300f <uc_mac_ntoa>
    2b2c:	41 b9 ff ff ff ff    	mov    r9d,0xffffffff
    2b32:	41 b8 ff ff ff ff    	mov    r8d,0xffffffff
    2b38:	48 89 d9             	mov    rcx,rbx
    2b3b:	48 89 c2             	mov    rdx,rax
    2b3e:	48 8d 35 53 95 00 00 	lea    rsi,[rip+0x9553]        # c098 <_IO_stdin_used+0x98>
    2b45:	48 8d 3d 7e 95 00 00 	lea    rdi,[rip+0x957e]        # c0ca <_IO_stdin_used+0xca>
    2b4c:	e8 a1 68 00 00       	call   93f2 <lfprintf>
    2b51:	90                   	nop
    2b52:	90                   	nop
    2b53:	48 83 c4 38          	add    rsp,0x38
    2b57:	5b                   	pop    rbx
    2b58:	5d                   	pop    rbp
    2b59:	c3                   	ret    

0000000000002b5a <arpdecode>:
    2b5a:	f3 0f 1e fa          	endbr64 
    2b5e:	55                   	push   rbp
    2b5f:	48 89 e5             	mov    rbp,rsp
    2b62:	48 81 ec 50 03 00 00 	sub    rsp,0x350
    2b69:	48 89 bd b8 fc ff ff 	mov    QWORD PTR [rbp-0x348],rdi
    2b70:	48 89 b5 b0 fc ff ff 	mov    QWORD PTR [rbp-0x350],rsi
    2b77:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2b7e:	00 00 
    2b80:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2b84:	31 c0                	xor    eax,eax
    2b86:	0f b6 05 cc 51 10 00 	movzx  eax,BYTE PTR [rip+0x1051cc]        # 107d59 <packet_print>
    2b8d:	84 c0                	test   al,al
    2b8f:	74 18                	je     2ba9 <arpdecode+0x4f>
    2b91:	48 8d 35 50 95 00 00 	lea    rsi,[rip+0x9550]        # c0e8 <_IO_stdin_used+0xe8>
    2b98:	48 8d 3d 51 95 00 00 	lea    rdi,[rip+0x9551]        # c0f0 <_IO_stdin_used+0xf0>
    2b9f:	b8 00 00 00 00       	mov    eax,0x0
    2ba4:	e8 47 fa ff ff       	call   25f0 <printf@plt>
    2ba9:	48 8b 85 b8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x348]
    2bb0:	48 83 c0 0e          	add    rax,0xe
    2bb4:	48 89 85 c8 fc ff ff 	mov    QWORD PTR [rbp-0x338],rax
    2bbb:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2bc2:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    2bc6:	0f b7 c0             	movzx  eax,ax
    2bc9:	3d 00 18 00 00       	cmp    eax,0x1800
    2bce:	74 35                	je     2c05 <arpdecode+0xab>
    2bd0:	3d 00 18 00 00       	cmp    eax,0x1800
    2bd5:	0f 8f 1d 02 00 00    	jg     2df8 <arpdecode+0x29e>
    2bdb:	3d 00 02 00 00       	cmp    eax,0x200
    2be0:	0f 84 eb 00 00 00    	je     2cd1 <arpdecode+0x177>
    2be6:	3d 00 02 00 00       	cmp    eax,0x200
    2beb:	0f 8f 07 02 00 00    	jg     2df8 <arpdecode+0x29e>
    2bf1:	83 f8 02             	cmp    eax,0x2
    2bf4:	0f 84 d7 00 00 00    	je     2cd1 <arpdecode+0x177>
    2bfa:	3d 00 01 00 00       	cmp    eax,0x100
    2bff:	0f 85 f3 01 00 00    	jne    2df8 <arpdecode+0x29e>
    2c05:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2c0c:	48 83 c0 18          	add    rax,0x18
    2c10:	48 89 c7             	mov    rdi,rax
    2c13:	e8 9d 04 00 00       	call   30b5 <u8_ipv4_ntoa>
    2c18:	48 89 c1             	mov    rcx,rax
    2c1b:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2c1f:	ba 20 00 00 00       	mov    edx,0x20
    2c24:	48 89 ce             	mov    rsi,rcx
    2c27:	48 89 c7             	mov    rdi,rax
    2c2a:	e8 a1 f8 ff ff       	call   24d0 <strncpy@plt>
    2c2f:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2c36:	48 83 c0 0e          	add    rax,0xe
    2c3a:	48 89 c7             	mov    rdi,rax
    2c3d:	e8 73 04 00 00       	call   30b5 <u8_ipv4_ntoa>
    2c42:	48 89 c1             	mov    rcx,rax
    2c45:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2c49:	ba 20 00 00 00       	mov    edx,0x20
    2c4e:	48 89 ce             	mov    rsi,rcx
    2c51:	48 89 c7             	mov    rdi,rax
    2c54:	e8 77 f8 ff ff       	call   24d0 <strncpy@plt>
    2c59:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2c5d:	ba 05 00 00 00       	mov    edx,0x5
    2c62:	48 8d 35 8a 94 00 00 	lea    rsi,[rip+0x948a]        # c0f3 <_IO_stdin_used+0xf3>
    2c69:	48 89 c7             	mov    rdi,rax
    2c6c:	e8 6f f8 ff ff       	call   24e0 <strncmp@plt>
    2c71:	85 c0                	test   eax,eax
    2c73:	75 2c                	jne    2ca1 <arpdecode+0x147>
    2c75:	0f b6 05 dd 50 10 00 	movzx  eax,BYTE PTR [rip+0x1050dd]        # 107d59 <packet_print>
    2c7c:	84 c0                	test   al,al
    2c7e:	0f 84 97 01 00 00    	je     2e1b <arpdecode+0x2c1>
    2c84:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2c88:	48 89 c6             	mov    rsi,rax
    2c8b:	48 8d 3d 6e 94 00 00 	lea    rdi,[rip+0x946e]        # c100 <_IO_stdin_used+0x100>
    2c92:	b8 00 00 00 00       	mov    eax,0x0
    2c97:	e8 54 f9 ff ff       	call   25f0 <printf@plt>
    2c9c:	e9 7a 01 00 00       	jmp    2e1b <arpdecode+0x2c1>
    2ca1:	0f b6 05 b1 50 10 00 	movzx  eax,BYTE PTR [rip+0x1050b1]        # 107d59 <packet_print>
    2ca8:	84 c0                	test   al,al
    2caa:	0f 84 6b 01 00 00    	je     2e1b <arpdecode+0x2c1>
    2cb0:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2cb4:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2cb8:	48 89 c6             	mov    rsi,rax
    2cbb:	48 8d 3d 5e 94 00 00 	lea    rdi,[rip+0x945e]        # c120 <_IO_stdin_used+0x120>
    2cc2:	b8 00 00 00 00       	mov    eax,0x0
    2cc7:	e8 24 f9 ff ff       	call   25f0 <printf@plt>
    2ccc:	e9 4a 01 00 00       	jmp    2e1b <arpdecode+0x2c1>
    2cd1:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2cd8:	48 83 c0 08          	add    rax,0x8
    2cdc:	48 89 c7             	mov    rdi,rax
    2cdf:	e8 7d 02 00 00       	call   2f61 <mac_ntoa>
    2ce4:	48 89 c1             	mov    rcx,rax
    2ce7:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2ceb:	ba 40 00 00 00       	mov    edx,0x40
    2cf0:	48 89 ce             	mov    rsi,rcx
    2cf3:	48 89 c7             	mov    rdi,rax
    2cf6:	e8 d5 f7 ff ff       	call   24d0 <strncpy@plt>
    2cfb:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2d02:	48 83 c0 0e          	add    rax,0xe
    2d06:	48 89 c7             	mov    rdi,rax
    2d09:	e8 a7 03 00 00       	call   30b5 <u8_ipv4_ntoa>
    2d0e:	48 89 c1             	mov    rcx,rax
    2d11:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d15:	ba 20 00 00 00       	mov    edx,0x20
    2d1a:	48 89 ce             	mov    rsi,rcx
    2d1d:	48 89 c7             	mov    rdi,rax
    2d20:	e8 ab f7 ff ff       	call   24d0 <strncpy@plt>
    2d25:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2d29:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d2d:	48 89 d6             	mov    rsi,rdx
    2d30:	48 89 c7             	mov    rdi,rax
    2d33:	e8 e4 50 00 00       	call   7e1c <entry_exists>
    2d38:	83 f8 ff             	cmp    eax,0xffffffff
    2d3b:	74 15                	je     2d52 <arpdecode+0x1f8>
    2d3d:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2d41:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d45:	48 89 d6             	mov    rsi,rdx
    2d48:	48 89 c7             	mov    rdi,rax
    2d4b:	e8 79 4f 00 00       	call   7cc9 <compare_entries>
    2d50:	eb 7d                	jmp    2dcf <arpdecode+0x275>
    2d52:	0f b6 05 e7 4f 10 00 	movzx  eax,BYTE PTR [rip+0x104fe7]        # 107d40 <use_sqlite>
    2d59:	84 c0                	test   al,al
    2d5b:	74 5f                	je     2dbc <arpdecode+0x262>
    2d5d:	c7 85 f4 fc ff ff 00 	mov    DWORD PTR [rbp-0x30c],0x0
    2d64:	00 00 00 
    2d67:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    2d6b:	48 8d 85 d0 fc ff ff 	lea    rax,[rbp-0x330]
    2d72:	48 89 d6             	mov    rsi,rdx
    2d75:	48 89 c7             	mov    rdi,rax
    2d78:	e8 73 f7 ff ff       	call   24f0 <strcpy@plt>
    2d7d:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2d81:	48 8d 95 d0 fc ff ff 	lea    rdx,[rbp-0x330]
    2d88:	48 83 c2 10          	add    rdx,0x10
    2d8c:	48 89 c6             	mov    rsi,rax
    2d8f:	48 89 d7             	mov    rdi,rdx
    2d92:	e8 59 f7 ff ff       	call   24f0 <strcpy@plt>
    2d97:	48 8d 95 d0 fc ff ff 	lea    rdx,[rbp-0x330]
    2d9e:	48 8d 85 c0 fc ff ff 	lea    rax,[rbp-0x340]
    2da5:	48 89 d1             	mov    rcx,rdx
    2da8:	48 8d 15 7b 55 00 00 	lea    rdx,[rip+0x557b]        # 832a <update_db>
    2daf:	be 00 00 00 00       	mov    esi,0x0
    2db4:	48 89 c7             	mov    rdi,rax
    2db7:	e8 f4 f6 ff ff       	call   24b0 <pthread_create@plt>
    2dbc:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2dc0:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2dc4:	48 89 d6             	mov    rsi,rdx
    2dc7:	48 89 c7             	mov    rdi,rax
    2dca:	e8 d9 4f 00 00       	call   7da8 <add_entry>
    2dcf:	0f b6 05 83 4f 10 00 	movzx  eax,BYTE PTR [rip+0x104f83]        # 107d59 <packet_print>
    2dd6:	84 c0                	test   al,al
    2dd8:	74 44                	je     2e1e <arpdecode+0x2c4>
    2dda:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2dde:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2de2:	48 89 c6             	mov    rsi,rax
    2de5:	48 8d 3d 5c 93 00 00 	lea    rdi,[rip+0x935c]        # c148 <_IO_stdin_used+0x148>
    2dec:	b8 00 00 00 00       	mov    eax,0x0
    2df1:	e8 fa f7 ff ff       	call   25f0 <printf@plt>
    2df6:	eb 26                	jmp    2e1e <arpdecode+0x2c4>
    2df8:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2dff:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    2e03:	0f b7 c0             	movzx  eax,ax
    2e06:	89 c6                	mov    esi,eax
    2e08:	48 8d 3d 58 93 00 00 	lea    rdi,[rip+0x9358]        # c167 <_IO_stdin_used+0x167>
    2e0f:	b8 00 00 00 00       	mov    eax,0x0
    2e14:	e8 d7 f7 ff ff       	call   25f0 <printf@plt>
    2e19:	eb 04                	jmp    2e1f <arpdecode+0x2c5>
    2e1b:	90                   	nop
    2e1c:	eb 01                	jmp    2e1f <arpdecode+0x2c5>
    2e1e:	90                   	nop
    2e1f:	48 8d 35 59 93 00 00 	lea    rsi,[rip+0x9359]        # c17f <_IO_stdin_used+0x17f>
    2e26:	48 8d 3d c3 92 00 00 	lea    rdi,[rip+0x92c3]        # c0f0 <_IO_stdin_used+0xf0>
    2e2d:	b8 00 00 00 00       	mov    eax,0x0
    2e32:	e8 b9 f7 ff ff       	call   25f0 <printf@plt>
    2e37:	90                   	nop
    2e38:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2e3c:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    2e43:	00 00 
    2e45:	74 05                	je     2e4c <arpdecode+0x2f2>
    2e47:	e8 64 f7 ff ff       	call   25b0 <__stack_chk_fail@plt>
    2e4c:	c9                   	leave  
    2e4d:	c3                   	ret    

0000000000002e4e <loopback_ctp_decode>:
    2e4e:	f3 0f 1e fa          	endbr64 
    2e52:	55                   	push   rbp
    2e53:	48 89 e5             	mov    rbp,rsp
    2e56:	48 83 ec 60          	sub    rsp,0x60
    2e5a:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    2e5e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2e65:	00 00 
    2e67:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2e6b:	31 c0                	xor    eax,eax
    2e6d:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    2e71:	48 83 c0 0e          	add    rax,0xe
    2e75:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    2e79:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    2e7d:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    2e81:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    2e85:	48 83 c0 06          	add    rax,0x6
    2e89:	48 89 c7             	mov    rdi,rax
    2e8c:	e8 7e 01 00 00       	call   300f <uc_mac_ntoa>
    2e91:	48 89 c1             	mov    rcx,rax
    2e94:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    2e98:	ba 18 00 00 00       	mov    edx,0x18
    2e9d:	48 89 ce             	mov    rsi,rcx
    2ea0:	48 89 c7             	mov    rdi,rax
    2ea3:	e8 28 f6 ff ff       	call   24d0 <strncpy@plt>
    2ea8:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    2eac:	48 89 c7             	mov    rdi,rax
    2eaf:	e8 5b 01 00 00       	call   300f <uc_mac_ntoa>
    2eb4:	48 89 c1             	mov    rcx,rax
    2eb7:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    2ebb:	ba 18 00 00 00       	mov    edx,0x18
    2ec0:	48 89 ce             	mov    rsi,rcx
    2ec3:	48 89 c7             	mov    rdi,rax
    2ec6:	e8 05 f6 ff ff       	call   24d0 <strncpy@plt>
    2ecb:	0f b6 05 87 4e 10 00 	movzx  eax,BYTE PTR [rip+0x104e87]        # 107d59 <packet_print>
    2ed2:	84 c0                	test   al,al
    2ed4:	74 1c                	je     2ef2 <loopback_ctp_decode+0xa4>
    2ed6:	48 8d 55 e0          	lea    rdx,[rbp-0x20]
    2eda:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    2ede:	48 89 c6             	mov    rsi,rax
    2ee1:	48 8d 3d 9c 92 00 00 	lea    rdi,[rip+0x929c]        # c184 <_IO_stdin_used+0x184>
    2ee8:	b8 00 00 00 00       	mov    eax,0x0
    2eed:	e8 fe f6 ff ff       	call   25f0 <printf@plt>
    2ef2:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    2ef6:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    2efa:	0f b7 c0             	movzx  eax,ax
    2efd:	83 f8 01             	cmp    eax,0x1
    2f00:	75 19                	jne    2f1b <loopback_ctp_decode+0xcd>
    2f02:	0f b6 05 50 4e 10 00 	movzx  eax,BYTE PTR [rip+0x104e50]        # 107d59 <packet_print>
    2f09:	84 c0                	test   al,al
    2f0b:	74 39                	je     2f46 <loopback_ctp_decode+0xf8>
    2f0d:	48 8d 3d 7e 92 00 00 	lea    rdi,[rip+0x927e]        # c192 <_IO_stdin_used+0x192>
    2f14:	e8 07 f6 ff ff       	call   2520 <puts@plt>
    2f19:	eb 2b                	jmp    2f46 <loopback_ctp_decode+0xf8>
    2f1b:	0f b6 05 37 4e 10 00 	movzx  eax,BYTE PTR [rip+0x104e37]        # 107d59 <packet_print>
    2f22:	84 c0                	test   al,al
    2f24:	74 23                	je     2f49 <loopback_ctp_decode+0xfb>
    2f26:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    2f2a:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    2f2e:	0f b7 c0             	movzx  eax,ax
    2f31:	89 c6                	mov    esi,eax
    2f33:	48 8d 3d 60 92 00 00 	lea    rdi,[rip+0x9260]        # c19a <_IO_stdin_used+0x19a>
    2f3a:	b8 00 00 00 00       	mov    eax,0x0
    2f3f:	e8 ac f6 ff ff       	call   25f0 <printf@plt>
    2f44:	eb 03                	jmp    2f49 <loopback_ctp_decode+0xfb>
    2f46:	90                   	nop
    2f47:	eb 01                	jmp    2f4a <loopback_ctp_decode+0xfc>
    2f49:	90                   	nop
    2f4a:	90                   	nop
    2f4b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f4f:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    2f56:	00 00 
    2f58:	74 05                	je     2f5f <loopback_ctp_decode+0x111>
    2f5a:	e8 51 f6 ff ff       	call   25b0 <__stack_chk_fail@plt>
    2f5f:	c9                   	leave  
    2f60:	c3                   	ret    

0000000000002f61 <mac_ntoa>:
    2f61:	f3 0f 1e fa          	endbr64 
    2f65:	55                   	push   rbp
    2f66:	48 89 e5             	mov    rbp,rsp
    2f69:	48 83 ec 20          	sub    rsp,0x20
    2f6d:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    2f71:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2f75:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2f79:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f7d:	48 83 c0 05          	add    rax,0x5
    2f81:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f84:	0f b6 f0             	movzx  esi,al
    2f87:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f8b:	48 83 c0 04          	add    rax,0x4
    2f8f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f92:	0f b6 c8             	movzx  ecx,al
    2f95:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f99:	48 83 c0 03          	add    rax,0x3
    2f9d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fa0:	0f b6 d0             	movzx  edx,al
    2fa3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fa7:	48 83 c0 02          	add    rax,0x2
    2fab:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fae:	44 0f b6 c8          	movzx  r9d,al
    2fb2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fb6:	48 83 c0 01          	add    rax,0x1
    2fba:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fbd:	44 0f b6 c0          	movzx  r8d,al
    2fc1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fc5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fc8:	0f b6 c0             	movzx  eax,al
    2fcb:	64 48 8b 3c 25 00 00 	mov    rdi,QWORD PTR fs:0x0
    2fd2:	00 00 
    2fd4:	48 81 c7 80 fb ff ff 	add    rdi,0xfffffffffffffb80
    2fdb:	48 83 ec 08          	sub    rsp,0x8
    2fdf:	56                   	push   rsi
    2fe0:	51                   	push   rcx
    2fe1:	52                   	push   rdx
    2fe2:	89 c1                	mov    ecx,eax
    2fe4:	48 8d 15 cd 91 00 00 	lea    rdx,[rip+0x91cd]        # c1b8 <_IO_stdin_used+0x1b8>
    2feb:	be 80 00 00 00       	mov    esi,0x80
    2ff0:	b8 00 00 00 00       	mov    eax,0x0
    2ff5:	e8 06 f6 ff ff       	call   2600 <snprintf@plt>
    2ffa:	48 83 c4 20          	add    rsp,0x20
    2ffe:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3005:	00 00 
    3007:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    300d:	c9                   	leave  
    300e:	c3                   	ret    

000000000000300f <uc_mac_ntoa>:
    300f:	f3 0f 1e fa          	endbr64 
    3013:	55                   	push   rbp
    3014:	48 89 e5             	mov    rbp,rsp
    3017:	48 83 ec 10          	sub    rsp,0x10
    301b:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    301f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3023:	48 83 c0 05          	add    rax,0x5
    3027:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    302a:	0f b6 f0             	movzx  esi,al
    302d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3031:	48 83 c0 04          	add    rax,0x4
    3035:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3038:	0f b6 c8             	movzx  ecx,al
    303b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    303f:	48 83 c0 03          	add    rax,0x3
    3043:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3046:	0f b6 d0             	movzx  edx,al
    3049:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    304d:	48 83 c0 02          	add    rax,0x2
    3051:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3054:	44 0f b6 c8          	movzx  r9d,al
    3058:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    305c:	48 83 c0 01          	add    rax,0x1
    3060:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3063:	44 0f b6 c0          	movzx  r8d,al
    3067:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    306b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    306e:	0f b6 c0             	movzx  eax,al
    3071:	64 48 8b 3c 25 00 00 	mov    rdi,QWORD PTR fs:0x0
    3078:	00 00 
    307a:	48 81 c7 80 fb ff ff 	add    rdi,0xfffffffffffffb80
    3081:	48 83 ec 08          	sub    rsp,0x8
    3085:	56                   	push   rsi
    3086:	51                   	push   rcx
    3087:	52                   	push   rdx
    3088:	89 c1                	mov    ecx,eax
    308a:	48 8d 15 27 91 00 00 	lea    rdx,[rip+0x9127]        # c1b8 <_IO_stdin_used+0x1b8>
    3091:	be 80 00 00 00       	mov    esi,0x80
    3096:	b8 00 00 00 00       	mov    eax,0x0
    309b:	e8 60 f5 ff ff       	call   2600 <snprintf@plt>
    30a0:	48 83 c4 20          	add    rsp,0x20
    30a4:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    30ab:	00 00 
    30ad:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    30b3:	c9                   	leave  
    30b4:	c3                   	ret    

00000000000030b5 <u8_ipv4_ntoa>:
    30b5:	f3 0f 1e fa          	endbr64 
    30b9:	55                   	push   rbp
    30ba:	48 89 e5             	mov    rbp,rsp
    30bd:	48 83 ec 20          	sub    rsp,0x20
    30c1:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    30c5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    30c9:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    30cd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    30d1:	48 83 c0 03          	add    rax,0x3
    30d5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    30d8:	0f b6 d0             	movzx  edx,al
    30db:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    30df:	48 83 c0 02          	add    rax,0x2
    30e3:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    30e6:	44 0f b6 c0          	movzx  r8d,al
    30ea:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    30ee:	48 83 c0 01          	add    rax,0x1
    30f2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    30f5:	0f b6 f0             	movzx  esi,al
    30f8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    30fc:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    30ff:	0f b6 c0             	movzx  eax,al
    3102:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    3109:	00 00 
    310b:	48 8d b9 80 fb ff ff 	lea    rdi,[rcx-0x480]
    3112:	48 83 ec 08          	sub    rsp,0x8
    3116:	52                   	push   rdx
    3117:	45 89 c1             	mov    r9d,r8d
    311a:	41 89 f0             	mov    r8d,esi
    311d:	89 c1                	mov    ecx,eax
    311f:	48 8d 15 b0 90 00 00 	lea    rdx,[rip+0x90b0]        # c1d6 <_IO_stdin_used+0x1d6>
    3126:	be 80 00 00 00       	mov    esi,0x80
    312b:	b8 00 00 00 00       	mov    eax,0x0
    3130:	e8 cb f4 ff ff       	call   2600 <snprintf@plt>
    3135:	48 83 c4 10          	add    rsp,0x10
    3139:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3140:	00 00 
    3142:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    3148:	c9                   	leave  
    3149:	c3                   	ret    

000000000000314a <ipv4_ntoa>:
    314a:	f3 0f 1e fa          	endbr64 
    314e:	55                   	push   rbp
    314f:	48 89 e5             	mov    rbp,rsp
    3152:	48 83 ec 20          	sub    rsp,0x20
    3156:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    3159:	48 8d 45 ec          	lea    rax,[rbp-0x14]
    315d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3161:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3165:	48 83 c0 03          	add    rax,0x3
    3169:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    316c:	0f b6 d0             	movzx  edx,al
    316f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3173:	48 83 c0 02          	add    rax,0x2
    3177:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    317a:	44 0f b6 c0          	movzx  r8d,al
    317e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3182:	48 83 c0 01          	add    rax,0x1
    3186:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3189:	0f b6 f0             	movzx  esi,al
    318c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3190:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3193:	0f b6 c0             	movzx  eax,al
    3196:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    319d:	00 00 
    319f:	48 8d b9 80 fb ff ff 	lea    rdi,[rcx-0x480]
    31a6:	48 83 ec 08          	sub    rsp,0x8
    31aa:	52                   	push   rdx
    31ab:	45 89 c1             	mov    r9d,r8d
    31ae:	41 89 f0             	mov    r8d,esi
    31b1:	89 c1                	mov    ecx,eax
    31b3:	48 8d 15 1c 90 00 00 	lea    rdx,[rip+0x901c]        # c1d6 <_IO_stdin_used+0x1d6>
    31ba:	be 80 00 00 00       	mov    esi,0x80
    31bf:	b8 00 00 00 00       	mov    eax,0x0
    31c4:	e8 37 f4 ff ff       	call   2600 <snprintf@plt>
    31c9:	48 83 c4 10          	add    rsp,0x10
    31cd:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    31d4:	00 00 
    31d6:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    31dc:	c9                   	leave  
    31dd:	c3                   	ret    

00000000000031de <inet6_ntoa>:
    31de:	f3 0f 1e fa          	endbr64 
    31e2:	55                   	push   rbp
    31e3:	48 89 e5             	mov    rbp,rsp
    31e6:	41 57                	push   r15
    31e8:	41 56                	push   r14
    31ea:	41 55                	push   r13
    31ec:	41 54                	push   r12
    31ee:	53                   	push   rbx
    31ef:	48 83 ec 38          	sub    rsp,0x38
    31f3:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    31f7:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    31fe:	00 00 
    3200:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    3204:	31 c0                	xor    eax,eax
    3206:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    320d:	00 00 
    320f:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    3215:	ba 80 00 00 00       	mov    edx,0x80
    321a:	be 00 00 00 00       	mov    esi,0x0
    321f:	48 89 c7             	mov    rdi,rax
    3222:	e8 09 f4 ff ff       	call   2630 <memset@plt>
    3227:	48 c7 45 c0 00 00 00 	mov    QWORD PTR [rbp-0x40],0x0
    322e:	00 
    322f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3233:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    3237:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    323b:	48 83 c0 0f          	add    rax,0xf
    323f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3242:	0f b6 c8             	movzx  ecx,al
    3245:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3249:	48 83 c0 0e          	add    rax,0xe
    324d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3250:	0f b6 f8             	movzx  edi,al
    3253:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3257:	48 83 c0 0d          	add    rax,0xd
    325b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    325e:	0f b6 c0             	movzx  eax,al
    3261:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
    3264:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3268:	48 83 c0 0c          	add    rax,0xc
    326c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    326f:	0f b6 d8             	movzx  ebx,al
    3272:	89 5d b0             	mov    DWORD PTR [rbp-0x50],ebx
    3275:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3279:	48 83 c0 0b          	add    rax,0xb
    327d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3280:	44 0f b6 f8          	movzx  r15d,al
    3284:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3288:	48 83 c0 0a          	add    rax,0xa
    328c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    328f:	44 0f b6 f0          	movzx  r14d,al
    3293:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3297:	48 83 c0 09          	add    rax,0x9
    329b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    329e:	44 0f b6 e8          	movzx  r13d,al
    32a2:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32a6:	48 83 c0 08          	add    rax,0x8
    32aa:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32ad:	44 0f b6 e0          	movzx  r12d,al
    32b1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32b5:	48 83 c0 07          	add    rax,0x7
    32b9:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32bc:	0f b6 d8             	movzx  ebx,al
    32bf:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32c3:	48 83 c0 06          	add    rax,0x6
    32c7:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32ca:	44 0f b6 d8          	movzx  r11d,al
    32ce:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32d2:	48 83 c0 05          	add    rax,0x5
    32d6:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32d9:	44 0f b6 d0          	movzx  r10d,al
    32dd:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32e1:	48 83 c0 04          	add    rax,0x4
    32e5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32e8:	44 0f b6 c8          	movzx  r9d,al
    32ec:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32f0:	48 83 c0 03          	add    rax,0x3
    32f4:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32f7:	44 0f b6 c0          	movzx  r8d,al
    32fb:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32ff:	48 83 c0 02          	add    rax,0x2
    3303:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3306:	0f b6 d0             	movzx  edx,al
    3309:	89 55 ac             	mov    DWORD PTR [rbp-0x54],edx
    330c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3310:	48 83 c0 01          	add    rax,0x1
    3314:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3317:	0f b6 f0             	movzx  esi,al
    331a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    331e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3321:	0f b6 d0             	movzx  edx,al
    3324:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    332b:	00 00 
    332d:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    3333:	48 83 ec 08          	sub    rsp,0x8
    3337:	51                   	push   rcx
    3338:	57                   	push   rdi
    3339:	8b 4d b4             	mov    ecx,DWORD PTR [rbp-0x4c]
    333c:	51                   	push   rcx
    333d:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
    3340:	51                   	push   rcx
    3341:	41 57                	push   r15
    3343:	41 56                	push   r14
    3345:	41 55                	push   r13
    3347:	41 54                	push   r12
    3349:	53                   	push   rbx
    334a:	41 53                	push   r11
    334c:	41 52                	push   r10
    334e:	41 51                	push   r9
    3350:	41 50                	push   r8
    3352:	44 8b 4d ac          	mov    r9d,DWORD PTR [rbp-0x54]
    3356:	41 89 f0             	mov    r8d,esi
    3359:	89 d1                	mov    ecx,edx
    335b:	48 8d 15 86 8e 00 00 	lea    rdx,[rip+0x8e86]        # c1e8 <_IO_stdin_used+0x1e8>
    3362:	be 80 00 00 00       	mov    esi,0x80
    3367:	48 89 c7             	mov    rdi,rax
    336a:	b8 00 00 00 00       	mov    eax,0x0
    336f:	e8 8c f2 ff ff       	call   2600 <snprintf@plt>
    3374:	48 83 c4 70          	add    rsp,0x70
    3378:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    337f:	00 00 
    3381:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    3387:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    338b:	64 48 33 34 25 28 00 	xor    rsi,QWORD PTR fs:0x28
    3392:	00 00 
    3394:	74 05                	je     339b <inet6_ntoa+0x1bd>
    3396:	e8 15 f2 ff ff       	call   25b0 <__stack_chk_fail@plt>
    339b:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    339f:	5b                   	pop    rbx
    33a0:	41 5c                	pop    r12
    33a2:	41 5d                	pop    r13
    33a4:	41 5e                	pop    r14
    33a6:	41 5f                	pop    r15
    33a8:	5d                   	pop    rbp
    33a9:	c3                   	ret    

00000000000033aa <get_formated_time>:
    33aa:	f3 0f 1e fa          	endbr64 
    33ae:	55                   	push   rbp
    33af:	48 89 e5             	mov    rbp,rsp
    33b2:	53                   	push   rbx
    33b3:	48 83 ec 58          	sub    rsp,0x58
    33b7:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    33be:	00 00 
    33c0:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    33c4:	31 c0                	xor    eax,eax
    33c6:	bf ff 00 00 00       	mov    edi,0xff
    33cb:	e8 70 f3 ff ff       	call   2740 <malloc@plt>
    33d0:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    33d4:	bf 00 00 00 00       	mov    edi,0x0
    33d9:	e8 22 f3 ff ff       	call   2700 <time@plt>
    33de:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    33e2:	48 8d 45 a0          	lea    rax,[rbp-0x60]
    33e6:	48 89 c7             	mov    rdi,rax
    33e9:	e8 d2 f0 ff ff       	call   24c0 <localtime@plt>
    33ee:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    33f1:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    33f5:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
    33f9:	48 89 5d b8          	mov    QWORD PTR [rbp-0x48],rbx
    33fd:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    3401:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    3405:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    3409:	48 89 5d c8          	mov    QWORD PTR [rbp-0x38],rbx
    340d:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    3411:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    3415:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    3419:	48 89 5d d8          	mov    QWORD PTR [rbp-0x28],rbx
    341d:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    3421:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    3425:	8b 7d b0             	mov    edi,DWORD PTR [rbp-0x50]
    3428:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
    342b:	44 8b 4d b8          	mov    r9d,DWORD PTR [rbp-0x48]
    342f:	44 8b 45 bc          	mov    r8d,DWORD PTR [rbp-0x44]
    3433:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    3436:	8d 48 01             	lea    ecx,[rax+0x1]
    3439:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    343c:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    3442:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3446:	57                   	push   rdi
    3447:	56                   	push   rsi
    3448:	48 8d 35 e1 8d 00 00 	lea    rsi,[rip+0x8de1]        # c230 <_IO_stdin_used+0x230>
    344f:	48 89 c7             	mov    rdi,rax
    3452:	b8 00 00 00 00       	mov    eax,0x0
    3457:	e8 14 f4 ff ff       	call   2870 <sprintf@plt>
    345c:	48 83 c4 10          	add    rsp,0x10
    3460:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3464:	48 8b 5d e8          	mov    rbx,QWORD PTR [rbp-0x18]
    3468:	64 48 33 1c 25 28 00 	xor    rbx,QWORD PTR fs:0x28
    346f:	00 00 
    3471:	74 05                	je     3478 <get_formated_time+0xce>
    3473:	e8 38 f1 ff ff       	call   25b0 <__stack_chk_fail@plt>
    3478:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    347c:	c9                   	leave  
    347d:	c3                   	ret    

000000000000347e <cb_get_formatted_time>:
    347e:	f3 0f 1e fa          	endbr64 
    3482:	55                   	push   rbp
    3483:	48 89 e5             	mov    rbp,rsp
    3486:	53                   	push   rbx
    3487:	48 83 ec 68          	sub    rsp,0x68
    348b:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    348f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3496:	00 00 
    3498:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    349c:	31 c0                	xor    eax,eax
    349e:	bf 00 00 00 00       	mov    edi,0x0
    34a3:	e8 58 f2 ff ff       	call   2700 <time@plt>
    34a8:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    34ac:	48 8d 45 a8          	lea    rax,[rbp-0x58]
    34b0:	48 89 c7             	mov    rdi,rax
    34b3:	e8 08 f0 ff ff       	call   24c0 <localtime@plt>
    34b8:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    34bb:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    34bf:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
    34c3:	48 89 5d b8          	mov    QWORD PTR [rbp-0x48],rbx
    34c7:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    34cb:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    34cf:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    34d3:	48 89 5d c8          	mov    QWORD PTR [rbp-0x38],rbx
    34d7:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    34db:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    34df:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    34e3:	48 89 5d d8          	mov    QWORD PTR [rbp-0x28],rbx
    34e7:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    34eb:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    34ef:	8b 7d b0             	mov    edi,DWORD PTR [rbp-0x50]
    34f2:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
    34f5:	44 8b 4d b8          	mov    r9d,DWORD PTR [rbp-0x48]
    34f9:	44 8b 45 bc          	mov    r8d,DWORD PTR [rbp-0x44]
    34fd:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    3500:	8d 48 01             	lea    ecx,[rax+0x1]
    3503:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    3506:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    350c:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    3510:	57                   	push   rdi
    3511:	56                   	push   rsi
    3512:	48 8d 35 17 8d 00 00 	lea    rsi,[rip+0x8d17]        # c230 <_IO_stdin_used+0x230>
    3519:	48 89 c7             	mov    rdi,rax
    351c:	b8 00 00 00 00       	mov    eax,0x0
    3521:	e8 4a f3 ff ff       	call   2870 <sprintf@plt>
    3526:	48 83 c4 10          	add    rsp,0x10
    352a:	90                   	nop
    352b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    352f:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    3536:	00 00 
    3538:	74 05                	je     353f <cb_get_formatted_time+0xc1>
    353a:	e8 71 f0 ff ff       	call   25b0 <__stack_chk_fail@plt>
    353f:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    3543:	c9                   	leave  
    3544:	c3                   	ret    

0000000000003545 <strloc>:
    3545:	f3 0f 1e fa          	endbr64 
    3549:	55                   	push   rbp
    354a:	48 89 e5             	mov    rbp,rsp
    354d:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    3551:	89 f0                	mov    eax,esi
    3553:	88 45 e4             	mov    BYTE PTR [rbp-0x1c],al
    3556:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    355d:	eb 1e                	jmp    357d <strloc+0x38>
    355f:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    3562:	48 63 d0             	movsxd rdx,eax
    3565:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    3569:	48 01 d0             	add    rax,rdx
    356c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    356f:	38 45 e4             	cmp    BYTE PTR [rbp-0x1c],al
    3572:	75 05                	jne    3579 <strloc+0x34>
    3574:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    3577:	eb 1d                	jmp    3596 <strloc+0x51>
    3579:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    357d:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    3580:	48 63 d0             	movsxd rdx,eax
    3583:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    3587:	48 01 d0             	add    rax,rdx
    358a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    358d:	84 c0                	test   al,al
    358f:	75 ce                	jne    355f <strloc+0x1a>
    3591:	b8 ff ff ff ff       	mov    eax,0xffffffff
    3596:	5d                   	pop    rbp
    3597:	c3                   	ret    

0000000000003598 <fail>:
    3598:	f3 0f 1e fa          	endbr64 
    359c:	55                   	push   rbp
    359d:	48 89 e5             	mov    rbp,rsp
    35a0:	48 83 ec 10          	sub    rsp,0x10
    35a4:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    35a8:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    35ac:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    35b0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    35b4:	48 89 c6             	mov    rsi,rax
    35b7:	48 8d 3d 8e 8c 00 00 	lea    rdi,[rip+0x8c8e]        # c24c <_IO_stdin_used+0x24c>
    35be:	b8 00 00 00 00       	mov    eax,0x0
    35c3:	e8 28 f0 ff ff       	call   25f0 <printf@plt>
    35c8:	90                   	nop
    35c9:	c9                   	leave  
    35ca:	c3                   	ret    

00000000000035cb <char_is_printable>:
    35cb:	f3 0f 1e fa          	endbr64 
    35cf:	55                   	push   rbp
    35d0:	48 89 e5             	mov    rbp,rsp
    35d3:	89 f8                	mov    eax,edi
    35d5:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
    35d8:	80 7d fc 1f          	cmp    BYTE PTR [rbp-0x4],0x1f
    35dc:	7f 07                	jg     35e5 <char_is_printable+0x1a>
    35de:	b8 00 00 00 00       	mov    eax,0x0
    35e3:	eb 05                	jmp    35ea <char_is_printable+0x1f>
    35e5:	b8 01 00 00 00       	mov    eax,0x1
    35ea:	5d                   	pop    rbp
    35eb:	c3                   	ret    

00000000000035ec <test_string_arr_print>:
    35ec:	f3 0f 1e fa          	endbr64 
    35f0:	55                   	push   rbp
    35f1:	48 89 e5             	mov    rbp,rsp
    35f4:	53                   	push   rbx
    35f5:	48 83 ec 28          	sub    rsp,0x28
    35f9:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    35fd:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    3604:	eb 2c                	jmp    3632 <test_string_arr_print+0x46>
    3606:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    3609:	48 63 d0             	movsxd rdx,eax
    360c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    3610:	48 01 d0             	add    rax,rdx
    3613:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3616:	0f be c0             	movsx  eax,al
    3619:	89 c7                	mov    edi,eax
    361b:	e8 ab ff ff ff       	call   35cb <char_is_printable>
    3620:	83 f0 01             	xor    eax,0x1
    3623:	84 c0                	test   al,al
    3625:	74 07                	je     362e <test_string_arr_print+0x42>
    3627:	b8 00 00 00 00       	mov    eax,0x0
    362c:	eb 20                	jmp    364e <test_string_arr_print+0x62>
    362e:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    3632:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    3635:	48 63 d8             	movsxd rbx,eax
    3638:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    363c:	48 89 c7             	mov    rdi,rax
    363f:	e8 4c ef ff ff       	call   2590 <strlen@plt>
    3644:	48 39 c3             	cmp    rbx,rax
    3647:	72 bd                	jb     3606 <test_string_arr_print+0x1a>
    3649:	b8 01 00 00 00       	mov    eax,0x1
    364e:	48 83 c4 28          	add    rsp,0x28
    3652:	5b                   	pop    rbx
    3653:	5d                   	pop    rbp
    3654:	c3                   	ret    

0000000000003655 <ipv4pktmgr>:
    3655:	f3 0f 1e fa          	endbr64 
    3659:	55                   	push   rbp
    365a:	48 89 e5             	mov    rbp,rsp
    365d:	48 81 ec e0 04 00 00 	sub    rsp,0x4e0
    3664:	48 89 bd 28 fb ff ff 	mov    QWORD PTR [rbp-0x4d8],rdi
    366b:	48 89 b5 20 fb ff ff 	mov    QWORD PTR [rbp-0x4e0],rsi
    3672:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3679:	00 00 
    367b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    367f:	31 c0                	xor    eax,eax
    3681:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    3688:	48 83 c0 0e          	add    rax,0xe
    368c:	48 89 85 48 fb ff ff 	mov    QWORD PTR [rbp-0x4b8],rax
    3693:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    369a:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    369d:	89 c7                	mov    edi,eax
    369f:	e8 ec f1 ff ff       	call   2890 <ntohl@plt>
    36a4:	89 85 6c fb ff ff    	mov    DWORD PTR [rbp-0x494],eax
    36aa:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    36b1:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    36b4:	89 c7                	mov    edi,eax
    36b6:	e8 d5 f1 ff ff       	call   2890 <ntohl@plt>
    36bb:	89 85 68 fb ff ff    	mov    DWORD PTR [rbp-0x498],eax
    36c1:	8b 95 68 fb ff ff    	mov    edx,DWORD PTR [rbp-0x498]
    36c7:	8b 05 d3 6a 10 00    	mov    eax,DWORD PTR [rip+0x106ad3]        # 10a1a0 <homenetmask>
    36cd:	21 d0                	and    eax,edx
    36cf:	89 85 3c fb ff ff    	mov    DWORD PTR [rbp-0x4c4],eax
    36d5:	8b 95 6c fb ff ff    	mov    edx,DWORD PTR [rbp-0x494]
    36db:	8b 05 bf 6a 10 00    	mov    eax,DWORD PTR [rip+0x106abf]        # 10a1a0 <homenetmask>
    36e1:	21 d0                	and    eax,edx
    36e3:	89 85 40 fb ff ff    	mov    DWORD PTR [rbp-0x4c0],eax
    36e9:	8b 05 15 46 10 00    	mov    eax,DWORD PTR [rip+0x104615]        # 107d04 <homenet>
    36ef:	39 85 3c fb ff ff    	cmp    DWORD PTR [rbp-0x4c4],eax
    36f5:	75 0c                	jne    3703 <ipv4pktmgr+0xae>
    36f7:	c7 85 70 fb ff ff 45 	mov    DWORD PTR [rbp-0x490],0x45
    36fe:	00 00 00 
    3701:	eb 24                	jmp    3727 <ipv4pktmgr+0xd2>
    3703:	8b 05 fb 45 10 00    	mov    eax,DWORD PTR [rip+0x1045fb]        # 107d04 <homenet>
    3709:	39 85 40 fb ff ff    	cmp    DWORD PTR [rbp-0x4c0],eax
    370f:	75 0c                	jne    371d <ipv4pktmgr+0xc8>
    3711:	c7 85 70 fb ff ff 46 	mov    DWORD PTR [rbp-0x490],0x46
    3718:	00 00 00 
    371b:	eb 0a                	jmp    3727 <ipv4pktmgr+0xd2>
    371d:	c7 85 70 fb ff ff 47 	mov    DWORD PTR [rbp-0x490],0x47
    3724:	00 00 00 
    3727:	48 8b 85 20 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4e0]
    372e:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    3731:	89 85 80 fb ff ff    	mov    DWORD PTR [rbp-0x480],eax
    3737:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    373e:	48 89 85 a0 fb ff ff 	mov    QWORD PTR [rbp-0x460],rax
    3745:	48 8b 85 20 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4e0]
    374c:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    374f:	48 8b 95 28 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4d8]
    3756:	48 83 c2 0e          	add    rdx,0xe
    375a:	0f b6 12             	movzx  edx,BYTE PTR [rdx]
    375d:	83 e2 0f             	and    edx,0xf
    3760:	0f b6 d2             	movzx  edx,dl
    3763:	c1 e2 02             	shl    edx,0x2
    3766:	29 d0                	sub    eax,edx
    3768:	83 e8 0e             	sub    eax,0xe
    376b:	89 85 44 fb ff ff    	mov    DWORD PTR [rbp-0x4bc],eax
    3771:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    3778:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    377b:	89 c7                	mov    edi,eax
    377d:	e8 c8 f9 ff ff       	call   314a <ipv4_ntoa>
    3782:	48 89 c1             	mov    rcx,rax
    3785:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    378c:	ba 10 00 00 00       	mov    edx,0x10
    3791:	48 89 ce             	mov    rsi,rcx
    3794:	48 89 c7             	mov    rdi,rax
    3797:	e8 34 ed ff ff       	call   24d0 <strncpy@plt>
    379c:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    37a3:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    37a6:	89 c7                	mov    edi,eax
    37a8:	e8 9d f9 ff ff       	call   314a <ipv4_ntoa>
    37ad:	48 89 c1             	mov    rcx,rax
    37b0:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    37b7:	ba 10 00 00 00       	mov    edx,0x10
    37bc:	48 89 ce             	mov    rsi,rcx
    37bf:	48 89 c7             	mov    rdi,rax
    37c2:	e8 09 ed ff ff       	call   24d0 <strncpy@plt>
    37c7:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    37ce:	48 89 c7             	mov    rdi,rax
    37d1:	e8 c2 42 00 00       	call   7a98 <init_member>
    37d6:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    37dd:	48 89 c7             	mov    rdi,rax
    37e0:	e8 b3 42 00 00       	call   7a98 <init_member>
    37e5:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    37ec:	48 89 c7             	mov    rdi,rax
    37ef:	e8 49 21 00 00       	call   593d <is_blocked_ipv4>
    37f4:	84 c0                	test   al,al
    37f6:	74 44                	je     383c <ipv4pktmgr+0x1e7>
    37f8:	b8 00 00 00 00       	mov    eax,0x0
    37fd:	e8 a8 fb ff ff       	call   33aa <get_formated_time>
    3802:	48 89 c6             	mov    rsi,rax
    3805:	48 8d 95 e0 fb ff ff 	lea    rdx,[rbp-0x420]
    380c:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    3813:	48 89 d1             	mov    rcx,rdx
    3816:	48 89 f2             	mov    rdx,rsi
    3819:	48 8d 35 38 8a 00 00 	lea    rsi,[rip+0x8a38]        # c258 <_IO_stdin_used+0x258>
    3820:	48 89 c7             	mov    rdi,rax
    3823:	b8 00 00 00 00       	mov    eax,0x0
    3828:	e8 43 f0 ff ff       	call   2870 <sprintf@plt>
    382d:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    3834:	48 89 c7             	mov    rdi,rax
    3837:	e8 28 5d 00 00       	call   9564 <saprintf>
    383c:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    3843:	48 89 c7             	mov    rdi,rax
    3846:	e8 f2 20 00 00       	call   593d <is_blocked_ipv4>
    384b:	84 c0                	test   al,al
    384d:	74 44                	je     3893 <ipv4pktmgr+0x23e>
    384f:	b8 00 00 00 00       	mov    eax,0x0
    3854:	e8 51 fb ff ff       	call   33aa <get_formated_time>
    3859:	48 89 c6             	mov    rsi,rax
    385c:	48 8d 95 d0 fb ff ff 	lea    rdx,[rbp-0x430]
    3863:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    386a:	48 89 d1             	mov    rcx,rdx
    386d:	48 89 f2             	mov    rdx,rsi
    3870:	48 8d 35 11 8a 00 00 	lea    rsi,[rip+0x8a11]        # c288 <_IO_stdin_used+0x288>
    3877:	48 89 c7             	mov    rdi,rax
    387a:	b8 00 00 00 00       	mov    eax,0x0
    387f:	e8 ec ef ff ff       	call   2870 <sprintf@plt>
    3884:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    388b:	48 89 c7             	mov    rdi,rax
    388e:	e8 d1 5c 00 00       	call   9564 <saprintf>
    3893:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    389a:	48 89 85 58 fb ff ff 	mov    QWORD PTR [rbp-0x4a8],rax
    38a1:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    38a8:	48 89 85 60 fb ff ff 	mov    QWORD PTR [rbp-0x4a0],rax
    38af:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    38b6:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    38ba:	66 83 f8 20          	cmp    ax,0x20
    38be:	74 11                	je     38d1 <ipv4pktmgr+0x27c>
    38c0:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    38c7:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    38cb:	66 3d 02 01          	cmp    ax,0x102
    38cf:	75 66                	jne    3937 <ipv4pktmgr+0x2e2>
    38d1:	48 8d 35 d8 89 00 00 	lea    rsi,[rip+0x89d8]        # c2b0 <_IO_stdin_used+0x2b0>
    38d8:	48 8d 3d d6 89 00 00 	lea    rdi,[rip+0x89d6]        # c2b5 <_IO_stdin_used+0x2b5>
    38df:	b8 00 00 00 00       	mov    eax,0x0
    38e4:	e8 07 ed ff ff       	call   25f0 <printf@plt>
    38e9:	0f b6 05 69 44 10 00 	movzx  eax,BYTE PTR [rip+0x104469]        # 107d59 <packet_print>
    38f0:	84 c0                	test   al,al
    38f2:	74 1a                	je     390e <ipv4pktmgr+0x2b9>
    38f4:	48 8d 35 c8 89 00 00 	lea    rsi,[rip+0x89c8]        # c2c3 <_IO_stdin_used+0x2c3>
    38fb:	48 8d 3d c6 89 00 00 	lea    rdi,[rip+0x89c6]        # c2c8 <_IO_stdin_used+0x2c8>
    3902:	b8 00 00 00 00       	mov    eax,0x0
    3907:	e8 e4 ec ff ff       	call   25f0 <printf@plt>
    390c:	eb 29                	jmp    3937 <ipv4pktmgr+0x2e2>
    390e:	48 8d 95 e0 fb ff ff 	lea    rdx,[rbp-0x420]
    3915:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    391c:	48 8d 0d a0 89 00 00 	lea    rcx,[rip+0x89a0]        # c2c3 <_IO_stdin_used+0x2c3>
    3923:	48 89 c6             	mov    rsi,rax
    3926:	48 8d 3d 9e 89 00 00 	lea    rdi,[rip+0x899e]        # c2cb <_IO_stdin_used+0x2cb>
    392d:	b8 00 00 00 00       	mov    eax,0x0
    3932:	e8 b9 ec ff ff       	call   25f0 <printf@plt>
    3937:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    393e:	0f b6 40 09          	movzx  eax,BYTE PTR [rax+0x9]
    3942:	0f b6 c0             	movzx  eax,al
    3945:	83 f8 11             	cmp    eax,0x11
    3948:	0f 84 b8 00 00 00    	je     3a06 <ipv4pktmgr+0x3b1>
    394e:	83 f8 11             	cmp    eax,0x11
    3951:	0f 8f db 00 00 00    	jg     3a32 <ipv4pktmgr+0x3dd>
    3957:	83 f8 06             	cmp    eax,0x6
    395a:	74 7e                	je     39da <ipv4pktmgr+0x385>
    395c:	83 f8 06             	cmp    eax,0x6
    395f:	0f 8f cd 00 00 00    	jg     3a32 <ipv4pktmgr+0x3dd>
    3965:	83 f8 01             	cmp    eax,0x1
    3968:	74 0a                	je     3974 <ipv4pktmgr+0x31f>
    396a:	83 f8 02             	cmp    eax,0x2
    396d:	74 2d                	je     399c <ipv4pktmgr+0x347>
    396f:	e9 be 00 00 00       	jmp    3a32 <ipv4pktmgr+0x3dd>
    3974:	c7 85 7c fb ff ff 80 	mov    DWORD PTR [rbp-0x484],0x80
    397b:	00 00 00 
    397e:	48 8d 95 50 fb ff ff 	lea    rdx,[rbp-0x4b0]
    3985:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    398c:	48 89 d6             	mov    rsi,rdx
    398f:	48 89 c7             	mov    rdi,rax
    3992:	e8 40 02 00 00       	call   3bd7 <ip4_icmp_decode>
    3997:	e9 c7 00 00 00       	jmp    3a63 <ipv4pktmgr+0x40e>
    399c:	c7 85 7c fb ff ff ff 	mov    DWORD PTR [rbp-0x484],0xffffffff
    39a3:	ff ff ff 
    39a6:	8b 05 94 d6 00 00    	mov    eax,DWORD PTR [rip+0xd694]        # 11040 <total_conversations>
    39ac:	83 e8 01             	sub    eax,0x1
    39af:	89 05 8b d6 00 00    	mov    DWORD PTR [rip+0xd68b],eax        # 11040 <total_conversations>
    39b5:	48 8b 95 60 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4a0]
    39bc:	48 8b 8d 58 fb ff ff 	mov    rcx,QWORD PTR [rbp-0x4a8]
    39c3:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    39ca:	48 89 ce             	mov    rsi,rcx
    39cd:	48 89 c7             	mov    rdi,rax
    39d0:	e8 de 14 00 00       	call   4eb3 <ip4_igmp_decode>
    39d5:	e9 89 00 00 00       	jmp    3a63 <ipv4pktmgr+0x40e>
    39da:	c7 85 7c fb ff ff 7e 	mov    DWORD PTR [rbp-0x484],0x7e
    39e1:	00 00 00 
    39e4:	48 8b 95 20 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4e0]
    39eb:	48 8d 8d 50 fb ff ff 	lea    rcx,[rbp-0x4b0]
    39f2:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    39f9:	48 89 ce             	mov    rsi,rcx
    39fc:	48 89 c7             	mov    rdi,rax
    39ff:	e8 17 0a 00 00       	call   441b <ip4_tcp_decode>
    3a04:	eb 5d                	jmp    3a63 <ipv4pktmgr+0x40e>
    3a06:	c7 85 7c fb ff ff 7f 	mov    DWORD PTR [rbp-0x484],0x7f
    3a0d:	00 00 00 
    3a10:	48 8b 95 20 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4e0]
    3a17:	48 8d 8d 50 fb ff ff 	lea    rcx,[rbp-0x4b0]
    3a1e:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    3a25:	48 89 ce             	mov    rsi,rcx
    3a28:	48 89 c7             	mov    rdi,rax
    3a2b:	e8 2e 13 00 00       	call   4d5e <ip4_udp_decode>
    3a30:	eb 31                	jmp    3a63 <ipv4pktmgr+0x40e>
    3a32:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    3a39:	0f b6 40 09          	movzx  eax,BYTE PTR [rax+0x9]
    3a3d:	0f b6 c8             	movzx  ecx,al
    3a40:	48 8b 95 60 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4a0]
    3a47:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    3a4e:	48 89 c6             	mov    rsi,rax
    3a51:	48 8d 3d 80 88 00 00 	lea    rdi,[rip+0x8880]        # c2d8 <_IO_stdin_used+0x2d8>
    3a58:	b8 00 00 00 00       	mov    eax,0x0
    3a5d:	e8 8e eb ff ff       	call   25f0 <printf@plt>
    3a62:	90                   	nop
    3a63:	90                   	nop
    3a64:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3a68:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    3a6f:	00 00 
    3a71:	74 05                	je     3a78 <ipv4pktmgr+0x423>
    3a73:	e8 38 eb ff ff       	call   25b0 <__stack_chk_fail@plt>
    3a78:	c9                   	leave  
    3a79:	c3                   	ret    

0000000000003a7a <ip6_icmp_decode>:
    3a7a:	f3 0f 1e fa          	endbr64 
    3a7e:	55                   	push   rbp
    3a7f:	48 89 e5             	mov    rbp,rsp
    3a82:	48 83 c4 80          	add    rsp,0xffffffffffffff80
    3a86:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    3a8a:	48 89 75 90          	mov    QWORD PTR [rbp-0x70],rsi
    3a8e:	48 89 55 88          	mov    QWORD PTR [rbp-0x78],rdx
    3a92:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3a99:	00 00 
    3a9b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3a9f:	31 c0                	xor    eax,eax
    3aa1:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    3aa5:	48 83 c0 36          	add    rax,0x36
    3aa9:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    3aad:	0f b6 05 a5 42 10 00 	movzx  eax,BYTE PTR [rip+0x1042a5]        # 107d59 <packet_print>
    3ab4:	84 c0                	test   al,al
    3ab6:	0f 84 04 01 00 00    	je     3bc0 <ip6_icmp_decode+0x146>
    3abc:	48 8d 35 3d 88 00 00 	lea    rsi,[rip+0x883d]        # c300 <_IO_stdin_used+0x300>
    3ac3:	48 8d 3d 3c 88 00 00 	lea    rdi,[rip+0x883c]        # c306 <_IO_stdin_used+0x306>
    3aca:	b8 00 00 00 00       	mov    eax,0x0
    3acf:	e8 1c eb ff ff       	call   25f0 <printf@plt>
    3ad4:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
    3ad8:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    3adc:	48 89 c6             	mov    rsi,rax
    3adf:	48 8d 3d 23 88 00 00 	lea    rdi,[rip+0x8823]        # c309 <_IO_stdin_used+0x309>
    3ae6:	b8 00 00 00 00       	mov    eax,0x0
    3aeb:	e8 00 eb ff ff       	call   25f0 <printf@plt>
    3af0:	48 8d 3d 21 88 00 00 	lea    rdi,[rip+0x8821]        # c318 <_IO_stdin_used+0x318>
    3af7:	b8 00 00 00 00       	mov    eax,0x0
    3afc:	e8 ef ea ff ff       	call   25f0 <printf@plt>
    3b01:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3b05:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3b08:	0f b6 c0             	movzx  eax,al
    3b0b:	3d 8f 00 00 00       	cmp    eax,0x8f
    3b10:	74 68                	je     3b7a <ip6_icmp_decode+0x100>
    3b12:	3d 8f 00 00 00       	cmp    eax,0x8f
    3b17:	0f 8f 8b 00 00 00    	jg     3ba8 <ip6_icmp_decode+0x12e>
    3b1d:	3d 87 00 00 00       	cmp    eax,0x87
    3b22:	74 77                	je     3b9b <ip6_icmp_decode+0x121>
    3b24:	3d 87 00 00 00       	cmp    eax,0x87
    3b29:	7f 7d                	jg     3ba8 <ip6_icmp_decode+0x12e>
    3b2b:	3d 82 00 00 00       	cmp    eax,0x82
    3b30:	74 56                	je     3b88 <ip6_icmp_decode+0x10e>
    3b32:	3d 85 00 00 00       	cmp    eax,0x85
    3b37:	75 6f                	jne    3ba8 <ip6_icmp_decode+0x12e>
    3b39:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3b3d:	48 83 c0 0a          	add    rax,0xa
    3b41:	48 89 c7             	mov    rdi,rax
    3b44:	e8 18 f4 ff ff       	call   2f61 <mac_ntoa>
    3b49:	48 89 c1             	mov    rcx,rax
    3b4c:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    3b50:	ba 40 00 00 00       	mov    edx,0x40
    3b55:	48 89 ce             	mov    rsi,rcx
    3b58:	48 89 c7             	mov    rdi,rax
    3b5b:	e8 70 e9 ff ff       	call   24d0 <strncpy@plt>
    3b60:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    3b64:	48 89 c6             	mov    rsi,rax
    3b67:	48 8d 3d b3 87 00 00 	lea    rdi,[rip+0x87b3]        # c321 <_IO_stdin_used+0x321>
    3b6e:	b8 00 00 00 00       	mov    eax,0x0
    3b73:	e8 78 ea ff ff       	call   25f0 <printf@plt>
    3b78:	eb 2e                	jmp    3ba8 <ip6_icmp_decode+0x12e>
    3b7a:	48 8d 3d bf 87 00 00 	lea    rdi,[rip+0x87bf]        # c340 <_IO_stdin_used+0x340>
    3b81:	e8 9a e9 ff ff       	call   2520 <puts@plt>
    3b86:	eb 20                	jmp    3ba8 <ip6_icmp_decode+0x12e>
    3b88:	48 8d 3d d6 87 00 00 	lea    rdi,[rip+0x87d6]        # c365 <_IO_stdin_used+0x365>
    3b8f:	b8 00 00 00 00       	mov    eax,0x0
    3b94:	e8 57 ea ff ff       	call   25f0 <printf@plt>
    3b99:	eb 0d                	jmp    3ba8 <ip6_icmp_decode+0x12e>
    3b9b:	48 8d 3d dd 87 00 00 	lea    rdi,[rip+0x87dd]        # c37f <_IO_stdin_used+0x37f>
    3ba2:	e8 79 e9 ff ff       	call   2520 <puts@plt>
    3ba7:	90                   	nop
    3ba8:	48 8d 35 e6 87 00 00 	lea    rsi,[rip+0x87e6]        # c395 <_IO_stdin_used+0x395>
    3baf:	48 8d 3d 50 87 00 00 	lea    rdi,[rip+0x8750]        # c306 <_IO_stdin_used+0x306>
    3bb6:	b8 00 00 00 00       	mov    eax,0x0
    3bbb:	e8 30 ea ff ff       	call   25f0 <printf@plt>
    3bc0:	90                   	nop
    3bc1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3bc5:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    3bcc:	00 00 
    3bce:	74 05                	je     3bd5 <ip6_icmp_decode+0x15b>
    3bd0:	e8 db e9 ff ff       	call   25b0 <__stack_chk_fail@plt>
    3bd5:	c9                   	leave  
    3bd6:	c3                   	ret    

0000000000003bd7 <ip4_icmp_decode>:
    3bd7:	f3 0f 1e fa          	endbr64 
    3bdb:	55                   	push   rbp
    3bdc:	48 89 e5             	mov    rbp,rsp
    3bdf:	48 81 ec 20 01 00 00 	sub    rsp,0x120
    3be6:	48 89 bd e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rdi
    3bed:	48 89 b5 e0 fe ff ff 	mov    QWORD PTR [rbp-0x120],rsi
    3bf4:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3bfb:	00 00 
    3bfd:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3c01:	31 c0                	xor    eax,eax
    3c03:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c0a:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3c0e:	ba 5e 00 00 00       	mov    edx,0x5e
    3c13:	be 01 00 00 00       	mov    esi,0x1
    3c18:	48 89 c7             	mov    rdi,rax
    3c1b:	e8 92 13 00 00       	call   4fb2 <add_ip_addr_or_inc_counter>
    3c20:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c27:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    3c2b:	ba 5e 00 00 00       	mov    edx,0x5e
    3c30:	be 00 00 00 00       	mov    esi,0x0
    3c35:	48 89 c7             	mov    rdi,rax
    3c38:	e8 75 13 00 00       	call   4fb2 <add_ip_addr_or_inc_counter>
    3c3d:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c44:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3c48:	48 89 85 08 ff ff ff 	mov    QWORD PTR [rbp-0xf8],rax
    3c4f:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c56:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    3c5a:	48 89 85 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],rax
    3c61:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    3c68:	48 83 c0 22          	add    rax,0x22
    3c6c:	48 89 85 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rax
    3c73:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    3c7a:	48 8d 50 22          	lea    rdx,[rax+0x22]
    3c7e:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c85:	48 89 10             	mov    QWORD PTR [rax],rdx
    3c88:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c8f:	48 8b 95 18 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xe8]
    3c96:	48 89 50 60          	mov    QWORD PTR [rax+0x60],rdx
    3c9a:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3ca1:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    3ca4:	89 85 fc fe ff ff    	mov    DWORD PTR [rbp-0x104],eax
    3caa:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3cb1:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    3cb4:	8d 50 d6             	lea    edx,[rax-0x2a]
    3cb7:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3cbe:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    3cc1:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    3cc8:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3ccb:	3c 08                	cmp    al,0x8
    3ccd:	0f 85 55 01 00 00    	jne    3e28 <ip4_icmp_decode+0x251>
    3cd3:	8b 05 2f 40 10 00    	mov    eax,DWORD PTR [rip+0x10402f]        # 107d08 <strict_nmap_host_alive_check>
    3cd9:	83 f8 01             	cmp    eax,0x1
    3cdc:	0f 85 46 01 00 00    	jne    3e28 <ip4_icmp_decode+0x251>
    3ce2:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3ce9:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3ced:	48 89 c7             	mov    rdi,rax
    3cf0:	e8 31 3d 00 00       	call   7a26 <member_exists>
    3cf5:	89 85 00 ff ff ff    	mov    DWORD PTR [rbp-0x100],eax
    3cfb:	83 bd 00 ff ff ff ff 	cmp    DWORD PTR [rbp-0x100],0xffffffff
    3d02:	0f 84 83 00 00 00    	je     3d8b <ip4_icmp_decode+0x1b4>
    3d08:	8b 85 00 ff ff ff    	mov    eax,DWORD PTR [rbp-0x100]
    3d0e:	48 63 d0             	movsxd rdx,eax
    3d11:	48 89 d0             	mov    rax,rdx
    3d14:	48 c1 e0 02          	shl    rax,0x2
    3d18:	48 01 d0             	add    rax,rdx
    3d1b:	48 c1 e0 03          	shl    rax,0x3
    3d1f:	48 01 d0             	add    rax,rdx
    3d22:	48 c1 e0 04          	shl    rax,0x4
    3d26:	48 8d 15 73 f3 0e 00 	lea    rdx,[rip+0xef373]        # f30a0 <watchlist>
    3d2d:	48 01 d0             	add    rax,rdx
    3d30:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
    3d37:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d3e:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3d41:	85 c0                	test   eax,eax
    3d43:	0f 85 a8 02 00 00    	jne    3ff1 <ip4_icmp_decode+0x41a>
    3d49:	bf 00 00 00 00       	mov    edi,0x0
    3d4e:	e8 ad e9 ff ff       	call   2700 <time@plt>
    3d53:	48 89 c2             	mov    rdx,rax
    3d56:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d5d:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    3d61:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d68:	c7 40 30 01 00 00 00 	mov    DWORD PTR [rax+0x30],0x1
    3d6f:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d76:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3d79:	8d 50 01             	lea    edx,[rax+0x1]
    3d7c:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d83:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    3d86:	e9 66 02 00 00       	jmp    3ff1 <ip4_icmp_decode+0x41a>
    3d8b:	8b 05 87 d2 00 00    	mov    eax,DWORD PTR [rip+0xd287]        # 11018 <watchlist_num>
    3d91:	83 c0 01             	add    eax,0x1
    3d94:	89 05 7e d2 00 00    	mov    DWORD PTR [rip+0xd27e],eax        # 11018 <watchlist_num>
    3d9a:	8b 05 78 d2 00 00    	mov    eax,DWORD PTR [rip+0xd278]        # 11018 <watchlist_num>
    3da0:	48 63 d0             	movsxd rdx,eax
    3da3:	48 89 d0             	mov    rax,rdx
    3da6:	48 c1 e0 02          	shl    rax,0x2
    3daa:	48 01 d0             	add    rax,rdx
    3dad:	48 c1 e0 03          	shl    rax,0x3
    3db1:	48 01 d0             	add    rax,rdx
    3db4:	48 c1 e0 04          	shl    rax,0x4
    3db8:	48 8d 15 e1 f2 0e 00 	lea    rdx,[rip+0xef2e1]        # f30a0 <watchlist>
    3dbf:	48 01 d0             	add    rax,rdx
    3dc2:	48 89 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rax
    3dc9:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3dd0:	48 8d 50 08          	lea    rdx,[rax+0x8]
    3dd4:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3ddb:	48 89 c6             	mov    rsi,rax
    3dde:	48 89 d7             	mov    rdi,rdx
    3de1:	e8 0a e7 ff ff       	call   24f0 <strcpy@plt>
    3de6:	bf 00 00 00 00       	mov    edi,0x0
    3deb:	e8 10 e9 ff ff       	call   2700 <time@plt>
    3df0:	48 89 c2             	mov    rdx,rax
    3df3:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3dfa:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    3dfe:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3e05:	c7 40 30 01 00 00 00 	mov    DWORD PTR [rax+0x30],0x1
    3e0c:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3e13:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3e16:	8d 50 01             	lea    edx,[rax+0x1]
    3e19:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3e20:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    3e23:	e9 c9 01 00 00       	jmp    3ff1 <ip4_icmp_decode+0x41a>
    3e28:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    3e2f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3e32:	3c 0d                	cmp    al,0xd
    3e34:	0f 85 ba 01 00 00    	jne    3ff4 <ip4_icmp_decode+0x41d>
    3e3a:	8b 05 84 63 10 00    	mov    eax,DWORD PTR [rip+0x106384]        # 10a1c4 <strict_icmp_timestamp_req>
    3e40:	83 f8 01             	cmp    eax,0x1
    3e43:	74 0f                	je     3e54 <ip4_icmp_decode+0x27d>
    3e45:	8b 05 bd 3e 10 00    	mov    eax,DWORD PTR [rip+0x103ebd]        # 107d08 <strict_nmap_host_alive_check>
    3e4b:	83 f8 01             	cmp    eax,0x1
    3e4e:	0f 85 a0 01 00 00    	jne    3ff4 <ip4_icmp_decode+0x41d>
    3e54:	8b 05 6a 63 10 00    	mov    eax,DWORD PTR [rip+0x10636a]        # 10a1c4 <strict_icmp_timestamp_req>
    3e5a:	85 c0                	test   eax,eax
    3e5c:	74 22                	je     3e80 <ip4_icmp_decode+0x2a9>
    3e5e:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    3e65:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3e6c:	48 89 c6             	mov    rsi,rax
    3e6f:	48 8d 3d 2a 85 00 00 	lea    rdi,[rip+0x852a]        # c3a0 <_IO_stdin_used+0x3a0>
    3e76:	b8 00 00 00 00       	mov    eax,0x0
    3e7b:	e8 70 e7 ff ff       	call   25f0 <printf@plt>
    3e80:	8b 05 82 3e 10 00    	mov    eax,DWORD PTR [rip+0x103e82]        # 107d08 <strict_nmap_host_alive_check>
    3e86:	85 c0                	test   eax,eax
    3e88:	0f 84 66 01 00 00    	je     3ff4 <ip4_icmp_decode+0x41d>
    3e8e:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3e95:	48 89 c7             	mov    rdi,rax
    3e98:	e8 89 3b 00 00       	call   7a26 <member_exists>
    3e9d:	89 85 04 ff ff ff    	mov    DWORD PTR [rbp-0xfc],eax
    3ea3:	83 bd 04 ff ff ff ff 	cmp    DWORD PTR [rbp-0xfc],0xffffffff
    3eaa:	0f 84 44 01 00 00    	je     3ff4 <ip4_icmp_decode+0x41d>
    3eb0:	8b 85 04 ff ff ff    	mov    eax,DWORD PTR [rbp-0xfc]
    3eb6:	48 63 d0             	movsxd rdx,eax
    3eb9:	48 89 d0             	mov    rax,rdx
    3ebc:	48 c1 e0 02          	shl    rax,0x2
    3ec0:	48 01 d0             	add    rax,rdx
    3ec3:	48 c1 e0 03          	shl    rax,0x3
    3ec7:	48 01 d0             	add    rax,rdx
    3eca:	48 c1 e0 04          	shl    rax,0x4
    3ece:	48 8d 15 cb f1 0e 00 	lea    rdx,[rip+0xef1cb]        # f30a0 <watchlist>
    3ed5:	48 01 d0             	add    rax,rdx
    3ed8:	48 89 85 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rax
    3edf:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3ee6:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3ee9:	83 f8 03             	cmp    eax,0x3
    3eec:	0f 85 05 01 00 00    	jne    3ff7 <ip4_icmp_decode+0x420>
    3ef2:	bf 00 00 00 00       	mov    edi,0x0
    3ef7:	e8 04 e8 ff ff       	call   2700 <time@plt>
    3efc:	48 89 c2             	mov    rdx,rax
    3eff:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3f06:	48 89 50 48          	mov    QWORD PTR [rax+0x48],rdx
    3f0a:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3f11:	48 8b 50 48          	mov    rdx,QWORD PTR [rax+0x48]
    3f15:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3f1c:	48 8b 40 28          	mov    rax,QWORD PTR [rax+0x28]
    3f20:	48 29 c2             	sub    rdx,rax
    3f23:	48 89 d0             	mov    rax,rdx
    3f26:	48 3d e2 b4 04 00    	cmp    rax,0x4b4e2
    3f2c:	0f 87 c2 00 00 00    	ja     3ff4 <ip4_icmp_decode+0x41d>
    3f32:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    3f39:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3f40:	48 89 c6             	mov    rsi,rax
    3f43:	48 8d 3d 9e 84 00 00 	lea    rdi,[rip+0x849e]        # c3e8 <_IO_stdin_used+0x3e8>
    3f4a:	b8 00 00 00 00       	mov    eax,0x0
    3f4f:	e8 9c e6 ff ff       	call   25f0 <printf@plt>
    3f54:	48 8b 05 d5 d0 00 00 	mov    rax,QWORD PTR [rip+0xd0d5]        # 11030 <def_log_file>
    3f5b:	48 8d 35 f0 84 00 00 	lea    rsi,[rip+0x84f0]        # c452 <_IO_stdin_used+0x452>
    3f62:	48 89 c7             	mov    rdi,rax
    3f65:	e8 46 e8 ff ff       	call   27b0 <fopen@plt>
    3f6a:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    3f71:	b8 00 00 00 00       	mov    eax,0x0
    3f76:	e8 2f f4 ff ff       	call   33aa <get_formated_time>
    3f7b:	48 89 c6             	mov    rsi,rax
    3f7e:	48 8b 8d 10 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xf0]
    3f85:	48 8b 95 08 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf8]
    3f8c:	48 8d 85 40 ff ff ff 	lea    rax,[rbp-0xc0]
    3f93:	49 89 f0             	mov    r8,rsi
    3f96:	48 8d 35 bb 84 00 00 	lea    rsi,[rip+0x84bb]        # c458 <_IO_stdin_used+0x458>
    3f9d:	48 89 c7             	mov    rdi,rax
    3fa0:	b8 00 00 00 00       	mov    eax,0x0
    3fa5:	e8 c6 e8 ff ff       	call   2870 <sprintf@plt>
    3faa:	48 8b 95 38 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xc8]
    3fb1:	48 8d 85 40 ff ff ff 	lea    rax,[rbp-0xc0]
    3fb8:	48 89 d6             	mov    rsi,rdx
    3fbb:	48 89 c7             	mov    rdi,rax
    3fbe:	e8 4d e6 ff ff       	call   2610 <fputs@plt>
    3fc3:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
    3fca:	48 89 c7             	mov    rdi,rax
    3fcd:	e8 9e e5 ff ff       	call   2570 <fclose@plt>
    3fd2:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3fd9:	48 83 c0 28          	add    rax,0x28
    3fdd:	ba 28 00 00 00       	mov    edx,0x28
    3fe2:	be 00 00 00 00       	mov    esi,0x0
    3fe7:	48 89 c7             	mov    rdi,rax
    3fea:	e8 41 e6 ff ff       	call   2630 <memset@plt>
    3fef:	eb 07                	jmp    3ff8 <ip4_icmp_decode+0x421>
    3ff1:	90                   	nop
    3ff2:	eb 04                	jmp    3ff8 <ip4_icmp_decode+0x421>
    3ff4:	90                   	nop
    3ff5:	eb 01                	jmp    3ff8 <ip4_icmp_decode+0x421>
    3ff7:	90                   	nop
    3ff8:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3fff:	c7 40 2c 80 00 00 00 	mov    DWORD PTR [rax+0x2c],0x80
    4006:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    400d:	48 89 c7             	mov    rdi,rax
    4010:	e8 dd 24 00 00       	call   64f2 <rulemgr>
    4015:	0f b6 05 3d 3d 10 00 	movzx  eax,BYTE PTR [rip+0x103d3d]        # 107d59 <packet_print>
    401c:	84 c0                	test   al,al
    401e:	0f 84 e0 03 00 00    	je     4404 <ip4_icmp_decode+0x82d>
    4024:	48 8d 35 d5 82 00 00 	lea    rsi,[rip+0x82d5]        # c300 <_IO_stdin_used+0x300>
    402b:	48 8d 3d d4 82 00 00 	lea    rdi,[rip+0x82d4]        # c306 <_IO_stdin_used+0x306>
    4032:	b8 00 00 00 00       	mov    eax,0x0
    4037:	e8 b4 e5 ff ff       	call   25f0 <printf@plt>
    403c:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    4043:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    404a:	48 89 c6             	mov    rsi,rax
    404d:	48 8d 3d 74 84 00 00 	lea    rdi,[rip+0x8474]        # c4c8 <_IO_stdin_used+0x4c8>
    4054:	b8 00 00 00 00       	mov    eax,0x0
    4059:	e8 92 e5 ff ff       	call   25f0 <printf@plt>
    405e:	48 8d 3d 72 84 00 00 	lea    rdi,[rip+0x8472]        # c4d7 <_IO_stdin_used+0x4d7>
    4065:	b8 00 00 00 00       	mov    eax,0x0
    406a:	e8 81 e5 ff ff       	call   25f0 <printf@plt>
    406f:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4076:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4079:	0f b6 c0             	movzx  eax,al
    407c:	83 f8 0e             	cmp    eax,0xe
    407f:	0f 87 46 03 00 00    	ja     43cb <ip4_icmp_decode+0x7f4>
    4085:	89 c0                	mov    eax,eax
    4087:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    408e:	00 
    408f:	48 8d 05 4a 88 00 00 	lea    rax,[rip+0x884a]        # c8e0 <_IO_stdin_used+0x8e0>
    4096:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    4099:	48 98                	cdqe   
    409b:	48 8d 15 3e 88 00 00 	lea    rdx,[rip+0x883e]        # c8e0 <_IO_stdin_used+0x8e0>
    40a2:	48 01 d0             	add    rax,rdx
    40a5:	3e ff e0             	notrack jmp rax
    40a8:	48 8d 3d 2f 84 00 00 	lea    rdi,[rip+0x842f]        # c4de <_IO_stdin_used+0x4de>
    40af:	e8 6c e4 ff ff       	call   2520 <puts@plt>
    40b4:	e9 33 03 00 00       	jmp    43ec <ip4_icmp_decode+0x815>
    40b9:	48 8d 3d 2a 84 00 00 	lea    rdi,[rip+0x842a]        # c4ea <_IO_stdin_used+0x4ea>
    40c0:	b8 00 00 00 00       	mov    eax,0x0
    40c5:	e8 26 e5 ff ff       	call   25f0 <printf@plt>
    40ca:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    40d1:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    40d5:	0f b6 c0             	movzx  eax,al
    40d8:	83 f8 0f             	cmp    eax,0xf
    40db:	0f 87 1e 01 00 00    	ja     41ff <ip4_icmp_decode+0x628>
    40e1:	89 c0                	mov    eax,eax
    40e3:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    40ea:	00 
    40eb:	48 8d 05 2a 88 00 00 	lea    rax,[rip+0x882a]        # c91c <_IO_stdin_used+0x91c>
    40f2:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    40f5:	48 98                	cdqe   
    40f7:	48 8d 15 1e 88 00 00 	lea    rdx,[rip+0x881e]        # c91c <_IO_stdin_used+0x91c>
    40fe:	48 01 d0             	add    rax,rdx
    4101:	3e ff e0             	notrack jmp rax
    4104:	48 8d 3d f9 83 00 00 	lea    rdi,[rip+0x83f9]        # c504 <_IO_stdin_used+0x504>
    410b:	e8 10 e4 ff ff       	call   2520 <puts@plt>
    4110:	e9 0c 01 00 00       	jmp    4221 <ip4_icmp_decode+0x64a>
    4115:	48 8d 3d ff 83 00 00 	lea    rdi,[rip+0x83ff]        # c51b <_IO_stdin_used+0x51b>
    411c:	e8 ff e3 ff ff       	call   2520 <puts@plt>
    4121:	e9 fb 00 00 00       	jmp    4221 <ip4_icmp_decode+0x64a>
    4126:	48 8d 3d 02 84 00 00 	lea    rdi,[rip+0x8402]        # c52f <_IO_stdin_used+0x52f>
    412d:	e8 ee e3 ff ff       	call   2520 <puts@plt>
    4132:	e9 ea 00 00 00       	jmp    4221 <ip4_icmp_decode+0x64a>
    4137:	48 8d 3d 09 84 00 00 	lea    rdi,[rip+0x8409]        # c547 <_IO_stdin_used+0x547>
    413e:	e8 dd e3 ff ff       	call   2520 <puts@plt>
    4143:	e9 d9 00 00 00       	jmp    4221 <ip4_icmp_decode+0x64a>
    4148:	48 8d 3d 0c 84 00 00 	lea    rdi,[rip+0x840c]        # c55b <_IO_stdin_used+0x55b>
    414f:	e8 cc e3 ff ff       	call   2520 <puts@plt>
    4154:	e9 c8 00 00 00       	jmp    4221 <ip4_icmp_decode+0x64a>
    4159:	48 8d 3d 13 84 00 00 	lea    rdi,[rip+0x8413]        # c573 <_IO_stdin_used+0x573>
    4160:	e8 bb e3 ff ff       	call   2520 <puts@plt>
    4165:	e9 b7 00 00 00       	jmp    4221 <ip4_icmp_decode+0x64a>
    416a:	48 8d 3d 1f 84 00 00 	lea    rdi,[rip+0x841f]        # c590 <_IO_stdin_used+0x590>
    4171:	e8 aa e3 ff ff       	call   2520 <puts@plt>
    4176:	e9 a6 00 00 00       	jmp    4221 <ip4_icmp_decode+0x64a>
    417b:	48 8d 3d 36 84 00 00 	lea    rdi,[rip+0x8436]        # c5b8 <_IO_stdin_used+0x5b8>
    4182:	e8 99 e3 ff ff       	call   2520 <puts@plt>
    4187:	e9 95 00 00 00       	jmp    4221 <ip4_icmp_decode+0x64a>
    418c:	48 8d 3d 45 84 00 00 	lea    rdi,[rip+0x8445]        # c5d8 <_IO_stdin_used+0x5d8>
    4193:	e8 88 e3 ff ff       	call   2520 <puts@plt>
    4198:	e9 84 00 00 00       	jmp    4221 <ip4_icmp_decode+0x64a>
    419d:	48 8d 3d 4c 84 00 00 	lea    rdi,[rip+0x844c]        # c5f0 <_IO_stdin_used+0x5f0>
    41a4:	e8 77 e3 ff ff       	call   2520 <puts@plt>
    41a9:	eb 76                	jmp    4221 <ip4_icmp_decode+0x64a>
    41ab:	48 8d 3d 66 84 00 00 	lea    rdi,[rip+0x8466]        # c618 <_IO_stdin_used+0x618>
    41b2:	e8 69 e3 ff ff       	call   2520 <puts@plt>
    41b7:	eb 68                	jmp    4221 <ip4_icmp_decode+0x64a>
    41b9:	48 8d 3d 80 84 00 00 	lea    rdi,[rip+0x8480]        # c640 <_IO_stdin_used+0x640>
    41c0:	e8 5b e3 ff ff       	call   2520 <puts@plt>
    41c5:	eb 5a                	jmp    4221 <ip4_icmp_decode+0x64a>
    41c7:	48 8d 3d 91 84 00 00 	lea    rdi,[rip+0x8491]        # c65f <_IO_stdin_used+0x65f>
    41ce:	e8 4d e3 ff ff       	call   2520 <puts@plt>
    41d3:	eb 4c                	jmp    4221 <ip4_icmp_decode+0x64a>
    41d5:	48 8d 3d a4 84 00 00 	lea    rdi,[rip+0x84a4]        # c680 <_IO_stdin_used+0x680>
    41dc:	e8 3f e3 ff ff       	call   2520 <puts@plt>
    41e1:	eb 3e                	jmp    4221 <ip4_icmp_decode+0x64a>
    41e3:	48 8d 3d c3 84 00 00 	lea    rdi,[rip+0x84c3]        # c6ad <_IO_stdin_used+0x6ad>
    41ea:	e8 31 e3 ff ff       	call   2520 <puts@plt>
    41ef:	eb 30                	jmp    4221 <ip4_icmp_decode+0x64a>
    41f1:	48 8d 3d d8 84 00 00 	lea    rdi,[rip+0x84d8]        # c6d0 <_IO_stdin_used+0x6d0>
    41f8:	e8 23 e3 ff ff       	call   2520 <puts@plt>
    41fd:	eb 22                	jmp    4221 <ip4_icmp_decode+0x64a>
    41ff:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4206:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    420a:	0f b6 c0             	movzx  eax,al
    420d:	89 c6                	mov    esi,eax
    420f:	48 8d 3d d9 84 00 00 	lea    rdi,[rip+0x84d9]        # c6ef <_IO_stdin_used+0x6ef>
    4216:	b8 00 00 00 00       	mov    eax,0x0
    421b:	e8 d0 e3 ff ff       	call   25f0 <printf@plt>
    4220:	90                   	nop
    4221:	e9 c6 01 00 00       	jmp    43ec <ip4_icmp_decode+0x815>
    4226:	48 8d 3d db 84 00 00 	lea    rdi,[rip+0x84db]        # c708 <_IO_stdin_used+0x708>
    422d:	e8 ee e2 ff ff       	call   2520 <puts@plt>
    4232:	e9 b5 01 00 00       	jmp    43ec <ip4_icmp_decode+0x815>
    4237:	48 8d 3d e9 84 00 00 	lea    rdi,[rip+0x84e9]        # c727 <_IO_stdin_used+0x727>
    423e:	b8 00 00 00 00       	mov    eax,0x0
    4243:	e8 a8 e3 ff ff       	call   25f0 <printf@plt>
    4248:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    424f:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4253:	0f b6 c0             	movzx  eax,al
    4256:	83 f8 03             	cmp    eax,0x3
    4259:	74 44                	je     429f <ip4_icmp_decode+0x6c8>
    425b:	83 f8 03             	cmp    eax,0x3
    425e:	7f 4d                	jg     42ad <ip4_icmp_decode+0x6d6>
    4260:	83 f8 02             	cmp    eax,0x2
    4263:	74 2c                	je     4291 <ip4_icmp_decode+0x6ba>
    4265:	83 f8 02             	cmp    eax,0x2
    4268:	7f 43                	jg     42ad <ip4_icmp_decode+0x6d6>
    426a:	85 c0                	test   eax,eax
    426c:	74 07                	je     4275 <ip4_icmp_decode+0x69e>
    426e:	83 f8 01             	cmp    eax,0x1
    4271:	74 10                	je     4283 <ip4_icmp_decode+0x6ac>
    4273:	eb 38                	jmp    42ad <ip4_icmp_decode+0x6d6>
    4275:	48 8d 3d b7 84 00 00 	lea    rdi,[rip+0x84b7]        # c733 <_IO_stdin_used+0x733>
    427c:	e8 9f e2 ff ff       	call   2520 <puts@plt>
    4281:	eb 4c                	jmp    42cf <ip4_icmp_decode+0x6f8>
    4283:	48 8d 3d c1 84 00 00 	lea    rdi,[rip+0x84c1]        # c74b <_IO_stdin_used+0x74b>
    428a:	e8 91 e2 ff ff       	call   2520 <puts@plt>
    428f:	eb 3e                	jmp    42cf <ip4_icmp_decode+0x6f8>
    4291:	48 8d 3d c8 84 00 00 	lea    rdi,[rip+0x84c8]        # c760 <_IO_stdin_used+0x760>
    4298:	e8 83 e2 ff ff       	call   2520 <puts@plt>
    429d:	eb 30                	jmp    42cf <ip4_icmp_decode+0x6f8>
    429f:	48 8d 3d da 84 00 00 	lea    rdi,[rip+0x84da]        # c780 <_IO_stdin_used+0x780>
    42a6:	e8 75 e2 ff ff       	call   2520 <puts@plt>
    42ab:	eb 22                	jmp    42cf <ip4_icmp_decode+0x6f8>
    42ad:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    42b4:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    42b8:	0f b6 c0             	movzx  eax,al
    42bb:	89 c6                	mov    esi,eax
    42bd:	48 8d 3d 2b 84 00 00 	lea    rdi,[rip+0x842b]        # c6ef <_IO_stdin_used+0x6ef>
    42c4:	b8 00 00 00 00       	mov    eax,0x0
    42c9:	e8 22 e3 ff ff       	call   25f0 <printf@plt>
    42ce:	90                   	nop
    42cf:	e9 18 01 00 00       	jmp    43ec <ip4_icmp_decode+0x815>
    42d4:	48 8d 3d c2 84 00 00 	lea    rdi,[rip+0x84c2]        # c79d <_IO_stdin_used+0x79d>
    42db:	e8 40 e2 ff ff       	call   2520 <puts@plt>
    42e0:	e9 07 01 00 00       	jmp    43ec <ip4_icmp_decode+0x815>
    42e5:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    42ec:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    42f0:	84 c0                	test   al,al
    42f2:	75 16                	jne    430a <ip4_icmp_decode+0x733>
    42f4:	48 8d 3d b5 84 00 00 	lea    rdi,[rip+0x84b5]        # c7b0 <_IO_stdin_used+0x7b0>
    42fb:	b8 00 00 00 00       	mov    eax,0x0
    4300:	e8 eb e2 ff ff       	call   25f0 <printf@plt>
    4305:	e9 e2 00 00 00       	jmp    43ec <ip4_icmp_decode+0x815>
    430a:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4311:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4315:	0f b6 c0             	movzx  eax,al
    4318:	89 c6                	mov    esi,eax
    431a:	48 8d 3d cf 84 00 00 	lea    rdi,[rip+0x84cf]        # c7f0 <_IO_stdin_used+0x7f0>
    4321:	b8 00 00 00 00       	mov    eax,0x0
    4326:	e8 c5 e2 ff ff       	call   25f0 <printf@plt>
    432b:	e9 bc 00 00 00       	jmp    43ec <ip4_icmp_decode+0x815>
    4330:	48 8d 3d e6 84 00 00 	lea    rdi,[rip+0x84e6]        # c81d <_IO_stdin_used+0x81d>
    4337:	e8 e4 e1 ff ff       	call   2520 <puts@plt>
    433c:	e9 ab 00 00 00       	jmp    43ec <ip4_icmp_decode+0x815>
    4341:	48 8d 3d ec 84 00 00 	lea    rdi,[rip+0x84ec]        # c834 <_IO_stdin_used+0x834>
    4348:	b8 00 00 00 00       	mov    eax,0x0
    434d:	e8 9e e2 ff ff       	call   25f0 <printf@plt>
    4352:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4359:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    435d:	84 c0                	test   al,al
    435f:	75 0e                	jne    436f <ip4_icmp_decode+0x798>
    4361:	48 8d 3d e3 84 00 00 	lea    rdi,[rip+0x84e3]        # c84b <_IO_stdin_used+0x84b>
    4368:	e8 b3 e1 ff ff       	call   2520 <puts@plt>
    436d:	eb 7d                	jmp    43ec <ip4_icmp_decode+0x815>
    436f:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4376:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    437a:	3c 01                	cmp    al,0x1
    437c:	75 0e                	jne    438c <ip4_icmp_decode+0x7b5>
    437e:	48 8d 3d e3 84 00 00 	lea    rdi,[rip+0x84e3]        # c868 <_IO_stdin_used+0x868>
    4385:	e8 96 e1 ff ff       	call   2520 <puts@plt>
    438a:	eb 60                	jmp    43ec <ip4_icmp_decode+0x815>
    438c:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4393:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4397:	0f b6 c0             	movzx  eax,al
    439a:	89 c6                	mov    esi,eax
    439c:	48 8d 3d ec 84 00 00 	lea    rdi,[rip+0x84ec]        # c88f <_IO_stdin_used+0x88f>
    43a3:	b8 00 00 00 00       	mov    eax,0x0
    43a8:	e8 43 e2 ff ff       	call   25f0 <printf@plt>
    43ad:	eb 3d                	jmp    43ec <ip4_icmp_decode+0x815>
    43af:	48 8d 3d ef 84 00 00 	lea    rdi,[rip+0x84ef]        # c8a5 <_IO_stdin_used+0x8a5>
    43b6:	e8 65 e1 ff ff       	call   2520 <puts@plt>
    43bb:	eb 2f                	jmp    43ec <ip4_icmp_decode+0x815>
    43bd:	48 8d 3d f4 84 00 00 	lea    rdi,[rip+0x84f4]        # c8b8 <_IO_stdin_used+0x8b8>
    43c4:	e8 57 e1 ff ff       	call   2520 <puts@plt>
    43c9:	eb 21                	jmp    43ec <ip4_icmp_decode+0x815>
    43cb:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    43d2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    43d5:	0f b6 c0             	movzx  eax,al
    43d8:	89 c6                	mov    esi,eax
    43da:	48 8d 3d e8 84 00 00 	lea    rdi,[rip+0x84e8]        # c8c9 <_IO_stdin_used+0x8c9>
    43e1:	b8 00 00 00 00       	mov    eax,0x0
    43e6:	e8 05 e2 ff ff       	call   25f0 <printf@plt>
    43eb:	90                   	nop
    43ec:	48 8d 35 a2 7f 00 00 	lea    rsi,[rip+0x7fa2]        # c395 <_IO_stdin_used+0x395>
    43f3:	48 8d 3d 0c 7f 00 00 	lea    rdi,[rip+0x7f0c]        # c306 <_IO_stdin_used+0x306>
    43fa:	b8 00 00 00 00       	mov    eax,0x0
    43ff:	e8 ec e1 ff ff       	call   25f0 <printf@plt>
    4404:	90                   	nop
    4405:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4409:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    4410:	00 00 
    4412:	74 05                	je     4419 <ip4_icmp_decode+0x842>
    4414:	e8 97 e1 ff ff       	call   25b0 <__stack_chk_fail@plt>
    4419:	c9                   	leave  
    441a:	c3                   	ret    

000000000000441b <ip4_tcp_decode>:
    441b:	f3 0f 1e fa          	endbr64 
    441f:	55                   	push   rbp
    4420:	48 89 e5             	mov    rbp,rsp
    4423:	48 83 c4 80          	add    rsp,0xffffffffffffff80
    4427:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    442b:	48 89 75 90          	mov    QWORD PTR [rbp-0x70],rsi
    442f:	48 89 55 88          	mov    QWORD PTR [rbp-0x78],rdx
    4433:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    4437:	48 83 c0 22          	add    rax,0x22
    443b:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    443f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4443:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    4447:	c0 e8 04             	shr    al,0x4
    444a:	0f b6 c0             	movzx  eax,al
    444d:	c1 e0 02             	shl    eax,0x2
    4450:	48 98                	cdqe   
    4452:	48 8d 50 22          	lea    rdx,[rax+0x22]
    4456:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    445a:	48 01 c2             	add    rdx,rax
    445d:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4461:	48 89 10             	mov    QWORD PTR [rax],rdx
    4464:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4468:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    446b:	89 c2                	mov    edx,eax
    446d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4471:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    4475:	c0 e8 04             	shr    al,0x4
    4478:	0f b6 c0             	movzx  eax,al
    447b:	c1 e0 02             	shl    eax,0x2
    447e:	29 c2                	sub    edx,eax
    4480:	89 d0                	mov    eax,edx
    4482:	83 e8 22             	sub    eax,0x22
    4485:	89 c2                	mov    edx,eax
    4487:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    448b:	89 50 30             	mov    DWORD PTR [rax+0x30],edx
    448e:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4492:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    4496:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    449a:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    449e:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    44a2:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    44a6:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    44aa:	ba 5c 00 00 00       	mov    edx,0x5c
    44af:	be 01 00 00 00       	mov    esi,0x1
    44b4:	48 89 c7             	mov    rdi,rax
    44b7:	e8 f6 0a 00 00       	call   4fb2 <add_ip_addr_or_inc_counter>
    44bc:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    44c0:	ba 5c 00 00 00       	mov    edx,0x5c
    44c5:	be 00 00 00 00       	mov    esi,0x0
    44ca:	48 89 c7             	mov    rdi,rax
    44cd:	e8 e0 0a 00 00       	call   4fb2 <add_ip_addr_or_inc_counter>
    44d2:	c7 45 b4 00 00 00 00 	mov    DWORD PTR [rbp-0x4c],0x0
    44d9:	c6 45 af 00          	mov    BYTE PTR [rbp-0x51],0x0
    44dd:	c6 45 b0 00          	mov    BYTE PTR [rbp-0x50],0x0
    44e1:	c6 45 b1 00          	mov    BYTE PTR [rbp-0x4f],0x0
    44e5:	c6 45 b2 00          	mov    BYTE PTR [rbp-0x4e],0x0
    44e9:	c6 45 b3 00          	mov    BYTE PTR [rbp-0x4d],0x0
    44ed:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    44f1:	48 83 c0 68          	add    rax,0x68
    44f5:	ba 08 00 00 00       	mov    edx,0x8
    44fa:	be 00 00 00 00       	mov    esi,0x0
    44ff:	48 89 c7             	mov    rdi,rax
    4502:	e8 29 e1 ff ff       	call   2630 <memset@plt>
    4507:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    450b:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    450f:	0f b7 c0             	movzx  eax,ax
    4512:	89 c7                	mov    edi,eax
    4514:	e8 67 e2 ff ff       	call   2780 <ntohs@plt>
    4519:	0f b7 c0             	movzx  eax,ax
    451c:	89 45 b8             	mov    DWORD PTR [rbp-0x48],eax
    451f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4523:	0f b7 00             	movzx  eax,WORD PTR [rax]
    4526:	0f b7 c0             	movzx  eax,ax
    4529:	89 c7                	mov    edi,eax
    452b:	e8 50 e2 ff ff       	call   2780 <ntohs@plt>
    4530:	0f b7 c0             	movzx  eax,ax
    4533:	89 45 bc             	mov    DWORD PTR [rbp-0x44],eax
    4536:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    453a:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    453e:	0f b7 c0             	movzx  eax,ax
    4541:	89 c7                	mov    edi,eax
    4543:	e8 38 e2 ff ff       	call   2780 <ntohs@plt>
    4548:	0f b7 d0             	movzx  edx,ax
    454b:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    454f:	89 50 28             	mov    DWORD PTR [rax+0x28],edx
    4552:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4556:	8b 55 bc             	mov    edx,DWORD PTR [rbp-0x44]
    4559:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    455c:	0f b6 05 f6 37 10 00 	movzx  eax,BYTE PTR [rip+0x1037f6]        # 107d59 <packet_print>
    4563:	84 c0                	test   al,al
    4565:	74 4e                	je     45b5 <ip4_tcp_decode+0x19a>
    4567:	48 8d 35 f2 83 00 00 	lea    rsi,[rip+0x83f2]        # c960 <_IO_stdin_used+0x960>
    456e:	48 8d 3d f1 83 00 00 	lea    rdi,[rip+0x83f1]        # c966 <_IO_stdin_used+0x966>
    4575:	b8 00 00 00 00       	mov    eax,0x0
    457a:	e8 71 e0 ff ff       	call   25f0 <printf@plt>
    457f:	8b 75 b8             	mov    esi,DWORD PTR [rbp-0x48]
    4582:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    4586:	8b 55 bc             	mov    edx,DWORD PTR [rbp-0x44]
    4589:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    458d:	41 89 f0             	mov    r8d,esi
    4590:	48 89 c6             	mov    rsi,rax
    4593:	48 8d 3d cf 83 00 00 	lea    rdi,[rip+0x83cf]        # c969 <_IO_stdin_used+0x969>
    459a:	b8 00 00 00 00       	mov    eax,0x0
    459f:	e8 4c e0 ff ff       	call   25f0 <printf@plt>
    45a4:	48 8d 3d d3 83 00 00 	lea    rdi,[rip+0x83d3]        # c97e <_IO_stdin_used+0x97e>
    45ab:	b8 00 00 00 00       	mov    eax,0x0
    45b0:	e8 3b e0 ff ff       	call   25f0 <printf@plt>
    45b5:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    45b9:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    45bd:	c0 e8 04             	shr    al,0x4
    45c0:	83 e0 01             	and    eax,0x1
    45c3:	0f b6 c0             	movzx  eax,al
    45c6:	89 c7                	mov    edi,eax
    45c8:	e8 b3 e1 ff ff       	call   2780 <ntohs@plt>
    45cd:	66 85 c0             	test   ax,ax
    45d0:	74 5c                	je     462e <ip4_tcp_decode+0x213>
    45d2:	0f b6 05 80 37 10 00 	movzx  eax,BYTE PTR [rip+0x103780]        # 107d59 <packet_print>
    45d9:	84 c0                	test   al,al
    45db:	74 18                	je     45f5 <ip4_tcp_decode+0x1da>
    45dd:	48 8d 35 a1 83 00 00 	lea    rsi,[rip+0x83a1]        # c985 <_IO_stdin_used+0x985>
    45e4:	48 8d 3d a0 83 00 00 	lea    rdi,[rip+0x83a0]        # c98b <_IO_stdin_used+0x98b>
    45eb:	b8 00 00 00 00       	mov    eax,0x0
    45f0:	e8 fb df ff ff       	call   25f0 <printf@plt>
    45f5:	c6 45 b0 01          	mov    BYTE PTR [rbp-0x50],0x1
    45f9:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    45fd:	48 8d 50 68          	lea    rdx,[rax+0x68]
    4601:	48 89 d0             	mov    rax,rdx
    4604:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    460b:	48 89 c6             	mov    rsi,rax
    460e:	b8 00 00 00 00       	mov    eax,0x0
    4613:	48 89 f7             	mov    rdi,rsi
    4616:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    4618:	48 89 c8             	mov    rax,rcx
    461b:	48 f7 d0             	not    rax
    461e:	48 83 e8 01          	sub    rax,0x1
    4622:	48 01 d0             	add    rax,rdx
    4625:	66 c7 00 41 00       	mov    WORD PTR [rax],0x41
    462a:	83 45 b4 01          	add    DWORD PTR [rbp-0x4c],0x1
    462e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4632:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4636:	83 e0 01             	and    eax,0x1
    4639:	0f b6 c0             	movzx  eax,al
    463c:	89 c7                	mov    edi,eax
    463e:	e8 3d e1 ff ff       	call   2780 <ntohs@plt>
    4643:	66 85 c0             	test   ax,ax
    4646:	74 5c                	je     46a4 <ip4_tcp_decode+0x289>
    4648:	0f b6 05 0a 37 10 00 	movzx  eax,BYTE PTR [rip+0x10370a]        # 107d59 <packet_print>
    464f:	84 c0                	test   al,al
    4651:	74 18                	je     466b <ip4_tcp_decode+0x250>
    4653:	48 8d 35 39 83 00 00 	lea    rsi,[rip+0x8339]        # c993 <_IO_stdin_used+0x993>
    465a:	48 8d 3d 38 83 00 00 	lea    rdi,[rip+0x8338]        # c999 <_IO_stdin_used+0x999>
    4661:	b8 00 00 00 00       	mov    eax,0x0
    4666:	e8 85 df ff ff       	call   25f0 <printf@plt>
    466b:	c6 45 b2 01          	mov    BYTE PTR [rbp-0x4e],0x1
    466f:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4673:	48 8d 50 68          	lea    rdx,[rax+0x68]
    4677:	48 89 d0             	mov    rax,rdx
    467a:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    4681:	48 89 c6             	mov    rsi,rax
    4684:	b8 00 00 00 00       	mov    eax,0x0
    4689:	48 89 f7             	mov    rdi,rsi
    468c:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    468e:	48 89 c8             	mov    rax,rcx
    4691:	48 f7 d0             	not    rax
    4694:	48 83 e8 01          	sub    rax,0x1
    4698:	48 01 d0             	add    rax,rdx
    469b:	66 c7 00 46 00       	mov    WORD PTR [rax],0x46
    46a0:	83 45 b4 01          	add    DWORD PTR [rbp-0x4c],0x1
    46a4:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    46a8:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    46ac:	c0 e8 03             	shr    al,0x3
    46af:	83 e0 01             	and    eax,0x1
    46b2:	0f b6 c0             	movzx  eax,al
    46b5:	89 c7                	mov    edi,eax
    46b7:	e8 c4 e0 ff ff       	call   2780 <ntohs@plt>
    46bc:	66 85 c0             	test   ax,ax
    46bf:	74 5c                	je     471d <ip4_tcp_decode+0x302>
    46c1:	0f b6 05 91 36 10 00 	movzx  eax,BYTE PTR [rip+0x103691]        # 107d59 <packet_print>
    46c8:	84 c0                	test   al,al
    46ca:	74 18                	je     46e4 <ip4_tcp_decode+0x2c9>
    46cc:	48 8d 35 ce 82 00 00 	lea    rsi,[rip+0x82ce]        # c9a1 <_IO_stdin_used+0x9a1>
    46d3:	48 8d 3d cd 82 00 00 	lea    rdi,[rip+0x82cd]        # c9a7 <_IO_stdin_used+0x9a7>
    46da:	b8 00 00 00 00       	mov    eax,0x0
    46df:	e8 0c df ff ff       	call   25f0 <printf@plt>
    46e4:	83 45 b4 01          	add    DWORD PTR [rbp-0x4c],0x1
    46e8:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    46ec:	48 8d 50 68          	lea    rdx,[rax+0x68]
    46f0:	48 89 d0             	mov    rax,rdx
    46f3:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    46fa:	48 89 c6             	mov    rsi,rax
    46fd:	b8 00 00 00 00       	mov    eax,0x0
    4702:	48 89 f7             	mov    rdi,rsi
    4705:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    4707:	48 89 c8             	mov    rax,rcx
    470a:	48 f7 d0             	not    rax
    470d:	48 83 e8 01          	sub    rax,0x1
    4711:	48 01 d0             	add    rax,rdx
    4714:	66 c7 00 50 00       	mov    WORD PTR [rax],0x50
    4719:	c6 45 b3 01          	mov    BYTE PTR [rbp-0x4d],0x1
    471d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4721:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4725:	c0 e8 02             	shr    al,0x2
    4728:	83 e0 01             	and    eax,0x1
    472b:	0f b6 c0             	movzx  eax,al
    472e:	89 c7                	mov    edi,eax
    4730:	e8 4b e0 ff ff       	call   2780 <ntohs@plt>
    4735:	66 85 c0             	test   ax,ax
    4738:	74 5c                	je     4796 <ip4_tcp_decode+0x37b>
    473a:	0f b6 05 18 36 10 00 	movzx  eax,BYTE PTR [rip+0x103618]        # 107d59 <packet_print>
    4741:	84 c0                	test   al,al
    4743:	74 18                	je     475d <ip4_tcp_decode+0x342>
    4745:	48 8d 35 63 82 00 00 	lea    rsi,[rip+0x8263]        # c9af <_IO_stdin_used+0x9af>
    474c:	48 8d 3d 62 82 00 00 	lea    rdi,[rip+0x8262]        # c9b5 <_IO_stdin_used+0x9b5>
    4753:	b8 00 00 00 00       	mov    eax,0x0
    4758:	e8 93 de ff ff       	call   25f0 <printf@plt>
    475d:	c6 45 af 01          	mov    BYTE PTR [rbp-0x51],0x1
    4761:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4765:	48 8d 50 68          	lea    rdx,[rax+0x68]
    4769:	48 89 d0             	mov    rax,rdx
    476c:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    4773:	48 89 c6             	mov    rsi,rax
    4776:	b8 00 00 00 00       	mov    eax,0x0
    477b:	48 89 f7             	mov    rdi,rsi
    477e:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    4780:	48 89 c8             	mov    rax,rcx
    4783:	48 f7 d0             	not    rax
    4786:	48 83 e8 01          	sub    rax,0x1
    478a:	48 01 d0             	add    rax,rdx
    478d:	66 c7 00 52 00       	mov    WORD PTR [rax],0x52
    4792:	83 45 b4 01          	add    DWORD PTR [rbp-0x4c],0x1
    4796:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    479a:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    479e:	d0 e8                	shr    al,1
    47a0:	83 e0 01             	and    eax,0x1
    47a3:	0f b6 c0             	movzx  eax,al
    47a6:	89 c7                	mov    edi,eax
    47a8:	e8 d3 df ff ff       	call   2780 <ntohs@plt>
    47ad:	66 85 c0             	test   ax,ax
    47b0:	74 5c                	je     480e <ip4_tcp_decode+0x3f3>
    47b2:	0f b6 05 a0 35 10 00 	movzx  eax,BYTE PTR [rip+0x1035a0]        # 107d59 <packet_print>
    47b9:	84 c0                	test   al,al
    47bb:	74 18                	je     47d5 <ip4_tcp_decode+0x3ba>
    47bd:	48 8d 35 f9 81 00 00 	lea    rsi,[rip+0x81f9]        # c9bd <_IO_stdin_used+0x9bd>
    47c4:	48 8d 3d f8 81 00 00 	lea    rdi,[rip+0x81f8]        # c9c3 <_IO_stdin_used+0x9c3>
    47cb:	b8 00 00 00 00       	mov    eax,0x0
    47d0:	e8 1b de ff ff       	call   25f0 <printf@plt>
    47d5:	c6 45 b1 01          	mov    BYTE PTR [rbp-0x4f],0x1
    47d9:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    47dd:	48 8d 50 68          	lea    rdx,[rax+0x68]
    47e1:	48 89 d0             	mov    rax,rdx
    47e4:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    47eb:	48 89 c6             	mov    rsi,rax
    47ee:	b8 00 00 00 00       	mov    eax,0x0
    47f3:	48 89 f7             	mov    rdi,rsi
    47f6:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    47f8:	48 89 c8             	mov    rax,rcx
    47fb:	48 f7 d0             	not    rax
    47fe:	48 83 e8 01          	sub    rax,0x1
    4802:	48 01 d0             	add    rax,rdx
    4805:	66 c7 00 53 00       	mov    WORD PTR [rax],0x53
    480a:	83 45 b4 01          	add    DWORD PTR [rbp-0x4c],0x1
    480e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4812:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4816:	c0 e8 05             	shr    al,0x5
    4819:	83 e0 01             	and    eax,0x1
    481c:	0f b6 c0             	movzx  eax,al
    481f:	89 c7                	mov    edi,eax
    4821:	e8 5a df ff ff       	call   2780 <ntohs@plt>
    4826:	66 85 c0             	test   ax,ax
    4829:	74 58                	je     4883 <ip4_tcp_decode+0x468>
    482b:	0f b6 05 27 35 10 00 	movzx  eax,BYTE PTR [rip+0x103527]        # 107d59 <packet_print>
    4832:	84 c0                	test   al,al
    4834:	74 18                	je     484e <ip4_tcp_decode+0x433>
    4836:	48 8d 35 8e 81 00 00 	lea    rsi,[rip+0x818e]        # c9cb <_IO_stdin_used+0x9cb>
    483d:	48 8d 3d 8d 81 00 00 	lea    rdi,[rip+0x818d]        # c9d1 <_IO_stdin_used+0x9d1>
    4844:	b8 00 00 00 00       	mov    eax,0x0
    4849:	e8 a2 dd ff ff       	call   25f0 <printf@plt>
    484e:	83 45 b4 01          	add    DWORD PTR [rbp-0x4c],0x1
    4852:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4856:	48 8d 50 68          	lea    rdx,[rax+0x68]
    485a:	48 89 d0             	mov    rax,rdx
    485d:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    4864:	48 89 c6             	mov    rsi,rax
    4867:	b8 00 00 00 00       	mov    eax,0x0
    486c:	48 89 f7             	mov    rdi,rsi
    486f:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    4871:	48 89 c8             	mov    rax,rcx
    4874:	48 f7 d0             	not    rax
    4877:	48 83 e8 01          	sub    rax,0x1
    487b:	48 01 d0             	add    rax,rdx
    487e:	66 c7 00 55 00       	mov    WORD PTR [rax],0x55
    4883:	0f b6 05 cf 34 10 00 	movzx  eax,BYTE PTR [rip+0x1034cf]        # 107d59 <packet_print>
    488a:	84 c0                	test   al,al
    488c:	74 3c                	je     48ca <ip4_tcp_decode+0x4af>
    488e:	48 8d 35 cb 80 00 00 	lea    rsi,[rip+0x80cb]        # c960 <_IO_stdin_used+0x960>
    4895:	48 8d 3d ca 80 00 00 	lea    rdi,[rip+0x80ca]        # c966 <_IO_stdin_used+0x966>
    489c:	b8 00 00 00 00       	mov    eax,0x0
    48a1:	e8 4a dd ff ff       	call   25f0 <printf@plt>
    48a6:	48 8d 3d 2c 81 00 00 	lea    rdi,[rip+0x812c]        # c9d9 <_IO_stdin_used+0x9d9>
    48ad:	e8 6e dc ff ff       	call   2520 <puts@plt>
    48b2:	48 8d 35 22 81 00 00 	lea    rsi,[rip+0x8122]        # c9db <_IO_stdin_used+0x9db>
    48b9:	48 8d 3d a6 80 00 00 	lea    rdi,[rip+0x80a6]        # c966 <_IO_stdin_used+0x966>
    48c0:	b8 00 00 00 00       	mov    eax,0x0
    48c5:	e8 26 dd ff ff       	call   25f0 <printf@plt>
    48ca:	83 7d b4 03          	cmp    DWORD PTR [rbp-0x4c],0x3
    48ce:	7f 06                	jg     48d6 <ip4_tcp_decode+0x4bb>
    48d0:	83 7d b4 00          	cmp    DWORD PTR [rbp-0x4c],0x0
    48d4:	75 41                	jne    4917 <ip4_tcp_decode+0x4fc>
    48d6:	8b 7d b8             	mov    edi,DWORD PTR [rbp-0x48]
    48d9:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
    48dd:	8b 55 bc             	mov    edx,DWORD PTR [rbp-0x44]
    48e0:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    48e4:	48 8d 0d f0 80 00 00 	lea    rcx,[rip+0x80f0]        # c9db <_IO_stdin_used+0x9db>
    48eb:	51                   	push   rcx
    48ec:	8b 4d b4             	mov    ecx,DWORD PTR [rbp-0x4c]
    48ef:	51                   	push   rcx
    48f0:	41 89 f9             	mov    r9d,edi
    48f3:	49 89 f0             	mov    r8,rsi
    48f6:	89 d1                	mov    ecx,edx
    48f8:	48 89 c2             	mov    rdx,rax
    48fb:	48 8d 35 ad 80 00 00 	lea    rsi,[rip+0x80ad]        # c9af <_IO_stdin_used+0x9af>
    4902:	48 8d 3d d7 80 00 00 	lea    rdi,[rip+0x80d7]        # c9e0 <_IO_stdin_used+0x9e0>
    4909:	b8 00 00 00 00       	mov    eax,0x0
    490e:	e8 dd dc ff ff       	call   25f0 <printf@plt>
    4913:	48 83 c4 10          	add    rsp,0x10
    4917:	0f b6 05 33 34 10 00 	movzx  eax,BYTE PTR [rip+0x103433]        # 107d51 <use_spi>
    491e:	84 c0                	test   al,al
    4920:	0f 84 8c 00 00 00    	je     49b2 <ip4_tcp_decode+0x597>
    4926:	80 7d b3 00          	cmp    BYTE PTR [rbp-0x4d],0x0
    492a:	74 1a                	je     4946 <ip4_tcp_decode+0x52b>
    492c:	80 7d b0 00          	cmp    BYTE PTR [rbp-0x50],0x0
    4930:	74 14                	je     4946 <ip4_tcp_decode+0x52b>
    4932:	83 7d b4 02          	cmp    DWORD PTR [rbp-0x4c],0x2
    4936:	75 0e                	jne    4946 <ip4_tcp_decode+0x52b>
    4938:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    493c:	48 89 c7             	mov    rdi,rax
    493f:	e8 f8 48 00 00       	call   923c <handle_data_pkt>
    4944:	eb 6c                	jmp    49b2 <ip4_tcp_decode+0x597>
    4946:	80 7d b2 00          	cmp    BYTE PTR [rbp-0x4e],0x0
    494a:	74 14                	je     4960 <ip4_tcp_decode+0x545>
    494c:	80 7d b0 00          	cmp    BYTE PTR [rbp-0x50],0x0
    4950:	74 0e                	je     4960 <ip4_tcp_decode+0x545>
    4952:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4956:	48 89 c7             	mov    rdi,rax
    4959:	e8 cb 47 00 00       	call   9129 <polite_end>
    495e:	eb 52                	jmp    49b2 <ip4_tcp_decode+0x597>
    4960:	80 7d b1 00          	cmp    BYTE PTR [rbp-0x4f],0x0
    4964:	74 14                	je     497a <ip4_tcp_decode+0x55f>
    4966:	83 7d b4 01          	cmp    DWORD PTR [rbp-0x4c],0x1
    496a:	75 0e                	jne    497a <ip4_tcp_decode+0x55f>
    496c:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4970:	48 89 c7             	mov    rdi,rax
    4973:	e8 0e 43 00 00       	call   8c86 <add_new_conversation>
    4978:	eb 38                	jmp    49b2 <ip4_tcp_decode+0x597>
    497a:	80 7d b1 00          	cmp    BYTE PTR [rbp-0x4f],0x0
    497e:	74 1a                	je     499a <ip4_tcp_decode+0x57f>
    4980:	80 7d b0 00          	cmp    BYTE PTR [rbp-0x50],0x0
    4984:	74 14                	je     499a <ip4_tcp_decode+0x57f>
    4986:	83 7d b4 02          	cmp    DWORD PTR [rbp-0x4c],0x2
    498a:	75 0e                	jne    499a <ip4_tcp_decode+0x57f>
    498c:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4990:	48 89 c7             	mov    rdi,rax
    4993:	e8 27 45 00 00       	call   8ebf <spi_ud_thw>
    4998:	eb 18                	jmp    49b2 <ip4_tcp_decode+0x597>
    499a:	80 7d b0 00          	cmp    BYTE PTR [rbp-0x50],0x0
    499e:	74 12                	je     49b2 <ip4_tcp_decode+0x597>
    49a0:	83 7d b4 01          	cmp    DWORD PTR [rbp-0x4c],0x1
    49a4:	75 0c                	jne    49b2 <ip4_tcp_decode+0x597>
    49a6:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    49aa:	48 89 c7             	mov    rdi,rax
    49ad:	e8 d6 45 00 00       	call   8f88 <update_table>
    49b2:	80 7d b3 00          	cmp    BYTE PTR [rbp-0x4d],0x0
    49b6:	74 17                	je     49cf <ip4_tcp_decode+0x5b4>
    49b8:	80 7d b0 00          	cmp    BYTE PTR [rbp-0x50],0x0
    49bc:	74 11                	je     49cf <ip4_tcp_decode+0x5b4>
    49be:	83 7d b4 02          	cmp    DWORD PTR [rbp-0x4c],0x2
    49c2:	75 0b                	jne    49cf <ip4_tcp_decode+0x5b4>
    49c4:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    49c8:	c7 40 70 01 00 00 00 	mov    DWORD PTR [rax+0x70],0x1
    49cf:	80 7d af 00          	cmp    BYTE PTR [rbp-0x51],0x0
    49d3:	0f 84 95 01 00 00    	je     4b6e <ip4_tcp_decode+0x753>
    49d9:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    49dd:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    49e1:	48 89 c7             	mov    rdi,rax
    49e4:	e8 3d 30 00 00       	call   7a26 <member_exists>
    49e9:	89 45 c0             	mov    DWORD PTR [rbp-0x40],eax
    49ec:	83 7d c0 ff          	cmp    DWORD PTR [rbp-0x40],0xffffffff
    49f0:	0f 84 de 00 00 00    	je     4ad4 <ip4_tcp_decode+0x6b9>
    49f6:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    49f9:	48 63 d0             	movsxd rdx,eax
    49fc:	48 89 d0             	mov    rax,rdx
    49ff:	48 c1 e0 02          	shl    rax,0x2
    4a03:	48 01 d0             	add    rax,rdx
    4a06:	48 c1 e0 03          	shl    rax,0x3
    4a0a:	48 01 d0             	add    rax,rdx
    4a0d:	48 c1 e0 04          	shl    rax,0x4
    4a11:	48 8d 15 88 e6 0e 00 	lea    rdx,[rip+0xee688]        # f30a0 <watchlist>
    4a18:	48 01 d0             	add    rax,rdx
    4a1b:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    4a1f:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4a23:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4a27:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    4a2b:	48 83 c2 08          	add    rdx,0x8
    4a2f:	48 89 c6             	mov    rsi,rax
    4a32:	48 89 d7             	mov    rdi,rdx
    4a35:	e8 b6 da ff ff       	call   24f0 <strcpy@plt>
    4a3a:	bf 00 00 00 00       	mov    edi,0x0
    4a3f:	e8 bc dc ff ff       	call   2700 <time@plt>
    4a44:	48 89 c2             	mov    rdx,rax
    4a47:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4a4b:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    4a51:	8d 70 01             	lea    esi,[rax+0x1]
    4a54:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    4a58:	89 b1 48 01 00 00    	mov    DWORD PTR [rcx+0x148],esi
    4a5e:	48 89 d1             	mov    rcx,rdx
    4a61:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    4a65:	89 c0                	mov    eax,eax
    4a67:	48 83 c0 28          	add    rax,0x28
    4a6b:	48 89 4c c2 10       	mov    QWORD PTR [rdx+rax*8+0x10],rcx
    4a70:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4a74:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    4a7a:	83 f8 1d             	cmp    eax,0x1d
    4a7d:	0f 86 eb 00 00 00    	jbe    4b6e <ip4_tcp_decode+0x753>
    4a83:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4a87:	c7 80 48 01 00 00 1e 	mov    DWORD PTR [rax+0x148],0x1e
    4a8e:	00 00 00 
    4a91:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4a95:	48 89 c7             	mov    rdi,rax
    4a98:	e8 47 2b 00 00       	call   75e4 <tcp_rst_portscan_detect>
    4a9d:	84 c0                	test   al,al
    4a9f:	0f 84 c9 00 00 00    	je     4b6e <ip4_tcp_decode+0x753>
    4aa5:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4aa9:	c7 80 48 01 00 00 00 	mov    DWORD PTR [rax+0x148],0x0
    4ab0:	00 00 00 
    4ab3:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4ab7:	48 05 50 01 00 00    	add    rax,0x150
    4abd:	ba f0 00 00 00       	mov    edx,0xf0
    4ac2:	be 00 00 00 00       	mov    esi,0x0
    4ac7:	48 89 c7             	mov    rdi,rax
    4aca:	e8 61 db ff ff       	call   2630 <memset@plt>
    4acf:	e9 9a 00 00 00       	jmp    4b6e <ip4_tcp_decode+0x753>
    4ad4:	8b 05 3e c5 00 00    	mov    eax,DWORD PTR [rip+0xc53e]        # 11018 <watchlist_num>
    4ada:	83 c0 01             	add    eax,0x1
    4add:	89 05 35 c5 00 00    	mov    DWORD PTR [rip+0xc535],eax        # 11018 <watchlist_num>
    4ae3:	8b 05 2f c5 00 00    	mov    eax,DWORD PTR [rip+0xc52f]        # 11018 <watchlist_num>
    4ae9:	48 63 d0             	movsxd rdx,eax
    4aec:	48 89 d0             	mov    rax,rdx
    4aef:	48 c1 e0 02          	shl    rax,0x2
    4af3:	48 01 d0             	add    rax,rdx
    4af6:	48 c1 e0 03          	shl    rax,0x3
    4afa:	48 01 d0             	add    rax,rdx
    4afd:	48 c1 e0 04          	shl    rax,0x4
    4b01:	48 8d 15 98 e5 0e 00 	lea    rdx,[rip+0xee598]        # f30a0 <watchlist>
    4b08:	48 01 d0             	add    rax,rdx
    4b0b:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    4b0f:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4b13:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4b17:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    4b1b:	48 83 c2 08          	add    rdx,0x8
    4b1f:	48 89 c6             	mov    rsi,rax
    4b22:	48 89 d7             	mov    rdi,rdx
    4b25:	e8 c6 d9 ff ff       	call   24f0 <strcpy@plt>
    4b2a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b2e:	c7 80 48 01 00 00 00 	mov    DWORD PTR [rax+0x148],0x0
    4b35:	00 00 00 
    4b38:	bf 00 00 00 00       	mov    edi,0x0
    4b3d:	e8 be db ff ff       	call   2700 <time@plt>
    4b42:	48 89 c2             	mov    rdx,rax
    4b45:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b49:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    4b4f:	8d 70 01             	lea    esi,[rax+0x1]
    4b52:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    4b56:	89 b1 48 01 00 00    	mov    DWORD PTR [rcx+0x148],esi
    4b5c:	48 89 d1             	mov    rcx,rdx
    4b5f:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    4b63:	89 c0                	mov    eax,eax
    4b65:	48 83 c0 28          	add    rax,0x28
    4b69:	48 89 4c c2 10       	mov    QWORD PTR [rdx+rax*8+0x10],rcx
    4b6e:	8b 05 94 31 10 00    	mov    eax,DWORD PTR [rip+0x103194]        # 107d08 <strict_nmap_host_alive_check>
    4b74:	83 f8 01             	cmp    eax,0x1
    4b77:	0f 85 f6 00 00 00    	jne    4c73 <ip4_tcp_decode+0x858>
    4b7d:	80 7d b0 00          	cmp    BYTE PTR [rbp-0x50],0x0
    4b81:	74 0c                	je     4b8f <ip4_tcp_decode+0x774>
    4b83:	83 7d b8 50          	cmp    DWORD PTR [rbp-0x48],0x50
    4b87:	74 26                	je     4baf <ip4_tcp_decode+0x794>
    4b89:	83 7d bc 50          	cmp    DWORD PTR [rbp-0x44],0x50
    4b8d:	74 20                	je     4baf <ip4_tcp_decode+0x794>
    4b8f:	80 7d b1 00          	cmp    BYTE PTR [rbp-0x4f],0x0
    4b93:	0f 84 da 00 00 00    	je     4c73 <ip4_tcp_decode+0x858>
    4b99:	81 7d b8 bb 01 00 00 	cmp    DWORD PTR [rbp-0x48],0x1bb
    4ba0:	74 0d                	je     4baf <ip4_tcp_decode+0x794>
    4ba2:	81 7d bc bb 01 00 00 	cmp    DWORD PTR [rbp-0x44],0x1bb
    4ba9:	0f 85 c4 00 00 00    	jne    4c73 <ip4_tcp_decode+0x858>
    4baf:	8b 45 b8             	mov    eax,DWORD PTR [rbp-0x48]
    4bb2:	3b 45 bc             	cmp    eax,DWORD PTR [rbp-0x44]
    4bb5:	76 0a                	jbe    4bc1 <ip4_tcp_decode+0x7a6>
    4bb7:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4bbb:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    4bbf:	eb 08                	jmp    4bc9 <ip4_tcp_decode+0x7ae>
    4bc1:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4bc5:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    4bc9:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4bcd:	48 89 c7             	mov    rdi,rax
    4bd0:	e8 51 2e 00 00       	call   7a26 <member_exists>
    4bd5:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    4bd8:	83 7d c4 ff          	cmp    DWORD PTR [rbp-0x3c],0xffffffff
    4bdc:	0f 84 91 00 00 00    	je     4c73 <ip4_tcp_decode+0x858>
    4be2:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    4be5:	48 63 d0             	movsxd rdx,eax
    4be8:	48 89 d0             	mov    rax,rdx
    4beb:	48 c1 e0 02          	shl    rax,0x2
    4bef:	48 01 d0             	add    rax,rdx
    4bf2:	48 c1 e0 03          	shl    rax,0x3
    4bf6:	48 01 d0             	add    rax,rdx
    4bf9:	48 c1 e0 04          	shl    rax,0x4
    4bfd:	48 8d 15 9c e4 0e 00 	lea    rdx,[rip+0xee49c]        # f30a0 <watchlist>
    4c04:	48 01 d0             	add    rax,rdx
    4c07:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4c0b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4c0f:	8b 40 34             	mov    eax,DWORD PTR [rax+0x34]
    4c12:	85 c0                	test   eax,eax
    4c14:	75 2a                	jne    4c40 <ip4_tcp_decode+0x825>
    4c16:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4c1a:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4c1d:	83 f8 01             	cmp    eax,0x1
    4c20:	75 1e                	jne    4c40 <ip4_tcp_decode+0x825>
    4c22:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4c26:	c7 40 34 01 00 00 00 	mov    DWORD PTR [rax+0x34],0x1
    4c2d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4c31:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4c34:	8d 50 01             	lea    edx,[rax+0x1]
    4c37:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4c3b:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    4c3e:	eb 33                	jmp    4c73 <ip4_tcp_decode+0x858>
    4c40:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4c44:	8b 40 38             	mov    eax,DWORD PTR [rax+0x38]
    4c47:	85 c0                	test   eax,eax
    4c49:	75 28                	jne    4c73 <ip4_tcp_decode+0x858>
    4c4b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4c4f:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4c52:	83 f8 02             	cmp    eax,0x2
    4c55:	75 1c                	jne    4c73 <ip4_tcp_decode+0x858>
    4c57:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4c5b:	c7 40 38 01 00 00 00 	mov    DWORD PTR [rax+0x38],0x1
    4c62:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4c66:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4c69:	8d 50 01             	lea    edx,[rax+0x1]
    4c6c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4c70:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    4c73:	0f b6 05 df 30 10 00 	movzx  eax,BYTE PTR [rip+0x1030df]        # 107d59 <packet_print>
    4c7a:	84 c0                	test   al,al
    4c7c:	74 3a                	je     4cb8 <ip4_tcp_decode+0x89d>
    4c7e:	80 7d b3 00          	cmp    BYTE PTR [rbp-0x4d],0x0
    4c82:	74 34                	je     4cb8 <ip4_tcp_decode+0x89d>
    4c84:	80 7d b0 00          	cmp    BYTE PTR [rbp-0x50],0x0
    4c88:	74 2e                	je     4cb8 <ip4_tcp_decode+0x89d>
    4c8a:	0f b6 45 b2          	movzx  eax,BYTE PTR [rbp-0x4e]
    4c8e:	83 f0 01             	xor    eax,0x1
    4c91:	84 c0                	test   al,al
    4c93:	74 23                	je     4cb8 <ip4_tcp_decode+0x89d>
    4c95:	83 7d b8 50          	cmp    DWORD PTR [rbp-0x48],0x50
    4c99:	74 06                	je     4ca1 <ip4_tcp_decode+0x886>
    4c9b:	83 7d bc 50          	cmp    DWORD PTR [rbp-0x44],0x50
    4c9f:	75 17                	jne    4cb8 <ip4_tcp_decode+0x89d>
    4ca1:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    4ca5:	48 8d 50 42          	lea    rdx,[rax+0x42]
    4ca9:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4cad:	48 89 c6             	mov    rsi,rax
    4cb0:	48 89 d7             	mov    rdi,rdx
    4cb3:	e8 e6 39 00 00       	call   869e <http_disect>
    4cb8:	83 7d b8 15          	cmp    DWORD PTR [rbp-0x48],0x15
    4cbc:	74 06                	je     4cc4 <ip4_tcp_decode+0x8a9>
    4cbe:	83 7d bc 15          	cmp    DWORD PTR [rbp-0x44],0x15
    4cc2:	75 2d                	jne    4cf1 <ip4_tcp_decode+0x8d6>
    4cc4:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4cc8:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    4ccc:	c0 e8 04             	shr    al,0x4
    4ccf:	0f b6 c0             	movzx  eax,al
    4cd2:	c1 e0 02             	shl    eax,0x2
    4cd5:	48 98                	cdqe   
    4cd7:	48 8d 50 22          	lea    rdx,[rax+0x22]
    4cdb:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    4cdf:	48 01 c2             	add    rdx,rax
    4ce2:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4ce6:	48 89 c6             	mov    rsi,rax
    4ce9:	48 89 d7             	mov    rdi,rdx
    4cec:	e8 b0 3b 00 00       	call   88a1 <ftp_disect>
    4cf1:	81 7d b8 bb 01 00 00 	cmp    DWORD PTR [rbp-0x48],0x1bb
    4cf8:	74 09                	je     4d03 <ip4_tcp_decode+0x8e8>
    4cfa:	81 7d bc bb 01 00 00 	cmp    DWORD PTR [rbp-0x44],0x1bb
    4d01:	75 26                	jne    4d29 <ip4_tcp_decode+0x90e>
    4d03:	80 7d b3 00          	cmp    BYTE PTR [rbp-0x4d],0x0
    4d07:	74 20                	je     4d29 <ip4_tcp_decode+0x90e>
    4d09:	80 7d b0 00          	cmp    BYTE PTR [rbp-0x50],0x0
    4d0d:	74 1a                	je     4d29 <ip4_tcp_decode+0x90e>
    4d0f:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4d13:	48 8b 00             	mov    rax,QWORD PTR [rax]
    4d16:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
    4d1a:	48 8b 4d 90          	mov    rcx,QWORD PTR [rbp-0x70]
    4d1e:	48 89 ce             	mov    rsi,rcx
    4d21:	48 89 c7             	mov    rdi,rax
    4d24:	e8 35 33 00 00       	call   805e <tls_decode>
    4d29:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    4d2d:	8b 50 14             	mov    edx,DWORD PTR [rax+0x14]
    4d30:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4d34:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    4d38:	c0 e8 04             	shr    al,0x4
    4d3b:	0f b6 c0             	movzx  eax,al
    4d3e:	c1 e0 02             	shl    eax,0x2
    4d41:	29 c2                	sub    edx,eax
    4d43:	89 d0                	mov    eax,edx
    4d45:	8d 50 de             	lea    edx,[rax-0x22]
    4d48:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4d4c:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    4d4f:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4d53:	48 89 c7             	mov    rdi,rax
    4d56:	e8 97 17 00 00       	call   64f2 <rulemgr>
    4d5b:	90                   	nop
    4d5c:	c9                   	leave  
    4d5d:	c3                   	ret    

0000000000004d5e <ip4_udp_decode>:
    4d5e:	f3 0f 1e fa          	endbr64 
    4d62:	55                   	push   rbp
    4d63:	48 89 e5             	mov    rbp,rsp
    4d66:	48 83 ec 30          	sub    rsp,0x30
    4d6a:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    4d6e:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    4d72:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    4d76:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4d7a:	48 83 c0 22          	add    rax,0x22
    4d7e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4d82:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4d86:	48 8d 50 2a          	lea    rdx,[rax+0x2a]
    4d8a:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d8e:	48 89 10             	mov    QWORD PTR [rax],rdx
    4d91:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d95:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    4d99:	ba 5d 00 00 00       	mov    edx,0x5d
    4d9e:	be 01 00 00 00       	mov    esi,0x1
    4da3:	48 89 c7             	mov    rdi,rax
    4da6:	e8 07 02 00 00       	call   4fb2 <add_ip_addr_or_inc_counter>
    4dab:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4daf:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4db3:	ba 5d 00 00 00       	mov    edx,0x5d
    4db8:	be 00 00 00 00       	mov    esi,0x0
    4dbd:	48 89 c7             	mov    rdi,rax
    4dc0:	e8 ed 01 00 00       	call   4fb2 <add_ip_addr_or_inc_counter>
    4dc5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4dc9:	0f b7 00             	movzx  eax,WORD PTR [rax]
    4dcc:	0f b7 c0             	movzx  eax,ax
    4dcf:	89 c7                	mov    edi,eax
    4dd1:	e8 aa d9 ff ff       	call   2780 <ntohs@plt>
    4dd6:	0f b7 c0             	movzx  eax,ax
    4dd9:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
    4ddc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4de0:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    4de4:	0f b7 c0             	movzx  eax,ax
    4de7:	89 c7                	mov    edi,eax
    4de9:	e8 92 d9 ff ff       	call   2780 <ntohs@plt>
    4dee:	0f b7 c0             	movzx  eax,ax
    4df1:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    4df4:	0f b6 05 5e 2f 10 00 	movzx  eax,BYTE PTR [rip+0x102f5e]        # 107d59 <packet_print>
    4dfb:	84 c0                	test   al,al
    4dfd:	74 5d                	je     4e5c <ip4_udp_decode+0xfe>
    4dff:	48 8d 35 1a 7c 00 00 	lea    rsi,[rip+0x7c1a]        # ca20 <_IO_stdin_used+0xa20>
    4e06:	48 8d 3d 19 7c 00 00 	lea    rdi,[rip+0x7c19]        # ca26 <_IO_stdin_used+0xa26>
    4e0d:	b8 00 00 00 00       	mov    eax,0x0
    4e12:	e8 d9 d7 ff ff       	call   25f0 <printf@plt>
    4e17:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e1b:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    4e1f:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e23:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    4e27:	8b 75 f4             	mov    esi,DWORD PTR [rbp-0xc]
    4e2a:	8b 55 f0             	mov    edx,DWORD PTR [rbp-0x10]
    4e2d:	41 89 f0             	mov    r8d,esi
    4e30:	48 89 c6             	mov    rsi,rax
    4e33:	48 8d 3d ef 7b 00 00 	lea    rdi,[rip+0x7bef]        # ca29 <_IO_stdin_used+0xa29>
    4e3a:	b8 00 00 00 00       	mov    eax,0x0
    4e3f:	e8 ac d7 ff ff       	call   25f0 <printf@plt>
    4e44:	48 8d 35 f7 7b 00 00 	lea    rsi,[rip+0x7bf7]        # ca42 <_IO_stdin_used+0xa42>
    4e4b:	48 8d 3d d4 7b 00 00 	lea    rdi,[rip+0x7bd4]        # ca26 <_IO_stdin_used+0xa26>
    4e52:	b8 00 00 00 00       	mov    eax,0x0
    4e57:	e8 94 d7 ff ff       	call   25f0 <printf@plt>
    4e5c:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e60:	8b 55 f0             	mov    edx,DWORD PTR [rbp-0x10]
    4e63:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    4e66:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e6a:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
    4e6d:	89 50 28             	mov    DWORD PTR [rax+0x28],edx
    4e70:	83 7d f0 35          	cmp    DWORD PTR [rbp-0x10],0x35
    4e74:	74 06                	je     4e7c <ip4_udp_decode+0x11e>
    4e76:	83 7d f4 35          	cmp    DWORD PTR [rbp-0xc],0x35
    4e7a:	75 17                	jne    4e93 <ip4_udp_decode+0x135>
    4e7c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4e80:	48 8d 50 2b          	lea    rdx,[rax+0x2b]
    4e84:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e88:	48 89 c6             	mov    rsi,rax
    4e8b:	48 89 d7             	mov    rdi,rdx
    4e8e:	e8 bd 38 00 00       	call   8750 <dns_disect>
    4e93:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4e97:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    4e9a:	8d 50 d6             	lea    edx,[rax-0x2a]
    4e9d:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4ea1:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    4ea4:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4ea8:	48 89 c7             	mov    rdi,rax
    4eab:	e8 42 16 00 00       	call   64f2 <rulemgr>
    4eb0:	90                   	nop
    4eb1:	c9                   	leave  
    4eb2:	c3                   	ret    

0000000000004eb3 <ip4_igmp_decode>:
    4eb3:	f3 0f 1e fa          	endbr64 
    4eb7:	55                   	push   rbp
    4eb8:	48 89 e5             	mov    rbp,rsp
    4ebb:	48 83 ec 60          	sub    rsp,0x60
    4ebf:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    4ec3:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
    4ec7:	48 89 55 a8          	mov    QWORD PTR [rbp-0x58],rdx
    4ecb:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4ed2:	00 00 
    4ed4:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4ed8:	31 c0                	xor    eax,eax
    4eda:	0f b6 05 78 2e 10 00 	movzx  eax,BYTE PTR [rip+0x102e78]        # 107d59 <packet_print>
    4ee1:	84 c0                	test   al,al
    4ee3:	0f 84 b1 00 00 00    	je     4f9a <ip4_igmp_decode+0xe7>
    4ee9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4eed:	48 83 c0 26          	add    rax,0x26
    4ef1:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    4ef5:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    4ef9:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    4efd:	48 89 c6             	mov    rsi,rax
    4f00:	48 8d 3d 41 7b 00 00 	lea    rdi,[rip+0x7b41]        # ca48 <_IO_stdin_used+0xa48>
    4f07:	b8 00 00 00 00       	mov    eax,0x0
    4f0c:	e8 df d6 ff ff       	call   25f0 <printf@plt>
    4f11:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4f15:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4f18:	0f b6 c0             	movzx  eax,al
    4f1b:	83 f8 11             	cmp    eax,0x11
    4f1e:	74 07                	je     4f27 <ip4_igmp_decode+0x74>
    4f20:	83 f8 22             	cmp    eax,0x22
    4f23:	74 10                	je     4f35 <ip4_igmp_decode+0x82>
    4f25:	eb 54                	jmp    4f7b <ip4_igmp_decode+0xc8>
    4f27:	48 8d 3d 2f 7b 00 00 	lea    rdi,[rip+0x7b2f]        # ca5d <_IO_stdin_used+0xa5d>
    4f2e:	e8 ed d5 ff ff       	call   2520 <puts@plt>
    4f33:	eb 66                	jmp    4f9b <ip4_igmp_decode+0xe8>
    4f35:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4f39:	48 83 c0 26          	add    rax,0x26
    4f3d:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    4f41:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4f45:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    4f48:	89 c7                	mov    edi,eax
    4f4a:	e8 fb e1 ff ff       	call   314a <ipv4_ntoa>
    4f4f:	48 89 c2             	mov    rdx,rax
    4f52:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    4f56:	48 89 d6             	mov    rsi,rdx
    4f59:	48 89 c7             	mov    rdi,rax
    4f5c:	e8 8f d5 ff ff       	call   24f0 <strcpy@plt>
    4f61:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    4f65:	48 89 c6             	mov    rsi,rax
    4f68:	48 8d 3d 09 7b 00 00 	lea    rdi,[rip+0x7b09]        # ca78 <_IO_stdin_used+0xa78>
    4f6f:	b8 00 00 00 00       	mov    eax,0x0
    4f74:	e8 77 d6 ff ff       	call   25f0 <printf@plt>
    4f79:	eb 20                	jmp    4f9b <ip4_igmp_decode+0xe8>
    4f7b:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4f7f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4f82:	0f b6 c0             	movzx  eax,al
    4f85:	89 c6                	mov    esi,eax
    4f87:	48 8d 3d 20 7b 00 00 	lea    rdi,[rip+0x7b20]        # caae <_IO_stdin_used+0xaae>
    4f8e:	b8 00 00 00 00       	mov    eax,0x0
    4f93:	e8 58 d6 ff ff       	call   25f0 <printf@plt>
    4f98:	eb 01                	jmp    4f9b <ip4_igmp_decode+0xe8>
    4f9a:	90                   	nop
    4f9b:	90                   	nop
    4f9c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4fa0:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    4fa7:	00 00 
    4fa9:	74 05                	je     4fb0 <ip4_igmp_decode+0xfd>
    4fab:	e8 00 d6 ff ff       	call   25b0 <__stack_chk_fail@plt>
    4fb0:	c9                   	leave  
    4fb1:	c3                   	ret    

0000000000004fb2 <add_ip_addr_or_inc_counter>:
    4fb2:	f3 0f 1e fa          	endbr64 
    4fb6:	55                   	push   rbp
    4fb7:	48 89 e5             	mov    rbp,rsp
    4fba:	48 83 ec 60          	sub    rsp,0x60
    4fbe:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    4fc2:	89 f0                	mov    eax,esi
    4fc4:	89 55 a0             	mov    DWORD PTR [rbp-0x60],edx
    4fc7:	88 45 a4             	mov    BYTE PTR [rbp-0x5c],al
    4fca:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4fd1:	00 00 
    4fd3:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4fd7:	31 c0                	xor    eax,eax
    4fd9:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4fdd:	ba 08 00 00 00       	mov    edx,0x8
    4fe2:	be 00 00 00 00       	mov    esi,0x0
    4fe7:	48 89 c7             	mov    rdi,rax
    4fea:	e8 41 d6 ff ff       	call   2630 <memset@plt>
    4fef:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    4ff3:	ba 1c 00 00 00       	mov    edx,0x1c
    4ff8:	be 00 00 00 00       	mov    esi,0x0
    4ffd:	48 89 c7             	mov    rdi,rax
    5000:	e8 2b d6 ff ff       	call   2630 <memset@plt>
    5005:	48 8b 4d a8          	mov    rcx,QWORD PTR [rbp-0x58]
    5009:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    500d:	ba 18 00 00 00       	mov    edx,0x18
    5012:	48 89 ce             	mov    rsi,rcx
    5015:	48 89 c7             	mov    rdi,rax
    5018:	e8 b3 d4 ff ff       	call   24d0 <strncpy@plt>
    501d:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    5021:	ba 1c 00 00 00       	mov    edx,0x1c
    5026:	be 00 00 00 00       	mov    esi,0x0
    502b:	48 89 c7             	mov    rdi,rax
    502e:	e8 fd d5 ff ff       	call   2630 <memset@plt>
    5033:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    5037:	48 8d 55 c0          	lea    rdx,[rbp-0x40]
    503b:	48 83 c2 08          	add    rdx,0x8
    503f:	48 89 c6             	mov    rsi,rax
    5042:	48 89 d7             	mov    rdi,rdx
    5045:	e8 a6 d4 ff ff       	call   24f0 <strcpy@plt>
    504a:	0f b6 45 a4          	movzx  eax,BYTE PTR [rbp-0x5c]
    504e:	88 45 c0             	mov    BYTE PTR [rbp-0x40],al
    5051:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    5054:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    5057:	48 8d 55 c0          	lea    rdx,[rbp-0x40]
    505b:	48 8d 45 b8          	lea    rax,[rbp-0x48]
    505f:	48 89 d1             	mov    rcx,rdx
    5062:	48 8d 15 35 00 00 00 	lea    rdx,[rip+0x35]        # 509e <verify_ip_addr>
    5069:	be 00 00 00 00       	mov    esi,0x0
    506e:	48 89 c7             	mov    rdi,rax
    5071:	e8 3a d4 ff ff       	call   24b0 <pthread_create@plt>
    5076:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    507a:	be 00 00 00 00       	mov    esi,0x0
    507f:	48 89 c7             	mov    rdi,rax
    5082:	e8 59 d7 ff ff       	call   27e0 <pthread_join@plt>
    5087:	90                   	nop
    5088:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    508c:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    5093:	00 00 
    5095:	74 05                	je     509c <add_ip_addr_or_inc_counter+0xea>
    5097:	e8 14 d5 ff ff       	call   25b0 <__stack_chk_fail@plt>
    509c:	c9                   	leave  
    509d:	c3                   	ret    

000000000000509e <verify_ip_addr>:
    509e:	f3 0f 1e fa          	endbr64 
    50a2:	55                   	push   rbp
    50a3:	48 89 e5             	mov    rbp,rsp
    50a6:	48 83 ec 30          	sub    rsp,0x30
    50aa:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    50ae:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    50b2:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    50b6:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
    50bd:	e9 c9 00 00 00       	jmp    518b <verify_ip_addr+0xed>
    50c2:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    50c5:	48 63 d0             	movsxd rdx,eax
    50c8:	48 89 d0             	mov    rax,rdx
    50cb:	48 c1 e0 02          	shl    rax,0x2
    50cf:	48 01 d0             	add    rax,rdx
    50d2:	48 c1 e0 03          	shl    rax,0x3
    50d6:	48 01 d0             	add    rax,rdx
    50d9:	48 c1 e0 04          	shl    rax,0x4
    50dd:	48 8d 15 bc df 0e 00 	lea    rdx,[rip+0xedfbc]        # f30a0 <watchlist>
    50e4:	48 01 d0             	add    rax,rdx
    50e7:	48 8d 50 08          	lea    rdx,[rax+0x8]
    50eb:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    50ef:	48 83 c0 08          	add    rax,0x8
    50f3:	48 89 d6             	mov    rsi,rdx
    50f6:	48 89 c7             	mov    rdi,rax
    50f9:	e8 b2 d5 ff ff       	call   26b0 <strcmp@plt>
    50fe:	85 c0                	test   eax,eax
    5100:	0f 85 81 00 00 00    	jne    5187 <verify_ip_addr+0xe9>
    5106:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    5109:	48 63 d0             	movsxd rdx,eax
    510c:	48 89 d0             	mov    rax,rdx
    510f:	48 c1 e0 02          	shl    rax,0x2
    5113:	48 01 d0             	add    rax,rdx
    5116:	48 c1 e0 03          	shl    rax,0x3
    511a:	48 01 d0             	add    rax,rdx
    511d:	48 c1 e0 04          	shl    rax,0x4
    5121:	48 89 c2             	mov    rdx,rax
    5124:	48 8d 05 cd e1 0e 00 	lea    rax,[rip+0xee1cd]        # f32f8 <watchlist+0x258>
    512b:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    512e:	8d 48 01             	lea    ecx,[rax+0x1]
    5131:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    5134:	48 63 d0             	movsxd rdx,eax
    5137:	48 89 d0             	mov    rax,rdx
    513a:	48 c1 e0 02          	shl    rax,0x2
    513e:	48 01 d0             	add    rax,rdx
    5141:	48 c1 e0 03          	shl    rax,0x3
    5145:	48 01 d0             	add    rax,rdx
    5148:	48 c1 e0 04          	shl    rax,0x4
    514c:	48 89 c2             	mov    rdx,rax
    514f:	48 8d 05 a2 e1 0e 00 	lea    rax,[rip+0xee1a2]        # f32f8 <watchlist+0x258>
    5156:	89 0c 02             	mov    DWORD PTR [rdx+rax*1],ecx
    5159:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    515c:	48 63 d0             	movsxd rdx,eax
    515f:	48 89 d0             	mov    rax,rdx
    5162:	48 c1 e0 02          	shl    rax,0x2
    5166:	48 01 d0             	add    rax,rdx
    5169:	48 c1 e0 03          	shl    rax,0x3
    516d:	48 01 d0             	add    rax,rdx
    5170:	48 c1 e0 04          	shl    rax,0x4
    5174:	48 8d 15 25 df 0e 00 	lea    rdx,[rip+0xedf25]        # f30a0 <watchlist>
    517b:	48 01 d0             	add    rax,rdx
    517e:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    5182:	e9 f5 00 00 00       	jmp    527c <verify_ip_addr+0x1de>
    5187:	83 45 e4 01          	add    DWORD PTR [rbp-0x1c],0x1
    518b:	8b 05 87 be 00 00    	mov    eax,DWORD PTR [rip+0xbe87]        # 11018 <watchlist_num>
    5191:	39 45 e4             	cmp    DWORD PTR [rbp-0x1c],eax
    5194:	0f 8e 28 ff ff ff    	jle    50c2 <verify_ip_addr+0x24>
    519a:	bf 90 02 00 00       	mov    edi,0x290
    519f:	e8 9c d5 ff ff       	call   2740 <malloc@plt>
    51a4:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    51a8:	8b 05 6a be 00 00    	mov    eax,DWORD PTR [rip+0xbe6a]        # 11018 <watchlist_num>
    51ae:	83 c0 01             	add    eax,0x1
    51b1:	89 05 61 be 00 00    	mov    DWORD PTR [rip+0xbe61],eax        # 11018 <watchlist_num>
    51b7:	8b 05 5b be 00 00    	mov    eax,DWORD PTR [rip+0xbe5b]        # 11018 <watchlist_num>
    51bd:	48 63 d0             	movsxd rdx,eax
    51c0:	48 89 d0             	mov    rax,rdx
    51c3:	48 c1 e0 02          	shl    rax,0x2
    51c7:	48 01 d0             	add    rax,rdx
    51ca:	48 c1 e0 03          	shl    rax,0x3
    51ce:	48 01 d0             	add    rax,rdx
    51d1:	48 c1 e0 04          	shl    rax,0x4
    51d5:	48 89 c1             	mov    rcx,rax
    51d8:	48 8d 05 c1 de 0e 00 	lea    rax,[rip+0xedec1]        # f30a0 <watchlist>
    51df:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    51e3:	48 01 c8             	add    rax,rcx
    51e6:	48 89 d6             	mov    rsi,rdx
    51e9:	ba 52 00 00 00       	mov    edx,0x52
    51ee:	48 89 c7             	mov    rdi,rax
    51f1:	48 89 d1             	mov    rcx,rdx
    51f4:	f3 48 a5             	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
    51f7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    51fb:	48 83 c0 08          	add    rax,0x8
    51ff:	ba 0f 00 00 00       	mov    edx,0xf
    5204:	be 00 00 00 00       	mov    esi,0x0
    5209:	48 89 c7             	mov    rdi,rax
    520c:	e8 1f d4 ff ff       	call   2630 <memset@plt>
    5211:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5215:	48 8d 48 08          	lea    rcx,[rax+0x8]
    5219:	8b 05 f9 bd 00 00    	mov    eax,DWORD PTR [rip+0xbdf9]        # 11018 <watchlist_num>
    521f:	48 63 d0             	movsxd rdx,eax
    5222:	48 89 d0             	mov    rax,rdx
    5225:	48 c1 e0 02          	shl    rax,0x2
    5229:	48 01 d0             	add    rax,rdx
    522c:	48 c1 e0 03          	shl    rax,0x3
    5230:	48 01 d0             	add    rax,rdx
    5233:	48 c1 e0 04          	shl    rax,0x4
    5237:	48 8d 15 62 de 0e 00 	lea    rdx,[rip+0xede62]        # f30a0 <watchlist>
    523e:	48 01 d0             	add    rax,rdx
    5241:	48 83 c0 08          	add    rax,0x8
    5245:	48 89 ce             	mov    rsi,rcx
    5248:	48 89 c7             	mov    rdi,rax
    524b:	e8 a0 d2 ff ff       	call   24f0 <strcpy@plt>
    5250:	8b 05 c2 bd 00 00    	mov    eax,DWORD PTR [rip+0xbdc2]        # 11018 <watchlist_num>
    5256:	48 63 d0             	movsxd rdx,eax
    5259:	48 89 d0             	mov    rax,rdx
    525c:	48 c1 e0 02          	shl    rax,0x2
    5260:	48 01 d0             	add    rax,rdx
    5263:	48 c1 e0 03          	shl    rax,0x3
    5267:	48 01 d0             	add    rax,rdx
    526a:	48 c1 e0 04          	shl    rax,0x4
    526e:	48 8d 15 2b de 0e 00 	lea    rdx,[rip+0xede2b]        # f30a0 <watchlist>
    5275:	48 01 d0             	add    rax,rdx
    5278:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    527c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5280:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5283:	84 c0                	test   al,al
    5285:	74 36                	je     52bd <verify_ip_addr+0x21f>
    5287:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    528b:	8b 80 80 02 00 00    	mov    eax,DWORD PTR [rax+0x280]
    5291:	8d 50 01             	lea    edx,[rax+0x1]
    5294:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5298:	89 90 80 02 00 00    	mov    DWORD PTR [rax+0x280],edx
    529e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52a2:	8b 90 88 02 00 00    	mov    edx,DWORD PTR [rax+0x288]
    52a8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    52ac:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    52af:	01 c2                	add    edx,eax
    52b1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52b5:	89 90 88 02 00 00    	mov    DWORD PTR [rax+0x288],edx
    52bb:	eb 34                	jmp    52f1 <verify_ip_addr+0x253>
    52bd:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52c1:	8b 80 7c 02 00 00    	mov    eax,DWORD PTR [rax+0x27c]
    52c7:	8d 50 01             	lea    edx,[rax+0x1]
    52ca:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52ce:	89 90 7c 02 00 00    	mov    DWORD PTR [rax+0x27c],edx
    52d4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52d8:	8b 90 84 02 00 00    	mov    edx,DWORD PTR [rax+0x284]
    52de:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    52e2:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    52e5:	01 c2                	add    edx,eax
    52e7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52eb:	89 90 84 02 00 00    	mov    DWORD PTR [rax+0x284],edx
    52f1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52f5:	8b 90 8c 02 00 00    	mov    edx,DWORD PTR [rax+0x28c]
    52fb:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    52ff:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    5302:	01 c2                	add    edx,eax
    5304:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5308:	89 90 8c 02 00 00    	mov    DWORD PTR [rax+0x28c],edx
    530e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5312:	8b 80 7c 02 00 00    	mov    eax,DWORD PTR [rax+0x27c]
    5318:	8d 14 00             	lea    edx,[rax+rax*1]
    531b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    531f:	89 90 58 02 00 00    	mov    DWORD PTR [rax+0x258],edx
    5325:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5329:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    532c:	83 f8 5e             	cmp    eax,0x5e
    532f:	0f 84 9b 00 00 00    	je     53d0 <verify_ip_addr+0x332>
    5335:	83 f8 5e             	cmp    eax,0x5e
    5338:	0f 8f cf 00 00 00    	jg     540d <verify_ip_addr+0x36f>
    533e:	83 f8 5c             	cmp    eax,0x5c
    5341:	74 0a                	je     534d <verify_ip_addr+0x2af>
    5343:	83 f8 5d             	cmp    eax,0x5d
    5346:	74 48                	je     5390 <verify_ip_addr+0x2f2>
    5348:	e9 c0 00 00 00       	jmp    540d <verify_ip_addr+0x36f>
    534d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5351:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5354:	84 c0                	test   al,al
    5356:	74 1c                	je     5374 <verify_ip_addr+0x2d6>
    5358:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    535c:	8b 80 5c 02 00 00    	mov    eax,DWORD PTR [rax+0x25c]
    5362:	8d 50 01             	lea    edx,[rax+0x1]
    5365:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5369:	89 90 5c 02 00 00    	mov    DWORD PTR [rax+0x25c],edx
    536f:	e9 d5 00 00 00       	jmp    5449 <verify_ip_addr+0x3ab>
    5374:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5378:	8b 80 68 02 00 00    	mov    eax,DWORD PTR [rax+0x268]
    537e:	8d 50 01             	lea    edx,[rax+0x1]
    5381:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5385:	89 90 68 02 00 00    	mov    DWORD PTR [rax+0x268],edx
    538b:	e9 b9 00 00 00       	jmp    5449 <verify_ip_addr+0x3ab>
    5390:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5394:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5397:	84 c0                	test   al,al
    5399:	74 1c                	je     53b7 <verify_ip_addr+0x319>
    539b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    539f:	8b 80 60 02 00 00    	mov    eax,DWORD PTR [rax+0x260]
    53a5:	8d 50 01             	lea    edx,[rax+0x1]
    53a8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53ac:	89 90 60 02 00 00    	mov    DWORD PTR [rax+0x260],edx
    53b2:	e9 92 00 00 00       	jmp    5449 <verify_ip_addr+0x3ab>
    53b7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53bb:	8b 80 6c 02 00 00    	mov    eax,DWORD PTR [rax+0x26c]
    53c1:	8d 50 01             	lea    edx,[rax+0x1]
    53c4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53c8:	89 90 6c 02 00 00    	mov    DWORD PTR [rax+0x26c],edx
    53ce:	eb 79                	jmp    5449 <verify_ip_addr+0x3ab>
    53d0:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    53d4:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    53d7:	84 c0                	test   al,al
    53d9:	74 19                	je     53f4 <verify_ip_addr+0x356>
    53db:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53df:	8b 80 64 02 00 00    	mov    eax,DWORD PTR [rax+0x264]
    53e5:	8d 50 01             	lea    edx,[rax+0x1]
    53e8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53ec:	89 90 64 02 00 00    	mov    DWORD PTR [rax+0x264],edx
    53f2:	eb 55                	jmp    5449 <verify_ip_addr+0x3ab>
    53f4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53f8:	8b 80 70 02 00 00    	mov    eax,DWORD PTR [rax+0x270]
    53fe:	8d 50 01             	lea    edx,[rax+0x1]
    5401:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5405:	89 90 70 02 00 00    	mov    DWORD PTR [rax+0x270],edx
    540b:	eb 3c                	jmp    5449 <verify_ip_addr+0x3ab>
    540d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5411:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5414:	84 c0                	test   al,al
    5416:	74 19                	je     5431 <verify_ip_addr+0x393>
    5418:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    541c:	8b 80 74 02 00 00    	mov    eax,DWORD PTR [rax+0x274]
    5422:	8d 50 01             	lea    edx,[rax+0x1]
    5425:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5429:	89 90 74 02 00 00    	mov    DWORD PTR [rax+0x274],edx
    542f:	eb 17                	jmp    5448 <verify_ip_addr+0x3aa>
    5431:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5435:	8b 80 78 02 00 00    	mov    eax,DWORD PTR [rax+0x278]
    543b:	8d 50 01             	lea    edx,[rax+0x1]
    543e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5442:	89 90 78 02 00 00    	mov    DWORD PTR [rax+0x278],edx
    5448:	90                   	nop
    5449:	b8 01 00 00 00       	mov    eax,0x1
    544e:	c9                   	leave  
    544f:	c3                   	ret    

0000000000005450 <ascii_hexdump>:
    5450:	f3 0f 1e fa          	endbr64 
    5454:	55                   	push   rbp
    5455:	48 89 e5             	mov    rbp,rsp
    5458:	48 83 ec 20          	sub    rsp,0x20
    545c:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    5460:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    5463:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    546a:	eb 52                	jmp    54be <ascii_hexdump+0x6e>
    546c:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    546f:	48 63 d0             	movsxd rdx,eax
    5472:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5476:	48 01 d0             	add    rax,rdx
    5479:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    547c:	3c 20                	cmp    al,0x20
    547e:	76 30                	jbe    54b0 <ascii_hexdump+0x60>
    5480:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5483:	48 63 d0             	movsxd rdx,eax
    5486:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    548a:	48 01 d0             	add    rax,rdx
    548d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5490:	3c 7e                	cmp    al,0x7e
    5492:	77 1c                	ja     54b0 <ascii_hexdump+0x60>
    5494:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5497:	48 63 d0             	movsxd rdx,eax
    549a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    549e:	48 01 d0             	add    rax,rdx
    54a1:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    54a4:	0f b6 c0             	movzx  eax,al
    54a7:	89 c7                	mov    edi,eax
    54a9:	e8 f2 cf ff ff       	call   24a0 <putchar@plt>
    54ae:	eb 0a                	jmp    54ba <ascii_hexdump+0x6a>
    54b0:	bf 2e 00 00 00       	mov    edi,0x2e
    54b5:	e8 e6 cf ff ff       	call   24a0 <putchar@plt>
    54ba:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    54be:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    54c1:	3b 45 e4             	cmp    eax,DWORD PTR [rbp-0x1c]
    54c4:	7c a6                	jl     546c <ascii_hexdump+0x1c>
    54c6:	bf 0a 00 00 00       	mov    edi,0xa
    54cb:	e8 d0 cf ff ff       	call   24a0 <putchar@plt>
    54d0:	90                   	nop
    54d1:	c9                   	leave  
    54d2:	c3                   	ret    

00000000000054d3 <stdout_alert>:
    54d3:	f3 0f 1e fa          	endbr64 
    54d7:	55                   	push   rbp
    54d8:	48 89 e5             	mov    rbp,rsp
    54db:	53                   	push   rbx
    54dc:	48 81 ec c8 01 00 00 	sub    rsp,0x1c8
    54e3:	48 89 bd 48 fe ff ff 	mov    QWORD PTR [rbp-0x1b8],rdi
    54ea:	48 89 b5 40 fe ff ff 	mov    QWORD PTR [rbp-0x1c0],rsi
    54f1:	89 95 3c fe ff ff    	mov    DWORD PTR [rbp-0x1c4],edx
    54f7:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    54fe:	00 00 
    5500:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    5504:	31 c0                	xor    eax,eax
    5506:	bf 00 00 00 00       	mov    edi,0x0
    550b:	e8 f0 d1 ff ff       	call   2700 <time@plt>
    5510:	48 89 85 50 fe ff ff 	mov    QWORD PTR [rbp-0x1b0],rax
    5517:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
    551e:	48 89 c7             	mov    rdi,rax
    5521:	e8 9a cf ff ff       	call   24c0 <localtime@plt>
    5526:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    5529:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    552d:	48 89 8d 60 fe ff ff 	mov    QWORD PTR [rbp-0x1a0],rcx
    5534:	48 89 9d 68 fe ff ff 	mov    QWORD PTR [rbp-0x198],rbx
    553b:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    553f:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    5543:	48 89 8d 70 fe ff ff 	mov    QWORD PTR [rbp-0x190],rcx
    554a:	48 89 9d 78 fe ff ff 	mov    QWORD PTR [rbp-0x188],rbx
    5551:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    5555:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    5559:	48 89 8d 80 fe ff ff 	mov    QWORD PTR [rbp-0x180],rcx
    5560:	48 89 9d 88 fe ff ff 	mov    QWORD PTR [rbp-0x178],rbx
    5567:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    556b:	48 89 85 90 fe ff ff 	mov    QWORD PTR [rbp-0x170],rax
    5572:	8b bd 60 fe ff ff    	mov    edi,DWORD PTR [rbp-0x1a0]
    5578:	8b b5 64 fe ff ff    	mov    esi,DWORD PTR [rbp-0x19c]
    557e:	44 8b 8d 68 fe ff ff 	mov    r9d,DWORD PTR [rbp-0x198]
    5585:	44 8b 85 6c fe ff ff 	mov    r8d,DWORD PTR [rbp-0x194]
    558c:	8b 85 70 fe ff ff    	mov    eax,DWORD PTR [rbp-0x190]
    5592:	8d 48 01             	lea    ecx,[rax+0x1]
    5595:	8b 85 74 fe ff ff    	mov    eax,DWORD PTR [rbp-0x18c]
    559b:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    55a1:	48 8d 85 a0 fe ff ff 	lea    rax,[rbp-0x160]
    55a8:	57                   	push   rdi
    55a9:	56                   	push   rsi
    55aa:	48 8d 35 15 75 00 00 	lea    rsi,[rip+0x7515]        # cac6 <_IO_stdin_used+0xac6>
    55b1:	48 89 c7             	mov    rdi,rax
    55b4:	b8 00 00 00 00       	mov    eax,0x0
    55b9:	e8 b2 d2 ff ff       	call   2870 <sprintf@plt>
    55be:	48 83 c4 10          	add    rsp,0x10
    55c2:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    55c9:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    55cc:	3d 80 00 00 00       	cmp    eax,0x80
    55d1:	75 4e                	jne    5621 <stdout_alert+0x14e>
    55d3:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    55da:	48 8b 78 10          	mov    rdi,QWORD PTR [rax+0x10]
    55de:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    55e5:	48 8b 70 08          	mov    rsi,QWORD PTR [rax+0x8]
    55e9:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
    55f0:	48 8d 88 50 01 00 00 	lea    rcx,[rax+0x150]
    55f7:	48 8d 95 a0 fe ff ff 	lea    rdx,[rbp-0x160]
    55fe:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    5605:	49 89 f9             	mov    r9,rdi
    5608:	49 89 f0             	mov    r8,rsi
    560b:	48 8d 35 d0 74 00 00 	lea    rsi,[rip+0x74d0]        # cae2 <_IO_stdin_used+0xae2>
    5612:	48 89 c7             	mov    rdi,rax
    5615:	b8 00 00 00 00       	mov    eax,0x0
    561a:	e8 51 d2 ff ff       	call   2870 <sprintf@plt>
    561f:	eb 61                	jmp    5682 <stdout_alert+0x1af>
    5621:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    5628:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    562b:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    5632:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    5636:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    563d:	44 8b 48 24          	mov    r9d,DWORD PTR [rax+0x24]
    5641:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    5648:	4c 8b 40 08          	mov    r8,QWORD PTR [rax+0x8]
    564c:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
    5653:	48 8d 88 50 01 00 00 	lea    rcx,[rax+0x150]
    565a:	48 8d 95 a0 fe ff ff 	lea    rdx,[rbp-0x160]
    5661:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    5668:	57                   	push   rdi
    5669:	56                   	push   rsi
    566a:	48 8d 35 81 74 00 00 	lea    rsi,[rip+0x7481]        # caf2 <_IO_stdin_used+0xaf2>
    5671:	48 89 c7             	mov    rdi,rax
    5674:	b8 00 00 00 00       	mov    eax,0x0
    5679:	e8 f2 d1 ff ff       	call   2870 <sprintf@plt>
    567e:	48 83 c4 10          	add    rsp,0x10
    5682:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    5689:	48 89 c6             	mov    rsi,rax
    568c:	48 8d 3d 75 74 00 00 	lea    rdi,[rip+0x7475]        # cb08 <_IO_stdin_used+0xb08>
    5693:	b8 00 00 00 00       	mov    eax,0x0
    5698:	e8 53 cf ff ff       	call   25f0 <printf@plt>
    569d:	48 8b 05 8c b9 00 00 	mov    rax,QWORD PTR [rip+0xb98c]        # 11030 <def_log_file>
    56a4:	48 8d 35 60 74 00 00 	lea    rsi,[rip+0x7460]        # cb0b <_IO_stdin_used+0xb0b>
    56ab:	48 89 c7             	mov    rdi,rax
    56ae:	e8 fd d0 ff ff       	call   27b0 <fopen@plt>
    56b3:	48 89 85 58 fe ff ff 	mov    QWORD PTR [rbp-0x1a8],rax
    56ba:	48 8b 95 58 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1a8]
    56c1:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    56c8:	48 89 d6             	mov    rsi,rdx
    56cb:	48 89 c7             	mov    rdi,rax
    56ce:	e8 3d cf ff ff       	call   2610 <fputs@plt>
    56d3:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    56da:	48 89 c7             	mov    rdi,rax
    56dd:	e8 8e ce ff ff       	call   2570 <fclose@plt>
    56e2:	90                   	nop
    56e3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    56e7:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    56ee:	00 00 
    56f0:	74 05                	je     56f7 <stdout_alert+0x224>
    56f2:	e8 b9 ce ff ff       	call   25b0 <__stack_chk_fail@plt>
    56f7:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    56fb:	c9                   	leave  
    56fc:	c3                   	ret    

00000000000056fd <str_match_parser>:
    56fd:	f3 0f 1e fa          	endbr64 
    5701:	55                   	push   rbp
    5702:	48 89 e5             	mov    rbp,rsp
    5705:	53                   	push   rbx
    5706:	48 83 ec 48          	sub    rsp,0x48
    570a:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    570e:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
    5712:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    5719:	00 00 
    571b:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    571f:	31 c0                	xor    eax,eax
    5721:	48 89 e0             	mov    rax,rsp
    5724:	48 89 c3             	mov    rbx,rax
    5727:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    572b:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    572e:	85 c0                	test   eax,eax
    5730:	75 0a                	jne    573c <str_match_parser+0x3f>
    5732:	b8 00 00 00 00       	mov    eax,0x0
    5737:	e9 e4 01 00 00       	jmp    5920 <str_match_parser+0x223>
    573c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5740:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5743:	83 c0 01             	add    eax,0x1
    5746:	01 c0                	add    eax,eax
    5748:	48 98                	cdqe   
    574a:	48 83 e8 01          	sub    rax,0x1
    574e:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    5752:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5756:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5759:	83 c0 01             	add    eax,0x1
    575c:	01 c0                	add    eax,eax
    575e:	48 98                	cdqe   
    5760:	49 89 c2             	mov    r10,rax
    5763:	41 bb 00 00 00 00    	mov    r11d,0x0
    5769:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    576d:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5770:	83 c0 01             	add    eax,0x1
    5773:	01 c0                	add    eax,eax
    5775:	48 98                	cdqe   
    5777:	49 89 c0             	mov    r8,rax
    577a:	41 b9 00 00 00 00    	mov    r9d,0x0
    5780:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5784:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5787:	83 c0 01             	add    eax,0x1
    578a:	01 c0                	add    eax,eax
    578c:	48 98                	cdqe   
    578e:	ba 10 00 00 00       	mov    edx,0x10
    5793:	48 83 ea 01          	sub    rdx,0x1
    5797:	48 01 d0             	add    rax,rdx
    579a:	bf 10 00 00 00       	mov    edi,0x10
    579f:	ba 00 00 00 00       	mov    edx,0x0
    57a4:	48 f7 f7             	div    rdi
    57a7:	48 6b c0 10          	imul   rax,rax,0x10
    57ab:	48 89 c2             	mov    rdx,rax
    57ae:	48 81 e2 00 f0 ff ff 	and    rdx,0xfffffffffffff000
    57b5:	48 89 e6             	mov    rsi,rsp
    57b8:	48 29 d6             	sub    rsi,rdx
    57bb:	48 89 f2             	mov    rdx,rsi
    57be:	48 39 d4             	cmp    rsp,rdx
    57c1:	74 12                	je     57d5 <str_match_parser+0xd8>
    57c3:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    57ca:	48 83 8c 24 f8 0f 00 	or     QWORD PTR [rsp+0xff8],0x0
    57d1:	00 00 
    57d3:	eb e9                	jmp    57be <str_match_parser+0xc1>
    57d5:	48 89 c2             	mov    rdx,rax
    57d8:	81 e2 ff 0f 00 00    	and    edx,0xfff
    57de:	48 29 d4             	sub    rsp,rdx
    57e1:	48 89 c2             	mov    rdx,rax
    57e4:	81 e2 ff 0f 00 00    	and    edx,0xfff
    57ea:	48 85 d2             	test   rdx,rdx
    57ed:	74 10                	je     57ff <str_match_parser+0x102>
    57ef:	25 ff 0f 00 00       	and    eax,0xfff
    57f4:	48 83 e8 08          	sub    rax,0x8
    57f8:	48 01 e0             	add    rax,rsp
    57fb:	48 83 08 00          	or     QWORD PTR [rax],0x0
    57ff:	48 89 e0             	mov    rax,rsp
    5802:	48 83 c0 00          	add    rax,0x0
    5806:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    580a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    580e:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5811:	83 c0 01             	add    eax,0x1
    5814:	01 c0                	add    eax,eax
    5816:	48 63 d0             	movsxd rdx,eax
    5819:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    581d:	be 00 00 00 00       	mov    esi,0x0
    5822:	48 89 c7             	mov    rdi,rax
    5825:	e8 06 ce ff ff       	call   2630 <memset@plt>
    582a:	c7 45 d4 00 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x0
    5831:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5835:	8b 80 4c 03 00 00    	mov    eax,DWORD PTR [rax+0x34c]
    583b:	85 c0                	test   eax,eax
    583d:	74 5f                	je     589e <str_match_parser+0x1a1>
    583f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5843:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    5846:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
    5849:	eb 42                	jmp    588d <str_match_parser+0x190>
    584b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    584f:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    5852:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
    5855:	48 98                	cdqe   
    5857:	48 01 d0             	add    rax,rdx
    585a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    585d:	0f b6 d0             	movzx  edx,al
    5860:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    5863:	8d 48 01             	lea    ecx,[rax+0x1]
    5866:	89 4d d4             	mov    DWORD PTR [rbp-0x2c],ecx
    5869:	01 c0                	add    eax,eax
    586b:	48 63 c8             	movsxd rcx,eax
    586e:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    5872:	48 01 c8             	add    rax,rcx
    5875:	48 8d 35 91 72 00 00 	lea    rsi,[rip+0x7291]        # cb0d <_IO_stdin_used+0xb0d>
    587c:	48 89 c7             	mov    rdi,rax
    587f:	b8 00 00 00 00       	mov    eax,0x0
    5884:	e8 e7 cf ff ff       	call   2870 <sprintf@plt>
    5889:	83 45 d0 01          	add    DWORD PTR [rbp-0x30],0x1
    588d:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5891:	8b 80 4c 03 00 00    	mov    eax,DWORD PTR [rax+0x34c]
    5897:	39 45 d0             	cmp    DWORD PTR [rbp-0x30],eax
    589a:	7c af                	jl     584b <str_match_parser+0x14e>
    589c:	eb 5a                	jmp    58f8 <str_match_parser+0x1fb>
    589e:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    58a2:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    58a5:	89 45 cc             	mov    DWORD PTR [rbp-0x34],eax
    58a8:	eb 42                	jmp    58ec <str_match_parser+0x1ef>
    58aa:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    58ae:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    58b1:	8b 45 cc             	mov    eax,DWORD PTR [rbp-0x34]
    58b4:	48 98                	cdqe   
    58b6:	48 01 d0             	add    rax,rdx
    58b9:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    58bc:	0f b6 d0             	movzx  edx,al
    58bf:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    58c2:	8d 48 01             	lea    ecx,[rax+0x1]
    58c5:	89 4d d4             	mov    DWORD PTR [rbp-0x2c],ecx
    58c8:	01 c0                	add    eax,eax
    58ca:	48 63 c8             	movsxd rcx,eax
    58cd:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    58d1:	48 01 c8             	add    rax,rcx
    58d4:	48 8d 35 32 72 00 00 	lea    rsi,[rip+0x7232]        # cb0d <_IO_stdin_used+0xb0d>
    58db:	48 89 c7             	mov    rdi,rax
    58de:	b8 00 00 00 00       	mov    eax,0x0
    58e3:	e8 88 cf ff ff       	call   2870 <sprintf@plt>
    58e8:	83 45 cc 01          	add    DWORD PTR [rbp-0x34],0x1
    58ec:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    58f0:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    58f3:	39 45 cc             	cmp    DWORD PTR [rbp-0x34],eax
    58f6:	7c b2                	jl     58aa <str_match_parser+0x1ad>
    58f8:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    58fc:	48 8d 50 40          	lea    rdx,[rax+0x40]
    5900:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    5904:	48 89 d6             	mov    rsi,rdx
    5907:	48 89 c7             	mov    rdi,rax
    590a:	e8 b1 cf ff ff       	call   28c0 <strstr@plt>
    590f:	48 85 c0             	test   rax,rax
    5912:	74 07                	je     591b <str_match_parser+0x21e>
    5914:	b8 01 00 00 00       	mov    eax,0x1
    5919:	eb 05                	jmp    5920 <str_match_parser+0x223>
    591b:	b8 00 00 00 00       	mov    eax,0x0
    5920:	48 89 dc             	mov    rsp,rbx
    5923:	48 8b 5d e8          	mov    rbx,QWORD PTR [rbp-0x18]
    5927:	64 48 33 1c 25 28 00 	xor    rbx,QWORD PTR fs:0x28
    592e:	00 00 
    5930:	74 05                	je     5937 <str_match_parser+0x23a>
    5932:	e8 79 cc ff ff       	call   25b0 <__stack_chk_fail@plt>
    5937:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    593b:	c9                   	leave  
    593c:	c3                   	ret    

000000000000593d <is_blocked_ipv4>:
    593d:	f3 0f 1e fa          	endbr64 
    5941:	55                   	push   rbp
    5942:	48 89 e5             	mov    rbp,rsp
    5945:	48 83 ec 20          	sub    rsp,0x20
    5949:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    594d:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    5954:	eb 3b                	jmp    5991 <is_blocked_ipv4+0x54>
    5956:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5959:	48 63 d0             	movsxd rdx,eax
    595c:	48 89 d0             	mov    rax,rdx
    595f:	48 c1 e0 03          	shl    rax,0x3
    5963:	48 01 d0             	add    rax,rdx
    5966:	48 01 c0             	add    rax,rax
    5969:	48 8d 15 70 48 10 00 	lea    rdx,[rip+0x104870]        # 10a1e0 <blocked_ipv4_addrs>
    5970:	48 01 c2             	add    rdx,rax
    5973:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5977:	48 89 d6             	mov    rsi,rdx
    597a:	48 89 c7             	mov    rdi,rax
    597d:	e8 2e cd ff ff       	call   26b0 <strcmp@plt>
    5982:	85 c0                	test   eax,eax
    5984:	75 07                	jne    598d <is_blocked_ipv4+0x50>
    5986:	b8 01 00 00 00       	mov    eax,0x1
    598b:	eb 14                	jmp    59a1 <is_blocked_ipv4+0x64>
    598d:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    5991:	8b 05 79 b6 00 00    	mov    eax,DWORD PTR [rip+0xb679]        # 11010 <blk_ipv4_len>
    5997:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    599a:	7e ba                	jle    5956 <is_blocked_ipv4+0x19>
    599c:	b8 00 00 00 00       	mov    eax,0x0
    59a1:	c9                   	leave  
    59a2:	c3                   	ret    

00000000000059a3 <none>:
    59a3:	f3 0f 1e fa          	endbr64 
    59a7:	55                   	push   rbp
    59a8:	48 89 e5             	mov    rbp,rsp
    59ab:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    59af:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    59b3:	b8 01 00 00 00       	mov    eax,0x1
    59b8:	5d                   	pop    rbp
    59b9:	c3                   	ret    

00000000000059ba <pcre_match>:
    59ba:	f3 0f 1e fa          	endbr64 
    59be:	55                   	push   rbp
    59bf:	48 89 e5             	mov    rbp,rsp
    59c2:	48 83 ec 10          	sub    rsp,0x10
    59c6:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    59ca:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    59ce:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    59d2:	48 8b 00             	mov    rax,QWORD PTR [rax]
    59d5:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    59d9:	48 8d ba d0 01 00 00 	lea    rdi,[rdx+0x1d0]
    59e0:	41 b8 00 00 00 00    	mov    r8d,0x0
    59e6:	b9 00 00 00 00       	mov    ecx,0x0
    59eb:	ba 00 00 00 00       	mov    edx,0x0
    59f0:	48 89 c6             	mov    rsi,rax
    59f3:	e8 78 cd ff ff       	call   2770 <regexec@plt>
    59f8:	83 f8 01             	cmp    eax,0x1
    59fb:	75 07                	jne    5a04 <pcre_match+0x4a>
    59fd:	b8 00 00 00 00       	mov    eax,0x0
    5a02:	eb 05                	jmp    5a09 <pcre_match+0x4f>
    5a04:	b8 01 00 00 00       	mov    eax,0x1
    5a09:	c9                   	leave  
    5a0a:	c3                   	ret    

0000000000005a0b <rule_library_parser>:
    5a0b:	f3 0f 1e fa          	endbr64 
    5a0f:	55                   	push   rbp
    5a10:	48 89 e5             	mov    rbp,rsp
    5a13:	53                   	push   rbx
    5a14:	48 83 ec 48          	sub    rsp,0x48
    5a18:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    5a1c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    5a23:	00 00 
    5a25:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    5a29:	31 c0                	xor    eax,eax
    5a2b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5a2f:	48 8d 35 e2 70 00 00 	lea    rsi,[rip+0x70e2]        # cb18 <_IO_stdin_used+0xb18>
    5a36:	48 89 c7             	mov    rdi,rax
    5a39:	e8 72 cd ff ff       	call   27b0 <fopen@plt>
    5a3e:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    5a42:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    5a47:	75 22                	jne    5a6b <rule_library_parser+0x60>
    5a49:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5a4d:	48 89 c6             	mov    rsi,rax
    5a50:	48 8d 3d c9 70 00 00 	lea    rdi,[rip+0x70c9]        # cb20 <_IO_stdin_used+0xb20>
    5a57:	b8 00 00 00 00       	mov    eax,0x0
    5a5c:	e8 8f cb ff ff       	call   25f0 <printf@plt>
    5a61:	bf 01 00 00 00       	mov    edi,0x1
    5a66:	e8 15 ce ff ff       	call   2880 <exit@plt>
    5a6b:	48 c7 45 c8 00 00 00 	mov    QWORD PTR [rbp-0x38],0x0
    5a72:	00 
    5a73:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    5a7a:	00 
    5a7b:	e9 72 05 00 00       	jmp    5ff2 <rule_library_parser+0x5e7>
    5a80:	48 8b 5d d0          	mov    rbx,QWORD PTR [rbp-0x30]
    5a84:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a88:	48 8d 35 b7 70 00 00 	lea    rsi,[rip+0x70b7]        # cb46 <_IO_stdin_used+0xb46>
    5a8f:	48 89 c7             	mov    rdi,rax
    5a92:	e8 d9 cb ff ff       	call   2670 <strcspn@plt>
    5a97:	48 01 d8             	add    rax,rbx
    5a9a:	c6 00 00             	mov    BYTE PTR [rax],0x0
    5a9d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5aa1:	48 89 c7             	mov    rdi,rax
    5aa4:	e8 bc 05 00 00       	call   6065 <is_comment>
    5aa9:	84 c0                	test   al,al
    5aab:	74 05                	je     5ab2 <rule_library_parser+0xa7>
    5aad:	e9 40 05 00 00       	jmp    5ff2 <rule_library_parser+0x5e7>
    5ab2:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ab6:	ba 1a 00 00 00       	mov    edx,0x1a
    5abb:	48 8d 35 86 70 00 00 	lea    rsi,[rip+0x7086]        # cb48 <_IO_stdin_used+0xb48>
    5ac2:	48 89 c7             	mov    rdi,rax
    5ac5:	e8 16 ca ff ff       	call   24e0 <strncmp@plt>
    5aca:	85 c0                	test   eax,eax
    5acc:	75 39                	jne    5b07 <rule_library_parser+0xfc>
    5ace:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ad2:	48 83 c0 1a          	add    rax,0x1a
    5ad6:	48 8d 35 86 70 00 00 	lea    rsi,[rip+0x7086]        # cb63 <_IO_stdin_used+0xb63>
    5add:	48 89 c7             	mov    rdi,rax
    5ae0:	e8 cb cb ff ff       	call   26b0 <strcmp@plt>
    5ae5:	85 c0                	test   eax,eax
    5ae7:	75 0f                	jne    5af8 <rule_library_parser+0xed>
    5ae9:	c7 05 d1 46 10 00 01 	mov    DWORD PTR [rip+0x1046d1],0x1        # 10a1c4 <strict_icmp_timestamp_req>
    5af0:	00 00 00 
    5af3:	e9 e4 04 00 00       	jmp    5fdc <rule_library_parser+0x5d1>
    5af8:	c7 05 c2 46 10 00 00 	mov    DWORD PTR [rip+0x1046c2],0x0        # 10a1c4 <strict_icmp_timestamp_req>
    5aff:	00 00 00 
    5b02:	e9 d5 04 00 00       	jmp    5fdc <rule_library_parser+0x5d1>
    5b07:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b0b:	ba 1d 00 00 00       	mov    edx,0x1d
    5b10:	48 8d 35 50 70 00 00 	lea    rsi,[rip+0x7050]        # cb67 <_IO_stdin_used+0xb67>
    5b17:	48 89 c7             	mov    rdi,rax
    5b1a:	e8 c1 c9 ff ff       	call   24e0 <strncmp@plt>
    5b1f:	85 c0                	test   eax,eax
    5b21:	75 39                	jne    5b5c <rule_library_parser+0x151>
    5b23:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b27:	48 83 c0 1d          	add    rax,0x1d
    5b2b:	48 8d 35 31 70 00 00 	lea    rsi,[rip+0x7031]        # cb63 <_IO_stdin_used+0xb63>
    5b32:	48 89 c7             	mov    rdi,rax
    5b35:	e8 76 cb ff ff       	call   26b0 <strcmp@plt>
    5b3a:	85 c0                	test   eax,eax
    5b3c:	75 0f                	jne    5b4d <rule_library_parser+0x142>
    5b3e:	c7 05 c0 21 10 00 01 	mov    DWORD PTR [rip+0x1021c0],0x1        # 107d08 <strict_nmap_host_alive_check>
    5b45:	00 00 00 
    5b48:	e9 8f 04 00 00       	jmp    5fdc <rule_library_parser+0x5d1>
    5b4d:	c7 05 b1 21 10 00 00 	mov    DWORD PTR [rip+0x1021b1],0x0        # 107d08 <strict_nmap_host_alive_check>
    5b54:	00 00 00 
    5b57:	e9 80 04 00 00       	jmp    5fdc <rule_library_parser+0x5d1>
    5b5c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b60:	ba 17 00 00 00       	mov    edx,0x17
    5b65:	48 8d 35 19 70 00 00 	lea    rsi,[rip+0x7019]        # cb85 <_IO_stdin_used+0xb85>
    5b6c:	48 89 c7             	mov    rdi,rax
    5b6f:	e8 6c c9 ff ff       	call   24e0 <strncmp@plt>
    5b74:	85 c0                	test   eax,eax
    5b76:	75 43                	jne    5bbb <rule_library_parser+0x1b0>
    5b78:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b7c:	48 89 c7             	mov    rdi,rax
    5b7f:	e8 0c ca ff ff       	call   2590 <strlen@plt>
    5b84:	48 83 f8 17          	cmp    rax,0x17
    5b88:	77 16                	ja     5ba0 <rule_library_parser+0x195>
    5b8a:	48 8d 3d 0c 70 00 00 	lea    rdi,[rip+0x700c]        # cb9d <_IO_stdin_used+0xb9d>
    5b91:	e8 8a c9 ff ff       	call   2520 <puts@plt>
    5b96:	bf 01 00 00 00       	mov    edi,0x1
    5b9b:	e8 e0 cc ff ff       	call   2880 <exit@plt>
    5ba0:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ba4:	48 83 c0 17          	add    rax,0x17
    5ba8:	48 89 c7             	mov    rdi,rax
    5bab:	e8 70 cc ff ff       	call   2820 <atoi@plt>
    5bb0:	89 05 ea 1c 10 00    	mov    DWORD PTR [rip+0x101cea],eax        # 1078a0 <clean_delay_pkts>
    5bb6:	e9 21 04 00 00       	jmp    5fdc <rule_library_parser+0x5d1>
    5bbb:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5bbf:	ba 18 00 00 00       	mov    edx,0x18
    5bc4:	48 8d 35 ec 6f 00 00 	lea    rsi,[rip+0x6fec]        # cbb7 <_IO_stdin_used+0xbb7>
    5bcb:	48 89 c7             	mov    rdi,rax
    5bce:	e8 0d c9 ff ff       	call   24e0 <strncmp@plt>
    5bd3:	85 c0                	test   eax,eax
    5bd5:	75 46                	jne    5c1d <rule_library_parser+0x212>
    5bd7:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5bdb:	48 89 c7             	mov    rdi,rax
    5bde:	e8 ad c9 ff ff       	call   2590 <strlen@plt>
    5be3:	48 83 f8 18          	cmp    rax,0x18
    5be7:	75 16                	jne    5bff <rule_library_parser+0x1f4>
    5be9:	48 8d 3d ad 6f 00 00 	lea    rdi,[rip+0x6fad]        # cb9d <_IO_stdin_used+0xb9d>
    5bf0:	e8 2b c9 ff ff       	call   2520 <puts@plt>
    5bf5:	bf 01 00 00 00       	mov    edi,0x1
    5bfa:	e8 81 cc ff ff       	call   2880 <exit@plt>
    5bff:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c03:	48 83 c0 18          	add    rax,0x18
    5c07:	48 89 c7             	mov    rdi,rax
    5c0a:	e8 11 cc ff ff       	call   2820 <atoi@plt>
    5c0f:	48 98                	cdqe   
    5c11:	48 89 05 30 21 10 00 	mov    QWORD PTR [rip+0x102130],rax        # 107d48 <clean_delay>
    5c18:	e9 bf 03 00 00       	jmp    5fdc <rule_library_parser+0x5d1>
    5c1d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c21:	ba 0b 00 00 00       	mov    edx,0xb
    5c26:	48 8d 35 a3 6f 00 00 	lea    rsi,[rip+0x6fa3]        # cbd0 <_IO_stdin_used+0xbd0>
    5c2d:	48 89 c7             	mov    rdi,rax
    5c30:	e8 ab c8 ff ff       	call   24e0 <strncmp@plt>
    5c35:	85 c0                	test   eax,eax
    5c37:	75 33                	jne    5c6c <rule_library_parser+0x261>
    5c39:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c3d:	48 83 c0 0b          	add    rax,0xb
    5c41:	48 8d 35 1b 6f 00 00 	lea    rsi,[rip+0x6f1b]        # cb63 <_IO_stdin_used+0xb63>
    5c48:	48 89 c7             	mov    rdi,rax
    5c4b:	e8 60 ca ff ff       	call   26b0 <strcmp@plt>
    5c50:	85 c0                	test   eax,eax
    5c52:	75 0c                	jne    5c60 <rule_library_parser+0x255>
    5c54:	c6 05 e5 20 10 00 01 	mov    BYTE PTR [rip+0x1020e5],0x1        # 107d40 <use_sqlite>
    5c5b:	e9 7c 03 00 00       	jmp    5fdc <rule_library_parser+0x5d1>
    5c60:	c6 05 d9 20 10 00 00 	mov    BYTE PTR [rip+0x1020d9],0x0        # 107d40 <use_sqlite>
    5c67:	e9 70 03 00 00       	jmp    5fdc <rule_library_parser+0x5d1>
    5c6c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c70:	ba 15 00 00 00       	mov    edx,0x15
    5c75:	48 8d 35 60 6f 00 00 	lea    rsi,[rip+0x6f60]        # cbdc <_IO_stdin_used+0xbdc>
    5c7c:	48 89 c7             	mov    rdi,rax
    5c7f:	e8 5c c8 ff ff       	call   24e0 <strncmp@plt>
    5c84:	85 c0                	test   eax,eax
    5c86:	75 34                	jne    5cbc <rule_library_parser+0x2b1>
    5c88:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c8c:	48 83 c0 15          	add    rax,0x15
    5c90:	48 89 c6             	mov    rsi,rax
    5c93:	48 8d 3d 86 20 10 00 	lea    rdi,[rip+0x102086]        # 107d20 <sqlite_db_path>
    5c9a:	e8 51 c8 ff ff       	call   24f0 <strcpy@plt>
    5c9f:	48 8d 35 7a 20 10 00 	lea    rsi,[rip+0x10207a]        # 107d20 <sqlite_db_path>
    5ca6:	48 8d 3d 45 6f 00 00 	lea    rdi,[rip+0x6f45]        # cbf2 <_IO_stdin_used+0xbf2>
    5cad:	b8 00 00 00 00       	mov    eax,0x0
    5cb2:	e8 bf 2c 00 00       	call   8976 <livedebug>
    5cb7:	e9 20 03 00 00       	jmp    5fdc <rule_library_parser+0x5d1>
    5cbc:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5cc0:	ba 0b 00 00 00       	mov    edx,0xb
    5cc5:	48 8d 35 3f 6f 00 00 	lea    rsi,[rip+0x6f3f]        # cc0b <_IO_stdin_used+0xc0b>
    5ccc:	48 89 c7             	mov    rdi,rax
    5ccf:	e8 0c c8 ff ff       	call   24e0 <strncmp@plt>
    5cd4:	85 c0                	test   eax,eax
    5cd6:	75 34                	jne    5d0c <rule_library_parser+0x301>
    5cd8:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5cdc:	48 83 c0 0b          	add    rax,0xb
    5ce0:	48 89 c6             	mov    rsi,rax
    5ce3:	48 8d 3d be 44 10 00 	lea    rdi,[rip+0x1044be]        # 10a1a8 <input_adapter>
    5cea:	e8 01 c8 ff ff       	call   24f0 <strcpy@plt>
    5cef:	48 8d 35 b2 44 10 00 	lea    rsi,[rip+0x1044b2]        # 10a1a8 <input_adapter>
    5cf6:	48 8d 3d 1b 6f 00 00 	lea    rdi,[rip+0x6f1b]        # cc18 <_IO_stdin_used+0xc18>
    5cfd:	b8 00 00 00 00       	mov    eax,0x0
    5d02:	e8 6f 2c 00 00       	call   8976 <livedebug>
    5d07:	e9 d0 02 00 00       	jmp    5fdc <rule_library_parser+0x5d1>
    5d0c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d10:	ba 0c 00 00 00       	mov    edx,0xc
    5d15:	48 8d 35 2f 6f 00 00 	lea    rsi,[rip+0x6f2f]        # cc4b <_IO_stdin_used+0xc4b>
    5d1c:	48 89 c7             	mov    rdi,rax
    5d1f:	e8 bc c7 ff ff       	call   24e0 <strncmp@plt>
    5d24:	85 c0                	test   eax,eax
    5d26:	75 34                	jne    5d5c <rule_library_parser+0x351>
    5d28:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d2c:	48 83 c0 0c          	add    rax,0xc
    5d30:	48 89 c6             	mov    rsi,rax
    5d33:	48 8d 3d 7e 44 10 00 	lea    rdi,[rip+0x10447e]        # 10a1b8 <output_adapter>
    5d3a:	e8 b1 c7 ff ff       	call   24f0 <strcpy@plt>
    5d3f:	48 8d 35 72 44 10 00 	lea    rsi,[rip+0x104472]        # 10a1b8 <output_adapter>
    5d46:	48 8d 3d 0b 6f 00 00 	lea    rdi,[rip+0x6f0b]        # cc58 <_IO_stdin_used+0xc58>
    5d4d:	b8 00 00 00 00       	mov    eax,0x0
    5d52:	e8 1f 2c 00 00       	call   8976 <livedebug>
    5d57:	e9 80 02 00 00       	jmp    5fdc <rule_library_parser+0x5d1>
    5d5c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d60:	ba 05 00 00 00       	mov    edx,0x5
    5d65:	48 8d 35 20 6f 00 00 	lea    rsi,[rip+0x6f20]        # cc8c <_IO_stdin_used+0xc8c>
    5d6c:	48 89 c7             	mov    rdi,rax
    5d6f:	e8 6c c7 ff ff       	call   24e0 <strncmp@plt>
    5d74:	85 c0                	test   eax,eax
    5d76:	0f 85 83 00 00 00    	jne    5dff <rule_library_parser+0x3f4>
    5d7c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d80:	48 83 c0 05          	add    rax,0x5
    5d84:	48 89 c6             	mov    rsi,rax
    5d87:	48 8d 3d 04 6f 00 00 	lea    rdi,[rip+0x6f04]        # cc92 <_IO_stdin_used+0xc92>
    5d8e:	b8 00 00 00 00       	mov    eax,0x0
    5d93:	e8 de 2b 00 00       	call   8976 <livedebug>
    5d98:	48 8d 3d fc 6e 00 00 	lea    rdi,[rip+0x6efc]        # cc9b <_IO_stdin_used+0xc9b>
    5d9f:	b8 00 00 00 00       	mov    eax,0x0
    5da4:	e8 47 c8 ff ff       	call   25f0 <printf@plt>
    5da9:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5dad:	48 83 c0 05          	add    rax,0x5
    5db1:	0f b6 10             	movzx  edx,BYTE PTR [rax]
    5db4:	0f b6 05 ec 6e 00 00 	movzx  eax,BYTE PTR [rip+0x6eec]        # cca7 <_IO_stdin_used+0xca7>
    5dbb:	0f b6 d2             	movzx  edx,dl
    5dbe:	0f b6 c0             	movzx  eax,al
    5dc1:	29 c2                	sub    edx,eax
    5dc3:	89 d0                	mov    eax,edx
    5dc5:	85 c0                	test   eax,eax
    5dc7:	75 1b                	jne    5de4 <rule_library_parser+0x3d9>
    5dc9:	c7 05 51 b2 00 00 02 	mov    DWORD PTR [rip+0xb251],0x2        # 11024 <VIGIL_MODE>
    5dd0:	00 00 00 
    5dd3:	48 8d 3d cf 6e 00 00 	lea    rdi,[rip+0x6ecf]        # cca9 <_IO_stdin_used+0xca9>
    5dda:	e8 41 c7 ff ff       	call   2520 <puts@plt>
    5ddf:	e9 f8 01 00 00       	jmp    5fdc <rule_library_parser+0x5d1>
    5de4:	c7 05 36 b2 00 00 01 	mov    DWORD PTR [rip+0xb236],0x1        # 11024 <VIGIL_MODE>
    5deb:	00 00 00 
    5dee:	48 8d 3d cb 6e 00 00 	lea    rdi,[rip+0x6ecb]        # ccc0 <_IO_stdin_used+0xcc0>
    5df5:	e8 26 c7 ff ff       	call   2520 <puts@plt>
    5dfa:	e9 dd 01 00 00       	jmp    5fdc <rule_library_parser+0x5d1>
    5dff:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e03:	ba 08 00 00 00       	mov    edx,0x8
    5e08:	48 8d 35 c8 6e 00 00 	lea    rsi,[rip+0x6ec8]        # ccd7 <_IO_stdin_used+0xcd7>
    5e0f:	48 89 c7             	mov    rdi,rax
    5e12:	e8 c9 c6 ff ff       	call   24e0 <strncmp@plt>
    5e17:	85 c0                	test   eax,eax
    5e19:	75 34                	jne    5e4f <rule_library_parser+0x444>
    5e1b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e1f:	48 83 c0 08          	add    rax,0x8
    5e23:	48 89 c6             	mov    rsi,rax
    5e26:	48 8d 3d c3 1e 10 00 	lea    rdi,[rip+0x101ec3]        # 107cf0 <local_ip>
    5e2d:	e8 be c6 ff ff       	call   24f0 <strcpy@plt>
    5e32:	48 8d 35 b7 1e 10 00 	lea    rsi,[rip+0x101eb7]        # 107cf0 <local_ip>
    5e39:	48 8d 3d a0 6e 00 00 	lea    rdi,[rip+0x6ea0]        # cce0 <_IO_stdin_used+0xce0>
    5e40:	b8 00 00 00 00       	mov    eax,0x0
    5e45:	e8 2c 2b 00 00       	call   8976 <livedebug>
    5e4a:	e9 8d 01 00 00       	jmp    5fdc <rule_library_parser+0x5d1>
    5e4f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e53:	ba 06 00 00 00       	mov    edx,0x6
    5e58:	48 8d 35 9c 6e 00 00 	lea    rsi,[rip+0x6e9c]        # ccfb <_IO_stdin_used+0xcfb>
    5e5f:	48 89 c7             	mov    rdi,rax
    5e62:	e8 79 c6 ff ff       	call   24e0 <strncmp@plt>
    5e67:	85 c0                	test   eax,eax
    5e69:	75 1c                	jne    5e87 <rule_library_parser+0x47c>
    5e6b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e6f:	48 83 c0 06          	add    rax,0x6
    5e73:	48 89 c6             	mov    rsi,rax
    5e76:	48 8d 3d f3 20 10 00 	lea    rdi,[rip+0x1020f3]        # 107f70 <def_gw>
    5e7d:	e8 6e c6 ff ff       	call   24f0 <strcpy@plt>
    5e82:	e9 55 01 00 00       	jmp    5fdc <rule_library_parser+0x5d1>
    5e87:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e8b:	ba 08 00 00 00       	mov    edx,0x8
    5e90:	48 8d 35 6b 6e 00 00 	lea    rsi,[rip+0x6e6b]        # cd02 <_IO_stdin_used+0xd02>
    5e97:	48 89 c7             	mov    rdi,rax
    5e9a:	e8 41 c6 ff ff       	call   24e0 <strncmp@plt>
    5e9f:	85 c0                	test   eax,eax
    5ea1:	75 3f                	jne    5ee2 <rule_library_parser+0x4d7>
    5ea3:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ea7:	48 83 c0 08          	add    rax,0x8
    5eab:	48 8d 35 b1 6c 00 00 	lea    rsi,[rip+0x6cb1]        # cb63 <_IO_stdin_used+0xb63>
    5eb2:	48 89 c7             	mov    rdi,rax
    5eb5:	e8 f6 c7 ff ff       	call   26b0 <strcmp@plt>
    5eba:	85 c0                	test   eax,eax
    5ebc:	75 18                	jne    5ed6 <rule_library_parser+0x4cb>
    5ebe:	c6 05 8c 1e 10 00 01 	mov    BYTE PTR [rip+0x101e8c],0x1        # 107d51 <use_spi>
    5ec5:	48 8d 3d 3f 6e 00 00 	lea    rdi,[rip+0x6e3f]        # cd0b <_IO_stdin_used+0xd0b>
    5ecc:	e8 4f c6 ff ff       	call   2520 <puts@plt>
    5ed1:	e9 06 01 00 00       	jmp    5fdc <rule_library_parser+0x5d1>
    5ed6:	c6 05 74 1e 10 00 00 	mov    BYTE PTR [rip+0x101e74],0x0        # 107d51 <use_spi>
    5edd:	e9 fa 00 00 00       	jmp    5fdc <rule_library_parser+0x5d1>
    5ee2:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ee6:	ba 09 00 00 00       	mov    edx,0x9
    5eeb:	48 8d 35 32 6e 00 00 	lea    rsi,[rip+0x6e32]        # cd24 <_IO_stdin_used+0xd24>
    5ef2:	48 89 c7             	mov    rdi,rax
    5ef5:	e8 e6 c5 ff ff       	call   24e0 <strncmp@plt>
    5efa:	85 c0                	test   eax,eax
    5efc:	75 27                	jne    5f25 <rule_library_parser+0x51a>
    5efe:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f02:	48 89 c7             	mov    rdi,rax
    5f05:	e8 84 01 00 00       	call   608e <rstrip>
    5f0a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f0e:	48 83 c0 09          	add    rax,0x9
    5f12:	48 89 c7             	mov    rdi,rax
    5f15:	e8 4a 50 00 00       	call   af64 <homenet_toi>
    5f1a:	89 05 e4 1d 10 00    	mov    DWORD PTR [rip+0x101de4],eax        # 107d04 <homenet>
    5f20:	e9 b7 00 00 00       	jmp    5fdc <rule_library_parser+0x5d1>
    5f25:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f29:	ba 0e 00 00 00       	mov    edx,0xe
    5f2e:	48 8d 35 f9 6d 00 00 	lea    rsi,[rip+0x6df9]        # cd2e <_IO_stdin_used+0xd2e>
    5f35:	48 89 c7             	mov    rdi,rax
    5f38:	e8 a3 c5 ff ff       	call   24e0 <strncmp@plt>
    5f3d:	85 c0                	test   eax,eax
    5f3f:	75 24                	jne    5f65 <rule_library_parser+0x55a>
    5f41:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f45:	48 89 c7             	mov    rdi,rax
    5f48:	e8 41 01 00 00       	call   608e <rstrip>
    5f4d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f51:	48 83 c0 0e          	add    rax,0xe
    5f55:	48 89 c7             	mov    rdi,rax
    5f58:	e8 07 50 00 00       	call   af64 <homenet_toi>
    5f5d:	89 05 3d 42 10 00    	mov    DWORD PTR [rip+0x10423d],eax        # 10a1a0 <homenetmask>
    5f63:	eb 77                	jmp    5fdc <rule_library_parser+0x5d1>
    5f65:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f69:	ba 09 00 00 00       	mov    edx,0x9
    5f6e:	48 8d 35 c8 6d 00 00 	lea    rsi,[rip+0x6dc8]        # cd3d <_IO_stdin_used+0xd3d>
    5f75:	48 89 c7             	mov    rdi,rax
    5f78:	e8 63 c5 ff ff       	call   24e0 <strncmp@plt>
    5f7d:	85 c0                	test   eax,eax
    5f7f:	75 3f                	jne    5fc0 <rule_library_parser+0x5b5>
    5f81:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f85:	48 89 c7             	mov    rdi,rax
    5f88:	e8 01 01 00 00       	call   608e <rstrip>
    5f8d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f91:	48 83 c0 09          	add    rax,0x9
    5f95:	48 8d 35 ab 6d 00 00 	lea    rsi,[rip+0x6dab]        # cd47 <_IO_stdin_used+0xd47>
    5f9c:	48 89 c7             	mov    rdi,rax
    5f9f:	e8 0c c7 ff ff       	call   26b0 <strcmp@plt>
    5fa4:	85 c0                	test   eax,eax
    5fa6:	75 0c                	jne    5fb4 <rule_library_parser+0x5a9>
    5fa8:	c7 05 2e 1d 10 00 04 	mov    DWORD PTR [rip+0x101d2e],0x4        # 107ce0 <vigil_location>
    5faf:	00 00 00 
    5fb2:	eb 28                	jmp    5fdc <rule_library_parser+0x5d1>
    5fb4:	c7 05 22 1d 10 00 03 	mov    DWORD PTR [rip+0x101d22],0x3        # 107ce0 <vigil_location>
    5fbb:	00 00 00 
    5fbe:	eb 1c                	jmp    5fdc <rule_library_parser+0x5d1>
    5fc0:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5fc4:	48 89 c7             	mov    rdi,rax
    5fc7:	e8 7f 00 00 00       	call   604b <is_rule>
    5fcc:	84 c0                	test   al,al
    5fce:	74 0c                	je     5fdc <rule_library_parser+0x5d1>
    5fd0:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5fd4:	48 89 c7             	mov    rdi,rax
    5fd7:	e8 19 01 00 00       	call   60f5 <rule_parser>
    5fdc:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5fe0:	ba 08 00 00 00       	mov    edx,0x8
    5fe5:	be 00 00 00 00       	mov    esi,0x0
    5fea:	48 89 c7             	mov    rdi,rax
    5fed:	e8 3e c6 ff ff       	call   2630 <memset@plt>
    5ff2:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    5ff6:	48 8d 4d c8          	lea    rcx,[rbp-0x38]
    5ffa:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    5ffe:	48 89 ce             	mov    rsi,rcx
    6001:	48 89 c7             	mov    rdi,rax
    6004:	e8 27 c8 ff ff       	call   2830 <getline@plt>
    6009:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    600d:	48 83 7d e0 ff       	cmp    QWORD PTR [rbp-0x20],0xffffffffffffffff
    6012:	0f 85 68 fa ff ff    	jne    5a80 <rule_library_parser+0x75>
    6018:	8b 05 06 b0 00 00    	mov    eax,DWORD PTR [rip+0xb006]        # 11024 <VIGIL_MODE>
    601e:	3d ff ff 00 00       	cmp    eax,0xffff
    6023:	75 0a                	jne    602f <rule_library_parser+0x624>
    6025:	c7 05 f5 af 00 00 01 	mov    DWORD PTR [rip+0xaff5],0x1        # 11024 <VIGIL_MODE>
    602c:	00 00 00 
    602f:	90                   	nop
    6030:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6034:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    603b:	00 00 
    603d:	74 05                	je     6044 <rule_library_parser+0x639>
    603f:	e8 6c c5 ff ff       	call   25b0 <__stack_chk_fail@plt>
    6044:	48 83 c4 48          	add    rsp,0x48
    6048:	5b                   	pop    rbx
    6049:	5d                   	pop    rbp
    604a:	c3                   	ret    

000000000000604b <is_rule>:
    604b:	f3 0f 1e fa          	endbr64 
    604f:	55                   	push   rbp
    6050:	48 89 e5             	mov    rbp,rsp
    6053:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6057:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    605b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    605e:	3c 24                	cmp    al,0x24
    6060:	0f 94 c0             	sete   al
    6063:	5d                   	pop    rbp
    6064:	c3                   	ret    

0000000000006065 <is_comment>:
    6065:	f3 0f 1e fa          	endbr64 
    6069:	55                   	push   rbp
    606a:	48 89 e5             	mov    rbp,rsp
    606d:	48 83 ec 10          	sub    rsp,0x10
    6071:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6075:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6079:	be 23 00 00 00       	mov    esi,0x23
    607e:	48 89 c7             	mov    rdi,rax
    6081:	e8 5a c5 ff ff       	call   25e0 <strchr@plt>
    6086:	48 85 c0             	test   rax,rax
    6089:	0f 95 c0             	setne  al
    608c:	c9                   	leave  
    608d:	c3                   	ret    

000000000000608e <rstrip>:
    608e:	f3 0f 1e fa          	endbr64 
    6092:	55                   	push   rbp
    6093:	48 89 e5             	mov    rbp,rsp
    6096:	48 83 ec 10          	sub    rsp,0x10
    609a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    609e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    60a2:	48 8d 35 9d 6a 00 00 	lea    rsi,[rip+0x6a9d]        # cb46 <_IO_stdin_used+0xb46>
    60a9:	48 89 c7             	mov    rdi,rax
    60ac:	e8 bf c5 ff ff       	call   2670 <strcspn@plt>
    60b1:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    60b5:	48 01 d0             	add    rax,rdx
    60b8:	c6 00 00             	mov    BYTE PTR [rax],0x0
    60bb:	90                   	nop
    60bc:	c9                   	leave  
    60bd:	c3                   	ret    

00000000000060be <syntax_error>:
    60be:	f3 0f 1e fa          	endbr64 
    60c2:	55                   	push   rbp
    60c3:	48 89 e5             	mov    rbp,rsp
    60c6:	48 83 ec 10          	sub    rsp,0x10
    60ca:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    60ce:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
    60d1:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    60d5:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    60d8:	89 c6                	mov    esi,eax
    60da:	48 8d 3d 6f 6c 00 00 	lea    rdi,[rip+0x6c6f]        # cd50 <_IO_stdin_used+0xd50>
    60e1:	b8 00 00 00 00       	mov    eax,0x0
    60e6:	e8 05 c5 ff ff       	call   25f0 <printf@plt>
    60eb:	bf 01 00 00 00       	mov    edi,0x1
    60f0:	e8 8b c7 ff ff       	call   2880 <exit@plt>

00000000000060f5 <rule_parser>:
    60f5:	f3 0f 1e fa          	endbr64 
    60f9:	55                   	push   rbp
    60fa:	48 89 e5             	mov    rbp,rsp
    60fd:	48 83 ec 40          	sub    rsp,0x40
    6101:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    6105:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    610c:	00 00 
    610e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    6112:	31 c0                	xor    eax,eax
    6114:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6118:	48 83 c0 01          	add    rax,0x1
    611c:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    6120:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    6124:	48 8d 35 ed 69 00 00 	lea    rsi,[rip+0x69ed]        # cb18 <_IO_stdin_used+0xb18>
    612b:	48 89 c7             	mov    rdi,rax
    612e:	e8 7d c6 ff ff       	call   27b0 <fopen@plt>
    6133:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    6137:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
    613c:	75 22                	jne    6160 <rule_parser+0x6b>
    613e:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    6142:	48 89 c6             	mov    rsi,rax
    6145:	48 8d 3d 24 6c 00 00 	lea    rdi,[rip+0x6c24]        # cd70 <_IO_stdin_used+0xd70>
    614c:	b8 00 00 00 00       	mov    eax,0x0
    6151:	e8 9a c4 ff ff       	call   25f0 <printf@plt>
    6156:	bf 01 00 00 00       	mov    edi,0x1
    615b:	e8 20 c7 ff ff       	call   2880 <exit@plt>
    6160:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    6164:	48 89 c6             	mov    rsi,rax
    6167:	48 8d 3d 35 6c 00 00 	lea    rdi,[rip+0x6c35]        # cda3 <_IO_stdin_used+0xda3>
    616e:	b8 00 00 00 00       	mov    eax,0x0
    6173:	e8 78 c4 ff ff       	call   25f0 <printf@plt>
    6178:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    617f:	00 
    6180:	48 c7 45 d8 00 00 00 	mov    QWORD PTR [rbp-0x28],0x0
    6187:	00 
    6188:	eb 54                	jmp    61de <rule_parser+0xe9>
    618a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    618e:	48 89 c7             	mov    rdi,rax
    6191:	e8 cf fe ff ff       	call   6065 <is_comment>
    6196:	84 c0                	test   al,al
    6198:	74 02                	je     619c <rule_parser+0xa7>
    619a:	eb 42                	jmp    61de <rule_parser+0xe9>
    619c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    61a0:	48 89 c7             	mov    rdi,rax
    61a3:	e8 e6 fe ff ff       	call   608e <rstrip>
    61a8:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    61ac:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    61af:	0f b6 c0             	movzx  eax,al
    61b2:	f7 d8                	neg    eax
    61b4:	85 c0                	test   eax,eax
    61b6:	75 02                	jne    61ba <rule_parser+0xc5>
    61b8:	eb 24                	jmp    61de <rule_parser+0xe9>
    61ba:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    61be:	48 8d 35 ef 6b 00 00 	lea    rsi,[rip+0x6bef]        # cdb4 <_IO_stdin_used+0xdb4>
    61c5:	48 89 c7             	mov    rdi,rax
    61c8:	e8 f3 c6 ff ff       	call   28c0 <strstr@plt>
    61cd:	48 85 c0             	test   rax,rax
    61d0:	74 0c                	je     61de <rule_parser+0xe9>
    61d2:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    61d6:	48 89 c7             	mov    rdi,rax
    61d9:	e8 e2 38 00 00       	call   9ac0 <line_parser>
    61de:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    61e2:	48 8d 4d d0          	lea    rcx,[rbp-0x30]
    61e6:	48 8d 45 d8          	lea    rax,[rbp-0x28]
    61ea:	48 89 ce             	mov    rsi,rcx
    61ed:	48 89 c7             	mov    rdi,rax
    61f0:	e8 3b c6 ff ff       	call   2830 <getline@plt>
    61f5:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    61f9:	48 83 7d f0 ff       	cmp    QWORD PTR [rbp-0x10],0xffffffffffffffff
    61fe:	75 8a                	jne    618a <rule_parser+0x95>
    6200:	0f b6 05 bb 3f 10 00 	movzx  eax,BYTE PTR [rip+0x103fbb]        # 10a1c2 <debug_mode>
    6207:	84 c0                	test   al,al
    6209:	74 18                	je     6223 <rule_parser+0x12e>
    620b:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    620f:	48 89 c6             	mov    rsi,rax
    6212:	48 8d 3d a1 6b 00 00 	lea    rdi,[rip+0x6ba1]        # cdba <_IO_stdin_used+0xdba>
    6219:	b8 00 00 00 00       	mov    eax,0x0
    621e:	e8 cd c3 ff ff       	call   25f0 <printf@plt>
    6223:	90                   	nop
    6224:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6228:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    622f:	00 00 
    6231:	74 05                	je     6238 <rule_parser+0x143>
    6233:	e8 78 c3 ff ff       	call   25b0 <__stack_chk_fail@plt>
    6238:	c9                   	leave  
    6239:	c3                   	ret    

000000000000623a <deny_conf_parser>:
    623a:	f3 0f 1e fa          	endbr64 
    623e:	55                   	push   rbp
    623f:	48 89 e5             	mov    rbp,rsp
    6242:	48 83 ec 50          	sub    rsp,0x50
    6246:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    624a:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6251:	00 00 
    6253:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    6257:	31 c0                	xor    eax,eax
    6259:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    625d:	48 8d 35 b4 68 00 00 	lea    rsi,[rip+0x68b4]        # cb18 <_IO_stdin_used+0xb18>
    6264:	48 89 c7             	mov    rdi,rax
    6267:	e8 44 c5 ff ff       	call   27b0 <fopen@plt>
    626c:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    6270:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    6275:	75 22                	jne    6299 <deny_conf_parser+0x5f>
    6277:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    627b:	48 89 c6             	mov    rsi,rax
    627e:	48 8d 3d 4b 6b 00 00 	lea    rdi,[rip+0x6b4b]        # cdd0 <_IO_stdin_used+0xdd0>
    6285:	b8 00 00 00 00       	mov    eax,0x0
    628a:	e8 61 c3 ff ff       	call   25f0 <printf@plt>
    628f:	bf 01 00 00 00       	mov    edi,0x1
    6294:	e8 e7 c5 ff ff       	call   2880 <exit@plt>
    6299:	48 c7 45 c8 00 00 00 	mov    QWORD PTR [rbp-0x38],0x0
    62a0:	00 
    62a1:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    62a8:	00 
    62a9:	e9 9a 00 00 00       	jmp    6348 <deny_conf_parser+0x10e>
    62ae:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    62b2:	48 89 c7             	mov    rdi,rax
    62b5:	e8 d4 fd ff ff       	call   608e <rstrip>
    62ba:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    62be:	48 89 c7             	mov    rdi,rax
    62c1:	e8 9f fd ff ff       	call   6065 <is_comment>
    62c6:	84 c0                	test   al,al
    62c8:	74 02                	je     62cc <deny_conf_parser+0x92>
    62ca:	eb 7c                	jmp    6348 <deny_conf_parser+0x10e>
    62cc:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    62d0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    62d3:	0f b6 c0             	movzx  eax,al
    62d6:	f7 d8                	neg    eax
    62d8:	85 c0                	test   eax,eax
    62da:	75 02                	jne    62de <deny_conf_parser+0xa4>
    62dc:	eb 6a                	jmp    6348 <deny_conf_parser+0x10e>
    62de:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    62e2:	48 8d 35 18 6b 00 00 	lea    rsi,[rip+0x6b18]        # ce01 <_IO_stdin_used+0xe01>
    62e9:	48 89 c7             	mov    rdi,rax
    62ec:	e8 cf c5 ff ff       	call   28c0 <strstr@plt>
    62f1:	48 85 c0             	test   rax,rax
    62f4:	74 52                	je     6348 <deny_conf_parser+0x10e>
    62f6:	8b 05 14 ad 00 00    	mov    eax,DWORD PTR [rip+0xad14]        # 11010 <blk_ipv4_len>
    62fc:	83 c0 01             	add    eax,0x1
    62ff:	89 05 0b ad 00 00    	mov    DWORD PTR [rip+0xad0b],eax        # 11010 <blk_ipv4_len>
    6305:	8b 05 05 ad 00 00    	mov    eax,DWORD PTR [rip+0xad05]        # 11010 <blk_ipv4_len>
    630b:	48 63 d0             	movsxd rdx,eax
    630e:	48 89 d0             	mov    rax,rdx
    6311:	48 c1 e0 03          	shl    rax,0x3
    6315:	48 01 d0             	add    rax,rdx
    6318:	48 01 c0             	add    rax,rax
    631b:	48 8d 15 be 3e 10 00 	lea    rdx,[rip+0x103ebe]        # 10a1e0 <blocked_ipv4_addrs>
    6322:	48 01 d0             	add    rax,rdx
    6325:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    6329:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    632d:	48 83 c0 05          	add    rax,0x5
    6331:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    6335:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6339:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    633d:	48 89 d6             	mov    rsi,rdx
    6340:	48 89 c7             	mov    rdi,rax
    6343:	e8 a8 c1 ff ff       	call   24f0 <strcpy@plt>
    6348:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    634c:	48 8d 4d d0          	lea    rcx,[rbp-0x30]
    6350:	48 8d 45 c8          	lea    rax,[rbp-0x38]
    6354:	48 89 ce             	mov    rsi,rcx
    6357:	48 89 c7             	mov    rdi,rax
    635a:	e8 d1 c4 ff ff       	call   2830 <getline@plt>
    635f:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    6363:	48 83 7d e0 ff       	cmp    QWORD PTR [rbp-0x20],0xffffffffffffffff
    6368:	0f 85 40 ff ff ff    	jne    62ae <deny_conf_parser+0x74>
    636e:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6372:	48 85 c0             	test   rax,rax
    6375:	74 0c                	je     6383 <deny_conf_parser+0x149>
    6377:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    637b:	48 89 c7             	mov    rdi,rax
    637e:	e8 0d c1 ff ff       	call   2490 <free@plt>
    6383:	90                   	nop
    6384:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6388:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    638f:	00 00 
    6391:	74 05                	je     6398 <deny_conf_parser+0x15e>
    6393:	e8 18 c2 ff ff       	call   25b0 <__stack_chk_fail@plt>
    6398:	c9                   	leave  
    6399:	c3                   	ret    

000000000000639a <host_mon_parser>:
    639a:	f3 0f 1e fa          	endbr64 
    639e:	55                   	push   rbp
    639f:	48 89 e5             	mov    rbp,rsp
    63a2:	48 83 ec 10          	sub    rsp,0x10
    63a6:	48 8b 05 8b ac 00 00 	mov    rax,QWORD PTR [rip+0xac8b]        # 11038 <default_host_conf>
    63ad:	48 8d 35 64 67 00 00 	lea    rsi,[rip+0x6764]        # cb18 <_IO_stdin_used+0xb18>
    63b4:	48 89 c7             	mov    rdi,rax
    63b7:	e8 f4 c3 ff ff       	call   27b0 <fopen@plt>
    63bc:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    63c0:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    63c5:	75 25                	jne    63ec <host_mon_parser+0x52>
    63c7:	48 8b 05 6a ac 00 00 	mov    rax,QWORD PTR [rip+0xac6a]        # 11038 <default_host_conf>
    63ce:	48 89 c6             	mov    rsi,rax
    63d1:	48 8d 3d 2e 6a 00 00 	lea    rdi,[rip+0x6a2e]        # ce06 <_IO_stdin_used+0xe06>
    63d8:	b8 00 00 00 00       	mov    eax,0x0
    63dd:	e8 0e c2 ff ff       	call   25f0 <printf@plt>
    63e2:	bf 01 00 00 00       	mov    edi,0x1
    63e7:	e8 94 c4 ff ff       	call   2880 <exit@plt>
    63ec:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    63f0:	48 89 c7             	mov    rdi,rax
    63f3:	e8 78 c1 ff ff       	call   2570 <fclose@plt>
    63f8:	90                   	nop
    63f9:	c9                   	leave  
    63fa:	c3                   	ret    

00000000000063fb <test_encrypt>:
    63fb:	f3 0f 1e fa          	endbr64 
    63ff:	55                   	push   rbp
    6400:	48 89 e5             	mov    rbp,rsp
    6403:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6407:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    640b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    640f:	0f b6 80 48 01 00 00 	movzx  eax,BYTE PTR [rax+0x148]
    6416:	84 c0                	test   al,al
    6418:	74 13                	je     642d <test_encrypt+0x32>
    641a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    641e:	0f b6 40 38          	movzx  eax,BYTE PTR [rax+0x38]
    6422:	84 c0                	test   al,al
    6424:	74 07                	je     642d <test_encrypt+0x32>
    6426:	b8 00 00 00 00       	mov    eax,0x0
    642b:	eb 05                	jmp    6432 <test_encrypt+0x37>
    642d:	b8 01 00 00 00       	mov    eax,0x1
    6432:	5d                   	pop    rbp
    6433:	c3                   	ret    

0000000000006434 <rule_app>:
    6434:	f3 0f 1e fa          	endbr64 
    6438:	55                   	push   rbp
    6439:	48 89 e5             	mov    rbp,rsp
    643c:	48 83 ec 20          	sub    rsp,0x20
    6440:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    6444:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    6448:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    644c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6450:	48 89 d6             	mov    rsi,rdx
    6453:	48 89 c7             	mov    rdi,rax
    6456:	e8 55 03 00 00       	call   67b0 <r_engine>
    645b:	88 45 fd             	mov    BYTE PTR [rbp-0x3],al
    645e:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    6462:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6466:	48 89 d6             	mov    rsi,rdx
    6469:	48 89 c7             	mov    rdi,rax
    646c:	e8 e1 49 00 00       	call   ae52 <d_engine>
    6471:	88 45 fe             	mov    BYTE PTR [rbp-0x2],al
    6474:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6478:	48 8b 88 78 03 00 00 	mov    rcx,QWORD PTR [rax+0x378]
    647f:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6483:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    6487:	48 89 d6             	mov    rsi,rdx
    648a:	48 89 c7             	mov    rdi,rax
    648d:	ff d1                	call   rcx
    648f:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
    6492:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
    6496:	74 40                	je     64d8 <rule_app+0xa4>
    6498:	80 7d fd 00          	cmp    BYTE PTR [rbp-0x3],0x0
    649c:	74 3a                	je     64d8 <rule_app+0xa4>
    649e:	80 7d fe 00          	cmp    BYTE PTR [rbp-0x2],0x0
    64a2:	74 34                	je     64d8 <rule_app+0xa4>
    64a4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    64a8:	4c 8b 80 80 03 00 00 	mov    r8,QWORD PTR [rax+0x380]
    64af:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    64b3:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    64b7:	ba 00 00 00 00       	mov    edx,0x0
    64bc:	48 89 ce             	mov    rsi,rcx
    64bf:	48 89 c7             	mov    rdi,rax
    64c2:	41 ff d0             	call   r8
    64c5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    64c9:	8b 40 3c             	mov    eax,DWORD PTR [rax+0x3c]
    64cc:	8d 50 01             	lea    edx,[rax+0x1]
    64cf:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    64d3:	89 50 3c             	mov    DWORD PTR [rax+0x3c],edx
    64d6:	eb 17                	jmp    64ef <rule_app+0xbb>
    64d8:	8b 05 46 ab 00 00    	mov    eax,DWORD PTR [rip+0xab46]        # 11024 <VIGIL_MODE>
    64de:	83 f8 02             	cmp    eax,0x2
    64e1:	75 0c                	jne    64ef <rule_app+0xbb>
    64e3:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    64e7:	48 89 c7             	mov    rdi,rax
    64ea:	e8 66 25 00 00       	call   8a55 <forward_packet>
    64ef:	90                   	nop
    64f0:	c9                   	leave  
    64f1:	c3                   	ret    

00000000000064f2 <rulemgr>:
    64f2:	f3 0f 1e fa          	endbr64 
    64f6:	55                   	push   rbp
    64f7:	48 89 e5             	mov    rbp,rsp
    64fa:	48 83 ec 20          	sub    rsp,0x20
    64fe:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    6502:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    6509:	e9 8f 02 00 00       	jmp    679d <rulemgr+0x2ab>
    650e:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    6511:	8d 50 01             	lea    edx,[rax+0x1]
    6514:	89 55 f4             	mov    DWORD PTR [rbp-0xc],edx
    6517:	48 98                	cdqe   
    6519:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    6520:	48 8d 15 79 ab 00 00 	lea    rdx,[rip+0xab79]        # 110a0 <rules>
    6527:	48 01 d0             	add    rax,rdx
    652a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    652e:	0f b6 05 23 18 10 00 	movzx  eax,BYTE PTR [rip+0x101823]        # 107d58 <in_test_mode>
    6535:	84 c0                	test   al,al
    6537:	74 30                	je     6569 <rulemgr+0x77>
    6539:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    653d:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    6540:	83 f8 46             	cmp    eax,0x46
    6543:	75 0d                	jne    6552 <rulemgr+0x60>
    6545:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6549:	c7 40 10 45 00 00 00 	mov    DWORD PTR [rax+0x10],0x45
    6550:	eb 17                	jmp    6569 <rulemgr+0x77>
    6552:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6556:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    6559:	83 f8 45             	cmp    eax,0x45
    655c:	75 0b                	jne    6569 <rulemgr+0x77>
    655e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6562:	c7 40 10 46 00 00 00 	mov    DWORD PTR [rax+0x10],0x46
    6569:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    656d:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    6573:	83 f8 ff             	cmp    eax,0xffffffff
    6576:	74 19                	je     6591 <rulemgr+0x9f>
    6578:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    657c:	8b 50 2c             	mov    edx,DWORD PTR [rax+0x2c]
    657f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6583:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    6589:	39 c2                	cmp    edx,eax
    658b:	0f 85 0c 02 00 00    	jne    679d <rulemgr+0x2ab>
    6591:	0f b6 05 b8 17 10 00 	movzx  eax,BYTE PTR [rip+0x1017b8]        # 107d50 <demo_mode>
    6598:	84 c0                	test   al,al
    659a:	75 0f                	jne    65ab <rulemgr+0xb9>
    659c:	8b 05 3e 17 10 00    	mov    eax,DWORD PTR [rip+0x10173e]        # 107ce0 <vigil_location>
    65a2:	83 f8 03             	cmp    eax,0x3
    65a5:	0f 85 a1 00 00 00    	jne    664c <rulemgr+0x15a>
    65ab:	8b 05 2f 17 10 00    	mov    eax,DWORD PTR [rip+0x10172f]        # 107ce0 <vigil_location>
    65b1:	83 f8 03             	cmp    eax,0x3
    65b4:	0f 85 e3 01 00 00    	jne    679d <rulemgr+0x2ab>
    65ba:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65be:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    65c1:	83 f8 ff             	cmp    eax,0xffffffff
    65c4:	74 16                	je     65dc <rulemgr+0xea>
    65c6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65ca:	8b 50 0c             	mov    edx,DWORD PTR [rax+0xc]
    65cd:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    65d1:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    65d4:	39 c2                	cmp    edx,eax
    65d6:	0f 85 c1 01 00 00    	jne    679d <rulemgr+0x2ab>
    65dc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65e0:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    65e3:	83 f8 ff             	cmp    eax,0xffffffff
    65e6:	74 16                	je     65fe <rulemgr+0x10c>
    65e8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65ec:	8b 50 08             	mov    edx,DWORD PTR [rax+0x8]
    65ef:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    65f3:	8b 40 28             	mov    eax,DWORD PTR [rax+0x28]
    65f6:	39 c2                	cmp    edx,eax
    65f8:	0f 85 9f 01 00 00    	jne    679d <rulemgr+0x2ab>
    65fe:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6602:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6606:	48 89 d6             	mov    rsi,rdx
    6609:	48 89 c7             	mov    rdi,rax
    660c:	e8 97 03 00 00       	call   69a8 <test_tcp_session_status>
    6611:	84 c0                	test   al,al
    6613:	0f 84 84 01 00 00    	je     679d <rulemgr+0x2ab>
    6619:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    661d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6621:	48 89 d6             	mov    rsi,rdx
    6624:	48 89 c7             	mov    rdi,rax
    6627:	e8 cf fd ff ff       	call   63fb <test_encrypt>
    662c:	84 c0                	test   al,al
    662e:	0f 84 69 01 00 00    	je     679d <rulemgr+0x2ab>
    6634:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6638:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    663c:	48 89 d6             	mov    rsi,rdx
    663f:	48 89 c7             	mov    rdi,rax
    6642:	e8 ed fd ff ff       	call   6434 <rule_app>
    6647:	e9 51 01 00 00       	jmp    679d <rulemgr+0x2ab>
    664c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6650:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    6653:	83 f8 47             	cmp    eax,0x47
    6656:	74 16                	je     666e <rulemgr+0x17c>
    6658:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    665c:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    665f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6663:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    6666:	39 c2                	cmp    edx,eax
    6668:	0f 85 2f 01 00 00    	jne    679d <rulemgr+0x2ab>
    666e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6672:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    6678:	3d 80 00 00 00       	cmp    eax,0x80
    667d:	75 18                	jne    6697 <rulemgr+0x1a5>
    667f:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6683:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6687:	48 89 d6             	mov    rsi,rdx
    668a:	48 89 c7             	mov    rdi,rax
    668d:	e8 a2 fd ff ff       	call   6434 <rule_app>
    6692:	e9 06 01 00 00       	jmp    679d <rulemgr+0x2ab>
    6697:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    669b:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    669e:	83 f8 47             	cmp    eax,0x47
    66a1:	75 7d                	jne    6720 <rulemgr+0x22e>
    66a3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66a7:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    66aa:	83 f8 ff             	cmp    eax,0xffffffff
    66ad:	74 28                	je     66d7 <rulemgr+0x1e5>
    66af:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    66b3:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    66b6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66ba:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    66bd:	39 c2                	cmp    edx,eax
    66bf:	74 16                	je     66d7 <rulemgr+0x1e5>
    66c1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    66c5:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    66c8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66cc:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    66cf:	39 c2                	cmp    edx,eax
    66d1:	0f 85 c6 00 00 00    	jne    679d <rulemgr+0x2ab>
    66d7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66db:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    66de:	83 f8 ff             	cmp    eax,0xffffffff
    66e1:	74 28                	je     670b <rulemgr+0x219>
    66e3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    66e7:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    66ea:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66ee:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    66f1:	39 c2                	cmp    edx,eax
    66f3:	74 16                	je     670b <rulemgr+0x219>
    66f5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    66f9:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    66fc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6700:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    6703:	39 c2                	cmp    edx,eax
    6705:	0f 85 92 00 00 00    	jne    679d <rulemgr+0x2ab>
    670b:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    670f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6713:	48 89 d6             	mov    rsi,rdx
    6716:	48 89 c7             	mov    rdi,rax
    6719:	e8 16 fd ff ff       	call   6434 <rule_app>
    671e:	eb 7d                	jmp    679d <rulemgr+0x2ab>
    6720:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6724:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    6727:	83 f8 ff             	cmp    eax,0xffffffff
    672a:	74 12                	je     673e <rulemgr+0x24c>
    672c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6730:	8b 50 0c             	mov    edx,DWORD PTR [rax+0xc]
    6733:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6737:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    673a:	39 c2                	cmp    edx,eax
    673c:	75 5f                	jne    679d <rulemgr+0x2ab>
    673e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6742:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    6745:	83 f8 ff             	cmp    eax,0xffffffff
    6748:	74 12                	je     675c <rulemgr+0x26a>
    674a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    674e:	8b 50 08             	mov    edx,DWORD PTR [rax+0x8]
    6751:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6755:	8b 40 28             	mov    eax,DWORD PTR [rax+0x28]
    6758:	39 c2                	cmp    edx,eax
    675a:	75 41                	jne    679d <rulemgr+0x2ab>
    675c:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6760:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6764:	48 89 d6             	mov    rsi,rdx
    6767:	48 89 c7             	mov    rdi,rax
    676a:	e8 39 02 00 00       	call   69a8 <test_tcp_session_status>
    676f:	84 c0                	test   al,al
    6771:	74 2a                	je     679d <rulemgr+0x2ab>
    6773:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6777:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    677b:	48 89 d6             	mov    rsi,rdx
    677e:	48 89 c7             	mov    rdi,rax
    6781:	e8 75 fc ff ff       	call   63fb <test_encrypt>
    6786:	84 c0                	test   al,al
    6788:	74 13                	je     679d <rulemgr+0x2ab>
    678a:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    678e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6792:	48 89 d6             	mov    rsi,rdx
    6795:	48 89 c7             	mov    rdi,rax
    6798:	e8 97 fc ff ff       	call   6434 <rule_app>
    679d:	8b 05 71 a8 00 00    	mov    eax,DWORD PTR [rip+0xa871]        # 11014 <num_rules>
    67a3:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    67a6:	0f 8e 62 fd ff ff    	jle    650e <rulemgr+0x1c>
    67ac:	90                   	nop
    67ad:	90                   	nop
    67ae:	c9                   	leave  
    67af:	c3                   	ret    

00000000000067b0 <r_engine>:
    67b0:	f3 0f 1e fa          	endbr64 
    67b4:	55                   	push   rbp
    67b5:	48 89 e5             	mov    rbp,rsp
    67b8:	48 83 ec 10          	sub    rsp,0x10
    67bc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    67c0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    67c4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    67c8:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    67cb:	3d 80 00 00 00       	cmp    eax,0x80
    67d0:	0f 85 d9 00 00 00    	jne    68af <r_engine+0xff>
    67d6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67da:	0f b6 80 6f 03 00 00 	movzx  eax,BYTE PTR [rax+0x36f]
    67e1:	84 c0                	test   al,al
    67e3:	74 25                	je     680a <r_engine+0x5a>
    67e5:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    67e9:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    67ed:	0f b6 50 01          	movzx  edx,BYTE PTR [rax+0x1]
    67f1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67f5:	0f b6 80 73 03 00 00 	movzx  eax,BYTE PTR [rax+0x373]
    67fc:	38 c2                	cmp    dl,al
    67fe:	74 0a                	je     680a <r_engine+0x5a>
    6800:	b8 00 00 00 00       	mov    eax,0x0
    6805:	e9 9c 01 00 00       	jmp    69a6 <r_engine+0x1f6>
    680a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    680e:	0f b6 80 71 03 00 00 	movzx  eax,BYTE PTR [rax+0x371]
    6815:	84 c0                	test   al,al
    6817:	74 26                	je     683f <r_engine+0x8f>
    6819:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    681d:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    6821:	0f b7 50 04          	movzx  edx,WORD PTR [rax+0x4]
    6825:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6829:	0f b7 80 76 03 00 00 	movzx  eax,WORD PTR [rax+0x376]
    6830:	66 39 c2             	cmp    dx,ax
    6833:	74 0a                	je     683f <r_engine+0x8f>
    6835:	b8 00 00 00 00       	mov    eax,0x0
    683a:	e9 67 01 00 00       	jmp    69a6 <r_engine+0x1f6>
    683f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6843:	0f b6 80 70 03 00 00 	movzx  eax,BYTE PTR [rax+0x370]
    684a:	84 c0                	test   al,al
    684c:	74 26                	je     6874 <r_engine+0xc4>
    684e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6852:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    6856:	0f b7 50 06          	movzx  edx,WORD PTR [rax+0x6]
    685a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    685e:	0f b7 80 74 03 00 00 	movzx  eax,WORD PTR [rax+0x374]
    6865:	66 39 c2             	cmp    dx,ax
    6868:	74 0a                	je     6874 <r_engine+0xc4>
    686a:	b8 00 00 00 00       	mov    eax,0x0
    686f:	e9 32 01 00 00       	jmp    69a6 <r_engine+0x1f6>
    6874:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6878:	0f b6 80 6e 03 00 00 	movzx  eax,BYTE PTR [rax+0x36e]
    687f:	84 c0                	test   al,al
    6881:	0f 84 dc 00 00 00    	je     6963 <r_engine+0x1b3>
    6887:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    688b:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    688f:	0f b6 10             	movzx  edx,BYTE PTR [rax]
    6892:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6896:	0f b6 80 72 03 00 00 	movzx  eax,BYTE PTR [rax+0x372]
    689d:	38 c2                	cmp    dl,al
    689f:	0f 84 be 00 00 00    	je     6963 <r_engine+0x1b3>
    68a5:	b8 00 00 00 00       	mov    eax,0x0
    68aa:	e9 f7 00 00 00       	jmp    69a6 <r_engine+0x1f6>
    68af:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    68b3:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    68b6:	83 f8 7e             	cmp    eax,0x7e
    68b9:	0f 85 a4 00 00 00    	jne    6963 <r_engine+0x1b3>
    68bf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    68c3:	0f b6 80 51 03 00 00 	movzx  eax,BYTE PTR [rax+0x351]
    68ca:	84 c0                	test   al,al
    68cc:	74 2e                	je     68fc <r_engine+0x14c>
    68ce:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    68d2:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    68d6:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    68d9:	89 c7                	mov    edi,eax
    68db:	e8 b0 bf ff ff       	call   2890 <ntohl@plt>
    68e0:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    68e4:	0f b7 92 5c 03 00 00 	movzx  edx,WORD PTR [rdx+0x35c]
    68eb:	0f b7 d2             	movzx  edx,dx
    68ee:	39 d0                	cmp    eax,edx
    68f0:	74 0a                	je     68fc <r_engine+0x14c>
    68f2:	b8 00 00 00 00       	mov    eax,0x0
    68f7:	e9 aa 00 00 00       	jmp    69a6 <r_engine+0x1f6>
    68fc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6900:	0f b6 80 50 03 00 00 	movzx  eax,BYTE PTR [rax+0x350]
    6907:	84 c0                	test   al,al
    6909:	74 29                	je     6934 <r_engine+0x184>
    690b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    690f:	48 8d 90 53 03 00 00 	lea    rdx,[rax+0x353]
    6916:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    691a:	48 83 c0 68          	add    rax,0x68
    691e:	48 89 d6             	mov    rsi,rdx
    6921:	48 89 c7             	mov    rdi,rax
    6924:	e8 87 bd ff ff       	call   26b0 <strcmp@plt>
    6929:	85 c0                	test   eax,eax
    692b:	74 07                	je     6934 <r_engine+0x184>
    692d:	b8 00 00 00 00       	mov    eax,0x0
    6932:	eb 72                	jmp    69a6 <r_engine+0x1f6>
    6934:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6938:	0f b6 80 52 03 00 00 	movzx  eax,BYTE PTR [rax+0x352]
    693f:	84 c0                	test   al,al
    6941:	74 20                	je     6963 <r_engine+0x1b3>
    6943:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6947:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    694b:	8b 50 04             	mov    edx,DWORD PTR [rax+0x4]
    694e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6952:	8b 80 60 03 00 00    	mov    eax,DWORD PTR [rax+0x360]
    6958:	39 c2                	cmp    edx,eax
    695a:	74 07                	je     6963 <r_engine+0x1b3>
    695c:	b8 00 00 00 00       	mov    eax,0x0
    6961:	eb 43                	jmp    69a6 <r_engine+0x1f6>
    6963:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6967:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    696b:	48 85 c0             	test   rax,rax
    696e:	74 31                	je     69a1 <r_engine+0x1f1>
    6970:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6974:	0f b6 80 69 03 00 00 	movzx  eax,BYTE PTR [rax+0x369]
    697b:	84 c0                	test   al,al
    697d:	74 22                	je     69a1 <r_engine+0x1f1>
    697f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6983:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    6987:	0f b6 50 08          	movzx  edx,BYTE PTR [rax+0x8]
    698b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    698f:	0f b6 80 6c 03 00 00 	movzx  eax,BYTE PTR [rax+0x36c]
    6996:	38 c2                	cmp    dl,al
    6998:	74 07                	je     69a1 <r_engine+0x1f1>
    699a:	b8 00 00 00 00       	mov    eax,0x0
    699f:	eb 05                	jmp    69a6 <r_engine+0x1f6>
    69a1:	b8 01 00 00 00       	mov    eax,0x1
    69a6:	c9                   	leave  
    69a7:	c3                   	ret    

00000000000069a8 <test_tcp_session_status>:
    69a8:	f3 0f 1e fa          	endbr64 
    69ac:	55                   	push   rbp
    69ad:	48 89 e5             	mov    rbp,rsp
    69b0:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    69b4:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    69b8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    69bc:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    69c2:	83 f8 7e             	cmp    eax,0x7e
    69c5:	75 34                	jne    69fb <test_tcp_session_status+0x53>
    69c7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    69cb:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    69ce:	83 f8 7e             	cmp    eax,0x7e
    69d1:	75 28                	jne    69fb <test_tcp_session_status+0x53>
    69d3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    69d7:	8b 80 48 03 00 00    	mov    eax,DWORD PTR [rax+0x348]
    69dd:	83 f8 01             	cmp    eax,0x1
    69e0:	75 12                	jne    69f4 <test_tcp_session_status+0x4c>
    69e2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    69e6:	8b 40 70             	mov    eax,DWORD PTR [rax+0x70]
    69e9:	85 c0                	test   eax,eax
    69eb:	75 07                	jne    69f4 <test_tcp_session_status+0x4c>
    69ed:	b8 00 00 00 00       	mov    eax,0x0
    69f2:	eb 0c                	jmp    6a00 <test_tcp_session_status+0x58>
    69f4:	b8 01 00 00 00       	mov    eax,0x1
    69f9:	eb 05                	jmp    6a00 <test_tcp_session_status+0x58>
    69fb:	b8 01 00 00 00       	mov    eax,0x1
    6a00:	5d                   	pop    rbp
    6a01:	c3                   	ret    

0000000000006a02 <main>:
    6a02:	f3 0f 1e fa          	endbr64 
    6a06:	55                   	push   rbp
    6a07:	48 89 e5             	mov    rbp,rsp
    6a0a:	48 81 ec 40 08 00 00 	sub    rsp,0x840
    6a11:	89 bd cc f7 ff ff    	mov    DWORD PTR [rbp-0x834],edi
    6a17:	48 89 b5 c0 f7 ff ff 	mov    QWORD PTR [rbp-0x840],rsi
    6a1e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6a25:	00 00 
    6a27:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    6a2b:	31 c0                	xor    eax,eax
    6a2d:	b8 00 00 00 00       	mov    eax,0x0
    6a32:	e8 4d 4e 00 00       	call   b884 <load_fn_mem_map>
    6a37:	48 8d 35 aa 02 00 00 	lea    rsi,[rip+0x2aa]        # 6ce8 <sigint_processor>
    6a3e:	bf 02 00 00 00       	mov    edi,0x2
    6a43:	e8 78 bc ff ff       	call   26c0 <signal@plt>
    6a48:	48 8d 05 b8 4a 00 00 	lea    rax,[rip+0x4ab8]        # b507 <crash_handler>
    6a4f:	48 89 c6             	mov    rsi,rax
    6a52:	bf 0b 00 00 00       	mov    edi,0xb
    6a57:	e8 64 bc ff ff       	call   26c0 <signal@plt>
    6a5c:	b8 00 00 00 00       	mov    eax,0x0
    6a61:	e8 b8 08 00 00       	call   731e <print_logo>
    6a66:	b8 00 00 00 00       	mov    eax,0x0
    6a6b:	e8 f7 06 00 00       	call   7167 <print_cpu_info>
    6a70:	c7 05 da 12 10 00 01 	mov    DWORD PTR [rip+0x1012da],0x1        # 107d54 <is_running>
    6a77:	00 00 00 
    6a7a:	bf 00 00 00 00       	mov    edi,0x0
    6a7f:	e8 7c bc ff ff       	call   2700 <time@plt>
    6a84:	48 89 05 dd 14 10 00 	mov    QWORD PTR [rip+0x1014dd],rax        # 107f68 <last_clean_time>
    6a8b:	83 bd cc f7 ff ff 01 	cmp    DWORD PTR [rbp-0x834],0x1
    6a92:	0f 85 e3 00 00 00    	jne    6b7b <main+0x179>
    6a98:	b8 00 00 00 00       	mov    eax,0x0
    6a9d:	e8 9b 06 00 00       	call   713d <print_help_and_exit>
    6aa2:	e9 d4 00 00 00       	jmp    6b7b <main+0x179>
    6aa7:	8b 85 dc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x824]
    6aad:	83 e8 64             	sub    eax,0x64
    6ab0:	83 f8 10             	cmp    eax,0x10
    6ab3:	0f 87 9e 00 00 00    	ja     6b57 <main+0x155>
    6ab9:	89 c0                	mov    eax,eax
    6abb:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    6ac2:	00 
    6ac3:	48 8d 05 da 64 00 00 	lea    rax,[rip+0x64da]        # cfa4 <_IO_stdin_used+0xfa4>
    6aca:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    6acd:	48 98                	cdqe   
    6acf:	48 8d 15 ce 64 00 00 	lea    rdx,[rip+0x64ce]        # cfa4 <_IO_stdin_used+0xfa4>
    6ad6:	48 01 d0             	add    rax,rdx
    6ad9:	3e ff e0             	notrack jmp rax
    6adc:	c6 05 df 36 10 00 01 	mov    BYTE PTR [rip+0x1036df],0x1        # 10a1c2 <debug_mode>
    6ae3:	e9 93 00 00 00       	jmp    6b7b <main+0x179>
    6ae8:	b8 00 00 00 00       	mov    eax,0x0
    6aed:	e8 4b 06 00 00       	call   713d <print_help_and_exit>
    6af2:	e9 84 00 00 00       	jmp    6b7b <main+0x179>
    6af7:	48 8b 05 6a a5 00 00 	mov    rax,QWORD PTR [rip+0xa56a]        # 11068 <optarg@@GLIBC_2.2.5>
    6afe:	48 89 85 e0 f7 ff ff 	mov    QWORD PTR [rbp-0x820],rax
    6b05:	eb 74                	jmp    6b7b <main+0x179>
    6b07:	c6 05 4b 12 10 00 01 	mov    BYTE PTR [rip+0x10124b],0x1        # 107d59 <packet_print>
    6b0e:	eb 6b                	jmp    6b7b <main+0x179>
    6b10:	c6 05 8d 0d 10 00 01 	mov    BYTE PTR [rip+0x100d8d],0x1        # 1078a4 <quiet_exit>
    6b17:	eb 62                	jmp    6b7b <main+0x179>
    6b19:	48 8d 3d 00 63 00 00 	lea    rdi,[rip+0x6300]        # ce20 <_IO_stdin_used+0xe20>
    6b20:	e8 fb b9 ff ff       	call   2520 <puts@plt>
    6b25:	bf 0a 00 00 00       	mov    edi,0xa
    6b2a:	e8 71 bd ff ff       	call   28a0 <sleep@plt>
    6b2f:	c6 05 1a 12 10 00 01 	mov    BYTE PTR [rip+0x10121a],0x1        # 107d50 <demo_mode>
    6b36:	eb 43                	jmp    6b7b <main+0x179>
    6b38:	48 8d 3d 21 63 00 00 	lea    rdi,[rip+0x6321]        # ce60 <_IO_stdin_used+0xe60>
    6b3f:	e8 dc b9 ff ff       	call   2520 <puts@plt>
    6b44:	bf 0a 00 00 00       	mov    edi,0xa
    6b49:	e8 52 bd ff ff       	call   28a0 <sleep@plt>
    6b4e:	c6 05 03 12 10 00 01 	mov    BYTE PTR [rip+0x101203],0x1        # 107d58 <in_test_mode>
    6b55:	eb 24                	jmp    6b7b <main+0x179>
    6b57:	8b 85 dc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x824]
    6b5d:	89 c6                	mov    esi,eax
    6b5f:	48 8d 3d 2e 63 00 00 	lea    rdi,[rip+0x632e]        # ce94 <_IO_stdin_used+0xe94>
    6b66:	b8 00 00 00 00       	mov    eax,0x0
    6b6b:	e8 80 ba ff ff       	call   25f0 <printf@plt>
    6b70:	b8 00 00 00 00       	mov    eax,0x0
    6b75:	e8 c3 05 00 00       	call   713d <print_help_and_exit>
    6b7a:	90                   	nop
    6b7b:	48 8b 8d c0 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x840]
    6b82:	8b 85 cc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x834]
    6b88:	48 8d 15 1b 63 00 00 	lea    rdx,[rip+0x631b]        # ceaa <_IO_stdin_used+0xeaa>
    6b8f:	48 89 ce             	mov    rsi,rcx
    6b92:	89 c7                	mov    edi,eax
    6b94:	e8 67 bc ff ff       	call   2800 <getopt@plt>
    6b99:	89 85 dc f7 ff ff    	mov    DWORD PTR [rbp-0x824],eax
    6b9f:	83 bd dc f7 ff ff ff 	cmp    DWORD PTR [rbp-0x824],0xffffffff
    6ba6:	0f 85 fb fe ff ff    	jne    6aa7 <main+0xa5>
    6bac:	48 8d 3d 00 63 00 00 	lea    rdi,[rip+0x6300]        # ceb3 <_IO_stdin_used+0xeb3>
    6bb3:	e8 82 f6 ff ff       	call   623a <deny_conf_parser>
    6bb8:	48 8d 3d 09 63 00 00 	lea    rdi,[rip+0x6309]        # cec8 <_IO_stdin_used+0xec8>
    6bbf:	e8 5c b9 ff ff       	call   2520 <puts@plt>
    6bc4:	48 8d 3d 38 63 00 00 	lea    rdi,[rip+0x6338]        # cf03 <_IO_stdin_used+0xf03>
    6bcb:	e8 3b ee ff ff       	call   5a0b <rule_library_parser>
    6bd0:	48 8d 3d 42 63 00 00 	lea    rdi,[rip+0x6342]        # cf19 <_IO_stdin_used+0xf19>
    6bd7:	e8 44 b9 ff ff       	call   2520 <puts@plt>
    6bdc:	b8 00 00 00 00       	mov    eax,0x0
    6be1:	e8 3d 3e 00 00       	call   aa23 <rule_processor>
    6be6:	48 8b 85 e0 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x820]
    6bed:	48 89 c6             	mov    rsi,rax
    6bf0:	48 8d 3d 39 63 00 00 	lea    rdi,[rip+0x6339]        # cf30 <_IO_stdin_used+0xf30>
    6bf7:	b8 00 00 00 00       	mov    eax,0x0
    6bfc:	e8 ef b9 ff ff       	call   25f0 <printf@plt>
    6c01:	48 c7 85 f0 f7 ff ff 	mov    QWORD PTR [rbp-0x810],0x0
    6c08:	00 00 00 00 
    6c0c:	48 c7 85 f8 f7 ff ff 	mov    QWORD PTR [rbp-0x808],0x0
    6c13:	00 00 00 00 
    6c17:	48 8d 95 00 f8 ff ff 	lea    rdx,[rbp-0x800]
    6c1e:	b8 00 00 00 00       	mov    eax,0x0
    6c23:	b9 fd 00 00 00       	mov    ecx,0xfd
    6c28:	48 89 d7             	mov    rdi,rdx
    6c2b:	f3 48 ab             	rep stos QWORD PTR es:[rdi],rax
    6c2e:	48 89 fa             	mov    rdx,rdi
    6c31:	89 02                	mov    DWORD PTR [rdx],eax
    6c33:	48 83 c2 04          	add    rdx,0x4
    6c37:	66 89 02             	mov    WORD PTR [rdx],ax
    6c3a:	48 83 c2 02          	add    rdx,0x2
    6c3e:	48 8d 95 f0 f7 ff ff 	lea    rdx,[rbp-0x810]
    6c45:	48 8b 85 e0 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x820]
    6c4c:	49 89 d0             	mov    r8,rdx
    6c4f:	b9 64 00 00 00       	mov    ecx,0x64
    6c54:	ba 01 00 00 00       	mov    edx,0x1
    6c59:	be 00 04 00 00       	mov    esi,0x400
    6c5e:	48 89 c7             	mov    rdi,rax
    6c61:	e8 ea bb ff ff       	call   2850 <pcap_open_live@plt>
    6c66:	48 89 85 e8 f7 ff ff 	mov    QWORD PTR [rbp-0x818],rax
    6c6d:	48 83 bd e8 f7 ff ff 	cmp    QWORD PTR [rbp-0x818],0x0
    6c74:	00 
    6c75:	75 16                	jne    6c8d <main+0x28b>
    6c77:	48 8d 3d d3 62 00 00 	lea    rdi,[rip+0x62d3]        # cf51 <_IO_stdin_used+0xf51>
    6c7e:	e8 3d bb ff ff       	call   27c0 <perror@plt>
    6c83:	bf 01 00 00 00       	mov    edi,0x1
    6c88:	e8 f3 bb ff ff       	call   2880 <exit@plt>
    6c8d:	b8 00 00 00 00       	mov    eax,0x0
    6c92:	e8 ca 45 00 00       	call   b261 <collect_scripts>
    6c97:	b8 00 00 00 00       	mov    eax,0x0
    6c9c:	e8 94 06 00 00       	call   7335 <start_nsh_server>
    6ca1:	48 8d 3d c8 62 00 00 	lea    rdi,[rip+0x62c8]        # cf70 <_IO_stdin_used+0xf70>
    6ca8:	e8 73 b8 ff ff       	call   2520 <puts@plt>
    6cad:	48 8b 85 e8 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x818]
    6cb4:	b9 00 00 00 00       	mov    ecx,0x0
    6cb9:	48 8d 15 43 bd ff ff 	lea    rdx,[rip+0xffffffffffffbd43]        # 2a03 <pktmgr>
    6cc0:	be ff ff ff ff       	mov    esi,0xffffffff
    6cc5:	48 89 c7             	mov    rdi,rax
    6cc8:	e8 63 ba ff ff       	call   2730 <pcap_loop@plt>
    6ccd:	b8 00 00 00 00       	mov    eax,0x0
    6cd2:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    6cd6:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
    6cdd:	00 00 
    6cdf:	74 05                	je     6ce6 <main+0x2e4>
    6ce1:	e8 ca b8 ff ff       	call   25b0 <__stack_chk_fail@plt>
    6ce6:	c9                   	leave  
    6ce7:	c3                   	ret    

0000000000006ce8 <sigint_processor>:
    6ce8:	f3 0f 1e fa          	endbr64 
    6cec:	55                   	push   rbp
    6ced:	48 89 e5             	mov    rbp,rsp
    6cf0:	41 54                	push   r12
    6cf2:	53                   	push   rbx
    6cf3:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    6cfa:	89 bd bc fe ff ff    	mov    DWORD PTR [rbp-0x144],edi
    6d00:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6d07:	00 00 
    6d09:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    6d0d:	31 c0                	xor    eax,eax
    6d0f:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    6d16:	00 00 00 
    6d19:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    6d20:	48 89 c7             	mov    rdi,rax
    6d23:	e8 56 c7 ff ff       	call   347e <cb_get_formatted_time>
    6d28:	48 8d 95 e0 fe ff ff 	lea    rdx,[rbp-0x120]
    6d2f:	8b 85 bc fe ff ff    	mov    eax,DWORD PTR [rbp-0x144]
    6d35:	89 c6                	mov    esi,eax
    6d37:	48 8d 3d aa 62 00 00 	lea    rdi,[rip+0x62aa]        # cfe8 <_IO_stdin_used+0xfe8>
    6d3e:	b8 00 00 00 00       	mov    eax,0x0
    6d43:	e8 a8 b8 ff ff       	call   25f0 <printf@plt>
    6d48:	48 8d 3d be 62 00 00 	lea    rdi,[rip+0x62be]        # d00d <_IO_stdin_used+0x100d>
    6d4f:	e8 6c ba ff ff       	call   27c0 <perror@plt>
    6d54:	0f b6 05 49 0b 10 00 	movzx  eax,BYTE PTR [rip+0x100b49]        # 1078a4 <quiet_exit>
    6d5b:	83 f0 01             	xor    eax,0x1
    6d5e:	84 c0                	test   al,al
    6d60:	0f 84 2e 02 00 00    	je     6f94 <sigint_processor+0x2ac>
    6d66:	8b 05 18 a3 00 00    	mov    eax,DWORD PTR [rip+0xa318]        # 11084 <total_pkt_captured>
    6d6c:	89 c6                	mov    esi,eax
    6d6e:	48 8d 3d 99 62 00 00 	lea    rdi,[rip+0x6299]        # d00e <_IO_stdin_used+0x100e>
    6d75:	b8 00 00 00 00       	mov    eax,0x0
    6d7a:	e8 71 b8 ff ff       	call   25f0 <printf@plt>
    6d7f:	48 8d 3d a2 62 00 00 	lea    rdi,[rip+0x62a2]        # d028 <_IO_stdin_used+0x1028>
    6d86:	e8 95 b7 ff ff       	call   2520 <puts@plt>
    6d8b:	c7 85 c4 fe ff ff 00 	mov    DWORD PTR [rbp-0x13c],0x0
    6d92:	00 00 00 
    6d95:	e9 e8 01 00 00       	jmp    6f82 <sigint_processor+0x29a>
    6d9a:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6da0:	48 63 d0             	movsxd rdx,eax
    6da3:	48 89 d0             	mov    rax,rdx
    6da6:	48 c1 e0 02          	shl    rax,0x2
    6daa:	48 01 d0             	add    rax,rdx
    6dad:	48 c1 e0 03          	shl    rax,0x3
    6db1:	48 01 d0             	add    rax,rdx
    6db4:	48 c1 e0 04          	shl    rax,0x4
    6db8:	48 89 c2             	mov    rdx,rax
    6dbb:	48 8d 05 4e c5 0e 00 	lea    rax,[rip+0xec54e]        # f3310 <watchlist+0x270>
    6dc2:	44 8b 1c 02          	mov    r11d,DWORD PTR [rdx+rax*1]
    6dc6:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6dcc:	48 63 d0             	movsxd rdx,eax
    6dcf:	48 89 d0             	mov    rax,rdx
    6dd2:	48 c1 e0 02          	shl    rax,0x2
    6dd6:	48 01 d0             	add    rax,rdx
    6dd9:	48 c1 e0 03          	shl    rax,0x3
    6ddd:	48 01 d0             	add    rax,rdx
    6de0:	48 c1 e0 04          	shl    rax,0x4
    6de4:	48 89 c2             	mov    rdx,rax
    6de7:	48 8d 05 16 c5 0e 00 	lea    rax,[rip+0xec516]        # f3304 <watchlist+0x264>
    6dee:	44 8b 14 02          	mov    r10d,DWORD PTR [rdx+rax*1]
    6df2:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6df8:	48 63 d0             	movsxd rdx,eax
    6dfb:	48 89 d0             	mov    rax,rdx
    6dfe:	48 c1 e0 02          	shl    rax,0x2
    6e02:	48 01 d0             	add    rax,rdx
    6e05:	48 c1 e0 03          	shl    rax,0x3
    6e09:	48 01 d0             	add    rax,rdx
    6e0c:	48 c1 e0 04          	shl    rax,0x4
    6e10:	48 89 c2             	mov    rdx,rax
    6e13:	48 8d 05 f2 c4 0e 00 	lea    rax,[rip+0xec4f2]        # f330c <watchlist+0x26c>
    6e1a:	44 8b 0c 02          	mov    r9d,DWORD PTR [rdx+rax*1]
    6e1e:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6e24:	48 63 d0             	movsxd rdx,eax
    6e27:	48 89 d0             	mov    rax,rdx
    6e2a:	48 c1 e0 02          	shl    rax,0x2
    6e2e:	48 01 d0             	add    rax,rdx
    6e31:	48 c1 e0 03          	shl    rax,0x3
    6e35:	48 01 d0             	add    rax,rdx
    6e38:	48 c1 e0 04          	shl    rax,0x4
    6e3c:	48 89 c2             	mov    rdx,rax
    6e3f:	48 8d 05 ba c4 0e 00 	lea    rax,[rip+0xec4ba]        # f3300 <watchlist+0x260>
    6e46:	44 8b 04 02          	mov    r8d,DWORD PTR [rdx+rax*1]
    6e4a:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6e50:	48 63 d0             	movsxd rdx,eax
    6e53:	48 89 d0             	mov    rax,rdx
    6e56:	48 c1 e0 02          	shl    rax,0x2
    6e5a:	48 01 d0             	add    rax,rdx
    6e5d:	48 c1 e0 03          	shl    rax,0x3
    6e61:	48 01 d0             	add    rax,rdx
    6e64:	48 c1 e0 04          	shl    rax,0x4
    6e68:	48 89 c2             	mov    rdx,rax
    6e6b:	48 8d 05 96 c4 0e 00 	lea    rax,[rip+0xec496]        # f3308 <watchlist+0x268>
    6e72:	8b 3c 02             	mov    edi,DWORD PTR [rdx+rax*1]
    6e75:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6e7b:	48 63 d0             	movsxd rdx,eax
    6e7e:	48 89 d0             	mov    rax,rdx
    6e81:	48 c1 e0 02          	shl    rax,0x2
    6e85:	48 01 d0             	add    rax,rdx
    6e88:	48 c1 e0 03          	shl    rax,0x3
    6e8c:	48 01 d0             	add    rax,rdx
    6e8f:	48 c1 e0 04          	shl    rax,0x4
    6e93:	48 89 c2             	mov    rdx,rax
    6e96:	48 8d 05 5f c4 0e 00 	lea    rax,[rip+0xec45f]        # f32fc <watchlist+0x25c>
    6e9d:	44 8b 24 02          	mov    r12d,DWORD PTR [rdx+rax*1]
    6ea1:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6ea7:	48 63 d0             	movsxd rdx,eax
    6eaa:	48 89 d0             	mov    rax,rdx
    6ead:	48 c1 e0 02          	shl    rax,0x2
    6eb1:	48 01 d0             	add    rax,rdx
    6eb4:	48 c1 e0 03          	shl    rax,0x3
    6eb8:	48 01 d0             	add    rax,rdx
    6ebb:	48 c1 e0 04          	shl    rax,0x4
    6ebf:	48 89 c2             	mov    rdx,rax
    6ec2:	48 8d 05 53 c4 0e 00 	lea    rax,[rip+0xec453]        # f331c <watchlist+0x27c>
    6ec9:	8b 1c 02             	mov    ebx,DWORD PTR [rdx+rax*1]
    6ecc:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6ed2:	48 63 d0             	movsxd rdx,eax
    6ed5:	48 89 d0             	mov    rax,rdx
    6ed8:	48 c1 e0 02          	shl    rax,0x2
    6edc:	48 01 d0             	add    rax,rdx
    6edf:	48 c1 e0 03          	shl    rax,0x3
    6ee3:	48 01 d0             	add    rax,rdx
    6ee6:	48 c1 e0 04          	shl    rax,0x4
    6eea:	48 89 c2             	mov    rdx,rax
    6eed:	48 8d 05 2c c4 0e 00 	lea    rax,[rip+0xec42c]        # f3320 <watchlist+0x280>
    6ef4:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
    6ef7:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6efd:	48 63 d0             	movsxd rdx,eax
    6f00:	48 89 d0             	mov    rax,rdx
    6f03:	48 c1 e0 02          	shl    rax,0x2
    6f07:	48 01 d0             	add    rax,rdx
    6f0a:	48 c1 e0 03          	shl    rax,0x3
    6f0e:	48 01 d0             	add    rax,rdx
    6f11:	48 c1 e0 04          	shl    rax,0x4
    6f15:	48 89 c2             	mov    rdx,rax
    6f18:	48 8d 05 d9 c3 0e 00 	lea    rax,[rip+0xec3d9]        # f32f8 <watchlist+0x258>
    6f1f:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
    6f22:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6f28:	48 63 d0             	movsxd rdx,eax
    6f2b:	48 89 d0             	mov    rax,rdx
    6f2e:	48 c1 e0 02          	shl    rax,0x2
    6f32:	48 01 d0             	add    rax,rdx
    6f35:	48 c1 e0 03          	shl    rax,0x3
    6f39:	48 01 d0             	add    rax,rdx
    6f3c:	48 c1 e0 04          	shl    rax,0x4
    6f40:	48 8d 15 59 c1 0e 00 	lea    rdx,[rip+0xec159]        # f30a0 <watchlist>
    6f47:	48 01 d0             	add    rax,rdx
    6f4a:	48 83 c0 08          	add    rax,0x8
    6f4e:	48 83 ec 08          	sub    rsp,0x8
    6f52:	41 53                	push   r11
    6f54:	41 52                	push   r10
    6f56:	41 51                	push   r9
    6f58:	41 50                	push   r8
    6f5a:	57                   	push   rdi
    6f5b:	45 89 e1             	mov    r9d,r12d
    6f5e:	41 89 d8             	mov    r8d,ebx
    6f61:	89 f2                	mov    edx,esi
    6f63:	48 89 c6             	mov    rsi,rax
    6f66:	48 8d 3d f3 60 00 00 	lea    rdi,[rip+0x60f3]        # d060 <_IO_stdin_used+0x1060>
    6f6d:	b8 00 00 00 00       	mov    eax,0x0
    6f72:	e8 79 b6 ff ff       	call   25f0 <printf@plt>
    6f77:	48 83 c4 30          	add    rsp,0x30
    6f7b:	83 85 c4 fe ff ff 01 	add    DWORD PTR [rbp-0x13c],0x1
    6f82:	8b 05 90 a0 00 00    	mov    eax,DWORD PTR [rip+0xa090]        # 11018 <watchlist_num>
    6f88:	39 85 c4 fe ff ff    	cmp    DWORD PTR [rbp-0x13c],eax
    6f8e:	0f 8e 06 fe ff ff    	jle    6d9a <sigint_processor+0xb2>
    6f94:	48 8d 35 65 61 00 00 	lea    rsi,[rip+0x6165]        # d100 <_IO_stdin_used+0x1100>
    6f9b:	48 8d 3d 60 61 00 00 	lea    rdi,[rip+0x6160]        # d102 <_IO_stdin_used+0x1102>
    6fa2:	e8 09 b8 ff ff       	call   27b0 <fopen@plt>
    6fa7:	48 89 85 d8 fe ff ff 	mov    QWORD PTR [rbp-0x128],rax
    6fae:	48 83 bd d8 fe ff ff 	cmp    QWORD PTR [rbp-0x128],0x0
    6fb5:	00 
    6fb6:	0f 85 9d 00 00 00    	jne    7059 <sigint_processor+0x371>
    6fbc:	48 8d 3d 5d 61 00 00 	lea    rdi,[rip+0x615d]        # d120 <_IO_stdin_used+0x1120>
    6fc3:	e8 58 b5 ff ff       	call   2520 <puts@plt>
    6fc8:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    6fcf:	48 89 c7             	mov    rdi,rax
    6fd2:	e8 99 b5 ff ff       	call   2570 <fclose@plt>
    6fd7:	c7 85 c8 fe ff ff 00 	mov    DWORD PTR [rbp-0x138],0x0
    6fde:	00 00 00 
    6fe1:	eb 63                	jmp    7046 <sigint_processor+0x35e>
    6fe3:	8b 85 c8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x138]
    6fe9:	48 63 d0             	movsxd rdx,eax
    6fec:	48 89 d0             	mov    rax,rdx
    6fef:	48 c1 e0 04          	shl    rax,0x4
    6ff3:	48 01 d0             	add    rax,rdx
    6ff6:	48 01 c0             	add    rax,rax
    6ff9:	48 8d 50 10          	lea    rdx,[rax+0x10]
    6ffd:	48 8d 05 9c 0f 10 00 	lea    rax,[rip+0x100f9c]        # 107fa0 <arpcache>
    7004:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    7008:	8b 85 c8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x138]
    700e:	48 63 d0             	movsxd rdx,eax
    7011:	48 89 d0             	mov    rax,rdx
    7014:	48 c1 e0 04          	shl    rax,0x4
    7018:	48 01 d0             	add    rax,rdx
    701b:	48 01 c0             	add    rax,rax
    701e:	48 8d 15 7b 0f 10 00 	lea    rdx,[rip+0x100f7b]        # 107fa0 <arpcache>
    7025:	48 01 d0             	add    rax,rdx
    7028:	48 89 ca             	mov    rdx,rcx
    702b:	48 89 c6             	mov    rsi,rax
    702e:	48 8d 3d 32 61 00 00 	lea    rdi,[rip+0x6132]        # d167 <_IO_stdin_used+0x1167>
    7035:	b8 00 00 00 00       	mov    eax,0x0
    703a:	e8 b1 b5 ff ff       	call   25f0 <printf@plt>
    703f:	83 85 c8 fe ff ff 01 	add    DWORD PTR [rbp-0x138],0x1
    7046:	8b 05 d0 9f 00 00    	mov    eax,DWORD PTR [rip+0x9fd0]        # 1101c <arp_entries>
    704c:	39 85 c8 fe ff ff    	cmp    DWORD PTR [rbp-0x138],eax
    7052:	7e 8f                	jle    6fe3 <sigint_processor+0x2fb>
    7054:	e9 da 00 00 00       	jmp    7133 <sigint_processor+0x44b>
    7059:	c7 85 cc fe ff ff 00 	mov    DWORD PTR [rbp-0x134],0x0
    7060:	00 00 00 
    7063:	eb 67                	jmp    70cc <sigint_processor+0x3e4>
    7065:	8b 85 cc fe ff ff    	mov    eax,DWORD PTR [rbp-0x134]
    706b:	48 63 d0             	movsxd rdx,eax
    706e:	48 89 d0             	mov    rax,rdx
    7071:	48 c1 e0 04          	shl    rax,0x4
    7075:	48 01 d0             	add    rax,rdx
    7078:	48 01 c0             	add    rax,rax
    707b:	48 8d 50 10          	lea    rdx,[rax+0x10]
    707f:	48 8d 05 1a 0f 10 00 	lea    rax,[rip+0x100f1a]        # 107fa0 <arpcache>
    7086:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    708a:	8b 85 cc fe ff ff    	mov    eax,DWORD PTR [rbp-0x134]
    7090:	48 63 d0             	movsxd rdx,eax
    7093:	48 89 d0             	mov    rax,rdx
    7096:	48 c1 e0 04          	shl    rax,0x4
    709a:	48 01 d0             	add    rax,rdx
    709d:	48 01 c0             	add    rax,rax
    70a0:	48 8d 15 f9 0e 10 00 	lea    rdx,[rip+0x100ef9]        # 107fa0 <arpcache>
    70a7:	48 01 c2             	add    rdx,rax
    70aa:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    70b1:	48 8d 35 b9 60 00 00 	lea    rsi,[rip+0x60b9]        # d171 <_IO_stdin_used+0x1171>
    70b8:	48 89 c7             	mov    rdi,rax
    70bb:	b8 00 00 00 00       	mov    eax,0x0
    70c0:	e8 0b b6 ff ff       	call   26d0 <fprintf@plt>
    70c5:	83 85 cc fe ff ff 01 	add    DWORD PTR [rbp-0x134],0x1
    70cc:	8b 05 4a 9f 00 00    	mov    eax,DWORD PTR [rip+0x9f4a]        # 1101c <arp_entries>
    70d2:	39 85 cc fe ff ff    	cmp    DWORD PTR [rbp-0x134],eax
    70d8:	7e 8b                	jle    7065 <sigint_processor+0x37d>
    70da:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    70e1:	48 89 c7             	mov    rdi,rax
    70e4:	e8 87 b4 ff ff       	call   2570 <fclose@plt>
    70e9:	c7 85 d0 fe ff ff 00 	mov    DWORD PTR [rbp-0x130],0x0
    70f0:	00 00 00 
    70f3:	eb 2f                	jmp    7124 <sigint_processor+0x43c>
    70f5:	8b 85 d0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x130]
    70fb:	48 98                	cdqe   
    70fd:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    7104:	00 
    7105:	48 8d 05 54 0c 10 00 	lea    rax,[rip+0x100c54]        # 107d60 <threads>
    710c:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    7110:	be 00 00 00 00       	mov    esi,0x0
    7115:	48 89 c7             	mov    rdi,rax
    7118:	e8 c3 b6 ff ff       	call   27e0 <pthread_join@plt>
    711d:	83 85 d0 fe ff ff 01 	add    DWORD PTR [rbp-0x130],0x1
    7124:	8b 05 56 9f 00 00    	mov    eax,DWORD PTR [rip+0x9f56]        # 11080 <thread_count>
    712a:	39 85 d0 fe ff ff    	cmp    DWORD PTR [rbp-0x130],eax
    7130:	7c c3                	jl     70f5 <sigint_processor+0x40d>
    7132:	90                   	nop
    7133:	bf 00 00 00 00       	mov    edi,0x0
    7138:	e8 43 b7 ff ff       	call   2880 <exit@plt>

000000000000713d <print_help_and_exit>:
    713d:	f3 0f 1e fa          	endbr64 
    7141:	55                   	push   rbp
    7142:	48 89 e5             	mov    rbp,rsp
    7145:	48 8d 35 2c 60 00 00 	lea    rsi,[rip+0x602c]        # d178 <_IO_stdin_used+0x1178>
    714c:	48 8d 3d 2d 60 00 00 	lea    rdi,[rip+0x602d]        # d180 <_IO_stdin_used+0x1180>
    7153:	b8 00 00 00 00       	mov    eax,0x0
    7158:	e8 93 b4 ff ff       	call   25f0 <printf@plt>
    715d:	bf 00 00 00 00       	mov    edi,0x0
    7162:	e8 19 b7 ff ff       	call   2880 <exit@plt>

0000000000007167 <print_cpu_info>:
    7167:	f3 0f 1e fa          	endbr64 
    716b:	55                   	push   rbp
    716c:	48 89 e5             	mov    rbp,rsp
    716f:	53                   	push   rbx
    7170:	48 81 ec 48 02 00 00 	sub    rsp,0x248
    7177:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    717e:	00 00 
    7180:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    7184:	31 c0                	xor    eax,eax
    7186:	48 8d 35 7a 60 00 00 	lea    rsi,[rip+0x607a]        # d207 <_IO_stdin_used+0x1207>
    718d:	48 8d 3d 76 60 00 00 	lea    rdi,[rip+0x6076]        # d20a <_IO_stdin_used+0x120a>
    7194:	e8 17 b6 ff ff       	call   27b0 <fopen@plt>
    7199:	48 89 85 d8 fd ff ff 	mov    QWORD PTR [rbp-0x228],rax
    71a0:	48 c7 85 c8 fd ff ff 	mov    QWORD PTR [rbp-0x238],0x0
    71a7:	00 00 00 00 
    71ab:	48 c7 85 d0 fd ff ff 	mov    QWORD PTR [rbp-0x230],0x0
    71b2:	00 00 00 00 
    71b6:	c7 85 bc fd ff ff 00 	mov    DWORD PTR [rbp-0x244],0x0
    71bd:	00 00 00 
    71c0:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    71c7:	ba 00 02 00 00       	mov    edx,0x200
    71cc:	be 00 00 00 00       	mov    esi,0x0
    71d1:	48 89 c7             	mov    rdi,rax
    71d4:	e8 57 b4 ff ff       	call   2630 <memset@plt>
    71d9:	e9 b4 00 00 00       	jmp    7292 <print_cpu_info+0x12b>
    71de:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    71e5:	ba 0a 00 00 00       	mov    edx,0xa
    71ea:	48 89 c6             	mov    rsi,rax
    71ed:	48 8d 3d 24 60 00 00 	lea    rdi,[rip+0x6024]        # d218 <_IO_stdin_used+0x1218>
    71f4:	e8 e7 b2 ff ff       	call   24e0 <strncmp@plt>
    71f9:	85 c0                	test   eax,eax
    71fb:	0f 85 91 00 00 00    	jne    7292 <print_cpu_info+0x12b>
    7201:	c7 85 c0 fd ff ff 00 	mov    DWORD PTR [rbp-0x240],0x0
    7208:	00 00 00 
    720b:	c7 85 c4 fd ff ff 00 	mov    DWORD PTR [rbp-0x23c],0x0
    7212:	00 00 00 
    7215:	eb 2e                	jmp    7245 <print_cpu_info+0xde>
    7217:	48 8b 95 c8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x238]
    721e:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    7224:	48 98                	cdqe   
    7226:	48 01 d0             	add    rax,rdx
    7229:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    722c:	3c 3a                	cmp    al,0x3a
    722e:	75 0e                	jne    723e <print_cpu_info+0xd7>
    7230:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    7236:	89 85 c0 fd ff ff    	mov    DWORD PTR [rbp-0x240],eax
    723c:	eb 24                	jmp    7262 <print_cpu_info+0xfb>
    723e:	83 85 c4 fd ff ff 01 	add    DWORD PTR [rbp-0x23c],0x1
    7245:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    724b:	48 63 d8             	movsxd rbx,eax
    724e:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    7255:	48 89 c7             	mov    rdi,rax
    7258:	e8 33 b3 ff ff       	call   2590 <strlen@plt>
    725d:	48 39 c3             	cmp    rbx,rax
    7260:	72 b5                	jb     7217 <print_cpu_info+0xb0>
    7262:	83 85 bc fd ff ff 01 	add    DWORD PTR [rbp-0x244],0x1
    7269:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    7270:	8b 95 c0 fd ff ff    	mov    edx,DWORD PTR [rbp-0x240]
    7276:	48 63 d2             	movsxd rdx,edx
    7279:	48 83 c2 02          	add    rdx,0x2
    727d:	48 01 c2             	add    rdx,rax
    7280:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    7287:	48 89 d6             	mov    rsi,rdx
    728a:	48 89 c7             	mov    rdi,rax
    728d:	e8 ae b5 ff ff       	call   2840 <strcat@plt>
    7292:	48 8b 95 d8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x228]
    7299:	48 8d b5 d0 fd ff ff 	lea    rsi,[rbp-0x230]
    72a0:	48 8d 85 c8 fd ff ff 	lea    rax,[rbp-0x238]
    72a7:	48 89 d1             	mov    rcx,rdx
    72aa:	ba 0a 00 00 00       	mov    edx,0xa
    72af:	48 89 c7             	mov    rdi,rax
    72b2:	e8 f9 b5 ff ff       	call   28b0 <getdelim@plt>
    72b7:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
    72bb:	0f 85 1d ff ff ff    	jne    71de <print_cpu_info+0x77>
    72c1:	48 8d 95 e0 fd ff ff 	lea    rdx,[rbp-0x220]
    72c8:	8b 85 bc fd ff ff    	mov    eax,DWORD PTR [rbp-0x244]
    72ce:	89 c6                	mov    esi,eax
    72d0:	48 8d 3d 4c 5f 00 00 	lea    rdi,[rip+0x5f4c]        # d223 <_IO_stdin_used+0x1223>
    72d7:	b8 00 00 00 00       	mov    eax,0x0
    72dc:	e8 0f b3 ff ff       	call   25f0 <printf@plt>
    72e1:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    72e8:	48 89 c7             	mov    rdi,rax
    72eb:	e8 a0 b1 ff ff       	call   2490 <free@plt>
    72f0:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    72f7:	48 89 c7             	mov    rdi,rax
    72fa:	e8 71 b2 ff ff       	call   2570 <fclose@plt>
    72ff:	90                   	nop
    7300:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7304:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    730b:	00 00 
    730d:	74 05                	je     7314 <print_cpu_info+0x1ad>
    730f:	e8 9c b2 ff ff       	call   25b0 <__stack_chk_fail@plt>
    7314:	48 81 c4 48 02 00 00 	add    rsp,0x248
    731b:	5b                   	pop    rbx
    731c:	5d                   	pop    rbp
    731d:	c3                   	ret    

000000000000731e <print_logo>:
    731e:	f3 0f 1e fa          	endbr64 
    7322:	55                   	push   rbp
    7323:	48 89 e5             	mov    rbp,rsp
    7326:	48 8d 3d 0b 5f 00 00 	lea    rdi,[rip+0x5f0b]        # d238 <_IO_stdin_used+0x1238>
    732d:	e8 ee b1 ff ff       	call   2520 <puts@plt>
    7332:	90                   	nop
    7333:	5d                   	pop    rbp
    7334:	c3                   	ret    

0000000000007335 <start_nsh_server>:
    7335:	f3 0f 1e fa          	endbr64 
    7339:	55                   	push   rbp
    733a:	48 89 e5             	mov    rbp,rsp
    733d:	48 83 ec 10          	sub    rsp,0x10
    7341:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7348:	00 00 
    734a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    734e:	31 c0                	xor    eax,eax
    7350:	48 8d 45 f0          	lea    rax,[rbp-0x10]
    7354:	b9 00 00 00 00       	mov    ecx,0x0
    7359:	48 8d 15 71 00 00 00 	lea    rdx,[rip+0x71]        # 73d1 <actually_start_nsh_server>
    7360:	be 00 00 00 00       	mov    esi,0x0
    7365:	48 89 c7             	mov    rdi,rax
    7368:	e8 43 b1 ff ff       	call   24b0 <pthread_create@plt>
    736d:	90                   	nop
    736e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7372:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    7379:	00 00 
    737b:	74 05                	je     7382 <start_nsh_server+0x4d>
    737d:	e8 2e b2 ff ff       	call   25b0 <__stack_chk_fail@plt>
    7382:	c9                   	leave  
    7383:	c3                   	ret    

0000000000007384 <rnstrip>:
    7384:	f3 0f 1e fa          	endbr64 
    7388:	55                   	push   rbp
    7389:	48 89 e5             	mov    rbp,rsp
    738c:	48 83 ec 10          	sub    rsp,0x10
    7390:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7394:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7398:	48 8d 35 11 60 00 00 	lea    rsi,[rip+0x6011]        # d3b0 <_IO_stdin_used+0x13b0>
    739f:	48 89 c7             	mov    rdi,rax
    73a2:	e8 c9 b2 ff ff       	call   2670 <strcspn@plt>
    73a7:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    73ab:	48 01 d0             	add    rax,rdx
    73ae:	c6 00 00             	mov    BYTE PTR [rax],0x0
    73b1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    73b5:	48 8d 35 f6 5f 00 00 	lea    rsi,[rip+0x5ff6]        # d3b2 <_IO_stdin_used+0x13b2>
    73bc:	48 89 c7             	mov    rdi,rax
    73bf:	e8 ac b2 ff ff       	call   2670 <strcspn@plt>
    73c4:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    73c8:	48 01 d0             	add    rax,rdx
    73cb:	c6 00 00             	mov    BYTE PTR [rax],0x0
    73ce:	90                   	nop
    73cf:	c9                   	leave  
    73d0:	c3                   	ret    

00000000000073d1 <actually_start_nsh_server>:
    73d1:	f3 0f 1e fa          	endbr64 
    73d5:	55                   	push   rbp
    73d6:	48 89 e5             	mov    rbp,rsp
    73d9:	48 83 ec 50          	sub    rsp,0x50
    73dd:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    73e4:	00 00 
    73e6:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    73ea:	31 c0                	xor    eax,eax
    73ec:	c7 45 bc 10 00 00 00 	mov    DWORD PTR [rbp-0x44],0x10
    73f3:	ba 00 00 00 00       	mov    edx,0x0
    73f8:	be 01 00 00 00       	mov    esi,0x1
    73fd:	bf 02 00 00 00       	mov    edi,0x2
    7402:	e8 c9 b4 ff ff       	call   28d0 <socket@plt>
    7407:	89 45 c0             	mov    DWORD PTR [rbp-0x40],eax
    740a:	83 7d c0 00          	cmp    DWORD PTR [rbp-0x40],0x0
    740e:	75 16                	jne    7426 <actually_start_nsh_server+0x55>
    7410:	48 8d 3d a1 5f 00 00 	lea    rdi,[rip+0x5fa1]        # d3b8 <_IO_stdin_used+0x13b8>
    7417:	e8 04 b1 ff ff       	call   2520 <puts@plt>
    741c:	bf 01 00 00 00       	mov    edi,0x1
    7421:	e8 5a b4 ff ff       	call   2880 <exit@plt>
    7426:	48 8d 55 bc          	lea    rdx,[rbp-0x44]
    742a:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    742d:	41 b8 04 00 00 00    	mov    r8d,0x4
    7433:	48 89 d1             	mov    rcx,rdx
    7436:	ba 02 00 00 00       	mov    edx,0x2
    743b:	be 01 00 00 00       	mov    esi,0x1
    7440:	89 c7                	mov    edi,eax
    7442:	e8 e9 b0 ff ff       	call   2530 <setsockopt@plt>
    7447:	85 c0                	test   eax,eax
    7449:	74 16                	je     7461 <actually_start_nsh_server+0x90>
    744b:	48 8d 3d 8e 5f 00 00 	lea    rdi,[rip+0x5f8e]        # d3e0 <_IO_stdin_used+0x13e0>
    7452:	e8 c9 b0 ff ff       	call   2520 <puts@plt>
    7457:	bf 01 00 00 00       	mov    edi,0x1
    745c:	e8 1f b4 ff ff       	call   2880 <exit@plt>
    7461:	66 c7 45 e0 02 00    	mov    WORD PTR [rbp-0x20],0x2
    7467:	bf 00 00 00 00       	mov    edi,0x0
    746c:	e8 af b1 ff ff       	call   2620 <htonl@plt>
    7471:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
    7474:	bf 81 02 00 00       	mov    edi,0x281
    7479:	e8 42 b1 ff ff       	call   25c0 <htons@plt>
    747e:	66 89 45 e2          	mov    WORD PTR [rbp-0x1e],ax
    7482:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
    7486:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    7489:	ba 10 00 00 00       	mov    edx,0x10
    748e:	48 89 ce             	mov    rsi,rcx
    7491:	89 c7                	mov    edi,eax
    7493:	e8 08 b3 ff ff       	call   27a0 <bind@plt>
    7498:	85 c0                	test   eax,eax
    749a:	79 16                	jns    74b2 <actually_start_nsh_server+0xe1>
    749c:	48 8d 3d 65 5f 00 00 	lea    rdi,[rip+0x5f65]        # d408 <_IO_stdin_used+0x1408>
    74a3:	e8 78 b0 ff ff       	call   2520 <puts@plt>
    74a8:	bf 01 00 00 00       	mov    edi,0x1
    74ad:	e8 ce b3 ff ff       	call   2880 <exit@plt>
    74b2:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    74b5:	be 05 00 00 00       	mov    esi,0x5
    74ba:	89 c7                	mov    edi,eax
    74bc:	e8 8f b2 ff ff       	call   2750 <listen@plt>
    74c1:	85 c0                	test   eax,eax
    74c3:	79 16                	jns    74db <actually_start_nsh_server+0x10a>
    74c5:	48 8d 3d 74 5f 00 00 	lea    rdi,[rip+0x5f74]        # d440 <_IO_stdin_used+0x1440>
    74cc:	e8 4f b0 ff ff       	call   2520 <puts@plt>
    74d1:	bf 01 00 00 00       	mov    edi,0x1
    74d6:	e8 a5 b3 ff ff       	call   2880 <exit@plt>
    74db:	48 8d 55 bc          	lea    rdx,[rbp-0x44]
    74df:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
    74e3:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    74e6:	48 89 ce             	mov    rsi,rcx
    74e9:	89 c7                	mov    edi,eax
    74eb:	e8 20 b3 ff ff       	call   2810 <accept@plt>
    74f0:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    74f3:	83 7d c4 00          	cmp    DWORD PTR [rbp-0x3c],0x0
    74f7:	79 20                	jns    7519 <actually_start_nsh_server+0x148>
    74f9:	b8 00 00 00 00       	mov    eax,0x0
    74fe:	e8 a7 be ff ff       	call   33aa <get_formated_time>
    7503:	48 89 c6             	mov    rsi,rax
    7506:	48 8d 3d 63 5f 00 00 	lea    rdi,[rip+0x5f63]        # d470 <_IO_stdin_used+0x1470>
    750d:	b8 00 00 00 00       	mov    eax,0x0
    7512:	e8 d9 b0 ff ff       	call   25f0 <printf@plt>
    7517:	eb c2                	jmp    74db <actually_start_nsh_server+0x10a>
    7519:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    751c:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
    751f:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    7523:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    7527:	48 8d 55 d0          	lea    rdx,[rbp-0x30]
    752b:	48 8d 45 c8          	lea    rax,[rbp-0x38]
    752f:	48 89 d1             	mov    rcx,rdx
    7532:	48 8d 15 0f 00 00 00 	lea    rdx,[rip+0xf]        # 7548 <accept_cmd>
    7539:	be 00 00 00 00       	mov    esi,0x0
    753e:	48 89 c7             	mov    rdi,rax
    7541:	e8 6a af ff ff       	call   24b0 <pthread_create@plt>
    7546:	eb 93                	jmp    74db <actually_start_nsh_server+0x10a>

0000000000007548 <accept_cmd>:
    7548:	f3 0f 1e fa          	endbr64 
    754c:	55                   	push   rbp
    754d:	48 89 e5             	mov    rbp,rsp
    7550:	48 83 ec 30          	sub    rsp,0x30
    7554:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    7558:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    755c:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    7560:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    7564:	8b 00                	mov    eax,DWORD PTR [rax]
    7566:	64 48 8b 14 25 00 00 	mov    rdx,QWORD PTR fs:0x0
    756d:	00 00 
    756f:	48 8d 8a 00 fc ff ff 	lea    rcx,[rdx-0x400]
    7576:	ba 00 04 00 00       	mov    edx,0x400
    757b:	48 89 ce             	mov    rsi,rcx
    757e:	89 c7                	mov    edi,eax
    7580:	e8 fb b0 ff ff       	call   2680 <read@plt>
    7585:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
    7588:	83 7d ec 00          	cmp    DWORD PTR [rbp-0x14],0x0
    758c:	7e 45                	jle    75d3 <accept_cmd+0x8b>
    758e:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    7595:	00 00 
    7597:	48 05 00 fc ff ff    	add    rax,0xfffffffffffffc00
    759d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    75a1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    75a5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    75a8:	0f b6 c0             	movzx  eax,al
    75ab:	89 c6                	mov    esi,eax
    75ad:	48 8d 3d de 5e 00 00 	lea    rdi,[rip+0x5ede]        # d492 <_IO_stdin_used+0x1492>
    75b4:	b8 00 00 00 00       	mov    eax,0x0
    75b9:	e8 32 b0 ff ff       	call   25f0 <printf@plt>
    75be:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    75c2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    75c6:	48 89 d6             	mov    rsi,rdx
    75c9:	48 89 c7             	mov    rdi,rax
    75cc:	e8 99 0c 00 00       	call   826a <process_opcode>
    75d1:	eb 8d                	jmp    7560 <accept_cmd+0x18>
    75d3:	90                   	nop
    75d4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    75d8:	8b 00                	mov    eax,DWORD PTR [rax]
    75da:	89 c7                	mov    edi,eax
    75dc:	e8 6f b0 ff ff       	call   2650 <close@plt>
    75e1:	90                   	nop
    75e2:	c9                   	leave  
    75e3:	c3                   	ret    

00000000000075e4 <tcp_rst_portscan_detect>:
    75e4:	f3 0f 1e fa          	endbr64 
    75e8:	55                   	push   rbp
    75e9:	48 89 e5             	mov    rbp,rsp
    75ec:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    75f3:	48 89 bd c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rdi
    75fa:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7601:	00 00 
    7603:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7607:	31 c0                	xor    eax,eax
    7609:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    7610:	00 00 00 
    7613:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    761a:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    7620:	83 f8 1e             	cmp    eax,0x1e
    7623:	74 0a                	je     762f <tcp_rst_portscan_detect+0x4b>
    7625:	b8 00 00 00 00       	mov    eax,0x0
    762a:	e9 8d 01 00 00       	jmp    77bc <tcp_rst_portscan_detect+0x1d8>
    762f:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7636:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    763c:	83 e8 01             	sub    eax,0x1
    763f:	89 85 d8 fe ff ff    	mov    DWORD PTR [rbp-0x128],eax
    7645:	eb 6c                	jmp    76b3 <tcp_rst_portscan_detect+0xcf>
    7647:	8b 85 d8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x128]
    764d:	89 85 e4 fe ff ff    	mov    DWORD PTR [rbp-0x11c],eax
    7653:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    765a:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    7660:	48 63 d2             	movsxd rdx,edx
    7663:	48 83 c2 28          	add    rdx,0x28
    7667:	48 8b 44 d0 10       	mov    rax,QWORD PTR [rax+rdx*8+0x10]
    766c:	89 c1                	mov    ecx,eax
    766e:	83 ad d8 fe ff ff 01 	sub    DWORD PTR [rbp-0x128],0x1
    7675:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    767c:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    7682:	48 63 d2             	movsxd rdx,edx
    7685:	48 83 c2 28          	add    rdx,0x28
    7689:	48 8b 44 d0 10       	mov    rax,QWORD PTR [rax+rdx*8+0x10]
    768e:	29 c1                	sub    ecx,eax
    7690:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
    7696:	8d 50 01             	lea    edx,[rax+0x1]
    7699:	89 95 d4 fe ff ff    	mov    DWORD PTR [rbp-0x12c],edx
    769f:	89 ca                	mov    edx,ecx
    76a1:	48 98                	cdqe   
    76a3:	89 94 85 f0 fe ff ff 	mov    DWORD PTR [rbp+rax*4-0x110],edx
    76aa:	83 bd e4 fe ff ff 01 	cmp    DWORD PTR [rbp-0x11c],0x1
    76b1:	74 0b                	je     76be <tcp_rst_portscan_detect+0xda>
    76b3:	83 bd d8 fe ff ff 00 	cmp    DWORD PTR [rbp-0x128],0x0
    76ba:	75 8b                	jne    7647 <tcp_rst_portscan_detect+0x63>
    76bc:	eb 01                	jmp    76bf <tcp_rst_portscan_detect+0xdb>
    76be:	90                   	nop
    76bf:	c7 85 dc fe ff ff 00 	mov    DWORD PTR [rbp-0x124],0x0
    76c6:	00 00 00 
    76c9:	c7 85 e0 fe ff ff 00 	mov    DWORD PTR [rbp-0x120],0x0
    76d0:	00 00 00 
    76d3:	eb 24                	jmp    76f9 <tcp_rst_portscan_detect+0x115>
    76d5:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    76db:	48 98                	cdqe   
    76dd:	8b 84 85 f0 fe ff ff 	mov    eax,DWORD PTR [rbp+rax*4-0x110]
    76e4:	3d b3 b7 b4 00       	cmp    eax,0xb4b7b3
    76e9:	7f 07                	jg     76f2 <tcp_rst_portscan_detect+0x10e>
    76eb:	83 85 dc fe ff ff 01 	add    DWORD PTR [rbp-0x124],0x1
    76f2:	83 85 e0 fe ff ff 01 	add    DWORD PTR [rbp-0x120],0x1
    76f9:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    76ff:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    7705:	7c ce                	jl     76d5 <tcp_rst_portscan_detect+0xf1>
    7707:	8b 85 dc fe ff ff    	mov    eax,DWORD PTR [rbp-0x124]
    770d:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    7713:	0f 85 9e 00 00 00    	jne    77b7 <tcp_rst_portscan_detect+0x1d3>
    7719:	48 8b 05 10 99 00 00 	mov    rax,QWORD PTR [rip+0x9910]        # 11030 <def_log_file>
    7720:	48 8d 35 79 5d 00 00 	lea    rsi,[rip+0x5d79]        # d4a0 <_IO_stdin_used+0x14a0>
    7727:	48 89 c7             	mov    rdi,rax
    772a:	e8 81 b0 ff ff       	call   27b0 <fopen@plt>
    772f:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
    7736:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    773d:	48 83 c0 08          	add    rax,0x8
    7741:	48 89 c6             	mov    rsi,rax
    7744:	48 8d 3d 5d 5d 00 00 	lea    rdi,[rip+0x5d5d]        # d4a8 <_IO_stdin_used+0x14a8>
    774b:	b8 00 00 00 00       	mov    eax,0x0
    7750:	e8 9b ae ff ff       	call   25f0 <printf@plt>
    7755:	b8 00 00 00 00       	mov    eax,0x0
    775a:	e8 4b bc ff ff       	call   33aa <get_formated_time>
    775f:	48 89 c1             	mov    rcx,rax
    7762:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7769:	48 8d 50 08          	lea    rdx,[rax+0x8]
    776d:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    7774:	48 8d 35 5d 5d 00 00 	lea    rsi,[rip+0x5d5d]        # d4d8 <_IO_stdin_used+0x14d8>
    777b:	48 89 c7             	mov    rdi,rax
    777e:	b8 00 00 00 00       	mov    eax,0x0
    7783:	e8 e8 b0 ff ff       	call   2870 <sprintf@plt>
    7788:	48 8b 95 e8 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x118]
    778f:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    7796:	48 89 d6             	mov    rsi,rdx
    7799:	48 89 c7             	mov    rdi,rax
    779c:	e8 6f ae ff ff       	call   2610 <fputs@plt>
    77a1:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    77a8:	48 89 c7             	mov    rdi,rax
    77ab:	e8 c0 ad ff ff       	call   2570 <fclose@plt>
    77b0:	b8 01 00 00 00       	mov    eax,0x1
    77b5:	eb 05                	jmp    77bc <tcp_rst_portscan_detect+0x1d8>
    77b7:	b8 00 00 00 00       	mov    eax,0x0
    77bc:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    77c0:	64 48 33 34 25 28 00 	xor    rsi,QWORD PTR fs:0x28
    77c7:	00 00 
    77c9:	74 05                	je     77d0 <tcp_rst_portscan_detect+0x1ec>
    77cb:	e8 e0 ad ff ff       	call   25b0 <__stack_chk_fail@plt>
    77d0:	c9                   	leave  
    77d1:	c3                   	ret    

00000000000077d2 <fin_rst_portscan_detect>:
    77d2:	f3 0f 1e fa          	endbr64 
    77d6:	55                   	push   rbp
    77d7:	48 89 e5             	mov    rbp,rsp
    77da:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    77e1:	48 89 bd c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rdi
    77e8:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    77ef:	00 00 
    77f1:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    77f5:	31 c0                	xor    eax,eax
    77f7:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    77fe:	00 00 00 
    7801:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7808:	8b 40 50             	mov    eax,DWORD PTR [rax+0x50]
    780b:	83 f8 1e             	cmp    eax,0x1e
    780e:	74 0a                	je     781a <fin_rst_portscan_detect+0x48>
    7810:	b8 00 00 00 00       	mov    eax,0x0
    7815:	e9 8a 01 00 00       	jmp    79a4 <fin_rst_portscan_detect+0x1d2>
    781a:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7821:	8b 40 50             	mov    eax,DWORD PTR [rax+0x50]
    7824:	83 e8 01             	sub    eax,0x1
    7827:	89 85 d8 fe ff ff    	mov    DWORD PTR [rbp-0x128],eax
    782d:	eb 6c                	jmp    789b <fin_rst_portscan_detect+0xc9>
    782f:	8b 85 d8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x128]
    7835:	89 85 e4 fe ff ff    	mov    DWORD PTR [rbp-0x11c],eax
    783b:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7842:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    7848:	48 63 d2             	movsxd rdx,edx
    784b:	48 83 c2 0a          	add    rdx,0xa
    784f:	48 8b 44 d0 08       	mov    rax,QWORD PTR [rax+rdx*8+0x8]
    7854:	89 c1                	mov    ecx,eax
    7856:	83 ad d8 fe ff ff 01 	sub    DWORD PTR [rbp-0x128],0x1
    785d:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7864:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    786a:	48 63 d2             	movsxd rdx,edx
    786d:	48 83 c2 0a          	add    rdx,0xa
    7871:	48 8b 44 d0 08       	mov    rax,QWORD PTR [rax+rdx*8+0x8]
    7876:	29 c1                	sub    ecx,eax
    7878:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
    787e:	8d 50 01             	lea    edx,[rax+0x1]
    7881:	89 95 d4 fe ff ff    	mov    DWORD PTR [rbp-0x12c],edx
    7887:	89 ca                	mov    edx,ecx
    7889:	48 98                	cdqe   
    788b:	89 94 85 f0 fe ff ff 	mov    DWORD PTR [rbp+rax*4-0x110],edx
    7892:	83 bd e4 fe ff ff 01 	cmp    DWORD PTR [rbp-0x11c],0x1
    7899:	74 0b                	je     78a6 <fin_rst_portscan_detect+0xd4>
    789b:	83 bd d8 fe ff ff 00 	cmp    DWORD PTR [rbp-0x128],0x0
    78a2:	75 8b                	jne    782f <fin_rst_portscan_detect+0x5d>
    78a4:	eb 01                	jmp    78a7 <fin_rst_portscan_detect+0xd5>
    78a6:	90                   	nop
    78a7:	c7 85 dc fe ff ff 00 	mov    DWORD PTR [rbp-0x124],0x0
    78ae:	00 00 00 
    78b1:	c7 85 e0 fe ff ff 00 	mov    DWORD PTR [rbp-0x120],0x0
    78b8:	00 00 00 
    78bb:	eb 24                	jmp    78e1 <fin_rst_portscan_detect+0x10f>
    78bd:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    78c3:	48 98                	cdqe   
    78c5:	8b 84 85 f0 fe ff ff 	mov    eax,DWORD PTR [rbp+rax*4-0x110]
    78cc:	3d 73 7e e2 00       	cmp    eax,0xe27e73
    78d1:	7f 07                	jg     78da <fin_rst_portscan_detect+0x108>
    78d3:	83 85 dc fe ff ff 01 	add    DWORD PTR [rbp-0x124],0x1
    78da:	83 85 e0 fe ff ff 01 	add    DWORD PTR [rbp-0x120],0x1
    78e1:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    78e7:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    78ed:	7c ce                	jl     78bd <fin_rst_portscan_detect+0xeb>
    78ef:	8b 85 dc fe ff ff    	mov    eax,DWORD PTR [rbp-0x124]
    78f5:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    78fb:	0f 85 9e 00 00 00    	jne    799f <fin_rst_portscan_detect+0x1cd>
    7901:	48 8b 05 28 97 00 00 	mov    rax,QWORD PTR [rip+0x9728]        # 11030 <def_log_file>
    7908:	48 8d 35 91 5b 00 00 	lea    rsi,[rip+0x5b91]        # d4a0 <_IO_stdin_used+0x14a0>
    790f:	48 89 c7             	mov    rdi,rax
    7912:	e8 99 ae ff ff       	call   27b0 <fopen@plt>
    7917:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
    791e:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7925:	48 83 c0 08          	add    rax,0x8
    7929:	48 89 c6             	mov    rsi,rax
    792c:	48 8d 3d cd 5b 00 00 	lea    rdi,[rip+0x5bcd]        # d500 <_IO_stdin_used+0x1500>
    7933:	b8 00 00 00 00       	mov    eax,0x0
    7938:	e8 b3 ac ff ff       	call   25f0 <printf@plt>
    793d:	b8 00 00 00 00       	mov    eax,0x0
    7942:	e8 63 ba ff ff       	call   33aa <get_formated_time>
    7947:	48 89 c1             	mov    rcx,rax
    794a:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7951:	48 8d 50 08          	lea    rdx,[rax+0x8]
    7955:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    795c:	48 8d 35 cd 5b 00 00 	lea    rsi,[rip+0x5bcd]        # d530 <_IO_stdin_used+0x1530>
    7963:	48 89 c7             	mov    rdi,rax
    7966:	b8 00 00 00 00       	mov    eax,0x0
    796b:	e8 00 af ff ff       	call   2870 <sprintf@plt>
    7970:	48 8b 95 e8 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x118]
    7977:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    797e:	48 89 d6             	mov    rsi,rdx
    7981:	48 89 c7             	mov    rdi,rax
    7984:	e8 87 ac ff ff       	call   2610 <fputs@plt>
    7989:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    7990:	48 89 c7             	mov    rdi,rax
    7993:	e8 d8 ab ff ff       	call   2570 <fclose@plt>
    7998:	b8 01 00 00 00       	mov    eax,0x1
    799d:	eb 05                	jmp    79a4 <fin_rst_portscan_detect+0x1d2>
    799f:	b8 00 00 00 00       	mov    eax,0x0
    79a4:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    79a8:	64 48 33 34 25 28 00 	xor    rsi,QWORD PTR fs:0x28
    79af:	00 00 
    79b1:	74 05                	je     79b8 <fin_rst_portscan_detect+0x1e6>
    79b3:	e8 f8 ab ff ff       	call   25b0 <__stack_chk_fail@plt>
    79b8:	c9                   	leave  
    79b9:	c3                   	ret    

00000000000079ba <member_ready_for_scan>:
    79ba:	f3 0f 1e fa          	endbr64 
    79be:	55                   	push   rbp
    79bf:	48 89 e5             	mov    rbp,rsp
    79c2:	48 83 ec 10          	sub    rsp,0x10
    79c6:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    79cd:	eb 48                	jmp    7a17 <member_ready_for_scan+0x5d>
    79cf:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    79d2:	48 63 d0             	movsxd rdx,eax
    79d5:	48 89 d0             	mov    rax,rdx
    79d8:	48 c1 e0 02          	shl    rax,0x2
    79dc:	48 01 d0             	add    rax,rdx
    79df:	48 c1 e0 03          	shl    rax,0x3
    79e3:	48 01 d0             	add    rax,rdx
    79e6:	48 c1 e0 04          	shl    rax,0x4
    79ea:	48 8d 15 af b6 0e 00 	lea    rdx,[rip+0xeb6af]        # f30a0 <watchlist>
    79f1:	48 01 d0             	add    rax,rdx
    79f4:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    79f8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    79fc:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    7a02:	83 f8 1d             	cmp    eax,0x1d
    7a05:	76 0c                	jbe    7a13 <member_ready_for_scan+0x59>
    7a07:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7a0b:	48 89 c7             	mov    rdi,rax
    7a0e:	e8 d1 fb ff ff       	call   75e4 <tcp_rst_portscan_detect>
    7a13:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    7a17:	8b 05 fb 95 00 00    	mov    eax,DWORD PTR [rip+0x95fb]        # 11018 <watchlist_num>
    7a1d:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    7a20:	7e ad                	jle    79cf <member_ready_for_scan+0x15>
    7a22:	90                   	nop
    7a23:	90                   	nop
    7a24:	c9                   	leave  
    7a25:	c3                   	ret    

0000000000007a26 <member_exists>:
    7a26:	f3 0f 1e fa          	endbr64 
    7a2a:	55                   	push   rbp
    7a2b:	48 89 e5             	mov    rbp,rsp
    7a2e:	48 83 ec 20          	sub    rsp,0x20
    7a32:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7a36:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7a3d:	eb 47                	jmp    7a86 <member_exists+0x60>
    7a3f:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7a42:	8d 50 01             	lea    edx,[rax+0x1]
    7a45:	89 55 fc             	mov    DWORD PTR [rbp-0x4],edx
    7a48:	48 63 d0             	movsxd rdx,eax
    7a4b:	48 89 d0             	mov    rax,rdx
    7a4e:	48 c1 e0 02          	shl    rax,0x2
    7a52:	48 01 d0             	add    rax,rdx
    7a55:	48 c1 e0 03          	shl    rax,0x3
    7a59:	48 01 d0             	add    rax,rdx
    7a5c:	48 c1 e0 04          	shl    rax,0x4
    7a60:	48 8d 15 39 b6 0e 00 	lea    rdx,[rip+0xeb639]        # f30a0 <watchlist>
    7a67:	48 01 d0             	add    rax,rdx
    7a6a:	48 8d 50 08          	lea    rdx,[rax+0x8]
    7a6e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7a72:	48 89 c6             	mov    rsi,rax
    7a75:	48 89 d7             	mov    rdi,rdx
    7a78:	e8 33 ac ff ff       	call   26b0 <strcmp@plt>
    7a7d:	85 c0                	test   eax,eax
    7a7f:	75 05                	jne    7a86 <member_exists+0x60>
    7a81:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7a84:	eb 10                	jmp    7a96 <member_exists+0x70>
    7a86:	8b 05 8c 95 00 00    	mov    eax,DWORD PTR [rip+0x958c]        # 11018 <watchlist_num>
    7a8c:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7a8f:	7e ae                	jle    7a3f <member_exists+0x19>
    7a91:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7a96:	c9                   	leave  
    7a97:	c3                   	ret    

0000000000007a98 <init_member>:
    7a98:	f3 0f 1e fa          	endbr64 
    7a9c:	55                   	push   rbp
    7a9d:	48 89 e5             	mov    rbp,rsp
    7aa0:	48 83 ec 20          	sub    rsp,0x20
    7aa4:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7aa8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7aac:	48 89 c7             	mov    rdi,rax
    7aaf:	e8 72 ff ff ff       	call   7a26 <member_exists>
    7ab4:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    7ab7:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    7abb:	74 42                	je     7aff <init_member+0x67>
    7abd:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    7ac0:	48 63 d0             	movsxd rdx,eax
    7ac3:	48 89 d0             	mov    rax,rdx
    7ac6:	48 c1 e0 02          	shl    rax,0x2
    7aca:	48 01 d0             	add    rax,rdx
    7acd:	48 c1 e0 03          	shl    rax,0x3
    7ad1:	48 01 d0             	add    rax,rdx
    7ad4:	48 c1 e0 04          	shl    rax,0x4
    7ad8:	48 8d 15 c1 b5 0e 00 	lea    rdx,[rip+0xeb5c1]        # f30a0 <watchlist>
    7adf:	48 01 d0             	add    rax,rdx
    7ae2:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7ae6:	bf 00 00 00 00       	mov    edi,0x0
    7aeb:	e8 10 ac ff ff       	call   2700 <time@plt>
    7af0:	48 89 c2             	mov    rdx,rax
    7af3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7af7:	48 89 10             	mov    QWORD PTR [rax],rdx
    7afa:	e9 a8 00 00 00       	jmp    7ba7 <init_member+0x10f>
    7aff:	48 8d 3d 4f 5a 00 00 	lea    rdi,[rip+0x5a4f]        # d555 <_IO_stdin_used+0x1555>
    7b06:	e8 1b ff ff ff       	call   7a26 <member_exists>
    7b0b:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    7b0e:	83 7d f4 00          	cmp    DWORD PTR [rbp-0xc],0x0
    7b12:	74 2b                	je     7b3f <init_member+0xa7>
    7b14:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    7b17:	48 63 d0             	movsxd rdx,eax
    7b1a:	48 89 d0             	mov    rax,rdx
    7b1d:	48 c1 e0 02          	shl    rax,0x2
    7b21:	48 01 d0             	add    rax,rdx
    7b24:	48 c1 e0 03          	shl    rax,0x3
    7b28:	48 01 d0             	add    rax,rdx
    7b2b:	48 c1 e0 04          	shl    rax,0x4
    7b2f:	48 8d 15 6a b5 0e 00 	lea    rdx,[rip+0xeb56a]        # f30a0 <watchlist>
    7b36:	48 01 d0             	add    rax,rdx
    7b39:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7b3d:	eb 3b                	jmp    7b7a <init_member+0xe2>
    7b3f:	8b 05 d3 94 00 00    	mov    eax,DWORD PTR [rip+0x94d3]        # 11018 <watchlist_num>
    7b45:	83 c0 01             	add    eax,0x1
    7b48:	89 05 ca 94 00 00    	mov    DWORD PTR [rip+0x94ca],eax        # 11018 <watchlist_num>
    7b4e:	8b 05 c4 94 00 00    	mov    eax,DWORD PTR [rip+0x94c4]        # 11018 <watchlist_num>
    7b54:	48 63 d0             	movsxd rdx,eax
    7b57:	48 89 d0             	mov    rax,rdx
    7b5a:	48 c1 e0 02          	shl    rax,0x2
    7b5e:	48 01 d0             	add    rax,rdx
    7b61:	48 c1 e0 03          	shl    rax,0x3
    7b65:	48 01 d0             	add    rax,rdx
    7b68:	48 c1 e0 04          	shl    rax,0x4
    7b6c:	48 8d 15 2d b5 0e 00 	lea    rdx,[rip+0xeb52d]        # f30a0 <watchlist>
    7b73:	48 01 d0             	add    rax,rdx
    7b76:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7b7a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7b7e:	ba 08 00 00 00       	mov    edx,0x8
    7b83:	be 00 00 00 00       	mov    esi,0x0
    7b88:	48 89 c7             	mov    rdi,rax
    7b8b:	e8 a0 aa ff ff       	call   2630 <memset@plt>
    7b90:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7b94:	48 8d 50 08          	lea    rdx,[rax+0x8]
    7b98:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7b9c:	48 89 c6             	mov    rsi,rax
    7b9f:	48 89 d7             	mov    rdi,rdx
    7ba2:	e8 49 a9 ff ff       	call   24f0 <strcpy@plt>
    7ba7:	c9                   	leave  
    7ba8:	c3                   	ret    

0000000000007ba9 <ready_for_clean>:
    7ba9:	f3 0f 1e fa          	endbr64 
    7bad:	55                   	push   rbp
    7bae:	48 89 e5             	mov    rbp,rsp
    7bb1:	48 83 ec 10          	sub    rsp,0x10
    7bb5:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7bb9:	bf 00 00 00 00       	mov    edi,0x0
    7bbe:	e8 3d ab ff ff       	call   2700 <time@plt>
    7bc3:	48 89 c2             	mov    rdx,rax
    7bc6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7bca:	48 8b 00             	mov    rax,QWORD PTR [rax]
    7bcd:	48 29 c2             	sub    rdx,rax
    7bd0:	48 8b 05 71 01 10 00 	mov    rax,QWORD PTR [rip+0x100171]        # 107d48 <clean_delay>
    7bd7:	48 39 c2             	cmp    rdx,rax
    7bda:	72 22                	jb     7bfe <ready_for_clean+0x55>
    7bdc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7be0:	48 83 c0 08          	add    rax,0x8
    7be4:	48 8d 35 72 59 00 00 	lea    rsi,[rip+0x5972]        # d55d <_IO_stdin_used+0x155d>
    7beb:	48 89 c7             	mov    rdi,rax
    7bee:	e8 bd aa ff ff       	call   26b0 <strcmp@plt>
    7bf3:	85 c0                	test   eax,eax
    7bf5:	74 07                	je     7bfe <ready_for_clean+0x55>
    7bf7:	b8 01 00 00 00       	mov    eax,0x1
    7bfc:	eb 05                	jmp    7c03 <ready_for_clean+0x5a>
    7bfe:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7c03:	c9                   	leave  
    7c04:	c3                   	ret    

0000000000007c05 <clean>:
    7c05:	f3 0f 1e fa          	endbr64 
    7c09:	55                   	push   rbp
    7c0a:	48 89 e5             	mov    rbp,rsp
    7c0d:	48 83 ec 10          	sub    rsp,0x10
    7c11:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7c15:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7c19:	ba 08 00 00 00       	mov    edx,0x8
    7c1e:	be 00 00 00 00       	mov    esi,0x0
    7c23:	48 89 c7             	mov    rdi,rax
    7c26:	e8 05 aa ff ff       	call   2630 <memset@plt>
    7c2b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7c2f:	48 83 c0 08          	add    rax,0x8
    7c33:	48 b9 30 2e 30 2e 30 	movabs rcx,0x312e302e302e30
    7c3a:	2e 31 00 
    7c3d:	48 89 08             	mov    QWORD PTR [rax],rcx
    7c40:	90                   	nop
    7c41:	c9                   	leave  
    7c42:	c3                   	ret    

0000000000007c43 <scan_for_clean>:
    7c43:	f3 0f 1e fa          	endbr64 
    7c47:	55                   	push   rbp
    7c48:	48 89 e5             	mov    rbp,rsp
    7c4b:	48 83 ec 10          	sub    rsp,0x10
    7c4f:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7c56:	eb 62                	jmp    7cba <scan_for_clean+0x77>
    7c58:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7c5b:	48 63 d0             	movsxd rdx,eax
    7c5e:	48 89 d0             	mov    rax,rdx
    7c61:	48 c1 e0 02          	shl    rax,0x2
    7c65:	48 01 d0             	add    rax,rdx
    7c68:	48 c1 e0 03          	shl    rax,0x3
    7c6c:	48 01 d0             	add    rax,rdx
    7c6f:	48 c1 e0 04          	shl    rax,0x4
    7c73:	48 8d 15 26 b4 0e 00 	lea    rdx,[rip+0xeb426]        # f30a0 <watchlist>
    7c7a:	48 01 d0             	add    rax,rdx
    7c7d:	48 89 c7             	mov    rdi,rax
    7c80:	e8 24 ff ff ff       	call   7ba9 <ready_for_clean>
    7c85:	85 c0                	test   eax,eax
    7c87:	7e 2d                	jle    7cb6 <scan_for_clean+0x73>
    7c89:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7c8c:	48 63 d0             	movsxd rdx,eax
    7c8f:	48 89 d0             	mov    rax,rdx
    7c92:	48 c1 e0 02          	shl    rax,0x2
    7c96:	48 01 d0             	add    rax,rdx
    7c99:	48 c1 e0 03          	shl    rax,0x3
    7c9d:	48 01 d0             	add    rax,rdx
    7ca0:	48 c1 e0 04          	shl    rax,0x4
    7ca4:	48 8d 15 f5 b3 0e 00 	lea    rdx,[rip+0xeb3f5]        # f30a0 <watchlist>
    7cab:	48 01 d0             	add    rax,rdx
    7cae:	48 89 c7             	mov    rdi,rax
    7cb1:	e8 4f ff ff ff       	call   7c05 <clean>
    7cb6:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    7cba:	8b 05 58 93 00 00    	mov    eax,DWORD PTR [rip+0x9358]        # 11018 <watchlist_num>
    7cc0:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7cc3:	7e 93                	jle    7c58 <scan_for_clean+0x15>
    7cc5:	90                   	nop
    7cc6:	90                   	nop
    7cc7:	c9                   	leave  
    7cc8:	c3                   	ret    

0000000000007cc9 <compare_entries>:
    7cc9:	f3 0f 1e fa          	endbr64 
    7ccd:	55                   	push   rbp
    7cce:	48 89 e5             	mov    rbp,rsp
    7cd1:	48 83 ec 20          	sub    rsp,0x20
    7cd5:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7cd9:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7cdd:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7ce4:	e9 ac 00 00 00       	jmp    7d95 <compare_entries+0xcc>
    7ce9:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7cec:	48 63 d0             	movsxd rdx,eax
    7cef:	48 89 d0             	mov    rax,rdx
    7cf2:	48 c1 e0 04          	shl    rax,0x4
    7cf6:	48 01 d0             	add    rax,rdx
    7cf9:	48 01 c0             	add    rax,rax
    7cfc:	48 8d 15 9d 02 10 00 	lea    rdx,[rip+0x10029d]        # 107fa0 <arpcache>
    7d03:	48 01 c2             	add    rdx,rax
    7d06:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7d0a:	48 89 c6             	mov    rsi,rax
    7d0d:	48 89 d7             	mov    rdi,rdx
    7d10:	e8 a3 01 00 00       	call   7eb8 <compare_ip_entry>
    7d15:	85 c0                	test   eax,eax
    7d17:	74 78                	je     7d91 <compare_entries+0xc8>
    7d19:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7d1c:	48 63 d0             	movsxd rdx,eax
    7d1f:	48 89 d0             	mov    rax,rdx
    7d22:	48 c1 e0 04          	shl    rax,0x4
    7d26:	48 01 d0             	add    rax,rdx
    7d29:	48 01 c0             	add    rax,rax
    7d2c:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7d30:	48 8d 05 69 02 10 00 	lea    rax,[rip+0x100269]        # 107fa0 <arpcache>
    7d37:	48 01 c2             	add    rdx,rax
    7d3a:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7d3e:	48 89 c6             	mov    rsi,rax
    7d41:	48 89 d7             	mov    rdi,rdx
    7d44:	e8 98 01 00 00       	call   7ee1 <compare_mac_entry>
    7d49:	85 c0                	test   eax,eax
    7d4b:	75 44                	jne    7d91 <compare_entries+0xc8>
    7d4d:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7d50:	48 63 d0             	movsxd rdx,eax
    7d53:	48 89 d0             	mov    rax,rdx
    7d56:	48 c1 e0 04          	shl    rax,0x4
    7d5a:	48 01 d0             	add    rax,rdx
    7d5d:	48 01 c0             	add    rax,rax
    7d60:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7d64:	48 8d 05 35 02 10 00 	lea    rax,[rip+0x100235]        # 107fa0 <arpcache>
    7d6b:	48 8d 34 02          	lea    rsi,[rdx+rax*1]
    7d6f:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    7d73:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7d77:	48 89 d1             	mov    rcx,rdx
    7d7a:	48 89 f2             	mov    rdx,rsi
    7d7d:	48 89 c6             	mov    rsi,rax
    7d80:	48 8d 3d e1 57 00 00 	lea    rdi,[rip+0x57e1]        # d568 <_IO_stdin_used+0x1568>
    7d87:	b8 00 00 00 00       	mov    eax,0x0
    7d8c:	e8 5f a8 ff ff       	call   25f0 <printf@plt>
    7d91:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    7d95:	8b 05 81 92 00 00    	mov    eax,DWORD PTR [rip+0x9281]        # 1101c <arp_entries>
    7d9b:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7d9e:	0f 8e 45 ff ff ff    	jle    7ce9 <compare_entries+0x20>
    7da4:	90                   	nop
    7da5:	90                   	nop
    7da6:	c9                   	leave  
    7da7:	c3                   	ret    

0000000000007da8 <add_entry>:
    7da8:	f3 0f 1e fa          	endbr64 
    7dac:	55                   	push   rbp
    7dad:	48 89 e5             	mov    rbp,rsp
    7db0:	48 83 ec 20          	sub    rsp,0x20
    7db4:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7db8:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7dbc:	8b 05 5a 92 00 00    	mov    eax,DWORD PTR [rip+0x925a]        # 1101c <arp_entries>
    7dc2:	83 c0 01             	add    eax,0x1
    7dc5:	89 05 51 92 00 00    	mov    DWORD PTR [rip+0x9251],eax        # 1101c <arp_entries>
    7dcb:	8b 05 4b 92 00 00    	mov    eax,DWORD PTR [rip+0x924b]        # 1101c <arp_entries>
    7dd1:	48 63 d0             	movsxd rdx,eax
    7dd4:	48 89 d0             	mov    rax,rdx
    7dd7:	48 c1 e0 04          	shl    rax,0x4
    7ddb:	48 01 d0             	add    rax,rdx
    7dde:	48 01 c0             	add    rax,rax
    7de1:	48 8d 15 b8 01 10 00 	lea    rdx,[rip+0x1001b8]        # 107fa0 <arpcache>
    7de8:	48 01 d0             	add    rax,rdx
    7deb:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7def:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7df3:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    7df7:	48 89 d6             	mov    rsi,rdx
    7dfa:	48 89 c7             	mov    rdi,rax
    7dfd:	e8 ee a6 ff ff       	call   24f0 <strcpy@plt>
    7e02:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7e06:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7e0a:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7e0e:	48 89 c6             	mov    rsi,rax
    7e11:	48 89 d7             	mov    rdi,rdx
    7e14:	e8 d7 a6 ff ff       	call   24f0 <strcpy@plt>
    7e19:	90                   	nop
    7e1a:	c9                   	leave  
    7e1b:	c3                   	ret    

0000000000007e1c <entry_exists>:
    7e1c:	f3 0f 1e fa          	endbr64 
    7e20:	55                   	push   rbp
    7e21:	48 89 e5             	mov    rbp,rsp
    7e24:	48 83 ec 20          	sub    rsp,0x20
    7e28:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7e2c:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7e30:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7e37:	eb 6d                	jmp    7ea6 <entry_exists+0x8a>
    7e39:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7e3c:	48 63 d0             	movsxd rdx,eax
    7e3f:	48 89 d0             	mov    rax,rdx
    7e42:	48 c1 e0 04          	shl    rax,0x4
    7e46:	48 01 d0             	add    rax,rdx
    7e49:	48 01 c0             	add    rax,rax
    7e4c:	48 8d 15 4d 01 10 00 	lea    rdx,[rip+0x10014d]        # 107fa0 <arpcache>
    7e53:	48 01 c2             	add    rdx,rax
    7e56:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7e5a:	48 89 c6             	mov    rsi,rax
    7e5d:	48 89 d7             	mov    rdi,rdx
    7e60:	e8 53 00 00 00       	call   7eb8 <compare_ip_entry>
    7e65:	85 c0                	test   eax,eax
    7e67:	75 39                	jne    7ea2 <entry_exists+0x86>
    7e69:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7e6c:	48 63 d0             	movsxd rdx,eax
    7e6f:	48 89 d0             	mov    rax,rdx
    7e72:	48 c1 e0 04          	shl    rax,0x4
    7e76:	48 01 d0             	add    rax,rdx
    7e79:	48 01 c0             	add    rax,rax
    7e7c:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7e80:	48 8d 05 19 01 10 00 	lea    rax,[rip+0x100119]        # 107fa0 <arpcache>
    7e87:	48 01 c2             	add    rdx,rax
    7e8a:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7e8e:	48 89 c6             	mov    rsi,rax
    7e91:	48 89 d7             	mov    rdi,rdx
    7e94:	e8 48 00 00 00       	call   7ee1 <compare_mac_entry>
    7e99:	85 c0                	test   eax,eax
    7e9b:	75 05                	jne    7ea2 <entry_exists+0x86>
    7e9d:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7ea0:	eb 14                	jmp    7eb6 <entry_exists+0x9a>
    7ea2:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    7ea6:	8b 05 70 91 00 00    	mov    eax,DWORD PTR [rip+0x9170]        # 1101c <arp_entries>
    7eac:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7eaf:	7e 88                	jle    7e39 <entry_exists+0x1d>
    7eb1:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7eb6:	c9                   	leave  
    7eb7:	c3                   	ret    

0000000000007eb8 <compare_ip_entry>:
    7eb8:	f3 0f 1e fa          	endbr64 
    7ebc:	55                   	push   rbp
    7ebd:	48 89 e5             	mov    rbp,rsp
    7ec0:	48 83 ec 10          	sub    rsp,0x10
    7ec4:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7ec8:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7ecc:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    7ed0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7ed4:	48 89 d6             	mov    rsi,rdx
    7ed7:	48 89 c7             	mov    rdi,rax
    7eda:	e8 d1 a7 ff ff       	call   26b0 <strcmp@plt>
    7edf:	c9                   	leave  
    7ee0:	c3                   	ret    

0000000000007ee1 <compare_mac_entry>:
    7ee1:	f3 0f 1e fa          	endbr64 
    7ee5:	55                   	push   rbp
    7ee6:	48 89 e5             	mov    rbp,rsp
    7ee9:	48 83 ec 10          	sub    rsp,0x10
    7eed:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7ef1:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7ef5:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    7ef9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7efd:	48 89 d6             	mov    rsi,rdx
    7f00:	48 89 c7             	mov    rdi,rax
    7f03:	e8 a8 a7 ff ff       	call   26b0 <strcmp@plt>
    7f08:	c9                   	leave  
    7f09:	c3                   	ret    

0000000000007f0a <load_csv_arp_cache>:
    7f0a:	f3 0f 1e fa          	endbr64 
    7f0e:	55                   	push   rbp
    7f0f:	48 89 e5             	mov    rbp,rsp
    7f12:	53                   	push   rbx
    7f13:	48 83 ec 68          	sub    rsp,0x68
    7f17:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7f1e:	00 00 
    7f20:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    7f24:	31 c0                	xor    eax,eax
    7f26:	48 8d 35 71 56 00 00 	lea    rsi,[rip+0x5671]        # d59e <_IO_stdin_used+0x159e>
    7f2d:	48 8d 3d 6c 56 00 00 	lea    rdi,[rip+0x566c]        # d5a0 <_IO_stdin_used+0x15a0>
    7f34:	e8 77 a8 ff ff       	call   27b0 <fopen@plt>
    7f39:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    7f3d:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
    7f42:	75 22                	jne    7f66 <load_csv_arp_cache+0x5c>
    7f44:	48 8d 3d 75 56 00 00 	lea    rdi,[rip+0x5675]        # d5c0 <_IO_stdin_used+0x15c0>
    7f4b:	e8 d0 a5 ff ff       	call   2520 <puts@plt>
    7f50:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    7f54:	48 89 c7             	mov    rdi,rax
    7f57:	e8 14 a6 ff ff       	call   2570 <fclose@plt>
    7f5c:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7f61:	e9 dd 00 00 00       	jmp    8043 <load_csv_arp_cache+0x139>
    7f66:	48 c7 45 98 00 00 00 	mov    QWORD PTR [rbp-0x68],0x0
    7f6d:	00 
    7f6e:	48 c7 45 a0 00 00 00 	mov    QWORD PTR [rbp-0x60],0x0
    7f75:	00 
    7f76:	eb 7c                	jmp    7ff4 <load_csv_arp_cache+0xea>
    7f78:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7f7c:	48 85 c0             	test   rax,rax
    7f7f:	0f 84 97 00 00 00    	je     801c <load_csv_arp_cache+0x112>
    7f85:	48 8b 5d 98          	mov    rbx,QWORD PTR [rbp-0x68]
    7f89:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7f8d:	48 8d 35 65 56 00 00 	lea    rsi,[rip+0x5665]        # d5f9 <_IO_stdin_used+0x15f9>
    7f94:	48 89 c7             	mov    rdi,rax
    7f97:	e8 d4 a6 ff ff       	call   2670 <strcspn@plt>
    7f9c:	48 01 d8             	add    rax,rbx
    7f9f:	c6 00 00             	mov    BYTE PTR [rax],0x0
    7fa2:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7fa6:	48 8d 35 4e 56 00 00 	lea    rsi,[rip+0x564e]        # d5fb <_IO_stdin_used+0x15fb>
    7fad:	48 89 c7             	mov    rdi,rax
    7fb0:	e8 1b a8 ff ff       	call   27d0 <strtok@plt>
    7fb5:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    7fb9:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    7fbd:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    7fc1:	48 89 d6             	mov    rsi,rdx
    7fc4:	48 89 c7             	mov    rdi,rax
    7fc7:	e8 24 a5 ff ff       	call   24f0 <strcpy@plt>
    7fcc:	48 8d 35 28 56 00 00 	lea    rsi,[rip+0x5628]        # d5fb <_IO_stdin_used+0x15fb>
    7fd3:	bf 00 00 00 00       	mov    edi,0x0
    7fd8:	e8 f3 a7 ff ff       	call   27d0 <strtok@plt>
    7fdd:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    7fe1:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    7fe5:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    7fe9:	48 89 d6             	mov    rsi,rdx
    7fec:	48 89 c7             	mov    rdi,rax
    7fef:	e8 fc a4 ff ff       	call   24f0 <strcpy@plt>
    7ff4:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    7ff8:	48 8d 4d a0          	lea    rcx,[rbp-0x60]
    7ffc:	48 8d 45 98          	lea    rax,[rbp-0x68]
    8000:	48 89 ce             	mov    rsi,rcx
    8003:	48 89 c7             	mov    rdi,rax
    8006:	e8 25 a8 ff ff       	call   2830 <getline@plt>
    800b:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    800f:	48 83 7d b0 ff       	cmp    QWORD PTR [rbp-0x50],0xffffffffffffffff
    8014:	0f 85 5e ff ff ff    	jne    7f78 <load_csv_arp_cache+0x6e>
    801a:	eb 01                	jmp    801d <load_csv_arp_cache+0x113>
    801c:	90                   	nop
    801d:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    8021:	48 85 c0             	test   rax,rax
    8024:	74 0c                	je     8032 <load_csv_arp_cache+0x128>
    8026:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    802a:	48 89 c7             	mov    rdi,rax
    802d:	e8 5e a4 ff ff       	call   2490 <free@plt>
    8032:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    8036:	48 89 c7             	mov    rdi,rax
    8039:	e8 32 a5 ff ff       	call   2570 <fclose@plt>
    803e:	b8 01 00 00 00       	mov    eax,0x1
    8043:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    8047:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
    804e:	00 00 
    8050:	74 05                	je     8057 <load_csv_arp_cache+0x14d>
    8052:	e8 59 a5 ff ff       	call   25b0 <__stack_chk_fail@plt>
    8057:	48 83 c4 68          	add    rsp,0x68
    805b:	5b                   	pop    rbx
    805c:	5d                   	pop    rbp
    805d:	c3                   	ret    

000000000000805e <tls_decode>:
    805e:	f3 0f 1e fa          	endbr64 
    8062:	55                   	push   rbp
    8063:	48 89 e5             	mov    rbp,rsp
    8066:	48 83 ec 30          	sub    rsp,0x30
    806a:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    806e:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    8072:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    8076:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    807a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    807e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8082:	0f b7 40 01          	movzx  eax,WORD PTR [rax+0x1]
    8086:	0f b7 c0             	movzx  eax,ax
    8089:	3d 03 03 00 00       	cmp    eax,0x303
    808e:	74 6a                	je     80fa <tls_decode+0x9c>
    8090:	3d 03 03 00 00       	cmp    eax,0x303
    8095:	0f 8f c7 00 00 00    	jg     8162 <tls_decode+0x104>
    809b:	3d 01 03 00 00       	cmp    eax,0x301
    80a0:	74 0c                	je     80ae <tls_decode+0x50>
    80a2:	3d 02 03 00 00       	cmp    eax,0x302
    80a7:	74 2b                	je     80d4 <tls_decode+0x76>
    80a9:	e9 b4 00 00 00       	jmp    8162 <tls_decode+0x104>
    80ae:	0f b6 05 a4 fc 0f 00 	movzx  eax,BYTE PTR [rip+0xffca4]        # 107d59 <packet_print>
    80b5:	84 c0                	test   al,al
    80b7:	74 11                	je     80ca <tls_decode+0x6c>
    80b9:	48 8d 3d 40 55 00 00 	lea    rdi,[rip+0x5540]        # d600 <_IO_stdin_used+0x1600>
    80c0:	b8 00 00 00 00       	mov    eax,0x0
    80c5:	e8 26 a5 ff ff       	call   25f0 <printf@plt>
    80ca:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    80ce:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    80d2:	eb 4b                	jmp    811f <tls_decode+0xc1>
    80d4:	0f b6 05 7e fc 0f 00 	movzx  eax,BYTE PTR [rip+0xffc7e]        # 107d59 <packet_print>
    80db:	84 c0                	test   al,al
    80dd:	74 11                	je     80f0 <tls_decode+0x92>
    80df:	48 8d 3d 29 55 00 00 	lea    rdi,[rip+0x5529]        # d60f <_IO_stdin_used+0x160f>
    80e6:	b8 00 00 00 00       	mov    eax,0x0
    80eb:	e8 00 a5 ff ff       	call   25f0 <printf@plt>
    80f0:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    80f4:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    80f8:	eb 25                	jmp    811f <tls_decode+0xc1>
    80fa:	0f b6 05 58 fc 0f 00 	movzx  eax,BYTE PTR [rip+0xffc58]        # 107d59 <packet_print>
    8101:	84 c0                	test   al,al
    8103:	74 11                	je     8116 <tls_decode+0xb8>
    8105:	48 8d 3d 12 55 00 00 	lea    rdi,[rip+0x5512]        # d61e <_IO_stdin_used+0x161e>
    810c:	b8 00 00 00 00       	mov    eax,0x0
    8111:	e8 da a4 ff ff       	call   25f0 <printf@plt>
    8116:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    811a:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    811e:	90                   	nop
    811f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8123:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    8126:	0f b6 c0             	movzx  eax,al
    8129:	83 f8 17             	cmp    eax,0x17
    812c:	74 37                	je     8165 <tls_decode+0x107>
    812e:	83 f8 17             	cmp    eax,0x17
    8131:	7f 35                	jg     8168 <tls_decode+0x10a>
    8133:	83 f8 16             	cmp    eax,0x16
    8136:	74 11                	je     8149 <tls_decode+0xeb>
    8138:	83 f8 16             	cmp    eax,0x16
    813b:	7f 2b                	jg     8168 <tls_decode+0x10a>
    813d:	83 f8 14             	cmp    eax,0x14
    8140:	74 29                	je     816b <tls_decode+0x10d>
    8142:	83 f8 15             	cmp    eax,0x15
    8145:	74 27                	je     816e <tls_decode+0x110>
    8147:	eb 1f                	jmp    8168 <tls_decode+0x10a>
    8149:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    814d:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    8151:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8155:	48 89 ce             	mov    rsi,rcx
    8158:	48 89 c7             	mov    rdi,rax
    815b:	e8 11 00 00 00       	call   8171 <tlshandshake>
    8160:	eb 0d                	jmp    816f <tls_decode+0x111>
    8162:	90                   	nop
    8163:	eb 0a                	jmp    816f <tls_decode+0x111>
    8165:	90                   	nop
    8166:	eb 07                	jmp    816f <tls_decode+0x111>
    8168:	90                   	nop
    8169:	eb 04                	jmp    816f <tls_decode+0x111>
    816b:	90                   	nop
    816c:	eb 01                	jmp    816f <tls_decode+0x111>
    816e:	90                   	nop
    816f:	c9                   	leave  
    8170:	c3                   	ret    

0000000000008171 <tlshandshake>:
    8171:	f3 0f 1e fa          	endbr64 
    8175:	55                   	push   rbp
    8176:	48 89 e5             	mov    rbp,rsp
    8179:	48 83 ec 30          	sub    rsp,0x30
    817d:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8181:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    8185:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    8189:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    818d:	48 83 c0 08          	add    rax,0x8
    8191:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8195:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8199:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    819c:	0f b6 c0             	movzx  eax,al
    819f:	83 f8 0b             	cmp    eax,0xb
    81a2:	0f 87 bf 00 00 00    	ja     8267 <tlshandshake+0xf6>
    81a8:	89 c0                	mov    eax,eax
    81aa:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    81b1:	00 
    81b2:	48 8d 05 bb 54 00 00 	lea    rax,[rip+0x54bb]        # d674 <_IO_stdin_used+0x1674>
    81b9:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    81bc:	48 98                	cdqe   
    81be:	48 8d 15 af 54 00 00 	lea    rdx,[rip+0x54af]        # d674 <_IO_stdin_used+0x1674>
    81c5:	48 01 d0             	add    rax,rdx
    81c8:	3e ff e0             	notrack jmp rax
    81cb:	48 8d 3d 5b 54 00 00 	lea    rdi,[rip+0x545b]        # d62d <_IO_stdin_used+0x162d>
    81d2:	e8 49 a3 ff ff       	call   2520 <puts@plt>
    81d7:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    81db:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    81df:	e9 83 00 00 00       	jmp    8267 <tlshandshake+0xf6>
    81e4:	0f b6 05 6e fb 0f 00 	movzx  eax,BYTE PTR [rip+0xffb6e]        # 107d59 <packet_print>
    81eb:	84 c0                	test   al,al
    81ed:	74 0c                	je     81fb <tlshandshake+0x8a>
    81ef:	48 8d 3d 44 54 00 00 	lea    rdi,[rip+0x5444]        # d63a <_IO_stdin_used+0x163a>
    81f6:	e8 25 a3 ff ff       	call   2520 <puts@plt>
    81fb:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    81ff:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    8203:	eb 62                	jmp    8267 <tlshandshake+0xf6>
    8205:	0f b6 05 4d fb 0f 00 	movzx  eax,BYTE PTR [rip+0xffb4d]        # 107d59 <packet_print>
    820c:	84 c0                	test   al,al
    820e:	74 0c                	je     821c <tlshandshake+0xab>
    8210:	48 8d 3d 30 54 00 00 	lea    rdi,[rip+0x5430]        # d647 <_IO_stdin_used+0x1647>
    8217:	e8 04 a3 ff ff       	call   2520 <puts@plt>
    821c:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8220:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    8224:	eb 41                	jmp    8267 <tlshandshake+0xf6>
    8226:	0f b6 05 2c fb 0f 00 	movzx  eax,BYTE PTR [rip+0xffb2c]        # 107d59 <packet_print>
    822d:	84 c0                	test   al,al
    822f:	74 0c                	je     823d <tlshandshake+0xcc>
    8231:	48 8d 3d 22 54 00 00 	lea    rdi,[rip+0x5422]        # d65a <_IO_stdin_used+0x165a>
    8238:	e8 e3 a2 ff ff       	call   2520 <puts@plt>
    823d:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8241:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    8245:	eb 20                	jmp    8267 <tlshandshake+0xf6>
    8247:	0f b6 05 0b fb 0f 00 	movzx  eax,BYTE PTR [rip+0xffb0b]        # 107d59 <packet_print>
    824e:	84 c0                	test   al,al
    8250:	74 0c                	je     825e <tlshandshake+0xed>
    8252:	48 8d 3d 0d 54 00 00 	lea    rdi,[rip+0x540d]        # d666 <_IO_stdin_used+0x1666>
    8259:	e8 c2 a2 ff ff       	call   2520 <puts@plt>
    825e:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8262:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    8266:	90                   	nop
    8267:	90                   	nop
    8268:	c9                   	leave  
    8269:	c3                   	ret    

000000000000826a <process_opcode>:
    826a:	f3 0f 1e fa          	endbr64 
    826e:	55                   	push   rbp
    826f:	48 89 e5             	mov    rbp,rsp
    8272:	48 81 ec 30 04 00 00 	sub    rsp,0x430
    8279:	48 89 bd d8 fb ff ff 	mov    QWORD PTR [rbp-0x428],rdi
    8280:	48 89 b5 d0 fb ff ff 	mov    QWORD PTR [rbp-0x430],rsi
    8287:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    828e:	00 00 
    8290:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8294:	31 c0                	xor    eax,eax
    8296:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    829d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    82a0:	0f b6 c0             	movzx  eax,al
    82a3:	3d db 00 00 00       	cmp    eax,0xdb
    82a8:	75 4b                	jne    82f5 <process_opcode+0x8b>
    82aa:	c6 85 e4 fb ff ff db 	mov    BYTE PTR [rbp-0x41c],0xdb
    82b1:	8b 85 e4 fb ff ff    	mov    eax,DWORD PTR [rbp-0x41c]
    82b7:	0f b6 c0             	movzx  eax,al
    82ba:	0d 00 00 00 01       	or     eax,0x1000000
    82bf:	89 85 e4 fb ff ff    	mov    DWORD PTR [rbp-0x41c],eax
    82c5:	48 8d 85 e4 fb ff ff 	lea    rax,[rbp-0x41c]
    82cc:	48 89 85 e8 fb ff ff 	mov    QWORD PTR [rbp-0x418],rax
    82d3:	48 8b 85 d0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x430]
    82da:	8b 00                	mov    eax,DWORD PTR [rax]
    82dc:	48 8b b5 e8 fb ff ff 	mov    rsi,QWORD PTR [rbp-0x418]
    82e3:	b9 00 00 00 00       	mov    ecx,0x0
    82e8:	ba 04 00 00 00       	mov    edx,0x4
    82ed:	89 c7                	mov    edi,eax
    82ef:	e8 dc a2 ff ff       	call   25d0 <send@plt>
    82f4:	90                   	nop
    82f5:	90                   	nop
    82f6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    82fa:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    8301:	00 00 
    8303:	74 05                	je     830a <process_opcode+0xa0>
    8305:	e8 a6 a2 ff ff       	call   25b0 <__stack_chk_fail@plt>
    830a:	c9                   	leave  
    830b:	c3                   	ret    

000000000000830c <callback>:
    830c:	f3 0f 1e fa          	endbr64 
    8310:	55                   	push   rbp
    8311:	48 89 e5             	mov    rbp,rsp
    8314:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    8318:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
    831b:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    831f:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    8323:	b8 00 00 00 00       	mov    eax,0x0
    8328:	5d                   	pop    rbp
    8329:	c3                   	ret    

000000000000832a <update_db>:
    832a:	f3 0f 1e fa          	endbr64 
    832e:	55                   	push   rbp
    832f:	48 89 e5             	mov    rbp,rsp
    8332:	48 81 ec 40 02 00 00 	sub    rsp,0x240
    8339:	48 89 bd c8 fd ff ff 	mov    QWORD PTR [rbp-0x238],rdi
    8340:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8347:	00 00 
    8349:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    834d:	31 c0                	xor    eax,eax
    834f:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    8356:	48 89 85 e8 fd ff ff 	mov    QWORD PTR [rbp-0x218],rax
    835d:	48 8d 3d 44 53 00 00 	lea    rdi,[rip+0x5344]        # d6a8 <_IO_stdin_used+0x16a8>
    8364:	e8 b7 a1 ff ff       	call   2520 <puts@plt>
    8369:	48 c7 85 d8 fd ff ff 	mov    QWORD PTR [rbp-0x228],0x0
    8370:	00 00 00 00 
    8374:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    837b:	48 89 c6             	mov    rsi,rax
    837e:	48 8d 3d 9b f9 0f 00 	lea    rdi,[rip+0xff99b]        # 107d20 <sqlite_db_path>
    8385:	e8 d6 a1 ff ff       	call   2560 <sqlite3_open@plt>
    838a:	89 85 d4 fd ff ff    	mov    DWORD PTR [rbp-0x22c],eax
    8390:	83 bd d4 fd ff ff 00 	cmp    DWORD PTR [rbp-0x22c],0x0
    8397:	74 28                	je     83c1 <update_db+0x97>
    8399:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    83a0:	48 89 c7             	mov    rdi,rax
    83a3:	e8 f8 a2 ff ff       	call   26a0 <sqlite3_errmsg@plt>
    83a8:	48 89 c6             	mov    rsi,rax
    83ab:	48 8d 3d 02 53 00 00 	lea    rdi,[rip+0x5302]        # d6b4 <_IO_stdin_used+0x16b4>
    83b2:	b8 00 00 00 00       	mov    eax,0x0
    83b7:	e8 34 a2 ff ff       	call   25f0 <printf@plt>
    83bc:	e9 a2 00 00 00       	jmp    8463 <update_db+0x139>
    83c1:	48 8b 85 e8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x218]
    83c8:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    83cb:	85 c0                	test   eax,eax
    83cd:	75 2e                	jne    83fd <update_db+0xd3>
    83cf:	48 8b 85 e8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x218]
    83d6:	48 8d 48 10          	lea    rcx,[rax+0x10]
    83da:	48 8b 95 e8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x218]
    83e1:	48 8d 85 f0 fd ff ff 	lea    rax,[rbp-0x210]
    83e8:	48 8d 35 d9 52 00 00 	lea    rsi,[rip+0x52d9]        # d6c8 <_IO_stdin_used+0x16c8>
    83ef:	48 89 c7             	mov    rdi,rax
    83f2:	b8 00 00 00 00       	mov    eax,0x0
    83f7:	e8 74 a4 ff ff       	call   2870 <sprintf@plt>
    83fc:	90                   	nop
    83fd:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    8404:	48 8d 95 d8 fd ff ff 	lea    rdx,[rbp-0x228]
    840b:	48 8d b5 f0 fd ff ff 	lea    rsi,[rbp-0x210]
    8412:	49 89 d0             	mov    r8,rdx
    8415:	b9 00 00 00 00       	mov    ecx,0x0
    841a:	ba 00 00 00 00       	mov    edx,0x0
    841f:	48 89 c7             	mov    rdi,rax
    8422:	e8 29 a1 ff ff       	call   2550 <sqlite3_exec@plt>
    8427:	89 85 d4 fd ff ff    	mov    DWORD PTR [rbp-0x22c],eax
    842d:	83 bd d4 fd ff ff 00 	cmp    DWORD PTR [rbp-0x22c],0x0
    8434:	74 2c                	je     8462 <update_db+0x138>
    8436:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    843d:	48 89 c6             	mov    rsi,rax
    8440:	48 8d 3d c6 52 00 00 	lea    rdi,[rip+0x52c6]        # d70d <_IO_stdin_used+0x170d>
    8447:	b8 00 00 00 00       	mov    eax,0x0
    844c:	e8 9f a1 ff ff       	call   25f0 <printf@plt>
    8451:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    8458:	48 89 c7             	mov    rdi,rax
    845b:	e8 00 a4 ff ff       	call   2860 <sqlite3_free@plt>
    8460:	eb 01                	jmp    8463 <update_db+0x139>
    8462:	90                   	nop
    8463:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    846a:	48 89 c7             	mov    rdi,rax
    846d:	e8 7e a2 ff ff       	call   26f0 <sqlite3_close@plt>
    8472:	b8 01 00 00 00       	mov    eax,0x1
    8477:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    847b:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
    8482:	00 00 
    8484:	74 05                	je     848b <update_db+0x161>
    8486:	e8 25 a1 ff ff       	call   25b0 <__stack_chk_fail@plt>
    848b:	c9                   	leave  
    848c:	c3                   	ret    

000000000000848d <update_spi_db>:
    848d:	f3 0f 1e fa          	endbr64 
    8491:	55                   	push   rbp
    8492:	48 89 e5             	mov    rbp,rsp
    8495:	41 57                	push   r15
    8497:	41 56                	push   r14
    8499:	41 55                	push   r13
    849b:	41 54                	push   r12
    849d:	53                   	push   rbx
    849e:	48 81 ec 48 04 00 00 	sub    rsp,0x448
    84a5:	48 89 bd 98 fb ff ff 	mov    QWORD PTR [rbp-0x468],rdi
    84ac:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    84b3:	00 00 
    84b5:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    84b9:	31 c0                	xor    eax,eax
    84bb:	48 8b 85 98 fb ff ff 	mov    rax,QWORD PTR [rbp-0x468]
    84c2:	48 89 85 b0 fb ff ff 	mov    QWORD PTR [rbp-0x450],rax
    84c9:	48 8d 85 a0 fb ff ff 	lea    rax,[rbp-0x460]
    84d0:	48 89 c6             	mov    rsi,rax
    84d3:	48 8d 3d 51 52 00 00 	lea    rdi,[rip+0x5251]        # d72b <_IO_stdin_used+0x172b>
    84da:	e8 81 a0 ff ff       	call   2560 <sqlite3_open@plt>
    84df:	85 c0                	test   eax,eax
    84e1:	74 3c                	je     851f <update_spi_db+0x92>
    84e3:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    84ea:	48 89 c7             	mov    rdi,rax
    84ed:	e8 ae a1 ff ff       	call   26a0 <sqlite3_errmsg@plt>
    84f2:	48 89 c6             	mov    rsi,rax
    84f5:	48 8d 3d 47 52 00 00 	lea    rdi,[rip+0x5247]        # d743 <_IO_stdin_used+0x1743>
    84fc:	b8 00 00 00 00       	mov    eax,0x0
    8501:	e8 ea a0 ff ff       	call   25f0 <printf@plt>
    8506:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    850d:	48 89 c7             	mov    rdi,rax
    8510:	e8 db a1 ff ff       	call   26f0 <sqlite3_close@plt>
    8515:	b8 00 00 00 00       	mov    eax,0x0
    851a:	e9 5c 01 00 00       	jmp    867b <update_spi_db+0x1ee>
    851f:	48 8d 05 32 52 00 00 	lea    rax,[rip+0x5232]        # d758 <_IO_stdin_used+0x1758>
    8526:	48 89 85 b8 fb ff ff 	mov    QWORD PTR [rbp-0x448],rax
    852d:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8534:	8b 90 80 00 00 00    	mov    edx,DWORD PTR [rax+0x80]
    853a:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8541:	44 8b 78 7c          	mov    r15d,DWORD PTR [rax+0x7c]
    8545:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    854c:	4c 8b b0 98 00 00 00 	mov    r14,QWORD PTR [rax+0x98]
    8553:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    855a:	4c 8b a8 90 00 00 00 	mov    r13,QWORD PTR [rax+0x90]
    8561:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8568:	44 8b a0 a8 00 00 00 	mov    r12d,DWORD PTR [rax+0xa8]
    856f:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8576:	8b 98 a4 00 00 00    	mov    ebx,DWORD PTR [rax+0xa4]
    857c:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8583:	48 8b 40 70          	mov    rax,QWORD PTR [rax+0x70]
    8587:	44 8b 18             	mov    r11d,DWORD PTR [rax]
    858a:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8591:	44 8b 50 60          	mov    r10d,DWORD PTR [rax+0x60]
    8595:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    859c:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
    85a0:	44 8b 08             	mov    r9d,DWORD PTR [rax]
    85a3:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    85aa:	44 8b 40 5c          	mov    r8d,DWORD PTR [rax+0x5c]
    85ae:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    85b5:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    85b8:	89 85 94 fb ff ff    	mov    DWORD PTR [rbp-0x46c],eax
    85be:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    85c5:	8b 48 54             	mov    ecx,DWORD PTR [rax+0x54]
    85c8:	89 8d 90 fb ff ff    	mov    DWORD PTR [rbp-0x470],ecx
    85ce:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    85d5:	48 8d 48 29          	lea    rcx,[rax+0x29]
    85d9:	48 8b bd b0 fb ff ff 	mov    rdi,QWORD PTR [rbp-0x450]
    85e0:	48 8b b5 b8 fb ff ff 	mov    rsi,QWORD PTR [rbp-0x448]
    85e7:	48 8d 85 c0 fb ff ff 	lea    rax,[rbp-0x440]
    85ee:	52                   	push   rdx
    85ef:	41 57                	push   r15
    85f1:	41 56                	push   r14
    85f3:	41 55                	push   r13
    85f5:	41 54                	push   r12
    85f7:	53                   	push   rbx
    85f8:	41 53                	push   r11
    85fa:	41 52                	push   r10
    85fc:	41 51                	push   r9
    85fe:	41 50                	push   r8
    8600:	44 8b 8d 94 fb ff ff 	mov    r9d,DWORD PTR [rbp-0x46c]
    8607:	44 8b 85 90 fb ff ff 	mov    r8d,DWORD PTR [rbp-0x470]
    860e:	48 89 fa             	mov    rdx,rdi
    8611:	48 89 c7             	mov    rdi,rax
    8614:	b8 00 00 00 00       	mov    eax,0x0
    8619:	e8 52 a2 ff ff       	call   2870 <sprintf@plt>
    861e:	48 83 c4 50          	add    rsp,0x50
    8622:	48 c7 85 a8 fb ff ff 	mov    QWORD PTR [rbp-0x458],0x0
    8629:	00 00 00 00 
    862d:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    8634:	48 8d 95 a8 fb ff ff 	lea    rdx,[rbp-0x458]
    863b:	48 8d b5 c0 fb ff ff 	lea    rsi,[rbp-0x440]
    8642:	49 89 d0             	mov    r8,rdx
    8645:	b9 00 00 00 00       	mov    ecx,0x0
    864a:	ba 00 00 00 00       	mov    edx,0x0
    864f:	48 89 c7             	mov    rdi,rax
    8652:	e8 f9 9e ff ff       	call   2550 <sqlite3_exec@plt>
    8657:	85 c0                	test   eax,eax
    8659:	74 1b                	je     8676 <update_spi_db+0x1e9>
    865b:	48 8b 85 a8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x458]
    8662:	48 89 c6             	mov    rsi,rax
    8665:	48 8d 3d d9 51 00 00 	lea    rdi,[rip+0x51d9]        # d845 <_IO_stdin_used+0x1845>
    866c:	b8 00 00 00 00       	mov    eax,0x0
    8671:	e8 7a 9f ff ff       	call   25f0 <printf@plt>
    8676:	b8 00 00 00 00       	mov    eax,0x0
    867b:	48 8b 5d c8          	mov    rbx,QWORD PTR [rbp-0x38]
    867f:	64 48 33 1c 25 28 00 	xor    rbx,QWORD PTR fs:0x28
    8686:	00 00 
    8688:	74 05                	je     868f <update_spi_db+0x202>
    868a:	e8 21 9f ff ff       	call   25b0 <__stack_chk_fail@plt>
    868f:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    8693:	5b                   	pop    rbx
    8694:	41 5c                	pop    r12
    8696:	41 5d                	pop    r13
    8698:	41 5e                	pop    r14
    869a:	41 5f                	pop    r15
    869c:	5d                   	pop    rbp
    869d:	c3                   	ret    

000000000000869e <http_disect>:
    869e:	f3 0f 1e fa          	endbr64 
    86a2:	55                   	push   rbp
    86a3:	48 89 e5             	mov    rbp,rsp
    86a6:	48 81 ec 30 04 00 00 	sub    rsp,0x430
    86ad:	48 89 bd d8 fb ff ff 	mov    QWORD PTR [rbp-0x428],rdi
    86b4:	48 89 b5 d0 fb ff ff 	mov    QWORD PTR [rbp-0x430],rsi
    86bb:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    86c2:	00 00 
    86c4:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    86c8:	31 c0                	xor    eax,eax
    86ca:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    86d1:	be 0d 00 00 00       	mov    esi,0xd
    86d6:	48 89 c7             	mov    rdi,rax
    86d9:	e8 67 ae ff ff       	call   3545 <strloc>
    86de:	89 85 ec fb ff ff    	mov    DWORD PTR [rbp-0x414],eax
    86e4:	48 8d 3d 78 51 00 00 	lea    rdi,[rip+0x5178]        # d863 <_IO_stdin_used+0x1863>
    86eb:	e8 30 9e ff ff       	call   2520 <puts@plt>
    86f0:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    86f7:	48 89 c7             	mov    rdi,rax
    86fa:	e8 ed ae ff ff       	call   35ec <test_string_arr_print>
    86ff:	83 f0 01             	xor    eax,0x1
    8702:	84 c0                	test   al,al
    8704:	75 33                	jne    8739 <http_disect+0x9b>
    8706:	8b 85 ec fb ff ff    	mov    eax,DWORD PTR [rbp-0x414]
    870c:	48 63 d0             	movsxd rdx,eax
    870f:	48 8b 8d d8 fb ff ff 	mov    rcx,QWORD PTR [rbp-0x428]
    8716:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    871d:	48 89 ce             	mov    rsi,rcx
    8720:	48 89 c7             	mov    rdi,rax
    8723:	e8 a8 9d ff ff       	call   24d0 <strncpy@plt>
    8728:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    872f:	48 89 c7             	mov    rdi,rax
    8732:	e8 e9 9d ff ff       	call   2520 <puts@plt>
    8737:	eb 01                	jmp    873a <http_disect+0x9c>
    8739:	90                   	nop
    873a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    873e:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    8745:	00 00 
    8747:	74 05                	je     874e <http_disect+0xb0>
    8749:	e8 62 9e ff ff       	call   25b0 <__stack_chk_fail@plt>
    874e:	c9                   	leave  
    874f:	c3                   	ret    

0000000000008750 <dns_disect>:
    8750:	f3 0f 1e fa          	endbr64 
    8754:	55                   	push   rbp
    8755:	48 89 e5             	mov    rbp,rsp
    8758:	48 83 ec 30          	sub    rsp,0x30
    875c:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    8760:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    8764:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8768:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    876c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8770:	48 83 c0 0c          	add    rax,0xc
    8774:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    8778:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    877c:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    8780:	66 85 c0             	test   ax,ax
    8783:	75 6d                	jne    87f2 <dns_disect+0xa2>
    8785:	bf 00 04 00 00       	mov    edi,0x400
    878a:	e8 b1 9f ff ff       	call   2740 <malloc@plt>
    878f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8793:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8797:	ba 08 00 00 00       	mov    edx,0x8
    879c:	be 00 00 00 00       	mov    esi,0x0
    87a1:	48 89 c7             	mov    rdi,rax
    87a4:	e8 87 9e ff ff       	call   2630 <memset@plt>
    87a9:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    87ad:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    87b1:	48 89 d6             	mov    rsi,rdx
    87b4:	48 89 c7             	mov    rdi,rax
    87b7:	e8 39 00 00 00       	call   87f5 <get_dns_name>
    87bc:	0f b6 05 96 f5 0f 00 	movzx  eax,BYTE PTR [rip+0xff596]        # 107d59 <packet_print>
    87c3:	84 c0                	test   al,al
    87c5:	74 18                	je     87df <dns_disect+0x8f>
    87c7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    87cb:	48 89 c6             	mov    rsi,rax
    87ce:	48 8d 3d a0 50 00 00 	lea    rdi,[rip+0x50a0]        # d875 <_IO_stdin_used+0x1875>
    87d5:	b8 00 00 00 00       	mov    eax,0x0
    87da:	e8 11 9e ff ff       	call   25f0 <printf@plt>
    87df:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    87e4:	74 0c                	je     87f2 <dns_disect+0xa2>
    87e6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    87ea:	48 89 c7             	mov    rdi,rax
    87ed:	e8 9e 9c ff ff       	call   2490 <free@plt>
    87f2:	90                   	nop
    87f3:	c9                   	leave  
    87f4:	c3                   	ret    

00000000000087f5 <get_dns_name>:
    87f5:	f3 0f 1e fa          	endbr64 
    87f9:	55                   	push   rbp
    87fa:	48 89 e5             	mov    rbp,rsp
    87fd:	53                   	push   rbx
    87fe:	48 83 ec 28          	sub    rsp,0x28
    8802:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    8806:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    880a:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    8811:	eb 6a                	jmp    887d <get_dns_name+0x88>
    8813:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    8816:	48 63 d0             	movsxd rdx,eax
    8819:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    881d:	48 01 d0             	add    rax,rdx
    8820:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    8823:	3c 20                	cmp    al,0x20
    8825:	7e 24                	jle    884b <get_dns_name+0x56>
    8827:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    882a:	48 63 d0             	movsxd rdx,eax
    882d:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8831:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    8835:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    8839:	ba 01 00 00 00       	mov    edx,0x1
    883e:	48 89 ce             	mov    rsi,rcx
    8841:	48 89 c7             	mov    rdi,rax
    8844:	e8 f7 9d ff ff       	call   2640 <strncat@plt>
    8849:	eb 2e                	jmp    8879 <get_dns_name+0x84>
    884b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    884f:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    8856:	48 89 c2             	mov    rdx,rax
    8859:	b8 00 00 00 00       	mov    eax,0x0
    885e:	48 89 d7             	mov    rdi,rdx
    8861:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    8863:	48 89 c8             	mov    rax,rcx
    8866:	48 f7 d0             	not    rax
    8869:	48 8d 50 ff          	lea    rdx,[rax-0x1]
    886d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    8871:	48 01 d0             	add    rax,rdx
    8874:	66 c7 00 2e 00       	mov    WORD PTR [rax],0x2e
    8879:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    887d:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    8880:	48 63 d8             	movsxd rbx,eax
    8883:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8887:	48 89 c7             	mov    rdi,rax
    888a:	e8 01 9d ff ff       	call   2590 <strlen@plt>
    888f:	48 39 c3             	cmp    rbx,rax
    8892:	0f 82 7b ff ff ff    	jb     8813 <get_dns_name+0x1e>
    8898:	90                   	nop
    8899:	90                   	nop
    889a:	48 83 c4 28          	add    rsp,0x28
    889e:	5b                   	pop    rbx
    889f:	5d                   	pop    rbp
    88a0:	c3                   	ret    

00000000000088a1 <ftp_disect>:
    88a1:	f3 0f 1e fa          	endbr64 
    88a5:	55                   	push   rbp
    88a6:	48 89 e5             	mov    rbp,rsp
    88a9:	48 83 ec 20          	sub    rsp,0x20
    88ad:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    88b1:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    88b5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    88b9:	48 8d 35 c0 4f 00 00 	lea    rsi,[rip+0x4fc0]        # d880 <_IO_stdin_used+0x1880>
    88c0:	48 89 c7             	mov    rdi,rax
    88c3:	e8 f8 9f ff ff       	call   28c0 <strstr@plt>
    88c8:	48 85 c0             	test   rax,rax
    88cb:	75 1c                	jne    88e9 <ftp_disect+0x48>
    88cd:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    88d1:	48 8d 35 b8 4f 00 00 	lea    rsi,[rip+0x4fb8]        # d890 <_IO_stdin_used+0x1890>
    88d8:	48 89 c7             	mov    rdi,rax
    88db:	e8 e0 9f ff ff       	call   28c0 <strstr@plt>
    88e0:	48 85 c0             	test   rax,rax
    88e3:	0f 84 8a 00 00 00    	je     8973 <ftp_disect+0xd2>
    88e9:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    88ed:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    88f1:	48 89 c7             	mov    rdi,rax
    88f4:	e8 2d f1 ff ff       	call   7a26 <member_exists>
    88f9:	48 63 d0             	movsxd rdx,eax
    88fc:	48 89 d0             	mov    rax,rdx
    88ff:	48 c1 e0 02          	shl    rax,0x2
    8903:	48 01 d0             	add    rax,rdx
    8906:	48 c1 e0 03          	shl    rax,0x3
    890a:	48 01 d0             	add    rax,rdx
    890d:	48 c1 e0 04          	shl    rax,0x4
    8911:	48 8d 15 88 a7 0e 00 	lea    rdx,[rip+0xea788]        # f30a0 <watchlist>
    8918:	48 01 d0             	add    rax,rdx
    891b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    891f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8923:	8b 80 40 02 00 00    	mov    eax,DWORD PTR [rax+0x240]
    8929:	8d 50 01             	lea    edx,[rax+0x1]
    892c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8930:	89 90 40 02 00 00    	mov    DWORD PTR [rax+0x240],edx
    8936:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    893a:	8b 80 40 02 00 00    	mov    eax,DWORD PTR [rax+0x240]
    8940:	83 f8 04             	cmp    eax,0x4
    8943:	7e 2e                	jle    8973 <ftp_disect+0xd2>
    8945:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8949:	8b 88 40 02 00 00    	mov    ecx,DWORD PTR [rax+0x240]
    894f:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8953:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    8957:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    895b:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    895f:	48 89 c6             	mov    rsi,rax
    8962:	48 8d 3d 37 4f 00 00 	lea    rdi,[rip+0x4f37]        # d8a0 <_IO_stdin_used+0x18a0>
    8969:	b8 00 00 00 00       	mov    eax,0x0
    896e:	e8 7d 9c ff ff       	call   25f0 <printf@plt>
    8973:	90                   	nop
    8974:	c9                   	leave  
    8975:	c3                   	ret    

0000000000008976 <livedebug>:
    8976:	f3 0f 1e fa          	endbr64 
    897a:	55                   	push   rbp
    897b:	48 89 e5             	mov    rbp,rsp
    897e:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
    8985:	48 89 bd 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rdi
    898c:	48 89 b5 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rsi
    8993:	48 89 95 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdx
    899a:	48 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rcx
    89a1:	4c 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r8
    89a8:	4c 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r9
    89af:	84 c0                	test   al,al
    89b1:	74 20                	je     89d3 <livedebug+0x5d>
    89b3:	0f 29 45 80          	movaps XMMWORD PTR [rbp-0x80],xmm0
    89b7:	0f 29 4d 90          	movaps XMMWORD PTR [rbp-0x70],xmm1
    89bb:	0f 29 55 a0          	movaps XMMWORD PTR [rbp-0x60],xmm2
    89bf:	0f 29 5d b0          	movaps XMMWORD PTR [rbp-0x50],xmm3
    89c3:	0f 29 65 c0          	movaps XMMWORD PTR [rbp-0x40],xmm4
    89c7:	0f 29 6d d0          	movaps XMMWORD PTR [rbp-0x30],xmm5
    89cb:	0f 29 75 e0          	movaps XMMWORD PTR [rbp-0x20],xmm6
    89cf:	0f 29 7d f0          	movaps XMMWORD PTR [rbp-0x10],xmm7
    89d3:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    89da:	00 00 
    89dc:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    89e3:	31 c0                	xor    eax,eax
    89e5:	0f b6 05 d6 17 10 00 	movzx  eax,BYTE PTR [rip+0x1017d6]        # 10a1c2 <debug_mode>
    89ec:	84 c0                	test   al,al
    89ee:	74 4b                	je     8a3b <livedebug+0xc5>
    89f0:	c7 85 30 ff ff ff 08 	mov    DWORD PTR [rbp-0xd0],0x8
    89f7:	00 00 00 
    89fa:	c7 85 34 ff ff ff 30 	mov    DWORD PTR [rbp-0xcc],0x30
    8a01:	00 00 00 
    8a04:	48 8d 45 10          	lea    rax,[rbp+0x10]
    8a08:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    8a0f:	48 8d 85 50 ff ff ff 	lea    rax,[rbp-0xb0]
    8a16:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    8a1d:	48 8d 95 30 ff ff ff 	lea    rdx,[rbp-0xd0]
    8a24:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    8a2b:	48 89 d6             	mov    rsi,rdx
    8a2e:	48 89 c7             	mov    rdi,rax
    8a31:	b8 00 00 00 00       	mov    eax,0x0
    8a36:	e8 b5 9b ff ff       	call   25f0 <printf@plt>
    8a3b:	90                   	nop
    8a3c:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    8a43:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    8a4a:	00 00 
    8a4c:	74 05                	je     8a53 <livedebug+0xdd>
    8a4e:	e8 5d 9b ff ff       	call   25b0 <__stack_chk_fail@plt>
    8a53:	c9                   	leave  
    8a54:	c3                   	ret    

0000000000008a55 <forward_packet>:
    8a55:	f3 0f 1e fa          	endbr64 
    8a59:	55                   	push   rbp
    8a5a:	48 89 e5             	mov    rbp,rsp
    8a5d:	48 83 ec 20          	sub    rsp,0x20
    8a61:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8a65:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a69:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8a6d:	48 8d 35 7c f2 0f 00 	lea    rsi,[rip+0xff27c]        # 107cf0 <local_ip>
    8a74:	48 89 c7             	mov    rdi,rax
    8a77:	e8 34 9c ff ff       	call   26b0 <strcmp@plt>
    8a7c:	85 c0                	test   eax,eax
    8a7e:	74 4f                	je     8acf <forward_packet+0x7a>
    8a80:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a84:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    8a88:	48 8d 35 61 f2 0f 00 	lea    rsi,[rip+0xff261]        # 107cf0 <local_ip>
    8a8f:	48 89 c7             	mov    rdi,rax
    8a92:	e8 19 9c ff ff       	call   26b0 <strcmp@plt>
    8a97:	85 c0                	test   eax,eax
    8a99:	74 34                	je     8acf <forward_packet+0x7a>
    8a9b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a9f:	48 8b 00             	mov    rax,QWORD PTR [rax]
    8aa2:	48 8d 50 0e          	lea    rdx,[rax+0xe]
    8aa6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8aaa:	48 89 d6             	mov    rsi,rdx
    8aad:	48 89 c7             	mov    rdi,rax
    8ab0:	e8 3b 9a ff ff       	call   24f0 <strcpy@plt>
    8ab5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8ab9:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    8abc:	83 e8 0e             	sub    eax,0xe
    8abf:	89 c2                	mov    edx,eax
    8ac1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8ac5:	89 d6                	mov    esi,edx
    8ac7:	48 89 c7             	mov    rdi,rax
    8aca:	e8 81 c9 ff ff       	call   5450 <ascii_hexdump>
    8acf:	90                   	nop
    8ad0:	c9                   	leave  
    8ad1:	c3                   	ret    

0000000000008ad2 <conversation_exists>:
    8ad2:	f3 0f 1e fa          	endbr64 
    8ad6:	55                   	push   rbp
    8ad7:	48 89 e5             	mov    rbp,rsp
    8ada:	48 83 ec 20          	sub    rsp,0x20
    8ade:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8ae2:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    8ae9:	e9 ff 00 00 00       	jmp    8bed <conversation_exists+0x11b>
    8aee:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8af1:	48 98                	cdqe   
    8af3:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8afa:	48 8d 15 1f 19 10 00 	lea    rdx,[rip+0x10191f]        # 10a420 <spi_table>
    8b01:	48 01 d0             	add    rax,rdx
    8b04:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8b08:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b0c:	0f b6 80 b0 00 00 00 	movzx  eax,BYTE PTR [rax+0xb0]
    8b13:	84 c0                	test   al,al
    8b15:	0f 84 ce 00 00 00    	je     8be9 <conversation_exists+0x117>
    8b1b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b1f:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    8b22:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b26:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    8b29:	39 c2                	cmp    edx,eax
    8b2b:	75 58                	jne    8b85 <conversation_exists+0xb3>
    8b2d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b31:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    8b34:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b38:	8b 40 54             	mov    eax,DWORD PTR [rax+0x54]
    8b3b:	39 c2                	cmp    edx,eax
    8b3d:	75 46                	jne    8b85 <conversation_exists+0xb3>
    8b3f:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8b43:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b47:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8b4b:	48 89 d6             	mov    rsi,rdx
    8b4e:	48 89 c7             	mov    rdi,rax
    8b51:	e8 5a 9b ff ff       	call   26b0 <strcmp@plt>
    8b56:	85 c0                	test   eax,eax
    8b58:	0f 85 8a 00 00 00    	jne    8be8 <conversation_exists+0x116>
    8b5e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b62:	48 8d 50 29          	lea    rdx,[rax+0x29]
    8b66:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b6a:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    8b6e:	48 89 d6             	mov    rsi,rdx
    8b71:	48 89 c7             	mov    rdi,rax
    8b74:	e8 37 9b ff ff       	call   26b0 <strcmp@plt>
    8b79:	85 c0                	test   eax,eax
    8b7b:	75 6b                	jne    8be8 <conversation_exists+0x116>
    8b7d:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8b80:	e9 81 00 00 00       	jmp    8c06 <conversation_exists+0x134>
    8b85:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b89:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    8b8c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b90:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    8b93:	39 c2                	cmp    edx,eax
    8b95:	75 52                	jne    8be9 <conversation_exists+0x117>
    8b97:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b9b:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    8b9e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8ba2:	8b 40 54             	mov    eax,DWORD PTR [rax+0x54]
    8ba5:	39 c2                	cmp    edx,eax
    8ba7:	75 40                	jne    8be9 <conversation_exists+0x117>
    8ba9:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8bad:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8bb1:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    8bb5:	48 89 d6             	mov    rsi,rdx
    8bb8:	48 89 c7             	mov    rdi,rax
    8bbb:	e8 f0 9a ff ff       	call   26b0 <strcmp@plt>
    8bc0:	85 c0                	test   eax,eax
    8bc2:	75 25                	jne    8be9 <conversation_exists+0x117>
    8bc4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8bc8:	48 8d 50 29          	lea    rdx,[rax+0x29]
    8bcc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8bd0:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8bd4:	48 89 d6             	mov    rsi,rdx
    8bd7:	48 89 c7             	mov    rdi,rax
    8bda:	e8 d1 9a ff ff       	call   26b0 <strcmp@plt>
    8bdf:	85 c0                	test   eax,eax
    8be1:	75 06                	jne    8be9 <conversation_exists+0x117>
    8be3:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8be6:	eb 1e                	jmp    8c06 <conversation_exists+0x134>
    8be8:	90                   	nop
    8be9:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    8bed:	8b 05 4d 84 00 00    	mov    eax,DWORD PTR [rip+0x844d]        # 11040 <total_conversations>
    8bf3:	8d 50 01             	lea    edx,[rax+0x1]
    8bf6:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8bf9:	39 c2                	cmp    edx,eax
    8bfb:	0f 87 ed fe ff ff    	ja     8aee <conversation_exists+0x1c>
    8c01:	b8 ff ff ff ff       	mov    eax,0xffffffff
    8c06:	c9                   	leave  
    8c07:	c3                   	ret    

0000000000008c08 <get_new_spi_location>:
    8c08:	f3 0f 1e fa          	endbr64 
    8c0c:	55                   	push   rbp
    8c0d:	48 89 e5             	mov    rbp,rsp
    8c10:	8b 05 2a 84 00 00    	mov    eax,DWORD PTR [rip+0x842a]        # 11040 <total_conversations>
    8c16:	83 f8 ff             	cmp    eax,0xffffffff
    8c19:	75 17                	jne    8c32 <get_new_spi_location+0x2a>
    8c1b:	8b 05 1f 84 00 00    	mov    eax,DWORD PTR [rip+0x841f]        # 11040 <total_conversations>
    8c21:	83 c0 01             	add    eax,0x1
    8c24:	89 05 16 84 00 00    	mov    DWORD PTR [rip+0x8416],eax        # 11040 <total_conversations>
    8c2a:	8b 05 10 84 00 00    	mov    eax,DWORD PTR [rip+0x8410]        # 11040 <total_conversations>
    8c30:	eb 52                	jmp    8c84 <get_new_spi_location+0x7c>
    8c32:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    8c39:	eb 27                	jmp    8c62 <get_new_spi_location+0x5a>
    8c3b:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    8c3e:	48 98                	cdqe   
    8c40:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8c47:	48 8d 15 82 18 10 00 	lea    rdx,[rip+0x101882]        # 10a4d0 <spi_table+0xb0>
    8c4e:	0f b6 04 10          	movzx  eax,BYTE PTR [rax+rdx*1]
    8c52:	83 f0 01             	xor    eax,0x1
    8c55:	84 c0                	test   al,al
    8c57:	74 05                	je     8c5e <get_new_spi_location+0x56>
    8c59:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    8c5c:	eb 26                	jmp    8c84 <get_new_spi_location+0x7c>
    8c5e:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    8c62:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
    8c65:	8b 05 d5 83 00 00    	mov    eax,DWORD PTR [rip+0x83d5]        # 11040 <total_conversations>
    8c6b:	39 c2                	cmp    edx,eax
    8c6d:	72 cc                	jb     8c3b <get_new_spi_location+0x33>
    8c6f:	8b 05 cb 83 00 00    	mov    eax,DWORD PTR [rip+0x83cb]        # 11040 <total_conversations>
    8c75:	83 c0 01             	add    eax,0x1
    8c78:	89 05 c2 83 00 00    	mov    DWORD PTR [rip+0x83c2],eax        # 11040 <total_conversations>
    8c7e:	8b 05 bc 83 00 00    	mov    eax,DWORD PTR [rip+0x83bc]        # 11040 <total_conversations>
    8c84:	5d                   	pop    rbp
    8c85:	c3                   	ret    

0000000000008c86 <add_new_conversation>:
    8c86:	f3 0f 1e fa          	endbr64 
    8c8a:	55                   	push   rbp
    8c8b:	48 89 e5             	mov    rbp,rsp
    8c8e:	48 83 ec 20          	sub    rsp,0x20
    8c92:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8c96:	0f b6 05 b4 f0 0f 00 	movzx  eax,BYTE PTR [rip+0xff0b4]        # 107d51 <use_spi>
    8c9d:	84 c0                	test   al,al
    8c9f:	0f 84 17 02 00 00    	je     8ebc <add_new_conversation+0x236>
    8ca5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8ca9:	48 89 c7             	mov    rdi,rax
    8cac:	e8 21 fe ff ff       	call   8ad2 <conversation_exists>
    8cb1:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    8cb4:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    8cb8:	0f 84 88 00 00 00    	je     8d46 <add_new_conversation+0xc0>
    8cbe:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8cc1:	48 98                	cdqe   
    8cc3:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8cca:	48 8d 15 4f 17 10 00 	lea    rdx,[rip+0x10174f]        # 10a420 <spi_table>
    8cd1:	48 01 d0             	add    rax,rdx
    8cd4:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8cd8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8cdc:	8b 80 ac 00 00 00    	mov    eax,DWORD PTR [rax+0xac]
    8ce2:	8d 50 01             	lea    edx,[rax+0x1]
    8ce5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8ce9:	89 90 ac 00 00 00    	mov    DWORD PTR [rax+0xac],edx
    8cef:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8cf3:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    8cf9:	8d 50 01             	lea    edx,[rax+0x1]
    8cfc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d00:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    8d06:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d0a:	8b 78 54             	mov    edi,DWORD PTR [rax+0x54]
    8d0d:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    8d11:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d15:	8b 50 58             	mov    edx,DWORD PTR [rax+0x58]
    8d18:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d1c:	48 8d 70 29          	lea    rsi,[rax+0x29]
    8d20:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8d23:	41 89 f9             	mov    r9d,edi
    8d26:	49 89 c8             	mov    r8,rcx
    8d29:	89 d1                	mov    ecx,edx
    8d2b:	48 89 f2             	mov    rdx,rsi
    8d2e:	89 c6                	mov    esi,eax
    8d30:	48 8d 3d b1 4b 00 00 	lea    rdi,[rip+0x4bb1]        # d8e8 <_IO_stdin_used+0x18e8>
    8d37:	b8 00 00 00 00       	mov    eax,0x0
    8d3c:	e8 af 98 ff ff       	call   25f0 <printf@plt>
    8d41:	e9 76 01 00 00       	jmp    8ebc <add_new_conversation+0x236>
    8d46:	b8 00 00 00 00       	mov    eax,0x0
    8d4b:	e8 b8 fe ff ff       	call   8c08 <get_new_spi_location>
    8d50:	48 98                	cdqe   
    8d52:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8d59:	48 8d 15 c0 16 10 00 	lea    rdx,[rip+0x1016c0]        # 10a420 <spi_table>
    8d60:	48 01 d0             	add    rax,rdx
    8d63:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8d67:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d6b:	ba 08 00 00 00       	mov    edx,0x8
    8d70:	be 00 00 00 00       	mov    esi,0x0
    8d75:	48 89 c7             	mov    rdi,rax
    8d78:	e8 b3 98 ff ff       	call   2630 <memset@plt>
    8d7d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d81:	c6 80 b0 00 00 00 01 	mov    BYTE PTR [rax+0xb0],0x1
    8d88:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d8c:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8d90:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8d94:	48 83 c2 29          	add    rdx,0x29
    8d98:	48 89 c6             	mov    rsi,rax
    8d9b:	48 89 d7             	mov    rdi,rdx
    8d9e:	e8 4d 97 ff ff       	call   24f0 <strcpy@plt>
    8da3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8da7:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
    8dab:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8daf:	48 89 d6             	mov    rsi,rdx
    8db2:	48 89 c7             	mov    rdi,rax
    8db5:	e8 36 97 ff ff       	call   24f0 <strcpy@plt>
    8dba:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8dbe:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    8dc1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8dc5:	89 50 58             	mov    DWORD PTR [rax+0x58],edx
    8dc8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8dcc:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    8dcf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8dd3:	89 50 54             	mov    DWORD PTR [rax+0x54],edx
    8dd6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8dda:	c7 40 7c 00 00 00 00 	mov    DWORD PTR [rax+0x7c],0x0
    8de1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8de5:	48 8d 50 5c          	lea    rdx,[rax+0x5c]
    8de9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8ded:	48 89 50 70          	mov    QWORD PTR [rax+0x70],rdx
    8df1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8df5:	48 8d 50 60          	lea    rdx,[rax+0x60]
    8df9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8dfd:	48 89 50 68          	mov    QWORD PTR [rax+0x68],rdx
    8e01:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8e05:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8e09:	48 89 d6             	mov    rsi,rdx
    8e0c:	48 89 c7             	mov    rdi,rax
    8e0f:	e8 8e 04 00 00       	call   92a2 <increment_stats>
    8e14:	bf 00 00 00 00       	mov    edi,0x0
    8e19:	e8 e2 98 ff ff       	call   2700 <time@plt>
    8e1e:	48 89 c2             	mov    rdx,rax
    8e21:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e25:	48 89 90 90 00 00 00 	mov    QWORD PTR [rax+0x90],rdx
    8e2c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e30:	c7 80 80 00 00 00 00 	mov    DWORD PTR [rax+0x80],0x0
    8e37:	00 00 00 
    8e3a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e3e:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    8e44:	8d 50 01             	lea    edx,[rax+0x1]
    8e47:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e4b:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    8e51:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8e55:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    8e58:	89 c2                	mov    edx,eax
    8e5a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e5e:	89 90 a4 00 00 00    	mov    DWORD PTR [rax+0xa4],edx
    8e64:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e68:	8b 78 54             	mov    edi,DWORD PTR [rax+0x54]
    8e6b:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    8e6f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e73:	8b 50 58             	mov    edx,DWORD PTR [rax+0x58]
    8e76:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e7a:	48 8d 70 29          	lea    rsi,[rax+0x29]
    8e7e:	8b 05 bc 81 00 00    	mov    eax,DWORD PTR [rip+0x81bc]        # 11040 <total_conversations>
    8e84:	41 89 f9             	mov    r9d,edi
    8e87:	49 89 c8             	mov    r8,rcx
    8e8a:	89 d1                	mov    ecx,edx
    8e8c:	48 89 f2             	mov    rdx,rsi
    8e8f:	89 c6                	mov    esi,eax
    8e91:	48 8d 3d 78 4a 00 00 	lea    rdi,[rip+0x4a78]        # d910 <_IO_stdin_used+0x1910>
    8e98:	b8 00 00 00 00       	mov    eax,0x0
    8e9d:	e8 4e 97 ff ff       	call   25f0 <printf@plt>
    8ea2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8ea6:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    8ea9:	83 f8 7e             	cmp    eax,0x7e
    8eac:	75 0e                	jne    8ebc <add_new_conversation+0x236>
    8eae:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8eb2:	c7 80 8c 00 00 00 f3 	mov    DWORD PTR [rax+0x8c],0xf3
    8eb9:	00 00 00 
    8ebc:	90                   	nop
    8ebd:	c9                   	leave  
    8ebe:	c3                   	ret    

0000000000008ebf <spi_ud_thw>:
    8ebf:	f3 0f 1e fa          	endbr64 
    8ec3:	55                   	push   rbp
    8ec4:	48 89 e5             	mov    rbp,rsp
    8ec7:	48 83 ec 20          	sub    rsp,0x20
    8ecb:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8ecf:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8ed3:	48 89 c7             	mov    rdi,rax
    8ed6:	e8 f7 fb ff ff       	call   8ad2 <conversation_exists>
    8edb:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    8ede:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    8ee2:	0f 84 9d 00 00 00    	je     8f85 <spi_ud_thw+0xc6>
    8ee8:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8eeb:	48 98                	cdqe   
    8eed:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8ef4:	48 8d 15 25 15 10 00 	lea    rdx,[rip+0x101525]        # 10a420 <spi_table>
    8efb:	48 01 d0             	add    rax,rdx
    8efe:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8f02:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8f06:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    8f0c:	8d 50 01             	lea    edx,[rax+0x1]
    8f0f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8f13:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    8f19:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8f1d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8f21:	48 89 d6             	mov    rsi,rdx
    8f24:	48 89 c7             	mov    rdi,rax
    8f27:	e8 76 03 00 00       	call   92a2 <increment_stats>
    8f2c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8f30:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    8f33:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8f37:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    8f3b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8f3f:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    8f42:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8f46:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    8f4a:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8f4d:	41 89 f9             	mov    r9d,edi
    8f50:	49 89 f0             	mov    r8,rsi
    8f53:	89 c6                	mov    esi,eax
    8f55:	48 8d 3d dc 49 00 00 	lea    rdi,[rip+0x49dc]        # d938 <_IO_stdin_used+0x1938>
    8f5c:	b8 00 00 00 00       	mov    eax,0x0
    8f61:	e8 8a 96 ff ff       	call   25f0 <printf@plt>
    8f66:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8f6a:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
    8f70:	3d f3 00 00 00       	cmp    eax,0xf3
    8f75:	75 0e                	jne    8f85 <spi_ud_thw+0xc6>
    8f77:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8f7b:	c7 80 8c 00 00 00 f4 	mov    DWORD PTR [rax+0x8c],0xf4
    8f82:	00 00 00 
    8f85:	90                   	nop
    8f86:	c9                   	leave  
    8f87:	c3                   	ret    

0000000000008f88 <update_table>:
    8f88:	f3 0f 1e fa          	endbr64 
    8f8c:	55                   	push   rbp
    8f8d:	48 89 e5             	mov    rbp,rsp
    8f90:	48 83 ec 30          	sub    rsp,0x30
    8f94:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    8f98:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8f9f:	00 00 
    8fa1:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8fa5:	31 c0                	xor    eax,eax
    8fa7:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8fab:	48 89 c7             	mov    rdi,rax
    8fae:	e8 1f fb ff ff       	call   8ad2 <conversation_exists>
    8fb3:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
    8fb6:	83 7d e4 ff          	cmp    DWORD PTR [rbp-0x1c],0xffffffff
    8fba:	0f 84 52 01 00 00    	je     9112 <update_table+0x18a>
    8fc0:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    8fc3:	48 98                	cdqe   
    8fc5:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8fcc:	48 8d 15 4d 14 10 00 	lea    rdx,[rip+0x10144d]        # 10a420 <spi_table>
    8fd3:	48 01 d0             	add    rax,rdx
    8fd6:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    8fda:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8fde:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    8fe4:	8d 50 01             	lea    edx,[rax+0x1]
    8fe7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8feb:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    8ff1:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    8ff5:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8ff9:	48 89 d6             	mov    rsi,rdx
    8ffc:	48 89 c7             	mov    rdi,rax
    8fff:	e8 9e 02 00 00       	call   92a2 <increment_stats>
    9004:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9008:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
    900e:	3d f4 00 00 00       	cmp    eax,0xf4
    9013:	75 4d                	jne    9062 <update_table+0xda>
    9015:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9019:	c7 80 8c 00 00 00 f1 	mov    DWORD PTR [rax+0x8c],0xf1
    9020:	00 00 00 
    9023:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9027:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    902a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    902e:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    9032:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9036:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    9039:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    903d:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    9041:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    9044:	41 89 f9             	mov    r9d,edi
    9047:	49 89 f0             	mov    r8,rsi
    904a:	89 c6                	mov    esi,eax
    904c:	48 8d 3d 0d 49 00 00 	lea    rdi,[rip+0x490d]        # d960 <_IO_stdin_used+0x1960>
    9053:	b8 00 00 00 00       	mov    eax,0x0
    9058:	e8 93 95 ff ff       	call   25f0 <printf@plt>
    905d:	e9 b0 00 00 00       	jmp    9112 <update_table+0x18a>
    9062:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9066:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
    906c:	3d f6 00 00 00       	cmp    eax,0xf6
    9071:	0f 85 9b 00 00 00    	jne    9112 <update_table+0x18a>
    9077:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    907b:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    907e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9082:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    9086:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    908a:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    908d:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9091:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    9095:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    9098:	41 89 f9             	mov    r9d,edi
    909b:	49 89 f0             	mov    r8,rsi
    909e:	89 c6                	mov    esi,eax
    90a0:	48 8d 3d e9 48 00 00 	lea    rdi,[rip+0x48e9]        # d990 <_IO_stdin_used+0x1990>
    90a7:	b8 00 00 00 00       	mov    eax,0x0
    90ac:	e8 3f 95 ff ff       	call   25f0 <printf@plt>
    90b1:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    90b5:	c7 80 8c 00 00 00 fa 	mov    DWORD PTR [rax+0x8c],0xfa
    90bc:	00 00 00 
    90bf:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    90c3:	c6 80 b0 00 00 00 00 	mov    BYTE PTR [rax+0xb0],0x0
    90ca:	bf 00 00 00 00       	mov    edi,0x0
    90cf:	e8 2c 96 ff ff       	call   2700 <time@plt>
    90d4:	48 89 c2             	mov    rdx,rax
    90d7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    90db:	48 89 90 98 00 00 00 	mov    QWORD PTR [rax+0x98],rdx
    90e2:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    90e6:	48 8d 45 e8          	lea    rax,[rbp-0x18]
    90ea:	48 89 d1             	mov    rcx,rdx
    90ed:	48 8d 15 99 f3 ff ff 	lea    rdx,[rip+0xfffffffffffff399]        # 848d <update_spi_db>
    90f4:	be 00 00 00 00       	mov    esi,0x0
    90f9:	48 89 c7             	mov    rdi,rax
    90fc:	e8 af 93 ff ff       	call   24b0 <pthread_create@plt>
    9101:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9105:	be 00 00 00 00       	mov    esi,0x0
    910a:	48 89 c7             	mov    rdi,rax
    910d:	e8 ce 96 ff ff       	call   27e0 <pthread_join@plt>
    9112:	90                   	nop
    9113:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9117:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    911e:	00 00 
    9120:	74 05                	je     9127 <update_table+0x19f>
    9122:	e8 89 94 ff ff       	call   25b0 <__stack_chk_fail@plt>
    9127:	c9                   	leave  
    9128:	c3                   	ret    

0000000000009129 <polite_end>:
    9129:	f3 0f 1e fa          	endbr64 
    912d:	55                   	push   rbp
    912e:	48 89 e5             	mov    rbp,rsp
    9131:	48 83 ec 20          	sub    rsp,0x20
    9135:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    9139:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    913d:	48 89 c7             	mov    rdi,rax
    9140:	e8 8d f9 ff ff       	call   8ad2 <conversation_exists>
    9145:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    9148:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    914c:	0f 84 e7 00 00 00    	je     9239 <polite_end+0x110>
    9152:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    9155:	48 98                	cdqe   
    9157:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    915e:	48 8d 15 bb 12 10 00 	lea    rdx,[rip+0x1012bb]        # 10a420 <spi_table>
    9165:	48 01 d0             	add    rax,rdx
    9168:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    916c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9170:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    9176:	8d 50 01             	lea    edx,[rax+0x1]
    9179:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    917d:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    9183:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9187:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
    918d:	3d f5 00 00 00       	cmp    eax,0xf5
    9192:	75 4a                	jne    91de <polite_end+0xb5>
    9194:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9198:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    919b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    919f:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    91a3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    91a7:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    91aa:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    91ae:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    91b2:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    91b5:	41 89 f9             	mov    r9d,edi
    91b8:	49 89 f0             	mov    r8,rsi
    91bb:	89 c6                	mov    esi,eax
    91bd:	48 8d 3d 04 48 00 00 	lea    rdi,[rip+0x4804]        # d9c8 <_IO_stdin_used+0x19c8>
    91c4:	b8 00 00 00 00       	mov    eax,0x0
    91c9:	e8 22 94 ff ff       	call   25f0 <printf@plt>
    91ce:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    91d2:	c7 80 8c 00 00 00 f6 	mov    DWORD PTR [rax+0x8c],0xf6
    91d9:	00 00 00 
    91dc:	eb 48                	jmp    9226 <polite_end+0xfd>
    91de:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    91e2:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    91e5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    91e9:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    91ed:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    91f1:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    91f4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    91f8:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    91fc:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    91ff:	41 89 f9             	mov    r9d,edi
    9202:	49 89 f0             	mov    r8,rsi
    9205:	89 c6                	mov    esi,eax
    9207:	48 8d 3d f2 47 00 00 	lea    rdi,[rip+0x47f2]        # da00 <_IO_stdin_used+0x1a00>
    920e:	b8 00 00 00 00       	mov    eax,0x0
    9213:	e8 d8 93 ff ff       	call   25f0 <printf@plt>
    9218:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    921c:	c7 80 8c 00 00 00 f5 	mov    DWORD PTR [rax+0x8c],0xf5
    9223:	00 00 00 
    9226:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    922a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    922e:	48 89 d6             	mov    rsi,rdx
    9231:	48 89 c7             	mov    rdi,rax
    9234:	e8 69 00 00 00       	call   92a2 <increment_stats>
    9239:	90                   	nop
    923a:	c9                   	leave  
    923b:	c3                   	ret    

000000000000923c <handle_data_pkt>:
    923c:	f3 0f 1e fa          	endbr64 
    9240:	55                   	push   rbp
    9241:	48 89 e5             	mov    rbp,rsp
    9244:	48 83 ec 20          	sub    rsp,0x20
    9248:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    924c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9250:	48 89 c7             	mov    rdi,rax
    9253:	e8 7a f8 ff ff       	call   8ad2 <conversation_exists>
    9258:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    925b:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    925f:	74 3e                	je     929f <handle_data_pkt+0x63>
    9261:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    9264:	48 98                	cdqe   
    9266:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    926d:	48 8d 15 ac 11 10 00 	lea    rdx,[rip+0x1011ac]        # 10a420 <spi_table>
    9274:	48 01 d0             	add    rax,rdx
    9277:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    927b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    927f:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    9282:	8d 50 01             	lea    edx,[rax+0x1]
    9285:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9289:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    928c:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    9290:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9294:	48 89 d6             	mov    rsi,rdx
    9297:	48 89 c7             	mov    rdi,rax
    929a:	e8 03 00 00 00       	call   92a2 <increment_stats>
    929f:	90                   	nop
    92a0:	c9                   	leave  
    92a1:	c3                   	ret    

00000000000092a2 <increment_stats>:
    92a2:	f3 0f 1e fa          	endbr64 
    92a6:	55                   	push   rbp
    92a7:	48 89 e5             	mov    rbp,rsp
    92aa:	48 83 ec 10          	sub    rsp,0x10
    92ae:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    92b2:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    92b6:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    92ba:	48 8d 50 29          	lea    rdx,[rax+0x29]
    92be:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    92c2:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    92c6:	48 89 d6             	mov    rsi,rdx
    92c9:	48 89 c7             	mov    rdi,rax
    92cc:	e8 df 93 ff ff       	call   26b0 <strcmp@plt>
    92d1:	85 c0                	test   eax,eax
    92d3:	75 13                	jne    92e8 <increment_stats+0x46>
    92d5:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    92d9:	8b 40 60             	mov    eax,DWORD PTR [rax+0x60]
    92dc:	8d 50 01             	lea    edx,[rax+0x1]
    92df:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    92e3:	89 50 60             	mov    DWORD PTR [rax+0x60],edx
    92e6:	eb 2c                	jmp    9314 <increment_stats+0x72>
    92e8:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    92ec:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    92f0:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    92f4:	48 89 d6             	mov    rsi,rdx
    92f7:	48 89 c7             	mov    rdi,rax
    92fa:	e8 b1 93 ff ff       	call   26b0 <strcmp@plt>
    92ff:	85 c0                	test   eax,eax
    9301:	75 11                	jne    9314 <increment_stats+0x72>
    9303:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9307:	8b 40 5c             	mov    eax,DWORD PTR [rax+0x5c]
    930a:	8d 50 01             	lea    edx,[rax+0x1]
    930d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9311:	89 50 5c             	mov    DWORD PTR [rax+0x5c],edx
    9314:	90                   	nop
    9315:	c9                   	leave  
    9316:	c3                   	ret    

0000000000009317 <lprintf>:
    9317:	f3 0f 1e fa          	endbr64 
    931b:	55                   	push   rbp
    931c:	48 89 e5             	mov    rbp,rsp
    931f:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
    9326:	48 89 bd 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rdi
    932d:	48 89 b5 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rsi
    9334:	48 89 95 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdx
    933b:	48 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rcx
    9342:	4c 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r8
    9349:	4c 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r9
    9350:	84 c0                	test   al,al
    9352:	74 20                	je     9374 <lprintf+0x5d>
    9354:	0f 29 45 80          	movaps XMMWORD PTR [rbp-0x80],xmm0
    9358:	0f 29 4d 90          	movaps XMMWORD PTR [rbp-0x70],xmm1
    935c:	0f 29 55 a0          	movaps XMMWORD PTR [rbp-0x60],xmm2
    9360:	0f 29 5d b0          	movaps XMMWORD PTR [rbp-0x50],xmm3
    9364:	0f 29 65 c0          	movaps XMMWORD PTR [rbp-0x40],xmm4
    9368:	0f 29 6d d0          	movaps XMMWORD PTR [rbp-0x30],xmm5
    936c:	0f 29 75 e0          	movaps XMMWORD PTR [rbp-0x20],xmm6
    9370:	0f 29 7d f0          	movaps XMMWORD PTR [rbp-0x10],xmm7
    9374:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    937b:	00 00 
    937d:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    9384:	31 c0                	xor    eax,eax
    9386:	c7 85 30 ff ff ff 10 	mov    DWORD PTR [rbp-0xd0],0x10
    938d:	00 00 00 
    9390:	c7 85 34 ff ff ff 30 	mov    DWORD PTR [rbp-0xcc],0x30
    9397:	00 00 00 
    939a:	48 8d 45 10          	lea    rax,[rbp+0x10]
    939e:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    93a5:	48 8d 85 50 ff ff ff 	lea    rax,[rbp-0xb0]
    93ac:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    93b3:	48 8d 95 30 ff ff ff 	lea    rdx,[rbp-0xd0]
    93ba:	48 8b 8d 20 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xe0]
    93c1:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    93c8:	48 89 ce             	mov    rsi,rcx
    93cb:	48 89 c7             	mov    rdi,rax
    93ce:	b8 00 00 00 00       	mov    eax,0x0
    93d3:	e8 f8 92 ff ff       	call   26d0 <fprintf@plt>
    93d8:	90                   	nop
    93d9:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    93e0:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    93e7:	00 00 
    93e9:	74 05                	je     93f0 <lprintf+0xd9>
    93eb:	e8 c0 91 ff ff       	call   25b0 <__stack_chk_fail@plt>
    93f0:	c9                   	leave  
    93f1:	c3                   	ret    

00000000000093f2 <lfprintf>:
    93f2:	f3 0f 1e fa          	endbr64 
    93f6:	55                   	push   rbp
    93f7:	48 89 e5             	mov    rbp,rsp
    93fa:	48 81 ec 90 08 00 00 	sub    rsp,0x890
    9401:	48 89 bd 98 f7 ff ff 	mov    QWORD PTR [rbp-0x868],rdi
    9408:	48 89 b5 90 f7 ff ff 	mov    QWORD PTR [rbp-0x870],rsi
    940f:	48 89 95 88 f7 ff ff 	mov    QWORD PTR [rbp-0x878],rdx
    9416:	48 89 8d 80 f7 ff ff 	mov    QWORD PTR [rbp-0x880],rcx
    941d:	44 89 85 7c f7 ff ff 	mov    DWORD PTR [rbp-0x884],r8d
    9424:	44 89 8d 78 f7 ff ff 	mov    DWORD PTR [rbp-0x888],r9d
    942b:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9432:	00 00 
    9434:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9438:	31 c0                	xor    eax,eax
    943a:	48 8b 85 98 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x868]
    9441:	48 8d 35 f0 45 00 00 	lea    rsi,[rip+0x45f0]        # da38 <_IO_stdin_used+0x1a38>
    9448:	48 89 c7             	mov    rdi,rax
    944b:	e8 60 93 ff ff       	call   27b0 <fopen@plt>
    9450:	48 89 85 a8 f7 ff ff 	mov    QWORD PTR [rbp-0x858],rax
    9457:	48 83 bd a8 f7 ff ff 	cmp    QWORD PTR [rbp-0x858],0x0
    945e:	00 
    945f:	75 20                	jne    9481 <lfprintf+0x8f>
    9461:	48 8b 85 90 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x870]
    9468:	48 89 c6             	mov    rsi,rax
    946b:	48 8d 3d ce 45 00 00 	lea    rdi,[rip+0x45ce]        # da40 <_IO_stdin_used+0x1a40>
    9472:	b8 00 00 00 00       	mov    eax,0x0
    9477:	e8 74 91 ff ff       	call   25f0 <printf@plt>
    947c:	e9 cd 00 00 00       	jmp    954e <lfprintf+0x15c>
    9481:	48 8d 85 b0 f7 ff ff 	lea    rax,[rbp-0x850]
    9488:	48 89 c7             	mov    rdi,rax
    948b:	e8 ee 9f ff ff       	call   347e <cb_get_formatted_time>
    9490:	83 bd 7c f7 ff ff ff 	cmp    DWORD PTR [rbp-0x884],0xffffffff
    9497:	75 3f                	jne    94d8 <lfprintf+0xe6>
    9499:	48 8b bd 80 f7 ff ff 	mov    rdi,QWORD PTR [rbp-0x880]
    94a0:	48 8b b5 88 f7 ff ff 	mov    rsi,QWORD PTR [rbp-0x878]
    94a7:	48 8b 8d 90 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x870]
    94ae:	48 8d 95 b0 f7 ff ff 	lea    rdx,[rbp-0x850]
    94b5:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    94bc:	49 89 f9             	mov    r9,rdi
    94bf:	49 89 f0             	mov    r8,rsi
    94c2:	48 8d 35 a5 45 00 00 	lea    rsi,[rip+0x45a5]        # da6e <_IO_stdin_used+0x1a6e>
    94c9:	48 89 c7             	mov    rdi,rax
    94cc:	b8 00 00 00 00       	mov    eax,0x0
    94d1:	e8 9a 93 ff ff       	call   2870 <sprintf@plt>
    94d6:	eb 4e                	jmp    9526 <lfprintf+0x134>
    94d8:	44 8b 85 7c f7 ff ff 	mov    r8d,DWORD PTR [rbp-0x884]
    94df:	48 8b bd 88 f7 ff ff 	mov    rdi,QWORD PTR [rbp-0x878]
    94e6:	48 8b 8d 90 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x870]
    94ed:	48 8d 95 b0 f7 ff ff 	lea    rdx,[rbp-0x850]
    94f4:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    94fb:	8b b5 78 f7 ff ff    	mov    esi,DWORD PTR [rbp-0x888]
    9501:	56                   	push   rsi
    9502:	ff b5 80 f7 ff ff    	push   QWORD PTR [rbp-0x880]
    9508:	45 89 c1             	mov    r9d,r8d
    950b:	49 89 f8             	mov    r8,rdi
    950e:	48 8d 35 69 45 00 00 	lea    rsi,[rip+0x4569]        # da7e <_IO_stdin_used+0x1a7e>
    9515:	48 89 c7             	mov    rdi,rax
    9518:	b8 00 00 00 00       	mov    eax,0x0
    951d:	e8 4e 93 ff ff       	call   2870 <sprintf@plt>
    9522:	48 83 c4 10          	add    rsp,0x10
    9526:	48 8b 95 a8 f7 ff ff 	mov    rdx,QWORD PTR [rbp-0x858]
    952d:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    9534:	48 89 d6             	mov    rsi,rdx
    9537:	48 89 c7             	mov    rdi,rax
    953a:	e8 d1 90 ff ff       	call   2610 <fputs@plt>
    953f:	48 8b 85 a8 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x858]
    9546:	48 89 c7             	mov    rdi,rax
    9549:	e8 22 90 ff ff       	call   2570 <fclose@plt>
    954e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9552:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    9559:	00 00 
    955b:	74 05                	je     9562 <lfprintf+0x170>
    955d:	e8 4e 90 ff ff       	call   25b0 <__stack_chk_fail@plt>
    9562:	c9                   	leave  
    9563:	c3                   	ret    

0000000000009564 <saprintf>:
    9564:	f3 0f 1e fa          	endbr64 
    9568:	55                   	push   rbp
    9569:	48 89 e5             	mov    rbp,rsp
    956c:	48 83 ec 20          	sub    rsp,0x20
    9570:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    9574:	48 8b 05 b5 7a 00 00 	mov    rax,QWORD PTR [rip+0x7ab5]        # 11030 <def_log_file>
    957b:	48 8d 35 b6 44 00 00 	lea    rsi,[rip+0x44b6]        # da38 <_IO_stdin_used+0x1a38>
    9582:	48 89 c7             	mov    rdi,rax
    9585:	e8 26 92 ff ff       	call   27b0 <fopen@plt>
    958a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    958e:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    9593:	75 1a                	jne    95af <saprintf+0x4b>
    9595:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9599:	48 89 c6             	mov    rsi,rax
    959c:	48 8d 3d 9d 44 00 00 	lea    rdi,[rip+0x449d]        # da40 <_IO_stdin_used+0x1a40>
    95a3:	b8 00 00 00 00       	mov    eax,0x0
    95a8:	e8 43 90 ff ff       	call   25f0 <printf@plt>
    95ad:	eb 1f                	jmp    95ce <saprintf+0x6a>
    95af:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    95b3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    95b7:	48 89 d6             	mov    rsi,rdx
    95ba:	48 89 c7             	mov    rdi,rax
    95bd:	e8 4e 90 ff ff       	call   2610 <fputs@plt>
    95c2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    95c6:	48 89 c7             	mov    rdi,rax
    95c9:	e8 a2 8f ff ff       	call   2570 <fclose@plt>
    95ce:	c9                   	leave  
    95cf:	c3                   	ret    

00000000000095d0 <substr>:
    95d0:	f3 0f 1e fa          	endbr64 
    95d4:	55                   	push   rbp
    95d5:	48 89 e5             	mov    rbp,rsp
    95d8:	48 83 ec 20          	sub    rsp,0x20
    95dc:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    95e0:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    95e3:	89 55 e0             	mov    DWORD PTR [rbp-0x20],edx
    95e6:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
    95e9:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    95ec:	83 c0 02             	add    eax,0x2
    95ef:	48 98                	cdqe   
    95f1:	48 89 c7             	mov    rdi,rax
    95f4:	e8 47 91 ff ff       	call   2740 <malloc@plt>
    95f9:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    95fd:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    9600:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    9603:	eb 27                	jmp    962c <substr+0x5c>
    9605:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    9608:	48 63 d0             	movsxd rdx,eax
    960b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    960f:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    9613:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    9616:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    9619:	48 63 d0             	movsxd rdx,eax
    961c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9620:	48 01 c2             	add    rdx,rax
    9623:	0f b6 01             	movzx  eax,BYTE PTR [rcx]
    9626:	88 02                	mov    BYTE PTR [rdx],al
    9628:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    962c:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    962f:	3b 45 e0             	cmp    eax,DWORD PTR [rbp-0x20]
    9632:	7e d1                	jle    9605 <substr+0x35>
    9634:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
    9637:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    963a:	48 98                	cdqe   
    963c:	48 8d 50 01          	lea    rdx,[rax+0x1]
    9640:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9644:	48 01 d0             	add    rax,rdx
    9647:	c6 00 00             	mov    BYTE PTR [rax],0x0
    964a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    964e:	c9                   	leave  
    964f:	c3                   	ret    

0000000000009650 <delimit>:
    9650:	f3 0f 1e fa          	endbr64 
    9654:	55                   	push   rbp
    9655:	48 89 e5             	mov    rbp,rsp
    9658:	89 f8                	mov    eax,edi
    965a:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
    965d:	80 7d fc 20          	cmp    BYTE PTR [rbp-0x4],0x20
    9661:	0f 94 c0             	sete   al
    9664:	5d                   	pop    rbp
    9665:	c3                   	ret    

0000000000009666 <isdigit>:
    9666:	f3 0f 1e fa          	endbr64 
    966a:	55                   	push   rbp
    966b:	48 89 e5             	mov    rbp,rsp
    966e:	53                   	push   rbx
    966f:	48 83 ec 28          	sub    rsp,0x28
    9673:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    9677:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    967e:	e9 f7 00 00 00       	jmp    977a <isdigit+0x114>
    9683:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9686:	48 63 d0             	movsxd rdx,eax
    9689:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    968d:	48 01 d0             	add    rax,rdx
    9690:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9693:	3c 30                	cmp    al,0x30
    9695:	0f 84 db 00 00 00    	je     9776 <isdigit+0x110>
    969b:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    969e:	48 63 d0             	movsxd rdx,eax
    96a1:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    96a5:	48 01 d0             	add    rax,rdx
    96a8:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    96ab:	3c 31                	cmp    al,0x31
    96ad:	0f 84 c3 00 00 00    	je     9776 <isdigit+0x110>
    96b3:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    96b6:	48 63 d0             	movsxd rdx,eax
    96b9:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    96bd:	48 01 d0             	add    rax,rdx
    96c0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    96c3:	3c 32                	cmp    al,0x32
    96c5:	0f 84 ab 00 00 00    	je     9776 <isdigit+0x110>
    96cb:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    96ce:	48 63 d0             	movsxd rdx,eax
    96d1:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    96d5:	48 01 d0             	add    rax,rdx
    96d8:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    96db:	3c 33                	cmp    al,0x33
    96dd:	0f 84 93 00 00 00    	je     9776 <isdigit+0x110>
    96e3:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    96e6:	48 63 d0             	movsxd rdx,eax
    96e9:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    96ed:	48 01 d0             	add    rax,rdx
    96f0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    96f3:	3c 34                	cmp    al,0x34
    96f5:	74 7f                	je     9776 <isdigit+0x110>
    96f7:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    96fa:	48 63 d0             	movsxd rdx,eax
    96fd:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9701:	48 01 d0             	add    rax,rdx
    9704:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9707:	3c 34                	cmp    al,0x34
    9709:	74 6b                	je     9776 <isdigit+0x110>
    970b:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    970e:	48 63 d0             	movsxd rdx,eax
    9711:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9715:	48 01 d0             	add    rax,rdx
    9718:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    971b:	3c 35                	cmp    al,0x35
    971d:	74 57                	je     9776 <isdigit+0x110>
    971f:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9722:	48 63 d0             	movsxd rdx,eax
    9725:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9729:	48 01 d0             	add    rax,rdx
    972c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    972f:	3c 36                	cmp    al,0x36
    9731:	74 43                	je     9776 <isdigit+0x110>
    9733:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9736:	48 63 d0             	movsxd rdx,eax
    9739:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    973d:	48 01 d0             	add    rax,rdx
    9740:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9743:	3c 37                	cmp    al,0x37
    9745:	74 2f                	je     9776 <isdigit+0x110>
    9747:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    974a:	48 63 d0             	movsxd rdx,eax
    974d:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9751:	48 01 d0             	add    rax,rdx
    9754:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9757:	3c 38                	cmp    al,0x38
    9759:	74 1b                	je     9776 <isdigit+0x110>
    975b:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    975e:	48 63 d0             	movsxd rdx,eax
    9761:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9765:	48 01 d0             	add    rax,rdx
    9768:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    976b:	3c 39                	cmp    al,0x39
    976d:	74 07                	je     9776 <isdigit+0x110>
    976f:	b8 00 00 00 00       	mov    eax,0x0
    9774:	eb 24                	jmp    979a <isdigit+0x134>
    9776:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    977a:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    977d:	48 63 d8             	movsxd rbx,eax
    9780:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9784:	48 89 c7             	mov    rdi,rax
    9787:	e8 04 8e ff ff       	call   2590 <strlen@plt>
    978c:	48 39 c3             	cmp    rbx,rax
    978f:	0f 82 ee fe ff ff    	jb     9683 <isdigit+0x1d>
    9795:	b8 01 00 00 00       	mov    eax,0x1
    979a:	48 83 c4 28          	add    rsp,0x28
    979e:	5b                   	pop    rbx
    979f:	5d                   	pop    rbp
    97a0:	c3                   	ret    

00000000000097a1 <assign_port_number>:
    97a1:	f3 0f 1e fa          	endbr64 
    97a5:	55                   	push   rbp
    97a6:	48 89 e5             	mov    rbp,rsp
    97a9:	48 83 ec 10          	sub    rsp,0x10
    97ad:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    97b1:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    97b5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    97b9:	48 89 c7             	mov    rdi,rax
    97bc:	e8 a5 fe ff ff       	call   9666 <isdigit>
    97c1:	84 c0                	test   al,al
    97c3:	74 18                	je     97dd <assign_port_number+0x3c>
    97c5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    97c9:	48 89 c7             	mov    rdi,rax
    97cc:	e8 4f 90 ff ff       	call   2820 <atoi@plt>
    97d1:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    97d5:	89 82 44 01 00 00    	mov    DWORD PTR [rdx+0x144],eax
    97db:	eb 25                	jmp    9802 <assign_port_number+0x61>
    97dd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    97e1:	48 8d 35 b0 42 00 00 	lea    rsi,[rip+0x42b0]        # da98 <_IO_stdin_used+0x1a98>
    97e8:	48 89 c7             	mov    rdi,rax
    97eb:	e8 c0 8e ff ff       	call   26b0 <strcmp@plt>
    97f0:	85 c0                	test   eax,eax
    97f2:	75 0e                	jne    9802 <assign_port_number+0x61>
    97f4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    97f8:	c7 80 44 01 00 00 ff 	mov    DWORD PTR [rax+0x144],0xffffffff
    97ff:	ff ff ff 
    9802:	90                   	nop
    9803:	c9                   	leave  
    9804:	c3                   	ret    

0000000000009805 <check_port_number>:
    9805:	f3 0f 1e fa          	endbr64 
    9809:	55                   	push   rbp
    980a:	48 89 e5             	mov    rbp,rsp
    980d:	48 83 ec 10          	sub    rsp,0x10
    9811:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9815:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9819:	48 89 c7             	mov    rdi,rax
    981c:	e8 45 fe ff ff       	call   9666 <isdigit>
    9821:	84 c0                	test   al,al
    9823:	74 0e                	je     9833 <check_port_number+0x2e>
    9825:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9829:	48 89 c7             	mov    rdi,rax
    982c:	e8 ef 8f ff ff       	call   2820 <atoi@plt>
    9831:	eb 23                	jmp    9856 <check_port_number+0x51>
    9833:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9837:	48 8d 35 5a 42 00 00 	lea    rsi,[rip+0x425a]        # da98 <_IO_stdin_used+0x1a98>
    983e:	48 89 c7             	mov    rdi,rax
    9841:	e8 6a 8e ff ff       	call   26b0 <strcmp@plt>
    9846:	85 c0                	test   eax,eax
    9848:	75 07                	jne    9851 <check_port_number+0x4c>
    984a:	b8 ff ff ff ff       	mov    eax,0xffffffff
    984f:	eb 05                	jmp    9856 <check_port_number+0x51>
    9851:	b8 ff ff ff ff       	mov    eax,0xffffffff
    9856:	c9                   	leave  
    9857:	c3                   	ret    

0000000000009858 <assign_protocol>:
    9858:	f3 0f 1e fa          	endbr64 
    985c:	55                   	push   rbp
    985d:	48 89 e5             	mov    rbp,rsp
    9860:	48 83 ec 10          	sub    rsp,0x10
    9864:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9868:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    986c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9870:	48 8d 35 25 42 00 00 	lea    rsi,[rip+0x4225]        # da9c <_IO_stdin_used+0x1a9c>
    9877:	48 89 c7             	mov    rdi,rax
    987a:	e8 31 8e ff ff       	call   26b0 <strcmp@plt>
    987f:	85 c0                	test   eax,eax
    9881:	75 10                	jne    9893 <assign_protocol+0x3b>
    9883:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9887:	c7 80 40 01 00 00 ff 	mov    DWORD PTR [rax+0x140],0xffffffff
    988e:	ff ff ff 
    9891:	eb 73                	jmp    9906 <assign_protocol+0xae>
    9893:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9897:	48 8d 35 02 42 00 00 	lea    rsi,[rip+0x4202]        # daa0 <_IO_stdin_used+0x1aa0>
    989e:	48 89 c7             	mov    rdi,rax
    98a1:	e8 0a 8e ff ff       	call   26b0 <strcmp@plt>
    98a6:	85 c0                	test   eax,eax
    98a8:	75 10                	jne    98ba <assign_protocol+0x62>
    98aa:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    98ae:	c7 80 40 01 00 00 80 	mov    DWORD PTR [rax+0x140],0x80
    98b5:	00 00 00 
    98b8:	eb 4c                	jmp    9906 <assign_protocol+0xae>
    98ba:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    98be:	48 8d 35 e0 41 00 00 	lea    rsi,[rip+0x41e0]        # daa5 <_IO_stdin_used+0x1aa5>
    98c5:	48 89 c7             	mov    rdi,rax
    98c8:	e8 e3 8d ff ff       	call   26b0 <strcmp@plt>
    98cd:	85 c0                	test   eax,eax
    98cf:	75 10                	jne    98e1 <assign_protocol+0x89>
    98d1:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    98d5:	c7 80 40 01 00 00 7e 	mov    DWORD PTR [rax+0x140],0x7e
    98dc:	00 00 00 
    98df:	eb 25                	jmp    9906 <assign_protocol+0xae>
    98e1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    98e5:	48 8d 35 bd 41 00 00 	lea    rsi,[rip+0x41bd]        # daa9 <_IO_stdin_used+0x1aa9>
    98ec:	48 89 c7             	mov    rdi,rax
    98ef:	e8 bc 8d ff ff       	call   26b0 <strcmp@plt>
    98f4:	85 c0                	test   eax,eax
    98f6:	75 0e                	jne    9906 <assign_protocol+0xae>
    98f8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    98fc:	c7 80 40 01 00 00 7f 	mov    DWORD PTR [rax+0x140],0x7f
    9903:	00 00 00 
    9906:	90                   	nop
    9907:	c9                   	leave  
    9908:	c3                   	ret    

0000000000009909 <get_ruletype>:
    9909:	f3 0f 1e fa          	endbr64 
    990d:	55                   	push   rbp
    990e:	48 89 e5             	mov    rbp,rsp
    9911:	48 83 ec 10          	sub    rsp,0x10
    9915:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9919:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    991d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9921:	ba 09 00 00 00       	mov    edx,0x9
    9926:	48 8d 35 80 41 00 00 	lea    rsi,[rip+0x4180]        # daad <_IO_stdin_used+0x1aad>
    992d:	48 89 c7             	mov    rdi,rax
    9930:	e8 ab 8b ff ff       	call   24e0 <strncmp@plt>
    9935:	85 c0                	test   eax,eax
    9937:	75 17                	jne    9950 <get_ruletype+0x47>
    9939:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    993d:	48 8d 15 b9 bd ff ff 	lea    rdx,[rip+0xffffffffffffbdb9]        # 56fd <str_match_parser>
    9944:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    994b:	e9 82 00 00 00       	jmp    99d2 <get_ruletype+0xc9>
    9950:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9954:	ba 04 00 00 00       	mov    edx,0x4
    9959:	48 8d 35 57 41 00 00 	lea    rsi,[rip+0x4157]        # dab7 <_IO_stdin_used+0x1ab7>
    9960:	48 89 c7             	mov    rdi,rax
    9963:	e8 78 8b ff ff       	call   24e0 <strncmp@plt>
    9968:	85 c0                	test   eax,eax
    996a:	75 14                	jne    9980 <get_ruletype+0x77>
    996c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9970:	48 8d 15 2c c0 ff ff 	lea    rdx,[rip+0xffffffffffffc02c]        # 59a3 <none>
    9977:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    997e:	eb 52                	jmp    99d2 <get_ruletype+0xc9>
    9980:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9984:	ba 04 00 00 00       	mov    edx,0x4
    9989:	48 8d 35 2c 41 00 00 	lea    rsi,[rip+0x412c]        # dabc <_IO_stdin_used+0x1abc>
    9990:	48 89 c7             	mov    rdi,rax
    9993:	e8 48 8b ff ff       	call   24e0 <strncmp@plt>
    9998:	85 c0                	test   eax,eax
    999a:	75 14                	jne    99b0 <get_ruletype+0xa7>
    999c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    99a0:	48 8d 15 13 c0 ff ff 	lea    rdx,[rip+0xffffffffffffc013]        # 59ba <pcre_match>
    99a7:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    99ae:	eb 22                	jmp    99d2 <get_ruletype+0xc9>
    99b0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    99b4:	48 89 c6             	mov    rsi,rax
    99b7:	48 8d 3d 03 41 00 00 	lea    rdi,[rip+0x4103]        # dac1 <_IO_stdin_used+0x1ac1>
    99be:	b8 00 00 00 00       	mov    eax,0x0
    99c3:	e8 28 8c ff ff       	call   25f0 <printf@plt>
    99c8:	bf 01 00 00 00       	mov    edi,0x1
    99cd:	e8 ae 8e ff ff       	call   2880 <exit@plt>
    99d2:	c9                   	leave  
    99d3:	c3                   	ret    

00000000000099d4 <numeric_check>:
    99d4:	f3 0f 1e fa          	endbr64 
    99d8:	55                   	push   rbp
    99d9:	48 89 e5             	mov    rbp,rsp
    99dc:	48 83 ec 30          	sub    rsp,0x30
    99e0:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    99e4:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    99e7:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    99eb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    99ef:	48 89 c7             	mov    rdi,rax
    99f2:	e8 6f fc ff ff       	call   9666 <isdigit>
    99f7:	84 c0                	test   al,al
    99f9:	74 27                	je     9a22 <numeric_check+0x4e>
    99fb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    99ff:	48 89 c7             	mov    rdi,rax
    9a02:	e8 19 8e ff ff       	call   2820 <atoi@plt>
    9a07:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
    9a0a:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    9a0d:	39 45 e4             	cmp    DWORD PTR [rbp-0x1c],eax
    9a10:	77 10                	ja     9a22 <numeric_check+0x4e>
    9a12:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    9a15:	48 98                	cdqe   
    9a17:	48 39 45 d8          	cmp    QWORD PTR [rbp-0x28],rax
    9a1b:	72 05                	jb     9a22 <numeric_check+0x4e>
    9a1d:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    9a20:	eb 05                	jmp    9a27 <numeric_check+0x53>
    9a22:	b8 ff ff ff ff       	mov    eax,0xffffffff
    9a27:	c9                   	leave  
    9a28:	c3                   	ret    

0000000000009a29 <sc_strip>:
    9a29:	f3 0f 1e fa          	endbr64 
    9a2d:	55                   	push   rbp
    9a2e:	48 89 e5             	mov    rbp,rsp
    9a31:	48 83 ec 10          	sub    rsp,0x10
    9a35:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9a39:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9a3d:	48 8d 35 94 40 00 00 	lea    rsi,[rip+0x4094]        # dad8 <_IO_stdin_used+0x1ad8>
    9a44:	48 89 c7             	mov    rdi,rax
    9a47:	e8 24 8c ff ff       	call   2670 <strcspn@plt>
    9a4c:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    9a50:	48 01 d0             	add    rax,rdx
    9a53:	c6 00 00             	mov    BYTE PTR [rax],0x0
    9a56:	90                   	nop
    9a57:	c9                   	leave  
    9a58:	c3                   	ret    

0000000000009a59 <void_rule>:
    9a59:	f3 0f 1e fa          	endbr64 
    9a5d:	55                   	push   rbp
    9a5e:	48 89 e5             	mov    rbp,rsp
    9a61:	48 83 ec 10          	sub    rsp,0x10
    9a65:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9a69:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9a6d:	48 05 6e 03 00 00    	add    rax,0x36e
    9a73:	ba 0a 00 00 00       	mov    edx,0xa
    9a78:	be 00 00 00 00       	mov    esi,0x0
    9a7d:	48 89 c7             	mov    rdi,rax
    9a80:	e8 ab 8b ff ff       	call   2630 <memset@plt>
    9a85:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9a89:	48 05 68 03 00 00    	add    rax,0x368
    9a8f:	ba 06 00 00 00       	mov    edx,0x6
    9a94:	be 00 00 00 00       	mov    esi,0x0
    9a99:	48 89 c7             	mov    rdi,rax
    9a9c:	e8 8f 8b ff ff       	call   2630 <memset@plt>
    9aa1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9aa5:	48 05 50 03 00 00    	add    rax,0x350
    9aab:	ba 18 00 00 00       	mov    edx,0x18
    9ab0:	be 00 00 00 00       	mov    esi,0x0
    9ab5:	48 89 c7             	mov    rdi,rax
    9ab8:	e8 73 8b ff ff       	call   2630 <memset@plt>
    9abd:	90                   	nop
    9abe:	c9                   	leave  
    9abf:	c3                   	ret    

0000000000009ac0 <line_parser>:
    9ac0:	f3 0f 1e fa          	endbr64 
    9ac4:	55                   	push   rbp
    9ac5:	48 89 e5             	mov    rbp,rsp
    9ac8:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    9acf:	48 89 bd 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdi
    9ad6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9add:	00 00 
    9adf:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9ae3:	31 c0                	xor    eax,eax
    9ae5:	8b 05 29 75 00 00    	mov    eax,DWORD PTR [rip+0x7529]        # 11014 <num_rules>
    9aeb:	83 c0 01             	add    eax,0x1
    9aee:	89 05 20 75 00 00    	mov    DWORD PTR [rip+0x7520],eax        # 11014 <num_rules>
    9af4:	8b 05 1a 75 00 00    	mov    eax,DWORD PTR [rip+0x751a]        # 11014 <num_rules>
    9afa:	48 98                	cdqe   
    9afc:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    9b03:	48 8d 15 96 75 00 00 	lea    rdx,[rip+0x7596]        # 110a0 <rules>
    9b0a:	48 01 d0             	add    rax,rdx
    9b0d:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    9b11:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9b15:	ba 08 00 00 00       	mov    edx,0x8
    9b1a:	be 00 00 00 00       	mov    esi,0x0
    9b1f:	48 89 c7             	mov    rdi,rax
    9b22:	e8 09 8b ff ff       	call   2630 <memset@plt>
    9b27:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9b2b:	c7 80 44 01 00 00 ff 	mov    DWORD PTR [rax+0x144],0xffffffff
    9b32:	ff ff ff 
    9b35:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9b39:	c7 80 40 01 00 00 ff 	mov    DWORD PTR [rax+0x140],0xffffffff
    9b40:	ff ff ff 
    9b43:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9b47:	c7 40 1c ff ff ff ff 	mov    DWORD PTR [rax+0x1c],0xffffffff
    9b4e:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9b52:	c7 40 18 ff ff ff ff 	mov    DWORD PTR [rax+0x18],0xffffffff
    9b59:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9b5d:	c7 40 10 ff ff ff ff 	mov    DWORD PTR [rax+0x10],0xffffffff
    9b64:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9b68:	c7 80 4c 03 00 00 00 	mov    DWORD PTR [rax+0x34c],0x0
    9b6f:	00 00 00 
    9b72:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9b76:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
    9b7c:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9b80:	c7 40 04 00 00 00 00 	mov    DWORD PTR [rax+0x4],0x0
    9b87:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9b8b:	48 89 c7             	mov    rdi,rax
    9b8e:	e8 c6 fe ff ff       	call   9a59 <void_rule>
    9b93:	c7 45 98 00 00 00 00 	mov    DWORD PTR [rbp-0x68],0x0
    9b9a:	c6 45 8c 00          	mov    BYTE PTR [rbp-0x74],0x0
    9b9e:	c7 45 90 00 00 00 00 	mov    DWORD PTR [rbp-0x70],0x0
    9ba5:	c7 45 94 00 00 00 00 	mov    DWORD PTR [rbp-0x6c],0x0
    9bac:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    9bb3:	48 89 c7             	mov    rdi,rax
    9bb6:	e8 d5 89 ff ff       	call   2590 <strlen@plt>
    9bbb:	89 45 9c             	mov    DWORD PTR [rbp-0x64],eax
    9bbe:	c6 45 8d 00          	mov    BYTE PTR [rbp-0x73],0x0
    9bc2:	c6 45 8e 00          	mov    BYTE PTR [rbp-0x72],0x0
    9bc6:	c6 45 8f 00          	mov    BYTE PTR [rbp-0x71],0x0
    9bca:	e9 03 0e 00 00       	jmp    a9d2 <line_parser+0xf12>
    9bcf:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    9bd2:	48 63 d0             	movsxd rdx,eax
    9bd5:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    9bdc:	48 01 d0             	add    rax,rdx
    9bdf:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9be2:	0f be c0             	movsx  eax,al
    9be5:	89 c7                	mov    edi,eax
    9be7:	e8 64 fa ff ff       	call   9650 <delimit>
    9bec:	83 f0 01             	xor    eax,0x1
    9bef:	84 c0                	test   al,al
    9bf1:	74 04                	je     9bf7 <line_parser+0x137>
    9bf3:	83 45 94 01          	add    DWORD PTR [rbp-0x6c],0x1
    9bf7:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    9bfa:	48 63 d0             	movsxd rdx,eax
    9bfd:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    9c04:	48 01 d0             	add    rax,rdx
    9c07:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9c0a:	0f be c0             	movsx  eax,al
    9c0d:	89 c7                	mov    edi,eax
    9c0f:	e8 3c fa ff ff       	call   9650 <delimit>
    9c14:	84 c0                	test   al,al
    9c16:	74 3f                	je     9c57 <line_parser+0x197>
    9c18:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    9c1b:	3b 45 90             	cmp    eax,DWORD PTR [rbp-0x70]
    9c1e:	75 37                	jne    9c57 <line_parser+0x197>
    9c20:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    9c23:	48 63 d0             	movsxd rdx,eax
    9c26:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    9c2d:	48 01 d0             	add    rax,rdx
    9c30:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9c33:	3c 3a                	cmp    al,0x3a
    9c35:	75 11                	jne    9c48 <line_parser+0x188>
    9c37:	48 8d 3d 9c 3e 00 00 	lea    rdi,[rip+0x3e9c]        # dada <_IO_stdin_used+0x1ada>
    9c3e:	b8 00 00 00 00       	mov    eax,0x0
    9c43:	e8 a8 89 ff ff       	call   25f0 <printf@plt>
    9c48:	83 45 94 01          	add    DWORD PTR [rbp-0x6c],0x1
    9c4c:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    9c4f:	89 45 90             	mov    DWORD PTR [rbp-0x70],eax
    9c52:	e9 7b 0d 00 00       	jmp    a9d2 <line_parser+0xf12>
    9c57:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    9c5a:	48 63 d0             	movsxd rdx,eax
    9c5d:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    9c64:	48 01 d0             	add    rax,rdx
    9c67:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9c6a:	0f be c0             	movsx  eax,al
    9c6d:	89 c7                	mov    edi,eax
    9c6f:	e8 dc f9 ff ff       	call   9650 <delimit>
    9c74:	84 c0                	test   al,al
    9c76:	74 08                	je     9c80 <line_parser+0x1c0>
    9c78:	8b 45 90             	mov    eax,DWORD PTR [rbp-0x70]
    9c7b:	3b 45 94             	cmp    eax,DWORD PTR [rbp-0x6c]
    9c7e:	75 18                	jne    9c98 <line_parser+0x1d8>
    9c80:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    9c83:	3b 45 9c             	cmp    eax,DWORD PTR [rbp-0x64]
    9c86:	0f 85 46 0d 00 00    	jne    a9d2 <line_parser+0xf12>
    9c8c:	8b 45 90             	mov    eax,DWORD PTR [rbp-0x70]
    9c8f:	3b 45 94             	cmp    eax,DWORD PTR [rbp-0x6c]
    9c92:	0f 84 3a 0d 00 00    	je     a9d2 <line_parser+0xf12>
    9c98:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    9c9b:	8d 50 ff             	lea    edx,[rax-0x1]
    9c9e:	8b 4d 90             	mov    ecx,DWORD PTR [rbp-0x70]
    9ca1:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    9ca8:	89 ce                	mov    esi,ecx
    9caa:	48 89 c7             	mov    rdi,rax
    9cad:	e8 1e f9 ff ff       	call   95d0 <substr>
    9cb2:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    9cb6:	f3 0f 1e fa          	endbr64 
    9cba:	0f b6 45 8c          	movzx  eax,BYTE PTR [rbp-0x74]
    9cbe:	83 f0 01             	xor    eax,0x1
    9cc1:	84 c0                	test   al,al
    9cc3:	0f 84 d5 02 00 00    	je     9f9e <line_parser+0x4de>
    9cc9:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9ccd:	48 8d 35 15 3e 00 00 	lea    rsi,[rip+0x3e15]        # dae9 <_IO_stdin_used+0x1ae9>
    9cd4:	48 89 c7             	mov    rdi,rax
    9cd7:	e8 d4 89 ff ff       	call   26b0 <strcmp@plt>
    9cdc:	85 c0                	test   eax,eax
    9cde:	75 2d                	jne    9d0d <line_parser+0x24d>
    9ce0:	0f b6 45 8d          	movzx  eax,BYTE PTR [rbp-0x73]
    9ce4:	83 f0 01             	xor    eax,0x1
    9ce7:	84 c0                	test   al,al
    9ce9:	74 22                	je     9d0d <line_parser+0x24d>
    9ceb:	0f b6 45 8e          	movzx  eax,BYTE PTR [rbp-0x72]
    9cef:	83 f0 01             	xor    eax,0x1
    9cf2:	84 c0                	test   al,al
    9cf4:	74 17                	je     9d0d <line_parser+0x24d>
    9cf6:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9cfa:	48 8d 15 d2 b7 ff ff 	lea    rdx,[rip+0xffffffffffffb7d2]        # 54d3 <stdout_alert>
    9d01:	48 89 90 80 03 00 00 	mov    QWORD PTR [rax+0x380],rdx
    9d08:	e9 a1 0c 00 00       	jmp    a9ae <line_parser+0xeee>
    9d0d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9d11:	48 8d 35 88 3d 00 00 	lea    rsi,[rip+0x3d88]        # daa0 <_IO_stdin_used+0x1aa0>
    9d18:	48 89 c7             	mov    rdi,rax
    9d1b:	e8 90 89 ff ff       	call   26b0 <strcmp@plt>
    9d20:	85 c0                	test   eax,eax
    9d22:	74 45                	je     9d69 <line_parser+0x2a9>
    9d24:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9d28:	48 8d 35 6d 3d 00 00 	lea    rsi,[rip+0x3d6d]        # da9c <_IO_stdin_used+0x1a9c>
    9d2f:	48 89 c7             	mov    rdi,rax
    9d32:	e8 79 89 ff ff       	call   26b0 <strcmp@plt>
    9d37:	85 c0                	test   eax,eax
    9d39:	74 2e                	je     9d69 <line_parser+0x2a9>
    9d3b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9d3f:	48 8d 35 5f 3d 00 00 	lea    rsi,[rip+0x3d5f]        # daa5 <_IO_stdin_used+0x1aa5>
    9d46:	48 89 c7             	mov    rdi,rax
    9d49:	e8 62 89 ff ff       	call   26b0 <strcmp@plt>
    9d4e:	85 c0                	test   eax,eax
    9d50:	74 17                	je     9d69 <line_parser+0x2a9>
    9d52:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9d56:	48 8d 35 4c 3d 00 00 	lea    rsi,[rip+0x3d4c]        # daa9 <_IO_stdin_used+0x1aa9>
    9d5d:	48 89 c7             	mov    rdi,rax
    9d60:	e8 4b 89 ff ff       	call   26b0 <strcmp@plt>
    9d65:	85 c0                	test   eax,eax
    9d67:	75 2e                	jne    9d97 <line_parser+0x2d7>
    9d69:	0f b6 45 8e          	movzx  eax,BYTE PTR [rbp-0x72]
    9d6d:	83 f0 01             	xor    eax,0x1
    9d70:	84 c0                	test   al,al
    9d72:	74 23                	je     9d97 <line_parser+0x2d7>
    9d74:	0f b6 45 8d          	movzx  eax,BYTE PTR [rbp-0x73]
    9d78:	83 f0 01             	xor    eax,0x1
    9d7b:	84 c0                	test   al,al
    9d7d:	74 18                	je     9d97 <line_parser+0x2d7>
    9d7f:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    9d83:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9d87:	48 89 d6             	mov    rsi,rdx
    9d8a:	48 89 c7             	mov    rdi,rax
    9d8d:	e8 c6 fa ff ff       	call   9858 <assign_protocol>
    9d92:	e9 17 0c 00 00       	jmp    a9ae <line_parser+0xeee>
    9d97:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9d9b:	48 89 c7             	mov    rdi,rax
    9d9e:	e8 c3 f8 ff ff       	call   9666 <isdigit>
    9da3:	84 c0                	test   al,al
    9da5:	75 17                	jne    9dbe <line_parser+0x2fe>
    9da7:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9dab:	48 8d 35 e6 3c 00 00 	lea    rsi,[rip+0x3ce6]        # da98 <_IO_stdin_used+0x1a98>
    9db2:	48 89 c7             	mov    rdi,rax
    9db5:	e8 f6 88 ff ff       	call   26b0 <strcmp@plt>
    9dba:	85 c0                	test   eax,eax
    9dbc:	75 2e                	jne    9dec <line_parser+0x32c>
    9dbe:	0f b6 45 8d          	movzx  eax,BYTE PTR [rbp-0x73]
    9dc2:	83 f0 01             	xor    eax,0x1
    9dc5:	84 c0                	test   al,al
    9dc7:	74 23                	je     9dec <line_parser+0x32c>
    9dc9:	0f b6 45 8e          	movzx  eax,BYTE PTR [rbp-0x72]
    9dcd:	83 f0 01             	xor    eax,0x1
    9dd0:	84 c0                	test   al,al
    9dd2:	74 18                	je     9dec <line_parser+0x32c>
    9dd4:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    9dd8:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9ddc:	48 89 d6             	mov    rsi,rdx
    9ddf:	48 89 c7             	mov    rdi,rax
    9de2:	e8 ba f9 ff ff       	call   97a1 <assign_port_number>
    9de7:	e9 c2 0b 00 00       	jmp    a9ae <line_parser+0xeee>
    9dec:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9df0:	ba 08 00 00 00       	mov    edx,0x8
    9df5:	48 8d 35 f3 3c 00 00 	lea    rsi,[rip+0x3cf3]        # daef <_IO_stdin_used+0x1aef>
    9dfc:	48 89 c7             	mov    rdi,rax
    9dff:	e8 dc 86 ff ff       	call   24e0 <strncmp@plt>
    9e04:	85 c0                	test   eax,eax
    9e06:	75 75                	jne    9e7d <line_parser+0x3bd>
    9e08:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9e0c:	48 8d 50 09          	lea    rdx,[rax+0x9]
    9e10:	48 8d 45 ee          	lea    rax,[rbp-0x12]
    9e14:	48 89 d6             	mov    rsi,rdx
    9e17:	48 89 c7             	mov    rdi,rax
    9e1a:	e8 d1 86 ff ff       	call   24f0 <strcpy@plt>
    9e1f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9e23:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    9e26:	85 c0                	test   eax,eax
    9e28:	75 2e                	jne    9e58 <line_parser+0x398>
    9e2a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9e2e:	8b 00                	mov    eax,DWORD PTR [rax]
    9e30:	85 c0                	test   eax,eax
    9e32:	75 24                	jne    9e58 <line_parser+0x398>
    9e34:	8b 15 ca de 0f 00    	mov    edx,DWORD PTR [rip+0xfdeca]        # 107d04 <homenet>
    9e3a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9e3e:	89 10                	mov    DWORD PTR [rax],edx
    9e40:	48 8d 45 ee          	lea    rax,[rbp-0x12]
    9e44:	48 89 c7             	mov    rdi,rax
    9e47:	e8 b9 f9 ff ff       	call   9805 <check_port_number>
    9e4c:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    9e50:	89 42 0c             	mov    DWORD PTR [rdx+0xc],eax
    9e53:	e9 56 0b 00 00       	jmp    a9ae <line_parser+0xeee>
    9e58:	8b 15 a6 de 0f 00    	mov    edx,DWORD PTR [rip+0xfdea6]        # 107d04 <homenet>
    9e5e:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9e62:	89 50 04             	mov    DWORD PTR [rax+0x4],edx
    9e65:	48 8d 45 ee          	lea    rax,[rbp-0x12]
    9e69:	48 89 c7             	mov    rdi,rax
    9e6c:	e8 94 f9 ff ff       	call   9805 <check_port_number>
    9e71:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    9e75:	89 42 08             	mov    DWORD PTR [rdx+0x8],eax
    9e78:	e9 31 0b 00 00       	jmp    a9ae <line_parser+0xeee>
    9e7d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9e81:	48 8d 35 70 3c 00 00 	lea    rsi,[rip+0x3c70]        # daf8 <_IO_stdin_used+0x1af8>
    9e88:	48 89 c7             	mov    rdi,rax
    9e8b:	e8 20 88 ff ff       	call   26b0 <strcmp@plt>
    9e90:	85 c0                	test   eax,eax
    9e92:	75 30                	jne    9ec4 <line_parser+0x404>
    9e94:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9e98:	8b 10                	mov    edx,DWORD PTR [rax]
    9e9a:	8b 05 64 de 0f 00    	mov    eax,DWORD PTR [rip+0xfde64]        # 107d04 <homenet>
    9ea0:	39 c2                	cmp    edx,eax
    9ea2:	75 10                	jne    9eb4 <line_parser+0x3f4>
    9ea4:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9ea8:	c7 40 10 45 00 00 00 	mov    DWORD PTR [rax+0x10],0x45
    9eaf:	e9 fa 0a 00 00       	jmp    a9ae <line_parser+0xeee>
    9eb4:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9eb8:	c7 40 10 46 00 00 00 	mov    DWORD PTR [rax+0x10],0x46
    9ebf:	e9 ea 0a 00 00       	jmp    a9ae <line_parser+0xeee>
    9ec4:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9ec8:	48 8d 35 2c 3c 00 00 	lea    rsi,[rip+0x3c2c]        # dafb <_IO_stdin_used+0x1afb>
    9ecf:	48 89 c7             	mov    rdi,rax
    9ed2:	e8 d9 87 ff ff       	call   26b0 <strcmp@plt>
    9ed7:	85 c0                	test   eax,eax
    9ed9:	75 10                	jne    9eeb <line_parser+0x42b>
    9edb:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9edf:	c7 40 10 47 00 00 00 	mov    DWORD PTR [rax+0x10],0x47
    9ee6:	e9 c3 0a 00 00       	jmp    a9ae <line_parser+0xeee>
    9eeb:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9eef:	ba 0c 00 00 00       	mov    edx,0xc
    9ef4:	48 8d 35 03 3c 00 00 	lea    rsi,[rip+0x3c03]        # dafe <_IO_stdin_used+0x1afe>
    9efb:	48 89 c7             	mov    rdi,rax
    9efe:	e8 dd 85 ff ff       	call   24e0 <strncmp@plt>
    9f03:	85 c0                	test   eax,eax
    9f05:	75 7f                	jne    9f86 <line_parser+0x4c6>
    9f07:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9f0b:	48 8d 50 0c          	lea    rdx,[rax+0xc]
    9f0f:	48 8d 45 ee          	lea    rax,[rbp-0x12]
    9f13:	48 89 d6             	mov    rsi,rdx
    9f16:	48 89 c7             	mov    rdi,rax
    9f19:	e8 d2 85 ff ff       	call   24f0 <strcpy@plt>
    9f1e:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9f22:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    9f25:	85 c0                	test   eax,eax
    9f27:	75 37                	jne    9f60 <line_parser+0x4a0>
    9f29:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9f2d:	8b 10                	mov    edx,DWORD PTR [rax]
    9f2f:	8b 05 cf dd 0f 00    	mov    eax,DWORD PTR [rip+0xfddcf]        # 107d04 <homenet>
    9f35:	39 c2                	cmp    edx,eax
    9f37:	75 27                	jne    9f60 <line_parser+0x4a0>
    9f39:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9f3d:	c7 40 04 ff ff ff ff 	mov    DWORD PTR [rax+0x4],0xffffffff
    9f44:	48 8d 45 ee          	lea    rax,[rbp-0x12]
    9f48:	48 83 c0 01          	add    rax,0x1
    9f4c:	48 89 c7             	mov    rdi,rax
    9f4f:	e8 b1 f8 ff ff       	call   9805 <check_port_number>
    9f54:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    9f58:	89 42 08             	mov    DWORD PTR [rdx+0x8],eax
    9f5b:	e9 4e 0a 00 00       	jmp    a9ae <line_parser+0xeee>
    9f60:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9f64:	c7 00 ff ff ff ff    	mov    DWORD PTR [rax],0xffffffff
    9f6a:	48 8d 45 ee          	lea    rax,[rbp-0x12]
    9f6e:	48 83 c0 01          	add    rax,0x1
    9f72:	48 89 c7             	mov    rdi,rax
    9f75:	e8 8b f8 ff ff       	call   9805 <check_port_number>
    9f7a:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    9f7e:	89 42 0c             	mov    DWORD PTR [rdx+0xc],eax
    9f81:	e9 28 0a 00 00       	jmp    a9ae <line_parser+0xeee>
    9f86:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9f8a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9f8d:	3c 28                	cmp    al,0x28
    9f8f:	0f 85 19 0a 00 00    	jne    a9ae <line_parser+0xeee>
    9f95:	c6 45 8c 01          	mov    BYTE PTR [rbp-0x74],0x1
    9f99:	e9 34 0a 00 00       	jmp    a9d2 <line_parser+0xf12>
    9f9e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9fa2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9fa5:	3c 28                	cmp    al,0x28
    9fa7:	75 0e                	jne    9fb7 <line_parser+0x4f7>
    9fa9:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9fad:	48 83 c0 01          	add    rax,0x1
    9fb1:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    9fb5:	eb 08                	jmp    9fbf <line_parser+0x4ff>
    9fb7:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9fbb:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    9fbf:	80 7d 8d 00          	cmp    BYTE PTR [rbp-0x73],0x0
    9fc3:	0f 84 a4 00 00 00    	je     a06d <line_parser+0x5ad>
    9fc9:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9fcd:	48 89 c7             	mov    rdi,rax
    9fd0:	e8 bb 85 ff ff       	call   2590 <strlen@plt>
    9fd5:	48 8d 50 ff          	lea    rdx,[rax-0x1]
    9fd9:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9fdd:	48 01 d0             	add    rax,rdx
    9fe0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9fe3:	3c 3b                	cmp    al,0x3b
    9fe5:	75 33                	jne    a01a <line_parser+0x55a>
    9fe7:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9feb:	48 89 c7             	mov    rdi,rax
    9fee:	e8 9d 85 ff ff       	call   2590 <strlen@plt>
    9ff3:	48 8d 50 fe          	lea    rdx,[rax-0x2]
    9ff7:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9ffb:	48 8d 88 50 01 00 00 	lea    rcx,[rax+0x150]
    a002:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a006:	48 89 c6             	mov    rsi,rax
    a009:	48 89 cf             	mov    rdi,rcx
    a00c:	e8 2f 86 ff ff       	call   2640 <strncat@plt>
    a011:	c6 45 8d 00          	mov    BYTE PTR [rbp-0x73],0x0
    a015:	e9 b8 09 00 00       	jmp    a9d2 <line_parser+0xf12>
    a01a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a01e:	48 8d 90 50 01 00 00 	lea    rdx,[rax+0x150]
    a025:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a029:	48 89 c6             	mov    rsi,rax
    a02c:	48 89 d7             	mov    rdi,rdx
    a02f:	e8 0c 88 ff ff       	call   2840 <strcat@plt>
    a034:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a038:	48 8d 90 50 01 00 00 	lea    rdx,[rax+0x150]
    a03f:	48 89 d0             	mov    rax,rdx
    a042:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    a049:	48 89 c6             	mov    rsi,rax
    a04c:	b8 00 00 00 00       	mov    eax,0x0
    a051:	48 89 f7             	mov    rdi,rsi
    a054:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    a056:	48 89 c8             	mov    rax,rcx
    a059:	48 f7 d0             	not    rax
    a05c:	48 83 e8 01          	sub    rax,0x1
    a060:	48 01 d0             	add    rax,rdx
    a063:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    a068:	e9 41 09 00 00       	jmp    a9ae <line_parser+0xeee>
    a06d:	80 7d 8e 00          	cmp    BYTE PTR [rbp-0x72],0x0
    a071:	0f 84 95 00 00 00    	je     a10c <line_parser+0x64c>
    a077:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a07b:	48 8d 35 89 3a 00 00 	lea    rsi,[rip+0x3a89]        # db0b <_IO_stdin_used+0x1b0b>
    a082:	48 89 c7             	mov    rdi,rax
    a085:	e8 36 88 ff ff       	call   28c0 <strstr@plt>
    a08a:	48 85 c0             	test   rax,rax
    a08d:	74 30                	je     a0bf <line_parser+0x5ff>
    a08f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a093:	48 89 c7             	mov    rdi,rax
    a096:	e8 f5 84 ff ff       	call   2590 <strlen@plt>
    a09b:	48 8d 50 fd          	lea    rdx,[rax-0x3]
    a09f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a0a3:	48 8d 48 40          	lea    rcx,[rax+0x40]
    a0a7:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a0ab:	48 89 c6             	mov    rsi,rax
    a0ae:	48 89 cf             	mov    rdi,rcx
    a0b1:	e8 8a 85 ff ff       	call   2640 <strncat@plt>
    a0b6:	c6 45 8e 00          	mov    BYTE PTR [rbp-0x72],0x0
    a0ba:	e9 13 09 00 00       	jmp    a9d2 <line_parser+0xf12>
    a0bf:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a0c3:	48 8d 50 40          	lea    rdx,[rax+0x40]
    a0c7:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a0cb:	48 89 c6             	mov    rsi,rax
    a0ce:	48 89 d7             	mov    rdi,rdx
    a0d1:	e8 6a 87 ff ff       	call   2840 <strcat@plt>
    a0d6:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a0da:	48 8d 50 40          	lea    rdx,[rax+0x40]
    a0de:	48 89 d0             	mov    rax,rdx
    a0e1:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    a0e8:	48 89 c6             	mov    rsi,rax
    a0eb:	b8 00 00 00 00       	mov    eax,0x0
    a0f0:	48 89 f7             	mov    rdi,rsi
    a0f3:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    a0f5:	48 89 c8             	mov    rax,rcx
    a0f8:	48 f7 d0             	not    rax
    a0fb:	48 83 e8 01          	sub    rax,0x1
    a0ff:	48 01 d0             	add    rax,rdx
    a102:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    a107:	e9 a2 08 00 00       	jmp    a9ae <line_parser+0xeee>
    a10c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a110:	ba 06 00 00 00       	mov    edx,0x6
    a115:	48 8d 35 f2 39 00 00 	lea    rsi,[rip+0x39f2]        # db0e <_IO_stdin_used+0x1b0e>
    a11c:	48 89 c7             	mov    rdi,rax
    a11f:	e8 bc 83 ff ff       	call   24e0 <strncmp@plt>
    a124:	85 c0                	test   eax,eax
    a126:	75 34                	jne    a15c <line_parser+0x69c>
    a128:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a12c:	48 89 c7             	mov    rdi,rax
    a12f:	e8 5c 84 ff ff       	call   2590 <strlen@plt>
    a134:	48 8d 50 f8          	lea    rdx,[rax-0x8]
    a138:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a13c:	48 8d 48 06          	lea    rcx,[rax+0x6]
    a140:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a144:	48 83 c0 20          	add    rax,0x20
    a148:	48 89 ce             	mov    rsi,rcx
    a14b:	48 89 c7             	mov    rdi,rax
    a14e:	e8 7d 83 ff ff       	call   24d0 <strncpy@plt>
    a153:	c6 45 8f 01          	mov    BYTE PTR [rbp-0x71],0x1
    a157:	e9 52 08 00 00       	jmp    a9ae <line_parser+0xeee>
    a15c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a160:	ba 05 00 00 00       	mov    edx,0x5
    a165:	48 8d 35 a9 39 00 00 	lea    rsi,[rip+0x39a9]        # db15 <_IO_stdin_used+0x1b15>
    a16c:	48 89 c7             	mov    rdi,rax
    a16f:	e8 6c 83 ff ff       	call   24e0 <strncmp@plt>
    a174:	85 c0                	test   eax,eax
    a176:	75 63                	jne    a1db <line_parser+0x71b>
    a178:	c6 45 8d 01          	mov    BYTE PTR [rbp-0x73],0x1
    a17c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a180:	48 83 c0 05          	add    rax,0x5
    a184:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    a188:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a18c:	48 8d 90 50 01 00 00 	lea    rdx,[rax+0x150]
    a193:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    a197:	48 89 c6             	mov    rsi,rax
    a19a:	48 89 d7             	mov    rdi,rdx
    a19d:	e8 9e 86 ff ff       	call   2840 <strcat@plt>
    a1a2:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a1a6:	48 8d 90 50 01 00 00 	lea    rdx,[rax+0x150]
    a1ad:	48 89 d0             	mov    rax,rdx
    a1b0:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    a1b7:	48 89 c6             	mov    rsi,rax
    a1ba:	b8 00 00 00 00       	mov    eax,0x0
    a1bf:	48 89 f7             	mov    rdi,rsi
    a1c2:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    a1c4:	48 89 c8             	mov    rax,rcx
    a1c7:	48 f7 d0             	not    rax
    a1ca:	48 83 e8 01          	sub    rax,0x1
    a1ce:	48 01 d0             	add    rax,rdx
    a1d1:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    a1d6:	e9 d3 07 00 00       	jmp    a9ae <line_parser+0xeee>
    a1db:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a1df:	ba 06 00 00 00       	mov    edx,0x6
    a1e4:	48 8d 35 30 39 00 00 	lea    rsi,[rip+0x3930]        # db1b <_IO_stdin_used+0x1b1b>
    a1eb:	48 89 c7             	mov    rdi,rax
    a1ee:	e8 ed 82 ff ff       	call   24e0 <strncmp@plt>
    a1f3:	85 c0                	test   eax,eax
    a1f5:	75 31                	jne    a228 <line_parser+0x768>
    a1f7:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a1fb:	48 89 c7             	mov    rdi,rax
    a1fe:	e8 26 f8 ff ff       	call   9a29 <sc_strip>
    a203:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a207:	48 83 c0 06          	add    rax,0x6
    a20b:	48 89 c7             	mov    rdi,rax
    a20e:	e8 0d 86 ff ff       	call   2820 <atoi@plt>
    a213:	89 45 bc             	mov    DWORD PTR [rbp-0x44],eax
    a216:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a21a:	8b 55 bc             	mov    edx,DWORD PTR [rbp-0x44]
    a21d:	89 90 4c 03 00 00    	mov    DWORD PTR [rax+0x34c],edx
    a223:	e9 86 07 00 00       	jmp    a9ae <line_parser+0xeee>
    a228:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a22c:	ba 05 00 00 00       	mov    edx,0x5
    a231:	48 8d 35 ea 38 00 00 	lea    rsi,[rip+0x38ea]        # db22 <_IO_stdin_used+0x1b22>
    a238:	48 89 c7             	mov    rdi,rax
    a23b:	e8 a0 82 ff ff       	call   24e0 <strncmp@plt>
    a240:	85 c0                	test   eax,eax
    a242:	75 3f                	jne    a283 <line_parser+0x7c3>
    a244:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a248:	48 89 c7             	mov    rdi,rax
    a24b:	e8 40 83 ff ff       	call   2590 <strlen@plt>
    a250:	48 8d 50 fa          	lea    rdx,[rax-0x6]
    a254:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a258:	48 8d 48 05          	lea    rcx,[rax+0x5]
    a25c:	48 8d 45 ee          	lea    rax,[rbp-0x12]
    a260:	48 89 ce             	mov    rsi,rcx
    a263:	48 89 c7             	mov    rdi,rax
    a266:	e8 65 82 ff ff       	call   24d0 <strncpy@plt>
    a26b:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    a26f:	48 8d 45 ee          	lea    rax,[rbp-0x12]
    a273:	48 89 d6             	mov    rsi,rdx
    a276:	48 89 c7             	mov    rdi,rax
    a279:	e8 8b f6 ff ff       	call   9909 <get_ruletype>
    a27e:	e9 2b 07 00 00       	jmp    a9ae <line_parser+0xeee>
    a283:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a287:	ba 08 00 00 00       	mov    edx,0x8
    a28c:	48 8d 35 95 38 00 00 	lea    rsi,[rip+0x3895]        # db28 <_IO_stdin_used+0x1b28>
    a293:	48 89 c7             	mov    rdi,rax
    a296:	e8 45 82 ff ff       	call   24e0 <strncmp@plt>
    a29b:	85 c0                	test   eax,eax
    a29d:	0f 85 a5 00 00 00    	jne    a348 <line_parser+0x888>
    a2a3:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a2a7:	48 83 c0 08          	add    rax,0x8
    a2ab:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    a2af:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a2b3:	48 8d 35 51 38 00 00 	lea    rsi,[rip+0x3851]        # db0b <_IO_stdin_used+0x1b0b>
    a2ba:	48 89 c7             	mov    rdi,rax
    a2bd:	e8 fe 85 ff ff       	call   28c0 <strstr@plt>
    a2c2:	48 85 c0             	test   rax,rax
    a2c5:	74 30                	je     a2f7 <line_parser+0x837>
    a2c7:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a2cb:	48 89 c7             	mov    rdi,rax
    a2ce:	e8 bd 82 ff ff       	call   2590 <strlen@plt>
    a2d3:	48 8d 50 f5          	lea    rdx,[rax-0xb]
    a2d7:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a2db:	48 8d 48 08          	lea    rcx,[rax+0x8]
    a2df:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a2e3:	48 83 c0 40          	add    rax,0x40
    a2e7:	48 89 ce             	mov    rsi,rcx
    a2ea:	48 89 c7             	mov    rdi,rax
    a2ed:	e8 de 81 ff ff       	call   24d0 <strncpy@plt>
    a2f2:	e9 b7 06 00 00       	jmp    a9ae <line_parser+0xeee>
    a2f7:	c6 45 8e 01          	mov    BYTE PTR [rbp-0x72],0x1
    a2fb:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a2ff:	48 8d 50 40          	lea    rdx,[rax+0x40]
    a303:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a307:	48 89 c6             	mov    rsi,rax
    a30a:	48 89 d7             	mov    rdi,rdx
    a30d:	e8 2e 85 ff ff       	call   2840 <strcat@plt>
    a312:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a316:	48 8d 50 40          	lea    rdx,[rax+0x40]
    a31a:	48 89 d0             	mov    rax,rdx
    a31d:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    a324:	48 89 c6             	mov    rsi,rax
    a327:	b8 00 00 00 00       	mov    eax,0x0
    a32c:	48 89 f7             	mov    rdi,rsi
    a32f:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    a331:	48 89 c8             	mov    rax,rcx
    a334:	48 f7 d0             	not    rax
    a337:	48 83 e8 01          	sub    rax,0x1
    a33b:	48 01 d0             	add    rax,rdx
    a33e:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    a343:	e9 66 06 00 00       	jmp    a9ae <line_parser+0xeee>
    a348:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a34c:	ba 04 00 00 00       	mov    edx,0x4
    a351:	48 8d 35 d9 37 00 00 	lea    rsi,[rip+0x37d9]        # db31 <_IO_stdin_used+0x1b31>
    a358:	48 89 c7             	mov    rdi,rax
    a35b:	e8 80 81 ff ff       	call   24e0 <strncmp@plt>
    a360:	85 c0                	test   eax,eax
    a362:	0f 85 8e 00 00 00    	jne    a3f6 <line_parser+0x936>
    a368:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a36c:	48 8d 35 65 37 00 00 	lea    rsi,[rip+0x3765]        # dad8 <_IO_stdin_used+0x1ad8>
    a373:	48 89 c7             	mov    rdi,rax
    a376:	e8 f5 82 ff ff       	call   2670 <strcspn@plt>
    a37b:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
    a37f:	48 01 d0             	add    rax,rdx
    a382:	c6 00 00             	mov    BYTE PTR [rax],0x0
    a385:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a389:	48 83 c0 04          	add    rax,0x4
    a38d:	48 89 c7             	mov    rdi,rax
    a390:	e8 d1 f2 ff ff       	call   9666 <isdigit>
    a395:	84 c0                	test   al,al
    a397:	74 47                	je     a3e0 <line_parser+0x920>
    a399:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a39d:	48 83 c0 04          	add    rax,0x4
    a3a1:	48 89 c7             	mov    rdi,rax
    a3a4:	e8 77 84 ff ff       	call   2820 <atoi@plt>
    a3a9:	89 45 b8             	mov    DWORD PTR [rbp-0x48],eax
    a3ac:	83 7d b8 00          	cmp    DWORD PTR [rbp-0x48],0x0
    a3b0:	7e 18                	jle    a3ca <line_parser+0x90a>
    a3b2:	83 7d b8 0a          	cmp    DWORD PTR [rbp-0x48],0xa
    a3b6:	7f 12                	jg     a3ca <line_parser+0x90a>
    a3b8:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a3bc:	8b 55 b8             	mov    edx,DWORD PTR [rbp-0x48]
    a3bf:	89 90 4c 01 00 00    	mov    DWORD PTR [rax+0x14c],edx
    a3c5:	e9 e4 05 00 00       	jmp    a9ae <line_parser+0xeee>
    a3ca:	48 8d 3d 67 37 00 00 	lea    rdi,[rip+0x3767]        # db38 <_IO_stdin_used+0x1b38>
    a3d1:	e8 4a 81 ff ff       	call   2520 <puts@plt>
    a3d6:	bf ff ff ff ff       	mov    edi,0xffffffff
    a3db:	e8 a0 84 ff ff       	call   2880 <exit@plt>
    a3e0:	48 8d 3d 79 37 00 00 	lea    rdi,[rip+0x3779]        # db60 <_IO_stdin_used+0x1b60>
    a3e7:	e8 34 81 ff ff       	call   2520 <puts@plt>
    a3ec:	bf ff ff ff ff       	mov    edi,0xffffffff
    a3f1:	e8 8a 84 ff ff       	call   2880 <exit@plt>
    a3f6:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a3fa:	ba 06 00 00 00       	mov    edx,0x6
    a3ff:	48 8d 35 82 37 00 00 	lea    rsi,[rip+0x3782]        # db88 <_IO_stdin_used+0x1b88>
    a406:	48 89 c7             	mov    rdi,rax
    a409:	e8 d2 80 ff ff       	call   24e0 <strncmp@plt>
    a40e:	85 c0                	test   eax,eax
    a410:	0f 85 9b 00 00 00    	jne    a4b1 <line_parser+0x9f1>
    a416:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a41a:	48 89 c7             	mov    rdi,rax
    a41d:	e8 07 f6 ff ff       	call   9a29 <sc_strip>
    a422:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a426:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a42c:	3d 80 00 00 00       	cmp    eax,0x80
    a431:	75 58                	jne    a48b <line_parser+0x9cb>
    a433:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a437:	48 83 c0 06          	add    rax,0x6
    a43b:	ba ff 00 00 00       	mov    edx,0xff
    a440:	be 00 00 00 00       	mov    esi,0x0
    a445:	48 89 c7             	mov    rdi,rax
    a448:	e8 87 f5 ff ff       	call   99d4 <numeric_check>
    a44d:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
    a450:	83 7d b4 ff          	cmp    DWORD PTR [rbp-0x4c],0xffffffff
    a454:	75 16                	jne    a46c <line_parser+0x9ac>
    a456:	48 8d 3d 32 37 00 00 	lea    rdi,[rip+0x3732]        # db8f <_IO_stdin_used+0x1b8f>
    a45d:	e8 be 80 ff ff       	call   2520 <puts@plt>
    a462:	bf ff ff ff ff       	mov    edi,0xffffffff
    a467:	e8 14 84 ff ff       	call   2880 <exit@plt>
    a46c:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    a46f:	89 c2                	mov    edx,eax
    a471:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a475:	88 90 72 03 00 00    	mov    BYTE PTR [rax+0x372],dl
    a47b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a47f:	c6 80 6e 03 00 00 01 	mov    BYTE PTR [rax+0x36e],0x1
    a486:	e9 23 05 00 00       	jmp    a9ae <line_parser+0xeee>
    a48b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a48f:	48 83 c0 20          	add    rax,0x20
    a493:	48 89 c6             	mov    rsi,rax
    a496:	48 8d 3d 0b 37 00 00 	lea    rdi,[rip+0x370b]        # dba8 <_IO_stdin_used+0x1ba8>
    a49d:	b8 00 00 00 00       	mov    eax,0x0
    a4a2:	e8 49 81 ff ff       	call   25f0 <printf@plt>
    a4a7:	bf ff ff ff ff       	mov    edi,0xffffffff
    a4ac:	e8 cf 83 ff ff       	call   2880 <exit@plt>
    a4b1:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a4b5:	ba 06 00 00 00       	mov    edx,0x6
    a4ba:	48 8d 35 1e 37 00 00 	lea    rsi,[rip+0x371e]        # dbdf <_IO_stdin_used+0x1bdf>
    a4c1:	48 89 c7             	mov    rdi,rax
    a4c4:	e8 17 80 ff ff       	call   24e0 <strncmp@plt>
    a4c9:	85 c0                	test   eax,eax
    a4cb:	0f 85 86 00 00 00    	jne    a557 <line_parser+0xa97>
    a4d1:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a4d5:	48 89 c7             	mov    rdi,rax
    a4d8:	e8 4c f5 ff ff       	call   9a29 <sc_strip>
    a4dd:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a4e1:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a4e7:	3d 80 00 00 00       	cmp    eax,0x80
    a4ec:	75 58                	jne    a546 <line_parser+0xa86>
    a4ee:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a4f2:	48 83 c0 06          	add    rax,0x6
    a4f6:	ba ff 00 00 00       	mov    edx,0xff
    a4fb:	be 00 00 00 00       	mov    esi,0x0
    a500:	48 89 c7             	mov    rdi,rax
    a503:	e8 cc f4 ff ff       	call   99d4 <numeric_check>
    a508:	89 45 b0             	mov    DWORD PTR [rbp-0x50],eax
    a50b:	83 7d b0 ff          	cmp    DWORD PTR [rbp-0x50],0xffffffff
    a50f:	75 16                	jne    a527 <line_parser+0xa67>
    a511:	48 8d 3d ce 36 00 00 	lea    rdi,[rip+0x36ce]        # dbe6 <_IO_stdin_used+0x1be6>
    a518:	e8 03 80 ff ff       	call   2520 <puts@plt>
    a51d:	bf ff ff ff ff       	mov    edi,0xffffffff
    a522:	e8 59 83 ff ff       	call   2880 <exit@plt>
    a527:	8b 45 b0             	mov    eax,DWORD PTR [rbp-0x50]
    a52a:	89 c2                	mov    edx,eax
    a52c:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a530:	88 90 73 03 00 00    	mov    BYTE PTR [rax+0x373],dl
    a536:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a53a:	c6 80 6f 03 00 00 01 	mov    BYTE PTR [rax+0x36f],0x1
    a541:	e9 68 04 00 00       	jmp    a9ae <line_parser+0xeee>
    a546:	48 8d 3d b3 36 00 00 	lea    rdi,[rip+0x36b3]        # dc00 <_IO_stdin_used+0x1c00>
    a54d:	e8 ce 7f ff ff       	call   2520 <puts@plt>
    a552:	e9 57 04 00 00       	jmp    a9ae <line_parser+0xeee>
    a557:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a55b:	ba 08 00 00 00       	mov    edx,0x8
    a560:	48 8d 35 cb 36 00 00 	lea    rsi,[rip+0x36cb]        # dc32 <_IO_stdin_used+0x1c32>
    a567:	48 89 c7             	mov    rdi,rax
    a56a:	e8 71 7f ff ff       	call   24e0 <strncmp@plt>
    a56f:	85 c0                	test   eax,eax
    a571:	0f 85 8c 00 00 00    	jne    a603 <line_parser+0xb43>
    a577:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a57b:	48 89 c7             	mov    rdi,rax
    a57e:	e8 a6 f4 ff ff       	call   9a29 <sc_strip>
    a583:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a587:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a58d:	3d 80 00 00 00       	cmp    eax,0x80
    a592:	75 59                	jne    a5ed <line_parser+0xb2d>
    a594:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a598:	48 83 c0 08          	add    rax,0x8
    a59c:	ba ff ff 00 00       	mov    edx,0xffff
    a5a1:	be 00 00 00 00       	mov    esi,0x0
    a5a6:	48 89 c7             	mov    rdi,rax
    a5a9:	e8 26 f4 ff ff       	call   99d4 <numeric_check>
    a5ae:	89 45 ac             	mov    DWORD PTR [rbp-0x54],eax
    a5b1:	83 7d ac ff          	cmp    DWORD PTR [rbp-0x54],0xffffffff
    a5b5:	75 16                	jne    a5cd <line_parser+0xb0d>
    a5b7:	48 8d 3d 7d 36 00 00 	lea    rdi,[rip+0x367d]        # dc3b <_IO_stdin_used+0x1c3b>
    a5be:	e8 5d 7f ff ff       	call   2520 <puts@plt>
    a5c3:	bf ff ff ff ff       	mov    edi,0xffffffff
    a5c8:	e8 b3 82 ff ff       	call   2880 <exit@plt>
    a5cd:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
    a5d0:	89 c2                	mov    edx,eax
    a5d2:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a5d6:	66 89 90 76 03 00 00 	mov    WORD PTR [rax+0x376],dx
    a5dd:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a5e1:	c6 80 71 03 00 00 01 	mov    BYTE PTR [rax+0x371],0x1
    a5e8:	e9 c1 03 00 00       	jmp    a9ae <line_parser+0xeee>
    a5ed:	48 8d 3d 64 36 00 00 	lea    rdi,[rip+0x3664]        # dc58 <_IO_stdin_used+0x1c58>
    a5f4:	e8 27 7f ff ff       	call   2520 <puts@plt>
    a5f9:	bf ff ff ff ff       	mov    edi,0xffffffff
    a5fe:	e8 7d 82 ff ff       	call   2880 <exit@plt>
    a603:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a607:	ba 09 00 00 00       	mov    edx,0x9
    a60c:	48 8d 35 79 36 00 00 	lea    rsi,[rip+0x3679]        # dc8c <_IO_stdin_used+0x1c8c>
    a613:	48 89 c7             	mov    rdi,rax
    a616:	e8 c5 7e ff ff       	call   24e0 <strncmp@plt>
    a61b:	85 c0                	test   eax,eax
    a61d:	75 7a                	jne    a699 <line_parser+0xbd9>
    a61f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a623:	48 89 c7             	mov    rdi,rax
    a626:	e8 fe f3 ff ff       	call   9a29 <sc_strip>
    a62b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a62f:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a635:	3d 80 00 00 00       	cmp    eax,0x80
    a63a:	0f 85 6e 03 00 00    	jne    a9ae <line_parser+0xeee>
    a640:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a644:	48 83 c0 09          	add    rax,0x9
    a648:	ba ff ff 00 00       	mov    edx,0xffff
    a64d:	be 00 00 00 00       	mov    esi,0x0
    a652:	48 89 c7             	mov    rdi,rax
    a655:	e8 7a f3 ff ff       	call   99d4 <numeric_check>
    a65a:	89 45 a8             	mov    DWORD PTR [rbp-0x58],eax
    a65d:	83 7d a8 ff          	cmp    DWORD PTR [rbp-0x58],0xffffffff
    a661:	75 16                	jne    a679 <line_parser+0xbb9>
    a663:	48 8d 3d 2c 36 00 00 	lea    rdi,[rip+0x362c]        # dc96 <_IO_stdin_used+0x1c96>
    a66a:	e8 b1 7e ff ff       	call   2520 <puts@plt>
    a66f:	bf ff ff ff ff       	mov    edi,0xffffffff
    a674:	e8 07 82 ff ff       	call   2880 <exit@plt>
    a679:	8b 45 a8             	mov    eax,DWORD PTR [rbp-0x58]
    a67c:	89 c2                	mov    edx,eax
    a67e:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a682:	66 89 90 74 03 00 00 	mov    WORD PTR [rax+0x374],dx
    a689:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a68d:	c6 80 70 03 00 00 01 	mov    BYTE PTR [rax+0x370],0x1
    a694:	e9 15 03 00 00       	jmp    a9ae <line_parser+0xeee>
    a699:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a69d:	ba 04 00 00 00       	mov    edx,0x4
    a6a2:	48 8d 35 09 36 00 00 	lea    rsi,[rip+0x3609]        # dcb2 <_IO_stdin_used+0x1cb2>
    a6a9:	48 89 c7             	mov    rdi,rax
    a6ac:	e8 2f 7e ff ff       	call   24e0 <strncmp@plt>
    a6b1:	85 c0                	test   eax,eax
    a6b3:	75 64                	jne    a719 <line_parser+0xc59>
    a6b5:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a6b9:	48 89 c7             	mov    rdi,rax
    a6bc:	e8 68 f3 ff ff       	call   9a29 <sc_strip>
    a6c1:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a6c5:	48 83 c0 04          	add    rax,0x4
    a6c9:	ba ff 00 00 00       	mov    edx,0xff
    a6ce:	be 00 00 00 00       	mov    esi,0x0
    a6d3:	48 89 c7             	mov    rdi,rax
    a6d6:	e8 f9 f2 ff ff       	call   99d4 <numeric_check>
    a6db:	89 45 a4             	mov    DWORD PTR [rbp-0x5c],eax
    a6de:	83 7d a4 ff          	cmp    DWORD PTR [rbp-0x5c],0xffffffff
    a6e2:	75 16                	jne    a6fa <line_parser+0xc3a>
    a6e4:	48 8d 3d cc 35 00 00 	lea    rdi,[rip+0x35cc]        # dcb7 <_IO_stdin_used+0x1cb7>
    a6eb:	e8 30 7e ff ff       	call   2520 <puts@plt>
    a6f0:	bf ff ff ff ff       	mov    edi,0xffffffff
    a6f5:	e8 86 81 ff ff       	call   2880 <exit@plt>
    a6fa:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
    a6fd:	89 c2                	mov    edx,eax
    a6ff:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a703:	88 90 6c 03 00 00    	mov    BYTE PTR [rax+0x36c],dl
    a709:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a70d:	c6 80 69 03 00 00 01 	mov    BYTE PTR [rax+0x369],0x1
    a714:	e9 95 02 00 00       	jmp    a9ae <line_parser+0xeee>
    a719:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a71d:	ba 07 00 00 00       	mov    edx,0x7
    a722:	48 8d 35 a0 35 00 00 	lea    rsi,[rip+0x35a0]        # dcc9 <_IO_stdin_used+0x1cc9>
    a729:	48 89 c7             	mov    rdi,rax
    a72c:	e8 af 7d ff ff       	call   24e0 <strncmp@plt>
    a731:	85 c0                	test   eax,eax
    a733:	75 6e                	jne    a7a3 <line_parser+0xce3>
    a735:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a739:	48 89 c7             	mov    rdi,rax
    a73c:	e8 e8 f2 ff ff       	call   9a29 <sc_strip>
    a741:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a745:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a74b:	83 f8 7e             	cmp    eax,0x7e
    a74e:	75 3d                	jne    a78d <line_parser+0xccd>
    a750:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a754:	48 89 c7             	mov    rdi,rax
    a757:	e8 34 7e ff ff       	call   2590 <strlen@plt>
    a75c:	48 8d 50 f8          	lea    rdx,[rax-0x8]
    a760:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a764:	48 8d 48 07          	lea    rcx,[rax+0x7]
    a768:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a76c:	48 05 53 03 00 00    	add    rax,0x353
    a772:	48 89 ce             	mov    rsi,rcx
    a775:	48 89 c7             	mov    rdi,rax
    a778:	e8 53 7d ff ff       	call   24d0 <strncpy@plt>
    a77d:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a781:	c6 80 50 03 00 00 01 	mov    BYTE PTR [rax+0x350],0x1
    a788:	e9 21 02 00 00       	jmp    a9ae <line_parser+0xeee>
    a78d:	48 8d 3d 44 35 00 00 	lea    rdi,[rip+0x3544]        # dcd8 <_IO_stdin_used+0x1cd8>
    a794:	e8 87 7d ff ff       	call   2520 <puts@plt>
    a799:	bf ff ff ff ff       	mov    edi,0xffffffff
    a79e:	e8 dd 80 ff ff       	call   2880 <exit@plt>
    a7a3:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a7a7:	ba 04 00 00 00       	mov    edx,0x4
    a7ac:	48 8d 35 56 35 00 00 	lea    rsi,[rip+0x3556]        # dd09 <_IO_stdin_used+0x1d09>
    a7b3:	48 89 c7             	mov    rdi,rax
    a7b6:	e8 25 7d ff ff       	call   24e0 <strncmp@plt>
    a7bb:	85 c0                	test   eax,eax
    a7bd:	75 78                	jne    a837 <line_parser+0xd77>
    a7bf:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a7c3:	48 89 c7             	mov    rdi,rax
    a7c6:	e8 5e f2 ff ff       	call   9a29 <sc_strip>
    a7cb:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a7cf:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a7d5:	83 f8 7e             	cmp    eax,0x7e
    a7d8:	0f 85 d0 01 00 00    	jne    a9ae <line_parser+0xeee>
    a7de:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a7e2:	48 83 c0 04          	add    rax,0x4
    a7e6:	ba ff ff ff ff       	mov    edx,0xffffffff
    a7eb:	be 00 00 00 00       	mov    esi,0x0
    a7f0:	48 89 c7             	mov    rdi,rax
    a7f3:	e8 dc f1 ff ff       	call   99d4 <numeric_check>
    a7f8:	89 45 a0             	mov    DWORD PTR [rbp-0x60],eax
    a7fb:	83 7d a0 ff          	cmp    DWORD PTR [rbp-0x60],0xffffffff
    a7ff:	75 16                	jne    a817 <line_parser+0xd57>
    a801:	48 8d 3d 06 35 00 00 	lea    rdi,[rip+0x3506]        # dd0e <_IO_stdin_used+0x1d0e>
    a808:	e8 13 7d ff ff       	call   2520 <puts@plt>
    a80d:	bf ff ff ff ff       	mov    edi,0xffffffff
    a812:	e8 69 80 ff ff       	call   2880 <exit@plt>
    a817:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    a81a:	89 c2                	mov    edx,eax
    a81c:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a820:	66 89 90 5c 03 00 00 	mov    WORD PTR [rax+0x35c],dx
    a827:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a82b:	c6 80 51 03 00 00 01 	mov    BYTE PTR [rax+0x351],0x1
    a832:	e9 77 01 00 00       	jmp    a9ae <line_parser+0xeee>
    a837:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a83b:	ba 06 00 00 00       	mov    edx,0x6
    a840:	48 8d 35 d9 34 00 00 	lea    rsi,[rip+0x34d9]        # dd20 <_IO_stdin_used+0x1d20>
    a847:	48 89 c7             	mov    rdi,rax
    a84a:	e8 91 7c ff ff       	call   24e0 <strncmp@plt>
    a84f:	85 c0                	test   eax,eax
    a851:	75 7c                	jne    a8cf <line_parser+0xe0f>
    a853:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a857:	48 89 c7             	mov    rdi,rax
    a85a:	e8 31 7d ff ff       	call   2590 <strlen@plt>
    a85f:	48 8d 50 f7          	lea    rdx,[rax-0x9]
    a863:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a867:	48 8d 48 06          	lea    rcx,[rax+0x6]
    a86b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a86f:	48 05 10 02 00 00    	add    rax,0x210
    a875:	48 89 ce             	mov    rsi,rcx
    a878:	48 89 c7             	mov    rdi,rax
    a87b:	e8 50 7c ff ff       	call   24d0 <strncpy@plt>
    a880:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a884:	48 8d 88 10 02 00 00 	lea    rcx,[rax+0x210]
    a88b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a88f:	48 05 d0 01 00 00    	add    rax,0x1d0
    a895:	ba 00 00 00 00       	mov    edx,0x0
    a89a:	48 89 ce             	mov    rsi,rcx
    a89d:	48 89 c7             	mov    rdi,rax
    a8a0:	e8 bb 7d ff ff       	call   2660 <regcomp@plt>
    a8a5:	85 c0                	test   eax,eax
    a8a7:	74 16                	je     a8bf <line_parser+0xdff>
    a8a9:	48 8d 3d 78 34 00 00 	lea    rdi,[rip+0x3478]        # dd28 <_IO_stdin_used+0x1d28>
    a8b0:	e8 6b 7c ff ff       	call   2520 <puts@plt>
    a8b5:	bf ff ff ff ff       	mov    edi,0xffffffff
    a8ba:	e8 c1 7f ff ff       	call   2880 <exit@plt>
    a8bf:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a8c3:	c6 80 90 02 00 00 01 	mov    BYTE PTR [rax+0x290],0x1
    a8ca:	e9 df 00 00 00       	jmp    a9ae <line_parser+0xeee>
    a8cf:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a8d3:	ba 06 00 00 00       	mov    edx,0x6
    a8d8:	48 8d 35 6e 34 00 00 	lea    rsi,[rip+0x346e]        # dd4d <_IO_stdin_used+0x1d4d>
    a8df:	48 89 c7             	mov    rdi,rax
    a8e2:	e8 f9 7b ff ff       	call   24e0 <strncmp@plt>
    a8e7:	85 c0                	test   eax,eax
    a8e9:	75 2d                	jne    a918 <line_parser+0xe58>
    a8eb:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a8ef:	48 89 c7             	mov    rdi,rax
    a8f2:	e8 32 f1 ff ff       	call   9a29 <sc_strip>
    a8f7:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a8fb:	48 8d 48 06          	lea    rcx,[rax+0x6]
    a8ff:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a903:	ba 01 00 00 00       	mov    edx,0x1
    a908:	48 89 ce             	mov    rsi,rcx
    a90b:	48 89 c7             	mov    rdi,rax
    a90e:	e8 94 03 00 00       	call   aca7 <d_op_parser>
    a913:	e9 96 00 00 00       	jmp    a9ae <line_parser+0xeee>
    a918:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a91c:	ba 07 00 00 00       	mov    edx,0x7
    a921:	48 8d 35 2c 34 00 00 	lea    rsi,[rip+0x342c]        # dd54 <_IO_stdin_used+0x1d54>
    a928:	48 89 c7             	mov    rdi,rax
    a92b:	e8 b0 7b ff ff       	call   24e0 <strncmp@plt>
    a930:	85 c0                	test   eax,eax
    a932:	75 27                	jne    a95b <line_parser+0xe9b>
    a934:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a938:	48 89 c7             	mov    rdi,rax
    a93b:	e8 e9 f0 ff ff       	call   9a29 <sc_strip>
    a940:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a944:	48 83 c0 07          	add    rax,0x7
    a948:	48 89 c7             	mov    rdi,rax
    a94b:	e8 d0 7e ff ff       	call   2820 <atoi@plt>
    a950:	89 c2                	mov    edx,eax
    a952:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a956:	89 50 14             	mov    DWORD PTR [rax+0x14],edx
    a959:	eb 53                	jmp    a9ae <line_parser+0xeee>
    a95b:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a95f:	ba 0b 00 00 00       	mov    edx,0xb
    a964:	48 8d 35 f1 33 00 00 	lea    rsi,[rip+0x33f1]        # dd5c <_IO_stdin_used+0x1d5c>
    a96b:	48 89 c7             	mov    rdi,rax
    a96e:	e8 6d 7b ff ff       	call   24e0 <strncmp@plt>
    a973:	85 c0                	test   eax,eax
    a975:	75 10                	jne    a987 <line_parser+0xec7>
    a977:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a97b:	c7 80 48 03 00 00 01 	mov    DWORD PTR [rax+0x348],0x1
    a982:	00 00 00 
    a985:	eb 27                	jmp    a9ae <line_parser+0xeee>
    a987:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a98b:	ba 09 00 00 00       	mov    edx,0x9
    a990:	48 8d 35 d1 33 00 00 	lea    rsi,[rip+0x33d1]        # dd68 <_IO_stdin_used+0x1d68>
    a997:	48 89 c7             	mov    rdi,rax
    a99a:	e8 41 7b ff ff       	call   24e0 <strncmp@plt>
    a99f:	85 c0                	test   eax,eax
    a9a1:	75 0b                	jne    a9ae <line_parser+0xeee>
    a9a3:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a9a7:	c6 80 48 01 00 00 01 	mov    BYTE PTR [rax+0x148],0x1
    a9ae:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    a9b1:	89 45 90             	mov    DWORD PTR [rbp-0x70],eax
    a9b4:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    a9b8:	48 89 c7             	mov    rdi,rax
    a9bb:	e8 d0 7b ff ff       	call   2590 <strlen@plt>
    a9c0:	48 8d 50 ff          	lea    rdx,[rax-0x1]
    a9c4:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    a9c8:	48 01 d0             	add    rax,rdx
    a9cb:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    a9ce:	3c 29                	cmp    al,0x29
    a9d0:	74 3a                	je     aa0c <line_parser+0xf4c>
    a9d2:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    a9d5:	3b 45 9c             	cmp    eax,DWORD PTR [rbp-0x64]
    a9d8:	7f 0c                	jg     a9e6 <line_parser+0xf26>
    a9da:	8b 45 90             	mov    eax,DWORD PTR [rbp-0x70]
    a9dd:	3b 45 94             	cmp    eax,DWORD PTR [rbp-0x6c]
    a9e0:	0f 8e e9 f1 ff ff    	jle    9bcf <line_parser+0x10f>
    a9e6:	0f b6 45 8f          	movzx  eax,BYTE PTR [rbp-0x71]
    a9ea:	83 f0 01             	xor    eax,0x1
    a9ed:	84 c0                	test   al,al
    a9ef:	74 1c                	je     aa0d <line_parser+0xf4d>
    a9f1:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a9f5:	48 83 c0 20          	add    rax,0x20
    a9f9:	48 b9 55 6e 74 69 74 	movabs rcx,0x64656c7469746e55
    aa00:	6c 65 64 
    aa03:	48 89 08             	mov    QWORD PTR [rax],rcx
    aa06:	c6 40 08 00          	mov    BYTE PTR [rax+0x8],0x0
    aa0a:	eb 01                	jmp    aa0d <line_parser+0xf4d>
    aa0c:	90                   	nop
    aa0d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aa11:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    aa18:	00 00 
    aa1a:	74 05                	je     aa21 <line_parser+0xf61>
    aa1c:	e8 8f 7b ff ff       	call   25b0 <__stack_chk_fail@plt>
    aa21:	c9                   	leave  
    aa22:	c3                   	ret    

000000000000aa23 <rule_processor>:
    aa23:	f3 0f 1e fa          	endbr64 
    aa27:	55                   	push   rbp
    aa28:	48 89 e5             	mov    rbp,rsp
    aa2b:	48 83 ec 10          	sub    rsp,0x10
    aa2f:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    aa36:	eb 22                	jmp    aa5a <rule_processor+0x37>
    aa38:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    aa3b:	48 98                	cdqe   
    aa3d:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    aa44:	48 8d 15 55 66 00 00 	lea    rdx,[rip+0x6655]        # 110a0 <rules>
    aa4b:	48 01 d0             	add    rax,rdx
    aa4e:	48 89 c7             	mov    rdi,rax
    aa51:	e8 13 00 00 00       	call   aa69 <process_rule>
    aa56:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    aa5a:	8b 05 b4 65 00 00    	mov    eax,DWORD PTR [rip+0x65b4]        # 11014 <num_rules>
    aa60:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    aa63:	7e d3                	jle    aa38 <rule_processor+0x15>
    aa65:	90                   	nop
    aa66:	90                   	nop
    aa67:	c9                   	leave  
    aa68:	c3                   	ret    

000000000000aa69 <process_rule>:
    aa69:	f3 0f 1e fa          	endbr64 
    aa6d:	55                   	push   rbp
    aa6e:	48 89 e5             	mov    rbp,rsp
    aa71:	41 57                	push   r15
    aa73:	41 56                	push   r14
    aa75:	41 54                	push   r12
    aa77:	53                   	push   rbx
    aa78:	48 83 ec 40          	sub    rsp,0x40
    aa7c:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    aa80:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    aa87:	00 00 
    aa89:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    aa8d:	31 c0                	xor    eax,eax
    aa8f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    aa93:	0f b6 80 90 02 00 00 	movzx  eax,BYTE PTR [rax+0x290]
    aa9a:	83 f0 01             	xor    eax,0x1
    aa9d:	84 c0                	test   al,al
    aa9f:	0f 84 e0 01 00 00    	je     ac85 <process_rule+0x21c>
    aaa5:	48 89 e0             	mov    rax,rsp
    aaa8:	49 89 c4             	mov    r12,rax
    aaab:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    aaaf:	48 83 c0 40          	add    rax,0x40
    aab3:	48 89 c7             	mov    rdi,rax
    aab6:	e8 d5 7a ff ff       	call   2590 <strlen@plt>
    aabb:	48 83 c0 01          	add    rax,0x1
    aabf:	48 01 c0             	add    rax,rax
    aac2:	48 89 c2             	mov    rdx,rax
    aac5:	48 83 ea 01          	sub    rdx,0x1
    aac9:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    aacd:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    aad1:	48 c7 45 a8 00 00 00 	mov    QWORD PTR [rbp-0x58],0x0
    aad8:	00 
    aad9:	49 89 c6             	mov    r14,rax
    aadc:	41 bf 00 00 00 00    	mov    r15d,0x0
    aae2:	ba 10 00 00 00       	mov    edx,0x10
    aae7:	48 83 ea 01          	sub    rdx,0x1
    aaeb:	48 01 d0             	add    rax,rdx
    aaee:	be 10 00 00 00       	mov    esi,0x10
    aaf3:	ba 00 00 00 00       	mov    edx,0x0
    aaf8:	48 f7 f6             	div    rsi
    aafb:	48 6b c0 10          	imul   rax,rax,0x10
    aaff:	48 89 c2             	mov    rdx,rax
    ab02:	48 81 e2 00 f0 ff ff 	and    rdx,0xfffffffffffff000
    ab09:	48 89 e3             	mov    rbx,rsp
    ab0c:	48 29 d3             	sub    rbx,rdx
    ab0f:	48 89 da             	mov    rdx,rbx
    ab12:	48 39 d4             	cmp    rsp,rdx
    ab15:	74 12                	je     ab29 <process_rule+0xc0>
    ab17:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    ab1e:	48 83 8c 24 f8 0f 00 	or     QWORD PTR [rsp+0xff8],0x0
    ab25:	00 00 
    ab27:	eb e9                	jmp    ab12 <process_rule+0xa9>
    ab29:	48 89 c2             	mov    rdx,rax
    ab2c:	81 e2 ff 0f 00 00    	and    edx,0xfff
    ab32:	48 29 d4             	sub    rsp,rdx
    ab35:	48 89 c2             	mov    rdx,rax
    ab38:	81 e2 ff 0f 00 00    	and    edx,0xfff
    ab3e:	48 85 d2             	test   rdx,rdx
    ab41:	74 10                	je     ab53 <process_rule+0xea>
    ab43:	25 ff 0f 00 00       	and    eax,0xfff
    ab48:	48 83 e8 08          	sub    rax,0x8
    ab4c:	48 01 e0             	add    rax,rsp
    ab4f:	48 83 08 00          	or     QWORD PTR [rax],0x0
    ab53:	48 89 e0             	mov    rax,rsp
    ab56:	48 83 c0 00          	add    rax,0x0
    ab5a:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    ab5e:	c7 45 c0 00 00 00 00 	mov    DWORD PTR [rbp-0x40],0x0
    ab65:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ab69:	48 8d 50 40          	lea    rdx,[rax+0x40]
    ab6d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ab71:	48 05 c8 02 00 00    	add    rax,0x2c8
    ab77:	48 89 d6             	mov    rsi,rdx
    ab7a:	48 89 c7             	mov    rdi,rax
    ab7d:	e8 6e 79 ff ff       	call   24f0 <strcpy@plt>
    ab82:	c7 45 c4 00 00 00 00 	mov    DWORD PTR [rbp-0x3c],0x0
    ab89:	e9 a4 00 00 00       	jmp    ac32 <process_rule+0x1c9>
    ab8e:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    ab92:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    ab95:	48 98                	cdqe   
    ab97:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    ab9c:	3c 7c                	cmp    al,0x7c
    ab9e:	75 18                	jne    abb8 <process_rule+0x14f>
    aba0:	83 7d c0 00          	cmp    DWORD PTR [rbp-0x40],0x0
    aba4:	74 09                	je     abaf <process_rule+0x146>
    aba6:	c7 45 c0 00 00 00 00 	mov    DWORD PTR [rbp-0x40],0x0
    abad:	eb 7f                	jmp    ac2e <process_rule+0x1c5>
    abaf:	c7 45 c0 01 00 00 00 	mov    DWORD PTR [rbp-0x40],0x1
    abb6:	eb 76                	jmp    ac2e <process_rule+0x1c5>
    abb8:	83 7d c0 01          	cmp    DWORD PTR [rbp-0x40],0x1
    abbc:	75 3a                	jne    abf8 <process_rule+0x18f>
    abbe:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    abc2:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    abc5:	48 98                	cdqe   
    abc7:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    abcc:	0f be c0             	movsx  eax,al
    abcf:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
    abd2:	48 63 d2             	movsxd rdx,edx
    abd5:	48 8d 4a ff          	lea    rcx,[rdx-0x1]
    abd9:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    abdd:	48 01 d1             	add    rcx,rdx
    abe0:	89 c2                	mov    edx,eax
    abe2:	48 8d 35 89 31 00 00 	lea    rsi,[rip+0x3189]        # dd72 <_IO_stdin_used+0x1d72>
    abe9:	48 89 cf             	mov    rdi,rcx
    abec:	b8 00 00 00 00       	mov    eax,0x0
    abf1:	e8 7a 7c ff ff       	call   2870 <sprintf@plt>
    abf6:	eb 36                	jmp    ac2e <process_rule+0x1c5>
    abf8:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    abfc:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    abff:	48 98                	cdqe   
    ac01:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    ac06:	0f be c0             	movsx  eax,al
    ac09:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
    ac0c:	01 d2                	add    edx,edx
    ac0e:	48 63 ca             	movsxd rcx,edx
    ac11:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    ac15:	48 01 d1             	add    rcx,rdx
    ac18:	89 c2                	mov    edx,eax
    ac1a:	48 8d 35 54 31 00 00 	lea    rsi,[rip+0x3154]        # dd75 <_IO_stdin_used+0x1d75>
    ac21:	48 89 cf             	mov    rdi,rcx
    ac24:	b8 00 00 00 00       	mov    eax,0x0
    ac29:	e8 42 7c ff ff       	call   2870 <sprintf@plt>
    ac2e:	83 45 c4 01          	add    DWORD PTR [rbp-0x3c],0x1
    ac32:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    ac35:	48 63 d8             	movsxd rbx,eax
    ac38:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ac3c:	48 83 c0 40          	add    rax,0x40
    ac40:	48 89 c7             	mov    rdi,rax
    ac43:	e8 48 79 ff ff       	call   2590 <strlen@plt>
    ac48:	48 39 c3             	cmp    rbx,rax
    ac4b:	0f 82 3d ff ff ff    	jb     ab8e <process_rule+0x125>
    ac51:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ac55:	48 83 c0 40          	add    rax,0x40
    ac59:	ba ff 00 00 00       	mov    edx,0xff
    ac5e:	be 00 00 00 00       	mov    esi,0x0
    ac63:	48 89 c7             	mov    rdi,rax
    ac66:	e8 c5 79 ff ff       	call   2630 <memset@plt>
    ac6b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ac6f:	48 8d 50 40          	lea    rdx,[rax+0x40]
    ac73:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    ac77:	48 89 c6             	mov    rsi,rax
    ac7a:	48 89 d7             	mov    rdi,rdx
    ac7d:	e8 6e 78 ff ff       	call   24f0 <strcpy@plt>
    ac82:	4c 89 e4             	mov    rsp,r12
    ac85:	90                   	nop
    ac86:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ac8a:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    ac91:	00 00 
    ac93:	74 05                	je     ac9a <process_rule+0x231>
    ac95:	e8 16 79 ff ff       	call   25b0 <__stack_chk_fail@plt>
    ac9a:	48 8d 65 e0          	lea    rsp,[rbp-0x20]
    ac9e:	5b                   	pop    rbx
    ac9f:	41 5c                	pop    r12
    aca1:	41 5e                	pop    r14
    aca3:	41 5f                	pop    r15
    aca5:	5d                   	pop    rbp
    aca6:	c3                   	ret    

000000000000aca7 <d_op_parser>:
    aca7:	f3 0f 1e fa          	endbr64 
    acab:	55                   	push   rbp
    acac:	48 89 e5             	mov    rbp,rsp
    acaf:	48 83 ec 20          	sub    rsp,0x20
    acb3:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    acb7:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    acbb:	89 55 ec             	mov    DWORD PTR [rbp-0x14],edx
    acbe:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    acc2:	48 89 c7             	mov    rdi,rax
    acc5:	e8 9c e9 ff ff       	call   9666 <isdigit>
    acca:	84 c0                	test   al,al
    accc:	74 23                	je     acf1 <d_op_parser+0x4a>
    acce:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    acd2:	c7 40 1c a1 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa1
    acd9:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    acdd:	48 89 c7             	mov    rdi,rax
    ace0:	e8 3b 7b ff ff       	call   2820 <atoi@plt>
    ace5:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ace9:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    acec:	e9 5f 01 00 00       	jmp    ae50 <d_op_parser+0x1a9>
    acf1:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    acf5:	0f b6 10             	movzx  edx,BYTE PTR [rax]
    acf8:	0f b6 05 7d 30 00 00 	movzx  eax,BYTE PTR [rip+0x307d]        # dd7c <_IO_stdin_used+0x1d7c>
    acff:	0f b6 d2             	movzx  edx,dl
    ad02:	0f b6 c0             	movzx  eax,al
    ad05:	29 c2                	sub    edx,eax
    ad07:	89 d0                	mov    eax,edx
    ad09:	85 c0                	test   eax,eax
    ad0b:	75 27                	jne    ad34 <d_op_parser+0x8d>
    ad0d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad11:	c7 40 1c a4 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa4
    ad18:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad1c:	48 83 c0 01          	add    rax,0x1
    ad20:	48 89 c7             	mov    rdi,rax
    ad23:	e8 f8 7a ff ff       	call   2820 <atoi@plt>
    ad28:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ad2c:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    ad2f:	e9 1c 01 00 00       	jmp    ae50 <d_op_parser+0x1a9>
    ad34:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad38:	0f b6 10             	movzx  edx,BYTE PTR [rax]
    ad3b:	0f b6 05 3c 30 00 00 	movzx  eax,BYTE PTR [rip+0x303c]        # dd7e <_IO_stdin_used+0x1d7e>
    ad42:	0f b6 d2             	movzx  edx,dl
    ad45:	0f b6 c0             	movzx  eax,al
    ad48:	29 c2                	sub    edx,eax
    ad4a:	89 d0                	mov    eax,edx
    ad4c:	85 c0                	test   eax,eax
    ad4e:	75 27                	jne    ad77 <d_op_parser+0xd0>
    ad50:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad54:	c7 40 1c a2 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa2
    ad5b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad5f:	48 83 c0 01          	add    rax,0x1
    ad63:	48 89 c7             	mov    rdi,rax
    ad66:	e8 b5 7a ff ff       	call   2820 <atoi@plt>
    ad6b:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ad6f:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    ad72:	e9 d9 00 00 00       	jmp    ae50 <d_op_parser+0x1a9>
    ad77:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad7b:	0f b6 10             	movzx  edx,BYTE PTR [rax]
    ad7e:	0f b6 05 fb 2f 00 00 	movzx  eax,BYTE PTR [rip+0x2ffb]        # dd80 <_IO_stdin_used+0x1d80>
    ad85:	0f b6 d2             	movzx  edx,dl
    ad88:	0f b6 c0             	movzx  eax,al
    ad8b:	29 c2                	sub    edx,eax
    ad8d:	89 d0                	mov    eax,edx
    ad8f:	85 c0                	test   eax,eax
    ad91:	75 27                	jne    adba <d_op_parser+0x113>
    ad93:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad97:	c7 40 1c a6 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa6
    ad9e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ada2:	48 83 c0 01          	add    rax,0x1
    ada6:	48 89 c7             	mov    rdi,rax
    ada9:	e8 72 7a ff ff       	call   2820 <atoi@plt>
    adae:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    adb2:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    adb5:	e9 96 00 00 00       	jmp    ae50 <d_op_parser+0x1a9>
    adba:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    adbe:	ba 02 00 00 00       	mov    edx,0x2
    adc3:	48 8d 35 b8 2f 00 00 	lea    rsi,[rip+0x2fb8]        # dd82 <_IO_stdin_used+0x1d82>
    adca:	48 89 c7             	mov    rdi,rax
    adcd:	e8 0e 77 ff ff       	call   24e0 <strncmp@plt>
    add2:	85 c0                	test   eax,eax
    add4:	75 24                	jne    adfa <d_op_parser+0x153>
    add6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    adda:	c7 40 1c a3 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa3
    ade1:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ade5:	48 83 c0 02          	add    rax,0x2
    ade9:	48 89 c7             	mov    rdi,rax
    adec:	e8 2f 7a ff ff       	call   2820 <atoi@plt>
    adf1:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    adf5:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    adf8:	eb 56                	jmp    ae50 <d_op_parser+0x1a9>
    adfa:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    adfe:	ba 02 00 00 00       	mov    edx,0x2
    ae03:	48 8d 35 7b 2f 00 00 	lea    rsi,[rip+0x2f7b]        # dd85 <_IO_stdin_used+0x1d85>
    ae0a:	48 89 c7             	mov    rdi,rax
    ae0d:	e8 ce 76 ff ff       	call   24e0 <strncmp@plt>
    ae12:	85 c0                	test   eax,eax
    ae14:	75 24                	jne    ae3a <d_op_parser+0x193>
    ae16:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae1a:	c7 40 1c a5 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa5
    ae21:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ae25:	48 83 c0 02          	add    rax,0x2
    ae29:	48 89 c7             	mov    rdi,rax
    ae2c:	e8 ef 79 ff ff       	call   2820 <atoi@plt>
    ae31:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ae35:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    ae38:	eb 16                	jmp    ae50 <d_op_parser+0x1a9>
    ae3a:	48 8d 3d 47 2f 00 00 	lea    rdi,[rip+0x2f47]        # dd88 <_IO_stdin_used+0x1d88>
    ae41:	e8 da 76 ff ff       	call   2520 <puts@plt>
    ae46:	bf ff ff ff ff       	mov    edi,0xffffffff
    ae4b:	e8 30 7a ff ff       	call   2880 <exit@plt>
    ae50:	c9                   	leave  
    ae51:	c3                   	ret    

000000000000ae52 <d_engine>:
    ae52:	f3 0f 1e fa          	endbr64 
    ae56:	55                   	push   rbp
    ae57:	48 89 e5             	mov    rbp,rsp
    ae5a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    ae5e:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    ae62:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae66:	8b 40 1c             	mov    eax,DWORD PTR [rax+0x1c]
    ae69:	83 f8 ff             	cmp    eax,0xffffffff
    ae6c:	75 0a                	jne    ae78 <d_engine+0x26>
    ae6e:	b8 01 00 00 00       	mov    eax,0x1
    ae73:	e9 ea 00 00 00       	jmp    af62 <d_engine+0x110>
    ae78:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae7c:	8b 40 1c             	mov    eax,DWORD PTR [rax+0x1c]
    ae7f:	2d a1 00 00 00       	sub    eax,0xa1
    ae84:	83 f8 05             	cmp    eax,0x5
    ae87:	0f 87 d0 00 00 00    	ja     af5d <d_engine+0x10b>
    ae8d:	89 c0                	mov    eax,eax
    ae8f:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    ae96:	00 
    ae97:	48 8d 05 02 2f 00 00 	lea    rax,[rip+0x2f02]        # dda0 <_IO_stdin_used+0x1da0>
    ae9e:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    aea1:	48 98                	cdqe   
    aea3:	48 8d 15 f6 2e 00 00 	lea    rdx,[rip+0x2ef6]        # dda0 <_IO_stdin_used+0x1da0>
    aeaa:	48 01 d0             	add    rax,rdx
    aead:	3e ff e0             	notrack jmp rax
    aeb0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aeb4:	8b 50 18             	mov    edx,DWORD PTR [rax+0x18]
    aeb7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    aebb:	8b 40 34             	mov    eax,DWORD PTR [rax+0x34]
    aebe:	39 c2                	cmp    edx,eax
    aec0:	0f 85 87 00 00 00    	jne    af4d <d_engine+0xfb>
    aec6:	b8 01 00 00 00       	mov    eax,0x1
    aecb:	e9 92 00 00 00       	jmp    af62 <d_engine+0x110>
    aed0:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    aed4:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    aed7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aedb:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    aede:	39 c2                	cmp    edx,eax
    aee0:	76 6e                	jbe    af50 <d_engine+0xfe>
    aee2:	b8 01 00 00 00       	mov    eax,0x1
    aee7:	eb 79                	jmp    af62 <d_engine+0x110>
    aee9:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    aeed:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    aef0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aef4:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    aef7:	39 c2                	cmp    edx,eax
    aef9:	72 58                	jb     af53 <d_engine+0x101>
    aefb:	b8 01 00 00 00       	mov    eax,0x1
    af00:	eb 60                	jmp    af62 <d_engine+0x110>
    af02:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    af06:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    af09:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    af0d:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    af10:	39 c2                	cmp    edx,eax
    af12:	73 42                	jae    af56 <d_engine+0x104>
    af14:	b8 01 00 00 00       	mov    eax,0x1
    af19:	eb 47                	jmp    af62 <d_engine+0x110>
    af1b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    af1f:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    af22:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    af26:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    af29:	39 c2                	cmp    edx,eax
    af2b:	77 2c                	ja     af59 <d_engine+0x107>
    af2d:	b8 01 00 00 00       	mov    eax,0x1
    af32:	eb 2e                	jmp    af62 <d_engine+0x110>
    af34:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    af38:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    af3b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    af3f:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    af42:	39 c2                	cmp    edx,eax
    af44:	74 16                	je     af5c <d_engine+0x10a>
    af46:	b8 01 00 00 00       	mov    eax,0x1
    af4b:	eb 15                	jmp    af62 <d_engine+0x110>
    af4d:	90                   	nop
    af4e:	eb 0d                	jmp    af5d <d_engine+0x10b>
    af50:	90                   	nop
    af51:	eb 0a                	jmp    af5d <d_engine+0x10b>
    af53:	90                   	nop
    af54:	eb 07                	jmp    af5d <d_engine+0x10b>
    af56:	90                   	nop
    af57:	eb 04                	jmp    af5d <d_engine+0x10b>
    af59:	90                   	nop
    af5a:	eb 01                	jmp    af5d <d_engine+0x10b>
    af5c:	90                   	nop
    af5d:	b8 00 00 00 00       	mov    eax,0x0
    af62:	5d                   	pop    rbp
    af63:	c3                   	ret    

000000000000af64 <homenet_toi>:
    af64:	f3 0f 1e fa          	endbr64 
    af68:	55                   	push   rbp
    af69:	48 89 e5             	mov    rbp,rsp
    af6c:	53                   	push   rbx
    af6d:	48 83 ec 38          	sub    rsp,0x38
    af71:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    af75:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    af7c:	00 00 
    af7e:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    af82:	31 c0                	xor    eax,eax
    af84:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    af88:	48 8d 35 29 2e 00 00 	lea    rsi,[rip+0x2e29]        # ddb8 <_IO_stdin_used+0x1db8>
    af8f:	48 89 c7             	mov    rdi,rax
    af92:	e8 39 78 ff ff       	call   27d0 <strtok@plt>
    af97:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    af9b:	eb 4c                	jmp    afe9 <homenet_toi+0x85>
    af9d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    afa1:	48 89 c7             	mov    rdi,rax
    afa4:	e8 77 78 ff ff       	call   2820 <atoi@plt>
    afa9:	89 c3                	mov    ebx,eax
    afab:	48 8d 45 df          	lea    rax,[rbp-0x21]
    afaf:	48 89 c7             	mov    rdi,rax
    afb2:	e8 d9 75 ff ff       	call   2590 <strlen@plt>
    afb7:	48 8d 55 df          	lea    rdx,[rbp-0x21]
    afbb:	48 01 d0             	add    rax,rdx
    afbe:	89 da                	mov    edx,ebx
    afc0:	48 8d 35 f3 2d 00 00 	lea    rsi,[rip+0x2df3]        # ddba <_IO_stdin_used+0x1dba>
    afc7:	48 89 c7             	mov    rdi,rax
    afca:	b8 00 00 00 00       	mov    eax,0x0
    afcf:	e8 9c 78 ff ff       	call   2870 <sprintf@plt>
    afd4:	48 8d 35 dd 2d 00 00 	lea    rsi,[rip+0x2ddd]        # ddb8 <_IO_stdin_used+0x1db8>
    afdb:	bf 00 00 00 00       	mov    edi,0x0
    afe0:	e8 eb 77 ff ff       	call   27d0 <strtok@plt>
    afe5:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    afe9:	48 83 7d d0 00       	cmp    QWORD PTR [rbp-0x30],0x0
    afee:	75 ad                	jne    af9d <homenet_toi+0x39>
    aff0:	48 8d 45 df          	lea    rax,[rbp-0x21]
    aff4:	ba 10 00 00 00       	mov    edx,0x10
    aff9:	be 00 00 00 00       	mov    esi,0x0
    affe:	48 89 c7             	mov    rdi,rax
    b001:	e8 da 76 ff ff       	call   26e0 <strtol@plt>
    b006:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    b00a:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
    b011:	00 00 
    b013:	74 05                	je     b01a <homenet_toi+0xb6>
    b015:	e8 96 75 ff ff       	call   25b0 <__stack_chk_fail@plt>
    b01a:	48 83 c4 38          	add    rsp,0x38
    b01e:	5b                   	pop    rbx
    b01f:	5d                   	pop    rbp
    b020:	c3                   	ret    

000000000000b021 <tcp_check_sum_passed>:
    b021:	f3 0f 1e fa          	endbr64 
    b025:	55                   	push   rbp
    b026:	48 89 e5             	mov    rbp,rsp
    b029:	41 54                	push   r12
    b02b:	53                   	push   rbx
    b02c:	48 83 ec 30          	sub    rsp,0x30
    b030:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    b034:	48 89 75 c0          	mov    QWORD PTR [rbp-0x40],rsi
    b038:	bb 00 00 00 00       	mov    ebx,0x0
    b03d:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    b041:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    b045:	0f b7 c0             	movzx  eax,ax
    b048:	89 c7                	mov    edi,eax
    b04a:	e8 31 77 ff ff       	call   2780 <ntohs@plt>
    b04f:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    b053:	0f b6 12             	movzx  edx,BYTE PTR [rdx]
    b056:	83 e2 0f             	and    edx,0xf
    b059:	0f b6 d2             	movzx  edx,dl
    b05c:	c1 e2 02             	shl    edx,0x2
    b05f:	29 d0                	sub    eax,edx
    b061:	66 89 45 de          	mov    WORD PTR [rbp-0x22],ax
    b065:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b069:	0f b7 40 10          	movzx  eax,WORD PTR [rax+0x10]
    b06d:	0f b7 c0             	movzx  eax,ax
    b070:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    b074:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b078:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    b07c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b080:	66 c7 40 10 00 00    	mov    WORD PTR [rax+0x10],0x0
    b086:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    b08a:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    b08d:	c1 e8 10             	shr    eax,0x10
    b090:	89 c0                	mov    eax,eax
    b092:	0f b7 c0             	movzx  eax,ax
    b095:	48 01 c3             	add    rbx,rax
    b098:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    b09c:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    b09f:	89 c0                	mov    eax,eax
    b0a1:	0f b7 c0             	movzx  eax,ax
    b0a4:	48 01 c3             	add    rbx,rax
    b0a7:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    b0ab:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    b0ae:	c1 e8 10             	shr    eax,0x10
    b0b1:	89 c0                	mov    eax,eax
    b0b3:	0f b7 c0             	movzx  eax,ax
    b0b6:	48 01 c3             	add    rbx,rax
    b0b9:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    b0bd:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    b0c0:	89 c0                	mov    eax,eax
    b0c2:	0f b7 c0             	movzx  eax,ax
    b0c5:	48 01 c3             	add    rbx,rax
    b0c8:	bf 06 00 00 00       	mov    edi,0x6
    b0cd:	e8 ee 74 ff ff       	call   25c0 <htons@plt>
    b0d2:	0f b7 c0             	movzx  eax,ax
    b0d5:	48 01 c3             	add    rbx,rax
    b0d8:	0f b7 45 de          	movzx  eax,WORD PTR [rbp-0x22]
    b0dc:	89 c7                	mov    edi,eax
    b0de:	e8 dd 74 ff ff       	call   25c0 <htons@plt>
    b0e3:	0f b7 c0             	movzx  eax,ax
    b0e6:	48 01 c3             	add    rbx,rax
    b0e9:	eb 1a                	jmp    b105 <tcp_check_sum_passed+0xe4>
    b0eb:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b0ef:	48 8d 50 14          	lea    rdx,[rax+0x14]
    b0f3:	48 89 55 c0          	mov    QWORD PTR [rbp-0x40],rdx
    b0f7:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b0fa:	0f b6 c0             	movzx  eax,al
    b0fd:	48 01 c3             	add    rbx,rax
    b100:	66 83 6d de 02       	sub    WORD PTR [rbp-0x22],0x2
    b105:	66 83 7d de 01       	cmp    WORD PTR [rbp-0x22],0x1
    b10a:	77 df                	ja     b0eb <tcp_check_sum_passed+0xca>
    b10c:	66 83 7d de 00       	cmp    WORD PTR [rbp-0x22],0x0
    b111:	74 1d                	je     b130 <tcp_check_sum_passed+0x10f>
    b113:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b117:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b11a:	0f b6 c0             	movzx  eax,al
    b11d:	48 01 c3             	add    rbx,rax
    b120:	eb 0e                	jmp    b130 <tcp_check_sum_passed+0x10f>
    b122:	0f b7 c3             	movzx  eax,bx
    b125:	48 c1 eb 10          	shr    rbx,0x10
    b129:	48 89 da             	mov    rdx,rbx
    b12c:	48 8d 1c 10          	lea    rbx,[rax+rdx*1]
    b130:	48 89 d8             	mov    rax,rbx
    b133:	48 c1 e8 10          	shr    rax,0x10
    b137:	48 85 c0             	test   rax,rax
    b13a:	75 e6                	jne    b122 <tcp_check_sum_passed+0x101>
    b13c:	48 f7 d3             	not    rbx
    b13f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b143:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    b147:	66 89 50 10          	mov    WORD PTR [rax+0x10],dx
    b14b:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b14f:	0f b7 40 10          	movzx  eax,WORD PTR [rax+0x10]
    b153:	0f b7 c0             	movzx  eax,ax
    b156:	89 c7                	mov    edi,eax
    b158:	e8 23 76 ff ff       	call   2780 <ntohs@plt>
    b15d:	44 0f b7 e0          	movzx  r12d,ax
    b161:	89 d8                	mov    eax,ebx
    b163:	0f b7 c0             	movzx  eax,ax
    b166:	89 c7                	mov    edi,eax
    b168:	e8 13 76 ff ff       	call   2780 <ntohs@plt>
    b16d:	0f b7 c0             	movzx  eax,ax
    b170:	44 89 e2             	mov    edx,r12d
    b173:	89 c6                	mov    esi,eax
    b175:	48 8d 3d 43 2c 00 00 	lea    rdi,[rip+0x2c43]        # ddbf <_IO_stdin_used+0x1dbf>
    b17c:	b8 00 00 00 00       	mov    eax,0x0
    b181:	e8 6a 74 ff ff       	call   25f0 <printf@plt>
    b186:	89 d8                	mov    eax,ebx
    b188:	0f b7 c0             	movzx  eax,ax
    b18b:	89 c7                	mov    edi,eax
    b18d:	e8 ee 75 ff ff       	call   2780 <ntohs@plt>
    b192:	89 c3                	mov    ebx,eax
    b194:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    b198:	0f b7 c0             	movzx  eax,ax
    b19b:	89 c7                	mov    edi,eax
    b19d:	e8 de 75 ff ff       	call   2780 <ntohs@plt>
    b1a2:	66 39 c3             	cmp    bx,ax
    b1a5:	75 07                	jne    b1ae <tcp_check_sum_passed+0x18d>
    b1a7:	b8 01 00 00 00       	mov    eax,0x1
    b1ac:	eb 05                	jmp    b1b3 <tcp_check_sum_passed+0x192>
    b1ae:	b8 00 00 00 00       	mov    eax,0x0
    b1b3:	48 83 c4 30          	add    rsp,0x30
    b1b7:	5b                   	pop    rbx
    b1b8:	41 5c                	pop    r12
    b1ba:	5d                   	pop    rbp
    b1bb:	c3                   	ret    

000000000000b1bc <run_hello_script>:
    b1bc:	f3 0f 1e fa          	endbr64 
    b1c0:	55                   	push   rbp
    b1c1:	48 89 e5             	mov    rbp,rsp
    b1c4:	48 83 ec 10          	sub    rsp,0x10
    b1c8:	e8 53 75 ff ff       	call   2720 <luaL_newstate@plt>
    b1cd:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b1d1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b1d5:	48 89 c7             	mov    rdi,rax
    b1d8:	e8 13 76 ff ff       	call   27f0 <luaL_openlibs@plt>
    b1dd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b1e1:	ba 00 00 00 00       	mov    edx,0x0
    b1e6:	48 8d 35 e3 2b 00 00 	lea    rsi,[rip+0x2be3]        # ddd0 <_IO_stdin_used+0x1dd0>
    b1ed:	48 89 c7             	mov    rdi,rax
    b1f0:	e8 9b 75 ff ff       	call   2790 <luaL_loadfilex@plt>
    b1f5:	85 c0                	test   eax,eax
    b1f7:	75 2b                	jne    b224 <run_hello_script+0x68>
    b1f9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b1fd:	41 b9 00 00 00 00    	mov    r9d,0x0
    b203:	41 b8 00 00 00 00    	mov    r8d,0x0
    b209:	b9 00 00 00 00       	mov    ecx,0x0
    b20e:	ba ff ff ff ff       	mov    edx,0xffffffff
    b213:	be 00 00 00 00       	mov    esi,0x0
    b218:	48 89 c7             	mov    rdi,rax
    b21b:	e8 40 75 ff ff       	call   2760 <lua_pcallk@plt>
    b220:	85 c0                	test   eax,eax
    b222:	74 07                	je     b22b <run_hello_script+0x6f>
    b224:	b8 01 00 00 00       	mov    eax,0x1
    b229:	eb 05                	jmp    b230 <run_hello_script+0x74>
    b22b:	b8 00 00 00 00       	mov    eax,0x0
    b230:	85 c0                	test   eax,eax
    b232:	75 1e                	jne    b252 <run_hello_script+0x96>
    b234:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b238:	48 89 c7             	mov    rdi,rax
    b23b:	e8 d0 72 ff ff       	call   2510 <lua_gettop@plt>
    b240:	f7 d0                	not    eax
    b242:	89 c2                	mov    edx,eax
    b244:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b248:	89 d6                	mov    esi,edx
    b24a:	48 89 c7             	mov    rdi,rax
    b24d:	e8 ae 72 ff ff       	call   2500 <lua_settop@plt>
    b252:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b256:	48 89 c7             	mov    rdi,rax
    b259:	e8 32 74 ff ff       	call   2690 <lua_close@plt>
    b25e:	90                   	nop
    b25f:	c9                   	leave  
    b260:	c3                   	ret    

000000000000b261 <collect_scripts>:
    b261:	f3 0f 1e fa          	endbr64 
    b265:	55                   	push   rbp
    b266:	48 89 e5             	mov    rbp,rsp
    b269:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    b270:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b277:	00 00 
    b279:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b27d:	31 c0                	xor    eax,eax
    b27f:	48 8d 35 68 2b 00 00 	lea    rsi,[rip+0x2b68]        # ddee <_IO_stdin_used+0x1dee>
    b286:	48 8d 3d 63 2b 00 00 	lea    rdi,[rip+0x2b63]        # ddf0 <_IO_stdin_used+0x1df0>
    b28d:	e8 1e 75 ff ff       	call   27b0 <fopen@plt>
    b292:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
    b296:	48 83 7d 80 00       	cmp    QWORD PTR [rbp-0x80],0x0
    b29b:	75 16                	jne    b2b3 <collect_scripts+0x52>
    b29d:	48 8d 3d 64 2b 00 00 	lea    rdi,[rip+0x2b64]        # de08 <_IO_stdin_used+0x1e08>
    b2a4:	e8 77 72 ff ff       	call   2520 <puts@plt>
    b2a9:	bf ff ff ff ff       	mov    edi,0xffffffff
    b2ae:	e8 cd 75 ff ff       	call   2880 <exit@plt>
    b2b3:	48 c7 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],0x0
    b2ba:	00 00 00 00 
    b2be:	48 8d 45 90          	lea    rax,[rbp-0x70]
    b2c2:	ba 00 00 00 00       	mov    edx,0x0
    b2c7:	48 8d 35 7c 2b 00 00 	lea    rsi,[rip+0x2b7c]        # de4a <_IO_stdin_used+0x1e4a>
    b2ce:	48 89 c7             	mov    rdi,rax
    b2d1:	e8 8a 73 ff ff       	call   2660 <regcomp@plt>
    b2d6:	e9 86 00 00 00       	jmp    b361 <collect_scripts+0x100>
    b2db:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b2e2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b2e5:	3c 23                	cmp    al,0x23
    b2e7:	75 02                	jne    b2eb <collect_scripts+0x8a>
    b2e9:	eb 76                	jmp    b361 <collect_scripts+0x100>
    b2eb:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b2f2:	ba 0e 00 00 00       	mov    edx,0xe
    b2f7:	48 8d 35 56 2b 00 00 	lea    rsi,[rip+0x2b56]        # de54 <_IO_stdin_used+0x1e54>
    b2fe:	48 89 c7             	mov    rdi,rax
    b301:	e8 da 71 ff ff       	call   24e0 <strncmp@plt>
    b306:	85 c0                	test   eax,eax
    b308:	75 34                	jne    b33e <collect_scripts+0xdd>
    b30a:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b311:	48 8d 50 0e          	lea    rdx,[rax+0xe]
    b315:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b319:	48 89 d6             	mov    rsi,rdx
    b31c:	48 89 c7             	mov    rdi,rax
    b31f:	e8 cc 71 ff ff       	call   24f0 <strcpy@plt>
    b324:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b328:	48 8d 35 34 2b 00 00 	lea    rsi,[rip+0x2b34]        # de63 <_IO_stdin_used+0x1e63>
    b32f:	48 89 c7             	mov    rdi,rax
    b332:	e8 39 73 ff ff       	call   2670 <strcspn@plt>
    b337:	c6 44 05 d0 00       	mov    BYTE PTR [rbp+rax*1-0x30],0x0
    b33c:	eb 23                	jmp    b361 <collect_scripts+0x100>
    b33e:	48 8b b5 78 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x88]
    b345:	48 8d 45 90          	lea    rax,[rbp-0x70]
    b349:	41 b8 00 00 00 00    	mov    r8d,0x0
    b34f:	b9 00 00 00 00       	mov    ecx,0x0
    b354:	ba 00 00 00 00       	mov    edx,0x0
    b359:	48 89 c7             	mov    rdi,rax
    b35c:	e8 0f 74 ff ff       	call   2770 <regexec@plt>
    b361:	48 8b 55 80          	mov    rdx,QWORD PTR [rbp-0x80]
    b365:	48 8d 8d 70 ff ff ff 	lea    rcx,[rbp-0x90]
    b36c:	48 8d 85 78 ff ff ff 	lea    rax,[rbp-0x88]
    b373:	48 89 ce             	mov    rsi,rcx
    b376:	48 89 c7             	mov    rdi,rax
    b379:	e8 b2 74 ff ff       	call   2830 <getline@plt>
    b37e:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    b382:	48 83 7d 88 ff       	cmp    QWORD PTR [rbp-0x78],0xffffffffffffffff
    b387:	0f 85 4e ff ff ff    	jne    b2db <collect_scripts+0x7a>
    b38d:	90                   	nop
    b38e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b392:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    b399:	00 00 
    b39b:	74 05                	je     b3a2 <collect_scripts+0x141>
    b39d:	e8 0e 72 ff ff       	call   25b0 <__stack_chk_fail@plt>
    b3a2:	c9                   	leave  
    b3a3:	c3                   	ret    

000000000000b3a4 <ip6decode>:
    b3a4:	f3 0f 1e fa          	endbr64 
    b3a8:	55                   	push   rbp
    b3a9:	48 89 e5             	mov    rbp,rsp
    b3ac:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    b3b3:	48 89 bd 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdi
    b3ba:	48 89 b5 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rsi
    b3c1:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b3c8:	00 00 
    b3ca:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b3ce:	31 c0                	xor    eax,eax
    b3d0:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b3d7:	48 83 c0 0e          	add    rax,0xe
    b3db:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    b3df:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    b3e3:	48 83 c0 08          	add    rax,0x8
    b3e7:	48 89 c7             	mov    rdi,rax
    b3ea:	e8 ef 7d ff ff       	call   31de <inet6_ntoa>
    b3ef:	48 89 c1             	mov    rcx,rax
    b3f2:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b3f6:	ba 29 00 00 00       	mov    edx,0x29
    b3fb:	48 89 ce             	mov    rsi,rcx
    b3fe:	48 89 c7             	mov    rdi,rax
    b401:	e8 ca 70 ff ff       	call   24d0 <strncpy@plt>
    b406:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    b40a:	48 83 c0 18          	add    rax,0x18
    b40e:	48 89 c7             	mov    rdi,rax
    b411:	e8 c8 7d ff ff       	call   31de <inet6_ntoa>
    b416:	48 89 c1             	mov    rcx,rax
    b419:	48 8d 45 90          	lea    rax,[rbp-0x70]
    b41d:	ba 29 00 00 00       	mov    edx,0x29
    b422:	48 89 ce             	mov    rsi,rcx
    b425:	48 89 c7             	mov    rdi,rax
    b428:	e8 a3 70 ff ff       	call   24d0 <strncpy@plt>
    b42d:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    b431:	0f b6 40 06          	movzx  eax,BYTE PTR [rax+0x6]
    b435:	0f b6 c0             	movzx  eax,al
    b438:	85 c0                	test   eax,eax
    b43a:	75 1c                	jne    b458 <ip6decode+0xb4>
    b43c:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    b440:	48 8d 4d c0          	lea    rcx,[rbp-0x40]
    b444:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b44b:	48 89 ce             	mov    rsi,rcx
    b44e:	48 89 c7             	mov    rdi,rax
    b451:	e8 24 86 ff ff       	call   3a7a <ip6_icmp_decode>
    b456:	eb 28                	jmp    b480 <ip6decode+0xdc>
    b458:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    b45c:	0f b6 40 06          	movzx  eax,BYTE PTR [rax+0x6]
    b460:	0f b6 c8             	movzx  ecx,al
    b463:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    b467:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b46b:	48 89 c6             	mov    rsi,rax
    b46e:	48 8d 3d f3 29 00 00 	lea    rdi,[rip+0x29f3]        # de68 <_IO_stdin_used+0x1e68>
    b475:	b8 00 00 00 00       	mov    eax,0x0
    b47a:	e8 71 71 ff ff       	call   25f0 <printf@plt>
    b47f:	90                   	nop
    b480:	90                   	nop
    b481:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b485:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    b48c:	00 00 
    b48e:	74 05                	je     b495 <ip6decode+0xf1>
    b490:	e8 1b 71 ff ff       	call   25b0 <__stack_chk_fail@plt>
    b495:	c9                   	leave  
    b496:	c3                   	ret    

000000000000b497 <print_mem_map>:
    b497:	f3 0f 1e fa          	endbr64 
    b49b:	55                   	push   rbp
    b49c:	48 89 e5             	mov    rbp,rsp
    b49f:	48 83 ec 10          	sub    rsp,0x10
    b4a3:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    b4aa:	eb 4c                	jmp    b4f8 <print_mem_map+0x61>
    b4ac:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    b4af:	48 63 d0             	movsxd rdx,eax
    b4b2:	48 89 d0             	mov    rax,rdx
    b4b5:	48 c1 e0 02          	shl    rax,0x2
    b4b9:	48 01 d0             	add    rax,rdx
    b4bc:	48 c1 e0 03          	shl    rax,0x3
    b4c0:	48 8d 15 79 d7 12 00 	lea    rdx,[rip+0x12d779]        # 138c40 <fn_mem_map>
    b4c7:	48 01 d0             	add    rax,rdx
    b4ca:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b4ce:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b4d2:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    b4d5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b4d9:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    b4dc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b4e0:	48 89 c6             	mov    rsi,rax
    b4e3:	48 8d 3d a6 29 00 00 	lea    rdi,[rip+0x29a6]        # de90 <_IO_stdin_used+0x1e90>
    b4ea:	b8 00 00 00 00       	mov    eax,0x0
    b4ef:	e8 fc 70 ff ff       	call   25f0 <printf@plt>
    b4f4:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    b4f8:	8b 05 aa c3 0f 00    	mov    eax,DWORD PTR [rip+0xfc3aa]        # 1078a8 <fn_num>
    b4fe:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    b501:	7c a9                	jl     b4ac <print_mem_map+0x15>
    b503:	90                   	nop
    b504:	90                   	nop
    b505:	c9                   	leave  
    b506:	c3                   	ret    

000000000000b507 <crash_handler>:
    b507:	f3 0f 1e fa          	endbr64 
    b50b:	55                   	push   rbp
    b50c:	48 89 e5             	mov    rbp,rsp
    b50f:	41 54                	push   r12
    b511:	53                   	push   rbx
    b512:	48 81 ec f0 00 00 00 	sub    rsp,0xf0
    b519:	89 bd 0c ff ff ff    	mov    DWORD PTR [rbp-0xf4],edi
    b51f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b526:	00 00 
    b528:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    b52c:	31 c0                	xor    eax,eax
    b52e:	48 8d 85 30 ff ff ff 	lea    rax,[rbp-0xd0]
    b535:	be 14 00 00 00       	mov    esi,0x14
    b53a:	48 89 c7             	mov    rdi,rax
    b53d:	e8 5e 70 ff ff       	call   25a0 <backtrace@plt>
    b542:	89 85 18 ff ff ff    	mov    DWORD PTR [rbp-0xe8],eax
    b548:	8b 95 18 ff ff ff    	mov    edx,DWORD PTR [rbp-0xe8]
    b54e:	48 8d 85 30 ff ff ff 	lea    rax,[rbp-0xd0]
    b555:	89 d6                	mov    esi,edx
    b557:	48 89 c7             	mov    rdi,rax
    b55a:	e8 e1 6f ff ff       	call   2540 <backtrace_symbols@plt>
    b55f:	48 89 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rax
    b566:	b8 00 00 00 00       	mov    eax,0x0
    b56b:	e8 3a 7e ff ff       	call   33aa <get_formated_time>
    b570:	48 89 c6             	mov    rsi,rax
    b573:	48 8d 3d 36 29 00 00 	lea    rdi,[rip+0x2936]        # deb0 <_IO_stdin_used+0x1eb0>
    b57a:	b8 00 00 00 00       	mov    eax,0x0
    b57f:	e8 6c 70 ff ff       	call   25f0 <printf@plt>
    b584:	48 8d 3d 54 29 00 00 	lea    rdi,[rip+0x2954]        # dedf <_IO_stdin_used+0x1edf>
    b58b:	e8 90 6f ff ff       	call   2520 <puts@plt>
    b590:	48 83 bd 20 ff ff ff 	cmp    QWORD PTR [rbp-0xe0],0x0
    b597:	00 
    b598:	0f 84 6d 01 00 00    	je     b70b <crash_handler+0x204>
    b59e:	c7 85 14 ff ff ff 00 	mov    DWORD PTR [rbp-0xec],0x0
    b5a5:	00 00 00 
    b5a8:	e9 4c 01 00 00       	jmp    b6f9 <crash_handler+0x1f2>
    b5ad:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b5b3:	48 98                	cdqe   
    b5b5:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    b5bc:	00 
    b5bd:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b5c4:	48 01 d0             	add    rax,rdx
    b5c7:	48 8b 00             	mov    rax,QWORD PTR [rax]
    b5ca:	48 8d 35 22 29 00 00 	lea    rsi,[rip+0x2922]        # def3 <_IO_stdin_used+0x1ef3>
    b5d1:	48 89 c7             	mov    rdi,rax
    b5d4:	e8 e7 72 ff ff       	call   28c0 <strstr@plt>
    b5d9:	48 85 c0             	test   rax,rax
    b5dc:	0f 85 0f 01 00 00    	jne    b6f1 <crash_handler+0x1ea>
    b5e2:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b5e8:	48 98                	cdqe   
    b5ea:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    b5f1:	00 
    b5f2:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b5f9:	48 01 d0             	add    rax,rdx
    b5fc:	4c 8b 20             	mov    r12,QWORD PTR [rax]
    b5ff:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b605:	48 98                	cdqe   
    b607:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    b60e:	00 
    b60f:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b616:	48 01 d0             	add    rax,rdx
    b619:	48 8b 00             	mov    rax,QWORD PTR [rax]
    b61c:	be 2b 00 00 00       	mov    esi,0x2b
    b621:	48 89 c7             	mov    rdi,rax
    b624:	e8 1c 7f ff ff       	call   3545 <strloc>
    b629:	48 98                	cdqe   
    b62b:	48 83 c0 01          	add    rax,0x1
    b62f:	49 8d 14 04          	lea    rdx,[r12+rax*1]
    b633:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b637:	48 8d 35 b9 28 00 00 	lea    rsi,[rip+0x28b9]        # def7 <_IO_stdin_used+0x1ef7>
    b63e:	48 89 c7             	mov    rdi,rax
    b641:	b8 00 00 00 00       	mov    eax,0x0
    b646:	e8 25 72 ff ff       	call   2870 <sprintf@plt>
    b64b:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b64f:	be 29 00 00 00       	mov    esi,0x29
    b654:	48 89 c7             	mov    rdi,rax
    b657:	e8 e9 7e ff ff       	call   3545 <strloc>
    b65c:	48 98                	cdqe   
    b65e:	c6 44 05 d0 00       	mov    BYTE PTR [rbp+rax*1-0x30],0x0
    b663:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b667:	ba 10 00 00 00       	mov    edx,0x10
    b66c:	be 00 00 00 00       	mov    esi,0x0
    b671:	48 89 c7             	mov    rdi,rax
    b674:	e8 67 70 ff ff       	call   26e0 <strtol@plt>
    b679:	89 85 1c ff ff ff    	mov    DWORD PTR [rbp-0xe4],eax
    b67f:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [rbp-0xe4]
    b685:	89 c7                	mov    edi,eax
    b687:	e8 20 01 00 00       	call   b7ac <offset_search>
    b68c:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
    b693:	83 bd 1c ff ff ff 00 	cmp    DWORD PTR [rbp-0xe4],0x0
    b69a:	74 3a                	je     b6d6 <crash_handler+0x1cf>
    b69c:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    b6a3:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    b6a6:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    b6ad:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    b6b0:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    b6b7:	8b b5 1c ff ff ff    	mov    esi,DWORD PTR [rbp-0xe4]
    b6bd:	41 89 f0             	mov    r8d,esi
    b6c0:	48 89 c6             	mov    rsi,rax
    b6c3:	48 8d 3d 36 28 00 00 	lea    rdi,[rip+0x2836]        # df00 <_IO_stdin_used+0x1f00>
    b6ca:	b8 00 00 00 00       	mov    eax,0x0
    b6cf:	e8 1c 6f ff ff       	call   25f0 <printf@plt>
    b6d4:	eb 1c                	jmp    b6f2 <crash_handler+0x1eb>
    b6d6:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [rbp-0xe4]
    b6dc:	89 c6                	mov    esi,eax
    b6de:	48 8d 3d 53 28 00 00 	lea    rdi,[rip+0x2853]        # df38 <_IO_stdin_used+0x1f38>
    b6e5:	b8 00 00 00 00       	mov    eax,0x0
    b6ea:	e8 01 6f ff ff       	call   25f0 <printf@plt>
    b6ef:	eb 01                	jmp    b6f2 <crash_handler+0x1eb>
    b6f1:	90                   	nop
    b6f2:	83 85 14 ff ff ff 01 	add    DWORD PTR [rbp-0xec],0x1
    b6f9:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b6ff:	3b 85 18 ff ff ff    	cmp    eax,DWORD PTR [rbp-0xe8]
    b705:	0f 8c a2 fe ff ff    	jl     b5ad <crash_handler+0xa6>
    b70b:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b712:	48 89 c7             	mov    rdi,rax
    b715:	e8 76 6d ff ff       	call   2490 <free@plt>
    b71a:	48 8d 3d 41 28 00 00 	lea    rdi,[rip+0x2841]        # df62 <_IO_stdin_used+0x1f62>
    b721:	e8 fa 6d ff ff       	call   2520 <puts@plt>
    b726:	89 c6                	mov    esi,eax
    b728:	48 8d 3d 42 28 00 00 	lea    rdi,[rip+0x2842]        # df71 <_IO_stdin_used+0x1f71>
    b72f:	b8 00 00 00 00       	mov    eax,0x0
    b734:	e8 b7 6e ff ff       	call   25f0 <printf@plt>
    b739:	89 d8                	mov    eax,ebx
    b73b:	89 c6                	mov    esi,eax
    b73d:	48 8d 3d 3d 28 00 00 	lea    rdi,[rip+0x283d]        # df81 <_IO_stdin_used+0x1f81>
    b744:	b8 00 00 00 00       	mov    eax,0x0
    b749:	e8 a2 6e ff ff       	call   25f0 <printf@plt>
    b74e:	89 d8                	mov    eax,ebx
    b750:	89 c6                	mov    esi,eax
    b752:	48 8d 3d 38 28 00 00 	lea    rdi,[rip+0x2838]        # df91 <_IO_stdin_used+0x1f91>
    b759:	b8 00 00 00 00       	mov    eax,0x0
    b75e:	e8 8d 6e ff ff       	call   25f0 <printf@plt>
    b763:	89 c8                	mov    eax,ecx
    b765:	89 c6                	mov    esi,eax
    b767:	48 8d 3d 33 28 00 00 	lea    rdi,[rip+0x2833]        # dfa1 <_IO_stdin_used+0x1fa1>
    b76e:	b8 00 00 00 00       	mov    eax,0x0
    b773:	e8 78 6e ff ff       	call   25f0 <printf@plt>
    b778:	89 e0                	mov    eax,esp
    b77a:	89 c6                	mov    esi,eax
    b77c:	48 8d 3d 2e 28 00 00 	lea    rdi,[rip+0x282e]        # dfb1 <_IO_stdin_used+0x1fb1>
    b783:	b8 00 00 00 00       	mov    eax,0x0
    b788:	e8 63 6e ff ff       	call   25f0 <printf@plt>
    b78d:	89 e8                	mov    eax,ebp
    b78f:	89 c6                	mov    esi,eax
    b791:	48 8d 3d 29 28 00 00 	lea    rdi,[rip+0x2829]        # dfc1 <_IO_stdin_used+0x1fc1>
    b798:	b8 00 00 00 00       	mov    eax,0x0
    b79d:	e8 4e 6e ff ff       	call   25f0 <printf@plt>
    b7a2:	bf 01 00 00 00       	mov    edi,0x1
    b7a7:	e8 d4 70 ff ff       	call   2880 <exit@plt>

000000000000b7ac <offset_search>:
    b7ac:	f3 0f 1e fa          	endbr64 
    b7b0:	55                   	push   rbp
    b7b1:	48 89 e5             	mov    rbp,rsp
    b7b4:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    b7b7:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    b7be:	eb 44                	jmp    b804 <offset_search+0x58>
    b7c0:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    b7c3:	48 63 d0             	movsxd rdx,eax
    b7c6:	48 89 d0             	mov    rax,rdx
    b7c9:	48 c1 e0 02          	shl    rax,0x2
    b7cd:	48 01 d0             	add    rax,rdx
    b7d0:	48 c1 e0 03          	shl    rax,0x3
    b7d4:	48 8d 15 65 d4 12 00 	lea    rdx,[rip+0x12d465]        # 138c40 <fn_mem_map>
    b7db:	48 01 d0             	add    rax,rdx
    b7de:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b7e2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b7e6:	8b 40 20             	mov    eax,DWORD PTR [rax+0x20]
    b7e9:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    b7ec:	76 12                	jbe    b800 <offset_search+0x54>
    b7ee:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b7f2:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    b7f5:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    b7f8:	73 06                	jae    b800 <offset_search+0x54>
    b7fa:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b7fe:	eb 14                	jmp    b814 <offset_search+0x68>
    b800:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    b804:	8b 05 9e c0 0f 00    	mov    eax,DWORD PTR [rip+0xfc09e]        # 1078a8 <fn_num>
    b80a:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    b80d:	7c b1                	jl     b7c0 <offset_search+0x14>
    b80f:	b8 00 00 00 00       	mov    eax,0x0
    b814:	5d                   	pop    rbp
    b815:	c3                   	ret    

000000000000b816 <add_fn>:
    b816:	f3 0f 1e fa          	endbr64 
    b81a:	55                   	push   rbp
    b81b:	48 89 e5             	mov    rbp,rsp
    b81e:	48 83 ec 20          	sub    rsp,0x20
    b822:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    b826:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    b829:	89 55 e0             	mov    DWORD PTR [rbp-0x20],edx
    b82c:	8b 05 76 c0 0f 00    	mov    eax,DWORD PTR [rip+0xfc076]        # 1078a8 <fn_num>
    b832:	8d 50 01             	lea    edx,[rax+0x1]
    b835:	89 15 6d c0 0f 00    	mov    DWORD PTR [rip+0xfc06d],edx        # 1078a8 <fn_num>
    b83b:	48 63 d0             	movsxd rdx,eax
    b83e:	48 89 d0             	mov    rax,rdx
    b841:	48 c1 e0 02          	shl    rax,0x2
    b845:	48 01 d0             	add    rax,rdx
    b848:	48 c1 e0 03          	shl    rax,0x3
    b84c:	48 8d 15 ed d3 12 00 	lea    rdx,[rip+0x12d3ed]        # 138c40 <fn_mem_map>
    b853:	48 01 d0             	add    rax,rdx
    b856:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b85a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b85e:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    b862:	48 89 d6             	mov    rsi,rdx
    b865:	48 89 c7             	mov    rdi,rax
    b868:	e8 83 6c ff ff       	call   24f0 <strcpy@plt>
    b86d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b871:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    b874:	89 50 20             	mov    DWORD PTR [rax+0x20],edx
    b877:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b87b:	8b 55 e0             	mov    edx,DWORD PTR [rbp-0x20]
    b87e:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    b881:	90                   	nop
    b882:	c9                   	leave  
    b883:	c3                   	ret    

000000000000b884 <load_fn_mem_map>:
    b884:	f3 0f 1e fa          	endbr64 
    b888:	55                   	push   rbp
    b889:	48 89 e5             	mov    rbp,rsp
    b88c:	53                   	push   rbx
    b88d:	48 83 ec 78          	sub    rsp,0x78
    b891:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b898:	00 00 
    b89a:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    b89e:	31 c0                	xor    eax,eax
    b8a0:	48 8d 35 31 27 00 00 	lea    rsi,[rip+0x2731]        # dfd8 <_IO_stdin_used+0x1fd8>
    b8a7:	48 8d 3d 2c 27 00 00 	lea    rdi,[rip+0x272c]        # dfda <_IO_stdin_used+0x1fda>
    b8ae:	e8 fd 6e ff ff       	call   27b0 <fopen@plt>
    b8b3:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    b8b7:	48 83 7d b0 00       	cmp    QWORD PTR [rbp-0x50],0x0
    b8bc:	75 16                	jne    b8d4 <load_fn_mem_map+0x50>
    b8be:	48 8d 3d 33 27 00 00 	lea    rdi,[rip+0x2733]        # dff8 <_IO_stdin_used+0x1ff8>
    b8c5:	e8 56 6c ff ff       	call   2520 <puts@plt>
    b8ca:	bf ff ff ff ff       	mov    edi,0xffffffff
    b8cf:	e8 ac 6f ff ff       	call   2880 <exit@plt>
    b8d4:	48 c7 45 98 00 00 00 	mov    QWORD PTR [rbp-0x68],0x0
    b8db:	00 
    b8dc:	48 c7 45 a0 00 00 00 	mov    QWORD PTR [rbp-0x60],0x0
    b8e3:	00 
    b8e4:	e9 db 00 00 00       	jmp    b9c4 <load_fn_mem_map+0x140>
    b8e9:	48 8b 5d 98          	mov    rbx,QWORD PTR [rbp-0x68]
    b8ed:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    b8f1:	48 8d 35 67 27 00 00 	lea    rsi,[rip+0x2767]        # e05f <_IO_stdin_used+0x205f>
    b8f8:	48 89 c7             	mov    rdi,rax
    b8fb:	e8 70 6d ff ff       	call   2670 <strcspn@plt>
    b900:	48 01 d8             	add    rax,rbx
    b903:	c6 00 00             	mov    BYTE PTR [rax],0x0
    b906:	c7 45 94 00 00 00 00 	mov    DWORD PTR [rbp-0x6c],0x0
    b90d:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    b911:	48 8d 35 49 27 00 00 	lea    rsi,[rip+0x2749]        # e061 <_IO_stdin_used+0x2061>
    b918:	48 89 c7             	mov    rdi,rax
    b91b:	e8 b0 6e ff ff       	call   27d0 <strtok@plt>
    b920:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    b924:	eb 7f                	jmp    b9a5 <load_fn_mem_map+0x121>
    b926:	83 7d 94 02          	cmp    DWORD PTR [rbp-0x6c],0x2
    b92a:	74 44                	je     b970 <load_fn_mem_map+0xec>
    b92c:	83 7d 94 02          	cmp    DWORD PTR [rbp-0x6c],0x2
    b930:	7f 59                	jg     b98b <load_fn_mem_map+0x107>
    b932:	83 7d 94 00          	cmp    DWORD PTR [rbp-0x6c],0x0
    b936:	74 08                	je     b940 <load_fn_mem_map+0xbc>
    b938:	83 7d 94 01          	cmp    DWORD PTR [rbp-0x6c],0x1
    b93c:	74 17                	je     b955 <load_fn_mem_map+0xd1>
    b93e:	eb 4b                	jmp    b98b <load_fn_mem_map+0x107>
    b940:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    b944:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b948:	48 89 d6             	mov    rsi,rdx
    b94b:	48 89 c7             	mov    rdi,rax
    b94e:	e8 9d 6b ff ff       	call   24f0 <strcpy@plt>
    b953:	eb 37                	jmp    b98c <load_fn_mem_map+0x108>
    b955:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    b959:	ba 10 00 00 00       	mov    edx,0x10
    b95e:	be 00 00 00 00       	mov    esi,0x0
    b963:	48 89 c7             	mov    rdi,rax
    b966:	e8 75 6d ff ff       	call   26e0 <strtol@plt>
    b96b:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    b96e:	eb 1c                	jmp    b98c <load_fn_mem_map+0x108>
    b970:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    b974:	ba 10 00 00 00       	mov    edx,0x10
    b979:	be 00 00 00 00       	mov    esi,0x0
    b97e:	48 89 c7             	mov    rdi,rax
    b981:	e8 5a 6d ff ff       	call   26e0 <strtol@plt>
    b986:	89 45 90             	mov    DWORD PTR [rbp-0x70],eax
    b989:	eb 01                	jmp    b98c <load_fn_mem_map+0x108>
    b98b:	90                   	nop
    b98c:	48 8d 35 ce 26 00 00 	lea    rsi,[rip+0x26ce]        # e061 <_IO_stdin_used+0x2061>
    b993:	bf 00 00 00 00       	mov    edi,0x0
    b998:	e8 33 6e ff ff       	call   27d0 <strtok@plt>
    b99d:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    b9a1:	83 45 94 01          	add    DWORD PTR [rbp-0x6c],0x1
    b9a5:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
    b9aa:	0f 85 76 ff ff ff    	jne    b926 <load_fn_mem_map+0xa2>
    b9b0:	8b 55 90             	mov    edx,DWORD PTR [rbp-0x70]
    b9b3:	8b 4d 8c             	mov    ecx,DWORD PTR [rbp-0x74]
    b9b6:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b9ba:	89 ce                	mov    esi,ecx
    b9bc:	48 89 c7             	mov    rdi,rax
    b9bf:	e8 52 fe ff ff       	call   b816 <add_fn>
    b9c4:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
    b9c8:	48 8d 4d a0          	lea    rcx,[rbp-0x60]
    b9cc:	48 8d 45 98          	lea    rax,[rbp-0x68]
    b9d0:	48 89 ce             	mov    rsi,rcx
    b9d3:	48 89 c7             	mov    rdi,rax
    b9d6:	e8 55 6e ff ff       	call   2830 <getline@plt>
    b9db:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    b9df:	48 83 7d b8 ff       	cmp    QWORD PTR [rbp-0x48],0xffffffffffffffff
    b9e4:	0f 85 ff fe ff ff    	jne    b8e9 <load_fn_mem_map+0x65>
    b9ea:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b9ee:	48 89 c7             	mov    rdi,rax
    b9f1:	e8 7a 6b ff ff       	call   2570 <fclose@plt>
    b9f6:	90                   	nop
    b9f7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    b9fb:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    ba02:	00 00 
    ba04:	74 05                	je     ba0b <load_fn_mem_map+0x187>
    ba06:	e8 a5 6b ff ff       	call   25b0 <__stack_chk_fail@plt>
    ba0b:	48 83 c4 78          	add    rsp,0x78
    ba0f:	5b                   	pop    rbx
    ba10:	5d                   	pop    rbp
    ba11:	c3                   	ret    

000000000000ba12 <pps_monitor>:
    ba12:	f3 0f 1e fa          	endbr64 
    ba16:	55                   	push   rbp
    ba17:	48 89 e5             	mov    rbp,rsp
    ba1a:	48 81 ec 70 02 00 00 	sub    rsp,0x270
    ba21:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    ba28:	00 00 
    ba2a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    ba2e:	31 c0                	xor    eax,eax
    ba30:	bf 00 00 00 00       	mov    edi,0x0
    ba35:	e8 c6 6c ff ff       	call   2700 <time@plt>
    ba3a:	48 89 c2             	mov    rdx,rax
    ba3d:	8b 05 7d be 0f 00    	mov    eax,DWORD PTR [rip+0xfbe7d]        # 1078c0 <arr_num.3955>
    ba43:	8d 48 01             	lea    ecx,[rax+0x1]
    ba46:	89 0d 74 be 0f 00    	mov    DWORD PTR [rip+0xfbe74],ecx        # 1078c0 <arr_num.3955>
    ba4c:	48 89 d1             	mov    rcx,rdx
    ba4f:	89 c0                	mov    eax,eax
    ba51:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    ba58:	00 
    ba59:	48 8d 05 80 be 0f 00 	lea    rax,[rip+0xfbe80]        # 1078e0 <pkt_times.3954>
    ba60:	48 89 0c 02          	mov    QWORD PTR [rdx+rax*1],rcx
    ba64:	8b 05 56 be 0f 00    	mov    eax,DWORD PTR [rip+0xfbe56]        # 1078c0 <arr_num.3955>
    ba6a:	3d 80 00 00 00       	cmp    eax,0x80
    ba6f:	0f 85 2d 02 00 00    	jne    bca2 <pps_monitor+0x290>
    ba75:	c7 85 98 fd ff ff 00 	mov    DWORD PTR [rbp-0x268],0x0
    ba7c:	00 00 00 
    ba7f:	48 8d 3d e2 25 00 00 	lea    rdi,[rip+0x25e2]        # e068 <_IO_stdin_used+0x2068>
    ba86:	e8 f5 6a ff ff       	call   2580 <opendir@plt>
    ba8b:	48 89 85 a8 fd ff ff 	mov    QWORD PTR [rbp-0x258],rax
    ba92:	48 83 bd a8 fd ff ff 	cmp    QWORD PTR [rbp-0x258],0x0
    ba99:	00 
    ba9a:	75 18                	jne    bab4 <pps_monitor+0xa2>
    ba9c:	48 8d 3d e1 25 00 00 	lea    rdi,[rip+0x25e1]        # e084 <_IO_stdin_used+0x2084>
    baa3:	e8 18 6d ff ff       	call   27c0 <perror@plt>
    baa8:	e9 f5 01 00 00       	jmp    bca2 <pps_monitor+0x290>
    baad:	83 85 98 fd ff ff 01 	add    DWORD PTR [rbp-0x268],0x1
    bab4:	48 8b 85 a8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x258]
    babb:	48 89 c7             	mov    rdi,rax
    babe:	e8 4d 6c ff ff       	call   2710 <readdir@plt>
    bac3:	48 89 85 b0 fd ff ff 	mov    QWORD PTR [rbp-0x250],rax
    baca:	48 83 bd b0 fd ff ff 	cmp    QWORD PTR [rbp-0x250],0x0
    bad1:	00 
    bad2:	75 d9                	jne    baad <pps_monitor+0x9b>
    bad4:	83 ad 98 fd ff ff 02 	sub    DWORD PTR [rbp-0x268],0x2
    badb:	8b 95 98 fd ff ff    	mov    edx,DWORD PTR [rbp-0x268]
    bae1:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    bae5:	48 8d 35 a4 25 00 00 	lea    rsi,[rip+0x25a4]        # e090 <_IO_stdin_used+0x2090>
    baec:	48 89 c7             	mov    rdi,rax
    baef:	b8 00 00 00 00       	mov    eax,0x0
    baf4:	e8 77 6d ff ff       	call   2870 <sprintf@plt>
    baf9:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    bafd:	48 8d 35 b6 25 00 00 	lea    rsi,[rip+0x25b6]        # e0ba <_IO_stdin_used+0x20ba>
    bb04:	48 89 c7             	mov    rdi,rax
    bb07:	e8 a4 6c ff ff       	call   27b0 <fopen@plt>
    bb0c:	48 89 85 b8 fd ff ff 	mov    QWORD PTR [rbp-0x248],rax
    bb13:	48 83 bd b8 fd ff ff 	cmp    QWORD PTR [rbp-0x248],0x0
    bb1a:	00 
    bb1b:	75 11                	jne    bb2e <pps_monitor+0x11c>
    bb1d:	48 8d 3d 98 25 00 00 	lea    rdi,[rip+0x2598]        # e0bc <_IO_stdin_used+0x20bc>
    bb24:	e8 97 6c ff ff       	call   27c0 <perror@plt>
    bb29:	e9 74 01 00 00       	jmp    bca2 <pps_monitor+0x290>
    bb2e:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    bb32:	48 89 c6             	mov    rsi,rax
    bb35:	48 8d 3d 93 25 00 00 	lea    rdi,[rip+0x2593]        # e0cf <_IO_stdin_used+0x20cf>
    bb3c:	b8 00 00 00 00       	mov    eax,0x0
    bb41:	e8 aa 6a ff ff       	call   25f0 <printf@plt>
    bb46:	c7 85 9c fd ff ff 00 	mov    DWORD PTR [rbp-0x264],0x0
    bb4d:	00 00 00 
    bb50:	8b 05 6a bd 0f 00    	mov    eax,DWORD PTR [rip+0xfbd6a]        # 1078c0 <arr_num.3955>
    bb56:	89 85 a0 fd ff ff    	mov    DWORD PTR [rbp-0x260],eax
    bb5c:	eb 66                	jmp    bbc4 <pps_monitor+0x1b2>
    bb5e:	8b 85 a0 fd ff ff    	mov    eax,DWORD PTR [rbp-0x260]
    bb64:	48 98                	cdqe   
    bb66:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    bb6d:	00 
    bb6e:	48 8d 05 6b bd 0f 00 	lea    rax,[rip+0xfbd6b]        # 1078e0 <pkt_times.3954>
    bb75:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    bb79:	89 c6                	mov    esi,eax
    bb7b:	83 ad a0 fd ff ff 01 	sub    DWORD PTR [rbp-0x260],0x1
    bb82:	8b 85 a0 fd ff ff    	mov    eax,DWORD PTR [rbp-0x260]
    bb88:	48 98                	cdqe   
    bb8a:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    bb91:	00 
    bb92:	48 8d 05 47 bd 0f 00 	lea    rax,[rip+0xfbd47]        # 1078e0 <pkt_times.3954>
    bb99:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    bb9d:	89 c1                	mov    ecx,eax
    bb9f:	8b 85 9c fd ff ff    	mov    eax,DWORD PTR [rbp-0x264]
    bba5:	8d 50 01             	lea    edx,[rax+0x1]
    bba8:	89 95 9c fd ff ff    	mov    DWORD PTR [rbp-0x264],edx
    bbae:	29 ce                	sub    esi,ecx
    bbb0:	89 f2                	mov    edx,esi
    bbb2:	89 c0                	mov    eax,eax
    bbb4:	89 94 85 c0 fd ff ff 	mov    DWORD PTR [rbp+rax*4-0x240],edx
    bbbb:	83 bd a0 fd ff ff 00 	cmp    DWORD PTR [rbp-0x260],0x0
    bbc2:	74 0b                	je     bbcf <pps_monitor+0x1bd>
    bbc4:	83 bd a0 fd ff ff 00 	cmp    DWORD PTR [rbp-0x260],0x0
    bbcb:	75 91                	jne    bb5e <pps_monitor+0x14c>
    bbcd:	eb 01                	jmp    bbd0 <pps_monitor+0x1be>
    bbcf:	90                   	nop
    bbd0:	c7 85 a4 fd ff ff 00 	mov    DWORD PTR [rbp-0x25c],0x0
    bbd7:	00 00 00 
    bbda:	e9 91 00 00 00       	jmp    bc70 <pps_monitor+0x25e>
    bbdf:	8b 85 a4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x25c]
    bbe5:	48 98                	cdqe   
    bbe7:	8b 8c 85 c0 fd ff ff 	mov    ecx,DWORD PTR [rbp+rax*4-0x240]
    bbee:	8b 85 a4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x25c]
    bbf4:	48 98                	cdqe   
    bbf6:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    bbfd:	00 
    bbfe:	48 8d 05 db bc 0f 00 	lea    rax,[rip+0xfbcdb]        # 1078e0 <pkt_times.3954>
    bc05:	48 8b 14 02          	mov    rdx,QWORD PTR [rdx+rax*1]
    bc09:	48 8b 85 b8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x248]
    bc10:	48 8d 35 c7 24 00 00 	lea    rsi,[rip+0x24c7]        # e0de <_IO_stdin_used+0x20de>
    bc17:	48 89 c7             	mov    rdi,rax
    bc1a:	b8 00 00 00 00       	mov    eax,0x0
    bc1f:	e8 ac 6a ff ff       	call   26d0 <fprintf@plt>
    bc24:	8b 85 a4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x25c]
    bc2a:	48 98                	cdqe   
    bc2c:	8b 8c 85 c0 fd ff ff 	mov    ecx,DWORD PTR [rbp+rax*4-0x240]
    bc33:	8b 85 a4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x25c]
    bc39:	48 98                	cdqe   
    bc3b:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    bc42:	00 
    bc43:	48 8d 05 96 bc 0f 00 	lea    rax,[rip+0xfbc96]        # 1078e0 <pkt_times.3954>
    bc4a:	48 8b 14 02          	mov    rdx,QWORD PTR [rdx+rax*1]
    bc4e:	48 8b 05 0b 54 00 00 	mov    rax,QWORD PTR [rip+0x540b]        # 11060 <stdout@@GLIBC_2.2.5>
    bc55:	48 8d 35 82 24 00 00 	lea    rsi,[rip+0x2482]        # e0de <_IO_stdin_used+0x20de>
    bc5c:	48 89 c7             	mov    rdi,rax
    bc5f:	b8 00 00 00 00       	mov    eax,0x0
    bc64:	e8 67 6a ff ff       	call   26d0 <fprintf@plt>
    bc69:	83 85 a4 fd ff ff 01 	add    DWORD PTR [rbp-0x25c],0x1
    bc70:	8b 85 a4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x25c]
    bc76:	39 85 9c fd ff ff    	cmp    DWORD PTR [rbp-0x264],eax
    bc7c:	0f 87 5d ff ff ff    	ja     bbdf <pps_monitor+0x1cd>
    bc82:	ba 00 04 00 00       	mov    edx,0x400
    bc87:	be 00 00 00 00       	mov    esi,0x0
    bc8c:	48 8d 3d 4d bc 0f 00 	lea    rdi,[rip+0xfbc4d]        # 1078e0 <pkt_times.3954>
    bc93:	e8 98 69 ff ff       	call   2630 <memset@plt>
    bc98:	c7 05 1e bc 0f 00 00 	mov    DWORD PTR [rip+0xfbc1e],0x0        # 1078c0 <arr_num.3955>
    bc9f:	00 00 00 
    bca2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    bca6:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    bcad:	00 00 
    bcaf:	74 05                	je     bcb6 <pps_monitor+0x2a4>
    bcb1:	e8 fa 68 ff ff       	call   25b0 <__stack_chk_fail@plt>
    bcb6:	c9                   	leave  
    bcb7:	c3                   	ret    
    bcb8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    bcbf:	00 

000000000000bcc0 <__libc_csu_init>:
    bcc0:	f3 0f 1e fa          	endbr64 
    bcc4:	41 57                	push   r15
    bcc6:	4c 8d 3d 8b 4e 00 00 	lea    r15,[rip+0x4e8b]        # 10b58 <__frame_dummy_init_array_entry>
    bccd:	41 56                	push   r14
    bccf:	49 89 d6             	mov    r14,rdx
    bcd2:	41 55                	push   r13
    bcd4:	49 89 f5             	mov    r13,rsi
    bcd7:	41 54                	push   r12
    bcd9:	41 89 fc             	mov    r12d,edi
    bcdc:	55                   	push   rbp
    bcdd:	48 8d 2d 7c 4e 00 00 	lea    rbp,[rip+0x4e7c]        # 10b60 <__do_global_dtors_aux_fini_array_entry>
    bce4:	53                   	push   rbx
    bce5:	4c 29 fd             	sub    rbp,r15
    bce8:	48 83 ec 08          	sub    rsp,0x8
    bcec:	e8 0f 63 ff ff       	call   2000 <_init>
    bcf1:	48 c1 fd 03          	sar    rbp,0x3
    bcf5:	74 1f                	je     bd16 <__libc_csu_init+0x56>
    bcf7:	31 db                	xor    ebx,ebx
    bcf9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    bd00:	4c 89 f2             	mov    rdx,r14
    bd03:	4c 89 ee             	mov    rsi,r13
    bd06:	44 89 e7             	mov    edi,r12d
    bd09:	41 ff 14 df          	call   QWORD PTR [r15+rbx*8]
    bd0d:	48 83 c3 01          	add    rbx,0x1
    bd11:	48 39 dd             	cmp    rbp,rbx
    bd14:	75 ea                	jne    bd00 <__libc_csu_init+0x40>
    bd16:	48 83 c4 08          	add    rsp,0x8
    bd1a:	5b                   	pop    rbx
    bd1b:	5d                   	pop    rbp
    bd1c:	41 5c                	pop    r12
    bd1e:	41 5d                	pop    r13
    bd20:	41 5e                	pop    r14
    bd22:	41 5f                	pop    r15
    bd24:	c3                   	ret    
    bd25:	66 66 2e 0f 1f 84 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    bd2c:	00 00 00 00 

000000000000bd30 <__libc_csu_fini>:
    bd30:	f3 0f 1e fa          	endbr64 
    bd34:	c3                   	ret    

Disassembly of section .fini:

000000000000bd38 <_fini>:
    bd38:	f3 0f 1e fa          	endbr64 
    bd3c:	48 83 ec 08          	sub    rsp,0x8
    bd40:	48 83 c4 08          	add    rsp,0x8
    bd44:	c3                   	ret    

Disassembly of section .rodata:

000000000000c000 <_IO_stdin_used>:
    c000:	01 00                	add    DWORD PTR [rax],eax
    c002:	02 00                	add    al,BYTE PTR [rax]
    c004:	2f                   	(bad)  
    c005:	65 74 63             	gs je  c06b <_IO_stdin_used+0x6b>
    c008:	2f                   	(bad)  
    c009:	76 69                	jbe    c074 <_IO_stdin_used+0x74>
    c00b:	67 69 6c 2f 76 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x76],0x6c696769
    c012:	69 6c 
    c014:	2e 63 6f 6e          	movsxd ebp,DWORD PTR cs:[rdi+0x6e]
    c018:	66 00 2f             	data16 add BYTE PTR [rdi],ch
    c01b:	76 61                	jbe    c07e <_IO_stdin_used+0x7e>
    c01d:	72 2f                	jb     c04e <_IO_stdin_used+0x4e>
    c01f:	6c                   	ins    BYTE PTR es:[rdi],dx
    c020:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c021:	67 2f                	addr32 (bad) 
    c023:	76 69                	jbe    c08e <_IO_stdin_used+0x8e>
    c025:	67 69 6c 2f 73 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x6f6c6769
    c02c:	6c 6f 
    c02e:	67 2e 6c             	cs ins BYTE PTR es:[edi],dx
    c031:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c032:	67 00 2f             	add    BYTE PTR [edi],ch
    c035:	65 74 63             	gs je  c09b <_IO_stdin_used+0x9b>
    c038:	2f                   	(bad)  
    c039:	76 69                	jbe    c0a4 <_IO_stdin_used+0xa4>
    c03b:	67 69 6c 2f 68 6f 73 	imul   ebp,DWORD PTR [edi+ebp*1+0x68],0x7374736f
    c042:	74 73 
    c044:	2e 63 6f 6e          	movsxd ebp,DWORD PTR cs:[rdi+0x6e]
    c048:	66 00 00             	data16 add BYTE PTR [rax],al
    c04b:	00 00                	add    BYTE PTR [rax],al
    c04d:	00 00                	add    BYTE PTR [rax],al
    c04f:	00 1b                	add    BYTE PTR [rbx],bl
    c051:	5b                   	pop    rbx
    c052:	39 30                	cmp    DWORD PTR [rax],esi
    c054:	6d                   	ins    DWORD PTR es:[rdi],dx
    c055:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c05a:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c05f:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c064:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c069:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c06e:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c073:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c078:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c07d:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c082:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c087:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c08c:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c091:	2d 1b 5b 6d 00       	sub    eax,0x6d5b1b
    c096:	00 00                	add    BYTE PTR [rax],al
    c098:	42                   	rex.X
    c099:	41                   	rex.B
    c09a:	44 2d 54 52 41 46    	rex.R sub eax,0x46415254
    c0a0:	46                   	rex.RX
    c0a1:	49                   	rex.WB
    c0a2:	43 20 55 6e          	rex.XB and BYTE PTR [r13+0x6e],dl
    c0a6:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c0aa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c0ab:	20 45 74             	and    BYTE PTR [rbp+0x74],al
    c0ae:	68 65 72 6e 74       	push   0x746e7265
    c0b3:	20 46 72             	and    BYTE PTR [rsi+0x72],al
    c0b6:	61                   	(bad)  
    c0b7:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0b8:	65 20 50 72          	and    BYTE PTR gs:[rax+0x72],dl
    c0bc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c0bd:	74 6f                	je     c12e <_IO_stdin_used+0x12e>
    c0bf:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    c0c2:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    c0c5:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0c6:	62                   	(bad)  
    c0c7:	65 72 00             	gs jb  c0ca <_IO_stdin_used+0xca>
    c0ca:	2f                   	(bad)  
    c0cb:	76 61                	jbe    c12e <_IO_stdin_used+0x12e>
    c0cd:	72 2f                	jb     c0fe <_IO_stdin_used+0xfe>
    c0cf:	6c                   	ins    BYTE PTR es:[rdi],dx
    c0d0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c0d1:	67 2f                	addr32 (bad) 
    c0d3:	76 69                	jbe    c13e <_IO_stdin_used+0x13e>
    c0d5:	67 69 6c 2f 73 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x6f6c6769
    c0dc:	6c 6f 
    c0de:	67 2e 6c             	cs ins BYTE PTR es:[edi],dx
    c0e1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c0e2:	67 00 00             	add    BYTE PTR [eax],al
    c0e5:	00 00                	add    BYTE PTR [rax],al
    c0e7:	00 1b                	add    BYTE PTR [rbx],bl
    c0e9:	5b                   	pop    rbx
    c0ea:	33 3b                	xor    edi,DWORD PTR [rbx]
    c0ec:	33 33                	xor    esi,DWORD PTR [rbx]
    c0ee:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0ef:	00 25 73 00 30 2e    	add    BYTE PTR [rip+0x2e300073],ah        # 2e30c168 <_end+0x2e1d0d28>
    c0f5:	30 2e                	xor    BYTE PTR [rsi],ch
    c0f7:	30 2e                	xor    BYTE PTR [rsi],ch
    c0f9:	30 00                	xor    BYTE PTR [rax],al
    c0fb:	00 00                	add    BYTE PTR [rax],al
    c0fd:	00 00                	add    BYTE PTR [rax],al
    c0ff:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    c102:	4f 54                	rex.WRXB push r12
    c104:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    c108:	50                   	push   rax
    c109:	3a 20                	cmp    ah,BYTE PTR [rax]
    c10b:	50                   	push   rax
    c10c:	52                   	push   rdx
    c10d:	4f                   	rex.WRXB
    c10e:	42                   	rex.X
    c10f:	45 3a 20             	cmp    r12b,BYTE PTR [r8]
    c112:	57                   	push   rdi
    c113:	68 6f 20 68 61       	push   0x6168206f
    c118:	73 20                	jae    c13a <_IO_stdin_used+0x13a>
    c11a:	25 73 3f 0a 00       	and    eax,0xa3f73
    c11f:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    c122:	4f 54                	rex.WRXB push r12
    c124:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    c128:	50                   	push   rax
    c129:	3a 20                	cmp    ah,BYTE PTR [rax]
    c12b:	57                   	push   rdi
    c12c:	68 6f 20 69 73       	push   0x7369206f
    c131:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    c134:	20 25 73 3f 20 54    	and    BYTE PTR [rip+0x54203f73],ah        # 542100ad <_end+0x540d4c6d>
    c13a:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    c13c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c13d:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # cbb6 <_IO_stdin_used+0xbb6>
    c143:	00 00                	add    BYTE PTR [rax],al
    c145:	00 00                	add    BYTE PTR [rax],al
    c147:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    c14a:	4f 54                	rex.WRXB push r12
    c14c:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    c150:	50                   	push   rax
    c151:	3a 20                	cmp    ah,BYTE PTR [rax]
    c153:	52                   	push   rdx
    c154:	45 50                	rex.RB push r8
    c156:	4c 59                	rex.WR pop rcx
    c158:	3a 20                	cmp    ah,BYTE PTR [rax]
    c15a:	25 73 20 69 73       	and    eax,0x73692073
    c15f:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    c162:	20 25 73 0a 00 55    	and    BYTE PTR [rip+0x55000a73],ah        # 5500cbdb <_end+0x54ed179b>
    c168:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c169:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c16d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c16e:	20 41 52             	and    BYTE PTR [rcx+0x52],al
    c171:	50                   	push   rax
    c172:	20 6f 70             	and    BYTE PTR [rdi+0x70],ch
    c175:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
    c178:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    c17b:	25 64 0a 00 1b       	and    eax,0x1b000a64
    c180:	5b                   	pop    rbx
    c181:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    c184:	4c                   	rex.WR
    c185:	4f                   	rex.WRXB
    c186:	4f 50                	rex.WRXB push r8
    c188:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de201 <_end+0x3e1a2dc1>
    c18e:	20 25 73 00 20 52    	and    BYTE PTR [rip+0x52200073],ah        # 5220c207 <_end+0x520d0dc7>
    c194:	45 50                	rex.RB push r8
    c196:	4c 59                	rex.WR pop rcx
    c198:	20 00                	and    BYTE PTR [rax],al
    c19a:	20 55 4e             	and    BYTE PTR [rbp+0x4e],dl
    c19d:	4b                   	rex.WXB
    c19e:	4e                   	rex.WRX
    c19f:	4f 57                	rex.WRXB push r15
    c1a1:	4e 20 4c 4f 4f       	rex.WRX and BYTE PTR [rdi+r9*2+0x4f],r9b
    c1a6:	50                   	push   rax
    c1a7:	20 46 55             	and    BYTE PTR [rsi+0x55],al
    c1aa:	4e                   	rex.WRX
    c1ab:	43 54                	rex.XB push r12
    c1ad:	49                   	rex.WB
    c1ae:	4f                   	rex.WRXB
    c1af:	4e 3a 25 64 20 0a 00 	rex.WRX cmp r12b,BYTE PTR [rip+0xa2064]        # ae21a <rules+0x9d17a>
    c1b6:	00 00                	add    BYTE PTR [rax],al
    c1b8:	25 30 32 78 3a       	and    eax,0x3a783230
    c1bd:	25 30 32 78 3a       	and    eax,0x3a783230
    c1c2:	25 30 32 78 3a       	and    eax,0x3a783230
    c1c7:	25 30 32 78 3a       	and    eax,0x3a783230
    c1cc:	25 30 32 78 3a       	and    eax,0x3a783230
    c1d1:	25 30 32 78 00       	and    eax,0x783230
    c1d6:	25 64 2e 25 64       	and    eax,0x64252e64
    c1db:	2e 25 64 2e 25 64    	cs and eax,0x64252e64
    c1e1:	00 00                	add    BYTE PTR [rax],al
    c1e3:	00 00                	add    BYTE PTR [rax],al
    c1e5:	00 00                	add    BYTE PTR [rax],al
    c1e7:	00 25 30 32 78 25    	add    BYTE PTR [rip+0x25783230],ah        # 2578f41d <_end+0x25653fdd>
    c1ed:	30 32                	xor    BYTE PTR [rdx],dh
    c1ef:	78 3a                	js     c22b <_IO_stdin_used+0x22b>
    c1f1:	25 30 32 78 25       	and    eax,0x25783230
    c1f6:	30 32                	xor    BYTE PTR [rdx],dh
    c1f8:	78 3a                	js     c234 <_IO_stdin_used+0x234>
    c1fa:	25 30 32 78 25       	and    eax,0x25783230
    c1ff:	30 32                	xor    BYTE PTR [rdx],dh
    c201:	78 3a                	js     c23d <_IO_stdin_used+0x23d>
    c203:	25 30 32 78 25       	and    eax,0x25783230
    c208:	30 32                	xor    BYTE PTR [rdx],dh
    c20a:	78 3a                	js     c246 <_IO_stdin_used+0x246>
    c20c:	25 30 32 78 25       	and    eax,0x25783230
    c211:	30 32                	xor    BYTE PTR [rdx],dh
    c213:	78 3a                	js     c24f <_IO_stdin_used+0x24f>
    c215:	25 30 32 78 25       	and    eax,0x25783230
    c21a:	30 32                	xor    BYTE PTR [rdx],dh
    c21c:	78 3a                	js     c258 <_IO_stdin_used+0x258>
    c21e:	25 30 32 78 25       	and    eax,0x25783230
    c223:	30 32                	xor    BYTE PTR [rdx],dh
    c225:	78 3a                	js     c261 <_IO_stdin_used+0x261>
    c227:	25 30 32 78 25       	and    eax,0x25783230
    c22c:	30 32                	xor    BYTE PTR [rdx],dh
    c22e:	78 00                	js     c230 <_IO_stdin_used+0x230>
    c230:	25 64 2d 25 30       	and    eax,0x30252d64
    c235:	32 64 2d 25          	xor    ah,BYTE PTR [rbp+rbp*1+0x25]
    c239:	30 32                	xor    BYTE PTR [rdx],dh
    c23b:	64 20 25 30 32 64 3a 	and    BYTE PTR fs:[rip+0x3a643230],ah        # 3a64f472 <_end+0x3a514032>
    c242:	25 30 32 64 3a       	and    eax,0x3a643230
    c247:	25 30 32 64 00       	and    eax,0x643230
    c24c:	25 73 3a 20 25       	and    eax,0x25203a73
    c251:	73 0a                	jae    c25d <_IO_stdin_used+0x25d>
    c253:	00 00                	add    BYTE PTR [rax],al
    c255:	00 00                	add    BYTE PTR [rax],al
    c257:	00 25 73 20 46 6f    	add    BYTE PTR [rip+0x6f462073],ah        # 6f46e2d0 <_end+0x6f332e90>
    c25d:	75 6e                	jne    c2cd <_IO_stdin_used+0x2cd>
    c25f:	64 20 62 6c          	and    BYTE PTR fs:[rdx+0x6c],ah
    c263:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c264:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    c267:	64 20 69 70          	and    BYTE PTR fs:[rcx+0x70],ch
    c26b:	76 34                	jbe    c2a1 <_IO_stdin_used+0x2a1>
    c26d:	20 61 64             	and    BYTE PTR [rcx+0x64],ah
    c270:	64 72 65             	fs jb  c2d8 <_IO_stdin_used+0x2d8>
    c273:	73 73                	jae    c2e8 <_IO_stdin_used+0x2e8>
    c275:	28 64 65 73          	sub    BYTE PTR [rbp+riz*2+0x73],ah
    c279:	74 29                	je     c2a4 <_IO_stdin_used+0x2a4>
    c27b:	3a 20                	cmp    ah,BYTE PTR [rax]
    c27d:	25 73 0a 00 00       	and    eax,0xa73
    c282:	00 00                	add    BYTE PTR [rax],al
    c284:	00 00                	add    BYTE PTR [rax],al
    c286:	00 00                	add    BYTE PTR [rax],al
    c288:	25 73 20 46 6f       	and    eax,0x6f462073
    c28d:	75 6e                	jne    c2fd <_IO_stdin_used+0x2fd>
    c28f:	64 20 62 6c          	and    BYTE PTR fs:[rdx+0x6c],ah
    c293:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c294:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    c297:	64 20 69 70          	and    BYTE PTR fs:[rcx+0x70],ch
    c29b:	76 34                	jbe    c2d1 <_IO_stdin_used+0x2d1>
    c29d:	20 61 64             	and    BYTE PTR [rcx+0x64],ah
    c2a0:	64 72 65             	fs jb  c308 <_IO_stdin_used+0x308>
    c2a3:	73 73                	jae    c318 <_IO_stdin_used+0x318>
    c2a5:	28 73 72             	sub    BYTE PTR [rbx+0x72],dh
    c2a8:	63 29                	movsxd ebp,DWORD PTR [rcx]
    c2aa:	3a 20                	cmp    ah,BYTE PTR [rax]
    c2ac:	25 73 0a 00 1b       	and    eax,0x1b000a73
    c2b1:	5b                   	pop    rbx
    c2b2:	34 6d                	xor    al,0x6d
    c2b4:	00 25 73 46 72 61    	add    BYTE PTR [rip+0x61724673],ah        # 6173092d <_end+0x615f54ed>
    c2ba:	67 6d                	ins    DWORD PTR es:[edi],dx
    c2bc:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c2be:	74 65                	je     c325 <_IO_stdin_used+0x325>
    c2c0:	64 20 00             	and    BYTE PTR fs:[rax],al
    c2c3:	1b 5b 30             	sbb    ebx,DWORD PTR [rbx+0x30]
    c2c6:	6d                   	ins    DWORD PTR es:[rdi],dx
    c2c7:	00 25 73 00 20 25    	add    BYTE PTR [rip+0x25200073],ah        # 2520c340 <_end+0x250d0f00>
    c2cd:	73 20                	jae    c2ef <_IO_stdin_used+0x2ef>
    c2cf:	2d 3e 20 25 73       	sub    eax,0x7325203e
    c2d4:	25 73 0a 00 49       	and    eax,0x49000a73
    c2d9:	50                   	push   rax
    c2da:	76 34                	jbe    c310 <_IO_stdin_used+0x310>
    c2dc:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de355 <_end+0x3e1a2f15>
    c2e2:	20 25 73 20 50 72    	and    BYTE PTR [rip+0x72502073],ah        # 7250e35b <_end+0x723d2f1b>
    c2e8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c2e9:	74 6f                	je     c35a <_IO_stdin_used+0x35a>
    c2eb:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    c2ee:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    c2f1:	6d                   	ins    DWORD PTR es:[rdi],dx
    c2f2:	62                   	(bad)  
    c2f3:	65 72 20             	gs jb  c316 <_IO_stdin_used+0x316>
    c2f6:	3d 20 25 64 0a       	cmp    eax,0xa642520
    c2fb:	00 00                	add    BYTE PTR [rax],al
    c2fd:	00 00                	add    BYTE PTR [rax],al
    c2ff:	00 1b                	add    BYTE PTR [rbx],bl
    c301:	5b                   	pop    rbx
    c302:	33 35 6d 00 25 73    	xor    esi,DWORD PTR [rip+0x7325006d]        # 7325c375 <_end+0x73120f35>
    c308:	00 49 50             	add    BYTE PTR [rcx+0x50],cl
    c30b:	76 36                	jbe    c343 <_IO_stdin_used+0x343>
    c30d:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de386 <_end+0x3e1a2f46>
    c313:	20 25 73 0a 00 09    	and    BYTE PTR [rip+0x9000a73],ah        # 900cd8c <_end+0x8ed194c>
    c319:	49                   	rex.WB
    c31a:	43                   	rex.XB
    c31b:	4d 50                	rex.WRB push r8
    c31d:	76 36                	jbe    c355 <_IO_stdin_used+0x355>
    c31f:	20 00                	and    BYTE PTR [rax],al
    c321:	20 52 6f             	and    BYTE PTR [rdx+0x6f],dl
    c324:	75 74                	jne    c39a <_IO_stdin_used+0x39a>
    c326:	65 72 20             	gs jb  c349 <_IO_stdin_used+0x349>
    c329:	53                   	push   rbx
    c32a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c32b:	6c                   	ins    BYTE PTR es:[rdi],dx
    c32c:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    c333:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c334:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c335:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    c338:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c339:	6d                   	ins    DWORD PTR es:[rdi],dx
    c33a:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # cdb3 <_IO_stdin_used+0xdb3>
    c340:	4d 75 6c             	rex.WRB jne c3af <_IO_stdin_used+0x3af>
    c343:	74 69                	je     c3ae <_IO_stdin_used+0x3ae>
    c345:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    c348:	74 20                	je     c36a <_IO_stdin_used+0x36a>
    c34a:	4c 69 73 74 65 6e 65 	imul   r14,QWORD PTR [rbx+0x74],0x72656e65
    c351:	72 
    c352:	20 52 65             	and    BYTE PTR [rdx+0x65],dl
    c355:	70 6f                	jo     c3c6 <_IO_stdin_used+0x3c6>
    c357:	72 74                	jb     c3cd <_IO_stdin_used+0x3cd>
    c359:	20 4d 65             	and    BYTE PTR [rbp+0x65],cl
    c35c:	73 73                	jae    c3d1 <_IO_stdin_used+0x3d1>
    c35e:	61                   	(bad)  
    c35f:	67 65 20 76 32       	and    BYTE PTR gs:[esi+0x32],dh
    c364:	00 4d 75             	add    BYTE PTR [rbp+0x75],cl
    c367:	6c                   	ins    BYTE PTR es:[rdi],dx
    c368:	74 69                	je     c3d3 <_IO_stdin_used+0x3d3>
    c36a:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    c36d:	74 20                	je     c38f <_IO_stdin_used+0x38f>
    c36f:	20 4c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],cl
    c373:	74 65                	je     c3da <_IO_stdin_used+0x3da>
    c375:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c376:	65 72 20             	gs jb  c399 <_IO_stdin_used+0x399>
    c379:	51                   	push   rcx
    c37a:	75 65                	jne    c3e1 <_IO_stdin_used+0x3e1>
    c37c:	72 79                	jb     c3f7 <_IO_stdin_used+0x3f7>
    c37e:	00 4e 65             	add    BYTE PTR [rsi+0x65],cl
    c381:	69 67 68 62 6f 72 20 	imul   esp,DWORD PTR [rdi+0x68],0x20726f62
    c388:	53                   	push   rbx
    c389:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c38a:	6c                   	ins    BYTE PTR es:[rdi],dx
    c38b:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    c392:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c393:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c394:	00 1b                	add    BYTE PTR [rbx],bl
    c396:	5b                   	pop    rbx
    c397:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    c39a:	00 00                	add    BYTE PTR [rax],al
    c39c:	00 00                	add    BYTE PTR [rax],al
    c39e:	00 00                	add    BYTE PTR [rax],al
    c3a0:	54                   	push   rsp
    c3a1:	69 6d 65 20 73 74 61 	imul   ebp,DWORD PTR [rbp+0x65],0x61747320
    c3a8:	6d                   	ins    DWORD PTR es:[rdi],dx
    c3a9:	70 20                	jo     c3cb <_IO_stdin_used+0x3cb>
    c3ab:	72 65                	jb     c412 <_IO_stdin_used+0x412>
    c3ad:	71 75                	jno    c424 <_IO_stdin_used+0x424>
    c3af:	65 73 74             	gs jae c426 <_IO_stdin_used+0x426>
    c3b2:	3a 20                	cmp    ah,BYTE PTR [rax]
    c3b4:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    c3b9:	20 25 73 28 63 6f    	and    BYTE PTR [rip+0x6f632873],ah        # 6f63ec32 <_end+0x6f5037f2>
    c3bf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c3c0:	66 69 67 20 73 70    	imul   sp,WORD PTR [rdi+0x20],0x7073
    c3c6:	65 63 69 66          	movsxd ebp,DWORD PTR gs:[rcx+0x66]
    c3ca:	69 65 73 20 73 74 72 	imul   esp,DWORD PTR [rbp+0x73],0x72747320
    c3d1:	69 63 74 20 74 69 6d 	imul   esp,DWORD PTR [rbx+0x74],0x6d697420
    c3d8:	65 73 74             	gs jae c44f <_IO_stdin_used+0x44f>
    c3db:	61                   	(bad)  
    c3dc:	6d                   	ins    DWORD PTR es:[rdi],dx
    c3dd:	70 20                	jo     c3ff <_IO_stdin_used+0x3ff>
    c3df:	61                   	(bad)  
    c3e0:	6c                   	ins    BYTE PTR es:[rdi],dx
    c3e1:	65 72 74             	gs jb  c458 <_IO_stdin_used+0x458>
    c3e4:	73 29                	jae    c40f <_IO_stdin_used+0x40f>
    c3e6:	0a 00                	or     al,BYTE PTR [rax]
    c3e8:	50                   	push   rax
    c3e9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c3ea:	73 73                	jae    c45f <_IO_stdin_used+0x45f>
    c3ec:	69 62 6c 65 20 6e 6d 	imul   esp,DWORD PTR [rdx+0x6c],0x6d6e2065
    c3f3:	61                   	(bad)  
    c3f4:	70 20                	jo     c416 <_IO_stdin_used+0x416>
    c3f6:	68 6f 73 74 20       	push   0x2074736f
    c3fb:	61                   	(bad)  
    c3fc:	6c                   	ins    BYTE PTR es:[rdi],dx
    c3fd:	69 76 65 20 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x65686320
    c404:	63 6b 20             	movsxd ebp,DWORD PTR [rbx+0x20]
    c407:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    c40c:	20 25 73 3b 20 6d    	and    BYTE PTR [rip+0x6d203b73],ah        # 6d20ff85 <_end+0x6d0d4b45>
    c412:	61                   	(bad)  
    c413:	74 63                	je     c478 <_IO_stdin_used+0x478>
    c415:	68 65 64 20 49       	push   0x49206465
    c41a:	43                   	rex.XB
    c41b:	4d 50                	rex.WRB push r8
    c41d:	20 45 63             	and    BYTE PTR [rbp+0x63],al
    c420:	68 6f 2c 20 54       	push   0x54202c6f
    c425:	43 50                	rex.XB push r8
    c427:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    c42a:	4e 2c 20             	rex.WRX sub al,0x20
    c42d:	54                   	push   rsp
    c42e:	43 50                	rex.XB push r8
    c430:	20 41 43             	and    BYTE PTR [rcx+0x43],al
    c433:	4b 2c 20             	rex.WXB sub al,0x20
    c436:	61                   	(bad)  
    c437:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c438:	64 20 49 43          	and    BYTE PTR fs:[rcx+0x43],cl
    c43c:	4d 50                	rex.WRB push r8
    c43e:	20 54 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dl
    c442:	65 73 74             	gs jae c4b9 <_IO_stdin_used+0x4b9>
    c445:	61                   	(bad)  
    c446:	6d                   	ins    DWORD PTR es:[rdi],dx
    c447:	70 20                	jo     c469 <_IO_stdin_used+0x469>
    c449:	72 65                	jb     c4b0 <_IO_stdin_used+0x4b0>
    c44b:	71 75                	jno    c4c2 <_IO_stdin_used+0x4c2>
    c44d:	65 73 74             	gs jae c4c4 <_IO_stdin_used+0x4c4>
    c450:	0a 00                	or     al,BYTE PTR [rax]
    c452:	61                   	(bad)  
    c453:	00 00                	add    BYTE PTR [rax],al
    c455:	00 00                	add    BYTE PTR [rax],al
    c457:	00 50 6f             	add    BYTE PTR [rax+0x6f],dl
    c45a:	73 73                	jae    c4cf <_IO_stdin_used+0x4cf>
    c45c:	69 62 6c 65 20 6e 6d 	imul   esp,DWORD PTR [rdx+0x6c],0x6d6e2065
    c463:	61                   	(bad)  
    c464:	70 20                	jo     c486 <_IO_stdin_used+0x486>
    c466:	68 6f 73 74 20       	push   0x2074736f
    c46b:	61                   	(bad)  
    c46c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c46d:	69 76 65 20 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x65686320
    c474:	63 6b 20             	movsxd ebp,DWORD PTR [rbx+0x20]
    c477:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    c47c:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461e4f5 <_end+0x744e30b5>
    c482:	20 25 73 3b 20 6d    	and    BYTE PTR [rip+0x6d203b73],ah        # 6d20fffb <_end+0x6d0d4bbb>
    c488:	61                   	(bad)  
    c489:	74 63                	je     c4ee <_IO_stdin_used+0x4ee>
    c48b:	68 65 64 20 49       	push   0x49206465
    c490:	43                   	rex.XB
    c491:	4d 50                	rex.WRB push r8
    c493:	20 45 63             	and    BYTE PTR [rbp+0x63],al
    c496:	68 6f 2c 20 54       	push   0x54202c6f
    c49b:	43 50                	rex.XB push r8
    c49d:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    c4a0:	4e 2c 20             	rex.WRX sub al,0x20
    c4a3:	54                   	push   rsp
    c4a4:	43 50                	rex.XB push r8
    c4a6:	20 41 43             	and    BYTE PTR [rcx+0x43],al
    c4a9:	4b 2c 20             	rex.WXB sub al,0x20
    c4ac:	61                   	(bad)  
    c4ad:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c4ae:	64 20 49 43          	and    BYTE PTR fs:[rcx+0x43],cl
    c4b2:	4d 50                	rex.WRB push r8
    c4b4:	20 54 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dl
    c4b8:	65 73 74             	gs jae c52f <_IO_stdin_used+0x52f>
    c4bb:	61                   	(bad)  
    c4bc:	6d                   	ins    DWORD PTR es:[rdi],dx
    c4bd:	70 20                	jo     c4df <_IO_stdin_used+0x4df>
    c4bf:	72 65                	jb     c526 <_IO_stdin_used+0x526>
    c4c1:	71 75                	jno    c538 <_IO_stdin_used+0x538>
    c4c3:	65 73 74             	gs jae c53a <_IO_stdin_used+0x53a>
    c4c6:	0a 00                	or     al,BYTE PTR [rax]
    c4c8:	49 50                	rex.WB push r8
    c4ca:	76 34                	jbe    c500 <_IO_stdin_used+0x500>
    c4cc:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de545 <_end+0x3e1a3105>
    c4d2:	20 25 73 0a 00 09    	and    BYTE PTR [rip+0x9000a73],ah        # 900cf4b <_end+0x8ed1b0b>
    c4d8:	49                   	rex.WB
    c4d9:	43                   	rex.XB
    c4da:	4d 50                	rex.WRB push r8
    c4dc:	20 00                	and    BYTE PTR [rax],al
    c4de:	20 65 63             	and    BYTE PTR [rbp+0x63],ah
    c4e1:	68 6f 20 72 65       	push   0x6572206f
    c4e6:	70 6c                	jo     c554 <_IO_stdin_used+0x554>
    c4e8:	79 00                	jns    c4ea <_IO_stdin_used+0x4ea>
    c4ea:	20 64 65 73          	and    BYTE PTR [rbp+riz*2+0x73],ah
    c4ee:	74 69                	je     c559 <_IO_stdin_used+0x559>
    c4f0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c4f1:	61                   	(bad)  
    c4f2:	74 69                	je     c55d <_IO_stdin_used+0x55d>
    c4f4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c4f5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c4f6:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    c4f9:	72 65                	jb     c560 <_IO_stdin_used+0x560>
    c4fb:	61                   	(bad)  
    c4fc:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c4ff:	62                   	(bad)  
    c500:	6c                   	ins    BYTE PTR es:[rdi],dx
    c501:	65 28 00             	sub    BYTE PTR gs:[rax],al
    c504:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    c507:	74 77                	je     c580 <_IO_stdin_used+0x580>
    c509:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c50a:	72 6b                	jb     c577 <_IO_stdin_used+0x577>
    c50c:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c50f:	72 65                	jb     c576 <_IO_stdin_used+0x576>
    c511:	61                   	(bad)  
    c512:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c515:	62                   	(bad)  
    c516:	6c                   	ins    BYTE PTR es:[rdi],dx
    c517:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c51a:	00 20                	add    BYTE PTR [rax],ah
    c51c:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c51e:	73 74                	jae    c594 <_IO_stdin_used+0x594>
    c520:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c523:	72 65                	jb     c58a <_IO_stdin_used+0x58a>
    c525:	61                   	(bad)  
    c526:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c529:	62                   	(bad)  
    c52a:	6c                   	ins    BYTE PTR es:[rdi],dx
    c52b:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c52e:	00 20                	add    BYTE PTR [rax],ah
    c530:	50                   	push   rax
    c531:	72 6f                	jb     c5a2 <_IO_stdin_used+0x5a2>
    c533:	74 6f                	je     c5a4 <_IO_stdin_used+0x5a4>
    c535:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    c538:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c53b:	72 65                	jb     c5a2 <_IO_stdin_used+0x5a2>
    c53d:	61                   	(bad)  
    c53e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c541:	62                   	(bad)  
    c542:	6c                   	ins    BYTE PTR es:[rdi],dx
    c543:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c546:	00 20                	add    BYTE PTR [rax],ah
    c548:	50                   	push   rax
    c549:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c54a:	72 74                	jb     c5c0 <_IO_stdin_used+0x5c0>
    c54c:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c54f:	72 65                	jb     c5b6 <_IO_stdin_used+0x5b6>
    c551:	61                   	(bad)  
    c552:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c555:	62                   	(bad)  
    c556:	6c                   	ins    BYTE PTR es:[rdi],dx
    c557:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c55a:	00 20                	add    BYTE PTR [rax],ah
    c55c:	46 72 61             	rex.RX jb c5c0 <_IO_stdin_used+0x5c0>
    c55f:	67 6d                	ins    DWORD PTR es:[edi],dx
    c561:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c563:	74 61                	je     c5c6 <_IO_stdin_used+0x5c6>
    c565:	74 69                	je     c5d0 <_IO_stdin_used+0x5d0>
    c567:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c568:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c569:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    c56c:	65 64 65 64 20 29    	gs fs gs and BYTE PTR fs:[rcx],ch
    c572:	00 20                	add    BYTE PTR [rax],ah
    c574:	53                   	push   rbx
    c575:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c576:	75 72                	jne    c5ea <_IO_stdin_used+0x5ea>
    c578:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c57b:	52                   	push   rdx
    c57c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c57d:	75 74                	jne    c5f3 <_IO_stdin_used+0x5f3>
    c57f:	65 20 46 61          	and    BYTE PTR gs:[rsi+0x61],al
    c583:	69 6c 65 64 20 29 00 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x2920
    c58a:	00 
    c58b:	00 00                	add    BYTE PTR [rax],al
    c58d:	00 00                	add    BYTE PTR [rax],al
    c58f:	00 20                	add    BYTE PTR [rax],ah
    c591:	44                   	rex.R
    c592:	65 73 74             	gs jae c609 <_IO_stdin_used+0x609>
    c595:	69 6e 61 74 69 6f 6e 	imul   ebp,DWORD PTR [rsi+0x61],0x6e6f6974
    c59c:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    c59f:	74 77                	je     c618 <_IO_stdin_used+0x618>
    c5a1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5a2:	72 6b                	jb     c60f <_IO_stdin_used+0x60f>
    c5a4:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c5a7:	72 65                	jb     c60e <_IO_stdin_used+0x60e>
    c5a9:	61                   	(bad)  
    c5aa:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c5ad:	62                   	(bad)  
    c5ae:	6c                   	ins    BYTE PTR es:[rdi],dx
    c5af:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c5b2:	00 00                	add    BYTE PTR [rax],al
    c5b4:	00 00                	add    BYTE PTR [rax],al
    c5b6:	00 00                	add    BYTE PTR [rax],al
    c5b8:	20 44 65 73          	and    BYTE PTR [rbp+riz*2+0x73],al
    c5bc:	74 69                	je     c627 <_IO_stdin_used+0x627>
    c5be:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c5bf:	61                   	(bad)  
    c5c0:	74 69                	je     c62b <_IO_stdin_used+0x62b>
    c5c2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5c3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c5c4:	20 48 6f             	and    BYTE PTR [rax+0x6f],cl
    c5c7:	73 74                	jae    c63d <_IO_stdin_used+0x63d>
    c5c9:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c5cc:	72 65                	jb     c633 <_IO_stdin_used+0x633>
    c5ce:	61                   	(bad)  
    c5cf:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c5d2:	62                   	(bad)  
    c5d3:	6c                   	ins    BYTE PTR es:[rdi],dx
    c5d4:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c5d7:	00 20                	add    BYTE PTR [rax],ah
    c5d9:	53                   	push   rbx
    c5da:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5db:	75 72                	jne    c64f <_IO_stdin_used+0x64f>
    c5dd:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c5e0:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c5e2:	73 74                	jae    c658 <_IO_stdin_used+0x658>
    c5e4:	20 49 73             	and    BYTE PTR [rcx+0x73],cl
    c5e7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5e8:	6c                   	ins    BYTE PTR es:[rdi],dx
    c5e9:	61                   	(bad)  
    c5ea:	74 65                	je     c651 <_IO_stdin_used+0x651>
    c5ec:	64 20 29             	and    BYTE PTR fs:[rcx],ch
    c5ef:	00 20                	add    BYTE PTR [rax],ah
    c5f1:	4e                   	rex.WRX
    c5f2:	65 74 77             	gs je  c66c <_IO_stdin_used+0x66c>
    c5f5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5f6:	72 6b                	jb     c663 <_IO_stdin_used+0x663>
    c5f8:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    c5fb:	6d                   	ins    DWORD PTR es:[rdi],dx
    c5fc:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    c603:	74 69                	je     c66e <_IO_stdin_used+0x66e>
    c605:	76 65                	jbe    c66c <_IO_stdin_used+0x66c>
    c607:	6c                   	ins    BYTE PTR es:[rdi],dx
    c608:	79 20                	jns    c62a <_IO_stdin_used+0x62a>
    c60a:	50                   	push   rax
    c60b:	72 6f                	jb     c67c <_IO_stdin_used+0x67c>
    c60d:	68 69 62 69 74       	push   0x74696269
    c612:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    c616:	00 00                	add    BYTE PTR [rax],al
    c618:	20 48 6f             	and    BYTE PTR [rax+0x6f],cl
    c61b:	73 74                	jae    c691 <_IO_stdin_used+0x691>
    c61d:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    c620:	6d                   	ins    DWORD PTR es:[rdi],dx
    c621:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    c628:	74 69                	je     c693 <_IO_stdin_used+0x693>
    c62a:	76 65                	jbe    c691 <_IO_stdin_used+0x691>
    c62c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c62d:	79 20                	jns    c64f <_IO_stdin_used+0x64f>
    c62f:	50                   	push   rax
    c630:	72 6f                	jb     c6a1 <_IO_stdin_used+0x6a1>
    c632:	68 69 62 69 74       	push   0x74696269
    c637:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    c63b:	00 00                	add    BYTE PTR [rax],al
    c63d:	00 00                	add    BYTE PTR [rax],al
    c63f:	00 20                	add    BYTE PTR [rax],ah
    c641:	4e                   	rex.WRX
    c642:	65 74 77             	gs je  c6bc <_IO_stdin_used+0x6bc>
    c645:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c646:	72 6b                	jb     c6b3 <_IO_stdin_used+0x6b3>
    c648:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c64b:	72 65                	jb     c6b2 <_IO_stdin_used+0x6b2>
    c64d:	61                   	(bad)  
    c64e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c651:	62                   	(bad)  
    c652:	6c                   	ins    BYTE PTR es:[rdi],dx
    c653:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    c657:	72 20                	jb     c679 <_IO_stdin_used+0x679>
    c659:	54                   	push   rsp
    c65a:	4f 53                	rex.WRXB push r11
    c65c:	20 29                	and    BYTE PTR [rcx],ch
    c65e:	00 20                	add    BYTE PTR [rax],ah
    c660:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c662:	73 74                	jae    c6d8 <_IO_stdin_used+0x6d8>
    c664:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c667:	72 65                	jb     c6ce <_IO_stdin_used+0x6ce>
    c669:	61                   	(bad)  
    c66a:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c66d:	62                   	(bad)  
    c66e:	6c                   	ins    BYTE PTR es:[rdi],dx
    c66f:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    c673:	72 20                	jb     c695 <_IO_stdin_used+0x695>
    c675:	54                   	push   rsp
    c676:	4f 53                	rex.WRXB push r11
    c678:	20 29                	and    BYTE PTR [rcx],ch
    c67a:	00 00                	add    BYTE PTR [rax],al
    c67c:	00 00                	add    BYTE PTR [rax],al
    c67e:	00 00                	add    BYTE PTR [rax],al
    c680:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c683:	6d                   	ins    DWORD PTR es:[rdi],dx
    c684:	6d                   	ins    DWORD PTR es:[rdi],dx
    c685:	75 6e                	jne    c6f5 <_IO_stdin_used+0x6f5>
    c687:	69 63 61 74 69 6f 6e 	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
    c68e:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    c691:	6d                   	ins    DWORD PTR es:[rdi],dx
    c692:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    c699:	74 69                	je     c704 <_IO_stdin_used+0x704>
    c69b:	76 65                	jbe    c702 <_IO_stdin_used+0x702>
    c69d:	6c                   	ins    BYTE PTR es:[rdi],dx
    c69e:	79 20                	jns    c6c0 <_IO_stdin_used+0x6c0>
    c6a0:	50                   	push   rax
    c6a1:	72 6f                	jb     c712 <_IO_stdin_used+0x712>
    c6a3:	68 69 62 69 74       	push   0x74696269
    c6a8:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    c6ac:	00 20                	add    BYTE PTR [rax],ah
    c6ae:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c6b0:	73 74                	jae    c726 <_IO_stdin_used+0x726>
    c6b2:	20 50 72             	and    BYTE PTR [rax+0x72],dl
    c6b5:	65 63 65 64          	movsxd esp,DWORD PTR gs:[rbp+0x64]
    c6b9:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c6bb:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c6be:	56                   	push   rsi
    c6bf:	69 6f 6c 61 74 69 6f 	imul   ebp,DWORD PTR [rdi+0x6c],0x6f697461
    c6c6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c6c7:	20 29                	and    BYTE PTR [rcx],ch
    c6c9:	00 00                	add    BYTE PTR [rax],al
    c6cb:	00 00                	add    BYTE PTR [rax],al
    c6cd:	00 00                	add    BYTE PTR [rax],al
    c6cf:	00 20                	add    BYTE PTR [rax],ah
    c6d1:	50                   	push   rax
    c6d2:	72 65                	jb     c739 <_IO_stdin_used+0x739>
    c6d4:	63 65 64             	movsxd esp,DWORD PTR [rbp+0x64]
    c6d7:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c6d9:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c6dc:	43 75 74             	rex.XB jne c753 <_IO_stdin_used+0x753>
    c6df:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c6e0:	66 66 20 69 6e       	data16 data16 and BYTE PTR [rcx+0x6e],ch
    c6e5:	20 45 66             	and    BYTE PTR [rbp+0x66],al
    c6e8:	66 65 63 74 20 29    	movsxd si,DWORD PTR gs:[rax+riz*1+0x29]
    c6ee:	00 20                	add    BYTE PTR [rax],ah
    c6f0:	55                   	push   rbp
    c6f1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c6f2:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c6f6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c6f7:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c6fa:	64 65 3d 25 64 20 29 	fs gs cmp eax,0x29206425
    c701:	0a 00                	or     al,BYTE PTR [rax]
    c703:	00 00                	add    BYTE PTR [rax],al
    c705:	00 00                	add    BYTE PTR [rax],al
    c707:	00 20                	add    BYTE PTR [rax],ah
    c709:	53                   	push   rbx
    c70a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c70b:	75 72                	jne    c77f <_IO_stdin_used+0x77f>
    c70d:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c710:	51                   	push   rcx
    c711:	75 65                	jne    c778 <_IO_stdin_used+0x778>
    c713:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c714:	63 68 28             	movsxd ebp,DWORD PTR [rax+0x28]
    c717:	20 66 6c             	and    BYTE PTR [rsi+0x6c],ah
    c71a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c71b:	77 20                	ja     c73d <_IO_stdin_used+0x73d>
    c71d:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    c720:	74 72                	je     c794 <_IO_stdin_used+0x794>
    c722:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c723:	6c                   	ins    BYTE PTR es:[rdi],dx
    c724:	20 29                	and    BYTE PTR [rcx],ch
    c726:	00 20                	add    BYTE PTR [rax],ah
    c728:	52                   	push   rdx
    c729:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x28207463
    c730:	20 28 
    c732:	00 20                	add    BYTE PTR [rax],ah
    c734:	52                   	push   rdx
    c735:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c73c:	20 66 
    c73e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c73f:	72 20                	jb     c761 <_IO_stdin_used+0x761>
    c741:	4e                   	rex.WRX
    c742:	65 74 77             	gs je  c7bc <_IO_stdin_used+0x7bc>
    c745:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c746:	72 6b                	jb     c7b3 <_IO_stdin_used+0x7b3>
    c748:	20 29                	and    BYTE PTR [rcx],ch
    c74a:	00 20                	add    BYTE PTR [rax],ah
    c74c:	52                   	push   rdx
    c74d:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c754:	20 66 
    c756:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c757:	72 20                	jb     c779 <_IO_stdin_used+0x779>
    c759:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c75b:	73 74                	jae    c7d1 <_IO_stdin_used+0x7d1>
    c75d:	20 29                	and    BYTE PTR [rcx],ch
    c75f:	00 20                	add    BYTE PTR [rax],ah
    c761:	52                   	push   rdx
    c762:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c769:	20 66 
    c76b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c76c:	72 20                	jb     c78e <_IO_stdin_used+0x78e>
    c76e:	54                   	push   rsp
    c76f:	4f 53                	rex.WRXB push r11
    c771:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    c774:	64 20 4e 65          	and    BYTE PTR fs:[rsi+0x65],cl
    c778:	74 77                	je     c7f1 <_IO_stdin_used+0x7f1>
    c77a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c77b:	72 6b                	jb     c7e8 <_IO_stdin_used+0x7e8>
    c77d:	20 29                	and    BYTE PTR [rcx],ch
    c77f:	00 20                	add    BYTE PTR [rax],ah
    c781:	52                   	push   rdx
    c782:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c789:	20 66 
    c78b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c78c:	72 20                	jb     c7ae <_IO_stdin_used+0x7ae>
    c78e:	54                   	push   rsp
    c78f:	4f 53                	rex.WRXB push r11
    c791:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    c794:	64 20 48 6f          	and    BYTE PTR fs:[rax+0x6f],cl
    c798:	73 74                	jae    c80e <_IO_stdin_used+0x80e>
    c79a:	20 29                	and    BYTE PTR [rcx],ch
    c79c:	00 20                	add    BYTE PTR [rax],ah
    c79e:	65 63 68 6f          	movsxd ebp,DWORD PTR gs:[rax+0x6f]
    c7a2:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    c7a5:	71 75                	jno    c81c <_IO_stdin_used+0x81c>
    c7a7:	65 73 74             	gs jae c81e <_IO_stdin_used+0x81e>
    c7aa:	00 00                	add    BYTE PTR [rax],al
    c7ac:	00 00                	add    BYTE PTR [rax],al
    c7ae:	00 00                	add    BYTE PTR [rax],al
    c7b0:	20 4d 6f             	and    BYTE PTR [rbp+0x6f],cl
    c7b3:	62                   	(bad)  
    c7b4:	69 6c 65 20 49 50 20 	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x41205049
    c7bb:	41 
    c7bc:	64 76 65             	fs jbe c824 <_IO_stdin_used+0x824>
    c7bf:	72 74                	jb     c835 <_IO_stdin_used+0x835>
    c7c1:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    c7c8:	20 28                	and    BYTE PTR [rax],ch
    c7ca:	4e 6f                	rex.WRX outs dx,DWORD PTR ds:[rsi]
    c7cc:	72 6d                	jb     c83b <_IO_stdin_used+0x83b>
    c7ce:	61                   	(bad)  
    c7cf:	6c                   	ins    BYTE PTR es:[rdi],dx
    c7d0:	20 52 6f             	and    BYTE PTR [rdx+0x6f],dl
    c7d3:	75 74                	jne    c849 <_IO_stdin_used+0x849>
    c7d5:	65 72 20             	gs jb  c7f8 <_IO_stdin_used+0x7f8>
    c7d8:	41                   	rex.B
    c7d9:	64 76 65             	fs jbe c841 <_IO_stdin_used+0x841>
    c7dc:	72 74                	jb     c852 <_IO_stdin_used+0x852>
    c7de:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    c7e5:	20 29                	and    BYTE PTR [rcx],ch
    c7e7:	20 29                	and    BYTE PTR [rcx],ch
    c7e9:	0a 20                	or     ah,BYTE PTR [rax]
    c7eb:	00 00                	add    BYTE PTR [rax],al
    c7ed:	00 00                	add    BYTE PTR [rax],al
    c7ef:	00 20                	add    BYTE PTR [rax],ah
    c7f1:	52                   	push   rdx
    c7f2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c7f3:	75 74                	jne    c869 <_IO_stdin_used+0x869>
    c7f5:	65 72 20             	gs jb  c818 <_IO_stdin_used+0x818>
    c7f8:	41                   	rex.B
    c7f9:	64 76 65             	fs jbe c861 <_IO_stdin_used+0x861>
    c7fc:	72 74                	jb     c872 <_IO_stdin_used+0x872>
    c7fe:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    c805:	20 28                	and    BYTE PTR [rax],ch
    c807:	55                   	push   rbp
    c808:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c809:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c80d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c80e:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c811:	64 65 3a 20          	fs cmp ah,BYTE PTR gs:[rax]
    c815:	25 64 20 29 20       	and    eax,0x20292064
    c81a:	29 0a                	sub    DWORD PTR [rdx],ecx
    c81c:	00 20                	add    BYTE PTR [rax],ah
    c81e:	52                   	push   rdx
    c81f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c820:	75 74                	jne    c896 <_IO_stdin_used+0x896>
    c822:	65 72 20             	gs jb  c845 <_IO_stdin_used+0x845>
    c825:	53                   	push   rbx
    c826:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c827:	6c                   	ins    BYTE PTR es:[rdi],dx
    c828:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    c82f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c830:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c831:	20 29                	and    BYTE PTR [rcx],ch
    c833:	00 20                	add    BYTE PTR [rax],ah
    c835:	54                   	push   rsp
    c836:	69 6d 65 20 54 6f 20 	imul   ebp,DWORD PTR [rbp+0x65],0x206f5420
    c83d:	4c 69 76 65 20 65 78 	imul   r14,QWORD PTR [rsi+0x65],0x63786520
    c844:	63 
    c845:	65 65 64 65 64 00 20 	gs gs fs gs add BYTE PTR fs:[rax],ah
    c84c:	28 20                	sub    BYTE PTR [rax],ah
    c84e:	74 74                	je     c8c4 <_IO_stdin_used+0x8c4>
    c850:	6c                   	ins    BYTE PTR es:[rdi],dx
    c851:	20 65 78             	and    BYTE PTR [rbp+0x78],ah
    c854:	63 65 65             	movsxd esp,DWORD PTR [rbp+0x65]
    c857:	64 65 64 20 69 6e    	fs gs and BYTE PTR fs:[rcx+0x6e],ch
    c85d:	20 74 72 61          	and    BYTE PTR [rdx+rsi*2+0x61],dh
    c861:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c862:	73 69                	jae    c8cd <_IO_stdin_used+0x8cd>
    c864:	74 20                	je     c886 <_IO_stdin_used+0x886>
    c866:	29 00                	sub    DWORD PTR [rax],eax
    c868:	20 28                	and    BYTE PTR [rax],ch
    c86a:	20 46 72             	and    BYTE PTR [rsi+0x72],al
    c86d:	61                   	(bad)  
    c86e:	67 6d                	ins    DWORD PTR es:[edi],dx
    c870:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c872:	74 20                	je     c894 <_IO_stdin_used+0x894>
    c874:	52                   	push   rdx
    c875:	65 61                	gs (bad) 
    c877:	73 73                	jae    c8ec <_IO_stdin_used+0x8ec>
    c879:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    c87b:	62                   	(bad)  
    c87c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c87d:	79 20                	jns    c89f <_IO_stdin_used+0x89f>
    c87f:	74 69                	je     c8ea <_IO_stdin_used+0x8ea>
    c881:	6d                   	ins    DWORD PTR es:[rdi],dx
    c882:	65 20 65 78          	and    BYTE PTR gs:[rbp+0x78],ah
    c886:	63 65 65             	movsxd esp,DWORD PTR [rbp+0x65]
    c889:	64 65 64 20 29       	fs gs and BYTE PTR fs:[rcx],ch
    c88e:	00 20                	add    BYTE PTR [rax],ah
    c890:	28 20                	sub    BYTE PTR [rax],ah
    c892:	55                   	push   rbp
    c893:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c894:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c898:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c899:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c89c:	64 65 3a 20          	fs cmp ah,BYTE PTR gs:[rax]
    c8a0:	25 64 29 0a 00       	and    eax,0xa2964
    c8a5:	20 74 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dh
    c8a9:	65 73 74             	gs jae c920 <_IO_stdin_used+0x920>
    c8ac:	61                   	(bad)  
    c8ad:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8ae:	70 20                	jo     c8d0 <_IO_stdin_used+0x8d0>
    c8b0:	72 65                	jb     c917 <_IO_stdin_used+0x917>
    c8b2:	71 75                	jno    c929 <_IO_stdin_used+0x929>
    c8b4:	65 73 74             	gs jae c92b <_IO_stdin_used+0x92b>
    c8b7:	00 20                	add    BYTE PTR [rax],ah
    c8b9:	74 69                	je     c924 <_IO_stdin_used+0x924>
    c8bb:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8bc:	65 73 74             	gs jae c933 <_IO_stdin_used+0x933>
    c8bf:	61                   	(bad)  
    c8c0:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8c1:	70 20                	jo     c8e3 <_IO_stdin_used+0x8e3>
    c8c3:	72 65                	jb     c92a <_IO_stdin_used+0x92a>
    c8c5:	70 6c                	jo     c933 <_IO_stdin_used+0x933>
    c8c7:	79 00                	jns    c8c9 <_IO_stdin_used+0x8c9>
    c8c9:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    c8cc:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c8d0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c8d1:	20 69 63             	and    BYTE PTR [rcx+0x63],ch
    c8d4:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8d5:	70 20                	jo     c8f7 <_IO_stdin_used+0x8f7>
    c8d7:	74 79                	je     c952 <_IO_stdin_used+0x952>
    c8d9:	70 65                	jo     c940 <_IO_stdin_used+0x940>
    c8db:	3d 25 64 00 00       	cmp    eax,0x6425
    c8e0:	c8 77 ff ff          	enter  0xff77,0xff
    c8e4:	eb 7a                	jmp    c960 <_IO_stdin_used+0x960>
    c8e6:	ff                   	(bad)  
    c8e7:	ff                   	(bad)  
    c8e8:	eb 7a                	jmp    c964 <_IO_stdin_used+0x964>
    c8ea:	ff                   	(bad)  
    c8eb:	ff                   	(bad)  
    c8ec:	d9 77 ff             	fnstenv [rdi-0x1]
    c8ef:	ff 46 79             	inc    DWORD PTR [rsi+0x79]
    c8f2:	ff                   	(bad)  
    c8f3:	ff 57 79             	call   QWORD PTR [rdi+0x79]
    c8f6:	ff                   	(bad)  
    c8f7:	ff                   	(bad)  
    c8f8:	eb 7a                	jmp    c974 <_IO_stdin_used+0x974>
    c8fa:	ff                   	(bad)  
    c8fb:	ff                   	(bad)  
    c8fc:	eb 7a                	jmp    c978 <_IO_stdin_used+0x978>
    c8fe:	ff                   	(bad)  
    c8ff:	ff f4                	push   rsp
    c901:	79 ff                	jns    c902 <_IO_stdin_used+0x902>
    c903:	ff 05 7a ff ff 50    	inc    DWORD PTR [rip+0x50ffff7a]        # 5100c883 <_end+0x50ed1443>
    c909:	7a ff                	jp     c90a <_IO_stdin_used+0x90a>
    c90b:	ff 61 7a             	jmp    QWORD PTR [rcx+0x7a]
    c90e:	ff                   	(bad)  
    c90f:	ff                   	(bad)  
    c910:	eb 7a                	jmp    c98c <_IO_stdin_used+0x98c>
    c912:	ff                   	(bad)  
    c913:	ff cf                	dec    edi
    c915:	7a ff                	jp     c916 <_IO_stdin_used+0x916>
    c917:	ff                   	(bad)  
    c918:	dd 7a ff             	fnstsw WORD PTR [rdx-0x1]
    c91b:	ff                   	(bad)  
    c91c:	e8 77 ff ff f9       	call   fffffffffa00c898 <_end+0xfffffffff9ed1458>
    c921:	77 ff                	ja     c922 <_IO_stdin_used+0x922>
    c923:	ff 0a                	dec    DWORD PTR [rdx]
    c925:	78 ff                	js     c926 <_IO_stdin_used+0x926>
    c927:	ff 1b                	call   FWORD PTR [rbx]
    c929:	78 ff                	js     c92a <_IO_stdin_used+0x92a>
    c92b:	ff 2c 78             	jmp    FWORD PTR [rax+rdi*2]
    c92e:	ff                   	(bad)  
    c92f:	ff                   	(bad)  
    c930:	3d 78 ff ff 4e       	cmp    eax,0x4effff78
    c935:	78 ff                	js     c936 <_IO_stdin_used+0x936>
    c937:	ff 5f 78             	call   FWORD PTR [rdi+0x78]
    c93a:	ff                   	(bad)  
    c93b:	ff 70 78             	push   QWORD PTR [rax+0x78]
    c93e:	ff                   	(bad)  
    c93f:	ff 81 78 ff ff 8f    	inc    DWORD PTR [rcx-0x70000088]
    c945:	78 ff                	js     c946 <_IO_stdin_used+0x946>
    c947:	ff 9d 78 ff ff ab    	call   FWORD PTR [rbp-0x54000088]
    c94d:	78 ff                	js     c94e <_IO_stdin_used+0x94e>
    c94f:	ff                   	(bad)  
    c950:	b9 78 ff ff c7       	mov    ecx,0xc7ffff78
    c955:	78 ff                	js     c956 <_IO_stdin_used+0x956>
    c957:	ff d5                	call   rbp
    c959:	78 ff                	js     c95a <_IO_stdin_used+0x95a>
    c95b:	ff 00                	inc    DWORD PTR [rax]
    c95d:	00 00                	add    BYTE PTR [rax],al
    c95f:	00 1b                	add    BYTE PTR [rbx],bl
    c961:	5b                   	pop    rbx
    c962:	33 32                	xor    esi,DWORD PTR [rdx]
    c964:	6d                   	ins    DWORD PTR es:[rdi],dx
    c965:	00 25 73 00 49 50    	add    BYTE PTR [rip+0x50490073],ah        # 5049c9de <_end+0x5036159e>
    c96b:	76 34                	jbe    c9a1 <_IO_stdin_used+0x9a1>
    c96d:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642603e6 <_end+0x64124fa6>
    c973:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325e9b7 <_end+0x73123577>
    c979:	3a 25 64 0a 00 09    	cmp    ah,BYTE PTR [rip+0x9000a64]        # 900d3e3 <_end+0x8ed1fa3>
    c97f:	54                   	push   rsp
    c980:	43 50                	rex.XB push r8
    c982:	20 5b 00             	and    BYTE PTR [rbx+0x0],bl
    c985:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c988:	33 6d 00             	xor    ebp,DWORD PTR [rbp+0x0]
    c98b:	25 73 20 41 43       	and    eax,0x43412073
    c990:	4b 20 00             	rex.WXB and BYTE PTR [r8],al
    c993:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c996:	37                   	(bad)  
    c997:	6d                   	ins    DWORD PTR es:[rdi],dx
    c998:	00 25 73 20 46 49    	add    BYTE PTR [rip+0x49462073],ah        # 4946ea11 <_end+0x493335d1>
    c99e:	4e 20 00             	rex.WRX and BYTE PTR [rax],r8b
    c9a1:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9a4:	34 6d                	xor    al,0x6d
    c9a6:	00 25 73 20 50 53    	add    BYTE PTR [rip+0x53502073],ah        # 5350ea1f <_end+0x533d35df>
    c9ac:	48 20 00             	rex.W and BYTE PTR [rax],al
    c9af:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9b2:	31 6d 00             	xor    DWORD PTR [rbp+0x0],ebp
    c9b5:	25 73 20 52 53       	and    eax,0x53522073
    c9ba:	54                   	push   rsp
    c9bb:	20 00                	and    BYTE PTR [rax],al
    c9bd:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9c0:	35 6d 00 25 73       	xor    eax,0x7325006d
    c9c5:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    c9c8:	4e 20 00             	rex.WRX and BYTE PTR [rax],r8b
    c9cb:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9ce:	36 6d                	ss ins DWORD PTR es:[rdi],dx
    c9d0:	00 25 73 20 55 52    	add    BYTE PTR [rip+0x52552073],ah        # 5255ea49 <_end+0x52423609>
    c9d6:	47 20 00             	rex.RXB and BYTE PTR [r8],r8b
    c9d9:	5d                   	pop    rbp
    c9da:	00 1b                	add    BYTE PTR [rbx],bl
    c9dc:	5b                   	pop    rbx
    c9dd:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    c9e0:	25 73 53 75 73       	and    eax,0x73755373
    c9e5:	70 69                	jo     ca50 <_IO_stdin_used+0xa50>
    c9e7:	63 69 6f             	movsxd ebp,DWORD PTR [rcx+0x6f]
    c9ea:	75 73                	jne    ca5f <_IO_stdin_used+0xa5f>
    c9ec:	20 54 43 50          	and    BYTE PTR [rbx+rax*2+0x50],dl
    c9f0:	20 50 61             	and    BYTE PTR [rax+0x61],dl
    c9f3:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    c9f6:	74 20                	je     ca18 <_IO_stdin_used+0xa18>
    c9f8:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c9fa:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    c9fd:	74 65                	je     ca64 <_IO_stdin_used+0xa64>
    c9ff:	72 65                	jb     ca66 <_IO_stdin_used+0xa66>
    ca01:	64 3a 20             	cmp    ah,BYTE PTR fs:[rax]
    ca04:	25 73 3a 25 64       	and    eax,0x64253a73
    ca09:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325ea4d <_end+0x7312360d>
    ca0f:	3a 25 64 2c 20 25    	cmp    ah,BYTE PTR [rip+0x25202c64]        # 2520f679 <_end+0x250d4239>
    ca15:	64 20 66 6c          	and    BYTE PTR fs:[rsi+0x6c],ah
    ca19:	61                   	(bad)  
    ca1a:	67 73 25             	addr32 jae ca42 <_IO_stdin_used+0xa42>
    ca1d:	73 0a                	jae    ca29 <_IO_stdin_used+0xa29>
    ca1f:	00 1b                	add    BYTE PTR [rbx],bl
    ca21:	5b                   	pop    rbx
    ca22:	39 36                	cmp    DWORD PTR [rsi],esi
    ca24:	6d                   	ins    DWORD PTR es:[rdi],dx
    ca25:	00 25 73 00 49 50    	add    BYTE PTR [rip+0x50490073],ah        # 5049ca9e <_end+0x5036165e>
    ca2b:	76 34                	jbe    ca61 <_IO_stdin_used+0xa61>
    ca2d:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642604a6 <_end+0x64125066>
    ca33:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325ea77 <_end+0x73123637>
    ca39:	3a 25 64 20 55 44    	cmp    ah,BYTE PTR [rip+0x44552064]        # 4455eaa3 <_end+0x44423663>
    ca3f:	50                   	push   rax
    ca40:	0a 00                	or     al,BYTE PTR [rax]
    ca42:	1b 5b 30             	sbb    ebx,DWORD PTR [rbx+0x30]
    ca45:	6d                   	ins    DWORD PTR es:[rdi],dx
    ca46:	00 00                	add    BYTE PTR [rax],al
    ca48:	49 50                	rex.WB push r8
    ca4a:	76 34                	jbe    ca80 <_IO_stdin_used+0xa80>
    ca4c:	20 49 47             	and    BYTE PTR [rcx+0x47],cl
    ca4f:	4d 50                	rex.WRB push r8
    ca51:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2deaca <_end+0x3e1a368a>
    ca57:	20 25 73 20 5b 00    	and    BYTE PTR [rip+0x5b2073],ah        # 5bead0 <_end+0x483690>
    ca5d:	20 4d 65             	and    BYTE PTR [rbp+0x65],cl
    ca60:	6d                   	ins    DWORD PTR es:[rdi],dx
    ca61:	62                   	(bad)  
    ca62:	65 72 73             	gs jb  cad8 <_IO_stdin_used+0xad8>
    ca65:	68 69 70 20 51       	push   0x51207069
    ca6a:	75 65                	jne    cad1 <_IO_stdin_used+0xad1>
    ca6c:	72 79                	jb     cae7 <_IO_stdin_used+0xae7>
    ca6e:	20 5d 00             	and    BYTE PTR [rbp+0x0],bl
    ca71:	00 00                	add    BYTE PTR [rax],al
    ca73:	00 00                	add    BYTE PTR [rax],al
    ca75:	00 00                	add    BYTE PTR [rax],al
    ca77:	00 20                	add    BYTE PTR [rax],ah
    ca79:	4d                   	rex.WRB
    ca7a:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    ca7c:	62                   	(bad)  
    ca7d:	65 72 73             	gs jb  caf3 <_IO_stdin_used+0xaf3>
    ca80:	68 69 70 20 52       	push   0x52207069
    ca85:	65 70 6f             	gs jo  caf7 <_IO_stdin_used+0xaf7>
    ca88:	72 74                	jb     cafe <_IO_stdin_used+0xafe>
    ca8a:	20 2f                	and    BYTE PTR [rdi],ch
    ca8c:	20 4a 6f             	and    BYTE PTR [rdx+0x6f],cl
    ca8f:	69 6e 20 67 72 6f 75 	imul   ebp,DWORD PTR [rsi+0x20],0x756f7267
    ca96:	70 20                	jo     cab8 <_IO_stdin_used+0xab8>
    ca98:	25 73 20 66 6f       	and    eax,0x6f662073
    ca9d:	72 20                	jb     cabf <_IO_stdin_used+0xabf>
    ca9f:	61                   	(bad)  
    caa0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    caa1:	79 20                	jns    cac3 <_IO_stdin_used+0xac3>
    caa3:	73 6f                	jae    cb14 <_IO_stdin_used+0xb14>
    caa5:	75 72                	jne    cb19 <_IO_stdin_used+0xb19>
    caa7:	63 65 73             	movsxd esp,DWORD PTR [rbp+0x73]
    caaa:	20 5d 0a             	and    BYTE PTR [rbp+0xa],bl
    caad:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    cab0:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    cab4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cab5:	20 49 47             	and    BYTE PTR [rcx+0x47],cl
    cab8:	4d 50                	rex.WRB push r8
    caba:	20 54 79 70          	and    BYTE PTR [rcx+rdi*2+0x70],dl
    cabe:	65 3d 25 64 20 5d    	gs cmp eax,0x5d206425
    cac4:	0a 00                	or     al,BYTE PTR [rax]
    cac6:	25 64 2d 25 30       	and    eax,0x30252d64
    cacb:	32 64 2d 25          	xor    ah,BYTE PTR [rbp+rbp*1+0x25]
    cacf:	30 32                	xor    BYTE PTR [rdx],dh
    cad1:	64 20 25 30 32 64 3a 	and    BYTE PTR fs:[rip+0x3a643230],ah        # 3a64fd08 <_end+0x3a5148c8>
    cad8:	25 30 32 64 3a       	and    eax,0x3a643230
    cadd:	25 30 32 64 00       	and    eax,0x643230
    cae2:	25 73 20 25 73       	and    eax,0x73252073
    cae7:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2deb60 <_end+0x3e1a3720>
    caed:	20 25 73 0a 00 25    	and    BYTE PTR [rip+0x25000a73],ah        # 2500d566 <_end+0x24ed2126>
    caf3:	73 20                	jae    cb15 <_IO_stdin_used+0xb15>
    caf5:	25 73 20 25 73       	and    eax,0x73252073
    cafa:	3a 25 64 20 2d 3e    	cmp    ah,BYTE PTR [rip+0x3e2d2064]        # 3e2deb64 <_end+0x3e1a3724>
    cb00:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64260579 <_end+0x64125139>
    cb06:	0a 00                	or     al,BYTE PTR [rax]
    cb08:	25 73 00 61 00       	and    eax,0x610073
    cb0d:	25 30 32 78 00       	and    eax,0x783230
    cb12:	00 00                	add    BYTE PTR [rax],al
    cb14:	00 00                	add    BYTE PTR [rax],al
    cb16:	00 00                	add    BYTE PTR [rax],al
    cb18:	72 00                	jb     cb1a <_IO_stdin_used+0xb1a>
    cb1a:	00 00                	add    BYTE PTR [rax],al
    cb1c:	00 00                	add    BYTE PTR [rax],al
    cb1e:	00 00                	add    BYTE PTR [rax],al
    cb20:	45 72 72             	rex.RB jb cb95 <_IO_stdin_used+0xb95>
    cb23:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb24:	72 20                	jb     cb46 <_IO_stdin_used+0xb46>
    cb26:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb27:	70 65                	jo     cb8e <_IO_stdin_used+0xb8e>
    cb29:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cb2a:	69 6e 67 20 63 6f 6e 	imul   ebp,DWORD PTR [rsi+0x67],0x6e6f6320
    cb31:	66 69 67 75 72 61    	imul   sp,WORD PTR [rdi+0x75],0x6172
    cb37:	74 69                	je     cba2 <_IO_stdin_used+0xba2>
    cb39:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb3a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cb3b:	20 66 69             	and    BYTE PTR [rsi+0x69],ah
    cb3e:	6c                   	ins    BYTE PTR es:[rdi],dx
    cb3f:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    cb42:	25 73 0a 00 0a       	and    eax,0xa000a73
    cb47:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    cb4a:	72 69                	jb     cbb5 <_IO_stdin_used+0xbb5>
    cb4c:	63 74 5f 69          	movsxd esi,DWORD PTR [rdi+rbx*2+0x69]
    cb50:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
    cb53:	5f                   	pop    rdi
    cb54:	74 69                	je     cbbf <_IO_stdin_used+0xbbf>
    cb56:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb57:	65 73 74             	gs jae cbce <_IO_stdin_used+0xbce>
    cb5a:	61                   	(bad)  
    cb5b:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb5c:	70 5f                	jo     cbbd <_IO_stdin_used+0xbbd>
    cb5e:	72 65                	jb     cbc5 <_IO_stdin_used+0xbc5>
    cb60:	71 3d                	jno    cb9f <_IO_stdin_used+0xb9f>
    cb62:	00 59 45             	add    BYTE PTR [rcx+0x45],bl
    cb65:	53                   	push   rbx
    cb66:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    cb69:	72 69                	jb     cbd4 <_IO_stdin_used+0xbd4>
    cb6b:	63 74 5f 6e          	movsxd esi,DWORD PTR [rdi+rbx*2+0x6e]
    cb6f:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb70:	61                   	(bad)  
    cb71:	70 5f                	jo     cbd2 <_IO_stdin_used+0xbd2>
    cb73:	68 6f 73 74 5f       	push   0x5f74736f
    cb78:	61                   	(bad)  
    cb79:	6c                   	ins    BYTE PTR es:[rdi],dx
    cb7a:	69 76 65 5f 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x6568635f
    cb81:	63 6b 3d             	movsxd ebp,DWORD PTR [rbx+0x3d]
    cb84:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
    cb87:	65 61                	gs (bad) 
    cb89:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cb8a:	5f                   	pop    rdi
    cb8b:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    cb8e:	61                   	(bad)  
    cb8f:	79 5f                	jns    cbf0 <_IO_stdin_used+0xbf0>
    cb91:	69 6e 5f 70 61 63 6b 	imul   ebp,DWORD PTR [rsi+0x5f],0x6b636170
    cb98:	65 74 73             	gs je  cc0e <_IO_stdin_used+0xc0e>
    cb9b:	3d 00 43 6c 65       	cmp    eax,0x656c4300
    cba0:	61                   	(bad)  
    cba1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cba2:	20 64 65 6c          	and    BYTE PTR [rbp+riz*2+0x6c],ah
    cba6:	61                   	(bad)  
    cba7:	79 20                	jns    cbc9 <_IO_stdin_used+0xbc9>
    cba9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbaa:	65 65 64 73 20       	gs gs fs jae cbcf <_IO_stdin_used+0xbcf>
    cbaf:	61                   	(bad)  
    cbb0:	20 76 61             	and    BYTE PTR [rsi+0x61],dh
    cbb3:	6c                   	ins    BYTE PTR es:[rdi],dx
    cbb4:	75 65                	jne    cc1b <_IO_stdin_used+0xc1b>
    cbb6:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
    cbb9:	65 61                	gs (bad) 
    cbbb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbbc:	5f                   	pop    rdi
    cbbd:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    cbc0:	61                   	(bad)  
    cbc1:	79 5f                	jns    cc22 <_IO_stdin_used+0xc22>
    cbc3:	69 6e 5f 6d 73 65 63 	imul   ebp,DWORD PTR [rsi+0x5f],0x6365736d
    cbca:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cbcb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbcc:	64 73 3d             	fs jae cc0c <_IO_stdin_used+0xc0c>
    cbcf:	00 75 73             	add    BYTE PTR [rbp+0x73],dh
    cbd2:	65 5f                	gs pop rdi
    cbd4:	73 71                	jae    cc47 <_IO_stdin_used+0xc47>
    cbd6:	6c                   	ins    BYTE PTR es:[rdi],dx
    cbd7:	69 74 65 3d 00 73 71 	imul   esi,DWORD PTR [rbp+riz*2+0x3d],0x6c717300
    cbde:	6c 
    cbdf:	69 74 65 5f 64 61 74 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x61746164
    cbe6:	61 
    cbe7:	62 61                	(bad)  
    cbe9:	73 65                	jae    cc50 <_IO_stdin_used+0xc50>
    cbeb:	5f                   	pop    rdi
    cbec:	70 61                	jo     cc4f <_IO_stdin_used+0xc4f>
    cbee:	74 68                	je     cc58 <_IO_stdin_used+0xc58>
    cbf0:	3d 00 73 71 6c       	cmp    eax,0x6c717300
    cbf5:	69 74 65 5f 64 61 74 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x61746164
    cbfc:	61 
    cbfd:	62 61                	(bad)  
    cbff:	73 65                	jae    cc66 <_IO_stdin_used+0xc66>
    cc01:	5f                   	pop    rdi
    cc02:	70 61                	jo     cc65 <_IO_stdin_used+0xc65>
    cc04:	74 68                	je     cc6e <_IO_stdin_used+0xc6e>
    cc06:	3a 20                	cmp    ah,BYTE PTR [rax]
    cc08:	25 73 00 69 6e       	and    eax,0x6e690073
    cc0d:	5f                   	pop    rdi
    cc0e:	61                   	(bad)  
    cc0f:	64 61                	fs (bad) 
    cc11:	70 74                	jo     cc87 <_IO_stdin_used+0xc87>
    cc13:	65 72 3d             	gs jb  cc53 <_IO_stdin_used+0xc53>
    cc16:	00 00                	add    BYTE PTR [rax],al
    cc18:	72 75                	jb     cc8f <_IO_stdin_used+0xc8f>
    cc1a:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc1b:	65 5f                	gs pop rdi
    cc1d:	70 61                	jo     cc80 <_IO_stdin_used+0xc80>
    cc1f:	72 73                	jb     cc94 <_IO_stdin_used+0xc94>
    cc21:	65 72 2e             	gs jb  cc52 <_IO_stdin_used+0xc52>
    cc24:	63 3a                	movsxd edi,DWORD PTR [rdx]
    cc26:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    cc29:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc2a:	65 5f                	gs pop rdi
    cc2c:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc2d:	69 62 72 61 72 79 5f 	imul   esp,DWORD PTR [rdx+0x72],0x5f797261
    cc34:	70 61                	jo     cc97 <_IO_stdin_used+0xc97>
    cc36:	72 73                	jb     ccab <_IO_stdin_used+0xcab>
    cc38:	65 72 3a             	gs jb  cc75 <_IO_stdin_used+0xc75>
    cc3b:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    cc3e:	5f                   	pop    rdi
    cc3f:	61                   	(bad)  
    cc40:	64 61                	fs (bad) 
    cc42:	70 74                	jo     ccb8 <_IO_stdin_used+0xcb8>
    cc44:	65 72 3a             	gs jb  cc81 <_IO_stdin_used+0xc81>
    cc47:	20 25 73 00 6f 75    	and    BYTE PTR [rip+0x756f0073],ah        # 756fccc0 <_end+0x755c1880>
    cc4d:	74 5f                	je     ccae <_IO_stdin_used+0xcae>
    cc4f:	61                   	(bad)  
    cc50:	64 61                	fs (bad) 
    cc52:	70 74                	jo     ccc8 <_IO_stdin_used+0xcc8>
    cc54:	65 72 3d             	gs jb  cc94 <_IO_stdin_used+0xc94>
    cc57:	00 72 75             	add    BYTE PTR [rdx+0x75],dh
    cc5a:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc5b:	65 5f                	gs pop rdi
    cc5d:	70 61                	jo     ccc0 <_IO_stdin_used+0xcc0>
    cc5f:	72 73                	jb     ccd4 <_IO_stdin_used+0xcd4>
    cc61:	65 72 2e             	gs jb  cc92 <_IO_stdin_used+0xc92>
    cc64:	63 3a                	movsxd edi,DWORD PTR [rdx]
    cc66:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    cc69:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc6a:	65 5f                	gs pop rdi
    cc6c:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc6d:	69 62 72 61 72 79 5f 	imul   esp,DWORD PTR [rdx+0x72],0x5f797261
    cc74:	70 61                	jo     ccd7 <_IO_stdin_used+0xcd7>
    cc76:	72 73                	jb     cceb <_IO_stdin_used+0xceb>
    cc78:	65 72 3a             	gs jb  ccb5 <_IO_stdin_used+0xcb5>
    cc7b:	20 6f 75             	and    BYTE PTR [rdi+0x75],ch
    cc7e:	74 5f                	je     ccdf <_IO_stdin_used+0xcdf>
    cc80:	61                   	(bad)  
    cc81:	64 61                	fs (bad) 
    cc83:	70 74                	jo     ccf9 <_IO_stdin_used+0xcf9>
    cc85:	65 72 3a             	gs jb  ccc2 <_IO_stdin_used+0xcc2>
    cc88:	20 25 73 00 6d 6f    	and    BYTE PTR [rip+0x6f6d0073],ah        # 6f6dcd01 <_end+0x6f5a18c1>
    cc8e:	64 65 3d 00 6d 6f 64 	fs gs cmp eax,0x646f6d00
    cc95:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    cc98:	25 73 00 52 75       	and    eax,0x75520073
    cc9d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cc9e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cc9f:	69 6e 67 20 69 6e 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206e6920
    cca6:	00 32                	add    BYTE PTR [rdx],dh
    cca8:	00 49 50             	add    BYTE PTR [rcx+0x50],cl
    ccab:	53                   	push   rbx
    ccac:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    ccaf:	64 65 20 61 73       	fs and BYTE PTR gs:[rcx+0x73],ah
    ccb4:	20 70 65             	and    BYTE PTR [rax+0x65],dh
    ccb7:	72 20                	jb     ccd9 <_IO_stdin_used+0xcd9>
    ccb9:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    ccbc:	66 69 67 00 49 44    	imul   sp,WORD PTR [rdi+0x0],0x4449
    ccc2:	53                   	push   rbx
    ccc3:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    ccc6:	64 65 20 61 73       	fs and BYTE PTR gs:[rcx+0x73],ah
    cccb:	20 70 65             	and    BYTE PTR [rax+0x65],dh
    ccce:	72 20                	jb     ccf0 <_IO_stdin_used+0xcf0>
    ccd0:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    ccd3:	66 69 67 00 6c 6f    	imul   sp,WORD PTR [rdi+0x0],0x6f6c
    ccd9:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
    ccdc:	69 70 3d 00 6c 6f 63 	imul   esi,DWORD PTR [rax+0x3d],0x636f6c00
    cce3:	61                   	(bad)  
    cce4:	6c                   	ins    BYTE PTR es:[rdi],dx
    cce5:	5f                   	pop    rdi
    cce6:	69 70 20 61 73 20 70 	imul   esi,DWORD PTR [rax+0x20],0x70207361
    cced:	65 72 20             	gs jb  cd10 <_IO_stdin_used+0xd10>
    ccf0:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    ccf3:	66 69 67 3a 20 25    	imul   sp,WORD PTR [rdi+0x3a],0x2520
    ccf9:	73 00                	jae    ccfb <_IO_stdin_used+0xcfb>
    ccfb:	64 65 66 67 77 3d    	fs gs data16 addr32 ja cd3e <_IO_stdin_used+0xd3e>
    cd01:	00 75 73             	add    BYTE PTR [rbp+0x73],dh
    cd04:	65 5f                	gs pop rdi
    cd06:	73 70                	jae    cd78 <_IO_stdin_used+0xd78>
    cd08:	69 3d 00 56 49 47 49 	imul   edi,DWORD PTR [rip+0x47495600],0x53204c49        # 474a2312 <_end+0x47366ed2>
    cd0f:	4c 20 53 
    cd12:	50                   	push   rax
    cd13:	49 20 73 65          	rex.WB and BYTE PTR [r11+0x65],sil
    cd17:	72 76                	jb     cd8f <_IO_stdin_used+0xd8f>
    cd19:	69 63 65 20 61 63 74 	imul   esp,DWORD PTR [rbx+0x65],0x74636120
    cd20:	69 76 65 00 48 4f 4d 	imul   esi,DWORD PTR [rsi+0x65],0x4d4f4800
    cd27:	45 5f                	rex.RB pop r15
    cd29:	4e                   	rex.WRX
    cd2a:	45 54                	rex.RB push r12
    cd2c:	3d 00 48 4f 4d       	cmp    eax,0x4d4f4800
    cd31:	45 5f                	rex.RB pop r15
    cd33:	4e                   	rex.WRX
    cd34:	45 54                	rex.RB push r12
    cd36:	5f                   	pop    rdi
    cd37:	4d                   	rex.WRB
    cd38:	41 53                	push   r11
    cd3a:	4b 3d 00 6c 6f 63    	rex.WXB cmp rax,0x636f6c00
    cd40:	61                   	(bad)  
    cd41:	74 69                	je     cdac <_IO_stdin_used+0xdac>
    cd43:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd44:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd45:	3d 00 65 78 74       	cmp    eax,0x74786500
    cd4a:	65 72 6e             	gs jb  cdbb <_IO_stdin_used+0xdbb>
    cd4d:	61                   	(bad)  
    cd4e:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd4f:	00 53 79             	add    BYTE PTR [rbx+0x79],dl
    cd52:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd53:	74 61                	je     cdb6 <_IO_stdin_used+0xdb6>
    cd55:	78 20                	js     cd77 <_IO_stdin_used+0xd77>
    cd57:	65 72 72             	gs jb  cdcc <_IO_stdin_used+0xdcc>
    cd5a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd5b:	72 20                	jb     cd7d <_IO_stdin_used+0xd7d>
    cd5d:	61                   	(bad)  
    cd5e:	74 20                	je     cd80 <_IO_stdin_used+0xd80>
    cd60:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd61:	69 6e 65 20 25 64 3a 	imul   ebp,DWORD PTR [rsi+0x65],0x3a642520
    cd68:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # d7e1 <_IO_stdin_used+0x17e1>
    cd6e:	00 00                	add    BYTE PTR [rax],al
    cd70:	45 72 72             	rex.RB jb cde5 <_IO_stdin_used+0xde5>
    cd73:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd74:	72 20                	jb     cd96 <_IO_stdin_used+0xd96>
    cd76:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd77:	70 65                	jo     cdde <_IO_stdin_used+0xdde>
    cd79:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd7a:	69 6e 67 20 72 75 6c 	imul   ebp,DWORD PTR [rsi+0x67],0x6c757220
    cd81:	65 20 66 69          	and    BYTE PTR gs:[rsi+0x69],ah
    cd85:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd86:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    cd89:	25 73 2e 20 52       	and    eax,0x52202e73
    cd8e:	65 66 75 73          	gs data16 jne ce05 <_IO_stdin_used+0xe05>
    cd92:	69 6e 67 20 74 6f 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
    cd99:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    cd9c:	74 69                	je     ce07 <_IO_stdin_used+0xe07>
    cd9e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd9f:	75 65                	jne    ce06 <_IO_stdin_used+0xe06>
    cda1:	0a 00                	or     al,BYTE PTR [rax]
    cda3:	50                   	push   rax
    cda4:	61                   	(bad)  
    cda5:	72 73                	jb     ce1a <_IO_stdin_used+0xe1a>
    cda7:	69 6e 67 20 66 69 6c 	imul   ebp,DWORD PTR [rsi+0x67],0x6c696620
    cdae:	65 20 25 73 0a 00 61 	and    BYTE PTR gs:[rip+0x61000a73],ah        # 6100d828 <_end+0x60ed23e8>
    cdb5:	6c                   	ins    BYTE PTR es:[rdi],dx
    cdb6:	65 72 74             	gs jb  ce2d <_IO_stdin_used+0xe2d>
    cdb9:	00 46 69             	add    BYTE PTR [rsi+0x69],al
    cdbc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cdbd:	69 73 68 65 64 20 70 	imul   esi,DWORD PTR [rbx+0x68],0x70206465
    cdc4:	61                   	(bad)  
    cdc5:	72 73                	jb     ce3a <_IO_stdin_used+0xe3a>
    cdc7:	69 6e 67 20 25 73 0a 	imul   ebp,DWORD PTR [rsi+0x67],0xa732520
    cdce:	00 00                	add    BYTE PTR [rax],al
    cdd0:	45 72 72             	rex.RB jb ce45 <_IO_stdin_used+0xe45>
    cdd3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cdd4:	72 20                	jb     cdf6 <_IO_stdin_used+0xdf6>
    cdd6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cdd7:	70 65                	jo     ce3e <_IO_stdin_used+0xe3e>
    cdd9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cdda:	69 6e 67 20 25 73 20 	imul   ebp,DWORD PTR [rsi+0x67],0x20732520
    cde1:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    cde3:	72 20                	jb     ce05 <_IO_stdin_used+0xe05>
    cde5:	65 78 70             	gs js  ce58 <_IO_stdin_used+0xe58>
    cde8:	6c                   	ins    BYTE PTR es:[rdi],dx
    cde9:	2f                   	(bad)  
    cdea:	69 6d 70 6c 69 63 69 	imul   ebp,DWORD PTR [rbp+0x70],0x6963696c
    cdf1:	74 20                	je     ce13 <_IO_stdin_used+0xe13>
    cdf3:	64 65 6e             	fs outs dx,BYTE PTR gs:[rsi]
    cdf6:	79 20                	jns    ce18 <_IO_stdin_used+0xe18>
    cdf8:	70 61                	jo     ce5b <_IO_stdin_used+0xe5b>
    cdfa:	72 73                	jb     ce6f <_IO_stdin_used+0xe6f>
    cdfc:	69 6e 67 0a 00 69 70 	imul   ebp,DWORD PTR [rsi+0x67],0x7069000a
    ce03:	76 34                	jbe    ce39 <_IO_stdin_used+0xe39>
    ce05:	00 46 61             	add    BYTE PTR [rsi+0x61],al
    ce08:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    ce0f:	20 
    ce10:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ce11:	70 65                	jo     ce78 <_IO_stdin_used+0xe78>
    ce13:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ce14:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # d88d <_IO_stdin_used+0x188d>
    ce1a:	00 00                	add    BYTE PTR [rax],al
    ce1c:	00 00                	add    BYTE PTR [rax],al
    ce1e:	00 00                	add    BYTE PTR [rax],al
    ce20:	52                   	push   rdx
    ce21:	55                   	push   rbp
    ce22:	4e                   	rex.WRX
    ce23:	4e                   	rex.WRX
    ce24:	49                   	rex.WB
    ce25:	4e                   	rex.WRX
    ce26:	47 20 49 4e          	rex.RXB and BYTE PTR [r9+0x4e],r9b
    ce2a:	20 44 45 4d          	and    BYTE PTR [rbp+rax*2+0x4d],al
    ce2e:	4f                   	rex.WRXB
    ce2f:	4e 53                	rex.WRX push rbx
    ce31:	54                   	push   rsp
    ce32:	52                   	push   rdx
    ce33:	41 54                	push   r12
    ce35:	49                   	rex.WB
    ce36:	4f                   	rex.WRXB
    ce37:	4e 20 4d 4f          	rex.WRX and BYTE PTR [rbp+0x4f],r9b
    ce3b:	44                   	rex.R
    ce3c:	45                   	rex.RB
    ce3d:	2e 20 59 4f          	and    BYTE PTR cs:[rcx+0x4f],bl
    ce41:	55                   	push   rbp
    ce42:	20 48 41             	and    BYTE PTR [rax+0x41],cl
    ce45:	56                   	push   rsi
    ce46:	45 20 31             	and    BYTE PTR [r9],r14b
    ce49:	30 20                	xor    BYTE PTR [rax],ah
    ce4b:	53                   	push   rbx
    ce4c:	45                   	rex.RB
    ce4d:	43                   	rex.XB
    ce4e:	4f                   	rex.WRXB
    ce4f:	4e                   	rex.WRX
    ce50:	44 53                	rex.R push rbx
    ce52:	20 54 4f 20          	and    BYTE PTR [rdi+rcx*2+0x20],dl
    ce56:	41                   	rex.B
    ce57:	42                   	rex.X
    ce58:	4f 52                	rex.WRXB push r10
    ce5a:	54                   	push   rsp
    ce5b:	2e 00 00             	add    BYTE PTR cs:[rax],al
    ce5e:	00 00                	add    BYTE PTR [rax],al
    ce60:	52                   	push   rdx
    ce61:	55                   	push   rbp
    ce62:	4e                   	rex.WRX
    ce63:	4e                   	rex.WRX
    ce64:	49                   	rex.WB
    ce65:	4e                   	rex.WRX
    ce66:	47 20 49 4e          	rex.RXB and BYTE PTR [r9+0x4e],r9b
    ce6a:	20 54 45 53          	and    BYTE PTR [rbp+rax*2+0x53],dl
    ce6e:	54                   	push   rsp
    ce6f:	20 4d 4f             	and    BYTE PTR [rbp+0x4f],cl
    ce72:	44                   	rex.R
    ce73:	45                   	rex.RB
    ce74:	2e 20 59 4f          	and    BYTE PTR cs:[rcx+0x4f],bl
    ce78:	55                   	push   rbp
    ce79:	20 48 41             	and    BYTE PTR [rax+0x41],cl
    ce7c:	56                   	push   rsi
    ce7d:	45 20 31             	and    BYTE PTR [r9],r14b
    ce80:	30 20                	xor    BYTE PTR [rax],ah
    ce82:	53                   	push   rbx
    ce83:	45                   	rex.RB
    ce84:	43                   	rex.XB
    ce85:	4f                   	rex.WRXB
    ce86:	4e                   	rex.WRX
    ce87:	44 53                	rex.R push rbx
    ce89:	20 54 4f 20          	and    BYTE PTR [rdi+rcx*2+0x20],dl
    ce8d:	41                   	rex.B
    ce8e:	42                   	rex.X
    ce8f:	4f 52                	rex.WRXB push r10
    ce91:	54                   	push   rsp
    ce92:	2e 00 55 6e          	add    BYTE PTR cs:[rbp+0x6e],dl
    ce96:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    ce9a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ce9b:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    ce9e:	67 75 6d             	addr32 jne cf0e <_IO_stdin_used+0xf0e>
    cea1:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    cea3:	74 20                	je     cec5 <_IO_stdin_used+0xec5>
    cea5:	2d 25 63 0a 00       	sub    eax,0xa6325
    ceaa:	70 64                	jo     cf10 <_IO_stdin_used+0xf10>
    ceac:	71 68                	jno    cf16 <_IO_stdin_used+0xf16>
    ceae:	74 65                	je     cf15 <_IO_stdin_used+0xf15>
    ceb0:	69 3a 00 2f 65 74    	imul   edi,DWORD PTR [rdx],0x74652f00
    ceb6:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    ceb8:	76 69                	jbe    cf23 <_IO_stdin_used+0xf23>
    ceba:	67 69 6c 2f 64 65 6e 	imul   ebp,DWORD PTR [edi+ebp*1+0x64],0x2e796e65
    cec1:	79 2e 
    cec3:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    cec6:	66 00 46 69          	data16 add BYTE PTR [rsi+0x69],al
    ceca:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cecb:	73 69                	jae    cf36 <_IO_stdin_used+0xf36>
    cecd:	73 68                	jae    cf37 <_IO_stdin_used+0xf37>
    cecf:	65 64 20 6c 6f 61    	gs and BYTE PTR fs:[rdi+rbp*2+0x61],ch
    ced5:	64 69 6e 67 20 65 78 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x70786520
    cedc:	70 
    cedd:	6c                   	ins    BYTE PTR es:[rdi],dx
    cede:	69 63 69 74 20 64 65 	imul   esp,DWORD PTR [rbx+0x69],0x65642074
    cee5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cee6:	79 20                	jns    cf08 <_IO_stdin_used+0xf08>
    cee8:	66 69 6c 65 28 2f 65 	imul   bp,WORD PTR [rbp+riz*2+0x28],0x652f
    ceef:	74 63                	je     cf54 <_IO_stdin_used+0xf54>
    cef1:	2f                   	(bad)  
    cef2:	76 69                	jbe    cf5d <_IO_stdin_used+0xf5d>
    cef4:	67 69 6c 2f 64 65 6e 	imul   ebp,DWORD PTR [edi+ebp*1+0x64],0x2e796e65
    cefb:	79 2e 
    cefd:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    cf00:	66 29 00             	sub    WORD PTR [rax],ax
    cf03:	2f                   	(bad)  
    cf04:	65 74 63             	gs je  cf6a <_IO_stdin_used+0xf6a>
    cf07:	2f                   	(bad)  
    cf08:	76 69                	jbe    cf73 <_IO_stdin_used+0xf73>
    cf0a:	67 69 6c 2f 76 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x76],0x6c696769
    cf11:	69 6c 
    cf13:	2e 63 6f 6e          	movsxd ebp,DWORD PTR cs:[rdi+0x6e]
    cf17:	66 00 50 61          	data16 add BYTE PTR [rax+0x61],dl
    cf1b:	72 73                	jb     cf90 <_IO_stdin_used+0xf90>
    cf1d:	65 64 20 72 75       	gs and BYTE PTR fs:[rdx+0x75],dh
    cf22:	6c                   	ins    BYTE PTR es:[rdi],dx
    cf23:	65 20 66 69          	and    BYTE PTR gs:[rsi+0x69],ah
    cf27:	6c                   	ins    BYTE PTR es:[rdi],dx
    cf28:	65 73 00             	gs jae cf2b <_IO_stdin_used+0xf2b>
    cf2b:	00 00                	add    BYTE PTR [rax],al
    cf2d:	00 00                	add    BYTE PTR [rax],al
    cf2f:	00 56 49             	add    BYTE PTR [rsi+0x49],dl
    cf32:	47                   	rex.RXB
    cf33:	49                   	rex.WB
    cf34:	4c 20 6c 69 73       	rex.WR and BYTE PTR [rcx+rbp*2+0x73],r13b
    cf39:	74 65                	je     cfa0 <_IO_stdin_used+0xfa0>
    cf3b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cf3c:	69 6e 67 20 6f 6e 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206e6f20
    cf43:	69 6e 74 65 72 66 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61667265
    cf4a:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    cf4d:	25 73 0a 00 70       	and    eax,0x70000a73
    cf52:	63 61 70             	movsxd esp,DWORD PTR [rcx+0x70]
    cf55:	5f                   	pop    rdi
    cf56:	6d                   	ins    DWORD PTR es:[rdi],dx
    cf57:	67 72 20             	addr32 jb cf7a <_IO_stdin_used+0xf7a>
    cf5a:	69 6e 20 70 63 61 70 	imul   ebp,DWORD PTR [rsi+0x20],0x70616370
    cf61:	5f                   	pop    rdi
    cf62:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cf63:	70 65                	jo     cfca <_IO_stdin_used+0xfca>
    cf65:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cf66:	5f                   	pop    rdi
    cf67:	6c                   	ins    BYTE PTR es:[rdi],dx
    cf68:	69 76 65 00 00 00 00 	imul   esi,DWORD PTR [rsi+0x65],0x0
    cf6f:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    cf72:	65 63 72 79          	movsxd esi,DWORD PTR gs:[rdx+0x79]
    cf76:	70 74                	jo     cfec <_IO_stdin_used+0xfec>
    cf78:	65 64 20 4e 53       	gs and BYTE PTR fs:[rsi+0x53],cl
    cf7d:	48 20 63 6f          	rex.W and BYTE PTR [rbx+0x6f],spl
    cf81:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cf82:	66 69 67 20 73 65    	imul   sp,WORD PTR [rdi+0x20],0x6573
    cf88:	72 76                	jb     d000 <_IO_stdin_used+0x1000>
    cf8a:	65 72 20             	gs jb  cfad <_IO_stdin_used+0xfad>
    cf8d:	73 74                	jae    d003 <_IO_stdin_used+0x1003>
    cf8f:	61                   	(bad)  
    cf90:	72 74                	jb     d006 <_IO_stdin_used+0x1006>
    cf92:	65 64 3a 20          	gs cmp ah,BYTE PTR fs:[rax]
    cf96:	31 32                	xor    DWORD PTR [rdx],esi
    cf98:	37                   	(bad)  
    cf99:	2e 30 2e             	xor    BYTE PTR cs:[rsi],ch
    cf9c:	30 2e                	xor    BYTE PTR [rsi],ch
    cf9e:	31 3a                	xor    DWORD PTR [rdx],edi
    cfa0:	36 34 31             	ss xor al,0x31
    cfa3:	00 38                	add    BYTE PTR [rax],bh
    cfa5:	9b                   	fwait
    cfa6:	ff                   	(bad)  
    cfa7:	ff 75 9b             	push   QWORD PTR [rbp-0x65]
    cfaa:	ff                   	(bad)  
    cfab:	ff b3 9b ff ff b3    	push   QWORD PTR [rbx-0x4c000065]
    cfb1:	9b                   	fwait
    cfb2:	ff                   	(bad)  
    cfb3:	ff 44 9b ff          	inc    DWORD PTR [rbx+rbx*4-0x1]
    cfb7:	ff 53 9b             	call   QWORD PTR [rbx-0x65]
    cfba:	ff                   	(bad)  
    cfbb:	ff b3 9b ff ff b3    	push   QWORD PTR [rbx-0x4c000065]
    cfc1:	9b                   	fwait
    cfc2:	ff                   	(bad)  
    cfc3:	ff b3 9b ff ff b3    	push   QWORD PTR [rbx-0x4c000065]
    cfc9:	9b                   	fwait
    cfca:	ff                   	(bad)  
    cfcb:	ff b3 9b ff ff b3    	push   QWORD PTR [rbx-0x4c000065]
    cfd1:	9b                   	fwait
    cfd2:	ff                   	(bad)  
    cfd3:	ff 63 9b             	jmp    QWORD PTR [rbx-0x65]
    cfd6:	ff                   	(bad)  
    cfd7:	ff 6c 9b ff          	jmp    FWORD PTR [rbx+rbx*4-0x1]
    cfdb:	ff b3 9b ff ff b3    	push   QWORD PTR [rbx-0x4c000065]
    cfe1:	9b                   	fwait
    cfe2:	ff                   	(bad)  
    cfe3:	ff 94 9b ff ff 0a 43 	call   QWORD PTR [rbx+rbx*4+0x430affff]
    cfea:	61                   	(bad)  
    cfeb:	75 67                	jne    d054 <_IO_stdin_used+0x1054>
    cfed:	68 74 20 73 69       	push   0x69732074
    cff2:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    cff4:	61                   	(bad)  
    cff5:	6c                   	ins    BYTE PTR es:[rdi],dx
    cff6:	20 25 64 20 61 74    	and    BYTE PTR [rip+0x74612064],ah        # 7461f060 <_end+0x744e3c20>
    cffc:	20 25 73 2c 20 65    	and    BYTE PTR [rip+0x65202c73],ah        # 6520fc75 <_end+0x650d4835>
    d002:	78 69                	js     d06d <_IO_stdin_used+0x106d>
    d004:	74 69                	je     d06f <_IO_stdin_used+0x106f>
    d006:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d007:	67 2e 2e 2e 0a 00    	cs cs or al,BYTE PTR cs:[eax]
    d00d:	00 54 6f 74          	add    BYTE PTR [rdi+rbp*2+0x74],dl
    d011:	61                   	(bad)  
    d012:	6c                   	ins    BYTE PTR es:[rdi],dx
    d013:	20 50 61             	and    BYTE PTR [rax+0x61],dl
    d016:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d019:	74 73                	je     d08e <_IO_stdin_used+0x108e>
    d01b:	20 43 61             	and    BYTE PTR [rbx+0x61],al
    d01e:	75 67                	jne    d087 <_IO_stdin_used+0x1087>
    d020:	68 74 3a 20 25       	push   0x25203a74
    d025:	64 0a 00             	or     al,BYTE PTR fs:[rax]
    d028:	53                   	push   rbx
    d029:	74 61                	je     d08c <_IO_stdin_used+0x108c>
    d02b:	74 69                	je     d096 <_IO_stdin_used+0x1096>
    d02d:	73 74                	jae    d0a3 <_IO_stdin_used+0x10a3>
    d02f:	69 63 73 0a 49 70 20 	imul   esp,DWORD PTR [rbx+0x73],0x2070490a
    d036:	61                   	(bad)  
    d037:	64 64 72 65          	fs fs jb d0a0 <_IO_stdin_used+0x10a0>
    d03b:	73 73                	jae    d0b0 <_IO_stdin_used+0x10b0>
    d03d:	20 20                	and    BYTE PTR [rax],ah
    d03f:	20 20                	and    BYTE PTR [rax],ah
    d041:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    d043:	75 6e                	jne    d0b3 <_IO_stdin_used+0x10b3>
    d045:	74 0a                	je     d051 <_IO_stdin_used+0x1051>
    d047:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    d04c:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    d051:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    d056:	2d 2d 00 00 00       	sub    eax,0x2d
    d05b:	00 00                	add    BYTE PTR [rax],al
    d05d:	00 00                	add    BYTE PTR [rax],al
    d05f:	00 25 73 0a 09 09    	add    BYTE PTR [rip+0x9090a73],ah        # 909dad8 <_end+0x8f62698>
    d065:	74 6f                	je     d0d6 <_IO_stdin_used+0x10d6>
    d067:	74 61                	je     d0ca <_IO_stdin_used+0x10ca>
    d069:	6c                   	ins    BYTE PTR es:[rdi],dx
    d06a:	20 70 61             	and    BYTE PTR [rax+0x61],dh
    d06d:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d070:	74 73                	je     d0e5 <_IO_stdin_used+0x10e5>
    d072:	20 3d 20 25 64 0a    	and    BYTE PTR [rip+0xa642520],bh        # a64f598 <_end+0xa514158>
    d078:	09 09                	or     DWORD PTR [rcx],ecx
    d07a:	74 6f                	je     d0eb <_IO_stdin_used+0x10eb>
    d07c:	74 61                	je     d0df <_IO_stdin_used+0x10df>
    d07e:	6c                   	ins    BYTE PTR es:[rdi],dx
    d07f:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d082:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d083:	74 20                	je     d0a5 <_IO_stdin_used+0x10a5>
    d085:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d08a:	09 09                	or     DWORD PTR [rcx],ecx
    d08c:	74 6f                	je     d0fd <_IO_stdin_used+0x10fd>
    d08e:	74 61                	je     d0f1 <_IO_stdin_used+0x10f1>
    d090:	6c                   	ins    BYTE PTR es:[rdi],dx
    d091:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d094:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d097:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d09c:	09 09                	or     DWORD PTR [rcx],ecx
    d09e:	54                   	push   rsp
    d09f:	43 50                	rex.XB push r8
    d0a1:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d0a4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d0a5:	74 20                	je     d0c7 <_IO_stdin_used+0x10c7>
    d0a7:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0ac:	09 09                	or     DWORD PTR [rcx],ecx
    d0ae:	54                   	push   rsp
    d0af:	43 50                	rex.XB push r8
    d0b1:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d0b4:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d0b7:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0bc:	09 09                	or     DWORD PTR [rcx],ecx
    d0be:	55                   	push   rbp
    d0bf:	44 50                	rex.R push rax
    d0c1:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d0c4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d0c5:	74 20                	je     d0e7 <_IO_stdin_used+0x10e7>
    d0c7:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0cc:	09 09                	or     DWORD PTR [rcx],ecx
    d0ce:	55                   	push   rbp
    d0cf:	44 50                	rex.R push rax
    d0d1:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d0d4:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d0d7:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0dc:	09 09                	or     DWORD PTR [rcx],ecx
    d0de:	49                   	rex.WB
    d0df:	43                   	rex.XB
    d0e0:	4d 50                	rex.WRB push r8
    d0e2:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d0e5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d0e6:	74 20                	je     d108 <_IO_stdin_used+0x1108>
    d0e8:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0ed:	09 09                	or     DWORD PTR [rcx],ecx
    d0ef:	49                   	rex.WB
    d0f0:	43                   	rex.XB
    d0f1:	4d 50                	rex.WRB push r8
    d0f3:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d0f6:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d0f9:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0fe:	0a 00                	or     al,BYTE PTR [rax]
    d100:	77 00                	ja     d102 <_IO_stdin_used+0x1102>
    d102:	2f                   	(bad)  
    d103:	75 73                	jne    d178 <_IO_stdin_used+0x1178>
    d105:	72 2f                	jb     d136 <_IO_stdin_used+0x1136>
    d107:	73 68                	jae    d171 <_IO_stdin_used+0x1171>
    d109:	61                   	(bad)  
    d10a:	72 65                	jb     d171 <_IO_stdin_used+0x1171>
    d10c:	2f                   	(bad)  
    d10d:	76 69                	jbe    d178 <_IO_stdin_used+0x1178>
    d10f:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    d116:	63 61 
    d118:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    d11b:	2e 63 73 76          	movsxd esi,DWORD PTR cs:[rbx+0x76]
    d11f:	00 43 61             	add    BYTE PTR [rbx+0x61],al
    d122:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d123:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d124:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d125:	74 20                	je     d147 <_IO_stdin_used+0x1147>
    d127:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d128:	70 65                	jo     d18f <_IO_stdin_used+0x118f>
    d12a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d12b:	20 2f                	and    BYTE PTR [rdi],ch
    d12d:	75 73                	jne    d1a2 <_IO_stdin_used+0x11a2>
    d12f:	72 2f                	jb     d160 <_IO_stdin_used+0x1160>
    d131:	73 68                	jae    d19b <_IO_stdin_used+0x119b>
    d133:	61                   	(bad)  
    d134:	72 65                	jb     d19b <_IO_stdin_used+0x119b>
    d136:	2f                   	(bad)  
    d137:	76 69                	jbe    d1a2 <_IO_stdin_used+0x11a2>
    d139:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    d140:	63 61 
    d142:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    d145:	2e 63 73 76          	movsxd esi,DWORD PTR cs:[rbx+0x76]
    d149:	3a 20                	cmp    ah,BYTE PTR [rax]
    d14b:	70 72                	jo     d1bf <_IO_stdin_used+0x11bf>
    d14d:	69 6e 74 69 6e 67 20 	imul   ebp,DWORD PTR [rsi+0x74],0x20676e69
    d154:	61                   	(bad)  
    d155:	72 70                	jb     d1c7 <_IO_stdin_used+0x11c7>
    d157:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    d15a:	68 65 20 74 6f       	push   0x6f742065
    d15f:	20 73 63             	and    BYTE PTR [rbx+0x63],dh
    d162:	72 65                	jb     d1c9 <_IO_stdin_used+0x11c9>
    d164:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d166:	00 25 73 20 2d 3e    	add    BYTE PTR [rip+0x3e2d2073],ah        # 3e2df1df <_end+0x3e1a3d9f>
    d16c:	20 25 73 0a 00 25    	and    BYTE PTR [rip+0x25000a73],ah        # 2500dbe5 <_end+0x24ed27a5>
    d172:	73 2c                	jae    d1a0 <_IO_stdin_used+0x11a0>
    d174:	25 73 0a 00 31       	and    eax,0x31000a73
    d179:	2e 30 2e             	xor    BYTE PTR cs:[rsi],ch
    d17c:	30 00                	xor    BYTE PTR [rax],al
    d17e:	00 00                	add    BYTE PTR [rax],al
    d180:	56                   	push   rsi
    d181:	49                   	rex.WB
    d182:	47                   	rex.RXB
    d183:	49                   	rex.WB
    d184:	4c 20 55 54          	rex.WR and BYTE PTR [rbp+0x54],r10b
    d188:	4d 20 25 73 0a 09 2d 	rex.WRB and BYTE PTR [rip+0x2d090a73],r12b        # 2d09dc02 <_end+0x2cf627c2>
    d18f:	64 3a 20             	cmp    ah,BYTE PTR fs:[rax]
    d192:	64 65 62             	fs gs (bad) 
    d195:	75 67                	jne    d1fe <_IO_stdin_used+0x11fe>
    d197:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    d19a:	64 65 0a 09          	fs or  cl,BYTE PTR gs:[rcx]
    d19e:	2d 68 3a 20 64       	sub    eax,0x64203a68
    d1a3:	69 73 70 6c 61 79 20 	imul   esi,DWORD PTR [rbx+0x70],0x2079616c
    d1aa:	74 68                	je     d214 <_IO_stdin_used+0x1214>
    d1ac:	69 73 20 6d 65 73 73 	imul   esi,DWORD PTR [rbx+0x20],0x7373656d
    d1b3:	61                   	(bad)  
    d1b4:	67 65 0a 09          	or     cl,BYTE PTR gs:[ecx]
    d1b8:	2d 69 20 3c 69       	sub    eax,0x693c2069
    d1bd:	66 61                	data16 (bad) 
    d1bf:	63 65 3e             	movsxd esp,DWORD PTR [rbp+0x3e]
    d1c2:	3a 20                	cmp    ah,BYTE PTR [rax]
    d1c4:	73 65                	jae    d22b <_IO_stdin_used+0x122b>
    d1c6:	74 20                	je     d1e8 <_IO_stdin_used+0x11e8>
    d1c8:	74 68                	je     d232 <_IO_stdin_used+0x1232>
    d1ca:	65 20 69 6e          	and    BYTE PTR gs:[rcx+0x6e],ch
    d1ce:	74 65                	je     d235 <_IO_stdin_used+0x1235>
    d1d0:	72 66                	jb     d238 <_IO_stdin_used+0x1238>
    d1d2:	61                   	(bad)  
    d1d3:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    d1d6:	74 6f                	je     d247 <_IO_stdin_used+0x1247>
    d1d8:	20 6c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],ch
    d1dc:	74 65                	je     d243 <_IO_stdin_used+0x1243>
    d1de:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d1df:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    d1e2:	0a 09                	or     cl,BYTE PTR [rcx]
    d1e4:	2d 70 20 70 72       	sub    eax,0x72702070
    d1e9:	69 6e 74 20 70 61 63 	imul   ebp,DWORD PTR [rsi+0x74],0x63617020
    d1f0:	6b 65 74 73          	imul   esp,DWORD PTR [rbp+0x74],0x73
    d1f4:	0a 09                	or     cl,BYTE PTR [rcx]
    d1f6:	2d 71 20 65 78       	sub    eax,0x78652071
    d1fb:	69 74 20 71 75 69 65 	imul   esi,DWORD PTR [rax+riz*1+0x71],0x74656975
    d202:	74 
    d203:	6c                   	ins    BYTE PTR es:[rdi],dx
    d204:	79 0a                	jns    d210 <_IO_stdin_used+0x1210>
    d206:	00 72 62             	add    BYTE PTR [rdx+0x62],dh
    d209:	00 2f                	add    BYTE PTR [rdi],ch
    d20b:	70 72                	jo     d27f <_IO_stdin_used+0x127f>
    d20d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d20e:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    d210:	63 70 75             	movsxd esi,DWORD PTR [rax+0x75]
    d213:	69 6e 66 6f 00 6d 6f 	imul   ebp,DWORD PTR [rsi+0x66],0x6f6d006f
    d21a:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    d21d:	20 6e 61             	and    BYTE PTR [rsi+0x61],ch
    d220:	6d                   	ins    DWORD PTR es:[rdi],dx
    d221:	65 00 46 6f          	add    BYTE PTR gs:[rsi+0x6f],al
    d225:	75 6e                	jne    d295 <_IO_stdin_used+0x1295>
    d227:	64 20 25 64 20 63 70 	and    BYTE PTR fs:[rip+0x70632064],ah        # 7063f292 <_end+0x70503e52>
    d22e:	75 73                	jne    d2a3 <_IO_stdin_used+0x12a3>
    d230:	3a 0a                	cmp    cl,BYTE PTR [rdx]
    d232:	25 73 00 00 00       	and    eax,0x73
    d237:	00 e2                	add    dl,ah
    d239:	96                   	xchg   esi,eax
    d23a:	88 e2                	mov    dl,ah
    d23c:	96                   	xchg   esi,eax
    d23d:	88 e2                	mov    dl,ah
    d23f:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d246:	88 e2                	mov    dl,ah
    d248:	96                   	xchg   esi,eax
    d249:	88 e2                	mov    dl,ah
    d24b:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d252:	88 e2                	mov    dl,ah
    d254:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    d25b:	96                   	xchg   esi,eax
    d25c:	88 e2                	mov    dl,ah
    d25e:	96                   	xchg   esi,eax
    d25f:	88 e2                	mov    dl,ah
    d261:	96                   	xchg   esi,eax
    d262:	88 e2                	mov    dl,ah
    d264:	96                   	xchg   esi,eax
    d265:	88 e2                	mov    dl,ah
    d267:	96                   	xchg   esi,eax
    d268:	88 e2                	mov    dl,ah
    d26a:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    d271:	96                   	xchg   esi,eax
    d272:	88 e2                	mov    dl,ah
    d274:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d27b:	88 0a                	mov    BYTE PTR [rdx],cl
    d27d:	e2 96                	loop   d215 <_IO_stdin_used+0x1215>
    d27f:	88 e2                	mov    dl,ah
    d281:	96                   	xchg   esi,eax
    d282:	88 e2                	mov    dl,ah
    d284:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d28b:	88 e2                	mov    dl,ah
    d28d:	96                   	xchg   esi,eax
    d28e:	88 e2                	mov    dl,ah
    d290:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d297:	88 e2                	mov    dl,ah
    d299:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2a0:	88 e2                	mov    dl,ah
    d2a2:	80 81 e2 80 81 e2 80 	add    BYTE PTR [rcx-0x1d7e7f1e],0x80
    d2a9:	81 e2 80 81 e2 80    	and    edx,0x80e28180
    d2af:	81 e2 80 81 20 e2    	and    edx,0xe2208180
    d2b5:	96                   	xchg   esi,eax
    d2b6:	88 e2                	mov    dl,ah
    d2b8:	96                   	xchg   esi,eax
    d2b9:	88 e2                	mov    dl,ah
    d2bb:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2c2:	88 0a                	mov    BYTE PTR [rdx],cl
    d2c4:	e2 96                	loop   d25c <_IO_stdin_used+0x125c>
    d2c6:	88 e2                	mov    dl,ah
    d2c8:	96                   	xchg   esi,eax
    d2c9:	88 e2                	mov    dl,ah
    d2cb:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d2d2:	88 e2                	mov    dl,ah
    d2d4:	96                   	xchg   esi,eax
    d2d5:	88 e2                	mov    dl,ah
    d2d7:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2de:	88 e2                	mov    dl,ah
    d2e0:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2e7:	88 e2                	mov    dl,ah
    d2e9:	80 81 20 20 e2 96 88 	add    BYTE PTR [rcx-0x691ddfe0],0x88
    d2f0:	e2 96                	loop   d288 <_IO_stdin_used+0x1288>
    d2f2:	88 e2                	mov    dl,ah
    d2f4:	96                   	xchg   esi,eax
    d2f5:	88 e2                	mov    dl,ah
    d2f7:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2fe:	88 e2                	mov    dl,ah
    d300:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d307:	88 0a                	mov    BYTE PTR [rdx],cl
    d309:	e2 80                	loop   d28b <_IO_stdin_used+0x128b>
    d30b:	81 e2 96 88 e2 96    	and    edx,0x96e28896
    d311:	88 e2                	mov    dl,ah
    d313:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    d31a:	96                   	xchg   esi,eax
    d31b:	88 e2                	mov    dl,ah
    d31d:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    d324:	88 e2                	mov    dl,ah
    d326:	96                   	xchg   esi,eax
    d327:	88 e2                	mov    dl,ah
    d329:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d330:	88 e2                	mov    dl,ah
    d332:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d339:	88 e2                	mov    dl,ah
    d33b:	96                   	xchg   esi,eax
    d33c:	88 e2                	mov    dl,ah
    d33e:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d345:	88 e2                	mov    dl,ah
    d347:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d34e:	88 0a                	mov    BYTE PTR [rdx],cl
    d350:	20 e2                	and    dl,ah
    d352:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d359:	88 e2                	mov    dl,ah
    d35b:	96                   	xchg   esi,eax
    d35c:	88 e2                	mov    dl,ah
    d35e:	96                   	xchg   esi,eax
    d35f:	88 e2                	mov    dl,ah
    d361:	80 81 e2 80 81 20 e2 	add    BYTE PTR [rcx+0x208180e2],0xe2
    d368:	96                   	xchg   esi,eax
    d369:	88 e2                	mov    dl,ah
    d36b:	96                   	xchg   esi,eax
    d36c:	88 e2                	mov    dl,ah
    d36e:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    d375:	88 e2                	mov    dl,ah
    d377:	96                   	xchg   esi,eax
    d378:	88 e2                	mov    dl,ah
    d37a:	96                   	xchg   esi,eax
    d37b:	88 e2                	mov    dl,ah
    d37d:	96                   	xchg   esi,eax
    d37e:	88 e2                	mov    dl,ah
    d380:	96                   	xchg   esi,eax
    d381:	88 e2                	mov    dl,ah
    d383:	96                   	xchg   esi,eax
    d384:	88 e2                	mov    dl,ah
    d386:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    d38d:	88 e2                	mov    dl,ah
    d38f:	96                   	xchg   esi,eax
    d390:	88 e2                	mov    dl,ah
    d392:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d399:	88 e2                	mov    dl,ah
    d39b:	96                   	xchg   esi,eax
    d39c:	88 e2                	mov    dl,ah
    d39e:	96                   	xchg   esi,eax
    d39f:	88 e2                	mov    dl,ah
    d3a1:	96                   	xchg   esi,eax
    d3a2:	88 e2                	mov    dl,ah
    d3a4:	96                   	xchg   esi,eax
    d3a5:	88 e2                	mov    dl,ah
    d3a7:	96                   	xchg   esi,eax
    d3a8:	88 00                	mov    BYTE PTR [rax],al
    d3aa:	00 00                	add    BYTE PTR [rax],al
    d3ac:	00 00                	add    BYTE PTR [rax],al
    d3ae:	00 00                	add    BYTE PTR [rax],al
    d3b0:	0a 00                	or     al,BYTE PTR [rax]
    d3b2:	0d 00 00 00 00       	or     eax,0x0
    d3b7:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    d3ba:	68 5f 73 65 72       	push   0x7265735f
    d3bf:	76 65                	jbe    d426 <_IO_stdin_used+0x1426>
    d3c1:	72 2e                	jb     d3f1 <_IO_stdin_used+0x13f1>
    d3c3:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d3c5:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    d3c8:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    d3cf:	20 
    d3d0:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
    d3d3:	61                   	(bad)  
    d3d4:	74 65                	je     d43b <_IO_stdin_used+0x143b>
    d3d6:	20 73 6f             	and    BYTE PTR [rbx+0x6f],dh
    d3d9:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d3dc:	74 00                	je     d3de <_IO_stdin_used+0x13de>
    d3de:	00 00                	add    BYTE PTR [rax],al
    d3e0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d3e1:	73 68                	jae    d44b <_IO_stdin_used+0x144b>
    d3e3:	5f                   	pop    rdi
    d3e4:	73 65                	jae    d44b <_IO_stdin_used+0x144b>
    d3e6:	72 76                	jb     d45e <_IO_stdin_used+0x145e>
    d3e8:	65 72 2e             	gs jb  d419 <_IO_stdin_used+0x1419>
    d3eb:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d3ed:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    d3f0:	69 6c 75 72 65 20 69 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6e692065
    d3f7:	6e 
    d3f8:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d3fb:	74 73                	je     d470 <_IO_stdin_used+0x1470>
    d3fd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d3fe:	63 6b 6f             	movsxd ebp,DWORD PTR [rbx+0x6f]
    d401:	70 74                	jo     d477 <_IO_stdin_used+0x1477>
    d403:	00 00                	add    BYTE PTR [rax],al
    d405:	00 00                	add    BYTE PTR [rax],al
    d407:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    d40a:	68 5f 73 65 72       	push   0x7265735f
    d40f:	76 65                	jbe    d476 <_IO_stdin_used+0x1476>
    d411:	72 2e                	jb     d441 <_IO_stdin_used+0x1441>
    d413:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d415:	20 62 69             	and    BYTE PTR [rdx+0x69],ah
    d418:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d419:	64 69 6e 67 20 6f 66 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x20666f20
    d420:	20 
    d421:	73 6f                	jae    d492 <_IO_stdin_used+0x1492>
    d423:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d426:	74 20                	je     d448 <_IO_stdin_used+0x1448>
    d428:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    d42a:	72 20                	jb     d44c <_IO_stdin_used+0x144c>
    d42c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d42d:	73 68                	jae    d497 <_IO_stdin_used+0x1497>
    d42f:	5f                   	pop    rdi
    d430:	66 64 20 66 61       	data16 and BYTE PTR fs:[rsi+0x61],ah
    d435:	69 6c 65 64 00 00 00 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
    d43c:	00 
    d43d:	00 00                	add    BYTE PTR [rax],al
    d43f:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    d442:	68 5f 73 65 72       	push   0x7265735f
    d447:	76 65                	jbe    d4ae <_IO_stdin_used+0x14ae>
    d449:	72 2e                	jb     d479 <_IO_stdin_used+0x1479>
    d44b:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d44d:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    d450:	69 6c 75 72 65 20 6f 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6e6f2065
    d457:	6e 
    d458:	20 6c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],ch
    d45c:	74 65                	je     d4c3 <_IO_stdin_used+0x14c3>
    d45e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d45f:	69 6e 67 20 66 6f 72 	imul   ebp,DWORD PTR [rsi+0x67],0x726f6620
    d466:	20 6e 73             	and    BYTE PTR [rsi+0x73],ch
    d469:	68 5f 66 64 00       	push   0x64665f
    d46e:	00 00                	add    BYTE PTR [rax],al
    d470:	46 61                	rex.RX (bad) 
    d472:	69 6c 75 72 65 20 74 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f742065
    d479:	6f 
    d47a:	20 61 63             	and    BYTE PTR [rcx+0x63],ah
    d47d:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    d480:	74 20                	je     d4a2 <_IO_stdin_used+0x14a2>
    d482:	61                   	(bad)  
    d483:	20 63 6c             	and    BYTE PTR [rbx+0x6c],ah
    d486:	69 65 6e 74 20 61 74 	imul   esp,DWORD PTR [rbp+0x6e],0x74612074
    d48d:	20 25 73 0a 00 30    	and    BYTE PTR [rip+0x30000a73],ah        # 3000df06 <_end+0x2fed2ac6>
    d493:	78 25                	js     d4ba <_IO_stdin_used+0x14ba>
    d495:	30 32                	xor    BYTE PTR [rdx],dh
    d497:	78 0a                	js     d4a3 <_IO_stdin_used+0x14a3>
    d499:	00 00                	add    BYTE PTR [rax],al
    d49b:	00 00                	add    BYTE PTR [rax],al
    d49d:	00 00                	add    BYTE PTR [rax],al
    d49f:	00 61 00             	add    BYTE PTR [rcx+0x0],ah
    d4a2:	00 00                	add    BYTE PTR [rax],al
    d4a4:	00 00                	add    BYTE PTR [rax],al
    d4a6:	00 00                	add    BYTE PTR [rax],al
    d4a8:	42 61                	rex.X (bad) 
    d4aa:	73 69                	jae    d515 <_IO_stdin_used+0x1515>
    d4ac:	63 20                	movsxd esp,DWORD PTR [rax]
    d4ae:	70 6f                	jo     d51f <_IO_stdin_used+0x151f>
    d4b0:	72 74                	jb     d526 <_IO_stdin_used+0x1526>
    d4b2:	73 63                	jae    d517 <_IO_stdin_used+0x1517>
    d4b4:	61                   	(bad)  
    d4b5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d4b6:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d4ba:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d4bf:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d4c2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d4c3:	6d                   	ins    DWORD PTR es:[rdi],dx
    d4c4:	20 49 50             	and    BYTE PTR [rcx+0x50],cl
    d4c7:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    d4ca:	64 72 65             	fs jb  d532 <_IO_stdin_used+0x1532>
    d4cd:	73 73                	jae    d542 <_IO_stdin_used+0x1542>
    d4cf:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # df48 <_IO_stdin_used+0x1f48>
    d4d5:	00 00                	add    BYTE PTR [rax],al
    d4d7:	00 50 6f             	add    BYTE PTR [rax+0x6f],dl
    d4da:	72 74                	jb     d550 <_IO_stdin_used+0x1550>
    d4dc:	73 63                	jae    d541 <_IO_stdin_used+0x1541>
    d4de:	61                   	(bad)  
    d4df:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d4e0:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d4e4:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d4e9:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d4ec:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d4ed:	6d                   	ins    DWORD PTR es:[rdi],dx
    d4ee:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461f567 <_end+0x744e4127>
    d4f4:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # df6d <_IO_stdin_used+0x1f6d>
    d4fa:	00 00                	add    BYTE PTR [rax],al
    d4fc:	00 00                	add    BYTE PTR [rax],al
    d4fe:	00 00                	add    BYTE PTR [rax],al
    d500:	46                   	rex.RX
    d501:	49                   	rex.WB
    d502:	4e 20 70 6f          	rex.WRX and BYTE PTR [rax+0x6f],r14b
    d506:	72 74                	jb     d57c <_IO_stdin_used+0x157c>
    d508:	73 63                	jae    d56d <_IO_stdin_used+0x156d>
    d50a:	61                   	(bad)  
    d50b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d50c:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d510:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d515:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d518:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d519:	6d                   	ins    DWORD PTR es:[rdi],dx
    d51a:	20 49 50             	and    BYTE PTR [rcx+0x50],cl
    d51d:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    d520:	64 72 65             	fs jb  d588 <_IO_stdin_used+0x1588>
    d523:	73 73                	jae    d598 <_IO_stdin_used+0x1598>
    d525:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # df9e <_IO_stdin_used+0x1f9e>
    d52b:	00 00                	add    BYTE PTR [rax],al
    d52d:	00 00                	add    BYTE PTR [rax],al
    d52f:	00 46 49             	add    BYTE PTR [rsi+0x49],al
    d532:	4e 20 70 6f          	rex.WRX and BYTE PTR [rax+0x6f],r14b
    d536:	72 74                	jb     d5ac <_IO_stdin_used+0x15ac>
    d538:	73 63                	jae    d59d <_IO_stdin_used+0x159d>
    d53a:	61                   	(bad)  
    d53b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d53c:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d540:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d545:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d548:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d549:	6d                   	ins    DWORD PTR es:[rdi],dx
    d54a:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461f5c3 <_end+0x744e4183>
    d550:	20 25 73 0a 00 30    	and    BYTE PTR [rip+0x30000a73],ah        # 3000dfc9 <_end+0x2fed2b89>
    d556:	2e 30 2e             	xor    BYTE PTR cs:[rsi],ch
    d559:	30 2e                	xor    BYTE PTR [rsi],ch
    d55b:	31 00                	xor    DWORD PTR [rax],eax
    d55d:	30 2e                	xor    BYTE PTR [rsi],ch
    d55f:	30 2e                	xor    BYTE PTR [rsi],ch
    d561:	30 2e                	xor    BYTE PTR [rsi],ch
    d563:	31 00                	xor    DWORD PTR [rax],eax
    d565:	00 00                	add    BYTE PTR [rax],al
    d567:	00 41 72             	add    BYTE PTR [rcx+0x72],al
    d56a:	70 20                	jo     d58c <_IO_stdin_used+0x158c>
    d56c:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d56e:	74 72                	je     d5e2 <_IO_stdin_used+0x15e2>
    d570:	79 20                	jns    d592 <_IO_stdin_used+0x1592>
    d572:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    d575:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d576:	67 65 64 20 66 6f    	gs and BYTE PTR fs:[esi+0x6f],ah
    d57c:	72 20                	jb     d59e <_IO_stdin_used+0x159e>
    d57e:	69 70 20 61 64 64 72 	imul   esi,DWORD PTR [rax+0x20],0x72646461
    d585:	65 73 73             	gs jae d5fb <_IO_stdin_used+0x15fb>
    d588:	20 25 73 3a 20 77    	and    BYTE PTR [rip+0x77203a73],ah        # 77211001 <_end+0x770d5bc1>
    d58e:	61                   	(bad)  
    d58f:	73 20                	jae    d5b1 <_IO_stdin_used+0x15b1>
    d591:	25 73 20 69 73       	and    eax,0x73692073
    d596:	20 6e 6f             	and    BYTE PTR [rsi+0x6f],ch
    d599:	77 20                	ja     d5bb <_IO_stdin_used+0x15bb>
    d59b:	25 73 00 72 00       	and    eax,0x720073
    d5a0:	2f                   	(bad)  
    d5a1:	75 73                	jne    d616 <_IO_stdin_used+0x1616>
    d5a3:	72 2f                	jb     d5d4 <_IO_stdin_used+0x15d4>
    d5a5:	73 68                	jae    d60f <_IO_stdin_used+0x160f>
    d5a7:	61                   	(bad)  
    d5a8:	72 65                	jb     d60f <_IO_stdin_used+0x160f>
    d5aa:	2f                   	(bad)  
    d5ab:	76 69                	jbe    d616 <_IO_stdin_used+0x1616>
    d5ad:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    d5b4:	63 61 
    d5b6:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    d5b9:	2e 63 73 76          	movsxd esi,DWORD PTR cs:[rbx+0x76]
    d5bd:	00 00                	add    BYTE PTR [rax],al
    d5bf:	00 43 6f             	add    BYTE PTR [rbx+0x6f],al
    d5c2:	75 6c                	jne    d630 <_IO_stdin_used+0x1630>
    d5c4:	64 20 6e 6f          	and    BYTE PTR fs:[rsi+0x6f],ch
    d5c8:	74 20                	je     d5ea <_IO_stdin_used+0x15ea>
    d5ca:	6c                   	ins    BYTE PTR es:[rdi],dx
    d5cb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d5cc:	61                   	(bad)  
    d5cd:	64 20 61 72          	and    BYTE PTR fs:[rcx+0x72],ah
    d5d1:	70 20                	jo     d5f3 <_IO_stdin_used+0x15f3>
    d5d3:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    d5d6:	68 65 20 66 72       	push   0x72662065
    d5db:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d5dc:	6d                   	ins    DWORD PTR es:[rdi],dx
    d5dd:	20 64 61 74          	and    BYTE PTR [rcx+riz*2+0x74],ah
    d5e1:	61                   	(bad)  
    d5e2:	62 61                	(bad)  
    d5e4:	73 65                	jae    d64b <_IO_stdin_used+0x164b>
    d5e6:	2c 20                	sub    al,0x20
    d5e8:	66 69 6c 65 20 6e 6f 	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f6e
    d5ef:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d5f0:	65 78 69             	gs js  d65c <_IO_stdin_used+0x165c>
    d5f3:	73 74                	jae    d669 <_IO_stdin_used+0x1669>
    d5f5:	61                   	(bad)  
    d5f6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d5f7:	74 00                	je     d5f9 <_IO_stdin_used+0x15f9>
    d5f9:	0a 00                	or     al,BYTE PTR [rax]
    d5fb:	2c 00                	sub    al,0x0
    d5fd:	00 00                	add    BYTE PTR [rax],al
    d5ff:	00 54 4c 53          	add    BYTE PTR [rsp+rcx*2+0x53],dl
    d603:	20 31                	and    BYTE PTR [rcx],dh
    d605:	2e 30 20             	xor    BYTE PTR cs:[rax],ah
    d608:	44                   	rex.R
    d609:	41 54                	push   r12
    d60b:	41 3a 20             	cmp    spl,BYTE PTR [r8]
    d60e:	00 54 4c 53          	add    BYTE PTR [rsp+rcx*2+0x53],dl
    d612:	20 31                	and    BYTE PTR [rcx],dh
    d614:	2e 32 20             	xor    ah,BYTE PTR cs:[rax]
    d617:	44                   	rex.R
    d618:	41 54                	push   r12
    d61a:	41 3a 20             	cmp    spl,BYTE PTR [r8]
    d61d:	00 54 4c 53          	add    BYTE PTR [rsp+rcx*2+0x53],dl
    d621:	20 31                	and    BYTE PTR [rcx],dh
    d623:	2e 33 20             	xor    esp,DWORD PTR cs:[rax]
    d626:	44                   	rex.R
    d627:	41 54                	push   r12
    d629:	41 3a 20             	cmp    spl,BYTE PTR [r8]
    d62c:	00 43 6c             	add    BYTE PTR [rbx+0x6c],al
    d62f:	69 65 6e 74 20 48 65 	imul   esp,DWORD PTR [rbp+0x6e],0x65482074
    d636:	6c                   	ins    BYTE PTR es:[rdi],dx
    d637:	6c                   	ins    BYTE PTR es:[rdi],dx
    d638:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d639:	00 53 65             	add    BYTE PTR [rbx+0x65],dl
    d63c:	72 76                	jb     d6b4 <_IO_stdin_used+0x16b4>
    d63e:	65 72 20             	gs jb  d661 <_IO_stdin_used+0x1661>
    d641:	48                   	rex.W
    d642:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    d644:	6c                   	ins    BYTE PTR es:[rdi],dx
    d645:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d646:	00 4e 65             	add    BYTE PTR [rsi+0x65],cl
    d649:	77 20                	ja     d66b <_IO_stdin_used+0x166b>
    d64b:	53                   	push   rbx
    d64c:	65 73 73             	gs jae d6c2 <_IO_stdin_used+0x16c2>
    d64f:	69 6f 6e 20 54 69 63 	imul   ebp,DWORD PTR [rdi+0x6e],0x63695420
    d656:	6b 65 74 00          	imul   esp,DWORD PTR [rbp+0x74],0x0
    d65a:	43                   	rex.XB
    d65b:	65 72 74             	gs jb  d6d2 <_IO_stdin_used+0x16d2>
    d65e:	69 66 69 63 61 74 65 	imul   esp,DWORD PTR [rsi+0x69],0x65746163
    d665:	00 43 6c             	add    BYTE PTR [rbx+0x6c],al
    d668:	69 65 6e 74 20 4b 65 	imul   esp,DWORD PTR [rbp+0x6e],0x654b2074
    d66f:	78 00                	js     d671 <_IO_stdin_used+0x1671>
    d671:	00 00                	add    BYTE PTR [rax],al
    d673:	00 f3                	add    bl,dh
    d675:	ab                   	stos   DWORD PTR es:[rdi],eax
    d676:	ff                   	(bad)  
    d677:	ff 57 ab             	call   QWORD PTR [rdi-0x55]
    d67a:	ff                   	(bad)  
    d67b:	ff 70 ab             	push   QWORD PTR [rax-0x55]
    d67e:	ff                   	(bad)  
    d67f:	ff f3                	push   rbx
    d681:	ab                   	stos   DWORD PTR es:[rdi],eax
    d682:	ff                   	(bad)  
    d683:	ff 91 ab ff ff f3    	call   QWORD PTR [rcx-0xc000055]
    d689:	ab                   	stos   DWORD PTR es:[rdi],eax
    d68a:	ff                   	(bad)  
    d68b:	ff f3                	push   rbx
    d68d:	ab                   	stos   DWORD PTR es:[rdi],eax
    d68e:	ff                   	(bad)  
    d68f:	ff f3                	push   rbx
    d691:	ab                   	stos   DWORD PTR es:[rdi],eax
    d692:	ff                   	(bad)  
    d693:	ff f3                	push   rbx
    d695:	ab                   	stos   DWORD PTR es:[rdi],eax
    d696:	ff                   	(bad)  
    d697:	ff f3                	push   rbx
    d699:	ab                   	stos   DWORD PTR es:[rdi],eax
    d69a:	ff                   	(bad)  
    d69b:	ff d3                	call   rbx
    d69d:	ab                   	stos   DWORD PTR es:[rdi],eax
    d69e:	ff                   	(bad)  
    d69f:	ff b2 ab ff ff 00    	push   QWORD PTR [rdx+0xffffab]
    d6a5:	00 00                	add    BYTE PTR [rax],al
    d6a7:	00 55 70             	add    BYTE PTR [rbp+0x70],dl
    d6aa:	64 61                	fs (bad) 
    d6ac:	74 69                	je     d717 <_IO_stdin_used+0x1717>
    d6ae:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d6af:	67 20 64 62 00       	and    BYTE PTR [edx+eiz*2+0x0],ah
    d6b4:	53                   	push   rbx
    d6b5:	51                   	push   rcx
    d6b6:	6c                   	ins    BYTE PTR es:[rdi],dx
    d6b7:	69 74 65 20 65 72 72 	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x6f727265
    d6be:	6f 
    d6bf:	72 3a                	jb     d6fb <_IO_stdin_used+0x16fb>
    d6c1:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # e13a <__GNU_EH_FRAME_HDR+0x52>
    d6c7:	00 49 4e             	add    BYTE PTR [rcx+0x4e],cl
    d6ca:	53                   	push   rbx
    d6cb:	45 52                	rex.RB push r10
    d6cd:	54                   	push   rsp
    d6ce:	20 49 4e             	and    BYTE PTR [rcx+0x4e],cl
    d6d1:	54                   	push   rsp
    d6d2:	4f 20 61 72          	rex.WRXB and BYTE PTR [r9+0x72],r12b
    d6d6:	70 5f                	jo     d737 <_IO_stdin_used+0x1737>
    d6d8:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    d6db:	68 65 20 28 69       	push   0x69282065
    d6e0:	70 5f                	jo     d741 <_IO_stdin_used+0x1741>
    d6e2:	61                   	(bad)  
    d6e3:	64 64 72 65          	fs fs jb d74c <_IO_stdin_used+0x174c>
    d6e7:	73 73                	jae    d75c <_IO_stdin_used+0x175c>
    d6e9:	2c 20                	sub    al,0x20
    d6eb:	6d                   	ins    DWORD PTR es:[rdi],dx
    d6ec:	61                   	(bad)  
    d6ed:	63 5f 61             	movsxd ebx,DWORD PTR [rdi+0x61]
    d6f0:	64 64 72 65          	fs fs jb d759 <_IO_stdin_used+0x1759>
    d6f4:	73 73                	jae    d769 <_IO_stdin_used+0x1769>
    d6f6:	29 20                	sub    DWORD PTR [rax],esp
    d6f8:	56                   	push   rsi
    d6f9:	41                   	rex.B
    d6fa:	4c 55                	rex.WR push rbp
    d6fc:	45 53                	rex.RB push r11
    d6fe:	20 28                	and    BYTE PTR [rax],ch
    d700:	22 25 73 22 2c 20    	and    ah,BYTE PTR [rip+0x202c2273]        # 202cf979 <_end+0x20194539>
    d706:	22 25 73 22 29 3b    	and    ah,BYTE PTR [rip+0x3b292273]        # 3b29f97f <_end+0x3b16453f>
    d70c:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    d70f:	4c 69 74 65 20 65 6e 	imul   r14,QWORD PTR [rbp+riz*2+0x20],0x6f636e65
    d716:	63 6f 
    d718:	75 6e                	jne    d788 <_IO_stdin_used+0x1788>
    d71a:	74 65                	je     d781 <_IO_stdin_used+0x1781>
    d71c:	72 65                	jb     d783 <_IO_stdin_used+0x1783>
    d71e:	64 20 65 72          	and    BYTE PTR fs:[rbp+0x72],ah
    d722:	72 6f                	jb     d793 <_IO_stdin_used+0x1793>
    d724:	72 3a                	jb     d760 <_IO_stdin_used+0x1760>
    d726:	20 25 73 0a 00 2f    	and    BYTE PTR [rip+0x2f000a73],ah        # 2f00e19f <_end+0x2eed2d5f>
    d72c:	75 73                	jne    d7a1 <_IO_stdin_used+0x17a1>
    d72e:	72 2f                	jb     d75f <_IO_stdin_used+0x175f>
    d730:	73 68                	jae    d79a <_IO_stdin_used+0x179a>
    d732:	61                   	(bad)  
    d733:	72 65                	jb     d79a <_IO_stdin_used+0x179a>
    d735:	2f                   	(bad)  
    d736:	76 69                	jbe    d7a1 <_IO_stdin_used+0x17a1>
    d738:	67 69 6c 2f 73 70 69 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x642e6970
    d73f:	2e 64 
    d741:	62                   	(bad)  
    d742:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    d745:	4c 69 74 65 20 65 72 	imul   r14,QWORD PTR [rbp+riz*2+0x20],0x6f727265
    d74c:	72 6f 
    d74e:	72 20                	jb     d770 <_IO_stdin_used+0x1770>
    d750:	25 73 0a 00 00       	and    eax,0xa73
    d755:	00 00                	add    BYTE PTR [rax],al
    d757:	00 49 4e             	add    BYTE PTR [rcx+0x4e],cl
    d75a:	53                   	push   rbx
    d75b:	45 52                	rex.RB push r10
    d75d:	54                   	push   rsp
    d75e:	20 49 4e             	and    BYTE PTR [rcx+0x4e],cl
    d761:	54                   	push   rsp
    d762:	4f 20 73 70          	rex.WRXB and BYTE PTR [r11+0x70],r14b
    d766:	69 5f 74 61 62 6c 65 	imul   ebx,DWORD PTR [rdi+0x74],0x656c6261
    d76d:	20 28                	and    BYTE PTR [rax],ch
    d76f:	73 65                	jae    d7d6 <_IO_stdin_used+0x17d6>
    d771:	72 76                	jb     d7e9 <_IO_stdin_used+0x17e9>
    d773:	5f                   	pop    rdi
    d774:	61                   	(bad)  
    d775:	64 64 72 2c          	fs fs jb d7a5 <_IO_stdin_used+0x17a5>
    d779:	20 63 6c             	and    BYTE PTR [rbx+0x6c],ah
    d77c:	69 5f 61 64 64 72 2c 	imul   ebx,DWORD PTR [rdi+0x61],0x2c726464
    d783:	73 65                	jae    d7ea <_IO_stdin_used+0x17ea>
    d785:	72 76                	jb     d7fd <_IO_stdin_used+0x17fd>
    d787:	5f                   	pop    rdi
    d788:	70 6f                	jo     d7f9 <_IO_stdin_used+0x17f9>
    d78a:	72 74                	jb     d800 <_IO_stdin_used+0x1800>
    d78c:	2c 63                	sub    al,0x63
    d78e:	6c                   	ins    BYTE PTR es:[rdi],dx
    d78f:	69 5f 70 6f 72 74 2c 	imul   ebx,DWORD PTR [rdi+0x70],0x2c74726f
    d796:	73 65                	jae    d7fd <_IO_stdin_used+0x17fd>
    d798:	72 76                	jb     d810 <_IO_stdin_used+0x1810>
    d79a:	5f                   	pop    rdi
    d79b:	70 6b                	jo     d808 <_IO_stdin_used+0x1808>
    d79d:	74 5f                	je     d7fe <_IO_stdin_used+0x17fe>
    d79f:	73 65                	jae    d806 <_IO_stdin_used+0x1806>
    d7a1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d7a2:	74 2c                	je     d7d0 <_IO_stdin_used+0x17d0>
    d7a4:	63 6c 69 5f          	movsxd ebp,DWORD PTR [rcx+rbp*2+0x5f]
    d7a8:	70 6b                	jo     d815 <_IO_stdin_used+0x1815>
    d7aa:	74 5f                	je     d80b <_IO_stdin_used+0x180b>
    d7ac:	73 65                	jae    d813 <_IO_stdin_used+0x1813>
    d7ae:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d7af:	74 2c                	je     d7dd <_IO_stdin_used+0x17dd>
    d7b1:	73 65                	jae    d818 <_IO_stdin_used+0x1818>
    d7b3:	72 76                	jb     d82b <_IO_stdin_used+0x182b>
    d7b5:	5f                   	pop    rdi
    d7b6:	70 6b                	jo     d823 <_IO_stdin_used+0x1823>
    d7b8:	74 5f                	je     d819 <_IO_stdin_used+0x1819>
    d7ba:	72 65                	jb     d821 <_IO_stdin_used+0x1821>
    d7bc:	63 76 2c             	movsxd esi,DWORD PTR [rsi+0x2c]
    d7bf:	63 6c 69 5f          	movsxd ebp,DWORD PTR [rcx+rbp*2+0x5f]
    d7c3:	70 6b                	jo     d830 <_IO_stdin_used+0x1830>
    d7c5:	74 5f                	je     d826 <_IO_stdin_used+0x1826>
    d7c7:	72 65                	jb     d82e <_IO_stdin_used+0x182e>
    d7c9:	63 76 2c             	movsxd esi,DWORD PTR [rsi+0x2c]
    d7cc:	70 72                	jo     d840 <_IO_stdin_used+0x1840>
    d7ce:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d7cf:	74 6f                	je     d840 <_IO_stdin_used+0x1840>
    d7d1:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    d7d4:	2c 61                	sub    al,0x61
    d7d6:	76 67                	jbe    d83f <_IO_stdin_used+0x183f>
    d7d8:	5f                   	pop    rdi
    d7d9:	70 70                	jo     d84b <_IO_stdin_used+0x184b>
    d7db:	73 2c                	jae    d809 <_IO_stdin_used+0x1809>
    d7dd:	73 74                	jae    d853 <_IO_stdin_used+0x1853>
    d7df:	61                   	(bad)  
    d7e0:	72 74                	jb     d856 <_IO_stdin_used+0x1856>
    d7e2:	5f                   	pop    rdi
    d7e3:	74 69                	je     d84e <_IO_stdin_used+0x184e>
    d7e5:	6d                   	ins    DWORD PTR es:[rdi],dx
    d7e6:	65 2c 65             	gs sub al,0x65
    d7e9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d7ea:	64 5f                	fs pop rdi
    d7ec:	74 69                	je     d857 <_IO_stdin_used+0x1857>
    d7ee:	6d                   	ins    DWORD PTR es:[rdi],dx
    d7ef:	65 2c 64             	gs sub al,0x64
    d7f2:	61                   	(bad)  
    d7f3:	74 61                	je     d856 <_IO_stdin_used+0x1856>
    d7f5:	5f                   	pop    rdi
    d7f6:	70 6b                	jo     d863 <_IO_stdin_used+0x1863>
    d7f8:	74 73                	je     d86d <_IO_stdin_used+0x186d>
    d7fa:	2c 63                	sub    al,0x63
    d7fc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d7fd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d7fe:	74 72                	je     d872 <_IO_stdin_used+0x1872>
    d800:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d801:	6c                   	ins    BYTE PTR es:[rdi],dx
    d802:	5f                   	pop    rdi
    d803:	70 6b                	jo     d870 <_IO_stdin_used+0x1870>
    d805:	74 73                	je     d87a <_IO_stdin_used+0x187a>
    d807:	29 20                	sub    DWORD PTR [rax],esp
    d809:	56                   	push   rsi
    d80a:	41                   	rex.B
    d80b:	4c 55                	rex.WR push rbp
    d80d:	45 53                	rex.RB push r11
    d80f:	20 28                	and    BYTE PTR [rax],ch
    d811:	22 25 73 22 2c 22    	and    ah,BYTE PTR [rip+0x222c2273]        # 222cfa8a <_end+0x2219464a>
    d817:	25 73 22 2c 25       	and    eax,0x252c2273
    d81c:	6c                   	ins    BYTE PTR es:[rdi],dx
    d81d:	64 2c 25             	fs sub al,0x25
    d820:	6c                   	ins    BYTE PTR es:[rdi],dx
    d821:	64 2c 25             	fs sub al,0x25
    d824:	64 2c 25             	fs sub al,0x25
    d827:	64 2c 25             	fs sub al,0x25
    d82a:	64 2c 25             	fs sub al,0x25
    d82d:	64 2c 25             	fs sub al,0x25
    d830:	64 2c 25             	fs sub al,0x25
    d833:	64 2c 25             	fs sub al,0x25
    d836:	6c                   	ins    BYTE PTR es:[rdi],dx
    d837:	64 2c 25             	fs sub al,0x25
    d83a:	6c                   	ins    BYTE PTR es:[rdi],dx
    d83b:	64 2c 25             	fs sub al,0x25
    d83e:	64 2c 25             	fs sub al,0x25
    d841:	64 29 3b             	sub    DWORD PTR fs:[rbx],edi
    d844:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    d847:	4c                   	rex.WR
    d848:	49 54                	rex.WB push r12
    d84a:	45 20 45 6e          	and    BYTE PTR [r13+0x6e],r8b
    d84e:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    d851:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d852:	74 65                	je     d8b9 <_IO_stdin_used+0x18b9>
    d854:	72 65                	jb     d8bb <_IO_stdin_used+0x18bb>
    d856:	64 20 65 72          	and    BYTE PTR fs:[rbp+0x72],ah
    d85a:	72 6f                	jb     d8cb <_IO_stdin_used+0x18cb>
    d85c:	72 3a                	jb     d898 <_IO_stdin_used+0x1898>
    d85e:	20 25 73 0a 00 53    	and    BYTE PTR [rip+0x53000a73],ah        # 5300e2d7 <_end+0x52ed2e97>
    d864:	74 72                	je     d8d8 <_IO_stdin_used+0x18d8>
    d866:	6c                   	ins    BYTE PTR es:[rdi],dx
    d867:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d868:	63 20                	movsxd esp,DWORD PTR [rax]
    d86a:	73 75                	jae    d8e1 <_IO_stdin_used+0x18e1>
    d86c:	63 63 65             	movsxd esp,DWORD PTR [rbx+0x65]
    d86f:	73 73                	jae    d8e4 <_IO_stdin_used+0x18e4>
    d871:	66 75 6c             	data16 jne d8e0 <_IO_stdin_used+0x18e0>
    d874:	00 51 75             	add    BYTE PTR [rcx+0x75],dl
    d877:	65 72 79             	gs jb  d8f3 <_IO_stdin_used+0x18f3>
    d87a:	3a 20                	cmp    ah,BYTE PTR [rax]
    d87c:	25 73 0a 00 4c       	and    eax,0x4c000a73
    d881:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d882:	67 69 6e 20 69 6e 63 	imul   ebp,DWORD PTR [esi+0x20],0x6f636e69
    d889:	6f 
    d88a:	72 72                	jb     d8fe <_IO_stdin_used+0x18fe>
    d88c:	65 63 74 00 6c       	movsxd esi,DWORD PTR gs:[rax+rax*1+0x6c]
    d891:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d892:	67 69 6e 20 69 6e 63 	imul   ebp,DWORD PTR [esi+0x20],0x6f636e69
    d899:	6f 
    d89a:	72 72                	jb     d90e <_IO_stdin_used+0x190e>
    d89c:	65 63 74 00 50       	movsxd esi,DWORD PTR gs:[rax+rax*1+0x50]
    d8a1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d8a2:	73 73                	jae    d917 <_IO_stdin_used+0x1917>
    d8a4:	69 62 6c 65 20 46 54 	imul   esp,DWORD PTR [rdx+0x6c],0x54462065
    d8ab:	50                   	push   rax
    d8ac:	20 62 72             	and    BYTE PTR [rdx+0x72],ah
    d8af:	75 74                	jne    d925 <_IO_stdin_used+0x1925>
    d8b1:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    d8b5:	72 63                	jb     d91a <_IO_stdin_used+0x191a>
    d8b7:	65 20 61 74          	and    BYTE PTR gs:[rcx+0x74],ah
    d8bb:	74 65                	je     d922 <_IO_stdin_used+0x1922>
    d8bd:	6d                   	ins    DWORD PTR es:[rdi],dx
    d8be:	70 74                	jo     d934 <_IO_stdin_used+0x1934>
    d8c0:	3a 20                	cmp    ah,BYTE PTR [rax]
    d8c2:	25 73 28 73 75       	and    eax,0x75732873
    d8c7:	73 70                	jae    d939 <_IO_stdin_used+0x1939>
    d8c9:	65 63 74 29 20       	movsxd esi,DWORD PTR gs:[rcx+rbp*1+0x20]
    d8ce:	2d 3e 20 25 73       	sub    eax,0x7325203e
    d8d3:	2e 20 25 64 20 66 61 	and    BYTE PTR cs:[rip+0x61662064],ah        # 6166f93e <_end+0x615344fe>
    d8da:	69 6c 65 64 20 6c 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x676f6c20
    d8e1:	67 
    d8e2:	69 6e 73 0a 00 00 53 	imul   ebp,DWORD PTR [rsi+0x73],0x5300000a
    d8e9:	50                   	push   rax
    d8ea:	49 20 54 41 42       	rex.WB and BYTE PTR [r9+rax*2+0x42],dl
    d8ef:	4c                   	rex.WR
    d8f0:	45 20 52 45          	and    BYTE PTR [r10+0x45],r10b
    d8f4:	54                   	push   rsp
    d8f5:	52                   	push   rdx
    d8f6:	41                   	rex.B
    d8f7:	4e 53                	rex.WRX push rbx
    d8f9:	3a 20                	cmp    ah,BYTE PTR [rax]
    d8fb:	25 64 3a 20 25       	and    eax,0x25203a64
    d900:	73 3a                	jae    d93c <_IO_stdin_used+0x193c>
    d902:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    d907:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64261380 <_end+0x64125f40>
    d90d:	0a 00                	or     al,BYTE PTR [rax]
    d90f:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d912:	49 20 4e 45          	rex.WB and BYTE PTR [r14+0x45],cl
    d916:	57                   	push   rdi
    d917:	20 43 4f             	and    BYTE PTR [rbx+0x4f],al
    d91a:	4e 56                	rex.WRX push rsi
    d91c:	3a 20                	cmp    ah,BYTE PTR [rax]
    d91e:	25 64 3a 20 25       	and    eax,0x25203a64
    d923:	73 3a                	jae    d95f <_IO_stdin_used+0x195f>
    d925:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    d92a:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642613a3 <_end+0x64125f63>
    d930:	0a 00                	or     al,BYTE PTR [rax]
    d932:	00 00                	add    BYTE PTR [rax],al
    d934:	00 00                	add    BYTE PTR [rax],al
    d936:	00 00                	add    BYTE PTR [rax],al
    d938:	53                   	push   rbx
    d939:	50                   	push   rax
    d93a:	49 20 54 57 48       	rex.WB and BYTE PTR [r15+rdx*2+0x48],dl
    d93f:	20 32                	and    BYTE PTR [rdx],dh
    d941:	2f                   	(bad)  
    d942:	33 3a                	xor    edi,DWORD PTR [rdx]
    d944:	20 25 64 3a 20 25    	and    BYTE PTR [rip+0x25203a64],ah        # 252113ae <_end+0x250d5f6e>
    d94a:	73 3a                	jae    d986 <_IO_stdin_used+0x1986>
    d94c:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    d951:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642613ca <_end+0x64125f8a>
    d957:	0a 00                	or     al,BYTE PTR [rax]
    d959:	00 00                	add    BYTE PTR [rax],al
    d95b:	00 00                	add    BYTE PTR [rax],al
    d95d:	00 00                	add    BYTE PTR [rax],al
    d95f:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d962:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d966:	54                   	push   rsp
    d967:	52                   	push   rdx
    d968:	59                   	pop    rcx
    d969:	3a 20                	cmp    ah,BYTE PTR [rax]
    d96b:	25 64 3a 20 53       	and    eax,0x53203a64
    d970:	45 53                	rex.RB push r11
    d972:	53                   	push   rbx
    d973:	49                   	rex.WB
    d974:	4f                   	rex.WRXB
    d975:	4e 20 45 53          	rex.WRX and BYTE PTR [rbp+0x53],r8b
    d979:	54                   	push   rsp
    d97a:	3a 20                	cmp    ah,BYTE PTR [rax]
    d97c:	25 73 3a 25 64       	and    eax,0x64253a73
    d981:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325f9c5 <_end+0x73124585>
    d987:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e3f1 <__GNU_EH_FRAME_HDR+0x309>
    d98d:	00 00                	add    BYTE PTR [rax],al
    d98f:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d992:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d996:	54                   	push   rsp
    d997:	52                   	push   rdx
    d998:	59                   	pop    rcx
    d999:	3a 20                	cmp    ah,BYTE PTR [rax]
    d99b:	25 64 3a 20 50       	and    eax,0x50203a64
    d9a0:	4f                   	rex.WRXB
    d9a1:	4c                   	rex.WR
    d9a2:	49 54                	rex.WB push r12
    d9a4:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    d9a8:	4e 56                	rex.WRX push rsi
    d9aa:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    d9ad:	44 20 33             	and    BYTE PTR [rbx],r14b
    d9b0:	2f                   	(bad)  
    d9b1:	33 3a                	xor    edi,DWORD PTR [rdx]
    d9b3:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 6426142c <_end+0x64125fec>
    d9b9:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325f9fd <_end+0x731245bd>
    d9bf:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e429 <__GNU_EH_FRAME_HDR+0x341>
    d9c5:	00 00                	add    BYTE PTR [rax],al
    d9c7:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d9ca:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d9ce:	54                   	push   rsp
    d9cf:	52                   	push   rdx
    d9d0:	59                   	pop    rcx
    d9d1:	3a 20                	cmp    ah,BYTE PTR [rax]
    d9d3:	25 64 3a 20 50       	and    eax,0x50203a64
    d9d8:	4f                   	rex.WRXB
    d9d9:	4c                   	rex.WR
    d9da:	49 54                	rex.WB push r12
    d9dc:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    d9e0:	4e 56                	rex.WRX push rsi
    d9e2:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    d9e5:	44 20 32             	and    BYTE PTR [rdx],r14b
    d9e8:	2f                   	(bad)  
    d9e9:	33 3a                	xor    edi,DWORD PTR [rdx]
    d9eb:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64261464 <_end+0x64126024>
    d9f1:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fa35 <_end+0x731245f5>
    d9f7:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e461 <__GNU_EH_FRAME_HDR+0x379>
    d9fd:	00 00                	add    BYTE PTR [rax],al
    d9ff:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    da02:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    da06:	54                   	push   rsp
    da07:	52                   	push   rdx
    da08:	59                   	pop    rcx
    da09:	3a 20                	cmp    ah,BYTE PTR [rax]
    da0b:	25 64 3a 20 50       	and    eax,0x50203a64
    da10:	4f                   	rex.WRXB
    da11:	4c                   	rex.WR
    da12:	49 54                	rex.WB push r12
    da14:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    da18:	4e 56                	rex.WRX push rsi
    da1a:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    da1d:	44 20 31             	and    BYTE PTR [rcx],r14b
    da20:	2f                   	(bad)  
    da21:	33 3a                	xor    edi,DWORD PTR [rdx]
    da23:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 6426149c <_end+0x6412605c>
    da29:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fa6d <_end+0x7312462d>
    da2f:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e499 <__GNU_EH_FRAME_HDR+0x3b1>
    da35:	00 00                	add    BYTE PTR [rax],al
    da37:	00 61 00             	add    BYTE PTR [rcx+0x0],ah
    da3a:	00 00                	add    BYTE PTR [rax],al
    da3c:	00 00                	add    BYTE PTR [rax],al
    da3e:	00 00                	add    BYTE PTR [rax],al
    da40:	43 52                	rex.XB push r10
    da42:	49 54                	rex.WB push r12
    da44:	49                   	rex.WB
    da45:	43                   	rex.XB
    da46:	41                   	rex.B
    da47:	4c 20 46 41          	rex.WR and BYTE PTR [rsi+0x41],r8b
    da4b:	49                   	rex.WB
    da4c:	4c                   	rex.WR
    da4d:	45                   	rex.RB
    da4e:	44 20 54 4f 20       	and    BYTE PTR [rdi+rcx*2+0x20],r10b
    da53:	4f 50                	rex.WRXB push r8
    da55:	45                   	rex.RB
    da56:	4e 20 46 49          	rex.WRX and BYTE PTR [rsi+0x49],r8b
    da5a:	4c                   	rex.WR
    da5b:	45 20 46 4f          	and    BYTE PTR [r14+0x4f],r8b
    da5f:	52                   	push   rdx
    da60:	20 4c 4f 47          	and    BYTE PTR [rdi+rcx*2+0x47],cl
    da64:	47                   	rex.RXB
    da65:	49                   	rex.WB
    da66:	4e                   	rex.WRX
    da67:	47 3a 20             	rex.RXB cmp r12b,BYTE PTR [r8]
    da6a:	25 73 0a 00 25       	and    eax,0x25000a73
    da6f:	73 20                	jae    da91 <_IO_stdin_used+0x1a91>
    da71:	25 73 20 25 73       	and    eax,0x73252073
    da76:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325faba <_end+0x7312467a>
    da7c:	0a 00                	or     al,BYTE PTR [rax]
    da7e:	25 73 20 25 73       	and    eax,0x73252073
    da83:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642614fc <_end+0x641260bc>
    da89:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325facd <_end+0x7312468d>
    da8f:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e4f9 <__GNU_EH_FRAME_HDR+0x411>
    da95:	00 00                	add    BYTE PTR [rax],al
    da97:	00 61 6e             	add    BYTE PTR [rcx+0x6e],ah
    da9a:	79 00                	jns    da9c <_IO_stdin_used+0x1a9c>
    da9c:	41                   	rex.B
    da9d:	4e 59                	rex.WRX pop rcx
    da9f:	00 49 43             	add    BYTE PTR [rcx+0x43],cl
    daa2:	4d 50                	rex.WRB push r8
    daa4:	00 54 43 50          	add    BYTE PTR [rbx+rax*2+0x50],dl
    daa8:	00 55 44             	add    BYTE PTR [rbp+0x44],dl
    daab:	50                   	push   rax
    daac:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    daaf:	72 5f                	jb     db10 <_IO_stdin_used+0x1b10>
    dab1:	6d                   	ins    DWORD PTR es:[rdi],dx
    dab2:	61                   	(bad)  
    dab3:	74 63                	je     db18 <_IO_stdin_used+0x1b18>
    dab5:	68 00 6e 6f 6e       	push   0x6e6f6e00
    daba:	65 00 70 63          	add    BYTE PTR gs:[rax+0x63],dh
    dabe:	72 65                	jb     db25 <_IO_stdin_used+0x1b25>
    dac0:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    dac3:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    dac7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dac8:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    dacb:	6c                   	ins    BYTE PTR es:[rdi],dx
    dacc:	65 20 74 79 70       	and    BYTE PTR gs:[rcx+rdi*2+0x70],dh
    dad1:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    dad4:	25 73 0a 00 3b       	and    eax,0x3b000a73
    dad9:	00 46 6f             	add    BYTE PTR [rsi+0x6f],al
    dadc:	75 6e                	jne    db4c <_IO_stdin_used+0x1b4c>
    dade:	64 20 6f 70          	and    BYTE PTR fs:[rdi+0x70],ch
    dae2:	65 72 61             	gs jb  db46 <_IO_stdin_used+0x1b46>
    dae5:	74 6f                	je     db56 <_IO_stdin_used+0x1b56>
    dae7:	72 00                	jb     dae9 <_IO_stdin_used+0x1ae9>
    dae9:	61                   	(bad)  
    daea:	6c                   	ins    BYTE PTR es:[rdi],dx
    daeb:	65 72 74             	gs jb  db62 <_IO_stdin_used+0x1b62>
    daee:	00 24 68             	add    BYTE PTR [rax+rbp*2],ah
    daf1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    daf2:	6d                   	ins    DWORD PTR es:[rdi],dx
    daf3:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    daf5:	65 74 00             	gs je  daf8 <_IO_stdin_used+0x1af8>
    daf8:	2d 3e 00 3c 3e       	sub    eax,0x3e3c003e
    dafd:	00 24 65 78 74 65 72 	add    BYTE PTR [riz*2+0x72657478],ah
    db04:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db05:	61                   	(bad)  
    db06:	6c                   	ins    BYTE PTR es:[rdi],dx
    db07:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db08:	65 74 00             	gs je  db0b <_IO_stdin_used+0x1b0b>
    db0b:	22 3b                	and    bh,BYTE PTR [rbx]
    db0d:	00 6e 61             	add    BYTE PTR [rsi+0x61],ch
    db10:	6d                   	ins    DWORD PTR es:[rdi],dx
    db11:	65 3a 22             	cmp    ah,BYTE PTR gs:[rdx]
    db14:	00 6d 73             	add    BYTE PTR [rbp+0x73],ch
    db17:	67 3a 22             	cmp    ah,BYTE PTR [edx]
    db1a:	00 64 65 70          	add    BYTE PTR [rbp+riz*2+0x70],ah
    db1e:	74 68                	je     db88 <_IO_stdin_used+0x1b88>
    db20:	3a 00                	cmp    al,BYTE PTR [rax]
    db22:	74 79                	je     db9d <_IO_stdin_used+0x1b9d>
    db24:	70 65                	jo     db8b <_IO_stdin_used+0x1b8b>
    db26:	3a 00                	cmp    al,BYTE PTR [rax]
    db28:	74 61                	je     db8b <_IO_stdin_used+0x1b8b>
    db2a:	72 67                	jb     db93 <_IO_stdin_used+0x1b93>
    db2c:	65 74 3a             	gs je  db69 <_IO_stdin_used+0x1b69>
    db2f:	22 00                	and    al,BYTE PTR [rax]
    db31:	73 65                	jae    db98 <_IO_stdin_used+0x1b98>
    db33:	76 3a                	jbe    db6f <_IO_stdin_used+0x1b6f>
    db35:	00 00                	add    BYTE PTR [rax],al
    db37:	00 52 75             	add    BYTE PTR [rdx+0x75],dl
    db3a:	6c                   	ins    BYTE PTR es:[rdi],dx
    db3b:	65 20 73 65          	and    BYTE PTR gs:[rbx+0x65],dh
    db3f:	76 65                	jbe    dba6 <_IO_stdin_used+0x1ba6>
    db41:	72 69                	jb     dbac <_IO_stdin_used+0x1bac>
    db43:	74 79                	je     dbbe <_IO_stdin_used+0x1bbe>
    db45:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    db48:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    db49:	75 6c                	jne    dbb7 <_IO_stdin_used+0x1bb7>
    db4b:	64 20 62 65          	and    BYTE PTR fs:[rdx+0x65],ah
    db4f:	20 3e                	and    BYTE PTR [rsi],bh
    db51:	20 30                	and    BYTE PTR [rax],dh
    db53:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    db56:	64 20 3c 3d 20 31 30 	and    BYTE PTR fs:[rdi*1+0x303120],bh
    db5d:	00 
    db5e:	00 00                	add    BYTE PTR [rax],al
    db60:	52                   	push   rdx
    db61:	75 6c                	jne    dbcf <_IO_stdin_used+0x1bcf>
    db63:	65 20 73 65          	and    BYTE PTR gs:[rbx+0x65],dh
    db67:	76 65                	jbe    dbce <_IO_stdin_used+0x1bce>
    db69:	72 69                	jb     dbd4 <_IO_stdin_used+0x1bd4>
    db6b:	74 79                	je     dbe6 <_IO_stdin_used+0x1be6>
    db6d:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    db70:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    db71:	75 6c                	jne    dbdf <_IO_stdin_used+0x1bdf>
    db73:	64 20 62 65          	and    BYTE PTR fs:[rdx+0x65],ah
    db77:	20 61 20             	and    BYTE PTR [rcx+0x20],ah
    db7a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db7b:	75 6d                	jne    dbea <_IO_stdin_used+0x1bea>
    db7d:	65 72 69             	gs jb  dbe9 <_IO_stdin_used+0x1be9>
    db80:	63 20                	movsxd esp,DWORD PTR [rax]
    db82:	76 61                	jbe    dbe5 <_IO_stdin_used+0x1be5>
    db84:	6c                   	ins    BYTE PTR es:[rdi],dx
    db85:	75 65                	jne    dbec <_IO_stdin_used+0x1bec>
    db87:	00 69 74             	add    BYTE PTR [rcx+0x74],ch
    db8a:	79 70                	jns    dbfc <_IO_stdin_used+0x1bfc>
    db8c:	65 3a 00             	cmp    al,BYTE PTR gs:[rax]
    db8f:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    db91:	76 61                	jbe    dbf4 <_IO_stdin_used+0x1bf4>
    db93:	6c                   	ins    BYTE PTR es:[rdi],dx
    db94:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    db9b:	20 
    db9c:	74 79                	je     dc17 <_IO_stdin_used+0x1c17>
    db9e:	70 65                	jo     dc05 <_IO_stdin_used+0x1c05>
    dba0:	20 76 61             	and    BYTE PTR [rsi+0x61],dh
    dba3:	6c                   	ins    BYTE PTR es:[rdi],dx
    dba4:	75 65                	jne    dc0b <_IO_stdin_used+0x1c0b>
    dba6:	00 00                	add    BYTE PTR [rax],al
    dba8:	25 73 3a 20 69       	and    eax,0x69203a73
    dbad:	74 79                	je     dc28 <_IO_stdin_used+0x1c28>
    dbaf:	70 65                	jo     dc16 <_IO_stdin_used+0x1c16>
    dbb1:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    dbb4:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbb5:	79 20                	jns    dbd7 <_IO_stdin_used+0x1bd7>
    dbb7:	61                   	(bad)  
    dbb8:	70 70                	jo     dc2a <_IO_stdin_used+0x1c2a>
    dbba:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbbb:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dbc2:	72 75                	jb     dc39 <_IO_stdin_used+0x1c39>
    dbc4:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbc5:	65 73 20             	gs jae dbe8 <_IO_stdin_used+0x1be8>
    dbc8:	77 69                	ja     dc33 <_IO_stdin_used+0x1c33>
    dbca:	74 68                	je     dc34 <_IO_stdin_used+0x1c34>
    dbcc:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    dbcf:	4d 50                	rex.WRB push r8
    dbd1:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dbd4:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dbd7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dbd8:	74 6f                	je     dc49 <_IO_stdin_used+0x1c49>
    dbda:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dbdd:	0a 00                	or     al,BYTE PTR [rax]
    dbdf:	69 63 6f 64 65 3a 00 	imul   esp,DWORD PTR [rbx+0x6f],0x3a6564
    dbe6:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    dbe8:	76 61                	jbe    dc4b <_IO_stdin_used+0x1c4b>
    dbea:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbeb:	69 64 65 20 69 63 6d 	imul   esp,DWORD PTR [rbp+riz*2+0x20],0x706d6369
    dbf2:	70 
    dbf3:	20 63 6f             	and    BYTE PTR [rbx+0x6f],ah
    dbf6:	64 65 20 76 61       	fs and BYTE PTR gs:[rsi+0x61],dh
    dbfb:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbfc:	75 65                	jne    dc63 <_IO_stdin_used+0x1c63>
    dbfe:	00 00                	add    BYTE PTR [rax],al
    dc00:	69 63 6f 64 65 20 6f 	imul   esp,DWORD PTR [rbx+0x6f],0x6f206564
    dc07:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dc08:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc09:	79 20                	jns    dc2b <_IO_stdin_used+0x1c2b>
    dc0b:	61                   	(bad)  
    dc0c:	70 70                	jo     dc7e <_IO_stdin_used+0x1c7e>
    dc0e:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc0f:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dc16:	72 75                	jb     dc8d <_IO_stdin_used+0x1c8d>
    dc18:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc19:	65 73 20             	gs jae dc3c <_IO_stdin_used+0x1c3c>
    dc1c:	77 69                	ja     dc87 <_IO_stdin_used+0x1c87>
    dc1e:	74 68                	je     dc88 <_IO_stdin_used+0x1c88>
    dc20:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    dc23:	4d 50                	rex.WRB push r8
    dc25:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dc28:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dc2b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dc2c:	74 6f                	je     dc9d <_IO_stdin_used+0x1c9d>
    dc2e:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dc31:	00 69 63             	add    BYTE PTR [rcx+0x63],ch
    dc34:	6d                   	ins    DWORD PTR es:[rdi],dx
    dc35:	70 5f                	jo     dc96 <_IO_stdin_used+0x1c96>
    dc37:	69 64 3a 00 49 6e 76 	imul   esp,DWORD PTR [rdx+rdi*1+0x0],0x61766e49
    dc3e:	61 
    dc3f:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc40:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    dc47:	20 
    dc48:	69 64 20 76 61 6c 75 	imul   esp,DWORD PTR [rax+riz*1+0x76],0x65756c61
    dc4f:	65 
	...
    dc58:	49                   	rex.WB
    dc59:	43                   	rex.XB
    dc5a:	4d 50                	rex.WRB push r8
    dc5c:	20 49 44             	and    BYTE PTR [rcx+0x44],cl
    dc5f:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    dc62:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc63:	79 20                	jns    dc85 <_IO_stdin_used+0x1c85>
    dc65:	61                   	(bad)  
    dc66:	70 70                	jo     dcd8 <_IO_stdin_used+0x1cd8>
    dc68:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc69:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dc70:	72 75                	jb     dce7 <_IO_stdin_used+0x1ce7>
    dc72:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc73:	65 73 20             	gs jae dc96 <_IO_stdin_used+0x1c96>
    dc76:	77 69                	ja     dce1 <_IO_stdin_used+0x1ce1>
    dc78:	74 68                	je     dce2 <_IO_stdin_used+0x1ce2>
    dc7a:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    dc7d:	4d 50                	rex.WRB push r8
    dc7f:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dc82:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dc85:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dc86:	74 6f                	je     dcf7 <_IO_stdin_used+0x1cf7>
    dc88:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dc8b:	00 69 63             	add    BYTE PTR [rcx+0x63],ch
    dc8e:	6d                   	ins    DWORD PTR es:[rdi],dx
    dc8f:	70 5f                	jo     dcf0 <_IO_stdin_used+0x1cf0>
    dc91:	73 65                	jae    dcf8 <_IO_stdin_used+0x1cf8>
    dc93:	71 3a                	jno    dccf <_IO_stdin_used+0x1ccf>
    dc95:	00 49 6e             	add    BYTE PTR [rcx+0x6e],cl
    dc98:	76 61                	jbe    dcfb <_IO_stdin_used+0x1cfb>
    dc9a:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc9b:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    dca2:	20 
    dca3:	73 65                	jae    dd0a <_IO_stdin_used+0x1d0a>
    dca5:	71 75                	jno    dd1c <_IO_stdin_used+0x1d1c>
    dca7:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    dca9:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    dcac:	76 61                	jbe    dd0f <_IO_stdin_used+0x1d0f>
    dcae:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcaf:	75 65                	jne    dd16 <_IO_stdin_used+0x1d16>
    dcb1:	00 74 74 6c          	add    BYTE PTR [rsp+rsi*2+0x6c],dh
    dcb5:	3a 00                	cmp    al,BYTE PTR [rax]
    dcb7:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    dcb9:	76 61                	jbe    dd1c <_IO_stdin_used+0x1d1c>
    dcbb:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcbc:	69 64 20 74 74 6c 20 	imul   esp,DWORD PTR [rax+riz*1+0x74],0x76206c74
    dcc3:	76 
    dcc4:	61                   	(bad)  
    dcc5:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcc6:	75 65                	jne    dd2d <_IO_stdin_used+0x1d2d>
    dcc8:	00 66 6c             	add    BYTE PTR [rsi+0x6c],ah
    dccb:	61                   	(bad)  
    dccc:	67 73 3a             	addr32 jae dd09 <_IO_stdin_used+0x1d09>
    dccf:	22 00                	and    al,BYTE PTR [rax]
    dcd1:	00 00                	add    BYTE PTR [rax],al
    dcd3:	00 00                	add    BYTE PTR [rax],al
    dcd5:	00 00                	add    BYTE PTR [rax],al
    dcd7:	00 66 6c             	add    BYTE PTR [rsi+0x6c],ah
    dcda:	61                   	(bad)  
    dcdb:	67 73 20             	addr32 jae dcfe <_IO_stdin_used+0x1cfe>
    dcde:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dcdf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dce0:	6c                   	ins    BYTE PTR es:[rdi],dx
    dce1:	79 20                	jns    dd03 <_IO_stdin_used+0x1d03>
    dce3:	61                   	(bad)  
    dce4:	70 70                	jo     dd56 <_IO_stdin_used+0x1d56>
    dce6:	6c                   	ins    BYTE PTR es:[rdi],dx
    dce7:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dcee:	72 75                	jb     dd65 <_IO_stdin_used+0x1d65>
    dcf0:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcf1:	65 73 20             	gs jae dd14 <_IO_stdin_used+0x1d14>
    dcf4:	77 69                	ja     dd5f <_IO_stdin_used+0x1d5f>
    dcf6:	74 68                	je     dd60 <_IO_stdin_used+0x1d60>
    dcf8:	20 74 63 70          	and    BYTE PTR [rbx+riz*2+0x70],dh
    dcfc:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dcff:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dd02:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd03:	74 6f                	je     dd74 <_IO_stdin_used+0x1d74>
    dd05:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dd08:	00 61 63             	add    BYTE PTR [rcx+0x63],ah
    dd0b:	6b 3a 00             	imul   edi,DWORD PTR [rdx],0x0
    dd0e:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    dd10:	76 61                	jbe    dd73 <_IO_stdin_used+0x1d73>
    dd12:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd13:	69 64 20 61 63 6b 20 	imul   esp,DWORD PTR [rax+riz*1+0x61],0x76206b63
    dd1a:	76 
    dd1b:	61                   	(bad)  
    dd1c:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd1d:	75 65                	jne    dd84 <_IO_stdin_used+0x1d84>
    dd1f:	00 70 63             	add    BYTE PTR [rax+0x63],dh
    dd22:	72 65                	jb     dd89 <_IO_stdin_used+0x1d89>
    dd24:	3a 22                	cmp    ah,BYTE PTR [rdx]
    dd26:	00 00                	add    BYTE PTR [rax],al
    dd28:	46 61                	rex.RX (bad) 
    dd2a:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    dd31:	20 
    dd32:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    dd35:	70 69                	jo     dda0 <_IO_stdin_used+0x1da0>
    dd37:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd38:	65 20 72 65          	and    BYTE PTR gs:[rdx+0x65],dh
    dd3c:	67 75 6c             	addr32 jne ddab <_IO_stdin_used+0x1dab>
    dd3f:	61                   	(bad)  
    dd40:	72 20                	jb     dd62 <_IO_stdin_used+0x1d62>
    dd42:	65 78 70             	gs js  ddb5 <_IO_stdin_used+0x1db5>
    dd45:	72 65                	jb     ddac <_IO_stdin_used+0x1dac>
    dd47:	73 73                	jae    ddbc <_IO_stdin_used+0x1dbc>
    dd49:	69 6f 6e 00 64 73 69 	imul   ebp,DWORD PTR [rdi+0x6e],0x69736400
    dd50:	7a 65                	jp     ddb7 <_IO_stdin_used+0x1db7>
    dd52:	3a 00                	cmp    al,BYTE PTR [rax]
    dd54:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd55:	66 66 73 65          	data16 data16 jae ddbe <_IO_stdin_used+0x1dbe>
    dd59:	74 3a                	je     dd95 <_IO_stdin_used+0x1d95>
    dd5b:	00 65 73             	add    BYTE PTR [rbp+0x73],ah
    dd5e:	74 61                	je     ddc1 <_IO_stdin_used+0x1dc1>
    dd60:	62                   	(bad)  
    dd61:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd62:	69 73 68 65 64 00 6e 	imul   esi,DWORD PTR [rbx+0x68],0x6e006465
    dd69:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd6a:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    dd6c:	63 72 79             	movsxd esi,DWORD PTR [rdx+0x79]
    dd6f:	70 74                	jo     dde5 <_IO_stdin_used+0x1de5>
    dd71:	00 25 63 00 25 30    	add    BYTE PTR [rip+0x30250063],ah        # 3025ddda <_end+0x3012299a>
    dd77:	32 78 00             	xor    bh,BYTE PTR [rax+0x0]
    dd7a:	00 00                	add    BYTE PTR [rax],al
    dd7c:	3e 00 3c 00          	add    BYTE PTR ds:[rax+rax*1],bh
    dd80:	21 00                	and    DWORD PTR [rax],eax
    dd82:	3c 3d                	cmp    al,0x3d
    dd84:	00 3e                	add    BYTE PTR [rsi],bh
    dd86:	3d 00 55 6e 73       	cmp    eax,0x736e5500
    dd8b:	75 70                	jne    ddfd <_IO_stdin_used+0x1dfd>
    dd8d:	70 6f                	jo     ddfe <_IO_stdin_used+0x1dfe>
    dd8f:	72 74                	jb     de05 <_IO_stdin_used+0x1e05>
    dd91:	65 64 20 6f 70       	gs and BYTE PTR fs:[rdi+0x70],ch
    dd96:	65 72 61             	gs jb  ddfa <_IO_stdin_used+0x1dfa>
    dd99:	74 6f                	je     de0a <_IO_stdin_used+0x1e0a>
    dd9b:	72 00                	jb     dd9d <_IO_stdin_used+0x1d9d>
    dd9d:	00 00                	add    BYTE PTR [rax],al
    dd9f:	00 10                	add    BYTE PTR [rax],dl
    dda1:	d1 ff                	sar    edi,1
    dda3:	ff 62 d1             	jmp    QWORD PTR [rdx-0x2f]
    dda6:	ff                   	(bad)  
    dda7:	ff                   	(bad)  
    dda8:	7b d1                	jnp    dd7b <_IO_stdin_used+0x1d7b>
    ddaa:	ff                   	(bad)  
    ddab:	ff 30                	push   QWORD PTR [rax]
    ddad:	d1 ff                	sar    edi,1
    ddaf:	ff 49 d1             	dec    DWORD PTR [rcx-0x2f]
    ddb2:	ff                   	(bad)  
    ddb3:	ff 94 d1 ff ff 2e 00 	call   QWORD PTR [rcx+rdx*8+0x2effff]
    ddba:	25 30 32 78 00       	and    eax,0x783230
    ddbf:	25 30 32 78 20       	and    eax,0x20783230
    ddc4:	2d 2d 20 25 30       	sub    eax,0x3025202d
    ddc9:	32 78 0a             	xor    bh,BYTE PTR [rax+0xa]
    ddcc:	00 00                	add    BYTE PTR [rax],al
    ddce:	00 00                	add    BYTE PTR [rax],al
    ddd0:	73 72                	jae    de44 <_IO_stdin_used+0x1e44>
    ddd2:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    ddd4:	6c                   	ins    BYTE PTR es:[rdi],dx
    ddd5:	75 61                	jne    de38 <_IO_stdin_used+0x1e38>
    ddd7:	2f                   	(bad)  
    ddd8:	73 63                	jae    de3d <_IO_stdin_used+0x1e3d>
    ddda:	72 69                	jb     de45 <_IO_stdin_used+0x1e45>
    dddc:	70 74                	jo     de52 <_IO_stdin_used+0x1e52>
    ddde:	73 2f                	jae    de0f <_IO_stdin_used+0x1e0f>
    dde0:	68 65 6c 6c 6f       	push   0x6f6c6c65
    dde5:	74 65                	je     de4c <_IO_stdin_used+0x1e4c>
    dde7:	73 74                	jae    de5d <_IO_stdin_used+0x1e5d>
    dde9:	2e 6c                	cs ins BYTE PTR es:[rdi],dx
    ddeb:	75 61                	jne    de4e <_IO_stdin_used+0x1e4e>
    dded:	00 72 00             	add    BYTE PTR [rdx+0x0],dh
    ddf0:	2f                   	(bad)  
    ddf1:	65 74 63             	gs je  de57 <_IO_stdin_used+0x1e57>
    ddf4:	2f                   	(bad)  
    ddf5:	76 69                	jbe    de60 <_IO_stdin_used+0x1e60>
    ddf7:	67 69 6c 2f 6c 73 63 	imul   ebp,DWORD PTR [edi+ebp*1+0x6c],0x69726373
    ddfe:	72 69 
    de00:	70 74                	jo     de76 <_IO_stdin_used+0x1e76>
    de02:	2e 63 6f 6e          	movsxd ebp,DWORD PTR cs:[rdi+0x6e]
    de06:	66 00 46 61          	data16 add BYTE PTR [rsi+0x61],al
    de0a:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    de11:	20 
    de12:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    de15:	6c                   	ins    BYTE PTR es:[rdi],dx
    de16:	65 63 74 20 4c       	movsxd esi,DWORD PTR gs:[rax+riz*1+0x4c]
    de1b:	75 61                	jne    de7e <_IO_stdin_used+0x1e7e>
    de1d:	20 73 63             	and    BYTE PTR [rbx+0x63],dh
    de20:	72 69                	jb     de8b <_IO_stdin_used+0x1e8b>
    de22:	70 74                	jo     de98 <_IO_stdin_used+0x1e98>
    de24:	73 3a                	jae    de60 <_IO_stdin_used+0x1e60>
    de26:	20 2f                	and    BYTE PTR [rdi],ch
    de28:	65 74 63             	gs je  de8e <_IO_stdin_used+0x1e8e>
    de2b:	2f                   	(bad)  
    de2c:	76 69                	jbe    de97 <_IO_stdin_used+0x1e97>
    de2e:	67 69 6c 2f 6c 73 63 	imul   ebp,DWORD PTR [edi+ebp*1+0x6c],0x69726373
    de35:	72 69 
    de37:	70 74                	jo     dead <_IO_stdin_used+0x1ead>
    de39:	2e 63 6f 6e          	movsxd ebp,DWORD PTR cs:[rdi+0x6e]
    de3d:	66 20 6e 6f          	data16 and BYTE PTR [rsi+0x6f],ch
    de41:	74 20                	je     de63 <_IO_stdin_used+0x1e63>
    de43:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    de45:	75 6e                	jne    deb5 <_IO_stdin_used+0x1eb5>
    de47:	64 2e 00 2e          	fs add BYTE PTR cs:[rsi],ch
    de4b:	2a 2e                	sub    ch,BYTE PTR [rsi]
    de4d:	6c                   	ins    BYTE PTR es:[rdi],dx
    de4e:	75 61                	jne    deb1 <_IO_stdin_used+0x1eb1>
    de50:	3a 2e                	cmp    ch,BYTE PTR [rsi]
    de52:	2a 00                	sub    al,BYTE PTR [rax]
    de54:	6c                   	ins    BYTE PTR es:[rdi],dx
    de55:	5f                   	pop    rdi
    de56:	73 63                	jae    debb <_IO_stdin_used+0x1ebb>
    de58:	72 69                	jb     dec3 <_IO_stdin_used+0x1ec3>
    de5a:	70 74                	jo     ded0 <_IO_stdin_used+0x1ed0>
    de5c:	5f                   	pop    rdi
    de5d:	72 6f                	jb     dece <_IO_stdin_used+0x1ece>
    de5f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    de60:	74 3d                	je     de9f <_IO_stdin_used+0x1e9f>
    de62:	00 0a                	add    BYTE PTR [rdx],cl
    de64:	00 00                	add    BYTE PTR [rax],al
    de66:	00 00                	add    BYTE PTR [rax],al
    de68:	49 50                	rex.WB push r8
    de6a:	76 36                	jbe    dea2 <_IO_stdin_used+0x1ea2>
    de6c:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2dfee5 <_end+0x3e1a4aa5>
    de72:	20 25 73 20 50 72    	and    BYTE PTR [rip+0x72502073],ah        # 7250feeb <_end+0x723d4aab>
    de78:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    de79:	74 6f                	je     deea <_IO_stdin_used+0x1eea>
    de7b:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    de7e:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    de81:	6d                   	ins    DWORD PTR es:[rdi],dx
    de82:	62                   	(bad)  
    de83:	65 72 20             	gs jb  dea6 <_IO_stdin_used+0x1ea6>
    de86:	3d 20 25 64 0a       	cmp    eax,0xa642520
    de8b:	00 00                	add    BYTE PTR [rax],al
    de8d:	00 00                	add    BYTE PTR [rax],al
    de8f:	00 5b 4e             	add    BYTE PTR [rbx+0x4e],bl
    de92:	20 25 73 20 53 20    	and    BYTE PTR [rip+0x20532073],ah        # 2053ff0b <_end+0x20404acb>
    de98:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    de9b:	30 32                	xor    BYTE PTR [rdx],dh
    de9d:	78 20                	js     debf <_IO_stdin_used+0x1ebf>
    de9f:	45 20 30             	and    BYTE PTR [r8],r14b
    dea2:	78 25                	js     dec9 <_IO_stdin_used+0x1ec9>
    dea4:	30 32                	xor    BYTE PTR [rdx],dh
    dea6:	78 5d                	js     df05 <_IO_stdin_used+0x1f05>
    dea8:	0a 00                	or     al,BYTE PTR [rax]
    deaa:	00 00                	add    BYTE PTR [rax],al
    deac:	00 00                	add    BYTE PTR [rax],al
    deae:	00 00                	add    BYTE PTR [rax],al
    deb0:	53                   	push   rbx
    deb1:	65 67 6d             	gs ins DWORD PTR es:[edi],dx
    deb4:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    deb6:	74 61                	je     df19 <_IO_stdin_used+0x1f19>
    deb8:	74 69                	je     df23 <_IO_stdin_used+0x1f23>
    deba:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    debb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    debc:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    debf:	75 6c                	jne    df2d <_IO_stdin_used+0x1f2d>
    dec1:	74 20                	je     dee3 <_IO_stdin_used+0x1ee3>
    dec3:	61                   	(bad)  
    dec4:	74 20                	je     dee6 <_IO_stdin_used+0x1ee6>
    dec6:	25 73 3a 20 61       	and    eax,0x61203a73
    decb:	70 70                	jo     df3d <_IO_stdin_used+0x1f3d>
    decd:	6c                   	ins    BYTE PTR es:[rdi],dx
    dece:	69 63 61 74 69 6f 6e 	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
    ded5:	20 63 72             	and    BYTE PTR [rbx+0x72],ah
    ded8:	61                   	(bad)  
    ded9:	73 68                	jae    df43 <_IO_stdin_used+0x1f43>
    dedb:	65 64 0a 00          	gs or  al,BYTE PTR fs:[rax]
    dedf:	46 75 6e             	rex.RX jne df50 <_IO_stdin_used+0x1f50>
    dee2:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    dee6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dee7:	20 62 61             	and    BYTE PTR [rdx+0x61],ah
    deea:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
    deed:	72 61                	jb     df50 <_IO_stdin_used+0x1f50>
    deef:	63 65 3a             	movsxd esp,DWORD PTR [rbp+0x3a]
    def2:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
    def6:	00 25 73 0a 00 00    	add    BYTE PTR [rip+0xa73],ah        # e96f <__GNU_EH_FRAME_HDR+0x887>
    defc:	00 00                	add    BYTE PTR [rax],al
    defe:	00 00                	add    BYTE PTR [rax],al
    df00:	5b                   	pop    rbx
    df01:	4e 20 25 73 20 53 20 	rex.WRX and BYTE PTR [rip+0x20532073],r12b        # 2053ff7b <_end+0x20404b3b>
    df08:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    df0b:	30 32                	xor    BYTE PTR [rdx],dh
    df0d:	78 20                	js     df2f <_IO_stdin_used+0x1f2f>
    df0f:	45 20 30             	and    BYTE PTR [r8],r14b
    df12:	78 25                	js     df39 <_IO_stdin_used+0x1f39>
    df14:	30 32                	xor    BYTE PTR [rdx],dh
    df16:	78 20                	js     df38 <_IO_stdin_used+0x1f38>
    df18:	28 2e                	sub    BYTE PTR [rsi],ch
    df1a:	2f                   	(bad)  
    df1b:	76 69                	jbe    df86 <_IO_stdin_used+0x1f86>
    df1d:	67 69 6c 2e 65 78 65 	imul   ebp,DWORD PTR [esi+ebp*1+0x65],0x2b286578
    df24:	28 2b 
    df26:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    df29:	30 32                	xor    BYTE PTR [rdx],dh
    df2b:	78 29                	js     df56 <_IO_stdin_used+0x1f56>
    df2d:	29 5d 0a             	sub    DWORD PTR [rbp+0xa],ebx
	...
    df38:	55                   	push   rbp
    df39:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df3a:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    df3e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df3f:	20 66 75             	and    BYTE PTR [rsi+0x75],ah
    df42:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df43:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    df47:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df48:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    df4b:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
    df4e:	6d                   	ins    DWORD PTR es:[rdi],dx
    df4f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    df50:	72 79                	jb     dfcb <_IO_stdin_used+0x1fcb>
    df52:	20 6f 66             	and    BYTE PTR [rdi+0x66],ch
    df55:	66 73 65             	data16 jae dfbd <_IO_stdin_used+0x1fbd>
    df58:	74 20                	je     df7a <_IO_stdin_used+0x1f7a>
    df5a:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    df5d:	30 32                	xor    BYTE PTR [rdx],dh
    df5f:	78 0a                	js     df6b <_IO_stdin_used+0x1f6b>
    df61:	00 52 65             	add    BYTE PTR [rdx+0x65],dl
    df64:	67 69 73 74 65 72 20 	imul   esi,DWORD PTR [ebx+0x74],0x44207265
    df6b:	44 
    df6c:	75 6d                	jne    dfdb <_IO_stdin_used+0x1fdb>
    df6e:	70 3a                	jo     dfaa <_IO_stdin_used+0x1faa>
    df70:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    df73:	41 58                	pop    r8
    df75:	5d                   	pop    rbp
    df76:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790f9c <_end+0x25655b5c>
    df7c:	30 32                	xor    BYTE PTR [rdx],dh
    df7e:	78 0a                	js     df8a <_IO_stdin_used+0x1f8a>
    df80:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    df83:	42 58                	rex.X pop rax
    df85:	5d                   	pop    rbp
    df86:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790fac <_end+0x25655b6c>
    df8c:	30 32                	xor    BYTE PTR [rdx],dh
    df8e:	78 0a                	js     df9a <_IO_stdin_used+0x1f9a>
    df90:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    df93:	43 58                	rex.XB pop r8
    df95:	5d                   	pop    rbp
    df96:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790fbc <_end+0x25655b7c>
    df9c:	30 32                	xor    BYTE PTR [rdx],dh
    df9e:	78 0a                	js     dfaa <_IO_stdin_used+0x1faa>
    dfa0:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    dfa3:	44 58                	rex.R pop rax
    dfa5:	5d                   	pop    rbp
    dfa6:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790fcc <_end+0x25655b8c>
    dfac:	30 32                	xor    BYTE PTR [rdx],dh
    dfae:	78 0a                	js     dfba <_IO_stdin_used+0x1fba>
    dfb0:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    dfb3:	53                   	push   rbx
    dfb4:	50                   	push   rax
    dfb5:	5d                   	pop    rbp
    dfb6:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790fdc <_end+0x25655b9c>
    dfbc:	30 32                	xor    BYTE PTR [rdx],dh
    dfbe:	78 0a                	js     dfca <_IO_stdin_used+0x1fca>
    dfc0:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    dfc3:	42 50                	rex.X push rax
    dfc5:	5d                   	pop    rbp
    dfc6:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790fec <_end+0x25655bac>
    dfcc:	30 32                	xor    BYTE PTR [rdx],dh
    dfce:	78 0a                	js     dfda <_IO_stdin_used+0x1fda>
	...
    dfd8:	72 00                	jb     dfda <_IO_stdin_used+0x1fda>
    dfda:	2f                   	(bad)  
    dfdb:	75 73                	jne    e050 <_IO_stdin_used+0x2050>
    dfdd:	72 2f                	jb     e00e <_IO_stdin_used+0x200e>
    dfdf:	73 68                	jae    e049 <_IO_stdin_used+0x2049>
    dfe1:	61                   	(bad)  
    dfe2:	72 65                	jb     e049 <_IO_stdin_used+0x2049>
    dfe4:	2f                   	(bad)  
    dfe5:	76 69                	jbe    e050 <_IO_stdin_used+0x2050>
    dfe7:	67 69 6c 2f 6d 65 6d 	imul   ebp,DWORD PTR [edi+ebp*1+0x6d],0x616d6d65
    dfee:	6d 61 
    dff0:	70 2e                	jo     e020 <_IO_stdin_used+0x2020>
    dff2:	74 78                	je     e06c <_IO_stdin_used+0x206c>
    dff4:	74 00                	je     dff6 <_IO_stdin_used+0x1ff6>
    dff6:	00 00                	add    BYTE PTR [rax],al
    dff8:	46                   	rex.RX
    dff9:	41 54                	push   r12
    dffb:	41                   	rex.B
    dffc:	4c 20 45 52          	rex.WR and BYTE PTR [rbp+0x52],r8b
    e000:	52                   	push   rdx
    e001:	4f 52                	rex.WRXB push r10
    e003:	3a 20                	cmp    ah,BYTE PTR [rax]
    e005:	6d                   	ins    DWORD PTR es:[rdi],dx
    e006:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    e008:	6d                   	ins    DWORD PTR es:[rdi],dx
    e009:	61                   	(bad)  
    e00a:	70 2e                	jo     e03a <_IO_stdin_used+0x203a>
    e00c:	74 78                	je     e086 <_IO_stdin_used+0x2086>
    e00e:	74 20                	je     e030 <_IO_stdin_used+0x2030>
    e010:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e011:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e012:	74 20                	je     e034 <_IO_stdin_used+0x2034>
    e014:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    e016:	75 6e                	jne    e086 <_IO_stdin_used+0x2086>
    e018:	64 2e 50             	fs cs push rax
    e01b:	6c                   	ins    BYTE PTR es:[rdi],dx
    e01c:	65 61                	gs (bad) 
    e01e:	73 65                	jae    e085 <_IO_stdin_used+0x2085>
    e020:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    e023:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    e026:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e027:	20 67 65             	and    BYTE PTR [rdi+0x65],ah
    e02a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e02b:	5f                   	pop    rdi
    e02c:	6d                   	ins    DWORD PTR es:[rdi],dx
    e02d:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    e02f:	5f                   	pop    rdi
    e030:	6d                   	ins    DWORD PTR es:[rdi],dx
    e031:	61                   	(bad)  
    e032:	70 2e                	jo     e062 <_IO_stdin_used+0x2062>
    e034:	70 79                	jo     e0af <_IO_stdin_used+0x20af>
    e036:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    e039:	64 20 63 6f          	and    BYTE PTR fs:[rbx+0x6f],ah
    e03d:	70 79                	jo     e0b8 <_IO_stdin_used+0x20b8>
    e03f:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
    e042:	6d                   	ins    DWORD PTR es:[rdi],dx
    e043:	6d                   	ins    DWORD PTR es:[rdi],dx
    e044:	61                   	(bad)  
    e045:	70 2e                	jo     e075 <_IO_stdin_used+0x2075>
    e047:	74 78                	je     e0c1 <_IO_stdin_used+0x20c1>
    e049:	74 20                	je     e06b <_IO_stdin_used+0x206b>
    e04b:	74 6f                	je     e0bc <_IO_stdin_used+0x20bc>
    e04d:	20 2f                	and    BYTE PTR [rdi],ch
    e04f:	75 73                	jne    e0c4 <_IO_stdin_used+0x20c4>
    e051:	72 2f                	jb     e082 <_IO_stdin_used+0x2082>
    e053:	73 68                	jae    e0bd <_IO_stdin_used+0x20bd>
    e055:	61                   	(bad)  
    e056:	72 65                	jb     e0bd <_IO_stdin_used+0x20bd>
    e058:	2f                   	(bad)  
    e059:	76 69                	jbe    e0c4 <_IO_stdin_used+0x20c4>
    e05b:	67 69 6c 00 0a 00 20 	imul   ebp,DWORD PTR [eax+eax*1+0xa],0x2000
    e062:	00 00 
    e064:	00 00                	add    BYTE PTR [rax],al
    e066:	00 00                	add    BYTE PTR [rax],al
    e068:	2f                   	(bad)  
    e069:	75 73                	jne    e0de <_IO_stdin_used+0x20de>
    e06b:	72 2f                	jb     e09c <_IO_stdin_used+0x209c>
    e06d:	73 68                	jae    e0d7 <_IO_stdin_used+0x20d7>
    e06f:	61                   	(bad)  
    e070:	72 65                	jb     e0d7 <_IO_stdin_used+0x20d7>
    e072:	2f                   	(bad)  
    e073:	76 69                	jbe    e0de <_IO_stdin_used+0x20de>
    e075:	67 69 6c 2f 73 74 61 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x73746174
    e07c:	74 73 
    e07e:	2f                   	(bad)  
    e07f:	70 70                	jo     e0f1 <__GNU_EH_FRAME_HDR+0x9>
    e081:	73 2f                	jae    e0b2 <_IO_stdin_used+0x20b2>
    e083:	00 46 61             	add    BYTE PTR [rsi+0x61],al
    e086:	69 6c 65 64 00 00 00 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
    e08d:	00 
    e08e:	00 00                	add    BYTE PTR [rax],al
    e090:	2f                   	(bad)  
    e091:	75 73                	jne    e106 <__GNU_EH_FRAME_HDR+0x1e>
    e093:	72 2f                	jb     e0c4 <_IO_stdin_used+0x20c4>
    e095:	73 68                	jae    e0ff <__GNU_EH_FRAME_HDR+0x17>
    e097:	61                   	(bad)  
    e098:	72 65                	jb     e0ff <__GNU_EH_FRAME_HDR+0x17>
    e09a:	2f                   	(bad)  
    e09b:	76 69                	jbe    e106 <__GNU_EH_FRAME_HDR+0x1e>
    e09d:	67 69 6c 2f 73 74 61 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x73746174
    e0a4:	74 73 
    e0a6:	2f                   	(bad)  
    e0a7:	70 70                	jo     e119 <__GNU_EH_FRAME_HDR+0x31>
    e0a9:	73 2f                	jae    e0da <_IO_stdin_used+0x20da>
    e0ab:	70 70                	jo     e11d <__GNU_EH_FRAME_HDR+0x35>
    e0ad:	73 2e                	jae    e0dd <_IO_stdin_used+0x20dd>
    e0af:	6c                   	ins    BYTE PTR es:[rdi],dx
    e0b0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e0b1:	67 2e 25 64 2e 74 78 	addr32 cs and eax,0x78742e64
    e0b8:	74 00                	je     e0ba <_IO_stdin_used+0x20ba>
    e0ba:	77 00                	ja     e0bc <_IO_stdin_used+0x20bc>
    e0bc:	45 72 72             	rex.RB jb e131 <__GNU_EH_FRAME_HDR+0x49>
    e0bf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e0c0:	72 20                	jb     e0e2 <_IO_stdin_used+0x20e2>
    e0c2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e0c3:	70 65                	jo     e12a <__GNU_EH_FRAME_HDR+0x42>
    e0c5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e0c6:	69 6e 67 20 66 69 6c 	imul   ebp,DWORD PTR [rsi+0x67],0x6c696620
    e0cd:	65 00 44 75 6d       	add    BYTE PTR gs:[rbp+rsi*2+0x6d],al
    e0d2:	70 69                	jo     e13d <__GNU_EH_FRAME_HDR+0x55>
    e0d4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e0d5:	67 20 74 6f 20       	and    BYTE PTR [edi+ebp*2+0x20],dh
    e0da:	25 73 0a 00 25       	and    eax,0x25000a73
    e0df:	6c                   	ins    BYTE PTR es:[rdi],dx
    e0e0:	75 2c                	jne    e10e <__GNU_EH_FRAME_HDR+0x26>
    e0e2:	25                   	.byte 0x25
    e0e3:	64 0a 00             	or     al,BYTE PTR fs:[rax]

Disassembly of section .eh_frame_hdr:

000000000000e0e8 <__GNU_EH_FRAME_HDR>:
    e0e8:	01 1b                	add    DWORD PTR [rbx],ebx
    e0ea:	03 3b                	add    edi,DWORD PTR [rbx]
    e0ec:	cc                   	int3   
    e0ed:	03 00                	add    eax,DWORD PTR [rax]
    e0ef:	00 78 00             	add    BYTE PTR [rax+0x0],bh
    e0f2:	00 00                	add    BYTE PTR [rax],al
    e0f4:	38 3f                	cmp    BYTE PTR [rdi],bh
    e0f6:	ff                   	(bad)  
    e0f7:	ff 00                	inc    DWORD PTR [rax]
    e0f9:	04 00                	add    al,0x0
    e0fb:	00 98 43 ff ff 28    	add    BYTE PTR [rax+0x28ffff43],bl
    e101:	04 00                	add    al,0x0
    e103:	00 a8 43 ff ff 40    	add    BYTE PTR [rax+0x40ffff43],ch
    e109:	04 00                	add    al,0x0
    e10b:	00 f8                	add    al,bh
    e10d:	47 ff                	rex.RXB (bad) 
    e10f:	ff                   	(bad)  
    e110:	e8 03 00 00 e1       	call   ffffffffe100e118 <_end+0xffffffffe0ed2cd8>
    e115:	48 ff                	rex.W (bad) 
    e117:	ff 58 04             	call   FWORD PTR [rax+0x4]
    e11a:	00 00                	add    BYTE PTR [rax],al
    e11c:	1b 49 ff             	sbb    ecx,DWORD PTR [rcx-0x1]
    e11f:	ff                   	(bad)  
    e120:	78 04                	js     e126 <__GNU_EH_FRAME_HDR+0x3e>
    e122:	00 00                	add    BYTE PTR [rax],al
    e124:	72 4a                	jb     e170 <__GNU_EH_FRAME_HDR+0x88>
    e126:	ff                   	(bad)  
    e127:	ff a0 04 00 00 66    	jmp    QWORD PTR [rax+0x66000004]
    e12d:	4d ff                	rex.WRB (bad) 
    e12f:	ff c0                	inc    eax
    e131:	04 00                	add    al,0x0
    e133:	00 79 4e             	add    BYTE PTR [rcx+0x4e],bh
    e136:	ff                   	(bad)  
    e137:	ff e0                	jmp    rax
    e139:	04 00                	add    al,0x0
    e13b:	00 27                	add    BYTE PTR [rdi],ah
    e13d:	4f ff                	rex.WRXB (bad) 
    e13f:	ff 00                	inc    DWORD PTR [rax]
    e141:	05 00 00 cd 4f       	add    eax,0x4fcd0000
    e146:	ff                   	(bad)  
    e147:	ff 20                	jmp    QWORD PTR [rax]
    e149:	05 00 00 62 50       	add    eax,0x50620000
    e14e:	ff                   	(bad)  
    e14f:	ff 40 05             	inc    DWORD PTR [rax+0x5]
    e152:	00 00                	add    BYTE PTR [rax],al
    e154:	f6 50 ff             	not    BYTE PTR [rax-0x1]
    e157:	ff 60 05             	jmp    QWORD PTR [rax+0x5]
    e15a:	00 00                	add    BYTE PTR [rax],al
    e15c:	c2 52 ff             	ret    0xff52
    e15f:	ff 8c 05 00 00 96 53 	dec    DWORD PTR [rbp+rax*1+0x53960000]
    e166:	ff                   	(bad)  
    e167:	ff b0 05 00 00 5d    	push   QWORD PTR [rax+0x5d000005]
    e16d:	54                   	push   rsp
    e16e:	ff                   	(bad)  
    e16f:	ff d4                	call   rsp
    e171:	05 00 00 b0 54       	add    eax,0x54b00000
    e176:	ff                   	(bad)  
    e177:	ff f4                	push   rsp
    e179:	05 00 00 e3 54       	add    eax,0x54e30000
    e17e:	ff                   	(bad)  
    e17f:	ff 14 06             	call   QWORD PTR [rsi+rax*1]
    e182:	00 00                	add    BYTE PTR [rax],al
    e184:	04 55                	add    al,0x55
    e186:	ff                   	(bad)  
    e187:	ff 34 06             	push   QWORD PTR [rsi+rax*1]
    e18a:	00 00                	add    BYTE PTR [rax],al
    e18c:	6d                   	ins    DWORD PTR es:[rdi],dx
    e18d:	55                   	push   rbp
    e18e:	ff                   	(bad)  
    e18f:	ff 58 06             	call   FWORD PTR [rax+0x6]
    e192:	00 00                	add    BYTE PTR [rax],al
    e194:	92                   	xchg   edx,eax
    e195:	59                   	pop    rcx
    e196:	ff                   	(bad)  
    e197:	ff                   	(bad)  
    e198:	78 06                	js     e1a0 <__GNU_EH_FRAME_HDR+0xb8>
    e19a:	00 00                	add    BYTE PTR [rax],al
    e19c:	ef                   	out    dx,eax
    e19d:	5a                   	pop    rdx
    e19e:	ff                   	(bad)  
    e19f:	ff 98 06 00 00 33    	call   FWORD PTR [rax+0x33000006]
    e1a5:	63 ff                	movsxd edi,edi
    e1a7:	ff                   	(bad)  
    e1a8:	b8 06 00 00 76       	mov    eax,0x76000006
    e1ad:	6c                   	ins    BYTE PTR es:[rdi],dx
    e1ae:	ff                   	(bad)  
    e1af:	ff                   	(bad)  
    e1b0:	d8 06                	fadd   DWORD PTR [rsi]
    e1b2:	00 00                	add    BYTE PTR [rax],al
    e1b4:	cb                   	retf   
    e1b5:	6d                   	ins    DWORD PTR es:[rdi],dx
    e1b6:	ff                   	(bad)  
    e1b7:	ff                   	(bad)  
    e1b8:	f8                   	clc    
    e1b9:	06                   	(bad)  
    e1ba:	00 00                	add    BYTE PTR [rax],al
    e1bc:	ca 6e ff             	retf   0xff6e
    e1bf:	ff 18                	call   FWORD PTR [rax]
    e1c1:	07                   	(bad)  
    e1c2:	00 00                	add    BYTE PTR [rax],al
    e1c4:	b6 6f                	mov    dh,0x6f
    e1c6:	ff                   	(bad)  
    e1c7:	ff                   	(bad)  
    e1c8:	38 07                	cmp    BYTE PTR [rdi],al
    e1ca:	00 00                	add    BYTE PTR [rax],al
    e1cc:	68 73 ff ff 58       	push   0x58ffff73
    e1d1:	07                   	(bad)  
    e1d2:	00 00                	add    BYTE PTR [rax],al
    e1d4:	eb 73                	jmp    e249 <__GNU_EH_FRAME_HDR+0x161>
    e1d6:	ff                   	(bad)  
    e1d7:	ff                   	(bad)  
    e1d8:	78 07                	js     e1e1 <__GNU_EH_FRAME_HDR+0xf9>
    e1da:	00 00                	add    BYTE PTR [rax],al
    e1dc:	15 76 ff ff a0       	adc    eax,0xa0ffff76
    e1e1:	07                   	(bad)  
    e1e2:	00 00                	add    BYTE PTR [rax],al
    e1e4:	55                   	push   rbp
    e1e5:	78 ff                	js     e1e6 <__GNU_EH_FRAME_HDR+0xfe>
    e1e7:	ff c4                	inc    esp
    e1e9:	07                   	(bad)  
    e1ea:	00 00                	add    BYTE PTR [rax],al
    e1ec:	bb 78 ff ff e4       	mov    ebx,0xe4ffff78
    e1f1:	07                   	(bad)  
    e1f2:	00 00                	add    BYTE PTR [rax],al
    e1f4:	d2 78 ff             	sar    BYTE PTR [rax-0x1],cl
    e1f7:	ff 04 08             	inc    DWORD PTR [rax+rcx*1]
    e1fa:	00 00                	add    BYTE PTR [rax],al
    e1fc:	23 79 ff             	and    edi,DWORD PTR [rcx-0x1]
    e1ff:	ff 28                	jmp    FWORD PTR [rax]
    e201:	08 00                	or     BYTE PTR [rax],al
    e203:	00 63 7f             	add    BYTE PTR [rbx+0x7f],ah
    e206:	ff                   	(bad)  
    e207:	ff 4c 08 00          	dec    DWORD PTR [rax+rcx*1+0x0]
    e20b:	00 7d 7f             	add    BYTE PTR [rbp+0x7f],bh
    e20e:	ff                   	(bad)  
    e20f:	ff 6c 08 00          	jmp    FWORD PTR [rax+rcx*1+0x0]
    e213:	00 a6 7f ff ff 8c    	add    BYTE PTR [rsi-0x73000081],ah
    e219:	08 00                	or     BYTE PTR [rax],al
    e21b:	00 d6                	add    dh,dl
    e21d:	7f ff                	jg     e21e <__GNU_EH_FRAME_HDR+0x136>
    e21f:	ff ac 08 00 00 0d 80 	jmp    FWORD PTR [rax+rcx*1-0x7ff30000]
    e226:	ff                   	(bad)  
    e227:	ff c8                	dec    eax
    e229:	08 00                	or     BYTE PTR [rax],al
    e22b:	00 52 81             	add    BYTE PTR [rdx-0x7f],dl
    e22e:	ff                   	(bad)  
    e22f:	ff                   	(bad)  
    e230:	e8 08 00 00 b2       	call   ffffffffb200e23d <_end+0xffffffffb1ed2dfd>
    e235:	82                   	(bad)  
    e236:	ff                   	(bad)  
    e237:	ff 08                	dec    DWORD PTR [rax]
    e239:	09 00                	or     DWORD PTR [rax],eax
    e23b:	00 13                	add    BYTE PTR [rbx],dl
    e23d:	83 ff ff             	cmp    edi,0xffffffff
    e240:	28 09                	sub    BYTE PTR [rcx],cl
    e242:	00 00                	add    BYTE PTR [rax],al
    e244:	4c 83 ff ff          	rex.WR cmp rdi,0xffffffffffffffff
    e248:	48 09 00             	or     QWORD PTR [rax],rax
    e24b:	00 0a                	add    BYTE PTR [rdx],cl
    e24d:	84 ff                	test   bh,bh
    e24f:	ff 68 09             	jmp    FWORD PTR [rax+0x9]
    e252:	00 00                	add    BYTE PTR [rax],al
    e254:	c8 86 ff ff          	enter  0xff86,0xff
    e258:	88 09                	mov    BYTE PTR [rcx],cl
    e25a:	00 00                	add    BYTE PTR [rax],al
    e25c:	c0 88 ff ff a8 09 00 	ror    BYTE PTR [rax+0x9a8ffff],0x0
    e263:	00 1a                	add    BYTE PTR [rdx],bl
    e265:	89 ff                	mov    edi,edi
    e267:	ff c8                	dec    eax
    e269:	09 00                	or     DWORD PTR [rax],eax
    e26b:	00 00                	add    BYTE PTR [rax],al
    e26d:	8c ff                	mov    edi,?
    e26f:	ff                   	(bad)  
    e270:	e8 09 00 00 55       	call   5500e27e <_end+0x54ed2e3e>
    e275:	90                   	nop
    e276:	ff                   	(bad)  
    e277:	ff 08                	dec    DWORD PTR [rax]
    e279:	0a 00                	or     al,BYTE PTR [rax]
    e27b:	00 7f 90             	add    BYTE PTR [rdi-0x70],bh
    e27e:	ff                   	(bad)  
    e27f:	ff 24 0a             	jmp    QWORD PTR [rdx+rcx*1]
    e282:	00 00                	add    BYTE PTR [rax],al
    e284:	36 92                	ss xchg edx,eax
    e286:	ff                   	(bad)  
    e287:	ff 48 0a             	dec    DWORD PTR [rax+0xa]
    e28a:	00 00                	add    BYTE PTR [rax],al
    e28c:	4d 92                	rex.WRB xchg r10,rax
    e28e:	ff                   	(bad)  
    e28f:	ff 68 0a             	jmp    FWORD PTR [rax+0xa]
    e292:	00 00                	add    BYTE PTR [rax],al
    e294:	9c                   	pushf  
    e295:	92                   	xchg   edx,eax
    e296:	ff                   	(bad)  
    e297:	ff 88 0a 00 00 e9    	dec    DWORD PTR [rax-0x16fffff6]
    e29d:	92                   	xchg   edx,eax
    e29e:	ff                   	(bad)  
    e29f:	ff a8 0a 00 00 60    	jmp    FWORD PTR [rax+0x6000000a]
    e2a5:	94                   	xchg   esp,eax
    e2a6:	ff                   	(bad)  
    e2a7:	ff c4                	inc    esp
    e2a9:	0a 00                	or     al,BYTE PTR [rax]
    e2ab:	00 fc                	add    ah,bh
    e2ad:	94                   	xchg   esp,eax
    e2ae:	ff                   	(bad)  
    e2af:	ff                   	(bad)  
    e2b0:	e8 0a 00 00 ea       	call   ffffffffea00e2bf <_end+0xffffffffe9ed2e7f>
    e2b5:	96                   	xchg   esi,eax
    e2b6:	ff                   	(bad)  
    e2b7:	ff 08                	dec    DWORD PTR [rax]
    e2b9:	0b 00                	or     eax,DWORD PTR [rax]
    e2bb:	00 d2                	add    dl,dl
    e2bd:	98                   	cwde   
    e2be:	ff                   	(bad)  
    e2bf:	ff 28                	jmp    FWORD PTR [rax]
    e2c1:	0b 00                	or     eax,DWORD PTR [rax]
    e2c3:	00 3e                	add    BYTE PTR [rsi],bh
    e2c5:	99                   	cdq    
    e2c6:	ff                   	(bad)  
    e2c7:	ff 48 0b             	dec    DWORD PTR [rax+0xb]
    e2ca:	00 00                	add    BYTE PTR [rax],al
    e2cc:	b0 99                	mov    al,0x99
    e2ce:	ff                   	(bad)  
    e2cf:	ff 68 0b             	jmp    FWORD PTR [rax+0xb]
    e2d2:	00 00                	add    BYTE PTR [rax],al
    e2d4:	c1 9a ff ff 88 0b 00 	rcr    DWORD PTR [rdx+0xb88ffff],0x0
    e2db:	00 1d 9b ff ff a8    	add    BYTE PTR [rip+0xffffffffa8ffff9b],bl        # ffffffffa900e27c <_end+0xffffffffa8ed2e3c>
    e2e1:	0b 00                	or     eax,DWORD PTR [rax]
    e2e3:	00 5b 9b             	add    BYTE PTR [rbx-0x65],bl
    e2e6:	ff                   	(bad)  
    e2e7:	ff c8                	dec    eax
    e2e9:	0b 00                	or     eax,DWORD PTR [rax]
    e2eb:	00 e1                	add    cl,ah
    e2ed:	9b                   	fwait
    e2ee:	ff                   	(bad)  
    e2ef:	ff                   	(bad)  
    e2f0:	e8 0b 00 00 c0       	call   ffffffffc000e300 <_end+0xffffffffbfed2ec0>
    e2f5:	9c                   	pushf  
    e2f6:	ff                   	(bad)  
    e2f7:	ff 08                	dec    DWORD PTR [rax]
    e2f9:	0c 00                	or     al,0x0
    e2fb:	00 34 9d ff ff 28 0c 	add    BYTE PTR [rbx*4+0xc28ffff],dh
    e302:	00 00                	add    BYTE PTR [rax],al
    e304:	d0 9d ff ff 48 0c    	rcr    BYTE PTR [rbp+0xc48ffff],1
    e30a:	00 00                	add    BYTE PTR [rax],al
    e30c:	f9                   	stc    
    e30d:	9d                   	popf   
    e30e:	ff                   	(bad)  
    e30f:	ff 68 0c             	jmp    FWORD PTR [rax+0xc]
    e312:	00 00                	add    BYTE PTR [rax],al
    e314:	22 9e ff ff 88 0c    	and    bl,BYTE PTR [rsi+0xc88ffff]
    e31a:	00 00                	add    BYTE PTR [rax],al
    e31c:	76 9f                	jbe    e2bd <__GNU_EH_FRAME_HDR+0x1d5>
    e31e:	ff                   	(bad)  
    e31f:	ff b0 0c 00 00 89    	push   QWORD PTR [rax-0x76fffff4]
    e325:	a0 ff ff d0 0c 00 00 	movabs al,ds:0xa18200000cd0ffff
    e32c:	82 a1 
    e32e:	ff                   	(bad)  
    e32f:	ff f0                	push   rax
    e331:	0c 00                	or     al,0x0
    e333:	00 24 a2             	add    BYTE PTR [rdx+riz*4],ah
    e336:	ff                   	(bad)  
    e337:	ff 10                	call   QWORD PTR [rax]
    e339:	0d 00 00 42 a2       	or     eax,0xa2420000
    e33e:	ff                   	(bad)  
    e33f:	ff 30                	push   QWORD PTR [rax]
    e341:	0d 00 00 a5 a3       	or     eax,0xa3a50000
    e346:	ff                   	(bad)  
    e347:	ff 50 0d             	call   QWORD PTR [rax+0xd]
    e34a:	00 00                	add    BYTE PTR [rax],al
    e34c:	b6 a5                	mov    dh,0xa5
    e34e:	ff                   	(bad)  
    e34f:	ff 80 0d 00 00 68    	inc    DWORD PTR [rax+0x6800000d]
    e355:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    e356:	ff                   	(bad)  
    e357:	ff a0 0d 00 00 0d    	jmp    QWORD PTR [rax+0xd00000d]
    e35d:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    e35e:	ff                   	(bad)  
    e35f:	ff c0                	inc    eax
    e361:	0d 00 00 b9 a7       	or     eax,0xa7b90000
    e366:	ff                   	(bad)  
    e367:	ff                   	(bad)  
    e368:	e8 0d 00 00 8e       	call   ffffffff8e00e37a <_end+0xffffffff8ded2f3a>
    e36d:	a8 ff                	test   al,0xff
    e36f:	ff 08                	dec    DWORD PTR [rax]
    e371:	0e                   	(bad)  
    e372:	00 00                	add    BYTE PTR [rax],al
    e374:	6d                   	ins    DWORD PTR es:[rdi],dx
    e375:	a9 ff ff 28 0e       	test   eax,0xe28ffff
    e37a:	00 00                	add    BYTE PTR [rax],al
    e37c:	ea                   	(bad)  
    e37d:	a9 ff ff 48 0e       	test   eax,0xe48ffff
    e382:	00 00                	add    BYTE PTR [rax],al
    e384:	20 ab ff ff 68 0e    	and    BYTE PTR [rbx+0xe68ffff],ch
    e38a:	00 00                	add    BYTE PTR [rax],al
    e38c:	9e                   	sahf   
    e38d:	ab                   	stos   DWORD PTR es:[rdi],eax
    e38e:	ff                   	(bad)  
    e38f:	ff 88 0e 00 00 d7    	dec    DWORD PTR [rax-0x28fffff2]
    e395:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    e396:	ff                   	(bad)  
    e397:	ff a8 0e 00 00 a0    	jmp    FWORD PTR [rax-0x5ffffff2]
    e39d:	ae                   	scas   al,BYTE PTR es:[rdi]
    e39e:	ff                   	(bad)  
    e39f:	ff c8                	dec    eax
    e3a1:	0e                   	(bad)  
    e3a2:	00 00                	add    BYTE PTR [rax],al
    e3a4:	41 b0 ff             	mov    r8b,0xff
    e3a7:	ff                   	(bad)  
    e3a8:	e8 0e 00 00 54       	call   5400e3bb <_end+0x53ed2f7b>
    e3ad:	b1 ff                	mov    cl,0xff
    e3af:	ff 08                	dec    DWORD PTR [rax]
    e3b1:	0f 00 00             	sldt   WORD PTR [rax]
    e3b4:	ba b1 ff ff 28       	mov    edx,0x28ffffb1
    e3b9:	0f 00 00             	sldt   WORD PTR [rax]
    e3bc:	2f                   	(bad)  
    e3bd:	b2 ff                	mov    dl,0xff
    e3bf:	ff 48 0f             	dec    DWORD PTR [rax+0xf]
    e3c2:	00 00                	add    BYTE PTR [rax],al
    e3c4:	0a b3 ff ff 68 0f    	or     dh,BYTE PTR [rbx+0xf68ffff]
    e3ca:	00 00                	add    BYTE PTR [rax],al
    e3cc:	7c b4                	jl     e382 <__GNU_EH_FRAME_HDR+0x29a>
    e3ce:	ff                   	(bad)  
    e3cf:	ff 88 0f 00 00 e8    	dec    DWORD PTR [rax-0x17fffff1]
    e3d5:	b4 ff                	mov    ah,0xff
    e3d7:	ff a8 0f 00 00 68    	jmp    FWORD PTR [rax+0x6800000f]
    e3dd:	b5 ff                	mov    ch,0xff
    e3df:	ff c8                	dec    eax
    e3e1:	0f 00 00             	sldt   WORD PTR [rax]
    e3e4:	7e b5                	jle    e39b <__GNU_EH_FRAME_HDR+0x2b3>
    e3e6:	ff                   	(bad)  
    e3e7:	ff                   	(bad)  
    e3e8:	e8 0f 00 00 b9       	call   ffffffffb900e3fc <_end+0xffffffffb8ed2fbc>
    e3ed:	b6 ff                	mov    dh,0xff
    e3ef:	ff 0c 10             	dec    DWORD PTR [rax+rdx*1]
    e3f2:	00 00                	add    BYTE PTR [rax],al
    e3f4:	1d b7 ff ff 2c       	sbb    eax,0x2cffffb7
    e3f9:	10 00                	adc    BYTE PTR [rax],al
    e3fb:	00 70 b7             	add    BYTE PTR [rax-0x49],dh
    e3fe:	ff                   	(bad)  
    e3ff:	ff 4c 10 00          	dec    DWORD PTR [rax+rdx*1+0x0]
    e403:	00 21                	add    BYTE PTR [rcx],ah
    e405:	b8 ff ff 6c 10       	mov    eax,0x106cffff
    e40a:	00 00                	add    BYTE PTR [rax],al
    e40c:	ec                   	in     al,dx
    e40d:	b8 ff ff 8c 10       	mov    eax,0x108cffff
    e412:	00 00                	add    BYTE PTR [rax],al
    e414:	41 b9 ff ff ac 10    	mov    r9d,0x10acffff
    e41a:	00 00                	add    BYTE PTR [rax],al
    e41c:	71 b9                	jno    e3d7 <__GNU_EH_FRAME_HDR+0x2ef>
    e41e:	ff                   	(bad)  
    e41f:	ff cc                	dec    esp
    e421:	10 00                	adc    BYTE PTR [rax],al
    e423:	00 d8                	add    al,bl
    e425:	b9 ff ff ec 10       	mov    ecx,0x10ecffff
    e42a:	00 00                	add    BYTE PTR [rax],al
    e42c:	3b c9                	cmp    ecx,ecx
    e42e:	ff                   	(bad)  
    e42f:	ff 10                	call   QWORD PTR [rax]
    e431:	11 00                	adc    DWORD PTR [rax],eax
    e433:	00 81 c9 ff ff 30    	add    BYTE PTR [rcx+0x30ffffc9],al
    e439:	11 00                	adc    DWORD PTR [rax],eax
    e43b:	00 bf cb ff ff 58    	add    BYTE PTR [rdi+0x58ffffcb],bh
    e441:	11 00                	adc    DWORD PTR [rax],eax
    e443:	00 6a cd             	add    BYTE PTR [rdx-0x33],ch
    e446:	ff                   	(bad)  
    e447:	ff                   	(bad)  
    e448:	78 11                	js     e45b <__GNU_EH_FRAME_HDR+0x373>
    e44a:	00 00                	add    BYTE PTR [rax],al
    e44c:	7c ce                	jl     e41c <__GNU_EH_FRAME_HDR+0x334>
    e44e:	ff                   	(bad)  
    e44f:	ff 98 11 00 00 39    	call   FWORD PTR [rax+0x39000011]
    e455:	cf                   	iret   
    e456:	ff                   	(bad)  
    e457:	ff c0                	inc    eax
    e459:	11 00                	adc    DWORD PTR [rax],eax
    e45b:	00 d4                	add    ah,dl
    e45d:	d0 ff                	sar    bh,1
    e45f:	ff                   	(bad)  
    e460:	e8 11 00 00 79       	call   7900e476 <_end+0x78ed3036>
    e465:	d1 ff                	sar    edi,1
    e467:	ff 08                	dec    DWORD PTR [rax]
    e469:	12 00                	adc    al,BYTE PTR [rax]
    e46b:	00 bc d2 ff ff 28 12 	add    BYTE PTR [rdx+rdx*8+0x1228ffff],bh
    e472:	00 00                	add    BYTE PTR [rax],al
    e474:	af                   	scas   eax,DWORD PTR es:[rdi]
    e475:	d3 ff                	sar    edi,cl
    e477:	ff 48 12             	dec    DWORD PTR [rax+0x12]
    e47a:	00 00                	add    BYTE PTR [rax],al
    e47c:	1f                   	(bad)  
    e47d:	d4                   	(bad)  
    e47e:	ff                   	(bad)  
    e47f:	ff 68 12             	jmp    FWORD PTR [rax+0x12]
    e482:	00 00                	add    BYTE PTR [rax],al
    e484:	c4                   	(bad)  
    e485:	d6                   	(bad)  
    e486:	ff                   	(bad)  
    e487:	ff 88 12 00 00 2e    	dec    DWORD PTR [rax+0x2e000012]
    e48d:	d7                   	xlat   BYTE PTR ds:[rbx]
    e48e:	ff                   	(bad)  
    e48f:	ff a8 12 00 00 9c    	jmp    FWORD PTR [rax-0x63ffffee]
    e495:	d7                   	xlat   BYTE PTR ds:[rbx]
    e496:	ff                   	(bad)  
    e497:	ff c8                	dec    eax
    e499:	12 00                	adc    al,BYTE PTR [rax]
    e49b:	00 2a                	add    BYTE PTR [rdx],ch
    e49d:	d9 ff                	fcos   
    e49f:	ff f0                	push   rax
    e4a1:	12 00                	adc    al,BYTE PTR [rax]
    e4a3:	00 d8                	add    al,bl
    e4a5:	db ff                	(bad)  
    e4a7:	ff 10                	call   QWORD PTR [rax]
    e4a9:	13 00                	adc    eax,DWORD PTR [rax]
    e4ab:	00 48 dc             	add    BYTE PTR [rax-0x24],cl
    e4ae:	ff                   	(bad)  
    e4af:	ff 58 13             	call   FWORD PTR [rax+0x13]
	...

Disassembly of section .eh_frame:

000000000000e4b8 <__FRAME_END__-0xf9c>:
    e4b8:	14 00                	adc    al,0x0
    e4ba:	00 00                	add    BYTE PTR [rax],al
    e4bc:	00 00                	add    BYTE PTR [rax],al
    e4be:	00 00                	add    BYTE PTR [rax],al
    e4c0:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    e4c3:	00 01                	add    BYTE PTR [rcx],al
    e4c5:	78 10                	js     e4d7 <__GNU_EH_FRAME_HDR+0x3ef>
    e4c7:	01 1b                	add    DWORD PTR [rbx],ebx
    e4c9:	0c 07                	or     al,0x7
    e4cb:	08 90 01 00 00 14    	or     BYTE PTR [rax+0x14000001],dl
    e4d1:	00 00                	add    BYTE PTR [rax],al
    e4d3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e4d6:	00 00                	add    BYTE PTR [rax],al
    e4d8:	08 44 ff ff          	or     BYTE PTR [rdi+rdi*8-0x1],al
    e4dc:	2f                   	(bad)  
    e4dd:	00 00                	add    BYTE PTR [rax],al
    e4df:	00 00                	add    BYTE PTR [rax],al
    e4e1:	44 07                	rex.R (bad) 
    e4e3:	10 00                	adc    BYTE PTR [rax],al
    e4e5:	00 00                	add    BYTE PTR [rax],al
    e4e7:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    e4ea:	00 00                	add    BYTE PTR [rax],al
    e4ec:	34 00                	xor    al,0x0
    e4ee:	00 00                	add    BYTE PTR [rax],al
    e4f0:	30 3b                	xor    BYTE PTR [rbx],bh
    e4f2:	ff                   	(bad)  
    e4f3:	ff 60 04             	jmp    QWORD PTR [rax+0x4]
    e4f6:	00 00                	add    BYTE PTR [rax],al
    e4f8:	00 0e                	add    BYTE PTR [rsi],cl
    e4fa:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
    e4fd:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
    e500:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
    e503:	80 00 3f             	add    BYTE PTR [rax],0x3f
    e506:	1a 3a                	sbb    bh,BYTE PTR [rdx]
    e508:	2a 33                	sub    dh,BYTE PTR [rbx]
    e50a:	24 22                	and    al,0x22
    e50c:	00 00                	add    BYTE PTR [rax],al
    e50e:	00 00                	add    BYTE PTR [rax],al
    e510:	14 00                	adc    al,0x0
    e512:	00 00                	add    BYTE PTR [rax],al
    e514:	5c                   	pop    rsp
    e515:	00 00                	add    BYTE PTR [rax],al
    e517:	00 68 3f             	add    BYTE PTR [rax+0x3f],ch
    e51a:	ff                   	(bad)  
    e51b:	ff 10                	call   QWORD PTR [rax]
	...
    e525:	00 00                	add    BYTE PTR [rax],al
    e527:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    e52a:	00 00                	add    BYTE PTR [rax],al
    e52c:	74 00                	je     e52e <__GNU_EH_FRAME_HDR+0x446>
    e52e:	00 00                	add    BYTE PTR [rax],al
    e530:	60                   	(bad)  
    e531:	3f                   	(bad)  
    e532:	ff                   	(bad)  
    e533:	ff 50 04             	call   QWORD PTR [rax+0x4]
	...
    e53e:	00 00                	add    BYTE PTR [rax],al
    e540:	1c 00                	sbb    al,0x0
    e542:	00 00                	add    BYTE PTR [rax],al
    e544:	8c 00                	mov    WORD PTR [rax],es
    e546:	00 00                	add    BYTE PTR [rax],al
    e548:	81 44 ff ff 3a 00 00 	add    DWORD PTR [rdi+rdi*8-0x1],0x3a
    e54f:	00 
    e550:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e553:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e559:	71 0c                	jno    e567 <__GNU_EH_FRAME_HDR+0x47f>
    e55b:	07                   	(bad)  
    e55c:	08 00                	or     BYTE PTR [rax],al
    e55e:	00 00                	add    BYTE PTR [rax],al
    e560:	24 00                	and    al,0x0
    e562:	00 00                	add    BYTE PTR [rax],al
    e564:	ac                   	lods   al,BYTE PTR ds:[rsi]
    e565:	00 00                	add    BYTE PTR [rax],al
    e567:	00 9b 44 ff ff 57    	add    BYTE PTR [rbx+0x57ffff44],bl
    e56d:	01 00                	add    DWORD PTR [rax],eax
    e56f:	00 00                	add    BYTE PTR [rax],al
    e571:	45 0e                	rex.RB (bad) 
    e573:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e579:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    e57d:	49 01 0c 07          	add    QWORD PTR [r15+rax*1],rcx
    e581:	08 00                	or     BYTE PTR [rax],al
    e583:	00 00                	add    BYTE PTR [rax],al
    e585:	00 00                	add    BYTE PTR [rax],al
    e587:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e58a:	00 00                	add    BYTE PTR [rax],al
    e58c:	d4                   	(bad)  
    e58d:	00 00                	add    BYTE PTR [rax],al
    e58f:	00 ca                	add    dl,cl
    e591:	45 ff                	rex.RB (bad) 
    e593:	ff f4                	push   rsp
    e595:	02 00                	add    al,BYTE PTR [rax]
    e597:	00 00                	add    BYTE PTR [rax],al
    e599:	45 0e                	rex.RB (bad) 
    e59b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e5a1:	03 eb                	add    ebp,ebx
    e5a3:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    e5a6:	08 00                	or     BYTE PTR [rax],al
    e5a8:	1c 00                	sbb    al,0x0
    e5aa:	00 00                	add    BYTE PTR [rax],al
    e5ac:	f4                   	hlt    
    e5ad:	00 00                	add    BYTE PTR [rax],al
    e5af:	00 9e 48 ff ff 13    	add    BYTE PTR [rsi+0x13ffff48],bl
    e5b5:	01 00                	add    DWORD PTR [rax],eax
    e5b7:	00 00                	add    BYTE PTR [rax],al
    e5b9:	45 0e                	rex.RB (bad) 
    e5bb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e5c1:	03 0a                	add    ecx,DWORD PTR [rdx]
    e5c3:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    e5c6:	08 00                	or     BYTE PTR [rax],al
    e5c8:	1c 00                	sbb    al,0x0
    e5ca:	00 00                	add    BYTE PTR [rax],al
    e5cc:	14 01                	adc    al,0x1
    e5ce:	00 00                	add    BYTE PTR [rax],al
    e5d0:	91                   	xchg   ecx,eax
    e5d1:	49 ff                	rex.WB (bad) 
    e5d3:	ff ae 00 00 00 00    	jmp    FWORD PTR [rsi+0x0]
    e5d9:	45 0e                	rex.RB (bad) 
    e5db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e5e1:	02 a5 0c 07 08 00    	add    ah,BYTE PTR [rbp+0x8070c]
    e5e7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e5ea:	00 00                	add    BYTE PTR [rax],al
    e5ec:	34 01                	xor    al,0x1
    e5ee:	00 00                	add    BYTE PTR [rax],al
    e5f0:	1f                   	(bad)  
    e5f1:	4a ff                	rex.WX (bad) 
    e5f3:	ff a6 00 00 00 00    	jmp    QWORD PTR [rsi+0x0]
    e5f9:	45 0e                	rex.RB (bad) 
    e5fb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e601:	02 9d 0c 07 08 00    	add    bl,BYTE PTR [rbp+0x8070c]
    e607:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e60a:	00 00                	add    BYTE PTR [rax],al
    e60c:	54                   	push   rsp
    e60d:	01 00                	add    DWORD PTR [rax],eax
    e60f:	00 a5 4a ff ff 95    	add    BYTE PTR [rbp-0x6a0000b6],ah
    e615:	00 00                	add    BYTE PTR [rax],al
    e617:	00 00                	add    BYTE PTR [rax],al
    e619:	45 0e                	rex.RB (bad) 
    e61b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e621:	02 8c 0c 07 08 00 00 	add    cl,BYTE PTR [rsp+rcx*1+0x807]
    e628:	1c 00                	sbb    al,0x0
    e62a:	00 00                	add    BYTE PTR [rax],al
    e62c:	74 01                	je     e62f <__GNU_EH_FRAME_HDR+0x547>
    e62e:	00 00                	add    BYTE PTR [rax],al
    e630:	1a 4b ff             	sbb    cl,BYTE PTR [rbx-0x1]
    e633:	ff 94 00 00 00 00 45 	call   QWORD PTR [rax+rax*1+0x45000000]
    e63a:	0e                   	(bad)  
    e63b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e641:	02 8b 0c 07 08 00    	add    cl,BYTE PTR [rbx+0x8070c]
    e647:	00 28                	add    BYTE PTR [rax],ch
    e649:	00 00                	add    BYTE PTR [rax],al
    e64b:	00 94 01 00 00 8e 4b 	add    BYTE PTR [rcx+rax*1+0x4b8e0000],dl
    e652:	ff                   	(bad)  
    e653:	ff cc                	dec    esp
    e655:	01 00                	add    DWORD PTR [rax],eax
    e657:	00 00                	add    BYTE PTR [rax],al
    e659:	45 0e                	rex.RB (bad) 
    e65b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e661:	4d 8f 03             	rex.WRB pop QWORD PTR [r11]
    e664:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
    e66b:	07                   	(bad)  
    e66c:	03 b6 01 0c 07 08    	add    esi,DWORD PTR [rsi+0x8070c01]
    e672:	00 00                	add    BYTE PTR [rax],al
    e674:	20 00                	and    BYTE PTR [rax],al
    e676:	00 00                	add    BYTE PTR [rax],al
    e678:	c0 01 00             	rol    BYTE PTR [rcx],0x0
    e67b:	00 2e                	add    BYTE PTR [rsi],ch
    e67d:	4d ff                	rex.WRB (bad) 
    e67f:	ff d4                	call   rsp
    e681:	00 00                	add    BYTE PTR [rax],al
    e683:	00 00                	add    BYTE PTR [rax],al
    e685:	45 0e                	rex.RB (bad) 
    e687:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e68d:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    e691:	c6                   	(bad)  
    e692:	0c 07                	or     al,0x7
    e694:	08 00                	or     BYTE PTR [rax],al
    e696:	00 00                	add    BYTE PTR [rax],al
    e698:	20 00                	and    BYTE PTR [rax],al
    e69a:	00 00                	add    BYTE PTR [rax],al
    e69c:	e4 01                	in     al,0x1
    e69e:	00 00                	add    BYTE PTR [rax],al
    e6a0:	de 4d ff             	fimul  WORD PTR [rbp-0x1]
    e6a3:	ff c7                	inc    edi
    e6a5:	00 00                	add    BYTE PTR [rax],al
    e6a7:	00 00                	add    BYTE PTR [rax],al
    e6a9:	45 0e                	rex.RB (bad) 
    e6ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e6b1:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    e6b5:	b9 0c 07 08 00       	mov    ecx,0x8070c
    e6ba:	00 00                	add    BYTE PTR [rax],al
    e6bc:	1c 00                	sbb    al,0x0
    e6be:	00 00                	add    BYTE PTR [rax],al
    e6c0:	08 02                	or     BYTE PTR [rdx],al
    e6c2:	00 00                	add    BYTE PTR [rax],al
    e6c4:	81 4e ff ff 53 00 00 	or     DWORD PTR [rsi-0x1],0x53ff
    e6cb:	00 00                	add    BYTE PTR [rax],al
    e6cd:	45 0e                	rex.RB (bad) 
    e6cf:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e6d5:	02 4a 0c             	add    cl,BYTE PTR [rdx+0xc]
    e6d8:	07                   	(bad)  
    e6d9:	08 00                	or     BYTE PTR [rax],al
    e6db:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e6de:	00 00                	add    BYTE PTR [rax],al
    e6e0:	28 02                	sub    BYTE PTR [rdx],al
    e6e2:	00 00                	add    BYTE PTR [rax],al
    e6e4:	b4 4e                	mov    ah,0x4e
    e6e6:	ff                   	(bad)  
    e6e7:	ff 33                	push   QWORD PTR [rbx]
    e6e9:	00 00                	add    BYTE PTR [rax],al
    e6eb:	00 00                	add    BYTE PTR [rax],al
    e6ed:	45 0e                	rex.RB (bad) 
    e6ef:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e6f5:	6a 0c                	push   0xc
    e6f7:	07                   	(bad)  
    e6f8:	08 00                	or     BYTE PTR [rax],al
    e6fa:	00 00                	add    BYTE PTR [rax],al
    e6fc:	1c 00                	sbb    al,0x0
    e6fe:	00 00                	add    BYTE PTR [rax],al
    e700:	48 02 00             	rex.W add al,BYTE PTR [rax]
    e703:	00 c7                	add    bh,al
    e705:	4e ff                	rex.WRX (bad) 
    e707:	ff 21                	jmp    QWORD PTR [rcx]
    e709:	00 00                	add    BYTE PTR [rax],al
    e70b:	00 00                	add    BYTE PTR [rax],al
    e70d:	45 0e                	rex.RB (bad) 
    e70f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e715:	58                   	pop    rax
    e716:	0c 07                	or     al,0x7
    e718:	08 00                	or     BYTE PTR [rax],al
    e71a:	00 00                	add    BYTE PTR [rax],al
    e71c:	20 00                	and    BYTE PTR [rax],al
    e71e:	00 00                	add    BYTE PTR [rax],al
    e720:	68 02 00 00 c8       	push   0xffffffffc8000002
    e725:	4e ff                	rex.WRX (bad) 
    e727:	ff 69 00             	jmp    FWORD PTR [rcx+0x0]
    e72a:	00 00                	add    BYTE PTR [rax],al
    e72c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e72f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e735:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    e739:	5b                   	pop    rbx
    e73a:	0c 07                	or     al,0x7
    e73c:	08 00                	or     BYTE PTR [rax],al
    e73e:	00 00                	add    BYTE PTR [rax],al
    e740:	1c 00                	sbb    al,0x0
    e742:	00 00                	add    BYTE PTR [rax],al
    e744:	8c 02                	mov    WORD PTR [rdx],es
    e746:	00 00                	add    BYTE PTR [rax],al
    e748:	0d 4f ff ff 25       	or     eax,0x25ffff4f
    e74d:	04 00                	add    al,0x0
    e74f:	00 00                	add    BYTE PTR [rax],al
    e751:	45 0e                	rex.RB (bad) 
    e753:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e759:	03 1c 04             	add    ebx,DWORD PTR [rsp+rax*1]
    e75c:	0c 07                	or     al,0x7
    e75e:	08 00                	or     BYTE PTR [rax],al
    e760:	1c 00                	sbb    al,0x0
    e762:	00 00                	add    BYTE PTR [rax],al
    e764:	ac                   	lods   al,BYTE PTR ds:[rsi]
    e765:	02 00                	add    al,BYTE PTR [rax]
    e767:	00 12                	add    BYTE PTR [rdx],dl
    e769:	53                   	push   rbx
    e76a:	ff                   	(bad)  
    e76b:	ff 5d 01             	call   FWORD PTR [rbp+0x1]
    e76e:	00 00                	add    BYTE PTR [rax],al
    e770:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e773:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e779:	03 54 01 0c          	add    edx,DWORD PTR [rcx+rax*1+0xc]
    e77d:	07                   	(bad)  
    e77e:	08 00                	or     BYTE PTR [rax],al
    e780:	1c 00                	sbb    al,0x0
    e782:	00 00                	add    BYTE PTR [rax],al
    e784:	cc                   	int3   
    e785:	02 00                	add    al,BYTE PTR [rax]
    e787:	00 4f 54             	add    BYTE PTR [rdi+0x54],cl
    e78a:	ff                   	(bad)  
    e78b:	ff 44 08 00          	inc    DWORD PTR [rax+rcx*1+0x0]
    e78f:	00 00                	add    BYTE PTR [rax],al
    e791:	45 0e                	rex.RB (bad) 
    e793:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e799:	03 3b                	add    edi,DWORD PTR [rbx]
    e79b:	08 0c 07             	or     BYTE PTR [rdi+rax*1],cl
    e79e:	08 00                	or     BYTE PTR [rax],al
    e7a0:	1c 00                	sbb    al,0x0
    e7a2:	00 00                	add    BYTE PTR [rax],al
    e7a4:	ec                   	in     al,dx
    e7a5:	02 00                	add    al,BYTE PTR [rax]
    e7a7:	00 73 5c             	add    BYTE PTR [rbx+0x5c],dh
    e7aa:	ff                   	(bad)  
    e7ab:	ff 43 09             	inc    DWORD PTR [rbx+0x9]
    e7ae:	00 00                	add    BYTE PTR [rax],al
    e7b0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e7b3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e7b9:	03 3a                	add    edi,DWORD PTR [rdx]
    e7bb:	09 0c 07             	or     DWORD PTR [rdi+rax*1],ecx
    e7be:	08 00                	or     BYTE PTR [rax],al
    e7c0:	1c 00                	sbb    al,0x0
    e7c2:	00 00                	add    BYTE PTR [rax],al
    e7c4:	0c 03                	or     al,0x3
    e7c6:	00 00                	add    BYTE PTR [rax],al
    e7c8:	96                   	xchg   esi,eax
    e7c9:	65 ff                	gs (bad) 
    e7cb:	ff 55 01             	call   QWORD PTR [rbp+0x1]
    e7ce:	00 00                	add    BYTE PTR [rax],al
    e7d0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e7d3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e7d9:	03 4c 01 0c          	add    ecx,DWORD PTR [rcx+rax*1+0xc]
    e7dd:	07                   	(bad)  
    e7de:	08 00                	or     BYTE PTR [rax],al
    e7e0:	1c 00                	sbb    al,0x0
    e7e2:	00 00                	add    BYTE PTR [rax],al
    e7e4:	2c 03                	sub    al,0x3
    e7e6:	00 00                	add    BYTE PTR [rax],al
    e7e8:	cb                   	retf   
    e7e9:	66 ff                	data16 (bad) 
    e7eb:	ff                   	(bad)  
    e7ec:	ff 00                	inc    DWORD PTR [rax]
    e7ee:	00 00                	add    BYTE PTR [rax],al
    e7f0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e7f3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e7f9:	02 f6                	add    dh,dh
    e7fb:	0c 07                	or     al,0x7
    e7fd:	08 00                	or     BYTE PTR [rax],al
    e7ff:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e802:	00 00                	add    BYTE PTR [rax],al
    e804:	4c 03 00             	add    r8,QWORD PTR [rax]
    e807:	00 aa 67 ff ff ec    	add    BYTE PTR [rdx-0x13000099],ch
    e80d:	00 00                	add    BYTE PTR [rax],al
    e80f:	00 00                	add    BYTE PTR [rax],al
    e811:	45 0e                	rex.RB (bad) 
    e813:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e819:	02 e3                	add    ah,bl
    e81b:	0c 07                	or     al,0x7
    e81d:	08 00                	or     BYTE PTR [rax],al
    e81f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e822:	00 00                	add    BYTE PTR [rax],al
    e824:	6c                   	ins    BYTE PTR es:[rdi],dx
    e825:	03 00                	add    eax,DWORD PTR [rax]
    e827:	00 76 68             	add    BYTE PTR [rsi+0x68],dh
    e82a:	ff                   	(bad)  
    e82b:	ff b2 03 00 00 00    	push   QWORD PTR [rdx+0x3]
    e831:	45 0e                	rex.RB (bad) 
    e833:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e839:	03 a9 03 0c 07 08    	add    ebp,DWORD PTR [rcx+0x8070c03]
    e83f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e842:	00 00                	add    BYTE PTR [rax],al
    e844:	8c 03                	mov    WORD PTR [rbx],es
    e846:	00 00                	add    BYTE PTR [rax],al
    e848:	08 6c ff ff          	or     BYTE PTR [rdi+rdi*8-0x1],ch
    e84c:	83 00 00             	add    DWORD PTR [rax],0x0
    e84f:	00 00                	add    BYTE PTR [rax],al
    e851:	45 0e                	rex.RB (bad) 
    e853:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e859:	02 7a 0c             	add    bh,BYTE PTR [rdx+0xc]
    e85c:	07                   	(bad)  
    e85d:	08 00                	or     BYTE PTR [rax],al
    e85f:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    e862:	00 00                	add    BYTE PTR [rax],al
    e864:	ac                   	lods   al,BYTE PTR ds:[rsi]
    e865:	03 00                	add    eax,DWORD PTR [rax]
    e867:	00 6b 6c             	add    BYTE PTR [rbx+0x6c],ch
    e86a:	ff                   	(bad)  
    e86b:	ff 2a                	jmp    FWORD PTR [rdx]
    e86d:	02 00                	add    al,BYTE PTR [rax]
    e86f:	00 00                	add    BYTE PTR [rax],al
    e871:	45 0e                	rex.RB (bad) 
    e873:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e879:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    e87d:	19 02                	sbb    DWORD PTR [rdx],eax
    e87f:	0c 07                	or     al,0x7
    e881:	08 00                	or     BYTE PTR [rax],al
    e883:	00 00                	add    BYTE PTR [rax],al
    e885:	00 00                	add    BYTE PTR [rax],al
    e887:	00 20                	add    BYTE PTR [rax],ah
    e889:	00 00                	add    BYTE PTR [rax],al
    e88b:	00 d4                	add    ah,dl
    e88d:	03 00                	add    eax,DWORD PTR [rax]
    e88f:	00 6d 6e             	add    BYTE PTR [rbp+0x6e],ch
    e892:	ff                   	(bad)  
    e893:	ff 40 02             	inc    DWORD PTR [rax+0x2]
    e896:	00 00                	add    BYTE PTR [rax],al
    e898:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e89b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e8a1:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    e8a5:	32 02                	xor    al,BYTE PTR [rdx]
    e8a7:	0c 07                	or     al,0x7
    e8a9:	08 00                	or     BYTE PTR [rax],al
    e8ab:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e8ae:	00 00                	add    BYTE PTR [rax],al
    e8b0:	f8                   	clc    
    e8b1:	03 00                	add    eax,DWORD PTR [rax]
    e8b3:	00 89 70 ff ff 66    	add    BYTE PTR [rcx+0x66ffff70],cl
    e8b9:	00 00                	add    BYTE PTR [rax],al
    e8bb:	00 00                	add    BYTE PTR [rax],al
    e8bd:	45 0e                	rex.RB (bad) 
    e8bf:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e8c5:	02 5d 0c             	add    bl,BYTE PTR [rbp+0xc]
    e8c8:	07                   	(bad)  
    e8c9:	08 00                	or     BYTE PTR [rax],al
    e8cb:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e8ce:	00 00                	add    BYTE PTR [rax],al
    e8d0:	18 04 00             	sbb    BYTE PTR [rax+rax*1],al
    e8d3:	00 cf                	add    bh,cl
    e8d5:	70 ff                	jo     e8d6 <__GNU_EH_FRAME_HDR+0x7ee>
    e8d7:	ff 17                	call   QWORD PTR [rdi]
    e8d9:	00 00                	add    BYTE PTR [rax],al
    e8db:	00 00                	add    BYTE PTR [rax],al
    e8dd:	45 0e                	rex.RB (bad) 
    e8df:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e8e5:	4e 0c 07             	rex.WRX or al,0x7
    e8e8:	08 00                	or     BYTE PTR [rax],al
    e8ea:	00 00                	add    BYTE PTR [rax],al
    e8ec:	20 00                	and    BYTE PTR [rax],al
    e8ee:	00 00                	add    BYTE PTR [rax],al
    e8f0:	38 04 00             	cmp    BYTE PTR [rax+rax*1],al
    e8f3:	00 c6                	add    dh,al
    e8f5:	70 ff                	jo     e8f6 <__GNU_EH_FRAME_HDR+0x80e>
    e8f7:	ff 51 00             	call   QWORD PTR [rcx+0x0]
    e8fa:	00 00                	add    BYTE PTR [rax],al
    e8fc:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e8ff:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e905:	02 48 0c             	add    cl,BYTE PTR [rax+0xc]
    e908:	07                   	(bad)  
    e909:	08 00                	or     BYTE PTR [rax],al
    e90b:	00 00                	add    BYTE PTR [rax],al
    e90d:	00 00                	add    BYTE PTR [rax],al
    e90f:	00 20                	add    BYTE PTR [rax],ah
    e911:	00 00                	add    BYTE PTR [rax],al
    e913:	00 5c 04 00          	add    BYTE PTR [rsp+rax*1+0x0],bl
    e917:	00 f3                	add    bl,dh
    e919:	70 ff                	jo     e91a <__GNU_EH_FRAME_HDR+0x832>
    e91b:	ff 40 06             	inc    DWORD PTR [rax+0x6]
    e91e:	00 00                	add    BYTE PTR [rax],al
    e920:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e923:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e929:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    e92d:	32 06                	xor    al,BYTE PTR [rsi]
    e92f:	0c 07                	or     al,0x7
    e931:	08 00                	or     BYTE PTR [rax],al
    e933:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e936:	00 00                	add    BYTE PTR [rax],al
    e938:	80 04 00 00          	add    BYTE PTR [rax+rax*1],0x0
    e93c:	0f 77                	emms   
    e93e:	ff                   	(bad)  
    e93f:	ff 1a                	call   FWORD PTR [rdx]
    e941:	00 00                	add    BYTE PTR [rax],al
    e943:	00 00                	add    BYTE PTR [rax],al
    e945:	45 0e                	rex.RB (bad) 
    e947:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e94d:	51                   	push   rcx
    e94e:	0c 07                	or     al,0x7
    e950:	08 00                	or     BYTE PTR [rax],al
    e952:	00 00                	add    BYTE PTR [rax],al
    e954:	1c 00                	sbb    al,0x0
    e956:	00 00                	add    BYTE PTR [rax],al
    e958:	a0 04 00 00 09 77 ff 	movabs al,ds:0x29ffff7709000004
    e95f:	ff 29 
    e961:	00 00                	add    BYTE PTR [rax],al
    e963:	00 00                	add    BYTE PTR [rax],al
    e965:	45 0e                	rex.RB (bad) 
    e967:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e96d:	60                   	(bad)  
    e96e:	0c 07                	or     al,0x7
    e970:	08 00                	or     BYTE PTR [rax],al
    e972:	00 00                	add    BYTE PTR [rax],al
    e974:	1c 00                	sbb    al,0x0
    e976:	00 00                	add    BYTE PTR [rax],al
    e978:	c0 04 00 00          	rol    BYTE PTR [rax+rax*1],0x0
    e97c:	12 77 ff             	adc    dh,BYTE PTR [rdi-0x1]
    e97f:	ff 30                	push   QWORD PTR [rax]
    e981:	00 00                	add    BYTE PTR [rax],al
    e983:	00 00                	add    BYTE PTR [rax],al
    e985:	45 0e                	rex.RB (bad) 
    e987:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e98d:	67 0c 07             	addr32 or al,0x7
    e990:	08 00                	or     BYTE PTR [rax],al
    e992:	00 00                	add    BYTE PTR [rax],al
    e994:	18 00                	sbb    BYTE PTR [rax],al
    e996:	00 00                	add    BYTE PTR [rax],al
    e998:	e0 04                	loopne e99e <__GNU_EH_FRAME_HDR+0x8b6>
    e99a:	00 00                	add    BYTE PTR [rax],al
    e99c:	22 77 ff             	and    dh,BYTE PTR [rdi-0x1]
    e99f:	ff 37                	push   QWORD PTR [rdi]
    e9a1:	00 00                	add    BYTE PTR [rax],al
    e9a3:	00 00                	add    BYTE PTR [rax],al
    e9a5:	45 0e                	rex.RB (bad) 
    e9a7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e9ad:	00 00                	add    BYTE PTR [rax],al
    e9af:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e9b2:	00 00                	add    BYTE PTR [rax],al
    e9b4:	fc                   	cld    
    e9b5:	04 00                	add    al,0x0
    e9b7:	00 3d 77 ff ff 45    	add    BYTE PTR [rip+0x45ffff77],bh        # 4600e934 <_end+0x45ed34f4>
    e9bd:	01 00                	add    DWORD PTR [rax],eax
    e9bf:	00 00                	add    BYTE PTR [rax],al
    e9c1:	45 0e                	rex.RB (bad) 
    e9c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e9c9:	03 3c 01             	add    edi,DWORD PTR [rcx+rax*1]
    e9cc:	0c 07                	or     al,0x7
    e9ce:	08 00                	or     BYTE PTR [rax],al
    e9d0:	1c 00                	sbb    al,0x0
    e9d2:	00 00                	add    BYTE PTR [rax],al
    e9d4:	1c 05                	sbb    al,0x5
    e9d6:	00 00                	add    BYTE PTR [rax],al
    e9d8:	62                   	(bad)  
    e9d9:	78 ff                	js     e9da <__GNU_EH_FRAME_HDR+0x8f2>
    e9db:	ff 60 01             	jmp    QWORD PTR [rax+0x1]
    e9de:	00 00                	add    BYTE PTR [rax],al
    e9e0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e9e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e9e9:	03 57 01             	add    edx,DWORD PTR [rdi+0x1]
    e9ec:	0c 07                	or     al,0x7
    e9ee:	08 00                	or     BYTE PTR [rax],al
    e9f0:	1c 00                	sbb    al,0x0
    e9f2:	00 00                	add    BYTE PTR [rax],al
    e9f4:	3c 05                	cmp    al,0x5
    e9f6:	00 00                	add    BYTE PTR [rax],al
    e9f8:	a2 79 ff ff 61 00 00 	movabs ds:0x61ffff79,al
    e9ff:	00 00 
    ea01:	45 0e                	rex.RB (bad) 
    ea03:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea09:	02 58 0c             	add    bl,BYTE PTR [rax+0xc]
    ea0c:	07                   	(bad)  
    ea0d:	08 00                	or     BYTE PTR [rax],al
    ea0f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ea12:	00 00                	add    BYTE PTR [rax],al
    ea14:	5c                   	pop    rsp
    ea15:	05 00 00 e3 79       	add    eax,0x79e30000
    ea1a:	ff                   	(bad)  
    ea1b:	ff                   	(bad)  
    ea1c:	39 00                	cmp    DWORD PTR [rax],eax
    ea1e:	00 00                	add    BYTE PTR [rax],al
    ea20:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ea23:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea29:	70 0c                	jo     ea37 <__GNU_EH_FRAME_HDR+0x94f>
    ea2b:	07                   	(bad)  
    ea2c:	08 00                	or     BYTE PTR [rax],al
    ea2e:	00 00                	add    BYTE PTR [rax],al
    ea30:	1c 00                	sbb    al,0x0
    ea32:	00 00                	add    BYTE PTR [rax],al
    ea34:	7c 05                	jl     ea3b <__GNU_EH_FRAME_HDR+0x953>
    ea36:	00 00                	add    BYTE PTR [rax],al
    ea38:	fc                   	cld    
    ea39:	79 ff                	jns    ea3a <__GNU_EH_FRAME_HDR+0x952>
    ea3b:	ff                   	(bad)  
    ea3c:	be 00 00 00 00       	mov    esi,0x0
    ea41:	45 0e                	rex.RB (bad) 
    ea43:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea49:	02 b5 0c 07 08 00    	add    dh,BYTE PTR [rbp+0x8070c]
    ea4f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ea52:	00 00                	add    BYTE PTR [rax],al
    ea54:	9c                   	pushf  
    ea55:	05 00 00 9a 7a       	add    eax,0x7a9a0000
    ea5a:	ff                   	(bad)  
    ea5b:	ff                   	(bad)  
    ea5c:	be 02 00 00 00       	mov    esi,0x2
    ea61:	45 0e                	rex.RB (bad) 
    ea63:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea69:	03 b5 02 0c 07 08    	add    esi,DWORD PTR [rbp+0x8070c02]
    ea6f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ea72:	00 00                	add    BYTE PTR [rax],al
    ea74:	bc 05 00 00 38       	mov    esp,0x38000005
    ea79:	7d ff                	jge    ea7a <__GNU_EH_FRAME_HDR+0x992>
    ea7b:	ff                   	(bad)  
    ea7c:	f8                   	clc    
    ea7d:	01 00                	add    DWORD PTR [rax],eax
    ea7f:	00 00                	add    BYTE PTR [rax],al
    ea81:	45 0e                	rex.RB (bad) 
    ea83:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea89:	03 ef                	add    ebp,edi
    ea8b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ea8e:	08 00                	or     BYTE PTR [rax],al
    ea90:	1c 00                	sbb    al,0x0
    ea92:	00 00                	add    BYTE PTR [rax],al
    ea94:	dc 05 00 00 10 7f    	fadd   QWORD PTR [rip+0x7f100000]        # 7f10ea9a <_end+0x7efd365a>
    ea9a:	ff                   	(bad)  
    ea9b:	ff 5a 00             	call   FWORD PTR [rdx+0x0]
    ea9e:	00 00                	add    BYTE PTR [rax],al
    eaa0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eaa3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eaa9:	02 51 0c             	add    dl,BYTE PTR [rcx+0xc]
    eaac:	07                   	(bad)  
    eaad:	08 00                	or     BYTE PTR [rax],al
    eaaf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eab2:	00 00                	add    BYTE PTR [rax],al
    eab4:	fc                   	cld    
    eab5:	05 00 00 4a 7f       	add    eax,0x7f4a0000
    eaba:	ff                   	(bad)  
    eabb:	ff e6                	jmp    rsi
    eabd:	02 00                	add    al,BYTE PTR [rax]
    eabf:	00 00                	add    BYTE PTR [rax],al
    eac1:	45 0e                	rex.RB (bad) 
    eac3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eac9:	03 dd                	add    ebx,ebp
    eacb:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    eace:	08 00                	or     BYTE PTR [rax],al
    ead0:	1c 00                	sbb    al,0x0
    ead2:	00 00                	add    BYTE PTR [rax],al
    ead4:	1c 06                	sbb    al,0x6
    ead6:	00 00                	add    BYTE PTR [rax],al
    ead8:	10 82 ff ff 55 04    	adc    BYTE PTR [rdx+0x455ffff],al
    eade:	00 00                	add    BYTE PTR [rax],al
    eae0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eae3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eae9:	4a 8c 03             	rex.WX mov WORD PTR [rbx],es
    eaec:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
    eaf0:	18 00                	sbb    BYTE PTR [rax],al
    eaf2:	00 00                	add    BYTE PTR [rax],al
    eaf4:	3c 06                	cmp    al,0x6
    eaf6:	00 00                	add    BYTE PTR [rax],al
    eaf8:	45 86 ff             	xchg   r15b,r15b
    eafb:	ff 2a                	jmp    FWORD PTR [rdx]
    eafd:	00 00                	add    BYTE PTR [rax],al
    eaff:	00 00                	add    BYTE PTR [rax],al
    eb01:	45 0e                	rex.RB (bad) 
    eb03:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb09:	00 00                	add    BYTE PTR [rax],al
    eb0b:	00 20                	add    BYTE PTR [rax],ah
    eb0d:	00 00                	add    BYTE PTR [rax],al
    eb0f:	00 58 06             	add    BYTE PTR [rax+0x6],bl
    eb12:	00 00                	add    BYTE PTR [rax],al
    eb14:	53                   	push   rbx
    eb15:	86 ff                	xchg   bh,bh
    eb17:	ff b7 01 00 00 00    	push   QWORD PTR [rdi+0x1]
    eb1d:	45 0e                	rex.RB (bad) 
    eb1f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb25:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    eb29:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    eb2a:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    eb2d:	08 00                	or     BYTE PTR [rax],al
    eb2f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eb32:	00 00                	add    BYTE PTR [rax],al
    eb34:	7c 06                	jl     eb3c <__GNU_EH_FRAME_HDR+0xa54>
    eb36:	00 00                	add    BYTE PTR [rax],al
    eb38:	e6 87                	out    0x87,al
    eb3a:	ff                   	(bad)  
    eb3b:	ff 17                	call   QWORD PTR [rdi]
    eb3d:	00 00                	add    BYTE PTR [rax],al
    eb3f:	00 00                	add    BYTE PTR [rax],al
    eb41:	45 0e                	rex.RB (bad) 
    eb43:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb49:	4e 0c 07             	rex.WRX or al,0x7
    eb4c:	08 00                	or     BYTE PTR [rax],al
    eb4e:	00 00                	add    BYTE PTR [rax],al
    eb50:	1c 00                	sbb    al,0x0
    eb52:	00 00                	add    BYTE PTR [rax],al
    eb54:	9c                   	pushf  
    eb55:	06                   	(bad)  
    eb56:	00 00                	add    BYTE PTR [rax],al
    eb58:	dd 87 ff ff 4f 00    	fld    QWORD PTR [rdi+0x4fffff]
    eb5e:	00 00                	add    BYTE PTR [rax],al
    eb60:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eb63:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb69:	02 46 0c             	add    al,BYTE PTR [rsi+0xc]
    eb6c:	07                   	(bad)  
    eb6d:	08 00                	or     BYTE PTR [rax],al
    eb6f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eb72:	00 00                	add    BYTE PTR [rax],al
    eb74:	bc 06 00 00 0c       	mov    esp,0xc000006
    eb79:	88 ff                	mov    bh,bh
    eb7b:	ff 4d 00             	dec    DWORD PTR [rbp+0x0]
    eb7e:	00 00                	add    BYTE PTR [rax],al
    eb80:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eb83:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb89:	02 44 0c 07          	add    al,BYTE PTR [rsp+rcx*1+0x7]
    eb8d:	08 00                	or     BYTE PTR [rax],al
    eb8f:	00 18                	add    BYTE PTR [rax],bl
    eb91:	00 00                	add    BYTE PTR [rax],al
    eb93:	00 dc                	add    ah,bl
    eb95:	06                   	(bad)  
    eb96:	00 00                	add    BYTE PTR [rax],al
    eb98:	39 88 ff ff 77 01    	cmp    DWORD PTR [rax+0x177ffff],ecx
    eb9e:	00 00                	add    BYTE PTR [rax],al
    eba0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eba3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eba9:	00 00                	add    BYTE PTR [rax],al
    ebab:	00 20                	add    BYTE PTR [rax],ah
    ebad:	00 00                	add    BYTE PTR [rax],al
    ebaf:	00 f8                	add    al,bh
    ebb1:	06                   	(bad)  
    ebb2:	00 00                	add    BYTE PTR [rax],al
    ebb4:	94                   	xchg   esp,eax
    ebb5:	89 ff                	mov    edi,edi
    ebb7:	ff 9c 00 00 00 00 45 	call   FWORD PTR [rax+rax*1+0x45000000]
    ebbe:	0e                   	(bad)  
    ebbf:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ebc5:	02 93 0c 07 08 00    	add    dl,BYTE PTR [rbx+0x8070c]
    ebcb:	00 00                	add    BYTE PTR [rax],al
    ebcd:	00 00                	add    BYTE PTR [rax],al
    ebcf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ebd2:	00 00                	add    BYTE PTR [rax],al
    ebd4:	1c 07                	sbb    al,0x7
    ebd6:	00 00                	add    BYTE PTR [rax],al
    ebd8:	0c 8a                	or     al,0x8a
    ebda:	ff                   	(bad)  
    ebdb:	ff                   	(bad)  
    ebdc:	ee                   	out    dx,al
    ebdd:	01 00                	add    DWORD PTR [rax],eax
    ebdf:	00 00                	add    BYTE PTR [rax],al
    ebe1:	45 0e                	rex.RB (bad) 
    ebe3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ebe9:	03 e5                	add    esp,ebp
    ebeb:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ebee:	08 00                	or     BYTE PTR [rax],al
    ebf0:	1c 00                	sbb    al,0x0
    ebf2:	00 00                	add    BYTE PTR [rax],al
    ebf4:	3c 07                	cmp    al,0x7
    ebf6:	00 00                	add    BYTE PTR [rax],al
    ebf8:	da 8b ff ff e8 01    	fimul  DWORD PTR [rbx+0x1e8ffff]
    ebfe:	00 00                	add    BYTE PTR [rax],al
    ec00:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ec03:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec09:	03 df                	add    ebx,edi
    ec0b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ec0e:	08 00                	or     BYTE PTR [rax],al
    ec10:	1c 00                	sbb    al,0x0
    ec12:	00 00                	add    BYTE PTR [rax],al
    ec14:	5c                   	pop    rsp
    ec15:	07                   	(bad)  
    ec16:	00 00                	add    BYTE PTR [rax],al
    ec18:	a2 8d ff ff 6c 00 00 	movabs ds:0x6cffff8d,al
    ec1f:	00 00 
    ec21:	45 0e                	rex.RB (bad) 
    ec23:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec29:	02 63 0c             	add    ah,BYTE PTR [rbx+0xc]
    ec2c:	07                   	(bad)  
    ec2d:	08 00                	or     BYTE PTR [rax],al
    ec2f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ec32:	00 00                	add    BYTE PTR [rax],al
    ec34:	7c 07                	jl     ec3d <__GNU_EH_FRAME_HDR+0xb55>
    ec36:	00 00                	add    BYTE PTR [rax],al
    ec38:	ee                   	out    dx,al
    ec39:	8d                   	(bad)  
    ec3a:	ff                   	(bad)  
    ec3b:	ff 72 00             	push   QWORD PTR [rdx+0x0]
    ec3e:	00 00                	add    BYTE PTR [rax],al
    ec40:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ec43:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec49:	02 69 0c             	add    ch,BYTE PTR [rcx+0xc]
    ec4c:	07                   	(bad)  
    ec4d:	08 00                	or     BYTE PTR [rax],al
    ec4f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ec52:	00 00                	add    BYTE PTR [rax],al
    ec54:	9c                   	pushf  
    ec55:	07                   	(bad)  
    ec56:	00 00                	add    BYTE PTR [rax],al
    ec58:	40 8e ff             	rex mov ?,edi
    ec5b:	ff 11                	call   QWORD PTR [rcx]
    ec5d:	01 00                	add    DWORD PTR [rax],eax
    ec5f:	00 00                	add    BYTE PTR [rax],al
    ec61:	45 0e                	rex.RB (bad) 
    ec63:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec69:	03 08                	add    ecx,DWORD PTR [rax]
    ec6b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ec6e:	08 00                	or     BYTE PTR [rax],al
    ec70:	1c 00                	sbb    al,0x0
    ec72:	00 00                	add    BYTE PTR [rax],al
    ec74:	bc 07 00 00 31       	mov    esp,0x31000007
    ec79:	8f                   	(bad)  
    ec7a:	ff                   	(bad)  
    ec7b:	ff 5c 00 00          	call   FWORD PTR [rax+rax*1+0x0]
    ec7f:	00 00                	add    BYTE PTR [rax],al
    ec81:	45 0e                	rex.RB (bad) 
    ec83:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec89:	02 53 0c             	add    dl,BYTE PTR [rbx+0xc]
    ec8c:	07                   	(bad)  
    ec8d:	08 00                	or     BYTE PTR [rax],al
    ec8f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ec92:	00 00                	add    BYTE PTR [rax],al
    ec94:	dc 07                	fadd   QWORD PTR [rdi]
    ec96:	00 00                	add    BYTE PTR [rax],al
    ec98:	6d                   	ins    DWORD PTR es:[rdi],dx
    ec99:	8f                   	(bad)  
    ec9a:	ff                   	(bad)  
    ec9b:	ff                   	(bad)  
    ec9c:	3e 00 00             	add    BYTE PTR ds:[rax],al
    ec9f:	00 00                	add    BYTE PTR [rax],al
    eca1:	45 0e                	rex.RB (bad) 
    eca3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eca9:	75 0c                	jne    ecb7 <__GNU_EH_FRAME_HDR+0xbcf>
    ecab:	07                   	(bad)  
    ecac:	08 00                	or     BYTE PTR [rax],al
    ecae:	00 00                	add    BYTE PTR [rax],al
    ecb0:	1c 00                	sbb    al,0x0
    ecb2:	00 00                	add    BYTE PTR [rax],al
    ecb4:	fc                   	cld    
    ecb5:	07                   	(bad)  
    ecb6:	00 00                	add    BYTE PTR [rax],al
    ecb8:	8b 8f ff ff 86 00    	mov    ecx,DWORD PTR [rdi+0x86ffff]
    ecbe:	00 00                	add    BYTE PTR [rax],al
    ecc0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ecc3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ecc9:	02 7d 0c             	add    bh,BYTE PTR [rbp+0xc]
    eccc:	07                   	(bad)  
    eccd:	08 00                	or     BYTE PTR [rax],al
    eccf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ecd2:	00 00                	add    BYTE PTR [rax],al
    ecd4:	1c 08                	sbb    al,0x8
    ecd6:	00 00                	add    BYTE PTR [rax],al
    ecd8:	f1                   	icebp  
    ecd9:	8f                   	(bad)  
    ecda:	ff                   	(bad)  
    ecdb:	ff                   	(bad)  
    ecdc:	df 00                	fild   WORD PTR [rax]
    ecde:	00 00                	add    BYTE PTR [rax],al
    ece0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ece3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ece9:	02 d6                	add    dl,dh
    eceb:	0c 07                	or     al,0x7
    eced:	08 00                	or     BYTE PTR [rax],al
    ecef:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ecf2:	00 00                	add    BYTE PTR [rax],al
    ecf4:	3c 08                	cmp    al,0x8
    ecf6:	00 00                	add    BYTE PTR [rax],al
    ecf8:	b0 90                	mov    al,0x90
    ecfa:	ff                   	(bad)  
    ecfb:	ff 74 00 00          	push   QWORD PTR [rax+rax*1+0x0]
    ecff:	00 00                	add    BYTE PTR [rax],al
    ed01:	45 0e                	rex.RB (bad) 
    ed03:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed09:	02 6b 0c             	add    ch,BYTE PTR [rbx+0xc]
    ed0c:	07                   	(bad)  
    ed0d:	08 00                	or     BYTE PTR [rax],al
    ed0f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ed12:	00 00                	add    BYTE PTR [rax],al
    ed14:	5c                   	pop    rsp
    ed15:	08 00                	or     BYTE PTR [rax],al
    ed17:	00 04 91             	add    BYTE PTR [rcx+rdx*4],al
    ed1a:	ff                   	(bad)  
    ed1b:	ff 9c 00 00 00 00 45 	call   FWORD PTR [rax+rax*1+0x45000000]
    ed22:	0e                   	(bad)  
    ed23:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed29:	02 93 0c 07 08 00    	add    dl,BYTE PTR [rbx+0x8070c]
    ed2f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ed32:	00 00                	add    BYTE PTR [rax],al
    ed34:	7c 08                	jl     ed3e <__GNU_EH_FRAME_HDR+0xc56>
    ed36:	00 00                	add    BYTE PTR [rax],al
    ed38:	80 91 ff ff 29 00 00 	adc    BYTE PTR [rcx+0x29ffff],0x0
    ed3f:	00 00                	add    BYTE PTR [rax],al
    ed41:	45 0e                	rex.RB (bad) 
    ed43:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed49:	60                   	(bad)  
    ed4a:	0c 07                	or     al,0x7
    ed4c:	08 00                	or     BYTE PTR [rax],al
    ed4e:	00 00                	add    BYTE PTR [rax],al
    ed50:	1c 00                	sbb    al,0x0
    ed52:	00 00                	add    BYTE PTR [rax],al
    ed54:	9c                   	pushf  
    ed55:	08 00                	or     BYTE PTR [rax],al
    ed57:	00 89 91 ff ff 29    	add    BYTE PTR [rcx+0x29ffff91],cl
    ed5d:	00 00                	add    BYTE PTR [rax],al
    ed5f:	00 00                	add    BYTE PTR [rax],al
    ed61:	45 0e                	rex.RB (bad) 
    ed63:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed69:	60                   	(bad)  
    ed6a:	0c 07                	or     al,0x7
    ed6c:	08 00                	or     BYTE PTR [rax],al
    ed6e:	00 00                	add    BYTE PTR [rax],al
    ed70:	24 00                	and    al,0x0
    ed72:	00 00                	add    BYTE PTR [rax],al
    ed74:	bc 08 00 00 92       	mov    esp,0x92000008
    ed79:	91                   	xchg   ecx,eax
    ed7a:	ff                   	(bad)  
    ed7b:	ff 54 01 00          	call   QWORD PTR [rcx+rax*1+0x0]
    ed7f:	00 00                	add    BYTE PTR [rax],al
    ed81:	45 0e                	rex.RB (bad) 
    ed83:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed89:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    ed8d:	46 01 0c 07          	add    DWORD PTR [rdi+r8*1],r9d
    ed91:	08 00                	or     BYTE PTR [rax],al
    ed93:	00 00                	add    BYTE PTR [rax],al
    ed95:	00 00                	add    BYTE PTR [rax],al
    ed97:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ed9a:	00 00                	add    BYTE PTR [rax],al
    ed9c:	e4 08                	in     al,0x8
    ed9e:	00 00                	add    BYTE PTR [rax],al
    eda0:	be 92 ff ff 13       	mov    esi,0x13ffff92
    eda5:	01 00                	add    DWORD PTR [rax],eax
    eda7:	00 00                	add    BYTE PTR [rax],al
    eda9:	45 0e                	rex.RB (bad) 
    edab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    edb1:	03 0a                	add    ecx,DWORD PTR [rdx]
    edb3:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    edb6:	08 00                	or     BYTE PTR [rax],al
    edb8:	1c 00                	sbb    al,0x0
    edba:	00 00                	add    BYTE PTR [rax],al
    edbc:	04 09                	add    al,0x9
    edbe:	00 00                	add    BYTE PTR [rax],al
    edc0:	b1 93                	mov    cl,0x93
    edc2:	ff                   	(bad)  
    edc3:	ff                   	(bad)  
    edc4:	f9                   	stc    
    edc5:	00 00                	add    BYTE PTR [rax],al
    edc7:	00 00                	add    BYTE PTR [rax],al
    edc9:	45 0e                	rex.RB (bad) 
    edcb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    edd1:	02 f0                	add    dh,al
    edd3:	0c 07                	or     al,0x7
    edd5:	08 00                	or     BYTE PTR [rax],al
    edd7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    edda:	00 00                	add    BYTE PTR [rax],al
    eddc:	24 09                	and    al,0x9
    edde:	00 00                	add    BYTE PTR [rax],al
    ede0:	8a 94 ff ff a2 00 00 	mov    dl,BYTE PTR [rdi+rdi*8+0xa2ff]
    ede7:	00 00                	add    BYTE PTR [rax],al
    ede9:	45 0e                	rex.RB (bad) 
    edeb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    edf1:	02 99 0c 07 08 00    	add    bl,BYTE PTR [rcx+0x8070c]
    edf7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    edfa:	00 00                	add    BYTE PTR [rax],al
    edfc:	44 09 00             	or     DWORD PTR [rax],r8d
    edff:	00 0c 95 ff ff 1e 00 	add    BYTE PTR [rdx*4+0x1effff],cl
    ee06:	00 00                	add    BYTE PTR [rax],al
    ee08:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ee0b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee11:	55                   	push   rbp
    ee12:	0c 07                	or     al,0x7
    ee14:	08 00                	or     BYTE PTR [rax],al
    ee16:	00 00                	add    BYTE PTR [rax],al
    ee18:	1c 00                	sbb    al,0x0
    ee1a:	00 00                	add    BYTE PTR [rax],al
    ee1c:	64 09 00             	or     DWORD PTR fs:[rax],eax
    ee1f:	00 0a                	add    BYTE PTR [rdx],cl
    ee21:	95                   	xchg   ebp,eax
    ee22:	ff                   	(bad)  
    ee23:	ff 63 01             	jmp    QWORD PTR [rbx+0x1]
    ee26:	00 00                	add    BYTE PTR [rax],al
    ee28:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ee2b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee31:	03 5a 01             	add    ebx,DWORD PTR [rdx+0x1]
    ee34:	0c 07                	or     al,0x7
    ee36:	08 00                	or     BYTE PTR [rax],al
    ee38:	2c 00                	sub    al,0x0
    ee3a:	00 00                	add    BYTE PTR [rax],al
    ee3c:	84 09                	test   BYTE PTR [rcx],cl
    ee3e:	00 00                	add    BYTE PTR [rax],al
    ee40:	4d 96                	rex.WRB xchg r14,rax
    ee42:	ff                   	(bad)  
    ee43:	ff 11                	call   QWORD PTR [rcx]
    ee45:	02 00                	add    al,BYTE PTR [rax]
    ee47:	00 00                	add    BYTE PTR [rax],al
    ee49:	45 0e                	rex.RB (bad) 
    ee4b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee51:	50                   	push   rax
    ee52:	8f 03                	pop    QWORD PTR [rbx]
    ee54:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
    ee5b:	07                   	(bad)  
    ee5c:	03 f8                	add    edi,eax
    ee5e:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ee61:	08 00                	or     BYTE PTR [rax],al
    ee63:	00 00                	add    BYTE PTR [rax],al
    ee65:	00 00                	add    BYTE PTR [rax],al
    ee67:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ee6a:	00 00                	add    BYTE PTR [rax],al
    ee6c:	b4 09                	mov    ah,0x9
    ee6e:	00 00                	add    BYTE PTR [rax],al
    ee70:	2e 98                	cs cwde 
    ee72:	ff                   	(bad)  
    ee73:	ff b2 00 00 00 00    	push   QWORD PTR [rdx+0x0]
    ee79:	45 0e                	rex.RB (bad) 
    ee7b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee81:	02 a9 0c 07 08 00    	add    ch,BYTE PTR [rcx+0x8070c]
    ee87:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ee8a:	00 00                	add    BYTE PTR [rax],al
    ee8c:	d4                   	(bad)  
    ee8d:	09 00                	or     DWORD PTR [rax],eax
    ee8f:	00 c0                	add    al,al
    ee91:	98                   	cwde   
    ee92:	ff                   	(bad)  
    ee93:	ff a5 00 00 00 00    	jmp    QWORD PTR [rbp+0x0]
    ee99:	45 0e                	rex.RB (bad) 
    ee9b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eea1:	02 9c 0c 07 08 00 00 	add    bl,BYTE PTR [rsp+rcx*1+0x807]
    eea8:	24 00                	and    al,0x0
    eeaa:	00 00                	add    BYTE PTR [rax],al
    eeac:	f4                   	hlt    
    eead:	09 00                	or     DWORD PTR [rax],eax
    eeaf:	00 45 99             	add    BYTE PTR [rbp-0x67],al
    eeb2:	ff                   	(bad)  
    eeb3:	ff ac 00 00 00 00 45 	jmp    FWORD PTR [rax+rax*1+0x45000000]
    eeba:	0e                   	(bad)  
    eebb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eec1:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    eec5:	9e                   	sahf   
    eec6:	0c 07                	or     al,0x7
    eec8:	08 00                	or     BYTE PTR [rax],al
    eeca:	00 00                	add    BYTE PTR [rax],al
    eecc:	00 00                	add    BYTE PTR [rax],al
    eece:	00 00                	add    BYTE PTR [rax],al
    eed0:	1c 00                	sbb    al,0x0
    eed2:	00 00                	add    BYTE PTR [rax],al
    eed4:	1c 0a                	sbb    al,0xa
    eed6:	00 00                	add    BYTE PTR [rax],al
    eed8:	c9                   	leave  
    eed9:	99                   	cdq    
    eeda:	ff                   	(bad)  
    eedb:	ff d5                	call   rbp
    eedd:	00 00                	add    BYTE PTR [rax],al
    eedf:	00 00                	add    BYTE PTR [rax],al
    eee1:	45 0e                	rex.RB (bad) 
    eee3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eee9:	02 cc                	add    cl,ah
    eeeb:	0c 07                	or     al,0x7
    eeed:	08 00                	or     BYTE PTR [rax],al
    eeef:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eef2:	00 00                	add    BYTE PTR [rax],al
    eef4:	3c 0a                	cmp    al,0xa
    eef6:	00 00                	add    BYTE PTR [rax],al
    eef8:	7e 9a                	jle    ee94 <__GNU_EH_FRAME_HDR+0xdac>
    eefa:	ff                   	(bad)  
    eefb:	ff                   	(bad)  
    eefc:	df 00                	fild   WORD PTR [rax]
    eefe:	00 00                	add    BYTE PTR [rax],al
    ef00:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ef03:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef09:	02 d6                	add    dl,dh
    ef0b:	0c 07                	or     al,0x7
    ef0d:	08 00                	or     BYTE PTR [rax],al
    ef0f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef12:	00 00                	add    BYTE PTR [rax],al
    ef14:	5c                   	pop    rsp
    ef15:	0a 00                	or     al,BYTE PTR [rax]
    ef17:	00 3d 9b ff ff 7d    	add    BYTE PTR [rip+0x7dffff9b],bh        # 7e00eeb8 <_end+0x7ded3a78>
    ef1d:	00 00                	add    BYTE PTR [rax],al
    ef1f:	00 00                	add    BYTE PTR [rax],al
    ef21:	45 0e                	rex.RB (bad) 
    ef23:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef29:	02 74 0c 07          	add    dh,BYTE PTR [rsp+rcx*1+0x7]
    ef2d:	08 00                	or     BYTE PTR [rax],al
    ef2f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef32:	00 00                	add    BYTE PTR [rax],al
    ef34:	7c 0a                	jl     ef40 <__GNU_EH_FRAME_HDR+0xe58>
    ef36:	00 00                	add    BYTE PTR [rax],al
    ef38:	9a                   	(bad)  
    ef39:	9b                   	fwait
    ef3a:	ff                   	(bad)  
    ef3b:	ff 36                	push   QWORD PTR [rsi]
    ef3d:	01 00                	add    DWORD PTR [rax],eax
    ef3f:	00 00                	add    BYTE PTR [rax],al
    ef41:	45 0e                	rex.RB (bad) 
    ef43:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef49:	03 2d 01 0c 07 08    	add    ebp,DWORD PTR [rip+0x8070c01]        # 807fb50 <_end+0x7f44710>
    ef4f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef52:	00 00                	add    BYTE PTR [rax],al
    ef54:	9c                   	pushf  
    ef55:	0a 00                	or     al,BYTE PTR [rax]
    ef57:	00 b0 9c ff ff 7e    	add    BYTE PTR [rax+0x7effff9c],dh
    ef5d:	00 00                	add    BYTE PTR [rax],al
    ef5f:	00 00                	add    BYTE PTR [rax],al
    ef61:	45 0e                	rex.RB (bad) 
    ef63:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef69:	02 75 0c             	add    dh,BYTE PTR [rbp+0xc]
    ef6c:	07                   	(bad)  
    ef6d:	08 00                	or     BYTE PTR [rax],al
    ef6f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef72:	00 00                	add    BYTE PTR [rax],al
    ef74:	bc 0a 00 00 0e       	mov    esp,0xe00000a
    ef79:	9d                   	popf   
    ef7a:	ff                   	(bad)  
    ef7b:	ff                   	(bad)  
    ef7c:	39 02                	cmp    DWORD PTR [rdx],eax
    ef7e:	00 00                	add    BYTE PTR [rax],al
    ef80:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ef83:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef89:	03 30                	add    esi,DWORD PTR [rax]
    ef8b:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    ef8e:	08 00                	or     BYTE PTR [rax],al
    ef90:	1c 00                	sbb    al,0x0
    ef92:	00 00                	add    BYTE PTR [rax],al
    ef94:	dc 0a                	fmul   QWORD PTR [rdx]
    ef96:	00 00                	add    BYTE PTR [rax],al
    ef98:	27                   	(bad)  
    ef99:	9f                   	lahf   
    ef9a:	ff                   	(bad)  
    ef9b:	ff c9                	dec    ecx
    ef9d:	00 00                	add    BYTE PTR [rax],al
    ef9f:	00 00                	add    BYTE PTR [rax],al
    efa1:	45 0e                	rex.RB (bad) 
    efa3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    efa9:	02 c0                	add    al,al
    efab:	0c 07                	or     al,0x7
    efad:	08 00                	or     BYTE PTR [rax],al
    efaf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    efb2:	00 00                	add    BYTE PTR [rax],al
    efb4:	fc                   	cld    
    efb5:	0a 00                	or     al,BYTE PTR [rax]
    efb7:	00 d0                	add    al,dl
    efb9:	9f                   	lahf   
    efba:	ff                   	(bad)  
    efbb:	ff a1 01 00 00 00    	jmp    QWORD PTR [rcx+0x1]
    efc1:	45 0e                	rex.RB (bad) 
    efc3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    efc9:	03 98 01 0c 07 08    	add    ebx,DWORD PTR [rax+0x8070c01]
    efcf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    efd2:	00 00                	add    BYTE PTR [rax],al
    efd4:	1c 0b                	sbb    al,0xb
    efd6:	00 00                	add    BYTE PTR [rax],al
    efd8:	51                   	push   rcx
    efd9:	a1 ff ff 13 01 00 00 	movabs eax,ds:0x450000000113ffff
    efe0:	00 45 
    efe2:	0e                   	(bad)  
    efe3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    efe9:	03 0a                	add    ecx,DWORD PTR [rdx]
    efeb:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    efee:	08 00                	or     BYTE PTR [rax],al
    eff0:	1c 00                	sbb    al,0x0
    eff2:	00 00                	add    BYTE PTR [rax],al
    eff4:	3c 0b                	cmp    al,0xb
    eff6:	00 00                	add    BYTE PTR [rax],al
    eff8:	44 a2 ff ff 66 00 00 	rex.R movabs ds:0x450000000066ffff,al
    efff:	00 00 45 
    f002:	0e                   	(bad)  
    f003:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f009:	02 5d 0c             	add    bl,BYTE PTR [rbp+0xc]
    f00c:	07                   	(bad)  
    f00d:	08 00                	or     BYTE PTR [rax],al
    f00f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f012:	00 00                	add    BYTE PTR [rax],al
    f014:	5c                   	pop    rsp
    f015:	0b 00                	or     eax,DWORD PTR [rax]
    f017:	00 8a a2 ff ff 75    	add    BYTE PTR [rdx+0x75ffffa2],cl
    f01d:	00 00                	add    BYTE PTR [rax],al
    f01f:	00 00                	add    BYTE PTR [rax],al
    f021:	45 0e                	rex.RB (bad) 
    f023:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f029:	02 6c 0c 07          	add    ch,BYTE PTR [rsp+rcx*1+0x7]
    f02d:	08 00                	or     BYTE PTR [rax],al
    f02f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f032:	00 00                	add    BYTE PTR [rax],al
    f034:	7c 0b                	jl     f041 <__GNU_EH_FRAME_HDR+0xf59>
    f036:	00 00                	add    BYTE PTR [rax],al
    f038:	df a2 ff ff db 00    	fbld   TBYTE PTR [rdx+0xdbffff]
    f03e:	00 00                	add    BYTE PTR [rax],al
    f040:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f043:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f049:	02 d2                	add    dl,dl
    f04b:	0c 07                	or     al,0x7
    f04d:	08 00                	or     BYTE PTR [rax],al
    f04f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f052:	00 00                	add    BYTE PTR [rax],al
    f054:	9c                   	pushf  
    f055:	0b 00                	or     eax,DWORD PTR [rax]
    f057:	00 9a a3 ff ff 72    	add    BYTE PTR [rdx+0x72ffffa3],bl
    f05d:	01 00                	add    DWORD PTR [rax],eax
    f05f:	00 00                	add    BYTE PTR [rax],al
    f061:	45 0e                	rex.RB (bad) 
    f063:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f069:	03 69 01             	add    ebp,DWORD PTR [rcx+0x1]
    f06c:	0c 07                	or     al,0x7
    f06e:	08 00                	or     BYTE PTR [rax],al
    f070:	1c 00                	sbb    al,0x0
    f072:	00 00                	add    BYTE PTR [rax],al
    f074:	bc 0b 00 00 ec       	mov    esp,0xec00000b
    f079:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    f07a:	ff                   	(bad)  
    f07b:	ff 6c 00 00          	jmp    FWORD PTR [rax+rax*1+0x0]
    f07f:	00 00                	add    BYTE PTR [rax],al
    f081:	45 0e                	rex.RB (bad) 
    f083:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f089:	02 63 0c             	add    ah,BYTE PTR [rbx+0xc]
    f08c:	07                   	(bad)  
    f08d:	08 00                	or     BYTE PTR [rax],al
    f08f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f092:	00 00                	add    BYTE PTR [rax],al
    f094:	dc 0b                	fmul   QWORD PTR [rbx]
    f096:	00 00                	add    BYTE PTR [rax],al
    f098:	38 a5 ff ff 80 00    	cmp    BYTE PTR [rbp+0x80ffff],ah
    f09e:	00 00                	add    BYTE PTR [rax],al
    f0a0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f0a3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f0a9:	02 77 0c             	add    dh,BYTE PTR [rdi+0xc]
    f0ac:	07                   	(bad)  
    f0ad:	08 00                	or     BYTE PTR [rax],al
    f0af:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f0b2:	00 00                	add    BYTE PTR [rax],al
    f0b4:	fc                   	cld    
    f0b5:	0b 00                	or     eax,DWORD PTR [rax]
    f0b7:	00 98 a5 ff ff 16    	add    BYTE PTR [rax+0x16ffffa5],bl
    f0bd:	00 00                	add    BYTE PTR [rax],al
    f0bf:	00 00                	add    BYTE PTR [rax],al
    f0c1:	45 0e                	rex.RB (bad) 
    f0c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f0c9:	4d 0c 07             	rex.WRB or al,0x7
    f0cc:	08 00                	or     BYTE PTR [rax],al
    f0ce:	00 00                	add    BYTE PTR [rax],al
    f0d0:	20 00                	and    BYTE PTR [rax],al
    f0d2:	00 00                	add    BYTE PTR [rax],al
    f0d4:	1c 0c                	sbb    al,0xc
    f0d6:	00 00                	add    BYTE PTR [rax],al
    f0d8:	8e a5 ff ff 3b 01    	mov    fs,WORD PTR [rbp+0x13bffff]
    f0de:	00 00                	add    BYTE PTR [rax],al
    f0e0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f0e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f0e9:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    f0ed:	2d 01 0c 07 08       	sub    eax,0x8070c01
    f0f2:	00 00                	add    BYTE PTR [rax],al
    f0f4:	1c 00                	sbb    al,0x0
    f0f6:	00 00                	add    BYTE PTR [rax],al
    f0f8:	40 0c 00             	or     al,0x0
    f0fb:	00 a5 a6 ff ff 64    	add    BYTE PTR [rbp+0x64ffffa6],ah
    f101:	00 00                	add    BYTE PTR [rax],al
    f103:	00 00                	add    BYTE PTR [rax],al
    f105:	45 0e                	rex.RB (bad) 
    f107:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f10d:	02 5b 0c             	add    bl,BYTE PTR [rbx+0xc]
    f110:	07                   	(bad)  
    f111:	08 00                	or     BYTE PTR [rax],al
    f113:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f116:	00 00                	add    BYTE PTR [rax],al
    f118:	60                   	(bad)  
    f119:	0c 00                	or     al,0x0
    f11b:	00 e9                	add    cl,ch
    f11d:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    f11e:	ff                   	(bad)  
    f11f:	ff 53 00             	call   QWORD PTR [rbx+0x0]
    f122:	00 00                	add    BYTE PTR [rax],al
    f124:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f127:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f12d:	02 4a 0c             	add    cl,BYTE PTR [rdx+0xc]
    f130:	07                   	(bad)  
    f131:	08 00                	or     BYTE PTR [rax],al
    f133:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f136:	00 00                	add    BYTE PTR [rax],al
    f138:	80 0c 00 00          	or     BYTE PTR [rax+rax*1],0x0
    f13c:	1c a7                	sbb    al,0xa7
    f13e:	ff                   	(bad)  
    f13f:	ff b1 00 00 00 00    	push   QWORD PTR [rcx+0x0]
    f145:	45 0e                	rex.RB (bad) 
    f147:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f14d:	02 a8 0c 07 08 00    	add    ch,BYTE PTR [rax+0x8070c]
    f153:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f156:	00 00                	add    BYTE PTR [rax],al
    f158:	a0 0c 00 00 ad a7 ff 	movabs al,ds:0xcbffffa7ad00000c
    f15f:	ff cb 
    f161:	00 00                	add    BYTE PTR [rax],al
    f163:	00 00                	add    BYTE PTR [rax],al
    f165:	45 0e                	rex.RB (bad) 
    f167:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f16d:	02 c2                	add    al,dl
    f16f:	0c 07                	or     al,0x7
    f171:	08 00                	or     BYTE PTR [rax],al
    f173:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f176:	00 00                	add    BYTE PTR [rax],al
    f178:	c0 0c 00 00          	ror    BYTE PTR [rax+rax*1],0x0
    f17c:	58                   	pop    rax
    f17d:	a8 ff                	test   al,0xff
    f17f:	ff 55 00             	call   QWORD PTR [rbp+0x0]
    f182:	00 00                	add    BYTE PTR [rax],al
    f184:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f187:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f18d:	02 4c 0c 07          	add    cl,BYTE PTR [rsp+rcx*1+0x7]
    f191:	08 00                	or     BYTE PTR [rax],al
    f193:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f196:	00 00                	add    BYTE PTR [rax],al
    f198:	e0 0c                	loopne f1a6 <__GNU_EH_FRAME_HDR+0x10be>
    f19a:	00 00                	add    BYTE PTR [rax],al
    f19c:	8d a8 ff ff 30 00    	lea    ebp,[rax+0x30ffff]
    f1a2:	00 00                	add    BYTE PTR [rax],al
    f1a4:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f1a7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f1ad:	67 0c 07             	addr32 or al,0x7
    f1b0:	08 00                	or     BYTE PTR [rax],al
    f1b2:	00 00                	add    BYTE PTR [rax],al
    f1b4:	1c 00                	sbb    al,0x0
    f1b6:	00 00                	add    BYTE PTR [rax],al
    f1b8:	00 0d 00 00 9d a8    	add    BYTE PTR [rip+0xffffffffa89d0000],cl        # ffffffffa89df1be <_end+0xffffffffa88a3d7e>
    f1be:	ff                   	(bad)  
    f1bf:	ff 67 00             	jmp    QWORD PTR [rdi+0x0]
    f1c2:	00 00                	add    BYTE PTR [rax],al
    f1c4:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f1c7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f1cd:	02 5e 0c             	add    bl,BYTE PTR [rsi+0xc]
    f1d0:	07                   	(bad)  
    f1d1:	08 00                	or     BYTE PTR [rax],al
    f1d3:	00 20                	add    BYTE PTR [rax],ah
    f1d5:	00 00                	add    BYTE PTR [rax],al
    f1d7:	00 20                	add    BYTE PTR [rax],ah
    f1d9:	0d 00 00 e4 a8       	or     eax,0xa8e40000
    f1de:	ff                   	(bad)  
    f1df:	ff 63 0f             	jmp    QWORD PTR [rbx+0xf]
    f1e2:	00 00                	add    BYTE PTR [rax],al
    f1e4:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f1e7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f1ed:	03 5a 0f             	add    ebx,DWORD PTR [rdx+0xf]
    f1f0:	0c 07                	or     al,0x7
    f1f2:	08 00                	or     BYTE PTR [rax],al
    f1f4:	00 00                	add    BYTE PTR [rax],al
    f1f6:	00 00                	add    BYTE PTR [rax],al
    f1f8:	1c 00                	sbb    al,0x0
    f1fa:	00 00                	add    BYTE PTR [rax],al
    f1fc:	44 0d 00 00 23 b8    	rex.R or eax,0xb8230000
    f202:	ff                   	(bad)  
    f203:	ff 46 00             	inc    DWORD PTR [rsi+0x0]
    f206:	00 00                	add    BYTE PTR [rax],al
    f208:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f20b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f211:	7d 0c                	jge    f21f <__GNU_EH_FRAME_HDR+0x1137>
    f213:	07                   	(bad)  
    f214:	08 00                	or     BYTE PTR [rax],al
    f216:	00 00                	add    BYTE PTR [rax],al
    f218:	24 00                	and    al,0x0
    f21a:	00 00                	add    BYTE PTR [rax],al
    f21c:	64 0d 00 00 49 b8    	fs or  eax,0xb8490000
    f222:	ff                   	(bad)  
    f223:	ff                   	(bad)  
    f224:	3e 02 00             	add    al,BYTE PTR ds:[rax]
    f227:	00 00                	add    BYTE PTR [rax],al
    f229:	45 0e                	rex.RB (bad) 
    f22b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f231:	4b 8f 03             	rex.WXB pop QWORD PTR [r11]
    f234:	8e 04 8c             	mov    es,WORD PTR [rsp+rcx*4]
    f237:	05 83 06 03 2a       	add    eax,0x2a030683
    f23c:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    f23f:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
    f242:	00 00                	add    BYTE PTR [rax],al
    f244:	8c 0d 00 00 5f ba    	mov    WORD PTR [rip+0xffffffffba5f0000],cs        # ffffffffba5ff24a <_end+0xffffffffba4c3e0a>
    f24a:	ff                   	(bad)  
    f24b:	ff ab 01 00 00 00    	jmp    FWORD PTR [rbx+0x1]
    f251:	45 0e                	rex.RB (bad) 
    f253:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f259:	03 a2 01 0c 07 08    	add    esp,DWORD PTR [rdx+0x8070c01]
    f25f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f262:	00 00                	add    BYTE PTR [rax],al
    f264:	ac                   	lods   al,BYTE PTR ds:[rsi]
    f265:	0d 00 00 ea bb       	or     eax,0xbbea0000
    f26a:	ff                   	(bad)  
    f26b:	ff 12                	call   QWORD PTR [rdx]
    f26d:	01 00                	add    DWORD PTR [rax],eax
    f26f:	00 00                	add    BYTE PTR [rax],al
    f271:	45 0e                	rex.RB (bad) 
    f273:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f279:	03 09                	add    ecx,DWORD PTR [rcx]
    f27b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f27e:	08 00                	or     BYTE PTR [rax],al
    f280:	24 00                	and    al,0x0
    f282:	00 00                	add    BYTE PTR [rax],al
    f284:	cc                   	int3   
    f285:	0d 00 00 dc bc       	or     eax,0xbcdc0000
    f28a:	ff                   	(bad)  
    f28b:	ff                   	(bad)  
    f28c:	bd 00 00 00 00       	mov    ebp,0x0
    f291:	45 0e                	rex.RB (bad) 
    f293:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f299:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    f29d:	af                   	scas   eax,DWORD PTR es:[rdi]
    f29e:	0c 07                	or     al,0x7
    f2a0:	08 00                	or     BYTE PTR [rax],al
    f2a2:	00 00                	add    BYTE PTR [rax],al
    f2a4:	00 00                	add    BYTE PTR [rax],al
    f2a6:	00 00                	add    BYTE PTR [rax],al
    f2a8:	24 00                	and    al,0x0
    f2aa:	00 00                	add    BYTE PTR [rax],al
    f2ac:	f4                   	hlt    
    f2ad:	0d 00 00 71 bd       	or     eax,0xbd710000
    f2b2:	ff                   	(bad)  
    f2b3:	ff 9b 01 00 00 00    	call   FWORD PTR [rbx+0x1]
    f2b9:	45 0e                	rex.RB (bad) 
    f2bb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f2c1:	47 8c 03             	rex.RXB mov WORD PTR [r11],es
    f2c4:	83 04 03 8b          	add    DWORD PTR [rbx+rax*1],0xffffff8b
    f2c8:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f2cb:	08 00                	or     BYTE PTR [rax],al
    f2cd:	00 00                	add    BYTE PTR [rax],al
    f2cf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f2d2:	00 00                	add    BYTE PTR [rax],al
    f2d4:	1c 0e                	sbb    al,0xe
    f2d6:	00 00                	add    BYTE PTR [rax],al
    f2d8:	e4 be                	in     al,0xbe
    f2da:	ff                   	(bad)  
    f2db:	ff a5 00 00 00 00    	jmp    QWORD PTR [rbp+0x0]
    f2e1:	45 0e                	rex.RB (bad) 
    f2e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f2e9:	02 9c 0c 07 08 00 00 	add    bl,BYTE PTR [rsp+rcx*1+0x807]
    f2f0:	1c 00                	sbb    al,0x0
    f2f2:	00 00                	add    BYTE PTR [rax],al
    f2f4:	3c 0e                	cmp    al,0xe
    f2f6:	00 00                	add    BYTE PTR [rax],al
    f2f8:	69 bf ff ff 43 01 00 	imul   edi,DWORD PTR [rdi+0x143ffff],0x45000000
    f2ff:	00 00 45 
    f302:	0e                   	(bad)  
    f303:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f309:	03 3a                	add    edi,DWORD PTR [rdx]
    f30b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f30e:	08 00                	or     BYTE PTR [rax],al
    f310:	1c 00                	sbb    al,0x0
    f312:	00 00                	add    BYTE PTR [rax],al
    f314:	5c                   	pop    rsp
    f315:	0e                   	(bad)  
    f316:	00 00                	add    BYTE PTR [rax],al
    f318:	8c c0                	mov    eax,es
    f31a:	ff                   	(bad)  
    f31b:	ff f3                	push   rbx
    f31d:	00 00                	add    BYTE PTR [rax],al
    f31f:	00 00                	add    BYTE PTR [rax],al
    f321:	45 0e                	rex.RB (bad) 
    f323:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f329:	02 ea                	add    ch,dl
    f32b:	0c 07                	or     al,0x7
    f32d:	08 00                	or     BYTE PTR [rax],al
    f32f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f332:	00 00                	add    BYTE PTR [rax],al
    f334:	7c 0e                	jl     f344 <__GNU_EH_FRAME_HDR+0x125c>
    f336:	00 00                	add    BYTE PTR [rax],al
    f338:	5f                   	pop    rdi
    f339:	c1 ff ff             	sar    edi,0xff
    f33c:	70 00                	jo     f33e <__GNU_EH_FRAME_HDR+0x1256>
    f33e:	00 00                	add    BYTE PTR [rax],al
    f340:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f343:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f349:	02 67 0c             	add    ah,BYTE PTR [rdi+0xc]
    f34c:	07                   	(bad)  
    f34d:	08 00                	or     BYTE PTR [rax],al
    f34f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f352:	00 00                	add    BYTE PTR [rax],al
    f354:	9c                   	pushf  
    f355:	0e                   	(bad)  
    f356:	00 00                	add    BYTE PTR [rax],al
    f358:	af                   	scas   eax,DWORD PTR es:[rdi]
    f359:	c1 ff ff             	sar    edi,0xff
    f35c:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    f35d:	02 00                	add    al,BYTE PTR [rax]
    f35f:	00 00                	add    BYTE PTR [rax],al
    f361:	45 0e                	rex.RB (bad) 
    f363:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f369:	4a 8c 03             	rex.WX mov WORD PTR [rbx],es
    f36c:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
    f370:	1c 00                	sbb    al,0x0
    f372:	00 00                	add    BYTE PTR [rax],al
    f374:	bc 0e 00 00 34       	mov    esp,0x3400000e
    f379:	c4                   	(bad)  
    f37a:	ff                   	(bad)  
    f37b:	ff 6a 00             	jmp    FWORD PTR [rdx+0x0]
    f37e:	00 00                	add    BYTE PTR [rax],al
    f380:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f383:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f389:	02 61 0c             	add    ah,BYTE PTR [rcx+0xc]
    f38c:	07                   	(bad)  
    f38d:	08 00                	or     BYTE PTR [rax],al
    f38f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f392:	00 00                	add    BYTE PTR [rax],al
    f394:	dc 0e                	fmul   QWORD PTR [rsi]
    f396:	00 00                	add    BYTE PTR [rax],al
    f398:	7e c4                	jle    f35e <__GNU_EH_FRAME_HDR+0x1276>
    f39a:	ff                   	(bad)  
    f39b:	ff 6e 00             	jmp    FWORD PTR [rsi+0x0]
    f39e:	00 00                	add    BYTE PTR [rax],al
    f3a0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f3a3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f3a9:	02 65 0c             	add    ah,BYTE PTR [rbp+0xc]
    f3ac:	07                   	(bad)  
    f3ad:	08 00                	or     BYTE PTR [rax],al
    f3af:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    f3b2:	00 00                	add    BYTE PTR [rax],al
    f3b4:	fc                   	cld    
    f3b5:	0e                   	(bad)  
    f3b6:	00 00                	add    BYTE PTR [rax],al
    f3b8:	cc                   	int3   
    f3b9:	c4                   	(bad)  
    f3ba:	ff                   	(bad)  
    f3bb:	ff 8e 01 00 00 00    	dec    DWORD PTR [rsi+0x1]
    f3c1:	45 0e                	rex.RB (bad) 
    f3c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f3c9:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    f3cd:	80 01 0c             	add    BYTE PTR [rcx],0xc
    f3d0:	07                   	(bad)  
    f3d1:	08 00                	or     BYTE PTR [rax],al
    f3d3:	00 00                	add    BYTE PTR [rax],al
    f3d5:	00 00                	add    BYTE PTR [rax],al
    f3d7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f3da:	00 00                	add    BYTE PTR [rax],al
    f3dc:	24 0f                	and    al,0xf
    f3de:	00 00                	add    BYTE PTR [rax],al
    f3e0:	32 c6                	xor    al,dh
    f3e2:	ff                   	(bad)  
    f3e3:	ff a6 02 00 00 00    	jmp    QWORD PTR [rsi+0x2]
    f3e9:	45 0e                	rex.RB (bad) 
    f3eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f3f1:	03 9d 02 0c 07 08    	add    ebx,DWORD PTR [rbp+0x8070c02]
    f3f7:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
    f3fb:	00 44 0f 00          	add    BYTE PTR [rdi+rcx*1+0x0],al
    f3ff:	00 c0                	add    al,al
    f401:	c8 ff ff 65          	enter  0xffff,0x65
    f405:	00 00                	add    BYTE PTR [rax],al
    f407:	00 00                	add    BYTE PTR [rax],al
    f409:	46 0e                	rex.RX (bad) 
    f40b:	10 8f 02 49 0e 18    	adc    BYTE PTR [rdi+0x180e4902],cl
    f411:	8e 03                	mov    es,WORD PTR [rbx]
    f413:	45 0e                	rex.RB (bad) 
    f415:	20 8d 04 45 0e 28    	and    BYTE PTR [rbp+0x280e4504],cl
    f41b:	8c 05 44 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e44],es        # ffffffff86310265 <_end+0xffffffff861d4e25>
    f421:	06                   	(bad)  
    f422:	48 0e                	rex.W (bad) 
    f424:	38 83 07 47 0e 40    	cmp    BYTE PTR [rbx+0x400e4707],al
    f42a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    f42b:	0e                   	(bad)  
    f42c:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
    f42f:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
    f432:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
    f435:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
    f438:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    f43b:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    f43e:	08 00                	or     BYTE PTR [rax],al
    f440:	10 00                	adc    BYTE PTR [rax],al
    f442:	00 00                	add    BYTE PTR [rax],al
    f444:	8c 0f                	mov    WORD PTR [rdi],cs
    f446:	00 00                	add    BYTE PTR [rax],al
    f448:	e8 c8 ff ff 05       	call   600f415 <_end+0x5ed3fd5>
    f44d:	00 00                	add    BYTE PTR [rax],al
    f44f:	00 00                	add    BYTE PTR [rax],al
    f451:	00 00                	add    BYTE PTR [rax],al
	...

000000000000f454 <__FRAME_END__>:
    f454:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .tbss:

0000000000010b58 <buffer.4704+0x10ad8>:
	...

Disassembly of section .init_array:

0000000000010b58 <__frame_dummy_init_array_entry>:
   10b58:	c0 29 00             	shr    BYTE PTR [rcx],0x0
   10b5b:	00 00                	add    BYTE PTR [rax],al
   10b5d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000010b60 <__do_global_dtors_aux_fini_array_entry>:
   10b60:	80 29 00             	sub    BYTE PTR [rcx],0x0
   10b63:	00 00                	add    BYTE PTR [rax],al
   10b65:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000010b68 <_DYNAMIC>:
   10b68:	01 00                	add    DWORD PTR [rax],eax
   10b6a:	00 00                	add    BYTE PTR [rax],al
   10b6c:	00 00                	add    BYTE PTR [rax],al
   10b6e:	00 00                	add    BYTE PTR [rax],al
   10b70:	01 00                	add    DWORD PTR [rax],eax
   10b72:	00 00                	add    BYTE PTR [rax],al
   10b74:	00 00                	add    BYTE PTR [rax],al
   10b76:	00 00                	add    BYTE PTR [rax],al
   10b78:	01 00                	add    DWORD PTR [rax],eax
   10b7a:	00 00                	add    BYTE PTR [rax],al
   10b7c:	00 00                	add    BYTE PTR [rax],al
   10b7e:	00 00                	add    BYTE PTR [rax],al
   10b80:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   10b81:	00 00                	add    BYTE PTR [rax],al
   10b83:	00 00                	add    BYTE PTR [rax],al
   10b85:	00 00                	add    BYTE PTR [rax],al
   10b87:	00 01                	add    BYTE PTR [rcx],al
   10b89:	00 00                	add    BYTE PTR [rax],al
   10b8b:	00 00                	add    BYTE PTR [rax],al
   10b8d:	00 00                	add    BYTE PTR [rax],al
   10b8f:	00 ab 00 00 00 00    	add    BYTE PTR [rbx+0x0],ch
   10b95:	00 00                	add    BYTE PTR [rax],al
   10b97:	00 01                	add    BYTE PTR [rcx],al
   10b99:	00 00                	add    BYTE PTR [rax],al
   10b9b:	00 00                	add    BYTE PTR [rax],al
   10b9d:	00 00                	add    BYTE PTR [rax],al
   10b9f:	00 ff                	add    bh,bh
   10ba1:	00 00                	add    BYTE PTR [rax],al
   10ba3:	00 00                	add    BYTE PTR [rax],al
   10ba5:	00 00                	add    BYTE PTR [rax],al
   10ba7:	00 01                	add    BYTE PTR [rcx],al
   10ba9:	00 00                	add    BYTE PTR [rax],al
   10bab:	00 00                	add    BYTE PTR [rax],al
   10bad:	00 00                	add    BYTE PTR [rax],al
   10baf:	00 64 01 00          	add    BYTE PTR [rcx+rax*1+0x0],ah
   10bb3:	00 00                	add    BYTE PTR [rax],al
   10bb5:	00 00                	add    BYTE PTR [rax],al
   10bb7:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
   10bba:	00 00                	add    BYTE PTR [rax],al
   10bbc:	00 00                	add    BYTE PTR [rax],al
   10bbe:	00 00                	add    BYTE PTR [rax],al
   10bc0:	00 20                	add    BYTE PTR [rax],ah
   10bc2:	00 00                	add    BYTE PTR [rax],al
   10bc4:	00 00                	add    BYTE PTR [rax],al
   10bc6:	00 00                	add    BYTE PTR [rax],al
   10bc8:	0d 00 00 00 00       	or     eax,0x0
   10bcd:	00 00                	add    BYTE PTR [rax],al
   10bcf:	00 38                	add    BYTE PTR [rax],bh
   10bd1:	bd 00 00 00 00       	mov    ebp,0x0
   10bd6:	00 00                	add    BYTE PTR [rax],al
   10bd8:	19 00                	sbb    DWORD PTR [rax],eax
   10bda:	00 00                	add    BYTE PTR [rax],al
   10bdc:	00 00                	add    BYTE PTR [rax],al
   10bde:	00 00                	add    BYTE PTR [rax],al
   10be0:	58                   	pop    rax
   10be1:	0b 01                	or     eax,DWORD PTR [rcx]
   10be3:	00 00                	add    BYTE PTR [rax],al
   10be5:	00 00                	add    BYTE PTR [rax],al
   10be7:	00 1b                	add    BYTE PTR [rbx],bl
   10be9:	00 00                	add    BYTE PTR [rax],al
   10beb:	00 00                	add    BYTE PTR [rax],al
   10bed:	00 00                	add    BYTE PTR [rax],al
   10bef:	00 08                	add    BYTE PTR [rax],cl
   10bf1:	00 00                	add    BYTE PTR [rax],al
   10bf3:	00 00                	add    BYTE PTR [rax],al
   10bf5:	00 00                	add    BYTE PTR [rax],al
   10bf7:	00 1a                	add    BYTE PTR [rdx],bl
   10bf9:	00 00                	add    BYTE PTR [rax],al
   10bfb:	00 00                	add    BYTE PTR [rax],al
   10bfd:	00 00                	add    BYTE PTR [rax],al
   10bff:	00 60 0b             	add    BYTE PTR [rax+0xb],ah
   10c02:	01 00                	add    DWORD PTR [rax],eax
   10c04:	00 00                	add    BYTE PTR [rax],al
   10c06:	00 00                	add    BYTE PTR [rax],al
   10c08:	1c 00                	sbb    al,0x0
   10c0a:	00 00                	add    BYTE PTR [rax],al
   10c0c:	00 00                	add    BYTE PTR [rax],al
   10c0e:	00 00                	add    BYTE PTR [rax],al
   10c10:	08 00                	or     BYTE PTR [rax],al
   10c12:	00 00                	add    BYTE PTR [rax],al
   10c14:	00 00                	add    BYTE PTR [rax],al
   10c16:	00 00                	add    BYTE PTR [rax],al
   10c18:	f5                   	cmc    
   10c19:	fe                   	(bad)  
   10c1a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10c1d:	00 00                	add    BYTE PTR [rax],al
   10c1f:	00 d8                	add    al,bl
   10c21:	03 00                	add    eax,DWORD PTR [rax]
   10c23:	00 00                	add    BYTE PTR [rax],al
   10c25:	00 00                	add    BYTE PTR [rax],al
   10c27:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 10c2d <_DYNAMIC+0xc5>
   10c2d:	00 00                	add    BYTE PTR [rax],al
   10c2f:	00 60 0b             	add    BYTE PTR [rax+0xb],ah
   10c32:	00 00                	add    BYTE PTR [rax],al
   10c34:	00 00                	add    BYTE PTR [rax],al
   10c36:	00 00                	add    BYTE PTR [rax],al
   10c38:	06                   	(bad)  
   10c39:	00 00                	add    BYTE PTR [rax],al
   10c3b:	00 00                	add    BYTE PTR [rax],al
   10c3d:	00 00                	add    BYTE PTR [rax],al
   10c3f:	00 10                	add    BYTE PTR [rax],dl
   10c41:	04 00                	add    al,0x0
   10c43:	00 00                	add    BYTE PTR [rax],al
   10c45:	00 00                	add    BYTE PTR [rax],al
   10c47:	00 0a                	add    BYTE PTR [rdx],cl
   10c49:	00 00                	add    BYTE PTR [rax],al
   10c4b:	00 00                	add    BYTE PTR [rax],al
   10c4d:	00 00                	add    BYTE PTR [rax],al
   10c4f:	00 2c 03             	add    BYTE PTR [rbx+rax*1],ch
   10c52:	00 00                	add    BYTE PTR [rax],al
   10c54:	00 00                	add    BYTE PTR [rax],al
   10c56:	00 00                	add    BYTE PTR [rax],al
   10c58:	0b 00                	or     eax,DWORD PTR [rax]
   10c5a:	00 00                	add    BYTE PTR [rax],al
   10c5c:	00 00                	add    BYTE PTR [rax],al
   10c5e:	00 00                	add    BYTE PTR [rax],al
   10c60:	18 00                	sbb    BYTE PTR [rax],al
   10c62:	00 00                	add    BYTE PTR [rax],al
   10c64:	00 00                	add    BYTE PTR [rax],al
   10c66:	00 00                	add    BYTE PTR [rax],al
   10c68:	15 00 00 00 00       	adc    eax,0x0
	...
   10c75:	00 00                	add    BYTE PTR [rax],al
   10c77:	00 03                	add    BYTE PTR [rbx],al
   10c79:	00 00                	add    BYTE PTR [rax],al
   10c7b:	00 00                	add    BYTE PTR [rax],al
   10c7d:	00 00                	add    BYTE PTR [rax],al
   10c7f:	00 98 0d 01 00 00    	add    BYTE PTR [rax+0x10d],bl
   10c85:	00 00                	add    BYTE PTR [rax],al
   10c87:	00 02                	add    BYTE PTR [rdx],al
   10c89:	00 00                	add    BYTE PTR [rax],al
   10c8b:	00 00                	add    BYTE PTR [rax],al
   10c8d:	00 00                	add    BYTE PTR [rax],al
   10c8f:	00 78 06             	add    BYTE PTR [rax+0x6],bh
   10c92:	00 00                	add    BYTE PTR [rax],al
   10c94:	00 00                	add    BYTE PTR [rax],al
   10c96:	00 00                	add    BYTE PTR [rax],al
   10c98:	14 00                	adc    al,0x0
   10c9a:	00 00                	add    BYTE PTR [rax],al
   10c9c:	00 00                	add    BYTE PTR [rax],al
   10c9e:	00 00                	add    BYTE PTR [rax],al
   10ca0:	07                   	(bad)  
   10ca1:	00 00                	add    BYTE PTR [rax],al
   10ca3:	00 00                	add    BYTE PTR [rax],al
   10ca5:	00 00                	add    BYTE PTR [rax],al
   10ca7:	00 17                	add    BYTE PTR [rdi],dl
   10ca9:	00 00                	add    BYTE PTR [rax],al
   10cab:	00 00                	add    BYTE PTR [rax],al
   10cad:	00 00                	add    BYTE PTR [rax],al
   10caf:	00 e0                	add    al,ah
   10cb1:	10 00                	adc    BYTE PTR [rax],al
   10cb3:	00 00                	add    BYTE PTR [rax],al
   10cb5:	00 00                	add    BYTE PTR [rax],al
   10cb7:	00 07                	add    BYTE PTR [rdi],al
   10cb9:	00 00                	add    BYTE PTR [rax],al
   10cbb:	00 00                	add    BYTE PTR [rax],al
   10cbd:	00 00                	add    BYTE PTR [rax],al
   10cbf:	00 a8 0f 00 00 00    	add    BYTE PTR [rax+0xf],ch
   10cc5:	00 00                	add    BYTE PTR [rax],al
   10cc7:	00 08                	add    BYTE PTR [rax],cl
   10cc9:	00 00                	add    BYTE PTR [rax],al
   10ccb:	00 00                	add    BYTE PTR [rax],al
   10ccd:	00 00                	add    BYTE PTR [rax],al
   10ccf:	00 38                	add    BYTE PTR [rax],bh
   10cd1:	01 00                	add    DWORD PTR [rax],eax
   10cd3:	00 00                	add    BYTE PTR [rax],al
   10cd5:	00 00                	add    BYTE PTR [rax],al
   10cd7:	00 09                	add    BYTE PTR [rcx],cl
   10cd9:	00 00                	add    BYTE PTR [rax],al
   10cdb:	00 00                	add    BYTE PTR [rax],al
   10cdd:	00 00                	add    BYTE PTR [rax],al
   10cdf:	00 18                	add    BYTE PTR [rax],bl
   10ce1:	00 00                	add    BYTE PTR [rax],al
   10ce3:	00 00                	add    BYTE PTR [rax],al
   10ce5:	00 00                	add    BYTE PTR [rax],al
   10ce7:	00 1e                	add    BYTE PTR [rsi],bl
   10ce9:	00 00                	add    BYTE PTR [rax],al
   10ceb:	00 00                	add    BYTE PTR [rax],al
   10ced:	00 00                	add    BYTE PTR [rax],al
   10cef:	00 08                	add    BYTE PTR [rax],cl
   10cf1:	00 00                	add    BYTE PTR [rax],al
   10cf3:	00 00                	add    BYTE PTR [rax],al
   10cf5:	00 00                	add    BYTE PTR [rax],al
   10cf7:	00 fb                	add    bl,bh
   10cf9:	ff                   	(bad)  
   10cfa:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10cfd:	00 00                	add    BYTE PTR [rax],al
   10cff:	00 01                	add    BYTE PTR [rcx],al
   10d01:	00 00                	add    BYTE PTR [rax],al
   10d03:	08 00                	or     BYTE PTR [rax],al
   10d05:	00 00                	add    BYTE PTR [rax],al
   10d07:	00 fe                	add    dh,bh
   10d09:	ff                   	(bad)  
   10d0a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d0d:	00 00                	add    BYTE PTR [rax],al
   10d0f:	00 28                	add    BYTE PTR [rax],ch
   10d11:	0f 00 00             	sldt   WORD PTR [rax]
   10d14:	00 00                	add    BYTE PTR [rax],al
   10d16:	00 00                	add    BYTE PTR [rax],al
   10d18:	ff                   	(bad)  
   10d19:	ff                   	(bad)  
   10d1a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d1d:	00 00                	add    BYTE PTR [rax],al
   10d1f:	00 03                	add    BYTE PTR [rbx],al
   10d21:	00 00                	add    BYTE PTR [rax],al
   10d23:	00 00                	add    BYTE PTR [rax],al
   10d25:	00 00                	add    BYTE PTR [rax],al
   10d27:	00 f0                	add    al,dh
   10d29:	ff                   	(bad)  
   10d2a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d2d:	00 00                	add    BYTE PTR [rax],al
   10d2f:	00 8c 0e 00 00 00 00 	add    BYTE PTR [rsi+rcx*1+0x0],cl
   10d36:	00 00                	add    BYTE PTR [rax],al
   10d38:	f9                   	stc    
   10d39:	ff                   	(bad)  
   10d3a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d3d:	00 00                	add    BYTE PTR [rax],al
   10d3f:	00 06                	add    BYTE PTR [rsi],al
	...

Disassembly of section .got:

0000000000010d98 <_GLOBAL_OFFSET_TABLE_>:
   10d98:	68 0b 01 00 00       	push   0x10b
	...
   10dad:	00 00                	add    BYTE PTR [rax],al
   10daf:	00 30                	add    BYTE PTR [rax],dh
   10db1:	20 00                	and    BYTE PTR [rax],al
   10db3:	00 00                	add    BYTE PTR [rax],al
   10db5:	00 00                	add    BYTE PTR [rax],al
   10db7:	00 40 20             	add    BYTE PTR [rax+0x20],al
   10dba:	00 00                	add    BYTE PTR [rax],al
   10dbc:	00 00                	add    BYTE PTR [rax],al
   10dbe:	00 00                	add    BYTE PTR [rax],al
   10dc0:	50                   	push   rax
   10dc1:	20 00                	and    BYTE PTR [rax],al
   10dc3:	00 00                	add    BYTE PTR [rax],al
   10dc5:	00 00                	add    BYTE PTR [rax],al
   10dc7:	00 60 20             	add    BYTE PTR [rax+0x20],ah
   10dca:	00 00                	add    BYTE PTR [rax],al
   10dcc:	00 00                	add    BYTE PTR [rax],al
   10dce:	00 00                	add    BYTE PTR [rax],al
   10dd0:	70 20                	jo     10df2 <_GLOBAL_OFFSET_TABLE_+0x5a>
   10dd2:	00 00                	add    BYTE PTR [rax],al
   10dd4:	00 00                	add    BYTE PTR [rax],al
   10dd6:	00 00                	add    BYTE PTR [rax],al
   10dd8:	80 20 00             	and    BYTE PTR [rax],0x0
   10ddb:	00 00                	add    BYTE PTR [rax],al
   10ddd:	00 00                	add    BYTE PTR [rax],al
   10ddf:	00 90 20 00 00 00    	add    BYTE PTR [rax+0x20],dl
   10de5:	00 00                	add    BYTE PTR [rax],al
   10de7:	00 a0 20 00 00 00    	add    BYTE PTR [rax+0x20],ah
   10ded:	00 00                	add    BYTE PTR [rax],al
   10def:	00 b0 20 00 00 00    	add    BYTE PTR [rax+0x20],dh
   10df5:	00 00                	add    BYTE PTR [rax],al
   10df7:	00 c0                	add    al,al
   10df9:	20 00                	and    BYTE PTR [rax],al
   10dfb:	00 00                	add    BYTE PTR [rax],al
   10dfd:	00 00                	add    BYTE PTR [rax],al
   10dff:	00 d0                	add    al,dl
   10e01:	20 00                	and    BYTE PTR [rax],al
   10e03:	00 00                	add    BYTE PTR [rax],al
   10e05:	00 00                	add    BYTE PTR [rax],al
   10e07:	00 e0                	add    al,ah
   10e09:	20 00                	and    BYTE PTR [rax],al
   10e0b:	00 00                	add    BYTE PTR [rax],al
   10e0d:	00 00                	add    BYTE PTR [rax],al
   10e0f:	00 f0                	add    al,dh
   10e11:	20 00                	and    BYTE PTR [rax],al
   10e13:	00 00                	add    BYTE PTR [rax],al
   10e15:	00 00                	add    BYTE PTR [rax],al
   10e17:	00 00                	add    BYTE PTR [rax],al
   10e19:	21 00                	and    DWORD PTR [rax],eax
   10e1b:	00 00                	add    BYTE PTR [rax],al
   10e1d:	00 00                	add    BYTE PTR [rax],al
   10e1f:	00 10                	add    BYTE PTR [rax],dl
   10e21:	21 00                	and    DWORD PTR [rax],eax
   10e23:	00 00                	add    BYTE PTR [rax],al
   10e25:	00 00                	add    BYTE PTR [rax],al
   10e27:	00 20                	add    BYTE PTR [rax],ah
   10e29:	21 00                	and    DWORD PTR [rax],eax
   10e2b:	00 00                	add    BYTE PTR [rax],al
   10e2d:	00 00                	add    BYTE PTR [rax],al
   10e2f:	00 30                	add    BYTE PTR [rax],dh
   10e31:	21 00                	and    DWORD PTR [rax],eax
   10e33:	00 00                	add    BYTE PTR [rax],al
   10e35:	00 00                	add    BYTE PTR [rax],al
   10e37:	00 40 21             	add    BYTE PTR [rax+0x21],al
   10e3a:	00 00                	add    BYTE PTR [rax],al
   10e3c:	00 00                	add    BYTE PTR [rax],al
   10e3e:	00 00                	add    BYTE PTR [rax],al
   10e40:	50                   	push   rax
   10e41:	21 00                	and    DWORD PTR [rax],eax
   10e43:	00 00                	add    BYTE PTR [rax],al
   10e45:	00 00                	add    BYTE PTR [rax],al
   10e47:	00 60 21             	add    BYTE PTR [rax+0x21],ah
   10e4a:	00 00                	add    BYTE PTR [rax],al
   10e4c:	00 00                	add    BYTE PTR [rax],al
   10e4e:	00 00                	add    BYTE PTR [rax],al
   10e50:	70 21                	jo     10e73 <_GLOBAL_OFFSET_TABLE_+0xdb>
   10e52:	00 00                	add    BYTE PTR [rax],al
   10e54:	00 00                	add    BYTE PTR [rax],al
   10e56:	00 00                	add    BYTE PTR [rax],al
   10e58:	80 21 00             	and    BYTE PTR [rcx],0x0
   10e5b:	00 00                	add    BYTE PTR [rax],al
   10e5d:	00 00                	add    BYTE PTR [rax],al
   10e5f:	00 90 21 00 00 00    	add    BYTE PTR [rax+0x21],dl
   10e65:	00 00                	add    BYTE PTR [rax],al
   10e67:	00 a0 21 00 00 00    	add    BYTE PTR [rax+0x21],ah
   10e6d:	00 00                	add    BYTE PTR [rax],al
   10e6f:	00 b0 21 00 00 00    	add    BYTE PTR [rax+0x21],dh
   10e75:	00 00                	add    BYTE PTR [rax],al
   10e77:	00 c0                	add    al,al
   10e79:	21 00                	and    DWORD PTR [rax],eax
   10e7b:	00 00                	add    BYTE PTR [rax],al
   10e7d:	00 00                	add    BYTE PTR [rax],al
   10e7f:	00 d0                	add    al,dl
   10e81:	21 00                	and    DWORD PTR [rax],eax
   10e83:	00 00                	add    BYTE PTR [rax],al
   10e85:	00 00                	add    BYTE PTR [rax],al
   10e87:	00 e0                	add    al,ah
   10e89:	21 00                	and    DWORD PTR [rax],eax
   10e8b:	00 00                	add    BYTE PTR [rax],al
   10e8d:	00 00                	add    BYTE PTR [rax],al
   10e8f:	00 f0                	add    al,dh
   10e91:	21 00                	and    DWORD PTR [rax],eax
   10e93:	00 00                	add    BYTE PTR [rax],al
   10e95:	00 00                	add    BYTE PTR [rax],al
   10e97:	00 00                	add    BYTE PTR [rax],al
   10e99:	22 00                	and    al,BYTE PTR [rax]
   10e9b:	00 00                	add    BYTE PTR [rax],al
   10e9d:	00 00                	add    BYTE PTR [rax],al
   10e9f:	00 10                	add    BYTE PTR [rax],dl
   10ea1:	22 00                	and    al,BYTE PTR [rax]
   10ea3:	00 00                	add    BYTE PTR [rax],al
   10ea5:	00 00                	add    BYTE PTR [rax],al
   10ea7:	00 20                	add    BYTE PTR [rax],ah
   10ea9:	22 00                	and    al,BYTE PTR [rax]
   10eab:	00 00                	add    BYTE PTR [rax],al
   10ead:	00 00                	add    BYTE PTR [rax],al
   10eaf:	00 30                	add    BYTE PTR [rax],dh
   10eb1:	22 00                	and    al,BYTE PTR [rax]
   10eb3:	00 00                	add    BYTE PTR [rax],al
   10eb5:	00 00                	add    BYTE PTR [rax],al
   10eb7:	00 40 22             	add    BYTE PTR [rax+0x22],al
   10eba:	00 00                	add    BYTE PTR [rax],al
   10ebc:	00 00                	add    BYTE PTR [rax],al
   10ebe:	00 00                	add    BYTE PTR [rax],al
   10ec0:	50                   	push   rax
   10ec1:	22 00                	and    al,BYTE PTR [rax]
   10ec3:	00 00                	add    BYTE PTR [rax],al
   10ec5:	00 00                	add    BYTE PTR [rax],al
   10ec7:	00 60 22             	add    BYTE PTR [rax+0x22],ah
   10eca:	00 00                	add    BYTE PTR [rax],al
   10ecc:	00 00                	add    BYTE PTR [rax],al
   10ece:	00 00                	add    BYTE PTR [rax],al
   10ed0:	70 22                	jo     10ef4 <_GLOBAL_OFFSET_TABLE_+0x15c>
   10ed2:	00 00                	add    BYTE PTR [rax],al
   10ed4:	00 00                	add    BYTE PTR [rax],al
   10ed6:	00 00                	add    BYTE PTR [rax],al
   10ed8:	80 22 00             	and    BYTE PTR [rdx],0x0
   10edb:	00 00                	add    BYTE PTR [rax],al
   10edd:	00 00                	add    BYTE PTR [rax],al
   10edf:	00 90 22 00 00 00    	add    BYTE PTR [rax+0x22],dl
   10ee5:	00 00                	add    BYTE PTR [rax],al
   10ee7:	00 a0 22 00 00 00    	add    BYTE PTR [rax+0x22],ah
   10eed:	00 00                	add    BYTE PTR [rax],al
   10eef:	00 b0 22 00 00 00    	add    BYTE PTR [rax+0x22],dh
   10ef5:	00 00                	add    BYTE PTR [rax],al
   10ef7:	00 c0                	add    al,al
   10ef9:	22 00                	and    al,BYTE PTR [rax]
   10efb:	00 00                	add    BYTE PTR [rax],al
   10efd:	00 00                	add    BYTE PTR [rax],al
   10eff:	00 d0                	add    al,dl
   10f01:	22 00                	and    al,BYTE PTR [rax]
   10f03:	00 00                	add    BYTE PTR [rax],al
   10f05:	00 00                	add    BYTE PTR [rax],al
   10f07:	00 e0                	add    al,ah
   10f09:	22 00                	and    al,BYTE PTR [rax]
   10f0b:	00 00                	add    BYTE PTR [rax],al
   10f0d:	00 00                	add    BYTE PTR [rax],al
   10f0f:	00 f0                	add    al,dh
   10f11:	22 00                	and    al,BYTE PTR [rax]
   10f13:	00 00                	add    BYTE PTR [rax],al
   10f15:	00 00                	add    BYTE PTR [rax],al
   10f17:	00 00                	add    BYTE PTR [rax],al
   10f19:	23 00                	and    eax,DWORD PTR [rax]
   10f1b:	00 00                	add    BYTE PTR [rax],al
   10f1d:	00 00                	add    BYTE PTR [rax],al
   10f1f:	00 10                	add    BYTE PTR [rax],dl
   10f21:	23 00                	and    eax,DWORD PTR [rax]
   10f23:	00 00                	add    BYTE PTR [rax],al
   10f25:	00 00                	add    BYTE PTR [rax],al
   10f27:	00 20                	add    BYTE PTR [rax],ah
   10f29:	23 00                	and    eax,DWORD PTR [rax]
   10f2b:	00 00                	add    BYTE PTR [rax],al
   10f2d:	00 00                	add    BYTE PTR [rax],al
   10f2f:	00 30                	add    BYTE PTR [rax],dh
   10f31:	23 00                	and    eax,DWORD PTR [rax]
   10f33:	00 00                	add    BYTE PTR [rax],al
   10f35:	00 00                	add    BYTE PTR [rax],al
   10f37:	00 40 23             	add    BYTE PTR [rax+0x23],al
   10f3a:	00 00                	add    BYTE PTR [rax],al
   10f3c:	00 00                	add    BYTE PTR [rax],al
   10f3e:	00 00                	add    BYTE PTR [rax],al
   10f40:	50                   	push   rax
   10f41:	23 00                	and    eax,DWORD PTR [rax]
   10f43:	00 00                	add    BYTE PTR [rax],al
   10f45:	00 00                	add    BYTE PTR [rax],al
   10f47:	00 60 23             	add    BYTE PTR [rax+0x23],ah
   10f4a:	00 00                	add    BYTE PTR [rax],al
   10f4c:	00 00                	add    BYTE PTR [rax],al
   10f4e:	00 00                	add    BYTE PTR [rax],al
   10f50:	70 23                	jo     10f75 <_GLOBAL_OFFSET_TABLE_+0x1dd>
   10f52:	00 00                	add    BYTE PTR [rax],al
   10f54:	00 00                	add    BYTE PTR [rax],al
   10f56:	00 00                	add    BYTE PTR [rax],al
   10f58:	80 23 00             	and    BYTE PTR [rbx],0x0
   10f5b:	00 00                	add    BYTE PTR [rax],al
   10f5d:	00 00                	add    BYTE PTR [rax],al
   10f5f:	00 90 23 00 00 00    	add    BYTE PTR [rax+0x23],dl
   10f65:	00 00                	add    BYTE PTR [rax],al
   10f67:	00 a0 23 00 00 00    	add    BYTE PTR [rax+0x23],ah
   10f6d:	00 00                	add    BYTE PTR [rax],al
   10f6f:	00 b0 23 00 00 00    	add    BYTE PTR [rax+0x23],dh
   10f75:	00 00                	add    BYTE PTR [rax],al
   10f77:	00 c0                	add    al,al
   10f79:	23 00                	and    eax,DWORD PTR [rax]
   10f7b:	00 00                	add    BYTE PTR [rax],al
   10f7d:	00 00                	add    BYTE PTR [rax],al
   10f7f:	00 d0                	add    al,dl
   10f81:	23 00                	and    eax,DWORD PTR [rax]
   10f83:	00 00                	add    BYTE PTR [rax],al
   10f85:	00 00                	add    BYTE PTR [rax],al
   10f87:	00 e0                	add    al,ah
   10f89:	23 00                	and    eax,DWORD PTR [rax]
   10f8b:	00 00                	add    BYTE PTR [rax],al
   10f8d:	00 00                	add    BYTE PTR [rax],al
   10f8f:	00 f0                	add    al,dh
   10f91:	23 00                	and    eax,DWORD PTR [rax]
   10f93:	00 00                	add    BYTE PTR [rax],al
   10f95:	00 00                	add    BYTE PTR [rax],al
   10f97:	00 00                	add    BYTE PTR [rax],al
   10f99:	24 00                	and    al,0x0
   10f9b:	00 00                	add    BYTE PTR [rax],al
   10f9d:	00 00                	add    BYTE PTR [rax],al
   10f9f:	00 10                	add    BYTE PTR [rax],dl
   10fa1:	24 00                	and    al,0x0
   10fa3:	00 00                	add    BYTE PTR [rax],al
   10fa5:	00 00                	add    BYTE PTR [rax],al
   10fa7:	00 20                	add    BYTE PTR [rax],ah
   10fa9:	24 00                	and    al,0x0
   10fab:	00 00                	add    BYTE PTR [rax],al
   10fad:	00 00                	add    BYTE PTR [rax],al
   10faf:	00 30                	add    BYTE PTR [rax],dh
   10fb1:	24 00                	and    al,0x0
   10fb3:	00 00                	add    BYTE PTR [rax],al
   10fb5:	00 00                	add    BYTE PTR [rax],al
   10fb7:	00 40 24             	add    BYTE PTR [rax+0x24],al
   10fba:	00 00                	add    BYTE PTR [rax],al
   10fbc:	00 00                	add    BYTE PTR [rax],al
   10fbe:	00 00                	add    BYTE PTR [rax],al
   10fc0:	50                   	push   rax
   10fc1:	24 00                	and    al,0x0
   10fc3:	00 00                	add    BYTE PTR [rax],al
   10fc5:	00 00                	add    BYTE PTR [rax],al
   10fc7:	00 60 24             	add    BYTE PTR [rax+0x24],ah
   10fca:	00 00                	add    BYTE PTR [rax],al
   10fcc:	00 00                	add    BYTE PTR [rax],al
   10fce:	00 00                	add    BYTE PTR [rax],al
   10fd0:	70 24                	jo     10ff6 <_GLOBAL_OFFSET_TABLE_+0x25e>
	...

Disassembly of section .data:

0000000000011000 <__data_start>:
	...

0000000000011008 <__dso_handle>:
   11008:	08 10                	or     BYTE PTR [rax],dl
   1100a:	01 00                	add    DWORD PTR [rax],eax
   1100c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011010 <blk_ipv4_len>:
   11010:	ff                   	(bad)  
   11011:	ff                   	(bad)  
   11012:	ff                   	(bad)  
   11013:	ff                   	(bad)  

0000000000011014 <num_rules>:
   11014:	ff                   	(bad)  
   11015:	ff                   	(bad)  
   11016:	ff                   	(bad)  
   11017:	ff                   	(bad)  

0000000000011018 <watchlist_num>:
   11018:	ff                   	(bad)  
   11019:	ff                   	(bad)  
   1101a:	ff                   	(bad)  
   1101b:	ff                   	(bad)  

000000000001101c <arp_entries>:
   1101c:	ff                   	(bad)  
   1101d:	ff                   	(bad)  
   1101e:	ff                   	(bad)  
   1101f:	ff                 	dec    eax

0000000000011020 <spi_max>:
   11020:	c8 00 00 00          	enter  0x0,0x0

0000000000011024 <VIGIL_MODE>:
   11024:	ff                   	(bad)  
   11025:	ff 00                	inc    DWORD PTR [rax]
	...

0000000000011028 <default_config>:
   11028:	04 c0                	add    al,0xc0
   1102a:	00 00                	add    BYTE PTR [rax],al
   1102c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011030 <def_log_file>:
   11030:	1a c0                	sbb    al,al
   11032:	00 00                	add    BYTE PTR [rax],al
   11034:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011038 <default_host_conf>:
   11038:	34 c0                	xor    al,0xc0
   1103a:	00 00                	add    BYTE PTR [rax],al
   1103c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011040 <total_conversations>:
   11040:	ff                   	(bad)  
   11041:	ff                   	(bad)  
   11042:	ff                   	(bad)  
   11043:	ff                   	.byte 0xff

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <buffer+0x78>
   a:	74 75                	je     81 <buffer.4704+0x1>
   c:	20 39                	and    BYTE PTR [rcx],bh
   e:	2e 34 2e             	cs xor al,0x2e
  11:	30 2d 31 75 62 75    	xor    BYTE PTR [rip+0x75627531],ch        # 75627548 <_end+0x754ec108>
  17:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  18:	74 75                	je     8f <buffer.4704+0xf>
  1a:	31 7e 32             	xor    DWORD PTR [rsi+0x32],edi
  1d:	30 2e                	xor    BYTE PTR [rsi],ch
  1f:	30 34 29             	xor    BYTE PTR [rcx+rbp*1],dh
  22:	20 39                	and    BYTE PTR [rcx],bh
  24:	2e 34 2e             	cs xor al,0x2e
  27:	30 00                	xor    BYTE PTR [rax],al
