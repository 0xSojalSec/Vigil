
vigil.exe:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000350 <.interp>:
 350:	2f                   	(bad)  
 351:	6c                   	ins    BYTE PTR es:[rdi],dx
 352:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 359:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 35e:	78 2d                	js     38d <buffer.0+0x30d>
 360:	78 38                	js     39a <buffer.0+0x31a>
 362:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 368:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 369:	2e 32 00             	cs xor al,BYTE PTR [rax]

Disassembly of section .note.gnu.property:

0000000000000370 <.note.gnu.property>:
 370:	04 00                	add    al,0x0
 372:	00 00                	add    BYTE PTR [rax],al
 374:	20 00                	and    BYTE PTR [rax],al
 376:	00 00                	add    BYTE PTR [rax],al
 378:	05 00 00 00 47       	add    eax,0x47000000
 37d:	4e 55                	rex.WRX push rbp
 37f:	00 02                	add    BYTE PTR [rdx],al
 381:	00 00                	add    BYTE PTR [rax],al
 383:	c0 04 00 00          	rol    BYTE PTR [rax+rax*1],0x0
 387:	00 03                	add    BYTE PTR [rbx],al
 389:	00 00                	add    BYTE PTR [rax],al
 38b:	00 00                	add    BYTE PTR [rax],al
 38d:	00 00                	add    BYTE PTR [rax],al
 38f:	00 02                	add    BYTE PTR [rdx],al
 391:	80 00 c0             	add    BYTE PTR [rax],0xc0
 394:	04 00                	add    al,0x0
 396:	00 00                	add    BYTE PTR [rax],al
 398:	01 00                	add    DWORD PTR [rax],eax
 39a:	00 00                	add    BYTE PTR [rax],al
 39c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

00000000000003a0 <.note.gnu.build-id>:
 3a0:	04 00                	add    al,0x0
 3a2:	00 00                	add    BYTE PTR [rax],al
 3a4:	14 00                	adc    al,0x0
 3a6:	00 00                	add    BYTE PTR [rax],al
 3a8:	03 00                	add    eax,DWORD PTR [rax]
 3aa:	00 00                	add    BYTE PTR [rax],al
 3ac:	47                   	rex.RXB
 3ad:	4e 55                	rex.WRX push rbp
 3af:	00 98 79 f4 10 0e    	add    BYTE PTR [rax+0xe10f479],bl
 3b5:	7b c0                	jnp    377 <buffer.0+0x2f7>
 3b7:	b2 ef                	mov    dl,0xef
 3b9:	dc c8                	fmul   st(0),st
 3bb:	66 56                	push   si
 3bd:	1a c6                	sbb    al,dh
 3bf:	7a 1f                	jp     3e0 <__abi_tag+0x1c>
 3c1:	91                   	xchg   ecx,eax
 3c2:	68                   	.byte 0x68
 3c3:	96                   	xchg   esi,eax

Disassembly of section .note.ABI-tag:

00000000000003c4 <__abi_tag>:
 3c4:	04 00                	add    al,0x0
 3c6:	00 00                	add    BYTE PTR [rax],al
 3c8:	10 00                	adc    BYTE PTR [rax],al
 3ca:	00 00                	add    BYTE PTR [rax],al
 3cc:	01 00                	add    DWORD PTR [rax],eax
 3ce:	00 00                	add    BYTE PTR [rax],al
 3d0:	47                   	rex.RXB
 3d1:	4e 55                	rex.WRX push rbp
 3d3:	00 00                	add    BYTE PTR [rax],al
 3d5:	00 00                	add    BYTE PTR [rax],al
 3d7:	00 03                	add    BYTE PTR [rbx],al
 3d9:	00 00                	add    BYTE PTR [rax],al
 3db:	00 02                	add    BYTE PTR [rdx],al
 3dd:	00 00                	add    BYTE PTR [rax],al
 3df:	00 00                	add    BYTE PTR [rax],al
 3e1:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .gnu.hash:

00000000000003e8 <.gnu.hash>:
 3e8:	03 00                	add    eax,DWORD PTR [rax]
 3ea:	00 00                	add    BYTE PTR [rax],al
 3ec:	4c 00 00             	rex.WR add BYTE PTR [rax],r8b
 3ef:	00 01                	add    BYTE PTR [rcx],al
 3f1:	00 00                	add    BYTE PTR [rax],al
 3f3:	00 06                	add    BYTE PTR [rsi],al
 3f5:	00 00                	add    BYTE PTR [rax],al
 3f7:	00 00                	add    BYTE PTR [rax],al
 3f9:	14 81                	adc    al,0x81
 3fb:	00 00                	add    BYTE PTR [rax],al
 3fd:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 400:	4c 00 00             	rex.WR add BYTE PTR [rax],r8b
 403:	00 00                	add    BYTE PTR [rax],al
 405:	00 00                	add    BYTE PTR [rax],al
 407:	00 4d 00             	add    BYTE PTR [rbp+0x0],cl
 40a:	00 00                	add    BYTE PTR [rax],al
 40c:	d1 65 ce             	shl    DWORD PTR [rbp-0x32],1
 40f:	6d                   	ins    DWORD PTR es:[rdi],dx
 410:	b2 a2                	mov    dl,0xa2
 412:	f7 12                	not    DWORD PTR [rdx]
 414:	33                   	.byte 0x33
 415:	b3 f0                	mov    bl,0xf0
 417:	a9                   	.byte 0xa9

Disassembly of section .dynsym:

0000000000000418 <.dynsym>:
	...
 430:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
 433:	00 12                	add    BYTE PTR [rdx],dl
	...
 445:	00 00                	add    BYTE PTR [rax],al
 447:	00 bb 01 00 00 12    	add    BYTE PTR [rbx+0x12000001],bh
	...
 45d:	00 00                	add    BYTE PTR [rax],al
 45f:	00 78 02             	add    BYTE PTR [rax+0x2],bh
 462:	00 00                	add    BYTE PTR [rax],al
 464:	12 00                	adc    al,BYTE PTR [rax]
	...
 476:	00 00                	add    BYTE PTR [rax],al
 478:	7f 01                	jg     47b <__abi_tag+0xb7>
 47a:	00 00                	add    BYTE PTR [rax],al
 47c:	12 00                	adc    al,BYTE PTR [rax]
	...
 48e:	00 00                	add    BYTE PTR [rax],al
 490:	6d                   	ins    DWORD PTR es:[rdi],dx
 491:	02 00                	add    al,BYTE PTR [rax]
 493:	00 12                	add    BYTE PTR [rdx],dl
	...
 4a5:	00 00                	add    BYTE PTR [rax],al
 4a7:	00 65 02             	add    BYTE PTR [rbp+0x2],ah
 4aa:	00 00                	add    BYTE PTR [rax],al
 4ac:	12 00                	adc    al,BYTE PTR [rax]
	...
 4be:	00 00                	add    BYTE PTR [rax],al
 4c0:	2c 02                	sub    al,0x2
 4c2:	00 00                	add    BYTE PTR [rax],al
 4c4:	12 00                	adc    al,BYTE PTR [rax]
	...
 4d6:	00 00                	add    BYTE PTR [rax],al
 4d8:	6c                   	ins    BYTE PTR es:[rdi],dx
 4d9:	00 00                	add    BYTE PTR [rax],al
 4db:	00 12                	add    BYTE PTR [rdx],dl
	...
 4ed:	00 00                	add    BYTE PTR [rax],al
 4ef:	00 e1                	add    cl,ah
 4f1:	01 00                	add    DWORD PTR [rax],eax
 4f3:	00 12                	add    BYTE PTR [rdx],dl
	...
 505:	00 00                	add    BYTE PTR [rax],al
 507:	00 c8                	add    al,cl
 509:	01 00                	add    DWORD PTR [rax],eax
 50b:	00 12                	add    BYTE PTR [rdx],dl
	...
 51d:	00 00                	add    BYTE PTR [rax],al
 51f:	00 a4 02 00 00 12 00 	add    BYTE PTR [rdx+rax*1+0x120000],ah
	...
 536:	00 00                	add    BYTE PTR [rax],al
 538:	d5                   	(bad)  
 539:	00 00                	add    BYTE PTR [rax],al
 53b:	00 12                	add    BYTE PTR [rdx],dl
	...
 54d:	00 00                	add    BYTE PTR [rax],al
 54f:	00 5a 01             	add    BYTE PTR [rdx+0x1],bl
 552:	00 00                	add    BYTE PTR [rax],al
 554:	12 00                	adc    al,BYTE PTR [rax]
	...
 566:	00 00                	add    BYTE PTR [rax],al
 568:	50                   	push   rax
 569:	00 00                	add    BYTE PTR [rax],al
 56b:	00 12                	add    BYTE PTR [rdx],dl
	...
 57d:	00 00                	add    BYTE PTR [rax],al
 57f:	00 5f 00             	add    BYTE PTR [rdi+0x0],bl
 582:	00 00                	add    BYTE PTR [rax],al
 584:	12 00                	adc    al,BYTE PTR [rax]
	...
 596:	00 00                	add    BYTE PTR [rax],al
 598:	4a 02 00             	rex.WX add al,BYTE PTR [rax]
 59b:	00 12                	add    BYTE PTR [rdx],dl
	...
 5ad:	00 00                	add    BYTE PTR [rax],al
 5af:	00 28                	add    BYTE PTR [rax],ch
 5b1:	01 00                	add    DWORD PTR [rax],eax
 5b3:	00 12                	add    BYTE PTR [rdx],dl
	...
 5c5:	00 00                	add    BYTE PTR [rax],al
 5c7:	00 1c 02             	add    BYTE PTR [rdx+rax*1],bl
 5ca:	00 00                	add    BYTE PTR [rax],al
 5cc:	12 00                	adc    al,BYTE PTR [rax]
	...
 5de:	00 00                	add    BYTE PTR [rax],al
 5e0:	60                   	(bad)  
 5e1:	02 00                	add    al,BYTE PTR [rax]
 5e3:	00 12                	add    BYTE PTR [rdx],dl
	...
 5f5:	00 00                	add    BYTE PTR [rax],al
 5f7:	00 af 00 00 00 12    	add    BYTE PTR [rdi+0x12000000],ch
	...
 60d:	00 00                	add    BYTE PTR [rax],al
 60f:	00 42 02             	add    BYTE PTR [rdx+0x2],al
 612:	00 00                	add    BYTE PTR [rax],al
 614:	12 00                	adc    al,BYTE PTR [rax]
	...
 626:	00 00                	add    BYTE PTR [rax],al
 628:	f2 00 00             	repnz add BYTE PTR [rax],al
 62b:	00 12                	add    BYTE PTR [rdx],dl
	...
 63d:	00 00                	add    BYTE PTR [rax],al
 63f:	00 0e                	add    BYTE PTR [rsi],cl
 641:	02 00                	add    al,BYTE PTR [rax]
 643:	00 12                	add    BYTE PTR [rdx],dl
	...
 655:	00 00                	add    BYTE PTR [rax],al
 657:	00 32                	add    BYTE PTR [rdx],dh
 659:	01 00                	add    DWORD PTR [rax],eax
 65b:	00 12                	add    BYTE PTR [rdx],dl
	...
 66d:	00 00                	add    BYTE PTR [rax],al
 66f:	00 61 01             	add    BYTE PTR [rcx+0x1],ah
 672:	00 00                	add    BYTE PTR [rax],al
 674:	12 00                	adc    al,BYTE PTR [rax]
	...
 686:	00 00                	add    BYTE PTR [rax],al
 688:	a1 01 00 00 12 00 00 	movabs eax,ds:0x12000001
 68f:	00 00 
	...
 69d:	00 00                	add    BYTE PTR [rax],al
 69f:	00 51 02             	add    BYTE PTR [rcx+0x2],dl
 6a2:	00 00                	add    BYTE PTR [rax],al
 6a4:	12 00                	adc    al,BYTE PTR [rax]
	...
 6b6:	00 00                	add    BYTE PTR [rax],al
 6b8:	72 02                	jb     6bc <message_buffer+0x23c>
 6ba:	00 00                	add    BYTE PTR [rax],al
 6bc:	12 00                	adc    al,BYTE PTR [rax]
	...
 6ce:	00 00                	add    BYTE PTR [rax],al
 6d0:	12 01                	adc    al,BYTE PTR [rcx]
 6d2:	00 00                	add    BYTE PTR [rax],al
 6d4:	12 00                	adc    al,BYTE PTR [rax]
	...
 6e6:	00 00                	add    BYTE PTR [rax],al
 6e8:	96                   	xchg   esi,eax
 6e9:	02 00                	add    al,BYTE PTR [rax]
 6eb:	00 12                	add    BYTE PTR [rdx],dl
	...
 6fd:	00 00                	add    BYTE PTR [rax],al
 6ff:	00 72 01             	add    BYTE PTR [rdx+0x1],dh
 702:	00 00                	add    BYTE PTR [rax],al
 704:	12 00                	adc    al,BYTE PTR [rax]
	...
 716:	00 00                	add    BYTE PTR [rax],al
 718:	66 01 00             	add    WORD PTR [rax],ax
 71b:	00 12                	add    BYTE PTR [rdx],dl
	...
 72d:	00 00                	add    BYTE PTR [rax],al
 72f:	00 ef                	add    bh,ch
 731:	01 00                	add    DWORD PTR [rax],eax
 733:	00 12                	add    BYTE PTR [rdx],dl
	...
 745:	00 00                	add    BYTE PTR [rax],al
 747:	00 86 00 00 00 12    	add    BYTE PTR [rsi+0x12000000],al
	...
 75d:	00 00                	add    BYTE PTR [rax],al
 75f:	00 e8                	add    al,ch
 761:	01 00                	add    DWORD PTR [rax],eax
 763:	00 12                	add    BYTE PTR [rdx],dl
	...
 775:	00 00                	add    BYTE PTR [rax],al
 777:	00 b8 02 00 00 12    	add    BYTE PTR [rax+0x12000002],bh
	...
 78d:	00 00                	add    BYTE PTR [rax],al
 78f:	00 c2                	add    dl,al
 791:	01 00                	add    DWORD PTR [rax],eax
 793:	00 12                	add    BYTE PTR [rdx],dl
	...
 7a5:	00 00                	add    BYTE PTR [rax],al
 7a7:	00 8f 02 00 00 12    	add    BYTE PTR [rdi+0x12000002],cl
	...
 7bd:	00 00                	add    BYTE PTR [rax],al
 7bf:	00 99 01 00 00 12    	add    BYTE PTR [rcx+0x12000001],bl
	...
 7d5:	00 00                	add    BYTE PTR [rax],al
 7d7:	00 db                	add    bl,bl
 7d9:	01 00                	add    DWORD PTR [rax],eax
 7db:	00 12                	add    BYTE PTR [rdx],dl
	...
 7ed:	00 00                	add    BYTE PTR [rax],al
 7ef:	00 cf                	add    bh,cl
 7f1:	01 00                	add    DWORD PTR [rax],eax
 7f3:	00 12                	add    BYTE PTR [rdx],dl
	...
 805:	00 00                	add    BYTE PTR [rax],al
 807:	00 9d 00 00 00 12    	add    BYTE PTR [rbp+0x12000000],bl
	...
 81d:	00 00                	add    BYTE PTR [rax],al
 81f:	00 b3 02 00 00 12    	add    BYTE PTR [rbx+0x12000002],dh
	...
 835:	00 00                	add    BYTE PTR [rax],al
 837:	00 87 02 00 00 12    	add    BYTE PTR [rdi+0x12000002],al
	...
 84d:	00 00                	add    BYTE PTR [rax],al
 84f:	00 95 00 00 00 12    	add    BYTE PTR [rbp+0x12000000],dl
	...
 865:	00 00                	add    BYTE PTR [rax],al
 867:	00 20                	add    BYTE PTR [rax],ah
 869:	01 00                	add    DWORD PTR [rax],eax
 86b:	00 12                	add    BYTE PTR [rdx],dl
	...
 87d:	00 00                	add    BYTE PTR [rax],al
 87f:	00 49 01             	add    BYTE PTR [rcx+0x1],cl
 882:	00 00                	add    BYTE PTR [rax],al
 884:	12 00                	adc    al,BYTE PTR [rax]
	...
 896:	00 00                	add    BYTE PTR [rax],al
 898:	6b 01 00             	imul   eax,DWORD PTR [rcx],0x0
 89b:	00 12                	add    BYTE PTR [rdx],dl
	...
 8ad:	00 00                	add    BYTE PTR [rax],al
 8af:	00 a2 00 00 00 12    	add    BYTE PTR [rdx+0x12000000],ah
	...
 8c5:	00 00                	add    BYTE PTR [rax],al
 8c7:	00 e4                	add    ah,ah
 8c9:	00 00                	add    BYTE PTR [rax],al
 8cb:	00 12                	add    BYTE PTR [rdx],dl
	...
 8dd:	00 00                	add    BYTE PTR [rax],al
 8df:	00 07                	add    BYTE PTR [rdi],al
 8e1:	01 00                	add    DWORD PTR [rax],eax
 8e3:	00 12                	add    BYTE PTR [rdx],dl
	...
 8f5:	00 00                	add    BYTE PTR [rax],al
 8f7:	00 ab 02 00 00 12    	add    BYTE PTR [rbx+0x12000002],ch
	...
 90d:	00 00                	add    BYTE PTR [rax],al
 90f:	00 b3 01 00 00 12    	add    BYTE PTR [rbx+0x12000001],dh
	...
 925:	00 00                	add    BYTE PTR [rax],al
 927:	00 07                	add    BYTE PTR [rdi],al
 929:	02 00                	add    al,BYTE PTR [rax]
 92b:	00 12                	add    BYTE PTR [rdx],dl
	...
 93d:	00 00                	add    BYTE PTR [rax],al
 93f:	00 ca                	add    dl,cl
 941:	00 00                	add    BYTE PTR [rax],al
 943:	00 12                	add    BYTE PTR [rdx],dl
	...
 955:	00 00                	add    BYTE PTR [rax],al
 957:	00 ba 01 00 00 12    	add    BYTE PTR [rdx+0x12000001],bh
	...
 96d:	00 00                	add    BYTE PTR [rax],al
 96f:	00 55 01             	add    BYTE PTR [rbp+0x1],dl
 972:	00 00                	add    BYTE PTR [rax],al
 974:	12 00                	adc    al,BYTE PTR [rax]
	...
 986:	00 00                	add    BYTE PTR [rax],al
 988:	f6 01 00             	test   BYTE PTR [rcx],0x0
 98b:	00 12                	add    BYTE PTR [rdx],dl
	...
 99d:	00 00                	add    BYTE PTR [rax],al
 99f:	00 87 01 00 00 12    	add    BYTE PTR [rdi+0x12000001],al
	...
 9b5:	00 00                	add    BYTE PTR [rax],al
 9b7:	00 7a 00             	add    BYTE PTR [rdx+0x0],bh
 9ba:	00 00                	add    BYTE PTR [rax],al
 9bc:	12 00                	adc    al,BYTE PTR [rax]
	...
 9ce:	00 00                	add    BYTE PTR [rax],al
 9d0:	c3                   	ret    
 9d1:	01 00                	add    DWORD PTR [rax],eax
 9d3:	00 12                	add    BYTE PTR [rdx],dl
	...
 9e5:	00 00                	add    BYTE PTR [rax],al
 9e7:	00 d6                	add    dh,dl
 9e9:	01 00                	add    DWORD PTR [rax],eax
 9eb:	00 12                	add    BYTE PTR [rdx],dl
	...
 a01:	02 00                	add    al,BYTE PTR [rax]
 a03:	00 12                	add    BYTE PTR [rdx],dl
	...
 a15:	00 00                	add    BYTE PTR [rax],al
 a17:	00 7e 02             	add    BYTE PTR [rsi+0x2],bh
 a1a:	00 00                	add    BYTE PTR [rax],al
 a1c:	12 00                	adc    al,BYTE PTR [rax]
	...
 a2e:	00 00                	add    BYTE PTR [rax],al
 a30:	57                   	push   rdi
 a31:	02 00                	add    al,BYTE PTR [rax]
 a33:	00 12                	add    BYTE PTR [rdx],dl
	...
 a45:	00 00                	add    BYTE PTR [rax],al
 a47:	00 fc                	add    ah,bh
 a49:	00 00                	add    BYTE PTR [rax],al
 a4b:	00 12                	add    BYTE PTR [rdx],dl
	...
 a5d:	00 00                	add    BYTE PTR [rax],al
 a5f:	00 bd 00 00 00 12    	add    BYTE PTR [rbp+0x12000000],bh
	...
 a75:	00 00                	add    BYTE PTR [rax],al
 a77:	00 01                	add    BYTE PTR [rcx],al
 a79:	00 00                	add    BYTE PTR [rax],al
 a7b:	00 20                	add    BYTE PTR [rax],ah
	...
 a8d:	00 00                	add    BYTE PTR [rax],al
 a8f:	00 9d 02 00 00 12    	add    BYTE PTR [rbp+0x12000002],bl
	...
 aa5:	00 00                	add    BYTE PTR [rax],al
 aa7:	00 c9                	add    cl,cl
 aa9:	02 00                	add    al,BYTE PTR [rax]
 aab:	00 12                	add    BYTE PTR [rdx],dl
	...
 abd:	00 00                	add    BYTE PTR [rax],al
 abf:	00 33                	add    BYTE PTR [rbx],dh
 ac1:	02 00                	add    al,BYTE PTR [rax]
 ac3:	00 12                	add    BYTE PTR [rdx],dl
	...
 ad5:	00 00                	add    BYTE PTR [rax],al
 ad7:	00 4f 01             	add    BYTE PTR [rdi+0x1],cl
 ada:	00 00                	add    BYTE PTR [rax],al
 adc:	12 00                	adc    al,BYTE PTR [rax]
	...
 aee:	00 00                	add    BYTE PTR [rax],al
 af0:	1d 00 00 00 20       	sbb    eax,0x20000000
	...
 b05:	00 00                	add    BYTE PTR [rax],al
 b07:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 b0a:	00 00                	add    BYTE PTR [rax],al
 b0c:	20 00                	and    BYTE PTR [rax],al
	...
 b1e:	00 00                	add    BYTE PTR [rax],al
 b20:	b7 00                	mov    bh,0x0
 b22:	00 00                	add    BYTE PTR [rax],al
 b24:	12 00                	adc    al,BYTE PTR [rax]
	...
 b36:	00 00                	add    BYTE PTR [rax],al
 b38:	3a 01                	cmp    al,BYTE PTR [rcx]
 b3a:	00 00                	add    BYTE PTR [rax],al
 b3c:	22 00                	and    al,BYTE PTR [rax]
	...
 b4e:	00 00                	add    BYTE PTR [rax],al
 b50:	15 02 00 00 11       	adc    eax,0x11000002
 b55:	00 1b                	add    BYTE PTR [rbx],bl
 b57:	00 60 20             	add    BYTE PTR [rax+0x20],ah
 b5a:	01 00                	add    DWORD PTR [rax],eax
 b5c:	00 00                	add    BYTE PTR [rax],al
 b5e:	00 00                	add    BYTE PTR [rax],al
 b60:	08 00                	or     BYTE PTR [rax],al
 b62:	00 00                	add    BYTE PTR [rax],al
 b64:	00 00                	add    BYTE PTR [rax],al
 b66:	00 00                	add    BYTE PTR [rax],al
 b68:	24 02                	and    al,0x2
 b6a:	00 00                	add    BYTE PTR [rax],al
 b6c:	12 00                	adc    al,BYTE PTR [rax]
 b6e:	10 00                	adc    BYTE PTR [rax],al
 b70:	b4 ab                	mov    ah,0xab
 b72:	00 00                	add    BYTE PTR [rax],al
 b74:	00 00                	add    BYTE PTR [rax],al
 b76:	00 00                	add    BYTE PTR [rax],al
 b78:	3a 01                	cmp    al,BYTE PTR [rcx]
 b7a:	00 00                	add    BYTE PTR [rax],al
 b7c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynstr:

0000000000000b80 <.dynstr>:
 b80:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 b83:	54                   	push   rsp
 b84:	4d 5f                	rex.WRB pop r15
 b86:	64 65 72 65          	fs gs jb bef <message_buffer+0x76f>
 b8a:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 b91:	4d 
 b92:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 b94:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b95:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b96:	65 54                	gs push rsp
 b98:	61                   	(bad)  
 b99:	62                   	(bad)  
 b9a:	6c                   	ins    BYTE PTR es:[rdi],dx
 b9b:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
 b9f:	67 6d                	ins    DWORD PTR es:[edi],dx
 ba1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 ba2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 ba3:	5f                   	pop    rdi
 ba4:	73 74                	jae    c1a <message_buffer+0x79a>
 ba6:	61                   	(bad)  
 ba7:	72 74                	jb     c1d <message_buffer+0x79d>
 ba9:	5f                   	pop    rdi
 baa:	5f                   	pop    rdi
 bab:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 bae:	54                   	push   rsp
 baf:	4d 5f                	rex.WRB pop r15
 bb1:	72 65                	jb     c18 <message_buffer+0x798>
 bb3:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 bba:	4d 
 bbb:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 bbd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bbe:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 bbf:	65 54                	gs push rsp
 bc1:	61                   	(bad)  
 bc2:	62                   	(bad)  
 bc3:	6c                   	ins    BYTE PTR es:[rdi],dx
 bc4:	65 00 70 63          	add    BYTE PTR gs:[rax+0x63],dh
 bc8:	61                   	(bad)  
 bc9:	70 5f                	jo     c2a <message_buffer+0x7aa>
 bcb:	6c                   	ins    BYTE PTR es:[rdi],dx
 bcc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bcd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bce:	70 00                	jo     bd0 <message_buffer+0x750>
 bd0:	70 63                	jo     c35 <message_buffer+0x7b5>
 bd2:	61                   	(bad)  
 bd3:	70 5f                	jo     c34 <message_buffer+0x7b4>
 bd5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bd6:	70 65                	jo     c3d <message_buffer+0x7bd>
 bd8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 bd9:	5f                   	pop    rdi
 bda:	6c                   	ins    BYTE PTR es:[rdi],dx
 bdb:	69 76 65 00 53 48 41 	imul   esi,DWORD PTR [rsi+0x65],0x41485300
 be2:	35 31 32 5f 46       	xor    eax,0x465f3231
 be7:	69 6e 61 6c 00 53 48 	imul   ebp,DWORD PTR [rsi+0x61],0x4853006c
 bee:	41 35 31 32 5f 55    	rex.B xor eax,0x555f3231
 bf4:	70 64                	jo     c5a <message_buffer+0x7da>
 bf6:	61                   	(bad)  
 bf7:	74 65                	je     c5e <message_buffer+0x7de>
 bf9:	00 53 48             	add    BYTE PTR [rbx+0x48],dl
 bfc:	41 35 31 32 5f 49    	rex.B xor eax,0x495f3231
 c02:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c03:	69 74 00 73 71 6c 69 	imul   esi,DWORD PTR [rax+rax*1+0x73],0x74696c71
 c0a:	74 
 c0b:	65 33 5f 65          	xor    ebx,DWORD PTR gs:[rdi+0x65]
 c0f:	72 72                	jb     c83 <message_buffer+0x803>
 c11:	6d                   	ins    DWORD PTR es:[rdi],dx
 c12:	73 67                	jae    c7b <message_buffer+0x7fb>
 c14:	00 73 71             	add    BYTE PTR [rbx+0x71],dh
 c17:	6c                   	ins    BYTE PTR es:[rdi],dx
 c18:	69 74 65 33 5f 66 72 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6572665f
 c1f:	65 
 c20:	65 00 73 71          	add    BYTE PTR gs:[rbx+0x71],dh
 c24:	6c                   	ins    BYTE PTR es:[rdi],dx
 c25:	69 74 65 33 5f 65 78 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6578655f
 c2c:	65 
 c2d:	63 00                	movsxd eax,DWORD PTR [rax]
 c2f:	73 71                	jae    ca2 <message_buffer+0x822>
 c31:	6c                   	ins    BYTE PTR es:[rdi],dx
 c32:	69 74 65 33 5f 63 6c 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6f6c635f
 c39:	6f 
 c3a:	73 65                	jae    ca1 <message_buffer+0x821>
 c3c:	00 73 71             	add    BYTE PTR [rbx+0x71],dh
 c3f:	6c                   	ins    BYTE PTR es:[rdi],dx
 c40:	69 74 65 33 5f 6f 70 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x65706f5f
 c47:	65 
 c48:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c49:	00 6c 75 61          	add    BYTE PTR [rbp+rsi*2+0x61],ch
 c4d:	5f                   	pop    rdi
 c4e:	73 65                	jae    cb5 <message_buffer+0x835>
 c50:	74 74                	je     cc6 <message_buffer+0x846>
 c52:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c53:	70 00                	jo     c55 <message_buffer+0x7d5>
 c55:	6c                   	ins    BYTE PTR es:[rdi],dx
 c56:	75 61                	jne    cb9 <message_buffer+0x839>
 c58:	4c 5f                	rex.WR pop rdi
 c5a:	6c                   	ins    BYTE PTR es:[rdi],dx
 c5b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c5c:	61                   	(bad)  
 c5d:	64 66 69 6c 65 78 00 	imul   bp,WORD PTR fs:[rbp+riz*2+0x78],0x6c00
 c64:	6c 
 c65:	75 61                	jne    cc8 <message_buffer+0x848>
 c67:	4c 5f                	rex.WR pop rdi
 c69:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c6a:	65 77 73             	gs ja  ce0 <message_buffer+0x860>
 c6d:	74 61                	je     cd0 <message_buffer+0x850>
 c6f:	74 65                	je     cd6 <message_buffer+0x856>
 c71:	00 6c 75 61          	add    BYTE PTR [rbp+rsi*2+0x61],ch
 c75:	5f                   	pop    rdi
 c76:	63 6c 6f 73          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
 c7a:	65 00 6c 75 61       	add    BYTE PTR gs:[rbp+rsi*2+0x61],ch
 c7f:	5f                   	pop    rdi
 c80:	70 63                	jo     ce5 <message_buffer+0x865>
 c82:	61                   	(bad)  
 c83:	6c                   	ins    BYTE PTR es:[rdi],dx
 c84:	6c                   	ins    BYTE PTR es:[rdi],dx
 c85:	6b 00 6c             	imul   eax,DWORD PTR [rax],0x6c
 c88:	75 61                	jne    ceb <message_buffer+0x86b>
 c8a:	5f                   	pop    rdi
 c8b:	67 65 74 74          	addr32 gs je d03 <message_buffer+0x883>
 c8f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c90:	70 00                	jo     c92 <message_buffer+0x812>
 c92:	6c                   	ins    BYTE PTR es:[rdi],dx
 c93:	75 61                	jne    cf6 <message_buffer+0x876>
 c95:	4c 5f                	rex.WR pop rdi
 c97:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c98:	70 65                	jo     cff <message_buffer+0x87f>
 c9a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c9b:	6c                   	ins    BYTE PTR es:[rdi],dx
 c9c:	69 62 73 00 67 65 74 	imul   esp,DWORD PTR [rdx+0x73],0x74656700
 ca3:	6c                   	ins    BYTE PTR es:[rdi],dx
 ca4:	69 6e 65 00 69 6e 65 	imul   ebp,DWORD PTR [rsi+0x65],0x656e6900
 cab:	74 5f                	je     d0c <message_buffer+0x88c>
 cad:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 cae:	74 6f                	je     d1f <message_buffer+0x89f>
 cb0:	61                   	(bad)  
 cb1:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 cb4:	72 6e                	jb     d24 <message_buffer+0x8a4>
 cb6:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
 cb9:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 cbc:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
 cbf:	5f                   	pop    rdi
 cc0:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 cc6:	7a 65                	jp     d2d <message_buffer+0x8ad>
 cc8:	00 6e 74             	add    BYTE PTR [rsi+0x74],ch
 ccb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 ccc:	68 6c 00 6e 74       	push   0x746e006c
 cd1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 cd2:	68 73 00 72 65       	push   0x65720073
 cd7:	61                   	(bad)  
 cd8:	64 00 73 74          	add    BYTE PTR fs:[rbx+0x74],dh
 cdc:	72 63                	jb     d41 <message_buffer+0x8c1>
 cde:	68 72 00 6c 6f       	push   0x6f6c0072
 ce3:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
 ce6:	74 69                	je     d51 <message_buffer+0x8d1>
 ce8:	6d                   	ins    DWORD PTR es:[rdi],dx
 ce9:	65 00 6d 61          	add    BYTE PTR gs:[rbp+0x61],ch
 ced:	6c                   	ins    BYTE PTR es:[rdi],dx
 cee:	6c                   	ins    BYTE PTR es:[rdi],dx
 cef:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 cf0:	63 00                	movsxd eax,DWORD PTR [rax]
 cf2:	70 74                	jo     d68 <message_buffer+0x8e8>
 cf4:	68 72 65 61 64       	push   0x64616572
 cf9:	5f                   	pop    rdi
 cfa:	6a 6f                	push   0x6f
 cfc:	69 6e 00 73 74 72 63 	imul   ebp,DWORD PTR [rsi+0x0],0x63727473
 d03:	73 70                	jae    d75 <message_buffer+0x8f5>
 d05:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d06:	00 62 61             	add    BYTE PTR [rdx+0x61],ah
 d09:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
 d0c:	72 61                	jb     d6f <message_buffer+0x8ef>
 d0e:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
 d11:	73 79                	jae    d8c <message_buffer+0x90c>
 d13:	6d                   	ins    DWORD PTR es:[rdi],dx
 d14:	62                   	(bad)  
 d15:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d16:	6c                   	ins    BYTE PTR es:[rdi],dx
 d17:	73 00                	jae    d19 <message_buffer+0x899>
 d19:	72 65                	jb     d80 <message_buffer+0x900>
 d1b:	67 63 6f 6d          	movsxd ebp,DWORD PTR [edi+0x6d]
 d1f:	70 00                	jo     d21 <message_buffer+0x8a1>
 d21:	5f                   	pop    rdi
 d22:	5f                   	pop    rdi
 d23:	6c                   	ins    BYTE PTR es:[rdi],dx
 d24:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 d2b:	72 74                	jb     da1 <message_buffer+0x921>
 d2d:	5f                   	pop    rdi
 d2e:	6d                   	ins    DWORD PTR es:[rdi],dx
 d2f:	61                   	(bad)  
 d30:	69 6e 00 73 74 72 63 	imul   ebp,DWORD PTR [rsi+0x0],0x63727473
 d37:	6d                   	ins    DWORD PTR es:[rdi],dx
 d38:	70 00                	jo     d3a <message_buffer+0x8ba>
 d3a:	66 70 72             	data16 jo daf <message_buffer+0x92f>
 d3d:	69 6e 74 66 00 66 70 	imul   ebp,DWORD PTR [rsi+0x74],0x70660066
 d44:	75 74                	jne    dba <message_buffer+0x93a>
 d46:	73 00                	jae    d48 <message_buffer+0x8c8>
 d48:	73 6f                	jae    db9 <message_buffer+0x939>
 d4a:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
 d4d:	74 00                	je     d4f <message_buffer+0x8cf>
 d4f:	73 69                	jae    dba <message_buffer+0x93a>
 d51:	67 6e                	outs   dx,BYTE PTR ds:[esi]
 d53:	61                   	(bad)  
 d54:	6c                   	ins    BYTE PTR es:[rdi],dx
 d55:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
 d58:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d59:	69 00 66 6f 70 65    	imul   eax,DWORD PTR [rax],0x65706f66
 d5f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d60:	00 67 65             	add    BYTE PTR [rdi+0x65],ah
 d63:	74 6f                	je     dd4 <message_buffer+0x954>
 d65:	70 74                	jo     ddb <message_buffer+0x95b>
 d67:	00 66 63             	add    BYTE PTR [rsi+0x63],ah
 d6a:	6c                   	ins    BYTE PTR es:[rdi],dx
 d6b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d6c:	73 65                	jae    dd3 <message_buffer+0x953>
 d6e:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 d71:	72 63                	jb     dd6 <message_buffer+0x956>
 d73:	70 79                	jo     dee <message_buffer+0x96e>
 d75:	00 62 61             	add    BYTE PTR [rdx+0x61],ah
 d78:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
 d7b:	72 61                	jb     dde <message_buffer+0x95e>
 d7d:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
 d80:	73 74                	jae    df6 <message_buffer+0x976>
 d82:	72 74                	jb     df8 <message_buffer+0x978>
 d84:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d85:	6b 00 73             	imul   eax,DWORD PTR [rax],0x73
 d88:	74 72                	je     dfc <message_buffer+0x97c>
 d8a:	74 6f                	je     dfb <message_buffer+0x97b>
 d8c:	6c                   	ins    BYTE PTR es:[rdi],dx
 d8d:	00 6d 65             	add    BYTE PTR [rbp+0x65],ch
 d90:	6d                   	ins    DWORD PTR es:[rdi],dx
 d91:	73 65                	jae    df8 <message_buffer+0x978>
 d93:	74 00                	je     d95 <message_buffer+0x915>
 d95:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d96:	70 74                	jo     e0c <message_buffer+0x98c>
 d98:	61                   	(bad)  
 d99:	72 67                	jb     e02 <message_buffer+0x982>
 d9b:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 d9e:	72 6e                	jb     e0e <message_buffer+0x98e>
 da0:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
 da3:	00 69 73             	add    BYTE PTR [rcx+0x73],ch
 da6:	64 69 67 69 74 00 73 	imul   esp,DWORD PTR fs:[rdi+0x69],0x74730074
 dad:	74 
 dae:	72 73                	jb     e23 <message_buffer+0x9a3>
 db0:	74 72                	je     e24 <message_buffer+0x9a4>
 db2:	00 70 74             	add    BYTE PTR [rax+0x74],dh
 db5:	68 72 65 61 64       	push   0x64616572
 dba:	5f                   	pop    rdi
 dbb:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
 dbe:	61                   	(bad)  
 dbf:	74 65                	je     e26 <message_buffer+0x9a6>
 dc1:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 dc4:	72 6e                	jb     e34 <message_buffer+0x9b4>
 dc6:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
 dc9:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 dcc:	72 6c                	jb     e3a <message_buffer+0x9ba>
 dce:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 dd0:	00 73 6c             	add    BYTE PTR [rbx+0x6c],dh
 dd3:	65 65 70 00          	gs gs jo dd7 <message_buffer+0x957>
 dd7:	67 65 74 64          	addr32 gs je e3f <message_buffer+0x9bf>
 ddb:	65 6c                	gs ins BYTE PTR es:[rdi],dx
 ddd:	69 6d 00 73 65 6e 64 	imul   ebp,DWORD PTR [rbp+0x0],0x646e6573
 de4:	00 73 70             	add    BYTE PTR [rbx+0x70],dh
 de7:	72 69                	jb     e52 <message_buffer+0x9d2>
 de9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 dea:	74 66                	je     e52 <message_buffer+0x9d2>
 dec:	00 62 69             	add    BYTE PTR [rdx+0x69],ah
 def:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 df0:	64 00 68 74          	add    BYTE PTR fs:[rax+0x74],ch
 df4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 df5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 df6:	6c                   	ins    BYTE PTR es:[rdi],dx
 df7:	00 68 74             	add    BYTE PTR [rax+0x74],ch
 dfa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 dfb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 dfc:	73 00                	jae    dfe <message_buffer+0x97e>
 dfe:	73 6e                	jae    e6e <message_buffer+0x9ee>
 e00:	70 72                	jo     e74 <message_buffer+0x9f4>
 e02:	69 6e 74 66 00 72 65 	imul   ebp,DWORD PTR [rsi+0x74],0x65720066
 e09:	67 65 78 65          	addr32 gs js e72 <message_buffer+0x9f2>
 e0d:	63 00                	movsxd eax,DWORD PTR [rax]
 e0f:	6c                   	ins    BYTE PTR es:[rdi],dx
 e10:	69 73 74 65 6e 00 70 	imul   esi,DWORD PTR [rbx+0x74],0x70006e65
 e17:	65 72 72             	gs jb  e8c <message_buffer+0xa0c>
 e1a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 e1b:	72 00                	jb     e1d <message_buffer+0x99d>
 e1d:	73 74                	jae    e93 <message_buffer+0xa13>
 e1f:	72 63                	jb     e84 <message_buffer+0xa04>
 e21:	61                   	(bad)  
 e22:	74 00                	je     e24 <message_buffer+0x9a4>
 e24:	61                   	(bad)  
 e25:	63 63 65             	movsxd esp,DWORD PTR [rbx+0x65]
 e28:	70 74                	jo     e9e <message_buffer+0xa1e>
 e2a:	00 70 75             	add    BYTE PTR [rax+0x75],dh
 e2d:	74 63                	je     e92 <message_buffer+0xa12>
 e2f:	68 61 72 00 65       	push   0x65007261
 e34:	78 69                	js     e9f <message_buffer+0xa1f>
 e36:	74 00                	je     e38 <message_buffer+0x9b8>
 e38:	5f                   	pop    rdi
 e39:	5f                   	pop    rdi
 e3a:	73 74                	jae    eb0 <message_buffer+0xa30>
 e3c:	61                   	(bad)  
 e3d:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 e40:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 e43:	5f                   	pop    rdi
 e44:	66 61                	data16 (bad) 
 e46:	69 6c 00 73 65 74 73 	imul   ebp,DWORD PTR [rax+rax*1+0x73],0x6f737465
 e4d:	6f 
 e4e:	63 6b 6f             	movsxd ebp,DWORD PTR [rbx+0x6f]
 e51:	70 74                	jo     ec7 <message_buffer+0xa47>
 e53:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 e57:	70 63                	jo     ebc <message_buffer+0xa3c>
 e59:	61                   	(bad)  
 e5a:	70 2e                	jo     e8a <message_buffer+0xa0a>
 e5c:	73 6f                	jae    ecd <message_buffer+0xa4d>
 e5e:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
 e61:	38 00                	cmp    BYTE PTR [rax],al
 e63:	6c                   	ins    BYTE PTR es:[rdi],dx
 e64:	69 62 63 72 79 70 74 	imul   esp,DWORD PTR [rdx+0x63],0x74707972
 e6b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 e6c:	2e 73 6f             	cs jae ede <message_buffer+0xa5e>
 e6f:	2e 31 2e             	cs xor DWORD PTR [rsi],ebp
 e72:	31 00                	xor    DWORD PTR [rax],eax
 e74:	6c                   	ins    BYTE PTR es:[rdi],dx
 e75:	69 62 73 71 6c 69 74 	imul   esp,DWORD PTR [rdx+0x73],0x74696c71
 e7c:	65 33 2e             	xor    ebp,DWORD PTR gs:[rsi]
 e7f:	73 6f                	jae    ef0 <message_buffer+0xa70>
 e81:	2e 30 00             	cs xor BYTE PTR [rax],al
 e84:	6c                   	ins    BYTE PTR es:[rdi],dx
 e85:	69 62 6c 75 61 35 2e 	imul   esp,DWORD PTR [rdx+0x6c],0x2e356175
 e8c:	33 2e                	xor    ebp,DWORD PTR [rsi]
 e8e:	73 6f                	jae    eff <message_buffer+0xa7f>
 e90:	2e 30 00             	cs xor BYTE PTR [rax],al
 e93:	6c                   	ins    BYTE PTR es:[rdi],dx
 e94:	69 62 63 2e 73 6f 2e 	imul   esp,DWORD PTR [rdx+0x63],0x2e6f732e
 e9b:	36 00 4c 55 41       	ss add BYTE PTR [rbp+rdx*2+0x41],cl
 ea0:	5f                   	pop    rdi
 ea1:	35 2e 33 00 4f       	xor    eax,0x4f00332e
 ea6:	50                   	push   rax
 ea7:	45                   	rex.RB
 ea8:	4e 53                	rex.WRX push rbx
 eaa:	53                   	push   rbx
 eab:	4c 5f                	rex.WR pop rdi
 ead:	31 5f 31             	xor    DWORD PTR [rdi+0x31],ebx
 eb0:	5f                   	pop    rdi
 eb1:	30 00                	xor    BYTE PTR [rax],al
 eb3:	47                   	rex.RXB
 eb4:	4c                   	rex.WR
 eb5:	49                   	rex.WB
 eb6:	42                   	rex.X
 eb7:	43 5f                	rex.XB pop r15
 eb9:	32 2e                	xor    ch,BYTE PTR [rsi]
 ebb:	33 2e                	xor    ebp,DWORD PTR [rsi]
 ebd:	34 00                	xor    al,0x0
 ebf:	47                   	rex.RXB
 ec0:	4c                   	rex.WR
 ec1:	49                   	rex.WB
 ec2:	42                   	rex.X
 ec3:	43 5f                	rex.XB pop r15
 ec5:	32 2e                	xor    ch,BYTE PTR [rsi]
 ec7:	34 00                	xor    al,0x0
 ec9:	47                   	rex.RXB
 eca:	4c                   	rex.WR
 ecb:	49                   	rex.WB
 ecc:	42                   	rex.X
 ecd:	43 5f                	rex.XB pop r15
 ecf:	32 2e                	xor    ch,BYTE PTR [rsi]
 ed1:	33 34 00             	xor    esi,DWORD PTR [rax+rax*1]
 ed4:	47                   	rex.RXB
 ed5:	4c                   	rex.WR
 ed6:	49                   	rex.WB
 ed7:	42                   	rex.X
 ed8:	43 5f                	rex.XB pop r15
 eda:	32 2e                	xor    ch,BYTE PTR [rsi]
 edc:	32 2e                	xor    ch,BYTE PTR [rsi]
 ede:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

0000000000000ee0 <.gnu.version>:
 ee0:	00 00                	add    BYTE PTR [rax],al
 ee2:	00 00                	add    BYTE PTR [rax],al
 ee4:	02 00                	add    al,BYTE PTR [rax]
 ee6:	02 00                	add    al,BYTE PTR [rax]
 ee8:	02 00                	add    al,BYTE PTR [rax]
 eea:	02 00                	add    al,BYTE PTR [rax]
 eec:	02 00                	add    al,BYTE PTR [rax]
 eee:	02 00                	add    al,BYTE PTR [rax]
 ef0:	03 00                	add    eax,DWORD PTR [rax]
 ef2:	02 00                	add    al,BYTE PTR [rax]
 ef4:	02 00                	add    al,BYTE PTR [rax]
 ef6:	02 00                	add    al,BYTE PTR [rax]
 ef8:	04 00                	add    al,0x0
 efa:	02 00                	add    al,BYTE PTR [rax]
 efc:	00 00                	add    BYTE PTR [rax],al
 efe:	03 00                	add    eax,DWORD PTR [rax]
 f00:	02 00                	add    al,BYTE PTR [rax]
 f02:	02 00                	add    al,BYTE PTR [rax]
 f04:	02 00                	add    al,BYTE PTR [rax]
 f06:	02 00                	add    al,BYTE PTR [rax]
 f08:	00 00                	add    BYTE PTR [rax],al
 f0a:	02 00                	add    al,BYTE PTR [rax]
 f0c:	04 00                	add    al,0x0
 f0e:	02 00                	add    al,BYTE PTR [rax]
 f10:	02 00                	add    al,BYTE PTR [rax]
 f12:	02 00                	add    al,BYTE PTR [rax]
 f14:	05 00 02 00 02       	add    eax,0x2000200
 f19:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 f1c:	02 00                	add    al,BYTE PTR [rax]
 f1e:	05 00 02 00 02       	add    eax,0x2000200
 f23:	00 00                	add    BYTE PTR [rax],al
 f25:	00 02                	add    BYTE PTR [rdx],al
 f27:	00 06                	add    BYTE PTR [rsi],al
 f29:	00 02                	add    BYTE PTR [rdx],al
 f2b:	00 02                	add    BYTE PTR [rdx],al
 f2d:	00 02                	add    BYTE PTR [rdx],al
 f2f:	00 02                	add    BYTE PTR [rdx],al
 f31:	00 02                	add    BYTE PTR [rdx],al
 f33:	00 02                	add    BYTE PTR [rdx],al
 f35:	00 02                	add    BYTE PTR [rdx],al
 f37:	00 07                	add    BYTE PTR [rdi],al
 f39:	00 00                	add    BYTE PTR [rax],al
 f3b:	00 02                	add    BYTE PTR [rdx],al
 f3d:	00 02                	add    BYTE PTR [rdx],al
 f3f:	00 02                	add    BYTE PTR [rdx],al
 f41:	00 00                	add    BYTE PTR [rax],al
 f43:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 f46:	04 00                	add    al,0x0
 f48:	02 00                	add    al,BYTE PTR [rax]
 f4a:	02 00                	add    al,BYTE PTR [rax]
 f4c:	02 00                	add    al,BYTE PTR [rax]
 f4e:	04 00                	add    al,0x0
 f50:	02 00                	add    al,BYTE PTR [rax]
 f52:	02 00                	add    al,BYTE PTR [rax]
 f54:	02 00                	add    al,BYTE PTR [rax]
 f56:	02 00                	add    al,BYTE PTR [rax]
 f58:	03 00                	add    eax,DWORD PTR [rax]
 f5a:	02 00                	add    al,BYTE PTR [rax]
 f5c:	02 00                	add    al,BYTE PTR [rax]
 f5e:	02 00                	add    al,BYTE PTR [rax]
 f60:	02 00                	add    al,BYTE PTR [rax]
 f62:	02 00                	add    al,BYTE PTR [rax]
 f64:	04 00                	add    al,0x0
 f66:	00 00                	add    BYTE PTR [rax],al
 f68:	00 00                	add    BYTE PTR [rax],al
 f6a:	02 00                	add    al,BYTE PTR [rax]
 f6c:	02 00                	add    al,BYTE PTR [rax]
 f6e:	05 00 02 00 00       	add    eax,0x200
 f73:	00 00                	add    BYTE PTR [rax],al
 f75:	00 02                	add    BYTE PTR [rdx],al
 f77:	00 02                	add    BYTE PTR [rdx],al
 f79:	00 02                	add    BYTE PTR [rdx],al
 f7b:	00 01                	add    BYTE PTR [rcx],al
	...

Disassembly of section .gnu.version_r:

0000000000000f80 <.gnu.version_r>:
     f80:	01 00                	add    DWORD PTR [rax],eax
     f82:	01 00                	add    DWORD PTR [rax],eax
     f84:	04 03                	add    al,0x3
     f86:	00 00                	add    BYTE PTR [rax],al
     f88:	10 00                	adc    BYTE PTR [rax],al
     f8a:	00 00                	add    BYTE PTR [rax],al
     f8c:	20 00                	and    BYTE PTR [rax],al
     f8e:	00 00                	add    BYTE PTR [rax],al
     f90:	43 28 97 01 00 00 04 	rex.XB sub BYTE PTR [r15+0x4000001],dl
     f97:	00 1d 03 00 00 00    	add    BYTE PTR [rip+0x3],bl        # fa0 <message_buffer+0xb20>
     f9d:	00 00                	add    BYTE PTR [rax],al
     f9f:	00 01                	add    BYTE PTR [rcx],al
     fa1:	00 01                	add    BYTE PTR [rcx],al
     fa3:	00 e3                	add    bl,ah
     fa5:	02 00                	add    al,BYTE PTR [rax]
     fa7:	00 10                	add    BYTE PTR [rax],dl
     fa9:	00 00                	add    BYTE PTR [rax],al
     fab:	00 20                	add    BYTE PTR [rax],ah
     fad:	00 00                	add    BYTE PTR [rax],al
     faf:	00 10                	add    BYTE PTR [rax],dl
     fb1:	1f                   	(bad)  
     fb2:	6d                   	ins    DWORD PTR es:[rdi],dx
     fb3:	06                   	(bad)  
     fb4:	00 00                	add    BYTE PTR [rax],al
     fb6:	03 00                	add    eax,DWORD PTR [rax]
     fb8:	25 03 00 00 00       	and    eax,0x3
     fbd:	00 00                	add    BYTE PTR [rax],al
     fbf:	00 01                	add    BYTE PTR [rcx],al
     fc1:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     fc4:	13 03                	adc    eax,DWORD PTR [rbx]
     fc6:	00 00                	add    BYTE PTR [rax],al
     fc8:	10 00                	adc    BYTE PTR [rax],al
     fca:	00 00                	add    BYTE PTR [rax],al
     fcc:	00 00                	add    BYTE PTR [rax],al
     fce:	00 00                	add    BYTE PTR [rax],al
     fd0:	74 19                	je     feb <message_buffer+0xb6b>
     fd2:	69 09 00 00 07 00    	imul   ecx,DWORD PTR [rcx],0x70000
     fd8:	33 03                	xor    eax,DWORD PTR [rbx]
     fda:	00 00                	add    BYTE PTR [rax],al
     fdc:	10 00                	adc    BYTE PTR [rax],al
     fde:	00 00                	add    BYTE PTR [rax],al
     fe0:	14 69                	adc    al,0x69
     fe2:	69 0d 00 00 06 00 3f 	imul   ecx,DWORD PTR [rip+0x60000],0x33f        # 60fec <rules+0x4ed0c>
     fe9:	03 00 00 
     fec:	10 00                	adc    BYTE PTR [rax],al
     fee:	00 00                	add    BYTE PTR [rax],al
     ff0:	b4 91                	mov    ah,0x91
     ff2:	96                   	xchg   esi,eax
     ff3:	06                   	(bad)  
     ff4:	00 00                	add    BYTE PTR [rax],al
     ff6:	05 00 49 03 00       	add    eax,0x34900
     ffb:	00 10                	add    BYTE PTR [rax],dl
     ffd:	00 00                	add    BYTE PTR [rax],al
     fff:	00 75 1a             	add    BYTE PTR [rbp+0x1a],dh
    1002:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
    1008:	54                   	push   rsp
    1009:	03 00                	add    eax,DWORD PTR [rax]
    100b:	00 00                	add    BYTE PTR [rax],al
    100d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000001010 <.rela.dyn>:
    1010:	48 1b 01             	sbb    rax,QWORD PTR [rcx]
    1013:	00 00                	add    BYTE PTR [rax],al
    1015:	00 00                	add    BYTE PTR [rax],al
    1017:	00 08                	add    BYTE PTR [rax],cl
	...
    1021:	2a 00                	sub    al,BYTE PTR [rax]
    1023:	00 00                	add    BYTE PTR [rax],al
    1025:	00 00                	add    BYTE PTR [rax],al
    1027:	00 50 1b             	add    BYTE PTR [rax+0x1b],dl
    102a:	01 00                	add    DWORD PTR [rax],eax
    102c:	00 00                	add    BYTE PTR [rax],al
    102e:	00 00                	add    BYTE PTR [rax],al
    1030:	08 00                	or     BYTE PTR [rax],al
    1032:	00 00                	add    BYTE PTR [rax],al
    1034:	00 00                	add    BYTE PTR [rax],al
    1036:	00 00                	add    BYTE PTR [rax],al
    1038:	c0 29 00             	shr    BYTE PTR [rcx],0x0
    103b:	00 00                	add    BYTE PTR [rax],al
    103d:	00 00                	add    BYTE PTR [rax],al
    103f:	00 08                	add    BYTE PTR [rax],cl
    1041:	20 01                	and    BYTE PTR [rcx],al
    1043:	00 00                	add    BYTE PTR [rax],al
    1045:	00 00                	add    BYTE PTR [rax],al
    1047:	00 08                	add    BYTE PTR [rax],cl
    1049:	00 00                	add    BYTE PTR [rax],al
    104b:	00 00                	add    BYTE PTR [rax],al
    104d:	00 00                	add    BYTE PTR [rax],al
    104f:	00 08                	add    BYTE PTR [rax],cl
    1051:	20 01                	and    BYTE PTR [rcx],al
    1053:	00 00                	add    BYTE PTR [rax],al
    1055:	00 00                	add    BYTE PTR [rax],al
    1057:	00 30                	add    BYTE PTR [rax],dh
    1059:	20 01                	and    BYTE PTR [rcx],al
    105b:	00 00                	add    BYTE PTR [rax],al
    105d:	00 00                	add    BYTE PTR [rax],al
    105f:	00 08                	add    BYTE PTR [rax],cl
    1061:	00 00                	add    BYTE PTR [rax],al
    1063:	00 00                	add    BYTE PTR [rax],al
    1065:	00 00                	add    BYTE PTR [rax],al
    1067:	00 04 d0             	add    BYTE PTR [rax+rdx*8],al
    106a:	00 00                	add    BYTE PTR [rax],al
    106c:	00 00                	add    BYTE PTR [rax],al
    106e:	00 00                	add    BYTE PTR [rax],al
    1070:	38 20                	cmp    BYTE PTR [rax],ah
    1072:	01 00                	add    DWORD PTR [rax],eax
    1074:	00 00                	add    BYTE PTR [rax],al
    1076:	00 00                	add    BYTE PTR [rax],al
    1078:	08 00                	or     BYTE PTR [rax],al
    107a:	00 00                	add    BYTE PTR [rax],al
    107c:	00 00                	add    BYTE PTR [rax],al
    107e:	00 00                	add    BYTE PTR [rax],al
    1080:	1a d0                	sbb    dl,al
    1082:	00 00                	add    BYTE PTR [rax],al
    1084:	00 00                	add    BYTE PTR [rax],al
    1086:	00 00                	add    BYTE PTR [rax],al
    1088:	40 20 01             	rex and BYTE PTR [rcx],al
    108b:	00 00                	add    BYTE PTR [rax],al
    108d:	00 00                	add    BYTE PTR [rax],al
    108f:	00 08                	add    BYTE PTR [rax],cl
    1091:	00 00                	add    BYTE PTR [rax],al
    1093:	00 00                	add    BYTE PTR [rax],al
    1095:	00 00                	add    BYTE PTR [rax],al
    1097:	00 34 d0             	add    BYTE PTR [rax+rdx*8],dh
    109a:	00 00                	add    BYTE PTR [rax],al
    109c:	00 00                	add    BYTE PTR [rax],al
    109e:	00 00                	add    BYTE PTR [rax],al
    10a0:	48 20 01             	rex.W and BYTE PTR [rcx],al
    10a3:	00 00                	add    BYTE PTR [rax],al
    10a5:	00 00                	add    BYTE PTR [rax],al
    10a7:	00 08                	add    BYTE PTR [rax],cl
    10a9:	00 00                	add    BYTE PTR [rax],al
    10ab:	00 00                	add    BYTE PTR [rax],al
    10ad:	00 00                	add    BYTE PTR [rax],al
    10af:	00 08                	add    BYTE PTR [rax],cl
    10b1:	e6 00                	out    0x0,al
    10b3:	00 00                	add    BYTE PTR [rax],al
    10b5:	00 00                	add    BYTE PTR [rax],al
    10b7:	00 50 20             	add    BYTE PTR [rax+0x20],dl
    10ba:	01 00                	add    DWORD PTR [rax],eax
    10bc:	00 00                	add    BYTE PTR [rax],al
    10be:	00 00                	add    BYTE PTR [rax],al
    10c0:	08 00                	or     BYTE PTR [rax],al
    10c2:	00 00                	add    BYTE PTR [rax],al
    10c4:	00 00                	add    BYTE PTR [rax],al
    10c6:	00 00                	add    BYTE PTR [rax],al
    10c8:	e0 e6                	loopne 10b0 <message_buffer+0xc30>
    10ca:	00 00                	add    BYTE PTR [rax],al
    10cc:	00 00                	add    BYTE PTR [rax],al
    10ce:	00 00                	add    BYTE PTR [rax],al
    10d0:	d8 1f                	fcomp  DWORD PTR [rdi]
    10d2:	01 00                	add    DWORD PTR [rax],eax
    10d4:	00 00                	add    BYTE PTR [rax],al
    10d6:	00 00                	add    BYTE PTR [rax],al
    10d8:	06                   	(bad)  
    10d9:	00 00                	add    BYTE PTR [rax],al
    10db:	00 4c 00 00          	add    BYTE PTR [rax+rax*1+0x0],cl
	...
    10e7:	00 e0                	add    al,ah
    10e9:	1f                   	(bad)  
    10ea:	01 00                	add    DWORD PTR [rax],eax
    10ec:	00 00                	add    BYTE PTR [rax],al
    10ee:	00 00                	add    BYTE PTR [rax],al
    10f0:	06                   	(bad)  
    10f1:	00 00                	add    BYTE PTR [rax],al
    10f3:	00 1a                	add    BYTE PTR [rdx],bl
	...
    10fd:	00 00                	add    BYTE PTR [rax],al
    10ff:	00 e8                	add    al,ch
    1101:	1f                   	(bad)  
    1102:	01 00                	add    DWORD PTR [rax],eax
    1104:	00 00                	add    BYTE PTR [rax],al
    1106:	00 00                	add    BYTE PTR [rax],al
    1108:	06                   	(bad)  
    1109:	00 00                	add    BYTE PTR [rax],al
    110b:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
	...
    1117:	00 f0                	add    al,dh
    1119:	1f                   	(bad)  
    111a:	01 00                	add    DWORD PTR [rax],eax
    111c:	00 00                	add    BYTE PTR [rax],al
    111e:	00 00                	add    BYTE PTR [rax],al
    1120:	06                   	(bad)  
    1121:	00 00                	add    BYTE PTR [rax],al
    1123:	00 49 00             	add    BYTE PTR [rcx+0x0],cl
	...
    112e:	00 00                	add    BYTE PTR [rax],al
    1130:	f8                   	clc    
    1131:	1f                   	(bad)  
    1132:	01 00                	add    DWORD PTR [rax],eax
    1134:	00 00                	add    BYTE PTR [rax],al
    1136:	00 00                	add    BYTE PTR [rax],al
    1138:	06                   	(bad)  
    1139:	00 00                	add    BYTE PTR [rax],al
    113b:	00 4a 00             	add    BYTE PTR [rdx+0x0],cl
	...
    1146:	00 00                	add    BYTE PTR [rax],al
    1148:	60                   	(bad)  
    1149:	20 01                	and    BYTE PTR [rcx],al
    114b:	00 00                	add    BYTE PTR [rax],al
    114d:	00 00                	add    BYTE PTR [rax],al
    114f:	00 05 00 00 00 4d    	add    BYTE PTR [rip+0x4d000000],al        # 4d001155 <_end+0x4cec494d>
	...

Disassembly of section .rela.plt:

0000000000001160 <.rela.plt>:
    1160:	a0 1d 01 00 00 00 00 	movabs al,ds:0x70000000000011d
    1167:	00 07 
    1169:	00 00                	add    BYTE PTR [rax],al
    116b:	00 01                	add    BYTE PTR [rcx],al
	...
    1175:	00 00                	add    BYTE PTR [rax],al
    1177:	00 a8 1d 01 00 00    	add    BYTE PTR [rax+0x11d],ch
    117d:	00 00                	add    BYTE PTR [rax],al
    117f:	00 07                	add    BYTE PTR [rdi],al
    1181:	00 00                	add    BYTE PTR [rax],al
    1183:	00 02                	add    BYTE PTR [rdx],al
	...
    118d:	00 00                	add    BYTE PTR [rax],al
    118f:	00 b0 1d 01 00 00    	add    BYTE PTR [rax+0x11d],dh
    1195:	00 00                	add    BYTE PTR [rax],al
    1197:	00 07                	add    BYTE PTR [rdi],al
    1199:	00 00                	add    BYTE PTR [rax],al
    119b:	00 03                	add    BYTE PTR [rbx],al
	...
    11a5:	00 00                	add    BYTE PTR [rax],al
    11a7:	00 b8 1d 01 00 00    	add    BYTE PTR [rax+0x11d],bh
    11ad:	00 00                	add    BYTE PTR [rax],al
    11af:	00 07                	add    BYTE PTR [rdi],al
    11b1:	00 00                	add    BYTE PTR [rax],al
    11b3:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
    11be:	00 00                	add    BYTE PTR [rax],al
    11c0:	c0 1d 01 00 00 00 00 	rcr    BYTE PTR [rip+0x1],0x0        # 11c8 <message_buffer+0xd48>
    11c7:	00 07                	add    BYTE PTR [rdi],al
    11c9:	00 00                	add    BYTE PTR [rax],al
    11cb:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 11d1 <message_buffer+0xd51>
    11d1:	00 00                	add    BYTE PTR [rax],al
    11d3:	00 00                	add    BYTE PTR [rax],al
    11d5:	00 00                	add    BYTE PTR [rax],al
    11d7:	00 c8                	add    al,cl
    11d9:	1d 01 00 00 00       	sbb    eax,0x1
    11de:	00 00                	add    BYTE PTR [rax],al
    11e0:	07                   	(bad)  
    11e1:	00 00                	add    BYTE PTR [rax],al
    11e3:	00 06                	add    BYTE PTR [rsi],al
	...
    11ed:	00 00                	add    BYTE PTR [rax],al
    11ef:	00 d0                	add    al,dl
    11f1:	1d 01 00 00 00       	sbb    eax,0x1
    11f6:	00 00                	add    BYTE PTR [rax],al
    11f8:	07                   	(bad)  
    11f9:	00 00                	add    BYTE PTR [rax],al
    11fb:	00 07                	add    BYTE PTR [rdi],al
	...
    1205:	00 00                	add    BYTE PTR [rax],al
    1207:	00 d8                	add    al,bl
    1209:	1d 01 00 00 00       	sbb    eax,0x1
    120e:	00 00                	add    BYTE PTR [rax],al
    1210:	07                   	(bad)  
    1211:	00 00                	add    BYTE PTR [rax],al
    1213:	00 08                	add    BYTE PTR [rax],cl
	...
    121d:	00 00                	add    BYTE PTR [rax],al
    121f:	00 e0                	add    al,ah
    1221:	1d 01 00 00 00       	sbb    eax,0x1
    1226:	00 00                	add    BYTE PTR [rax],al
    1228:	07                   	(bad)  
    1229:	00 00                	add    BYTE PTR [rax],al
    122b:	00 09                	add    BYTE PTR [rcx],cl
	...
    1235:	00 00                	add    BYTE PTR [rax],al
    1237:	00 e8                	add    al,ch
    1239:	1d 01 00 00 00       	sbb    eax,0x1
    123e:	00 00                	add    BYTE PTR [rax],al
    1240:	07                   	(bad)  
    1241:	00 00                	add    BYTE PTR [rax],al
    1243:	00 0a                	add    BYTE PTR [rdx],cl
	...
    124d:	00 00                	add    BYTE PTR [rax],al
    124f:	00 f0                	add    al,dh
    1251:	1d 01 00 00 00       	sbb    eax,0x1
    1256:	00 00                	add    BYTE PTR [rax],al
    1258:	07                   	(bad)  
    1259:	00 00                	add    BYTE PTR [rax],al
    125b:	00 0b                	add    BYTE PTR [rbx],cl
	...
    1265:	00 00                	add    BYTE PTR [rax],al
    1267:	00 f8                	add    al,bh
    1269:	1d 01 00 00 00       	sbb    eax,0x1
    126e:	00 00                	add    BYTE PTR [rax],al
    1270:	07                   	(bad)  
    1271:	00 00                	add    BYTE PTR [rax],al
    1273:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
	...
    127e:	00 00                	add    BYTE PTR [rax],al
    1280:	00 1e                	add    BYTE PTR [rsi],bl
    1282:	01 00                	add    DWORD PTR [rax],eax
    1284:	00 00                	add    BYTE PTR [rax],al
    1286:	00 00                	add    BYTE PTR [rax],al
    1288:	07                   	(bad)  
    1289:	00 00                	add    BYTE PTR [rax],al
    128b:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 1291 <message_buffer+0xe11>
    1291:	00 00                	add    BYTE PTR [rax],al
    1293:	00 00                	add    BYTE PTR [rax],al
    1295:	00 00                	add    BYTE PTR [rax],al
    1297:	00 08                	add    BYTE PTR [rax],cl
    1299:	1e                   	(bad)  
    129a:	01 00                	add    DWORD PTR [rax],eax
    129c:	00 00                	add    BYTE PTR [rax],al
    129e:	00 00                	add    BYTE PTR [rax],al
    12a0:	07                   	(bad)  
    12a1:	00 00                	add    BYTE PTR [rax],al
    12a3:	00 0e                	add    BYTE PTR [rsi],cl
	...
    12ad:	00 00                	add    BYTE PTR [rax],al
    12af:	00 10                	add    BYTE PTR [rax],dl
    12b1:	1e                   	(bad)  
    12b2:	01 00                	add    DWORD PTR [rax],eax
    12b4:	00 00                	add    BYTE PTR [rax],al
    12b6:	00 00                	add    BYTE PTR [rax],al
    12b8:	07                   	(bad)  
    12b9:	00 00                	add    BYTE PTR [rax],al
    12bb:	00 0f                	add    BYTE PTR [rdi],cl
	...
    12c5:	00 00                	add    BYTE PTR [rax],al
    12c7:	00 18                	add    BYTE PTR [rax],bl
    12c9:	1e                   	(bad)  
    12ca:	01 00                	add    DWORD PTR [rax],eax
    12cc:	00 00                	add    BYTE PTR [rax],al
    12ce:	00 00                	add    BYTE PTR [rax],al
    12d0:	07                   	(bad)  
    12d1:	00 00                	add    BYTE PTR [rax],al
    12d3:	00 10                	add    BYTE PTR [rax],dl
	...
    12dd:	00 00                	add    BYTE PTR [rax],al
    12df:	00 20                	add    BYTE PTR [rax],ah
    12e1:	1e                   	(bad)  
    12e2:	01 00                	add    DWORD PTR [rax],eax
    12e4:	00 00                	add    BYTE PTR [rax],al
    12e6:	00 00                	add    BYTE PTR [rax],al
    12e8:	07                   	(bad)  
    12e9:	00 00                	add    BYTE PTR [rax],al
    12eb:	00 11                	add    BYTE PTR [rcx],dl
	...
    12f5:	00 00                	add    BYTE PTR [rax],al
    12f7:	00 28                	add    BYTE PTR [rax],ch
    12f9:	1e                   	(bad)  
    12fa:	01 00                	add    DWORD PTR [rax],eax
    12fc:	00 00                	add    BYTE PTR [rax],al
    12fe:	00 00                	add    BYTE PTR [rax],al
    1300:	07                   	(bad)  
    1301:	00 00                	add    BYTE PTR [rax],al
    1303:	00 12                	add    BYTE PTR [rdx],dl
	...
    130d:	00 00                	add    BYTE PTR [rax],al
    130f:	00 30                	add    BYTE PTR [rax],dh
    1311:	1e                   	(bad)  
    1312:	01 00                	add    DWORD PTR [rax],eax
    1314:	00 00                	add    BYTE PTR [rax],al
    1316:	00 00                	add    BYTE PTR [rax],al
    1318:	07                   	(bad)  
    1319:	00 00                	add    BYTE PTR [rax],al
    131b:	00 13                	add    BYTE PTR [rbx],dl
	...
    1325:	00 00                	add    BYTE PTR [rax],al
    1327:	00 38                	add    BYTE PTR [rax],bh
    1329:	1e                   	(bad)  
    132a:	01 00                	add    DWORD PTR [rax],eax
    132c:	00 00                	add    BYTE PTR [rax],al
    132e:	00 00                	add    BYTE PTR [rax],al
    1330:	07                   	(bad)  
    1331:	00 00                	add    BYTE PTR [rax],al
    1333:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
	...
    133e:	00 00                	add    BYTE PTR [rax],al
    1340:	40 1e                	rex (bad) 
    1342:	01 00                	add    DWORD PTR [rax],eax
    1344:	00 00                	add    BYTE PTR [rax],al
    1346:	00 00                	add    BYTE PTR [rax],al
    1348:	07                   	(bad)  
    1349:	00 00                	add    BYTE PTR [rax],al
    134b:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 1351 <message_buffer+0xed1>
    1351:	00 00                	add    BYTE PTR [rax],al
    1353:	00 00                	add    BYTE PTR [rax],al
    1355:	00 00                	add    BYTE PTR [rax],al
    1357:	00 48 1e             	add    BYTE PTR [rax+0x1e],cl
    135a:	01 00                	add    DWORD PTR [rax],eax
    135c:	00 00                	add    BYTE PTR [rax],al
    135e:	00 00                	add    BYTE PTR [rax],al
    1360:	07                   	(bad)  
    1361:	00 00                	add    BYTE PTR [rax],al
    1363:	00 16                	add    BYTE PTR [rsi],dl
	...
    136d:	00 00                	add    BYTE PTR [rax],al
    136f:	00 50 1e             	add    BYTE PTR [rax+0x1e],dl
    1372:	01 00                	add    DWORD PTR [rax],eax
    1374:	00 00                	add    BYTE PTR [rax],al
    1376:	00 00                	add    BYTE PTR [rax],al
    1378:	07                   	(bad)  
    1379:	00 00                	add    BYTE PTR [rax],al
    137b:	00 17                	add    BYTE PTR [rdi],dl
	...
    1385:	00 00                	add    BYTE PTR [rax],al
    1387:	00 58 1e             	add    BYTE PTR [rax+0x1e],bl
    138a:	01 00                	add    DWORD PTR [rax],eax
    138c:	00 00                	add    BYTE PTR [rax],al
    138e:	00 00                	add    BYTE PTR [rax],al
    1390:	07                   	(bad)  
    1391:	00 00                	add    BYTE PTR [rax],al
    1393:	00 18                	add    BYTE PTR [rax],bl
	...
    139d:	00 00                	add    BYTE PTR [rax],al
    139f:	00 60 1e             	add    BYTE PTR [rax+0x1e],ah
    13a2:	01 00                	add    DWORD PTR [rax],eax
    13a4:	00 00                	add    BYTE PTR [rax],al
    13a6:	00 00                	add    BYTE PTR [rax],al
    13a8:	07                   	(bad)  
    13a9:	00 00                	add    BYTE PTR [rax],al
    13ab:	00 19                	add    BYTE PTR [rcx],bl
	...
    13b5:	00 00                	add    BYTE PTR [rax],al
    13b7:	00 68 1e             	add    BYTE PTR [rax+0x1e],ch
    13ba:	01 00                	add    DWORD PTR [rax],eax
    13bc:	00 00                	add    BYTE PTR [rax],al
    13be:	00 00                	add    BYTE PTR [rax],al
    13c0:	07                   	(bad)  
    13c1:	00 00                	add    BYTE PTR [rax],al
    13c3:	00 1b                	add    BYTE PTR [rbx],bl
	...
    13cd:	00 00                	add    BYTE PTR [rax],al
    13cf:	00 70 1e             	add    BYTE PTR [rax+0x1e],dh
    13d2:	01 00                	add    DWORD PTR [rax],eax
    13d4:	00 00                	add    BYTE PTR [rax],al
    13d6:	00 00                	add    BYTE PTR [rax],al
    13d8:	07                   	(bad)  
    13d9:	00 00                	add    BYTE PTR [rax],al
    13db:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
	...
    13e6:	00 00                	add    BYTE PTR [rax],al
    13e8:	78 1e                	js     1408 <message_buffer+0xf88>
    13ea:	01 00                	add    DWORD PTR [rax],eax
    13ec:	00 00                	add    BYTE PTR [rax],al
    13ee:	00 00                	add    BYTE PTR [rax],al
    13f0:	07                   	(bad)  
    13f1:	00 00                	add    BYTE PTR [rax],al
    13f3:	00 1d 00 00 00 00    	add    BYTE PTR [rip+0x0],bl        # 13f9 <message_buffer+0xf79>
    13f9:	00 00                	add    BYTE PTR [rax],al
    13fb:	00 00                	add    BYTE PTR [rax],al
    13fd:	00 00                	add    BYTE PTR [rax],al
    13ff:	00 80 1e 01 00 00    	add    BYTE PTR [rax+0x11e],al
    1405:	00 00                	add    BYTE PTR [rax],al
    1407:	00 07                	add    BYTE PTR [rdi],al
    1409:	00 00                	add    BYTE PTR [rax],al
    140b:	00 1e                	add    BYTE PTR [rsi],bl
	...
    1415:	00 00                	add    BYTE PTR [rax],al
    1417:	00 88 1e 01 00 00    	add    BYTE PTR [rax+0x11e],cl
    141d:	00 00                	add    BYTE PTR [rax],al
    141f:	00 07                	add    BYTE PTR [rdi],al
    1421:	00 00                	add    BYTE PTR [rax],al
    1423:	00 1f                	add    BYTE PTR [rdi],bl
	...
    142d:	00 00                	add    BYTE PTR [rax],al
    142f:	00 90 1e 01 00 00    	add    BYTE PTR [rax+0x11e],dl
    1435:	00 00                	add    BYTE PTR [rax],al
    1437:	00 07                	add    BYTE PTR [rdi],al
    1439:	00 00                	add    BYTE PTR [rax],al
    143b:	00 20                	add    BYTE PTR [rax],ah
	...
    1445:	00 00                	add    BYTE PTR [rax],al
    1447:	00 98 1e 01 00 00    	add    BYTE PTR [rax+0x11e],bl
    144d:	00 00                	add    BYTE PTR [rax],al
    144f:	00 07                	add    BYTE PTR [rdi],al
    1451:	00 00                	add    BYTE PTR [rax],al
    1453:	00 21                	add    BYTE PTR [rcx],ah
	...
    145d:	00 00                	add    BYTE PTR [rax],al
    145f:	00 a0 1e 01 00 00    	add    BYTE PTR [rax+0x11e],ah
    1465:	00 00                	add    BYTE PTR [rax],al
    1467:	00 07                	add    BYTE PTR [rdi],al
    1469:	00 00                	add    BYTE PTR [rax],al
    146b:	00 22                	add    BYTE PTR [rdx],ah
	...
    1475:	00 00                	add    BYTE PTR [rax],al
    1477:	00 a8 1e 01 00 00    	add    BYTE PTR [rax+0x11e],ch
    147d:	00 00                	add    BYTE PTR [rax],al
    147f:	00 07                	add    BYTE PTR [rdi],al
    1481:	00 00                	add    BYTE PTR [rax],al
    1483:	00 23                	add    BYTE PTR [rbx],ah
	...
    148d:	00 00                	add    BYTE PTR [rax],al
    148f:	00 b0 1e 01 00 00    	add    BYTE PTR [rax+0x11e],dh
    1495:	00 00                	add    BYTE PTR [rax],al
    1497:	00 07                	add    BYTE PTR [rdi],al
    1499:	00 00                	add    BYTE PTR [rax],al
    149b:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
	...
    14a6:	00 00                	add    BYTE PTR [rax],al
    14a8:	b8 1e 01 00 00       	mov    eax,0x11e
    14ad:	00 00                	add    BYTE PTR [rax],al
    14af:	00 07                	add    BYTE PTR [rdi],al
    14b1:	00 00                	add    BYTE PTR [rax],al
    14b3:	00 25 00 00 00 00    	add    BYTE PTR [rip+0x0],ah        # 14b9 <message_buffer+0x1039>
    14b9:	00 00                	add    BYTE PTR [rax],al
    14bb:	00 00                	add    BYTE PTR [rax],al
    14bd:	00 00                	add    BYTE PTR [rax],al
    14bf:	00 c0                	add    al,al
    14c1:	1e                   	(bad)  
    14c2:	01 00                	add    DWORD PTR [rax],eax
    14c4:	00 00                	add    BYTE PTR [rax],al
    14c6:	00 00                	add    BYTE PTR [rax],al
    14c8:	07                   	(bad)  
    14c9:	00 00                	add    BYTE PTR [rax],al
    14cb:	00 26                	add    BYTE PTR [rsi],ah
	...
    14d5:	00 00                	add    BYTE PTR [rax],al
    14d7:	00 c8                	add    al,cl
    14d9:	1e                   	(bad)  
    14da:	01 00                	add    DWORD PTR [rax],eax
    14dc:	00 00                	add    BYTE PTR [rax],al
    14de:	00 00                	add    BYTE PTR [rax],al
    14e0:	07                   	(bad)  
    14e1:	00 00                	add    BYTE PTR [rax],al
    14e3:	00 27                	add    BYTE PTR [rdi],ah
	...
    14ed:	00 00                	add    BYTE PTR [rax],al
    14ef:	00 d0                	add    al,dl
    14f1:	1e                   	(bad)  
    14f2:	01 00                	add    DWORD PTR [rax],eax
    14f4:	00 00                	add    BYTE PTR [rax],al
    14f6:	00 00                	add    BYTE PTR [rax],al
    14f8:	07                   	(bad)  
    14f9:	00 00                	add    BYTE PTR [rax],al
    14fb:	00 28                	add    BYTE PTR [rax],ch
	...
    1505:	00 00                	add    BYTE PTR [rax],al
    1507:	00 d8                	add    al,bl
    1509:	1e                   	(bad)  
    150a:	01 00                	add    DWORD PTR [rax],eax
    150c:	00 00                	add    BYTE PTR [rax],al
    150e:	00 00                	add    BYTE PTR [rax],al
    1510:	07                   	(bad)  
    1511:	00 00                	add    BYTE PTR [rax],al
    1513:	00 29                	add    BYTE PTR [rcx],ch
	...
    151d:	00 00                	add    BYTE PTR [rax],al
    151f:	00 e0                	add    al,ah
    1521:	1e                   	(bad)  
    1522:	01 00                	add    DWORD PTR [rax],eax
    1524:	00 00                	add    BYTE PTR [rax],al
    1526:	00 00                	add    BYTE PTR [rax],al
    1528:	07                   	(bad)  
    1529:	00 00                	add    BYTE PTR [rax],al
    152b:	00 2a                	add    BYTE PTR [rdx],ch
	...
    1535:	00 00                	add    BYTE PTR [rax],al
    1537:	00 e8                	add    al,ch
    1539:	1e                   	(bad)  
    153a:	01 00                	add    DWORD PTR [rax],eax
    153c:	00 00                	add    BYTE PTR [rax],al
    153e:	00 00                	add    BYTE PTR [rax],al
    1540:	07                   	(bad)  
    1541:	00 00                	add    BYTE PTR [rax],al
    1543:	00 2b                	add    BYTE PTR [rbx],ch
	...
    154d:	00 00                	add    BYTE PTR [rax],al
    154f:	00 f0                	add    al,dh
    1551:	1e                   	(bad)  
    1552:	01 00                	add    DWORD PTR [rax],eax
    1554:	00 00                	add    BYTE PTR [rax],al
    1556:	00 00                	add    BYTE PTR [rax],al
    1558:	07                   	(bad)  
    1559:	00 00                	add    BYTE PTR [rax],al
    155b:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
	...
    1566:	00 00                	add    BYTE PTR [rax],al
    1568:	f8                   	clc    
    1569:	1e                   	(bad)  
    156a:	01 00                	add    DWORD PTR [rax],eax
    156c:	00 00                	add    BYTE PTR [rax],al
    156e:	00 00                	add    BYTE PTR [rax],al
    1570:	07                   	(bad)  
    1571:	00 00                	add    BYTE PTR [rax],al
    1573:	00 2d 00 00 00 00    	add    BYTE PTR [rip+0x0],ch        # 1579 <message_buffer+0x10f9>
	...
    1581:	1f                   	(bad)  
    1582:	01 00                	add    DWORD PTR [rax],eax
    1584:	00 00                	add    BYTE PTR [rax],al
    1586:	00 00                	add    BYTE PTR [rax],al
    1588:	07                   	(bad)  
    1589:	00 00                	add    BYTE PTR [rax],al
    158b:	00 2e                	add    BYTE PTR [rsi],ch
	...
    1595:	00 00                	add    BYTE PTR [rax],al
    1597:	00 08                	add    BYTE PTR [rax],cl
    1599:	1f                   	(bad)  
    159a:	01 00                	add    DWORD PTR [rax],eax
    159c:	00 00                	add    BYTE PTR [rax],al
    159e:	00 00                	add    BYTE PTR [rax],al
    15a0:	07                   	(bad)  
    15a1:	00 00                	add    BYTE PTR [rax],al
    15a3:	00 2f                	add    BYTE PTR [rdi],ch
	...
    15ad:	00 00                	add    BYTE PTR [rax],al
    15af:	00 10                	add    BYTE PTR [rax],dl
    15b1:	1f                   	(bad)  
    15b2:	01 00                	add    DWORD PTR [rax],eax
    15b4:	00 00                	add    BYTE PTR [rax],al
    15b6:	00 00                	add    BYTE PTR [rax],al
    15b8:	07                   	(bad)  
    15b9:	00 00                	add    BYTE PTR [rax],al
    15bb:	00 30                	add    BYTE PTR [rax],dh
	...
    15c5:	00 00                	add    BYTE PTR [rax],al
    15c7:	00 18                	add    BYTE PTR [rax],bl
    15c9:	1f                   	(bad)  
    15ca:	01 00                	add    DWORD PTR [rax],eax
    15cc:	00 00                	add    BYTE PTR [rax],al
    15ce:	00 00                	add    BYTE PTR [rax],al
    15d0:	07                   	(bad)  
    15d1:	00 00                	add    BYTE PTR [rax],al
    15d3:	00 31                	add    BYTE PTR [rcx],dh
	...
    15dd:	00 00                	add    BYTE PTR [rax],al
    15df:	00 20                	add    BYTE PTR [rax],ah
    15e1:	1f                   	(bad)  
    15e2:	01 00                	add    DWORD PTR [rax],eax
    15e4:	00 00                	add    BYTE PTR [rax],al
    15e6:	00 00                	add    BYTE PTR [rax],al
    15e8:	07                   	(bad)  
    15e9:	00 00                	add    BYTE PTR [rax],al
    15eb:	00 32                	add    BYTE PTR [rdx],dh
	...
    15f5:	00 00                	add    BYTE PTR [rax],al
    15f7:	00 28                	add    BYTE PTR [rax],ch
    15f9:	1f                   	(bad)  
    15fa:	01 00                	add    DWORD PTR [rax],eax
    15fc:	00 00                	add    BYTE PTR [rax],al
    15fe:	00 00                	add    BYTE PTR [rax],al
    1600:	07                   	(bad)  
    1601:	00 00                	add    BYTE PTR [rax],al
    1603:	00 33                	add    BYTE PTR [rbx],dh
	...
    160d:	00 00                	add    BYTE PTR [rax],al
    160f:	00 30                	add    BYTE PTR [rax],dh
    1611:	1f                   	(bad)  
    1612:	01 00                	add    DWORD PTR [rax],eax
    1614:	00 00                	add    BYTE PTR [rax],al
    1616:	00 00                	add    BYTE PTR [rax],al
    1618:	07                   	(bad)  
    1619:	00 00                	add    BYTE PTR [rax],al
    161b:	00 34 00             	add    BYTE PTR [rax+rax*1],dh
	...
    1626:	00 00                	add    BYTE PTR [rax],al
    1628:	38 1f                	cmp    BYTE PTR [rdi],bl
    162a:	01 00                	add    DWORD PTR [rax],eax
    162c:	00 00                	add    BYTE PTR [rax],al
    162e:	00 00                	add    BYTE PTR [rax],al
    1630:	07                   	(bad)  
    1631:	00 00                	add    BYTE PTR [rax],al
    1633:	00 35 00 00 00 00    	add    BYTE PTR [rip+0x0],dh        # 1639 <message_buffer+0x11b9>
    1639:	00 00                	add    BYTE PTR [rax],al
    163b:	00 00                	add    BYTE PTR [rax],al
    163d:	00 00                	add    BYTE PTR [rax],al
    163f:	00 40 1f             	add    BYTE PTR [rax+0x1f],al
    1642:	01 00                	add    DWORD PTR [rax],eax
    1644:	00 00                	add    BYTE PTR [rax],al
    1646:	00 00                	add    BYTE PTR [rax],al
    1648:	07                   	(bad)  
    1649:	00 00                	add    BYTE PTR [rax],al
    164b:	00 36                	add    BYTE PTR [rsi],dh
	...
    1655:	00 00                	add    BYTE PTR [rax],al
    1657:	00 48 1f             	add    BYTE PTR [rax+0x1f],cl
    165a:	01 00                	add    DWORD PTR [rax],eax
    165c:	00 00                	add    BYTE PTR [rax],al
    165e:	00 00                	add    BYTE PTR [rax],al
    1660:	07                   	(bad)  
    1661:	00 00                	add    BYTE PTR [rax],al
    1663:	00 37                	add    BYTE PTR [rdi],dh
	...
    166d:	00 00                	add    BYTE PTR [rax],al
    166f:	00 50 1f             	add    BYTE PTR [rax+0x1f],dl
    1672:	01 00                	add    DWORD PTR [rax],eax
    1674:	00 00                	add    BYTE PTR [rax],al
    1676:	00 00                	add    BYTE PTR [rax],al
    1678:	07                   	(bad)  
    1679:	00 00                	add    BYTE PTR [rax],al
    167b:	00 38                	add    BYTE PTR [rax],bh
	...
    1685:	00 00                	add    BYTE PTR [rax],al
    1687:	00 58 1f             	add    BYTE PTR [rax+0x1f],bl
    168a:	01 00                	add    DWORD PTR [rax],eax
    168c:	00 00                	add    BYTE PTR [rax],al
    168e:	00 00                	add    BYTE PTR [rax],al
    1690:	07                   	(bad)  
    1691:	00 00                	add    BYTE PTR [rax],al
    1693:	00 39                	add    BYTE PTR [rcx],bh
	...
    169d:	00 00                	add    BYTE PTR [rax],al
    169f:	00 60 1f             	add    BYTE PTR [rax+0x1f],ah
    16a2:	01 00                	add    DWORD PTR [rax],eax
    16a4:	00 00                	add    BYTE PTR [rax],al
    16a6:	00 00                	add    BYTE PTR [rax],al
    16a8:	07                   	(bad)  
    16a9:	00 00                	add    BYTE PTR [rax],al
    16ab:	00 3a                	add    BYTE PTR [rdx],bh
	...
    16b5:	00 00                	add    BYTE PTR [rax],al
    16b7:	00 68 1f             	add    BYTE PTR [rax+0x1f],ch
    16ba:	01 00                	add    DWORD PTR [rax],eax
    16bc:	00 00                	add    BYTE PTR [rax],al
    16be:	00 00                	add    BYTE PTR [rax],al
    16c0:	07                   	(bad)  
    16c1:	00 00                	add    BYTE PTR [rax],al
    16c3:	00 3b                	add    BYTE PTR [rbx],bh
	...
    16cd:	00 00                	add    BYTE PTR [rax],al
    16cf:	00 70 1f             	add    BYTE PTR [rax+0x1f],dh
    16d2:	01 00                	add    DWORD PTR [rax],eax
    16d4:	00 00                	add    BYTE PTR [rax],al
    16d6:	00 00                	add    BYTE PTR [rax],al
    16d8:	07                   	(bad)  
    16d9:	00 00                	add    BYTE PTR [rax],al
    16db:	00 3c 00             	add    BYTE PTR [rax+rax*1],bh
	...
    16e6:	00 00                	add    BYTE PTR [rax],al
    16e8:	78 1f                	js     1709 <message_buffer+0x1289>
    16ea:	01 00                	add    DWORD PTR [rax],eax
    16ec:	00 00                	add    BYTE PTR [rax],al
    16ee:	00 00                	add    BYTE PTR [rax],al
    16f0:	07                   	(bad)  
    16f1:	00 00                	add    BYTE PTR [rax],al
    16f3:	00 3d 00 00 00 00    	add    BYTE PTR [rip+0x0],bh        # 16f9 <message_buffer+0x1279>
    16f9:	00 00                	add    BYTE PTR [rax],al
    16fb:	00 00                	add    BYTE PTR [rax],al
    16fd:	00 00                	add    BYTE PTR [rax],al
    16ff:	00 80 1f 01 00 00    	add    BYTE PTR [rax+0x11f],al
    1705:	00 00                	add    BYTE PTR [rax],al
    1707:	00 07                	add    BYTE PTR [rdi],al
    1709:	00 00                	add    BYTE PTR [rax],al
    170b:	00 3e                	add    BYTE PTR [rsi],bh
	...
    1715:	00 00                	add    BYTE PTR [rax],al
    1717:	00 88 1f 01 00 00    	add    BYTE PTR [rax+0x11f],cl
    171d:	00 00                	add    BYTE PTR [rax],al
    171f:	00 07                	add    BYTE PTR [rdi],al
    1721:	00 00                	add    BYTE PTR [rax],al
    1723:	00 3f                	add    BYTE PTR [rdi],bh
	...
    172d:	00 00                	add    BYTE PTR [rax],al
    172f:	00 90 1f 01 00 00    	add    BYTE PTR [rax+0x11f],dl
    1735:	00 00                	add    BYTE PTR [rax],al
    1737:	00 07                	add    BYTE PTR [rdi],al
    1739:	00 00                	add    BYTE PTR [rax],al
    173b:	00 40 00             	add    BYTE PTR [rax+0x0],al
	...
    1746:	00 00                	add    BYTE PTR [rax],al
    1748:	98                   	cwde   
    1749:	1f                   	(bad)  
    174a:	01 00                	add    DWORD PTR [rax],eax
    174c:	00 00                	add    BYTE PTR [rax],al
    174e:	00 00                	add    BYTE PTR [rax],al
    1750:	07                   	(bad)  
    1751:	00 00                	add    BYTE PTR [rax],al
    1753:	00 41 00             	add    BYTE PTR [rcx+0x0],al
	...
    175e:	00 00                	add    BYTE PTR [rax],al
    1760:	a0 1f 01 00 00 00 00 	movabs al,ds:0x70000000000011f
    1767:	00 07 
    1769:	00 00                	add    BYTE PTR [rax],al
    176b:	00 42 00             	add    BYTE PTR [rdx+0x0],al
	...
    1776:	00 00                	add    BYTE PTR [rax],al
    1778:	a8 1f                	test   al,0x1f
    177a:	01 00                	add    DWORD PTR [rax],eax
    177c:	00 00                	add    BYTE PTR [rax],al
    177e:	00 00                	add    BYTE PTR [rax],al
    1780:	07                   	(bad)  
    1781:	00 00                	add    BYTE PTR [rax],al
    1783:	00 43 00             	add    BYTE PTR [rbx+0x0],al
	...
    178e:	00 00                	add    BYTE PTR [rax],al
    1790:	b0 1f                	mov    al,0x1f
    1792:	01 00                	add    DWORD PTR [rax],eax
    1794:	00 00                	add    BYTE PTR [rax],al
    1796:	00 00                	add    BYTE PTR [rax],al
    1798:	07                   	(bad)  
    1799:	00 00                	add    BYTE PTR [rax],al
    179b:	00 45 00             	add    BYTE PTR [rbp+0x0],al
	...
    17a6:	00 00                	add    BYTE PTR [rax],al
    17a8:	b8 1f 01 00 00       	mov    eax,0x11f
    17ad:	00 00                	add    BYTE PTR [rax],al
    17af:	00 07                	add    BYTE PTR [rdi],al
    17b1:	00 00                	add    BYTE PTR [rax],al
    17b3:	00 46 00             	add    BYTE PTR [rsi+0x0],al
	...
    17be:	00 00                	add    BYTE PTR [rax],al
    17c0:	c0 1f 01             	rcr    BYTE PTR [rdi],0x1
    17c3:	00 00                	add    BYTE PTR [rax],al
    17c5:	00 00                	add    BYTE PTR [rax],al
    17c7:	00 07                	add    BYTE PTR [rdi],al
    17c9:	00 00                	add    BYTE PTR [rax],al
    17cb:	00 47 00             	add    BYTE PTR [rdi+0x0],al
	...
    17d6:	00 00                	add    BYTE PTR [rax],al
    17d8:	c8 1f 01 00          	enter  0x11f,0x0
    17dc:	00 00                	add    BYTE PTR [rax],al
    17de:	00 00                	add    BYTE PTR [rax],al
    17e0:	07                   	(bad)  
    17e1:	00 00                	add    BYTE PTR [rax],al
    17e3:	00 48 00             	add    BYTE PTR [rax+0x0],cl
	...
    17ee:	00 00                	add    BYTE PTR [rax],al
    17f0:	d0 1f                	rcr    BYTE PTR [rdi],1
    17f2:	01 00                	add    DWORD PTR [rax],eax
    17f4:	00 00                	add    BYTE PTR [rax],al
    17f6:	00 00                	add    BYTE PTR [rax],al
    17f8:	07                   	(bad)  
    17f9:	00 00                	add    BYTE PTR [rax],al
    17fb:	00 4b 00             	add    BYTE PTR [rbx+0x0],cl
	...

Disassembly of section .init:

0000000000002000 <_init>:
    2000:	f3 0f 1e fa          	endbr64 
    2004:	48 83 ec 08          	sub    rsp,0x8
    2008:	48 8b 05 e1 ff 00 00 	mov    rax,QWORD PTR [rip+0xffe1]        # 11ff0 <__gmon_start__>
    200f:	48 85 c0             	test   rax,rax
    2012:	74 02                	je     2016 <_init+0x16>
    2014:	ff d0                	call   rax
    2016:	48 83 c4 08          	add    rsp,0x8
    201a:	c3                   	ret    

Disassembly of section .plt:

0000000000002020 <.plt>:
    2020:	ff 35 6a fd 00 00    	push   QWORD PTR [rip+0xfd6a]        # 11d90 <_GLOBAL_OFFSET_TABLE_+0x8>
    2026:	f2 ff 25 6b fd 00 00 	bnd jmp QWORD PTR [rip+0xfd6b]        # 11d98 <_GLOBAL_OFFSET_TABLE_+0x10>
    202d:	0f 1f 00             	nop    DWORD PTR [rax]
    2030:	f3 0f 1e fa          	endbr64 
    2034:	68 00 00 00 00       	push   0x0
    2039:	f2 e9 e1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    203f:	90                   	nop
    2040:	f3 0f 1e fa          	endbr64 
    2044:	68 01 00 00 00       	push   0x1
    2049:	f2 e9 d1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    204f:	90                   	nop
    2050:	f3 0f 1e fa          	endbr64 
    2054:	68 02 00 00 00       	push   0x2
    2059:	f2 e9 c1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    205f:	90                   	nop
    2060:	f3 0f 1e fa          	endbr64 
    2064:	68 03 00 00 00       	push   0x3
    2069:	f2 e9 b1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    206f:	90                   	nop
    2070:	f3 0f 1e fa          	endbr64 
    2074:	68 04 00 00 00       	push   0x4
    2079:	f2 e9 a1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    207f:	90                   	nop
    2080:	f3 0f 1e fa          	endbr64 
    2084:	68 05 00 00 00       	push   0x5
    2089:	f2 e9 91 ff ff ff    	bnd jmp 2020 <_init+0x20>
    208f:	90                   	nop
    2090:	f3 0f 1e fa          	endbr64 
    2094:	68 06 00 00 00       	push   0x6
    2099:	f2 e9 81 ff ff ff    	bnd jmp 2020 <_init+0x20>
    209f:	90                   	nop
    20a0:	f3 0f 1e fa          	endbr64 
    20a4:	68 07 00 00 00       	push   0x7
    20a9:	f2 e9 71 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20af:	90                   	nop
    20b0:	f3 0f 1e fa          	endbr64 
    20b4:	68 08 00 00 00       	push   0x8
    20b9:	f2 e9 61 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20bf:	90                   	nop
    20c0:	f3 0f 1e fa          	endbr64 
    20c4:	68 09 00 00 00       	push   0x9
    20c9:	f2 e9 51 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20cf:	90                   	nop
    20d0:	f3 0f 1e fa          	endbr64 
    20d4:	68 0a 00 00 00       	push   0xa
    20d9:	f2 e9 41 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20df:	90                   	nop
    20e0:	f3 0f 1e fa          	endbr64 
    20e4:	68 0b 00 00 00       	push   0xb
    20e9:	f2 e9 31 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20ef:	90                   	nop
    20f0:	f3 0f 1e fa          	endbr64 
    20f4:	68 0c 00 00 00       	push   0xc
    20f9:	f2 e9 21 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20ff:	90                   	nop
    2100:	f3 0f 1e fa          	endbr64 
    2104:	68 0d 00 00 00       	push   0xd
    2109:	f2 e9 11 ff ff ff    	bnd jmp 2020 <_init+0x20>
    210f:	90                   	nop
    2110:	f3 0f 1e fa          	endbr64 
    2114:	68 0e 00 00 00       	push   0xe
    2119:	f2 e9 01 ff ff ff    	bnd jmp 2020 <_init+0x20>
    211f:	90                   	nop
    2120:	f3 0f 1e fa          	endbr64 
    2124:	68 0f 00 00 00       	push   0xf
    2129:	f2 e9 f1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    212f:	90                   	nop
    2130:	f3 0f 1e fa          	endbr64 
    2134:	68 10 00 00 00       	push   0x10
    2139:	f2 e9 e1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    213f:	90                   	nop
    2140:	f3 0f 1e fa          	endbr64 
    2144:	68 11 00 00 00       	push   0x11
    2149:	f2 e9 d1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    214f:	90                   	nop
    2150:	f3 0f 1e fa          	endbr64 
    2154:	68 12 00 00 00       	push   0x12
    2159:	f2 e9 c1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    215f:	90                   	nop
    2160:	f3 0f 1e fa          	endbr64 
    2164:	68 13 00 00 00       	push   0x13
    2169:	f2 e9 b1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    216f:	90                   	nop
    2170:	f3 0f 1e fa          	endbr64 
    2174:	68 14 00 00 00       	push   0x14
    2179:	f2 e9 a1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    217f:	90                   	nop
    2180:	f3 0f 1e fa          	endbr64 
    2184:	68 15 00 00 00       	push   0x15
    2189:	f2 e9 91 fe ff ff    	bnd jmp 2020 <_init+0x20>
    218f:	90                   	nop
    2190:	f3 0f 1e fa          	endbr64 
    2194:	68 16 00 00 00       	push   0x16
    2199:	f2 e9 81 fe ff ff    	bnd jmp 2020 <_init+0x20>
    219f:	90                   	nop
    21a0:	f3 0f 1e fa          	endbr64 
    21a4:	68 17 00 00 00       	push   0x17
    21a9:	f2 e9 71 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21af:	90                   	nop
    21b0:	f3 0f 1e fa          	endbr64 
    21b4:	68 18 00 00 00       	push   0x18
    21b9:	f2 e9 61 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21bf:	90                   	nop
    21c0:	f3 0f 1e fa          	endbr64 
    21c4:	68 19 00 00 00       	push   0x19
    21c9:	f2 e9 51 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21cf:	90                   	nop
    21d0:	f3 0f 1e fa          	endbr64 
    21d4:	68 1a 00 00 00       	push   0x1a
    21d9:	f2 e9 41 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21df:	90                   	nop
    21e0:	f3 0f 1e fa          	endbr64 
    21e4:	68 1b 00 00 00       	push   0x1b
    21e9:	f2 e9 31 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21ef:	90                   	nop
    21f0:	f3 0f 1e fa          	endbr64 
    21f4:	68 1c 00 00 00       	push   0x1c
    21f9:	f2 e9 21 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21ff:	90                   	nop
    2200:	f3 0f 1e fa          	endbr64 
    2204:	68 1d 00 00 00       	push   0x1d
    2209:	f2 e9 11 fe ff ff    	bnd jmp 2020 <_init+0x20>
    220f:	90                   	nop
    2210:	f3 0f 1e fa          	endbr64 
    2214:	68 1e 00 00 00       	push   0x1e
    2219:	f2 e9 01 fe ff ff    	bnd jmp 2020 <_init+0x20>
    221f:	90                   	nop
    2220:	f3 0f 1e fa          	endbr64 
    2224:	68 1f 00 00 00       	push   0x1f
    2229:	f2 e9 f1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    222f:	90                   	nop
    2230:	f3 0f 1e fa          	endbr64 
    2234:	68 20 00 00 00       	push   0x20
    2239:	f2 e9 e1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    223f:	90                   	nop
    2240:	f3 0f 1e fa          	endbr64 
    2244:	68 21 00 00 00       	push   0x21
    2249:	f2 e9 d1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    224f:	90                   	nop
    2250:	f3 0f 1e fa          	endbr64 
    2254:	68 22 00 00 00       	push   0x22
    2259:	f2 e9 c1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    225f:	90                   	nop
    2260:	f3 0f 1e fa          	endbr64 
    2264:	68 23 00 00 00       	push   0x23
    2269:	f2 e9 b1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    226f:	90                   	nop
    2270:	f3 0f 1e fa          	endbr64 
    2274:	68 24 00 00 00       	push   0x24
    2279:	f2 e9 a1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    227f:	90                   	nop
    2280:	f3 0f 1e fa          	endbr64 
    2284:	68 25 00 00 00       	push   0x25
    2289:	f2 e9 91 fd ff ff    	bnd jmp 2020 <_init+0x20>
    228f:	90                   	nop
    2290:	f3 0f 1e fa          	endbr64 
    2294:	68 26 00 00 00       	push   0x26
    2299:	f2 e9 81 fd ff ff    	bnd jmp 2020 <_init+0x20>
    229f:	90                   	nop
    22a0:	f3 0f 1e fa          	endbr64 
    22a4:	68 27 00 00 00       	push   0x27
    22a9:	f2 e9 71 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22af:	90                   	nop
    22b0:	f3 0f 1e fa          	endbr64 
    22b4:	68 28 00 00 00       	push   0x28
    22b9:	f2 e9 61 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22bf:	90                   	nop
    22c0:	f3 0f 1e fa          	endbr64 
    22c4:	68 29 00 00 00       	push   0x29
    22c9:	f2 e9 51 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22cf:	90                   	nop
    22d0:	f3 0f 1e fa          	endbr64 
    22d4:	68 2a 00 00 00       	push   0x2a
    22d9:	f2 e9 41 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22df:	90                   	nop
    22e0:	f3 0f 1e fa          	endbr64 
    22e4:	68 2b 00 00 00       	push   0x2b
    22e9:	f2 e9 31 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22ef:	90                   	nop
    22f0:	f3 0f 1e fa          	endbr64 
    22f4:	68 2c 00 00 00       	push   0x2c
    22f9:	f2 e9 21 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22ff:	90                   	nop
    2300:	f3 0f 1e fa          	endbr64 
    2304:	68 2d 00 00 00       	push   0x2d
    2309:	f2 e9 11 fd ff ff    	bnd jmp 2020 <_init+0x20>
    230f:	90                   	nop
    2310:	f3 0f 1e fa          	endbr64 
    2314:	68 2e 00 00 00       	push   0x2e
    2319:	f2 e9 01 fd ff ff    	bnd jmp 2020 <_init+0x20>
    231f:	90                   	nop
    2320:	f3 0f 1e fa          	endbr64 
    2324:	68 2f 00 00 00       	push   0x2f
    2329:	f2 e9 f1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    232f:	90                   	nop
    2330:	f3 0f 1e fa          	endbr64 
    2334:	68 30 00 00 00       	push   0x30
    2339:	f2 e9 e1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    233f:	90                   	nop
    2340:	f3 0f 1e fa          	endbr64 
    2344:	68 31 00 00 00       	push   0x31
    2349:	f2 e9 d1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    234f:	90                   	nop
    2350:	f3 0f 1e fa          	endbr64 
    2354:	68 32 00 00 00       	push   0x32
    2359:	f2 e9 c1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    235f:	90                   	nop
    2360:	f3 0f 1e fa          	endbr64 
    2364:	68 33 00 00 00       	push   0x33
    2369:	f2 e9 b1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    236f:	90                   	nop
    2370:	f3 0f 1e fa          	endbr64 
    2374:	68 34 00 00 00       	push   0x34
    2379:	f2 e9 a1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    237f:	90                   	nop
    2380:	f3 0f 1e fa          	endbr64 
    2384:	68 35 00 00 00       	push   0x35
    2389:	f2 e9 91 fc ff ff    	bnd jmp 2020 <_init+0x20>
    238f:	90                   	nop
    2390:	f3 0f 1e fa          	endbr64 
    2394:	68 36 00 00 00       	push   0x36
    2399:	f2 e9 81 fc ff ff    	bnd jmp 2020 <_init+0x20>
    239f:	90                   	nop
    23a0:	f3 0f 1e fa          	endbr64 
    23a4:	68 37 00 00 00       	push   0x37
    23a9:	f2 e9 71 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23af:	90                   	nop
    23b0:	f3 0f 1e fa          	endbr64 
    23b4:	68 38 00 00 00       	push   0x38
    23b9:	f2 e9 61 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23bf:	90                   	nop
    23c0:	f3 0f 1e fa          	endbr64 
    23c4:	68 39 00 00 00       	push   0x39
    23c9:	f2 e9 51 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23cf:	90                   	nop
    23d0:	f3 0f 1e fa          	endbr64 
    23d4:	68 3a 00 00 00       	push   0x3a
    23d9:	f2 e9 41 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23df:	90                   	nop
    23e0:	f3 0f 1e fa          	endbr64 
    23e4:	68 3b 00 00 00       	push   0x3b
    23e9:	f2 e9 31 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23ef:	90                   	nop
    23f0:	f3 0f 1e fa          	endbr64 
    23f4:	68 3c 00 00 00       	push   0x3c
    23f9:	f2 e9 21 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23ff:	90                   	nop
    2400:	f3 0f 1e fa          	endbr64 
    2404:	68 3d 00 00 00       	push   0x3d
    2409:	f2 e9 11 fc ff ff    	bnd jmp 2020 <_init+0x20>
    240f:	90                   	nop
    2410:	f3 0f 1e fa          	endbr64 
    2414:	68 3e 00 00 00       	push   0x3e
    2419:	f2 e9 01 fc ff ff    	bnd jmp 2020 <_init+0x20>
    241f:	90                   	nop
    2420:	f3 0f 1e fa          	endbr64 
    2424:	68 3f 00 00 00       	push   0x3f
    2429:	f2 e9 f1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    242f:	90                   	nop
    2430:	f3 0f 1e fa          	endbr64 
    2434:	68 40 00 00 00       	push   0x40
    2439:	f2 e9 e1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    243f:	90                   	nop
    2440:	f3 0f 1e fa          	endbr64 
    2444:	68 41 00 00 00       	push   0x41
    2449:	f2 e9 d1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    244f:	90                   	nop
    2450:	f3 0f 1e fa          	endbr64 
    2454:	68 42 00 00 00       	push   0x42
    2459:	f2 e9 c1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    245f:	90                   	nop
    2460:	f3 0f 1e fa          	endbr64 
    2464:	68 43 00 00 00       	push   0x43
    2469:	f2 e9 b1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    246f:	90                   	nop
    2470:	f3 0f 1e fa          	endbr64 
    2474:	68 44 00 00 00       	push   0x44
    2479:	f2 e9 a1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    247f:	90                   	nop
    2480:	f3 0f 1e fa          	endbr64 
    2484:	68 45 00 00 00       	push   0x45
    2489:	f2 e9 91 fb ff ff    	bnd jmp 2020 <_init+0x20>
    248f:	90                   	nop
    2490:	f3 0f 1e fa          	endbr64 
    2494:	68 46 00 00 00       	push   0x46
    2499:	f2 e9 81 fb ff ff    	bnd jmp 2020 <_init+0x20>
    249f:	90                   	nop

Disassembly of section .plt.got:

00000000000024a0 <__cxa_finalize@plt>:
    24a0:	f3 0f 1e fa          	endbr64 
    24a4:	f2 ff 25 2d fb 00 00 	bnd jmp QWORD PTR [rip+0xfb2d]        # 11fd8 <__cxa_finalize@GLIBC_2.2.5>
    24ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

00000000000024b0 <pcap_loop@plt>:
    24b0:	f3 0f 1e fa          	endbr64 
    24b4:	f2 ff 25 e5 f8 00 00 	bnd jmp QWORD PTR [rip+0xf8e5]        # 11da0 <pcap_loop>
    24bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024c0 <printf@plt>:
    24c0:	f3 0f 1e fa          	endbr64 
    24c4:	f2 ff 25 dd f8 00 00 	bnd jmp QWORD PTR [rip+0xf8dd]        # 11da8 <printf@GLIBC_2.2.5>
    24cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024d0 <htons@plt>:
    24d0:	f3 0f 1e fa          	endbr64 
    24d4:	f2 ff 25 d5 f8 00 00 	bnd jmp QWORD PTR [rip+0xf8d5]        # 11db0 <htons@GLIBC_2.2.5>
    24db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024e0 <strcspn@plt>:
    24e0:	f3 0f 1e fa          	endbr64 
    24e4:	f2 ff 25 cd f8 00 00 	bnd jmp QWORD PTR [rip+0xf8cd]        # 11db8 <strcspn@GLIBC_2.2.5>
    24eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024f0 <bind@plt>:
    24f0:	f3 0f 1e fa          	endbr64 
    24f4:	f2 ff 25 c5 f8 00 00 	bnd jmp QWORD PTR [rip+0xf8c5]        # 11dc0 <bind@GLIBC_2.2.5>
    24fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002500 <sprintf@plt>:
    2500:	f3 0f 1e fa          	endbr64 
    2504:	f2 ff 25 bd f8 00 00 	bnd jmp QWORD PTR [rip+0xf8bd]        # 11dc8 <sprintf@GLIBC_2.2.5>
    250b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002510 <strstr@plt>:
    2510:	f3 0f 1e fa          	endbr64 
    2514:	f2 ff 25 b5 f8 00 00 	bnd jmp QWORD PTR [rip+0xf8b5]        # 11dd0 <strstr@GLIBC_2.2.5>
    251b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002520 <SHA512_Update@plt>:
    2520:	f3 0f 1e fa          	endbr64 
    2524:	f2 ff 25 ad f8 00 00 	bnd jmp QWORD PTR [rip+0xf8ad]        # 11dd8 <SHA512_Update@OPENSSL_1_1_0>
    252b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002530 <getopt@plt>:
    2530:	f3 0f 1e fa          	endbr64 
    2534:	f2 ff 25 a5 f8 00 00 	bnd jmp QWORD PTR [rip+0xf8a5]        # 11de0 <getopt@GLIBC_2.2.5>
    253b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002540 <socket@plt>:
    2540:	f3 0f 1e fa          	endbr64 
    2544:	f2 ff 25 9d f8 00 00 	bnd jmp QWORD PTR [rip+0xf89d]        # 11de8 <socket@GLIBC_2.2.5>
    254b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002550 <accept@plt>:
    2550:	f3 0f 1e fa          	endbr64 
    2554:	f2 ff 25 95 f8 00 00 	bnd jmp QWORD PTR [rip+0xf895]        # 11df0 <accept@GLIBC_2.2.5>
    255b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002560 <luaL_loadfilex@plt>:
    2560:	f3 0f 1e fa          	endbr64 
    2564:	f2 ff 25 8d f8 00 00 	bnd jmp QWORD PTR [rip+0xf88d]        # 11df8 <luaL_loadfilex@LUA_5.3>
    256b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002570 <strchr@plt>:
    2570:	f3 0f 1e fa          	endbr64 
    2574:	f2 ff 25 85 f8 00 00 	bnd jmp QWORD PTR [rip+0xf885]        # 11e00 <strchr@GLIBC_2.2.5>
    257b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002580 <pcap_open_live@plt>:
    2580:	f3 0f 1e fa          	endbr64 
    2584:	f2 ff 25 7d f8 00 00 	bnd jmp QWORD PTR [rip+0xf87d]        # 11e08 <pcap_open_live>
    258b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002590 <SHA512_Final@plt>:
    2590:	f3 0f 1e fa          	endbr64 
    2594:	f2 ff 25 75 f8 00 00 	bnd jmp QWORD PTR [rip+0xf875]        # 11e10 <SHA512_Final@OPENSSL_1_1_0>
    259b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025a0 <strlen@plt>:
    25a0:	f3 0f 1e fa          	endbr64 
    25a4:	f2 ff 25 6d f8 00 00 	bnd jmp QWORD PTR [rip+0xf86d]        # 11e18 <strlen@GLIBC_2.2.5>
    25ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025b0 <inet_ntoa@plt>:
    25b0:	f3 0f 1e fa          	endbr64 
    25b4:	f2 ff 25 65 f8 00 00 	bnd jmp QWORD PTR [rip+0xf865]        # 11e20 <inet_ntoa@GLIBC_2.2.5>
    25bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025c0 <strncmp@plt>:
    25c0:	f3 0f 1e fa          	endbr64 
    25c4:	f2 ff 25 5d f8 00 00 	bnd jmp QWORD PTR [rip+0xf85d]        # 11e28 <strncmp@GLIBC_2.2.5>
    25cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025d0 <send@plt>:
    25d0:	f3 0f 1e fa          	endbr64 
    25d4:	f2 ff 25 55 f8 00 00 	bnd jmp QWORD PTR [rip+0xf855]        # 11e30 <send@GLIBC_2.2.5>
    25db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025e0 <sqlite3_close@plt>:
    25e0:	f3 0f 1e fa          	endbr64 
    25e4:	f2 ff 25 4d f8 00 00 	bnd jmp QWORD PTR [rip+0xf84d]        # 11e38 <sqlite3_close>
    25eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025f0 <strncpy@plt>:
    25f0:	f3 0f 1e fa          	endbr64 
    25f4:	f2 ff 25 45 f8 00 00 	bnd jmp QWORD PTR [rip+0xf845]        # 11e40 <strncpy@GLIBC_2.2.5>
    25fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002600 <lua_close@plt>:
    2600:	f3 0f 1e fa          	endbr64 
    2604:	f2 ff 25 3d f8 00 00 	bnd jmp QWORD PTR [rip+0xf83d]        # 11e48 <lua_close@LUA_5.3>
    260b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002610 <memset@plt>:
    2610:	f3 0f 1e fa          	endbr64 
    2614:	f2 ff 25 35 f8 00 00 	bnd jmp QWORD PTR [rip+0xf835]        # 11e50 <memset@GLIBC_2.2.5>
    261b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002620 <strncat@plt>:
    2620:	f3 0f 1e fa          	endbr64 
    2624:	f2 ff 25 2d f8 00 00 	bnd jmp QWORD PTR [rip+0xf82d]        # 11e58 <strncat@GLIBC_2.2.5>
    262b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002630 <localtime@plt>:
    2630:	f3 0f 1e fa          	endbr64 
    2634:	f2 ff 25 25 f8 00 00 	bnd jmp QWORD PTR [rip+0xf825]        # 11e60 <localtime@GLIBC_2.2.5>
    263b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002640 <sleep@plt>:
    2640:	f3 0f 1e fa          	endbr64 
    2644:	f2 ff 25 1d f8 00 00 	bnd jmp QWORD PTR [rip+0xf81d]        # 11e68 <sleep@GLIBC_2.2.5>
    264b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002650 <htonl@plt>:
    2650:	f3 0f 1e fa          	endbr64 
    2654:	f2 ff 25 15 f8 00 00 	bnd jmp QWORD PTR [rip+0xf815]        # 11e70 <htonl@GLIBC_2.2.5>
    265b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002660 <luaL_openlibs@plt>:
    2660:	f3 0f 1e fa          	endbr64 
    2664:	f2 ff 25 0d f8 00 00 	bnd jmp QWORD PTR [rip+0xf80d]        # 11e78 <luaL_openlibs@LUA_5.3>
    266b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002670 <perror@plt>:
    2670:	f3 0f 1e fa          	endbr64 
    2674:	f2 ff 25 05 f8 00 00 	bnd jmp QWORD PTR [rip+0xf805]        # 11e80 <perror@GLIBC_2.2.5>
    267b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002680 <pthread_join@plt>:
    2680:	f3 0f 1e fa          	endbr64 
    2684:	f2 ff 25 fd f7 00 00 	bnd jmp QWORD PTR [rip+0xf7fd]        # 11e88 <pthread_join@GLIBC_2.34>
    268b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002690 <time@plt>:
    2690:	f3 0f 1e fa          	endbr64 
    2694:	f2 ff 25 f5 f7 00 00 	bnd jmp QWORD PTR [rip+0xf7f5]        # 11e90 <time@GLIBC_2.2.5>
    269b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026a0 <strcpy@plt>:
    26a0:	f3 0f 1e fa          	endbr64 
    26a4:	f2 ff 25 ed f7 00 00 	bnd jmp QWORD PTR [rip+0xf7ed]        # 11e98 <strcpy@GLIBC_2.2.5>
    26ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026b0 <sqlite3_errmsg@plt>:
    26b0:	f3 0f 1e fa          	endbr64 
    26b4:	f2 ff 25 e5 f7 00 00 	bnd jmp QWORD PTR [rip+0xf7e5]        # 11ea0 <sqlite3_errmsg>
    26bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026c0 <fclose@plt>:
    26c0:	f3 0f 1e fa          	endbr64 
    26c4:	f2 ff 25 dd f7 00 00 	bnd jmp QWORD PTR [rip+0xf7dd]        # 11ea8 <fclose@GLIBC_2.2.5>
    26cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026d0 <__stack_chk_fail@plt>:
    26d0:	f3 0f 1e fa          	endbr64 
    26d4:	f2 ff 25 d5 f7 00 00 	bnd jmp QWORD PTR [rip+0xf7d5]        # 11eb0 <__stack_chk_fail@GLIBC_2.4>
    26db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026e0 <fputs@plt>:
    26e0:	f3 0f 1e fa          	endbr64 
    26e4:	f2 ff 25 cd f7 00 00 	bnd jmp QWORD PTR [rip+0xf7cd]        # 11eb8 <fputs@GLIBC_2.2.5>
    26eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026f0 <listen@plt>:
    26f0:	f3 0f 1e fa          	endbr64 
    26f4:	f2 ff 25 c5 f7 00 00 	bnd jmp QWORD PTR [rip+0xf7c5]        # 11ec0 <listen@GLIBC_2.2.5>
    26fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002700 <regcomp@plt>:
    2700:	f3 0f 1e fa          	endbr64 
    2704:	f2 ff 25 bd f7 00 00 	bnd jmp QWORD PTR [rip+0xf7bd]        # 11ec8 <regcomp@GLIBC_2.2.5>
    270b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002710 <fopen@plt>:
    2710:	f3 0f 1e fa          	endbr64 
    2714:	f2 ff 25 b5 f7 00 00 	bnd jmp QWORD PTR [rip+0xf7b5]        # 11ed0 <fopen@GLIBC_2.2.5>
    271b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002720 <signal@plt>:
    2720:	f3 0f 1e fa          	endbr64 
    2724:	f2 ff 25 ad f7 00 00 	bnd jmp QWORD PTR [rip+0xf7ad]        # 11ed8 <signal@GLIBC_2.2.5>
    272b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002730 <free@plt>:
    2730:	f3 0f 1e fa          	endbr64 
    2734:	f2 ff 25 a5 f7 00 00 	bnd jmp QWORD PTR [rip+0xf7a5]        # 11ee0 <free@GLIBC_2.2.5>
    273b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002740 <exit@plt>:
    2740:	f3 0f 1e fa          	endbr64 
    2744:	f2 ff 25 9d f7 00 00 	bnd jmp QWORD PTR [rip+0xf79d]        # 11ee8 <exit@GLIBC_2.2.5>
    274b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002750 <regexec@plt>:
    2750:	f3 0f 1e fa          	endbr64 
    2754:	f2 ff 25 95 f7 00 00 	bnd jmp QWORD PTR [rip+0xf795]        # 11ef0 <regexec@GLIBC_2.3.4>
    275b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002760 <sqlite3_free@plt>:
    2760:	f3 0f 1e fa          	endbr64 
    2764:	f2 ff 25 8d f7 00 00 	bnd jmp QWORD PTR [rip+0xf78d]        # 11ef8 <sqlite3_free>
    276b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002770 <getline@plt>:
    2770:	f3 0f 1e fa          	endbr64 
    2774:	f2 ff 25 85 f7 00 00 	bnd jmp QWORD PTR [rip+0xf785]        # 11f00 <getline@GLIBC_2.2.5>
    277b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002780 <ntohl@plt>:
    2780:	f3 0f 1e fa          	endbr64 
    2784:	f2 ff 25 7d f7 00 00 	bnd jmp QWORD PTR [rip+0xf77d]        # 11f08 <ntohl@GLIBC_2.2.5>
    278b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002790 <malloc@plt>:
    2790:	f3 0f 1e fa          	endbr64 
    2794:	f2 ff 25 75 f7 00 00 	bnd jmp QWORD PTR [rip+0xf775]        # 11f10 <malloc@GLIBC_2.2.5>
    279b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027a0 <sqlite3_exec@plt>:
    27a0:	f3 0f 1e fa          	endbr64 
    27a4:	f2 ff 25 6d f7 00 00 	bnd jmp QWORD PTR [rip+0xf76d]        # 11f18 <sqlite3_exec>
    27ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027b0 <luaL_newstate@plt>:
    27b0:	f3 0f 1e fa          	endbr64 
    27b4:	f2 ff 25 65 f7 00 00 	bnd jmp QWORD PTR [rip+0xf765]        # 11f20 <luaL_newstate@LUA_5.3>
    27bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027c0 <lua_gettop@plt>:
    27c0:	f3 0f 1e fa          	endbr64 
    27c4:	f2 ff 25 5d f7 00 00 	bnd jmp QWORD PTR [rip+0xf75d]        # 11f28 <lua_gettop@LUA_5.3>
    27cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027d0 <putchar@plt>:
    27d0:	f3 0f 1e fa          	endbr64 
    27d4:	f2 ff 25 55 f7 00 00 	bnd jmp QWORD PTR [rip+0xf755]        # 11f30 <putchar@GLIBC_2.2.5>
    27db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027e0 <strcmp@plt>:
    27e0:	f3 0f 1e fa          	endbr64 
    27e4:	f2 ff 25 4d f7 00 00 	bnd jmp QWORD PTR [rip+0xf74d]        # 11f38 <strcmp@GLIBC_2.2.5>
    27eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027f0 <strtol@plt>:
    27f0:	f3 0f 1e fa          	endbr64 
    27f4:	f2 ff 25 45 f7 00 00 	bnd jmp QWORD PTR [rip+0xf745]        # 11f40 <strtol@GLIBC_2.2.5>
    27fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002800 <lua_settop@plt>:
    2800:	f3 0f 1e fa          	endbr64 
    2804:	f2 ff 25 3d f7 00 00 	bnd jmp QWORD PTR [rip+0xf73d]        # 11f48 <lua_settop@LUA_5.3>
    280b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002810 <fprintf@plt>:
    2810:	f3 0f 1e fa          	endbr64 
    2814:	f2 ff 25 35 f7 00 00 	bnd jmp QWORD PTR [rip+0xf735]        # 11f50 <fprintf@GLIBC_2.2.5>
    281b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002820 <read@plt>:
    2820:	f3 0f 1e fa          	endbr64 
    2824:	f2 ff 25 2d f7 00 00 	bnd jmp QWORD PTR [rip+0xf72d]        # 11f58 <read@GLIBC_2.2.5>
    282b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002830 <backtrace@plt>:
    2830:	f3 0f 1e fa          	endbr64 
    2834:	f2 ff 25 25 f7 00 00 	bnd jmp QWORD PTR [rip+0xf725]        # 11f60 <backtrace@GLIBC_2.2.5>
    283b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002840 <backtrace_symbols@plt>:
    2840:	f3 0f 1e fa          	endbr64 
    2844:	f2 ff 25 1d f7 00 00 	bnd jmp QWORD PTR [rip+0xf71d]        # 11f68 <backtrace_symbols@GLIBC_2.2.5>
    284b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002850 <SHA512_Init@plt>:
    2850:	f3 0f 1e fa          	endbr64 
    2854:	f2 ff 25 15 f7 00 00 	bnd jmp QWORD PTR [rip+0xf715]        # 11f70 <SHA512_Init@OPENSSL_1_1_0>
    285b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002860 <puts@plt>:
    2860:	f3 0f 1e fa          	endbr64 
    2864:	f2 ff 25 0d f7 00 00 	bnd jmp QWORD PTR [rip+0xf70d]        # 11f78 <puts@GLIBC_2.2.5>
    286b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002870 <atoi@plt>:
    2870:	f3 0f 1e fa          	endbr64 
    2874:	f2 ff 25 05 f7 00 00 	bnd jmp QWORD PTR [rip+0xf705]        # 11f80 <atoi@GLIBC_2.2.5>
    287b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002880 <strtok@plt>:
    2880:	f3 0f 1e fa          	endbr64 
    2884:	f2 ff 25 fd f6 00 00 	bnd jmp QWORD PTR [rip+0xf6fd]        # 11f88 <strtok@GLIBC_2.2.5>
    288b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002890 <snprintf@plt>:
    2890:	f3 0f 1e fa          	endbr64 
    2894:	f2 ff 25 f5 f6 00 00 	bnd jmp QWORD PTR [rip+0xf6f5]        # 11f90 <snprintf@GLIBC_2.2.5>
    289b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028a0 <getdelim@plt>:
    28a0:	f3 0f 1e fa          	endbr64 
    28a4:	f2 ff 25 ed f6 00 00 	bnd jmp QWORD PTR [rip+0xf6ed]        # 11f98 <getdelim@GLIBC_2.2.5>
    28ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028b0 <lua_pcallk@plt>:
    28b0:	f3 0f 1e fa          	endbr64 
    28b4:	f2 ff 25 e5 f6 00 00 	bnd jmp QWORD PTR [rip+0xf6e5]        # 11fa0 <lua_pcallk@LUA_5.3>
    28bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028c0 <sqlite3_open@plt>:
    28c0:	f3 0f 1e fa          	endbr64 
    28c4:	f2 ff 25 dd f6 00 00 	bnd jmp QWORD PTR [rip+0xf6dd]        # 11fa8 <sqlite3_open>
    28cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028d0 <strcat@plt>:
    28d0:	f3 0f 1e fa          	endbr64 
    28d4:	f2 ff 25 d5 f6 00 00 	bnd jmp QWORD PTR [rip+0xf6d5]        # 11fb0 <strcat@GLIBC_2.2.5>
    28db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028e0 <setsockopt@plt>:
    28e0:	f3 0f 1e fa          	endbr64 
    28e4:	f2 ff 25 cd f6 00 00 	bnd jmp QWORD PTR [rip+0xf6cd]        # 11fb8 <setsockopt@GLIBC_2.2.5>
    28eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028f0 <pthread_create@plt>:
    28f0:	f3 0f 1e fa          	endbr64 
    28f4:	f2 ff 25 c5 f6 00 00 	bnd jmp QWORD PTR [rip+0xf6c5]        # 11fc0 <pthread_create@GLIBC_2.34>
    28fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002900 <ntohs@plt>:
    2900:	f3 0f 1e fa          	endbr64 
    2904:	f2 ff 25 bd f6 00 00 	bnd jmp QWORD PTR [rip+0xf6bd]        # 11fc8 <ntohs@GLIBC_2.2.5>
    290b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002910 <close@plt>:
    2910:	f3 0f 1e fa          	endbr64 
    2914:	f2 ff 25 b5 f6 00 00 	bnd jmp QWORD PTR [rip+0xf6b5]        # 11fd0 <close@GLIBC_2.2.5>
    291b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000002920 <_start>:
    2920:	f3 0f 1e fa          	endbr64 
    2924:	31 ed                	xor    ebp,ebp
    2926:	49 89 d1             	mov    r9,rdx
    2929:	5e                   	pop    rsi
    292a:	48 89 e2             	mov    rdx,rsp
    292d:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    2931:	50                   	push   rax
    2932:	54                   	push   rsp
    2933:	45 31 c0             	xor    r8d,r8d
    2936:	31 c9                	xor    ecx,ecx
    2938:	48 8d 3d 8b 3f 00 00 	lea    rdi,[rip+0x3f8b]        # 68ca <main>
    293f:	ff 15 9b f6 00 00    	call   QWORD PTR [rip+0xf69b]        # 11fe0 <__libc_start_main@GLIBC_2.34>
    2945:	f4                   	hlt    
    2946:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    294d:	00 00 00 

0000000000002950 <deregister_tm_clones>:
    2950:	48 8d 3d 01 f7 00 00 	lea    rdi,[rip+0xf701]        # 12058 <__TMC_END__>
    2957:	48 8d 05 fa f6 00 00 	lea    rax,[rip+0xf6fa]        # 12058 <__TMC_END__>
    295e:	48 39 f8             	cmp    rax,rdi
    2961:	74 15                	je     2978 <deregister_tm_clones+0x28>
    2963:	48 8b 05 7e f6 00 00 	mov    rax,QWORD PTR [rip+0xf67e]        # 11fe8 <_ITM_deregisterTMCloneTable>
    296a:	48 85 c0             	test   rax,rax
    296d:	74 09                	je     2978 <deregister_tm_clones+0x28>
    296f:	ff e0                	jmp    rax
    2971:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    2978:	c3                   	ret    
    2979:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002980 <register_tm_clones>:
    2980:	48 8d 3d d1 f6 00 00 	lea    rdi,[rip+0xf6d1]        # 12058 <__TMC_END__>
    2987:	48 8d 35 ca f6 00 00 	lea    rsi,[rip+0xf6ca]        # 12058 <__TMC_END__>
    298e:	48 29 fe             	sub    rsi,rdi
    2991:	48 89 f0             	mov    rax,rsi
    2994:	48 c1 ee 3f          	shr    rsi,0x3f
    2998:	48 c1 f8 03          	sar    rax,0x3
    299c:	48 01 c6             	add    rsi,rax
    299f:	48 d1 fe             	sar    rsi,1
    29a2:	74 14                	je     29b8 <register_tm_clones+0x38>
    29a4:	48 8b 05 4d f6 00 00 	mov    rax,QWORD PTR [rip+0xf64d]        # 11ff8 <_ITM_registerTMCloneTable>
    29ab:	48 85 c0             	test   rax,rax
    29ae:	74 08                	je     29b8 <register_tm_clones+0x38>
    29b0:	ff e0                	jmp    rax
    29b2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    29b8:	c3                   	ret    
    29b9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000029c0 <__do_global_dtors_aux>:
    29c0:	f3 0f 1e fa          	endbr64 
    29c4:	80 3d 9d f6 00 00 00 	cmp    BYTE PTR [rip+0xf69d],0x0        # 12068 <completed.0>
    29cb:	75 2b                	jne    29f8 <__do_global_dtors_aux+0x38>
    29cd:	55                   	push   rbp
    29ce:	48 83 3d 02 f6 00 00 	cmp    QWORD PTR [rip+0xf602],0x0        # 11fd8 <__cxa_finalize@GLIBC_2.2.5>
    29d5:	00 
    29d6:	48 89 e5             	mov    rbp,rsp
    29d9:	74 0c                	je     29e7 <__do_global_dtors_aux+0x27>
    29db:	48 8b 3d 26 f6 00 00 	mov    rdi,QWORD PTR [rip+0xf626]        # 12008 <__dso_handle>
    29e2:	e8 b9 fa ff ff       	call   24a0 <__cxa_finalize@plt>
    29e7:	e8 64 ff ff ff       	call   2950 <deregister_tm_clones>
    29ec:	c6 05 75 f6 00 00 01 	mov    BYTE PTR [rip+0xf675],0x1        # 12068 <completed.0>
    29f3:	5d                   	pop    rbp
    29f4:	c3                   	ret    
    29f5:	0f 1f 00             	nop    DWORD PTR [rax]
    29f8:	c3                   	ret    
    29f9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002a00 <frame_dummy>:
    2a00:	f3 0f 1e fa          	endbr64 
    2a04:	e9 77 ff ff ff       	jmp    2980 <register_tm_clones>

0000000000002a09 <add_thread>:
    2a09:	f3 0f 1e fa          	endbr64 
    2a0d:	55                   	push   rbp
    2a0e:	48 89 e5             	mov    rbp,rsp
    2a11:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    2a15:	8b 05 85 f8 00 00    	mov    eax,DWORD PTR [rip+0xf885]        # 122a0 <thread_count>
    2a1b:	8d 50 01             	lea    edx,[rax+0x1]
    2a1e:	89 15 7c f8 00 00    	mov    DWORD PTR [rip+0xf87c],edx        # 122a0 <thread_count>
    2a24:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    2a28:	48 8b 12             	mov    rdx,QWORD PTR [rdx]
    2a2b:	48 98                	cdqe   
    2a2d:	48 8d 0c c5 00 00 00 	lea    rcx,[rax*8+0x0]
    2a34:	00 
    2a35:	48 8d 05 64 f6 00 00 	lea    rax,[rip+0xf664]        # 120a0 <threads>
    2a3c:	48 89 14 01          	mov    QWORD PTR [rcx+rax*1],rdx
    2a40:	90                   	nop
    2a41:	5d                   	pop    rbp
    2a42:	c3                   	ret    

0000000000002a43 <pktmgr>:
    2a43:	f3 0f 1e fa          	endbr64 
    2a47:	55                   	push   rbp
    2a48:	48 89 e5             	mov    rbp,rsp
    2a4b:	53                   	push   rbx
    2a4c:	48 83 ec 38          	sub    rsp,0x38
    2a50:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    2a54:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    2a58:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    2a5c:	0f b6 05 01 85 10 00 	movzx  eax,BYTE PTR [rip+0x108501]        # 10af64 <packet_print>
    2a63:	84 c0                	test   al,al
    2a65:	74 0c                	je     2a73 <pktmgr+0x30>
    2a67:	48 8d 3d e2 a5 00 00 	lea    rdi,[rip+0xa5e2]        # d050 <_IO_stdin_used+0x50>
    2a6e:	e8 ed fd ff ff       	call   2860 <puts@plt>
    2a73:	8b 05 2b f8 00 00    	mov    eax,DWORD PTR [rip+0xf82b]        # 122a4 <total_pkt_captured>
    2a79:	83 c0 01             	add    eax,0x1
    2a7c:	89 05 22 f8 00 00    	mov    DWORD PTR [rip+0xf822],eax        # 122a4 <total_pkt_captured>
    2a82:	8b 05 38 f8 00 00    	mov    eax,DWORD PTR [rip+0xf838]        # 122c0 <pkt_counter>
    2a88:	83 c0 01             	add    eax,0x1
    2a8b:	89 05 2f f8 00 00    	mov    DWORD PTR [rip+0xf82f],eax        # 122c0 <pkt_counter>
    2a91:	8b 15 29 f8 00 00    	mov    edx,DWORD PTR [rip+0xf829]        # 122c0 <pkt_counter>
    2a97:	8b 05 c3 84 10 00    	mov    eax,DWORD PTR [rip+0x1084c3]        # 10af60 <clean_delay_pkts>
    2a9d:	39 c2                	cmp    edx,eax
    2a9f:	72 0a                	jb     2aab <pktmgr+0x68>
    2aa1:	c7 05 15 f8 00 00 00 	mov    DWORD PTR [rip+0xf815],0x0        # 122c0 <pkt_counter>
    2aa8:	00 00 00 
    2aab:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2aaf:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    2ab3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2ab7:	0f b7 40 0c          	movzx  eax,WORD PTR [rax+0xc]
    2abb:	0f b7 c0             	movzx  eax,ax
    2abe:	3d 86 dd 00 00       	cmp    eax,0xdd86
    2ac3:	74 46                	je     2b0b <pktmgr+0xc8>
    2ac5:	3d 86 dd 00 00       	cmp    eax,0xdd86
    2aca:	7f 77                	jg     2b43 <pktmgr+0x100>
    2acc:	3d 80 35 00 00       	cmp    eax,0x3580
    2ad1:	74 23                	je     2af6 <pktmgr+0xb3>
    2ad3:	3d 80 35 00 00       	cmp    eax,0x3580
    2ad8:	7f 69                	jg     2b43 <pktmgr+0x100>
    2ada:	3d 08 06 00 00       	cmp    eax,0x608
    2adf:	74 15                	je     2af6 <pktmgr+0xb3>
    2ae1:	3d 08 06 00 00       	cmp    eax,0x608
    2ae6:	7f 5b                	jg     2b43 <pktmgr+0x100>
    2ae8:	83 f8 08             	cmp    eax,0x8
    2aeb:	74 33                	je     2b20 <pktmgr+0xdd>
    2aed:	3d 90 00 00 00       	cmp    eax,0x90
    2af2:	74 41                	je     2b35 <pktmgr+0xf2>
    2af4:	eb 4d                	jmp    2b43 <pktmgr+0x100>
    2af6:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2afa:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2afe:	48 89 d6             	mov    rsi,rdx
    2b01:	48 89 c7             	mov    rdi,rax
    2b04:	e8 86 00 00 00       	call   2b8f <arpdecode>
    2b09:	eb 7d                	jmp    2b88 <pktmgr+0x145>
    2b0b:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2b0f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2b13:	48 89 d6             	mov    rsi,rdx
    2b16:	48 89 c7             	mov    rdi,rax
    2b19:	e8 72 9d 00 00       	call   c890 <ip6decode>
    2b1e:	eb 68                	jmp    2b88 <pktmgr+0x145>
    2b20:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2b24:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2b28:	48 89 d6             	mov    rsi,rdx
    2b2b:	48 89 c7             	mov    rdi,rax
    2b2e:	e8 56 0b 00 00       	call   3689 <ipv4pktmgr>
    2b33:	eb 53                	jmp    2b88 <pktmgr+0x145>
    2b35:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2b39:	48 89 c7             	mov    rdi,rax
    2b3c:	e8 42 03 00 00       	call   2e83 <loopback_ctp_decode>
    2b41:	eb 45                	jmp    2b88 <pktmgr+0x145>
    2b43:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2b47:	48 89 c7             	mov    rdi,rax
    2b4a:	e8 f5 04 00 00       	call   3044 <uc_mac_ntoa>
    2b4f:	48 89 c3             	mov    rbx,rax
    2b52:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2b56:	48 83 c0 06          	add    rax,0x6
    2b5a:	48 89 c7             	mov    rdi,rax
    2b5d:	e8 e2 04 00 00       	call   3044 <uc_mac_ntoa>
    2b62:	41 b9 ff ff ff ff    	mov    r9d,0xffffffff
    2b68:	41 b8 ff ff ff ff    	mov    r8d,0xffffffff
    2b6e:	48 89 d9             	mov    rcx,rbx
    2b71:	48 89 c2             	mov    rdx,rax
    2b74:	48 8d 35 1d a5 00 00 	lea    rsi,[rip+0xa51d]        # d098 <_IO_stdin_used+0x98>
    2b7b:	48 8d 3d 48 a5 00 00 	lea    rdi,[rip+0xa548]        # d0ca <_IO_stdin_used+0xca>
    2b82:	e8 b9 7d 00 00       	call   a940 <lfprintf>
    2b87:	90                   	nop
    2b88:	90                   	nop
    2b89:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    2b8d:	c9                   	leave  
    2b8e:	c3                   	ret    

0000000000002b8f <arpdecode>:
    2b8f:	f3 0f 1e fa          	endbr64 
    2b93:	55                   	push   rbp
    2b94:	48 89 e5             	mov    rbp,rsp
    2b97:	48 81 ec 50 03 00 00 	sub    rsp,0x350
    2b9e:	48 89 bd b8 fc ff ff 	mov    QWORD PTR [rbp-0x348],rdi
    2ba5:	48 89 b5 b0 fc ff ff 	mov    QWORD PTR [rbp-0x350],rsi
    2bac:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2bb3:	00 00 
    2bb5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2bb9:	31 c0                	xor    eax,eax
    2bbb:	0f b6 05 a2 83 10 00 	movzx  eax,BYTE PTR [rip+0x1083a2]        # 10af64 <packet_print>
    2bc2:	84 c0                	test   al,al
    2bc4:	74 18                	je     2bde <arpdecode+0x4f>
    2bc6:	48 8d 35 1b a5 00 00 	lea    rsi,[rip+0xa51b]        # d0e8 <_IO_stdin_used+0xe8>
    2bcd:	48 8d 3d 1c a5 00 00 	lea    rdi,[rip+0xa51c]        # d0f0 <_IO_stdin_used+0xf0>
    2bd4:	b8 00 00 00 00       	mov    eax,0x0
    2bd9:	e8 e2 f8 ff ff       	call   24c0 <printf@plt>
    2bde:	48 8b 85 b8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x348]
    2be5:	48 83 c0 0e          	add    rax,0xe
    2be9:	48 89 85 c8 fc ff ff 	mov    QWORD PTR [rbp-0x338],rax
    2bf0:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2bf7:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    2bfb:	0f b7 c0             	movzx  eax,ax
    2bfe:	3d 00 18 00 00       	cmp    eax,0x1800
    2c03:	74 35                	je     2c3a <arpdecode+0xab>
    2c05:	3d 00 18 00 00       	cmp    eax,0x1800
    2c0a:	0f 8f 1d 02 00 00    	jg     2e2d <arpdecode+0x29e>
    2c10:	3d 00 02 00 00       	cmp    eax,0x200
    2c15:	0f 84 eb 00 00 00    	je     2d06 <arpdecode+0x177>
    2c1b:	3d 00 02 00 00       	cmp    eax,0x200
    2c20:	0f 8f 07 02 00 00    	jg     2e2d <arpdecode+0x29e>
    2c26:	83 f8 02             	cmp    eax,0x2
    2c29:	0f 84 d7 00 00 00    	je     2d06 <arpdecode+0x177>
    2c2f:	3d 00 01 00 00       	cmp    eax,0x100
    2c34:	0f 85 f3 01 00 00    	jne    2e2d <arpdecode+0x29e>
    2c3a:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2c41:	48 83 c0 18          	add    rax,0x18
    2c45:	48 89 c7             	mov    rdi,rax
    2c48:	e8 9d 04 00 00       	call   30ea <u8_ipv4_ntoa>
    2c4d:	48 89 c1             	mov    rcx,rax
    2c50:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2c54:	ba 20 00 00 00       	mov    edx,0x20
    2c59:	48 89 ce             	mov    rsi,rcx
    2c5c:	48 89 c7             	mov    rdi,rax
    2c5f:	e8 8c f9 ff ff       	call   25f0 <strncpy@plt>
    2c64:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2c6b:	48 83 c0 0e          	add    rax,0xe
    2c6f:	48 89 c7             	mov    rdi,rax
    2c72:	e8 73 04 00 00       	call   30ea <u8_ipv4_ntoa>
    2c77:	48 89 c1             	mov    rcx,rax
    2c7a:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2c7e:	ba 20 00 00 00       	mov    edx,0x20
    2c83:	48 89 ce             	mov    rsi,rcx
    2c86:	48 89 c7             	mov    rdi,rax
    2c89:	e8 62 f9 ff ff       	call   25f0 <strncpy@plt>
    2c8e:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2c92:	ba 05 00 00 00       	mov    edx,0x5
    2c97:	48 8d 35 55 a4 00 00 	lea    rsi,[rip+0xa455]        # d0f3 <_IO_stdin_used+0xf3>
    2c9e:	48 89 c7             	mov    rdi,rax
    2ca1:	e8 1a f9 ff ff       	call   25c0 <strncmp@plt>
    2ca6:	85 c0                	test   eax,eax
    2ca8:	75 2c                	jne    2cd6 <arpdecode+0x147>
    2caa:	0f b6 05 b3 82 10 00 	movzx  eax,BYTE PTR [rip+0x1082b3]        # 10af64 <packet_print>
    2cb1:	84 c0                	test   al,al
    2cb3:	0f 84 97 01 00 00    	je     2e50 <arpdecode+0x2c1>
    2cb9:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2cbd:	48 89 c6             	mov    rsi,rax
    2cc0:	48 8d 3d 39 a4 00 00 	lea    rdi,[rip+0xa439]        # d100 <_IO_stdin_used+0x100>
    2cc7:	b8 00 00 00 00       	mov    eax,0x0
    2ccc:	e8 ef f7 ff ff       	call   24c0 <printf@plt>
    2cd1:	e9 7a 01 00 00       	jmp    2e50 <arpdecode+0x2c1>
    2cd6:	0f b6 05 87 82 10 00 	movzx  eax,BYTE PTR [rip+0x108287]        # 10af64 <packet_print>
    2cdd:	84 c0                	test   al,al
    2cdf:	0f 84 6b 01 00 00    	je     2e50 <arpdecode+0x2c1>
    2ce5:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2ce9:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2ced:	48 89 c6             	mov    rsi,rax
    2cf0:	48 8d 3d 29 a4 00 00 	lea    rdi,[rip+0xa429]        # d120 <_IO_stdin_used+0x120>
    2cf7:	b8 00 00 00 00       	mov    eax,0x0
    2cfc:	e8 bf f7 ff ff       	call   24c0 <printf@plt>
    2d01:	e9 4a 01 00 00       	jmp    2e50 <arpdecode+0x2c1>
    2d06:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2d0d:	48 83 c0 08          	add    rax,0x8
    2d11:	48 89 c7             	mov    rdi,rax
    2d14:	e8 7d 02 00 00       	call   2f96 <mac_ntoa>
    2d19:	48 89 c1             	mov    rcx,rax
    2d1c:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2d20:	ba 40 00 00 00       	mov    edx,0x40
    2d25:	48 89 ce             	mov    rsi,rcx
    2d28:	48 89 c7             	mov    rdi,rax
    2d2b:	e8 c0 f8 ff ff       	call   25f0 <strncpy@plt>
    2d30:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2d37:	48 83 c0 0e          	add    rax,0xe
    2d3b:	48 89 c7             	mov    rdi,rax
    2d3e:	e8 a7 03 00 00       	call   30ea <u8_ipv4_ntoa>
    2d43:	48 89 c1             	mov    rcx,rax
    2d46:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d4a:	ba 20 00 00 00       	mov    edx,0x20
    2d4f:	48 89 ce             	mov    rsi,rcx
    2d52:	48 89 c7             	mov    rdi,rax
    2d55:	e8 96 f8 ff ff       	call   25f0 <strncpy@plt>
    2d5a:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2d5e:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d62:	48 89 d6             	mov    rsi,rdx
    2d65:	48 89 c7             	mov    rdi,rax
    2d68:	e8 e8 68 00 00       	call   9655 <entry_exists>
    2d6d:	83 f8 ff             	cmp    eax,0xffffffff
    2d70:	74 15                	je     2d87 <arpdecode+0x1f8>
    2d72:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2d76:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d7a:	48 89 d6             	mov    rsi,rdx
    2d7d:	48 89 c7             	mov    rdi,rax
    2d80:	e8 7d 67 00 00       	call   9502 <compare_entries>
    2d85:	eb 7d                	jmp    2e04 <arpdecode+0x275>
    2d87:	0f b6 05 93 81 10 00 	movzx  eax,BYTE PTR [rip+0x108193]        # 10af21 <use_sqlite>
    2d8e:	84 c0                	test   al,al
    2d90:	74 5f                	je     2df1 <arpdecode+0x262>
    2d92:	c7 85 f4 fc ff ff 00 	mov    DWORD PTR [rbp-0x30c],0x0
    2d99:	00 00 00 
    2d9c:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    2da0:	48 8d 85 d0 fc ff ff 	lea    rax,[rbp-0x330]
    2da7:	48 89 d6             	mov    rsi,rdx
    2daa:	48 89 c7             	mov    rdi,rax
    2dad:	e8 ee f8 ff ff       	call   26a0 <strcpy@plt>
    2db2:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2db6:	48 8d 95 d0 fc ff ff 	lea    rdx,[rbp-0x330]
    2dbd:	48 83 c2 10          	add    rdx,0x10
    2dc1:	48 89 c6             	mov    rsi,rax
    2dc4:	48 89 d7             	mov    rdi,rdx
    2dc7:	e8 d4 f8 ff ff       	call   26a0 <strcpy@plt>
    2dcc:	48 8d 95 d0 fc ff ff 	lea    rdx,[rbp-0x330]
    2dd3:	48 8d 85 c0 fc ff ff 	lea    rax,[rbp-0x340]
    2dda:	48 89 d1             	mov    rcx,rdx
    2ddd:	48 8d 15 d0 6a 00 00 	lea    rdx,[rip+0x6ad0]        # 98b4 <update_db>
    2de4:	be 00 00 00 00       	mov    esi,0x0
    2de9:	48 89 c7             	mov    rdi,rax
    2dec:	e8 ff fa ff ff       	call   28f0 <pthread_create@plt>
    2df1:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2df5:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2df9:	48 89 d6             	mov    rsi,rdx
    2dfc:	48 89 c7             	mov    rdi,rax
    2dff:	e8 dd 67 00 00       	call   95e1 <add_entry>
    2e04:	0f b6 05 59 81 10 00 	movzx  eax,BYTE PTR [rip+0x108159]        # 10af64 <packet_print>
    2e0b:	84 c0                	test   al,al
    2e0d:	74 44                	je     2e53 <arpdecode+0x2c4>
    2e0f:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2e13:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2e17:	48 89 c6             	mov    rsi,rax
    2e1a:	48 8d 3d 27 a3 00 00 	lea    rdi,[rip+0xa327]        # d148 <_IO_stdin_used+0x148>
    2e21:	b8 00 00 00 00       	mov    eax,0x0
    2e26:	e8 95 f6 ff ff       	call   24c0 <printf@plt>
    2e2b:	eb 26                	jmp    2e53 <arpdecode+0x2c4>
    2e2d:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2e34:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    2e38:	0f b7 c0             	movzx  eax,ax
    2e3b:	89 c6                	mov    esi,eax
    2e3d:	48 8d 3d 23 a3 00 00 	lea    rdi,[rip+0xa323]        # d167 <_IO_stdin_used+0x167>
    2e44:	b8 00 00 00 00       	mov    eax,0x0
    2e49:	e8 72 f6 ff ff       	call   24c0 <printf@plt>
    2e4e:	eb 04                	jmp    2e54 <arpdecode+0x2c5>
    2e50:	90                   	nop
    2e51:	eb 01                	jmp    2e54 <arpdecode+0x2c5>
    2e53:	90                   	nop
    2e54:	48 8d 35 24 a3 00 00 	lea    rsi,[rip+0xa324]        # d17f <_IO_stdin_used+0x17f>
    2e5b:	48 8d 3d 8e a2 00 00 	lea    rdi,[rip+0xa28e]        # d0f0 <_IO_stdin_used+0xf0>
    2e62:	b8 00 00 00 00       	mov    eax,0x0
    2e67:	e8 54 f6 ff ff       	call   24c0 <printf@plt>
    2e6c:	90                   	nop
    2e6d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2e71:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    2e78:	00 00 
    2e7a:	74 05                	je     2e81 <arpdecode+0x2f2>
    2e7c:	e8 4f f8 ff ff       	call   26d0 <__stack_chk_fail@plt>
    2e81:	c9                   	leave  
    2e82:	c3                   	ret    

0000000000002e83 <loopback_ctp_decode>:
    2e83:	f3 0f 1e fa          	endbr64 
    2e87:	55                   	push   rbp
    2e88:	48 89 e5             	mov    rbp,rsp
    2e8b:	48 83 ec 60          	sub    rsp,0x60
    2e8f:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    2e93:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2e9a:	00 00 
    2e9c:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2ea0:	31 c0                	xor    eax,eax
    2ea2:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    2ea6:	48 83 c0 0e          	add    rax,0xe
    2eaa:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    2eae:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    2eb2:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    2eb6:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    2eba:	48 83 c0 06          	add    rax,0x6
    2ebe:	48 89 c7             	mov    rdi,rax
    2ec1:	e8 7e 01 00 00       	call   3044 <uc_mac_ntoa>
    2ec6:	48 89 c1             	mov    rcx,rax
    2ec9:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    2ecd:	ba 18 00 00 00       	mov    edx,0x18
    2ed2:	48 89 ce             	mov    rsi,rcx
    2ed5:	48 89 c7             	mov    rdi,rax
    2ed8:	e8 13 f7 ff ff       	call   25f0 <strncpy@plt>
    2edd:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    2ee1:	48 89 c7             	mov    rdi,rax
    2ee4:	e8 5b 01 00 00       	call   3044 <uc_mac_ntoa>
    2ee9:	48 89 c1             	mov    rcx,rax
    2eec:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    2ef0:	ba 18 00 00 00       	mov    edx,0x18
    2ef5:	48 89 ce             	mov    rsi,rcx
    2ef8:	48 89 c7             	mov    rdi,rax
    2efb:	e8 f0 f6 ff ff       	call   25f0 <strncpy@plt>
    2f00:	0f b6 05 5d 80 10 00 	movzx  eax,BYTE PTR [rip+0x10805d]        # 10af64 <packet_print>
    2f07:	84 c0                	test   al,al
    2f09:	74 1c                	je     2f27 <loopback_ctp_decode+0xa4>
    2f0b:	48 8d 55 e0          	lea    rdx,[rbp-0x20]
    2f0f:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    2f13:	48 89 c6             	mov    rsi,rax
    2f16:	48 8d 3d 67 a2 00 00 	lea    rdi,[rip+0xa267]        # d184 <_IO_stdin_used+0x184>
    2f1d:	b8 00 00 00 00       	mov    eax,0x0
    2f22:	e8 99 f5 ff ff       	call   24c0 <printf@plt>
    2f27:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    2f2b:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    2f2f:	0f b7 c0             	movzx  eax,ax
    2f32:	83 f8 01             	cmp    eax,0x1
    2f35:	75 19                	jne    2f50 <loopback_ctp_decode+0xcd>
    2f37:	0f b6 05 26 80 10 00 	movzx  eax,BYTE PTR [rip+0x108026]        # 10af64 <packet_print>
    2f3e:	84 c0                	test   al,al
    2f40:	74 39                	je     2f7b <loopback_ctp_decode+0xf8>
    2f42:	48 8d 3d 49 a2 00 00 	lea    rdi,[rip+0xa249]        # d192 <_IO_stdin_used+0x192>
    2f49:	e8 12 f9 ff ff       	call   2860 <puts@plt>
    2f4e:	eb 2b                	jmp    2f7b <loopback_ctp_decode+0xf8>
    2f50:	0f b6 05 0d 80 10 00 	movzx  eax,BYTE PTR [rip+0x10800d]        # 10af64 <packet_print>
    2f57:	84 c0                	test   al,al
    2f59:	74 23                	je     2f7e <loopback_ctp_decode+0xfb>
    2f5b:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    2f5f:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    2f63:	0f b7 c0             	movzx  eax,ax
    2f66:	89 c6                	mov    esi,eax
    2f68:	48 8d 3d 2b a2 00 00 	lea    rdi,[rip+0xa22b]        # d19a <_IO_stdin_used+0x19a>
    2f6f:	b8 00 00 00 00       	mov    eax,0x0
    2f74:	e8 47 f5 ff ff       	call   24c0 <printf@plt>
    2f79:	eb 03                	jmp    2f7e <loopback_ctp_decode+0xfb>
    2f7b:	90                   	nop
    2f7c:	eb 01                	jmp    2f7f <loopback_ctp_decode+0xfc>
    2f7e:	90                   	nop
    2f7f:	90                   	nop
    2f80:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f84:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    2f8b:	00 00 
    2f8d:	74 05                	je     2f94 <loopback_ctp_decode+0x111>
    2f8f:	e8 3c f7 ff ff       	call   26d0 <__stack_chk_fail@plt>
    2f94:	c9                   	leave  
    2f95:	c3                   	ret    

0000000000002f96 <mac_ntoa>:
    2f96:	f3 0f 1e fa          	endbr64 
    2f9a:	55                   	push   rbp
    2f9b:	48 89 e5             	mov    rbp,rsp
    2f9e:	48 83 ec 20          	sub    rsp,0x20
    2fa2:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    2fa6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2faa:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2fae:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fb2:	48 83 c0 05          	add    rax,0x5
    2fb6:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fb9:	0f b6 f0             	movzx  esi,al
    2fbc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fc0:	48 83 c0 04          	add    rax,0x4
    2fc4:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fc7:	0f b6 c8             	movzx  ecx,al
    2fca:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fce:	48 83 c0 03          	add    rax,0x3
    2fd2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fd5:	0f b6 d0             	movzx  edx,al
    2fd8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fdc:	48 83 c0 02          	add    rax,0x2
    2fe0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fe3:	44 0f b6 c8          	movzx  r9d,al
    2fe7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2feb:	48 83 c0 01          	add    rax,0x1
    2fef:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2ff2:	44 0f b6 c0          	movzx  r8d,al
    2ff6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2ffa:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2ffd:	0f b6 c0             	movzx  eax,al
    3000:	64 48 8b 3c 25 00 00 	mov    rdi,QWORD PTR fs:0x0
    3007:	00 00 
    3009:	48 81 c7 80 6b fe ff 	add    rdi,0xfffffffffffe6b80
    3010:	48 83 ec 08          	sub    rsp,0x8
    3014:	56                   	push   rsi
    3015:	51                   	push   rcx
    3016:	52                   	push   rdx
    3017:	89 c1                	mov    ecx,eax
    3019:	48 8d 15 98 a1 00 00 	lea    rdx,[rip+0xa198]        # d1b8 <_IO_stdin_used+0x1b8>
    3020:	be 80 00 00 00       	mov    esi,0x80
    3025:	b8 00 00 00 00       	mov    eax,0x0
    302a:	e8 61 f8 ff ff       	call   2890 <snprintf@plt>
    302f:	48 83 c4 20          	add    rsp,0x20
    3033:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    303a:	00 00 
    303c:	48 05 80 6b fe ff    	add    rax,0xfffffffffffe6b80
    3042:	c9                   	leave  
    3043:	c3                   	ret    

0000000000003044 <uc_mac_ntoa>:
    3044:	f3 0f 1e fa          	endbr64 
    3048:	55                   	push   rbp
    3049:	48 89 e5             	mov    rbp,rsp
    304c:	48 83 ec 10          	sub    rsp,0x10
    3050:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    3054:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3058:	48 83 c0 05          	add    rax,0x5
    305c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    305f:	0f b6 f0             	movzx  esi,al
    3062:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3066:	48 83 c0 04          	add    rax,0x4
    306a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    306d:	0f b6 c8             	movzx  ecx,al
    3070:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3074:	48 83 c0 03          	add    rax,0x3
    3078:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    307b:	0f b6 d0             	movzx  edx,al
    307e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3082:	48 83 c0 02          	add    rax,0x2
    3086:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3089:	44 0f b6 c8          	movzx  r9d,al
    308d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3091:	48 83 c0 01          	add    rax,0x1
    3095:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3098:	44 0f b6 c0          	movzx  r8d,al
    309c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    30a0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    30a3:	0f b6 c0             	movzx  eax,al
    30a6:	64 48 8b 3c 25 00 00 	mov    rdi,QWORD PTR fs:0x0
    30ad:	00 00 
    30af:	48 81 c7 80 6b fe ff 	add    rdi,0xfffffffffffe6b80
    30b6:	48 83 ec 08          	sub    rsp,0x8
    30ba:	56                   	push   rsi
    30bb:	51                   	push   rcx
    30bc:	52                   	push   rdx
    30bd:	89 c1                	mov    ecx,eax
    30bf:	48 8d 15 f2 a0 00 00 	lea    rdx,[rip+0xa0f2]        # d1b8 <_IO_stdin_used+0x1b8>
    30c6:	be 80 00 00 00       	mov    esi,0x80
    30cb:	b8 00 00 00 00       	mov    eax,0x0
    30d0:	e8 bb f7 ff ff       	call   2890 <snprintf@plt>
    30d5:	48 83 c4 20          	add    rsp,0x20
    30d9:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    30e0:	00 00 
    30e2:	48 05 80 6b fe ff    	add    rax,0xfffffffffffe6b80
    30e8:	c9                   	leave  
    30e9:	c3                   	ret    

00000000000030ea <u8_ipv4_ntoa>:
    30ea:	f3 0f 1e fa          	endbr64 
    30ee:	55                   	push   rbp
    30ef:	48 89 e5             	mov    rbp,rsp
    30f2:	48 83 ec 20          	sub    rsp,0x20
    30f6:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    30fa:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    30fe:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3102:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3106:	48 83 c0 03          	add    rax,0x3
    310a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    310d:	0f b6 d0             	movzx  edx,al
    3110:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3114:	48 83 c0 02          	add    rax,0x2
    3118:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    311b:	44 0f b6 c0          	movzx  r8d,al
    311f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3123:	48 83 c0 01          	add    rax,0x1
    3127:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    312a:	0f b6 f0             	movzx  esi,al
    312d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3131:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3134:	0f b6 c0             	movzx  eax,al
    3137:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    313e:	00 00 
    3140:	48 8d b9 80 6b fe ff 	lea    rdi,[rcx-0x19480]
    3147:	48 83 ec 08          	sub    rsp,0x8
    314b:	52                   	push   rdx
    314c:	45 89 c1             	mov    r9d,r8d
    314f:	41 89 f0             	mov    r8d,esi
    3152:	89 c1                	mov    ecx,eax
    3154:	48 8d 15 7b a0 00 00 	lea    rdx,[rip+0xa07b]        # d1d6 <_IO_stdin_used+0x1d6>
    315b:	be 80 00 00 00       	mov    esi,0x80
    3160:	b8 00 00 00 00       	mov    eax,0x0
    3165:	e8 26 f7 ff ff       	call   2890 <snprintf@plt>
    316a:	48 83 c4 10          	add    rsp,0x10
    316e:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3175:	00 00 
    3177:	48 05 80 6b fe ff    	add    rax,0xfffffffffffe6b80
    317d:	c9                   	leave  
    317e:	c3                   	ret    

000000000000317f <ipv4_ntoa>:
    317f:	f3 0f 1e fa          	endbr64 
    3183:	55                   	push   rbp
    3184:	48 89 e5             	mov    rbp,rsp
    3187:	48 83 ec 20          	sub    rsp,0x20
    318b:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    318e:	48 8d 45 ec          	lea    rax,[rbp-0x14]
    3192:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3196:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    319a:	48 83 c0 03          	add    rax,0x3
    319e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31a1:	0f b6 d0             	movzx  edx,al
    31a4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    31a8:	48 83 c0 02          	add    rax,0x2
    31ac:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31af:	44 0f b6 c0          	movzx  r8d,al
    31b3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    31b7:	48 83 c0 01          	add    rax,0x1
    31bb:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31be:	0f b6 f0             	movzx  esi,al
    31c1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    31c5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31c8:	0f b6 c0             	movzx  eax,al
    31cb:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    31d2:	00 00 
    31d4:	48 8d b9 80 6b fe ff 	lea    rdi,[rcx-0x19480]
    31db:	48 83 ec 08          	sub    rsp,0x8
    31df:	52                   	push   rdx
    31e0:	45 89 c1             	mov    r9d,r8d
    31e3:	41 89 f0             	mov    r8d,esi
    31e6:	89 c1                	mov    ecx,eax
    31e8:	48 8d 15 e7 9f 00 00 	lea    rdx,[rip+0x9fe7]        # d1d6 <_IO_stdin_used+0x1d6>
    31ef:	be 80 00 00 00       	mov    esi,0x80
    31f4:	b8 00 00 00 00       	mov    eax,0x0
    31f9:	e8 92 f6 ff ff       	call   2890 <snprintf@plt>
    31fe:	48 83 c4 10          	add    rsp,0x10
    3202:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3209:	00 00 
    320b:	48 05 80 6b fe ff    	add    rax,0xfffffffffffe6b80
    3211:	c9                   	leave  
    3212:	c3                   	ret    

0000000000003213 <inet6_ntoa>:
    3213:	f3 0f 1e fa          	endbr64 
    3217:	55                   	push   rbp
    3218:	48 89 e5             	mov    rbp,rsp
    321b:	41 57                	push   r15
    321d:	41 56                	push   r14
    321f:	41 55                	push   r13
    3221:	41 54                	push   r12
    3223:	53                   	push   rbx
    3224:	48 83 ec 38          	sub    rsp,0x38
    3228:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    322c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3233:	00 00 
    3235:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    3239:	31 c0                	xor    eax,eax
    323b:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3242:	00 00 
    3244:	48 05 80 6b fe ff    	add    rax,0xfffffffffffe6b80
    324a:	ba 80 00 00 00       	mov    edx,0x80
    324f:	be 00 00 00 00       	mov    esi,0x0
    3254:	48 89 c7             	mov    rdi,rax
    3257:	e8 b4 f3 ff ff       	call   2610 <memset@plt>
    325c:	48 c7 45 c0 00 00 00 	mov    QWORD PTR [rbp-0x40],0x0
    3263:	00 
    3264:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3268:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    326c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3270:	48 83 c0 0f          	add    rax,0xf
    3274:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3277:	0f b6 c8             	movzx  ecx,al
    327a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    327e:	48 83 c0 0e          	add    rax,0xe
    3282:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3285:	0f b6 f8             	movzx  edi,al
    3288:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    328c:	48 83 c0 0d          	add    rax,0xd
    3290:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3293:	0f b6 c0             	movzx  eax,al
    3296:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
    3299:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    329d:	48 83 c0 0c          	add    rax,0xc
    32a1:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32a4:	0f b6 d8             	movzx  ebx,al
    32a7:	89 5d b0             	mov    DWORD PTR [rbp-0x50],ebx
    32aa:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32ae:	48 83 c0 0b          	add    rax,0xb
    32b2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32b5:	44 0f b6 f8          	movzx  r15d,al
    32b9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32bd:	48 83 c0 0a          	add    rax,0xa
    32c1:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32c4:	44 0f b6 f0          	movzx  r14d,al
    32c8:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32cc:	48 83 c0 09          	add    rax,0x9
    32d0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32d3:	44 0f b6 e8          	movzx  r13d,al
    32d7:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32db:	48 83 c0 08          	add    rax,0x8
    32df:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32e2:	44 0f b6 e0          	movzx  r12d,al
    32e6:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32ea:	48 83 c0 07          	add    rax,0x7
    32ee:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32f1:	0f b6 d8             	movzx  ebx,al
    32f4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32f8:	48 83 c0 06          	add    rax,0x6
    32fc:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32ff:	44 0f b6 d8          	movzx  r11d,al
    3303:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3307:	48 83 c0 05          	add    rax,0x5
    330b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    330e:	44 0f b6 d0          	movzx  r10d,al
    3312:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3316:	48 83 c0 04          	add    rax,0x4
    331a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    331d:	44 0f b6 c8          	movzx  r9d,al
    3321:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3325:	48 83 c0 03          	add    rax,0x3
    3329:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    332c:	44 0f b6 c0          	movzx  r8d,al
    3330:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3334:	48 83 c0 02          	add    rax,0x2
    3338:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    333b:	0f b6 d0             	movzx  edx,al
    333e:	89 55 ac             	mov    DWORD PTR [rbp-0x54],edx
    3341:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3345:	48 83 c0 01          	add    rax,0x1
    3349:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    334c:	0f b6 f0             	movzx  esi,al
    334f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3353:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3356:	0f b6 d0             	movzx  edx,al
    3359:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3360:	00 00 
    3362:	48 05 80 6b fe ff    	add    rax,0xfffffffffffe6b80
    3368:	48 83 ec 08          	sub    rsp,0x8
    336c:	51                   	push   rcx
    336d:	57                   	push   rdi
    336e:	8b 4d b4             	mov    ecx,DWORD PTR [rbp-0x4c]
    3371:	51                   	push   rcx
    3372:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
    3375:	51                   	push   rcx
    3376:	41 57                	push   r15
    3378:	41 56                	push   r14
    337a:	41 55                	push   r13
    337c:	41 54                	push   r12
    337e:	53                   	push   rbx
    337f:	41 53                	push   r11
    3381:	41 52                	push   r10
    3383:	41 51                	push   r9
    3385:	41 50                	push   r8
    3387:	44 8b 4d ac          	mov    r9d,DWORD PTR [rbp-0x54]
    338b:	41 89 f0             	mov    r8d,esi
    338e:	89 d1                	mov    ecx,edx
    3390:	48 8d 15 51 9e 00 00 	lea    rdx,[rip+0x9e51]        # d1e8 <_IO_stdin_used+0x1e8>
    3397:	be 80 00 00 00       	mov    esi,0x80
    339c:	48 89 c7             	mov    rdi,rax
    339f:	b8 00 00 00 00       	mov    eax,0x0
    33a4:	e8 e7 f4 ff ff       	call   2890 <snprintf@plt>
    33a9:	48 83 c4 70          	add    rsp,0x70
    33ad:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    33b4:	00 00 
    33b6:	48 05 80 6b fe ff    	add    rax,0xfffffffffffe6b80
    33bc:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    33c0:	64 48 2b 34 25 28 00 	sub    rsi,QWORD PTR fs:0x28
    33c7:	00 00 
    33c9:	74 05                	je     33d0 <inet6_ntoa+0x1bd>
    33cb:	e8 00 f3 ff ff       	call   26d0 <__stack_chk_fail@plt>
    33d0:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    33d4:	5b                   	pop    rbx
    33d5:	41 5c                	pop    r12
    33d7:	41 5d                	pop    r13
    33d9:	41 5e                	pop    r14
    33db:	41 5f                	pop    r15
    33dd:	5d                   	pop    rbp
    33de:	c3                   	ret    

00000000000033df <get_formated_time>:
    33df:	f3 0f 1e fa          	endbr64 
    33e3:	55                   	push   rbp
    33e4:	48 89 e5             	mov    rbp,rsp
    33e7:	53                   	push   rbx
    33e8:	48 83 ec 58          	sub    rsp,0x58
    33ec:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    33f3:	00 00 
    33f5:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    33f9:	31 c0                	xor    eax,eax
    33fb:	bf ff 00 00 00       	mov    edi,0xff
    3400:	e8 8b f3 ff ff       	call   2790 <malloc@plt>
    3405:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    3409:	bf 00 00 00 00       	mov    edi,0x0
    340e:	e8 7d f2 ff ff       	call   2690 <time@plt>
    3413:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    3417:	48 8d 45 a0          	lea    rax,[rbp-0x60]
    341b:	48 89 c7             	mov    rdi,rax
    341e:	e8 0d f2 ff ff       	call   2630 <localtime@plt>
    3423:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    3426:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    342a:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
    342e:	48 89 5d b8          	mov    QWORD PTR [rbp-0x48],rbx
    3432:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    3436:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    343a:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    343e:	48 89 5d c8          	mov    QWORD PTR [rbp-0x38],rbx
    3442:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    3446:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    344a:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    344e:	48 89 5d d8          	mov    QWORD PTR [rbp-0x28],rbx
    3452:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    3456:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    345a:	8b 7d b0             	mov    edi,DWORD PTR [rbp-0x50]
    345d:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
    3460:	44 8b 4d b8          	mov    r9d,DWORD PTR [rbp-0x48]
    3464:	44 8b 45 bc          	mov    r8d,DWORD PTR [rbp-0x44]
    3468:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    346b:	8d 48 01             	lea    ecx,[rax+0x1]
    346e:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    3471:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    3477:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    347b:	57                   	push   rdi
    347c:	56                   	push   rsi
    347d:	48 8d 35 ac 9d 00 00 	lea    rsi,[rip+0x9dac]        # d230 <_IO_stdin_used+0x230>
    3484:	48 89 c7             	mov    rdi,rax
    3487:	b8 00 00 00 00       	mov    eax,0x0
    348c:	e8 6f f0 ff ff       	call   2500 <sprintf@plt>
    3491:	48 83 c4 10          	add    rsp,0x10
    3495:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3499:	48 8b 5d e8          	mov    rbx,QWORD PTR [rbp-0x18]
    349d:	64 48 2b 1c 25 28 00 	sub    rbx,QWORD PTR fs:0x28
    34a4:	00 00 
    34a6:	74 05                	je     34ad <get_formated_time+0xce>
    34a8:	e8 23 f2 ff ff       	call   26d0 <__stack_chk_fail@plt>
    34ad:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    34b1:	c9                   	leave  
    34b2:	c3                   	ret    

00000000000034b3 <cb_get_formatted_time>:
    34b3:	f3 0f 1e fa          	endbr64 
    34b7:	55                   	push   rbp
    34b8:	48 89 e5             	mov    rbp,rsp
    34bb:	53                   	push   rbx
    34bc:	48 83 ec 68          	sub    rsp,0x68
    34c0:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    34c4:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    34cb:	00 00 
    34cd:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    34d1:	31 c0                	xor    eax,eax
    34d3:	bf 00 00 00 00       	mov    edi,0x0
    34d8:	e8 b3 f1 ff ff       	call   2690 <time@plt>
    34dd:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    34e1:	48 8d 45 a8          	lea    rax,[rbp-0x58]
    34e5:	48 89 c7             	mov    rdi,rax
    34e8:	e8 43 f1 ff ff       	call   2630 <localtime@plt>
    34ed:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    34f0:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    34f4:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
    34f8:	48 89 5d b8          	mov    QWORD PTR [rbp-0x48],rbx
    34fc:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    3500:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    3504:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    3508:	48 89 5d c8          	mov    QWORD PTR [rbp-0x38],rbx
    350c:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    3510:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    3514:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    3518:	48 89 5d d8          	mov    QWORD PTR [rbp-0x28],rbx
    351c:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    3520:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    3524:	8b 7d b0             	mov    edi,DWORD PTR [rbp-0x50]
    3527:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
    352a:	44 8b 4d b8          	mov    r9d,DWORD PTR [rbp-0x48]
    352e:	44 8b 45 bc          	mov    r8d,DWORD PTR [rbp-0x44]
    3532:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    3535:	8d 48 01             	lea    ecx,[rax+0x1]
    3538:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    353b:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    3541:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    3545:	57                   	push   rdi
    3546:	56                   	push   rsi
    3547:	48 8d 35 e2 9c 00 00 	lea    rsi,[rip+0x9ce2]        # d230 <_IO_stdin_used+0x230>
    354e:	48 89 c7             	mov    rdi,rax
    3551:	b8 00 00 00 00       	mov    eax,0x0
    3556:	e8 a5 ef ff ff       	call   2500 <sprintf@plt>
    355b:	48 83 c4 10          	add    rsp,0x10
    355f:	90                   	nop
    3560:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    3564:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    356b:	00 00 
    356d:	74 05                	je     3574 <cb_get_formatted_time+0xc1>
    356f:	e8 5c f1 ff ff       	call   26d0 <__stack_chk_fail@plt>
    3574:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    3578:	c9                   	leave  
    3579:	c3                   	ret    

000000000000357a <strloc>:
    357a:	f3 0f 1e fa          	endbr64 
    357e:	55                   	push   rbp
    357f:	48 89 e5             	mov    rbp,rsp
    3582:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    3586:	89 f0                	mov    eax,esi
    3588:	88 45 e4             	mov    BYTE PTR [rbp-0x1c],al
    358b:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    3592:	eb 1e                	jmp    35b2 <strloc+0x38>
    3594:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    3597:	48 63 d0             	movsxd rdx,eax
    359a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    359e:	48 01 d0             	add    rax,rdx
    35a1:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    35a4:	38 45 e4             	cmp    BYTE PTR [rbp-0x1c],al
    35a7:	75 05                	jne    35ae <strloc+0x34>
    35a9:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    35ac:	eb 1d                	jmp    35cb <strloc+0x51>
    35ae:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    35b2:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    35b5:	48 63 d0             	movsxd rdx,eax
    35b8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    35bc:	48 01 d0             	add    rax,rdx
    35bf:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    35c2:	84 c0                	test   al,al
    35c4:	75 ce                	jne    3594 <strloc+0x1a>
    35c6:	b8 ff ff ff ff       	mov    eax,0xffffffff
    35cb:	5d                   	pop    rbp
    35cc:	c3                   	ret    

00000000000035cd <fail>:
    35cd:	f3 0f 1e fa          	endbr64 
    35d1:	55                   	push   rbp
    35d2:	48 89 e5             	mov    rbp,rsp
    35d5:	48 83 ec 10          	sub    rsp,0x10
    35d9:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    35dd:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    35e1:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    35e5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    35e9:	48 89 c6             	mov    rsi,rax
    35ec:	48 8d 3d 59 9c 00 00 	lea    rdi,[rip+0x9c59]        # d24c <_IO_stdin_used+0x24c>
    35f3:	b8 00 00 00 00       	mov    eax,0x0
    35f8:	e8 c3 ee ff ff       	call   24c0 <printf@plt>
    35fd:	90                   	nop
    35fe:	c9                   	leave  
    35ff:	c3                   	ret    

0000000000003600 <char_is_printable>:
    3600:	f3 0f 1e fa          	endbr64 
    3604:	55                   	push   rbp
    3605:	48 89 e5             	mov    rbp,rsp
    3608:	89 f8                	mov    eax,edi
    360a:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
    360d:	80 7d fc 1f          	cmp    BYTE PTR [rbp-0x4],0x1f
    3611:	7f 07                	jg     361a <char_is_printable+0x1a>
    3613:	b8 00 00 00 00       	mov    eax,0x0
    3618:	eb 05                	jmp    361f <char_is_printable+0x1f>
    361a:	b8 01 00 00 00       	mov    eax,0x1
    361f:	5d                   	pop    rbp
    3620:	c3                   	ret    

0000000000003621 <test_string_arr_print>:
    3621:	f3 0f 1e fa          	endbr64 
    3625:	55                   	push   rbp
    3626:	48 89 e5             	mov    rbp,rsp
    3629:	53                   	push   rbx
    362a:	48 83 ec 28          	sub    rsp,0x28
    362e:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    3632:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    3639:	eb 2c                	jmp    3667 <test_string_arr_print+0x46>
    363b:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    363e:	48 63 d0             	movsxd rdx,eax
    3641:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    3645:	48 01 d0             	add    rax,rdx
    3648:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    364b:	0f be c0             	movsx  eax,al
    364e:	89 c7                	mov    edi,eax
    3650:	e8 ab ff ff ff       	call   3600 <char_is_printable>
    3655:	83 f0 01             	xor    eax,0x1
    3658:	84 c0                	test   al,al
    365a:	74 07                	je     3663 <test_string_arr_print+0x42>
    365c:	b8 00 00 00 00       	mov    eax,0x0
    3661:	eb 20                	jmp    3683 <test_string_arr_print+0x62>
    3663:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    3667:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    366a:	48 63 d8             	movsxd rbx,eax
    366d:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    3671:	48 89 c7             	mov    rdi,rax
    3674:	e8 27 ef ff ff       	call   25a0 <strlen@plt>
    3679:	48 39 c3             	cmp    rbx,rax
    367c:	72 bd                	jb     363b <test_string_arr_print+0x1a>
    367e:	b8 01 00 00 00       	mov    eax,0x1
    3683:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    3687:	c9                   	leave  
    3688:	c3                   	ret    

0000000000003689 <ipv4pktmgr>:
    3689:	f3 0f 1e fa          	endbr64 
    368d:	55                   	push   rbp
    368e:	48 89 e5             	mov    rbp,rsp
    3691:	48 81 ec d0 04 00 00 	sub    rsp,0x4d0
    3698:	48 89 bd 38 fb ff ff 	mov    QWORD PTR [rbp-0x4c8],rdi
    369f:	48 89 b5 30 fb ff ff 	mov    QWORD PTR [rbp-0x4d0],rsi
    36a6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    36ad:	00 00 
    36af:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    36b3:	31 c0                	xor    eax,eax
    36b5:	48 8b 85 38 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4c8]
    36bc:	48 83 c0 0e          	add    rax,0xe
    36c0:	48 89 85 58 fb ff ff 	mov    QWORD PTR [rbp-0x4a8],rax
    36c7:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    36ce:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    36d1:	89 c7                	mov    edi,eax
    36d3:	e8 a8 f0 ff ff       	call   2780 <ntohl@plt>
    36d8:	89 85 7c fb ff ff    	mov    DWORD PTR [rbp-0x484],eax
    36de:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    36e5:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    36e8:	89 c7                	mov    edi,eax
    36ea:	e8 91 f0 ff ff       	call   2780 <ntohl@plt>
    36ef:	89 85 78 fb ff ff    	mov    DWORD PTR [rbp-0x488],eax
    36f5:	8b 95 78 fb ff ff    	mov    edx,DWORD PTR [rbp-0x488]
    36fb:	8b 05 d7 58 13 00    	mov    eax,DWORD PTR [rip+0x1358d7]        # 138fd8 <homenetmask>
    3701:	21 d0                	and    eax,edx
    3703:	89 85 4c fb ff ff    	mov    DWORD PTR [rbp-0x4b4],eax
    3709:	8b 95 7c fb ff ff    	mov    edx,DWORD PTR [rbp-0x484]
    370f:	8b 05 c3 58 13 00    	mov    eax,DWORD PTR [rip+0x1358c3]        # 138fd8 <homenetmask>
    3715:	21 d0                	and    eax,edx
    3717:	89 85 50 fb ff ff    	mov    DWORD PTR [rbp-0x4b0],eax
    371d:	8b 05 b1 58 13 00    	mov    eax,DWORD PTR [rip+0x1358b1]        # 138fd4 <homenet>
    3723:	39 85 4c fb ff ff    	cmp    DWORD PTR [rbp-0x4b4],eax
    3729:	75 0c                	jne    3737 <ipv4pktmgr+0xae>
    372b:	c7 85 80 fb ff ff 45 	mov    DWORD PTR [rbp-0x480],0x45
    3732:	00 00 00 
    3735:	eb 24                	jmp    375b <ipv4pktmgr+0xd2>
    3737:	8b 05 97 58 13 00    	mov    eax,DWORD PTR [rip+0x135897]        # 138fd4 <homenet>
    373d:	39 85 50 fb ff ff    	cmp    DWORD PTR [rbp-0x4b0],eax
    3743:	75 0c                	jne    3751 <ipv4pktmgr+0xc8>
    3745:	c7 85 80 fb ff ff 46 	mov    DWORD PTR [rbp-0x480],0x46
    374c:	00 00 00 
    374f:	eb 0a                	jmp    375b <ipv4pktmgr+0xd2>
    3751:	c7 85 80 fb ff ff 47 	mov    DWORD PTR [rbp-0x480],0x47
    3758:	00 00 00 
    375b:	48 8b 85 30 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d0]
    3762:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    3765:	89 85 90 fb ff ff    	mov    DWORD PTR [rbp-0x470],eax
    376b:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    3772:	48 89 85 a8 fb ff ff 	mov    QWORD PTR [rbp-0x458],rax
    3779:	48 8b 85 30 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d0]
    3780:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    3783:	48 8b 95 38 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4c8]
    378a:	48 83 c2 0e          	add    rdx,0xe
    378e:	0f b6 12             	movzx  edx,BYTE PTR [rdx]
    3791:	83 e2 0f             	and    edx,0xf
    3794:	0f b6 d2             	movzx  edx,dl
    3797:	c1 e2 02             	shl    edx,0x2
    379a:	29 d0                	sub    eax,edx
    379c:	83 e8 0e             	sub    eax,0xe
    379f:	89 85 54 fb ff ff    	mov    DWORD PTR [rbp-0x4ac],eax
    37a5:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    37ac:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    37af:	89 c7                	mov    edi,eax
    37b1:	e8 c9 f9 ff ff       	call   317f <ipv4_ntoa>
    37b6:	48 89 c1             	mov    rcx,rax
    37b9:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    37c0:	ba 10 00 00 00       	mov    edx,0x10
    37c5:	48 89 ce             	mov    rsi,rcx
    37c8:	48 89 c7             	mov    rdi,rax
    37cb:	e8 20 ee ff ff       	call   25f0 <strncpy@plt>
    37d0:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    37d7:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    37da:	89 c7                	mov    edi,eax
    37dc:	e8 9e f9 ff ff       	call   317f <ipv4_ntoa>
    37e1:	48 89 c1             	mov    rcx,rax
    37e4:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    37eb:	ba 10 00 00 00       	mov    edx,0x10
    37f0:	48 89 ce             	mov    rsi,rcx
    37f3:	48 89 c7             	mov    rdi,rax
    37f6:	e8 f5 ed ff ff       	call   25f0 <strncpy@plt>
    37fb:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    3802:	48 89 c7             	mov    rdi,rax
    3805:	e8 c7 5a 00 00       	call   92d1 <init_member>
    380a:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    3811:	48 89 c7             	mov    rdi,rax
    3814:	e8 b8 5a 00 00       	call   92d1 <init_member>
    3819:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    3820:	48 89 c7             	mov    rdi,rax
    3823:	e8 85 20 00 00       	call   58ad <is_blocked_ipv4>
    3828:	84 c0                	test   al,al
    382a:	74 44                	je     3870 <ipv4pktmgr+0x1e7>
    382c:	b8 00 00 00 00       	mov    eax,0x0
    3831:	e8 a9 fb ff ff       	call   33df <get_formated_time>
    3836:	48 89 c6             	mov    rsi,rax
    3839:	48 8d 95 e0 fb ff ff 	lea    rdx,[rbp-0x420]
    3840:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    3847:	48 89 d1             	mov    rcx,rdx
    384a:	48 89 f2             	mov    rdx,rsi
    384d:	48 8d 35 04 9a 00 00 	lea    rsi,[rip+0x9a04]        # d258 <_IO_stdin_used+0x258>
    3854:	48 89 c7             	mov    rdi,rax
    3857:	b8 00 00 00 00       	mov    eax,0x0
    385c:	e8 9f ec ff ff       	call   2500 <sprintf@plt>
    3861:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    3868:	48 89 c7             	mov    rdi,rax
    386b:	e8 42 72 00 00       	call   aab2 <saprintf>
    3870:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    3877:	48 89 c7             	mov    rdi,rax
    387a:	e8 2e 20 00 00       	call   58ad <is_blocked_ipv4>
    387f:	84 c0                	test   al,al
    3881:	74 44                	je     38c7 <ipv4pktmgr+0x23e>
    3883:	b8 00 00 00 00       	mov    eax,0x0
    3888:	e8 52 fb ff ff       	call   33df <get_formated_time>
    388d:	48 89 c6             	mov    rsi,rax
    3890:	48 8d 95 d0 fb ff ff 	lea    rdx,[rbp-0x430]
    3897:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    389e:	48 89 d1             	mov    rcx,rdx
    38a1:	48 89 f2             	mov    rdx,rsi
    38a4:	48 8d 35 dd 99 00 00 	lea    rsi,[rip+0x99dd]        # d288 <_IO_stdin_used+0x288>
    38ab:	48 89 c7             	mov    rdi,rax
    38ae:	b8 00 00 00 00       	mov    eax,0x0
    38b3:	e8 48 ec ff ff       	call   2500 <sprintf@plt>
    38b8:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    38bf:	48 89 c7             	mov    rdi,rax
    38c2:	e8 eb 71 00 00       	call   aab2 <saprintf>
    38c7:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    38ce:	48 89 85 68 fb ff ff 	mov    QWORD PTR [rbp-0x498],rax
    38d5:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    38dc:	48 89 85 70 fb ff ff 	mov    QWORD PTR [rbp-0x490],rax
    38e3:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    38ea:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    38ee:	66 83 f8 20          	cmp    ax,0x20
    38f2:	74 11                	je     3905 <ipv4pktmgr+0x27c>
    38f4:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    38fb:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    38ff:	66 3d 02 01          	cmp    ax,0x102
    3903:	75 66                	jne    396b <ipv4pktmgr+0x2e2>
    3905:	48 8d 35 a4 99 00 00 	lea    rsi,[rip+0x99a4]        # d2b0 <_IO_stdin_used+0x2b0>
    390c:	48 8d 3d a2 99 00 00 	lea    rdi,[rip+0x99a2]        # d2b5 <_IO_stdin_used+0x2b5>
    3913:	b8 00 00 00 00       	mov    eax,0x0
    3918:	e8 a3 eb ff ff       	call   24c0 <printf@plt>
    391d:	0f b6 05 40 76 10 00 	movzx  eax,BYTE PTR [rip+0x107640]        # 10af64 <packet_print>
    3924:	84 c0                	test   al,al
    3926:	74 1a                	je     3942 <ipv4pktmgr+0x2b9>
    3928:	48 8d 35 94 99 00 00 	lea    rsi,[rip+0x9994]        # d2c3 <_IO_stdin_used+0x2c3>
    392f:	48 8d 3d 92 99 00 00 	lea    rdi,[rip+0x9992]        # d2c8 <_IO_stdin_used+0x2c8>
    3936:	b8 00 00 00 00       	mov    eax,0x0
    393b:	e8 80 eb ff ff       	call   24c0 <printf@plt>
    3940:	eb 29                	jmp    396b <ipv4pktmgr+0x2e2>
    3942:	48 8d 95 e0 fb ff ff 	lea    rdx,[rbp-0x420]
    3949:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    3950:	48 8d 0d 6c 99 00 00 	lea    rcx,[rip+0x996c]        # d2c3 <_IO_stdin_used+0x2c3>
    3957:	48 89 c6             	mov    rsi,rax
    395a:	48 8d 3d 6a 99 00 00 	lea    rdi,[rip+0x996a]        # d2cb <_IO_stdin_used+0x2cb>
    3961:	b8 00 00 00 00       	mov    eax,0x0
    3966:	e8 55 eb ff ff       	call   24c0 <printf@plt>
    396b:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    3972:	0f b6 40 09          	movzx  eax,BYTE PTR [rax+0x9]
    3976:	0f b6 c0             	movzx  eax,al
    3979:	83 f8 11             	cmp    eax,0x11
    397c:	0f 84 b8 00 00 00    	je     3a3a <ipv4pktmgr+0x3b1>
    3982:	83 f8 11             	cmp    eax,0x11
    3985:	0f 8f db 00 00 00    	jg     3a66 <ipv4pktmgr+0x3dd>
    398b:	83 f8 06             	cmp    eax,0x6
    398e:	74 7e                	je     3a0e <ipv4pktmgr+0x385>
    3990:	83 f8 06             	cmp    eax,0x6
    3993:	0f 8f cd 00 00 00    	jg     3a66 <ipv4pktmgr+0x3dd>
    3999:	83 f8 01             	cmp    eax,0x1
    399c:	74 0a                	je     39a8 <ipv4pktmgr+0x31f>
    399e:	83 f8 02             	cmp    eax,0x2
    39a1:	74 2d                	je     39d0 <ipv4pktmgr+0x347>
    39a3:	e9 be 00 00 00       	jmp    3a66 <ipv4pktmgr+0x3dd>
    39a8:	c7 85 8c fb ff ff 80 	mov    DWORD PTR [rbp-0x474],0x80
    39af:	00 00 00 
    39b2:	48 8d 95 60 fb ff ff 	lea    rdx,[rbp-0x4a0]
    39b9:	48 8b 85 38 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4c8]
    39c0:	48 89 d6             	mov    rsi,rdx
    39c3:	48 89 c7             	mov    rdi,rax
    39c6:	e8 40 02 00 00       	call   3c0b <ip4_icmp_decode>
    39cb:	e9 c7 00 00 00       	jmp    3a97 <ipv4pktmgr+0x40e>
    39d0:	c7 85 8c fb ff ff ff 	mov    DWORD PTR [rbp-0x474],0xffffffff
    39d7:	ff ff ff 
    39da:	8b 05 44 e6 00 00    	mov    eax,DWORD PTR [rip+0xe644]        # 12024 <total_conversations>
    39e0:	83 e8 01             	sub    eax,0x1
    39e3:	89 05 3b e6 00 00    	mov    DWORD PTR [rip+0xe63b],eax        # 12024 <total_conversations>
    39e9:	48 8b 95 70 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x490]
    39f0:	48 8b 8d 68 fb ff ff 	mov    rcx,QWORD PTR [rbp-0x498]
    39f7:	48 8b 85 38 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4c8]
    39fe:	48 89 ce             	mov    rsi,rcx
    3a01:	48 89 c7             	mov    rdi,rax
    3a04:	e8 2e 14 00 00       	call   4e37 <ip4_igmp_decode>
    3a09:	e9 89 00 00 00       	jmp    3a97 <ipv4pktmgr+0x40e>
    3a0e:	c7 85 8c fb ff ff 7e 	mov    DWORD PTR [rbp-0x474],0x7e
    3a15:	00 00 00 
    3a18:	48 8b 95 30 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4d0]
    3a1f:	48 8d 8d 60 fb ff ff 	lea    rcx,[rbp-0x4a0]
    3a26:	48 8b 85 38 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4c8]
    3a2d:	48 89 ce             	mov    rsi,rcx
    3a30:	48 89 c7             	mov    rdi,rax
    3a33:	e8 17 0a 00 00       	call   444f <ip4_tcp_decode>
    3a38:	eb 5d                	jmp    3a97 <ipv4pktmgr+0x40e>
    3a3a:	c7 85 8c fb ff ff 7f 	mov    DWORD PTR [rbp-0x474],0x7f
    3a41:	00 00 00 
    3a44:	48 8b 95 30 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4d0]
    3a4b:	48 8d 8d 60 fb ff ff 	lea    rcx,[rbp-0x4a0]
    3a52:	48 8b 85 38 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4c8]
    3a59:	48 89 ce             	mov    rsi,rcx
    3a5c:	48 89 c7             	mov    rdi,rax
    3a5f:	e8 7e 12 00 00       	call   4ce2 <ip4_udp_decode>
    3a64:	eb 31                	jmp    3a97 <ipv4pktmgr+0x40e>
    3a66:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    3a6d:	0f b6 40 09          	movzx  eax,BYTE PTR [rax+0x9]
    3a71:	0f b6 c8             	movzx  ecx,al
    3a74:	48 8b 95 70 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x490]
    3a7b:	48 8b 85 68 fb ff ff 	mov    rax,QWORD PTR [rbp-0x498]
    3a82:	48 89 c6             	mov    rsi,rax
    3a85:	48 8d 3d 4c 98 00 00 	lea    rdi,[rip+0x984c]        # d2d8 <_IO_stdin_used+0x2d8>
    3a8c:	b8 00 00 00 00       	mov    eax,0x0
    3a91:	e8 2a ea ff ff       	call   24c0 <printf@plt>
    3a96:	90                   	nop
    3a97:	90                   	nop
    3a98:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3a9c:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    3aa3:	00 00 
    3aa5:	74 05                	je     3aac <ipv4pktmgr+0x423>
    3aa7:	e8 24 ec ff ff       	call   26d0 <__stack_chk_fail@plt>
    3aac:	c9                   	leave  
    3aad:	c3                   	ret    

0000000000003aae <ip6_icmp_decode>:
    3aae:	f3 0f 1e fa          	endbr64 
    3ab2:	55                   	push   rbp
    3ab3:	48 89 e5             	mov    rbp,rsp
    3ab6:	48 83 c4 80          	add    rsp,0xffffffffffffff80
    3aba:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    3abe:	48 89 75 90          	mov    QWORD PTR [rbp-0x70],rsi
    3ac2:	48 89 55 88          	mov    QWORD PTR [rbp-0x78],rdx
    3ac6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3acd:	00 00 
    3acf:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3ad3:	31 c0                	xor    eax,eax
    3ad5:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    3ad9:	48 83 c0 36          	add    rax,0x36
    3add:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    3ae1:	0f b6 05 7c 74 10 00 	movzx  eax,BYTE PTR [rip+0x10747c]        # 10af64 <packet_print>
    3ae8:	84 c0                	test   al,al
    3aea:	0f 84 04 01 00 00    	je     3bf4 <ip6_icmp_decode+0x146>
    3af0:	48 8d 35 09 98 00 00 	lea    rsi,[rip+0x9809]        # d300 <_IO_stdin_used+0x300>
    3af7:	48 8d 3d 08 98 00 00 	lea    rdi,[rip+0x9808]        # d306 <_IO_stdin_used+0x306>
    3afe:	b8 00 00 00 00       	mov    eax,0x0
    3b03:	e8 b8 e9 ff ff       	call   24c0 <printf@plt>
    3b08:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
    3b0c:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    3b10:	48 89 c6             	mov    rsi,rax
    3b13:	48 8d 3d ef 97 00 00 	lea    rdi,[rip+0x97ef]        # d309 <_IO_stdin_used+0x309>
    3b1a:	b8 00 00 00 00       	mov    eax,0x0
    3b1f:	e8 9c e9 ff ff       	call   24c0 <printf@plt>
    3b24:	48 8d 3d ed 97 00 00 	lea    rdi,[rip+0x97ed]        # d318 <_IO_stdin_used+0x318>
    3b2b:	b8 00 00 00 00       	mov    eax,0x0
    3b30:	e8 8b e9 ff ff       	call   24c0 <printf@plt>
    3b35:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3b39:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3b3c:	0f b6 c0             	movzx  eax,al
    3b3f:	3d 8f 00 00 00       	cmp    eax,0x8f
    3b44:	74 68                	je     3bae <ip6_icmp_decode+0x100>
    3b46:	3d 8f 00 00 00       	cmp    eax,0x8f
    3b4b:	0f 8f 8b 00 00 00    	jg     3bdc <ip6_icmp_decode+0x12e>
    3b51:	3d 87 00 00 00       	cmp    eax,0x87
    3b56:	74 77                	je     3bcf <ip6_icmp_decode+0x121>
    3b58:	3d 87 00 00 00       	cmp    eax,0x87
    3b5d:	7f 7d                	jg     3bdc <ip6_icmp_decode+0x12e>
    3b5f:	3d 82 00 00 00       	cmp    eax,0x82
    3b64:	74 56                	je     3bbc <ip6_icmp_decode+0x10e>
    3b66:	3d 85 00 00 00       	cmp    eax,0x85
    3b6b:	75 6f                	jne    3bdc <ip6_icmp_decode+0x12e>
    3b6d:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3b71:	48 83 c0 0a          	add    rax,0xa
    3b75:	48 89 c7             	mov    rdi,rax
    3b78:	e8 19 f4 ff ff       	call   2f96 <mac_ntoa>
    3b7d:	48 89 c1             	mov    rcx,rax
    3b80:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    3b84:	ba 40 00 00 00       	mov    edx,0x40
    3b89:	48 89 ce             	mov    rsi,rcx
    3b8c:	48 89 c7             	mov    rdi,rax
    3b8f:	e8 5c ea ff ff       	call   25f0 <strncpy@plt>
    3b94:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    3b98:	48 89 c6             	mov    rsi,rax
    3b9b:	48 8d 3d 7f 97 00 00 	lea    rdi,[rip+0x977f]        # d321 <_IO_stdin_used+0x321>
    3ba2:	b8 00 00 00 00       	mov    eax,0x0
    3ba7:	e8 14 e9 ff ff       	call   24c0 <printf@plt>
    3bac:	eb 2e                	jmp    3bdc <ip6_icmp_decode+0x12e>
    3bae:	48 8d 3d 8b 97 00 00 	lea    rdi,[rip+0x978b]        # d340 <_IO_stdin_used+0x340>
    3bb5:	e8 a6 ec ff ff       	call   2860 <puts@plt>
    3bba:	eb 20                	jmp    3bdc <ip6_icmp_decode+0x12e>
    3bbc:	48 8d 3d a2 97 00 00 	lea    rdi,[rip+0x97a2]        # d365 <_IO_stdin_used+0x365>
    3bc3:	b8 00 00 00 00       	mov    eax,0x0
    3bc8:	e8 f3 e8 ff ff       	call   24c0 <printf@plt>
    3bcd:	eb 0d                	jmp    3bdc <ip6_icmp_decode+0x12e>
    3bcf:	48 8d 3d a9 97 00 00 	lea    rdi,[rip+0x97a9]        # d37f <_IO_stdin_used+0x37f>
    3bd6:	e8 85 ec ff ff       	call   2860 <puts@plt>
    3bdb:	90                   	nop
    3bdc:	48 8d 35 b2 97 00 00 	lea    rsi,[rip+0x97b2]        # d395 <_IO_stdin_used+0x395>
    3be3:	48 8d 3d 1c 97 00 00 	lea    rdi,[rip+0x971c]        # d306 <_IO_stdin_used+0x306>
    3bea:	b8 00 00 00 00       	mov    eax,0x0
    3bef:	e8 cc e8 ff ff       	call   24c0 <printf@plt>
    3bf4:	90                   	nop
    3bf5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3bf9:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    3c00:	00 00 
    3c02:	74 05                	je     3c09 <ip6_icmp_decode+0x15b>
    3c04:	e8 c7 ea ff ff       	call   26d0 <__stack_chk_fail@plt>
    3c09:	c9                   	leave  
    3c0a:	c3                   	ret    

0000000000003c0b <ip4_icmp_decode>:
    3c0b:	f3 0f 1e fa          	endbr64 
    3c0f:	55                   	push   rbp
    3c10:	48 89 e5             	mov    rbp,rsp
    3c13:	48 81 ec 20 01 00 00 	sub    rsp,0x120
    3c1a:	48 89 bd e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rdi
    3c21:	48 89 b5 e0 fe ff ff 	mov    QWORD PTR [rbp-0x120],rsi
    3c28:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3c2f:	00 00 
    3c31:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3c35:	31 c0                	xor    eax,eax
    3c37:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c3e:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3c42:	ba 5e 00 00 00       	mov    edx,0x5e
    3c47:	be 01 00 00 00       	mov    esi,0x1
    3c4c:	48 89 c7             	mov    rdi,rax
    3c4f:	e8 d1 12 00 00       	call   4f25 <add_ip_addr_or_inc_counter>
    3c54:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c5b:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    3c5f:	ba 5e 00 00 00       	mov    edx,0x5e
    3c64:	be 00 00 00 00       	mov    esi,0x0
    3c69:	48 89 c7             	mov    rdi,rax
    3c6c:	e8 b4 12 00 00       	call   4f25 <add_ip_addr_or_inc_counter>
    3c71:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c78:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3c7c:	48 89 85 08 ff ff ff 	mov    QWORD PTR [rbp-0xf8],rax
    3c83:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c8a:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    3c8e:	48 89 85 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],rax
    3c95:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    3c9c:	48 83 c0 22          	add    rax,0x22
    3ca0:	48 89 85 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rax
    3ca7:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    3cae:	48 8d 50 22          	lea    rdx,[rax+0x22]
    3cb2:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3cb9:	48 89 10             	mov    QWORD PTR [rax],rdx
    3cbc:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3cc3:	48 8b 95 18 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xe8]
    3cca:	48 89 50 58          	mov    QWORD PTR [rax+0x58],rdx
    3cce:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3cd5:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    3cd8:	89 85 fc fe ff ff    	mov    DWORD PTR [rbp-0x104],eax
    3cde:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3ce5:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    3ce8:	8d 50 d6             	lea    edx,[rax-0x2a]
    3ceb:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3cf2:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    3cf5:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    3cfc:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3cff:	3c 08                	cmp    al,0x8
    3d01:	0f 85 55 01 00 00    	jne    3e5c <ip4_icmp_decode+0x251>
    3d07:	8b 05 7b e3 00 00    	mov    eax,DWORD PTR [rip+0xe37b]        # 12088 <strict_nmap_host_alive_check>
    3d0d:	83 f8 01             	cmp    eax,0x1
    3d10:	0f 85 46 01 00 00    	jne    3e5c <ip4_icmp_decode+0x251>
    3d16:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3d1d:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3d21:	48 89 c7             	mov    rdi,rax
    3d24:	e8 36 55 00 00       	call   925f <member_exists>
    3d29:	89 85 00 ff ff ff    	mov    DWORD PTR [rbp-0x100],eax
    3d2f:	83 bd 00 ff ff ff ff 	cmp    DWORD PTR [rbp-0x100],0xffffffff
    3d36:	0f 84 83 00 00 00    	je     3dbf <ip4_icmp_decode+0x1b4>
    3d3c:	8b 85 00 ff ff ff    	mov    eax,DWORD PTR [rbp-0x100]
    3d42:	48 63 d0             	movsxd rdx,eax
    3d45:	48 89 d0             	mov    rax,rdx
    3d48:	48 c1 e0 02          	shl    rax,0x2
    3d4c:	48 01 d0             	add    rax,rdx
    3d4f:	48 c1 e0 03          	shl    rax,0x3
    3d53:	48 01 d0             	add    rax,rdx
    3d56:	48 c1 e0 04          	shl    rax,0x4
    3d5a:	48 8d 15 bf 07 0f 00 	lea    rdx,[rip+0xf07bf]        # f4520 <watchlist>
    3d61:	48 01 d0             	add    rax,rdx
    3d64:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
    3d6b:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d72:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3d75:	85 c0                	test   eax,eax
    3d77:	0f 85 a8 02 00 00    	jne    4025 <ip4_icmp_decode+0x41a>
    3d7d:	bf 00 00 00 00       	mov    edi,0x0
    3d82:	e8 09 e9 ff ff       	call   2690 <time@plt>
    3d87:	48 89 c2             	mov    rdx,rax
    3d8a:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d91:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    3d95:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d9c:	c7 40 30 01 00 00 00 	mov    DWORD PTR [rax+0x30],0x1
    3da3:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3daa:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3dad:	8d 50 01             	lea    edx,[rax+0x1]
    3db0:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3db7:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    3dba:	e9 66 02 00 00       	jmp    4025 <ip4_icmp_decode+0x41a>
    3dbf:	8b 05 53 e2 00 00    	mov    eax,DWORD PTR [rip+0xe253]        # 12018 <watchlist_num>
    3dc5:	83 c0 01             	add    eax,0x1
    3dc8:	89 05 4a e2 00 00    	mov    DWORD PTR [rip+0xe24a],eax        # 12018 <watchlist_num>
    3dce:	8b 05 44 e2 00 00    	mov    eax,DWORD PTR [rip+0xe244]        # 12018 <watchlist_num>
    3dd4:	48 63 d0             	movsxd rdx,eax
    3dd7:	48 89 d0             	mov    rax,rdx
    3dda:	48 c1 e0 02          	shl    rax,0x2
    3dde:	48 01 d0             	add    rax,rdx
    3de1:	48 c1 e0 03          	shl    rax,0x3
    3de5:	48 01 d0             	add    rax,rdx
    3de8:	48 c1 e0 04          	shl    rax,0x4
    3dec:	48 8d 15 2d 07 0f 00 	lea    rdx,[rip+0xf072d]        # f4520 <watchlist>
    3df3:	48 01 d0             	add    rax,rdx
    3df6:	48 89 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rax
    3dfd:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3e04:	48 8d 50 08          	lea    rdx,[rax+0x8]
    3e08:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3e0f:	48 89 c6             	mov    rsi,rax
    3e12:	48 89 d7             	mov    rdi,rdx
    3e15:	e8 86 e8 ff ff       	call   26a0 <strcpy@plt>
    3e1a:	bf 00 00 00 00       	mov    edi,0x0
    3e1f:	e8 6c e8 ff ff       	call   2690 <time@plt>
    3e24:	48 89 c2             	mov    rdx,rax
    3e27:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3e2e:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    3e32:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3e39:	c7 40 30 01 00 00 00 	mov    DWORD PTR [rax+0x30],0x1
    3e40:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3e47:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3e4a:	8d 50 01             	lea    edx,[rax+0x1]
    3e4d:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3e54:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    3e57:	e9 c9 01 00 00       	jmp    4025 <ip4_icmp_decode+0x41a>
    3e5c:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    3e63:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3e66:	3c 0d                	cmp    al,0xd
    3e68:	0f 85 ba 01 00 00    	jne    4028 <ip4_icmp_decode+0x41d>
    3e6e:	8b 05 10 e2 00 00    	mov    eax,DWORD PTR [rip+0xe210]        # 12084 <strict_icmp_timestamp_req>
    3e74:	83 f8 01             	cmp    eax,0x1
    3e77:	74 0f                	je     3e88 <ip4_icmp_decode+0x27d>
    3e79:	8b 05 09 e2 00 00    	mov    eax,DWORD PTR [rip+0xe209]        # 12088 <strict_nmap_host_alive_check>
    3e7f:	83 f8 01             	cmp    eax,0x1
    3e82:	0f 85 a0 01 00 00    	jne    4028 <ip4_icmp_decode+0x41d>
    3e88:	8b 05 f6 e1 00 00    	mov    eax,DWORD PTR [rip+0xe1f6]        # 12084 <strict_icmp_timestamp_req>
    3e8e:	85 c0                	test   eax,eax
    3e90:	74 22                	je     3eb4 <ip4_icmp_decode+0x2a9>
    3e92:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    3e99:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3ea0:	48 89 c6             	mov    rsi,rax
    3ea3:	48 8d 3d f6 94 00 00 	lea    rdi,[rip+0x94f6]        # d3a0 <_IO_stdin_used+0x3a0>
    3eaa:	b8 00 00 00 00       	mov    eax,0x0
    3eaf:	e8 0c e6 ff ff       	call   24c0 <printf@plt>
    3eb4:	8b 05 ce e1 00 00    	mov    eax,DWORD PTR [rip+0xe1ce]        # 12088 <strict_nmap_host_alive_check>
    3eba:	85 c0                	test   eax,eax
    3ebc:	0f 84 66 01 00 00    	je     4028 <ip4_icmp_decode+0x41d>
    3ec2:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3ec9:	48 89 c7             	mov    rdi,rax
    3ecc:	e8 8e 53 00 00       	call   925f <member_exists>
    3ed1:	89 85 04 ff ff ff    	mov    DWORD PTR [rbp-0xfc],eax
    3ed7:	83 bd 04 ff ff ff ff 	cmp    DWORD PTR [rbp-0xfc],0xffffffff
    3ede:	0f 84 44 01 00 00    	je     4028 <ip4_icmp_decode+0x41d>
    3ee4:	8b 85 04 ff ff ff    	mov    eax,DWORD PTR [rbp-0xfc]
    3eea:	48 63 d0             	movsxd rdx,eax
    3eed:	48 89 d0             	mov    rax,rdx
    3ef0:	48 c1 e0 02          	shl    rax,0x2
    3ef4:	48 01 d0             	add    rax,rdx
    3ef7:	48 c1 e0 03          	shl    rax,0x3
    3efb:	48 01 d0             	add    rax,rdx
    3efe:	48 c1 e0 04          	shl    rax,0x4
    3f02:	48 8d 15 17 06 0f 00 	lea    rdx,[rip+0xf0617]        # f4520 <watchlist>
    3f09:	48 01 d0             	add    rax,rdx
    3f0c:	48 89 85 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rax
    3f13:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3f1a:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3f1d:	83 f8 03             	cmp    eax,0x3
    3f20:	0f 85 05 01 00 00    	jne    402b <ip4_icmp_decode+0x420>
    3f26:	bf 00 00 00 00       	mov    edi,0x0
    3f2b:	e8 60 e7 ff ff       	call   2690 <time@plt>
    3f30:	48 89 c2             	mov    rdx,rax
    3f33:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3f3a:	48 89 50 48          	mov    QWORD PTR [rax+0x48],rdx
    3f3e:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3f45:	48 8b 50 48          	mov    rdx,QWORD PTR [rax+0x48]
    3f49:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3f50:	48 8b 48 28          	mov    rcx,QWORD PTR [rax+0x28]
    3f54:	48 89 d0             	mov    rax,rdx
    3f57:	48 29 c8             	sub    rax,rcx
    3f5a:	48 3d e2 b4 04 00    	cmp    rax,0x4b4e2
    3f60:	0f 87 c2 00 00 00    	ja     4028 <ip4_icmp_decode+0x41d>
    3f66:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    3f6d:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3f74:	48 89 c6             	mov    rsi,rax
    3f77:	48 8d 3d 6a 94 00 00 	lea    rdi,[rip+0x946a]        # d3e8 <_IO_stdin_used+0x3e8>
    3f7e:	b8 00 00 00 00       	mov    eax,0x0
    3f83:	e8 38 e5 ff ff       	call   24c0 <printf@plt>
    3f88:	48 8b 05 a9 e0 00 00 	mov    rax,QWORD PTR [rip+0xe0a9]        # 12038 <def_log_file>
    3f8f:	48 8d 35 bc 94 00 00 	lea    rsi,[rip+0x94bc]        # d452 <_IO_stdin_used+0x452>
    3f96:	48 89 c7             	mov    rdi,rax
    3f99:	e8 72 e7 ff ff       	call   2710 <fopen@plt>
    3f9e:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    3fa5:	b8 00 00 00 00       	mov    eax,0x0
    3faa:	e8 30 f4 ff ff       	call   33df <get_formated_time>
    3faf:	48 89 c6             	mov    rsi,rax
    3fb2:	48 8b 8d 10 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xf0]
    3fb9:	48 8b 95 08 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf8]
    3fc0:	48 8d 85 40 ff ff ff 	lea    rax,[rbp-0xc0]
    3fc7:	49 89 f0             	mov    r8,rsi
    3fca:	48 8d 35 87 94 00 00 	lea    rsi,[rip+0x9487]        # d458 <_IO_stdin_used+0x458>
    3fd1:	48 89 c7             	mov    rdi,rax
    3fd4:	b8 00 00 00 00       	mov    eax,0x0
    3fd9:	e8 22 e5 ff ff       	call   2500 <sprintf@plt>
    3fde:	48 8b 95 38 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xc8]
    3fe5:	48 8d 85 40 ff ff ff 	lea    rax,[rbp-0xc0]
    3fec:	48 89 d6             	mov    rsi,rdx
    3fef:	48 89 c7             	mov    rdi,rax
    3ff2:	e8 e9 e6 ff ff       	call   26e0 <fputs@plt>
    3ff7:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
    3ffe:	48 89 c7             	mov    rdi,rax
    4001:	e8 ba e6 ff ff       	call   26c0 <fclose@plt>
    4006:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    400d:	48 83 c0 28          	add    rax,0x28
    4011:	ba 28 00 00 00       	mov    edx,0x28
    4016:	be 00 00 00 00       	mov    esi,0x0
    401b:	48 89 c7             	mov    rdi,rax
    401e:	e8 ed e5 ff ff       	call   2610 <memset@plt>
    4023:	eb 07                	jmp    402c <ip4_icmp_decode+0x421>
    4025:	90                   	nop
    4026:	eb 04                	jmp    402c <ip4_icmp_decode+0x421>
    4028:	90                   	nop
    4029:	eb 01                	jmp    402c <ip4_icmp_decode+0x421>
    402b:	90                   	nop
    402c:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    4033:	c7 40 2c 80 00 00 00 	mov    DWORD PTR [rax+0x2c],0x80
    403a:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    4041:	48 89 c7             	mov    rdi,rax
    4044:	e8 dd 23 00 00       	call   6426 <rulemgr>
    4049:	0f b6 05 14 6f 10 00 	movzx  eax,BYTE PTR [rip+0x106f14]        # 10af64 <packet_print>
    4050:	84 c0                	test   al,al
    4052:	0f 84 e0 03 00 00    	je     4438 <ip4_icmp_decode+0x82d>
    4058:	48 8d 35 a1 92 00 00 	lea    rsi,[rip+0x92a1]        # d300 <_IO_stdin_used+0x300>
    405f:	48 8d 3d a0 92 00 00 	lea    rdi,[rip+0x92a0]        # d306 <_IO_stdin_used+0x306>
    4066:	b8 00 00 00 00       	mov    eax,0x0
    406b:	e8 50 e4 ff ff       	call   24c0 <printf@plt>
    4070:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    4077:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    407e:	48 89 c6             	mov    rsi,rax
    4081:	48 8d 3d 40 94 00 00 	lea    rdi,[rip+0x9440]        # d4c8 <_IO_stdin_used+0x4c8>
    4088:	b8 00 00 00 00       	mov    eax,0x0
    408d:	e8 2e e4 ff ff       	call   24c0 <printf@plt>
    4092:	48 8d 3d 3e 94 00 00 	lea    rdi,[rip+0x943e]        # d4d7 <_IO_stdin_used+0x4d7>
    4099:	b8 00 00 00 00       	mov    eax,0x0
    409e:	e8 1d e4 ff ff       	call   24c0 <printf@plt>
    40a3:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    40aa:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    40ad:	0f b6 c0             	movzx  eax,al
    40b0:	83 f8 0e             	cmp    eax,0xe
    40b3:	0f 87 46 03 00 00    	ja     43ff <ip4_icmp_decode+0x7f4>
    40b9:	89 c0                	mov    eax,eax
    40bb:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    40c2:	00 
    40c3:	48 8d 05 16 98 00 00 	lea    rax,[rip+0x9816]        # d8e0 <_IO_stdin_used+0x8e0>
    40ca:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    40cd:	48 98                	cdqe   
    40cf:	48 8d 15 0a 98 00 00 	lea    rdx,[rip+0x980a]        # d8e0 <_IO_stdin_used+0x8e0>
    40d6:	48 01 d0             	add    rax,rdx
    40d9:	3e ff e0             	notrack jmp rax
    40dc:	48 8d 3d fb 93 00 00 	lea    rdi,[rip+0x93fb]        # d4de <_IO_stdin_used+0x4de>
    40e3:	e8 78 e7 ff ff       	call   2860 <puts@plt>
    40e8:	e9 33 03 00 00       	jmp    4420 <ip4_icmp_decode+0x815>
    40ed:	48 8d 3d f6 93 00 00 	lea    rdi,[rip+0x93f6]        # d4ea <_IO_stdin_used+0x4ea>
    40f4:	b8 00 00 00 00       	mov    eax,0x0
    40f9:	e8 c2 e3 ff ff       	call   24c0 <printf@plt>
    40fe:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4105:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4109:	0f b6 c0             	movzx  eax,al
    410c:	83 f8 0f             	cmp    eax,0xf
    410f:	0f 87 1e 01 00 00    	ja     4233 <ip4_icmp_decode+0x628>
    4115:	89 c0                	mov    eax,eax
    4117:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    411e:	00 
    411f:	48 8d 05 f6 97 00 00 	lea    rax,[rip+0x97f6]        # d91c <_IO_stdin_used+0x91c>
    4126:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    4129:	48 98                	cdqe   
    412b:	48 8d 15 ea 97 00 00 	lea    rdx,[rip+0x97ea]        # d91c <_IO_stdin_used+0x91c>
    4132:	48 01 d0             	add    rax,rdx
    4135:	3e ff e0             	notrack jmp rax
    4138:	48 8d 3d c5 93 00 00 	lea    rdi,[rip+0x93c5]        # d504 <_IO_stdin_used+0x504>
    413f:	e8 1c e7 ff ff       	call   2860 <puts@plt>
    4144:	e9 0c 01 00 00       	jmp    4255 <ip4_icmp_decode+0x64a>
    4149:	48 8d 3d cb 93 00 00 	lea    rdi,[rip+0x93cb]        # d51b <_IO_stdin_used+0x51b>
    4150:	e8 0b e7 ff ff       	call   2860 <puts@plt>
    4155:	e9 fb 00 00 00       	jmp    4255 <ip4_icmp_decode+0x64a>
    415a:	48 8d 3d ce 93 00 00 	lea    rdi,[rip+0x93ce]        # d52f <_IO_stdin_used+0x52f>
    4161:	e8 fa e6 ff ff       	call   2860 <puts@plt>
    4166:	e9 ea 00 00 00       	jmp    4255 <ip4_icmp_decode+0x64a>
    416b:	48 8d 3d d5 93 00 00 	lea    rdi,[rip+0x93d5]        # d547 <_IO_stdin_used+0x547>
    4172:	e8 e9 e6 ff ff       	call   2860 <puts@plt>
    4177:	e9 d9 00 00 00       	jmp    4255 <ip4_icmp_decode+0x64a>
    417c:	48 8d 3d d8 93 00 00 	lea    rdi,[rip+0x93d8]        # d55b <_IO_stdin_used+0x55b>
    4183:	e8 d8 e6 ff ff       	call   2860 <puts@plt>
    4188:	e9 c8 00 00 00       	jmp    4255 <ip4_icmp_decode+0x64a>
    418d:	48 8d 3d df 93 00 00 	lea    rdi,[rip+0x93df]        # d573 <_IO_stdin_used+0x573>
    4194:	e8 c7 e6 ff ff       	call   2860 <puts@plt>
    4199:	e9 b7 00 00 00       	jmp    4255 <ip4_icmp_decode+0x64a>
    419e:	48 8d 3d eb 93 00 00 	lea    rdi,[rip+0x93eb]        # d590 <_IO_stdin_used+0x590>
    41a5:	e8 b6 e6 ff ff       	call   2860 <puts@plt>
    41aa:	e9 a6 00 00 00       	jmp    4255 <ip4_icmp_decode+0x64a>
    41af:	48 8d 3d 02 94 00 00 	lea    rdi,[rip+0x9402]        # d5b8 <_IO_stdin_used+0x5b8>
    41b6:	e8 a5 e6 ff ff       	call   2860 <puts@plt>
    41bb:	e9 95 00 00 00       	jmp    4255 <ip4_icmp_decode+0x64a>
    41c0:	48 8d 3d 11 94 00 00 	lea    rdi,[rip+0x9411]        # d5d8 <_IO_stdin_used+0x5d8>
    41c7:	e8 94 e6 ff ff       	call   2860 <puts@plt>
    41cc:	e9 84 00 00 00       	jmp    4255 <ip4_icmp_decode+0x64a>
    41d1:	48 8d 3d 18 94 00 00 	lea    rdi,[rip+0x9418]        # d5f0 <_IO_stdin_used+0x5f0>
    41d8:	e8 83 e6 ff ff       	call   2860 <puts@plt>
    41dd:	eb 76                	jmp    4255 <ip4_icmp_decode+0x64a>
    41df:	48 8d 3d 32 94 00 00 	lea    rdi,[rip+0x9432]        # d618 <_IO_stdin_used+0x618>
    41e6:	e8 75 e6 ff ff       	call   2860 <puts@plt>
    41eb:	eb 68                	jmp    4255 <ip4_icmp_decode+0x64a>
    41ed:	48 8d 3d 4c 94 00 00 	lea    rdi,[rip+0x944c]        # d640 <_IO_stdin_used+0x640>
    41f4:	e8 67 e6 ff ff       	call   2860 <puts@plt>
    41f9:	eb 5a                	jmp    4255 <ip4_icmp_decode+0x64a>
    41fb:	48 8d 3d 5d 94 00 00 	lea    rdi,[rip+0x945d]        # d65f <_IO_stdin_used+0x65f>
    4202:	e8 59 e6 ff ff       	call   2860 <puts@plt>
    4207:	eb 4c                	jmp    4255 <ip4_icmp_decode+0x64a>
    4209:	48 8d 3d 70 94 00 00 	lea    rdi,[rip+0x9470]        # d680 <_IO_stdin_used+0x680>
    4210:	e8 4b e6 ff ff       	call   2860 <puts@plt>
    4215:	eb 3e                	jmp    4255 <ip4_icmp_decode+0x64a>
    4217:	48 8d 3d 8f 94 00 00 	lea    rdi,[rip+0x948f]        # d6ad <_IO_stdin_used+0x6ad>
    421e:	e8 3d e6 ff ff       	call   2860 <puts@plt>
    4223:	eb 30                	jmp    4255 <ip4_icmp_decode+0x64a>
    4225:	48 8d 3d a4 94 00 00 	lea    rdi,[rip+0x94a4]        # d6d0 <_IO_stdin_used+0x6d0>
    422c:	e8 2f e6 ff ff       	call   2860 <puts@plt>
    4231:	eb 22                	jmp    4255 <ip4_icmp_decode+0x64a>
    4233:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    423a:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    423e:	0f b6 c0             	movzx  eax,al
    4241:	89 c6                	mov    esi,eax
    4243:	48 8d 3d a5 94 00 00 	lea    rdi,[rip+0x94a5]        # d6ef <_IO_stdin_used+0x6ef>
    424a:	b8 00 00 00 00       	mov    eax,0x0
    424f:	e8 6c e2 ff ff       	call   24c0 <printf@plt>
    4254:	90                   	nop
    4255:	e9 c6 01 00 00       	jmp    4420 <ip4_icmp_decode+0x815>
    425a:	48 8d 3d a7 94 00 00 	lea    rdi,[rip+0x94a7]        # d708 <_IO_stdin_used+0x708>
    4261:	e8 fa e5 ff ff       	call   2860 <puts@plt>
    4266:	e9 b5 01 00 00       	jmp    4420 <ip4_icmp_decode+0x815>
    426b:	48 8d 3d b5 94 00 00 	lea    rdi,[rip+0x94b5]        # d727 <_IO_stdin_used+0x727>
    4272:	b8 00 00 00 00       	mov    eax,0x0
    4277:	e8 44 e2 ff ff       	call   24c0 <printf@plt>
    427c:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4283:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4287:	0f b6 c0             	movzx  eax,al
    428a:	83 f8 03             	cmp    eax,0x3
    428d:	74 44                	je     42d3 <ip4_icmp_decode+0x6c8>
    428f:	83 f8 03             	cmp    eax,0x3
    4292:	7f 4d                	jg     42e1 <ip4_icmp_decode+0x6d6>
    4294:	83 f8 02             	cmp    eax,0x2
    4297:	74 2c                	je     42c5 <ip4_icmp_decode+0x6ba>
    4299:	83 f8 02             	cmp    eax,0x2
    429c:	7f 43                	jg     42e1 <ip4_icmp_decode+0x6d6>
    429e:	85 c0                	test   eax,eax
    42a0:	74 07                	je     42a9 <ip4_icmp_decode+0x69e>
    42a2:	83 f8 01             	cmp    eax,0x1
    42a5:	74 10                	je     42b7 <ip4_icmp_decode+0x6ac>
    42a7:	eb 38                	jmp    42e1 <ip4_icmp_decode+0x6d6>
    42a9:	48 8d 3d 83 94 00 00 	lea    rdi,[rip+0x9483]        # d733 <_IO_stdin_used+0x733>
    42b0:	e8 ab e5 ff ff       	call   2860 <puts@plt>
    42b5:	eb 4c                	jmp    4303 <ip4_icmp_decode+0x6f8>
    42b7:	48 8d 3d 8d 94 00 00 	lea    rdi,[rip+0x948d]        # d74b <_IO_stdin_used+0x74b>
    42be:	e8 9d e5 ff ff       	call   2860 <puts@plt>
    42c3:	eb 3e                	jmp    4303 <ip4_icmp_decode+0x6f8>
    42c5:	48 8d 3d 94 94 00 00 	lea    rdi,[rip+0x9494]        # d760 <_IO_stdin_used+0x760>
    42cc:	e8 8f e5 ff ff       	call   2860 <puts@plt>
    42d1:	eb 30                	jmp    4303 <ip4_icmp_decode+0x6f8>
    42d3:	48 8d 3d a6 94 00 00 	lea    rdi,[rip+0x94a6]        # d780 <_IO_stdin_used+0x780>
    42da:	e8 81 e5 ff ff       	call   2860 <puts@plt>
    42df:	eb 22                	jmp    4303 <ip4_icmp_decode+0x6f8>
    42e1:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    42e8:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    42ec:	0f b6 c0             	movzx  eax,al
    42ef:	89 c6                	mov    esi,eax
    42f1:	48 8d 3d f7 93 00 00 	lea    rdi,[rip+0x93f7]        # d6ef <_IO_stdin_used+0x6ef>
    42f8:	b8 00 00 00 00       	mov    eax,0x0
    42fd:	e8 be e1 ff ff       	call   24c0 <printf@plt>
    4302:	90                   	nop
    4303:	e9 18 01 00 00       	jmp    4420 <ip4_icmp_decode+0x815>
    4308:	48 8d 3d 8e 94 00 00 	lea    rdi,[rip+0x948e]        # d79d <_IO_stdin_used+0x79d>
    430f:	e8 4c e5 ff ff       	call   2860 <puts@plt>
    4314:	e9 07 01 00 00       	jmp    4420 <ip4_icmp_decode+0x815>
    4319:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4320:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4324:	84 c0                	test   al,al
    4326:	75 16                	jne    433e <ip4_icmp_decode+0x733>
    4328:	48 8d 3d 81 94 00 00 	lea    rdi,[rip+0x9481]        # d7b0 <_IO_stdin_used+0x7b0>
    432f:	b8 00 00 00 00       	mov    eax,0x0
    4334:	e8 87 e1 ff ff       	call   24c0 <printf@plt>
    4339:	e9 e2 00 00 00       	jmp    4420 <ip4_icmp_decode+0x815>
    433e:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4345:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4349:	0f b6 c0             	movzx  eax,al
    434c:	89 c6                	mov    esi,eax
    434e:	48 8d 3d 9b 94 00 00 	lea    rdi,[rip+0x949b]        # d7f0 <_IO_stdin_used+0x7f0>
    4355:	b8 00 00 00 00       	mov    eax,0x0
    435a:	e8 61 e1 ff ff       	call   24c0 <printf@plt>
    435f:	e9 bc 00 00 00       	jmp    4420 <ip4_icmp_decode+0x815>
    4364:	48 8d 3d b2 94 00 00 	lea    rdi,[rip+0x94b2]        # d81d <_IO_stdin_used+0x81d>
    436b:	e8 f0 e4 ff ff       	call   2860 <puts@plt>
    4370:	e9 ab 00 00 00       	jmp    4420 <ip4_icmp_decode+0x815>
    4375:	48 8d 3d b8 94 00 00 	lea    rdi,[rip+0x94b8]        # d834 <_IO_stdin_used+0x834>
    437c:	b8 00 00 00 00       	mov    eax,0x0
    4381:	e8 3a e1 ff ff       	call   24c0 <printf@plt>
    4386:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    438d:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4391:	84 c0                	test   al,al
    4393:	75 0e                	jne    43a3 <ip4_icmp_decode+0x798>
    4395:	48 8d 3d af 94 00 00 	lea    rdi,[rip+0x94af]        # d84b <_IO_stdin_used+0x84b>
    439c:	e8 bf e4 ff ff       	call   2860 <puts@plt>
    43a1:	eb 7d                	jmp    4420 <ip4_icmp_decode+0x815>
    43a3:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    43aa:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    43ae:	3c 01                	cmp    al,0x1
    43b0:	75 0e                	jne    43c0 <ip4_icmp_decode+0x7b5>
    43b2:	48 8d 3d af 94 00 00 	lea    rdi,[rip+0x94af]        # d868 <_IO_stdin_used+0x868>
    43b9:	e8 a2 e4 ff ff       	call   2860 <puts@plt>
    43be:	eb 60                	jmp    4420 <ip4_icmp_decode+0x815>
    43c0:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    43c7:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    43cb:	0f b6 c0             	movzx  eax,al
    43ce:	89 c6                	mov    esi,eax
    43d0:	48 8d 3d b8 94 00 00 	lea    rdi,[rip+0x94b8]        # d88f <_IO_stdin_used+0x88f>
    43d7:	b8 00 00 00 00       	mov    eax,0x0
    43dc:	e8 df e0 ff ff       	call   24c0 <printf@plt>
    43e1:	eb 3d                	jmp    4420 <ip4_icmp_decode+0x815>
    43e3:	48 8d 3d bb 94 00 00 	lea    rdi,[rip+0x94bb]        # d8a5 <_IO_stdin_used+0x8a5>
    43ea:	e8 71 e4 ff ff       	call   2860 <puts@plt>
    43ef:	eb 2f                	jmp    4420 <ip4_icmp_decode+0x815>
    43f1:	48 8d 3d c0 94 00 00 	lea    rdi,[rip+0x94c0]        # d8b8 <_IO_stdin_used+0x8b8>
    43f8:	e8 63 e4 ff ff       	call   2860 <puts@plt>
    43fd:	eb 21                	jmp    4420 <ip4_icmp_decode+0x815>
    43ff:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4406:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4409:	0f b6 c0             	movzx  eax,al
    440c:	89 c6                	mov    esi,eax
    440e:	48 8d 3d b4 94 00 00 	lea    rdi,[rip+0x94b4]        # d8c9 <_IO_stdin_used+0x8c9>
    4415:	b8 00 00 00 00       	mov    eax,0x0
    441a:	e8 a1 e0 ff ff       	call   24c0 <printf@plt>
    441f:	90                   	nop
    4420:	48 8d 35 6e 8f 00 00 	lea    rsi,[rip+0x8f6e]        # d395 <_IO_stdin_used+0x395>
    4427:	48 8d 3d d8 8e 00 00 	lea    rdi,[rip+0x8ed8]        # d306 <_IO_stdin_used+0x306>
    442e:	b8 00 00 00 00       	mov    eax,0x0
    4433:	e8 88 e0 ff ff       	call   24c0 <printf@plt>
    4438:	90                   	nop
    4439:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    443d:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    4444:	00 00 
    4446:	74 05                	je     444d <ip4_icmp_decode+0x842>
    4448:	e8 83 e2 ff ff       	call   26d0 <__stack_chk_fail@plt>
    444d:	c9                   	leave  
    444e:	c3                   	ret    

000000000000444f <ip4_tcp_decode>:
    444f:	f3 0f 1e fa          	endbr64 
    4453:	55                   	push   rbp
    4454:	48 89 e5             	mov    rbp,rsp
    4457:	53                   	push   rbx
    4458:	48 81 ec 88 00 00 00 	sub    rsp,0x88
    445f:	48 89 7d 88          	mov    QWORD PTR [rbp-0x78],rdi
    4463:	48 89 75 80          	mov    QWORD PTR [rbp-0x80],rsi
    4467:	48 89 95 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdx
    446e:	48 c7 45 b8 00 00 00 	mov    QWORD PTR [rbp-0x48],0x0
    4475:	00 
    4476:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    447a:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
    4480:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    4484:	48 83 c0 22          	add    rax,0x22
    4488:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    448c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4490:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    4494:	c0 e8 04             	shr    al,0x4
    4497:	0f b6 c0             	movzx  eax,al
    449a:	c1 e0 02             	shl    eax,0x2
    449d:	48 98                	cdqe   
    449f:	48 8d 50 22          	lea    rdx,[rax+0x22]
    44a3:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    44a7:	48 01 c2             	add    rdx,rax
    44aa:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    44ae:	48 89 10             	mov    QWORD PTR [rax],rdx
    44b1:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    44b5:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    44b8:	89 c2                	mov    edx,eax
    44ba:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    44be:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    44c2:	c0 e8 04             	shr    al,0x4
    44c5:	0f b6 c0             	movzx  eax,al
    44c8:	c1 e0 02             	shl    eax,0x2
    44cb:	89 c1                	mov    ecx,eax
    44cd:	89 d0                	mov    eax,edx
    44cf:	29 c8                	sub    eax,ecx
    44d1:	83 e8 22             	sub    eax,0x22
    44d4:	89 c2                	mov    edx,eax
    44d6:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    44da:	89 50 30             	mov    DWORD PTR [rax+0x30],edx
    44dd:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    44e1:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    44e5:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    44e9:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    44ed:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    44f1:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    44f5:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    44f9:	ba 5c 00 00 00       	mov    edx,0x5c
    44fe:	be 01 00 00 00       	mov    esi,0x1
    4503:	48 89 c7             	mov    rdi,rax
    4506:	e8 1a 0a 00 00       	call   4f25 <add_ip_addr_or_inc_counter>
    450b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    450f:	ba 5c 00 00 00       	mov    edx,0x5c
    4514:	be 00 00 00 00       	mov    esi,0x0
    4519:	48 89 c7             	mov    rdi,rax
    451c:	e8 04 0a 00 00       	call   4f25 <add_ip_addr_or_inc_counter>
    4521:	c7 45 9c 00 00 00 00 	mov    DWORD PTR [rbp-0x64],0x0
    4528:	c6 45 97 00          	mov    BYTE PTR [rbp-0x69],0x0
    452c:	c6 45 98 00          	mov    BYTE PTR [rbp-0x68],0x0
    4530:	c6 45 99 00          	mov    BYTE PTR [rbp-0x67],0x0
    4534:	c6 45 9a 00          	mov    BYTE PTR [rbp-0x66],0x0
    4538:	c6 45 9b 00          	mov    BYTE PTR [rbp-0x65],0x0
    453c:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4540:	48 83 c0 60          	add    rax,0x60
    4544:	ba 08 00 00 00       	mov    edx,0x8
    4549:	be 00 00 00 00       	mov    esi,0x0
    454e:	48 89 c7             	mov    rdi,rax
    4551:	e8 ba e0 ff ff       	call   2610 <memset@plt>
    4556:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    455a:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    455e:	0f b7 c0             	movzx  eax,ax
    4561:	89 c7                	mov    edi,eax
    4563:	e8 98 e3 ff ff       	call   2900 <ntohs@plt>
    4568:	0f b7 c0             	movzx  eax,ax
    456b:	89 45 a0             	mov    DWORD PTR [rbp-0x60],eax
    456e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4572:	0f b7 00             	movzx  eax,WORD PTR [rax]
    4575:	0f b7 c0             	movzx  eax,ax
    4578:	89 c7                	mov    edi,eax
    457a:	e8 81 e3 ff ff       	call   2900 <ntohs@plt>
    457f:	0f b7 c0             	movzx  eax,ax
    4582:	89 45 a4             	mov    DWORD PTR [rbp-0x5c],eax
    4585:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4589:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    458d:	0f b7 c0             	movzx  eax,ax
    4590:	89 c7                	mov    edi,eax
    4592:	e8 69 e3 ff ff       	call   2900 <ntohs@plt>
    4597:	0f b7 d0             	movzx  edx,ax
    459a:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    459e:	89 50 28             	mov    DWORD PTR [rax+0x28],edx
    45a1:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    45a5:	8b 55 a4             	mov    edx,DWORD PTR [rbp-0x5c]
    45a8:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    45ab:	0f b6 05 b2 69 10 00 	movzx  eax,BYTE PTR [rip+0x1069b2]        # 10af64 <packet_print>
    45b2:	84 c0                	test   al,al
    45b4:	74 4e                	je     4604 <ip4_tcp_decode+0x1b5>
    45b6:	48 8d 35 a3 93 00 00 	lea    rsi,[rip+0x93a3]        # d960 <_IO_stdin_used+0x960>
    45bd:	48 8d 3d a2 93 00 00 	lea    rdi,[rip+0x93a2]        # d966 <_IO_stdin_used+0x966>
    45c4:	b8 00 00 00 00       	mov    eax,0x0
    45c9:	e8 f2 de ff ff       	call   24c0 <printf@plt>
    45ce:	8b 75 a0             	mov    esi,DWORD PTR [rbp-0x60]
    45d1:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
    45d5:	8b 55 a4             	mov    edx,DWORD PTR [rbp-0x5c]
    45d8:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    45dc:	41 89 f0             	mov    r8d,esi
    45df:	48 89 c6             	mov    rsi,rax
    45e2:	48 8d 3d 80 93 00 00 	lea    rdi,[rip+0x9380]        # d969 <_IO_stdin_used+0x969>
    45e9:	b8 00 00 00 00       	mov    eax,0x0
    45ee:	e8 cd de ff ff       	call   24c0 <printf@plt>
    45f3:	48 8d 3d 84 93 00 00 	lea    rdi,[rip+0x9384]        # d97e <_IO_stdin_used+0x97e>
    45fa:	b8 00 00 00 00       	mov    eax,0x0
    45ff:	e8 bc de ff ff       	call   24c0 <printf@plt>
    4604:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4608:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    460c:	c0 e8 04             	shr    al,0x4
    460f:	83 e0 01             	and    eax,0x1
    4612:	0f b6 c0             	movzx  eax,al
    4615:	89 c7                	mov    edi,eax
    4617:	e8 e4 e2 ff ff       	call   2900 <ntohs@plt>
    461c:	66 85 c0             	test   ax,ax
    461f:	74 43                	je     4664 <ip4_tcp_decode+0x215>
    4621:	0f b6 05 3c 69 10 00 	movzx  eax,BYTE PTR [rip+0x10693c]        # 10af64 <packet_print>
    4628:	84 c0                	test   al,al
    462a:	74 18                	je     4644 <ip4_tcp_decode+0x1f5>
    462c:	48 8d 35 52 93 00 00 	lea    rsi,[rip+0x9352]        # d985 <_IO_stdin_used+0x985>
    4633:	48 8d 3d 51 93 00 00 	lea    rdi,[rip+0x9351]        # d98b <_IO_stdin_used+0x98b>
    463a:	b8 00 00 00 00       	mov    eax,0x0
    463f:	e8 7c de ff ff       	call   24c0 <printf@plt>
    4644:	c6 45 98 01          	mov    BYTE PTR [rbp-0x68],0x1
    4648:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    464c:	48 8d 58 60          	lea    rbx,[rax+0x60]
    4650:	48 89 df             	mov    rdi,rbx
    4653:	e8 48 df ff ff       	call   25a0 <strlen@plt>
    4658:	48 01 d8             	add    rax,rbx
    465b:	66 c7 00 41 00       	mov    WORD PTR [rax],0x41
    4660:	83 45 9c 01          	add    DWORD PTR [rbp-0x64],0x1
    4664:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4668:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    466c:	83 e0 01             	and    eax,0x1
    466f:	0f b6 c0             	movzx  eax,al
    4672:	89 c7                	mov    edi,eax
    4674:	e8 87 e2 ff ff       	call   2900 <ntohs@plt>
    4679:	66 85 c0             	test   ax,ax
    467c:	74 43                	je     46c1 <ip4_tcp_decode+0x272>
    467e:	0f b6 05 df 68 10 00 	movzx  eax,BYTE PTR [rip+0x1068df]        # 10af64 <packet_print>
    4685:	84 c0                	test   al,al
    4687:	74 18                	je     46a1 <ip4_tcp_decode+0x252>
    4689:	48 8d 35 03 93 00 00 	lea    rsi,[rip+0x9303]        # d993 <_IO_stdin_used+0x993>
    4690:	48 8d 3d 02 93 00 00 	lea    rdi,[rip+0x9302]        # d999 <_IO_stdin_used+0x999>
    4697:	b8 00 00 00 00       	mov    eax,0x0
    469c:	e8 1f de ff ff       	call   24c0 <printf@plt>
    46a1:	c6 45 9a 01          	mov    BYTE PTR [rbp-0x66],0x1
    46a5:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    46a9:	48 8d 58 60          	lea    rbx,[rax+0x60]
    46ad:	48 89 df             	mov    rdi,rbx
    46b0:	e8 eb de ff ff       	call   25a0 <strlen@plt>
    46b5:	48 01 d8             	add    rax,rbx
    46b8:	66 c7 00 46 00       	mov    WORD PTR [rax],0x46
    46bd:	83 45 9c 01          	add    DWORD PTR [rbp-0x64],0x1
    46c1:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    46c5:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    46c9:	c0 e8 03             	shr    al,0x3
    46cc:	83 e0 01             	and    eax,0x1
    46cf:	0f b6 c0             	movzx  eax,al
    46d2:	89 c7                	mov    edi,eax
    46d4:	e8 27 e2 ff ff       	call   2900 <ntohs@plt>
    46d9:	66 85 c0             	test   ax,ax
    46dc:	74 43                	je     4721 <ip4_tcp_decode+0x2d2>
    46de:	0f b6 05 7f 68 10 00 	movzx  eax,BYTE PTR [rip+0x10687f]        # 10af64 <packet_print>
    46e5:	84 c0                	test   al,al
    46e7:	74 18                	je     4701 <ip4_tcp_decode+0x2b2>
    46e9:	48 8d 35 b1 92 00 00 	lea    rsi,[rip+0x92b1]        # d9a1 <_IO_stdin_used+0x9a1>
    46f0:	48 8d 3d b0 92 00 00 	lea    rdi,[rip+0x92b0]        # d9a7 <_IO_stdin_used+0x9a7>
    46f7:	b8 00 00 00 00       	mov    eax,0x0
    46fc:	e8 bf dd ff ff       	call   24c0 <printf@plt>
    4701:	83 45 9c 01          	add    DWORD PTR [rbp-0x64],0x1
    4705:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4709:	48 8d 58 60          	lea    rbx,[rax+0x60]
    470d:	48 89 df             	mov    rdi,rbx
    4710:	e8 8b de ff ff       	call   25a0 <strlen@plt>
    4715:	48 01 d8             	add    rax,rbx
    4718:	66 c7 00 50 00       	mov    WORD PTR [rax],0x50
    471d:	c6 45 9b 01          	mov    BYTE PTR [rbp-0x65],0x1
    4721:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4725:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4729:	c0 e8 02             	shr    al,0x2
    472c:	83 e0 01             	and    eax,0x1
    472f:	0f b6 c0             	movzx  eax,al
    4732:	89 c7                	mov    edi,eax
    4734:	e8 c7 e1 ff ff       	call   2900 <ntohs@plt>
    4739:	66 85 c0             	test   ax,ax
    473c:	74 43                	je     4781 <ip4_tcp_decode+0x332>
    473e:	0f b6 05 1f 68 10 00 	movzx  eax,BYTE PTR [rip+0x10681f]        # 10af64 <packet_print>
    4745:	84 c0                	test   al,al
    4747:	74 18                	je     4761 <ip4_tcp_decode+0x312>
    4749:	48 8d 35 5f 92 00 00 	lea    rsi,[rip+0x925f]        # d9af <_IO_stdin_used+0x9af>
    4750:	48 8d 3d 5e 92 00 00 	lea    rdi,[rip+0x925e]        # d9b5 <_IO_stdin_used+0x9b5>
    4757:	b8 00 00 00 00       	mov    eax,0x0
    475c:	e8 5f dd ff ff       	call   24c0 <printf@plt>
    4761:	c6 45 97 01          	mov    BYTE PTR [rbp-0x69],0x1
    4765:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4769:	48 8d 58 60          	lea    rbx,[rax+0x60]
    476d:	48 89 df             	mov    rdi,rbx
    4770:	e8 2b de ff ff       	call   25a0 <strlen@plt>
    4775:	48 01 d8             	add    rax,rbx
    4778:	66 c7 00 52 00       	mov    WORD PTR [rax],0x52
    477d:	83 45 9c 01          	add    DWORD PTR [rbp-0x64],0x1
    4781:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4785:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4789:	d0 e8                	shr    al,1
    478b:	83 e0 01             	and    eax,0x1
    478e:	0f b6 c0             	movzx  eax,al
    4791:	89 c7                	mov    edi,eax
    4793:	e8 68 e1 ff ff       	call   2900 <ntohs@plt>
    4798:	66 85 c0             	test   ax,ax
    479b:	74 43                	je     47e0 <ip4_tcp_decode+0x391>
    479d:	0f b6 05 c0 67 10 00 	movzx  eax,BYTE PTR [rip+0x1067c0]        # 10af64 <packet_print>
    47a4:	84 c0                	test   al,al
    47a6:	74 18                	je     47c0 <ip4_tcp_decode+0x371>
    47a8:	48 8d 35 0e 92 00 00 	lea    rsi,[rip+0x920e]        # d9bd <_IO_stdin_used+0x9bd>
    47af:	48 8d 3d 0d 92 00 00 	lea    rdi,[rip+0x920d]        # d9c3 <_IO_stdin_used+0x9c3>
    47b6:	b8 00 00 00 00       	mov    eax,0x0
    47bb:	e8 00 dd ff ff       	call   24c0 <printf@plt>
    47c0:	c6 45 99 01          	mov    BYTE PTR [rbp-0x67],0x1
    47c4:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    47c8:	48 8d 58 60          	lea    rbx,[rax+0x60]
    47cc:	48 89 df             	mov    rdi,rbx
    47cf:	e8 cc dd ff ff       	call   25a0 <strlen@plt>
    47d4:	48 01 d8             	add    rax,rbx
    47d7:	66 c7 00 53 00       	mov    WORD PTR [rax],0x53
    47dc:	83 45 9c 01          	add    DWORD PTR [rbp-0x64],0x1
    47e0:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    47e4:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    47e8:	c0 e8 05             	shr    al,0x5
    47eb:	83 e0 01             	and    eax,0x1
    47ee:	0f b6 c0             	movzx  eax,al
    47f1:	89 c7                	mov    edi,eax
    47f3:	e8 08 e1 ff ff       	call   2900 <ntohs@plt>
    47f8:	66 85 c0             	test   ax,ax
    47fb:	74 3f                	je     483c <ip4_tcp_decode+0x3ed>
    47fd:	0f b6 05 60 67 10 00 	movzx  eax,BYTE PTR [rip+0x106760]        # 10af64 <packet_print>
    4804:	84 c0                	test   al,al
    4806:	74 18                	je     4820 <ip4_tcp_decode+0x3d1>
    4808:	48 8d 35 bc 91 00 00 	lea    rsi,[rip+0x91bc]        # d9cb <_IO_stdin_used+0x9cb>
    480f:	48 8d 3d bb 91 00 00 	lea    rdi,[rip+0x91bb]        # d9d1 <_IO_stdin_used+0x9d1>
    4816:	b8 00 00 00 00       	mov    eax,0x0
    481b:	e8 a0 dc ff ff       	call   24c0 <printf@plt>
    4820:	83 45 9c 01          	add    DWORD PTR [rbp-0x64],0x1
    4824:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4828:	48 8d 58 60          	lea    rbx,[rax+0x60]
    482c:	48 89 df             	mov    rdi,rbx
    482f:	e8 6c dd ff ff       	call   25a0 <strlen@plt>
    4834:	48 01 d8             	add    rax,rbx
    4837:	66 c7 00 55 00       	mov    WORD PTR [rax],0x55
    483c:	0f b6 05 21 67 10 00 	movzx  eax,BYTE PTR [rip+0x106721]        # 10af64 <packet_print>
    4843:	84 c0                	test   al,al
    4845:	74 3c                	je     4883 <ip4_tcp_decode+0x434>
    4847:	48 8d 35 12 91 00 00 	lea    rsi,[rip+0x9112]        # d960 <_IO_stdin_used+0x960>
    484e:	48 8d 3d 11 91 00 00 	lea    rdi,[rip+0x9111]        # d966 <_IO_stdin_used+0x966>
    4855:	b8 00 00 00 00       	mov    eax,0x0
    485a:	e8 61 dc ff ff       	call   24c0 <printf@plt>
    485f:	48 8d 3d 73 91 00 00 	lea    rdi,[rip+0x9173]        # d9d9 <_IO_stdin_used+0x9d9>
    4866:	e8 f5 df ff ff       	call   2860 <puts@plt>
    486b:	48 8d 35 69 91 00 00 	lea    rsi,[rip+0x9169]        # d9db <_IO_stdin_used+0x9db>
    4872:	48 8d 3d ed 90 00 00 	lea    rdi,[rip+0x90ed]        # d966 <_IO_stdin_used+0x966>
    4879:	b8 00 00 00 00       	mov    eax,0x0
    487e:	e8 3d dc ff ff       	call   24c0 <printf@plt>
    4883:	83 7d 9c 03          	cmp    DWORD PTR [rbp-0x64],0x3
    4887:	7f 06                	jg     488f <ip4_tcp_decode+0x440>
    4889:	83 7d 9c 00          	cmp    DWORD PTR [rbp-0x64],0x0
    488d:	75 41                	jne    48d0 <ip4_tcp_decode+0x481>
    488f:	8b 7d a0             	mov    edi,DWORD PTR [rbp-0x60]
    4892:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
    4896:	8b 55 a4             	mov    edx,DWORD PTR [rbp-0x5c]
    4899:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    489d:	48 8d 0d 37 91 00 00 	lea    rcx,[rip+0x9137]        # d9db <_IO_stdin_used+0x9db>
    48a4:	51                   	push   rcx
    48a5:	8b 4d 9c             	mov    ecx,DWORD PTR [rbp-0x64]
    48a8:	51                   	push   rcx
    48a9:	41 89 f9             	mov    r9d,edi
    48ac:	49 89 f0             	mov    r8,rsi
    48af:	89 d1                	mov    ecx,edx
    48b1:	48 89 c2             	mov    rdx,rax
    48b4:	48 8d 35 f4 90 00 00 	lea    rsi,[rip+0x90f4]        # d9af <_IO_stdin_used+0x9af>
    48bb:	48 8d 3d 1e 91 00 00 	lea    rdi,[rip+0x911e]        # d9e0 <_IO_stdin_used+0x9e0>
    48c2:	b8 00 00 00 00       	mov    eax,0x0
    48c7:	e8 f4 db ff ff       	call   24c0 <printf@plt>
    48cc:	48 83 c4 10          	add    rsp,0x10
    48d0:	0f b6 05 fb 46 13 00 	movzx  eax,BYTE PTR [rip+0x1346fb]        # 138fd2 <use_spi>
    48d7:	84 c0                	test   al,al
    48d9:	0f 84 8c 00 00 00    	je     496b <ip4_tcp_decode+0x51c>
    48df:	80 7d 9b 00          	cmp    BYTE PTR [rbp-0x65],0x0
    48e3:	74 1a                	je     48ff <ip4_tcp_decode+0x4b0>
    48e5:	80 7d 98 00          	cmp    BYTE PTR [rbp-0x68],0x0
    48e9:	74 14                	je     48ff <ip4_tcp_decode+0x4b0>
    48eb:	83 7d 9c 02          	cmp    DWORD PTR [rbp-0x64],0x2
    48ef:	75 0e                	jne    48ff <ip4_tcp_decode+0x4b0>
    48f1:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    48f5:	48 89 c7             	mov    rdi,rax
    48f8:	e8 8d 5e 00 00       	call   a78a <handle_data_pkt>
    48fd:	eb 6c                	jmp    496b <ip4_tcp_decode+0x51c>
    48ff:	80 7d 9a 00          	cmp    BYTE PTR [rbp-0x66],0x0
    4903:	74 14                	je     4919 <ip4_tcp_decode+0x4ca>
    4905:	80 7d 98 00          	cmp    BYTE PTR [rbp-0x68],0x0
    4909:	74 0e                	je     4919 <ip4_tcp_decode+0x4ca>
    490b:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    490f:	48 89 c7             	mov    rdi,rax
    4912:	e8 66 5d 00 00       	call   a67d <polite_end>
    4917:	eb 52                	jmp    496b <ip4_tcp_decode+0x51c>
    4919:	80 7d 99 00          	cmp    BYTE PTR [rbp-0x67],0x0
    491d:	74 14                	je     4933 <ip4_tcp_decode+0x4e4>
    491f:	83 7d 9c 01          	cmp    DWORD PTR [rbp-0x64],0x1
    4923:	75 0e                	jne    4933 <ip4_tcp_decode+0x4e4>
    4925:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4929:	48 89 c7             	mov    rdi,rax
    492c:	e8 c4 58 00 00       	call   a1f5 <add_new_conversation>
    4931:	eb 38                	jmp    496b <ip4_tcp_decode+0x51c>
    4933:	80 7d 99 00          	cmp    BYTE PTR [rbp-0x67],0x0
    4937:	74 1a                	je     4953 <ip4_tcp_decode+0x504>
    4939:	80 7d 98 00          	cmp    BYTE PTR [rbp-0x68],0x0
    493d:	74 14                	je     4953 <ip4_tcp_decode+0x504>
    493f:	83 7d 9c 02          	cmp    DWORD PTR [rbp-0x64],0x2
    4943:	75 0e                	jne    4953 <ip4_tcp_decode+0x504>
    4945:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4949:	48 89 c7             	mov    rdi,rax
    494c:	e8 ce 5a 00 00       	call   a41f <spi_ud_thw>
    4951:	eb 18                	jmp    496b <ip4_tcp_decode+0x51c>
    4953:	80 7d 98 00          	cmp    BYTE PTR [rbp-0x68],0x0
    4957:	74 12                	je     496b <ip4_tcp_decode+0x51c>
    4959:	83 7d 9c 01          	cmp    DWORD PTR [rbp-0x64],0x1
    495d:	75 0c                	jne    496b <ip4_tcp_decode+0x51c>
    495f:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4963:	48 89 c7             	mov    rdi,rax
    4966:	e8 77 5b 00 00       	call   a4e2 <update_table>
    496b:	80 7d 9b 00          	cmp    BYTE PTR [rbp-0x65],0x0
    496f:	74 17                	je     4988 <ip4_tcp_decode+0x539>
    4971:	80 7d 98 00          	cmp    BYTE PTR [rbp-0x68],0x0
    4975:	74 11                	je     4988 <ip4_tcp_decode+0x539>
    4977:	83 7d 9c 02          	cmp    DWORD PTR [rbp-0x64],0x2
    497b:	75 0b                	jne    4988 <ip4_tcp_decode+0x539>
    497d:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4981:	c7 40 68 01 00 00 00 	mov    DWORD PTR [rax+0x68],0x1
    4988:	80 7d 97 00          	cmp    BYTE PTR [rbp-0x69],0x0
    498c:	0f 84 8f 01 00 00    	je     4b21 <ip4_tcp_decode+0x6d2>
    4992:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4996:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    499a:	48 89 c7             	mov    rdi,rax
    499d:	e8 bd 48 00 00       	call   925f <member_exists>
    49a2:	89 45 a8             	mov    DWORD PTR [rbp-0x58],eax
    49a5:	83 7d a8 ff          	cmp    DWORD PTR [rbp-0x58],0xffffffff
    49a9:	0f 84 db 00 00 00    	je     4a8a <ip4_tcp_decode+0x63b>
    49af:	8b 45 a8             	mov    eax,DWORD PTR [rbp-0x58]
    49b2:	48 63 d0             	movsxd rdx,eax
    49b5:	48 89 d0             	mov    rax,rdx
    49b8:	48 c1 e0 02          	shl    rax,0x2
    49bc:	48 01 d0             	add    rax,rdx
    49bf:	48 c1 e0 03          	shl    rax,0x3
    49c3:	48 01 d0             	add    rax,rdx
    49c6:	48 c1 e0 04          	shl    rax,0x4
    49ca:	48 8d 15 4f fb 0e 00 	lea    rdx,[rip+0xefb4f]        # f4520 <watchlist>
    49d1:	48 01 d0             	add    rax,rdx
    49d4:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    49d8:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    49dc:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    49e0:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    49e4:	48 83 c2 08          	add    rdx,0x8
    49e8:	48 89 c6             	mov    rsi,rax
    49eb:	48 89 d7             	mov    rdi,rdx
    49ee:	e8 ad dc ff ff       	call   26a0 <strcpy@plt>
    49f3:	bf 00 00 00 00       	mov    edi,0x0
    49f8:	e8 93 dc ff ff       	call   2690 <time@plt>
    49fd:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    4a01:	8b 92 48 01 00 00    	mov    edx,DWORD PTR [rdx+0x148]
    4a07:	8d 72 01             	lea    esi,[rdx+0x1]
    4a0a:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    4a0e:	89 b1 48 01 00 00    	mov    DWORD PTR [rcx+0x148],esi
    4a14:	48 89 c1             	mov    rcx,rax
    4a17:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4a1b:	89 d2                	mov    edx,edx
    4a1d:	48 83 c2 28          	add    rdx,0x28
    4a21:	48 89 4c d0 10       	mov    QWORD PTR [rax+rdx*8+0x10],rcx
    4a26:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4a2a:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    4a30:	83 f8 1d             	cmp    eax,0x1d
    4a33:	0f 86 e8 00 00 00    	jbe    4b21 <ip4_tcp_decode+0x6d2>
    4a39:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4a3d:	c7 80 48 01 00 00 1e 	mov    DWORD PTR [rax+0x148],0x1e
    4a44:	00 00 00 
    4a47:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4a4b:	48 89 c7             	mov    rdi,rax
    4a4e:	e8 ca 43 00 00       	call   8e1d <tcp_rst_portscan_detect>
    4a53:	84 c0                	test   al,al
    4a55:	0f 84 c6 00 00 00    	je     4b21 <ip4_tcp_decode+0x6d2>
    4a5b:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4a5f:	c7 80 48 01 00 00 00 	mov    DWORD PTR [rax+0x148],0x0
    4a66:	00 00 00 
    4a69:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4a6d:	48 05 50 01 00 00    	add    rax,0x150
    4a73:	ba f0 00 00 00       	mov    edx,0xf0
    4a78:	be 00 00 00 00       	mov    esi,0x0
    4a7d:	48 89 c7             	mov    rdi,rax
    4a80:	e8 8b db ff ff       	call   2610 <memset@plt>
    4a85:	e9 97 00 00 00       	jmp    4b21 <ip4_tcp_decode+0x6d2>
    4a8a:	8b 05 88 d5 00 00    	mov    eax,DWORD PTR [rip+0xd588]        # 12018 <watchlist_num>
    4a90:	83 c0 01             	add    eax,0x1
    4a93:	89 05 7f d5 00 00    	mov    DWORD PTR [rip+0xd57f],eax        # 12018 <watchlist_num>
    4a99:	8b 05 79 d5 00 00    	mov    eax,DWORD PTR [rip+0xd579]        # 12018 <watchlist_num>
    4a9f:	48 63 d0             	movsxd rdx,eax
    4aa2:	48 89 d0             	mov    rax,rdx
    4aa5:	48 c1 e0 02          	shl    rax,0x2
    4aa9:	48 01 d0             	add    rax,rdx
    4aac:	48 c1 e0 03          	shl    rax,0x3
    4ab0:	48 01 d0             	add    rax,rdx
    4ab3:	48 c1 e0 04          	shl    rax,0x4
    4ab7:	48 8d 15 62 fa 0e 00 	lea    rdx,[rip+0xefa62]        # f4520 <watchlist>
    4abe:	48 01 d0             	add    rax,rdx
    4ac1:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    4ac5:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4ac9:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4acd:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    4ad1:	48 83 c2 08          	add    rdx,0x8
    4ad5:	48 89 c6             	mov    rsi,rax
    4ad8:	48 89 d7             	mov    rdi,rdx
    4adb:	e8 c0 db ff ff       	call   26a0 <strcpy@plt>
    4ae0:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4ae4:	c7 80 48 01 00 00 00 	mov    DWORD PTR [rax+0x148],0x0
    4aeb:	00 00 00 
    4aee:	bf 00 00 00 00       	mov    edi,0x0
    4af3:	e8 98 db ff ff       	call   2690 <time@plt>
    4af8:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    4afc:	8b 92 48 01 00 00    	mov    edx,DWORD PTR [rdx+0x148]
    4b02:	8d 72 01             	lea    esi,[rdx+0x1]
    4b05:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    4b09:	89 b1 48 01 00 00    	mov    DWORD PTR [rcx+0x148],esi
    4b0f:	48 89 c1             	mov    rcx,rax
    4b12:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4b16:	89 d2                	mov    edx,edx
    4b18:	48 83 c2 28          	add    rdx,0x28
    4b1c:	48 89 4c d0 10       	mov    QWORD PTR [rax+rdx*8+0x10],rcx
    4b21:	8b 05 61 d5 00 00    	mov    eax,DWORD PTR [rip+0xd561]        # 12088 <strict_nmap_host_alive_check>
    4b27:	83 f8 01             	cmp    eax,0x1
    4b2a:	0f 85 f6 00 00 00    	jne    4c26 <ip4_tcp_decode+0x7d7>
    4b30:	80 7d 98 00          	cmp    BYTE PTR [rbp-0x68],0x0
    4b34:	74 0c                	je     4b42 <ip4_tcp_decode+0x6f3>
    4b36:	83 7d a0 50          	cmp    DWORD PTR [rbp-0x60],0x50
    4b3a:	74 26                	je     4b62 <ip4_tcp_decode+0x713>
    4b3c:	83 7d a4 50          	cmp    DWORD PTR [rbp-0x5c],0x50
    4b40:	74 20                	je     4b62 <ip4_tcp_decode+0x713>
    4b42:	80 7d 99 00          	cmp    BYTE PTR [rbp-0x67],0x0
    4b46:	0f 84 da 00 00 00    	je     4c26 <ip4_tcp_decode+0x7d7>
    4b4c:	81 7d a0 bb 01 00 00 	cmp    DWORD PTR [rbp-0x60],0x1bb
    4b53:	74 0d                	je     4b62 <ip4_tcp_decode+0x713>
    4b55:	81 7d a4 bb 01 00 00 	cmp    DWORD PTR [rbp-0x5c],0x1bb
    4b5c:	0f 85 c4 00 00 00    	jne    4c26 <ip4_tcp_decode+0x7d7>
    4b62:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    4b65:	3b 45 a4             	cmp    eax,DWORD PTR [rbp-0x5c]
    4b68:	76 0a                	jbe    4b74 <ip4_tcp_decode+0x725>
    4b6a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4b6e:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    4b72:	eb 08                	jmp    4b7c <ip4_tcp_decode+0x72d>
    4b74:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4b78:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    4b7c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    4b80:	48 89 c7             	mov    rdi,rax
    4b83:	e8 d7 46 00 00       	call   925f <member_exists>
    4b88:	89 45 ac             	mov    DWORD PTR [rbp-0x54],eax
    4b8b:	83 7d ac ff          	cmp    DWORD PTR [rbp-0x54],0xffffffff
    4b8f:	0f 84 91 00 00 00    	je     4c26 <ip4_tcp_decode+0x7d7>
    4b95:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
    4b98:	48 63 d0             	movsxd rdx,eax
    4b9b:	48 89 d0             	mov    rax,rdx
    4b9e:	48 c1 e0 02          	shl    rax,0x2
    4ba2:	48 01 d0             	add    rax,rdx
    4ba5:	48 c1 e0 03          	shl    rax,0x3
    4ba9:	48 01 d0             	add    rax,rdx
    4bac:	48 c1 e0 04          	shl    rax,0x4
    4bb0:	48 8d 15 69 f9 0e 00 	lea    rdx,[rip+0xef969]        # f4520 <watchlist>
    4bb7:	48 01 d0             	add    rax,rdx
    4bba:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    4bbe:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4bc2:	8b 40 34             	mov    eax,DWORD PTR [rax+0x34]
    4bc5:	85 c0                	test   eax,eax
    4bc7:	75 2a                	jne    4bf3 <ip4_tcp_decode+0x7a4>
    4bc9:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4bcd:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4bd0:	83 f8 01             	cmp    eax,0x1
    4bd3:	75 1e                	jne    4bf3 <ip4_tcp_decode+0x7a4>
    4bd5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4bd9:	c7 40 34 01 00 00 00 	mov    DWORD PTR [rax+0x34],0x1
    4be0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4be4:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4be7:	8d 50 01             	lea    edx,[rax+0x1]
    4bea:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4bee:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    4bf1:	eb 33                	jmp    4c26 <ip4_tcp_decode+0x7d7>
    4bf3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4bf7:	8b 40 38             	mov    eax,DWORD PTR [rax+0x38]
    4bfa:	85 c0                	test   eax,eax
    4bfc:	75 28                	jne    4c26 <ip4_tcp_decode+0x7d7>
    4bfe:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4c02:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4c05:	83 f8 02             	cmp    eax,0x2
    4c08:	75 1c                	jne    4c26 <ip4_tcp_decode+0x7d7>
    4c0a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4c0e:	c7 40 38 01 00 00 00 	mov    DWORD PTR [rax+0x38],0x1
    4c15:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4c19:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4c1c:	8d 50 01             	lea    edx,[rax+0x1]
    4c1f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4c23:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    4c26:	0f b6 05 37 63 10 00 	movzx  eax,BYTE PTR [rip+0x106337]        # 10af64 <packet_print>
    4c2d:	84 c0                	test   al,al
    4c2f:	74 3a                	je     4c6b <ip4_tcp_decode+0x81c>
    4c31:	80 7d 9b 00          	cmp    BYTE PTR [rbp-0x65],0x0
    4c35:	74 34                	je     4c6b <ip4_tcp_decode+0x81c>
    4c37:	80 7d 98 00          	cmp    BYTE PTR [rbp-0x68],0x0
    4c3b:	74 2e                	je     4c6b <ip4_tcp_decode+0x81c>
    4c3d:	0f b6 45 9a          	movzx  eax,BYTE PTR [rbp-0x66]
    4c41:	83 f0 01             	xor    eax,0x1
    4c44:	84 c0                	test   al,al
    4c46:	74 23                	je     4c6b <ip4_tcp_decode+0x81c>
    4c48:	83 7d a0 50          	cmp    DWORD PTR [rbp-0x60],0x50
    4c4c:	74 06                	je     4c54 <ip4_tcp_decode+0x805>
    4c4e:	83 7d a4 50          	cmp    DWORD PTR [rbp-0x5c],0x50
    4c52:	75 17                	jne    4c6b <ip4_tcp_decode+0x81c>
    4c54:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    4c58:	48 8d 50 42          	lea    rdx,[rax+0x42]
    4c5c:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4c60:	48 89 c6             	mov    rsi,rax
    4c63:	48 89 d7             	mov    rdi,rdx
    4c66:	e8 ba 4f 00 00       	call   9c25 <http_disect>
    4c6b:	83 7d a0 15          	cmp    DWORD PTR [rbp-0x60],0x15
    4c6f:	74 06                	je     4c77 <ip4_tcp_decode+0x828>
    4c71:	83 7d a4 15          	cmp    DWORD PTR [rbp-0x5c],0x15
    4c75:	75 2d                	jne    4ca4 <ip4_tcp_decode+0x855>
    4c77:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4c7b:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    4c7f:	c0 e8 04             	shr    al,0x4
    4c82:	0f b6 c0             	movzx  eax,al
    4c85:	c1 e0 02             	shl    eax,0x2
    4c88:	48 98                	cdqe   
    4c8a:	48 8d 50 22          	lea    rdx,[rax+0x22]
    4c8e:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    4c92:	48 01 c2             	add    rdx,rax
    4c95:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4c99:	48 89 c6             	mov    rsi,rax
    4c9c:	48 89 d7             	mov    rdi,rdx
    4c9f:	e8 6c 51 00 00       	call   9e10 <ftp_disect>
    4ca4:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    4cab:	8b 50 14             	mov    edx,DWORD PTR [rax+0x14]
    4cae:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4cb2:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    4cb6:	c0 e8 04             	shr    al,0x4
    4cb9:	0f b6 c0             	movzx  eax,al
    4cbc:	c1 e0 02             	shl    eax,0x2
    4cbf:	89 c1                	mov    ecx,eax
    4cc1:	89 d0                	mov    eax,edx
    4cc3:	29 c8                	sub    eax,ecx
    4cc5:	8d 50 de             	lea    edx,[rax-0x22]
    4cc8:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4ccc:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    4ccf:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4cd3:	48 89 c7             	mov    rdi,rax
    4cd6:	e8 4b 17 00 00       	call   6426 <rulemgr>
    4cdb:	90                   	nop
    4cdc:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    4ce0:	c9                   	leave  
    4ce1:	c3                   	ret    

0000000000004ce2 <ip4_udp_decode>:
    4ce2:	f3 0f 1e fa          	endbr64 
    4ce6:	55                   	push   rbp
    4ce7:	48 89 e5             	mov    rbp,rsp
    4cea:	48 83 ec 30          	sub    rsp,0x30
    4cee:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    4cf2:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    4cf6:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    4cfa:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4cfe:	48 83 c0 22          	add    rax,0x22
    4d02:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4d06:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4d0a:	48 8d 50 2a          	lea    rdx,[rax+0x2a]
    4d0e:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d12:	48 89 10             	mov    QWORD PTR [rax],rdx
    4d15:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d19:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    4d1d:	ba 5d 00 00 00       	mov    edx,0x5d
    4d22:	be 01 00 00 00       	mov    esi,0x1
    4d27:	48 89 c7             	mov    rdi,rax
    4d2a:	e8 f6 01 00 00       	call   4f25 <add_ip_addr_or_inc_counter>
    4d2f:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d33:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4d37:	ba 5d 00 00 00       	mov    edx,0x5d
    4d3c:	be 00 00 00 00       	mov    esi,0x0
    4d41:	48 89 c7             	mov    rdi,rax
    4d44:	e8 dc 01 00 00       	call   4f25 <add_ip_addr_or_inc_counter>
    4d49:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4d4d:	0f b7 00             	movzx  eax,WORD PTR [rax]
    4d50:	0f b7 c0             	movzx  eax,ax
    4d53:	89 c7                	mov    edi,eax
    4d55:	e8 a6 db ff ff       	call   2900 <ntohs@plt>
    4d5a:	0f b7 c0             	movzx  eax,ax
    4d5d:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
    4d60:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4d64:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    4d68:	0f b7 c0             	movzx  eax,ax
    4d6b:	89 c7                	mov    edi,eax
    4d6d:	e8 8e db ff ff       	call   2900 <ntohs@plt>
    4d72:	0f b7 c0             	movzx  eax,ax
    4d75:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    4d78:	0f b6 05 e5 61 10 00 	movzx  eax,BYTE PTR [rip+0x1061e5]        # 10af64 <packet_print>
    4d7f:	84 c0                	test   al,al
    4d81:	74 5d                	je     4de0 <ip4_udp_decode+0xfe>
    4d83:	48 8d 35 96 8c 00 00 	lea    rsi,[rip+0x8c96]        # da20 <_IO_stdin_used+0xa20>
    4d8a:	48 8d 3d 95 8c 00 00 	lea    rdi,[rip+0x8c95]        # da26 <_IO_stdin_used+0xa26>
    4d91:	b8 00 00 00 00       	mov    eax,0x0
    4d96:	e8 25 d7 ff ff       	call   24c0 <printf@plt>
    4d9b:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d9f:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    4da3:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4da7:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    4dab:	8b 75 f4             	mov    esi,DWORD PTR [rbp-0xc]
    4dae:	8b 55 f0             	mov    edx,DWORD PTR [rbp-0x10]
    4db1:	41 89 f0             	mov    r8d,esi
    4db4:	48 89 c6             	mov    rsi,rax
    4db7:	48 8d 3d 6b 8c 00 00 	lea    rdi,[rip+0x8c6b]        # da29 <_IO_stdin_used+0xa29>
    4dbe:	b8 00 00 00 00       	mov    eax,0x0
    4dc3:	e8 f8 d6 ff ff       	call   24c0 <printf@plt>
    4dc8:	48 8d 35 73 8c 00 00 	lea    rsi,[rip+0x8c73]        # da42 <_IO_stdin_used+0xa42>
    4dcf:	48 8d 3d 50 8c 00 00 	lea    rdi,[rip+0x8c50]        # da26 <_IO_stdin_used+0xa26>
    4dd6:	b8 00 00 00 00       	mov    eax,0x0
    4ddb:	e8 e0 d6 ff ff       	call   24c0 <printf@plt>
    4de0:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4de4:	8b 55 f0             	mov    edx,DWORD PTR [rbp-0x10]
    4de7:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    4dea:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4dee:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
    4df1:	89 50 28             	mov    DWORD PTR [rax+0x28],edx
    4df4:	83 7d f0 35          	cmp    DWORD PTR [rbp-0x10],0x35
    4df8:	74 06                	je     4e00 <ip4_udp_decode+0x11e>
    4dfa:	83 7d f4 35          	cmp    DWORD PTR [rbp-0xc],0x35
    4dfe:	75 17                	jne    4e17 <ip4_udp_decode+0x135>
    4e00:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4e04:	48 8d 50 2b          	lea    rdx,[rax+0x2b]
    4e08:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e0c:	48 89 c6             	mov    rsi,rax
    4e0f:	48 89 d7             	mov    rdi,rdx
    4e12:	e8 c0 4e 00 00       	call   9cd7 <dns_disect>
    4e17:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4e1b:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    4e1e:	8d 50 d6             	lea    edx,[rax-0x2a]
    4e21:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e25:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    4e28:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e2c:	48 89 c7             	mov    rdi,rax
    4e2f:	e8 f2 15 00 00       	call   6426 <rulemgr>
    4e34:	90                   	nop
    4e35:	c9                   	leave  
    4e36:	c3                   	ret    

0000000000004e37 <ip4_igmp_decode>:
    4e37:	f3 0f 1e fa          	endbr64 
    4e3b:	55                   	push   rbp
    4e3c:	48 89 e5             	mov    rbp,rsp
    4e3f:	48 83 ec 60          	sub    rsp,0x60
    4e43:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    4e47:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
    4e4b:	48 89 55 a8          	mov    QWORD PTR [rbp-0x58],rdx
    4e4f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4e56:	00 00 
    4e58:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4e5c:	31 c0                	xor    eax,eax
    4e5e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4e62:	48 83 c0 26          	add    rax,0x26
    4e66:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    4e6a:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    4e6e:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    4e72:	48 89 c6             	mov    rsi,rax
    4e75:	48 8d 3d cc 8b 00 00 	lea    rdi,[rip+0x8bcc]        # da48 <_IO_stdin_used+0xa48>
    4e7c:	b8 00 00 00 00       	mov    eax,0x0
    4e81:	e8 3a d6 ff ff       	call   24c0 <printf@plt>
    4e86:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4e8a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4e8d:	0f b6 c0             	movzx  eax,al
    4e90:	83 f8 11             	cmp    eax,0x11
    4e93:	74 07                	je     4e9c <ip4_igmp_decode+0x65>
    4e95:	83 f8 22             	cmp    eax,0x22
    4e98:	74 10                	je     4eaa <ip4_igmp_decode+0x73>
    4e9a:	eb 54                	jmp    4ef0 <ip4_igmp_decode+0xb9>
    4e9c:	48 8d 3d ba 8b 00 00 	lea    rdi,[rip+0x8bba]        # da5d <_IO_stdin_used+0xa5d>
    4ea3:	e8 b8 d9 ff ff       	call   2860 <puts@plt>
    4ea8:	eb 64                	jmp    4f0e <ip4_igmp_decode+0xd7>
    4eaa:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4eae:	48 83 c0 26          	add    rax,0x26
    4eb2:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    4eb6:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4eba:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    4ebd:	89 c7                	mov    edi,eax
    4ebf:	e8 bb e2 ff ff       	call   317f <ipv4_ntoa>
    4ec4:	48 89 c2             	mov    rdx,rax
    4ec7:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    4ecb:	48 89 d6             	mov    rsi,rdx
    4ece:	48 89 c7             	mov    rdi,rax
    4ed1:	e8 ca d7 ff ff       	call   26a0 <strcpy@plt>
    4ed6:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    4eda:	48 89 c6             	mov    rsi,rax
    4edd:	48 8d 3d 94 8b 00 00 	lea    rdi,[rip+0x8b94]        # da78 <_IO_stdin_used+0xa78>
    4ee4:	b8 00 00 00 00       	mov    eax,0x0
    4ee9:	e8 d2 d5 ff ff       	call   24c0 <printf@plt>
    4eee:	eb 1e                	jmp    4f0e <ip4_igmp_decode+0xd7>
    4ef0:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4ef4:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4ef7:	0f b6 c0             	movzx  eax,al
    4efa:	89 c6                	mov    esi,eax
    4efc:	48 8d 3d ab 8b 00 00 	lea    rdi,[rip+0x8bab]        # daae <_IO_stdin_used+0xaae>
    4f03:	b8 00 00 00 00       	mov    eax,0x0
    4f08:	e8 b3 d5 ff ff       	call   24c0 <printf@plt>
    4f0d:	90                   	nop
    4f0e:	90                   	nop
    4f0f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4f13:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    4f1a:	00 00 
    4f1c:	74 05                	je     4f23 <ip4_igmp_decode+0xec>
    4f1e:	e8 ad d7 ff ff       	call   26d0 <__stack_chk_fail@plt>
    4f23:	c9                   	leave  
    4f24:	c3                   	ret    

0000000000004f25 <add_ip_addr_or_inc_counter>:
    4f25:	f3 0f 1e fa          	endbr64 
    4f29:	55                   	push   rbp
    4f2a:	48 89 e5             	mov    rbp,rsp
    4f2d:	48 83 ec 60          	sub    rsp,0x60
    4f31:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    4f35:	89 f0                	mov    eax,esi
    4f37:	89 55 a0             	mov    DWORD PTR [rbp-0x60],edx
    4f3a:	88 45 a4             	mov    BYTE PTR [rbp-0x5c],al
    4f3d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4f44:	00 00 
    4f46:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4f4a:	31 c0                	xor    eax,eax
    4f4c:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4f50:	ba 08 00 00 00       	mov    edx,0x8
    4f55:	be 00 00 00 00       	mov    esi,0x0
    4f5a:	48 89 c7             	mov    rdi,rax
    4f5d:	e8 ae d6 ff ff       	call   2610 <memset@plt>
    4f62:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    4f66:	ba 1c 00 00 00       	mov    edx,0x1c
    4f6b:	be 00 00 00 00       	mov    esi,0x0
    4f70:	48 89 c7             	mov    rdi,rax
    4f73:	e8 98 d6 ff ff       	call   2610 <memset@plt>
    4f78:	48 8b 4d a8          	mov    rcx,QWORD PTR [rbp-0x58]
    4f7c:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4f80:	ba 18 00 00 00       	mov    edx,0x18
    4f85:	48 89 ce             	mov    rsi,rcx
    4f88:	48 89 c7             	mov    rdi,rax
    4f8b:	e8 60 d6 ff ff       	call   25f0 <strncpy@plt>
    4f90:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    4f94:	ba 1c 00 00 00       	mov    edx,0x1c
    4f99:	be 00 00 00 00       	mov    esi,0x0
    4f9e:	48 89 c7             	mov    rdi,rax
    4fa1:	e8 6a d6 ff ff       	call   2610 <memset@plt>
    4fa6:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4faa:	48 8d 55 c0          	lea    rdx,[rbp-0x40]
    4fae:	48 83 c2 08          	add    rdx,0x8
    4fb2:	48 89 c6             	mov    rsi,rax
    4fb5:	48 89 d7             	mov    rdi,rdx
    4fb8:	e8 e3 d6 ff ff       	call   26a0 <strcpy@plt>
    4fbd:	0f b6 45 a4          	movzx  eax,BYTE PTR [rbp-0x5c]
    4fc1:	88 45 c0             	mov    BYTE PTR [rbp-0x40],al
    4fc4:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    4fc7:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    4fca:	48 8d 55 c0          	lea    rdx,[rbp-0x40]
    4fce:	48 8d 45 b8          	lea    rax,[rbp-0x48]
    4fd2:	48 89 d1             	mov    rcx,rdx
    4fd5:	48 8d 15 35 00 00 00 	lea    rdx,[rip+0x35]        # 5011 <verify_ip_addr>
    4fdc:	be 00 00 00 00       	mov    esi,0x0
    4fe1:	48 89 c7             	mov    rdi,rax
    4fe4:	e8 07 d9 ff ff       	call   28f0 <pthread_create@plt>
    4fe9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4fed:	be 00 00 00 00       	mov    esi,0x0
    4ff2:	48 89 c7             	mov    rdi,rax
    4ff5:	e8 86 d6 ff ff       	call   2680 <pthread_join@plt>
    4ffa:	90                   	nop
    4ffb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4fff:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    5006:	00 00 
    5008:	74 05                	je     500f <add_ip_addr_or_inc_counter+0xea>
    500a:	e8 c1 d6 ff ff       	call   26d0 <__stack_chk_fail@plt>
    500f:	c9                   	leave  
    5010:	c3                   	ret    

0000000000005011 <verify_ip_addr>:
    5011:	f3 0f 1e fa          	endbr64 
    5015:	55                   	push   rbp
    5016:	48 89 e5             	mov    rbp,rsp
    5019:	48 83 ec 30          	sub    rsp,0x30
    501d:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    5021:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    5025:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    5029:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
    5030:	e9 c9 00 00 00       	jmp    50fe <verify_ip_addr+0xed>
    5035:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    5038:	48 63 d0             	movsxd rdx,eax
    503b:	48 89 d0             	mov    rax,rdx
    503e:	48 c1 e0 02          	shl    rax,0x2
    5042:	48 01 d0             	add    rax,rdx
    5045:	48 c1 e0 03          	shl    rax,0x3
    5049:	48 01 d0             	add    rax,rdx
    504c:	48 c1 e0 04          	shl    rax,0x4
    5050:	48 8d 15 c9 f4 0e 00 	lea    rdx,[rip+0xef4c9]        # f4520 <watchlist>
    5057:	48 01 d0             	add    rax,rdx
    505a:	48 8d 50 08          	lea    rdx,[rax+0x8]
    505e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5062:	48 83 c0 08          	add    rax,0x8
    5066:	48 89 d6             	mov    rsi,rdx
    5069:	48 89 c7             	mov    rdi,rax
    506c:	e8 6f d7 ff ff       	call   27e0 <strcmp@plt>
    5071:	85 c0                	test   eax,eax
    5073:	0f 85 81 00 00 00    	jne    50fa <verify_ip_addr+0xe9>
    5079:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    507c:	48 63 d0             	movsxd rdx,eax
    507f:	48 89 d0             	mov    rax,rdx
    5082:	48 c1 e0 02          	shl    rax,0x2
    5086:	48 01 d0             	add    rax,rdx
    5089:	48 c1 e0 03          	shl    rax,0x3
    508d:	48 01 d0             	add    rax,rdx
    5090:	48 c1 e0 04          	shl    rax,0x4
    5094:	48 89 c2             	mov    rdx,rax
    5097:	48 8d 05 da f6 0e 00 	lea    rax,[rip+0xef6da]        # f4778 <watchlist+0x258>
    509e:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    50a1:	8d 48 01             	lea    ecx,[rax+0x1]
    50a4:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    50a7:	48 63 d0             	movsxd rdx,eax
    50aa:	48 89 d0             	mov    rax,rdx
    50ad:	48 c1 e0 02          	shl    rax,0x2
    50b1:	48 01 d0             	add    rax,rdx
    50b4:	48 c1 e0 03          	shl    rax,0x3
    50b8:	48 01 d0             	add    rax,rdx
    50bb:	48 c1 e0 04          	shl    rax,0x4
    50bf:	48 89 c2             	mov    rdx,rax
    50c2:	48 8d 05 af f6 0e 00 	lea    rax,[rip+0xef6af]        # f4778 <watchlist+0x258>
    50c9:	89 0c 02             	mov    DWORD PTR [rdx+rax*1],ecx
    50cc:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    50cf:	48 63 d0             	movsxd rdx,eax
    50d2:	48 89 d0             	mov    rax,rdx
    50d5:	48 c1 e0 02          	shl    rax,0x2
    50d9:	48 01 d0             	add    rax,rdx
    50dc:	48 c1 e0 03          	shl    rax,0x3
    50e0:	48 01 d0             	add    rax,rdx
    50e3:	48 c1 e0 04          	shl    rax,0x4
    50e7:	48 8d 15 32 f4 0e 00 	lea    rdx,[rip+0xef432]        # f4520 <watchlist>
    50ee:	48 01 d0             	add    rax,rdx
    50f1:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    50f5:	e9 f5 00 00 00       	jmp    51ef <verify_ip_addr+0x1de>
    50fa:	83 45 e4 01          	add    DWORD PTR [rbp-0x1c],0x1
    50fe:	8b 05 14 cf 00 00    	mov    eax,DWORD PTR [rip+0xcf14]        # 12018 <watchlist_num>
    5104:	39 45 e4             	cmp    DWORD PTR [rbp-0x1c],eax
    5107:	0f 8e 28 ff ff ff    	jle    5035 <verify_ip_addr+0x24>
    510d:	bf 90 02 00 00       	mov    edi,0x290
    5112:	e8 79 d6 ff ff       	call   2790 <malloc@plt>
    5117:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    511b:	8b 05 f7 ce 00 00    	mov    eax,DWORD PTR [rip+0xcef7]        # 12018 <watchlist_num>
    5121:	83 c0 01             	add    eax,0x1
    5124:	89 05 ee ce 00 00    	mov    DWORD PTR [rip+0xceee],eax        # 12018 <watchlist_num>
    512a:	8b 05 e8 ce 00 00    	mov    eax,DWORD PTR [rip+0xcee8]        # 12018 <watchlist_num>
    5130:	48 63 d0             	movsxd rdx,eax
    5133:	48 89 d0             	mov    rax,rdx
    5136:	48 c1 e0 02          	shl    rax,0x2
    513a:	48 01 d0             	add    rax,rdx
    513d:	48 c1 e0 03          	shl    rax,0x3
    5141:	48 01 d0             	add    rax,rdx
    5144:	48 c1 e0 04          	shl    rax,0x4
    5148:	48 89 c1             	mov    rcx,rax
    514b:	48 8d 05 ce f3 0e 00 	lea    rax,[rip+0xef3ce]        # f4520 <watchlist>
    5152:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    5156:	48 01 c8             	add    rax,rcx
    5159:	48 89 d6             	mov    rsi,rdx
    515c:	ba 52 00 00 00       	mov    edx,0x52
    5161:	48 89 c7             	mov    rdi,rax
    5164:	48 89 d1             	mov    rcx,rdx
    5167:	f3 48 a5             	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
    516a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    516e:	48 83 c0 08          	add    rax,0x8
    5172:	ba 0f 00 00 00       	mov    edx,0xf
    5177:	be 00 00 00 00       	mov    esi,0x0
    517c:	48 89 c7             	mov    rdi,rax
    517f:	e8 8c d4 ff ff       	call   2610 <memset@plt>
    5184:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5188:	48 8d 48 08          	lea    rcx,[rax+0x8]
    518c:	8b 05 86 ce 00 00    	mov    eax,DWORD PTR [rip+0xce86]        # 12018 <watchlist_num>
    5192:	48 63 d0             	movsxd rdx,eax
    5195:	48 89 d0             	mov    rax,rdx
    5198:	48 c1 e0 02          	shl    rax,0x2
    519c:	48 01 d0             	add    rax,rdx
    519f:	48 c1 e0 03          	shl    rax,0x3
    51a3:	48 01 d0             	add    rax,rdx
    51a6:	48 c1 e0 04          	shl    rax,0x4
    51aa:	48 8d 15 6f f3 0e 00 	lea    rdx,[rip+0xef36f]        # f4520 <watchlist>
    51b1:	48 01 d0             	add    rax,rdx
    51b4:	48 83 c0 08          	add    rax,0x8
    51b8:	48 89 ce             	mov    rsi,rcx
    51bb:	48 89 c7             	mov    rdi,rax
    51be:	e8 dd d4 ff ff       	call   26a0 <strcpy@plt>
    51c3:	8b 05 4f ce 00 00    	mov    eax,DWORD PTR [rip+0xce4f]        # 12018 <watchlist_num>
    51c9:	48 63 d0             	movsxd rdx,eax
    51cc:	48 89 d0             	mov    rax,rdx
    51cf:	48 c1 e0 02          	shl    rax,0x2
    51d3:	48 01 d0             	add    rax,rdx
    51d6:	48 c1 e0 03          	shl    rax,0x3
    51da:	48 01 d0             	add    rax,rdx
    51dd:	48 c1 e0 04          	shl    rax,0x4
    51e1:	48 8d 15 38 f3 0e 00 	lea    rdx,[rip+0xef338]        # f4520 <watchlist>
    51e8:	48 01 d0             	add    rax,rdx
    51eb:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    51ef:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    51f3:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    51f6:	84 c0                	test   al,al
    51f8:	74 36                	je     5230 <verify_ip_addr+0x21f>
    51fa:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    51fe:	8b 80 80 02 00 00    	mov    eax,DWORD PTR [rax+0x280]
    5204:	8d 50 01             	lea    edx,[rax+0x1]
    5207:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    520b:	89 90 80 02 00 00    	mov    DWORD PTR [rax+0x280],edx
    5211:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5215:	8b 90 88 02 00 00    	mov    edx,DWORD PTR [rax+0x288]
    521b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    521f:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    5222:	01 c2                	add    edx,eax
    5224:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5228:	89 90 88 02 00 00    	mov    DWORD PTR [rax+0x288],edx
    522e:	eb 34                	jmp    5264 <verify_ip_addr+0x253>
    5230:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5234:	8b 80 7c 02 00 00    	mov    eax,DWORD PTR [rax+0x27c]
    523a:	8d 50 01             	lea    edx,[rax+0x1]
    523d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5241:	89 90 7c 02 00 00    	mov    DWORD PTR [rax+0x27c],edx
    5247:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    524b:	8b 90 84 02 00 00    	mov    edx,DWORD PTR [rax+0x284]
    5251:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5255:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    5258:	01 c2                	add    edx,eax
    525a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    525e:	89 90 84 02 00 00    	mov    DWORD PTR [rax+0x284],edx
    5264:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5268:	8b 90 8c 02 00 00    	mov    edx,DWORD PTR [rax+0x28c]
    526e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5272:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    5275:	01 c2                	add    edx,eax
    5277:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    527b:	89 90 8c 02 00 00    	mov    DWORD PTR [rax+0x28c],edx
    5281:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5285:	8b 80 7c 02 00 00    	mov    eax,DWORD PTR [rax+0x27c]
    528b:	8d 14 00             	lea    edx,[rax+rax*1]
    528e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5292:	89 90 58 02 00 00    	mov    DWORD PTR [rax+0x258],edx
    5298:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    529c:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    529f:	83 f8 5e             	cmp    eax,0x5e
    52a2:	0f 84 9b 00 00 00    	je     5343 <verify_ip_addr+0x332>
    52a8:	83 f8 5e             	cmp    eax,0x5e
    52ab:	0f 8f cf 00 00 00    	jg     5380 <verify_ip_addr+0x36f>
    52b1:	83 f8 5c             	cmp    eax,0x5c
    52b4:	74 0a                	je     52c0 <verify_ip_addr+0x2af>
    52b6:	83 f8 5d             	cmp    eax,0x5d
    52b9:	74 48                	je     5303 <verify_ip_addr+0x2f2>
    52bb:	e9 c0 00 00 00       	jmp    5380 <verify_ip_addr+0x36f>
    52c0:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    52c4:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    52c7:	84 c0                	test   al,al
    52c9:	74 1c                	je     52e7 <verify_ip_addr+0x2d6>
    52cb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52cf:	8b 80 5c 02 00 00    	mov    eax,DWORD PTR [rax+0x25c]
    52d5:	8d 50 01             	lea    edx,[rax+0x1]
    52d8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52dc:	89 90 5c 02 00 00    	mov    DWORD PTR [rax+0x25c],edx
    52e2:	e9 d5 00 00 00       	jmp    53bc <verify_ip_addr+0x3ab>
    52e7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52eb:	8b 80 68 02 00 00    	mov    eax,DWORD PTR [rax+0x268]
    52f1:	8d 50 01             	lea    edx,[rax+0x1]
    52f4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52f8:	89 90 68 02 00 00    	mov    DWORD PTR [rax+0x268],edx
    52fe:	e9 b9 00 00 00       	jmp    53bc <verify_ip_addr+0x3ab>
    5303:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5307:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    530a:	84 c0                	test   al,al
    530c:	74 1c                	je     532a <verify_ip_addr+0x319>
    530e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5312:	8b 80 60 02 00 00    	mov    eax,DWORD PTR [rax+0x260]
    5318:	8d 50 01             	lea    edx,[rax+0x1]
    531b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    531f:	89 90 60 02 00 00    	mov    DWORD PTR [rax+0x260],edx
    5325:	e9 92 00 00 00       	jmp    53bc <verify_ip_addr+0x3ab>
    532a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    532e:	8b 80 6c 02 00 00    	mov    eax,DWORD PTR [rax+0x26c]
    5334:	8d 50 01             	lea    edx,[rax+0x1]
    5337:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    533b:	89 90 6c 02 00 00    	mov    DWORD PTR [rax+0x26c],edx
    5341:	eb 79                	jmp    53bc <verify_ip_addr+0x3ab>
    5343:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5347:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    534a:	84 c0                	test   al,al
    534c:	74 19                	je     5367 <verify_ip_addr+0x356>
    534e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5352:	8b 80 64 02 00 00    	mov    eax,DWORD PTR [rax+0x264]
    5358:	8d 50 01             	lea    edx,[rax+0x1]
    535b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    535f:	89 90 64 02 00 00    	mov    DWORD PTR [rax+0x264],edx
    5365:	eb 55                	jmp    53bc <verify_ip_addr+0x3ab>
    5367:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    536b:	8b 80 70 02 00 00    	mov    eax,DWORD PTR [rax+0x270]
    5371:	8d 50 01             	lea    edx,[rax+0x1]
    5374:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5378:	89 90 70 02 00 00    	mov    DWORD PTR [rax+0x270],edx
    537e:	eb 3c                	jmp    53bc <verify_ip_addr+0x3ab>
    5380:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5384:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5387:	84 c0                	test   al,al
    5389:	74 19                	je     53a4 <verify_ip_addr+0x393>
    538b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    538f:	8b 80 74 02 00 00    	mov    eax,DWORD PTR [rax+0x274]
    5395:	8d 50 01             	lea    edx,[rax+0x1]
    5398:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    539c:	89 90 74 02 00 00    	mov    DWORD PTR [rax+0x274],edx
    53a2:	eb 17                	jmp    53bb <verify_ip_addr+0x3aa>
    53a4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53a8:	8b 80 78 02 00 00    	mov    eax,DWORD PTR [rax+0x278]
    53ae:	8d 50 01             	lea    edx,[rax+0x1]
    53b1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53b5:	89 90 78 02 00 00    	mov    DWORD PTR [rax+0x278],edx
    53bb:	90                   	nop
    53bc:	b8 01 00 00 00       	mov    eax,0x1
    53c1:	c9                   	leave  
    53c2:	c3                   	ret    

00000000000053c3 <ascii_hexdump>:
    53c3:	f3 0f 1e fa          	endbr64 
    53c7:	55                   	push   rbp
    53c8:	48 89 e5             	mov    rbp,rsp
    53cb:	48 83 ec 20          	sub    rsp,0x20
    53cf:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    53d3:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    53d6:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    53dd:	eb 52                	jmp    5431 <ascii_hexdump+0x6e>
    53df:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    53e2:	48 63 d0             	movsxd rdx,eax
    53e5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53e9:	48 01 d0             	add    rax,rdx
    53ec:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    53ef:	3c 20                	cmp    al,0x20
    53f1:	76 30                	jbe    5423 <ascii_hexdump+0x60>
    53f3:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    53f6:	48 63 d0             	movsxd rdx,eax
    53f9:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53fd:	48 01 d0             	add    rax,rdx
    5400:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5403:	3c 7e                	cmp    al,0x7e
    5405:	77 1c                	ja     5423 <ascii_hexdump+0x60>
    5407:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    540a:	48 63 d0             	movsxd rdx,eax
    540d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5411:	48 01 d0             	add    rax,rdx
    5414:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5417:	0f b6 c0             	movzx  eax,al
    541a:	89 c7                	mov    edi,eax
    541c:	e8 af d3 ff ff       	call   27d0 <putchar@plt>
    5421:	eb 0a                	jmp    542d <ascii_hexdump+0x6a>
    5423:	bf 2e 00 00 00       	mov    edi,0x2e
    5428:	e8 a3 d3 ff ff       	call   27d0 <putchar@plt>
    542d:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    5431:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5434:	3b 45 e4             	cmp    eax,DWORD PTR [rbp-0x1c]
    5437:	7c a6                	jl     53df <ascii_hexdump+0x1c>
    5439:	bf 0a 00 00 00       	mov    edi,0xa
    543e:	e8 8d d3 ff ff       	call   27d0 <putchar@plt>
    5443:	90                   	nop
    5444:	c9                   	leave  
    5445:	c3                   	ret    

0000000000005446 <stdout_alert>:
    5446:	f3 0f 1e fa          	endbr64 
    544a:	55                   	push   rbp
    544b:	48 89 e5             	mov    rbp,rsp
    544e:	53                   	push   rbx
    544f:	48 81 ec c8 01 00 00 	sub    rsp,0x1c8
    5456:	48 89 bd 48 fe ff ff 	mov    QWORD PTR [rbp-0x1b8],rdi
    545d:	48 89 b5 40 fe ff ff 	mov    QWORD PTR [rbp-0x1c0],rsi
    5464:	89 95 3c fe ff ff    	mov    DWORD PTR [rbp-0x1c4],edx
    546a:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    5471:	00 00 
    5473:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    5477:	31 c0                	xor    eax,eax
    5479:	bf 00 00 00 00       	mov    edi,0x0
    547e:	e8 0d d2 ff ff       	call   2690 <time@plt>
    5483:	48 89 85 50 fe ff ff 	mov    QWORD PTR [rbp-0x1b0],rax
    548a:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
    5491:	48 89 c7             	mov    rdi,rax
    5494:	e8 97 d1 ff ff       	call   2630 <localtime@plt>
    5499:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    549c:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    54a0:	48 89 8d 60 fe ff ff 	mov    QWORD PTR [rbp-0x1a0],rcx
    54a7:	48 89 9d 68 fe ff ff 	mov    QWORD PTR [rbp-0x198],rbx
    54ae:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    54b2:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    54b6:	48 89 8d 70 fe ff ff 	mov    QWORD PTR [rbp-0x190],rcx
    54bd:	48 89 9d 78 fe ff ff 	mov    QWORD PTR [rbp-0x188],rbx
    54c4:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    54c8:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    54cc:	48 89 8d 80 fe ff ff 	mov    QWORD PTR [rbp-0x180],rcx
    54d3:	48 89 9d 88 fe ff ff 	mov    QWORD PTR [rbp-0x178],rbx
    54da:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    54de:	48 89 85 90 fe ff ff 	mov    QWORD PTR [rbp-0x170],rax
    54e5:	8b bd 60 fe ff ff    	mov    edi,DWORD PTR [rbp-0x1a0]
    54eb:	8b b5 64 fe ff ff    	mov    esi,DWORD PTR [rbp-0x19c]
    54f1:	44 8b 8d 68 fe ff ff 	mov    r9d,DWORD PTR [rbp-0x198]
    54f8:	44 8b 85 6c fe ff ff 	mov    r8d,DWORD PTR [rbp-0x194]
    54ff:	8b 85 70 fe ff ff    	mov    eax,DWORD PTR [rbp-0x190]
    5505:	8d 48 01             	lea    ecx,[rax+0x1]
    5508:	8b 85 74 fe ff ff    	mov    eax,DWORD PTR [rbp-0x18c]
    550e:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    5514:	48 8d 85 a0 fe ff ff 	lea    rax,[rbp-0x160]
    551b:	57                   	push   rdi
    551c:	56                   	push   rsi
    551d:	48 8d 35 a2 85 00 00 	lea    rsi,[rip+0x85a2]        # dac6 <_IO_stdin_used+0xac6>
    5524:	48 89 c7             	mov    rdi,rax
    5527:	b8 00 00 00 00       	mov    eax,0x0
    552c:	e8 cf cf ff ff       	call   2500 <sprintf@plt>
    5531:	48 83 c4 10          	add    rsp,0x10
    5535:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    553c:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    553f:	3d 80 00 00 00       	cmp    eax,0x80
    5544:	75 4e                	jne    5594 <stdout_alert+0x14e>
    5546:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    554d:	48 8b 78 10          	mov    rdi,QWORD PTR [rax+0x10]
    5551:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    5558:	48 8b 70 08          	mov    rsi,QWORD PTR [rax+0x8]
    555c:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
    5563:	48 8d 88 4c 01 00 00 	lea    rcx,[rax+0x14c]
    556a:	48 8d 95 a0 fe ff ff 	lea    rdx,[rbp-0x160]
    5571:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    5578:	49 89 f9             	mov    r9,rdi
    557b:	49 89 f0             	mov    r8,rsi
    557e:	48 8d 35 5d 85 00 00 	lea    rsi,[rip+0x855d]        # dae2 <_IO_stdin_used+0xae2>
    5585:	48 89 c7             	mov    rdi,rax
    5588:	b8 00 00 00 00       	mov    eax,0x0
    558d:	e8 6e cf ff ff       	call   2500 <sprintf@plt>
    5592:	eb 61                	jmp    55f5 <stdout_alert+0x1af>
    5594:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    559b:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    559e:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    55a5:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    55a9:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    55b0:	44 8b 48 24          	mov    r9d,DWORD PTR [rax+0x24]
    55b4:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    55bb:	4c 8b 40 08          	mov    r8,QWORD PTR [rax+0x8]
    55bf:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
    55c6:	48 8d 88 4c 01 00 00 	lea    rcx,[rax+0x14c]
    55cd:	48 8d 95 a0 fe ff ff 	lea    rdx,[rbp-0x160]
    55d4:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    55db:	57                   	push   rdi
    55dc:	56                   	push   rsi
    55dd:	48 8d 35 0e 85 00 00 	lea    rsi,[rip+0x850e]        # daf2 <_IO_stdin_used+0xaf2>
    55e4:	48 89 c7             	mov    rdi,rax
    55e7:	b8 00 00 00 00       	mov    eax,0x0
    55ec:	e8 0f cf ff ff       	call   2500 <sprintf@plt>
    55f1:	48 83 c4 10          	add    rsp,0x10
    55f5:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    55fc:	48 89 c6             	mov    rsi,rax
    55ff:	48 8d 3d 02 85 00 00 	lea    rdi,[rip+0x8502]        # db08 <_IO_stdin_used+0xb08>
    5606:	b8 00 00 00 00       	mov    eax,0x0
    560b:	e8 b0 ce ff ff       	call   24c0 <printf@plt>
    5610:	48 8b 05 21 ca 00 00 	mov    rax,QWORD PTR [rip+0xca21]        # 12038 <def_log_file>
    5617:	48 8d 35 ed 84 00 00 	lea    rsi,[rip+0x84ed]        # db0b <_IO_stdin_used+0xb0b>
    561e:	48 89 c7             	mov    rdi,rax
    5621:	e8 ea d0 ff ff       	call   2710 <fopen@plt>
    5626:	48 89 85 58 fe ff ff 	mov    QWORD PTR [rbp-0x1a8],rax
    562d:	48 8b 95 58 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1a8]
    5634:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    563b:	48 89 d6             	mov    rsi,rdx
    563e:	48 89 c7             	mov    rdi,rax
    5641:	e8 9a d0 ff ff       	call   26e0 <fputs@plt>
    5646:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    564d:	48 89 c7             	mov    rdi,rax
    5650:	e8 6b d0 ff ff       	call   26c0 <fclose@plt>
    5655:	90                   	nop
    5656:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    565a:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    5661:	00 00 
    5663:	74 05                	je     566a <stdout_alert+0x224>
    5665:	e8 66 d0 ff ff       	call   26d0 <__stack_chk_fail@plt>
    566a:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    566e:	c9                   	leave  
    566f:	c3                   	ret    

0000000000005670 <str_match_parser>:
    5670:	f3 0f 1e fa          	endbr64 
    5674:	55                   	push   rbp
    5675:	48 89 e5             	mov    rbp,rsp
    5678:	53                   	push   rbx
    5679:	48 83 ec 48          	sub    rsp,0x48
    567d:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    5681:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
    5685:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    568c:	00 00 
    568e:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    5692:	31 c0                	xor    eax,eax
    5694:	48 89 e0             	mov    rax,rsp
    5697:	48 89 c3             	mov    rbx,rax
    569a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    569e:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    56a1:	85 c0                	test   eax,eax
    56a3:	75 0a                	jne    56af <str_match_parser+0x3f>
    56a5:	b8 00 00 00 00       	mov    eax,0x0
    56aa:	e9 e1 01 00 00       	jmp    5890 <str_match_parser+0x220>
    56af:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    56b3:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    56b6:	83 c0 01             	add    eax,0x1
    56b9:	01 c0                	add    eax,eax
    56bb:	48 98                	cdqe   
    56bd:	48 83 e8 01          	sub    rax,0x1
    56c1:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    56c5:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    56c9:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    56cc:	83 c0 01             	add    eax,0x1
    56cf:	01 c0                	add    eax,eax
    56d1:	48 98                	cdqe   
    56d3:	49 89 c2             	mov    r10,rax
    56d6:	41 bb 00 00 00 00    	mov    r11d,0x0
    56dc:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    56e0:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    56e3:	83 c0 01             	add    eax,0x1
    56e6:	01 c0                	add    eax,eax
    56e8:	48 98                	cdqe   
    56ea:	49 89 c0             	mov    r8,rax
    56ed:	41 b9 00 00 00 00    	mov    r9d,0x0
    56f3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    56f7:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    56fa:	83 c0 01             	add    eax,0x1
    56fd:	01 c0                	add    eax,eax
    56ff:	48 98                	cdqe   
    5701:	ba 10 00 00 00       	mov    edx,0x10
    5706:	48 83 ea 01          	sub    rdx,0x1
    570a:	48 01 d0             	add    rax,rdx
    570d:	be 10 00 00 00       	mov    esi,0x10
    5712:	ba 00 00 00 00       	mov    edx,0x0
    5717:	48 f7 f6             	div    rsi
    571a:	48 6b c0 10          	imul   rax,rax,0x10
    571e:	48 89 c1             	mov    rcx,rax
    5721:	48 81 e1 00 f0 ff ff 	and    rcx,0xfffffffffffff000
    5728:	48 89 e2             	mov    rdx,rsp
    572b:	48 29 ca             	sub    rdx,rcx
    572e:	48 39 d4             	cmp    rsp,rdx
    5731:	74 12                	je     5745 <str_match_parser+0xd5>
    5733:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    573a:	48 83 8c 24 f8 0f 00 	or     QWORD PTR [rsp+0xff8],0x0
    5741:	00 00 
    5743:	eb e9                	jmp    572e <str_match_parser+0xbe>
    5745:	48 89 c2             	mov    rdx,rax
    5748:	81 e2 ff 0f 00 00    	and    edx,0xfff
    574e:	48 29 d4             	sub    rsp,rdx
    5751:	48 89 c2             	mov    rdx,rax
    5754:	81 e2 ff 0f 00 00    	and    edx,0xfff
    575a:	48 85 d2             	test   rdx,rdx
    575d:	74 10                	je     576f <str_match_parser+0xff>
    575f:	25 ff 0f 00 00       	and    eax,0xfff
    5764:	48 83 e8 08          	sub    rax,0x8
    5768:	48 01 e0             	add    rax,rsp
    576b:	48 83 08 00          	or     QWORD PTR [rax],0x0
    576f:	48 89 e0             	mov    rax,rsp
    5772:	48 83 c0 00          	add    rax,0x0
    5776:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    577a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    577e:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5781:	83 c0 01             	add    eax,0x1
    5784:	01 c0                	add    eax,eax
    5786:	48 63 d0             	movsxd rdx,eax
    5789:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    578d:	be 00 00 00 00       	mov    esi,0x0
    5792:	48 89 c7             	mov    rdi,rax
    5795:	e8 76 ce ff ff       	call   2610 <memset@plt>
    579a:	c7 45 d4 00 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x0
    57a1:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    57a5:	8b 80 4c 03 00 00    	mov    eax,DWORD PTR [rax+0x34c]
    57ab:	85 c0                	test   eax,eax
    57ad:	74 5f                	je     580e <str_match_parser+0x19e>
    57af:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    57b3:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    57b6:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
    57b9:	eb 42                	jmp    57fd <str_match_parser+0x18d>
    57bb:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    57bf:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    57c2:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
    57c5:	48 98                	cdqe   
    57c7:	48 01 d0             	add    rax,rdx
    57ca:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    57cd:	0f b6 d0             	movzx  edx,al
    57d0:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    57d3:	8d 48 01             	lea    ecx,[rax+0x1]
    57d6:	89 4d d4             	mov    DWORD PTR [rbp-0x2c],ecx
    57d9:	01 c0                	add    eax,eax
    57db:	48 63 c8             	movsxd rcx,eax
    57de:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    57e2:	48 01 c8             	add    rax,rcx
    57e5:	48 8d 35 21 83 00 00 	lea    rsi,[rip+0x8321]        # db0d <_IO_stdin_used+0xb0d>
    57ec:	48 89 c7             	mov    rdi,rax
    57ef:	b8 00 00 00 00       	mov    eax,0x0
    57f4:	e8 07 cd ff ff       	call   2500 <sprintf@plt>
    57f9:	83 45 d0 01          	add    DWORD PTR [rbp-0x30],0x1
    57fd:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5801:	8b 80 4c 03 00 00    	mov    eax,DWORD PTR [rax+0x34c]
    5807:	39 45 d0             	cmp    DWORD PTR [rbp-0x30],eax
    580a:	7c af                	jl     57bb <str_match_parser+0x14b>
    580c:	eb 5a                	jmp    5868 <str_match_parser+0x1f8>
    580e:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5812:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    5815:	89 45 cc             	mov    DWORD PTR [rbp-0x34],eax
    5818:	eb 42                	jmp    585c <str_match_parser+0x1ec>
    581a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    581e:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    5821:	8b 45 cc             	mov    eax,DWORD PTR [rbp-0x34]
    5824:	48 98                	cdqe   
    5826:	48 01 d0             	add    rax,rdx
    5829:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    582c:	0f b6 d0             	movzx  edx,al
    582f:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    5832:	8d 48 01             	lea    ecx,[rax+0x1]
    5835:	89 4d d4             	mov    DWORD PTR [rbp-0x2c],ecx
    5838:	01 c0                	add    eax,eax
    583a:	48 63 c8             	movsxd rcx,eax
    583d:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    5841:	48 01 c8             	add    rax,rcx
    5844:	48 8d 35 c2 82 00 00 	lea    rsi,[rip+0x82c2]        # db0d <_IO_stdin_used+0xb0d>
    584b:	48 89 c7             	mov    rdi,rax
    584e:	b8 00 00 00 00       	mov    eax,0x0
    5853:	e8 a8 cc ff ff       	call   2500 <sprintf@plt>
    5858:	83 45 cc 01          	add    DWORD PTR [rbp-0x34],0x1
    585c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5860:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5863:	39 45 cc             	cmp    DWORD PTR [rbp-0x34],eax
    5866:	7c b2                	jl     581a <str_match_parser+0x1aa>
    5868:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    586c:	48 8d 50 40          	lea    rdx,[rax+0x40]
    5870:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    5874:	48 89 d6             	mov    rsi,rdx
    5877:	48 89 c7             	mov    rdi,rax
    587a:	e8 91 cc ff ff       	call   2510 <strstr@plt>
    587f:	48 85 c0             	test   rax,rax
    5882:	74 07                	je     588b <str_match_parser+0x21b>
    5884:	b8 01 00 00 00       	mov    eax,0x1
    5889:	eb 05                	jmp    5890 <str_match_parser+0x220>
    588b:	b8 00 00 00 00       	mov    eax,0x0
    5890:	48 89 dc             	mov    rsp,rbx
    5893:	48 8b 5d e8          	mov    rbx,QWORD PTR [rbp-0x18]
    5897:	64 48 2b 1c 25 28 00 	sub    rbx,QWORD PTR fs:0x28
    589e:	00 00 
    58a0:	74 05                	je     58a7 <str_match_parser+0x237>
    58a2:	e8 29 ce ff ff       	call   26d0 <__stack_chk_fail@plt>
    58a7:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    58ab:	c9                   	leave  
    58ac:	c3                   	ret    

00000000000058ad <is_blocked_ipv4>:
    58ad:	f3 0f 1e fa          	endbr64 
    58b1:	55                   	push   rbp
    58b2:	48 89 e5             	mov    rbp,rsp
    58b5:	48 83 ec 20          	sub    rsp,0x20
    58b9:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    58bd:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    58c4:	eb 3b                	jmp    5901 <is_blocked_ipv4+0x54>
    58c6:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    58c9:	48 63 d0             	movsxd rdx,eax
    58cc:	48 89 d0             	mov    rax,rdx
    58cf:	48 c1 e0 03          	shl    rax,0x3
    58d3:	48 01 d0             	add    rax,rdx
    58d6:	48 01 c0             	add    rax,rax
    58d9:	48 8d 15 00 ea 0e 00 	lea    rdx,[rip+0xeea00]        # f42e0 <blocked_ipv4_addrs>
    58e0:	48 01 c2             	add    rdx,rax
    58e3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    58e7:	48 89 d6             	mov    rsi,rdx
    58ea:	48 89 c7             	mov    rdi,rax
    58ed:	e8 ee ce ff ff       	call   27e0 <strcmp@plt>
    58f2:	85 c0                	test   eax,eax
    58f4:	75 07                	jne    58fd <is_blocked_ipv4+0x50>
    58f6:	b8 01 00 00 00       	mov    eax,0x1
    58fb:	eb 14                	jmp    5911 <is_blocked_ipv4+0x64>
    58fd:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    5901:	8b 05 09 c7 00 00    	mov    eax,DWORD PTR [rip+0xc709]        # 12010 <blk_ipv4_len>
    5907:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    590a:	7e ba                	jle    58c6 <is_blocked_ipv4+0x19>
    590c:	b8 00 00 00 00       	mov    eax,0x0
    5911:	c9                   	leave  
    5912:	c3                   	ret    

0000000000005913 <none>:
    5913:	f3 0f 1e fa          	endbr64 
    5917:	55                   	push   rbp
    5918:	48 89 e5             	mov    rbp,rsp
    591b:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    591f:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    5923:	b8 01 00 00 00       	mov    eax,0x1
    5928:	5d                   	pop    rbp
    5929:	c3                   	ret    

000000000000592a <pcre_match>:
    592a:	f3 0f 1e fa          	endbr64 
    592e:	55                   	push   rbp
    592f:	48 89 e5             	mov    rbp,rsp
    5932:	48 83 ec 10          	sub    rsp,0x10
    5936:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    593a:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    593e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5942:	48 8b 00             	mov    rax,QWORD PTR [rax]
    5945:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    5949:	48 8d ba d0 01 00 00 	lea    rdi,[rdx+0x1d0]
    5950:	41 b8 00 00 00 00    	mov    r8d,0x0
    5956:	b9 00 00 00 00       	mov    ecx,0x0
    595b:	ba 00 00 00 00       	mov    edx,0x0
    5960:	48 89 c6             	mov    rsi,rax
    5963:	e8 e8 cd ff ff       	call   2750 <regexec@plt>
    5968:	83 f8 01             	cmp    eax,0x1
    596b:	75 07                	jne    5974 <pcre_match+0x4a>
    596d:	b8 00 00 00 00       	mov    eax,0x0
    5972:	eb 05                	jmp    5979 <pcre_match+0x4f>
    5974:	b8 01 00 00 00       	mov    eax,0x1
    5979:	c9                   	leave  
    597a:	c3                   	ret    

000000000000597b <rule_library_parser>:
    597b:	f3 0f 1e fa          	endbr64 
    597f:	55                   	push   rbp
    5980:	48 89 e5             	mov    rbp,rsp
    5983:	53                   	push   rbx
    5984:	48 83 ec 48          	sub    rsp,0x48
    5988:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    598c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    5993:	00 00 
    5995:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    5999:	31 c0                	xor    eax,eax
    599b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    599f:	48 8d 35 72 81 00 00 	lea    rsi,[rip+0x8172]        # db18 <_IO_stdin_used+0xb18>
    59a6:	48 89 c7             	mov    rdi,rax
    59a9:	e8 62 cd ff ff       	call   2710 <fopen@plt>
    59ae:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    59b2:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    59b7:	75 22                	jne    59db <rule_library_parser+0x60>
    59b9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    59bd:	48 89 c6             	mov    rsi,rax
    59c0:	48 8d 3d 59 81 00 00 	lea    rdi,[rip+0x8159]        # db20 <_IO_stdin_used+0xb20>
    59c7:	b8 00 00 00 00       	mov    eax,0x0
    59cc:	e8 ef ca ff ff       	call   24c0 <printf@plt>
    59d1:	bf 01 00 00 00       	mov    edi,0x1
    59d6:	e8 65 cd ff ff       	call   2740 <exit@plt>
    59db:	48 c7 45 c8 00 00 00 	mov    QWORD PTR [rbp-0x38],0x0
    59e2:	00 
    59e3:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    59ea:	00 
    59eb:	e9 70 05 00 00       	jmp    5f60 <rule_library_parser+0x5e5>
    59f0:	48 8b 5d d0          	mov    rbx,QWORD PTR [rbp-0x30]
    59f4:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    59f8:	48 8d 35 47 81 00 00 	lea    rsi,[rip+0x8147]        # db46 <_IO_stdin_used+0xb46>
    59ff:	48 89 c7             	mov    rdi,rax
    5a02:	e8 d9 ca ff ff       	call   24e0 <strcspn@plt>
    5a07:	48 01 d8             	add    rax,rbx
    5a0a:	c6 00 00             	mov    BYTE PTR [rax],0x0
    5a0d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a11:	48 89 c7             	mov    rdi,rax
    5a14:	e8 b9 05 00 00       	call   5fd2 <is_comment>
    5a19:	84 c0                	test   al,al
    5a1b:	74 05                	je     5a22 <rule_library_parser+0xa7>
    5a1d:	e9 3e 05 00 00       	jmp    5f60 <rule_library_parser+0x5e5>
    5a22:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a26:	ba 1a 00 00 00       	mov    edx,0x1a
    5a2b:	48 8d 35 16 81 00 00 	lea    rsi,[rip+0x8116]        # db48 <_IO_stdin_used+0xb48>
    5a32:	48 89 c7             	mov    rdi,rax
    5a35:	e8 86 cb ff ff       	call   25c0 <strncmp@plt>
    5a3a:	85 c0                	test   eax,eax
    5a3c:	75 39                	jne    5a77 <rule_library_parser+0xfc>
    5a3e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a42:	48 83 c0 1a          	add    rax,0x1a
    5a46:	48 8d 35 16 81 00 00 	lea    rsi,[rip+0x8116]        # db63 <_IO_stdin_used+0xb63>
    5a4d:	48 89 c7             	mov    rdi,rax
    5a50:	e8 8b cd ff ff       	call   27e0 <strcmp@plt>
    5a55:	85 c0                	test   eax,eax
    5a57:	75 0f                	jne    5a68 <rule_library_parser+0xed>
    5a59:	c7 05 21 c6 00 00 01 	mov    DWORD PTR [rip+0xc621],0x1        # 12084 <strict_icmp_timestamp_req>
    5a60:	00 00 00 
    5a63:	e9 e2 04 00 00       	jmp    5f4a <rule_library_parser+0x5cf>
    5a68:	c7 05 12 c6 00 00 00 	mov    DWORD PTR [rip+0xc612],0x0        # 12084 <strict_icmp_timestamp_req>
    5a6f:	00 00 00 
    5a72:	e9 d3 04 00 00       	jmp    5f4a <rule_library_parser+0x5cf>
    5a77:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a7b:	ba 1d 00 00 00       	mov    edx,0x1d
    5a80:	48 8d 35 e0 80 00 00 	lea    rsi,[rip+0x80e0]        # db67 <_IO_stdin_used+0xb67>
    5a87:	48 89 c7             	mov    rdi,rax
    5a8a:	e8 31 cb ff ff       	call   25c0 <strncmp@plt>
    5a8f:	85 c0                	test   eax,eax
    5a91:	75 39                	jne    5acc <rule_library_parser+0x151>
    5a93:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a97:	48 83 c0 1d          	add    rax,0x1d
    5a9b:	48 8d 35 c1 80 00 00 	lea    rsi,[rip+0x80c1]        # db63 <_IO_stdin_used+0xb63>
    5aa2:	48 89 c7             	mov    rdi,rax
    5aa5:	e8 36 cd ff ff       	call   27e0 <strcmp@plt>
    5aaa:	85 c0                	test   eax,eax
    5aac:	75 0f                	jne    5abd <rule_library_parser+0x142>
    5aae:	c7 05 d0 c5 00 00 01 	mov    DWORD PTR [rip+0xc5d0],0x1        # 12088 <strict_nmap_host_alive_check>
    5ab5:	00 00 00 
    5ab8:	e9 8d 04 00 00       	jmp    5f4a <rule_library_parser+0x5cf>
    5abd:	c7 05 c1 c5 00 00 00 	mov    DWORD PTR [rip+0xc5c1],0x0        # 12088 <strict_nmap_host_alive_check>
    5ac4:	00 00 00 
    5ac7:	e9 7e 04 00 00       	jmp    5f4a <rule_library_parser+0x5cf>
    5acc:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ad0:	ba 17 00 00 00       	mov    edx,0x17
    5ad5:	48 8d 35 a9 80 00 00 	lea    rsi,[rip+0x80a9]        # db85 <_IO_stdin_used+0xb85>
    5adc:	48 89 c7             	mov    rdi,rax
    5adf:	e8 dc ca ff ff       	call   25c0 <strncmp@plt>
    5ae4:	85 c0                	test   eax,eax
    5ae6:	75 43                	jne    5b2b <rule_library_parser+0x1b0>
    5ae8:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5aec:	48 89 c7             	mov    rdi,rax
    5aef:	e8 ac ca ff ff       	call   25a0 <strlen@plt>
    5af4:	48 83 f8 17          	cmp    rax,0x17
    5af8:	77 16                	ja     5b10 <rule_library_parser+0x195>
    5afa:	48 8d 3d 9c 80 00 00 	lea    rdi,[rip+0x809c]        # db9d <_IO_stdin_used+0xb9d>
    5b01:	e8 5a cd ff ff       	call   2860 <puts@plt>
    5b06:	bf 01 00 00 00       	mov    edi,0x1
    5b0b:	e8 30 cc ff ff       	call   2740 <exit@plt>
    5b10:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b14:	48 83 c0 17          	add    rax,0x17
    5b18:	48 89 c7             	mov    rdi,rax
    5b1b:	e8 50 cd ff ff       	call   2870 <atoi@plt>
    5b20:	89 05 3a 54 10 00    	mov    DWORD PTR [rip+0x10543a],eax        # 10af60 <clean_delay_pkts>
    5b26:	e9 1f 04 00 00       	jmp    5f4a <rule_library_parser+0x5cf>
    5b2b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b2f:	ba 18 00 00 00       	mov    edx,0x18
    5b34:	48 8d 35 7c 80 00 00 	lea    rsi,[rip+0x807c]        # dbb7 <_IO_stdin_used+0xbb7>
    5b3b:	48 89 c7             	mov    rdi,rax
    5b3e:	e8 7d ca ff ff       	call   25c0 <strncmp@plt>
    5b43:	85 c0                	test   eax,eax
    5b45:	75 46                	jne    5b8d <rule_library_parser+0x212>
    5b47:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b4b:	48 89 c7             	mov    rdi,rax
    5b4e:	e8 4d ca ff ff       	call   25a0 <strlen@plt>
    5b53:	48 83 f8 18          	cmp    rax,0x18
    5b57:	75 16                	jne    5b6f <rule_library_parser+0x1f4>
    5b59:	48 8d 3d 3d 80 00 00 	lea    rdi,[rip+0x803d]        # db9d <_IO_stdin_used+0xb9d>
    5b60:	e8 fb cc ff ff       	call   2860 <puts@plt>
    5b65:	bf 01 00 00 00       	mov    edi,0x1
    5b6a:	e8 d1 cb ff ff       	call   2740 <exit@plt>
    5b6f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b73:	48 83 c0 18          	add    rax,0x18
    5b77:	48 89 c7             	mov    rdi,rax
    5b7a:	e8 f1 cc ff ff       	call   2870 <atoi@plt>
    5b7f:	48 98                	cdqe   
    5b81:	48 89 05 30 c7 00 00 	mov    QWORD PTR [rip+0xc730],rax        # 122b8 <clean_delay>
    5b88:	e9 bd 03 00 00       	jmp    5f4a <rule_library_parser+0x5cf>
    5b8d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b91:	ba 0b 00 00 00       	mov    edx,0xb
    5b96:	48 8d 35 33 80 00 00 	lea    rsi,[rip+0x8033]        # dbd0 <_IO_stdin_used+0xbd0>
    5b9d:	48 89 c7             	mov    rdi,rax
    5ba0:	e8 1b ca ff ff       	call   25c0 <strncmp@plt>
    5ba5:	85 c0                	test   eax,eax
    5ba7:	75 33                	jne    5bdc <rule_library_parser+0x261>
    5ba9:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5bad:	48 83 c0 0b          	add    rax,0xb
    5bb1:	48 8d 35 ab 7f 00 00 	lea    rsi,[rip+0x7fab]        # db63 <_IO_stdin_used+0xb63>
    5bb8:	48 89 c7             	mov    rdi,rax
    5bbb:	e8 20 cc ff ff       	call   27e0 <strcmp@plt>
    5bc0:	85 c0                	test   eax,eax
    5bc2:	75 0c                	jne    5bd0 <rule_library_parser+0x255>
    5bc4:	c6 05 56 53 10 00 01 	mov    BYTE PTR [rip+0x105356],0x1        # 10af21 <use_sqlite>
    5bcb:	e9 7a 03 00 00       	jmp    5f4a <rule_library_parser+0x5cf>
    5bd0:	c6 05 4a 53 10 00 00 	mov    BYTE PTR [rip+0x10534a],0x0        # 10af21 <use_sqlite>
    5bd7:	e9 6e 03 00 00       	jmp    5f4a <rule_library_parser+0x5cf>
    5bdc:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5be0:	ba 15 00 00 00       	mov    edx,0x15
    5be5:	48 8d 35 f0 7f 00 00 	lea    rsi,[rip+0x7ff0]        # dbdc <_IO_stdin_used+0xbdc>
    5bec:	48 89 c7             	mov    rdi,rax
    5bef:	e8 cc c9 ff ff       	call   25c0 <strncmp@plt>
    5bf4:	85 c0                	test   eax,eax
    5bf6:	75 34                	jne    5c2c <rule_library_parser+0x2b1>
    5bf8:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5bfc:	48 83 c0 15          	add    rax,0x15
    5c00:	48 89 c6             	mov    rsi,rax
    5c03:	48 8d 3d 36 53 10 00 	lea    rdi,[rip+0x105336]        # 10af40 <sqlite_db_path>
    5c0a:	e8 91 ca ff ff       	call   26a0 <strcpy@plt>
    5c0f:	48 8d 35 2a 53 10 00 	lea    rsi,[rip+0x10532a]        # 10af40 <sqlite_db_path>
    5c16:	48 8d 3d d5 7f 00 00 	lea    rdi,[rip+0x7fd5]        # dbf2 <_IO_stdin_used+0xbf2>
    5c1d:	b8 00 00 00 00       	mov    eax,0x0
    5c22:	e8 be 42 00 00       	call   9ee5 <livedebug>
    5c27:	e9 1e 03 00 00       	jmp    5f4a <rule_library_parser+0x5cf>
    5c2c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c30:	ba 0b 00 00 00       	mov    edx,0xb
    5c35:	48 8d 35 cf 7f 00 00 	lea    rsi,[rip+0x7fcf]        # dc0b <_IO_stdin_used+0xc0b>
    5c3c:	48 89 c7             	mov    rdi,rax
    5c3f:	e8 7c c9 ff ff       	call   25c0 <strncmp@plt>
    5c44:	85 c0                	test   eax,eax
    5c46:	75 34                	jne    5c7c <rule_library_parser+0x301>
    5c48:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c4c:	48 83 c0 0b          	add    rax,0xb
    5c50:	48 89 c6             	mov    rsi,rax
    5c53:	48 8d 3d 26 33 13 00 	lea    rdi,[rip+0x133326]        # 138f80 <input_adapter>
    5c5a:	e8 41 ca ff ff       	call   26a0 <strcpy@plt>
    5c5f:	48 8d 35 1a 33 13 00 	lea    rsi,[rip+0x13331a]        # 138f80 <input_adapter>
    5c66:	48 8d 3d ab 7f 00 00 	lea    rdi,[rip+0x7fab]        # dc18 <_IO_stdin_used+0xc18>
    5c6d:	b8 00 00 00 00       	mov    eax,0x0
    5c72:	e8 6e 42 00 00       	call   9ee5 <livedebug>
    5c77:	e9 ce 02 00 00       	jmp    5f4a <rule_library_parser+0x5cf>
    5c7c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c80:	ba 0c 00 00 00       	mov    edx,0xc
    5c85:	48 8d 35 bf 7f 00 00 	lea    rsi,[rip+0x7fbf]        # dc4b <_IO_stdin_used+0xc4b>
    5c8c:	48 89 c7             	mov    rdi,rax
    5c8f:	e8 2c c9 ff ff       	call   25c0 <strncmp@plt>
    5c94:	85 c0                	test   eax,eax
    5c96:	75 34                	jne    5ccc <rule_library_parser+0x351>
    5c98:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c9c:	48 83 c0 0c          	add    rax,0xc
    5ca0:	48 89 c6             	mov    rsi,rax
    5ca3:	48 8d 3d e6 32 13 00 	lea    rdi,[rip+0x1332e6]        # 138f90 <output_adapter>
    5caa:	e8 f1 c9 ff ff       	call   26a0 <strcpy@plt>
    5caf:	48 8d 35 da 32 13 00 	lea    rsi,[rip+0x1332da]        # 138f90 <output_adapter>
    5cb6:	48 8d 3d 9b 7f 00 00 	lea    rdi,[rip+0x7f9b]        # dc58 <_IO_stdin_used+0xc58>
    5cbd:	b8 00 00 00 00       	mov    eax,0x0
    5cc2:	e8 1e 42 00 00       	call   9ee5 <livedebug>
    5cc7:	e9 7e 02 00 00       	jmp    5f4a <rule_library_parser+0x5cf>
    5ccc:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5cd0:	ba 05 00 00 00       	mov    edx,0x5
    5cd5:	48 8d 35 b0 7f 00 00 	lea    rsi,[rip+0x7fb0]        # dc8c <_IO_stdin_used+0xc8c>
    5cdc:	48 89 c7             	mov    rdi,rax
    5cdf:	e8 dc c8 ff ff       	call   25c0 <strncmp@plt>
    5ce4:	85 c0                	test   eax,eax
    5ce6:	0f 85 81 00 00 00    	jne    5d6d <rule_library_parser+0x3f2>
    5cec:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5cf0:	48 83 c0 05          	add    rax,0x5
    5cf4:	48 89 c6             	mov    rsi,rax
    5cf7:	48 8d 3d 94 7f 00 00 	lea    rdi,[rip+0x7f94]        # dc92 <_IO_stdin_used+0xc92>
    5cfe:	b8 00 00 00 00       	mov    eax,0x0
    5d03:	e8 dd 41 00 00       	call   9ee5 <livedebug>
    5d08:	48 8d 3d 8c 7f 00 00 	lea    rdi,[rip+0x7f8c]        # dc9b <_IO_stdin_used+0xc9b>
    5d0f:	b8 00 00 00 00       	mov    eax,0x0
    5d14:	e8 a7 c7 ff ff       	call   24c0 <printf@plt>
    5d19:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d1d:	48 83 c0 05          	add    rax,0x5
    5d21:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5d24:	0f b6 15 7c 7f 00 00 	movzx  edx,BYTE PTR [rip+0x7f7c]        # dca7 <_IO_stdin_used+0xca7>
    5d2b:	0f b6 c0             	movzx  eax,al
    5d2e:	0f b6 d2             	movzx  edx,dl
    5d31:	29 d0                	sub    eax,edx
    5d33:	85 c0                	test   eax,eax
    5d35:	75 1b                	jne    5d52 <rule_library_parser+0x3d7>
    5d37:	c7 05 e7 c2 00 00 02 	mov    DWORD PTR [rip+0xc2e7],0x2        # 12028 <VIGIL_MODE>
    5d3e:	00 00 00 
    5d41:	48 8d 3d 61 7f 00 00 	lea    rdi,[rip+0x7f61]        # dca9 <_IO_stdin_used+0xca9>
    5d48:	e8 13 cb ff ff       	call   2860 <puts@plt>
    5d4d:	e9 f8 01 00 00       	jmp    5f4a <rule_library_parser+0x5cf>
    5d52:	c7 05 cc c2 00 00 01 	mov    DWORD PTR [rip+0xc2cc],0x1        # 12028 <VIGIL_MODE>
    5d59:	00 00 00 
    5d5c:	48 8d 3d 5d 7f 00 00 	lea    rdi,[rip+0x7f5d]        # dcc0 <_IO_stdin_used+0xcc0>
    5d63:	e8 f8 ca ff ff       	call   2860 <puts@plt>
    5d68:	e9 dd 01 00 00       	jmp    5f4a <rule_library_parser+0x5cf>
    5d6d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d71:	ba 08 00 00 00       	mov    edx,0x8
    5d76:	48 8d 35 5a 7f 00 00 	lea    rsi,[rip+0x7f5a]        # dcd7 <_IO_stdin_used+0xcd7>
    5d7d:	48 89 c7             	mov    rdi,rax
    5d80:	e8 3b c8 ff ff       	call   25c0 <strncmp@plt>
    5d85:	85 c0                	test   eax,eax
    5d87:	75 34                	jne    5dbd <rule_library_parser+0x442>
    5d89:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d8d:	48 83 c0 08          	add    rax,0x8
    5d91:	48 89 c6             	mov    rsi,rax
    5d94:	48 8d 3d 05 32 13 00 	lea    rdi,[rip+0x133205]        # 138fa0 <local_ip>
    5d9b:	e8 00 c9 ff ff       	call   26a0 <strcpy@plt>
    5da0:	48 8d 35 f9 31 13 00 	lea    rsi,[rip+0x1331f9]        # 138fa0 <local_ip>
    5da7:	48 8d 3d 32 7f 00 00 	lea    rdi,[rip+0x7f32]        # dce0 <_IO_stdin_used+0xce0>
    5dae:	b8 00 00 00 00       	mov    eax,0x0
    5db3:	e8 2d 41 00 00       	call   9ee5 <livedebug>
    5db8:	e9 8d 01 00 00       	jmp    5f4a <rule_library_parser+0x5cf>
    5dbd:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5dc1:	ba 06 00 00 00       	mov    edx,0x6
    5dc6:	48 8d 35 2e 7f 00 00 	lea    rsi,[rip+0x7f2e]        # dcfb <_IO_stdin_used+0xcfb>
    5dcd:	48 89 c7             	mov    rdi,rax
    5dd0:	e8 eb c7 ff ff       	call   25c0 <strncmp@plt>
    5dd5:	85 c0                	test   eax,eax
    5dd7:	75 1c                	jne    5df5 <rule_library_parser+0x47a>
    5dd9:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ddd:	48 83 c0 06          	add    rax,0x6
    5de1:	48 89 c6             	mov    rsi,rax
    5de4:	48 8d 3d d5 31 13 00 	lea    rdi,[rip+0x1331d5]        # 138fc0 <def_gw>
    5deb:	e8 b0 c8 ff ff       	call   26a0 <strcpy@plt>
    5df0:	e9 55 01 00 00       	jmp    5f4a <rule_library_parser+0x5cf>
    5df5:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5df9:	ba 08 00 00 00       	mov    edx,0x8
    5dfe:	48 8d 35 fd 7e 00 00 	lea    rsi,[rip+0x7efd]        # dd02 <_IO_stdin_used+0xd02>
    5e05:	48 89 c7             	mov    rdi,rax
    5e08:	e8 b3 c7 ff ff       	call   25c0 <strncmp@plt>
    5e0d:	85 c0                	test   eax,eax
    5e0f:	75 3f                	jne    5e50 <rule_library_parser+0x4d5>
    5e11:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e15:	48 83 c0 08          	add    rax,0x8
    5e19:	48 8d 35 43 7d 00 00 	lea    rsi,[rip+0x7d43]        # db63 <_IO_stdin_used+0xb63>
    5e20:	48 89 c7             	mov    rdi,rax
    5e23:	e8 b8 c9 ff ff       	call   27e0 <strcmp@plt>
    5e28:	85 c0                	test   eax,eax
    5e2a:	75 18                	jne    5e44 <rule_library_parser+0x4c9>
    5e2c:	c6 05 9f 31 13 00 01 	mov    BYTE PTR [rip+0x13319f],0x1        # 138fd2 <use_spi>
    5e33:	48 8d 3d d1 7e 00 00 	lea    rdi,[rip+0x7ed1]        # dd0b <_IO_stdin_used+0xd0b>
    5e3a:	e8 21 ca ff ff       	call   2860 <puts@plt>
    5e3f:	e9 06 01 00 00       	jmp    5f4a <rule_library_parser+0x5cf>
    5e44:	c6 05 87 31 13 00 00 	mov    BYTE PTR [rip+0x133187],0x0        # 138fd2 <use_spi>
    5e4b:	e9 fa 00 00 00       	jmp    5f4a <rule_library_parser+0x5cf>
    5e50:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e54:	ba 09 00 00 00       	mov    edx,0x9
    5e59:	48 8d 35 c4 7e 00 00 	lea    rsi,[rip+0x7ec4]        # dd24 <_IO_stdin_used+0xd24>
    5e60:	48 89 c7             	mov    rdi,rax
    5e63:	e8 58 c7 ff ff       	call   25c0 <strncmp@plt>
    5e68:	85 c0                	test   eax,eax
    5e6a:	75 27                	jne    5e93 <rule_library_parser+0x518>
    5e6c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e70:	48 89 c7             	mov    rdi,rax
    5e73:	e8 83 01 00 00       	call   5ffb <rstrip>
    5e78:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e7c:	48 83 c0 09          	add    rax,0x9
    5e80:	48 89 c7             	mov    rdi,rax
    5e83:	e8 c9 65 00 00       	call   c451 <homenet_toi>
    5e88:	89 05 46 31 13 00    	mov    DWORD PTR [rip+0x133146],eax        # 138fd4 <homenet>
    5e8e:	e9 b7 00 00 00       	jmp    5f4a <rule_library_parser+0x5cf>
    5e93:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e97:	ba 0e 00 00 00       	mov    edx,0xe
    5e9c:	48 8d 35 8b 7e 00 00 	lea    rsi,[rip+0x7e8b]        # dd2e <_IO_stdin_used+0xd2e>
    5ea3:	48 89 c7             	mov    rdi,rax
    5ea6:	e8 15 c7 ff ff       	call   25c0 <strncmp@plt>
    5eab:	85 c0                	test   eax,eax
    5ead:	75 24                	jne    5ed3 <rule_library_parser+0x558>
    5eaf:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5eb3:	48 89 c7             	mov    rdi,rax
    5eb6:	e8 40 01 00 00       	call   5ffb <rstrip>
    5ebb:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ebf:	48 83 c0 0e          	add    rax,0xe
    5ec3:	48 89 c7             	mov    rdi,rax
    5ec6:	e8 86 65 00 00       	call   c451 <homenet_toi>
    5ecb:	89 05 07 31 13 00    	mov    DWORD PTR [rip+0x133107],eax        # 138fd8 <homenetmask>
    5ed1:	eb 77                	jmp    5f4a <rule_library_parser+0x5cf>
    5ed3:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ed7:	ba 09 00 00 00       	mov    edx,0x9
    5edc:	48 8d 35 5a 7e 00 00 	lea    rsi,[rip+0x7e5a]        # dd3d <_IO_stdin_used+0xd3d>
    5ee3:	48 89 c7             	mov    rdi,rax
    5ee6:	e8 d5 c6 ff ff       	call   25c0 <strncmp@plt>
    5eeb:	85 c0                	test   eax,eax
    5eed:	75 3f                	jne    5f2e <rule_library_parser+0x5b3>
    5eef:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ef3:	48 89 c7             	mov    rdi,rax
    5ef6:	e8 00 01 00 00       	call   5ffb <rstrip>
    5efb:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5eff:	48 83 c0 09          	add    rax,0x9
    5f03:	48 8d 35 3d 7e 00 00 	lea    rsi,[rip+0x7e3d]        # dd47 <_IO_stdin_used+0xd47>
    5f0a:	48 89 c7             	mov    rdi,rax
    5f0d:	e8 ce c8 ff ff       	call   27e0 <strcmp@plt>
    5f12:	85 c0                	test   eax,eax
    5f14:	75 0c                	jne    5f22 <rule_library_parser+0x5a7>
    5f16:	c7 05 48 50 10 00 04 	mov    DWORD PTR [rip+0x105048],0x4        # 10af68 <vigil_location>
    5f1d:	00 00 00 
    5f20:	eb 28                	jmp    5f4a <rule_library_parser+0x5cf>
    5f22:	c7 05 3c 50 10 00 03 	mov    DWORD PTR [rip+0x10503c],0x3        # 10af68 <vigil_location>
    5f29:	00 00 00 
    5f2c:	eb 1c                	jmp    5f4a <rule_library_parser+0x5cf>
    5f2e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f32:	48 89 c7             	mov    rdi,rax
    5f35:	e8 7e 00 00 00       	call   5fb8 <is_rule>
    5f3a:	84 c0                	test   al,al
    5f3c:	74 0c                	je     5f4a <rule_library_parser+0x5cf>
    5f3e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f42:	48 89 c7             	mov    rdi,rax
    5f45:	e8 18 01 00 00       	call   6062 <rule_parser>
    5f4a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f4e:	ba 08 00 00 00       	mov    edx,0x8
    5f53:	be 00 00 00 00       	mov    esi,0x0
    5f58:	48 89 c7             	mov    rdi,rax
    5f5b:	e8 b0 c6 ff ff       	call   2610 <memset@plt>
    5f60:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    5f64:	48 8d 4d c8          	lea    rcx,[rbp-0x38]
    5f68:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    5f6c:	48 89 ce             	mov    rsi,rcx
    5f6f:	48 89 c7             	mov    rdi,rax
    5f72:	e8 f9 c7 ff ff       	call   2770 <getline@plt>
    5f77:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    5f7b:	48 83 7d e0 ff       	cmp    QWORD PTR [rbp-0x20],0xffffffffffffffff
    5f80:	0f 85 6a fa ff ff    	jne    59f0 <rule_library_parser+0x75>
    5f86:	8b 05 9c c0 00 00    	mov    eax,DWORD PTR [rip+0xc09c]        # 12028 <VIGIL_MODE>
    5f8c:	3d ff ff 00 00       	cmp    eax,0xffff
    5f91:	75 0a                	jne    5f9d <rule_library_parser+0x622>
    5f93:	c7 05 8b c0 00 00 01 	mov    DWORD PTR [rip+0xc08b],0x1        # 12028 <VIGIL_MODE>
    5f9a:	00 00 00 
    5f9d:	90                   	nop
    5f9e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5fa2:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    5fa9:	00 00 
    5fab:	74 05                	je     5fb2 <rule_library_parser+0x637>
    5fad:	e8 1e c7 ff ff       	call   26d0 <__stack_chk_fail@plt>
    5fb2:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    5fb6:	c9                   	leave  
    5fb7:	c3                   	ret    

0000000000005fb8 <is_rule>:
    5fb8:	f3 0f 1e fa          	endbr64 
    5fbc:	55                   	push   rbp
    5fbd:	48 89 e5             	mov    rbp,rsp
    5fc0:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5fc4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5fc8:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5fcb:	3c 24                	cmp    al,0x24
    5fcd:	0f 94 c0             	sete   al
    5fd0:	5d                   	pop    rbp
    5fd1:	c3                   	ret    

0000000000005fd2 <is_comment>:
    5fd2:	f3 0f 1e fa          	endbr64 
    5fd6:	55                   	push   rbp
    5fd7:	48 89 e5             	mov    rbp,rsp
    5fda:	48 83 ec 10          	sub    rsp,0x10
    5fde:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5fe2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5fe6:	be 23 00 00 00       	mov    esi,0x23
    5feb:	48 89 c7             	mov    rdi,rax
    5fee:	e8 7d c5 ff ff       	call   2570 <strchr@plt>
    5ff3:	48 85 c0             	test   rax,rax
    5ff6:	0f 95 c0             	setne  al
    5ff9:	c9                   	leave  
    5ffa:	c3                   	ret    

0000000000005ffb <rstrip>:
    5ffb:	f3 0f 1e fa          	endbr64 
    5fff:	55                   	push   rbp
    6000:	48 89 e5             	mov    rbp,rsp
    6003:	48 83 ec 10          	sub    rsp,0x10
    6007:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    600b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    600f:	48 8d 35 30 7b 00 00 	lea    rsi,[rip+0x7b30]        # db46 <_IO_stdin_used+0xb46>
    6016:	48 89 c7             	mov    rdi,rax
    6019:	e8 c2 c4 ff ff       	call   24e0 <strcspn@plt>
    601e:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    6022:	48 01 d0             	add    rax,rdx
    6025:	c6 00 00             	mov    BYTE PTR [rax],0x0
    6028:	90                   	nop
    6029:	c9                   	leave  
    602a:	c3                   	ret    

000000000000602b <syntax_error>:
    602b:	f3 0f 1e fa          	endbr64 
    602f:	55                   	push   rbp
    6030:	48 89 e5             	mov    rbp,rsp
    6033:	48 83 ec 10          	sub    rsp,0x10
    6037:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    603b:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
    603e:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    6042:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    6045:	89 c6                	mov    esi,eax
    6047:	48 8d 3d 02 7d 00 00 	lea    rdi,[rip+0x7d02]        # dd50 <_IO_stdin_used+0xd50>
    604e:	b8 00 00 00 00       	mov    eax,0x0
    6053:	e8 68 c4 ff ff       	call   24c0 <printf@plt>
    6058:	bf 01 00 00 00       	mov    edi,0x1
    605d:	e8 de c6 ff ff       	call   2740 <exit@plt>

0000000000006062 <rule_parser>:
    6062:	f3 0f 1e fa          	endbr64 
    6066:	55                   	push   rbp
    6067:	48 89 e5             	mov    rbp,rsp
    606a:	48 83 ec 40          	sub    rsp,0x40
    606e:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    6072:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6079:	00 00 
    607b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    607f:	31 c0                	xor    eax,eax
    6081:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6085:	48 83 c0 01          	add    rax,0x1
    6089:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    608d:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    6091:	48 8d 35 80 7a 00 00 	lea    rsi,[rip+0x7a80]        # db18 <_IO_stdin_used+0xb18>
    6098:	48 89 c7             	mov    rdi,rax
    609b:	e8 70 c6 ff ff       	call   2710 <fopen@plt>
    60a0:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    60a4:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
    60a9:	75 22                	jne    60cd <rule_parser+0x6b>
    60ab:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    60af:	48 89 c6             	mov    rsi,rax
    60b2:	48 8d 3d b7 7c 00 00 	lea    rdi,[rip+0x7cb7]        # dd70 <_IO_stdin_used+0xd70>
    60b9:	b8 00 00 00 00       	mov    eax,0x0
    60be:	e8 fd c3 ff ff       	call   24c0 <printf@plt>
    60c3:	bf 01 00 00 00       	mov    edi,0x1
    60c8:	e8 73 c6 ff ff       	call   2740 <exit@plt>
    60cd:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    60d1:	48 89 c6             	mov    rsi,rax
    60d4:	48 8d 3d c8 7c 00 00 	lea    rdi,[rip+0x7cc8]        # dda3 <_IO_stdin_used+0xda3>
    60db:	b8 00 00 00 00       	mov    eax,0x0
    60e0:	e8 db c3 ff ff       	call   24c0 <printf@plt>
    60e5:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    60ec:	00 
    60ed:	48 c7 45 d8 00 00 00 	mov    QWORD PTR [rbp-0x28],0x0
    60f4:	00 
    60f5:	eb 54                	jmp    614b <rule_parser+0xe9>
    60f7:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    60fb:	48 89 c7             	mov    rdi,rax
    60fe:	e8 cf fe ff ff       	call   5fd2 <is_comment>
    6103:	84 c0                	test   al,al
    6105:	74 02                	je     6109 <rule_parser+0xa7>
    6107:	eb 42                	jmp    614b <rule_parser+0xe9>
    6109:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    610d:	48 89 c7             	mov    rdi,rax
    6110:	e8 e6 fe ff ff       	call   5ffb <rstrip>
    6115:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    6119:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    611c:	0f b6 c0             	movzx  eax,al
    611f:	f7 d8                	neg    eax
    6121:	85 c0                	test   eax,eax
    6123:	75 02                	jne    6127 <rule_parser+0xc5>
    6125:	eb 24                	jmp    614b <rule_parser+0xe9>
    6127:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    612b:	48 8d 35 82 7c 00 00 	lea    rsi,[rip+0x7c82]        # ddb4 <_IO_stdin_used+0xdb4>
    6132:	48 89 c7             	mov    rdi,rax
    6135:	e8 d6 c3 ff ff       	call   2510 <strstr@plt>
    613a:	48 85 c0             	test   rax,rax
    613d:	74 0c                	je     614b <rule_parser+0xe9>
    613f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    6143:	48 89 c7             	mov    rdi,rax
    6146:	e8 c2 4e 00 00       	call   b00d <line_parser>
    614b:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    614f:	48 8d 4d d0          	lea    rcx,[rbp-0x30]
    6153:	48 8d 45 d8          	lea    rax,[rbp-0x28]
    6157:	48 89 ce             	mov    rsi,rcx
    615a:	48 89 c7             	mov    rdi,rax
    615d:	e8 0e c6 ff ff       	call   2770 <getline@plt>
    6162:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    6166:	48 83 7d f0 ff       	cmp    QWORD PTR [rbp-0x10],0xffffffffffffffff
    616b:	75 8a                	jne    60f7 <rule_parser+0x95>
    616d:	0f b6 05 ac 4d 10 00 	movzx  eax,BYTE PTR [rip+0x104dac]        # 10af20 <debug_mode>
    6174:	84 c0                	test   al,al
    6176:	74 18                	je     6190 <rule_parser+0x12e>
    6178:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    617c:	48 89 c6             	mov    rsi,rax
    617f:	48 8d 3d 34 7c 00 00 	lea    rdi,[rip+0x7c34]        # ddba <_IO_stdin_used+0xdba>
    6186:	b8 00 00 00 00       	mov    eax,0x0
    618b:	e8 30 c3 ff ff       	call   24c0 <printf@plt>
    6190:	90                   	nop
    6191:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6195:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    619c:	00 00 
    619e:	74 05                	je     61a5 <rule_parser+0x143>
    61a0:	e8 2b c5 ff ff       	call   26d0 <__stack_chk_fail@plt>
    61a5:	c9                   	leave  
    61a6:	c3                   	ret    

00000000000061a7 <deny_conf_parser>:
    61a7:	f3 0f 1e fa          	endbr64 
    61ab:	55                   	push   rbp
    61ac:	48 89 e5             	mov    rbp,rsp
    61af:	48 83 ec 50          	sub    rsp,0x50
    61b3:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    61b7:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    61be:	00 00 
    61c0:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    61c4:	31 c0                	xor    eax,eax
    61c6:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    61ca:	48 8d 35 47 79 00 00 	lea    rsi,[rip+0x7947]        # db18 <_IO_stdin_used+0xb18>
    61d1:	48 89 c7             	mov    rdi,rax
    61d4:	e8 37 c5 ff ff       	call   2710 <fopen@plt>
    61d9:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    61dd:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    61e2:	75 22                	jne    6206 <deny_conf_parser+0x5f>
    61e4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    61e8:	48 89 c6             	mov    rsi,rax
    61eb:	48 8d 3d de 7b 00 00 	lea    rdi,[rip+0x7bde]        # ddd0 <_IO_stdin_used+0xdd0>
    61f2:	b8 00 00 00 00       	mov    eax,0x0
    61f7:	e8 c4 c2 ff ff       	call   24c0 <printf@plt>
    61fc:	bf 01 00 00 00       	mov    edi,0x1
    6201:	e8 3a c5 ff ff       	call   2740 <exit@plt>
    6206:	48 c7 45 c8 00 00 00 	mov    QWORD PTR [rbp-0x38],0x0
    620d:	00 
    620e:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    6215:	00 
    6216:	e9 9a 00 00 00       	jmp    62b5 <deny_conf_parser+0x10e>
    621b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    621f:	48 89 c7             	mov    rdi,rax
    6222:	e8 d4 fd ff ff       	call   5ffb <rstrip>
    6227:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    622b:	48 89 c7             	mov    rdi,rax
    622e:	e8 9f fd ff ff       	call   5fd2 <is_comment>
    6233:	84 c0                	test   al,al
    6235:	74 02                	je     6239 <deny_conf_parser+0x92>
    6237:	eb 7c                	jmp    62b5 <deny_conf_parser+0x10e>
    6239:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    623d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    6240:	0f b6 c0             	movzx  eax,al
    6243:	f7 d8                	neg    eax
    6245:	85 c0                	test   eax,eax
    6247:	75 02                	jne    624b <deny_conf_parser+0xa4>
    6249:	eb 6a                	jmp    62b5 <deny_conf_parser+0x10e>
    624b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    624f:	48 8d 35 ab 7b 00 00 	lea    rsi,[rip+0x7bab]        # de01 <_IO_stdin_used+0xe01>
    6256:	48 89 c7             	mov    rdi,rax
    6259:	e8 b2 c2 ff ff       	call   2510 <strstr@plt>
    625e:	48 85 c0             	test   rax,rax
    6261:	74 52                	je     62b5 <deny_conf_parser+0x10e>
    6263:	8b 05 a7 bd 00 00    	mov    eax,DWORD PTR [rip+0xbda7]        # 12010 <blk_ipv4_len>
    6269:	83 c0 01             	add    eax,0x1
    626c:	89 05 9e bd 00 00    	mov    DWORD PTR [rip+0xbd9e],eax        # 12010 <blk_ipv4_len>
    6272:	8b 05 98 bd 00 00    	mov    eax,DWORD PTR [rip+0xbd98]        # 12010 <blk_ipv4_len>
    6278:	48 63 d0             	movsxd rdx,eax
    627b:	48 89 d0             	mov    rax,rdx
    627e:	48 c1 e0 03          	shl    rax,0x3
    6282:	48 01 d0             	add    rax,rdx
    6285:	48 01 c0             	add    rax,rax
    6288:	48 8d 15 51 e0 0e 00 	lea    rdx,[rip+0xee051]        # f42e0 <blocked_ipv4_addrs>
    628f:	48 01 d0             	add    rax,rdx
    6292:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    6296:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    629a:	48 83 c0 05          	add    rax,0x5
    629e:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    62a2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    62a6:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    62aa:	48 89 d6             	mov    rsi,rdx
    62ad:	48 89 c7             	mov    rdi,rax
    62b0:	e8 eb c3 ff ff       	call   26a0 <strcpy@plt>
    62b5:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    62b9:	48 8d 4d d0          	lea    rcx,[rbp-0x30]
    62bd:	48 8d 45 c8          	lea    rax,[rbp-0x38]
    62c1:	48 89 ce             	mov    rsi,rcx
    62c4:	48 89 c7             	mov    rdi,rax
    62c7:	e8 a4 c4 ff ff       	call   2770 <getline@plt>
    62cc:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    62d0:	48 83 7d e0 ff       	cmp    QWORD PTR [rbp-0x20],0xffffffffffffffff
    62d5:	0f 85 40 ff ff ff    	jne    621b <deny_conf_parser+0x74>
    62db:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    62df:	48 85 c0             	test   rax,rax
    62e2:	74 0c                	je     62f0 <deny_conf_parser+0x149>
    62e4:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    62e8:	48 89 c7             	mov    rdi,rax
    62eb:	e8 40 c4 ff ff       	call   2730 <free@plt>
    62f0:	90                   	nop
    62f1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    62f5:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    62fc:	00 00 
    62fe:	74 05                	je     6305 <deny_conf_parser+0x15e>
    6300:	e8 cb c3 ff ff       	call   26d0 <__stack_chk_fail@plt>
    6305:	c9                   	leave  
    6306:	c3                   	ret    

0000000000006307 <host_mon_parser>:
    6307:	f3 0f 1e fa          	endbr64 
    630b:	55                   	push   rbp
    630c:	48 89 e5             	mov    rbp,rsp
    630f:	48 83 ec 10          	sub    rsp,0x10
    6313:	48 8b 05 26 bd 00 00 	mov    rax,QWORD PTR [rip+0xbd26]        # 12040 <default_host_conf>
    631a:	48 8d 35 f7 77 00 00 	lea    rsi,[rip+0x77f7]        # db18 <_IO_stdin_used+0xb18>
    6321:	48 89 c7             	mov    rdi,rax
    6324:	e8 e7 c3 ff ff       	call   2710 <fopen@plt>
    6329:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    632d:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    6332:	75 25                	jne    6359 <host_mon_parser+0x52>
    6334:	48 8b 05 05 bd 00 00 	mov    rax,QWORD PTR [rip+0xbd05]        # 12040 <default_host_conf>
    633b:	48 89 c6             	mov    rsi,rax
    633e:	48 8d 3d c1 7a 00 00 	lea    rdi,[rip+0x7ac1]        # de06 <_IO_stdin_used+0xe06>
    6345:	b8 00 00 00 00       	mov    eax,0x0
    634a:	e8 71 c1 ff ff       	call   24c0 <printf@plt>
    634f:	bf 01 00 00 00       	mov    edi,0x1
    6354:	e8 e7 c3 ff ff       	call   2740 <exit@plt>
    6359:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    635d:	48 89 c7             	mov    rdi,rax
    6360:	e8 5b c3 ff ff       	call   26c0 <fclose@plt>
    6365:	90                   	nop
    6366:	c9                   	leave  
    6367:	c3                   	ret    

0000000000006368 <rule_app>:
    6368:	f3 0f 1e fa          	endbr64 
    636c:	55                   	push   rbp
    636d:	48 89 e5             	mov    rbp,rsp
    6370:	48 83 ec 20          	sub    rsp,0x20
    6374:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    6378:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    637c:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    6380:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6384:	48 89 d6             	mov    rsi,rdx
    6387:	48 89 c7             	mov    rdi,rax
    638a:	e8 e9 02 00 00       	call   6678 <r_engine>
    638f:	88 45 fd             	mov    BYTE PTR [rbp-0x3],al
    6392:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    6396:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    639a:	48 89 d6             	mov    rsi,rdx
    639d:	48 89 c7             	mov    rdi,rax
    63a0:	e8 9a 5f 00 00       	call   c33f <d_engine>
    63a5:	88 45 fe             	mov    BYTE PTR [rbp-0x2],al
    63a8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    63ac:	48 8b 88 78 03 00 00 	mov    rcx,QWORD PTR [rax+0x378]
    63b3:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    63b7:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    63bb:	48 89 d6             	mov    rsi,rdx
    63be:	48 89 c7             	mov    rdi,rax
    63c1:	ff d1                	call   rcx
    63c3:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
    63c6:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
    63ca:	74 40                	je     640c <rule_app+0xa4>
    63cc:	80 7d fd 00          	cmp    BYTE PTR [rbp-0x3],0x0
    63d0:	74 3a                	je     640c <rule_app+0xa4>
    63d2:	80 7d fe 00          	cmp    BYTE PTR [rbp-0x2],0x0
    63d6:	74 34                	je     640c <rule_app+0xa4>
    63d8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    63dc:	4c 8b 80 80 03 00 00 	mov    r8,QWORD PTR [rax+0x380]
    63e3:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    63e7:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    63eb:	ba 00 00 00 00       	mov    edx,0x0
    63f0:	48 89 ce             	mov    rsi,rcx
    63f3:	48 89 c7             	mov    rdi,rax
    63f6:	41 ff d0             	call   r8
    63f9:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    63fd:	8b 40 3c             	mov    eax,DWORD PTR [rax+0x3c]
    6400:	8d 50 01             	lea    edx,[rax+0x1]
    6403:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6407:	89 50 3c             	mov    DWORD PTR [rax+0x3c],edx
    640a:	eb 17                	jmp    6423 <rule_app+0xbb>
    640c:	8b 05 16 bc 00 00    	mov    eax,DWORD PTR [rip+0xbc16]        # 12028 <VIGIL_MODE>
    6412:	83 f8 02             	cmp    eax,0x2
    6415:	75 0c                	jne    6423 <rule_app+0xbb>
    6417:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    641b:	48 89 c7             	mov    rdi,rax
    641e:	e8 a1 3b 00 00       	call   9fc4 <forward_packet>
    6423:	90                   	nop
    6424:	c9                   	leave  
    6425:	c3                   	ret    

0000000000006426 <rulemgr>:
    6426:	f3 0f 1e fa          	endbr64 
    642a:	55                   	push   rbp
    642b:	48 89 e5             	mov    rbp,rsp
    642e:	48 83 ec 20          	sub    rsp,0x20
    6432:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    6436:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    643d:	e9 23 02 00 00       	jmp    6665 <rulemgr+0x23f>
    6442:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    6445:	8d 50 01             	lea    edx,[rax+0x1]
    6448:	89 55 f4             	mov    DWORD PTR [rbp-0xc],edx
    644b:	48 98                	cdqe   
    644d:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    6454:	48 8d 15 85 be 00 00 	lea    rdx,[rip+0xbe85]        # 122e0 <rules>
    645b:	48 01 d0             	add    rax,rdx
    645e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    6462:	0f b6 05 73 2b 13 00 	movzx  eax,BYTE PTR [rip+0x132b73]        # 138fdc <in_test_mode>
    6469:	84 c0                	test   al,al
    646b:	74 30                	je     649d <rulemgr+0x77>
    646d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6471:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    6474:	83 f8 46             	cmp    eax,0x46
    6477:	75 0d                	jne    6486 <rulemgr+0x60>
    6479:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    647d:	c7 40 10 45 00 00 00 	mov    DWORD PTR [rax+0x10],0x45
    6484:	eb 17                	jmp    649d <rulemgr+0x77>
    6486:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    648a:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    648d:	83 f8 45             	cmp    eax,0x45
    6490:	75 0b                	jne    649d <rulemgr+0x77>
    6492:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6496:	c7 40 10 46 00 00 00 	mov    DWORD PTR [rax+0x10],0x46
    649d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64a1:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    64a7:	83 f8 ff             	cmp    eax,0xffffffff
    64aa:	74 19                	je     64c5 <rulemgr+0x9f>
    64ac:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    64b0:	8b 50 2c             	mov    edx,DWORD PTR [rax+0x2c]
    64b3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64b7:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    64bd:	39 c2                	cmp    edx,eax
    64bf:	0f 85 a0 01 00 00    	jne    6665 <rulemgr+0x23f>
    64c5:	0f b6 05 b4 bb 00 00 	movzx  eax,BYTE PTR [rip+0xbbb4]        # 12080 <demo_mode>
    64cc:	84 c0                	test   al,al
    64ce:	75 0b                	jne    64db <rulemgr+0xb5>
    64d0:	8b 05 92 4a 10 00    	mov    eax,DWORD PTR [rip+0x104a92]        # 10af68 <vigil_location>
    64d6:	83 f8 03             	cmp    eax,0x3
    64d9:	75 6b                	jne    6546 <rulemgr+0x120>
    64db:	8b 05 87 4a 10 00    	mov    eax,DWORD PTR [rip+0x104a87]        # 10af68 <vigil_location>
    64e1:	83 f8 03             	cmp    eax,0x3
    64e4:	0f 85 7b 01 00 00    	jne    6665 <rulemgr+0x23f>
    64ea:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64ee:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    64f1:	83 f8 ff             	cmp    eax,0xffffffff
    64f4:	74 16                	je     650c <rulemgr+0xe6>
    64f6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64fa:	8b 50 0c             	mov    edx,DWORD PTR [rax+0xc]
    64fd:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6501:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    6504:	39 c2                	cmp    edx,eax
    6506:	0f 85 59 01 00 00    	jne    6665 <rulemgr+0x23f>
    650c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6510:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    6513:	83 f8 ff             	cmp    eax,0xffffffff
    6516:	74 16                	je     652e <rulemgr+0x108>
    6518:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    651c:	8b 50 08             	mov    edx,DWORD PTR [rax+0x8]
    651f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6523:	8b 40 28             	mov    eax,DWORD PTR [rax+0x28]
    6526:	39 c2                	cmp    edx,eax
    6528:	0f 85 37 01 00 00    	jne    6665 <rulemgr+0x23f>
    652e:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6532:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6536:	48 89 d6             	mov    rsi,rdx
    6539:	48 89 c7             	mov    rdi,rax
    653c:	e8 27 fe ff ff       	call   6368 <rule_app>
    6541:	e9 1f 01 00 00       	jmp    6665 <rulemgr+0x23f>
    6546:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    654a:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    654d:	83 f8 47             	cmp    eax,0x47
    6550:	74 16                	je     6568 <rulemgr+0x142>
    6552:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6556:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    6559:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    655d:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    6560:	39 c2                	cmp    edx,eax
    6562:	0f 85 fd 00 00 00    	jne    6665 <rulemgr+0x23f>
    6568:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    656c:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    6572:	3d 80 00 00 00       	cmp    eax,0x80
    6577:	75 18                	jne    6591 <rulemgr+0x16b>
    6579:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    657d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6581:	48 89 d6             	mov    rsi,rdx
    6584:	48 89 c7             	mov    rdi,rax
    6587:	e8 dc fd ff ff       	call   6368 <rule_app>
    658c:	e9 d4 00 00 00       	jmp    6665 <rulemgr+0x23f>
    6591:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6595:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    6598:	83 f8 47             	cmp    eax,0x47
    659b:	75 79                	jne    6616 <rulemgr+0x1f0>
    659d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65a1:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    65a4:	83 f8 ff             	cmp    eax,0xffffffff
    65a7:	74 28                	je     65d1 <rulemgr+0x1ab>
    65a9:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    65ad:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    65b0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65b4:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    65b7:	39 c2                	cmp    edx,eax
    65b9:	74 16                	je     65d1 <rulemgr+0x1ab>
    65bb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    65bf:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    65c2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65c6:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    65c9:	39 c2                	cmp    edx,eax
    65cb:	0f 85 94 00 00 00    	jne    6665 <rulemgr+0x23f>
    65d1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65d5:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    65d8:	83 f8 ff             	cmp    eax,0xffffffff
    65db:	74 24                	je     6601 <rulemgr+0x1db>
    65dd:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    65e1:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    65e4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65e8:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    65eb:	39 c2                	cmp    edx,eax
    65ed:	74 12                	je     6601 <rulemgr+0x1db>
    65ef:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    65f3:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    65f6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65fa:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    65fd:	39 c2                	cmp    edx,eax
    65ff:	75 64                	jne    6665 <rulemgr+0x23f>
    6601:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6605:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6609:	48 89 d6             	mov    rsi,rdx
    660c:	48 89 c7             	mov    rdi,rax
    660f:	e8 54 fd ff ff       	call   6368 <rule_app>
    6614:	eb 4f                	jmp    6665 <rulemgr+0x23f>
    6616:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    661a:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    661d:	83 f8 ff             	cmp    eax,0xffffffff
    6620:	74 12                	je     6634 <rulemgr+0x20e>
    6622:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6626:	8b 50 0c             	mov    edx,DWORD PTR [rax+0xc]
    6629:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    662d:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    6630:	39 c2                	cmp    edx,eax
    6632:	75 31                	jne    6665 <rulemgr+0x23f>
    6634:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6638:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    663b:	83 f8 ff             	cmp    eax,0xffffffff
    663e:	74 12                	je     6652 <rulemgr+0x22c>
    6640:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6644:	8b 50 08             	mov    edx,DWORD PTR [rax+0x8]
    6647:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    664b:	8b 40 28             	mov    eax,DWORD PTR [rax+0x28]
    664e:	39 c2                	cmp    edx,eax
    6650:	75 13                	jne    6665 <rulemgr+0x23f>
    6652:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6656:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    665a:	48 89 d6             	mov    rsi,rdx
    665d:	48 89 c7             	mov    rdi,rax
    6660:	e8 03 fd ff ff       	call   6368 <rule_app>
    6665:	8b 05 a9 b9 00 00    	mov    eax,DWORD PTR [rip+0xb9a9]        # 12014 <num_rules>
    666b:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    666e:	0f 8e ce fd ff ff    	jle    6442 <rulemgr+0x1c>
    6674:	90                   	nop
    6675:	90                   	nop
    6676:	c9                   	leave  
    6677:	c3                   	ret    

0000000000006678 <r_engine>:
    6678:	f3 0f 1e fa          	endbr64 
    667c:	55                   	push   rbp
    667d:	48 89 e5             	mov    rbp,rsp
    6680:	48 83 ec 10          	sub    rsp,0x10
    6684:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6688:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    668c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6690:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    6693:	3d 80 00 00 00       	cmp    eax,0x80
    6698:	0f 85 d9 00 00 00    	jne    6777 <r_engine+0xff>
    669e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66a2:	0f b6 80 6f 03 00 00 	movzx  eax,BYTE PTR [rax+0x36f]
    66a9:	84 c0                	test   al,al
    66ab:	74 25                	je     66d2 <r_engine+0x5a>
    66ad:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    66b1:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    66b5:	0f b6 50 01          	movzx  edx,BYTE PTR [rax+0x1]
    66b9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66bd:	0f b6 80 73 03 00 00 	movzx  eax,BYTE PTR [rax+0x373]
    66c4:	38 c2                	cmp    dl,al
    66c6:	74 0a                	je     66d2 <r_engine+0x5a>
    66c8:	b8 00 00 00 00       	mov    eax,0x0
    66cd:	e9 9c 01 00 00       	jmp    686e <r_engine+0x1f6>
    66d2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66d6:	0f b6 80 71 03 00 00 	movzx  eax,BYTE PTR [rax+0x371]
    66dd:	84 c0                	test   al,al
    66df:	74 26                	je     6707 <r_engine+0x8f>
    66e1:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    66e5:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    66e9:	0f b7 50 04          	movzx  edx,WORD PTR [rax+0x4]
    66ed:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66f1:	0f b7 80 76 03 00 00 	movzx  eax,WORD PTR [rax+0x376]
    66f8:	66 39 c2             	cmp    dx,ax
    66fb:	74 0a                	je     6707 <r_engine+0x8f>
    66fd:	b8 00 00 00 00       	mov    eax,0x0
    6702:	e9 67 01 00 00       	jmp    686e <r_engine+0x1f6>
    6707:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    670b:	0f b6 80 70 03 00 00 	movzx  eax,BYTE PTR [rax+0x370]
    6712:	84 c0                	test   al,al
    6714:	74 26                	je     673c <r_engine+0xc4>
    6716:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    671a:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    671e:	0f b7 50 06          	movzx  edx,WORD PTR [rax+0x6]
    6722:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6726:	0f b7 80 74 03 00 00 	movzx  eax,WORD PTR [rax+0x374]
    672d:	66 39 c2             	cmp    dx,ax
    6730:	74 0a                	je     673c <r_engine+0xc4>
    6732:	b8 00 00 00 00       	mov    eax,0x0
    6737:	e9 32 01 00 00       	jmp    686e <r_engine+0x1f6>
    673c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6740:	0f b6 80 6e 03 00 00 	movzx  eax,BYTE PTR [rax+0x36e]
    6747:	84 c0                	test   al,al
    6749:	0f 84 dc 00 00 00    	je     682b <r_engine+0x1b3>
    674f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6753:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    6757:	0f b6 10             	movzx  edx,BYTE PTR [rax]
    675a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    675e:	0f b6 80 72 03 00 00 	movzx  eax,BYTE PTR [rax+0x372]
    6765:	38 c2                	cmp    dl,al
    6767:	0f 84 be 00 00 00    	je     682b <r_engine+0x1b3>
    676d:	b8 00 00 00 00       	mov    eax,0x0
    6772:	e9 f7 00 00 00       	jmp    686e <r_engine+0x1f6>
    6777:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    677b:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    677e:	83 f8 7e             	cmp    eax,0x7e
    6781:	0f 85 a4 00 00 00    	jne    682b <r_engine+0x1b3>
    6787:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    678b:	0f b6 80 51 03 00 00 	movzx  eax,BYTE PTR [rax+0x351]
    6792:	84 c0                	test   al,al
    6794:	74 2e                	je     67c4 <r_engine+0x14c>
    6796:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    679a:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    679e:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    67a1:	89 c7                	mov    edi,eax
    67a3:	e8 d8 bf ff ff       	call   2780 <ntohl@plt>
    67a8:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    67ac:	0f b7 92 5c 03 00 00 	movzx  edx,WORD PTR [rdx+0x35c]
    67b3:	0f b7 d2             	movzx  edx,dx
    67b6:	39 d0                	cmp    eax,edx
    67b8:	74 0a                	je     67c4 <r_engine+0x14c>
    67ba:	b8 00 00 00 00       	mov    eax,0x0
    67bf:	e9 aa 00 00 00       	jmp    686e <r_engine+0x1f6>
    67c4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67c8:	0f b6 80 50 03 00 00 	movzx  eax,BYTE PTR [rax+0x350]
    67cf:	84 c0                	test   al,al
    67d1:	74 29                	je     67fc <r_engine+0x184>
    67d3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67d7:	48 8d 90 53 03 00 00 	lea    rdx,[rax+0x353]
    67de:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    67e2:	48 83 c0 60          	add    rax,0x60
    67e6:	48 89 d6             	mov    rsi,rdx
    67e9:	48 89 c7             	mov    rdi,rax
    67ec:	e8 ef bf ff ff       	call   27e0 <strcmp@plt>
    67f1:	85 c0                	test   eax,eax
    67f3:	74 07                	je     67fc <r_engine+0x184>
    67f5:	b8 00 00 00 00       	mov    eax,0x0
    67fa:	eb 72                	jmp    686e <r_engine+0x1f6>
    67fc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6800:	0f b6 80 52 03 00 00 	movzx  eax,BYTE PTR [rax+0x352]
    6807:	84 c0                	test   al,al
    6809:	74 20                	je     682b <r_engine+0x1b3>
    680b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    680f:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    6813:	8b 50 04             	mov    edx,DWORD PTR [rax+0x4]
    6816:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    681a:	8b 80 60 03 00 00    	mov    eax,DWORD PTR [rax+0x360]
    6820:	39 c2                	cmp    edx,eax
    6822:	74 07                	je     682b <r_engine+0x1b3>
    6824:	b8 00 00 00 00       	mov    eax,0x0
    6829:	eb 43                	jmp    686e <r_engine+0x1f6>
    682b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    682f:	48 8b 40 48          	mov    rax,QWORD PTR [rax+0x48]
    6833:	48 85 c0             	test   rax,rax
    6836:	74 31                	je     6869 <r_engine+0x1f1>
    6838:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    683c:	0f b6 80 69 03 00 00 	movzx  eax,BYTE PTR [rax+0x369]
    6843:	84 c0                	test   al,al
    6845:	74 22                	je     6869 <r_engine+0x1f1>
    6847:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    684b:	48 8b 40 48          	mov    rax,QWORD PTR [rax+0x48]
    684f:	0f b6 50 08          	movzx  edx,BYTE PTR [rax+0x8]
    6853:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6857:	0f b6 80 6c 03 00 00 	movzx  eax,BYTE PTR [rax+0x36c]
    685e:	38 c2                	cmp    dl,al
    6860:	74 07                	je     6869 <r_engine+0x1f1>
    6862:	b8 00 00 00 00       	mov    eax,0x0
    6867:	eb 05                	jmp    686e <r_engine+0x1f6>
    6869:	b8 01 00 00 00       	mov    eax,0x1
    686e:	c9                   	leave  
    686f:	c3                   	ret    

0000000000006870 <test_tcp_session_status>:
    6870:	f3 0f 1e fa          	endbr64 
    6874:	55                   	push   rbp
    6875:	48 89 e5             	mov    rbp,rsp
    6878:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    687c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    6880:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6884:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    688a:	83 f8 7e             	cmp    eax,0x7e
    688d:	75 34                	jne    68c3 <test_tcp_session_status+0x53>
    688f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6893:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    6896:	83 f8 7e             	cmp    eax,0x7e
    6899:	75 28                	jne    68c3 <test_tcp_session_status+0x53>
    689b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    689f:	8b 80 48 03 00 00    	mov    eax,DWORD PTR [rax+0x348]
    68a5:	83 f8 01             	cmp    eax,0x1
    68a8:	75 12                	jne    68bc <test_tcp_session_status+0x4c>
    68aa:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    68ae:	8b 40 68             	mov    eax,DWORD PTR [rax+0x68]
    68b1:	85 c0                	test   eax,eax
    68b3:	75 07                	jne    68bc <test_tcp_session_status+0x4c>
    68b5:	b8 00 00 00 00       	mov    eax,0x0
    68ba:	eb 0c                	jmp    68c8 <test_tcp_session_status+0x58>
    68bc:	b8 01 00 00 00       	mov    eax,0x1
    68c1:	eb 05                	jmp    68c8 <test_tcp_session_status+0x58>
    68c3:	b8 01 00 00 00       	mov    eax,0x1
    68c8:	5d                   	pop    rbp
    68c9:	c3                   	ret    

00000000000068ca <main>:
    68ca:	f3 0f 1e fa          	endbr64 
    68ce:	55                   	push   rbp
    68cf:	48 89 e5             	mov    rbp,rsp
    68d2:	48 81 ec 40 08 00 00 	sub    rsp,0x840
    68d9:	89 bd cc f7 ff ff    	mov    DWORD PTR [rbp-0x834],edi
    68df:	48 89 b5 c0 f7 ff ff 	mov    QWORD PTR [rbp-0x840],rsi
    68e6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    68ed:	00 00 
    68ef:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    68f3:	31 c0                	xor    eax,eax
    68f5:	b8 00 00 00 00       	mov    eax,0x0
    68fa:	e8 37 63 00 00       	call   cc36 <load_fn_mem_map>
    68ff:	b8 00 00 00 00       	mov    eax,0x0
    6904:	e8 fd 08 00 00       	call   7206 <print_logo>
    6909:	b8 00 00 00 00       	mov    eax,0x0
    690e:	e8 41 07 00 00       	call   7054 <print_cpu_info>
    6913:	c7 05 8b b9 00 00 01 	mov    DWORD PTR [rip+0xb98b],0x1        # 122a8 <is_running>
    691a:	00 00 00 
    691d:	bf 00 00 00 00       	mov    edi,0x0
    6922:	e8 69 bd ff ff       	call   2690 <time@plt>
    6927:	48 89 05 82 b9 00 00 	mov    QWORD PTR [rip+0xb982],rax        # 122b0 <last_clean_time>
    692e:	83 bd cc f7 ff ff 01 	cmp    DWORD PTR [rbp-0x834],0x1
    6935:	0f 85 e3 00 00 00    	jne    6a1e <main+0x154>
    693b:	b8 00 00 00 00       	mov    eax,0x0
    6940:	e8 e5 06 00 00       	call   702a <print_help_and_exit>
    6945:	e9 d4 00 00 00       	jmp    6a1e <main+0x154>
    694a:	8b 85 dc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x824]
    6950:	83 e8 64             	sub    eax,0x64
    6953:	83 f8 10             	cmp    eax,0x10
    6956:	0f 87 9e 00 00 00    	ja     69fa <main+0x130>
    695c:	89 c0                	mov    eax,eax
    695e:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    6965:	00 
    6966:	48 8d 05 8f 76 00 00 	lea    rax,[rip+0x768f]        # dffc <_IO_stdin_used+0xffc>
    696d:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    6970:	48 98                	cdqe   
    6972:	48 8d 15 83 76 00 00 	lea    rdx,[rip+0x7683]        # dffc <_IO_stdin_used+0xffc>
    6979:	48 01 d0             	add    rax,rdx
    697c:	3e ff e0             	notrack jmp rax
    697f:	c6 05 9a 45 10 00 01 	mov    BYTE PTR [rip+0x10459a],0x1        # 10af20 <debug_mode>
    6986:	e9 93 00 00 00       	jmp    6a1e <main+0x154>
    698b:	b8 00 00 00 00       	mov    eax,0x0
    6990:	e8 95 06 00 00       	call   702a <print_help_and_exit>
    6995:	e9 84 00 00 00       	jmp    6a1e <main+0x154>
    699a:	48 8b 05 bf b6 00 00 	mov    rax,QWORD PTR [rip+0xb6bf]        # 12060 <optarg@@GLIBC_2.2.5>
    69a1:	48 89 85 e0 f7 ff ff 	mov    QWORD PTR [rbp-0x820],rax
    69a8:	eb 74                	jmp    6a1e <main+0x154>
    69aa:	c6 05 b3 45 10 00 01 	mov    BYTE PTR [rip+0x1045b3],0x1        # 10af64 <packet_print>
    69b1:	eb 6b                	jmp    6a1e <main+0x154>
    69b3:	c6 05 ab 45 10 00 01 	mov    BYTE PTR [rip+0x1045ab],0x1        # 10af65 <quiet_exit>
    69ba:	eb 62                	jmp    6a1e <main+0x154>
    69bc:	48 8d 3d 5d 74 00 00 	lea    rdi,[rip+0x745d]        # de20 <_IO_stdin_used+0xe20>
    69c3:	e8 98 be ff ff       	call   2860 <puts@plt>
    69c8:	bf 0a 00 00 00       	mov    edi,0xa
    69cd:	e8 6e bc ff ff       	call   2640 <sleep@plt>
    69d2:	c6 05 a7 b6 00 00 01 	mov    BYTE PTR [rip+0xb6a7],0x1        # 12080 <demo_mode>
    69d9:	eb 43                	jmp    6a1e <main+0x154>
    69db:	48 8d 3d 7e 74 00 00 	lea    rdi,[rip+0x747e]        # de60 <_IO_stdin_used+0xe60>
    69e2:	e8 79 be ff ff       	call   2860 <puts@plt>
    69e7:	bf 0a 00 00 00       	mov    edi,0xa
    69ec:	e8 4f bc ff ff       	call   2640 <sleep@plt>
    69f1:	c6 05 e4 25 13 00 01 	mov    BYTE PTR [rip+0x1325e4],0x1        # 138fdc <in_test_mode>
    69f8:	eb 24                	jmp    6a1e <main+0x154>
    69fa:	8b 85 dc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x824]
    6a00:	89 c6                	mov    esi,eax
    6a02:	48 8d 3d 8b 74 00 00 	lea    rdi,[rip+0x748b]        # de94 <_IO_stdin_used+0xe94>
    6a09:	b8 00 00 00 00       	mov    eax,0x0
    6a0e:	e8 ad ba ff ff       	call   24c0 <printf@plt>
    6a13:	b8 00 00 00 00       	mov    eax,0x0
    6a18:	e8 0d 06 00 00       	call   702a <print_help_and_exit>
    6a1d:	90                   	nop
    6a1e:	48 8b 8d c0 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x840]
    6a25:	8b 85 cc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x834]
    6a2b:	48 8d 15 78 74 00 00 	lea    rdx,[rip+0x7478]        # deaa <_IO_stdin_used+0xeaa>
    6a32:	48 89 ce             	mov    rsi,rcx
    6a35:	89 c7                	mov    edi,eax
    6a37:	e8 f4 ba ff ff       	call   2530 <getopt@plt>
    6a3c:	89 85 dc f7 ff ff    	mov    DWORD PTR [rbp-0x824],eax
    6a42:	83 bd dc f7 ff ff ff 	cmp    DWORD PTR [rbp-0x824],0xffffffff
    6a49:	0f 85 fb fe ff ff    	jne    694a <main+0x80>
    6a4f:	48 8d 35 83 01 00 00 	lea    rsi,[rip+0x183]        # 6bd9 <sigint_processor>
    6a56:	bf 02 00 00 00       	mov    edi,0x2
    6a5b:	e8 c0 bc ff ff       	call   2720 <signal@plt>
    6a60:	48 8d 05 1c 5f 00 00 	lea    rax,[rip+0x5f1c]        # c983 <crash_handler>
    6a67:	48 89 c6             	mov    rsi,rax
    6a6a:	bf 0b 00 00 00       	mov    edi,0xb
    6a6f:	e8 ac bc ff ff       	call   2720 <signal@plt>
    6a74:	48 8d 3d 38 74 00 00 	lea    rdi,[rip+0x7438]        # deb3 <_IO_stdin_used+0xeb3>
    6a7b:	e8 27 f7 ff ff       	call   61a7 <deny_conf_parser>
    6a80:	48 8d 3d 41 74 00 00 	lea    rdi,[rip+0x7441]        # dec8 <_IO_stdin_used+0xec8>
    6a87:	e8 d4 bd ff ff       	call   2860 <puts@plt>
    6a8c:	b8 00 00 00 00       	mov    eax,0x0
    6a91:	e8 ad 2c 00 00       	call   9743 <load_csv_arp_cache>
    6a96:	83 f8 ff             	cmp    eax,0xffffffff
    6a99:	74 0e                	je     6aa9 <main+0x1df>
    6a9b:	48 8d 3d 66 74 00 00 	lea    rdi,[rip+0x7466]        # df08 <_IO_stdin_used+0xf08>
    6aa2:	e8 b9 bd ff ff       	call   2860 <puts@plt>
    6aa7:	eb 0c                	jmp    6ab5 <main+0x1eb>
    6aa9:	48 8d 3d 78 74 00 00 	lea    rdi,[rip+0x7478]        # df28 <_IO_stdin_used+0xf28>
    6ab0:	e8 ab bd ff ff       	call   2860 <puts@plt>
    6ab5:	48 8d 3d 9d 74 00 00 	lea    rdi,[rip+0x749d]        # df59 <_IO_stdin_used+0xf59>
    6abc:	e8 ba ee ff ff       	call   597b <rule_library_parser>
    6ac1:	48 8d 3d a7 74 00 00 	lea    rdi,[rip+0x74a7]        # df6f <_IO_stdin_used+0xf6f>
    6ac8:	e8 93 bd ff ff       	call   2860 <puts@plt>
    6acd:	b8 00 00 00 00       	mov    eax,0x0
    6ad2:	e8 42 54 00 00       	call   bf19 <rule_processor>
    6ad7:	48 8b 85 e0 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x820]
    6ade:	48 89 c6             	mov    rsi,rax
    6ae1:	48 8d 3d a0 74 00 00 	lea    rdi,[rip+0x74a0]        # df88 <_IO_stdin_used+0xf88>
    6ae8:	b8 00 00 00 00       	mov    eax,0x0
    6aed:	e8 ce b9 ff ff       	call   24c0 <printf@plt>
    6af2:	48 c7 85 f0 f7 ff ff 	mov    QWORD PTR [rbp-0x810],0x0
    6af9:	00 00 00 00 
    6afd:	48 c7 85 f8 f7 ff ff 	mov    QWORD PTR [rbp-0x808],0x0
    6b04:	00 00 00 00 
    6b08:	48 8d 95 00 f8 ff ff 	lea    rdx,[rbp-0x800]
    6b0f:	b8 00 00 00 00       	mov    eax,0x0
    6b14:	b9 fd 00 00 00       	mov    ecx,0xfd
    6b19:	48 89 d7             	mov    rdi,rdx
    6b1c:	f3 48 ab             	rep stos QWORD PTR es:[rdi],rax
    6b1f:	48 89 fa             	mov    rdx,rdi
    6b22:	89 02                	mov    DWORD PTR [rdx],eax
    6b24:	48 83 c2 04          	add    rdx,0x4
    6b28:	66 89 02             	mov    WORD PTR [rdx],ax
    6b2b:	48 83 c2 02          	add    rdx,0x2
    6b2f:	48 8d 95 f0 f7 ff ff 	lea    rdx,[rbp-0x810]
    6b36:	48 8b 85 e0 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x820]
    6b3d:	49 89 d0             	mov    r8,rdx
    6b40:	b9 64 00 00 00       	mov    ecx,0x64
    6b45:	ba 01 00 00 00       	mov    edx,0x1
    6b4a:	be 00 04 00 00       	mov    esi,0x400
    6b4f:	48 89 c7             	mov    rdi,rax
    6b52:	e8 29 ba ff ff       	call   2580 <pcap_open_live@plt>
    6b57:	48 89 85 e8 f7 ff ff 	mov    QWORD PTR [rbp-0x818],rax
    6b5e:	48 83 bd e8 f7 ff ff 	cmp    QWORD PTR [rbp-0x818],0x0
    6b65:	00 
    6b66:	75 16                	jne    6b7e <main+0x2b4>
    6b68:	48 8d 3d 3a 74 00 00 	lea    rdi,[rip+0x743a]        # dfa9 <_IO_stdin_used+0xfa9>
    6b6f:	e8 fc ba ff ff       	call   2670 <perror@plt>
    6b74:	bf 01 00 00 00       	mov    edi,0x1
    6b79:	e8 c2 bb ff ff       	call   2740 <exit@plt>
    6b7e:	b8 00 00 00 00       	mov    eax,0x0
    6b83:	e8 c5 5b 00 00       	call   c74d <collect_scripts>
    6b88:	b8 00 00 00 00       	mov    eax,0x0
    6b8d:	e8 8b 06 00 00       	call   721d <start_nsh_server>
    6b92:	48 8d 3d 2f 74 00 00 	lea    rdi,[rip+0x742f]        # dfc8 <_IO_stdin_used+0xfc8>
    6b99:	e8 c2 bc ff ff       	call   2860 <puts@plt>
    6b9e:	48 8b 85 e8 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x818]
    6ba5:	b9 00 00 00 00       	mov    ecx,0x0
    6baa:	48 8d 15 92 be ff ff 	lea    rdx,[rip+0xffffffffffffbe92]        # 2a43 <pktmgr>
    6bb1:	be ff ff ff ff       	mov    esi,0xffffffff
    6bb6:	48 89 c7             	mov    rdi,rax
    6bb9:	e8 f2 b8 ff ff       	call   24b0 <pcap_loop@plt>
    6bbe:	b8 00 00 00 00       	mov    eax,0x0
    6bc3:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    6bc7:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    6bce:	00 00 
    6bd0:	74 05                	je     6bd7 <main+0x30d>
    6bd2:	e8 f9 ba ff ff       	call   26d0 <__stack_chk_fail@plt>
    6bd7:	c9                   	leave  
    6bd8:	c3                   	ret    

0000000000006bd9 <sigint_processor>:
    6bd9:	f3 0f 1e fa          	endbr64 
    6bdd:	55                   	push   rbp
    6bde:	48 89 e5             	mov    rbp,rsp
    6be1:	41 54                	push   r12
    6be3:	53                   	push   rbx
    6be4:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    6beb:	89 bd bc fe ff ff    	mov    DWORD PTR [rbp-0x144],edi
    6bf1:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6bf8:	00 00 
    6bfa:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    6bfe:	31 c0                	xor    eax,eax
    6c00:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    6c07:	00 00 00 
    6c0a:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    6c11:	48 89 c7             	mov    rdi,rax
    6c14:	e8 9a c8 ff ff       	call   34b3 <cb_get_formatted_time>
    6c19:	48 8d 95 e0 fe ff ff 	lea    rdx,[rbp-0x120]
    6c20:	8b 85 bc fe ff ff    	mov    eax,DWORD PTR [rbp-0x144]
    6c26:	89 c6                	mov    esi,eax
    6c28:	48 8d 3d 11 74 00 00 	lea    rdi,[rip+0x7411]        # e040 <_IO_stdin_used+0x1040>
    6c2f:	b8 00 00 00 00       	mov    eax,0x0
    6c34:	e8 87 b8 ff ff       	call   24c0 <printf@plt>
    6c39:	48 8d 3d 25 74 00 00 	lea    rdi,[rip+0x7425]        # e065 <_IO_stdin_used+0x1065>
    6c40:	e8 2b ba ff ff       	call   2670 <perror@plt>
    6c45:	0f b6 05 19 43 10 00 	movzx  eax,BYTE PTR [rip+0x104319]        # 10af65 <quiet_exit>
    6c4c:	83 f0 01             	xor    eax,0x1
    6c4f:	84 c0                	test   al,al
    6c51:	0f 84 2e 02 00 00    	je     6e85 <sigint_processor+0x2ac>
    6c57:	8b 05 47 b6 00 00    	mov    eax,DWORD PTR [rip+0xb647]        # 122a4 <total_pkt_captured>
    6c5d:	89 c6                	mov    esi,eax
    6c5f:	48 8d 3d 00 74 00 00 	lea    rdi,[rip+0x7400]        # e066 <_IO_stdin_used+0x1066>
    6c66:	b8 00 00 00 00       	mov    eax,0x0
    6c6b:	e8 50 b8 ff ff       	call   24c0 <printf@plt>
    6c70:	48 8d 3d 09 74 00 00 	lea    rdi,[rip+0x7409]        # e080 <_IO_stdin_used+0x1080>
    6c77:	e8 e4 bb ff ff       	call   2860 <puts@plt>
    6c7c:	c7 85 c4 fe ff ff 00 	mov    DWORD PTR [rbp-0x13c],0x0
    6c83:	00 00 00 
    6c86:	e9 e8 01 00 00       	jmp    6e73 <sigint_processor+0x29a>
    6c8b:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6c91:	48 63 d0             	movsxd rdx,eax
    6c94:	48 89 d0             	mov    rax,rdx
    6c97:	48 c1 e0 02          	shl    rax,0x2
    6c9b:	48 01 d0             	add    rax,rdx
    6c9e:	48 c1 e0 03          	shl    rax,0x3
    6ca2:	48 01 d0             	add    rax,rdx
    6ca5:	48 c1 e0 04          	shl    rax,0x4
    6ca9:	48 89 c2             	mov    rdx,rax
    6cac:	48 8d 05 dd da 0e 00 	lea    rax,[rip+0xedadd]        # f4790 <watchlist+0x270>
    6cb3:	44 8b 1c 02          	mov    r11d,DWORD PTR [rdx+rax*1]
    6cb7:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6cbd:	48 63 d0             	movsxd rdx,eax
    6cc0:	48 89 d0             	mov    rax,rdx
    6cc3:	48 c1 e0 02          	shl    rax,0x2
    6cc7:	48 01 d0             	add    rax,rdx
    6cca:	48 c1 e0 03          	shl    rax,0x3
    6cce:	48 01 d0             	add    rax,rdx
    6cd1:	48 c1 e0 04          	shl    rax,0x4
    6cd5:	48 89 c2             	mov    rdx,rax
    6cd8:	48 8d 05 a5 da 0e 00 	lea    rax,[rip+0xedaa5]        # f4784 <watchlist+0x264>
    6cdf:	44 8b 14 02          	mov    r10d,DWORD PTR [rdx+rax*1]
    6ce3:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6ce9:	48 63 d0             	movsxd rdx,eax
    6cec:	48 89 d0             	mov    rax,rdx
    6cef:	48 c1 e0 02          	shl    rax,0x2
    6cf3:	48 01 d0             	add    rax,rdx
    6cf6:	48 c1 e0 03          	shl    rax,0x3
    6cfa:	48 01 d0             	add    rax,rdx
    6cfd:	48 c1 e0 04          	shl    rax,0x4
    6d01:	48 89 c2             	mov    rdx,rax
    6d04:	48 8d 05 81 da 0e 00 	lea    rax,[rip+0xeda81]        # f478c <watchlist+0x26c>
    6d0b:	44 8b 0c 02          	mov    r9d,DWORD PTR [rdx+rax*1]
    6d0f:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6d15:	48 63 d0             	movsxd rdx,eax
    6d18:	48 89 d0             	mov    rax,rdx
    6d1b:	48 c1 e0 02          	shl    rax,0x2
    6d1f:	48 01 d0             	add    rax,rdx
    6d22:	48 c1 e0 03          	shl    rax,0x3
    6d26:	48 01 d0             	add    rax,rdx
    6d29:	48 c1 e0 04          	shl    rax,0x4
    6d2d:	48 89 c2             	mov    rdx,rax
    6d30:	48 8d 05 49 da 0e 00 	lea    rax,[rip+0xeda49]        # f4780 <watchlist+0x260>
    6d37:	44 8b 04 02          	mov    r8d,DWORD PTR [rdx+rax*1]
    6d3b:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6d41:	48 63 d0             	movsxd rdx,eax
    6d44:	48 89 d0             	mov    rax,rdx
    6d47:	48 c1 e0 02          	shl    rax,0x2
    6d4b:	48 01 d0             	add    rax,rdx
    6d4e:	48 c1 e0 03          	shl    rax,0x3
    6d52:	48 01 d0             	add    rax,rdx
    6d55:	48 c1 e0 04          	shl    rax,0x4
    6d59:	48 89 c2             	mov    rdx,rax
    6d5c:	48 8d 05 25 da 0e 00 	lea    rax,[rip+0xeda25]        # f4788 <watchlist+0x268>
    6d63:	8b 3c 02             	mov    edi,DWORD PTR [rdx+rax*1]
    6d66:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6d6c:	48 63 d0             	movsxd rdx,eax
    6d6f:	48 89 d0             	mov    rax,rdx
    6d72:	48 c1 e0 02          	shl    rax,0x2
    6d76:	48 01 d0             	add    rax,rdx
    6d79:	48 c1 e0 03          	shl    rax,0x3
    6d7d:	48 01 d0             	add    rax,rdx
    6d80:	48 c1 e0 04          	shl    rax,0x4
    6d84:	48 89 c2             	mov    rdx,rax
    6d87:	48 8d 05 ee d9 0e 00 	lea    rax,[rip+0xed9ee]        # f477c <watchlist+0x25c>
    6d8e:	44 8b 24 02          	mov    r12d,DWORD PTR [rdx+rax*1]
    6d92:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6d98:	48 63 d0             	movsxd rdx,eax
    6d9b:	48 89 d0             	mov    rax,rdx
    6d9e:	48 c1 e0 02          	shl    rax,0x2
    6da2:	48 01 d0             	add    rax,rdx
    6da5:	48 c1 e0 03          	shl    rax,0x3
    6da9:	48 01 d0             	add    rax,rdx
    6dac:	48 c1 e0 04          	shl    rax,0x4
    6db0:	48 89 c2             	mov    rdx,rax
    6db3:	48 8d 05 e2 d9 0e 00 	lea    rax,[rip+0xed9e2]        # f479c <watchlist+0x27c>
    6dba:	8b 1c 02             	mov    ebx,DWORD PTR [rdx+rax*1]
    6dbd:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6dc3:	48 63 d0             	movsxd rdx,eax
    6dc6:	48 89 d0             	mov    rax,rdx
    6dc9:	48 c1 e0 02          	shl    rax,0x2
    6dcd:	48 01 d0             	add    rax,rdx
    6dd0:	48 c1 e0 03          	shl    rax,0x3
    6dd4:	48 01 d0             	add    rax,rdx
    6dd7:	48 c1 e0 04          	shl    rax,0x4
    6ddb:	48 89 c2             	mov    rdx,rax
    6dde:	48 8d 05 bb d9 0e 00 	lea    rax,[rip+0xed9bb]        # f47a0 <watchlist+0x280>
    6de5:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
    6de8:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6dee:	48 63 d0             	movsxd rdx,eax
    6df1:	48 89 d0             	mov    rax,rdx
    6df4:	48 c1 e0 02          	shl    rax,0x2
    6df8:	48 01 d0             	add    rax,rdx
    6dfb:	48 c1 e0 03          	shl    rax,0x3
    6dff:	48 01 d0             	add    rax,rdx
    6e02:	48 c1 e0 04          	shl    rax,0x4
    6e06:	48 89 c2             	mov    rdx,rax
    6e09:	48 8d 05 68 d9 0e 00 	lea    rax,[rip+0xed968]        # f4778 <watchlist+0x258>
    6e10:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
    6e13:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6e19:	48 63 d0             	movsxd rdx,eax
    6e1c:	48 89 d0             	mov    rax,rdx
    6e1f:	48 c1 e0 02          	shl    rax,0x2
    6e23:	48 01 d0             	add    rax,rdx
    6e26:	48 c1 e0 03          	shl    rax,0x3
    6e2a:	48 01 d0             	add    rax,rdx
    6e2d:	48 c1 e0 04          	shl    rax,0x4
    6e31:	48 8d 15 e8 d6 0e 00 	lea    rdx,[rip+0xed6e8]        # f4520 <watchlist>
    6e38:	48 01 d0             	add    rax,rdx
    6e3b:	48 83 c0 08          	add    rax,0x8
    6e3f:	48 83 ec 08          	sub    rsp,0x8
    6e43:	41 53                	push   r11
    6e45:	41 52                	push   r10
    6e47:	41 51                	push   r9
    6e49:	41 50                	push   r8
    6e4b:	57                   	push   rdi
    6e4c:	45 89 e1             	mov    r9d,r12d
    6e4f:	41 89 d8             	mov    r8d,ebx
    6e52:	89 f2                	mov    edx,esi
    6e54:	48 89 c6             	mov    rsi,rax
    6e57:	48 8d 3d 5a 72 00 00 	lea    rdi,[rip+0x725a]        # e0b8 <_IO_stdin_used+0x10b8>
    6e5e:	b8 00 00 00 00       	mov    eax,0x0
    6e63:	e8 58 b6 ff ff       	call   24c0 <printf@plt>
    6e68:	48 83 c4 30          	add    rsp,0x30
    6e6c:	83 85 c4 fe ff ff 01 	add    DWORD PTR [rbp-0x13c],0x1
    6e73:	8b 05 9f b1 00 00    	mov    eax,DWORD PTR [rip+0xb19f]        # 12018 <watchlist_num>
    6e79:	39 85 c4 fe ff ff    	cmp    DWORD PTR [rbp-0x13c],eax
    6e7f:	0f 8e 06 fe ff ff    	jle    6c8b <sigint_processor+0xb2>
    6e85:	48 8d 35 cc 72 00 00 	lea    rsi,[rip+0x72cc]        # e158 <_IO_stdin_used+0x1158>
    6e8c:	48 8d 3d c7 72 00 00 	lea    rdi,[rip+0x72c7]        # e15a <_IO_stdin_used+0x115a>
    6e93:	e8 78 b8 ff ff       	call   2710 <fopen@plt>
    6e98:	48 89 85 d8 fe ff ff 	mov    QWORD PTR [rbp-0x128],rax
    6e9f:	48 83 bd d8 fe ff ff 	cmp    QWORD PTR [rbp-0x128],0x0
    6ea6:	00 
    6ea7:	0f 85 99 00 00 00    	jne    6f46 <sigint_processor+0x36d>
    6ead:	48 8d 3d c4 72 00 00 	lea    rdi,[rip+0x72c4]        # e178 <_IO_stdin_used+0x1178>
    6eb4:	e8 a7 b9 ff ff       	call   2860 <puts@plt>
    6eb9:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    6ec0:	48 89 c7             	mov    rdi,rax
    6ec3:	e8 f8 b7 ff ff       	call   26c0 <fclose@plt>
    6ec8:	c7 85 c8 fe ff ff 00 	mov    DWORD PTR [rbp-0x138],0x0
    6ecf:	00 00 00 
    6ed2:	eb 5f                	jmp    6f33 <sigint_processor+0x35a>
    6ed4:	8b 85 c8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x138]
    6eda:	48 63 d0             	movsxd rdx,eax
    6edd:	48 89 d0             	mov    rax,rdx
    6ee0:	48 c1 e0 04          	shl    rax,0x4
    6ee4:	48 01 d0             	add    rax,rdx
    6ee7:	48 01 c0             	add    rax,rax
    6eea:	48 8d 50 10          	lea    rdx,[rax+0x10]
    6eee:	48 8d 05 2b 1e 10 00 	lea    rax,[rip+0x101e2b]        # 108d20 <arpcache>
    6ef5:	48 01 c2             	add    rdx,rax
    6ef8:	8b 85 c8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x138]
    6efe:	48 63 c8             	movsxd rcx,eax
    6f01:	48 89 c8             	mov    rax,rcx
    6f04:	48 c1 e0 04          	shl    rax,0x4
    6f08:	48 01 c8             	add    rax,rcx
    6f0b:	48 01 c0             	add    rax,rax
    6f0e:	48 8d 0d 0b 1e 10 00 	lea    rcx,[rip+0x101e0b]        # 108d20 <arpcache>
    6f15:	48 01 c8             	add    rax,rcx
    6f18:	48 89 c6             	mov    rsi,rax
    6f1b:	48 8d 3d 9d 72 00 00 	lea    rdi,[rip+0x729d]        # e1bf <_IO_stdin_used+0x11bf>
    6f22:	b8 00 00 00 00       	mov    eax,0x0
    6f27:	e8 94 b5 ff ff       	call   24c0 <printf@plt>
    6f2c:	83 85 c8 fe ff ff 01 	add    DWORD PTR [rbp-0x138],0x1
    6f33:	8b 05 e3 b0 00 00    	mov    eax,DWORD PTR [rip+0xb0e3]        # 1201c <arp_entries>
    6f39:	39 85 c8 fe ff ff    	cmp    DWORD PTR [rbp-0x138],eax
    6f3f:	7e 93                	jle    6ed4 <sigint_processor+0x2fb>
    6f41:	e9 da 00 00 00       	jmp    7020 <sigint_processor+0x447>
    6f46:	c7 85 cc fe ff ff 00 	mov    DWORD PTR [rbp-0x134],0x0
    6f4d:	00 00 00 
    6f50:	eb 67                	jmp    6fb9 <sigint_processor+0x3e0>
    6f52:	8b 85 cc fe ff ff    	mov    eax,DWORD PTR [rbp-0x134]
    6f58:	48 63 d0             	movsxd rdx,eax
    6f5b:	48 89 d0             	mov    rax,rdx
    6f5e:	48 c1 e0 04          	shl    rax,0x4
    6f62:	48 01 d0             	add    rax,rdx
    6f65:	48 01 c0             	add    rax,rax
    6f68:	48 8d 50 10          	lea    rdx,[rax+0x10]
    6f6c:	48 8d 05 ad 1d 10 00 	lea    rax,[rip+0x101dad]        # 108d20 <arpcache>
    6f73:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    6f77:	8b 85 cc fe ff ff    	mov    eax,DWORD PTR [rbp-0x134]
    6f7d:	48 63 d0             	movsxd rdx,eax
    6f80:	48 89 d0             	mov    rax,rdx
    6f83:	48 c1 e0 04          	shl    rax,0x4
    6f87:	48 01 d0             	add    rax,rdx
    6f8a:	48 01 c0             	add    rax,rax
    6f8d:	48 8d 15 8c 1d 10 00 	lea    rdx,[rip+0x101d8c]        # 108d20 <arpcache>
    6f94:	48 01 c2             	add    rdx,rax
    6f97:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    6f9e:	48 8d 35 24 72 00 00 	lea    rsi,[rip+0x7224]        # e1c9 <_IO_stdin_used+0x11c9>
    6fa5:	48 89 c7             	mov    rdi,rax
    6fa8:	b8 00 00 00 00       	mov    eax,0x0
    6fad:	e8 5e b8 ff ff       	call   2810 <fprintf@plt>
    6fb2:	83 85 cc fe ff ff 01 	add    DWORD PTR [rbp-0x134],0x1
    6fb9:	8b 05 5d b0 00 00    	mov    eax,DWORD PTR [rip+0xb05d]        # 1201c <arp_entries>
    6fbf:	39 85 cc fe ff ff    	cmp    DWORD PTR [rbp-0x134],eax
    6fc5:	7e 8b                	jle    6f52 <sigint_processor+0x379>
    6fc7:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    6fce:	48 89 c7             	mov    rdi,rax
    6fd1:	e8 ea b6 ff ff       	call   26c0 <fclose@plt>
    6fd6:	c7 85 d0 fe ff ff 00 	mov    DWORD PTR [rbp-0x130],0x0
    6fdd:	00 00 00 
    6fe0:	eb 2f                	jmp    7011 <sigint_processor+0x438>
    6fe2:	8b 85 d0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x130]
    6fe8:	48 98                	cdqe   
    6fea:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    6ff1:	00 
    6ff2:	48 8d 05 a7 b0 00 00 	lea    rax,[rip+0xb0a7]        # 120a0 <threads>
    6ff9:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    6ffd:	be 00 00 00 00       	mov    esi,0x0
    7002:	48 89 c7             	mov    rdi,rax
    7005:	e8 76 b6 ff ff       	call   2680 <pthread_join@plt>
    700a:	83 85 d0 fe ff ff 01 	add    DWORD PTR [rbp-0x130],0x1
    7011:	8b 05 89 b2 00 00    	mov    eax,DWORD PTR [rip+0xb289]        # 122a0 <thread_count>
    7017:	39 85 d0 fe ff ff    	cmp    DWORD PTR [rbp-0x130],eax
    701d:	7c c3                	jl     6fe2 <sigint_processor+0x409>
    701f:	90                   	nop
    7020:	bf 00 00 00 00       	mov    edi,0x0
    7025:	e8 16 b7 ff ff       	call   2740 <exit@plt>

000000000000702a <print_help_and_exit>:
    702a:	f3 0f 1e fa          	endbr64 
    702e:	55                   	push   rbp
    702f:	48 89 e5             	mov    rbp,rsp
    7032:	48 8d 35 97 71 00 00 	lea    rsi,[rip+0x7197]        # e1d0 <_IO_stdin_used+0x11d0>
    7039:	48 8d 3d 98 71 00 00 	lea    rdi,[rip+0x7198]        # e1d8 <_IO_stdin_used+0x11d8>
    7040:	b8 00 00 00 00       	mov    eax,0x0
    7045:	e8 76 b4 ff ff       	call   24c0 <printf@plt>
    704a:	bf 00 00 00 00       	mov    edi,0x0
    704f:	e8 ec b6 ff ff       	call   2740 <exit@plt>

0000000000007054 <print_cpu_info>:
    7054:	f3 0f 1e fa          	endbr64 
    7058:	55                   	push   rbp
    7059:	48 89 e5             	mov    rbp,rsp
    705c:	53                   	push   rbx
    705d:	48 81 ec 48 02 00 00 	sub    rsp,0x248
    7064:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    706b:	00 00 
    706d:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    7071:	31 c0                	xor    eax,eax
    7073:	48 8d 35 e5 71 00 00 	lea    rsi,[rip+0x71e5]        # e25f <_IO_stdin_used+0x125f>
    707a:	48 8d 3d e1 71 00 00 	lea    rdi,[rip+0x71e1]        # e262 <_IO_stdin_used+0x1262>
    7081:	e8 8a b6 ff ff       	call   2710 <fopen@plt>
    7086:	48 89 85 d8 fd ff ff 	mov    QWORD PTR [rbp-0x228],rax
    708d:	48 c7 85 c8 fd ff ff 	mov    QWORD PTR [rbp-0x238],0x0
    7094:	00 00 00 00 
    7098:	48 c7 85 d0 fd ff ff 	mov    QWORD PTR [rbp-0x230],0x0
    709f:	00 00 00 00 
    70a3:	c7 85 bc fd ff ff 00 	mov    DWORD PTR [rbp-0x244],0x0
    70aa:	00 00 00 
    70ad:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    70b4:	ba 00 02 00 00       	mov    edx,0x200
    70b9:	be 00 00 00 00       	mov    esi,0x0
    70be:	48 89 c7             	mov    rdi,rax
    70c1:	e8 4a b5 ff ff       	call   2610 <memset@plt>
    70c6:	e9 b3 00 00 00       	jmp    717e <print_cpu_info+0x12a>
    70cb:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    70d2:	ba 0a 00 00 00       	mov    edx,0xa
    70d7:	48 89 c6             	mov    rsi,rax
    70da:	48 8d 3d 8f 71 00 00 	lea    rdi,[rip+0x718f]        # e270 <_IO_stdin_used+0x1270>
    70e1:	e8 da b4 ff ff       	call   25c0 <strncmp@plt>
    70e6:	85 c0                	test   eax,eax
    70e8:	0f 85 90 00 00 00    	jne    717e <print_cpu_info+0x12a>
    70ee:	c7 85 c0 fd ff ff 00 	mov    DWORD PTR [rbp-0x240],0x0
    70f5:	00 00 00 
    70f8:	c7 85 c4 fd ff ff 00 	mov    DWORD PTR [rbp-0x23c],0x0
    70ff:	00 00 00 
    7102:	eb 2e                	jmp    7132 <print_cpu_info+0xde>
    7104:	48 8b 95 c8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x238]
    710b:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    7111:	48 98                	cdqe   
    7113:	48 01 d0             	add    rax,rdx
    7116:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    7119:	3c 3a                	cmp    al,0x3a
    711b:	75 0e                	jne    712b <print_cpu_info+0xd7>
    711d:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    7123:	89 85 c0 fd ff ff    	mov    DWORD PTR [rbp-0x240],eax
    7129:	eb 24                	jmp    714f <print_cpu_info+0xfb>
    712b:	83 85 c4 fd ff ff 01 	add    DWORD PTR [rbp-0x23c],0x1
    7132:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    7138:	48 63 d8             	movsxd rbx,eax
    713b:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    7142:	48 89 c7             	mov    rdi,rax
    7145:	e8 56 b4 ff ff       	call   25a0 <strlen@plt>
    714a:	48 39 c3             	cmp    rbx,rax
    714d:	72 b5                	jb     7104 <print_cpu_info+0xb0>
    714f:	83 85 bc fd ff ff 01 	add    DWORD PTR [rbp-0x244],0x1
    7156:	48 8b 95 c8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x238]
    715d:	8b 85 c0 fd ff ff    	mov    eax,DWORD PTR [rbp-0x240]
    7163:	48 98                	cdqe   
    7165:	48 83 c0 02          	add    rax,0x2
    7169:	48 01 c2             	add    rdx,rax
    716c:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    7173:	48 89 d6             	mov    rsi,rdx
    7176:	48 89 c7             	mov    rdi,rax
    7179:	e8 52 b7 ff ff       	call   28d0 <strcat@plt>
    717e:	48 8b 95 d8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x228]
    7185:	48 8d b5 d0 fd ff ff 	lea    rsi,[rbp-0x230]
    718c:	48 8d 85 c8 fd ff ff 	lea    rax,[rbp-0x238]
    7193:	48 89 d1             	mov    rcx,rdx
    7196:	ba 0a 00 00 00       	mov    edx,0xa
    719b:	48 89 c7             	mov    rdi,rax
    719e:	e8 fd b6 ff ff       	call   28a0 <getdelim@plt>
    71a3:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
    71a7:	0f 85 1e ff ff ff    	jne    70cb <print_cpu_info+0x77>
    71ad:	48 8d 95 e0 fd ff ff 	lea    rdx,[rbp-0x220]
    71b4:	8b 85 bc fd ff ff    	mov    eax,DWORD PTR [rbp-0x244]
    71ba:	89 c6                	mov    esi,eax
    71bc:	48 8d 3d b8 70 00 00 	lea    rdi,[rip+0x70b8]        # e27b <_IO_stdin_used+0x127b>
    71c3:	b8 00 00 00 00       	mov    eax,0x0
    71c8:	e8 f3 b2 ff ff       	call   24c0 <printf@plt>
    71cd:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    71d4:	48 89 c7             	mov    rdi,rax
    71d7:	e8 54 b5 ff ff       	call   2730 <free@plt>
    71dc:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    71e3:	48 89 c7             	mov    rdi,rax
    71e6:	e8 d5 b4 ff ff       	call   26c0 <fclose@plt>
    71eb:	90                   	nop
    71ec:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    71f0:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    71f7:	00 00 
    71f9:	74 05                	je     7200 <print_cpu_info+0x1ac>
    71fb:	e8 d0 b4 ff ff       	call   26d0 <__stack_chk_fail@plt>
    7200:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    7204:	c9                   	leave  
    7205:	c3                   	ret    

0000000000007206 <print_logo>:
    7206:	f3 0f 1e fa          	endbr64 
    720a:	55                   	push   rbp
    720b:	48 89 e5             	mov    rbp,rsp
    720e:	48 8d 3d 7b 70 00 00 	lea    rdi,[rip+0x707b]        # e290 <_IO_stdin_used+0x1290>
    7215:	e8 46 b6 ff ff       	call   2860 <puts@plt>
    721a:	90                   	nop
    721b:	5d                   	pop    rbp
    721c:	c3                   	ret    

000000000000721d <start_nsh_server>:
    721d:	f3 0f 1e fa          	endbr64 
    7221:	55                   	push   rbp
    7222:	48 89 e5             	mov    rbp,rsp
    7225:	48 83 ec 10          	sub    rsp,0x10
    7229:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7230:	00 00 
    7232:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7236:	31 c0                	xor    eax,eax
    7238:	48 8d 45 f0          	lea    rax,[rbp-0x10]
    723c:	b9 00 00 00 00       	mov    ecx,0x0
    7241:	48 8d 15 71 00 00 00 	lea    rdx,[rip+0x71]        # 72b9 <actually_start_nsh_server>
    7248:	be 00 00 00 00       	mov    esi,0x0
    724d:	48 89 c7             	mov    rdi,rax
    7250:	e8 9b b6 ff ff       	call   28f0 <pthread_create@plt>
    7255:	90                   	nop
    7256:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    725a:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    7261:	00 00 
    7263:	74 05                	je     726a <start_nsh_server+0x4d>
    7265:	e8 66 b4 ff ff       	call   26d0 <__stack_chk_fail@plt>
    726a:	c9                   	leave  
    726b:	c3                   	ret    

000000000000726c <rnstrip>:
    726c:	f3 0f 1e fa          	endbr64 
    7270:	55                   	push   rbp
    7271:	48 89 e5             	mov    rbp,rsp
    7274:	48 83 ec 10          	sub    rsp,0x10
    7278:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    727c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7280:	48 8d 35 81 71 00 00 	lea    rsi,[rip+0x7181]        # e408 <_IO_stdin_used+0x1408>
    7287:	48 89 c7             	mov    rdi,rax
    728a:	e8 51 b2 ff ff       	call   24e0 <strcspn@plt>
    728f:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    7293:	48 01 d0             	add    rax,rdx
    7296:	c6 00 00             	mov    BYTE PTR [rax],0x0
    7299:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    729d:	48 8d 35 66 71 00 00 	lea    rsi,[rip+0x7166]        # e40a <_IO_stdin_used+0x140a>
    72a4:	48 89 c7             	mov    rdi,rax
    72a7:	e8 34 b2 ff ff       	call   24e0 <strcspn@plt>
    72ac:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    72b0:	48 01 d0             	add    rax,rdx
    72b3:	c6 00 00             	mov    BYTE PTR [rax],0x0
    72b6:	90                   	nop
    72b7:	c9                   	leave  
    72b8:	c3                   	ret    

00000000000072b9 <actually_start_nsh_server>:
    72b9:	f3 0f 1e fa          	endbr64 
    72bd:	55                   	push   rbp
    72be:	48 89 e5             	mov    rbp,rsp
    72c1:	48 83 ec 50          	sub    rsp,0x50
    72c5:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    72cc:	00 00 
    72ce:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    72d2:	31 c0                	xor    eax,eax
    72d4:	c7 45 bc 10 00 00 00 	mov    DWORD PTR [rbp-0x44],0x10
    72db:	ba 00 00 00 00       	mov    edx,0x0
    72e0:	be 01 00 00 00       	mov    esi,0x1
    72e5:	bf 02 00 00 00       	mov    edi,0x2
    72ea:	e8 51 b2 ff ff       	call   2540 <socket@plt>
    72ef:	89 45 c0             	mov    DWORD PTR [rbp-0x40],eax
    72f2:	83 7d c0 00          	cmp    DWORD PTR [rbp-0x40],0x0
    72f6:	75 16                	jne    730e <actually_start_nsh_server+0x55>
    72f8:	48 8d 3d 11 71 00 00 	lea    rdi,[rip+0x7111]        # e410 <_IO_stdin_used+0x1410>
    72ff:	e8 5c b5 ff ff       	call   2860 <puts@plt>
    7304:	bf 01 00 00 00       	mov    edi,0x1
    7309:	e8 32 b4 ff ff       	call   2740 <exit@plt>
    730e:	48 8d 55 bc          	lea    rdx,[rbp-0x44]
    7312:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    7315:	41 b8 04 00 00 00    	mov    r8d,0x4
    731b:	48 89 d1             	mov    rcx,rdx
    731e:	ba 02 00 00 00       	mov    edx,0x2
    7323:	be 01 00 00 00       	mov    esi,0x1
    7328:	89 c7                	mov    edi,eax
    732a:	e8 b1 b5 ff ff       	call   28e0 <setsockopt@plt>
    732f:	85 c0                	test   eax,eax
    7331:	74 16                	je     7349 <actually_start_nsh_server+0x90>
    7333:	48 8d 3d fe 70 00 00 	lea    rdi,[rip+0x70fe]        # e438 <_IO_stdin_used+0x1438>
    733a:	e8 21 b5 ff ff       	call   2860 <puts@plt>
    733f:	bf 01 00 00 00       	mov    edi,0x1
    7344:	e8 f7 b3 ff ff       	call   2740 <exit@plt>
    7349:	66 c7 45 e0 02 00    	mov    WORD PTR [rbp-0x20],0x2
    734f:	bf 00 00 00 00       	mov    edi,0x0
    7354:	e8 f7 b2 ff ff       	call   2650 <htonl@plt>
    7359:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
    735c:	bf 17 00 00 00       	mov    edi,0x17
    7361:	e8 6a b1 ff ff       	call   24d0 <htons@plt>
    7366:	66 89 45 e2          	mov    WORD PTR [rbp-0x1e],ax
    736a:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
    736e:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    7371:	ba 10 00 00 00       	mov    edx,0x10
    7376:	48 89 ce             	mov    rsi,rcx
    7379:	89 c7                	mov    edi,eax
    737b:	e8 70 b1 ff ff       	call   24f0 <bind@plt>
    7380:	85 c0                	test   eax,eax
    7382:	79 16                	jns    739a <actually_start_nsh_server+0xe1>
    7384:	48 8d 3d d5 70 00 00 	lea    rdi,[rip+0x70d5]        # e460 <_IO_stdin_used+0x1460>
    738b:	e8 d0 b4 ff ff       	call   2860 <puts@plt>
    7390:	bf 01 00 00 00       	mov    edi,0x1
    7395:	e8 a6 b3 ff ff       	call   2740 <exit@plt>
    739a:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    739d:	be 05 00 00 00       	mov    esi,0x5
    73a2:	89 c7                	mov    edi,eax
    73a4:	e8 47 b3 ff ff       	call   26f0 <listen@plt>
    73a9:	85 c0                	test   eax,eax
    73ab:	79 16                	jns    73c3 <actually_start_nsh_server+0x10a>
    73ad:	48 8d 3d e4 70 00 00 	lea    rdi,[rip+0x70e4]        # e498 <_IO_stdin_used+0x1498>
    73b4:	e8 a7 b4 ff ff       	call   2860 <puts@plt>
    73b9:	bf 01 00 00 00       	mov    edi,0x1
    73be:	e8 7d b3 ff ff       	call   2740 <exit@plt>
    73c3:	48 8d 55 bc          	lea    rdx,[rbp-0x44]
    73c7:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
    73cb:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    73ce:	48 89 ce             	mov    rsi,rcx
    73d1:	89 c7                	mov    edi,eax
    73d3:	e8 78 b1 ff ff       	call   2550 <accept@plt>
    73d8:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    73db:	83 7d c4 00          	cmp    DWORD PTR [rbp-0x3c],0x0
    73df:	79 20                	jns    7401 <actually_start_nsh_server+0x148>
    73e1:	b8 00 00 00 00       	mov    eax,0x0
    73e6:	e8 f4 bf ff ff       	call   33df <get_formated_time>
    73eb:	48 89 c6             	mov    rsi,rax
    73ee:	48 8d 3d d3 70 00 00 	lea    rdi,[rip+0x70d3]        # e4c8 <_IO_stdin_used+0x14c8>
    73f5:	b8 00 00 00 00       	mov    eax,0x0
    73fa:	e8 c1 b0 ff ff       	call   24c0 <printf@plt>
    73ff:	eb c2                	jmp    73c3 <actually_start_nsh_server+0x10a>
    7401:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    7404:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
    7407:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    740b:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    740f:	48 8d 55 d0          	lea    rdx,[rbp-0x30]
    7413:	48 8d 45 c8          	lea    rax,[rbp-0x38]
    7417:	48 89 d1             	mov    rcx,rdx
    741a:	48 8d 15 8d 05 00 00 	lea    rdx,[rip+0x58d]        # 79ae <nsh_shell>
    7421:	be 00 00 00 00       	mov    esi,0x0
    7426:	48 89 c7             	mov    rdi,rax
    7429:	e8 c2 b4 ff ff       	call   28f0 <pthread_create@plt>
    742e:	eb 93                	jmp    73c3 <actually_start_nsh_server+0x10a>

0000000000007430 <nsh_do_login>:
    7430:	f3 0f 1e fa          	endbr64 
    7434:	55                   	push   rbp
    7435:	48 89 e5             	mov    rbp,rsp
    7438:	53                   	push   rbx
    7439:	48 81 ec c8 03 00 00 	sub    rsp,0x3c8
    7440:	89 bd 3c fc ff ff    	mov    DWORD PTR [rbp-0x3c4],edi
    7446:	48 89 b5 30 fc ff ff 	mov    QWORD PTR [rbp-0x3d0],rsi
    744d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7454:	00 00 
    7456:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    745a:	31 c0                	xor    eax,eax
    745c:	48 8d 05 87 70 00 00 	lea    rax,[rip+0x7087]        # e4ea <_IO_stdin_used+0x14ea>
    7463:	48 89 85 68 fc ff ff 	mov    QWORD PTR [rbp-0x398],rax
    746a:	8b 85 3c fc ff ff    	mov    eax,DWORD PTR [rbp-0x3c4]
    7470:	b9 00 00 00 00       	mov    ecx,0x0
    7475:	ba 13 00 00 00       	mov    edx,0x13
    747a:	48 8d 35 6b 70 00 00 	lea    rsi,[rip+0x706b]        # e4ec <_IO_stdin_used+0x14ec>
    7481:	89 c7                	mov    edi,eax
    7483:	e8 48 b1 ff ff       	call   25d0 <send@plt>
    7488:	8b 85 3c fc ff ff    	mov    eax,DWORD PTR [rbp-0x3c4]
    748e:	b9 00 00 00 00       	mov    ecx,0x0
    7493:	ba 0b 00 00 00       	mov    edx,0xb
    7498:	48 8d 35 61 70 00 00 	lea    rsi,[rip+0x7061]        # e500 <_IO_stdin_used+0x1500>
    749f:	89 c7                	mov    edi,eax
    74a1:	e8 2a b1 ff ff       	call   25d0 <send@plt>
    74a6:	48 8d 8d d0 fd ff ff 	lea    rcx,[rbp-0x230]
    74ad:	8b 85 3c fc ff ff    	mov    eax,DWORD PTR [rbp-0x3c4]
    74b3:	ba 10 00 00 00       	mov    edx,0x10
    74b8:	48 89 ce             	mov    rsi,rcx
    74bb:	89 c7                	mov    edi,eax
    74bd:	e8 5e b3 ff ff       	call   2820 <read@plt>
    74c2:	89 85 4c fc ff ff    	mov    DWORD PTR [rbp-0x3b4],eax
    74c8:	8b 85 3c fc ff ff    	mov    eax,DWORD PTR [rbp-0x3c4]
    74ce:	b9 00 00 00 00       	mov    ecx,0x0
    74d3:	ba 0b 00 00 00       	mov    edx,0xb
    74d8:	48 8d 35 2c 70 00 00 	lea    rsi,[rip+0x702c]        # e50b <_IO_stdin_used+0x150b>
    74df:	89 c7                	mov    edi,eax
    74e1:	e8 ea b0 ff ff       	call   25d0 <send@plt>
    74e6:	48 8d 85 d0 fd ff ff 	lea    rax,[rbp-0x230]
    74ed:	48 89 c7             	mov    rdi,rax
    74f0:	e8 77 fd ff ff       	call   726c <rnstrip>
    74f5:	48 8d 8d f0 fd ff ff 	lea    rcx,[rbp-0x210]
    74fc:	8b 85 3c fc ff ff    	mov    eax,DWORD PTR [rbp-0x3c4]
    7502:	ba 10 00 00 00       	mov    edx,0x10
    7507:	48 89 ce             	mov    rsi,rcx
    750a:	89 c7                	mov    edi,eax
    750c:	e8 0f b3 ff ff       	call   2820 <read@plt>
    7511:	89 85 4c fc ff ff    	mov    DWORD PTR [rbp-0x3b4],eax
    7517:	48 8d 85 f0 fd ff ff 	lea    rax,[rbp-0x210]
    751e:	48 89 c7             	mov    rdi,rax
    7521:	e8 46 fd ff ff       	call   726c <rnstrip>
    7526:	48 8d 85 f0 fd ff ff 	lea    rax,[rbp-0x210]
    752d:	48 89 85 70 fc ff ff 	mov    QWORD PTR [rbp-0x390],rax
    7534:	48 8d 35 db 6f 00 00 	lea    rsi,[rip+0x6fdb]        # e516 <_IO_stdin_used+0x1516>
    753b:	48 8d 3d d6 6f 00 00 	lea    rdi,[rip+0x6fd6]        # e518 <_IO_stdin_used+0x1518>
    7542:	e8 c9 b1 ff ff       	call   2710 <fopen@plt>
    7547:	48 89 85 78 fc ff ff 	mov    QWORD PTR [rbp-0x388],rax
    754e:	48 83 bd 78 fc ff ff 	cmp    QWORD PTR [rbp-0x388],0x0
    7555:	00 
    7556:	75 16                	jne    756e <nsh_do_login+0x13e>
    7558:	48 8d 3d cb 6f 00 00 	lea    rdi,[rip+0x6fcb]        # e52a <_IO_stdin_used+0x152a>
    755f:	e8 fc b2 ff ff       	call   2860 <puts@plt>
    7564:	b8 00 00 00 00       	mov    eax,0x0
    7569:	e9 26 04 00 00       	jmp    7994 <nsh_do_login+0x564>
    756e:	48 c7 85 50 fc ff ff 	mov    QWORD PTR [rbp-0x3b0],0x0
    7575:	00 00 00 00 
    7579:	48 c7 85 58 fc ff ff 	mov    QWORD PTR [rbp-0x3a8],0x0
    7580:	00 00 00 00 
    7584:	bf 00 00 00 00       	mov    edi,0x0
    7589:	e8 02 b1 ff ff       	call   2690 <time@plt>
    758e:	48 89 85 60 fc ff ff 	mov    QWORD PTR [rbp-0x3a0],rax
    7595:	48 8d 85 60 fc ff ff 	lea    rax,[rbp-0x3a0]
    759c:	48 89 c7             	mov    rdi,rax
    759f:	e8 8c b0 ff ff       	call   2630 <localtime@plt>
    75a4:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    75a7:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    75ab:	48 89 8d a0 fc ff ff 	mov    QWORD PTR [rbp-0x360],rcx
    75b2:	48 89 9d a8 fc ff ff 	mov    QWORD PTR [rbp-0x358],rbx
    75b9:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    75bd:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    75c1:	48 89 8d b0 fc ff ff 	mov    QWORD PTR [rbp-0x350],rcx
    75c8:	48 89 9d b8 fc ff ff 	mov    QWORD PTR [rbp-0x348],rbx
    75cf:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    75d3:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    75d7:	48 89 8d c0 fc ff ff 	mov    QWORD PTR [rbp-0x340],rcx
    75de:	48 89 9d c8 fc ff ff 	mov    QWORD PTR [rbp-0x338],rbx
    75e5:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    75e9:	48 89 85 d0 fc ff ff 	mov    QWORD PTR [rbp-0x330],rax
    75f0:	8b bd a0 fc ff ff    	mov    edi,DWORD PTR [rbp-0x360]
    75f6:	8b b5 a4 fc ff ff    	mov    esi,DWORD PTR [rbp-0x35c]
    75fc:	44 8b 8d a8 fc ff ff 	mov    r9d,DWORD PTR [rbp-0x358]
    7603:	44 8b 85 ac fc ff ff 	mov    r8d,DWORD PTR [rbp-0x354]
    760a:	8b 85 b0 fc ff ff    	mov    eax,DWORD PTR [rbp-0x350]
    7610:	8d 48 01             	lea    ecx,[rax+0x1]
    7613:	8b 85 b4 fc ff ff    	mov    eax,DWORD PTR [rbp-0x34c]
    7619:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    761f:	48 8d 85 10 fe ff ff 	lea    rax,[rbp-0x1f0]
    7626:	57                   	push   rdi
    7627:	56                   	push   rsi
    7628:	48 8d 35 18 6f 00 00 	lea    rsi,[rip+0x6f18]        # e547 <_IO_stdin_used+0x1547>
    762f:	48 89 c7             	mov    rdi,rax
    7632:	b8 00 00 00 00       	mov    eax,0x0
    7637:	e8 c4 ae ff ff       	call   2500 <sprintf@plt>
    763c:	48 83 c4 10          	add    rsp,0x10
    7640:	e9 76 02 00 00       	jmp    78bb <nsh_do_login+0x48b>
    7645:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
    764c:	ba 40 00 00 00       	mov    edx,0x40
    7651:	be 00 00 00 00       	mov    esi,0x0
    7656:	48 89 c7             	mov    rdi,rax
    7659:	e8 b2 af ff ff       	call   2610 <memset@plt>
    765e:	48 8d 85 e0 fc ff ff 	lea    rax,[rbp-0x320]
    7665:	ba d8 00 00 00       	mov    edx,0xd8
    766a:	be 00 00 00 00       	mov    esi,0x0
    766f:	48 89 c7             	mov    rdi,rax
    7672:	e8 99 af ff ff       	call   2610 <memset@plt>
    7677:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    767e:	ba 80 00 00 00       	mov    edx,0x80
    7683:	be 00 00 00 00       	mov    esi,0x0
    7688:	48 89 c7             	mov    rdi,rax
    768b:	e8 80 af ff ff       	call   2610 <memset@plt>
    7690:	48 8b 85 50 fc ff ff 	mov    rax,QWORD PTR [rbp-0x3b0]
    7697:	48 89 c7             	mov    rdi,rax
    769a:	e8 cd fb ff ff       	call   726c <rnstrip>
    769f:	48 8b 85 50 fc ff ff 	mov    rax,QWORD PTR [rbp-0x3b0]
    76a6:	48 8b 95 68 fc ff ff 	mov    rdx,QWORD PTR [rbp-0x398]
    76ad:	48 89 d6             	mov    rsi,rdx
    76b0:	48 89 c7             	mov    rdi,rax
    76b3:	e8 c8 b1 ff ff       	call   2880 <strtok@plt>
    76b8:	48 89 85 90 fc ff ff 	mov    QWORD PTR [rbp-0x370],rax
    76bf:	48 8b 95 90 fc ff ff 	mov    rdx,QWORD PTR [rbp-0x370]
    76c6:	48 8d 85 c0 fd ff ff 	lea    rax,[rbp-0x240]
    76cd:	48 89 d6             	mov    rsi,rdx
    76d0:	48 89 c7             	mov    rdi,rax
    76d3:	e8 c8 af ff ff       	call   26a0 <strcpy@plt>
    76d8:	48 8d 95 c0 fd ff ff 	lea    rdx,[rbp-0x240]
    76df:	48 8d 85 d0 fd ff ff 	lea    rax,[rbp-0x230]
    76e6:	48 89 d6             	mov    rsi,rdx
    76e9:	48 89 c7             	mov    rdi,rax
    76ec:	e8 ef b0 ff ff       	call   27e0 <strcmp@plt>
    76f1:	85 c0                	test   eax,eax
    76f3:	74 05                	je     76fa <nsh_do_login+0x2ca>
    76f5:	e9 c1 01 00 00       	jmp    78bb <nsh_do_login+0x48b>
    76fa:	48 8b 85 68 fc ff ff 	mov    rax,QWORD PTR [rbp-0x398]
    7701:	48 89 c6             	mov    rsi,rax
    7704:	bf 00 00 00 00       	mov    edi,0x0
    7709:	e8 72 b1 ff ff       	call   2880 <strtok@plt>
    770e:	48 89 85 90 fc ff ff 	mov    QWORD PTR [rbp-0x370],rax
    7715:	48 8b 95 90 fc ff ff 	mov    rdx,QWORD PTR [rbp-0x370]
    771c:	48 8d 85 90 fe ff ff 	lea    rax,[rbp-0x170]
    7723:	48 89 d6             	mov    rsi,rdx
    7726:	48 89 c7             	mov    rdi,rax
    7729:	e8 72 af ff ff       	call   26a0 <strcpy@plt>
    772e:	48 8d 85 90 fe ff ff 	lea    rax,[rbp-0x170]
    7735:	48 89 c7             	mov    rdi,rax
    7738:	e8 23 b1 ff ff       	call   2860 <puts@plt>
    773d:	48 8d 85 e0 fc ff ff 	lea    rax,[rbp-0x320]
    7744:	48 89 c7             	mov    rdi,rax
    7747:	e8 04 b1 ff ff       	call   2850 <SHA512_Init@plt>
    774c:	48 8b 8d 70 fc ff ff 	mov    rcx,QWORD PTR [rbp-0x390]
    7753:	48 8d 85 e0 fc ff ff 	lea    rax,[rbp-0x320]
    775a:	ba 08 00 00 00       	mov    edx,0x8
    775f:	48 89 ce             	mov    rsi,rcx
    7762:	48 89 c7             	mov    rdi,rax
    7765:	e8 b6 ad ff ff       	call   2520 <SHA512_Update@plt>
    776a:	48 8d 95 e0 fc ff ff 	lea    rdx,[rbp-0x320]
    7771:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
    7778:	48 89 d6             	mov    rsi,rdx
    777b:	48 89 c7             	mov    rdi,rax
    777e:	e8 0d ae ff ff       	call   2590 <SHA512_Final@plt>
    7783:	c7 85 48 fc ff ff 00 	mov    DWORD PTR [rbp-0x3b8],0x0
    778a:	00 00 00 
    778d:	eb 45                	jmp    77d4 <nsh_do_login+0x3a4>
    778f:	8b 85 48 fc ff ff    	mov    eax,DWORD PTR [rbp-0x3b8]
    7795:	48 98                	cdqe   
    7797:	0f b6 84 05 50 fe ff 	movzx  eax,BYTE PTR [rbp+rax*1-0x1b0]
    779e:	ff 
    779f:	0f b6 c0             	movzx  eax,al
    77a2:	8b 95 48 fc ff ff    	mov    edx,DWORD PTR [rbp-0x3b8]
    77a8:	01 d2                	add    edx,edx
    77aa:	48 63 d2             	movsxd rdx,edx
    77ad:	48 8d 8d e0 fe ff ff 	lea    rcx,[rbp-0x120]
    77b4:	48 01 d1             	add    rcx,rdx
    77b7:	89 c2                	mov    edx,eax
    77b9:	48 8d 35 a3 6d 00 00 	lea    rsi,[rip+0x6da3]        # e563 <_IO_stdin_used+0x1563>
    77c0:	48 89 cf             	mov    rdi,rcx
    77c3:	b8 00 00 00 00       	mov    eax,0x0
    77c8:	e8 33 ad ff ff       	call   2500 <sprintf@plt>
    77cd:	83 85 48 fc ff ff 01 	add    DWORD PTR [rbp-0x3b8],0x1
    77d4:	83 bd 48 fc ff ff 7f 	cmp    DWORD PTR [rbp-0x3b8],0x7f
    77db:	7e b2                	jle    778f <nsh_do_login+0x35f>
    77dd:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    77e4:	48 89 c7             	mov    rdi,rax
    77e7:	e8 74 b0 ff ff       	call   2860 <puts@plt>
    77ec:	48 8d 8d 90 fe ff ff 	lea    rcx,[rbp-0x170]
    77f3:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    77fa:	ba 40 00 00 00       	mov    edx,0x40
    77ff:	48 89 ce             	mov    rsi,rcx
    7802:	48 89 c7             	mov    rdi,rax
    7805:	e8 b6 ad ff ff       	call   25c0 <strncmp@plt>
    780a:	85 c0                	test   eax,eax
    780c:	0f 85 a9 00 00 00    	jne    78bb <nsh_do_login+0x48b>
    7812:	48 8d 35 4f 6d 00 00 	lea    rsi,[rip+0x6d4f]        # e568 <_IO_stdin_used+0x1568>
    7819:	48 8d 3d 4a 6d 00 00 	lea    rdi,[rip+0x6d4a]        # e56a <_IO_stdin_used+0x156a>
    7820:	e8 eb ae ff ff       	call   2710 <fopen@plt>
    7825:	48 89 85 98 fc ff ff 	mov    QWORD PTR [rbp-0x368],rax
    782c:	48 8b b5 30 fc ff ff 	mov    rsi,QWORD PTR [rbp-0x3d0]
    7833:	48 8d 8d 10 fe ff ff 	lea    rcx,[rbp-0x1f0]
    783a:	48 8d 95 d0 fd ff ff 	lea    rdx,[rbp-0x230]
    7841:	48 8d 85 60 ff ff ff 	lea    rax,[rbp-0xa0]
    7848:	49 89 f0             	mov    r8,rsi
    784b:	48 8d 35 36 6d 00 00 	lea    rsi,[rip+0x6d36]        # e588 <_IO_stdin_used+0x1588>
    7852:	48 89 c7             	mov    rdi,rax
    7855:	b8 00 00 00 00       	mov    eax,0x0
    785a:	e8 a1 ac ff ff       	call   2500 <sprintf@plt>
    785f:	48 8b 95 98 fc ff ff 	mov    rdx,QWORD PTR [rbp-0x368]
    7866:	48 8d 85 60 ff ff ff 	lea    rax,[rbp-0xa0]
    786d:	48 89 d6             	mov    rsi,rdx
    7870:	48 89 c7             	mov    rdi,rax
    7873:	e8 68 ae ff ff       	call   26e0 <fputs@plt>
    7878:	48 8b 85 98 fc ff ff 	mov    rax,QWORD PTR [rbp-0x368]
    787f:	48 89 c7             	mov    rdi,rax
    7882:	e8 39 ae ff ff       	call   26c0 <fclose@plt>
    7887:	48 8b 85 50 fc ff ff 	mov    rax,QWORD PTR [rbp-0x3b0]
    788e:	48 85 c0             	test   rax,rax
    7891:	74 0f                	je     78a2 <nsh_do_login+0x472>
    7893:	48 8b 85 50 fc ff ff 	mov    rax,QWORD PTR [rbp-0x3b0]
    789a:	48 89 c7             	mov    rdi,rax
    789d:	e8 8e ae ff ff       	call   2730 <free@plt>
    78a2:	48 8b 85 78 fc ff ff 	mov    rax,QWORD PTR [rbp-0x388]
    78a9:	48 89 c7             	mov    rdi,rax
    78ac:	e8 0f ae ff ff       	call   26c0 <fclose@plt>
    78b1:	b8 01 00 00 00       	mov    eax,0x1
    78b6:	e9 d9 00 00 00       	jmp    7994 <nsh_do_login+0x564>
    78bb:	48 8b 95 78 fc ff ff 	mov    rdx,QWORD PTR [rbp-0x388]
    78c2:	48 8d 8d 58 fc ff ff 	lea    rcx,[rbp-0x3a8]
    78c9:	48 8d 85 50 fc ff ff 	lea    rax,[rbp-0x3b0]
    78d0:	48 89 ce             	mov    rsi,rcx
    78d3:	48 89 c7             	mov    rdi,rax
    78d6:	e8 95 ae ff ff       	call   2770 <getline@plt>
    78db:	48 89 85 80 fc ff ff 	mov    QWORD PTR [rbp-0x380],rax
    78e2:	48 83 bd 80 fc ff ff 	cmp    QWORD PTR [rbp-0x380],0xffffffffffffffff
    78e9:	ff 
    78ea:	0f 85 55 fd ff ff    	jne    7645 <nsh_do_login+0x215>
    78f0:	48 8d 35 71 6c 00 00 	lea    rsi,[rip+0x6c71]        # e568 <_IO_stdin_used+0x1568>
    78f7:	48 8d 3d 6c 6c 00 00 	lea    rdi,[rip+0x6c6c]        # e56a <_IO_stdin_used+0x156a>
    78fe:	e8 0d ae ff ff       	call   2710 <fopen@plt>
    7903:	48 89 85 88 fc ff ff 	mov    QWORD PTR [rbp-0x378],rax
    790a:	48 8b b5 30 fc ff ff 	mov    rsi,QWORD PTR [rbp-0x3d0]
    7911:	48 8d 8d 10 fe ff ff 	lea    rcx,[rbp-0x1f0]
    7918:	48 8d 95 d0 fd ff ff 	lea    rdx,[rbp-0x230]
    791f:	48 8d 85 60 ff ff ff 	lea    rax,[rbp-0xa0]
    7926:	49 89 f0             	mov    r8,rsi
    7929:	48 8d 35 80 6c 00 00 	lea    rsi,[rip+0x6c80]        # e5b0 <_IO_stdin_used+0x15b0>
    7930:	48 89 c7             	mov    rdi,rax
    7933:	b8 00 00 00 00       	mov    eax,0x0
    7938:	e8 c3 ab ff ff       	call   2500 <sprintf@plt>
    793d:	48 8b 95 88 fc ff ff 	mov    rdx,QWORD PTR [rbp-0x378]
    7944:	48 8d 85 60 ff ff ff 	lea    rax,[rbp-0xa0]
    794b:	48 89 d6             	mov    rsi,rdx
    794e:	48 89 c7             	mov    rdi,rax
    7951:	e8 8a ad ff ff       	call   26e0 <fputs@plt>
    7956:	48 8b 85 50 fc ff ff 	mov    rax,QWORD PTR [rbp-0x3b0]
    795d:	48 85 c0             	test   rax,rax
    7960:	74 0f                	je     7971 <nsh_do_login+0x541>
    7962:	48 8b 85 50 fc ff ff 	mov    rax,QWORD PTR [rbp-0x3b0]
    7969:	48 89 c7             	mov    rdi,rax
    796c:	e8 bf ad ff ff       	call   2730 <free@plt>
    7971:	48 8b 85 78 fc ff ff 	mov    rax,QWORD PTR [rbp-0x388]
    7978:	48 89 c7             	mov    rdi,rax
    797b:	e8 40 ad ff ff       	call   26c0 <fclose@plt>
    7980:	48 8b 85 88 fc ff ff 	mov    rax,QWORD PTR [rbp-0x378]
    7987:	48 89 c7             	mov    rdi,rax
    798a:	e8 31 ad ff ff       	call   26c0 <fclose@plt>
    798f:	b8 00 00 00 00       	mov    eax,0x0
    7994:	48 8b 5d e8          	mov    rbx,QWORD PTR [rbp-0x18]
    7998:	64 48 2b 1c 25 28 00 	sub    rbx,QWORD PTR fs:0x28
    799f:	00 00 
    79a1:	74 05                	je     79a8 <nsh_do_login+0x578>
    79a3:	e8 28 ad ff ff       	call   26d0 <__stack_chk_fail@plt>
    79a8:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    79ac:	c9                   	leave  
    79ad:	c3                   	ret    

00000000000079ae <nsh_shell>:
    79ae:	f3 0f 1e fa          	endbr64 
    79b2:	55                   	push   rbp
    79b3:	48 89 e5             	mov    rbp,rsp
    79b6:	53                   	push   rbx
    79b7:	48 83 ec 38          	sub    rsp,0x38
    79bb:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    79bf:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    79c3:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    79c7:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    79cb:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    79cf:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    79d3:	0f b7 c0             	movzx  eax,ax
    79d6:	89 c7                	mov    edi,eax
    79d8:	e8 f3 aa ff ff       	call   24d0 <htons@plt>
    79dd:	0f b7 d8             	movzx  ebx,ax
    79e0:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    79e4:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    79e8:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    79eb:	89 c7                	mov    edi,eax
    79ed:	e8 be ab ff ff       	call   25b0 <inet_ntoa@plt>
    79f2:	89 da                	mov    edx,ebx
    79f4:	48 89 c6             	mov    rsi,rax
    79f7:	48 8d 3d d5 6b 00 00 	lea    rdi,[rip+0x6bd5]        # e5d3 <_IO_stdin_used+0x15d3>
    79fe:	b8 00 00 00 00       	mov    eax,0x0
    7a03:	e8 b8 aa ff ff       	call   24c0 <printf@plt>
    7a08:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7a0c:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    7a10:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    7a13:	89 c7                	mov    edi,eax
    7a15:	e8 96 ab ff ff       	call   25b0 <inet_ntoa@plt>
    7a1a:	48 89 c2             	mov    rdx,rax
    7a1d:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7a21:	8b 00                	mov    eax,DWORD PTR [rax]
    7a23:	48 89 d6             	mov    rsi,rdx
    7a26:	89 c7                	mov    edi,eax
    7a28:	e8 03 fa ff ff       	call   7430 <nsh_do_login>
    7a2d:	83 f0 01             	xor    eax,0x1
    7a30:	84 c0                	test   al,al
    7a32:	74 30                	je     7a64 <nsh_shell+0xb6>
    7a34:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7a38:	8b 00                	mov    eax,DWORD PTR [rax]
    7a3a:	b9 00 00 00 00       	mov    ecx,0x0
    7a3f:	ba 10 00 00 00       	mov    edx,0x10
    7a44:	48 8d 35 a1 6b 00 00 	lea    rsi,[rip+0x6ba1]        # e5ec <_IO_stdin_used+0x15ec>
    7a4b:	89 c7                	mov    edi,eax
    7a4d:	e8 7e ab ff ff       	call   25d0 <send@plt>
    7a52:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7a56:	8b 00                	mov    eax,DWORD PTR [rax]
    7a58:	89 c7                	mov    edi,eax
    7a5a:	e8 b1 ae ff ff       	call   2910 <close@plt>
    7a5f:	e9 ed 00 00 00       	jmp    7b51 <nsh_shell+0x1a3>
    7a64:	48 8d 05 91 6b 00 00 	lea    rax,[rip+0x6b91]        # e5fc <_IO_stdin_used+0x15fc>
    7a6b:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    7a6f:	e9 a5 00 00 00       	jmp    7b19 <nsh_shell+0x16b>
    7a74:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7a78:	48 89 c7             	mov    rdi,rax
    7a7b:	e8 20 ab ff ff       	call   25a0 <strlen@plt>
    7a80:	48 89 c2             	mov    rdx,rax
    7a83:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7a87:	8b 00                	mov    eax,DWORD PTR [rax]
    7a89:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    7a8d:	b9 00 00 00 00       	mov    ecx,0x0
    7a92:	89 c7                	mov    edi,eax
    7a94:	e8 37 ab ff ff       	call   25d0 <send@plt>
    7a99:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    7aa0:	00 00 
    7aa2:	48 05 00 6c fe ff    	add    rax,0xfffffffffffe6c00
    7aa8:	ba 00 04 00 00       	mov    edx,0x400
    7aad:	be 00 00 00 00       	mov    esi,0x0
    7ab2:	48 89 c7             	mov    rdi,rax
    7ab5:	e8 56 ab ff ff       	call   2610 <memset@plt>
    7aba:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7abe:	8b 00                	mov    eax,DWORD PTR [rax]
    7ac0:	64 48 8b 14 25 00 00 	mov    rdx,QWORD PTR fs:0x0
    7ac7:	00 00 
    7ac9:	48 8d 8a 00 6c fe ff 	lea    rcx,[rdx-0x19400]
    7ad0:	ba 00 04 00 00       	mov    edx,0x400
    7ad5:	48 89 ce             	mov    rsi,rcx
    7ad8:	89 c7                	mov    edi,eax
    7ada:	e8 41 ad ff ff       	call   2820 <read@plt>
    7adf:	89 45 dc             	mov    DWORD PTR [rbp-0x24],eax
    7ae2:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    7ae9:	00 00 
    7aeb:	48 05 00 6c fe ff    	add    rax,0xfffffffffffe6c00
    7af1:	48 89 c7             	mov    rdi,rax
    7af4:	e8 73 f7 ff ff       	call   726c <rnstrip>
    7af9:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7afd:	8b 00                	mov    eax,DWORD PTR [rax]
    7aff:	64 48 8b 14 25 00 00 	mov    rdx,QWORD PTR fs:0x0
    7b06:	00 00 
    7b08:	48 81 c2 00 6c fe ff 	add    rdx,0xfffffffffffe6c00
    7b0f:	89 c6                	mov    esi,eax
    7b11:	48 89 d7             	mov    rdi,rdx
    7b14:	e8 8a 00 00 00       	call   7ba3 <nsh_cmd_interpret>
    7b19:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    7b20:	00 00 
    7b22:	48 05 00 6c fe ff    	add    rax,0xfffffffffffe6c00
    7b28:	ba 04 00 00 00       	mov    edx,0x4
    7b2d:	48 8d 35 ce 6a 00 00 	lea    rsi,[rip+0x6ace]        # e602 <_IO_stdin_used+0x1602>
    7b34:	48 89 c7             	mov    rdi,rax
    7b37:	e8 84 aa ff ff       	call   25c0 <strncmp@plt>
    7b3c:	85 c0                	test   eax,eax
    7b3e:	0f 85 30 ff ff ff    	jne    7a74 <nsh_shell+0xc6>
    7b44:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7b48:	8b 00                	mov    eax,DWORD PTR [rax]
    7b4a:	89 c7                	mov    edi,eax
    7b4c:	e8 bf ad ff ff       	call   2910 <close@plt>
    7b51:	b8 01 00 00 00       	mov    eax,0x1
    7b56:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    7b5a:	c9                   	leave  
    7b5b:	c3                   	ret    

0000000000007b5c <vsh_set_int>:
    7b5c:	f3 0f 1e fa          	endbr64 
    7b60:	55                   	push   rbp
    7b61:	48 89 e5             	mov    rbp,rsp
    7b64:	48 83 ec 10          	sub    rsp,0x10
    7b68:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
    7b6b:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7b6f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    7b73:	ba 06 00 00 00       	mov    edx,0x6
    7b78:	48 8d 35 b5 6b 00 00 	lea    rsi,[rip+0x6bb5]        # e734 <_IO_stdin_used+0x1734>
    7b7f:	48 89 c7             	mov    rdi,rax
    7b82:	e8 39 aa ff ff       	call   25c0 <strncmp@plt>
    7b87:	85 c0                	test   eax,eax
    7b89:	75 15                	jne    7ba0 <vsh_set_int+0x44>
    7b8b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    7b8f:	48 8d 50 06          	lea    rdx,[rax+0x6]
    7b93:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7b96:	48 89 d6             	mov    rsi,rdx
    7b99:	89 c7                	mov    edi,eax
    7b9b:	e8 f9 10 00 00       	call   8c99 <set_spi_max>
    7ba0:	90                   	nop
    7ba1:	c9                   	leave  
    7ba2:	c3                   	ret    

0000000000007ba3 <nsh_cmd_interpret>:
    7ba3:	f3 0f 1e fa          	endbr64 
    7ba7:	55                   	push   rbp
    7ba8:	48 89 e5             	mov    rbp,rsp
    7bab:	41 57                	push   r15
    7bad:	41 56                	push   r14
    7baf:	41 55                	push   r13
    7bb1:	41 54                	push   r12
    7bb3:	53                   	push   rbx
    7bb4:	48 83 ec 68          	sub    rsp,0x68
    7bb8:	48 89 bd 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdi
    7bbf:	89 b5 74 ff ff ff    	mov    DWORD PTR [rbp-0x8c],esi
    7bc5:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7bcc:	00 00 
    7bce:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    7bd2:	31 c0                	xor    eax,eax
    7bd4:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7bdb:	48 8d 35 59 6b 00 00 	lea    rsi,[rip+0x6b59]        # e73b <_IO_stdin_used+0x173b>
    7be2:	48 89 c7             	mov    rdi,rax
    7be5:	e8 f6 ab ff ff       	call   27e0 <strcmp@plt>
    7bea:	85 c0                	test   eax,eax
    7bec:	75 23                	jne    7c11 <nsh_cmd_interpret+0x6e>
    7bee:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    7bf4:	b9 00 00 00 00       	mov    ecx,0x0
    7bf9:	ba 07 00 00 00       	mov    edx,0x7
    7bfe:	48 8d 35 40 6b 00 00 	lea    rsi,[rip+0x6b40]        # e745 <_IO_stdin_used+0x1745>
    7c05:	89 c7                	mov    edi,eax
    7c07:	e8 c4 a9 ff ff       	call   25d0 <send@plt>
    7c0c:	e9 85 04 00 00       	jmp    8096 <nsh_cmd_interpret+0x4f3>
    7c11:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7c18:	ba 08 00 00 00       	mov    edx,0x8
    7c1d:	48 8d 35 29 6b 00 00 	lea    rsi,[rip+0x6b29]        # e74d <_IO_stdin_used+0x174d>
    7c24:	48 89 c7             	mov    rdi,rax
    7c27:	e8 94 a9 ff ff       	call   25c0 <strncmp@plt>
    7c2c:	85 c0                	test   eax,eax
    7c2e:	75 0a                	jne    7c3a <nsh_cmd_interpret+0x97>
    7c30:	bf 01 00 00 00       	mov    edi,0x1
    7c35:	e8 06 ab ff ff       	call   2740 <exit@plt>
    7c3a:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7c41:	ba 04 00 00 00       	mov    edx,0x4
    7c46:	48 8d 35 09 6b 00 00 	lea    rsi,[rip+0x6b09]        # e756 <_IO_stdin_used+0x1756>
    7c4d:	48 89 c7             	mov    rdi,rax
    7c50:	e8 6b a9 ff ff       	call   25c0 <strncmp@plt>
    7c55:	85 c0                	test   eax,eax
    7c57:	0f 84 38 04 00 00    	je     8095 <nsh_cmd_interpret+0x4f2>
    7c5d:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7c64:	ba 03 00 00 00       	mov    edx,0x3
    7c69:	48 8d 35 eb 6a 00 00 	lea    rsi,[rip+0x6aeb]        # e75b <_IO_stdin_used+0x175b>
    7c70:	48 89 c7             	mov    rdi,rax
    7c73:	e8 48 a9 ff ff       	call   25c0 <strncmp@plt>
    7c78:	85 c0                	test   eax,eax
    7c7a:	0f 85 e1 01 00 00    	jne    7e61 <nsh_cmd_interpret+0x2be>
    7c80:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7c87:	48 89 c7             	mov    rdi,rax
    7c8a:	e8 11 a9 ff ff       	call   25a0 <strlen@plt>
    7c8f:	48 83 f8 02          	cmp    rax,0x2
    7c93:	77 30                	ja     7cc5 <nsh_cmd_interpret+0x122>
    7c95:	48 8b 05 ac a3 00 00 	mov    rax,QWORD PTR [rip+0xa3ac]        # 12048 <get_cmd_help>
    7c9c:	48 89 c7             	mov    rdi,rax
    7c9f:	e8 fc a8 ff ff       	call   25a0 <strlen@plt>
    7ca4:	48 89 c2             	mov    rdx,rax
    7ca7:	48 8b 35 9a a3 00 00 	mov    rsi,QWORD PTR [rip+0xa39a]        # 12048 <get_cmd_help>
    7cae:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    7cb4:	b9 00 00 00 00       	mov    ecx,0x0
    7cb9:	89 c7                	mov    edi,eax
    7cbb:	e8 10 a9 ff ff       	call   25d0 <send@plt>
    7cc0:	e9 d1 03 00 00       	jmp    8096 <nsh_cmd_interpret+0x4f3>
    7cc5:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7ccc:	48 83 c0 04          	add    rax,0x4
    7cd0:	ba 09 00 00 00       	mov    edx,0x9
    7cd5:	48 8d 35 83 6a 00 00 	lea    rsi,[rip+0x6a83]        # e75f <_IO_stdin_used+0x175f>
    7cdc:	48 89 c7             	mov    rdi,rax
    7cdf:	e8 dc a8 ff ff       	call   25c0 <strncmp@plt>
    7ce4:	85 c0                	test   eax,eax
    7ce6:	75 14                	jne    7cfc <nsh_cmd_interpret+0x159>
    7ce8:	48 8d 85 74 ff ff ff 	lea    rax,[rbp-0x8c]
    7cef:	48 89 c7             	mov    rdi,rax
    7cf2:	e8 c2 03 00 00       	call   80b9 <send_blacklist>
    7cf7:	e9 9a 03 00 00       	jmp    8096 <nsh_cmd_interpret+0x4f3>
    7cfc:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7d03:	48 83 c0 04          	add    rax,0x4
    7d07:	48 8d 35 5b 6a 00 00 	lea    rsi,[rip+0x6a5b]        # e769 <_IO_stdin_used+0x1769>
    7d0e:	48 89 c7             	mov    rdi,rax
    7d11:	e8 ca aa ff ff       	call   27e0 <strcmp@plt>
    7d16:	85 c0                	test   eax,eax
    7d18:	75 14                	jne    7d2e <nsh_cmd_interpret+0x18b>
    7d1a:	48 8d 85 74 ff ff ff 	lea    rax,[rbp-0x8c]
    7d21:	48 89 c7             	mov    rdi,rax
    7d24:	e8 46 06 00 00       	call   836f <get_loaded_rules>
    7d29:	e9 68 03 00 00       	jmp    8096 <nsh_cmd_interpret+0x4f3>
    7d2e:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7d35:	48 83 c0 04          	add    rax,0x4
    7d39:	48 89 c2             	mov    rdx,rax
    7d3c:	48 8d 05 2c 6a 00 00 	lea    rax,[rip+0x6a2c]        # e76f <_IO_stdin_used+0x176f>
    7d43:	b9 08 00 00 00       	mov    ecx,0x8
    7d48:	48 89 d6             	mov    rsi,rdx
    7d4b:	48 89 c7             	mov    rdi,rax
    7d4e:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    7d50:	0f 97 c0             	seta   al
    7d53:	0f 92 c2             	setb   dl
    7d56:	29 d0                	sub    eax,edx
    7d58:	0f be c0             	movsx  eax,al
    7d5b:	85 c0                	test   eax,eax
    7d5d:	75 22                	jne    7d81 <nsh_cmd_interpret+0x1de>
    7d5f:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7d66:	48 8d 50 0c          	lea    rdx,[rax+0xc]
    7d6a:	48 8d 85 74 ff ff ff 	lea    rax,[rbp-0x8c]
    7d71:	48 89 d6             	mov    rsi,rdx
    7d74:	48 89 c7             	mov    rdi,rax
    7d77:	e8 01 0a 00 00       	call   877d <get_rule_matches>
    7d7c:	e9 15 03 00 00       	jmp    8096 <nsh_cmd_interpret+0x4f3>
    7d81:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7d88:	48 83 c0 04          	add    rax,0x4
    7d8c:	48 89 c2             	mov    rdx,rax
    7d8f:	48 8d 05 e1 69 00 00 	lea    rax,[rip+0x69e1]        # e777 <_IO_stdin_used+0x1777>
    7d96:	b9 08 00 00 00       	mov    ecx,0x8
    7d9b:	48 89 d6             	mov    rsi,rdx
    7d9e:	48 89 c7             	mov    rdi,rax
    7da1:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    7da3:	0f 97 c0             	seta   al
    7da6:	0f 92 c2             	setb   dl
    7da9:	29 d0                	sub    eax,edx
    7dab:	0f be c0             	movsx  eax,al
    7dae:	85 c0                	test   eax,eax
    7db0:	75 48                	jne    7dfa <nsh_cmd_interpret+0x257>
    7db2:	8b 15 ec a4 00 00    	mov    edx,DWORD PTR [rip+0xa4ec]        # 122a4 <total_pkt_captured>
    7db8:	48 8d 45 a0          	lea    rax,[rbp-0x60]
    7dbc:	48 8d 35 bc 69 00 00 	lea    rsi,[rip+0x69bc]        # e77f <_IO_stdin_used+0x177f>
    7dc3:	48 89 c7             	mov    rdi,rax
    7dc6:	b8 00 00 00 00       	mov    eax,0x0
    7dcb:	e8 30 a7 ff ff       	call   2500 <sprintf@plt>
    7dd0:	48 8d 45 a0          	lea    rax,[rbp-0x60]
    7dd4:	48 89 c7             	mov    rdi,rax
    7dd7:	e8 c4 a7 ff ff       	call   25a0 <strlen@plt>
    7ddc:	48 89 c2             	mov    rdx,rax
    7ddf:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    7de5:	48 8d 75 a0          	lea    rsi,[rbp-0x60]
    7de9:	b9 00 00 00 00       	mov    ecx,0x0
    7dee:	89 c7                	mov    edi,eax
    7df0:	e8 db a7 ff ff       	call   25d0 <send@plt>
    7df5:	e9 9c 02 00 00       	jmp    8096 <nsh_cmd_interpret+0x4f3>
    7dfa:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7e01:	48 83 c0 04          	add    rax,0x4
    7e05:	ba 03 00 00 00       	mov    edx,0x3
    7e0a:	48 8d 35 89 69 00 00 	lea    rsi,[rip+0x6989]        # e79a <_IO_stdin_used+0x179a>
    7e11:	48 89 c7             	mov    rdi,rax
    7e14:	e8 a7 a7 ff ff       	call   25c0 <strncmp@plt>
    7e19:	85 c0                	test   eax,eax
    7e1b:	75 14                	jne    7e31 <nsh_cmd_interpret+0x28e>
    7e1d:	48 8d 85 74 ff ff ff 	lea    rax,[rbp-0x8c]
    7e24:	48 89 c7             	mov    rdi,rax
    7e27:	e8 c2 0c 00 00       	call   8aee <get_arp_cache>
    7e2c:	e9 65 02 00 00       	jmp    8096 <nsh_cmd_interpret+0x4f3>
    7e31:	48 8b 05 10 a2 00 00 	mov    rax,QWORD PTR [rip+0xa210]        # 12048 <get_cmd_help>
    7e38:	48 89 c7             	mov    rdi,rax
    7e3b:	e8 60 a7 ff ff       	call   25a0 <strlen@plt>
    7e40:	48 89 c2             	mov    rdx,rax
    7e43:	48 8b 35 fe a1 00 00 	mov    rsi,QWORD PTR [rip+0xa1fe]        # 12048 <get_cmd_help>
    7e4a:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    7e50:	b9 00 00 00 00       	mov    ecx,0x0
    7e55:	89 c7                	mov    edi,eax
    7e57:	e8 74 a7 ff ff       	call   25d0 <send@plt>
    7e5c:	e9 35 02 00 00       	jmp    8096 <nsh_cmd_interpret+0x4f3>
    7e61:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7e68:	ba 03 00 00 00       	mov    edx,0x3
    7e6d:	48 8d 35 2a 69 00 00 	lea    rsi,[rip+0x692a]        # e79e <_IO_stdin_used+0x179e>
    7e74:	48 89 c7             	mov    rdi,rax
    7e77:	e8 44 a7 ff ff       	call   25c0 <strncmp@plt>
    7e7c:	85 c0                	test   eax,eax
    7e7e:	0f 85 d3 00 00 00    	jne    7f57 <nsh_cmd_interpret+0x3b4>
    7e84:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7e8b:	48 89 c7             	mov    rdi,rax
    7e8e:	e8 0d a7 ff ff       	call   25a0 <strlen@plt>
    7e93:	48 83 f8 03          	cmp    rax,0x3
    7e97:	77 30                	ja     7ec9 <nsh_cmd_interpret+0x326>
    7e99:	48 8b 05 b0 a1 00 00 	mov    rax,QWORD PTR [rip+0xa1b0]        # 12050 <add_cmd_help>
    7ea0:	48 89 c7             	mov    rdi,rax
    7ea3:	e8 f8 a6 ff ff       	call   25a0 <strlen@plt>
    7ea8:	48 89 c2             	mov    rdx,rax
    7eab:	48 8b 35 9e a1 00 00 	mov    rsi,QWORD PTR [rip+0xa19e]        # 12050 <add_cmd_help>
    7eb2:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    7eb8:	b9 00 00 00 00       	mov    ecx,0x0
    7ebd:	89 c7                	mov    edi,eax
    7ebf:	e8 0c a7 ff ff       	call   25d0 <send@plt>
    7ec4:	e9 cd 01 00 00       	jmp    8096 <nsh_cmd_interpret+0x4f3>
    7ec9:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7ed0:	48 83 c0 04          	add    rax,0x4
    7ed4:	ba 09 00 00 00       	mov    edx,0x9
    7ed9:	48 8d 35 7f 68 00 00 	lea    rsi,[rip+0x687f]        # e75f <_IO_stdin_used+0x175f>
    7ee0:	48 89 c7             	mov    rdi,rax
    7ee3:	e8 d8 a6 ff ff       	call   25c0 <strncmp@plt>
    7ee8:	85 c0                	test   eax,eax
    7eea:	75 22                	jne    7f0e <nsh_cmd_interpret+0x36b>
    7eec:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7ef3:	48 8d 50 04          	lea    rdx,[rax+0x4]
    7ef7:	48 8d 85 74 ff ff ff 	lea    rax,[rbp-0x8c]
    7efe:	48 89 d6             	mov    rsi,rdx
    7f01:	48 89 c7             	mov    rdi,rax
    7f04:	e8 54 03 00 00       	call   825d <add_to_blacklist>
    7f09:	e9 88 01 00 00       	jmp    8096 <nsh_cmd_interpret+0x4f3>
    7f0e:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7f15:	48 83 c0 04          	add    rax,0x4
    7f19:	ba 04 00 00 00       	mov    edx,0x4
    7f1e:	48 8d 35 7d 68 00 00 	lea    rsi,[rip+0x687d]        # e7a2 <_IO_stdin_used+0x17a2>
    7f25:	48 89 c7             	mov    rdi,rax
    7f28:	e8 93 a6 ff ff       	call   25c0 <strncmp@plt>
    7f2d:	85 c0                	test   eax,eax
    7f2f:	0f 85 61 01 00 00    	jne    8096 <nsh_cmd_interpret+0x4f3>
    7f35:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7f3c:	48 8d 50 08          	lea    rdx,[rax+0x8]
    7f40:	48 8d 85 74 ff ff ff 	lea    rax,[rbp-0x8c]
    7f47:	48 89 d6             	mov    rsi,rdx
    7f4a:	48 89 c7             	mov    rdi,rax
    7f4d:	e8 f6 06 00 00       	call   8648 <load_new_rule>
    7f52:	e9 3f 01 00 00       	jmp    8096 <nsh_cmd_interpret+0x4f3>
    7f57:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7f5e:	ba 03 00 00 00       	mov    edx,0x3
    7f63:	48 8d 35 3d 68 00 00 	lea    rsi,[rip+0x683d]        # e7a7 <_IO_stdin_used+0x17a7>
    7f6a:	48 89 c7             	mov    rdi,rax
    7f6d:	e8 4e a6 ff ff       	call   25c0 <strncmp@plt>
    7f72:	85 c0                	test   eax,eax
    7f74:	75 20                	jne    7f96 <nsh_cmd_interpret+0x3f3>
    7f76:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7f7d:	48 8d 50 04          	lea    rdx,[rax+0x4]
    7f81:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    7f87:	48 89 d6             	mov    rsi,rdx
    7f8a:	89 c7                	mov    edi,eax
    7f8c:	e8 cb fb ff ff       	call   7b5c <vsh_set_int>
    7f91:	e9 00 01 00 00       	jmp    8096 <nsh_cmd_interpret+0x4f3>
    7f96:	48 89 e0             	mov    rax,rsp
    7f99:	48 89 c3             	mov    rbx,rax
    7f9c:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7fa3:	48 89 c7             	mov    rdi,rax
    7fa6:	e8 f5 a5 ff ff       	call   25a0 <strlen@plt>
    7fab:	83 c0 1c             	add    eax,0x1c
    7fae:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    7fb1:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
    7fb4:	83 c0 02             	add    eax,0x2
    7fb7:	48 63 d0             	movsxd rdx,eax
    7fba:	48 83 ea 01          	sub    rdx,0x1
    7fbe:	48 89 55 90          	mov    QWORD PTR [rbp-0x70],rdx
    7fc2:	48 63 d0             	movsxd rdx,eax
    7fc5:	49 89 d6             	mov    r14,rdx
    7fc8:	41 bf 00 00 00 00    	mov    r15d,0x0
    7fce:	48 63 d0             	movsxd rdx,eax
    7fd1:	49 89 d4             	mov    r12,rdx
    7fd4:	41 bd 00 00 00 00    	mov    r13d,0x0
    7fda:	48 98                	cdqe   
    7fdc:	ba 10 00 00 00       	mov    edx,0x10
    7fe1:	48 83 ea 01          	sub    rdx,0x1
    7fe5:	48 01 d0             	add    rax,rdx
    7fe8:	b9 10 00 00 00       	mov    ecx,0x10
    7fed:	ba 00 00 00 00       	mov    edx,0x0
    7ff2:	48 f7 f1             	div    rcx
    7ff5:	48 6b c0 10          	imul   rax,rax,0x10
    7ff9:	48 89 c1             	mov    rcx,rax
    7ffc:	48 81 e1 00 f0 ff ff 	and    rcx,0xfffffffffffff000
    8003:	48 89 e2             	mov    rdx,rsp
    8006:	48 29 ca             	sub    rdx,rcx
    8009:	48 39 d4             	cmp    rsp,rdx
    800c:	74 12                	je     8020 <nsh_cmd_interpret+0x47d>
    800e:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    8015:	48 83 8c 24 f8 0f 00 	or     QWORD PTR [rsp+0xff8],0x0
    801c:	00 00 
    801e:	eb e9                	jmp    8009 <nsh_cmd_interpret+0x466>
    8020:	48 89 c2             	mov    rdx,rax
    8023:	81 e2 ff 0f 00 00    	and    edx,0xfff
    8029:	48 29 d4             	sub    rsp,rdx
    802c:	48 89 c2             	mov    rdx,rax
    802f:	81 e2 ff 0f 00 00    	and    edx,0xfff
    8035:	48 85 d2             	test   rdx,rdx
    8038:	74 10                	je     804a <nsh_cmd_interpret+0x4a7>
    803a:	25 ff 0f 00 00       	and    eax,0xfff
    803f:	48 83 e8 08          	sub    rax,0x8
    8043:	48 01 e0             	add    rax,rsp
    8046:	48 83 08 00          	or     QWORD PTR [rax],0x0
    804a:	48 89 e0             	mov    rax,rsp
    804d:	48 83 c0 00          	add    rax,0x0
    8051:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
    8055:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
    805c:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    8060:	48 8d 35 49 67 00 00 	lea    rsi,[rip+0x6749]        # e7b0 <_IO_stdin_used+0x17b0>
    8067:	48 89 c7             	mov    rdi,rax
    806a:	b8 00 00 00 00       	mov    eax,0x0
    806f:	e8 8c a4 ff ff       	call   2500 <sprintf@plt>
    8074:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
    8077:	48 63 d0             	movsxd rdx,eax
    807a:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    8080:	48 8b 75 98          	mov    rsi,QWORD PTR [rbp-0x68]
    8084:	b9 00 00 00 00       	mov    ecx,0x0
    8089:	89 c7                	mov    edi,eax
    808b:	e8 40 a5 ff ff       	call   25d0 <send@plt>
    8090:	48 89 dc             	mov    rsp,rbx
    8093:	eb 01                	jmp    8096 <nsh_cmd_interpret+0x4f3>
    8095:	90                   	nop
    8096:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    809a:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    80a1:	00 00 
    80a3:	74 05                	je     80aa <nsh_cmd_interpret+0x507>
    80a5:	e8 26 a6 ff ff       	call   26d0 <__stack_chk_fail@plt>
    80aa:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    80ae:	5b                   	pop    rbx
    80af:	41 5c                	pop    r12
    80b1:	41 5d                	pop    r13
    80b3:	41 5e                	pop    r14
    80b5:	41 5f                	pop    r15
    80b7:	5d                   	pop    rbp
    80b8:	c3                   	ret    

00000000000080b9 <send_blacklist>:
    80b9:	f3 0f 1e fa          	endbr64 
    80bd:	55                   	push   rbp
    80be:	48 89 e5             	mov    rbp,rsp
    80c1:	48 83 ec 20          	sub    rsp,0x20
    80c5:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    80c9:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    80d0:	00 00 
    80d2:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    80d8:	ba 00 90 01 00       	mov    edx,0x19000
    80dd:	be 00 00 00 00       	mov    esi,0x0
    80e2:	48 89 c7             	mov    rdi,rax
    80e5:	e8 26 a5 ff ff       	call   2610 <memset@plt>
    80ea:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    80f1:	00 00 
    80f3:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    80f9:	48 89 c7             	mov    rdi,rax
    80fc:	e8 9f a4 ff ff       	call   25a0 <strlen@plt>
    8101:	48 89 c2             	mov    rdx,rax
    8104:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    810b:	00 00 
    810d:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8113:	48 01 d0             	add    rax,rdx
    8116:	48 be 42 6c 61 63 6b 	movabs rsi,0x73696c6b63616c42
    811d:	6c 69 73 
    8120:	48 bf 74 20 66 6f 72 	movabs rdi,0x736e20726f662074
    8127:	20 6e 73 
    812a:	48 89 30             	mov    QWORD PTR [rax],rsi
    812d:	48 89 78 08          	mov    QWORD PTR [rax+0x8],rdi
    8131:	48 b9 68 20 73 65 72 	movabs rcx,0x7265767265732068
    8138:	76 65 72 
    813b:	48 89 48 10          	mov    QWORD PTR [rax+0x10],rcx
    813f:	c7 40 18 3a 0a 09 00 	mov    DWORD PTR [rax+0x18],0x90a3a
    8146:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    814d:	e9 88 00 00 00       	jmp    81da <send_blacklist+0x121>
    8152:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8155:	48 63 d0             	movsxd rdx,eax
    8158:	48 89 d0             	mov    rax,rdx
    815b:	48 c1 e0 03          	shl    rax,0x3
    815f:	48 01 d0             	add    rax,rdx
    8162:	48 01 c0             	add    rax,rax
    8165:	48 8d 15 74 c1 0e 00 	lea    rdx,[rip+0xec174]        # f42e0 <blocked_ipv4_addrs>
    816c:	48 01 d0             	add    rax,rdx
    816f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8173:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8177:	48 89 c7             	mov    rdi,rax
    817a:	e8 21 a4 ff ff       	call   25a0 <strlen@plt>
    817f:	48 89 c2             	mov    rdx,rax
    8182:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8186:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    818d:	00 00 
    818f:	48 81 c1 00 70 fe ff 	add    rcx,0xfffffffffffe7000
    8196:	48 89 c6             	mov    rsi,rax
    8199:	48 89 cf             	mov    rdi,rcx
    819c:	e8 7f a4 ff ff       	call   2620 <strncat@plt>
    81a1:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    81a8:	00 00 
    81aa:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    81b0:	48 89 c7             	mov    rdi,rax
    81b3:	e8 e8 a3 ff ff       	call   25a0 <strlen@plt>
    81b8:	48 89 c2             	mov    rdx,rax
    81bb:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    81c2:	00 00 
    81c4:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    81ca:	48 01 d0             	add    rax,rdx
    81cd:	66 c7 00 0a 09       	mov    WORD PTR [rax],0x90a
    81d2:	c6 40 02 00          	mov    BYTE PTR [rax+0x2],0x0
    81d6:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    81da:	8b 05 30 9e 00 00    	mov    eax,DWORD PTR [rip+0x9e30]        # 12010 <blk_ipv4_len>
    81e0:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    81e3:	0f 8e 69 ff ff ff    	jle    8152 <send_blacklist+0x99>
    81e9:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    81f0:	00 00 
    81f2:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    81f8:	48 89 c7             	mov    rdi,rax
    81fb:	e8 a0 a3 ff ff       	call   25a0 <strlen@plt>
    8200:	48 89 c2             	mov    rdx,rax
    8203:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    820a:	00 00 
    820c:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8212:	48 01 d0             	add    rax,rdx
    8215:	66 c7 00 0d 0a       	mov    WORD PTR [rax],0xa0d
    821a:	c6 40 02 00          	mov    BYTE PTR [rax+0x2],0x0
    821e:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8225:	00 00 
    8227:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    822d:	48 89 c7             	mov    rdi,rax
    8230:	e8 6b a3 ff ff       	call   25a0 <strlen@plt>
    8235:	48 89 c2             	mov    rdx,rax
    8238:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    823c:	8b 00                	mov    eax,DWORD PTR [rax]
    823e:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    8245:	00 00 
    8247:	48 8d b1 00 70 fe ff 	lea    rsi,[rcx-0x19000]
    824e:	b9 00 00 00 00       	mov    ecx,0x0
    8253:	89 c7                	mov    edi,eax
    8255:	e8 76 a3 ff ff       	call   25d0 <send@plt>
    825a:	90                   	nop
    825b:	c9                   	leave  
    825c:	c3                   	ret    

000000000000825d <add_to_blacklist>:
    825d:	f3 0f 1e fa          	endbr64 
    8261:	55                   	push   rbp
    8262:	48 89 e5             	mov    rbp,rsp
    8265:	48 83 ec 50          	sub    rsp,0x50
    8269:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    826d:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
    8271:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8278:	00 00 
    827a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    827e:	31 c0                	xor    eax,eax
    8280:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8287:	00 00 
    8289:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    828f:	ba 00 90 01 00       	mov    edx,0x19000
    8294:	be 00 00 00 00       	mov    esi,0x0
    8299:	48 89 c7             	mov    rdi,rax
    829c:	e8 6f a3 ff ff       	call   2610 <memset@plt>
    82a1:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    82a5:	48 83 c0 0a          	add    rax,0xa
    82a9:	ba 04 00 00 00       	mov    edx,0x4
    82ae:	48 8d 35 1a 65 00 00 	lea    rsi,[rip+0x651a]        # e7cf <_IO_stdin_used+0x17cf>
    82b5:	48 89 c7             	mov    rdi,rax
    82b8:	e8 03 a3 ff ff       	call   25c0 <strncmp@plt>
    82bd:	85 c0                	test   eax,eax
    82bf:	0f 85 93 00 00 00    	jne    8358 <add_to_blacklist+0xfb>
    82c5:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    82c9:	48 83 c0 0f          	add    rax,0xf
    82cd:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    82d1:	8b 05 39 9d 00 00    	mov    eax,DWORD PTR [rip+0x9d39]        # 12010 <blk_ipv4_len>
    82d7:	83 c0 01             	add    eax,0x1
    82da:	89 05 30 9d 00 00    	mov    DWORD PTR [rip+0x9d30],eax        # 12010 <blk_ipv4_len>
    82e0:	8b 05 2a 9d 00 00    	mov    eax,DWORD PTR [rip+0x9d2a]        # 12010 <blk_ipv4_len>
    82e6:	48 63 d0             	movsxd rdx,eax
    82e9:	48 89 d0             	mov    rax,rdx
    82ec:	48 c1 e0 03          	shl    rax,0x3
    82f0:	48 01 d0             	add    rax,rdx
    82f3:	48 01 c0             	add    rax,rax
    82f6:	48 8d 15 e3 bf 0e 00 	lea    rdx,[rip+0xebfe3]        # f42e0 <blocked_ipv4_addrs>
    82fd:	48 01 d0             	add    rax,rdx
    8300:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    8304:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    8308:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
    830c:	48 89 d6             	mov    rsi,rdx
    830f:	48 89 c7             	mov    rdi,rax
    8312:	e8 89 a3 ff ff       	call   26a0 <strcpy@plt>
    8317:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
    831b:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    831f:	48 8d 35 ae 64 00 00 	lea    rsi,[rip+0x64ae]        # e7d4 <_IO_stdin_used+0x17d4>
    8326:	48 89 c7             	mov    rdi,rax
    8329:	b8 00 00 00 00       	mov    eax,0x0
    832e:	e8 cd a1 ff ff       	call   2500 <sprintf@plt>
    8333:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    8337:	48 89 c7             	mov    rdi,rax
    833a:	e8 61 a2 ff ff       	call   25a0 <strlen@plt>
    833f:	48 89 c2             	mov    rdx,rax
    8342:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    8346:	8b 00                	mov    eax,DWORD PTR [rax]
    8348:	48 8d 75 d0          	lea    rsi,[rbp-0x30]
    834c:	b9 00 00 00 00       	mov    ecx,0x0
    8351:	89 c7                	mov    edi,eax
    8353:	e8 78 a2 ff ff       	call   25d0 <send@plt>
    8358:	90                   	nop
    8359:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    835d:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    8364:	00 00 
    8366:	74 05                	je     836d <add_to_blacklist+0x110>
    8368:	e8 63 a3 ff ff       	call   26d0 <__stack_chk_fail@plt>
    836d:	c9                   	leave  
    836e:	c3                   	ret    

000000000000836f <get_loaded_rules>:
    836f:	f3 0f 1e fa          	endbr64 
    8373:	55                   	push   rbp
    8374:	48 89 e5             	mov    rbp,rsp
    8377:	53                   	push   rbx
    8378:	48 81 ec f8 00 00 00 	sub    rsp,0xf8
    837f:	48 89 bd 08 ff ff ff 	mov    QWORD PTR [rbp-0xf8],rdi
    8386:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    838d:	00 00 
    838f:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    8393:	31 c0                	xor    eax,eax
    8395:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    839c:	00 00 
    839e:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    83a4:	ba 00 90 01 00       	mov    edx,0x19000
    83a9:	be 00 00 00 00       	mov    esi,0x0
    83ae:	48 89 c7             	mov    rdi,rax
    83b1:	e8 5a a2 ff ff       	call   2610 <memset@plt>
    83b6:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    83bd:	00 00 
    83bf:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    83c5:	48 89 c7             	mov    rdi,rax
    83c8:	e8 d3 a1 ff ff       	call   25a0 <strlen@plt>
    83cd:	48 89 c2             	mov    rdx,rax
    83d0:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    83d7:	00 00 
    83d9:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    83df:	48 01 d0             	add    rax,rdx
    83e2:	48 bb 4c 6f 61 64 65 	movabs rbx,0x7220646564616f4c
    83e9:	64 20 72 
    83ec:	48 be 75 6c 65 73 20 	movabs rsi,0x726f662073656c75
    83f3:	66 6f 72 
    83f6:	48 89 18             	mov    QWORD PTR [rax],rbx
    83f9:	48 89 70 08          	mov    QWORD PTR [rax+0x8],rsi
    83fd:	48 bb 20 56 49 47 49 	movabs rbx,0x49204c4947495620
    8404:	4c 20 49 
    8407:	48 89 58 10          	mov    QWORD PTR [rax+0x10],rbx
    840b:	c7 40 18 44 53 3a 0a 	mov    DWORD PTR [rax+0x18],0xa3a5344
    8412:	66 c7 40 1c 09 00    	mov    WORD PTR [rax+0x1c],0x9
    8418:	c7 85 14 ff ff ff 00 	mov    DWORD PTR [rbp-0xec],0x0
    841f:	00 00 00 
    8422:	e9 80 01 00 00       	jmp    85a7 <get_loaded_rules+0x238>
    8427:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    842d:	8d 50 01             	lea    edx,[rax+0x1]
    8430:	89 95 14 ff ff ff    	mov    DWORD PTR [rbp-0xec],edx
    8436:	48 98                	cdqe   
    8438:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    843f:	48 8d 15 9a 9e 00 00 	lea    rdx,[rip+0x9e9a]        # 122e0 <rules>
    8446:	48 01 d0             	add    rax,rdx
    8449:	48 89 85 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rax
    8450:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    8457:	48 83 c0 20          	add    rax,0x20
    845b:	48 89 c7             	mov    rdi,rax
    845e:	e8 3d a1 ff ff       	call   25a0 <strlen@plt>
    8463:	48 89 c2             	mov    rdx,rax
    8466:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    846d:	48 8d 48 20          	lea    rcx,[rax+0x20]
    8471:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8478:	00 00 
    847a:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8480:	48 89 ce             	mov    rsi,rcx
    8483:	48 89 c7             	mov    rdi,rax
    8486:	e8 95 a1 ff ff       	call   2620 <strncat@plt>
    848b:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    8492:	8b 88 40 01 00 00    	mov    ecx,DWORD PTR [rax+0x140]
    8498:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    849f:	8b 90 44 01 00 00    	mov    edx,DWORD PTR [rax+0x144]
    84a5:	48 8d 85 20 ff ff ff 	lea    rax,[rbp-0xe0]
    84ac:	48 8d 35 39 63 00 00 	lea    rsi,[rip+0x6339]        # e7ec <_IO_stdin_used+0x17ec>
    84b3:	48 89 c7             	mov    rdi,rax
    84b6:	b8 00 00 00 00       	mov    eax,0x0
    84bb:	e8 40 a0 ff ff       	call   2500 <sprintf@plt>
    84c0:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    84c7:	0f b6 80 90 02 00 00 	movzx  eax,BYTE PTR [rax+0x290]
    84ce:	84 c0                	test   al,al
    84d0:	74 40                	je     8512 <get_loaded_rules+0x1a3>
    84d2:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    84d9:	48 8d 98 10 02 00 00 	lea    rbx,[rax+0x210]
    84e0:	48 8d 85 20 ff ff ff 	lea    rax,[rbp-0xe0]
    84e7:	48 89 c7             	mov    rdi,rax
    84ea:	e8 b1 a0 ff ff       	call   25a0 <strlen@plt>
    84ef:	48 8d 95 20 ff ff ff 	lea    rdx,[rbp-0xe0]
    84f6:	48 01 d0             	add    rax,rdx
    84f9:	48 89 da             	mov    rdx,rbx
    84fc:	48 8d 35 fb 62 00 00 	lea    rsi,[rip+0x62fb]        # e7fe <_IO_stdin_used+0x17fe>
    8503:	48 89 c7             	mov    rdi,rax
    8506:	b8 00 00 00 00       	mov    eax,0x0
    850b:	e8 f0 9f ff ff       	call   2500 <sprintf@plt>
    8510:	eb 3e                	jmp    8550 <get_loaded_rules+0x1e1>
    8512:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    8519:	48 8d 98 c8 02 00 00 	lea    rbx,[rax+0x2c8]
    8520:	48 8d 85 20 ff ff ff 	lea    rax,[rbp-0xe0]
    8527:	48 89 c7             	mov    rdi,rax
    852a:	e8 71 a0 ff ff       	call   25a0 <strlen@plt>
    852f:	48 8d 95 20 ff ff ff 	lea    rdx,[rbp-0xe0]
    8536:	48 01 d0             	add    rax,rdx
    8539:	48 89 da             	mov    rdx,rbx
    853c:	48 8d 35 bb 62 00 00 	lea    rsi,[rip+0x62bb]        # e7fe <_IO_stdin_used+0x17fe>
    8543:	48 89 c7             	mov    rdi,rax
    8546:	b8 00 00 00 00       	mov    eax,0x0
    854b:	e8 b0 9f ff ff       	call   2500 <sprintf@plt>
    8550:	48 8d 85 20 ff ff ff 	lea    rax,[rbp-0xe0]
    8557:	64 48 8b 14 25 00 00 	mov    rdx,QWORD PTR fs:0x0
    855e:	00 00 
    8560:	48 81 c2 00 70 fe ff 	add    rdx,0xfffffffffffe7000
    8567:	48 89 c6             	mov    rsi,rax
    856a:	48 89 d7             	mov    rdi,rdx
    856d:	e8 5e a3 ff ff       	call   28d0 <strcat@plt>
    8572:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8579:	00 00 
    857b:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8581:	48 89 c7             	mov    rdi,rax
    8584:	e8 17 a0 ff ff       	call   25a0 <strlen@plt>
    8589:	48 89 c2             	mov    rdx,rax
    858c:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8593:	00 00 
    8595:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    859b:	48 01 d0             	add    rax,rdx
    859e:	66 c7 00 0a 09       	mov    WORD PTR [rax],0x90a
    85a3:	c6 40 02 00          	mov    BYTE PTR [rax+0x2],0x0
    85a7:	8b 05 67 9a 00 00    	mov    eax,DWORD PTR [rip+0x9a67]        # 12014 <num_rules>
    85ad:	39 85 14 ff ff ff    	cmp    DWORD PTR [rbp-0xec],eax
    85b3:	0f 8e 6e fe ff ff    	jle    8427 <get_loaded_rules+0xb8>
    85b9:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    85c0:	00 00 
    85c2:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    85c8:	48 89 c7             	mov    rdi,rax
    85cb:	e8 d0 9f ff ff       	call   25a0 <strlen@plt>
    85d0:	48 89 c2             	mov    rdx,rax
    85d3:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    85da:	00 00 
    85dc:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    85e2:	48 01 d0             	add    rax,rdx
    85e5:	66 c7 00 0d 0a       	mov    WORD PTR [rax],0xa0d
    85ea:	c6 40 02 00          	mov    BYTE PTR [rax+0x2],0x0
    85ee:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    85f5:	00 00 
    85f7:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    85fd:	48 89 c7             	mov    rdi,rax
    8600:	e8 9b 9f ff ff       	call   25a0 <strlen@plt>
    8605:	48 89 c2             	mov    rdx,rax
    8608:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    860f:	8b 00                	mov    eax,DWORD PTR [rax]
    8611:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    8618:	00 00 
    861a:	48 8d b1 00 70 fe ff 	lea    rsi,[rcx-0x19000]
    8621:	b9 00 00 00 00       	mov    ecx,0x0
    8626:	89 c7                	mov    edi,eax
    8628:	e8 a3 9f ff ff       	call   25d0 <send@plt>
    862d:	90                   	nop
    862e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8632:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    8639:	00 00 
    863b:	74 05                	je     8642 <get_loaded_rules+0x2d3>
    863d:	e8 8e a0 ff ff       	call   26d0 <__stack_chk_fail@plt>
    8642:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    8646:	c9                   	leave  
    8647:	c3                   	ret    

0000000000008648 <load_new_rule>:
    8648:	f3 0f 1e fa          	endbr64 
    864c:	55                   	push   rbp
    864d:	48 89 e5             	mov    rbp,rsp
    8650:	48 83 ec 20          	sub    rsp,0x20
    8654:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8658:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    865c:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8663:	00 00 
    8665:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    866b:	ba 00 90 01 00       	mov    edx,0x19000
    8670:	be 00 00 00 00       	mov    esi,0x0
    8675:	48 89 c7             	mov    rdi,rax
    8678:	e8 93 9f ff ff       	call   2610 <memset@plt>
    867d:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8681:	48 83 c0 01          	add    rax,0x1
    8685:	48 8d 35 78 61 00 00 	lea    rsi,[rip+0x6178]        # e804 <_IO_stdin_used+0x1804>
    868c:	48 89 c7             	mov    rdi,rax
    868f:	e8 7c a0 ff ff       	call   2710 <fopen@plt>
    8694:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8698:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    869d:	75 69                	jne    8708 <load_new_rule+0xc0>
    869f:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    86a3:	64 48 8b 14 25 00 00 	mov    rdx,QWORD PTR fs:0x0
    86aa:	00 00 
    86ac:	48 8d 8a 00 70 fe ff 	lea    rcx,[rdx-0x19000]
    86b3:	48 89 c2             	mov    rdx,rax
    86b6:	48 8d 35 49 61 00 00 	lea    rsi,[rip+0x6149]        # e806 <_IO_stdin_used+0x1806>
    86bd:	48 89 cf             	mov    rdi,rcx
    86c0:	b8 00 00 00 00       	mov    eax,0x0
    86c5:	e8 36 9e ff ff       	call   2500 <sprintf@plt>
    86ca:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    86d1:	00 00 
    86d3:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    86d9:	48 89 c7             	mov    rdi,rax
    86dc:	e8 bf 9e ff ff       	call   25a0 <strlen@plt>
    86e1:	48 89 c2             	mov    rdx,rax
    86e4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    86e8:	8b 00                	mov    eax,DWORD PTR [rax]
    86ea:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    86f1:	00 00 
    86f3:	48 8d b1 00 70 fe ff 	lea    rsi,[rcx-0x19000]
    86fa:	b9 00 00 00 00       	mov    ecx,0x0
    86ff:	89 c7                	mov    edi,eax
    8701:	e8 ca 9e ff ff       	call   25d0 <send@plt>
    8706:	eb 73                	jmp    877b <load_new_rule+0x133>
    8708:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    870c:	48 89 c7             	mov    rdi,rax
    870f:	e8 4e d9 ff ff       	call   6062 <rule_parser>
    8714:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8718:	64 48 8b 14 25 00 00 	mov    rdx,QWORD PTR fs:0x0
    871f:	00 00 
    8721:	48 8d 8a 00 70 fe ff 	lea    rcx,[rdx-0x19000]
    8728:	48 89 c2             	mov    rdx,rax
    872b:	48 8d 35 ee 60 00 00 	lea    rsi,[rip+0x60ee]        # e820 <_IO_stdin_used+0x1820>
    8732:	48 89 cf             	mov    rdi,rcx
    8735:	b8 00 00 00 00       	mov    eax,0x0
    873a:	e8 c1 9d ff ff       	call   2500 <sprintf@plt>
    873f:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8746:	00 00 
    8748:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    874e:	48 89 c7             	mov    rdi,rax
    8751:	e8 4a 9e ff ff       	call   25a0 <strlen@plt>
    8756:	48 89 c2             	mov    rdx,rax
    8759:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    875d:	8b 00                	mov    eax,DWORD PTR [rax]
    875f:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    8766:	00 00 
    8768:	48 8d b1 00 70 fe ff 	lea    rsi,[rcx-0x19000]
    876f:	b9 00 00 00 00       	mov    ecx,0x0
    8774:	89 c7                	mov    edi,eax
    8776:	e8 55 9e ff ff       	call   25d0 <send@plt>
    877b:	c9                   	leave  
    877c:	c3                   	ret    

000000000000877d <get_rule_matches>:
    877d:	f3 0f 1e fa          	endbr64 
    8781:	55                   	push   rbp
    8782:	48 89 e5             	mov    rbp,rsp
    8785:	48 81 ec 30 01 00 00 	sub    rsp,0x130
    878c:	48 89 bd d8 fe ff ff 	mov    QWORD PTR [rbp-0x128],rdi
    8793:	48 89 b5 d0 fe ff ff 	mov    QWORD PTR [rbp-0x130],rsi
    879a:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    87a1:	00 00 
    87a3:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    87a7:	31 c0                	xor    eax,eax
    87a9:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    87b0:	00 00 
    87b2:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    87b8:	ba 00 90 01 00       	mov    edx,0x19000
    87bd:	be 00 00 00 00       	mov    esi,0x0
    87c2:	48 89 c7             	mov    rdi,rax
    87c5:	e8 46 9e ff ff       	call   2610 <memset@plt>
    87ca:	48 8b 85 d0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x130]
    87d1:	48 89 c7             	mov    rdi,rax
    87d4:	e8 c7 9d ff ff       	call   25a0 <strlen@plt>
    87d9:	48 83 f8 02          	cmp    rax,0x2
    87dd:	0f 86 5b 01 00 00    	jbe    893e <get_rule_matches+0x1c1>
    87e3:	c7 85 e0 fe ff ff 00 	mov    DWORD PTR [rbp-0x120],0x0
    87ea:	00 00 00 
    87ed:	e9 c8 00 00 00       	jmp    88ba <get_rule_matches+0x13d>
    87f2:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    87f8:	48 98                	cdqe   
    87fa:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    8801:	48 8d 50 20          	lea    rdx,[rax+0x20]
    8805:	48 8d 05 d4 9a 00 00 	lea    rax,[rip+0x9ad4]        # 122e0 <rules>
    880c:	48 01 c2             	add    rdx,rax
    880f:	48 8b 85 d0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x130]
    8816:	48 89 c6             	mov    rsi,rax
    8819:	48 89 d7             	mov    rdi,rdx
    881c:	e8 bf 9f ff ff       	call   27e0 <strcmp@plt>
    8821:	85 c0                	test   eax,eax
    8823:	0f 85 8a 00 00 00    	jne    88b3 <get_rule_matches+0x136>
    8829:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    882f:	48 98                	cdqe   
    8831:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    8838:	48 8d 15 dd 9a 00 00 	lea    rdx,[rip+0x9add]        # 1231c <rules+0x3c>
    883f:	8b 14 10             	mov    edx,DWORD PTR [rax+rdx*1]
    8842:	48 8b 85 d0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x130]
    8849:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    8850:	00 00 
    8852:	48 8d b9 00 70 fe ff 	lea    rdi,[rcx-0x19000]
    8859:	89 d1                	mov    ecx,edx
    885b:	48 89 c2             	mov    rdx,rax
    885e:	48 8d 35 d1 5f 00 00 	lea    rsi,[rip+0x5fd1]        # e836 <_IO_stdin_used+0x1836>
    8865:	b8 00 00 00 00       	mov    eax,0x0
    886a:	e8 91 9c ff ff       	call   2500 <sprintf@plt>
    886f:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8876:	00 00 
    8878:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    887e:	48 89 c7             	mov    rdi,rax
    8881:	e8 1a 9d ff ff       	call   25a0 <strlen@plt>
    8886:	48 89 c2             	mov    rdx,rax
    8889:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    8890:	8b 00                	mov    eax,DWORD PTR [rax]
    8892:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    8899:	00 00 
    889b:	48 8d b1 00 70 fe ff 	lea    rsi,[rcx-0x19000]
    88a2:	b9 00 00 00 00       	mov    ecx,0x0
    88a7:	89 c7                	mov    edi,eax
    88a9:	e8 22 9d ff ff       	call   25d0 <send@plt>
    88ae:	e9 25 02 00 00       	jmp    8ad8 <get_rule_matches+0x35b>
    88b3:	83 85 e0 fe ff ff 01 	add    DWORD PTR [rbp-0x120],0x1
    88ba:	8b 05 54 97 00 00    	mov    eax,DWORD PTR [rip+0x9754]        # 12014 <num_rules>
    88c0:	39 85 e0 fe ff ff    	cmp    DWORD PTR [rbp-0x120],eax
    88c6:	0f 8e 26 ff ff ff    	jle    87f2 <get_rule_matches+0x75>
    88cc:	48 8b 85 d0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x130]
    88d3:	64 48 8b 14 25 00 00 	mov    rdx,QWORD PTR fs:0x0
    88da:	00 00 
    88dc:	48 8d 8a 00 70 fe ff 	lea    rcx,[rdx-0x19000]
    88e3:	48 89 c2             	mov    rdx,rax
    88e6:	48 8d 35 63 5f 00 00 	lea    rsi,[rip+0x5f63]        # e850 <_IO_stdin_used+0x1850>
    88ed:	48 89 cf             	mov    rdi,rcx
    88f0:	b8 00 00 00 00       	mov    eax,0x0
    88f5:	e8 06 9c ff ff       	call   2500 <sprintf@plt>
    88fa:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8901:	00 00 
    8903:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8909:	48 89 c7             	mov    rdi,rax
    890c:	e8 8f 9c ff ff       	call   25a0 <strlen@plt>
    8911:	48 89 c2             	mov    rdx,rax
    8914:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    891b:	8b 00                	mov    eax,DWORD PTR [rax]
    891d:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    8924:	00 00 
    8926:	48 8d b1 00 70 fe ff 	lea    rsi,[rcx-0x19000]
    892d:	b9 00 00 00 00       	mov    ecx,0x0
    8932:	89 c7                	mov    edi,eax
    8934:	e8 97 9c ff ff       	call   25d0 <send@plt>
    8939:	e9 9a 01 00 00       	jmp    8ad8 <get_rule_matches+0x35b>
    893e:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8945:	00 00 
    8947:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    894d:	48 89 c7             	mov    rdi,rax
    8950:	e8 4b 9c ff ff       	call   25a0 <strlen@plt>
    8955:	48 89 c2             	mov    rdx,rax
    8958:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    895f:	00 00 
    8961:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8967:	48 01 d0             	add    rax,rdx
    896a:	48 be 52 75 6c 65 73 	movabs rsi,0x6e612073656c7552
    8971:	20 61 6e 
    8974:	48 bf 64 20 74 68 65 	movabs rdi,0x756e206568742064
    897b:	20 6e 75 
    897e:	48 89 30             	mov    QWORD PTR [rax],rsi
    8981:	48 89 78 08          	mov    QWORD PTR [rax+0x8],rdi
    8985:	48 be 6d 62 65 72 20 	movabs rsi,0x20666f207265626d
    898c:	6f 66 20 
    898f:	48 bf 74 69 6d 65 73 	movabs rdi,0x68742073656d6974
    8996:	20 74 68 
    8999:	48 89 70 10          	mov    QWORD PTR [rax+0x10],rsi
    899d:	48 89 78 18          	mov    QWORD PTR [rax+0x18],rdi
    89a1:	48 be 65 79 20 77 65 	movabs rsi,0x2065726577207965
    89a8:	72 65 20 
    89ab:	48 bf 6d 61 74 63 68 	movabs rdi,0x3a6465686374616d
    89b2:	65 64 3a 
    89b5:	48 89 70 20          	mov    QWORD PTR [rax+0x20],rsi
    89b9:	48 89 78 28          	mov    QWORD PTR [rax+0x28],rdi
    89bd:	66 c7 40 30 0a 00    	mov    WORD PTR [rax+0x30],0xa
    89c3:	c7 85 e4 fe ff ff 00 	mov    DWORD PTR [rbp-0x11c],0x0
    89ca:	00 00 00 
    89cd:	e9 80 00 00 00       	jmp    8a52 <get_rule_matches+0x2d5>
    89d2:	8b 85 e4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x11c]
    89d8:	8d 50 01             	lea    edx,[rax+0x1]
    89db:	89 95 e4 fe ff ff    	mov    DWORD PTR [rbp-0x11c],edx
    89e1:	48 98                	cdqe   
    89e3:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    89ea:	48 8d 15 ef 98 00 00 	lea    rdx,[rip+0x98ef]        # 122e0 <rules>
    89f1:	48 01 d0             	add    rax,rdx
    89f4:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
    89fb:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    8a02:	8b 50 3c             	mov    edx,DWORD PTR [rax+0x3c]
    8a05:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    8a0c:	48 8d 70 20          	lea    rsi,[rax+0x20]
    8a10:	48 8d 85 f0 fe ff ff 	lea    rax,[rbp-0x110]
    8a17:	89 d1                	mov    ecx,edx
    8a19:	48 89 f2             	mov    rdx,rsi
    8a1c:	48 8d 35 42 5e 00 00 	lea    rsi,[rip+0x5e42]        # e865 <_IO_stdin_used+0x1865>
    8a23:	48 89 c7             	mov    rdi,rax
    8a26:	b8 00 00 00 00       	mov    eax,0x0
    8a2b:	e8 d0 9a ff ff       	call   2500 <sprintf@plt>
    8a30:	48 8d 85 f0 fe ff ff 	lea    rax,[rbp-0x110]
    8a37:	64 48 8b 14 25 00 00 	mov    rdx,QWORD PTR fs:0x0
    8a3e:	00 00 
    8a40:	48 81 c2 00 70 fe ff 	add    rdx,0xfffffffffffe7000
    8a47:	48 89 c6             	mov    rsi,rax
    8a4a:	48 89 d7             	mov    rdi,rdx
    8a4d:	e8 7e 9e ff ff       	call   28d0 <strcat@plt>
    8a52:	8b 05 bc 95 00 00    	mov    eax,DWORD PTR [rip+0x95bc]        # 12014 <num_rules>
    8a58:	39 85 e4 fe ff ff    	cmp    DWORD PTR [rbp-0x11c],eax
    8a5e:	0f 8e 6e ff ff ff    	jle    89d2 <get_rule_matches+0x255>
    8a64:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8a6b:	00 00 
    8a6d:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8a73:	48 89 c7             	mov    rdi,rax
    8a76:	e8 25 9b ff ff       	call   25a0 <strlen@plt>
    8a7b:	48 89 c2             	mov    rdx,rax
    8a7e:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8a85:	00 00 
    8a87:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8a8d:	48 01 d0             	add    rax,rdx
    8a90:	66 c7 00 0d 0a       	mov    WORD PTR [rax],0xa0d
    8a95:	c6 40 02 00          	mov    BYTE PTR [rax+0x2],0x0
    8a99:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8aa0:	00 00 
    8aa2:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8aa8:	48 89 c7             	mov    rdi,rax
    8aab:	e8 f0 9a ff ff       	call   25a0 <strlen@plt>
    8ab0:	48 89 c2             	mov    rdx,rax
    8ab3:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    8aba:	8b 00                	mov    eax,DWORD PTR [rax]
    8abc:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    8ac3:	00 00 
    8ac5:	48 8d b1 00 70 fe ff 	lea    rsi,[rcx-0x19000]
    8acc:	b9 00 00 00 00       	mov    ecx,0x0
    8ad1:	89 c7                	mov    edi,eax
    8ad3:	e8 f8 9a ff ff       	call   25d0 <send@plt>
    8ad8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8adc:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    8ae3:	00 00 
    8ae5:	74 05                	je     8aec <get_rule_matches+0x36f>
    8ae7:	e8 e4 9b ff ff       	call   26d0 <__stack_chk_fail@plt>
    8aec:	c9                   	leave  
    8aed:	c3                   	ret    

0000000000008aee <get_arp_cache>:
    8aee:	f3 0f 1e fa          	endbr64 
    8af2:	55                   	push   rbp
    8af3:	48 89 e5             	mov    rbp,rsp
    8af6:	48 83 ec 70          	sub    rsp,0x70
    8afa:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    8afe:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8b05:	00 00 
    8b07:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8b0b:	31 c0                	xor    eax,eax
    8b0d:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8b14:	00 00 
    8b16:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8b1c:	ba 00 90 01 00       	mov    edx,0x19000
    8b21:	be 00 00 00 00       	mov    esi,0x0
    8b26:	48 89 c7             	mov    rdi,rax
    8b29:	e8 e2 9a ff ff       	call   2610 <memset@plt>
    8b2e:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8b35:	00 00 
    8b37:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8b3d:	48 89 c7             	mov    rdi,rax
    8b40:	e8 5b 9a ff ff       	call   25a0 <strlen@plt>
    8b45:	48 89 c2             	mov    rdx,rax
    8b48:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8b4f:	00 00 
    8b51:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8b57:	48 01 d0             	add    rax,rdx
    8b5a:	48 be 43 75 72 72 65 	movabs rsi,0x20746e6572727543
    8b61:	6e 74 20 
    8b64:	48 bf 41 52 50 20 63 	movabs rdi,0x6863616320505241
    8b6b:	61 63 68 
    8b6e:	48 89 30             	mov    QWORD PTR [rax],rsi
    8b71:	48 89 78 08          	mov    QWORD PTR [rax+0x8],rdi
    8b75:	66 c7 40 10 65 3a    	mov    WORD PTR [rax+0x10],0x3a65
    8b7b:	c6 40 12 00          	mov    BYTE PTR [rax+0x12],0x0
    8b7f:	c7 45 ac 00 00 00 00 	mov    DWORD PTR [rbp-0x54],0x0
    8b86:	eb 7a                	jmp    8c02 <get_arp_cache+0x114>
    8b88:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
    8b8b:	48 63 d0             	movsxd rdx,eax
    8b8e:	48 89 d0             	mov    rax,rdx
    8b91:	48 c1 e0 04          	shl    rax,0x4
    8b95:	48 01 d0             	add    rax,rdx
    8b98:	48 01 c0             	add    rax,rax
    8b9b:	48 8d 50 10          	lea    rdx,[rax+0x10]
    8b9f:	48 8d 05 7a 01 10 00 	lea    rax,[rip+0x10017a]        # 108d20 <arpcache>
    8ba6:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    8baa:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
    8bad:	48 63 d0             	movsxd rdx,eax
    8bb0:	48 89 d0             	mov    rax,rdx
    8bb3:	48 c1 e0 04          	shl    rax,0x4
    8bb7:	48 01 d0             	add    rax,rdx
    8bba:	48 01 c0             	add    rax,rax
    8bbd:	48 8d 15 5c 01 10 00 	lea    rdx,[rip+0x10015c]        # 108d20 <arpcache>
    8bc4:	48 01 c2             	add    rdx,rax
    8bc7:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    8bcb:	48 8d 35 a9 5c 00 00 	lea    rsi,[rip+0x5ca9]        # e87b <_IO_stdin_used+0x187b>
    8bd2:	48 89 c7             	mov    rdi,rax
    8bd5:	b8 00 00 00 00       	mov    eax,0x0
    8bda:	e8 21 99 ff ff       	call   2500 <sprintf@plt>
    8bdf:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    8be3:	64 48 8b 14 25 00 00 	mov    rdx,QWORD PTR fs:0x0
    8bea:	00 00 
    8bec:	48 81 c2 00 70 fe ff 	add    rdx,0xfffffffffffe7000
    8bf3:	48 89 c6             	mov    rsi,rax
    8bf6:	48 89 d7             	mov    rdi,rdx
    8bf9:	e8 d2 9c ff ff       	call   28d0 <strcat@plt>
    8bfe:	83 45 ac 01          	add    DWORD PTR [rbp-0x54],0x1
    8c02:	8b 05 14 94 00 00    	mov    eax,DWORD PTR [rip+0x9414]        # 1201c <arp_entries>
    8c08:	39 45 ac             	cmp    DWORD PTR [rbp-0x54],eax
    8c0b:	0f 8e 77 ff ff ff    	jle    8b88 <get_arp_cache+0x9a>
    8c11:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8c18:	00 00 
    8c1a:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8c20:	48 89 c7             	mov    rdi,rax
    8c23:	e8 78 99 ff ff       	call   25a0 <strlen@plt>
    8c28:	48 89 c2             	mov    rdx,rax
    8c2b:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8c32:	00 00 
    8c34:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8c3a:	48 01 d0             	add    rax,rdx
    8c3d:	66 c7 00 0d 0a       	mov    WORD PTR [rax],0xa0d
    8c42:	c6 40 02 00          	mov    BYTE PTR [rax+0x2],0x0
    8c46:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8c4d:	00 00 
    8c4f:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8c55:	48 89 c7             	mov    rdi,rax
    8c58:	e8 43 99 ff ff       	call   25a0 <strlen@plt>
    8c5d:	48 89 c2             	mov    rdx,rax
    8c60:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    8c64:	8b 00                	mov    eax,DWORD PTR [rax]
    8c66:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    8c6d:	00 00 
    8c6f:	48 8d b1 00 70 fe ff 	lea    rsi,[rcx-0x19000]
    8c76:	b9 00 00 00 00       	mov    ecx,0x0
    8c7b:	89 c7                	mov    edi,eax
    8c7d:	e8 4e 99 ff ff       	call   25d0 <send@plt>
    8c82:	90                   	nop
    8c83:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c87:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    8c8e:	00 00 
    8c90:	74 05                	je     8c97 <get_arp_cache+0x1a9>
    8c92:	e8 39 9a ff ff       	call   26d0 <__stack_chk_fail@plt>
    8c97:	c9                   	leave  
    8c98:	c3                   	ret    

0000000000008c99 <set_spi_max>:
    8c99:	f3 0f 1e fa          	endbr64 
    8c9d:	55                   	push   rbp
    8c9e:	48 89 e5             	mov    rbp,rsp
    8ca1:	53                   	push   rbx
    8ca2:	48 83 ec 18          	sub    rsp,0x18
    8ca6:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    8ca9:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    8cad:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8cb4:	00 00 
    8cb6:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8cbc:	ba 00 90 01 00       	mov    edx,0x19000
    8cc1:	be 00 00 00 00       	mov    esi,0x0
    8cc6:	48 89 c7             	mov    rdi,rax
    8cc9:	e8 42 99 ff ff       	call   2610 <memset@plt>
    8cce:	8b 05 4c 93 00 00    	mov    eax,DWORD PTR [rip+0x934c]        # 12020 <spi_max>
    8cd4:	64 48 8b 14 25 00 00 	mov    rdx,QWORD PTR fs:0x0
    8cdb:	00 00 
    8cdd:	48 8d 8a 00 70 fe ff 	lea    rcx,[rdx-0x19000]
    8ce4:	89 c2                	mov    edx,eax
    8ce6:	48 8d 35 99 5b 00 00 	lea    rsi,[rip+0x5b99]        # e886 <_IO_stdin_used+0x1886>
    8ced:	48 89 cf             	mov    rdi,rcx
    8cf0:	b8 00 00 00 00       	mov    eax,0x0
    8cf5:	e8 06 98 ff ff       	call   2500 <sprintf@plt>
    8cfa:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8cfe:	48 89 c7             	mov    rdi,rax
    8d01:	e8 9a 98 ff ff       	call   25a0 <strlen@plt>
    8d06:	48 83 f8 01          	cmp    rax,0x1
    8d0a:	77 77                	ja     8d83 <set_spi_max+0xea>
    8d0c:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8d13:	00 00 
    8d15:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8d1b:	48 89 c7             	mov    rdi,rax
    8d1e:	e8 7d 98 ff ff       	call   25a0 <strlen@plt>
    8d23:	48 89 c2             	mov    rdx,rax
    8d26:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8d2d:	00 00 
    8d2f:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8d35:	48 01 d0             	add    rax,rdx
    8d38:	48 bb 53 50 49 20 4e 	movabs rbx,0x626d754e20495053
    8d3f:	75 6d 62 
    8d42:	48 be 65 72 20 74 6f 	movabs rsi,0x73206f6f74207265
    8d49:	6f 20 73 
    8d4c:	48 89 18             	mov    QWORD PTR [rax],rbx
    8d4f:	48 89 70 08          	mov    QWORD PTR [rax+0x8],rsi
    8d53:	48 b9 68 6f 72 74 20 	movabs rcx,0x20726f2074726f68
    8d5a:	6f 72 20 
    8d5d:	48 bb 69 73 20 6e 6f 	movabs rbx,0x6120746f6e207369
    8d64:	74 20 61 
    8d67:	48 89 48 10          	mov    QWORD PTR [rax+0x10],rcx
    8d6b:	48 89 58 18          	mov    QWORD PTR [rax+0x18],rbx
    8d6f:	48 b9 20 6e 75 6d 62 	movabs rcx,0xa7265626d756e20
    8d76:	65 72 0a 
    8d79:	48 89 48 20          	mov    QWORD PTR [rax+0x20],rcx
    8d7d:	c6 40 28 00          	mov    BYTE PTR [rax+0x28],0x0
    8d81:	eb 5a                	jmp    8ddd <set_spi_max+0x144>
    8d83:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8d87:	48 89 c7             	mov    rdi,rax
    8d8a:	e8 e1 9a ff ff       	call   2870 <atoi@plt>
    8d8f:	89 05 8b 92 00 00    	mov    DWORD PTR [rip+0x928b],eax        # 12020 <spi_max>
    8d95:	8b 1d 85 92 00 00    	mov    ebx,DWORD PTR [rip+0x9285]        # 12020 <spi_max>
    8d9b:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8da2:	00 00 
    8da4:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8daa:	48 89 c7             	mov    rdi,rax
    8dad:	e8 ee 97 ff ff       	call   25a0 <strlen@plt>
    8db2:	48 89 c2             	mov    rdx,rax
    8db5:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8dbc:	00 00 
    8dbe:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8dc4:	48 01 d0             	add    rax,rdx
    8dc7:	89 da                	mov    edx,ebx
    8dc9:	48 8d 35 cb 5a 00 00 	lea    rsi,[rip+0x5acb]        # e89b <_IO_stdin_used+0x189b>
    8dd0:	48 89 c7             	mov    rdi,rax
    8dd3:	b8 00 00 00 00       	mov    eax,0x0
    8dd8:	e8 23 97 ff ff       	call   2500 <sprintf@plt>
    8ddd:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8de4:	00 00 
    8de6:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8dec:	48 89 c7             	mov    rdi,rax
    8def:	e8 ac 97 ff ff       	call   25a0 <strlen@plt>
    8df4:	48 89 c2             	mov    rdx,rax
    8df7:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8dfe:	00 00 
    8e00:	48 8d b0 00 70 fe ff 	lea    rsi,[rax-0x19000]
    8e07:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    8e0a:	b9 00 00 00 00       	mov    ecx,0x0
    8e0f:	89 c7                	mov    edi,eax
    8e11:	e8 ba 97 ff ff       	call   25d0 <send@plt>
    8e16:	90                   	nop
    8e17:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    8e1b:	c9                   	leave  
    8e1c:	c3                   	ret    

0000000000008e1d <tcp_rst_portscan_detect>:
    8e1d:	f3 0f 1e fa          	endbr64 
    8e21:	55                   	push   rbp
    8e22:	48 89 e5             	mov    rbp,rsp
    8e25:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    8e2c:	48 89 bd c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rdi
    8e33:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8e3a:	00 00 
    8e3c:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8e40:	31 c0                	xor    eax,eax
    8e42:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    8e49:	00 00 00 
    8e4c:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    8e53:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    8e59:	83 f8 1e             	cmp    eax,0x1e
    8e5c:	74 0a                	je     8e68 <tcp_rst_portscan_detect+0x4b>
    8e5e:	b8 00 00 00 00       	mov    eax,0x0
    8e63:	e9 8d 01 00 00       	jmp    8ff5 <tcp_rst_portscan_detect+0x1d8>
    8e68:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    8e6f:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    8e75:	83 e8 01             	sub    eax,0x1
    8e78:	89 85 d8 fe ff ff    	mov    DWORD PTR [rbp-0x128],eax
    8e7e:	eb 6c                	jmp    8eec <tcp_rst_portscan_detect+0xcf>
    8e80:	8b 85 d8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x128]
    8e86:	89 85 e4 fe ff ff    	mov    DWORD PTR [rbp-0x11c],eax
    8e8c:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    8e93:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    8e99:	48 63 d2             	movsxd rdx,edx
    8e9c:	48 83 c2 28          	add    rdx,0x28
    8ea0:	48 8b 44 d0 10       	mov    rax,QWORD PTR [rax+rdx*8+0x10]
    8ea5:	89 c1                	mov    ecx,eax
    8ea7:	83 ad d8 fe ff ff 01 	sub    DWORD PTR [rbp-0x128],0x1
    8eae:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    8eb5:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    8ebb:	48 63 d2             	movsxd rdx,edx
    8ebe:	48 83 c2 28          	add    rdx,0x28
    8ec2:	48 8b 44 d0 10       	mov    rax,QWORD PTR [rax+rdx*8+0x10]
    8ec7:	29 c1                	sub    ecx,eax
    8ec9:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
    8ecf:	8d 50 01             	lea    edx,[rax+0x1]
    8ed2:	89 95 d4 fe ff ff    	mov    DWORD PTR [rbp-0x12c],edx
    8ed8:	89 ca                	mov    edx,ecx
    8eda:	48 98                	cdqe   
    8edc:	89 94 85 f0 fe ff ff 	mov    DWORD PTR [rbp+rax*4-0x110],edx
    8ee3:	83 bd e4 fe ff ff 01 	cmp    DWORD PTR [rbp-0x11c],0x1
    8eea:	74 0b                	je     8ef7 <tcp_rst_portscan_detect+0xda>
    8eec:	83 bd d8 fe ff ff 00 	cmp    DWORD PTR [rbp-0x128],0x0
    8ef3:	75 8b                	jne    8e80 <tcp_rst_portscan_detect+0x63>
    8ef5:	eb 01                	jmp    8ef8 <tcp_rst_portscan_detect+0xdb>
    8ef7:	90                   	nop
    8ef8:	c7 85 dc fe ff ff 00 	mov    DWORD PTR [rbp-0x124],0x0
    8eff:	00 00 00 
    8f02:	c7 85 e0 fe ff ff 00 	mov    DWORD PTR [rbp-0x120],0x0
    8f09:	00 00 00 
    8f0c:	eb 24                	jmp    8f32 <tcp_rst_portscan_detect+0x115>
    8f0e:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    8f14:	48 98                	cdqe   
    8f16:	8b 84 85 f0 fe ff ff 	mov    eax,DWORD PTR [rbp+rax*4-0x110]
    8f1d:	3d b3 b7 b4 00       	cmp    eax,0xb4b7b3
    8f22:	7f 07                	jg     8f2b <tcp_rst_portscan_detect+0x10e>
    8f24:	83 85 dc fe ff ff 01 	add    DWORD PTR [rbp-0x124],0x1
    8f2b:	83 85 e0 fe ff ff 01 	add    DWORD PTR [rbp-0x120],0x1
    8f32:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    8f38:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    8f3e:	7c ce                	jl     8f0e <tcp_rst_portscan_detect+0xf1>
    8f40:	8b 85 dc fe ff ff    	mov    eax,DWORD PTR [rbp-0x124]
    8f46:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    8f4c:	0f 85 9e 00 00 00    	jne    8ff0 <tcp_rst_portscan_detect+0x1d3>
    8f52:	48 8b 05 df 90 00 00 	mov    rax,QWORD PTR [rip+0x90df]        # 12038 <def_log_file>
    8f59:	48 8d 35 50 59 00 00 	lea    rsi,[rip+0x5950]        # e8b0 <_IO_stdin_used+0x18b0>
    8f60:	48 89 c7             	mov    rdi,rax
    8f63:	e8 a8 97 ff ff       	call   2710 <fopen@plt>
    8f68:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
    8f6f:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    8f76:	48 83 c0 08          	add    rax,0x8
    8f7a:	48 89 c6             	mov    rsi,rax
    8f7d:	48 8d 3d 34 59 00 00 	lea    rdi,[rip+0x5934]        # e8b8 <_IO_stdin_used+0x18b8>
    8f84:	b8 00 00 00 00       	mov    eax,0x0
    8f89:	e8 32 95 ff ff       	call   24c0 <printf@plt>
    8f8e:	b8 00 00 00 00       	mov    eax,0x0
    8f93:	e8 47 a4 ff ff       	call   33df <get_formated_time>
    8f98:	48 89 c1             	mov    rcx,rax
    8f9b:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    8fa2:	48 8d 50 08          	lea    rdx,[rax+0x8]
    8fa6:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    8fad:	48 8d 35 34 59 00 00 	lea    rsi,[rip+0x5934]        # e8e8 <_IO_stdin_used+0x18e8>
    8fb4:	48 89 c7             	mov    rdi,rax
    8fb7:	b8 00 00 00 00       	mov    eax,0x0
    8fbc:	e8 3f 95 ff ff       	call   2500 <sprintf@plt>
    8fc1:	48 8b 95 e8 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x118]
    8fc8:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    8fcf:	48 89 d6             	mov    rsi,rdx
    8fd2:	48 89 c7             	mov    rdi,rax
    8fd5:	e8 06 97 ff ff       	call   26e0 <fputs@plt>
    8fda:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    8fe1:	48 89 c7             	mov    rdi,rax
    8fe4:	e8 d7 96 ff ff       	call   26c0 <fclose@plt>
    8fe9:	b8 01 00 00 00       	mov    eax,0x1
    8fee:	eb 05                	jmp    8ff5 <tcp_rst_portscan_detect+0x1d8>
    8ff0:	b8 00 00 00 00       	mov    eax,0x0
    8ff5:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    8ff9:	64 48 2b 34 25 28 00 	sub    rsi,QWORD PTR fs:0x28
    9000:	00 00 
    9002:	74 05                	je     9009 <tcp_rst_portscan_detect+0x1ec>
    9004:	e8 c7 96 ff ff       	call   26d0 <__stack_chk_fail@plt>
    9009:	c9                   	leave  
    900a:	c3                   	ret    

000000000000900b <fin_rst_portscan_detect>:
    900b:	f3 0f 1e fa          	endbr64 
    900f:	55                   	push   rbp
    9010:	48 89 e5             	mov    rbp,rsp
    9013:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    901a:	48 89 bd c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rdi
    9021:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9028:	00 00 
    902a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    902e:	31 c0                	xor    eax,eax
    9030:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    9037:	00 00 00 
    903a:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    9041:	8b 40 50             	mov    eax,DWORD PTR [rax+0x50]
    9044:	83 f8 1e             	cmp    eax,0x1e
    9047:	74 0a                	je     9053 <fin_rst_portscan_detect+0x48>
    9049:	b8 00 00 00 00       	mov    eax,0x0
    904e:	e9 8a 01 00 00       	jmp    91dd <fin_rst_portscan_detect+0x1d2>
    9053:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    905a:	8b 40 50             	mov    eax,DWORD PTR [rax+0x50]
    905d:	83 e8 01             	sub    eax,0x1
    9060:	89 85 d8 fe ff ff    	mov    DWORD PTR [rbp-0x128],eax
    9066:	eb 6c                	jmp    90d4 <fin_rst_portscan_detect+0xc9>
    9068:	8b 85 d8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x128]
    906e:	89 85 e4 fe ff ff    	mov    DWORD PTR [rbp-0x11c],eax
    9074:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    907b:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    9081:	48 63 d2             	movsxd rdx,edx
    9084:	48 83 c2 0a          	add    rdx,0xa
    9088:	48 8b 44 d0 08       	mov    rax,QWORD PTR [rax+rdx*8+0x8]
    908d:	89 c1                	mov    ecx,eax
    908f:	83 ad d8 fe ff ff 01 	sub    DWORD PTR [rbp-0x128],0x1
    9096:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    909d:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    90a3:	48 63 d2             	movsxd rdx,edx
    90a6:	48 83 c2 0a          	add    rdx,0xa
    90aa:	48 8b 44 d0 08       	mov    rax,QWORD PTR [rax+rdx*8+0x8]
    90af:	29 c1                	sub    ecx,eax
    90b1:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
    90b7:	8d 50 01             	lea    edx,[rax+0x1]
    90ba:	89 95 d4 fe ff ff    	mov    DWORD PTR [rbp-0x12c],edx
    90c0:	89 ca                	mov    edx,ecx
    90c2:	48 98                	cdqe   
    90c4:	89 94 85 f0 fe ff ff 	mov    DWORD PTR [rbp+rax*4-0x110],edx
    90cb:	83 bd e4 fe ff ff 01 	cmp    DWORD PTR [rbp-0x11c],0x1
    90d2:	74 0b                	je     90df <fin_rst_portscan_detect+0xd4>
    90d4:	83 bd d8 fe ff ff 00 	cmp    DWORD PTR [rbp-0x128],0x0
    90db:	75 8b                	jne    9068 <fin_rst_portscan_detect+0x5d>
    90dd:	eb 01                	jmp    90e0 <fin_rst_portscan_detect+0xd5>
    90df:	90                   	nop
    90e0:	c7 85 dc fe ff ff 00 	mov    DWORD PTR [rbp-0x124],0x0
    90e7:	00 00 00 
    90ea:	c7 85 e0 fe ff ff 00 	mov    DWORD PTR [rbp-0x120],0x0
    90f1:	00 00 00 
    90f4:	eb 24                	jmp    911a <fin_rst_portscan_detect+0x10f>
    90f6:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    90fc:	48 98                	cdqe   
    90fe:	8b 84 85 f0 fe ff ff 	mov    eax,DWORD PTR [rbp+rax*4-0x110]
    9105:	3d 73 7e e2 00       	cmp    eax,0xe27e73
    910a:	7f 07                	jg     9113 <fin_rst_portscan_detect+0x108>
    910c:	83 85 dc fe ff ff 01 	add    DWORD PTR [rbp-0x124],0x1
    9113:	83 85 e0 fe ff ff 01 	add    DWORD PTR [rbp-0x120],0x1
    911a:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    9120:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    9126:	7c ce                	jl     90f6 <fin_rst_portscan_detect+0xeb>
    9128:	8b 85 dc fe ff ff    	mov    eax,DWORD PTR [rbp-0x124]
    912e:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    9134:	0f 85 9e 00 00 00    	jne    91d8 <fin_rst_portscan_detect+0x1cd>
    913a:	48 8b 05 f7 8e 00 00 	mov    rax,QWORD PTR [rip+0x8ef7]        # 12038 <def_log_file>
    9141:	48 8d 35 68 57 00 00 	lea    rsi,[rip+0x5768]        # e8b0 <_IO_stdin_used+0x18b0>
    9148:	48 89 c7             	mov    rdi,rax
    914b:	e8 c0 95 ff ff       	call   2710 <fopen@plt>
    9150:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
    9157:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    915e:	48 83 c0 08          	add    rax,0x8
    9162:	48 89 c6             	mov    rsi,rax
    9165:	48 8d 3d a4 57 00 00 	lea    rdi,[rip+0x57a4]        # e910 <_IO_stdin_used+0x1910>
    916c:	b8 00 00 00 00       	mov    eax,0x0
    9171:	e8 4a 93 ff ff       	call   24c0 <printf@plt>
    9176:	b8 00 00 00 00       	mov    eax,0x0
    917b:	e8 5f a2 ff ff       	call   33df <get_formated_time>
    9180:	48 89 c1             	mov    rcx,rax
    9183:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    918a:	48 8d 50 08          	lea    rdx,[rax+0x8]
    918e:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    9195:	48 8d 35 a4 57 00 00 	lea    rsi,[rip+0x57a4]        # e940 <_IO_stdin_used+0x1940>
    919c:	48 89 c7             	mov    rdi,rax
    919f:	b8 00 00 00 00       	mov    eax,0x0
    91a4:	e8 57 93 ff ff       	call   2500 <sprintf@plt>
    91a9:	48 8b 95 e8 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x118]
    91b0:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    91b7:	48 89 d6             	mov    rsi,rdx
    91ba:	48 89 c7             	mov    rdi,rax
    91bd:	e8 1e 95 ff ff       	call   26e0 <fputs@plt>
    91c2:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    91c9:	48 89 c7             	mov    rdi,rax
    91cc:	e8 ef 94 ff ff       	call   26c0 <fclose@plt>
    91d1:	b8 01 00 00 00       	mov    eax,0x1
    91d6:	eb 05                	jmp    91dd <fin_rst_portscan_detect+0x1d2>
    91d8:	b8 00 00 00 00       	mov    eax,0x0
    91dd:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    91e1:	64 48 2b 34 25 28 00 	sub    rsi,QWORD PTR fs:0x28
    91e8:	00 00 
    91ea:	74 05                	je     91f1 <fin_rst_portscan_detect+0x1e6>
    91ec:	e8 df 94 ff ff       	call   26d0 <__stack_chk_fail@plt>
    91f1:	c9                   	leave  
    91f2:	c3                   	ret    

00000000000091f3 <member_ready_for_scan>:
    91f3:	f3 0f 1e fa          	endbr64 
    91f7:	55                   	push   rbp
    91f8:	48 89 e5             	mov    rbp,rsp
    91fb:	48 83 ec 10          	sub    rsp,0x10
    91ff:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    9206:	eb 48                	jmp    9250 <member_ready_for_scan+0x5d>
    9208:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    920b:	48 63 d0             	movsxd rdx,eax
    920e:	48 89 d0             	mov    rax,rdx
    9211:	48 c1 e0 02          	shl    rax,0x2
    9215:	48 01 d0             	add    rax,rdx
    9218:	48 c1 e0 03          	shl    rax,0x3
    921c:	48 01 d0             	add    rax,rdx
    921f:	48 c1 e0 04          	shl    rax,0x4
    9223:	48 8d 15 f6 b2 0e 00 	lea    rdx,[rip+0xeb2f6]        # f4520 <watchlist>
    922a:	48 01 d0             	add    rax,rdx
    922d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9231:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9235:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    923b:	83 f8 1d             	cmp    eax,0x1d
    923e:	76 0c                	jbe    924c <member_ready_for_scan+0x59>
    9240:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9244:	48 89 c7             	mov    rdi,rax
    9247:	e8 d1 fb ff ff       	call   8e1d <tcp_rst_portscan_detect>
    924c:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    9250:	8b 05 c2 8d 00 00    	mov    eax,DWORD PTR [rip+0x8dc2]        # 12018 <watchlist_num>
    9256:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    9259:	7e ad                	jle    9208 <member_ready_for_scan+0x15>
    925b:	90                   	nop
    925c:	90                   	nop
    925d:	c9                   	leave  
    925e:	c3                   	ret    

000000000000925f <member_exists>:
    925f:	f3 0f 1e fa          	endbr64 
    9263:	55                   	push   rbp
    9264:	48 89 e5             	mov    rbp,rsp
    9267:	48 83 ec 20          	sub    rsp,0x20
    926b:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    926f:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    9276:	eb 47                	jmp    92bf <member_exists+0x60>
    9278:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    927b:	8d 50 01             	lea    edx,[rax+0x1]
    927e:	89 55 fc             	mov    DWORD PTR [rbp-0x4],edx
    9281:	48 63 d0             	movsxd rdx,eax
    9284:	48 89 d0             	mov    rax,rdx
    9287:	48 c1 e0 02          	shl    rax,0x2
    928b:	48 01 d0             	add    rax,rdx
    928e:	48 c1 e0 03          	shl    rax,0x3
    9292:	48 01 d0             	add    rax,rdx
    9295:	48 c1 e0 04          	shl    rax,0x4
    9299:	48 8d 15 80 b2 0e 00 	lea    rdx,[rip+0xeb280]        # f4520 <watchlist>
    92a0:	48 01 d0             	add    rax,rdx
    92a3:	48 8d 50 08          	lea    rdx,[rax+0x8]
    92a7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    92ab:	48 89 c6             	mov    rsi,rax
    92ae:	48 89 d7             	mov    rdi,rdx
    92b1:	e8 2a 95 ff ff       	call   27e0 <strcmp@plt>
    92b6:	85 c0                	test   eax,eax
    92b8:	75 05                	jne    92bf <member_exists+0x60>
    92ba:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    92bd:	eb 10                	jmp    92cf <member_exists+0x70>
    92bf:	8b 05 53 8d 00 00    	mov    eax,DWORD PTR [rip+0x8d53]        # 12018 <watchlist_num>
    92c5:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    92c8:	7e ae                	jle    9278 <member_exists+0x19>
    92ca:	b8 ff ff ff ff       	mov    eax,0xffffffff
    92cf:	c9                   	leave  
    92d0:	c3                   	ret    

00000000000092d1 <init_member>:
    92d1:	f3 0f 1e fa          	endbr64 
    92d5:	55                   	push   rbp
    92d6:	48 89 e5             	mov    rbp,rsp
    92d9:	48 83 ec 20          	sub    rsp,0x20
    92dd:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    92e1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    92e5:	48 89 c7             	mov    rdi,rax
    92e8:	e8 72 ff ff ff       	call   925f <member_exists>
    92ed:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    92f0:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    92f4:	74 42                	je     9338 <init_member+0x67>
    92f6:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    92f9:	48 63 d0             	movsxd rdx,eax
    92fc:	48 89 d0             	mov    rax,rdx
    92ff:	48 c1 e0 02          	shl    rax,0x2
    9303:	48 01 d0             	add    rax,rdx
    9306:	48 c1 e0 03          	shl    rax,0x3
    930a:	48 01 d0             	add    rax,rdx
    930d:	48 c1 e0 04          	shl    rax,0x4
    9311:	48 8d 15 08 b2 0e 00 	lea    rdx,[rip+0xeb208]        # f4520 <watchlist>
    9318:	48 01 d0             	add    rax,rdx
    931b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    931f:	bf 00 00 00 00       	mov    edi,0x0
    9324:	e8 67 93 ff ff       	call   2690 <time@plt>
    9329:	48 89 c2             	mov    rdx,rax
    932c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9330:	48 89 10             	mov    QWORD PTR [rax],rdx
    9333:	e9 a8 00 00 00       	jmp    93e0 <init_member+0x10f>
    9338:	48 8d 3d 26 56 00 00 	lea    rdi,[rip+0x5626]        # e965 <_IO_stdin_used+0x1965>
    933f:	e8 1b ff ff ff       	call   925f <member_exists>
    9344:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    9347:	83 7d f4 00          	cmp    DWORD PTR [rbp-0xc],0x0
    934b:	74 2b                	je     9378 <init_member+0xa7>
    934d:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    9350:	48 63 d0             	movsxd rdx,eax
    9353:	48 89 d0             	mov    rax,rdx
    9356:	48 c1 e0 02          	shl    rax,0x2
    935a:	48 01 d0             	add    rax,rdx
    935d:	48 c1 e0 03          	shl    rax,0x3
    9361:	48 01 d0             	add    rax,rdx
    9364:	48 c1 e0 04          	shl    rax,0x4
    9368:	48 8d 15 b1 b1 0e 00 	lea    rdx,[rip+0xeb1b1]        # f4520 <watchlist>
    936f:	48 01 d0             	add    rax,rdx
    9372:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9376:	eb 3b                	jmp    93b3 <init_member+0xe2>
    9378:	8b 05 9a 8c 00 00    	mov    eax,DWORD PTR [rip+0x8c9a]        # 12018 <watchlist_num>
    937e:	83 c0 01             	add    eax,0x1
    9381:	89 05 91 8c 00 00    	mov    DWORD PTR [rip+0x8c91],eax        # 12018 <watchlist_num>
    9387:	8b 05 8b 8c 00 00    	mov    eax,DWORD PTR [rip+0x8c8b]        # 12018 <watchlist_num>
    938d:	48 63 d0             	movsxd rdx,eax
    9390:	48 89 d0             	mov    rax,rdx
    9393:	48 c1 e0 02          	shl    rax,0x2
    9397:	48 01 d0             	add    rax,rdx
    939a:	48 c1 e0 03          	shl    rax,0x3
    939e:	48 01 d0             	add    rax,rdx
    93a1:	48 c1 e0 04          	shl    rax,0x4
    93a5:	48 8d 15 74 b1 0e 00 	lea    rdx,[rip+0xeb174]        # f4520 <watchlist>
    93ac:	48 01 d0             	add    rax,rdx
    93af:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    93b3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    93b7:	ba 08 00 00 00       	mov    edx,0x8
    93bc:	be 00 00 00 00       	mov    esi,0x0
    93c1:	48 89 c7             	mov    rdi,rax
    93c4:	e8 47 92 ff ff       	call   2610 <memset@plt>
    93c9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    93cd:	48 8d 50 08          	lea    rdx,[rax+0x8]
    93d1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    93d5:	48 89 c6             	mov    rsi,rax
    93d8:	48 89 d7             	mov    rdi,rdx
    93db:	e8 c0 92 ff ff       	call   26a0 <strcpy@plt>
    93e0:	c9                   	leave  
    93e1:	c3                   	ret    

00000000000093e2 <ready_for_clean>:
    93e2:	f3 0f 1e fa          	endbr64 
    93e6:	55                   	push   rbp
    93e7:	48 89 e5             	mov    rbp,rsp
    93ea:	48 83 ec 10          	sub    rsp,0x10
    93ee:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    93f2:	bf 00 00 00 00       	mov    edi,0x0
    93f7:	e8 94 92 ff ff       	call   2690 <time@plt>
    93fc:	48 89 c2             	mov    rdx,rax
    93ff:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9403:	48 8b 00             	mov    rax,QWORD PTR [rax]
    9406:	48 29 c2             	sub    rdx,rax
    9409:	48 8b 05 a8 8e 00 00 	mov    rax,QWORD PTR [rip+0x8ea8]        # 122b8 <clean_delay>
    9410:	48 39 c2             	cmp    rdx,rax
    9413:	72 22                	jb     9437 <ready_for_clean+0x55>
    9415:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9419:	48 83 c0 08          	add    rax,0x8
    941d:	48 8d 35 49 55 00 00 	lea    rsi,[rip+0x5549]        # e96d <_IO_stdin_used+0x196d>
    9424:	48 89 c7             	mov    rdi,rax
    9427:	e8 b4 93 ff ff       	call   27e0 <strcmp@plt>
    942c:	85 c0                	test   eax,eax
    942e:	74 07                	je     9437 <ready_for_clean+0x55>
    9430:	b8 01 00 00 00       	mov    eax,0x1
    9435:	eb 05                	jmp    943c <ready_for_clean+0x5a>
    9437:	b8 ff ff ff ff       	mov    eax,0xffffffff
    943c:	c9                   	leave  
    943d:	c3                   	ret    

000000000000943e <clean>:
    943e:	f3 0f 1e fa          	endbr64 
    9442:	55                   	push   rbp
    9443:	48 89 e5             	mov    rbp,rsp
    9446:	48 83 ec 10          	sub    rsp,0x10
    944a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    944e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9452:	ba 08 00 00 00       	mov    edx,0x8
    9457:	be 00 00 00 00       	mov    esi,0x0
    945c:	48 89 c7             	mov    rdi,rax
    945f:	e8 ac 91 ff ff       	call   2610 <memset@plt>
    9464:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9468:	48 83 c0 08          	add    rax,0x8
    946c:	48 b9 30 2e 30 2e 30 	movabs rcx,0x312e302e302e30
    9473:	2e 31 00 
    9476:	48 89 08             	mov    QWORD PTR [rax],rcx
    9479:	90                   	nop
    947a:	c9                   	leave  
    947b:	c3                   	ret    

000000000000947c <scan_for_clean>:
    947c:	f3 0f 1e fa          	endbr64 
    9480:	55                   	push   rbp
    9481:	48 89 e5             	mov    rbp,rsp
    9484:	48 83 ec 10          	sub    rsp,0x10
    9488:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    948f:	eb 62                	jmp    94f3 <scan_for_clean+0x77>
    9491:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    9494:	48 63 d0             	movsxd rdx,eax
    9497:	48 89 d0             	mov    rax,rdx
    949a:	48 c1 e0 02          	shl    rax,0x2
    949e:	48 01 d0             	add    rax,rdx
    94a1:	48 c1 e0 03          	shl    rax,0x3
    94a5:	48 01 d0             	add    rax,rdx
    94a8:	48 c1 e0 04          	shl    rax,0x4
    94ac:	48 8d 15 6d b0 0e 00 	lea    rdx,[rip+0xeb06d]        # f4520 <watchlist>
    94b3:	48 01 d0             	add    rax,rdx
    94b6:	48 89 c7             	mov    rdi,rax
    94b9:	e8 24 ff ff ff       	call   93e2 <ready_for_clean>
    94be:	85 c0                	test   eax,eax
    94c0:	7e 2d                	jle    94ef <scan_for_clean+0x73>
    94c2:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    94c5:	48 63 d0             	movsxd rdx,eax
    94c8:	48 89 d0             	mov    rax,rdx
    94cb:	48 c1 e0 02          	shl    rax,0x2
    94cf:	48 01 d0             	add    rax,rdx
    94d2:	48 c1 e0 03          	shl    rax,0x3
    94d6:	48 01 d0             	add    rax,rdx
    94d9:	48 c1 e0 04          	shl    rax,0x4
    94dd:	48 8d 15 3c b0 0e 00 	lea    rdx,[rip+0xeb03c]        # f4520 <watchlist>
    94e4:	48 01 d0             	add    rax,rdx
    94e7:	48 89 c7             	mov    rdi,rax
    94ea:	e8 4f ff ff ff       	call   943e <clean>
    94ef:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    94f3:	8b 05 1f 8b 00 00    	mov    eax,DWORD PTR [rip+0x8b1f]        # 12018 <watchlist_num>
    94f9:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    94fc:	7e 93                	jle    9491 <scan_for_clean+0x15>
    94fe:	90                   	nop
    94ff:	90                   	nop
    9500:	c9                   	leave  
    9501:	c3                   	ret    

0000000000009502 <compare_entries>:
    9502:	f3 0f 1e fa          	endbr64 
    9506:	55                   	push   rbp
    9507:	48 89 e5             	mov    rbp,rsp
    950a:	48 83 ec 20          	sub    rsp,0x20
    950e:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    9512:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    9516:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    951d:	e9 ac 00 00 00       	jmp    95ce <compare_entries+0xcc>
    9522:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    9525:	48 63 d0             	movsxd rdx,eax
    9528:	48 89 d0             	mov    rax,rdx
    952b:	48 c1 e0 04          	shl    rax,0x4
    952f:	48 01 d0             	add    rax,rdx
    9532:	48 01 c0             	add    rax,rax
    9535:	48 8d 15 e4 f7 0f 00 	lea    rdx,[rip+0xff7e4]        # 108d20 <arpcache>
    953c:	48 01 c2             	add    rdx,rax
    953f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9543:	48 89 c6             	mov    rsi,rax
    9546:	48 89 d7             	mov    rdi,rdx
    9549:	e8 a3 01 00 00       	call   96f1 <compare_ip_entry>
    954e:	85 c0                	test   eax,eax
    9550:	74 78                	je     95ca <compare_entries+0xc8>
    9552:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    9555:	48 63 d0             	movsxd rdx,eax
    9558:	48 89 d0             	mov    rax,rdx
    955b:	48 c1 e0 04          	shl    rax,0x4
    955f:	48 01 d0             	add    rax,rdx
    9562:	48 01 c0             	add    rax,rax
    9565:	48 8d 50 10          	lea    rdx,[rax+0x10]
    9569:	48 8d 05 b0 f7 0f 00 	lea    rax,[rip+0xff7b0]        # 108d20 <arpcache>
    9570:	48 01 c2             	add    rdx,rax
    9573:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    9577:	48 89 c6             	mov    rsi,rax
    957a:	48 89 d7             	mov    rdi,rdx
    957d:	e8 98 01 00 00       	call   971a <compare_mac_entry>
    9582:	85 c0                	test   eax,eax
    9584:	75 44                	jne    95ca <compare_entries+0xc8>
    9586:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    9589:	48 63 d0             	movsxd rdx,eax
    958c:	48 89 d0             	mov    rax,rdx
    958f:	48 c1 e0 04          	shl    rax,0x4
    9593:	48 01 d0             	add    rax,rdx
    9596:	48 01 c0             	add    rax,rax
    9599:	48 8d 50 10          	lea    rdx,[rax+0x10]
    959d:	48 8d 05 7c f7 0f 00 	lea    rax,[rip+0xff77c]        # 108d20 <arpcache>
    95a4:	48 8d 34 02          	lea    rsi,[rdx+rax*1]
    95a8:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    95ac:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    95b0:	48 89 d1             	mov    rcx,rdx
    95b3:	48 89 f2             	mov    rdx,rsi
    95b6:	48 89 c6             	mov    rsi,rax
    95b9:	48 8d 3d b8 53 00 00 	lea    rdi,[rip+0x53b8]        # e978 <_IO_stdin_used+0x1978>
    95c0:	b8 00 00 00 00       	mov    eax,0x0
    95c5:	e8 f6 8e ff ff       	call   24c0 <printf@plt>
    95ca:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    95ce:	8b 05 48 8a 00 00    	mov    eax,DWORD PTR [rip+0x8a48]        # 1201c <arp_entries>
    95d4:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    95d7:	0f 8e 45 ff ff ff    	jle    9522 <compare_entries+0x20>
    95dd:	90                   	nop
    95de:	90                   	nop
    95df:	c9                   	leave  
    95e0:	c3                   	ret    

00000000000095e1 <add_entry>:
    95e1:	f3 0f 1e fa          	endbr64 
    95e5:	55                   	push   rbp
    95e6:	48 89 e5             	mov    rbp,rsp
    95e9:	48 83 ec 20          	sub    rsp,0x20
    95ed:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    95f1:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    95f5:	8b 05 21 8a 00 00    	mov    eax,DWORD PTR [rip+0x8a21]        # 1201c <arp_entries>
    95fb:	83 c0 01             	add    eax,0x1
    95fe:	89 05 18 8a 00 00    	mov    DWORD PTR [rip+0x8a18],eax        # 1201c <arp_entries>
    9604:	8b 05 12 8a 00 00    	mov    eax,DWORD PTR [rip+0x8a12]        # 1201c <arp_entries>
    960a:	48 63 d0             	movsxd rdx,eax
    960d:	48 89 d0             	mov    rax,rdx
    9610:	48 c1 e0 04          	shl    rax,0x4
    9614:	48 01 d0             	add    rax,rdx
    9617:	48 01 c0             	add    rax,rax
    961a:	48 8d 15 ff f6 0f 00 	lea    rdx,[rip+0xff6ff]        # 108d20 <arpcache>
    9621:	48 01 d0             	add    rax,rdx
    9624:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9628:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    962c:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    9630:	48 89 d6             	mov    rsi,rdx
    9633:	48 89 c7             	mov    rdi,rax
    9636:	e8 65 90 ff ff       	call   26a0 <strcpy@plt>
    963b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    963f:	48 8d 50 10          	lea    rdx,[rax+0x10]
    9643:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    9647:	48 89 c6             	mov    rsi,rax
    964a:	48 89 d7             	mov    rdi,rdx
    964d:	e8 4e 90 ff ff       	call   26a0 <strcpy@plt>
    9652:	90                   	nop
    9653:	c9                   	leave  
    9654:	c3                   	ret    

0000000000009655 <entry_exists>:
    9655:	f3 0f 1e fa          	endbr64 
    9659:	55                   	push   rbp
    965a:	48 89 e5             	mov    rbp,rsp
    965d:	48 83 ec 20          	sub    rsp,0x20
    9661:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    9665:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    9669:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    9670:	eb 6d                	jmp    96df <entry_exists+0x8a>
    9672:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    9675:	48 63 d0             	movsxd rdx,eax
    9678:	48 89 d0             	mov    rax,rdx
    967b:	48 c1 e0 04          	shl    rax,0x4
    967f:	48 01 d0             	add    rax,rdx
    9682:	48 01 c0             	add    rax,rax
    9685:	48 8d 15 94 f6 0f 00 	lea    rdx,[rip+0xff694]        # 108d20 <arpcache>
    968c:	48 01 c2             	add    rdx,rax
    968f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9693:	48 89 c6             	mov    rsi,rax
    9696:	48 89 d7             	mov    rdi,rdx
    9699:	e8 53 00 00 00       	call   96f1 <compare_ip_entry>
    969e:	85 c0                	test   eax,eax
    96a0:	75 39                	jne    96db <entry_exists+0x86>
    96a2:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    96a5:	48 63 d0             	movsxd rdx,eax
    96a8:	48 89 d0             	mov    rax,rdx
    96ab:	48 c1 e0 04          	shl    rax,0x4
    96af:	48 01 d0             	add    rax,rdx
    96b2:	48 01 c0             	add    rax,rax
    96b5:	48 8d 50 10          	lea    rdx,[rax+0x10]
    96b9:	48 8d 05 60 f6 0f 00 	lea    rax,[rip+0xff660]        # 108d20 <arpcache>
    96c0:	48 01 c2             	add    rdx,rax
    96c3:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    96c7:	48 89 c6             	mov    rsi,rax
    96ca:	48 89 d7             	mov    rdi,rdx
    96cd:	e8 48 00 00 00       	call   971a <compare_mac_entry>
    96d2:	85 c0                	test   eax,eax
    96d4:	75 05                	jne    96db <entry_exists+0x86>
    96d6:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    96d9:	eb 14                	jmp    96ef <entry_exists+0x9a>
    96db:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    96df:	8b 05 37 89 00 00    	mov    eax,DWORD PTR [rip+0x8937]        # 1201c <arp_entries>
    96e5:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    96e8:	7e 88                	jle    9672 <entry_exists+0x1d>
    96ea:	b8 ff ff ff ff       	mov    eax,0xffffffff
    96ef:	c9                   	leave  
    96f0:	c3                   	ret    

00000000000096f1 <compare_ip_entry>:
    96f1:	f3 0f 1e fa          	endbr64 
    96f5:	55                   	push   rbp
    96f6:	48 89 e5             	mov    rbp,rsp
    96f9:	48 83 ec 10          	sub    rsp,0x10
    96fd:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9701:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    9705:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    9709:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    970d:	48 89 d6             	mov    rsi,rdx
    9710:	48 89 c7             	mov    rdi,rax
    9713:	e8 c8 90 ff ff       	call   27e0 <strcmp@plt>
    9718:	c9                   	leave  
    9719:	c3                   	ret    

000000000000971a <compare_mac_entry>:
    971a:	f3 0f 1e fa          	endbr64 
    971e:	55                   	push   rbp
    971f:	48 89 e5             	mov    rbp,rsp
    9722:	48 83 ec 10          	sub    rsp,0x10
    9726:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    972a:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    972e:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    9732:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9736:	48 89 d6             	mov    rsi,rdx
    9739:	48 89 c7             	mov    rdi,rax
    973c:	e8 9f 90 ff ff       	call   27e0 <strcmp@plt>
    9741:	c9                   	leave  
    9742:	c3                   	ret    

0000000000009743 <load_csv_arp_cache>:
    9743:	f3 0f 1e fa          	endbr64 
    9747:	55                   	push   rbp
    9748:	48 89 e5             	mov    rbp,rsp
    974b:	53                   	push   rbx
    974c:	48 83 ec 68          	sub    rsp,0x68
    9750:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9757:	00 00 
    9759:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    975d:	31 c0                	xor    eax,eax
    975f:	48 8d 35 48 52 00 00 	lea    rsi,[rip+0x5248]        # e9ae <_IO_stdin_used+0x19ae>
    9766:	48 8d 3d 43 52 00 00 	lea    rdi,[rip+0x5243]        # e9b0 <_IO_stdin_used+0x19b0>
    976d:	e8 9e 8f ff ff       	call   2710 <fopen@plt>
    9772:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    9776:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
    977b:	75 22                	jne    979f <load_csv_arp_cache+0x5c>
    977d:	48 8d 3d 4c 52 00 00 	lea    rdi,[rip+0x524c]        # e9d0 <_IO_stdin_used+0x19d0>
    9784:	e8 d7 90 ff ff       	call   2860 <puts@plt>
    9789:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    978d:	48 89 c7             	mov    rdi,rax
    9790:	e8 2b 8f ff ff       	call   26c0 <fclose@plt>
    9795:	b8 ff ff ff ff       	mov    eax,0xffffffff
    979a:	e9 dd 00 00 00       	jmp    987c <load_csv_arp_cache+0x139>
    979f:	48 c7 45 98 00 00 00 	mov    QWORD PTR [rbp-0x68],0x0
    97a6:	00 
    97a7:	48 c7 45 a0 00 00 00 	mov    QWORD PTR [rbp-0x60],0x0
    97ae:	00 
    97af:	eb 7c                	jmp    982d <load_csv_arp_cache+0xea>
    97b1:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    97b5:	48 85 c0             	test   rax,rax
    97b8:	0f 84 97 00 00 00    	je     9855 <load_csv_arp_cache+0x112>
    97be:	48 8b 5d 98          	mov    rbx,QWORD PTR [rbp-0x68]
    97c2:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    97c6:	48 8d 35 3c 52 00 00 	lea    rsi,[rip+0x523c]        # ea09 <_IO_stdin_used+0x1a09>
    97cd:	48 89 c7             	mov    rdi,rax
    97d0:	e8 0b 8d ff ff       	call   24e0 <strcspn@plt>
    97d5:	48 01 d8             	add    rax,rbx
    97d8:	c6 00 00             	mov    BYTE PTR [rax],0x0
    97db:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    97df:	48 8d 35 25 52 00 00 	lea    rsi,[rip+0x5225]        # ea0b <_IO_stdin_used+0x1a0b>
    97e6:	48 89 c7             	mov    rdi,rax
    97e9:	e8 92 90 ff ff       	call   2880 <strtok@plt>
    97ee:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    97f2:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    97f6:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    97fa:	48 89 d6             	mov    rsi,rdx
    97fd:	48 89 c7             	mov    rdi,rax
    9800:	e8 9b 8e ff ff       	call   26a0 <strcpy@plt>
    9805:	48 8d 35 ff 51 00 00 	lea    rsi,[rip+0x51ff]        # ea0b <_IO_stdin_used+0x1a0b>
    980c:	bf 00 00 00 00       	mov    edi,0x0
    9811:	e8 6a 90 ff ff       	call   2880 <strtok@plt>
    9816:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    981a:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    981e:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    9822:	48 89 d6             	mov    rsi,rdx
    9825:	48 89 c7             	mov    rdi,rax
    9828:	e8 73 8e ff ff       	call   26a0 <strcpy@plt>
    982d:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    9831:	48 8d 4d a0          	lea    rcx,[rbp-0x60]
    9835:	48 8d 45 98          	lea    rax,[rbp-0x68]
    9839:	48 89 ce             	mov    rsi,rcx
    983c:	48 89 c7             	mov    rdi,rax
    983f:	e8 2c 8f ff ff       	call   2770 <getline@plt>
    9844:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    9848:	48 83 7d b0 ff       	cmp    QWORD PTR [rbp-0x50],0xffffffffffffffff
    984d:	0f 85 5e ff ff ff    	jne    97b1 <load_csv_arp_cache+0x6e>
    9853:	eb 01                	jmp    9856 <load_csv_arp_cache+0x113>
    9855:	90                   	nop
    9856:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    985a:	48 85 c0             	test   rax,rax
    985d:	74 0c                	je     986b <load_csv_arp_cache+0x128>
    985f:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    9863:	48 89 c7             	mov    rdi,rax
    9866:	e8 c5 8e ff ff       	call   2730 <free@plt>
    986b:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    986f:	48 89 c7             	mov    rdi,rax
    9872:	e8 49 8e ff ff       	call   26c0 <fclose@plt>
    9877:	b8 01 00 00 00       	mov    eax,0x1
    987c:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    9880:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    9887:	00 00 
    9889:	74 05                	je     9890 <load_csv_arp_cache+0x14d>
    988b:	e8 40 8e ff ff       	call   26d0 <__stack_chk_fail@plt>
    9890:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    9894:	c9                   	leave  
    9895:	c3                   	ret    

0000000000009896 <callback>:
    9896:	f3 0f 1e fa          	endbr64 
    989a:	55                   	push   rbp
    989b:	48 89 e5             	mov    rbp,rsp
    989e:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    98a2:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
    98a5:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    98a9:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    98ad:	b8 00 00 00 00       	mov    eax,0x0
    98b2:	5d                   	pop    rbp
    98b3:	c3                   	ret    

00000000000098b4 <update_db>:
    98b4:	f3 0f 1e fa          	endbr64 
    98b8:	55                   	push   rbp
    98b9:	48 89 e5             	mov    rbp,rsp
    98bc:	48 81 ec 40 02 00 00 	sub    rsp,0x240
    98c3:	48 89 bd c8 fd ff ff 	mov    QWORD PTR [rbp-0x238],rdi
    98ca:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    98d1:	00 00 
    98d3:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    98d7:	31 c0                	xor    eax,eax
    98d9:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    98e0:	48 89 85 e8 fd ff ff 	mov    QWORD PTR [rbp-0x218],rax
    98e7:	48 8d 3d 22 51 00 00 	lea    rdi,[rip+0x5122]        # ea10 <_IO_stdin_used+0x1a10>
    98ee:	e8 6d 8f ff ff       	call   2860 <puts@plt>
    98f3:	48 c7 85 d8 fd ff ff 	mov    QWORD PTR [rbp-0x228],0x0
    98fa:	00 00 00 00 
    98fe:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    9905:	48 89 c6             	mov    rsi,rax
    9908:	48 8d 3d 31 16 10 00 	lea    rdi,[rip+0x101631]        # 10af40 <sqlite_db_path>
    990f:	e8 ac 8f ff ff       	call   28c0 <sqlite3_open@plt>
    9914:	89 85 d4 fd ff ff    	mov    DWORD PTR [rbp-0x22c],eax
    991a:	83 bd d4 fd ff ff 00 	cmp    DWORD PTR [rbp-0x22c],0x0
    9921:	74 28                	je     994b <update_db+0x97>
    9923:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    992a:	48 89 c7             	mov    rdi,rax
    992d:	e8 7e 8d ff ff       	call   26b0 <sqlite3_errmsg@plt>
    9932:	48 89 c6             	mov    rsi,rax
    9935:	48 8d 3d e0 50 00 00 	lea    rdi,[rip+0x50e0]        # ea1c <_IO_stdin_used+0x1a1c>
    993c:	b8 00 00 00 00       	mov    eax,0x0
    9941:	e8 7a 8b ff ff       	call   24c0 <printf@plt>
    9946:	e9 a2 00 00 00       	jmp    99ed <update_db+0x139>
    994b:	48 8b 85 e8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x218]
    9952:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    9955:	85 c0                	test   eax,eax
    9957:	75 2e                	jne    9987 <update_db+0xd3>
    9959:	48 8b 85 e8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x218]
    9960:	48 8d 48 10          	lea    rcx,[rax+0x10]
    9964:	48 8b 95 e8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x218]
    996b:	48 8d 85 f0 fd ff ff 	lea    rax,[rbp-0x210]
    9972:	48 8d 35 b7 50 00 00 	lea    rsi,[rip+0x50b7]        # ea30 <_IO_stdin_used+0x1a30>
    9979:	48 89 c7             	mov    rdi,rax
    997c:	b8 00 00 00 00       	mov    eax,0x0
    9981:	e8 7a 8b ff ff       	call   2500 <sprintf@plt>
    9986:	90                   	nop
    9987:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    998e:	48 8d 95 d8 fd ff ff 	lea    rdx,[rbp-0x228]
    9995:	48 8d b5 f0 fd ff ff 	lea    rsi,[rbp-0x210]
    999c:	49 89 d0             	mov    r8,rdx
    999f:	b9 00 00 00 00       	mov    ecx,0x0
    99a4:	ba 00 00 00 00       	mov    edx,0x0
    99a9:	48 89 c7             	mov    rdi,rax
    99ac:	e8 ef 8d ff ff       	call   27a0 <sqlite3_exec@plt>
    99b1:	89 85 d4 fd ff ff    	mov    DWORD PTR [rbp-0x22c],eax
    99b7:	83 bd d4 fd ff ff 00 	cmp    DWORD PTR [rbp-0x22c],0x0
    99be:	74 2c                	je     99ec <update_db+0x138>
    99c0:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    99c7:	48 89 c6             	mov    rsi,rax
    99ca:	48 8d 3d a4 50 00 00 	lea    rdi,[rip+0x50a4]        # ea75 <_IO_stdin_used+0x1a75>
    99d1:	b8 00 00 00 00       	mov    eax,0x0
    99d6:	e8 e5 8a ff ff       	call   24c0 <printf@plt>
    99db:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    99e2:	48 89 c7             	mov    rdi,rax
    99e5:	e8 76 8d ff ff       	call   2760 <sqlite3_free@plt>
    99ea:	eb 01                	jmp    99ed <update_db+0x139>
    99ec:	90                   	nop
    99ed:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    99f4:	48 89 c7             	mov    rdi,rax
    99f7:	e8 e4 8b ff ff       	call   25e0 <sqlite3_close@plt>
    99fc:	b8 01 00 00 00       	mov    eax,0x1
    9a01:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    9a05:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    9a0c:	00 00 
    9a0e:	74 05                	je     9a15 <update_db+0x161>
    9a10:	e8 bb 8c ff ff       	call   26d0 <__stack_chk_fail@plt>
    9a15:	c9                   	leave  
    9a16:	c3                   	ret    

0000000000009a17 <update_spi_db>:
    9a17:	f3 0f 1e fa          	endbr64 
    9a1b:	55                   	push   rbp
    9a1c:	48 89 e5             	mov    rbp,rsp
    9a1f:	41 57                	push   r15
    9a21:	41 56                	push   r14
    9a23:	41 55                	push   r13
    9a25:	41 54                	push   r12
    9a27:	53                   	push   rbx
    9a28:	48 81 ec 48 04 00 00 	sub    rsp,0x448
    9a2f:	48 89 bd 98 fb ff ff 	mov    QWORD PTR [rbp-0x468],rdi
    9a36:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9a3d:	00 00 
    9a3f:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    9a43:	31 c0                	xor    eax,eax
    9a45:	48 8b 85 98 fb ff ff 	mov    rax,QWORD PTR [rbp-0x468]
    9a4c:	48 89 85 b0 fb ff ff 	mov    QWORD PTR [rbp-0x450],rax
    9a53:	48 8d 85 a0 fb ff ff 	lea    rax,[rbp-0x460]
    9a5a:	48 89 c6             	mov    rsi,rax
    9a5d:	48 8d 3d 2f 50 00 00 	lea    rdi,[rip+0x502f]        # ea93 <_IO_stdin_used+0x1a93>
    9a64:	e8 57 8e ff ff       	call   28c0 <sqlite3_open@plt>
    9a69:	85 c0                	test   eax,eax
    9a6b:	74 3c                	je     9aa9 <update_spi_db+0x92>
    9a6d:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    9a74:	48 89 c7             	mov    rdi,rax
    9a77:	e8 34 8c ff ff       	call   26b0 <sqlite3_errmsg@plt>
    9a7c:	48 89 c6             	mov    rsi,rax
    9a7f:	48 8d 3d 25 50 00 00 	lea    rdi,[rip+0x5025]        # eaab <_IO_stdin_used+0x1aab>
    9a86:	b8 00 00 00 00       	mov    eax,0x0
    9a8b:	e8 30 8a ff ff       	call   24c0 <printf@plt>
    9a90:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    9a97:	48 89 c7             	mov    rdi,rax
    9a9a:	e8 41 8b ff ff       	call   25e0 <sqlite3_close@plt>
    9a9f:	b8 00 00 00 00       	mov    eax,0x0
    9aa4:	e9 59 01 00 00       	jmp    9c02 <update_spi_db+0x1eb>
    9aa9:	48 8d 05 10 50 00 00 	lea    rax,[rip+0x5010]        # eac0 <_IO_stdin_used+0x1ac0>
    9ab0:	48 89 85 b8 fb ff ff 	mov    QWORD PTR [rbp-0x448],rax
    9ab7:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    9abe:	8b 50 7c             	mov    edx,DWORD PTR [rax+0x7c]
    9ac1:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    9ac8:	44 8b 78 78          	mov    r15d,DWORD PTR [rax+0x78]
    9acc:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    9ad3:	4c 8b b0 98 00 00 00 	mov    r14,QWORD PTR [rax+0x98]
    9ada:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    9ae1:	4c 8b a8 90 00 00 00 	mov    r13,QWORD PTR [rax+0x90]
    9ae8:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    9aef:	44 8b a0 a8 00 00 00 	mov    r12d,DWORD PTR [rax+0xa8]
    9af6:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    9afd:	8b 98 a4 00 00 00    	mov    ebx,DWORD PTR [rax+0xa4]
    9b03:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    9b0a:	48 8b 40 70          	mov    rax,QWORD PTR [rax+0x70]
    9b0e:	44 8b 18             	mov    r11d,DWORD PTR [rax]
    9b11:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    9b18:	44 8b 50 60          	mov    r10d,DWORD PTR [rax+0x60]
    9b1c:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    9b23:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
    9b27:	44 8b 08             	mov    r9d,DWORD PTR [rax]
    9b2a:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    9b31:	44 8b 40 5c          	mov    r8d,DWORD PTR [rax+0x5c]
    9b35:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    9b3c:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    9b3f:	89 85 94 fb ff ff    	mov    DWORD PTR [rbp-0x46c],eax
    9b45:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    9b4c:	8b 48 54             	mov    ecx,DWORD PTR [rax+0x54]
    9b4f:	89 8d 90 fb ff ff    	mov    DWORD PTR [rbp-0x470],ecx
    9b55:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    9b5c:	48 8d 48 29          	lea    rcx,[rax+0x29]
    9b60:	48 8b bd b0 fb ff ff 	mov    rdi,QWORD PTR [rbp-0x450]
    9b67:	48 8b b5 b8 fb ff ff 	mov    rsi,QWORD PTR [rbp-0x448]
    9b6e:	48 8d 85 c0 fb ff ff 	lea    rax,[rbp-0x440]
    9b75:	52                   	push   rdx
    9b76:	41 57                	push   r15
    9b78:	41 56                	push   r14
    9b7a:	41 55                	push   r13
    9b7c:	41 54                	push   r12
    9b7e:	53                   	push   rbx
    9b7f:	41 53                	push   r11
    9b81:	41 52                	push   r10
    9b83:	41 51                	push   r9
    9b85:	41 50                	push   r8
    9b87:	44 8b 8d 94 fb ff ff 	mov    r9d,DWORD PTR [rbp-0x46c]
    9b8e:	44 8b 85 90 fb ff ff 	mov    r8d,DWORD PTR [rbp-0x470]
    9b95:	48 89 fa             	mov    rdx,rdi
    9b98:	48 89 c7             	mov    rdi,rax
    9b9b:	b8 00 00 00 00       	mov    eax,0x0
    9ba0:	e8 5b 89 ff ff       	call   2500 <sprintf@plt>
    9ba5:	48 83 c4 50          	add    rsp,0x50
    9ba9:	48 c7 85 a8 fb ff ff 	mov    QWORD PTR [rbp-0x458],0x0
    9bb0:	00 00 00 00 
    9bb4:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    9bbb:	48 8d 95 a8 fb ff ff 	lea    rdx,[rbp-0x458]
    9bc2:	48 8d b5 c0 fb ff ff 	lea    rsi,[rbp-0x440]
    9bc9:	49 89 d0             	mov    r8,rdx
    9bcc:	b9 00 00 00 00       	mov    ecx,0x0
    9bd1:	ba 00 00 00 00       	mov    edx,0x0
    9bd6:	48 89 c7             	mov    rdi,rax
    9bd9:	e8 c2 8b ff ff       	call   27a0 <sqlite3_exec@plt>
    9bde:	85 c0                	test   eax,eax
    9be0:	74 1b                	je     9bfd <update_spi_db+0x1e6>
    9be2:	48 8b 85 a8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x458]
    9be9:	48 89 c6             	mov    rsi,rax
    9bec:	48 8d 3d ba 4f 00 00 	lea    rdi,[rip+0x4fba]        # ebad <_IO_stdin_used+0x1bad>
    9bf3:	b8 00 00 00 00       	mov    eax,0x0
    9bf8:	e8 c3 88 ff ff       	call   24c0 <printf@plt>
    9bfd:	b8 00 00 00 00       	mov    eax,0x0
    9c02:	48 8b 5d c8          	mov    rbx,QWORD PTR [rbp-0x38]
    9c06:	64 48 2b 1c 25 28 00 	sub    rbx,QWORD PTR fs:0x28
    9c0d:	00 00 
    9c0f:	74 05                	je     9c16 <update_spi_db+0x1ff>
    9c11:	e8 ba 8a ff ff       	call   26d0 <__stack_chk_fail@plt>
    9c16:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    9c1a:	5b                   	pop    rbx
    9c1b:	41 5c                	pop    r12
    9c1d:	41 5d                	pop    r13
    9c1f:	41 5e                	pop    r14
    9c21:	41 5f                	pop    r15
    9c23:	5d                   	pop    rbp
    9c24:	c3                   	ret    

0000000000009c25 <http_disect>:
    9c25:	f3 0f 1e fa          	endbr64 
    9c29:	55                   	push   rbp
    9c2a:	48 89 e5             	mov    rbp,rsp
    9c2d:	48 81 ec 30 04 00 00 	sub    rsp,0x430
    9c34:	48 89 bd d8 fb ff ff 	mov    QWORD PTR [rbp-0x428],rdi
    9c3b:	48 89 b5 d0 fb ff ff 	mov    QWORD PTR [rbp-0x430],rsi
    9c42:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9c49:	00 00 
    9c4b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9c4f:	31 c0                	xor    eax,eax
    9c51:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    9c58:	be 0d 00 00 00       	mov    esi,0xd
    9c5d:	48 89 c7             	mov    rdi,rax
    9c60:	e8 15 99 ff ff       	call   357a <strloc>
    9c65:	89 85 ec fb ff ff    	mov    DWORD PTR [rbp-0x414],eax
    9c6b:	48 8d 3d 59 4f 00 00 	lea    rdi,[rip+0x4f59]        # ebcb <_IO_stdin_used+0x1bcb>
    9c72:	e8 e9 8b ff ff       	call   2860 <puts@plt>
    9c77:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    9c7e:	48 89 c7             	mov    rdi,rax
    9c81:	e8 9b 99 ff ff       	call   3621 <test_string_arr_print>
    9c86:	83 f0 01             	xor    eax,0x1
    9c89:	84 c0                	test   al,al
    9c8b:	75 33                	jne    9cc0 <http_disect+0x9b>
    9c8d:	8b 85 ec fb ff ff    	mov    eax,DWORD PTR [rbp-0x414]
    9c93:	48 63 d0             	movsxd rdx,eax
    9c96:	48 8b 8d d8 fb ff ff 	mov    rcx,QWORD PTR [rbp-0x428]
    9c9d:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    9ca4:	48 89 ce             	mov    rsi,rcx
    9ca7:	48 89 c7             	mov    rdi,rax
    9caa:	e8 41 89 ff ff       	call   25f0 <strncpy@plt>
    9caf:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    9cb6:	48 89 c7             	mov    rdi,rax
    9cb9:	e8 a2 8b ff ff       	call   2860 <puts@plt>
    9cbe:	eb 01                	jmp    9cc1 <http_disect+0x9c>
    9cc0:	90                   	nop
    9cc1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9cc5:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    9ccc:	00 00 
    9cce:	74 05                	je     9cd5 <http_disect+0xb0>
    9cd0:	e8 fb 89 ff ff       	call   26d0 <__stack_chk_fail@plt>
    9cd5:	c9                   	leave  
    9cd6:	c3                   	ret    

0000000000009cd7 <dns_disect>:
    9cd7:	f3 0f 1e fa          	endbr64 
    9cdb:	55                   	push   rbp
    9cdc:	48 89 e5             	mov    rbp,rsp
    9cdf:	48 83 ec 30          	sub    rsp,0x30
    9ce3:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    9ce7:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    9ceb:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9cef:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    9cf3:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9cf7:	48 83 c0 0c          	add    rax,0xc
    9cfb:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    9cff:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9d03:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    9d07:	66 85 c0             	test   ax,ax
    9d0a:	75 6d                	jne    9d79 <dns_disect+0xa2>
    9d0c:	bf 00 04 00 00       	mov    edi,0x400
    9d11:	e8 7a 8a ff ff       	call   2790 <malloc@plt>
    9d16:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9d1a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9d1e:	ba 08 00 00 00       	mov    edx,0x8
    9d23:	be 00 00 00 00       	mov    esi,0x0
    9d28:	48 89 c7             	mov    rdi,rax
    9d2b:	e8 e0 88 ff ff       	call   2610 <memset@plt>
    9d30:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    9d34:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9d38:	48 89 d6             	mov    rsi,rdx
    9d3b:	48 89 c7             	mov    rdi,rax
    9d3e:	e8 39 00 00 00       	call   9d7c <get_dns_name>
    9d43:	0f b6 05 1a 12 10 00 	movzx  eax,BYTE PTR [rip+0x10121a]        # 10af64 <packet_print>
    9d4a:	84 c0                	test   al,al
    9d4c:	74 18                	je     9d66 <dns_disect+0x8f>
    9d4e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9d52:	48 89 c6             	mov    rsi,rax
    9d55:	48 8d 3d 81 4e 00 00 	lea    rdi,[rip+0x4e81]        # ebdd <_IO_stdin_used+0x1bdd>
    9d5c:	b8 00 00 00 00       	mov    eax,0x0
    9d61:	e8 5a 87 ff ff       	call   24c0 <printf@plt>
    9d66:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    9d6b:	74 0c                	je     9d79 <dns_disect+0xa2>
    9d6d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9d71:	48 89 c7             	mov    rdi,rax
    9d74:	e8 b7 89 ff ff       	call   2730 <free@plt>
    9d79:	90                   	nop
    9d7a:	c9                   	leave  
    9d7b:	c3                   	ret    

0000000000009d7c <get_dns_name>:
    9d7c:	f3 0f 1e fa          	endbr64 
    9d80:	55                   	push   rbp
    9d81:	48 89 e5             	mov    rbp,rsp
    9d84:	53                   	push   rbx
    9d85:	48 83 ec 28          	sub    rsp,0x28
    9d89:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    9d8d:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    9d91:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    9d98:	eb 57                	jmp    9df1 <get_dns_name+0x75>
    9d9a:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9d9d:	48 63 d0             	movsxd rdx,eax
    9da0:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9da4:	48 01 d0             	add    rax,rdx
    9da7:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9daa:	3c 20                	cmp    al,0x20
    9dac:	7e 24                	jle    9dd2 <get_dns_name+0x56>
    9dae:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9db1:	48 63 d0             	movsxd rdx,eax
    9db4:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9db8:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    9dbc:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9dc0:	ba 01 00 00 00       	mov    edx,0x1
    9dc5:	48 89 ce             	mov    rsi,rcx
    9dc8:	48 89 c7             	mov    rdi,rax
    9dcb:	e8 50 88 ff ff       	call   2620 <strncat@plt>
    9dd0:	eb 1b                	jmp    9ded <get_dns_name+0x71>
    9dd2:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9dd6:	48 89 c7             	mov    rdi,rax
    9dd9:	e8 c2 87 ff ff       	call   25a0 <strlen@plt>
    9dde:	48 89 c2             	mov    rdx,rax
    9de1:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9de5:	48 01 d0             	add    rax,rdx
    9de8:	66 c7 00 2e 00       	mov    WORD PTR [rax],0x2e
    9ded:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    9df1:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9df4:	48 63 d8             	movsxd rbx,eax
    9df7:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9dfb:	48 89 c7             	mov    rdi,rax
    9dfe:	e8 9d 87 ff ff       	call   25a0 <strlen@plt>
    9e03:	48 39 c3             	cmp    rbx,rax
    9e06:	72 92                	jb     9d9a <get_dns_name+0x1e>
    9e08:	90                   	nop
    9e09:	90                   	nop
    9e0a:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    9e0e:	c9                   	leave  
    9e0f:	c3                   	ret    

0000000000009e10 <ftp_disect>:
    9e10:	f3 0f 1e fa          	endbr64 
    9e14:	55                   	push   rbp
    9e15:	48 89 e5             	mov    rbp,rsp
    9e18:	48 83 ec 20          	sub    rsp,0x20
    9e1c:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    9e20:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    9e24:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9e28:	48 8d 35 b9 4d 00 00 	lea    rsi,[rip+0x4db9]        # ebe8 <_IO_stdin_used+0x1be8>
    9e2f:	48 89 c7             	mov    rdi,rax
    9e32:	e8 d9 86 ff ff       	call   2510 <strstr@plt>
    9e37:	48 85 c0             	test   rax,rax
    9e3a:	75 1c                	jne    9e58 <ftp_disect+0x48>
    9e3c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9e40:	48 8d 35 b1 4d 00 00 	lea    rsi,[rip+0x4db1]        # ebf8 <_IO_stdin_used+0x1bf8>
    9e47:	48 89 c7             	mov    rdi,rax
    9e4a:	e8 c1 86 ff ff       	call   2510 <strstr@plt>
    9e4f:	48 85 c0             	test   rax,rax
    9e52:	0f 84 8a 00 00 00    	je     9ee2 <ftp_disect+0xd2>
    9e58:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    9e5c:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    9e60:	48 89 c7             	mov    rdi,rax
    9e63:	e8 f7 f3 ff ff       	call   925f <member_exists>
    9e68:	48 63 d0             	movsxd rdx,eax
    9e6b:	48 89 d0             	mov    rax,rdx
    9e6e:	48 c1 e0 02          	shl    rax,0x2
    9e72:	48 01 d0             	add    rax,rdx
    9e75:	48 c1 e0 03          	shl    rax,0x3
    9e79:	48 01 d0             	add    rax,rdx
    9e7c:	48 c1 e0 04          	shl    rax,0x4
    9e80:	48 8d 15 99 a6 0e 00 	lea    rdx,[rip+0xea699]        # f4520 <watchlist>
    9e87:	48 01 d0             	add    rax,rdx
    9e8a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9e8e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9e92:	8b 80 40 02 00 00    	mov    eax,DWORD PTR [rax+0x240]
    9e98:	8d 50 01             	lea    edx,[rax+0x1]
    9e9b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9e9f:	89 90 40 02 00 00    	mov    DWORD PTR [rax+0x240],edx
    9ea5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9ea9:	8b 80 40 02 00 00    	mov    eax,DWORD PTR [rax+0x240]
    9eaf:	83 f8 04             	cmp    eax,0x4
    9eb2:	7e 2e                	jle    9ee2 <ftp_disect+0xd2>
    9eb4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9eb8:	8b 88 40 02 00 00    	mov    ecx,DWORD PTR [rax+0x240]
    9ebe:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    9ec2:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    9ec6:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    9eca:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    9ece:	48 89 c6             	mov    rsi,rax
    9ed1:	48 8d 3d 30 4d 00 00 	lea    rdi,[rip+0x4d30]        # ec08 <_IO_stdin_used+0x1c08>
    9ed8:	b8 00 00 00 00       	mov    eax,0x0
    9edd:	e8 de 85 ff ff       	call   24c0 <printf@plt>
    9ee2:	90                   	nop
    9ee3:	c9                   	leave  
    9ee4:	c3                   	ret    

0000000000009ee5 <livedebug>:
    9ee5:	f3 0f 1e fa          	endbr64 
    9ee9:	55                   	push   rbp
    9eea:	48 89 e5             	mov    rbp,rsp
    9eed:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
    9ef4:	48 89 bd 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rdi
    9efb:	48 89 b5 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rsi
    9f02:	48 89 95 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdx
    9f09:	48 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rcx
    9f10:	4c 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r8
    9f17:	4c 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r9
    9f1e:	84 c0                	test   al,al
    9f20:	74 20                	je     9f42 <livedebug+0x5d>
    9f22:	0f 29 45 80          	movaps XMMWORD PTR [rbp-0x80],xmm0
    9f26:	0f 29 4d 90          	movaps XMMWORD PTR [rbp-0x70],xmm1
    9f2a:	0f 29 55 a0          	movaps XMMWORD PTR [rbp-0x60],xmm2
    9f2e:	0f 29 5d b0          	movaps XMMWORD PTR [rbp-0x50],xmm3
    9f32:	0f 29 65 c0          	movaps XMMWORD PTR [rbp-0x40],xmm4
    9f36:	0f 29 6d d0          	movaps XMMWORD PTR [rbp-0x30],xmm5
    9f3a:	0f 29 75 e0          	movaps XMMWORD PTR [rbp-0x20],xmm6
    9f3e:	0f 29 7d f0          	movaps XMMWORD PTR [rbp-0x10],xmm7
    9f42:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9f49:	00 00 
    9f4b:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    9f52:	31 c0                	xor    eax,eax
    9f54:	0f b6 05 c5 0f 10 00 	movzx  eax,BYTE PTR [rip+0x100fc5]        # 10af20 <debug_mode>
    9f5b:	84 c0                	test   al,al
    9f5d:	74 4b                	je     9faa <livedebug+0xc5>
    9f5f:	c7 85 30 ff ff ff 08 	mov    DWORD PTR [rbp-0xd0],0x8
    9f66:	00 00 00 
    9f69:	c7 85 34 ff ff ff 30 	mov    DWORD PTR [rbp-0xcc],0x30
    9f70:	00 00 00 
    9f73:	48 8d 45 10          	lea    rax,[rbp+0x10]
    9f77:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    9f7e:	48 8d 85 50 ff ff ff 	lea    rax,[rbp-0xb0]
    9f85:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    9f8c:	48 8d 95 30 ff ff ff 	lea    rdx,[rbp-0xd0]
    9f93:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    9f9a:	48 89 d6             	mov    rsi,rdx
    9f9d:	48 89 c7             	mov    rdi,rax
    9fa0:	b8 00 00 00 00       	mov    eax,0x0
    9fa5:	e8 16 85 ff ff       	call   24c0 <printf@plt>
    9faa:	90                   	nop
    9fab:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    9fb2:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    9fb9:	00 00 
    9fbb:	74 05                	je     9fc2 <livedebug+0xdd>
    9fbd:	e8 0e 87 ff ff       	call   26d0 <__stack_chk_fail@plt>
    9fc2:	c9                   	leave  
    9fc3:	c3                   	ret    

0000000000009fc4 <forward_packet>:
    9fc4:	f3 0f 1e fa          	endbr64 
    9fc8:	55                   	push   rbp
    9fc9:	48 89 e5             	mov    rbp,rsp
    9fcc:	48 83 ec 20          	sub    rsp,0x20
    9fd0:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    9fd4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9fd8:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    9fdc:	48 8d 35 bd ef 12 00 	lea    rsi,[rip+0x12efbd]        # 138fa0 <local_ip>
    9fe3:	48 89 c7             	mov    rdi,rax
    9fe6:	e8 f5 87 ff ff       	call   27e0 <strcmp@plt>
    9feb:	85 c0                	test   eax,eax
    9fed:	74 4f                	je     a03e <forward_packet+0x7a>
    9fef:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9ff3:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    9ff7:	48 8d 35 a2 ef 12 00 	lea    rsi,[rip+0x12efa2]        # 138fa0 <local_ip>
    9ffe:	48 89 c7             	mov    rdi,rax
    a001:	e8 da 87 ff ff       	call   27e0 <strcmp@plt>
    a006:	85 c0                	test   eax,eax
    a008:	74 34                	je     a03e <forward_packet+0x7a>
    a00a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a00e:	48 8b 00             	mov    rax,QWORD PTR [rax]
    a011:	48 8d 50 0e          	lea    rdx,[rax+0xe]
    a015:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a019:	48 89 d6             	mov    rsi,rdx
    a01c:	48 89 c7             	mov    rdi,rax
    a01f:	e8 7c 86 ff ff       	call   26a0 <strcpy@plt>
    a024:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a028:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    a02b:	83 e8 0e             	sub    eax,0xe
    a02e:	89 c2                	mov    edx,eax
    a030:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a034:	89 d6                	mov    esi,edx
    a036:	48 89 c7             	mov    rdi,rax
    a039:	e8 85 b3 ff ff       	call   53c3 <ascii_hexdump>
    a03e:	90                   	nop
    a03f:	c9                   	leave  
    a040:	c3                   	ret    

000000000000a041 <conversation_exists>:
    a041:	f3 0f 1e fa          	endbr64 
    a045:	55                   	push   rbp
    a046:	48 89 e5             	mov    rbp,rsp
    a049:	48 83 ec 20          	sub    rsp,0x20
    a04d:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    a051:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    a058:	e9 ff 00 00 00       	jmp    a15c <conversation_exists+0x11b>
    a05d:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    a060:	48 98                	cdqe   
    a062:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    a069:	48 8d 15 10 0f 10 00 	lea    rdx,[rip+0x100f10]        # 10af80 <spi_table>
    a070:	48 01 d0             	add    rax,rdx
    a073:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    a077:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a07b:	0f b6 80 b0 00 00 00 	movzx  eax,BYTE PTR [rax+0xb0]
    a082:	84 c0                	test   al,al
    a084:	0f 84 ce 00 00 00    	je     a158 <conversation_exists+0x117>
    a08a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a08e:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    a091:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a095:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    a098:	39 c2                	cmp    edx,eax
    a09a:	75 58                	jne    a0f4 <conversation_exists+0xb3>
    a09c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a0a0:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    a0a3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a0a7:	8b 40 54             	mov    eax,DWORD PTR [rax+0x54]
    a0aa:	39 c2                	cmp    edx,eax
    a0ac:	75 46                	jne    a0f4 <conversation_exists+0xb3>
    a0ae:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a0b2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a0b6:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    a0ba:	48 89 d6             	mov    rsi,rdx
    a0bd:	48 89 c7             	mov    rdi,rax
    a0c0:	e8 1b 87 ff ff       	call   27e0 <strcmp@plt>
    a0c5:	85 c0                	test   eax,eax
    a0c7:	0f 85 8a 00 00 00    	jne    a157 <conversation_exists+0x116>
    a0cd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a0d1:	48 8d 50 29          	lea    rdx,[rax+0x29]
    a0d5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a0d9:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    a0dd:	48 89 d6             	mov    rsi,rdx
    a0e0:	48 89 c7             	mov    rdi,rax
    a0e3:	e8 f8 86 ff ff       	call   27e0 <strcmp@plt>
    a0e8:	85 c0                	test   eax,eax
    a0ea:	75 6b                	jne    a157 <conversation_exists+0x116>
    a0ec:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    a0ef:	e9 81 00 00 00       	jmp    a175 <conversation_exists+0x134>
    a0f4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a0f8:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    a0fb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a0ff:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    a102:	39 c2                	cmp    edx,eax
    a104:	75 52                	jne    a158 <conversation_exists+0x117>
    a106:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a10a:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    a10d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a111:	8b 40 54             	mov    eax,DWORD PTR [rax+0x54]
    a114:	39 c2                	cmp    edx,eax
    a116:	75 40                	jne    a158 <conversation_exists+0x117>
    a118:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a11c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a120:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    a124:	48 89 d6             	mov    rsi,rdx
    a127:	48 89 c7             	mov    rdi,rax
    a12a:	e8 b1 86 ff ff       	call   27e0 <strcmp@plt>
    a12f:	85 c0                	test   eax,eax
    a131:	75 25                	jne    a158 <conversation_exists+0x117>
    a133:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a137:	48 8d 50 29          	lea    rdx,[rax+0x29]
    a13b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a13f:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    a143:	48 89 d6             	mov    rsi,rdx
    a146:	48 89 c7             	mov    rdi,rax
    a149:	e8 92 86 ff ff       	call   27e0 <strcmp@plt>
    a14e:	85 c0                	test   eax,eax
    a150:	75 06                	jne    a158 <conversation_exists+0x117>
    a152:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    a155:	eb 1e                	jmp    a175 <conversation_exists+0x134>
    a157:	90                   	nop
    a158:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    a15c:	8b 05 c2 7e 00 00    	mov    eax,DWORD PTR [rip+0x7ec2]        # 12024 <total_conversations>
    a162:	8d 50 01             	lea    edx,[rax+0x1]
    a165:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    a168:	39 c2                	cmp    edx,eax
    a16a:	0f 87 ed fe ff ff    	ja     a05d <conversation_exists+0x1c>
    a170:	b8 ff ff ff ff       	mov    eax,0xffffffff
    a175:	c9                   	leave  
    a176:	c3                   	ret    

000000000000a177 <get_new_spi_location>:
    a177:	f3 0f 1e fa          	endbr64 
    a17b:	55                   	push   rbp
    a17c:	48 89 e5             	mov    rbp,rsp
    a17f:	8b 05 9f 7e 00 00    	mov    eax,DWORD PTR [rip+0x7e9f]        # 12024 <total_conversations>
    a185:	83 f8 ff             	cmp    eax,0xffffffff
    a188:	75 17                	jne    a1a1 <get_new_spi_location+0x2a>
    a18a:	8b 05 94 7e 00 00    	mov    eax,DWORD PTR [rip+0x7e94]        # 12024 <total_conversations>
    a190:	83 c0 01             	add    eax,0x1
    a193:	89 05 8b 7e 00 00    	mov    DWORD PTR [rip+0x7e8b],eax        # 12024 <total_conversations>
    a199:	8b 05 85 7e 00 00    	mov    eax,DWORD PTR [rip+0x7e85]        # 12024 <total_conversations>
    a19f:	eb 52                	jmp    a1f3 <get_new_spi_location+0x7c>
    a1a1:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    a1a8:	eb 27                	jmp    a1d1 <get_new_spi_location+0x5a>
    a1aa:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    a1ad:	48 98                	cdqe   
    a1af:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    a1b6:	48 8d 15 73 0e 10 00 	lea    rdx,[rip+0x100e73]        # 10b030 <spi_table+0xb0>
    a1bd:	0f b6 04 10          	movzx  eax,BYTE PTR [rax+rdx*1]
    a1c1:	83 f0 01             	xor    eax,0x1
    a1c4:	84 c0                	test   al,al
    a1c6:	74 05                	je     a1cd <get_new_spi_location+0x56>
    a1c8:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    a1cb:	eb 26                	jmp    a1f3 <get_new_spi_location+0x7c>
    a1cd:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    a1d1:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
    a1d4:	8b 05 4a 7e 00 00    	mov    eax,DWORD PTR [rip+0x7e4a]        # 12024 <total_conversations>
    a1da:	39 c2                	cmp    edx,eax
    a1dc:	72 cc                	jb     a1aa <get_new_spi_location+0x33>
    a1de:	8b 05 40 7e 00 00    	mov    eax,DWORD PTR [rip+0x7e40]        # 12024 <total_conversations>
    a1e4:	83 c0 01             	add    eax,0x1
    a1e7:	89 05 37 7e 00 00    	mov    DWORD PTR [rip+0x7e37],eax        # 12024 <total_conversations>
    a1ed:	8b 05 31 7e 00 00    	mov    eax,DWORD PTR [rip+0x7e31]        # 12024 <total_conversations>
    a1f3:	5d                   	pop    rbp
    a1f4:	c3                   	ret    

000000000000a1f5 <add_new_conversation>:
    a1f5:	f3 0f 1e fa          	endbr64 
    a1f9:	55                   	push   rbp
    a1fa:	48 89 e5             	mov    rbp,rsp
    a1fd:	48 83 ec 20          	sub    rsp,0x20
    a201:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    a205:	0f b6 05 c6 ed 12 00 	movzx  eax,BYTE PTR [rip+0x12edc6]        # 138fd2 <use_spi>
    a20c:	84 c0                	test   al,al
    a20e:	0f 84 08 02 00 00    	je     a41c <add_new_conversation+0x227>
    a214:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a218:	48 89 c7             	mov    rdi,rax
    a21b:	e8 21 fe ff ff       	call   a041 <conversation_exists>
    a220:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    a223:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    a227:	0f 84 82 00 00 00    	je     a2af <add_new_conversation+0xba>
    a22d:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    a230:	48 98                	cdqe   
    a232:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    a239:	48 8d 15 40 0d 10 00 	lea    rdx,[rip+0x100d40]        # 10af80 <spi_table>
    a240:	48 01 d0             	add    rax,rdx
    a243:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    a247:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a24b:	8b 80 ac 00 00 00    	mov    eax,DWORD PTR [rax+0xac]
    a251:	8d 50 01             	lea    edx,[rax+0x1]
    a254:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a258:	89 90 ac 00 00 00    	mov    DWORD PTR [rax+0xac],edx
    a25e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a262:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    a265:	8d 50 01             	lea    edx,[rax+0x1]
    a268:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a26c:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    a26f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a273:	8b 78 54             	mov    edi,DWORD PTR [rax+0x54]
    a276:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    a27a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a27e:	8b 50 58             	mov    edx,DWORD PTR [rax+0x58]
    a281:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a285:	48 8d 70 29          	lea    rsi,[rax+0x29]
    a289:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    a28c:	41 89 f9             	mov    r9d,edi
    a28f:	49 89 c8             	mov    r8,rcx
    a292:	89 d1                	mov    ecx,edx
    a294:	48 89 f2             	mov    rdx,rsi
    a297:	89 c6                	mov    esi,eax
    a299:	48 8d 3d b0 49 00 00 	lea    rdi,[rip+0x49b0]        # ec50 <_IO_stdin_used+0x1c50>
    a2a0:	b8 00 00 00 00       	mov    eax,0x0
    a2a5:	e8 16 82 ff ff       	call   24c0 <printf@plt>
    a2aa:	e9 6d 01 00 00       	jmp    a41c <add_new_conversation+0x227>
    a2af:	b8 00 00 00 00       	mov    eax,0x0
    a2b4:	e8 be fe ff ff       	call   a177 <get_new_spi_location>
    a2b9:	48 98                	cdqe   
    a2bb:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    a2c2:	48 8d 15 b7 0c 10 00 	lea    rdx,[rip+0x100cb7]        # 10af80 <spi_table>
    a2c9:	48 01 d0             	add    rax,rdx
    a2cc:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    a2d0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a2d4:	ba 08 00 00 00       	mov    edx,0x8
    a2d9:	be 00 00 00 00       	mov    esi,0x0
    a2de:	48 89 c7             	mov    rdi,rax
    a2e1:	e8 2a 83 ff ff       	call   2610 <memset@plt>
    a2e6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a2ea:	c6 80 b0 00 00 00 01 	mov    BYTE PTR [rax+0xb0],0x1
    a2f1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a2f5:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    a2f9:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a2fd:	48 83 c2 29          	add    rdx,0x29
    a301:	48 89 c6             	mov    rsi,rax
    a304:	48 89 d7             	mov    rdi,rdx
    a307:	e8 94 83 ff ff       	call   26a0 <strcpy@plt>
    a30c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a310:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
    a314:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a318:	48 89 d6             	mov    rsi,rdx
    a31b:	48 89 c7             	mov    rdi,rax
    a31e:	e8 7d 83 ff ff       	call   26a0 <strcpy@plt>
    a323:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a327:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    a32a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a32e:	89 50 58             	mov    DWORD PTR [rax+0x58],edx
    a331:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a335:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    a338:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a33c:	89 50 54             	mov    DWORD PTR [rax+0x54],edx
    a33f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a343:	c7 40 78 00 00 00 00 	mov    DWORD PTR [rax+0x78],0x0
    a34a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a34e:	48 8d 50 5c          	lea    rdx,[rax+0x5c]
    a352:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a356:	48 89 50 70          	mov    QWORD PTR [rax+0x70],rdx
    a35a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a35e:	48 8d 50 60          	lea    rdx,[rax+0x60]
    a362:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a366:	48 89 50 68          	mov    QWORD PTR [rax+0x68],rdx
    a36a:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a36e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a372:	48 89 d6             	mov    rsi,rdx
    a375:	48 89 c7             	mov    rdi,rax
    a378:	e8 73 04 00 00       	call   a7f0 <increment_stats>
    a37d:	bf 00 00 00 00       	mov    edi,0x0
    a382:	e8 09 83 ff ff       	call   2690 <time@plt>
    a387:	48 89 c2             	mov    rdx,rax
    a38a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a38e:	48 89 90 90 00 00 00 	mov    QWORD PTR [rax+0x90],rdx
    a395:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a399:	c7 40 7c 00 00 00 00 	mov    DWORD PTR [rax+0x7c],0x0
    a3a0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a3a4:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    a3a7:	8d 50 01             	lea    edx,[rax+0x1]
    a3aa:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a3ae:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    a3b1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a3b5:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    a3b8:	89 c2                	mov    edx,eax
    a3ba:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a3be:	89 90 a4 00 00 00    	mov    DWORD PTR [rax+0xa4],edx
    a3c4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a3c8:	8b 78 54             	mov    edi,DWORD PTR [rax+0x54]
    a3cb:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    a3cf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a3d3:	8b 50 58             	mov    edx,DWORD PTR [rax+0x58]
    a3d6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a3da:	48 8d 70 29          	lea    rsi,[rax+0x29]
    a3de:	8b 05 40 7c 00 00    	mov    eax,DWORD PTR [rip+0x7c40]        # 12024 <total_conversations>
    a3e4:	41 89 f9             	mov    r9d,edi
    a3e7:	49 89 c8             	mov    r8,rcx
    a3ea:	89 d1                	mov    ecx,edx
    a3ec:	48 89 f2             	mov    rdx,rsi
    a3ef:	89 c6                	mov    esi,eax
    a3f1:	48 8d 3d 80 48 00 00 	lea    rdi,[rip+0x4880]        # ec78 <_IO_stdin_used+0x1c78>
    a3f8:	b8 00 00 00 00       	mov    eax,0x0
    a3fd:	e8 be 80 ff ff       	call   24c0 <printf@plt>
    a402:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a406:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    a409:	83 f8 7e             	cmp    eax,0x7e
    a40c:	75 0e                	jne    a41c <add_new_conversation+0x227>
    a40e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a412:	c7 80 88 00 00 00 f3 	mov    DWORD PTR [rax+0x88],0xf3
    a419:	00 00 00 
    a41c:	90                   	nop
    a41d:	c9                   	leave  
    a41e:	c3                   	ret    

000000000000a41f <spi_ud_thw>:
    a41f:	f3 0f 1e fa          	endbr64 
    a423:	55                   	push   rbp
    a424:	48 89 e5             	mov    rbp,rsp
    a427:	48 83 ec 20          	sub    rsp,0x20
    a42b:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    a42f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a433:	48 89 c7             	mov    rdi,rax
    a436:	e8 06 fc ff ff       	call   a041 <conversation_exists>
    a43b:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    a43e:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    a442:	0f 84 97 00 00 00    	je     a4df <spi_ud_thw+0xc0>
    a448:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    a44b:	48 98                	cdqe   
    a44d:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    a454:	48 8d 15 25 0b 10 00 	lea    rdx,[rip+0x100b25]        # 10af80 <spi_table>
    a45b:	48 01 d0             	add    rax,rdx
    a45e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    a462:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a466:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    a469:	8d 50 01             	lea    edx,[rax+0x1]
    a46c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a470:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    a473:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a477:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a47b:	48 89 d6             	mov    rsi,rdx
    a47e:	48 89 c7             	mov    rdi,rax
    a481:	e8 6a 03 00 00       	call   a7f0 <increment_stats>
    a486:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a48a:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    a48d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a491:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    a495:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a499:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    a49c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a4a0:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    a4a4:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    a4a7:	41 89 f9             	mov    r9d,edi
    a4aa:	49 89 f0             	mov    r8,rsi
    a4ad:	89 c6                	mov    esi,eax
    a4af:	48 8d 3d ea 47 00 00 	lea    rdi,[rip+0x47ea]        # eca0 <_IO_stdin_used+0x1ca0>
    a4b6:	b8 00 00 00 00       	mov    eax,0x0
    a4bb:	e8 00 80 ff ff       	call   24c0 <printf@plt>
    a4c0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a4c4:	8b 80 88 00 00 00    	mov    eax,DWORD PTR [rax+0x88]
    a4ca:	3d f3 00 00 00       	cmp    eax,0xf3
    a4cf:	75 0e                	jne    a4df <spi_ud_thw+0xc0>
    a4d1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a4d5:	c7 80 88 00 00 00 f4 	mov    DWORD PTR [rax+0x88],0xf4
    a4dc:	00 00 00 
    a4df:	90                   	nop
    a4e0:	c9                   	leave  
    a4e1:	c3                   	ret    

000000000000a4e2 <update_table>:
    a4e2:	f3 0f 1e fa          	endbr64 
    a4e6:	55                   	push   rbp
    a4e7:	48 89 e5             	mov    rbp,rsp
    a4ea:	48 83 ec 30          	sub    rsp,0x30
    a4ee:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    a4f2:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a4f9:	00 00 
    a4fb:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    a4ff:	31 c0                	xor    eax,eax
    a501:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a505:	48 89 c7             	mov    rdi,rax
    a508:	e8 34 fb ff ff       	call   a041 <conversation_exists>
    a50d:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
    a510:	83 7d e4 ff          	cmp    DWORD PTR [rbp-0x1c],0xffffffff
    a514:	0f 84 4c 01 00 00    	je     a666 <update_table+0x184>
    a51a:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    a51d:	48 98                	cdqe   
    a51f:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    a526:	48 8d 15 53 0a 10 00 	lea    rdx,[rip+0x100a53]        # 10af80 <spi_table>
    a52d:	48 01 d0             	add    rax,rdx
    a530:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    a534:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a538:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    a53b:	8d 50 01             	lea    edx,[rax+0x1]
    a53e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a542:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    a545:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    a549:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a54d:	48 89 d6             	mov    rsi,rdx
    a550:	48 89 c7             	mov    rdi,rax
    a553:	e8 98 02 00 00       	call   a7f0 <increment_stats>
    a558:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a55c:	8b 80 88 00 00 00    	mov    eax,DWORD PTR [rax+0x88]
    a562:	3d f4 00 00 00       	cmp    eax,0xf4
    a567:	75 4d                	jne    a5b6 <update_table+0xd4>
    a569:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a56d:	c7 80 88 00 00 00 f1 	mov    DWORD PTR [rax+0x88],0xf1
    a574:	00 00 00 
    a577:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a57b:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    a57e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a582:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    a586:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a58a:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    a58d:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a591:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    a595:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    a598:	41 89 f9             	mov    r9d,edi
    a59b:	49 89 f0             	mov    r8,rsi
    a59e:	89 c6                	mov    esi,eax
    a5a0:	48 8d 3d 21 47 00 00 	lea    rdi,[rip+0x4721]        # ecc8 <_IO_stdin_used+0x1cc8>
    a5a7:	b8 00 00 00 00       	mov    eax,0x0
    a5ac:	e8 0f 7f ff ff       	call   24c0 <printf@plt>
    a5b1:	e9 b0 00 00 00       	jmp    a666 <update_table+0x184>
    a5b6:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a5ba:	8b 80 88 00 00 00    	mov    eax,DWORD PTR [rax+0x88]
    a5c0:	3d f6 00 00 00       	cmp    eax,0xf6
    a5c5:	0f 85 9b 00 00 00    	jne    a666 <update_table+0x184>
    a5cb:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a5cf:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    a5d2:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a5d6:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    a5da:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a5de:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    a5e1:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a5e5:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    a5e9:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    a5ec:	41 89 f9             	mov    r9d,edi
    a5ef:	49 89 f0             	mov    r8,rsi
    a5f2:	89 c6                	mov    esi,eax
    a5f4:	48 8d 3d fd 46 00 00 	lea    rdi,[rip+0x46fd]        # ecf8 <_IO_stdin_used+0x1cf8>
    a5fb:	b8 00 00 00 00       	mov    eax,0x0
    a600:	e8 bb 7e ff ff       	call   24c0 <printf@plt>
    a605:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a609:	c7 80 88 00 00 00 fa 	mov    DWORD PTR [rax+0x88],0xfa
    a610:	00 00 00 
    a613:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a617:	c6 80 b0 00 00 00 00 	mov    BYTE PTR [rax+0xb0],0x0
    a61e:	bf 00 00 00 00       	mov    edi,0x0
    a623:	e8 68 80 ff ff       	call   2690 <time@plt>
    a628:	48 89 c2             	mov    rdx,rax
    a62b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a62f:	48 89 90 98 00 00 00 	mov    QWORD PTR [rax+0x98],rdx
    a636:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    a63a:	48 8d 45 e8          	lea    rax,[rbp-0x18]
    a63e:	48 89 d1             	mov    rcx,rdx
    a641:	48 8d 15 cf f3 ff ff 	lea    rdx,[rip+0xfffffffffffff3cf]        # 9a17 <update_spi_db>
    a648:	be 00 00 00 00       	mov    esi,0x0
    a64d:	48 89 c7             	mov    rdi,rax
    a650:	e8 9b 82 ff ff       	call   28f0 <pthread_create@plt>
    a655:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a659:	be 00 00 00 00       	mov    esi,0x0
    a65e:	48 89 c7             	mov    rdi,rax
    a661:	e8 1a 80 ff ff       	call   2680 <pthread_join@plt>
    a666:	90                   	nop
    a667:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a66b:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    a672:	00 00 
    a674:	74 05                	je     a67b <update_table+0x199>
    a676:	e8 55 80 ff ff       	call   26d0 <__stack_chk_fail@plt>
    a67b:	c9                   	leave  
    a67c:	c3                   	ret    

000000000000a67d <polite_end>:
    a67d:	f3 0f 1e fa          	endbr64 
    a681:	55                   	push   rbp
    a682:	48 89 e5             	mov    rbp,rsp
    a685:	48 83 ec 20          	sub    rsp,0x20
    a689:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    a68d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a691:	48 89 c7             	mov    rdi,rax
    a694:	e8 a8 f9 ff ff       	call   a041 <conversation_exists>
    a699:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    a69c:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    a6a0:	0f 84 e1 00 00 00    	je     a787 <polite_end+0x10a>
    a6a6:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    a6a9:	48 98                	cdqe   
    a6ab:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    a6b2:	48 8d 15 c7 08 10 00 	lea    rdx,[rip+0x1008c7]        # 10af80 <spi_table>
    a6b9:	48 01 d0             	add    rax,rdx
    a6bc:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    a6c0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a6c4:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    a6c7:	8d 50 01             	lea    edx,[rax+0x1]
    a6ca:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a6ce:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    a6d1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a6d5:	8b 80 88 00 00 00    	mov    eax,DWORD PTR [rax+0x88]
    a6db:	3d f5 00 00 00       	cmp    eax,0xf5
    a6e0:	75 4a                	jne    a72c <polite_end+0xaf>
    a6e2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a6e6:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    a6e9:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a6ed:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    a6f1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a6f5:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    a6f8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a6fc:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    a700:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    a703:	41 89 f9             	mov    r9d,edi
    a706:	49 89 f0             	mov    r8,rsi
    a709:	89 c6                	mov    esi,eax
    a70b:	48 8d 3d 1e 46 00 00 	lea    rdi,[rip+0x461e]        # ed30 <_IO_stdin_used+0x1d30>
    a712:	b8 00 00 00 00       	mov    eax,0x0
    a717:	e8 a4 7d ff ff       	call   24c0 <printf@plt>
    a71c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a720:	c7 80 88 00 00 00 f6 	mov    DWORD PTR [rax+0x88],0xf6
    a727:	00 00 00 
    a72a:	eb 48                	jmp    a774 <polite_end+0xf7>
    a72c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a730:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    a733:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a737:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    a73b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a73f:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    a742:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a746:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    a74a:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    a74d:	41 89 f9             	mov    r9d,edi
    a750:	49 89 f0             	mov    r8,rsi
    a753:	89 c6                	mov    esi,eax
    a755:	48 8d 3d 0c 46 00 00 	lea    rdi,[rip+0x460c]        # ed68 <_IO_stdin_used+0x1d68>
    a75c:	b8 00 00 00 00       	mov    eax,0x0
    a761:	e8 5a 7d ff ff       	call   24c0 <printf@plt>
    a766:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a76a:	c7 80 88 00 00 00 f5 	mov    DWORD PTR [rax+0x88],0xf5
    a771:	00 00 00 
    a774:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a778:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a77c:	48 89 d6             	mov    rsi,rdx
    a77f:	48 89 c7             	mov    rdi,rax
    a782:	e8 69 00 00 00       	call   a7f0 <increment_stats>
    a787:	90                   	nop
    a788:	c9                   	leave  
    a789:	c3                   	ret    

000000000000a78a <handle_data_pkt>:
    a78a:	f3 0f 1e fa          	endbr64 
    a78e:	55                   	push   rbp
    a78f:	48 89 e5             	mov    rbp,rsp
    a792:	48 83 ec 20          	sub    rsp,0x20
    a796:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    a79a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a79e:	48 89 c7             	mov    rdi,rax
    a7a1:	e8 9b f8 ff ff       	call   a041 <conversation_exists>
    a7a6:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    a7a9:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    a7ad:	74 3e                	je     a7ed <handle_data_pkt+0x63>
    a7af:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    a7b2:	48 98                	cdqe   
    a7b4:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    a7bb:	48 8d 15 be 07 10 00 	lea    rdx,[rip+0x1007be]        # 10af80 <spi_table>
    a7c2:	48 01 d0             	add    rax,rdx
    a7c5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    a7c9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a7cd:	8b 40 78             	mov    eax,DWORD PTR [rax+0x78]
    a7d0:	8d 50 01             	lea    edx,[rax+0x1]
    a7d3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a7d7:	89 50 78             	mov    DWORD PTR [rax+0x78],edx
    a7da:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a7de:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a7e2:	48 89 d6             	mov    rsi,rdx
    a7e5:	48 89 c7             	mov    rdi,rax
    a7e8:	e8 03 00 00 00       	call   a7f0 <increment_stats>
    a7ed:	90                   	nop
    a7ee:	c9                   	leave  
    a7ef:	c3                   	ret    

000000000000a7f0 <increment_stats>:
    a7f0:	f3 0f 1e fa          	endbr64 
    a7f4:	55                   	push   rbp
    a7f5:	48 89 e5             	mov    rbp,rsp
    a7f8:	48 83 ec 10          	sub    rsp,0x10
    a7fc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    a800:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    a804:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a808:	48 8d 50 29          	lea    rdx,[rax+0x29]
    a80c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a810:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    a814:	48 89 d6             	mov    rsi,rdx
    a817:	48 89 c7             	mov    rdi,rax
    a81a:	e8 c1 7f ff ff       	call   27e0 <strcmp@plt>
    a81f:	85 c0                	test   eax,eax
    a821:	75 13                	jne    a836 <increment_stats+0x46>
    a823:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a827:	8b 40 60             	mov    eax,DWORD PTR [rax+0x60]
    a82a:	8d 50 01             	lea    edx,[rax+0x1]
    a82d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a831:	89 50 60             	mov    DWORD PTR [rax+0x60],edx
    a834:	eb 2c                	jmp    a862 <increment_stats+0x72>
    a836:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    a83a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a83e:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    a842:	48 89 d6             	mov    rsi,rdx
    a845:	48 89 c7             	mov    rdi,rax
    a848:	e8 93 7f ff ff       	call   27e0 <strcmp@plt>
    a84d:	85 c0                	test   eax,eax
    a84f:	75 11                	jne    a862 <increment_stats+0x72>
    a851:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a855:	8b 40 5c             	mov    eax,DWORD PTR [rax+0x5c]
    a858:	8d 50 01             	lea    edx,[rax+0x1]
    a85b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a85f:	89 50 5c             	mov    DWORD PTR [rax+0x5c],edx
    a862:	90                   	nop
    a863:	c9                   	leave  
    a864:	c3                   	ret    

000000000000a865 <lprintf>:
    a865:	f3 0f 1e fa          	endbr64 
    a869:	55                   	push   rbp
    a86a:	48 89 e5             	mov    rbp,rsp
    a86d:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
    a874:	48 89 bd 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rdi
    a87b:	48 89 b5 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rsi
    a882:	48 89 95 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdx
    a889:	48 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rcx
    a890:	4c 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r8
    a897:	4c 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r9
    a89e:	84 c0                	test   al,al
    a8a0:	74 20                	je     a8c2 <lprintf+0x5d>
    a8a2:	0f 29 45 80          	movaps XMMWORD PTR [rbp-0x80],xmm0
    a8a6:	0f 29 4d 90          	movaps XMMWORD PTR [rbp-0x70],xmm1
    a8aa:	0f 29 55 a0          	movaps XMMWORD PTR [rbp-0x60],xmm2
    a8ae:	0f 29 5d b0          	movaps XMMWORD PTR [rbp-0x50],xmm3
    a8b2:	0f 29 65 c0          	movaps XMMWORD PTR [rbp-0x40],xmm4
    a8b6:	0f 29 6d d0          	movaps XMMWORD PTR [rbp-0x30],xmm5
    a8ba:	0f 29 75 e0          	movaps XMMWORD PTR [rbp-0x20],xmm6
    a8be:	0f 29 7d f0          	movaps XMMWORD PTR [rbp-0x10],xmm7
    a8c2:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a8c9:	00 00 
    a8cb:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    a8d2:	31 c0                	xor    eax,eax
    a8d4:	c7 85 30 ff ff ff 10 	mov    DWORD PTR [rbp-0xd0],0x10
    a8db:	00 00 00 
    a8de:	c7 85 34 ff ff ff 30 	mov    DWORD PTR [rbp-0xcc],0x30
    a8e5:	00 00 00 
    a8e8:	48 8d 45 10          	lea    rax,[rbp+0x10]
    a8ec:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    a8f3:	48 8d 85 50 ff ff ff 	lea    rax,[rbp-0xb0]
    a8fa:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    a901:	48 8d 95 30 ff ff ff 	lea    rdx,[rbp-0xd0]
    a908:	48 8b 8d 20 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xe0]
    a90f:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    a916:	48 89 ce             	mov    rsi,rcx
    a919:	48 89 c7             	mov    rdi,rax
    a91c:	b8 00 00 00 00       	mov    eax,0x0
    a921:	e8 ea 7e ff ff       	call   2810 <fprintf@plt>
    a926:	90                   	nop
    a927:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    a92e:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    a935:	00 00 
    a937:	74 05                	je     a93e <lprintf+0xd9>
    a939:	e8 92 7d ff ff       	call   26d0 <__stack_chk_fail@plt>
    a93e:	c9                   	leave  
    a93f:	c3                   	ret    

000000000000a940 <lfprintf>:
    a940:	f3 0f 1e fa          	endbr64 
    a944:	55                   	push   rbp
    a945:	48 89 e5             	mov    rbp,rsp
    a948:	48 81 ec 90 08 00 00 	sub    rsp,0x890
    a94f:	48 89 bd 98 f7 ff ff 	mov    QWORD PTR [rbp-0x868],rdi
    a956:	48 89 b5 90 f7 ff ff 	mov    QWORD PTR [rbp-0x870],rsi
    a95d:	48 89 95 88 f7 ff ff 	mov    QWORD PTR [rbp-0x878],rdx
    a964:	48 89 8d 80 f7 ff ff 	mov    QWORD PTR [rbp-0x880],rcx
    a96b:	44 89 85 7c f7 ff ff 	mov    DWORD PTR [rbp-0x884],r8d
    a972:	44 89 8d 78 f7 ff ff 	mov    DWORD PTR [rbp-0x888],r9d
    a979:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a980:	00 00 
    a982:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    a986:	31 c0                	xor    eax,eax
    a988:	48 8b 85 98 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x868]
    a98f:	48 8d 35 0a 44 00 00 	lea    rsi,[rip+0x440a]        # eda0 <_IO_stdin_used+0x1da0>
    a996:	48 89 c7             	mov    rdi,rax
    a999:	e8 72 7d ff ff       	call   2710 <fopen@plt>
    a99e:	48 89 85 a8 f7 ff ff 	mov    QWORD PTR [rbp-0x858],rax
    a9a5:	48 83 bd a8 f7 ff ff 	cmp    QWORD PTR [rbp-0x858],0x0
    a9ac:	00 
    a9ad:	75 20                	jne    a9cf <lfprintf+0x8f>
    a9af:	48 8b 85 90 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x870]
    a9b6:	48 89 c6             	mov    rsi,rax
    a9b9:	48 8d 3d e8 43 00 00 	lea    rdi,[rip+0x43e8]        # eda8 <_IO_stdin_used+0x1da8>
    a9c0:	b8 00 00 00 00       	mov    eax,0x0
    a9c5:	e8 f6 7a ff ff       	call   24c0 <printf@plt>
    a9ca:	e9 cd 00 00 00       	jmp    aa9c <lfprintf+0x15c>
    a9cf:	48 8d 85 b0 f7 ff ff 	lea    rax,[rbp-0x850]
    a9d6:	48 89 c7             	mov    rdi,rax
    a9d9:	e8 d5 8a ff ff       	call   34b3 <cb_get_formatted_time>
    a9de:	83 bd 7c f7 ff ff ff 	cmp    DWORD PTR [rbp-0x884],0xffffffff
    a9e5:	75 3f                	jne    aa26 <lfprintf+0xe6>
    a9e7:	48 8b bd 80 f7 ff ff 	mov    rdi,QWORD PTR [rbp-0x880]
    a9ee:	48 8b b5 88 f7 ff ff 	mov    rsi,QWORD PTR [rbp-0x878]
    a9f5:	48 8b 8d 90 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x870]
    a9fc:	48 8d 95 b0 f7 ff ff 	lea    rdx,[rbp-0x850]
    aa03:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    aa0a:	49 89 f9             	mov    r9,rdi
    aa0d:	49 89 f0             	mov    r8,rsi
    aa10:	48 8d 35 bf 43 00 00 	lea    rsi,[rip+0x43bf]        # edd6 <_IO_stdin_used+0x1dd6>
    aa17:	48 89 c7             	mov    rdi,rax
    aa1a:	b8 00 00 00 00       	mov    eax,0x0
    aa1f:	e8 dc 7a ff ff       	call   2500 <sprintf@plt>
    aa24:	eb 4e                	jmp    aa74 <lfprintf+0x134>
    aa26:	44 8b 85 7c f7 ff ff 	mov    r8d,DWORD PTR [rbp-0x884]
    aa2d:	48 8b bd 88 f7 ff ff 	mov    rdi,QWORD PTR [rbp-0x878]
    aa34:	48 8b 8d 90 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x870]
    aa3b:	48 8d 95 b0 f7 ff ff 	lea    rdx,[rbp-0x850]
    aa42:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    aa49:	8b b5 78 f7 ff ff    	mov    esi,DWORD PTR [rbp-0x888]
    aa4f:	56                   	push   rsi
    aa50:	ff b5 80 f7 ff ff    	push   QWORD PTR [rbp-0x880]
    aa56:	45 89 c1             	mov    r9d,r8d
    aa59:	49 89 f8             	mov    r8,rdi
    aa5c:	48 8d 35 83 43 00 00 	lea    rsi,[rip+0x4383]        # ede6 <_IO_stdin_used+0x1de6>
    aa63:	48 89 c7             	mov    rdi,rax
    aa66:	b8 00 00 00 00       	mov    eax,0x0
    aa6b:	e8 90 7a ff ff       	call   2500 <sprintf@plt>
    aa70:	48 83 c4 10          	add    rsp,0x10
    aa74:	48 8b 95 a8 f7 ff ff 	mov    rdx,QWORD PTR [rbp-0x858]
    aa7b:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    aa82:	48 89 d6             	mov    rsi,rdx
    aa85:	48 89 c7             	mov    rdi,rax
    aa88:	e8 53 7c ff ff       	call   26e0 <fputs@plt>
    aa8d:	48 8b 85 a8 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x858]
    aa94:	48 89 c7             	mov    rdi,rax
    aa97:	e8 24 7c ff ff       	call   26c0 <fclose@plt>
    aa9c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aaa0:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    aaa7:	00 00 
    aaa9:	74 05                	je     aab0 <lfprintf+0x170>
    aaab:	e8 20 7c ff ff       	call   26d0 <__stack_chk_fail@plt>
    aab0:	c9                   	leave  
    aab1:	c3                   	ret    

000000000000aab2 <saprintf>:
    aab2:	f3 0f 1e fa          	endbr64 
    aab6:	55                   	push   rbp
    aab7:	48 89 e5             	mov    rbp,rsp
    aaba:	48 83 ec 20          	sub    rsp,0x20
    aabe:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    aac2:	48 8b 05 6f 75 00 00 	mov    rax,QWORD PTR [rip+0x756f]        # 12038 <def_log_file>
    aac9:	48 8d 35 d0 42 00 00 	lea    rsi,[rip+0x42d0]        # eda0 <_IO_stdin_used+0x1da0>
    aad0:	48 89 c7             	mov    rdi,rax
    aad3:	e8 38 7c ff ff       	call   2710 <fopen@plt>
    aad8:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    aadc:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    aae1:	75 1a                	jne    aafd <saprintf+0x4b>
    aae3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    aae7:	48 89 c6             	mov    rsi,rax
    aaea:	48 8d 3d b7 42 00 00 	lea    rdi,[rip+0x42b7]        # eda8 <_IO_stdin_used+0x1da8>
    aaf1:	b8 00 00 00 00       	mov    eax,0x0
    aaf6:	e8 c5 79 ff ff       	call   24c0 <printf@plt>
    aafb:	eb 1f                	jmp    ab1c <saprintf+0x6a>
    aafd:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ab01:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    ab05:	48 89 d6             	mov    rsi,rdx
    ab08:	48 89 c7             	mov    rdi,rax
    ab0b:	e8 d0 7b ff ff       	call   26e0 <fputs@plt>
    ab10:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ab14:	48 89 c7             	mov    rdi,rax
    ab17:	e8 a4 7b ff ff       	call   26c0 <fclose@plt>
    ab1c:	c9                   	leave  
    ab1d:	c3                   	ret    

000000000000ab1e <substr>:
    ab1e:	f3 0f 1e fa          	endbr64 
    ab22:	55                   	push   rbp
    ab23:	48 89 e5             	mov    rbp,rsp
    ab26:	48 83 ec 20          	sub    rsp,0x20
    ab2a:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    ab2e:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    ab31:	89 55 e0             	mov    DWORD PTR [rbp-0x20],edx
    ab34:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
    ab37:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    ab3a:	83 c0 02             	add    eax,0x2
    ab3d:	48 98                	cdqe   
    ab3f:	48 89 c7             	mov    rdi,rax
    ab42:	e8 49 7c ff ff       	call   2790 <malloc@plt>
    ab47:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    ab4b:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    ab4e:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    ab51:	eb 27                	jmp    ab7a <substr+0x5c>
    ab53:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    ab56:	48 63 d0             	movsxd rdx,eax
    ab59:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    ab5d:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    ab61:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    ab64:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    ab67:	48 63 d0             	movsxd rdx,eax
    ab6a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ab6e:	48 01 c2             	add    rdx,rax
    ab71:	0f b6 01             	movzx  eax,BYTE PTR [rcx]
    ab74:	88 02                	mov    BYTE PTR [rdx],al
    ab76:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    ab7a:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    ab7d:	3b 45 e0             	cmp    eax,DWORD PTR [rbp-0x20]
    ab80:	7e d1                	jle    ab53 <substr+0x35>
    ab82:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
    ab85:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    ab88:	48 98                	cdqe   
    ab8a:	48 8d 50 01          	lea    rdx,[rax+0x1]
    ab8e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ab92:	48 01 d0             	add    rax,rdx
    ab95:	c6 00 00             	mov    BYTE PTR [rax],0x0
    ab98:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ab9c:	c9                   	leave  
    ab9d:	c3                   	ret    

000000000000ab9e <delimit>:
    ab9e:	f3 0f 1e fa          	endbr64 
    aba2:	55                   	push   rbp
    aba3:	48 89 e5             	mov    rbp,rsp
    aba6:	89 f8                	mov    eax,edi
    aba8:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
    abab:	80 7d fc 20          	cmp    BYTE PTR [rbp-0x4],0x20
    abaf:	0f 94 c0             	sete   al
    abb2:	5d                   	pop    rbp
    abb3:	c3                   	ret    

000000000000abb4 <isdigit>:
    abb4:	f3 0f 1e fa          	endbr64 
    abb8:	55                   	push   rbp
    abb9:	48 89 e5             	mov    rbp,rsp
    abbc:	53                   	push   rbx
    abbd:	48 83 ec 28          	sub    rsp,0x28
    abc1:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    abc5:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    abcc:	e9 f7 00 00 00       	jmp    acc8 <isdigit+0x114>
    abd1:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    abd4:	48 63 d0             	movsxd rdx,eax
    abd7:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    abdb:	48 01 d0             	add    rax,rdx
    abde:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    abe1:	3c 30                	cmp    al,0x30
    abe3:	0f 84 db 00 00 00    	je     acc4 <isdigit+0x110>
    abe9:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    abec:	48 63 d0             	movsxd rdx,eax
    abef:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    abf3:	48 01 d0             	add    rax,rdx
    abf6:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    abf9:	3c 31                	cmp    al,0x31
    abfb:	0f 84 c3 00 00 00    	je     acc4 <isdigit+0x110>
    ac01:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    ac04:	48 63 d0             	movsxd rdx,eax
    ac07:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ac0b:	48 01 d0             	add    rax,rdx
    ac0e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    ac11:	3c 32                	cmp    al,0x32
    ac13:	0f 84 ab 00 00 00    	je     acc4 <isdigit+0x110>
    ac19:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    ac1c:	48 63 d0             	movsxd rdx,eax
    ac1f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ac23:	48 01 d0             	add    rax,rdx
    ac26:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    ac29:	3c 33                	cmp    al,0x33
    ac2b:	0f 84 93 00 00 00    	je     acc4 <isdigit+0x110>
    ac31:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    ac34:	48 63 d0             	movsxd rdx,eax
    ac37:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ac3b:	48 01 d0             	add    rax,rdx
    ac3e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    ac41:	3c 34                	cmp    al,0x34
    ac43:	74 7f                	je     acc4 <isdigit+0x110>
    ac45:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    ac48:	48 63 d0             	movsxd rdx,eax
    ac4b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ac4f:	48 01 d0             	add    rax,rdx
    ac52:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    ac55:	3c 34                	cmp    al,0x34
    ac57:	74 6b                	je     acc4 <isdigit+0x110>
    ac59:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    ac5c:	48 63 d0             	movsxd rdx,eax
    ac5f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ac63:	48 01 d0             	add    rax,rdx
    ac66:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    ac69:	3c 35                	cmp    al,0x35
    ac6b:	74 57                	je     acc4 <isdigit+0x110>
    ac6d:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    ac70:	48 63 d0             	movsxd rdx,eax
    ac73:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ac77:	48 01 d0             	add    rax,rdx
    ac7a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    ac7d:	3c 36                	cmp    al,0x36
    ac7f:	74 43                	je     acc4 <isdigit+0x110>
    ac81:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    ac84:	48 63 d0             	movsxd rdx,eax
    ac87:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ac8b:	48 01 d0             	add    rax,rdx
    ac8e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    ac91:	3c 37                	cmp    al,0x37
    ac93:	74 2f                	je     acc4 <isdigit+0x110>
    ac95:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    ac98:	48 63 d0             	movsxd rdx,eax
    ac9b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ac9f:	48 01 d0             	add    rax,rdx
    aca2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    aca5:	3c 38                	cmp    al,0x38
    aca7:	74 1b                	je     acc4 <isdigit+0x110>
    aca9:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    acac:	48 63 d0             	movsxd rdx,eax
    acaf:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    acb3:	48 01 d0             	add    rax,rdx
    acb6:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    acb9:	3c 39                	cmp    al,0x39
    acbb:	74 07                	je     acc4 <isdigit+0x110>
    acbd:	b8 00 00 00 00       	mov    eax,0x0
    acc2:	eb 24                	jmp    ace8 <isdigit+0x134>
    acc4:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    acc8:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    accb:	48 63 d8             	movsxd rbx,eax
    acce:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    acd2:	48 89 c7             	mov    rdi,rax
    acd5:	e8 c6 78 ff ff       	call   25a0 <strlen@plt>
    acda:	48 39 c3             	cmp    rbx,rax
    acdd:	0f 82 ee fe ff ff    	jb     abd1 <isdigit+0x1d>
    ace3:	b8 01 00 00 00       	mov    eax,0x1
    ace8:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    acec:	c9                   	leave  
    aced:	c3                   	ret    

000000000000acee <assign_port_number>:
    acee:	f3 0f 1e fa          	endbr64 
    acf2:	55                   	push   rbp
    acf3:	48 89 e5             	mov    rbp,rsp
    acf6:	48 83 ec 10          	sub    rsp,0x10
    acfa:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    acfe:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    ad02:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad06:	48 89 c7             	mov    rdi,rax
    ad09:	e8 a6 fe ff ff       	call   abb4 <isdigit>
    ad0e:	84 c0                	test   al,al
    ad10:	74 18                	je     ad2a <assign_port_number+0x3c>
    ad12:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad16:	48 89 c7             	mov    rdi,rax
    ad19:	e8 52 7b ff ff       	call   2870 <atoi@plt>
    ad1e:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    ad22:	89 82 44 01 00 00    	mov    DWORD PTR [rdx+0x144],eax
    ad28:	eb 25                	jmp    ad4f <assign_port_number+0x61>
    ad2a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad2e:	48 8d 35 cb 40 00 00 	lea    rsi,[rip+0x40cb]        # ee00 <_IO_stdin_used+0x1e00>
    ad35:	48 89 c7             	mov    rdi,rax
    ad38:	e8 a3 7a ff ff       	call   27e0 <strcmp@plt>
    ad3d:	85 c0                	test   eax,eax
    ad3f:	75 0e                	jne    ad4f <assign_port_number+0x61>
    ad41:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad45:	c7 80 44 01 00 00 ff 	mov    DWORD PTR [rax+0x144],0xffffffff
    ad4c:	ff ff ff 
    ad4f:	90                   	nop
    ad50:	c9                   	leave  
    ad51:	c3                   	ret    

000000000000ad52 <check_port_number>:
    ad52:	f3 0f 1e fa          	endbr64 
    ad56:	55                   	push   rbp
    ad57:	48 89 e5             	mov    rbp,rsp
    ad5a:	48 83 ec 10          	sub    rsp,0x10
    ad5e:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    ad62:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad66:	48 89 c7             	mov    rdi,rax
    ad69:	e8 46 fe ff ff       	call   abb4 <isdigit>
    ad6e:	84 c0                	test   al,al
    ad70:	74 0e                	je     ad80 <check_port_number+0x2e>
    ad72:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad76:	48 89 c7             	mov    rdi,rax
    ad79:	e8 f2 7a ff ff       	call   2870 <atoi@plt>
    ad7e:	eb 23                	jmp    ada3 <check_port_number+0x51>
    ad80:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad84:	48 8d 35 75 40 00 00 	lea    rsi,[rip+0x4075]        # ee00 <_IO_stdin_used+0x1e00>
    ad8b:	48 89 c7             	mov    rdi,rax
    ad8e:	e8 4d 7a ff ff       	call   27e0 <strcmp@plt>
    ad93:	85 c0                	test   eax,eax
    ad95:	75 07                	jne    ad9e <check_port_number+0x4c>
    ad97:	b8 ff ff ff ff       	mov    eax,0xffffffff
    ad9c:	eb 05                	jmp    ada3 <check_port_number+0x51>
    ad9e:	b8 ff ff ff ff       	mov    eax,0xffffffff
    ada3:	c9                   	leave  
    ada4:	c3                   	ret    

000000000000ada5 <assign_protocol>:
    ada5:	f3 0f 1e fa          	endbr64 
    ada9:	55                   	push   rbp
    adaa:	48 89 e5             	mov    rbp,rsp
    adad:	48 83 ec 10          	sub    rsp,0x10
    adb1:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    adb5:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    adb9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    adbd:	48 8d 35 40 40 00 00 	lea    rsi,[rip+0x4040]        # ee04 <_IO_stdin_used+0x1e04>
    adc4:	48 89 c7             	mov    rdi,rax
    adc7:	e8 14 7a ff ff       	call   27e0 <strcmp@plt>
    adcc:	85 c0                	test   eax,eax
    adce:	75 10                	jne    ade0 <assign_protocol+0x3b>
    add0:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    add4:	c7 80 40 01 00 00 ff 	mov    DWORD PTR [rax+0x140],0xffffffff
    addb:	ff ff ff 
    adde:	eb 73                	jmp    ae53 <assign_protocol+0xae>
    ade0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ade4:	48 8d 35 1d 40 00 00 	lea    rsi,[rip+0x401d]        # ee08 <_IO_stdin_used+0x1e08>
    adeb:	48 89 c7             	mov    rdi,rax
    adee:	e8 ed 79 ff ff       	call   27e0 <strcmp@plt>
    adf3:	85 c0                	test   eax,eax
    adf5:	75 10                	jne    ae07 <assign_protocol+0x62>
    adf7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    adfb:	c7 80 40 01 00 00 80 	mov    DWORD PTR [rax+0x140],0x80
    ae02:	00 00 00 
    ae05:	eb 4c                	jmp    ae53 <assign_protocol+0xae>
    ae07:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae0b:	48 8d 35 fb 3f 00 00 	lea    rsi,[rip+0x3ffb]        # ee0d <_IO_stdin_used+0x1e0d>
    ae12:	48 89 c7             	mov    rdi,rax
    ae15:	e8 c6 79 ff ff       	call   27e0 <strcmp@plt>
    ae1a:	85 c0                	test   eax,eax
    ae1c:	75 10                	jne    ae2e <assign_protocol+0x89>
    ae1e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ae22:	c7 80 40 01 00 00 7e 	mov    DWORD PTR [rax+0x140],0x7e
    ae29:	00 00 00 
    ae2c:	eb 25                	jmp    ae53 <assign_protocol+0xae>
    ae2e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae32:	48 8d 35 d8 3f 00 00 	lea    rsi,[rip+0x3fd8]        # ee11 <_IO_stdin_used+0x1e11>
    ae39:	48 89 c7             	mov    rdi,rax
    ae3c:	e8 9f 79 ff ff       	call   27e0 <strcmp@plt>
    ae41:	85 c0                	test   eax,eax
    ae43:	75 0e                	jne    ae53 <assign_protocol+0xae>
    ae45:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ae49:	c7 80 40 01 00 00 7f 	mov    DWORD PTR [rax+0x140],0x7f
    ae50:	00 00 00 
    ae53:	90                   	nop
    ae54:	c9                   	leave  
    ae55:	c3                   	ret    

000000000000ae56 <get_ruletype>:
    ae56:	f3 0f 1e fa          	endbr64 
    ae5a:	55                   	push   rbp
    ae5b:	48 89 e5             	mov    rbp,rsp
    ae5e:	48 83 ec 10          	sub    rsp,0x10
    ae62:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    ae66:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    ae6a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae6e:	ba 09 00 00 00       	mov    edx,0x9
    ae73:	48 8d 35 9b 3f 00 00 	lea    rsi,[rip+0x3f9b]        # ee15 <_IO_stdin_used+0x1e15>
    ae7a:	48 89 c7             	mov    rdi,rax
    ae7d:	e8 3e 77 ff ff       	call   25c0 <strncmp@plt>
    ae82:	85 c0                	test   eax,eax
    ae84:	75 17                	jne    ae9d <get_ruletype+0x47>
    ae86:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ae8a:	48 8d 15 df a7 ff ff 	lea    rdx,[rip+0xffffffffffffa7df]        # 5670 <str_match_parser>
    ae91:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    ae98:	e9 82 00 00 00       	jmp    af1f <get_ruletype+0xc9>
    ae9d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aea1:	ba 04 00 00 00       	mov    edx,0x4
    aea6:	48 8d 35 72 3f 00 00 	lea    rsi,[rip+0x3f72]        # ee1f <_IO_stdin_used+0x1e1f>
    aead:	48 89 c7             	mov    rdi,rax
    aeb0:	e8 0b 77 ff ff       	call   25c0 <strncmp@plt>
    aeb5:	85 c0                	test   eax,eax
    aeb7:	75 14                	jne    aecd <get_ruletype+0x77>
    aeb9:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    aebd:	48 8d 15 4f aa ff ff 	lea    rdx,[rip+0xffffffffffffaa4f]        # 5913 <none>
    aec4:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    aecb:	eb 52                	jmp    af1f <get_ruletype+0xc9>
    aecd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aed1:	ba 04 00 00 00       	mov    edx,0x4
    aed6:	48 8d 35 47 3f 00 00 	lea    rsi,[rip+0x3f47]        # ee24 <_IO_stdin_used+0x1e24>
    aedd:	48 89 c7             	mov    rdi,rax
    aee0:	e8 db 76 ff ff       	call   25c0 <strncmp@plt>
    aee5:	85 c0                	test   eax,eax
    aee7:	75 14                	jne    aefd <get_ruletype+0xa7>
    aee9:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    aeed:	48 8d 15 36 aa ff ff 	lea    rdx,[rip+0xffffffffffffaa36]        # 592a <pcre_match>
    aef4:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    aefb:	eb 22                	jmp    af1f <get_ruletype+0xc9>
    aefd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    af01:	48 89 c6             	mov    rsi,rax
    af04:	48 8d 3d 1e 3f 00 00 	lea    rdi,[rip+0x3f1e]        # ee29 <_IO_stdin_used+0x1e29>
    af0b:	b8 00 00 00 00       	mov    eax,0x0
    af10:	e8 ab 75 ff ff       	call   24c0 <printf@plt>
    af15:	bf 01 00 00 00       	mov    edi,0x1
    af1a:	e8 21 78 ff ff       	call   2740 <exit@plt>
    af1f:	c9                   	leave  
    af20:	c3                   	ret    

000000000000af21 <numeric_check>:
    af21:	f3 0f 1e fa          	endbr64 
    af25:	55                   	push   rbp
    af26:	48 89 e5             	mov    rbp,rsp
    af29:	48 83 ec 30          	sub    rsp,0x30
    af2d:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    af31:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    af34:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    af38:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    af3c:	48 89 c7             	mov    rdi,rax
    af3f:	e8 70 fc ff ff       	call   abb4 <isdigit>
    af44:	84 c0                	test   al,al
    af46:	74 27                	je     af6f <numeric_check+0x4e>
    af48:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    af4c:	48 89 c7             	mov    rdi,rax
    af4f:	e8 1c 79 ff ff       	call   2870 <atoi@plt>
    af54:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
    af57:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    af5a:	39 45 e4             	cmp    DWORD PTR [rbp-0x1c],eax
    af5d:	77 10                	ja     af6f <numeric_check+0x4e>
    af5f:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    af62:	48 98                	cdqe   
    af64:	48 39 45 d8          	cmp    QWORD PTR [rbp-0x28],rax
    af68:	72 05                	jb     af6f <numeric_check+0x4e>
    af6a:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    af6d:	eb 05                	jmp    af74 <numeric_check+0x53>
    af6f:	b8 ff ff ff ff       	mov    eax,0xffffffff
    af74:	c9                   	leave  
    af75:	c3                   	ret    

000000000000af76 <sc_strip>:
    af76:	f3 0f 1e fa          	endbr64 
    af7a:	55                   	push   rbp
    af7b:	48 89 e5             	mov    rbp,rsp
    af7e:	48 83 ec 10          	sub    rsp,0x10
    af82:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    af86:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    af8a:	48 8d 35 af 3e 00 00 	lea    rsi,[rip+0x3eaf]        # ee40 <_IO_stdin_used+0x1e40>
    af91:	48 89 c7             	mov    rdi,rax
    af94:	e8 47 75 ff ff       	call   24e0 <strcspn@plt>
    af99:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    af9d:	48 01 d0             	add    rax,rdx
    afa0:	c6 00 00             	mov    BYTE PTR [rax],0x0
    afa3:	90                   	nop
    afa4:	c9                   	leave  
    afa5:	c3                   	ret    

000000000000afa6 <void_rule>:
    afa6:	f3 0f 1e fa          	endbr64 
    afaa:	55                   	push   rbp
    afab:	48 89 e5             	mov    rbp,rsp
    afae:	48 83 ec 10          	sub    rsp,0x10
    afb2:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    afb6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    afba:	48 05 6e 03 00 00    	add    rax,0x36e
    afc0:	ba 0a 00 00 00       	mov    edx,0xa
    afc5:	be 00 00 00 00       	mov    esi,0x0
    afca:	48 89 c7             	mov    rdi,rax
    afcd:	e8 3e 76 ff ff       	call   2610 <memset@plt>
    afd2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    afd6:	48 05 68 03 00 00    	add    rax,0x368
    afdc:	ba 06 00 00 00       	mov    edx,0x6
    afe1:	be 00 00 00 00       	mov    esi,0x0
    afe6:	48 89 c7             	mov    rdi,rax
    afe9:	e8 22 76 ff ff       	call   2610 <memset@plt>
    afee:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aff2:	48 05 50 03 00 00    	add    rax,0x350
    aff8:	ba 18 00 00 00       	mov    edx,0x18
    affd:	be 00 00 00 00       	mov    esi,0x0
    b002:	48 89 c7             	mov    rdi,rax
    b005:	e8 06 76 ff ff       	call   2610 <memset@plt>
    b00a:	90                   	nop
    b00b:	c9                   	leave  
    b00c:	c3                   	ret    

000000000000b00d <line_parser>:
    b00d:	f3 0f 1e fa          	endbr64 
    b011:	55                   	push   rbp
    b012:	48 89 e5             	mov    rbp,rsp
    b015:	53                   	push   rbx
    b016:	48 81 ec 98 00 00 00 	sub    rsp,0x98
    b01d:	48 89 bd 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rdi
    b024:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b02b:	00 00 
    b02d:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    b031:	31 c0                	xor    eax,eax
    b033:	8b 05 db 6f 00 00    	mov    eax,DWORD PTR [rip+0x6fdb]        # 12014 <num_rules>
    b039:	83 c0 01             	add    eax,0x1
    b03c:	89 05 d2 6f 00 00    	mov    DWORD PTR [rip+0x6fd2],eax        # 12014 <num_rules>
    b042:	8b 05 cc 6f 00 00    	mov    eax,DWORD PTR [rip+0x6fcc]        # 12014 <num_rules>
    b048:	48 98                	cdqe   
    b04a:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    b051:	48 8d 15 88 72 00 00 	lea    rdx,[rip+0x7288]        # 122e0 <rules>
    b058:	48 01 d0             	add    rax,rdx
    b05b:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    b05f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b063:	ba 08 00 00 00       	mov    edx,0x8
    b068:	be 00 00 00 00       	mov    esi,0x0
    b06d:	48 89 c7             	mov    rdi,rax
    b070:	e8 9b 75 ff ff       	call   2610 <memset@plt>
    b075:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b079:	c7 80 44 01 00 00 ff 	mov    DWORD PTR [rax+0x144],0xffffffff
    b080:	ff ff ff 
    b083:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b087:	c7 80 40 01 00 00 ff 	mov    DWORD PTR [rax+0x140],0xffffffff
    b08e:	ff ff ff 
    b091:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b095:	c7 40 1c ff ff ff ff 	mov    DWORD PTR [rax+0x1c],0xffffffff
    b09c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b0a0:	c7 40 18 ff ff ff ff 	mov    DWORD PTR [rax+0x18],0xffffffff
    b0a7:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b0ab:	c7 40 10 ff ff ff ff 	mov    DWORD PTR [rax+0x10],0xffffffff
    b0b2:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b0b6:	c7 80 4c 03 00 00 00 	mov    DWORD PTR [rax+0x34c],0x0
    b0bd:	00 00 00 
    b0c0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b0c4:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
    b0ca:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b0ce:	c7 40 04 00 00 00 00 	mov    DWORD PTR [rax+0x4],0x0
    b0d5:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b0d9:	48 89 c7             	mov    rdi,rax
    b0dc:	e8 c5 fe ff ff       	call   afa6 <void_rule>
    b0e1:	c7 45 88 00 00 00 00 	mov    DWORD PTR [rbp-0x78],0x0
    b0e8:	c6 85 7c ff ff ff 00 	mov    BYTE PTR [rbp-0x84],0x0
    b0ef:	c7 45 80 00 00 00 00 	mov    DWORD PTR [rbp-0x80],0x0
    b0f6:	c7 45 84 00 00 00 00 	mov    DWORD PTR [rbp-0x7c],0x0
    b0fd:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    b104:	48 89 c7             	mov    rdi,rax
    b107:	e8 94 74 ff ff       	call   25a0 <strlen@plt>
    b10c:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    b10f:	c6 85 7d ff ff ff 00 	mov    BYTE PTR [rbp-0x83],0x0
    b116:	c6 85 7e ff ff ff 00 	mov    BYTE PTR [rbp-0x82],0x0
    b11d:	c6 85 7f ff ff ff 00 	mov    BYTE PTR [rbp-0x81],0x0
    b124:	e9 98 0d 00 00       	jmp    bec1 <line_parser+0xeb4>
    b129:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    b12c:	48 63 d0             	movsxd rdx,eax
    b12f:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    b136:	48 01 d0             	add    rax,rdx
    b139:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b13c:	0f be c0             	movsx  eax,al
    b13f:	89 c7                	mov    edi,eax
    b141:	e8 58 fa ff ff       	call   ab9e <delimit>
    b146:	83 f0 01             	xor    eax,0x1
    b149:	84 c0                	test   al,al
    b14b:	74 04                	je     b151 <line_parser+0x144>
    b14d:	83 45 84 01          	add    DWORD PTR [rbp-0x7c],0x1
    b151:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    b154:	48 63 d0             	movsxd rdx,eax
    b157:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    b15e:	48 01 d0             	add    rax,rdx
    b161:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b164:	0f be c0             	movsx  eax,al
    b167:	89 c7                	mov    edi,eax
    b169:	e8 30 fa ff ff       	call   ab9e <delimit>
    b16e:	84 c0                	test   al,al
    b170:	74 3f                	je     b1b1 <line_parser+0x1a4>
    b172:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    b175:	3b 45 80             	cmp    eax,DWORD PTR [rbp-0x80]
    b178:	75 37                	jne    b1b1 <line_parser+0x1a4>
    b17a:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    b17d:	48 63 d0             	movsxd rdx,eax
    b180:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    b187:	48 01 d0             	add    rax,rdx
    b18a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b18d:	3c 3a                	cmp    al,0x3a
    b18f:	75 11                	jne    b1a2 <line_parser+0x195>
    b191:	48 8d 3d aa 3c 00 00 	lea    rdi,[rip+0x3caa]        # ee42 <_IO_stdin_used+0x1e42>
    b198:	b8 00 00 00 00       	mov    eax,0x0
    b19d:	e8 1e 73 ff ff       	call   24c0 <printf@plt>
    b1a2:	83 45 84 01          	add    DWORD PTR [rbp-0x7c],0x1
    b1a6:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    b1a9:	89 45 80             	mov    DWORD PTR [rbp-0x80],eax
    b1ac:	e9 10 0d 00 00       	jmp    bec1 <line_parser+0xeb4>
    b1b1:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    b1b4:	48 63 d0             	movsxd rdx,eax
    b1b7:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    b1be:	48 01 d0             	add    rax,rdx
    b1c1:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b1c4:	0f be c0             	movsx  eax,al
    b1c7:	89 c7                	mov    edi,eax
    b1c9:	e8 d0 f9 ff ff       	call   ab9e <delimit>
    b1ce:	84 c0                	test   al,al
    b1d0:	74 08                	je     b1da <line_parser+0x1cd>
    b1d2:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
    b1d5:	3b 45 84             	cmp    eax,DWORD PTR [rbp-0x7c]
    b1d8:	75 18                	jne    b1f2 <line_parser+0x1e5>
    b1da:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    b1dd:	3b 45 8c             	cmp    eax,DWORD PTR [rbp-0x74]
    b1e0:	0f 85 db 0c 00 00    	jne    bec1 <line_parser+0xeb4>
    b1e6:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
    b1e9:	3b 45 84             	cmp    eax,DWORD PTR [rbp-0x7c]
    b1ec:	0f 84 cf 0c 00 00    	je     bec1 <line_parser+0xeb4>
    b1f2:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    b1f5:	8d 50 ff             	lea    edx,[rax-0x1]
    b1f8:	8b 4d 80             	mov    ecx,DWORD PTR [rbp-0x80]
    b1fb:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    b202:	89 ce                	mov    esi,ecx
    b204:	48 89 c7             	mov    rdi,rax
    b207:	e8 12 f9 ff ff       	call   ab1e <substr>
    b20c:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    b210:	0f b6 85 7c ff ff ff 	movzx  eax,BYTE PTR [rbp-0x84]
    b217:	83 f0 01             	xor    eax,0x1
    b21a:	84 c0                	test   al,al
    b21c:	0f 84 ea 02 00 00    	je     b50c <line_parser+0x4ff>
    b222:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b226:	48 8d 35 24 3c 00 00 	lea    rsi,[rip+0x3c24]        # ee51 <_IO_stdin_used+0x1e51>
    b22d:	48 89 c7             	mov    rdi,rax
    b230:	e8 ab 75 ff ff       	call   27e0 <strcmp@plt>
    b235:	85 c0                	test   eax,eax
    b237:	75 33                	jne    b26c <line_parser+0x25f>
    b239:	0f b6 85 7d ff ff ff 	movzx  eax,BYTE PTR [rbp-0x83]
    b240:	83 f0 01             	xor    eax,0x1
    b243:	84 c0                	test   al,al
    b245:	74 25                	je     b26c <line_parser+0x25f>
    b247:	0f b6 85 7e ff ff ff 	movzx  eax,BYTE PTR [rbp-0x82]
    b24e:	83 f0 01             	xor    eax,0x1
    b251:	84 c0                	test   al,al
    b253:	74 17                	je     b26c <line_parser+0x25f>
    b255:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b259:	48 8d 15 e6 a1 ff ff 	lea    rdx,[rip+0xffffffffffffa1e6]        # 5446 <stdout_alert>
    b260:	48 89 90 80 03 00 00 	mov    QWORD PTR [rax+0x380],rdx
    b267:	e9 31 0c 00 00       	jmp    be9d <line_parser+0xe90>
    b26c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b270:	48 8d 35 91 3b 00 00 	lea    rsi,[rip+0x3b91]        # ee08 <_IO_stdin_used+0x1e08>
    b277:	48 89 c7             	mov    rdi,rax
    b27a:	e8 61 75 ff ff       	call   27e0 <strcmp@plt>
    b27f:	85 c0                	test   eax,eax
    b281:	74 45                	je     b2c8 <line_parser+0x2bb>
    b283:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b287:	48 8d 35 76 3b 00 00 	lea    rsi,[rip+0x3b76]        # ee04 <_IO_stdin_used+0x1e04>
    b28e:	48 89 c7             	mov    rdi,rax
    b291:	e8 4a 75 ff ff       	call   27e0 <strcmp@plt>
    b296:	85 c0                	test   eax,eax
    b298:	74 2e                	je     b2c8 <line_parser+0x2bb>
    b29a:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b29e:	48 8d 35 68 3b 00 00 	lea    rsi,[rip+0x3b68]        # ee0d <_IO_stdin_used+0x1e0d>
    b2a5:	48 89 c7             	mov    rdi,rax
    b2a8:	e8 33 75 ff ff       	call   27e0 <strcmp@plt>
    b2ad:	85 c0                	test   eax,eax
    b2af:	74 17                	je     b2c8 <line_parser+0x2bb>
    b2b1:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b2b5:	48 8d 35 55 3b 00 00 	lea    rsi,[rip+0x3b55]        # ee11 <_IO_stdin_used+0x1e11>
    b2bc:	48 89 c7             	mov    rdi,rax
    b2bf:	e8 1c 75 ff ff       	call   27e0 <strcmp@plt>
    b2c4:	85 c0                	test   eax,eax
    b2c6:	75 34                	jne    b2fc <line_parser+0x2ef>
    b2c8:	0f b6 85 7e ff ff ff 	movzx  eax,BYTE PTR [rbp-0x82]
    b2cf:	83 f0 01             	xor    eax,0x1
    b2d2:	84 c0                	test   al,al
    b2d4:	74 26                	je     b2fc <line_parser+0x2ef>
    b2d6:	0f b6 85 7d ff ff ff 	movzx  eax,BYTE PTR [rbp-0x83]
    b2dd:	83 f0 01             	xor    eax,0x1
    b2e0:	84 c0                	test   al,al
    b2e2:	74 18                	je     b2fc <line_parser+0x2ef>
    b2e4:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    b2e8:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b2ec:	48 89 d6             	mov    rsi,rdx
    b2ef:	48 89 c7             	mov    rdi,rax
    b2f2:	e8 ae fa ff ff       	call   ada5 <assign_protocol>
    b2f7:	e9 a1 0b 00 00       	jmp    be9d <line_parser+0xe90>
    b2fc:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b300:	48 89 c7             	mov    rdi,rax
    b303:	e8 ac f8 ff ff       	call   abb4 <isdigit>
    b308:	84 c0                	test   al,al
    b30a:	75 17                	jne    b323 <line_parser+0x316>
    b30c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b310:	48 8d 35 e9 3a 00 00 	lea    rsi,[rip+0x3ae9]        # ee00 <_IO_stdin_used+0x1e00>
    b317:	48 89 c7             	mov    rdi,rax
    b31a:	e8 c1 74 ff ff       	call   27e0 <strcmp@plt>
    b31f:	85 c0                	test   eax,eax
    b321:	75 34                	jne    b357 <line_parser+0x34a>
    b323:	0f b6 85 7d ff ff ff 	movzx  eax,BYTE PTR [rbp-0x83]
    b32a:	83 f0 01             	xor    eax,0x1
    b32d:	84 c0                	test   al,al
    b32f:	74 26                	je     b357 <line_parser+0x34a>
    b331:	0f b6 85 7e ff ff ff 	movzx  eax,BYTE PTR [rbp-0x82]
    b338:	83 f0 01             	xor    eax,0x1
    b33b:	84 c0                	test   al,al
    b33d:	74 18                	je     b357 <line_parser+0x34a>
    b33f:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    b343:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b347:	48 89 d6             	mov    rsi,rdx
    b34a:	48 89 c7             	mov    rdi,rax
    b34d:	e8 9c f9 ff ff       	call   acee <assign_port_number>
    b352:	e9 46 0b 00 00       	jmp    be9d <line_parser+0xe90>
    b357:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b35b:	ba 08 00 00 00       	mov    edx,0x8
    b360:	48 8d 35 f0 3a 00 00 	lea    rsi,[rip+0x3af0]        # ee57 <_IO_stdin_used+0x1e57>
    b367:	48 89 c7             	mov    rdi,rax
    b36a:	e8 51 72 ff ff       	call   25c0 <strncmp@plt>
    b36f:	85 c0                	test   eax,eax
    b371:	75 75                	jne    b3e8 <line_parser+0x3db>
    b373:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b377:	48 8d 50 09          	lea    rdx,[rax+0x9]
    b37b:	48 8d 45 de          	lea    rax,[rbp-0x22]
    b37f:	48 89 d6             	mov    rsi,rdx
    b382:	48 89 c7             	mov    rdi,rax
    b385:	e8 16 73 ff ff       	call   26a0 <strcpy@plt>
    b38a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b38e:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    b391:	85 c0                	test   eax,eax
    b393:	75 2e                	jne    b3c3 <line_parser+0x3b6>
    b395:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b399:	8b 00                	mov    eax,DWORD PTR [rax]
    b39b:	85 c0                	test   eax,eax
    b39d:	75 24                	jne    b3c3 <line_parser+0x3b6>
    b39f:	8b 15 2f dc 12 00    	mov    edx,DWORD PTR [rip+0x12dc2f]        # 138fd4 <homenet>
    b3a5:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b3a9:	89 10                	mov    DWORD PTR [rax],edx
    b3ab:	48 8d 45 de          	lea    rax,[rbp-0x22]
    b3af:	48 89 c7             	mov    rdi,rax
    b3b2:	e8 9b f9 ff ff       	call   ad52 <check_port_number>
    b3b7:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    b3bb:	89 42 0c             	mov    DWORD PTR [rdx+0xc],eax
    b3be:	e9 da 0a 00 00       	jmp    be9d <line_parser+0xe90>
    b3c3:	8b 15 0b dc 12 00    	mov    edx,DWORD PTR [rip+0x12dc0b]        # 138fd4 <homenet>
    b3c9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b3cd:	89 50 04             	mov    DWORD PTR [rax+0x4],edx
    b3d0:	48 8d 45 de          	lea    rax,[rbp-0x22]
    b3d4:	48 89 c7             	mov    rdi,rax
    b3d7:	e8 76 f9 ff ff       	call   ad52 <check_port_number>
    b3dc:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    b3e0:	89 42 08             	mov    DWORD PTR [rdx+0x8],eax
    b3e3:	e9 b5 0a 00 00       	jmp    be9d <line_parser+0xe90>
    b3e8:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b3ec:	48 8d 35 6d 3a 00 00 	lea    rsi,[rip+0x3a6d]        # ee60 <_IO_stdin_used+0x1e60>
    b3f3:	48 89 c7             	mov    rdi,rax
    b3f6:	e8 e5 73 ff ff       	call   27e0 <strcmp@plt>
    b3fb:	85 c0                	test   eax,eax
    b3fd:	75 30                	jne    b42f <line_parser+0x422>
    b3ff:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b403:	8b 10                	mov    edx,DWORD PTR [rax]
    b405:	8b 05 c9 db 12 00    	mov    eax,DWORD PTR [rip+0x12dbc9]        # 138fd4 <homenet>
    b40b:	39 c2                	cmp    edx,eax
    b40d:	75 10                	jne    b41f <line_parser+0x412>
    b40f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b413:	c7 40 10 45 00 00 00 	mov    DWORD PTR [rax+0x10],0x45
    b41a:	e9 7e 0a 00 00       	jmp    be9d <line_parser+0xe90>
    b41f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b423:	c7 40 10 46 00 00 00 	mov    DWORD PTR [rax+0x10],0x46
    b42a:	e9 6e 0a 00 00       	jmp    be9d <line_parser+0xe90>
    b42f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b433:	48 8d 35 29 3a 00 00 	lea    rsi,[rip+0x3a29]        # ee63 <_IO_stdin_used+0x1e63>
    b43a:	48 89 c7             	mov    rdi,rax
    b43d:	e8 9e 73 ff ff       	call   27e0 <strcmp@plt>
    b442:	85 c0                	test   eax,eax
    b444:	75 10                	jne    b456 <line_parser+0x449>
    b446:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b44a:	c7 40 10 47 00 00 00 	mov    DWORD PTR [rax+0x10],0x47
    b451:	e9 47 0a 00 00       	jmp    be9d <line_parser+0xe90>
    b456:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b45a:	ba 0c 00 00 00       	mov    edx,0xc
    b45f:	48 8d 35 00 3a 00 00 	lea    rsi,[rip+0x3a00]        # ee66 <_IO_stdin_used+0x1e66>
    b466:	48 89 c7             	mov    rdi,rax
    b469:	e8 52 71 ff ff       	call   25c0 <strncmp@plt>
    b46e:	85 c0                	test   eax,eax
    b470:	75 7f                	jne    b4f1 <line_parser+0x4e4>
    b472:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b476:	48 8d 50 0c          	lea    rdx,[rax+0xc]
    b47a:	48 8d 45 de          	lea    rax,[rbp-0x22]
    b47e:	48 89 d6             	mov    rsi,rdx
    b481:	48 89 c7             	mov    rdi,rax
    b484:	e8 17 72 ff ff       	call   26a0 <strcpy@plt>
    b489:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b48d:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    b490:	85 c0                	test   eax,eax
    b492:	75 37                	jne    b4cb <line_parser+0x4be>
    b494:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b498:	8b 10                	mov    edx,DWORD PTR [rax]
    b49a:	8b 05 34 db 12 00    	mov    eax,DWORD PTR [rip+0x12db34]        # 138fd4 <homenet>
    b4a0:	39 c2                	cmp    edx,eax
    b4a2:	75 27                	jne    b4cb <line_parser+0x4be>
    b4a4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b4a8:	c7 40 04 ff ff ff ff 	mov    DWORD PTR [rax+0x4],0xffffffff
    b4af:	48 8d 45 de          	lea    rax,[rbp-0x22]
    b4b3:	48 83 c0 01          	add    rax,0x1
    b4b7:	48 89 c7             	mov    rdi,rax
    b4ba:	e8 93 f8 ff ff       	call   ad52 <check_port_number>
    b4bf:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    b4c3:	89 42 08             	mov    DWORD PTR [rdx+0x8],eax
    b4c6:	e9 d2 09 00 00       	jmp    be9d <line_parser+0xe90>
    b4cb:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b4cf:	c7 00 ff ff ff ff    	mov    DWORD PTR [rax],0xffffffff
    b4d5:	48 8d 45 de          	lea    rax,[rbp-0x22]
    b4d9:	48 83 c0 01          	add    rax,0x1
    b4dd:	48 89 c7             	mov    rdi,rax
    b4e0:	e8 6d f8 ff ff       	call   ad52 <check_port_number>
    b4e5:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    b4e9:	89 42 0c             	mov    DWORD PTR [rdx+0xc],eax
    b4ec:	e9 ac 09 00 00       	jmp    be9d <line_parser+0xe90>
    b4f1:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b4f5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b4f8:	3c 28                	cmp    al,0x28
    b4fa:	0f 85 9d 09 00 00    	jne    be9d <line_parser+0xe90>
    b500:	c6 85 7c ff ff ff 01 	mov    BYTE PTR [rbp-0x84],0x1
    b507:	e9 b5 09 00 00       	jmp    bec1 <line_parser+0xeb4>
    b50c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b510:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b513:	3c 28                	cmp    al,0x28
    b515:	75 0e                	jne    b525 <line_parser+0x518>
    b517:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b51b:	48 83 c0 01          	add    rax,0x1
    b51f:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    b523:	eb 08                	jmp    b52d <line_parser+0x520>
    b525:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b529:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    b52d:	80 bd 7d ff ff ff 00 	cmp    BYTE PTR [rbp-0x83],0x0
    b534:	0f 84 8e 00 00 00    	je     b5c8 <line_parser+0x5bb>
    b53a:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b53e:	48 89 c7             	mov    rdi,rax
    b541:	e8 5a 70 ff ff       	call   25a0 <strlen@plt>
    b546:	48 8d 50 ff          	lea    rdx,[rax-0x1]
    b54a:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b54e:	48 01 d0             	add    rax,rdx
    b551:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b554:	3c 3b                	cmp    al,0x3b
    b556:	75 36                	jne    b58e <line_parser+0x581>
    b558:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b55c:	48 89 c7             	mov    rdi,rax
    b55f:	e8 3c 70 ff ff       	call   25a0 <strlen@plt>
    b564:	48 8d 50 fe          	lea    rdx,[rax-0x2]
    b568:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b56c:	48 8d 88 4c 01 00 00 	lea    rcx,[rax+0x14c]
    b573:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b577:	48 89 c6             	mov    rsi,rax
    b57a:	48 89 cf             	mov    rdi,rcx
    b57d:	e8 9e 70 ff ff       	call   2620 <strncat@plt>
    b582:	c6 85 7d ff ff ff 00 	mov    BYTE PTR [rbp-0x83],0x0
    b589:	e9 33 09 00 00       	jmp    bec1 <line_parser+0xeb4>
    b58e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b592:	48 8d 90 4c 01 00 00 	lea    rdx,[rax+0x14c]
    b599:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b59d:	48 89 c6             	mov    rsi,rax
    b5a0:	48 89 d7             	mov    rdi,rdx
    b5a3:	e8 28 73 ff ff       	call   28d0 <strcat@plt>
    b5a8:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b5ac:	48 8d 98 4c 01 00 00 	lea    rbx,[rax+0x14c]
    b5b3:	48 89 df             	mov    rdi,rbx
    b5b6:	e8 e5 6f ff ff       	call   25a0 <strlen@plt>
    b5bb:	48 01 d8             	add    rax,rbx
    b5be:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    b5c3:	e9 d5 08 00 00       	jmp    be9d <line_parser+0xe90>
    b5c8:	80 bd 7e ff ff ff 00 	cmp    BYTE PTR [rbp-0x82],0x0
    b5cf:	74 7f                	je     b650 <line_parser+0x643>
    b5d1:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b5d5:	48 8d 35 97 38 00 00 	lea    rsi,[rip+0x3897]        # ee73 <_IO_stdin_used+0x1e73>
    b5dc:	48 89 c7             	mov    rdi,rax
    b5df:	e8 2c 6f ff ff       	call   2510 <strstr@plt>
    b5e4:	48 85 c0             	test   rax,rax
    b5e7:	74 33                	je     b61c <line_parser+0x60f>
    b5e9:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b5ed:	48 89 c7             	mov    rdi,rax
    b5f0:	e8 ab 6f ff ff       	call   25a0 <strlen@plt>
    b5f5:	48 8d 50 fd          	lea    rdx,[rax-0x3]
    b5f9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b5fd:	48 8d 48 40          	lea    rcx,[rax+0x40]
    b601:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b605:	48 89 c6             	mov    rsi,rax
    b608:	48 89 cf             	mov    rdi,rcx
    b60b:	e8 10 70 ff ff       	call   2620 <strncat@plt>
    b610:	c6 85 7e ff ff ff 00 	mov    BYTE PTR [rbp-0x82],0x0
    b617:	e9 a5 08 00 00       	jmp    bec1 <line_parser+0xeb4>
    b61c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b620:	48 8d 50 40          	lea    rdx,[rax+0x40]
    b624:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b628:	48 89 c6             	mov    rsi,rax
    b62b:	48 89 d7             	mov    rdi,rdx
    b62e:	e8 9d 72 ff ff       	call   28d0 <strcat@plt>
    b633:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b637:	48 8d 58 40          	lea    rbx,[rax+0x40]
    b63b:	48 89 df             	mov    rdi,rbx
    b63e:	e8 5d 6f ff ff       	call   25a0 <strlen@plt>
    b643:	48 01 d8             	add    rax,rbx
    b646:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    b64b:	e9 4d 08 00 00       	jmp    be9d <line_parser+0xe90>
    b650:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b654:	ba 06 00 00 00       	mov    edx,0x6
    b659:	48 8d 35 16 38 00 00 	lea    rsi,[rip+0x3816]        # ee76 <_IO_stdin_used+0x1e76>
    b660:	48 89 c7             	mov    rdi,rax
    b663:	e8 58 6f ff ff       	call   25c0 <strncmp@plt>
    b668:	85 c0                	test   eax,eax
    b66a:	75 37                	jne    b6a3 <line_parser+0x696>
    b66c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b670:	48 89 c7             	mov    rdi,rax
    b673:	e8 28 6f ff ff       	call   25a0 <strlen@plt>
    b678:	48 8d 50 f8          	lea    rdx,[rax-0x8]
    b67c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b680:	48 8d 48 06          	lea    rcx,[rax+0x6]
    b684:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b688:	48 83 c0 20          	add    rax,0x20
    b68c:	48 89 ce             	mov    rsi,rcx
    b68f:	48 89 c7             	mov    rdi,rax
    b692:	e8 59 6f ff ff       	call   25f0 <strncpy@plt>
    b697:	c6 85 7f ff ff ff 01 	mov    BYTE PTR [rbp-0x81],0x1
    b69e:	e9 fa 07 00 00       	jmp    be9d <line_parser+0xe90>
    b6a3:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b6a7:	ba 05 00 00 00       	mov    edx,0x5
    b6ac:	48 8d 35 ca 37 00 00 	lea    rsi,[rip+0x37ca]        # ee7d <_IO_stdin_used+0x1e7d>
    b6b3:	48 89 c7             	mov    rdi,rax
    b6b6:	e8 05 6f ff ff       	call   25c0 <strncmp@plt>
    b6bb:	85 c0                	test   eax,eax
    b6bd:	75 4d                	jne    b70c <line_parser+0x6ff>
    b6bf:	c6 85 7d ff ff ff 01 	mov    BYTE PTR [rbp-0x83],0x1
    b6c6:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b6ca:	48 83 c0 05          	add    rax,0x5
    b6ce:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    b6d2:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b6d6:	48 8d 90 4c 01 00 00 	lea    rdx,[rax+0x14c]
    b6dd:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b6e1:	48 89 c6             	mov    rsi,rax
    b6e4:	48 89 d7             	mov    rdi,rdx
    b6e7:	e8 e4 71 ff ff       	call   28d0 <strcat@plt>
    b6ec:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b6f0:	48 8d 98 4c 01 00 00 	lea    rbx,[rax+0x14c]
    b6f7:	48 89 df             	mov    rdi,rbx
    b6fa:	e8 a1 6e ff ff       	call   25a0 <strlen@plt>
    b6ff:	48 01 d8             	add    rax,rbx
    b702:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    b707:	e9 91 07 00 00       	jmp    be9d <line_parser+0xe90>
    b70c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b710:	ba 06 00 00 00       	mov    edx,0x6
    b715:	48 8d 35 67 37 00 00 	lea    rsi,[rip+0x3767]        # ee83 <_IO_stdin_used+0x1e83>
    b71c:	48 89 c7             	mov    rdi,rax
    b71f:	e8 9c 6e ff ff       	call   25c0 <strncmp@plt>
    b724:	85 c0                	test   eax,eax
    b726:	75 31                	jne    b759 <line_parser+0x74c>
    b728:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b72c:	48 89 c7             	mov    rdi,rax
    b72f:	e8 42 f8 ff ff       	call   af76 <sc_strip>
    b734:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b738:	48 83 c0 06          	add    rax,0x6
    b73c:	48 89 c7             	mov    rdi,rax
    b73f:	e8 2c 71 ff ff       	call   2870 <atoi@plt>
    b744:	89 45 ac             	mov    DWORD PTR [rbp-0x54],eax
    b747:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b74b:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    b74e:	89 90 4c 03 00 00    	mov    DWORD PTR [rax+0x34c],edx
    b754:	e9 44 07 00 00       	jmp    be9d <line_parser+0xe90>
    b759:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b75d:	ba 05 00 00 00       	mov    edx,0x5
    b762:	48 8d 35 21 37 00 00 	lea    rsi,[rip+0x3721]        # ee8a <_IO_stdin_used+0x1e8a>
    b769:	48 89 c7             	mov    rdi,rax
    b76c:	e8 4f 6e ff ff       	call   25c0 <strncmp@plt>
    b771:	85 c0                	test   eax,eax
    b773:	75 3f                	jne    b7b4 <line_parser+0x7a7>
    b775:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b779:	48 89 c7             	mov    rdi,rax
    b77c:	e8 1f 6e ff ff       	call   25a0 <strlen@plt>
    b781:	48 8d 50 fa          	lea    rdx,[rax-0x6]
    b785:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b789:	48 8d 48 05          	lea    rcx,[rax+0x5]
    b78d:	48 8d 45 de          	lea    rax,[rbp-0x22]
    b791:	48 89 ce             	mov    rsi,rcx
    b794:	48 89 c7             	mov    rdi,rax
    b797:	e8 54 6e ff ff       	call   25f0 <strncpy@plt>
    b79c:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    b7a0:	48 8d 45 de          	lea    rax,[rbp-0x22]
    b7a4:	48 89 d6             	mov    rsi,rdx
    b7a7:	48 89 c7             	mov    rdi,rax
    b7aa:	e8 a7 f6 ff ff       	call   ae56 <get_ruletype>
    b7af:	e9 e9 06 00 00       	jmp    be9d <line_parser+0xe90>
    b7b4:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b7b8:	ba 08 00 00 00       	mov    edx,0x8
    b7bd:	48 8d 35 cc 36 00 00 	lea    rsi,[rip+0x36cc]        # ee90 <_IO_stdin_used+0x1e90>
    b7c4:	48 89 c7             	mov    rdi,rax
    b7c7:	e8 f4 6d ff ff       	call   25c0 <strncmp@plt>
    b7cc:	85 c0                	test   eax,eax
    b7ce:	0f 85 8f 00 00 00    	jne    b863 <line_parser+0x856>
    b7d4:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b7d8:	48 83 c0 08          	add    rax,0x8
    b7dc:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    b7e0:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    b7e4:	48 8d 35 88 36 00 00 	lea    rsi,[rip+0x3688]        # ee73 <_IO_stdin_used+0x1e73>
    b7eb:	48 89 c7             	mov    rdi,rax
    b7ee:	e8 1d 6d ff ff       	call   2510 <strstr@plt>
    b7f3:	48 85 c0             	test   rax,rax
    b7f6:	74 30                	je     b828 <line_parser+0x81b>
    b7f8:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b7fc:	48 89 c7             	mov    rdi,rax
    b7ff:	e8 9c 6d ff ff       	call   25a0 <strlen@plt>
    b804:	48 8d 50 f5          	lea    rdx,[rax-0xb]
    b808:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b80c:	48 8d 48 08          	lea    rcx,[rax+0x8]
    b810:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b814:	48 83 c0 40          	add    rax,0x40
    b818:	48 89 ce             	mov    rsi,rcx
    b81b:	48 89 c7             	mov    rdi,rax
    b81e:	e8 cd 6d ff ff       	call   25f0 <strncpy@plt>
    b823:	e9 75 06 00 00       	jmp    be9d <line_parser+0xe90>
    b828:	c6 85 7e ff ff ff 01 	mov    BYTE PTR [rbp-0x82],0x1
    b82f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b833:	48 8d 50 40          	lea    rdx,[rax+0x40]
    b837:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    b83b:	48 89 c6             	mov    rsi,rax
    b83e:	48 89 d7             	mov    rdi,rdx
    b841:	e8 8a 70 ff ff       	call   28d0 <strcat@plt>
    b846:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b84a:	48 8d 58 40          	lea    rbx,[rax+0x40]
    b84e:	48 89 df             	mov    rdi,rbx
    b851:	e8 4a 6d ff ff       	call   25a0 <strlen@plt>
    b856:	48 01 d8             	add    rax,rbx
    b859:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    b85e:	e9 3a 06 00 00       	jmp    be9d <line_parser+0xe90>
    b863:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b867:	ba 04 00 00 00       	mov    edx,0x4
    b86c:	48 8d 35 26 36 00 00 	lea    rsi,[rip+0x3626]        # ee99 <_IO_stdin_used+0x1e99>
    b873:	48 89 c7             	mov    rdi,rax
    b876:	e8 45 6d ff ff       	call   25c0 <strncmp@plt>
    b87b:	85 c0                	test   eax,eax
    b87d:	0f 85 8e 00 00 00    	jne    b911 <line_parser+0x904>
    b883:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b887:	48 8d 35 b2 35 00 00 	lea    rsi,[rip+0x35b2]        # ee40 <_IO_stdin_used+0x1e40>
    b88e:	48 89 c7             	mov    rdi,rax
    b891:	e8 4a 6c ff ff       	call   24e0 <strcspn@plt>
    b896:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
    b89a:	48 01 d0             	add    rax,rdx
    b89d:	c6 00 00             	mov    BYTE PTR [rax],0x0
    b8a0:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b8a4:	48 83 c0 04          	add    rax,0x4
    b8a8:	48 89 c7             	mov    rdi,rax
    b8ab:	e8 04 f3 ff ff       	call   abb4 <isdigit>
    b8b0:	84 c0                	test   al,al
    b8b2:	74 47                	je     b8fb <line_parser+0x8ee>
    b8b4:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b8b8:	48 83 c0 04          	add    rax,0x4
    b8bc:	48 89 c7             	mov    rdi,rax
    b8bf:	e8 ac 6f ff ff       	call   2870 <atoi@plt>
    b8c4:	89 45 a8             	mov    DWORD PTR [rbp-0x58],eax
    b8c7:	83 7d a8 00          	cmp    DWORD PTR [rbp-0x58],0x0
    b8cb:	7e 18                	jle    b8e5 <line_parser+0x8d8>
    b8cd:	83 7d a8 0a          	cmp    DWORD PTR [rbp-0x58],0xa
    b8d1:	7f 12                	jg     b8e5 <line_parser+0x8d8>
    b8d3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b8d7:	8b 55 a8             	mov    edx,DWORD PTR [rbp-0x58]
    b8da:	89 90 48 01 00 00    	mov    DWORD PTR [rax+0x148],edx
    b8e0:	e9 b8 05 00 00       	jmp    be9d <line_parser+0xe90>
    b8e5:	48 8d 3d b4 35 00 00 	lea    rdi,[rip+0x35b4]        # eea0 <_IO_stdin_used+0x1ea0>
    b8ec:	e8 6f 6f ff ff       	call   2860 <puts@plt>
    b8f1:	bf ff ff ff ff       	mov    edi,0xffffffff
    b8f6:	e8 45 6e ff ff       	call   2740 <exit@plt>
    b8fb:	48 8d 3d c6 35 00 00 	lea    rdi,[rip+0x35c6]        # eec8 <_IO_stdin_used+0x1ec8>
    b902:	e8 59 6f ff ff       	call   2860 <puts@plt>
    b907:	bf ff ff ff ff       	mov    edi,0xffffffff
    b90c:	e8 2f 6e ff ff       	call   2740 <exit@plt>
    b911:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b915:	ba 06 00 00 00       	mov    edx,0x6
    b91a:	48 8d 35 cf 35 00 00 	lea    rsi,[rip+0x35cf]        # eef0 <_IO_stdin_used+0x1ef0>
    b921:	48 89 c7             	mov    rdi,rax
    b924:	e8 97 6c ff ff       	call   25c0 <strncmp@plt>
    b929:	85 c0                	test   eax,eax
    b92b:	0f 85 9b 00 00 00    	jne    b9cc <line_parser+0x9bf>
    b931:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b935:	48 89 c7             	mov    rdi,rax
    b938:	e8 39 f6 ff ff       	call   af76 <sc_strip>
    b93d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b941:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    b947:	3d 80 00 00 00       	cmp    eax,0x80
    b94c:	75 58                	jne    b9a6 <line_parser+0x999>
    b94e:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b952:	48 83 c0 06          	add    rax,0x6
    b956:	ba ff 00 00 00       	mov    edx,0xff
    b95b:	be 00 00 00 00       	mov    esi,0x0
    b960:	48 89 c7             	mov    rdi,rax
    b963:	e8 b9 f5 ff ff       	call   af21 <numeric_check>
    b968:	89 45 a4             	mov    DWORD PTR [rbp-0x5c],eax
    b96b:	83 7d a4 ff          	cmp    DWORD PTR [rbp-0x5c],0xffffffff
    b96f:	75 16                	jne    b987 <line_parser+0x97a>
    b971:	48 8d 3d 7f 35 00 00 	lea    rdi,[rip+0x357f]        # eef7 <_IO_stdin_used+0x1ef7>
    b978:	e8 e3 6e ff ff       	call   2860 <puts@plt>
    b97d:	bf ff ff ff ff       	mov    edi,0xffffffff
    b982:	e8 b9 6d ff ff       	call   2740 <exit@plt>
    b987:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
    b98a:	89 c2                	mov    edx,eax
    b98c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b990:	88 90 72 03 00 00    	mov    BYTE PTR [rax+0x372],dl
    b996:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b99a:	c6 80 6e 03 00 00 01 	mov    BYTE PTR [rax+0x36e],0x1
    b9a1:	e9 f7 04 00 00       	jmp    be9d <line_parser+0xe90>
    b9a6:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b9aa:	48 83 c0 20          	add    rax,0x20
    b9ae:	48 89 c6             	mov    rsi,rax
    b9b1:	48 8d 3d 58 35 00 00 	lea    rdi,[rip+0x3558]        # ef10 <_IO_stdin_used+0x1f10>
    b9b8:	b8 00 00 00 00       	mov    eax,0x0
    b9bd:	e8 fe 6a ff ff       	call   24c0 <printf@plt>
    b9c2:	bf ff ff ff ff       	mov    edi,0xffffffff
    b9c7:	e8 74 6d ff ff       	call   2740 <exit@plt>
    b9cc:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b9d0:	ba 06 00 00 00       	mov    edx,0x6
    b9d5:	48 8d 35 6b 35 00 00 	lea    rsi,[rip+0x356b]        # ef47 <_IO_stdin_used+0x1f47>
    b9dc:	48 89 c7             	mov    rdi,rax
    b9df:	e8 dc 6b ff ff       	call   25c0 <strncmp@plt>
    b9e4:	85 c0                	test   eax,eax
    b9e6:	0f 85 86 00 00 00    	jne    ba72 <line_parser+0xa65>
    b9ec:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b9f0:	48 89 c7             	mov    rdi,rax
    b9f3:	e8 7e f5 ff ff       	call   af76 <sc_strip>
    b9f8:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b9fc:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    ba02:	3d 80 00 00 00       	cmp    eax,0x80
    ba07:	75 58                	jne    ba61 <line_parser+0xa54>
    ba09:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    ba0d:	48 83 c0 06          	add    rax,0x6
    ba11:	ba ff 00 00 00       	mov    edx,0xff
    ba16:	be 00 00 00 00       	mov    esi,0x0
    ba1b:	48 89 c7             	mov    rdi,rax
    ba1e:	e8 fe f4 ff ff       	call   af21 <numeric_check>
    ba23:	89 45 a0             	mov    DWORD PTR [rbp-0x60],eax
    ba26:	83 7d a0 ff          	cmp    DWORD PTR [rbp-0x60],0xffffffff
    ba2a:	75 16                	jne    ba42 <line_parser+0xa35>
    ba2c:	48 8d 3d 1b 35 00 00 	lea    rdi,[rip+0x351b]        # ef4e <_IO_stdin_used+0x1f4e>
    ba33:	e8 28 6e ff ff       	call   2860 <puts@plt>
    ba38:	bf ff ff ff ff       	mov    edi,0xffffffff
    ba3d:	e8 fe 6c ff ff       	call   2740 <exit@plt>
    ba42:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    ba45:	89 c2                	mov    edx,eax
    ba47:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ba4b:	88 90 73 03 00 00    	mov    BYTE PTR [rax+0x373],dl
    ba51:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ba55:	c6 80 6f 03 00 00 01 	mov    BYTE PTR [rax+0x36f],0x1
    ba5c:	e9 3c 04 00 00       	jmp    be9d <line_parser+0xe90>
    ba61:	48 8d 3d 00 35 00 00 	lea    rdi,[rip+0x3500]        # ef68 <_IO_stdin_used+0x1f68>
    ba68:	e8 f3 6d ff ff       	call   2860 <puts@plt>
    ba6d:	e9 2b 04 00 00       	jmp    be9d <line_parser+0xe90>
    ba72:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    ba76:	ba 08 00 00 00       	mov    edx,0x8
    ba7b:	48 8d 35 18 35 00 00 	lea    rsi,[rip+0x3518]        # ef9a <_IO_stdin_used+0x1f9a>
    ba82:	48 89 c7             	mov    rdi,rax
    ba85:	e8 36 6b ff ff       	call   25c0 <strncmp@plt>
    ba8a:	85 c0                	test   eax,eax
    ba8c:	0f 85 8c 00 00 00    	jne    bb1e <line_parser+0xb11>
    ba92:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    ba96:	48 89 c7             	mov    rdi,rax
    ba99:	e8 d8 f4 ff ff       	call   af76 <sc_strip>
    ba9e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    baa2:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    baa8:	3d 80 00 00 00       	cmp    eax,0x80
    baad:	75 59                	jne    bb08 <line_parser+0xafb>
    baaf:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bab3:	48 83 c0 08          	add    rax,0x8
    bab7:	ba ff ff 00 00       	mov    edx,0xffff
    babc:	be 00 00 00 00       	mov    esi,0x0
    bac1:	48 89 c7             	mov    rdi,rax
    bac4:	e8 58 f4 ff ff       	call   af21 <numeric_check>
    bac9:	89 45 9c             	mov    DWORD PTR [rbp-0x64],eax
    bacc:	83 7d 9c ff          	cmp    DWORD PTR [rbp-0x64],0xffffffff
    bad0:	75 16                	jne    bae8 <line_parser+0xadb>
    bad2:	48 8d 3d ca 34 00 00 	lea    rdi,[rip+0x34ca]        # efa3 <_IO_stdin_used+0x1fa3>
    bad9:	e8 82 6d ff ff       	call   2860 <puts@plt>
    bade:	bf ff ff ff ff       	mov    edi,0xffffffff
    bae3:	e8 58 6c ff ff       	call   2740 <exit@plt>
    bae8:	8b 45 9c             	mov    eax,DWORD PTR [rbp-0x64]
    baeb:	89 c2                	mov    edx,eax
    baed:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    baf1:	66 89 90 76 03 00 00 	mov    WORD PTR [rax+0x376],dx
    baf8:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bafc:	c6 80 71 03 00 00 01 	mov    BYTE PTR [rax+0x371],0x1
    bb03:	e9 95 03 00 00       	jmp    be9d <line_parser+0xe90>
    bb08:	48 8d 3d b1 34 00 00 	lea    rdi,[rip+0x34b1]        # efc0 <_IO_stdin_used+0x1fc0>
    bb0f:	e8 4c 6d ff ff       	call   2860 <puts@plt>
    bb14:	bf ff ff ff ff       	mov    edi,0xffffffff
    bb19:	e8 22 6c ff ff       	call   2740 <exit@plt>
    bb1e:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bb22:	ba 09 00 00 00       	mov    edx,0x9
    bb27:	48 8d 35 c6 34 00 00 	lea    rsi,[rip+0x34c6]        # eff4 <_IO_stdin_used+0x1ff4>
    bb2e:	48 89 c7             	mov    rdi,rax
    bb31:	e8 8a 6a ff ff       	call   25c0 <strncmp@plt>
    bb36:	85 c0                	test   eax,eax
    bb38:	75 7a                	jne    bbb4 <line_parser+0xba7>
    bb3a:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bb3e:	48 89 c7             	mov    rdi,rax
    bb41:	e8 30 f4 ff ff       	call   af76 <sc_strip>
    bb46:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bb4a:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    bb50:	3d 80 00 00 00       	cmp    eax,0x80
    bb55:	0f 85 42 03 00 00    	jne    be9d <line_parser+0xe90>
    bb5b:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bb5f:	48 83 c0 09          	add    rax,0x9
    bb63:	ba ff ff 00 00       	mov    edx,0xffff
    bb68:	be 00 00 00 00       	mov    esi,0x0
    bb6d:	48 89 c7             	mov    rdi,rax
    bb70:	e8 ac f3 ff ff       	call   af21 <numeric_check>
    bb75:	89 45 98             	mov    DWORD PTR [rbp-0x68],eax
    bb78:	83 7d 98 ff          	cmp    DWORD PTR [rbp-0x68],0xffffffff
    bb7c:	75 16                	jne    bb94 <line_parser+0xb87>
    bb7e:	48 8d 3d 79 34 00 00 	lea    rdi,[rip+0x3479]        # effe <_IO_stdin_used+0x1ffe>
    bb85:	e8 d6 6c ff ff       	call   2860 <puts@plt>
    bb8a:	bf ff ff ff ff       	mov    edi,0xffffffff
    bb8f:	e8 ac 6b ff ff       	call   2740 <exit@plt>
    bb94:	8b 45 98             	mov    eax,DWORD PTR [rbp-0x68]
    bb97:	89 c2                	mov    edx,eax
    bb99:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bb9d:	66 89 90 74 03 00 00 	mov    WORD PTR [rax+0x374],dx
    bba4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bba8:	c6 80 70 03 00 00 01 	mov    BYTE PTR [rax+0x370],0x1
    bbaf:	e9 e9 02 00 00       	jmp    be9d <line_parser+0xe90>
    bbb4:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bbb8:	ba 04 00 00 00       	mov    edx,0x4
    bbbd:	48 8d 35 56 34 00 00 	lea    rsi,[rip+0x3456]        # f01a <_IO_stdin_used+0x201a>
    bbc4:	48 89 c7             	mov    rdi,rax
    bbc7:	e8 f4 69 ff ff       	call   25c0 <strncmp@plt>
    bbcc:	85 c0                	test   eax,eax
    bbce:	75 64                	jne    bc34 <line_parser+0xc27>
    bbd0:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bbd4:	48 89 c7             	mov    rdi,rax
    bbd7:	e8 9a f3 ff ff       	call   af76 <sc_strip>
    bbdc:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bbe0:	48 83 c0 04          	add    rax,0x4
    bbe4:	ba ff 00 00 00       	mov    edx,0xff
    bbe9:	be 00 00 00 00       	mov    esi,0x0
    bbee:	48 89 c7             	mov    rdi,rax
    bbf1:	e8 2b f3 ff ff       	call   af21 <numeric_check>
    bbf6:	89 45 94             	mov    DWORD PTR [rbp-0x6c],eax
    bbf9:	83 7d 94 ff          	cmp    DWORD PTR [rbp-0x6c],0xffffffff
    bbfd:	75 16                	jne    bc15 <line_parser+0xc08>
    bbff:	48 8d 3d 19 34 00 00 	lea    rdi,[rip+0x3419]        # f01f <_IO_stdin_used+0x201f>
    bc06:	e8 55 6c ff ff       	call   2860 <puts@plt>
    bc0b:	bf ff ff ff ff       	mov    edi,0xffffffff
    bc10:	e8 2b 6b ff ff       	call   2740 <exit@plt>
    bc15:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    bc18:	89 c2                	mov    edx,eax
    bc1a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bc1e:	88 90 6c 03 00 00    	mov    BYTE PTR [rax+0x36c],dl
    bc24:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bc28:	c6 80 69 03 00 00 01 	mov    BYTE PTR [rax+0x369],0x1
    bc2f:	e9 69 02 00 00       	jmp    be9d <line_parser+0xe90>
    bc34:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bc38:	ba 07 00 00 00       	mov    edx,0x7
    bc3d:	48 8d 35 ed 33 00 00 	lea    rsi,[rip+0x33ed]        # f031 <_IO_stdin_used+0x2031>
    bc44:	48 89 c7             	mov    rdi,rax
    bc47:	e8 74 69 ff ff       	call   25c0 <strncmp@plt>
    bc4c:	85 c0                	test   eax,eax
    bc4e:	75 6e                	jne    bcbe <line_parser+0xcb1>
    bc50:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bc54:	48 89 c7             	mov    rdi,rax
    bc57:	e8 1a f3 ff ff       	call   af76 <sc_strip>
    bc5c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bc60:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    bc66:	83 f8 7e             	cmp    eax,0x7e
    bc69:	75 3d                	jne    bca8 <line_parser+0xc9b>
    bc6b:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bc6f:	48 89 c7             	mov    rdi,rax
    bc72:	e8 29 69 ff ff       	call   25a0 <strlen@plt>
    bc77:	48 8d 50 f8          	lea    rdx,[rax-0x8]
    bc7b:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bc7f:	48 8d 48 07          	lea    rcx,[rax+0x7]
    bc83:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bc87:	48 05 53 03 00 00    	add    rax,0x353
    bc8d:	48 89 ce             	mov    rsi,rcx
    bc90:	48 89 c7             	mov    rdi,rax
    bc93:	e8 58 69 ff ff       	call   25f0 <strncpy@plt>
    bc98:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bc9c:	c6 80 50 03 00 00 01 	mov    BYTE PTR [rax+0x350],0x1
    bca3:	e9 f5 01 00 00       	jmp    be9d <line_parser+0xe90>
    bca8:	48 8d 3d 91 33 00 00 	lea    rdi,[rip+0x3391]        # f040 <_IO_stdin_used+0x2040>
    bcaf:	e8 ac 6b ff ff       	call   2860 <puts@plt>
    bcb4:	bf ff ff ff ff       	mov    edi,0xffffffff
    bcb9:	e8 82 6a ff ff       	call   2740 <exit@plt>
    bcbe:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bcc2:	ba 04 00 00 00       	mov    edx,0x4
    bcc7:	48 8d 35 a3 33 00 00 	lea    rsi,[rip+0x33a3]        # f071 <_IO_stdin_used+0x2071>
    bcce:	48 89 c7             	mov    rdi,rax
    bcd1:	e8 ea 68 ff ff       	call   25c0 <strncmp@plt>
    bcd6:	85 c0                	test   eax,eax
    bcd8:	75 78                	jne    bd52 <line_parser+0xd45>
    bcda:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bcde:	48 89 c7             	mov    rdi,rax
    bce1:	e8 90 f2 ff ff       	call   af76 <sc_strip>
    bce6:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bcea:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    bcf0:	83 f8 7e             	cmp    eax,0x7e
    bcf3:	0f 85 a4 01 00 00    	jne    be9d <line_parser+0xe90>
    bcf9:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bcfd:	48 83 c0 04          	add    rax,0x4
    bd01:	ba ff ff ff ff       	mov    edx,0xffffffff
    bd06:	be 00 00 00 00       	mov    esi,0x0
    bd0b:	48 89 c7             	mov    rdi,rax
    bd0e:	e8 0e f2 ff ff       	call   af21 <numeric_check>
    bd13:	89 45 90             	mov    DWORD PTR [rbp-0x70],eax
    bd16:	83 7d 90 ff          	cmp    DWORD PTR [rbp-0x70],0xffffffff
    bd1a:	75 16                	jne    bd32 <line_parser+0xd25>
    bd1c:	48 8d 3d 53 33 00 00 	lea    rdi,[rip+0x3353]        # f076 <_IO_stdin_used+0x2076>
    bd23:	e8 38 6b ff ff       	call   2860 <puts@plt>
    bd28:	bf ff ff ff ff       	mov    edi,0xffffffff
    bd2d:	e8 0e 6a ff ff       	call   2740 <exit@plt>
    bd32:	8b 45 90             	mov    eax,DWORD PTR [rbp-0x70]
    bd35:	89 c2                	mov    edx,eax
    bd37:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bd3b:	66 89 90 5c 03 00 00 	mov    WORD PTR [rax+0x35c],dx
    bd42:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bd46:	c6 80 51 03 00 00 01 	mov    BYTE PTR [rax+0x351],0x1
    bd4d:	e9 4b 01 00 00       	jmp    be9d <line_parser+0xe90>
    bd52:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bd56:	ba 06 00 00 00       	mov    edx,0x6
    bd5b:	48 8d 35 26 33 00 00 	lea    rsi,[rip+0x3326]        # f088 <_IO_stdin_used+0x2088>
    bd62:	48 89 c7             	mov    rdi,rax
    bd65:	e8 56 68 ff ff       	call   25c0 <strncmp@plt>
    bd6a:	85 c0                	test   eax,eax
    bd6c:	75 7c                	jne    bdea <line_parser+0xddd>
    bd6e:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bd72:	48 89 c7             	mov    rdi,rax
    bd75:	e8 26 68 ff ff       	call   25a0 <strlen@plt>
    bd7a:	48 8d 50 f7          	lea    rdx,[rax-0x9]
    bd7e:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bd82:	48 8d 48 06          	lea    rcx,[rax+0x6]
    bd86:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bd8a:	48 05 10 02 00 00    	add    rax,0x210
    bd90:	48 89 ce             	mov    rsi,rcx
    bd93:	48 89 c7             	mov    rdi,rax
    bd96:	e8 55 68 ff ff       	call   25f0 <strncpy@plt>
    bd9b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bd9f:	48 8d 88 10 02 00 00 	lea    rcx,[rax+0x210]
    bda6:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bdaa:	48 05 d0 01 00 00    	add    rax,0x1d0
    bdb0:	ba 00 00 00 00       	mov    edx,0x0
    bdb5:	48 89 ce             	mov    rsi,rcx
    bdb8:	48 89 c7             	mov    rdi,rax
    bdbb:	e8 40 69 ff ff       	call   2700 <regcomp@plt>
    bdc0:	85 c0                	test   eax,eax
    bdc2:	74 16                	je     bdda <line_parser+0xdcd>
    bdc4:	48 8d 3d c5 32 00 00 	lea    rdi,[rip+0x32c5]        # f090 <_IO_stdin_used+0x2090>
    bdcb:	e8 90 6a ff ff       	call   2860 <puts@plt>
    bdd0:	bf ff ff ff ff       	mov    edi,0xffffffff
    bdd5:	e8 66 69 ff ff       	call   2740 <exit@plt>
    bdda:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bdde:	c6 80 90 02 00 00 01 	mov    BYTE PTR [rax+0x290],0x1
    bde5:	e9 b3 00 00 00       	jmp    be9d <line_parser+0xe90>
    bdea:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bdee:	ba 06 00 00 00       	mov    edx,0x6
    bdf3:	48 8d 35 bb 32 00 00 	lea    rsi,[rip+0x32bb]        # f0b5 <_IO_stdin_used+0x20b5>
    bdfa:	48 89 c7             	mov    rdi,rax
    bdfd:	e8 be 67 ff ff       	call   25c0 <strncmp@plt>
    be02:	85 c0                	test   eax,eax
    be04:	75 2a                	jne    be30 <line_parser+0xe23>
    be06:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    be0a:	48 89 c7             	mov    rdi,rax
    be0d:	e8 64 f1 ff ff       	call   af76 <sc_strip>
    be12:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    be16:	48 8d 48 06          	lea    rcx,[rax+0x6]
    be1a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    be1e:	ba 01 00 00 00       	mov    edx,0x1
    be23:	48 89 ce             	mov    rsi,rcx
    be26:	48 89 c7             	mov    rdi,rax
    be29:	e8 6c 03 00 00       	call   c19a <d_op_parser>
    be2e:	eb 6d                	jmp    be9d <line_parser+0xe90>
    be30:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    be34:	ba 07 00 00 00       	mov    edx,0x7
    be39:	48 8d 35 7c 32 00 00 	lea    rsi,[rip+0x327c]        # f0bc <_IO_stdin_used+0x20bc>
    be40:	48 89 c7             	mov    rdi,rax
    be43:	e8 78 67 ff ff       	call   25c0 <strncmp@plt>
    be48:	85 c0                	test   eax,eax
    be4a:	75 27                	jne    be73 <line_parser+0xe66>
    be4c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    be50:	48 89 c7             	mov    rdi,rax
    be53:	e8 1e f1 ff ff       	call   af76 <sc_strip>
    be58:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    be5c:	48 83 c0 07          	add    rax,0x7
    be60:	48 89 c7             	mov    rdi,rax
    be63:	e8 08 6a ff ff       	call   2870 <atoi@plt>
    be68:	89 c2                	mov    edx,eax
    be6a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    be6e:	89 50 14             	mov    DWORD PTR [rax+0x14],edx
    be71:	eb 2a                	jmp    be9d <line_parser+0xe90>
    be73:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    be77:	ba 0b 00 00 00       	mov    edx,0xb
    be7c:	48 8d 35 41 32 00 00 	lea    rsi,[rip+0x3241]        # f0c4 <_IO_stdin_used+0x20c4>
    be83:	48 89 c7             	mov    rdi,rax
    be86:	e8 35 67 ff ff       	call   25c0 <strncmp@plt>
    be8b:	85 c0                	test   eax,eax
    be8d:	75 0e                	jne    be9d <line_parser+0xe90>
    be8f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    be93:	c7 80 48 03 00 00 01 	mov    DWORD PTR [rax+0x348],0x1
    be9a:	00 00 00 
    be9d:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    bea0:	89 45 80             	mov    DWORD PTR [rbp-0x80],eax
    bea3:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    bea7:	48 89 c7             	mov    rdi,rax
    beaa:	e8 f1 66 ff ff       	call   25a0 <strlen@plt>
    beaf:	48 8d 50 ff          	lea    rdx,[rax-0x1]
    beb3:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    beb7:	48 01 d0             	add    rax,rdx
    beba:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    bebd:	3c 29                	cmp    al,0x29
    bebf:	74 3d                	je     befe <line_parser+0xef1>
    bec1:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    bec4:	3b 45 8c             	cmp    eax,DWORD PTR [rbp-0x74]
    bec7:	7f 0c                	jg     bed5 <line_parser+0xec8>
    bec9:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
    becc:	3b 45 84             	cmp    eax,DWORD PTR [rbp-0x7c]
    becf:	0f 8e 54 f2 ff ff    	jle    b129 <line_parser+0x11c>
    bed5:	0f b6 85 7f ff ff ff 	movzx  eax,BYTE PTR [rbp-0x81]
    bedc:	83 f0 01             	xor    eax,0x1
    bedf:	84 c0                	test   al,al
    bee1:	74 1c                	je     beff <line_parser+0xef2>
    bee3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bee7:	48 83 c0 20          	add    rax,0x20
    beeb:	48 bb 55 6e 74 69 74 	movabs rbx,0x64656c7469746e55
    bef2:	6c 65 64 
    bef5:	48 89 18             	mov    QWORD PTR [rax],rbx
    bef8:	c6 40 08 00          	mov    BYTE PTR [rax+0x8],0x0
    befc:	eb 01                	jmp    beff <line_parser+0xef2>
    befe:	90                   	nop
    beff:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    bf03:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    bf0a:	00 00 
    bf0c:	74 05                	je     bf13 <line_parser+0xf06>
    bf0e:	e8 bd 67 ff ff       	call   26d0 <__stack_chk_fail@plt>
    bf13:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    bf17:	c9                   	leave  
    bf18:	c3                   	ret    

000000000000bf19 <rule_processor>:
    bf19:	f3 0f 1e fa          	endbr64 
    bf1d:	55                   	push   rbp
    bf1e:	48 89 e5             	mov    rbp,rsp
    bf21:	48 83 ec 10          	sub    rsp,0x10
    bf25:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    bf2c:	eb 22                	jmp    bf50 <rule_processor+0x37>
    bf2e:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    bf31:	48 98                	cdqe   
    bf33:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    bf3a:	48 8d 15 9f 63 00 00 	lea    rdx,[rip+0x639f]        # 122e0 <rules>
    bf41:	48 01 d0             	add    rax,rdx
    bf44:	48 89 c7             	mov    rdi,rax
    bf47:	e8 13 00 00 00       	call   bf5f <process_rule>
    bf4c:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    bf50:	8b 05 be 60 00 00    	mov    eax,DWORD PTR [rip+0x60be]        # 12014 <num_rules>
    bf56:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    bf59:	7e d3                	jle    bf2e <rule_processor+0x15>
    bf5b:	90                   	nop
    bf5c:	90                   	nop
    bf5d:	c9                   	leave  
    bf5e:	c3                   	ret    

000000000000bf5f <process_rule>:
    bf5f:	f3 0f 1e fa          	endbr64 
    bf63:	55                   	push   rbp
    bf64:	48 89 e5             	mov    rbp,rsp
    bf67:	41 57                	push   r15
    bf69:	41 56                	push   r14
    bf6b:	41 54                	push   r12
    bf6d:	53                   	push   rbx
    bf6e:	48 83 ec 40          	sub    rsp,0x40
    bf72:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    bf76:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    bf7d:	00 00 
    bf7f:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    bf83:	31 c0                	xor    eax,eax
    bf85:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bf89:	0f b6 80 90 02 00 00 	movzx  eax,BYTE PTR [rax+0x290]
    bf90:	83 f0 01             	xor    eax,0x1
    bf93:	84 c0                	test   al,al
    bf95:	0f 84 dd 01 00 00    	je     c178 <process_rule+0x219>
    bf9b:	48 89 e0             	mov    rax,rsp
    bf9e:	49 89 c4             	mov    r12,rax
    bfa1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bfa5:	48 83 c0 40          	add    rax,0x40
    bfa9:	48 89 c7             	mov    rdi,rax
    bfac:	e8 ef 65 ff ff       	call   25a0 <strlen@plt>
    bfb1:	48 83 c0 01          	add    rax,0x1
    bfb5:	48 01 c0             	add    rax,rax
    bfb8:	48 89 c2             	mov    rdx,rax
    bfbb:	48 83 ea 01          	sub    rdx,0x1
    bfbf:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    bfc3:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    bfc7:	48 c7 45 a8 00 00 00 	mov    QWORD PTR [rbp-0x58],0x0
    bfce:	00 
    bfcf:	49 89 c6             	mov    r14,rax
    bfd2:	41 bf 00 00 00 00    	mov    r15d,0x0
    bfd8:	ba 10 00 00 00       	mov    edx,0x10
    bfdd:	48 83 ea 01          	sub    rdx,0x1
    bfe1:	48 01 d0             	add    rax,rdx
    bfe4:	bb 10 00 00 00       	mov    ebx,0x10
    bfe9:	ba 00 00 00 00       	mov    edx,0x0
    bfee:	48 f7 f3             	div    rbx
    bff1:	48 6b c0 10          	imul   rax,rax,0x10
    bff5:	48 89 c1             	mov    rcx,rax
    bff8:	48 81 e1 00 f0 ff ff 	and    rcx,0xfffffffffffff000
    bfff:	48 89 e2             	mov    rdx,rsp
    c002:	48 29 ca             	sub    rdx,rcx
    c005:	48 39 d4             	cmp    rsp,rdx
    c008:	74 12                	je     c01c <process_rule+0xbd>
    c00a:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    c011:	48 83 8c 24 f8 0f 00 	or     QWORD PTR [rsp+0xff8],0x0
    c018:	00 00 
    c01a:	eb e9                	jmp    c005 <process_rule+0xa6>
    c01c:	48 89 c2             	mov    rdx,rax
    c01f:	81 e2 ff 0f 00 00    	and    edx,0xfff
    c025:	48 29 d4             	sub    rsp,rdx
    c028:	48 89 c2             	mov    rdx,rax
    c02b:	81 e2 ff 0f 00 00    	and    edx,0xfff
    c031:	48 85 d2             	test   rdx,rdx
    c034:	74 10                	je     c046 <process_rule+0xe7>
    c036:	25 ff 0f 00 00       	and    eax,0xfff
    c03b:	48 83 e8 08          	sub    rax,0x8
    c03f:	48 01 e0             	add    rax,rsp
    c042:	48 83 08 00          	or     QWORD PTR [rax],0x0
    c046:	48 89 e0             	mov    rax,rsp
    c049:	48 83 c0 00          	add    rax,0x0
    c04d:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    c051:	c7 45 c0 00 00 00 00 	mov    DWORD PTR [rbp-0x40],0x0
    c058:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    c05c:	48 8d 50 40          	lea    rdx,[rax+0x40]
    c060:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    c064:	48 05 c8 02 00 00    	add    rax,0x2c8
    c06a:	48 89 d6             	mov    rsi,rdx
    c06d:	48 89 c7             	mov    rdi,rax
    c070:	e8 2b 66 ff ff       	call   26a0 <strcpy@plt>
    c075:	c7 45 c4 00 00 00 00 	mov    DWORD PTR [rbp-0x3c],0x0
    c07c:	e9 a4 00 00 00       	jmp    c125 <process_rule+0x1c6>
    c081:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    c085:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    c088:	48 98                	cdqe   
    c08a:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    c08f:	3c 7c                	cmp    al,0x7c
    c091:	75 18                	jne    c0ab <process_rule+0x14c>
    c093:	83 7d c0 00          	cmp    DWORD PTR [rbp-0x40],0x0
    c097:	74 09                	je     c0a2 <process_rule+0x143>
    c099:	c7 45 c0 00 00 00 00 	mov    DWORD PTR [rbp-0x40],0x0
    c0a0:	eb 7f                	jmp    c121 <process_rule+0x1c2>
    c0a2:	c7 45 c0 01 00 00 00 	mov    DWORD PTR [rbp-0x40],0x1
    c0a9:	eb 76                	jmp    c121 <process_rule+0x1c2>
    c0ab:	83 7d c0 01          	cmp    DWORD PTR [rbp-0x40],0x1
    c0af:	75 3a                	jne    c0eb <process_rule+0x18c>
    c0b1:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    c0b5:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    c0b8:	48 98                	cdqe   
    c0ba:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    c0bf:	0f be c0             	movsx  eax,al
    c0c2:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
    c0c5:	48 63 d2             	movsxd rdx,edx
    c0c8:	48 8d 4a ff          	lea    rcx,[rdx-0x1]
    c0cc:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    c0d0:	48 01 d1             	add    rcx,rdx
    c0d3:	89 c2                	mov    edx,eax
    c0d5:	48 8d 35 f4 2f 00 00 	lea    rsi,[rip+0x2ff4]        # f0d0 <_IO_stdin_used+0x20d0>
    c0dc:	48 89 cf             	mov    rdi,rcx
    c0df:	b8 00 00 00 00       	mov    eax,0x0
    c0e4:	e8 17 64 ff ff       	call   2500 <sprintf@plt>
    c0e9:	eb 36                	jmp    c121 <process_rule+0x1c2>
    c0eb:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    c0ef:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    c0f2:	48 98                	cdqe   
    c0f4:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    c0f9:	0f be c0             	movsx  eax,al
    c0fc:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
    c0ff:	01 d2                	add    edx,edx
    c101:	48 63 ca             	movsxd rcx,edx
    c104:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    c108:	48 01 d1             	add    rcx,rdx
    c10b:	89 c2                	mov    edx,eax
    c10d:	48 8d 35 bf 2f 00 00 	lea    rsi,[rip+0x2fbf]        # f0d3 <_IO_stdin_used+0x20d3>
    c114:	48 89 cf             	mov    rdi,rcx
    c117:	b8 00 00 00 00       	mov    eax,0x0
    c11c:	e8 df 63 ff ff       	call   2500 <sprintf@plt>
    c121:	83 45 c4 01          	add    DWORD PTR [rbp-0x3c],0x1
    c125:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    c128:	48 63 d8             	movsxd rbx,eax
    c12b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    c12f:	48 83 c0 40          	add    rax,0x40
    c133:	48 89 c7             	mov    rdi,rax
    c136:	e8 65 64 ff ff       	call   25a0 <strlen@plt>
    c13b:	48 39 c3             	cmp    rbx,rax
    c13e:	0f 82 3d ff ff ff    	jb     c081 <process_rule+0x122>
    c144:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    c148:	48 83 c0 40          	add    rax,0x40
    c14c:	ba ff 00 00 00       	mov    edx,0xff
    c151:	be 00 00 00 00       	mov    esi,0x0
    c156:	48 89 c7             	mov    rdi,rax
    c159:	e8 b2 64 ff ff       	call   2610 <memset@plt>
    c15e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    c162:	48 8d 50 40          	lea    rdx,[rax+0x40]
    c166:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    c16a:	48 89 c6             	mov    rsi,rax
    c16d:	48 89 d7             	mov    rdi,rdx
    c170:	e8 2b 65 ff ff       	call   26a0 <strcpy@plt>
    c175:	4c 89 e4             	mov    rsp,r12
    c178:	90                   	nop
    c179:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    c17d:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    c184:	00 00 
    c186:	74 05                	je     c18d <process_rule+0x22e>
    c188:	e8 43 65 ff ff       	call   26d0 <__stack_chk_fail@plt>
    c18d:	48 8d 65 e0          	lea    rsp,[rbp-0x20]
    c191:	5b                   	pop    rbx
    c192:	41 5c                	pop    r12
    c194:	41 5e                	pop    r14
    c196:	41 5f                	pop    r15
    c198:	5d                   	pop    rbp
    c199:	c3                   	ret    

000000000000c19a <d_op_parser>:
    c19a:	f3 0f 1e fa          	endbr64 
    c19e:	55                   	push   rbp
    c19f:	48 89 e5             	mov    rbp,rsp
    c1a2:	48 83 ec 20          	sub    rsp,0x20
    c1a6:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    c1aa:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    c1ae:	89 55 ec             	mov    DWORD PTR [rbp-0x14],edx
    c1b1:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c1b5:	48 89 c7             	mov    rdi,rax
    c1b8:	e8 f7 e9 ff ff       	call   abb4 <isdigit>
    c1bd:	84 c0                	test   al,al
    c1bf:	74 23                	je     c1e4 <d_op_parser+0x4a>
    c1c1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c1c5:	c7 40 1c a1 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa1
    c1cc:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c1d0:	48 89 c7             	mov    rdi,rax
    c1d3:	e8 98 66 ff ff       	call   2870 <atoi@plt>
    c1d8:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    c1dc:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    c1df:	e9 59 01 00 00       	jmp    c33d <d_op_parser+0x1a3>
    c1e4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c1e8:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    c1eb:	0f b6 15 e6 2e 00 00 	movzx  edx,BYTE PTR [rip+0x2ee6]        # f0d8 <_IO_stdin_used+0x20d8>
    c1f2:	0f b6 c0             	movzx  eax,al
    c1f5:	0f b6 d2             	movzx  edx,dl
    c1f8:	29 d0                	sub    eax,edx
    c1fa:	85 c0                	test   eax,eax
    c1fc:	75 27                	jne    c225 <d_op_parser+0x8b>
    c1fe:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c202:	c7 40 1c a4 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa4
    c209:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c20d:	48 83 c0 01          	add    rax,0x1
    c211:	48 89 c7             	mov    rdi,rax
    c214:	e8 57 66 ff ff       	call   2870 <atoi@plt>
    c219:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    c21d:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    c220:	e9 18 01 00 00       	jmp    c33d <d_op_parser+0x1a3>
    c225:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c229:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    c22c:	0f b6 15 a7 2e 00 00 	movzx  edx,BYTE PTR [rip+0x2ea7]        # f0da <_IO_stdin_used+0x20da>
    c233:	0f b6 c0             	movzx  eax,al
    c236:	0f b6 d2             	movzx  edx,dl
    c239:	29 d0                	sub    eax,edx
    c23b:	85 c0                	test   eax,eax
    c23d:	75 27                	jne    c266 <d_op_parser+0xcc>
    c23f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c243:	c7 40 1c a2 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa2
    c24a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c24e:	48 83 c0 01          	add    rax,0x1
    c252:	48 89 c7             	mov    rdi,rax
    c255:	e8 16 66 ff ff       	call   2870 <atoi@plt>
    c25a:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    c25e:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    c261:	e9 d7 00 00 00       	jmp    c33d <d_op_parser+0x1a3>
    c266:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c26a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    c26d:	0f b6 15 68 2e 00 00 	movzx  edx,BYTE PTR [rip+0x2e68]        # f0dc <_IO_stdin_used+0x20dc>
    c274:	0f b6 c0             	movzx  eax,al
    c277:	0f b6 d2             	movzx  edx,dl
    c27a:	29 d0                	sub    eax,edx
    c27c:	85 c0                	test   eax,eax
    c27e:	75 27                	jne    c2a7 <d_op_parser+0x10d>
    c280:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c284:	c7 40 1c a6 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa6
    c28b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c28f:	48 83 c0 01          	add    rax,0x1
    c293:	48 89 c7             	mov    rdi,rax
    c296:	e8 d5 65 ff ff       	call   2870 <atoi@plt>
    c29b:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    c29f:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    c2a2:	e9 96 00 00 00       	jmp    c33d <d_op_parser+0x1a3>
    c2a7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c2ab:	ba 02 00 00 00       	mov    edx,0x2
    c2b0:	48 8d 35 27 2e 00 00 	lea    rsi,[rip+0x2e27]        # f0de <_IO_stdin_used+0x20de>
    c2b7:	48 89 c7             	mov    rdi,rax
    c2ba:	e8 01 63 ff ff       	call   25c0 <strncmp@plt>
    c2bf:	85 c0                	test   eax,eax
    c2c1:	75 24                	jne    c2e7 <d_op_parser+0x14d>
    c2c3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c2c7:	c7 40 1c a3 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa3
    c2ce:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c2d2:	48 83 c0 02          	add    rax,0x2
    c2d6:	48 89 c7             	mov    rdi,rax
    c2d9:	e8 92 65 ff ff       	call   2870 <atoi@plt>
    c2de:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    c2e2:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    c2e5:	eb 56                	jmp    c33d <d_op_parser+0x1a3>
    c2e7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c2eb:	ba 02 00 00 00       	mov    edx,0x2
    c2f0:	48 8d 35 ea 2d 00 00 	lea    rsi,[rip+0x2dea]        # f0e1 <_IO_stdin_used+0x20e1>
    c2f7:	48 89 c7             	mov    rdi,rax
    c2fa:	e8 c1 62 ff ff       	call   25c0 <strncmp@plt>
    c2ff:	85 c0                	test   eax,eax
    c301:	75 24                	jne    c327 <d_op_parser+0x18d>
    c303:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c307:	c7 40 1c a5 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa5
    c30e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c312:	48 83 c0 02          	add    rax,0x2
    c316:	48 89 c7             	mov    rdi,rax
    c319:	e8 52 65 ff ff       	call   2870 <atoi@plt>
    c31e:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    c322:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    c325:	eb 16                	jmp    c33d <d_op_parser+0x1a3>
    c327:	48 8d 3d b6 2d 00 00 	lea    rdi,[rip+0x2db6]        # f0e4 <_IO_stdin_used+0x20e4>
    c32e:	e8 2d 65 ff ff       	call   2860 <puts@plt>
    c333:	bf ff ff ff ff       	mov    edi,0xffffffff
    c338:	e8 03 64 ff ff       	call   2740 <exit@plt>
    c33d:	c9                   	leave  
    c33e:	c3                   	ret    

000000000000c33f <d_engine>:
    c33f:	f3 0f 1e fa          	endbr64 
    c343:	55                   	push   rbp
    c344:	48 89 e5             	mov    rbp,rsp
    c347:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    c34b:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    c34f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c353:	8b 40 1c             	mov    eax,DWORD PTR [rax+0x1c]
    c356:	83 f8 ff             	cmp    eax,0xffffffff
    c359:	75 0a                	jne    c365 <d_engine+0x26>
    c35b:	b8 01 00 00 00       	mov    eax,0x1
    c360:	e9 ea 00 00 00       	jmp    c44f <d_engine+0x110>
    c365:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c369:	8b 40 1c             	mov    eax,DWORD PTR [rax+0x1c]
    c36c:	2d a1 00 00 00       	sub    eax,0xa1
    c371:	83 f8 05             	cmp    eax,0x5
    c374:	0f 87 d0 00 00 00    	ja     c44a <d_engine+0x10b>
    c37a:	89 c0                	mov    eax,eax
    c37c:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    c383:	00 
    c384:	48 8d 05 71 2d 00 00 	lea    rax,[rip+0x2d71]        # f0fc <_IO_stdin_used+0x20fc>
    c38b:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    c38e:	48 98                	cdqe   
    c390:	48 8d 15 65 2d 00 00 	lea    rdx,[rip+0x2d65]        # f0fc <_IO_stdin_used+0x20fc>
    c397:	48 01 d0             	add    rax,rdx
    c39a:	3e ff e0             	notrack jmp rax
    c39d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c3a1:	8b 50 18             	mov    edx,DWORD PTR [rax+0x18]
    c3a4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c3a8:	8b 40 34             	mov    eax,DWORD PTR [rax+0x34]
    c3ab:	39 c2                	cmp    edx,eax
    c3ad:	0f 85 87 00 00 00    	jne    c43a <d_engine+0xfb>
    c3b3:	b8 01 00 00 00       	mov    eax,0x1
    c3b8:	e9 92 00 00 00       	jmp    c44f <d_engine+0x110>
    c3bd:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c3c1:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    c3c4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c3c8:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    c3cb:	39 c2                	cmp    edx,eax
    c3cd:	76 6e                	jbe    c43d <d_engine+0xfe>
    c3cf:	b8 01 00 00 00       	mov    eax,0x1
    c3d4:	eb 79                	jmp    c44f <d_engine+0x110>
    c3d6:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c3da:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    c3dd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c3e1:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    c3e4:	39 c2                	cmp    edx,eax
    c3e6:	72 58                	jb     c440 <d_engine+0x101>
    c3e8:	b8 01 00 00 00       	mov    eax,0x1
    c3ed:	eb 60                	jmp    c44f <d_engine+0x110>
    c3ef:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c3f3:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    c3f6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c3fa:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    c3fd:	39 c2                	cmp    edx,eax
    c3ff:	73 42                	jae    c443 <d_engine+0x104>
    c401:	b8 01 00 00 00       	mov    eax,0x1
    c406:	eb 47                	jmp    c44f <d_engine+0x110>
    c408:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c40c:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    c40f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c413:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    c416:	39 c2                	cmp    edx,eax
    c418:	77 2c                	ja     c446 <d_engine+0x107>
    c41a:	b8 01 00 00 00       	mov    eax,0x1
    c41f:	eb 2e                	jmp    c44f <d_engine+0x110>
    c421:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c425:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    c428:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c42c:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    c42f:	39 c2                	cmp    edx,eax
    c431:	74 16                	je     c449 <d_engine+0x10a>
    c433:	b8 01 00 00 00       	mov    eax,0x1
    c438:	eb 15                	jmp    c44f <d_engine+0x110>
    c43a:	90                   	nop
    c43b:	eb 0d                	jmp    c44a <d_engine+0x10b>
    c43d:	90                   	nop
    c43e:	eb 0a                	jmp    c44a <d_engine+0x10b>
    c440:	90                   	nop
    c441:	eb 07                	jmp    c44a <d_engine+0x10b>
    c443:	90                   	nop
    c444:	eb 04                	jmp    c44a <d_engine+0x10b>
    c446:	90                   	nop
    c447:	eb 01                	jmp    c44a <d_engine+0x10b>
    c449:	90                   	nop
    c44a:	b8 00 00 00 00       	mov    eax,0x0
    c44f:	5d                   	pop    rbp
    c450:	c3                   	ret    

000000000000c451 <homenet_toi>:
    c451:	f3 0f 1e fa          	endbr64 
    c455:	55                   	push   rbp
    c456:	48 89 e5             	mov    rbp,rsp
    c459:	53                   	push   rbx
    c45a:	48 83 ec 38          	sub    rsp,0x38
    c45e:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    c462:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    c469:	00 00 
    c46b:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    c46f:	31 c0                	xor    eax,eax
    c471:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    c475:	48 8d 35 98 2c 00 00 	lea    rsi,[rip+0x2c98]        # f114 <_IO_stdin_used+0x2114>
    c47c:	48 89 c7             	mov    rdi,rax
    c47f:	e8 fc 63 ff ff       	call   2880 <strtok@plt>
    c484:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    c488:	eb 4c                	jmp    c4d6 <homenet_toi+0x85>
    c48a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    c48e:	48 89 c7             	mov    rdi,rax
    c491:	e8 da 63 ff ff       	call   2870 <atoi@plt>
    c496:	89 c3                	mov    ebx,eax
    c498:	48 8d 45 df          	lea    rax,[rbp-0x21]
    c49c:	48 89 c7             	mov    rdi,rax
    c49f:	e8 fc 60 ff ff       	call   25a0 <strlen@plt>
    c4a4:	48 8d 55 df          	lea    rdx,[rbp-0x21]
    c4a8:	48 01 d0             	add    rax,rdx
    c4ab:	89 da                	mov    edx,ebx
    c4ad:	48 8d 35 62 2c 00 00 	lea    rsi,[rip+0x2c62]        # f116 <_IO_stdin_used+0x2116>
    c4b4:	48 89 c7             	mov    rdi,rax
    c4b7:	b8 00 00 00 00       	mov    eax,0x0
    c4bc:	e8 3f 60 ff ff       	call   2500 <sprintf@plt>
    c4c1:	48 8d 35 4c 2c 00 00 	lea    rsi,[rip+0x2c4c]        # f114 <_IO_stdin_used+0x2114>
    c4c8:	bf 00 00 00 00       	mov    edi,0x0
    c4cd:	e8 ae 63 ff ff       	call   2880 <strtok@plt>
    c4d2:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    c4d6:	48 83 7d d0 00       	cmp    QWORD PTR [rbp-0x30],0x0
    c4db:	75 ad                	jne    c48a <homenet_toi+0x39>
    c4dd:	48 8d 45 df          	lea    rax,[rbp-0x21]
    c4e1:	ba 10 00 00 00       	mov    edx,0x10
    c4e6:	be 00 00 00 00       	mov    esi,0x0
    c4eb:	48 89 c7             	mov    rdi,rax
    c4ee:	e8 fd 62 ff ff       	call   27f0 <strtol@plt>
    c4f3:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    c4f7:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    c4fe:	00 00 
    c500:	74 05                	je     c507 <homenet_toi+0xb6>
    c502:	e8 c9 61 ff ff       	call   26d0 <__stack_chk_fail@plt>
    c507:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    c50b:	c9                   	leave  
    c50c:	c3                   	ret    

000000000000c50d <tcp_check_sum_passed>:
    c50d:	f3 0f 1e fa          	endbr64 
    c511:	55                   	push   rbp
    c512:	48 89 e5             	mov    rbp,rsp
    c515:	41 54                	push   r12
    c517:	53                   	push   rbx
    c518:	48 83 ec 30          	sub    rsp,0x30
    c51c:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    c520:	48 89 75 c0          	mov    QWORD PTR [rbp-0x40],rsi
    c524:	bb 00 00 00 00       	mov    ebx,0x0
    c529:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    c52d:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    c531:	0f b7 c0             	movzx  eax,ax
    c534:	89 c7                	mov    edi,eax
    c536:	e8 c5 63 ff ff       	call   2900 <ntohs@plt>
    c53b:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    c53f:	0f b6 12             	movzx  edx,BYTE PTR [rdx]
    c542:	83 e2 0f             	and    edx,0xf
    c545:	0f b6 d2             	movzx  edx,dl
    c548:	c1 e2 02             	shl    edx,0x2
    c54b:	29 d0                	sub    eax,edx
    c54d:	66 89 45 de          	mov    WORD PTR [rbp-0x22],ax
    c551:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    c555:	0f b7 40 10          	movzx  eax,WORD PTR [rax+0x10]
    c559:	0f b7 c0             	movzx  eax,ax
    c55c:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    c560:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    c564:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    c568:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    c56c:	66 c7 40 10 00 00    	mov    WORD PTR [rax+0x10],0x0
    c572:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    c576:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    c579:	c1 e8 10             	shr    eax,0x10
    c57c:	89 c0                	mov    eax,eax
    c57e:	0f b7 c0             	movzx  eax,ax
    c581:	48 01 c3             	add    rbx,rax
    c584:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    c588:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    c58b:	89 c0                	mov    eax,eax
    c58d:	0f b7 c0             	movzx  eax,ax
    c590:	48 01 c3             	add    rbx,rax
    c593:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    c597:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    c59a:	c1 e8 10             	shr    eax,0x10
    c59d:	89 c0                	mov    eax,eax
    c59f:	0f b7 c0             	movzx  eax,ax
    c5a2:	48 01 c3             	add    rbx,rax
    c5a5:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    c5a9:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    c5ac:	89 c0                	mov    eax,eax
    c5ae:	0f b7 c0             	movzx  eax,ax
    c5b1:	48 01 c3             	add    rbx,rax
    c5b4:	bf 06 00 00 00       	mov    edi,0x6
    c5b9:	e8 12 5f ff ff       	call   24d0 <htons@plt>
    c5be:	0f b7 c0             	movzx  eax,ax
    c5c1:	48 01 c3             	add    rbx,rax
    c5c4:	0f b7 45 de          	movzx  eax,WORD PTR [rbp-0x22]
    c5c8:	89 c7                	mov    edi,eax
    c5ca:	e8 01 5f ff ff       	call   24d0 <htons@plt>
    c5cf:	0f b7 c0             	movzx  eax,ax
    c5d2:	48 01 c3             	add    rbx,rax
    c5d5:	eb 1a                	jmp    c5f1 <tcp_check_sum_passed+0xe4>
    c5d7:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    c5db:	48 8d 50 14          	lea    rdx,[rax+0x14]
    c5df:	48 89 55 c0          	mov    QWORD PTR [rbp-0x40],rdx
    c5e3:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    c5e6:	0f b6 c0             	movzx  eax,al
    c5e9:	48 01 c3             	add    rbx,rax
    c5ec:	66 83 6d de 02       	sub    WORD PTR [rbp-0x22],0x2
    c5f1:	66 83 7d de 01       	cmp    WORD PTR [rbp-0x22],0x1
    c5f6:	77 df                	ja     c5d7 <tcp_check_sum_passed+0xca>
    c5f8:	66 83 7d de 00       	cmp    WORD PTR [rbp-0x22],0x0
    c5fd:	74 1d                	je     c61c <tcp_check_sum_passed+0x10f>
    c5ff:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    c603:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    c606:	0f b6 c0             	movzx  eax,al
    c609:	48 01 c3             	add    rbx,rax
    c60c:	eb 0e                	jmp    c61c <tcp_check_sum_passed+0x10f>
    c60e:	0f b7 c3             	movzx  eax,bx
    c611:	48 c1 eb 10          	shr    rbx,0x10
    c615:	48 89 da             	mov    rdx,rbx
    c618:	48 8d 1c 10          	lea    rbx,[rax+rdx*1]
    c61c:	48 89 d8             	mov    rax,rbx
    c61f:	48 c1 e8 10          	shr    rax,0x10
    c623:	48 85 c0             	test   rax,rax
    c626:	75 e6                	jne    c60e <tcp_check_sum_passed+0x101>
    c628:	48 f7 d3             	not    rbx
    c62b:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    c62f:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    c633:	66 89 50 10          	mov    WORD PTR [rax+0x10],dx
    c637:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    c63b:	0f b7 40 10          	movzx  eax,WORD PTR [rax+0x10]
    c63f:	0f b7 c0             	movzx  eax,ax
    c642:	89 c7                	mov    edi,eax
    c644:	e8 b7 62 ff ff       	call   2900 <ntohs@plt>
    c649:	44 0f b7 e0          	movzx  r12d,ax
    c64d:	89 d8                	mov    eax,ebx
    c64f:	0f b7 c0             	movzx  eax,ax
    c652:	89 c7                	mov    edi,eax
    c654:	e8 a7 62 ff ff       	call   2900 <ntohs@plt>
    c659:	0f b7 c0             	movzx  eax,ax
    c65c:	44 89 e2             	mov    edx,r12d
    c65f:	89 c6                	mov    esi,eax
    c661:	48 8d 3d b3 2a 00 00 	lea    rdi,[rip+0x2ab3]        # f11b <_IO_stdin_used+0x211b>
    c668:	b8 00 00 00 00       	mov    eax,0x0
    c66d:	e8 4e 5e ff ff       	call   24c0 <printf@plt>
    c672:	89 d8                	mov    eax,ebx
    c674:	0f b7 c0             	movzx  eax,ax
    c677:	89 c7                	mov    edi,eax
    c679:	e8 82 62 ff ff       	call   2900 <ntohs@plt>
    c67e:	89 c3                	mov    ebx,eax
    c680:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    c684:	0f b7 c0             	movzx  eax,ax
    c687:	89 c7                	mov    edi,eax
    c689:	e8 72 62 ff ff       	call   2900 <ntohs@plt>
    c68e:	66 39 c3             	cmp    bx,ax
    c691:	75 07                	jne    c69a <tcp_check_sum_passed+0x18d>
    c693:	b8 01 00 00 00       	mov    eax,0x1
    c698:	eb 05                	jmp    c69f <tcp_check_sum_passed+0x192>
    c69a:	b8 00 00 00 00       	mov    eax,0x0
    c69f:	48 83 c4 30          	add    rsp,0x30
    c6a3:	5b                   	pop    rbx
    c6a4:	41 5c                	pop    r12
    c6a6:	5d                   	pop    rbp
    c6a7:	c3                   	ret    

000000000000c6a8 <run_hello_script>:
    c6a8:	f3 0f 1e fa          	endbr64 
    c6ac:	55                   	push   rbp
    c6ad:	48 89 e5             	mov    rbp,rsp
    c6b0:	48 83 ec 10          	sub    rsp,0x10
    c6b4:	e8 f7 60 ff ff       	call   27b0 <luaL_newstate@plt>
    c6b9:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    c6bd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c6c1:	48 89 c7             	mov    rdi,rax
    c6c4:	e8 97 5f ff ff       	call   2660 <luaL_openlibs@plt>
    c6c9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c6cd:	ba 00 00 00 00       	mov    edx,0x0
    c6d2:	48 8d 35 57 2a 00 00 	lea    rsi,[rip+0x2a57]        # f130 <_IO_stdin_used+0x2130>
    c6d9:	48 89 c7             	mov    rdi,rax
    c6dc:	e8 7f 5e ff ff       	call   2560 <luaL_loadfilex@plt>
    c6e1:	85 c0                	test   eax,eax
    c6e3:	75 2b                	jne    c710 <run_hello_script+0x68>
    c6e5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c6e9:	41 b9 00 00 00 00    	mov    r9d,0x0
    c6ef:	41 b8 00 00 00 00    	mov    r8d,0x0
    c6f5:	b9 00 00 00 00       	mov    ecx,0x0
    c6fa:	ba ff ff ff ff       	mov    edx,0xffffffff
    c6ff:	be 00 00 00 00       	mov    esi,0x0
    c704:	48 89 c7             	mov    rdi,rax
    c707:	e8 a4 61 ff ff       	call   28b0 <lua_pcallk@plt>
    c70c:	85 c0                	test   eax,eax
    c70e:	74 07                	je     c717 <run_hello_script+0x6f>
    c710:	b8 01 00 00 00       	mov    eax,0x1
    c715:	eb 05                	jmp    c71c <run_hello_script+0x74>
    c717:	b8 00 00 00 00       	mov    eax,0x0
    c71c:	85 c0                	test   eax,eax
    c71e:	75 1e                	jne    c73e <run_hello_script+0x96>
    c720:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c724:	48 89 c7             	mov    rdi,rax
    c727:	e8 94 60 ff ff       	call   27c0 <lua_gettop@plt>
    c72c:	f7 d0                	not    eax
    c72e:	89 c2                	mov    edx,eax
    c730:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c734:	89 d6                	mov    esi,edx
    c736:	48 89 c7             	mov    rdi,rax
    c739:	e8 c2 60 ff ff       	call   2800 <lua_settop@plt>
    c73e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c742:	48 89 c7             	mov    rdi,rax
    c745:	e8 b6 5e ff ff       	call   2600 <lua_close@plt>
    c74a:	90                   	nop
    c74b:	c9                   	leave  
    c74c:	c3                   	ret    

000000000000c74d <collect_scripts>:
    c74d:	f3 0f 1e fa          	endbr64 
    c751:	55                   	push   rbp
    c752:	48 89 e5             	mov    rbp,rsp
    c755:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    c75c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    c763:	00 00 
    c765:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    c769:	31 c0                	xor    eax,eax
    c76b:	48 8d 35 dc 29 00 00 	lea    rsi,[rip+0x29dc]        # f14e <_IO_stdin_used+0x214e>
    c772:	48 8d 3d d7 29 00 00 	lea    rdi,[rip+0x29d7]        # f150 <_IO_stdin_used+0x2150>
    c779:	e8 92 5f ff ff       	call   2710 <fopen@plt>
    c77e:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
    c782:	48 83 7d 80 00       	cmp    QWORD PTR [rbp-0x80],0x0
    c787:	75 16                	jne    c79f <collect_scripts+0x52>
    c789:	48 8d 3d d8 29 00 00 	lea    rdi,[rip+0x29d8]        # f168 <_IO_stdin_used+0x2168>
    c790:	e8 cb 60 ff ff       	call   2860 <puts@plt>
    c795:	bf ff ff ff ff       	mov    edi,0xffffffff
    c79a:	e8 a1 5f ff ff       	call   2740 <exit@plt>
    c79f:	48 c7 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],0x0
    c7a6:	00 00 00 00 
    c7aa:	48 8d 45 90          	lea    rax,[rbp-0x70]
    c7ae:	ba 00 00 00 00       	mov    edx,0x0
    c7b3:	48 8d 35 f0 29 00 00 	lea    rsi,[rip+0x29f0]        # f1aa <_IO_stdin_used+0x21aa>
    c7ba:	48 89 c7             	mov    rdi,rax
    c7bd:	e8 3e 5f ff ff       	call   2700 <regcomp@plt>
    c7c2:	e9 86 00 00 00       	jmp    c84d <collect_scripts+0x100>
    c7c7:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    c7ce:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    c7d1:	3c 23                	cmp    al,0x23
    c7d3:	75 02                	jne    c7d7 <collect_scripts+0x8a>
    c7d5:	eb 76                	jmp    c84d <collect_scripts+0x100>
    c7d7:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    c7de:	ba 0e 00 00 00       	mov    edx,0xe
    c7e3:	48 8d 35 ca 29 00 00 	lea    rsi,[rip+0x29ca]        # f1b4 <_IO_stdin_used+0x21b4>
    c7ea:	48 89 c7             	mov    rdi,rax
    c7ed:	e8 ce 5d ff ff       	call   25c0 <strncmp@plt>
    c7f2:	85 c0                	test   eax,eax
    c7f4:	75 34                	jne    c82a <collect_scripts+0xdd>
    c7f6:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    c7fd:	48 8d 50 0e          	lea    rdx,[rax+0xe]
    c801:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    c805:	48 89 d6             	mov    rsi,rdx
    c808:	48 89 c7             	mov    rdi,rax
    c80b:	e8 90 5e ff ff       	call   26a0 <strcpy@plt>
    c810:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    c814:	48 8d 35 a8 29 00 00 	lea    rsi,[rip+0x29a8]        # f1c3 <_IO_stdin_used+0x21c3>
    c81b:	48 89 c7             	mov    rdi,rax
    c81e:	e8 bd 5c ff ff       	call   24e0 <strcspn@plt>
    c823:	c6 44 05 d0 00       	mov    BYTE PTR [rbp+rax*1-0x30],0x0
    c828:	eb 23                	jmp    c84d <collect_scripts+0x100>
    c82a:	48 8b b5 78 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x88]
    c831:	48 8d 45 90          	lea    rax,[rbp-0x70]
    c835:	41 b8 00 00 00 00    	mov    r8d,0x0
    c83b:	b9 00 00 00 00       	mov    ecx,0x0
    c840:	ba 00 00 00 00       	mov    edx,0x0
    c845:	48 89 c7             	mov    rdi,rax
    c848:	e8 03 5f ff ff       	call   2750 <regexec@plt>
    c84d:	48 8b 55 80          	mov    rdx,QWORD PTR [rbp-0x80]
    c851:	48 8d 8d 70 ff ff ff 	lea    rcx,[rbp-0x90]
    c858:	48 8d 85 78 ff ff ff 	lea    rax,[rbp-0x88]
    c85f:	48 89 ce             	mov    rsi,rcx
    c862:	48 89 c7             	mov    rdi,rax
    c865:	e8 06 5f ff ff       	call   2770 <getline@plt>
    c86a:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    c86e:	48 83 7d 88 ff       	cmp    QWORD PTR [rbp-0x78],0xffffffffffffffff
    c873:	0f 85 4e ff ff ff    	jne    c7c7 <collect_scripts+0x7a>
    c879:	90                   	nop
    c87a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c87e:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    c885:	00 00 
    c887:	74 05                	je     c88e <collect_scripts+0x141>
    c889:	e8 42 5e ff ff       	call   26d0 <__stack_chk_fail@plt>
    c88e:	c9                   	leave  
    c88f:	c3                   	ret    

000000000000c890 <ip6decode>:
    c890:	f3 0f 1e fa          	endbr64 
    c894:	55                   	push   rbp
    c895:	48 89 e5             	mov    rbp,rsp
    c898:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    c89f:	48 89 bd 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdi
    c8a6:	48 89 b5 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rsi
    c8ad:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    c8b4:	00 00 
    c8b6:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    c8ba:	31 c0                	xor    eax,eax
    c8bc:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    c8c3:	48 83 c0 0e          	add    rax,0xe
    c8c7:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    c8cb:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    c8cf:	48 83 c0 08          	add    rax,0x8
    c8d3:	48 89 c7             	mov    rdi,rax
    c8d6:	e8 38 69 ff ff       	call   3213 <inet6_ntoa>
    c8db:	48 89 c1             	mov    rcx,rax
    c8de:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    c8e2:	ba 29 00 00 00       	mov    edx,0x29
    c8e7:	48 89 ce             	mov    rsi,rcx
    c8ea:	48 89 c7             	mov    rdi,rax
    c8ed:	e8 fe 5c ff ff       	call   25f0 <strncpy@plt>
    c8f2:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    c8f6:	48 83 c0 18          	add    rax,0x18
    c8fa:	48 89 c7             	mov    rdi,rax
    c8fd:	e8 11 69 ff ff       	call   3213 <inet6_ntoa>
    c902:	48 89 c1             	mov    rcx,rax
    c905:	48 8d 45 90          	lea    rax,[rbp-0x70]
    c909:	ba 29 00 00 00       	mov    edx,0x29
    c90e:	48 89 ce             	mov    rsi,rcx
    c911:	48 89 c7             	mov    rdi,rax
    c914:	e8 d7 5c ff ff       	call   25f0 <strncpy@plt>
    c919:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    c91d:	0f b6 40 06          	movzx  eax,BYTE PTR [rax+0x6]
    c921:	0f b6 c0             	movzx  eax,al
    c924:	85 c0                	test   eax,eax
    c926:	75 1c                	jne    c944 <ip6decode+0xb4>
    c928:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    c92c:	48 8d 4d c0          	lea    rcx,[rbp-0x40]
    c930:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    c937:	48 89 ce             	mov    rsi,rcx
    c93a:	48 89 c7             	mov    rdi,rax
    c93d:	e8 6c 71 ff ff       	call   3aae <ip6_icmp_decode>
    c942:	eb 28                	jmp    c96c <ip6decode+0xdc>
    c944:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    c948:	0f b6 40 06          	movzx  eax,BYTE PTR [rax+0x6]
    c94c:	0f b6 c8             	movzx  ecx,al
    c94f:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    c953:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    c957:	48 89 c6             	mov    rsi,rax
    c95a:	48 8d 3d 67 28 00 00 	lea    rdi,[rip+0x2867]        # f1c8 <_IO_stdin_used+0x21c8>
    c961:	b8 00 00 00 00       	mov    eax,0x0
    c966:	e8 55 5b ff ff       	call   24c0 <printf@plt>
    c96b:	90                   	nop
    c96c:	90                   	nop
    c96d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c971:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    c978:	00 00 
    c97a:	74 05                	je     c981 <ip6decode+0xf1>
    c97c:	e8 4f 5d ff ff       	call   26d0 <__stack_chk_fail@plt>
    c981:	c9                   	leave  
    c982:	c3                   	ret    

000000000000c983 <crash_handler>:
    c983:	f3 0f 1e fa          	endbr64 
    c987:	55                   	push   rbp
    c988:	48 89 e5             	mov    rbp,rsp
    c98b:	53                   	push   rbx
    c98c:	48 81 ec d8 00 00 00 	sub    rsp,0xd8
    c993:	89 bd 2c ff ff ff    	mov    DWORD PTR [rbp-0xd4],edi
    c999:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    c9a0:	00 00 
    c9a2:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    c9a6:	31 c0                	xor    eax,eax
    c9a8:	48 8d 85 40 ff ff ff 	lea    rax,[rbp-0xc0]
    c9af:	be 14 00 00 00       	mov    esi,0x14
    c9b4:	48 89 c7             	mov    rdi,rax
    c9b7:	e8 74 5e ff ff       	call   2830 <backtrace@plt>
    c9bc:	89 85 34 ff ff ff    	mov    DWORD PTR [rbp-0xcc],eax
    c9c2:	8b 95 34 ff ff ff    	mov    edx,DWORD PTR [rbp-0xcc]
    c9c8:	48 8d 85 40 ff ff ff 	lea    rax,[rbp-0xc0]
    c9cf:	89 d6                	mov    esi,edx
    c9d1:	48 89 c7             	mov    rdi,rax
    c9d4:	e8 67 5e ff ff       	call   2840 <backtrace_symbols@plt>
    c9d9:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    c9e0:	b8 00 00 00 00       	mov    eax,0x0
    c9e5:	e8 f5 69 ff ff       	call   33df <get_formated_time>
    c9ea:	48 89 c6             	mov    rsi,rax
    c9ed:	48 8d 3d fc 27 00 00 	lea    rdi,[rip+0x27fc]        # f1f0 <_IO_stdin_used+0x21f0>
    c9f4:	b8 00 00 00 00       	mov    eax,0x0
    c9f9:	e8 c2 5a ff ff       	call   24c0 <printf@plt>
    c9fe:	48 8d 3d 1a 28 00 00 	lea    rdi,[rip+0x281a]        # f21f <_IO_stdin_used+0x221f>
    ca05:	e8 56 5e ff ff       	call   2860 <puts@plt>
    ca0a:	48 83 bd 38 ff ff ff 	cmp    QWORD PTR [rbp-0xc8],0x0
    ca11:	00 
    ca12:	74 46                	je     ca5a <crash_handler+0xd7>
    ca14:	c7 85 30 ff ff ff 00 	mov    DWORD PTR [rbp-0xd0],0x0
    ca1b:	00 00 00 
    ca1e:	eb 2c                	jmp    ca4c <crash_handler+0xc9>
    ca20:	8b 85 30 ff ff ff    	mov    eax,DWORD PTR [rbp-0xd0]
    ca26:	48 98                	cdqe   
    ca28:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    ca2f:	00 
    ca30:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
    ca37:	48 01 d0             	add    rax,rdx
    ca3a:	48 8b 00             	mov    rax,QWORD PTR [rax]
    ca3d:	48 89 c7             	mov    rdi,rax
    ca40:	e8 1b 5e ff ff       	call   2860 <puts@plt>
    ca45:	83 85 30 ff ff ff 01 	add    DWORD PTR [rbp-0xd0],0x1
    ca4c:	8b 85 30 ff ff ff    	mov    eax,DWORD PTR [rbp-0xd0]
    ca52:	3b 85 34 ff ff ff    	cmp    eax,DWORD PTR [rbp-0xcc]
    ca58:	7c c6                	jl     ca20 <crash_handler+0x9d>
    ca5a:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
    ca61:	48 89 c7             	mov    rdi,rax
    ca64:	e8 c7 5c ff ff       	call   2730 <free@plt>
    ca69:	b8 00 00 00 00       	mov    eax,0x0
    ca6e:	e8 3d 01 00 00       	call   cbb0 <print_mem_map>
    ca73:	48 8d 3d b9 27 00 00 	lea    rdi,[rip+0x27b9]        # f233 <_IO_stdin_used+0x2233>
    ca7a:	e8 e1 5d ff ff       	call   2860 <puts@plt>
    ca7f:	89 c6                	mov    esi,eax
    ca81:	48 8d 3d ba 27 00 00 	lea    rdi,[rip+0x27ba]        # f242 <_IO_stdin_used+0x2242>
    ca88:	b8 00 00 00 00       	mov    eax,0x0
    ca8d:	e8 2e 5a ff ff       	call   24c0 <printf@plt>
    ca92:	89 d8                	mov    eax,ebx
    ca94:	89 c6                	mov    esi,eax
    ca96:	48 8d 3d b5 27 00 00 	lea    rdi,[rip+0x27b5]        # f252 <_IO_stdin_used+0x2252>
    ca9d:	b8 00 00 00 00       	mov    eax,0x0
    caa2:	e8 19 5a ff ff       	call   24c0 <printf@plt>
    caa7:	89 d8                	mov    eax,ebx
    caa9:	89 c6                	mov    esi,eax
    caab:	48 8d 3d b0 27 00 00 	lea    rdi,[rip+0x27b0]        # f262 <_IO_stdin_used+0x2262>
    cab2:	b8 00 00 00 00       	mov    eax,0x0
    cab7:	e8 04 5a ff ff       	call   24c0 <printf@plt>
    cabc:	89 c8                	mov    eax,ecx
    cabe:	89 c6                	mov    esi,eax
    cac0:	48 8d 3d ab 27 00 00 	lea    rdi,[rip+0x27ab]        # f272 <_IO_stdin_used+0x2272>
    cac7:	b8 00 00 00 00       	mov    eax,0x0
    cacc:	e8 ef 59 ff ff       	call   24c0 <printf@plt>
    cad1:	89 e0                	mov    eax,esp
    cad3:	89 c6                	mov    esi,eax
    cad5:	48 8d 3d a6 27 00 00 	lea    rdi,[rip+0x27a6]        # f282 <_IO_stdin_used+0x2282>
    cadc:	b8 00 00 00 00       	mov    eax,0x0
    cae1:	e8 da 59 ff ff       	call   24c0 <printf@plt>
    cae6:	89 e8                	mov    eax,ebp
    cae8:	89 c6                	mov    esi,eax
    caea:	48 8d 3d a1 27 00 00 	lea    rdi,[rip+0x27a1]        # f292 <_IO_stdin_used+0x2292>
    caf1:	b8 00 00 00 00       	mov    eax,0x0
    caf6:	e8 c5 59 ff ff       	call   24c0 <printf@plt>
    cafb:	48 8d 35 81 fe ff ff 	lea    rsi,[rip+0xfffffffffffffe81]        # c983 <crash_handler>
    cb02:	48 8d 3d 99 27 00 00 	lea    rdi,[rip+0x2799]        # f2a2 <_IO_stdin_used+0x22a2>
    cb09:	b8 00 00 00 00       	mov    eax,0x0
    cb0e:	e8 ad 59 ff ff       	call   24c0 <printf@plt>
    cb13:	89 e8                	mov    eax,ebp
    cb15:	89 e2                	mov    edx,esp
    cb17:	29 d0                	sub    eax,edx
    cb19:	89 c6                	mov    esi,eax
    cb1b:	48 8d 3d 84 27 00 00 	lea    rdi,[rip+0x2784]        # f2a6 <_IO_stdin_used+0x22a6>
    cb22:	b8 00 00 00 00       	mov    eax,0x0
    cb27:	e8 94 59 ff ff       	call   24c0 <printf@plt>
    cb2c:	bf 01 00 00 00       	mov    edi,0x1
    cb31:	e8 0a 5c ff ff       	call   2740 <exit@plt>

000000000000cb36 <add_fn>:
    cb36:	f3 0f 1e fa          	endbr64 
    cb3a:	55                   	push   rbp
    cb3b:	48 89 e5             	mov    rbp,rsp
    cb3e:	48 83 ec 20          	sub    rsp,0x20
    cb42:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    cb46:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    cb4a:	8b 05 b0 fc 12 00    	mov    eax,DWORD PTR [rip+0x12fcb0]        # 13c800 <fn_num>
    cb50:	8d 50 01             	lea    edx,[rax+0x1]
    cb53:	89 15 a7 fc 12 00    	mov    DWORD PTR [rip+0x12fca7],edx        # 13c800 <fn_num>
    cb59:	48 63 d0             	movsxd rdx,eax
    cb5c:	48 89 d0             	mov    rax,rdx
    cb5f:	48 01 c0             	add    rax,rax
    cb62:	48 01 d0             	add    rax,rdx
    cb65:	48 c1 e0 04          	shl    rax,0x4
    cb69:	48 8d 15 90 cc 12 00 	lea    rdx,[rip+0x12cc90]        # 139800 <fn_mem_map>
    cb70:	48 01 d0             	add    rax,rdx
    cb73:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    cb77:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    cb7b:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    cb7f:	48 89 d6             	mov    rsi,rdx
    cb82:	48 89 c7             	mov    rdi,rax
    cb85:	e8 16 5b ff ff       	call   26a0 <strcpy@plt>
    cb8a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    cb8e:	48 8d 48 20          	lea    rcx,[rax+0x20]
    cb92:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    cb96:	48 89 c2             	mov    rdx,rax
    cb99:	48 8d 35 0e 27 00 00 	lea    rsi,[rip+0x270e]        # f2ae <_IO_stdin_used+0x22ae>
    cba0:	48 89 cf             	mov    rdi,rcx
    cba3:	b8 00 00 00 00       	mov    eax,0x0
    cba8:	e8 53 59 ff ff       	call   2500 <sprintf@plt>
    cbad:	90                   	nop
    cbae:	c9                   	leave  
    cbaf:	c3                   	ret    

000000000000cbb0 <print_mem_map>:
    cbb0:	f3 0f 1e fa          	endbr64 
    cbb4:	55                   	push   rbp
    cbb5:	48 89 e5             	mov    rbp,rsp
    cbb8:	48 83 ec 10          	sub    rsp,0x10
    cbbc:	48 8d 3d ee 26 00 00 	lea    rdi,[rip+0x26ee]        # f2b1 <_IO_stdin_used+0x22b1>
    cbc3:	e8 98 5c ff ff       	call   2860 <puts@plt>
    cbc8:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    cbcf:	eb 56                	jmp    cc27 <print_mem_map+0x77>
    cbd1:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    cbd4:	48 63 d0             	movsxd rdx,eax
    cbd7:	48 89 d0             	mov    rax,rdx
    cbda:	48 01 c0             	add    rax,rax
    cbdd:	48 01 d0             	add    rax,rdx
    cbe0:	48 c1 e0 04          	shl    rax,0x4
    cbe4:	48 8d 50 20          	lea    rdx,[rax+0x20]
    cbe8:	48 8d 05 11 cc 12 00 	lea    rax,[rip+0x12cc11]        # 139800 <fn_mem_map>
    cbef:	48 01 c2             	add    rdx,rax
    cbf2:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    cbf5:	48 63 c8             	movsxd rcx,eax
    cbf8:	48 89 c8             	mov    rax,rcx
    cbfb:	48 01 c0             	add    rax,rax
    cbfe:	48 01 c8             	add    rax,rcx
    cc01:	48 c1 e0 04          	shl    rax,0x4
    cc05:	48 8d 0d f4 cb 12 00 	lea    rcx,[rip+0x12cbf4]        # 139800 <fn_mem_map>
    cc0c:	48 01 c8             	add    rax,rcx
    cc0f:	48 89 c6             	mov    rsi,rax
    cc12:	48 8d 3d b0 26 00 00 	lea    rdi,[rip+0x26b0]        # f2c9 <_IO_stdin_used+0x22c9>
    cc19:	b8 00 00 00 00       	mov    eax,0x0
    cc1e:	e8 9d 58 ff ff       	call   24c0 <printf@plt>
    cc23:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    cc27:	8b 05 d3 fb 12 00    	mov    eax,DWORD PTR [rip+0x12fbd3]        # 13c800 <fn_num>
    cc2d:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    cc30:	7c 9f                	jl     cbd1 <print_mem_map+0x21>
    cc32:	90                   	nop
    cc33:	90                   	nop
    cc34:	c9                   	leave  
    cc35:	c3                   	ret    

000000000000cc36 <load_fn_mem_map>:
    cc36:	f3 0f 1e fa          	endbr64 
    cc3a:	55                   	push   rbp
    cc3b:	48 89 e5             	mov    rbp,rsp
    cc3e:	48 8d 35 8d 26 00 00 	lea    rsi,[rip+0x268d]        # f2d2 <_IO_stdin_used+0x22d2>
    cc45:	48 8d 05 7e 9c ff ff 	lea    rax,[rip+0xffffffffffff9c7e]        # 68ca <main>
    cc4c:	48 89 c7             	mov    rdi,rax
    cc4f:	e8 e2 fe ff ff       	call   cb36 <add_fn>
    cc54:	48 8d 35 7c 26 00 00 	lea    rsi,[rip+0x267c]        # f2d7 <_IO_stdin_used+0x22d7>
    cc5b:	48 8d 05 77 9f ff ff 	lea    rax,[rip+0xffffffffffff9f77]        # 6bd9 <sigint_processor>
    cc62:	48 89 c7             	mov    rdi,rax
    cc65:	e8 cc fe ff ff       	call   cb36 <add_fn>
    cc6a:	48 8d 35 77 26 00 00 	lea    rsi,[rip+0x2677]        # f2e8 <_IO_stdin_used+0x22e8>
    cc71:	48 8d 05 d7 77 ff ff 	lea    rax,[rip+0xffffffffffff77d7]        # 444f <ip4_tcp_decode>
    cc78:	48 89 c7             	mov    rdi,rax
    cc7b:	e8 b6 fe ff ff       	call   cb36 <add_fn>
    cc80:	90                   	nop
    cc81:	5d                   	pop    rbp
    cc82:	c3                   	ret    

Disassembly of section .fini:

000000000000cc84 <_fini>:
    cc84:	f3 0f 1e fa          	endbr64 
    cc88:	48 83 ec 08          	sub    rsp,0x8
    cc8c:	48 83 c4 08          	add    rsp,0x8
    cc90:	c3                   	ret    

Disassembly of section .rodata:

000000000000d000 <_IO_stdin_used>:
    d000:	01 00                	add    DWORD PTR [rax],eax
    d002:	02 00                	add    al,BYTE PTR [rax]
    d004:	2f                   	(bad)  
    d005:	65 74 63             	gs je  d06b <_IO_stdin_used+0x6b>
    d008:	2f                   	(bad)  
    d009:	76 69                	jbe    d074 <_IO_stdin_used+0x74>
    d00b:	67 69 6c 2f 76 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x76],0x6c696769
    d012:	69 6c 
    d014:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    d018:	66 00 2f             	data16 add BYTE PTR [rdi],ch
    d01b:	76 61                	jbe    d07e <_IO_stdin_used+0x7e>
    d01d:	72 2f                	jb     d04e <_IO_stdin_used+0x4e>
    d01f:	6c                   	ins    BYTE PTR es:[rdi],dx
    d020:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d021:	67 2f                	addr32 (bad) 
    d023:	76 69                	jbe    d08e <_IO_stdin_used+0x8e>
    d025:	67 69 6c 2f 73 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x6f6c6769
    d02c:	6c 6f 
    d02e:	67 2e 6c             	cs ins BYTE PTR es:[edi],dx
    d031:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d032:	67 00 2f             	add    BYTE PTR [edi],ch
    d035:	65 74 63             	gs je  d09b <_IO_stdin_used+0x9b>
    d038:	2f                   	(bad)  
    d039:	76 69                	jbe    d0a4 <_IO_stdin_used+0xa4>
    d03b:	67 69 6c 2f 68 6f 73 	imul   ebp,DWORD PTR [edi+ebp*1+0x68],0x7374736f
    d042:	74 73 
    d044:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    d048:	66 00 00             	data16 add BYTE PTR [rax],al
    d04b:	00 00                	add    BYTE PTR [rax],al
    d04d:	00 00                	add    BYTE PTR [rax],al
    d04f:	00 1b                	add    BYTE PTR [rbx],bl
    d051:	5b                   	pop    rbx
    d052:	39 30                	cmp    DWORD PTR [rax],esi
    d054:	6d                   	ins    DWORD PTR es:[rdi],dx
    d055:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    d05a:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    d05f:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    d064:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    d069:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    d06e:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    d073:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    d078:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    d07d:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    d082:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    d087:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    d08c:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    d091:	2d 1b 5b 6d 00       	sub    eax,0x6d5b1b
    d096:	00 00                	add    BYTE PTR [rax],al
    d098:	42                   	rex.X
    d099:	41                   	rex.B
    d09a:	44 2d 54 52 41 46    	rex.R sub eax,0x46415254
    d0a0:	46                   	rex.RX
    d0a1:	49                   	rex.WB
    d0a2:	43 20 55 6e          	rex.XB and BYTE PTR [r13+0x6e],dl
    d0a6:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    d0aa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d0ab:	20 45 74             	and    BYTE PTR [rbp+0x74],al
    d0ae:	68 65 72 6e 74       	push   0x746e7265
    d0b3:	20 46 72             	and    BYTE PTR [rsi+0x72],al
    d0b6:	61                   	(bad)  
    d0b7:	6d                   	ins    DWORD PTR es:[rdi],dx
    d0b8:	65 20 50 72          	and    BYTE PTR gs:[rax+0x72],dl
    d0bc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d0bd:	74 6f                	je     d12e <_IO_stdin_used+0x12e>
    d0bf:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    d0c2:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    d0c5:	6d                   	ins    DWORD PTR es:[rdi],dx
    d0c6:	62                   	(bad)  
    d0c7:	65 72 00             	gs jb  d0ca <_IO_stdin_used+0xca>
    d0ca:	2f                   	(bad)  
    d0cb:	76 61                	jbe    d12e <_IO_stdin_used+0x12e>
    d0cd:	72 2f                	jb     d0fe <_IO_stdin_used+0xfe>
    d0cf:	6c                   	ins    BYTE PTR es:[rdi],dx
    d0d0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d0d1:	67 2f                	addr32 (bad) 
    d0d3:	76 69                	jbe    d13e <_IO_stdin_used+0x13e>
    d0d5:	67 69 6c 2f 73 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x6f6c6769
    d0dc:	6c 6f 
    d0de:	67 2e 6c             	cs ins BYTE PTR es:[edi],dx
    d0e1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d0e2:	67 00 00             	add    BYTE PTR [eax],al
    d0e5:	00 00                	add    BYTE PTR [rax],al
    d0e7:	00 1b                	add    BYTE PTR [rbx],bl
    d0e9:	5b                   	pop    rbx
    d0ea:	33 3b                	xor    edi,DWORD PTR [rbx]
    d0ec:	33 33                	xor    esi,DWORD PTR [rbx]
    d0ee:	6d                   	ins    DWORD PTR es:[rdi],dx
    d0ef:	00 25 73 00 30 2e    	add    BYTE PTR [rip+0x2e300073],ah        # 2e30d168 <_end+0x2e1d0960>
    d0f5:	30 2e                	xor    BYTE PTR [rsi],ch
    d0f7:	30 2e                	xor    BYTE PTR [rsi],ch
    d0f9:	30 00                	xor    BYTE PTR [rax],al
    d0fb:	00 00                	add    BYTE PTR [rax],al
    d0fd:	00 00                	add    BYTE PTR [rax],al
    d0ff:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    d102:	4f 54                	rex.WRXB push r12
    d104:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    d108:	50                   	push   rax
    d109:	3a 20                	cmp    ah,BYTE PTR [rax]
    d10b:	50                   	push   rax
    d10c:	52                   	push   rdx
    d10d:	4f                   	rex.WRXB
    d10e:	42                   	rex.X
    d10f:	45 3a 20             	cmp    r12b,BYTE PTR [r8]
    d112:	57                   	push   rdi
    d113:	68 6f 20 68 61       	push   0x6168206f
    d118:	73 20                	jae    d13a <_IO_stdin_used+0x13a>
    d11a:	25 73 3f 0a 00       	and    eax,0xa3f73
    d11f:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    d122:	4f 54                	rex.WRXB push r12
    d124:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    d128:	50                   	push   rax
    d129:	3a 20                	cmp    ah,BYTE PTR [rax]
    d12b:	57                   	push   rdi
    d12c:	68 6f 20 69 73       	push   0x7369206f
    d131:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    d134:	20 25 73 3f 20 54    	and    BYTE PTR [rip+0x54203f73],ah        # 542110ad <_end+0x540d48a5>
    d13a:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    d13c:	6c                   	ins    BYTE PTR es:[rdi],dx
    d13d:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # dbb6 <_IO_stdin_used+0xbb6>
    d143:	00 00                	add    BYTE PTR [rax],al
    d145:	00 00                	add    BYTE PTR [rax],al
    d147:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    d14a:	4f 54                	rex.WRXB push r12
    d14c:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    d150:	50                   	push   rax
    d151:	3a 20                	cmp    ah,BYTE PTR [rax]
    d153:	52                   	push   rdx
    d154:	45 50                	rex.RB push r8
    d156:	4c 59                	rex.WR pop rcx
    d158:	3a 20                	cmp    ah,BYTE PTR [rax]
    d15a:	25 73 20 69 73       	and    eax,0x73692073
    d15f:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    d162:	20 25 73 0a 00 55    	and    BYTE PTR [rip+0x55000a73],ah        # 5500dbdb <_end+0x54ed13d3>
    d168:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d169:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    d16d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d16e:	20 41 52             	and    BYTE PTR [rcx+0x52],al
    d171:	50                   	push   rax
    d172:	20 6f 70             	and    BYTE PTR [rdi+0x70],ch
    d175:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
    d178:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    d17b:	25 64 0a 00 1b       	and    eax,0x1b000a64
    d180:	5b                   	pop    rbx
    d181:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    d184:	4c                   	rex.WR
    d185:	4f                   	rex.WRXB
    d186:	4f 50                	rex.WRXB push r8
    d188:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2df201 <_end+0x3e1a29f9>
    d18e:	20 25 73 00 20 52    	and    BYTE PTR [rip+0x52200073],ah        # 5220d207 <_end+0x520d09ff>
    d194:	45 50                	rex.RB push r8
    d196:	4c 59                	rex.WR pop rcx
    d198:	20 00                	and    BYTE PTR [rax],al
    d19a:	20 55 4e             	and    BYTE PTR [rbp+0x4e],dl
    d19d:	4b                   	rex.WXB
    d19e:	4e                   	rex.WRX
    d19f:	4f 57                	rex.WRXB push r15
    d1a1:	4e 20 4c 4f 4f       	rex.WRX and BYTE PTR [rdi+r9*2+0x4f],r9b
    d1a6:	50                   	push   rax
    d1a7:	20 46 55             	and    BYTE PTR [rsi+0x55],al
    d1aa:	4e                   	rex.WRX
    d1ab:	43 54                	rex.XB push r12
    d1ad:	49                   	rex.WB
    d1ae:	4f                   	rex.WRXB
    d1af:	4e 3a 25 64 20 0a 00 	rex.WRX cmp r12b,BYTE PTR [rip+0xa2064]        # af21a <rules+0x9cf3a>
    d1b6:	00 00                	add    BYTE PTR [rax],al
    d1b8:	25 30 32 78 3a       	and    eax,0x3a783230
    d1bd:	25 30 32 78 3a       	and    eax,0x3a783230
    d1c2:	25 30 32 78 3a       	and    eax,0x3a783230
    d1c7:	25 30 32 78 3a       	and    eax,0x3a783230
    d1cc:	25 30 32 78 3a       	and    eax,0x3a783230
    d1d1:	25 30 32 78 00       	and    eax,0x783230
    d1d6:	25 64 2e 25 64       	and    eax,0x64252e64
    d1db:	2e 25 64 2e 25 64    	cs and eax,0x64252e64
    d1e1:	00 00                	add    BYTE PTR [rax],al
    d1e3:	00 00                	add    BYTE PTR [rax],al
    d1e5:	00 00                	add    BYTE PTR [rax],al
    d1e7:	00 25 30 32 78 25    	add    BYTE PTR [rip+0x25783230],ah        # 2579041d <_end+0x25653c15>
    d1ed:	30 32                	xor    BYTE PTR [rdx],dh
    d1ef:	78 3a                	js     d22b <_IO_stdin_used+0x22b>
    d1f1:	25 30 32 78 25       	and    eax,0x25783230
    d1f6:	30 32                	xor    BYTE PTR [rdx],dh
    d1f8:	78 3a                	js     d234 <_IO_stdin_used+0x234>
    d1fa:	25 30 32 78 25       	and    eax,0x25783230
    d1ff:	30 32                	xor    BYTE PTR [rdx],dh
    d201:	78 3a                	js     d23d <_IO_stdin_used+0x23d>
    d203:	25 30 32 78 25       	and    eax,0x25783230
    d208:	30 32                	xor    BYTE PTR [rdx],dh
    d20a:	78 3a                	js     d246 <_IO_stdin_used+0x246>
    d20c:	25 30 32 78 25       	and    eax,0x25783230
    d211:	30 32                	xor    BYTE PTR [rdx],dh
    d213:	78 3a                	js     d24f <_IO_stdin_used+0x24f>
    d215:	25 30 32 78 25       	and    eax,0x25783230
    d21a:	30 32                	xor    BYTE PTR [rdx],dh
    d21c:	78 3a                	js     d258 <_IO_stdin_used+0x258>
    d21e:	25 30 32 78 25       	and    eax,0x25783230
    d223:	30 32                	xor    BYTE PTR [rdx],dh
    d225:	78 3a                	js     d261 <_IO_stdin_used+0x261>
    d227:	25 30 32 78 25       	and    eax,0x25783230
    d22c:	30 32                	xor    BYTE PTR [rdx],dh
    d22e:	78 00                	js     d230 <_IO_stdin_used+0x230>
    d230:	25 64 2d 25 30       	and    eax,0x30252d64
    d235:	32 64 2d 25          	xor    ah,BYTE PTR [rbp+rbp*1+0x25]
    d239:	30 32                	xor    BYTE PTR [rdx],dh
    d23b:	64 20 25 30 32 64 3a 	and    BYTE PTR fs:[rip+0x3a643230],ah        # 3a650472 <_end+0x3a513c6a>
    d242:	25 30 32 64 3a       	and    eax,0x3a643230
    d247:	25 30 32 64 00       	and    eax,0x643230
    d24c:	25 73 3a 20 25       	and    eax,0x25203a73
    d251:	73 0a                	jae    d25d <_IO_stdin_used+0x25d>
    d253:	00 00                	add    BYTE PTR [rax],al
    d255:	00 00                	add    BYTE PTR [rax],al
    d257:	00 25 73 20 46 6f    	add    BYTE PTR [rip+0x6f462073],ah        # 6f46f2d0 <_end+0x6f332ac8>
    d25d:	75 6e                	jne    d2cd <_IO_stdin_used+0x2cd>
    d25f:	64 20 62 6c          	and    BYTE PTR fs:[rdx+0x6c],ah
    d263:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d264:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d267:	64 20 69 70          	and    BYTE PTR fs:[rcx+0x70],ch
    d26b:	76 34                	jbe    d2a1 <_IO_stdin_used+0x2a1>
    d26d:	20 61 64             	and    BYTE PTR [rcx+0x64],ah
    d270:	64 72 65             	fs jb  d2d8 <_IO_stdin_used+0x2d8>
    d273:	73 73                	jae    d2e8 <_IO_stdin_used+0x2e8>
    d275:	28 64 65 73          	sub    BYTE PTR [rbp+riz*2+0x73],ah
    d279:	74 29                	je     d2a4 <_IO_stdin_used+0x2a4>
    d27b:	3a 20                	cmp    ah,BYTE PTR [rax]
    d27d:	25 73 0a 00 00       	and    eax,0xa73
    d282:	00 00                	add    BYTE PTR [rax],al
    d284:	00 00                	add    BYTE PTR [rax],al
    d286:	00 00                	add    BYTE PTR [rax],al
    d288:	25 73 20 46 6f       	and    eax,0x6f462073
    d28d:	75 6e                	jne    d2fd <_IO_stdin_used+0x2fd>
    d28f:	64 20 62 6c          	and    BYTE PTR fs:[rdx+0x6c],ah
    d293:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d294:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d297:	64 20 69 70          	and    BYTE PTR fs:[rcx+0x70],ch
    d29b:	76 34                	jbe    d2d1 <_IO_stdin_used+0x2d1>
    d29d:	20 61 64             	and    BYTE PTR [rcx+0x64],ah
    d2a0:	64 72 65             	fs jb  d308 <_IO_stdin_used+0x308>
    d2a3:	73 73                	jae    d318 <_IO_stdin_used+0x318>
    d2a5:	28 73 72             	sub    BYTE PTR [rbx+0x72],dh
    d2a8:	63 29                	movsxd ebp,DWORD PTR [rcx]
    d2aa:	3a 20                	cmp    ah,BYTE PTR [rax]
    d2ac:	25 73 0a 00 1b       	and    eax,0x1b000a73
    d2b1:	5b                   	pop    rbx
    d2b2:	34 6d                	xor    al,0x6d
    d2b4:	00 25 73 46 72 61    	add    BYTE PTR [rip+0x61724673],ah        # 6173192d <_end+0x615f5125>
    d2ba:	67 6d                	ins    DWORD PTR es:[edi],dx
    d2bc:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d2be:	74 65                	je     d325 <_IO_stdin_used+0x325>
    d2c0:	64 20 00             	and    BYTE PTR fs:[rax],al
    d2c3:	1b 5b 30             	sbb    ebx,DWORD PTR [rbx+0x30]
    d2c6:	6d                   	ins    DWORD PTR es:[rdi],dx
    d2c7:	00 25 73 00 20 25    	add    BYTE PTR [rip+0x25200073],ah        # 2520d340 <_end+0x250d0b38>
    d2cd:	73 20                	jae    d2ef <_IO_stdin_used+0x2ef>
    d2cf:	2d 3e 20 25 73       	sub    eax,0x7325203e
    d2d4:	25 73 0a 00 49       	and    eax,0x49000a73
    d2d9:	50                   	push   rax
    d2da:	76 34                	jbe    d310 <_IO_stdin_used+0x310>
    d2dc:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2df355 <_end+0x3e1a2b4d>
    d2e2:	20 25 73 20 50 72    	and    BYTE PTR [rip+0x72502073],ah        # 7250f35b <_end+0x723d2b53>
    d2e8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d2e9:	74 6f                	je     d35a <_IO_stdin_used+0x35a>
    d2eb:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    d2ee:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    d2f1:	6d                   	ins    DWORD PTR es:[rdi],dx
    d2f2:	62                   	(bad)  
    d2f3:	65 72 20             	gs jb  d316 <_IO_stdin_used+0x316>
    d2f6:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d2fb:	00 00                	add    BYTE PTR [rax],al
    d2fd:	00 00                	add    BYTE PTR [rax],al
    d2ff:	00 1b                	add    BYTE PTR [rbx],bl
    d301:	5b                   	pop    rbx
    d302:	33 35 6d 00 25 73    	xor    esi,DWORD PTR [rip+0x7325006d]        # 7325d375 <_end+0x73120b6d>
    d308:	00 49 50             	add    BYTE PTR [rcx+0x50],cl
    d30b:	76 36                	jbe    d343 <_IO_stdin_used+0x343>
    d30d:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2df386 <_end+0x3e1a2b7e>
    d313:	20 25 73 0a 00 09    	and    BYTE PTR [rip+0x9000a73],ah        # 900dd8c <_end+0x8ed1584>
    d319:	49                   	rex.WB
    d31a:	43                   	rex.XB
    d31b:	4d 50                	rex.WRB push r8
    d31d:	76 36                	jbe    d355 <_IO_stdin_used+0x355>
    d31f:	20 00                	and    BYTE PTR [rax],al
    d321:	20 52 6f             	and    BYTE PTR [rdx+0x6f],dl
    d324:	75 74                	jne    d39a <_IO_stdin_used+0x39a>
    d326:	65 72 20             	gs jb  d349 <_IO_stdin_used+0x349>
    d329:	53                   	push   rbx
    d32a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d32b:	6c                   	ins    BYTE PTR es:[rdi],dx
    d32c:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    d333:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d334:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d335:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d338:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d339:	6d                   	ins    DWORD PTR es:[rdi],dx
    d33a:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # ddb3 <_IO_stdin_used+0xdb3>
    d340:	4d 75 6c             	rex.WRB jne d3af <_IO_stdin_used+0x3af>
    d343:	74 69                	je     d3ae <_IO_stdin_used+0x3ae>
    d345:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    d348:	74 20                	je     d36a <_IO_stdin_used+0x36a>
    d34a:	4c 69 73 74 65 6e 65 	imul   r14,QWORD PTR [rbx+0x74],0x72656e65
    d351:	72 
    d352:	20 52 65             	and    BYTE PTR [rdx+0x65],dl
    d355:	70 6f                	jo     d3c6 <_IO_stdin_used+0x3c6>
    d357:	72 74                	jb     d3cd <_IO_stdin_used+0x3cd>
    d359:	20 4d 65             	and    BYTE PTR [rbp+0x65],cl
    d35c:	73 73                	jae    d3d1 <_IO_stdin_used+0x3d1>
    d35e:	61                   	(bad)  
    d35f:	67 65 20 76 32       	and    BYTE PTR gs:[esi+0x32],dh
    d364:	00 4d 75             	add    BYTE PTR [rbp+0x75],cl
    d367:	6c                   	ins    BYTE PTR es:[rdi],dx
    d368:	74 69                	je     d3d3 <_IO_stdin_used+0x3d3>
    d36a:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    d36d:	74 20                	je     d38f <_IO_stdin_used+0x38f>
    d36f:	20 4c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],cl
    d373:	74 65                	je     d3da <_IO_stdin_used+0x3da>
    d375:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d376:	65 72 20             	gs jb  d399 <_IO_stdin_used+0x399>
    d379:	51                   	push   rcx
    d37a:	75 65                	jne    d3e1 <_IO_stdin_used+0x3e1>
    d37c:	72 79                	jb     d3f7 <_IO_stdin_used+0x3f7>
    d37e:	00 4e 65             	add    BYTE PTR [rsi+0x65],cl
    d381:	69 67 68 62 6f 72 20 	imul   esp,DWORD PTR [rdi+0x68],0x20726f62
    d388:	53                   	push   rbx
    d389:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d38a:	6c                   	ins    BYTE PTR es:[rdi],dx
    d38b:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    d392:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d393:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d394:	00 1b                	add    BYTE PTR [rbx],bl
    d396:	5b                   	pop    rbx
    d397:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    d39a:	00 00                	add    BYTE PTR [rax],al
    d39c:	00 00                	add    BYTE PTR [rax],al
    d39e:	00 00                	add    BYTE PTR [rax],al
    d3a0:	54                   	push   rsp
    d3a1:	69 6d 65 20 73 74 61 	imul   ebp,DWORD PTR [rbp+0x65],0x61747320
    d3a8:	6d                   	ins    DWORD PTR es:[rdi],dx
    d3a9:	70 20                	jo     d3cb <_IO_stdin_used+0x3cb>
    d3ab:	72 65                	jb     d412 <_IO_stdin_used+0x412>
    d3ad:	71 75                	jno    d424 <_IO_stdin_used+0x424>
    d3af:	65 73 74             	gs jae d426 <_IO_stdin_used+0x426>
    d3b2:	3a 20                	cmp    ah,BYTE PTR [rax]
    d3b4:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    d3b9:	20 25 73 28 63 6f    	and    BYTE PTR [rip+0x6f632873],ah        # 6f63fc32 <_end+0x6f50342a>
    d3bf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d3c0:	66 69 67 20 73 70    	imul   sp,WORD PTR [rdi+0x20],0x7073
    d3c6:	65 63 69 66          	movsxd ebp,DWORD PTR gs:[rcx+0x66]
    d3ca:	69 65 73 20 73 74 72 	imul   esp,DWORD PTR [rbp+0x73],0x72747320
    d3d1:	69 63 74 20 74 69 6d 	imul   esp,DWORD PTR [rbx+0x74],0x6d697420
    d3d8:	65 73 74             	gs jae d44f <_IO_stdin_used+0x44f>
    d3db:	61                   	(bad)  
    d3dc:	6d                   	ins    DWORD PTR es:[rdi],dx
    d3dd:	70 20                	jo     d3ff <_IO_stdin_used+0x3ff>
    d3df:	61                   	(bad)  
    d3e0:	6c                   	ins    BYTE PTR es:[rdi],dx
    d3e1:	65 72 74             	gs jb  d458 <_IO_stdin_used+0x458>
    d3e4:	73 29                	jae    d40f <_IO_stdin_used+0x40f>
    d3e6:	0a 00                	or     al,BYTE PTR [rax]
    d3e8:	50                   	push   rax
    d3e9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d3ea:	73 73                	jae    d45f <_IO_stdin_used+0x45f>
    d3ec:	69 62 6c 65 20 6e 6d 	imul   esp,DWORD PTR [rdx+0x6c],0x6d6e2065
    d3f3:	61                   	(bad)  
    d3f4:	70 20                	jo     d416 <_IO_stdin_used+0x416>
    d3f6:	68 6f 73 74 20       	push   0x2074736f
    d3fb:	61                   	(bad)  
    d3fc:	6c                   	ins    BYTE PTR es:[rdi],dx
    d3fd:	69 76 65 20 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x65686320
    d404:	63 6b 20             	movsxd ebp,DWORD PTR [rbx+0x20]
    d407:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    d40c:	20 25 73 3b 20 6d    	and    BYTE PTR [rip+0x6d203b73],ah        # 6d210f85 <_end+0x6d0d477d>
    d412:	61                   	(bad)  
    d413:	74 63                	je     d478 <_IO_stdin_used+0x478>
    d415:	68 65 64 20 49       	push   0x49206465
    d41a:	43                   	rex.XB
    d41b:	4d 50                	rex.WRB push r8
    d41d:	20 45 63             	and    BYTE PTR [rbp+0x63],al
    d420:	68 6f 2c 20 54       	push   0x54202c6f
    d425:	43 50                	rex.XB push r8
    d427:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    d42a:	4e 2c 20             	rex.WRX sub al,0x20
    d42d:	54                   	push   rsp
    d42e:	43 50                	rex.XB push r8
    d430:	20 41 43             	and    BYTE PTR [rcx+0x43],al
    d433:	4b 2c 20             	rex.WXB sub al,0x20
    d436:	61                   	(bad)  
    d437:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d438:	64 20 49 43          	and    BYTE PTR fs:[rcx+0x43],cl
    d43c:	4d 50                	rex.WRB push r8
    d43e:	20 54 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dl
    d442:	65 73 74             	gs jae d4b9 <_IO_stdin_used+0x4b9>
    d445:	61                   	(bad)  
    d446:	6d                   	ins    DWORD PTR es:[rdi],dx
    d447:	70 20                	jo     d469 <_IO_stdin_used+0x469>
    d449:	72 65                	jb     d4b0 <_IO_stdin_used+0x4b0>
    d44b:	71 75                	jno    d4c2 <_IO_stdin_used+0x4c2>
    d44d:	65 73 74             	gs jae d4c4 <_IO_stdin_used+0x4c4>
    d450:	0a 00                	or     al,BYTE PTR [rax]
    d452:	61                   	(bad)  
    d453:	00 00                	add    BYTE PTR [rax],al
    d455:	00 00                	add    BYTE PTR [rax],al
    d457:	00 50 6f             	add    BYTE PTR [rax+0x6f],dl
    d45a:	73 73                	jae    d4cf <_IO_stdin_used+0x4cf>
    d45c:	69 62 6c 65 20 6e 6d 	imul   esp,DWORD PTR [rdx+0x6c],0x6d6e2065
    d463:	61                   	(bad)  
    d464:	70 20                	jo     d486 <_IO_stdin_used+0x486>
    d466:	68 6f 73 74 20       	push   0x2074736f
    d46b:	61                   	(bad)  
    d46c:	6c                   	ins    BYTE PTR es:[rdi],dx
    d46d:	69 76 65 20 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x65686320
    d474:	63 6b 20             	movsxd ebp,DWORD PTR [rbx+0x20]
    d477:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    d47c:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461f4f5 <_end+0x744e2ced>
    d482:	20 25 73 3b 20 6d    	and    BYTE PTR [rip+0x6d203b73],ah        # 6d210ffb <_end+0x6d0d47f3>
    d488:	61                   	(bad)  
    d489:	74 63                	je     d4ee <_IO_stdin_used+0x4ee>
    d48b:	68 65 64 20 49       	push   0x49206465
    d490:	43                   	rex.XB
    d491:	4d 50                	rex.WRB push r8
    d493:	20 45 63             	and    BYTE PTR [rbp+0x63],al
    d496:	68 6f 2c 20 54       	push   0x54202c6f
    d49b:	43 50                	rex.XB push r8
    d49d:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    d4a0:	4e 2c 20             	rex.WRX sub al,0x20
    d4a3:	54                   	push   rsp
    d4a4:	43 50                	rex.XB push r8
    d4a6:	20 41 43             	and    BYTE PTR [rcx+0x43],al
    d4a9:	4b 2c 20             	rex.WXB sub al,0x20
    d4ac:	61                   	(bad)  
    d4ad:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d4ae:	64 20 49 43          	and    BYTE PTR fs:[rcx+0x43],cl
    d4b2:	4d 50                	rex.WRB push r8
    d4b4:	20 54 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dl
    d4b8:	65 73 74             	gs jae d52f <_IO_stdin_used+0x52f>
    d4bb:	61                   	(bad)  
    d4bc:	6d                   	ins    DWORD PTR es:[rdi],dx
    d4bd:	70 20                	jo     d4df <_IO_stdin_used+0x4df>
    d4bf:	72 65                	jb     d526 <_IO_stdin_used+0x526>
    d4c1:	71 75                	jno    d538 <_IO_stdin_used+0x538>
    d4c3:	65 73 74             	gs jae d53a <_IO_stdin_used+0x53a>
    d4c6:	0a 00                	or     al,BYTE PTR [rax]
    d4c8:	49 50                	rex.WB push r8
    d4ca:	76 34                	jbe    d500 <_IO_stdin_used+0x500>
    d4cc:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2df545 <_end+0x3e1a2d3d>
    d4d2:	20 25 73 0a 00 09    	and    BYTE PTR [rip+0x9000a73],ah        # 900df4b <_end+0x8ed1743>
    d4d8:	49                   	rex.WB
    d4d9:	43                   	rex.XB
    d4da:	4d 50                	rex.WRB push r8
    d4dc:	20 00                	and    BYTE PTR [rax],al
    d4de:	20 65 63             	and    BYTE PTR [rbp+0x63],ah
    d4e1:	68 6f 20 72 65       	push   0x6572206f
    d4e6:	70 6c                	jo     d554 <_IO_stdin_used+0x554>
    d4e8:	79 00                	jns    d4ea <_IO_stdin_used+0x4ea>
    d4ea:	20 64 65 73          	and    BYTE PTR [rbp+riz*2+0x73],ah
    d4ee:	74 69                	je     d559 <_IO_stdin_used+0x559>
    d4f0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d4f1:	61                   	(bad)  
    d4f2:	74 69                	je     d55d <_IO_stdin_used+0x55d>
    d4f4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d4f5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d4f6:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    d4f9:	72 65                	jb     d560 <_IO_stdin_used+0x560>
    d4fb:	61                   	(bad)  
    d4fc:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    d4ff:	62                   	(bad)  
    d500:	6c                   	ins    BYTE PTR es:[rdi],dx
    d501:	65 28 00             	sub    BYTE PTR gs:[rax],al
    d504:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    d507:	74 77                	je     d580 <_IO_stdin_used+0x580>
    d509:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d50a:	72 6b                	jb     d577 <_IO_stdin_used+0x577>
    d50c:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    d50f:	72 65                	jb     d576 <_IO_stdin_used+0x576>
    d511:	61                   	(bad)  
    d512:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    d515:	62                   	(bad)  
    d516:	6c                   	ins    BYTE PTR es:[rdi],dx
    d517:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    d51a:	00 20                	add    BYTE PTR [rax],ah
    d51c:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    d51e:	73 74                	jae    d594 <_IO_stdin_used+0x594>
    d520:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    d523:	72 65                	jb     d58a <_IO_stdin_used+0x58a>
    d525:	61                   	(bad)  
    d526:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    d529:	62                   	(bad)  
    d52a:	6c                   	ins    BYTE PTR es:[rdi],dx
    d52b:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    d52e:	00 20                	add    BYTE PTR [rax],ah
    d530:	50                   	push   rax
    d531:	72 6f                	jb     d5a2 <_IO_stdin_used+0x5a2>
    d533:	74 6f                	je     d5a4 <_IO_stdin_used+0x5a4>
    d535:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    d538:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    d53b:	72 65                	jb     d5a2 <_IO_stdin_used+0x5a2>
    d53d:	61                   	(bad)  
    d53e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    d541:	62                   	(bad)  
    d542:	6c                   	ins    BYTE PTR es:[rdi],dx
    d543:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    d546:	00 20                	add    BYTE PTR [rax],ah
    d548:	50                   	push   rax
    d549:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d54a:	72 74                	jb     d5c0 <_IO_stdin_used+0x5c0>
    d54c:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    d54f:	72 65                	jb     d5b6 <_IO_stdin_used+0x5b6>
    d551:	61                   	(bad)  
    d552:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    d555:	62                   	(bad)  
    d556:	6c                   	ins    BYTE PTR es:[rdi],dx
    d557:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    d55a:	00 20                	add    BYTE PTR [rax],ah
    d55c:	46 72 61             	rex.RX jb d5c0 <_IO_stdin_used+0x5c0>
    d55f:	67 6d                	ins    DWORD PTR es:[edi],dx
    d561:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d563:	74 61                	je     d5c6 <_IO_stdin_used+0x5c6>
    d565:	74 69                	je     d5d0 <_IO_stdin_used+0x5d0>
    d567:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d568:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d569:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    d56c:	65 64 65 64 20 29    	gs fs gs and BYTE PTR fs:[rcx],ch
    d572:	00 20                	add    BYTE PTR [rax],ah
    d574:	53                   	push   rbx
    d575:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d576:	75 72                	jne    d5ea <_IO_stdin_used+0x5ea>
    d578:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    d57b:	52                   	push   rdx
    d57c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d57d:	75 74                	jne    d5f3 <_IO_stdin_used+0x5f3>
    d57f:	65 20 46 61          	and    BYTE PTR gs:[rsi+0x61],al
    d583:	69 6c 65 64 20 29 00 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x2920
    d58a:	00 
    d58b:	00 00                	add    BYTE PTR [rax],al
    d58d:	00 00                	add    BYTE PTR [rax],al
    d58f:	00 20                	add    BYTE PTR [rax],ah
    d591:	44                   	rex.R
    d592:	65 73 74             	gs jae d609 <_IO_stdin_used+0x609>
    d595:	69 6e 61 74 69 6f 6e 	imul   ebp,DWORD PTR [rsi+0x61],0x6e6f6974
    d59c:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    d59f:	74 77                	je     d618 <_IO_stdin_used+0x618>
    d5a1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d5a2:	72 6b                	jb     d60f <_IO_stdin_used+0x60f>
    d5a4:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    d5a7:	72 65                	jb     d60e <_IO_stdin_used+0x60e>
    d5a9:	61                   	(bad)  
    d5aa:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    d5ad:	62                   	(bad)  
    d5ae:	6c                   	ins    BYTE PTR es:[rdi],dx
    d5af:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    d5b2:	00 00                	add    BYTE PTR [rax],al
    d5b4:	00 00                	add    BYTE PTR [rax],al
    d5b6:	00 00                	add    BYTE PTR [rax],al
    d5b8:	20 44 65 73          	and    BYTE PTR [rbp+riz*2+0x73],al
    d5bc:	74 69                	je     d627 <_IO_stdin_used+0x627>
    d5be:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d5bf:	61                   	(bad)  
    d5c0:	74 69                	je     d62b <_IO_stdin_used+0x62b>
    d5c2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d5c3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d5c4:	20 48 6f             	and    BYTE PTR [rax+0x6f],cl
    d5c7:	73 74                	jae    d63d <_IO_stdin_used+0x63d>
    d5c9:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    d5cc:	72 65                	jb     d633 <_IO_stdin_used+0x633>
    d5ce:	61                   	(bad)  
    d5cf:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    d5d2:	62                   	(bad)  
    d5d3:	6c                   	ins    BYTE PTR es:[rdi],dx
    d5d4:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    d5d7:	00 20                	add    BYTE PTR [rax],ah
    d5d9:	53                   	push   rbx
    d5da:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d5db:	75 72                	jne    d64f <_IO_stdin_used+0x64f>
    d5dd:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    d5e0:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    d5e2:	73 74                	jae    d658 <_IO_stdin_used+0x658>
    d5e4:	20 49 73             	and    BYTE PTR [rcx+0x73],cl
    d5e7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d5e8:	6c                   	ins    BYTE PTR es:[rdi],dx
    d5e9:	61                   	(bad)  
    d5ea:	74 65                	je     d651 <_IO_stdin_used+0x651>
    d5ec:	64 20 29             	and    BYTE PTR fs:[rcx],ch
    d5ef:	00 20                	add    BYTE PTR [rax],ah
    d5f1:	4e                   	rex.WRX
    d5f2:	65 74 77             	gs je  d66c <_IO_stdin_used+0x66c>
    d5f5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d5f6:	72 6b                	jb     d663 <_IO_stdin_used+0x663>
    d5f8:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    d5fb:	6d                   	ins    DWORD PTR es:[rdi],dx
    d5fc:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    d603:	74 69                	je     d66e <_IO_stdin_used+0x66e>
    d605:	76 65                	jbe    d66c <_IO_stdin_used+0x66c>
    d607:	6c                   	ins    BYTE PTR es:[rdi],dx
    d608:	79 20                	jns    d62a <_IO_stdin_used+0x62a>
    d60a:	50                   	push   rax
    d60b:	72 6f                	jb     d67c <_IO_stdin_used+0x67c>
    d60d:	68 69 62 69 74       	push   0x74696269
    d612:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    d616:	00 00                	add    BYTE PTR [rax],al
    d618:	20 48 6f             	and    BYTE PTR [rax+0x6f],cl
    d61b:	73 74                	jae    d691 <_IO_stdin_used+0x691>
    d61d:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    d620:	6d                   	ins    DWORD PTR es:[rdi],dx
    d621:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    d628:	74 69                	je     d693 <_IO_stdin_used+0x693>
    d62a:	76 65                	jbe    d691 <_IO_stdin_used+0x691>
    d62c:	6c                   	ins    BYTE PTR es:[rdi],dx
    d62d:	79 20                	jns    d64f <_IO_stdin_used+0x64f>
    d62f:	50                   	push   rax
    d630:	72 6f                	jb     d6a1 <_IO_stdin_used+0x6a1>
    d632:	68 69 62 69 74       	push   0x74696269
    d637:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    d63b:	00 00                	add    BYTE PTR [rax],al
    d63d:	00 00                	add    BYTE PTR [rax],al
    d63f:	00 20                	add    BYTE PTR [rax],ah
    d641:	4e                   	rex.WRX
    d642:	65 74 77             	gs je  d6bc <_IO_stdin_used+0x6bc>
    d645:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d646:	72 6b                	jb     d6b3 <_IO_stdin_used+0x6b3>
    d648:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    d64b:	72 65                	jb     d6b2 <_IO_stdin_used+0x6b2>
    d64d:	61                   	(bad)  
    d64e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    d651:	62                   	(bad)  
    d652:	6c                   	ins    BYTE PTR es:[rdi],dx
    d653:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    d657:	72 20                	jb     d679 <_IO_stdin_used+0x679>
    d659:	54                   	push   rsp
    d65a:	4f 53                	rex.WRXB push r11
    d65c:	20 29                	and    BYTE PTR [rcx],ch
    d65e:	00 20                	add    BYTE PTR [rax],ah
    d660:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    d662:	73 74                	jae    d6d8 <_IO_stdin_used+0x6d8>
    d664:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    d667:	72 65                	jb     d6ce <_IO_stdin_used+0x6ce>
    d669:	61                   	(bad)  
    d66a:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    d66d:	62                   	(bad)  
    d66e:	6c                   	ins    BYTE PTR es:[rdi],dx
    d66f:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    d673:	72 20                	jb     d695 <_IO_stdin_used+0x695>
    d675:	54                   	push   rsp
    d676:	4f 53                	rex.WRXB push r11
    d678:	20 29                	and    BYTE PTR [rcx],ch
    d67a:	00 00                	add    BYTE PTR [rax],al
    d67c:	00 00                	add    BYTE PTR [rax],al
    d67e:	00 00                	add    BYTE PTR [rax],al
    d680:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    d683:	6d                   	ins    DWORD PTR es:[rdi],dx
    d684:	6d                   	ins    DWORD PTR es:[rdi],dx
    d685:	75 6e                	jne    d6f5 <_IO_stdin_used+0x6f5>
    d687:	69 63 61 74 69 6f 6e 	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
    d68e:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    d691:	6d                   	ins    DWORD PTR es:[rdi],dx
    d692:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    d699:	74 69                	je     d704 <_IO_stdin_used+0x704>
    d69b:	76 65                	jbe    d702 <_IO_stdin_used+0x702>
    d69d:	6c                   	ins    BYTE PTR es:[rdi],dx
    d69e:	79 20                	jns    d6c0 <_IO_stdin_used+0x6c0>
    d6a0:	50                   	push   rax
    d6a1:	72 6f                	jb     d712 <_IO_stdin_used+0x712>
    d6a3:	68 69 62 69 74       	push   0x74696269
    d6a8:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    d6ac:	00 20                	add    BYTE PTR [rax],ah
    d6ae:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    d6b0:	73 74                	jae    d726 <_IO_stdin_used+0x726>
    d6b2:	20 50 72             	and    BYTE PTR [rax+0x72],dl
    d6b5:	65 63 65 64          	movsxd esp,DWORD PTR gs:[rbp+0x64]
    d6b9:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d6bb:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    d6be:	56                   	push   rsi
    d6bf:	69 6f 6c 61 74 69 6f 	imul   ebp,DWORD PTR [rdi+0x6c],0x6f697461
    d6c6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d6c7:	20 29                	and    BYTE PTR [rcx],ch
    d6c9:	00 00                	add    BYTE PTR [rax],al
    d6cb:	00 00                	add    BYTE PTR [rax],al
    d6cd:	00 00                	add    BYTE PTR [rax],al
    d6cf:	00 20                	add    BYTE PTR [rax],ah
    d6d1:	50                   	push   rax
    d6d2:	72 65                	jb     d739 <_IO_stdin_used+0x739>
    d6d4:	63 65 64             	movsxd esp,DWORD PTR [rbp+0x64]
    d6d7:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d6d9:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    d6dc:	43 75 74             	rex.XB jne d753 <_IO_stdin_used+0x753>
    d6df:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d6e0:	66 66 20 69 6e       	data16 data16 and BYTE PTR [rcx+0x6e],ch
    d6e5:	20 45 66             	and    BYTE PTR [rbp+0x66],al
    d6e8:	66 65 63 74 20 29    	movsxd si,DWORD PTR gs:[rax+riz*1+0x29]
    d6ee:	00 20                	add    BYTE PTR [rax],ah
    d6f0:	55                   	push   rbp
    d6f1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d6f2:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    d6f6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d6f7:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    d6fa:	64 65 3d 25 64 20 29 	fs gs cmp eax,0x29206425
    d701:	0a 00                	or     al,BYTE PTR [rax]
    d703:	00 00                	add    BYTE PTR [rax],al
    d705:	00 00                	add    BYTE PTR [rax],al
    d707:	00 20                	add    BYTE PTR [rax],ah
    d709:	53                   	push   rbx
    d70a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d70b:	75 72                	jne    d77f <_IO_stdin_used+0x77f>
    d70d:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    d710:	51                   	push   rcx
    d711:	75 65                	jne    d778 <_IO_stdin_used+0x778>
    d713:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d714:	63 68 28             	movsxd ebp,DWORD PTR [rax+0x28]
    d717:	20 66 6c             	and    BYTE PTR [rsi+0x6c],ah
    d71a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d71b:	77 20                	ja     d73d <_IO_stdin_used+0x73d>
    d71d:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    d720:	74 72                	je     d794 <_IO_stdin_used+0x794>
    d722:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d723:	6c                   	ins    BYTE PTR es:[rdi],dx
    d724:	20 29                	and    BYTE PTR [rcx],ch
    d726:	00 20                	add    BYTE PTR [rax],ah
    d728:	52                   	push   rdx
    d729:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x28207463
    d730:	20 28 
    d732:	00 20                	add    BYTE PTR [rax],ah
    d734:	52                   	push   rdx
    d735:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    d73c:	20 66 
    d73e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d73f:	72 20                	jb     d761 <_IO_stdin_used+0x761>
    d741:	4e                   	rex.WRX
    d742:	65 74 77             	gs je  d7bc <_IO_stdin_used+0x7bc>
    d745:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d746:	72 6b                	jb     d7b3 <_IO_stdin_used+0x7b3>
    d748:	20 29                	and    BYTE PTR [rcx],ch
    d74a:	00 20                	add    BYTE PTR [rax],ah
    d74c:	52                   	push   rdx
    d74d:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    d754:	20 66 
    d756:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d757:	72 20                	jb     d779 <_IO_stdin_used+0x779>
    d759:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    d75b:	73 74                	jae    d7d1 <_IO_stdin_used+0x7d1>
    d75d:	20 29                	and    BYTE PTR [rcx],ch
    d75f:	00 20                	add    BYTE PTR [rax],ah
    d761:	52                   	push   rdx
    d762:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    d769:	20 66 
    d76b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d76c:	72 20                	jb     d78e <_IO_stdin_used+0x78e>
    d76e:	54                   	push   rsp
    d76f:	4f 53                	rex.WRXB push r11
    d771:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    d774:	64 20 4e 65          	and    BYTE PTR fs:[rsi+0x65],cl
    d778:	74 77                	je     d7f1 <_IO_stdin_used+0x7f1>
    d77a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d77b:	72 6b                	jb     d7e8 <_IO_stdin_used+0x7e8>
    d77d:	20 29                	and    BYTE PTR [rcx],ch
    d77f:	00 20                	add    BYTE PTR [rax],ah
    d781:	52                   	push   rdx
    d782:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    d789:	20 66 
    d78b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d78c:	72 20                	jb     d7ae <_IO_stdin_used+0x7ae>
    d78e:	54                   	push   rsp
    d78f:	4f 53                	rex.WRXB push r11
    d791:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    d794:	64 20 48 6f          	and    BYTE PTR fs:[rax+0x6f],cl
    d798:	73 74                	jae    d80e <_IO_stdin_used+0x80e>
    d79a:	20 29                	and    BYTE PTR [rcx],ch
    d79c:	00 20                	add    BYTE PTR [rax],ah
    d79e:	65 63 68 6f          	movsxd ebp,DWORD PTR gs:[rax+0x6f]
    d7a2:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d7a5:	71 75                	jno    d81c <_IO_stdin_used+0x81c>
    d7a7:	65 73 74             	gs jae d81e <_IO_stdin_used+0x81e>
    d7aa:	00 00                	add    BYTE PTR [rax],al
    d7ac:	00 00                	add    BYTE PTR [rax],al
    d7ae:	00 00                	add    BYTE PTR [rax],al
    d7b0:	20 4d 6f             	and    BYTE PTR [rbp+0x6f],cl
    d7b3:	62                   	(bad)  
    d7b4:	69 6c 65 20 49 50 20 	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x41205049
    d7bb:	41 
    d7bc:	64 76 65             	fs jbe d824 <_IO_stdin_used+0x824>
    d7bf:	72 74                	jb     d835 <_IO_stdin_used+0x835>
    d7c1:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    d7c8:	20 28                	and    BYTE PTR [rax],ch
    d7ca:	4e 6f                	rex.WRX outs dx,DWORD PTR ds:[rsi]
    d7cc:	72 6d                	jb     d83b <_IO_stdin_used+0x83b>
    d7ce:	61                   	(bad)  
    d7cf:	6c                   	ins    BYTE PTR es:[rdi],dx
    d7d0:	20 52 6f             	and    BYTE PTR [rdx+0x6f],dl
    d7d3:	75 74                	jne    d849 <_IO_stdin_used+0x849>
    d7d5:	65 72 20             	gs jb  d7f8 <_IO_stdin_used+0x7f8>
    d7d8:	41                   	rex.B
    d7d9:	64 76 65             	fs jbe d841 <_IO_stdin_used+0x841>
    d7dc:	72 74                	jb     d852 <_IO_stdin_used+0x852>
    d7de:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    d7e5:	20 29                	and    BYTE PTR [rcx],ch
    d7e7:	20 29                	and    BYTE PTR [rcx],ch
    d7e9:	0a 20                	or     ah,BYTE PTR [rax]
    d7eb:	00 00                	add    BYTE PTR [rax],al
    d7ed:	00 00                	add    BYTE PTR [rax],al
    d7ef:	00 20                	add    BYTE PTR [rax],ah
    d7f1:	52                   	push   rdx
    d7f2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d7f3:	75 74                	jne    d869 <_IO_stdin_used+0x869>
    d7f5:	65 72 20             	gs jb  d818 <_IO_stdin_used+0x818>
    d7f8:	41                   	rex.B
    d7f9:	64 76 65             	fs jbe d861 <_IO_stdin_used+0x861>
    d7fc:	72 74                	jb     d872 <_IO_stdin_used+0x872>
    d7fe:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    d805:	20 28                	and    BYTE PTR [rax],ch
    d807:	55                   	push   rbp
    d808:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d809:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    d80d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d80e:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    d811:	64 65 3a 20          	fs cmp ah,BYTE PTR gs:[rax]
    d815:	25 64 20 29 20       	and    eax,0x20292064
    d81a:	29 0a                	sub    DWORD PTR [rdx],ecx
    d81c:	00 20                	add    BYTE PTR [rax],ah
    d81e:	52                   	push   rdx
    d81f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d820:	75 74                	jne    d896 <_IO_stdin_used+0x896>
    d822:	65 72 20             	gs jb  d845 <_IO_stdin_used+0x845>
    d825:	53                   	push   rbx
    d826:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d827:	6c                   	ins    BYTE PTR es:[rdi],dx
    d828:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    d82f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d830:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d831:	20 29                	and    BYTE PTR [rcx],ch
    d833:	00 20                	add    BYTE PTR [rax],ah
    d835:	54                   	push   rsp
    d836:	69 6d 65 20 54 6f 20 	imul   ebp,DWORD PTR [rbp+0x65],0x206f5420
    d83d:	4c 69 76 65 20 65 78 	imul   r14,QWORD PTR [rsi+0x65],0x63786520
    d844:	63 
    d845:	65 65 64 65 64 00 20 	gs gs fs gs add BYTE PTR fs:[rax],ah
    d84c:	28 20                	sub    BYTE PTR [rax],ah
    d84e:	74 74                	je     d8c4 <_IO_stdin_used+0x8c4>
    d850:	6c                   	ins    BYTE PTR es:[rdi],dx
    d851:	20 65 78             	and    BYTE PTR [rbp+0x78],ah
    d854:	63 65 65             	movsxd esp,DWORD PTR [rbp+0x65]
    d857:	64 65 64 20 69 6e    	fs gs and BYTE PTR fs:[rcx+0x6e],ch
    d85d:	20 74 72 61          	and    BYTE PTR [rdx+rsi*2+0x61],dh
    d861:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d862:	73 69                	jae    d8cd <_IO_stdin_used+0x8cd>
    d864:	74 20                	je     d886 <_IO_stdin_used+0x886>
    d866:	29 00                	sub    DWORD PTR [rax],eax
    d868:	20 28                	and    BYTE PTR [rax],ch
    d86a:	20 46 72             	and    BYTE PTR [rsi+0x72],al
    d86d:	61                   	(bad)  
    d86e:	67 6d                	ins    DWORD PTR es:[edi],dx
    d870:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d872:	74 20                	je     d894 <_IO_stdin_used+0x894>
    d874:	52                   	push   rdx
    d875:	65 61                	gs (bad) 
    d877:	73 73                	jae    d8ec <_IO_stdin_used+0x8ec>
    d879:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    d87b:	62                   	(bad)  
    d87c:	6c                   	ins    BYTE PTR es:[rdi],dx
    d87d:	79 20                	jns    d89f <_IO_stdin_used+0x89f>
    d87f:	74 69                	je     d8ea <_IO_stdin_used+0x8ea>
    d881:	6d                   	ins    DWORD PTR es:[rdi],dx
    d882:	65 20 65 78          	and    BYTE PTR gs:[rbp+0x78],ah
    d886:	63 65 65             	movsxd esp,DWORD PTR [rbp+0x65]
    d889:	64 65 64 20 29       	fs gs and BYTE PTR fs:[rcx],ch
    d88e:	00 20                	add    BYTE PTR [rax],ah
    d890:	28 20                	sub    BYTE PTR [rax],ah
    d892:	55                   	push   rbp
    d893:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d894:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    d898:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d899:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    d89c:	64 65 3a 20          	fs cmp ah,BYTE PTR gs:[rax]
    d8a0:	25 64 29 0a 00       	and    eax,0xa2964
    d8a5:	20 74 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dh
    d8a9:	65 73 74             	gs jae d920 <_IO_stdin_used+0x920>
    d8ac:	61                   	(bad)  
    d8ad:	6d                   	ins    DWORD PTR es:[rdi],dx
    d8ae:	70 20                	jo     d8d0 <_IO_stdin_used+0x8d0>
    d8b0:	72 65                	jb     d917 <_IO_stdin_used+0x917>
    d8b2:	71 75                	jno    d929 <_IO_stdin_used+0x929>
    d8b4:	65 73 74             	gs jae d92b <_IO_stdin_used+0x92b>
    d8b7:	00 20                	add    BYTE PTR [rax],ah
    d8b9:	74 69                	je     d924 <_IO_stdin_used+0x924>
    d8bb:	6d                   	ins    DWORD PTR es:[rdi],dx
    d8bc:	65 73 74             	gs jae d933 <_IO_stdin_used+0x933>
    d8bf:	61                   	(bad)  
    d8c0:	6d                   	ins    DWORD PTR es:[rdi],dx
    d8c1:	70 20                	jo     d8e3 <_IO_stdin_used+0x8e3>
    d8c3:	72 65                	jb     d92a <_IO_stdin_used+0x92a>
    d8c5:	70 6c                	jo     d933 <_IO_stdin_used+0x933>
    d8c7:	79 00                	jns    d8c9 <_IO_stdin_used+0x8c9>
    d8c9:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    d8cc:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    d8d0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d8d1:	20 69 63             	and    BYTE PTR [rcx+0x63],ch
    d8d4:	6d                   	ins    DWORD PTR es:[rdi],dx
    d8d5:	70 20                	jo     d8f7 <_IO_stdin_used+0x8f7>
    d8d7:	74 79                	je     d952 <_IO_stdin_used+0x952>
    d8d9:	70 65                	jo     d940 <_IO_stdin_used+0x940>
    d8db:	3d 25 64 00 00       	cmp    eax,0x6425
    d8e0:	fc                   	cld    
    d8e1:	67 ff                	addr32 (bad) 
    d8e3:	ff 1f                	call   FWORD PTR [rdi]
    d8e5:	6b ff ff             	imul   edi,edi,0xffffffff
    d8e8:	1f                   	(bad)  
    d8e9:	6b ff ff             	imul   edi,edi,0xffffffff
    d8ec:	0d 68 ff ff 7a       	or     eax,0x7affff68
    d8f1:	69 ff ff 8b 69 ff    	imul   edi,edi,0xff698bff
    d8f7:	ff 1f                	call   FWORD PTR [rdi]
    d8f9:	6b ff ff             	imul   edi,edi,0xffffffff
    d8fc:	1f                   	(bad)  
    d8fd:	6b ff ff             	imul   edi,edi,0xffffffff
    d900:	28 6a ff             	sub    BYTE PTR [rdx-0x1],ch
    d903:	ff                   	(bad)  
    d904:	39 6a ff             	cmp    DWORD PTR [rdx-0x1],ebp
    d907:	ff 84 6a ff ff 95 6a 	inc    DWORD PTR [rdx+rbp*2+0x6a95ffff]
    d90e:	ff                   	(bad)  
    d90f:	ff 1f                	call   FWORD PTR [rdi]
    d911:	6b ff ff             	imul   edi,edi,0xffffffff
    d914:	03 6b ff             	add    ebp,DWORD PTR [rbx-0x1]
    d917:	ff 11                	call   QWORD PTR [rcx]
    d919:	6b ff ff             	imul   edi,edi,0xffffffff
    d91c:	1c 68                	sbb    al,0x68
    d91e:	ff                   	(bad)  
    d91f:	ff 2d 68 ff ff 3e    	jmp    FWORD PTR [rip+0x3effff68]        # 3f00d88d <_end+0x3eed1085>
    d925:	68 ff ff 4f 68       	push   0x684fffff
    d92a:	ff                   	(bad)  
    d92b:	ff 60 68             	jmp    QWORD PTR [rax+0x68]
    d92e:	ff                   	(bad)  
    d92f:	ff 71 68             	push   QWORD PTR [rcx+0x68]
    d932:	ff                   	(bad)  
    d933:	ff 82 68 ff ff 93    	inc    DWORD PTR [rdx-0x6c000098]
    d939:	68 ff ff a4 68       	push   0x68a4ffff
    d93e:	ff                   	(bad)  
    d93f:	ff b5 68 ff ff c3    	push   QWORD PTR [rbp-0x3c000098]
    d945:	68 ff ff d1 68       	push   0x68d1ffff
    d94a:	ff                   	(bad)  
    d94b:	ff                   	(bad)  
    d94c:	df 68 ff             	fild   QWORD PTR [rax-0x1]
    d94f:	ff                   	(bad)  
    d950:	ed                   	in     eax,dx
    d951:	68 ff ff fb 68       	push   0x68fbffff
    d956:	ff                   	(bad)  
    d957:	ff 09                	dec    DWORD PTR [rcx]
    d959:	69 ff ff 00 00 00    	imul   edi,edi,0xff
    d95f:	00 1b                	add    BYTE PTR [rbx],bl
    d961:	5b                   	pop    rbx
    d962:	33 32                	xor    esi,DWORD PTR [rdx]
    d964:	6d                   	ins    DWORD PTR es:[rdi],dx
    d965:	00 25 73 00 49 50    	add    BYTE PTR [rip+0x50490073],ah        # 5049d9de <_end+0x503611d6>
    d96b:	76 34                	jbe    d9a1 <_IO_stdin_used+0x9a1>
    d96d:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642613e6 <_end+0x64124bde>
    d973:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325f9b7 <_end+0x731231af>
    d979:	3a 25 64 0a 00 09    	cmp    ah,BYTE PTR [rip+0x9000a64]        # 900e3e3 <_end+0x8ed1bdb>
    d97f:	54                   	push   rsp
    d980:	43 50                	rex.XB push r8
    d982:	20 5b 00             	and    BYTE PTR [rbx+0x0],bl
    d985:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    d988:	33 6d 00             	xor    ebp,DWORD PTR [rbp+0x0]
    d98b:	25 73 20 41 43       	and    eax,0x43412073
    d990:	4b 20 00             	rex.WXB and BYTE PTR [r8],al
    d993:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    d996:	37                   	(bad)  
    d997:	6d                   	ins    DWORD PTR es:[rdi],dx
    d998:	00 25 73 20 46 49    	add    BYTE PTR [rip+0x49462073],ah        # 4946fa11 <_end+0x49333209>
    d99e:	4e 20 00             	rex.WRX and BYTE PTR [rax],r8b
    d9a1:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    d9a4:	34 6d                	xor    al,0x6d
    d9a6:	00 25 73 20 50 53    	add    BYTE PTR [rip+0x53502073],ah        # 5350fa1f <_end+0x533d3217>
    d9ac:	48 20 00             	rex.W and BYTE PTR [rax],al
    d9af:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    d9b2:	31 6d 00             	xor    DWORD PTR [rbp+0x0],ebp
    d9b5:	25 73 20 52 53       	and    eax,0x53522073
    d9ba:	54                   	push   rsp
    d9bb:	20 00                	and    BYTE PTR [rax],al
    d9bd:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    d9c0:	35 6d 00 25 73       	xor    eax,0x7325006d
    d9c5:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    d9c8:	4e 20 00             	rex.WRX and BYTE PTR [rax],r8b
    d9cb:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    d9ce:	36 6d                	ss ins DWORD PTR es:[rdi],dx
    d9d0:	00 25 73 20 55 52    	add    BYTE PTR [rip+0x52552073],ah        # 5255fa49 <_end+0x52423241>
    d9d6:	47 20 00             	rex.RXB and BYTE PTR [r8],r8b
    d9d9:	5d                   	pop    rbp
    d9da:	00 1b                	add    BYTE PTR [rbx],bl
    d9dc:	5b                   	pop    rbx
    d9dd:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    d9e0:	25 73 53 75 73       	and    eax,0x73755373
    d9e5:	70 69                	jo     da50 <_IO_stdin_used+0xa50>
    d9e7:	63 69 6f             	movsxd ebp,DWORD PTR [rcx+0x6f]
    d9ea:	75 73                	jne    da5f <_IO_stdin_used+0xa5f>
    d9ec:	20 54 43 50          	and    BYTE PTR [rbx+rax*2+0x50],dl
    d9f0:	20 50 61             	and    BYTE PTR [rax+0x61],dl
    d9f3:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d9f6:	74 20                	je     da18 <_IO_stdin_used+0xa18>
    d9f8:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d9fa:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    d9fd:	74 65                	je     da64 <_IO_stdin_used+0xa64>
    d9ff:	72 65                	jb     da66 <_IO_stdin_used+0xa66>
    da01:	64 3a 20             	cmp    ah,BYTE PTR fs:[rax]
    da04:	25 73 3a 25 64       	and    eax,0x64253a73
    da09:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fa4d <_end+0x73123245>
    da0f:	3a 25 64 2c 20 25    	cmp    ah,BYTE PTR [rip+0x25202c64]        # 25210679 <_end+0x250d3e71>
    da15:	64 20 66 6c          	and    BYTE PTR fs:[rsi+0x6c],ah
    da19:	61                   	(bad)  
    da1a:	67 73 25             	addr32 jae da42 <_IO_stdin_used+0xa42>
    da1d:	73 0a                	jae    da29 <_IO_stdin_used+0xa29>
    da1f:	00 1b                	add    BYTE PTR [rbx],bl
    da21:	5b                   	pop    rbx
    da22:	39 36                	cmp    DWORD PTR [rsi],esi
    da24:	6d                   	ins    DWORD PTR es:[rdi],dx
    da25:	00 25 73 00 49 50    	add    BYTE PTR [rip+0x50490073],ah        # 5049da9e <_end+0x50361296>
    da2b:	76 34                	jbe    da61 <_IO_stdin_used+0xa61>
    da2d:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642614a6 <_end+0x64124c9e>
    da33:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fa77 <_end+0x7312326f>
    da39:	3a 25 64 20 55 44    	cmp    ah,BYTE PTR [rip+0x44552064]        # 4455faa3 <_end+0x4442329b>
    da3f:	50                   	push   rax
    da40:	0a 00                	or     al,BYTE PTR [rax]
    da42:	1b 5b 30             	sbb    ebx,DWORD PTR [rbx+0x30]
    da45:	6d                   	ins    DWORD PTR es:[rdi],dx
    da46:	00 00                	add    BYTE PTR [rax],al
    da48:	49 50                	rex.WB push r8
    da4a:	76 34                	jbe    da80 <_IO_stdin_used+0xa80>
    da4c:	20 49 47             	and    BYTE PTR [rcx+0x47],cl
    da4f:	4d 50                	rex.WRB push r8
    da51:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2dfaca <_end+0x3e1a32c2>
    da57:	20 25 73 20 5b 00    	and    BYTE PTR [rip+0x5b2073],ah        # 5bfad0 <_end+0x4832c8>
    da5d:	20 4d 65             	and    BYTE PTR [rbp+0x65],cl
    da60:	6d                   	ins    DWORD PTR es:[rdi],dx
    da61:	62                   	(bad)  
    da62:	65 72 73             	gs jb  dad8 <_IO_stdin_used+0xad8>
    da65:	68 69 70 20 51       	push   0x51207069
    da6a:	75 65                	jne    dad1 <_IO_stdin_used+0xad1>
    da6c:	72 79                	jb     dae7 <_IO_stdin_used+0xae7>
    da6e:	20 5d 00             	and    BYTE PTR [rbp+0x0],bl
    da71:	00 00                	add    BYTE PTR [rax],al
    da73:	00 00                	add    BYTE PTR [rax],al
    da75:	00 00                	add    BYTE PTR [rax],al
    da77:	00 20                	add    BYTE PTR [rax],ah
    da79:	4d                   	rex.WRB
    da7a:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    da7c:	62                   	(bad)  
    da7d:	65 72 73             	gs jb  daf3 <_IO_stdin_used+0xaf3>
    da80:	68 69 70 20 52       	push   0x52207069
    da85:	65 70 6f             	gs jo  daf7 <_IO_stdin_used+0xaf7>
    da88:	72 74                	jb     dafe <_IO_stdin_used+0xafe>
    da8a:	20 2f                	and    BYTE PTR [rdi],ch
    da8c:	20 4a 6f             	and    BYTE PTR [rdx+0x6f],cl
    da8f:	69 6e 20 67 72 6f 75 	imul   ebp,DWORD PTR [rsi+0x20],0x756f7267
    da96:	70 20                	jo     dab8 <_IO_stdin_used+0xab8>
    da98:	25 73 20 66 6f       	and    eax,0x6f662073
    da9d:	72 20                	jb     dabf <_IO_stdin_used+0xabf>
    da9f:	61                   	(bad)  
    daa0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    daa1:	79 20                	jns    dac3 <_IO_stdin_used+0xac3>
    daa3:	73 6f                	jae    db14 <_IO_stdin_used+0xb14>
    daa5:	75 72                	jne    db19 <_IO_stdin_used+0xb19>
    daa7:	63 65 73             	movsxd esp,DWORD PTR [rbp+0x73]
    daaa:	20 5d 0a             	and    BYTE PTR [rbp+0xa],bl
    daad:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    dab0:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    dab4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dab5:	20 49 47             	and    BYTE PTR [rcx+0x47],cl
    dab8:	4d 50                	rex.WRB push r8
    daba:	20 54 79 70          	and    BYTE PTR [rcx+rdi*2+0x70],dl
    dabe:	65 3d 25 64 20 5d    	gs cmp eax,0x5d206425
    dac4:	0a 00                	or     al,BYTE PTR [rax]
    dac6:	25 64 2d 25 30       	and    eax,0x30252d64
    dacb:	32 64 2d 25          	xor    ah,BYTE PTR [rbp+rbp*1+0x25]
    dacf:	30 32                	xor    BYTE PTR [rdx],dh
    dad1:	64 20 25 30 32 64 3a 	and    BYTE PTR fs:[rip+0x3a643230],ah        # 3a650d08 <_end+0x3a514500>
    dad8:	25 30 32 64 3a       	and    eax,0x3a643230
    dadd:	25 30 32 64 00       	and    eax,0x643230
    dae2:	25 73 20 25 73       	and    eax,0x73252073
    dae7:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2dfb60 <_end+0x3e1a3358>
    daed:	20 25 73 0a 00 25    	and    BYTE PTR [rip+0x25000a73],ah        # 2500e566 <_end+0x24ed1d5e>
    daf3:	73 20                	jae    db15 <_IO_stdin_used+0xb15>
    daf5:	25 73 20 25 73       	and    eax,0x73252073
    dafa:	3a 25 64 20 2d 3e    	cmp    ah,BYTE PTR [rip+0x3e2d2064]        # 3e2dfb64 <_end+0x3e1a335c>
    db00:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64261579 <_end+0x64124d71>
    db06:	0a 00                	or     al,BYTE PTR [rax]
    db08:	25 73 00 61 00       	and    eax,0x610073
    db0d:	25 30 32 78 00       	and    eax,0x783230
    db12:	00 00                	add    BYTE PTR [rax],al
    db14:	00 00                	add    BYTE PTR [rax],al
    db16:	00 00                	add    BYTE PTR [rax],al
    db18:	72 00                	jb     db1a <_IO_stdin_used+0xb1a>
    db1a:	00 00                	add    BYTE PTR [rax],al
    db1c:	00 00                	add    BYTE PTR [rax],al
    db1e:	00 00                	add    BYTE PTR [rax],al
    db20:	45 72 72             	rex.RB jb db95 <_IO_stdin_used+0xb95>
    db23:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    db24:	72 20                	jb     db46 <_IO_stdin_used+0xb46>
    db26:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    db27:	70 65                	jo     db8e <_IO_stdin_used+0xb8e>
    db29:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db2a:	69 6e 67 20 63 6f 6e 	imul   ebp,DWORD PTR [rsi+0x67],0x6e6f6320
    db31:	66 69 67 75 72 61    	imul   sp,WORD PTR [rdi+0x75],0x6172
    db37:	74 69                	je     dba2 <_IO_stdin_used+0xba2>
    db39:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    db3a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db3b:	20 66 69             	and    BYTE PTR [rsi+0x69],ah
    db3e:	6c                   	ins    BYTE PTR es:[rdi],dx
    db3f:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    db42:	25 73 0a 00 0a       	and    eax,0xa000a73
    db47:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    db4a:	72 69                	jb     dbb5 <_IO_stdin_used+0xbb5>
    db4c:	63 74 5f 69          	movsxd esi,DWORD PTR [rdi+rbx*2+0x69]
    db50:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
    db53:	5f                   	pop    rdi
    db54:	74 69                	je     dbbf <_IO_stdin_used+0xbbf>
    db56:	6d                   	ins    DWORD PTR es:[rdi],dx
    db57:	65 73 74             	gs jae dbce <_IO_stdin_used+0xbce>
    db5a:	61                   	(bad)  
    db5b:	6d                   	ins    DWORD PTR es:[rdi],dx
    db5c:	70 5f                	jo     dbbd <_IO_stdin_used+0xbbd>
    db5e:	72 65                	jb     dbc5 <_IO_stdin_used+0xbc5>
    db60:	71 3d                	jno    db9f <_IO_stdin_used+0xb9f>
    db62:	00 59 45             	add    BYTE PTR [rcx+0x45],bl
    db65:	53                   	push   rbx
    db66:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    db69:	72 69                	jb     dbd4 <_IO_stdin_used+0xbd4>
    db6b:	63 74 5f 6e          	movsxd esi,DWORD PTR [rdi+rbx*2+0x6e]
    db6f:	6d                   	ins    DWORD PTR es:[rdi],dx
    db70:	61                   	(bad)  
    db71:	70 5f                	jo     dbd2 <_IO_stdin_used+0xbd2>
    db73:	68 6f 73 74 5f       	push   0x5f74736f
    db78:	61                   	(bad)  
    db79:	6c                   	ins    BYTE PTR es:[rdi],dx
    db7a:	69 76 65 5f 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x6568635f
    db81:	63 6b 3d             	movsxd ebp,DWORD PTR [rbx+0x3d]
    db84:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
    db87:	65 61                	gs (bad) 
    db89:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db8a:	5f                   	pop    rdi
    db8b:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    db8e:	61                   	(bad)  
    db8f:	79 5f                	jns    dbf0 <_IO_stdin_used+0xbf0>
    db91:	69 6e 5f 70 61 63 6b 	imul   ebp,DWORD PTR [rsi+0x5f],0x6b636170
    db98:	65 74 73             	gs je  dc0e <_IO_stdin_used+0xc0e>
    db9b:	3d 00 43 6c 65       	cmp    eax,0x656c4300
    dba0:	61                   	(bad)  
    dba1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dba2:	20 64 65 6c          	and    BYTE PTR [rbp+riz*2+0x6c],ah
    dba6:	61                   	(bad)  
    dba7:	79 20                	jns    dbc9 <_IO_stdin_used+0xbc9>
    dba9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dbaa:	65 65 64 73 20       	gs gs fs jae dbcf <_IO_stdin_used+0xbcf>
    dbaf:	61                   	(bad)  
    dbb0:	20 76 61             	and    BYTE PTR [rsi+0x61],dh
    dbb3:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbb4:	75 65                	jne    dc1b <_IO_stdin_used+0xc1b>
    dbb6:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
    dbb9:	65 61                	gs (bad) 
    dbbb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dbbc:	5f                   	pop    rdi
    dbbd:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    dbc0:	61                   	(bad)  
    dbc1:	79 5f                	jns    dc22 <_IO_stdin_used+0xc22>
    dbc3:	69 6e 5f 6d 73 65 63 	imul   ebp,DWORD PTR [rsi+0x5f],0x6365736d
    dbca:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dbcb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dbcc:	64 73 3d             	fs jae dc0c <_IO_stdin_used+0xc0c>
    dbcf:	00 75 73             	add    BYTE PTR [rbp+0x73],dh
    dbd2:	65 5f                	gs pop rdi
    dbd4:	73 71                	jae    dc47 <_IO_stdin_used+0xc47>
    dbd6:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbd7:	69 74 65 3d 00 73 71 	imul   esi,DWORD PTR [rbp+riz*2+0x3d],0x6c717300
    dbde:	6c 
    dbdf:	69 74 65 5f 64 61 74 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x61746164
    dbe6:	61 
    dbe7:	62 61                	(bad)  
    dbe9:	73 65                	jae    dc50 <_IO_stdin_used+0xc50>
    dbeb:	5f                   	pop    rdi
    dbec:	70 61                	jo     dc4f <_IO_stdin_used+0xc4f>
    dbee:	74 68                	je     dc58 <_IO_stdin_used+0xc58>
    dbf0:	3d 00 73 71 6c       	cmp    eax,0x6c717300
    dbf5:	69 74 65 5f 64 61 74 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x61746164
    dbfc:	61 
    dbfd:	62 61                	(bad)  
    dbff:	73 65                	jae    dc66 <_IO_stdin_used+0xc66>
    dc01:	5f                   	pop    rdi
    dc02:	70 61                	jo     dc65 <_IO_stdin_used+0xc65>
    dc04:	74 68                	je     dc6e <_IO_stdin_used+0xc6e>
    dc06:	3a 20                	cmp    ah,BYTE PTR [rax]
    dc08:	25 73 00 69 6e       	and    eax,0x6e690073
    dc0d:	5f                   	pop    rdi
    dc0e:	61                   	(bad)  
    dc0f:	64 61                	fs (bad) 
    dc11:	70 74                	jo     dc87 <_IO_stdin_used+0xc87>
    dc13:	65 72 3d             	gs jb  dc53 <_IO_stdin_used+0xc53>
    dc16:	00 00                	add    BYTE PTR [rax],al
    dc18:	72 75                	jb     dc8f <_IO_stdin_used+0xc8f>
    dc1a:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc1b:	65 5f                	gs pop rdi
    dc1d:	70 61                	jo     dc80 <_IO_stdin_used+0xc80>
    dc1f:	72 73                	jb     dc94 <_IO_stdin_used+0xc94>
    dc21:	65 72 2e             	gs jb  dc52 <_IO_stdin_used+0xc52>
    dc24:	63 3a                	movsxd edi,DWORD PTR [rdx]
    dc26:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    dc29:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc2a:	65 5f                	gs pop rdi
    dc2c:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc2d:	69 62 72 61 72 79 5f 	imul   esp,DWORD PTR [rdx+0x72],0x5f797261
    dc34:	70 61                	jo     dc97 <_IO_stdin_used+0xc97>
    dc36:	72 73                	jb     dcab <_IO_stdin_used+0xcab>
    dc38:	65 72 3a             	gs jb  dc75 <_IO_stdin_used+0xc75>
    dc3b:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    dc3e:	5f                   	pop    rdi
    dc3f:	61                   	(bad)  
    dc40:	64 61                	fs (bad) 
    dc42:	70 74                	jo     dcb8 <_IO_stdin_used+0xcb8>
    dc44:	65 72 3a             	gs jb  dc81 <_IO_stdin_used+0xc81>
    dc47:	20 25 73 00 6f 75    	and    BYTE PTR [rip+0x756f0073],ah        # 756fdcc0 <_end+0x755c14b8>
    dc4d:	74 5f                	je     dcae <_IO_stdin_used+0xcae>
    dc4f:	61                   	(bad)  
    dc50:	64 61                	fs (bad) 
    dc52:	70 74                	jo     dcc8 <_IO_stdin_used+0xcc8>
    dc54:	65 72 3d             	gs jb  dc94 <_IO_stdin_used+0xc94>
    dc57:	00 72 75             	add    BYTE PTR [rdx+0x75],dh
    dc5a:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc5b:	65 5f                	gs pop rdi
    dc5d:	70 61                	jo     dcc0 <_IO_stdin_used+0xcc0>
    dc5f:	72 73                	jb     dcd4 <_IO_stdin_used+0xcd4>
    dc61:	65 72 2e             	gs jb  dc92 <_IO_stdin_used+0xc92>
    dc64:	63 3a                	movsxd edi,DWORD PTR [rdx]
    dc66:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    dc69:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc6a:	65 5f                	gs pop rdi
    dc6c:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc6d:	69 62 72 61 72 79 5f 	imul   esp,DWORD PTR [rdx+0x72],0x5f797261
    dc74:	70 61                	jo     dcd7 <_IO_stdin_used+0xcd7>
    dc76:	72 73                	jb     dceb <_IO_stdin_used+0xceb>
    dc78:	65 72 3a             	gs jb  dcb5 <_IO_stdin_used+0xcb5>
    dc7b:	20 6f 75             	and    BYTE PTR [rdi+0x75],ch
    dc7e:	74 5f                	je     dcdf <_IO_stdin_used+0xcdf>
    dc80:	61                   	(bad)  
    dc81:	64 61                	fs (bad) 
    dc83:	70 74                	jo     dcf9 <_IO_stdin_used+0xcf9>
    dc85:	65 72 3a             	gs jb  dcc2 <_IO_stdin_used+0xcc2>
    dc88:	20 25 73 00 6d 6f    	and    BYTE PTR [rip+0x6f6d0073],ah        # 6f6ddd01 <_end+0x6f5a14f9>
    dc8e:	64 65 3d 00 6d 6f 64 	fs gs cmp eax,0x646f6d00
    dc95:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    dc98:	25 73 00 52 75       	and    eax,0x75520073
    dc9d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dc9e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dc9f:	69 6e 67 20 69 6e 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206e6920
    dca6:	00 32                	add    BYTE PTR [rdx],dh
    dca8:	00 49 50             	add    BYTE PTR [rcx+0x50],cl
    dcab:	53                   	push   rbx
    dcac:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    dcaf:	64 65 20 61 73       	fs and BYTE PTR gs:[rcx+0x73],ah
    dcb4:	20 70 65             	and    BYTE PTR [rax+0x65],dh
    dcb7:	72 20                	jb     dcd9 <_IO_stdin_used+0xcd9>
    dcb9:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    dcbc:	66 69 67 00 49 44    	imul   sp,WORD PTR [rdi+0x0],0x4449
    dcc2:	53                   	push   rbx
    dcc3:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    dcc6:	64 65 20 61 73       	fs and BYTE PTR gs:[rcx+0x73],ah
    dccb:	20 70 65             	and    BYTE PTR [rax+0x65],dh
    dcce:	72 20                	jb     dcf0 <_IO_stdin_used+0xcf0>
    dcd0:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    dcd3:	66 69 67 00 6c 6f    	imul   sp,WORD PTR [rdi+0x0],0x6f6c
    dcd9:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
    dcdc:	69 70 3d 00 6c 6f 63 	imul   esi,DWORD PTR [rax+0x3d],0x636f6c00
    dce3:	61                   	(bad)  
    dce4:	6c                   	ins    BYTE PTR es:[rdi],dx
    dce5:	5f                   	pop    rdi
    dce6:	69 70 20 61 73 20 70 	imul   esi,DWORD PTR [rax+0x20],0x70207361
    dced:	65 72 20             	gs jb  dd10 <_IO_stdin_used+0xd10>
    dcf0:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    dcf3:	66 69 67 3a 20 25    	imul   sp,WORD PTR [rdi+0x3a],0x2520
    dcf9:	73 00                	jae    dcfb <_IO_stdin_used+0xcfb>
    dcfb:	64 65 66 67 77 3d    	fs gs data16 addr32 ja dd3e <_IO_stdin_used+0xd3e>
    dd01:	00 75 73             	add    BYTE PTR [rbp+0x73],dh
    dd04:	65 5f                	gs pop rdi
    dd06:	73 70                	jae    dd78 <_IO_stdin_used+0xd78>
    dd08:	69 3d 00 56 49 47 49 	imul   edi,DWORD PTR [rip+0x47495600],0x53204c49        # 474a3312 <_end+0x47366b0a>
    dd0f:	4c 20 53 
    dd12:	50                   	push   rax
    dd13:	49 20 73 65          	rex.WB and BYTE PTR [r11+0x65],sil
    dd17:	72 76                	jb     dd8f <_IO_stdin_used+0xd8f>
    dd19:	69 63 65 20 61 63 74 	imul   esp,DWORD PTR [rbx+0x65],0x74636120
    dd20:	69 76 65 00 48 4f 4d 	imul   esi,DWORD PTR [rsi+0x65],0x4d4f4800
    dd27:	45 5f                	rex.RB pop r15
    dd29:	4e                   	rex.WRX
    dd2a:	45 54                	rex.RB push r12
    dd2c:	3d 00 48 4f 4d       	cmp    eax,0x4d4f4800
    dd31:	45 5f                	rex.RB pop r15
    dd33:	4e                   	rex.WRX
    dd34:	45 54                	rex.RB push r12
    dd36:	5f                   	pop    rdi
    dd37:	4d                   	rex.WRB
    dd38:	41 53                	push   r11
    dd3a:	4b 3d 00 6c 6f 63    	rex.WXB cmp rax,0x636f6c00
    dd40:	61                   	(bad)  
    dd41:	74 69                	je     ddac <_IO_stdin_used+0xdac>
    dd43:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd44:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dd45:	3d 00 65 78 74       	cmp    eax,0x74786500
    dd4a:	65 72 6e             	gs jb  ddbb <_IO_stdin_used+0xdbb>
    dd4d:	61                   	(bad)  
    dd4e:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd4f:	00 53 79             	add    BYTE PTR [rbx+0x79],dl
    dd52:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dd53:	74 61                	je     ddb6 <_IO_stdin_used+0xdb6>
    dd55:	78 20                	js     dd77 <_IO_stdin_used+0xd77>
    dd57:	65 72 72             	gs jb  ddcc <_IO_stdin_used+0xdcc>
    dd5a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd5b:	72 20                	jb     dd7d <_IO_stdin_used+0xd7d>
    dd5d:	61                   	(bad)  
    dd5e:	74 20                	je     dd80 <_IO_stdin_used+0xd80>
    dd60:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd61:	69 6e 65 20 25 64 3a 	imul   ebp,DWORD PTR [rsi+0x65],0x3a642520
    dd68:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # e7e1 <_IO_stdin_used+0x17e1>
    dd6e:	00 00                	add    BYTE PTR [rax],al
    dd70:	45 72 72             	rex.RB jb dde5 <_IO_stdin_used+0xde5>
    dd73:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd74:	72 20                	jb     dd96 <_IO_stdin_used+0xd96>
    dd76:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd77:	70 65                	jo     ddde <_IO_stdin_used+0xdde>
    dd79:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dd7a:	69 6e 67 20 72 75 6c 	imul   ebp,DWORD PTR [rsi+0x67],0x6c757220
    dd81:	65 20 66 69          	and    BYTE PTR gs:[rsi+0x69],ah
    dd85:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd86:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    dd89:	25 73 2e 20 52       	and    eax,0x52202e73
    dd8e:	65 66 75 73          	gs data16 jne de05 <_IO_stdin_used+0xe05>
    dd92:	69 6e 67 20 74 6f 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
    dd99:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    dd9c:	74 69                	je     de07 <_IO_stdin_used+0xe07>
    dd9e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dd9f:	75 65                	jne    de06 <_IO_stdin_used+0xe06>
    dda1:	0a 00                	or     al,BYTE PTR [rax]
    dda3:	50                   	push   rax
    dda4:	61                   	(bad)  
    dda5:	72 73                	jb     de1a <_IO_stdin_used+0xe1a>
    dda7:	69 6e 67 20 66 69 6c 	imul   ebp,DWORD PTR [rsi+0x67],0x6c696620
    ddae:	65 20 25 73 0a 00 61 	and    BYTE PTR gs:[rip+0x61000a73],ah        # 6100e828 <_end+0x60ed2020>
    ddb5:	6c                   	ins    BYTE PTR es:[rdi],dx
    ddb6:	65 72 74             	gs jb  de2d <_IO_stdin_used+0xe2d>
    ddb9:	00 46 69             	add    BYTE PTR [rsi+0x69],al
    ddbc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ddbd:	69 73 68 65 64 20 70 	imul   esi,DWORD PTR [rbx+0x68],0x70206465
    ddc4:	61                   	(bad)  
    ddc5:	72 73                	jb     de3a <_IO_stdin_used+0xe3a>
    ddc7:	69 6e 67 20 25 73 0a 	imul   ebp,DWORD PTR [rsi+0x67],0xa732520
    ddce:	00 00                	add    BYTE PTR [rax],al
    ddd0:	45 72 72             	rex.RB jb de45 <_IO_stdin_used+0xe45>
    ddd3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ddd4:	72 20                	jb     ddf6 <_IO_stdin_used+0xdf6>
    ddd6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ddd7:	70 65                	jo     de3e <_IO_stdin_used+0xe3e>
    ddd9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ddda:	69 6e 67 20 25 73 20 	imul   ebp,DWORD PTR [rsi+0x67],0x20732520
    dde1:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    dde3:	72 20                	jb     de05 <_IO_stdin_used+0xe05>
    dde5:	65 78 70             	gs js  de58 <_IO_stdin_used+0xe58>
    dde8:	6c                   	ins    BYTE PTR es:[rdi],dx
    dde9:	2f                   	(bad)  
    ddea:	69 6d 70 6c 69 63 69 	imul   ebp,DWORD PTR [rbp+0x70],0x6963696c
    ddf1:	74 20                	je     de13 <_IO_stdin_used+0xe13>
    ddf3:	64 65 6e             	fs outs dx,BYTE PTR gs:[rsi]
    ddf6:	79 20                	jns    de18 <_IO_stdin_used+0xe18>
    ddf8:	70 61                	jo     de5b <_IO_stdin_used+0xe5b>
    ddfa:	72 73                	jb     de6f <_IO_stdin_used+0xe6f>
    ddfc:	69 6e 67 0a 00 69 70 	imul   ebp,DWORD PTR [rsi+0x67],0x7069000a
    de03:	76 34                	jbe    de39 <_IO_stdin_used+0xe39>
    de05:	00 46 61             	add    BYTE PTR [rsi+0x61],al
    de08:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    de0f:	20 
    de10:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    de11:	70 65                	jo     de78 <_IO_stdin_used+0xe78>
    de13:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    de14:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # e88d <_IO_stdin_used+0x188d>
    de1a:	00 00                	add    BYTE PTR [rax],al
    de1c:	00 00                	add    BYTE PTR [rax],al
    de1e:	00 00                	add    BYTE PTR [rax],al
    de20:	52                   	push   rdx
    de21:	55                   	push   rbp
    de22:	4e                   	rex.WRX
    de23:	4e                   	rex.WRX
    de24:	49                   	rex.WB
    de25:	4e                   	rex.WRX
    de26:	47 20 49 4e          	rex.RXB and BYTE PTR [r9+0x4e],r9b
    de2a:	20 44 45 4d          	and    BYTE PTR [rbp+rax*2+0x4d],al
    de2e:	4f                   	rex.WRXB
    de2f:	4e 53                	rex.WRX push rbx
    de31:	54                   	push   rsp
    de32:	52                   	push   rdx
    de33:	41 54                	push   r12
    de35:	49                   	rex.WB
    de36:	4f                   	rex.WRXB
    de37:	4e 20 4d 4f          	rex.WRX and BYTE PTR [rbp+0x4f],r9b
    de3b:	44                   	rex.R
    de3c:	45                   	rex.RB
    de3d:	2e 20 59 4f          	cs and BYTE PTR [rcx+0x4f],bl
    de41:	55                   	push   rbp
    de42:	20 48 41             	and    BYTE PTR [rax+0x41],cl
    de45:	56                   	push   rsi
    de46:	45 20 31             	and    BYTE PTR [r9],r14b
    de49:	30 20                	xor    BYTE PTR [rax],ah
    de4b:	53                   	push   rbx
    de4c:	45                   	rex.RB
    de4d:	43                   	rex.XB
    de4e:	4f                   	rex.WRXB
    de4f:	4e                   	rex.WRX
    de50:	44 53                	rex.R push rbx
    de52:	20 54 4f 20          	and    BYTE PTR [rdi+rcx*2+0x20],dl
    de56:	41                   	rex.B
    de57:	42                   	rex.X
    de58:	4f 52                	rex.WRXB push r10
    de5a:	54                   	push   rsp
    de5b:	2e 00 00             	cs add BYTE PTR [rax],al
    de5e:	00 00                	add    BYTE PTR [rax],al
    de60:	52                   	push   rdx
    de61:	55                   	push   rbp
    de62:	4e                   	rex.WRX
    de63:	4e                   	rex.WRX
    de64:	49                   	rex.WB
    de65:	4e                   	rex.WRX
    de66:	47 20 49 4e          	rex.RXB and BYTE PTR [r9+0x4e],r9b
    de6a:	20 54 45 53          	and    BYTE PTR [rbp+rax*2+0x53],dl
    de6e:	54                   	push   rsp
    de6f:	20 4d 4f             	and    BYTE PTR [rbp+0x4f],cl
    de72:	44                   	rex.R
    de73:	45                   	rex.RB
    de74:	2e 20 59 4f          	cs and BYTE PTR [rcx+0x4f],bl
    de78:	55                   	push   rbp
    de79:	20 48 41             	and    BYTE PTR [rax+0x41],cl
    de7c:	56                   	push   rsi
    de7d:	45 20 31             	and    BYTE PTR [r9],r14b
    de80:	30 20                	xor    BYTE PTR [rax],ah
    de82:	53                   	push   rbx
    de83:	45                   	rex.RB
    de84:	43                   	rex.XB
    de85:	4f                   	rex.WRXB
    de86:	4e                   	rex.WRX
    de87:	44 53                	rex.R push rbx
    de89:	20 54 4f 20          	and    BYTE PTR [rdi+rcx*2+0x20],dl
    de8d:	41                   	rex.B
    de8e:	42                   	rex.X
    de8f:	4f 52                	rex.WRXB push r10
    de91:	54                   	push   rsp
    de92:	2e 00 55 6e          	cs add BYTE PTR [rbp+0x6e],dl
    de96:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    de9a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    de9b:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    de9e:	67 75 6d             	addr32 jne df0e <_IO_stdin_used+0xf0e>
    dea1:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    dea3:	74 20                	je     dec5 <_IO_stdin_used+0xec5>
    dea5:	2d 25 63 0a 00       	sub    eax,0xa6325
    deaa:	70 64                	jo     df10 <_IO_stdin_used+0xf10>
    deac:	71 68                	jno    df16 <_IO_stdin_used+0xf16>
    deae:	74 65                	je     df15 <_IO_stdin_used+0xf15>
    deb0:	69 3a 00 2f 65 74    	imul   edi,DWORD PTR [rdx],0x74652f00
    deb6:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    deb8:	76 69                	jbe    df23 <_IO_stdin_used+0xf23>
    deba:	67 69 6c 2f 64 65 6e 	imul   ebp,DWORD PTR [edi+ebp*1+0x64],0x2e796e65
    dec1:	79 2e 
    dec3:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    dec6:	66 00 46 69          	data16 add BYTE PTR [rsi+0x69],al
    deca:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    decb:	73 69                	jae    df36 <_IO_stdin_used+0xf36>
    decd:	73 68                	jae    df37 <_IO_stdin_used+0xf37>
    decf:	65 64 20 6c 6f 61    	gs and BYTE PTR fs:[rdi+rbp*2+0x61],ch
    ded5:	64 69 6e 67 20 65 78 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x70786520
    dedc:	70 
    dedd:	6c                   	ins    BYTE PTR es:[rdi],dx
    dede:	69 63 69 74 20 64 65 	imul   esp,DWORD PTR [rbx+0x69],0x65642074
    dee5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dee6:	79 20                	jns    df08 <_IO_stdin_used+0xf08>
    dee8:	66 69 6c 65 28 2f 65 	imul   bp,WORD PTR [rbp+riz*2+0x28],0x652f
    deef:	74 63                	je     df54 <_IO_stdin_used+0xf54>
    def1:	2f                   	(bad)  
    def2:	76 69                	jbe    df5d <_IO_stdin_used+0xf5d>
    def4:	67 69 6c 2f 64 65 6e 	imul   ebp,DWORD PTR [edi+ebp*1+0x64],0x2e796e65
    defb:	79 2e 
    defd:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    df00:	66 29 00             	sub    WORD PTR [rax],ax
    df03:	00 00                	add    BYTE PTR [rax],al
    df05:	00 00                	add    BYTE PTR [rax],al
    df07:	00 46 69             	add    BYTE PTR [rsi+0x69],al
    df0a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df0b:	69 73 68 65 64 20 6c 	imul   esi,DWORD PTR [rbx+0x68],0x6c206465
    df12:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    df13:	61                   	(bad)  
    df14:	64 69 6e 67 20 43 53 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x56534320
    df1b:	56 
    df1c:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    df1f:	70 20                	jo     df41 <_IO_stdin_used+0xf41>
    df21:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    df24:	68 65 00 00 46       	push   0x46000065
    df29:	61                   	(bad)  
    df2a:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    df31:	20 
    df32:	6c                   	ins    BYTE PTR es:[rdi],dx
    df33:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    df34:	61                   	(bad)  
    df35:	64 20 43 53          	and    BYTE PTR fs:[rbx+0x53],al
    df39:	56                   	push   rsi
    df3a:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    df3d:	70 20                	jo     df5f <_IO_stdin_used+0xf5f>
    df3f:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    df42:	68 65 28 6e 6f       	push   0x6f6e2865
    df47:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df48:	20 63 72             	and    BYTE PTR [rbx+0x72],ah
    df4b:	69 74 69 63 61 6c 20 	imul   esi,DWORD PTR [rcx+rbp*2+0x63],0x65206c61
    df52:	65 
    df53:	72 72                	jb     dfc7 <_IO_stdin_used+0xfc7>
    df55:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    df56:	72 29                	jb     df81 <_IO_stdin_used+0xf81>
    df58:	00 2f                	add    BYTE PTR [rdi],ch
    df5a:	65 74 63             	gs je  dfc0 <_IO_stdin_used+0xfc0>
    df5d:	2f                   	(bad)  
    df5e:	76 69                	jbe    dfc9 <_IO_stdin_used+0xfc9>
    df60:	67 69 6c 2f 76 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x76],0x6c696769
    df67:	69 6c 
    df69:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    df6d:	66 00 50 61          	data16 add BYTE PTR [rax+0x61],dl
    df71:	72 73                	jb     dfe6 <_IO_stdin_used+0xfe6>
    df73:	65 64 20 72 75       	gs and BYTE PTR fs:[rdx+0x75],dh
    df78:	6c                   	ins    BYTE PTR es:[rdi],dx
    df79:	65 20 66 69          	and    BYTE PTR gs:[rsi+0x69],ah
    df7d:	6c                   	ins    BYTE PTR es:[rdi],dx
    df7e:	65 73 00             	gs jae df81 <_IO_stdin_used+0xf81>
    df81:	00 00                	add    BYTE PTR [rax],al
    df83:	00 00                	add    BYTE PTR [rax],al
    df85:	00 00                	add    BYTE PTR [rax],al
    df87:	00 56 49             	add    BYTE PTR [rsi+0x49],dl
    df8a:	47                   	rex.RXB
    df8b:	49                   	rex.WB
    df8c:	4c 20 6c 69 73       	rex.WR and BYTE PTR [rcx+rbp*2+0x73],r13b
    df91:	74 65                	je     dff8 <_IO_stdin_used+0xff8>
    df93:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df94:	69 6e 67 20 6f 6e 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206e6f20
    df9b:	69 6e 74 65 72 66 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61667265
    dfa2:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    dfa5:	25 73 0a 00 70       	and    eax,0x70000a73
    dfaa:	63 61 70             	movsxd esp,DWORD PTR [rcx+0x70]
    dfad:	5f                   	pop    rdi
    dfae:	6d                   	ins    DWORD PTR es:[rdi],dx
    dfaf:	67 72 20             	addr32 jb dfd2 <_IO_stdin_used+0xfd2>
    dfb2:	69 6e 20 70 63 61 70 	imul   ebp,DWORD PTR [rsi+0x20],0x70616370
    dfb9:	5f                   	pop    rdi
    dfba:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dfbb:	70 65                	jo     e022 <_IO_stdin_used+0x1022>
    dfbd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dfbe:	5f                   	pop    rdi
    dfbf:	6c                   	ins    BYTE PTR es:[rdi],dx
    dfc0:	69 76 65 00 00 00 00 	imul   esi,DWORD PTR [rsi+0x65],0x0
    dfc7:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    dfca:	65 63 72 79          	movsxd esi,DWORD PTR gs:[rdx+0x79]
    dfce:	70 74                	jo     e044 <_IO_stdin_used+0x1044>
    dfd0:	65 64 20 4e 53       	gs and BYTE PTR fs:[rsi+0x53],cl
    dfd5:	48 20 63 6f          	rex.W and BYTE PTR [rbx+0x6f],spl
    dfd9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dfda:	66 69 67 20 73 65    	imul   sp,WORD PTR [rdi+0x20],0x6573
    dfe0:	72 76                	jb     e058 <_IO_stdin_used+0x1058>
    dfe2:	65 72 20             	gs jb  e005 <_IO_stdin_used+0x1005>
    dfe5:	73 74                	jae    e05b <_IO_stdin_used+0x105b>
    dfe7:	61                   	(bad)  
    dfe8:	72 74                	jb     e05e <_IO_stdin_used+0x105e>
    dfea:	65 64 3a 20          	gs cmp ah,BYTE PTR fs:[rax]
    dfee:	31 32                	xor    DWORD PTR [rdx],esi
    dff0:	37                   	(bad)  
    dff1:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
    dff4:	30 2e                	xor    BYTE PTR [rsi],ch
    dff6:	31 3a                	xor    DWORD PTR [rdx],edi
    dff8:	32 33                	xor    dh,BYTE PTR [rbx]
    dffa:	00 00                	add    BYTE PTR [rax],al
    dffc:	83 89 ff ff c0 89 ff 	or     DWORD PTR [rcx-0x763f0001],0xffffffff
    e003:	ff                   	(bad)  
    e004:	fe 89 ff ff fe 89    	dec    BYTE PTR [rcx-0x76010001]
    e00a:	ff                   	(bad)  
    e00b:	ff 8f 89 ff ff 9e    	dec    DWORD PTR [rdi-0x61000077]
    e011:	89 ff                	mov    edi,edi
    e013:	ff                   	(bad)  
    e014:	fe 89 ff ff fe 89    	dec    BYTE PTR [rcx-0x76010001]
    e01a:	ff                   	(bad)  
    e01b:	ff                   	(bad)  
    e01c:	fe 89 ff ff fe 89    	dec    BYTE PTR [rcx-0x76010001]
    e022:	ff                   	(bad)  
    e023:	ff                   	(bad)  
    e024:	fe 89 ff ff fe 89    	dec    BYTE PTR [rcx-0x76010001]
    e02a:	ff                   	(bad)  
    e02b:	ff ae 89 ff ff b7    	jmp    FWORD PTR [rsi-0x48000077]
    e031:	89 ff                	mov    edi,edi
    e033:	ff                   	(bad)  
    e034:	fe 89 ff ff fe 89    	dec    BYTE PTR [rcx-0x76010001]
    e03a:	ff                   	(bad)  
    e03b:	ff                   	(bad)  
    e03c:	df 89 ff ff 0a 43    	fisttp WORD PTR [rcx+0x430affff]
    e042:	61                   	(bad)  
    e043:	75 67                	jne    e0ac <_IO_stdin_used+0x10ac>
    e045:	68 74 20 73 69       	push   0x69732074
    e04a:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    e04c:	61                   	(bad)  
    e04d:	6c                   	ins    BYTE PTR es:[rdi],dx
    e04e:	20 25 64 20 61 74    	and    BYTE PTR [rip+0x74612064],ah        # 746200b8 <_end+0x744e38b0>
    e054:	20 25 73 2c 20 65    	and    BYTE PTR [rip+0x65202c73],ah        # 65210ccd <_end+0x650d44c5>
    e05a:	78 69                	js     e0c5 <_IO_stdin_used+0x10c5>
    e05c:	74 69                	je     e0c7 <_IO_stdin_used+0x10c7>
    e05e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e05f:	67 2e 2e 2e 0a 00    	cs cs cs or al,BYTE PTR [eax]
    e065:	00 54 6f 74          	add    BYTE PTR [rdi+rbp*2+0x74],dl
    e069:	61                   	(bad)  
    e06a:	6c                   	ins    BYTE PTR es:[rdi],dx
    e06b:	20 50 61             	and    BYTE PTR [rax+0x61],dl
    e06e:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    e071:	74 73                	je     e0e6 <_IO_stdin_used+0x10e6>
    e073:	20 43 61             	and    BYTE PTR [rbx+0x61],al
    e076:	75 67                	jne    e0df <_IO_stdin_used+0x10df>
    e078:	68 74 3a 20 25       	push   0x25203a74
    e07d:	64 0a 00             	or     al,BYTE PTR fs:[rax]
    e080:	53                   	push   rbx
    e081:	74 61                	je     e0e4 <_IO_stdin_used+0x10e4>
    e083:	74 69                	je     e0ee <_IO_stdin_used+0x10ee>
    e085:	73 74                	jae    e0fb <_IO_stdin_used+0x10fb>
    e087:	69 63 73 0a 49 70 20 	imul   esp,DWORD PTR [rbx+0x73],0x2070490a
    e08e:	61                   	(bad)  
    e08f:	64 64 72 65          	fs fs jb e0f8 <_IO_stdin_used+0x10f8>
    e093:	73 73                	jae    e108 <_IO_stdin_used+0x1108>
    e095:	20 20                	and    BYTE PTR [rax],ah
    e097:	20 20                	and    BYTE PTR [rax],ah
    e099:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    e09b:	75 6e                	jne    e10b <_IO_stdin_used+0x110b>
    e09d:	74 0a                	je     e0a9 <_IO_stdin_used+0x10a9>
    e09f:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    e0a4:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    e0a9:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    e0ae:	2d 2d 00 00 00       	sub    eax,0x2d
    e0b3:	00 00                	add    BYTE PTR [rax],al
    e0b5:	00 00                	add    BYTE PTR [rax],al
    e0b7:	00 25 73 0a 09 09    	add    BYTE PTR [rip+0x9090a73],ah        # 909eb30 <_end+0x8f62328>
    e0bd:	74 6f                	je     e12e <_IO_stdin_used+0x112e>
    e0bf:	74 61                	je     e122 <_IO_stdin_used+0x1122>
    e0c1:	6c                   	ins    BYTE PTR es:[rdi],dx
    e0c2:	20 70 61             	and    BYTE PTR [rax+0x61],dh
    e0c5:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    e0c8:	74 73                	je     e13d <_IO_stdin_used+0x113d>
    e0ca:	20 3d 20 25 64 0a    	and    BYTE PTR [rip+0xa642520],bh        # a6505f0 <_end+0xa513de8>
    e0d0:	09 09                	or     DWORD PTR [rcx],ecx
    e0d2:	74 6f                	je     e143 <_IO_stdin_used+0x1143>
    e0d4:	74 61                	je     e137 <_IO_stdin_used+0x1137>
    e0d6:	6c                   	ins    BYTE PTR es:[rdi],dx
    e0d7:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    e0da:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e0db:	74 20                	je     e0fd <_IO_stdin_used+0x10fd>
    e0dd:	3d 20 25 64 0a       	cmp    eax,0xa642520
    e0e2:	09 09                	or     DWORD PTR [rcx],ecx
    e0e4:	74 6f                	je     e155 <_IO_stdin_used+0x1155>
    e0e6:	74 61                	je     e149 <_IO_stdin_used+0x1149>
    e0e8:	6c                   	ins    BYTE PTR es:[rdi],dx
    e0e9:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    e0ec:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    e0ef:	3d 20 25 64 0a       	cmp    eax,0xa642520
    e0f4:	09 09                	or     DWORD PTR [rcx],ecx
    e0f6:	54                   	push   rsp
    e0f7:	43 50                	rex.XB push r8
    e0f9:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    e0fc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e0fd:	74 20                	je     e11f <_IO_stdin_used+0x111f>
    e0ff:	3d 20 25 64 0a       	cmp    eax,0xa642520
    e104:	09 09                	or     DWORD PTR [rcx],ecx
    e106:	54                   	push   rsp
    e107:	43 50                	rex.XB push r8
    e109:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    e10c:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    e10f:	3d 20 25 64 0a       	cmp    eax,0xa642520
    e114:	09 09                	or     DWORD PTR [rcx],ecx
    e116:	55                   	push   rbp
    e117:	44 50                	rex.R push rax
    e119:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    e11c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e11d:	74 20                	je     e13f <_IO_stdin_used+0x113f>
    e11f:	3d 20 25 64 0a       	cmp    eax,0xa642520
    e124:	09 09                	or     DWORD PTR [rcx],ecx
    e126:	55                   	push   rbp
    e127:	44 50                	rex.R push rax
    e129:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    e12c:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    e12f:	3d 20 25 64 0a       	cmp    eax,0xa642520
    e134:	09 09                	or     DWORD PTR [rcx],ecx
    e136:	49                   	rex.WB
    e137:	43                   	rex.XB
    e138:	4d 50                	rex.WRB push r8
    e13a:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    e13d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e13e:	74 20                	je     e160 <_IO_stdin_used+0x1160>
    e140:	3d 20 25 64 0a       	cmp    eax,0xa642520
    e145:	09 09                	or     DWORD PTR [rcx],ecx
    e147:	49                   	rex.WB
    e148:	43                   	rex.XB
    e149:	4d 50                	rex.WRB push r8
    e14b:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    e14e:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    e151:	3d 20 25 64 0a       	cmp    eax,0xa642520
    e156:	0a 00                	or     al,BYTE PTR [rax]
    e158:	77 00                	ja     e15a <_IO_stdin_used+0x115a>
    e15a:	2f                   	(bad)  
    e15b:	75 73                	jne    e1d0 <_IO_stdin_used+0x11d0>
    e15d:	72 2f                	jb     e18e <_IO_stdin_used+0x118e>
    e15f:	73 68                	jae    e1c9 <_IO_stdin_used+0x11c9>
    e161:	61                   	(bad)  
    e162:	72 65                	jb     e1c9 <_IO_stdin_used+0x11c9>
    e164:	2f                   	(bad)  
    e165:	76 69                	jbe    e1d0 <_IO_stdin_used+0x11d0>
    e167:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    e16e:	63 61 
    e170:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    e173:	2e 63 73 76          	cs movsxd esi,DWORD PTR [rbx+0x76]
    e177:	00 43 61             	add    BYTE PTR [rbx+0x61],al
    e17a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e17b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e17c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e17d:	74 20                	je     e19f <_IO_stdin_used+0x119f>
    e17f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e180:	70 65                	jo     e1e7 <_IO_stdin_used+0x11e7>
    e182:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e183:	20 2f                	and    BYTE PTR [rdi],ch
    e185:	75 73                	jne    e1fa <_IO_stdin_used+0x11fa>
    e187:	72 2f                	jb     e1b8 <_IO_stdin_used+0x11b8>
    e189:	73 68                	jae    e1f3 <_IO_stdin_used+0x11f3>
    e18b:	61                   	(bad)  
    e18c:	72 65                	jb     e1f3 <_IO_stdin_used+0x11f3>
    e18e:	2f                   	(bad)  
    e18f:	76 69                	jbe    e1fa <_IO_stdin_used+0x11fa>
    e191:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    e198:	63 61 
    e19a:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    e19d:	2e 63 73 76          	cs movsxd esi,DWORD PTR [rbx+0x76]
    e1a1:	3a 20                	cmp    ah,BYTE PTR [rax]
    e1a3:	70 72                	jo     e217 <_IO_stdin_used+0x1217>
    e1a5:	69 6e 74 69 6e 67 20 	imul   ebp,DWORD PTR [rsi+0x74],0x20676e69
    e1ac:	61                   	(bad)  
    e1ad:	72 70                	jb     e21f <_IO_stdin_used+0x121f>
    e1af:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    e1b2:	68 65 20 74 6f       	push   0x6f742065
    e1b7:	20 73 63             	and    BYTE PTR [rbx+0x63],dh
    e1ba:	72 65                	jb     e221 <_IO_stdin_used+0x1221>
    e1bc:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    e1be:	00 25 73 20 2d 3e    	add    BYTE PTR [rip+0x3e2d2073],ah        # 3e2e0237 <_end+0x3e1a3a2f>
    e1c4:	20 25 73 0a 00 25    	and    BYTE PTR [rip+0x25000a73],ah        # 2500ec3d <_end+0x24ed2435>
    e1ca:	73 2c                	jae    e1f8 <_IO_stdin_used+0x11f8>
    e1cc:	25 73 0a 00 31       	and    eax,0x31000a73
    e1d1:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
    e1d4:	30 00                	xor    BYTE PTR [rax],al
    e1d6:	00 00                	add    BYTE PTR [rax],al
    e1d8:	56                   	push   rsi
    e1d9:	49                   	rex.WB
    e1da:	47                   	rex.RXB
    e1db:	49                   	rex.WB
    e1dc:	4c 20 55 54          	rex.WR and BYTE PTR [rbp+0x54],r10b
    e1e0:	4d 20 25 73 0a 09 2d 	rex.WRB and BYTE PTR [rip+0x2d090a73],r12b        # 2d09ec5a <_end+0x2cf62452>
    e1e7:	64 3a 20             	cmp    ah,BYTE PTR fs:[rax]
    e1ea:	64 65 62             	fs gs (bad) 
    e1ed:	75 67                	jne    e256 <_IO_stdin_used+0x1256>
    e1ef:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    e1f2:	64 65 0a 09          	fs or  cl,BYTE PTR gs:[rcx]
    e1f6:	2d 68 3a 20 64       	sub    eax,0x64203a68
    e1fb:	69 73 70 6c 61 79 20 	imul   esi,DWORD PTR [rbx+0x70],0x2079616c
    e202:	74 68                	je     e26c <_IO_stdin_used+0x126c>
    e204:	69 73 20 6d 65 73 73 	imul   esi,DWORD PTR [rbx+0x20],0x7373656d
    e20b:	61                   	(bad)  
    e20c:	67 65 0a 09          	or     cl,BYTE PTR gs:[ecx]
    e210:	2d 69 20 3c 69       	sub    eax,0x693c2069
    e215:	66 61                	data16 (bad) 
    e217:	63 65 3e             	movsxd esp,DWORD PTR [rbp+0x3e]
    e21a:	3a 20                	cmp    ah,BYTE PTR [rax]
    e21c:	73 65                	jae    e283 <_IO_stdin_used+0x1283>
    e21e:	74 20                	je     e240 <_IO_stdin_used+0x1240>
    e220:	74 68                	je     e28a <_IO_stdin_used+0x128a>
    e222:	65 20 69 6e          	and    BYTE PTR gs:[rcx+0x6e],ch
    e226:	74 65                	je     e28d <_IO_stdin_used+0x128d>
    e228:	72 66                	jb     e290 <_IO_stdin_used+0x1290>
    e22a:	61                   	(bad)  
    e22b:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    e22e:	74 6f                	je     e29f <_IO_stdin_used+0x129f>
    e230:	20 6c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],ch
    e234:	74 65                	je     e29b <_IO_stdin_used+0x129b>
    e236:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e237:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    e23a:	0a 09                	or     cl,BYTE PTR [rcx]
    e23c:	2d 70 20 70 72       	sub    eax,0x72702070
    e241:	69 6e 74 20 70 61 63 	imul   ebp,DWORD PTR [rsi+0x74],0x63617020
    e248:	6b 65 74 73          	imul   esp,DWORD PTR [rbp+0x74],0x73
    e24c:	0a 09                	or     cl,BYTE PTR [rcx]
    e24e:	2d 71 20 65 78       	sub    eax,0x78652071
    e253:	69 74 20 71 75 69 65 	imul   esi,DWORD PTR [rax+riz*1+0x71],0x74656975
    e25a:	74 
    e25b:	6c                   	ins    BYTE PTR es:[rdi],dx
    e25c:	79 0a                	jns    e268 <_IO_stdin_used+0x1268>
    e25e:	00 72 62             	add    BYTE PTR [rdx+0x62],dh
    e261:	00 2f                	add    BYTE PTR [rdi],ch
    e263:	70 72                	jo     e2d7 <_IO_stdin_used+0x12d7>
    e265:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e266:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    e268:	63 70 75             	movsxd esi,DWORD PTR [rax+0x75]
    e26b:	69 6e 66 6f 00 6d 6f 	imul   ebp,DWORD PTR [rsi+0x66],0x6f6d006f
    e272:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    e275:	20 6e 61             	and    BYTE PTR [rsi+0x61],ch
    e278:	6d                   	ins    DWORD PTR es:[rdi],dx
    e279:	65 00 46 6f          	add    BYTE PTR gs:[rsi+0x6f],al
    e27d:	75 6e                	jne    e2ed <_IO_stdin_used+0x12ed>
    e27f:	64 20 25 64 20 63 70 	and    BYTE PTR fs:[rip+0x70632064],ah        # 706402ea <_end+0x70503ae2>
    e286:	75 73                	jne    e2fb <_IO_stdin_used+0x12fb>
    e288:	3a 0a                	cmp    cl,BYTE PTR [rdx]
    e28a:	25 73 00 00 00       	and    eax,0x73
    e28f:	00 e2                	add    dl,ah
    e291:	96                   	xchg   esi,eax
    e292:	88 e2                	mov    dl,ah
    e294:	96                   	xchg   esi,eax
    e295:	88 e2                	mov    dl,ah
    e297:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    e29e:	88 e2                	mov    dl,ah
    e2a0:	96                   	xchg   esi,eax
    e2a1:	88 e2                	mov    dl,ah
    e2a3:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    e2aa:	88 e2                	mov    dl,ah
    e2ac:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    e2b3:	96                   	xchg   esi,eax
    e2b4:	88 e2                	mov    dl,ah
    e2b6:	96                   	xchg   esi,eax
    e2b7:	88 e2                	mov    dl,ah
    e2b9:	96                   	xchg   esi,eax
    e2ba:	88 e2                	mov    dl,ah
    e2bc:	96                   	xchg   esi,eax
    e2bd:	88 e2                	mov    dl,ah
    e2bf:	96                   	xchg   esi,eax
    e2c0:	88 e2                	mov    dl,ah
    e2c2:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    e2c9:	96                   	xchg   esi,eax
    e2ca:	88 e2                	mov    dl,ah
    e2cc:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    e2d3:	88 0a                	mov    BYTE PTR [rdx],cl
    e2d5:	e2 96                	loop   e26d <_IO_stdin_used+0x126d>
    e2d7:	88 e2                	mov    dl,ah
    e2d9:	96                   	xchg   esi,eax
    e2da:	88 e2                	mov    dl,ah
    e2dc:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    e2e3:	88 e2                	mov    dl,ah
    e2e5:	96                   	xchg   esi,eax
    e2e6:	88 e2                	mov    dl,ah
    e2e8:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    e2ef:	88 e2                	mov    dl,ah
    e2f1:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    e2f8:	88 e2                	mov    dl,ah
    e2fa:	80 81 e2 80 81 e2 80 	add    BYTE PTR [rcx-0x1d7e7f1e],0x80
    e301:	81 e2 80 81 e2 80    	and    edx,0x80e28180
    e307:	81 e2 80 81 20 e2    	and    edx,0xe2208180
    e30d:	96                   	xchg   esi,eax
    e30e:	88 e2                	mov    dl,ah
    e310:	96                   	xchg   esi,eax
    e311:	88 e2                	mov    dl,ah
    e313:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    e31a:	88 0a                	mov    BYTE PTR [rdx],cl
    e31c:	e2 96                	loop   e2b4 <_IO_stdin_used+0x12b4>
    e31e:	88 e2                	mov    dl,ah
    e320:	96                   	xchg   esi,eax
    e321:	88 e2                	mov    dl,ah
    e323:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    e32a:	88 e2                	mov    dl,ah
    e32c:	96                   	xchg   esi,eax
    e32d:	88 e2                	mov    dl,ah
    e32f:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    e336:	88 e2                	mov    dl,ah
    e338:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    e33f:	88 e2                	mov    dl,ah
    e341:	80 81 20 20 e2 96 88 	add    BYTE PTR [rcx-0x691ddfe0],0x88
    e348:	e2 96                	loop   e2e0 <_IO_stdin_used+0x12e0>
    e34a:	88 e2                	mov    dl,ah
    e34c:	96                   	xchg   esi,eax
    e34d:	88 e2                	mov    dl,ah
    e34f:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    e356:	88 e2                	mov    dl,ah
    e358:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    e35f:	88 0a                	mov    BYTE PTR [rdx],cl
    e361:	e2 80                	loop   e2e3 <_IO_stdin_used+0x12e3>
    e363:	81 e2 96 88 e2 96    	and    edx,0x96e28896
    e369:	88 e2                	mov    dl,ah
    e36b:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    e372:	96                   	xchg   esi,eax
    e373:	88 e2                	mov    dl,ah
    e375:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    e37c:	88 e2                	mov    dl,ah
    e37e:	96                   	xchg   esi,eax
    e37f:	88 e2                	mov    dl,ah
    e381:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    e388:	88 e2                	mov    dl,ah
    e38a:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    e391:	88 e2                	mov    dl,ah
    e393:	96                   	xchg   esi,eax
    e394:	88 e2                	mov    dl,ah
    e396:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    e39d:	88 e2                	mov    dl,ah
    e39f:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    e3a6:	88 0a                	mov    BYTE PTR [rdx],cl
    e3a8:	20 e2                	and    dl,ah
    e3aa:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    e3b1:	88 e2                	mov    dl,ah
    e3b3:	96                   	xchg   esi,eax
    e3b4:	88 e2                	mov    dl,ah
    e3b6:	96                   	xchg   esi,eax
    e3b7:	88 e2                	mov    dl,ah
    e3b9:	80 81 e2 80 81 20 e2 	add    BYTE PTR [rcx+0x208180e2],0xe2
    e3c0:	96                   	xchg   esi,eax
    e3c1:	88 e2                	mov    dl,ah
    e3c3:	96                   	xchg   esi,eax
    e3c4:	88 e2                	mov    dl,ah
    e3c6:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    e3cd:	88 e2                	mov    dl,ah
    e3cf:	96                   	xchg   esi,eax
    e3d0:	88 e2                	mov    dl,ah
    e3d2:	96                   	xchg   esi,eax
    e3d3:	88 e2                	mov    dl,ah
    e3d5:	96                   	xchg   esi,eax
    e3d6:	88 e2                	mov    dl,ah
    e3d8:	96                   	xchg   esi,eax
    e3d9:	88 e2                	mov    dl,ah
    e3db:	96                   	xchg   esi,eax
    e3dc:	88 e2                	mov    dl,ah
    e3de:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    e3e5:	88 e2                	mov    dl,ah
    e3e7:	96                   	xchg   esi,eax
    e3e8:	88 e2                	mov    dl,ah
    e3ea:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    e3f1:	88 e2                	mov    dl,ah
    e3f3:	96                   	xchg   esi,eax
    e3f4:	88 e2                	mov    dl,ah
    e3f6:	96                   	xchg   esi,eax
    e3f7:	88 e2                	mov    dl,ah
    e3f9:	96                   	xchg   esi,eax
    e3fa:	88 e2                	mov    dl,ah
    e3fc:	96                   	xchg   esi,eax
    e3fd:	88 e2                	mov    dl,ah
    e3ff:	96                   	xchg   esi,eax
    e400:	88 00                	mov    BYTE PTR [rax],al
    e402:	00 00                	add    BYTE PTR [rax],al
    e404:	00 00                	add    BYTE PTR [rax],al
    e406:	00 00                	add    BYTE PTR [rax],al
    e408:	0a 00                	or     al,BYTE PTR [rax]
    e40a:	0d 00 00 00 00       	or     eax,0x0
    e40f:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    e412:	68 5f 73 65 72       	push   0x7265735f
    e417:	76 65                	jbe    e47e <_IO_stdin_used+0x147e>
    e419:	72 2e                	jb     e449 <_IO_stdin_used+0x1449>
    e41b:	63 3a                	movsxd edi,DWORD PTR [rdx]
    e41d:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    e420:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    e427:	20 
    e428:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
    e42b:	61                   	(bad)  
    e42c:	74 65                	je     e493 <_IO_stdin_used+0x1493>
    e42e:	20 73 6f             	and    BYTE PTR [rbx+0x6f],dh
    e431:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    e434:	74 00                	je     e436 <_IO_stdin_used+0x1436>
    e436:	00 00                	add    BYTE PTR [rax],al
    e438:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e439:	73 68                	jae    e4a3 <_IO_stdin_used+0x14a3>
    e43b:	5f                   	pop    rdi
    e43c:	73 65                	jae    e4a3 <_IO_stdin_used+0x14a3>
    e43e:	72 76                	jb     e4b6 <_IO_stdin_used+0x14b6>
    e440:	65 72 2e             	gs jb  e471 <_IO_stdin_used+0x1471>
    e443:	63 3a                	movsxd edi,DWORD PTR [rdx]
    e445:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    e448:	69 6c 75 72 65 20 69 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6e692065
    e44f:	6e 
    e450:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    e453:	74 73                	je     e4c8 <_IO_stdin_used+0x14c8>
    e455:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e456:	63 6b 6f             	movsxd ebp,DWORD PTR [rbx+0x6f]
    e459:	70 74                	jo     e4cf <_IO_stdin_used+0x14cf>
    e45b:	00 00                	add    BYTE PTR [rax],al
    e45d:	00 00                	add    BYTE PTR [rax],al
    e45f:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    e462:	68 5f 73 65 72       	push   0x7265735f
    e467:	76 65                	jbe    e4ce <_IO_stdin_used+0x14ce>
    e469:	72 2e                	jb     e499 <_IO_stdin_used+0x1499>
    e46b:	63 3a                	movsxd edi,DWORD PTR [rdx]
    e46d:	20 62 69             	and    BYTE PTR [rdx+0x69],ah
    e470:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e471:	64 69 6e 67 20 6f 66 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x20666f20
    e478:	20 
    e479:	73 6f                	jae    e4ea <_IO_stdin_used+0x14ea>
    e47b:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    e47e:	74 20                	je     e4a0 <_IO_stdin_used+0x14a0>
    e480:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    e482:	72 20                	jb     e4a4 <_IO_stdin_used+0x14a4>
    e484:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e485:	73 68                	jae    e4ef <_IO_stdin_used+0x14ef>
    e487:	5f                   	pop    rdi
    e488:	66 64 20 66 61       	data16 and BYTE PTR fs:[rsi+0x61],ah
    e48d:	69 6c 65 64 00 00 00 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
    e494:	00 
    e495:	00 00                	add    BYTE PTR [rax],al
    e497:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    e49a:	68 5f 73 65 72       	push   0x7265735f
    e49f:	76 65                	jbe    e506 <_IO_stdin_used+0x1506>
    e4a1:	72 2e                	jb     e4d1 <_IO_stdin_used+0x14d1>
    e4a3:	63 3a                	movsxd edi,DWORD PTR [rdx]
    e4a5:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    e4a8:	69 6c 75 72 65 20 6f 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6e6f2065
    e4af:	6e 
    e4b0:	20 6c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],ch
    e4b4:	74 65                	je     e51b <_IO_stdin_used+0x151b>
    e4b6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e4b7:	69 6e 67 20 66 6f 72 	imul   ebp,DWORD PTR [rsi+0x67],0x726f6620
    e4be:	20 6e 73             	and    BYTE PTR [rsi+0x73],ch
    e4c1:	68 5f 66 64 00       	push   0x64665f
    e4c6:	00 00                	add    BYTE PTR [rax],al
    e4c8:	46 61                	rex.RX (bad) 
    e4ca:	69 6c 75 72 65 20 74 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f742065
    e4d1:	6f 
    e4d2:	20 61 63             	and    BYTE PTR [rcx+0x63],ah
    e4d5:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    e4d8:	74 20                	je     e4fa <_IO_stdin_used+0x14fa>
    e4da:	61                   	(bad)  
    e4db:	20 63 6c             	and    BYTE PTR [rbx+0x6c],ah
    e4de:	69 65 6e 74 20 61 74 	imul   esp,DWORD PTR [rbp+0x6e],0x74612074
    e4e5:	20 25 73 0a 00 3a    	and    BYTE PTR [rip+0x3a000a73],ah        # 3a00ef5e <_end+0x39ed2756>
    e4eb:	00 56 49             	add    BYTE PTR [rsi+0x49],dl
    e4ee:	47                   	rex.RXB
    e4ef:	49                   	rex.WB
    e4f0:	4c 20 4c 6f 67       	rex.WR and BYTE PTR [rdi+rbp*2+0x67],r9b
    e4f5:	69 6e 20 53 68 65 6c 	imul   ebp,DWORD PTR [rsi+0x20],0x6c656853
    e4fc:	6c                   	ins    BYTE PTR es:[rdi],dx
    e4fd:	0d 0a 00 55 73       	or     eax,0x7355000a
    e502:	65 72 6e             	gs jb  e573 <_IO_stdin_used+0x1573>
    e505:	61                   	(bad)  
    e506:	6d                   	ins    DWORD PTR es:[rdi],dx
    e507:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    e50a:	00 50 61             	add    BYTE PTR [rax+0x61],dl
    e50d:	73 73                	jae    e582 <_IO_stdin_used+0x1582>
    e50f:	77 6f                	ja     e580 <_IO_stdin_used+0x1580>
    e511:	72 64                	jb     e577 <_IO_stdin_used+0x1577>
    e513:	3a 20                	cmp    ah,BYTE PTR [rax]
    e515:	00 72 00             	add    BYTE PTR [rdx+0x0],dh
    e518:	2f                   	(bad)  
    e519:	65 74 63             	gs je  e57f <_IO_stdin_used+0x157f>
    e51c:	2f                   	(bad)  
    e51d:	76 69                	jbe    e588 <_IO_stdin_used+0x1588>
    e51f:	67 69 6c 2f 70 61 73 	imul   ebp,DWORD PTR [edi+ebp*1+0x70],0x77737361
    e526:	73 77 
    e528:	64 00 46 61          	add    BYTE PTR fs:[rsi+0x61],al
    e52c:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    e533:	20 
    e534:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e535:	70 65                	jo     e59c <_IO_stdin_used+0x159c>
    e537:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e538:	20 70 61             	and    BYTE PTR [rax+0x61],dh
    e53b:	73 73                	jae    e5b0 <_IO_stdin_used+0x15b0>
    e53d:	77 6f                	ja     e5ae <_IO_stdin_used+0x15ae>
    e53f:	72 64                	jb     e5a5 <_IO_stdin_used+0x15a5>
    e541:	20 66 69             	and    BYTE PTR [rsi+0x69],ah
    e544:	6c                   	ins    BYTE PTR es:[rdi],dx
    e545:	65 00 25 64 2d 25 30 	add    BYTE PTR gs:[rip+0x30252d64],ah        # 302612b0 <_end+0x30124aa8>
    e54c:	32 64 2d 25          	xor    ah,BYTE PTR [rbp+rbp*1+0x25]
    e550:	30 32                	xor    BYTE PTR [rdx],dh
    e552:	64 20 25 30 32 64 3a 	and    BYTE PTR fs:[rip+0x3a643230],ah        # 3a651789 <_end+0x3a514f81>
    e559:	25 30 32 64 3a       	and    eax,0x3a643230
    e55e:	25 30 32 64 00       	and    eax,0x643230
    e563:	25 30 32 78 00       	and    eax,0x783230
    e568:	61                   	(bad)  
    e569:	00 2f                	add    BYTE PTR [rdi],ch
    e56b:	76 61                	jbe    e5ce <_IO_stdin_used+0x15ce>
    e56d:	72 2f                	jb     e59e <_IO_stdin_used+0x159e>
    e56f:	6c                   	ins    BYTE PTR es:[rdi],dx
    e570:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e571:	67 2f                	addr32 (bad) 
    e573:	76 69                	jbe    e5de <_IO_stdin_used+0x15de>
    e575:	67 69 6c 2f 6c 6f 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x6c],0x6e69676f
    e57c:	69 6e 
    e57e:	2e 6c                	cs ins BYTE PTR es:[rdi],dx
    e580:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e581:	67 00 00             	add    BYTE PTR [eax],al
    e584:	00 00                	add    BYTE PTR [rax],al
    e586:	00 00                	add    BYTE PTR [rax],al
    e588:	53                   	push   rbx
    e589:	75 63                	jne    e5ee <_IO_stdin_used+0x15ee>
    e58b:	63 65 73             	movsxd esp,DWORD PTR [rbp+0x73]
    e58e:	73 66                	jae    e5f6 <_IO_stdin_used+0x15f6>
    e590:	75 6c                	jne    e5fe <_IO_stdin_used+0x15fe>
    e592:	20 6c 6f 67          	and    BYTE PTR [rdi+rbp*2+0x67],ch
    e596:	69 6e 20 66 6f 72 20 	imul   ebp,DWORD PTR [rsi+0x20],0x20726f66
    e59d:	25 73 20 61 74       	and    eax,0x74612073
    e5a2:	20 25 73 20 66 72    	and    BYTE PTR [rip+0x72662073],ah        # 7267061b <_end+0x72533e13>
    e5a8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e5a9:	6d                   	ins    DWORD PTR es:[rdi],dx
    e5aa:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # f023 <_IO_stdin_used+0x2023>
    e5b0:	46 61                	rex.RX (bad) 
    e5b2:	69 6c 65 64 20 6c 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x676f6c20
    e5b9:	67 
    e5ba:	69 6e 20 66 6f 72 20 	imul   ebp,DWORD PTR [rsi+0x20],0x20726f66
    e5c1:	25 73 20 61 74       	and    eax,0x74612073
    e5c6:	20 25 73 20 66 72    	and    BYTE PTR [rip+0x72662073],ah        # 7267063f <_end+0x72533e37>
    e5cc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e5cd:	6d                   	ins    DWORD PTR es:[rdi],dx
    e5ce:	20 25 73 0a 00 6e    	and    BYTE PTR [rip+0x6e000a73],ah        # 6e00f047 <_end+0x6ded283f>
    e5d4:	65 77 20             	gs ja  e5f7 <_IO_stdin_used+0x15f7>
    e5d7:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    e5da:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e5db:	65 63 74 69 6f       	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
    e5e0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e5e1:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    e5e4:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 6426205d <_end+0x64125855>
    e5ea:	0a 00                	or     al,BYTE PTR [rax]
    e5ec:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    e5ee:	76 61                	jbe    e651 <_IO_stdin_used+0x1651>
    e5f0:	6c                   	ins    BYTE PTR es:[rdi],dx
    e5f1:	69 64 20 6c 6f 67 69 	imul   esp,DWORD PTR [rax+riz*1+0x6c],0x6e69676f
    e5f8:	6e 
    e5f9:	0d 0a 00 6e 73       	or     eax,0x736e000a
    e5fe:	68 23 20 00 65       	push   0x65002023
    e603:	78 69                	js     e66e <_IO_stdin_used+0x166e>
    e605:	74 00                	je     e607 <_IO_stdin_used+0x1607>
    e607:	00 48 65             	add    BYTE PTR [rax+0x65],cl
    e60a:	6c                   	ins    BYTE PTR es:[rdi],dx
    e60b:	70 20                	jo     e62d <_IO_stdin_used+0x162d>
    e60d:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    e60f:	72 20                	jb     e631 <_IO_stdin_used+0x1631>
    e611:	22 67 65             	and    ah,BYTE PTR [rdi+0x65]
    e614:	74 22                	je     e638 <_IO_stdin_used+0x1638>
    e616:	20 63 6f             	and    BYTE PTR [rbx+0x6f],ah
    e619:	6d                   	ins    DWORD PTR es:[rdi],dx
    e61a:	6d                   	ins    DWORD PTR es:[rdi],dx
    e61b:	61                   	(bad)  
    e61c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e61d:	64 3a 0a             	cmp    cl,BYTE PTR fs:[rdx]
    e620:	09 62 6c             	or     DWORD PTR [rdx+0x6c],esp
    e623:	61                   	(bad)  
    e624:	63 6b 6c             	movsxd ebp,DWORD PTR [rbx+0x6c]
    e627:	69 73 74 3a 20 20 20 	imul   esi,DWORD PTR [rbx+0x74],0x2020203a
    e62e:	72 65                	jb     e695 <_IO_stdin_used+0x1695>
    e630:	74 72                	je     e6a4 <_IO_stdin_used+0x16a4>
    e632:	69 65 76 65 20 74 68 	imul   esp,DWORD PTR [rbp+0x76],0x68742065
    e639:	65 20 62 6c          	and    BYTE PTR gs:[rdx+0x6c],ah
    e63d:	61                   	(bad)  
    e63e:	63 6b 6c             	movsxd ebp,DWORD PTR [rbx+0x6c]
    e641:	69 73 74 0a 09 72 75 	imul   esi,DWORD PTR [rbx+0x74],0x7572090a
    e648:	6c                   	ins    BYTE PTR es:[rdi],dx
    e649:	65 73 3a             	gs jae e686 <_IO_stdin_used+0x1686>
    e64c:	20 20                	and    BYTE PTR [rax],ah
    e64e:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    e651:	74 72                	je     e6c5 <_IO_stdin_used+0x16c5>
    e653:	69 65 76 65 20 72 75 	imul   esp,DWORD PTR [rbp+0x76],0x75722065
    e65a:	6c                   	ins    BYTE PTR es:[rdi],dx
    e65b:	65 73 20             	gs jae e67e <_IO_stdin_used+0x167e>
    e65e:	6c                   	ins    BYTE PTR es:[rdi],dx
    e65f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e660:	61                   	(bad)  
    e661:	64 65 64 20 69 6e    	fs gs and BYTE PTR fs:[rcx+0x6e],ch
    e667:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
    e66a:	6d                   	ins    DWORD PTR es:[rdi],dx
    e66b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e66c:	72 79                	jb     e6e7 <_IO_stdin_used+0x16e7>
    e66e:	0a 09                	or     cl,BYTE PTR [rcx]
    e670:	6d                   	ins    DWORD PTR es:[rdi],dx
    e671:	61                   	(bad)  
    e672:	74 63                	je     e6d7 <_IO_stdin_used+0x16d7>
    e674:	68 65 73 3a 20       	push   0x203a7365
    e679:	20 20                	and    BYTE PTR [rax],ah
    e67b:	72 65                	jb     e6e2 <_IO_stdin_used+0x16e2>
    e67d:	74 72                	je     e6f1 <_IO_stdin_used+0x16f1>
    e67f:	69 65 76 65 20 6d 61 	imul   esp,DWORD PTR [rbp+0x76],0x616d2065
    e686:	74 63                	je     e6eb <_IO_stdin_used+0x16eb>
    e688:	68 65 73 20 66       	push   0x66207365
    e68d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e68e:	72 20                	jb     e6b0 <_IO_stdin_used+0x16b0>
    e690:	61                   	(bad)  
    e691:	6c                   	ins    BYTE PTR es:[rdi],dx
    e692:	6c                   	ins    BYTE PTR es:[rdi],dx
    e693:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    e696:	6c                   	ins    BYTE PTR es:[rdi],dx
    e697:	65 73 0a             	gs jae e6a4 <_IO_stdin_used+0x16a4>
    e69a:	09 70 61             	or     DWORD PTR [rax+0x61],esi
    e69d:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    e6a0:	74 73                	je     e715 <_IO_stdin_used+0x1715>
    e6a2:	3a 20                	cmp    ah,BYTE PTR [rax]
    e6a4:	20 20                	and    BYTE PTR [rax],ah
    e6a6:	74 6f                	je     e717 <_IO_stdin_used+0x1717>
    e6a8:	74 61                	je     e70b <_IO_stdin_used+0x170b>
    e6aa:	6c                   	ins    BYTE PTR es:[rdi],dx
    e6ab:	20 70 61             	and    BYTE PTR [rax+0x61],dh
    e6ae:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    e6b1:	74 73                	je     e726 <_IO_stdin_used+0x1726>
    e6b3:	20 63 61             	and    BYTE PTR [rbx+0x61],ah
    e6b6:	75 67                	jne    e71f <_IO_stdin_used+0x171f>
    e6b8:	68 74 09 61 72       	push   0x72610974
    e6bd:	70 3a                	jo     e6f9 <_IO_stdin_used+0x16f9>
    e6bf:	20 20                	and    BYTE PTR [rax],ah
    e6c1:	20 20                	and    BYTE PTR [rax],ah
    e6c3:	72 65                	jb     e72a <_IO_stdin_used+0x172a>
    e6c5:	74 72                	je     e739 <_IO_stdin_used+0x1739>
    e6c7:	69 65 76 65 20 74 68 	imul   esp,DWORD PTR [rbp+0x76],0x68742065
    e6ce:	65 20 61 72          	and    BYTE PTR gs:[rcx+0x72],ah
    e6d2:	70 20                	jo     e6f4 <_IO_stdin_used+0x16f4>
    e6d4:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    e6d7:	68 65 0d 0a 00       	push   0xa0d65
    e6dc:	00 00                	add    BYTE PTR [rax],al
    e6de:	00 00                	add    BYTE PTR [rax],al
    e6e0:	48                   	rex.W
    e6e1:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    e6e3:	70 20                	jo     e705 <_IO_stdin_used+0x1705>
    e6e5:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    e6e7:	72 20                	jb     e709 <_IO_stdin_used+0x1709>
    e6e9:	22 61 64             	and    ah,BYTE PTR [rcx+0x64]
    e6ec:	64 22 20             	and    ah,BYTE PTR fs:[rax]
    e6ef:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    e6f2:	6d                   	ins    DWORD PTR es:[rdi],dx
    e6f3:	61                   	(bad)  
    e6f4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e6f5:	64 3a 0a             	cmp    cl,BYTE PTR fs:[rdx]
    e6f8:	09 61 64             	or     DWORD PTR [rcx+0x64],esp
    e6fb:	64 20 62 6c          	and    BYTE PTR fs:[rdx+0x6c],ah
    e6ff:	61                   	(bad)  
    e700:	63 6b 6c             	movsxd ebp,DWORD PTR [rbx+0x6c]
    e703:	69 73 74 20 3c 69 70 	imul   esi,DWORD PTR [rbx+0x74],0x70693c20
    e70a:	76 34                	jbe    e740 <_IO_stdin_used+0x1740>
    e70c:	7c 69                	jl     e777 <_IO_stdin_used+0x1777>
    e70e:	70 76                	jo     e786 <_IO_stdin_used+0x1786>
    e710:	36 3e 20 3c 69       	ss ds and BYTE PTR [rcx+rbp*2],bh
    e715:	70 20                	jo     e737 <_IO_stdin_used+0x1737>
    e717:	61                   	(bad)  
    e718:	64 64 72 3e          	fs fs jb e75a <_IO_stdin_used+0x175a>
    e71c:	0a 09                	or     cl,BYTE PTR [rcx]
    e71e:	61                   	(bad)  
    e71f:	64 64 20 72 75       	fs and BYTE PTR fs:[rdx+0x75],dh
    e724:	6c                   	ins    BYTE PTR es:[rdi],dx
    e725:	65 20 3c 72          	and    BYTE PTR gs:[rdx+rsi*2],bh
    e729:	75 6c                	jne    e797 <_IO_stdin_used+0x1797>
    e72b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    e72d:	61                   	(bad)  
    e72e:	6d                   	ins    DWORD PTR es:[rdi],dx
    e72f:	65 3e 0d 0a 00 73 70 	gs ds or eax,0x7073000a
    e736:	69 6d 61 78 00 74 65 	imul   ebp,DWORD PTR [rbp+0x61],0x65740078
    e73d:	73 74                	jae    e7b3 <_IO_stdin_used+0x17b3>
    e73f:	5f                   	pop    rdi
    e740:	65 63 68 6f          	movsxd ebp,DWORD PTR gs:[rax+0x6f]
    e744:	00 68 65             	add    BYTE PTR [rax+0x65],ch
    e747:	6c                   	ins    BYTE PTR es:[rdi],dx
    e748:	6c                   	ins    BYTE PTR es:[rdi],dx
    e749:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e74a:	0d 0a 00 73 68       	or     eax,0x6873000a
    e74f:	75 74                	jne    e7c5 <_IO_stdin_used+0x17c5>
    e751:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
    e753:	77 6e                	ja     e7c3 <_IO_stdin_used+0x17c3>
    e755:	00 65 78             	add    BYTE PTR [rbp+0x78],ah
    e758:	69 74 00 67 65 74 00 	imul   esi,DWORD PTR [rax+rax*1+0x67],0x62007465
    e75f:	62 
    e760:	6c                   	ins    BYTE PTR es:[rdi],dx
    e761:	61                   	(bad)  
    e762:	63 6b 6c             	movsxd ebp,DWORD PTR [rbx+0x6c]
    e765:	69 73 74 00 72 75 6c 	imul   esi,DWORD PTR [rbx+0x74],0x6c757200
    e76c:	65 73 00             	gs jae e76f <_IO_stdin_used+0x176f>
    e76f:	6d                   	ins    DWORD PTR es:[rdi],dx
    e770:	61                   	(bad)  
    e771:	74 63                	je     e7d6 <_IO_stdin_used+0x17d6>
    e773:	68 65 73 00 70       	push   0x70007365
    e778:	61                   	(bad)  
    e779:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    e77c:	74 73                	je     e7f1 <_IO_stdin_used+0x17f1>
    e77e:	00 54 6f 74          	add    BYTE PTR [rdi+rbp*2+0x74],dl
    e782:	61                   	(bad)  
    e783:	6c                   	ins    BYTE PTR es:[rdi],dx
    e784:	20 70 61             	and    BYTE PTR [rax+0x61],dh
    e787:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    e78a:	74 73                	je     e7ff <_IO_stdin_used+0x17ff>
    e78c:	20 63 61             	and    BYTE PTR [rbx+0x61],ah
    e78f:	75 67                	jne    e7f8 <_IO_stdin_used+0x17f8>
    e791:	68 74 3a 20 25       	push   0x25203a74
    e796:	64 0d 0a 00 61 72    	fs or  eax,0x7261000a
    e79c:	70 00                	jo     e79e <_IO_stdin_used+0x179e>
    e79e:	61                   	(bad)  
    e79f:	64 64 00 72 75       	fs add BYTE PTR fs:[rdx+0x75],dh
    e7a4:	6c                   	ins    BYTE PTR es:[rdi],dx
    e7a5:	65 00 73 65          	add    BYTE PTR gs:[rbx+0x65],dh
    e7a9:	74 00                	je     e7ab <_IO_stdin_used+0x17ab>
    e7ab:	00 00                	add    BYTE PTR [rax],al
    e7ad:	00 00                	add    BYTE PTR [rax],al
    e7af:	00 65 72             	add    BYTE PTR [rbp+0x72],ah
    e7b2:	72 6f                	jb     e823 <_IO_stdin_used+0x1823>
    e7b4:	72 3a                	jb     e7f0 <_IO_stdin_used+0x17f0>
    e7b6:	20 63 6f             	and    BYTE PTR [rbx+0x6f],ah
    e7b9:	6d                   	ins    DWORD PTR es:[rdi],dx
    e7ba:	6d                   	ins    DWORD PTR es:[rdi],dx
    e7bb:	61                   	(bad)  
    e7bc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e7bd:	64 20 6e 6f          	and    BYTE PTR fs:[rsi+0x6f],ch
    e7c1:	74 20                	je     e7e3 <_IO_stdin_used+0x17e3>
    e7c3:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    e7c5:	75 6e                	jne    e835 <_IO_stdin_used+0x1835>
    e7c7:	64 3a 20             	cmp    ah,BYTE PTR fs:[rax]
    e7ca:	25 73 0d 0a 00       	and    eax,0xa0d73
    e7cf:	69 70 76 34 00 41 64 	imul   esi,DWORD PTR [rax+0x76],0x64410034
    e7d6:	64 65 64 20 25 73 20 	fs gs and BYTE PTR fs:[rip+0x6f742073],ah        # 6f750852 <_end+0x6f61404a>
    e7dd:	74 6f 
    e7df:	20 62 6c             	and    BYTE PTR [rdx+0x6c],ah
    e7e2:	61                   	(bad)  
    e7e3:	63 6b 6c             	movsxd ebp,DWORD PTR [rbx+0x6c]
    e7e6:	69 73 74 0d 0a 00 09 	imul   esi,DWORD PTR [rbx+0x74],0x9000a0d
    e7ed:	09 09                	or     DWORD PTR [rcx],ecx
    e7ef:	09 09                	or     DWORD PTR [rcx],ecx
    e7f1:	09 5b 20             	or     DWORD PTR [rbx+0x20],ebx
    e7f4:	25 64 20 7c 20       	and    eax,0x207c2064
    e7f9:	25 64 20 7c 00       	and    eax,0x7c2064
    e7fe:	20 25 73 20 5d 00    	and    BYTE PTR [rip+0x5d2073],ah        # 5e0877 <_end+0x4a406f>
    e804:	72 00                	jb     e806 <_IO_stdin_used+0x1806>
    e806:	46 61                	rex.RX (bad) 
    e808:	69 6c 75 72 65 20 74 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f742065
    e80f:	6f 
    e810:	20 6f 70             	and    BYTE PTR [rdi+0x70],ch
    e813:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    e815:	20 66 69             	and    BYTE PTR [rsi+0x69],ah
    e818:	6c                   	ins    BYTE PTR es:[rdi],dx
    e819:	65 20 25 73 0d 0a 00 	and    BYTE PTR gs:[rip+0xa0d73],ah        # af593 <rules+0x9d2b3>
    e820:	4c 6f                	rex.WR outs dx,DWORD PTR ds:[rsi]
    e822:	61                   	(bad)  
    e823:	64 65 64 20 72 75    	fs gs and BYTE PTR fs:[rdx+0x75],dh
    e829:	6c                   	ins    BYTE PTR es:[rdi],dx
    e82a:	65 20 66 69          	and    BYTE PTR gs:[rsi+0x69],ah
    e82e:	6c                   	ins    BYTE PTR es:[rdi],dx
    e82f:	65 20 25 73 0d 0a 00 	and    BYTE PTR gs:[rip+0xa0d73],ah        # af5a9 <rules+0x9d2c9>
    e836:	25 73 20 77 61       	and    eax,0x61772073
    e83b:	73 20                	jae    e85d <_IO_stdin_used+0x185d>
    e83d:	6d                   	ins    DWORD PTR es:[rdi],dx
    e83e:	61                   	(bad)  
    e83f:	74 63                	je     e8a4 <_IO_stdin_used+0x18a4>
    e841:	68 65 64 20 25       	push   0x25206465
    e846:	64 20 74 69 6d       	and    BYTE PTR fs:[rcx+rbp*2+0x6d],dh
    e84b:	65 73 0d             	gs jae e85b <_IO_stdin_used+0x185b>
    e84e:	0a 00                	or     al,BYTE PTR [rax]
    e850:	25 73 3a 20 72       	and    eax,0x72203a73
    e855:	75 6c                	jne    e8c3 <_IO_stdin_used+0x18c3>
    e857:	65 20 6e 6f          	and    BYTE PTR gs:[rsi+0x6f],ch
    e85b:	74 20                	je     e87d <_IO_stdin_used+0x187d>
    e85d:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    e85f:	75 6e                	jne    e8cf <_IO_stdin_used+0x18cf>
    e861:	64 0d 0a 00 09 25    	fs or  eax,0x2509000a
    e867:	73 20                	jae    e889 <_IO_stdin_used+0x1889>
    e869:	6d                   	ins    DWORD PTR es:[rdi],dx
    e86a:	61                   	(bad)  
    e86b:	74 63                	je     e8d0 <_IO_stdin_used+0x18d0>
    e86d:	68 65 64 20 25       	push   0x25206465
    e872:	64 20 74 69 6d       	and    BYTE PTR fs:[rcx+rbp*2+0x6d],dh
    e877:	65 73 0a             	gs jae e884 <_IO_stdin_used+0x1884>
    e87a:	00 0a                	add    BYTE PTR [rdx],cl
    e87c:	09 25 73 20 2d 3e    	or     DWORD PTR [rip+0x3e2d2073],esp        # 3e2e08f5 <_end+0x3e1a40ed>
    e882:	20 25 73 00 43 75    	and    BYTE PTR [rip+0x75430073],ah        # 7543e8fb <_end+0x753020f3>
    e888:	72 72                	jb     e8fc <_IO_stdin_used+0x18fc>
    e88a:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    e88c:	74 20                	je     e8ae <_IO_stdin_used+0x18ae>
    e88e:	53                   	push   rbx
    e88f:	50                   	push   rax
    e890:	49 20 4d 61          	rex.WB and BYTE PTR [r13+0x61],cl
    e894:	78 3a                	js     e8d0 <_IO_stdin_used+0x18d0>
    e896:	20 25 64 0a 00 0a    	and    BYTE PTR [rip+0xa000a64],ah        # a00f300 <_end+0x9ed2af8>
    e89c:	4e                   	rex.WRX
    e89d:	65 77 20             	gs ja  e8c0 <_IO_stdin_used+0x18c0>
    e8a0:	53                   	push   rbx
    e8a1:	50                   	push   rax
    e8a2:	49 20 4d 61          	rex.WB and BYTE PTR [r13+0x61],cl
    e8a6:	78 3a                	js     e8e2 <_IO_stdin_used+0x18e2>
    e8a8:	20 25 64 0d 0a 00    	and    BYTE PTR [rip+0xa0d64],ah        # af612 <rules+0x9d332>
    e8ae:	00 00                	add    BYTE PTR [rax],al
    e8b0:	61                   	(bad)  
    e8b1:	00 00                	add    BYTE PTR [rax],al
    e8b3:	00 00                	add    BYTE PTR [rax],al
    e8b5:	00 00                	add    BYTE PTR [rax],al
    e8b7:	00 42 61             	add    BYTE PTR [rdx+0x61],al
    e8ba:	73 69                	jae    e925 <_IO_stdin_used+0x1925>
    e8bc:	63 20                	movsxd esp,DWORD PTR [rax]
    e8be:	70 6f                	jo     e92f <_IO_stdin_used+0x192f>
    e8c0:	72 74                	jb     e936 <_IO_stdin_used+0x1936>
    e8c2:	73 63                	jae    e927 <_IO_stdin_used+0x1927>
    e8c4:	61                   	(bad)  
    e8c5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e8c6:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    e8ca:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    e8cf:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    e8d2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e8d3:	6d                   	ins    DWORD PTR es:[rdi],dx
    e8d4:	20 49 50             	and    BYTE PTR [rcx+0x50],cl
    e8d7:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    e8da:	64 72 65             	fs jb  e942 <_IO_stdin_used+0x1942>
    e8dd:	73 73                	jae    e952 <_IO_stdin_used+0x1952>
    e8df:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # f358 <__GNU_EH_FRAME_HDR+0x60>
    e8e5:	00 00                	add    BYTE PTR [rax],al
    e8e7:	00 50 6f             	add    BYTE PTR [rax+0x6f],dl
    e8ea:	72 74                	jb     e960 <_IO_stdin_used+0x1960>
    e8ec:	73 63                	jae    e951 <_IO_stdin_used+0x1951>
    e8ee:	61                   	(bad)  
    e8ef:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e8f0:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    e8f4:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    e8f9:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    e8fc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e8fd:	6d                   	ins    DWORD PTR es:[rdi],dx
    e8fe:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 74620977 <_end+0x744e416f>
    e904:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # f37d <__GNU_EH_FRAME_HDR+0x85>
    e90a:	00 00                	add    BYTE PTR [rax],al
    e90c:	00 00                	add    BYTE PTR [rax],al
    e90e:	00 00                	add    BYTE PTR [rax],al
    e910:	46                   	rex.RX
    e911:	49                   	rex.WB
    e912:	4e 20 70 6f          	rex.WRX and BYTE PTR [rax+0x6f],r14b
    e916:	72 74                	jb     e98c <_IO_stdin_used+0x198c>
    e918:	73 63                	jae    e97d <_IO_stdin_used+0x197d>
    e91a:	61                   	(bad)  
    e91b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e91c:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    e920:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    e925:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    e928:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e929:	6d                   	ins    DWORD PTR es:[rdi],dx
    e92a:	20 49 50             	and    BYTE PTR [rcx+0x50],cl
    e92d:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    e930:	64 72 65             	fs jb  e998 <_IO_stdin_used+0x1998>
    e933:	73 73                	jae    e9a8 <_IO_stdin_used+0x19a8>
    e935:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # f3ae <__GNU_EH_FRAME_HDR+0xb6>
    e93b:	00 00                	add    BYTE PTR [rax],al
    e93d:	00 00                	add    BYTE PTR [rax],al
    e93f:	00 46 49             	add    BYTE PTR [rsi+0x49],al
    e942:	4e 20 70 6f          	rex.WRX and BYTE PTR [rax+0x6f],r14b
    e946:	72 74                	jb     e9bc <_IO_stdin_used+0x19bc>
    e948:	73 63                	jae    e9ad <_IO_stdin_used+0x19ad>
    e94a:	61                   	(bad)  
    e94b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e94c:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    e950:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    e955:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    e958:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e959:	6d                   	ins    DWORD PTR es:[rdi],dx
    e95a:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 746209d3 <_end+0x744e41cb>
    e960:	20 25 73 0a 00 30    	and    BYTE PTR [rip+0x30000a73],ah        # 3000f3d9 <_end+0x2fed2bd1>
    e966:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
    e969:	30 2e                	xor    BYTE PTR [rsi],ch
    e96b:	31 00                	xor    DWORD PTR [rax],eax
    e96d:	30 2e                	xor    BYTE PTR [rsi],ch
    e96f:	30 2e                	xor    BYTE PTR [rsi],ch
    e971:	30 2e                	xor    BYTE PTR [rsi],ch
    e973:	31 00                	xor    DWORD PTR [rax],eax
    e975:	00 00                	add    BYTE PTR [rax],al
    e977:	00 41 72             	add    BYTE PTR [rcx+0x72],al
    e97a:	70 20                	jo     e99c <_IO_stdin_used+0x199c>
    e97c:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    e97e:	74 72                	je     e9f2 <_IO_stdin_used+0x19f2>
    e980:	79 20                	jns    e9a2 <_IO_stdin_used+0x19a2>
    e982:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    e985:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e986:	67 65 64 20 66 6f    	gs and BYTE PTR fs:[esi+0x6f],ah
    e98c:	72 20                	jb     e9ae <_IO_stdin_used+0x19ae>
    e98e:	69 70 20 61 64 64 72 	imul   esi,DWORD PTR [rax+0x20],0x72646461
    e995:	65 73 73             	gs jae ea0b <_IO_stdin_used+0x1a0b>
    e998:	20 25 73 3a 20 77    	and    BYTE PTR [rip+0x77203a73],ah        # 77212411 <_end+0x770d5c09>
    e99e:	61                   	(bad)  
    e99f:	73 20                	jae    e9c1 <_IO_stdin_used+0x19c1>
    e9a1:	25 73 20 69 73       	and    eax,0x73692073
    e9a6:	20 6e 6f             	and    BYTE PTR [rsi+0x6f],ch
    e9a9:	77 20                	ja     e9cb <_IO_stdin_used+0x19cb>
    e9ab:	25 73 00 72 00       	and    eax,0x720073
    e9b0:	2f                   	(bad)  
    e9b1:	75 73                	jne    ea26 <_IO_stdin_used+0x1a26>
    e9b3:	72 2f                	jb     e9e4 <_IO_stdin_used+0x19e4>
    e9b5:	73 68                	jae    ea1f <_IO_stdin_used+0x1a1f>
    e9b7:	61                   	(bad)  
    e9b8:	72 65                	jb     ea1f <_IO_stdin_used+0x1a1f>
    e9ba:	2f                   	(bad)  
    e9bb:	76 69                	jbe    ea26 <_IO_stdin_used+0x1a26>
    e9bd:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    e9c4:	63 61 
    e9c6:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    e9c9:	2e 63 73 76          	cs movsxd esi,DWORD PTR [rbx+0x76]
    e9cd:	00 00                	add    BYTE PTR [rax],al
    e9cf:	00 43 6f             	add    BYTE PTR [rbx+0x6f],al
    e9d2:	75 6c                	jne    ea40 <_IO_stdin_used+0x1a40>
    e9d4:	64 20 6e 6f          	and    BYTE PTR fs:[rsi+0x6f],ch
    e9d8:	74 20                	je     e9fa <_IO_stdin_used+0x19fa>
    e9da:	6c                   	ins    BYTE PTR es:[rdi],dx
    e9db:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e9dc:	61                   	(bad)  
    e9dd:	64 20 61 72          	and    BYTE PTR fs:[rcx+0x72],ah
    e9e1:	70 20                	jo     ea03 <_IO_stdin_used+0x1a03>
    e9e3:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    e9e6:	68 65 20 66 72       	push   0x72662065
    e9eb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e9ec:	6d                   	ins    DWORD PTR es:[rdi],dx
    e9ed:	20 64 61 74          	and    BYTE PTR [rcx+riz*2+0x74],ah
    e9f1:	61                   	(bad)  
    e9f2:	62 61                	(bad)  
    e9f4:	73 65                	jae    ea5b <_IO_stdin_used+0x1a5b>
    e9f6:	2c 20                	sub    al,0x20
    e9f8:	66 69 6c 65 20 6e 6f 	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f6e
    e9ff:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ea00:	65 78 69             	gs js  ea6c <_IO_stdin_used+0x1a6c>
    ea03:	73 74                	jae    ea79 <_IO_stdin_used+0x1a79>
    ea05:	61                   	(bad)  
    ea06:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ea07:	74 00                	je     ea09 <_IO_stdin_used+0x1a09>
    ea09:	0a 00                	or     al,BYTE PTR [rax]
    ea0b:	2c 00                	sub    al,0x0
    ea0d:	00 00                	add    BYTE PTR [rax],al
    ea0f:	00 55 70             	add    BYTE PTR [rbp+0x70],dl
    ea12:	64 61                	fs (bad) 
    ea14:	74 69                	je     ea7f <_IO_stdin_used+0x1a7f>
    ea16:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ea17:	67 20 64 62 00       	and    BYTE PTR [edx+eiz*2+0x0],ah
    ea1c:	53                   	push   rbx
    ea1d:	51                   	push   rcx
    ea1e:	6c                   	ins    BYTE PTR es:[rdi],dx
    ea1f:	69 74 65 20 65 72 72 	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x6f727265
    ea26:	6f 
    ea27:	72 3a                	jb     ea63 <_IO_stdin_used+0x1a63>
    ea29:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # f4a2 <__GNU_EH_FRAME_HDR+0x1aa>
    ea2f:	00 49 4e             	add    BYTE PTR [rcx+0x4e],cl
    ea32:	53                   	push   rbx
    ea33:	45 52                	rex.RB push r10
    ea35:	54                   	push   rsp
    ea36:	20 49 4e             	and    BYTE PTR [rcx+0x4e],cl
    ea39:	54                   	push   rsp
    ea3a:	4f 20 61 72          	rex.WRXB and BYTE PTR [r9+0x72],r12b
    ea3e:	70 5f                	jo     ea9f <_IO_stdin_used+0x1a9f>
    ea40:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    ea43:	68 65 20 28 69       	push   0x69282065
    ea48:	70 5f                	jo     eaa9 <_IO_stdin_used+0x1aa9>
    ea4a:	61                   	(bad)  
    ea4b:	64 64 72 65          	fs fs jb eab4 <_IO_stdin_used+0x1ab4>
    ea4f:	73 73                	jae    eac4 <_IO_stdin_used+0x1ac4>
    ea51:	2c 20                	sub    al,0x20
    ea53:	6d                   	ins    DWORD PTR es:[rdi],dx
    ea54:	61                   	(bad)  
    ea55:	63 5f 61             	movsxd ebx,DWORD PTR [rdi+0x61]
    ea58:	64 64 72 65          	fs fs jb eac1 <_IO_stdin_used+0x1ac1>
    ea5c:	73 73                	jae    ead1 <_IO_stdin_used+0x1ad1>
    ea5e:	29 20                	sub    DWORD PTR [rax],esp
    ea60:	56                   	push   rsi
    ea61:	41                   	rex.B
    ea62:	4c 55                	rex.WR push rbp
    ea64:	45 53                	rex.RB push r11
    ea66:	20 28                	and    BYTE PTR [rax],ch
    ea68:	22 25 73 22 2c 20    	and    ah,BYTE PTR [rip+0x202c2273]        # 202d0ce1 <_end+0x201944d9>
    ea6e:	22 25 73 22 29 3b    	and    ah,BYTE PTR [rip+0x3b292273]        # 3b2a0ce7 <_end+0x3b1644df>
    ea74:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    ea77:	4c 69 74 65 20 65 6e 	imul   r14,QWORD PTR [rbp+riz*2+0x20],0x6f636e65
    ea7e:	63 6f 
    ea80:	75 6e                	jne    eaf0 <_IO_stdin_used+0x1af0>
    ea82:	74 65                	je     eae9 <_IO_stdin_used+0x1ae9>
    ea84:	72 65                	jb     eaeb <_IO_stdin_used+0x1aeb>
    ea86:	64 20 65 72          	and    BYTE PTR fs:[rbp+0x72],ah
    ea8a:	72 6f                	jb     eafb <_IO_stdin_used+0x1afb>
    ea8c:	72 3a                	jb     eac8 <_IO_stdin_used+0x1ac8>
    ea8e:	20 25 73 0a 00 2f    	and    BYTE PTR [rip+0x2f000a73],ah        # 2f00f507 <_end+0x2eed2cff>
    ea94:	75 73                	jne    eb09 <_IO_stdin_used+0x1b09>
    ea96:	72 2f                	jb     eac7 <_IO_stdin_used+0x1ac7>
    ea98:	73 68                	jae    eb02 <_IO_stdin_used+0x1b02>
    ea9a:	61                   	(bad)  
    ea9b:	72 65                	jb     eb02 <_IO_stdin_used+0x1b02>
    ea9d:	2f                   	(bad)  
    ea9e:	76 69                	jbe    eb09 <_IO_stdin_used+0x1b09>
    eaa0:	67 69 6c 2f 73 70 69 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x642e6970
    eaa7:	2e 64 
    eaa9:	62                   	(bad)  
    eaaa:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    eaad:	4c 69 74 65 20 65 72 	imul   r14,QWORD PTR [rbp+riz*2+0x20],0x6f727265
    eab4:	72 6f 
    eab6:	72 20                	jb     ead8 <_IO_stdin_used+0x1ad8>
    eab8:	25 73 0a 00 00       	and    eax,0xa73
    eabd:	00 00                	add    BYTE PTR [rax],al
    eabf:	00 49 4e             	add    BYTE PTR [rcx+0x4e],cl
    eac2:	53                   	push   rbx
    eac3:	45 52                	rex.RB push r10
    eac5:	54                   	push   rsp
    eac6:	20 49 4e             	and    BYTE PTR [rcx+0x4e],cl
    eac9:	54                   	push   rsp
    eaca:	4f 20 73 70          	rex.WRXB and BYTE PTR [r11+0x70],r14b
    eace:	69 5f 74 61 62 6c 65 	imul   ebx,DWORD PTR [rdi+0x74],0x656c6261
    ead5:	20 28                	and    BYTE PTR [rax],ch
    ead7:	73 65                	jae    eb3e <_IO_stdin_used+0x1b3e>
    ead9:	72 76                	jb     eb51 <_IO_stdin_used+0x1b51>
    eadb:	5f                   	pop    rdi
    eadc:	61                   	(bad)  
    eadd:	64 64 72 2c          	fs fs jb eb0d <_IO_stdin_used+0x1b0d>
    eae1:	20 63 6c             	and    BYTE PTR [rbx+0x6c],ah
    eae4:	69 5f 61 64 64 72 2c 	imul   ebx,DWORD PTR [rdi+0x61],0x2c726464
    eaeb:	73 65                	jae    eb52 <_IO_stdin_used+0x1b52>
    eaed:	72 76                	jb     eb65 <_IO_stdin_used+0x1b65>
    eaef:	5f                   	pop    rdi
    eaf0:	70 6f                	jo     eb61 <_IO_stdin_used+0x1b61>
    eaf2:	72 74                	jb     eb68 <_IO_stdin_used+0x1b68>
    eaf4:	2c 63                	sub    al,0x63
    eaf6:	6c                   	ins    BYTE PTR es:[rdi],dx
    eaf7:	69 5f 70 6f 72 74 2c 	imul   ebx,DWORD PTR [rdi+0x70],0x2c74726f
    eafe:	73 65                	jae    eb65 <_IO_stdin_used+0x1b65>
    eb00:	72 76                	jb     eb78 <_IO_stdin_used+0x1b78>
    eb02:	5f                   	pop    rdi
    eb03:	70 6b                	jo     eb70 <_IO_stdin_used+0x1b70>
    eb05:	74 5f                	je     eb66 <_IO_stdin_used+0x1b66>
    eb07:	73 65                	jae    eb6e <_IO_stdin_used+0x1b6e>
    eb09:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    eb0a:	74 2c                	je     eb38 <_IO_stdin_used+0x1b38>
    eb0c:	63 6c 69 5f          	movsxd ebp,DWORD PTR [rcx+rbp*2+0x5f]
    eb10:	70 6b                	jo     eb7d <_IO_stdin_used+0x1b7d>
    eb12:	74 5f                	je     eb73 <_IO_stdin_used+0x1b73>
    eb14:	73 65                	jae    eb7b <_IO_stdin_used+0x1b7b>
    eb16:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    eb17:	74 2c                	je     eb45 <_IO_stdin_used+0x1b45>
    eb19:	73 65                	jae    eb80 <_IO_stdin_used+0x1b80>
    eb1b:	72 76                	jb     eb93 <_IO_stdin_used+0x1b93>
    eb1d:	5f                   	pop    rdi
    eb1e:	70 6b                	jo     eb8b <_IO_stdin_used+0x1b8b>
    eb20:	74 5f                	je     eb81 <_IO_stdin_used+0x1b81>
    eb22:	72 65                	jb     eb89 <_IO_stdin_used+0x1b89>
    eb24:	63 76 2c             	movsxd esi,DWORD PTR [rsi+0x2c]
    eb27:	63 6c 69 5f          	movsxd ebp,DWORD PTR [rcx+rbp*2+0x5f]
    eb2b:	70 6b                	jo     eb98 <_IO_stdin_used+0x1b98>
    eb2d:	74 5f                	je     eb8e <_IO_stdin_used+0x1b8e>
    eb2f:	72 65                	jb     eb96 <_IO_stdin_used+0x1b96>
    eb31:	63 76 2c             	movsxd esi,DWORD PTR [rsi+0x2c]
    eb34:	70 72                	jo     eba8 <_IO_stdin_used+0x1ba8>
    eb36:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    eb37:	74 6f                	je     eba8 <_IO_stdin_used+0x1ba8>
    eb39:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    eb3c:	2c 61                	sub    al,0x61
    eb3e:	76 67                	jbe    eba7 <_IO_stdin_used+0x1ba7>
    eb40:	5f                   	pop    rdi
    eb41:	70 70                	jo     ebb3 <_IO_stdin_used+0x1bb3>
    eb43:	73 2c                	jae    eb71 <_IO_stdin_used+0x1b71>
    eb45:	73 74                	jae    ebbb <_IO_stdin_used+0x1bbb>
    eb47:	61                   	(bad)  
    eb48:	72 74                	jb     ebbe <_IO_stdin_used+0x1bbe>
    eb4a:	5f                   	pop    rdi
    eb4b:	74 69                	je     ebb6 <_IO_stdin_used+0x1bb6>
    eb4d:	6d                   	ins    DWORD PTR es:[rdi],dx
    eb4e:	65 2c 65             	gs sub al,0x65
    eb51:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    eb52:	64 5f                	fs pop rdi
    eb54:	74 69                	je     ebbf <_IO_stdin_used+0x1bbf>
    eb56:	6d                   	ins    DWORD PTR es:[rdi],dx
    eb57:	65 2c 64             	gs sub al,0x64
    eb5a:	61                   	(bad)  
    eb5b:	74 61                	je     ebbe <_IO_stdin_used+0x1bbe>
    eb5d:	5f                   	pop    rdi
    eb5e:	70 6b                	jo     ebcb <_IO_stdin_used+0x1bcb>
    eb60:	74 73                	je     ebd5 <_IO_stdin_used+0x1bd5>
    eb62:	2c 63                	sub    al,0x63
    eb64:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    eb65:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    eb66:	74 72                	je     ebda <_IO_stdin_used+0x1bda>
    eb68:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    eb69:	6c                   	ins    BYTE PTR es:[rdi],dx
    eb6a:	5f                   	pop    rdi
    eb6b:	70 6b                	jo     ebd8 <_IO_stdin_used+0x1bd8>
    eb6d:	74 73                	je     ebe2 <_IO_stdin_used+0x1be2>
    eb6f:	29 20                	sub    DWORD PTR [rax],esp
    eb71:	56                   	push   rsi
    eb72:	41                   	rex.B
    eb73:	4c 55                	rex.WR push rbp
    eb75:	45 53                	rex.RB push r11
    eb77:	20 28                	and    BYTE PTR [rax],ch
    eb79:	22 25 73 22 2c 22    	and    ah,BYTE PTR [rip+0x222c2273]        # 222d0df2 <_end+0x221945ea>
    eb7f:	25 73 22 2c 25       	and    eax,0x252c2273
    eb84:	6c                   	ins    BYTE PTR es:[rdi],dx
    eb85:	64 2c 25             	fs sub al,0x25
    eb88:	6c                   	ins    BYTE PTR es:[rdi],dx
    eb89:	64 2c 25             	fs sub al,0x25
    eb8c:	64 2c 25             	fs sub al,0x25
    eb8f:	64 2c 25             	fs sub al,0x25
    eb92:	64 2c 25             	fs sub al,0x25
    eb95:	64 2c 25             	fs sub al,0x25
    eb98:	64 2c 25             	fs sub al,0x25
    eb9b:	64 2c 25             	fs sub al,0x25
    eb9e:	6c                   	ins    BYTE PTR es:[rdi],dx
    eb9f:	64 2c 25             	fs sub al,0x25
    eba2:	6c                   	ins    BYTE PTR es:[rdi],dx
    eba3:	64 2c 25             	fs sub al,0x25
    eba6:	64 2c 25             	fs sub al,0x25
    eba9:	64 29 3b             	sub    DWORD PTR fs:[rbx],edi
    ebac:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    ebaf:	4c                   	rex.WR
    ebb0:	49 54                	rex.WB push r12
    ebb2:	45 20 45 6e          	and    BYTE PTR [r13+0x6e],r8b
    ebb6:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    ebb9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ebba:	74 65                	je     ec21 <_IO_stdin_used+0x1c21>
    ebbc:	72 65                	jb     ec23 <_IO_stdin_used+0x1c23>
    ebbe:	64 20 65 72          	and    BYTE PTR fs:[rbp+0x72],ah
    ebc2:	72 6f                	jb     ec33 <_IO_stdin_used+0x1c33>
    ebc4:	72 3a                	jb     ec00 <_IO_stdin_used+0x1c00>
    ebc6:	20 25 73 0a 00 53    	and    BYTE PTR [rip+0x53000a73],ah        # 5300f63f <_end+0x52ed2e37>
    ebcc:	74 72                	je     ec40 <_IO_stdin_used+0x1c40>
    ebce:	6c                   	ins    BYTE PTR es:[rdi],dx
    ebcf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ebd0:	63 20                	movsxd esp,DWORD PTR [rax]
    ebd2:	73 75                	jae    ec49 <_IO_stdin_used+0x1c49>
    ebd4:	63 63 65             	movsxd esp,DWORD PTR [rbx+0x65]
    ebd7:	73 73                	jae    ec4c <_IO_stdin_used+0x1c4c>
    ebd9:	66 75 6c             	data16 jne ec48 <_IO_stdin_used+0x1c48>
    ebdc:	00 51 75             	add    BYTE PTR [rcx+0x75],dl
    ebdf:	65 72 79             	gs jb  ec5b <_IO_stdin_used+0x1c5b>
    ebe2:	3a 20                	cmp    ah,BYTE PTR [rax]
    ebe4:	25 73 0a 00 4c       	and    eax,0x4c000a73
    ebe9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ebea:	67 69 6e 20 69 6e 63 	imul   ebp,DWORD PTR [esi+0x20],0x6f636e69
    ebf1:	6f 
    ebf2:	72 72                	jb     ec66 <_IO_stdin_used+0x1c66>
    ebf4:	65 63 74 00 6c       	movsxd esi,DWORD PTR gs:[rax+rax*1+0x6c]
    ebf9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ebfa:	67 69 6e 20 69 6e 63 	imul   ebp,DWORD PTR [esi+0x20],0x6f636e69
    ec01:	6f 
    ec02:	72 72                	jb     ec76 <_IO_stdin_used+0x1c76>
    ec04:	65 63 74 00 50       	movsxd esi,DWORD PTR gs:[rax+rax*1+0x50]
    ec09:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ec0a:	73 73                	jae    ec7f <_IO_stdin_used+0x1c7f>
    ec0c:	69 62 6c 65 20 46 54 	imul   esp,DWORD PTR [rdx+0x6c],0x54462065
    ec13:	50                   	push   rax
    ec14:	20 62 72             	and    BYTE PTR [rdx+0x72],ah
    ec17:	75 74                	jne    ec8d <_IO_stdin_used+0x1c8d>
    ec19:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    ec1d:	72 63                	jb     ec82 <_IO_stdin_used+0x1c82>
    ec1f:	65 20 61 74          	and    BYTE PTR gs:[rcx+0x74],ah
    ec23:	74 65                	je     ec8a <_IO_stdin_used+0x1c8a>
    ec25:	6d                   	ins    DWORD PTR es:[rdi],dx
    ec26:	70 74                	jo     ec9c <_IO_stdin_used+0x1c9c>
    ec28:	3a 20                	cmp    ah,BYTE PTR [rax]
    ec2a:	25 73 28 73 75       	and    eax,0x75732873
    ec2f:	73 70                	jae    eca1 <_IO_stdin_used+0x1ca1>
    ec31:	65 63 74 29 20       	movsxd esi,DWORD PTR gs:[rcx+rbp*1+0x20]
    ec36:	2d 3e 20 25 73       	sub    eax,0x7325203e
    ec3b:	2e 20 25 64 20 66 61 	cs and BYTE PTR [rip+0x61662064],ah        # 61670ca6 <_end+0x6153449e>
    ec42:	69 6c 65 64 20 6c 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x676f6c20
    ec49:	67 
    ec4a:	69 6e 73 0a 00 00 53 	imul   ebp,DWORD PTR [rsi+0x73],0x5300000a
    ec51:	50                   	push   rax
    ec52:	49 20 54 41 42       	rex.WB and BYTE PTR [r9+rax*2+0x42],dl
    ec57:	4c                   	rex.WR
    ec58:	45 20 52 45          	and    BYTE PTR [r10+0x45],r10b
    ec5c:	54                   	push   rsp
    ec5d:	52                   	push   rdx
    ec5e:	41                   	rex.B
    ec5f:	4e 53                	rex.WRX push rbx
    ec61:	3a 20                	cmp    ah,BYTE PTR [rax]
    ec63:	25 64 3a 20 25       	and    eax,0x25203a64
    ec68:	73 3a                	jae    eca4 <_IO_stdin_used+0x1ca4>
    ec6a:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    ec6f:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642626e8 <_end+0x64125ee0>
    ec75:	0a 00                	or     al,BYTE PTR [rax]
    ec77:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    ec7a:	49 20 4e 45          	rex.WB and BYTE PTR [r14+0x45],cl
    ec7e:	57                   	push   rdi
    ec7f:	20 43 4f             	and    BYTE PTR [rbx+0x4f],al
    ec82:	4e 56                	rex.WRX push rsi
    ec84:	3a 20                	cmp    ah,BYTE PTR [rax]
    ec86:	25 64 3a 20 25       	and    eax,0x25203a64
    ec8b:	73 3a                	jae    ecc7 <_IO_stdin_used+0x1cc7>
    ec8d:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    ec92:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 6426270b <_end+0x64125f03>
    ec98:	0a 00                	or     al,BYTE PTR [rax]
    ec9a:	00 00                	add    BYTE PTR [rax],al
    ec9c:	00 00                	add    BYTE PTR [rax],al
    ec9e:	00 00                	add    BYTE PTR [rax],al
    eca0:	53                   	push   rbx
    eca1:	50                   	push   rax
    eca2:	49 20 54 57 48       	rex.WB and BYTE PTR [r15+rdx*2+0x48],dl
    eca7:	20 32                	and    BYTE PTR [rdx],dh
    eca9:	2f                   	(bad)  
    ecaa:	33 3a                	xor    edi,DWORD PTR [rdx]
    ecac:	20 25 64 3a 20 25    	and    BYTE PTR [rip+0x25203a64],ah        # 25212716 <_end+0x250d5f0e>
    ecb2:	73 3a                	jae    ecee <_IO_stdin_used+0x1cee>
    ecb4:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    ecb9:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64262732 <_end+0x64125f2a>
    ecbf:	0a 00                	or     al,BYTE PTR [rax]
    ecc1:	00 00                	add    BYTE PTR [rax],al
    ecc3:	00 00                	add    BYTE PTR [rax],al
    ecc5:	00 00                	add    BYTE PTR [rax],al
    ecc7:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    ecca:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    ecce:	54                   	push   rsp
    eccf:	52                   	push   rdx
    ecd0:	59                   	pop    rcx
    ecd1:	3a 20                	cmp    ah,BYTE PTR [rax]
    ecd3:	25 64 3a 20 53       	and    eax,0x53203a64
    ecd8:	45 53                	rex.RB push r11
    ecda:	53                   	push   rbx
    ecdb:	49                   	rex.WB
    ecdc:	4f                   	rex.WRXB
    ecdd:	4e 20 45 53          	rex.WRX and BYTE PTR [rbp+0x53],r8b
    ece1:	54                   	push   rsp
    ece2:	3a 20                	cmp    ah,BYTE PTR [rax]
    ece4:	25 73 3a 25 64       	and    eax,0x64253a73
    ece9:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 73260d2d <_end+0x73124525>
    ecef:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # f759 <__GNU_EH_FRAME_HDR+0x461>
    ecf5:	00 00                	add    BYTE PTR [rax],al
    ecf7:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    ecfa:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    ecfe:	54                   	push   rsp
    ecff:	52                   	push   rdx
    ed00:	59                   	pop    rcx
    ed01:	3a 20                	cmp    ah,BYTE PTR [rax]
    ed03:	25 64 3a 20 50       	and    eax,0x50203a64
    ed08:	4f                   	rex.WRXB
    ed09:	4c                   	rex.WR
    ed0a:	49 54                	rex.WB push r12
    ed0c:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    ed10:	4e 56                	rex.WRX push rsi
    ed12:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    ed15:	44 20 33             	and    BYTE PTR [rbx],r14b
    ed18:	2f                   	(bad)  
    ed19:	33 3a                	xor    edi,DWORD PTR [rdx]
    ed1b:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64262794 <_end+0x64125f8c>
    ed21:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 73260d65 <_end+0x7312455d>
    ed27:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # f791 <__GNU_EH_FRAME_HDR+0x499>
    ed2d:	00 00                	add    BYTE PTR [rax],al
    ed2f:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    ed32:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    ed36:	54                   	push   rsp
    ed37:	52                   	push   rdx
    ed38:	59                   	pop    rcx
    ed39:	3a 20                	cmp    ah,BYTE PTR [rax]
    ed3b:	25 64 3a 20 50       	and    eax,0x50203a64
    ed40:	4f                   	rex.WRXB
    ed41:	4c                   	rex.WR
    ed42:	49 54                	rex.WB push r12
    ed44:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    ed48:	4e 56                	rex.WRX push rsi
    ed4a:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    ed4d:	44 20 32             	and    BYTE PTR [rdx],r14b
    ed50:	2f                   	(bad)  
    ed51:	33 3a                	xor    edi,DWORD PTR [rdx]
    ed53:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642627cc <_end+0x64125fc4>
    ed59:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 73260d9d <_end+0x73124595>
    ed5f:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # f7c9 <__GNU_EH_FRAME_HDR+0x4d1>
    ed65:	00 00                	add    BYTE PTR [rax],al
    ed67:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    ed6a:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    ed6e:	54                   	push   rsp
    ed6f:	52                   	push   rdx
    ed70:	59                   	pop    rcx
    ed71:	3a 20                	cmp    ah,BYTE PTR [rax]
    ed73:	25 64 3a 20 50       	and    eax,0x50203a64
    ed78:	4f                   	rex.WRXB
    ed79:	4c                   	rex.WR
    ed7a:	49 54                	rex.WB push r12
    ed7c:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    ed80:	4e 56                	rex.WRX push rsi
    ed82:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    ed85:	44 20 31             	and    BYTE PTR [rcx],r14b
    ed88:	2f                   	(bad)  
    ed89:	33 3a                	xor    edi,DWORD PTR [rdx]
    ed8b:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64262804 <_end+0x64125ffc>
    ed91:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 73260dd5 <_end+0x731245cd>
    ed97:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # f801 <__GNU_EH_FRAME_HDR+0x509>
    ed9d:	00 00                	add    BYTE PTR [rax],al
    ed9f:	00 61 00             	add    BYTE PTR [rcx+0x0],ah
    eda2:	00 00                	add    BYTE PTR [rax],al
    eda4:	00 00                	add    BYTE PTR [rax],al
    eda6:	00 00                	add    BYTE PTR [rax],al
    eda8:	43 52                	rex.XB push r10
    edaa:	49 54                	rex.WB push r12
    edac:	49                   	rex.WB
    edad:	43                   	rex.XB
    edae:	41                   	rex.B
    edaf:	4c 20 46 41          	rex.WR and BYTE PTR [rsi+0x41],r8b
    edb3:	49                   	rex.WB
    edb4:	4c                   	rex.WR
    edb5:	45                   	rex.RB
    edb6:	44 20 54 4f 20       	and    BYTE PTR [rdi+rcx*2+0x20],r10b
    edbb:	4f 50                	rex.WRXB push r8
    edbd:	45                   	rex.RB
    edbe:	4e 20 46 49          	rex.WRX and BYTE PTR [rsi+0x49],r8b
    edc2:	4c                   	rex.WR
    edc3:	45 20 46 4f          	and    BYTE PTR [r14+0x4f],r8b
    edc7:	52                   	push   rdx
    edc8:	20 4c 4f 47          	and    BYTE PTR [rdi+rcx*2+0x47],cl
    edcc:	47                   	rex.RXB
    edcd:	49                   	rex.WB
    edce:	4e                   	rex.WRX
    edcf:	47 3a 20             	rex.RXB cmp r12b,BYTE PTR [r8]
    edd2:	25 73 0a 00 25       	and    eax,0x25000a73
    edd7:	73 20                	jae    edf9 <_IO_stdin_used+0x1df9>
    edd9:	25 73 20 25 73       	and    eax,0x73252073
    edde:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 73260e22 <_end+0x7312461a>
    ede4:	0a 00                	or     al,BYTE PTR [rax]
    ede6:	25 73 20 25 73       	and    eax,0x73252073
    edeb:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64262864 <_end+0x6412605c>
    edf1:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 73260e35 <_end+0x7312462d>
    edf7:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # f861 <__GNU_EH_FRAME_HDR+0x569>
    edfd:	00 00                	add    BYTE PTR [rax],al
    edff:	00 61 6e             	add    BYTE PTR [rcx+0x6e],ah
    ee02:	79 00                	jns    ee04 <_IO_stdin_used+0x1e04>
    ee04:	41                   	rex.B
    ee05:	4e 59                	rex.WRX pop rcx
    ee07:	00 49 43             	add    BYTE PTR [rcx+0x43],cl
    ee0a:	4d 50                	rex.WRB push r8
    ee0c:	00 54 43 50          	add    BYTE PTR [rbx+rax*2+0x50],dl
    ee10:	00 55 44             	add    BYTE PTR [rbp+0x44],dl
    ee13:	50                   	push   rax
    ee14:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    ee17:	72 5f                	jb     ee78 <_IO_stdin_used+0x1e78>
    ee19:	6d                   	ins    DWORD PTR es:[rdi],dx
    ee1a:	61                   	(bad)  
    ee1b:	74 63                	je     ee80 <_IO_stdin_used+0x1e80>
    ee1d:	68 00 6e 6f 6e       	push   0x6e6f6e00
    ee22:	65 00 70 63          	add    BYTE PTR gs:[rax+0x63],dh
    ee26:	72 65                	jb     ee8d <_IO_stdin_used+0x1e8d>
    ee28:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    ee2b:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    ee2f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ee30:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    ee33:	6c                   	ins    BYTE PTR es:[rdi],dx
    ee34:	65 20 74 79 70       	and    BYTE PTR gs:[rcx+rdi*2+0x70],dh
    ee39:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    ee3c:	25 73 0a 00 3b       	and    eax,0x3b000a73
    ee41:	00 46 6f             	add    BYTE PTR [rsi+0x6f],al
    ee44:	75 6e                	jne    eeb4 <_IO_stdin_used+0x1eb4>
    ee46:	64 20 6f 70          	and    BYTE PTR fs:[rdi+0x70],ch
    ee4a:	65 72 61             	gs jb  eeae <_IO_stdin_used+0x1eae>
    ee4d:	74 6f                	je     eebe <_IO_stdin_used+0x1ebe>
    ee4f:	72 00                	jb     ee51 <_IO_stdin_used+0x1e51>
    ee51:	61                   	(bad)  
    ee52:	6c                   	ins    BYTE PTR es:[rdi],dx
    ee53:	65 72 74             	gs jb  eeca <_IO_stdin_used+0x1eca>
    ee56:	00 24 68             	add    BYTE PTR [rax+rbp*2],ah
    ee59:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ee5a:	6d                   	ins    DWORD PTR es:[rdi],dx
    ee5b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    ee5d:	65 74 00             	gs je  ee60 <_IO_stdin_used+0x1e60>
    ee60:	2d 3e 00 3c 3e       	sub    eax,0x3e3c003e
    ee65:	00 24 65 78 74 65 72 	add    BYTE PTR [riz*2+0x72657478],ah
    ee6c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ee6d:	61                   	(bad)  
    ee6e:	6c                   	ins    BYTE PTR es:[rdi],dx
    ee6f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ee70:	65 74 00             	gs je  ee73 <_IO_stdin_used+0x1e73>
    ee73:	22 3b                	and    bh,BYTE PTR [rbx]
    ee75:	00 6e 61             	add    BYTE PTR [rsi+0x61],ch
    ee78:	6d                   	ins    DWORD PTR es:[rdi],dx
    ee79:	65 3a 22             	cmp    ah,BYTE PTR gs:[rdx]
    ee7c:	00 6d 73             	add    BYTE PTR [rbp+0x73],ch
    ee7f:	67 3a 22             	cmp    ah,BYTE PTR [edx]
    ee82:	00 64 65 70          	add    BYTE PTR [rbp+riz*2+0x70],ah
    ee86:	74 68                	je     eef0 <_IO_stdin_used+0x1ef0>
    ee88:	3a 00                	cmp    al,BYTE PTR [rax]
    ee8a:	74 79                	je     ef05 <_IO_stdin_used+0x1f05>
    ee8c:	70 65                	jo     eef3 <_IO_stdin_used+0x1ef3>
    ee8e:	3a 00                	cmp    al,BYTE PTR [rax]
    ee90:	74 61                	je     eef3 <_IO_stdin_used+0x1ef3>
    ee92:	72 67                	jb     eefb <_IO_stdin_used+0x1efb>
    ee94:	65 74 3a             	gs je  eed1 <_IO_stdin_used+0x1ed1>
    ee97:	22 00                	and    al,BYTE PTR [rax]
    ee99:	73 65                	jae    ef00 <_IO_stdin_used+0x1f00>
    ee9b:	76 3a                	jbe    eed7 <_IO_stdin_used+0x1ed7>
    ee9d:	00 00                	add    BYTE PTR [rax],al
    ee9f:	00 52 75             	add    BYTE PTR [rdx+0x75],dl
    eea2:	6c                   	ins    BYTE PTR es:[rdi],dx
    eea3:	65 20 73 65          	and    BYTE PTR gs:[rbx+0x65],dh
    eea7:	76 65                	jbe    ef0e <_IO_stdin_used+0x1f0e>
    eea9:	72 69                	jb     ef14 <_IO_stdin_used+0x1f14>
    eeab:	74 79                	je     ef26 <_IO_stdin_used+0x1f26>
    eead:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    eeb0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    eeb1:	75 6c                	jne    ef1f <_IO_stdin_used+0x1f1f>
    eeb3:	64 20 62 65          	and    BYTE PTR fs:[rdx+0x65],ah
    eeb7:	20 3e                	and    BYTE PTR [rsi],bh
    eeb9:	20 30                	and    BYTE PTR [rax],dh
    eebb:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    eebe:	64 20 3c 3d 20 31 30 	and    BYTE PTR fs:[rdi*1+0x303120],bh
    eec5:	00 
    eec6:	00 00                	add    BYTE PTR [rax],al
    eec8:	52                   	push   rdx
    eec9:	75 6c                	jne    ef37 <_IO_stdin_used+0x1f37>
    eecb:	65 20 73 65          	and    BYTE PTR gs:[rbx+0x65],dh
    eecf:	76 65                	jbe    ef36 <_IO_stdin_used+0x1f36>
    eed1:	72 69                	jb     ef3c <_IO_stdin_used+0x1f3c>
    eed3:	74 79                	je     ef4e <_IO_stdin_used+0x1f4e>
    eed5:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    eed8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    eed9:	75 6c                	jne    ef47 <_IO_stdin_used+0x1f47>
    eedb:	64 20 62 65          	and    BYTE PTR fs:[rdx+0x65],ah
    eedf:	20 61 20             	and    BYTE PTR [rcx+0x20],ah
    eee2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    eee3:	75 6d                	jne    ef52 <_IO_stdin_used+0x1f52>
    eee5:	65 72 69             	gs jb  ef51 <_IO_stdin_used+0x1f51>
    eee8:	63 20                	movsxd esp,DWORD PTR [rax]
    eeea:	76 61                	jbe    ef4d <_IO_stdin_used+0x1f4d>
    eeec:	6c                   	ins    BYTE PTR es:[rdi],dx
    eeed:	75 65                	jne    ef54 <_IO_stdin_used+0x1f54>
    eeef:	00 69 74             	add    BYTE PTR [rcx+0x74],ch
    eef2:	79 70                	jns    ef64 <_IO_stdin_used+0x1f64>
    eef4:	65 3a 00             	cmp    al,BYTE PTR gs:[rax]
    eef7:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    eef9:	76 61                	jbe    ef5c <_IO_stdin_used+0x1f5c>
    eefb:	6c                   	ins    BYTE PTR es:[rdi],dx
    eefc:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    ef03:	20 
    ef04:	74 79                	je     ef7f <_IO_stdin_used+0x1f7f>
    ef06:	70 65                	jo     ef6d <_IO_stdin_used+0x1f6d>
    ef08:	20 76 61             	and    BYTE PTR [rsi+0x61],dh
    ef0b:	6c                   	ins    BYTE PTR es:[rdi],dx
    ef0c:	75 65                	jne    ef73 <_IO_stdin_used+0x1f73>
    ef0e:	00 00                	add    BYTE PTR [rax],al
    ef10:	25 73 3a 20 69       	and    eax,0x69203a73
    ef15:	74 79                	je     ef90 <_IO_stdin_used+0x1f90>
    ef17:	70 65                	jo     ef7e <_IO_stdin_used+0x1f7e>
    ef19:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    ef1c:	6c                   	ins    BYTE PTR es:[rdi],dx
    ef1d:	79 20                	jns    ef3f <_IO_stdin_used+0x1f3f>
    ef1f:	61                   	(bad)  
    ef20:	70 70                	jo     ef92 <_IO_stdin_used+0x1f92>
    ef22:	6c                   	ins    BYTE PTR es:[rdi],dx
    ef23:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    ef2a:	72 75                	jb     efa1 <_IO_stdin_used+0x1fa1>
    ef2c:	6c                   	ins    BYTE PTR es:[rdi],dx
    ef2d:	65 73 20             	gs jae ef50 <_IO_stdin_used+0x1f50>
    ef30:	77 69                	ja     ef9b <_IO_stdin_used+0x1f9b>
    ef32:	74 68                	je     ef9c <_IO_stdin_used+0x1f9c>
    ef34:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    ef37:	4d 50                	rex.WRB push r8
    ef39:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    ef3c:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    ef3f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ef40:	74 6f                	je     efb1 <_IO_stdin_used+0x1fb1>
    ef42:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    ef45:	0a 00                	or     al,BYTE PTR [rax]
    ef47:	69 63 6f 64 65 3a 00 	imul   esp,DWORD PTR [rbx+0x6f],0x3a6564
    ef4e:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    ef50:	76 61                	jbe    efb3 <_IO_stdin_used+0x1fb3>
    ef52:	6c                   	ins    BYTE PTR es:[rdi],dx
    ef53:	69 64 65 20 69 63 6d 	imul   esp,DWORD PTR [rbp+riz*2+0x20],0x706d6369
    ef5a:	70 
    ef5b:	20 63 6f             	and    BYTE PTR [rbx+0x6f],ah
    ef5e:	64 65 20 76 61       	fs and BYTE PTR gs:[rsi+0x61],dh
    ef63:	6c                   	ins    BYTE PTR es:[rdi],dx
    ef64:	75 65                	jne    efcb <_IO_stdin_used+0x1fcb>
    ef66:	00 00                	add    BYTE PTR [rax],al
    ef68:	69 63 6f 64 65 20 6f 	imul   esp,DWORD PTR [rbx+0x6f],0x6f206564
    ef6f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ef70:	6c                   	ins    BYTE PTR es:[rdi],dx
    ef71:	79 20                	jns    ef93 <_IO_stdin_used+0x1f93>
    ef73:	61                   	(bad)  
    ef74:	70 70                	jo     efe6 <_IO_stdin_used+0x1fe6>
    ef76:	6c                   	ins    BYTE PTR es:[rdi],dx
    ef77:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    ef7e:	72 75                	jb     eff5 <_IO_stdin_used+0x1ff5>
    ef80:	6c                   	ins    BYTE PTR es:[rdi],dx
    ef81:	65 73 20             	gs jae efa4 <_IO_stdin_used+0x1fa4>
    ef84:	77 69                	ja     efef <_IO_stdin_used+0x1fef>
    ef86:	74 68                	je     eff0 <_IO_stdin_used+0x1ff0>
    ef88:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    ef8b:	4d 50                	rex.WRB push r8
    ef8d:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    ef90:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    ef93:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ef94:	74 6f                	je     f005 <_IO_stdin_used+0x2005>
    ef96:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    ef99:	00 69 63             	add    BYTE PTR [rcx+0x63],ch
    ef9c:	6d                   	ins    DWORD PTR es:[rdi],dx
    ef9d:	70 5f                	jo     effe <_IO_stdin_used+0x1ffe>
    ef9f:	69 64 3a 00 49 6e 76 	imul   esp,DWORD PTR [rdx+rdi*1+0x0],0x61766e49
    efa6:	61 
    efa7:	6c                   	ins    BYTE PTR es:[rdi],dx
    efa8:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    efaf:	20 
    efb0:	69 64 20 76 61 6c 75 	imul   esp,DWORD PTR [rax+riz*1+0x76],0x65756c61
    efb7:	65 
	...
    efc0:	49                   	rex.WB
    efc1:	43                   	rex.XB
    efc2:	4d 50                	rex.WRB push r8
    efc4:	20 49 44             	and    BYTE PTR [rcx+0x44],cl
    efc7:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    efca:	6c                   	ins    BYTE PTR es:[rdi],dx
    efcb:	79 20                	jns    efed <_IO_stdin_used+0x1fed>
    efcd:	61                   	(bad)  
    efce:	70 70                	jo     f040 <_IO_stdin_used+0x2040>
    efd0:	6c                   	ins    BYTE PTR es:[rdi],dx
    efd1:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    efd8:	72 75                	jb     f04f <_IO_stdin_used+0x204f>
    efda:	6c                   	ins    BYTE PTR es:[rdi],dx
    efdb:	65 73 20             	gs jae effe <_IO_stdin_used+0x1ffe>
    efde:	77 69                	ja     f049 <_IO_stdin_used+0x2049>
    efe0:	74 68                	je     f04a <_IO_stdin_used+0x204a>
    efe2:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    efe5:	4d 50                	rex.WRB push r8
    efe7:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    efea:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    efed:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    efee:	74 6f                	je     f05f <_IO_stdin_used+0x205f>
    eff0:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    eff3:	00 69 63             	add    BYTE PTR [rcx+0x63],ch
    eff6:	6d                   	ins    DWORD PTR es:[rdi],dx
    eff7:	70 5f                	jo     f058 <_IO_stdin_used+0x2058>
    eff9:	73 65                	jae    f060 <_IO_stdin_used+0x2060>
    effb:	71 3a                	jno    f037 <_IO_stdin_used+0x2037>
    effd:	00 49 6e             	add    BYTE PTR [rcx+0x6e],cl
    f000:	76 61                	jbe    f063 <_IO_stdin_used+0x2063>
    f002:	6c                   	ins    BYTE PTR es:[rdi],dx
    f003:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    f00a:	20 
    f00b:	73 65                	jae    f072 <_IO_stdin_used+0x2072>
    f00d:	71 75                	jno    f084 <_IO_stdin_used+0x2084>
    f00f:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    f011:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    f014:	76 61                	jbe    f077 <_IO_stdin_used+0x2077>
    f016:	6c                   	ins    BYTE PTR es:[rdi],dx
    f017:	75 65                	jne    f07e <_IO_stdin_used+0x207e>
    f019:	00 74 74 6c          	add    BYTE PTR [rsp+rsi*2+0x6c],dh
    f01d:	3a 00                	cmp    al,BYTE PTR [rax]
    f01f:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    f021:	76 61                	jbe    f084 <_IO_stdin_used+0x2084>
    f023:	6c                   	ins    BYTE PTR es:[rdi],dx
    f024:	69 64 20 74 74 6c 20 	imul   esp,DWORD PTR [rax+riz*1+0x74],0x76206c74
    f02b:	76 
    f02c:	61                   	(bad)  
    f02d:	6c                   	ins    BYTE PTR es:[rdi],dx
    f02e:	75 65                	jne    f095 <_IO_stdin_used+0x2095>
    f030:	00 66 6c             	add    BYTE PTR [rsi+0x6c],ah
    f033:	61                   	(bad)  
    f034:	67 73 3a             	addr32 jae f071 <_IO_stdin_used+0x2071>
    f037:	22 00                	and    al,BYTE PTR [rax]
    f039:	00 00                	add    BYTE PTR [rax],al
    f03b:	00 00                	add    BYTE PTR [rax],al
    f03d:	00 00                	add    BYTE PTR [rax],al
    f03f:	00 66 6c             	add    BYTE PTR [rsi+0x6c],ah
    f042:	61                   	(bad)  
    f043:	67 73 20             	addr32 jae f066 <_IO_stdin_used+0x2066>
    f046:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    f047:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    f048:	6c                   	ins    BYTE PTR es:[rdi],dx
    f049:	79 20                	jns    f06b <_IO_stdin_used+0x206b>
    f04b:	61                   	(bad)  
    f04c:	70 70                	jo     f0be <_IO_stdin_used+0x20be>
    f04e:	6c                   	ins    BYTE PTR es:[rdi],dx
    f04f:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    f056:	72 75                	jb     f0cd <_IO_stdin_used+0x20cd>
    f058:	6c                   	ins    BYTE PTR es:[rdi],dx
    f059:	65 73 20             	gs jae f07c <_IO_stdin_used+0x207c>
    f05c:	77 69                	ja     f0c7 <_IO_stdin_used+0x20c7>
    f05e:	74 68                	je     f0c8 <_IO_stdin_used+0x20c8>
    f060:	20 74 63 70          	and    BYTE PTR [rbx+riz*2+0x70],dh
    f064:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    f067:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    f06a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    f06b:	74 6f                	je     f0dc <_IO_stdin_used+0x20dc>
    f06d:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    f070:	00 61 63             	add    BYTE PTR [rcx+0x63],ah
    f073:	6b 3a 00             	imul   edi,DWORD PTR [rdx],0x0
    f076:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    f078:	76 61                	jbe    f0db <_IO_stdin_used+0x20db>
    f07a:	6c                   	ins    BYTE PTR es:[rdi],dx
    f07b:	69 64 20 61 63 6b 20 	imul   esp,DWORD PTR [rax+riz*1+0x61],0x76206b63
    f082:	76 
    f083:	61                   	(bad)  
    f084:	6c                   	ins    BYTE PTR es:[rdi],dx
    f085:	75 65                	jne    f0ec <_IO_stdin_used+0x20ec>
    f087:	00 70 63             	add    BYTE PTR [rax+0x63],dh
    f08a:	72 65                	jb     f0f1 <_IO_stdin_used+0x20f1>
    f08c:	3a 22                	cmp    ah,BYTE PTR [rdx]
    f08e:	00 00                	add    BYTE PTR [rax],al
    f090:	46 61                	rex.RX (bad) 
    f092:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    f099:	20 
    f09a:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    f09d:	70 69                	jo     f108 <_IO_stdin_used+0x2108>
    f09f:	6c                   	ins    BYTE PTR es:[rdi],dx
    f0a0:	65 20 72 65          	and    BYTE PTR gs:[rdx+0x65],dh
    f0a4:	67 75 6c             	addr32 jne f113 <_IO_stdin_used+0x2113>
    f0a7:	61                   	(bad)  
    f0a8:	72 20                	jb     f0ca <_IO_stdin_used+0x20ca>
    f0aa:	65 78 70             	gs js  f11d <_IO_stdin_used+0x211d>
    f0ad:	72 65                	jb     f114 <_IO_stdin_used+0x2114>
    f0af:	73 73                	jae    f124 <_IO_stdin_used+0x2124>
    f0b1:	69 6f 6e 00 64 73 69 	imul   ebp,DWORD PTR [rdi+0x6e],0x69736400
    f0b8:	7a 65                	jp     f11f <_IO_stdin_used+0x211f>
    f0ba:	3a 00                	cmp    al,BYTE PTR [rax]
    f0bc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    f0bd:	66 66 73 65          	data16 data16 jae f126 <_IO_stdin_used+0x2126>
    f0c1:	74 3a                	je     f0fd <_IO_stdin_used+0x20fd>
    f0c3:	00 65 73             	add    BYTE PTR [rbp+0x73],ah
    f0c6:	74 61                	je     f129 <_IO_stdin_used+0x2129>
    f0c8:	62                   	(bad)  
    f0c9:	6c                   	ins    BYTE PTR es:[rdi],dx
    f0ca:	69 73 68 65 64 00 25 	imul   esi,DWORD PTR [rbx+0x68],0x25006465
    f0d1:	63 00                	movsxd eax,DWORD PTR [rax]
    f0d3:	25 30 32 78 00       	and    eax,0x783230
    f0d8:	3e 00 3c 00          	ds add BYTE PTR [rax+rax*1],bh
    f0dc:	21 00                	and    DWORD PTR [rax],eax
    f0de:	3c 3d                	cmp    al,0x3d
    f0e0:	00 3e                	add    BYTE PTR [rsi],bh
    f0e2:	3d 00 55 6e 73       	cmp    eax,0x736e5500
    f0e7:	75 70                	jne    f159 <_IO_stdin_used+0x2159>
    f0e9:	70 6f                	jo     f15a <_IO_stdin_used+0x215a>
    f0eb:	72 74                	jb     f161 <_IO_stdin_used+0x2161>
    f0ed:	65 64 20 6f 70       	gs and BYTE PTR fs:[rdi+0x70],ch
    f0f2:	65 72 61             	gs jb  f156 <_IO_stdin_used+0x2156>
    f0f5:	74 6f                	je     f166 <_IO_stdin_used+0x2166>
    f0f7:	72 00                	jb     f0f9 <_IO_stdin_used+0x20f9>
    f0f9:	00 00                	add    BYTE PTR [rax],al
    f0fb:	00 a1 d2 ff ff f3    	add    BYTE PTR [rcx-0xc00002e],ah
    f101:	d2 ff                	sar    bh,cl
    f103:	ff 0c d3             	dec    DWORD PTR [rbx+rdx*8]
    f106:	ff                   	(bad)  
    f107:	ff c1                	inc    ecx
    f109:	d2 ff                	sar    bh,cl
    f10b:	ff                   	(bad)  
    f10c:	da d2                	fcmovbe st,st(2)
    f10e:	ff                   	(bad)  
    f10f:	ff 25 d3 ff ff 2e    	jmp    QWORD PTR [rip+0x2effffd3]        # 2f00f0e8 <_end+0x2eed28e0>
    f115:	00 25 30 32 78 00    	add    BYTE PTR [rip+0x783230],ah        # 79234b <_end+0x655b43>
    f11b:	25 30 32 78 20       	and    eax,0x20783230
    f120:	2d 2d 20 25 30       	sub    eax,0x3025202d
    f125:	32 78 0a             	xor    bh,BYTE PTR [rax+0xa]
	...
    f130:	73 72                	jae    f1a4 <_IO_stdin_used+0x21a4>
    f132:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    f134:	6c                   	ins    BYTE PTR es:[rdi],dx
    f135:	75 61                	jne    f198 <_IO_stdin_used+0x2198>
    f137:	2f                   	(bad)  
    f138:	73 63                	jae    f19d <_IO_stdin_used+0x219d>
    f13a:	72 69                	jb     f1a5 <_IO_stdin_used+0x21a5>
    f13c:	70 74                	jo     f1b2 <_IO_stdin_used+0x21b2>
    f13e:	73 2f                	jae    f16f <_IO_stdin_used+0x216f>
    f140:	68 65 6c 6c 6f       	push   0x6f6c6c65
    f145:	74 65                	je     f1ac <_IO_stdin_used+0x21ac>
    f147:	73 74                	jae    f1bd <_IO_stdin_used+0x21bd>
    f149:	2e 6c                	cs ins BYTE PTR es:[rdi],dx
    f14b:	75 61                	jne    f1ae <_IO_stdin_used+0x21ae>
    f14d:	00 72 00             	add    BYTE PTR [rdx+0x0],dh
    f150:	2f                   	(bad)  
    f151:	65 74 63             	gs je  f1b7 <_IO_stdin_used+0x21b7>
    f154:	2f                   	(bad)  
    f155:	76 69                	jbe    f1c0 <_IO_stdin_used+0x21c0>
    f157:	67 69 6c 2f 6c 73 63 	imul   ebp,DWORD PTR [edi+ebp*1+0x6c],0x69726373
    f15e:	72 69 
    f160:	70 74                	jo     f1d6 <_IO_stdin_used+0x21d6>
    f162:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    f166:	66 00 46 61          	data16 add BYTE PTR [rsi+0x61],al
    f16a:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    f171:	20 
    f172:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    f175:	6c                   	ins    BYTE PTR es:[rdi],dx
    f176:	65 63 74 20 4c       	movsxd esi,DWORD PTR gs:[rax+riz*1+0x4c]
    f17b:	75 61                	jne    f1de <_IO_stdin_used+0x21de>
    f17d:	20 73 63             	and    BYTE PTR [rbx+0x63],dh
    f180:	72 69                	jb     f1eb <_IO_stdin_used+0x21eb>
    f182:	70 74                	jo     f1f8 <_IO_stdin_used+0x21f8>
    f184:	73 3a                	jae    f1c0 <_IO_stdin_used+0x21c0>
    f186:	20 2f                	and    BYTE PTR [rdi],ch
    f188:	65 74 63             	gs je  f1ee <_IO_stdin_used+0x21ee>
    f18b:	2f                   	(bad)  
    f18c:	76 69                	jbe    f1f7 <_IO_stdin_used+0x21f7>
    f18e:	67 69 6c 2f 6c 73 63 	imul   ebp,DWORD PTR [edi+ebp*1+0x6c],0x69726373
    f195:	72 69 
    f197:	70 74                	jo     f20d <_IO_stdin_used+0x220d>
    f199:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    f19d:	66 20 6e 6f          	data16 and BYTE PTR [rsi+0x6f],ch
    f1a1:	74 20                	je     f1c3 <_IO_stdin_used+0x21c3>
    f1a3:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    f1a5:	75 6e                	jne    f215 <_IO_stdin_used+0x2215>
    f1a7:	64 2e 00 2e          	fs add BYTE PTR fs:[rsi],ch
    f1ab:	2a 2e                	sub    ch,BYTE PTR [rsi]
    f1ad:	6c                   	ins    BYTE PTR es:[rdi],dx
    f1ae:	75 61                	jne    f211 <_IO_stdin_used+0x2211>
    f1b0:	3a 2e                	cmp    ch,BYTE PTR [rsi]
    f1b2:	2a 00                	sub    al,BYTE PTR [rax]
    f1b4:	6c                   	ins    BYTE PTR es:[rdi],dx
    f1b5:	5f                   	pop    rdi
    f1b6:	73 63                	jae    f21b <_IO_stdin_used+0x221b>
    f1b8:	72 69                	jb     f223 <_IO_stdin_used+0x2223>
    f1ba:	70 74                	jo     f230 <_IO_stdin_used+0x2230>
    f1bc:	5f                   	pop    rdi
    f1bd:	72 6f                	jb     f22e <_IO_stdin_used+0x222e>
    f1bf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    f1c0:	74 3d                	je     f1ff <_IO_stdin_used+0x21ff>
    f1c2:	00 0a                	add    BYTE PTR [rdx],cl
    f1c4:	00 00                	add    BYTE PTR [rax],al
    f1c6:	00 00                	add    BYTE PTR [rax],al
    f1c8:	49 50                	rex.WB push r8
    f1ca:	76 36                	jbe    f202 <_IO_stdin_used+0x2202>
    f1cc:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2e1245 <_end+0x3e1a4a3d>
    f1d2:	20 25 73 20 50 72    	and    BYTE PTR [rip+0x72502073],ah        # 7251124b <_end+0x723d4a43>
    f1d8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    f1d9:	74 6f                	je     f24a <_IO_stdin_used+0x224a>
    f1db:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    f1de:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    f1e1:	6d                   	ins    DWORD PTR es:[rdi],dx
    f1e2:	62                   	(bad)  
    f1e3:	65 72 20             	gs jb  f206 <_IO_stdin_used+0x2206>
    f1e6:	3d 20 25 64 0a       	cmp    eax,0xa642520
    f1eb:	00 00                	add    BYTE PTR [rax],al
    f1ed:	00 00                	add    BYTE PTR [rax],al
    f1ef:	00 53 65             	add    BYTE PTR [rbx+0x65],dl
    f1f2:	67 6d                	ins    DWORD PTR es:[edi],dx
    f1f4:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    f1f6:	74 61                	je     f259 <_IO_stdin_used+0x2259>
    f1f8:	74 69                	je     f263 <_IO_stdin_used+0x2263>
    f1fa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    f1fb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    f1fc:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    f1ff:	75 6c                	jne    f26d <_IO_stdin_used+0x226d>
    f201:	74 20                	je     f223 <_IO_stdin_used+0x2223>
    f203:	61                   	(bad)  
    f204:	74 20                	je     f226 <_IO_stdin_used+0x2226>
    f206:	25 73 3a 20 61       	and    eax,0x61203a73
    f20b:	70 70                	jo     f27d <_IO_stdin_used+0x227d>
    f20d:	6c                   	ins    BYTE PTR es:[rdi],dx
    f20e:	69 63 61 74 69 6f 6e 	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
    f215:	20 63 72             	and    BYTE PTR [rbx+0x72],ah
    f218:	61                   	(bad)  
    f219:	73 68                	jae    f283 <_IO_stdin_used+0x2283>
    f21b:	65 64 0a 00          	gs or  al,BYTE PTR fs:[rax]
    f21f:	46 75 6e             	rex.RX jne f290 <_IO_stdin_used+0x2290>
    f222:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    f226:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    f227:	20 62 61             	and    BYTE PTR [rdx+0x61],ah
    f22a:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
    f22d:	72 61                	jb     f290 <_IO_stdin_used+0x2290>
    f22f:	63 65 3a             	movsxd esp,DWORD PTR [rbp+0x3a]
    f232:	00 52 65             	add    BYTE PTR [rdx+0x65],dl
    f235:	67 69 73 74 65 72 20 	imul   esi,DWORD PTR [ebx+0x74],0x44207265
    f23c:	44 
    f23d:	75 6d                	jne    f2ac <_IO_stdin_used+0x22ac>
    f23f:	70 3a                	jo     f27b <_IO_stdin_used+0x227b>
    f241:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    f244:	41 58                	pop    r8
    f246:	5d                   	pop    rbp
    f247:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 2579226d <_end+0x25655a65>
    f24d:	30 32                	xor    BYTE PTR [rdx],dh
    f24f:	78 0a                	js     f25b <_IO_stdin_used+0x225b>
    f251:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    f254:	42 58                	rex.X pop rax
    f256:	5d                   	pop    rbp
    f257:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 2579227d <_end+0x25655a75>
    f25d:	30 32                	xor    BYTE PTR [rdx],dh
    f25f:	78 0a                	js     f26b <_IO_stdin_used+0x226b>
    f261:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    f264:	43 58                	rex.XB pop r8
    f266:	5d                   	pop    rbp
    f267:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 2579228d <_end+0x25655a85>
    f26d:	30 32                	xor    BYTE PTR [rdx],dh
    f26f:	78 0a                	js     f27b <_IO_stdin_used+0x227b>
    f271:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    f274:	44 58                	rex.R pop rax
    f276:	5d                   	pop    rbp
    f277:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 2579229d <_end+0x25655a95>
    f27d:	30 32                	xor    BYTE PTR [rdx],dh
    f27f:	78 0a                	js     f28b <_IO_stdin_used+0x228b>
    f281:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    f284:	53                   	push   rbx
    f285:	50                   	push   rax
    f286:	5d                   	pop    rbp
    f287:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 257922ad <_end+0x25655aa5>
    f28d:	30 32                	xor    BYTE PTR [rdx],dh
    f28f:	78 0a                	js     f29b <_IO_stdin_used+0x229b>
    f291:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    f294:	42 50                	rex.X push rax
    f296:	5d                   	pop    rbp
    f297:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 257922bd <_end+0x25655ab5>
    f29d:	30 32                	xor    BYTE PTR [rdx],dh
    f29f:	78 0a                	js     f2ab <_IO_stdin_used+0x22ab>
    f2a1:	00 25 70 0a 00 30    	add    BYTE PTR [rip+0x30000a70],ah        # 3000fd17 <_end+0x2fed350f>
    f2a7:	78 25                	js     f2ce <_IO_stdin_used+0x22ce>
    f2a9:	30 32                	xor    BYTE PTR [rdx],dh
    f2ab:	78 0a                	js     f2b7 <_IO_stdin_used+0x22b7>
    f2ad:	00 25 70 00 50 72    	add    BYTE PTR [rip+0x72500070],ah        # 7250f323 <_end+0x723d2b1b>
    f2b3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    f2b4:	67 72 61             	addr32 jb f318 <__GNU_EH_FRAME_HDR+0x20>
    f2b7:	6d                   	ins    DWORD PTR es:[rdi],dx
    f2b8:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
    f2bb:	6d                   	ins    DWORD PTR es:[rdi],dx
    f2bc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    f2bd:	72 79                	jb     f338 <__GNU_EH_FRAME_HDR+0x40>
    f2bf:	20 6d 61             	and    BYTE PTR [rbp+0x61],ch
    f2c2:	70 70                	jo     f334 <__GNU_EH_FRAME_HDR+0x3c>
    f2c4:	69 6e 67 3a 00 25 73 	imul   ebp,DWORD PTR [rsi+0x67],0x7325003a
    f2cb:	20 5b 25             	and    BYTE PTR [rbx+0x25],bl
    f2ce:	73 5d                	jae    f32d <__GNU_EH_FRAME_HDR+0x35>
    f2d0:	0a 00                	or     al,BYTE PTR [rax]
    f2d2:	6d                   	ins    DWORD PTR es:[rdi],dx
    f2d3:	61                   	(bad)  
    f2d4:	69 6e 00 73 69 67 69 	imul   ebp,DWORD PTR [rsi+0x0],0x69676973
    f2db:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    f2dc:	74 5f                	je     f33d <__GNU_EH_FRAME_HDR+0x45>
    f2de:	70 72                	jo     f352 <__GNU_EH_FRAME_HDR+0x5a>
    f2e0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    f2e1:	63 65 73             	movsxd esp,DWORD PTR [rbp+0x73]
    f2e4:	73 6f                	jae    f355 <__GNU_EH_FRAME_HDR+0x5d>
    f2e6:	72 00                	jb     f2e8 <_IO_stdin_used+0x22e8>
    f2e8:	69 70 34 5f 74 63 70 	imul   esi,DWORD PTR [rax+0x34],0x7063745f
    f2ef:	5f                   	pop    rdi
    f2f0:	64 65 63 6f 64       	fs movsxd ebp,DWORD PTR gs:[rdi+0x64]
    f2f5:	65                   	gs
	...

Disassembly of section .eh_frame_hdr:

000000000000f2f8 <__GNU_EH_FRAME_HDR>:
    f2f8:	01 1b                	add    DWORD PTR [rbx],ebx
    f2fa:	03 3b                	add    edi,DWORD PTR [rbx]
    f2fc:	dc 03                	fadd   QWORD PTR [rbx]
    f2fe:	00 00                	add    BYTE PTR [rax],al
    f300:	7a 00                	jp     f302 <__GNU_EH_FRAME_HDR+0xa>
    f302:	00 00                	add    BYTE PTR [rax],al
    f304:	28 2d ff ff 10 04    	sub    BYTE PTR [rip+0x410ffff],ch        # 411f309 <_end+0x3fe2b01>
    f30a:	00 00                	add    BYTE PTR [rax],al
    f30c:	a8 31                	test   al,0x31
    f30e:	ff                   	(bad)  
    f30f:	ff                   	(bad)  
    f310:	38 04 00             	cmp    BYTE PTR [rax+rax*1],al
    f313:	00 b8 31 ff ff 50    	add    BYTE PTR [rax+0x50ffff31],bh
    f319:	04 00                	add    al,0x0
    f31b:	00 28                	add    BYTE PTR [rax],ch
    f31d:	36 ff                	ss (bad) 
    f31f:	ff                   	(bad)  
    f320:	f8                   	clc    
    f321:	03 00                	add    eax,DWORD PTR [rax]
    f323:	00 11                	add    BYTE PTR [rcx],dl
    f325:	37                   	(bad)  
    f326:	ff                   	(bad)  
    f327:	ff 68 04             	jmp    FWORD PTR [rax+0x4]
    f32a:	00 00                	add    BYTE PTR [rax],al
    f32c:	4b 37                	rex.WXB (bad) 
    f32e:	ff                   	(bad)  
    f32f:	ff 88 04 00 00 97    	dec    DWORD PTR [rax-0x68fffffc]
    f335:	38 ff                	cmp    bh,bh
    f337:	ff b0 04 00 00 8b    	push   QWORD PTR [rax-0x74fffffc]
    f33d:	3b ff                	cmp    edi,edi
    f33f:	ff d0                	call   rax
    f341:	04 00                	add    al,0x0
    f343:	00 9e 3c ff ff f0    	add    BYTE PTR [rsi-0xf0000c4],bl
    f349:	04 00                	add    al,0x0
    f34b:	00 4c 3d ff          	add    BYTE PTR [rbp+rdi*1-0x1],cl
    f34f:	ff 10                	call   QWORD PTR [rax]
    f351:	05 00 00 f2 3d       	add    eax,0x3df20000
    f356:	ff                   	(bad)  
    f357:	ff 30                	push   QWORD PTR [rax]
    f359:	05 00 00 87 3e       	add    eax,0x3e870000
    f35e:	ff                   	(bad)  
    f35f:	ff 50 05             	call   QWORD PTR [rax+0x5]
    f362:	00 00                	add    BYTE PTR [rax],al
    f364:	1b 3f                	sbb    edi,DWORD PTR [rdi]
    f366:	ff                   	(bad)  
    f367:	ff 70 05             	push   QWORD PTR [rax+0x5]
    f36a:	00 00                	add    BYTE PTR [rax],al
    f36c:	e7 40                	out    0x40,eax
    f36e:	ff                   	(bad)  
    f36f:	ff 9c 05 00 00 bb 41 	call   FWORD PTR [rbp+rax*1+0x41bb0000]
    f376:	ff                   	(bad)  
    f377:	ff c0                	inc    eax
    f379:	05 00 00 82 42       	add    eax,0x42820000
    f37e:	ff                   	(bad)  
    f37f:	ff e4                	jmp    rsp
    f381:	05 00 00 d5 42       	add    eax,0x42d50000
    f386:	ff                   	(bad)  
    f387:	ff 04 06             	inc    DWORD PTR [rsi+rax*1]
    f38a:	00 00                	add    BYTE PTR [rax],al
    f38c:	08 43 ff             	or     BYTE PTR [rbx-0x1],al
    f38f:	ff 24 06             	jmp    QWORD PTR [rsi+rax*1]
    f392:	00 00                	add    BYTE PTR [rax],al
    f394:	29 43 ff             	sub    DWORD PTR [rbx-0x1],eax
    f397:	ff 44 06 00          	inc    DWORD PTR [rsi+rax*1+0x0]
    f39b:	00 91 43 ff ff 68    	add    BYTE PTR [rcx+0x68ffff43],dl
    f3a1:	06                   	(bad)  
    f3a2:	00 00                	add    BYTE PTR [rax],al
    f3a4:	b6 47                	mov    dh,0x47
    f3a6:	ff                   	(bad)  
    f3a7:	ff 88 06 00 00 13    	dec    DWORD PTR [rax+0x13000006]
    f3ad:	49 ff                	rex.WB (bad) 
    f3af:	ff a8 06 00 00 57    	jmp    FWORD PTR [rax+0x57000006]
    f3b5:	51                   	push   rcx
    f3b6:	ff                   	(bad)  
    f3b7:	ff c8                	dec    eax
    f3b9:	06                   	(bad)  
    f3ba:	00 00                	add    BYTE PTR [rax],al
    f3bc:	ea                   	(bad)  
    f3bd:	59                   	pop    rcx
    f3be:	ff                   	(bad)  
    f3bf:	ff f0                	push   rax
    f3c1:	06                   	(bad)  
    f3c2:	00 00                	add    BYTE PTR [rax],al
    f3c4:	3f                   	(bad)  
    f3c5:	5b                   	pop    rbx
    f3c6:	ff                   	(bad)  
    f3c7:	ff 10                	call   QWORD PTR [rax]
    f3c9:	07                   	(bad)  
    f3ca:	00 00                	add    BYTE PTR [rax],al
    f3cc:	2d 5c ff ff 30       	sub    eax,0x30ffff5c
    f3d1:	07                   	(bad)  
    f3d2:	00 00                	add    BYTE PTR [rax],al
    f3d4:	19 5d ff             	sbb    DWORD PTR [rbp-0x1],ebx
    f3d7:	ff 50 07             	call   QWORD PTR [rax+0x7]
    f3da:	00 00                	add    BYTE PTR [rax],al
    f3dc:	cb                   	retf   
    f3dd:	60                   	(bad)  
    f3de:	ff                   	(bad)  
    f3df:	ff 70 07             	push   QWORD PTR [rax+0x7]
    f3e2:	00 00                	add    BYTE PTR [rax],al
    f3e4:	4e 61                	rex.WRX (bad) 
    f3e6:	ff                   	(bad)  
    f3e7:	ff 90 07 00 00 78    	call   QWORD PTR [rax+0x78000007]
    f3ed:	63 ff                	movsxd edi,edi
    f3ef:	ff                   	(bad)  
    f3f0:	b8 07 00 00 b5       	mov    eax,0xb5000007
    f3f5:	65 ff                	gs (bad) 
    f3f7:	ff                   	(bad)  
    f3f8:	dc 07                	fadd   QWORD PTR [rdi]
    f3fa:	00 00                	add    BYTE PTR [rax],al
    f3fc:	1b 66 ff             	sbb    esp,DWORD PTR [rsi-0x1]
    f3ff:	ff                   	(bad)  
    f400:	fc                   	cld    
    f401:	07                   	(bad)  
    f402:	00 00                	add    BYTE PTR [rax],al
    f404:	32 66 ff             	xor    ah,BYTE PTR [rsi-0x1]
    f407:	ff 1c 08             	call   FWORD PTR [rax+rcx*1]
    f40a:	00 00                	add    BYTE PTR [rax],al
    f40c:	83 66 ff ff          	and    DWORD PTR [rsi-0x1],0xffffffff
    f410:	40 08 00             	rex or BYTE PTR [rax],al
    f413:	00 c0                	add    al,al
    f415:	6c                   	ins    BYTE PTR es:[rdi],dx
    f416:	ff                   	(bad)  
    f417:	ff 64 08 00          	jmp    QWORD PTR [rax+rcx*1+0x0]
    f41b:	00 da                	add    dl,bl
    f41d:	6c                   	ins    BYTE PTR es:[rdi],dx
    f41e:	ff                   	(bad)  
    f41f:	ff 84 08 00 00 03 6d 	inc    DWORD PTR [rax+rcx*1+0x6d030000]
    f426:	ff                   	(bad)  
    f427:	ff a4 08 00 00 33 6d 	jmp    QWORD PTR [rax+rcx*1+0x6d330000]
    f42e:	ff                   	(bad)  
    f42f:	ff c4                	inc    esp
    f431:	08 00                	or     BYTE PTR [rax],al
    f433:	00 6a 6d             	add    BYTE PTR [rdx+0x6d],ch
    f436:	ff                   	(bad)  
    f437:	ff e0                	jmp    rax
    f439:	08 00                	or     BYTE PTR [rax],al
    f43b:	00 af 6e ff ff 00    	add    BYTE PTR [rdi+0xffff6e],ch
    f441:	09 00                	or     DWORD PTR [rax],eax
    f443:	00 0f                	add    BYTE PTR [rdi],cl
    f445:	70 ff                	jo     f446 <__GNU_EH_FRAME_HDR+0x14e>
    f447:	ff 20                	jmp    QWORD PTR [rax]
    f449:	09 00                	or     DWORD PTR [rax],eax
    f44b:	00 70 70             	add    BYTE PTR [rax+0x70],dh
    f44e:	ff                   	(bad)  
    f44f:	ff 40 09             	inc    DWORD PTR [rax+0x9]
    f452:	00 00                	add    BYTE PTR [rax],al
    f454:	2e 71 ff             	cs jno f456 <__GNU_EH_FRAME_HDR+0x15e>
    f457:	ff 60 09             	jmp    QWORD PTR [rax+0x9]
    f45a:	00 00                	add    BYTE PTR [rax],al
    f45c:	80 73 ff ff          	xor    BYTE PTR [rbx-0x1],0xff
    f460:	80 09 00             	or     BYTE PTR [rcx],0x0
    f463:	00 78 75             	add    BYTE PTR [rax+0x75],bh
    f466:	ff                   	(bad)  
    f467:	ff a0 09 00 00 d2    	jmp    QWORD PTR [rax-0x2dfffff7]
    f46d:	75 ff                	jne    f46e <__GNU_EH_FRAME_HDR+0x176>
    f46f:	ff c0                	inc    eax
    f471:	09 00                	or     DWORD PTR [rax],eax
    f473:	00 e1                	add    cl,ah
    f475:	78 ff                	js     f476 <__GNU_EH_FRAME_HDR+0x17e>
    f477:	ff e0                	jmp    rax
    f479:	09 00                	or     DWORD PTR [rax],eax
    f47b:	00 32                	add    BYTE PTR [rdx],dh
    f47d:	7d ff                	jge    f47e <__GNU_EH_FRAME_HDR+0x186>
    f47f:	ff 00                	inc    DWORD PTR [rax]
    f481:	0a 00                	or     al,BYTE PTR [rax]
    f483:	00 5c 7d ff          	add    BYTE PTR [rbp+rdi*2-0x1],bl
    f487:	ff 1c 0a             	call   FWORD PTR [rdx+rcx*1]
    f48a:	00 00                	add    BYTE PTR [rax],al
    f48c:	0e                   	(bad)  
    f48d:	7f ff                	jg     f48e <__GNU_EH_FRAME_HDR+0x196>
    f48f:	ff 40 0a             	inc    DWORD PTR [rax+0xa]
    f492:	00 00                	add    BYTE PTR [rax],al
    f494:	25 7f ff ff 60       	and    eax,0x60ffff7f
    f499:	0a 00                	or     al,BYTE PTR [rax]
    f49b:	00 74 7f ff          	add    BYTE PTR [rdi+rdi*2-0x1],dh
    f49f:	ff 80 0a 00 00 c1    	inc    DWORD PTR [rax-0x3efffff6]
    f4a5:	7f ff                	jg     f4a6 <__GNU_EH_FRAME_HDR+0x1ae>
    f4a7:	ff a0 0a 00 00 38    	jmp    QWORD PTR [rax+0x3800000a]
    f4ad:	81 ff ff bc 0a 00    	cmp    edi,0xabcff
    f4b3:	00 b6 86 ff ff e0    	add    BYTE PTR [rsi-0x1f00007a],dh
    f4b9:	0a 00                	or     al,BYTE PTR [rax]
    f4bb:	00 64 88 ff          	add    BYTE PTR [rax+rcx*4-0x1],ah
    f4bf:	ff 08                	dec    DWORD PTR [rax]
    f4c1:	0b 00                	or     eax,DWORD PTR [rax]
    f4c3:	00 ab 88 ff ff 28    	add    BYTE PTR [rbx+0x28ffff88],ch
    f4c9:	0b 00                	or     eax,DWORD PTR [rax]
    f4cb:	00 c1                	add    cl,al
    f4cd:	8d                   	(bad)  
    f4ce:	ff                   	(bad)  
    f4cf:	ff 58 0b             	call   FWORD PTR [rax+0xb]
    f4d2:	00 00                	add    BYTE PTR [rax],al
    f4d4:	65 8f                	gs (bad) 
    f4d6:	ff                   	(bad)  
    f4d7:	ff                   	(bad)  
    f4d8:	78 0b                	js     f4e5 <__GNU_EH_FRAME_HDR+0x1ed>
    f4da:	00 00                	add    BYTE PTR [rax],al
    f4dc:	77 90                	ja     f46e <__GNU_EH_FRAME_HDR+0x176>
    f4de:	ff                   	(bad)  
    f4df:	ff 98 0b 00 00 50    	call   FWORD PTR [rax+0x5000000b]
    f4e5:	93                   	xchg   ebx,eax
    f4e6:	ff                   	(bad)  
    f4e7:	ff                   	(bad)  
    f4e8:	bc 0b 00 00 85       	mov    esp,0x8500000b
    f4ed:	94                   	xchg   esp,eax
    f4ee:	ff                   	(bad)  
    f4ef:	ff                   	(bad)  
    f4f0:	dc 0b                	fmul   QWORD PTR [rbx]
    f4f2:	00 00                	add    BYTE PTR [rax],al
    f4f4:	f6 97 ff ff fc 0b    	not    BYTE PTR [rdi+0xbfcffff]
    f4fa:	00 00                	add    BYTE PTR [rax],al
    f4fc:	a1 99 ff ff 1c 0c 00 	movabs eax,ds:0x2500000c1cffff99
    f503:	00 25 
    f505:	9b                   	fwait
    f506:	ff                   	(bad)  
    f507:	ff 40 0c             	inc    DWORD PTR [rax+0xc]
    f50a:	00 00                	add    BYTE PTR [rax],al
    f50c:	13 9d ff ff 60 0c    	adc    ebx,DWORD PTR [rbp+0xc60ffff]
    f512:	00 00                	add    BYTE PTR [rax],al
    f514:	fb                   	sti    
    f515:	9e                   	sahf   
    f516:	ff                   	(bad)  
    f517:	ff 80 0c 00 00 67    	inc    DWORD PTR [rax+0x6700000c]
    f51d:	9f                   	lahf   
    f51e:	ff                   	(bad)  
    f51f:	ff a0 0c 00 00 d9    	jmp    QWORD PTR [rax-0x26fffff4]
    f525:	9f                   	lahf   
    f526:	ff                   	(bad)  
    f527:	ff c0                	inc    eax
    f529:	0c 00                	or     al,0x0
    f52b:	00 ea                	add    dl,ch
    f52d:	a0 ff ff e0 0c 00 00 	movabs al,ds:0xa14600000ce0ffff
    f534:	46 a1 
    f536:	ff                   	(bad)  
    f537:	ff 00                	inc    DWORD PTR [rax]
    f539:	0d 00 00 84 a1       	or     eax,0xa1840000
    f53e:	ff                   	(bad)  
    f53f:	ff 20                	jmp    QWORD PTR [rax]
    f541:	0d 00 00 0a a2       	or     eax,0xa20a0000
    f546:	ff                   	(bad)  
    f547:	ff 40 0d             	inc    DWORD PTR [rax+0xd]
    f54a:	00 00                	add    BYTE PTR [rax],al
    f54c:	e9 a2 ff ff 60       	jmp    6100f4f3 <_end+0x60ed2ceb>
    f551:	0d 00 00 5d a3       	or     eax,0xa35d0000
    f556:	ff                   	(bad)  
    f557:	ff 80 0d 00 00 f9    	inc    DWORD PTR [rax-0x6fffff3]
    f55d:	a3 ff ff a0 0d 00 00 	movabs ds:0xa42200000da0ffff,eax
    f564:	22 a4 
    f566:	ff                   	(bad)  
    f567:	ff c0                	inc    eax
    f569:	0d 00 00 4b a4       	or     eax,0xa44b0000
    f56e:	ff                   	(bad)  
    f56f:	ff e0                	jmp    rax
    f571:	0d 00 00 9e a5       	or     eax,0xa59e0000
    f576:	ff                   	(bad)  
    f577:	ff 08                	dec    DWORD PTR [rax]
    f579:	0e                   	(bad)  
    f57a:	00 00                	add    BYTE PTR [rax],al
    f57c:	bc a5 ff ff 28       	mov    esp,0x28ffffa5
    f581:	0e                   	(bad)  
    f582:	00 00                	add    BYTE PTR [rax],al
    f584:	1f                   	(bad)  
    f585:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    f586:	ff                   	(bad)  
    f587:	ff 48 0e             	dec    DWORD PTR [rax+0xe]
    f58a:	00 00                	add    BYTE PTR [rax],al
    f58c:	2d a9 ff ff 78       	sub    eax,0x78ffffa9
    f591:	0e                   	(bad)  
    f592:	00 00                	add    BYTE PTR [rax],al
    f594:	df a9 ff ff 98 0e    	fild   QWORD PTR [rcx+0xe98ffff]
    f59a:	00 00                	add    BYTE PTR [rax],al
    f59c:	84 aa ff ff b8 0e    	test   BYTE PTR [rdx+0xeb8ffff],ch
    f5a2:	00 00                	add    BYTE PTR [rax],al
    f5a4:	18 ab ff ff e0 0e    	sbb    BYTE PTR [rbx+0xee0ffff],ch
    f5aa:	00 00                	add    BYTE PTR [rax],al
    f5ac:	ed                   	in     eax,dx
    f5ad:	ab                   	stos   DWORD PTR es:[rdi],eax
    f5ae:	ff                   	(bad)  
    f5af:	ff 00                	inc    DWORD PTR [rax]
    f5b1:	0f 00 00             	sldt   WORD PTR [rax]
    f5b4:	cc                   	int3   
    f5b5:	ac                   	lods   al,BYTE PTR ds:[rsi]
    f5b6:	ff                   	(bad)  
    f5b7:	ff 20                	jmp    QWORD PTR [rax]
    f5b9:	0f 00 00             	sldt   WORD PTR [rax]
    f5bc:	49 ad                	rex.WB lods rax,QWORD PTR ds:[rsi]
    f5be:	ff                   	(bad)  
    f5bf:	ff 40 0f             	inc    DWORD PTR [rax+0xf]
    f5c2:	00 00                	add    BYTE PTR [rax],al
    f5c4:	7f ae                	jg     f574 <__GNU_EH_FRAME_HDR+0x27c>
    f5c6:	ff                   	(bad)  
    f5c7:	ff 60 0f             	jmp    QWORD PTR [rax+0xf]
    f5ca:	00 00                	add    BYTE PTR [rax],al
    f5cc:	fd                   	std    
    f5cd:	ae                   	scas   al,BYTE PTR es:[rdi]
    f5ce:	ff                   	(bad)  
    f5cf:	ff 80 0f 00 00 27    	inc    DWORD PTR [rax+0x2700000f]
    f5d5:	b1 ff                	mov    cl,0xff
    f5d7:	ff a0 0f 00 00 ea    	jmp    QWORD PTR [rax-0x15fffff1]
    f5dd:	b1 ff                	mov    cl,0xff
    f5df:	ff c0                	inc    eax
    f5e1:	0f 00 00             	sldt   WORD PTR [rax]
    f5e4:	85 b3 ff ff e0 0f    	test   DWORD PTR [rbx+0xfe0ffff],esi
    f5ea:	00 00                	add    BYTE PTR [rax],al
    f5ec:	92                   	xchg   edx,eax
    f5ed:	b4 ff                	mov    ah,0xff
    f5ef:	ff 00                	inc    DWORD PTR [rax]
    f5f1:	10 00                	adc    BYTE PTR [rax],al
    f5f3:	00 f8                	add    al,bh
    f5f5:	b4 ff                	mov    ah,0xff
    f5f7:	ff 20                	jmp    QWORD PTR [rax]
    f5f9:	10 00                	adc    BYTE PTR [rax],al
    f5fb:	00 6d b5             	add    BYTE PTR [rbp-0x4b],ch
    f5fe:	ff                   	(bad)  
    f5ff:	ff 40 10             	inc    DWORD PTR [rax+0x10]
    f602:	00 00                	add    BYTE PTR [rax],al
    f604:	48 b6 ff             	rex.W mov sil,0xff
    f607:	ff 60 10             	jmp    QWORD PTR [rax+0x10]
    f60a:	00 00                	add    BYTE PTR [rax],al
    f60c:	ba b7 ff ff 80       	mov    edx,0x80ffffb7
    f611:	10 00                	adc    BYTE PTR [rax],al
    f613:	00 26                	add    BYTE PTR [rsi],ah
    f615:	b8 ff ff a0 10       	mov    eax,0x10a0ffff
    f61a:	00 00                	add    BYTE PTR [rax],al
    f61c:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    f61d:	b8 ff ff c0 10       	mov    eax,0x10c0ffff
    f622:	00 00                	add    BYTE PTR [rax],al
    f624:	bc b8 ff ff e0       	mov    esp,0xe0ffffb8
    f629:	10 00                	adc    BYTE PTR [rax],al
    f62b:	00 f6                	add    dh,dh
    f62d:	b9 ff ff 04 11       	mov    ecx,0x1104ffff
    f632:	00 00                	add    BYTE PTR [rax],al
    f634:	5a                   	pop    rdx
    f635:	ba ff ff 24 11       	mov    edx,0x1124ffff
    f63a:	00 00                	add    BYTE PTR [rax],al
    f63c:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    f63d:	ba ff ff 44 11       	mov    edx,0x1144ffff
    f642:	00 00                	add    BYTE PTR [rax],al
    f644:	5e                   	pop    rsi
    f645:	bb ff ff 64 11       	mov    ebx,0x1164ffff
    f64a:	00 00                	add    BYTE PTR [rax],al
    f64c:	29 bc ff ff 84 11 00 	sub    DWORD PTR [rdi+rdi*8+0x1184ff],edi
    f653:	00 7e bc             	add    BYTE PTR [rsi-0x44],bh
    f656:	ff                   	(bad)  
    f657:	ff a4 11 00 00 ae bc 	jmp    QWORD PTR [rcx+rdx*1-0x43520000]
    f65e:	ff                   	(bad)  
    f65f:	ff c4                	inc    esp
    f661:	11 00                	adc    DWORD PTR [rax],eax
    f663:	00 15 bd ff ff e4    	add    BYTE PTR [rip+0xffffffffe4ffffbd],dl        # ffffffffe500f626 <_end+0xffffffffe4ed2e1e>
    f669:	11 00                	adc    DWORD PTR [rax],eax
    f66b:	00 21                	add    BYTE PTR [rcx],ah
    f66d:	cc                   	int3   
    f66e:	ff                   	(bad)  
    f66f:	ff 08                	dec    DWORD PTR [rax]
    f671:	12 00                	adc    al,BYTE PTR [rax]
    f673:	00 67 cc             	add    BYTE PTR [rdi-0x34],ah
    f676:	ff                   	(bad)  
    f677:	ff 28                	jmp    FWORD PTR [rax]
    f679:	12 00                	adc    al,BYTE PTR [rax]
    f67b:	00 a2 ce ff ff 50    	add    BYTE PTR [rdx+0x50ffffce],ah
    f681:	12 00                	adc    al,BYTE PTR [rax]
    f683:	00 47 d0             	add    BYTE PTR [rdi-0x30],al
    f686:	ff                   	(bad)  
    f687:	ff 70 12             	push   QWORD PTR [rax+0x12]
    f68a:	00 00                	add    BYTE PTR [rax],al
    f68c:	59                   	pop    rcx
    f68d:	d1 ff                	sar    edi,1
    f68f:	ff 90 12 00 00 15    	call   QWORD PTR [rax+0x15000012]
    f695:	d2 ff                	sar    bh,cl
    f697:	ff                   	(bad)  
    f698:	b8 12 00 00 b0       	mov    eax,0xb0000012
    f69d:	d3 ff                	sar    edi,cl
    f69f:	ff e0                	jmp    rax
    f6a1:	12 00                	adc    al,BYTE PTR [rax]
    f6a3:	00 55 d4             	add    BYTE PTR [rbp-0x2c],dl
    f6a6:	ff                   	(bad)  
    f6a7:	ff 00                	inc    DWORD PTR [rax]
    f6a9:	13 00                	adc    eax,DWORD PTR [rax]
    f6ab:	00 98 d5 ff ff 20    	add    BYTE PTR [rax+0x20ffffd5],bl
    f6b1:	13 00                	adc    eax,DWORD PTR [rax]
    f6b3:	00 8b d6 ff ff 40    	add    BYTE PTR [rbx+0x40ffffd6],cl
    f6b9:	13 00                	adc    eax,DWORD PTR [rax]
    f6bb:	00 3e                	add    BYTE PTR [rsi],bh
    f6bd:	d8 ff                	fdivr  st,st(7)
    f6bf:	ff 60 13             	jmp    QWORD PTR [rax+0x13]
    f6c2:	00 00                	add    BYTE PTR [rax],al
    f6c4:	b8 d8 ff ff 80       	mov    eax,0x80ffffd8
    f6c9:	13 00                	adc    eax,DWORD PTR [rax]
    f6cb:	00 3e                	add    BYTE PTR [rsi],bh
    f6cd:	d9 ff                	fcos   
    f6cf:	ff                   	.byte 0xff
    f6d0:	a0                   	.byte 0xa0
    f6d1:	13 00                	adc    eax,DWORD PTR [rax]
	...

Disassembly of section .eh_frame:

000000000000f6d8 <__FRAME_END__-0xfe0>:
    f6d8:	14 00                	adc    al,0x0
    f6da:	00 00                	add    BYTE PTR [rax],al
    f6dc:	00 00                	add    BYTE PTR [rax],al
    f6de:	00 00                	add    BYTE PTR [rax],al
    f6e0:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    f6e3:	00 01                	add    BYTE PTR [rcx],al
    f6e5:	78 10                	js     f6f7 <__GNU_EH_FRAME_HDR+0x3ff>
    f6e7:	01 1b                	add    DWORD PTR [rbx],ebx
    f6e9:	0c 07                	or     al,0x7
    f6eb:	08 90 01 00 00 14    	or     BYTE PTR [rax+0x14000001],dl
    f6f1:	00 00                	add    BYTE PTR [rax],al
    f6f3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f6f6:	00 00                	add    BYTE PTR [rax],al
    f6f8:	28 32                	sub    BYTE PTR [rdx],dh
    f6fa:	ff                   	(bad)  
    f6fb:	ff 26                	jmp    QWORD PTR [rsi]
    f6fd:	00 00                	add    BYTE PTR [rax],al
    f6ff:	00 00                	add    BYTE PTR [rax],al
    f701:	44 07                	rex.R (bad) 
    f703:	10 00                	adc    BYTE PTR [rax],al
    f705:	00 00                	add    BYTE PTR [rax],al
    f707:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    f70a:	00 00                	add    BYTE PTR [rax],al
    f70c:	34 00                	xor    al,0x0
    f70e:	00 00                	add    BYTE PTR [rax],al
    f710:	10 29                	adc    BYTE PTR [rcx],ch
    f712:	ff                   	(bad)  
    f713:	ff 80 04 00 00 00    	inc    DWORD PTR [rax+0x4]
    f719:	0e                   	(bad)  
    f71a:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
    f71d:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
    f720:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
    f723:	80 00 3f             	add    BYTE PTR [rax],0x3f
    f726:	1a 3a                	sbb    bh,BYTE PTR [rdx]
    f728:	2a 33                	sub    dh,BYTE PTR [rbx]
    f72a:	24 22                	and    al,0x22
    f72c:	00 00                	add    BYTE PTR [rax],al
    f72e:	00 00                	add    BYTE PTR [rax],al
    f730:	14 00                	adc    al,0x0
    f732:	00 00                	add    BYTE PTR [rax],al
    f734:	5c                   	pop    rsp
    f735:	00 00                	add    BYTE PTR [rax],al
    f737:	00 68 2d             	add    BYTE PTR [rax+0x2d],ch
    f73a:	ff                   	(bad)  
    f73b:	ff 10                	call   QWORD PTR [rax]
	...
    f745:	00 00                	add    BYTE PTR [rax],al
    f747:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    f74a:	00 00                	add    BYTE PTR [rax],al
    f74c:	74 00                	je     f74e <__GNU_EH_FRAME_HDR+0x456>
    f74e:	00 00                	add    BYTE PTR [rax],al
    f750:	60                   	(bad)  
    f751:	2d ff ff 70 04       	sub    eax,0x470ffff
	...
    f75e:	00 00                	add    BYTE PTR [rax],al
    f760:	1c 00                	sbb    al,0x0
    f762:	00 00                	add    BYTE PTR [rax],al
    f764:	8c 00                	mov    WORD PTR [rax],es
    f766:	00 00                	add    BYTE PTR [rax],al
    f768:	a1 32 ff ff 3a 00 00 	movabs eax,ds:0x3affff32
    f76f:	00 00 
    f771:	45 0e                	rex.RB (bad) 
    f773:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f779:	71 0c                	jno    f787 <__GNU_EH_FRAME_HDR+0x48f>
    f77b:	07                   	(bad)  
    f77c:	08 00                	or     BYTE PTR [rax],al
    f77e:	00 00                	add    BYTE PTR [rax],al
    f780:	24 00                	and    al,0x0
    f782:	00 00                	add    BYTE PTR [rax],al
    f784:	ac                   	lods   al,BYTE PTR ds:[rsi]
    f785:	00 00                	add    BYTE PTR [rax],al
    f787:	00 bb 32 ff ff 4c    	add    BYTE PTR [rbx+0x4cffff32],bh
    f78d:	01 00                	add    DWORD PTR [rax],eax
    f78f:	00 00                	add    BYTE PTR [rax],al
    f791:	45 0e                	rex.RB (bad) 
    f793:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f799:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    f79d:	3e 01 0c 07          	ds add DWORD PTR [rdi+rax*1],ecx
    f7a1:	08 00                	or     BYTE PTR [rax],al
    f7a3:	00 00                	add    BYTE PTR [rax],al
    f7a5:	00 00                	add    BYTE PTR [rax],al
    f7a7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f7aa:	00 00                	add    BYTE PTR [rax],al
    f7ac:	d4                   	(bad)  
    f7ad:	00 00                	add    BYTE PTR [rax],al
    f7af:	00 df                	add    bh,bl
    f7b1:	33 ff                	xor    edi,edi
    f7b3:	ff f4                	push   rsp
    f7b5:	02 00                	add    al,BYTE PTR [rax]
    f7b7:	00 00                	add    BYTE PTR [rax],al
    f7b9:	45 0e                	rex.RB (bad) 
    f7bb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f7c1:	03 eb                	add    ebp,ebx
    f7c3:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    f7c6:	08 00                	or     BYTE PTR [rax],al
    f7c8:	1c 00                	sbb    al,0x0
    f7ca:	00 00                	add    BYTE PTR [rax],al
    f7cc:	f4                   	hlt    
    f7cd:	00 00                	add    BYTE PTR [rax],al
    f7cf:	00 b3 36 ff ff 13    	add    BYTE PTR [rbx+0x13ffff36],dh
    f7d5:	01 00                	add    DWORD PTR [rax],eax
    f7d7:	00 00                	add    BYTE PTR [rax],al
    f7d9:	45 0e                	rex.RB (bad) 
    f7db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f7e1:	03 0a                	add    ecx,DWORD PTR [rdx]
    f7e3:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f7e6:	08 00                	or     BYTE PTR [rax],al
    f7e8:	1c 00                	sbb    al,0x0
    f7ea:	00 00                	add    BYTE PTR [rax],al
    f7ec:	14 01                	adc    al,0x1
    f7ee:	00 00                	add    BYTE PTR [rax],al
    f7f0:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    f7f1:	37                   	(bad)  
    f7f2:	ff                   	(bad)  
    f7f3:	ff ae 00 00 00 00    	jmp    FWORD PTR [rsi+0x0]
    f7f9:	45 0e                	rex.RB (bad) 
    f7fb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f801:	02 a5 0c 07 08 00    	add    ah,BYTE PTR [rbp+0x8070c]
    f807:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f80a:	00 00                	add    BYTE PTR [rax],al
    f80c:	34 01                	xor    al,0x1
    f80e:	00 00                	add    BYTE PTR [rax],al
    f810:	34 38                	xor    al,0x38
    f812:	ff                   	(bad)  
    f813:	ff a6 00 00 00 00    	jmp    QWORD PTR [rsi+0x0]
    f819:	45 0e                	rex.RB (bad) 
    f81b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f821:	02 9d 0c 07 08 00    	add    bl,BYTE PTR [rbp+0x8070c]
    f827:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f82a:	00 00                	add    BYTE PTR [rax],al
    f82c:	54                   	push   rsp
    f82d:	01 00                	add    DWORD PTR [rax],eax
    f82f:	00 ba 38 ff ff 95    	add    BYTE PTR [rdx-0x6a0000c8],bh
    f835:	00 00                	add    BYTE PTR [rax],al
    f837:	00 00                	add    BYTE PTR [rax],al
    f839:	45 0e                	rex.RB (bad) 
    f83b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f841:	02 8c 0c 07 08 00 00 	add    cl,BYTE PTR [rsp+rcx*1+0x807]
    f848:	1c 00                	sbb    al,0x0
    f84a:	00 00                	add    BYTE PTR [rax],al
    f84c:	74 01                	je     f84f <__GNU_EH_FRAME_HDR+0x557>
    f84e:	00 00                	add    BYTE PTR [rax],al
    f850:	2f                   	(bad)  
    f851:	39 ff                	cmp    edi,edi
    f853:	ff 94 00 00 00 00 45 	call   QWORD PTR [rax+rax*1+0x45000000]
    f85a:	0e                   	(bad)  
    f85b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f861:	02 8b 0c 07 08 00    	add    cl,BYTE PTR [rbx+0x8070c]
    f867:	00 28                	add    BYTE PTR [rax],ch
    f869:	00 00                	add    BYTE PTR [rax],al
    f86b:	00 94 01 00 00 a3 39 	add    BYTE PTR [rcx+rax*1+0x39a30000],dl
    f872:	ff                   	(bad)  
    f873:	ff cc                	dec    esp
    f875:	01 00                	add    DWORD PTR [rax],eax
    f877:	00 00                	add    BYTE PTR [rax],al
    f879:	45 0e                	rex.RB (bad) 
    f87b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f881:	4d 8f 03             	rex.WRB pop QWORD PTR [r11]
    f884:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
    f88b:	07                   	(bad)  
    f88c:	03 b6 01 0c 07 08    	add    esi,DWORD PTR [rsi+0x8070c01]
    f892:	00 00                	add    BYTE PTR [rax],al
    f894:	20 00                	and    BYTE PTR [rax],al
    f896:	00 00                	add    BYTE PTR [rax],al
    f898:	c0 01 00             	rol    BYTE PTR [rcx],0x0
    f89b:	00 43 3b             	add    BYTE PTR [rbx+0x3b],al
    f89e:	ff                   	(bad)  
    f89f:	ff d4                	call   rsp
    f8a1:	00 00                	add    BYTE PTR [rax],al
    f8a3:	00 00                	add    BYTE PTR [rax],al
    f8a5:	45 0e                	rex.RB (bad) 
    f8a7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f8ad:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    f8b1:	c6                   	(bad)  
    f8b2:	0c 07                	or     al,0x7
    f8b4:	08 00                	or     BYTE PTR [rax],al
    f8b6:	00 00                	add    BYTE PTR [rax],al
    f8b8:	20 00                	and    BYTE PTR [rax],al
    f8ba:	00 00                	add    BYTE PTR [rax],al
    f8bc:	e4 01                	in     al,0x1
    f8be:	00 00                	add    BYTE PTR [rax],al
    f8c0:	f3 3b ff             	repz cmp edi,edi
    f8c3:	ff c7                	inc    edi
    f8c5:	00 00                	add    BYTE PTR [rax],al
    f8c7:	00 00                	add    BYTE PTR [rax],al
    f8c9:	45 0e                	rex.RB (bad) 
    f8cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f8d1:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    f8d5:	b9 0c 07 08 00       	mov    ecx,0x8070c
    f8da:	00 00                	add    BYTE PTR [rax],al
    f8dc:	1c 00                	sbb    al,0x0
    f8de:	00 00                	add    BYTE PTR [rax],al
    f8e0:	08 02                	or     BYTE PTR [rdx],al
    f8e2:	00 00                	add    BYTE PTR [rax],al
    f8e4:	96                   	xchg   esi,eax
    f8e5:	3c ff                	cmp    al,0xff
    f8e7:	ff 53 00             	call   QWORD PTR [rbx+0x0]
    f8ea:	00 00                	add    BYTE PTR [rax],al
    f8ec:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f8ef:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f8f5:	02 4a 0c             	add    cl,BYTE PTR [rdx+0xc]
    f8f8:	07                   	(bad)  
    f8f9:	08 00                	or     BYTE PTR [rax],al
    f8fb:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f8fe:	00 00                	add    BYTE PTR [rax],al
    f900:	28 02                	sub    BYTE PTR [rdx],al
    f902:	00 00                	add    BYTE PTR [rax],al
    f904:	c9                   	leave  
    f905:	3c ff                	cmp    al,0xff
    f907:	ff 33                	push   QWORD PTR [rbx]
    f909:	00 00                	add    BYTE PTR [rax],al
    f90b:	00 00                	add    BYTE PTR [rax],al
    f90d:	45 0e                	rex.RB (bad) 
    f90f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f915:	6a 0c                	push   0xc
    f917:	07                   	(bad)  
    f918:	08 00                	or     BYTE PTR [rax],al
    f91a:	00 00                	add    BYTE PTR [rax],al
    f91c:	1c 00                	sbb    al,0x0
    f91e:	00 00                	add    BYTE PTR [rax],al
    f920:	48 02 00             	rex.W add al,BYTE PTR [rax]
    f923:	00 dc                	add    ah,bl
    f925:	3c ff                	cmp    al,0xff
    f927:	ff 21                	jmp    QWORD PTR [rcx]
    f929:	00 00                	add    BYTE PTR [rax],al
    f92b:	00 00                	add    BYTE PTR [rax],al
    f92d:	45 0e                	rex.RB (bad) 
    f92f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f935:	58                   	pop    rax
    f936:	0c 07                	or     al,0x7
    f938:	08 00                	or     BYTE PTR [rax],al
    f93a:	00 00                	add    BYTE PTR [rax],al
    f93c:	20 00                	and    BYTE PTR [rax],al
    f93e:	00 00                	add    BYTE PTR [rax],al
    f940:	68 02 00 00 dd       	push   0xffffffffdd000002
    f945:	3c ff                	cmp    al,0xff
    f947:	ff 68 00             	jmp    FWORD PTR [rax+0x0]
    f94a:	00 00                	add    BYTE PTR [rax],al
    f94c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f94f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f955:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    f959:	5a                   	pop    rdx
    f95a:	0c 07                	or     al,0x7
    f95c:	08 00                	or     BYTE PTR [rax],al
    f95e:	00 00                	add    BYTE PTR [rax],al
    f960:	1c 00                	sbb    al,0x0
    f962:	00 00                	add    BYTE PTR [rax],al
    f964:	8c 02                	mov    WORD PTR [rdx],es
    f966:	00 00                	add    BYTE PTR [rax],al
    f968:	21 3d ff ff 25 04    	and    DWORD PTR [rip+0x425ffff],edi        # 426f96d <_end+0x4133165>
    f96e:	00 00                	add    BYTE PTR [rax],al
    f970:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f973:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f979:	03 1c 04             	add    ebx,DWORD PTR [rsp+rax*1]
    f97c:	0c 07                	or     al,0x7
    f97e:	08 00                	or     BYTE PTR [rax],al
    f980:	1c 00                	sbb    al,0x0
    f982:	00 00                	add    BYTE PTR [rax],al
    f984:	ac                   	lods   al,BYTE PTR ds:[rsi]
    f985:	02 00                	add    al,BYTE PTR [rax]
    f987:	00 26                	add    BYTE PTR [rsi],ah
    f989:	41 ff                	rex.B (bad) 
    f98b:	ff 5d 01             	call   FWORD PTR [rbp+0x1]
    f98e:	00 00                	add    BYTE PTR [rax],al
    f990:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f993:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f999:	03 54 01 0c          	add    edx,DWORD PTR [rcx+rax*1+0xc]
    f99d:	07                   	(bad)  
    f99e:	08 00                	or     BYTE PTR [rax],al
    f9a0:	1c 00                	sbb    al,0x0
    f9a2:	00 00                	add    BYTE PTR [rax],al
    f9a4:	cc                   	int3   
    f9a5:	02 00                	add    al,BYTE PTR [rax]
    f9a7:	00 63 42             	add    BYTE PTR [rbx+0x42],ah
    f9aa:	ff                   	(bad)  
    f9ab:	ff 44 08 00          	inc    DWORD PTR [rax+rcx*1+0x0]
    f9af:	00 00                	add    BYTE PTR [rax],al
    f9b1:	45 0e                	rex.RB (bad) 
    f9b3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f9b9:	03 3b                	add    edi,DWORD PTR [rbx]
    f9bb:	08 0c 07             	or     BYTE PTR [rdi+rax*1],cl
    f9be:	08 00                	or     BYTE PTR [rax],al
    f9c0:	24 00                	and    al,0x0
    f9c2:	00 00                	add    BYTE PTR [rax],al
    f9c4:	ec                   	in     al,dx
    f9c5:	02 00                	add    al,BYTE PTR [rax]
    f9c7:	00 87 4a ff ff 93    	add    BYTE PTR [rdi-0x6c0000b6],al
    f9cd:	08 00                	or     BYTE PTR [rax],al
    f9cf:	00 00                	add    BYTE PTR [rax],al
    f9d1:	45 0e                	rex.RB (bad) 
    f9d3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f9d9:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    f9dd:	82                   	(bad)  
    f9de:	08 0c 07             	or     BYTE PTR [rdi+rax*1],cl
    f9e1:	08 00                	or     BYTE PTR [rax],al
    f9e3:	00 00                	add    BYTE PTR [rax],al
    f9e5:	00 00                	add    BYTE PTR [rax],al
    f9e7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f9ea:	00 00                	add    BYTE PTR [rax],al
    f9ec:	14 03                	adc    al,0x3
    f9ee:	00 00                	add    BYTE PTR [rax],al
    f9f0:	f2 52                	repnz push rdx
    f9f2:	ff                   	(bad)  
    f9f3:	ff 55 01             	call   QWORD PTR [rbp+0x1]
    f9f6:	00 00                	add    BYTE PTR [rax],al
    f9f8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f9fb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fa01:	03 4c 01 0c          	add    ecx,DWORD PTR [rcx+rax*1+0xc]
    fa05:	07                   	(bad)  
    fa06:	08 00                	or     BYTE PTR [rax],al
    fa08:	1c 00                	sbb    al,0x0
    fa0a:	00 00                	add    BYTE PTR [rax],al
    fa0c:	34 03                	xor    al,0x3
    fa0e:	00 00                	add    BYTE PTR [rax],al
    fa10:	27                   	(bad)  
    fa11:	54                   	push   rsp
    fa12:	ff                   	(bad)  
    fa13:	ff                   	(bad)  
    fa14:	ee                   	out    dx,al
    fa15:	00 00                	add    BYTE PTR [rax],al
    fa17:	00 00                	add    BYTE PTR [rax],al
    fa19:	45 0e                	rex.RB (bad) 
    fa1b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fa21:	02 e5                	add    ah,ch
    fa23:	0c 07                	or     al,0x7
    fa25:	08 00                	or     BYTE PTR [rax],al
    fa27:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    fa2a:	00 00                	add    BYTE PTR [rax],al
    fa2c:	54                   	push   rsp
    fa2d:	03 00                	add    eax,DWORD PTR [rax]
    fa2f:	00 f5                	add    ch,dh
    fa31:	54                   	push   rsp
    fa32:	ff                   	(bad)  
    fa33:	ff                   	(bad)  
    fa34:	ec                   	in     al,dx
    fa35:	00 00                	add    BYTE PTR [rax],al
    fa37:	00 00                	add    BYTE PTR [rax],al
    fa39:	45 0e                	rex.RB (bad) 
    fa3b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fa41:	02 e3                	add    ah,bl
    fa43:	0c 07                	or     al,0x7
    fa45:	08 00                	or     BYTE PTR [rax],al
    fa47:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    fa4a:	00 00                	add    BYTE PTR [rax],al
    fa4c:	74 03                	je     fa51 <__GNU_EH_FRAME_HDR+0x759>
    fa4e:	00 00                	add    BYTE PTR [rax],al
    fa50:	c1 55 ff ff          	rcl    DWORD PTR [rbp-0x1],0xff
    fa54:	b2 03                	mov    dl,0x3
    fa56:	00 00                	add    BYTE PTR [rax],al
    fa58:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    fa5b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fa61:	03 a9 03 0c 07 08    	add    ebp,DWORD PTR [rcx+0x8070c03]
    fa67:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    fa6a:	00 00                	add    BYTE PTR [rax],al
    fa6c:	94                   	xchg   esp,eax
    fa6d:	03 00                	add    eax,DWORD PTR [rax]
    fa6f:	00 53 59             	add    BYTE PTR [rbx+0x59],dl
    fa72:	ff                   	(bad)  
    fa73:	ff 83 00 00 00 00    	inc    DWORD PTR [rbx+0x0]
    fa79:	45 0e                	rex.RB (bad) 
    fa7b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fa81:	02 7a 0c             	add    bh,BYTE PTR [rdx+0xc]
    fa84:	07                   	(bad)  
    fa85:	08 00                	or     BYTE PTR [rax],al
    fa87:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    fa8a:	00 00                	add    BYTE PTR [rax],al
    fa8c:	b4 03                	mov    ah,0x3
    fa8e:	00 00                	add    BYTE PTR [rax],al
    fa90:	b6 59                	mov    dh,0x59
    fa92:	ff                   	(bad)  
    fa93:	ff 2a                	jmp    FWORD PTR [rdx]
    fa95:	02 00                	add    al,BYTE PTR [rax]
    fa97:	00 00                	add    BYTE PTR [rax],al
    fa99:	45 0e                	rex.RB (bad) 
    fa9b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    faa1:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    faa5:	19 02                	sbb    DWORD PTR [rdx],eax
    faa7:	0c 07                	or     al,0x7
    faa9:	08 00                	or     BYTE PTR [rax],al
    faab:	00 00                	add    BYTE PTR [rax],al
    faad:	00 00                	add    BYTE PTR [rax],al
    faaf:	00 20                	add    BYTE PTR [rax],ah
    fab1:	00 00                	add    BYTE PTR [rax],al
    fab3:	00 dc                	add    ah,bl
    fab5:	03 00                	add    eax,DWORD PTR [rax]
    fab7:	00 b8 5b ff ff 3d    	add    BYTE PTR [rax+0x3dffff5b],bh
    fabd:	02 00                	add    al,BYTE PTR [rax]
    fabf:	00 00                	add    BYTE PTR [rax],al
    fac1:	45 0e                	rex.RB (bad) 
    fac3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fac9:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    facd:	2f                   	(bad)  
    face:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    fad1:	08 00                	or     BYTE PTR [rax],al
    fad3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    fad6:	00 00                	add    BYTE PTR [rax],al
    fad8:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    fadb:	00 d1                	add    cl,dl
    fadd:	5d                   	pop    rbp
    fade:	ff                   	(bad)  
    fadf:	ff 66 00             	jmp    QWORD PTR [rsi+0x0]
    fae2:	00 00                	add    BYTE PTR [rax],al
    fae4:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    fae7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    faed:	02 5d 0c             	add    bl,BYTE PTR [rbp+0xc]
    faf0:	07                   	(bad)  
    faf1:	08 00                	or     BYTE PTR [rax],al
    faf3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    faf6:	00 00                	add    BYTE PTR [rax],al
    faf8:	20 04 00             	and    BYTE PTR [rax+rax*1],al
    fafb:	00 17                	add    BYTE PTR [rdi],dl
    fafd:	5e                   	pop    rsi
    fafe:	ff                   	(bad)  
    faff:	ff 17                	call   QWORD PTR [rdi]
    fb01:	00 00                	add    BYTE PTR [rax],al
    fb03:	00 00                	add    BYTE PTR [rax],al
    fb05:	45 0e                	rex.RB (bad) 
    fb07:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fb0d:	4e 0c 07             	rex.WRX or al,0x7
    fb10:	08 00                	or     BYTE PTR [rax],al
    fb12:	00 00                	add    BYTE PTR [rax],al
    fb14:	20 00                	and    BYTE PTR [rax],al
    fb16:	00 00                	add    BYTE PTR [rax],al
    fb18:	40 04 00             	rex add al,0x0
    fb1b:	00 0e                	add    BYTE PTR [rsi],cl
    fb1d:	5e                   	pop    rsi
    fb1e:	ff                   	(bad)  
    fb1f:	ff 51 00             	call   QWORD PTR [rcx+0x0]
    fb22:	00 00                	add    BYTE PTR [rax],al
    fb24:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    fb27:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fb2d:	02 48 0c             	add    cl,BYTE PTR [rax+0xc]
    fb30:	07                   	(bad)  
    fb31:	08 00                	or     BYTE PTR [rax],al
    fb33:	00 00                	add    BYTE PTR [rax],al
    fb35:	00 00                	add    BYTE PTR [rax],al
    fb37:	00 20                	add    BYTE PTR [rax],ah
    fb39:	00 00                	add    BYTE PTR [rax],al
    fb3b:	00 64 04 00          	add    BYTE PTR [rsp+rax*1+0x0],ah
    fb3f:	00 3b                	add    BYTE PTR [rbx],bh
    fb41:	5e                   	pop    rsi
    fb42:	ff                   	(bad)  
    fb43:	ff                   	(bad)  
    fb44:	3d 06 00 00 00       	cmp    eax,0x6
    fb49:	45 0e                	rex.RB (bad) 
    fb4b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fb51:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    fb55:	2f                   	(bad)  
    fb56:	06                   	(bad)  
    fb57:	0c 07                	or     al,0x7
    fb59:	08 00                	or     BYTE PTR [rax],al
    fb5b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    fb5e:	00 00                	add    BYTE PTR [rax],al
    fb60:	88 04 00             	mov    BYTE PTR [rax+rax*1],al
    fb63:	00 54 64 ff          	add    BYTE PTR [rsp+riz*2-0x1],dl
    fb67:	ff 1a                	call   FWORD PTR [rdx]
    fb69:	00 00                	add    BYTE PTR [rax],al
    fb6b:	00 00                	add    BYTE PTR [rax],al
    fb6d:	45 0e                	rex.RB (bad) 
    fb6f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fb75:	51                   	push   rcx
    fb76:	0c 07                	or     al,0x7
    fb78:	08 00                	or     BYTE PTR [rax],al
    fb7a:	00 00                	add    BYTE PTR [rax],al
    fb7c:	1c 00                	sbb    al,0x0
    fb7e:	00 00                	add    BYTE PTR [rax],al
    fb80:	a8 04                	test   al,0x4
    fb82:	00 00                	add    BYTE PTR [rax],al
    fb84:	4e                   	rex.WRX
    fb85:	64 ff                	fs (bad) 
    fb87:	ff 29                	jmp    FWORD PTR [rcx]
    fb89:	00 00                	add    BYTE PTR [rax],al
    fb8b:	00 00                	add    BYTE PTR [rax],al
    fb8d:	45 0e                	rex.RB (bad) 
    fb8f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fb95:	60                   	(bad)  
    fb96:	0c 07                	or     al,0x7
    fb98:	08 00                	or     BYTE PTR [rax],al
    fb9a:	00 00                	add    BYTE PTR [rax],al
    fb9c:	1c 00                	sbb    al,0x0
    fb9e:	00 00                	add    BYTE PTR [rax],al
    fba0:	c8 04 00 00          	enter  0x4,0x0
    fba4:	57                   	push   rdi
    fba5:	64 ff                	fs (bad) 
    fba7:	ff 30                	push   QWORD PTR [rax]
    fba9:	00 00                	add    BYTE PTR [rax],al
    fbab:	00 00                	add    BYTE PTR [rax],al
    fbad:	45 0e                	rex.RB (bad) 
    fbaf:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fbb5:	67 0c 07             	addr32 or al,0x7
    fbb8:	08 00                	or     BYTE PTR [rax],al
    fbba:	00 00                	add    BYTE PTR [rax],al
    fbbc:	18 00                	sbb    BYTE PTR [rax],al
    fbbe:	00 00                	add    BYTE PTR [rax],al
    fbc0:	e8 04 00 00 67       	call   6700fbc9 <_end+0x66ed33c1>
    fbc5:	64 ff                	fs (bad) 
    fbc7:	ff 37                	push   QWORD PTR [rdi]
    fbc9:	00 00                	add    BYTE PTR [rax],al
    fbcb:	00 00                	add    BYTE PTR [rax],al
    fbcd:	45 0e                	rex.RB (bad) 
    fbcf:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fbd5:	00 00                	add    BYTE PTR [rax],al
    fbd7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    fbda:	00 00                	add    BYTE PTR [rax],al
    fbdc:	04 05                	add    al,0x5
    fbde:	00 00                	add    BYTE PTR [rax],al
    fbe0:	82                   	(bad)  
    fbe1:	64 ff                	fs (bad) 
    fbe3:	ff 45 01             	inc    DWORD PTR [rbp+0x1]
    fbe6:	00 00                	add    BYTE PTR [rax],al
    fbe8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    fbeb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fbf1:	03 3c 01             	add    edi,DWORD PTR [rcx+rax*1]
    fbf4:	0c 07                	or     al,0x7
    fbf6:	08 00                	or     BYTE PTR [rax],al
    fbf8:	1c 00                	sbb    al,0x0
    fbfa:	00 00                	add    BYTE PTR [rax],al
    fbfc:	24 05                	and    al,0x5
    fbfe:	00 00                	add    BYTE PTR [rax],al
    fc00:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    fc01:	65 ff                	gs (bad) 
    fc03:	ff 60 01             	jmp    QWORD PTR [rax+0x1]
    fc06:	00 00                	add    BYTE PTR [rax],al
    fc08:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    fc0b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fc11:	03 57 01             	add    edx,DWORD PTR [rdi+0x1]
    fc14:	0c 07                	or     al,0x7
    fc16:	08 00                	or     BYTE PTR [rax],al
    fc18:	1c 00                	sbb    al,0x0
    fc1a:	00 00                	add    BYTE PTR [rax],al
    fc1c:	44 05 00 00 e7 66    	rex.R add eax,0x66e70000
    fc22:	ff                   	(bad)  
    fc23:	ff 61 00             	jmp    QWORD PTR [rcx+0x0]
    fc26:	00 00                	add    BYTE PTR [rax],al
    fc28:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    fc2b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fc31:	02 58 0c             	add    bl,BYTE PTR [rax+0xc]
    fc34:	07                   	(bad)  
    fc35:	08 00                	or     BYTE PTR [rax],al
    fc37:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    fc3a:	00 00                	add    BYTE PTR [rax],al
    fc3c:	64 05 00 00 28 67    	fs add eax,0x67280000
    fc42:	ff                   	(bad)  
    fc43:	ff                   	(bad)  
    fc44:	be 00 00 00 00       	mov    esi,0x0
    fc49:	45 0e                	rex.RB (bad) 
    fc4b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fc51:	02 b5 0c 07 08 00    	add    dh,BYTE PTR [rbp+0x8070c]
    fc57:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    fc5a:	00 00                	add    BYTE PTR [rax],al
    fc5c:	84 05 00 00 c6 67    	test   BYTE PTR [rip+0x67c60000],al        # 67c6fc62 <_end+0x67b3345a>
    fc62:	ff                   	(bad)  
    fc63:	ff 52 02             	call   QWORD PTR [rdx+0x2]
    fc66:	00 00                	add    BYTE PTR [rax],al
    fc68:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    fc6b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fc71:	03 49 02             	add    ecx,DWORD PTR [rcx+0x2]
    fc74:	0c 07                	or     al,0x7
    fc76:	08 00                	or     BYTE PTR [rax],al
    fc78:	1c 00                	sbb    al,0x0
    fc7a:	00 00                	add    BYTE PTR [rax],al
    fc7c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    fc7d:	05 00 00 f8 69       	add    eax,0x69f80000
    fc82:	ff                   	(bad)  
    fc83:	ff                   	(bad)  
    fc84:	f8                   	clc    
    fc85:	01 00                	add    DWORD PTR [rax],eax
    fc87:	00 00                	add    BYTE PTR [rax],al
    fc89:	45 0e                	rex.RB (bad) 
    fc8b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fc91:	03 ef                	add    ebp,edi
    fc93:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    fc96:	08 00                	or     BYTE PTR [rax],al
    fc98:	1c 00                	sbb    al,0x0
    fc9a:	00 00                	add    BYTE PTR [rax],al
    fc9c:	c4                   	(bad)  
    fc9d:	05 00 00 d0 6b       	add    eax,0x6bd00000
    fca2:	ff                   	(bad)  
    fca3:	ff 5a 00             	call   FWORD PTR [rdx+0x0]
    fca6:	00 00                	add    BYTE PTR [rax],al
    fca8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    fcab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fcb1:	02 51 0c             	add    dl,BYTE PTR [rcx+0xc]
    fcb4:	07                   	(bad)  
    fcb5:	08 00                	or     BYTE PTR [rax],al
    fcb7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    fcba:	00 00                	add    BYTE PTR [rax],al
    fcbc:	e4 05                	in     al,0x5
    fcbe:	00 00                	add    BYTE PTR [rax],al
    fcc0:	0a 6c ff ff          	or     ch,BYTE PTR [rdi+rdi*8-0x1]
    fcc4:	0f 03 00             	lsl    eax,WORD PTR [rax]
    fcc7:	00 00                	add    BYTE PTR [rax],al
    fcc9:	45 0e                	rex.RB (bad) 
    fccb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fcd1:	03 06                	add    eax,DWORD PTR [rsi]
    fcd3:	03 0c 07             	add    ecx,DWORD PTR [rdi+rax*1]
    fcd6:	08 00                	or     BYTE PTR [rax],al
    fcd8:	1c 00                	sbb    al,0x0
    fcda:	00 00                	add    BYTE PTR [rax],al
    fcdc:	04 06                	add    al,0x6
    fcde:	00 00                	add    BYTE PTR [rax],al
    fce0:	f9                   	stc    
    fce1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    fce2:	ff                   	(bad)  
    fce3:	ff 51 04             	call   QWORD PTR [rcx+0x4]
    fce6:	00 00                	add    BYTE PTR [rax],al
    fce8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    fceb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fcf1:	4a 8c 03             	rex.WX mov WORD PTR [rbx],es
    fcf4:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
    fcf8:	18 00                	sbb    BYTE PTR [rax],al
    fcfa:	00 00                	add    BYTE PTR [rax],al
    fcfc:	24 06                	and    al,0x6
    fcfe:	00 00                	add    BYTE PTR [rax],al
    fd00:	2a 73 ff             	sub    dh,BYTE PTR [rbx-0x1]
    fd03:	ff 2a                	jmp    FWORD PTR [rdx]
    fd05:	00 00                	add    BYTE PTR [rax],al
    fd07:	00 00                	add    BYTE PTR [rax],al
    fd09:	45 0e                	rex.RB (bad) 
    fd0b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fd11:	00 00                	add    BYTE PTR [rax],al
    fd13:	00 20                	add    BYTE PTR [rax],ah
    fd15:	00 00                	add    BYTE PTR [rax],al
    fd17:	00 40 06             	add    BYTE PTR [rax+0x6],al
    fd1a:	00 00                	add    BYTE PTR [rax],al
    fd1c:	38 73 ff             	cmp    BYTE PTR [rbx-0x1],dh
    fd1f:	ff b2 01 00 00 00    	push   QWORD PTR [rdx+0x1]
    fd25:	45 0e                	rex.RB (bad) 
    fd27:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fd2d:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    fd31:	a1 01 0c 07 08 00 00 	movabs eax,ds:0x1c000008070c01
    fd38:	1c 00 
    fd3a:	00 00                	add    BYTE PTR [rax],al
    fd3c:	64 06                	fs (bad) 
    fd3e:	00 00                	add    BYTE PTR [rax],al
    fd40:	c6                   	(bad)  
    fd41:	74 ff                	je     fd42 <__GNU_EH_FRAME_HDR+0xa4a>
    fd43:	ff 17                	call   QWORD PTR [rdi]
    fd45:	00 00                	add    BYTE PTR [rax],al
    fd47:	00 00                	add    BYTE PTR [rax],al
    fd49:	45 0e                	rex.RB (bad) 
    fd4b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fd51:	4e 0c 07             	rex.WRX or al,0x7
    fd54:	08 00                	or     BYTE PTR [rax],al
    fd56:	00 00                	add    BYTE PTR [rax],al
    fd58:	1c 00                	sbb    al,0x0
    fd5a:	00 00                	add    BYTE PTR [rax],al
    fd5c:	84 06                	test   BYTE PTR [rsi],al
    fd5e:	00 00                	add    BYTE PTR [rax],al
    fd60:	bd 74 ff ff 4f       	mov    ebp,0x4fffff74
    fd65:	00 00                	add    BYTE PTR [rax],al
    fd67:	00 00                	add    BYTE PTR [rax],al
    fd69:	45 0e                	rex.RB (bad) 
    fd6b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fd71:	02 46 0c             	add    al,BYTE PTR [rsi+0xc]
    fd74:	07                   	(bad)  
    fd75:	08 00                	or     BYTE PTR [rax],al
    fd77:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    fd7a:	00 00                	add    BYTE PTR [rax],al
    fd7c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    fd7d:	06                   	(bad)  
    fd7e:	00 00                	add    BYTE PTR [rax],al
    fd80:	ec                   	in     al,dx
    fd81:	74 ff                	je     fd82 <__GNU_EH_FRAME_HDR+0xa8a>
    fd83:	ff 4d 00             	dec    DWORD PTR [rbp+0x0]
    fd86:	00 00                	add    BYTE PTR [rax],al
    fd88:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    fd8b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fd91:	02 44 0c 07          	add    al,BYTE PTR [rsp+rcx*1+0x7]
    fd95:	08 00                	or     BYTE PTR [rax],al
    fd97:	00 18                	add    BYTE PTR [rax],bl
    fd99:	00 00                	add    BYTE PTR [rax],al
    fd9b:	00 c4                	add    ah,al
    fd9d:	06                   	(bad)  
    fd9e:	00 00                	add    BYTE PTR [rax],al
    fda0:	19 75 ff             	sbb    DWORD PTR [rbp-0x1],esi
    fda3:	ff 77 01             	push   QWORD PTR [rdi+0x1]
    fda6:	00 00                	add    BYTE PTR [rax],al
    fda8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    fdab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fdb1:	00 00                	add    BYTE PTR [rax],al
    fdb3:	00 20                	add    BYTE PTR [rax],ah
    fdb5:	00 00                	add    BYTE PTR [rax],al
    fdb7:	00 e0                	add    al,ah
    fdb9:	06                   	(bad)  
    fdba:	00 00                	add    BYTE PTR [rax],al
    fdbc:	74 76                	je     fe34 <__GNU_EH_FRAME_HDR+0xb3c>
    fdbe:	ff                   	(bad)  
    fdbf:	ff                   	(bad)  
    fdc0:	7e 05                	jle    fdc7 <__GNU_EH_FRAME_HDR+0xacf>
    fdc2:	00 00                	add    BYTE PTR [rax],al
    fdc4:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    fdc7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fdcd:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    fdd1:	6d                   	ins    DWORD PTR es:[rdi],dx
    fdd2:	05 0c 07 08 00       	add    eax,0x8070c
    fdd7:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    fdda:	00 00                	add    BYTE PTR [rax],al
    fddc:	04 07                	add    al,0x7
    fdde:	00 00                	add    BYTE PTR [rax],al
    fde0:	ce                   	(bad)  
    fde1:	7b ff                	jnp    fde2 <__GNU_EH_FRAME_HDR+0xaea>
    fde3:	ff ae 01 00 00 00    	jmp    FWORD PTR [rsi+0x1]
    fde9:	45 0e                	rex.RB (bad) 
    fdeb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fdf1:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    fdf5:	a0 01 0c 07 08 00 00 	movabs al,ds:0x8070c01
    fdfc:	00 00 
    fdfe:	00 00                	add    BYTE PTR [rax],al
    fe00:	1c 00                	sbb    al,0x0
    fe02:	00 00                	add    BYTE PTR [rax],al
    fe04:	2c 07                	sub    al,0x7
    fe06:	00 00                	add    BYTE PTR [rax],al
    fe08:	54                   	push   rsp
    fe09:	7d ff                	jge    fe0a <__GNU_EH_FRAME_HDR+0xb12>
    fe0b:	ff 47 00             	inc    DWORD PTR [rdi+0x0]
    fe0e:	00 00                	add    BYTE PTR [rax],al
    fe10:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    fe13:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fe19:	7e 0c                	jle    fe27 <__GNU_EH_FRAME_HDR+0xb2f>
    fe1b:	07                   	(bad)  
    fe1c:	08 00                	or     BYTE PTR [rax],al
    fe1e:	00 00                	add    BYTE PTR [rax],al
    fe20:	2c 00                	sub    al,0x0
    fe22:	00 00                	add    BYTE PTR [rax],al
    fe24:	4c 07                	rex.WR (bad) 
    fe26:	00 00                	add    BYTE PTR [rax],al
    fe28:	7b 7d                	jnp    fea7 <__GNU_EH_FRAME_HDR+0xbaf>
    fe2a:	ff                   	(bad)  
    fe2b:	ff 16                	call   QWORD PTR [rsi]
    fe2d:	05 00 00 00 45       	add    eax,0x45000000
    fe32:	0e                   	(bad)  
    fe33:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fe39:	4d 8f 03             	rex.WRB pop QWORD PTR [r11]
    fe3c:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
    fe43:	07                   	(bad)  
    fe44:	03 00                	add    eax,DWORD PTR [rax]
    fe46:	05 0c 07 08 00       	add    eax,0x8070c
    fe4b:	00 00                	add    BYTE PTR [rax],al
    fe4d:	00 00                	add    BYTE PTR [rax],al
    fe4f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    fe52:	00 00                	add    BYTE PTR [rax],al
    fe54:	7c 07                	jl     fe5d <__GNU_EH_FRAME_HDR+0xb65>
    fe56:	00 00                	add    BYTE PTR [rax],al
    fe58:	61                   	(bad)  
    fe59:	82                   	(bad)  
    fe5a:	ff                   	(bad)  
    fe5b:	ff a4 01 00 00 00 45 	jmp    QWORD PTR [rcx+rax*1+0x45000000]
    fe62:	0e                   	(bad)  
    fe63:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fe69:	03 9b 01 0c 07 08    	add    ebx,DWORD PTR [rbx+0x8070c01]
    fe6f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    fe72:	00 00                	add    BYTE PTR [rax],al
    fe74:	9c                   	pushf  
    fe75:	07                   	(bad)  
    fe76:	00 00                	add    BYTE PTR [rax],al
    fe78:	e5 83                	in     eax,0x83
    fe7a:	ff                   	(bad)  
    fe7b:	ff 12                	call   QWORD PTR [rdx]
    fe7d:	01 00                	add    DWORD PTR [rax],eax
    fe7f:	00 00                	add    BYTE PTR [rax],al
    fe81:	45 0e                	rex.RB (bad) 
    fe83:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fe89:	03 09                	add    ecx,DWORD PTR [rcx]
    fe8b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    fe8e:	08 00                	or     BYTE PTR [rax],al
    fe90:	20 00                	and    BYTE PTR [rax],al
    fe92:	00 00                	add    BYTE PTR [rax],al
    fe94:	bc 07 00 00 d7       	mov    esp,0xd7000007
    fe99:	84 ff                	test   bh,bh
    fe9b:	ff                   	(bad)  
    fe9c:	d9 02                	fld    DWORD PTR [rdx]
    fe9e:	00 00                	add    BYTE PTR [rax],al
    fea0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    fea3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fea9:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    fead:	c8 02 0c 07          	enter  0xc02,0x7
    feb1:	08 00                	or     BYTE PTR [rax],al
    feb3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    feb6:	00 00                	add    BYTE PTR [rax],al
    feb8:	e0 07                	loopne fec1 <__GNU_EH_FRAME_HDR+0xbc9>
    feba:	00 00                	add    BYTE PTR [rax],al
    febc:	8c 87 ff ff 35 01    	mov    WORD PTR [rdi+0x135ffff],es
    fec2:	00 00                	add    BYTE PTR [rax],al
    fec4:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    fec7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fecd:	03 2c 01             	add    ebp,DWORD PTR [rcx+rax*1]
    fed0:	0c 07                	or     al,0x7
    fed2:	08 00                	or     BYTE PTR [rax],al
    fed4:	1c 00                	sbb    al,0x0
    fed6:	00 00                	add    BYTE PTR [rax],al
    fed8:	00 08                	add    BYTE PTR [rax],cl
    feda:	00 00                	add    BYTE PTR [rax],al
    fedc:	a1 88 ff ff 71 03 00 	movabs eax,ds:0x371ffff88
    fee3:	00 00 
    fee5:	45 0e                	rex.RB (bad) 
    fee7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    feed:	03 68 03             	add    ebp,DWORD PTR [rax+0x3]
    fef0:	0c 07                	or     al,0x7
    fef2:	08 00                	or     BYTE PTR [rax],al
    fef4:	1c 00                	sbb    al,0x0
    fef6:	00 00                	add    BYTE PTR [rax],al
    fef8:	20 08                	and    BYTE PTR [rax],cl
    fefa:	00 00                	add    BYTE PTR [rax],al
    fefc:	f2 8b ff             	repnz mov edi,edi
    feff:	ff ab 01 00 00 00    	jmp    FWORD PTR [rbx+0x1]
    ff05:	45 0e                	rex.RB (bad) 
    ff07:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ff0d:	03 a2 01 0c 07 08    	add    esp,DWORD PTR [rdx+0x8070c01]
    ff13:	00 20                	add    BYTE PTR [rax],ah
    ff15:	00 00                	add    BYTE PTR [rax],al
    ff17:	00 40 08             	add    BYTE PTR [rax+0x8],al
    ff1a:	00 00                	add    BYTE PTR [rax],al
    ff1c:	7d 8d                	jge    feab <__GNU_EH_FRAME_HDR+0xbb3>
    ff1e:	ff                   	(bad)  
    ff1f:	ff 84 01 00 00 00 45 	inc    DWORD PTR [rcx+rax*1+0x45000000]
    ff26:	0e                   	(bad)  
    ff27:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ff2d:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    ff31:	76 01                	jbe    ff34 <__GNU_EH_FRAME_HDR+0xc3c>
    ff33:	0c 07                	or     al,0x7
    ff35:	08 00                	or     BYTE PTR [rax],al
    ff37:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ff3a:	00 00                	add    BYTE PTR [rax],al
    ff3c:	64 08 00             	or     BYTE PTR fs:[rax],al
    ff3f:	00 dd                	add    ch,bl
    ff41:	8e ff                	mov    ?,edi
    ff43:	ff                   	(bad)  
    ff44:	ee                   	out    dx,al
    ff45:	01 00                	add    DWORD PTR [rax],eax
    ff47:	00 00                	add    BYTE PTR [rax],al
    ff49:	45 0e                	rex.RB (bad) 
    ff4b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ff51:	03 e5                	add    esp,ebp
    ff53:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ff56:	08 00                	or     BYTE PTR [rax],al
    ff58:	1c 00                	sbb    al,0x0
    ff5a:	00 00                	add    BYTE PTR [rax],al
    ff5c:	84 08                	test   BYTE PTR [rax],cl
    ff5e:	00 00                	add    BYTE PTR [rax],al
    ff60:	ab                   	stos   DWORD PTR es:[rdi],eax
    ff61:	90                   	nop
    ff62:	ff                   	(bad)  
    ff63:	ff                   	(bad)  
    ff64:	e8 01 00 00 00       	call   ff6a <__GNU_EH_FRAME_HDR+0xc72>
    ff69:	45 0e                	rex.RB (bad) 
    ff6b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ff71:	03 df                	add    ebx,edi
    ff73:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ff76:	08 00                	or     BYTE PTR [rax],al
    ff78:	1c 00                	sbb    al,0x0
    ff7a:	00 00                	add    BYTE PTR [rax],al
    ff7c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    ff7d:	08 00                	or     BYTE PTR [rax],al
    ff7f:	00 73 92             	add    BYTE PTR [rbx-0x6e],dh
    ff82:	ff                   	(bad)  
    ff83:	ff 6c 00 00          	jmp    FWORD PTR [rax+rax*1+0x0]
    ff87:	00 00                	add    BYTE PTR [rax],al
    ff89:	45 0e                	rex.RB (bad) 
    ff8b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ff91:	02 63 0c             	add    ah,BYTE PTR [rbx+0xc]
    ff94:	07                   	(bad)  
    ff95:	08 00                	or     BYTE PTR [rax],al
    ff97:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ff9a:	00 00                	add    BYTE PTR [rax],al
    ff9c:	c4                   	(bad)  
    ff9d:	08 00                	or     BYTE PTR [rax],al
    ff9f:	00 bf 92 ff ff 72    	add    BYTE PTR [rdi+0x72ffff92],bh
    ffa5:	00 00                	add    BYTE PTR [rax],al
    ffa7:	00 00                	add    BYTE PTR [rax],al
    ffa9:	45 0e                	rex.RB (bad) 
    ffab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ffb1:	02 69 0c             	add    ch,BYTE PTR [rcx+0xc]
    ffb4:	07                   	(bad)  
    ffb5:	08 00                	or     BYTE PTR [rax],al
    ffb7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ffba:	00 00                	add    BYTE PTR [rax],al
    ffbc:	e4 08                	in     al,0x8
    ffbe:	00 00                	add    BYTE PTR [rax],al
    ffc0:	11 93 ff ff 11 01    	adc    DWORD PTR [rbx+0x111ffff],edx
    ffc6:	00 00                	add    BYTE PTR [rax],al
    ffc8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ffcb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ffd1:	03 08                	add    ecx,DWORD PTR [rax]
    ffd3:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ffd6:	08 00                	or     BYTE PTR [rax],al
    ffd8:	1c 00                	sbb    al,0x0
    ffda:	00 00                	add    BYTE PTR [rax],al
    ffdc:	04 09                	add    al,0x9
    ffde:	00 00                	add    BYTE PTR [rax],al
    ffe0:	02 94 ff ff 5c 00 00 	add    dl,BYTE PTR [rdi+rdi*8+0x5cff]
    ffe7:	00 00                	add    BYTE PTR [rax],al
    ffe9:	45 0e                	rex.RB (bad) 
    ffeb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fff1:	02 53 0c             	add    dl,BYTE PTR [rbx+0xc]
    fff4:	07                   	(bad)  
    fff5:	08 00                	or     BYTE PTR [rax],al
    fff7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    fffa:	00 00                	add    BYTE PTR [rax],al
    fffc:	24 09                	and    al,0x9
    fffe:	00 00                	add    BYTE PTR [rax],al
   10000:	3e 94                	ds xchg esp,eax
   10002:	ff                   	(bad)  
   10003:	ff                   	(bad)  
   10004:	3e 00 00             	ds add BYTE PTR [rax],al
   10007:	00 00                	add    BYTE PTR [rax],al
   10009:	45 0e                	rex.RB (bad) 
   1000b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10011:	75 0c                	jne    1001f <__GNU_EH_FRAME_HDR+0xd27>
   10013:	07                   	(bad)  
   10014:	08 00                	or     BYTE PTR [rax],al
   10016:	00 00                	add    BYTE PTR [rax],al
   10018:	1c 00                	sbb    al,0x0
   1001a:	00 00                	add    BYTE PTR [rax],al
   1001c:	44 09 00             	or     DWORD PTR [rax],r8d
   1001f:	00 5c 94 ff          	add    BYTE PTR [rsp+rdx*4-0x1],bl
   10023:	ff 86 00 00 00 00    	inc    DWORD PTR [rsi+0x0]
   10029:	45 0e                	rex.RB (bad) 
   1002b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10031:	02 7d 0c             	add    bh,BYTE PTR [rbp+0xc]
   10034:	07                   	(bad)  
   10035:	08 00                	or     BYTE PTR [rax],al
   10037:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1003a:	00 00                	add    BYTE PTR [rax],al
   1003c:	64 09 00             	or     DWORD PTR fs:[rax],eax
   1003f:	00 c2                	add    dl,al
   10041:	94                   	xchg   esp,eax
   10042:	ff                   	(bad)  
   10043:	ff                   	(bad)  
   10044:	df 00                	fild   WORD PTR [rax]
   10046:	00 00                	add    BYTE PTR [rax],al
   10048:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   1004b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10051:	02 d6                	add    dl,dh
   10053:	0c 07                	or     al,0x7
   10055:	08 00                	or     BYTE PTR [rax],al
   10057:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1005a:	00 00                	add    BYTE PTR [rax],al
   1005c:	84 09                	test   BYTE PTR [rcx],cl
   1005e:	00 00                	add    BYTE PTR [rax],al
   10060:	81 95 ff ff 74 00 00 	adc    DWORD PTR [rbp+0x74ffff],0x45000000
   10067:	00 00 45 
   1006a:	0e                   	(bad)  
   1006b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10071:	02 6b 0c             	add    ch,BYTE PTR [rbx+0xc]
   10074:	07                   	(bad)  
   10075:	08 00                	or     BYTE PTR [rax],al
   10077:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1007a:	00 00                	add    BYTE PTR [rax],al
   1007c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1007d:	09 00                	or     DWORD PTR [rax],eax
   1007f:	00 d5                	add    ch,dl
   10081:	95                   	xchg   ebp,eax
   10082:	ff                   	(bad)  
   10083:	ff 9c 00 00 00 00 45 	call   FWORD PTR [rax+rax*1+0x45000000]
   1008a:	0e                   	(bad)  
   1008b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10091:	02 93 0c 07 08 00    	add    dl,BYTE PTR [rbx+0x8070c]
   10097:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1009a:	00 00                	add    BYTE PTR [rax],al
   1009c:	c4                   	(bad)  
   1009d:	09 00                	or     DWORD PTR [rax],eax
   1009f:	00 51 96             	add    BYTE PTR [rcx-0x6a],dl
   100a2:	ff                   	(bad)  
   100a3:	ff 29                	jmp    FWORD PTR [rcx]
   100a5:	00 00                	add    BYTE PTR [rax],al
   100a7:	00 00                	add    BYTE PTR [rax],al
   100a9:	45 0e                	rex.RB (bad) 
   100ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   100b1:	60                   	(bad)  
   100b2:	0c 07                	or     al,0x7
   100b4:	08 00                	or     BYTE PTR [rax],al
   100b6:	00 00                	add    BYTE PTR [rax],al
   100b8:	1c 00                	sbb    al,0x0
   100ba:	00 00                	add    BYTE PTR [rax],al
   100bc:	e4 09                	in     al,0x9
   100be:	00 00                	add    BYTE PTR [rax],al
   100c0:	5a                   	pop    rdx
   100c1:	96                   	xchg   esi,eax
   100c2:	ff                   	(bad)  
   100c3:	ff 29                	jmp    FWORD PTR [rcx]
   100c5:	00 00                	add    BYTE PTR [rax],al
   100c7:	00 00                	add    BYTE PTR [rax],al
   100c9:	45 0e                	rex.RB (bad) 
   100cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   100d1:	60                   	(bad)  
   100d2:	0c 07                	or     al,0x7
   100d4:	08 00                	or     BYTE PTR [rax],al
   100d6:	00 00                	add    BYTE PTR [rax],al
   100d8:	24 00                	and    al,0x0
   100da:	00 00                	add    BYTE PTR [rax],al
   100dc:	04 0a                	add    al,0xa
   100de:	00 00                	add    BYTE PTR [rax],al
   100e0:	63 96 ff ff 53 01    	movsxd edx,DWORD PTR [rsi+0x153ffff]
   100e6:	00 00                	add    BYTE PTR [rax],al
   100e8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   100eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   100f1:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
   100f5:	45 01 0c 07          	add    DWORD PTR [r15+rax*1],r9d
   100f9:	08 00                	or     BYTE PTR [rax],al
   100fb:	00 00                	add    BYTE PTR [rax],al
   100fd:	00 00                	add    BYTE PTR [rax],al
   100ff:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   10102:	00 00                	add    BYTE PTR [rax],al
   10104:	2c 0a                	sub    al,0xa
   10106:	00 00                	add    BYTE PTR [rax],al
   10108:	8e 97 ff ff 1e 00    	mov    ss,WORD PTR [rdi+0x1effff]
   1010e:	00 00                	add    BYTE PTR [rax],al
   10110:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   10113:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10119:	55                   	push   rbp
   1011a:	0c 07                	or     al,0x7
   1011c:	08 00                	or     BYTE PTR [rax],al
   1011e:	00 00                	add    BYTE PTR [rax],al
   10120:	1c 00                	sbb    al,0x0
   10122:	00 00                	add    BYTE PTR [rax],al
   10124:	4c 0a 00             	rex.WR or r8b,BYTE PTR [rax]
   10127:	00 8c 97 ff ff 63 01 	add    BYTE PTR [rdi+rdx*4+0x163ffff],cl
   1012e:	00 00                	add    BYTE PTR [rax],al
   10130:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   10133:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10139:	03 5a 01             	add    ebx,DWORD PTR [rdx+0x1]
   1013c:	0c 07                	or     al,0x7
   1013e:	08 00                	or     BYTE PTR [rax],al
   10140:	2c 00                	sub    al,0x0
   10142:	00 00                	add    BYTE PTR [rax],al
   10144:	6c                   	ins    BYTE PTR es:[rdi],dx
   10145:	0a 00                	or     al,BYTE PTR [rax]
   10147:	00 cf                	add    bh,cl
   10149:	98                   	cwde   
   1014a:	ff                   	(bad)  
   1014b:	ff 0e                	dec    DWORD PTR [rsi]
   1014d:	02 00                	add    al,BYTE PTR [rax]
   1014f:	00 00                	add    BYTE PTR [rax],al
   10151:	45 0e                	rex.RB (bad) 
   10153:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10159:	50                   	push   rax
   1015a:	8f 03                	pop    QWORD PTR [rbx]
   1015c:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
   10163:	07                   	(bad)  
   10164:	03 f5                	add    esi,ebp
   10166:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
   10169:	08 00                	or     BYTE PTR [rax],al
   1016b:	00 00                	add    BYTE PTR [rax],al
   1016d:	00 00                	add    BYTE PTR [rax],al
   1016f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   10172:	00 00                	add    BYTE PTR [rax],al
   10174:	9c                   	pushf  
   10175:	0a 00                	or     al,BYTE PTR [rax]
   10177:	00 ad 9a ff ff b2    	add    BYTE PTR [rbp-0x4d000066],ch
   1017d:	00 00                	add    BYTE PTR [rax],al
   1017f:	00 00                	add    BYTE PTR [rax],al
   10181:	45 0e                	rex.RB (bad) 
   10183:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10189:	02 a9 0c 07 08 00    	add    ch,BYTE PTR [rcx+0x8070c]
   1018f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   10192:	00 00                	add    BYTE PTR [rax],al
   10194:	bc 0a 00 00 3f       	mov    esp,0x3f00000a
   10199:	9b                   	fwait
   1019a:	ff                   	(bad)  
   1019b:	ff a5 00 00 00 00    	jmp    QWORD PTR [rbp+0x0]
   101a1:	45 0e                	rex.RB (bad) 
   101a3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   101a9:	02 9c 0c 07 08 00 00 	add    bl,BYTE PTR [rsp+rcx*1+0x807]
   101b0:	24 00                	and    al,0x0
   101b2:	00 00                	add    BYTE PTR [rax],al
   101b4:	dc 0a                	fmul   QWORD PTR [rdx]
   101b6:	00 00                	add    BYTE PTR [rax],al
   101b8:	c4                   	(bad)  
   101b9:	9b                   	fwait
   101ba:	ff                   	(bad)  
   101bb:	ff 94 00 00 00 00 45 	call   QWORD PTR [rax+rax*1+0x45000000]
   101c2:	0e                   	(bad)  
   101c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   101c9:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
   101cd:	86 0c 07             	xchg   BYTE PTR [rdi+rax*1],cl
   101d0:	08 00                	or     BYTE PTR [rax],al
   101d2:	00 00                	add    BYTE PTR [rax],al
   101d4:	00 00                	add    BYTE PTR [rax],al
   101d6:	00 00                	add    BYTE PTR [rax],al
   101d8:	1c 00                	sbb    al,0x0
   101da:	00 00                	add    BYTE PTR [rax],al
   101dc:	04 0b                	add    al,0xb
   101de:	00 00                	add    BYTE PTR [rax],al
   101e0:	30 9c ff ff d5 00 00 	xor    BYTE PTR [rdi+rdi*8+0xd5ff],bl
   101e7:	00 00                	add    BYTE PTR [rax],al
   101e9:	45 0e                	rex.RB (bad) 
   101eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   101f1:	02 cc                	add    cl,ah
   101f3:	0c 07                	or     al,0x7
   101f5:	08 00                	or     BYTE PTR [rax],al
   101f7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   101fa:	00 00                	add    BYTE PTR [rax],al
   101fc:	24 0b                	and    al,0xb
   101fe:	00 00                	add    BYTE PTR [rax],al
   10200:	e5 9c                	in     eax,0x9c
   10202:	ff                   	(bad)  
   10203:	ff                   	(bad)  
   10204:	df 00                	fild   WORD PTR [rax]
   10206:	00 00                	add    BYTE PTR [rax],al
   10208:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   1020b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10211:	02 d6                	add    dl,dh
   10213:	0c 07                	or     al,0x7
   10215:	08 00                	or     BYTE PTR [rax],al
   10217:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1021a:	00 00                	add    BYTE PTR [rax],al
   1021c:	44 0b 00             	or     r8d,DWORD PTR [rax]
   1021f:	00 a4 9d ff ff 7d 00 	add    BYTE PTR [rbp+rbx*4+0x7dffff],ah
   10226:	00 00                	add    BYTE PTR [rax],al
   10228:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   1022b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10231:	02 74 0c 07          	add    dh,BYTE PTR [rsp+rcx*1+0x7]
   10235:	08 00                	or     BYTE PTR [rax],al
   10237:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1023a:	00 00                	add    BYTE PTR [rax],al
   1023c:	64 0b 00             	or     eax,DWORD PTR fs:[rax]
   1023f:	00 01                	add    BYTE PTR [rcx],al
   10241:	9e                   	sahf   
   10242:	ff                   	(bad)  
   10243:	ff 36                	push   QWORD PTR [rsi]
   10245:	01 00                	add    DWORD PTR [rax],eax
   10247:	00 00                	add    BYTE PTR [rax],al
   10249:	45 0e                	rex.RB (bad) 
   1024b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10251:	03 2d 01 0c 07 08    	add    ebp,DWORD PTR [rip+0x8070c01]        # 8080e58 <_end+0x7f44650>
   10257:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1025a:	00 00                	add    BYTE PTR [rax],al
   1025c:	84 0b                	test   BYTE PTR [rbx],cl
   1025e:	00 00                	add    BYTE PTR [rax],al
   10260:	17                   	(bad)  
   10261:	9f                   	lahf   
   10262:	ff                   	(bad)  
   10263:	ff                   	(bad)  
   10264:	7e 00                	jle    10266 <__GNU_EH_FRAME_HDR+0xf6e>
   10266:	00 00                	add    BYTE PTR [rax],al
   10268:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   1026b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10271:	02 75 0c             	add    dh,BYTE PTR [rbp+0xc]
   10274:	07                   	(bad)  
   10275:	08 00                	or     BYTE PTR [rax],al
   10277:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1027a:	00 00                	add    BYTE PTR [rax],al
   1027c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1027d:	0b 00                	or     eax,DWORD PTR [rax]
   1027f:	00 75 9f             	add    BYTE PTR [rbp-0x61],dh
   10282:	ff                   	(bad)  
   10283:	ff 2a                	jmp    FWORD PTR [rdx]
   10285:	02 00                	add    al,BYTE PTR [rax]
   10287:	00 00                	add    BYTE PTR [rax],al
   10289:	45 0e                	rex.RB (bad) 
   1028b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10291:	03 21                	add    esp,DWORD PTR [rcx]
   10293:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
   10296:	08 00                	or     BYTE PTR [rax],al
   10298:	1c 00                	sbb    al,0x0
   1029a:	00 00                	add    BYTE PTR [rax],al
   1029c:	c4                   	(bad)  
   1029d:	0b 00                	or     eax,DWORD PTR [rax]
   1029f:	00 7f a1             	add    BYTE PTR [rdi-0x5f],bh
   102a2:	ff                   	(bad)  
   102a3:	ff c3                	inc    ebx
   102a5:	00 00                	add    BYTE PTR [rax],al
   102a7:	00 00                	add    BYTE PTR [rax],al
   102a9:	45 0e                	rex.RB (bad) 
   102ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   102b1:	02 ba 0c 07 08 00    	add    bh,BYTE PTR [rdx+0x8070c]
   102b7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   102ba:	00 00                	add    BYTE PTR [rax],al
   102bc:	e4 0b                	in     al,0xb
   102be:	00 00                	add    BYTE PTR [rax],al
   102c0:	22 a2 ff ff 9b 01    	and    ah,BYTE PTR [rdx+0x19bffff]
   102c6:	00 00                	add    BYTE PTR [rax],al
   102c8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   102cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   102d1:	03 92 01 0c 07 08    	add    edx,DWORD PTR [rdx+0x8070c01]
   102d7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   102da:	00 00                	add    BYTE PTR [rax],al
   102dc:	04 0c                	add    al,0xc
   102de:	00 00                	add    BYTE PTR [rax],al
   102e0:	9d                   	popf   
   102e1:	a3 ff ff 0d 01 00 00 	movabs ds:0x45000000010dffff,eax
   102e8:	00 45 
   102ea:	0e                   	(bad)  
   102eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   102f1:	03 04 01             	add    eax,DWORD PTR [rcx+rax*1]
   102f4:	0c 07                	or     al,0x7
   102f6:	08 00                	or     BYTE PTR [rax],al
   102f8:	1c 00                	sbb    al,0x0
   102fa:	00 00                	add    BYTE PTR [rax],al
   102fc:	24 0c                	and    al,0xc
   102fe:	00 00                	add    BYTE PTR [rax],al
   10300:	8a a4 ff ff 66 00 00 	mov    ah,BYTE PTR [rdi+rdi*8+0x66ff]
   10307:	00 00                	add    BYTE PTR [rax],al
   10309:	45 0e                	rex.RB (bad) 
   1030b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10311:	02 5d 0c             	add    bl,BYTE PTR [rbp+0xc]
   10314:	07                   	(bad)  
   10315:	08 00                	or     BYTE PTR [rax],al
   10317:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1031a:	00 00                	add    BYTE PTR [rax],al
   1031c:	44 0c 00             	rex.R or al,0x0
   1031f:	00 d0                	add    al,dl
   10321:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   10322:	ff                   	(bad)  
   10323:	ff 75 00             	push   QWORD PTR [rbp+0x0]
   10326:	00 00                	add    BYTE PTR [rax],al
   10328:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   1032b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10331:	02 6c 0c 07          	add    ch,BYTE PTR [rsp+rcx*1+0x7]
   10335:	08 00                	or     BYTE PTR [rax],al
   10337:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1033a:	00 00                	add    BYTE PTR [rax],al
   1033c:	64 0c 00             	fs or  al,0x0
   1033f:	00 25 a5 ff ff db    	add    BYTE PTR [rip+0xffffffffdbffffa5],ah        # ffffffffdc0102ea <_end+0xffffffffdbed3ae2>
   10345:	00 00                	add    BYTE PTR [rax],al
   10347:	00 00                	add    BYTE PTR [rax],al
   10349:	45 0e                	rex.RB (bad) 
   1034b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10351:	02 d2                	add    dl,dl
   10353:	0c 07                	or     al,0x7
   10355:	08 00                	or     BYTE PTR [rax],al
   10357:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1035a:	00 00                	add    BYTE PTR [rax],al
   1035c:	84 0c 00             	test   BYTE PTR [rax+rax*1],cl
   1035f:	00 e0                	add    al,ah
   10361:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   10362:	ff                   	(bad)  
   10363:	ff 72 01             	push   QWORD PTR [rdx+0x1]
   10366:	00 00                	add    BYTE PTR [rax],al
   10368:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   1036b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10371:	03 69 01             	add    ebp,DWORD PTR [rcx+0x1]
   10374:	0c 07                	or     al,0x7
   10376:	08 00                	or     BYTE PTR [rax],al
   10378:	1c 00                	sbb    al,0x0
   1037a:	00 00                	add    BYTE PTR [rax],al
   1037c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1037d:	0c 00                	or     al,0x0
   1037f:	00 32                	add    BYTE PTR [rdx],dh
   10381:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   10382:	ff                   	(bad)  
   10383:	ff 6c 00 00          	jmp    FWORD PTR [rax+rax*1+0x0]
   10387:	00 00                	add    BYTE PTR [rax],al
   10389:	45 0e                	rex.RB (bad) 
   1038b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10391:	02 63 0c             	add    ah,BYTE PTR [rbx+0xc]
   10394:	07                   	(bad)  
   10395:	08 00                	or     BYTE PTR [rax],al
   10397:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1039a:	00 00                	add    BYTE PTR [rax],al
   1039c:	c4                   	(bad)  
   1039d:	0c 00                	or     al,0x0
   1039f:	00 7e a7             	add    BYTE PTR [rsi-0x59],bh
   103a2:	ff                   	(bad)  
   103a3:	ff 80 00 00 00 00    	inc    DWORD PTR [rax+0x0]
   103a9:	45 0e                	rex.RB (bad) 
   103ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   103b1:	02 77 0c             	add    dh,BYTE PTR [rdi+0xc]
   103b4:	07                   	(bad)  
   103b5:	08 00                	or     BYTE PTR [rax],al
   103b7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   103ba:	00 00                	add    BYTE PTR [rax],al
   103bc:	e4 0c                	in     al,0xc
   103be:	00 00                	add    BYTE PTR [rax],al
   103c0:	de a7 ff ff 16 00    	fisub  WORD PTR [rdi+0x16ffff]
   103c6:	00 00                	add    BYTE PTR [rax],al
   103c8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   103cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   103d1:	4d 0c 07             	rex.WRB or al,0x7
   103d4:	08 00                	or     BYTE PTR [rax],al
   103d6:	00 00                	add    BYTE PTR [rax],al
   103d8:	20 00                	and    BYTE PTR [rax],al
   103da:	00 00                	add    BYTE PTR [rax],al
   103dc:	04 0d                	add    al,0xd
   103de:	00 00                	add    BYTE PTR [rax],al
   103e0:	d4                   	(bad)  
   103e1:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   103e2:	ff                   	(bad)  
   103e3:	ff                   	(bad)  
   103e4:	3a 01                	cmp    al,BYTE PTR [rcx]
   103e6:	00 00                	add    BYTE PTR [rax],al
   103e8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   103eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   103f1:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
   103f5:	2c 01                	sub    al,0x1
   103f7:	0c 07                	or     al,0x7
   103f9:	08 00                	or     BYTE PTR [rax],al
   103fb:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   103fe:	00 00                	add    BYTE PTR [rax],al
   10400:	28 0d 00 00 ea a8    	sub    BYTE PTR [rip+0xffffffffa8ea0000],cl        # ffffffffa8eb0406 <_end+0xffffffffa8d73bfe>
   10406:	ff                   	(bad)  
   10407:	ff 64 00 00          	jmp    QWORD PTR [rax+rax*1+0x0]
   1040b:	00 00                	add    BYTE PTR [rax],al
   1040d:	45 0e                	rex.RB (bad) 
   1040f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10415:	02 5b 0c             	add    bl,BYTE PTR [rbx+0xc]
   10418:	07                   	(bad)  
   10419:	08 00                	or     BYTE PTR [rax],al
   1041b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1041e:	00 00                	add    BYTE PTR [rax],al
   10420:	48 0d 00 00 2e a9    	or     rax,0xffffffffa92e0000
   10426:	ff                   	(bad)  
   10427:	ff 53 00             	call   QWORD PTR [rbx+0x0]
   1042a:	00 00                	add    BYTE PTR [rax],al
   1042c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   1042f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10435:	02 4a 0c             	add    cl,BYTE PTR [rdx+0xc]
   10438:	07                   	(bad)  
   10439:	08 00                	or     BYTE PTR [rax],al
   1043b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1043e:	00 00                	add    BYTE PTR [rax],al
   10440:	68 0d 00 00 61       	push   0x6100000d
   10445:	a9 ff ff b1 00       	test   eax,0xb1ffff
   1044a:	00 00                	add    BYTE PTR [rax],al
   1044c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   1044f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10455:	02 a8 0c 07 08 00    	add    ch,BYTE PTR [rax+0x8070c]
   1045b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1045e:	00 00                	add    BYTE PTR [rax],al
   10460:	88 0d 00 00 f2 a9    	mov    BYTE PTR [rip+0xffffffffa9f20000],cl        # ffffffffa9f30466 <_end+0xffffffffa9df3c5e>
   10466:	ff                   	(bad)  
   10467:	ff cb                	dec    ebx
   10469:	00 00                	add    BYTE PTR [rax],al
   1046b:	00 00                	add    BYTE PTR [rax],al
   1046d:	45 0e                	rex.RB (bad) 
   1046f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10475:	02 c2                	add    al,dl
   10477:	0c 07                	or     al,0x7
   10479:	08 00                	or     BYTE PTR [rax],al
   1047b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1047e:	00 00                	add    BYTE PTR [rax],al
   10480:	a8 0d                	test   al,0xd
   10482:	00 00                	add    BYTE PTR [rax],al
   10484:	9d                   	popf   
   10485:	aa                   	stos   BYTE PTR es:[rdi],al
   10486:	ff                   	(bad)  
   10487:	ff 55 00             	call   QWORD PTR [rbp+0x0]
   1048a:	00 00                	add    BYTE PTR [rax],al
   1048c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   1048f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10495:	02 4c 0c 07          	add    cl,BYTE PTR [rsp+rcx*1+0x7]
   10499:	08 00                	or     BYTE PTR [rax],al
   1049b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1049e:	00 00                	add    BYTE PTR [rax],al
   104a0:	c8 0d 00 00          	enter  0xd,0x0
   104a4:	d2 aa ff ff 30 00    	shr    BYTE PTR [rdx+0x30ffff],cl
   104aa:	00 00                	add    BYTE PTR [rax],al
   104ac:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   104af:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   104b5:	67 0c 07             	addr32 or al,0x7
   104b8:	08 00                	or     BYTE PTR [rax],al
   104ba:	00 00                	add    BYTE PTR [rax],al
   104bc:	1c 00                	sbb    al,0x0
   104be:	00 00                	add    BYTE PTR [rax],al
   104c0:	e8 0d 00 00 e2       	call   ffffffffe20104d2 <_end+0xffffffffe1ed3cca>
   104c5:	aa                   	stos   BYTE PTR es:[rdi],al
   104c6:	ff                   	(bad)  
   104c7:	ff 67 00             	jmp    QWORD PTR [rdi+0x0]
   104ca:	00 00                	add    BYTE PTR [rax],al
   104cc:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   104cf:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   104d5:	02 5e 0c             	add    bl,BYTE PTR [rsi+0xc]
   104d8:	07                   	(bad)  
   104d9:	08 00                	or     BYTE PTR [rax],al
   104db:	00 20                	add    BYTE PTR [rax],ah
   104dd:	00 00                	add    BYTE PTR [rax],al
   104df:	00 08                	add    BYTE PTR [rax],cl
   104e1:	0e                   	(bad)  
   104e2:	00 00                	add    BYTE PTR [rax],al
   104e4:	29 ab ff ff 0c 0f    	sub    DWORD PTR [rbx+0xf0cffff],ebp
   104ea:	00 00                	add    BYTE PTR [rax],al
   104ec:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   104ef:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   104f5:	48 83 03 03          	add    QWORD PTR [rbx],0x3
   104f9:	fb                   	sti    
   104fa:	0e                   	(bad)  
   104fb:	0c 07                	or     al,0x7
   104fd:	08 00                	or     BYTE PTR [rax],al
   104ff:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   10502:	00 00                	add    BYTE PTR [rax],al
   10504:	2c 0e                	sub    al,0xe
   10506:	00 00                	add    BYTE PTR [rax],al
   10508:	11 ba ff ff 46 00    	adc    DWORD PTR [rdx+0x46ffff],edi
   1050e:	00 00                	add    BYTE PTR [rax],al
   10510:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   10513:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10519:	7d 0c                	jge    10527 <__GNU_EH_FRAME_HDR+0x122f>
   1051b:	07                   	(bad)  
   1051c:	08 00                	or     BYTE PTR [rax],al
   1051e:	00 00                	add    BYTE PTR [rax],al
   10520:	24 00                	and    al,0x0
   10522:	00 00                	add    BYTE PTR [rax],al
   10524:	4c 0e                	rex.WR (bad) 
   10526:	00 00                	add    BYTE PTR [rax],al
   10528:	37                   	(bad)  
   10529:	ba ff ff 3b 02       	mov    edx,0x23bffff
   1052e:	00 00                	add    BYTE PTR [rax],al
   10530:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   10533:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10539:	4b 8f 03             	rex.WXB pop QWORD PTR [r11]
   1053c:	8e 04 8c             	mov    es,WORD PTR [rsp+rcx*4]
   1053f:	05 83 06 03 27       	add    eax,0x27030683
   10544:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
   10547:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
   1054a:	00 00                	add    BYTE PTR [rax],al
   1054c:	74 0e                	je     1055c <__GNU_EH_FRAME_HDR+0x1264>
   1054e:	00 00                	add    BYTE PTR [rax],al
   10550:	4a bc ff ff a5 01 00 	rex.WX movabs rsp,0x4500000001a5ffff
   10557:	00 00 45 
   1055a:	0e                   	(bad)  
   1055b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10561:	03 9c 01 0c 07 08 00 	add    ebx,DWORD PTR [rcx+rax*1+0x8070c]
   10568:	1c 00                	sbb    al,0x0
   1056a:	00 00                	add    BYTE PTR [rax],al
   1056c:	94                   	xchg   esp,eax
   1056d:	0e                   	(bad)  
   1056e:	00 00                	add    BYTE PTR [rax],al
   10570:	cf                   	iret   
   10571:	bd ff ff 12 01       	mov    ebp,0x112ffff
   10576:	00 00                	add    BYTE PTR [rax],al
   10578:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   1057b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10581:	03 09                	add    ecx,DWORD PTR [rcx]
   10583:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
   10586:	08 00                	or     BYTE PTR [rax],al
   10588:	24 00                	and    al,0x0
   1058a:	00 00                	add    BYTE PTR [rax],al
   1058c:	b4 0e                	mov    ah,0xe
   1058e:	00 00                	add    BYTE PTR [rax],al
   10590:	c1 be ff ff bc 00 00 	sar    DWORD PTR [rsi+0xbcffff],0x0
   10597:	00 00                	add    BYTE PTR [rax],al
   10599:	45 0e                	rex.RB (bad) 
   1059b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   105a1:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
   105a5:	ae                   	scas   al,BYTE PTR es:[rdi]
   105a6:	0c 07                	or     al,0x7
   105a8:	08 00                	or     BYTE PTR [rax],al
   105aa:	00 00                	add    BYTE PTR [rax],al
   105ac:	00 00                	add    BYTE PTR [rax],al
   105ae:	00 00                	add    BYTE PTR [rax],al
   105b0:	24 00                	and    al,0x0
   105b2:	00 00                	add    BYTE PTR [rax],al
   105b4:	dc 0e                	fmul   QWORD PTR [rsi]
   105b6:	00 00                	add    BYTE PTR [rax],al
   105b8:	55                   	push   rbp
   105b9:	bf ff ff 9b 01       	mov    edi,0x19bffff
   105be:	00 00                	add    BYTE PTR [rax],al
   105c0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   105c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   105c9:	47 8c 03             	rex.RXB mov WORD PTR [r11],es
   105cc:	83 04 03 8b          	add    DWORD PTR [rbx+rax*1],0xffffff8b
   105d0:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
   105d3:	08 00                	or     BYTE PTR [rax],al
   105d5:	00 00                	add    BYTE PTR [rax],al
   105d7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   105da:	00 00                	add    BYTE PTR [rax],al
   105dc:	04 0f                	add    al,0xf
   105de:	00 00                	add    BYTE PTR [rax],al
   105e0:	c8 c0 ff ff          	enter  0xffc0,0xff
   105e4:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   105e5:	00 00                	add    BYTE PTR [rax],al
   105e7:	00 00                	add    BYTE PTR [rax],al
   105e9:	45 0e                	rex.RB (bad) 
   105eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   105f1:	02 9c 0c 07 08 00 00 	add    bl,BYTE PTR [rsp+rcx*1+0x807]
   105f8:	1c 00                	sbb    al,0x0
   105fa:	00 00                	add    BYTE PTR [rax],al
   105fc:	24 0f                	and    al,0xf
   105fe:	00 00                	add    BYTE PTR [rax],al
   10600:	4d c1 ff ff          	rex.WRB sar r15,0xff
   10604:	43 01 00             	rex.XB add DWORD PTR [r8],eax
   10607:	00 00                	add    BYTE PTR [rax],al
   10609:	45 0e                	rex.RB (bad) 
   1060b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10611:	03 3a                	add    edi,DWORD PTR [rdx]
   10613:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
   10616:	08 00                	or     BYTE PTR [rax],al
   10618:	1c 00                	sbb    al,0x0
   1061a:	00 00                	add    BYTE PTR [rax],al
   1061c:	44 0f 00 00          	rex.R sldt WORD PTR [rax]
   10620:	70 c2                	jo     105e4 <__GNU_EH_FRAME_HDR+0x12ec>
   10622:	ff                   	(bad)  
   10623:	ff f3                	push   rbx
   10625:	00 00                	add    BYTE PTR [rax],al
   10627:	00 00                	add    BYTE PTR [rax],al
   10629:	45 0e                	rex.RB (bad) 
   1062b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10631:	02 ea                	add    ch,dl
   10633:	0c 07                	or     al,0x7
   10635:	08 00                	or     BYTE PTR [rax],al
   10637:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1063a:	00 00                	add    BYTE PTR [rax],al
   1063c:	64 0f 00 00          	sldt   WORD PTR fs:[rax]
   10640:	43 c3                	rex.XB ret 
   10642:	ff                   	(bad)  
   10643:	ff b3 01 00 00 00    	push   QWORD PTR [rbx+0x1]
   10649:	45 0e                	rex.RB (bad) 
   1064b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10651:	48 83 03 00          	add    QWORD PTR [rbx],0x0
   10655:	00 00                	add    BYTE PTR [rax],al
   10657:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1065a:	00 00                	add    BYTE PTR [rax],al
   1065c:	84 0f                	test   BYTE PTR [rdi],cl
   1065e:	00 00                	add    BYTE PTR [rax],al
   10660:	d6                   	(bad)  
   10661:	c4                   	(bad)  
   10662:	ff                   	(bad)  
   10663:	ff                   	(bad)  
   10664:	7a 00                	jp     10666 <__GNU_EH_FRAME_HDR+0x136e>
   10666:	00 00                	add    BYTE PTR [rax],al
   10668:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   1066b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10671:	02 71 0c             	add    dh,BYTE PTR [rcx+0xc]
   10674:	07                   	(bad)  
   10675:	08 00                	or     BYTE PTR [rax],al
   10677:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1067a:	00 00                	add    BYTE PTR [rax],al
   1067c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1067d:	0f 00 00             	sldt   WORD PTR [rax]
   10680:	30 c5                	xor    ch,al
   10682:	ff                   	(bad)  
   10683:	ff 86 00 00 00 00    	inc    DWORD PTR [rsi+0x0]
   10689:	45 0e                	rex.RB (bad) 
   1068b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10691:	02 7d 0c             	add    bh,BYTE PTR [rbp+0xc]
   10694:	07                   	(bad)  
   10695:	08 00                	or     BYTE PTR [rax],al
   10697:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1069a:	00 00                	add    BYTE PTR [rax],al
   1069c:	c4                   	(bad)  
   1069d:	0f 00 00             	sldt   WORD PTR [rax]
   106a0:	96                   	xchg   esi,eax
   106a1:	c5 ff ff             	(bad)  
   106a4:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
   106a7:	00 00                	add    BYTE PTR [rax],al
   106a9:	45 0e                	rex.RB (bad) 
   106ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   106b1:	02 44 0c 07          	add    al,BYTE PTR [rsp+rcx*1+0x7]
   106b5:	08 00                	or     BYTE PTR [rax],al
	...

00000000000106b8 <__FRAME_END__>:
   106b8:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .tbss:

0000000000011b48 <message_buffer+0x116c8>:
	...

Disassembly of section .init_array:

0000000000011b48 <__frame_dummy_init_array_entry>:
   11b48:	00 2a                	add    BYTE PTR [rdx],ch
   11b4a:	00 00                	add    BYTE PTR [rax],al
   11b4c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000011b50 <__do_global_dtors_aux_fini_array_entry>:
   11b50:	c0 29 00             	shr    BYTE PTR [rcx],0x0
   11b53:	00 00                	add    BYTE PTR [rax],al
   11b55:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000011b58 <_DYNAMIC>:
   11b58:	01 00                	add    DWORD PTR [rax],eax
   11b5a:	00 00                	add    BYTE PTR [rax],al
   11b5c:	00 00                	add    BYTE PTR [rax],al
   11b5e:	00 00                	add    BYTE PTR [rax],al
   11b60:	d4                   	(bad)  
   11b61:	02 00                	add    al,BYTE PTR [rax]
   11b63:	00 00                	add    BYTE PTR [rax],al
   11b65:	00 00                	add    BYTE PTR [rax],al
   11b67:	00 01                	add    BYTE PTR [rcx],al
   11b69:	00 00                	add    BYTE PTR [rax],al
   11b6b:	00 00                	add    BYTE PTR [rax],al
   11b6d:	00 00                	add    BYTE PTR [rax],al
   11b6f:	00 e3                	add    bl,ah
   11b71:	02 00                	add    al,BYTE PTR [rax]
   11b73:	00 00                	add    BYTE PTR [rax],al
   11b75:	00 00                	add    BYTE PTR [rax],al
   11b77:	00 01                	add    BYTE PTR [rcx],al
   11b79:	00 00                	add    BYTE PTR [rax],al
   11b7b:	00 00                	add    BYTE PTR [rax],al
   11b7d:	00 00                	add    BYTE PTR [rax],al
   11b7f:	00 f4                	add    ah,dh
   11b81:	02 00                	add    al,BYTE PTR [rax]
   11b83:	00 00                	add    BYTE PTR [rax],al
   11b85:	00 00                	add    BYTE PTR [rax],al
   11b87:	00 01                	add    BYTE PTR [rcx],al
   11b89:	00 00                	add    BYTE PTR [rax],al
   11b8b:	00 00                	add    BYTE PTR [rax],al
   11b8d:	00 00                	add    BYTE PTR [rax],al
   11b8f:	00 04 03             	add    BYTE PTR [rbx+rax*1],al
   11b92:	00 00                	add    BYTE PTR [rax],al
   11b94:	00 00                	add    BYTE PTR [rax],al
   11b96:	00 00                	add    BYTE PTR [rax],al
   11b98:	01 00                	add    DWORD PTR [rax],eax
   11b9a:	00 00                	add    BYTE PTR [rax],al
   11b9c:	00 00                	add    BYTE PTR [rax],al
   11b9e:	00 00                	add    BYTE PTR [rax],al
   11ba0:	13 03                	adc    eax,DWORD PTR [rbx]
   11ba2:	00 00                	add    BYTE PTR [rax],al
   11ba4:	00 00                	add    BYTE PTR [rax],al
   11ba6:	00 00                	add    BYTE PTR [rax],al
   11ba8:	0c 00                	or     al,0x0
   11baa:	00 00                	add    BYTE PTR [rax],al
   11bac:	00 00                	add    BYTE PTR [rax],al
   11bae:	00 00                	add    BYTE PTR [rax],al
   11bb0:	00 20                	add    BYTE PTR [rax],ah
   11bb2:	00 00                	add    BYTE PTR [rax],al
   11bb4:	00 00                	add    BYTE PTR [rax],al
   11bb6:	00 00                	add    BYTE PTR [rax],al
   11bb8:	0d 00 00 00 00       	or     eax,0x0
   11bbd:	00 00                	add    BYTE PTR [rax],al
   11bbf:	00 84 cc 00 00 00 00 	add    BYTE PTR [rsp+rcx*8+0x0],al
   11bc6:	00 00                	add    BYTE PTR [rax],al
   11bc8:	19 00                	sbb    DWORD PTR [rax],eax
   11bca:	00 00                	add    BYTE PTR [rax],al
   11bcc:	00 00                	add    BYTE PTR [rax],al
   11bce:	00 00                	add    BYTE PTR [rax],al
   11bd0:	48 1b 01             	sbb    rax,QWORD PTR [rcx]
   11bd3:	00 00                	add    BYTE PTR [rax],al
   11bd5:	00 00                	add    BYTE PTR [rax],al
   11bd7:	00 1b                	add    BYTE PTR [rbx],bl
   11bd9:	00 00                	add    BYTE PTR [rax],al
   11bdb:	00 00                	add    BYTE PTR [rax],al
   11bdd:	00 00                	add    BYTE PTR [rax],al
   11bdf:	00 08                	add    BYTE PTR [rax],cl
   11be1:	00 00                	add    BYTE PTR [rax],al
   11be3:	00 00                	add    BYTE PTR [rax],al
   11be5:	00 00                	add    BYTE PTR [rax],al
   11be7:	00 1a                	add    BYTE PTR [rdx],bl
   11be9:	00 00                	add    BYTE PTR [rax],al
   11beb:	00 00                	add    BYTE PTR [rax],al
   11bed:	00 00                	add    BYTE PTR [rax],al
   11bef:	00 50 1b             	add    BYTE PTR [rax+0x1b],dl
   11bf2:	01 00                	add    DWORD PTR [rax],eax
   11bf4:	00 00                	add    BYTE PTR [rax],al
   11bf6:	00 00                	add    BYTE PTR [rax],al
   11bf8:	1c 00                	sbb    al,0x0
   11bfa:	00 00                	add    BYTE PTR [rax],al
   11bfc:	00 00                	add    BYTE PTR [rax],al
   11bfe:	00 00                	add    BYTE PTR [rax],al
   11c00:	08 00                	or     BYTE PTR [rax],al
   11c02:	00 00                	add    BYTE PTR [rax],al
   11c04:	00 00                	add    BYTE PTR [rax],al
   11c06:	00 00                	add    BYTE PTR [rax],al
   11c08:	f5                   	cmc    
   11c09:	fe                   	(bad)  
   11c0a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   11c0d:	00 00                	add    BYTE PTR [rax],al
   11c0f:	00 e8                	add    al,ch
   11c11:	03 00                	add    eax,DWORD PTR [rax]
   11c13:	00 00                	add    BYTE PTR [rax],al
   11c15:	00 00                	add    BYTE PTR [rax],al
   11c17:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 11c1d <_DYNAMIC+0xc5>
   11c1d:	00 00                	add    BYTE PTR [rax],al
   11c1f:	00 80 0b 00 00 00    	add    BYTE PTR [rax+0xb],al
   11c25:	00 00                	add    BYTE PTR [rax],al
   11c27:	00 06                	add    BYTE PTR [rsi],al
   11c29:	00 00                	add    BYTE PTR [rax],al
   11c2b:	00 00                	add    BYTE PTR [rax],al
   11c2d:	00 00                	add    BYTE PTR [rax],al
   11c2f:	00 18                	add    BYTE PTR [rax],bl
   11c31:	04 00                	add    al,0x0
   11c33:	00 00                	add    BYTE PTR [rax],al
   11c35:	00 00                	add    BYTE PTR [rax],al
   11c37:	00 0a                	add    BYTE PTR [rdx],cl
   11c39:	00 00                	add    BYTE PTR [rax],al
   11c3b:	00 00                	add    BYTE PTR [rax],al
   11c3d:	00 00                	add    BYTE PTR [rax],al
   11c3f:	00 60 03             	add    BYTE PTR [rax+0x3],ah
   11c42:	00 00                	add    BYTE PTR [rax],al
   11c44:	00 00                	add    BYTE PTR [rax],al
   11c46:	00 00                	add    BYTE PTR [rax],al
   11c48:	0b 00                	or     eax,DWORD PTR [rax]
   11c4a:	00 00                	add    BYTE PTR [rax],al
   11c4c:	00 00                	add    BYTE PTR [rax],al
   11c4e:	00 00                	add    BYTE PTR [rax],al
   11c50:	18 00                	sbb    BYTE PTR [rax],al
   11c52:	00 00                	add    BYTE PTR [rax],al
   11c54:	00 00                	add    BYTE PTR [rax],al
   11c56:	00 00                	add    BYTE PTR [rax],al
   11c58:	15 00 00 00 00       	adc    eax,0x0
	...
   11c65:	00 00                	add    BYTE PTR [rax],al
   11c67:	00 03                	add    BYTE PTR [rbx],al
   11c69:	00 00                	add    BYTE PTR [rax],al
   11c6b:	00 00                	add    BYTE PTR [rax],al
   11c6d:	00 00                	add    BYTE PTR [rax],al
   11c6f:	00 88 1d 01 00 00    	add    BYTE PTR [rax+0x11d],cl
   11c75:	00 00                	add    BYTE PTR [rax],al
   11c77:	00 02                	add    BYTE PTR [rdx],al
   11c79:	00 00                	add    BYTE PTR [rax],al
   11c7b:	00 00                	add    BYTE PTR [rax],al
   11c7d:	00 00                	add    BYTE PTR [rax],al
   11c7f:	00 a8 06 00 00 00    	add    BYTE PTR [rax+0x6],ch
   11c85:	00 00                	add    BYTE PTR [rax],al
   11c87:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
   11c8a:	00 00                	add    BYTE PTR [rax],al
   11c8c:	00 00                	add    BYTE PTR [rax],al
   11c8e:	00 00                	add    BYTE PTR [rax],al
   11c90:	07                   	(bad)  
   11c91:	00 00                	add    BYTE PTR [rax],al
   11c93:	00 00                	add    BYTE PTR [rax],al
   11c95:	00 00                	add    BYTE PTR [rax],al
   11c97:	00 17                	add    BYTE PTR [rdi],dl
   11c99:	00 00                	add    BYTE PTR [rax],al
   11c9b:	00 00                	add    BYTE PTR [rax],al
   11c9d:	00 00                	add    BYTE PTR [rax],al
   11c9f:	00 60 11             	add    BYTE PTR [rax+0x11],ah
   11ca2:	00 00                	add    BYTE PTR [rax],al
   11ca4:	00 00                	add    BYTE PTR [rax],al
   11ca6:	00 00                	add    BYTE PTR [rax],al
   11ca8:	07                   	(bad)  
   11ca9:	00 00                	add    BYTE PTR [rax],al
   11cab:	00 00                	add    BYTE PTR [rax],al
   11cad:	00 00                	add    BYTE PTR [rax],al
   11caf:	00 10                	add    BYTE PTR [rax],dl
   11cb1:	10 00                	adc    BYTE PTR [rax],al
   11cb3:	00 00                	add    BYTE PTR [rax],al
   11cb5:	00 00                	add    BYTE PTR [rax],al
   11cb7:	00 08                	add    BYTE PTR [rax],cl
   11cb9:	00 00                	add    BYTE PTR [rax],al
   11cbb:	00 00                	add    BYTE PTR [rax],al
   11cbd:	00 00                	add    BYTE PTR [rax],al
   11cbf:	00 50 01             	add    BYTE PTR [rax+0x1],dl
   11cc2:	00 00                	add    BYTE PTR [rax],al
   11cc4:	00 00                	add    BYTE PTR [rax],al
   11cc6:	00 00                	add    BYTE PTR [rax],al
   11cc8:	09 00                	or     DWORD PTR [rax],eax
   11cca:	00 00                	add    BYTE PTR [rax],al
   11ccc:	00 00                	add    BYTE PTR [rax],al
   11cce:	00 00                	add    BYTE PTR [rax],al
   11cd0:	18 00                	sbb    BYTE PTR [rax],al
   11cd2:	00 00                	add    BYTE PTR [rax],al
   11cd4:	00 00                	add    BYTE PTR [rax],al
   11cd6:	00 00                	add    BYTE PTR [rax],al
   11cd8:	1e                   	(bad)  
   11cd9:	00 00                	add    BYTE PTR [rax],al
   11cdb:	00 00                	add    BYTE PTR [rax],al
   11cdd:	00 00                	add    BYTE PTR [rax],al
   11cdf:	00 08                	add    BYTE PTR [rax],cl
   11ce1:	00 00                	add    BYTE PTR [rax],al
   11ce3:	00 00                	add    BYTE PTR [rax],al
   11ce5:	00 00                	add    BYTE PTR [rax],al
   11ce7:	00 fb                	add    bl,bh
   11ce9:	ff                   	(bad)  
   11cea:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   11ced:	00 00                	add    BYTE PTR [rax],al
   11cef:	00 01                	add    BYTE PTR [rcx],al
   11cf1:	00 00                	add    BYTE PTR [rax],al
   11cf3:	08 00                	or     BYTE PTR [rax],al
   11cf5:	00 00                	add    BYTE PTR [rax],al
   11cf7:	00 fe                	add    dh,bh
   11cf9:	ff                   	(bad)  
   11cfa:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   11cfd:	00 00                	add    BYTE PTR [rax],al
   11cff:	00 80 0f 00 00 00    	add    BYTE PTR [rax+0xf],al
   11d05:	00 00                	add    BYTE PTR [rax],al
   11d07:	00 ff                	add    bh,bh
   11d09:	ff                   	(bad)  
   11d0a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   11d0d:	00 00                	add    BYTE PTR [rax],al
   11d0f:	00 03                	add    BYTE PTR [rbx],al
   11d11:	00 00                	add    BYTE PTR [rax],al
   11d13:	00 00                	add    BYTE PTR [rax],al
   11d15:	00 00                	add    BYTE PTR [rax],al
   11d17:	00 f0                	add    al,dh
   11d19:	ff                   	(bad)  
   11d1a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   11d1d:	00 00                	add    BYTE PTR [rax],al
   11d1f:	00 e0                	add    al,ah
   11d21:	0e                   	(bad)  
   11d22:	00 00                	add    BYTE PTR [rax],al
   11d24:	00 00                	add    BYTE PTR [rax],al
   11d26:	00 00                	add    BYTE PTR [rax],al
   11d28:	f9                   	stc    
   11d29:	ff                   	(bad)  
   11d2a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   11d2d:	00 00                	add    BYTE PTR [rax],al
   11d2f:	00 08                	add    BYTE PTR [rax],cl
	...

Disassembly of section .got:

0000000000011d88 <_GLOBAL_OFFSET_TABLE_>:
   11d88:	58                   	pop    rax
   11d89:	1b 01                	sbb    eax,DWORD PTR [rcx]
	...
   11d9f:	00 30                	add    BYTE PTR [rax],dh
   11da1:	20 00                	and    BYTE PTR [rax],al
   11da3:	00 00                	add    BYTE PTR [rax],al
   11da5:	00 00                	add    BYTE PTR [rax],al
   11da7:	00 40 20             	add    BYTE PTR [rax+0x20],al
   11daa:	00 00                	add    BYTE PTR [rax],al
   11dac:	00 00                	add    BYTE PTR [rax],al
   11dae:	00 00                	add    BYTE PTR [rax],al
   11db0:	50                   	push   rax
   11db1:	20 00                	and    BYTE PTR [rax],al
   11db3:	00 00                	add    BYTE PTR [rax],al
   11db5:	00 00                	add    BYTE PTR [rax],al
   11db7:	00 60 20             	add    BYTE PTR [rax+0x20],ah
   11dba:	00 00                	add    BYTE PTR [rax],al
   11dbc:	00 00                	add    BYTE PTR [rax],al
   11dbe:	00 00                	add    BYTE PTR [rax],al
   11dc0:	70 20                	jo     11de2 <_GLOBAL_OFFSET_TABLE_+0x5a>
   11dc2:	00 00                	add    BYTE PTR [rax],al
   11dc4:	00 00                	add    BYTE PTR [rax],al
   11dc6:	00 00                	add    BYTE PTR [rax],al
   11dc8:	80 20 00             	and    BYTE PTR [rax],0x0
   11dcb:	00 00                	add    BYTE PTR [rax],al
   11dcd:	00 00                	add    BYTE PTR [rax],al
   11dcf:	00 90 20 00 00 00    	add    BYTE PTR [rax+0x20],dl
   11dd5:	00 00                	add    BYTE PTR [rax],al
   11dd7:	00 a0 20 00 00 00    	add    BYTE PTR [rax+0x20],ah
   11ddd:	00 00                	add    BYTE PTR [rax],al
   11ddf:	00 b0 20 00 00 00    	add    BYTE PTR [rax+0x20],dh
   11de5:	00 00                	add    BYTE PTR [rax],al
   11de7:	00 c0                	add    al,al
   11de9:	20 00                	and    BYTE PTR [rax],al
   11deb:	00 00                	add    BYTE PTR [rax],al
   11ded:	00 00                	add    BYTE PTR [rax],al
   11def:	00 d0                	add    al,dl
   11df1:	20 00                	and    BYTE PTR [rax],al
   11df3:	00 00                	add    BYTE PTR [rax],al
   11df5:	00 00                	add    BYTE PTR [rax],al
   11df7:	00 e0                	add    al,ah
   11df9:	20 00                	and    BYTE PTR [rax],al
   11dfb:	00 00                	add    BYTE PTR [rax],al
   11dfd:	00 00                	add    BYTE PTR [rax],al
   11dff:	00 f0                	add    al,dh
   11e01:	20 00                	and    BYTE PTR [rax],al
   11e03:	00 00                	add    BYTE PTR [rax],al
   11e05:	00 00                	add    BYTE PTR [rax],al
   11e07:	00 00                	add    BYTE PTR [rax],al
   11e09:	21 00                	and    DWORD PTR [rax],eax
   11e0b:	00 00                	add    BYTE PTR [rax],al
   11e0d:	00 00                	add    BYTE PTR [rax],al
   11e0f:	00 10                	add    BYTE PTR [rax],dl
   11e11:	21 00                	and    DWORD PTR [rax],eax
   11e13:	00 00                	add    BYTE PTR [rax],al
   11e15:	00 00                	add    BYTE PTR [rax],al
   11e17:	00 20                	add    BYTE PTR [rax],ah
   11e19:	21 00                	and    DWORD PTR [rax],eax
   11e1b:	00 00                	add    BYTE PTR [rax],al
   11e1d:	00 00                	add    BYTE PTR [rax],al
   11e1f:	00 30                	add    BYTE PTR [rax],dh
   11e21:	21 00                	and    DWORD PTR [rax],eax
   11e23:	00 00                	add    BYTE PTR [rax],al
   11e25:	00 00                	add    BYTE PTR [rax],al
   11e27:	00 40 21             	add    BYTE PTR [rax+0x21],al
   11e2a:	00 00                	add    BYTE PTR [rax],al
   11e2c:	00 00                	add    BYTE PTR [rax],al
   11e2e:	00 00                	add    BYTE PTR [rax],al
   11e30:	50                   	push   rax
   11e31:	21 00                	and    DWORD PTR [rax],eax
   11e33:	00 00                	add    BYTE PTR [rax],al
   11e35:	00 00                	add    BYTE PTR [rax],al
   11e37:	00 60 21             	add    BYTE PTR [rax+0x21],ah
   11e3a:	00 00                	add    BYTE PTR [rax],al
   11e3c:	00 00                	add    BYTE PTR [rax],al
   11e3e:	00 00                	add    BYTE PTR [rax],al
   11e40:	70 21                	jo     11e63 <_GLOBAL_OFFSET_TABLE_+0xdb>
   11e42:	00 00                	add    BYTE PTR [rax],al
   11e44:	00 00                	add    BYTE PTR [rax],al
   11e46:	00 00                	add    BYTE PTR [rax],al
   11e48:	80 21 00             	and    BYTE PTR [rcx],0x0
   11e4b:	00 00                	add    BYTE PTR [rax],al
   11e4d:	00 00                	add    BYTE PTR [rax],al
   11e4f:	00 90 21 00 00 00    	add    BYTE PTR [rax+0x21],dl
   11e55:	00 00                	add    BYTE PTR [rax],al
   11e57:	00 a0 21 00 00 00    	add    BYTE PTR [rax+0x21],ah
   11e5d:	00 00                	add    BYTE PTR [rax],al
   11e5f:	00 b0 21 00 00 00    	add    BYTE PTR [rax+0x21],dh
   11e65:	00 00                	add    BYTE PTR [rax],al
   11e67:	00 c0                	add    al,al
   11e69:	21 00                	and    DWORD PTR [rax],eax
   11e6b:	00 00                	add    BYTE PTR [rax],al
   11e6d:	00 00                	add    BYTE PTR [rax],al
   11e6f:	00 d0                	add    al,dl
   11e71:	21 00                	and    DWORD PTR [rax],eax
   11e73:	00 00                	add    BYTE PTR [rax],al
   11e75:	00 00                	add    BYTE PTR [rax],al
   11e77:	00 e0                	add    al,ah
   11e79:	21 00                	and    DWORD PTR [rax],eax
   11e7b:	00 00                	add    BYTE PTR [rax],al
   11e7d:	00 00                	add    BYTE PTR [rax],al
   11e7f:	00 f0                	add    al,dh
   11e81:	21 00                	and    DWORD PTR [rax],eax
   11e83:	00 00                	add    BYTE PTR [rax],al
   11e85:	00 00                	add    BYTE PTR [rax],al
   11e87:	00 00                	add    BYTE PTR [rax],al
   11e89:	22 00                	and    al,BYTE PTR [rax]
   11e8b:	00 00                	add    BYTE PTR [rax],al
   11e8d:	00 00                	add    BYTE PTR [rax],al
   11e8f:	00 10                	add    BYTE PTR [rax],dl
   11e91:	22 00                	and    al,BYTE PTR [rax]
   11e93:	00 00                	add    BYTE PTR [rax],al
   11e95:	00 00                	add    BYTE PTR [rax],al
   11e97:	00 20                	add    BYTE PTR [rax],ah
   11e99:	22 00                	and    al,BYTE PTR [rax]
   11e9b:	00 00                	add    BYTE PTR [rax],al
   11e9d:	00 00                	add    BYTE PTR [rax],al
   11e9f:	00 30                	add    BYTE PTR [rax],dh
   11ea1:	22 00                	and    al,BYTE PTR [rax]
   11ea3:	00 00                	add    BYTE PTR [rax],al
   11ea5:	00 00                	add    BYTE PTR [rax],al
   11ea7:	00 40 22             	add    BYTE PTR [rax+0x22],al
   11eaa:	00 00                	add    BYTE PTR [rax],al
   11eac:	00 00                	add    BYTE PTR [rax],al
   11eae:	00 00                	add    BYTE PTR [rax],al
   11eb0:	50                   	push   rax
   11eb1:	22 00                	and    al,BYTE PTR [rax]
   11eb3:	00 00                	add    BYTE PTR [rax],al
   11eb5:	00 00                	add    BYTE PTR [rax],al
   11eb7:	00 60 22             	add    BYTE PTR [rax+0x22],ah
   11eba:	00 00                	add    BYTE PTR [rax],al
   11ebc:	00 00                	add    BYTE PTR [rax],al
   11ebe:	00 00                	add    BYTE PTR [rax],al
   11ec0:	70 22                	jo     11ee4 <_GLOBAL_OFFSET_TABLE_+0x15c>
   11ec2:	00 00                	add    BYTE PTR [rax],al
   11ec4:	00 00                	add    BYTE PTR [rax],al
   11ec6:	00 00                	add    BYTE PTR [rax],al
   11ec8:	80 22 00             	and    BYTE PTR [rdx],0x0
   11ecb:	00 00                	add    BYTE PTR [rax],al
   11ecd:	00 00                	add    BYTE PTR [rax],al
   11ecf:	00 90 22 00 00 00    	add    BYTE PTR [rax+0x22],dl
   11ed5:	00 00                	add    BYTE PTR [rax],al
   11ed7:	00 a0 22 00 00 00    	add    BYTE PTR [rax+0x22],ah
   11edd:	00 00                	add    BYTE PTR [rax],al
   11edf:	00 b0 22 00 00 00    	add    BYTE PTR [rax+0x22],dh
   11ee5:	00 00                	add    BYTE PTR [rax],al
   11ee7:	00 c0                	add    al,al
   11ee9:	22 00                	and    al,BYTE PTR [rax]
   11eeb:	00 00                	add    BYTE PTR [rax],al
   11eed:	00 00                	add    BYTE PTR [rax],al
   11eef:	00 d0                	add    al,dl
   11ef1:	22 00                	and    al,BYTE PTR [rax]
   11ef3:	00 00                	add    BYTE PTR [rax],al
   11ef5:	00 00                	add    BYTE PTR [rax],al
   11ef7:	00 e0                	add    al,ah
   11ef9:	22 00                	and    al,BYTE PTR [rax]
   11efb:	00 00                	add    BYTE PTR [rax],al
   11efd:	00 00                	add    BYTE PTR [rax],al
   11eff:	00 f0                	add    al,dh
   11f01:	22 00                	and    al,BYTE PTR [rax]
   11f03:	00 00                	add    BYTE PTR [rax],al
   11f05:	00 00                	add    BYTE PTR [rax],al
   11f07:	00 00                	add    BYTE PTR [rax],al
   11f09:	23 00                	and    eax,DWORD PTR [rax]
   11f0b:	00 00                	add    BYTE PTR [rax],al
   11f0d:	00 00                	add    BYTE PTR [rax],al
   11f0f:	00 10                	add    BYTE PTR [rax],dl
   11f11:	23 00                	and    eax,DWORD PTR [rax]
   11f13:	00 00                	add    BYTE PTR [rax],al
   11f15:	00 00                	add    BYTE PTR [rax],al
   11f17:	00 20                	add    BYTE PTR [rax],ah
   11f19:	23 00                	and    eax,DWORD PTR [rax]
   11f1b:	00 00                	add    BYTE PTR [rax],al
   11f1d:	00 00                	add    BYTE PTR [rax],al
   11f1f:	00 30                	add    BYTE PTR [rax],dh
   11f21:	23 00                	and    eax,DWORD PTR [rax]
   11f23:	00 00                	add    BYTE PTR [rax],al
   11f25:	00 00                	add    BYTE PTR [rax],al
   11f27:	00 40 23             	add    BYTE PTR [rax+0x23],al
   11f2a:	00 00                	add    BYTE PTR [rax],al
   11f2c:	00 00                	add    BYTE PTR [rax],al
   11f2e:	00 00                	add    BYTE PTR [rax],al
   11f30:	50                   	push   rax
   11f31:	23 00                	and    eax,DWORD PTR [rax]
   11f33:	00 00                	add    BYTE PTR [rax],al
   11f35:	00 00                	add    BYTE PTR [rax],al
   11f37:	00 60 23             	add    BYTE PTR [rax+0x23],ah
   11f3a:	00 00                	add    BYTE PTR [rax],al
   11f3c:	00 00                	add    BYTE PTR [rax],al
   11f3e:	00 00                	add    BYTE PTR [rax],al
   11f40:	70 23                	jo     11f65 <_GLOBAL_OFFSET_TABLE_+0x1dd>
   11f42:	00 00                	add    BYTE PTR [rax],al
   11f44:	00 00                	add    BYTE PTR [rax],al
   11f46:	00 00                	add    BYTE PTR [rax],al
   11f48:	80 23 00             	and    BYTE PTR [rbx],0x0
   11f4b:	00 00                	add    BYTE PTR [rax],al
   11f4d:	00 00                	add    BYTE PTR [rax],al
   11f4f:	00 90 23 00 00 00    	add    BYTE PTR [rax+0x23],dl
   11f55:	00 00                	add    BYTE PTR [rax],al
   11f57:	00 a0 23 00 00 00    	add    BYTE PTR [rax+0x23],ah
   11f5d:	00 00                	add    BYTE PTR [rax],al
   11f5f:	00 b0 23 00 00 00    	add    BYTE PTR [rax+0x23],dh
   11f65:	00 00                	add    BYTE PTR [rax],al
   11f67:	00 c0                	add    al,al
   11f69:	23 00                	and    eax,DWORD PTR [rax]
   11f6b:	00 00                	add    BYTE PTR [rax],al
   11f6d:	00 00                	add    BYTE PTR [rax],al
   11f6f:	00 d0                	add    al,dl
   11f71:	23 00                	and    eax,DWORD PTR [rax]
   11f73:	00 00                	add    BYTE PTR [rax],al
   11f75:	00 00                	add    BYTE PTR [rax],al
   11f77:	00 e0                	add    al,ah
   11f79:	23 00                	and    eax,DWORD PTR [rax]
   11f7b:	00 00                	add    BYTE PTR [rax],al
   11f7d:	00 00                	add    BYTE PTR [rax],al
   11f7f:	00 f0                	add    al,dh
   11f81:	23 00                	and    eax,DWORD PTR [rax]
   11f83:	00 00                	add    BYTE PTR [rax],al
   11f85:	00 00                	add    BYTE PTR [rax],al
   11f87:	00 00                	add    BYTE PTR [rax],al
   11f89:	24 00                	and    al,0x0
   11f8b:	00 00                	add    BYTE PTR [rax],al
   11f8d:	00 00                	add    BYTE PTR [rax],al
   11f8f:	00 10                	add    BYTE PTR [rax],dl
   11f91:	24 00                	and    al,0x0
   11f93:	00 00                	add    BYTE PTR [rax],al
   11f95:	00 00                	add    BYTE PTR [rax],al
   11f97:	00 20                	add    BYTE PTR [rax],ah
   11f99:	24 00                	and    al,0x0
   11f9b:	00 00                	add    BYTE PTR [rax],al
   11f9d:	00 00                	add    BYTE PTR [rax],al
   11f9f:	00 30                	add    BYTE PTR [rax],dh
   11fa1:	24 00                	and    al,0x0
   11fa3:	00 00                	add    BYTE PTR [rax],al
   11fa5:	00 00                	add    BYTE PTR [rax],al
   11fa7:	00 40 24             	add    BYTE PTR [rax+0x24],al
   11faa:	00 00                	add    BYTE PTR [rax],al
   11fac:	00 00                	add    BYTE PTR [rax],al
   11fae:	00 00                	add    BYTE PTR [rax],al
   11fb0:	50                   	push   rax
   11fb1:	24 00                	and    al,0x0
   11fb3:	00 00                	add    BYTE PTR [rax],al
   11fb5:	00 00                	add    BYTE PTR [rax],al
   11fb7:	00 60 24             	add    BYTE PTR [rax+0x24],ah
   11fba:	00 00                	add    BYTE PTR [rax],al
   11fbc:	00 00                	add    BYTE PTR [rax],al
   11fbe:	00 00                	add    BYTE PTR [rax],al
   11fc0:	70 24                	jo     11fe6 <_GLOBAL_OFFSET_TABLE_+0x25e>
   11fc2:	00 00                	add    BYTE PTR [rax],al
   11fc4:	00 00                	add    BYTE PTR [rax],al
   11fc6:	00 00                	add    BYTE PTR [rax],al
   11fc8:	80 24 00 00          	and    BYTE PTR [rax+rax*1],0x0
   11fcc:	00 00                	add    BYTE PTR [rax],al
   11fce:	00 00                	add    BYTE PTR [rax],al
   11fd0:	90                   	nop
   11fd1:	24 00                	and    al,0x0
	...

Disassembly of section .data:

0000000000012000 <__data_start>:
	...

0000000000012008 <__dso_handle>:
   12008:	08 20                	or     BYTE PTR [rax],ah
   1200a:	01 00                	add    DWORD PTR [rax],eax
   1200c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000012010 <blk_ipv4_len>:
   12010:	ff                   	(bad)  
   12011:	ff                   	(bad)  
   12012:	ff                   	(bad)  
   12013:	ff                   	(bad)  

0000000000012014 <num_rules>:
   12014:	ff                   	(bad)  
   12015:	ff                   	(bad)  
   12016:	ff                   	(bad)  
   12017:	ff                   	(bad)  

0000000000012018 <watchlist_num>:
   12018:	ff                   	(bad)  
   12019:	ff                   	(bad)  
   1201a:	ff                   	(bad)  
   1201b:	ff                   	(bad)  

000000000001201c <arp_entries>:
   1201c:	ff                   	(bad)  
   1201d:	ff                   	(bad)  
   1201e:	ff                   	(bad)  
   1201f:	ff                 	dec    eax

0000000000012020 <spi_max>:
   12020:	c8 00 00 00          	enter  0x0,0x0

0000000000012024 <total_conversations>:
   12024:	ff                   	(bad)  
   12025:	ff                   	(bad)  
   12026:	ff                   	(bad)  
   12027:	ff                   	(bad)  

0000000000012028 <VIGIL_MODE>:
   12028:	ff                   	(bad)  
   12029:	ff 00                	inc    DWORD PTR [rax]
   1202b:	00 00                	add    BYTE PTR [rax],al
   1202d:	00 00                	add    BYTE PTR [rax],al
	...

0000000000012030 <default_config>:
   12030:	04 d0                	add    al,0xd0
   12032:	00 00                	add    BYTE PTR [rax],al
   12034:	00 00                	add    BYTE PTR [rax],al
	...

0000000000012038 <def_log_file>:
   12038:	1a d0                	sbb    dl,al
   1203a:	00 00                	add    BYTE PTR [rax],al
   1203c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000012040 <default_host_conf>:
   12040:	34 d0                	xor    al,0xd0
   12042:	00 00                	add    BYTE PTR [rax],al
   12044:	00 00                	add    BYTE PTR [rax],al
	...

0000000000012048 <get_cmd_help>:
   12048:	08 e6                	or     dh,ah
   1204a:	00 00                	add    BYTE PTR [rax],al
   1204c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000012050 <add_cmd_help>:
   12050:	e0 e6                	loopne 12038 <def_log_file>
   12052:	00 00                	add    BYTE PTR [rax],al
   12054:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .bss:

0000000000012060 <optarg@GLIBC_2.2.5>:
	...

0000000000012068 <completed.0>:
	...

0000000000012080 <demo_mode>:
   12080:	00 00                	add    BYTE PTR [rax],al
	...

0000000000012084 <strict_icmp_timestamp_req>:
   12084:	00 00                	add    BYTE PTR [rax],al
	...

0000000000012088 <strict_nmap_host_alive_check>:
	...

00000000000120a0 <threads>:
	...

00000000000122a0 <thread_count>:
   122a0:	00 00                	add    BYTE PTR [rax],al
	...

00000000000122a4 <total_pkt_captured>:
   122a4:	00 00                	add    BYTE PTR [rax],al
	...

00000000000122a8 <is_running>:
	...

00000000000122b0 <last_clean_time>:
	...

00000000000122b8 <clean_delay>:
	...

00000000000122c0 <pkt_counter>:
	...

00000000000122e0 <rules>:
	...

00000000000f42e0 <blocked_ipv4_addrs>:
	...

00000000000f4520 <watchlist>:
	...

0000000000108d20 <arpcache>:
	...

000000000010af00 <ip_addr>:
	...

000000000010af20 <debug_mode>:
	...

000000000010af21 <use_sqlite>:
	...

000000000010af40 <sqlite_db_path>:
	...

000000000010af60 <clean_delay_pkts>:
  10af60:	00 00                	add    BYTE PTR [rax],al
	...

000000000010af64 <packet_print>:
	...

000000000010af65 <quiet_exit>:
  10af65:	00 00                	add    BYTE PTR [rax],al
	...

000000000010af68 <vigil_location>:
	...

000000000010af80 <spi_table>:
	...

0000000000138f80 <input_adapter>:
	...

0000000000138f90 <output_adapter>:
	...

0000000000138fa0 <local_ip>:
	...

0000000000138fc0 <def_gw>:
	...

0000000000138fd2 <use_spi>:
	...

0000000000138fd4 <homenet>:
  138fd4:	00 00                	add    BYTE PTR [rax],al
	...

0000000000138fd8 <homenetmask>:
  138fd8:	00 00                	add    BYTE PTR [rax],al
	...

0000000000138fdc <in_test_mode>:
  138fdc:	00 00                	add    BYTE PTR [rax],al
	...

0000000000138fe0 <lua_scripts>:
	...

0000000000139800 <fn_mem_map>:
	...

000000000013c800 <fn_num>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <buffer+0x78>
   a:	74 75                	je     81 <buffer.0+0x1>
   c:	20 31                	and    BYTE PTR [rcx],dh
   e:	30 2e                	xor    BYTE PTR [rsi],ch
  10:	33 2e                	xor    ebp,DWORD PTR [rsi]
  12:	30 2d 31 75 62 75    	xor    BYTE PTR [rip+0x75627531],ch        # 75627549 <_end+0x754ead41>
  18:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  19:	74 75                	je     90 <buffer.0+0x10>
  1b:	31 29                	xor    DWORD PTR [rcx],ebp
  1d:	20 31                	and    BYTE PTR [rcx],dh
  1f:	30 2e                	xor    BYTE PTR [rsi],ch
  21:	33 2e                	xor    ebp,DWORD PTR [rsi]
  23:	30 00                	xor    BYTE PTR [rax],al
